Search.setIndex({"alltitles": {"0.1 (Aug 25, 2014)": [[416, null]], "0.10 (Jan 28, 2019)": [[417, null]], "0.11 (Mar 29, 2019)": [[418, null]], "0.12 (May 30, 2019)": [[419, null]], "0.13 (Jul 26, 2019)": [[420, null]], "0.14 (Sep 30, 2019)": [[421, null]], "0.15 (Dec 3, 2019)": [[422, null]], "0.16 (Feb 1, 2020)": [[423, null]], "0.17 (Apr 1, 2020)": [[424, null]], "0.18 (Nov 4th, 2020)": [[425, null]], "0.18.1 (Nov 6th, 2020)": [[426, null]], "0.18.2 (Nov 19th, 2020)": [[427, null]], "0.19 (Nov 22nd, 2021)": [[428, null]], "0.2 (Apr 13, 2015)": [[429, null]], "0.20 (May 12th, 2022)": [[430, null]], "0.20.1 (June 16th, 2022)": [[431, null]], "0.3 (Aug 13, 2015)": [[432, null]], "0.4 (Apr 20, 2016)": [[433, null]], "0.5 (Nov 22, 2016)": [[434, null]], "0.6 (Apr 28, 2017)": [[435, null]], "0.7 (Feb 28, 2018)": [[436, null]], "0.8 (Sep 23, 2018)": [[437, null]], "0.9 (Nov 29, 2018)": [[438, null]], "1.0 (November 10th, 2022)": [[439, null]], "1.0.1 (March 14th, 2023)": [[440, null]], "1.0.2 (December 6th, 2023)": [[441, null]], "1.1 (June 13th 2023)": [[442, null]], "1.2 (February 29th 2024)": [[443, null]], "1.3 (unreleased)": [[444, null]], "1D Spectral": [[494, "d-spectral"]], "1D spectrum simulation": [[454, null]], "2D Image": [[494, "d-image"]], "2D map fitting": [[456, null]], "3D Cube": [[494, "d-cube"]], "3D detailed analysis": [[459, null]], "3D map simulation": [[467, null]], "A fully configured Flux Points Estimation": [[478, "a-fully-configured-flux-points-estimation"]], "A note on statistics": [[451, "a-note-on-statistics"]], "A note on the internal representation": [[478, "a-note-on-the-internal-representation"]], "API Links": [[378, "api-links"]], "API changes": [[439, "api-changes"], [442, "api-changes"], [443, "api-changes"]], "API reference": [[6, null]], "ASmoothMapEstimator": [[117, null]], "Abstract": [[382, "abstract"], [383, "abstract"], [384, "abstract"], [385, "abstract"], [386, "abstract"], [387, "abstract"], [389, "abstract"], [390, "abstract"], [391, "abstract"], [392, "abstract"], [393, "abstract"], [394, "abstract"], [395, "abstract"], [396, "abstract"], [397, "abstract"], [398, "abstract"], [399, "abstract"], [400, "abstract"], [401, "abstract"], [402, "abstract"], [403, "abstract"], [404, "abstract"], [405, "abstract"]], "Acceptation of the Developer Certificate of Origin (DCO)": [[380, "acceptation-of-the-developer-certificate-of-origin-dco"]], "Accessing Data": [[482, "accessing-data"]], "Accessing and visualising results": [[455, "accessing-and-visualising-results"]], "Accessing and visualising the results": [[478, "accessing-and-visualising-the-results"]], "Accessing contents of a dataset": [[477, "accessing-contents-of-a-dataset"]], "Accessor methods": [[526, "accessor-methods"]], "Account for spectral absorption due to the EBL": [[447, null]], "Adaptive smoothing": [[455, "adaptive-smoothing"]], "AdaptiveRingBackgroundMaker": [[167, null]], "Add a model on multiple datasets": [[484, "add-a-model-on-multiple-datasets"]], "Add new parametric models": [[388, "add-new-parametric-models"]], "Adding Non-Spatial Axes": [[482, "adding-non-spatial-axes"]], "Adding Non-contiguous axes": [[482, "adding-non-contiguous-axes"]], "Additional Models": [[400, "additional-models"]], "Additional PSF classes": [[520, "additional-psf-classes"]], "Additional utilities": [[572, "additional-utilities"]], "Aim": [[484, "aim"]], "Alternative": [[401, "alternative"]], "Alternatives": [[385, "alternatives"], [388, "alternatives"], [391, "alternatives"], [393, "alternatives"], [394, "alternatives"], [395, "alternatives"], [397, "alternatives"], [398, "alternatives"], [404, "alternatives"]], "Alternatives / Outlook": [[390, "alternatives-outlook"]], "Analysis": [[15, null]], "Analysis configuration": [[452, "analysis-configuration"], [459, "analysis-configuration"], [468, "analysis-configuration"], [498, "analysis-configuration"]], "Analysis steps": [[572, "analysis-steps"]], "Analysis workflow": [[572, "analysis-workflow"]], "AnalysisConfig": [[16, null]], "As a function of of true energy and offset angle (PSF_TABLE)": [[520, "as-a-function-of-of-true-energy-and-offset-angle-gadf-psf-table"]], "Assert convention": [[377, "assert-convention"]], "Assign to model to all datasets": [[469, "assign-to-model-to-all-datasets"]], "Assigning background models to datasets": [[484, "assigning-background-models-to-datasets"]], "Astrophysical source models": [[505, null]], "Astrophysical source population models": [[504, null]], "Astrophysics": [[503, null]], "Authorship policy": [[403, "authorship-policy"]], "BACKEND_DEFAULT": [[319, null]], "BSD or GPL license?": [[377, "bsd-or-gpl-license"]], "Background": [[489, "background"], [517, null]], "Background / What we have now": [[392, "background-what-we-have-now"]], "Background Model Handling": [[399, "background-model-handling"]], "Background estimation": [[481, "background-estimation"], [522, "background-estimation"]], "Background2D": [[146, null]], "Background3D": [[147, null]], "BackgroundIRF": [[148, null]], "BackgroundIRFModel": [[388, "backgroundirfmodel"]], "BackgroundModel": [[388, "backgroundmodel"]], "Basic image exploration and fitting": [[461, null]], "Basic operators": [[482, "basic-operators"]], "Bayesian blocks": [[474, "bayesian-blocks"]], "Bin volume and angular size": [[527, "bin-volume-and-angular-size"]], "Boundary mask": [[483, "boundary-mask"]], "Broken power law spectral model": [[541, null]], "BrokenPowerLawSpectralModel": [[217, null]], "Bug fixes and improvements": [[430, "bug-fixes-and-improvements"], [439, "bug-fixes-and-improvements"], [442, "bug-fixes-and-improvements"], [443, "bug-fixes-and-improvements"]], "Build": [[407, "build"]], "Building 1D datasets from the new observations": [[469, "building-1d-datasets-from-the-new-observations"]], "Building the 1D analysis configuration": [[468, "building-the-1d-analysis-configuration"]], "Building the 3D analysis configuration": [[468, "building-the-3d-analysis-configuration"]], "Built-in models": [[571, "built-in-models"]], "Bundled gammapy.extern code": [[377, "bundled-gammapy-extern-code"]], "BurkertProfile": [[17, null]], "CATALOG_REGISTRY": [[55, null]], "CITATION.cff": [[403, "citation-cff"]], "CLUMPY": [[502, "clumpy"]], "CTA 1DC": [[489, "cta-1dc"]], "CTAO with Gammapy": [[489, null]], "Caplog fixture": [[377, "caplog-fixture"]], "Case 1: Background systematics as a nuisance parameter #3955": [[405, "case-1-background-systematics-as-a-nuisance-parameter-3955"]], "Case 2: Favoring positive values for flux amplitudes": [[405, "case-2-favoring-positive-values-for-flux-amplitudes"]], "Case 3: Support unfolding methods for spectral flux points #4122": [[405, "case-3-support-unfolding-methods-for-spectral-flux-points-4122"]], "CaseBattacharya1998": [[28, null]], "Cash : Poisson data with background model": [[575, "cash-poisson-data-with-background-model"]], "Cash counts statistic": [[576, "cash-counts-statistic"]], "CashCountsStatistic": [[285, null]], "Catalog table": [[476, "catalog-table"]], "Caveat": [[575, "caveat"]], "Changelog": [[397, "changelog"]], "Check Python code": [[378, "check-python-code"]], "Check broken links": [[378, "check-broken-links"]], "Check setup": [[446, "check-setup"], [448, "check-setup"], [451, "check-setup"], [452, "check-setup"], [453, "check-setup"], [454, "check-setup"], [455, "check-setup"], [456, "check-setup"], [457, "check-setup"], [459, "check-setup"], [460, "check-setup"], [461, "check-setup"], [462, "check-setup"], [463, "check-setup"], [464, "check-setup"], [465, "check-setup"], [468, "check-setup"], [469, "check-setup"], [470, "check-setup"], [471, "check-setup"], [475, "check-setup"], [476, "check-setup"], [477, "check-setup"], [479, "check-setup"], [481, "check-setup"], [482, "check-setup"], [483, "check-setup"], [484, "check-setup"], [485, "check-setup"], [487, "check-setup"], [489, "check-setup"], [490, "check-setup"], [491, "check-setup"], [492, "check-setup"], [498, "check-setup"], [499, "check-setup"], [500, "check-setup"]], "Check the dataset we produced": [[491, "check-the-dataset-we-produced"]], "Check your setup": [[412, "check-your-setup"]], "Checker": [[351, null]], "Choose a thumbnail and tooltip for the tutorial gallery": [[378, "choose-a-thumbnail-and-tooltip-for-the-tutorial-gallery"]], "Citation scheme": [[403, "citation-scheme"]], "Class attributes": [[378, "class-attributes"]], "Classes": [[0, "classes"], [1, "classes"], [1, "id1"], [1, "id2"], [2, "classes"], [3, "classes"], [4, "classes"], [5, "classes"], [7, "classes"], [8, "classes"], [9, "classes"], [10, "classes"], [10, "id2"], [12, "classes"], [13, "classes"], [13, "id5"], [13, "id7"], [13, "id10"], [13, "id15"], [14, "classes"]], "Clean up gammapy.utils": [[396, "clean-up-gammapy-utils"]], "Clobber or overwrite?": [[377, "clobber-or-overwrite"]], "Code in RST files": [[378, "code-in-rst-files"]], "Code in docstrings in Python files": [[378, "code-in-docstrings-in-python-files"]], "Code quality": [[407, "code-quality"]], "Collection of the personal information of authors": [[403, "collection-of-the-personal-information-of-authors"]], "Colormaps": [[579, "colormaps"]], "Combining event lists and GTIs": [[511, "combining-event-lists-and-gtis"]], "Combining two Models": [[484, "combining-two-models"]], "Command line tools": [[574, null]], "Command line tools using click": [[377, "command-line-tools-using-click"]], "Command not found": [[574, "command-not-found"]], "Common API": [[478, "common-api"]], "Compare against the literature": [[453, "compare-against-the-literature"]], "Compare results": [[468, "compare-results"]], "Compound Spectral Model": [[485, "compound-spectral-model"]], "Compound spectral model": [[542, null]], "CompoundSpectralModel": [[218, null]], "Computation times": [[445, null], [450, null], [458, null], [466, null], [472, null], [488, null], [493, null], [495, null], [497, null], [501, null], [529, null], [539, null], [560, null], [570, null]], "Compute Flux Points": [[451, "compute-flux-points"]], "Compute correlated significance and correlated excess maps": [[457, "compute-correlated-significance-and-correlated-excess-maps"]], "Compute images": [[461, "compute-images"]], "Compute sensitivity": [[446, "compute-sensitivity"]], "Computing contours using stat_contour": [[479, "computing-contours-using-stat-contour"]], "Computing contours using stat_surface": [[479, "computing-contours-using-stat-surface"]], "Computing flux points": [[499, "computing-flux-points"]], "Conda Environments": [[408, "conda-environments"]], "Confidence contours": [[479, "confidence-contours"]], "Configurable analysis": [[572, "configurable-analysis"]], "Configuration": [[465, "configuration"]], "Configuration for stacked and joint analysis": [[459, "configuration-for-stacked-and-joint-analysis"]], "Configuration of the analysis": [[452, "configuration-of-the-analysis"]], "Constant spatial model": [[530, null]], "Constant spectral model": [[543, null]], "Constant temporal model": [[561, null]], "ConstantFluxSpatialModel": [[219, null]], "ConstantSpatialModel": [[220, null]], "ConstantSpectralModel": [[221, null]], "ConstantTemporalModel": [[222, null]], "Context": [[448, "context"], [449, "context"], [451, "context"], [452, "context"], [453, "context"], [454, "context"], [455, "context"], [456, "context"], [457, "context"], [460, "context"], [462, "context"], [463, "context"], [465, "context"], [467, "context"], [468, "context"], [469, "context"], [470, "context"], [473, "context"], [474, "context"], [483, "context"], [486, "context"], [487, "context"], [498, "context"], [499, "context"]], "Continuous integration": [[407, "continuous-integration"]], "Contribution in conferences": [[403, "contribution-in-conferences"]], "Contributors": [[416, "contributors"], [417, "contributors"], [418, "contributors"], [419, "contributors"], [420, "contributors"], [421, "contributors"], [422, "contributors"], [423, "contributors"], [424, "contributors"], [425, "contributors"], [428, "contributors"], [429, "contributors"], [430, "contributors"], [431, "contributors"], [432, "contributors"], [433, "contributors"], [434, "contributors"], [435, "contributors"], [436, "contributors"], [437, "contributors"], [438, "contributors"], [439, "contributors"], [440, "contributors"], [441, "contributors"], [442, "contributors"], [443, "contributors"]], "Convert a jupyter notebook to python script in the sphinx-gallery format": [[377, "convert-a-jupyter-notebook-to-python-script-in-the-sphinx-gallery-format"]], "Coordinate and axis names": [[377, "coordinate-and-axis-names"]], "Coordinates defined by the RegionGeom": [[527, "coordinates-defined-by-the-regiongeom"]], "Correct format for bullet point list": [[378, "correct-format-for-bullet-point-list"]], "Counts": [[490, "counts"]], "Counts and fit statistics": [[576, "counts-and-fit-statistics"]], "Counts statistics classes": [[576, "counts-statistics-classes"]], "Covariance": [[208, null]], "Covariance and parameters errors": [[479, "covariance-and-parameters-errors"]], "CovarianceResult": [[209, null]], "Create DL4 product - PSFMap": [[480, "create-dl4-product-psfmap"]], "Create a FluxMaps object through one of the estimators.": [[478, "create-a-fluxmaps-object-through-one-of-the-estimators"]], "Create a mask in energy": [[483, "create-a-mask-in-energy"]], "Create a stacked dataset": [[457, "create-a-stacked-dataset"]], "Create edisp kernel map": [[480, "create-edisp-kernel-map"]], "Create exclusion mask": [[451, "create-exclusion-mask"], [457, "create-exclusion-mask"]], "Create exposure map": [[480, "create-exposure-map"]], "Create the energy-dependent temporal model": [[464, "create-the-energy-dependent-temporal-model"]], "Create the maker classes to be used": [[499, "create-the-maker-classes-to-be-used"]], "Create the makers": [[448, "create-the-makers"]], "Create the mask from a catalog of sources": [[483, "create-the-mask-from-a-catalog-of-sources"]], "Create the mask from a list of regions": [[483, "create-the-mask-from-a-list-of-regions"]], "Create the mask from statistically significant pixels in a dataset": [[483, "create-the-mask-from-statistically-significant-pixels-in-a-dataset"]], "Create the mask map": [[483, "create-the-mask-map"]], "Create the temporal model and write it to disk": [[464, "create-the-temporal-model-and-write-it-to-disk"]], "Creating WCS Maps": [[482, "creating-wcs-maps"]], "Creating a RegionGeom": [[527, "creating-a-regiongeom"]], "Creating a RegionNDMap": [[527, "creating-a-regionndmap"]], "Creating a mask for fitting": [[483, "creating-a-mask-for-fitting"]], "Creating a mask manually": [[483, "creating-a-mask-manually"]], "Creating an empty dataset": [[477, "creating-an-empty-dataset"]], "Creating an exclusion mask": [[483, "creating-an-exclusion-mask"]], "Creating from a Map Geometry": [[482, "creating-from-a-map-geometry"]], "Creating the config file": [[456, "creating-the-config-file"], [457, "creating-the-config-file"]], "Creation of the Flux points": [[452, "creation-of-the-flux-points"]], "Creation of the data reduction makers": [[469, "creation-of-the-data-reduction-makers"]], "Creation of the datasets": [[469, "creation-of-the-datasets"]], "Creation of the model": [[452, "creation-of-the-model"]], "Cube plotting": [[482, "cube-plotting"]], "Cumulative excess and significance": [[448, "cumulative-excess-and-significance"]], "Current status": [[402, "current-status"]], "Custom models": [[571, "custom-models"]], "Cutouts": [[482, "cutouts"]], "Cython": [[407, "cython"]], "DATASET_REGISTRY": [[98, null]], "DCO implementation": [[403, "dco-implementation"]], "DL3 DR1": [[492, "dl3-dr1"]], "DMProfile": [[18, null]], "D_SUN_TO_GALACTIC_CENTER": [[304, null]], "Dark matter": [[502, null]], "Dark matter spatial and spectral models": [[475, null]], "DarkMatterAnnihilationSpectralModel": [[19, null]], "DarkMatterDecaySpectralModel": [[20, null]], "Data Fitting": [[392, "data-fitting"]], "Data access and selection (DL3)": [[511, null]], "Data analysis": [[494, "data-analysis"]], "Data analysis subpackages in gammapy": [[383, "data-analysis-subpackages-in-gammapy"]], "Data and Observation handling": [[386, "data-and-observation-handling"]], "Data and models files": [[460, "data-and-models-files"]], "Data exploration": [[494, "data-exploration"]], "Data reduction": [[392, "data-reduction"], [459, "data-reduction"], [459, "id1"], [473, "data-reduction"], [498, "data-reduction"], [499, "data-reduction"]], "Data reduction (DL3 to DL4)": [[522, null]], "Data reduction into a MapDataset": [[491, "data-reduction-into-a-mapdataset"]], "Data reduction loop": [[481, "data-reduction-loop"]], "Data selection": [[473, "data-selection"]], "Data structures": [[500, null]], "DataStore": [[82, null]], "Dataset": [[99, null], [389, "dataset"], [481, "dataset"]], "Dataset helper / convenience methods": [[389, "dataset-helper-convenience-methods"]], "Dataset serialization": [[389, "dataset-serialization"]], "Dataset simulations": [[453, "dataset-simulations"]], "Dataset specific quantities (\u201ccounts like\u201d)": [[478, "dataset-specific-quantities-counts-like"]], "DatasetModels": [[223, null]], "Datasets": [[100, null], [386, "datasets"], [389, "datasets"], [404, "datasets"], [477, "datasets"]], "Datasets (DL4)": [[510, null]], "Datasets - Reduced data, IRFs, models": [[477, null]], "Datasets serialization": [[460, "datasets-serialization"]], "DatasetsMaker": [[168, null]], "Datastore": [[489, "datastore"]], "Dealing with links": [[378, "dealing-with-links"]], "Decision": [[382, "decision"], [383, "decision"], [384, "decision"], [385, "decision"], [386, "decision"], [387, "decision"], [388, "decision"], [389, "decision"], [390, "decision"], [391, "decision"], [392, "decision"], [393, "decision"], [394, "decision"], [395, "decision"], [396, "decision"], [397, "decision"], [398, "decision"], [399, "decision"], [400, "decision"], [401, "decision"], [402, "decision"], [403, "decision"], [404, "decision"], [405, "decision"]], "Define Target Region": [[451, "define-target-region"]], "Define an Observation": [[463, "define-an-observation"]], "Define an observation and make a dataset": [[464, "define-an-observation-and-make-a-dataset"]], "Define analysis region and energy binning": [[446, "define-analysis-region-and-energy-binning"]], "Define map geometry": [[461, "define-map-geometry"]], "Define the MapDataset": [[463, "define-the-mapdataset"]], "Define the ON region": [[453, "define-the-on-region"]], "Define the Sky model: a point-like source": [[463, "define-the-sky-model-a-point-like-source"]], "Define the geometries": [[448, "define-the-geometries"]], "Define the geometry": [[483, "define-the-geometry"]], "Define the model": [[499, "define-the-model"]], "Define the model to be used": [[468, "define-the-model-to-be-used"], [468, "id3"]], "Define the simulation source model": [[464, "define-the-simulation-source-model"]], "Define time intervals": [[469, "define-time-intervals"]], "Define underlying model": [[469, "define-underlying-model"]], "Defining the datastore and selecting observations": [[499, "defining-the-datastore-and-selecting-observations"]], "Defining the geometry": [[469, "defining-the-geometry"]], "Definition of a Contributor": [[403, "definition-of-a-contributor"]], "Definition of the Maintainer": [[403, "definition-of-the-maintainer"]], "Definition of the data selection": [[468, "definition-of-the-data-selection"], [468, "id1"]], "Definition of the dataset geometry": [[468, "definition-of-the-dataset-geometry"], [468, "id2"]], "Dependencies": [[376, null], [394, "dependencies"]], "Deprecating a function or a class": [[377, "deprecating-a-function-or-a-class"]], "Deprecation": [[402, "deprecation"]], "Derivation of the WStat formula": [[577, null]], "Detailed plan": [[384, "detailed-plan"]], "Developer How To": [[377, null]], "Developer guide": [[379, null]], "Discussion / Alternatives": [[392, "discussion-alternatives"]], "Disk spatial model": [[531, null]], "DiskSpatialModel": [[224, null]], "Dissolve gammapy.background": [[396, "dissolve-gammapy-background"]], "Dissolve gammapy.image": [[396, "dissolve-gammapy-image"]], "Distributions": [[394, "distributions"], [394, "id1"]], "Documentation": [[386, "documentation"], [443, "documentation"]], "Documentation How To": [[378, null]], "Documentation building": [[378, "documentation-building"]], "Documentation guidelines": [[378, "documentation-guidelines"]], "Download": [[407, "download"]], "EBL absorption spectral model": [[540, null]], "EBLAbsorptionNormSpectralModel": [[225, null]], "EBL_DATA_BUILTIN": [[226, null]], "EDispKernel": [[149, null]], "EDispKernelMap": [[150, null]], "EDispMap": [[151, null]], "ESTIMATOR_REGISTRY": [[118, null]], "Effective Area": [[480, "effective-area"]], "Effective area": [[489, "effective-area"], [516, null]], "EffectiveAreaTable2D": [[152, null]], "EinastoProfile": [[21, null]], "Energy Dependent Spatial Models": [[400, "energy-dependent-spatial-models"]], "Energy Dispersion": [[480, "energy-dispersion"], [490, "energy-dispersion"], [518, null]], "Energy dispersion": [[489, "energy-dispersion"]], "Energy edges": [[512, "energy-edges"]], "EnergyDependentMorphologyEstimator": [[119, null]], "EnergyDependentMultiGaussPSF": [[153, null]], "EnergyDispersion2D": [[154, null]], "Estimating TS": [[576, "estimating-ts"]], "Estimation of time variability in a lightcurve": [[474, null]], "Estimator": [[120, null]], "Estimators": [[404, "estimators"], [478, null]], "Estimators (DL4 to DL5, and DL6)": [[512, null]], "Event Simulation": [[386, "event-simulation"]], "Event lists": [[500, "event-lists"]], "Event sampling": [[463, null]], "EventList": [[83, null]], "EventListMetaData": [[84, null]], "Events": [[489, "events"], [490, "events"]], "Example": [[575, "example"], [575, "id2"]], "Example 1: Including Prior Information about the Sources Index": [[487, "example-1-including-prior-information-about-the-sources-index"]], "Example 2: Encouraging Positive Amplitude Values": [[487, "example-2-encouraging-positive-amplitude-values"]], "Example of extrapolation": [[559, "example-of-extrapolation"]], "Example plot": [[530, "example-plot"], [531, "example-plot"], [532, "example-plot"], [533, "example-plot"], [534, "example-plot"], [535, "example-plot"], [536, "example-plot"], [537, "example-plot"], [538, "example-plot"], [540, "example-plot"], [541, "example-plot"], [542, "example-plot"], [543, "example-plot"], [544, "example-plot"], [545, "example-plot"], [546, "example-plot"], [547, "example-plot"], [548, "example-plot"], [549, "example-plot"], [550, "example-plot"], [551, "example-plot"], [552, "example-plot"], [553, "example-plot"], [554, "example-plot"], [555, "example-plot"], [556, "example-plot"], [557, "example-plot"], [558, "example-plot"], [559, "example-plot"], [561, "example-plot"], [562, "example-plot"], [563, "example-plot"], [564, "example-plot"], [565, "example-plot"], [566, "example-plot"], [567, "example-plot"]], "Examples using FluxPointsEstimator": [[512, "examples-using-fluxpointsestimator"]], "Examples using LightCurveEstimator": [[512, "examples-using-lightcurveestimator"]], "Examples using MapDataset": [[510, "examples-using-mapdataset"]], "Examples using MapDatasetMaker": [[522, "examples-using-mapdatasetmaker"]], "Examples using SpectrumDataset": [[510, "examples-using-spectrumdataset"]], "Examples using SpectrumDatasetMaker": [[522, "examples-using-spectrumdatasetmaker"]], "Examples using gammapy.analysis.Analysis": [[513, "examples-using-gammapy-analysis-analysis"]], "Examples using gammapy.makers.FoVBackgroundMaker": [[521, "examples-using-gammapy-makers-fovbackgroundmaker"]], "Examples using gammapy.makers.ReflectedRegionsBackgroundMaker": [[523, "examples-using-gammapy-makers-reflectedregionsbackgroundmaker"]], "Excess and Significance": [[576, "excess-and-significance"], [576, "id2"]], "Excess errors": [[576, "excess-errors"], [576, "id4"]], "Excess estimators": [[401, "excess-estimators"]], "ExcessMapEstimator": [[121, null]], "Exclusion masks": [[483, "exclusion-masks"]], "Execution": [[574, "execution"]], "Exemplary additional prior subclasses:": [[405, "exemplary-additional-prior-subclasses"]], "Exercises": [[446, "exercises"], [449, "exercises"], [451, "exercises"], [454, "exercises"], [459, "exercises"], [461, "exercises"], [463, "exercises"], [464, "exercises"], [470, "exercises"], [473, "exercises"], [489, "exercises"], [490, "exercises"], [491, "exercises"], [492, "exercises"], [500, "exercises"], [500, "id1"], [500, "id2"], [500, "id3"]], "Existing code": [[383, "existing-code"]], "ExpCutoffPowerLaw3FGLSpectralModel": [[227, null]], "ExpCutoffPowerLawNormSpectralModel": [[228, null]], "ExpCutoffPowerLawSpectralModel": [[229, null]], "ExpDecay temporal model": [[562, null]], "ExpDecayTemporalModel": [[230, null]], "Expected number of detected events": [[519, "expected-number-of-detected-events"]], "Exploration of the fit results": [[452, "exploration-of-the-fit-results"]], "Explore the fit results": [[448, "explore-the-fit-results"]], "Explore the results": [[448, "explore-the-results"]], "Exponential": [[29, null]], "Exponential Cut-Off Powerlaw Fit": [[449, "exponential-cut-off-powerlaw-fit"]], "Exponential cutoff power law norm spectral model": [[546, null]], "Exponential cutoff power law spectral model": [[544, null]], "Exponential cutoff power law spectral model used for 3FGL": [[545, null]], "Expose model parameters as attributes": [[388, "expose-model-parameters-as-attributes"]], "Exposure": [[490, "exposure"]], "Extended source using a template": [[463, "extended-source-using-a-template"]], "Extract the light curve": [[469, "extract-the-light-curve"]], "Extract the lightcurve": [[470, "extract-the-lightcurve"]], "Extracting the light curve": [[468, "extracting-the-light-curve"]], "Extracting the ring background": [[457, "extracting-the-ring-background"]], "Factorisation of the IRFs": [[519, "factorisation-of-the-irfs"]], "FaucherKaspi2006": [[30, null]], "FaucherKaspi2006VelocityBimodal": [[31, null]], "FaucherKaspi2006VelocityMaxwellian": [[32, null]], "FaucherSpiral": [[33, null]], "Feature Freeze and Branching": [[406, "feature-freeze-and-branching"]], "Fermi-LAT 3FHL: map dataset for 3D analysis": [[460, "fermi-lat-3fhl-map-dataset-for-3d-analysis"]], "Fermi-LAT with Gammapy": [[490, null]], "FermiST": [[502, "fermist"]], "Files": [[489, "files"]], "Filling a RegionNDMap": [[527, "filling-a-regionndmap"]], "Filling maps from event lists": [[482, "filling-maps-from-event-lists"]], "Filling maps from interpolation": [[482, "filling-maps-from-interpolation"]], "Filter the observations list in time intervals": [[469, "filter-the-observations-list-in-time-intervals"]], "Final remarks": [[382, "final-remarks"]], "Final result": [[577, "final-result"]], "Fit": [[210, null], [467, "fit"], [490, "fit"]], "Fit quality and model residuals": [[451, "fit-quality-and-model-residuals"], [453, "fit-quality-and-model-residuals"]], "Fit quality assessment": [[479, "fit-quality-assessment"]], "Fit quality assessment and model residuals for a MapDataset": [[459, "fit-quality-assessment-and-model-residuals-for-a-mapdataset"]], "Fit quality assessment and model residuals for a joint Datasets": [[459, "fit-quality-assessment-and-model-residuals-for-a-joint-datasets"]], "Fit spectrum": [[451, "fit-spectrum"], [453, "fit-spectrum"]], "Fit statistics": [[575, null]], "Fit the datasets": [[470, "fit-the-datasets"]], "Fit the model": [[499, "fit-the-model"]], "FitResult": [[211, null]], "Fitting": [[386, "fitting"], [479, null]], "Fitting Multiple Datasets with and without the Prior": [[487, "fitting-multiple-datasets-with-and-without-the-prior"]], "Fitting a Dataset with and without the Prior": [[487, "fitting-a-dataset-with-and-without-the-prior"]], "Fitting options": [[479, "fitting-options"]], "Fitting temporal models": [[470, "fitting-temporal-models"]], "Fitting the obtained light curve": [[470, "fitting-the-obtained-light-curve"]], "Fix non-Unix line endings": [[377, "fix-non-unix-line-endings"]], "FixedPointingInfo": [[85, null]], "Float data type: 32 bit or 64 bit?": [[377, "float-data-type-32-bit-or-64-bit"]], "Flux Points Estimation": [[478, "flux-points-estimation"]], "Flux Profile Estimation": [[465, null]], "Flux maps": [[512, "flux-maps"]], "Flux maps for annihilation": [[475, "flux-maps-for-annihilation"]], "Flux maps for decay": [[475, "flux-maps-for-decay"]], "Flux point fitting": [[449, null]], "Flux points": [[476, "flux-points"], [498, "flux-points"], [512, "flux-points"]], "Flux quantities": [[512, "flux-quantities"]], "FluxMaps": [[122, null]], "FluxMetaData": [[123, null]], "FluxPoints": [[124, null]], "FluxPointsDataset": [[101, null], [389, "fluxpointsdataset"], [477, "fluxpointsdataset"]], "FluxPointsEstimator": [[125, null]], "FluxProfileEstimator": [[126, null]], "FoV background": [[481, "fov-background"], [521, null]], "FoVAlignment": [[155, null]], "FoVBackgroundMaker": [[169, null]], "FoVBackgroundModel": [[231, null]], "Fractional excess variance, point-to-point fractional variance and doubling/halving time": [[474, "fractional-excess-variance-point-to-point-fractional-variance-and-doubling-halving-time"]], "Freezing and unfreezing model parameters": [[484, "freezing-and-unfreezing-model-parameters"]], "Functions": [[1, "functions"], [3, "functions"], [4, "functions"], [4, "id1"], [5, "functions"], [7, "functions"], [8, "functions"], [9, "functions"], [10, "functions"], [10, "id1"], [10, "id3"], [12, "functions"], [13, "functions"], [13, "id1"], [13, "id2"], [13, "id3"], [13, "id4"], [13, "id6"], [13, "id8"], [13, "id9"], [13, "id12"], [13, "id13"], [13, "id14"], [13, "id16"], [13, "id17"], [14, "functions"]], "Functions or class methods that return a single object": [[378, "functions-or-class-methods-that-return-a-single-object"]], "Functions returning several values": [[377, "functions-returning-several-values"]], "Further extensions": [[447, "further-extensions"]], "Further references": [[575, "further-references"]], "GTI": [[86, null]], "Galactic diffuse background": [[490, "galactic-diffuse-background"]], "Galactocentric spatial distributions": [[504, "galactocentric-spatial-distributions"]], "Gamma-ray spectra at production": [[475, "gamma-ray-spectra-at-production"]], "Gammapy": [[414, null]], "Gammapy Binder": [[407, "id1"]], "Gammapy analysis workflow and package structure": [[572, null]], "Gammapy overview": [[397, "gammapy-overview"]], "Gammapy repository": [[407, "gammapy-repository"]], "Gammapy webpages": [[407, "gammapy-webpages"]], "Gaussian spatial model": [[532, null]], "Gaussian spectral model": [[547, null]], "Gaussian temporal model": [[563, null]], "GaussianSpatialModel": [[232, null]], "GaussianSpectralModel": [[233, null]], "GaussianTemporalModel": [[234, null]], "General Gammapy publications": [[403, "general-gammapy-publications"]], "General code style guidelines": [[383, "general-code-style-guidelines"]], "General conventions": [[377, "general-conventions"]], "General idea and class diagram": [[387, "general-idea-and-class-diagram"]], "General method": [[512, "general-method"]], "General organization of the new approach": [[392, "general-organization-of-the-new-approach"]], "Generalist estimators": [[401, "generalist-estimators"]], "Generalized Gaussian temporal model": [[564, null]], "Generalized gaussian spatial model": [[533, null]], "GeneralizedGaussianSpatialModel": [[235, null]], "GeneralizedGaussianTemporalModel": [[236, null]], "Generating log messages": [[377, "generating-log-messages"]], "Geom": [[190, null]], "Get a fit stat profile for the redshift": [[447, "get-a-fit-stat-profile-for-the-redshift"]], "Get in touch early": [[380, "get-in-touch-early"]], "Get set up": [[380, "get-set-up"]], "Get the flux points": [[447, "get-the-flux-points"]], "Getting started": [[397, "getting-started"], [409, null], [503, "getting-started"], [504, "getting-started"], [505, "getting-started"]], "Getting started section restructuring": [[397, "getting-started-section-restructuring"]], "Getting started with data": [[511, "getting-started-with-data"]], "Getting started with maps": [[526, "getting-started-with-maps"]], "Getting the reduced dataset": [[456, "getting-the-reduced-dataset"], [457, "getting-the-reduced-dataset"]], "Global Model Handling": [[399, "global-model-handling"]], "Glossary": [[573, "glossary"]], "Glossary and references": [[573, null]], "Goodness of fit": [[577, "goodness-of-fit"]], "Guidelines and specific actions": [[397, "guidelines-and-specific-actions"]], "H.E.S.S. with Gammapy": [[492, null]], "HAWC data access and reduction": [[491, "hawc-data-access-and-reduction"]], "HAWC with Gammapy": [[491, null]], "HAWC: 1D dataset for flux point fitting": [[460, "hawc-1d-dataset-for-flux-point-fitting"]], "HDUIndexTable": [[87, null]], "HDULocation": [[312, null]], "HEALPix geometry": [[525, "healpix-geometry"]], "HEALPix-based maps": [[525, null]], "HESS-DL3: 1D ON/OFF dataset for spectral fitting": [[460, "hess-dl3-1d-on-off-dataset-for-spectral-fitting"]], "Handling of conference material": [[403, "handling-of-conference-material"]], "Help!?": [[412, "help"]], "Hierarchical clustering of observations": [[486, "hierarchical-clustering-of-observations"]], "Hierarchy": [[404, "hierarchy"]], "High Level Analysis Interface": [[513, null]], "High level interface": [[386, "high-level-interface"], [498, null]], "How To": [[397, "how-to"], [514, null]], "How to contribute to Gammapy": [[380, null]], "How to get data values": [[482, "how-to-get-data-values"]], "How to handle API breaking changes?": [[377, "how-to-handle-api-breaking-changes"]], "How to make a Gammapy release": [[406, null]], "How to make a pull request": [[377, "how-to-make-a-pull-request"]], "How to set data values": [[482, "how-to-set-data-values"]], "How to use logging": [[377, "how-to-use-logging"]], "How to use random numbers": [[377, "how-to-use-random-numbers"]], "How to write code": [[377, "how-to-write-code"]], "How to write tests": [[377, "how-to-write-tests"]], "HpxGeom": [[191, null]], "HpxMap": [[192, null]], "HpxNDMap": [[193, null]], "IPython": [[413, "id3"]], "IRF": [[156, null], [404, "irf"]], "IRF axis naming": [[519, "irf-axis-naming"]], "IRFMap": [[157, null]], "IRF_REGISTRY": [[158, null]], "IRFs": [[386, "irfs"], [489, "irfs"]], "Image Plotting": [[482, "image-plotting"]], "ImageProfile": [[127, null]], "ImageProfileEstimator": [[128, null]], "Images and masks": [[391, "images-and-masks"]], "Implement default parameters": [[388, "implement-default-parameters"]], "Implement evaluation region specifications": [[388, "implement-evaluation-region-specifications"]], "Implement sky coordinate handling": [[388, "implement-sky-coordinate-handling"]], "Implementation": [[397, "implementation"], [405, "implementation"]], "Implementation Outline": [[405, "implementation-outline"]], "Implementation road map": [[387, "implementation-road-map"]], "Implementing a custom model": [[485, "implementing-a-custom-model"]], "Implementing a custom prior": [[487, "implementing-a-custom-prior"]], "Imports and versions": [[467, "imports-and-versions"]], "Improve SourceModels class": [[388, "improve-sourcemodels-class"]], "Improve and implement model serilization": [[388, "improve-and-implement-model-serilization"]], "Improve spatial models": [[388, "improve-spatial-models"]], "In the RST files": [[378, "in-the-rst-files"]], "Inbuilt Gammapy IRFs": [[480, "inbuilt-gammapy-irfs"]], "Include png files as images": [[378, "include-png-files-as-images"]], "Indexing and Slicing Sub-Maps": [[482, "indexing-and-slicing-sub-maps"]], "Inspect the reduced dataset": [[499, "inspect-the-reduced-dataset"]], "Inspecting residuals": [[499, "inspecting-residuals"]], "Install issues": [[412, "install-issues"]], "Installation": [[397, "installation"], [409, "installation"], [410, null]], "Instrument Response Functions (DL3)": [[519, null]], "Interaction Between Models and Dataset Objects": [[399, "interaction-between-models-and-dataset-objects"]], "Interface with MapCoord and SkyCoord": [[526, "interface-with-mapcoord-and-skycoord"]], "Interpolating onto a different geometry": [[482, "interpolating-onto-a-different-geometry"]], "Interpolation and extrapolation": [[377, "interpolation-and-extrapolation"]], "Introduce Shorter YAML Alias Tags": [[400, "introduce-shorter-yaml-alias-tags"]], "Introduce a FluxEstimate base class": [[401, "introduce-a-fluxestimate-base-class"]], "Introduce a FluxMap API": [[401, "introduce-a-fluxmap-api"]], "Introduce a FluxPointsCollection API": [[401, "introduce-a-fluxpointscollection-api"]], "Introduce gammapy.datasets": [[398, "introduce-gammapy-datasets"]], "Introduce gammapy.estimators": [[398, "introduce-gammapy-estimators"]], "Introduce gammapy.makers": [[398, "introduce-gammapy-makers"]], "Introduce gammapy.modeling": [[396, "introduce-gammapy-modeling"]], "Introduce gammapy.visualization": [[398, "introduce-gammapy-visualization"]], "Introduce naming scheme for models": [[388, "introduce-naming-scheme-for-models"]], "Introduction": [[388, "introduction"], [391, "introduction"], [392, "introduction"], [394, "introduction"], [395, "introduction"], [397, "introduction"], [401, "introduction"], [403, "introduction"], [404, "introduction"], [446, "introduction"], [451, "introduction"], [453, "introduction"], [461, "introduction"], [471, "introduction"], [475, "introduction"], [476, "introduction"], [477, "introduction"], [481, "introduction"], [482, "introduction"], [489, "introduction"], [490, "introduction"], [491, "introduction"], [492, "introduction"], [494, "introduction"], [500, "introduction"], [502, "introduction"], [504, "introduction"], [505, "introduction"], [575, "introduction"]], "Introduction of background models": [[388, "introduction-of-background-models"]], "Introduction of model name attributes": [[388, "introduction-of-model-name-attributes"]], "Introduction of \u201cforward folded\u201d models": [[388, "introduction-of-forward-folded-models"]], "InverseCDFSampler": [[326, null]], "IsothermalProfile": [[22, null]], "Isotropic diffuse background": [[490, "isotropic-diffuse-background"]], "Iterating by image": [[482, "iterating-by-image"]], "J Factors": [[475, "j-factors"]], "JFactory": [[23, null]], "Joint Analysis": [[510, "joint-analysis"]], "Joint analysis": [[459, "joint-analysis"], [460, "joint-analysis"]], "Jupyter": [[409, "id2"], [411, "jupyter"]], "Jupyter notebooks": [[413, "jupyter-notebooks"]], "Key Features": [[478, "key-features"]], "LabelMapAxis": [[194, null], [482, "labelmapaxis"]], "Latest CTAO performance files": [[489, "latest-ctao-performance-files"]], "Lazy loading of Datasets": [[389, "lazy-loading-of-datasets"]], "LazyFitsData": [[313, null]], "Let\u2019s simulate the model": [[464, "let-s-simulate-the-model"]], "Light Curve Fitting": [[392, "light-curve-fitting"]], "Light Curve estimation by observation": [[468, "light-curve-estimation-by-observation"]], "Light curve temporal model": [[569, null]], "Light curves": [[468, null]], "Light curves for flares": [[469, null]], "LightCurveEstimator": [[129, null]], "LightCurveTemplateTemporalModel": [[237, null]], "Lightcurve": [[392, "lightcurve"]], "Lightcurves": [[476, "lightcurves"]], "Lightcurves in gamma-ray astronomy": [[392, "lightcurves-in-gamma-ray-astronomy"]], "Limitations": [[387, "limitations"]], "Linear temporal model": [[565, null]], "LinearTemporalModel": [[238, null]], "Links to documentation": [[378, "links-to-documentation"]], "Links to other tutorials": [[378, "links-to-other-tutorials"]], "List available catalogs": [[476, "list-available-catalogs"]], "Load Data": [[451, "load-data"]], "Load IRFs and prepare dataset": [[446, "load-irfs-and-prepare-dataset"]], "Load catalogs": [[476, "load-catalogs"]], "Load data": [[453, "load-data"]], "Load spectral points": [[449, "load-spectral-points"]], "Load the data": [[447, "load-the-data"]], "Load the light curve for the PKS 2155-304 as a FluxPoints object.": [[478, "load-the-light-curve-for-the-pks-2155-304-as-a-fluxpoints-object"]], "Load the tables": [[491, "load-the-tables"]], "Loading models from a catalog": [[484, "loading-models-from-a-catalog"]], "Locate origin of warnings": [[377, "locate-origin-of-warnings"]], "Log parabola spectral model": [[548, null]], "Log parabola spectral norm model": [[549, null]], "Log-Parabola Fit": [[449, "log-parabola-fit"]], "LogParabolaNormSpectralModel": [[239, null]], "LogParabolaSpectralModel": [[240, null]], "LogSpiral": [[34, null]], "Long Term Support releases": [[403, "long-term-support-releases"]], "Lorimer2006": [[35, null]], "Low level API": [[499, null]], "Low level map and cube analysis": [[383, "low-level-map-and-cube-analysis"]], "MAKER_REGISTRY": [[170, null]], "METHOD_DEFAULT": [[320, null]], "METHOD_KWARGS_DEFAULT": [[321, null]], "MODEL_REGISTRY": [[241, null]], "Maintainer and developer perspective": [[384, "maintainer-and-developer-perspective"]], "Maintenance and Code Quality": [[386, "maintenance-and-code-quality"]], "Make a Bugfix release": [[406, "make-a-bugfix-release"]], "Make a Li&Ma test over the events": [[471, "make-a-li-ma-test-over-the-events"]], "Make sky images": [[461, "make-sky-images"]], "Make small pull requests": [[380, "make-small-pull-requests"]], "Maker": [[171, null]], "Makers": [[404, "makers"]], "Makers - Data reduction": [[481, null]], "Making a butterfly plot": [[499, "making-a-butterfly-plot"]], "Making a pull request that requires backport": [[377, "making-a-pull-request-that-requires-backport"]], "Making a pull request which skips GitHub Actions": [[377, "making-a-pull-request-which-skips-github-actions"]], "Making a pull request with new or modified datasets": [[377, "making-a-pull-request-with-new-or-modified-datasets"]], "Manual grouping of observations": [[486, "manual-grouping-of-observations"]], "Map": [[195, null]], "Map Analysis / Data Reduction": [[386, "map-analysis-data-reduction"]], "MapAxes": [[196, null]], "MapAxis": [[197, null]], "MapCoord": [[198, null], [526, "mapcoord"]], "MapDataset": [[102, null], [389, "mapdataset"], [477, "mapdataset"]], "MapDatasetEventSampler": [[103, null], [390, "mapdataseteventsampler"]], "MapDatasetMaker": [[172, null]], "MapDatasetMetaData": [[104, null]], "MapDatasetOnOff": [[105, null], [389, "mapdatasetonoff"]], "MapPanelPlotter": [[364, null]], "Maps": [[199, null], [386, "maps"], [482, null], [500, "maps"]], "Maps operations": [[482, "maps-operations"]], "Mask dilation and erosion": [[483, "mask-dilation-and-erosion"]], "Mask maps": [[483, null]], "Mask modifications": [[483, "mask-modifications"]], "Mask some sky regions": [[483, "mask-some-sky-regions"]], "Masks for fitting": [[483, "masks-for-fitting"]], "Masks operations": [[483, "masks-operations"]], "Meetings": [[386, "meetings"]], "Metadata API": [[404, "metadata-api"]], "Metadata files": [[403, "metadata-files"]], "Metadata generation and propagation along the dataflow": [[404, "metadata-generation-and-propagation-along-the-dataflow"]], "Methods to characterize variability": [[474, "methods-to-characterize-variability"]], "MeyerCrabSpectralModel": [[242, null]], "Minor changes": [[398, "minor-changes"]], "Mission elapsed times (MET)": [[578, "mission-elapsed-times-met"]], "Model": [[243, null]], "Model and dataset": [[479, "model-and-dataset"], [487, "model-and-dataset"]], "Model fit": [[461, "model-fit"]], "Model fitting": [[452, "model-fitting"], [498, "model-fitting"]], "Model gallery": [[528, null]], "Model lists and serialisation": [[485, "model-lists-and-serialisation"]], "Model the observed spectrum": [[447, "model-the-observed-spectrum"]], "ModelBase": [[244, null]], "Modeling": [[386, "modeling"], [404, "modeling"], [473, "modeling"]], "Modeling and Fitting (DL4 to DL5)": [[571, null]], "Modeling and fitting": [[459, "modeling-and-fitting"]], "Modelling": [[456, "modelling"], [484, null]], "Models": [[245, null], [485, null]], "Models with energy dependent morphology": [[485, "models-with-energy-dependent-morphology"]], "Models with shared parameter": [[485, "models-with-shared-parameter"]], "Modifying Data": [[482, "modifying-data"]], "Modifying model parameters": [[485, "modifying-model-parameters"]], "MooreProfile": [[24, null]], "Morphological energy dependence estimation": [[462, null]], "Motivation": [[405, "motivation"]], "Multi instrument joint 3D and 1D analysis": [[460, null]], "NFWProfile": [[25, null]], "N_JOBS_DEFAULT": [[322, null]], "Naima spectral model": [[550, null]], "NaimaSpectralModel": [[246, null]], "New features": [[439, "new-features"], [442, "new-features"], [443, "new-features"]], "Next steps": [[489, "next-steps"], [491, "next-steps"], [492, "next-steps"]], "Night-wise LC estimation": [[468, "night-wise-lc-estimation"]], "Norm Spectral Models": [[485, "norm-spectral-models"]], "Notations": [[576, "notations"]], "Notes": [[575, "notes"]], "OGIPDatasetReader": [[106, null]], "OGIPDatasetWriter": [[107, null]], "Object text repr, str and info": [[377, "object-text-repr-str-and-info"]], "Objective": [[456, "objective"], [457, "objective"], [463, "objective"], [464, "objective"], [486, "objective"]], "Objectives": [[387, "objectives"]], "Observation": [[88, null]], "Observation duration and effective livetime": [[481, "observation-duration-and-effective-livetime"]], "Observation selection": [[452, "observation-selection"], [498, "observation-selection"]], "ObservationEventSampler": [[108, null]], "ObservationFilter": [[89, null]], "ObservationMetaData": [[90, null]], "ObservationTable": [[91, null]], "Observational clustering": [[486, null]], "Observations": [[92, null]], "ObservationsEventsSampler": [[93, null]], "Obtain the data to use": [[462, "obtain-the-data-to-use"]], "Obtain the observations": [[486, "obtain-the-observations"]], "Obtaining an integral flux sensitivity": [[446, "obtaining-an-integral-flux-sensitivity"]], "Old example data": [[407, "old-example-data"]], "On-Off analysis": [[454, "on-off-analysis"]], "Opening the data": [[471, "opening-the-data"]], "OptimizeResult": [[212, null]], "Optional dependencies": [[376, "optional-dependencies"], [394, "optional-dependencies"]], "Other folders": [[407, "other-folders"]], "Other packages": [[502, "other-packages"]], "Other repositories": [[407, "other-repositories"]], "Others": [[377, "others"], [407, "others"]], "Outlook": [[389, "outlook"], [391, "outlook"], [393, "outlook"], [394, "outlook"], [396, "outlook"], [397, "outlook"], [398, "outlook"], [401, "outlook"]], "Output in Jupyter notebook cells": [[377, "output-in-jupyter-notebook-cells"]], "Overview": [[521, "overview"], [523, "overview"], [524, "overview"]], "PIG 1 - PIG purpose and guidelines": [[382, null]], "PIG 10 - Regions": [[391, null]], "PIG 11 - Light curves": [[392, null]], "PIG 12 - High level interface": [[393, null]], "PIG 13 - Gammapy dependencies and distribution": [[394, null]], "PIG 14 - Uncertainty estimation": [[395, null]], "PIG 16 - Gammapy package structure": [[396, null]], "PIG 18 - Documentation": [[397, null]], "PIG 19 - Gammapy package structure follow up": [[398, null]], "PIG 2 - Organization of low level analysis code": [[383, null]], "PIG 20 - Global Model API": [[399, null]], "PIG 21 - Models improvements": [[400, null]], "PIG 22 - Unified flux estimators API": [[401, null]], "PIG 23 - Gammapy release cycle and version numbering": [[402, null]], "PIG 24 - Authorship policy": [[403, null]], "PIG 25 - Metadata container for Gammapy": [[404, null]], "PIG 26 - Model Priors API": [[405, null]], "PIG 3 - Plan for dropping Python 2.7 support": [[384, null]], "PIG 4 - Setup for tutorial notebooks and data": [[385, null]], "PIG 5 - Gammapy 1.0 roadmap": [[386, null]], "PIG 6 - CTA observation handling": [[387, null]], "PIG 7 - Models": [[388, null]], "PIG 8 - Datasets": [[389, null]], "PIG 9 - Event sampling": [[390, null]], "PIG review": [[382, "pig-review"]], "PIG status": [[382, "pig-status"]], "PIGs": [[381, null]], "POOL_KWARGS_DEFAULT": [[323, null]], "PSF": [[480, "psf"], [490, "psf"]], "PSF3D": [[159, null]], "PSFKernel": [[160, null]], "PSFKing": [[161, null]], "PSFMap": [[162, null]], "PWN": [[50, null]], "Package / API": [[494, "package-api"]], "Package and docs": [[407, "package-and-docs"]], "Package structure and dependencies": [[430, "package-structure-and-dependencies"]], "Paczynski1990": [[36, null]], "Paczynski1990Velocity": [[37, null]], "Papers": [[386, "papers"]], "Parallel evaluation of datasets": [[389, "parallel-evaluation-of-datasets"]], "Parameter": [[213, null]], "ParameterEstimator": [[130, null]], "Parameters": [[214, null]], "ParametricPSF": [[163, null]], "Perform spectral model fitting": [[448, "perform-spectral-model-fitting"]], "Perform the data reduction loop": [[499, "perform-the-data-reduction-loop"]], "Perform the data reduction loop.": [[448, "perform-the-data-reduction-loop"]], "Performance and precision evaluation": [[390, "performance-and-precision-evaluation"]], "Phase curve temporal model": [[568, null]], "Phase-resolved map": [[471, "phase-resolved-map"]], "Phase-resolved spectrum": [[471, "phase-resolved-spectrum"]], "PhaseBackgroundMaker": [[173, null]], "Phasogram": [[471, "phasogram"]], "Piecewise  norm spectral model": [[551, null]], "Piecewise norm spatial model": [[534, null]], "PiecewiseNormSpatialModel": [[247, null]], "PiecewiseNormSpectralModel": [[248, null]], "Pixel coordinate convention": [[377, "pixel-coordinate-convention"]], "Plot": [[461, "plot"]], "Plot off regions": [[451, "plot-off-regions"]], "Plot the fitted spectrum": [[499, "plot-the-fitted-spectrum"]], "Plot the observed and intrinsic fluxes": [[447, "plot-the-observed-and-intrinsic-fluxes"]], "Plotting Results": [[465, "plotting-results"]], "Plotting a RegionGeom": [[527, "plotting-a-regiongeom"]], "Plotting models on a (counts) map": [[484, "plotting-models-on-a-counts-map"]], "Plotting the final results of the 1D Analysis": [[452, "plotting-the-final-results-of-the-1d-analysis"]], "Plotting the map content": [[527, "plotting-the-map-content"]], "Plotting the results": [[462, "plotting-the-results"]], "Plotting the underlying region": [[527, "plotting-the-underlying-region"]], "Point Spread Function": [[520, null]], "Point source sensitivity": [[446, null]], "Point spatial model": [[535, null]], "Point spread function": [[489, "point-spread-function"]], "PointSpatialModel": [[249, null]], "PointingInfo": [[94, null]], "PointingMode": [[95, null]], "Possible implementations": [[403, "possible-implementations"]], "Post release": [[406, "post-release"]], "Power Law Fit": [[449, "power-law-fit"]], "Power law 2 spectral model": [[553, null]], "Power law norm spectral model": [[554, null]], "Power law spectral model": [[552, null]], "PowerLaw temporal model": [[566, null]], "PowerLaw2SpectralModel": [[250, null]], "PowerLawNormSpectralModel": [[251, null]], "PowerLawSpectralModel": [[252, null]], "PowerLawTemporalModel": [[253, null]], "Predicted counts": [[510, "predicted-counts"]], "Prepare and run the event sampler": [[464, "prepare-and-run-the-event-sampler"]], "Prepare the datasets creation": [[448, "prepare-the-datasets-creation"]], "Preparing reduced datasets geometry": [[499, "preparing-reduced-datasets-geometry"]], "Prerequisites": [[448, "prerequisites"], [449, "prerequisites"], [451, "prerequisites"], [452, "prerequisites"], [453, "prerequisites"], [454, "prerequisites"], [456, "prerequisites"], [460, "prerequisites"], [462, "prerequisites"], [463, "prerequisites"], [464, "prerequisites"], [465, "prerequisites"], [467, "prerequisites"], [468, "prerequisites"], [469, "prerequisites"], [470, "prerequisites"], [474, "prerequisites"], [479, "prerequisites"], [483, "prerequisites"], [484, "prerequisites"], [487, "prerequisites"], [498, "prerequisites"], [499, "prerequisites"]], "Pretty-print source information": [[476, "pretty-print-source-information"]], "PrimaryFlux": [[26, null]], "Prior": [[254, null]], "PriorParameter": [[215, null]], "PriorParameters": [[216, null]], "Priors": [[487, null]], "Profile Estimation": [[465, "profile-estimation"]], "Profile Likelihood": [[577, "profile-likelihood"]], "Profiles": [[475, "profiles"]], "Project Management": [[386, "project-management"]], "Project setup": [[407, null]], "Projects": [[386, "projects"]], "Proposal": [[385, "proposal"], [387, "proposal"], [388, "proposal"], [389, "proposal"], [390, "proposal"], [391, "proposal"], [392, "proposal"], [393, "proposal"], [395, "proposal"], [396, "proposal"], [397, "proposal"], [398, "proposal"], [399, "proposal"], [400, "proposal"]], "Proposal of API for flux estimate results": [[401, "proposal-of-api-for-flux-estimate-results"]], "Proposed Approach": [[465, "proposed-approach"]], "Proposed approach": [[448, "proposed-approach"], [449, "proposed-approach"], [452, "proposed-approach"], [454, "proposed-approach"], [455, "proposed-approach"], [456, "proposed-approach"], [457, "proposed-approach"], [460, "proposed-approach"], [463, "proposed-approach"], [464, "proposed-approach"], [467, "proposed-approach"], [468, "proposed-approach"], [469, "proposed-approach"], [470, "proposed-approach"], [473, "proposed-approach"], [474, "proposed-approach"], [479, "proposed-approach"], [483, "proposed-approach"], [484, "proposed-approach"], [486, "proposed-approach"], [498, "proposed-approach"], [499, "proposed-approach"]], "Proposed class diagram": [[387, "proposed-class-diagram"]], "Proposed metadata classes": [[404, "proposed-metadata-classes"]], "Proposed solution": [[404, "proposed-solution"]], "Pull Requests": [[430, "pull-requests"], [431, "pull-requests"], [439, "pull-requests"], [440, "pull-requests"], [441, "pull-requests"], [442, "pull-requests"], [443, "pull-requests"]], "Pull requests": [[416, "pull-requests"], [417, "pull-requests"], [418, "pull-requests"], [419, "pull-requests"], [420, "pull-requests"], [421, "pull-requests"], [422, "pull-requests"], [423, "pull-requests"], [424, "pull-requests"], [425, "pull-requests"], [426, "pull-requests"], [427, "pull-requests"], [428, "pull-requests"], [429, "pull-requests"], [432, "pull-requests"], [433, "pull-requests"], [434, "pull-requests"], [435, "pull-requests"], [436, "pull-requests"], [437, "pull-requests"], [438, "pull-requests"]], "Pulsar": [[51, null]], "Pulsar Source Models": [[506, null]], "Pulsar Wind Nebula Source Models": [[507, null]], "Pulsar analysis": [[471, null]], "Python": [[413, "id2"]], "Python scripts": [[413, "python-scripts"]], "Python version support": [[377, "python-version-support"]], "RadMax2D": [[164, null]], "Read and Introduce Data": [[465, "read-and-introduce-data"]], "Read in input images": [[455, "read-in-input-images"]], "Read the datasets": [[484, "read-the-datasets"]], "Read the energy-dependent model": [[464, "read-the-energy-dependent-model"]], "Reading Maps": [[482, "reading-maps"]], "Reading and Writing": [[482, "reading-and-writing"]], "Reading and writing masks": [[483, "reading-and-writing-masks"]], "Reading different datasets": [[460, "reading-different-datasets"]], "RecoPSFMap": [[165, null]], "Recommended Setup": [[409, "recommended-setup"], [411, null]], "Reference": [[397, "reference"], [574, "reference"]], "References": [[573, "publications"]], "Reflected regions background": [[481, "reflected-regions-background"], [523, null]], "ReflectedRegionsBackgroundMaker": [[174, null]], "ReflectedRegionsFinder": [[175, null]], "Region arguments": [[391, "region-arguments"]], "RegionGeom": [[200, null], [527, "regiongeom"]], "RegionGeom and RegionNDMap": [[527, null]], "RegionGeom and coordinates": [[527, "regiongeom-and-coordinates"]], "RegionNDMap": [[201, null], [527, "regionndmap"]], "RegionsFinder": [[176, null]], "Relation to WCS geometries": [[527, "relation-to-wcs-geometries"]], "Release notes": [[377, "release-notes"], [415, null]], "Release preparation, feature freeze": [[402, "release-preparation-feature-freeze"]], "Release scheduling and LTS": [[402, "release-scheduling-and-lts"]], "Releases": [[386, "releases"], [403, "releases"], [407, "releases"]], "Releasing the final version of the major release": [[406, "releasing-the-final-version-of-the-major-release"]], "Releasing the first major release candidate": [[406, "releasing-the-first-major-release-candidate"]], "Removing a model from a dataset": [[484, "removing-a-model-from-a-dataset"]], "Removing an attribute": [[377, "removing-an-attribute"]], "Renaming an argument": [[377, "renaming-an-argument"]], "Required dependencies": [[376, "required-dependencies"], [394, "required-dependencies"]], "Requirements": [[404, "requirements"]], "Resampling datasets": [[477, "resampling-datasets"]], "Resolve gammapy.detect": [[398, "resolve-gammapy-detect"]], "Results": [[446, "results"]], "Results exploration": [[452, "results-exploration"]], "Ring background": [[481, "ring-background"], [524, null]], "Ring background map": [[457, null]], "RingBackgroundMaker": [[177, null]], "Rotated regions": [[391, "rotated-regions"]], "Run Estimation": [[465, "run-estimation"]], "Run Estimator": [[462, "run-estimator"]], "Run data reduction chain": [[451, "run-data-reduction-chain"], [453, "run-data-reduction-chain"]], "Run the 1D data reduction": [[468, "run-the-1d-data-reduction"]], "Run the 3D data reduction": [[468, "run-the-3d-data-reduction"]], "Running config driven data reduction": [[574, "running-config-driven-data-reduction"]], "Running tests & building Documentation": [[380, "running-tests-building-documentation"]], "Running the Data Reduction": [[452, "running-the-data-reduction"]], "Running the analysis": [[498, "running-the-analysis"]], "Running the estimation": [[452, "running-the-estimation"]], "Running the first step of the analysis: the Data Reduction": [[452, "running-the-first-step-of-the-analysis-the-data-reduction"]], "Running the fit": [[452, "running-the-fit"]], "Running the light curve extraction in 1D": [[468, "running-the-light-curve-extraction-in-1d"]], "SED types": [[512, "sed-types"]], "SNR": [[52, null]], "SNRTrueloveMcKee": [[53, null]], "SPATIAL_MODEL_REGISTRY": [[255, null]], "SPECTRAL_MODEL_REGISTRY": [[256, null]], "Safe data range definition": [[522, "safe-data-range-definition"]], "Safe data range handling": [[481, "safe-data-range-handling"]], "SafeMaskMaker": [[178, null]], "Sample a source with energy-dependent temporal evolution": [[464, null]], "Sampling methods": [[390, "sampling-methods"]], "Sampling the source and background events": [[463, "sampling-the-source-and-background-events"]], "Save dataset to disk": [[452, "save-dataset-to-disk"], [498, "save-dataset-to-disk"], [499, "save-dataset-to-disk"]], "ScaleSpectralModel": [[257, null]], "ScaledRegularGridInterpolator": [[316, null]], "Scripts": [[494, "scripts"]], "Select a catalog subset": [[476, "select-a-catalog-subset"]], "Select a source": [[476, "select-a-source"]], "Select observations": [[461, "select-observations"]], "Select the ON region": [[448, "select-the-on-region"]], "Select the data": [[448, "select-the-data"], [469, "select-the-data"]], "Selecting models contributing to a given region": [[484, "selecting-models-contributing-to-a-given-region"]], "Selecting models from a list": [[484, "selecting-models-from-a-list"]], "SensitivityEstimator": [[131, null]], "Serialisation": [[405, "serialisation"], [480, "serialisation"], [480, "id1"], [480, "id2"], [490, "serialisation"]], "Serialisation and I/O": [[465, "serialisation-and-i-o"]], "Serialisation of datasets": [[510, "serialisation-of-datasets"]], "Serialisation of the fit result": [[452, "serialisation-of-the-fit-result"]], "Serialisation of the results": [[452, "serialisation-of-the-results"]], "Serialising models": [[484, "serialising-models"]], "Serialization": [[404, "serialization"]], "Setting fitting parameters": [[452, "setting-fitting-parameters"]], "Setting modeling and fitting parameters": [[498, "setting-modeling-and-fitting-parameters"]], "Setting the background normalization maker": [[498, "setting-the-background-normalization-maker"]], "Setting the data to use": [[498, "setting-the-data-to-use"]], "Setting the exclusion mask": [[452, "setting-the-exclusion-mask"], [498, "setting-the-exclusion-mask"]], "Setting the reduced datasets geometry": [[498, "setting-the-reduced-datasets-geometry"]], "Setup": [[446, "setup"], [447, "setup"], [448, "setup"], [449, "setup"], [451, "setup"], [452, "setup"], [453, "setup"], [454, "setup"], [455, "setup"], [456, "setup"], [457, "setup"], [461, "setup"], [462, "setup"], [463, "setup"], [464, "setup"], [465, "setup"], [468, "setup"], [469, "setup"], [470, "setup"], [473, "setup"], [474, "setup"], [475, "setup"], [477, "setup"], [481, "setup"], [482, "setup"], [483, "setup"], [484, "setup"], [485, "setup"], [489, "setup"], [490, "setup"], [498, "setup"], [499, "setup"], [500, "setup"]], "Shell spatial model": [[536, null]], "Shell2 spatial model": [[537, null]], "Shell2SpatialModel": [[258, null]], "ShellSpatialModel": [[259, null]], "Show images": [[461, "show-images"]], "Show the results tables": [[462, "show-the-results-tables"]], "Show various observation quantities": [[486, "show-various-observation-quantities"]], "SimplePulsar": [[54, null]], "Simplify YAML Parameter Representation": [[400, "simplify-yaml-parameter-representation"]], "Simplify YAML Representation": [[400, "simplify-yaml-representation"]], "Simulate multiple event lists": [[463, "simulate-multiple-event-lists"]], "Simulating a light curve": [[470, "simulating-a-light-curve"]], "Simulating and fitting a time varying source": [[470, null]], "Simulation": [[467, "simulation"]], "Simulation of MapDataset and SpectrumDataset": [[389, "simulation-of-mapdataset-and-spectrumdataset"]], "Simulation of a single spectrum": [[454, "simulation-of-a-single-spectrum"]], "Sine temporal model": [[567, null]], "SineTemporalModel": [[260, null]], "Skip unit tests for some Astropy versions": [[377, "skip-unit-tests-for-some-astropy-versions"]], "Sky and pixel regions": [[391, "sky-and-pixel-regions"]], "Sky maps (DL4)": [[526, null]], "SkyModel": [[261, null], [485, "skymodel"]], "Smooth broken power law spectral model": [[555, null]], "SmoothBrokenPowerLawSpectralModel": [[262, null]], "Some terminology": [[387, "some-terminology"]], "Source Detection": [[461, "source-detection"]], "Source candidates": [[455, "source-candidates"]], "Source catalogs": [[476, null], [500, "source-catalogs"], [509, null]], "Source detection and significance maps": [[455, null]], "Source information": [[476, "source-information"]], "Source models": [[476, "source-models"], [489, "source-models"]], "Source object": [[476, "source-object"]], "Source statistic": [[451, "source-statistic"]], "SourceCatalog": [[56, null]], "SourceCatalog1LHAASO": [[57, null]], "SourceCatalog2FHL": [[58, null]], "SourceCatalog2HWC": [[59, null]], "SourceCatalog2PC": [[60, null]], "SourceCatalog3FGL": [[61, null]], "SourceCatalog3FHL": [[62, null]], "SourceCatalog3HWC": [[63, null]], "SourceCatalog3PC": [[64, null]], "SourceCatalog4FGL": [[65, null]], "SourceCatalogGammaCat": [[66, null]], "SourceCatalogHGPS": [[67, null]], "SourceCatalogLargeScaleHGPS": [[68, null]], "SourceCatalogObject": [[69, null]], "SourceCatalogObject1LHAASO": [[70, null]], "SourceCatalogObject2FHL": [[71, null]], "SourceCatalogObject2HWC": [[72, null]], "SourceCatalogObject2PC": [[73, null]], "SourceCatalogObject3FGL": [[74, null]], "SourceCatalogObject3FHL": [[75, null]], "SourceCatalogObject3HWC": [[76, null]], "SourceCatalogObject3PC": [[77, null]], "SourceCatalogObject4FGL": [[78, null]], "SourceCatalogObjectGammaCat": [[79, null]], "SourceCatalogObjectHGPS": [[80, null]], "SourceCatalogObjectHGPSComponent": [[81, null]], "SourceIRFModel": [[388, "sourceirfmodel"]], "Spatial analysis": [[461, "spatial-analysis"]], "Spatial models": [[485, "spatial-models"], [528, "spatial-models"]], "SpatialIRFModel": [[388, "spatialirfmodel"]], "SpatialModel": [[263, null]], "Special cases": [[577, "special-cases"]], "Specificities of the HGPS catalog": [[476, "specificities-of-the-hgps-catalog"]], "Spectral Absorption Model": [[400, "spectral-absorption-model"]], "Spectral Norm Models": [[400, "spectral-norm-models"]], "Spectral analysis": [[451, null]], "Spectral analysis of extended sources": [[448, null]], "Spectral analysis with energy-dependent directional cuts": [[453, null]], "Spectral analysis with the HLI": [[452, null]], "Spectral models": [[485, "spectral-models"], [528, "spectral-models"]], "Spectral models and flux points": [[500, "spectral-models-and-flux-points"]], "Spectral points": [[461, "spectral-points"]], "SpectralIRFModel": [[388, "spectralirfmodel"]], "SpectralModel": [[264, null]], "Spectrum": [[461, "spectrum"]], "Spectrum dataset": [[481, "spectrum-dataset"]], "SpectrumDataset": [[109, null], [389, "spectrumdataset"], [477, "spectrumdataset"]], "SpectrumDatasetMaker": [[179, null]], "SpectrumDatasetOnOff": [[110, null], [389, "spectrumdatasetonoff"]], "Sphinx gallery extension": [[378, "sphinx-gallery-extension"]], "Spiral arm models": [[504, "spiral-arm-models"]], "Stack observations": [[451, "stack-observations"]], "Stacked analysis": [[459, "stacked-analysis"]], "Stacking Multiple Datasets": [[510, "stacking-multiple-datasets"]], "Statistical utility functions": [[576, null]], "Status": [[387, "status"], [396, "status"]], "Storing the energy dispersion information as a function of sky position": [[518, "storing-the-energy-dispersion-information-as-a-function-of-sky-position"]], "Storing the results and further studies": [[392, "storing-the-results-and-further-studies"]], "Sub-packages": [[503, "sub-packages"]], "Suggestions": [[403, "suggestions"]], "Summary": [[416, "summary"], [417, "summary"], [418, "summary"], [419, "summary"], [420, "summary"], [421, "summary"], [422, "summary"], [423, "summary"], [424, "summary"], [425, "summary"], [426, "summary"], [427, "summary"], [428, "summary"], [429, "summary"], [430, "summary"], [431, "summary"], [432, "summary"], [433, "summary"], [434, "summary"], [435, "summary"], [436, "summary"], [437, "summary"], [438, "summary"], [439, "summary"], [440, "summary"], [441, "summary"], [442, "summary"], [443, "summary"], [459, "summary"], [490, "summary"]], "Super Exponential Cutoff Power Law Model used for 4FGL-DR1 (and DR2)": [[558, null]], "Super Exponential Cutoff Power Law Model used for 4FGL-DR3": [[557, null]], "Super exponential cutoff power law model used for 3FGL": [[556, null]], "SuperExpCutoffPowerLaw3FGLSpectralModel": [[265, null]], "SuperExpCutoffPowerLaw4FGLDR3SpectralModel": [[266, null]], "SuperExpCutoffPowerLaw4FGLSpectralModel": [[267, null]], "Supernova Remnant Models": [[508, null]], "Support for Asymmetric IRFs": [[480, "support-for-asymmetric-irfs"]], "Support of python Cython, numpy and astropy versions": [[402, "support-of-python-cython-numpy-and-astropy-versions"]], "Survey Map Script": [[496, null]], "Survey panel plots": [[579, "survey-panel-plots"]], "TEMPORAL_MODEL_REGISTRY": [[268, null]], "TS map estimation": [[455, "ts-map-estimation"]], "TSMapEstimator": [[132, null]], "Table conversion": [[478, "table-conversion"]], "Task List": [[389, "task-list"]], "Task list": [[388, "task-list"], [390, "task-list"], [391, "task-list"], [392, "task-list"], [393, "task-list"], [394, "task-list"]], "Template spatial model": [[538, null]], "Template spectral model": [[559, null]], "TemplateNDSpatialModel": [[269, null]], "TemplateNDSpectralModel": [[270, null]], "TemplateNPredModel": [[271, null]], "TemplatePhaseCurveTemporalModel": [[272, null]], "TemplateSpatialModel": [[273, null]], "TemplateSpectralModel": [[274, null]], "Temporal models": [[485, "temporal-models"], [528, "temporal-models"]], "TemporalModel": [[275, null]], "Testing of plotting functions": [[377, "testing-of-plotting-functions"]], "The case of image and cube analysis": [[383, "the-case-of-image-and-cube-analysis"]], "The chi-squared value for each parameter of interest": [[462, "the-chi-squared-value-for-each-parameter-of-interest"]], "The gammapy-data repository": [[407, "the-gammapy-data-repository"]], "The gammapy-extra repository": [[407, "the-gammapy-extra-repository"]], "The index tables": [[511, "the-index-tables"]], "The reflected region finder": [[523, "the-reflected-region-finder"]], "The results for testing energy dependence": [[462, "the-results-for-testing-energy-dependence"]], "The results of the source signal above the background in each energy bin": [[462, "the-results-of-the-source-signal-above-the-background-in-each-energy-bin"]], "The setup": [[460, "the-setup"], [478, "the-setup"], [479, "the-setup"], [487, "the-setup"]], "Theta squared event distribution": [[492, "theta-squared-event-distribution"]], "Time": [[494, "time"]], "Time bin preparation": [[392, "time-bin-preparation"]], "Time bins": [[392, "time-bins"]], "Time differences": [[578, "time-differences"]], "Time format and scale": [[578, "time-format-and-scale"]], "Time handling in Gammapy": [[578, "time-handling-in-gammapy"]], "Time resolved spectroscopy algorithm": [[473, "time-resolved-spectroscopy-algorithm"]], "Time resolved spectroscopy estimator": [[473, null]], "Time variable source using a lightcurve": [[463, "time-variable-source-using-a-lightcurve"]], "TimeMapAxis": [[202, null], [482, "timemapaxis"]], "Timing Analysis": [[386, "timing-analysis"]], "TimmerKonig_lightcurve_simulator": [[286, null]], "Troubleshooting": [[412, null], [574, "troubleshooting"]], "Tutorial overview": [[462, "tutorial-overview"], [489, "tutorial-overview"], [491, "tutorial-overview"]], "Tutorials": [[397, "tutorials"], [494, null]], "Tutorials Overview": [[409, "tutorials-overview"]], "Type validation": [[404, "type-validation"]], "Types of supported datasets": [[510, "types-of-supported-datasets"]], "Unification of flux estimators?": [[401, "unification-of-flux-estimators"]], "Unify calling interface for models": [[388, "unify-calling-interface-for-models"]], "Upsampling and downsampling non-spatial axes": [[527, "upsampling-and-downsampling-non-spatial-axes"]], "Use cases": [[405, "use-cases"]], "Use cases / scenarios": [[387, "use-cases-scenarios"]], "User guide": [[515, null]], "User perspective": [[384, "user-perspective"]], "Using Anaconda / Miniconda": [[410, "using-anaconda-miniconda"]], "Using Factory Methods": [[482, "using-factory-methods"]], "Using Gammapy": [[413, null]], "Using Gammapy IRFs": [[480, null]], "Using Mamba": [[410, "using-mamba"]], "Using YAML configuration files": [[498, "using-yaml-configuration-files"]], "Using YAML configuration files for setting/writing the Data Reduction parameters": [[452, "using-yaml-configuration-files-for-setting-writing-the-data-reduction-parameters"]], "Using data stored into your computer": [[452, "using-data-stored-into-your-computer"]], "Using gammapy.analysis": [[513, "using-gammapy-analysis"]], "Using gammapy.astro.darkmatter": [[502, "using-gammapy-astro-darkmatter"]], "Using gammapy.astro.source": [[505, "using-gammapy-astro-source"]], "Using gammapy.catalog": [[509, "using-gammapy-catalog"]], "Using gammapy.data": [[511, "using-gammapy-data"]], "Using gammapy.datasets": [[510, "using-gammapy-datasets"]], "Using gammapy.estimators": [[512, "using-gammapy-estimators"]], "Using gammapy.irf": [[519, "using-gammapy-irf"]], "Using gammapy.makers": [[522, "using-gammapy-makers"]], "Using gammapy.maps": [[526, "using-gammapy-maps"]], "Using gammapy.modeling": [[571, "using-gammapy-modeling"]], "Using masks": [[477, "using-masks"]], "Using other package managers": [[410, "using-other-package-managers"]], "Using pip": [[410, "using-pip"]], "Using regions": [[523, "using-regions"]], "Using the reflected background estimator": [[523, "using-the-reflected-background-estimator"]], "Utility functions": [[578, null]], "ValleeSpiral": [[38, null]], "Variables": [[1, "variables"], [2, "variables"], [3, "variables"], [4, "variables"], [5, "variables"], [7, "variables"], [8, "variables"], [10, "variables"], [13, "variables"], [13, "id11"]], "Velocity distributions": [[504, "velocity-distributions"]], "Venv Environments": [[408, "venv-environments"]], "Version 0.1": [[415, "version-0-1"]], "Version 0.10": [[415, "version-0-10"]], "Version 0.11": [[415, "version-0-11"]], "Version 0.12": [[415, "version-0-12"]], "Version 0.13": [[415, "version-0-13"]], "Version 0.14": [[415, "version-0-14"]], "Version 0.15": [[415, "version-0-15"]], "Version 0.16": [[415, "version-0-16"]], "Version 0.17": [[415, "version-0-17"]], "Version 0.18": [[415, "version-0-18"]], "Version 0.19": [[415, "version-0-19"]], "Version 0.2": [[415, "version-0-2"]], "Version 0.20": [[415, "version-0-20"]], "Version 0.20.1": [[415, "version-0-20-1"]], "Version 0.3": [[415, "version-0-3"]], "Version 0.4": [[415, "version-0-4"]], "Version 0.5": [[415, "version-0-5"]], "Version 0.6": [[415, "version-0-6"]], "Version 0.7": [[415, "version-0-7"]], "Version 0.8": [[415, "version-0-8"]], "Version 0.9": [[415, "version-0-9"]], "Version 1.0": [[415, "version-1-0"]], "Version 1.0.1": [[415, "version-1-0-1"]], "Version 1.0.2": [[415, "version-1-0-2"]], "Version 1.1": [[415, "version-1-1"]], "Version 1.2": [[415, "version-1-2"]], "Version numbering": [[402, "version-numbering"]], "Virtual Environments": [[408, null]], "Visualing a RegionNDMap": [[527, "visualing-a-regionndmap"]], "Visualising the results": [[473, "visualising-the-results"]], "Visualization": [[579, null]], "Visualizing and Plotting": [[482, "visualizing-and-plotting"]], "WStat : Poisson data with background measurement": [[575, "wstat-poisson-data-with-background-measurement"]], "WStat counts statistic": [[576, "wstat-counts-statistic"]], "WStatCountsStatistic": [[287, null]], "WcsGeom": [[203, null]], "WcsMap": [[204, null]], "WcsNDMap": [[205, null]], "What checks and conversions should I do for inputs?": [[377, "what-checks-and-conversions-should-i-do-for-inputs"]], "What is a PIG?": [[382, "what-is-a-pig"]], "What is this?": [[380, "what-is-this"]], "What next?": [[449, "what-next"], [451, "what-next"], [455, "what-next"], [461, "what-next"], [468, "what-next"], [500, "what-next"]], "What others have": [[387, "what-others-have"]], "What we have": [[385, "what-we-have"], [393, "what-we-have"], [401, "what-we-have"]], "What\u2019s new?": [[417, "what-s-new"], [418, "what-s-new"], [419, "what-s-new"], [420, "what-s-new"], [421, "what-s-new"], [422, "what-s-new"], [423, "what-s-new"], [424, "what-s-new"], [425, "what-s-new"], [426, "what-s-new"], [427, "what-s-new"], [428, "what-s-new"], [430, "what-s-new"], [431, "what-s-new"], [433, "what-s-new"], [434, "what-s-new"], [435, "what-s-new"], [436, "what-s-new"], [437, "what-s-new"], [438, "what-s-new"]], "What\u2019s next": [[498, "whats-next"]], "What\u2019s next?": [[452, "whats-next"]], "Where should I import from?": [[377, "where-should-i-import-from"]], "WobbleRegionsFinder": [[180, null]], "Working with event lists": [[511, "working-with-event-lists"]], "Write your own CLI": [[574, "write-your-own-cli"]], "Writing Maps": [[482, "writing-maps"]], "Writing a PIG": [[382, "writing-a-pig"]], "Writing and reading a RegionNDMap to/from a FITS file": [[527, "writing-and-reading-a-regionndmap-to-from-a-fits-file"]], "Writing event lists and GTIs to file": [[511, "writing-event-lists-and-gtis-to-file"]], "YAML representation": [[530, "yaml-representation"], [531, "yaml-representation"], [532, "yaml-representation"], [533, "yaml-representation"], [534, "yaml-representation"], [535, "yaml-representation"], [536, "yaml-representation"], [537, "yaml-representation"], [538, "yaml-representation"], [540, "yaml-representation"], [541, "yaml-representation"], [542, "yaml-representation"], [543, "yaml-representation"], [544, "yaml-representation"], [545, "yaml-representation"], [546, "yaml-representation"], [547, "yaml-representation"], [548, "yaml-representation"], [549, "yaml-representation"], [550, "yaml-representation"], [551, "yaml-representation"], [552, "yaml-representation"], [553, "yaml-representation"], [554, "yaml-representation"], [555, "yaml-representation"], [556, "yaml-representation"], [557, "yaml-representation"], [558, "yaml-representation"], [559, "yaml-representation"], [561, "yaml-representation"], [562, "yaml-representation"], [563, "yaml-representation"], [564, "yaml-representation"], [565, "yaml-representation"], [566, "yaml-representation"], [567, "yaml-representation"], [568, "yaml-representation"], [569, "yaml-representation"]], "YusifovKucuk2004": [[39, null]], "YusifovKucuk2004B": [[40, null]], "ZhaoProfile": [[27, null]], "absolute_time": [[358, null]], "add_colorbar": [[365, null]], "add_observed_parameters": [[41, null]], "add_pulsar_parameters": [[42, null]], "add_pwn_parameters": [[43, null]], "add_snr_parameters": [[44, null]], "analysis": [[11, "gammapy-analysis"]], "analysis - High level interface": [[0, null]], "annotate_heatmap": [[366, null]], "apply_edisp": [[111, null], [115, null]], "arbitrary type input and validation": [[404, "arbitrary-type-input-and-validation"]], "as a function of of true energy and offset angle (EDISP_2D)": [[518, "as-a-function-of-of-true-energy-and-offset-angle-gadf-edisp-2d"]], "as a function of reconstructed energy and detector coordinates (BKG_3D)": [[517, "as-a-function-of-reconstructed-energy-and-detector-coordinates-gadf-bkg-3d"]], "as a function of reconstructed energy and offset angle, radially symmetric (BKG_2D)": [[517, "as-a-function-of-reconstructed-energy-and-offset-angle-radially-symmetric-gadf-bkg-2d"]], "as a function of true energy (RMF)": [[518, "as-a-function-of-true-energy-gadf-ogip-rmf"]], "as a function of true energy and offset angle (AEFF_2D)": [[516, "as-a-function-of-true-energy-and-offset-angle-gadf-aeff-2d"]], "assert_quantity_allclose": [[352, null]], "assert_skycoord_allclose": [[353, null]], "assert_time_allclose": [[354, null]], "astro - Astrophysics": [[1, null]], "cartesian": [[305, null]], "cash": [[288, null]], "cash_sum_cython": [[289, null]], "catalog - Source catalogs": [[2, null]], "check": [[11, "gammapy-check"]], "codemeta.json": [[403, "codemeta-json"]], "colormap_hess": [[367, null]], "colormap_milagro": [[368, null]], "combine_flux_maps": [[133, null]], "combine_significance_maps": [[134, null]], "compound_region_to_regions": [[335, null]], "compute_chisq": [[290, null]], "compute_flux_doubling": [[291, null]], "compute_fpp": [[292, null]], "compute_fvar": [[293, null]], "compute_lightcurve_discrete_correlation": [[135, null]], "compute_lightcurve_doublingtime": [[136, null]], "compute_lightcurve_fpp": [[137, null]], "compute_lightcurve_fvar": [[138, null]], "config": [[11, "gammapy-analysis-config"]], "containment_radius": [[206, null]], "containment_region": [[207, null]], "create_cosmic_ray_spectral_model": [[276, null]], "create_crab_spectral_model": [[277, null]], "create_fermi_isotropic_diffuse_model": [[278, null]], "create_map_dataset_from_observation": [[112, null]], "create_map_dataset_geoms": [[113, null]], "cstat": [[294, null]], "data": [[404, "data"]], "data - DL3 data and observations": [[3, null]], "datasets": [[11, "gammapy-download-datasets"]], "datasets - Reduced datasets": [[4, null]], "discrete_correlation": [[295, null]], "docs.gammapy.org": [[407, "docs-gammapy-org"]], "download": [[11, "gammapy-download"]], "draw": [[327, null]], "earth_location_from_dict": [[314, null]], "estimate_exposure_reco_energy": [[139, null]], "estimators - High level estimators": [[5, null]], "f_cash_root_cython": [[296, null]], "find_peaks": [[140, null]], "find_peaks_in_flux_map": [[141, null]], "fov_to_sky": [[306, null]], "from_yaml": [[340, null]], "galactic": [[307, null]], "gamLike": [[502, "gamlike"]], "gammapy": [[11, "gammapy"]], "gammapy.analysis Package": [[0, "module-gammapy.analysis"]], "gammapy.astro.darkmatter Package": [[1, "module-gammapy.astro.darkmatter"]], "gammapy.astro.population Package": [[1, "module-gammapy.astro.population"]], "gammapy.astro.source Package": [[1, "module-gammapy.astro.source"]], "gammapy.catalog Package": [[2, "module-gammapy.catalog"]], "gammapy.data Package": [[3, "module-gammapy.data"]], "gammapy.datasets Package": [[4, "module-gammapy.datasets"]], "gammapy.datasets.utils Module": [[4, "module-gammapy.datasets.utils"]], "gammapy.estimators Package": [[5, "module-gammapy.estimators"]], "gammapy.estimators.utils Module": [[5, "module-gammapy.estimators.utils"]], "gammapy.irf Package": [[7, "module-gammapy.irf"]], "gammapy.makers Package": [[8, "module-gammapy.makers"]], "gammapy.makers.utils Module": [[8, "module-gammapy.makers.utils"]], "gammapy.maps Package": [[9, "module-gammapy.maps"]], "gammapy.modeling Package": [[10, "module-gammapy.modeling"]], "gammapy.modeling.models Package": [[10, "module-gammapy.modeling.models"]], "gammapy.modeling.models.utils Module": [[10, "module-gammapy.modeling.models.utils"]], "gammapy.org": [[407, "gammapy-org"]], "gammapy.stats Package": [[12, "module-gammapy.stats"]], "gammapy.utils.cluster Module": [[13, "module-gammapy.utils.cluster"]], "gammapy.utils.coordinates Package": [[13, "module-gammapy.utils.coordinates"]], "gammapy.utils.fits Module": [[13, "module-gammapy.utils.fits"]], "gammapy.utils.integrate Module": [[13, "module-gammapy.utils.integrate"]], "gammapy.utils.interpolation Module": [[13, "module-gammapy.utils.interpolation"]], "gammapy.utils.parallel Module": [[13, "module-gammapy.utils.parallel"]], "gammapy.utils.random Package": [[13, "module-gammapy.utils.random"]], "gammapy.utils.regions Module": [[13, "module-gammapy.utils.regions"]], "gammapy.utils.scripts Module": [[13, "module-gammapy.utils.scripts"]], "gammapy.utils.table Module": [[13, "module-gammapy.utils.table"]], "gammapy.utils.testing Module": [[13, "module-gammapy.utils.testing"]], "gammapy.utils.time Module": [[13, "module-gammapy.utils.time"]], "gammapy.utils.units Module": [[13, "module-gammapy.utils.units"]], "gammapy.visualization Package": [[14, "module-gammapy.visualization"]], "get_combined_flux_maps": [[142, null]], "get_combined_significance_maps": [[143, null]], "get_images_paths": [[341, null]], "get_irfs_features": [[96, null]], "get_random_state": [[328, null]], "get_rebinned_axis": [[144, null]], "get_wstat_gof_terms": [[297, null]], "get_wstat_mu_bkg": [[298, null]], "hierarchical_clustering": [[302, null]], "hstack_columns": [[347, null]], "info": [[11, "gammapy-info"]], "integrate_spectrum": [[279, null]], "interpolate_profile": [[317, null]], "interpolation_scale": [[318, null]], "irf - Instrument response functions": [[7, null]], "load_irf_dict_from_file": [[166, null]], "logging": [[11, "gammapy-check-logging"]], "make_base_catalog_galactic": [[45, null]], "make_catalog_random_positions_cube": [[46, null]], "make_catalog_random_positions_sphere": [[47, null]], "make_concentric_annulus_sky_regions": [[336, null]], "make_counts_rad_max": [[181, null]], "make_edisp_kernel_map": [[182, null]], "make_edisp_map": [[183, null]], "make_effective_livetime_map": [[184, null]], "make_map_background_irf": [[185, null]], "make_map_exposure_true_energy": [[186, null]], "make_observation_time_map": [[187, null]], "make_orthogonal_rectangle_sky_regions": [[337, null]], "make_path": [[342, null]], "make_psf_map": [[188, null]], "make_theta_squared_table": [[189, null]], "makers - Data reduction": [[8, null]], "maps - Sky maps": [[9, null]], "modeling - Models and fitting": [[10, null]], "motion_since_birth": [[308, null]], "mpl_plot_check": [[355, null]], "multiprocessing_manager": [[324, null]], "norm_bounds_cython": [[299, null]], "normalize": [[329, null]], "notebooks": [[11, "gammapy-download-notebooks"]], "observatory_locations": [[97, null]], "pdf": [[330, null]], "plot_contour_line": [[369, null]], "plot_distribution": [[370, null]], "plot_heatmap": [[371, null]], "plot_map_rgb": [[372, null]], "plot_npred_signal": [[373, null]], "plot_spectrum_datasets_off_regions": [[374, null]], "plot_theta_squared_table": [[375, null]], "polar": [[309, null]], "pydantic": [[404, "pydantic"]], "radial_distributions": [[48, null]], "read_hermes_cube": [[280, null], [282, null]], "read_yaml": [[343, null]], "recursive_merge_dicts": [[344, null]], "region_to_frame": [[338, null]], "regions_to_compound_region": [[339, null]], "requires_data": [[356, null]], "requires_dependency": [[357, null]], "resample_energy_edges": [[145, null]], "run": [[11, "gammapy-analysis-run"]], "run_multiprocessing": [[325, null]], "sample_powerlaw": [[331, null]], "sample_sphere": [[332, null]], "sample_sphere_distance": [[333, null]], "sample_times": [[334, null]], "scale_plot_flux": [[281, null]], "scripts - Command line tools": [[11, null]], "select_nested_models": [[283, null]], "sky_to_fov": [[310, null]], "split_dataset": [[114, null], [116, null]], "standard_scaler": [[303, null]], "standardise_unit": [[362, null]], "stat_profile_ul_scipy": [[284, null]], "stats - Statistics": [[12, null]], "structure_function": [[300, null]], "table_row_to_dict": [[348, null]], "table_standardise_units_copy": [[349, null]], "table_standardise_units_inplace": [[350, null]], "the base class": [[404, "the-base-class"]], "time_ref_from_dict": [[359, null]], "time_ref_to_dict": [[360, null]], "time_relative_to_ref": [[361, null]], "to_yaml": [[345, null]], "trapz_loglog": [[315, null]], "unit_from_fits_image_hdu": [[363, null]], "utils - Utilities": [[13, null]], "velocity_distributions": [[49, null]], "velocity_glon_glat": [[311, null]], "visualization - Plotting features": [[14, null]], "write_yaml": [[346, null]], "wstat": [[301, null]]}, "docnames": ["api-reference/analysis", "api-reference/astro", "api-reference/catalog", "api-reference/data", "api-reference/datasets", "api-reference/estimators", "api-reference/index", "api-reference/irf", "api-reference/makers", "api-reference/maps", "api-reference/modeling", "api-reference/scripts", "api-reference/stats", "api-reference/utils", "api-reference/visualization", "api/gammapy.analysis.Analysis", "api/gammapy.analysis.AnalysisConfig", "api/gammapy.astro.darkmatter.BurkertProfile", "api/gammapy.astro.darkmatter.DMProfile", "api/gammapy.astro.darkmatter.DarkMatterAnnihilationSpectralModel", "api/gammapy.astro.darkmatter.DarkMatterDecaySpectralModel", "api/gammapy.astro.darkmatter.EinastoProfile", "api/gammapy.astro.darkmatter.IsothermalProfile", "api/gammapy.astro.darkmatter.JFactory", "api/gammapy.astro.darkmatter.MooreProfile", "api/gammapy.astro.darkmatter.NFWProfile", "api/gammapy.astro.darkmatter.PrimaryFlux", "api/gammapy.astro.darkmatter.ZhaoProfile", "api/gammapy.astro.population.CaseBattacharya1998", "api/gammapy.astro.population.Exponential", "api/gammapy.astro.population.FaucherKaspi2006", "api/gammapy.astro.population.FaucherKaspi2006VelocityBimodal", "api/gammapy.astro.population.FaucherKaspi2006VelocityMaxwellian", "api/gammapy.astro.population.FaucherSpiral", "api/gammapy.astro.population.LogSpiral", "api/gammapy.astro.population.Lorimer2006", "api/gammapy.astro.population.Paczynski1990", "api/gammapy.astro.population.Paczynski1990Velocity", "api/gammapy.astro.population.ValleeSpiral", "api/gammapy.astro.population.YusifovKucuk2004", "api/gammapy.astro.population.YusifovKucuk2004B", "api/gammapy.astro.population.add_observed_parameters", "api/gammapy.astro.population.add_pulsar_parameters", "api/gammapy.astro.population.add_pwn_parameters", "api/gammapy.astro.population.add_snr_parameters", "api/gammapy.astro.population.make_base_catalog_galactic", "api/gammapy.astro.population.make_catalog_random_positions_cube", "api/gammapy.astro.population.make_catalog_random_positions_sphere", "api/gammapy.astro.population.radial_distributions", "api/gammapy.astro.population.velocity_distributions", "api/gammapy.astro.source.PWN", "api/gammapy.astro.source.Pulsar", "api/gammapy.astro.source.SNR", "api/gammapy.astro.source.SNRTrueloveMcKee", "api/gammapy.astro.source.SimplePulsar", "api/gammapy.catalog.CATALOG_REGISTRY", "api/gammapy.catalog.SourceCatalog", "api/gammapy.catalog.SourceCatalog1LHAASO", "api/gammapy.catalog.SourceCatalog2FHL", "api/gammapy.catalog.SourceCatalog2HWC", "api/gammapy.catalog.SourceCatalog2PC", "api/gammapy.catalog.SourceCatalog3FGL", "api/gammapy.catalog.SourceCatalog3FHL", "api/gammapy.catalog.SourceCatalog3HWC", "api/gammapy.catalog.SourceCatalog3PC", "api/gammapy.catalog.SourceCatalog4FGL", "api/gammapy.catalog.SourceCatalogGammaCat", "api/gammapy.catalog.SourceCatalogHGPS", "api/gammapy.catalog.SourceCatalogLargeScaleHGPS", "api/gammapy.catalog.SourceCatalogObject", "api/gammapy.catalog.SourceCatalogObject1LHAASO", "api/gammapy.catalog.SourceCatalogObject2FHL", "api/gammapy.catalog.SourceCatalogObject2HWC", "api/gammapy.catalog.SourceCatalogObject2PC", "api/gammapy.catalog.SourceCatalogObject3FGL", "api/gammapy.catalog.SourceCatalogObject3FHL", "api/gammapy.catalog.SourceCatalogObject3HWC", "api/gammapy.catalog.SourceCatalogObject3PC", "api/gammapy.catalog.SourceCatalogObject4FGL", "api/gammapy.catalog.SourceCatalogObjectGammaCat", "api/gammapy.catalog.SourceCatalogObjectHGPS", "api/gammapy.catalog.SourceCatalogObjectHGPSComponent", "api/gammapy.data.DataStore", "api/gammapy.data.EventList", "api/gammapy.data.EventListMetaData", "api/gammapy.data.FixedPointingInfo", "api/gammapy.data.GTI", "api/gammapy.data.HDUIndexTable", "api/gammapy.data.Observation", "api/gammapy.data.ObservationFilter", "api/gammapy.data.ObservationMetaData", "api/gammapy.data.ObservationTable", "api/gammapy.data.Observations", "api/gammapy.data.ObservationsEventsSampler", "api/gammapy.data.PointingInfo", "api/gammapy.data.PointingMode", "api/gammapy.data.get_irfs_features", "api/gammapy.data.observatory_locations", "api/gammapy.datasets.DATASET_REGISTRY", "api/gammapy.datasets.Dataset", "api/gammapy.datasets.Datasets", "api/gammapy.datasets.FluxPointsDataset", "api/gammapy.datasets.MapDataset", "api/gammapy.datasets.MapDatasetEventSampler", "api/gammapy.datasets.MapDatasetMetaData", "api/gammapy.datasets.MapDatasetOnOff", "api/gammapy.datasets.OGIPDatasetReader", "api/gammapy.datasets.OGIPDatasetWriter", "api/gammapy.datasets.ObservationEventSampler", "api/gammapy.datasets.SpectrumDataset", "api/gammapy.datasets.SpectrumDatasetOnOff", "api/gammapy.datasets.apply_edisp", "api/gammapy.datasets.create_map_dataset_from_observation", "api/gammapy.datasets.create_map_dataset_geoms", "api/gammapy.datasets.split_dataset", "api/gammapy.datasets.utils.apply_edisp", "api/gammapy.datasets.utils.split_dataset", "api/gammapy.estimators.ASmoothMapEstimator", "api/gammapy.estimators.ESTIMATOR_REGISTRY", "api/gammapy.estimators.EnergyDependentMorphologyEstimator", "api/gammapy.estimators.Estimator", "api/gammapy.estimators.ExcessMapEstimator", "api/gammapy.estimators.FluxMaps", "api/gammapy.estimators.FluxMetaData", "api/gammapy.estimators.FluxPoints", "api/gammapy.estimators.FluxPointsEstimator", "api/gammapy.estimators.FluxProfileEstimator", "api/gammapy.estimators.ImageProfile", "api/gammapy.estimators.ImageProfileEstimator", "api/gammapy.estimators.LightCurveEstimator", "api/gammapy.estimators.ParameterEstimator", "api/gammapy.estimators.SensitivityEstimator", "api/gammapy.estimators.TSMapEstimator", "api/gammapy.estimators.utils.combine_flux_maps", "api/gammapy.estimators.utils.combine_significance_maps", "api/gammapy.estimators.utils.compute_lightcurve_discrete_correlation", "api/gammapy.estimators.utils.compute_lightcurve_doublingtime", "api/gammapy.estimators.utils.compute_lightcurve_fpp", "api/gammapy.estimators.utils.compute_lightcurve_fvar", "api/gammapy.estimators.utils.estimate_exposure_reco_energy", "api/gammapy.estimators.utils.find_peaks", "api/gammapy.estimators.utils.find_peaks_in_flux_map", "api/gammapy.estimators.utils.get_combined_flux_maps", "api/gammapy.estimators.utils.get_combined_significance_maps", "api/gammapy.estimators.utils.get_rebinned_axis", "api/gammapy.estimators.utils.resample_energy_edges", "api/gammapy.irf.Background2D", "api/gammapy.irf.Background3D", "api/gammapy.irf.BackgroundIRF", "api/gammapy.irf.EDispKernel", "api/gammapy.irf.EDispKernelMap", "api/gammapy.irf.EDispMap", "api/gammapy.irf.EffectiveAreaTable2D", "api/gammapy.irf.EnergyDependentMultiGaussPSF", "api/gammapy.irf.EnergyDispersion2D", "api/gammapy.irf.FoVAlignment", "api/gammapy.irf.IRF", "api/gammapy.irf.IRFMap", "api/gammapy.irf.IRF_REGISTRY", "api/gammapy.irf.PSF3D", "api/gammapy.irf.PSFKernel", "api/gammapy.irf.PSFKing", "api/gammapy.irf.PSFMap", "api/gammapy.irf.ParametricPSF", "api/gammapy.irf.RadMax2D", "api/gammapy.irf.RecoPSFMap", "api/gammapy.irf.load_irf_dict_from_file", "api/gammapy.makers.AdaptiveRingBackgroundMaker", "api/gammapy.makers.DatasetsMaker", "api/gammapy.makers.FoVBackgroundMaker", "api/gammapy.makers.MAKER_REGISTRY", "api/gammapy.makers.Maker", "api/gammapy.makers.MapDatasetMaker", "api/gammapy.makers.PhaseBackgroundMaker", "api/gammapy.makers.ReflectedRegionsBackgroundMaker", "api/gammapy.makers.ReflectedRegionsFinder", "api/gammapy.makers.RegionsFinder", "api/gammapy.makers.RingBackgroundMaker", "api/gammapy.makers.SafeMaskMaker", "api/gammapy.makers.SpectrumDatasetMaker", "api/gammapy.makers.WobbleRegionsFinder", "api/gammapy.makers.utils.make_counts_rad_max", "api/gammapy.makers.utils.make_edisp_kernel_map", "api/gammapy.makers.utils.make_edisp_map", "api/gammapy.makers.utils.make_effective_livetime_map", "api/gammapy.makers.utils.make_map_background_irf", "api/gammapy.makers.utils.make_map_exposure_true_energy", "api/gammapy.makers.utils.make_observation_time_map", "api/gammapy.makers.utils.make_psf_map", "api/gammapy.makers.utils.make_theta_squared_table", "api/gammapy.maps.Geom", "api/gammapy.maps.HpxGeom", "api/gammapy.maps.HpxMap", "api/gammapy.maps.HpxNDMap", "api/gammapy.maps.LabelMapAxis", "api/gammapy.maps.Map", "api/gammapy.maps.MapAxes", "api/gammapy.maps.MapAxis", "api/gammapy.maps.MapCoord", "api/gammapy.maps.Maps", "api/gammapy.maps.RegionGeom", "api/gammapy.maps.RegionNDMap", "api/gammapy.maps.TimeMapAxis", "api/gammapy.maps.WcsGeom", "api/gammapy.maps.WcsMap", "api/gammapy.maps.WcsNDMap", "api/gammapy.maps.containment_radius", "api/gammapy.maps.containment_region", "api/gammapy.modeling.Covariance", "api/gammapy.modeling.CovarianceResult", "api/gammapy.modeling.Fit", "api/gammapy.modeling.FitResult", "api/gammapy.modeling.OptimizeResult", "api/gammapy.modeling.Parameter", "api/gammapy.modeling.Parameters", "api/gammapy.modeling.PriorParameter", "api/gammapy.modeling.PriorParameters", "api/gammapy.modeling.models.BrokenPowerLawSpectralModel", "api/gammapy.modeling.models.CompoundSpectralModel", "api/gammapy.modeling.models.ConstantFluxSpatialModel", "api/gammapy.modeling.models.ConstantSpatialModel", "api/gammapy.modeling.models.ConstantSpectralModel", "api/gammapy.modeling.models.ConstantTemporalModel", "api/gammapy.modeling.models.DatasetModels", "api/gammapy.modeling.models.DiskSpatialModel", "api/gammapy.modeling.models.EBLAbsorptionNormSpectralModel", "api/gammapy.modeling.models.EBL_DATA_BUILTIN", "api/gammapy.modeling.models.ExpCutoffPowerLaw3FGLSpectralModel", "api/gammapy.modeling.models.ExpCutoffPowerLawNormSpectralModel", "api/gammapy.modeling.models.ExpCutoffPowerLawSpectralModel", "api/gammapy.modeling.models.ExpDecayTemporalModel", "api/gammapy.modeling.models.FoVBackgroundModel", "api/gammapy.modeling.models.GaussianSpatialModel", "api/gammapy.modeling.models.GaussianSpectralModel", "api/gammapy.modeling.models.GaussianTemporalModel", "api/gammapy.modeling.models.GeneralizedGaussianSpatialModel", "api/gammapy.modeling.models.GeneralizedGaussianTemporalModel", "api/gammapy.modeling.models.LightCurveTemplateTemporalModel", "api/gammapy.modeling.models.LinearTemporalModel", "api/gammapy.modeling.models.LogParabolaNormSpectralModel", "api/gammapy.modeling.models.LogParabolaSpectralModel", "api/gammapy.modeling.models.MODEL_REGISTRY", "api/gammapy.modeling.models.MeyerCrabSpectralModel", "api/gammapy.modeling.models.Model", "api/gammapy.modeling.models.ModelBase", "api/gammapy.modeling.models.Models", "api/gammapy.modeling.models.NaimaSpectralModel", "api/gammapy.modeling.models.PiecewiseNormSpatialModel", "api/gammapy.modeling.models.PiecewiseNormSpectralModel", "api/gammapy.modeling.models.PointSpatialModel", "api/gammapy.modeling.models.PowerLaw2SpectralModel", "api/gammapy.modeling.models.PowerLawNormSpectralModel", "api/gammapy.modeling.models.PowerLawSpectralModel", "api/gammapy.modeling.models.PowerLawTemporalModel", "api/gammapy.modeling.models.Prior", "api/gammapy.modeling.models.SPATIAL_MODEL_REGISTRY", "api/gammapy.modeling.models.SPECTRAL_MODEL_REGISTRY", "api/gammapy.modeling.models.ScaleSpectralModel", "api/gammapy.modeling.models.Shell2SpatialModel", "api/gammapy.modeling.models.ShellSpatialModel", "api/gammapy.modeling.models.SineTemporalModel", "api/gammapy.modeling.models.SkyModel", "api/gammapy.modeling.models.SmoothBrokenPowerLawSpectralModel", "api/gammapy.modeling.models.SpatialModel", "api/gammapy.modeling.models.SpectralModel", "api/gammapy.modeling.models.SuperExpCutoffPowerLaw3FGLSpectralModel", "api/gammapy.modeling.models.SuperExpCutoffPowerLaw4FGLDR3SpectralModel", "api/gammapy.modeling.models.SuperExpCutoffPowerLaw4FGLSpectralModel", "api/gammapy.modeling.models.TEMPORAL_MODEL_REGISTRY", "api/gammapy.modeling.models.TemplateNDSpatialModel", "api/gammapy.modeling.models.TemplateNDSpectralModel", "api/gammapy.modeling.models.TemplateNPredModel", "api/gammapy.modeling.models.TemplatePhaseCurveTemporalModel", "api/gammapy.modeling.models.TemplateSpatialModel", "api/gammapy.modeling.models.TemplateSpectralModel", "api/gammapy.modeling.models.TemporalModel", "api/gammapy.modeling.models.create_cosmic_ray_spectral_model", "api/gammapy.modeling.models.create_crab_spectral_model", "api/gammapy.modeling.models.create_fermi_isotropic_diffuse_model", "api/gammapy.modeling.models.integrate_spectrum", "api/gammapy.modeling.models.read_hermes_cube", "api/gammapy.modeling.models.scale_plot_flux", "api/gammapy.modeling.models.utils.read_hermes_cube", "api/gammapy.modeling.select_nested_models", "api/gammapy.modeling.stat_profile_ul_scipy", "api/gammapy.stats.CashCountsStatistic", "api/gammapy.stats.TimmerKonig_lightcurve_simulator", "api/gammapy.stats.WStatCountsStatistic", "api/gammapy.stats.cash", "api/gammapy.stats.cash_sum_cython", "api/gammapy.stats.compute_chisq", "api/gammapy.stats.compute_flux_doubling", "api/gammapy.stats.compute_fpp", "api/gammapy.stats.compute_fvar", "api/gammapy.stats.cstat", "api/gammapy.stats.discrete_correlation", "api/gammapy.stats.f_cash_root_cython", "api/gammapy.stats.get_wstat_gof_terms", "api/gammapy.stats.get_wstat_mu_bkg", "api/gammapy.stats.norm_bounds_cython", "api/gammapy.stats.structure_function", "api/gammapy.stats.wstat", "api/gammapy.utils.cluster.hierarchical_clustering", "api/gammapy.utils.cluster.standard_scaler", "api/gammapy.utils.coordinates.D_SUN_TO_GALACTIC_CENTER", "api/gammapy.utils.coordinates.cartesian", "api/gammapy.utils.coordinates.fov_to_sky", "api/gammapy.utils.coordinates.galactic", "api/gammapy.utils.coordinates.motion_since_birth", "api/gammapy.utils.coordinates.polar", "api/gammapy.utils.coordinates.sky_to_fov", "api/gammapy.utils.coordinates.velocity_glon_glat", "api/gammapy.utils.fits.HDULocation", "api/gammapy.utils.fits.LazyFitsData", "api/gammapy.utils.fits.earth_location_from_dict", "api/gammapy.utils.integrate.trapz_loglog", "api/gammapy.utils.interpolation.ScaledRegularGridInterpolator", "api/gammapy.utils.interpolation.interpolate_profile", "api/gammapy.utils.interpolation.interpolation_scale", "api/gammapy.utils.parallel.BACKEND_DEFAULT", "api/gammapy.utils.parallel.METHOD_DEFAULT", "api/gammapy.utils.parallel.METHOD_KWARGS_DEFAULT", "api/gammapy.utils.parallel.N_JOBS_DEFAULT", "api/gammapy.utils.parallel.POOL_KWARGS_DEFAULT", "api/gammapy.utils.parallel.multiprocessing_manager", "api/gammapy.utils.parallel.run_multiprocessing", "api/gammapy.utils.random.InverseCDFSampler", "api/gammapy.utils.random.draw", "api/gammapy.utils.random.get_random_state", "api/gammapy.utils.random.normalize", "api/gammapy.utils.random.pdf", "api/gammapy.utils.random.sample_powerlaw", "api/gammapy.utils.random.sample_sphere", "api/gammapy.utils.random.sample_sphere_distance", "api/gammapy.utils.random.sample_times", "api/gammapy.utils.regions.compound_region_to_regions", "api/gammapy.utils.regions.make_concentric_annulus_sky_regions", "api/gammapy.utils.regions.make_orthogonal_rectangle_sky_regions", "api/gammapy.utils.regions.region_to_frame", "api/gammapy.utils.regions.regions_to_compound_region", "api/gammapy.utils.scripts.from_yaml", "api/gammapy.utils.scripts.get_images_paths", "api/gammapy.utils.scripts.make_path", "api/gammapy.utils.scripts.read_yaml", "api/gammapy.utils.scripts.recursive_merge_dicts", "api/gammapy.utils.scripts.to_yaml", "api/gammapy.utils.scripts.write_yaml", "api/gammapy.utils.table.hstack_columns", "api/gammapy.utils.table.table_row_to_dict", "api/gammapy.utils.table.table_standardise_units_copy", "api/gammapy.utils.table.table_standardise_units_inplace", "api/gammapy.utils.testing.Checker", "api/gammapy.utils.testing.assert_quantity_allclose", "api/gammapy.utils.testing.assert_skycoord_allclose", "api/gammapy.utils.testing.assert_time_allclose", "api/gammapy.utils.testing.mpl_plot_check", "api/gammapy.utils.testing.requires_data", "api/gammapy.utils.testing.requires_dependency", "api/gammapy.utils.time.absolute_time", "api/gammapy.utils.time.time_ref_from_dict", "api/gammapy.utils.time.time_ref_to_dict", "api/gammapy.utils.time.time_relative_to_ref", "api/gammapy.utils.units.standardise_unit", "api/gammapy.utils.units.unit_from_fits_image_hdu", "api/gammapy.visualization.MapPanelPlotter", "api/gammapy.visualization.add_colorbar", "api/gammapy.visualization.annotate_heatmap", "api/gammapy.visualization.colormap_hess", "api/gammapy.visualization.colormap_milagro", "api/gammapy.visualization.plot_contour_line", "api/gammapy.visualization.plot_distribution", "api/gammapy.visualization.plot_heatmap", "api/gammapy.visualization.plot_map_rgb", "api/gammapy.visualization.plot_npred_signal", "api/gammapy.visualization.plot_spectrum_datasets_off_regions", "api/gammapy.visualization.plot_theta_squared_table", "development/dependencies", "development/dev_howto", "development/doc_howto", "development/index", "development/intro", "development/pigs/index", "development/pigs/pig-001", "development/pigs/pig-002", "development/pigs/pig-003", "development/pigs/pig-004", "development/pigs/pig-005", "development/pigs/pig-006", "development/pigs/pig-007", "development/pigs/pig-008", "development/pigs/pig-009", "development/pigs/pig-010", "development/pigs/pig-011", "development/pigs/pig-012", "development/pigs/pig-013", "development/pigs/pig-014", "development/pigs/pig-016", "development/pigs/pig-018", "development/pigs/pig-019", "development/pigs/pig-020", "development/pigs/pig-021", "development/pigs/pig-022", "development/pigs/pig-023", "development/pigs/pig-024", "development/pigs/pig-025", "development/pigs/pig-026", "development/release", "development/setup", "getting-started/environments", "getting-started/index", "getting-started/install", "getting-started/quickstart", "getting-started/troubleshooting", "getting-started/usage", "index", "release-notes/index", "release-notes/v0.1", "release-notes/v0.10", "release-notes/v0.11", "release-notes/v0.12", "release-notes/v0.13", "release-notes/v0.14", "release-notes/v0.15", "release-notes/v0.16", "release-notes/v0.17", "release-notes/v0.18", "release-notes/v0.18.1", "release-notes/v0.18.2", "release-notes/v0.19", "release-notes/v0.2", "release-notes/v0.20", "release-notes/v0.20.1", "release-notes/v0.3", "release-notes/v0.4", "release-notes/v0.5", "release-notes/v0.6", "release-notes/v0.7", "release-notes/v0.8", "release-notes/v0.9", "release-notes/v1.0", "release-notes/v1.0.1", "release-notes/v1.0.2", "release-notes/v1.1", "release-notes/v1.2", "release-notes/v1.3", "sg_execution_times", "tutorials/analysis-1d/cta_sensitivity", "tutorials/analysis-1d/ebl", "tutorials/analysis-1d/extended_source_spectral_analysis", "tutorials/analysis-1d/sed_fitting", "tutorials/analysis-1d/sg_execution_times", "tutorials/analysis-1d/spectral_analysis", "tutorials/analysis-1d/spectral_analysis_hli", "tutorials/analysis-1d/spectral_analysis_rad_max", "tutorials/analysis-1d/spectrum_simulation", "tutorials/analysis-2d/detect", "tutorials/analysis-2d/modeling_2D", "tutorials/analysis-2d/ring_background", "tutorials/analysis-2d/sg_execution_times", "tutorials/analysis-3d/analysis_3d", "tutorials/analysis-3d/analysis_mwl", "tutorials/analysis-3d/cta_data_analysis", "tutorials/analysis-3d/energy_dependent_estimation", "tutorials/analysis-3d/event_sampling", "tutorials/analysis-3d/event_sampling_nrg_depend_models", "tutorials/analysis-3d/flux_profiles", "tutorials/analysis-3d/sg_execution_times", "tutorials/analysis-3d/simulate_3d", "tutorials/analysis-time/light_curve", "tutorials/analysis-time/light_curve_flare", "tutorials/analysis-time/light_curve_simulation", "tutorials/analysis-time/pulsar_analysis", "tutorials/analysis-time/sg_execution_times", "tutorials/analysis-time/time_resolved_spectroscopy", "tutorials/analysis-time/variability_estimation", "tutorials/api/astro_dark_matter", "tutorials/api/catalog", "tutorials/api/datasets", "tutorials/api/estimators", "tutorials/api/fitting", "tutorials/api/irfs", "tutorials/api/makers", "tutorials/api/maps", "tutorials/api/mask_maps", "tutorials/api/model_management", "tutorials/api/models", "tutorials/api/observation_clustering", "tutorials/api/priors", "tutorials/api/sg_execution_times", "tutorials/data/cta", "tutorials/data/fermi_lat", "tutorials/data/hawc", "tutorials/data/hess", "tutorials/data/sg_execution_times", "tutorials/index", "tutorials/scripts/sg_execution_times", "tutorials/scripts/survey_map", "tutorials/sg_execution_times", "tutorials/starting/analysis_1", "tutorials/starting/analysis_2", "tutorials/starting/overview", "tutorials/starting/sg_execution_times", "user-guide/astro/darkmatter/index", "user-guide/astro/index", "user-guide/astro/population/index", "user-guide/astro/source/index", "user-guide/astro/source/pulsar", "user-guide/astro/source/pwn", "user-guide/astro/source/snr", "user-guide/catalog", "user-guide/datasets/index", "user-guide/dl3", "user-guide/estimators", "user-guide/hli", "user-guide/howto", "user-guide/index", "user-guide/irf/aeff", "user-guide/irf/bkg", "user-guide/irf/edisp", "user-guide/irf/index", "user-guide/irf/psf", "user-guide/makers/fov", "user-guide/makers/index", "user-guide/makers/reflected", "user-guide/makers/ring", "user-guide/maps/hpxmap", "user-guide/maps/index", "user-guide/maps/regionmap", "user-guide/model-gallery/index", "user-guide/model-gallery/sg_execution_times", "user-guide/model-gallery/spatial/plot_constant", "user-guide/model-gallery/spatial/plot_disk", "user-guide/model-gallery/spatial/plot_gauss", "user-guide/model-gallery/spatial/plot_gen_gauss", "user-guide/model-gallery/spatial/plot_piecewise_norm_spatial", "user-guide/model-gallery/spatial/plot_point", "user-guide/model-gallery/spatial/plot_shell", "user-guide/model-gallery/spatial/plot_shell2", "user-guide/model-gallery/spatial/plot_template", "user-guide/model-gallery/spatial/sg_execution_times", "user-guide/model-gallery/spectral/plot_absorbed", "user-guide/model-gallery/spectral/plot_broken_powerlaw", "user-guide/model-gallery/spectral/plot_compound", "user-guide/model-gallery/spectral/plot_constant_spectral", "user-guide/model-gallery/spectral/plot_exp_cutoff_powerlaw", "user-guide/model-gallery/spectral/plot_exp_cutoff_powerlaw_3fgl", "user-guide/model-gallery/spectral/plot_exp_cutoff_powerlaw_norm_spectral", "user-guide/model-gallery/spectral/plot_gauss_spectral", "user-guide/model-gallery/spectral/plot_logparabola", "user-guide/model-gallery/spectral/plot_logparabola_norm_spectral", "user-guide/model-gallery/spectral/plot_naima", "user-guide/model-gallery/spectral/plot_piecewise_norm_spectral", "user-guide/model-gallery/spectral/plot_powerlaw", "user-guide/model-gallery/spectral/plot_powerlaw2", "user-guide/model-gallery/spectral/plot_powerlaw_norm_spectral", "user-guide/model-gallery/spectral/plot_smooth_broken_powerlaw", "user-guide/model-gallery/spectral/plot_super_exp_cutoff_powerlaw_3fgl", "user-guide/model-gallery/spectral/plot_super_exp_cutoff_powerlaw_4fgl", "user-guide/model-gallery/spectral/plot_super_exp_cutoff_powerlaw_4fgl_dr1", "user-guide/model-gallery/spectral/plot_template_spectral", "user-guide/model-gallery/spectral/sg_execution_times", "user-guide/model-gallery/temporal/plot_constant_temporal", "user-guide/model-gallery/temporal/plot_expdecay_temporal", "user-guide/model-gallery/temporal/plot_gaussian_temporal", "user-guide/model-gallery/temporal/plot_generalized_gaussian_temporal", "user-guide/model-gallery/temporal/plot_linear_temporal", "user-guide/model-gallery/temporal/plot_powerlaw_temporal", "user-guide/model-gallery/temporal/plot_sine_temporal", "user-guide/model-gallery/temporal/plot_template_phase_temporal", "user-guide/model-gallery/temporal/plot_template_temporal", "user-guide/model-gallery/temporal/sg_execution_times", "user-guide/modeling", "user-guide/package", "user-guide/references", "user-guide/scripts/index", "user-guide/stats/fit_statistics", "user-guide/stats/index", "user-guide/stats/wstat_derivation", "user-guide/utils", "user-guide/visualization/index"], "envversion": {"sphinx": 62, "sphinx.domains.c": 3, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 9, "sphinx.domains.index": 1, "sphinx.domains.javascript": 3, "sphinx.domains.math": 2, "sphinx.domains.python": 4, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "sphinx.ext.intersphinx": 1, "sphinx.ext.todo": 2, "sphinx.ext.viewcode": 1}, "filenames": ["api-reference/analysis.rst", "api-reference/astro.rst", "api-reference/catalog.rst", "api-reference/data.rst", "api-reference/datasets.rst", "api-reference/estimators.rst", "api-reference/index.rst", "api-reference/irf.rst", "api-reference/makers.rst", "api-reference/maps.rst", "api-reference/modeling.rst", "api-reference/scripts.rst", "api-reference/stats.rst", "api-reference/utils.rst", "api-reference/visualization.rst", "api/gammapy.analysis.Analysis.rst", "api/gammapy.analysis.AnalysisConfig.rst", "api/gammapy.astro.darkmatter.BurkertProfile.rst", "api/gammapy.astro.darkmatter.DMProfile.rst", "api/gammapy.astro.darkmatter.DarkMatterAnnihilationSpectralModel.rst", "api/gammapy.astro.darkmatter.DarkMatterDecaySpectralModel.rst", "api/gammapy.astro.darkmatter.EinastoProfile.rst", "api/gammapy.astro.darkmatter.IsothermalProfile.rst", "api/gammapy.astro.darkmatter.JFactory.rst", "api/gammapy.astro.darkmatter.MooreProfile.rst", "api/gammapy.astro.darkmatter.NFWProfile.rst", "api/gammapy.astro.darkmatter.PrimaryFlux.rst", "api/gammapy.astro.darkmatter.ZhaoProfile.rst", "api/gammapy.astro.population.CaseBattacharya1998.rst", "api/gammapy.astro.population.Exponential.rst", "api/gammapy.astro.population.FaucherKaspi2006.rst", "api/gammapy.astro.population.FaucherKaspi2006VelocityBimodal.rst", "api/gammapy.astro.population.FaucherKaspi2006VelocityMaxwellian.rst", "api/gammapy.astro.population.FaucherSpiral.rst", "api/gammapy.astro.population.LogSpiral.rst", "api/gammapy.astro.population.Lorimer2006.rst", "api/gammapy.astro.population.Paczynski1990.rst", "api/gammapy.astro.population.Paczynski1990Velocity.rst", "api/gammapy.astro.population.ValleeSpiral.rst", "api/gammapy.astro.population.YusifovKucuk2004.rst", "api/gammapy.astro.population.YusifovKucuk2004B.rst", "api/gammapy.astro.population.add_observed_parameters.rst", "api/gammapy.astro.population.add_pulsar_parameters.rst", "api/gammapy.astro.population.add_pwn_parameters.rst", "api/gammapy.astro.population.add_snr_parameters.rst", "api/gammapy.astro.population.make_base_catalog_galactic.rst", "api/gammapy.astro.population.make_catalog_random_positions_cube.rst", "api/gammapy.astro.population.make_catalog_random_positions_sphere.rst", "api/gammapy.astro.population.radial_distributions.rst", "api/gammapy.astro.population.velocity_distributions.rst", "api/gammapy.astro.source.PWN.rst", "api/gammapy.astro.source.Pulsar.rst", "api/gammapy.astro.source.SNR.rst", "api/gammapy.astro.source.SNRTrueloveMcKee.rst", "api/gammapy.astro.source.SimplePulsar.rst", "api/gammapy.catalog.CATALOG_REGISTRY.rst", "api/gammapy.catalog.SourceCatalog.rst", "api/gammapy.catalog.SourceCatalog1LHAASO.rst", "api/gammapy.catalog.SourceCatalog2FHL.rst", "api/gammapy.catalog.SourceCatalog2HWC.rst", "api/gammapy.catalog.SourceCatalog2PC.rst", "api/gammapy.catalog.SourceCatalog3FGL.rst", "api/gammapy.catalog.SourceCatalog3FHL.rst", "api/gammapy.catalog.SourceCatalog3HWC.rst", "api/gammapy.catalog.SourceCatalog3PC.rst", "api/gammapy.catalog.SourceCatalog4FGL.rst", "api/gammapy.catalog.SourceCatalogGammaCat.rst", "api/gammapy.catalog.SourceCatalogHGPS.rst", "api/gammapy.catalog.SourceCatalogLargeScaleHGPS.rst", "api/gammapy.catalog.SourceCatalogObject.rst", "api/gammapy.catalog.SourceCatalogObject1LHAASO.rst", "api/gammapy.catalog.SourceCatalogObject2FHL.rst", "api/gammapy.catalog.SourceCatalogObject2HWC.rst", "api/gammapy.catalog.SourceCatalogObject2PC.rst", "api/gammapy.catalog.SourceCatalogObject3FGL.rst", "api/gammapy.catalog.SourceCatalogObject3FHL.rst", "api/gammapy.catalog.SourceCatalogObject3HWC.rst", "api/gammapy.catalog.SourceCatalogObject3PC.rst", "api/gammapy.catalog.SourceCatalogObject4FGL.rst", "api/gammapy.catalog.SourceCatalogObjectGammaCat.rst", "api/gammapy.catalog.SourceCatalogObjectHGPS.rst", "api/gammapy.catalog.SourceCatalogObjectHGPSComponent.rst", "api/gammapy.data.DataStore.rst", "api/gammapy.data.EventList.rst", "api/gammapy.data.EventListMetaData.rst", "api/gammapy.data.FixedPointingInfo.rst", "api/gammapy.data.GTI.rst", "api/gammapy.data.HDUIndexTable.rst", "api/gammapy.data.Observation.rst", "api/gammapy.data.ObservationFilter.rst", "api/gammapy.data.ObservationMetaData.rst", "api/gammapy.data.ObservationTable.rst", "api/gammapy.data.Observations.rst", "api/gammapy.data.ObservationsEventsSampler.rst", "api/gammapy.data.PointingInfo.rst", "api/gammapy.data.PointingMode.rst", "api/gammapy.data.get_irfs_features.rst", "api/gammapy.data.observatory_locations.rst", "api/gammapy.datasets.DATASET_REGISTRY.rst", "api/gammapy.datasets.Dataset.rst", "api/gammapy.datasets.Datasets.rst", "api/gammapy.datasets.FluxPointsDataset.rst", "api/gammapy.datasets.MapDataset.rst", "api/gammapy.datasets.MapDatasetEventSampler.rst", "api/gammapy.datasets.MapDatasetMetaData.rst", "api/gammapy.datasets.MapDatasetOnOff.rst", "api/gammapy.datasets.OGIPDatasetReader.rst", "api/gammapy.datasets.OGIPDatasetWriter.rst", "api/gammapy.datasets.ObservationEventSampler.rst", "api/gammapy.datasets.SpectrumDataset.rst", "api/gammapy.datasets.SpectrumDatasetOnOff.rst", "api/gammapy.datasets.apply_edisp.rst", "api/gammapy.datasets.create_map_dataset_from_observation.rst", "api/gammapy.datasets.create_map_dataset_geoms.rst", "api/gammapy.datasets.split_dataset.rst", "api/gammapy.datasets.utils.apply_edisp.rst", "api/gammapy.datasets.utils.split_dataset.rst", "api/gammapy.estimators.ASmoothMapEstimator.rst", "api/gammapy.estimators.ESTIMATOR_REGISTRY.rst", "api/gammapy.estimators.EnergyDependentMorphologyEstimator.rst", "api/gammapy.estimators.Estimator.rst", "api/gammapy.estimators.ExcessMapEstimator.rst", "api/gammapy.estimators.FluxMaps.rst", "api/gammapy.estimators.FluxMetaData.rst", "api/gammapy.estimators.FluxPoints.rst", "api/gammapy.estimators.FluxPointsEstimator.rst", "api/gammapy.estimators.FluxProfileEstimator.rst", "api/gammapy.estimators.ImageProfile.rst", "api/gammapy.estimators.ImageProfileEstimator.rst", "api/gammapy.estimators.LightCurveEstimator.rst", "api/gammapy.estimators.ParameterEstimator.rst", "api/gammapy.estimators.SensitivityEstimator.rst", "api/gammapy.estimators.TSMapEstimator.rst", "api/gammapy.estimators.utils.combine_flux_maps.rst", "api/gammapy.estimators.utils.combine_significance_maps.rst", "api/gammapy.estimators.utils.compute_lightcurve_discrete_correlation.rst", "api/gammapy.estimators.utils.compute_lightcurve_doublingtime.rst", "api/gammapy.estimators.utils.compute_lightcurve_fpp.rst", "api/gammapy.estimators.utils.compute_lightcurve_fvar.rst", "api/gammapy.estimators.utils.estimate_exposure_reco_energy.rst", "api/gammapy.estimators.utils.find_peaks.rst", "api/gammapy.estimators.utils.find_peaks_in_flux_map.rst", "api/gammapy.estimators.utils.get_combined_flux_maps.rst", "api/gammapy.estimators.utils.get_combined_significance_maps.rst", "api/gammapy.estimators.utils.get_rebinned_axis.rst", "api/gammapy.estimators.utils.resample_energy_edges.rst", "api/gammapy.irf.Background2D.rst", "api/gammapy.irf.Background3D.rst", "api/gammapy.irf.BackgroundIRF.rst", "api/gammapy.irf.EDispKernel.rst", "api/gammapy.irf.EDispKernelMap.rst", "api/gammapy.irf.EDispMap.rst", "api/gammapy.irf.EffectiveAreaTable2D.rst", "api/gammapy.irf.EnergyDependentMultiGaussPSF.rst", "api/gammapy.irf.EnergyDispersion2D.rst", "api/gammapy.irf.FoVAlignment.rst", "api/gammapy.irf.IRF.rst", "api/gammapy.irf.IRFMap.rst", "api/gammapy.irf.IRF_REGISTRY.rst", "api/gammapy.irf.PSF3D.rst", "api/gammapy.irf.PSFKernel.rst", "api/gammapy.irf.PSFKing.rst", "api/gammapy.irf.PSFMap.rst", "api/gammapy.irf.ParametricPSF.rst", "api/gammapy.irf.RadMax2D.rst", "api/gammapy.irf.RecoPSFMap.rst", "api/gammapy.irf.load_irf_dict_from_file.rst", "api/gammapy.makers.AdaptiveRingBackgroundMaker.rst", "api/gammapy.makers.DatasetsMaker.rst", "api/gammapy.makers.FoVBackgroundMaker.rst", "api/gammapy.makers.MAKER_REGISTRY.rst", "api/gammapy.makers.Maker.rst", "api/gammapy.makers.MapDatasetMaker.rst", "api/gammapy.makers.PhaseBackgroundMaker.rst", "api/gammapy.makers.ReflectedRegionsBackgroundMaker.rst", "api/gammapy.makers.ReflectedRegionsFinder.rst", "api/gammapy.makers.RegionsFinder.rst", "api/gammapy.makers.RingBackgroundMaker.rst", "api/gammapy.makers.SafeMaskMaker.rst", "api/gammapy.makers.SpectrumDatasetMaker.rst", "api/gammapy.makers.WobbleRegionsFinder.rst", "api/gammapy.makers.utils.make_counts_rad_max.rst", "api/gammapy.makers.utils.make_edisp_kernel_map.rst", "api/gammapy.makers.utils.make_edisp_map.rst", "api/gammapy.makers.utils.make_effective_livetime_map.rst", "api/gammapy.makers.utils.make_map_background_irf.rst", "api/gammapy.makers.utils.make_map_exposure_true_energy.rst", "api/gammapy.makers.utils.make_observation_time_map.rst", "api/gammapy.makers.utils.make_psf_map.rst", "api/gammapy.makers.utils.make_theta_squared_table.rst", "api/gammapy.maps.Geom.rst", "api/gammapy.maps.HpxGeom.rst", "api/gammapy.maps.HpxMap.rst", "api/gammapy.maps.HpxNDMap.rst", "api/gammapy.maps.LabelMapAxis.rst", "api/gammapy.maps.Map.rst", "api/gammapy.maps.MapAxes.rst", "api/gammapy.maps.MapAxis.rst", "api/gammapy.maps.MapCoord.rst", "api/gammapy.maps.Maps.rst", "api/gammapy.maps.RegionGeom.rst", "api/gammapy.maps.RegionNDMap.rst", "api/gammapy.maps.TimeMapAxis.rst", "api/gammapy.maps.WcsGeom.rst", "api/gammapy.maps.WcsMap.rst", "api/gammapy.maps.WcsNDMap.rst", "api/gammapy.maps.containment_radius.rst", "api/gammapy.maps.containment_region.rst", "api/gammapy.modeling.Covariance.rst", "api/gammapy.modeling.CovarianceResult.rst", "api/gammapy.modeling.Fit.rst", "api/gammapy.modeling.FitResult.rst", "api/gammapy.modeling.OptimizeResult.rst", "api/gammapy.modeling.Parameter.rst", "api/gammapy.modeling.Parameters.rst", "api/gammapy.modeling.PriorParameter.rst", "api/gammapy.modeling.PriorParameters.rst", "api/gammapy.modeling.models.BrokenPowerLawSpectralModel.rst", "api/gammapy.modeling.models.CompoundSpectralModel.rst", "api/gammapy.modeling.models.ConstantFluxSpatialModel.rst", "api/gammapy.modeling.models.ConstantSpatialModel.rst", "api/gammapy.modeling.models.ConstantSpectralModel.rst", "api/gammapy.modeling.models.ConstantTemporalModel.rst", "api/gammapy.modeling.models.DatasetModels.rst", "api/gammapy.modeling.models.DiskSpatialModel.rst", "api/gammapy.modeling.models.EBLAbsorptionNormSpectralModel.rst", "api/gammapy.modeling.models.EBL_DATA_BUILTIN.rst", "api/gammapy.modeling.models.ExpCutoffPowerLaw3FGLSpectralModel.rst", "api/gammapy.modeling.models.ExpCutoffPowerLawNormSpectralModel.rst", "api/gammapy.modeling.models.ExpCutoffPowerLawSpectralModel.rst", "api/gammapy.modeling.models.ExpDecayTemporalModel.rst", "api/gammapy.modeling.models.FoVBackgroundModel.rst", "api/gammapy.modeling.models.GaussianSpatialModel.rst", "api/gammapy.modeling.models.GaussianSpectralModel.rst", "api/gammapy.modeling.models.GaussianTemporalModel.rst", "api/gammapy.modeling.models.GeneralizedGaussianSpatialModel.rst", "api/gammapy.modeling.models.GeneralizedGaussianTemporalModel.rst", "api/gammapy.modeling.models.LightCurveTemplateTemporalModel.rst", "api/gammapy.modeling.models.LinearTemporalModel.rst", "api/gammapy.modeling.models.LogParabolaNormSpectralModel.rst", "api/gammapy.modeling.models.LogParabolaSpectralModel.rst", "api/gammapy.modeling.models.MODEL_REGISTRY.rst", "api/gammapy.modeling.models.MeyerCrabSpectralModel.rst", "api/gammapy.modeling.models.Model.rst", "api/gammapy.modeling.models.ModelBase.rst", "api/gammapy.modeling.models.Models.rst", "api/gammapy.modeling.models.NaimaSpectralModel.rst", "api/gammapy.modeling.models.PiecewiseNormSpatialModel.rst", "api/gammapy.modeling.models.PiecewiseNormSpectralModel.rst", "api/gammapy.modeling.models.PointSpatialModel.rst", "api/gammapy.modeling.models.PowerLaw2SpectralModel.rst", "api/gammapy.modeling.models.PowerLawNormSpectralModel.rst", "api/gammapy.modeling.models.PowerLawSpectralModel.rst", "api/gammapy.modeling.models.PowerLawTemporalModel.rst", "api/gammapy.modeling.models.Prior.rst", "api/gammapy.modeling.models.SPATIAL_MODEL_REGISTRY.rst", "api/gammapy.modeling.models.SPECTRAL_MODEL_REGISTRY.rst", "api/gammapy.modeling.models.ScaleSpectralModel.rst", "api/gammapy.modeling.models.Shell2SpatialModel.rst", "api/gammapy.modeling.models.ShellSpatialModel.rst", "api/gammapy.modeling.models.SineTemporalModel.rst", "api/gammapy.modeling.models.SkyModel.rst", "api/gammapy.modeling.models.SmoothBrokenPowerLawSpectralModel.rst", "api/gammapy.modeling.models.SpatialModel.rst", "api/gammapy.modeling.models.SpectralModel.rst", "api/gammapy.modeling.models.SuperExpCutoffPowerLaw3FGLSpectralModel.rst", "api/gammapy.modeling.models.SuperExpCutoffPowerLaw4FGLDR3SpectralModel.rst", "api/gammapy.modeling.models.SuperExpCutoffPowerLaw4FGLSpectralModel.rst", "api/gammapy.modeling.models.TEMPORAL_MODEL_REGISTRY.rst", "api/gammapy.modeling.models.TemplateNDSpatialModel.rst", "api/gammapy.modeling.models.TemplateNDSpectralModel.rst", "api/gammapy.modeling.models.TemplateNPredModel.rst", "api/gammapy.modeling.models.TemplatePhaseCurveTemporalModel.rst", "api/gammapy.modeling.models.TemplateSpatialModel.rst", "api/gammapy.modeling.models.TemplateSpectralModel.rst", "api/gammapy.modeling.models.TemporalModel.rst", "api/gammapy.modeling.models.create_cosmic_ray_spectral_model.rst", "api/gammapy.modeling.models.create_crab_spectral_model.rst", "api/gammapy.modeling.models.create_fermi_isotropic_diffuse_model.rst", "api/gammapy.modeling.models.integrate_spectrum.rst", "api/gammapy.modeling.models.read_hermes_cube.rst", "api/gammapy.modeling.models.scale_plot_flux.rst", "api/gammapy.modeling.models.utils.read_hermes_cube.rst", "api/gammapy.modeling.select_nested_models.rst", "api/gammapy.modeling.stat_profile_ul_scipy.rst", "api/gammapy.stats.CashCountsStatistic.rst", "api/gammapy.stats.TimmerKonig_lightcurve_simulator.rst", "api/gammapy.stats.WStatCountsStatistic.rst", "api/gammapy.stats.cash.rst", "api/gammapy.stats.cash_sum_cython.rst", "api/gammapy.stats.compute_chisq.rst", "api/gammapy.stats.compute_flux_doubling.rst", "api/gammapy.stats.compute_fpp.rst", "api/gammapy.stats.compute_fvar.rst", "api/gammapy.stats.cstat.rst", "api/gammapy.stats.discrete_correlation.rst", "api/gammapy.stats.f_cash_root_cython.rst", "api/gammapy.stats.get_wstat_gof_terms.rst", "api/gammapy.stats.get_wstat_mu_bkg.rst", "api/gammapy.stats.norm_bounds_cython.rst", "api/gammapy.stats.structure_function.rst", "api/gammapy.stats.wstat.rst", "api/gammapy.utils.cluster.hierarchical_clustering.rst", "api/gammapy.utils.cluster.standard_scaler.rst", "api/gammapy.utils.coordinates.D_SUN_TO_GALACTIC_CENTER.rst", "api/gammapy.utils.coordinates.cartesian.rst", "api/gammapy.utils.coordinates.fov_to_sky.rst", "api/gammapy.utils.coordinates.galactic.rst", "api/gammapy.utils.coordinates.motion_since_birth.rst", "api/gammapy.utils.coordinates.polar.rst", "api/gammapy.utils.coordinates.sky_to_fov.rst", "api/gammapy.utils.coordinates.velocity_glon_glat.rst", "api/gammapy.utils.fits.HDULocation.rst", "api/gammapy.utils.fits.LazyFitsData.rst", "api/gammapy.utils.fits.earth_location_from_dict.rst", "api/gammapy.utils.integrate.trapz_loglog.rst", "api/gammapy.utils.interpolation.ScaledRegularGridInterpolator.rst", "api/gammapy.utils.interpolation.interpolate_profile.rst", "api/gammapy.utils.interpolation.interpolation_scale.rst", "api/gammapy.utils.parallel.BACKEND_DEFAULT.rst", "api/gammapy.utils.parallel.METHOD_DEFAULT.rst", "api/gammapy.utils.parallel.METHOD_KWARGS_DEFAULT.rst", "api/gammapy.utils.parallel.N_JOBS_DEFAULT.rst", "api/gammapy.utils.parallel.POOL_KWARGS_DEFAULT.rst", "api/gammapy.utils.parallel.multiprocessing_manager.rst", "api/gammapy.utils.parallel.run_multiprocessing.rst", "api/gammapy.utils.random.InverseCDFSampler.rst", "api/gammapy.utils.random.draw.rst", "api/gammapy.utils.random.get_random_state.rst", "api/gammapy.utils.random.normalize.rst", "api/gammapy.utils.random.pdf.rst", "api/gammapy.utils.random.sample_powerlaw.rst", "api/gammapy.utils.random.sample_sphere.rst", "api/gammapy.utils.random.sample_sphere_distance.rst", "api/gammapy.utils.random.sample_times.rst", "api/gammapy.utils.regions.compound_region_to_regions.rst", "api/gammapy.utils.regions.make_concentric_annulus_sky_regions.rst", "api/gammapy.utils.regions.make_orthogonal_rectangle_sky_regions.rst", "api/gammapy.utils.regions.region_to_frame.rst", "api/gammapy.utils.regions.regions_to_compound_region.rst", "api/gammapy.utils.scripts.from_yaml.rst", "api/gammapy.utils.scripts.get_images_paths.rst", "api/gammapy.utils.scripts.make_path.rst", "api/gammapy.utils.scripts.read_yaml.rst", "api/gammapy.utils.scripts.recursive_merge_dicts.rst", "api/gammapy.utils.scripts.to_yaml.rst", "api/gammapy.utils.scripts.write_yaml.rst", "api/gammapy.utils.table.hstack_columns.rst", "api/gammapy.utils.table.table_row_to_dict.rst", "api/gammapy.utils.table.table_standardise_units_copy.rst", "api/gammapy.utils.table.table_standardise_units_inplace.rst", "api/gammapy.utils.testing.Checker.rst", "api/gammapy.utils.testing.assert_quantity_allclose.rst", "api/gammapy.utils.testing.assert_skycoord_allclose.rst", "api/gammapy.utils.testing.assert_time_allclose.rst", "api/gammapy.utils.testing.mpl_plot_check.rst", "api/gammapy.utils.testing.requires_data.rst", "api/gammapy.utils.testing.requires_dependency.rst", "api/gammapy.utils.time.absolute_time.rst", "api/gammapy.utils.time.time_ref_from_dict.rst", "api/gammapy.utils.time.time_ref_to_dict.rst", "api/gammapy.utils.time.time_relative_to_ref.rst", "api/gammapy.utils.units.standardise_unit.rst", "api/gammapy.utils.units.unit_from_fits_image_hdu.rst", "api/gammapy.visualization.MapPanelPlotter.rst", "api/gammapy.visualization.add_colorbar.rst", "api/gammapy.visualization.annotate_heatmap.rst", "api/gammapy.visualization.colormap_hess.rst", "api/gammapy.visualization.colormap_milagro.rst", "api/gammapy.visualization.plot_contour_line.rst", "api/gammapy.visualization.plot_distribution.rst", "api/gammapy.visualization.plot_heatmap.rst", "api/gammapy.visualization.plot_map_rgb.rst", "api/gammapy.visualization.plot_npred_signal.rst", "api/gammapy.visualization.plot_spectrum_datasets_off_regions.rst", "api/gammapy.visualization.plot_theta_squared_table.rst", "development/dependencies.rst", "development/dev_howto.rst", "development/doc_howto.rst", "development/index.rst", "development/intro.rst", "development/pigs/index.rst", "development/pigs/pig-001.rst", "development/pigs/pig-002.rst", "development/pigs/pig-003.rst", "development/pigs/pig-004.rst", "development/pigs/pig-005.rst", "development/pigs/pig-006.rst", "development/pigs/pig-007.rst", "development/pigs/pig-008.rst", "development/pigs/pig-009.rst", "development/pigs/pig-010.rst", "development/pigs/pig-011.rst", "development/pigs/pig-012.rst", "development/pigs/pig-013.rst", "development/pigs/pig-014.rst", "development/pigs/pig-016.rst", "development/pigs/pig-018.rst", "development/pigs/pig-019.rst", "development/pigs/pig-020.rst", "development/pigs/pig-021.rst", "development/pigs/pig-022.rst", "development/pigs/pig-023.rst", "development/pigs/pig-024.rst", "development/pigs/pig-025.rst", "development/pigs/pig-026.rst", "development/release.rst", "development/setup.rst", "getting-started/environments.rst", "getting-started/index.rst", "getting-started/install.rst", "getting-started/quickstart.rst", "getting-started/troubleshooting.rst", "getting-started/usage.rst", "index.rst", "release-notes/index.rst", "release-notes/v0.1.rst", "release-notes/v0.10.rst", "release-notes/v0.11.rst", "release-notes/v0.12.rst", "release-notes/v0.13.rst", "release-notes/v0.14.rst", "release-notes/v0.15.rst", "release-notes/v0.16.rst", "release-notes/v0.17.rst", "release-notes/v0.18.rst", "release-notes/v0.18.1.rst", "release-notes/v0.18.2.rst", "release-notes/v0.19.rst", "release-notes/v0.2.rst", "release-notes/v0.20.rst", "release-notes/v0.20.1.rst", "release-notes/v0.3.rst", "release-notes/v0.4.rst", "release-notes/v0.5.rst", "release-notes/v0.6.rst", "release-notes/v0.7.rst", "release-notes/v0.8.rst", "release-notes/v0.9.rst", "release-notes/v1.0.rst", "release-notes/v1.0.1.rst", "release-notes/v1.0.2.rst", "release-notes/v1.1.rst", "release-notes/v1.2.rst", "release-notes/v1.3.rst", "sg_execution_times.rst", "tutorials/analysis-1d/cta_sensitivity.rst", "tutorials/analysis-1d/ebl.rst", "tutorials/analysis-1d/extended_source_spectral_analysis.rst", "tutorials/analysis-1d/sed_fitting.rst", "tutorials/analysis-1d/sg_execution_times.rst", "tutorials/analysis-1d/spectral_analysis.rst", "tutorials/analysis-1d/spectral_analysis_hli.rst", "tutorials/analysis-1d/spectral_analysis_rad_max.rst", "tutorials/analysis-1d/spectrum_simulation.rst", "tutorials/analysis-2d/detect.rst", "tutorials/analysis-2d/modeling_2D.rst", "tutorials/analysis-2d/ring_background.rst", "tutorials/analysis-2d/sg_execution_times.rst", "tutorials/analysis-3d/analysis_3d.rst", "tutorials/analysis-3d/analysis_mwl.rst", "tutorials/analysis-3d/cta_data_analysis.rst", "tutorials/analysis-3d/energy_dependent_estimation.rst", "tutorials/analysis-3d/event_sampling.rst", "tutorials/analysis-3d/event_sampling_nrg_depend_models.rst", "tutorials/analysis-3d/flux_profiles.rst", "tutorials/analysis-3d/sg_execution_times.rst", "tutorials/analysis-3d/simulate_3d.rst", "tutorials/analysis-time/light_curve.rst", "tutorials/analysis-time/light_curve_flare.rst", "tutorials/analysis-time/light_curve_simulation.rst", "tutorials/analysis-time/pulsar_analysis.rst", "tutorials/analysis-time/sg_execution_times.rst", "tutorials/analysis-time/time_resolved_spectroscopy.rst", "tutorials/analysis-time/variability_estimation.rst", "tutorials/api/astro_dark_matter.rst", "tutorials/api/catalog.rst", "tutorials/api/datasets.rst", "tutorials/api/estimators.rst", "tutorials/api/fitting.rst", "tutorials/api/irfs.rst", "tutorials/api/makers.rst", "tutorials/api/maps.rst", "tutorials/api/mask_maps.rst", "tutorials/api/model_management.rst", "tutorials/api/models.rst", "tutorials/api/observation_clustering.rst", "tutorials/api/priors.rst", "tutorials/api/sg_execution_times.rst", "tutorials/data/cta.rst", "tutorials/data/fermi_lat.rst", "tutorials/data/hawc.rst", "tutorials/data/hess.rst", "tutorials/data/sg_execution_times.rst", "tutorials/index.rst", "tutorials/scripts/sg_execution_times.rst", "tutorials/scripts/survey_map.rst", "tutorials/sg_execution_times.rst", "tutorials/starting/analysis_1.rst", "tutorials/starting/analysis_2.rst", "tutorials/starting/overview.rst", "tutorials/starting/sg_execution_times.rst", "user-guide/astro/darkmatter/index.rst", "user-guide/astro/index.rst", "user-guide/astro/population/index.rst", "user-guide/astro/source/index.rst", "user-guide/astro/source/pulsar.rst", "user-guide/astro/source/pwn.rst", "user-guide/astro/source/snr.rst", "user-guide/catalog.rst", "user-guide/datasets/index.rst", "user-guide/dl3.rst", "user-guide/estimators.rst", "user-guide/hli.rst", "user-guide/howto.rst", "user-guide/index.rst", "user-guide/irf/aeff.rst", "user-guide/irf/bkg.rst", "user-guide/irf/edisp.rst", "user-guide/irf/index.rst", "user-guide/irf/psf.rst", "user-guide/makers/fov.rst", "user-guide/makers/index.rst", "user-guide/makers/reflected.rst", "user-guide/makers/ring.rst", "user-guide/maps/hpxmap.rst", "user-guide/maps/index.rst", "user-guide/maps/regionmap.rst", "user-guide/model-gallery/index.rst", "user-guide/model-gallery/sg_execution_times.rst", "user-guide/model-gallery/spatial/plot_constant.rst", "user-guide/model-gallery/spatial/plot_disk.rst", "user-guide/model-gallery/spatial/plot_gauss.rst", "user-guide/model-gallery/spatial/plot_gen_gauss.rst", "user-guide/model-gallery/spatial/plot_piecewise_norm_spatial.rst", "user-guide/model-gallery/spatial/plot_point.rst", "user-guide/model-gallery/spatial/plot_shell.rst", "user-guide/model-gallery/spatial/plot_shell2.rst", "user-guide/model-gallery/spatial/plot_template.rst", "user-guide/model-gallery/spatial/sg_execution_times.rst", "user-guide/model-gallery/spectral/plot_absorbed.rst", "user-guide/model-gallery/spectral/plot_broken_powerlaw.rst", "user-guide/model-gallery/spectral/plot_compound.rst", "user-guide/model-gallery/spectral/plot_constant_spectral.rst", "user-guide/model-gallery/spectral/plot_exp_cutoff_powerlaw.rst", "user-guide/model-gallery/spectral/plot_exp_cutoff_powerlaw_3fgl.rst", "user-guide/model-gallery/spectral/plot_exp_cutoff_powerlaw_norm_spectral.rst", "user-guide/model-gallery/spectral/plot_gauss_spectral.rst", "user-guide/model-gallery/spectral/plot_logparabola.rst", "user-guide/model-gallery/spectral/plot_logparabola_norm_spectral.rst", "user-guide/model-gallery/spectral/plot_naima.rst", "user-guide/model-gallery/spectral/plot_piecewise_norm_spectral.rst", "user-guide/model-gallery/spectral/plot_powerlaw.rst", "user-guide/model-gallery/spectral/plot_powerlaw2.rst", "user-guide/model-gallery/spectral/plot_powerlaw_norm_spectral.rst", "user-guide/model-gallery/spectral/plot_smooth_broken_powerlaw.rst", "user-guide/model-gallery/spectral/plot_super_exp_cutoff_powerlaw_3fgl.rst", "user-guide/model-gallery/spectral/plot_super_exp_cutoff_powerlaw_4fgl.rst", "user-guide/model-gallery/spectral/plot_super_exp_cutoff_powerlaw_4fgl_dr1.rst", "user-guide/model-gallery/spectral/plot_template_spectral.rst", "user-guide/model-gallery/spectral/sg_execution_times.rst", "user-guide/model-gallery/temporal/plot_constant_temporal.rst", "user-guide/model-gallery/temporal/plot_expdecay_temporal.rst", "user-guide/model-gallery/temporal/plot_gaussian_temporal.rst", "user-guide/model-gallery/temporal/plot_generalized_gaussian_temporal.rst", "user-guide/model-gallery/temporal/plot_linear_temporal.rst", "user-guide/model-gallery/temporal/plot_powerlaw_temporal.rst", "user-guide/model-gallery/temporal/plot_sine_temporal.rst", "user-guide/model-gallery/temporal/plot_template_phase_temporal.rst", "user-guide/model-gallery/temporal/plot_template_temporal.rst", "user-guide/model-gallery/temporal/sg_execution_times.rst", "user-guide/modeling.rst", "user-guide/package.rst", "user-guide/references.rst", "user-guide/scripts/index.rst", "user-guide/stats/fit_statistics.rst", "user-guide/stats/index.rst", "user-guide/stats/wstat_derivation.rst", "user-guide/utils.rst", "user-guide/visualization/index.rst"], "indexentries": {"--dependencies": [[11, "cmdoption-gammapy-info-dependencies", false]], "--envvar": [[11, "cmdoption-gammapy-info-envvar", false]], "--filename": [[11, "cmdoption-gammapy-analysis-config-filename", false], [11, "cmdoption-gammapy-analysis-run-filename", false]], "--ignore-warnings": [[11, "cmdoption-gammapy-ignore-warnings", false]], "--log-level": [[11, "cmdoption-gammapy-log-level", false]], "--no-dependencies": [[11, "cmdoption-gammapy-info-dependencies", false]], "--no-envvar": [[11, "cmdoption-gammapy-info-envvar", false]], "--no-system": [[11, "cmdoption-gammapy-info-system", false]], "--no-version": [[11, "cmdoption-gammapy-info-version", false]], "--out": [[11, "cmdoption-gammapy-analysis-run-out", false], [11, "cmdoption-gammapy-download-datasets-out", false], [11, "cmdoption-gammapy-download-notebooks-out", false]], "--overwrite": [[11, "cmdoption-gammapy-analysis-config-overwrite", false], [11, "cmdoption-gammapy-analysis-run-overwrite", false]], "--release": [[11, "cmdoption-gammapy-download-datasets-release", false], [11, "cmdoption-gammapy-download-notebooks-release", false]], "--system": [[11, "cmdoption-gammapy-info-system", false]], "--version": [[11, "cmdoption-gammapy-info-version", false], [11, "cmdoption-gammapy-version", false]], "1d analysis": [[573, "term-1D-Analysis", true]], "3d analysis": [[573, "term-3D-Analysis", true]], "__call__() (gammapy.astro.darkmatter.burkertprofile method)": [[17, "gammapy.astro.darkmatter.BurkertProfile.__call__", false]], "__call__() (gammapy.astro.darkmatter.darkmatterannihilationspectralmodel method)": [[19, "gammapy.astro.darkmatter.DarkMatterAnnihilationSpectralModel.__call__", false]], "__call__() (gammapy.astro.darkmatter.darkmatterdecayspectralmodel method)": [[20, "gammapy.astro.darkmatter.DarkMatterDecaySpectralModel.__call__", false]], "__call__() (gammapy.astro.darkmatter.dmprofile method)": [[18, "gammapy.astro.darkmatter.DMProfile.__call__", false]], "__call__() (gammapy.astro.darkmatter.einastoprofile method)": [[21, "gammapy.astro.darkmatter.EinastoProfile.__call__", false]], "__call__() (gammapy.astro.darkmatter.isothermalprofile method)": [[22, "gammapy.astro.darkmatter.IsothermalProfile.__call__", false]], "__call__() (gammapy.astro.darkmatter.mooreprofile method)": [[24, "gammapy.astro.darkmatter.MooreProfile.__call__", false]], "__call__() (gammapy.astro.darkmatter.nfwprofile method)": [[25, "gammapy.astro.darkmatter.NFWProfile.__call__", false]], "__call__() (gammapy.astro.darkmatter.primaryflux method)": [[26, "gammapy.astro.darkmatter.PrimaryFlux.__call__", false]], "__call__() (gammapy.astro.darkmatter.zhaoprofile method)": [[27, "gammapy.astro.darkmatter.ZhaoProfile.__call__", false]], "__call__() (gammapy.astro.population.casebattacharya1998 method)": [[28, "gammapy.astro.population.CaseBattacharya1998.__call__", false]], "__call__() (gammapy.astro.population.exponential method)": [[29, "gammapy.astro.population.Exponential.__call__", false]], "__call__() (gammapy.astro.population.faucherkaspi2006 method)": [[30, "gammapy.astro.population.FaucherKaspi2006.__call__", false]], "__call__() (gammapy.astro.population.faucherkaspi2006velocitybimodal method)": [[31, "gammapy.astro.population.FaucherKaspi2006VelocityBimodal.__call__", false]], "__call__() (gammapy.astro.population.faucherkaspi2006velocitymaxwellian method)": [[32, "gammapy.astro.population.FaucherKaspi2006VelocityMaxwellian.__call__", false]], "__call__() (gammapy.astro.population.faucherspiral method)": [[33, "gammapy.astro.population.FaucherSpiral.__call__", false]], "__call__() (gammapy.astro.population.lorimer2006 method)": [[35, "gammapy.astro.population.Lorimer2006.__call__", false]], "__call__() (gammapy.astro.population.paczynski1990 method)": [[36, "gammapy.astro.population.Paczynski1990.__call__", false]], "__call__() (gammapy.astro.population.paczynski1990velocity method)": [[37, "gammapy.astro.population.Paczynski1990Velocity.__call__", false]], "__call__() (gammapy.astro.population.yusifovkucuk2004 method)": [[39, "gammapy.astro.population.YusifovKucuk2004.__call__", false]], "__call__() (gammapy.astro.population.yusifovkucuk2004b method)": [[40, "gammapy.astro.population.YusifovKucuk2004B.__call__", false]], "__call__() (gammapy.modeling.models.brokenpowerlawspectralmodel method)": [[217, "gammapy.modeling.models.BrokenPowerLawSpectralModel.__call__", false]], "__call__() (gammapy.modeling.models.compoundspectralmodel method)": [[218, "gammapy.modeling.models.CompoundSpectralModel.__call__", false]], "__call__() (gammapy.modeling.models.constantfluxspatialmodel method)": [[219, "gammapy.modeling.models.ConstantFluxSpatialModel.__call__", false]], "__call__() (gammapy.modeling.models.constantspatialmodel method)": [[220, "gammapy.modeling.models.ConstantSpatialModel.__call__", false]], "__call__() (gammapy.modeling.models.constantspectralmodel method)": [[221, "gammapy.modeling.models.ConstantSpectralModel.__call__", false]], "__call__() (gammapy.modeling.models.constanttemporalmodel method)": [[222, "gammapy.modeling.models.ConstantTemporalModel.__call__", false]], "__call__() (gammapy.modeling.models.diskspatialmodel method)": [[224, "gammapy.modeling.models.DiskSpatialModel.__call__", false]], "__call__() (gammapy.modeling.models.eblabsorptionnormspectralmodel method)": [[225, "gammapy.modeling.models.EBLAbsorptionNormSpectralModel.__call__", false]], "__call__() (gammapy.modeling.models.expcutoffpowerlaw3fglspectralmodel method)": [[227, "gammapy.modeling.models.ExpCutoffPowerLaw3FGLSpectralModel.__call__", false]], "__call__() (gammapy.modeling.models.expcutoffpowerlawnormspectralmodel method)": [[228, "gammapy.modeling.models.ExpCutoffPowerLawNormSpectralModel.__call__", false]], "__call__() (gammapy.modeling.models.expcutoffpowerlawspectralmodel method)": [[229, "gammapy.modeling.models.ExpCutoffPowerLawSpectralModel.__call__", false]], "__call__() (gammapy.modeling.models.expdecaytemporalmodel method)": [[230, "gammapy.modeling.models.ExpDecayTemporalModel.__call__", false]], "__call__() (gammapy.modeling.models.gaussianspatialmodel method)": [[232, "gammapy.modeling.models.GaussianSpatialModel.__call__", false]], "__call__() (gammapy.modeling.models.gaussianspectralmodel method)": [[233, "gammapy.modeling.models.GaussianSpectralModel.__call__", false]], "__call__() (gammapy.modeling.models.gaussiantemporalmodel method)": [[234, "gammapy.modeling.models.GaussianTemporalModel.__call__", false]], "__call__() (gammapy.modeling.models.generalizedgaussianspatialmodel method)": [[235, "gammapy.modeling.models.GeneralizedGaussianSpatialModel.__call__", false]], "__call__() (gammapy.modeling.models.generalizedgaussiantemporalmodel method)": [[236, "gammapy.modeling.models.GeneralizedGaussianTemporalModel.__call__", false]], "__call__() (gammapy.modeling.models.lightcurvetemplatetemporalmodel method)": [[237, "gammapy.modeling.models.LightCurveTemplateTemporalModel.__call__", false]], "__call__() (gammapy.modeling.models.lineartemporalmodel method)": [[238, "gammapy.modeling.models.LinearTemporalModel.__call__", false]], "__call__() (gammapy.modeling.models.logparabolanormspectralmodel method)": [[239, "gammapy.modeling.models.LogParabolaNormSpectralModel.__call__", false]], "__call__() (gammapy.modeling.models.logparabolaspectralmodel method)": [[240, "gammapy.modeling.models.LogParabolaSpectralModel.__call__", false]], "__call__() (gammapy.modeling.models.meyercrabspectralmodel method)": [[242, "gammapy.modeling.models.MeyerCrabSpectralModel.__call__", false]], "__call__() (gammapy.modeling.models.naimaspectralmodel method)": [[246, "gammapy.modeling.models.NaimaSpectralModel.__call__", false]], "__call__() (gammapy.modeling.models.piecewisenormspatialmodel method)": [[247, "gammapy.modeling.models.PiecewiseNormSpatialModel.__call__", false]], "__call__() (gammapy.modeling.models.piecewisenormspectralmodel method)": [[248, "gammapy.modeling.models.PiecewiseNormSpectralModel.__call__", false]], "__call__() (gammapy.modeling.models.pointspatialmodel method)": [[249, "gammapy.modeling.models.PointSpatialModel.__call__", false]], "__call__() (gammapy.modeling.models.powerlaw2spectralmodel method)": [[250, "gammapy.modeling.models.PowerLaw2SpectralModel.__call__", false]], "__call__() (gammapy.modeling.models.powerlawnormspectralmodel method)": [[251, "gammapy.modeling.models.PowerLawNormSpectralModel.__call__", false]], "__call__() (gammapy.modeling.models.powerlawspectralmodel method)": [[252, "gammapy.modeling.models.PowerLawSpectralModel.__call__", false]], "__call__() (gammapy.modeling.models.powerlawtemporalmodel method)": [[253, "gammapy.modeling.models.PowerLawTemporalModel.__call__", false]], "__call__() (gammapy.modeling.models.prior method)": [[254, "gammapy.modeling.models.Prior.__call__", false]], "__call__() (gammapy.modeling.models.scalespectralmodel method)": [[257, "gammapy.modeling.models.ScaleSpectralModel.__call__", false]], "__call__() (gammapy.modeling.models.shell2spatialmodel method)": [[258, "gammapy.modeling.models.Shell2SpatialModel.__call__", false]], "__call__() (gammapy.modeling.models.shellspatialmodel method)": [[259, "gammapy.modeling.models.ShellSpatialModel.__call__", false]], "__call__() (gammapy.modeling.models.sinetemporalmodel method)": [[260, "gammapy.modeling.models.SineTemporalModel.__call__", false]], "__call__() (gammapy.modeling.models.skymodel method)": [[261, "gammapy.modeling.models.SkyModel.__call__", false]], "__call__() (gammapy.modeling.models.smoothbrokenpowerlawspectralmodel method)": [[262, "gammapy.modeling.models.SmoothBrokenPowerLawSpectralModel.__call__", false]], "__call__() (gammapy.modeling.models.spatialmodel method)": [[263, "gammapy.modeling.models.SpatialModel.__call__", false]], "__call__() (gammapy.modeling.models.spectralmodel method)": [[264, "gammapy.modeling.models.SpectralModel.__call__", false]], "__call__() (gammapy.modeling.models.superexpcutoffpowerlaw3fglspectralmodel method)": [[265, "gammapy.modeling.models.SuperExpCutoffPowerLaw3FGLSpectralModel.__call__", false]], "__call__() (gammapy.modeling.models.superexpcutoffpowerlaw4fgldr3spectralmodel method)": [[266, "gammapy.modeling.models.SuperExpCutoffPowerLaw4FGLDR3SpectralModel.__call__", false]], "__call__() (gammapy.modeling.models.superexpcutoffpowerlaw4fglspectralmodel method)": [[267, "gammapy.modeling.models.SuperExpCutoffPowerLaw4FGLSpectralModel.__call__", false]], "__call__() (gammapy.modeling.models.templatendspatialmodel method)": [[269, "gammapy.modeling.models.TemplateNDSpatialModel.__call__", false]], "__call__() (gammapy.modeling.models.templatendspectralmodel method)": [[270, "gammapy.modeling.models.TemplateNDSpectralModel.__call__", false]], "__call__() (gammapy.modeling.models.templatephasecurvetemporalmodel method)": [[272, "gammapy.modeling.models.TemplatePhaseCurveTemporalModel.__call__", false]], "__call__() (gammapy.modeling.models.templatespatialmodel method)": [[273, "gammapy.modeling.models.TemplateSpatialModel.__call__", false]], "__call__() (gammapy.modeling.models.templatespectralmodel method)": [[274, "gammapy.modeling.models.TemplateSpectralModel.__call__", false]], "__call__() (gammapy.modeling.models.temporalmodel method)": [[275, "gammapy.modeling.models.TemporalModel.__call__", false]], "__call__() (gammapy.utils.interpolation.scaledregulargridinterpolator method)": [[316, "gammapy.utils.interpolation.ScaledRegularGridInterpolator.__call__", false]], "a (gammapy.astro.population.yusifovkucuk2004 attribute)": [[39, "gammapy.astro.population.YusifovKucuk2004.a", false]], "a (gammapy.astro.population.yusifovkucuk2004b attribute)": [[40, "gammapy.astro.population.YusifovKucuk2004B.a", false]], "absolute_time() (in module gammapy.utils.time)": [[358, "gammapy.utils.time.absolute_time", false]], "acceptance_off (gammapy.estimators.fluxmaps attribute)": [[122, "gammapy.estimators.FluxMaps.acceptance_off", false]], "acceptance_off (gammapy.estimators.fluxpoints attribute)": [[124, "gammapy.estimators.FluxPoints.acceptance_off", false]], "acceptance_on (gammapy.estimators.fluxmaps attribute)": [[122, "gammapy.estimators.FluxMaps.acceptance_on", false]], "acceptance_on (gammapy.estimators.fluxpoints attribute)": [[124, "gammapy.estimators.FluxPoints.acceptance_on", false]], "adaptiveringbackgroundmaker (class in gammapy.makers)": [[167, "gammapy.makers.AdaptiveRingBackgroundMaker", false]], "add_colorbar() (in module gammapy.visualization)": [[365, "gammapy.visualization.add_colorbar", false]], "add_column() (gammapy.data.hduindextable method)": [[87, "gammapy.data.HDUIndexTable.add_column", false]], "add_column() (gammapy.data.observationtable method)": [[91, "gammapy.data.ObservationTable.add_column", false]], "add_columns() (gammapy.data.hduindextable method)": [[87, "gammapy.data.HDUIndexTable.add_columns", false]], "add_columns() (gammapy.data.observationtable method)": [[91, "gammapy.data.ObservationTable.add_columns", false]], "add_index() (gammapy.data.hduindextable method)": [[87, "gammapy.data.HDUIndexTable.add_index", false]], "add_index() (gammapy.data.observationtable method)": [[91, "gammapy.data.ObservationTable.add_index", false]], "add_observed_parameters() (in module gammapy.astro.population)": [[41, "gammapy.astro.population.add_observed_parameters", false]], "add_pulsar_parameters() (in module gammapy.astro.population)": [[42, "gammapy.astro.population.add_pulsar_parameters", false]], "add_pwn_parameters() (in module gammapy.astro.population)": [[43, "gammapy.astro.population.add_pwn_parameters", false]], "add_row() (gammapy.data.hduindextable method)": [[87, "gammapy.data.HDUIndexTable.add_row", false]], "add_row() (gammapy.data.observationtable method)": [[91, "gammapy.data.ObservationTable.add_row", false]], "add_snr_parameters() (in module gammapy.astro.population)": [[44, "gammapy.astro.population.add_snr_parameters", false]], "aeff": [[573, "term-Aeff", true]], "aeff (gammapy.data.observation attribute)": [[88, "gammapy.data.Observation.aeff", false]], "all_quantities() (gammapy.estimators.fluxmaps static method)": [[122, "gammapy.estimators.FluxMaps.all_quantities", false]], "all_quantities() (gammapy.estimators.fluxpoints static method)": [[124, "gammapy.estimators.FluxPoints.all_quantities", false]], "allowed_channels (gammapy.astro.darkmatter.primaryflux attribute)": [[26, "gammapy.astro.darkmatter.PrimaryFlux.allowed_channels", false]], "alpha (gammapy.astro.population.casebattacharya1998 attribute)": [[28, "gammapy.astro.population.CaseBattacharya1998.alpha", false]], "alpha (gammapy.datasets.mapdatasetonoff attribute)": [[105, "gammapy.datasets.MapDatasetOnOff.alpha", false]], "alpha (gammapy.datasets.spectrumdatasetonoff attribute)": [[110, "gammapy.datasets.SpectrumDatasetOnOff.alpha", false]], "alpha (gammapy.estimators.fluxmaps attribute)": [[122, "gammapy.estimators.FluxMaps.alpha", false]], "alpha (gammapy.estimators.fluxpoints attribute)": [[124, "gammapy.estimators.FluxPoints.alpha", false]], "alpha (gammapy.modeling.models.expcutoffpowerlawnormspectralmodel attribute)": [[228, "gammapy.modeling.models.ExpCutoffPowerLawNormSpectralModel.alpha", false]], "alpha (gammapy.modeling.models.expcutoffpowerlawspectralmodel attribute)": [[229, "gammapy.modeling.models.ExpCutoffPowerLawSpectralModel.alpha", false]], "alpha (gammapy.modeling.models.lineartemporalmodel attribute)": [[238, "gammapy.modeling.models.LinearTemporalModel.alpha", false]], "alpha (gammapy.modeling.models.logparabolanormspectralmodel attribute)": [[239, "gammapy.modeling.models.LogParabolaNormSpectralModel.alpha", false]], "alpha (gammapy.modeling.models.logparabolaspectralmodel attribute)": [[240, "gammapy.modeling.models.LogParabolaSpectralModel.alpha", false]], "alpha (gammapy.modeling.models.powerlawtemporalmodel attribute)": [[253, "gammapy.modeling.models.PowerLawTemporalModel.alpha", false]], "alpha_norm (gammapy.modeling.models.eblabsorptionnormspectralmodel attribute)": [[225, "gammapy.modeling.models.EBLAbsorptionNormSpectralModel.alpha_norm", false]], "altaz (gammapy.data.eventlist attribute)": [[83, "gammapy.data.EventList.altaz", false]], "altaz (gammapy.data.pointinginfo attribute)": [[94, "gammapy.data.PointingInfo.altaz", false]], "altaz (gammapy.irf.fovalignment attribute)": [[155, "gammapy.irf.FoVAlignment.ALTAZ", false]], "altaz_frame (gammapy.data.eventlist attribute)": [[83, "gammapy.data.EventList.altaz_frame", false]], "altaz_frame (gammapy.data.pointinginfo attribute)": [[94, "gammapy.data.PointingInfo.altaz_frame", false]], "altaz_from_table (gammapy.data.eventlist attribute)": [[83, "gammapy.data.EventList.altaz_from_table", false]], "altaz_from_table (gammapy.data.pointinginfo attribute)": [[94, "gammapy.data.PointingInfo.altaz_from_table", false]], "altaz_interpolate() (gammapy.data.pointinginfo method)": [[94, "gammapy.data.PointingInfo.altaz_interpolate", false]], "amp (gammapy.modeling.models.sinetemporalmodel attribute)": [[260, "gammapy.modeling.models.SineTemporalModel.amp", false]], "amplitude (gammapy.astro.population.casebattacharya1998 attribute)": [[28, "gammapy.astro.population.CaseBattacharya1998.amplitude", false]], "amplitude (gammapy.astro.population.exponential attribute)": [[29, "gammapy.astro.population.Exponential.amplitude", false]], "amplitude (gammapy.astro.population.faucherkaspi2006 attribute)": [[30, "gammapy.astro.population.FaucherKaspi2006.amplitude", false]], "amplitude (gammapy.astro.population.faucherkaspi2006velocitybimodal attribute)": [[31, "gammapy.astro.population.FaucherKaspi2006VelocityBimodal.amplitude", false]], "amplitude (gammapy.astro.population.faucherkaspi2006velocitymaxwellian attribute)": [[32, "gammapy.astro.population.FaucherKaspi2006VelocityMaxwellian.amplitude", false]], "amplitude (gammapy.astro.population.lorimer2006 attribute)": [[35, "gammapy.astro.population.Lorimer2006.amplitude", false]], "amplitude (gammapy.astro.population.paczynski1990 attribute)": [[36, "gammapy.astro.population.Paczynski1990.amplitude", false]], "amplitude (gammapy.astro.population.paczynski1990velocity attribute)": [[37, "gammapy.astro.population.Paczynski1990Velocity.amplitude", false]], "amplitude (gammapy.astro.population.yusifovkucuk2004 attribute)": [[39, "gammapy.astro.population.YusifovKucuk2004.amplitude", false]], "amplitude (gammapy.astro.population.yusifovkucuk2004b attribute)": [[40, "gammapy.astro.population.YusifovKucuk2004B.amplitude", false]], "amplitude (gammapy.modeling.models.brokenpowerlawspectralmodel attribute)": [[217, "gammapy.modeling.models.BrokenPowerLawSpectralModel.amplitude", false]], "amplitude (gammapy.modeling.models.expcutoffpowerlaw3fglspectralmodel attribute)": [[227, "gammapy.modeling.models.ExpCutoffPowerLaw3FGLSpectralModel.amplitude", false]], "amplitude (gammapy.modeling.models.expcutoffpowerlawspectralmodel attribute)": [[229, "gammapy.modeling.models.ExpCutoffPowerLawSpectralModel.amplitude", false]], "amplitude (gammapy.modeling.models.gaussianspectralmodel attribute)": [[233, "gammapy.modeling.models.GaussianSpectralModel.amplitude", false]], "amplitude (gammapy.modeling.models.logparabolaspectralmodel attribute)": [[240, "gammapy.modeling.models.LogParabolaSpectralModel.amplitude", false]], "amplitude (gammapy.modeling.models.powerlaw2spectralmodel attribute)": [[250, "gammapy.modeling.models.PowerLaw2SpectralModel.amplitude", false]], "amplitude (gammapy.modeling.models.powerlawspectralmodel attribute)": [[252, "gammapy.modeling.models.PowerLawSpectralModel.amplitude", false]], "amplitude (gammapy.modeling.models.smoothbrokenpowerlawspectralmodel attribute)": [[262, "gammapy.modeling.models.SmoothBrokenPowerLawSpectralModel.amplitude", false]], "amplitude (gammapy.modeling.models.superexpcutoffpowerlaw3fglspectralmodel attribute)": [[265, "gammapy.modeling.models.SuperExpCutoffPowerLaw3FGLSpectralModel.amplitude", false]], "amplitude (gammapy.modeling.models.superexpcutoffpowerlaw4fgldr3spectralmodel attribute)": [[266, "gammapy.modeling.models.SuperExpCutoffPowerLaw4FGLDR3SpectralModel.amplitude", false]], "amplitude (gammapy.modeling.models.superexpcutoffpowerlaw4fglspectralmodel attribute)": [[267, "gammapy.modeling.models.SuperExpCutoffPowerLaw4FGLSpectralModel.amplitude", false]], "analysis (class in gammapy.analysis)": [[15, "gammapy.analysis.Analysis", false]], "analysisconfig (class in gammapy.analysis)": [[16, "gammapy.analysis.AnalysisConfig", false]], "annotate_heatmap() (in module gammapy.visualization)": [[366, "gammapy.visualization.annotate_heatmap", false]], "append() (gammapy.data.observations method)": [[92, "gammapy.data.Observations.append", false]], "append() (gammapy.datasets.datasets method)": [[100, "gammapy.datasets.Datasets.append", false]], "append() (gammapy.modeling.models.models method)": [[245, "gammapy.modeling.models.Models.append", false]], "apply_edisp() (in module gammapy.datasets)": [[111, "gammapy.datasets.apply_edisp", false]], "apply_edisp() (in module gammapy.datasets.utils)": [[115, "gammapy.datasets.utils.apply_edisp", false]], "apply_mask() (gammapy.maps.mapcoord method)": [[198, "gammapy.maps.MapCoord.apply_mask", false]], "argsort() (gammapy.data.hduindextable method)": [[87, "gammapy.data.HDUIndexTable.argsort", false]], "argsort() (gammapy.data.observationtable method)": [[91, "gammapy.data.ObservationTable.argsort", false]], "as_array() (gammapy.data.hduindextable method)": [[87, "gammapy.data.HDUIndexTable.as_array", false]], "as_array() (gammapy.data.observationtable method)": [[91, "gammapy.data.ObservationTable.as_array", false]], "as_energy_true (gammapy.maps.geom attribute)": [[190, "gammapy.maps.Geom.as_energy_true", false]], "as_energy_true (gammapy.maps.hpxgeom attribute)": [[191, "gammapy.maps.HpxGeom.as_energy_true", false]], "as_energy_true (gammapy.maps.regiongeom attribute)": [[200, "gammapy.maps.RegionGeom.as_energy_true", false]], "as_energy_true (gammapy.maps.wcsgeom attribute)": [[203, "gammapy.maps.WcsGeom.as_energy_true", false]], "as_plot_center (gammapy.maps.labelmapaxis attribute)": [[194, "gammapy.maps.LabelMapAxis.as_plot_center", false]], "as_plot_center (gammapy.maps.mapaxis attribute)": [[197, "gammapy.maps.MapAxis.as_plot_center", false]], "as_plot_center (gammapy.maps.timemapaxis attribute)": [[202, "gammapy.maps.TimeMapAxis.as_plot_center", false]], "as_plot_edges (gammapy.maps.labelmapaxis attribute)": [[194, "gammapy.maps.LabelMapAxis.as_plot_edges", false]], "as_plot_edges (gammapy.maps.mapaxis attribute)": [[197, "gammapy.maps.MapAxis.as_plot_edges", false]], "as_plot_edges (gammapy.maps.timemapaxis attribute)": [[202, "gammapy.maps.TimeMapAxis.as_plot_edges", false]], "as_plot_labels (gammapy.maps.labelmapaxis attribute)": [[194, "gammapy.maps.LabelMapAxis.as_plot_labels", false]], "as_plot_labels (gammapy.maps.mapaxis attribute)": [[197, "gammapy.maps.MapAxis.as_plot_labels", false]], "as_plot_labels (gammapy.maps.timemapaxis attribute)": [[202, "gammapy.maps.TimeMapAxis.as_plot_labels", false]], "as_plot_scale (gammapy.maps.mapaxis attribute)": [[197, "gammapy.maps.MapAxis.as_plot_scale", false]], "as_plot_xerr (gammapy.maps.labelmapaxis attribute)": [[194, "gammapy.maps.LabelMapAxis.as_plot_xerr", false]], "as_plot_xerr (gammapy.maps.mapaxis attribute)": [[197, "gammapy.maps.MapAxis.as_plot_xerr", false]], "as_plot_xerr (gammapy.maps.timemapaxis attribute)": [[202, "gammapy.maps.TimeMapAxis.as_plot_xerr", false]], "asmoothmapestimator (class in gammapy.estimators)": [[117, "gammapy.estimators.ASmoothMapEstimator", false]], "assert_name() (gammapy.maps.labelmapaxis method)": [[194, "gammapy.maps.LabelMapAxis.assert_name", false]], "assert_name() (gammapy.maps.mapaxis method)": [[197, "gammapy.maps.MapAxis.assert_name", false]], "assert_name() (gammapy.maps.timemapaxis method)": [[202, "gammapy.maps.TimeMapAxis.assert_name", false]], "assert_names() (gammapy.maps.mapaxes method)": [[196, "gammapy.maps.MapAxes.assert_names", false]], "assert_quantity_allclose() (in module gammapy.utils.testing)": [[352, "gammapy.utils.testing.assert_quantity_allclose", false]], "assert_skycoord_allclose() (in module gammapy.utils.testing)": [[353, "gammapy.utils.testing.assert_skycoord_allclose", false]], "assert_time_allclose() (in module gammapy.utils.testing)": [[354, "gammapy.utils.testing.assert_time_allclose", false]], "asso (gammapy.catalog.sourcecatalogobject2fhl attribute)": [[71, "gammapy.catalog.SourceCatalogObject2FHL.asso", false]], "asso (gammapy.catalog.sourcecatalogobject3fgl attribute)": [[74, "gammapy.catalog.SourceCatalogObject3FGL.asso", false]], "asso (gammapy.catalog.sourcecatalogobject3fhl attribute)": [[75, "gammapy.catalog.SourceCatalogObject3FHL.asso", false]], "asso (gammapy.catalog.sourcecatalogobject3pc attribute)": [[77, "gammapy.catalog.SourceCatalogObject3PC.asso", false]], "asso (gammapy.catalog.sourcecatalogobject4fgl attribute)": [[78, "gammapy.catalog.SourceCatalogObject4FGL.asso", false]], "autoscale() (gammapy.modeling.parameter method)": [[213, "gammapy.modeling.Parameter.autoscale", false]], "autoscale() (gammapy.modeling.parameters method)": [[214, "gammapy.modeling.Parameters.autoscale", false]], "autoscale() (gammapy.modeling.priorparameter method)": [[215, "gammapy.modeling.PriorParameter.autoscale", false]], "autoscale() (gammapy.modeling.priorparameters method)": [[216, "gammapy.modeling.PriorParameters.autoscale", false]], "available_hdus (gammapy.data.observation attribute)": [[88, "gammapy.data.Observation.available_hdus", false]], "available_irfs (gammapy.data.observation attribute)": [[88, "gammapy.data.Observation.available_irfs", false]], "available_methods (gammapy.makers.fovbackgroundmaker attribute)": [[169, "gammapy.makers.FoVBackgroundMaker.available_methods", false]], "available_methods (gammapy.makers.safemaskmaker attribute)": [[178, "gammapy.makers.SafeMaskMaker.available_methods", false]], "available_quantities (gammapy.estimators.fluxmaps attribute)": [[122, "gammapy.estimators.FluxMaps.available_quantities", false]], "available_quantities (gammapy.estimators.fluxpoints attribute)": [[124, "gammapy.estimators.FluxPoints.available_quantities", false]], "available_selection (gammapy.makers.mapdatasetmaker attribute)": [[172, "gammapy.makers.MapDatasetMaker.available_selection", false]], "available_selection (gammapy.makers.spectrumdatasetmaker attribute)": [[179, "gammapy.makers.SpectrumDatasetMaker.available_selection", false]], "available_stat_type (gammapy.datasets.fluxpointsdataset attribute)": [[101, "gammapy.datasets.FluxPointsDataset.available_stat_type", false]], "axes (gammapy.irf.background2d attribute)": [[146, "gammapy.irf.Background2D.axes", false]], "axes (gammapy.irf.background3d attribute)": [[147, "gammapy.irf.Background3D.axes", false]], "axes (gammapy.irf.backgroundirf attribute)": [[148, "gammapy.irf.BackgroundIRF.axes", false]], "axes (gammapy.irf.edispkernel attribute)": [[149, "gammapy.irf.EDispKernel.axes", false]], "axes (gammapy.irf.effectiveareatable2d attribute)": [[152, "gammapy.irf.EffectiveAreaTable2D.axes", false]], "axes (gammapy.irf.energydependentmultigausspsf attribute)": [[153, "gammapy.irf.EnergyDependentMultiGaussPSF.axes", false]], "axes (gammapy.irf.energydispersion2d attribute)": [[154, "gammapy.irf.EnergyDispersion2D.axes", false]], "axes (gammapy.irf.irf attribute)": [[156, "gammapy.irf.IRF.axes", false]], "axes (gammapy.irf.parametricpsf attribute)": [[163, "gammapy.irf.ParametricPSF.axes", false]], "axes (gammapy.irf.psf3d attribute)": [[159, "gammapy.irf.PSF3D.axes", false]], "axes (gammapy.irf.psfking attribute)": [[161, "gammapy.irf.PSFKing.axes", false]], "axes (gammapy.irf.radmax2d attribute)": [[164, "gammapy.irf.RadMax2D.axes", false]], "axes (gammapy.maps.hpxgeom attribute)": [[191, "gammapy.maps.HpxGeom.axes", false]], "axes (gammapy.maps.regiongeom attribute)": [[200, "gammapy.maps.RegionGeom.axes", false]], "axes (gammapy.maps.wcsgeom attribute)": [[203, "gammapy.maps.WcsGeom.axes", false]], "axes_names (gammapy.maps.hpxgeom attribute)": [[191, "gammapy.maps.HpxGeom.axes_names", false]], "axes_names (gammapy.maps.regiongeom attribute)": [[200, "gammapy.maps.RegionGeom.axes_names", false]], "axes_names (gammapy.maps.wcsgeom attribute)": [[203, "gammapy.maps.WcsGeom.axes_names", false]], "axis_names (gammapy.maps.mapcoord attribute)": [[198, "gammapy.maps.MapCoord.axis_names", false]], "b (gammapy.astro.population.lorimer2006 attribute)": [[35, "gammapy.astro.population.Lorimer2006.B", false]], "b (gammapy.astro.population.yusifovkucuk2004 attribute)": [[39, "gammapy.astro.population.YusifovKucuk2004.b", false]], "b (gammapy.astro.population.yusifovkucuk2004b attribute)": [[40, "gammapy.astro.population.YusifovKucuk2004B.b", false]], "backend (gammapy.modeling.covarianceresult attribute)": [[209, "gammapy.modeling.CovarianceResult.backend", false]], "backend (gammapy.modeling.fitresult attribute)": [[211, "gammapy.modeling.FitResult.backend", false]], "backend (gammapy.modeling.optimizeresult attribute)": [[212, "gammapy.modeling.OptimizeResult.backend", false]], "backend_default (in module gammapy.utils.parallel)": [[319, "gammapy.utils.parallel.BACKEND_DEFAULT", false]], "background (gammapy.datasets.mapdataset attribute)": [[102, "gammapy.datasets.MapDataset.background", false]], "background (gammapy.datasets.mapdatasetonoff attribute)": [[105, "gammapy.datasets.MapDatasetOnOff.background", false]], "background (gammapy.datasets.spectrumdataset attribute)": [[109, "gammapy.datasets.SpectrumDataset.background", false]], "background (gammapy.datasets.spectrumdatasetonoff attribute)": [[110, "gammapy.datasets.SpectrumDatasetOnOff.background", false]], "background2d (class in gammapy.irf)": [[146, "gammapy.irf.Background2D", false]], "background3d (class in gammapy.irf)": [[147, "gammapy.irf.Background3D", false]], "background_model (gammapy.datasets.mapdataset attribute)": [[102, "gammapy.datasets.MapDataset.background_model", false]], "background_model (gammapy.datasets.mapdatasetonoff attribute)": [[105, "gammapy.datasets.MapDatasetOnOff.background_model", false]], "background_model (gammapy.datasets.spectrumdataset attribute)": [[109, "gammapy.datasets.SpectrumDataset.background_model", false]], "background_model (gammapy.datasets.spectrumdatasetonoff attribute)": [[110, "gammapy.datasets.SpectrumDatasetOnOff.background_model", false]], "backgroundirf (class in gammapy.irf)": [[148, "gammapy.irf.BackgroundIRF", false]], "bar_radius (gammapy.astro.population.valleespiral attribute)": [[38, "gammapy.astro.population.ValleeSpiral.bar_radius", false]], "base_dir (gammapy.data.hduindextable attribute)": [[87, "gammapy.data.HDUIndexTable.base_dir", false]], "bbox_with_units (gammapy.astro.population.casebattacharya1998 attribute)": [[28, "gammapy.astro.population.CaseBattacharya1998.bbox_with_units", false]], "bbox_with_units (gammapy.astro.population.exponential attribute)": [[29, "gammapy.astro.population.Exponential.bbox_with_units", false]], "bbox_with_units (gammapy.astro.population.faucherkaspi2006 attribute)": [[30, "gammapy.astro.population.FaucherKaspi2006.bbox_with_units", false]], "bbox_with_units (gammapy.astro.population.faucherkaspi2006velocitybimodal attribute)": [[31, "gammapy.astro.population.FaucherKaspi2006VelocityBimodal.bbox_with_units", false]], "bbox_with_units (gammapy.astro.population.faucherkaspi2006velocitymaxwellian attribute)": [[32, "gammapy.astro.population.FaucherKaspi2006VelocityMaxwellian.bbox_with_units", false]], "bbox_with_units (gammapy.astro.population.lorimer2006 attribute)": [[35, "gammapy.astro.population.Lorimer2006.bbox_with_units", false]], "bbox_with_units (gammapy.astro.population.paczynski1990 attribute)": [[36, "gammapy.astro.population.Paczynski1990.bbox_with_units", false]], "bbox_with_units (gammapy.astro.population.paczynski1990velocity attribute)": [[37, "gammapy.astro.population.Paczynski1990Velocity.bbox_with_units", false]], "bbox_with_units (gammapy.astro.population.yusifovkucuk2004 attribute)": [[39, "gammapy.astro.population.YusifovKucuk2004.bbox_with_units", false]], "bbox_with_units (gammapy.astro.population.yusifovkucuk2004b attribute)": [[40, "gammapy.astro.population.YusifovKucuk2004B.bbox_with_units", false]], "beta (gammapy.astro.population.casebattacharya1998 attribute)": [[28, "gammapy.astro.population.CaseBattacharya1998.beta", false]], "beta (gammapy.modeling.models.lineartemporalmodel attribute)": [[238, "gammapy.modeling.models.LinearTemporalModel.beta", false]], "beta (gammapy.modeling.models.logparabolanormspectralmodel attribute)": [[239, "gammapy.modeling.models.LogParabolaNormSpectralModel.beta", false]], "beta (gammapy.modeling.models.logparabolaspectralmodel attribute)": [[240, "gammapy.modeling.models.LogParabolaSpectralModel.beta", false]], "beta (gammapy.modeling.models.smoothbrokenpowerlawspectralmodel attribute)": [[262, "gammapy.modeling.models.SmoothBrokenPowerLawSpectralModel.beta", false]], "bin_volume() (gammapy.maps.mapaxes method)": [[196, "gammapy.maps.MapAxes.bin_volume", false]], "bin_volume() (gammapy.maps.regiongeom method)": [[200, "gammapy.maps.RegionGeom.bin_volume", false]], "bin_volume() (gammapy.maps.wcsgeom method)": [[203, "gammapy.maps.WcsGeom.bin_volume", false]], "bin_width (gammapy.maps.labelmapaxis attribute)": [[194, "gammapy.maps.LabelMapAxis.bin_width", false]], "bin_width (gammapy.maps.mapaxis attribute)": [[197, "gammapy.maps.MapAxis.bin_width", false]], "bin_width (gammapy.maps.timemapaxis attribute)": [[202, "gammapy.maps.TimeMapAxis.bin_width", false]], "binary_dilate() (gammapy.maps.wcsndmap method)": [[205, "gammapy.maps.WcsNDMap.binary_dilate", false]], "binary_erode() (gammapy.maps.wcsndmap method)": [[205, "gammapy.maps.WcsNDMap.binary_erode", false]], "binary_structure() (gammapy.maps.wcsgeom method)": [[203, "gammapy.maps.WcsGeom.binary_structure", false]], "binsz_wcs (gammapy.maps.regiongeom attribute)": [[200, "gammapy.maps.RegionGeom.binsz_wcs", false]], "bkg": [[573, "term-Bkg", true]], "bkg (gammapy.data.observation attribute)": [[88, "gammapy.data.Observation.bkg", false]], "boundary_mask() (gammapy.maps.wcsgeom method)": [[203, "gammapy.maps.WcsGeom.boundary_mask", false]], "bounding_box (gammapy.astro.population.casebattacharya1998 attribute)": [[28, "gammapy.astro.population.CaseBattacharya1998.bounding_box", false]], "bounding_box (gammapy.astro.population.exponential attribute)": [[29, "gammapy.astro.population.Exponential.bounding_box", false]], "bounding_box (gammapy.astro.population.faucherkaspi2006 attribute)": [[30, "gammapy.astro.population.FaucherKaspi2006.bounding_box", false]], "bounding_box (gammapy.astro.population.faucherkaspi2006velocitybimodal attribute)": [[31, "gammapy.astro.population.FaucherKaspi2006VelocityBimodal.bounding_box", false]], "bounding_box (gammapy.astro.population.faucherkaspi2006velocitymaxwellian attribute)": [[32, "gammapy.astro.population.FaucherKaspi2006VelocityMaxwellian.bounding_box", false]], "bounding_box (gammapy.astro.population.lorimer2006 attribute)": [[35, "gammapy.astro.population.Lorimer2006.bounding_box", false]], "bounding_box (gammapy.astro.population.paczynski1990 attribute)": [[36, "gammapy.astro.population.Paczynski1990.bounding_box", false]], "bounding_box (gammapy.astro.population.paczynski1990velocity attribute)": [[37, "gammapy.astro.population.Paczynski1990Velocity.bounding_box", false]], "bounding_box (gammapy.astro.population.yusifovkucuk2004 attribute)": [[39, "gammapy.astro.population.YusifovKucuk2004.bounding_box", false]], "bounding_box (gammapy.astro.population.yusifovkucuk2004b attribute)": [[40, "gammapy.astro.population.YusifovKucuk2004B.bounding_box", false]], "bounds (gammapy.astro.population.casebattacharya1998 attribute)": [[28, "gammapy.astro.population.CaseBattacharya1998.bounds", false]], "bounds (gammapy.astro.population.exponential attribute)": [[29, "gammapy.astro.population.Exponential.bounds", false]], "bounds (gammapy.astro.population.faucherkaspi2006 attribute)": [[30, "gammapy.astro.population.FaucherKaspi2006.bounds", false]], "bounds (gammapy.astro.population.faucherkaspi2006velocitybimodal attribute)": [[31, "gammapy.astro.population.FaucherKaspi2006VelocityBimodal.bounds", false]], "bounds (gammapy.astro.population.faucherkaspi2006velocitymaxwellian attribute)": [[32, "gammapy.astro.population.FaucherKaspi2006VelocityMaxwellian.bounds", false]], "bounds (gammapy.astro.population.lorimer2006 attribute)": [[35, "gammapy.astro.population.Lorimer2006.bounds", false]], "bounds (gammapy.astro.population.paczynski1990 attribute)": [[36, "gammapy.astro.population.Paczynski1990.bounds", false]], "bounds (gammapy.astro.population.paczynski1990velocity attribute)": [[37, "gammapy.astro.population.Paczynski1990Velocity.bounds", false]], "bounds (gammapy.astro.population.yusifovkucuk2004 attribute)": [[39, "gammapy.astro.population.YusifovKucuk2004.bounds", false]], "bounds (gammapy.astro.population.yusifovkucuk2004b attribute)": [[40, "gammapy.astro.population.YusifovKucuk2004B.bounds", false]], "bounds (gammapy.maps.mapaxis attribute)": [[197, "gammapy.maps.MapAxis.bounds", false]], "bounds (gammapy.maps.timemapaxis attribute)": [[202, "gammapy.maps.TimeMapAxis.bounds", false]], "broadcasted (gammapy.maps.mapcoord attribute)": [[198, "gammapy.maps.MapCoord.broadcasted", false]], "brokenpowerlawspectralmodel (class in gammapy.modeling.models)": [[217, "gammapy.modeling.models.BrokenPowerLawSpectralModel", false]], "burkertprofile (class in gammapy.astro.darkmatter)": [[17, "gammapy.astro.darkmatter.BurkertProfile", false]], "c (gammapy.astro.population.lorimer2006 attribute)": [[35, "gammapy.astro.population.Lorimer2006.C", false]], "callback() (gammapy.makers.datasetsmaker method)": [[168, "gammapy.makers.DatasetsMaker.callback", false]], "cartesian() (in module gammapy.utils.coordinates)": [[305, "gammapy.utils.coordinates.cartesian", false]], "casebattacharya1998 (class in gammapy.astro.population)": [[28, "gammapy.astro.population.CaseBattacharya1998", false]], "cash": [[573, "term-Cash", true]], "cash() (in module gammapy.stats)": [[288, "gammapy.stats.cash", false]], "cash_sum_cython() (in module gammapy.stats)": [[289, "gammapy.stats.cash_sum_cython", false]], "cashcountsstatistic (class in gammapy.stats)": [[285, "gammapy.stats.CashCountsStatistic", false]], "catalog_registry (in module gammapy.catalog)": [[55, "gammapy.catalog.CATALOG_REGISTRY", false]], "center (gammapy.maps.labelmapaxis attribute)": [[194, "gammapy.maps.LabelMapAxis.center", false]], "center (gammapy.maps.mapaxis attribute)": [[197, "gammapy.maps.MapAxis.center", false]], "center (gammapy.maps.timemapaxis attribute)": [[202, "gammapy.maps.TimeMapAxis.center", false]], "center_coord (gammapy.maps.geom attribute)": [[190, "gammapy.maps.Geom.center_coord", false]], "center_coord (gammapy.maps.hpxgeom attribute)": [[191, "gammapy.maps.HpxGeom.center_coord", false]], "center_coord (gammapy.maps.mapaxes attribute)": [[196, "gammapy.maps.MapAxes.center_coord", false]], "center_coord (gammapy.maps.regiongeom attribute)": [[200, "gammapy.maps.RegionGeom.center_coord", false]], "center_coord (gammapy.maps.wcsgeom attribute)": [[203, "gammapy.maps.WcsGeom.center_coord", false]], "center_pix (gammapy.maps.geom attribute)": [[190, "gammapy.maps.Geom.center_pix", false]], "center_pix (gammapy.maps.hpxgeom attribute)": [[191, "gammapy.maps.HpxGeom.center_pix", false]], "center_pix (gammapy.maps.regiongeom attribute)": [[200, "gammapy.maps.RegionGeom.center_pix", false]], "center_pix (gammapy.maps.wcsgeom attribute)": [[203, "gammapy.maps.WcsGeom.center_pix", false]], "center_skydir (gammapy.maps.geom attribute)": [[190, "gammapy.maps.Geom.center_skydir", false]], "center_skydir (gammapy.maps.hpxgeom attribute)": [[191, "gammapy.maps.HpxGeom.center_skydir", false]], "center_skydir (gammapy.maps.regiongeom attribute)": [[200, "gammapy.maps.RegionGeom.center_skydir", false]], "center_skydir (gammapy.maps.wcsgeom attribute)": [[203, "gammapy.maps.WcsGeom.center_skydir", false]], "channel (gammapy.astro.darkmatter.primaryflux attribute)": [[26, "gammapy.astro.darkmatter.PrimaryFlux.channel", false]], "channel_registry (gammapy.astro.darkmatter.primaryflux attribute)": [[26, "gammapy.astro.darkmatter.PrimaryFlux.channel_registry", false]], "check() (gammapy.data.datastore method)": [[82, "gammapy.data.DataStore.check", false]], "check() (gammapy.data.eventlist method)": [[83, "gammapy.data.EventList.check", false]], "check() (gammapy.data.observation method)": [[88, "gammapy.data.Observation.check", false]], "check_limits() (gammapy.modeling.parameter method)": [[213, "gammapy.modeling.Parameter.check_limits", false]], "check_limits() (gammapy.modeling.parameters method)": [[214, "gammapy.modeling.Parameters.check_limits", false]], "check_limits() (gammapy.modeling.priorparameter method)": [[215, "gammapy.modeling.PriorParameter.check_limits", false]], "check_limits() (gammapy.modeling.priorparameters method)": [[216, "gammapy.modeling.PriorParameters.check_limits", false]], "checker (class in gammapy.utils.testing)": [[351, "gammapy.utils.testing.Checker", false]], "clear() (gammapy.data.observations method)": [[92, "gammapy.data.Observations.clear", false]], "clear() (gammapy.datasets.datasets method)": [[100, "gammapy.datasets.Datasets.clear", false]], "clear() (gammapy.maps.maps method)": [[199, "gammapy.maps.Maps.clear", false]], "clear() (gammapy.modeling.models.models method)": [[245, "gammapy.modeling.models.Models.clear", false]], "coadd() (gammapy.maps.hpxmap method)": [[192, "gammapy.maps.HpxMap.coadd", false]], "coadd() (gammapy.maps.hpxndmap method)": [[193, "gammapy.maps.HpxNDMap.coadd", false]], "coadd() (gammapy.maps.map method)": [[195, "gammapy.maps.Map.coadd", false]], "coadd() (gammapy.maps.regionndmap method)": [[201, "gammapy.maps.RegionNDMap.coadd", false]], "coadd() (gammapy.maps.wcsmap method)": [[204, "gammapy.maps.WcsMap.coadd", false]], "coadd() (gammapy.maps.wcsndmap method)": [[205, "gammapy.maps.WcsNDMap.coadd", false]], "coefficients (gammapy.modeling.models.meyercrabspectralmodel attribute)": [[242, "gammapy.modeling.models.MeyerCrabSpectralModel.coefficients", false]], "coerce_units() (gammapy.astro.population.casebattacharya1998 method)": [[28, "gammapy.astro.population.CaseBattacharya1998.coerce_units", false]], "coerce_units() (gammapy.astro.population.exponential method)": [[29, "gammapy.astro.population.Exponential.coerce_units", false]], "coerce_units() (gammapy.astro.population.faucherkaspi2006 method)": [[30, "gammapy.astro.population.FaucherKaspi2006.coerce_units", false]], "coerce_units() (gammapy.astro.population.faucherkaspi2006velocitybimodal method)": [[31, "gammapy.astro.population.FaucherKaspi2006VelocityBimodal.coerce_units", false]], "coerce_units() (gammapy.astro.population.faucherkaspi2006velocitymaxwellian method)": [[32, "gammapy.astro.population.FaucherKaspi2006VelocityMaxwellian.coerce_units", false]], "coerce_units() (gammapy.astro.population.lorimer2006 method)": [[35, "gammapy.astro.population.Lorimer2006.coerce_units", false]], "coerce_units() (gammapy.astro.population.paczynski1990 method)": [[36, "gammapy.astro.population.Paczynski1990.coerce_units", false]], "coerce_units() (gammapy.astro.population.paczynski1990velocity method)": [[37, "gammapy.astro.population.Paczynski1990Velocity.coerce_units", false]], "coerce_units() (gammapy.astro.population.yusifovkucuk2004 method)": [[39, "gammapy.astro.population.YusifovKucuk2004.coerce_units", false]], "coerce_units() (gammapy.astro.population.yusifovkucuk2004b method)": [[40, "gammapy.astro.population.YusifovKucuk2004B.coerce_units", false]], "col_fit_deriv (gammapy.astro.population.casebattacharya1998 attribute)": [[28, "gammapy.astro.population.CaseBattacharya1998.col_fit_deriv", false]], "col_fit_deriv (gammapy.astro.population.exponential attribute)": [[29, "gammapy.astro.population.Exponential.col_fit_deriv", false]], "col_fit_deriv (gammapy.astro.population.faucherkaspi2006 attribute)": [[30, "gammapy.astro.population.FaucherKaspi2006.col_fit_deriv", false]], "col_fit_deriv (gammapy.astro.population.faucherkaspi2006velocitybimodal attribute)": [[31, "gammapy.astro.population.FaucherKaspi2006VelocityBimodal.col_fit_deriv", false]], "col_fit_deriv (gammapy.astro.population.faucherkaspi2006velocitymaxwellian attribute)": [[32, "gammapy.astro.population.FaucherKaspi2006VelocityMaxwellian.col_fit_deriv", false]], "col_fit_deriv (gammapy.astro.population.lorimer2006 attribute)": [[35, "gammapy.astro.population.Lorimer2006.col_fit_deriv", false]], "col_fit_deriv (gammapy.astro.population.paczynski1990 attribute)": [[36, "gammapy.astro.population.Paczynski1990.col_fit_deriv", false]], "col_fit_deriv (gammapy.astro.population.paczynski1990velocity attribute)": [[37, "gammapy.astro.population.Paczynski1990Velocity.col_fit_deriv", false]], "col_fit_deriv (gammapy.astro.population.yusifovkucuk2004 attribute)": [[39, "gammapy.astro.population.YusifovKucuk2004.col_fit_deriv", false]], "col_fit_deriv (gammapy.astro.population.yusifovkucuk2004b attribute)": [[40, "gammapy.astro.population.YusifovKucuk2004B.col_fit_deriv", false]], "colnames (gammapy.data.hduindextable attribute)": [[87, "gammapy.data.HDUIndexTable.colnames", false]], "colnames (gammapy.data.observationtable attribute)": [[91, "gammapy.data.ObservationTable.colnames", false]], "colormap_hess() (in module gammapy.visualization)": [[367, "gammapy.visualization.colormap_hess", false]], "colormap_milagro() (in module gammapy.visualization)": [[368, "gammapy.visualization.colormap_milagro", false]], "columnclass (gammapy.data.hduindextable attribute)": [[87, "gammapy.data.HDUIndexTable.ColumnClass", false]], "columnclass (gammapy.data.observationtable attribute)": [[91, "gammapy.data.ObservationTable.ColumnClass", false]], "combine_flux_maps() (in module gammapy.estimators.utils)": [[133, "gammapy.estimators.utils.combine_flux_maps", false]], "combine_significance_maps() (in module gammapy.estimators.utils)": [[134, "gammapy.estimators.utils.combine_significance_maps", false]], "components_models() (gammapy.catalog.sourcecatalogobjecthgps method)": [[80, "gammapy.catalog.SourceCatalogObjectHGPS.components_models", false]], "compound_region_to_regions() (in module gammapy.utils.regions)": [[335, "gammapy.utils.regions.compound_region_to_regions", false]], "compoundspectralmodel (class in gammapy.modeling.models)": [[218, "gammapy.modeling.models.CompoundSpectralModel", false]], "compute_chisq() (in module gammapy.stats)": [[290, "gammapy.stats.compute_chisq", false]], "compute_differential_jfactor() (gammapy.astro.darkmatter.jfactory method)": [[23, "gammapy.astro.darkmatter.JFactory.compute_differential_jfactor", false]], "compute_errn() (gammapy.stats.cashcountsstatistic method)": [[285, "gammapy.stats.CashCountsStatistic.compute_errn", false]], "compute_errn() (gammapy.stats.wstatcountsstatistic method)": [[287, "gammapy.stats.WStatCountsStatistic.compute_errn", false]], "compute_errp() (gammapy.stats.cashcountsstatistic method)": [[285, "gammapy.stats.CashCountsStatistic.compute_errp", false]], "compute_errp() (gammapy.stats.wstatcountsstatistic method)": [[287, "gammapy.stats.WStatCountsStatistic.compute_errp", false]], "compute_flux_doubling() (in module gammapy.stats)": [[291, "gammapy.stats.compute_flux_doubling", false]], "compute_fpp() (in module gammapy.stats)": [[292, "gammapy.stats.compute_fpp", false]], "compute_fvar() (in module gammapy.stats)": [[293, "gammapy.stats.compute_fvar", false]], "compute_jfactor() (gammapy.astro.darkmatter.jfactory method)": [[23, "gammapy.astro.darkmatter.JFactory.compute_jfactor", false]], "compute_lightcurve_discrete_correlation() (in module gammapy.estimators.utils)": [[135, "gammapy.estimators.utils.compute_lightcurve_discrete_correlation", false]], "compute_lightcurve_doublingtime() (in module gammapy.estimators.utils)": [[136, "gammapy.estimators.utils.compute_lightcurve_doublingtime", false]], "compute_lightcurve_fpp() (in module gammapy.estimators.utils)": [[137, "gammapy.estimators.utils.compute_lightcurve_fpp", false]], "compute_lightcurve_fvar() (in module gammapy.estimators.utils)": [[138, "gammapy.estimators.utils.compute_lightcurve_fvar", false]], "compute_upper_limit() (gammapy.stats.cashcountsstatistic method)": [[285, "gammapy.stats.CashCountsStatistic.compute_upper_limit", false]], "compute_upper_limit() (gammapy.stats.wstatcountsstatistic method)": [[287, "gammapy.stats.WStatCountsStatistic.compute_upper_limit", false]], "concatenate() (gammapy.maps.labelmapaxis method)": [[194, "gammapy.maps.LabelMapAxis.concatenate", false]], "concatenate() (gammapy.maps.mapaxis method)": [[197, "gammapy.maps.MapAxis.concatenate", false]], "conf_max (gammapy.modeling.parameter attribute)": [[213, "gammapy.modeling.Parameter.conf_max", false]], "conf_max (gammapy.modeling.priorparameter attribute)": [[215, "gammapy.modeling.PriorParameter.conf_max", false]], "conf_min (gammapy.modeling.parameter attribute)": [[213, "gammapy.modeling.Parameter.conf_min", false]], "conf_min (gammapy.modeling.priorparameter attribute)": [[215, "gammapy.modeling.PriorParameter.conf_min", false]], "confidence() (gammapy.modeling.fit method)": [[210, "gammapy.modeling.Fit.confidence", false]], "config (gammapy.analysis.analysis attribute)": [[15, "gammapy.analysis.Analysis.config", false]], "config_parameters (gammapy.estimators.asmoothmapestimator attribute)": [[117, "gammapy.estimators.ASmoothMapEstimator.config_parameters", false]], "config_parameters (gammapy.estimators.energydependentmorphologyestimator attribute)": [[119, "gammapy.estimators.EnergyDependentMorphologyEstimator.config_parameters", false]], "config_parameters (gammapy.estimators.estimator attribute)": [[120, "gammapy.estimators.Estimator.config_parameters", false]], "config_parameters (gammapy.estimators.excessmapestimator attribute)": [[121, "gammapy.estimators.ExcessMapEstimator.config_parameters", false]], "config_parameters (gammapy.estimators.fluxpointsestimator attribute)": [[125, "gammapy.estimators.FluxPointsEstimator.config_parameters", false]], "config_parameters (gammapy.estimators.fluxprofileestimator attribute)": [[126, "gammapy.estimators.FluxProfileEstimator.config_parameters", false]], "config_parameters (gammapy.estimators.imageprofileestimator attribute)": [[128, "gammapy.estimators.ImageProfileEstimator.config_parameters", false]], "config_parameters (gammapy.estimators.lightcurveestimator attribute)": [[129, "gammapy.estimators.LightCurveEstimator.config_parameters", false]], "config_parameters (gammapy.estimators.parameterestimator attribute)": [[130, "gammapy.estimators.ParameterEstimator.config_parameters", false]], "config_parameters (gammapy.estimators.sensitivityestimator attribute)": [[131, "gammapy.estimators.SensitivityEstimator.config_parameters", false]], "config_parameters (gammapy.estimators.tsmapestimator attribute)": [[132, "gammapy.estimators.TSMapEstimator.config_parameters", false]], "const (gammapy.modeling.models.constantspectralmodel attribute)": [[221, "gammapy.modeling.models.ConstantSpectralModel.const", false]], "constantfluxspatialmodel (class in gammapy.modeling.models)": [[219, "gammapy.modeling.models.ConstantFluxSpatialModel", false]], "constantspatialmodel (class in gammapy.modeling.models)": [[220, "gammapy.modeling.models.ConstantSpatialModel", false]], "constantspectralmodel (class in gammapy.modeling.models)": [[221, "gammapy.modeling.models.ConstantSpectralModel", false]], "constanttemporalmodel (class in gammapy.modeling.models)": [[222, "gammapy.modeling.models.ConstantTemporalModel", false]], "construct() (gammapy.analysis.analysisconfig class method)": [[16, "gammapy.analysis.AnalysisConfig.construct", false]], "construct() (gammapy.data.eventlistmetadata class method)": [[84, "gammapy.data.EventListMetaData.construct", false]], "construct() (gammapy.data.observationmetadata class method)": [[90, "gammapy.data.ObservationMetaData.construct", false]], "construct() (gammapy.datasets.mapdatasetmetadata class method)": [[104, "gammapy.datasets.MapDatasetMetaData.construct", false]], "construct() (gammapy.estimators.fluxmetadata class method)": [[123, "gammapy.estimators.FluxMetaData.construct", false]], "containment() (gammapy.irf.energydependentmultigausspsf method)": [[153, "gammapy.irf.EnergyDependentMultiGaussPSF.containment", false]], "containment() (gammapy.irf.parametricpsf method)": [[163, "gammapy.irf.ParametricPSF.containment", false]], "containment() (gammapy.irf.psf3d method)": [[159, "gammapy.irf.PSF3D.containment", false]], "containment() (gammapy.irf.psfking method)": [[161, "gammapy.irf.PSFKing.containment", false]], "containment() (gammapy.irf.psfmap method)": [[162, "gammapy.irf.PSFMap.containment", false]], "containment() (gammapy.irf.recopsfmap method)": [[165, "gammapy.irf.RecoPSFMap.containment", false]], "containment_radius() (gammapy.irf.energydependentmultigausspsf method)": [[153, "gammapy.irf.EnergyDependentMultiGaussPSF.containment_radius", false]], "containment_radius() (gammapy.irf.parametricpsf method)": [[163, "gammapy.irf.ParametricPSF.containment_radius", false]], "containment_radius() (gammapy.irf.psf3d method)": [[159, "gammapy.irf.PSF3D.containment_radius", false]], "containment_radius() (gammapy.irf.psfking method)": [[161, "gammapy.irf.PSFKing.containment_radius", false]], "containment_radius() (gammapy.irf.psfmap method)": [[162, "gammapy.irf.PSFMap.containment_radius", false]], "containment_radius() (gammapy.irf.recopsfmap method)": [[165, "gammapy.irf.RecoPSFMap.containment_radius", false]], "containment_radius() (in module gammapy.maps)": [[206, "gammapy.maps.containment_radius", false]], "containment_radius_map() (gammapy.irf.psfmap method)": [[162, "gammapy.irf.PSFMap.containment_radius_map", false]], "containment_radius_map() (gammapy.irf.recopsfmap method)": [[165, "gammapy.irf.RecoPSFMap.containment_radius_map", false]], "containment_region() (in module gammapy.maps)": [[207, "gammapy.maps.containment_region", false]], "contains() (gammapy.maps.geom method)": [[190, "gammapy.maps.Geom.contains", false]], "contains() (gammapy.maps.hpxgeom method)": [[191, "gammapy.maps.HpxGeom.contains", false]], "contains() (gammapy.maps.regiongeom method)": [[200, "gammapy.maps.RegionGeom.contains", false]], "contains() (gammapy.maps.wcsgeom method)": [[203, "gammapy.maps.WcsGeom.contains", false]], "contains_pix() (gammapy.maps.geom method)": [[190, "gammapy.maps.Geom.contains_pix", false]], "contains_pix() (gammapy.maps.hpxgeom method)": [[191, "gammapy.maps.HpxGeom.contains_pix", false]], "contains_pix() (gammapy.maps.regiongeom method)": [[200, "gammapy.maps.RegionGeom.contains_pix", false]], "contains_pix() (gammapy.maps.wcsgeom method)": [[203, "gammapy.maps.WcsGeom.contains_pix", false]], "contains_wcs_pix() (gammapy.maps.regiongeom method)": [[200, "gammapy.maps.RegionGeom.contains_wcs_pix", false]], "contributes() (gammapy.modeling.models.fovbackgroundmodel static method)": [[231, "gammapy.modeling.models.FoVBackgroundModel.contributes", false]], "contributes() (gammapy.modeling.models.skymodel method)": [[261, "gammapy.modeling.models.SkyModel.contributes", false]], "contributes_to_stat (gammapy.datasets.datasets attribute)": [[100, "gammapy.datasets.Datasets.contributes_to_stat", false]], "convert_bytestring_to_unicode() (gammapy.data.hduindextable method)": [[87, "gammapy.data.HDUIndexTable.convert_bytestring_to_unicode", false]], "convert_bytestring_to_unicode() (gammapy.data.observationtable method)": [[91, "gammapy.data.ObservationTable.convert_bytestring_to_unicode", false]], "convert_unicode_to_bytestring() (gammapy.data.hduindextable method)": [[87, "gammapy.data.HDUIndexTable.convert_unicode_to_bytestring", false]], "convert_unicode_to_bytestring() (gammapy.data.observationtable method)": [[91, "gammapy.data.ObservationTable.convert_unicode_to_bytestring", false]], "convolve() (gammapy.maps.hpxndmap method)": [[193, "gammapy.maps.HpxNDMap.convolve", false]], "convolve() (gammapy.maps.wcsndmap method)": [[205, "gammapy.maps.WcsNDMap.convolve", false]], "convolve_full() (gammapy.maps.hpxndmap method)": [[193, "gammapy.maps.HpxNDMap.convolve_full", false]], "convolve_wcs() (gammapy.maps.hpxndmap method)": [[193, "gammapy.maps.HpxNDMap.convolve_wcs", false]], "coord_to_idx() (gammapy.maps.geom method)": [[190, "gammapy.maps.Geom.coord_to_idx", false]], "coord_to_idx() (gammapy.maps.hpxgeom method)": [[191, "gammapy.maps.HpxGeom.coord_to_idx", false]], "coord_to_idx() (gammapy.maps.labelmapaxis method)": [[194, "gammapy.maps.LabelMapAxis.coord_to_idx", false]], "coord_to_idx() (gammapy.maps.mapaxes method)": [[196, "gammapy.maps.MapAxes.coord_to_idx", false]], "coord_to_idx() (gammapy.maps.mapaxis method)": [[197, "gammapy.maps.MapAxis.coord_to_idx", false]], "coord_to_idx() (gammapy.maps.regiongeom method)": [[200, "gammapy.maps.RegionGeom.coord_to_idx", false]], "coord_to_idx() (gammapy.maps.timemapaxis method)": [[202, "gammapy.maps.TimeMapAxis.coord_to_idx", false]], "coord_to_idx() (gammapy.maps.wcsgeom method)": [[203, "gammapy.maps.WcsGeom.coord_to_idx", false]], "coord_to_pix() (gammapy.maps.geom method)": [[190, "gammapy.maps.Geom.coord_to_pix", false]], "coord_to_pix() (gammapy.maps.hpxgeom method)": [[191, "gammapy.maps.HpxGeom.coord_to_pix", false]], "coord_to_pix() (gammapy.maps.labelmapaxis method)": [[194, "gammapy.maps.LabelMapAxis.coord_to_pix", false]], "coord_to_pix() (gammapy.maps.mapaxes method)": [[196, "gammapy.maps.MapAxes.coord_to_pix", false]], "coord_to_pix() (gammapy.maps.mapaxis method)": [[197, "gammapy.maps.MapAxis.coord_to_pix", false]], "coord_to_pix() (gammapy.maps.regiongeom method)": [[200, "gammapy.maps.RegionGeom.coord_to_pix", false]], "coord_to_pix() (gammapy.maps.timemapaxis method)": [[202, "gammapy.maps.TimeMapAxis.coord_to_pix", false]], "coord_to_pix() (gammapy.maps.wcsgeom method)": [[203, "gammapy.maps.WcsGeom.coord_to_pix", false]], "coords (gammapy.modeling.models.piecewisenormspatialmodel attribute)": [[247, "gammapy.modeling.models.PiecewiseNormSpatialModel.coords", false]], "copy() (gammapy.analysis.analysisconfig method)": [[16, "gammapy.analysis.AnalysisConfig.copy", false]], "copy() (gammapy.astro.darkmatter.darkmatterannihilationspectralmodel method)": [[19, "gammapy.astro.darkmatter.DarkMatterAnnihilationSpectralModel.copy", false]], "copy() (gammapy.astro.darkmatter.darkmatterdecayspectralmodel method)": [[20, "gammapy.astro.darkmatter.DarkMatterDecaySpectralModel.copy", false]], "copy() (gammapy.astro.darkmatter.primaryflux method)": [[26, "gammapy.astro.darkmatter.PrimaryFlux.copy", false]], "copy() (gammapy.astro.population.casebattacharya1998 method)": [[28, "gammapy.astro.population.CaseBattacharya1998.copy", false]], "copy() (gammapy.astro.population.exponential method)": [[29, "gammapy.astro.population.Exponential.copy", false]], "copy() (gammapy.astro.population.faucherkaspi2006 method)": [[30, "gammapy.astro.population.FaucherKaspi2006.copy", false]], "copy() (gammapy.astro.population.faucherkaspi2006velocitybimodal method)": [[31, "gammapy.astro.population.FaucherKaspi2006VelocityBimodal.copy", false]], "copy() (gammapy.astro.population.faucherkaspi2006velocitymaxwellian method)": [[32, "gammapy.astro.population.FaucherKaspi2006VelocityMaxwellian.copy", false]], "copy() (gammapy.astro.population.lorimer2006 method)": [[35, "gammapy.astro.population.Lorimer2006.copy", false]], "copy() (gammapy.astro.population.paczynski1990 method)": [[36, "gammapy.astro.population.Paczynski1990.copy", false]], "copy() (gammapy.astro.population.paczynski1990velocity method)": [[37, "gammapy.astro.population.Paczynski1990Velocity.copy", false]], "copy() (gammapy.astro.population.yusifovkucuk2004 method)": [[39, "gammapy.astro.population.YusifovKucuk2004.copy", false]], "copy() (gammapy.astro.population.yusifovkucuk2004b method)": [[40, "gammapy.astro.population.YusifovKucuk2004B.copy", false]], "copy() (gammapy.data.eventlist method)": [[83, "gammapy.data.EventList.copy", false]], "copy() (gammapy.data.eventlistmetadata method)": [[84, "gammapy.data.EventListMetaData.copy", false]], "copy() (gammapy.data.gti method)": [[86, "gammapy.data.GTI.copy", false]], "copy() (gammapy.data.hduindextable method)": [[87, "gammapy.data.HDUIndexTable.copy", false]], "copy() (gammapy.data.observation method)": [[88, "gammapy.data.Observation.copy", false]], "copy() (gammapy.data.observationfilter method)": [[89, "gammapy.data.ObservationFilter.copy", false]], "copy() (gammapy.data.observationmetadata method)": [[90, "gammapy.data.ObservationMetaData.copy", false]], "copy() (gammapy.data.observationtable method)": [[91, "gammapy.data.ObservationTable.copy", false]], "copy() (gammapy.datasets.dataset method)": [[99, "gammapy.datasets.Dataset.copy", false]], "copy() (gammapy.datasets.datasets method)": [[100, "gammapy.datasets.Datasets.copy", false]], "copy() (gammapy.datasets.fluxpointsdataset method)": [[101, "gammapy.datasets.FluxPointsDataset.copy", false]], "copy() (gammapy.datasets.mapdataset method)": [[102, "gammapy.datasets.MapDataset.copy", false]], "copy() (gammapy.datasets.mapdatasetmetadata method)": [[104, "gammapy.datasets.MapDatasetMetaData.copy", false]], "copy() (gammapy.datasets.mapdatasetonoff method)": [[105, "gammapy.datasets.MapDatasetOnOff.copy", false]], "copy() (gammapy.datasets.spectrumdataset method)": [[109, "gammapy.datasets.SpectrumDataset.copy", false]], "copy() (gammapy.datasets.spectrumdatasetonoff method)": [[110, "gammapy.datasets.SpectrumDatasetOnOff.copy", false]], "copy() (gammapy.estimators.asmoothmapestimator method)": [[117, "gammapy.estimators.ASmoothMapEstimator.copy", false]], "copy() (gammapy.estimators.energydependentmorphologyestimator method)": [[119, "gammapy.estimators.EnergyDependentMorphologyEstimator.copy", false]], "copy() (gammapy.estimators.estimator method)": [[120, "gammapy.estimators.Estimator.copy", false]], "copy() (gammapy.estimators.excessmapestimator method)": [[121, "gammapy.estimators.ExcessMapEstimator.copy", false]], "copy() (gammapy.estimators.fluxmaps method)": [[122, "gammapy.estimators.FluxMaps.copy", false]], "copy() (gammapy.estimators.fluxmetadata method)": [[123, "gammapy.estimators.FluxMetaData.copy", false]], "copy() (gammapy.estimators.fluxpoints method)": [[124, "gammapy.estimators.FluxPoints.copy", false]], "copy() (gammapy.estimators.fluxpointsestimator method)": [[125, "gammapy.estimators.FluxPointsEstimator.copy", false]], "copy() (gammapy.estimators.fluxprofileestimator method)": [[126, "gammapy.estimators.FluxProfileEstimator.copy", false]], "copy() (gammapy.estimators.imageprofileestimator method)": [[128, "gammapy.estimators.ImageProfileEstimator.copy", false]], "copy() (gammapy.estimators.lightcurveestimator method)": [[129, "gammapy.estimators.LightCurveEstimator.copy", false]], "copy() (gammapy.estimators.parameterestimator method)": [[130, "gammapy.estimators.ParameterEstimator.copy", false]], "copy() (gammapy.estimators.sensitivityestimator method)": [[131, "gammapy.estimators.SensitivityEstimator.copy", false]], "copy() (gammapy.estimators.tsmapestimator method)": [[132, "gammapy.estimators.TSMapEstimator.copy", false]], "copy() (gammapy.irf.edispkernelmap method)": [[150, "gammapy.irf.EDispKernelMap.copy", false]], "copy() (gammapy.irf.edispmap method)": [[151, "gammapy.irf.EDispMap.copy", false]], "copy() (gammapy.irf.irfmap method)": [[157, "gammapy.irf.IRFMap.copy", false]], "copy() (gammapy.irf.psfmap method)": [[162, "gammapy.irf.PSFMap.copy", false]], "copy() (gammapy.irf.recopsfmap method)": [[165, "gammapy.irf.RecoPSFMap.copy", false]], "copy() (gammapy.maps.geom method)": [[190, "gammapy.maps.Geom.copy", false]], "copy() (gammapy.maps.hpxgeom method)": [[191, "gammapy.maps.HpxGeom.copy", false]], "copy() (gammapy.maps.hpxmap method)": [[192, "gammapy.maps.HpxMap.copy", false]], "copy() (gammapy.maps.hpxndmap method)": [[193, "gammapy.maps.HpxNDMap.copy", false]], "copy() (gammapy.maps.labelmapaxis method)": [[194, "gammapy.maps.LabelMapAxis.copy", false]], "copy() (gammapy.maps.map method)": [[195, "gammapy.maps.Map.copy", false]], "copy() (gammapy.maps.mapaxes method)": [[196, "gammapy.maps.MapAxes.copy", false]], "copy() (gammapy.maps.mapaxis method)": [[197, "gammapy.maps.MapAxis.copy", false]], "copy() (gammapy.maps.mapcoord method)": [[198, "gammapy.maps.MapCoord.copy", false]], "copy() (gammapy.maps.regiongeom method)": [[200, "gammapy.maps.RegionGeom.copy", false]], "copy() (gammapy.maps.regionndmap method)": [[201, "gammapy.maps.RegionNDMap.copy", false]], "copy() (gammapy.maps.timemapaxis method)": [[202, "gammapy.maps.TimeMapAxis.copy", false]], "copy() (gammapy.maps.wcsgeom method)": [[203, "gammapy.maps.WcsGeom.copy", false]], "copy() (gammapy.maps.wcsmap method)": [[204, "gammapy.maps.WcsMap.copy", false]], "copy() (gammapy.maps.wcsndmap method)": [[205, "gammapy.maps.WcsNDMap.copy", false]], "copy() (gammapy.modeling.models.brokenpowerlawspectralmodel method)": [[217, "gammapy.modeling.models.BrokenPowerLawSpectralModel.copy", false]], "copy() (gammapy.modeling.models.compoundspectralmodel method)": [[218, "gammapy.modeling.models.CompoundSpectralModel.copy", false]], "copy() (gammapy.modeling.models.constantfluxspatialmodel method)": [[219, "gammapy.modeling.models.ConstantFluxSpatialModel.copy", false]], "copy() (gammapy.modeling.models.constantspatialmodel method)": [[220, "gammapy.modeling.models.ConstantSpatialModel.copy", false]], "copy() (gammapy.modeling.models.constantspectralmodel method)": [[221, "gammapy.modeling.models.ConstantSpectralModel.copy", false]], "copy() (gammapy.modeling.models.constanttemporalmodel method)": [[222, "gammapy.modeling.models.ConstantTemporalModel.copy", false]], "copy() (gammapy.modeling.models.datasetmodels method)": [[223, "gammapy.modeling.models.DatasetModels.copy", false]], "copy() (gammapy.modeling.models.diskspatialmodel method)": [[224, "gammapy.modeling.models.DiskSpatialModel.copy", false]], "copy() (gammapy.modeling.models.eblabsorptionnormspectralmodel method)": [[225, "gammapy.modeling.models.EBLAbsorptionNormSpectralModel.copy", false]], "copy() (gammapy.modeling.models.expcutoffpowerlaw3fglspectralmodel method)": [[227, "gammapy.modeling.models.ExpCutoffPowerLaw3FGLSpectralModel.copy", false]], "copy() (gammapy.modeling.models.expcutoffpowerlawnormspectralmodel method)": [[228, "gammapy.modeling.models.ExpCutoffPowerLawNormSpectralModel.copy", false]], "copy() (gammapy.modeling.models.expcutoffpowerlawspectralmodel method)": [[229, "gammapy.modeling.models.ExpCutoffPowerLawSpectralModel.copy", false]], "copy() (gammapy.modeling.models.expdecaytemporalmodel method)": [[230, "gammapy.modeling.models.ExpDecayTemporalModel.copy", false]], "copy() (gammapy.modeling.models.fovbackgroundmodel method)": [[231, "gammapy.modeling.models.FoVBackgroundModel.copy", false]], "copy() (gammapy.modeling.models.gaussianspatialmodel method)": [[232, "gammapy.modeling.models.GaussianSpatialModel.copy", false]], "copy() (gammapy.modeling.models.gaussianspectralmodel method)": [[233, "gammapy.modeling.models.GaussianSpectralModel.copy", false]], "copy() (gammapy.modeling.models.gaussiantemporalmodel method)": [[234, "gammapy.modeling.models.GaussianTemporalModel.copy", false]], "copy() (gammapy.modeling.models.generalizedgaussianspatialmodel method)": [[235, "gammapy.modeling.models.GeneralizedGaussianSpatialModel.copy", false]], "copy() (gammapy.modeling.models.generalizedgaussiantemporalmodel method)": [[236, "gammapy.modeling.models.GeneralizedGaussianTemporalModel.copy", false]], "copy() (gammapy.modeling.models.lightcurvetemplatetemporalmodel method)": [[237, "gammapy.modeling.models.LightCurveTemplateTemporalModel.copy", false]], "copy() (gammapy.modeling.models.lineartemporalmodel method)": [[238, "gammapy.modeling.models.LinearTemporalModel.copy", false]], "copy() (gammapy.modeling.models.logparabolanormspectralmodel method)": [[239, "gammapy.modeling.models.LogParabolaNormSpectralModel.copy", false]], "copy() (gammapy.modeling.models.logparabolaspectralmodel method)": [[240, "gammapy.modeling.models.LogParabolaSpectralModel.copy", false]], "copy() (gammapy.modeling.models.meyercrabspectralmodel method)": [[242, "gammapy.modeling.models.MeyerCrabSpectralModel.copy", false]], "copy() (gammapy.modeling.models.modelbase method)": [[244, "gammapy.modeling.models.ModelBase.copy", false]], "copy() (gammapy.modeling.models.models method)": [[245, "gammapy.modeling.models.Models.copy", false]], "copy() (gammapy.modeling.models.naimaspectralmodel method)": [[246, "gammapy.modeling.models.NaimaSpectralModel.copy", false]], "copy() (gammapy.modeling.models.piecewisenormspatialmodel method)": [[247, "gammapy.modeling.models.PiecewiseNormSpatialModel.copy", false]], "copy() (gammapy.modeling.models.piecewisenormspectralmodel method)": [[248, "gammapy.modeling.models.PiecewiseNormSpectralModel.copy", false]], "copy() (gammapy.modeling.models.pointspatialmodel method)": [[249, "gammapy.modeling.models.PointSpatialModel.copy", false]], "copy() (gammapy.modeling.models.powerlaw2spectralmodel method)": [[250, "gammapy.modeling.models.PowerLaw2SpectralModel.copy", false]], "copy() (gammapy.modeling.models.powerlawnormspectralmodel method)": [[251, "gammapy.modeling.models.PowerLawNormSpectralModel.copy", false]], "copy() (gammapy.modeling.models.powerlawspectralmodel method)": [[252, "gammapy.modeling.models.PowerLawSpectralModel.copy", false]], "copy() (gammapy.modeling.models.powerlawtemporalmodel method)": [[253, "gammapy.modeling.models.PowerLawTemporalModel.copy", false]], "copy() (gammapy.modeling.models.prior method)": [[254, "gammapy.modeling.models.Prior.copy", false]], "copy() (gammapy.modeling.models.scalespectralmodel method)": [[257, "gammapy.modeling.models.ScaleSpectralModel.copy", false]], "copy() (gammapy.modeling.models.shell2spatialmodel method)": [[258, "gammapy.modeling.models.Shell2SpatialModel.copy", false]], "copy() (gammapy.modeling.models.shellspatialmodel method)": [[259, "gammapy.modeling.models.ShellSpatialModel.copy", false]], "copy() (gammapy.modeling.models.sinetemporalmodel method)": [[260, "gammapy.modeling.models.SineTemporalModel.copy", false]], "copy() (gammapy.modeling.models.skymodel method)": [[261, "gammapy.modeling.models.SkyModel.copy", false]], "copy() (gammapy.modeling.models.smoothbrokenpowerlawspectralmodel method)": [[262, "gammapy.modeling.models.SmoothBrokenPowerLawSpectralModel.copy", false]], "copy() (gammapy.modeling.models.spatialmodel method)": [[263, "gammapy.modeling.models.SpatialModel.copy", false]], "copy() (gammapy.modeling.models.spectralmodel method)": [[264, "gammapy.modeling.models.SpectralModel.copy", false]], "copy() (gammapy.modeling.models.superexpcutoffpowerlaw3fglspectralmodel method)": [[265, "gammapy.modeling.models.SuperExpCutoffPowerLaw3FGLSpectralModel.copy", false]], "copy() (gammapy.modeling.models.superexpcutoffpowerlaw4fgldr3spectralmodel method)": [[266, "gammapy.modeling.models.SuperExpCutoffPowerLaw4FGLDR3SpectralModel.copy", false]], "copy() (gammapy.modeling.models.superexpcutoffpowerlaw4fglspectralmodel method)": [[267, "gammapy.modeling.models.SuperExpCutoffPowerLaw4FGLSpectralModel.copy", false]], "copy() (gammapy.modeling.models.templatendspatialmodel method)": [[269, "gammapy.modeling.models.TemplateNDSpatialModel.copy", false]], "copy() (gammapy.modeling.models.templatendspectralmodel method)": [[270, "gammapy.modeling.models.TemplateNDSpectralModel.copy", false]], "copy() (gammapy.modeling.models.templatenpredmodel method)": [[271, "gammapy.modeling.models.TemplateNPredModel.copy", false]], "copy() (gammapy.modeling.models.templatephasecurvetemporalmodel method)": [[272, "gammapy.modeling.models.TemplatePhaseCurveTemporalModel.copy", false]], "copy() (gammapy.modeling.models.templatespatialmodel method)": [[273, "gammapy.modeling.models.TemplateSpatialModel.copy", false]], "copy() (gammapy.modeling.models.templatespectralmodel method)": [[274, "gammapy.modeling.models.TemplateSpectralModel.copy", false]], "copy() (gammapy.modeling.models.temporalmodel method)": [[275, "gammapy.modeling.models.TemporalModel.copy", false]], "copy() (gammapy.modeling.parameter method)": [[213, "gammapy.modeling.Parameter.copy", false]], "copy() (gammapy.modeling.parameters method)": [[214, "gammapy.modeling.Parameters.copy", false]], "copy() (gammapy.modeling.priorparameter method)": [[215, "gammapy.modeling.PriorParameter.copy", false]], "copy() (gammapy.modeling.priorparameters method)": [[216, "gammapy.modeling.PriorParameters.copy", false]], "copy_obs() (gammapy.data.datastore method)": [[82, "gammapy.data.DataStore.copy_obs", false]], "correlation (gammapy.modeling.covariance attribute)": [[208, "gammapy.modeling.Covariance.correlation", false]], "correlation_radius (gammapy.estimators.excessmapestimator attribute)": [[121, "gammapy.estimators.ExcessMapEstimator.correlation_radius", false]], "count() (gammapy.data.observations method)": [[92, "gammapy.data.Observations.count", false]], "count() (gammapy.datasets.datasets method)": [[100, "gammapy.datasets.Datasets.count", false]], "count() (gammapy.maps.mapaxes method)": [[196, "gammapy.maps.MapAxes.count", false]], "count() (gammapy.modeling.models.datasetmodels method)": [[223, "gammapy.modeling.models.DatasetModels.count", false]], "count() (gammapy.modeling.models.models method)": [[245, "gammapy.modeling.models.Models.count", false]], "count() (gammapy.modeling.parameters method)": [[214, "gammapy.modeling.Parameters.count", false]], "count() (gammapy.modeling.priorparameters method)": [[216, "gammapy.modeling.PriorParameters.count", false]], "counts (gammapy.datasets.mapdataset attribute)": [[102, "gammapy.datasets.MapDataset.counts", false]], "counts (gammapy.datasets.mapdatasetonoff attribute)": [[105, "gammapy.datasets.MapDatasetOnOff.counts", false]], "counts (gammapy.datasets.spectrumdataset attribute)": [[109, "gammapy.datasets.SpectrumDataset.counts", false]], "counts (gammapy.datasets.spectrumdatasetonoff attribute)": [[110, "gammapy.datasets.SpectrumDatasetOnOff.counts", false]], "counts (gammapy.estimators.fluxmaps attribute)": [[122, "gammapy.estimators.FluxMaps.counts", false]], "counts (gammapy.estimators.fluxpoints attribute)": [[124, "gammapy.estimators.FluxPoints.counts", false]], "cov_matrix (gammapy.astro.population.casebattacharya1998 attribute)": [[28, "gammapy.astro.population.CaseBattacharya1998.cov_matrix", false]], "cov_matrix (gammapy.astro.population.exponential attribute)": [[29, "gammapy.astro.population.Exponential.cov_matrix", false]], "cov_matrix (gammapy.astro.population.faucherkaspi2006 attribute)": [[30, "gammapy.astro.population.FaucherKaspi2006.cov_matrix", false]], "cov_matrix (gammapy.astro.population.faucherkaspi2006velocitybimodal attribute)": [[31, "gammapy.astro.population.FaucherKaspi2006VelocityBimodal.cov_matrix", false]], "cov_matrix (gammapy.astro.population.faucherkaspi2006velocitymaxwellian attribute)": [[32, "gammapy.astro.population.FaucherKaspi2006VelocityMaxwellian.cov_matrix", false]], "cov_matrix (gammapy.astro.population.lorimer2006 attribute)": [[35, "gammapy.astro.population.Lorimer2006.cov_matrix", false]], "cov_matrix (gammapy.astro.population.paczynski1990 attribute)": [[36, "gammapy.astro.population.Paczynski1990.cov_matrix", false]], "cov_matrix (gammapy.astro.population.paczynski1990velocity attribute)": [[37, "gammapy.astro.population.Paczynski1990Velocity.cov_matrix", false]], "cov_matrix (gammapy.astro.population.yusifovkucuk2004 attribute)": [[39, "gammapy.astro.population.YusifovKucuk2004.cov_matrix", false]], "cov_matrix (gammapy.astro.population.yusifovkucuk2004b attribute)": [[40, "gammapy.astro.population.YusifovKucuk2004B.cov_matrix", false]], "covariance (class in gammapy.modeling)": [[208, "gammapy.modeling.Covariance", false]], "covariance (gammapy.astro.darkmatter.darkmatterannihilationspectralmodel attribute)": [[19, "gammapy.astro.darkmatter.DarkMatterAnnihilationSpectralModel.covariance", false]], "covariance (gammapy.astro.darkmatter.darkmatterdecayspectralmodel attribute)": [[20, "gammapy.astro.darkmatter.DarkMatterDecaySpectralModel.covariance", false]], "covariance (gammapy.astro.darkmatter.primaryflux attribute)": [[26, "gammapy.astro.darkmatter.PrimaryFlux.covariance", false]], "covariance (gammapy.modeling.models.brokenpowerlawspectralmodel attribute)": [[217, "gammapy.modeling.models.BrokenPowerLawSpectralModel.covariance", false]], "covariance (gammapy.modeling.models.compoundspectralmodel attribute)": [[218, "gammapy.modeling.models.CompoundSpectralModel.covariance", false]], "covariance (gammapy.modeling.models.constantfluxspatialmodel attribute)": [[219, "gammapy.modeling.models.ConstantFluxSpatialModel.covariance", false]], "covariance (gammapy.modeling.models.constantspatialmodel attribute)": [[220, "gammapy.modeling.models.ConstantSpatialModel.covariance", false]], "covariance (gammapy.modeling.models.constantspectralmodel attribute)": [[221, "gammapy.modeling.models.ConstantSpectralModel.covariance", false]], "covariance (gammapy.modeling.models.constanttemporalmodel attribute)": [[222, "gammapy.modeling.models.ConstantTemporalModel.covariance", false]], "covariance (gammapy.modeling.models.datasetmodels attribute)": [[223, "gammapy.modeling.models.DatasetModels.covariance", false]], "covariance (gammapy.modeling.models.diskspatialmodel attribute)": [[224, "gammapy.modeling.models.DiskSpatialModel.covariance", false]], "covariance (gammapy.modeling.models.eblabsorptionnormspectralmodel attribute)": [[225, "gammapy.modeling.models.EBLAbsorptionNormSpectralModel.covariance", false]], "covariance (gammapy.modeling.models.expcutoffpowerlaw3fglspectralmodel attribute)": [[227, "gammapy.modeling.models.ExpCutoffPowerLaw3FGLSpectralModel.covariance", false]], "covariance (gammapy.modeling.models.expcutoffpowerlawnormspectralmodel attribute)": [[228, "gammapy.modeling.models.ExpCutoffPowerLawNormSpectralModel.covariance", false]], "covariance (gammapy.modeling.models.expcutoffpowerlawspectralmodel attribute)": [[229, "gammapy.modeling.models.ExpCutoffPowerLawSpectralModel.covariance", false]], "covariance (gammapy.modeling.models.expdecaytemporalmodel attribute)": [[230, "gammapy.modeling.models.ExpDecayTemporalModel.covariance", false]], "covariance (gammapy.modeling.models.fovbackgroundmodel attribute)": [[231, "gammapy.modeling.models.FoVBackgroundModel.covariance", false]], "covariance (gammapy.modeling.models.gaussianspatialmodel attribute)": [[232, "gammapy.modeling.models.GaussianSpatialModel.covariance", false]], "covariance (gammapy.modeling.models.gaussianspectralmodel attribute)": [[233, "gammapy.modeling.models.GaussianSpectralModel.covariance", false]], "covariance (gammapy.modeling.models.gaussiantemporalmodel attribute)": [[234, "gammapy.modeling.models.GaussianTemporalModel.covariance", false]], "covariance (gammapy.modeling.models.generalizedgaussianspatialmodel attribute)": [[235, "gammapy.modeling.models.GeneralizedGaussianSpatialModel.covariance", false]], "covariance (gammapy.modeling.models.generalizedgaussiantemporalmodel attribute)": [[236, "gammapy.modeling.models.GeneralizedGaussianTemporalModel.covariance", false]], "covariance (gammapy.modeling.models.lightcurvetemplatetemporalmodel attribute)": [[237, "gammapy.modeling.models.LightCurveTemplateTemporalModel.covariance", false]], "covariance (gammapy.modeling.models.lineartemporalmodel attribute)": [[238, "gammapy.modeling.models.LinearTemporalModel.covariance", false]], "covariance (gammapy.modeling.models.logparabolanormspectralmodel attribute)": [[239, "gammapy.modeling.models.LogParabolaNormSpectralModel.covariance", false]], "covariance (gammapy.modeling.models.logparabolaspectralmodel attribute)": [[240, "gammapy.modeling.models.LogParabolaSpectralModel.covariance", false]], "covariance (gammapy.modeling.models.meyercrabspectralmodel attribute)": [[242, "gammapy.modeling.models.MeyerCrabSpectralModel.covariance", false]], "covariance (gammapy.modeling.models.modelbase attribute)": [[244, "gammapy.modeling.models.ModelBase.covariance", false]], "covariance (gammapy.modeling.models.models attribute)": [[245, "gammapy.modeling.models.Models.covariance", false]], "covariance (gammapy.modeling.models.naimaspectralmodel attribute)": [[246, "gammapy.modeling.models.NaimaSpectralModel.covariance", false]], "covariance (gammapy.modeling.models.piecewisenormspatialmodel attribute)": [[247, "gammapy.modeling.models.PiecewiseNormSpatialModel.covariance", false]], "covariance (gammapy.modeling.models.piecewisenormspectralmodel attribute)": [[248, "gammapy.modeling.models.PiecewiseNormSpectralModel.covariance", false]], "covariance (gammapy.modeling.models.pointspatialmodel attribute)": [[249, "gammapy.modeling.models.PointSpatialModel.covariance", false]], "covariance (gammapy.modeling.models.powerlaw2spectralmodel attribute)": [[250, "gammapy.modeling.models.PowerLaw2SpectralModel.covariance", false]], "covariance (gammapy.modeling.models.powerlawnormspectralmodel attribute)": [[251, "gammapy.modeling.models.PowerLawNormSpectralModel.covariance", false]], "covariance (gammapy.modeling.models.powerlawspectralmodel attribute)": [[252, "gammapy.modeling.models.PowerLawSpectralModel.covariance", false]], "covariance (gammapy.modeling.models.powerlawtemporalmodel attribute)": [[253, "gammapy.modeling.models.PowerLawTemporalModel.covariance", false]], "covariance (gammapy.modeling.models.prior attribute)": [[254, "gammapy.modeling.models.Prior.covariance", false]], "covariance (gammapy.modeling.models.scalespectralmodel attribute)": [[257, "gammapy.modeling.models.ScaleSpectralModel.covariance", false]], "covariance (gammapy.modeling.models.shell2spatialmodel attribute)": [[258, "gammapy.modeling.models.Shell2SpatialModel.covariance", false]], "covariance (gammapy.modeling.models.shellspatialmodel attribute)": [[259, "gammapy.modeling.models.ShellSpatialModel.covariance", false]], "covariance (gammapy.modeling.models.sinetemporalmodel attribute)": [[260, "gammapy.modeling.models.SineTemporalModel.covariance", false]], "covariance (gammapy.modeling.models.skymodel attribute)": [[261, "gammapy.modeling.models.SkyModel.covariance", false]], "covariance (gammapy.modeling.models.smoothbrokenpowerlawspectralmodel attribute)": [[262, "gammapy.modeling.models.SmoothBrokenPowerLawSpectralModel.covariance", false]], "covariance (gammapy.modeling.models.spatialmodel attribute)": [[263, "gammapy.modeling.models.SpatialModel.covariance", false]], "covariance (gammapy.modeling.models.spectralmodel attribute)": [[264, "gammapy.modeling.models.SpectralModel.covariance", false]], "covariance (gammapy.modeling.models.superexpcutoffpowerlaw3fglspectralmodel attribute)": [[265, "gammapy.modeling.models.SuperExpCutoffPowerLaw3FGLSpectralModel.covariance", false]], "covariance (gammapy.modeling.models.superexpcutoffpowerlaw4fgldr3spectralmodel attribute)": [[266, "gammapy.modeling.models.SuperExpCutoffPowerLaw4FGLDR3SpectralModel.covariance", false]], "covariance (gammapy.modeling.models.superexpcutoffpowerlaw4fglspectralmodel attribute)": [[267, "gammapy.modeling.models.SuperExpCutoffPowerLaw4FGLSpectralModel.covariance", false]], "covariance (gammapy.modeling.models.templatendspatialmodel attribute)": [[269, "gammapy.modeling.models.TemplateNDSpatialModel.covariance", false]], "covariance (gammapy.modeling.models.templatendspectralmodel attribute)": [[270, "gammapy.modeling.models.TemplateNDSpectralModel.covariance", false]], "covariance (gammapy.modeling.models.templatenpredmodel attribute)": [[271, "gammapy.modeling.models.TemplateNPredModel.covariance", false]], "covariance (gammapy.modeling.models.templatephasecurvetemporalmodel attribute)": [[272, "gammapy.modeling.models.TemplatePhaseCurveTemporalModel.covariance", false]], "covariance (gammapy.modeling.models.templatespatialmodel attribute)": [[273, "gammapy.modeling.models.TemplateSpatialModel.covariance", false]], "covariance (gammapy.modeling.models.templatespectralmodel attribute)": [[274, "gammapy.modeling.models.TemplateSpectralModel.covariance", false]], "covariance (gammapy.modeling.models.temporalmodel attribute)": [[275, "gammapy.modeling.models.TemporalModel.covariance", false]], "covariance() (gammapy.modeling.fit method)": [[210, "gammapy.modeling.Fit.covariance", false]], "covariance_result (gammapy.modeling.fitresult attribute)": [[211, "gammapy.modeling.FitResult.covariance_result", false]], "covarianceresult (class in gammapy.modeling)": [[209, "gammapy.modeling.CovarianceResult", false]], "create() (gammapy.data.gti class method)": [[86, "gammapy.data.GTI.create", false]], "create() (gammapy.data.observation class method)": [[88, "gammapy.data.Observation.create", false]], "create() (gammapy.datasets.mapdataset class method)": [[102, "gammapy.datasets.MapDataset.create", false]], "create() (gammapy.datasets.mapdatasetonoff class method)": [[105, "gammapy.datasets.MapDatasetOnOff.create", false]], "create() (gammapy.datasets.spectrumdataset class method)": [[109, "gammapy.datasets.SpectrumDataset.create", false]], "create() (gammapy.datasets.spectrumdatasetonoff class method)": [[110, "gammapy.datasets.SpectrumDatasetOnOff.create", false]], "create() (gammapy.maps.hpxgeom class method)": [[191, "gammapy.maps.HpxGeom.create", false]], "create() (gammapy.maps.hpxmap class method)": [[192, "gammapy.maps.HpxMap.create", false]], "create() (gammapy.maps.hpxndmap class method)": [[193, "gammapy.maps.HpxNDMap.create", false]], "create() (gammapy.maps.map static method)": [[195, "gammapy.maps.Map.create", false]], "create() (gammapy.maps.mapcoord class method)": [[198, "gammapy.maps.MapCoord.create", false]], "create() (gammapy.maps.regiongeom class method)": [[200, "gammapy.maps.RegionGeom.create", false]], "create() (gammapy.maps.regionndmap class method)": [[201, "gammapy.maps.RegionNDMap.create", false]], "create() (gammapy.maps.wcsgeom class method)": [[203, "gammapy.maps.WcsGeom.create", false]], "create() (gammapy.maps.wcsmap class method)": [[204, "gammapy.maps.WcsMap.create", false]], "create() (gammapy.maps.wcsndmap class method)": [[205, "gammapy.maps.WcsNDMap.create", false]], "create() (gammapy.modeling.models.model static method)": [[243, "gammapy.modeling.models.Model.create", false]], "create() (gammapy.modeling.models.skymodel class method)": [[261, "gammapy.modeling.models.SkyModel.create", false]], "create_cosmic_ray_spectral_model() (in module gammapy.modeling.models)": [[276, "gammapy.modeling.models.create_cosmic_ray_spectral_model", false]], "create_crab_spectral_model() (in module gammapy.modeling.models)": [[277, "gammapy.modeling.models.create_crab_spectral_model", false]], "create_fermi_isotropic_diffuse_model() (in module gammapy.modeling.models)": [[278, "gammapy.modeling.models.create_fermi_isotropic_diffuse_model", false]], "create_map_dataset_from_observation() (in module gammapy.datasets)": [[112, "gammapy.datasets.create_map_dataset_from_observation", false]], "create_map_dataset_geoms() (in module gammapy.datasets)": [[113, "gammapy.datasets.create_map_dataset_geoms", false]], "crop() (gammapy.maps.geom method)": [[190, "gammapy.maps.Geom.crop", false]], "crop() (gammapy.maps.hpxgeom method)": [[191, "gammapy.maps.HpxGeom.crop", false]], "crop() (gammapy.maps.hpxmap method)": [[192, "gammapy.maps.HpxMap.crop", false]], "crop() (gammapy.maps.hpxndmap method)": [[193, "gammapy.maps.HpxNDMap.crop", false]], "crop() (gammapy.maps.map method)": [[195, "gammapy.maps.Map.crop", false]], "crop() (gammapy.maps.regiongeom method)": [[200, "gammapy.maps.RegionGeom.crop", false]], "crop() (gammapy.maps.regionndmap method)": [[201, "gammapy.maps.RegionNDMap.crop", false]], "crop() (gammapy.maps.wcsgeom method)": [[203, "gammapy.maps.WcsGeom.crop", false]], "crop() (gammapy.maps.wcsmap method)": [[204, "gammapy.maps.WcsMap.crop", false]], "crop() (gammapy.maps.wcsndmap method)": [[205, "gammapy.maps.WcsNDMap.crop", false]], "cstat() (in module gammapy.stats)": [[294, "gammapy.stats.cstat", false]], "cumsum() (gammapy.irf.background2d method)": [[146, "gammapy.irf.Background2D.cumsum", false]], "cumsum() (gammapy.irf.background3d method)": [[147, "gammapy.irf.Background3D.cumsum", false]], "cumsum() (gammapy.irf.backgroundirf method)": [[148, "gammapy.irf.BackgroundIRF.cumsum", false]], "cumsum() (gammapy.irf.edispkernel method)": [[149, "gammapy.irf.EDispKernel.cumsum", false]], "cumsum() (gammapy.irf.effectiveareatable2d method)": [[152, "gammapy.irf.EffectiveAreaTable2D.cumsum", false]], "cumsum() (gammapy.irf.energydependentmultigausspsf method)": [[153, "gammapy.irf.EnergyDependentMultiGaussPSF.cumsum", false]], "cumsum() (gammapy.irf.energydispersion2d method)": [[154, "gammapy.irf.EnergyDispersion2D.cumsum", false]], "cumsum() (gammapy.irf.irf method)": [[156, "gammapy.irf.IRF.cumsum", false]], "cumsum() (gammapy.irf.parametricpsf method)": [[163, "gammapy.irf.ParametricPSF.cumsum", false]], "cumsum() (gammapy.irf.psf3d method)": [[159, "gammapy.irf.PSF3D.cumsum", false]], "cumsum() (gammapy.irf.psfking method)": [[161, "gammapy.irf.PSFKing.cumsum", false]], "cumsum() (gammapy.irf.radmax2d method)": [[164, "gammapy.irf.RadMax2D.cumsum", false]], "cumsum() (gammapy.maps.hpxmap method)": [[192, "gammapy.maps.HpxMap.cumsum", false]], "cumsum() (gammapy.maps.hpxndmap method)": [[193, "gammapy.maps.HpxNDMap.cumsum", false]], "cumsum() (gammapy.maps.map method)": [[195, "gammapy.maps.Map.cumsum", false]], "cumsum() (gammapy.maps.regionndmap method)": [[201, "gammapy.maps.RegionNDMap.cumsum", false]], "cumsum() (gammapy.maps.wcsmap method)": [[204, "gammapy.maps.WcsMap.cumsum", false]], "cumsum() (gammapy.maps.wcsndmap method)": [[205, "gammapy.maps.WcsNDMap.cumsum", false]], "cutout() (gammapy.datasets.mapdataset method)": [[102, "gammapy.datasets.MapDataset.cutout", false]], "cutout() (gammapy.datasets.mapdatasetonoff method)": [[105, "gammapy.datasets.MapDatasetOnOff.cutout", false]], "cutout() (gammapy.datasets.spectrumdataset method)": [[109, "gammapy.datasets.SpectrumDataset.cutout", false]], "cutout() (gammapy.datasets.spectrumdatasetonoff method)": [[110, "gammapy.datasets.SpectrumDatasetOnOff.cutout", false]], "cutout() (gammapy.irf.edispkernelmap method)": [[150, "gammapy.irf.EDispKernelMap.cutout", false]], "cutout() (gammapy.irf.edispmap method)": [[151, "gammapy.irf.EDispMap.cutout", false]], "cutout() (gammapy.irf.irfmap method)": [[157, "gammapy.irf.IRFMap.cutout", false]], "cutout() (gammapy.irf.psfmap method)": [[162, "gammapy.irf.PSFMap.cutout", false]], "cutout() (gammapy.irf.recopsfmap method)": [[165, "gammapy.irf.RecoPSFMap.cutout", false]], "cutout() (gammapy.maps.hpxgeom method)": [[191, "gammapy.maps.HpxGeom.cutout", false]], "cutout() (gammapy.maps.hpxndmap method)": [[193, "gammapy.maps.HpxNDMap.cutout", false]], "cutout() (gammapy.maps.regionndmap method)": [[201, "gammapy.maps.RegionNDMap.cutout", false]], "cutout() (gammapy.maps.wcsgeom method)": [[203, "gammapy.maps.WcsGeom.cutout", false]], "cutout() (gammapy.maps.wcsndmap method)": [[205, "gammapy.maps.WcsNDMap.cutout", false]], "cutout() (gammapy.modeling.models.templatenpredmodel method)": [[271, "gammapy.modeling.models.TemplateNPredModel.cutout", false]], "cutout_and_mask_region() (gammapy.maps.wcsndmap method)": [[205, "gammapy.maps.WcsNDMap.cutout_and_mask_region", false]], "cutout_slices() (gammapy.maps.wcsgeom method)": [[203, "gammapy.maps.WcsGeom.cutout_slices", false]], "d_sun_to_galactic_center (in module gammapy.utils.coordinates)": [[304, "gammapy.utils.coordinates.D_SUN_TO_GALACTIC_CENTER", false]], "darkmatterannihilationspectralmodel (class in gammapy.astro.darkmatter)": [[19, "gammapy.astro.darkmatter.DarkMatterAnnihilationSpectralModel", false]], "darkmatterdecayspectralmodel (class in gammapy.astro.darkmatter)": [[20, "gammapy.astro.darkmatter.DarkMatterDecaySpectralModel", false]], "data (gammapy.irf.background2d attribute)": [[146, "gammapy.irf.Background2D.data", false]], "data (gammapy.irf.background3d attribute)": [[147, "gammapy.irf.Background3D.data", false]], "data (gammapy.irf.backgroundirf attribute)": [[148, "gammapy.irf.BackgroundIRF.data", false]], "data (gammapy.irf.edispkernel attribute)": [[149, "gammapy.irf.EDispKernel.data", false]], "data (gammapy.irf.effectiveareatable2d attribute)": [[152, "gammapy.irf.EffectiveAreaTable2D.data", false]], "data (gammapy.irf.energydependentmultigausspsf attribute)": [[153, "gammapy.irf.EnergyDependentMultiGaussPSF.data", false]], "data (gammapy.irf.energydispersion2d attribute)": [[154, "gammapy.irf.EnergyDispersion2D.data", false]], "data (gammapy.irf.irf attribute)": [[156, "gammapy.irf.IRF.data", false]], "data (gammapy.irf.parametricpsf attribute)": [[163, "gammapy.irf.ParametricPSF.data", false]], "data (gammapy.irf.psf3d attribute)": [[159, "gammapy.irf.PSF3D.data", false]], "data (gammapy.irf.psfkernel attribute)": [[160, "gammapy.irf.PSFKernel.data", false]], "data (gammapy.irf.psfking attribute)": [[161, "gammapy.irf.PSFKing.data", false]], "data (gammapy.irf.radmax2d attribute)": [[164, "gammapy.irf.RadMax2D.data", false]], "data (gammapy.maps.hpxmap attribute)": [[192, "gammapy.maps.HpxMap.data", false]], "data (gammapy.maps.hpxndmap attribute)": [[193, "gammapy.maps.HpxNDMap.data", false]], "data (gammapy.maps.map attribute)": [[195, "gammapy.maps.Map.data", false]], "data (gammapy.maps.regionndmap attribute)": [[201, "gammapy.maps.RegionNDMap.data", false]], "data (gammapy.maps.wcsmap attribute)": [[204, "gammapy.maps.WcsMap.data", false]], "data (gammapy.maps.wcsndmap attribute)": [[205, "gammapy.maps.WcsNDMap.data", false]], "data (gammapy.modeling.covariance attribute)": [[208, "gammapy.modeling.Covariance.data", false]], "data_nbytes() (gammapy.maps.geom method)": [[190, "gammapy.maps.Geom.data_nbytes", false]], "data_nbytes() (gammapy.maps.hpxgeom method)": [[191, "gammapy.maps.HpxGeom.data_nbytes", false]], "data_nbytes() (gammapy.maps.regiongeom method)": [[200, "gammapy.maps.RegionGeom.data_nbytes", false]], "data_nbytes() (gammapy.maps.wcsgeom method)": [[203, "gammapy.maps.WcsGeom.data_nbytes", false]], "data_shape (gammapy.datasets.mapdataset attribute)": [[102, "gammapy.datasets.MapDataset.data_shape", false]], "data_shape (gammapy.datasets.mapdatasetonoff attribute)": [[105, "gammapy.datasets.MapDatasetOnOff.data_shape", false]], "data_shape (gammapy.datasets.spectrumdataset attribute)": [[109, "gammapy.datasets.SpectrumDataset.data_shape", false]], "data_shape (gammapy.datasets.spectrumdatasetonoff attribute)": [[110, "gammapy.datasets.SpectrumDatasetOnOff.data_shape", false]], "data_shape (gammapy.maps.geom attribute)": [[190, "gammapy.maps.Geom.data_shape", false]], "data_shape (gammapy.maps.hpxgeom attribute)": [[191, "gammapy.maps.HpxGeom.data_shape", false]], "data_shape (gammapy.maps.regiongeom attribute)": [[200, "gammapy.maps.RegionGeom.data_shape", false]], "data_shape (gammapy.maps.wcsgeom attribute)": [[203, "gammapy.maps.WcsGeom.data_shape", false]], "data_shape() (gammapy.datasets.fluxpointsdataset method)": [[101, "gammapy.datasets.FluxPointsDataset.data_shape", false]], "data_shape_axes (gammapy.maps.hpxgeom attribute)": [[191, "gammapy.maps.HpxGeom.data_shape_axes", false]], "data_shape_axes (gammapy.maps.regiongeom attribute)": [[200, "gammapy.maps.RegionGeom.data_shape_axes", false]], "data_shape_axes (gammapy.maps.wcsgeom attribute)": [[203, "gammapy.maps.WcsGeom.data_shape_axes", false]], "data_shape_image (gammapy.maps.wcsgeom attribute)": [[203, "gammapy.maps.WcsGeom.data_shape_image", false]], "dataset": [[573, "term-Dataset", true]], "dataset (class in gammapy.datasets)": [[99, "gammapy.datasets.Dataset", false]], "dataset_registry (in module gammapy.datasets)": [[98, "gammapy.datasets.DATASET_REGISTRY", false]], "datasetmodels (class in gammapy.modeling.models)": [[223, "gammapy.modeling.models.DatasetModels", false]], "datasets (class in gammapy.datasets)": [[100, "gammapy.datasets.Datasets", false]], "datasetsmaker (class in gammapy.makers)": [[168, "gammapy.makers.DatasetsMaker", false]], "datastore (class in gammapy.data)": [[82, "gammapy.data.DataStore", false]], "deepcopy() (gammapy.astro.population.casebattacharya1998 method)": [[28, "gammapy.astro.population.CaseBattacharya1998.deepcopy", false]], "deepcopy() (gammapy.astro.population.exponential method)": [[29, "gammapy.astro.population.Exponential.deepcopy", false]], "deepcopy() (gammapy.astro.population.faucherkaspi2006 method)": [[30, "gammapy.astro.population.FaucherKaspi2006.deepcopy", false]], "deepcopy() (gammapy.astro.population.faucherkaspi2006velocitybimodal method)": [[31, "gammapy.astro.population.FaucherKaspi2006VelocityBimodal.deepcopy", false]], "deepcopy() (gammapy.astro.population.faucherkaspi2006velocitymaxwellian method)": [[32, "gammapy.astro.population.FaucherKaspi2006VelocityMaxwellian.deepcopy", false]], "deepcopy() (gammapy.astro.population.lorimer2006 method)": [[35, "gammapy.astro.population.Lorimer2006.deepcopy", false]], "deepcopy() (gammapy.astro.population.paczynski1990 method)": [[36, "gammapy.astro.population.Paczynski1990.deepcopy", false]], "deepcopy() (gammapy.astro.population.paczynski1990velocity method)": [[37, "gammapy.astro.population.Paczynski1990Velocity.deepcopy", false]], "deepcopy() (gammapy.astro.population.yusifovkucuk2004 method)": [[39, "gammapy.astro.population.YusifovKucuk2004.deepcopy", false]], "deepcopy() (gammapy.astro.population.yusifovkucuk2004b method)": [[40, "gammapy.astro.population.YusifovKucuk2004B.deepcopy", false]], "default_alpha (gammapy.astro.darkmatter.einastoprofile attribute)": [[21, "gammapy.astro.darkmatter.EinastoProfile.DEFAULT_ALPHA", false]], "default_alpha (gammapy.astro.darkmatter.zhaoprofile attribute)": [[27, "gammapy.astro.darkmatter.ZhaoProfile.DEFAULT_ALPHA", false]], "default_beta (gammapy.astro.darkmatter.zhaoprofile attribute)": [[27, "gammapy.astro.darkmatter.ZhaoProfile.DEFAULT_BETA", false]], "default_gamma (gammapy.astro.darkmatter.zhaoprofile attribute)": [[27, "gammapy.astro.darkmatter.ZhaoProfile.DEFAULT_GAMMA", false]], "default_hdu_table (gammapy.data.datastore attribute)": [[82, "gammapy.data.DataStore.DEFAULT_HDU_TABLE", false]], "default_interp_kwargs (gammapy.irf.background2d attribute)": [[146, "gammapy.irf.Background2D.default_interp_kwargs", false]], "default_interp_kwargs (gammapy.irf.background3d attribute)": [[147, "gammapy.irf.Background3D.default_interp_kwargs", false]], "default_interp_kwargs (gammapy.irf.backgroundirf attribute)": [[148, "gammapy.irf.BackgroundIRF.default_interp_kwargs", false]], "default_interp_kwargs (gammapy.irf.edispkernel attribute)": [[149, "gammapy.irf.EDispKernel.default_interp_kwargs", false]], "default_interp_kwargs (gammapy.irf.effectiveareatable2d attribute)": [[152, "gammapy.irf.EffectiveAreaTable2D.default_interp_kwargs", false]], "default_interp_kwargs (gammapy.irf.energydependentmultigausspsf attribute)": [[153, "gammapy.irf.EnergyDependentMultiGaussPSF.default_interp_kwargs", false]], "default_interp_kwargs (gammapy.irf.energydispersion2d attribute)": [[154, "gammapy.irf.EnergyDispersion2D.default_interp_kwargs", false]], "default_interp_kwargs (gammapy.irf.irf attribute)": [[156, "gammapy.irf.IRF.default_interp_kwargs", false]], "default_interp_kwargs (gammapy.irf.parametricpsf attribute)": [[163, "gammapy.irf.ParametricPSF.default_interp_kwargs", false]], "default_interp_kwargs (gammapy.irf.psf3d attribute)": [[159, "gammapy.irf.PSF3D.default_interp_kwargs", false]], "default_interp_kwargs (gammapy.irf.psfking attribute)": [[161, "gammapy.irf.PSFKing.default_interp_kwargs", false]], "default_interp_kwargs (gammapy.irf.radmax2d attribute)": [[164, "gammapy.irf.RadMax2D.default_interp_kwargs", false]], "default_obs_table (gammapy.data.datastore attribute)": [[82, "gammapy.data.DataStore.DEFAULT_OBS_TABLE", false]], "default_parameters (gammapy.astro.darkmatter.darkmatterannihilationspectralmodel attribute)": [[19, "gammapy.astro.darkmatter.DarkMatterAnnihilationSpectralModel.default_parameters", false]], "default_parameters (gammapy.astro.darkmatter.darkmatterdecayspectralmodel attribute)": [[20, "gammapy.astro.darkmatter.DarkMatterDecaySpectralModel.default_parameters", false]], "default_parameters (gammapy.astro.darkmatter.primaryflux attribute)": [[26, "gammapy.astro.darkmatter.PrimaryFlux.default_parameters", false]], "default_parameters (gammapy.modeling.models.brokenpowerlawspectralmodel attribute)": [[217, "gammapy.modeling.models.BrokenPowerLawSpectralModel.default_parameters", false]], "default_parameters (gammapy.modeling.models.compoundspectralmodel attribute)": [[218, "gammapy.modeling.models.CompoundSpectralModel.default_parameters", false]], "default_parameters (gammapy.modeling.models.constantfluxspatialmodel attribute)": [[219, "gammapy.modeling.models.ConstantFluxSpatialModel.default_parameters", false]], "default_parameters (gammapy.modeling.models.constantspatialmodel attribute)": [[220, "gammapy.modeling.models.ConstantSpatialModel.default_parameters", false]], "default_parameters (gammapy.modeling.models.constantspectralmodel attribute)": [[221, "gammapy.modeling.models.ConstantSpectralModel.default_parameters", false]], "default_parameters (gammapy.modeling.models.constanttemporalmodel attribute)": [[222, "gammapy.modeling.models.ConstantTemporalModel.default_parameters", false]], "default_parameters (gammapy.modeling.models.diskspatialmodel attribute)": [[224, "gammapy.modeling.models.DiskSpatialModel.default_parameters", false]], "default_parameters (gammapy.modeling.models.eblabsorptionnormspectralmodel attribute)": [[225, "gammapy.modeling.models.EBLAbsorptionNormSpectralModel.default_parameters", false]], "default_parameters (gammapy.modeling.models.expcutoffpowerlaw3fglspectralmodel attribute)": [[227, "gammapy.modeling.models.ExpCutoffPowerLaw3FGLSpectralModel.default_parameters", false]], "default_parameters (gammapy.modeling.models.expcutoffpowerlawnormspectralmodel attribute)": [[228, "gammapy.modeling.models.ExpCutoffPowerLawNormSpectralModel.default_parameters", false]], "default_parameters (gammapy.modeling.models.expcutoffpowerlawspectralmodel attribute)": [[229, "gammapy.modeling.models.ExpCutoffPowerLawSpectralModel.default_parameters", false]], "default_parameters (gammapy.modeling.models.expdecaytemporalmodel attribute)": [[230, "gammapy.modeling.models.ExpDecayTemporalModel.default_parameters", false]], "default_parameters (gammapy.modeling.models.fovbackgroundmodel attribute)": [[231, "gammapy.modeling.models.FoVBackgroundModel.default_parameters", false]], "default_parameters (gammapy.modeling.models.gaussianspatialmodel attribute)": [[232, "gammapy.modeling.models.GaussianSpatialModel.default_parameters", false]], "default_parameters (gammapy.modeling.models.gaussianspectralmodel attribute)": [[233, "gammapy.modeling.models.GaussianSpectralModel.default_parameters", false]], "default_parameters (gammapy.modeling.models.gaussiantemporalmodel attribute)": [[234, "gammapy.modeling.models.GaussianTemporalModel.default_parameters", false]], "default_parameters (gammapy.modeling.models.generalizedgaussianspatialmodel attribute)": [[235, "gammapy.modeling.models.GeneralizedGaussianSpatialModel.default_parameters", false]], "default_parameters (gammapy.modeling.models.generalizedgaussiantemporalmodel attribute)": [[236, "gammapy.modeling.models.GeneralizedGaussianTemporalModel.default_parameters", false]], "default_parameters (gammapy.modeling.models.lightcurvetemplatetemporalmodel attribute)": [[237, "gammapy.modeling.models.LightCurveTemplateTemporalModel.default_parameters", false]], "default_parameters (gammapy.modeling.models.lineartemporalmodel attribute)": [[238, "gammapy.modeling.models.LinearTemporalModel.default_parameters", false]], "default_parameters (gammapy.modeling.models.logparabolanormspectralmodel attribute)": [[239, "gammapy.modeling.models.LogParabolaNormSpectralModel.default_parameters", false]], "default_parameters (gammapy.modeling.models.logparabolaspectralmodel attribute)": [[240, "gammapy.modeling.models.LogParabolaSpectralModel.default_parameters", false]], "default_parameters (gammapy.modeling.models.meyercrabspectralmodel attribute)": [[242, "gammapy.modeling.models.MeyerCrabSpectralModel.default_parameters", false]], "default_parameters (gammapy.modeling.models.naimaspectralmodel attribute)": [[246, "gammapy.modeling.models.NaimaSpectralModel.default_parameters", false]], "default_parameters (gammapy.modeling.models.piecewisenormspatialmodel attribute)": [[247, "gammapy.modeling.models.PiecewiseNormSpatialModel.default_parameters", false]], "default_parameters (gammapy.modeling.models.piecewisenormspectralmodel attribute)": [[248, "gammapy.modeling.models.PiecewiseNormSpectralModel.default_parameters", false]], "default_parameters (gammapy.modeling.models.pointspatialmodel attribute)": [[249, "gammapy.modeling.models.PointSpatialModel.default_parameters", false]], "default_parameters (gammapy.modeling.models.powerlaw2spectralmodel attribute)": [[250, "gammapy.modeling.models.PowerLaw2SpectralModel.default_parameters", false]], "default_parameters (gammapy.modeling.models.powerlawnormspectralmodel attribute)": [[251, "gammapy.modeling.models.PowerLawNormSpectralModel.default_parameters", false]], "default_parameters (gammapy.modeling.models.powerlawspectralmodel attribute)": [[252, "gammapy.modeling.models.PowerLawSpectralModel.default_parameters", false]], "default_parameters (gammapy.modeling.models.powerlawtemporalmodel attribute)": [[253, "gammapy.modeling.models.PowerLawTemporalModel.default_parameters", false]], "default_parameters (gammapy.modeling.models.prior attribute)": [[254, "gammapy.modeling.models.Prior.default_parameters", false]], "default_parameters (gammapy.modeling.models.scalespectralmodel attribute)": [[257, "gammapy.modeling.models.ScaleSpectralModel.default_parameters", false]], "default_parameters (gammapy.modeling.models.shell2spatialmodel attribute)": [[258, "gammapy.modeling.models.Shell2SpatialModel.default_parameters", false]], "default_parameters (gammapy.modeling.models.shellspatialmodel attribute)": [[259, "gammapy.modeling.models.ShellSpatialModel.default_parameters", false]], "default_parameters (gammapy.modeling.models.sinetemporalmodel attribute)": [[260, "gammapy.modeling.models.SineTemporalModel.default_parameters", false]], "default_parameters (gammapy.modeling.models.skymodel attribute)": [[261, "gammapy.modeling.models.SkyModel.default_parameters", false]], "default_parameters (gammapy.modeling.models.smoothbrokenpowerlawspectralmodel attribute)": [[262, "gammapy.modeling.models.SmoothBrokenPowerLawSpectralModel.default_parameters", false]], "default_parameters (gammapy.modeling.models.spatialmodel attribute)": [[263, "gammapy.modeling.models.SpatialModel.default_parameters", false]], "default_parameters (gammapy.modeling.models.spectralmodel attribute)": [[264, "gammapy.modeling.models.SpectralModel.default_parameters", false]], "default_parameters (gammapy.modeling.models.superexpcutoffpowerlaw3fglspectralmodel attribute)": [[265, "gammapy.modeling.models.SuperExpCutoffPowerLaw3FGLSpectralModel.default_parameters", false]], "default_parameters (gammapy.modeling.models.superexpcutoffpowerlaw4fgldr3spectralmodel attribute)": [[266, "gammapy.modeling.models.SuperExpCutoffPowerLaw4FGLDR3SpectralModel.default_parameters", false]], "default_parameters (gammapy.modeling.models.superexpcutoffpowerlaw4fglspectralmodel attribute)": [[267, "gammapy.modeling.models.SuperExpCutoffPowerLaw4FGLSpectralModel.default_parameters", false]], "default_parameters (gammapy.modeling.models.templatendspatialmodel attribute)": [[269, "gammapy.modeling.models.TemplateNDSpatialModel.default_parameters", false]], "default_parameters (gammapy.modeling.models.templatendspectralmodel attribute)": [[270, "gammapy.modeling.models.TemplateNDSpectralModel.default_parameters", false]], "default_parameters (gammapy.modeling.models.templatenpredmodel attribute)": [[271, "gammapy.modeling.models.TemplateNPredModel.default_parameters", false]], "default_parameters (gammapy.modeling.models.templatephasecurvetemporalmodel attribute)": [[272, "gammapy.modeling.models.TemplatePhaseCurveTemporalModel.default_parameters", false]], "default_parameters (gammapy.modeling.models.templatespatialmodel attribute)": [[273, "gammapy.modeling.models.TemplateSpatialModel.default_parameters", false]], "default_parameters (gammapy.modeling.models.templatespectralmodel attribute)": [[274, "gammapy.modeling.models.TemplateSpectralModel.default_parameters", false]], "default_parameters (gammapy.modeling.models.temporalmodel attribute)": [[275, "gammapy.modeling.models.TemporalModel.default_parameters", false]], "default_scale_radius (gammapy.astro.darkmatter.burkertprofile attribute)": [[17, "gammapy.astro.darkmatter.BurkertProfile.DEFAULT_SCALE_RADIUS", false]], "default_scale_radius (gammapy.astro.darkmatter.einastoprofile attribute)": [[21, "gammapy.astro.darkmatter.EinastoProfile.DEFAULT_SCALE_RADIUS", false]], "default_scale_radius (gammapy.astro.darkmatter.isothermalprofile attribute)": [[22, "gammapy.astro.darkmatter.IsothermalProfile.DEFAULT_SCALE_RADIUS", false]], "default_scale_radius (gammapy.astro.darkmatter.mooreprofile attribute)": [[24, "gammapy.astro.darkmatter.MooreProfile.DEFAULT_SCALE_RADIUS", false]], "default_scale_radius (gammapy.astro.darkmatter.nfwprofile attribute)": [[25, "gammapy.astro.darkmatter.NFWProfile.DEFAULT_SCALE_RADIUS", false]], "default_scale_radius (gammapy.astro.darkmatter.zhaoprofile attribute)": [[27, "gammapy.astro.darkmatter.ZhaoProfile.DEFAULT_SCALE_RADIUS", false]], "default_unit (gammapy.irf.background2d attribute)": [[146, "gammapy.irf.Background2D.default_unit", false]], "default_unit (gammapy.irf.background3d attribute)": [[147, "gammapy.irf.Background3D.default_unit", false]], "default_unit (gammapy.irf.effectiveareatable2d attribute)": [[152, "gammapy.irf.EffectiveAreaTable2D.default_unit", false]], "default_unit (gammapy.irf.energydispersion2d attribute)": [[154, "gammapy.irf.EnergyDispersion2D.default_unit", false]], "default_unit (gammapy.irf.psf3d attribute)": [[159, "gammapy.irf.PSF3D.default_unit", false]], "default_unit (gammapy.irf.radmax2d attribute)": [[164, "gammapy.irf.RadMax2D.default_unit", false]], "delete_interval() (gammapy.data.gti method)": [[86, "gammapy.data.GTI.delete_interval", false]], "description (gammapy.catalog.sourcecatalog1lhaaso attribute)": [[57, "gammapy.catalog.SourceCatalog1LHAASO.description", false]], "description (gammapy.catalog.sourcecatalog2fhl attribute)": [[58, "gammapy.catalog.SourceCatalog2FHL.description", false]], "description (gammapy.catalog.sourcecatalog2hwc attribute)": [[59, "gammapy.catalog.SourceCatalog2HWC.description", false]], "description (gammapy.catalog.sourcecatalog2pc attribute)": [[60, "gammapy.catalog.SourceCatalog2PC.description", false]], "description (gammapy.catalog.sourcecatalog3fgl attribute)": [[61, "gammapy.catalog.SourceCatalog3FGL.description", false]], "description (gammapy.catalog.sourcecatalog3fhl attribute)": [[62, "gammapy.catalog.SourceCatalog3FHL.description", false]], "description (gammapy.catalog.sourcecatalog3hwc attribute)": [[63, "gammapy.catalog.SourceCatalog3HWC.description", false]], "description (gammapy.catalog.sourcecatalog3pc attribute)": [[64, "gammapy.catalog.SourceCatalog3PC.description", false]], "description (gammapy.catalog.sourcecatalog4fgl attribute)": [[65, "gammapy.catalog.SourceCatalog4FGL.description", false]], "description (gammapy.catalog.sourcecataloggammacat attribute)": [[66, "gammapy.catalog.SourceCatalogGammaCat.description", false]], "description (gammapy.catalog.sourcecataloghgps attribute)": [[67, "gammapy.catalog.SourceCatalogHGPS.description", false]], "description() (gammapy.catalog.sourcecatalog class method)": [[56, "gammapy.catalog.SourceCatalog.description", false]], "dict() (gammapy.analysis.analysisconfig method)": [[16, "gammapy.analysis.AnalysisConfig.dict", false]], "dict() (gammapy.data.eventlistmetadata method)": [[84, "gammapy.data.EventListMetaData.dict", false]], "dict() (gammapy.data.observationmetadata method)": [[90, "gammapy.data.ObservationMetaData.dict", false]], "dict() (gammapy.datasets.mapdatasetmetadata method)": [[104, "gammapy.datasets.MapDatasetMetaData.dict", false]], "dict() (gammapy.estimators.fluxmetadata method)": [[123, "gammapy.estimators.FluxMetaData.dict", false]], "discrete_correlation() (in module gammapy.stats)": [[295, "gammapy.stats.discrete_correlation", false]], "diskspatialmodel (class in gammapy.modeling.models)": [[224, "gammapy.modeling.models.DiskSpatialModel", false]], "distance_gc (gammapy.astro.darkmatter.burkertprofile attribute)": [[17, "gammapy.astro.darkmatter.BurkertProfile.DISTANCE_GC", false]], "distance_gc (gammapy.astro.darkmatter.dmprofile attribute)": [[18, "gammapy.astro.darkmatter.DMProfile.DISTANCE_GC", false]], "distance_gc (gammapy.astro.darkmatter.einastoprofile attribute)": [[21, "gammapy.astro.darkmatter.EinastoProfile.DISTANCE_GC", false]], "distance_gc (gammapy.astro.darkmatter.isothermalprofile attribute)": [[22, "gammapy.astro.darkmatter.IsothermalProfile.DISTANCE_GC", false]], "distance_gc (gammapy.astro.darkmatter.mooreprofile attribute)": [[24, "gammapy.astro.darkmatter.MooreProfile.DISTANCE_GC", false]], "distance_gc (gammapy.astro.darkmatter.nfwprofile attribute)": [[25, "gammapy.astro.darkmatter.NFWProfile.DISTANCE_GC", false]], "distance_gc (gammapy.astro.darkmatter.zhaoprofile attribute)": [[27, "gammapy.astro.darkmatter.ZhaoProfile.DISTANCE_GC", false]], "dl3": [[573, "term-DL3", true]], "dl4": [[573, "term-DL4", true]], "dl5": [[573, "term-DL5", true]], "dl6": [[573, "term-DL6", true]], "dmprofile (class in gammapy.astro.darkmatter)": [[18, "gammapy.astro.darkmatter.DMProfile", false]], "dnde (gammapy.estimators.fluxmaps attribute)": [[122, "gammapy.estimators.FluxMaps.dnde", false]], "dnde (gammapy.estimators.fluxpoints attribute)": [[124, "gammapy.estimators.FluxPoints.dnde", false]], "dnde_err (gammapy.estimators.fluxmaps attribute)": [[122, "gammapy.estimators.FluxMaps.dnde_err", false]], "dnde_err (gammapy.estimators.fluxpoints attribute)": [[124, "gammapy.estimators.FluxPoints.dnde_err", false]], "dnde_errn (gammapy.estimators.fluxmaps attribute)": [[122, "gammapy.estimators.FluxMaps.dnde_errn", false]], "dnde_errn (gammapy.estimators.fluxpoints attribute)": [[124, "gammapy.estimators.FluxPoints.dnde_errn", false]], "dnde_errp (gammapy.estimators.fluxmaps attribute)": [[122, "gammapy.estimators.FluxMaps.dnde_errp", false]], "dnde_errp (gammapy.estimators.fluxpoints attribute)": [[124, "gammapy.estimators.FluxPoints.dnde_errp", false]], "dnde_ref (gammapy.estimators.fluxmaps attribute)": [[122, "gammapy.estimators.FluxMaps.dnde_ref", false]], "dnde_ref (gammapy.estimators.fluxpoints attribute)": [[124, "gammapy.estimators.FluxPoints.dnde_ref", false]], "dnde_scan_values (gammapy.estimators.fluxmaps attribute)": [[122, "gammapy.estimators.FluxMaps.dnde_scan_values", false]], "dnde_scan_values (gammapy.estimators.fluxpoints attribute)": [[124, "gammapy.estimators.FluxPoints.dnde_scan_values", false]], "dnde_ul (gammapy.estimators.fluxmaps attribute)": [[122, "gammapy.estimators.FluxMaps.dnde_ul", false]], "dnde_ul (gammapy.estimators.fluxpoints attribute)": [[124, "gammapy.estimators.FluxPoints.dnde_ul", false]], "dot() (gammapy.maps.hpxmap method)": [[192, "gammapy.maps.HpxMap.dot", false]], "dot() (gammapy.maps.hpxndmap method)": [[193, "gammapy.maps.HpxNDMap.dot", false]], "dot() (gammapy.maps.map method)": [[195, "gammapy.maps.Map.dot", false]], "dot() (gammapy.maps.regionndmap method)": [[201, "gammapy.maps.RegionNDMap.dot", false]], "dot() (gammapy.maps.wcsmap method)": [[204, "gammapy.maps.WcsMap.dot", false]], "dot() (gammapy.maps.wcsndmap method)": [[205, "gammapy.maps.WcsNDMap.dot", false]], "downsample() (gammapy.datasets.mapdataset method)": [[102, "gammapy.datasets.MapDataset.downsample", false]], "downsample() (gammapy.datasets.mapdatasetonoff method)": [[105, "gammapy.datasets.MapDatasetOnOff.downsample", false]], "downsample() (gammapy.datasets.spectrumdataset method)": [[109, "gammapy.datasets.SpectrumDataset.downsample", false]], "downsample() (gammapy.datasets.spectrumdatasetonoff method)": [[110, "gammapy.datasets.SpectrumDatasetOnOff.downsample", false]], "downsample() (gammapy.irf.edispkernelmap method)": [[150, "gammapy.irf.EDispKernelMap.downsample", false]], "downsample() (gammapy.irf.edispmap method)": [[151, "gammapy.irf.EDispMap.downsample", false]], "downsample() (gammapy.irf.irfmap method)": [[157, "gammapy.irf.IRFMap.downsample", false]], "downsample() (gammapy.irf.psfmap method)": [[162, "gammapy.irf.PSFMap.downsample", false]], "downsample() (gammapy.irf.recopsfmap method)": [[165, "gammapy.irf.RecoPSFMap.downsample", false]], "downsample() (gammapy.maps.geom method)": [[190, "gammapy.maps.Geom.downsample", false]], "downsample() (gammapy.maps.hpxgeom method)": [[191, "gammapy.maps.HpxGeom.downsample", false]], "downsample() (gammapy.maps.hpxmap method)": [[192, "gammapy.maps.HpxMap.downsample", false]], "downsample() (gammapy.maps.hpxndmap method)": [[193, "gammapy.maps.HpxNDMap.downsample", false]], "downsample() (gammapy.maps.labelmapaxis method)": [[194, "gammapy.maps.LabelMapAxis.downsample", false]], "downsample() (gammapy.maps.map method)": [[195, "gammapy.maps.Map.downsample", false]], "downsample() (gammapy.maps.mapaxes method)": [[196, "gammapy.maps.MapAxes.downsample", false]], "downsample() (gammapy.maps.mapaxis method)": [[197, "gammapy.maps.MapAxis.downsample", false]], "downsample() (gammapy.maps.regiongeom method)": [[200, "gammapy.maps.RegionGeom.downsample", false]], "downsample() (gammapy.maps.regionndmap method)": [[201, "gammapy.maps.RegionNDMap.downsample", false]], "downsample() (gammapy.maps.timemapaxis method)": [[202, "gammapy.maps.TimeMapAxis.downsample", false]], "downsample() (gammapy.maps.wcsgeom method)": [[203, "gammapy.maps.WcsGeom.downsample", false]], "downsample() (gammapy.maps.wcsmap method)": [[204, "gammapy.maps.WcsMap.downsample", false]], "downsample() (gammapy.maps.wcsndmap method)": [[205, "gammapy.maps.WcsNDMap.downsample", false]], "draw() (in module gammapy.utils.random)": [[327, "gammapy.utils.random.draw", false]], "drift (gammapy.data.pointingmode attribute)": [[95, "gammapy.data.PointingMode.DRIFT", false]], "drop() (gammapy.maps.geom method)": [[190, "gammapy.maps.Geom.drop", false]], "drop() (gammapy.maps.hpxgeom method)": [[191, "gammapy.maps.HpxGeom.drop", false]], "drop() (gammapy.maps.mapaxes method)": [[196, "gammapy.maps.MapAxes.drop", false]], "drop() (gammapy.maps.regiongeom method)": [[200, "gammapy.maps.RegionGeom.drop", false]], "drop() (gammapy.maps.wcsgeom method)": [[203, "gammapy.maps.WcsGeom.drop", false]], "dtype (gammapy.data.hduindextable attribute)": [[87, "gammapy.data.HDUIndexTable.dtype", false]], "dtype (gammapy.data.observationtable attribute)": [[91, "gammapy.data.ObservationTable.dtype", false]], "duration (gammapy.data.pointinginfo attribute)": [[94, "gammapy.data.PointingInfo.duration", false]], "e (gammapy.modeling.models.diskspatialmodel attribute)": [[224, "gammapy.modeling.models.DiskSpatialModel.e", false]], "e (gammapy.modeling.models.gaussianspatialmodel attribute)": [[232, "gammapy.modeling.models.GaussianSpatialModel.e", false]], "e (gammapy.modeling.models.generalizedgaussianspatialmodel attribute)": [[235, "gammapy.modeling.models.GeneralizedGaussianSpatialModel.e", false]], "e2dnde (gammapy.estimators.fluxmaps attribute)": [[122, "gammapy.estimators.FluxMaps.e2dnde", false]], "e2dnde (gammapy.estimators.fluxpoints attribute)": [[124, "gammapy.estimators.FluxPoints.e2dnde", false]], "e2dnde_err (gammapy.estimators.fluxmaps attribute)": [[122, "gammapy.estimators.FluxMaps.e2dnde_err", false]], "e2dnde_err (gammapy.estimators.fluxpoints attribute)": [[124, "gammapy.estimators.FluxPoints.e2dnde_err", false]], "e2dnde_errn (gammapy.estimators.fluxmaps attribute)": [[122, "gammapy.estimators.FluxMaps.e2dnde_errn", false]], "e2dnde_errn (gammapy.estimators.fluxpoints attribute)": [[124, "gammapy.estimators.FluxPoints.e2dnde_errn", false]], "e2dnde_errp (gammapy.estimators.fluxmaps attribute)": [[122, "gammapy.estimators.FluxMaps.e2dnde_errp", false]], "e2dnde_errp (gammapy.estimators.fluxpoints attribute)": [[124, "gammapy.estimators.FluxPoints.e2dnde_errp", false]], "e2dnde_ref (gammapy.estimators.fluxmaps attribute)": [[122, "gammapy.estimators.FluxMaps.e2dnde_ref", false]], "e2dnde_ref (gammapy.estimators.fluxpoints attribute)": [[124, "gammapy.estimators.FluxPoints.e2dnde_ref", false]], "e2dnde_ul (gammapy.estimators.fluxmaps attribute)": [[122, "gammapy.estimators.FluxMaps.e2dnde_ul", false]], "e2dnde_ul (gammapy.estimators.fluxpoints attribute)": [[124, "gammapy.estimators.FluxPoints.e2dnde_ul", false]], "e_peak (gammapy.modeling.models.expcutoffpowerlawspectralmodel attribute)": [[229, "gammapy.modeling.models.ExpCutoffPowerLawSpectralModel.e_peak", false]], "e_peak (gammapy.modeling.models.logparabolaspectralmodel attribute)": [[240, "gammapy.modeling.models.LogParabolaSpectralModel.e_peak", false]], "earth_location_from_dict() (in module gammapy.utils.fits)": [[314, "gammapy.utils.fits.earth_location_from_dict", false]], "ebl_data_builtin (in module gammapy.modeling.models)": [[226, "gammapy.modeling.models.EBL_DATA_BUILTIN", false]], "eblabsorptionnormspectralmodel (class in gammapy.modeling.models)": [[225, "gammapy.modeling.models.EBLAbsorptionNormSpectralModel", false]], "ebreak (gammapy.modeling.models.brokenpowerlawspectralmodel attribute)": [[217, "gammapy.modeling.models.BrokenPowerLawSpectralModel.ebreak", false]], "ebreak (gammapy.modeling.models.smoothbrokenpowerlawspectralmodel attribute)": [[262, "gammapy.modeling.models.SmoothBrokenPowerLawSpectralModel.ebreak", false]], "ecut (gammapy.modeling.models.expcutoffpowerlaw3fglspectralmodel attribute)": [[227, "gammapy.modeling.models.ExpCutoffPowerLaw3FGLSpectralModel.ecut", false]], "ecut (gammapy.modeling.models.superexpcutoffpowerlaw3fglspectralmodel attribute)": [[265, "gammapy.modeling.models.SuperExpCutoffPowerLaw3FGLSpectralModel.ecut", false]], "edge_width (gammapy.modeling.models.diskspatialmodel attribute)": [[224, "gammapy.modeling.models.DiskSpatialModel.edge_width", false]], "edges (gammapy.maps.labelmapaxis attribute)": [[194, "gammapy.maps.LabelMapAxis.edges", false]], "edges (gammapy.maps.mapaxis attribute)": [[197, "gammapy.maps.MapAxis.edges", false]], "edges (gammapy.maps.timemapaxis attribute)": [[202, "gammapy.maps.TimeMapAxis.edges", false]], "edges_max (gammapy.maps.labelmapaxis attribute)": [[194, "gammapy.maps.LabelMapAxis.edges_max", false]], "edges_max (gammapy.maps.mapaxis attribute)": [[197, "gammapy.maps.MapAxis.edges_max", false]], "edges_max (gammapy.maps.timemapaxis attribute)": [[202, "gammapy.maps.TimeMapAxis.edges_max", false]], "edges_min (gammapy.maps.labelmapaxis attribute)": [[194, "gammapy.maps.LabelMapAxis.edges_min", false]], "edges_min (gammapy.maps.mapaxis attribute)": [[197, "gammapy.maps.MapAxis.edges_min", false]], "edges_min (gammapy.maps.timemapaxis attribute)": [[202, "gammapy.maps.TimeMapAxis.edges_min", false]], "edisp": [[573, "term-EDisp", true]], "edisp (gammapy.data.observation attribute)": [[88, "gammapy.data.Observation.edisp", false]], "edisp (gammapy.datasets.mapdataset attribute)": [[102, "gammapy.datasets.MapDataset.edisp", false]], "edisp (gammapy.datasets.mapdatasetonoff attribute)": [[105, "gammapy.datasets.MapDatasetOnOff.edisp", false]], "edisp (gammapy.datasets.spectrumdataset attribute)": [[109, "gammapy.datasets.SpectrumDataset.edisp", false]], "edisp (gammapy.datasets.spectrumdatasetonoff attribute)": [[110, "gammapy.datasets.SpectrumDatasetOnOff.edisp", false]], "edisp_map (gammapy.irf.edispkernelmap attribute)": [[150, "gammapy.irf.EDispKernelMap.edisp_map", false]], "edisp_map (gammapy.irf.edispmap attribute)": [[151, "gammapy.irf.EDispMap.edisp_map", false]], "edispkernel (class in gammapy.irf)": [[149, "gammapy.irf.EDispKernel", false]], "edispkernelmap (class in gammapy.irf)": [[150, "gammapy.irf.EDispKernelMap", false]], "edispmap (class in gammapy.irf)": [[151, "gammapy.irf.EDispMap", false]], "effectiveareatable2d (class in gammapy.irf)": [[152, "gammapy.irf.EffectiveAreaTable2D", false]], "eflux (gammapy.estimators.fluxmaps attribute)": [[122, "gammapy.estimators.FluxMaps.eflux", false]], "eflux (gammapy.estimators.fluxpoints attribute)": [[124, "gammapy.estimators.FluxPoints.eflux", false]], "eflux_err (gammapy.estimators.fluxmaps attribute)": [[122, "gammapy.estimators.FluxMaps.eflux_err", false]], "eflux_err (gammapy.estimators.fluxpoints attribute)": [[124, "gammapy.estimators.FluxPoints.eflux_err", false]], "eflux_errn (gammapy.estimators.fluxmaps attribute)": [[122, "gammapy.estimators.FluxMaps.eflux_errn", false]], "eflux_errn (gammapy.estimators.fluxpoints attribute)": [[124, "gammapy.estimators.FluxPoints.eflux_errn", false]], "eflux_errp (gammapy.estimators.fluxmaps attribute)": [[122, "gammapy.estimators.FluxMaps.eflux_errp", false]], "eflux_errp (gammapy.estimators.fluxpoints attribute)": [[124, "gammapy.estimators.FluxPoints.eflux_errp", false]], "eflux_ref (gammapy.estimators.fluxmaps attribute)": [[122, "gammapy.estimators.FluxMaps.eflux_ref", false]], "eflux_ref (gammapy.estimators.fluxpoints attribute)": [[124, "gammapy.estimators.FluxPoints.eflux_ref", false]], "eflux_ul (gammapy.estimators.fluxmaps attribute)": [[122, "gammapy.estimators.FluxMaps.eflux_ul", false]], "eflux_ul (gammapy.estimators.fluxpoints attribute)": [[124, "gammapy.estimators.FluxPoints.eflux_ul", false]], "einastoprofile (class in gammapy.astro.darkmatter)": [[21, "gammapy.astro.darkmatter.EinastoProfile", false]], "emax (gammapy.modeling.models.powerlaw2spectralmodel attribute)": [[250, "gammapy.modeling.models.PowerLaw2SpectralModel.emax", false]], "emin (gammapy.modeling.models.powerlaw2spectralmodel attribute)": [[250, "gammapy.modeling.models.PowerLaw2SpectralModel.emin", false]], "energy (gammapy.data.eventlist attribute)": [[83, "gammapy.data.EventList.energy", false]], "energy (gammapy.modeling.models.piecewisenormspectralmodel attribute)": [[248, "gammapy.modeling.models.PiecewiseNormSpectralModel.energy", false]], "energy_axes_are_aligned (gammapy.datasets.datasets attribute)": [[100, "gammapy.datasets.Datasets.energy_axes_are_aligned", false]], "energy_axis (gammapy.estimators.fluxmaps attribute)": [[122, "gammapy.estimators.FluxMaps.energy_axis", false]], "energy_axis (gammapy.estimators.fluxpoints attribute)": [[124, "gammapy.estimators.FluxPoints.energy_axis", false]], "energy_center (gammapy.modeling.models.templatenpredmodel attribute)": [[271, "gammapy.modeling.models.TemplateNPredModel.energy_center", false]], "energy_flux() (gammapy.astro.darkmatter.darkmatterannihilationspectralmodel method)": [[19, "gammapy.astro.darkmatter.DarkMatterAnnihilationSpectralModel.energy_flux", false]], "energy_flux() (gammapy.astro.darkmatter.darkmatterdecayspectralmodel method)": [[20, "gammapy.astro.darkmatter.DarkMatterDecaySpectralModel.energy_flux", false]], "energy_flux() (gammapy.astro.darkmatter.primaryflux method)": [[26, "gammapy.astro.darkmatter.PrimaryFlux.energy_flux", false]], "energy_flux() (gammapy.modeling.models.brokenpowerlawspectralmodel method)": [[217, "gammapy.modeling.models.BrokenPowerLawSpectralModel.energy_flux", false]], "energy_flux() (gammapy.modeling.models.compoundspectralmodel method)": [[218, "gammapy.modeling.models.CompoundSpectralModel.energy_flux", false]], "energy_flux() (gammapy.modeling.models.constantspectralmodel method)": [[221, "gammapy.modeling.models.ConstantSpectralModel.energy_flux", false]], "energy_flux() (gammapy.modeling.models.eblabsorptionnormspectralmodel method)": [[225, "gammapy.modeling.models.EBLAbsorptionNormSpectralModel.energy_flux", false]], "energy_flux() (gammapy.modeling.models.expcutoffpowerlaw3fglspectralmodel method)": [[227, "gammapy.modeling.models.ExpCutoffPowerLaw3FGLSpectralModel.energy_flux", false]], "energy_flux() (gammapy.modeling.models.expcutoffpowerlawnormspectralmodel method)": [[228, "gammapy.modeling.models.ExpCutoffPowerLawNormSpectralModel.energy_flux", false]], "energy_flux() (gammapy.modeling.models.expcutoffpowerlawspectralmodel method)": [[229, "gammapy.modeling.models.ExpCutoffPowerLawSpectralModel.energy_flux", false]], "energy_flux() (gammapy.modeling.models.gaussianspectralmodel method)": [[233, "gammapy.modeling.models.GaussianSpectralModel.energy_flux", false]], "energy_flux() (gammapy.modeling.models.logparabolanormspectralmodel method)": [[239, "gammapy.modeling.models.LogParabolaNormSpectralModel.energy_flux", false]], "energy_flux() (gammapy.modeling.models.logparabolaspectralmodel method)": [[240, "gammapy.modeling.models.LogParabolaSpectralModel.energy_flux", false]], "energy_flux() (gammapy.modeling.models.meyercrabspectralmodel method)": [[242, "gammapy.modeling.models.MeyerCrabSpectralModel.energy_flux", false]], "energy_flux() (gammapy.modeling.models.naimaspectralmodel method)": [[246, "gammapy.modeling.models.NaimaSpectralModel.energy_flux", false]], "energy_flux() (gammapy.modeling.models.piecewisenormspectralmodel method)": [[248, "gammapy.modeling.models.PiecewiseNormSpectralModel.energy_flux", false]], "energy_flux() (gammapy.modeling.models.powerlaw2spectralmodel method)": [[250, "gammapy.modeling.models.PowerLaw2SpectralModel.energy_flux", false]], "energy_flux() (gammapy.modeling.models.powerlawnormspectralmodel method)": [[251, "gammapy.modeling.models.PowerLawNormSpectralModel.energy_flux", false]], "energy_flux() (gammapy.modeling.models.powerlawspectralmodel method)": [[252, "gammapy.modeling.models.PowerLawSpectralModel.energy_flux", false]], "energy_flux() (gammapy.modeling.models.scalespectralmodel method)": [[257, "gammapy.modeling.models.ScaleSpectralModel.energy_flux", false]], "energy_flux() (gammapy.modeling.models.smoothbrokenpowerlawspectralmodel method)": [[262, "gammapy.modeling.models.SmoothBrokenPowerLawSpectralModel.energy_flux", false]], "energy_flux() (gammapy.modeling.models.spectralmodel method)": [[264, "gammapy.modeling.models.SpectralModel.energy_flux", false]], "energy_flux() (gammapy.modeling.models.superexpcutoffpowerlaw3fglspectralmodel method)": [[265, "gammapy.modeling.models.SuperExpCutoffPowerLaw3FGLSpectralModel.energy_flux", false]], "energy_flux() (gammapy.modeling.models.superexpcutoffpowerlaw4fgldr3spectralmodel method)": [[266, "gammapy.modeling.models.SuperExpCutoffPowerLaw4FGLDR3SpectralModel.energy_flux", false]], "energy_flux() (gammapy.modeling.models.superexpcutoffpowerlaw4fglspectralmodel method)": [[267, "gammapy.modeling.models.SuperExpCutoffPowerLaw4FGLSpectralModel.energy_flux", false]], "energy_flux() (gammapy.modeling.models.templatendspectralmodel method)": [[270, "gammapy.modeling.models.TemplateNDSpectralModel.energy_flux", false]], "energy_flux() (gammapy.modeling.models.templatespectralmodel method)": [[274, "gammapy.modeling.models.TemplateSpectralModel.energy_flux", false]], "energy_flux_error() (gammapy.astro.darkmatter.darkmatterannihilationspectralmodel method)": [[19, "gammapy.astro.darkmatter.DarkMatterAnnihilationSpectralModel.energy_flux_error", false]], "energy_flux_error() (gammapy.astro.darkmatter.darkmatterdecayspectralmodel method)": [[20, "gammapy.astro.darkmatter.DarkMatterDecaySpectralModel.energy_flux_error", false]], "energy_flux_error() (gammapy.astro.darkmatter.primaryflux method)": [[26, "gammapy.astro.darkmatter.PrimaryFlux.energy_flux_error", false]], "energy_flux_error() (gammapy.modeling.models.brokenpowerlawspectralmodel method)": [[217, "gammapy.modeling.models.BrokenPowerLawSpectralModel.energy_flux_error", false]], "energy_flux_error() (gammapy.modeling.models.compoundspectralmodel method)": [[218, "gammapy.modeling.models.CompoundSpectralModel.energy_flux_error", false]], "energy_flux_error() (gammapy.modeling.models.constantspectralmodel method)": [[221, "gammapy.modeling.models.ConstantSpectralModel.energy_flux_error", false]], "energy_flux_error() (gammapy.modeling.models.eblabsorptionnormspectralmodel method)": [[225, "gammapy.modeling.models.EBLAbsorptionNormSpectralModel.energy_flux_error", false]], "energy_flux_error() (gammapy.modeling.models.expcutoffpowerlaw3fglspectralmodel method)": [[227, "gammapy.modeling.models.ExpCutoffPowerLaw3FGLSpectralModel.energy_flux_error", false]], "energy_flux_error() (gammapy.modeling.models.expcutoffpowerlawnormspectralmodel method)": [[228, "gammapy.modeling.models.ExpCutoffPowerLawNormSpectralModel.energy_flux_error", false]], "energy_flux_error() (gammapy.modeling.models.expcutoffpowerlawspectralmodel method)": [[229, "gammapy.modeling.models.ExpCutoffPowerLawSpectralModel.energy_flux_error", false]], "energy_flux_error() (gammapy.modeling.models.gaussianspectralmodel method)": [[233, "gammapy.modeling.models.GaussianSpectralModel.energy_flux_error", false]], "energy_flux_error() (gammapy.modeling.models.logparabolanormspectralmodel method)": [[239, "gammapy.modeling.models.LogParabolaNormSpectralModel.energy_flux_error", false]], "energy_flux_error() (gammapy.modeling.models.logparabolaspectralmodel method)": [[240, "gammapy.modeling.models.LogParabolaSpectralModel.energy_flux_error", false]], "energy_flux_error() (gammapy.modeling.models.meyercrabspectralmodel method)": [[242, "gammapy.modeling.models.MeyerCrabSpectralModel.energy_flux_error", false]], "energy_flux_error() (gammapy.modeling.models.naimaspectralmodel method)": [[246, "gammapy.modeling.models.NaimaSpectralModel.energy_flux_error", false]], "energy_flux_error() (gammapy.modeling.models.piecewisenormspectralmodel method)": [[248, "gammapy.modeling.models.PiecewiseNormSpectralModel.energy_flux_error", false]], "energy_flux_error() (gammapy.modeling.models.powerlaw2spectralmodel method)": [[250, "gammapy.modeling.models.PowerLaw2SpectralModel.energy_flux_error", false]], "energy_flux_error() (gammapy.modeling.models.powerlawnormspectralmodel method)": [[251, "gammapy.modeling.models.PowerLawNormSpectralModel.energy_flux_error", false]], "energy_flux_error() (gammapy.modeling.models.powerlawspectralmodel method)": [[252, "gammapy.modeling.models.PowerLawSpectralModel.energy_flux_error", false]], "energy_flux_error() (gammapy.modeling.models.scalespectralmodel method)": [[257, "gammapy.modeling.models.ScaleSpectralModel.energy_flux_error", false]], "energy_flux_error() (gammapy.modeling.models.smoothbrokenpowerlawspectralmodel method)": [[262, "gammapy.modeling.models.SmoothBrokenPowerLawSpectralModel.energy_flux_error", false]], "energy_flux_error() (gammapy.modeling.models.spectralmodel method)": [[264, "gammapy.modeling.models.SpectralModel.energy_flux_error", false]], "energy_flux_error() (gammapy.modeling.models.superexpcutoffpowerlaw3fglspectralmodel method)": [[265, "gammapy.modeling.models.SuperExpCutoffPowerLaw3FGLSpectralModel.energy_flux_error", false]], "energy_flux_error() (gammapy.modeling.models.superexpcutoffpowerlaw4fgldr3spectralmodel method)": [[266, "gammapy.modeling.models.SuperExpCutoffPowerLaw4FGLDR3SpectralModel.energy_flux_error", false]], "energy_flux_error() (gammapy.modeling.models.superexpcutoffpowerlaw4fglspectralmodel method)": [[267, "gammapy.modeling.models.SuperExpCutoffPowerLaw4FGLSpectralModel.energy_flux_error", false]], "energy_flux_error() (gammapy.modeling.models.templatendspectralmodel method)": [[270, "gammapy.modeling.models.TemplateNDSpectralModel.energy_flux_error", false]], "energy_flux_error() (gammapy.modeling.models.templatespectralmodel method)": [[274, "gammapy.modeling.models.TemplateSpectralModel.energy_flux_error", false]], "energy_integrated() (gammapy.astro.source.pulsar method)": [[51, "gammapy.astro.source.Pulsar.energy_integrated", false]], "energy_mask() (gammapy.maps.geom method)": [[190, "gammapy.maps.Geom.energy_mask", false]], "energy_mask() (gammapy.maps.hpxgeom method)": [[191, "gammapy.maps.HpxGeom.energy_mask", false]], "energy_mask() (gammapy.maps.regiongeom method)": [[200, "gammapy.maps.RegionGeom.energy_mask", false]], "energy_mask() (gammapy.maps.wcsgeom method)": [[203, "gammapy.maps.WcsGeom.energy_mask", false]], "energy_max (gammapy.estimators.fluxmaps attribute)": [[122, "gammapy.estimators.FluxMaps.energy_max", false]], "energy_max (gammapy.estimators.fluxpoints attribute)": [[124, "gammapy.estimators.FluxPoints.energy_max", false]], "energy_min (gammapy.estimators.fluxmaps attribute)": [[122, "gammapy.estimators.FluxMaps.energy_min", false]], "energy_min (gammapy.estimators.fluxpoints attribute)": [[124, "gammapy.estimators.FluxPoints.energy_min", false]], "energy_name (gammapy.irf.psfmap attribute)": [[162, "gammapy.irf.PSFMap.energy_name", false]], "energy_name (gammapy.irf.recopsfmap attribute)": [[165, "gammapy.irf.RecoPSFMap.energy_name", false]], "energy_range (gammapy.catalog.sourcecatalogobject2fhl attribute)": [[71, "gammapy.catalog.SourceCatalogObject2FHL.energy_range", false]], "energy_range (gammapy.catalog.sourcecatalogobject3fgl attribute)": [[74, "gammapy.catalog.SourceCatalogObject3FGL.energy_range", false]], "energy_range (gammapy.catalog.sourcecatalogobject3fhl attribute)": [[75, "gammapy.catalog.SourceCatalogObject3FHL.energy_range", false]], "energy_range (gammapy.catalog.sourcecatalogobjecthgps attribute)": [[80, "gammapy.catalog.SourceCatalogObjectHGPS.energy_range", false]], "energy_range (gammapy.datasets.mapdataset attribute)": [[102, "gammapy.datasets.MapDataset.energy_range", false]], "energy_range (gammapy.datasets.mapdatasetonoff attribute)": [[105, "gammapy.datasets.MapDatasetOnOff.energy_range", false]], "energy_range (gammapy.datasets.spectrumdataset attribute)": [[109, "gammapy.datasets.SpectrumDataset.energy_range", false]], "energy_range (gammapy.datasets.spectrumdatasetonoff attribute)": [[110, "gammapy.datasets.SpectrumDatasetOnOff.energy_range", false]], "energy_range_fit (gammapy.datasets.mapdataset attribute)": [[102, "gammapy.datasets.MapDataset.energy_range_fit", false]], "energy_range_fit (gammapy.datasets.mapdatasetonoff attribute)": [[105, "gammapy.datasets.MapDatasetOnOff.energy_range_fit", false]], "energy_range_fit (gammapy.datasets.spectrumdataset attribute)": [[109, "gammapy.datasets.SpectrumDataset.energy_range_fit", false]], "energy_range_fit (gammapy.datasets.spectrumdatasetonoff attribute)": [[110, "gammapy.datasets.SpectrumDatasetOnOff.energy_range_fit", false]], "energy_range_safe (gammapy.datasets.mapdataset attribute)": [[102, "gammapy.datasets.MapDataset.energy_range_safe", false]], "energy_range_safe (gammapy.datasets.mapdatasetonoff attribute)": [[105, "gammapy.datasets.MapDatasetOnOff.energy_range_safe", false]], "energy_range_safe (gammapy.datasets.spectrumdataset attribute)": [[109, "gammapy.datasets.SpectrumDataset.energy_range_safe", false]], "energy_range_safe (gammapy.datasets.spectrumdatasetonoff attribute)": [[110, "gammapy.datasets.SpectrumDatasetOnOff.energy_range_safe", false]], "energy_range_total (gammapy.datasets.mapdataset attribute)": [[102, "gammapy.datasets.MapDataset.energy_range_total", false]], "energy_range_total (gammapy.datasets.mapdatasetonoff attribute)": [[105, "gammapy.datasets.MapDatasetOnOff.energy_range_total", false]], "energy_range_total (gammapy.datasets.spectrumdataset attribute)": [[109, "gammapy.datasets.SpectrumDataset.energy_range_total", false]], "energy_range_total (gammapy.datasets.spectrumdatasetonoff attribute)": [[110, "gammapy.datasets.SpectrumDatasetOnOff.energy_range_total", false]], "energy_ranges (gammapy.datasets.datasets attribute)": [[100, "gammapy.datasets.Datasets.energy_ranges", false]], "energy_ref (gammapy.estimators.fluxmaps attribute)": [[122, "gammapy.estimators.FluxMaps.energy_ref", false]], "energy_ref (gammapy.estimators.fluxpoints attribute)": [[124, "gammapy.estimators.FluxPoints.energy_ref", false]], "energydependentmorphologyestimator (class in gammapy.estimators)": [[119, "gammapy.estimators.EnergyDependentMorphologyEstimator", false]], "energydependentmultigausspsf (class in gammapy.irf)": [[153, "gammapy.irf.EnergyDependentMultiGaussPSF", false]], "energydispersion2d (class in gammapy.irf)": [[154, "gammapy.irf.EnergyDispersion2D", false]], "eqcons (gammapy.astro.population.casebattacharya1998 attribute)": [[28, "gammapy.astro.population.CaseBattacharya1998.eqcons", false]], "eqcons (gammapy.astro.population.exponential attribute)": [[29, "gammapy.astro.population.Exponential.eqcons", false]], "eqcons (gammapy.astro.population.faucherkaspi2006 attribute)": [[30, "gammapy.astro.population.FaucherKaspi2006.eqcons", false]], "eqcons (gammapy.astro.population.faucherkaspi2006velocitybimodal attribute)": [[31, "gammapy.astro.population.FaucherKaspi2006VelocityBimodal.eqcons", false]], "eqcons (gammapy.astro.population.faucherkaspi2006velocitymaxwellian attribute)": [[32, "gammapy.astro.population.FaucherKaspi2006VelocityMaxwellian.eqcons", false]], "eqcons (gammapy.astro.population.lorimer2006 attribute)": [[35, "gammapy.astro.population.Lorimer2006.eqcons", false]], "eqcons (gammapy.astro.population.paczynski1990 attribute)": [[36, "gammapy.astro.population.Paczynski1990.eqcons", false]], "eqcons (gammapy.astro.population.paczynski1990velocity attribute)": [[37, "gammapy.astro.population.Paczynski1990Velocity.eqcons", false]], "eqcons (gammapy.astro.population.yusifovkucuk2004 attribute)": [[39, "gammapy.astro.population.YusifovKucuk2004.eqcons", false]], "eqcons (gammapy.astro.population.yusifovkucuk2004b attribute)": [[40, "gammapy.astro.population.YusifovKucuk2004B.eqcons", false]], "error (gammapy.modeling.parameter attribute)": [[213, "gammapy.modeling.Parameter.error", false]], "error (gammapy.modeling.priorparameter attribute)": [[215, "gammapy.modeling.PriorParameter.error", false]], "error (gammapy.stats.cashcountsstatistic attribute)": [[285, "gammapy.stats.CashCountsStatistic.error", false]], "error (gammapy.stats.wstatcountsstatistic attribute)": [[287, "gammapy.stats.WStatCountsStatistic.error", false]], "error_callback() (gammapy.makers.datasetsmaker method)": [[168, "gammapy.makers.DatasetsMaker.error_callback", false]], "estimate_best_fit() (gammapy.estimators.fluxpointsestimator method)": [[125, "gammapy.estimators.FluxPointsEstimator.estimate_best_fit", false]], "estimate_best_fit() (gammapy.estimators.fluxprofileestimator method)": [[126, "gammapy.estimators.FluxProfileEstimator.estimate_best_fit", false]], "estimate_best_fit() (gammapy.estimators.lightcurveestimator method)": [[129, "gammapy.estimators.LightCurveEstimator.estimate_best_fit", false]], "estimate_best_fit() (gammapy.estimators.parameterestimator method)": [[130, "gammapy.estimators.ParameterEstimator.estimate_best_fit", false]], "estimate_counts() (gammapy.estimators.fluxpointsestimator static method)": [[125, "gammapy.estimators.FluxPointsEstimator.estimate_counts", false]], "estimate_counts() (gammapy.estimators.fluxprofileestimator static method)": [[126, "gammapy.estimators.FluxProfileEstimator.estimate_counts", false]], "estimate_counts() (gammapy.estimators.lightcurveestimator static method)": [[129, "gammapy.estimators.LightCurveEstimator.estimate_counts", false]], "estimate_counts() (gammapy.estimators.parameterestimator static method)": [[130, "gammapy.estimators.ParameterEstimator.estimate_counts", false]], "estimate_energy_dependence() (gammapy.estimators.energydependentmorphologyestimator method)": [[119, "gammapy.estimators.EnergyDependentMorphologyEstimator.estimate_energy_dependence", false]], "estimate_errn_errp() (gammapy.estimators.fluxpointsestimator method)": [[125, "gammapy.estimators.FluxPointsEstimator.estimate_errn_errp", false]], "estimate_errn_errp() (gammapy.estimators.fluxprofileestimator method)": [[126, "gammapy.estimators.FluxProfileEstimator.estimate_errn_errp", false]], "estimate_errn_errp() (gammapy.estimators.lightcurveestimator method)": [[129, "gammapy.estimators.LightCurveEstimator.estimate_errn_errp", false]], "estimate_errn_errp() (gammapy.estimators.parameterestimator method)": [[130, "gammapy.estimators.ParameterEstimator.estimate_errn_errp", false]], "estimate_excess_map() (gammapy.estimators.excessmapestimator method)": [[121, "gammapy.estimators.ExcessMapEstimator.estimate_excess_map", false]], "estimate_exposure_reco_energy() (gammapy.estimators.excessmapestimator method)": [[121, "gammapy.estimators.ExcessMapEstimator.estimate_exposure_reco_energy", false]], "estimate_exposure_reco_energy() (in module gammapy.estimators.utils)": [[139, "gammapy.estimators.utils.estimate_exposure_reco_energy", false]], "estimate_fit_input_maps() (gammapy.estimators.tsmapestimator method)": [[132, "gammapy.estimators.TSMapEstimator.estimate_fit_input_maps", false]], "estimate_flux_default() (gammapy.estimators.tsmapestimator method)": [[132, "gammapy.estimators.TSMapEstimator.estimate_flux_default", false]], "estimate_flux_map() (gammapy.estimators.tsmapestimator method)": [[132, "gammapy.estimators.TSMapEstimator.estimate_flux_map", false]], "estimate_flux_point() (gammapy.estimators.fluxpointsestimator method)": [[125, "gammapy.estimators.FluxPointsEstimator.estimate_flux_point", false]], "estimate_flux_point() (gammapy.estimators.fluxprofileestimator method)": [[126, "gammapy.estimators.FluxProfileEstimator.estimate_flux_point", false]], "estimate_flux_point() (gammapy.estimators.lightcurveestimator method)": [[129, "gammapy.estimators.LightCurveEstimator.estimate_flux_point", false]], "estimate_kernel() (gammapy.estimators.excessmapestimator method)": [[121, "gammapy.estimators.ExcessMapEstimator.estimate_kernel", false]], "estimate_kernel() (gammapy.estimators.tsmapestimator method)": [[132, "gammapy.estimators.TSMapEstimator.estimate_kernel", false]], "estimate_maps() (gammapy.estimators.asmoothmapestimator method)": [[117, "gammapy.estimators.ASmoothMapEstimator.estimate_maps", false]], "estimate_mask_default() (gammapy.estimators.excessmapestimator static method)": [[121, "gammapy.estimators.ExcessMapEstimator.estimate_mask_default", false]], "estimate_mask_default() (gammapy.estimators.tsmapestimator static method)": [[132, "gammapy.estimators.TSMapEstimator.estimate_mask_default", false]], "estimate_min_e2dnde() (gammapy.estimators.sensitivityestimator method)": [[131, "gammapy.estimators.SensitivityEstimator.estimate_min_e2dnde", false]], "estimate_min_excess() (gammapy.estimators.sensitivityestimator method)": [[131, "gammapy.estimators.SensitivityEstimator.estimate_min_excess", false]], "estimate_npred() (gammapy.estimators.fluxpointsestimator static method)": [[125, "gammapy.estimators.FluxPointsEstimator.estimate_npred", false]], "estimate_npred() (gammapy.estimators.fluxprofileestimator static method)": [[126, "gammapy.estimators.FluxProfileEstimator.estimate_npred", false]], "estimate_npred() (gammapy.estimators.lightcurveestimator static method)": [[129, "gammapy.estimators.LightCurveEstimator.estimate_npred", false]], "estimate_npred() (gammapy.estimators.parameterestimator static method)": [[130, "gammapy.estimators.ParameterEstimator.estimate_npred", false]], "estimate_npred_excess() (gammapy.estimators.fluxpointsestimator method)": [[125, "gammapy.estimators.FluxPointsEstimator.estimate_npred_excess", false]], "estimate_npred_excess() (gammapy.estimators.fluxprofileestimator method)": [[126, "gammapy.estimators.FluxProfileEstimator.estimate_npred_excess", false]], "estimate_npred_excess() (gammapy.estimators.lightcurveestimator method)": [[129, "gammapy.estimators.LightCurveEstimator.estimate_npred_excess", false]], "estimate_pad_width() (gammapy.estimators.tsmapestimator method)": [[132, "gammapy.estimators.TSMapEstimator.estimate_pad_width", false]], "estimate_scan() (gammapy.estimators.fluxpointsestimator method)": [[125, "gammapy.estimators.FluxPointsEstimator.estimate_scan", false]], "estimate_scan() (gammapy.estimators.fluxprofileestimator method)": [[126, "gammapy.estimators.FluxProfileEstimator.estimate_scan", false]], "estimate_scan() (gammapy.estimators.lightcurveestimator method)": [[129, "gammapy.estimators.LightCurveEstimator.estimate_scan", false]], "estimate_scan() (gammapy.estimators.parameterestimator method)": [[130, "gammapy.estimators.ParameterEstimator.estimate_scan", false]], "estimate_time_bin_flux() (gammapy.estimators.lightcurveestimator method)": [[129, "gammapy.estimators.LightCurveEstimator.estimate_time_bin_flux", false]], "estimate_ts() (gammapy.estimators.fluxpointsestimator method)": [[125, "gammapy.estimators.FluxPointsEstimator.estimate_ts", false]], "estimate_ts() (gammapy.estimators.fluxprofileestimator method)": [[126, "gammapy.estimators.FluxProfileEstimator.estimate_ts", false]], "estimate_ts() (gammapy.estimators.lightcurveestimator method)": [[129, "gammapy.estimators.LightCurveEstimator.estimate_ts", false]], "estimate_ts() (gammapy.estimators.parameterestimator method)": [[130, "gammapy.estimators.ParameterEstimator.estimate_ts", false]], "estimate_ul() (gammapy.estimators.fluxpointsestimator method)": [[125, "gammapy.estimators.FluxPointsEstimator.estimate_ul", false]], "estimate_ul() (gammapy.estimators.fluxprofileestimator method)": [[126, "gammapy.estimators.FluxProfileEstimator.estimate_ul", false]], "estimate_ul() (gammapy.estimators.lightcurveestimator method)": [[129, "gammapy.estimators.LightCurveEstimator.estimate_ul", false]], "estimate_ul() (gammapy.estimators.parameterestimator method)": [[130, "gammapy.estimators.ParameterEstimator.estimate_ul", false]], "estimator": [[573, "term-Estimator", true]], "estimator (class in gammapy.estimators)": [[120, "gammapy.estimators.Estimator", false]], "estimator_registry (in module gammapy.estimators)": [[118, "gammapy.estimators.ESTIMATOR_REGISTRY", false]], "eta (gammapy.modeling.models.generalizedgaussianspatialmodel attribute)": [[235, "gammapy.modeling.models.GeneralizedGaussianSpatialModel.eta", false]], "eta (gammapy.modeling.models.generalizedgaussiantemporalmodel attribute)": [[236, "gammapy.modeling.models.GeneralizedGaussianTemporalModel.eta", false]], "eta (gammapy.modeling.models.shell2spatialmodel attribute)": [[258, "gammapy.modeling.models.Shell2SpatialModel.eta", false]], "evaluate() (gammapy.astro.darkmatter.burkertprofile static method)": [[17, "gammapy.astro.darkmatter.BurkertProfile.evaluate", false]], "evaluate() (gammapy.astro.darkmatter.darkmatterannihilationspectralmodel method)": [[19, "gammapy.astro.darkmatter.DarkMatterAnnihilationSpectralModel.evaluate", false]], "evaluate() (gammapy.astro.darkmatter.darkmatterdecayspectralmodel method)": [[20, "gammapy.astro.darkmatter.DarkMatterDecaySpectralModel.evaluate", false]], "evaluate() (gammapy.astro.darkmatter.einastoprofile static method)": [[21, "gammapy.astro.darkmatter.EinastoProfile.evaluate", false]], "evaluate() (gammapy.astro.darkmatter.isothermalprofile static method)": [[22, "gammapy.astro.darkmatter.IsothermalProfile.evaluate", false]], "evaluate() (gammapy.astro.darkmatter.mooreprofile static method)": [[24, "gammapy.astro.darkmatter.MooreProfile.evaluate", false]], "evaluate() (gammapy.astro.darkmatter.nfwprofile static method)": [[25, "gammapy.astro.darkmatter.NFWProfile.evaluate", false]], "evaluate() (gammapy.astro.darkmatter.primaryflux method)": [[26, "gammapy.astro.darkmatter.PrimaryFlux.evaluate", false]], "evaluate() (gammapy.astro.darkmatter.zhaoprofile static method)": [[27, "gammapy.astro.darkmatter.ZhaoProfile.evaluate", false]], "evaluate() (gammapy.astro.population.casebattacharya1998 static method)": [[28, "gammapy.astro.population.CaseBattacharya1998.evaluate", false]], "evaluate() (gammapy.astro.population.exponential static method)": [[29, "gammapy.astro.population.Exponential.evaluate", false]], "evaluate() (gammapy.astro.population.faucherkaspi2006 static method)": [[30, "gammapy.astro.population.FaucherKaspi2006.evaluate", false]], "evaluate() (gammapy.astro.population.faucherkaspi2006velocitybimodal static method)": [[31, "gammapy.astro.population.FaucherKaspi2006VelocityBimodal.evaluate", false]], "evaluate() (gammapy.astro.population.faucherkaspi2006velocitymaxwellian static method)": [[32, "gammapy.astro.population.FaucherKaspi2006VelocityMaxwellian.evaluate", false]], "evaluate() (gammapy.astro.population.lorimer2006 static method)": [[35, "gammapy.astro.population.Lorimer2006.evaluate", false]], "evaluate() (gammapy.astro.population.paczynski1990 static method)": [[36, "gammapy.astro.population.Paczynski1990.evaluate", false]], "evaluate() (gammapy.astro.population.paczynski1990velocity static method)": [[37, "gammapy.astro.population.Paczynski1990Velocity.evaluate", false]], "evaluate() (gammapy.astro.population.yusifovkucuk2004 static method)": [[39, "gammapy.astro.population.YusifovKucuk2004.evaluate", false]], "evaluate() (gammapy.astro.population.yusifovkucuk2004b static method)": [[40, "gammapy.astro.population.YusifovKucuk2004B.evaluate", false]], "evaluate() (gammapy.catalog.sourcecataloglargescalehgps method)": [[68, "gammapy.catalog.SourceCatalogLargeScaleHGPS.evaluate", false]], "evaluate() (gammapy.irf.background2d method)": [[146, "gammapy.irf.Background2D.evaluate", false]], "evaluate() (gammapy.irf.background3d method)": [[147, "gammapy.irf.Background3D.evaluate", false]], "evaluate() (gammapy.irf.backgroundirf method)": [[148, "gammapy.irf.BackgroundIRF.evaluate", false]], "evaluate() (gammapy.irf.edispkernel method)": [[149, "gammapy.irf.EDispKernel.evaluate", false]], "evaluate() (gammapy.irf.effectiveareatable2d method)": [[152, "gammapy.irf.EffectiveAreaTable2D.evaluate", false]], "evaluate() (gammapy.irf.energydependentmultigausspsf method)": [[153, "gammapy.irf.EnergyDependentMultiGaussPSF.evaluate", false]], "evaluate() (gammapy.irf.energydispersion2d method)": [[154, "gammapy.irf.EnergyDispersion2D.evaluate", false]], "evaluate() (gammapy.irf.irf method)": [[156, "gammapy.irf.IRF.evaluate", false]], "evaluate() (gammapy.irf.parametricpsf method)": [[163, "gammapy.irf.ParametricPSF.evaluate", false]], "evaluate() (gammapy.irf.psf3d method)": [[159, "gammapy.irf.PSF3D.evaluate", false]], "evaluate() (gammapy.irf.psfking method)": [[161, "gammapy.irf.PSFKing.evaluate", false]], "evaluate() (gammapy.irf.radmax2d method)": [[164, "gammapy.irf.RadMax2D.evaluate", false]], "evaluate() (gammapy.modeling.models.brokenpowerlawspectralmodel static method)": [[217, "gammapy.modeling.models.BrokenPowerLawSpectralModel.evaluate", false]], "evaluate() (gammapy.modeling.models.compoundspectralmodel method)": [[218, "gammapy.modeling.models.CompoundSpectralModel.evaluate", false]], "evaluate() (gammapy.modeling.models.constantfluxspatialmodel static method)": [[219, "gammapy.modeling.models.ConstantFluxSpatialModel.evaluate", false]], "evaluate() (gammapy.modeling.models.constantspatialmodel static method)": [[220, "gammapy.modeling.models.ConstantSpatialModel.evaluate", false]], "evaluate() (gammapy.modeling.models.constantspectralmodel static method)": [[221, "gammapy.modeling.models.ConstantSpectralModel.evaluate", false]], "evaluate() (gammapy.modeling.models.constanttemporalmodel static method)": [[222, "gammapy.modeling.models.ConstantTemporalModel.evaluate", false]], "evaluate() (gammapy.modeling.models.diskspatialmodel static method)": [[224, "gammapy.modeling.models.DiskSpatialModel.evaluate", false]], "evaluate() (gammapy.modeling.models.eblabsorptionnormspectralmodel method)": [[225, "gammapy.modeling.models.EBLAbsorptionNormSpectralModel.evaluate", false]], "evaluate() (gammapy.modeling.models.expcutoffpowerlaw3fglspectralmodel static method)": [[227, "gammapy.modeling.models.ExpCutoffPowerLaw3FGLSpectralModel.evaluate", false]], "evaluate() (gammapy.modeling.models.expcutoffpowerlawnormspectralmodel static method)": [[228, "gammapy.modeling.models.ExpCutoffPowerLawNormSpectralModel.evaluate", false]], "evaluate() (gammapy.modeling.models.expcutoffpowerlawspectralmodel static method)": [[229, "gammapy.modeling.models.ExpCutoffPowerLawSpectralModel.evaluate", false]], "evaluate() (gammapy.modeling.models.expdecaytemporalmodel static method)": [[230, "gammapy.modeling.models.ExpDecayTemporalModel.evaluate", false]], "evaluate() (gammapy.modeling.models.fovbackgroundmodel method)": [[231, "gammapy.modeling.models.FoVBackgroundModel.evaluate", false]], "evaluate() (gammapy.modeling.models.gaussianspatialmodel static method)": [[232, "gammapy.modeling.models.GaussianSpatialModel.evaluate", false]], "evaluate() (gammapy.modeling.models.gaussianspectralmodel static method)": [[233, "gammapy.modeling.models.GaussianSpectralModel.evaluate", false]], "evaluate() (gammapy.modeling.models.gaussiantemporalmodel static method)": [[234, "gammapy.modeling.models.GaussianTemporalModel.evaluate", false]], "evaluate() (gammapy.modeling.models.generalizedgaussianspatialmodel static method)": [[235, "gammapy.modeling.models.GeneralizedGaussianSpatialModel.evaluate", false]], "evaluate() (gammapy.modeling.models.generalizedgaussiantemporalmodel static method)": [[236, "gammapy.modeling.models.GeneralizedGaussianTemporalModel.evaluate", false]], "evaluate() (gammapy.modeling.models.lightcurvetemplatetemporalmodel method)": [[237, "gammapy.modeling.models.LightCurveTemplateTemporalModel.evaluate", false]], "evaluate() (gammapy.modeling.models.lineartemporalmodel static method)": [[238, "gammapy.modeling.models.LinearTemporalModel.evaluate", false]], "evaluate() (gammapy.modeling.models.logparabolanormspectralmodel static method)": [[239, "gammapy.modeling.models.LogParabolaNormSpectralModel.evaluate", false]], "evaluate() (gammapy.modeling.models.logparabolaspectralmodel static method)": [[240, "gammapy.modeling.models.LogParabolaSpectralModel.evaluate", false]], "evaluate() (gammapy.modeling.models.meyercrabspectralmodel static method)": [[242, "gammapy.modeling.models.MeyerCrabSpectralModel.evaluate", false]], "evaluate() (gammapy.modeling.models.naimaspectralmodel method)": [[246, "gammapy.modeling.models.NaimaSpectralModel.evaluate", false]], "evaluate() (gammapy.modeling.models.piecewisenormspatialmodel method)": [[247, "gammapy.modeling.models.PiecewiseNormSpatialModel.evaluate", false]], "evaluate() (gammapy.modeling.models.piecewisenormspectralmodel method)": [[248, "gammapy.modeling.models.PiecewiseNormSpectralModel.evaluate", false]], "evaluate() (gammapy.modeling.models.powerlaw2spectralmodel static method)": [[250, "gammapy.modeling.models.PowerLaw2SpectralModel.evaluate", false]], "evaluate() (gammapy.modeling.models.powerlawnormspectralmodel static method)": [[251, "gammapy.modeling.models.PowerLawNormSpectralModel.evaluate", false]], "evaluate() (gammapy.modeling.models.powerlawspectralmodel static method)": [[252, "gammapy.modeling.models.PowerLawSpectralModel.evaluate", false]], "evaluate() (gammapy.modeling.models.powerlawtemporalmodel static method)": [[253, "gammapy.modeling.models.PowerLawTemporalModel.evaluate", false]], "evaluate() (gammapy.modeling.models.scalespectralmodel method)": [[257, "gammapy.modeling.models.ScaleSpectralModel.evaluate", false]], "evaluate() (gammapy.modeling.models.shell2spatialmodel static method)": [[258, "gammapy.modeling.models.Shell2SpatialModel.evaluate", false]], "evaluate() (gammapy.modeling.models.shellspatialmodel static method)": [[259, "gammapy.modeling.models.ShellSpatialModel.evaluate", false]], "evaluate() (gammapy.modeling.models.sinetemporalmodel static method)": [[260, "gammapy.modeling.models.SineTemporalModel.evaluate", false]], "evaluate() (gammapy.modeling.models.skymodel method)": [[261, "gammapy.modeling.models.SkyModel.evaluate", false]], "evaluate() (gammapy.modeling.models.smoothbrokenpowerlawspectralmodel static method)": [[262, "gammapy.modeling.models.SmoothBrokenPowerLawSpectralModel.evaluate", false]], "evaluate() (gammapy.modeling.models.superexpcutoffpowerlaw3fglspectralmodel static method)": [[265, "gammapy.modeling.models.SuperExpCutoffPowerLaw3FGLSpectralModel.evaluate", false]], "evaluate() (gammapy.modeling.models.superexpcutoffpowerlaw4fgldr3spectralmodel static method)": [[266, "gammapy.modeling.models.SuperExpCutoffPowerLaw4FGLDR3SpectralModel.evaluate", false]], "evaluate() (gammapy.modeling.models.superexpcutoffpowerlaw4fglspectralmodel static method)": [[267, "gammapy.modeling.models.SuperExpCutoffPowerLaw4FGLSpectralModel.evaluate", false]], "evaluate() (gammapy.modeling.models.templatendspatialmodel method)": [[269, "gammapy.modeling.models.TemplateNDSpatialModel.evaluate", false]], "evaluate() (gammapy.modeling.models.templatendspectralmodel method)": [[270, "gammapy.modeling.models.TemplateNDSpectralModel.evaluate", false]], "evaluate() (gammapy.modeling.models.templatenpredmodel method)": [[271, "gammapy.modeling.models.TemplateNPredModel.evaluate", false]], "evaluate() (gammapy.modeling.models.templatephasecurvetemporalmodel method)": [[272, "gammapy.modeling.models.TemplatePhaseCurveTemporalModel.evaluate", false]], "evaluate() (gammapy.modeling.models.templatespatialmodel method)": [[273, "gammapy.modeling.models.TemplateSpatialModel.evaluate", false]], "evaluate() (gammapy.modeling.models.templatespectralmodel method)": [[274, "gammapy.modeling.models.TemplateSpectralModel.evaluate", false]], "evaluate_containment() (gammapy.irf.energydependentmultigausspsf static method)": [[153, "gammapy.irf.EnergyDependentMultiGaussPSF.evaluate_containment", false]], "evaluate_containment() (gammapy.irf.parametricpsf method)": [[163, "gammapy.irf.ParametricPSF.evaluate_containment", false]], "evaluate_containment() (gammapy.irf.psfking static method)": [[161, "gammapy.irf.PSFKing.evaluate_containment", false]], "evaluate_direct() (gammapy.irf.energydependentmultigausspsf static method)": [[153, "gammapy.irf.EnergyDependentMultiGaussPSF.evaluate_direct", false]], "evaluate_direct() (gammapy.irf.parametricpsf method)": [[163, "gammapy.irf.ParametricPSF.evaluate_direct", false]], "evaluate_direct() (gammapy.irf.psfking static method)": [[161, "gammapy.irf.PSFKing.evaluate_direct", false]], "evaluate_energy_flux() (gammapy.modeling.models.powerlawnormspectralmodel static method)": [[251, "gammapy.modeling.models.PowerLawNormSpectralModel.evaluate_energy_flux", false]], "evaluate_energy_flux() (gammapy.modeling.models.powerlawspectralmodel static method)": [[252, "gammapy.modeling.models.PowerLawSpectralModel.evaluate_energy_flux", false]], "evaluate_error() (gammapy.astro.darkmatter.darkmatterannihilationspectralmodel method)": [[19, "gammapy.astro.darkmatter.DarkMatterAnnihilationSpectralModel.evaluate_error", false]], "evaluate_error() (gammapy.astro.darkmatter.darkmatterdecayspectralmodel method)": [[20, "gammapy.astro.darkmatter.DarkMatterDecaySpectralModel.evaluate_error", false]], "evaluate_error() (gammapy.astro.darkmatter.primaryflux method)": [[26, "gammapy.astro.darkmatter.PrimaryFlux.evaluate_error", false]], "evaluate_error() (gammapy.modeling.models.brokenpowerlawspectralmodel method)": [[217, "gammapy.modeling.models.BrokenPowerLawSpectralModel.evaluate_error", false]], "evaluate_error() (gammapy.modeling.models.compoundspectralmodel method)": [[218, "gammapy.modeling.models.CompoundSpectralModel.evaluate_error", false]], "evaluate_error() (gammapy.modeling.models.constantspectralmodel method)": [[221, "gammapy.modeling.models.ConstantSpectralModel.evaluate_error", false]], "evaluate_error() (gammapy.modeling.models.eblabsorptionnormspectralmodel method)": [[225, "gammapy.modeling.models.EBLAbsorptionNormSpectralModel.evaluate_error", false]], "evaluate_error() (gammapy.modeling.models.expcutoffpowerlaw3fglspectralmodel method)": [[227, "gammapy.modeling.models.ExpCutoffPowerLaw3FGLSpectralModel.evaluate_error", false]], "evaluate_error() (gammapy.modeling.models.expcutoffpowerlawnormspectralmodel method)": [[228, "gammapy.modeling.models.ExpCutoffPowerLawNormSpectralModel.evaluate_error", false]], "evaluate_error() (gammapy.modeling.models.expcutoffpowerlawspectralmodel method)": [[229, "gammapy.modeling.models.ExpCutoffPowerLawSpectralModel.evaluate_error", false]], "evaluate_error() (gammapy.modeling.models.gaussianspectralmodel method)": [[233, "gammapy.modeling.models.GaussianSpectralModel.evaluate_error", false]], "evaluate_error() (gammapy.modeling.models.logparabolanormspectralmodel method)": [[239, "gammapy.modeling.models.LogParabolaNormSpectralModel.evaluate_error", false]], "evaluate_error() (gammapy.modeling.models.logparabolaspectralmodel method)": [[240, "gammapy.modeling.models.LogParabolaSpectralModel.evaluate_error", false]], "evaluate_error() (gammapy.modeling.models.meyercrabspectralmodel method)": [[242, "gammapy.modeling.models.MeyerCrabSpectralModel.evaluate_error", false]], "evaluate_error() (gammapy.modeling.models.naimaspectralmodel method)": [[246, "gammapy.modeling.models.NaimaSpectralModel.evaluate_error", false]], "evaluate_error() (gammapy.modeling.models.piecewisenormspectralmodel method)": [[248, "gammapy.modeling.models.PiecewiseNormSpectralModel.evaluate_error", false]], "evaluate_error() (gammapy.modeling.models.powerlaw2spectralmodel method)": [[250, "gammapy.modeling.models.PowerLaw2SpectralModel.evaluate_error", false]], "evaluate_error() (gammapy.modeling.models.powerlawnormspectralmodel method)": [[251, "gammapy.modeling.models.PowerLawNormSpectralModel.evaluate_error", false]], "evaluate_error() (gammapy.modeling.models.powerlawspectralmodel method)": [[252, "gammapy.modeling.models.PowerLawSpectralModel.evaluate_error", false]], "evaluate_error() (gammapy.modeling.models.scalespectralmodel method)": [[257, "gammapy.modeling.models.ScaleSpectralModel.evaluate_error", false]], "evaluate_error() (gammapy.modeling.models.smoothbrokenpowerlawspectralmodel method)": [[262, "gammapy.modeling.models.SmoothBrokenPowerLawSpectralModel.evaluate_error", false]], "evaluate_error() (gammapy.modeling.models.spectralmodel method)": [[264, "gammapy.modeling.models.SpectralModel.evaluate_error", false]], "evaluate_error() (gammapy.modeling.models.superexpcutoffpowerlaw3fglspectralmodel method)": [[265, "gammapy.modeling.models.SuperExpCutoffPowerLaw3FGLSpectralModel.evaluate_error", false]], "evaluate_error() (gammapy.modeling.models.superexpcutoffpowerlaw4fgldr3spectralmodel method)": [[266, "gammapy.modeling.models.SuperExpCutoffPowerLaw4FGLDR3SpectralModel.evaluate_error", false]], "evaluate_error() (gammapy.modeling.models.superexpcutoffpowerlaw4fglspectralmodel method)": [[267, "gammapy.modeling.models.SuperExpCutoffPowerLaw4FGLSpectralModel.evaluate_error", false]], "evaluate_error() (gammapy.modeling.models.templatendspectralmodel method)": [[270, "gammapy.modeling.models.TemplateNDSpectralModel.evaluate_error", false]], "evaluate_error() (gammapy.modeling.models.templatespectralmodel method)": [[274, "gammapy.modeling.models.TemplateSpectralModel.evaluate_error", false]], "evaluate_geom() (gammapy.modeling.models.constantfluxspatialmodel static method)": [[219, "gammapy.modeling.models.ConstantFluxSpatialModel.evaluate_geom", false]], "evaluate_geom() (gammapy.modeling.models.constantspatialmodel method)": [[220, "gammapy.modeling.models.ConstantSpatialModel.evaluate_geom", false]], "evaluate_geom() (gammapy.modeling.models.diskspatialmodel method)": [[224, "gammapy.modeling.models.DiskSpatialModel.evaluate_geom", false]], "evaluate_geom() (gammapy.modeling.models.fovbackgroundmodel method)": [[231, "gammapy.modeling.models.FoVBackgroundModel.evaluate_geom", false]], "evaluate_geom() (gammapy.modeling.models.gaussianspatialmodel method)": [[232, "gammapy.modeling.models.GaussianSpatialModel.evaluate_geom", false]], "evaluate_geom() (gammapy.modeling.models.generalizedgaussianspatialmodel method)": [[235, "gammapy.modeling.models.GeneralizedGaussianSpatialModel.evaluate_geom", false]], "evaluate_geom() (gammapy.modeling.models.piecewisenormspatialmodel method)": [[247, "gammapy.modeling.models.PiecewiseNormSpatialModel.evaluate_geom", false]], "evaluate_geom() (gammapy.modeling.models.pointspatialmodel method)": [[249, "gammapy.modeling.models.PointSpatialModel.evaluate_geom", false]], "evaluate_geom() (gammapy.modeling.models.shell2spatialmodel method)": [[258, "gammapy.modeling.models.Shell2SpatialModel.evaluate_geom", false]], "evaluate_geom() (gammapy.modeling.models.shellspatialmodel method)": [[259, "gammapy.modeling.models.ShellSpatialModel.evaluate_geom", false]], "evaluate_geom() (gammapy.modeling.models.skymodel method)": [[261, "gammapy.modeling.models.SkyModel.evaluate_geom", false]], "evaluate_geom() (gammapy.modeling.models.spatialmodel method)": [[263, "gammapy.modeling.models.SpatialModel.evaluate_geom", false]], "evaluate_geom() (gammapy.modeling.models.templatendspatialmodel method)": [[269, "gammapy.modeling.models.TemplateNDSpatialModel.evaluate_geom", false]], "evaluate_geom() (gammapy.modeling.models.templatespatialmodel method)": [[273, "gammapy.modeling.models.TemplateSpatialModel.evaluate_geom", false]], "evaluate_integral() (gammapy.modeling.models.powerlaw2spectralmodel static method)": [[250, "gammapy.modeling.models.PowerLaw2SpectralModel.evaluate_integral", false]], "evaluate_integral() (gammapy.modeling.models.powerlawnormspectralmodel static method)": [[251, "gammapy.modeling.models.PowerLawNormSpectralModel.evaluate_integral", false]], "evaluate_integral() (gammapy.modeling.models.powerlawspectralmodel static method)": [[252, "gammapy.modeling.models.PowerLawSpectralModel.evaluate_integral", false]], "evaluate_parameters() (gammapy.irf.energydependentmultigausspsf method)": [[153, "gammapy.irf.EnergyDependentMultiGaussPSF.evaluate_parameters", false]], "evaluate_parameters() (gammapy.irf.parametricpsf method)": [[163, "gammapy.irf.ParametricPSF.evaluate_parameters", false]], "evaluate_parameters() (gammapy.irf.psfking method)": [[161, "gammapy.irf.PSFKing.evaluate_parameters", false]], "evaluation_bin_size_min (gammapy.modeling.models.constantfluxspatialmodel attribute)": [[219, "gammapy.modeling.models.ConstantFluxSpatialModel.evaluation_bin_size_min", false]], "evaluation_bin_size_min (gammapy.modeling.models.constantspatialmodel attribute)": [[220, "gammapy.modeling.models.ConstantSpatialModel.evaluation_bin_size_min", false]], "evaluation_bin_size_min (gammapy.modeling.models.diskspatialmodel attribute)": [[224, "gammapy.modeling.models.DiskSpatialModel.evaluation_bin_size_min", false]], "evaluation_bin_size_min (gammapy.modeling.models.gaussianspatialmodel attribute)": [[232, "gammapy.modeling.models.GaussianSpatialModel.evaluation_bin_size_min", false]], "evaluation_bin_size_min (gammapy.modeling.models.generalizedgaussianspatialmodel attribute)": [[235, "gammapy.modeling.models.GeneralizedGaussianSpatialModel.evaluation_bin_size_min", false]], "evaluation_bin_size_min (gammapy.modeling.models.piecewisenormspatialmodel attribute)": [[247, "gammapy.modeling.models.PiecewiseNormSpatialModel.evaluation_bin_size_min", false]], "evaluation_bin_size_min (gammapy.modeling.models.pointspatialmodel attribute)": [[249, "gammapy.modeling.models.PointSpatialModel.evaluation_bin_size_min", false]], "evaluation_bin_size_min (gammapy.modeling.models.shell2spatialmodel attribute)": [[258, "gammapy.modeling.models.Shell2SpatialModel.evaluation_bin_size_min", false]], "evaluation_bin_size_min (gammapy.modeling.models.shellspatialmodel attribute)": [[259, "gammapy.modeling.models.ShellSpatialModel.evaluation_bin_size_min", false]], "evaluation_bin_size_min (gammapy.modeling.models.skymodel attribute)": [[261, "gammapy.modeling.models.SkyModel.evaluation_bin_size_min", false]], "evaluation_bin_size_min (gammapy.modeling.models.spatialmodel attribute)": [[263, "gammapy.modeling.models.SpatialModel.evaluation_bin_size_min", false]], "evaluation_bin_size_min (gammapy.modeling.models.templatendspatialmodel attribute)": [[269, "gammapy.modeling.models.TemplateNDSpatialModel.evaluation_bin_size_min", false]], "evaluation_bin_size_min (gammapy.modeling.models.templatespatialmodel attribute)": [[273, "gammapy.modeling.models.TemplateSpatialModel.evaluation_bin_size_min", false]], "evaluation_radius (gammapy.modeling.models.constantfluxspatialmodel attribute)": [[219, "gammapy.modeling.models.ConstantFluxSpatialModel.evaluation_radius", false]], "evaluation_radius (gammapy.modeling.models.constantspatialmodel attribute)": [[220, "gammapy.modeling.models.ConstantSpatialModel.evaluation_radius", false]], "evaluation_radius (gammapy.modeling.models.diskspatialmodel attribute)": [[224, "gammapy.modeling.models.DiskSpatialModel.evaluation_radius", false]], "evaluation_radius (gammapy.modeling.models.gaussianspatialmodel attribute)": [[232, "gammapy.modeling.models.GaussianSpatialModel.evaluation_radius", false]], "evaluation_radius (gammapy.modeling.models.generalizedgaussianspatialmodel attribute)": [[235, "gammapy.modeling.models.GeneralizedGaussianSpatialModel.evaluation_radius", false]], "evaluation_radius (gammapy.modeling.models.piecewisenormspatialmodel attribute)": [[247, "gammapy.modeling.models.PiecewiseNormSpatialModel.evaluation_radius", false]], "evaluation_radius (gammapy.modeling.models.pointspatialmodel attribute)": [[249, "gammapy.modeling.models.PointSpatialModel.evaluation_radius", false]], "evaluation_radius (gammapy.modeling.models.shell2spatialmodel attribute)": [[258, "gammapy.modeling.models.Shell2SpatialModel.evaluation_radius", false]], "evaluation_radius (gammapy.modeling.models.shellspatialmodel attribute)": [[259, "gammapy.modeling.models.ShellSpatialModel.evaluation_radius", false]], "evaluation_radius (gammapy.modeling.models.skymodel attribute)": [[261, "gammapy.modeling.models.SkyModel.evaluation_radius", false]], "evaluation_radius (gammapy.modeling.models.spatialmodel attribute)": [[263, "gammapy.modeling.models.SpatialModel.evaluation_radius", false]], "evaluation_radius (gammapy.modeling.models.templatendspatialmodel attribute)": [[269, "gammapy.modeling.models.TemplateNDSpatialModel.evaluation_radius", false]], "evaluation_radius (gammapy.modeling.models.templatenpredmodel attribute)": [[271, "gammapy.modeling.models.TemplateNPredModel.evaluation_radius", false]], "evaluation_radius (gammapy.modeling.models.templatespatialmodel attribute)": [[273, "gammapy.modeling.models.TemplateSpatialModel.evaluation_radius", false]], "evaluation_region (gammapy.modeling.models.constantfluxspatialmodel attribute)": [[219, "gammapy.modeling.models.ConstantFluxSpatialModel.evaluation_region", false]], "evaluation_region (gammapy.modeling.models.constantspatialmodel attribute)": [[220, "gammapy.modeling.models.ConstantSpatialModel.evaluation_region", false]], "evaluation_region (gammapy.modeling.models.diskspatialmodel attribute)": [[224, "gammapy.modeling.models.DiskSpatialModel.evaluation_region", false]], "evaluation_region (gammapy.modeling.models.gaussianspatialmodel attribute)": [[232, "gammapy.modeling.models.GaussianSpatialModel.evaluation_region", false]], "evaluation_region (gammapy.modeling.models.generalizedgaussianspatialmodel attribute)": [[235, "gammapy.modeling.models.GeneralizedGaussianSpatialModel.evaluation_region", false]], "evaluation_region (gammapy.modeling.models.piecewisenormspatialmodel attribute)": [[247, "gammapy.modeling.models.PiecewiseNormSpatialModel.evaluation_region", false]], "evaluation_region (gammapy.modeling.models.pointspatialmodel attribute)": [[249, "gammapy.modeling.models.PointSpatialModel.evaluation_region", false]], "evaluation_region (gammapy.modeling.models.shell2spatialmodel attribute)": [[258, "gammapy.modeling.models.Shell2SpatialModel.evaluation_region", false]], "evaluation_region (gammapy.modeling.models.shellspatialmodel attribute)": [[259, "gammapy.modeling.models.ShellSpatialModel.evaluation_region", false]], "evaluation_region (gammapy.modeling.models.skymodel attribute)": [[261, "gammapy.modeling.models.SkyModel.evaluation_region", false]], "evaluation_region (gammapy.modeling.models.spatialmodel attribute)": [[263, "gammapy.modeling.models.SpatialModel.evaluation_region", false]], "evaluation_region (gammapy.modeling.models.templatendspatialmodel attribute)": [[269, "gammapy.modeling.models.TemplateNDSpatialModel.evaluation_region", false]], "evaluation_region (gammapy.modeling.models.templatespatialmodel attribute)": [[273, "gammapy.modeling.models.TemplateSpatialModel.evaluation_region", false]], "evaluators (gammapy.datasets.mapdataset attribute)": [[102, "gammapy.datasets.MapDataset.evaluators", false]], "evaluators (gammapy.datasets.mapdatasetonoff attribute)": [[105, "gammapy.datasets.MapDatasetOnOff.evaluators", false]], "evaluators (gammapy.datasets.spectrumdataset attribute)": [[109, "gammapy.datasets.SpectrumDataset.evaluators", false]], "evaluators (gammapy.datasets.spectrumdatasetonoff attribute)": [[110, "gammapy.datasets.SpectrumDatasetOnOff.evaluators", false]], "event_det_coords() (gammapy.datasets.mapdataseteventsampler static method)": [[103, "gammapy.datasets.MapDatasetEventSampler.event_det_coords", false]], "event_det_coords() (gammapy.datasets.observationeventsampler static method)": [[108, "gammapy.datasets.ObservationEventSampler.event_det_coords", false]], "event_filter_types (gammapy.data.observationfilter attribute)": [[89, "gammapy.data.ObservationFilter.EVENT_FILTER_TYPES", false]], "event_list_meta() (gammapy.datasets.mapdataseteventsampler static method)": [[103, "gammapy.datasets.MapDatasetEventSampler.event_list_meta", false]], "event_list_meta() (gammapy.datasets.observationeventsampler static method)": [[108, "gammapy.datasets.ObservationEventSampler.event_list_meta", false]], "eventlist (class in gammapy.data)": [[83, "gammapy.data.EventList", false]], "eventlistmetadata (class in gammapy.data)": [[84, "gammapy.data.EventListMetaData", false]], "events (gammapy.data.observation attribute)": [[88, "gammapy.data.Observation.events", false]], "evolved (gammapy.astro.population.casebattacharya1998 attribute)": [[28, "gammapy.astro.population.CaseBattacharya1998.evolved", false]], "evolved (gammapy.astro.population.exponential attribute)": [[29, "gammapy.astro.population.Exponential.evolved", false]], "evolved (gammapy.astro.population.faucherkaspi2006 attribute)": [[30, "gammapy.astro.population.FaucherKaspi2006.evolved", false]], "evolved (gammapy.astro.population.lorimer2006 attribute)": [[35, "gammapy.astro.population.Lorimer2006.evolved", false]], "evolved (gammapy.astro.population.paczynski1990 attribute)": [[36, "gammapy.astro.population.Paczynski1990.evolved", false]], "evolved (gammapy.astro.population.yusifovkucuk2004 attribute)": [[39, "gammapy.astro.population.YusifovKucuk2004.evolved", false]], "evolved (gammapy.astro.population.yusifovkucuk2004b attribute)": [[40, "gammapy.astro.population.YusifovKucuk2004B.evolved", false]], "excess (gammapy.datasets.mapdataset attribute)": [[102, "gammapy.datasets.MapDataset.excess", false]], "excess (gammapy.datasets.mapdatasetonoff attribute)": [[105, "gammapy.datasets.MapDatasetOnOff.excess", false]], "excess (gammapy.datasets.spectrumdataset attribute)": [[109, "gammapy.datasets.SpectrumDataset.excess", false]], "excess (gammapy.datasets.spectrumdatasetonoff attribute)": [[110, "gammapy.datasets.SpectrumDatasetOnOff.excess", false]], "excessmapestimator (class in gammapy.estimators)": [[121, "gammapy.estimators.ExcessMapEstimator", false]], "expand_map() (gammapy.estimators.lightcurveestimator static method)": [[129, "gammapy.estimators.LightCurveEstimator.expand_map", false]], "expcutoffpowerlaw3fglspectralmodel (class in gammapy.modeling.models)": [[227, "gammapy.modeling.models.ExpCutoffPowerLaw3FGLSpectralModel", false]], "expcutoffpowerlawnormspectralmodel (class in gammapy.modeling.models)": [[228, "gammapy.modeling.models.ExpCutoffPowerLawNormSpectralModel", false]], "expcutoffpowerlawspectralmodel (class in gammapy.modeling.models)": [[229, "gammapy.modeling.models.ExpCutoffPowerLawSpectralModel", false]], "expdecaytemporalmodel (class in gammapy.modeling.models)": [[230, "gammapy.modeling.models.ExpDecayTemporalModel", false]], "expfactor (gammapy.modeling.models.superexpcutoffpowerlaw4fgldr3spectralmodel attribute)": [[266, "gammapy.modeling.models.SuperExpCutoffPowerLaw4FGLDR3SpectralModel.expfactor", false]], "expfactor (gammapy.modeling.models.superexpcutoffpowerlaw4fglspectralmodel attribute)": [[267, "gammapy.modeling.models.SuperExpCutoffPowerLaw4FGLSpectralModel.expfactor", false]], "exponential (class in gammapy.astro.population)": [[29, "gammapy.astro.population.Exponential", false]], "exposure (gammapy.datasets.mapdataset attribute)": [[102, "gammapy.datasets.MapDataset.exposure", false]], "exposure (gammapy.datasets.mapdatasetonoff attribute)": [[105, "gammapy.datasets.MapDatasetOnOff.exposure", false]], "exposure (gammapy.datasets.spectrumdataset attribute)": [[109, "gammapy.datasets.SpectrumDataset.exposure", false]], "exposure (gammapy.datasets.spectrumdatasetonoff attribute)": [[110, "gammapy.datasets.SpectrumDatasetOnOff.exposure", false]], "extend() (gammapy.data.observations method)": [[92, "gammapy.data.Observations.extend", false]], "extend() (gammapy.datasets.datasets method)": [[100, "gammapy.datasets.Datasets.extend", false]], "extend() (gammapy.modeling.models.models method)": [[245, "gammapy.modeling.models.Models.extend", false]], "f0 (gammapy.modeling.models.templatephasecurvetemporalmodel attribute)": [[272, "gammapy.modeling.models.TemplatePhaseCurveTemporalModel.f0", false]], "f1 (gammapy.modeling.models.templatephasecurvetemporalmodel attribute)": [[272, "gammapy.modeling.models.TemplatePhaseCurveTemporalModel.f1", false]], "f2 (gammapy.modeling.models.templatephasecurvetemporalmodel attribute)": [[272, "gammapy.modeling.models.TemplatePhaseCurveTemporalModel.f2", false]], "f_cash_root_cython() (in module gammapy.stats)": [[296, "gammapy.stats.f_cash_root_cython", false]], "factor (gammapy.modeling.parameter attribute)": [[213, "gammapy.modeling.Parameter.factor", false]], "factor (gammapy.modeling.priorparameter attribute)": [[215, "gammapy.modeling.PriorParameter.factor", false]], "factor_max (gammapy.modeling.parameter attribute)": [[213, "gammapy.modeling.Parameter.factor_max", false]], "factor_max (gammapy.modeling.priorparameter attribute)": [[215, "gammapy.modeling.PriorParameter.factor_max", false]], "factor_min (gammapy.modeling.parameter attribute)": [[213, "gammapy.modeling.Parameter.factor_min", false]], "factor_min (gammapy.modeling.priorparameter attribute)": [[215, "gammapy.modeling.PriorParameter.factor_min", false]], "fake() (gammapy.datasets.mapdataset method)": [[102, "gammapy.datasets.MapDataset.fake", false]], "fake() (gammapy.datasets.mapdatasetonoff method)": [[105, "gammapy.datasets.MapDatasetOnOff.fake", false]], "fake() (gammapy.datasets.spectrumdataset method)": [[109, "gammapy.datasets.SpectrumDataset.fake", false]], "fake() (gammapy.datasets.spectrumdatasetonoff method)": [[110, "gammapy.datasets.SpectrumDatasetOnOff.fake", false]], "faucherkaspi2006 (class in gammapy.astro.population)": [[30, "gammapy.astro.population.FaucherKaspi2006", false]], "faucherkaspi2006velocitybimodal (class in gammapy.astro.population)": [[31, "gammapy.astro.population.FaucherKaspi2006VelocityBimodal", false]], "faucherkaspi2006velocitymaxwellian (class in gammapy.astro.population)": [[32, "gammapy.astro.population.FaucherKaspi2006VelocityMaxwellian", false]], "faucherspiral (class in gammapy.astro.population)": [[33, "gammapy.astro.population.FaucherSpiral", false]], "field() (gammapy.data.hduindextable method)": [[87, "gammapy.data.HDUIndexTable.field", false]], "field() (gammapy.data.observationtable method)": [[91, "gammapy.data.ObservationTable.field", false]], "fill_by_coord() (gammapy.maps.hpxmap method)": [[192, "gammapy.maps.HpxMap.fill_by_coord", false]], "fill_by_coord() (gammapy.maps.hpxndmap method)": [[193, "gammapy.maps.HpxNDMap.fill_by_coord", false]], "fill_by_coord() (gammapy.maps.map method)": [[195, "gammapy.maps.Map.fill_by_coord", false]], "fill_by_coord() (gammapy.maps.regionndmap method)": [[201, "gammapy.maps.RegionNDMap.fill_by_coord", false]], "fill_by_coord() (gammapy.maps.wcsmap method)": [[204, "gammapy.maps.WcsMap.fill_by_coord", false]], "fill_by_coord() (gammapy.maps.wcsndmap method)": [[205, "gammapy.maps.WcsNDMap.fill_by_coord", false]], "fill_by_idx() (gammapy.maps.hpxmap method)": [[192, "gammapy.maps.HpxMap.fill_by_idx", false]], "fill_by_idx() (gammapy.maps.hpxndmap method)": [[193, "gammapy.maps.HpxNDMap.fill_by_idx", false]], "fill_by_idx() (gammapy.maps.map method)": [[195, "gammapy.maps.Map.fill_by_idx", false]], "fill_by_idx() (gammapy.maps.regionndmap method)": [[201, "gammapy.maps.RegionNDMap.fill_by_idx", false]], "fill_by_idx() (gammapy.maps.wcsmap method)": [[204, "gammapy.maps.WcsMap.fill_by_idx", false]], "fill_by_idx() (gammapy.maps.wcsndmap method)": [[205, "gammapy.maps.WcsNDMap.fill_by_idx", false]], "fill_by_pix() (gammapy.maps.hpxmap method)": [[192, "gammapy.maps.HpxMap.fill_by_pix", false]], "fill_by_pix() (gammapy.maps.hpxndmap method)": [[193, "gammapy.maps.HpxNDMap.fill_by_pix", false]], "fill_by_pix() (gammapy.maps.map method)": [[195, "gammapy.maps.Map.fill_by_pix", false]], "fill_by_pix() (gammapy.maps.regionndmap method)": [[201, "gammapy.maps.RegionNDMap.fill_by_pix", false]], "fill_by_pix() (gammapy.maps.wcsmap method)": [[204, "gammapy.maps.WcsMap.fill_by_pix", false]], "fill_by_pix() (gammapy.maps.wcsndmap method)": [[205, "gammapy.maps.WcsNDMap.fill_by_pix", false]], "fill_events() (gammapy.maps.hpxmap method)": [[192, "gammapy.maps.HpxMap.fill_events", false]], "fill_events() (gammapy.maps.hpxndmap method)": [[193, "gammapy.maps.HpxNDMap.fill_events", false]], "fill_events() (gammapy.maps.map method)": [[195, "gammapy.maps.Map.fill_events", false]], "fill_events() (gammapy.maps.regionndmap method)": [[201, "gammapy.maps.RegionNDMap.fill_events", false]], "fill_events() (gammapy.maps.wcsmap method)": [[204, "gammapy.maps.WcsMap.fill_events", false]], "fill_events() (gammapy.maps.wcsndmap method)": [[205, "gammapy.maps.WcsNDMap.fill_events", false]], "filled() (gammapy.data.hduindextable method)": [[87, "gammapy.data.HDUIndexTable.filled", false]], "filled() (gammapy.data.observationtable method)": [[91, "gammapy.data.ObservationTable.filled", false]], "filter_events() (gammapy.data.observationfilter method)": [[89, "gammapy.data.ObservationFilter.filter_events", false]], "filter_gti() (gammapy.data.observationfilter method)": [[89, "gammapy.data.ObservationFilter.filter_gti", false]], "filter_success_nan (gammapy.estimators.fluxmaps attribute)": [[122, "gammapy.estimators.FluxMaps.filter_success_nan", false]], "filter_success_nan (gammapy.estimators.fluxpoints attribute)": [[124, "gammapy.estimators.FluxPoints.filter_success_nan", false]], "find_peaks() (in module gammapy.estimators.utils)": [[140, "gammapy.estimators.utils.find_peaks", false]], "find_peaks_in_flux_map() (in module gammapy.estimators.utils)": [[141, "gammapy.estimators.utils.find_peaks_in_flux_map", false]], "fit (class in gammapy.modeling)": [[210, "gammapy.modeling.Fit", false]], "fit_deriv (gammapy.astro.population.casebattacharya1998 attribute)": [[28, "gammapy.astro.population.CaseBattacharya1998.fit_deriv", false]], "fit_deriv (gammapy.astro.population.exponential attribute)": [[29, "gammapy.astro.population.Exponential.fit_deriv", false]], "fit_deriv (gammapy.astro.population.faucherkaspi2006 attribute)": [[30, "gammapy.astro.population.FaucherKaspi2006.fit_deriv", false]], "fit_deriv (gammapy.astro.population.faucherkaspi2006velocitybimodal attribute)": [[31, "gammapy.astro.population.FaucherKaspi2006VelocityBimodal.fit_deriv", false]], "fit_deriv (gammapy.astro.population.faucherkaspi2006velocitymaxwellian attribute)": [[32, "gammapy.astro.population.FaucherKaspi2006VelocityMaxwellian.fit_deriv", false]], "fit_deriv (gammapy.astro.population.lorimer2006 attribute)": [[35, "gammapy.astro.population.Lorimer2006.fit_deriv", false]], "fit_deriv (gammapy.astro.population.paczynski1990 attribute)": [[36, "gammapy.astro.population.Paczynski1990.fit_deriv", false]], "fit_deriv (gammapy.astro.population.paczynski1990velocity attribute)": [[37, "gammapy.astro.population.Paczynski1990Velocity.fit_deriv", false]], "fit_deriv (gammapy.astro.population.yusifovkucuk2004 attribute)": [[39, "gammapy.astro.population.YusifovKucuk2004.fit_deriv", false]], "fit_deriv (gammapy.astro.population.yusifovkucuk2004b attribute)": [[40, "gammapy.astro.population.YusifovKucuk2004B.fit_deriv", false]], "fitresult (class in gammapy.modeling)": [[211, "gammapy.modeling.FitResult", false]], "fittable (gammapy.astro.population.casebattacharya1998 attribute)": [[28, "gammapy.astro.population.CaseBattacharya1998.fittable", false]], "fittable (gammapy.astro.population.exponential attribute)": [[29, "gammapy.astro.population.Exponential.fittable", false]], "fittable (gammapy.astro.population.faucherkaspi2006 attribute)": [[30, "gammapy.astro.population.FaucherKaspi2006.fittable", false]], "fittable (gammapy.astro.population.faucherkaspi2006velocitybimodal attribute)": [[31, "gammapy.astro.population.FaucherKaspi2006VelocityBimodal.fittable", false]], "fittable (gammapy.astro.population.faucherkaspi2006velocitymaxwellian attribute)": [[32, "gammapy.astro.population.FaucherKaspi2006VelocityMaxwellian.fittable", false]], "fittable (gammapy.astro.population.lorimer2006 attribute)": [[35, "gammapy.astro.population.Lorimer2006.fittable", false]], "fittable (gammapy.astro.population.paczynski1990 attribute)": [[36, "gammapy.astro.population.Paczynski1990.fittable", false]], "fittable (gammapy.astro.population.paczynski1990velocity attribute)": [[37, "gammapy.astro.population.Paczynski1990Velocity.fittable", false]], "fittable (gammapy.astro.population.yusifovkucuk2004 attribute)": [[39, "gammapy.astro.population.YusifovKucuk2004.fittable", false]], "fittable (gammapy.astro.population.yusifovkucuk2004b attribute)": [[40, "gammapy.astro.population.YusifovKucuk2004B.fittable", false]], "fixed (gammapy.astro.population.casebattacharya1998 attribute)": [[28, "gammapy.astro.population.CaseBattacharya1998.fixed", false]], "fixed (gammapy.astro.population.exponential attribute)": [[29, "gammapy.astro.population.Exponential.fixed", false]], "fixed (gammapy.astro.population.faucherkaspi2006 attribute)": [[30, "gammapy.astro.population.FaucherKaspi2006.fixed", false]], "fixed (gammapy.astro.population.faucherkaspi2006velocitybimodal attribute)": [[31, "gammapy.astro.population.FaucherKaspi2006VelocityBimodal.fixed", false]], "fixed (gammapy.astro.population.faucherkaspi2006velocitymaxwellian attribute)": [[32, "gammapy.astro.population.FaucherKaspi2006VelocityMaxwellian.fixed", false]], "fixed (gammapy.astro.population.lorimer2006 attribute)": [[35, "gammapy.astro.population.Lorimer2006.fixed", false]], "fixed (gammapy.astro.population.paczynski1990 attribute)": [[36, "gammapy.astro.population.Paczynski1990.fixed", false]], "fixed (gammapy.astro.population.paczynski1990velocity attribute)": [[37, "gammapy.astro.population.Paczynski1990Velocity.fixed", false]], "fixed (gammapy.astro.population.yusifovkucuk2004 attribute)": [[39, "gammapy.astro.population.YusifovKucuk2004.fixed", false]], "fixed (gammapy.astro.population.yusifovkucuk2004b attribute)": [[40, "gammapy.astro.population.YusifovKucuk2004B.fixed", false]], "fixed_altaz (gammapy.data.fixedpointinginfo attribute)": [[85, "gammapy.data.FixedPointingInfo.fixed_altaz", false]], "fixed_icrs (gammapy.data.fixedpointinginfo attribute)": [[85, "gammapy.data.FixedPointingInfo.fixed_icrs", false]], "fixedpointinginfo (class in gammapy.data)": [[85, "gammapy.data.FixedPointingInfo", false]], "flat (gammapy.maps.mapcoord attribute)": [[198, "gammapy.maps.MapCoord.flat", false]], "flux (gammapy.estimators.fluxmaps attribute)": [[122, "gammapy.estimators.FluxMaps.flux", false]], "flux (gammapy.estimators.fluxpoints attribute)": [[124, "gammapy.estimators.FluxPoints.flux", false]], "flux_err (gammapy.estimators.fluxmaps attribute)": [[122, "gammapy.estimators.FluxMaps.flux_err", false]], "flux_err (gammapy.estimators.fluxpoints attribute)": [[124, "gammapy.estimators.FluxPoints.flux_err", false]], "flux_errn (gammapy.estimators.fluxmaps attribute)": [[122, "gammapy.estimators.FluxMaps.flux_errn", false]], "flux_errn (gammapy.estimators.fluxpoints attribute)": [[124, "gammapy.estimators.FluxPoints.flux_errn", false]], "flux_errp (gammapy.estimators.fluxmaps attribute)": [[122, "gammapy.estimators.FluxMaps.flux_errp", false]], "flux_errp (gammapy.estimators.fluxpoints attribute)": [[124, "gammapy.estimators.FluxPoints.flux_errp", false]], "flux_points (gammapy.catalog.sourcecatalogobject2fhl attribute)": [[71, "gammapy.catalog.SourceCatalogObject2FHL.flux_points", false]], "flux_points (gammapy.catalog.sourcecatalogobject2pc attribute)": [[73, "gammapy.catalog.SourceCatalogObject2PC.flux_points", false]], "flux_points (gammapy.catalog.sourcecatalogobject3fgl attribute)": [[74, "gammapy.catalog.SourceCatalogObject3FGL.flux_points", false]], "flux_points (gammapy.catalog.sourcecatalogobject3fhl attribute)": [[75, "gammapy.catalog.SourceCatalogObject3FHL.flux_points", false]], "flux_points (gammapy.catalog.sourcecatalogobject3pc attribute)": [[77, "gammapy.catalog.SourceCatalogObject3PC.flux_points", false]], "flux_points (gammapy.catalog.sourcecatalogobject4fgl attribute)": [[78, "gammapy.catalog.SourceCatalogObject4FGL.flux_points", false]], "flux_points (gammapy.catalog.sourcecatalogobjectgammacat attribute)": [[79, "gammapy.catalog.SourceCatalogObjectGammaCat.flux_points", false]], "flux_points (gammapy.catalog.sourcecatalogobjecthgps attribute)": [[80, "gammapy.catalog.SourceCatalogObjectHGPS.flux_points", false]], "flux_points_meta (gammapy.catalog.sourcecatalogobject2fhl attribute)": [[71, "gammapy.catalog.SourceCatalogObject2FHL.flux_points_meta", false]], "flux_points_meta (gammapy.catalog.sourcecatalogobject3fgl attribute)": [[74, "gammapy.catalog.SourceCatalogObject3FGL.flux_points_meta", false]], "flux_points_meta (gammapy.catalog.sourcecatalogobject3fhl attribute)": [[75, "gammapy.catalog.SourceCatalogObject3FHL.flux_points_meta", false]], "flux_points_meta (gammapy.catalog.sourcecatalogobject4fgl attribute)": [[78, "gammapy.catalog.SourceCatalogObject4FGL.flux_points_meta", false]], "flux_points_table (gammapy.catalog.sourcecatalogobject2fhl attribute)": [[71, "gammapy.catalog.SourceCatalogObject2FHL.flux_points_table", false]], "flux_points_table (gammapy.catalog.sourcecatalogobject2pc attribute)": [[73, "gammapy.catalog.SourceCatalogObject2PC.flux_points_table", false]], "flux_points_table (gammapy.catalog.sourcecatalogobject3fgl attribute)": [[74, "gammapy.catalog.SourceCatalogObject3FGL.flux_points_table", false]], "flux_points_table (gammapy.catalog.sourcecatalogobject3fhl attribute)": [[75, "gammapy.catalog.SourceCatalogObject3FHL.flux_points_table", false]], "flux_points_table (gammapy.catalog.sourcecatalogobject3pc attribute)": [[77, "gammapy.catalog.SourceCatalogObject3PC.flux_points_table", false]], "flux_points_table (gammapy.catalog.sourcecatalogobject4fgl attribute)": [[78, "gammapy.catalog.SourceCatalogObject4FGL.flux_points_table", false]], "flux_points_table (gammapy.catalog.sourcecatalogobjectgammacat attribute)": [[79, "gammapy.catalog.SourceCatalogObjectGammaCat.flux_points_table", false]], "flux_points_table (gammapy.catalog.sourcecatalogobjecthgps attribute)": [[80, "gammapy.catalog.SourceCatalogObjectHGPS.flux_points_table", false]], "flux_pred() (gammapy.datasets.fluxpointsdataset method)": [[101, "gammapy.datasets.FluxPointsDataset.flux_pred", false]], "flux_ref (gammapy.estimators.fluxmaps attribute)": [[122, "gammapy.estimators.FluxMaps.flux_ref", false]], "flux_ref (gammapy.estimators.fluxpoints attribute)": [[124, "gammapy.estimators.FluxPoints.flux_ref", false]], "flux_sensitivity (gammapy.estimators.fluxmaps attribute)": [[122, "gammapy.estimators.FluxMaps.flux_sensitivity", false]], "flux_sensitivity (gammapy.estimators.fluxpoints attribute)": [[124, "gammapy.estimators.FluxPoints.flux_sensitivity", false]], "flux_ul (gammapy.estimators.fluxmaps attribute)": [[122, "gammapy.estimators.FluxMaps.flux_ul", false]], "flux_ul (gammapy.estimators.fluxpoints attribute)": [[124, "gammapy.estimators.FluxPoints.flux_ul", false]], "fluxmaps (class in gammapy.estimators)": [[122, "gammapy.estimators.FluxMaps", false]], "fluxmetadata (class in gammapy.estimators)": [[123, "gammapy.estimators.FluxMetaData", false]], "fluxpoints (class in gammapy.estimators)": [[124, "gammapy.estimators.FluxPoints", false]], "fluxpointsdataset (class in gammapy.datasets)": [[101, "gammapy.datasets.FluxPointsDataset", false]], "fluxpointsestimator (class in gammapy.estimators)": [[125, "gammapy.estimators.FluxPointsEstimator", false]], "fluxprofileestimator (class in gammapy.estimators)": [[126, "gammapy.estimators.FluxProfileEstimator", false]], "footprint (gammapy.maps.wcsgeom attribute)": [[203, "gammapy.maps.WcsGeom.footprint", false]], "footprint_rectangle_sky_region (gammapy.maps.wcsgeom attribute)": [[203, "gammapy.maps.WcsGeom.footprint_rectangle_sky_region", false]], "format_plot_xaxis() (gammapy.maps.labelmapaxis method)": [[194, "gammapy.maps.LabelMapAxis.format_plot_xaxis", false]], "format_plot_xaxis() (gammapy.maps.mapaxis method)": [[197, "gammapy.maps.MapAxis.format_plot_xaxis", false]], "format_plot_xaxis() (gammapy.maps.timemapaxis method)": [[202, "gammapy.maps.TimeMapAxis.format_plot_xaxis", false]], "format_plot_yaxis() (gammapy.maps.mapaxis method)": [[197, "gammapy.maps.MapAxis.format_plot_yaxis", false]], "fov": [[573, "term-FoV", true]], "fov background": [[573, "term-FoV-Background", true]], "fov_alignment (gammapy.irf.background2d attribute)": [[146, "gammapy.irf.Background2D.fov_alignment", false]], "fov_alignment (gammapy.irf.background3d attribute)": [[147, "gammapy.irf.Background3D.fov_alignment", false]], "fov_alignment (gammapy.irf.backgroundirf attribute)": [[148, "gammapy.irf.BackgroundIRF.fov_alignment", false]], "fov_alignment (gammapy.irf.edispkernel attribute)": [[149, "gammapy.irf.EDispKernel.fov_alignment", false]], "fov_alignment (gammapy.irf.effectiveareatable2d attribute)": [[152, "gammapy.irf.EffectiveAreaTable2D.fov_alignment", false]], "fov_alignment (gammapy.irf.energydependentmultigausspsf attribute)": [[153, "gammapy.irf.EnergyDependentMultiGaussPSF.fov_alignment", false]], "fov_alignment (gammapy.irf.energydispersion2d attribute)": [[154, "gammapy.irf.EnergyDispersion2D.fov_alignment", false]], "fov_alignment (gammapy.irf.irf attribute)": [[156, "gammapy.irf.IRF.fov_alignment", false]], "fov_alignment (gammapy.irf.parametricpsf attribute)": [[163, "gammapy.irf.ParametricPSF.fov_alignment", false]], "fov_alignment (gammapy.irf.psf3d attribute)": [[159, "gammapy.irf.PSF3D.fov_alignment", false]], "fov_alignment (gammapy.irf.psfking attribute)": [[161, "gammapy.irf.PSFKing.fov_alignment", false]], "fov_alignment (gammapy.irf.radmax2d attribute)": [[164, "gammapy.irf.RadMax2D.fov_alignment", false]], "fov_to_sky() (in module gammapy.utils.coordinates)": [[306, "gammapy.utils.coordinates.fov_to_sky", false]], "fovalignment (class in gammapy.irf)": [[155, "gammapy.irf.FoVAlignment", false]], "fovbackgroundmaker (class in gammapy.makers)": [[169, "gammapy.makers.FoVBackgroundMaker", false]], "fovbackgroundmodel (class in gammapy.modeling.models)": [[231, "gammapy.modeling.models.FoVBackgroundModel", false]], "frame (gammapy.maps.hpxgeom attribute)": [[191, "gammapy.maps.HpxGeom.frame", false]], "frame (gammapy.maps.mapcoord attribute)": [[198, "gammapy.maps.MapCoord.frame", false]], "frame (gammapy.maps.regiongeom attribute)": [[200, "gammapy.maps.RegionGeom.frame", false]], "frame (gammapy.maps.wcsgeom attribute)": [[203, "gammapy.maps.WcsGeom.frame", false]], "frame (gammapy.modeling.models.constantfluxspatialmodel attribute)": [[219, "gammapy.modeling.models.ConstantFluxSpatialModel.frame", false]], "frame (gammapy.modeling.models.constantspatialmodel attribute)": [[220, "gammapy.modeling.models.ConstantSpatialModel.frame", false]], "frame (gammapy.modeling.models.skymodel attribute)": [[261, "gammapy.modeling.models.SkyModel.frame", false]], "free_parameters (gammapy.modeling.parameters attribute)": [[214, "gammapy.modeling.Parameters.free_parameters", false]], "free_parameters (gammapy.modeling.priorparameters attribute)": [[216, "gammapy.modeling.PriorParameters.free_parameters", false]], "freeze() (gammapy.astro.darkmatter.darkmatterannihilationspectralmodel method)": [[19, "gammapy.astro.darkmatter.DarkMatterAnnihilationSpectralModel.freeze", false]], "freeze() (gammapy.astro.darkmatter.darkmatterdecayspectralmodel method)": [[20, "gammapy.astro.darkmatter.DarkMatterDecaySpectralModel.freeze", false]], "freeze() (gammapy.astro.darkmatter.primaryflux method)": [[26, "gammapy.astro.darkmatter.PrimaryFlux.freeze", false]], "freeze() (gammapy.modeling.models.brokenpowerlawspectralmodel method)": [[217, "gammapy.modeling.models.BrokenPowerLawSpectralModel.freeze", false]], "freeze() (gammapy.modeling.models.compoundspectralmodel method)": [[218, "gammapy.modeling.models.CompoundSpectralModel.freeze", false]], "freeze() (gammapy.modeling.models.constantfluxspatialmodel method)": [[219, "gammapy.modeling.models.ConstantFluxSpatialModel.freeze", false]], "freeze() (gammapy.modeling.models.constantspatialmodel method)": [[220, "gammapy.modeling.models.ConstantSpatialModel.freeze", false]], "freeze() (gammapy.modeling.models.constantspectralmodel method)": [[221, "gammapy.modeling.models.ConstantSpectralModel.freeze", false]], "freeze() (gammapy.modeling.models.constanttemporalmodel method)": [[222, "gammapy.modeling.models.ConstantTemporalModel.freeze", false]], "freeze() (gammapy.modeling.models.datasetmodels method)": [[223, "gammapy.modeling.models.DatasetModels.freeze", false]], "freeze() (gammapy.modeling.models.diskspatialmodel method)": [[224, "gammapy.modeling.models.DiskSpatialModel.freeze", false]], "freeze() (gammapy.modeling.models.eblabsorptionnormspectralmodel method)": [[225, "gammapy.modeling.models.EBLAbsorptionNormSpectralModel.freeze", false]], "freeze() (gammapy.modeling.models.expcutoffpowerlaw3fglspectralmodel method)": [[227, "gammapy.modeling.models.ExpCutoffPowerLaw3FGLSpectralModel.freeze", false]], "freeze() (gammapy.modeling.models.expcutoffpowerlawnormspectralmodel method)": [[228, "gammapy.modeling.models.ExpCutoffPowerLawNormSpectralModel.freeze", false]], "freeze() (gammapy.modeling.models.expcutoffpowerlawspectralmodel method)": [[229, "gammapy.modeling.models.ExpCutoffPowerLawSpectralModel.freeze", false]], "freeze() (gammapy.modeling.models.expdecaytemporalmodel method)": [[230, "gammapy.modeling.models.ExpDecayTemporalModel.freeze", false]], "freeze() (gammapy.modeling.models.fovbackgroundmodel method)": [[231, "gammapy.modeling.models.FoVBackgroundModel.freeze", false]], "freeze() (gammapy.modeling.models.gaussianspatialmodel method)": [[232, "gammapy.modeling.models.GaussianSpatialModel.freeze", false]], "freeze() (gammapy.modeling.models.gaussianspectralmodel method)": [[233, "gammapy.modeling.models.GaussianSpectralModel.freeze", false]], "freeze() (gammapy.modeling.models.gaussiantemporalmodel method)": [[234, "gammapy.modeling.models.GaussianTemporalModel.freeze", false]], "freeze() (gammapy.modeling.models.generalizedgaussianspatialmodel method)": [[235, "gammapy.modeling.models.GeneralizedGaussianSpatialModel.freeze", false]], "freeze() (gammapy.modeling.models.generalizedgaussiantemporalmodel method)": [[236, "gammapy.modeling.models.GeneralizedGaussianTemporalModel.freeze", false]], "freeze() (gammapy.modeling.models.lightcurvetemplatetemporalmodel method)": [[237, "gammapy.modeling.models.LightCurveTemplateTemporalModel.freeze", false]], "freeze() (gammapy.modeling.models.lineartemporalmodel method)": [[238, "gammapy.modeling.models.LinearTemporalModel.freeze", false]], "freeze() (gammapy.modeling.models.logparabolanormspectralmodel method)": [[239, "gammapy.modeling.models.LogParabolaNormSpectralModel.freeze", false]], "freeze() (gammapy.modeling.models.logparabolaspectralmodel method)": [[240, "gammapy.modeling.models.LogParabolaSpectralModel.freeze", false]], "freeze() (gammapy.modeling.models.meyercrabspectralmodel method)": [[242, "gammapy.modeling.models.MeyerCrabSpectralModel.freeze", false]], "freeze() (gammapy.modeling.models.modelbase method)": [[244, "gammapy.modeling.models.ModelBase.freeze", false]], "freeze() (gammapy.modeling.models.models method)": [[245, "gammapy.modeling.models.Models.freeze", false]], "freeze() (gammapy.modeling.models.naimaspectralmodel method)": [[246, "gammapy.modeling.models.NaimaSpectralModel.freeze", false]], "freeze() (gammapy.modeling.models.piecewisenormspatialmodel method)": [[247, "gammapy.modeling.models.PiecewiseNormSpatialModel.freeze", false]], "freeze() (gammapy.modeling.models.piecewisenormspectralmodel method)": [[248, "gammapy.modeling.models.PiecewiseNormSpectralModel.freeze", false]], "freeze() (gammapy.modeling.models.pointspatialmodel method)": [[249, "gammapy.modeling.models.PointSpatialModel.freeze", false]], "freeze() (gammapy.modeling.models.powerlaw2spectralmodel method)": [[250, "gammapy.modeling.models.PowerLaw2SpectralModel.freeze", false]], "freeze() (gammapy.modeling.models.powerlawnormspectralmodel method)": [[251, "gammapy.modeling.models.PowerLawNormSpectralModel.freeze", false]], "freeze() (gammapy.modeling.models.powerlawspectralmodel method)": [[252, "gammapy.modeling.models.PowerLawSpectralModel.freeze", false]], "freeze() (gammapy.modeling.models.powerlawtemporalmodel method)": [[253, "gammapy.modeling.models.PowerLawTemporalModel.freeze", false]], "freeze() (gammapy.modeling.models.prior method)": [[254, "gammapy.modeling.models.Prior.freeze", false]], "freeze() (gammapy.modeling.models.scalespectralmodel method)": [[257, "gammapy.modeling.models.ScaleSpectralModel.freeze", false]], "freeze() (gammapy.modeling.models.shell2spatialmodel method)": [[258, "gammapy.modeling.models.Shell2SpatialModel.freeze", false]], "freeze() (gammapy.modeling.models.shellspatialmodel method)": [[259, "gammapy.modeling.models.ShellSpatialModel.freeze", false]], "freeze() (gammapy.modeling.models.sinetemporalmodel method)": [[260, "gammapy.modeling.models.SineTemporalModel.freeze", false]], "freeze() (gammapy.modeling.models.skymodel method)": [[261, "gammapy.modeling.models.SkyModel.freeze", false]], "freeze() (gammapy.modeling.models.smoothbrokenpowerlawspectralmodel method)": [[262, "gammapy.modeling.models.SmoothBrokenPowerLawSpectralModel.freeze", false]], "freeze() (gammapy.modeling.models.spatialmodel method)": [[263, "gammapy.modeling.models.SpatialModel.freeze", false]], "freeze() (gammapy.modeling.models.spectralmodel method)": [[264, "gammapy.modeling.models.SpectralModel.freeze", false]], "freeze() (gammapy.modeling.models.superexpcutoffpowerlaw3fglspectralmodel method)": [[265, "gammapy.modeling.models.SuperExpCutoffPowerLaw3FGLSpectralModel.freeze", false]], "freeze() (gammapy.modeling.models.superexpcutoffpowerlaw4fgldr3spectralmodel method)": [[266, "gammapy.modeling.models.SuperExpCutoffPowerLaw4FGLDR3SpectralModel.freeze", false]], "freeze() (gammapy.modeling.models.superexpcutoffpowerlaw4fglspectralmodel method)": [[267, "gammapy.modeling.models.SuperExpCutoffPowerLaw4FGLSpectralModel.freeze", false]], "freeze() (gammapy.modeling.models.templatendspatialmodel method)": [[269, "gammapy.modeling.models.TemplateNDSpatialModel.freeze", false]], "freeze() (gammapy.modeling.models.templatendspectralmodel method)": [[270, "gammapy.modeling.models.TemplateNDSpectralModel.freeze", false]], "freeze() (gammapy.modeling.models.templatenpredmodel method)": [[271, "gammapy.modeling.models.TemplateNPredModel.freeze", false]], "freeze() (gammapy.modeling.models.templatephasecurvetemporalmodel method)": [[272, "gammapy.modeling.models.TemplatePhaseCurveTemporalModel.freeze", false]], "freeze() (gammapy.modeling.models.templatespatialmodel method)": [[273, "gammapy.modeling.models.TemplateSpatialModel.freeze", false]], "freeze() (gammapy.modeling.models.templatespectralmodel method)": [[274, "gammapy.modeling.models.TemplateSpectralModel.freeze", false]], "freeze() (gammapy.modeling.models.temporalmodel method)": [[275, "gammapy.modeling.models.TemporalModel.freeze", false]], "freeze_all() (gammapy.modeling.parameters method)": [[214, "gammapy.modeling.Parameters.freeze_all", false]], "freeze_all() (gammapy.modeling.priorparameters method)": [[216, "gammapy.modeling.PriorParameters.freeze_all", false]], "from_aligned() (gammapy.maps.wcsgeom class method)": [[203, "gammapy.maps.WcsGeom.from_aligned", false]], "from_bounds() (gammapy.maps.mapaxis class method)": [[197, "gammapy.maps.MapAxis.from_bounds", false]], "from_default() (gammapy.maps.mapaxes class method)": [[196, "gammapy.maps.MapAxes.from_default", false]], "from_diagonal_response() (gammapy.irf.edispkernel class method)": [[149, "gammapy.irf.EDispKernel.from_diagonal_response", false]], "from_diagonal_response() (gammapy.irf.edispkernelmap class method)": [[150, "gammapy.irf.EDispKernelMap.from_diagonal_response", false]], "from_diagonal_response() (gammapy.irf.edispmap class method)": [[151, "gammapy.irf.EDispMap.from_diagonal_response", false]], "from_dict() (gammapy.astro.darkmatter.darkmatterannihilationspectralmodel class method)": [[19, "gammapy.astro.darkmatter.DarkMatterAnnihilationSpectralModel.from_dict", false]], "from_dict() (gammapy.astro.darkmatter.darkmatterdecayspectralmodel class method)": [[20, "gammapy.astro.darkmatter.DarkMatterDecaySpectralModel.from_dict", false]], "from_dict() (gammapy.astro.darkmatter.primaryflux class method)": [[26, "gammapy.astro.darkmatter.PrimaryFlux.from_dict", false]], "from_dict() (gammapy.datasets.fluxpointsdataset class method)": [[101, "gammapy.datasets.FluxPointsDataset.from_dict", false]], "from_dict() (gammapy.datasets.mapdataset class method)": [[102, "gammapy.datasets.MapDataset.from_dict", false]], "from_dict() (gammapy.datasets.mapdatasetonoff class method)": [[105, "gammapy.datasets.MapDatasetOnOff.from_dict", false]], "from_dict() (gammapy.datasets.spectrumdataset class method)": [[109, "gammapy.datasets.SpectrumDataset.from_dict", false]], "from_dict() (gammapy.datasets.spectrumdatasetonoff class method)": [[110, "gammapy.datasets.SpectrumDatasetOnOff.from_dict", false]], "from_dict() (gammapy.modeling.models.brokenpowerlawspectralmodel class method)": [[217, "gammapy.modeling.models.BrokenPowerLawSpectralModel.from_dict", false]], "from_dict() (gammapy.modeling.models.compoundspectralmodel class method)": [[218, "gammapy.modeling.models.CompoundSpectralModel.from_dict", false]], "from_dict() (gammapy.modeling.models.constantfluxspatialmodel class method)": [[219, "gammapy.modeling.models.ConstantFluxSpatialModel.from_dict", false]], "from_dict() (gammapy.modeling.models.constantspatialmodel class method)": [[220, "gammapy.modeling.models.ConstantSpatialModel.from_dict", false]], "from_dict() (gammapy.modeling.models.constantspectralmodel class method)": [[221, "gammapy.modeling.models.ConstantSpectralModel.from_dict", false]], "from_dict() (gammapy.modeling.models.constanttemporalmodel class method)": [[222, "gammapy.modeling.models.ConstantTemporalModel.from_dict", false]], "from_dict() (gammapy.modeling.models.datasetmodels class method)": [[223, "gammapy.modeling.models.DatasetModels.from_dict", false]], "from_dict() (gammapy.modeling.models.diskspatialmodel class method)": [[224, "gammapy.modeling.models.DiskSpatialModel.from_dict", false]], "from_dict() (gammapy.modeling.models.eblabsorptionnormspectralmodel class method)": [[225, "gammapy.modeling.models.EBLAbsorptionNormSpectralModel.from_dict", false]], "from_dict() (gammapy.modeling.models.expcutoffpowerlaw3fglspectralmodel class method)": [[227, "gammapy.modeling.models.ExpCutoffPowerLaw3FGLSpectralModel.from_dict", false]], "from_dict() (gammapy.modeling.models.expcutoffpowerlawnormspectralmodel class method)": [[228, "gammapy.modeling.models.ExpCutoffPowerLawNormSpectralModel.from_dict", false]], "from_dict() (gammapy.modeling.models.expcutoffpowerlawspectralmodel class method)": [[229, "gammapy.modeling.models.ExpCutoffPowerLawSpectralModel.from_dict", false]], "from_dict() (gammapy.modeling.models.expdecaytemporalmodel class method)": [[230, "gammapy.modeling.models.ExpDecayTemporalModel.from_dict", false]], "from_dict() (gammapy.modeling.models.fovbackgroundmodel class method)": [[231, "gammapy.modeling.models.FoVBackgroundModel.from_dict", false]], "from_dict() (gammapy.modeling.models.gaussianspatialmodel class method)": [[232, "gammapy.modeling.models.GaussianSpatialModel.from_dict", false]], "from_dict() (gammapy.modeling.models.gaussianspectralmodel class method)": [[233, "gammapy.modeling.models.GaussianSpectralModel.from_dict", false]], "from_dict() (gammapy.modeling.models.gaussiantemporalmodel class method)": [[234, "gammapy.modeling.models.GaussianTemporalModel.from_dict", false]], "from_dict() (gammapy.modeling.models.generalizedgaussianspatialmodel class method)": [[235, "gammapy.modeling.models.GeneralizedGaussianSpatialModel.from_dict", false]], "from_dict() (gammapy.modeling.models.generalizedgaussiantemporalmodel class method)": [[236, "gammapy.modeling.models.GeneralizedGaussianTemporalModel.from_dict", false]], "from_dict() (gammapy.modeling.models.lightcurvetemplatetemporalmodel class method)": [[237, "gammapy.modeling.models.LightCurveTemplateTemporalModel.from_dict", false]], "from_dict() (gammapy.modeling.models.lineartemporalmodel class method)": [[238, "gammapy.modeling.models.LinearTemporalModel.from_dict", false]], "from_dict() (gammapy.modeling.models.logparabolanormspectralmodel class method)": [[239, "gammapy.modeling.models.LogParabolaNormSpectralModel.from_dict", false]], "from_dict() (gammapy.modeling.models.logparabolaspectralmodel class method)": [[240, "gammapy.modeling.models.LogParabolaSpectralModel.from_dict", false]], "from_dict() (gammapy.modeling.models.meyercrabspectralmodel class method)": [[242, "gammapy.modeling.models.MeyerCrabSpectralModel.from_dict", false]], "from_dict() (gammapy.modeling.models.model static method)": [[243, "gammapy.modeling.models.Model.from_dict", false]], "from_dict() (gammapy.modeling.models.modelbase class method)": [[244, "gammapy.modeling.models.ModelBase.from_dict", false]], "from_dict() (gammapy.modeling.models.models class method)": [[245, "gammapy.modeling.models.Models.from_dict", false]], "from_dict() (gammapy.modeling.models.naimaspectralmodel class method)": [[246, "gammapy.modeling.models.NaimaSpectralModel.from_dict", false]], "from_dict() (gammapy.modeling.models.piecewisenormspatialmodel class method)": [[247, "gammapy.modeling.models.PiecewiseNormSpatialModel.from_dict", false]], "from_dict() (gammapy.modeling.models.piecewisenormspectralmodel class method)": [[248, "gammapy.modeling.models.PiecewiseNormSpectralModel.from_dict", false]], "from_dict() (gammapy.modeling.models.pointspatialmodel class method)": [[249, "gammapy.modeling.models.PointSpatialModel.from_dict", false]], "from_dict() (gammapy.modeling.models.powerlaw2spectralmodel class method)": [[250, "gammapy.modeling.models.PowerLaw2SpectralModel.from_dict", false]], "from_dict() (gammapy.modeling.models.powerlawnormspectralmodel class method)": [[251, "gammapy.modeling.models.PowerLawNormSpectralModel.from_dict", false]], "from_dict() (gammapy.modeling.models.powerlawspectralmodel class method)": [[252, "gammapy.modeling.models.PowerLawSpectralModel.from_dict", false]], "from_dict() (gammapy.modeling.models.powerlawtemporalmodel class method)": [[253, "gammapy.modeling.models.PowerLawTemporalModel.from_dict", false]], "from_dict() (gammapy.modeling.models.prior class method)": [[254, "gammapy.modeling.models.Prior.from_dict", false]], "from_dict() (gammapy.modeling.models.scalespectralmodel class method)": [[257, "gammapy.modeling.models.ScaleSpectralModel.from_dict", false]], "from_dict() (gammapy.modeling.models.shell2spatialmodel class method)": [[258, "gammapy.modeling.models.Shell2SpatialModel.from_dict", false]], "from_dict() (gammapy.modeling.models.shellspatialmodel class method)": [[259, "gammapy.modeling.models.ShellSpatialModel.from_dict", false]], "from_dict() (gammapy.modeling.models.sinetemporalmodel class method)": [[260, "gammapy.modeling.models.SineTemporalModel.from_dict", false]], "from_dict() (gammapy.modeling.models.skymodel class method)": [[261, "gammapy.modeling.models.SkyModel.from_dict", false]], "from_dict() (gammapy.modeling.models.smoothbrokenpowerlawspectralmodel class method)": [[262, "gammapy.modeling.models.SmoothBrokenPowerLawSpectralModel.from_dict", false]], "from_dict() (gammapy.modeling.models.spatialmodel class method)": [[263, "gammapy.modeling.models.SpatialModel.from_dict", false]], "from_dict() (gammapy.modeling.models.spectralmodel class method)": [[264, "gammapy.modeling.models.SpectralModel.from_dict", false]], "from_dict() (gammapy.modeling.models.superexpcutoffpowerlaw3fglspectralmodel class method)": [[265, "gammapy.modeling.models.SuperExpCutoffPowerLaw3FGLSpectralModel.from_dict", false]], "from_dict() (gammapy.modeling.models.superexpcutoffpowerlaw4fgldr3spectralmodel class method)": [[266, "gammapy.modeling.models.SuperExpCutoffPowerLaw4FGLDR3SpectralModel.from_dict", false]], "from_dict() (gammapy.modeling.models.superexpcutoffpowerlaw4fglspectralmodel class method)": [[267, "gammapy.modeling.models.SuperExpCutoffPowerLaw4FGLSpectralModel.from_dict", false]], "from_dict() (gammapy.modeling.models.templatendspatialmodel class method)": [[269, "gammapy.modeling.models.TemplateNDSpatialModel.from_dict", false]], "from_dict() (gammapy.modeling.models.templatendspectralmodel class method)": [[270, "gammapy.modeling.models.TemplateNDSpectralModel.from_dict", false]], "from_dict() (gammapy.modeling.models.templatenpredmodel class method)": [[271, "gammapy.modeling.models.TemplateNPredModel.from_dict", false]], "from_dict() (gammapy.modeling.models.templatephasecurvetemporalmodel class method)": [[272, "gammapy.modeling.models.TemplatePhaseCurveTemporalModel.from_dict", false]], "from_dict() (gammapy.modeling.models.templatespatialmodel class method)": [[273, "gammapy.modeling.models.TemplateSpatialModel.from_dict", false]], "from_dict() (gammapy.modeling.models.templatespectralmodel class method)": [[274, "gammapy.modeling.models.TemplateSpectralModel.from_dict", false]], "from_dict() (gammapy.modeling.models.temporalmodel class method)": [[275, "gammapy.modeling.models.TemporalModel.from_dict", false]], "from_dict() (gammapy.modeling.parameters class method)": [[214, "gammapy.modeling.Parameters.from_dict", false]], "from_dict() (gammapy.modeling.priorparameters class method)": [[216, "gammapy.modeling.PriorParameters.from_dict", false]], "from_dir() (gammapy.data.datastore class method)": [[82, "gammapy.data.DataStore.from_dir", false]], "from_edges() (gammapy.maps.mapaxis class method)": [[197, "gammapy.maps.MapAxis.from_edges", false]], "from_edisp_kernel() (gammapy.irf.edispkernelmap class method)": [[150, "gammapy.irf.EDispKernelMap.from_edisp_kernel", false]], "from_energy_bounds() (gammapy.maps.mapaxis class method)": [[197, "gammapy.maps.MapAxis.from_energy_bounds", false]], "from_energy_edges() (gammapy.maps.mapaxis class method)": [[197, "gammapy.maps.MapAxis.from_energy_edges", false]], "from_events_files() (gammapy.data.datastore class method)": [[82, "gammapy.data.DataStore.from_events_files", false]], "from_factor_matrix() (gammapy.modeling.covariance class method)": [[208, "gammapy.modeling.Covariance.from_factor_matrix", false]], "from_file() (gammapy.data.datastore class method)": [[82, "gammapy.data.DataStore.from_file", false]], "from_fits_header() (gammapy.data.fixedpointinginfo class method)": [[85, "gammapy.data.FixedPointingInfo.from_fits_header", false]], "from_gauss() (gammapy.irf.edispkernel class method)": [[149, "gammapy.irf.EDispKernel.from_gauss", false]], "from_gauss() (gammapy.irf.edispkernelmap class method)": [[150, "gammapy.irf.EDispKernelMap.from_gauss", false]], "from_gauss() (gammapy.irf.energydispersion2d class method)": [[154, "gammapy.irf.EnergyDispersion2D.from_gauss", false]], "from_gauss() (gammapy.irf.psfkernel class method)": [[160, "gammapy.irf.PSFKernel.from_gauss", false]], "from_gauss() (gammapy.irf.psfmap class method)": [[162, "gammapy.irf.PSFMap.from_gauss", false]], "from_gauss() (gammapy.irf.recopsfmap class method)": [[165, "gammapy.irf.RecoPSFMap.from_gauss", false]], "from_geom() (gammapy.irf.edispkernelmap class method)": [[150, "gammapy.irf.EDispKernelMap.from_geom", false]], "from_geom() (gammapy.irf.edispmap class method)": [[151, "gammapy.irf.EDispMap.from_geom", false]], "from_geom() (gammapy.irf.psfmap class method)": [[162, "gammapy.irf.PSFMap.from_geom", false]], "from_geom() (gammapy.irf.recopsfmap class method)": [[165, "gammapy.irf.RecoPSFMap.from_geom", false]], "from_geom() (gammapy.maps.hpxmap static method)": [[192, "gammapy.maps.HpxMap.from_geom", false]], "from_geom() (gammapy.maps.hpxndmap static method)": [[193, "gammapy.maps.HpxNDMap.from_geom", false]], "from_geom() (gammapy.maps.map static method)": [[195, "gammapy.maps.Map.from_geom", false]], "from_geom() (gammapy.maps.maps class method)": [[199, "gammapy.maps.Maps.from_geom", false]], "from_geom() (gammapy.maps.regionndmap static method)": [[201, "gammapy.maps.RegionNDMap.from_geom", false]], "from_geom() (gammapy.maps.wcsmap static method)": [[204, "gammapy.maps.WcsMap.from_geom", false]], "from_geom() (gammapy.maps.wcsndmap static method)": [[205, "gammapy.maps.WcsNDMap.from_geom", false]], "from_geoms() (gammapy.datasets.mapdataset class method)": [[102, "gammapy.datasets.MapDataset.from_geoms", false]], "from_geoms() (gammapy.datasets.mapdatasetonoff class method)": [[105, "gammapy.datasets.MapDatasetOnOff.from_geoms", false]], "from_geoms() (gammapy.datasets.spectrumdataset class method)": [[109, "gammapy.datasets.SpectrumDataset.from_geoms", false]], "from_geoms() (gammapy.datasets.spectrumdatasetonoff class method)": [[110, "gammapy.datasets.SpectrumDatasetOnOff.from_geoms", false]], "from_gti() (gammapy.maps.timemapaxis class method)": [[202, "gammapy.maps.TimeMapAxis.from_gti", false]], "from_gti_bounds() (gammapy.maps.timemapaxis class method)": [[202, "gammapy.maps.TimeMapAxis.from_gti_bounds", false]], "from_hdu() (gammapy.maps.hpxgeom class method)": [[191, "gammapy.maps.HpxGeom.from_hdu", false]], "from_hdu() (gammapy.maps.hpxndmap class method)": [[193, "gammapy.maps.HpxNDMap.from_hdu", false]], "from_hdu() (gammapy.maps.wcsndmap class method)": [[205, "gammapy.maps.WcsNDMap.from_hdu", false]], "from_hdulist() (gammapy.datasets.mapdataset class method)": [[102, "gammapy.datasets.MapDataset.from_hdulist", false]], "from_hdulist() (gammapy.datasets.mapdatasetonoff class method)": [[105, "gammapy.datasets.MapDatasetOnOff.from_hdulist", false]], "from_hdulist() (gammapy.datasets.spectrumdataset class method)": [[109, "gammapy.datasets.SpectrumDataset.from_hdulist", false]], "from_hdulist() (gammapy.datasets.spectrumdatasetonoff class method)": [[110, "gammapy.datasets.SpectrumDatasetOnOff.from_hdulist", false]], "from_hdulist() (gammapy.estimators.fluxmaps class method)": [[122, "gammapy.estimators.FluxMaps.from_hdulist", false]], "from_hdulist() (gammapy.estimators.fluxpoints class method)": [[124, "gammapy.estimators.FluxPoints.from_hdulist", false]], "from_hdulist() (gammapy.irf.background2d class method)": [[146, "gammapy.irf.Background2D.from_hdulist", false]], "from_hdulist() (gammapy.irf.background3d class method)": [[147, "gammapy.irf.Background3D.from_hdulist", false]], "from_hdulist() (gammapy.irf.backgroundirf class method)": [[148, "gammapy.irf.BackgroundIRF.from_hdulist", false]], "from_hdulist() (gammapy.irf.edispkernel class method)": [[149, "gammapy.irf.EDispKernel.from_hdulist", false]], "from_hdulist() (gammapy.irf.edispkernelmap class method)": [[150, "gammapy.irf.EDispKernelMap.from_hdulist", false]], "from_hdulist() (gammapy.irf.edispmap class method)": [[151, "gammapy.irf.EDispMap.from_hdulist", false]], "from_hdulist() (gammapy.irf.effectiveareatable2d class method)": [[152, "gammapy.irf.EffectiveAreaTable2D.from_hdulist", false]], "from_hdulist() (gammapy.irf.energydependentmultigausspsf class method)": [[153, "gammapy.irf.EnergyDependentMultiGaussPSF.from_hdulist", false]], "from_hdulist() (gammapy.irf.energydispersion2d class method)": [[154, "gammapy.irf.EnergyDispersion2D.from_hdulist", false]], "from_hdulist() (gammapy.irf.irf class method)": [[156, "gammapy.irf.IRF.from_hdulist", false]], "from_hdulist() (gammapy.irf.irfmap class method)": [[157, "gammapy.irf.IRFMap.from_hdulist", false]], "from_hdulist() (gammapy.irf.parametricpsf class method)": [[163, "gammapy.irf.ParametricPSF.from_hdulist", false]], "from_hdulist() (gammapy.irf.psf3d class method)": [[159, "gammapy.irf.PSF3D.from_hdulist", false]], "from_hdulist() (gammapy.irf.psfking class method)": [[161, "gammapy.irf.PSFKing.from_hdulist", false]], "from_hdulist() (gammapy.irf.psfmap class method)": [[162, "gammapy.irf.PSFMap.from_hdulist", false]], "from_hdulist() (gammapy.irf.radmax2d class method)": [[164, "gammapy.irf.RadMax2D.from_hdulist", false]], "from_hdulist() (gammapy.irf.recopsfmap class method)": [[165, "gammapy.irf.RecoPSFMap.from_hdulist", false]], "from_hdulist() (gammapy.maps.geom class method)": [[190, "gammapy.maps.Geom.from_hdulist", false]], "from_hdulist() (gammapy.maps.hpxgeom class method)": [[191, "gammapy.maps.HpxGeom.from_hdulist", false]], "from_hdulist() (gammapy.maps.hpxmap class method)": [[192, "gammapy.maps.HpxMap.from_hdulist", false]], "from_hdulist() (gammapy.maps.hpxndmap class method)": [[193, "gammapy.maps.HpxNDMap.from_hdulist", false]], "from_hdulist() (gammapy.maps.map static method)": [[195, "gammapy.maps.Map.from_hdulist", false]], "from_hdulist() (gammapy.maps.maps class method)": [[199, "gammapy.maps.Maps.from_hdulist", false]], "from_hdulist() (gammapy.maps.regiongeom class method)": [[200, "gammapy.maps.RegionGeom.from_hdulist", false]], "from_hdulist() (gammapy.maps.regionndmap class method)": [[201, "gammapy.maps.RegionNDMap.from_hdulist", false]], "from_hdulist() (gammapy.maps.wcsgeom class method)": [[203, "gammapy.maps.WcsGeom.from_hdulist", false]], "from_hdulist() (gammapy.maps.wcsmap class method)": [[204, "gammapy.maps.WcsMap.from_hdulist", false]], "from_hdulist() (gammapy.maps.wcsndmap class method)": [[205, "gammapy.maps.WcsNDMap.from_hdulist", false]], "from_header() (gammapy.data.eventlistmetadata class method)": [[84, "gammapy.data.EventListMetaData.from_header", false]], "from_header() (gammapy.data.observationmetadata class method)": [[90, "gammapy.data.ObservationMetaData.from_header", false]], "from_header() (gammapy.datasets.mapdatasetmetadata class method)": [[104, "gammapy.datasets.MapDatasetMetaData.from_header", false]], "from_header() (gammapy.estimators.fluxmetadata class method)": [[123, "gammapy.estimators.FluxMetaData.from_header", false]], "from_header() (gammapy.maps.hpxgeom class method)": [[191, "gammapy.maps.HpxGeom.from_header", false]], "from_header() (gammapy.maps.wcsgeom class method)": [[203, "gammapy.maps.WcsGeom.from_header", false]], "from_irf() (gammapy.irf.radmax2d class method)": [[164, "gammapy.irf.RadMax2D.from_irf", false]], "from_log10() (gammapy.modeling.models.logparabolanormspectralmodel class method)": [[239, "gammapy.modeling.models.LogParabolaNormSpectralModel.from_log10", false]], "from_log10() (gammapy.modeling.models.logparabolaspectralmodel class method)": [[240, "gammapy.modeling.models.LogParabolaSpectralModel.from_log10", false]], "from_map_dataset() (gammapy.datasets.mapdatasetonoff class method)": [[105, "gammapy.datasets.MapDatasetOnOff.from_map_dataset", false]], "from_map_dataset() (gammapy.datasets.spectrumdatasetonoff class method)": [[110, "gammapy.datasets.SpectrumDatasetOnOff.from_map_dataset", false]], "from_maps() (gammapy.estimators.fluxmaps class method)": [[122, "gammapy.estimators.FluxMaps.from_maps", false]], "from_maps() (gammapy.estimators.fluxpoints class method)": [[124, "gammapy.estimators.FluxPoints.from_maps", false]], "from_nodes() (gammapy.maps.mapaxis class method)": [[197, "gammapy.maps.MapAxis.from_nodes", false]], "from_orm() (gammapy.analysis.analysisconfig class method)": [[16, "gammapy.analysis.AnalysisConfig.from_orm", false]], "from_orm() (gammapy.data.eventlistmetadata class method)": [[84, "gammapy.data.EventListMetaData.from_orm", false]], "from_orm() (gammapy.data.observationmetadata class method)": [[90, "gammapy.data.ObservationMetaData.from_orm", false]], "from_orm() (gammapy.datasets.mapdatasetmetadata class method)": [[104, "gammapy.datasets.MapDatasetMetaData.from_orm", false]], "from_orm() (gammapy.estimators.fluxmetadata class method)": [[123, "gammapy.estimators.FluxMetaData.from_orm", false]], "from_pandas() (gammapy.data.hduindextable class method)": [[87, "gammapy.data.HDUIndexTable.from_pandas", false]], "from_pandas() (gammapy.data.observationtable class method)": [[91, "gammapy.data.ObservationTable.from_pandas", false]], "from_parameters() (gammapy.astro.darkmatter.darkmatterannihilationspectralmodel class method)": [[19, "gammapy.astro.darkmatter.DarkMatterAnnihilationSpectralModel.from_parameters", false]], "from_parameters() (gammapy.astro.darkmatter.darkmatterdecayspectralmodel class method)": [[20, "gammapy.astro.darkmatter.DarkMatterDecaySpectralModel.from_parameters", false]], "from_parameters() (gammapy.astro.darkmatter.primaryflux class method)": [[26, "gammapy.astro.darkmatter.PrimaryFlux.from_parameters", false]], "from_parameters() (gammapy.modeling.models.brokenpowerlawspectralmodel class method)": [[217, "gammapy.modeling.models.BrokenPowerLawSpectralModel.from_parameters", false]], "from_parameters() (gammapy.modeling.models.compoundspectralmodel class method)": [[218, "gammapy.modeling.models.CompoundSpectralModel.from_parameters", false]], "from_parameters() (gammapy.modeling.models.constantfluxspatialmodel class method)": [[219, "gammapy.modeling.models.ConstantFluxSpatialModel.from_parameters", false]], "from_parameters() (gammapy.modeling.models.constantspatialmodel class method)": [[220, "gammapy.modeling.models.ConstantSpatialModel.from_parameters", false]], "from_parameters() (gammapy.modeling.models.constantspectralmodel class method)": [[221, "gammapy.modeling.models.ConstantSpectralModel.from_parameters", false]], "from_parameters() (gammapy.modeling.models.constanttemporalmodel class method)": [[222, "gammapy.modeling.models.ConstantTemporalModel.from_parameters", false]], "from_parameters() (gammapy.modeling.models.diskspatialmodel class method)": [[224, "gammapy.modeling.models.DiskSpatialModel.from_parameters", false]], "from_parameters() (gammapy.modeling.models.eblabsorptionnormspectralmodel class method)": [[225, "gammapy.modeling.models.EBLAbsorptionNormSpectralModel.from_parameters", false]], "from_parameters() (gammapy.modeling.models.expcutoffpowerlaw3fglspectralmodel class method)": [[227, "gammapy.modeling.models.ExpCutoffPowerLaw3FGLSpectralModel.from_parameters", false]], "from_parameters() (gammapy.modeling.models.expcutoffpowerlawnormspectralmodel class method)": [[228, "gammapy.modeling.models.ExpCutoffPowerLawNormSpectralModel.from_parameters", false]], "from_parameters() (gammapy.modeling.models.expcutoffpowerlawspectralmodel class method)": [[229, "gammapy.modeling.models.ExpCutoffPowerLawSpectralModel.from_parameters", false]], "from_parameters() (gammapy.modeling.models.expdecaytemporalmodel class method)": [[230, "gammapy.modeling.models.ExpDecayTemporalModel.from_parameters", false]], "from_parameters() (gammapy.modeling.models.fovbackgroundmodel class method)": [[231, "gammapy.modeling.models.FoVBackgroundModel.from_parameters", false]], "from_parameters() (gammapy.modeling.models.gaussianspatialmodel class method)": [[232, "gammapy.modeling.models.GaussianSpatialModel.from_parameters", false]], "from_parameters() (gammapy.modeling.models.gaussianspectralmodel class method)": [[233, "gammapy.modeling.models.GaussianSpectralModel.from_parameters", false]], "from_parameters() (gammapy.modeling.models.gaussiantemporalmodel class method)": [[234, "gammapy.modeling.models.GaussianTemporalModel.from_parameters", false]], "from_parameters() (gammapy.modeling.models.generalizedgaussianspatialmodel class method)": [[235, "gammapy.modeling.models.GeneralizedGaussianSpatialModel.from_parameters", false]], "from_parameters() (gammapy.modeling.models.generalizedgaussiantemporalmodel class method)": [[236, "gammapy.modeling.models.GeneralizedGaussianTemporalModel.from_parameters", false]], "from_parameters() (gammapy.modeling.models.lightcurvetemplatetemporalmodel class method)": [[237, "gammapy.modeling.models.LightCurveTemplateTemporalModel.from_parameters", false]], "from_parameters() (gammapy.modeling.models.lineartemporalmodel class method)": [[238, "gammapy.modeling.models.LinearTemporalModel.from_parameters", false]], "from_parameters() (gammapy.modeling.models.logparabolanormspectralmodel class method)": [[239, "gammapy.modeling.models.LogParabolaNormSpectralModel.from_parameters", false]], "from_parameters() (gammapy.modeling.models.logparabolaspectralmodel class method)": [[240, "gammapy.modeling.models.LogParabolaSpectralModel.from_parameters", false]], "from_parameters() (gammapy.modeling.models.meyercrabspectralmodel class method)": [[242, "gammapy.modeling.models.MeyerCrabSpectralModel.from_parameters", false]], "from_parameters() (gammapy.modeling.models.modelbase class method)": [[244, "gammapy.modeling.models.ModelBase.from_parameters", false]], "from_parameters() (gammapy.modeling.models.naimaspectralmodel class method)": [[246, "gammapy.modeling.models.NaimaSpectralModel.from_parameters", false]], "from_parameters() (gammapy.modeling.models.piecewisenormspatialmodel class method)": [[247, "gammapy.modeling.models.PiecewiseNormSpatialModel.from_parameters", false]], "from_parameters() (gammapy.modeling.models.piecewisenormspectralmodel class method)": [[248, "gammapy.modeling.models.PiecewiseNormSpectralModel.from_parameters", false]], "from_parameters() (gammapy.modeling.models.pointspatialmodel class method)": [[249, "gammapy.modeling.models.PointSpatialModel.from_parameters", false]], "from_parameters() (gammapy.modeling.models.powerlaw2spectralmodel class method)": [[250, "gammapy.modeling.models.PowerLaw2SpectralModel.from_parameters", false]], "from_parameters() (gammapy.modeling.models.powerlawnormspectralmodel class method)": [[251, "gammapy.modeling.models.PowerLawNormSpectralModel.from_parameters", false]], "from_parameters() (gammapy.modeling.models.powerlawspectralmodel class method)": [[252, "gammapy.modeling.models.PowerLawSpectralModel.from_parameters", false]], "from_parameters() (gammapy.modeling.models.powerlawtemporalmodel class method)": [[253, "gammapy.modeling.models.PowerLawTemporalModel.from_parameters", false]], "from_parameters() (gammapy.modeling.models.prior class method)": [[254, "gammapy.modeling.models.Prior.from_parameters", false]], "from_parameters() (gammapy.modeling.models.scalespectralmodel class method)": [[257, "gammapy.modeling.models.ScaleSpectralModel.from_parameters", false]], "from_parameters() (gammapy.modeling.models.shell2spatialmodel class method)": [[258, "gammapy.modeling.models.Shell2SpatialModel.from_parameters", false]], "from_parameters() (gammapy.modeling.models.shellspatialmodel class method)": [[259, "gammapy.modeling.models.ShellSpatialModel.from_parameters", false]], "from_parameters() (gammapy.modeling.models.sinetemporalmodel class method)": [[260, "gammapy.modeling.models.SineTemporalModel.from_parameters", false]], "from_parameters() (gammapy.modeling.models.skymodel class method)": [[261, "gammapy.modeling.models.SkyModel.from_parameters", false]], "from_parameters() (gammapy.modeling.models.smoothbrokenpowerlawspectralmodel class method)": [[262, "gammapy.modeling.models.SmoothBrokenPowerLawSpectralModel.from_parameters", false]], "from_parameters() (gammapy.modeling.models.spatialmodel class method)": [[263, "gammapy.modeling.models.SpatialModel.from_parameters", false]], "from_parameters() (gammapy.modeling.models.spectralmodel class method)": [[264, "gammapy.modeling.models.SpectralModel.from_parameters", false]], "from_parameters() (gammapy.modeling.models.superexpcutoffpowerlaw3fglspectralmodel class method)": [[265, "gammapy.modeling.models.SuperExpCutoffPowerLaw3FGLSpectralModel.from_parameters", false]], "from_parameters() (gammapy.modeling.models.superexpcutoffpowerlaw4fgldr3spectralmodel class method)": [[266, "gammapy.modeling.models.SuperExpCutoffPowerLaw4FGLDR3SpectralModel.from_parameters", false]], "from_parameters() (gammapy.modeling.models.superexpcutoffpowerlaw4fglspectralmodel class method)": [[267, "gammapy.modeling.models.SuperExpCutoffPowerLaw4FGLSpectralModel.from_parameters", false]], "from_parameters() (gammapy.modeling.models.templatendspatialmodel class method)": [[269, "gammapy.modeling.models.TemplateNDSpatialModel.from_parameters", false]], "from_parameters() (gammapy.modeling.models.templatendspectralmodel class method)": [[270, "gammapy.modeling.models.TemplateNDSpectralModel.from_parameters", false]], "from_parameters() (gammapy.modeling.models.templatenpredmodel class method)": [[271, "gammapy.modeling.models.TemplateNPredModel.from_parameters", false]], "from_parameters() (gammapy.modeling.models.templatephasecurvetemporalmodel class method)": [[272, "gammapy.modeling.models.TemplatePhaseCurveTemporalModel.from_parameters", false]], "from_parameters() (gammapy.modeling.models.templatespatialmodel class method)": [[273, "gammapy.modeling.models.TemplateSpatialModel.from_parameters", false]], "from_parameters() (gammapy.modeling.models.templatespectralmodel class method)": [[274, "gammapy.modeling.models.TemplateSpectralModel.from_parameters", false]], "from_parameters() (gammapy.modeling.models.temporalmodel class method)": [[275, "gammapy.modeling.models.TemporalModel.from_parameters", false]], "from_parametrization() (gammapy.irf.effectiveareatable2d class method)": [[152, "gammapy.irf.EffectiveAreaTable2D.from_parametrization", false]], "from_position() (gammapy.modeling.models.constantfluxspatialmodel class method)": [[219, "gammapy.modeling.models.ConstantFluxSpatialModel.from_position", false]], "from_position() (gammapy.modeling.models.constantspatialmodel class method)": [[220, "gammapy.modeling.models.ConstantSpatialModel.from_position", false]], "from_position() (gammapy.modeling.models.diskspatialmodel class method)": [[224, "gammapy.modeling.models.DiskSpatialModel.from_position", false]], "from_position() (gammapy.modeling.models.gaussianspatialmodel class method)": [[232, "gammapy.modeling.models.GaussianSpatialModel.from_position", false]], "from_position() (gammapy.modeling.models.generalizedgaussianspatialmodel class method)": [[235, "gammapy.modeling.models.GeneralizedGaussianSpatialModel.from_position", false]], "from_position() (gammapy.modeling.models.piecewisenormspatialmodel class method)": [[247, "gammapy.modeling.models.PiecewiseNormSpatialModel.from_position", false]], "from_position() (gammapy.modeling.models.pointspatialmodel class method)": [[249, "gammapy.modeling.models.PointSpatialModel.from_position", false]], "from_position() (gammapy.modeling.models.shell2spatialmodel class method)": [[258, "gammapy.modeling.models.Shell2SpatialModel.from_position", false]], "from_position() (gammapy.modeling.models.shellspatialmodel class method)": [[259, "gammapy.modeling.models.ShellSpatialModel.from_position", false]], "from_position() (gammapy.modeling.models.spatialmodel class method)": [[263, "gammapy.modeling.models.SpatialModel.from_position", false]], "from_position() (gammapy.modeling.models.templatendspatialmodel class method)": [[269, "gammapy.modeling.models.TemplateNDSpatialModel.from_position", false]], "from_position() (gammapy.modeling.models.templatespatialmodel class method)": [[273, "gammapy.modeling.models.TemplateSpatialModel.from_position", false]], "from_region() (gammapy.modeling.models.diskspatialmodel class method)": [[224, "gammapy.modeling.models.DiskSpatialModel.from_region", false]], "from_region_map() (gammapy.modeling.models.templatespectralmodel class method)": [[274, "gammapy.modeling.models.TemplateSpectralModel.from_region_map", false]], "from_regions() (gammapy.maps.regiongeom class method)": [[200, "gammapy.maps.RegionGeom.from_regions", false]], "from_spatial_model() (gammapy.irf.psfkernel class method)": [[160, "gammapy.irf.PSFKernel.from_spatial_model", false]], "from_spectrum_dataset() (gammapy.datasets.spectrumdatasetonoff class method)": [[110, "gammapy.datasets.SpectrumDatasetOnOff.from_spectrum_dataset", false]], "from_stack() (gammapy.data.eventlist class method)": [[83, "gammapy.data.EventList.from_stack", false]], "from_stack() (gammapy.data.gti class method)": [[86, "gammapy.data.GTI.from_stack", false]], "from_stack() (gammapy.data.observations class method)": [[92, "gammapy.data.Observations.from_stack", false]], "from_stack() (gammapy.estimators.fluxmaps class method)": [[122, "gammapy.estimators.FluxMaps.from_stack", false]], "from_stack() (gammapy.estimators.fluxpoints class method)": [[124, "gammapy.estimators.FluxPoints.from_stack", false]], "from_stack() (gammapy.maps.hpxmap class method)": [[192, "gammapy.maps.HpxMap.from_stack", false]], "from_stack() (gammapy.maps.hpxndmap class method)": [[193, "gammapy.maps.HpxNDMap.from_stack", false]], "from_stack() (gammapy.maps.labelmapaxis class method)": [[194, "gammapy.maps.LabelMapAxis.from_stack", false]], "from_stack() (gammapy.maps.map class method)": [[195, "gammapy.maps.Map.from_stack", false]], "from_stack() (gammapy.maps.mapaxis class method)": [[197, "gammapy.maps.MapAxis.from_stack", false]], "from_stack() (gammapy.maps.regionndmap class method)": [[201, "gammapy.maps.RegionNDMap.from_stack", false]], "from_stack() (gammapy.maps.wcsmap class method)": [[204, "gammapy.maps.WcsMap.from_stack", false]], "from_stack() (gammapy.maps.wcsndmap class method)": [[205, "gammapy.maps.WcsNDMap.from_stack", false]], "from_stack() (gammapy.modeling.covariance class method)": [[208, "gammapy.modeling.Covariance.from_stack", false]], "from_stack() (gammapy.modeling.parameters class method)": [[214, "gammapy.modeling.Parameters.from_stack", false]], "from_stack() (gammapy.modeling.priorparameters class method)": [[216, "gammapy.modeling.PriorParameters.from_stack", false]], "from_table() (gammapy.estimators.fluxpoints class method)": [[124, "gammapy.estimators.FluxPoints.from_table", false]], "from_table() (gammapy.irf.background2d class method)": [[146, "gammapy.irf.Background2D.from_table", false]], "from_table() (gammapy.irf.background3d class method)": [[147, "gammapy.irf.Background3D.from_table", false]], "from_table() (gammapy.irf.backgroundirf class method)": [[148, "gammapy.irf.BackgroundIRF.from_table", false]], "from_table() (gammapy.irf.edispkernel class method)": [[149, "gammapy.irf.EDispKernel.from_table", false]], "from_table() (gammapy.irf.effectiveareatable2d class method)": [[152, "gammapy.irf.EffectiveAreaTable2D.from_table", false]], "from_table() (gammapy.irf.energydependentmultigausspsf class method)": [[153, "gammapy.irf.EnergyDependentMultiGaussPSF.from_table", false]], "from_table() (gammapy.irf.energydispersion2d class method)": [[154, "gammapy.irf.EnergyDispersion2D.from_table", false]], "from_table() (gammapy.irf.irf class method)": [[156, "gammapy.irf.IRF.from_table", false]], "from_table() (gammapy.irf.parametricpsf class method)": [[163, "gammapy.irf.ParametricPSF.from_table", false]], "from_table() (gammapy.irf.psf3d class method)": [[159, "gammapy.irf.PSF3D.from_table", false]], "from_table() (gammapy.irf.psfking class method)": [[161, "gammapy.irf.PSFKing.from_table", false]], "from_table() (gammapy.irf.radmax2d class method)": [[164, "gammapy.irf.RadMax2D.from_table", false]], "from_table() (gammapy.maps.labelmapaxis class method)": [[194, "gammapy.maps.LabelMapAxis.from_table", false]], "from_table() (gammapy.maps.mapaxes class method)": [[196, "gammapy.maps.MapAxes.from_table", false]], "from_table() (gammapy.maps.mapaxis class method)": [[197, "gammapy.maps.MapAxis.from_table", false]], "from_table() (gammapy.maps.regionndmap class method)": [[201, "gammapy.maps.RegionNDMap.from_table", false]], "from_table() (gammapy.maps.timemapaxis class method)": [[202, "gammapy.maps.TimeMapAxis.from_table", false]], "from_table() (gammapy.modeling.models.lightcurvetemplatetemporalmodel class method)": [[237, "gammapy.modeling.models.LightCurveTemplateTemporalModel.from_table", false]], "from_table_hdu() (gammapy.data.gti class method)": [[86, "gammapy.data.GTI.from_table_hdu", false]], "from_table_hdu() (gammapy.maps.mapaxes class method)": [[196, "gammapy.maps.MapAxes.from_table_hdu", false]], "from_table_hdu() (gammapy.maps.mapaxis class method)": [[197, "gammapy.maps.MapAxis.from_table_hdu", false]], "from_time_bounds() (gammapy.maps.timemapaxis class method)": [[202, "gammapy.maps.TimeMapAxis.from_time_bounds", false]], "from_time_edges() (gammapy.maps.timemapaxis class method)": [[202, "gammapy.maps.TimeMapAxis.from_time_edges", false]], "from_time_intervals() (gammapy.data.gti class method)": [[86, "gammapy.data.GTI.from_time_intervals", false]], "from_wcs_tiles() (gammapy.maps.hpxndmap class method)": [[193, "gammapy.maps.HpxNDMap.from_wcs_tiles", false]], "from_yaml() (gammapy.analysis.analysisconfig class method)": [[16, "gammapy.analysis.AnalysisConfig.from_yaml", false]], "from_yaml() (gammapy.modeling.models.datasetmodels class method)": [[223, "gammapy.modeling.models.DatasetModels.from_yaml", false]], "from_yaml() (gammapy.modeling.models.models class method)": [[245, "gammapy.modeling.models.Models.from_yaml", false]], "from_yaml() (in module gammapy.utils.scripts)": [[340, "gammapy.utils.scripts.from_yaml", false]], "frozen (gammapy.astro.darkmatter.darkmatterannihilationspectralmodel attribute)": [[19, "gammapy.astro.darkmatter.DarkMatterAnnihilationSpectralModel.frozen", false]], "frozen (gammapy.astro.darkmatter.darkmatterdecayspectralmodel attribute)": [[20, "gammapy.astro.darkmatter.DarkMatterDecaySpectralModel.frozen", false]], "frozen (gammapy.astro.darkmatter.primaryflux attribute)": [[26, "gammapy.astro.darkmatter.PrimaryFlux.frozen", false]], "frozen (gammapy.modeling.models.brokenpowerlawspectralmodel attribute)": [[217, "gammapy.modeling.models.BrokenPowerLawSpectralModel.frozen", false]], "frozen (gammapy.modeling.models.compoundspectralmodel attribute)": [[218, "gammapy.modeling.models.CompoundSpectralModel.frozen", false]], "frozen (gammapy.modeling.models.constantfluxspatialmodel attribute)": [[219, "gammapy.modeling.models.ConstantFluxSpatialModel.frozen", false]], "frozen (gammapy.modeling.models.constantspatialmodel attribute)": [[220, "gammapy.modeling.models.ConstantSpatialModel.frozen", false]], "frozen (gammapy.modeling.models.constantspectralmodel attribute)": [[221, "gammapy.modeling.models.ConstantSpectralModel.frozen", false]], "frozen (gammapy.modeling.models.constanttemporalmodel attribute)": [[222, "gammapy.modeling.models.ConstantTemporalModel.frozen", false]], "frozen (gammapy.modeling.models.datasetmodels attribute)": [[223, "gammapy.modeling.models.DatasetModels.frozen", false]], "frozen (gammapy.modeling.models.diskspatialmodel attribute)": [[224, "gammapy.modeling.models.DiskSpatialModel.frozen", false]], "frozen (gammapy.modeling.models.eblabsorptionnormspectralmodel attribute)": [[225, "gammapy.modeling.models.EBLAbsorptionNormSpectralModel.frozen", false]], "frozen (gammapy.modeling.models.expcutoffpowerlaw3fglspectralmodel attribute)": [[227, "gammapy.modeling.models.ExpCutoffPowerLaw3FGLSpectralModel.frozen", false]], "frozen (gammapy.modeling.models.expcutoffpowerlawnormspectralmodel attribute)": [[228, "gammapy.modeling.models.ExpCutoffPowerLawNormSpectralModel.frozen", false]], "frozen (gammapy.modeling.models.expcutoffpowerlawspectralmodel attribute)": [[229, "gammapy.modeling.models.ExpCutoffPowerLawSpectralModel.frozen", false]], "frozen (gammapy.modeling.models.expdecaytemporalmodel attribute)": [[230, "gammapy.modeling.models.ExpDecayTemporalModel.frozen", false]], "frozen (gammapy.modeling.models.fovbackgroundmodel attribute)": [[231, "gammapy.modeling.models.FoVBackgroundModel.frozen", false]], "frozen (gammapy.modeling.models.gaussianspatialmodel attribute)": [[232, "gammapy.modeling.models.GaussianSpatialModel.frozen", false]], "frozen (gammapy.modeling.models.gaussianspectralmodel attribute)": [[233, "gammapy.modeling.models.GaussianSpectralModel.frozen", false]], "frozen (gammapy.modeling.models.gaussiantemporalmodel attribute)": [[234, "gammapy.modeling.models.GaussianTemporalModel.frozen", false]], "frozen (gammapy.modeling.models.generalizedgaussianspatialmodel attribute)": [[235, "gammapy.modeling.models.GeneralizedGaussianSpatialModel.frozen", false]], "frozen (gammapy.modeling.models.generalizedgaussiantemporalmodel attribute)": [[236, "gammapy.modeling.models.GeneralizedGaussianTemporalModel.frozen", false]], "frozen (gammapy.modeling.models.lightcurvetemplatetemporalmodel attribute)": [[237, "gammapy.modeling.models.LightCurveTemplateTemporalModel.frozen", false]], "frozen (gammapy.modeling.models.lineartemporalmodel attribute)": [[238, "gammapy.modeling.models.LinearTemporalModel.frozen", false]], "frozen (gammapy.modeling.models.logparabolanormspectralmodel attribute)": [[239, "gammapy.modeling.models.LogParabolaNormSpectralModel.frozen", false]], "frozen (gammapy.modeling.models.logparabolaspectralmodel attribute)": [[240, "gammapy.modeling.models.LogParabolaSpectralModel.frozen", false]], "frozen (gammapy.modeling.models.meyercrabspectralmodel attribute)": [[242, "gammapy.modeling.models.MeyerCrabSpectralModel.frozen", false]], "frozen (gammapy.modeling.models.modelbase attribute)": [[244, "gammapy.modeling.models.ModelBase.frozen", false]], "frozen (gammapy.modeling.models.models attribute)": [[245, "gammapy.modeling.models.Models.frozen", false]], "frozen (gammapy.modeling.models.naimaspectralmodel attribute)": [[246, "gammapy.modeling.models.NaimaSpectralModel.frozen", false]], "frozen (gammapy.modeling.models.piecewisenormspatialmodel attribute)": [[247, "gammapy.modeling.models.PiecewiseNormSpatialModel.frozen", false]], "frozen (gammapy.modeling.models.piecewisenormspectralmodel attribute)": [[248, "gammapy.modeling.models.PiecewiseNormSpectralModel.frozen", false]], "frozen (gammapy.modeling.models.pointspatialmodel attribute)": [[249, "gammapy.modeling.models.PointSpatialModel.frozen", false]], "frozen (gammapy.modeling.models.powerlaw2spectralmodel attribute)": [[250, "gammapy.modeling.models.PowerLaw2SpectralModel.frozen", false]], "frozen (gammapy.modeling.models.powerlawnormspectralmodel attribute)": [[251, "gammapy.modeling.models.PowerLawNormSpectralModel.frozen", false]], "frozen (gammapy.modeling.models.powerlawspectralmodel attribute)": [[252, "gammapy.modeling.models.PowerLawSpectralModel.frozen", false]], "frozen (gammapy.modeling.models.powerlawtemporalmodel attribute)": [[253, "gammapy.modeling.models.PowerLawTemporalModel.frozen", false]], "frozen (gammapy.modeling.models.prior attribute)": [[254, "gammapy.modeling.models.Prior.frozen", false]], "frozen (gammapy.modeling.models.scalespectralmodel attribute)": [[257, "gammapy.modeling.models.ScaleSpectralModel.frozen", false]], "frozen (gammapy.modeling.models.shell2spatialmodel attribute)": [[258, "gammapy.modeling.models.Shell2SpatialModel.frozen", false]], "frozen (gammapy.modeling.models.shellspatialmodel attribute)": [[259, "gammapy.modeling.models.ShellSpatialModel.frozen", false]], "frozen (gammapy.modeling.models.sinetemporalmodel attribute)": [[260, "gammapy.modeling.models.SineTemporalModel.frozen", false]], "frozen (gammapy.modeling.models.skymodel attribute)": [[261, "gammapy.modeling.models.SkyModel.frozen", false]], "frozen (gammapy.modeling.models.smoothbrokenpowerlawspectralmodel attribute)": [[262, "gammapy.modeling.models.SmoothBrokenPowerLawSpectralModel.frozen", false]], "frozen (gammapy.modeling.models.spatialmodel attribute)": [[263, "gammapy.modeling.models.SpatialModel.frozen", false]], "frozen (gammapy.modeling.models.spectralmodel attribute)": [[264, "gammapy.modeling.models.SpectralModel.frozen", false]], "frozen (gammapy.modeling.models.superexpcutoffpowerlaw3fglspectralmodel attribute)": [[265, "gammapy.modeling.models.SuperExpCutoffPowerLaw3FGLSpectralModel.frozen", false]], "frozen (gammapy.modeling.models.superexpcutoffpowerlaw4fgldr3spectralmodel attribute)": [[266, "gammapy.modeling.models.SuperExpCutoffPowerLaw4FGLDR3SpectralModel.frozen", false]], "frozen (gammapy.modeling.models.superexpcutoffpowerlaw4fglspectralmodel attribute)": [[267, "gammapy.modeling.models.SuperExpCutoffPowerLaw4FGLSpectralModel.frozen", false]], "frozen (gammapy.modeling.models.templatendspatialmodel attribute)": [[269, "gammapy.modeling.models.TemplateNDSpatialModel.frozen", false]], "frozen (gammapy.modeling.models.templatendspectralmodel attribute)": [[270, "gammapy.modeling.models.TemplateNDSpectralModel.frozen", false]], "frozen (gammapy.modeling.models.templatenpredmodel attribute)": [[271, "gammapy.modeling.models.TemplateNPredModel.frozen", false]], "frozen (gammapy.modeling.models.templatephasecurvetemporalmodel attribute)": [[272, "gammapy.modeling.models.TemplatePhaseCurveTemporalModel.frozen", false]], "frozen (gammapy.modeling.models.templatespatialmodel attribute)": [[273, "gammapy.modeling.models.TemplateSpatialModel.frozen", false]], "frozen (gammapy.modeling.models.templatespectralmodel attribute)": [[274, "gammapy.modeling.models.TemplateSpectralModel.frozen", false]], "frozen (gammapy.modeling.models.temporalmodel attribute)": [[275, "gammapy.modeling.models.TemporalModel.frozen", false]], "frozen (gammapy.modeling.parameter attribute)": [[213, "gammapy.modeling.Parameter.frozen", false]], "frozen (gammapy.modeling.priorparameter attribute)": [[215, "gammapy.modeling.PriorParameter.frozen", false]], "gadf": [[573, "term-GADF", true]], "galactic (gammapy.data.eventlist attribute)": [[83, "gammapy.data.EventList.galactic", false]], "galactic() (in module gammapy.utils.coordinates)": [[307, "gammapy.utils.coordinates.galactic", false]], "galactic_median (gammapy.data.eventlist attribute)": [[83, "gammapy.data.EventList.galactic_median", false]], "gammapy command line option": [[11, "cmdoption-gammapy-ignore-warnings", false], [11, "cmdoption-gammapy-log-level", false], [11, "cmdoption-gammapy-version", false]], "gammapy-analysis-config command line option": [[11, "cmdoption-gammapy-analysis-config-filename", false], [11, "cmdoption-gammapy-analysis-config-overwrite", false]], "gammapy-analysis-run command line option": [[11, "cmdoption-gammapy-analysis-run-filename", false], [11, "cmdoption-gammapy-analysis-run-out", false], [11, "cmdoption-gammapy-analysis-run-overwrite", false]], "gammapy-download-datasets command line option": [[11, "cmdoption-gammapy-download-datasets-out", false], [11, "cmdoption-gammapy-download-datasets-release", false]], "gammapy-download-notebooks command line option": [[11, "cmdoption-gammapy-download-notebooks-out", false], [11, "cmdoption-gammapy-download-notebooks-release", false]], "gammapy-info command line option": [[11, "cmdoption-gammapy-info-dependencies", false], [11, "cmdoption-gammapy-info-envvar", false], [11, "cmdoption-gammapy-info-system", false], [11, "cmdoption-gammapy-info-version", false]], "gammapy.analysis": [[0, "module-gammapy.analysis", false]], "gammapy.astro.darkmatter": [[1, "module-gammapy.astro.darkmatter", false]], "gammapy.astro.population": [[1, "module-gammapy.astro.population", false]], "gammapy.astro.source": [[1, "module-gammapy.astro.source", false]], "gammapy.catalog": [[2, "module-gammapy.catalog", false]], "gammapy.data": [[3, "module-gammapy.data", false]], "gammapy.datasets": [[4, "module-gammapy.datasets", false]], "gammapy.datasets.utils": [[4, "module-gammapy.datasets.utils", false]], "gammapy.estimators": [[5, "module-gammapy.estimators", false]], "gammapy.estimators.utils": [[5, "module-gammapy.estimators.utils", false]], "gammapy.irf": [[7, "module-gammapy.irf", false]], "gammapy.makers": [[8, "module-gammapy.makers", false]], "gammapy.makers.utils": [[8, "module-gammapy.makers.utils", false]], "gammapy.maps": [[9, "module-gammapy.maps", false]], "gammapy.modeling": [[10, "module-gammapy.modeling", false]], "gammapy.modeling.models": [[10, "module-gammapy.modeling.models", false]], "gammapy.modeling.models.utils": [[10, "module-gammapy.modeling.models.utils", false]], "gammapy.stats": [[12, "module-gammapy.stats", false]], "gammapy.utils.cluster": [[13, "module-gammapy.utils.cluster", false]], "gammapy.utils.coordinates": [[13, "module-gammapy.utils.coordinates", false]], "gammapy.utils.fits": [[13, "module-gammapy.utils.fits", false]], "gammapy.utils.integrate": [[13, "module-gammapy.utils.integrate", false]], "gammapy.utils.interpolation": [[13, "module-gammapy.utils.interpolation", false]], "gammapy.utils.parallel": [[13, "module-gammapy.utils.parallel", false]], "gammapy.utils.random": [[13, "module-gammapy.utils.random", false]], "gammapy.utils.regions": [[13, "module-gammapy.utils.regions", false]], "gammapy.utils.scripts": [[13, "module-gammapy.utils.scripts", false]], "gammapy.utils.table": [[13, "module-gammapy.utils.table", false]], "gammapy.utils.testing": [[13, "module-gammapy.utils.testing", false]], "gammapy.utils.time": [[13, "module-gammapy.utils.time", false]], "gammapy.utils.units": [[13, "module-gammapy.utils.units", false]], "gammapy.visualization": [[14, "module-gammapy.visualization", false]], "gaussian_component() (gammapy.catalog.sourcecataloghgps method)": [[67, "gammapy.catalog.SourceCatalogHGPS.gaussian_component", false]], "gaussianspatialmodel (class in gammapy.modeling.models)": [[232, "gammapy.modeling.models.GaussianSpatialModel", false]], "gaussianspectralmodel (class in gammapy.modeling.models)": [[233, "gammapy.modeling.models.GaussianSpectralModel", false]], "gaussiantemporalmodel (class in gammapy.modeling.models)": [[234, "gammapy.modeling.models.GaussianTemporalModel", false]], "generalizedgaussianspatialmodel (class in gammapy.modeling.models)": [[235, "gammapy.modeling.models.GeneralizedGaussianSpatialModel", false]], "generalizedgaussiantemporalmodel (class in gammapy.modeling.models)": [[236, "gammapy.modeling.models.GeneralizedGaussianTemporalModel", false]], "geom (class in gammapy.maps)": [[190, "gammapy.maps.Geom", false]], "geom (gammapy.estimators.fluxmaps attribute)": [[122, "gammapy.estimators.FluxMaps.geom", false]], "geom (gammapy.estimators.fluxpoints attribute)": [[124, "gammapy.estimators.FluxPoints.geom", false]], "geom (gammapy.maps.hpxmap attribute)": [[192, "gammapy.maps.HpxMap.geom", false]], "geom (gammapy.maps.hpxndmap attribute)": [[193, "gammapy.maps.HpxNDMap.geom", false]], "geom (gammapy.maps.map attribute)": [[195, "gammapy.maps.Map.geom", false]], "geom (gammapy.maps.maps attribute)": [[199, "gammapy.maps.Maps.geom", false]], "geom (gammapy.maps.regionndmap attribute)": [[201, "gammapy.maps.RegionNDMap.geom", false]], "geom (gammapy.maps.wcsmap attribute)": [[204, "gammapy.maps.WcsMap.geom", false]], "geom (gammapy.maps.wcsndmap attribute)": [[205, "gammapy.maps.WcsNDMap.geom", false]], "geoms (gammapy.datasets.mapdataset attribute)": [[102, "gammapy.datasets.MapDataset.geoms", false]], "geoms (gammapy.datasets.mapdatasetonoff attribute)": [[105, "gammapy.datasets.MapDatasetOnOff.geoms", false]], "geoms (gammapy.datasets.spectrumdataset attribute)": [[109, "gammapy.datasets.SpectrumDataset.geoms", false]], "geoms (gammapy.datasets.spectrumdatasetonoff attribute)": [[110, "gammapy.datasets.SpectrumDatasetOnOff.geoms", false]], "get() (gammapy.maps.maps method)": [[199, "gammapy.maps.Maps.get", false]], "get_altaz() (gammapy.data.fixedpointinginfo method)": [[85, "gammapy.data.FixedPointingInfo.get_altaz", false]], "get_altaz() (gammapy.data.pointinginfo method)": [[94, "gammapy.data.PointingInfo.get_altaz", false]], "get_bias() (gammapy.irf.edispkernel method)": [[149, "gammapy.irf.EDispKernel.get_bias", false]], "get_bias_energy() (gammapy.irf.edispkernel method)": [[149, "gammapy.irf.EDispKernel.get_bias_energy", false]], "get_bounding_box() (gammapy.astro.population.casebattacharya1998 method)": [[28, "gammapy.astro.population.CaseBattacharya1998.get_bounding_box", false]], "get_bounding_box() (gammapy.astro.population.exponential method)": [[29, "gammapy.astro.population.Exponential.get_bounding_box", false]], "get_bounding_box() (gammapy.astro.population.faucherkaspi2006 method)": [[30, "gammapy.astro.population.FaucherKaspi2006.get_bounding_box", false]], "get_bounding_box() (gammapy.astro.population.faucherkaspi2006velocitybimodal method)": [[31, "gammapy.astro.population.FaucherKaspi2006VelocityBimodal.get_bounding_box", false]], "get_bounding_box() (gammapy.astro.population.faucherkaspi2006velocitymaxwellian method)": [[32, "gammapy.astro.population.FaucherKaspi2006VelocityMaxwellian.get_bounding_box", false]], "get_bounding_box() (gammapy.astro.population.lorimer2006 method)": [[35, "gammapy.astro.population.Lorimer2006.get_bounding_box", false]], "get_bounding_box() (gammapy.astro.population.paczynski1990 method)": [[36, "gammapy.astro.population.Paczynski1990.get_bounding_box", false]], "get_bounding_box() (gammapy.astro.population.paczynski1990velocity method)": [[37, "gammapy.astro.population.Paczynski1990Velocity.get_bounding_box", false]], "get_bounding_box() (gammapy.astro.population.yusifovkucuk2004 method)": [[39, "gammapy.astro.population.YusifovKucuk2004.get_bounding_box", false]], "get_bounding_box() (gammapy.astro.population.yusifovkucuk2004b method)": [[40, "gammapy.astro.population.YusifovKucuk2004B.get_bounding_box", false]], "get_by_coord() (gammapy.maps.hpxmap method)": [[192, "gammapy.maps.HpxMap.get_by_coord", false]], "get_by_coord() (gammapy.maps.hpxndmap method)": [[193, "gammapy.maps.HpxNDMap.get_by_coord", false]], "get_by_coord() (gammapy.maps.map method)": [[195, "gammapy.maps.Map.get_by_coord", false]], "get_by_coord() (gammapy.maps.regionndmap method)": [[201, "gammapy.maps.RegionNDMap.get_by_coord", false]], "get_by_coord() (gammapy.maps.wcsmap method)": [[204, "gammapy.maps.WcsMap.get_by_coord", false]], "get_by_coord() (gammapy.maps.wcsndmap method)": [[205, "gammapy.maps.WcsNDMap.get_by_coord", false]], "get_by_idx() (gammapy.maps.hpxmap method)": [[192, "gammapy.maps.HpxMap.get_by_idx", false]], "get_by_idx() (gammapy.maps.hpxndmap method)": [[193, "gammapy.maps.HpxNDMap.get_by_idx", false]], "get_by_idx() (gammapy.maps.map method)": [[195, "gammapy.maps.Map.get_by_idx", false]], "get_by_idx() (gammapy.maps.regionndmap method)": [[201, "gammapy.maps.RegionNDMap.get_by_idx", false]], "get_by_idx() (gammapy.maps.wcsmap method)": [[204, "gammapy.maps.WcsMap.get_by_idx", false]], "get_by_idx() (gammapy.maps.wcsndmap method)": [[205, "gammapy.maps.WcsNDMap.get_by_idx", false]], "get_by_pix() (gammapy.maps.hpxmap method)": [[192, "gammapy.maps.HpxMap.get_by_pix", false]], "get_by_pix() (gammapy.maps.hpxndmap method)": [[193, "gammapy.maps.HpxNDMap.get_by_pix", false]], "get_by_pix() (gammapy.maps.map method)": [[195, "gammapy.maps.Map.get_by_pix", false]], "get_by_pix() (gammapy.maps.regionndmap method)": [[201, "gammapy.maps.RegionNDMap.get_by_pix", false]], "get_by_pix() (gammapy.maps.wcsmap method)": [[204, "gammapy.maps.WcsMap.get_by_pix", false]], "get_by_pix() (gammapy.maps.wcsndmap method)": [[205, "gammapy.maps.WcsNDMap.get_by_pix", false]], "get_combined_flux_maps() (in module gammapy.estimators.utils)": [[142, "gammapy.estimators.utils.get_combined_flux_maps", false]], "get_combined_significance_maps() (in module gammapy.estimators.utils)": [[143, "gammapy.estimators.utils.get_combined_significance_maps", false]], "get_coord() (gammapy.maps.geom method)": [[190, "gammapy.maps.Geom.get_coord", false]], "get_coord() (gammapy.maps.hpxgeom method)": [[191, "gammapy.maps.HpxGeom.get_coord", false]], "get_coord() (gammapy.maps.mapaxes method)": [[196, "gammapy.maps.MapAxes.get_coord", false]], "get_coord() (gammapy.maps.regiongeom method)": [[200, "gammapy.maps.RegionGeom.get_coord", false]], "get_coord() (gammapy.maps.wcsgeom method)": [[203, "gammapy.maps.WcsGeom.get_coord", false]], "get_datasets() (gammapy.analysis.analysis method)": [[15, "gammapy.analysis.Analysis.get_datasets", false]], "get_edisp_kernel() (gammapy.irf.edispkernelmap method)": [[150, "gammapy.irf.EDispKernelMap.get_edisp_kernel", false]], "get_edisp_kernel() (gammapy.irf.edispmap method)": [[151, "gammapy.irf.EDispMap.get_edisp_kernel", false]], "get_excess_map() (gammapy.analysis.analysis method)": [[15, "gammapy.analysis.Analysis.get_excess_map", false]], "get_filenames() (gammapy.datasets.ogipdatasetreader method)": [[106, "gammapy.datasets.OGIPDatasetReader.get_filenames", false]], "get_filenames() (gammapy.datasets.ogipdatasetwriter static method)": [[107, "gammapy.datasets.OGIPDatasetWriter.get_filenames", false]], "get_flux_points() (gammapy.analysis.analysis method)": [[15, "gammapy.analysis.Analysis.get_flux_points", false]], "get_flux_points() (gammapy.estimators.fluxmaps method)": [[122, "gammapy.estimators.FluxMaps.get_flux_points", false]], "get_flux_points() (gammapy.estimators.fluxpoints method)": [[124, "gammapy.estimators.FluxPoints.get_flux_points", false]], "get_hdu() (gammapy.utils.fits.hdulocation method)": [[312, "gammapy.utils.fits.HDULocation.get_hdu", false]], "get_icrs() (gammapy.data.fixedpointinginfo method)": [[85, "gammapy.data.FixedPointingInfo.get_icrs", false]], "get_icrs() (gammapy.data.pointinginfo method)": [[94, "gammapy.data.PointingInfo.get_icrs", false]], "get_idx() (gammapy.maps.geom method)": [[190, "gammapy.maps.Geom.get_idx", false]], "get_idx() (gammapy.maps.hpxgeom method)": [[191, "gammapy.maps.HpxGeom.get_idx", false]], "get_idx() (gammapy.maps.regiongeom method)": [[200, "gammapy.maps.RegionGeom.get_idx", false]], "get_idx() (gammapy.maps.wcsgeom method)": [[203, "gammapy.maps.WcsGeom.get_idx", false]], "get_image_by_coord() (gammapy.maps.hpxmap method)": [[192, "gammapy.maps.HpxMap.get_image_by_coord", false]], "get_image_by_coord() (gammapy.maps.hpxndmap method)": [[193, "gammapy.maps.HpxNDMap.get_image_by_coord", false]], "get_image_by_coord() (gammapy.maps.map method)": [[195, "gammapy.maps.Map.get_image_by_coord", false]], "get_image_by_coord() (gammapy.maps.regionndmap method)": [[201, "gammapy.maps.RegionNDMap.get_image_by_coord", false]], "get_image_by_coord() (gammapy.maps.wcsmap method)": [[204, "gammapy.maps.WcsMap.get_image_by_coord", false]], "get_image_by_coord() (gammapy.maps.wcsndmap method)": [[205, "gammapy.maps.WcsNDMap.get_image_by_coord", false]], "get_image_by_idx() (gammapy.maps.hpxmap method)": [[192, "gammapy.maps.HpxMap.get_image_by_idx", false]], "get_image_by_idx() (gammapy.maps.hpxndmap method)": [[193, "gammapy.maps.HpxNDMap.get_image_by_idx", false]], "get_image_by_idx() (gammapy.maps.map method)": [[195, "gammapy.maps.Map.get_image_by_idx", false]], "get_image_by_idx() (gammapy.maps.regionndmap method)": [[201, "gammapy.maps.RegionNDMap.get_image_by_idx", false]], "get_image_by_idx() (gammapy.maps.wcsmap method)": [[204, "gammapy.maps.WcsMap.get_image_by_idx", false]], "get_image_by_idx() (gammapy.maps.wcsndmap method)": [[205, "gammapy.maps.WcsNDMap.get_image_by_idx", false]], "get_image_by_pix() (gammapy.maps.hpxmap method)": [[192, "gammapy.maps.HpxMap.get_image_by_pix", false]], "get_image_by_pix() (gammapy.maps.hpxndmap method)": [[193, "gammapy.maps.HpxNDMap.get_image_by_pix", false]], "get_image_by_pix() (gammapy.maps.map method)": [[195, "gammapy.maps.Map.get_image_by_pix", false]], "get_image_by_pix() (gammapy.maps.regionndmap method)": [[201, "gammapy.maps.RegionNDMap.get_image_by_pix", false]], "get_image_by_pix() (gammapy.maps.wcsmap method)": [[204, "gammapy.maps.WcsMap.get_image_by_pix", false]], "get_image_by_pix() (gammapy.maps.wcsndmap method)": [[205, "gammapy.maps.WcsNDMap.get_image_by_pix", false]], "get_images_paths() (in module gammapy.utils.scripts)": [[341, "gammapy.utils.scripts.get_images_paths", false]], "get_index_list() (gammapy.maps.hpxgeom static method)": [[191, "gammapy.maps.HpxGeom.get_index_list", false]], "get_irfs_features() (in module gammapy.data)": [[96, "gammapy.data.get_irfs_features", false]], "get_kernels() (gammapy.estimators.asmoothmapestimator method)": [[117, "gammapy.estimators.ASmoothMapEstimator.get_kernels", false]], "get_light_curve() (gammapy.analysis.analysis method)": [[15, "gammapy.analysis.Analysis.get_light_curve", false]], "get_mean() (gammapy.irf.edispkernel method)": [[149, "gammapy.irf.EDispKernel.get_mean", false]], "get_observations() (gammapy.analysis.analysis method)": [[15, "gammapy.analysis.Analysis.get_observations", false]], "get_observations() (gammapy.data.datastore method)": [[82, "gammapy.data.DataStore.get_observations", false]], "get_ogip_meta() (gammapy.datasets.ogipdatasetwriter method)": [[107, "gammapy.datasets.OGIPDatasetWriter.get_ogip_meta", false]], "get_pix() (gammapy.maps.wcsgeom method)": [[203, "gammapy.maps.WcsGeom.get_pix", false]], "get_pointing_altaz() (gammapy.data.observation method)": [[88, "gammapy.data.Observation.get_pointing_altaz", false]], "get_pointing_icrs() (gammapy.data.observation method)": [[88, "gammapy.data.Observation.get_pointing_icrs", false]], "get_psf_kernel() (gammapy.irf.psfmap method)": [[162, "gammapy.irf.PSFMap.get_psf_kernel", false]], "get_psf_kernel() (gammapy.irf.recopsfmap method)": [[165, "gammapy.irf.RecoPSFMap.get_psf_kernel", false]], "get_random_state() (in module gammapy.utils.random)": [[328, "gammapy.utils.random.get_random_state", false]], "get_rebinned_axis() (in module gammapy.estimators.utils)": [[144, "gammapy.estimators.utils.get_rebinned_axis", false]], "get_resolution() (gammapy.irf.edispkernel method)": [[149, "gammapy.irf.EDispKernel.get_resolution", false]], "get_scale_model() (gammapy.estimators.fluxpointsestimator method)": [[125, "gammapy.estimators.FluxPointsEstimator.get_scale_model", false]], "get_scale_model() (gammapy.estimators.fluxprofileestimator method)": [[126, "gammapy.estimators.FluxProfileEstimator.get_scale_model", false]], "get_scale_model() (gammapy.estimators.lightcurveestimator method)": [[129, "gammapy.estimators.LightCurveEstimator.get_scale_model", false]], "get_scales() (gammapy.estimators.asmoothmapestimator static method)": [[117, "gammapy.estimators.ASmoothMapEstimator.get_scales", false]], "get_spectrum() (gammapy.maps.hpxmap method)": [[192, "gammapy.maps.HpxMap.get_spectrum", false]], "get_spectrum() (gammapy.maps.hpxndmap method)": [[193, "gammapy.maps.HpxNDMap.get_spectrum", false]], "get_spectrum() (gammapy.maps.map method)": [[195, "gammapy.maps.Map.get_spectrum", false]], "get_spectrum() (gammapy.maps.regionndmap method)": [[201, "gammapy.maps.RegionNDMap.get_spectrum", false]], "get_spectrum() (gammapy.maps.wcsmap method)": [[204, "gammapy.maps.WcsMap.get_spectrum", false]], "get_spectrum() (gammapy.maps.wcsndmap method)": [[205, "gammapy.maps.WcsNDMap.get_spectrum", false]], "get_subcovariance() (gammapy.modeling.covariance method)": [[208, "gammapy.modeling.Covariance.get_subcovariance", false]], "get_valid_path() (gammapy.datasets.ogipdatasetreader method)": [[106, "gammapy.datasets.OGIPDatasetReader.get_valid_path", false]], "get_wcs_coord_and_weights() (gammapy.maps.regiongeom method)": [[200, "gammapy.maps.RegionGeom.get_wcs_coord_and_weights", false]], "get_wstat_gof_terms() (in module gammapy.stats)": [[297, "gammapy.stats.get_wstat_gof_terms", false]], "get_wstat_mu_bkg() (in module gammapy.stats)": [[298, "gammapy.stats.get_wstat_mu_bkg", false]], "global_to_local() (gammapy.maps.hpxgeom method)": [[191, "gammapy.maps.HpxGeom.global_to_local", false]], "group_by() (gammapy.data.hduindextable method)": [[87, "gammapy.data.HDUIndexTable.group_by", false]], "group_by() (gammapy.data.observationtable method)": [[91, "gammapy.data.ObservationTable.group_by", false]], "group_by_label() (gammapy.data.observations method)": [[92, "gammapy.data.Observations.group_by_label", false]], "group_table() (gammapy.data.gti method)": [[86, "gammapy.data.GTI.group_table", false]], "group_table() (gammapy.maps.mapaxis method)": [[197, "gammapy.maps.MapAxis.group_table", false]], "group_table() (gammapy.maps.timemapaxis method)": [[202, "gammapy.maps.TimeMapAxis.group_table", false]], "groups (gammapy.data.hduindextable attribute)": [[87, "gammapy.data.HDUIndexTable.groups", false]], "groups (gammapy.data.observationtable attribute)": [[91, "gammapy.data.ObservationTable.groups", false]], "gti": [[573, "term-GTI", true]], "gti (class in gammapy.data)": [[86, "gammapy.data.GTI", false]], "gti (gammapy.data.observation attribute)": [[88, "gammapy.data.Observation.gti", false]], "gti (gammapy.datasets.datasets attribute)": [[100, "gammapy.datasets.Datasets.gti", false]], "gti (gammapy.datasets.fluxpointsdataset attribute)": [[101, "gammapy.datasets.FluxPointsDataset.gti", false]], "gti (gammapy.datasets.mapdataset attribute)": [[102, "gammapy.datasets.MapDataset.gti", false]], "gti (gammapy.datasets.mapdatasetonoff attribute)": [[105, "gammapy.datasets.MapDatasetOnOff.gti", false]], "gti (gammapy.datasets.spectrumdataset attribute)": [[109, "gammapy.datasets.SpectrumDataset.gti", false]], "gti (gammapy.datasets.spectrumdatasetonoff attribute)": [[110, "gammapy.datasets.SpectrumDatasetOnOff.gti", false]], "has_any_ts (gammapy.estimators.fluxmaps attribute)": [[122, "gammapy.estimators.FluxMaps.has_any_ts", false]], "has_any_ts (gammapy.estimators.fluxpoints attribute)": [[124, "gammapy.estimators.FluxPoints.has_any_ts", false]], "has_energy_axis (gammapy.maps.geom attribute)": [[190, "gammapy.maps.Geom.has_energy_axis", false]], "has_energy_axis (gammapy.maps.hpxgeom attribute)": [[191, "gammapy.maps.HpxGeom.has_energy_axis", false]], "has_energy_axis (gammapy.maps.regiongeom attribute)": [[200, "gammapy.maps.RegionGeom.has_energy_axis", false]], "has_energy_axis (gammapy.maps.wcsgeom attribute)": [[203, "gammapy.maps.WcsGeom.has_energy_axis", false]], "has_inverse() (gammapy.astro.population.casebattacharya1998 method)": [[28, "gammapy.astro.population.CaseBattacharya1998.has_inverse", false]], "has_inverse() (gammapy.astro.population.exponential method)": [[29, "gammapy.astro.population.Exponential.has_inverse", false]], "has_inverse() (gammapy.astro.population.faucherkaspi2006 method)": [[30, "gammapy.astro.population.FaucherKaspi2006.has_inverse", false]], "has_inverse() (gammapy.astro.population.faucherkaspi2006velocitybimodal method)": [[31, "gammapy.astro.population.FaucherKaspi2006VelocityBimodal.has_inverse", false]], "has_inverse() (gammapy.astro.population.faucherkaspi2006velocitymaxwellian method)": [[32, "gammapy.astro.population.FaucherKaspi2006VelocityMaxwellian.has_inverse", false]], "has_inverse() (gammapy.astro.population.lorimer2006 method)": [[35, "gammapy.astro.population.Lorimer2006.has_inverse", false]], "has_inverse() (gammapy.astro.population.paczynski1990 method)": [[36, "gammapy.astro.population.Paczynski1990.has_inverse", false]], "has_inverse() (gammapy.astro.population.paczynski1990velocity method)": [[37, "gammapy.astro.population.Paczynski1990Velocity.has_inverse", false]], "has_inverse() (gammapy.astro.population.yusifovkucuk2004 method)": [[39, "gammapy.astro.population.YusifovKucuk2004.has_inverse", false]], "has_inverse() (gammapy.astro.population.yusifovkucuk2004b method)": [[40, "gammapy.astro.population.YusifovKucuk2004B.has_inverse", false]], "has_masked_columns (gammapy.data.hduindextable attribute)": [[87, "gammapy.data.HDUIndexTable.has_masked_columns", false]], "has_masked_columns (gammapy.data.observationtable attribute)": [[91, "gammapy.data.ObservationTable.has_masked_columns", false]], "has_masked_values (gammapy.data.hduindextable attribute)": [[87, "gammapy.data.HDUIndexTable.has_masked_values", false]], "has_masked_values (gammapy.data.observationtable attribute)": [[91, "gammapy.data.ObservationTable.has_masked_values", false]], "has_mixin_columns (gammapy.data.hduindextable attribute)": [[87, "gammapy.data.HDUIndexTable.has_mixin_columns", false]], "has_mixin_columns (gammapy.data.observationtable attribute)": [[91, "gammapy.data.ObservationTable.has_mixin_columns", false]], "has_offset_axis (gammapy.irf.background2d attribute)": [[146, "gammapy.irf.Background2D.has_offset_axis", false]], "has_offset_axis (gammapy.irf.background3d attribute)": [[147, "gammapy.irf.Background3D.has_offset_axis", false]], "has_offset_axis (gammapy.irf.backgroundirf attribute)": [[148, "gammapy.irf.BackgroundIRF.has_offset_axis", false]], "has_offset_axis (gammapy.irf.edispkernel attribute)": [[149, "gammapy.irf.EDispKernel.has_offset_axis", false]], "has_offset_axis (gammapy.irf.effectiveareatable2d attribute)": [[152, "gammapy.irf.EffectiveAreaTable2D.has_offset_axis", false]], "has_offset_axis (gammapy.irf.energydependentmultigausspsf attribute)": [[153, "gammapy.irf.EnergyDependentMultiGaussPSF.has_offset_axis", false]], "has_offset_axis (gammapy.irf.energydispersion2d attribute)": [[154, "gammapy.irf.EnergyDispersion2D.has_offset_axis", false]], "has_offset_axis (gammapy.irf.irf attribute)": [[156, "gammapy.irf.IRF.has_offset_axis", false]], "has_offset_axis (gammapy.irf.parametricpsf attribute)": [[163, "gammapy.irf.ParametricPSF.has_offset_axis", false]], "has_offset_axis (gammapy.irf.psf3d attribute)": [[159, "gammapy.irf.PSF3D.has_offset_axis", false]], "has_offset_axis (gammapy.irf.psfking attribute)": [[161, "gammapy.irf.PSFKing.has_offset_axis", false]], "has_offset_axis (gammapy.irf.radmax2d attribute)": [[164, "gammapy.irf.RadMax2D.has_offset_axis", false]], "has_single_spatial_bin (gammapy.irf.edispkernelmap attribute)": [[150, "gammapy.irf.EDispKernelMap.has_single_spatial_bin", false]], "has_single_spatial_bin (gammapy.irf.edispmap attribute)": [[151, "gammapy.irf.EDispMap.has_single_spatial_bin", false]], "has_single_spatial_bin (gammapy.irf.irfmap attribute)": [[157, "gammapy.irf.IRFMap.has_single_spatial_bin", false]], "has_single_spatial_bin (gammapy.irf.psfmap attribute)": [[162, "gammapy.irf.PSFMap.has_single_spatial_bin", false]], "has_single_spatial_bin (gammapy.irf.recopsfmap attribute)": [[165, "gammapy.irf.RecoPSFMap.has_single_spatial_bin", false]], "has_stat_profiles (gammapy.estimators.fluxmaps attribute)": [[122, "gammapy.estimators.FluxMaps.has_stat_profiles", false]], "has_stat_profiles (gammapy.estimators.fluxpoints attribute)": [[124, "gammapy.estimators.FluxPoints.has_stat_profiles", false]], "has_success (gammapy.estimators.fluxmaps attribute)": [[122, "gammapy.estimators.FluxMaps.has_success", false]], "has_success (gammapy.estimators.fluxpoints attribute)": [[124, "gammapy.estimators.FluxPoints.has_success", false]], "has_ul (gammapy.estimators.fluxmaps attribute)": [[122, "gammapy.estimators.FluxMaps.has_ul", false]], "has_ul (gammapy.estimators.fluxpoints attribute)": [[124, "gammapy.estimators.FluxPoints.has_ul", false]], "has_user_bounding_box (gammapy.astro.population.casebattacharya1998 attribute)": [[28, "gammapy.astro.population.CaseBattacharya1998.has_user_bounding_box", false]], "has_user_bounding_box (gammapy.astro.population.exponential attribute)": [[29, "gammapy.astro.population.Exponential.has_user_bounding_box", false]], "has_user_bounding_box (gammapy.astro.population.faucherkaspi2006 attribute)": [[30, "gammapy.astro.population.FaucherKaspi2006.has_user_bounding_box", false]], "has_user_bounding_box (gammapy.astro.population.faucherkaspi2006velocitybimodal attribute)": [[31, "gammapy.astro.population.FaucherKaspi2006VelocityBimodal.has_user_bounding_box", false]], "has_user_bounding_box (gammapy.astro.population.faucherkaspi2006velocitymaxwellian attribute)": [[32, "gammapy.astro.population.FaucherKaspi2006VelocityMaxwellian.has_user_bounding_box", false]], "has_user_bounding_box (gammapy.astro.population.lorimer2006 attribute)": [[35, "gammapy.astro.population.Lorimer2006.has_user_bounding_box", false]], "has_user_bounding_box (gammapy.astro.population.paczynski1990 attribute)": [[36, "gammapy.astro.population.Paczynski1990.has_user_bounding_box", false]], "has_user_bounding_box (gammapy.astro.population.paczynski1990velocity attribute)": [[37, "gammapy.astro.population.Paczynski1990Velocity.has_user_bounding_box", false]], "has_user_bounding_box (gammapy.astro.population.yusifovkucuk2004 attribute)": [[39, "gammapy.astro.population.YusifovKucuk2004.has_user_bounding_box", false]], "has_user_bounding_box (gammapy.astro.population.yusifovkucuk2004b attribute)": [[40, "gammapy.astro.population.YusifovKucuk2004B.has_user_bounding_box", false]], "has_user_inverse (gammapy.astro.population.casebattacharya1998 attribute)": [[28, "gammapy.astro.population.CaseBattacharya1998.has_user_inverse", false]], "has_user_inverse (gammapy.astro.population.exponential attribute)": [[29, "gammapy.astro.population.Exponential.has_user_inverse", false]], "has_user_inverse (gammapy.astro.population.faucherkaspi2006 attribute)": [[30, "gammapy.astro.population.FaucherKaspi2006.has_user_inverse", false]], "has_user_inverse (gammapy.astro.population.faucherkaspi2006velocitybimodal attribute)": [[31, "gammapy.astro.population.FaucherKaspi2006VelocityBimodal.has_user_inverse", false]], "has_user_inverse (gammapy.astro.population.faucherkaspi2006velocitymaxwellian attribute)": [[32, "gammapy.astro.population.FaucherKaspi2006VelocityMaxwellian.has_user_inverse", false]], "has_user_inverse (gammapy.astro.population.lorimer2006 attribute)": [[35, "gammapy.astro.population.Lorimer2006.has_user_inverse", false]], "has_user_inverse (gammapy.astro.population.paczynski1990 attribute)": [[36, "gammapy.astro.population.Paczynski1990.has_user_inverse", false]], "has_user_inverse (gammapy.astro.population.paczynski1990velocity attribute)": [[37, "gammapy.astro.population.Paczynski1990Velocity.has_user_inverse", false]], "has_user_inverse (gammapy.astro.population.yusifovkucuk2004 attribute)": [[39, "gammapy.astro.population.YusifovKucuk2004.has_user_inverse", false]], "has_user_inverse (gammapy.astro.population.yusifovkucuk2004b attribute)": [[40, "gammapy.astro.population.YusifovKucuk2004B.has_user_inverse", false]], "hdu_class_unique (gammapy.data.hduindextable attribute)": [[87, "gammapy.data.HDUIndexTable.hdu_class_unique", false]], "hdu_location() (gammapy.data.hduindextable method)": [[87, "gammapy.data.HDUIndexTable.hdu_location", false]], "hdu_type_unique (gammapy.data.hduindextable attribute)": [[87, "gammapy.data.HDUIndexTable.hdu_type_unique", false]], "hduindextable (class in gammapy.data)": [[87, "gammapy.data.HDUIndexTable", false]], "hdulocation (class in gammapy.utils.fits)": [[312, "gammapy.utils.fits.HDULocation", false]], "hierarchical_clustering() (in module gammapy.utils.cluster)": [[302, "gammapy.utils.cluster.hierarchical_clustering", false]], "hli": [[573, "term-HLI", true]], "hpxgeom (class in gammapy.maps)": [[191, "gammapy.maps.HpxGeom", false]], "hpxmap (class in gammapy.maps)": [[192, "gammapy.maps.HpxMap", false]], "hpxndmap (class in gammapy.maps)": [[193, "gammapy.maps.HpxNDMap", false]], "hstack_columns() (in module gammapy.utils.table)": [[347, "gammapy.utils.table.hstack_columns", false]], "ids (gammapy.data.observations attribute)": [[92, "gammapy.data.Observations.ids", false]], "iloc (gammapy.data.hduindextable attribute)": [[87, "gammapy.data.HDUIndexTable.iloc", false]], "iloc (gammapy.data.observationtable attribute)": [[91, "gammapy.data.ObservationTable.iloc", false]], "imageprofile (class in gammapy.estimators)": [[127, "gammapy.estimators.ImageProfile", false]], "imageprofileestimator (class in gammapy.estimators)": [[128, "gammapy.estimators.ImageProfileEstimator", false]], "in_memory_generator() (gammapy.data.observations method)": [[92, "gammapy.data.Observations.in_memory_generator", false]], "include_ssc (gammapy.modeling.models.naimaspectralmodel attribute)": [[246, "gammapy.modeling.models.NaimaSpectralModel.include_ssc", false]], "index (gammapy.modeling.models.expcutoffpowerlaw3fglspectralmodel attribute)": [[227, "gammapy.modeling.models.ExpCutoffPowerLaw3FGLSpectralModel.index", false]], "index (gammapy.modeling.models.expcutoffpowerlawnormspectralmodel attribute)": [[228, "gammapy.modeling.models.ExpCutoffPowerLawNormSpectralModel.index", false]], "index (gammapy.modeling.models.expcutoffpowerlawspectralmodel attribute)": [[229, "gammapy.modeling.models.ExpCutoffPowerLawSpectralModel.index", false]], "index (gammapy.modeling.models.powerlaw2spectralmodel attribute)": [[250, "gammapy.modeling.models.PowerLaw2SpectralModel.index", false]], "index (gammapy.modeling.models.powerlawspectralmodel attribute)": [[252, "gammapy.modeling.models.PowerLawSpectralModel.index", false]], "index() (gammapy.data.observations method)": [[92, "gammapy.data.Observations.index", false]], "index() (gammapy.datasets.datasets method)": [[100, "gammapy.datasets.Datasets.index", false]], "index() (gammapy.maps.mapaxes method)": [[196, "gammapy.maps.MapAxes.index", false]], "index() (gammapy.modeling.models.datasetmodels method)": [[223, "gammapy.modeling.models.DatasetModels.index", false]], "index() (gammapy.modeling.models.models method)": [[245, "gammapy.modeling.models.Models.index", false]], "index() (gammapy.modeling.parameters method)": [[214, "gammapy.modeling.Parameters.index", false]], "index() (gammapy.modeling.priorparameters method)": [[216, "gammapy.modeling.PriorParameters.index", false]], "index1 (gammapy.modeling.models.brokenpowerlawspectralmodel attribute)": [[217, "gammapy.modeling.models.BrokenPowerLawSpectralModel.index1", false]], "index1 (gammapy.modeling.models.smoothbrokenpowerlawspectralmodel attribute)": [[262, "gammapy.modeling.models.SmoothBrokenPowerLawSpectralModel.index1", false]], "index2 (gammapy.modeling.models.brokenpowerlawspectralmodel attribute)": [[217, "gammapy.modeling.models.BrokenPowerLawSpectralModel.index2", false]], "index2 (gammapy.modeling.models.smoothbrokenpowerlawspectralmodel attribute)": [[262, "gammapy.modeling.models.SmoothBrokenPowerLawSpectralModel.index2", false]], "index_1 (gammapy.modeling.models.superexpcutoffpowerlaw3fglspectralmodel attribute)": [[265, "gammapy.modeling.models.SuperExpCutoffPowerLaw3FGLSpectralModel.index_1", false]], "index_1 (gammapy.modeling.models.superexpcutoffpowerlaw4fgldr3spectralmodel attribute)": [[266, "gammapy.modeling.models.SuperExpCutoffPowerLaw4FGLDR3SpectralModel.index_1", false]], "index_1 (gammapy.modeling.models.superexpcutoffpowerlaw4fglspectralmodel attribute)": [[267, "gammapy.modeling.models.SuperExpCutoffPowerLaw4FGLSpectralModel.index_1", false]], "index_2 (gammapy.modeling.models.superexpcutoffpowerlaw3fglspectralmodel attribute)": [[265, "gammapy.modeling.models.SuperExpCutoffPowerLaw3FGLSpectralModel.index_2", false]], "index_2 (gammapy.modeling.models.superexpcutoffpowerlaw4fgldr3spectralmodel attribute)": [[266, "gammapy.modeling.models.SuperExpCutoffPowerLaw4FGLDR3SpectralModel.index_2", false]], "index_2 (gammapy.modeling.models.superexpcutoffpowerlaw4fglspectralmodel attribute)": [[267, "gammapy.modeling.models.SuperExpCutoffPowerLaw4FGLSpectralModel.index_2", false]], "index_column() (gammapy.data.hduindextable method)": [[87, "gammapy.data.HDUIndexTable.index_column", false]], "index_column() (gammapy.data.observationtable method)": [[91, "gammapy.data.ObservationTable.index_column", false]], "index_data() (gammapy.maps.mapaxes method)": [[196, "gammapy.maps.MapAxes.index_data", false]], "index_mode() (gammapy.data.hduindextable method)": [[87, "gammapy.data.HDUIndexTable.index_mode", false]], "index_mode() (gammapy.data.observationtable method)": [[91, "gammapy.data.ObservationTable.index_mode", false]], "indices (gammapy.data.hduindextable attribute)": [[87, "gammapy.data.HDUIndexTable.indices", false]], "indices (gammapy.data.observationtable attribute)": [[91, "gammapy.data.ObservationTable.indices", false]], "ineqcons (gammapy.astro.population.casebattacharya1998 attribute)": [[28, "gammapy.astro.population.CaseBattacharya1998.ineqcons", false]], "ineqcons (gammapy.astro.population.exponential attribute)": [[29, "gammapy.astro.population.Exponential.ineqcons", false]], "ineqcons (gammapy.astro.population.faucherkaspi2006 attribute)": [[30, "gammapy.astro.population.FaucherKaspi2006.ineqcons", false]], "ineqcons (gammapy.astro.population.faucherkaspi2006velocitybimodal attribute)": [[31, "gammapy.astro.population.FaucherKaspi2006VelocityBimodal.ineqcons", false]], "ineqcons (gammapy.astro.population.faucherkaspi2006velocitymaxwellian attribute)": [[32, "gammapy.astro.population.FaucherKaspi2006VelocityMaxwellian.ineqcons", false]], "ineqcons (gammapy.astro.population.lorimer2006 attribute)": [[35, "gammapy.astro.population.Lorimer2006.ineqcons", false]], "ineqcons (gammapy.astro.population.paczynski1990 attribute)": [[36, "gammapy.astro.population.Paczynski1990.ineqcons", false]], "ineqcons (gammapy.astro.population.paczynski1990velocity attribute)": [[37, "gammapy.astro.population.Paczynski1990Velocity.ineqcons", false]], "ineqcons (gammapy.astro.population.yusifovkucuk2004 attribute)": [[39, "gammapy.astro.population.YusifovKucuk2004.ineqcons", false]], "ineqcons (gammapy.astro.population.yusifovkucuk2004b attribute)": [[40, "gammapy.astro.population.YusifovKucuk2004B.ineqcons", false]], "info (gammapy.data.hduindextable attribute)": [[87, "gammapy.data.HDUIndexTable.info", false]], "info (gammapy.data.observationtable attribute)": [[91, "gammapy.data.ObservationTable.info", false]], "info() (gammapy.catalog.sourcecatalogobject2fhl method)": [[71, "gammapy.catalog.SourceCatalogObject2FHL.info", false]], "info() (gammapy.catalog.sourcecatalogobject2hwc method)": [[72, "gammapy.catalog.SourceCatalogObject2HWC.info", false]], "info() (gammapy.catalog.sourcecatalogobject2pc method)": [[73, "gammapy.catalog.SourceCatalogObject2PC.info", false]], "info() (gammapy.catalog.sourcecatalogobject3fgl method)": [[74, "gammapy.catalog.SourceCatalogObject3FGL.info", false]], "info() (gammapy.catalog.sourcecatalogobject3fhl method)": [[75, "gammapy.catalog.SourceCatalogObject3FHL.info", false]], "info() (gammapy.catalog.sourcecatalogobject3hwc method)": [[76, "gammapy.catalog.SourceCatalogObject3HWC.info", false]], "info() (gammapy.catalog.sourcecatalogobject3pc method)": [[77, "gammapy.catalog.SourceCatalogObject3PC.info", false]], "info() (gammapy.catalog.sourcecatalogobject4fgl method)": [[78, "gammapy.catalog.SourceCatalogObject4FGL.info", false]], "info() (gammapy.catalog.sourcecatalogobjectgammacat method)": [[79, "gammapy.catalog.SourceCatalogObjectGammaCat.info", false]], "info() (gammapy.catalog.sourcecatalogobjecthgps method)": [[80, "gammapy.catalog.SourceCatalogObjectHGPS.info", false]], "info() (gammapy.data.datastore method)": [[82, "gammapy.data.DataStore.info", false]], "info() (gammapy.irf.energydependentmultigausspsf method)": [[153, "gammapy.irf.EnergyDependentMultiGaussPSF.info", false]], "info() (gammapy.irf.parametricpsf method)": [[163, "gammapy.irf.ParametricPSF.info", false]], "info() (gammapy.irf.psf3d method)": [[159, "gammapy.irf.PSF3D.info", false]], "info() (gammapy.irf.psfking method)": [[161, "gammapy.irf.PSFKing.info", false]], "info() (gammapy.utils.fits.hdulocation method)": [[312, "gammapy.utils.fits.HDULocation.info", false]], "info_dict() (gammapy.datasets.mapdataset method)": [[102, "gammapy.datasets.MapDataset.info_dict", false]], "info_dict() (gammapy.datasets.mapdatasetonoff method)": [[105, "gammapy.datasets.MapDatasetOnOff.info_dict", false]], "info_dict() (gammapy.datasets.spectrumdataset method)": [[109, "gammapy.datasets.SpectrumDataset.info_dict", false]], "info_dict() (gammapy.datasets.spectrumdatasetonoff method)": [[110, "gammapy.datasets.SpectrumDatasetOnOff.info_dict", false]], "info_dict() (gammapy.stats.cashcountsstatistic method)": [[285, "gammapy.stats.CashCountsStatistic.info_dict", false]], "info_dict() (gammapy.stats.wstatcountsstatistic method)": [[287, "gammapy.stats.WStatCountsStatistic.info_dict", false]], "info_table() (gammapy.datasets.datasets method)": [[100, "gammapy.datasets.Datasets.info_table", false]], "input_shape() (gammapy.astro.population.casebattacharya1998 method)": [[28, "gammapy.astro.population.CaseBattacharya1998.input_shape", false]], "input_shape() (gammapy.astro.population.exponential method)": [[29, "gammapy.astro.population.Exponential.input_shape", false]], "input_shape() (gammapy.astro.population.faucherkaspi2006 method)": [[30, "gammapy.astro.population.FaucherKaspi2006.input_shape", false]], "input_shape() (gammapy.astro.population.faucherkaspi2006velocitybimodal method)": [[31, "gammapy.astro.population.FaucherKaspi2006VelocityBimodal.input_shape", false]], "input_shape() (gammapy.astro.population.faucherkaspi2006velocitymaxwellian method)": [[32, "gammapy.astro.population.FaucherKaspi2006VelocityMaxwellian.input_shape", false]], "input_shape() (gammapy.astro.population.lorimer2006 method)": [[35, "gammapy.astro.population.Lorimer2006.input_shape", false]], "input_shape() (gammapy.astro.population.paczynski1990 method)": [[36, "gammapy.astro.population.Paczynski1990.input_shape", false]], "input_shape() (gammapy.astro.population.paczynski1990velocity method)": [[37, "gammapy.astro.population.Paczynski1990Velocity.input_shape", false]], "input_shape() (gammapy.astro.population.yusifovkucuk2004 method)": [[39, "gammapy.astro.population.YusifovKucuk2004.input_shape", false]], "input_shape() (gammapy.astro.population.yusifovkucuk2004b method)": [[40, "gammapy.astro.population.YusifovKucuk2004B.input_shape", false]], "input_units (gammapy.astro.population.casebattacharya1998 attribute)": [[28, "gammapy.astro.population.CaseBattacharya1998.input_units", false]], "input_units (gammapy.astro.population.exponential attribute)": [[29, "gammapy.astro.population.Exponential.input_units", false]], "input_units (gammapy.astro.population.faucherkaspi2006 attribute)": [[30, "gammapy.astro.population.FaucherKaspi2006.input_units", false]], "input_units (gammapy.astro.population.faucherkaspi2006velocitybimodal attribute)": [[31, "gammapy.astro.population.FaucherKaspi2006VelocityBimodal.input_units", false]], "input_units (gammapy.astro.population.faucherkaspi2006velocitymaxwellian attribute)": [[32, "gammapy.astro.population.FaucherKaspi2006VelocityMaxwellian.input_units", false]], "input_units (gammapy.astro.population.lorimer2006 attribute)": [[35, "gammapy.astro.population.Lorimer2006.input_units", false]], "input_units (gammapy.astro.population.paczynski1990 attribute)": [[36, "gammapy.astro.population.Paczynski1990.input_units", false]], "input_units (gammapy.astro.population.paczynski1990velocity attribute)": [[37, "gammapy.astro.population.Paczynski1990Velocity.input_units", false]], "input_units (gammapy.astro.population.yusifovkucuk2004 attribute)": [[39, "gammapy.astro.population.YusifovKucuk2004.input_units", false]], "input_units (gammapy.astro.population.yusifovkucuk2004b attribute)": [[40, "gammapy.astro.population.YusifovKucuk2004B.input_units", false]], "input_units_allow_dimensionless (gammapy.astro.population.casebattacharya1998 attribute)": [[28, "gammapy.astro.population.CaseBattacharya1998.input_units_allow_dimensionless", false]], "input_units_allow_dimensionless (gammapy.astro.population.exponential attribute)": [[29, "gammapy.astro.population.Exponential.input_units_allow_dimensionless", false]], "input_units_allow_dimensionless (gammapy.astro.population.faucherkaspi2006 attribute)": [[30, "gammapy.astro.population.FaucherKaspi2006.input_units_allow_dimensionless", false]], "input_units_allow_dimensionless (gammapy.astro.population.faucherkaspi2006velocitybimodal attribute)": [[31, "gammapy.astro.population.FaucherKaspi2006VelocityBimodal.input_units_allow_dimensionless", false]], "input_units_allow_dimensionless (gammapy.astro.population.faucherkaspi2006velocitymaxwellian attribute)": [[32, "gammapy.astro.population.FaucherKaspi2006VelocityMaxwellian.input_units_allow_dimensionless", false]], "input_units_allow_dimensionless (gammapy.astro.population.lorimer2006 attribute)": [[35, "gammapy.astro.population.Lorimer2006.input_units_allow_dimensionless", false]], "input_units_allow_dimensionless (gammapy.astro.population.paczynski1990 attribute)": [[36, "gammapy.astro.population.Paczynski1990.input_units_allow_dimensionless", false]], "input_units_allow_dimensionless (gammapy.astro.population.paczynski1990velocity attribute)": [[37, "gammapy.astro.population.Paczynski1990Velocity.input_units_allow_dimensionless", false]], "input_units_allow_dimensionless (gammapy.astro.population.yusifovkucuk2004 attribute)": [[39, "gammapy.astro.population.YusifovKucuk2004.input_units_allow_dimensionless", false]], "input_units_allow_dimensionless (gammapy.astro.population.yusifovkucuk2004b attribute)": [[40, "gammapy.astro.population.YusifovKucuk2004B.input_units_allow_dimensionless", false]], "input_units_equivalencies (gammapy.astro.population.casebattacharya1998 attribute)": [[28, "gammapy.astro.population.CaseBattacharya1998.input_units_equivalencies", false]], "input_units_equivalencies (gammapy.astro.population.exponential attribute)": [[29, "gammapy.astro.population.Exponential.input_units_equivalencies", false]], "input_units_equivalencies (gammapy.astro.population.faucherkaspi2006 attribute)": [[30, "gammapy.astro.population.FaucherKaspi2006.input_units_equivalencies", false]], "input_units_equivalencies (gammapy.astro.population.faucherkaspi2006velocitybimodal attribute)": [[31, "gammapy.astro.population.FaucherKaspi2006VelocityBimodal.input_units_equivalencies", false]], "input_units_equivalencies (gammapy.astro.population.faucherkaspi2006velocitymaxwellian attribute)": [[32, "gammapy.astro.population.FaucherKaspi2006VelocityMaxwellian.input_units_equivalencies", false]], "input_units_equivalencies (gammapy.astro.population.lorimer2006 attribute)": [[35, "gammapy.astro.population.Lorimer2006.input_units_equivalencies", false]], "input_units_equivalencies (gammapy.astro.population.paczynski1990 attribute)": [[36, "gammapy.astro.population.Paczynski1990.input_units_equivalencies", false]], "input_units_equivalencies (gammapy.astro.population.paczynski1990velocity attribute)": [[37, "gammapy.astro.population.Paczynski1990Velocity.input_units_equivalencies", false]], "input_units_equivalencies (gammapy.astro.population.yusifovkucuk2004 attribute)": [[39, "gammapy.astro.population.YusifovKucuk2004.input_units_equivalencies", false]], "input_units_equivalencies (gammapy.astro.population.yusifovkucuk2004b attribute)": [[40, "gammapy.astro.population.YusifovKucuk2004B.input_units_equivalencies", false]], "input_units_strict (gammapy.astro.population.casebattacharya1998 attribute)": [[28, "gammapy.astro.population.CaseBattacharya1998.input_units_strict", false]], "input_units_strict (gammapy.astro.population.exponential attribute)": [[29, "gammapy.astro.population.Exponential.input_units_strict", false]], "input_units_strict (gammapy.astro.population.faucherkaspi2006 attribute)": [[30, "gammapy.astro.population.FaucherKaspi2006.input_units_strict", false]], "input_units_strict (gammapy.astro.population.faucherkaspi2006velocitybimodal attribute)": [[31, "gammapy.astro.population.FaucherKaspi2006VelocityBimodal.input_units_strict", false]], "input_units_strict (gammapy.astro.population.faucherkaspi2006velocitymaxwellian attribute)": [[32, "gammapy.astro.population.FaucherKaspi2006VelocityMaxwellian.input_units_strict", false]], "input_units_strict (gammapy.astro.population.lorimer2006 attribute)": [[35, "gammapy.astro.population.Lorimer2006.input_units_strict", false]], "input_units_strict (gammapy.astro.population.paczynski1990 attribute)": [[36, "gammapy.astro.population.Paczynski1990.input_units_strict", false]], "input_units_strict (gammapy.astro.population.paczynski1990velocity attribute)": [[37, "gammapy.astro.population.Paczynski1990Velocity.input_units_strict", false]], "input_units_strict (gammapy.astro.population.yusifovkucuk2004 attribute)": [[39, "gammapy.astro.population.YusifovKucuk2004.input_units_strict", false]], "input_units_strict (gammapy.astro.population.yusifovkucuk2004b attribute)": [[40, "gammapy.astro.population.YusifovKucuk2004B.input_units_strict", false]], "inputs (gammapy.astro.population.casebattacharya1998 attribute)": [[28, "gammapy.astro.population.CaseBattacharya1998.inputs", false]], "inputs (gammapy.astro.population.exponential attribute)": [[29, "gammapy.astro.population.Exponential.inputs", false]], "inputs (gammapy.astro.population.faucherkaspi2006 attribute)": [[30, "gammapy.astro.population.FaucherKaspi2006.inputs", false]], "inputs (gammapy.astro.population.faucherkaspi2006velocitybimodal attribute)": [[31, "gammapy.astro.population.FaucherKaspi2006VelocityBimodal.inputs", false]], "inputs (gammapy.astro.population.faucherkaspi2006velocitymaxwellian attribute)": [[32, "gammapy.astro.population.FaucherKaspi2006VelocityMaxwellian.inputs", false]], "inputs (gammapy.astro.population.lorimer2006 attribute)": [[35, "gammapy.astro.population.Lorimer2006.inputs", false]], "inputs (gammapy.astro.population.paczynski1990 attribute)": [[36, "gammapy.astro.population.Paczynski1990.inputs", false]], "inputs (gammapy.astro.population.paczynski1990velocity attribute)": [[37, "gammapy.astro.population.Paczynski1990Velocity.inputs", false]], "inputs (gammapy.astro.population.yusifovkucuk2004 attribute)": [[39, "gammapy.astro.population.YusifovKucuk2004.inputs", false]], "inputs (gammapy.astro.population.yusifovkucuk2004b attribute)": [[40, "gammapy.astro.population.YusifovKucuk2004B.inputs", false]], "insert() (gammapy.data.observations method)": [[92, "gammapy.data.Observations.insert", false]], "insert() (gammapy.datasets.datasets method)": [[100, "gammapy.datasets.Datasets.insert", false]], "insert() (gammapy.modeling.models.models method)": [[245, "gammapy.modeling.models.Models.insert", false]], "insert_row() (gammapy.data.hduindextable method)": [[87, "gammapy.data.HDUIndexTable.insert_row", false]], "insert_row() (gammapy.data.observationtable method)": [[91, "gammapy.data.ObservationTable.insert_row", false]], "integral() (gammapy.astro.darkmatter.burkertprofile method)": [[17, "gammapy.astro.darkmatter.BurkertProfile.integral", false]], "integral() (gammapy.astro.darkmatter.darkmatterannihilationspectralmodel method)": [[19, "gammapy.astro.darkmatter.DarkMatterAnnihilationSpectralModel.integral", false]], "integral() (gammapy.astro.darkmatter.darkmatterdecayspectralmodel method)": [[20, "gammapy.astro.darkmatter.DarkMatterDecaySpectralModel.integral", false]], "integral() (gammapy.astro.darkmatter.dmprofile method)": [[18, "gammapy.astro.darkmatter.DMProfile.integral", false]], "integral() (gammapy.astro.darkmatter.einastoprofile method)": [[21, "gammapy.astro.darkmatter.EinastoProfile.integral", false]], "integral() (gammapy.astro.darkmatter.isothermalprofile method)": [[22, "gammapy.astro.darkmatter.IsothermalProfile.integral", false]], "integral() (gammapy.astro.darkmatter.mooreprofile method)": [[24, "gammapy.astro.darkmatter.MooreProfile.integral", false]], "integral() (gammapy.astro.darkmatter.nfwprofile method)": [[25, "gammapy.astro.darkmatter.NFWProfile.integral", false]], "integral() (gammapy.astro.darkmatter.primaryflux method)": [[26, "gammapy.astro.darkmatter.PrimaryFlux.integral", false]], "integral() (gammapy.astro.darkmatter.zhaoprofile method)": [[27, "gammapy.astro.darkmatter.ZhaoProfile.integral", false]], "integral() (gammapy.irf.background2d method)": [[146, "gammapy.irf.Background2D.integral", false]], "integral() (gammapy.irf.background3d method)": [[147, "gammapy.irf.Background3D.integral", false]], "integral() (gammapy.irf.backgroundirf method)": [[148, "gammapy.irf.BackgroundIRF.integral", false]], "integral() (gammapy.irf.edispkernel method)": [[149, "gammapy.irf.EDispKernel.integral", false]], "integral() (gammapy.irf.effectiveareatable2d method)": [[152, "gammapy.irf.EffectiveAreaTable2D.integral", false]], "integral() (gammapy.irf.energydependentmultigausspsf method)": [[153, "gammapy.irf.EnergyDependentMultiGaussPSF.integral", false]], "integral() (gammapy.irf.energydispersion2d method)": [[154, "gammapy.irf.EnergyDispersion2D.integral", false]], "integral() (gammapy.irf.irf method)": [[156, "gammapy.irf.IRF.integral", false]], "integral() (gammapy.irf.parametricpsf method)": [[163, "gammapy.irf.ParametricPSF.integral", false]], "integral() (gammapy.irf.psf3d method)": [[159, "gammapy.irf.PSF3D.integral", false]], "integral() (gammapy.irf.psfking method)": [[161, "gammapy.irf.PSFKing.integral", false]], "integral() (gammapy.irf.radmax2d method)": [[164, "gammapy.irf.RadMax2D.integral", false]], "integral() (gammapy.maps.hpxmap method)": [[192, "gammapy.maps.HpxMap.integral", false]], "integral() (gammapy.maps.hpxndmap method)": [[193, "gammapy.maps.HpxNDMap.integral", false]], "integral() (gammapy.maps.map method)": [[195, "gammapy.maps.Map.integral", false]], "integral() (gammapy.maps.regionndmap method)": [[201, "gammapy.maps.RegionNDMap.integral", false]], "integral() (gammapy.maps.wcsmap method)": [[204, "gammapy.maps.WcsMap.integral", false]], "integral() (gammapy.maps.wcsndmap method)": [[205, "gammapy.maps.WcsNDMap.integral", false]], "integral() (gammapy.modeling.models.brokenpowerlawspectralmodel method)": [[217, "gammapy.modeling.models.BrokenPowerLawSpectralModel.integral", false]], "integral() (gammapy.modeling.models.compoundspectralmodel method)": [[218, "gammapy.modeling.models.CompoundSpectralModel.integral", false]], "integral() (gammapy.modeling.models.constantspectralmodel method)": [[221, "gammapy.modeling.models.ConstantSpectralModel.integral", false]], "integral() (gammapy.modeling.models.constanttemporalmodel method)": [[222, "gammapy.modeling.models.ConstantTemporalModel.integral", false]], "integral() (gammapy.modeling.models.eblabsorptionnormspectralmodel method)": [[225, "gammapy.modeling.models.EBLAbsorptionNormSpectralModel.integral", false]], "integral() (gammapy.modeling.models.expcutoffpowerlaw3fglspectralmodel method)": [[227, "gammapy.modeling.models.ExpCutoffPowerLaw3FGLSpectralModel.integral", false]], "integral() (gammapy.modeling.models.expcutoffpowerlawnormspectralmodel method)": [[228, "gammapy.modeling.models.ExpCutoffPowerLawNormSpectralModel.integral", false]], "integral() (gammapy.modeling.models.expcutoffpowerlawspectralmodel method)": [[229, "gammapy.modeling.models.ExpCutoffPowerLawSpectralModel.integral", false]], "integral() (gammapy.modeling.models.expdecaytemporalmodel method)": [[230, "gammapy.modeling.models.ExpDecayTemporalModel.integral", false]], "integral() (gammapy.modeling.models.gaussianspectralmodel method)": [[233, "gammapy.modeling.models.GaussianSpectralModel.integral", false]], "integral() (gammapy.modeling.models.gaussiantemporalmodel method)": [[234, "gammapy.modeling.models.GaussianTemporalModel.integral", false]], "integral() (gammapy.modeling.models.generalizedgaussiantemporalmodel method)": [[236, "gammapy.modeling.models.GeneralizedGaussianTemporalModel.integral", false]], "integral() (gammapy.modeling.models.lightcurvetemplatetemporalmodel method)": [[237, "gammapy.modeling.models.LightCurveTemplateTemporalModel.integral", false]], "integral() (gammapy.modeling.models.lineartemporalmodel method)": [[238, "gammapy.modeling.models.LinearTemporalModel.integral", false]], "integral() (gammapy.modeling.models.logparabolanormspectralmodel method)": [[239, "gammapy.modeling.models.LogParabolaNormSpectralModel.integral", false]], "integral() (gammapy.modeling.models.logparabolaspectralmodel method)": [[240, "gammapy.modeling.models.LogParabolaSpectralModel.integral", false]], "integral() (gammapy.modeling.models.meyercrabspectralmodel method)": [[242, "gammapy.modeling.models.MeyerCrabSpectralModel.integral", false]], "integral() (gammapy.modeling.models.naimaspectralmodel method)": [[246, "gammapy.modeling.models.NaimaSpectralModel.integral", false]], "integral() (gammapy.modeling.models.piecewisenormspectralmodel method)": [[248, "gammapy.modeling.models.PiecewiseNormSpectralModel.integral", false]], "integral() (gammapy.modeling.models.powerlaw2spectralmodel method)": [[250, "gammapy.modeling.models.PowerLaw2SpectralModel.integral", false]], "integral() (gammapy.modeling.models.powerlawnormspectralmodel method)": [[251, "gammapy.modeling.models.PowerLawNormSpectralModel.integral", false]], "integral() (gammapy.modeling.models.powerlawspectralmodel method)": [[252, "gammapy.modeling.models.PowerLawSpectralModel.integral", false]], "integral() (gammapy.modeling.models.powerlawtemporalmodel method)": [[253, "gammapy.modeling.models.PowerLawTemporalModel.integral", false]], "integral() (gammapy.modeling.models.scalespectralmodel method)": [[257, "gammapy.modeling.models.ScaleSpectralModel.integral", false]], "integral() (gammapy.modeling.models.sinetemporalmodel method)": [[260, "gammapy.modeling.models.SineTemporalModel.integral", false]], "integral() (gammapy.modeling.models.smoothbrokenpowerlawspectralmodel method)": [[262, "gammapy.modeling.models.SmoothBrokenPowerLawSpectralModel.integral", false]], "integral() (gammapy.modeling.models.spectralmodel method)": [[264, "gammapy.modeling.models.SpectralModel.integral", false]], "integral() (gammapy.modeling.models.superexpcutoffpowerlaw3fglspectralmodel method)": [[265, "gammapy.modeling.models.SuperExpCutoffPowerLaw3FGLSpectralModel.integral", false]], "integral() (gammapy.modeling.models.superexpcutoffpowerlaw4fgldr3spectralmodel method)": [[266, "gammapy.modeling.models.SuperExpCutoffPowerLaw4FGLDR3SpectralModel.integral", false]], "integral() (gammapy.modeling.models.superexpcutoffpowerlaw4fglspectralmodel method)": [[267, "gammapy.modeling.models.SuperExpCutoffPowerLaw4FGLSpectralModel.integral", false]], "integral() (gammapy.modeling.models.templatendspectralmodel method)": [[270, "gammapy.modeling.models.TemplateNDSpectralModel.integral", false]], "integral() (gammapy.modeling.models.templatephasecurvetemporalmodel method)": [[272, "gammapy.modeling.models.TemplatePhaseCurveTemporalModel.integral", false]], "integral() (gammapy.modeling.models.templatespectralmodel method)": [[274, "gammapy.modeling.models.TemplateSpectralModel.integral", false]], "integral() (gammapy.modeling.models.temporalmodel method)": [[275, "gammapy.modeling.models.TemporalModel.integral", false]], "integral_error() (gammapy.astro.darkmatter.darkmatterannihilationspectralmodel method)": [[19, "gammapy.astro.darkmatter.DarkMatterAnnihilationSpectralModel.integral_error", false]], "integral_error() (gammapy.astro.darkmatter.darkmatterdecayspectralmodel method)": [[20, "gammapy.astro.darkmatter.DarkMatterDecaySpectralModel.integral_error", false]], "integral_error() (gammapy.astro.darkmatter.primaryflux method)": [[26, "gammapy.astro.darkmatter.PrimaryFlux.integral_error", false]], "integral_error() (gammapy.modeling.models.brokenpowerlawspectralmodel method)": [[217, "gammapy.modeling.models.BrokenPowerLawSpectralModel.integral_error", false]], "integral_error() (gammapy.modeling.models.compoundspectralmodel method)": [[218, "gammapy.modeling.models.CompoundSpectralModel.integral_error", false]], "integral_error() (gammapy.modeling.models.constantspectralmodel method)": [[221, "gammapy.modeling.models.ConstantSpectralModel.integral_error", false]], "integral_error() (gammapy.modeling.models.eblabsorptionnormspectralmodel method)": [[225, "gammapy.modeling.models.EBLAbsorptionNormSpectralModel.integral_error", false]], "integral_error() (gammapy.modeling.models.expcutoffpowerlaw3fglspectralmodel method)": [[227, "gammapy.modeling.models.ExpCutoffPowerLaw3FGLSpectralModel.integral_error", false]], "integral_error() (gammapy.modeling.models.expcutoffpowerlawnormspectralmodel method)": [[228, "gammapy.modeling.models.ExpCutoffPowerLawNormSpectralModel.integral_error", false]], "integral_error() (gammapy.modeling.models.expcutoffpowerlawspectralmodel method)": [[229, "gammapy.modeling.models.ExpCutoffPowerLawSpectralModel.integral_error", false]], "integral_error() (gammapy.modeling.models.gaussianspectralmodel method)": [[233, "gammapy.modeling.models.GaussianSpectralModel.integral_error", false]], "integral_error() (gammapy.modeling.models.logparabolanormspectralmodel method)": [[239, "gammapy.modeling.models.LogParabolaNormSpectralModel.integral_error", false]], "integral_error() (gammapy.modeling.models.logparabolaspectralmodel method)": [[240, "gammapy.modeling.models.LogParabolaSpectralModel.integral_error", false]], "integral_error() (gammapy.modeling.models.meyercrabspectralmodel method)": [[242, "gammapy.modeling.models.MeyerCrabSpectralModel.integral_error", false]], "integral_error() (gammapy.modeling.models.naimaspectralmodel method)": [[246, "gammapy.modeling.models.NaimaSpectralModel.integral_error", false]], "integral_error() (gammapy.modeling.models.piecewisenormspectralmodel method)": [[248, "gammapy.modeling.models.PiecewiseNormSpectralModel.integral_error", false]], "integral_error() (gammapy.modeling.models.powerlaw2spectralmodel method)": [[250, "gammapy.modeling.models.PowerLaw2SpectralModel.integral_error", false]], "integral_error() (gammapy.modeling.models.powerlawnormspectralmodel method)": [[251, "gammapy.modeling.models.PowerLawNormSpectralModel.integral_error", false]], "integral_error() (gammapy.modeling.models.powerlawspectralmodel method)": [[252, "gammapy.modeling.models.PowerLawSpectralModel.integral_error", false]], "integral_error() (gammapy.modeling.models.scalespectralmodel method)": [[257, "gammapy.modeling.models.ScaleSpectralModel.integral_error", false]], "integral_error() (gammapy.modeling.models.smoothbrokenpowerlawspectralmodel method)": [[262, "gammapy.modeling.models.SmoothBrokenPowerLawSpectralModel.integral_error", false]], "integral_error() (gammapy.modeling.models.spectralmodel method)": [[264, "gammapy.modeling.models.SpectralModel.integral_error", false]], "integral_error() (gammapy.modeling.models.superexpcutoffpowerlaw3fglspectralmodel method)": [[265, "gammapy.modeling.models.SuperExpCutoffPowerLaw3FGLSpectralModel.integral_error", false]], "integral_error() (gammapy.modeling.models.superexpcutoffpowerlaw4fgldr3spectralmodel method)": [[266, "gammapy.modeling.models.SuperExpCutoffPowerLaw4FGLDR3SpectralModel.integral_error", false]], "integral_error() (gammapy.modeling.models.superexpcutoffpowerlaw4fglspectralmodel method)": [[267, "gammapy.modeling.models.SuperExpCutoffPowerLaw4FGLSpectralModel.integral_error", false]], "integral_error() (gammapy.modeling.models.templatendspectralmodel method)": [[270, "gammapy.modeling.models.TemplateNDSpectralModel.integral_error", false]], "integral_error() (gammapy.modeling.models.templatespectralmodel method)": [[274, "gammapy.modeling.models.TemplateSpectralModel.integral_error", false]], "integrate_geom() (gammapy.modeling.models.constantfluxspatialmodel static method)": [[219, "gammapy.modeling.models.ConstantFluxSpatialModel.integrate_geom", false]], "integrate_geom() (gammapy.modeling.models.constantspatialmodel method)": [[220, "gammapy.modeling.models.ConstantSpatialModel.integrate_geom", false]], "integrate_geom() (gammapy.modeling.models.diskspatialmodel method)": [[224, "gammapy.modeling.models.DiskSpatialModel.integrate_geom", false]], "integrate_geom() (gammapy.modeling.models.gaussianspatialmodel method)": [[232, "gammapy.modeling.models.GaussianSpatialModel.integrate_geom", false]], "integrate_geom() (gammapy.modeling.models.generalizedgaussianspatialmodel method)": [[235, "gammapy.modeling.models.GeneralizedGaussianSpatialModel.integrate_geom", false]], "integrate_geom() (gammapy.modeling.models.piecewisenormspatialmodel method)": [[247, "gammapy.modeling.models.PiecewiseNormSpatialModel.integrate_geom", false]], "integrate_geom() (gammapy.modeling.models.pointspatialmodel method)": [[249, "gammapy.modeling.models.PointSpatialModel.integrate_geom", false]], "integrate_geom() (gammapy.modeling.models.shell2spatialmodel method)": [[258, "gammapy.modeling.models.Shell2SpatialModel.integrate_geom", false]], "integrate_geom() (gammapy.modeling.models.shellspatialmodel method)": [[259, "gammapy.modeling.models.ShellSpatialModel.integrate_geom", false]], "integrate_geom() (gammapy.modeling.models.skymodel method)": [[261, "gammapy.modeling.models.SkyModel.integrate_geom", false]], "integrate_geom() (gammapy.modeling.models.spatialmodel method)": [[263, "gammapy.modeling.models.SpatialModel.integrate_geom", false]], "integrate_geom() (gammapy.modeling.models.templatendspatialmodel method)": [[269, "gammapy.modeling.models.TemplateNDSpatialModel.integrate_geom", false]], "integrate_geom() (gammapy.modeling.models.templatespatialmodel method)": [[273, "gammapy.modeling.models.TemplateSpatialModel.integrate_geom", false]], "integrate_log_log() (gammapy.irf.background2d method)": [[146, "gammapy.irf.Background2D.integrate_log_log", false]], "integrate_log_log() (gammapy.irf.background3d method)": [[147, "gammapy.irf.Background3D.integrate_log_log", false]], "integrate_log_log() (gammapy.irf.backgroundirf method)": [[148, "gammapy.irf.BackgroundIRF.integrate_log_log", false]], "integrate_log_log() (gammapy.irf.edispkernel method)": [[149, "gammapy.irf.EDispKernel.integrate_log_log", false]], "integrate_log_log() (gammapy.irf.effectiveareatable2d method)": [[152, "gammapy.irf.EffectiveAreaTable2D.integrate_log_log", false]], "integrate_log_log() (gammapy.irf.energydependentmultigausspsf method)": [[153, "gammapy.irf.EnergyDependentMultiGaussPSF.integrate_log_log", false]], "integrate_log_log() (gammapy.irf.energydispersion2d method)": [[154, "gammapy.irf.EnergyDispersion2D.integrate_log_log", false]], "integrate_log_log() (gammapy.irf.irf method)": [[156, "gammapy.irf.IRF.integrate_log_log", false]], "integrate_log_log() (gammapy.irf.parametricpsf method)": [[163, "gammapy.irf.ParametricPSF.integrate_log_log", false]], "integrate_log_log() (gammapy.irf.psf3d method)": [[159, "gammapy.irf.PSF3D.integrate_log_log", false]], "integrate_log_log() (gammapy.irf.psfking method)": [[161, "gammapy.irf.PSFKing.integrate_log_log", false]], "integrate_log_log() (gammapy.irf.radmax2d method)": [[164, "gammapy.irf.RadMax2D.integrate_log_log", false]], "integrate_spectrum() (in module gammapy.modeling.models)": [[279, "gammapy.modeling.models.integrate_spectrum", false]], "integrate_spectrum_separation() (gammapy.astro.darkmatter.burkertprofile method)": [[17, "gammapy.astro.darkmatter.BurkertProfile.integrate_spectrum_separation", false]], "integrate_spectrum_separation() (gammapy.astro.darkmatter.dmprofile method)": [[18, "gammapy.astro.darkmatter.DMProfile.integrate_spectrum_separation", false]], "integrate_spectrum_separation() (gammapy.astro.darkmatter.einastoprofile method)": [[21, "gammapy.astro.darkmatter.EinastoProfile.integrate_spectrum_separation", false]], "integrate_spectrum_separation() (gammapy.astro.darkmatter.isothermalprofile method)": [[22, "gammapy.astro.darkmatter.IsothermalProfile.integrate_spectrum_separation", false]], "integrate_spectrum_separation() (gammapy.astro.darkmatter.mooreprofile method)": [[24, "gammapy.astro.darkmatter.MooreProfile.integrate_spectrum_separation", false]], "integrate_spectrum_separation() (gammapy.astro.darkmatter.nfwprofile method)": [[25, "gammapy.astro.darkmatter.NFWProfile.integrate_spectrum_separation", false]], "integrate_spectrum_separation() (gammapy.astro.darkmatter.zhaoprofile method)": [[27, "gammapy.astro.darkmatter.ZhaoProfile.integrate_spectrum_separation", false]], "interp (gammapy.maps.mapaxis attribute)": [[197, "gammapy.maps.MapAxis.interp", false]], "interp (gammapy.maps.timemapaxis attribute)": [[202, "gammapy.maps.TimeMapAxis.interp", false]], "interp_by_coord() (gammapy.maps.hpxmap method)": [[192, "gammapy.maps.HpxMap.interp_by_coord", false]], "interp_by_coord() (gammapy.maps.hpxndmap method)": [[193, "gammapy.maps.HpxNDMap.interp_by_coord", false]], "interp_by_coord() (gammapy.maps.map method)": [[195, "gammapy.maps.Map.interp_by_coord", false]], "interp_by_coord() (gammapy.maps.regionndmap method)": [[201, "gammapy.maps.RegionNDMap.interp_by_coord", false]], "interp_by_coord() (gammapy.maps.wcsmap method)": [[204, "gammapy.maps.WcsMap.interp_by_coord", false]], "interp_by_coord() (gammapy.maps.wcsndmap method)": [[205, "gammapy.maps.WcsNDMap.interp_by_coord", false]], "interp_by_pix() (gammapy.maps.hpxmap method)": [[192, "gammapy.maps.HpxMap.interp_by_pix", false]], "interp_by_pix() (gammapy.maps.hpxndmap method)": [[193, "gammapy.maps.HpxNDMap.interp_by_pix", false]], "interp_by_pix() (gammapy.maps.map method)": [[195, "gammapy.maps.Map.interp_by_pix", false]], "interp_by_pix() (gammapy.maps.regionndmap method)": [[201, "gammapy.maps.RegionNDMap.interp_by_pix", false]], "interp_by_pix() (gammapy.maps.wcsmap method)": [[204, "gammapy.maps.WcsMap.interp_by_pix", false]], "interp_by_pix() (gammapy.maps.wcsndmap method)": [[205, "gammapy.maps.WcsNDMap.interp_by_pix", false]], "interp_missing_data() (gammapy.irf.background2d method)": [[146, "gammapy.irf.Background2D.interp_missing_data", false]], "interp_missing_data() (gammapy.irf.background3d method)": [[147, "gammapy.irf.Background3D.interp_missing_data", false]], "interp_missing_data() (gammapy.irf.backgroundirf method)": [[148, "gammapy.irf.BackgroundIRF.interp_missing_data", false]], "interp_missing_data() (gammapy.irf.edispkernel method)": [[149, "gammapy.irf.EDispKernel.interp_missing_data", false]], "interp_missing_data() (gammapy.irf.effectiveareatable2d method)": [[152, "gammapy.irf.EffectiveAreaTable2D.interp_missing_data", false]], "interp_missing_data() (gammapy.irf.energydependentmultigausspsf method)": [[153, "gammapy.irf.EnergyDependentMultiGaussPSF.interp_missing_data", false]], "interp_missing_data() (gammapy.irf.energydispersion2d method)": [[154, "gammapy.irf.EnergyDispersion2D.interp_missing_data", false]], "interp_missing_data() (gammapy.irf.irf method)": [[156, "gammapy.irf.IRF.interp_missing_data", false]], "interp_missing_data() (gammapy.irf.parametricpsf method)": [[163, "gammapy.irf.ParametricPSF.interp_missing_data", false]], "interp_missing_data() (gammapy.irf.psf3d method)": [[159, "gammapy.irf.PSF3D.interp_missing_data", false]], "interp_missing_data() (gammapy.irf.psfking method)": [[161, "gammapy.irf.PSFKing.interp_missing_data", false]], "interp_missing_data() (gammapy.irf.radmax2d method)": [[164, "gammapy.irf.RadMax2D.interp_missing_data", false]], "interp_to_geom() (gammapy.maps.hpxmap method)": [[192, "gammapy.maps.HpxMap.interp_to_geom", false]], "interp_to_geom() (gammapy.maps.hpxndmap method)": [[193, "gammapy.maps.HpxNDMap.interp_to_geom", false]], "interp_to_geom() (gammapy.maps.map method)": [[195, "gammapy.maps.Map.interp_to_geom", false]], "interp_to_geom() (gammapy.maps.regionndmap method)": [[201, "gammapy.maps.RegionNDMap.interp_to_geom", false]], "interp_to_geom() (gammapy.maps.wcsmap method)": [[204, "gammapy.maps.WcsMap.interp_to_geom", false]], "interp_to_geom() (gammapy.maps.wcsndmap method)": [[205, "gammapy.maps.WcsNDMap.interp_to_geom", false]], "interp_weights() (gammapy.maps.hpxgeom method)": [[191, "gammapy.maps.HpxGeom.interp_weights", false]], "interpolate_profile() (in module gammapy.utils.interpolation)": [[317, "gammapy.utils.interpolation.interpolate_profile", false]], "interpolation_scale() (in module gammapy.utils.interpolation)": [[318, "gammapy.utils.interpolation.interpolation_scale", false]], "inverse (gammapy.astro.population.casebattacharya1998 attribute)": [[28, "gammapy.astro.population.CaseBattacharya1998.inverse", false]], "inverse (gammapy.astro.population.exponential attribute)": [[29, "gammapy.astro.population.Exponential.inverse", false]], "inverse (gammapy.astro.population.faucherkaspi2006 attribute)": [[30, "gammapy.astro.population.FaucherKaspi2006.inverse", false]], "inverse (gammapy.astro.population.faucherkaspi2006velocitybimodal attribute)": [[31, "gammapy.astro.population.FaucherKaspi2006VelocityBimodal.inverse", false]], "inverse (gammapy.astro.population.faucherkaspi2006velocitymaxwellian attribute)": [[32, "gammapy.astro.population.FaucherKaspi2006VelocityMaxwellian.inverse", false]], "inverse (gammapy.astro.population.lorimer2006 attribute)": [[35, "gammapy.astro.population.Lorimer2006.inverse", false]], "inverse (gammapy.astro.population.paczynski1990 attribute)": [[36, "gammapy.astro.population.Paczynski1990.inverse", false]], "inverse (gammapy.astro.population.paczynski1990velocity attribute)": [[37, "gammapy.astro.population.Paczynski1990Velocity.inverse", false]], "inverse (gammapy.astro.population.yusifovkucuk2004 attribute)": [[39, "gammapy.astro.population.YusifovKucuk2004.inverse", false]], "inverse (gammapy.astro.population.yusifovkucuk2004b attribute)": [[40, "gammapy.astro.population.YusifovKucuk2004B.inverse", false]], "inverse() (gammapy.astro.darkmatter.darkmatterannihilationspectralmodel method)": [[19, "gammapy.astro.darkmatter.DarkMatterAnnihilationSpectralModel.inverse", false]], "inverse() (gammapy.astro.darkmatter.darkmatterdecayspectralmodel method)": [[20, "gammapy.astro.darkmatter.DarkMatterDecaySpectralModel.inverse", false]], "inverse() (gammapy.astro.darkmatter.primaryflux method)": [[26, "gammapy.astro.darkmatter.PrimaryFlux.inverse", false]], "inverse() (gammapy.modeling.models.brokenpowerlawspectralmodel method)": [[217, "gammapy.modeling.models.BrokenPowerLawSpectralModel.inverse", false]], "inverse() (gammapy.modeling.models.compoundspectralmodel method)": [[218, "gammapy.modeling.models.CompoundSpectralModel.inverse", false]], "inverse() (gammapy.modeling.models.constantspectralmodel method)": [[221, "gammapy.modeling.models.ConstantSpectralModel.inverse", false]], "inverse() (gammapy.modeling.models.eblabsorptionnormspectralmodel method)": [[225, "gammapy.modeling.models.EBLAbsorptionNormSpectralModel.inverse", false]], "inverse() (gammapy.modeling.models.expcutoffpowerlaw3fglspectralmodel method)": [[227, "gammapy.modeling.models.ExpCutoffPowerLaw3FGLSpectralModel.inverse", false]], "inverse() (gammapy.modeling.models.expcutoffpowerlawnormspectralmodel method)": [[228, "gammapy.modeling.models.ExpCutoffPowerLawNormSpectralModel.inverse", false]], "inverse() (gammapy.modeling.models.expcutoffpowerlawspectralmodel method)": [[229, "gammapy.modeling.models.ExpCutoffPowerLawSpectralModel.inverse", false]], "inverse() (gammapy.modeling.models.gaussianspectralmodel method)": [[233, "gammapy.modeling.models.GaussianSpectralModel.inverse", false]], "inverse() (gammapy.modeling.models.logparabolanormspectralmodel method)": [[239, "gammapy.modeling.models.LogParabolaNormSpectralModel.inverse", false]], "inverse() (gammapy.modeling.models.logparabolaspectralmodel method)": [[240, "gammapy.modeling.models.LogParabolaSpectralModel.inverse", false]], "inverse() (gammapy.modeling.models.meyercrabspectralmodel method)": [[242, "gammapy.modeling.models.MeyerCrabSpectralModel.inverse", false]], "inverse() (gammapy.modeling.models.naimaspectralmodel method)": [[246, "gammapy.modeling.models.NaimaSpectralModel.inverse", false]], "inverse() (gammapy.modeling.models.piecewisenormspectralmodel method)": [[248, "gammapy.modeling.models.PiecewiseNormSpectralModel.inverse", false]], "inverse() (gammapy.modeling.models.powerlaw2spectralmodel method)": [[250, "gammapy.modeling.models.PowerLaw2SpectralModel.inverse", false]], "inverse() (gammapy.modeling.models.powerlawnormspectralmodel method)": [[251, "gammapy.modeling.models.PowerLawNormSpectralModel.inverse", false]], "inverse() (gammapy.modeling.models.powerlawspectralmodel method)": [[252, "gammapy.modeling.models.PowerLawSpectralModel.inverse", false]], "inverse() (gammapy.modeling.models.scalespectralmodel method)": [[257, "gammapy.modeling.models.ScaleSpectralModel.inverse", false]], "inverse() (gammapy.modeling.models.smoothbrokenpowerlawspectralmodel method)": [[262, "gammapy.modeling.models.SmoothBrokenPowerLawSpectralModel.inverse", false]], "inverse() (gammapy.modeling.models.spectralmodel method)": [[264, "gammapy.modeling.models.SpectralModel.inverse", false]], "inverse() (gammapy.modeling.models.superexpcutoffpowerlaw3fglspectralmodel method)": [[265, "gammapy.modeling.models.SuperExpCutoffPowerLaw3FGLSpectralModel.inverse", false]], "inverse() (gammapy.modeling.models.superexpcutoffpowerlaw4fgldr3spectralmodel method)": [[266, "gammapy.modeling.models.SuperExpCutoffPowerLaw4FGLDR3SpectralModel.inverse", false]], "inverse() (gammapy.modeling.models.superexpcutoffpowerlaw4fglspectralmodel method)": [[267, "gammapy.modeling.models.SuperExpCutoffPowerLaw4FGLSpectralModel.inverse", false]], "inverse() (gammapy.modeling.models.templatendspectralmodel method)": [[270, "gammapy.modeling.models.TemplateNDSpectralModel.inverse", false]], "inverse() (gammapy.modeling.models.templatespectralmodel method)": [[274, "gammapy.modeling.models.TemplateSpectralModel.inverse", false]], "inverse_all() (gammapy.astro.darkmatter.darkmatterannihilationspectralmodel method)": [[19, "gammapy.astro.darkmatter.DarkMatterAnnihilationSpectralModel.inverse_all", false]], "inverse_all() (gammapy.astro.darkmatter.darkmatterdecayspectralmodel method)": [[20, "gammapy.astro.darkmatter.DarkMatterDecaySpectralModel.inverse_all", false]], "inverse_all() (gammapy.astro.darkmatter.primaryflux method)": [[26, "gammapy.astro.darkmatter.PrimaryFlux.inverse_all", false]], "inverse_all() (gammapy.modeling.models.brokenpowerlawspectralmodel method)": [[217, "gammapy.modeling.models.BrokenPowerLawSpectralModel.inverse_all", false]], "inverse_all() (gammapy.modeling.models.compoundspectralmodel method)": [[218, "gammapy.modeling.models.CompoundSpectralModel.inverse_all", false]], "inverse_all() (gammapy.modeling.models.constantspectralmodel method)": [[221, "gammapy.modeling.models.ConstantSpectralModel.inverse_all", false]], "inverse_all() (gammapy.modeling.models.eblabsorptionnormspectralmodel method)": [[225, "gammapy.modeling.models.EBLAbsorptionNormSpectralModel.inverse_all", false]], "inverse_all() (gammapy.modeling.models.expcutoffpowerlaw3fglspectralmodel method)": [[227, "gammapy.modeling.models.ExpCutoffPowerLaw3FGLSpectralModel.inverse_all", false]], "inverse_all() (gammapy.modeling.models.expcutoffpowerlawnormspectralmodel method)": [[228, "gammapy.modeling.models.ExpCutoffPowerLawNormSpectralModel.inverse_all", false]], "inverse_all() (gammapy.modeling.models.expcutoffpowerlawspectralmodel method)": [[229, "gammapy.modeling.models.ExpCutoffPowerLawSpectralModel.inverse_all", false]], "inverse_all() (gammapy.modeling.models.gaussianspectralmodel method)": [[233, "gammapy.modeling.models.GaussianSpectralModel.inverse_all", false]], "inverse_all() (gammapy.modeling.models.logparabolanormspectralmodel method)": [[239, "gammapy.modeling.models.LogParabolaNormSpectralModel.inverse_all", false]], "inverse_all() (gammapy.modeling.models.logparabolaspectralmodel method)": [[240, "gammapy.modeling.models.LogParabolaSpectralModel.inverse_all", false]], "inverse_all() (gammapy.modeling.models.meyercrabspectralmodel method)": [[242, "gammapy.modeling.models.MeyerCrabSpectralModel.inverse_all", false]], "inverse_all() (gammapy.modeling.models.naimaspectralmodel method)": [[246, "gammapy.modeling.models.NaimaSpectralModel.inverse_all", false]], "inverse_all() (gammapy.modeling.models.piecewisenormspectralmodel method)": [[248, "gammapy.modeling.models.PiecewiseNormSpectralModel.inverse_all", false]], "inverse_all() (gammapy.modeling.models.powerlaw2spectralmodel method)": [[250, "gammapy.modeling.models.PowerLaw2SpectralModel.inverse_all", false]], "inverse_all() (gammapy.modeling.models.powerlawnormspectralmodel method)": [[251, "gammapy.modeling.models.PowerLawNormSpectralModel.inverse_all", false]], "inverse_all() (gammapy.modeling.models.powerlawspectralmodel method)": [[252, "gammapy.modeling.models.PowerLawSpectralModel.inverse_all", false]], "inverse_all() (gammapy.modeling.models.scalespectralmodel method)": [[257, "gammapy.modeling.models.ScaleSpectralModel.inverse_all", false]], "inverse_all() (gammapy.modeling.models.smoothbrokenpowerlawspectralmodel method)": [[262, "gammapy.modeling.models.SmoothBrokenPowerLawSpectralModel.inverse_all", false]], "inverse_all() (gammapy.modeling.models.spectralmodel method)": [[264, "gammapy.modeling.models.SpectralModel.inverse_all", false]], "inverse_all() (gammapy.modeling.models.superexpcutoffpowerlaw3fglspectralmodel method)": [[265, "gammapy.modeling.models.SuperExpCutoffPowerLaw3FGLSpectralModel.inverse_all", false]], "inverse_all() (gammapy.modeling.models.superexpcutoffpowerlaw4fgldr3spectralmodel method)": [[266, "gammapy.modeling.models.SuperExpCutoffPowerLaw4FGLDR3SpectralModel.inverse_all", false]], "inverse_all() (gammapy.modeling.models.superexpcutoffpowerlaw4fglspectralmodel method)": [[267, "gammapy.modeling.models.SuperExpCutoffPowerLaw4FGLSpectralModel.inverse_all", false]], "inverse_all() (gammapy.modeling.models.templatendspectralmodel method)": [[270, "gammapy.modeling.models.TemplateNDSpectralModel.inverse_all", false]], "inverse_all() (gammapy.modeling.models.templatespectralmodel method)": [[274, "gammapy.modeling.models.TemplateSpectralModel.inverse_all", false]], "inversecdfsampler (class in gammapy.utils.random)": [[326, "gammapy.utils.random.InverseCDFSampler", false]], "ipix (gammapy.maps.hpxgeom attribute)": [[191, "gammapy.maps.HpxGeom.ipix", false]], "irf": [[573, "term-IRF", true]], "irf (class in gammapy.irf)": [[156, "gammapy.irf.IRF", false]], "irf_registry (in module gammapy.irf)": [[158, "gammapy.irf.IRF_REGISTRY", false]], "irfmap (class in gammapy.irf)": [[157, "gammapy.irf.IRFMap", false]], "is_aligned() (gammapy.maps.hpxgeom method)": [[191, "gammapy.maps.HpxGeom.is_aligned", false]], "is_aligned() (gammapy.maps.mapaxis method)": [[197, "gammapy.maps.MapAxis.is_aligned", false]], "is_aligned() (gammapy.maps.timemapaxis method)": [[202, "gammapy.maps.TimeMapAxis.is_aligned", false]], "is_aligned() (gammapy.maps.wcsgeom method)": [[203, "gammapy.maps.WcsGeom.is_aligned", false]], "is_all_point_sky_regions (gammapy.maps.regiongeom attribute)": [[200, "gammapy.maps.RegionGeom.is_all_point_sky_regions", false]], "is_all_same_energy_shape (gammapy.datasets.datasets attribute)": [[100, "gammapy.datasets.Datasets.is_all_same_energy_shape", false]], "is_all_same_shape (gammapy.datasets.datasets attribute)": [[100, "gammapy.datasets.Datasets.is_all_same_shape", false]], "is_all_same_type (gammapy.datasets.datasets attribute)": [[100, "gammapy.datasets.Datasets.is_all_same_type", false]], "is_allclose() (gammapy.irf.background2d method)": [[146, "gammapy.irf.Background2D.is_allclose", false]], "is_allclose() (gammapy.irf.background3d method)": [[147, "gammapy.irf.Background3D.is_allclose", false]], "is_allclose() (gammapy.irf.backgroundirf method)": [[148, "gammapy.irf.BackgroundIRF.is_allclose", false]], "is_allclose() (gammapy.irf.edispkernel method)": [[149, "gammapy.irf.EDispKernel.is_allclose", false]], "is_allclose() (gammapy.irf.effectiveareatable2d method)": [[152, "gammapy.irf.EffectiveAreaTable2D.is_allclose", false]], "is_allclose() (gammapy.irf.energydependentmultigausspsf method)": [[153, "gammapy.irf.EnergyDependentMultiGaussPSF.is_allclose", false]], "is_allclose() (gammapy.irf.energydispersion2d method)": [[154, "gammapy.irf.EnergyDispersion2D.is_allclose", false]], "is_allclose() (gammapy.irf.irf method)": [[156, "gammapy.irf.IRF.is_allclose", false]], "is_allclose() (gammapy.irf.parametricpsf method)": [[163, "gammapy.irf.ParametricPSF.is_allclose", false]], "is_allclose() (gammapy.irf.psf3d method)": [[159, "gammapy.irf.PSF3D.is_allclose", false]], "is_allclose() (gammapy.irf.psfking method)": [[161, "gammapy.irf.PSFKing.is_allclose", false]], "is_allclose() (gammapy.irf.radmax2d method)": [[164, "gammapy.irf.RadMax2D.is_allclose", false]], "is_allclose() (gammapy.maps.hpxgeom method)": [[191, "gammapy.maps.HpxGeom.is_allclose", false]], "is_allclose() (gammapy.maps.hpxmap method)": [[192, "gammapy.maps.HpxMap.is_allclose", false]], "is_allclose() (gammapy.maps.hpxndmap method)": [[193, "gammapy.maps.HpxNDMap.is_allclose", false]], "is_allclose() (gammapy.maps.labelmapaxis method)": [[194, "gammapy.maps.LabelMapAxis.is_allclose", false]], "is_allclose() (gammapy.maps.map method)": [[195, "gammapy.maps.Map.is_allclose", false]], "is_allclose() (gammapy.maps.mapaxes method)": [[196, "gammapy.maps.MapAxes.is_allclose", false]], "is_allclose() (gammapy.maps.mapaxis method)": [[197, "gammapy.maps.MapAxis.is_allclose", false]], "is_allclose() (gammapy.maps.regiongeom method)": [[200, "gammapy.maps.RegionGeom.is_allclose", false]], "is_allclose() (gammapy.maps.regionndmap method)": [[201, "gammapy.maps.RegionNDMap.is_allclose", false]], "is_allclose() (gammapy.maps.timemapaxis method)": [[202, "gammapy.maps.TimeMapAxis.is_allclose", false]], "is_allclose() (gammapy.maps.wcsgeom method)": [[203, "gammapy.maps.WcsGeom.is_allclose", false]], "is_allclose() (gammapy.maps.wcsmap method)": [[204, "gammapy.maps.WcsMap.is_allclose", false]], "is_allclose() (gammapy.maps.wcsndmap method)": [[205, "gammapy.maps.WcsNDMap.is_allclose", false]], "is_allsky (gammapy.maps.geom attribute)": [[190, "gammapy.maps.Geom.is_allsky", false]], "is_allsky (gammapy.maps.hpxgeom attribute)": [[191, "gammapy.maps.HpxGeom.is_allsky", false]], "is_allsky (gammapy.maps.regiongeom attribute)": [[200, "gammapy.maps.RegionGeom.is_allsky", false]], "is_allsky (gammapy.maps.wcsgeom attribute)": [[203, "gammapy.maps.WcsGeom.is_allsky", false]], "is_contiguous (gammapy.maps.timemapaxis attribute)": [[202, "gammapy.maps.TimeMapAxis.is_contiguous", false]], "is_convertible_to_flux_sed_type (gammapy.estimators.fluxmaps attribute)": [[122, "gammapy.estimators.FluxMaps.is_convertible_to_flux_sed_type", false]], "is_convertible_to_flux_sed_type (gammapy.estimators.fluxpoints attribute)": [[124, "gammapy.estimators.FluxPoints.is_convertible_to_flux_sed_type", false]], "is_energy_axis (gammapy.maps.mapaxis attribute)": [[197, "gammapy.maps.MapAxis.is_energy_axis", false]], "is_energy_dependent (gammapy.modeling.models.constantfluxspatialmodel attribute)": [[219, "gammapy.modeling.models.ConstantFluxSpatialModel.is_energy_dependent", false]], "is_energy_dependent (gammapy.modeling.models.constantspatialmodel attribute)": [[220, "gammapy.modeling.models.ConstantSpatialModel.is_energy_dependent", false]], "is_energy_dependent (gammapy.modeling.models.constanttemporalmodel attribute)": [[222, "gammapy.modeling.models.ConstantTemporalModel.is_energy_dependent", false]], "is_energy_dependent (gammapy.modeling.models.diskspatialmodel attribute)": [[224, "gammapy.modeling.models.DiskSpatialModel.is_energy_dependent", false]], "is_energy_dependent (gammapy.modeling.models.expdecaytemporalmodel attribute)": [[230, "gammapy.modeling.models.ExpDecayTemporalModel.is_energy_dependent", false]], "is_energy_dependent (gammapy.modeling.models.gaussianspatialmodel attribute)": [[232, "gammapy.modeling.models.GaussianSpatialModel.is_energy_dependent", false]], "is_energy_dependent (gammapy.modeling.models.gaussiantemporalmodel attribute)": [[234, "gammapy.modeling.models.GaussianTemporalModel.is_energy_dependent", false]], "is_energy_dependent (gammapy.modeling.models.generalizedgaussianspatialmodel attribute)": [[235, "gammapy.modeling.models.GeneralizedGaussianSpatialModel.is_energy_dependent", false]], "is_energy_dependent (gammapy.modeling.models.generalizedgaussiantemporalmodel attribute)": [[236, "gammapy.modeling.models.GeneralizedGaussianTemporalModel.is_energy_dependent", false]], "is_energy_dependent (gammapy.modeling.models.lightcurvetemplatetemporalmodel attribute)": [[237, "gammapy.modeling.models.LightCurveTemplateTemporalModel.is_energy_dependent", false]], "is_energy_dependent (gammapy.modeling.models.lineartemporalmodel attribute)": [[238, "gammapy.modeling.models.LinearTemporalModel.is_energy_dependent", false]], "is_energy_dependent (gammapy.modeling.models.piecewisenormspatialmodel attribute)": [[247, "gammapy.modeling.models.PiecewiseNormSpatialModel.is_energy_dependent", false]], "is_energy_dependent (gammapy.modeling.models.pointspatialmodel attribute)": [[249, "gammapy.modeling.models.PointSpatialModel.is_energy_dependent", false]], "is_energy_dependent (gammapy.modeling.models.powerlawtemporalmodel attribute)": [[253, "gammapy.modeling.models.PowerLawTemporalModel.is_energy_dependent", false]], "is_energy_dependent (gammapy.modeling.models.shell2spatialmodel attribute)": [[258, "gammapy.modeling.models.Shell2SpatialModel.is_energy_dependent", false]], "is_energy_dependent (gammapy.modeling.models.shellspatialmodel attribute)": [[259, "gammapy.modeling.models.ShellSpatialModel.is_energy_dependent", false]], "is_energy_dependent (gammapy.modeling.models.sinetemporalmodel attribute)": [[260, "gammapy.modeling.models.SineTemporalModel.is_energy_dependent", false]], "is_energy_dependent (gammapy.modeling.models.spatialmodel attribute)": [[263, "gammapy.modeling.models.SpatialModel.is_energy_dependent", false]], "is_energy_dependent (gammapy.modeling.models.templatendspatialmodel attribute)": [[269, "gammapy.modeling.models.TemplateNDSpatialModel.is_energy_dependent", false]], "is_energy_dependent (gammapy.modeling.models.templatephasecurvetemporalmodel attribute)": [[272, "gammapy.modeling.models.TemplatePhaseCurveTemporalModel.is_energy_dependent", false]], "is_energy_dependent (gammapy.modeling.models.templatespatialmodel attribute)": [[273, "gammapy.modeling.models.TemplateSpatialModel.is_energy_dependent", false]], "is_energy_dependent (gammapy.modeling.models.temporalmodel attribute)": [[275, "gammapy.modeling.models.TemporalModel.is_energy_dependent", false]], "is_fixed_rad_max (gammapy.irf.radmax2d attribute)": [[164, "gammapy.irf.RadMax2D.is_fixed_rad_max", false]], "is_flat (gammapy.maps.geom attribute)": [[190, "gammapy.maps.Geom.is_flat", false]], "is_flat (gammapy.maps.hpxgeom attribute)": [[191, "gammapy.maps.HpxGeom.is_flat", false]], "is_flat (gammapy.maps.mapaxes attribute)": [[196, "gammapy.maps.MapAxes.is_flat", false]], "is_flat (gammapy.maps.regiongeom attribute)": [[200, "gammapy.maps.RegionGeom.is_flat", false]], "is_flat (gammapy.maps.wcsgeom attribute)": [[203, "gammapy.maps.WcsGeom.is_flat", false]], "is_hpx (gammapy.maps.hpxgeom attribute)": [[191, "gammapy.maps.HpxGeom.is_hpx", false]], "is_hpx (gammapy.maps.regiongeom attribute)": [[200, "gammapy.maps.RegionGeom.is_hpx", false]], "is_hpx (gammapy.maps.wcsgeom attribute)": [[203, "gammapy.maps.WcsGeom.is_hpx", false]], "is_image (gammapy.maps.geom attribute)": [[190, "gammapy.maps.Geom.is_image", false]], "is_image (gammapy.maps.hpxgeom attribute)": [[191, "gammapy.maps.HpxGeom.is_image", false]], "is_image (gammapy.maps.regiongeom attribute)": [[200, "gammapy.maps.RegionGeom.is_image", false]], "is_image (gammapy.maps.wcsgeom attribute)": [[203, "gammapy.maps.WcsGeom.is_image", false]], "is_mask (gammapy.maps.hpxmap attribute)": [[192, "gammapy.maps.HpxMap.is_mask", false]], "is_mask (gammapy.maps.hpxndmap attribute)": [[193, "gammapy.maps.HpxNDMap.is_mask", false]], "is_mask (gammapy.maps.map attribute)": [[195, "gammapy.maps.Map.is_mask", false]], "is_mask (gammapy.maps.regionndmap attribute)": [[201, "gammapy.maps.RegionNDMap.is_mask", false]], "is_mask (gammapy.maps.wcsmap attribute)": [[204, "gammapy.maps.WcsMap.is_mask", false]], "is_mask (gammapy.maps.wcsndmap attribute)": [[205, "gammapy.maps.WcsNDMap.is_mask", false]], "is_norm_spectral_model (gammapy.astro.darkmatter.darkmatterannihilationspectralmodel attribute)": [[19, "gammapy.astro.darkmatter.DarkMatterAnnihilationSpectralModel.is_norm_spectral_model", false]], "is_norm_spectral_model (gammapy.astro.darkmatter.darkmatterdecayspectralmodel attribute)": [[20, "gammapy.astro.darkmatter.DarkMatterDecaySpectralModel.is_norm_spectral_model", false]], "is_norm_spectral_model (gammapy.astro.darkmatter.primaryflux attribute)": [[26, "gammapy.astro.darkmatter.PrimaryFlux.is_norm_spectral_model", false]], "is_norm_spectral_model (gammapy.modeling.models.brokenpowerlawspectralmodel attribute)": [[217, "gammapy.modeling.models.BrokenPowerLawSpectralModel.is_norm_spectral_model", false]], "is_norm_spectral_model (gammapy.modeling.models.compoundspectralmodel attribute)": [[218, "gammapy.modeling.models.CompoundSpectralModel.is_norm_spectral_model", false]], "is_norm_spectral_model (gammapy.modeling.models.constantspectralmodel attribute)": [[221, "gammapy.modeling.models.ConstantSpectralModel.is_norm_spectral_model", false]], "is_norm_spectral_model (gammapy.modeling.models.eblabsorptionnormspectralmodel attribute)": [[225, "gammapy.modeling.models.EBLAbsorptionNormSpectralModel.is_norm_spectral_model", false]], "is_norm_spectral_model (gammapy.modeling.models.expcutoffpowerlaw3fglspectralmodel attribute)": [[227, "gammapy.modeling.models.ExpCutoffPowerLaw3FGLSpectralModel.is_norm_spectral_model", false]], "is_norm_spectral_model (gammapy.modeling.models.expcutoffpowerlawnormspectralmodel attribute)": [[228, "gammapy.modeling.models.ExpCutoffPowerLawNormSpectralModel.is_norm_spectral_model", false]], "is_norm_spectral_model (gammapy.modeling.models.expcutoffpowerlawspectralmodel attribute)": [[229, "gammapy.modeling.models.ExpCutoffPowerLawSpectralModel.is_norm_spectral_model", false]], "is_norm_spectral_model (gammapy.modeling.models.gaussianspectralmodel attribute)": [[233, "gammapy.modeling.models.GaussianSpectralModel.is_norm_spectral_model", false]], "is_norm_spectral_model (gammapy.modeling.models.logparabolanormspectralmodel attribute)": [[239, "gammapy.modeling.models.LogParabolaNormSpectralModel.is_norm_spectral_model", false]], "is_norm_spectral_model (gammapy.modeling.models.logparabolaspectralmodel attribute)": [[240, "gammapy.modeling.models.LogParabolaSpectralModel.is_norm_spectral_model", false]], "is_norm_spectral_model (gammapy.modeling.models.meyercrabspectralmodel attribute)": [[242, "gammapy.modeling.models.MeyerCrabSpectralModel.is_norm_spectral_model", false]], "is_norm_spectral_model (gammapy.modeling.models.naimaspectralmodel attribute)": [[246, "gammapy.modeling.models.NaimaSpectralModel.is_norm_spectral_model", false]], "is_norm_spectral_model (gammapy.modeling.models.piecewisenormspectralmodel attribute)": [[248, "gammapy.modeling.models.PiecewiseNormSpectralModel.is_norm_spectral_model", false]], "is_norm_spectral_model (gammapy.modeling.models.powerlaw2spectralmodel attribute)": [[250, "gammapy.modeling.models.PowerLaw2SpectralModel.is_norm_spectral_model", false]], "is_norm_spectral_model (gammapy.modeling.models.powerlawnormspectralmodel attribute)": [[251, "gammapy.modeling.models.PowerLawNormSpectralModel.is_norm_spectral_model", false]], "is_norm_spectral_model (gammapy.modeling.models.powerlawspectralmodel attribute)": [[252, "gammapy.modeling.models.PowerLawSpectralModel.is_norm_spectral_model", false]], "is_norm_spectral_model (gammapy.modeling.models.scalespectralmodel attribute)": [[257, "gammapy.modeling.models.ScaleSpectralModel.is_norm_spectral_model", false]], "is_norm_spectral_model (gammapy.modeling.models.smoothbrokenpowerlawspectralmodel attribute)": [[262, "gammapy.modeling.models.SmoothBrokenPowerLawSpectralModel.is_norm_spectral_model", false]], "is_norm_spectral_model (gammapy.modeling.models.spectralmodel attribute)": [[264, "gammapy.modeling.models.SpectralModel.is_norm_spectral_model", false]], "is_norm_spectral_model (gammapy.modeling.models.superexpcutoffpowerlaw3fglspectralmodel attribute)": [[265, "gammapy.modeling.models.SuperExpCutoffPowerLaw3FGLSpectralModel.is_norm_spectral_model", false]], "is_norm_spectral_model (gammapy.modeling.models.superexpcutoffpowerlaw4fgldr3spectralmodel attribute)": [[266, "gammapy.modeling.models.SuperExpCutoffPowerLaw4FGLDR3SpectralModel.is_norm_spectral_model", false]], "is_norm_spectral_model (gammapy.modeling.models.superexpcutoffpowerlaw4fglspectralmodel attribute)": [[267, "gammapy.modeling.models.SuperExpCutoffPowerLaw4FGLSpectralModel.is_norm_spectral_model", false]], "is_norm_spectral_model (gammapy.modeling.models.templatendspectralmodel attribute)": [[270, "gammapy.modeling.models.TemplateNDSpectralModel.is_norm_spectral_model", false]], "is_norm_spectral_model (gammapy.modeling.models.templatespectralmodel attribute)": [[274, "gammapy.modeling.models.TemplateSpectralModel.is_norm_spectral_model", false]], "is_pointed_observation (gammapy.data.eventlist attribute)": [[83, "gammapy.data.EventList.is_pointed_observation", false]], "is_pointlike (gammapy.catalog.sourcecatalogobject2fhl attribute)": [[71, "gammapy.catalog.SourceCatalogObject2FHL.is_pointlike", false]], "is_pointlike (gammapy.catalog.sourcecatalogobject3fgl attribute)": [[74, "gammapy.catalog.SourceCatalogObject3FGL.is_pointlike", false]], "is_pointlike (gammapy.catalog.sourcecatalogobject3fhl attribute)": [[75, "gammapy.catalog.SourceCatalogObject3FHL.is_pointlike", false]], "is_pointlike (gammapy.catalog.sourcecatalogobject3hwc attribute)": [[76, "gammapy.catalog.SourceCatalogObject3HWC.is_pointlike", false]], "is_pointlike (gammapy.catalog.sourcecatalogobject4fgl attribute)": [[78, "gammapy.catalog.SourceCatalogObject4FGL.is_pointlike", false]], "is_pointlike (gammapy.irf.background2d attribute)": [[146, "gammapy.irf.Background2D.is_pointlike", false]], "is_pointlike (gammapy.irf.background3d attribute)": [[147, "gammapy.irf.Background3D.is_pointlike", false]], "is_pointlike (gammapy.irf.backgroundirf attribute)": [[148, "gammapy.irf.BackgroundIRF.is_pointlike", false]], "is_pointlike (gammapy.irf.edispkernel attribute)": [[149, "gammapy.irf.EDispKernel.is_pointlike", false]], "is_pointlike (gammapy.irf.effectiveareatable2d attribute)": [[152, "gammapy.irf.EffectiveAreaTable2D.is_pointlike", false]], "is_pointlike (gammapy.irf.energydependentmultigausspsf attribute)": [[153, "gammapy.irf.EnergyDependentMultiGaussPSF.is_pointlike", false]], "is_pointlike (gammapy.irf.energydispersion2d attribute)": [[154, "gammapy.irf.EnergyDispersion2D.is_pointlike", false]], "is_pointlike (gammapy.irf.irf attribute)": [[156, "gammapy.irf.IRF.is_pointlike", false]], "is_pointlike (gammapy.irf.parametricpsf attribute)": [[163, "gammapy.irf.ParametricPSF.is_pointlike", false]], "is_pointlike (gammapy.irf.psf3d attribute)": [[159, "gammapy.irf.PSF3D.is_pointlike", false]], "is_pointlike (gammapy.irf.psfking attribute)": [[161, "gammapy.irf.PSFKing.is_pointlike", false]], "is_pointlike (gammapy.irf.radmax2d attribute)": [[164, "gammapy.irf.RadMax2D.is_pointlike", false]], "is_region (gammapy.maps.hpxgeom attribute)": [[191, "gammapy.maps.HpxGeom.is_region", false]], "is_region (gammapy.maps.regiongeom attribute)": [[200, "gammapy.maps.RegionGeom.is_region", false]], "is_region (gammapy.maps.wcsgeom attribute)": [[203, "gammapy.maps.WcsGeom.is_region", false]], "is_regular (gammapy.maps.hpxgeom attribute)": [[191, "gammapy.maps.HpxGeom.is_regular", false]], "is_regular (gammapy.maps.regiongeom attribute)": [[200, "gammapy.maps.RegionGeom.is_regular", false]], "is_regular (gammapy.maps.wcsgeom attribute)": [[203, "gammapy.maps.WcsGeom.is_regular", false]], "is_ul (gammapy.estimators.fluxmaps attribute)": [[122, "gammapy.estimators.FluxMaps.is_ul", false]], "is_ul (gammapy.estimators.fluxpoints attribute)": [[124, "gammapy.estimators.FluxPoints.is_ul", false]], "is_unidimensional (gammapy.maps.mapaxes attribute)": [[196, "gammapy.maps.MapAxes.is_unidimensional", false]], "isothermalprofile (class in gammapy.astro.darkmatter)": [[22, "gammapy.astro.darkmatter.IsothermalProfile", false]], "items() (gammapy.data.hduindextable method)": [[87, "gammapy.data.HDUIndexTable.items", false]], "items() (gammapy.data.observationtable method)": [[91, "gammapy.data.ObservationTable.items", false]], "items() (gammapy.maps.maps method)": [[199, "gammapy.maps.Maps.items", false]], "iter_by_axis() (gammapy.estimators.fluxmaps method)": [[122, "gammapy.estimators.FluxMaps.iter_by_axis", false]], "iter_by_axis() (gammapy.estimators.fluxpoints method)": [[124, "gammapy.estimators.FluxPoints.iter_by_axis", false]], "iter_by_axis() (gammapy.maps.hpxmap method)": [[192, "gammapy.maps.HpxMap.iter_by_axis", false]], "iter_by_axis() (gammapy.maps.hpxndmap method)": [[193, "gammapy.maps.HpxNDMap.iter_by_axis", false]], "iter_by_axis() (gammapy.maps.map method)": [[195, "gammapy.maps.Map.iter_by_axis", false]], "iter_by_axis() (gammapy.maps.regionndmap method)": [[201, "gammapy.maps.RegionNDMap.iter_by_axis", false]], "iter_by_axis() (gammapy.maps.wcsmap method)": [[204, "gammapy.maps.WcsMap.iter_by_axis", false]], "iter_by_axis() (gammapy.maps.wcsndmap method)": [[205, "gammapy.maps.WcsNDMap.iter_by_axis", false]], "iter_by_axis_data() (gammapy.maps.regionndmap method)": [[201, "gammapy.maps.RegionNDMap.iter_by_axis_data", false]], "iter_by_edges (gammapy.maps.mapaxis attribute)": [[197, "gammapy.maps.MapAxis.iter_by_edges", false]], "iter_by_edges (gammapy.maps.timemapaxis attribute)": [[202, "gammapy.maps.TimeMapAxis.iter_by_edges", false]], "iter_by_image() (gammapy.maps.hpxmap method)": [[192, "gammapy.maps.HpxMap.iter_by_image", false]], "iter_by_image() (gammapy.maps.hpxndmap method)": [[193, "gammapy.maps.HpxNDMap.iter_by_image", false]], "iter_by_image() (gammapy.maps.map method)": [[195, "gammapy.maps.Map.iter_by_image", false]], "iter_by_image() (gammapy.maps.regionndmap method)": [[201, "gammapy.maps.RegionNDMap.iter_by_image", false]], "iter_by_image() (gammapy.maps.wcsmap method)": [[204, "gammapy.maps.WcsMap.iter_by_image", false]], "iter_by_image() (gammapy.maps.wcsndmap method)": [[205, "gammapy.maps.WcsNDMap.iter_by_image", false]], "iter_by_image_data() (gammapy.maps.hpxmap method)": [[192, "gammapy.maps.HpxMap.iter_by_image_data", false]], "iter_by_image_data() (gammapy.maps.hpxndmap method)": [[193, "gammapy.maps.HpxNDMap.iter_by_image_data", false]], "iter_by_image_data() (gammapy.maps.map method)": [[195, "gammapy.maps.Map.iter_by_image_data", false]], "iter_by_image_data() (gammapy.maps.regionndmap method)": [[201, "gammapy.maps.RegionNDMap.iter_by_image_data", false]], "iter_by_image_data() (gammapy.maps.wcsmap method)": [[204, "gammapy.maps.WcsMap.iter_by_image_data", false]], "iter_by_image_data() (gammapy.maps.wcsndmap method)": [[205, "gammapy.maps.WcsNDMap.iter_by_image_data", false]], "iter_by_image_index() (gammapy.maps.hpxmap method)": [[192, "gammapy.maps.HpxMap.iter_by_image_index", false]], "iter_by_image_index() (gammapy.maps.hpxndmap method)": [[193, "gammapy.maps.HpxNDMap.iter_by_image_index", false]], "iter_by_image_index() (gammapy.maps.map method)": [[195, "gammapy.maps.Map.iter_by_image_index", false]], "iter_by_image_index() (gammapy.maps.regionndmap method)": [[201, "gammapy.maps.RegionNDMap.iter_by_image_index", false]], "iter_by_image_index() (gammapy.maps.wcsmap method)": [[204, "gammapy.maps.WcsMap.iter_by_image_index", false]], "iter_by_image_index() (gammapy.maps.wcsndmap method)": [[205, "gammapy.maps.WcsNDMap.iter_by_image_index", false]], "iter_with_reshape (gammapy.maps.mapaxes attribute)": [[196, "gammapy.maps.MapAxes.iter_with_reshape", false]], "itercols() (gammapy.data.hduindextable method)": [[87, "gammapy.data.HDUIndexTable.itercols", false]], "itercols() (gammapy.data.observationtable method)": [[91, "gammapy.data.ObservationTable.itercols", false]], "iterrows() (gammapy.data.hduindextable method)": [[87, "gammapy.data.HDUIndexTable.iterrows", false]], "iterrows() (gammapy.data.observationtable method)": [[91, "gammapy.data.ObservationTable.iterrows", false]], "jfactory (class in gammapy.astro.darkmatter)": [[23, "gammapy.astro.darkmatter.JFactory", false]], "joint analysis": [[573, "term-Joint-Analysis", true]], "json() (gammapy.analysis.analysisconfig method)": [[16, "gammapy.analysis.AnalysisConfig.json", false]], "json() (gammapy.data.eventlistmetadata method)": [[84, "gammapy.data.EventListMetaData.json", false]], "json() (gammapy.data.observationmetadata method)": [[90, "gammapy.data.ObservationMetaData.json", false]], "json() (gammapy.datasets.mapdatasetmetadata method)": [[104, "gammapy.datasets.MapDatasetMetaData.json", false]], "json() (gammapy.estimators.fluxmetadata method)": [[123, "gammapy.estimators.FluxMetaData.json", false]], "k (gammapy.astro.population.faucherspiral attribute)": [[33, "gammapy.astro.population.FaucherSpiral.k", false]], "keep_columns() (gammapy.data.hduindextable method)": [[87, "gammapy.data.HDUIndexTable.keep_columns", false]], "keep_columns() (gammapy.data.observationtable method)": [[91, "gammapy.data.ObservationTable.keep_columns", false]], "kernel() (gammapy.makers.ringbackgroundmaker method)": [[177, "gammapy.makers.RingBackgroundMaker.kernel", false]], "kernels() (gammapy.makers.adaptiveringbackgroundmaker method)": [[167, "gammapy.makers.AdaptiveRingBackgroundMaker.kernels", false]], "keys() (gammapy.data.hduindextable method)": [[87, "gammapy.data.HDUIndexTable.keys", false]], "keys() (gammapy.data.observationtable method)": [[91, "gammapy.data.ObservationTable.keys", false]], "keys() (gammapy.maps.maps method)": [[199, "gammapy.maps.Maps.keys", false]], "labelmapaxis (class in gammapy.maps)": [[194, "gammapy.maps.LabelMapAxis", false]], "lambda_ (gammapy.modeling.models.expcutoffpowerlawnormspectralmodel attribute)": [[228, "gammapy.modeling.models.ExpCutoffPowerLawNormSpectralModel.lambda_", false]], "lambda_ (gammapy.modeling.models.expcutoffpowerlawspectralmodel attribute)": [[229, "gammapy.modeling.models.ExpCutoffPowerLawSpectralModel.lambda_", false]], "large_scale_component (gammapy.catalog.sourcecataloghgps attribute)": [[67, "gammapy.catalog.SourceCatalogHGPS.large_scale_component", false]], "lat (gammapy.maps.mapcoord attribute)": [[198, "gammapy.maps.MapCoord.lat", false]], "lat_0 (gammapy.modeling.models.diskspatialmodel attribute)": [[224, "gammapy.modeling.models.DiskSpatialModel.lat_0", false]], "lat_0 (gammapy.modeling.models.gaussianspatialmodel attribute)": [[232, "gammapy.modeling.models.GaussianSpatialModel.lat_0", false]], "lat_0 (gammapy.modeling.models.generalizedgaussianspatialmodel attribute)": [[235, "gammapy.modeling.models.GeneralizedGaussianSpatialModel.lat_0", false]], "lat_0 (gammapy.modeling.models.pointspatialmodel attribute)": [[249, "gammapy.modeling.models.PointSpatialModel.lat_0", false]], "lat_0 (gammapy.modeling.models.shell2spatialmodel attribute)": [[258, "gammapy.modeling.models.Shell2SpatialModel.lat_0", false]], "lat_0 (gammapy.modeling.models.shellspatialmodel attribute)": [[259, "gammapy.modeling.models.ShellSpatialModel.lat_0", false]], "lat_0 (gammapy.modeling.models.templatespatialmodel attribute)": [[273, "gammapy.modeling.models.TemplateSpatialModel.lat_0", false]], "lazyfitsdata (class in gammapy.utils.fits)": [[313, "gammapy.utils.fits.LazyFitsData", false]], "lifetime_age_of_universe (gammapy.astro.darkmatter.darkmatterdecayspectralmodel attribute)": [[20, "gammapy.astro.darkmatter.DarkMatterDecaySpectralModel.LIFETIME_AGE_OF_UNIVERSE", false]], "lightcurve (gammapy.catalog.sourcecatalogobject2pc attribute)": [[73, "gammapy.catalog.SourceCatalogObject2PC.lightcurve", false]], "lightcurve (gammapy.catalog.sourcecatalogobject3pc attribute)": [[77, "gammapy.catalog.SourceCatalogObject3PC.lightcurve", false]], "lightcurve() (gammapy.catalog.sourcecatalogobject3fgl method)": [[74, "gammapy.catalog.SourceCatalogObject3FGL.lightcurve", false]], "lightcurve() (gammapy.catalog.sourcecatalogobject4fgl method)": [[78, "gammapy.catalog.SourceCatalogObject4FGL.lightcurve", false]], "lightcurveestimator (class in gammapy.estimators)": [[129, "gammapy.estimators.LightCurveEstimator", false]], "lightcurvetemplatetemporalmodel (class in gammapy.modeling.models)": [[237, "gammapy.modeling.models.LightCurveTemplateTemporalModel", false]], "linear (gammapy.astro.population.casebattacharya1998 attribute)": [[28, "gammapy.astro.population.CaseBattacharya1998.linear", false]], "linear (gammapy.astro.population.exponential attribute)": [[29, "gammapy.astro.population.Exponential.linear", false]], "linear (gammapy.astro.population.faucherkaspi2006 attribute)": [[30, "gammapy.astro.population.FaucherKaspi2006.linear", false]], "linear (gammapy.astro.population.faucherkaspi2006velocitybimodal attribute)": [[31, "gammapy.astro.population.FaucherKaspi2006VelocityBimodal.linear", false]], "linear (gammapy.astro.population.faucherkaspi2006velocitymaxwellian attribute)": [[32, "gammapy.astro.population.FaucherKaspi2006VelocityMaxwellian.linear", false]], "linear (gammapy.astro.population.lorimer2006 attribute)": [[35, "gammapy.astro.population.Lorimer2006.linear", false]], "linear (gammapy.astro.population.paczynski1990 attribute)": [[36, "gammapy.astro.population.Paczynski1990.linear", false]], "linear (gammapy.astro.population.paczynski1990velocity attribute)": [[37, "gammapy.astro.population.Paczynski1990Velocity.linear", false]], "linear (gammapy.astro.population.yusifovkucuk2004 attribute)": [[39, "gammapy.astro.population.YusifovKucuk2004.linear", false]], "linear (gammapy.astro.population.yusifovkucuk2004b attribute)": [[40, "gammapy.astro.population.YusifovKucuk2004B.linear", false]], "lineartemporalmodel (class in gammapy.modeling.models)": [[238, "gammapy.modeling.models.LinearTemporalModel", false]], "livetime_fraction (gammapy.data.observationfilter attribute)": [[89, "gammapy.data.ObservationFilter.livetime_fraction", false]], "load() (gammapy.utils.fits.hdulocation method)": [[312, "gammapy.utils.fits.HDULocation.load", false]], "load_irf_dict_from_file() (in module gammapy.irf)": [[166, "gammapy.irf.load_irf_dict_from_file", false]], "loc (gammapy.data.hduindextable attribute)": [[87, "gammapy.data.HDUIndexTable.loc", false]], "loc (gammapy.data.observationtable attribute)": [[91, "gammapy.data.ObservationTable.loc", false]], "loc_indices (gammapy.data.hduindextable attribute)": [[87, "gammapy.data.HDUIndexTable.loc_indices", false]], "loc_indices (gammapy.data.observationtable attribute)": [[91, "gammapy.data.ObservationTable.loc_indices", false]], "local_density (gammapy.astro.darkmatter.burkertprofile attribute)": [[17, "gammapy.astro.darkmatter.BurkertProfile.LOCAL_DENSITY", false]], "local_density (gammapy.astro.darkmatter.dmprofile attribute)": [[18, "gammapy.astro.darkmatter.DMProfile.LOCAL_DENSITY", false]], "local_density (gammapy.astro.darkmatter.einastoprofile attribute)": [[21, "gammapy.astro.darkmatter.EinastoProfile.LOCAL_DENSITY", false]], "local_density (gammapy.astro.darkmatter.isothermalprofile attribute)": [[22, "gammapy.astro.darkmatter.IsothermalProfile.LOCAL_DENSITY", false]], "local_density (gammapy.astro.darkmatter.mooreprofile attribute)": [[24, "gammapy.astro.darkmatter.MooreProfile.LOCAL_DENSITY", false]], "local_density (gammapy.astro.darkmatter.nfwprofile attribute)": [[25, "gammapy.astro.darkmatter.NFWProfile.LOCAL_DENSITY", false]], "local_density (gammapy.astro.darkmatter.zhaoprofile attribute)": [[27, "gammapy.astro.darkmatter.ZhaoProfile.LOCAL_DENSITY", false]], "local_to_global() (gammapy.maps.hpxgeom method)": [[191, "gammapy.maps.HpxGeom.local_to_global", false]], "location (gammapy.data.pointinginfo attribute)": [[94, "gammapy.data.PointingInfo.location", false]], "location_info() (gammapy.data.hduindextable method)": [[87, "gammapy.data.HDUIndexTable.location_info", false]], "logparabolanormspectralmodel (class in gammapy.modeling.models)": [[239, "gammapy.modeling.models.LogParabolaNormSpectralModel", false]], "logparabolaspectralmodel (class in gammapy.modeling.models)": [[240, "gammapy.modeling.models.LogParabolaSpectralModel", false]], "logspiral (class in gammapy.astro.population)": [[34, "gammapy.astro.population.LogSpiral", false]], "lon (gammapy.maps.mapcoord attribute)": [[198, "gammapy.maps.MapCoord.lon", false]], "lon_0 (gammapy.modeling.models.diskspatialmodel attribute)": [[224, "gammapy.modeling.models.DiskSpatialModel.lon_0", false]], "lon_0 (gammapy.modeling.models.gaussianspatialmodel attribute)": [[232, "gammapy.modeling.models.GaussianSpatialModel.lon_0", false]], "lon_0 (gammapy.modeling.models.generalizedgaussianspatialmodel attribute)": [[235, "gammapy.modeling.models.GeneralizedGaussianSpatialModel.lon_0", false]], "lon_0 (gammapy.modeling.models.pointspatialmodel attribute)": [[249, "gammapy.modeling.models.PointSpatialModel.lon_0", false]], "lon_0 (gammapy.modeling.models.shell2spatialmodel attribute)": [[258, "gammapy.modeling.models.Shell2SpatialModel.lon_0", false]], "lon_0 (gammapy.modeling.models.shellspatialmodel attribute)": [[259, "gammapy.modeling.models.ShellSpatialModel.lon_0", false]], "lon_0 (gammapy.modeling.models.templatespatialmodel attribute)": [[273, "gammapy.modeling.models.TemplateSpatialModel.lon_0", false]], "lorimer2006 (class in gammapy.astro.population)": [[35, "gammapy.astro.population.Lorimer2006", false]], "luminosity_spindown (gammapy.astro.source.simplepulsar attribute)": [[54, "gammapy.astro.source.SimplePulsar.luminosity_spindown", false]], "luminosity_spindown() (gammapy.astro.source.pulsar method)": [[51, "gammapy.astro.source.Pulsar.luminosity_spindown", false]], "luminosity_tev() (gammapy.astro.source.snr method)": [[52, "gammapy.astro.source.SNR.luminosity_tev", false]], "luminosity_tev() (gammapy.astro.source.snrtruelovemckee method)": [[53, "gammapy.astro.source.SNRTrueloveMcKee.luminosity_tev", false]], "m (gammapy.astro.population.valleespiral attribute)": [[38, "gammapy.astro.population.ValleeSpiral.m", false]], "magnetic_field (gammapy.astro.source.simplepulsar attribute)": [[54, "gammapy.astro.source.SimplePulsar.magnetic_field", false]], "magnetic_field() (gammapy.astro.source.pulsar method)": [[51, "gammapy.astro.source.Pulsar.magnetic_field", false]], "magnetic_field() (gammapy.astro.source.pwn method)": [[50, "gammapy.astro.source.PWN.magnetic_field", false]], "make_background() (gammapy.makers.mapdatasetmaker method)": [[172, "gammapy.makers.MapDatasetMaker.make_background", false]], "make_background() (gammapy.makers.spectrumdatasetmaker method)": [[179, "gammapy.makers.SpectrumDatasetMaker.make_background", false]], "make_background_fit() (gammapy.makers.fovbackgroundmaker method)": [[169, "gammapy.makers.FoVBackgroundMaker.make_background_fit", false]], "make_background_scale() (gammapy.makers.fovbackgroundmaker method)": [[169, "gammapy.makers.FoVBackgroundMaker.make_background_scale", false]], "make_base_catalog_galactic() (in module gammapy.astro.population)": [[45, "gammapy.astro.population.make_base_catalog_galactic", false]], "make_catalog_random_positions_cube() (in module gammapy.astro.population)": [[46, "gammapy.astro.population.make_catalog_random_positions_cube", false]], "make_catalog_random_positions_sphere() (in module gammapy.astro.population)": [[47, "gammapy.astro.population.make_catalog_random_positions_sphere", false]], "make_concentric_annulus_sky_regions() (in module gammapy.utils.regions)": [[336, "gammapy.utils.regions.make_concentric_annulus_sky_regions", false]], "make_counts() (gammapy.makers.mapdatasetmaker static method)": [[172, "gammapy.makers.MapDatasetMaker.make_counts", false]], "make_counts() (gammapy.makers.phasebackgroundmaker method)": [[173, "gammapy.makers.PhaseBackgroundMaker.make_counts", false]], "make_counts() (gammapy.makers.spectrumdatasetmaker static method)": [[179, "gammapy.makers.SpectrumDatasetMaker.make_counts", false]], "make_counts_off() (gammapy.makers.phasebackgroundmaker method)": [[173, "gammapy.makers.PhaseBackgroundMaker.make_counts_off", false]], "make_counts_off() (gammapy.makers.reflectedregionsbackgroundmaker method)": [[174, "gammapy.makers.ReflectedRegionsBackgroundMaker.make_counts_off", false]], "make_counts_rad_max() (in module gammapy.makers.utils)": [[181, "gammapy.makers.utils.make_counts_rad_max", false]], "make_cubes() (gammapy.makers.adaptiveringbackgroundmaker method)": [[167, "gammapy.makers.AdaptiveRingBackgroundMaker.make_cubes", false]], "make_dataset() (gammapy.makers.datasetsmaker method)": [[168, "gammapy.makers.DatasetsMaker.make_dataset", false]], "make_default_fov_background_model() (gammapy.makers.fovbackgroundmaker method)": [[169, "gammapy.makers.FoVBackgroundMaker.make_default_fov_background_model", false]], "make_edisp() (gammapy.makers.mapdatasetmaker method)": [[172, "gammapy.makers.MapDatasetMaker.make_edisp", false]], "make_edisp() (gammapy.makers.spectrumdatasetmaker method)": [[179, "gammapy.makers.SpectrumDatasetMaker.make_edisp", false]], "make_edisp_kernel() (gammapy.makers.mapdatasetmaker method)": [[172, "gammapy.makers.MapDatasetMaker.make_edisp_kernel", false]], "make_edisp_kernel() (gammapy.makers.spectrumdatasetmaker method)": [[179, "gammapy.makers.SpectrumDatasetMaker.make_edisp_kernel", false]], "make_edisp_kernel_map() (in module gammapy.makers.utils)": [[182, "gammapy.makers.utils.make_edisp_kernel_map", false]], "make_edisp_map() (in module gammapy.makers.utils)": [[183, "gammapy.makers.utils.make_edisp_map", false]], "make_effective_livetime_map() (in module gammapy.makers.utils)": [[184, "gammapy.makers.utils.make_effective_livetime_map", false]], "make_exclusion_mask() (gammapy.makers.fovbackgroundmaker method)": [[169, "gammapy.makers.FoVBackgroundMaker.make_exclusion_mask", false]], "make_exposure() (gammapy.makers.mapdatasetmaker static method)": [[172, "gammapy.makers.MapDatasetMaker.make_exposure", false]], "make_exposure() (gammapy.makers.spectrumdatasetmaker method)": [[179, "gammapy.makers.SpectrumDatasetMaker.make_exposure", false]], "make_exposure_irf() (gammapy.makers.mapdatasetmaker static method)": [[172, "gammapy.makers.MapDatasetMaker.make_exposure_irf", false]], "make_exposure_irf() (gammapy.makers.spectrumdatasetmaker static method)": [[179, "gammapy.makers.SpectrumDatasetMaker.make_exposure_irf", false]], "make_map_background_irf() (in module gammapy.makers.utils)": [[185, "gammapy.makers.utils.make_map_background_irf", false]], "make_map_exposure_true_energy() (in module gammapy.makers.utils)": [[186, "gammapy.makers.utils.make_map_exposure_true_energy", false]], "make_maps_off() (gammapy.makers.ringbackgroundmaker method)": [[177, "gammapy.makers.RingBackgroundMaker.make_maps_off", false]], "make_mask_bkg_invalid() (gammapy.makers.safemaskmaker static method)": [[178, "gammapy.makers.SafeMaskMaker.make_mask_bkg_invalid", false]], "make_mask_energy_aeff_default() (gammapy.makers.safemaskmaker static method)": [[178, "gammapy.makers.SafeMaskMaker.make_mask_energy_aeff_default", false]], "make_mask_energy_aeff_max() (gammapy.makers.safemaskmaker method)": [[178, "gammapy.makers.SafeMaskMaker.make_mask_energy_aeff_max", false]], "make_mask_energy_bkg_peak() (gammapy.makers.safemaskmaker method)": [[178, "gammapy.makers.SafeMaskMaker.make_mask_energy_bkg_peak", false]], "make_mask_energy_edisp_bias() (gammapy.makers.safemaskmaker method)": [[178, "gammapy.makers.SafeMaskMaker.make_mask_energy_edisp_bias", false]], "make_mask_offset_max() (gammapy.makers.safemaskmaker method)": [[178, "gammapy.makers.SafeMaskMaker.make_mask_offset_max", false]], "make_meta_table() (gammapy.makers.mapdatasetmaker static method)": [[172, "gammapy.makers.MapDatasetMaker.make_meta_table", false]], "make_meta_table() (gammapy.makers.spectrumdatasetmaker static method)": [[179, "gammapy.makers.SpectrumDatasetMaker.make_meta_table", false]], "make_observation_time_map() (in module gammapy.makers.utils)": [[187, "gammapy.makers.utils.make_observation_time_map", false]], "make_orthogonal_rectangle_sky_regions() (in module gammapy.utils.regions)": [[337, "gammapy.utils.regions.make_orthogonal_rectangle_sky_regions", false]], "make_path() (in module gammapy.utils.scripts)": [[342, "gammapy.utils.scripts.make_path", false]], "make_psf() (gammapy.makers.mapdatasetmaker method)": [[172, "gammapy.makers.MapDatasetMaker.make_psf", false]], "make_psf() (gammapy.makers.spectrumdatasetmaker method)": [[179, "gammapy.makers.SpectrumDatasetMaker.make_psf", false]], "make_psf_map() (in module gammapy.makers.utils)": [[188, "gammapy.makers.utils.make_psf_map", false]], "make_theta_squared_table() (in module gammapy.makers.utils)": [[189, "gammapy.makers.utils.make_theta_squared_table", false]], "maker": [[573, "term-Maker", true]], "maker (class in gammapy.makers)": [[171, "gammapy.makers.Maker", false]], "maker_registry (in module gammapy.makers)": [[170, "gammapy.makers.MAKER_REGISTRY", false]], "map (class in gammapy.maps)": [[195, "gammapy.maps.Map", false]], "map (gammapy.astro.darkmatter.primaryflux attribute)": [[26, "gammapy.astro.darkmatter.PrimaryFlux.map", false]], "map (gammapy.modeling.models.templatendspatialmodel attribute)": [[269, "gammapy.modeling.models.TemplateNDSpatialModel.map", false]], "map (gammapy.modeling.models.templatendspectralmodel attribute)": [[270, "gammapy.modeling.models.TemplateNDSpectralModel.map", false]], "map (gammapy.modeling.models.templatenpredmodel attribute)": [[271, "gammapy.modeling.models.TemplateNPredModel.map", false]], "map (gammapy.modeling.models.templatespatialmodel attribute)": [[273, "gammapy.modeling.models.TemplateSpatialModel.map", false]], "map_center (gammapy.modeling.models.templatespatialmodel attribute)": [[273, "gammapy.modeling.models.TemplateSpatialModel.map_center", false]], "map_coord() (gammapy.data.eventlist method)": [[83, "gammapy.data.EventList.map_coord", false]], "mapaxes (class in gammapy.maps)": [[196, "gammapy.maps.MapAxes", false]], "mapaxis (class in gammapy.maps)": [[197, "gammapy.maps.MapAxis", false]], "mapcoord (class in gammapy.maps)": [[198, "gammapy.maps.MapCoord", false]], "mapdataset (class in gammapy.datasets)": [[102, "gammapy.datasets.MapDataset", false]], "mapdataseteventsampler (class in gammapy.datasets)": [[103, "gammapy.datasets.MapDatasetEventSampler", false]], "mapdatasetmaker (class in gammapy.makers)": [[172, "gammapy.makers.MapDatasetMaker", false]], "mapdatasetmetadata (class in gammapy.datasets)": [[104, "gammapy.datasets.MapDatasetMetaData", false]], "mapdatasetonoff (class in gammapy.datasets)": [[105, "gammapy.datasets.MapDatasetOnOff", false]], "mappanelplotter (class in gammapy.visualization)": [[364, "gammapy.visualization.MapPanelPlotter", false]], "maps (class in gammapy.maps)": [[199, "gammapy.maps.Maps", false]], "mask (gammapy.data.hduindextable attribute)": [[87, "gammapy.data.HDUIndexTable.mask", false]], "mask (gammapy.data.observationtable attribute)": [[91, "gammapy.data.ObservationTable.mask", false]], "mask (gammapy.datasets.dataset attribute)": [[99, "gammapy.datasets.Dataset.mask", false]], "mask (gammapy.datasets.fluxpointsdataset attribute)": [[101, "gammapy.datasets.FluxPointsDataset.mask", false]], "mask (gammapy.datasets.mapdataset attribute)": [[102, "gammapy.datasets.MapDataset.mask", false]], "mask (gammapy.datasets.mapdatasetonoff attribute)": [[105, "gammapy.datasets.MapDatasetOnOff.mask", false]], "mask (gammapy.datasets.spectrumdataset attribute)": [[109, "gammapy.datasets.SpectrumDataset.mask", false]], "mask (gammapy.datasets.spectrumdatasetonoff attribute)": [[110, "gammapy.datasets.SpectrumDatasetOnOff.mask", false]], "mask_contains_region() (gammapy.maps.wcsndmap method)": [[205, "gammapy.maps.WcsNDMap.mask_contains_region", false]], "mask_fit (gammapy.datasets.mapdataset attribute)": [[102, "gammapy.datasets.MapDataset.mask_fit", false]], "mask_fit (gammapy.datasets.mapdatasetonoff attribute)": [[105, "gammapy.datasets.MapDatasetOnOff.mask_fit", false]], "mask_fit (gammapy.datasets.spectrumdataset attribute)": [[109, "gammapy.datasets.SpectrumDataset.mask_fit", false]], "mask_fit (gammapy.datasets.spectrumdatasetonoff attribute)": [[110, "gammapy.datasets.SpectrumDatasetOnOff.mask_fit", false]], "mask_fit_image (gammapy.datasets.mapdataset attribute)": [[102, "gammapy.datasets.MapDataset.mask_fit_image", false]], "mask_fit_image (gammapy.datasets.mapdatasetonoff attribute)": [[105, "gammapy.datasets.MapDatasetOnOff.mask_fit_image", false]], "mask_fit_image (gammapy.datasets.spectrumdataset attribute)": [[109, "gammapy.datasets.SpectrumDataset.mask_fit_image", false]], "mask_fit_image (gammapy.datasets.spectrumdatasetonoff attribute)": [[110, "gammapy.datasets.SpectrumDatasetOnOff.mask_fit_image", false]], "mask_image (gammapy.datasets.mapdataset attribute)": [[102, "gammapy.datasets.MapDataset.mask_image", false]], "mask_image (gammapy.datasets.mapdatasetonoff attribute)": [[105, "gammapy.datasets.MapDatasetOnOff.mask_image", false]], "mask_image (gammapy.datasets.spectrumdataset attribute)": [[109, "gammapy.datasets.SpectrumDataset.mask_image", false]], "mask_image (gammapy.datasets.spectrumdatasetonoff attribute)": [[110, "gammapy.datasets.SpectrumDatasetOnOff.mask_image", false]], "mask_nearest_position() (gammapy.maps.hpxmap method)": [[192, "gammapy.maps.HpxMap.mask_nearest_position", false]], "mask_nearest_position() (gammapy.maps.hpxndmap method)": [[193, "gammapy.maps.HpxNDMap.mask_nearest_position", false]], "mask_nearest_position() (gammapy.maps.map method)": [[195, "gammapy.maps.Map.mask_nearest_position", false]], "mask_nearest_position() (gammapy.maps.regionndmap method)": [[201, "gammapy.maps.RegionNDMap.mask_nearest_position", false]], "mask_nearest_position() (gammapy.maps.wcsmap method)": [[204, "gammapy.maps.WcsMap.mask_nearest_position", false]], "mask_nearest_position() (gammapy.maps.wcsndmap method)": [[205, "gammapy.maps.WcsNDMap.mask_nearest_position", false]], "mask_safe (gammapy.datasets.fluxpointsdataset attribute)": [[101, "gammapy.datasets.FluxPointsDataset.mask_safe", false]], "mask_safe (gammapy.datasets.mapdataset attribute)": [[102, "gammapy.datasets.MapDataset.mask_safe", false]], "mask_safe (gammapy.datasets.mapdatasetonoff attribute)": [[105, "gammapy.datasets.MapDatasetOnOff.mask_safe", false]], "mask_safe (gammapy.datasets.spectrumdataset attribute)": [[109, "gammapy.datasets.SpectrumDataset.mask_safe", false]], "mask_safe (gammapy.datasets.spectrumdatasetonoff attribute)": [[110, "gammapy.datasets.SpectrumDatasetOnOff.mask_safe", false]], "mask_safe_edisp (gammapy.datasets.mapdataset attribute)": [[102, "gammapy.datasets.MapDataset.mask_safe_edisp", false]], "mask_safe_edisp (gammapy.datasets.mapdatasetonoff attribute)": [[105, "gammapy.datasets.MapDatasetOnOff.mask_safe_edisp", false]], "mask_safe_edisp (gammapy.datasets.spectrumdataset attribute)": [[109, "gammapy.datasets.SpectrumDataset.mask_safe_edisp", false]], "mask_safe_edisp (gammapy.datasets.spectrumdatasetonoff attribute)": [[110, "gammapy.datasets.SpectrumDatasetOnOff.mask_safe_edisp", false]], "mask_safe_image (gammapy.datasets.mapdataset attribute)": [[102, "gammapy.datasets.MapDataset.mask_safe_image", false]], "mask_safe_image (gammapy.datasets.mapdatasetonoff attribute)": [[105, "gammapy.datasets.MapDatasetOnOff.mask_safe_image", false]], "mask_safe_image (gammapy.datasets.spectrumdataset attribute)": [[109, "gammapy.datasets.SpectrumDataset.mask_safe_image", false]], "mask_safe_image (gammapy.datasets.spectrumdatasetonoff attribute)": [[110, "gammapy.datasets.SpectrumDatasetOnOff.mask_safe_image", false]], "mask_safe_image (gammapy.irf.edispkernelmap attribute)": [[150, "gammapy.irf.EDispKernelMap.mask_safe_image", false]], "mask_safe_image (gammapy.irf.edispmap attribute)": [[151, "gammapy.irf.EDispMap.mask_safe_image", false]], "mask_safe_image (gammapy.irf.irfmap attribute)": [[157, "gammapy.irf.IRFMap.mask_safe_image", false]], "mask_safe_image (gammapy.irf.psfmap attribute)": [[162, "gammapy.irf.PSFMap.mask_safe_image", false]], "mask_safe_image (gammapy.irf.recopsfmap attribute)": [[165, "gammapy.irf.RecoPSFMap.mask_safe_image", false]], "mask_safe_psf (gammapy.datasets.mapdataset attribute)": [[102, "gammapy.datasets.MapDataset.mask_safe_psf", false]], "mask_safe_psf (gammapy.datasets.mapdatasetonoff attribute)": [[105, "gammapy.datasets.MapDatasetOnOff.mask_safe_psf", false]], "mask_safe_psf (gammapy.datasets.spectrumdataset attribute)": [[109, "gammapy.datasets.SpectrumDataset.mask_safe_psf", false]], "mask_safe_psf (gammapy.datasets.spectrumdatasetonoff attribute)": [[110, "gammapy.datasets.SpectrumDatasetOnOff.mask_safe_psf", false]], "mask_valid (gammapy.datasets.fluxpointsdataset attribute)": [[101, "gammapy.datasets.FluxPointsDataset.mask_valid", false]], "masked (gammapy.data.hduindextable attribute)": [[87, "gammapy.data.HDUIndexTable.masked", false]], "masked (gammapy.data.observationtable attribute)": [[91, "gammapy.data.ObservationTable.masked", false]], "match_by_name (gammapy.maps.mapcoord attribute)": [[198, "gammapy.maps.MapCoord.match_by_name", false]], "matrix (gammapy.modeling.covarianceresult attribute)": [[209, "gammapy.modeling.CovarianceResult.matrix", false]], "max (gammapy.modeling.parameter attribute)": [[213, "gammapy.modeling.Parameter.max", false]], "max (gammapy.modeling.parameters attribute)": [[214, "gammapy.modeling.Parameters.max", false]], "max (gammapy.modeling.priorparameter attribute)": [[215, "gammapy.modeling.PriorParameter.max", false]], "max (gammapy.modeling.priorparameters attribute)": [[216, "gammapy.modeling.PriorParameters.max", false]], "mcmc": [[573, "term-MCMC", true]], "mdm (gammapy.astro.darkmatter.primaryflux attribute)": [[26, "gammapy.astro.darkmatter.PrimaryFlux.mDM", false]], "mean (gammapy.modeling.models.gaussianspectralmodel attribute)": [[233, "gammapy.modeling.models.GaussianSpectralModel.mean", false]], "message (gammapy.modeling.covarianceresult attribute)": [[209, "gammapy.modeling.CovarianceResult.message", false]], "message (gammapy.modeling.fitresult attribute)": [[211, "gammapy.modeling.FitResult.message", false]], "message (gammapy.modeling.optimizeresult attribute)": [[212, "gammapy.modeling.OptimizeResult.message", false]], "met": [[573, "term-MET", true]], "met_start (gammapy.data.gti attribute)": [[86, "gammapy.data.GTI.met_start", false]], "met_stop (gammapy.data.gti attribute)": [[86, "gammapy.data.GTI.met_stop", false]], "meta (gammapy.astro.population.casebattacharya1998 attribute)": [[28, "gammapy.astro.population.CaseBattacharya1998.meta", false]], "meta (gammapy.astro.population.exponential attribute)": [[29, "gammapy.astro.population.Exponential.meta", false]], "meta (gammapy.astro.population.faucherkaspi2006 attribute)": [[30, "gammapy.astro.population.FaucherKaspi2006.meta", false]], "meta (gammapy.astro.population.faucherkaspi2006velocitybimodal attribute)": [[31, "gammapy.astro.population.FaucherKaspi2006VelocityBimodal.meta", false]], "meta (gammapy.astro.population.faucherkaspi2006velocitymaxwellian attribute)": [[32, "gammapy.astro.population.FaucherKaspi2006VelocityMaxwellian.meta", false]], "meta (gammapy.astro.population.lorimer2006 attribute)": [[35, "gammapy.astro.population.Lorimer2006.meta", false]], "meta (gammapy.astro.population.paczynski1990 attribute)": [[36, "gammapy.astro.population.Paczynski1990.meta", false]], "meta (gammapy.astro.population.paczynski1990velocity attribute)": [[37, "gammapy.astro.population.Paczynski1990Velocity.meta", false]], "meta (gammapy.astro.population.yusifovkucuk2004 attribute)": [[39, "gammapy.astro.population.YusifovKucuk2004.meta", false]], "meta (gammapy.astro.population.yusifovkucuk2004b attribute)": [[40, "gammapy.astro.population.YusifovKucuk2004B.meta", false]], "meta (gammapy.data.hduindextable attribute)": [[87, "gammapy.data.HDUIndexTable.meta", false]], "meta (gammapy.data.observation attribute)": [[88, "gammapy.data.Observation.meta", false]], "meta (gammapy.data.observationtable attribute)": [[91, "gammapy.data.ObservationTable.meta", false]], "meta (gammapy.datasets.mapdataset attribute)": [[102, "gammapy.datasets.MapDataset.meta", false]], "meta (gammapy.datasets.mapdatasetonoff attribute)": [[105, "gammapy.datasets.MapDatasetOnOff.meta", false]], "meta (gammapy.datasets.spectrumdataset attribute)": [[109, "gammapy.datasets.SpectrumDataset.meta", false]], "meta (gammapy.datasets.spectrumdatasetonoff attribute)": [[110, "gammapy.datasets.SpectrumDatasetOnOff.meta", false]], "meta (gammapy.maps.hpxmap attribute)": [[192, "gammapy.maps.HpxMap.meta", false]], "meta (gammapy.maps.hpxndmap attribute)": [[193, "gammapy.maps.HpxNDMap.meta", false]], "meta (gammapy.maps.map attribute)": [[195, "gammapy.maps.Map.meta", false]], "meta (gammapy.maps.regionndmap attribute)": [[201, "gammapy.maps.RegionNDMap.meta", false]], "meta (gammapy.maps.wcsmap attribute)": [[204, "gammapy.maps.WcsMap.meta", false]], "meta (gammapy.maps.wcsndmap attribute)": [[205, "gammapy.maps.WcsNDMap.meta", false]], "meta_table (gammapy.datasets.datasets attribute)": [[100, "gammapy.datasets.Datasets.meta_table", false]], "meta_table (gammapy.datasets.mapdataset attribute)": [[102, "gammapy.datasets.MapDataset.meta_table", false]], "meta_table (gammapy.datasets.mapdatasetonoff attribute)": [[105, "gammapy.datasets.MapDatasetOnOff.meta_table", false]], "meta_table (gammapy.datasets.spectrumdataset attribute)": [[109, "gammapy.datasets.SpectrumDataset.meta_table", false]], "meta_table (gammapy.datasets.spectrumdatasetonoff attribute)": [[110, "gammapy.datasets.SpectrumDatasetOnOff.meta_table", false]], "method (gammapy.makers.fovbackgroundmaker attribute)": [[169, "gammapy.makers.FoVBackgroundMaker.method", false]], "method (gammapy.modeling.covarianceresult attribute)": [[209, "gammapy.modeling.CovarianceResult.method", false]], "method (gammapy.modeling.fitresult attribute)": [[211, "gammapy.modeling.FitResult.method", false]], "method (gammapy.modeling.optimizeresult attribute)": [[212, "gammapy.modeling.OptimizeResult.method", false]], "method_default (in module gammapy.utils.parallel)": [[320, "gammapy.utils.parallel.METHOD_DEFAULT", false]], "method_kwargs_default (in module gammapy.utils.parallel)": [[321, "gammapy.utils.parallel.METHOD_KWARGS_DEFAULT", false]], "meyercrabspectralmodel (class in gammapy.modeling.models)": [[242, "gammapy.modeling.models.MeyerCrabSpectralModel", false]], "min (gammapy.modeling.parameter attribute)": [[213, "gammapy.modeling.Parameter.min", false]], "min (gammapy.modeling.parameters attribute)": [[214, "gammapy.modeling.Parameters.min", false]], "min (gammapy.modeling.priorparameter attribute)": [[215, "gammapy.modeling.PriorParameter.min", false]], "min (gammapy.modeling.priorparameters attribute)": [[216, "gammapy.modeling.PriorParameters.min", false]], "minuit (gammapy.modeling.fitresult attribute)": [[211, "gammapy.modeling.FitResult.minuit", false]], "minuit (gammapy.modeling.optimizeresult attribute)": [[212, "gammapy.modeling.OptimizeResult.minuit", false]], "mode (gammapy.data.fixedpointinginfo attribute)": [[85, "gammapy.data.FixedPointingInfo.mode", false]], "model (class in gammapy.modeling.models)": [[243, "gammapy.modeling.models.Model", false]], "model_computed_fields (gammapy.analysis.analysisconfig attribute)": [[16, "gammapy.analysis.AnalysisConfig.model_computed_fields", false]], "model_computed_fields (gammapy.data.eventlistmetadata attribute)": [[84, "gammapy.data.EventListMetaData.model_computed_fields", false]], "model_computed_fields (gammapy.data.observationmetadata attribute)": [[90, "gammapy.data.ObservationMetaData.model_computed_fields", false]], "model_computed_fields (gammapy.datasets.mapdatasetmetadata attribute)": [[104, "gammapy.datasets.MapDatasetMetaData.model_computed_fields", false]], "model_computed_fields (gammapy.estimators.fluxmetadata attribute)": [[123, "gammapy.estimators.FluxMetaData.model_computed_fields", false]], "model_config (gammapy.analysis.analysisconfig attribute)": [[16, "gammapy.analysis.AnalysisConfig.model_config", false]], "model_config (gammapy.data.eventlistmetadata attribute)": [[84, "gammapy.data.EventListMetaData.model_config", false]], "model_config (gammapy.data.observationmetadata attribute)": [[90, "gammapy.data.ObservationMetaData.model_config", false]], "model_config (gammapy.datasets.mapdatasetmetadata attribute)": [[104, "gammapy.datasets.MapDatasetMetaData.model_config", false]], "model_config (gammapy.estimators.fluxmetadata attribute)": [[123, "gammapy.estimators.FluxMetaData.model_config", false]], "model_constraints (gammapy.astro.population.casebattacharya1998 attribute)": [[28, "gammapy.astro.population.CaseBattacharya1998.model_constraints", false]], "model_constraints (gammapy.astro.population.exponential attribute)": [[29, "gammapy.astro.population.Exponential.model_constraints", false]], "model_constraints (gammapy.astro.population.faucherkaspi2006 attribute)": [[30, "gammapy.astro.population.FaucherKaspi2006.model_constraints", false]], "model_constraints (gammapy.astro.population.faucherkaspi2006velocitybimodal attribute)": [[31, "gammapy.astro.population.FaucherKaspi2006VelocityBimodal.model_constraints", false]], "model_constraints (gammapy.astro.population.faucherkaspi2006velocitymaxwellian attribute)": [[32, "gammapy.astro.population.FaucherKaspi2006VelocityMaxwellian.model_constraints", false]], "model_constraints (gammapy.astro.population.lorimer2006 attribute)": [[35, "gammapy.astro.population.Lorimer2006.model_constraints", false]], "model_constraints (gammapy.astro.population.paczynski1990 attribute)": [[36, "gammapy.astro.population.Paczynski1990.model_constraints", false]], "model_constraints (gammapy.astro.population.paczynski1990velocity attribute)": [[37, "gammapy.astro.population.Paczynski1990Velocity.model_constraints", false]], "model_constraints (gammapy.astro.population.yusifovkucuk2004 attribute)": [[39, "gammapy.astro.population.YusifovKucuk2004.model_constraints", false]], "model_constraints (gammapy.astro.population.yusifovkucuk2004b attribute)": [[40, "gammapy.astro.population.YusifovKucuk2004B.model_constraints", false]], "model_construct() (gammapy.analysis.analysisconfig class method)": [[16, "gammapy.analysis.AnalysisConfig.model_construct", false]], "model_construct() (gammapy.data.eventlistmetadata class method)": [[84, "gammapy.data.EventListMetaData.model_construct", false]], "model_construct() (gammapy.data.observationmetadata class method)": [[90, "gammapy.data.ObservationMetaData.model_construct", false]], "model_construct() (gammapy.datasets.mapdatasetmetadata class method)": [[104, "gammapy.datasets.MapDatasetMetaData.model_construct", false]], "model_construct() (gammapy.estimators.fluxmetadata class method)": [[123, "gammapy.estimators.FluxMetaData.model_construct", false]], "model_copy() (gammapy.analysis.analysisconfig method)": [[16, "gammapy.analysis.AnalysisConfig.model_copy", false]], "model_copy() (gammapy.data.eventlistmetadata method)": [[84, "gammapy.data.EventListMetaData.model_copy", false]], "model_copy() (gammapy.data.observationmetadata method)": [[90, "gammapy.data.ObservationMetaData.model_copy", false]], "model_copy() (gammapy.datasets.mapdatasetmetadata method)": [[104, "gammapy.datasets.MapDatasetMetaData.model_copy", false]], "model_copy() (gammapy.estimators.fluxmetadata method)": [[123, "gammapy.estimators.FluxMetaData.model_copy", false]], "model_dump() (gammapy.analysis.analysisconfig method)": [[16, "gammapy.analysis.AnalysisConfig.model_dump", false]], "model_dump() (gammapy.data.eventlistmetadata method)": [[84, "gammapy.data.EventListMetaData.model_dump", false]], "model_dump() (gammapy.data.observationmetadata method)": [[90, "gammapy.data.ObservationMetaData.model_dump", false]], "model_dump() (gammapy.datasets.mapdatasetmetadata method)": [[104, "gammapy.datasets.MapDatasetMetaData.model_dump", false]], "model_dump() (gammapy.estimators.fluxmetadata method)": [[123, "gammapy.estimators.FluxMetaData.model_dump", false]], "model_dump_json() (gammapy.analysis.analysisconfig method)": [[16, "gammapy.analysis.AnalysisConfig.model_dump_json", false]], "model_dump_json() (gammapy.data.eventlistmetadata method)": [[84, "gammapy.data.EventListMetaData.model_dump_json", false]], "model_dump_json() (gammapy.data.observationmetadata method)": [[90, "gammapy.data.ObservationMetaData.model_dump_json", false]], "model_dump_json() (gammapy.datasets.mapdatasetmetadata method)": [[104, "gammapy.datasets.MapDatasetMetaData.model_dump_json", false]], "model_dump_json() (gammapy.estimators.fluxmetadata method)": [[123, "gammapy.estimators.FluxMetaData.model_dump_json", false]], "model_extra (gammapy.analysis.analysisconfig attribute)": [[16, "gammapy.analysis.AnalysisConfig.model_extra", false]], "model_extra (gammapy.data.eventlistmetadata attribute)": [[84, "gammapy.data.EventListMetaData.model_extra", false]], "model_extra (gammapy.data.observationmetadata attribute)": [[90, "gammapy.data.ObservationMetaData.model_extra", false]], "model_extra (gammapy.datasets.mapdatasetmetadata attribute)": [[104, "gammapy.datasets.MapDatasetMetaData.model_extra", false]], "model_extra (gammapy.estimators.fluxmetadata attribute)": [[123, "gammapy.estimators.FluxMetaData.model_extra", false]], "model_fields (gammapy.analysis.analysisconfig attribute)": [[16, "gammapy.analysis.AnalysisConfig.model_fields", false]], "model_fields (gammapy.data.eventlistmetadata attribute)": [[84, "gammapy.data.EventListMetaData.model_fields", false]], "model_fields (gammapy.data.observationmetadata attribute)": [[90, "gammapy.data.ObservationMetaData.model_fields", false]], "model_fields (gammapy.datasets.mapdatasetmetadata attribute)": [[104, "gammapy.datasets.MapDatasetMetaData.model_fields", false]], "model_fields (gammapy.estimators.fluxmetadata attribute)": [[123, "gammapy.estimators.FluxMetaData.model_fields", false]], "model_fields_set (gammapy.analysis.analysisconfig attribute)": [[16, "gammapy.analysis.AnalysisConfig.model_fields_set", false]], "model_fields_set (gammapy.data.eventlistmetadata attribute)": [[84, "gammapy.data.EventListMetaData.model_fields_set", false]], "model_fields_set (gammapy.data.observationmetadata attribute)": [[90, "gammapy.data.ObservationMetaData.model_fields_set", false]], "model_fields_set (gammapy.datasets.mapdatasetmetadata attribute)": [[104, "gammapy.datasets.MapDatasetMetaData.model_fields_set", false]], "model_fields_set (gammapy.estimators.fluxmetadata attribute)": [[123, "gammapy.estimators.FluxMetaData.model_fields_set", false]], "model_json_schema() (gammapy.analysis.analysisconfig class method)": [[16, "gammapy.analysis.AnalysisConfig.model_json_schema", false]], "model_json_schema() (gammapy.data.eventlistmetadata class method)": [[84, "gammapy.data.EventListMetaData.model_json_schema", false]], "model_json_schema() (gammapy.data.observationmetadata class method)": [[90, "gammapy.data.ObservationMetaData.model_json_schema", false]], "model_json_schema() (gammapy.datasets.mapdatasetmetadata class method)": [[104, "gammapy.datasets.MapDatasetMetaData.model_json_schema", false]], "model_json_schema() (gammapy.estimators.fluxmetadata class method)": [[123, "gammapy.estimators.FluxMetaData.model_json_schema", false]], "model_parametrized_name() (gammapy.analysis.analysisconfig class method)": [[16, "gammapy.analysis.AnalysisConfig.model_parametrized_name", false]], "model_parametrized_name() (gammapy.data.eventlistmetadata class method)": [[84, "gammapy.data.EventListMetaData.model_parametrized_name", false]], "model_parametrized_name() (gammapy.data.observationmetadata class method)": [[90, "gammapy.data.ObservationMetaData.model_parametrized_name", false]], "model_parametrized_name() (gammapy.datasets.mapdatasetmetadata class method)": [[104, "gammapy.datasets.MapDatasetMetaData.model_parametrized_name", false]], "model_parametrized_name() (gammapy.estimators.fluxmetadata class method)": [[123, "gammapy.estimators.FluxMetaData.model_parametrized_name", false]], "model_post_init() (gammapy.analysis.analysisconfig method)": [[16, "gammapy.analysis.AnalysisConfig.model_post_init", false]], "model_post_init() (gammapy.data.eventlistmetadata method)": [[84, "gammapy.data.EventListMetaData.model_post_init", false]], "model_post_init() (gammapy.data.observationmetadata method)": [[90, "gammapy.data.ObservationMetaData.model_post_init", false]], "model_post_init() (gammapy.datasets.mapdatasetmetadata method)": [[104, "gammapy.datasets.MapDatasetMetaData.model_post_init", false]], "model_post_init() (gammapy.estimators.fluxmetadata method)": [[123, "gammapy.estimators.FluxMetaData.model_post_init", false]], "model_rebuild() (gammapy.analysis.analysisconfig class method)": [[16, "gammapy.analysis.AnalysisConfig.model_rebuild", false]], "model_rebuild() (gammapy.data.eventlistmetadata class method)": [[84, "gammapy.data.EventListMetaData.model_rebuild", false]], "model_rebuild() (gammapy.data.observationmetadata class method)": [[90, "gammapy.data.ObservationMetaData.model_rebuild", false]], "model_rebuild() (gammapy.datasets.mapdatasetmetadata class method)": [[104, "gammapy.datasets.MapDatasetMetaData.model_rebuild", false]], "model_rebuild() (gammapy.estimators.fluxmetadata class method)": [[123, "gammapy.estimators.FluxMetaData.model_rebuild", false]], "model_registry (in module gammapy.modeling.models)": [[241, "gammapy.modeling.models.MODEL_REGISTRY", false]], "model_set_axis (gammapy.astro.population.casebattacharya1998 attribute)": [[28, "gammapy.astro.population.CaseBattacharya1998.model_set_axis", false]], "model_set_axis (gammapy.astro.population.exponential attribute)": [[29, "gammapy.astro.population.Exponential.model_set_axis", false]], "model_set_axis (gammapy.astro.population.faucherkaspi2006 attribute)": [[30, "gammapy.astro.population.FaucherKaspi2006.model_set_axis", false]], "model_set_axis (gammapy.astro.population.faucherkaspi2006velocitybimodal attribute)": [[31, "gammapy.astro.population.FaucherKaspi2006VelocityBimodal.model_set_axis", false]], "model_set_axis (gammapy.astro.population.faucherkaspi2006velocitymaxwellian attribute)": [[32, "gammapy.astro.population.FaucherKaspi2006VelocityMaxwellian.model_set_axis", false]], "model_set_axis (gammapy.astro.population.lorimer2006 attribute)": [[35, "gammapy.astro.population.Lorimer2006.model_set_axis", false]], "model_set_axis (gammapy.astro.population.paczynski1990 attribute)": [[36, "gammapy.astro.population.Paczynski1990.model_set_axis", false]], "model_set_axis (gammapy.astro.population.paczynski1990velocity attribute)": [[37, "gammapy.astro.population.Paczynski1990Velocity.model_set_axis", false]], "model_set_axis (gammapy.astro.population.yusifovkucuk2004 attribute)": [[39, "gammapy.astro.population.YusifovKucuk2004.model_set_axis", false]], "model_set_axis (gammapy.astro.population.yusifovkucuk2004b attribute)": [[40, "gammapy.astro.population.YusifovKucuk2004B.model_set_axis", false]], "model_validate() (gammapy.analysis.analysisconfig class method)": [[16, "gammapy.analysis.AnalysisConfig.model_validate", false]], "model_validate() (gammapy.data.eventlistmetadata class method)": [[84, "gammapy.data.EventListMetaData.model_validate", false]], "model_validate() (gammapy.data.observationmetadata class method)": [[90, "gammapy.data.ObservationMetaData.model_validate", false]], "model_validate() (gammapy.datasets.mapdatasetmetadata class method)": [[104, "gammapy.datasets.MapDatasetMetaData.model_validate", false]], "model_validate() (gammapy.estimators.fluxmetadata class method)": [[123, "gammapy.estimators.FluxMetaData.model_validate", false]], "model_validate_json() (gammapy.analysis.analysisconfig class method)": [[16, "gammapy.analysis.AnalysisConfig.model_validate_json", false]], "model_validate_json() (gammapy.data.eventlistmetadata class method)": [[84, "gammapy.data.EventListMetaData.model_validate_json", false]], "model_validate_json() (gammapy.data.observationmetadata class method)": [[90, "gammapy.data.ObservationMetaData.model_validate_json", false]], "model_validate_json() (gammapy.datasets.mapdatasetmetadata class method)": [[104, "gammapy.datasets.MapDatasetMetaData.model_validate_json", false]], "model_validate_json() (gammapy.estimators.fluxmetadata class method)": [[123, "gammapy.estimators.FluxMetaData.model_validate_json", false]], "model_validate_strings() (gammapy.analysis.analysisconfig class method)": [[16, "gammapy.analysis.AnalysisConfig.model_validate_strings", false]], "model_validate_strings() (gammapy.data.eventlistmetadata class method)": [[84, "gammapy.data.EventListMetaData.model_validate_strings", false]], "model_validate_strings() (gammapy.data.observationmetadata class method)": [[90, "gammapy.data.ObservationMetaData.model_validate_strings", false]], "model_validate_strings() (gammapy.datasets.mapdatasetmetadata class method)": [[104, "gammapy.datasets.MapDatasetMetaData.model_validate_strings", false]], "model_validate_strings() (gammapy.estimators.fluxmetadata class method)": [[123, "gammapy.estimators.FluxMetaData.model_validate_strings", false]], "modelbase (class in gammapy.modeling.models)": [[244, "gammapy.modeling.models.ModelBase", false]], "models (class in gammapy.modeling.models)": [[245, "gammapy.modeling.models.Models", false]], "models (gammapy.analysis.analysis attribute)": [[15, "gammapy.analysis.Analysis.models", false]], "models (gammapy.datasets.datasets attribute)": [[100, "gammapy.datasets.Datasets.models", false]], "models (gammapy.datasets.fluxpointsdataset attribute)": [[101, "gammapy.datasets.FluxPointsDataset.models", false]], "models (gammapy.datasets.mapdataset attribute)": [[102, "gammapy.datasets.MapDataset.models", false]], "models (gammapy.datasets.mapdatasetonoff attribute)": [[105, "gammapy.datasets.MapDatasetOnOff.models", false]], "models (gammapy.datasets.spectrumdataset attribute)": [[109, "gammapy.datasets.SpectrumDataset.models", false]], "models (gammapy.datasets.spectrumdatasetonoff attribute)": [[110, "gammapy.datasets.SpectrumDatasetOnOff.models", false]], "models (gammapy.modeling.fitresult attribute)": [[211, "gammapy.modeling.FitResult.models", false]], "models (gammapy.modeling.optimizeresult attribute)": [[212, "gammapy.modeling.OptimizeResult.models", false]], "module": [[0, "module-gammapy.analysis", false], [1, "module-gammapy.astro.darkmatter", false], [1, "module-gammapy.astro.population", false], [1, "module-gammapy.astro.source", false], [2, "module-gammapy.catalog", false], [3, "module-gammapy.data", false], [4, "module-gammapy.datasets", false], [4, "module-gammapy.datasets.utils", false], [5, "module-gammapy.estimators", false], [5, "module-gammapy.estimators.utils", false], [7, "module-gammapy.irf", false], [8, "module-gammapy.makers", false], [8, "module-gammapy.makers.utils", false], [9, "module-gammapy.maps", false], [10, "module-gammapy.modeling", false], [10, "module-gammapy.modeling.models", false], [10, "module-gammapy.modeling.models.utils", false], [12, "module-gammapy.stats", false], [13, "module-gammapy.utils.cluster", false], [13, "module-gammapy.utils.coordinates", false], [13, "module-gammapy.utils.fits", false], [13, "module-gammapy.utils.integrate", false], [13, "module-gammapy.utils.interpolation", false], [13, "module-gammapy.utils.parallel", false], [13, "module-gammapy.utils.random", false], [13, "module-gammapy.utils.regions", false], [13, "module-gammapy.utils.scripts", false], [13, "module-gammapy.utils.table", false], [13, "module-gammapy.utils.testing", false], [13, "module-gammapy.utils.time", false], [13, "module-gammapy.utils.units", false], [14, "module-gammapy.visualization", false]], "mooreprofile (class in gammapy.astro.darkmatter)": [[24, "gammapy.astro.darkmatter.MooreProfile", false]], "more() (gammapy.data.hduindextable method)": [[87, "gammapy.data.HDUIndexTable.more", false]], "more() (gammapy.data.observationtable method)": [[91, "gammapy.data.ObservationTable.more", false]], "motion_since_birth() (in module gammapy.utils.coordinates)": [[308, "gammapy.utils.coordinates.motion_since_birth", false]], "mpl_plot_check() (in module gammapy.utils.testing)": [[355, "gammapy.utils.testing.mpl_plot_check", false]], "multiprocessing_manager (class in gammapy.utils.parallel)": [[324, "gammapy.utils.parallel.multiprocessing_manager", false]], "n_bkg (gammapy.stats.cashcountsstatistic attribute)": [[285, "gammapy.stats.CashCountsStatistic.n_bkg", false]], "n_bkg (gammapy.stats.wstatcountsstatistic attribute)": [[287, "gammapy.stats.WStatCountsStatistic.n_bkg", false]], "n_dof (gammapy.estimators.fluxmaps attribute)": [[122, "gammapy.estimators.FluxMaps.n_dof", false]], "n_dof (gammapy.estimators.fluxpoints attribute)": [[124, "gammapy.estimators.FluxPoints.n_dof", false]], "n_inputs (gammapy.astro.population.casebattacharya1998 attribute)": [[28, "gammapy.astro.population.CaseBattacharya1998.n_inputs", false]], "n_inputs (gammapy.astro.population.exponential attribute)": [[29, "gammapy.astro.population.Exponential.n_inputs", false]], "n_inputs (gammapy.astro.population.faucherkaspi2006 attribute)": [[30, "gammapy.astro.population.FaucherKaspi2006.n_inputs", false]], "n_inputs (gammapy.astro.population.faucherkaspi2006velocitybimodal attribute)": [[31, "gammapy.astro.population.FaucherKaspi2006VelocityBimodal.n_inputs", false]], "n_inputs (gammapy.astro.population.faucherkaspi2006velocitymaxwellian attribute)": [[32, "gammapy.astro.population.FaucherKaspi2006VelocityMaxwellian.n_inputs", false]], "n_inputs (gammapy.astro.population.lorimer2006 attribute)": [[35, "gammapy.astro.population.Lorimer2006.n_inputs", false]], "n_inputs (gammapy.astro.population.paczynski1990 attribute)": [[36, "gammapy.astro.population.Paczynski1990.n_inputs", false]], "n_inputs (gammapy.astro.population.paczynski1990velocity attribute)": [[37, "gammapy.astro.population.Paczynski1990Velocity.n_inputs", false]], "n_inputs (gammapy.astro.population.yusifovkucuk2004 attribute)": [[39, "gammapy.astro.population.YusifovKucuk2004.n_inputs", false]], "n_inputs (gammapy.astro.population.yusifovkucuk2004b attribute)": [[40, "gammapy.astro.population.YusifovKucuk2004B.n_inputs", false]], "n_jobs (gammapy.data.observationseventssampler attribute)": [[93, "gammapy.data.ObservationsEventsSampler.n_jobs", false]], "n_jobs (gammapy.estimators.fluxpointsestimator attribute)": [[125, "gammapy.estimators.FluxPointsEstimator.n_jobs", false]], "n_jobs (gammapy.estimators.fluxprofileestimator attribute)": [[126, "gammapy.estimators.FluxProfileEstimator.n_jobs", false]], "n_jobs (gammapy.estimators.lightcurveestimator attribute)": [[129, "gammapy.estimators.LightCurveEstimator.n_jobs", false]], "n_jobs (gammapy.estimators.tsmapestimator attribute)": [[132, "gammapy.estimators.TSMapEstimator.n_jobs", false]], "n_jobs (gammapy.makers.datasetsmaker attribute)": [[168, "gammapy.makers.DatasetsMaker.n_jobs", false]], "n_jobs_default (in module gammapy.utils.parallel)": [[322, "gammapy.utils.parallel.N_JOBS_DEFAULT", false]], "n_models (gammapy.catalog.sourcecatalogobject2hwc attribute)": [[72, "gammapy.catalog.SourceCatalogObject2HWC.n_models", false]], "n_models (gammapy.catalog.sourcecatalogobject3hwc attribute)": [[76, "gammapy.catalog.SourceCatalogObject3HWC.n_models", false]], "n_outputs (gammapy.astro.population.casebattacharya1998 attribute)": [[28, "gammapy.astro.population.CaseBattacharya1998.n_outputs", false]], "n_outputs (gammapy.astro.population.exponential attribute)": [[29, "gammapy.astro.population.Exponential.n_outputs", false]], "n_outputs (gammapy.astro.population.faucherkaspi2006 attribute)": [[30, "gammapy.astro.population.FaucherKaspi2006.n_outputs", false]], "n_outputs (gammapy.astro.population.faucherkaspi2006velocitybimodal attribute)": [[31, "gammapy.astro.population.FaucherKaspi2006VelocityBimodal.n_outputs", false]], "n_outputs (gammapy.astro.population.faucherkaspi2006velocitymaxwellian attribute)": [[32, "gammapy.astro.population.FaucherKaspi2006VelocityMaxwellian.n_outputs", false]], "n_outputs (gammapy.astro.population.lorimer2006 attribute)": [[35, "gammapy.astro.population.Lorimer2006.n_outputs", false]], "n_outputs (gammapy.astro.population.paczynski1990 attribute)": [[36, "gammapy.astro.population.Paczynski1990.n_outputs", false]], "n_outputs (gammapy.astro.population.paczynski1990velocity attribute)": [[37, "gammapy.astro.population.Paczynski1990Velocity.n_outputs", false]], "n_outputs (gammapy.astro.population.yusifovkucuk2004 attribute)": [[39, "gammapy.astro.population.YusifovKucuk2004.n_outputs", false]], "n_outputs (gammapy.astro.population.yusifovkucuk2004b attribute)": [[40, "gammapy.astro.population.YusifovKucuk2004B.n_outputs", false]], "n_sig (gammapy.stats.cashcountsstatistic attribute)": [[285, "gammapy.stats.CashCountsStatistic.n_sig", false]], "n_sig (gammapy.stats.wstatcountsstatistic attribute)": [[287, "gammapy.stats.WStatCountsStatistic.n_sig", false]], "n_sig_matching_significance() (gammapy.stats.cashcountsstatistic method)": [[285, "gammapy.stats.CashCountsStatistic.n_sig_matching_significance", false]], "n_sig_matching_significance() (gammapy.stats.wstatcountsstatistic method)": [[287, "gammapy.stats.WStatCountsStatistic.n_sig_matching_significance", false]], "n_sigma (gammapy.estimators.fluxmaps attribute)": [[122, "gammapy.estimators.FluxMaps.n_sigma", false]], "n_sigma (gammapy.estimators.fluxpoints attribute)": [[124, "gammapy.estimators.FluxPoints.n_sigma", false]], "n_sigma_ul (gammapy.estimators.fluxmaps attribute)": [[122, "gammapy.estimators.FluxMaps.n_sigma_ul", false]], "n_sigma_ul (gammapy.estimators.fluxpoints attribute)": [[124, "gammapy.estimators.FluxPoints.n_sigma_ul", false]], "n_submodels (gammapy.astro.population.casebattacharya1998 attribute)": [[28, "gammapy.astro.population.CaseBattacharya1998.n_submodels", false]], "n_submodels (gammapy.astro.population.exponential attribute)": [[29, "gammapy.astro.population.Exponential.n_submodels", false]], "n_submodels (gammapy.astro.population.faucherkaspi2006 attribute)": [[30, "gammapy.astro.population.FaucherKaspi2006.n_submodels", false]], "n_submodels (gammapy.astro.population.faucherkaspi2006velocitybimodal attribute)": [[31, "gammapy.astro.population.FaucherKaspi2006VelocityBimodal.n_submodels", false]], "n_submodels (gammapy.astro.population.faucherkaspi2006velocitymaxwellian attribute)": [[32, "gammapy.astro.population.FaucherKaspi2006VelocityMaxwellian.n_submodels", false]], "n_submodels (gammapy.astro.population.lorimer2006 attribute)": [[35, "gammapy.astro.population.Lorimer2006.n_submodels", false]], "n_submodels (gammapy.astro.population.paczynski1990 attribute)": [[36, "gammapy.astro.population.Paczynski1990.n_submodels", false]], "n_submodels (gammapy.astro.population.paczynski1990velocity attribute)": [[37, "gammapy.astro.population.Paczynski1990Velocity.n_submodels", false]], "n_submodels (gammapy.astro.population.yusifovkucuk2004 attribute)": [[39, "gammapy.astro.population.YusifovKucuk2004.n_submodels", false]], "n_submodels (gammapy.astro.population.yusifovkucuk2004b attribute)": [[40, "gammapy.astro.population.YusifovKucuk2004B.n_submodels", false]], "naimaspectralmodel (class in gammapy.modeling.models)": [[246, "gammapy.modeling.models.NaimaSpectralModel", false]], "name (gammapy.astro.population.casebattacharya1998 attribute)": [[28, "gammapy.astro.population.CaseBattacharya1998.name", false]], "name (gammapy.astro.population.exponential attribute)": [[29, "gammapy.astro.population.Exponential.name", false]], "name (gammapy.astro.population.faucherkaspi2006 attribute)": [[30, "gammapy.astro.population.FaucherKaspi2006.name", false]], "name (gammapy.astro.population.faucherkaspi2006velocitybimodal attribute)": [[31, "gammapy.astro.population.FaucherKaspi2006VelocityBimodal.name", false]], "name (gammapy.astro.population.faucherkaspi2006velocitymaxwellian attribute)": [[32, "gammapy.astro.population.FaucherKaspi2006VelocityMaxwellian.name", false]], "name (gammapy.astro.population.lorimer2006 attribute)": [[35, "gammapy.astro.population.Lorimer2006.name", false]], "name (gammapy.astro.population.paczynski1990 attribute)": [[36, "gammapy.astro.population.Paczynski1990.name", false]], "name (gammapy.astro.population.paczynski1990velocity attribute)": [[37, "gammapy.astro.population.Paczynski1990Velocity.name", false]], "name (gammapy.astro.population.yusifovkucuk2004 attribute)": [[39, "gammapy.astro.population.YusifovKucuk2004.name", false]], "name (gammapy.astro.population.yusifovkucuk2004b attribute)": [[40, "gammapy.astro.population.YusifovKucuk2004B.name", false]], "name (gammapy.catalog.sourcecatalogobject attribute)": [[69, "gammapy.catalog.SourceCatalogObject.name", false]], "name (gammapy.catalog.sourcecatalogobject1lhaaso attribute)": [[70, "gammapy.catalog.SourceCatalogObject1LHAASO.name", false]], "name (gammapy.catalog.sourcecatalogobject2fhl attribute)": [[71, "gammapy.catalog.SourceCatalogObject2FHL.name", false]], "name (gammapy.catalog.sourcecatalogobject2hwc attribute)": [[72, "gammapy.catalog.SourceCatalogObject2HWC.name", false]], "name (gammapy.catalog.sourcecatalogobject2pc attribute)": [[73, "gammapy.catalog.SourceCatalogObject2PC.name", false]], "name (gammapy.catalog.sourcecatalogobject3fgl attribute)": [[74, "gammapy.catalog.SourceCatalogObject3FGL.name", false]], "name (gammapy.catalog.sourcecatalogobject3fhl attribute)": [[75, "gammapy.catalog.SourceCatalogObject3FHL.name", false]], "name (gammapy.catalog.sourcecatalogobject3hwc attribute)": [[76, "gammapy.catalog.SourceCatalogObject3HWC.name", false]], "name (gammapy.catalog.sourcecatalogobject3pc attribute)": [[77, "gammapy.catalog.SourceCatalogObject3PC.name", false]], "name (gammapy.catalog.sourcecatalogobject4fgl attribute)": [[78, "gammapy.catalog.SourceCatalogObject4FGL.name", false]], "name (gammapy.catalog.sourcecatalogobjectgammacat attribute)": [[79, "gammapy.catalog.SourceCatalogObjectGammaCat.name", false]], "name (gammapy.catalog.sourcecatalogobjecthgps attribute)": [[80, "gammapy.catalog.SourceCatalogObjectHGPS.name", false]], "name (gammapy.catalog.sourcecatalogobjecthgpscomponent attribute)": [[81, "gammapy.catalog.SourceCatalogObjectHGPSComponent.name", false]], "name (gammapy.datasets.dataset attribute)": [[99, "gammapy.datasets.Dataset.name", false]], "name (gammapy.datasets.fluxpointsdataset attribute)": [[101, "gammapy.datasets.FluxPointsDataset.name", false]], "name (gammapy.datasets.mapdataset attribute)": [[102, "gammapy.datasets.MapDataset.name", false]], "name (gammapy.datasets.mapdatasetonoff attribute)": [[105, "gammapy.datasets.MapDatasetOnOff.name", false]], "name (gammapy.datasets.spectrumdataset attribute)": [[109, "gammapy.datasets.SpectrumDataset.name", false]], "name (gammapy.datasets.spectrumdatasetonoff attribute)": [[110, "gammapy.datasets.SpectrumDatasetOnOff.name", false]], "name (gammapy.maps.labelmapaxis attribute)": [[194, "gammapy.maps.LabelMapAxis.name", false]], "name (gammapy.maps.mapaxis attribute)": [[197, "gammapy.maps.MapAxis.name", false]], "name (gammapy.maps.timemapaxis attribute)": [[202, "gammapy.maps.TimeMapAxis.name", false]], "name (gammapy.modeling.models.fovbackgroundmodel attribute)": [[231, "gammapy.modeling.models.FoVBackgroundModel.name", false]], "name (gammapy.modeling.models.skymodel attribute)": [[261, "gammapy.modeling.models.SkyModel.name", false]], "name (gammapy.modeling.models.templatenpredmodel attribute)": [[271, "gammapy.modeling.models.TemplateNPredModel.name", false]], "name (gammapy.modeling.parameter attribute)": [[213, "gammapy.modeling.Parameter.name", false]], "name (gammapy.modeling.priorparameter attribute)": [[215, "gammapy.modeling.PriorParameter.name", false]], "names (gammapy.datasets.datasets attribute)": [[100, "gammapy.datasets.Datasets.names", false]], "names (gammapy.maps.mapaxes attribute)": [[196, "gammapy.maps.MapAxes.names", false]], "names (gammapy.modeling.models.datasetmodels attribute)": [[223, "gammapy.modeling.models.DatasetModels.names", false]], "names (gammapy.modeling.models.models attribute)": [[245, "gammapy.modeling.models.Models.names", false]], "names (gammapy.modeling.parameters attribute)": [[214, "gammapy.modeling.Parameters.names", false]], "names (gammapy.modeling.priorparameters attribute)": [[216, "gammapy.modeling.PriorParameters.names", false]], "nbin (gammapy.maps.labelmapaxis attribute)": [[194, "gammapy.maps.LabelMapAxis.nbin", false]], "nbin (gammapy.maps.mapaxis attribute)": [[197, "gammapy.maps.MapAxis.nbin", false]], "nbin (gammapy.maps.timemapaxis attribute)": [[202, "gammapy.maps.TimeMapAxis.nbin", false]], "nbin_per_decade (gammapy.maps.mapaxis attribute)": [[197, "gammapy.maps.MapAxis.nbin_per_decade", false]], "ndim (gammapy.maps.hpxgeom attribute)": [[191, "gammapy.maps.HpxGeom.ndim", false]], "ndim (gammapy.maps.mapcoord attribute)": [[198, "gammapy.maps.MapCoord.ndim", false]], "ndim (gammapy.maps.wcsgeom attribute)": [[203, "gammapy.maps.WcsGeom.ndim", false]], "nest (gammapy.maps.hpxgeom attribute)": [[191, "gammapy.maps.HpxGeom.nest", false]], "nfev (gammapy.modeling.fitresult attribute)": [[211, "gammapy.modeling.FitResult.nfev", false]], "nfev (gammapy.modeling.optimizeresult attribute)": [[212, "gammapy.modeling.OptimizeResult.nfev", false]], "nfwprofile (class in gammapy.astro.darkmatter)": [[25, "gammapy.astro.darkmatter.NFWProfile", false]], "niter (gammapy.estimators.fluxmaps attribute)": [[122, "gammapy.estimators.FluxMaps.niter", false]], "niter (gammapy.estimators.fluxpoints attribute)": [[124, "gammapy.estimators.FluxPoints.niter", false]], "node_type (gammapy.maps.labelmapaxis attribute)": [[194, "gammapy.maps.LabelMapAxis.node_type", false]], "node_type (gammapy.maps.mapaxis attribute)": [[197, "gammapy.maps.MapAxis.node_type", false]], "node_type (gammapy.maps.timemapaxis attribute)": [[202, "gammapy.maps.TimeMapAxis.node_type", false]], "norm (gammapy.estimators.fluxmaps attribute)": [[122, "gammapy.estimators.FluxMaps.norm", false]], "norm (gammapy.estimators.fluxpoints attribute)": [[124, "gammapy.estimators.FluxPoints.norm", false]], "norm (gammapy.modeling.models.expcutoffpowerlawnormspectralmodel attribute)": [[228, "gammapy.modeling.models.ExpCutoffPowerLawNormSpectralModel.norm", false]], "norm (gammapy.modeling.models.logparabolanormspectralmodel attribute)": [[239, "gammapy.modeling.models.LogParabolaNormSpectralModel.norm", false]], "norm (gammapy.modeling.models.meyercrabspectralmodel attribute)": [[242, "gammapy.modeling.models.MeyerCrabSpectralModel.norm", false]], "norm (gammapy.modeling.models.powerlawnormspectralmodel attribute)": [[251, "gammapy.modeling.models.PowerLawNormSpectralModel.norm", false]], "norm (gammapy.modeling.models.scalespectralmodel attribute)": [[257, "gammapy.modeling.models.ScaleSpectralModel.norm", false]], "norm_bounds_cython() (in module gammapy.stats)": [[299, "gammapy.stats.norm_bounds_cython", false]], "norm_err (gammapy.estimators.fluxmaps attribute)": [[122, "gammapy.estimators.FluxMaps.norm_err", false]], "norm_err (gammapy.estimators.fluxpoints attribute)": [[124, "gammapy.estimators.FluxPoints.norm_err", false]], "norm_errn (gammapy.estimators.fluxmaps attribute)": [[122, "gammapy.estimators.FluxMaps.norm_errn", false]], "norm_errn (gammapy.estimators.fluxpoints attribute)": [[124, "gammapy.estimators.FluxPoints.norm_errn", false]], "norm_errp (gammapy.estimators.fluxmaps attribute)": [[122, "gammapy.estimators.FluxMaps.norm_errp", false]], "norm_errp (gammapy.estimators.fluxpoints attribute)": [[124, "gammapy.estimators.FluxPoints.norm_errp", false]], "norm_sensitivity (gammapy.estimators.fluxmaps attribute)": [[122, "gammapy.estimators.FluxMaps.norm_sensitivity", false]], "norm_sensitivity (gammapy.estimators.fluxpoints attribute)": [[124, "gammapy.estimators.FluxPoints.norm_sensitivity", false]], "norm_ul (gammapy.estimators.fluxmaps attribute)": [[122, "gammapy.estimators.FluxMaps.norm_ul", false]], "norm_ul (gammapy.estimators.fluxpoints attribute)": [[124, "gammapy.estimators.FluxPoints.norm_ul", false]], "normalize() (gammapy.estimators.imageprofile method)": [[127, "gammapy.estimators.ImageProfile.normalize", false]], "normalize() (gammapy.irf.background2d method)": [[146, "gammapy.irf.Background2D.normalize", false]], "normalize() (gammapy.irf.background3d method)": [[147, "gammapy.irf.Background3D.normalize", false]], "normalize() (gammapy.irf.backgroundirf method)": [[148, "gammapy.irf.BackgroundIRF.normalize", false]], "normalize() (gammapy.irf.edispkernel method)": [[149, "gammapy.irf.EDispKernel.normalize", false]], "normalize() (gammapy.irf.edispmap method)": [[151, "gammapy.irf.EDispMap.normalize", false]], "normalize() (gammapy.irf.effectiveareatable2d method)": [[152, "gammapy.irf.EffectiveAreaTable2D.normalize", false]], "normalize() (gammapy.irf.energydependentmultigausspsf method)": [[153, "gammapy.irf.EnergyDependentMultiGaussPSF.normalize", false]], "normalize() (gammapy.irf.energydispersion2d method)": [[154, "gammapy.irf.EnergyDispersion2D.normalize", false]], "normalize() (gammapy.irf.irf method)": [[156, "gammapy.irf.IRF.normalize", false]], "normalize() (gammapy.irf.parametricpsf method)": [[163, "gammapy.irf.ParametricPSF.normalize", false]], "normalize() (gammapy.irf.psf3d method)": [[159, "gammapy.irf.PSF3D.normalize", false]], "normalize() (gammapy.irf.psfkernel method)": [[160, "gammapy.irf.PSFKernel.normalize", false]], "normalize() (gammapy.irf.psfking method)": [[161, "gammapy.irf.PSFKing.normalize", false]], "normalize() (gammapy.irf.psfmap method)": [[162, "gammapy.irf.PSFMap.normalize", false]], "normalize() (gammapy.irf.radmax2d method)": [[164, "gammapy.irf.RadMax2D.normalize", false]], "normalize() (gammapy.irf.recopsfmap method)": [[165, "gammapy.irf.RecoPSFMap.normalize", false]], "normalize() (gammapy.maps.hpxmap method)": [[192, "gammapy.maps.HpxMap.normalize", false]], "normalize() (gammapy.maps.hpxndmap method)": [[193, "gammapy.maps.HpxNDMap.normalize", false]], "normalize() (gammapy.maps.map method)": [[195, "gammapy.maps.Map.normalize", false]], "normalize() (gammapy.maps.regionndmap method)": [[201, "gammapy.maps.RegionNDMap.normalize", false]], "normalize() (gammapy.maps.wcsmap method)": [[204, "gammapy.maps.WcsMap.normalize", false]], "normalize() (gammapy.maps.wcsndmap method)": [[205, "gammapy.maps.WcsNDMap.normalize", false]], "normalize() (in module gammapy.utils.random)": [[329, "gammapy.utils.random.normalize", false]], "norms (gammapy.modeling.models.piecewisenormspatialmodel attribute)": [[247, "gammapy.modeling.models.PiecewiseNormSpatialModel.norms", false]], "norms (gammapy.modeling.models.piecewisenormspectralmodel attribute)": [[248, "gammapy.modeling.models.PiecewiseNormSpectralModel.norms", false]], "npix (gammapy.maps.hpxgeom attribute)": [[191, "gammapy.maps.HpxGeom.npix", false]], "npix (gammapy.maps.regiongeom attribute)": [[200, "gammapy.maps.RegionGeom.npix", false]], "npix (gammapy.maps.wcsgeom attribute)": [[203, "gammapy.maps.WcsGeom.npix", false]], "npix_max (gammapy.maps.hpxgeom attribute)": [[191, "gammapy.maps.HpxGeom.npix_max", false]], "npred (gammapy.estimators.fluxmaps attribute)": [[122, "gammapy.estimators.FluxMaps.npred", false]], "npred (gammapy.estimators.fluxpoints attribute)": [[124, "gammapy.estimators.FluxPoints.npred", false]], "npred() (gammapy.datasets.mapdataset method)": [[102, "gammapy.datasets.MapDataset.npred", false]], "npred() (gammapy.datasets.mapdatasetonoff method)": [[105, "gammapy.datasets.MapDatasetOnOff.npred", false]], "npred() (gammapy.datasets.spectrumdataset method)": [[109, "gammapy.datasets.SpectrumDataset.npred", false]], "npred() (gammapy.datasets.spectrumdatasetonoff method)": [[110, "gammapy.datasets.SpectrumDatasetOnOff.npred", false]], "npred_background (gammapy.estimators.fluxmaps attribute)": [[122, "gammapy.estimators.FluxMaps.npred_background", false]], "npred_background (gammapy.estimators.fluxpoints attribute)": [[124, "gammapy.estimators.FluxPoints.npred_background", false]], "npred_background() (gammapy.datasets.mapdataset method)": [[102, "gammapy.datasets.MapDataset.npred_background", false]], "npred_background() (gammapy.datasets.mapdatasetonoff method)": [[105, "gammapy.datasets.MapDatasetOnOff.npred_background", false]], "npred_background() (gammapy.datasets.spectrumdataset method)": [[109, "gammapy.datasets.SpectrumDataset.npred_background", false]], "npred_background() (gammapy.datasets.spectrumdatasetonoff method)": [[110, "gammapy.datasets.SpectrumDatasetOnOff.npred_background", false]], "npred_excess (gammapy.estimators.fluxmaps attribute)": [[122, "gammapy.estimators.FluxMaps.npred_excess", false]], "npred_excess (gammapy.estimators.fluxpoints attribute)": [[124, "gammapy.estimators.FluxPoints.npred_excess", false]], "npred_excess_err (gammapy.estimators.fluxmaps attribute)": [[122, "gammapy.estimators.FluxMaps.npred_excess_err", false]], "npred_excess_err (gammapy.estimators.fluxpoints attribute)": [[124, "gammapy.estimators.FluxPoints.npred_excess_err", false]], "npred_excess_errn (gammapy.estimators.fluxmaps attribute)": [[122, "gammapy.estimators.FluxMaps.npred_excess_errn", false]], "npred_excess_errn (gammapy.estimators.fluxpoints attribute)": [[124, "gammapy.estimators.FluxPoints.npred_excess_errn", false]], "npred_excess_errp (gammapy.estimators.fluxmaps attribute)": [[122, "gammapy.estimators.FluxMaps.npred_excess_errp", false]], "npred_excess_errp (gammapy.estimators.fluxpoints attribute)": [[124, "gammapy.estimators.FluxPoints.npred_excess_errp", false]], "npred_excess_ref (gammapy.estimators.fluxmaps attribute)": [[122, "gammapy.estimators.FluxMaps.npred_excess_ref", false]], "npred_excess_ref (gammapy.estimators.fluxpoints attribute)": [[124, "gammapy.estimators.FluxPoints.npred_excess_ref", false]], "npred_excess_ul (gammapy.estimators.fluxmaps attribute)": [[122, "gammapy.estimators.FluxMaps.npred_excess_ul", false]], "npred_excess_ul (gammapy.estimators.fluxpoints attribute)": [[124, "gammapy.estimators.FluxPoints.npred_excess_ul", false]], "npred_off() (gammapy.datasets.mapdatasetonoff method)": [[105, "gammapy.datasets.MapDatasetOnOff.npred_off", false]], "npred_off() (gammapy.datasets.spectrumdatasetonoff method)": [[110, "gammapy.datasets.SpectrumDatasetOnOff.npred_off", false]], "npred_signal() (gammapy.datasets.mapdataset method)": [[102, "gammapy.datasets.MapDataset.npred_signal", false]], "npred_signal() (gammapy.datasets.mapdatasetonoff method)": [[105, "gammapy.datasets.MapDatasetOnOff.npred_signal", false]], "npred_signal() (gammapy.datasets.spectrumdataset method)": [[109, "gammapy.datasets.SpectrumDataset.npred_signal", false]], "npred_signal() (gammapy.datasets.spectrumdatasetonoff method)": [[110, "gammapy.datasets.SpectrumDatasetOnOff.npred_signal", false]], "nside (gammapy.maps.hpxgeom attribute)": [[191, "gammapy.maps.HpxGeom.nside", false]], "obs() (gammapy.data.datastore method)": [[82, "gammapy.data.DataStore.obs", false]], "obs_id_unique (gammapy.data.hduindextable attribute)": [[87, "gammapy.data.HDUIndexTable.obs_id_unique", false]], "obs_ids (gammapy.data.datastore attribute)": [[82, "gammapy.data.DataStore.obs_ids", false]], "observation (class in gammapy.data)": [[88, "gammapy.data.Observation", false]], "observation_dead_time_fraction (gammapy.data.eventlist attribute)": [[83, "gammapy.data.EventList.observation_dead_time_fraction", false]], "observation_dead_time_fraction (gammapy.data.observation attribute)": [[88, "gammapy.data.Observation.observation_dead_time_fraction", false]], "observation_live_time_duration (gammapy.data.eventlist attribute)": [[83, "gammapy.data.EventList.observation_live_time_duration", false]], "observation_live_time_duration (gammapy.data.observation attribute)": [[88, "gammapy.data.Observation.observation_live_time_duration", false]], "observation_time_duration (gammapy.data.eventlist attribute)": [[83, "gammapy.data.EventList.observation_time_duration", false]], "observation_time_duration (gammapy.data.observation attribute)": [[88, "gammapy.data.Observation.observation_time_duration", false]], "observation_time_start (gammapy.data.eventlist attribute)": [[83, "gammapy.data.EventList.observation_time_start", false]], "observation_time_stop (gammapy.data.eventlist attribute)": [[83, "gammapy.data.EventList.observation_time_stop", false]], "observationeventsampler (class in gammapy.datasets)": [[108, "gammapy.datasets.ObservationEventSampler", false]], "observationfilter (class in gammapy.data)": [[89, "gammapy.data.ObservationFilter", false]], "observationmetadata (class in gammapy.data)": [[90, "gammapy.data.ObservationMetaData", false]], "observations (class in gammapy.data)": [[92, "gammapy.data.Observations", false]], "observationseventssampler (class in gammapy.data)": [[93, "gammapy.data.ObservationsEventsSampler", false]], "observationtable (class in gammapy.data)": [[91, "gammapy.data.ObservationTable", false]], "observatory_earth_location (gammapy.data.eventlist attribute)": [[83, "gammapy.data.EventList.observatory_earth_location", false]], "observatory_earth_location (gammapy.data.observation attribute)": [[88, "gammapy.data.Observation.observatory_earth_location", false]], "observatory_locations (in module gammapy.data)": [[97, "gammapy.data.observatory_locations", false]], "offset (gammapy.data.eventlist attribute)": [[83, "gammapy.data.EventList.offset", false]], "offset_from_median (gammapy.data.eventlist attribute)": [[83, "gammapy.data.EventList.offset_from_median", false]], "offset_max (gammapy.makers.datasetsmaker attribute)": [[168, "gammapy.makers.DatasetsMaker.offset_max", false]], "ogipdatasetreader (class in gammapy.datasets)": [[106, "gammapy.datasets.OGIPDatasetReader", false]], "ogipdatasetwriter (class in gammapy.datasets)": [[107, "gammapy.datasets.OGIPDatasetWriter", false]], "omega (gammapy.modeling.models.sinetemporalmodel attribute)": [[260, "gammapy.modeling.models.SineTemporalModel.omega", false]], "optimize() (gammapy.modeling.fit method)": [[210, "gammapy.modeling.Fit.optimize", false]], "optimize_result (gammapy.modeling.fitresult attribute)": [[211, "gammapy.modeling.FitResult.optimize_result", false]], "optimizeresult (class in gammapy.modeling)": [[212, "gammapy.modeling.OptimizeResult", false]], "order (gammapy.maps.hpxgeom attribute)": [[191, "gammapy.maps.HpxGeom.order", false]], "ordering (gammapy.maps.hpxgeom attribute)": [[191, "gammapy.maps.HpxGeom.ordering", false]], "output_units() (gammapy.astro.population.casebattacharya1998 method)": [[28, "gammapy.astro.population.CaseBattacharya1998.output_units", false]], "output_units() (gammapy.astro.population.exponential method)": [[29, "gammapy.astro.population.Exponential.output_units", false]], "output_units() (gammapy.astro.population.faucherkaspi2006 method)": [[30, "gammapy.astro.population.FaucherKaspi2006.output_units", false]], "output_units() (gammapy.astro.population.faucherkaspi2006velocitybimodal method)": [[31, "gammapy.astro.population.FaucherKaspi2006VelocityBimodal.output_units", false]], "output_units() (gammapy.astro.population.faucherkaspi2006velocitymaxwellian method)": [[32, "gammapy.astro.population.FaucherKaspi2006VelocityMaxwellian.output_units", false]], "output_units() (gammapy.astro.population.lorimer2006 method)": [[35, "gammapy.astro.population.Lorimer2006.output_units", false]], "output_units() (gammapy.astro.population.paczynski1990 method)": [[36, "gammapy.astro.population.Paczynski1990.output_units", false]], "output_units() (gammapy.astro.population.paczynski1990velocity method)": [[37, "gammapy.astro.population.Paczynski1990Velocity.output_units", false]], "output_units() (gammapy.astro.population.yusifovkucuk2004 method)": [[39, "gammapy.astro.population.YusifovKucuk2004.output_units", false]], "output_units() (gammapy.astro.population.yusifovkucuk2004b method)": [[40, "gammapy.astro.population.YusifovKucuk2004B.output_units", false]], "outputs (gammapy.astro.population.casebattacharya1998 attribute)": [[28, "gammapy.astro.population.CaseBattacharya1998.outputs", false]], "outputs (gammapy.astro.population.exponential attribute)": [[29, "gammapy.astro.population.Exponential.outputs", false]], "outputs (gammapy.astro.population.faucherkaspi2006 attribute)": [[30, "gammapy.astro.population.FaucherKaspi2006.outputs", false]], "outputs (gammapy.astro.population.faucherkaspi2006velocitybimodal attribute)": [[31, "gammapy.astro.population.FaucherKaspi2006VelocityBimodal.outputs", false]], "outputs (gammapy.astro.population.faucherkaspi2006velocitymaxwellian attribute)": [[32, "gammapy.astro.population.FaucherKaspi2006VelocityMaxwellian.outputs", false]], "outputs (gammapy.astro.population.lorimer2006 attribute)": [[35, "gammapy.astro.population.Lorimer2006.outputs", false]], "outputs (gammapy.astro.population.paczynski1990 attribute)": [[36, "gammapy.astro.population.Paczynski1990.outputs", false]], "outputs (gammapy.astro.population.paczynski1990velocity attribute)": [[37, "gammapy.astro.population.Paczynski1990Velocity.outputs", false]], "outputs (gammapy.astro.population.yusifovkucuk2004 attribute)": [[39, "gammapy.astro.population.YusifovKucuk2004.outputs", false]], "outputs (gammapy.astro.population.yusifovkucuk2004b attribute)": [[40, "gammapy.astro.population.YusifovKucuk2004B.outputs", false]], "p (gammapy.astro.population.valleespiral attribute)": [[38, "gammapy.astro.population.ValleeSpiral.p", false]], "p_value (gammapy.stats.cashcountsstatistic attribute)": [[285, "gammapy.stats.CashCountsStatistic.p_value", false]], "p_value (gammapy.stats.wstatcountsstatistic attribute)": [[287, "gammapy.stats.WStatCountsStatistic.p_value", false]], "paczynski1990 (class in gammapy.astro.population)": [[36, "gammapy.astro.population.Paczynski1990", false]], "paczynski1990velocity (class in gammapy.astro.population)": [[37, "gammapy.astro.population.Paczynski1990Velocity", false]], "pad() (gammapy.datasets.mapdataset method)": [[102, "gammapy.datasets.MapDataset.pad", false]], "pad() (gammapy.datasets.mapdatasetonoff method)": [[105, "gammapy.datasets.MapDatasetOnOff.pad", false]], "pad() (gammapy.datasets.spectrumdataset method)": [[109, "gammapy.datasets.SpectrumDataset.pad", false]], "pad() (gammapy.datasets.spectrumdatasetonoff method)": [[110, "gammapy.datasets.SpectrumDatasetOnOff.pad", false]], "pad() (gammapy.irf.background2d method)": [[146, "gammapy.irf.Background2D.pad", false]], "pad() (gammapy.irf.background3d method)": [[147, "gammapy.irf.Background3D.pad", false]], "pad() (gammapy.irf.backgroundirf method)": [[148, "gammapy.irf.BackgroundIRF.pad", false]], "pad() (gammapy.irf.edispkernel method)": [[149, "gammapy.irf.EDispKernel.pad", false]], "pad() (gammapy.irf.effectiveareatable2d method)": [[152, "gammapy.irf.EffectiveAreaTable2D.pad", false]], "pad() (gammapy.irf.energydependentmultigausspsf method)": [[153, "gammapy.irf.EnergyDependentMultiGaussPSF.pad", false]], "pad() (gammapy.irf.energydispersion2d method)": [[154, "gammapy.irf.EnergyDispersion2D.pad", false]], "pad() (gammapy.irf.irf method)": [[156, "gammapy.irf.IRF.pad", false]], "pad() (gammapy.irf.parametricpsf method)": [[163, "gammapy.irf.ParametricPSF.pad", false]], "pad() (gammapy.irf.psf3d method)": [[159, "gammapy.irf.PSF3D.pad", false]], "pad() (gammapy.irf.psfking method)": [[161, "gammapy.irf.PSFKing.pad", false]], "pad() (gammapy.irf.radmax2d method)": [[164, "gammapy.irf.RadMax2D.pad", false]], "pad() (gammapy.maps.geom method)": [[190, "gammapy.maps.Geom.pad", false]], "pad() (gammapy.maps.hpxgeom method)": [[191, "gammapy.maps.HpxGeom.pad", false]], "pad() (gammapy.maps.hpxmap method)": [[192, "gammapy.maps.HpxMap.pad", false]], "pad() (gammapy.maps.hpxndmap method)": [[193, "gammapy.maps.HpxNDMap.pad", false]], "pad() (gammapy.maps.labelmapaxis method)": [[194, "gammapy.maps.LabelMapAxis.pad", false]], "pad() (gammapy.maps.map method)": [[195, "gammapy.maps.Map.pad", false]], "pad() (gammapy.maps.mapaxes method)": [[196, "gammapy.maps.MapAxes.pad", false]], "pad() (gammapy.maps.mapaxis method)": [[197, "gammapy.maps.MapAxis.pad", false]], "pad() (gammapy.maps.regiongeom method)": [[200, "gammapy.maps.RegionGeom.pad", false]], "pad() (gammapy.maps.regionndmap method)": [[201, "gammapy.maps.RegionNDMap.pad", false]], "pad() (gammapy.maps.wcsgeom method)": [[203, "gammapy.maps.WcsGeom.pad", false]], "pad() (gammapy.maps.wcsmap method)": [[204, "gammapy.maps.WcsMap.pad", false]], "pad() (gammapy.maps.wcsndmap method)": [[205, "gammapy.maps.WcsNDMap.pad", false]], "parallel_backend (gammapy.data.observationseventssampler attribute)": [[93, "gammapy.data.ObservationsEventsSampler.parallel_backend", false]], "parallel_backend (gammapy.estimators.fluxpointsestimator attribute)": [[125, "gammapy.estimators.FluxPointsEstimator.parallel_backend", false]], "parallel_backend (gammapy.estimators.fluxprofileestimator attribute)": [[126, "gammapy.estimators.FluxProfileEstimator.parallel_backend", false]], "parallel_backend (gammapy.estimators.lightcurveestimator attribute)": [[129, "gammapy.estimators.LightCurveEstimator.parallel_backend", false]], "parallel_backend (gammapy.estimators.tsmapestimator attribute)": [[132, "gammapy.estimators.TSMapEstimator.parallel_backend", false]], "parallel_backend (gammapy.makers.datasetsmaker attribute)": [[168, "gammapy.makers.DatasetsMaker.parallel_backend", false]], "param_names (gammapy.astro.population.casebattacharya1998 attribute)": [[28, "gammapy.astro.population.CaseBattacharya1998.param_names", false]], "param_names (gammapy.astro.population.exponential attribute)": [[29, "gammapy.astro.population.Exponential.param_names", false]], "param_names (gammapy.astro.population.faucherkaspi2006 attribute)": [[30, "gammapy.astro.population.FaucherKaspi2006.param_names", false]], "param_names (gammapy.astro.population.faucherkaspi2006velocitybimodal attribute)": [[31, "gammapy.astro.population.FaucherKaspi2006VelocityBimodal.param_names", false]], "param_names (gammapy.astro.population.faucherkaspi2006velocitymaxwellian attribute)": [[32, "gammapy.astro.population.FaucherKaspi2006VelocityMaxwellian.param_names", false]], "param_names (gammapy.astro.population.lorimer2006 attribute)": [[35, "gammapy.astro.population.Lorimer2006.param_names", false]], "param_names (gammapy.astro.population.paczynski1990 attribute)": [[36, "gammapy.astro.population.Paczynski1990.param_names", false]], "param_names (gammapy.astro.population.paczynski1990velocity attribute)": [[37, "gammapy.astro.population.Paczynski1990Velocity.param_names", false]], "param_names (gammapy.astro.population.yusifovkucuk2004 attribute)": [[39, "gammapy.astro.population.YusifovKucuk2004.param_names", false]], "param_names (gammapy.astro.population.yusifovkucuk2004b attribute)": [[40, "gammapy.astro.population.YusifovKucuk2004B.param_names", false]], "param_sets (gammapy.astro.population.casebattacharya1998 attribute)": [[28, "gammapy.astro.population.CaseBattacharya1998.param_sets", false]], "param_sets (gammapy.astro.population.exponential attribute)": [[29, "gammapy.astro.population.Exponential.param_sets", false]], "param_sets (gammapy.astro.population.faucherkaspi2006 attribute)": [[30, "gammapy.astro.population.FaucherKaspi2006.param_sets", false]], "param_sets (gammapy.astro.population.faucherkaspi2006velocitybimodal attribute)": [[31, "gammapy.astro.population.FaucherKaspi2006VelocityBimodal.param_sets", false]], "param_sets (gammapy.astro.population.faucherkaspi2006velocitymaxwellian attribute)": [[32, "gammapy.astro.population.FaucherKaspi2006VelocityMaxwellian.param_sets", false]], "param_sets (gammapy.astro.population.lorimer2006 attribute)": [[35, "gammapy.astro.population.Lorimer2006.param_sets", false]], "param_sets (gammapy.astro.population.paczynski1990 attribute)": [[36, "gammapy.astro.population.Paczynski1990.param_sets", false]], "param_sets (gammapy.astro.population.paczynski1990velocity attribute)": [[37, "gammapy.astro.population.Paczynski1990Velocity.param_sets", false]], "param_sets (gammapy.astro.population.yusifovkucuk2004 attribute)": [[39, "gammapy.astro.population.YusifovKucuk2004.param_sets", false]], "param_sets (gammapy.astro.population.yusifovkucuk2004b attribute)": [[40, "gammapy.astro.population.YusifovKucuk2004B.param_sets", false]], "parameter (class in gammapy.modeling)": [[213, "gammapy.modeling.Parameter", false]], "parameter_constraints (gammapy.astro.population.casebattacharya1998 attribute)": [[28, "gammapy.astro.population.CaseBattacharya1998.parameter_constraints", false]], "parameter_constraints (gammapy.astro.population.exponential attribute)": [[29, "gammapy.astro.population.Exponential.parameter_constraints", false]], "parameter_constraints (gammapy.astro.population.faucherkaspi2006 attribute)": [[30, "gammapy.astro.population.FaucherKaspi2006.parameter_constraints", false]], "parameter_constraints (gammapy.astro.population.faucherkaspi2006velocitybimodal attribute)": [[31, "gammapy.astro.population.FaucherKaspi2006VelocityBimodal.parameter_constraints", false]], "parameter_constraints (gammapy.astro.population.faucherkaspi2006velocitymaxwellian attribute)": [[32, "gammapy.astro.population.FaucherKaspi2006VelocityMaxwellian.parameter_constraints", false]], "parameter_constraints (gammapy.astro.population.lorimer2006 attribute)": [[35, "gammapy.astro.population.Lorimer2006.parameter_constraints", false]], "parameter_constraints (gammapy.astro.population.paczynski1990 attribute)": [[36, "gammapy.astro.population.Paczynski1990.parameter_constraints", false]], "parameter_constraints (gammapy.astro.population.paczynski1990velocity attribute)": [[37, "gammapy.astro.population.Paczynski1990Velocity.parameter_constraints", false]], "parameter_constraints (gammapy.astro.population.yusifovkucuk2004 attribute)": [[39, "gammapy.astro.population.YusifovKucuk2004.parameter_constraints", false]], "parameter_constraints (gammapy.astro.population.yusifovkucuk2004b attribute)": [[40, "gammapy.astro.population.YusifovKucuk2004B.parameter_constraints", false]], "parameterestimator (class in gammapy.estimators)": [[130, "gammapy.estimators.ParameterEstimator", false]], "parameters (class in gammapy.modeling)": [[214, "gammapy.modeling.Parameters", false]], "parameters (gammapy.astro.darkmatter.darkmatterannihilationspectralmodel attribute)": [[19, "gammapy.astro.darkmatter.DarkMatterAnnihilationSpectralModel.parameters", false]], "parameters (gammapy.astro.darkmatter.darkmatterdecayspectralmodel attribute)": [[20, "gammapy.astro.darkmatter.DarkMatterDecaySpectralModel.parameters", false]], "parameters (gammapy.astro.darkmatter.primaryflux attribute)": [[26, "gammapy.astro.darkmatter.PrimaryFlux.parameters", false]], "parameters (gammapy.astro.population.casebattacharya1998 attribute)": [[28, "gammapy.astro.population.CaseBattacharya1998.parameters", false]], "parameters (gammapy.astro.population.exponential attribute)": [[29, "gammapy.astro.population.Exponential.parameters", false]], "parameters (gammapy.astro.population.faucherkaspi2006 attribute)": [[30, "gammapy.astro.population.FaucherKaspi2006.parameters", false]], "parameters (gammapy.astro.population.faucherkaspi2006velocitybimodal attribute)": [[31, "gammapy.astro.population.FaucherKaspi2006VelocityBimodal.parameters", false]], "parameters (gammapy.astro.population.faucherkaspi2006velocitymaxwellian attribute)": [[32, "gammapy.astro.population.FaucherKaspi2006VelocityMaxwellian.parameters", false]], "parameters (gammapy.astro.population.lorimer2006 attribute)": [[35, "gammapy.astro.population.Lorimer2006.parameters", false]], "parameters (gammapy.astro.population.paczynski1990 attribute)": [[36, "gammapy.astro.population.Paczynski1990.parameters", false]], "parameters (gammapy.astro.population.paczynski1990velocity attribute)": [[37, "gammapy.astro.population.Paczynski1990Velocity.parameters", false]], "parameters (gammapy.astro.population.yusifovkucuk2004 attribute)": [[39, "gammapy.astro.population.YusifovKucuk2004.parameters", false]], "parameters (gammapy.astro.population.yusifovkucuk2004b attribute)": [[40, "gammapy.astro.population.YusifovKucuk2004B.parameters", false]], "parameters (gammapy.datasets.datasets attribute)": [[100, "gammapy.datasets.Datasets.parameters", false]], "parameters (gammapy.modeling.fitresult attribute)": [[211, "gammapy.modeling.FitResult.parameters", false]], "parameters (gammapy.modeling.models.brokenpowerlawspectralmodel attribute)": [[217, "gammapy.modeling.models.BrokenPowerLawSpectralModel.parameters", false]], "parameters (gammapy.modeling.models.compoundspectralmodel attribute)": [[218, "gammapy.modeling.models.CompoundSpectralModel.parameters", false]], "parameters (gammapy.modeling.models.constantfluxspatialmodel attribute)": [[219, "gammapy.modeling.models.ConstantFluxSpatialModel.parameters", false]], "parameters (gammapy.modeling.models.constantspatialmodel attribute)": [[220, "gammapy.modeling.models.ConstantSpatialModel.parameters", false]], "parameters (gammapy.modeling.models.constantspectralmodel attribute)": [[221, "gammapy.modeling.models.ConstantSpectralModel.parameters", false]], "parameters (gammapy.modeling.models.constanttemporalmodel attribute)": [[222, "gammapy.modeling.models.ConstantTemporalModel.parameters", false]], "parameters (gammapy.modeling.models.datasetmodels attribute)": [[223, "gammapy.modeling.models.DatasetModels.parameters", false]], "parameters (gammapy.modeling.models.diskspatialmodel attribute)": [[224, "gammapy.modeling.models.DiskSpatialModel.parameters", false]], "parameters (gammapy.modeling.models.eblabsorptionnormspectralmodel attribute)": [[225, "gammapy.modeling.models.EBLAbsorptionNormSpectralModel.parameters", false]], "parameters (gammapy.modeling.models.expcutoffpowerlaw3fglspectralmodel attribute)": [[227, "gammapy.modeling.models.ExpCutoffPowerLaw3FGLSpectralModel.parameters", false]], "parameters (gammapy.modeling.models.expcutoffpowerlawnormspectralmodel attribute)": [[228, "gammapy.modeling.models.ExpCutoffPowerLawNormSpectralModel.parameters", false]], "parameters (gammapy.modeling.models.expcutoffpowerlawspectralmodel attribute)": [[229, "gammapy.modeling.models.ExpCutoffPowerLawSpectralModel.parameters", false]], "parameters (gammapy.modeling.models.expdecaytemporalmodel attribute)": [[230, "gammapy.modeling.models.ExpDecayTemporalModel.parameters", false]], "parameters (gammapy.modeling.models.fovbackgroundmodel attribute)": [[231, "gammapy.modeling.models.FoVBackgroundModel.parameters", false]], "parameters (gammapy.modeling.models.gaussianspatialmodel attribute)": [[232, "gammapy.modeling.models.GaussianSpatialModel.parameters", false]], "parameters (gammapy.modeling.models.gaussianspectralmodel attribute)": [[233, "gammapy.modeling.models.GaussianSpectralModel.parameters", false]], "parameters (gammapy.modeling.models.gaussiantemporalmodel attribute)": [[234, "gammapy.modeling.models.GaussianTemporalModel.parameters", false]], "parameters (gammapy.modeling.models.generalizedgaussianspatialmodel attribute)": [[235, "gammapy.modeling.models.GeneralizedGaussianSpatialModel.parameters", false]], "parameters (gammapy.modeling.models.generalizedgaussiantemporalmodel attribute)": [[236, "gammapy.modeling.models.GeneralizedGaussianTemporalModel.parameters", false]], "parameters (gammapy.modeling.models.lightcurvetemplatetemporalmodel attribute)": [[237, "gammapy.modeling.models.LightCurveTemplateTemporalModel.parameters", false]], "parameters (gammapy.modeling.models.lineartemporalmodel attribute)": [[238, "gammapy.modeling.models.LinearTemporalModel.parameters", false]], "parameters (gammapy.modeling.models.logparabolanormspectralmodel attribute)": [[239, "gammapy.modeling.models.LogParabolaNormSpectralModel.parameters", false]], "parameters (gammapy.modeling.models.logparabolaspectralmodel attribute)": [[240, "gammapy.modeling.models.LogParabolaSpectralModel.parameters", false]], "parameters (gammapy.modeling.models.meyercrabspectralmodel attribute)": [[242, "gammapy.modeling.models.MeyerCrabSpectralModel.parameters", false]], "parameters (gammapy.modeling.models.modelbase attribute)": [[244, "gammapy.modeling.models.ModelBase.parameters", false]], "parameters (gammapy.modeling.models.models attribute)": [[245, "gammapy.modeling.models.Models.parameters", false]], "parameters (gammapy.modeling.models.naimaspectralmodel attribute)": [[246, "gammapy.modeling.models.NaimaSpectralModel.parameters", false]], "parameters (gammapy.modeling.models.piecewisenormspatialmodel attribute)": [[247, "gammapy.modeling.models.PiecewiseNormSpatialModel.parameters", false]], "parameters (gammapy.modeling.models.piecewisenormspectralmodel attribute)": [[248, "gammapy.modeling.models.PiecewiseNormSpectralModel.parameters", false]], "parameters (gammapy.modeling.models.pointspatialmodel attribute)": [[249, "gammapy.modeling.models.PointSpatialModel.parameters", false]], "parameters (gammapy.modeling.models.powerlaw2spectralmodel attribute)": [[250, "gammapy.modeling.models.PowerLaw2SpectralModel.parameters", false]], "parameters (gammapy.modeling.models.powerlawnormspectralmodel attribute)": [[251, "gammapy.modeling.models.PowerLawNormSpectralModel.parameters", false]], "parameters (gammapy.modeling.models.powerlawspectralmodel attribute)": [[252, "gammapy.modeling.models.PowerLawSpectralModel.parameters", false]], "parameters (gammapy.modeling.models.powerlawtemporalmodel attribute)": [[253, "gammapy.modeling.models.PowerLawTemporalModel.parameters", false]], "parameters (gammapy.modeling.models.prior attribute)": [[254, "gammapy.modeling.models.Prior.parameters", false]], "parameters (gammapy.modeling.models.scalespectralmodel attribute)": [[257, "gammapy.modeling.models.ScaleSpectralModel.parameters", false]], "parameters (gammapy.modeling.models.shell2spatialmodel attribute)": [[258, "gammapy.modeling.models.Shell2SpatialModel.parameters", false]], "parameters (gammapy.modeling.models.shellspatialmodel attribute)": [[259, "gammapy.modeling.models.ShellSpatialModel.parameters", false]], "parameters (gammapy.modeling.models.sinetemporalmodel attribute)": [[260, "gammapy.modeling.models.SineTemporalModel.parameters", false]], "parameters (gammapy.modeling.models.skymodel attribute)": [[261, "gammapy.modeling.models.SkyModel.parameters", false]], "parameters (gammapy.modeling.models.smoothbrokenpowerlawspectralmodel attribute)": [[262, "gammapy.modeling.models.SmoothBrokenPowerLawSpectralModel.parameters", false]], "parameters (gammapy.modeling.models.spatialmodel attribute)": [[263, "gammapy.modeling.models.SpatialModel.parameters", false]], "parameters (gammapy.modeling.models.spectralmodel attribute)": [[264, "gammapy.modeling.models.SpectralModel.parameters", false]], "parameters (gammapy.modeling.models.superexpcutoffpowerlaw3fglspectralmodel attribute)": [[265, "gammapy.modeling.models.SuperExpCutoffPowerLaw3FGLSpectralModel.parameters", false]], "parameters (gammapy.modeling.models.superexpcutoffpowerlaw4fgldr3spectralmodel attribute)": [[266, "gammapy.modeling.models.SuperExpCutoffPowerLaw4FGLDR3SpectralModel.parameters", false]], "parameters (gammapy.modeling.models.superexpcutoffpowerlaw4fglspectralmodel attribute)": [[267, "gammapy.modeling.models.SuperExpCutoffPowerLaw4FGLSpectralModel.parameters", false]], "parameters (gammapy.modeling.models.templatendspatialmodel attribute)": [[269, "gammapy.modeling.models.TemplateNDSpatialModel.parameters", false]], "parameters (gammapy.modeling.models.templatendspectralmodel attribute)": [[270, "gammapy.modeling.models.TemplateNDSpectralModel.parameters", false]], "parameters (gammapy.modeling.models.templatenpredmodel attribute)": [[271, "gammapy.modeling.models.TemplateNPredModel.parameters", false]], "parameters (gammapy.modeling.models.templatephasecurvetemporalmodel attribute)": [[272, "gammapy.modeling.models.TemplatePhaseCurveTemporalModel.parameters", false]], "parameters (gammapy.modeling.models.templatespatialmodel attribute)": [[273, "gammapy.modeling.models.TemplateSpatialModel.parameters", false]], "parameters (gammapy.modeling.models.templatespectralmodel attribute)": [[274, "gammapy.modeling.models.TemplateSpectralModel.parameters", false]], "parameters (gammapy.modeling.models.temporalmodel attribute)": [[275, "gammapy.modeling.models.TemporalModel.parameters", false]], "parameters (gammapy.modeling.optimizeresult attribute)": [[212, "gammapy.modeling.OptimizeResult.parameters", false]], "parameters_unique_names (gammapy.astro.darkmatter.darkmatterannihilationspectralmodel attribute)": [[19, "gammapy.astro.darkmatter.DarkMatterAnnihilationSpectralModel.parameters_unique_names", false]], "parameters_unique_names (gammapy.astro.darkmatter.darkmatterdecayspectralmodel attribute)": [[20, "gammapy.astro.darkmatter.DarkMatterDecaySpectralModel.parameters_unique_names", false]], "parameters_unique_names (gammapy.astro.darkmatter.primaryflux attribute)": [[26, "gammapy.astro.darkmatter.PrimaryFlux.parameters_unique_names", false]], "parameters_unique_names (gammapy.modeling.models.brokenpowerlawspectralmodel attribute)": [[217, "gammapy.modeling.models.BrokenPowerLawSpectralModel.parameters_unique_names", false]], "parameters_unique_names (gammapy.modeling.models.compoundspectralmodel attribute)": [[218, "gammapy.modeling.models.CompoundSpectralModel.parameters_unique_names", false]], "parameters_unique_names (gammapy.modeling.models.constantfluxspatialmodel attribute)": [[219, "gammapy.modeling.models.ConstantFluxSpatialModel.parameters_unique_names", false]], "parameters_unique_names (gammapy.modeling.models.constantspatialmodel attribute)": [[220, "gammapy.modeling.models.ConstantSpatialModel.parameters_unique_names", false]], "parameters_unique_names (gammapy.modeling.models.constantspectralmodel attribute)": [[221, "gammapy.modeling.models.ConstantSpectralModel.parameters_unique_names", false]], "parameters_unique_names (gammapy.modeling.models.constanttemporalmodel attribute)": [[222, "gammapy.modeling.models.ConstantTemporalModel.parameters_unique_names", false]], "parameters_unique_names (gammapy.modeling.models.datasetmodels attribute)": [[223, "gammapy.modeling.models.DatasetModels.parameters_unique_names", false]], "parameters_unique_names (gammapy.modeling.models.diskspatialmodel attribute)": [[224, "gammapy.modeling.models.DiskSpatialModel.parameters_unique_names", false]], "parameters_unique_names (gammapy.modeling.models.eblabsorptionnormspectralmodel attribute)": [[225, "gammapy.modeling.models.EBLAbsorptionNormSpectralModel.parameters_unique_names", false]], "parameters_unique_names (gammapy.modeling.models.expcutoffpowerlaw3fglspectralmodel attribute)": [[227, "gammapy.modeling.models.ExpCutoffPowerLaw3FGLSpectralModel.parameters_unique_names", false]], "parameters_unique_names (gammapy.modeling.models.expcutoffpowerlawnormspectralmodel attribute)": [[228, "gammapy.modeling.models.ExpCutoffPowerLawNormSpectralModel.parameters_unique_names", false]], "parameters_unique_names (gammapy.modeling.models.expcutoffpowerlawspectralmodel attribute)": [[229, "gammapy.modeling.models.ExpCutoffPowerLawSpectralModel.parameters_unique_names", false]], "parameters_unique_names (gammapy.modeling.models.expdecaytemporalmodel attribute)": [[230, "gammapy.modeling.models.ExpDecayTemporalModel.parameters_unique_names", false]], "parameters_unique_names (gammapy.modeling.models.fovbackgroundmodel attribute)": [[231, "gammapy.modeling.models.FoVBackgroundModel.parameters_unique_names", false]], "parameters_unique_names (gammapy.modeling.models.gaussianspatialmodel attribute)": [[232, "gammapy.modeling.models.GaussianSpatialModel.parameters_unique_names", false]], "parameters_unique_names (gammapy.modeling.models.gaussianspectralmodel attribute)": [[233, "gammapy.modeling.models.GaussianSpectralModel.parameters_unique_names", false]], "parameters_unique_names (gammapy.modeling.models.gaussiantemporalmodel attribute)": [[234, "gammapy.modeling.models.GaussianTemporalModel.parameters_unique_names", false]], "parameters_unique_names (gammapy.modeling.models.generalizedgaussianspatialmodel attribute)": [[235, "gammapy.modeling.models.GeneralizedGaussianSpatialModel.parameters_unique_names", false]], "parameters_unique_names (gammapy.modeling.models.generalizedgaussiantemporalmodel attribute)": [[236, "gammapy.modeling.models.GeneralizedGaussianTemporalModel.parameters_unique_names", false]], "parameters_unique_names (gammapy.modeling.models.lightcurvetemplatetemporalmodel attribute)": [[237, "gammapy.modeling.models.LightCurveTemplateTemporalModel.parameters_unique_names", false]], "parameters_unique_names (gammapy.modeling.models.lineartemporalmodel attribute)": [[238, "gammapy.modeling.models.LinearTemporalModel.parameters_unique_names", false]], "parameters_unique_names (gammapy.modeling.models.logparabolanormspectralmodel attribute)": [[239, "gammapy.modeling.models.LogParabolaNormSpectralModel.parameters_unique_names", false]], "parameters_unique_names (gammapy.modeling.models.logparabolaspectralmodel attribute)": [[240, "gammapy.modeling.models.LogParabolaSpectralModel.parameters_unique_names", false]], "parameters_unique_names (gammapy.modeling.models.meyercrabspectralmodel attribute)": [[242, "gammapy.modeling.models.MeyerCrabSpectralModel.parameters_unique_names", false]], "parameters_unique_names (gammapy.modeling.models.modelbase attribute)": [[244, "gammapy.modeling.models.ModelBase.parameters_unique_names", false]], "parameters_unique_names (gammapy.modeling.models.models attribute)": [[245, "gammapy.modeling.models.Models.parameters_unique_names", false]], "parameters_unique_names (gammapy.modeling.models.naimaspectralmodel attribute)": [[246, "gammapy.modeling.models.NaimaSpectralModel.parameters_unique_names", false]], "parameters_unique_names (gammapy.modeling.models.piecewisenormspatialmodel attribute)": [[247, "gammapy.modeling.models.PiecewiseNormSpatialModel.parameters_unique_names", false]], "parameters_unique_names (gammapy.modeling.models.piecewisenormspectralmodel attribute)": [[248, "gammapy.modeling.models.PiecewiseNormSpectralModel.parameters_unique_names", false]], "parameters_unique_names (gammapy.modeling.models.pointspatialmodel attribute)": [[249, "gammapy.modeling.models.PointSpatialModel.parameters_unique_names", false]], "parameters_unique_names (gammapy.modeling.models.powerlaw2spectralmodel attribute)": [[250, "gammapy.modeling.models.PowerLaw2SpectralModel.parameters_unique_names", false]], "parameters_unique_names (gammapy.modeling.models.powerlawnormspectralmodel attribute)": [[251, "gammapy.modeling.models.PowerLawNormSpectralModel.parameters_unique_names", false]], "parameters_unique_names (gammapy.modeling.models.powerlawspectralmodel attribute)": [[252, "gammapy.modeling.models.PowerLawSpectralModel.parameters_unique_names", false]], "parameters_unique_names (gammapy.modeling.models.powerlawtemporalmodel attribute)": [[253, "gammapy.modeling.models.PowerLawTemporalModel.parameters_unique_names", false]], "parameters_unique_names (gammapy.modeling.models.prior attribute)": [[254, "gammapy.modeling.models.Prior.parameters_unique_names", false]], "parameters_unique_names (gammapy.modeling.models.scalespectralmodel attribute)": [[257, "gammapy.modeling.models.ScaleSpectralModel.parameters_unique_names", false]], "parameters_unique_names (gammapy.modeling.models.shell2spatialmodel attribute)": [[258, "gammapy.modeling.models.Shell2SpatialModel.parameters_unique_names", false]], "parameters_unique_names (gammapy.modeling.models.shellspatialmodel attribute)": [[259, "gammapy.modeling.models.ShellSpatialModel.parameters_unique_names", false]], "parameters_unique_names (gammapy.modeling.models.sinetemporalmodel attribute)": [[260, "gammapy.modeling.models.SineTemporalModel.parameters_unique_names", false]], "parameters_unique_names (gammapy.modeling.models.skymodel attribute)": [[261, "gammapy.modeling.models.SkyModel.parameters_unique_names", false]], "parameters_unique_names (gammapy.modeling.models.smoothbrokenpowerlawspectralmodel attribute)": [[262, "gammapy.modeling.models.SmoothBrokenPowerLawSpectralModel.parameters_unique_names", false]], "parameters_unique_names (gammapy.modeling.models.spatialmodel attribute)": [[263, "gammapy.modeling.models.SpatialModel.parameters_unique_names", false]], "parameters_unique_names (gammapy.modeling.models.spectralmodel attribute)": [[264, "gammapy.modeling.models.SpectralModel.parameters_unique_names", false]], "parameters_unique_names (gammapy.modeling.models.superexpcutoffpowerlaw3fglspectralmodel attribute)": [[265, "gammapy.modeling.models.SuperExpCutoffPowerLaw3FGLSpectralModel.parameters_unique_names", false]], "parameters_unique_names (gammapy.modeling.models.superexpcutoffpowerlaw4fgldr3spectralmodel attribute)": [[266, "gammapy.modeling.models.SuperExpCutoffPowerLaw4FGLDR3SpectralModel.parameters_unique_names", false]], "parameters_unique_names (gammapy.modeling.models.superexpcutoffpowerlaw4fglspectralmodel attribute)": [[267, "gammapy.modeling.models.SuperExpCutoffPowerLaw4FGLSpectralModel.parameters_unique_names", false]], "parameters_unique_names (gammapy.modeling.models.templatendspatialmodel attribute)": [[269, "gammapy.modeling.models.TemplateNDSpatialModel.parameters_unique_names", false]], "parameters_unique_names (gammapy.modeling.models.templatendspectralmodel attribute)": [[270, "gammapy.modeling.models.TemplateNDSpectralModel.parameters_unique_names", false]], "parameters_unique_names (gammapy.modeling.models.templatenpredmodel attribute)": [[271, "gammapy.modeling.models.TemplateNPredModel.parameters_unique_names", false]], "parameters_unique_names (gammapy.modeling.models.templatephasecurvetemporalmodel attribute)": [[272, "gammapy.modeling.models.TemplatePhaseCurveTemporalModel.parameters_unique_names", false]], "parameters_unique_names (gammapy.modeling.models.templatespatialmodel attribute)": [[273, "gammapy.modeling.models.TemplateSpatialModel.parameters_unique_names", false]], "parameters_unique_names (gammapy.modeling.models.templatespectralmodel attribute)": [[274, "gammapy.modeling.models.TemplateSpectralModel.parameters_unique_names", false]], "parameters_unique_names (gammapy.modeling.models.temporalmodel attribute)": [[275, "gammapy.modeling.models.TemporalModel.parameters_unique_names", false]], "parametricpsf (class in gammapy.irf)": [[163, "gammapy.irf.ParametricPSF", false]], "parse_file() (gammapy.analysis.analysisconfig class method)": [[16, "gammapy.analysis.AnalysisConfig.parse_file", false]], "parse_file() (gammapy.data.eventlistmetadata class method)": [[84, "gammapy.data.EventListMetaData.parse_file", false]], "parse_file() (gammapy.data.observationmetadata class method)": [[90, "gammapy.data.ObservationMetaData.parse_file", false]], "parse_file() (gammapy.datasets.mapdatasetmetadata class method)": [[104, "gammapy.datasets.MapDatasetMetaData.parse_file", false]], "parse_file() (gammapy.estimators.fluxmetadata class method)": [[123, "gammapy.estimators.FluxMetaData.parse_file", false]], "parse_obj() (gammapy.analysis.analysisconfig class method)": [[16, "gammapy.analysis.AnalysisConfig.parse_obj", false]], "parse_obj() (gammapy.data.eventlistmetadata class method)": [[84, "gammapy.data.EventListMetaData.parse_obj", false]], "parse_obj() (gammapy.data.observationmetadata class method)": [[90, "gammapy.data.ObservationMetaData.parse_obj", false]], "parse_obj() (gammapy.datasets.mapdatasetmetadata class method)": [[104, "gammapy.datasets.MapDatasetMetaData.parse_obj", false]], "parse_obj() (gammapy.estimators.fluxmetadata class method)": [[123, "gammapy.estimators.FluxMetaData.parse_obj", false]], "parse_raw() (gammapy.analysis.analysisconfig class method)": [[16, "gammapy.analysis.AnalysisConfig.parse_raw", false]], "parse_raw() (gammapy.data.eventlistmetadata class method)": [[84, "gammapy.data.EventListMetaData.parse_raw", false]], "parse_raw() (gammapy.data.observationmetadata class method)": [[90, "gammapy.data.ObservationMetaData.parse_raw", false]], "parse_raw() (gammapy.datasets.mapdatasetmetadata class method)": [[104, "gammapy.datasets.MapDatasetMetaData.parse_raw", false]], "parse_raw() (gammapy.estimators.fluxmetadata class method)": [[123, "gammapy.estimators.FluxMetaData.parse_raw", false]], "particle_distribution (gammapy.modeling.models.naimaspectralmodel attribute)": [[246, "gammapy.modeling.models.NaimaSpectralModel.particle_distribution", false]], "path() (gammapy.utils.fits.hdulocation method)": [[312, "gammapy.utils.fits.HDULocation.path", false]], "pdf() (in module gammapy.utils.random)": [[330, "gammapy.utils.random.pdf", false]], "pdf_in_safe_range() (gammapy.irf.edispkernel method)": [[149, "gammapy.irf.EDispKernel.pdf_in_safe_range", false]], "pdf_matrix (gammapy.irf.edispkernel attribute)": [[149, "gammapy.irf.EDispKernel.pdf_matrix", false]], "peak_brightness() (gammapy.catalog.sourcecataloglargescalehgps method)": [[68, "gammapy.catalog.SourceCatalogLargeScaleHGPS.peak_brightness", false]], "peak_brightness_error() (gammapy.catalog.sourcecataloglargescalehgps method)": [[68, "gammapy.catalog.SourceCatalogLargeScaleHGPS.peak_brightness_error", false]], "peak_latitude() (gammapy.catalog.sourcecataloglargescalehgps method)": [[68, "gammapy.catalog.SourceCatalogLargeScaleHGPS.peak_latitude", false]], "peak_latitude_error() (gammapy.catalog.sourcecataloglargescalehgps method)": [[68, "gammapy.catalog.SourceCatalogLargeScaleHGPS.peak_latitude_error", false]], "peek() (gammapy.data.eventlist method)": [[83, "gammapy.data.EventList.peek", false]], "peek() (gammapy.data.observation method)": [[88, "gammapy.data.Observation.peek", false]], "peek() (gammapy.datasets.mapdataset method)": [[102, "gammapy.datasets.MapDataset.peek", false]], "peek() (gammapy.datasets.mapdatasetonoff method)": [[105, "gammapy.datasets.MapDatasetOnOff.peek", false]], "peek() (gammapy.datasets.spectrumdataset method)": [[109, "gammapy.datasets.SpectrumDataset.peek", false]], "peek() (gammapy.datasets.spectrumdatasetonoff method)": [[110, "gammapy.datasets.SpectrumDatasetOnOff.peek", false]], "peek() (gammapy.estimators.imageprofile method)": [[127, "gammapy.estimators.ImageProfile.peek", false]], "peek() (gammapy.irf.background2d method)": [[146, "gammapy.irf.Background2D.peek", false]], "peek() (gammapy.irf.background3d method)": [[147, "gammapy.irf.Background3D.peek", false]], "peek() (gammapy.irf.edispkernel method)": [[149, "gammapy.irf.EDispKernel.peek", false]], "peek() (gammapy.irf.edispkernelmap method)": [[150, "gammapy.irf.EDispKernelMap.peek", false]], "peek() (gammapy.irf.edispmap method)": [[151, "gammapy.irf.EDispMap.peek", false]], "peek() (gammapy.irf.effectiveareatable2d method)": [[152, "gammapy.irf.EffectiveAreaTable2D.peek", false]], "peek() (gammapy.irf.energydependentmultigausspsf method)": [[153, "gammapy.irf.EnergyDependentMultiGaussPSF.peek", false]], "peek() (gammapy.irf.energydispersion2d method)": [[154, "gammapy.irf.EnergyDispersion2D.peek", false]], "peek() (gammapy.irf.parametricpsf method)": [[163, "gammapy.irf.ParametricPSF.peek", false]], "peek() (gammapy.irf.psf3d method)": [[159, "gammapy.irf.PSF3D.peek", false]], "peek() (gammapy.irf.psfkernel method)": [[160, "gammapy.irf.PSFKernel.peek", false]], "peek() (gammapy.irf.psfking method)": [[161, "gammapy.irf.PSFKing.peek", false]], "peek() (gammapy.irf.psfmap method)": [[162, "gammapy.irf.PSFMap.peek", false]], "peek() (gammapy.irf.recopsfmap method)": [[165, "gammapy.irf.RecoPSFMap.peek", false]], "period() (gammapy.astro.source.pulsar method)": [[51, "gammapy.astro.source.Pulsar.period", false]], "period_dot() (gammapy.astro.source.pulsar method)": [[51, "gammapy.astro.source.Pulsar.period_dot", false]], "pformat() (gammapy.data.hduindextable method)": [[87, "gammapy.data.HDUIndexTable.pformat", false]], "pformat() (gammapy.data.observationtable method)": [[91, "gammapy.data.ObservationTable.pformat", false]], "pformat_all() (gammapy.data.hduindextable method)": [[87, "gammapy.data.HDUIndexTable.pformat_all", false]], "pformat_all() (gammapy.data.observationtable method)": [[91, "gammapy.data.ObservationTable.pformat_all", false]], "phasebackgroundmaker (class in gammapy.makers)": [[173, "gammapy.makers.PhaseBackgroundMaker", false]], "phi (gammapy.maps.mapcoord attribute)": [[198, "gammapy.maps.MapCoord.phi", false]], "phi (gammapy.modeling.models.diskspatialmodel attribute)": [[224, "gammapy.modeling.models.DiskSpatialModel.phi", false]], "phi (gammapy.modeling.models.gaussianspatialmodel attribute)": [[232, "gammapy.modeling.models.GaussianSpatialModel.phi", false]], "phi (gammapy.modeling.models.generalizedgaussianspatialmodel attribute)": [[235, "gammapy.modeling.models.GeneralizedGaussianSpatialModel.phi", false]], "phi_0 (gammapy.modeling.models.constantfluxspatialmodel attribute)": [[219, "gammapy.modeling.models.ConstantFluxSpatialModel.phi_0", false]], "phi_0 (gammapy.modeling.models.constantspatialmodel attribute)": [[220, "gammapy.modeling.models.ConstantSpatialModel.phi_0", false]], "phi_0 (gammapy.modeling.models.diskspatialmodel attribute)": [[224, "gammapy.modeling.models.DiskSpatialModel.phi_0", false]], "phi_0 (gammapy.modeling.models.gaussianspatialmodel attribute)": [[232, "gammapy.modeling.models.GaussianSpatialModel.phi_0", false]], "phi_0 (gammapy.modeling.models.generalizedgaussianspatialmodel attribute)": [[235, "gammapy.modeling.models.GeneralizedGaussianSpatialModel.phi_0", false]], "phi_0 (gammapy.modeling.models.piecewisenormspatialmodel attribute)": [[247, "gammapy.modeling.models.PiecewiseNormSpatialModel.phi_0", false]], "phi_0 (gammapy.modeling.models.pointspatialmodel attribute)": [[249, "gammapy.modeling.models.PointSpatialModel.phi_0", false]], "phi_0 (gammapy.modeling.models.shell2spatialmodel attribute)": [[258, "gammapy.modeling.models.Shell2SpatialModel.phi_0", false]], "phi_0 (gammapy.modeling.models.shellspatialmodel attribute)": [[259, "gammapy.modeling.models.ShellSpatialModel.phi_0", false]], "phi_0 (gammapy.modeling.models.spatialmodel attribute)": [[263, "gammapy.modeling.models.SpatialModel.phi_0", false]], "phi_0 (gammapy.modeling.models.templatendspatialmodel attribute)": [[269, "gammapy.modeling.models.TemplateNDSpatialModel.phi_0", false]], "phi_0 (gammapy.modeling.models.templatespatialmodel attribute)": [[273, "gammapy.modeling.models.TemplateSpatialModel.phi_0", false]], "phi_ref (gammapy.modeling.models.templatephasecurvetemporalmodel attribute)": [[272, "gammapy.modeling.models.TemplatePhaseCurveTemporalModel.phi_ref", false]], "piecewisenormspatialmodel (class in gammapy.modeling.models)": [[247, "gammapy.modeling.models.PiecewiseNormSpatialModel", false]], "piecewisenormspectralmodel (class in gammapy.modeling.models)": [[248, "gammapy.modeling.models.PiecewiseNormSpectralModel", false]], "pivot_energy (gammapy.astro.darkmatter.darkmatterannihilationspectralmodel attribute)": [[19, "gammapy.astro.darkmatter.DarkMatterAnnihilationSpectralModel.pivot_energy", false]], "pivot_energy (gammapy.astro.darkmatter.darkmatterdecayspectralmodel attribute)": [[20, "gammapy.astro.darkmatter.DarkMatterDecaySpectralModel.pivot_energy", false]], "pivot_energy (gammapy.astro.darkmatter.primaryflux attribute)": [[26, "gammapy.astro.darkmatter.PrimaryFlux.pivot_energy", false]], "pivot_energy (gammapy.modeling.models.brokenpowerlawspectralmodel attribute)": [[217, "gammapy.modeling.models.BrokenPowerLawSpectralModel.pivot_energy", false]], "pivot_energy (gammapy.modeling.models.compoundspectralmodel attribute)": [[218, "gammapy.modeling.models.CompoundSpectralModel.pivot_energy", false]], "pivot_energy (gammapy.modeling.models.constantspectralmodel attribute)": [[221, "gammapy.modeling.models.ConstantSpectralModel.pivot_energy", false]], "pivot_energy (gammapy.modeling.models.eblabsorptionnormspectralmodel attribute)": [[225, "gammapy.modeling.models.EBLAbsorptionNormSpectralModel.pivot_energy", false]], "pivot_energy (gammapy.modeling.models.expcutoffpowerlaw3fglspectralmodel attribute)": [[227, "gammapy.modeling.models.ExpCutoffPowerLaw3FGLSpectralModel.pivot_energy", false]], "pivot_energy (gammapy.modeling.models.expcutoffpowerlawnormspectralmodel attribute)": [[228, "gammapy.modeling.models.ExpCutoffPowerLawNormSpectralModel.pivot_energy", false]], "pivot_energy (gammapy.modeling.models.expcutoffpowerlawspectralmodel attribute)": [[229, "gammapy.modeling.models.ExpCutoffPowerLawSpectralModel.pivot_energy", false]], "pivot_energy (gammapy.modeling.models.gaussianspectralmodel attribute)": [[233, "gammapy.modeling.models.GaussianSpectralModel.pivot_energy", false]], "pivot_energy (gammapy.modeling.models.logparabolanormspectralmodel attribute)": [[239, "gammapy.modeling.models.LogParabolaNormSpectralModel.pivot_energy", false]], "pivot_energy (gammapy.modeling.models.logparabolaspectralmodel attribute)": [[240, "gammapy.modeling.models.LogParabolaSpectralModel.pivot_energy", false]], "pivot_energy (gammapy.modeling.models.meyercrabspectralmodel attribute)": [[242, "gammapy.modeling.models.MeyerCrabSpectralModel.pivot_energy", false]], "pivot_energy (gammapy.modeling.models.naimaspectralmodel attribute)": [[246, "gammapy.modeling.models.NaimaSpectralModel.pivot_energy", false]], "pivot_energy (gammapy.modeling.models.piecewisenormspectralmodel attribute)": [[248, "gammapy.modeling.models.PiecewiseNormSpectralModel.pivot_energy", false]], "pivot_energy (gammapy.modeling.models.powerlaw2spectralmodel attribute)": [[250, "gammapy.modeling.models.PowerLaw2SpectralModel.pivot_energy", false]], "pivot_energy (gammapy.modeling.models.powerlawnormspectralmodel attribute)": [[251, "gammapy.modeling.models.PowerLawNormSpectralModel.pivot_energy", false]], "pivot_energy (gammapy.modeling.models.powerlawspectralmodel attribute)": [[252, "gammapy.modeling.models.PowerLawSpectralModel.pivot_energy", false]], "pivot_energy (gammapy.modeling.models.scalespectralmodel attribute)": [[257, "gammapy.modeling.models.ScaleSpectralModel.pivot_energy", false]], "pivot_energy (gammapy.modeling.models.smoothbrokenpowerlawspectralmodel attribute)": [[262, "gammapy.modeling.models.SmoothBrokenPowerLawSpectralModel.pivot_energy", false]], "pivot_energy (gammapy.modeling.models.spectralmodel attribute)": [[264, "gammapy.modeling.models.SpectralModel.pivot_energy", false]], "pivot_energy (gammapy.modeling.models.superexpcutoffpowerlaw3fglspectralmodel attribute)": [[265, "gammapy.modeling.models.SuperExpCutoffPowerLaw3FGLSpectralModel.pivot_energy", false]], "pivot_energy (gammapy.modeling.models.superexpcutoffpowerlaw4fgldr3spectralmodel attribute)": [[266, "gammapy.modeling.models.SuperExpCutoffPowerLaw4FGLDR3SpectralModel.pivot_energy", false]], "pivot_energy (gammapy.modeling.models.superexpcutoffpowerlaw4fglspectralmodel attribute)": [[267, "gammapy.modeling.models.SuperExpCutoffPowerLaw4FGLSpectralModel.pivot_energy", false]], "pivot_energy (gammapy.modeling.models.templatendspectralmodel attribute)": [[270, "gammapy.modeling.models.TemplateNDSpectralModel.pivot_energy", false]], "pivot_energy (gammapy.modeling.models.templatespectralmodel attribute)": [[274, "gammapy.modeling.models.TemplateSpectralModel.pivot_energy", false]], "pix_to_coord() (gammapy.maps.geom method)": [[190, "gammapy.maps.Geom.pix_to_coord", false]], "pix_to_coord() (gammapy.maps.hpxgeom method)": [[191, "gammapy.maps.HpxGeom.pix_to_coord", false]], "pix_to_coord() (gammapy.maps.labelmapaxis method)": [[194, "gammapy.maps.LabelMapAxis.pix_to_coord", false]], "pix_to_coord() (gammapy.maps.mapaxes method)": [[196, "gammapy.maps.MapAxes.pix_to_coord", false]], "pix_to_coord() (gammapy.maps.mapaxis method)": [[197, "gammapy.maps.MapAxis.pix_to_coord", false]], "pix_to_coord() (gammapy.maps.regiongeom method)": [[200, "gammapy.maps.RegionGeom.pix_to_coord", false]], "pix_to_coord() (gammapy.maps.timemapaxis method)": [[202, "gammapy.maps.TimeMapAxis.pix_to_coord", false]], "pix_to_coord() (gammapy.maps.wcsgeom method)": [[203, "gammapy.maps.WcsGeom.pix_to_coord", false]], "pix_to_idx() (gammapy.maps.geom method)": [[190, "gammapy.maps.Geom.pix_to_idx", false]], "pix_to_idx() (gammapy.maps.hpxgeom method)": [[191, "gammapy.maps.HpxGeom.pix_to_idx", false]], "pix_to_idx() (gammapy.maps.labelmapaxis method)": [[194, "gammapy.maps.LabelMapAxis.pix_to_idx", false]], "pix_to_idx() (gammapy.maps.mapaxes method)": [[196, "gammapy.maps.MapAxes.pix_to_idx", false]], "pix_to_idx() (gammapy.maps.mapaxis method)": [[197, "gammapy.maps.MapAxis.pix_to_idx", false]], "pix_to_idx() (gammapy.maps.regiongeom method)": [[200, "gammapy.maps.RegionGeom.pix_to_idx", false]], "pix_to_idx() (gammapy.maps.timemapaxis static method)": [[202, "gammapy.maps.TimeMapAxis.pix_to_idx", false]], "pix_to_idx() (gammapy.maps.wcsgeom method)": [[203, "gammapy.maps.WcsGeom.pix_to_idx", false]], "pixel_area (gammapy.maps.wcsgeom attribute)": [[203, "gammapy.maps.WcsGeom.pixel_area", false]], "pixel_scales (gammapy.maps.hpxgeom attribute)": [[191, "gammapy.maps.HpxGeom.pixel_scales", false]], "pixel_scales (gammapy.maps.wcsgeom attribute)": [[203, "gammapy.maps.WcsGeom.pixel_scales", false]], "plot() (gammapy.astro.darkmatter.darkmatterannihilationspectralmodel method)": [[19, "gammapy.astro.darkmatter.DarkMatterAnnihilationSpectralModel.plot", false]], "plot() (gammapy.astro.darkmatter.darkmatterdecayspectralmodel method)": [[20, "gammapy.astro.darkmatter.DarkMatterDecaySpectralModel.plot", false]], "plot() (gammapy.astro.darkmatter.primaryflux method)": [[26, "gammapy.astro.darkmatter.PrimaryFlux.plot", false]], "plot() (gammapy.estimators.fluxpoints method)": [[124, "gammapy.estimators.FluxPoints.plot", false]], "plot() (gammapy.estimators.imageprofile method)": [[127, "gammapy.estimators.ImageProfile.plot", false]], "plot() (gammapy.irf.background2d method)": [[146, "gammapy.irf.Background2D.plot", false]], "plot() (gammapy.irf.effectiveareatable2d method)": [[152, "gammapy.irf.EffectiveAreaTable2D.plot", false]], "plot() (gammapy.maps.hpxndmap method)": [[193, "gammapy.maps.HpxNDMap.plot", false]], "plot() (gammapy.maps.regionndmap method)": [[201, "gammapy.maps.RegionNDMap.plot", false]], "plot() (gammapy.maps.wcsndmap method)": [[205, "gammapy.maps.WcsNDMap.plot", false]], "plot() (gammapy.modeling.models.brokenpowerlawspectralmodel method)": [[217, "gammapy.modeling.models.BrokenPowerLawSpectralModel.plot", false]], "plot() (gammapy.modeling.models.compoundspectralmodel method)": [[218, "gammapy.modeling.models.CompoundSpectralModel.plot", false]], "plot() (gammapy.modeling.models.constantfluxspatialmodel method)": [[219, "gammapy.modeling.models.ConstantFluxSpatialModel.plot", false]], "plot() (gammapy.modeling.models.constantspatialmodel method)": [[220, "gammapy.modeling.models.ConstantSpatialModel.plot", false]], "plot() (gammapy.modeling.models.constantspectralmodel method)": [[221, "gammapy.modeling.models.ConstantSpectralModel.plot", false]], "plot() (gammapy.modeling.models.constanttemporalmodel method)": [[222, "gammapy.modeling.models.ConstantTemporalModel.plot", false]], "plot() (gammapy.modeling.models.diskspatialmodel method)": [[224, "gammapy.modeling.models.DiskSpatialModel.plot", false]], "plot() (gammapy.modeling.models.eblabsorptionnormspectralmodel method)": [[225, "gammapy.modeling.models.EBLAbsorptionNormSpectralModel.plot", false]], "plot() (gammapy.modeling.models.expcutoffpowerlaw3fglspectralmodel method)": [[227, "gammapy.modeling.models.ExpCutoffPowerLaw3FGLSpectralModel.plot", false]], "plot() (gammapy.modeling.models.expcutoffpowerlawnormspectralmodel method)": [[228, "gammapy.modeling.models.ExpCutoffPowerLawNormSpectralModel.plot", false]], "plot() (gammapy.modeling.models.expcutoffpowerlawspectralmodel method)": [[229, "gammapy.modeling.models.ExpCutoffPowerLawSpectralModel.plot", false]], "plot() (gammapy.modeling.models.expdecaytemporalmodel method)": [[230, "gammapy.modeling.models.ExpDecayTemporalModel.plot", false]], "plot() (gammapy.modeling.models.gaussianspatialmodel method)": [[232, "gammapy.modeling.models.GaussianSpatialModel.plot", false]], "plot() (gammapy.modeling.models.gaussianspectralmodel method)": [[233, "gammapy.modeling.models.GaussianSpectralModel.plot", false]], "plot() (gammapy.modeling.models.gaussiantemporalmodel method)": [[234, "gammapy.modeling.models.GaussianTemporalModel.plot", false]], "plot() (gammapy.modeling.models.generalizedgaussianspatialmodel method)": [[235, "gammapy.modeling.models.GeneralizedGaussianSpatialModel.plot", false]], "plot() (gammapy.modeling.models.generalizedgaussiantemporalmodel method)": [[236, "gammapy.modeling.models.GeneralizedGaussianTemporalModel.plot", false]], "plot() (gammapy.modeling.models.lightcurvetemplatetemporalmodel method)": [[237, "gammapy.modeling.models.LightCurveTemplateTemporalModel.plot", false]], "plot() (gammapy.modeling.models.lineartemporalmodel method)": [[238, "gammapy.modeling.models.LinearTemporalModel.plot", false]], "plot() (gammapy.modeling.models.logparabolanormspectralmodel method)": [[239, "gammapy.modeling.models.LogParabolaNormSpectralModel.plot", false]], "plot() (gammapy.modeling.models.logparabolaspectralmodel method)": [[240, "gammapy.modeling.models.LogParabolaSpectralModel.plot", false]], "plot() (gammapy.modeling.models.meyercrabspectralmodel method)": [[242, "gammapy.modeling.models.MeyerCrabSpectralModel.plot", false]], "plot() (gammapy.modeling.models.naimaspectralmodel method)": [[246, "gammapy.modeling.models.NaimaSpectralModel.plot", false]], "plot() (gammapy.modeling.models.piecewisenormspatialmodel method)": [[247, "gammapy.modeling.models.PiecewiseNormSpatialModel.plot", false]], "plot() (gammapy.modeling.models.piecewisenormspectralmodel method)": [[248, "gammapy.modeling.models.PiecewiseNormSpectralModel.plot", false]], "plot() (gammapy.modeling.models.pointspatialmodel method)": [[249, "gammapy.modeling.models.PointSpatialModel.plot", false]], "plot() (gammapy.modeling.models.powerlaw2spectralmodel method)": [[250, "gammapy.modeling.models.PowerLaw2SpectralModel.plot", false]], "plot() (gammapy.modeling.models.powerlawnormspectralmodel method)": [[251, "gammapy.modeling.models.PowerLawNormSpectralModel.plot", false]], "plot() (gammapy.modeling.models.powerlawspectralmodel method)": [[252, "gammapy.modeling.models.PowerLawSpectralModel.plot", false]], "plot() (gammapy.modeling.models.powerlawtemporalmodel method)": [[253, "gammapy.modeling.models.PowerLawTemporalModel.plot", false]], "plot() (gammapy.modeling.models.scalespectralmodel method)": [[257, "gammapy.modeling.models.ScaleSpectralModel.plot", false]], "plot() (gammapy.modeling.models.shell2spatialmodel method)": [[258, "gammapy.modeling.models.Shell2SpatialModel.plot", false]], "plot() (gammapy.modeling.models.shellspatialmodel method)": [[259, "gammapy.modeling.models.ShellSpatialModel.plot", false]], "plot() (gammapy.modeling.models.sinetemporalmodel method)": [[260, "gammapy.modeling.models.SineTemporalModel.plot", false]], "plot() (gammapy.modeling.models.smoothbrokenpowerlawspectralmodel method)": [[262, "gammapy.modeling.models.SmoothBrokenPowerLawSpectralModel.plot", false]], "plot() (gammapy.modeling.models.spatialmodel method)": [[263, "gammapy.modeling.models.SpatialModel.plot", false]], "plot() (gammapy.modeling.models.spectralmodel method)": [[264, "gammapy.modeling.models.SpectralModel.plot", false]], "plot() (gammapy.modeling.models.superexpcutoffpowerlaw3fglspectralmodel method)": [[265, "gammapy.modeling.models.SuperExpCutoffPowerLaw3FGLSpectralModel.plot", false]], "plot() (gammapy.modeling.models.superexpcutoffpowerlaw4fgldr3spectralmodel method)": [[266, "gammapy.modeling.models.SuperExpCutoffPowerLaw4FGLDR3SpectralModel.plot", false]], "plot() (gammapy.modeling.models.superexpcutoffpowerlaw4fglspectralmodel method)": [[267, "gammapy.modeling.models.SuperExpCutoffPowerLaw4FGLSpectralModel.plot", false]], "plot() (gammapy.modeling.models.templatendspatialmodel method)": [[269, "gammapy.modeling.models.TemplateNDSpatialModel.plot", false]], "plot() (gammapy.modeling.models.templatendspectralmodel method)": [[270, "gammapy.modeling.models.TemplateNDSpectralModel.plot", false]], "plot() (gammapy.modeling.models.templatephasecurvetemporalmodel method)": [[272, "gammapy.modeling.models.TemplatePhaseCurveTemporalModel.plot", false]], "plot() (gammapy.modeling.models.templatespatialmodel method)": [[273, "gammapy.modeling.models.TemplateSpatialModel.plot", false]], "plot() (gammapy.modeling.models.templatespectralmodel method)": [[274, "gammapy.modeling.models.TemplateSpectralModel.plot", false]], "plot() (gammapy.modeling.models.temporalmodel method)": [[275, "gammapy.modeling.models.TemporalModel.plot", false]], "plot() (gammapy.visualization.mappanelplotter method)": [[364, "gammapy.visualization.MapPanelPlotter.plot", false]], "plot_at_energy() (gammapy.irf.background2d method)": [[146, "gammapy.irf.Background2D.plot_at_energy", false]], "plot_at_energy() (gammapy.irf.background3d method)": [[147, "gammapy.irf.Background3D.plot_at_energy", false]], "plot_bias() (gammapy.irf.edispkernel method)": [[149, "gammapy.irf.EDispKernel.plot_bias", false]], "plot_bias() (gammapy.irf.energydispersion2d method)": [[154, "gammapy.irf.EnergyDispersion2D.plot_bias", false]], "plot_containment_radius() (gammapy.irf.energydependentmultigausspsf method)": [[153, "gammapy.irf.EnergyDependentMultiGaussPSF.plot_containment_radius", false]], "plot_containment_radius() (gammapy.irf.parametricpsf method)": [[163, "gammapy.irf.ParametricPSF.plot_containment_radius", false]], "plot_containment_radius() (gammapy.irf.psf3d method)": [[159, "gammapy.irf.PSF3D.plot_containment_radius", false]], "plot_containment_radius() (gammapy.irf.psfking method)": [[161, "gammapy.irf.PSFKing.plot_containment_radius", false]], "plot_containment_radius_vs_energy() (gammapy.irf.energydependentmultigausspsf method)": [[153, "gammapy.irf.EnergyDependentMultiGaussPSF.plot_containment_radius_vs_energy", false]], "plot_containment_radius_vs_energy() (gammapy.irf.parametricpsf method)": [[163, "gammapy.irf.ParametricPSF.plot_containment_radius_vs_energy", false]], "plot_containment_radius_vs_energy() (gammapy.irf.psf3d method)": [[159, "gammapy.irf.PSF3D.plot_containment_radius_vs_energy", false]], "plot_containment_radius_vs_energy() (gammapy.irf.psfking method)": [[161, "gammapy.irf.PSFKing.plot_containment_radius_vs_energy", false]], "plot_containment_radius_vs_energy() (gammapy.irf.psfmap method)": [[162, "gammapy.irf.PSFMap.plot_containment_radius_vs_energy", false]], "plot_containment_radius_vs_energy() (gammapy.irf.recopsfmap method)": [[165, "gammapy.irf.RecoPSFMap.plot_containment_radius_vs_energy", false]], "plot_contour_line() (in module gammapy.visualization)": [[369, "gammapy.visualization.plot_contour_line", false]], "plot_correlation() (gammapy.modeling.covariance method)": [[208, "gammapy.modeling.Covariance.plot_correlation", false]], "plot_counts() (gammapy.datasets.spectrumdataset method)": [[109, "gammapy.datasets.SpectrumDataset.plot_counts", false]], "plot_counts() (gammapy.datasets.spectrumdatasetonoff method)": [[110, "gammapy.datasets.SpectrumDatasetOnOff.plot_counts", false]], "plot_distribution() (in module gammapy.visualization)": [[370, "gammapy.visualization.plot_distribution", false]], "plot_energy() (gammapy.data.eventlist method)": [[83, "gammapy.data.EventList.plot_energy", false]], "plot_energy_dependence() (gammapy.irf.background2d method)": [[146, "gammapy.irf.Background2D.plot_energy_dependence", false]], "plot_energy_dependence() (gammapy.irf.effectiveareatable2d method)": [[152, "gammapy.irf.EffectiveAreaTable2D.plot_energy_dependence", false]], "plot_energy_offset() (gammapy.data.eventlist method)": [[83, "gammapy.data.EventList.plot_energy_offset", false]], "plot_err() (gammapy.estimators.imageprofile method)": [[127, "gammapy.estimators.ImageProfile.plot_err", false]], "plot_error() (gammapy.astro.darkmatter.darkmatterannihilationspectralmodel method)": [[19, "gammapy.astro.darkmatter.DarkMatterAnnihilationSpectralModel.plot_error", false]], "plot_error() (gammapy.astro.darkmatter.darkmatterdecayspectralmodel method)": [[20, "gammapy.astro.darkmatter.DarkMatterDecaySpectralModel.plot_error", false]], "plot_error() (gammapy.astro.darkmatter.primaryflux method)": [[26, "gammapy.astro.darkmatter.PrimaryFlux.plot_error", false]], "plot_error() (gammapy.modeling.models.brokenpowerlawspectralmodel method)": [[217, "gammapy.modeling.models.BrokenPowerLawSpectralModel.plot_error", false]], "plot_error() (gammapy.modeling.models.compoundspectralmodel method)": [[218, "gammapy.modeling.models.CompoundSpectralModel.plot_error", false]], "plot_error() (gammapy.modeling.models.constantfluxspatialmodel method)": [[219, "gammapy.modeling.models.ConstantFluxSpatialModel.plot_error", false]], "plot_error() (gammapy.modeling.models.constantspatialmodel method)": [[220, "gammapy.modeling.models.ConstantSpatialModel.plot_error", false]], "plot_error() (gammapy.modeling.models.constantspectralmodel method)": [[221, "gammapy.modeling.models.ConstantSpectralModel.plot_error", false]], "plot_error() (gammapy.modeling.models.diskspatialmodel method)": [[224, "gammapy.modeling.models.DiskSpatialModel.plot_error", false]], "plot_error() (gammapy.modeling.models.eblabsorptionnormspectralmodel method)": [[225, "gammapy.modeling.models.EBLAbsorptionNormSpectralModel.plot_error", false]], "plot_error() (gammapy.modeling.models.expcutoffpowerlaw3fglspectralmodel method)": [[227, "gammapy.modeling.models.ExpCutoffPowerLaw3FGLSpectralModel.plot_error", false]], "plot_error() (gammapy.modeling.models.expcutoffpowerlawnormspectralmodel method)": [[228, "gammapy.modeling.models.ExpCutoffPowerLawNormSpectralModel.plot_error", false]], "plot_error() (gammapy.modeling.models.expcutoffpowerlawspectralmodel method)": [[229, "gammapy.modeling.models.ExpCutoffPowerLawSpectralModel.plot_error", false]], "plot_error() (gammapy.modeling.models.gaussianspatialmodel method)": [[232, "gammapy.modeling.models.GaussianSpatialModel.plot_error", false]], "plot_error() (gammapy.modeling.models.gaussianspectralmodel method)": [[233, "gammapy.modeling.models.GaussianSpectralModel.plot_error", false]], "plot_error() (gammapy.modeling.models.generalizedgaussianspatialmodel method)": [[235, "gammapy.modeling.models.GeneralizedGaussianSpatialModel.plot_error", false]], "plot_error() (gammapy.modeling.models.logparabolanormspectralmodel method)": [[239, "gammapy.modeling.models.LogParabolaNormSpectralModel.plot_error", false]], "plot_error() (gammapy.modeling.models.logparabolaspectralmodel method)": [[240, "gammapy.modeling.models.LogParabolaSpectralModel.plot_error", false]], "plot_error() (gammapy.modeling.models.meyercrabspectralmodel method)": [[242, "gammapy.modeling.models.MeyerCrabSpectralModel.plot_error", false]], "plot_error() (gammapy.modeling.models.naimaspectralmodel method)": [[246, "gammapy.modeling.models.NaimaSpectralModel.plot_error", false]], "plot_error() (gammapy.modeling.models.piecewisenormspatialmodel method)": [[247, "gammapy.modeling.models.PiecewiseNormSpatialModel.plot_error", false]], "plot_error() (gammapy.modeling.models.piecewisenormspectralmodel method)": [[248, "gammapy.modeling.models.PiecewiseNormSpectralModel.plot_error", false]], "plot_error() (gammapy.modeling.models.pointspatialmodel method)": [[249, "gammapy.modeling.models.PointSpatialModel.plot_error", false]], "plot_error() (gammapy.modeling.models.powerlaw2spectralmodel method)": [[250, "gammapy.modeling.models.PowerLaw2SpectralModel.plot_error", false]], "plot_error() (gammapy.modeling.models.powerlawnormspectralmodel method)": [[251, "gammapy.modeling.models.PowerLawNormSpectralModel.plot_error", false]], "plot_error() (gammapy.modeling.models.powerlawspectralmodel method)": [[252, "gammapy.modeling.models.PowerLawSpectralModel.plot_error", false]], "plot_error() (gammapy.modeling.models.scalespectralmodel method)": [[257, "gammapy.modeling.models.ScaleSpectralModel.plot_error", false]], "plot_error() (gammapy.modeling.models.shell2spatialmodel method)": [[258, "gammapy.modeling.models.Shell2SpatialModel.plot_error", false]], "plot_error() (gammapy.modeling.models.shellspatialmodel method)": [[259, "gammapy.modeling.models.ShellSpatialModel.plot_error", false]], "plot_error() (gammapy.modeling.models.smoothbrokenpowerlawspectralmodel method)": [[262, "gammapy.modeling.models.SmoothBrokenPowerLawSpectralModel.plot_error", false]], "plot_error() (gammapy.modeling.models.spatialmodel method)": [[263, "gammapy.modeling.models.SpatialModel.plot_error", false]], "plot_error() (gammapy.modeling.models.spectralmodel method)": [[264, "gammapy.modeling.models.SpectralModel.plot_error", false]], "plot_error() (gammapy.modeling.models.superexpcutoffpowerlaw3fglspectralmodel method)": [[265, "gammapy.modeling.models.SuperExpCutoffPowerLaw3FGLSpectralModel.plot_error", false]], "plot_error() (gammapy.modeling.models.superexpcutoffpowerlaw4fgldr3spectralmodel method)": [[266, "gammapy.modeling.models.SuperExpCutoffPowerLaw4FGLDR3SpectralModel.plot_error", false]], "plot_error() (gammapy.modeling.models.superexpcutoffpowerlaw4fglspectralmodel method)": [[267, "gammapy.modeling.models.SuperExpCutoffPowerLaw4FGLSpectralModel.plot_error", false]], "plot_error() (gammapy.modeling.models.templatendspatialmodel method)": [[269, "gammapy.modeling.models.TemplateNDSpatialModel.plot_error", false]], "plot_error() (gammapy.modeling.models.templatendspectralmodel method)": [[270, "gammapy.modeling.models.TemplateNDSpectralModel.plot_error", false]], "plot_error() (gammapy.modeling.models.templatespatialmodel method)": [[273, "gammapy.modeling.models.TemplateSpatialModel.plot_error", false]], "plot_error() (gammapy.modeling.models.templatespectralmodel method)": [[274, "gammapy.modeling.models.TemplateSpectralModel.plot_error", false]], "plot_excess() (gammapy.datasets.spectrumdataset method)": [[109, "gammapy.datasets.SpectrumDataset.plot_excess", false]], "plot_excess() (gammapy.datasets.spectrumdatasetonoff method)": [[110, "gammapy.datasets.SpectrumDatasetOnOff.plot_excess", false]], "plot_fit() (gammapy.datasets.fluxpointsdataset method)": [[101, "gammapy.datasets.FluxPointsDataset.plot_fit", false]], "plot_fit() (gammapy.datasets.spectrumdataset method)": [[109, "gammapy.datasets.SpectrumDataset.plot_fit", false]], "plot_fit() (gammapy.datasets.spectrumdatasetonoff method)": [[110, "gammapy.datasets.SpectrumDatasetOnOff.plot_fit", false]], "plot_grid() (gammapy.maps.hpxmap method)": [[192, "gammapy.maps.HpxMap.plot_grid", false]], "plot_grid() (gammapy.maps.hpxndmap method)": [[193, "gammapy.maps.HpxNDMap.plot_grid", false]], "plot_grid() (gammapy.maps.map method)": [[195, "gammapy.maps.Map.plot_grid", false]], "plot_grid() (gammapy.maps.regionndmap method)": [[201, "gammapy.maps.RegionNDMap.plot_grid", false]], "plot_grid() (gammapy.maps.wcsmap method)": [[204, "gammapy.maps.WcsMap.plot_grid", false]], "plot_grid() (gammapy.maps.wcsndmap method)": [[205, "gammapy.maps.WcsNDMap.plot_grid", false]], "plot_grid() (gammapy.modeling.models.constantfluxspatialmodel method)": [[219, "gammapy.modeling.models.ConstantFluxSpatialModel.plot_grid", false]], "plot_grid() (gammapy.modeling.models.constantspatialmodel method)": [[220, "gammapy.modeling.models.ConstantSpatialModel.plot_grid", false]], "plot_grid() (gammapy.modeling.models.diskspatialmodel method)": [[224, "gammapy.modeling.models.DiskSpatialModel.plot_grid", false]], "plot_grid() (gammapy.modeling.models.gaussianspatialmodel method)": [[232, "gammapy.modeling.models.GaussianSpatialModel.plot_grid", false]], "plot_grid() (gammapy.modeling.models.generalizedgaussianspatialmodel method)": [[235, "gammapy.modeling.models.GeneralizedGaussianSpatialModel.plot_grid", false]], "plot_grid() (gammapy.modeling.models.piecewisenormspatialmodel method)": [[247, "gammapy.modeling.models.PiecewiseNormSpatialModel.plot_grid", false]], "plot_grid() (gammapy.modeling.models.pointspatialmodel method)": [[249, "gammapy.modeling.models.PointSpatialModel.plot_grid", false]], "plot_grid() (gammapy.modeling.models.shell2spatialmodel method)": [[258, "gammapy.modeling.models.Shell2SpatialModel.plot_grid", false]], "plot_grid() (gammapy.modeling.models.shellspatialmodel method)": [[259, "gammapy.modeling.models.ShellSpatialModel.plot_grid", false]], "plot_grid() (gammapy.modeling.models.spatialmodel method)": [[263, "gammapy.modeling.models.SpatialModel.plot_grid", false]], "plot_grid() (gammapy.modeling.models.templatendspatialmodel method)": [[269, "gammapy.modeling.models.TemplateNDSpatialModel.plot_grid", false]], "plot_grid() (gammapy.modeling.models.templatespatialmodel method)": [[273, "gammapy.modeling.models.TemplateSpatialModel.plot_grid", false]], "plot_heatmap() (in module gammapy.visualization)": [[371, "gammapy.visualization.plot_heatmap", false]], "plot_hist() (gammapy.maps.regionndmap method)": [[201, "gammapy.maps.RegionNDMap.plot_hist", false]], "plot_image() (gammapy.data.eventlist method)": [[83, "gammapy.data.EventList.plot_image", false]], "plot_interactive() (gammapy.maps.hpxmap method)": [[192, "gammapy.maps.HpxMap.plot_interactive", false]], "plot_interactive() (gammapy.maps.hpxndmap method)": [[193, "gammapy.maps.HpxNDMap.plot_interactive", false]], "plot_interactive() (gammapy.maps.map method)": [[195, "gammapy.maps.Map.plot_interactive", false]], "plot_interactive() (gammapy.maps.regionndmap method)": [[201, "gammapy.maps.RegionNDMap.plot_interactive", false]], "plot_interactive() (gammapy.maps.wcsmap method)": [[204, "gammapy.maps.WcsMap.plot_interactive", false]], "plot_interactive() (gammapy.maps.wcsndmap method)": [[205, "gammapy.maps.WcsNDMap.plot_interactive", false]], "plot_interactive() (gammapy.modeling.models.constantfluxspatialmodel method)": [[219, "gammapy.modeling.models.ConstantFluxSpatialModel.plot_interactive", false]], "plot_interactive() (gammapy.modeling.models.constantspatialmodel method)": [[220, "gammapy.modeling.models.ConstantSpatialModel.plot_interactive", false]], "plot_interactive() (gammapy.modeling.models.diskspatialmodel method)": [[224, "gammapy.modeling.models.DiskSpatialModel.plot_interactive", false]], "plot_interactive() (gammapy.modeling.models.gaussianspatialmodel method)": [[232, "gammapy.modeling.models.GaussianSpatialModel.plot_interactive", false]], "plot_interactive() (gammapy.modeling.models.generalizedgaussianspatialmodel method)": [[235, "gammapy.modeling.models.GeneralizedGaussianSpatialModel.plot_interactive", false]], "plot_interactive() (gammapy.modeling.models.piecewisenormspatialmodel method)": [[247, "gammapy.modeling.models.PiecewiseNormSpatialModel.plot_interactive", false]], "plot_interactive() (gammapy.modeling.models.pointspatialmodel method)": [[249, "gammapy.modeling.models.PointSpatialModel.plot_interactive", false]], "plot_interactive() (gammapy.modeling.models.shell2spatialmodel method)": [[258, "gammapy.modeling.models.Shell2SpatialModel.plot_interactive", false]], "plot_interactive() (gammapy.modeling.models.shellspatialmodel method)": [[259, "gammapy.modeling.models.ShellSpatialModel.plot_interactive", false]], "plot_interactive() (gammapy.modeling.models.spatialmodel method)": [[263, "gammapy.modeling.models.SpatialModel.plot_interactive", false]], "plot_interactive() (gammapy.modeling.models.templatendspatialmodel method)": [[269, "gammapy.modeling.models.TemplateNDSpatialModel.plot_interactive", false]], "plot_interactive() (gammapy.modeling.models.templatespatialmodel method)": [[273, "gammapy.modeling.models.TemplateSpatialModel.plot_interactive", false]], "plot_kernel() (gammapy.irf.psfkernel method)": [[160, "gammapy.irf.PSFKernel.plot_kernel", false]], "plot_map_rgb() (in module gammapy.visualization)": [[372, "gammapy.visualization.plot_map_rgb", false]], "plot_mask() (gammapy.maps.hpxndmap method)": [[193, "gammapy.maps.HpxNDMap.plot_mask", false]], "plot_mask() (gammapy.maps.regionndmap method)": [[201, "gammapy.maps.RegionNDMap.plot_mask", false]], "plot_mask() (gammapy.maps.wcsndmap method)": [[205, "gammapy.maps.WcsNDMap.plot_mask", false]], "plot_masks() (gammapy.datasets.spectrumdataset method)": [[109, "gammapy.datasets.SpectrumDataset.plot_masks", false]], "plot_masks() (gammapy.datasets.spectrumdatasetonoff method)": [[110, "gammapy.datasets.SpectrumDatasetOnOff.plot_masks", false]], "plot_matrix() (gammapy.irf.edispkernel method)": [[149, "gammapy.irf.EDispKernel.plot_matrix", false]], "plot_migration() (gammapy.irf.energydispersion2d method)": [[154, "gammapy.irf.EnergyDispersion2D.plot_migration", false]], "plot_npred_signal() (in module gammapy.visualization)": [[373, "gammapy.visualization.plot_npred_signal", false]], "plot_offset2_distribution() (gammapy.data.eventlist method)": [[83, "gammapy.data.EventList.plot_offset2_distribution", false]], "plot_offset_dependence() (gammapy.irf.background2d method)": [[146, "gammapy.irf.Background2D.plot_offset_dependence", false]], "plot_offset_dependence() (gammapy.irf.effectiveareatable2d method)": [[152, "gammapy.irf.EffectiveAreaTable2D.plot_offset_dependence", false]], "plot_panel() (gammapy.visualization.mappanelplotter method)": [[364, "gammapy.visualization.MapPanelPlotter.plot_panel", false]], "plot_phasogram() (gammapy.modeling.models.templatephasecurvetemporalmodel method)": [[272, "gammapy.modeling.models.TemplatePhaseCurveTemporalModel.plot_phasogram", false]], "plot_position_error() (gammapy.modeling.models.constantfluxspatialmodel method)": [[219, "gammapy.modeling.models.ConstantFluxSpatialModel.plot_position_error", false]], "plot_position_error() (gammapy.modeling.models.constantspatialmodel method)": [[220, "gammapy.modeling.models.ConstantSpatialModel.plot_position_error", false]], "plot_position_error() (gammapy.modeling.models.diskspatialmodel method)": [[224, "gammapy.modeling.models.DiskSpatialModel.plot_position_error", false]], "plot_position_error() (gammapy.modeling.models.gaussianspatialmodel method)": [[232, "gammapy.modeling.models.GaussianSpatialModel.plot_position_error", false]], "plot_position_error() (gammapy.modeling.models.generalizedgaussianspatialmodel method)": [[235, "gammapy.modeling.models.GeneralizedGaussianSpatialModel.plot_position_error", false]], "plot_position_error() (gammapy.modeling.models.piecewisenormspatialmodel method)": [[247, "gammapy.modeling.models.PiecewiseNormSpatialModel.plot_position_error", false]], "plot_position_error() (gammapy.modeling.models.pointspatialmodel method)": [[249, "gammapy.modeling.models.PointSpatialModel.plot_position_error", false]], "plot_position_error() (gammapy.modeling.models.shell2spatialmodel method)": [[258, "gammapy.modeling.models.Shell2SpatialModel.plot_position_error", false]], "plot_position_error() (gammapy.modeling.models.shellspatialmodel method)": [[259, "gammapy.modeling.models.ShellSpatialModel.plot_position_error", false]], "plot_position_error() (gammapy.modeling.models.spatialmodel method)": [[263, "gammapy.modeling.models.SpatialModel.plot_position_error", false]], "plot_position_error() (gammapy.modeling.models.templatendspatialmodel method)": [[269, "gammapy.modeling.models.TemplateNDSpatialModel.plot_position_error", false]], "plot_position_error() (gammapy.modeling.models.templatespatialmodel method)": [[273, "gammapy.modeling.models.TemplateSpatialModel.plot_position_error", false]], "plot_positions() (gammapy.modeling.models.datasetmodels method)": [[223, "gammapy.modeling.models.DatasetModels.plot_positions", false]], "plot_positions() (gammapy.modeling.models.models method)": [[245, "gammapy.modeling.models.Models.plot_positions", false]], "plot_psf_vs_rad() (gammapy.irf.energydependentmultigausspsf method)": [[153, "gammapy.irf.EnergyDependentMultiGaussPSF.plot_psf_vs_rad", false]], "plot_psf_vs_rad() (gammapy.irf.parametricpsf method)": [[163, "gammapy.irf.ParametricPSF.plot_psf_vs_rad", false]], "plot_psf_vs_rad() (gammapy.irf.psf3d method)": [[159, "gammapy.irf.PSF3D.plot_psf_vs_rad", false]], "plot_psf_vs_rad() (gammapy.irf.psfking method)": [[161, "gammapy.irf.PSFKing.plot_psf_vs_rad", false]], "plot_psf_vs_rad() (gammapy.irf.psfmap method)": [[162, "gammapy.irf.PSFMap.plot_psf_vs_rad", false]], "plot_psf_vs_rad() (gammapy.irf.recopsfmap method)": [[165, "gammapy.irf.RecoPSFMap.plot_psf_vs_rad", false]], "plot_rad_max_vs_energy() (gammapy.irf.radmax2d method)": [[164, "gammapy.irf.RadMax2D.plot_rad_max_vs_energy", false]], "plot_region() (gammapy.maps.regiongeom method)": [[200, "gammapy.maps.RegionGeom.plot_region", false]], "plot_region() (gammapy.maps.regionndmap method)": [[201, "gammapy.maps.RegionNDMap.plot_region", false]], "plot_regions() (gammapy.modeling.models.datasetmodels method)": [[223, "gammapy.modeling.models.DatasetModels.plot_regions", false]], "plot_regions() (gammapy.modeling.models.models method)": [[245, "gammapy.modeling.models.Models.plot_regions", false]], "plot_residuals() (gammapy.datasets.fluxpointsdataset method)": [[101, "gammapy.datasets.FluxPointsDataset.plot_residuals", false]], "plot_residuals() (gammapy.datasets.mapdataset method)": [[102, "gammapy.datasets.MapDataset.plot_residuals", false]], "plot_residuals() (gammapy.datasets.mapdatasetonoff method)": [[105, "gammapy.datasets.MapDatasetOnOff.plot_residuals", false]], "plot_residuals() (gammapy.datasets.spectrumdataset method)": [[109, "gammapy.datasets.SpectrumDataset.plot_residuals", false]], "plot_residuals() (gammapy.datasets.spectrumdatasetonoff method)": [[110, "gammapy.datasets.SpectrumDatasetOnOff.plot_residuals", false]], "plot_residuals_spatial() (gammapy.datasets.mapdataset method)": [[102, "gammapy.datasets.MapDataset.plot_residuals_spatial", false]], "plot_residuals_spatial() (gammapy.datasets.mapdatasetonoff method)": [[105, "gammapy.datasets.MapDatasetOnOff.plot_residuals_spatial", false]], "plot_residuals_spatial() (gammapy.datasets.spectrumdataset method)": [[109, "gammapy.datasets.SpectrumDataset.plot_residuals_spatial", false]], "plot_residuals_spatial() (gammapy.datasets.spectrumdatasetonoff method)": [[110, "gammapy.datasets.SpectrumDatasetOnOff.plot_residuals_spatial", false]], "plot_residuals_spectral() (gammapy.datasets.mapdataset method)": [[102, "gammapy.datasets.MapDataset.plot_residuals_spectral", false]], "plot_residuals_spectral() (gammapy.datasets.mapdatasetonoff method)": [[105, "gammapy.datasets.MapDatasetOnOff.plot_residuals_spectral", false]], "plot_residuals_spectral() (gammapy.datasets.spectrumdataset method)": [[109, "gammapy.datasets.SpectrumDataset.plot_residuals_spectral", false]], "plot_residuals_spectral() (gammapy.datasets.spectrumdatasetonoff method)": [[110, "gammapy.datasets.SpectrumDatasetOnOff.plot_residuals_spectral", false]], "plot_spectrum() (gammapy.datasets.fluxpointsdataset method)": [[101, "gammapy.datasets.FluxPointsDataset.plot_spectrum", false]], "plot_spectrum() (gammapy.irf.background2d method)": [[146, "gammapy.irf.Background2D.plot_spectrum", false]], "plot_spectrum_datasets_off_regions() (in module gammapy.visualization)": [[374, "gammapy.visualization.plot_spectrum_datasets_off_regions", false]], "plot_theta_squared_table() (in module gammapy.visualization)": [[375, "gammapy.visualization.plot_theta_squared_table", false]], "plot_time() (gammapy.data.eventlist method)": [[83, "gammapy.data.EventList.plot_time", false]], "plot_ts_profiles() (gammapy.estimators.fluxpoints method)": [[124, "gammapy.estimators.FluxPoints.plot_ts_profiles", false]], "pointing (gammapy.data.observation attribute)": [[88, "gammapy.data.Observation.pointing", false]], "pointing (gammapy.data.pointingmode attribute)": [[95, "gammapy.data.PointingMode.POINTING", false]], "pointing_galactic (gammapy.data.observationtable attribute)": [[91, "gammapy.data.ObservationTable.pointing_galactic", false]], "pointing_radec (gammapy.data.eventlist attribute)": [[83, "gammapy.data.EventList.pointing_radec", false]], "pointing_radec (gammapy.data.observationtable attribute)": [[91, "gammapy.data.ObservationTable.pointing_radec", false]], "pointinginfo (class in gammapy.data)": [[94, "gammapy.data.PointingInfo", false]], "pointingmode (class in gammapy.data)": [[95, "gammapy.data.PointingMode", false]], "pointspatialmodel (class in gammapy.modeling.models)": [[249, "gammapy.modeling.models.PointSpatialModel", false]], "polar() (in module gammapy.utils.coordinates)": [[309, "gammapy.utils.coordinates.polar", false]], "pool_kwargs_default (in module gammapy.utils.parallel)": [[323, "gammapy.utils.parallel.POOL_KWARGS_DEFAULT", false]], "pop() (gammapy.data.observations method)": [[92, "gammapy.data.Observations.pop", false]], "pop() (gammapy.datasets.datasets method)": [[100, "gammapy.datasets.Datasets.pop", false]], "pop() (gammapy.maps.maps method)": [[199, "gammapy.maps.Maps.pop", false]], "pop() (gammapy.modeling.models.models method)": [[245, "gammapy.modeling.models.Models.pop", false]], "popitem() (gammapy.maps.maps method)": [[199, "gammapy.maps.Maps.popitem", false]], "position (gammapy.catalog.sourcecatalogobject attribute)": [[69, "gammapy.catalog.SourceCatalogObject.position", false]], "position (gammapy.catalog.sourcecatalogobject1lhaaso attribute)": [[70, "gammapy.catalog.SourceCatalogObject1LHAASO.position", false]], "position (gammapy.catalog.sourcecatalogobject2fhl attribute)": [[71, "gammapy.catalog.SourceCatalogObject2FHL.position", false]], "position (gammapy.catalog.sourcecatalogobject2hwc attribute)": [[72, "gammapy.catalog.SourceCatalogObject2HWC.position", false]], "position (gammapy.catalog.sourcecatalogobject2pc attribute)": [[73, "gammapy.catalog.SourceCatalogObject2PC.position", false]], "position (gammapy.catalog.sourcecatalogobject3fgl attribute)": [[74, "gammapy.catalog.SourceCatalogObject3FGL.position", false]], "position (gammapy.catalog.sourcecatalogobject3fhl attribute)": [[75, "gammapy.catalog.SourceCatalogObject3FHL.position", false]], "position (gammapy.catalog.sourcecatalogobject3hwc attribute)": [[76, "gammapy.catalog.SourceCatalogObject3HWC.position", false]], "position (gammapy.catalog.sourcecatalogobject3pc attribute)": [[77, "gammapy.catalog.SourceCatalogObject3PC.position", false]], "position (gammapy.catalog.sourcecatalogobject4fgl attribute)": [[78, "gammapy.catalog.SourceCatalogObject4FGL.position", false]], "position (gammapy.catalog.sourcecatalogobjectgammacat attribute)": [[79, "gammapy.catalog.SourceCatalogObjectGammaCat.position", false]], "position (gammapy.catalog.sourcecatalogobjecthgps attribute)": [[80, "gammapy.catalog.SourceCatalogObjectHGPS.position", false]], "position (gammapy.catalog.sourcecatalogobjecthgpscomponent attribute)": [[81, "gammapy.catalog.SourceCatalogObjectHGPSComponent.position", false]], "position (gammapy.modeling.models.constantfluxspatialmodel attribute)": [[219, "gammapy.modeling.models.ConstantFluxSpatialModel.position", false]], "position (gammapy.modeling.models.constantspatialmodel attribute)": [[220, "gammapy.modeling.models.ConstantSpatialModel.position", false]], "position (gammapy.modeling.models.diskspatialmodel attribute)": [[224, "gammapy.modeling.models.DiskSpatialModel.position", false]], "position (gammapy.modeling.models.gaussianspatialmodel attribute)": [[232, "gammapy.modeling.models.GaussianSpatialModel.position", false]], "position (gammapy.modeling.models.generalizedgaussianspatialmodel attribute)": [[235, "gammapy.modeling.models.GeneralizedGaussianSpatialModel.position", false]], "position (gammapy.modeling.models.piecewisenormspatialmodel attribute)": [[247, "gammapy.modeling.models.PiecewiseNormSpatialModel.position", false]], "position (gammapy.modeling.models.pointspatialmodel attribute)": [[249, "gammapy.modeling.models.PointSpatialModel.position", false]], "position (gammapy.modeling.models.shell2spatialmodel attribute)": [[258, "gammapy.modeling.models.Shell2SpatialModel.position", false]], "position (gammapy.modeling.models.shellspatialmodel attribute)": [[259, "gammapy.modeling.models.ShellSpatialModel.position", false]], "position (gammapy.modeling.models.skymodel attribute)": [[261, "gammapy.modeling.models.SkyModel.position", false]], "position (gammapy.modeling.models.spatialmodel attribute)": [[263, "gammapy.modeling.models.SpatialModel.position", false]], "position (gammapy.modeling.models.templatendspatialmodel attribute)": [[269, "gammapy.modeling.models.TemplateNDSpatialModel.position", false]], "position (gammapy.modeling.models.templatenpredmodel attribute)": [[271, "gammapy.modeling.models.TemplateNPredModel.position", false]], "position (gammapy.modeling.models.templatespatialmodel attribute)": [[273, "gammapy.modeling.models.TemplateSpatialModel.position", false]], "position_error (gammapy.modeling.models.constantfluxspatialmodel attribute)": [[219, "gammapy.modeling.models.ConstantFluxSpatialModel.position_error", false]], "position_error (gammapy.modeling.models.constantspatialmodel attribute)": [[220, "gammapy.modeling.models.ConstantSpatialModel.position_error", false]], "position_error (gammapy.modeling.models.diskspatialmodel attribute)": [[224, "gammapy.modeling.models.DiskSpatialModel.position_error", false]], "position_error (gammapy.modeling.models.gaussianspatialmodel attribute)": [[232, "gammapy.modeling.models.GaussianSpatialModel.position_error", false]], "position_error (gammapy.modeling.models.generalizedgaussianspatialmodel attribute)": [[235, "gammapy.modeling.models.GeneralizedGaussianSpatialModel.position_error", false]], "position_error (gammapy.modeling.models.piecewisenormspatialmodel attribute)": [[247, "gammapy.modeling.models.PiecewiseNormSpatialModel.position_error", false]], "position_error (gammapy.modeling.models.pointspatialmodel attribute)": [[249, "gammapy.modeling.models.PointSpatialModel.position_error", false]], "position_error (gammapy.modeling.models.shell2spatialmodel attribute)": [[258, "gammapy.modeling.models.Shell2SpatialModel.position_error", false]], "position_error (gammapy.modeling.models.shellspatialmodel attribute)": [[259, "gammapy.modeling.models.ShellSpatialModel.position_error", false]], "position_error (gammapy.modeling.models.spatialmodel attribute)": [[263, "gammapy.modeling.models.SpatialModel.position_error", false]], "position_error (gammapy.modeling.models.templatendspatialmodel attribute)": [[269, "gammapy.modeling.models.TemplateNDSpatialModel.position_error", false]], "position_error (gammapy.modeling.models.templatespatialmodel attribute)": [[273, "gammapy.modeling.models.TemplateSpatialModel.position_error", false]], "position_lonlat (gammapy.modeling.models.constantfluxspatialmodel attribute)": [[219, "gammapy.modeling.models.ConstantFluxSpatialModel.position_lonlat", false]], "position_lonlat (gammapy.modeling.models.constantspatialmodel attribute)": [[220, "gammapy.modeling.models.ConstantSpatialModel.position_lonlat", false]], "position_lonlat (gammapy.modeling.models.diskspatialmodel attribute)": [[224, "gammapy.modeling.models.DiskSpatialModel.position_lonlat", false]], "position_lonlat (gammapy.modeling.models.gaussianspatialmodel attribute)": [[232, "gammapy.modeling.models.GaussianSpatialModel.position_lonlat", false]], "position_lonlat (gammapy.modeling.models.generalizedgaussianspatialmodel attribute)": [[235, "gammapy.modeling.models.GeneralizedGaussianSpatialModel.position_lonlat", false]], "position_lonlat (gammapy.modeling.models.piecewisenormspatialmodel attribute)": [[247, "gammapy.modeling.models.PiecewiseNormSpatialModel.position_lonlat", false]], "position_lonlat (gammapy.modeling.models.pointspatialmodel attribute)": [[249, "gammapy.modeling.models.PointSpatialModel.position_lonlat", false]], "position_lonlat (gammapy.modeling.models.shell2spatialmodel attribute)": [[258, "gammapy.modeling.models.Shell2SpatialModel.position_lonlat", false]], "position_lonlat (gammapy.modeling.models.shellspatialmodel attribute)": [[259, "gammapy.modeling.models.ShellSpatialModel.position_lonlat", false]], "position_lonlat (gammapy.modeling.models.skymodel attribute)": [[261, "gammapy.modeling.models.SkyModel.position_lonlat", false]], "position_lonlat (gammapy.modeling.models.spatialmodel attribute)": [[263, "gammapy.modeling.models.SpatialModel.position_lonlat", false]], "position_lonlat (gammapy.modeling.models.templatendspatialmodel attribute)": [[269, "gammapy.modeling.models.TemplateNDSpatialModel.position_lonlat", false]], "position_lonlat (gammapy.modeling.models.templatespatialmodel attribute)": [[273, "gammapy.modeling.models.TemplateSpatialModel.position_lonlat", false]], "positions (gammapy.catalog.sourcecatalog attribute)": [[56, "gammapy.catalog.SourceCatalog.positions", false]], "positions (gammapy.catalog.sourcecatalog1lhaaso attribute)": [[57, "gammapy.catalog.SourceCatalog1LHAASO.positions", false]], "positions (gammapy.catalog.sourcecatalog2fhl attribute)": [[58, "gammapy.catalog.SourceCatalog2FHL.positions", false]], "positions (gammapy.catalog.sourcecatalog2hwc attribute)": [[59, "gammapy.catalog.SourceCatalog2HWC.positions", false]], "positions (gammapy.catalog.sourcecatalog2pc attribute)": [[60, "gammapy.catalog.SourceCatalog2PC.positions", false]], "positions (gammapy.catalog.sourcecatalog3fgl attribute)": [[61, "gammapy.catalog.SourceCatalog3FGL.positions", false]], "positions (gammapy.catalog.sourcecatalog3fhl attribute)": [[62, "gammapy.catalog.SourceCatalog3FHL.positions", false]], "positions (gammapy.catalog.sourcecatalog3hwc attribute)": [[63, "gammapy.catalog.SourceCatalog3HWC.positions", false]], "positions (gammapy.catalog.sourcecatalog3pc attribute)": [[64, "gammapy.catalog.SourceCatalog3PC.positions", false]], "positions (gammapy.catalog.sourcecatalog4fgl attribute)": [[65, "gammapy.catalog.SourceCatalog4FGL.positions", false]], "positions (gammapy.catalog.sourcecataloggammacat attribute)": [[66, "gammapy.catalog.SourceCatalogGammaCat.positions", false]], "positions (gammapy.catalog.sourcecataloghgps attribute)": [[67, "gammapy.catalog.SourceCatalogHGPS.positions", false]], "positions (gammapy.modeling.models.datasetmodels attribute)": [[223, "gammapy.modeling.models.DatasetModels.positions", false]], "positions (gammapy.modeling.models.models attribute)": [[245, "gammapy.modeling.models.Models.positions", false]], "powerlaw2spectralmodel (class in gammapy.modeling.models)": [[250, "gammapy.modeling.models.PowerLaw2SpectralModel", false]], "powerlawnormspectralmodel (class in gammapy.modeling.models)": [[251, "gammapy.modeling.models.PowerLawNormSpectralModel", false]], "powerlawspectralmodel (class in gammapy.modeling.models)": [[252, "gammapy.modeling.models.PowerLawSpectralModel", false]], "powerlawtemporalmodel (class in gammapy.modeling.models)": [[253, "gammapy.modeling.models.PowerLawTemporalModel", false]], "pprint() (gammapy.data.hduindextable method)": [[87, "gammapy.data.HDUIndexTable.pprint", false]], "pprint() (gammapy.data.observationtable method)": [[91, "gammapy.data.ObservationTable.pprint", false]], "pprint_all() (gammapy.data.hduindextable method)": [[87, "gammapy.data.HDUIndexTable.pprint_all", false]], "pprint_all() (gammapy.data.observationtable method)": [[91, "gammapy.data.ObservationTable.pprint_all", false]], "pprint_exclude_names (gammapy.data.hduindextable attribute)": [[87, "gammapy.data.HDUIndexTable.pprint_exclude_names", false]], "pprint_exclude_names (gammapy.data.observationtable attribute)": [[91, "gammapy.data.ObservationTable.pprint_exclude_names", false]], "pprint_include_names (gammapy.data.hduindextable attribute)": [[87, "gammapy.data.HDUIndexTable.pprint_include_names", false]], "pprint_include_names (gammapy.data.observationtable attribute)": [[91, "gammapy.data.ObservationTable.pprint_include_names", false]], "prepare_inputs() (gammapy.astro.population.casebattacharya1998 method)": [[28, "gammapy.astro.population.CaseBattacharya1998.prepare_inputs", false]], "prepare_inputs() (gammapy.astro.population.exponential method)": [[29, "gammapy.astro.population.Exponential.prepare_inputs", false]], "prepare_inputs() (gammapy.astro.population.faucherkaspi2006 method)": [[30, "gammapy.astro.population.FaucherKaspi2006.prepare_inputs", false]], "prepare_inputs() (gammapy.astro.population.faucherkaspi2006velocitybimodal method)": [[31, "gammapy.astro.population.FaucherKaspi2006VelocityBimodal.prepare_inputs", false]], "prepare_inputs() (gammapy.astro.population.faucherkaspi2006velocitymaxwellian method)": [[32, "gammapy.astro.population.FaucherKaspi2006VelocityMaxwellian.prepare_inputs", false]], "prepare_inputs() (gammapy.astro.population.lorimer2006 method)": [[35, "gammapy.astro.population.Lorimer2006.prepare_inputs", false]], "prepare_inputs() (gammapy.astro.population.paczynski1990 method)": [[36, "gammapy.astro.population.Paczynski1990.prepare_inputs", false]], "prepare_inputs() (gammapy.astro.population.paczynski1990velocity method)": [[37, "gammapy.astro.population.Paczynski1990Velocity.prepare_inputs", false]], "prepare_inputs() (gammapy.astro.population.yusifovkucuk2004 method)": [[39, "gammapy.astro.population.YusifovKucuk2004.prepare_inputs", false]], "prepare_inputs() (gammapy.astro.population.yusifovkucuk2004b method)": [[40, "gammapy.astro.population.YusifovKucuk2004B.prepare_inputs", false]], "prepare_outputs() (gammapy.astro.population.casebattacharya1998 method)": [[28, "gammapy.astro.population.CaseBattacharya1998.prepare_outputs", false]], "prepare_outputs() (gammapy.astro.population.exponential method)": [[29, "gammapy.astro.population.Exponential.prepare_outputs", false]], "prepare_outputs() (gammapy.astro.population.faucherkaspi2006 method)": [[30, "gammapy.astro.population.FaucherKaspi2006.prepare_outputs", false]], "prepare_outputs() (gammapy.astro.population.faucherkaspi2006velocitybimodal method)": [[31, "gammapy.astro.population.FaucherKaspi2006VelocityBimodal.prepare_outputs", false]], "prepare_outputs() (gammapy.astro.population.faucherkaspi2006velocitymaxwellian method)": [[32, "gammapy.astro.population.FaucherKaspi2006VelocityMaxwellian.prepare_outputs", false]], "prepare_outputs() (gammapy.astro.population.lorimer2006 method)": [[35, "gammapy.astro.population.Lorimer2006.prepare_outputs", false]], "prepare_outputs() (gammapy.astro.population.paczynski1990 method)": [[36, "gammapy.astro.population.Paczynski1990.prepare_outputs", false]], "prepare_outputs() (gammapy.astro.population.paczynski1990velocity method)": [[37, "gammapy.astro.population.Paczynski1990Velocity.prepare_outputs", false]], "prepare_outputs() (gammapy.astro.population.yusifovkucuk2004 method)": [[39, "gammapy.astro.population.YusifovKucuk2004.prepare_outputs", false]], "prepare_outputs() (gammapy.astro.population.yusifovkucuk2004b method)": [[40, "gammapy.astro.population.YusifovKucuk2004B.prepare_outputs", false]], "primary_axis (gammapy.maps.mapaxes attribute)": [[196, "gammapy.maps.MapAxes.primary_axis", false]], "primaryflux (class in gammapy.astro.darkmatter)": [[26, "gammapy.astro.darkmatter.PrimaryFlux", false]], "prior (class in gammapy.modeling.models)": [[254, "gammapy.modeling.models.Prior", false]], "prior (gammapy.modeling.parameter attribute)": [[213, "gammapy.modeling.Parameter.prior", false]], "prior (gammapy.modeling.parameters attribute)": [[214, "gammapy.modeling.Parameters.prior", false]], "prior (gammapy.modeling.priorparameter attribute)": [[215, "gammapy.modeling.PriorParameter.prior", false]], "prior (gammapy.modeling.priorparameters attribute)": [[216, "gammapy.modeling.PriorParameters.prior", false]], "prior_stat_sum() (gammapy.modeling.parameter method)": [[213, "gammapy.modeling.Parameter.prior_stat_sum", false]], "prior_stat_sum() (gammapy.modeling.parameters method)": [[214, "gammapy.modeling.Parameters.prior_stat_sum", false]], "prior_stat_sum() (gammapy.modeling.priorparameter method)": [[215, "gammapy.modeling.PriorParameter.prior_stat_sum", false]], "prior_stat_sum() (gammapy.modeling.priorparameters method)": [[216, "gammapy.modeling.PriorParameters.prior_stat_sum", false]], "priorparameter (class in gammapy.modeling)": [[215, "gammapy.modeling.PriorParameter", false]], "priorparameters (class in gammapy.modeling)": [[216, "gammapy.modeling.PriorParameters", false]], "profile (gammapy.estimators.imageprofile attribute)": [[127, "gammapy.estimators.ImageProfile.profile", false]], "profile_err (gammapy.estimators.imageprofile attribute)": [[127, "gammapy.estimators.ImageProfile.profile_err", false]], "projected_distance_axis (gammapy.estimators.fluxprofileestimator attribute)": [[126, "gammapy.estimators.FluxProfileEstimator.projected_distance_axis", false]], "projection (gammapy.maps.hpxgeom attribute)": [[191, "gammapy.maps.HpxGeom.projection", false]], "projection (gammapy.maps.regiongeom attribute)": [[200, "gammapy.maps.RegionGeom.projection", false]], "projection (gammapy.maps.wcsgeom attribute)": [[203, "gammapy.maps.WcsGeom.projection", false]], "psf": [[573, "term-PSF", true]], "psf (gammapy.data.observation attribute)": [[88, "gammapy.data.Observation.psf", false]], "psf (gammapy.datasets.mapdataset attribute)": [[102, "gammapy.datasets.MapDataset.psf", false]], "psf (gammapy.datasets.mapdatasetonoff attribute)": [[105, "gammapy.datasets.MapDatasetOnOff.psf", false]], "psf (gammapy.datasets.spectrumdataset attribute)": [[109, "gammapy.datasets.SpectrumDataset.psf", false]], "psf (gammapy.datasets.spectrumdatasetonoff attribute)": [[110, "gammapy.datasets.SpectrumDatasetOnOff.psf", false]], "psf3d (class in gammapy.irf)": [[159, "gammapy.irf.PSF3D", false]], "psf_kernel_map (gammapy.irf.psfkernel attribute)": [[160, "gammapy.irf.PSFKernel.psf_kernel_map", false]], "psf_map (gammapy.irf.psfmap attribute)": [[162, "gammapy.irf.PSFMap.psf_map", false]], "psf_map (gammapy.irf.recopsfmap attribute)": [[165, "gammapy.irf.RecoPSFMap.psf_map", false]], "psfkernel (class in gammapy.irf)": [[160, "gammapy.irf.PSFKernel", false]], "psfking (class in gammapy.irf)": [[161, "gammapy.irf.PSFKing", false]], "psfmap (class in gammapy.irf)": [[162, "gammapy.irf.PSFMap", false]], "pulsar (class in gammapy.astro.source)": [[51, "gammapy.astro.source.Pulsar", false]], "pwn (class in gammapy.astro.source)": [[50, "gammapy.astro.source.PWN", false]], "quantity (gammapy.irf.background2d attribute)": [[146, "gammapy.irf.Background2D.quantity", false]], "quantity (gammapy.irf.background3d attribute)": [[147, "gammapy.irf.Background3D.quantity", false]], "quantity (gammapy.irf.backgroundirf attribute)": [[148, "gammapy.irf.BackgroundIRF.quantity", false]], "quantity (gammapy.irf.edispkernel attribute)": [[149, "gammapy.irf.EDispKernel.quantity", false]], "quantity (gammapy.irf.effectiveareatable2d attribute)": [[152, "gammapy.irf.EffectiveAreaTable2D.quantity", false]], "quantity (gammapy.irf.energydependentmultigausspsf attribute)": [[153, "gammapy.irf.EnergyDependentMultiGaussPSF.quantity", false]], "quantity (gammapy.irf.energydispersion2d attribute)": [[154, "gammapy.irf.EnergyDispersion2D.quantity", false]], "quantity (gammapy.irf.irf attribute)": [[156, "gammapy.irf.IRF.quantity", false]], "quantity (gammapy.irf.parametricpsf attribute)": [[163, "gammapy.irf.ParametricPSF.quantity", false]], "quantity (gammapy.irf.psf3d attribute)": [[159, "gammapy.irf.PSF3D.quantity", false]], "quantity (gammapy.irf.psfking attribute)": [[161, "gammapy.irf.PSFKing.quantity", false]], "quantity (gammapy.irf.radmax2d attribute)": [[164, "gammapy.irf.RadMax2D.quantity", false]], "quantity (gammapy.maps.hpxmap attribute)": [[192, "gammapy.maps.HpxMap.quantity", false]], "quantity (gammapy.maps.hpxndmap attribute)": [[193, "gammapy.maps.HpxNDMap.quantity", false]], "quantity (gammapy.maps.map attribute)": [[195, "gammapy.maps.Map.quantity", false]], "quantity (gammapy.maps.regionndmap attribute)": [[201, "gammapy.maps.RegionNDMap.quantity", false]], "quantity (gammapy.maps.wcsmap attribute)": [[204, "gammapy.maps.WcsMap.quantity", false]], "quantity (gammapy.maps.wcsndmap attribute)": [[205, "gammapy.maps.WcsNDMap.quantity", false]], "quantity (gammapy.modeling.parameter attribute)": [[213, "gammapy.modeling.Parameter.quantity", false]], "quantity (gammapy.modeling.priorparameter attribute)": [[215, "gammapy.modeling.PriorParameter.quantity", false]], "r_0 (gammapy.astro.population.faucherkaspi2006 attribute)": [[30, "gammapy.astro.population.FaucherKaspi2006.r_0", false]], "r_0 (gammapy.astro.population.faucherspiral attribute)": [[33, "gammapy.astro.population.FaucherSpiral.r_0", false]], "r_0 (gammapy.astro.population.valleespiral attribute)": [[38, "gammapy.astro.population.ValleeSpiral.r_0", false]], "r_0 (gammapy.modeling.models.diskspatialmodel attribute)": [[224, "gammapy.modeling.models.DiskSpatialModel.r_0", false]], "r_0 (gammapy.modeling.models.generalizedgaussianspatialmodel attribute)": [[235, "gammapy.modeling.models.GeneralizedGaussianSpatialModel.r_0", false]], "r_0 (gammapy.modeling.models.shell2spatialmodel attribute)": [[258, "gammapy.modeling.models.Shell2SpatialModel.r_0", false]], "r_1 (gammapy.astro.population.yusifovkucuk2004 attribute)": [[39, "gammapy.astro.population.YusifovKucuk2004.r_1", false]], "r_exp (gammapy.astro.population.paczynski1990 attribute)": [[36, "gammapy.astro.population.Paczynski1990.r_exp", false]], "r_in (gammapy.modeling.models.shell2spatialmodel attribute)": [[258, "gammapy.modeling.models.Shell2SpatialModel.r_in", false]], "r_sun (gammapy.astro.population.valleespiral attribute)": [[38, "gammapy.astro.population.ValleeSpiral.r_sun", false]], "rad_max (gammapy.data.observation attribute)": [[88, "gammapy.data.Observation.rad_max", false]], "radec (gammapy.data.eventlist attribute)": [[83, "gammapy.data.EventList.radec", false]], "radec (gammapy.data.pointinginfo attribute)": [[94, "gammapy.data.PointingInfo.radec", false]], "radec (gammapy.irf.fovalignment attribute)": [[155, "gammapy.irf.FoVAlignment.RADEC", false]], "radial_distributions (in module gammapy.astro.population)": [[48, "gammapy.astro.population.radial_distributions", false]], "radius (gammapy.modeling.models.shellspatialmodel attribute)": [[259, "gammapy.modeling.models.ShellSpatialModel.radius", false]], "radius() (gammapy.astro.population.faucherspiral method)": [[33, "gammapy.astro.population.FaucherSpiral.radius", false]], "radius() (gammapy.astro.population.logspiral method)": [[34, "gammapy.astro.population.LogSpiral.radius", false]], "radius() (gammapy.astro.population.valleespiral method)": [[38, "gammapy.astro.population.ValleeSpiral.radius", false]], "radius() (gammapy.astro.source.pwn method)": [[50, "gammapy.astro.source.PWN.radius", false]], "radius() (gammapy.astro.source.snr method)": [[52, "gammapy.astro.source.SNR.radius", false]], "radius() (gammapy.astro.source.snrtruelovemckee method)": [[53, "gammapy.astro.source.SNRTrueloveMcKee.radius", false]], "radius_inner() (gammapy.astro.source.snr method)": [[52, "gammapy.astro.source.SNR.radius_inner", false]], "radius_inner() (gammapy.astro.source.snrtruelovemckee method)": [[53, "gammapy.astro.source.SNRTrueloveMcKee.radius_inner", false]], "radius_reverse_shock() (gammapy.astro.source.snrtruelovemckee method)": [[53, "gammapy.astro.source.SNRTrueloveMcKee.radius_reverse_shock", false]], "radmax2d (class in gammapy.irf)": [[164, "gammapy.irf.RadMax2D", false]], "read() (gammapy.analysis.analysisconfig class method)": [[16, "gammapy.analysis.AnalysisConfig.read", false]], "read() (gammapy.data.eventlist class method)": [[83, "gammapy.data.EventList.read", false]], "read() (gammapy.data.fixedpointinginfo class method)": [[85, "gammapy.data.FixedPointingInfo.read", false]], "read() (gammapy.data.gti class method)": [[86, "gammapy.data.GTI.read", false]], "read() (gammapy.data.hduindextable class method)": [[87, "gammapy.data.HDUIndexTable.read", false]], "read() (gammapy.data.observation class method)": [[88, "gammapy.data.Observation.read", false]], "read() (gammapy.data.observationtable class method)": [[91, "gammapy.data.ObservationTable.read", false]], "read() (gammapy.data.pointinginfo class method)": [[94, "gammapy.data.PointingInfo.read", false]], "read() (gammapy.datasets.datasets class method)": [[100, "gammapy.datasets.Datasets.read", false]], "read() (gammapy.datasets.fluxpointsdataset class method)": [[101, "gammapy.datasets.FluxPointsDataset.read", false]], "read() (gammapy.datasets.mapdataset class method)": [[102, "gammapy.datasets.MapDataset.read", false]], "read() (gammapy.datasets.mapdatasetonoff class method)": [[105, "gammapy.datasets.MapDatasetOnOff.read", false]], "read() (gammapy.datasets.ogipdatasetreader method)": [[106, "gammapy.datasets.OGIPDatasetReader.read", false]], "read() (gammapy.datasets.spectrumdataset class method)": [[109, "gammapy.datasets.SpectrumDataset.read", false]], "read() (gammapy.datasets.spectrumdatasetonoff class method)": [[110, "gammapy.datasets.SpectrumDatasetOnOff.read", false]], "read() (gammapy.estimators.fluxmaps class method)": [[122, "gammapy.estimators.FluxMaps.read", false]], "read() (gammapy.estimators.fluxpoints class method)": [[124, "gammapy.estimators.FluxPoints.read", false]], "read() (gammapy.irf.background2d class method)": [[146, "gammapy.irf.Background2D.read", false]], "read() (gammapy.irf.background3d class method)": [[147, "gammapy.irf.Background3D.read", false]], "read() (gammapy.irf.backgroundirf class method)": [[148, "gammapy.irf.BackgroundIRF.read", false]], "read() (gammapy.irf.edispkernel class method)": [[149, "gammapy.irf.EDispKernel.read", false]], "read() (gammapy.irf.edispkernelmap class method)": [[150, "gammapy.irf.EDispKernelMap.read", false]], "read() (gammapy.irf.edispmap class method)": [[151, "gammapy.irf.EDispMap.read", false]], "read() (gammapy.irf.effectiveareatable2d class method)": [[152, "gammapy.irf.EffectiveAreaTable2D.read", false]], "read() (gammapy.irf.energydependentmultigausspsf class method)": [[153, "gammapy.irf.EnergyDependentMultiGaussPSF.read", false]], "read() (gammapy.irf.energydispersion2d class method)": [[154, "gammapy.irf.EnergyDispersion2D.read", false]], "read() (gammapy.irf.irf class method)": [[156, "gammapy.irf.IRF.read", false]], "read() (gammapy.irf.irfmap class method)": [[157, "gammapy.irf.IRFMap.read", false]], "read() (gammapy.irf.parametricpsf class method)": [[163, "gammapy.irf.ParametricPSF.read", false]], "read() (gammapy.irf.psf3d class method)": [[159, "gammapy.irf.PSF3D.read", false]], "read() (gammapy.irf.psfkernel class method)": [[160, "gammapy.irf.PSFKernel.read", false]], "read() (gammapy.irf.psfking class method)": [[161, "gammapy.irf.PSFKing.read", false]], "read() (gammapy.irf.psfmap class method)": [[162, "gammapy.irf.PSFMap.read", false]], "read() (gammapy.irf.radmax2d class method)": [[164, "gammapy.irf.RadMax2D.read", false]], "read() (gammapy.irf.recopsfmap class method)": [[165, "gammapy.irf.RecoPSFMap.read", false]], "read() (gammapy.maps.hpxmap static method)": [[192, "gammapy.maps.HpxMap.read", false]], "read() (gammapy.maps.hpxndmap static method)": [[193, "gammapy.maps.HpxNDMap.read", false]], "read() (gammapy.maps.map static method)": [[195, "gammapy.maps.Map.read", false]], "read() (gammapy.maps.maps class method)": [[199, "gammapy.maps.Maps.read", false]], "read() (gammapy.maps.regionndmap class method)": [[201, "gammapy.maps.RegionNDMap.read", false]], "read() (gammapy.maps.wcsmap static method)": [[204, "gammapy.maps.WcsMap.read", false]], "read() (gammapy.maps.wcsndmap static method)": [[205, "gammapy.maps.WcsNDMap.read", false]], "read() (gammapy.modeling.models.datasetmodels class method)": [[223, "gammapy.modeling.models.DatasetModels.read", false]], "read() (gammapy.modeling.models.eblabsorptionnormspectralmodel class method)": [[225, "gammapy.modeling.models.EBLAbsorptionNormSpectralModel.read", false]], "read() (gammapy.modeling.models.lightcurvetemplatetemporalmodel class method)": [[237, "gammapy.modeling.models.LightCurveTemplateTemporalModel.read", false]], "read() (gammapy.modeling.models.models class method)": [[245, "gammapy.modeling.models.Models.read", false]], "read() (gammapy.modeling.models.templatephasecurvetemporalmodel class method)": [[272, "gammapy.modeling.models.TemplatePhaseCurveTemporalModel.read", false]], "read() (gammapy.modeling.models.templatespatialmodel class method)": [[273, "gammapy.modeling.models.TemplateSpatialModel.read", false]], "read_arf() (gammapy.datasets.ogipdatasetreader static method)": [[106, "gammapy.datasets.OGIPDatasetReader.read_arf", false]], "read_bkg() (gammapy.datasets.ogipdatasetreader static method)": [[106, "gammapy.datasets.OGIPDatasetReader.read_bkg", false]], "read_builtin() (gammapy.modeling.models.eblabsorptionnormspectralmodel class method)": [[225, "gammapy.modeling.models.EBLAbsorptionNormSpectralModel.read_builtin", false]], "read_covariance() (gammapy.modeling.models.datasetmodels method)": [[223, "gammapy.modeling.models.DatasetModels.read_covariance", false]], "read_covariance() (gammapy.modeling.models.models method)": [[245, "gammapy.modeling.models.Models.read_covariance", false]], "read_datasets() (gammapy.analysis.analysis method)": [[15, "gammapy.analysis.Analysis.read_datasets", false]], "read_hermes_cube() (in module gammapy.modeling.models)": [[280, "gammapy.modeling.models.read_hermes_cube", false]], "read_hermes_cube() (in module gammapy.modeling.models.utils)": [[282, "gammapy.modeling.models.utils.read_hermes_cube", false]], "read_models() (gammapy.analysis.analysis method)": [[15, "gammapy.analysis.Analysis.read_models", false]], "read_pha() (gammapy.datasets.ogipdatasetreader static method)": [[106, "gammapy.datasets.OGIPDatasetReader.read_pha", false]], "read_rmf() (gammapy.datasets.ogipdatasetreader static method)": [[106, "gammapy.datasets.OGIPDatasetReader.read_rmf", false]], "read_xspec_model() (gammapy.modeling.models.templatespectralmodel class method)": [[274, "gammapy.modeling.models.TemplateSpectralModel.read_xspec_model", false]], "read_yaml() (in module gammapy.utils.scripts)": [[343, "gammapy.utils.scripts.read_yaml", false]], "reassign() (gammapy.astro.darkmatter.darkmatterannihilationspectralmodel method)": [[19, "gammapy.astro.darkmatter.DarkMatterAnnihilationSpectralModel.reassign", false]], "reassign() (gammapy.astro.darkmatter.darkmatterdecayspectralmodel method)": [[20, "gammapy.astro.darkmatter.DarkMatterDecaySpectralModel.reassign", false]], "reassign() (gammapy.astro.darkmatter.primaryflux method)": [[26, "gammapy.astro.darkmatter.PrimaryFlux.reassign", false]], "reassign() (gammapy.modeling.models.brokenpowerlawspectralmodel method)": [[217, "gammapy.modeling.models.BrokenPowerLawSpectralModel.reassign", false]], "reassign() (gammapy.modeling.models.compoundspectralmodel method)": [[218, "gammapy.modeling.models.CompoundSpectralModel.reassign", false]], "reassign() (gammapy.modeling.models.constantfluxspatialmodel method)": [[219, "gammapy.modeling.models.ConstantFluxSpatialModel.reassign", false]], "reassign() (gammapy.modeling.models.constantspatialmodel method)": [[220, "gammapy.modeling.models.ConstantSpatialModel.reassign", false]], "reassign() (gammapy.modeling.models.constantspectralmodel method)": [[221, "gammapy.modeling.models.ConstantSpectralModel.reassign", false]], "reassign() (gammapy.modeling.models.constanttemporalmodel method)": [[222, "gammapy.modeling.models.ConstantTemporalModel.reassign", false]], "reassign() (gammapy.modeling.models.datasetmodels method)": [[223, "gammapy.modeling.models.DatasetModels.reassign", false]], "reassign() (gammapy.modeling.models.diskspatialmodel method)": [[224, "gammapy.modeling.models.DiskSpatialModel.reassign", false]], "reassign() (gammapy.modeling.models.eblabsorptionnormspectralmodel method)": [[225, "gammapy.modeling.models.EBLAbsorptionNormSpectralModel.reassign", false]], "reassign() (gammapy.modeling.models.expcutoffpowerlaw3fglspectralmodel method)": [[227, "gammapy.modeling.models.ExpCutoffPowerLaw3FGLSpectralModel.reassign", false]], "reassign() (gammapy.modeling.models.expcutoffpowerlawnormspectralmodel method)": [[228, "gammapy.modeling.models.ExpCutoffPowerLawNormSpectralModel.reassign", false]], "reassign() (gammapy.modeling.models.expcutoffpowerlawspectralmodel method)": [[229, "gammapy.modeling.models.ExpCutoffPowerLawSpectralModel.reassign", false]], "reassign() (gammapy.modeling.models.expdecaytemporalmodel method)": [[230, "gammapy.modeling.models.ExpDecayTemporalModel.reassign", false]], "reassign() (gammapy.modeling.models.fovbackgroundmodel method)": [[231, "gammapy.modeling.models.FoVBackgroundModel.reassign", false]], "reassign() (gammapy.modeling.models.gaussianspatialmodel method)": [[232, "gammapy.modeling.models.GaussianSpatialModel.reassign", false]], "reassign() (gammapy.modeling.models.gaussianspectralmodel method)": [[233, "gammapy.modeling.models.GaussianSpectralModel.reassign", false]], "reassign() (gammapy.modeling.models.gaussiantemporalmodel method)": [[234, "gammapy.modeling.models.GaussianTemporalModel.reassign", false]], "reassign() (gammapy.modeling.models.generalizedgaussianspatialmodel method)": [[235, "gammapy.modeling.models.GeneralizedGaussianSpatialModel.reassign", false]], "reassign() (gammapy.modeling.models.generalizedgaussiantemporalmodel method)": [[236, "gammapy.modeling.models.GeneralizedGaussianTemporalModel.reassign", false]], "reassign() (gammapy.modeling.models.lightcurvetemplatetemporalmodel method)": [[237, "gammapy.modeling.models.LightCurveTemplateTemporalModel.reassign", false]], "reassign() (gammapy.modeling.models.lineartemporalmodel method)": [[238, "gammapy.modeling.models.LinearTemporalModel.reassign", false]], "reassign() (gammapy.modeling.models.logparabolanormspectralmodel method)": [[239, "gammapy.modeling.models.LogParabolaNormSpectralModel.reassign", false]], "reassign() (gammapy.modeling.models.logparabolaspectralmodel method)": [[240, "gammapy.modeling.models.LogParabolaSpectralModel.reassign", false]], "reassign() (gammapy.modeling.models.meyercrabspectralmodel method)": [[242, "gammapy.modeling.models.MeyerCrabSpectralModel.reassign", false]], "reassign() (gammapy.modeling.models.modelbase method)": [[244, "gammapy.modeling.models.ModelBase.reassign", false]], "reassign() (gammapy.modeling.models.models method)": [[245, "gammapy.modeling.models.Models.reassign", false]], "reassign() (gammapy.modeling.models.naimaspectralmodel method)": [[246, "gammapy.modeling.models.NaimaSpectralModel.reassign", false]], "reassign() (gammapy.modeling.models.piecewisenormspatialmodel method)": [[247, "gammapy.modeling.models.PiecewiseNormSpatialModel.reassign", false]], "reassign() (gammapy.modeling.models.piecewisenormspectralmodel method)": [[248, "gammapy.modeling.models.PiecewiseNormSpectralModel.reassign", false]], "reassign() (gammapy.modeling.models.pointspatialmodel method)": [[249, "gammapy.modeling.models.PointSpatialModel.reassign", false]], "reassign() (gammapy.modeling.models.powerlaw2spectralmodel method)": [[250, "gammapy.modeling.models.PowerLaw2SpectralModel.reassign", false]], "reassign() (gammapy.modeling.models.powerlawnormspectralmodel method)": [[251, "gammapy.modeling.models.PowerLawNormSpectralModel.reassign", false]], "reassign() (gammapy.modeling.models.powerlawspectralmodel method)": [[252, "gammapy.modeling.models.PowerLawSpectralModel.reassign", false]], "reassign() (gammapy.modeling.models.powerlawtemporalmodel method)": [[253, "gammapy.modeling.models.PowerLawTemporalModel.reassign", false]], "reassign() (gammapy.modeling.models.prior method)": [[254, "gammapy.modeling.models.Prior.reassign", false]], "reassign() (gammapy.modeling.models.scalespectralmodel method)": [[257, "gammapy.modeling.models.ScaleSpectralModel.reassign", false]], "reassign() (gammapy.modeling.models.shell2spatialmodel method)": [[258, "gammapy.modeling.models.Shell2SpatialModel.reassign", false]], "reassign() (gammapy.modeling.models.shellspatialmodel method)": [[259, "gammapy.modeling.models.ShellSpatialModel.reassign", false]], "reassign() (gammapy.modeling.models.sinetemporalmodel method)": [[260, "gammapy.modeling.models.SineTemporalModel.reassign", false]], "reassign() (gammapy.modeling.models.skymodel method)": [[261, "gammapy.modeling.models.SkyModel.reassign", false]], "reassign() (gammapy.modeling.models.smoothbrokenpowerlawspectralmodel method)": [[262, "gammapy.modeling.models.SmoothBrokenPowerLawSpectralModel.reassign", false]], "reassign() (gammapy.modeling.models.spatialmodel method)": [[263, "gammapy.modeling.models.SpatialModel.reassign", false]], "reassign() (gammapy.modeling.models.spectralmodel method)": [[264, "gammapy.modeling.models.SpectralModel.reassign", false]], "reassign() (gammapy.modeling.models.superexpcutoffpowerlaw3fglspectralmodel method)": [[265, "gammapy.modeling.models.SuperExpCutoffPowerLaw3FGLSpectralModel.reassign", false]], "reassign() (gammapy.modeling.models.superexpcutoffpowerlaw4fgldr3spectralmodel method)": [[266, "gammapy.modeling.models.SuperExpCutoffPowerLaw4FGLDR3SpectralModel.reassign", false]], "reassign() (gammapy.modeling.models.superexpcutoffpowerlaw4fglspectralmodel method)": [[267, "gammapy.modeling.models.SuperExpCutoffPowerLaw4FGLSpectralModel.reassign", false]], "reassign() (gammapy.modeling.models.templatendspatialmodel method)": [[269, "gammapy.modeling.models.TemplateNDSpatialModel.reassign", false]], "reassign() (gammapy.modeling.models.templatendspectralmodel method)": [[270, "gammapy.modeling.models.TemplateNDSpectralModel.reassign", false]], "reassign() (gammapy.modeling.models.templatenpredmodel method)": [[271, "gammapy.modeling.models.TemplateNPredModel.reassign", false]], "reassign() (gammapy.modeling.models.templatephasecurvetemporalmodel method)": [[272, "gammapy.modeling.models.TemplatePhaseCurveTemporalModel.reassign", false]], "reassign() (gammapy.modeling.models.templatespatialmodel method)": [[273, "gammapy.modeling.models.TemplateSpatialModel.reassign", false]], "reassign() (gammapy.modeling.models.templatespectralmodel method)": [[274, "gammapy.modeling.models.TemplateSpectralModel.reassign", false]], "reassign() (gammapy.modeling.models.temporalmodel method)": [[275, "gammapy.modeling.models.TemporalModel.reassign", false]], "reco energy": [[573, "term-Reco-Energy", true]], "recompute_ul() (gammapy.estimators.fluxpoints method)": [[124, "gammapy.estimators.FluxPoints.recompute_ul", false]], "recopsfmap (class in gammapy.irf)": [[165, "gammapy.irf.RecoPSFMap", false]], "recursive_merge_dicts() (in module gammapy.utils.scripts)": [[344, "gammapy.utils.scripts.recursive_merge_dicts", false]], "redshift (gammapy.modeling.models.eblabsorptionnormspectralmodel attribute)": [[225, "gammapy.modeling.models.EBLAbsorptionNormSpectralModel.redshift", false]], "reduce() (gammapy.maps.hpxmap method)": [[192, "gammapy.maps.HpxMap.reduce", false]], "reduce() (gammapy.maps.hpxndmap method)": [[193, "gammapy.maps.HpxNDMap.reduce", false]], "reduce() (gammapy.maps.map method)": [[195, "gammapy.maps.Map.reduce", false]], "reduce() (gammapy.maps.regionndmap method)": [[201, "gammapy.maps.RegionNDMap.reduce", false]], "reduce() (gammapy.maps.wcsmap method)": [[204, "gammapy.maps.WcsMap.reduce", false]], "reduce() (gammapy.maps.wcsndmap method)": [[205, "gammapy.maps.WcsNDMap.reduce", false]], "reduce_over_axes() (gammapy.maps.hpxmap method)": [[192, "gammapy.maps.HpxMap.reduce_over_axes", false]], "reduce_over_axes() (gammapy.maps.hpxndmap method)": [[193, "gammapy.maps.HpxNDMap.reduce_over_axes", false]], "reduce_over_axes() (gammapy.maps.map method)": [[195, "gammapy.maps.Map.reduce_over_axes", false]], "reduce_over_axes() (gammapy.maps.regionndmap method)": [[201, "gammapy.maps.RegionNDMap.reduce_over_axes", false]], "reduce_over_axes() (gammapy.maps.wcsmap method)": [[204, "gammapy.maps.WcsMap.reduce_over_axes", false]], "reduce_over_axes() (gammapy.maps.wcsndmap method)": [[205, "gammapy.maps.WcsNDMap.reduce_over_axes", false]], "reference (gammapy.modeling.models.expcutoffpowerlaw3fglspectralmodel attribute)": [[227, "gammapy.modeling.models.ExpCutoffPowerLaw3FGLSpectralModel.reference", false]], "reference (gammapy.modeling.models.expcutoffpowerlawnormspectralmodel attribute)": [[228, "gammapy.modeling.models.ExpCutoffPowerLawNormSpectralModel.reference", false]], "reference (gammapy.modeling.models.expcutoffpowerlawspectralmodel attribute)": [[229, "gammapy.modeling.models.ExpCutoffPowerLawSpectralModel.reference", false]], "reference (gammapy.modeling.models.logparabolanormspectralmodel attribute)": [[239, "gammapy.modeling.models.LogParabolaNormSpectralModel.reference", false]], "reference (gammapy.modeling.models.logparabolaspectralmodel attribute)": [[240, "gammapy.modeling.models.LogParabolaSpectralModel.reference", false]], "reference (gammapy.modeling.models.powerlawnormspectralmodel attribute)": [[251, "gammapy.modeling.models.PowerLawNormSpectralModel.reference", false]], "reference (gammapy.modeling.models.powerlawspectralmodel attribute)": [[252, "gammapy.modeling.models.PowerLawSpectralModel.reference", false]], "reference (gammapy.modeling.models.smoothbrokenpowerlawspectralmodel attribute)": [[262, "gammapy.modeling.models.SmoothBrokenPowerLawSpectralModel.reference", false]], "reference (gammapy.modeling.models.superexpcutoffpowerlaw3fglspectralmodel attribute)": [[265, "gammapy.modeling.models.SuperExpCutoffPowerLaw3FGLSpectralModel.reference", false]], "reference (gammapy.modeling.models.superexpcutoffpowerlaw4fgldr3spectralmodel attribute)": [[266, "gammapy.modeling.models.SuperExpCutoffPowerLaw4FGLDR3SpectralModel.reference", false]], "reference (gammapy.modeling.models.superexpcutoffpowerlaw4fglspectralmodel attribute)": [[267, "gammapy.modeling.models.SuperExpCutoffPowerLaw4FGLSpectralModel.reference", false]], "reference_fluxes() (gammapy.astro.darkmatter.darkmatterannihilationspectralmodel method)": [[19, "gammapy.astro.darkmatter.DarkMatterAnnihilationSpectralModel.reference_fluxes", false]], "reference_fluxes() (gammapy.astro.darkmatter.darkmatterdecayspectralmodel method)": [[20, "gammapy.astro.darkmatter.DarkMatterDecaySpectralModel.reference_fluxes", false]], "reference_fluxes() (gammapy.astro.darkmatter.primaryflux method)": [[26, "gammapy.astro.darkmatter.PrimaryFlux.reference_fluxes", false]], "reference_fluxes() (gammapy.modeling.models.brokenpowerlawspectralmodel method)": [[217, "gammapy.modeling.models.BrokenPowerLawSpectralModel.reference_fluxes", false]], "reference_fluxes() (gammapy.modeling.models.compoundspectralmodel method)": [[218, "gammapy.modeling.models.CompoundSpectralModel.reference_fluxes", false]], "reference_fluxes() (gammapy.modeling.models.constantspectralmodel method)": [[221, "gammapy.modeling.models.ConstantSpectralModel.reference_fluxes", false]], "reference_fluxes() (gammapy.modeling.models.eblabsorptionnormspectralmodel method)": [[225, "gammapy.modeling.models.EBLAbsorptionNormSpectralModel.reference_fluxes", false]], "reference_fluxes() (gammapy.modeling.models.expcutoffpowerlaw3fglspectralmodel method)": [[227, "gammapy.modeling.models.ExpCutoffPowerLaw3FGLSpectralModel.reference_fluxes", false]], "reference_fluxes() (gammapy.modeling.models.expcutoffpowerlawnormspectralmodel method)": [[228, "gammapy.modeling.models.ExpCutoffPowerLawNormSpectralModel.reference_fluxes", false]], "reference_fluxes() (gammapy.modeling.models.expcutoffpowerlawspectralmodel method)": [[229, "gammapy.modeling.models.ExpCutoffPowerLawSpectralModel.reference_fluxes", false]], "reference_fluxes() (gammapy.modeling.models.gaussianspectralmodel method)": [[233, "gammapy.modeling.models.GaussianSpectralModel.reference_fluxes", false]], "reference_fluxes() (gammapy.modeling.models.logparabolanormspectralmodel method)": [[239, "gammapy.modeling.models.LogParabolaNormSpectralModel.reference_fluxes", false]], "reference_fluxes() (gammapy.modeling.models.logparabolaspectralmodel method)": [[240, "gammapy.modeling.models.LogParabolaSpectralModel.reference_fluxes", false]], "reference_fluxes() (gammapy.modeling.models.meyercrabspectralmodel method)": [[242, "gammapy.modeling.models.MeyerCrabSpectralModel.reference_fluxes", false]], "reference_fluxes() (gammapy.modeling.models.naimaspectralmodel method)": [[246, "gammapy.modeling.models.NaimaSpectralModel.reference_fluxes", false]], "reference_fluxes() (gammapy.modeling.models.piecewisenormspectralmodel method)": [[248, "gammapy.modeling.models.PiecewiseNormSpectralModel.reference_fluxes", false]], "reference_fluxes() (gammapy.modeling.models.powerlaw2spectralmodel method)": [[250, "gammapy.modeling.models.PowerLaw2SpectralModel.reference_fluxes", false]], "reference_fluxes() (gammapy.modeling.models.powerlawnormspectralmodel method)": [[251, "gammapy.modeling.models.PowerLawNormSpectralModel.reference_fluxes", false]], "reference_fluxes() (gammapy.modeling.models.powerlawspectralmodel method)": [[252, "gammapy.modeling.models.PowerLawSpectralModel.reference_fluxes", false]], "reference_fluxes() (gammapy.modeling.models.scalespectralmodel method)": [[257, "gammapy.modeling.models.ScaleSpectralModel.reference_fluxes", false]], "reference_fluxes() (gammapy.modeling.models.smoothbrokenpowerlawspectralmodel method)": [[262, "gammapy.modeling.models.SmoothBrokenPowerLawSpectralModel.reference_fluxes", false]], "reference_fluxes() (gammapy.modeling.models.spectralmodel method)": [[264, "gammapy.modeling.models.SpectralModel.reference_fluxes", false]], "reference_fluxes() (gammapy.modeling.models.superexpcutoffpowerlaw3fglspectralmodel method)": [[265, "gammapy.modeling.models.SuperExpCutoffPowerLaw3FGLSpectralModel.reference_fluxes", false]], "reference_fluxes() (gammapy.modeling.models.superexpcutoffpowerlaw4fgldr3spectralmodel method)": [[266, "gammapy.modeling.models.SuperExpCutoffPowerLaw4FGLDR3SpectralModel.reference_fluxes", false]], "reference_fluxes() (gammapy.modeling.models.superexpcutoffpowerlaw4fglspectralmodel method)": [[267, "gammapy.modeling.models.SuperExpCutoffPowerLaw4FGLSpectralModel.reference_fluxes", false]], "reference_fluxes() (gammapy.modeling.models.templatendspectralmodel method)": [[270, "gammapy.modeling.models.TemplateNDSpectralModel.reference_fluxes", false]], "reference_fluxes() (gammapy.modeling.models.templatespectralmodel method)": [[274, "gammapy.modeling.models.TemplateSpectralModel.reference_fluxes", false]], "reference_model (gammapy.estimators.fluxmaps attribute)": [[122, "gammapy.estimators.FluxMaps.reference_model", false]], "reference_model (gammapy.estimators.fluxpoints attribute)": [[124, "gammapy.estimators.FluxPoints.reference_model", false]], "reference_model_default (gammapy.estimators.fluxmaps attribute)": [[122, "gammapy.estimators.FluxMaps.reference_model_default", false]], "reference_model_default (gammapy.estimators.fluxpoints attribute)": [[124, "gammapy.estimators.FluxPoints.reference_model_default", false]], "reference_spectral_model (gammapy.estimators.fluxmaps attribute)": [[122, "gammapy.estimators.FluxMaps.reference_spectral_model", false]], "reference_spectral_model (gammapy.estimators.fluxpoints attribute)": [[124, "gammapy.estimators.FluxPoints.reference_spectral_model", false]], "reference_time (gammapy.maps.timemapaxis attribute)": [[202, "gammapy.maps.TimeMapAxis.reference_time", false]], "reference_time (gammapy.modeling.models.constanttemporalmodel attribute)": [[222, "gammapy.modeling.models.ConstantTemporalModel.reference_time", false]], "reference_time (gammapy.modeling.models.expdecaytemporalmodel attribute)": [[230, "gammapy.modeling.models.ExpDecayTemporalModel.reference_time", false]], "reference_time (gammapy.modeling.models.gaussiantemporalmodel attribute)": [[234, "gammapy.modeling.models.GaussianTemporalModel.reference_time", false]], "reference_time (gammapy.modeling.models.generalizedgaussiantemporalmodel attribute)": [[236, "gammapy.modeling.models.GeneralizedGaussianTemporalModel.reference_time", false]], "reference_time (gammapy.modeling.models.lightcurvetemplatetemporalmodel attribute)": [[237, "gammapy.modeling.models.LightCurveTemplateTemporalModel.reference_time", false]], "reference_time (gammapy.modeling.models.lineartemporalmodel attribute)": [[238, "gammapy.modeling.models.LinearTemporalModel.reference_time", false]], "reference_time (gammapy.modeling.models.powerlawtemporalmodel attribute)": [[253, "gammapy.modeling.models.PowerLawTemporalModel.reference_time", false]], "reference_time (gammapy.modeling.models.sinetemporalmodel attribute)": [[260, "gammapy.modeling.models.SineTemporalModel.reference_time", false]], "reference_time (gammapy.modeling.models.templatephasecurvetemporalmodel attribute)": [[272, "gammapy.modeling.models.TemplatePhaseCurveTemporalModel.reference_time", false]], "reference_time (gammapy.modeling.models.temporalmodel attribute)": [[275, "gammapy.modeling.models.TemporalModel.reference_time", false]], "reflected background": [[573, "term-Reflected-Background", true]], "reflectedregionsbackgroundmaker (class in gammapy.makers)": [[174, "gammapy.makers.ReflectedRegionsBackgroundMaker", false]], "reflectedregionsfinder (class in gammapy.makers)": [[175, "gammapy.makers.ReflectedRegionsFinder", false]], "region (gammapy.maps.hpxgeom attribute)": [[191, "gammapy.maps.HpxGeom.region", false]], "region (gammapy.maps.regiongeom attribute)": [[200, "gammapy.maps.RegionGeom.region", false]], "region_mask() (gammapy.maps.hpxgeom method)": [[191, "gammapy.maps.HpxGeom.region_mask", false]], "region_mask() (gammapy.maps.wcsgeom method)": [[203, "gammapy.maps.WcsGeom.region_mask", false]], "region_to_frame() (in module gammapy.utils.regions)": [[338, "gammapy.utils.regions.region_to_frame", false]], "region_weights() (gammapy.maps.wcsgeom method)": [[203, "gammapy.maps.WcsGeom.region_weights", false]], "regiongeom (class in gammapy.maps)": [[200, "gammapy.maps.RegionGeom", false]], "regionndmap (class in gammapy.maps)": [[201, "gammapy.maps.RegionNDMap", false]], "regions_to_compound_region() (in module gammapy.utils.regions)": [[339, "gammapy.utils.regions.regions_to_compound_region", false]], "regionsfinder (class in gammapy.makers)": [[176, "gammapy.makers.RegionsFinder", false]], "remove() (gammapy.data.observations method)": [[92, "gammapy.data.Observations.remove", false]], "remove() (gammapy.datasets.datasets method)": [[100, "gammapy.datasets.Datasets.remove", false]], "remove() (gammapy.modeling.models.models method)": [[245, "gammapy.modeling.models.Models.remove", false]], "remove_column() (gammapy.data.hduindextable method)": [[87, "gammapy.data.HDUIndexTable.remove_column", false]], "remove_column() (gammapy.data.observationtable method)": [[91, "gammapy.data.ObservationTable.remove_column", false]], "remove_columns() (gammapy.data.hduindextable method)": [[87, "gammapy.data.HDUIndexTable.remove_columns", false]], "remove_columns() (gammapy.data.observationtable method)": [[91, "gammapy.data.ObservationTable.remove_columns", false]], "remove_indices() (gammapy.data.hduindextable method)": [[87, "gammapy.data.HDUIndexTable.remove_indices", false]], "remove_indices() (gammapy.data.observationtable method)": [[91, "gammapy.data.ObservationTable.remove_indices", false]], "remove_row() (gammapy.data.hduindextable method)": [[87, "gammapy.data.HDUIndexTable.remove_row", false]], "remove_row() (gammapy.data.observationtable method)": [[91, "gammapy.data.ObservationTable.remove_row", false]], "remove_rows() (gammapy.data.hduindextable method)": [[87, "gammapy.data.HDUIndexTable.remove_rows", false]], "remove_rows() (gammapy.data.observationtable method)": [[91, "gammapy.data.ObservationTable.remove_rows", false]], "rename() (gammapy.astro.population.casebattacharya1998 class method)": [[28, "gammapy.astro.population.CaseBattacharya1998.rename", false]], "rename() (gammapy.astro.population.exponential class method)": [[29, "gammapy.astro.population.Exponential.rename", false]], "rename() (gammapy.astro.population.faucherkaspi2006 class method)": [[30, "gammapy.astro.population.FaucherKaspi2006.rename", false]], "rename() (gammapy.astro.population.faucherkaspi2006velocitybimodal class method)": [[31, "gammapy.astro.population.FaucherKaspi2006VelocityBimodal.rename", false]], "rename() (gammapy.astro.population.faucherkaspi2006velocitymaxwellian class method)": [[32, "gammapy.astro.population.FaucherKaspi2006VelocityMaxwellian.rename", false]], "rename() (gammapy.astro.population.lorimer2006 class method)": [[35, "gammapy.astro.population.Lorimer2006.rename", false]], "rename() (gammapy.astro.population.paczynski1990 class method)": [[36, "gammapy.astro.population.Paczynski1990.rename", false]], "rename() (gammapy.astro.population.paczynski1990velocity class method)": [[37, "gammapy.astro.population.Paczynski1990Velocity.rename", false]], "rename() (gammapy.astro.population.yusifovkucuk2004 class method)": [[39, "gammapy.astro.population.YusifovKucuk2004.rename", false]], "rename() (gammapy.astro.population.yusifovkucuk2004b class method)": [[40, "gammapy.astro.population.YusifovKucuk2004B.rename", false]], "rename() (gammapy.maps.mapaxis method)": [[197, "gammapy.maps.MapAxis.rename", false]], "rename_axes() (gammapy.maps.geom method)": [[190, "gammapy.maps.Geom.rename_axes", false]], "rename_axes() (gammapy.maps.hpxgeom method)": [[191, "gammapy.maps.HpxGeom.rename_axes", false]], "rename_axes() (gammapy.maps.hpxmap method)": [[192, "gammapy.maps.HpxMap.rename_axes", false]], "rename_axes() (gammapy.maps.hpxndmap method)": [[193, "gammapy.maps.HpxNDMap.rename_axes", false]], "rename_axes() (gammapy.maps.map method)": [[195, "gammapy.maps.Map.rename_axes", false]], "rename_axes() (gammapy.maps.mapaxes method)": [[196, "gammapy.maps.MapAxes.rename_axes", false]], "rename_axes() (gammapy.maps.regiongeom method)": [[200, "gammapy.maps.RegionGeom.rename_axes", false]], "rename_axes() (gammapy.maps.regionndmap method)": [[201, "gammapy.maps.RegionNDMap.rename_axes", false]], "rename_axes() (gammapy.maps.wcsgeom method)": [[203, "gammapy.maps.WcsGeom.rename_axes", false]], "rename_axes() (gammapy.maps.wcsmap method)": [[204, "gammapy.maps.WcsMap.rename_axes", false]], "rename_axes() (gammapy.maps.wcsndmap method)": [[205, "gammapy.maps.WcsNDMap.rename_axes", false]], "rename_column() (gammapy.data.hduindextable method)": [[87, "gammapy.data.HDUIndexTable.rename_column", false]], "rename_column() (gammapy.data.observationtable method)": [[91, "gammapy.data.ObservationTable.rename_column", false]], "rename_columns() (gammapy.data.hduindextable method)": [[87, "gammapy.data.HDUIndexTable.rename_columns", false]], "rename_columns() (gammapy.data.observationtable method)": [[91, "gammapy.data.ObservationTable.rename_columns", false]], "render() (gammapy.astro.population.casebattacharya1998 method)": [[28, "gammapy.astro.population.CaseBattacharya1998.render", false]], "render() (gammapy.astro.population.exponential method)": [[29, "gammapy.astro.population.Exponential.render", false]], "render() (gammapy.astro.population.faucherkaspi2006 method)": [[30, "gammapy.astro.population.FaucherKaspi2006.render", false]], "render() (gammapy.astro.population.faucherkaspi2006velocitybimodal method)": [[31, "gammapy.astro.population.FaucherKaspi2006VelocityBimodal.render", false]], "render() (gammapy.astro.population.faucherkaspi2006velocitymaxwellian method)": [[32, "gammapy.astro.population.FaucherKaspi2006VelocityMaxwellian.render", false]], "render() (gammapy.astro.population.lorimer2006 method)": [[35, "gammapy.astro.population.Lorimer2006.render", false]], "render() (gammapy.astro.population.paczynski1990 method)": [[36, "gammapy.astro.population.Paczynski1990.render", false]], "render() (gammapy.astro.population.paczynski1990velocity method)": [[37, "gammapy.astro.population.Paczynski1990Velocity.render", false]], "render() (gammapy.astro.population.yusifovkucuk2004 method)": [[39, "gammapy.astro.population.YusifovKucuk2004.render", false]], "render() (gammapy.astro.population.yusifovkucuk2004b method)": [[40, "gammapy.astro.population.YusifovKucuk2004B.render", false]], "reorder_axes() (gammapy.maps.hpxmap method)": [[192, "gammapy.maps.HpxMap.reorder_axes", false]], "reorder_axes() (gammapy.maps.hpxndmap method)": [[193, "gammapy.maps.HpxNDMap.reorder_axes", false]], "reorder_axes() (gammapy.maps.map method)": [[195, "gammapy.maps.Map.reorder_axes", false]], "reorder_axes() (gammapy.maps.regionndmap method)": [[201, "gammapy.maps.RegionNDMap.reorder_axes", false]], "reorder_axes() (gammapy.maps.wcsmap method)": [[204, "gammapy.maps.WcsMap.reorder_axes", false]], "reorder_axes() (gammapy.maps.wcsndmap method)": [[205, "gammapy.maps.WcsNDMap.reorder_axes", false]], "replace() (gammapy.maps.mapaxes method)": [[196, "gammapy.maps.MapAxes.replace", false]], "replace_axis() (gammapy.maps.geom method)": [[190, "gammapy.maps.Geom.replace_axis", false]], "replace_axis() (gammapy.maps.hpxgeom method)": [[191, "gammapy.maps.HpxGeom.replace_axis", false]], "replace_axis() (gammapy.maps.regiongeom method)": [[200, "gammapy.maps.RegionGeom.replace_axis", false]], "replace_axis() (gammapy.maps.wcsgeom method)": [[203, "gammapy.maps.WcsGeom.replace_axis", false]], "replace_column() (gammapy.data.hduindextable method)": [[87, "gammapy.data.HDUIndexTable.replace_column", false]], "replace_column() (gammapy.data.observationtable method)": [[91, "gammapy.data.ObservationTable.replace_column", false]], "reproject_by_image() (gammapy.maps.hpxmap method)": [[192, "gammapy.maps.HpxMap.reproject_by_image", false]], "reproject_by_image() (gammapy.maps.hpxndmap method)": [[193, "gammapy.maps.HpxNDMap.reproject_by_image", false]], "reproject_by_image() (gammapy.maps.map method)": [[195, "gammapy.maps.Map.reproject_by_image", false]], "reproject_by_image() (gammapy.maps.regionndmap method)": [[201, "gammapy.maps.RegionNDMap.reproject_by_image", false]], "reproject_by_image() (gammapy.maps.wcsmap method)": [[204, "gammapy.maps.WcsMap.reproject_by_image", false]], "reproject_by_image() (gammapy.maps.wcsndmap method)": [[205, "gammapy.maps.WcsNDMap.reproject_by_image", false]], "reproject_to_geom() (gammapy.maps.hpxmap method)": [[192, "gammapy.maps.HpxMap.reproject_to_geom", false]], "reproject_to_geom() (gammapy.maps.hpxndmap method)": [[193, "gammapy.maps.HpxNDMap.reproject_to_geom", false]], "reproject_to_geom() (gammapy.maps.map method)": [[195, "gammapy.maps.Map.reproject_to_geom", false]], "reproject_to_geom() (gammapy.maps.regionndmap method)": [[201, "gammapy.maps.RegionNDMap.reproject_to_geom", false]], "reproject_to_geom() (gammapy.maps.wcsmap method)": [[204, "gammapy.maps.WcsMap.reproject_to_geom", false]], "reproject_to_geom() (gammapy.maps.wcsndmap method)": [[205, "gammapy.maps.WcsNDMap.reproject_to_geom", false]], "required_axes (gammapy.irf.background2d attribute)": [[146, "gammapy.irf.Background2D.required_axes", false]], "required_axes (gammapy.irf.background3d attribute)": [[147, "gammapy.irf.Background3D.required_axes", false]], "required_axes (gammapy.irf.backgroundirf attribute)": [[148, "gammapy.irf.BackgroundIRF.required_axes", false]], "required_axes (gammapy.irf.edispkernel attribute)": [[149, "gammapy.irf.EDispKernel.required_axes", false]], "required_axes (gammapy.irf.edispkernelmap attribute)": [[150, "gammapy.irf.EDispKernelMap.required_axes", false]], "required_axes (gammapy.irf.edispmap attribute)": [[151, "gammapy.irf.EDispMap.required_axes", false]], "required_axes (gammapy.irf.effectiveareatable2d attribute)": [[152, "gammapy.irf.EffectiveAreaTable2D.required_axes", false]], "required_axes (gammapy.irf.energydependentmultigausspsf attribute)": [[153, "gammapy.irf.EnergyDependentMultiGaussPSF.required_axes", false]], "required_axes (gammapy.irf.energydispersion2d attribute)": [[154, "gammapy.irf.EnergyDispersion2D.required_axes", false]], "required_axes (gammapy.irf.irf attribute)": [[156, "gammapy.irf.IRF.required_axes", false]], "required_axes (gammapy.irf.irfmap attribute)": [[157, "gammapy.irf.IRFMap.required_axes", false]], "required_axes (gammapy.irf.parametricpsf attribute)": [[163, "gammapy.irf.ParametricPSF.required_axes", false]], "required_axes (gammapy.irf.psf3d attribute)": [[159, "gammapy.irf.PSF3D.required_axes", false]], "required_axes (gammapy.irf.psfking attribute)": [[161, "gammapy.irf.PSFKing.required_axes", false]], "required_axes (gammapy.irf.psfmap attribute)": [[162, "gammapy.irf.PSFMap.required_axes", false]], "required_axes (gammapy.irf.radmax2d attribute)": [[164, "gammapy.irf.RadMax2D.required_axes", false]], "required_axes (gammapy.irf.recopsfmap attribute)": [[165, "gammapy.irf.RecoPSFMap.required_axes", false]], "required_parameters (gammapy.irf.energydependentmultigausspsf attribute)": [[153, "gammapy.irf.EnergyDependentMultiGaussPSF.required_parameters", false]], "required_parameters (gammapy.irf.parametricpsf attribute)": [[163, "gammapy.irf.ParametricPSF.required_parameters", false]], "required_parameters (gammapy.irf.psfking attribute)": [[161, "gammapy.irf.PSFKing.required_parameters", false]], "requires_data() (in module gammapy.utils.testing)": [[356, "gammapy.utils.testing.requires_data", false]], "requires_dependency() (in module gammapy.utils.testing)": [[357, "gammapy.utils.testing.requires_dependency", false]], "resample() (gammapy.maps.hpxmap method)": [[192, "gammapy.maps.HpxMap.resample", false]], "resample() (gammapy.maps.hpxndmap method)": [[193, "gammapy.maps.HpxNDMap.resample", false]], "resample() (gammapy.maps.labelmapaxis method)": [[194, "gammapy.maps.LabelMapAxis.resample", false]], "resample() (gammapy.maps.map method)": [[195, "gammapy.maps.Map.resample", false]], "resample() (gammapy.maps.mapaxes method)": [[196, "gammapy.maps.MapAxes.resample", false]], "resample() (gammapy.maps.regionndmap method)": [[201, "gammapy.maps.RegionNDMap.resample", false]], "resample() (gammapy.maps.wcsmap method)": [[204, "gammapy.maps.WcsMap.resample", false]], "resample() (gammapy.maps.wcsndmap method)": [[205, "gammapy.maps.WcsNDMap.resample", false]], "resample_axis() (gammapy.estimators.fluxpoints method)": [[124, "gammapy.estimators.FluxPoints.resample_axis", false]], "resample_axis() (gammapy.maps.geom method)": [[190, "gammapy.maps.Geom.resample_axis", false]], "resample_axis() (gammapy.maps.hpxgeom method)": [[191, "gammapy.maps.HpxGeom.resample_axis", false]], "resample_axis() (gammapy.maps.hpxmap method)": [[192, "gammapy.maps.HpxMap.resample_axis", false]], "resample_axis() (gammapy.maps.hpxndmap method)": [[193, "gammapy.maps.HpxNDMap.resample_axis", false]], "resample_axis() (gammapy.maps.map method)": [[195, "gammapy.maps.Map.resample_axis", false]], "resample_axis() (gammapy.maps.regiongeom method)": [[200, "gammapy.maps.RegionGeom.resample_axis", false]], "resample_axis() (gammapy.maps.regionndmap method)": [[201, "gammapy.maps.RegionNDMap.resample_axis", false]], "resample_axis() (gammapy.maps.wcsgeom method)": [[203, "gammapy.maps.WcsGeom.resample_axis", false]], "resample_axis() (gammapy.maps.wcsmap method)": [[204, "gammapy.maps.WcsMap.resample_axis", false]], "resample_axis() (gammapy.maps.wcsndmap method)": [[205, "gammapy.maps.WcsNDMap.resample_axis", false]], "resample_energy_axis() (gammapy.datasets.mapdataset method)": [[102, "gammapy.datasets.MapDataset.resample_energy_axis", false]], "resample_energy_axis() (gammapy.datasets.mapdatasetonoff method)": [[105, "gammapy.datasets.MapDatasetOnOff.resample_energy_axis", false]], "resample_energy_axis() (gammapy.datasets.spectrumdataset method)": [[109, "gammapy.datasets.SpectrumDataset.resample_energy_axis", false]], "resample_energy_axis() (gammapy.datasets.spectrumdatasetonoff method)": [[110, "gammapy.datasets.SpectrumDatasetOnOff.resample_energy_axis", false]], "resample_energy_axis() (gammapy.irf.edispkernelmap method)": [[150, "gammapy.irf.EDispKernelMap.resample_energy_axis", false]], "resample_energy_edges() (in module gammapy.estimators.utils)": [[145, "gammapy.estimators.utils.resample_energy_edges", false]], "reset_data_cache() (gammapy.datasets.mapdataset method)": [[102, "gammapy.datasets.MapDataset.reset_data_cache", false]], "reset_data_cache() (gammapy.datasets.mapdatasetonoff method)": [[105, "gammapy.datasets.MapDatasetOnOff.reset_data_cache", false]], "reset_data_cache() (gammapy.datasets.spectrumdataset method)": [[109, "gammapy.datasets.SpectrumDataset.reset_data_cache", false]], "reset_data_cache() (gammapy.datasets.spectrumdatasetonoff method)": [[110, "gammapy.datasets.SpectrumDatasetOnOff.reset_data_cache", false]], "reset_to_default() (gammapy.modeling.models.fovbackgroundmodel method)": [[231, "gammapy.modeling.models.FoVBackgroundModel.reset_to_default", false]], "residuals() (gammapy.datasets.fluxpointsdataset method)": [[101, "gammapy.datasets.FluxPointsDataset.residuals", false]], "residuals() (gammapy.datasets.mapdataset method)": [[102, "gammapy.datasets.MapDataset.residuals", false]], "residuals() (gammapy.datasets.mapdatasetonoff method)": [[105, "gammapy.datasets.MapDatasetOnOff.residuals", false]], "residuals() (gammapy.datasets.spectrumdataset method)": [[109, "gammapy.datasets.SpectrumDataset.residuals", false]], "residuals() (gammapy.datasets.spectrumdatasetonoff method)": [[110, "gammapy.datasets.SpectrumDatasetOnOff.residuals", false]], "restore_status() (gammapy.modeling.models.datasetmodels method)": [[223, "gammapy.modeling.models.DatasetModels.restore_status", false]], "restore_status() (gammapy.modeling.models.models method)": [[245, "gammapy.modeling.models.Models.restore_status", false]], "restore_status() (gammapy.modeling.parameters method)": [[214, "gammapy.modeling.Parameters.restore_status", false]], "restore_status() (gammapy.modeling.priorparameters method)": [[216, "gammapy.modeling.PriorParameters.restore_status", false]], "return_units (gammapy.astro.population.casebattacharya1998 attribute)": [[28, "gammapy.astro.population.CaseBattacharya1998.return_units", false]], "return_units (gammapy.astro.population.exponential attribute)": [[29, "gammapy.astro.population.Exponential.return_units", false]], "return_units (gammapy.astro.population.faucherkaspi2006 attribute)": [[30, "gammapy.astro.population.FaucherKaspi2006.return_units", false]], "return_units (gammapy.astro.population.faucherkaspi2006velocitybimodal attribute)": [[31, "gammapy.astro.population.FaucherKaspi2006VelocityBimodal.return_units", false]], "return_units (gammapy.astro.population.faucherkaspi2006velocitymaxwellian attribute)": [[32, "gammapy.astro.population.FaucherKaspi2006VelocityMaxwellian.return_units", false]], "return_units (gammapy.astro.population.lorimer2006 attribute)": [[35, "gammapy.astro.population.Lorimer2006.return_units", false]], "return_units (gammapy.astro.population.paczynski1990 attribute)": [[36, "gammapy.astro.population.Paczynski1990.return_units", false]], "return_units (gammapy.astro.population.paczynski1990velocity attribute)": [[37, "gammapy.astro.population.Paczynski1990Velocity.return_units", false]], "return_units (gammapy.astro.population.yusifovkucuk2004 attribute)": [[39, "gammapy.astro.population.YusifovKucuk2004.return_units", false]], "return_units (gammapy.astro.population.yusifovkucuk2004b attribute)": [[40, "gammapy.astro.population.YusifovKucuk2004B.return_units", false]], "reverse (gammapy.maps.mapaxes attribute)": [[196, "gammapy.maps.MapAxes.reverse", false]], "reverse() (gammapy.data.hduindextable method)": [[87, "gammapy.data.HDUIndexTable.reverse", false]], "reverse() (gammapy.data.observations method)": [[92, "gammapy.data.Observations.reverse", false]], "reverse() (gammapy.data.observationtable method)": [[91, "gammapy.data.ObservationTable.reverse", false]], "reverse() (gammapy.datasets.datasets method)": [[100, "gammapy.datasets.Datasets.reverse", false]], "reverse() (gammapy.modeling.models.models method)": [[245, "gammapy.modeling.models.Models.reverse", false]], "reverse_lon_radec (gammapy.irf.fovalignment attribute)": [[155, "gammapy.irf.FoVAlignment.REVERSE_LON_RADEC", false]], "ring background": [[573, "term-Ring-Background", true]], "ringbackgroundmaker (class in gammapy.makers)": [[177, "gammapy.makers.RingBackgroundMaker", false]], "roi": [[573, "term-RoI", true]], "round() (gammapy.data.hduindextable method)": [[87, "gammapy.data.HDUIndexTable.round", false]], "round() (gammapy.data.observationtable method)": [[91, "gammapy.data.ObservationTable.round", false]], "round() (gammapy.maps.mapaxis method)": [[197, "gammapy.maps.MapAxis.round", false]], "row_idx() (gammapy.data.hduindextable method)": [[87, "gammapy.data.HDUIndexTable.row_idx", false]], "row_index (gammapy.catalog.sourcecatalogobject attribute)": [[69, "gammapy.catalog.SourceCatalogObject.row_index", false]], "row_index (gammapy.catalog.sourcecatalogobject1lhaaso attribute)": [[70, "gammapy.catalog.SourceCatalogObject1LHAASO.row_index", false]], "row_index (gammapy.catalog.sourcecatalogobject2fhl attribute)": [[71, "gammapy.catalog.SourceCatalogObject2FHL.row_index", false]], "row_index (gammapy.catalog.sourcecatalogobject2hwc attribute)": [[72, "gammapy.catalog.SourceCatalogObject2HWC.row_index", false]], "row_index (gammapy.catalog.sourcecatalogobject2pc attribute)": [[73, "gammapy.catalog.SourceCatalogObject2PC.row_index", false]], "row_index (gammapy.catalog.sourcecatalogobject3fgl attribute)": [[74, "gammapy.catalog.SourceCatalogObject3FGL.row_index", false]], "row_index (gammapy.catalog.sourcecatalogobject3fhl attribute)": [[75, "gammapy.catalog.SourceCatalogObject3FHL.row_index", false]], "row_index (gammapy.catalog.sourcecatalogobject3hwc attribute)": [[76, "gammapy.catalog.SourceCatalogObject3HWC.row_index", false]], "row_index (gammapy.catalog.sourcecatalogobject3pc attribute)": [[77, "gammapy.catalog.SourceCatalogObject3PC.row_index", false]], "row_index (gammapy.catalog.sourcecatalogobject4fgl attribute)": [[78, "gammapy.catalog.SourceCatalogObject4FGL.row_index", false]], "row_index (gammapy.catalog.sourcecatalogobjectgammacat attribute)": [[79, "gammapy.catalog.SourceCatalogObjectGammaCat.row_index", false]], "row_index (gammapy.catalog.sourcecatalogobjecthgps attribute)": [[80, "gammapy.catalog.SourceCatalogObjectHGPS.row_index", false]], "row_index (gammapy.catalog.sourcecatalogobjecthgpscomponent attribute)": [[81, "gammapy.catalog.SourceCatalogObjectHGPSComponent.row_index", false]], "row_index() (gammapy.catalog.sourcecatalog method)": [[56, "gammapy.catalog.SourceCatalog.row_index", false]], "row_index() (gammapy.catalog.sourcecatalog1lhaaso method)": [[57, "gammapy.catalog.SourceCatalog1LHAASO.row_index", false]], "row_index() (gammapy.catalog.sourcecatalog2fhl method)": [[58, "gammapy.catalog.SourceCatalog2FHL.row_index", false]], "row_index() (gammapy.catalog.sourcecatalog2hwc method)": [[59, "gammapy.catalog.SourceCatalog2HWC.row_index", false]], "row_index() (gammapy.catalog.sourcecatalog2pc method)": [[60, "gammapy.catalog.SourceCatalog2PC.row_index", false]], "row_index() (gammapy.catalog.sourcecatalog3fgl method)": [[61, "gammapy.catalog.SourceCatalog3FGL.row_index", false]], "row_index() (gammapy.catalog.sourcecatalog3fhl method)": [[62, "gammapy.catalog.SourceCatalog3FHL.row_index", false]], "row_index() (gammapy.catalog.sourcecatalog3hwc method)": [[63, "gammapy.catalog.SourceCatalog3HWC.row_index", false]], "row_index() (gammapy.catalog.sourcecatalog3pc method)": [[64, "gammapy.catalog.SourceCatalog3PC.row_index", false]], "row_index() (gammapy.catalog.sourcecatalog4fgl method)": [[65, "gammapy.catalog.SourceCatalog4FGL.row_index", false]], "row_index() (gammapy.catalog.sourcecataloggammacat method)": [[66, "gammapy.catalog.SourceCatalogGammaCat.row_index", false]], "row_index() (gammapy.catalog.sourcecataloghgps method)": [[67, "gammapy.catalog.SourceCatalogHGPS.row_index", false]], "run() (gammapy.data.observationseventssampler method)": [[93, "gammapy.data.ObservationsEventsSampler.run", false]], "run() (gammapy.datasets.mapdataseteventsampler method)": [[103, "gammapy.datasets.MapDatasetEventSampler.run", false]], "run() (gammapy.datasets.observationeventsampler method)": [[108, "gammapy.datasets.ObservationEventSampler.run", false]], "run() (gammapy.estimators.asmoothmapestimator method)": [[117, "gammapy.estimators.ASmoothMapEstimator.run", false]], "run() (gammapy.estimators.energydependentmorphologyestimator method)": [[119, "gammapy.estimators.EnergyDependentMorphologyEstimator.run", false]], "run() (gammapy.estimators.estimator method)": [[120, "gammapy.estimators.Estimator.run", false]], "run() (gammapy.estimators.excessmapestimator method)": [[121, "gammapy.estimators.ExcessMapEstimator.run", false]], "run() (gammapy.estimators.fluxpointsestimator method)": [[125, "gammapy.estimators.FluxPointsEstimator.run", false]], "run() (gammapy.estimators.fluxprofileestimator method)": [[126, "gammapy.estimators.FluxProfileEstimator.run", false]], "run() (gammapy.estimators.imageprofileestimator method)": [[128, "gammapy.estimators.ImageProfileEstimator.run", false]], "run() (gammapy.estimators.lightcurveestimator method)": [[129, "gammapy.estimators.LightCurveEstimator.run", false]], "run() (gammapy.estimators.parameterestimator method)": [[130, "gammapy.estimators.ParameterEstimator.run", false]], "run() (gammapy.estimators.sensitivityestimator method)": [[131, "gammapy.estimators.SensitivityEstimator.run", false]], "run() (gammapy.estimators.tsmapestimator method)": [[132, "gammapy.estimators.TSMapEstimator.run", false]], "run() (gammapy.makers.adaptiveringbackgroundmaker method)": [[167, "gammapy.makers.AdaptiveRingBackgroundMaker.run", false]], "run() (gammapy.makers.datasetsmaker method)": [[168, "gammapy.makers.DatasetsMaker.run", false]], "run() (gammapy.makers.fovbackgroundmaker method)": [[169, "gammapy.makers.FoVBackgroundMaker.run", false]], "run() (gammapy.makers.maker method)": [[171, "gammapy.makers.Maker.run", false]], "run() (gammapy.makers.mapdatasetmaker method)": [[172, "gammapy.makers.MapDatasetMaker.run", false]], "run() (gammapy.makers.phasebackgroundmaker method)": [[173, "gammapy.makers.PhaseBackgroundMaker.run", false]], "run() (gammapy.makers.reflectedregionsbackgroundmaker method)": [[174, "gammapy.makers.ReflectedRegionsBackgroundMaker.run", false]], "run() (gammapy.makers.reflectedregionsfinder method)": [[175, "gammapy.makers.ReflectedRegionsFinder.run", false]], "run() (gammapy.makers.regionsfinder method)": [[176, "gammapy.makers.RegionsFinder.run", false]], "run() (gammapy.makers.ringbackgroundmaker method)": [[177, "gammapy.makers.RingBackgroundMaker.run", false]], "run() (gammapy.makers.safemaskmaker method)": [[178, "gammapy.makers.SafeMaskMaker.run", false]], "run() (gammapy.makers.spectrumdatasetmaker method)": [[179, "gammapy.makers.SpectrumDatasetMaker.run", false]], "run() (gammapy.makers.wobbleregionsfinder method)": [[180, "gammapy.makers.WobbleRegionsFinder.run", false]], "run() (gammapy.modeling.fit method)": [[210, "gammapy.modeling.Fit.run", false]], "run() (gammapy.utils.testing.checker method)": [[351, "gammapy.utils.testing.Checker.run", false]], "run_fit() (gammapy.analysis.analysis method)": [[15, "gammapy.analysis.Analysis.run_fit", false]], "run_multiprocessing() (in module gammapy.utils.parallel)": [[325, "gammapy.utils.parallel.run_multiprocessing", false]], "safe_mask_maker (gammapy.makers.datasetsmaker attribute)": [[168, "gammapy.makers.DatasetsMaker.safe_mask_maker", false]], "safemaskmaker (class in gammapy.makers)": [[178, "gammapy.makers.SafeMaskMaker", false]], "sample() (gammapy.utils.random.inversecdfsampler method)": [[326, "gammapy.utils.random.InverseCDFSampler.sample", false]], "sample_axis() (gammapy.utils.random.inversecdfsampler method)": [[326, "gammapy.utils.random.InverseCDFSampler.sample_axis", false]], "sample_background() (gammapy.datasets.mapdataseteventsampler method)": [[103, "gammapy.datasets.MapDatasetEventSampler.sample_background", false]], "sample_background() (gammapy.datasets.observationeventsampler method)": [[108, "gammapy.datasets.ObservationEventSampler.sample_background", false]], "sample_coord() (gammapy.irf.edispmap method)": [[151, "gammapy.irf.EDispMap.sample_coord", false]], "sample_coord() (gammapy.irf.psfmap method)": [[162, "gammapy.irf.PSFMap.sample_coord", false]], "sample_coord() (gammapy.irf.recopsfmap method)": [[165, "gammapy.irf.RecoPSFMap.sample_coord", false]], "sample_coord() (gammapy.maps.hpxmap method)": [[192, "gammapy.maps.HpxMap.sample_coord", false]], "sample_coord() (gammapy.maps.hpxndmap method)": [[193, "gammapy.maps.HpxNDMap.sample_coord", false]], "sample_coord() (gammapy.maps.map method)": [[195, "gammapy.maps.Map.sample_coord", false]], "sample_coord() (gammapy.maps.regionndmap method)": [[201, "gammapy.maps.RegionNDMap.sample_coord", false]], "sample_coord() (gammapy.maps.wcsmap method)": [[204, "gammapy.maps.WcsMap.sample_coord", false]], "sample_coord() (gammapy.maps.wcsndmap method)": [[205, "gammapy.maps.WcsNDMap.sample_coord", false]], "sample_edisp() (gammapy.datasets.mapdataseteventsampler method)": [[103, "gammapy.datasets.MapDatasetEventSampler.sample_edisp", false]], "sample_edisp() (gammapy.datasets.observationeventsampler method)": [[108, "gammapy.datasets.ObservationEventSampler.sample_edisp", false]], "sample_powerlaw() (in module gammapy.utils.random)": [[331, "gammapy.utils.random.sample_powerlaw", false]], "sample_psf() (gammapy.datasets.mapdataseteventsampler method)": [[103, "gammapy.datasets.MapDatasetEventSampler.sample_psf", false]], "sample_psf() (gammapy.datasets.observationeventsampler method)": [[108, "gammapy.datasets.ObservationEventSampler.sample_psf", false]], "sample_sources() (gammapy.datasets.mapdataseteventsampler method)": [[103, "gammapy.datasets.MapDatasetEventSampler.sample_sources", false]], "sample_sources() (gammapy.datasets.observationeventsampler method)": [[108, "gammapy.datasets.ObservationEventSampler.sample_sources", false]], "sample_sphere() (in module gammapy.utils.random)": [[332, "gammapy.utils.random.sample_sphere", false]], "sample_sphere_distance() (in module gammapy.utils.random)": [[333, "gammapy.utils.random.sample_sphere_distance", false]], "sample_time() (gammapy.modeling.models.constanttemporalmodel method)": [[222, "gammapy.modeling.models.ConstantTemporalModel.sample_time", false]], "sample_time() (gammapy.modeling.models.expdecaytemporalmodel method)": [[230, "gammapy.modeling.models.ExpDecayTemporalModel.sample_time", false]], "sample_time() (gammapy.modeling.models.gaussiantemporalmodel method)": [[234, "gammapy.modeling.models.GaussianTemporalModel.sample_time", false]], "sample_time() (gammapy.modeling.models.generalizedgaussiantemporalmodel method)": [[236, "gammapy.modeling.models.GeneralizedGaussianTemporalModel.sample_time", false]], "sample_time() (gammapy.modeling.models.lightcurvetemplatetemporalmodel method)": [[237, "gammapy.modeling.models.LightCurveTemplateTemporalModel.sample_time", false]], "sample_time() (gammapy.modeling.models.lineartemporalmodel method)": [[238, "gammapy.modeling.models.LinearTemporalModel.sample_time", false]], "sample_time() (gammapy.modeling.models.powerlawtemporalmodel method)": [[253, "gammapy.modeling.models.PowerLawTemporalModel.sample_time", false]], "sample_time() (gammapy.modeling.models.sinetemporalmodel method)": [[260, "gammapy.modeling.models.SineTemporalModel.sample_time", false]], "sample_time() (gammapy.modeling.models.templatephasecurvetemporalmodel method)": [[272, "gammapy.modeling.models.TemplatePhaseCurveTemporalModel.sample_time", false]], "sample_time() (gammapy.modeling.models.temporalmodel method)": [[275, "gammapy.modeling.models.TemporalModel.sample_time", false]], "sample_times() (in module gammapy.utils.random)": [[334, "gammapy.utils.random.sample_times", false]], "scale (gammapy.astro.darkmatter.darkmatterannihilationspectralmodel attribute)": [[19, "gammapy.astro.darkmatter.DarkMatterAnnihilationSpectralModel.scale", false]], "scale (gammapy.astro.darkmatter.darkmatterdecayspectralmodel attribute)": [[20, "gammapy.astro.darkmatter.DarkMatterDecaySpectralModel.scale", false]], "scale (gammapy.modeling.parameter attribute)": [[213, "gammapy.modeling.Parameter.scale", false]], "scale (gammapy.modeling.priorparameter attribute)": [[215, "gammapy.modeling.PriorParameter.scale", false]], "scale_method (gammapy.modeling.parameter attribute)": [[213, "gammapy.modeling.Parameter.scale_method", false]], "scale_method (gammapy.modeling.priorparameter attribute)": [[215, "gammapy.modeling.PriorParameter.scale_method", false]], "scale_plot_flux() (in module gammapy.modeling.models)": [[281, "gammapy.modeling.models.scale_plot_flux", false]], "scale_to_local_density() (gammapy.astro.darkmatter.burkertprofile method)": [[17, "gammapy.astro.darkmatter.BurkertProfile.scale_to_local_density", false]], "scale_to_local_density() (gammapy.astro.darkmatter.dmprofile method)": [[18, "gammapy.astro.darkmatter.DMProfile.scale_to_local_density", false]], "scale_to_local_density() (gammapy.astro.darkmatter.einastoprofile method)": [[21, "gammapy.astro.darkmatter.EinastoProfile.scale_to_local_density", false]], "scale_to_local_density() (gammapy.astro.darkmatter.isothermalprofile method)": [[22, "gammapy.astro.darkmatter.IsothermalProfile.scale_to_local_density", false]], "scale_to_local_density() (gammapy.astro.darkmatter.mooreprofile method)": [[24, "gammapy.astro.darkmatter.MooreProfile.scale_to_local_density", false]], "scale_to_local_density() (gammapy.astro.darkmatter.nfwprofile method)": [[25, "gammapy.astro.darkmatter.NFWProfile.scale_to_local_density", false]], "scale_to_local_density() (gammapy.astro.darkmatter.zhaoprofile method)": [[27, "gammapy.astro.darkmatter.ZhaoProfile.scale_to_local_density", false]], "scaledregulargridinterpolator (class in gammapy.utils.interpolation)": [[316, "gammapy.utils.interpolation.ScaledRegularGridInterpolator", false]], "scalespectralmodel (class in gammapy.modeling.models)": [[257, "gammapy.modeling.models.ScaleSpectralModel", false]], "scan_max (gammapy.modeling.parameter attribute)": [[213, "gammapy.modeling.Parameter.scan_max", false]], "scan_max (gammapy.modeling.priorparameter attribute)": [[215, "gammapy.modeling.PriorParameter.scan_max", false]], "scan_min (gammapy.modeling.parameter attribute)": [[213, "gammapy.modeling.Parameter.scan_min", false]], "scan_min (gammapy.modeling.priorparameter attribute)": [[215, "gammapy.modeling.PriorParameter.scan_min", false]], "scan_n_sigma (gammapy.modeling.parameter attribute)": [[213, "gammapy.modeling.Parameter.scan_n_sigma", false]], "scan_n_sigma (gammapy.modeling.priorparameter attribute)": [[215, "gammapy.modeling.PriorParameter.scan_n_sigma", false]], "scan_values (gammapy.modeling.parameter attribute)": [[213, "gammapy.modeling.Parameter.scan_values", false]], "scan_values (gammapy.modeling.priorparameter attribute)": [[215, "gammapy.modeling.PriorParameter.scan_values", false]], "schema() (gammapy.analysis.analysisconfig class method)": [[16, "gammapy.analysis.AnalysisConfig.schema", false]], "schema() (gammapy.data.eventlistmetadata class method)": [[84, "gammapy.data.EventListMetaData.schema", false]], "schema() (gammapy.data.observationmetadata class method)": [[90, "gammapy.data.ObservationMetaData.schema", false]], "schema() (gammapy.datasets.mapdatasetmetadata class method)": [[104, "gammapy.datasets.MapDatasetMetaData.schema", false]], "schema() (gammapy.estimators.fluxmetadata class method)": [[123, "gammapy.estimators.FluxMetaData.schema", false]], "schema_json() (gammapy.analysis.analysisconfig class method)": [[16, "gammapy.analysis.AnalysisConfig.schema_json", false]], "schema_json() (gammapy.data.eventlistmetadata class method)": [[84, "gammapy.data.EventListMetaData.schema_json", false]], "schema_json() (gammapy.data.observationmetadata class method)": [[90, "gammapy.data.ObservationMetaData.schema_json", false]], "schema_json() (gammapy.datasets.mapdatasetmetadata class method)": [[104, "gammapy.datasets.MapDatasetMetaData.schema_json", false]], "schema_json() (gammapy.estimators.fluxmetadata class method)": [[123, "gammapy.estimators.FluxMetaData.schema_json", false]], "scipy_mvn (gammapy.modeling.covariance attribute)": [[208, "gammapy.modeling.Covariance.scipy_mvn", false]], "sed": [[573, "term-SED", true]], "sed_type_init (gammapy.estimators.fluxmaps attribute)": [[122, "gammapy.estimators.FluxMaps.sed_type_init", false]], "sed_type_init (gammapy.estimators.fluxpoints attribute)": [[124, "gammapy.estimators.FluxPoints.sed_type_init", false]], "sed_type_plot_default (gammapy.estimators.fluxmaps attribute)": [[122, "gammapy.estimators.FluxMaps.sed_type_plot_default", false]], "sed_type_plot_default (gammapy.estimators.fluxpoints attribute)": [[124, "gammapy.estimators.FluxPoints.sed_type_plot_default", false]], "sedov_taylor_begin (gammapy.astro.source.snr attribute)": [[52, "gammapy.astro.source.SNR.sedov_taylor_begin", false]], "sedov_taylor_begin (gammapy.astro.source.snrtruelovemckee attribute)": [[53, "gammapy.astro.source.SNRTrueloveMcKee.sedov_taylor_begin", false]], "sedov_taylor_end (gammapy.astro.source.snr attribute)": [[52, "gammapy.astro.source.SNR.sedov_taylor_end", false]], "sedov_taylor_end (gammapy.astro.source.snrtruelovemckee attribute)": [[53, "gammapy.astro.source.SNRTrueloveMcKee.sedov_taylor_end", false]], "select() (gammapy.modeling.models.datasetmodels method)": [[223, "gammapy.modeling.models.DatasetModels.select", false]], "select() (gammapy.modeling.models.models method)": [[245, "gammapy.modeling.models.Models.select", false]], "select() (gammapy.modeling.parameters method)": [[214, "gammapy.modeling.Parameters.select", false]], "select() (gammapy.modeling.priorparameters method)": [[216, "gammapy.modeling.PriorParameters.select", false]], "select_energy() (gammapy.data.eventlist method)": [[83, "gammapy.data.EventList.select_energy", false]], "select_from_geom() (gammapy.modeling.models.datasetmodels method)": [[223, "gammapy.modeling.models.DatasetModels.select_from_geom", false]], "select_from_geom() (gammapy.modeling.models.models method)": [[245, "gammapy.modeling.models.Models.select_from_geom", false]], "select_mask() (gammapy.data.eventlist method)": [[83, "gammapy.data.EventList.select_mask", false]], "select_mask() (gammapy.modeling.models.datasetmodels method)": [[223, "gammapy.modeling.models.DatasetModels.select_mask", false]], "select_mask() (gammapy.modeling.models.models method)": [[245, "gammapy.modeling.models.Models.select_mask", false]], "select_nested_models() (in module gammapy.modeling)": [[283, "gammapy.modeling.select_nested_models", false]], "select_obs_id() (gammapy.data.observationtable method)": [[91, "gammapy.data.ObservationTable.select_obs_id", false]], "select_observations() (gammapy.data.observationtable method)": [[91, "gammapy.data.ObservationTable.select_observations", false]], "select_offset() (gammapy.data.eventlist method)": [[83, "gammapy.data.EventList.select_offset", false]], "select_parameter() (gammapy.data.eventlist method)": [[83, "gammapy.data.EventList.select_parameter", false]], "select_rad_max() (gammapy.data.eventlist method)": [[83, "gammapy.data.EventList.select_rad_max", false]], "select_range() (gammapy.data.observationtable method)": [[91, "gammapy.data.ObservationTable.select_range", false]], "select_region() (gammapy.data.eventlist method)": [[83, "gammapy.data.EventList.select_region", false]], "select_region() (gammapy.modeling.models.datasetmodels method)": [[223, "gammapy.modeling.models.DatasetModels.select_region", false]], "select_region() (gammapy.modeling.models.models method)": [[245, "gammapy.modeling.models.Models.select_region", false]], "select_row_subset() (gammapy.data.eventlist method)": [[83, "gammapy.data.EventList.select_row_subset", false]], "select_sky_circle() (gammapy.data.observationtable method)": [[91, "gammapy.data.ObservationTable.select_sky_circle", false]], "select_time() (gammapy.data.eventlist method)": [[83, "gammapy.data.EventList.select_time", false]], "select_time() (gammapy.data.gti method)": [[86, "gammapy.data.GTI.select_time", false]], "select_time() (gammapy.data.observation method)": [[88, "gammapy.data.Observation.select_time", false]], "select_time() (gammapy.data.observations method)": [[92, "gammapy.data.Observations.select_time", false]], "select_time() (gammapy.datasets.datasets method)": [[100, "gammapy.datasets.Datasets.select_time", false]], "select_time_range() (gammapy.data.observationtable method)": [[91, "gammapy.data.ObservationTable.select_time_range", false]], "selection_all (gammapy.estimators.tsmapestimator attribute)": [[132, "gammapy.estimators.TSMapEstimator.selection_all", false]], "selection_all() (gammapy.estimators.asmoothmapestimator method)": [[117, "gammapy.estimators.ASmoothMapEstimator.selection_all", false]], "selection_mask() (gammapy.modeling.models.datasetmodels method)": [[223, "gammapy.modeling.models.DatasetModels.selection_mask", false]], "selection_mask() (gammapy.modeling.models.models method)": [[245, "gammapy.modeling.models.Models.selection_mask", false]], "selection_optional (gammapy.estimators.asmoothmapestimator attribute)": [[117, "gammapy.estimators.ASmoothMapEstimator.selection_optional", false]], "selection_optional (gammapy.estimators.energydependentmorphologyestimator attribute)": [[119, "gammapy.estimators.EnergyDependentMorphologyEstimator.selection_optional", false]], "selection_optional (gammapy.estimators.estimator attribute)": [[120, "gammapy.estimators.Estimator.selection_optional", false]], "selection_optional (gammapy.estimators.excessmapestimator attribute)": [[121, "gammapy.estimators.ExcessMapEstimator.selection_optional", false]], "selection_optional (gammapy.estimators.fluxpointsestimator attribute)": [[125, "gammapy.estimators.FluxPointsEstimator.selection_optional", false]], "selection_optional (gammapy.estimators.fluxprofileestimator attribute)": [[126, "gammapy.estimators.FluxProfileEstimator.selection_optional", false]], "selection_optional (gammapy.estimators.imageprofileestimator attribute)": [[128, "gammapy.estimators.ImageProfileEstimator.selection_optional", false]], "selection_optional (gammapy.estimators.lightcurveestimator attribute)": [[129, "gammapy.estimators.LightCurveEstimator.selection_optional", false]], "selection_optional (gammapy.estimators.parameterestimator attribute)": [[130, "gammapy.estimators.ParameterEstimator.selection_optional", false]], "selection_optional (gammapy.estimators.sensitivityestimator attribute)": [[131, "gammapy.estimators.SensitivityEstimator.selection_optional", false]], "selection_optional (gammapy.estimators.tsmapestimator attribute)": [[132, "gammapy.estimators.TSMapEstimator.selection_optional", false]], "sensitivityestimator (class in gammapy.estimators)": [[131, "gammapy.estimators.SensitivityEstimator", false]], "separable (gammapy.astro.population.casebattacharya1998 attribute)": [[28, "gammapy.astro.population.CaseBattacharya1998.separable", false]], "separable (gammapy.astro.population.exponential attribute)": [[29, "gammapy.astro.population.Exponential.separable", false]], "separable (gammapy.astro.population.faucherkaspi2006 attribute)": [[30, "gammapy.astro.population.FaucherKaspi2006.separable", false]], "separable (gammapy.astro.population.faucherkaspi2006velocitybimodal attribute)": [[31, "gammapy.astro.population.FaucherKaspi2006VelocityBimodal.separable", false]], "separable (gammapy.astro.population.faucherkaspi2006velocitymaxwellian attribute)": [[32, "gammapy.astro.population.FaucherKaspi2006VelocityMaxwellian.separable", false]], "separable (gammapy.astro.population.lorimer2006 attribute)": [[35, "gammapy.astro.population.Lorimer2006.separable", false]], "separable (gammapy.astro.population.paczynski1990 attribute)": [[36, "gammapy.astro.population.Paczynski1990.separable", false]], "separable (gammapy.astro.population.paczynski1990velocity attribute)": [[37, "gammapy.astro.population.Paczynski1990Velocity.separable", false]], "separable (gammapy.astro.population.yusifovkucuk2004 attribute)": [[39, "gammapy.astro.population.YusifovKucuk2004.separable", false]], "separable (gammapy.astro.population.yusifovkucuk2004b attribute)": [[40, "gammapy.astro.population.YusifovKucuk2004B.separable", false]], "separation() (gammapy.maps.hpxgeom method)": [[191, "gammapy.maps.HpxGeom.separation", false]], "separation() (gammapy.maps.regiongeom method)": [[200, "gammapy.maps.RegionGeom.separation", false]], "separation() (gammapy.maps.wcsgeom method)": [[203, "gammapy.maps.WcsGeom.separation", false]], "set_by_coord() (gammapy.maps.hpxmap method)": [[192, "gammapy.maps.HpxMap.set_by_coord", false]], "set_by_coord() (gammapy.maps.hpxndmap method)": [[193, "gammapy.maps.HpxNDMap.set_by_coord", false]], "set_by_coord() (gammapy.maps.map method)": [[195, "gammapy.maps.Map.set_by_coord", false]], "set_by_coord() (gammapy.maps.regionndmap method)": [[201, "gammapy.maps.RegionNDMap.set_by_coord", false]], "set_by_coord() (gammapy.maps.wcsmap method)": [[204, "gammapy.maps.WcsMap.set_by_coord", false]], "set_by_coord() (gammapy.maps.wcsndmap method)": [[205, "gammapy.maps.WcsNDMap.set_by_coord", false]], "set_by_idx() (gammapy.maps.hpxmap method)": [[192, "gammapy.maps.HpxMap.set_by_idx", false]], "set_by_idx() (gammapy.maps.hpxndmap method)": [[193, "gammapy.maps.HpxNDMap.set_by_idx", false]], "set_by_idx() (gammapy.maps.map method)": [[195, "gammapy.maps.Map.set_by_idx", false]], "set_by_idx() (gammapy.maps.regionndmap method)": [[201, "gammapy.maps.RegionNDMap.set_by_idx", false]], "set_by_idx() (gammapy.maps.wcsmap method)": [[204, "gammapy.maps.WcsMap.set_by_idx", false]], "set_by_idx() (gammapy.maps.wcsndmap method)": [[205, "gammapy.maps.WcsNDMap.set_by_idx", false]], "set_by_pix() (gammapy.maps.hpxmap method)": [[192, "gammapy.maps.HpxMap.set_by_pix", false]], "set_by_pix() (gammapy.maps.hpxndmap method)": [[193, "gammapy.maps.HpxNDMap.set_by_pix", false]], "set_by_pix() (gammapy.maps.map method)": [[195, "gammapy.maps.Map.set_by_pix", false]], "set_by_pix() (gammapy.maps.regionndmap method)": [[201, "gammapy.maps.RegionNDMap.set_by_pix", false]], "set_by_pix() (gammapy.maps.wcsmap method)": [[204, "gammapy.maps.WcsMap.set_by_pix", false]], "set_by_pix() (gammapy.maps.wcsndmap method)": [[205, "gammapy.maps.WcsNDMap.set_by_pix", false]], "set_logging() (gammapy.analysis.analysisconfig method)": [[16, "gammapy.analysis.AnalysisConfig.set_logging", false]], "set_models() (gammapy.analysis.analysis method)": [[15, "gammapy.analysis.Analysis.set_models", false]], "set_parameter_factors() (gammapy.modeling.parameters method)": [[214, "gammapy.modeling.Parameters.set_parameter_factors", false]], "set_parameter_factors() (gammapy.modeling.priorparameters method)": [[216, "gammapy.modeling.PriorParameters.set_parameter_factors", false]], "set_parameters_bounds() (gammapy.modeling.models.datasetmodels method)": [[223, "gammapy.modeling.models.DatasetModels.set_parameters_bounds", false]], "set_parameters_bounds() (gammapy.modeling.models.models method)": [[245, "gammapy.modeling.models.Models.set_parameters_bounds", false]], "set_prior() (gammapy.modeling.models.models method)": [[245, "gammapy.modeling.models.Models.set_prior", false]], "set_slice_args() (gammapy.astro.population.casebattacharya1998 method)": [[28, "gammapy.astro.population.CaseBattacharya1998.set_slice_args", false]], "set_slice_args() (gammapy.astro.population.exponential method)": [[29, "gammapy.astro.population.Exponential.set_slice_args", false]], "set_slice_args() (gammapy.astro.population.faucherkaspi2006 method)": [[30, "gammapy.astro.population.FaucherKaspi2006.set_slice_args", false]], "set_slice_args() (gammapy.astro.population.faucherkaspi2006velocitybimodal method)": [[31, "gammapy.astro.population.FaucherKaspi2006VelocityBimodal.set_slice_args", false]], "set_slice_args() (gammapy.astro.population.faucherkaspi2006velocitymaxwellian method)": [[32, "gammapy.astro.population.FaucherKaspi2006VelocityMaxwellian.set_slice_args", false]], "set_slice_args() (gammapy.astro.population.lorimer2006 method)": [[35, "gammapy.astro.population.Lorimer2006.set_slice_args", false]], "set_slice_args() (gammapy.astro.population.paczynski1990 method)": [[36, "gammapy.astro.population.Paczynski1990.set_slice_args", false]], "set_slice_args() (gammapy.astro.population.paczynski1990velocity method)": [[37, "gammapy.astro.population.Paczynski1990Velocity.set_slice_args", false]], "set_slice_args() (gammapy.astro.population.yusifovkucuk2004 method)": [[39, "gammapy.astro.population.YusifovKucuk2004.set_slice_args", false]], "set_slice_args() (gammapy.astro.population.yusifovkucuk2004b method)": [[40, "gammapy.astro.population.YusifovKucuk2004B.set_slice_args", false]], "set_subcovariance() (gammapy.modeling.covariance method)": [[208, "gammapy.modeling.Covariance.set_subcovariance", false]], "setdefault() (gammapy.maps.maps method)": [[199, "gammapy.maps.Maps.setdefault", false]], "shape (gammapy.maps.mapaxes attribute)": [[196, "gammapy.maps.MapAxes.shape", false]], "shape (gammapy.maps.mapcoord attribute)": [[198, "gammapy.maps.MapCoord.shape", false]], "shape (gammapy.modeling.covariance attribute)": [[208, "gammapy.modeling.Covariance.shape", false]], "shape_axes (gammapy.maps.hpxgeom attribute)": [[191, "gammapy.maps.HpxGeom.shape_axes", false]], "shape_axes (gammapy.maps.wcsgeom attribute)": [[203, "gammapy.maps.WcsGeom.shape_axes", false]], "shell2spatialmodel (class in gammapy.modeling.models)": [[258, "gammapy.modeling.models.Shell2SpatialModel", false]], "shellspatialmodel (class in gammapy.modeling.models)": [[259, "gammapy.modeling.models.ShellSpatialModel", false]], "show_in_browser() (gammapy.data.hduindextable method)": [[87, "gammapy.data.HDUIndexTable.show_in_browser", false]], "show_in_browser() (gammapy.data.observationtable method)": [[91, "gammapy.data.ObservationTable.show_in_browser", false]], "show_in_notebook() (gammapy.data.hduindextable method)": [[87, "gammapy.data.HDUIndexTable.show_in_notebook", false]], "show_in_notebook() (gammapy.data.observationtable method)": [[91, "gammapy.data.ObservationTable.show_in_notebook", false]], "sigma (gammapy.astro.population.faucherkaspi2006 attribute)": [[30, "gammapy.astro.population.FaucherKaspi2006.sigma", false]], "sigma (gammapy.astro.population.faucherkaspi2006velocitymaxwellian attribute)": [[32, "gammapy.astro.population.FaucherKaspi2006VelocityMaxwellian.sigma", false]], "sigma (gammapy.modeling.models.gaussianspatialmodel attribute)": [[232, "gammapy.modeling.models.GaussianSpatialModel.sigma", false]], "sigma (gammapy.modeling.models.gaussianspectralmodel attribute)": [[233, "gammapy.modeling.models.GaussianSpectralModel.sigma", false]], "sigma (gammapy.modeling.models.gaussiantemporalmodel attribute)": [[234, "gammapy.modeling.models.GaussianTemporalModel.sigma", false]], "sigma_1 (gammapy.astro.population.faucherkaspi2006velocitybimodal attribute)": [[31, "gammapy.astro.population.FaucherKaspi2006VelocityBimodal.sigma_1", false]], "sigma_2 (gammapy.astro.population.faucherkaspi2006velocitybimodal attribute)": [[31, "gammapy.astro.population.FaucherKaspi2006VelocityBimodal.sigma_2", false]], "simplepulsar (class in gammapy.astro.source)": [[54, "gammapy.astro.source.SimplePulsar", false]], "simulate_observation() (gammapy.data.observationseventssampler method)": [[93, "gammapy.data.ObservationsEventsSampler.simulate_observation", false]], "sinetemporalmodel (class in gammapy.modeling.models)": [[260, "gammapy.modeling.models.SineTemporalModel", false]], "size (gammapy.maps.mapcoord attribute)": [[198, "gammapy.maps.MapCoord.size", false]], "sky_model() (gammapy.catalog.sourcecatalogobject1lhaaso method)": [[70, "gammapy.catalog.SourceCatalogObject1LHAASO.sky_model", false]], "sky_model() (gammapy.catalog.sourcecatalogobject2fhl method)": [[71, "gammapy.catalog.SourceCatalogObject2FHL.sky_model", false]], "sky_model() (gammapy.catalog.sourcecatalogobject2hwc method)": [[72, "gammapy.catalog.SourceCatalogObject2HWC.sky_model", false]], "sky_model() (gammapy.catalog.sourcecatalogobject2pc method)": [[73, "gammapy.catalog.SourceCatalogObject2PC.sky_model", false]], "sky_model() (gammapy.catalog.sourcecatalogobject3fgl method)": [[74, "gammapy.catalog.SourceCatalogObject3FGL.sky_model", false]], "sky_model() (gammapy.catalog.sourcecatalogobject3fhl method)": [[75, "gammapy.catalog.SourceCatalogObject3FHL.sky_model", false]], "sky_model() (gammapy.catalog.sourcecatalogobject3hwc method)": [[76, "gammapy.catalog.SourceCatalogObject3HWC.sky_model", false]], "sky_model() (gammapy.catalog.sourcecatalogobject3pc method)": [[77, "gammapy.catalog.SourceCatalogObject3PC.sky_model", false]], "sky_model() (gammapy.catalog.sourcecatalogobject4fgl method)": [[78, "gammapy.catalog.SourceCatalogObject4FGL.sky_model", false]], "sky_model() (gammapy.catalog.sourcecatalogobjectgammacat method)": [[79, "gammapy.catalog.SourceCatalogObjectGammaCat.sky_model", false]], "sky_model() (gammapy.catalog.sourcecatalogobjecthgps method)": [[80, "gammapy.catalog.SourceCatalogObjectHGPS.sky_model", false]], "sky_to_fov() (in module gammapy.utils.coordinates)": [[310, "gammapy.utils.coordinates.sky_to_fov", false]], "skycoord (gammapy.maps.mapcoord attribute)": [[198, "gammapy.maps.MapCoord.skycoord", false]], "skymodel (class in gammapy.modeling.models)": [[261, "gammapy.modeling.models.SkyModel", false]], "slice() (gammapy.maps.labelmapaxis method)": [[194, "gammapy.maps.LabelMapAxis.slice", false]], "slice() (gammapy.maps.mapaxis method)": [[197, "gammapy.maps.MapAxis.slice", false]], "slice() (gammapy.maps.timemapaxis method)": [[202, "gammapy.maps.TimeMapAxis.slice", false]], "slice_by_coord() (gammapy.estimators.fluxmaps method)": [[122, "gammapy.estimators.FluxMaps.slice_by_coord", false]], "slice_by_coord() (gammapy.estimators.fluxpoints method)": [[124, "gammapy.estimators.FluxPoints.slice_by_coord", false]], "slice_by_energy() (gammapy.datasets.datasets method)": [[100, "gammapy.datasets.Datasets.slice_by_energy", false]], "slice_by_energy() (gammapy.datasets.mapdataset method)": [[102, "gammapy.datasets.MapDataset.slice_by_energy", false]], "slice_by_energy() (gammapy.datasets.mapdatasetonoff method)": [[105, "gammapy.datasets.MapDatasetOnOff.slice_by_energy", false]], "slice_by_energy() (gammapy.datasets.spectrumdataset method)": [[109, "gammapy.datasets.SpectrumDataset.slice_by_energy", false]], "slice_by_energy() (gammapy.datasets.spectrumdatasetonoff method)": [[110, "gammapy.datasets.SpectrumDatasetOnOff.slice_by_energy", false]], "slice_by_energy() (gammapy.estimators.fluxmaps method)": [[122, "gammapy.estimators.FluxMaps.slice_by_energy", false]], "slice_by_energy() (gammapy.estimators.fluxpoints method)": [[124, "gammapy.estimators.FluxPoints.slice_by_energy", false]], "slice_by_energy() (gammapy.modeling.models.templatenpredmodel method)": [[271, "gammapy.modeling.models.TemplateNPredModel.slice_by_energy", false]], "slice_by_idx() (gammapy.datasets.mapdataset method)": [[102, "gammapy.datasets.MapDataset.slice_by_idx", false]], "slice_by_idx() (gammapy.datasets.mapdatasetonoff method)": [[105, "gammapy.datasets.MapDatasetOnOff.slice_by_idx", false]], "slice_by_idx() (gammapy.datasets.spectrumdataset method)": [[109, "gammapy.datasets.SpectrumDataset.slice_by_idx", false]], "slice_by_idx() (gammapy.datasets.spectrumdatasetonoff method)": [[110, "gammapy.datasets.SpectrumDatasetOnOff.slice_by_idx", false]], "slice_by_idx() (gammapy.estimators.fluxmaps method)": [[122, "gammapy.estimators.FluxMaps.slice_by_idx", false]], "slice_by_idx() (gammapy.estimators.fluxpoints method)": [[124, "gammapy.estimators.FluxPoints.slice_by_idx", false]], "slice_by_idx() (gammapy.irf.background2d method)": [[146, "gammapy.irf.Background2D.slice_by_idx", false]], "slice_by_idx() (gammapy.irf.background3d method)": [[147, "gammapy.irf.Background3D.slice_by_idx", false]], "slice_by_idx() (gammapy.irf.backgroundirf method)": [[148, "gammapy.irf.BackgroundIRF.slice_by_idx", false]], "slice_by_idx() (gammapy.irf.edispkernel method)": [[149, "gammapy.irf.EDispKernel.slice_by_idx", false]], "slice_by_idx() (gammapy.irf.edispkernelmap method)": [[150, "gammapy.irf.EDispKernelMap.slice_by_idx", false]], "slice_by_idx() (gammapy.irf.edispmap method)": [[151, "gammapy.irf.EDispMap.slice_by_idx", false]], "slice_by_idx() (gammapy.irf.effectiveareatable2d method)": [[152, "gammapy.irf.EffectiveAreaTable2D.slice_by_idx", false]], "slice_by_idx() (gammapy.irf.energydependentmultigausspsf method)": [[153, "gammapy.irf.EnergyDependentMultiGaussPSF.slice_by_idx", false]], "slice_by_idx() (gammapy.irf.energydispersion2d method)": [[154, "gammapy.irf.EnergyDispersion2D.slice_by_idx", false]], "slice_by_idx() (gammapy.irf.irf method)": [[156, "gammapy.irf.IRF.slice_by_idx", false]], "slice_by_idx() (gammapy.irf.irfmap method)": [[157, "gammapy.irf.IRFMap.slice_by_idx", false]], "slice_by_idx() (gammapy.irf.parametricpsf method)": [[163, "gammapy.irf.ParametricPSF.slice_by_idx", false]], "slice_by_idx() (gammapy.irf.psf3d method)": [[159, "gammapy.irf.PSF3D.slice_by_idx", false]], "slice_by_idx() (gammapy.irf.psfkernel method)": [[160, "gammapy.irf.PSFKernel.slice_by_idx", false]], "slice_by_idx() (gammapy.irf.psfking method)": [[161, "gammapy.irf.PSFKing.slice_by_idx", false]], "slice_by_idx() (gammapy.irf.psfmap method)": [[162, "gammapy.irf.PSFMap.slice_by_idx", false]], "slice_by_idx() (gammapy.irf.radmax2d method)": [[164, "gammapy.irf.RadMax2D.slice_by_idx", false]], "slice_by_idx() (gammapy.irf.recopsfmap method)": [[165, "gammapy.irf.RecoPSFMap.slice_by_idx", false]], "slice_by_idx() (gammapy.maps.geom method)": [[190, "gammapy.maps.Geom.slice_by_idx", false]], "slice_by_idx() (gammapy.maps.hpxgeom method)": [[191, "gammapy.maps.HpxGeom.slice_by_idx", false]], "slice_by_idx() (gammapy.maps.hpxmap method)": [[192, "gammapy.maps.HpxMap.slice_by_idx", false]], "slice_by_idx() (gammapy.maps.hpxndmap method)": [[193, "gammapy.maps.HpxNDMap.slice_by_idx", false]], "slice_by_idx() (gammapy.maps.map method)": [[195, "gammapy.maps.Map.slice_by_idx", false]], "slice_by_idx() (gammapy.maps.mapaxes method)": [[196, "gammapy.maps.MapAxes.slice_by_idx", false]], "slice_by_idx() (gammapy.maps.regiongeom method)": [[200, "gammapy.maps.RegionGeom.slice_by_idx", false]], "slice_by_idx() (gammapy.maps.regionndmap method)": [[201, "gammapy.maps.RegionNDMap.slice_by_idx", false]], "slice_by_idx() (gammapy.maps.wcsgeom method)": [[203, "gammapy.maps.WcsGeom.slice_by_idx", false]], "slice_by_idx() (gammapy.maps.wcsmap method)": [[204, "gammapy.maps.WcsMap.slice_by_idx", false]], "slice_by_idx() (gammapy.maps.wcsndmap method)": [[205, "gammapy.maps.WcsNDMap.slice_by_idx", false]], "slice_by_time() (gammapy.estimators.fluxmaps method)": [[122, "gammapy.estimators.FluxMaps.slice_by_time", false]], "slice_by_time() (gammapy.estimators.fluxpoints method)": [[124, "gammapy.estimators.FluxPoints.slice_by_time", false]], "smooth() (gammapy.estimators.imageprofile method)": [[127, "gammapy.estimators.ImageProfile.smooth", false]], "smooth() (gammapy.maps.hpxndmap method)": [[193, "gammapy.maps.HpxNDMap.smooth", false]], "smooth() (gammapy.maps.wcsndmap method)": [[205, "gammapy.maps.WcsNDMap.smooth", false]], "smoothbrokenpowerlawspectralmodel (class in gammapy.modeling.models)": [[262, "gammapy.modeling.models.SmoothBrokenPowerLawSpectralModel", false]], "snr (class in gammapy.astro.source)": [[52, "gammapy.astro.source.SNR", false]], "snrtruelovemckee (class in gammapy.astro.source)": [[53, "gammapy.astro.source.SNRTrueloveMcKee", false]], "solid_angle() (gammapy.maps.geom method)": [[190, "gammapy.maps.Geom.solid_angle", false]], "solid_angle() (gammapy.maps.hpxgeom method)": [[191, "gammapy.maps.HpxGeom.solid_angle", false]], "solid_angle() (gammapy.maps.regiongeom method)": [[200, "gammapy.maps.RegionGeom.solid_angle", false]], "solid_angle() (gammapy.maps.wcsgeom method)": [[203, "gammapy.maps.WcsGeom.solid_angle", false]], "sort() (gammapy.data.hduindextable method)": [[87, "gammapy.data.HDUIndexTable.sort", false]], "sort() (gammapy.data.observationtable method)": [[91, "gammapy.data.ObservationTable.sort", false]], "source_name() (gammapy.catalog.sourcecatalog method)": [[56, "gammapy.catalog.SourceCatalog.source_name", false]], "source_name() (gammapy.catalog.sourcecatalog1lhaaso method)": [[57, "gammapy.catalog.SourceCatalog1LHAASO.source_name", false]], "source_name() (gammapy.catalog.sourcecatalog2fhl method)": [[58, "gammapy.catalog.SourceCatalog2FHL.source_name", false]], "source_name() (gammapy.catalog.sourcecatalog2hwc method)": [[59, "gammapy.catalog.SourceCatalog2HWC.source_name", false]], "source_name() (gammapy.catalog.sourcecatalog2pc method)": [[60, "gammapy.catalog.SourceCatalog2PC.source_name", false]], "source_name() (gammapy.catalog.sourcecatalog3fgl method)": [[61, "gammapy.catalog.SourceCatalog3FGL.source_name", false]], "source_name() (gammapy.catalog.sourcecatalog3fhl method)": [[62, "gammapy.catalog.SourceCatalog3FHL.source_name", false]], "source_name() (gammapy.catalog.sourcecatalog3hwc method)": [[63, "gammapy.catalog.SourceCatalog3HWC.source_name", false]], "source_name() (gammapy.catalog.sourcecatalog3pc method)": [[64, "gammapy.catalog.SourceCatalog3PC.source_name", false]], "source_name() (gammapy.catalog.sourcecatalog4fgl method)": [[65, "gammapy.catalog.SourceCatalog4FGL.source_name", false]], "source_name() (gammapy.catalog.sourcecataloggammacat method)": [[66, "gammapy.catalog.SourceCatalogGammaCat.source_name", false]], "source_name() (gammapy.catalog.sourcecataloghgps method)": [[67, "gammapy.catalog.SourceCatalogHGPS.source_name", false]], "sourcecatalog (class in gammapy.catalog)": [[56, "gammapy.catalog.SourceCatalog", false]], "sourcecatalog1lhaaso (class in gammapy.catalog)": [[57, "gammapy.catalog.SourceCatalog1LHAASO", false]], "sourcecatalog2fhl (class in gammapy.catalog)": [[58, "gammapy.catalog.SourceCatalog2FHL", false]], "sourcecatalog2hwc (class in gammapy.catalog)": [[59, "gammapy.catalog.SourceCatalog2HWC", false]], "sourcecatalog2pc (class in gammapy.catalog)": [[60, "gammapy.catalog.SourceCatalog2PC", false]], "sourcecatalog3fgl (class in gammapy.catalog)": [[61, "gammapy.catalog.SourceCatalog3FGL", false]], "sourcecatalog3fhl (class in gammapy.catalog)": [[62, "gammapy.catalog.SourceCatalog3FHL", false]], "sourcecatalog3hwc (class in gammapy.catalog)": [[63, "gammapy.catalog.SourceCatalog3HWC", false]], "sourcecatalog3pc (class in gammapy.catalog)": [[64, "gammapy.catalog.SourceCatalog3PC", false]], "sourcecatalog4fgl (class in gammapy.catalog)": [[65, "gammapy.catalog.SourceCatalog4FGL", false]], "sourcecataloggammacat (class in gammapy.catalog)": [[66, "gammapy.catalog.SourceCatalogGammaCat", false]], "sourcecataloghgps (class in gammapy.catalog)": [[67, "gammapy.catalog.SourceCatalogHGPS", false]], "sourcecataloglargescalehgps (class in gammapy.catalog)": [[68, "gammapy.catalog.SourceCatalogLargeScaleHGPS", false]], "sourcecatalogobject (class in gammapy.catalog)": [[69, "gammapy.catalog.SourceCatalogObject", false]], "sourcecatalogobject1lhaaso (class in gammapy.catalog)": [[70, "gammapy.catalog.SourceCatalogObject1LHAASO", false]], "sourcecatalogobject2fhl (class in gammapy.catalog)": [[71, "gammapy.catalog.SourceCatalogObject2FHL", false]], "sourcecatalogobject2hwc (class in gammapy.catalog)": [[72, "gammapy.catalog.SourceCatalogObject2HWC", false]], "sourcecatalogobject2pc (class in gammapy.catalog)": [[73, "gammapy.catalog.SourceCatalogObject2PC", false]], "sourcecatalogobject3fgl (class in gammapy.catalog)": [[74, "gammapy.catalog.SourceCatalogObject3FGL", false]], "sourcecatalogobject3fhl (class in gammapy.catalog)": [[75, "gammapy.catalog.SourceCatalogObject3FHL", false]], "sourcecatalogobject3hwc (class in gammapy.catalog)": [[76, "gammapy.catalog.SourceCatalogObject3HWC", false]], "sourcecatalogobject3pc (class in gammapy.catalog)": [[77, "gammapy.catalog.SourceCatalogObject3PC", false]], "sourcecatalogobject4fgl (class in gammapy.catalog)": [[78, "gammapy.catalog.SourceCatalogObject4FGL", false]], "sourcecatalogobjectgammacat (class in gammapy.catalog)": [[79, "gammapy.catalog.SourceCatalogObjectGammaCat", false]], "sourcecatalogobjecthgps (class in gammapy.catalog)": [[80, "gammapy.catalog.SourceCatalogObjectHGPS", false]], "sourcecatalogobjecthgpscomponent (class in gammapy.catalog)": [[81, "gammapy.catalog.SourceCatalogObjectHGPSComponent", false]], "spatial_model (gammapy.modeling.models.fovbackgroundmodel attribute)": [[231, "gammapy.modeling.models.FoVBackgroundModel.spatial_model", false]], "spatial_model (gammapy.modeling.models.skymodel attribute)": [[261, "gammapy.modeling.models.SkyModel.spatial_model", false]], "spatial_model() (gammapy.catalog.sourcecatalogobject1lhaaso method)": [[70, "gammapy.catalog.SourceCatalogObject1LHAASO.spatial_model", false]], "spatial_model() (gammapy.catalog.sourcecatalogobject2fhl method)": [[71, "gammapy.catalog.SourceCatalogObject2FHL.spatial_model", false]], "spatial_model() (gammapy.catalog.sourcecatalogobject2hwc method)": [[72, "gammapy.catalog.SourceCatalogObject2HWC.spatial_model", false]], "spatial_model() (gammapy.catalog.sourcecatalogobject2pc method)": [[73, "gammapy.catalog.SourceCatalogObject2PC.spatial_model", false]], "spatial_model() (gammapy.catalog.sourcecatalogobject3fgl method)": [[74, "gammapy.catalog.SourceCatalogObject3FGL.spatial_model", false]], "spatial_model() (gammapy.catalog.sourcecatalogobject3fhl method)": [[75, "gammapy.catalog.SourceCatalogObject3FHL.spatial_model", false]], "spatial_model() (gammapy.catalog.sourcecatalogobject3hwc method)": [[76, "gammapy.catalog.SourceCatalogObject3HWC.spatial_model", false]], "spatial_model() (gammapy.catalog.sourcecatalogobject3pc method)": [[77, "gammapy.catalog.SourceCatalogObject3PC.spatial_model", false]], "spatial_model() (gammapy.catalog.sourcecatalogobject4fgl method)": [[78, "gammapy.catalog.SourceCatalogObject4FGL.spatial_model", false]], "spatial_model() (gammapy.catalog.sourcecatalogobjectgammacat method)": [[79, "gammapy.catalog.SourceCatalogObjectGammaCat.spatial_model", false]], "spatial_model() (gammapy.catalog.sourcecatalogobjecthgps method)": [[80, "gammapy.catalog.SourceCatalogObjectHGPS.spatial_model", false]], "spatial_model() (gammapy.catalog.sourcecatalogobjecthgpscomponent method)": [[81, "gammapy.catalog.SourceCatalogObjectHGPSComponent.spatial_model", false]], "spatial_model_registry (in module gammapy.modeling.models)": [[255, "gammapy.modeling.models.SPATIAL_MODEL_REGISTRY", false]], "spatialmodel (class in gammapy.modeling.models)": [[263, "gammapy.modeling.models.SpatialModel", false]], "spectral_index() (gammapy.astro.darkmatter.darkmatterannihilationspectralmodel method)": [[19, "gammapy.astro.darkmatter.DarkMatterAnnihilationSpectralModel.spectral_index", false]], "spectral_index() (gammapy.astro.darkmatter.darkmatterdecayspectralmodel method)": [[20, "gammapy.astro.darkmatter.DarkMatterDecaySpectralModel.spectral_index", false]], "spectral_index() (gammapy.astro.darkmatter.primaryflux method)": [[26, "gammapy.astro.darkmatter.PrimaryFlux.spectral_index", false]], "spectral_index() (gammapy.modeling.models.brokenpowerlawspectralmodel method)": [[217, "gammapy.modeling.models.BrokenPowerLawSpectralModel.spectral_index", false]], "spectral_index() (gammapy.modeling.models.compoundspectralmodel method)": [[218, "gammapy.modeling.models.CompoundSpectralModel.spectral_index", false]], "spectral_index() (gammapy.modeling.models.constantspectralmodel method)": [[221, "gammapy.modeling.models.ConstantSpectralModel.spectral_index", false]], "spectral_index() (gammapy.modeling.models.eblabsorptionnormspectralmodel method)": [[225, "gammapy.modeling.models.EBLAbsorptionNormSpectralModel.spectral_index", false]], "spectral_index() (gammapy.modeling.models.expcutoffpowerlaw3fglspectralmodel method)": [[227, "gammapy.modeling.models.ExpCutoffPowerLaw3FGLSpectralModel.spectral_index", false]], "spectral_index() (gammapy.modeling.models.expcutoffpowerlawnormspectralmodel method)": [[228, "gammapy.modeling.models.ExpCutoffPowerLawNormSpectralModel.spectral_index", false]], "spectral_index() (gammapy.modeling.models.expcutoffpowerlawspectralmodel method)": [[229, "gammapy.modeling.models.ExpCutoffPowerLawSpectralModel.spectral_index", false]], "spectral_index() (gammapy.modeling.models.gaussianspectralmodel method)": [[233, "gammapy.modeling.models.GaussianSpectralModel.spectral_index", false]], "spectral_index() (gammapy.modeling.models.logparabolanormspectralmodel method)": [[239, "gammapy.modeling.models.LogParabolaNormSpectralModel.spectral_index", false]], "spectral_index() (gammapy.modeling.models.logparabolaspectralmodel method)": [[240, "gammapy.modeling.models.LogParabolaSpectralModel.spectral_index", false]], "spectral_index() (gammapy.modeling.models.meyercrabspectralmodel method)": [[242, "gammapy.modeling.models.MeyerCrabSpectralModel.spectral_index", false]], "spectral_index() (gammapy.modeling.models.naimaspectralmodel method)": [[246, "gammapy.modeling.models.NaimaSpectralModel.spectral_index", false]], "spectral_index() (gammapy.modeling.models.piecewisenormspectralmodel method)": [[248, "gammapy.modeling.models.PiecewiseNormSpectralModel.spectral_index", false]], "spectral_index() (gammapy.modeling.models.powerlaw2spectralmodel method)": [[250, "gammapy.modeling.models.PowerLaw2SpectralModel.spectral_index", false]], "spectral_index() (gammapy.modeling.models.powerlawnormspectralmodel method)": [[251, "gammapy.modeling.models.PowerLawNormSpectralModel.spectral_index", false]], "spectral_index() (gammapy.modeling.models.powerlawspectralmodel method)": [[252, "gammapy.modeling.models.PowerLawSpectralModel.spectral_index", false]], "spectral_index() (gammapy.modeling.models.scalespectralmodel method)": [[257, "gammapy.modeling.models.ScaleSpectralModel.spectral_index", false]], "spectral_index() (gammapy.modeling.models.smoothbrokenpowerlawspectralmodel method)": [[262, "gammapy.modeling.models.SmoothBrokenPowerLawSpectralModel.spectral_index", false]], "spectral_index() (gammapy.modeling.models.spectralmodel method)": [[264, "gammapy.modeling.models.SpectralModel.spectral_index", false]], "spectral_index() (gammapy.modeling.models.superexpcutoffpowerlaw3fglspectralmodel method)": [[265, "gammapy.modeling.models.SuperExpCutoffPowerLaw3FGLSpectralModel.spectral_index", false]], "spectral_index() (gammapy.modeling.models.superexpcutoffpowerlaw4fgldr3spectralmodel method)": [[266, "gammapy.modeling.models.SuperExpCutoffPowerLaw4FGLDR3SpectralModel.spectral_index", false]], "spectral_index() (gammapy.modeling.models.superexpcutoffpowerlaw4fglspectralmodel method)": [[267, "gammapy.modeling.models.SuperExpCutoffPowerLaw4FGLSpectralModel.spectral_index", false]], "spectral_index() (gammapy.modeling.models.templatendspectralmodel method)": [[270, "gammapy.modeling.models.TemplateNDSpectralModel.spectral_index", false]], "spectral_index() (gammapy.modeling.models.templatespectralmodel method)": [[274, "gammapy.modeling.models.TemplateSpectralModel.spectral_index", false]], "spectral_index_error() (gammapy.astro.darkmatter.darkmatterannihilationspectralmodel method)": [[19, "gammapy.astro.darkmatter.DarkMatterAnnihilationSpectralModel.spectral_index_error", false]], "spectral_index_error() (gammapy.astro.darkmatter.darkmatterdecayspectralmodel method)": [[20, "gammapy.astro.darkmatter.DarkMatterDecaySpectralModel.spectral_index_error", false]], "spectral_index_error() (gammapy.astro.darkmatter.primaryflux method)": [[26, "gammapy.astro.darkmatter.PrimaryFlux.spectral_index_error", false]], "spectral_index_error() (gammapy.modeling.models.brokenpowerlawspectralmodel method)": [[217, "gammapy.modeling.models.BrokenPowerLawSpectralModel.spectral_index_error", false]], "spectral_index_error() (gammapy.modeling.models.compoundspectralmodel method)": [[218, "gammapy.modeling.models.CompoundSpectralModel.spectral_index_error", false]], "spectral_index_error() (gammapy.modeling.models.constantspectralmodel method)": [[221, "gammapy.modeling.models.ConstantSpectralModel.spectral_index_error", false]], "spectral_index_error() (gammapy.modeling.models.eblabsorptionnormspectralmodel method)": [[225, "gammapy.modeling.models.EBLAbsorptionNormSpectralModel.spectral_index_error", false]], "spectral_index_error() (gammapy.modeling.models.expcutoffpowerlaw3fglspectralmodel method)": [[227, "gammapy.modeling.models.ExpCutoffPowerLaw3FGLSpectralModel.spectral_index_error", false]], "spectral_index_error() (gammapy.modeling.models.expcutoffpowerlawnormspectralmodel method)": [[228, "gammapy.modeling.models.ExpCutoffPowerLawNormSpectralModel.spectral_index_error", false]], "spectral_index_error() (gammapy.modeling.models.expcutoffpowerlawspectralmodel method)": [[229, "gammapy.modeling.models.ExpCutoffPowerLawSpectralModel.spectral_index_error", false]], "spectral_index_error() (gammapy.modeling.models.gaussianspectralmodel method)": [[233, "gammapy.modeling.models.GaussianSpectralModel.spectral_index_error", false]], "spectral_index_error() (gammapy.modeling.models.logparabolanormspectralmodel method)": [[239, "gammapy.modeling.models.LogParabolaNormSpectralModel.spectral_index_error", false]], "spectral_index_error() (gammapy.modeling.models.logparabolaspectralmodel method)": [[240, "gammapy.modeling.models.LogParabolaSpectralModel.spectral_index_error", false]], "spectral_index_error() (gammapy.modeling.models.meyercrabspectralmodel method)": [[242, "gammapy.modeling.models.MeyerCrabSpectralModel.spectral_index_error", false]], "spectral_index_error() (gammapy.modeling.models.naimaspectralmodel method)": [[246, "gammapy.modeling.models.NaimaSpectralModel.spectral_index_error", false]], "spectral_index_error() (gammapy.modeling.models.piecewisenormspectralmodel method)": [[248, "gammapy.modeling.models.PiecewiseNormSpectralModel.spectral_index_error", false]], "spectral_index_error() (gammapy.modeling.models.powerlaw2spectralmodel method)": [[250, "gammapy.modeling.models.PowerLaw2SpectralModel.spectral_index_error", false]], "spectral_index_error() (gammapy.modeling.models.powerlawnormspectralmodel method)": [[251, "gammapy.modeling.models.PowerLawNormSpectralModel.spectral_index_error", false]], "spectral_index_error() (gammapy.modeling.models.powerlawspectralmodel method)": [[252, "gammapy.modeling.models.PowerLawSpectralModel.spectral_index_error", false]], "spectral_index_error() (gammapy.modeling.models.scalespectralmodel method)": [[257, "gammapy.modeling.models.ScaleSpectralModel.spectral_index_error", false]], "spectral_index_error() (gammapy.modeling.models.smoothbrokenpowerlawspectralmodel method)": [[262, "gammapy.modeling.models.SmoothBrokenPowerLawSpectralModel.spectral_index_error", false]], "spectral_index_error() (gammapy.modeling.models.spectralmodel method)": [[264, "gammapy.modeling.models.SpectralModel.spectral_index_error", false]], "spectral_index_error() (gammapy.modeling.models.superexpcutoffpowerlaw3fglspectralmodel method)": [[265, "gammapy.modeling.models.SuperExpCutoffPowerLaw3FGLSpectralModel.spectral_index_error", false]], "spectral_index_error() (gammapy.modeling.models.superexpcutoffpowerlaw4fgldr3spectralmodel method)": [[266, "gammapy.modeling.models.SuperExpCutoffPowerLaw4FGLDR3SpectralModel.spectral_index_error", false]], "spectral_index_error() (gammapy.modeling.models.superexpcutoffpowerlaw4fglspectralmodel method)": [[267, "gammapy.modeling.models.SuperExpCutoffPowerLaw4FGLSpectralModel.spectral_index_error", false]], "spectral_index_error() (gammapy.modeling.models.templatendspectralmodel method)": [[270, "gammapy.modeling.models.TemplateNDSpectralModel.spectral_index_error", false]], "spectral_index_error() (gammapy.modeling.models.templatespectralmodel method)": [[274, "gammapy.modeling.models.TemplateSpectralModel.spectral_index_error", false]], "spectral_model (gammapy.modeling.models.fovbackgroundmodel attribute)": [[231, "gammapy.modeling.models.FoVBackgroundModel.spectral_model", false]], "spectral_model (gammapy.modeling.models.skymodel attribute)": [[261, "gammapy.modeling.models.SkyModel.spectral_model", false]], "spectral_model (gammapy.modeling.models.templatenpredmodel attribute)": [[271, "gammapy.modeling.models.TemplateNPredModel.spectral_model", false]], "spectral_model() (gammapy.catalog.sourcecatalogobject1lhaaso method)": [[70, "gammapy.catalog.SourceCatalogObject1LHAASO.spectral_model", false]], "spectral_model() (gammapy.catalog.sourcecatalogobject2fhl method)": [[71, "gammapy.catalog.SourceCatalogObject2FHL.spectral_model", false]], "spectral_model() (gammapy.catalog.sourcecatalogobject2hwc method)": [[72, "gammapy.catalog.SourceCatalogObject2HWC.spectral_model", false]], "spectral_model() (gammapy.catalog.sourcecatalogobject2pc method)": [[73, "gammapy.catalog.SourceCatalogObject2PC.spectral_model", false]], "spectral_model() (gammapy.catalog.sourcecatalogobject3fgl method)": [[74, "gammapy.catalog.SourceCatalogObject3FGL.spectral_model", false]], "spectral_model() (gammapy.catalog.sourcecatalogobject3fhl method)": [[75, "gammapy.catalog.SourceCatalogObject3FHL.spectral_model", false]], "spectral_model() (gammapy.catalog.sourcecatalogobject3hwc method)": [[76, "gammapy.catalog.SourceCatalogObject3HWC.spectral_model", false]], "spectral_model() (gammapy.catalog.sourcecatalogobject3pc method)": [[77, "gammapy.catalog.SourceCatalogObject3PC.spectral_model", false]], "spectral_model() (gammapy.catalog.sourcecatalogobject4fgl method)": [[78, "gammapy.catalog.SourceCatalogObject4FGL.spectral_model", false]], "spectral_model() (gammapy.catalog.sourcecatalogobjectgammacat method)": [[79, "gammapy.catalog.SourceCatalogObjectGammaCat.spectral_model", false]], "spectral_model() (gammapy.catalog.sourcecatalogobjecthgps method)": [[80, "gammapy.catalog.SourceCatalogObjectHGPS.spectral_model", false]], "spectral_model_registry (in module gammapy.modeling.models)": [[256, "gammapy.modeling.models.SPECTRAL_MODEL_REGISTRY", false]], "spectralmodel (class in gammapy.modeling.models)": [[264, "gammapy.modeling.models.SpectralModel", false]], "spectrumdataset (class in gammapy.datasets)": [[109, "gammapy.datasets.SpectrumDataset", false]], "spectrumdatasetmaker (class in gammapy.makers)": [[179, "gammapy.makers.SpectrumDatasetMaker", false]], "spectrumdatasetonoff (class in gammapy.datasets)": [[110, "gammapy.datasets.SpectrumDatasetOnOff", false]], "spiralarms (gammapy.astro.population.faucherspiral attribute)": [[33, "gammapy.astro.population.FaucherSpiral.spiralarms", false]], "spiralarms (gammapy.astro.population.valleespiral attribute)": [[38, "gammapy.astro.population.ValleeSpiral.spiralarms", false]], "split_by_axis() (gammapy.maps.hpxmap method)": [[192, "gammapy.maps.HpxMap.split_by_axis", false]], "split_by_axis() (gammapy.maps.hpxndmap method)": [[193, "gammapy.maps.HpxNDMap.split_by_axis", false]], "split_by_axis() (gammapy.maps.map method)": [[195, "gammapy.maps.Map.split_by_axis", false]], "split_by_axis() (gammapy.maps.regionndmap method)": [[201, "gammapy.maps.RegionNDMap.split_by_axis", false]], "split_by_axis() (gammapy.maps.wcsmap method)": [[204, "gammapy.maps.WcsMap.split_by_axis", false]], "split_by_axis() (gammapy.maps.wcsndmap method)": [[205, "gammapy.maps.WcsNDMap.split_by_axis", false]], "split_dataset() (in module gammapy.datasets)": [[114, "gammapy.datasets.split_dataset", false]], "split_dataset() (in module gammapy.datasets.utils)": [[116, "gammapy.datasets.utils.split_dataset", false]], "sqrt_ts (gammapy.estimators.fluxmaps attribute)": [[122, "gammapy.estimators.FluxMaps.sqrt_ts", false]], "sqrt_ts (gammapy.estimators.fluxpoints attribute)": [[124, "gammapy.estimators.FluxPoints.sqrt_ts", false]], "sqrt_ts (gammapy.stats.cashcountsstatistic attribute)": [[285, "gammapy.stats.CashCountsStatistic.sqrt_ts", false]], "sqrt_ts (gammapy.stats.wstatcountsstatistic attribute)": [[287, "gammapy.stats.WStatCountsStatistic.sqrt_ts", false]], "sqrt_ts_threshold_ul (gammapy.estimators.fluxmaps attribute)": [[122, "gammapy.estimators.FluxMaps.sqrt_ts_threshold_ul", false]], "sqrt_ts_threshold_ul (gammapy.estimators.fluxpoints attribute)": [[124, "gammapy.estimators.FluxPoints.sqrt_ts_threshold_ul", false]], "squash() (gammapy.maps.geom method)": [[190, "gammapy.maps.Geom.squash", false]], "squash() (gammapy.maps.hpxgeom method)": [[191, "gammapy.maps.HpxGeom.squash", false]], "squash() (gammapy.maps.labelmapaxis method)": [[194, "gammapy.maps.LabelMapAxis.squash", false]], "squash() (gammapy.maps.mapaxes method)": [[196, "gammapy.maps.MapAxes.squash", false]], "squash() (gammapy.maps.mapaxis method)": [[197, "gammapy.maps.MapAxis.squash", false]], "squash() (gammapy.maps.regiongeom method)": [[200, "gammapy.maps.RegionGeom.squash", false]], "squash() (gammapy.maps.timemapaxis method)": [[202, "gammapy.maps.TimeMapAxis.squash", false]], "squash() (gammapy.maps.wcsgeom method)": [[203, "gammapy.maps.WcsGeom.squash", false]], "ssc_model (gammapy.modeling.models.naimaspectralmodel attribute)": [[246, "gammapy.modeling.models.NaimaSpectralModel.ssc_model", false]], "stack() (gammapy.data.eventlist method)": [[83, "gammapy.data.EventList.stack", false]], "stack() (gammapy.data.gti method)": [[86, "gammapy.data.GTI.stack", false]], "stack() (gammapy.datasets.mapdataset method)": [[102, "gammapy.datasets.MapDataset.stack", false]], "stack() (gammapy.datasets.mapdatasetmetadata method)": [[104, "gammapy.datasets.MapDatasetMetaData.stack", false]], "stack() (gammapy.datasets.mapdatasetonoff method)": [[105, "gammapy.datasets.MapDatasetOnOff.stack", false]], "stack() (gammapy.datasets.spectrumdataset method)": [[109, "gammapy.datasets.SpectrumDataset.stack", false]], "stack() (gammapy.datasets.spectrumdatasetonoff method)": [[110, "gammapy.datasets.SpectrumDatasetOnOff.stack", false]], "stack() (gammapy.irf.edispkernelmap method)": [[150, "gammapy.irf.EDispKernelMap.stack", false]], "stack() (gammapy.irf.edispmap method)": [[151, "gammapy.irf.EDispMap.stack", false]], "stack() (gammapy.irf.irfmap method)": [[157, "gammapy.irf.IRFMap.stack", false]], "stack() (gammapy.irf.psfmap method)": [[162, "gammapy.irf.PSFMap.stack", false]], "stack() (gammapy.irf.recopsfmap method)": [[165, "gammapy.irf.RecoPSFMap.stack", false]], "stack() (gammapy.maps.hpxndmap method)": [[193, "gammapy.maps.HpxNDMap.stack", false]], "stack() (gammapy.maps.regionndmap method)": [[201, "gammapy.maps.RegionNDMap.stack", false]], "stack() (gammapy.maps.wcsndmap method)": [[205, "gammapy.maps.WcsNDMap.stack", false]], "stack() (gammapy.modeling.models.templatenpredmodel method)": [[271, "gammapy.modeling.models.TemplateNPredModel.stack", false]], "stack_reduce() (gammapy.datasets.datasets method)": [[100, "gammapy.datasets.Datasets.stack_reduce", false]], "standard_broadcasting (gammapy.astro.population.casebattacharya1998 attribute)": [[28, "gammapy.astro.population.CaseBattacharya1998.standard_broadcasting", false]], "standard_broadcasting (gammapy.astro.population.exponential attribute)": [[29, "gammapy.astro.population.Exponential.standard_broadcasting", false]], "standard_broadcasting (gammapy.astro.population.faucherkaspi2006 attribute)": [[30, "gammapy.astro.population.FaucherKaspi2006.standard_broadcasting", false]], "standard_broadcasting (gammapy.astro.population.faucherkaspi2006velocitybimodal attribute)": [[31, "gammapy.astro.population.FaucherKaspi2006VelocityBimodal.standard_broadcasting", false]], "standard_broadcasting (gammapy.astro.population.faucherkaspi2006velocitymaxwellian attribute)": [[32, "gammapy.astro.population.FaucherKaspi2006VelocityMaxwellian.standard_broadcasting", false]], "standard_broadcasting (gammapy.astro.population.lorimer2006 attribute)": [[35, "gammapy.astro.population.Lorimer2006.standard_broadcasting", false]], "standard_broadcasting (gammapy.astro.population.paczynski1990 attribute)": [[36, "gammapy.astro.population.Paczynski1990.standard_broadcasting", false]], "standard_broadcasting (gammapy.astro.population.paczynski1990velocity attribute)": [[37, "gammapy.astro.population.Paczynski1990Velocity.standard_broadcasting", false]], "standard_broadcasting (gammapy.astro.population.yusifovkucuk2004 attribute)": [[39, "gammapy.astro.population.YusifovKucuk2004.standard_broadcasting", false]], "standard_broadcasting (gammapy.astro.population.yusifovkucuk2004b attribute)": [[40, "gammapy.astro.population.YusifovKucuk2004B.standard_broadcasting", false]], "standard_scaler() (in module gammapy.utils.cluster)": [[303, "gammapy.utils.cluster.standard_scaler", false]], "standardise_unit() (in module gammapy.utils.units)": [[362, "gammapy.utils.units.standardise_unit", false]], "stat (gammapy.estimators.fluxmaps attribute)": [[122, "gammapy.estimators.FluxMaps.stat", false]], "stat (gammapy.estimators.fluxpoints attribute)": [[124, "gammapy.estimators.FluxPoints.stat", false]], "stat_array() (gammapy.datasets.dataset method)": [[99, "gammapy.datasets.Dataset.stat_array", false]], "stat_array() (gammapy.datasets.fluxpointsdataset method)": [[101, "gammapy.datasets.FluxPointsDataset.stat_array", false]], "stat_array() (gammapy.datasets.mapdataset method)": [[102, "gammapy.datasets.MapDataset.stat_array", false]], "stat_array() (gammapy.datasets.mapdatasetonoff method)": [[105, "gammapy.datasets.MapDatasetOnOff.stat_array", false]], "stat_array() (gammapy.datasets.spectrumdataset method)": [[109, "gammapy.datasets.SpectrumDataset.stat_array", false]], "stat_array() (gammapy.datasets.spectrumdatasetonoff method)": [[110, "gammapy.datasets.SpectrumDatasetOnOff.stat_array", false]], "stat_contour() (gammapy.modeling.fit method)": [[210, "gammapy.modeling.Fit.stat_contour", false]], "stat_max (gammapy.stats.cashcountsstatistic attribute)": [[285, "gammapy.stats.CashCountsStatistic.stat_max", false]], "stat_max (gammapy.stats.wstatcountsstatistic attribute)": [[287, "gammapy.stats.WStatCountsStatistic.stat_max", false]], "stat_null (gammapy.estimators.fluxmaps attribute)": [[122, "gammapy.estimators.FluxMaps.stat_null", false]], "stat_null (gammapy.estimators.fluxpoints attribute)": [[124, "gammapy.estimators.FluxPoints.stat_null", false]], "stat_null (gammapy.stats.cashcountsstatistic attribute)": [[285, "gammapy.stats.CashCountsStatistic.stat_null", false]], "stat_null (gammapy.stats.wstatcountsstatistic attribute)": [[287, "gammapy.stats.WStatCountsStatistic.stat_null", false]], "stat_profile() (gammapy.modeling.fit method)": [[210, "gammapy.modeling.Fit.stat_profile", false]], "stat_profile_ul_scipy() (in module gammapy.modeling)": [[284, "gammapy.modeling.stat_profile_ul_scipy", false]], "stat_scan (gammapy.estimators.fluxmaps attribute)": [[122, "gammapy.estimators.FluxMaps.stat_scan", false]], "stat_scan (gammapy.estimators.fluxpoints attribute)": [[124, "gammapy.estimators.FluxPoints.stat_scan", false]], "stat_sum() (gammapy.datasets.dataset method)": [[99, "gammapy.datasets.Dataset.stat_sum", false]], "stat_sum() (gammapy.datasets.datasets method)": [[100, "gammapy.datasets.Datasets.stat_sum", false]], "stat_sum() (gammapy.datasets.fluxpointsdataset method)": [[101, "gammapy.datasets.FluxPointsDataset.stat_sum", false]], "stat_sum() (gammapy.datasets.mapdataset method)": [[102, "gammapy.datasets.MapDataset.stat_sum", false]], "stat_sum() (gammapy.datasets.mapdatasetonoff method)": [[105, "gammapy.datasets.MapDatasetOnOff.stat_sum", false]], "stat_sum() (gammapy.datasets.spectrumdataset method)": [[109, "gammapy.datasets.SpectrumDataset.stat_sum", false]], "stat_sum() (gammapy.datasets.spectrumdatasetonoff method)": [[110, "gammapy.datasets.SpectrumDatasetOnOff.stat_sum", false]], "stat_surface() (gammapy.modeling.fit method)": [[210, "gammapy.modeling.Fit.stat_surface", false]], "stat_type (gammapy.datasets.fluxpointsdataset attribute)": [[101, "gammapy.datasets.FluxPointsDataset.stat_type", false]], "stat_type (gammapy.datasets.mapdataset attribute)": [[102, "gammapy.datasets.MapDataset.stat_type", false]], "stat_type (gammapy.datasets.mapdatasetonoff attribute)": [[105, "gammapy.datasets.MapDatasetOnOff.stat_type", false]], "stat_type (gammapy.datasets.spectrumdataset attribute)": [[109, "gammapy.datasets.SpectrumDataset.stat_type", false]], "stat_type (gammapy.datasets.spectrumdatasetonoff attribute)": [[110, "gammapy.datasets.SpectrumDatasetOnOff.stat_type", false]], "stds (gammapy.astro.population.casebattacharya1998 attribute)": [[28, "gammapy.astro.population.CaseBattacharya1998.stds", false]], "stds (gammapy.astro.population.exponential attribute)": [[29, "gammapy.astro.population.Exponential.stds", false]], "stds (gammapy.astro.population.faucherkaspi2006 attribute)": [[30, "gammapy.astro.population.FaucherKaspi2006.stds", false]], "stds (gammapy.astro.population.faucherkaspi2006velocitybimodal attribute)": [[31, "gammapy.astro.population.FaucherKaspi2006VelocityBimodal.stds", false]], "stds (gammapy.astro.population.faucherkaspi2006velocitymaxwellian attribute)": [[32, "gammapy.astro.population.FaucherKaspi2006VelocityMaxwellian.stds", false]], "stds (gammapy.astro.population.lorimer2006 attribute)": [[35, "gammapy.astro.population.Lorimer2006.stds", false]], "stds (gammapy.astro.population.paczynski1990 attribute)": [[36, "gammapy.astro.population.Paczynski1990.stds", false]], "stds (gammapy.astro.population.paczynski1990velocity attribute)": [[37, "gammapy.astro.population.Paczynski1990Velocity.stds", false]], "stds (gammapy.astro.population.yusifovkucuk2004 attribute)": [[39, "gammapy.astro.population.YusifovKucuk2004.stds", false]], "stds (gammapy.astro.population.yusifovkucuk2004b attribute)": [[40, "gammapy.astro.population.YusifovKucuk2004B.stds", false]], "strip_units_from_tree() (gammapy.astro.population.casebattacharya1998 method)": [[28, "gammapy.astro.population.CaseBattacharya1998.strip_units_from_tree", false]], "strip_units_from_tree() (gammapy.astro.population.exponential method)": [[29, "gammapy.astro.population.Exponential.strip_units_from_tree", false]], "strip_units_from_tree() (gammapy.astro.population.faucherkaspi2006 method)": [[30, "gammapy.astro.population.FaucherKaspi2006.strip_units_from_tree", false]], "strip_units_from_tree() (gammapy.astro.population.faucherkaspi2006velocitybimodal method)": [[31, "gammapy.astro.population.FaucherKaspi2006VelocityBimodal.strip_units_from_tree", false]], "strip_units_from_tree() (gammapy.astro.population.faucherkaspi2006velocitymaxwellian method)": [[32, "gammapy.astro.population.FaucherKaspi2006VelocityMaxwellian.strip_units_from_tree", false]], "strip_units_from_tree() (gammapy.astro.population.lorimer2006 method)": [[35, "gammapy.astro.population.Lorimer2006.strip_units_from_tree", false]], "strip_units_from_tree() (gammapy.astro.population.paczynski1990 method)": [[36, "gammapy.astro.population.Paczynski1990.strip_units_from_tree", false]], "strip_units_from_tree() (gammapy.astro.population.paczynski1990velocity method)": [[37, "gammapy.astro.population.Paczynski1990Velocity.strip_units_from_tree", false]], "strip_units_from_tree() (gammapy.astro.population.yusifovkucuk2004 method)": [[39, "gammapy.astro.population.YusifovKucuk2004.strip_units_from_tree", false]], "strip_units_from_tree() (gammapy.astro.population.yusifovkucuk2004b method)": [[40, "gammapy.astro.population.YusifovKucuk2004B.strip_units_from_tree", false]], "structure_function() (in module gammapy.stats)": [[300, "gammapy.stats.structure_function", false]], "success (gammapy.estimators.fluxmaps attribute)": [[122, "gammapy.estimators.FluxMaps.success", false]], "success (gammapy.estimators.fluxpoints attribute)": [[124, "gammapy.estimators.FluxPoints.success", false]], "success (gammapy.modeling.covarianceresult attribute)": [[209, "gammapy.modeling.CovarianceResult.success", false]], "success (gammapy.modeling.fitresult attribute)": [[211, "gammapy.modeling.FitResult.success", false]], "success (gammapy.modeling.optimizeresult attribute)": [[212, "gammapy.modeling.OptimizeResult.success", false]], "sum() (gammapy.stats.cashcountsstatistic method)": [[285, "gammapy.stats.CashCountsStatistic.sum", false]], "sum() (gammapy.stats.wstatcountsstatistic method)": [[287, "gammapy.stats.WStatCountsStatistic.sum", false]], "sum_of_implicit_terms() (gammapy.astro.population.casebattacharya1998 method)": [[28, "gammapy.astro.population.CaseBattacharya1998.sum_of_implicit_terms", false]], "sum_of_implicit_terms() (gammapy.astro.population.exponential method)": [[29, "gammapy.astro.population.Exponential.sum_of_implicit_terms", false]], "sum_of_implicit_terms() (gammapy.astro.population.faucherkaspi2006 method)": [[30, "gammapy.astro.population.FaucherKaspi2006.sum_of_implicit_terms", false]], "sum_of_implicit_terms() (gammapy.astro.population.faucherkaspi2006velocitybimodal method)": [[31, "gammapy.astro.population.FaucherKaspi2006VelocityBimodal.sum_of_implicit_terms", false]], "sum_of_implicit_terms() (gammapy.astro.population.faucherkaspi2006velocitymaxwellian method)": [[32, "gammapy.astro.population.FaucherKaspi2006VelocityMaxwellian.sum_of_implicit_terms", false]], "sum_of_implicit_terms() (gammapy.astro.population.lorimer2006 method)": [[35, "gammapy.astro.population.Lorimer2006.sum_of_implicit_terms", false]], "sum_of_implicit_terms() (gammapy.astro.population.paczynski1990 method)": [[36, "gammapy.astro.population.Paczynski1990.sum_of_implicit_terms", false]], "sum_of_implicit_terms() (gammapy.astro.population.paczynski1990velocity method)": [[37, "gammapy.astro.population.Paczynski1990Velocity.sum_of_implicit_terms", false]], "sum_of_implicit_terms() (gammapy.astro.population.yusifovkucuk2004 method)": [[39, "gammapy.astro.population.YusifovKucuk2004.sum_of_implicit_terms", false]], "sum_of_implicit_terms() (gammapy.astro.population.yusifovkucuk2004b method)": [[40, "gammapy.astro.population.YusifovKucuk2004B.sum_of_implicit_terms", false]], "sum_over_axes() (gammapy.maps.hpxmap method)": [[192, "gammapy.maps.HpxMap.sum_over_axes", false]], "sum_over_axes() (gammapy.maps.hpxndmap method)": [[193, "gammapy.maps.HpxNDMap.sum_over_axes", false]], "sum_over_axes() (gammapy.maps.map method)": [[195, "gammapy.maps.Map.sum_over_axes", false]], "sum_over_axes() (gammapy.maps.regionndmap method)": [[201, "gammapy.maps.RegionNDMap.sum_over_axes", false]], "sum_over_axes() (gammapy.maps.wcsmap method)": [[204, "gammapy.maps.WcsMap.sum_over_axes", false]], "sum_over_axes() (gammapy.maps.wcsndmap method)": [[205, "gammapy.maps.WcsNDMap.sum_over_axes", false]], "summary() (gammapy.data.hduindextable method)": [[87, "gammapy.data.HDUIndexTable.summary", false]], "summary() (gammapy.data.observationtable method)": [[91, "gammapy.data.ObservationTable.summary", false]], "superexpcutoffpowerlaw3fglspectralmodel (class in gammapy.modeling.models)": [[265, "gammapy.modeling.models.SuperExpCutoffPowerLaw3FGLSpectralModel", false]], "superexpcutoffpowerlaw4fgldr3spectralmodel (class in gammapy.modeling.models)": [[266, "gammapy.modeling.models.SuperExpCutoffPowerLaw4FGLDR3SpectralModel", false]], "superexpcutoffpowerlaw4fglspectralmodel (class in gammapy.modeling.models)": [[267, "gammapy.modeling.models.SuperExpCutoffPowerLaw4FGLSpectralModel", false]], "sync_constraints (gammapy.astro.population.casebattacharya1998 attribute)": [[28, "gammapy.astro.population.CaseBattacharya1998.sync_constraints", false]], "sync_constraints (gammapy.astro.population.exponential attribute)": [[29, "gammapy.astro.population.Exponential.sync_constraints", false]], "sync_constraints (gammapy.astro.population.faucherkaspi2006 attribute)": [[30, "gammapy.astro.population.FaucherKaspi2006.sync_constraints", false]], "sync_constraints (gammapy.astro.population.faucherkaspi2006velocitybimodal attribute)": [[31, "gammapy.astro.population.FaucherKaspi2006VelocityBimodal.sync_constraints", false]], "sync_constraints (gammapy.astro.population.faucherkaspi2006velocitymaxwellian attribute)": [[32, "gammapy.astro.population.FaucherKaspi2006VelocityMaxwellian.sync_constraints", false]], "sync_constraints (gammapy.astro.population.lorimer2006 attribute)": [[35, "gammapy.astro.population.Lorimer2006.sync_constraints", false]], "sync_constraints (gammapy.astro.population.paczynski1990 attribute)": [[36, "gammapy.astro.population.Paczynski1990.sync_constraints", false]], "sync_constraints (gammapy.astro.population.paczynski1990velocity attribute)": [[37, "gammapy.astro.population.Paczynski1990Velocity.sync_constraints", false]], "sync_constraints (gammapy.astro.population.yusifovkucuk2004 attribute)": [[39, "gammapy.astro.population.YusifovKucuk2004.sync_constraints", false]], "sync_constraints (gammapy.astro.population.yusifovkucuk2004b attribute)": [[40, "gammapy.astro.population.YusifovKucuk2004B.sync_constraints", false]], "t0 (gammapy.modeling.models.expdecaytemporalmodel attribute)": [[230, "gammapy.modeling.models.ExpDecayTemporalModel.t0", false]], "t0 (gammapy.modeling.models.powerlawtemporalmodel attribute)": [[253, "gammapy.modeling.models.PowerLawTemporalModel.t0", false]], "t_decay (gammapy.modeling.models.generalizedgaussiantemporalmodel attribute)": [[236, "gammapy.modeling.models.GeneralizedGaussianTemporalModel.t_decay", false]], "t_ref (gammapy.modeling.models.expdecaytemporalmodel attribute)": [[230, "gammapy.modeling.models.ExpDecayTemporalModel.t_ref", false]], "t_ref (gammapy.modeling.models.gaussiantemporalmodel attribute)": [[234, "gammapy.modeling.models.GaussianTemporalModel.t_ref", false]], "t_ref (gammapy.modeling.models.generalizedgaussiantemporalmodel attribute)": [[236, "gammapy.modeling.models.GeneralizedGaussianTemporalModel.t_ref", false]], "t_ref (gammapy.modeling.models.lightcurvetemplatetemporalmodel attribute)": [[237, "gammapy.modeling.models.LightCurveTemplateTemporalModel.t_ref", false]], "t_ref (gammapy.modeling.models.lineartemporalmodel attribute)": [[238, "gammapy.modeling.models.LinearTemporalModel.t_ref", false]], "t_ref (gammapy.modeling.models.powerlawtemporalmodel attribute)": [[253, "gammapy.modeling.models.PowerLawTemporalModel.t_ref", false]], "t_ref (gammapy.modeling.models.sinetemporalmodel attribute)": [[260, "gammapy.modeling.models.SineTemporalModel.t_ref", false]], "t_ref (gammapy.modeling.models.templatephasecurvetemporalmodel attribute)": [[272, "gammapy.modeling.models.TemplatePhaseCurveTemporalModel.t_ref", false]], "t_rise (gammapy.modeling.models.generalizedgaussiantemporalmodel attribute)": [[236, "gammapy.modeling.models.GeneralizedGaussianTemporalModel.t_rise", false]], "table_associations (gammapy.catalog.sourcecataloghgps attribute)": [[67, "gammapy.catalog.SourceCatalogHGPS.table_associations", false]], "table_components (gammapy.catalog.sourcecataloghgps attribute)": [[67, "gammapy.catalog.SourceCatalogHGPS.table_components", false]], "table_filename (gammapy.astro.darkmatter.primaryflux attribute)": [[26, "gammapy.astro.darkmatter.PrimaryFlux.table_filename", false]], "table_identifications (gammapy.catalog.sourcecataloghgps attribute)": [[67, "gammapy.catalog.SourceCatalogHGPS.table_identifications", false]], "table_large_scale_component (gammapy.catalog.sourcecataloghgps attribute)": [[67, "gammapy.catalog.SourceCatalogHGPS.table_large_scale_component", false]], "table_row_to_dict() (in module gammapy.utils.table)": [[348, "gammapy.utils.table.table_row_to_dict", false]], "table_standardise_units_copy() (in module gammapy.utils.table)": [[349, "gammapy.utils.table.table_standardise_units_copy", false]], "table_standardise_units_inplace() (in module gammapy.utils.table)": [[350, "gammapy.utils.table.table_standardise_units_inplace", false]], "tag (gammapy.astro.darkmatter.darkmatterannihilationspectralmodel attribute)": [[19, "gammapy.astro.darkmatter.DarkMatterAnnihilationSpectralModel.tag", false]], "tag (gammapy.astro.darkmatter.darkmatterdecayspectralmodel attribute)": [[20, "gammapy.astro.darkmatter.DarkMatterDecaySpectralModel.tag", false]], "tag (gammapy.astro.darkmatter.primaryflux attribute)": [[26, "gammapy.astro.darkmatter.PrimaryFlux.tag", false]], "tag (gammapy.catalog.sourcecatalog attribute)": [[56, "gammapy.catalog.SourceCatalog.tag", false]], "tag (gammapy.catalog.sourcecatalog1lhaaso attribute)": [[57, "gammapy.catalog.SourceCatalog1LHAASO.tag", false]], "tag (gammapy.catalog.sourcecatalog2fhl attribute)": [[58, "gammapy.catalog.SourceCatalog2FHL.tag", false]], "tag (gammapy.catalog.sourcecatalog2hwc attribute)": [[59, "gammapy.catalog.SourceCatalog2HWC.tag", false]], "tag (gammapy.catalog.sourcecatalog2pc attribute)": [[60, "gammapy.catalog.SourceCatalog2PC.tag", false]], "tag (gammapy.catalog.sourcecatalog3fgl attribute)": [[61, "gammapy.catalog.SourceCatalog3FGL.tag", false]], "tag (gammapy.catalog.sourcecatalog3fhl attribute)": [[62, "gammapy.catalog.SourceCatalog3FHL.tag", false]], "tag (gammapy.catalog.sourcecatalog3hwc attribute)": [[63, "gammapy.catalog.SourceCatalog3HWC.tag", false]], "tag (gammapy.catalog.sourcecatalog3pc attribute)": [[64, "gammapy.catalog.SourceCatalog3PC.tag", false]], "tag (gammapy.catalog.sourcecatalog4fgl attribute)": [[65, "gammapy.catalog.SourceCatalog4FGL.tag", false]], "tag (gammapy.catalog.sourcecataloggammacat attribute)": [[66, "gammapy.catalog.SourceCatalogGammaCat.tag", false]], "tag (gammapy.catalog.sourcecataloghgps attribute)": [[67, "gammapy.catalog.SourceCatalogHGPS.tag", false]], "tag (gammapy.data.eventlistmetadata attribute)": [[84, "gammapy.data.EventListMetaData.tag", false]], "tag (gammapy.data.observationmetadata attribute)": [[90, "gammapy.data.ObservationMetaData.tag", false]], "tag (gammapy.datasets.dataset attribute)": [[99, "gammapy.datasets.Dataset.tag", false]], "tag (gammapy.datasets.fluxpointsdataset attribute)": [[101, "gammapy.datasets.FluxPointsDataset.tag", false]], "tag (gammapy.datasets.mapdataset attribute)": [[102, "gammapy.datasets.MapDataset.tag", false]], "tag (gammapy.datasets.mapdatasetmetadata attribute)": [[104, "gammapy.datasets.MapDatasetMetaData.tag", false]], "tag (gammapy.datasets.mapdatasetonoff attribute)": [[105, "gammapy.datasets.MapDatasetOnOff.tag", false]], "tag (gammapy.datasets.ogipdatasetreader attribute)": [[106, "gammapy.datasets.OGIPDatasetReader.tag", false]], "tag (gammapy.datasets.ogipdatasetwriter attribute)": [[107, "gammapy.datasets.OGIPDatasetWriter.tag", false]], "tag (gammapy.datasets.spectrumdataset attribute)": [[109, "gammapy.datasets.SpectrumDataset.tag", false]], "tag (gammapy.datasets.spectrumdatasetonoff attribute)": [[110, "gammapy.datasets.SpectrumDatasetOnOff.tag", false]], "tag (gammapy.estimators.asmoothmapestimator attribute)": [[117, "gammapy.estimators.ASmoothMapEstimator.tag", false]], "tag (gammapy.estimators.energydependentmorphologyestimator attribute)": [[119, "gammapy.estimators.EnergyDependentMorphologyEstimator.tag", false]], "tag (gammapy.estimators.estimator attribute)": [[120, "gammapy.estimators.Estimator.tag", false]], "tag (gammapy.estimators.excessmapestimator attribute)": [[121, "gammapy.estimators.ExcessMapEstimator.tag", false]], "tag (gammapy.estimators.fluxmetadata attribute)": [[123, "gammapy.estimators.FluxMetaData.tag", false]], "tag (gammapy.estimators.fluxpointsestimator attribute)": [[125, "gammapy.estimators.FluxPointsEstimator.tag", false]], "tag (gammapy.estimators.fluxprofileestimator attribute)": [[126, "gammapy.estimators.FluxProfileEstimator.tag", false]], "tag (gammapy.estimators.imageprofileestimator attribute)": [[128, "gammapy.estimators.ImageProfileEstimator.tag", false]], "tag (gammapy.estimators.lightcurveestimator attribute)": [[129, "gammapy.estimators.LightCurveEstimator.tag", false]], "tag (gammapy.estimators.parameterestimator attribute)": [[130, "gammapy.estimators.ParameterEstimator.tag", false]], "tag (gammapy.estimators.sensitivityestimator attribute)": [[131, "gammapy.estimators.SensitivityEstimator.tag", false]], "tag (gammapy.estimators.tsmapestimator attribute)": [[132, "gammapy.estimators.TSMapEstimator.tag", false]], "tag (gammapy.irf.background2d attribute)": [[146, "gammapy.irf.Background2D.tag", false]], "tag (gammapy.irf.background3d attribute)": [[147, "gammapy.irf.Background3D.tag", false]], "tag (gammapy.irf.backgroundirf attribute)": [[148, "gammapy.irf.BackgroundIRF.tag", false]], "tag (gammapy.irf.edispkernel attribute)": [[149, "gammapy.irf.EDispKernel.tag", false]], "tag (gammapy.irf.edispkernelmap attribute)": [[150, "gammapy.irf.EDispKernelMap.tag", false]], "tag (gammapy.irf.edispmap attribute)": [[151, "gammapy.irf.EDispMap.tag", false]], "tag (gammapy.irf.effectiveareatable2d attribute)": [[152, "gammapy.irf.EffectiveAreaTable2D.tag", false]], "tag (gammapy.irf.energydependentmultigausspsf attribute)": [[153, "gammapy.irf.EnergyDependentMultiGaussPSF.tag", false]], "tag (gammapy.irf.energydispersion2d attribute)": [[154, "gammapy.irf.EnergyDispersion2D.tag", false]], "tag (gammapy.irf.irf attribute)": [[156, "gammapy.irf.IRF.tag", false]], "tag (gammapy.irf.irfmap attribute)": [[157, "gammapy.irf.IRFMap.tag", false]], "tag (gammapy.irf.parametricpsf attribute)": [[163, "gammapy.irf.ParametricPSF.tag", false]], "tag (gammapy.irf.psf3d attribute)": [[159, "gammapy.irf.PSF3D.tag", false]], "tag (gammapy.irf.psfking attribute)": [[161, "gammapy.irf.PSFKing.tag", false]], "tag (gammapy.irf.psfmap attribute)": [[162, "gammapy.irf.PSFMap.tag", false]], "tag (gammapy.irf.radmax2d attribute)": [[164, "gammapy.irf.RadMax2D.tag", false]], "tag (gammapy.irf.recopsfmap attribute)": [[165, "gammapy.irf.RecoPSFMap.tag", false]], "tag (gammapy.makers.adaptiveringbackgroundmaker attribute)": [[167, "gammapy.makers.AdaptiveRingBackgroundMaker.tag", false]], "tag (gammapy.makers.datasetsmaker attribute)": [[168, "gammapy.makers.DatasetsMaker.tag", false]], "tag (gammapy.makers.fovbackgroundmaker attribute)": [[169, "gammapy.makers.FoVBackgroundMaker.tag", false]], "tag (gammapy.makers.maker attribute)": [[171, "gammapy.makers.Maker.tag", false]], "tag (gammapy.makers.mapdatasetmaker attribute)": [[172, "gammapy.makers.MapDatasetMaker.tag", false]], "tag (gammapy.makers.phasebackgroundmaker attribute)": [[173, "gammapy.makers.PhaseBackgroundMaker.tag", false]], "tag (gammapy.makers.reflectedregionsbackgroundmaker attribute)": [[174, "gammapy.makers.ReflectedRegionsBackgroundMaker.tag", false]], "tag (gammapy.makers.ringbackgroundmaker attribute)": [[177, "gammapy.makers.RingBackgroundMaker.tag", false]], "tag (gammapy.makers.safemaskmaker attribute)": [[178, "gammapy.makers.SafeMaskMaker.tag", false]], "tag (gammapy.makers.spectrumdatasetmaker attribute)": [[179, "gammapy.makers.SpectrumDatasetMaker.tag", false]], "tag (gammapy.maps.hpxmap attribute)": [[192, "gammapy.maps.HpxMap.tag", false]], "tag (gammapy.maps.hpxndmap attribute)": [[193, "gammapy.maps.HpxNDMap.tag", false]], "tag (gammapy.maps.map attribute)": [[195, "gammapy.maps.Map.tag", false]], "tag (gammapy.maps.regionndmap attribute)": [[201, "gammapy.maps.RegionNDMap.tag", false]], "tag (gammapy.maps.wcsmap attribute)": [[204, "gammapy.maps.WcsMap.tag", false]], "tag (gammapy.maps.wcsndmap attribute)": [[205, "gammapy.maps.WcsNDMap.tag", false]], "tag (gammapy.modeling.models.brokenpowerlawspectralmodel attribute)": [[217, "gammapy.modeling.models.BrokenPowerLawSpectralModel.tag", false]], "tag (gammapy.modeling.models.compoundspectralmodel attribute)": [[218, "gammapy.modeling.models.CompoundSpectralModel.tag", false]], "tag (gammapy.modeling.models.constantfluxspatialmodel attribute)": [[219, "gammapy.modeling.models.ConstantFluxSpatialModel.tag", false]], "tag (gammapy.modeling.models.constantspatialmodel attribute)": [[220, "gammapy.modeling.models.ConstantSpatialModel.tag", false]], "tag (gammapy.modeling.models.constantspectralmodel attribute)": [[221, "gammapy.modeling.models.ConstantSpectralModel.tag", false]], "tag (gammapy.modeling.models.constanttemporalmodel attribute)": [[222, "gammapy.modeling.models.ConstantTemporalModel.tag", false]], "tag (gammapy.modeling.models.diskspatialmodel attribute)": [[224, "gammapy.modeling.models.DiskSpatialModel.tag", false]], "tag (gammapy.modeling.models.eblabsorptionnormspectralmodel attribute)": [[225, "gammapy.modeling.models.EBLAbsorptionNormSpectralModel.tag", false]], "tag (gammapy.modeling.models.expcutoffpowerlaw3fglspectralmodel attribute)": [[227, "gammapy.modeling.models.ExpCutoffPowerLaw3FGLSpectralModel.tag", false]], "tag (gammapy.modeling.models.expcutoffpowerlawnormspectralmodel attribute)": [[228, "gammapy.modeling.models.ExpCutoffPowerLawNormSpectralModel.tag", false]], "tag (gammapy.modeling.models.expcutoffpowerlawspectralmodel attribute)": [[229, "gammapy.modeling.models.ExpCutoffPowerLawSpectralModel.tag", false]], "tag (gammapy.modeling.models.expdecaytemporalmodel attribute)": [[230, "gammapy.modeling.models.ExpDecayTemporalModel.tag", false]], "tag (gammapy.modeling.models.fovbackgroundmodel attribute)": [[231, "gammapy.modeling.models.FoVBackgroundModel.tag", false]], "tag (gammapy.modeling.models.gaussianspatialmodel attribute)": [[232, "gammapy.modeling.models.GaussianSpatialModel.tag", false]], "tag (gammapy.modeling.models.gaussianspectralmodel attribute)": [[233, "gammapy.modeling.models.GaussianSpectralModel.tag", false]], "tag (gammapy.modeling.models.gaussiantemporalmodel attribute)": [[234, "gammapy.modeling.models.GaussianTemporalModel.tag", false]], "tag (gammapy.modeling.models.generalizedgaussianspatialmodel attribute)": [[235, "gammapy.modeling.models.GeneralizedGaussianSpatialModel.tag", false]], "tag (gammapy.modeling.models.generalizedgaussiantemporalmodel attribute)": [[236, "gammapy.modeling.models.GeneralizedGaussianTemporalModel.tag", false]], "tag (gammapy.modeling.models.lightcurvetemplatetemporalmodel attribute)": [[237, "gammapy.modeling.models.LightCurveTemplateTemporalModel.tag", false]], "tag (gammapy.modeling.models.lineartemporalmodel attribute)": [[238, "gammapy.modeling.models.LinearTemporalModel.tag", false]], "tag (gammapy.modeling.models.logparabolanormspectralmodel attribute)": [[239, "gammapy.modeling.models.LogParabolaNormSpectralModel.tag", false]], "tag (gammapy.modeling.models.logparabolaspectralmodel attribute)": [[240, "gammapy.modeling.models.LogParabolaSpectralModel.tag", false]], "tag (gammapy.modeling.models.naimaspectralmodel attribute)": [[246, "gammapy.modeling.models.NaimaSpectralModel.tag", false]], "tag (gammapy.modeling.models.piecewisenormspatialmodel attribute)": [[247, "gammapy.modeling.models.PiecewiseNormSpatialModel.tag", false]], "tag (gammapy.modeling.models.piecewisenormspectralmodel attribute)": [[248, "gammapy.modeling.models.PiecewiseNormSpectralModel.tag", false]], "tag (gammapy.modeling.models.pointspatialmodel attribute)": [[249, "gammapy.modeling.models.PointSpatialModel.tag", false]], "tag (gammapy.modeling.models.powerlaw2spectralmodel attribute)": [[250, "gammapy.modeling.models.PowerLaw2SpectralModel.tag", false]], "tag (gammapy.modeling.models.powerlawnormspectralmodel attribute)": [[251, "gammapy.modeling.models.PowerLawNormSpectralModel.tag", false]], "tag (gammapy.modeling.models.powerlawspectralmodel attribute)": [[252, "gammapy.modeling.models.PowerLawSpectralModel.tag", false]], "tag (gammapy.modeling.models.powerlawtemporalmodel attribute)": [[253, "gammapy.modeling.models.PowerLawTemporalModel.tag", false]], "tag (gammapy.modeling.models.scalespectralmodel attribute)": [[257, "gammapy.modeling.models.ScaleSpectralModel.tag", false]], "tag (gammapy.modeling.models.shell2spatialmodel attribute)": [[258, "gammapy.modeling.models.Shell2SpatialModel.tag", false]], "tag (gammapy.modeling.models.shellspatialmodel attribute)": [[259, "gammapy.modeling.models.ShellSpatialModel.tag", false]], "tag (gammapy.modeling.models.sinetemporalmodel attribute)": [[260, "gammapy.modeling.models.SineTemporalModel.tag", false]], "tag (gammapy.modeling.models.skymodel attribute)": [[261, "gammapy.modeling.models.SkyModel.tag", false]], "tag (gammapy.modeling.models.smoothbrokenpowerlawspectralmodel attribute)": [[262, "gammapy.modeling.models.SmoothBrokenPowerLawSpectralModel.tag", false]], "tag (gammapy.modeling.models.superexpcutoffpowerlaw3fglspectralmodel attribute)": [[265, "gammapy.modeling.models.SuperExpCutoffPowerLaw3FGLSpectralModel.tag", false]], "tag (gammapy.modeling.models.superexpcutoffpowerlaw4fgldr3spectralmodel attribute)": [[266, "gammapy.modeling.models.SuperExpCutoffPowerLaw4FGLDR3SpectralModel.tag", false]], "tag (gammapy.modeling.models.superexpcutoffpowerlaw4fglspectralmodel attribute)": [[267, "gammapy.modeling.models.SuperExpCutoffPowerLaw4FGLSpectralModel.tag", false]], "tag (gammapy.modeling.models.templatendspatialmodel attribute)": [[269, "gammapy.modeling.models.TemplateNDSpatialModel.tag", false]], "tag (gammapy.modeling.models.templatendspectralmodel attribute)": [[270, "gammapy.modeling.models.TemplateNDSpectralModel.tag", false]], "tag (gammapy.modeling.models.templatenpredmodel attribute)": [[271, "gammapy.modeling.models.TemplateNPredModel.tag", false]], "tag (gammapy.modeling.models.templatephasecurvetemporalmodel attribute)": [[272, "gammapy.modeling.models.TemplatePhaseCurveTemporalModel.tag", false]], "tag (gammapy.modeling.models.templatespatialmodel attribute)": [[273, "gammapy.modeling.models.TemplateSpatialModel.tag", false]], "tag (gammapy.modeling.models.templatespectralmodel attribute)": [[274, "gammapy.modeling.models.TemplateSpectralModel.tag", false]], "target_radec (gammapy.data.observation attribute)": [[88, "gammapy.data.Observation.target_radec", false]], "tau (gammapy.astro.source.simplepulsar attribute)": [[54, "gammapy.astro.source.SimplePulsar.tau", false]], "tau() (gammapy.astro.source.pulsar method)": [[51, "gammapy.astro.source.Pulsar.tau", false]], "templatendspatialmodel (class in gammapy.modeling.models)": [[269, "gammapy.modeling.models.TemplateNDSpatialModel", false]], "templatendspectralmodel (class in gammapy.modeling.models)": [[270, "gammapy.modeling.models.TemplateNDSpectralModel", false]], "templatenpredmodel (class in gammapy.modeling.models)": [[271, "gammapy.modeling.models.TemplateNPredModel", false]], "templatephasecurvetemporalmodel (class in gammapy.modeling.models)": [[272, "gammapy.modeling.models.TemplatePhaseCurveTemporalModel", false]], "templatespatialmodel (class in gammapy.modeling.models)": [[273, "gammapy.modeling.models.TemplateSpatialModel", false]], "templatespectralmodel (class in gammapy.modeling.models)": [[274, "gammapy.modeling.models.TemplateSpectralModel", false]], "temporal_model (gammapy.modeling.models.skymodel attribute)": [[261, "gammapy.modeling.models.SkyModel.temporal_model", false]], "temporal_model_registry (in module gammapy.modeling.models)": [[268, "gammapy.modeling.models.TEMPORAL_MODEL_REGISTRY", false]], "temporalmodel (class in gammapy.modeling.models)": [[275, "gammapy.modeling.models.TemporalModel", false]], "thermal_relic_cross_section (gammapy.astro.darkmatter.darkmatterannihilationspectralmodel attribute)": [[19, "gammapy.astro.darkmatter.DarkMatterAnnihilationSpectralModel.THERMAL_RELIC_CROSS_SECTION", false]], "theta (gammapy.maps.mapcoord attribute)": [[198, "gammapy.maps.MapCoord.theta", false]], "theta() (gammapy.astro.population.faucherspiral method)": [[33, "gammapy.astro.population.FaucherSpiral.theta", false]], "theta() (gammapy.astro.population.logspiral method)": [[34, "gammapy.astro.population.LogSpiral.theta", false]], "theta() (gammapy.astro.population.valleespiral method)": [[38, "gammapy.astro.population.ValleeSpiral.theta", false]], "theta_0 (gammapy.astro.population.faucherspiral attribute)": [[33, "gammapy.astro.population.FaucherSpiral.theta_0", false]], "theta_0 (gammapy.astro.population.valleespiral attribute)": [[38, "gammapy.astro.population.ValleeSpiral.theta_0", false]], "tied (gammapy.astro.population.casebattacharya1998 attribute)": [[28, "gammapy.astro.population.CaseBattacharya1998.tied", false]], "tied (gammapy.astro.population.exponential attribute)": [[29, "gammapy.astro.population.Exponential.tied", false]], "tied (gammapy.astro.population.faucherkaspi2006 attribute)": [[30, "gammapy.astro.population.FaucherKaspi2006.tied", false]], "tied (gammapy.astro.population.faucherkaspi2006velocitybimodal attribute)": [[31, "gammapy.astro.population.FaucherKaspi2006VelocityBimodal.tied", false]], "tied (gammapy.astro.population.faucherkaspi2006velocitymaxwellian attribute)": [[32, "gammapy.astro.population.FaucherKaspi2006VelocityMaxwellian.tied", false]], "tied (gammapy.astro.population.lorimer2006 attribute)": [[35, "gammapy.astro.population.Lorimer2006.tied", false]], "tied (gammapy.astro.population.paczynski1990 attribute)": [[36, "gammapy.astro.population.Paczynski1990.tied", false]], "tied (gammapy.astro.population.paczynski1990velocity attribute)": [[37, "gammapy.astro.population.Paczynski1990Velocity.tied", false]], "tied (gammapy.astro.population.yusifovkucuk2004 attribute)": [[39, "gammapy.astro.population.YusifovKucuk2004.tied", false]], "tied (gammapy.astro.population.yusifovkucuk2004b attribute)": [[40, "gammapy.astro.population.YusifovKucuk2004B.tied", false]], "tilt (gammapy.modeling.models.powerlawnormspectralmodel attribute)": [[251, "gammapy.modeling.models.PowerLawNormSpectralModel.tilt", false]], "time (gammapy.data.eventlist attribute)": [[83, "gammapy.data.EventList.time", false]], "time (gammapy.data.pointinginfo attribute)": [[94, "gammapy.data.PointingInfo.time", false]], "time_bounds (gammapy.maps.timemapaxis attribute)": [[202, "gammapy.maps.TimeMapAxis.time_bounds", false]], "time_delta (gammapy.data.gti attribute)": [[86, "gammapy.data.GTI.time_delta", false]], "time_delta (gammapy.maps.timemapaxis attribute)": [[202, "gammapy.maps.TimeMapAxis.time_delta", false]], "time_edges (gammapy.maps.timemapaxis attribute)": [[202, "gammapy.maps.TimeMapAxis.time_edges", false]], "time_format (gammapy.maps.timemapaxis attribute)": [[202, "gammapy.maps.TimeMapAxis.time_format", false]], "time_intervals (gammapy.data.gti attribute)": [[86, "gammapy.data.GTI.time_intervals", false]], "time_max (gammapy.maps.timemapaxis attribute)": [[202, "gammapy.maps.TimeMapAxis.time_max", false]], "time_mid (gammapy.maps.timemapaxis attribute)": [[202, "gammapy.maps.TimeMapAxis.time_mid", false]], "time_min (gammapy.maps.timemapaxis attribute)": [[202, "gammapy.maps.TimeMapAxis.time_min", false]], "time_ref (gammapy.data.eventlist attribute)": [[83, "gammapy.data.EventList.time_ref", false]], "time_ref (gammapy.data.gti attribute)": [[86, "gammapy.data.GTI.time_ref", false]], "time_ref (gammapy.data.observationtable attribute)": [[91, "gammapy.data.ObservationTable.time_ref", false]], "time_ref (gammapy.data.pointinginfo attribute)": [[94, "gammapy.data.PointingInfo.time_ref", false]], "time_ref_from_dict() (in module gammapy.utils.time)": [[359, "gammapy.utils.time.time_ref_from_dict", false]], "time_ref_to_dict() (in module gammapy.utils.time)": [[360, "gammapy.utils.time.time_ref_to_dict", false]], "time_relative_to_ref() (in module gammapy.utils.time)": [[361, "gammapy.utils.time.time_relative_to_ref", false]], "time_start (gammapy.data.gti attribute)": [[86, "gammapy.data.GTI.time_start", false]], "time_start (gammapy.data.observationtable attribute)": [[91, "gammapy.data.ObservationTable.time_start", false]], "time_stop (gammapy.data.gti attribute)": [[86, "gammapy.data.GTI.time_stop", false]], "time_stop (gammapy.data.observationtable attribute)": [[91, "gammapy.data.ObservationTable.time_stop", false]], "time_sum (gammapy.data.gti attribute)": [[86, "gammapy.data.GTI.time_sum", false]], "time_sum() (gammapy.modeling.models.constanttemporalmodel static method)": [[222, "gammapy.modeling.models.ConstantTemporalModel.time_sum", false]], "time_sum() (gammapy.modeling.models.expdecaytemporalmodel static method)": [[230, "gammapy.modeling.models.ExpDecayTemporalModel.time_sum", false]], "time_sum() (gammapy.modeling.models.gaussiantemporalmodel static method)": [[234, "gammapy.modeling.models.GaussianTemporalModel.time_sum", false]], "time_sum() (gammapy.modeling.models.generalizedgaussiantemporalmodel static method)": [[236, "gammapy.modeling.models.GeneralizedGaussianTemporalModel.time_sum", false]], "time_sum() (gammapy.modeling.models.lightcurvetemplatetemporalmodel static method)": [[237, "gammapy.modeling.models.LightCurveTemplateTemporalModel.time_sum", false]], "time_sum() (gammapy.modeling.models.lineartemporalmodel static method)": [[238, "gammapy.modeling.models.LinearTemporalModel.time_sum", false]], "time_sum() (gammapy.modeling.models.powerlawtemporalmodel static method)": [[253, "gammapy.modeling.models.PowerLawTemporalModel.time_sum", false]], "time_sum() (gammapy.modeling.models.sinetemporalmodel static method)": [[260, "gammapy.modeling.models.SineTemporalModel.time_sum", false]], "time_sum() (gammapy.modeling.models.templatephasecurvetemporalmodel static method)": [[272, "gammapy.modeling.models.TemplatePhaseCurveTemporalModel.time_sum", false]], "time_sum() (gammapy.modeling.models.temporalmodel static method)": [[275, "gammapy.modeling.models.TemporalModel.time_sum", false]], "timemapaxis (class in gammapy.maps)": [[202, "gammapy.maps.TimeMapAxis", false]], "timmerkonig_lightcurve_simulator() (in module gammapy.stats)": [[286, "gammapy.stats.TimmerKonig_lightcurve_simulator", false]], "tmid (gammapy.data.observation attribute)": [[88, "gammapy.data.Observation.tmid", false]], "to_2d() (gammapy.irf.background3d method)": [[147, "gammapy.irf.Background3D.to_2d", false]], "to_3d() (gammapy.irf.background2d method)": [[146, "gammapy.irf.Background2D.to_3d", false]], "to_bands_hdu() (gammapy.maps.geom method)": [[190, "gammapy.maps.Geom.to_bands_hdu", false]], "to_bands_hdu() (gammapy.maps.hpxgeom method)": [[191, "gammapy.maps.HpxGeom.to_bands_hdu", false]], "to_bands_hdu() (gammapy.maps.regiongeom method)": [[200, "gammapy.maps.RegionGeom.to_bands_hdu", false]], "to_bands_hdu() (gammapy.maps.wcsgeom method)": [[203, "gammapy.maps.WcsGeom.to_bands_hdu", false]], "to_binsz() (gammapy.maps.hpxgeom method)": [[191, "gammapy.maps.HpxGeom.to_binsz", false]], "to_binsz() (gammapy.maps.regiongeom method)": [[200, "gammapy.maps.RegionGeom.to_binsz", false]], "to_binsz() (gammapy.maps.wcsgeom method)": [[203, "gammapy.maps.WcsGeom.to_binsz", false]], "to_binsz_wcs() (gammapy.maps.regiongeom method)": [[200, "gammapy.maps.RegionGeom.to_binsz_wcs", false]], "to_contiguous() (gammapy.maps.timemapaxis method)": [[202, "gammapy.maps.TimeMapAxis.to_contiguous", false]], "to_counts_hdulist() (gammapy.datasets.ogipdatasetwriter method)": [[107, "gammapy.datasets.OGIPDatasetWriter.to_counts_hdulist", false]], "to_cube() (gammapy.maps.geom method)": [[190, "gammapy.maps.Geom.to_cube", false]], "to_cube() (gammapy.maps.hpxgeom method)": [[191, "gammapy.maps.HpxGeom.to_cube", false]], "to_cube() (gammapy.maps.hpxmap method)": [[192, "gammapy.maps.HpxMap.to_cube", false]], "to_cube() (gammapy.maps.hpxndmap method)": [[193, "gammapy.maps.HpxNDMap.to_cube", false]], "to_cube() (gammapy.maps.map method)": [[195, "gammapy.maps.Map.to_cube", false]], "to_cube() (gammapy.maps.regiongeom method)": [[200, "gammapy.maps.RegionGeom.to_cube", false]], "to_cube() (gammapy.maps.regionndmap method)": [[201, "gammapy.maps.RegionNDMap.to_cube", false]], "to_cube() (gammapy.maps.wcsgeom method)": [[203, "gammapy.maps.WcsGeom.to_cube", false]], "to_cube() (gammapy.maps.wcsmap method)": [[204, "gammapy.maps.WcsMap.to_cube", false]], "to_cube() (gammapy.maps.wcsndmap method)": [[205, "gammapy.maps.WcsNDMap.to_cube", false]], "to_dict() (gammapy.astro.darkmatter.darkmatterannihilationspectralmodel method)": [[19, "gammapy.astro.darkmatter.DarkMatterAnnihilationSpectralModel.to_dict", false]], "to_dict() (gammapy.astro.darkmatter.darkmatterdecayspectralmodel method)": [[20, "gammapy.astro.darkmatter.DarkMatterDecaySpectralModel.to_dict", false]], "to_dict() (gammapy.astro.darkmatter.primaryflux method)": [[26, "gammapy.astro.darkmatter.PrimaryFlux.to_dict", false]], "to_dict() (gammapy.datasets.dataset method)": [[99, "gammapy.datasets.Dataset.to_dict", false]], "to_dict() (gammapy.datasets.fluxpointsdataset method)": [[101, "gammapy.datasets.FluxPointsDataset.to_dict", false]], "to_dict() (gammapy.datasets.mapdataset method)": [[102, "gammapy.datasets.MapDataset.to_dict", false]], "to_dict() (gammapy.datasets.mapdatasetonoff method)": [[105, "gammapy.datasets.MapDatasetOnOff.to_dict", false]], "to_dict() (gammapy.datasets.spectrumdataset method)": [[109, "gammapy.datasets.SpectrumDataset.to_dict", false]], "to_dict() (gammapy.datasets.spectrumdatasetonoff method)": [[110, "gammapy.datasets.SpectrumDatasetOnOff.to_dict", false]], "to_dict() (gammapy.modeling.covarianceresult method)": [[209, "gammapy.modeling.CovarianceResult.to_dict", false]], "to_dict() (gammapy.modeling.models.brokenpowerlawspectralmodel method)": [[217, "gammapy.modeling.models.BrokenPowerLawSpectralModel.to_dict", false]], "to_dict() (gammapy.modeling.models.compoundspectralmodel method)": [[218, "gammapy.modeling.models.CompoundSpectralModel.to_dict", false]], "to_dict() (gammapy.modeling.models.constantfluxspatialmodel method)": [[219, "gammapy.modeling.models.ConstantFluxSpatialModel.to_dict", false]], "to_dict() (gammapy.modeling.models.constantspatialmodel method)": [[220, "gammapy.modeling.models.ConstantSpatialModel.to_dict", false]], "to_dict() (gammapy.modeling.models.constantspectralmodel method)": [[221, "gammapy.modeling.models.ConstantSpectralModel.to_dict", false]], "to_dict() (gammapy.modeling.models.constanttemporalmodel method)": [[222, "gammapy.modeling.models.ConstantTemporalModel.to_dict", false]], "to_dict() (gammapy.modeling.models.datasetmodels method)": [[223, "gammapy.modeling.models.DatasetModels.to_dict", false]], "to_dict() (gammapy.modeling.models.diskspatialmodel method)": [[224, "gammapy.modeling.models.DiskSpatialModel.to_dict", false]], "to_dict() (gammapy.modeling.models.eblabsorptionnormspectralmodel method)": [[225, "gammapy.modeling.models.EBLAbsorptionNormSpectralModel.to_dict", false]], "to_dict() (gammapy.modeling.models.expcutoffpowerlaw3fglspectralmodel method)": [[227, "gammapy.modeling.models.ExpCutoffPowerLaw3FGLSpectralModel.to_dict", false]], "to_dict() (gammapy.modeling.models.expcutoffpowerlawnormspectralmodel method)": [[228, "gammapy.modeling.models.ExpCutoffPowerLawNormSpectralModel.to_dict", false]], "to_dict() (gammapy.modeling.models.expcutoffpowerlawspectralmodel method)": [[229, "gammapy.modeling.models.ExpCutoffPowerLawSpectralModel.to_dict", false]], "to_dict() (gammapy.modeling.models.expdecaytemporalmodel method)": [[230, "gammapy.modeling.models.ExpDecayTemporalModel.to_dict", false]], "to_dict() (gammapy.modeling.models.fovbackgroundmodel method)": [[231, "gammapy.modeling.models.FoVBackgroundModel.to_dict", false]], "to_dict() (gammapy.modeling.models.gaussianspatialmodel method)": [[232, "gammapy.modeling.models.GaussianSpatialModel.to_dict", false]], "to_dict() (gammapy.modeling.models.gaussianspectralmodel method)": [[233, "gammapy.modeling.models.GaussianSpectralModel.to_dict", false]], "to_dict() (gammapy.modeling.models.gaussiantemporalmodel method)": [[234, "gammapy.modeling.models.GaussianTemporalModel.to_dict", false]], "to_dict() (gammapy.modeling.models.generalizedgaussianspatialmodel method)": [[235, "gammapy.modeling.models.GeneralizedGaussianSpatialModel.to_dict", false]], "to_dict() (gammapy.modeling.models.generalizedgaussiantemporalmodel method)": [[236, "gammapy.modeling.models.GeneralizedGaussianTemporalModel.to_dict", false]], "to_dict() (gammapy.modeling.models.lightcurvetemplatetemporalmodel method)": [[237, "gammapy.modeling.models.LightCurveTemplateTemporalModel.to_dict", false]], "to_dict() (gammapy.modeling.models.lineartemporalmodel method)": [[238, "gammapy.modeling.models.LinearTemporalModel.to_dict", false]], "to_dict() (gammapy.modeling.models.logparabolanormspectralmodel method)": [[239, "gammapy.modeling.models.LogParabolaNormSpectralModel.to_dict", false]], "to_dict() (gammapy.modeling.models.logparabolaspectralmodel method)": [[240, "gammapy.modeling.models.LogParabolaSpectralModel.to_dict", false]], "to_dict() (gammapy.modeling.models.meyercrabspectralmodel method)": [[242, "gammapy.modeling.models.MeyerCrabSpectralModel.to_dict", false]], "to_dict() (gammapy.modeling.models.modelbase method)": [[244, "gammapy.modeling.models.ModelBase.to_dict", false]], "to_dict() (gammapy.modeling.models.models method)": [[245, "gammapy.modeling.models.Models.to_dict", false]], "to_dict() (gammapy.modeling.models.naimaspectralmodel method)": [[246, "gammapy.modeling.models.NaimaSpectralModel.to_dict", false]], "to_dict() (gammapy.modeling.models.piecewisenormspatialmodel method)": [[247, "gammapy.modeling.models.PiecewiseNormSpatialModel.to_dict", false]], "to_dict() (gammapy.modeling.models.piecewisenormspectralmodel method)": [[248, "gammapy.modeling.models.PiecewiseNormSpectralModel.to_dict", false]], "to_dict() (gammapy.modeling.models.pointspatialmodel method)": [[249, "gammapy.modeling.models.PointSpatialModel.to_dict", false]], "to_dict() (gammapy.modeling.models.powerlaw2spectralmodel method)": [[250, "gammapy.modeling.models.PowerLaw2SpectralModel.to_dict", false]], "to_dict() (gammapy.modeling.models.powerlawnormspectralmodel method)": [[251, "gammapy.modeling.models.PowerLawNormSpectralModel.to_dict", false]], "to_dict() (gammapy.modeling.models.powerlawspectralmodel method)": [[252, "gammapy.modeling.models.PowerLawSpectralModel.to_dict", false]], "to_dict() (gammapy.modeling.models.powerlawtemporalmodel method)": [[253, "gammapy.modeling.models.PowerLawTemporalModel.to_dict", false]], "to_dict() (gammapy.modeling.models.prior method)": [[254, "gammapy.modeling.models.Prior.to_dict", false]], "to_dict() (gammapy.modeling.models.scalespectralmodel method)": [[257, "gammapy.modeling.models.ScaleSpectralModel.to_dict", false]], "to_dict() (gammapy.modeling.models.shell2spatialmodel method)": [[258, "gammapy.modeling.models.Shell2SpatialModel.to_dict", false]], "to_dict() (gammapy.modeling.models.shellspatialmodel method)": [[259, "gammapy.modeling.models.ShellSpatialModel.to_dict", false]], "to_dict() (gammapy.modeling.models.sinetemporalmodel method)": [[260, "gammapy.modeling.models.SineTemporalModel.to_dict", false]], "to_dict() (gammapy.modeling.models.skymodel method)": [[261, "gammapy.modeling.models.SkyModel.to_dict", false]], "to_dict() (gammapy.modeling.models.smoothbrokenpowerlawspectralmodel method)": [[262, "gammapy.modeling.models.SmoothBrokenPowerLawSpectralModel.to_dict", false]], "to_dict() (gammapy.modeling.models.spatialmodel method)": [[263, "gammapy.modeling.models.SpatialModel.to_dict", false]], "to_dict() (gammapy.modeling.models.spectralmodel method)": [[264, "gammapy.modeling.models.SpectralModel.to_dict", false]], "to_dict() (gammapy.modeling.models.superexpcutoffpowerlaw3fglspectralmodel method)": [[265, "gammapy.modeling.models.SuperExpCutoffPowerLaw3FGLSpectralModel.to_dict", false]], "to_dict() (gammapy.modeling.models.superexpcutoffpowerlaw4fgldr3spectralmodel method)": [[266, "gammapy.modeling.models.SuperExpCutoffPowerLaw4FGLDR3SpectralModel.to_dict", false]], "to_dict() (gammapy.modeling.models.superexpcutoffpowerlaw4fglspectralmodel method)": [[267, "gammapy.modeling.models.SuperExpCutoffPowerLaw4FGLSpectralModel.to_dict", false]], "to_dict() (gammapy.modeling.models.templatendspatialmodel method)": [[269, "gammapy.modeling.models.TemplateNDSpatialModel.to_dict", false]], "to_dict() (gammapy.modeling.models.templatendspectralmodel method)": [[270, "gammapy.modeling.models.TemplateNDSpectralModel.to_dict", false]], "to_dict() (gammapy.modeling.models.templatenpredmodel method)": [[271, "gammapy.modeling.models.TemplateNPredModel.to_dict", false]], "to_dict() (gammapy.modeling.models.templatephasecurvetemporalmodel method)": [[272, "gammapy.modeling.models.TemplatePhaseCurveTemporalModel.to_dict", false]], "to_dict() (gammapy.modeling.models.templatespatialmodel method)": [[273, "gammapy.modeling.models.TemplateSpatialModel.to_dict", false]], "to_dict() (gammapy.modeling.models.templatespectralmodel method)": [[274, "gammapy.modeling.models.TemplateSpectralModel.to_dict", false]], "to_dict() (gammapy.modeling.models.temporalmodel method)": [[275, "gammapy.modeling.models.TemporalModel.to_dict", false]], "to_dict() (gammapy.modeling.optimizeresult method)": [[212, "gammapy.modeling.OptimizeResult.to_dict", false]], "to_dict() (gammapy.modeling.parameter method)": [[213, "gammapy.modeling.Parameter.to_dict", false]], "to_dict() (gammapy.modeling.parameters method)": [[214, "gammapy.modeling.Parameters.to_dict", false]], "to_dict() (gammapy.modeling.priorparameter method)": [[215, "gammapy.modeling.PriorParameter.to_dict", false]], "to_dict() (gammapy.modeling.priorparameters method)": [[216, "gammapy.modeling.PriorParameters.to_dict", false]], "to_edisp_kernel() (gammapy.irf.energydispersion2d method)": [[154, "gammapy.irf.EnergyDispersion2D.to_edisp_kernel", false]], "to_edisp_kernel_map() (gammapy.irf.edispmap method)": [[151, "gammapy.irf.EDispMap.to_edisp_kernel_map", false]], "to_even_npix() (gammapy.maps.wcsgeom method)": [[203, "gammapy.maps.WcsGeom.to_even_npix", false]], "to_fits_header() (gammapy.data.fixedpointinginfo method)": [[85, "gammapy.data.FixedPointingInfo.to_fits_header", false]], "to_frame() (gammapy.maps.mapcoord method)": [[198, "gammapy.maps.MapCoord.to_frame", false]], "to_gti() (gammapy.maps.timemapaxis method)": [[202, "gammapy.maps.TimeMapAxis.to_gti", false]], "to_hdu() (gammapy.maps.hpxmap method)": [[192, "gammapy.maps.HpxMap.to_hdu", false]], "to_hdu() (gammapy.maps.hpxndmap method)": [[193, "gammapy.maps.HpxNDMap.to_hdu", false]], "to_hdu() (gammapy.maps.wcsmap method)": [[204, "gammapy.maps.WcsMap.to_hdu", false]], "to_hdu() (gammapy.maps.wcsndmap method)": [[205, "gammapy.maps.WcsNDMap.to_hdu", false]], "to_hdulist() (gammapy.datasets.mapdataset method)": [[102, "gammapy.datasets.MapDataset.to_hdulist", false]], "to_hdulist() (gammapy.datasets.mapdatasetonoff method)": [[105, "gammapy.datasets.MapDatasetOnOff.to_hdulist", false]], "to_hdulist() (gammapy.datasets.spectrumdataset method)": [[109, "gammapy.datasets.SpectrumDataset.to_hdulist", false]], "to_hdulist() (gammapy.datasets.spectrumdatasetonoff method)": [[110, "gammapy.datasets.SpectrumDatasetOnOff.to_hdulist", false]], "to_hdulist() (gammapy.estimators.fluxmaps method)": [[122, "gammapy.estimators.FluxMaps.to_hdulist", false]], "to_hdulist() (gammapy.estimators.fluxpoints method)": [[124, "gammapy.estimators.FluxPoints.to_hdulist", false]], "to_hdulist() (gammapy.irf.background2d method)": [[146, "gammapy.irf.Background2D.to_hdulist", false]], "to_hdulist() (gammapy.irf.background3d method)": [[147, "gammapy.irf.Background3D.to_hdulist", false]], "to_hdulist() (gammapy.irf.backgroundirf method)": [[148, "gammapy.irf.BackgroundIRF.to_hdulist", false]], "to_hdulist() (gammapy.irf.edispkernel method)": [[149, "gammapy.irf.EDispKernel.to_hdulist", false]], "to_hdulist() (gammapy.irf.edispkernelmap method)": [[150, "gammapy.irf.EDispKernelMap.to_hdulist", false]], "to_hdulist() (gammapy.irf.edispmap method)": [[151, "gammapy.irf.EDispMap.to_hdulist", false]], "to_hdulist() (gammapy.irf.effectiveareatable2d method)": [[152, "gammapy.irf.EffectiveAreaTable2D.to_hdulist", false]], "to_hdulist() (gammapy.irf.energydependentmultigausspsf method)": [[153, "gammapy.irf.EnergyDependentMultiGaussPSF.to_hdulist", false]], "to_hdulist() (gammapy.irf.energydispersion2d method)": [[154, "gammapy.irf.EnergyDispersion2D.to_hdulist", false]], "to_hdulist() (gammapy.irf.irf method)": [[156, "gammapy.irf.IRF.to_hdulist", false]], "to_hdulist() (gammapy.irf.irfmap method)": [[157, "gammapy.irf.IRFMap.to_hdulist", false]], "to_hdulist() (gammapy.irf.parametricpsf method)": [[163, "gammapy.irf.ParametricPSF.to_hdulist", false]], "to_hdulist() (gammapy.irf.psf3d method)": [[159, "gammapy.irf.PSF3D.to_hdulist", false]], "to_hdulist() (gammapy.irf.psfking method)": [[161, "gammapy.irf.PSFKing.to_hdulist", false]], "to_hdulist() (gammapy.irf.psfmap method)": [[162, "gammapy.irf.PSFMap.to_hdulist", false]], "to_hdulist() (gammapy.irf.radmax2d method)": [[164, "gammapy.irf.RadMax2D.to_hdulist", false]], "to_hdulist() (gammapy.irf.recopsfmap method)": [[165, "gammapy.irf.RecoPSFMap.to_hdulist", false]], "to_hdulist() (gammapy.maps.hpxmap method)": [[192, "gammapy.maps.HpxMap.to_hdulist", false]], "to_hdulist() (gammapy.maps.hpxndmap method)": [[193, "gammapy.maps.HpxNDMap.to_hdulist", false]], "to_hdulist() (gammapy.maps.maps method)": [[199, "gammapy.maps.Maps.to_hdulist", false]], "to_hdulist() (gammapy.maps.regiongeom method)": [[200, "gammapy.maps.RegionGeom.to_hdulist", false]], "to_hdulist() (gammapy.maps.regionndmap method)": [[201, "gammapy.maps.RegionNDMap.to_hdulist", false]], "to_hdulist() (gammapy.maps.wcsmap method)": [[204, "gammapy.maps.WcsMap.to_hdulist", false]], "to_hdulist() (gammapy.maps.wcsndmap method)": [[205, "gammapy.maps.WcsNDMap.to_hdulist", false]], "to_header() (gammapy.data.eventlistmetadata method)": [[84, "gammapy.data.EventListMetaData.to_header", false]], "to_header() (gammapy.data.observationmetadata method)": [[90, "gammapy.data.ObservationMetaData.to_header", false]], "to_header() (gammapy.datasets.mapdatasetmetadata method)": [[104, "gammapy.datasets.MapDatasetMetaData.to_header", false]], "to_header() (gammapy.estimators.fluxmetadata method)": [[123, "gammapy.estimators.FluxMetaData.to_header", false]], "to_header() (gammapy.maps.hpxgeom method)": [[191, "gammapy.maps.HpxGeom.to_header", false]], "to_header() (gammapy.maps.labelmapaxis method)": [[194, "gammapy.maps.LabelMapAxis.to_header", false]], "to_header() (gammapy.maps.mapaxes method)": [[196, "gammapy.maps.MapAxes.to_header", false]], "to_header() (gammapy.maps.mapaxis method)": [[197, "gammapy.maps.MapAxis.to_header", false]], "to_header() (gammapy.maps.timemapaxis method)": [[202, "gammapy.maps.TimeMapAxis.to_header", false]], "to_header() (gammapy.maps.wcsgeom method)": [[203, "gammapy.maps.WcsGeom.to_header", false]], "to_image() (gammapy.datasets.mapdataset method)": [[102, "gammapy.datasets.MapDataset.to_image", false]], "to_image() (gammapy.datasets.mapdatasetonoff method)": [[105, "gammapy.datasets.MapDatasetOnOff.to_image", false]], "to_image() (gammapy.datasets.spectrumdataset method)": [[109, "gammapy.datasets.SpectrumDataset.to_image", false]], "to_image() (gammapy.datasets.spectrumdatasetonoff method)": [[110, "gammapy.datasets.SpectrumDatasetOnOff.to_image", false]], "to_image() (gammapy.irf.edispkernel method)": [[149, "gammapy.irf.EDispKernel.to_image", false]], "to_image() (gammapy.irf.edispkernelmap method)": [[150, "gammapy.irf.EDispKernelMap.to_image", false]], "to_image() (gammapy.irf.psfkernel method)": [[160, "gammapy.irf.PSFKernel.to_image", false]], "to_image() (gammapy.irf.psfmap method)": [[162, "gammapy.irf.PSFMap.to_image", false]], "to_image() (gammapy.irf.recopsfmap method)": [[165, "gammapy.irf.RecoPSFMap.to_image", false]], "to_image() (gammapy.maps.geom method)": [[190, "gammapy.maps.Geom.to_image", false]], "to_image() (gammapy.maps.hpxgeom method)": [[191, "gammapy.maps.HpxGeom.to_image", false]], "to_image() (gammapy.maps.regiongeom method)": [[200, "gammapy.maps.RegionGeom.to_image", false]], "to_image() (gammapy.maps.wcsgeom method)": [[203, "gammapy.maps.WcsGeom.to_image", false]], "to_map_dataset() (gammapy.datasets.mapdatasetonoff method)": [[105, "gammapy.datasets.MapDatasetOnOff.to_map_dataset", false]], "to_map_dataset() (gammapy.datasets.spectrumdatasetonoff method)": [[110, "gammapy.datasets.SpectrumDatasetOnOff.to_map_dataset", false]], "to_maps() (gammapy.estimators.fluxmaps method)": [[122, "gammapy.estimators.FluxMaps.to_maps", false]], "to_maps() (gammapy.estimators.fluxpoints method)": [[124, "gammapy.estimators.FluxPoints.to_maps", false]], "to_masked() (gammapy.datasets.mapdataset method)": [[102, "gammapy.datasets.MapDataset.to_masked", false]], "to_masked() (gammapy.datasets.mapdatasetonoff method)": [[105, "gammapy.datasets.MapDatasetOnOff.to_masked", false]], "to_masked() (gammapy.datasets.spectrumdataset method)": [[109, "gammapy.datasets.SpectrumDataset.to_masked", false]], "to_masked() (gammapy.datasets.spectrumdatasetonoff method)": [[110, "gammapy.datasets.SpectrumDatasetOnOff.to_masked", false]], "to_models() (gammapy.catalog.sourcecatalog method)": [[56, "gammapy.catalog.SourceCatalog.to_models", false]], "to_models() (gammapy.catalog.sourcecatalog1lhaaso method)": [[57, "gammapy.catalog.SourceCatalog1LHAASO.to_models", false]], "to_models() (gammapy.catalog.sourcecatalog2fhl method)": [[58, "gammapy.catalog.SourceCatalog2FHL.to_models", false]], "to_models() (gammapy.catalog.sourcecatalog2hwc method)": [[59, "gammapy.catalog.SourceCatalog2HWC.to_models", false]], "to_models() (gammapy.catalog.sourcecatalog2pc method)": [[60, "gammapy.catalog.SourceCatalog2PC.to_models", false]], "to_models() (gammapy.catalog.sourcecatalog3fgl method)": [[61, "gammapy.catalog.SourceCatalog3FGL.to_models", false]], "to_models() (gammapy.catalog.sourcecatalog3fhl method)": [[62, "gammapy.catalog.SourceCatalog3FHL.to_models", false]], "to_models() (gammapy.catalog.sourcecatalog3hwc method)": [[63, "gammapy.catalog.SourceCatalog3HWC.to_models", false]], "to_models() (gammapy.catalog.sourcecatalog3pc method)": [[64, "gammapy.catalog.SourceCatalog3PC.to_models", false]], "to_models() (gammapy.catalog.sourcecatalog4fgl method)": [[65, "gammapy.catalog.SourceCatalog4FGL.to_models", false]], "to_models() (gammapy.catalog.sourcecataloggammacat method)": [[66, "gammapy.catalog.SourceCatalogGammaCat.to_models", false]], "to_models() (gammapy.catalog.sourcecataloghgps method)": [[67, "gammapy.catalog.SourceCatalogHGPS.to_models", false]], "to_node_type() (gammapy.maps.mapaxis method)": [[197, "gammapy.maps.MapAxis.to_node_type", false]], "to_nside() (gammapy.maps.hpxgeom method)": [[191, "gammapy.maps.HpxGeom.to_nside", false]], "to_nside() (gammapy.maps.hpxndmap method)": [[193, "gammapy.maps.HpxNDMap.to_nside", false]], "to_odd_npix() (gammapy.maps.wcsgeom method)": [[203, "gammapy.maps.WcsGeom.to_odd_npix", false]], "to_pandas() (gammapy.data.hduindextable method)": [[87, "gammapy.data.HDUIndexTable.to_pandas", false]], "to_pandas() (gammapy.data.observationtable method)": [[91, "gammapy.data.ObservationTable.to_pandas", false]], "to_parameters_table() (gammapy.modeling.models.datasetmodels method)": [[223, "gammapy.modeling.models.DatasetModels.to_parameters_table", false]], "to_parameters_table() (gammapy.modeling.models.models method)": [[245, "gammapy.modeling.models.Models.to_parameters_table", false]], "to_psf3d() (gammapy.irf.energydependentmultigausspsf method)": [[153, "gammapy.irf.EnergyDependentMultiGaussPSF.to_psf3d", false]], "to_psf3d() (gammapy.irf.parametricpsf method)": [[163, "gammapy.irf.ParametricPSF.to_psf3d", false]], "to_psf3d() (gammapy.irf.psfking method)": [[161, "gammapy.irf.PSFKing.to_psf3d", false]], "to_region() (gammapy.modeling.models.constantfluxspatialmodel method)": [[219, "gammapy.modeling.models.ConstantFluxSpatialModel.to_region", false]], "to_region() (gammapy.modeling.models.constantspatialmodel method)": [[220, "gammapy.modeling.models.ConstantSpatialModel.to_region", false]], "to_region() (gammapy.modeling.models.diskspatialmodel method)": [[224, "gammapy.modeling.models.DiskSpatialModel.to_region", false]], "to_region() (gammapy.modeling.models.gaussianspatialmodel method)": [[232, "gammapy.modeling.models.GaussianSpatialModel.to_region", false]], "to_region() (gammapy.modeling.models.generalizedgaussianspatialmodel method)": [[235, "gammapy.modeling.models.GeneralizedGaussianSpatialModel.to_region", false]], "to_region() (gammapy.modeling.models.pointspatialmodel method)": [[249, "gammapy.modeling.models.PointSpatialModel.to_region", false]], "to_region() (gammapy.modeling.models.shell2spatialmodel method)": [[258, "gammapy.modeling.models.Shell2SpatialModel.to_region", false]], "to_region() (gammapy.modeling.models.shellspatialmodel method)": [[259, "gammapy.modeling.models.ShellSpatialModel.to_region", false]], "to_region() (gammapy.modeling.models.templatespatialmodel method)": [[273, "gammapy.modeling.models.TemplateSpatialModel.to_region", false]], "to_region_map_dataset() (gammapy.datasets.mapdataset method)": [[102, "gammapy.datasets.MapDataset.to_region_map_dataset", false]], "to_region_map_dataset() (gammapy.datasets.mapdatasetonoff method)": [[105, "gammapy.datasets.MapDatasetOnOff.to_region_map_dataset", false]], "to_region_map_dataset() (gammapy.datasets.spectrumdataset method)": [[109, "gammapy.datasets.SpectrumDataset.to_region_map_dataset", false]], "to_region_map_dataset() (gammapy.datasets.spectrumdatasetonoff method)": [[110, "gammapy.datasets.SpectrumDatasetOnOff.to_region_map_dataset", false]], "to_region_nd_map() (gammapy.irf.edispkernelmap method)": [[150, "gammapy.irf.EDispKernelMap.to_region_nd_map", false]], "to_region_nd_map() (gammapy.irf.edispmap method)": [[151, "gammapy.irf.EDispMap.to_region_nd_map", false]], "to_region_nd_map() (gammapy.irf.irfmap method)": [[157, "gammapy.irf.IRFMap.to_region_nd_map", false]], "to_region_nd_map() (gammapy.irf.psfmap method)": [[162, "gammapy.irf.PSFMap.to_region_nd_map", false]], "to_region_nd_map() (gammapy.irf.recopsfmap method)": [[165, "gammapy.irf.RecoPSFMap.to_region_nd_map", false]], "to_region_nd_map() (gammapy.maps.hpxndmap method)": [[193, "gammapy.maps.HpxNDMap.to_region_nd_map", false]], "to_region_nd_map() (gammapy.maps.regionndmap method)": [[201, "gammapy.maps.RegionNDMap.to_region_nd_map", false]], "to_region_nd_map() (gammapy.maps.wcsndmap method)": [[205, "gammapy.maps.WcsNDMap.to_region_nd_map", false]], "to_region_nd_map_histogram() (gammapy.maps.wcsndmap method)": [[205, "gammapy.maps.WcsNDMap.to_region_nd_map_histogram", false]], "to_regions() (gammapy.modeling.models.datasetmodels method)": [[223, "gammapy.modeling.models.DatasetModels.to_regions", false]], "to_regions() (gammapy.modeling.models.models method)": [[245, "gammapy.modeling.models.Models.to_regions", false]], "to_spectrum_dataset() (gammapy.datasets.mapdataset method)": [[102, "gammapy.datasets.MapDataset.to_spectrum_dataset", false]], "to_spectrum_dataset() (gammapy.datasets.mapdatasetonoff method)": [[105, "gammapy.datasets.MapDatasetOnOff.to_spectrum_dataset", false]], "to_spectrum_dataset() (gammapy.datasets.spectrumdataset method)": [[109, "gammapy.datasets.SpectrumDataset.to_spectrum_dataset", false]], "to_spectrum_dataset() (gammapy.datasets.spectrumdatasetonoff method)": [[110, "gammapy.datasets.SpectrumDatasetOnOff.to_spectrum_dataset", false]], "to_spectrum_datasets() (gammapy.datasets.datasets method)": [[100, "gammapy.datasets.Datasets.to_spectrum_datasets", false]], "to_swapped() (gammapy.maps.hpxgeom method)": [[191, "gammapy.maps.HpxGeom.to_swapped", false]], "to_swapped() (gammapy.maps.hpxmap method)": [[192, "gammapy.maps.HpxMap.to_swapped", false]], "to_swapped() (gammapy.maps.hpxndmap method)": [[193, "gammapy.maps.HpxNDMap.to_swapped", false]], "to_table() (gammapy.estimators.fluxpoints method)": [[124, "gammapy.estimators.FluxPoints.to_table", false]], "to_table() (gammapy.irf.background2d method)": [[146, "gammapy.irf.Background2D.to_table", false]], "to_table() (gammapy.irf.background3d method)": [[147, "gammapy.irf.Background3D.to_table", false]], "to_table() (gammapy.irf.backgroundirf method)": [[148, "gammapy.irf.BackgroundIRF.to_table", false]], "to_table() (gammapy.irf.edispkernel method)": [[149, "gammapy.irf.EDispKernel.to_table", false]], "to_table() (gammapy.irf.effectiveareatable2d method)": [[152, "gammapy.irf.EffectiveAreaTable2D.to_table", false]], "to_table() (gammapy.irf.energydependentmultigausspsf method)": [[153, "gammapy.irf.EnergyDependentMultiGaussPSF.to_table", false]], "to_table() (gammapy.irf.energydispersion2d method)": [[154, "gammapy.irf.EnergyDispersion2D.to_table", false]], "to_table() (gammapy.irf.irf method)": [[156, "gammapy.irf.IRF.to_table", false]], "to_table() (gammapy.irf.parametricpsf method)": [[163, "gammapy.irf.ParametricPSF.to_table", false]], "to_table() (gammapy.irf.psf3d method)": [[159, "gammapy.irf.PSF3D.to_table", false]], "to_table() (gammapy.irf.psfking method)": [[161, "gammapy.irf.PSFKing.to_table", false]], "to_table() (gammapy.irf.radmax2d method)": [[164, "gammapy.irf.RadMax2D.to_table", false]], "to_table() (gammapy.maps.mapaxes method)": [[196, "gammapy.maps.MapAxes.to_table", false]], "to_table() (gammapy.maps.mapaxis method)": [[197, "gammapy.maps.MapAxis.to_table", false]], "to_table() (gammapy.maps.regionndmap method)": [[201, "gammapy.maps.RegionNDMap.to_table", false]], "to_table() (gammapy.maps.timemapaxis method)": [[202, "gammapy.maps.TimeMapAxis.to_table", false]], "to_table() (gammapy.modeling.models.lightcurvetemplatetemporalmodel method)": [[237, "gammapy.modeling.models.LightCurveTemplateTemporalModel.to_table", false]], "to_table() (gammapy.modeling.parameters method)": [[214, "gammapy.modeling.Parameters.to_table", false]], "to_table() (gammapy.modeling.priorparameters method)": [[216, "gammapy.modeling.PriorParameters.to_table", false]], "to_table_hdu() (gammapy.data.eventlist method)": [[83, "gammapy.data.EventList.to_table_hdu", false]], "to_table_hdu() (gammapy.data.gti method)": [[86, "gammapy.data.GTI.to_table_hdu", false]], "to_table_hdu() (gammapy.irf.background2d method)": [[146, "gammapy.irf.Background2D.to_table_hdu", false]], "to_table_hdu() (gammapy.irf.background3d method)": [[147, "gammapy.irf.Background3D.to_table_hdu", false]], "to_table_hdu() (gammapy.irf.backgroundirf method)": [[148, "gammapy.irf.BackgroundIRF.to_table_hdu", false]], "to_table_hdu() (gammapy.irf.edispkernel method)": [[149, "gammapy.irf.EDispKernel.to_table_hdu", false]], "to_table_hdu() (gammapy.irf.effectiveareatable2d method)": [[152, "gammapy.irf.EffectiveAreaTable2D.to_table_hdu", false]], "to_table_hdu() (gammapy.irf.energydependentmultigausspsf method)": [[153, "gammapy.irf.EnergyDependentMultiGaussPSF.to_table_hdu", false]], "to_table_hdu() (gammapy.irf.energydispersion2d method)": [[154, "gammapy.irf.EnergyDispersion2D.to_table_hdu", false]], "to_table_hdu() (gammapy.irf.irf method)": [[156, "gammapy.irf.IRF.to_table_hdu", false]], "to_table_hdu() (gammapy.irf.parametricpsf method)": [[163, "gammapy.irf.ParametricPSF.to_table_hdu", false]], "to_table_hdu() (gammapy.irf.psf3d method)": [[159, "gammapy.irf.PSF3D.to_table_hdu", false]], "to_table_hdu() (gammapy.irf.psfking method)": [[161, "gammapy.irf.PSFKing.to_table_hdu", false]], "to_table_hdu() (gammapy.irf.radmax2d method)": [[164, "gammapy.irf.RadMax2D.to_table_hdu", false]], "to_table_hdu() (gammapy.maps.mapaxes method)": [[196, "gammapy.maps.MapAxes.to_table_hdu", false]], "to_table_hdu() (gammapy.maps.mapaxis method)": [[197, "gammapy.maps.MapAxis.to_table_hdu", false]], "to_template_sky_model() (gammapy.modeling.models.datasetmodels method)": [[223, "gammapy.modeling.models.DatasetModels.to_template_sky_model", false]], "to_template_sky_model() (gammapy.modeling.models.models method)": [[245, "gammapy.modeling.models.Models.to_template_sky_model", false]], "to_template_spectral_model() (gammapy.modeling.models.datasetmodels method)": [[223, "gammapy.modeling.models.DatasetModels.to_template_spectral_model", false]], "to_template_spectral_model() (gammapy.modeling.models.models method)": [[245, "gammapy.modeling.models.Models.to_template_spectral_model", false]], "to_unit() (gammapy.irf.background2d method)": [[146, "gammapy.irf.Background2D.to_unit", false]], "to_unit() (gammapy.irf.background3d method)": [[147, "gammapy.irf.Background3D.to_unit", false]], "to_unit() (gammapy.irf.backgroundirf method)": [[148, "gammapy.irf.BackgroundIRF.to_unit", false]], "to_unit() (gammapy.irf.edispkernel method)": [[149, "gammapy.irf.EDispKernel.to_unit", false]], "to_unit() (gammapy.irf.effectiveareatable2d method)": [[152, "gammapy.irf.EffectiveAreaTable2D.to_unit", false]], "to_unit() (gammapy.irf.energydependentmultigausspsf method)": [[153, "gammapy.irf.EnergyDependentMultiGaussPSF.to_unit", false]], "to_unit() (gammapy.irf.energydispersion2d method)": [[154, "gammapy.irf.EnergyDispersion2D.to_unit", false]], "to_unit() (gammapy.irf.irf method)": [[156, "gammapy.irf.IRF.to_unit", false]], "to_unit() (gammapy.irf.parametricpsf method)": [[163, "gammapy.irf.ParametricPSF.to_unit", false]], "to_unit() (gammapy.irf.psf3d method)": [[159, "gammapy.irf.PSF3D.to_unit", false]], "to_unit() (gammapy.irf.psfking method)": [[161, "gammapy.irf.PSFKing.to_unit", false]], "to_unit() (gammapy.irf.radmax2d method)": [[164, "gammapy.irf.RadMax2D.to_unit", false]], "to_unit() (gammapy.maps.hpxmap method)": [[192, "gammapy.maps.HpxMap.to_unit", false]], "to_unit() (gammapy.maps.hpxndmap method)": [[193, "gammapy.maps.HpxNDMap.to_unit", false]], "to_unit() (gammapy.maps.map method)": [[195, "gammapy.maps.Map.to_unit", false]], "to_unit() (gammapy.maps.regionndmap method)": [[201, "gammapy.maps.RegionNDMap.to_unit", false]], "to_unit() (gammapy.maps.wcsmap method)": [[204, "gammapy.maps.WcsMap.to_unit", false]], "to_unit() (gammapy.maps.wcsndmap method)": [[205, "gammapy.maps.WcsNDMap.to_unit", false]], "to_wcs() (gammapy.maps.hpxmap method)": [[192, "gammapy.maps.HpxMap.to_wcs", false]], "to_wcs() (gammapy.maps.hpxndmap method)": [[193, "gammapy.maps.HpxNDMap.to_wcs", false]], "to_wcs_geom() (gammapy.maps.hpxgeom method)": [[191, "gammapy.maps.HpxGeom.to_wcs_geom", false]], "to_wcs_geom() (gammapy.maps.regiongeom method)": [[200, "gammapy.maps.RegionGeom.to_wcs_geom", false]], "to_wcs_tiles() (gammapy.maps.hpxgeom method)": [[191, "gammapy.maps.HpxGeom.to_wcs_tiles", false]], "to_wcs_tiles() (gammapy.maps.hpxndmap method)": [[193, "gammapy.maps.HpxNDMap.to_wcs_tiles", false]], "to_yaml() (gammapy.analysis.analysisconfig method)": [[16, "gammapy.analysis.AnalysisConfig.to_yaml", false]], "to_yaml() (gammapy.data.eventlistmetadata method)": [[84, "gammapy.data.EventListMetaData.to_yaml", false]], "to_yaml() (gammapy.data.observationmetadata method)": [[90, "gammapy.data.ObservationMetaData.to_yaml", false]], "to_yaml() (gammapy.datasets.mapdatasetmetadata method)": [[104, "gammapy.datasets.MapDatasetMetaData.to_yaml", false]], "to_yaml() (gammapy.estimators.fluxmetadata method)": [[123, "gammapy.estimators.FluxMetaData.to_yaml", false]], "to_yaml() (gammapy.modeling.models.datasetmodels method)": [[223, "gammapy.modeling.models.DatasetModels.to_yaml", false]], "to_yaml() (gammapy.modeling.models.models method)": [[245, "gammapy.modeling.models.Models.to_yaml", false]], "to_yaml() (in module gammapy.utils.scripts)": [[345, "gammapy.utils.scripts.to_yaml", false]], "total_stat (gammapy.modeling.fitresult attribute)": [[211, "gammapy.modeling.FitResult.total_stat", false]], "total_stat (gammapy.modeling.optimizeresult attribute)": [[212, "gammapy.modeling.OptimizeResult.total_stat", false]], "trace (gammapy.modeling.fitresult attribute)": [[211, "gammapy.modeling.FitResult.trace", false]], "trace (gammapy.modeling.optimizeresult attribute)": [[212, "gammapy.modeling.OptimizeResult.trace", false]], "trapz_loglog() (in module gammapy.utils.integrate)": [[315, "gammapy.utils.integrate.trapz_loglog", false]], "ts (gammapy.estimators.fluxmaps attribute)": [[122, "gammapy.estimators.FluxMaps.ts", false]], "ts (gammapy.estimators.fluxpoints attribute)": [[124, "gammapy.estimators.FluxPoints.ts", false]], "ts (gammapy.stats.cashcountsstatistic attribute)": [[285, "gammapy.stats.CashCountsStatistic.ts", false]], "ts (gammapy.stats.wstatcountsstatistic attribute)": [[287, "gammapy.stats.WStatCountsStatistic.ts", false]], "ts_scan (gammapy.estimators.fluxmaps attribute)": [[122, "gammapy.estimators.FluxMaps.ts_scan", false]], "ts_scan (gammapy.estimators.fluxpoints attribute)": [[124, "gammapy.estimators.FluxPoints.ts_scan", false]], "tsmapestimator (class in gammapy.estimators)": [[132, "gammapy.estimators.TSMapEstimator", false]], "tstart (gammapy.data.observation attribute)": [[88, "gammapy.data.Observation.tstart", false]], "tstop (gammapy.data.observation attribute)": [[88, "gammapy.data.Observation.tstop", false]], "type (gammapy.astro.darkmatter.darkmatterannihilationspectralmodel attribute)": [[19, "gammapy.astro.darkmatter.DarkMatterAnnihilationSpectralModel.type", false]], "type (gammapy.astro.darkmatter.darkmatterdecayspectralmodel attribute)": [[20, "gammapy.astro.darkmatter.DarkMatterDecaySpectralModel.type", false]], "type (gammapy.astro.darkmatter.primaryflux attribute)": [[26, "gammapy.astro.darkmatter.PrimaryFlux.type", false]], "type (gammapy.modeling.models.brokenpowerlawspectralmodel attribute)": [[217, "gammapy.modeling.models.BrokenPowerLawSpectralModel.type", false]], "type (gammapy.modeling.models.compoundspectralmodel attribute)": [[218, "gammapy.modeling.models.CompoundSpectralModel.type", false]], "type (gammapy.modeling.models.constantfluxspatialmodel attribute)": [[219, "gammapy.modeling.models.ConstantFluxSpatialModel.type", false]], "type (gammapy.modeling.models.constantspatialmodel attribute)": [[220, "gammapy.modeling.models.ConstantSpatialModel.type", false]], "type (gammapy.modeling.models.constantspectralmodel attribute)": [[221, "gammapy.modeling.models.ConstantSpectralModel.type", false]], "type (gammapy.modeling.models.constanttemporalmodel attribute)": [[222, "gammapy.modeling.models.ConstantTemporalModel.type", false]], "type (gammapy.modeling.models.diskspatialmodel attribute)": [[224, "gammapy.modeling.models.DiskSpatialModel.type", false]], "type (gammapy.modeling.models.eblabsorptionnormspectralmodel attribute)": [[225, "gammapy.modeling.models.EBLAbsorptionNormSpectralModel.type", false]], "type (gammapy.modeling.models.expcutoffpowerlaw3fglspectralmodel attribute)": [[227, "gammapy.modeling.models.ExpCutoffPowerLaw3FGLSpectralModel.type", false]], "type (gammapy.modeling.models.expcutoffpowerlawnormspectralmodel attribute)": [[228, "gammapy.modeling.models.ExpCutoffPowerLawNormSpectralModel.type", false]], "type (gammapy.modeling.models.expcutoffpowerlawspectralmodel attribute)": [[229, "gammapy.modeling.models.ExpCutoffPowerLawSpectralModel.type", false]], "type (gammapy.modeling.models.expdecaytemporalmodel attribute)": [[230, "gammapy.modeling.models.ExpDecayTemporalModel.type", false]], "type (gammapy.modeling.models.fovbackgroundmodel attribute)": [[231, "gammapy.modeling.models.FoVBackgroundModel.type", false]], "type (gammapy.modeling.models.gaussianspatialmodel attribute)": [[232, "gammapy.modeling.models.GaussianSpatialModel.type", false]], "type (gammapy.modeling.models.gaussianspectralmodel attribute)": [[233, "gammapy.modeling.models.GaussianSpectralModel.type", false]], "type (gammapy.modeling.models.gaussiantemporalmodel attribute)": [[234, "gammapy.modeling.models.GaussianTemporalModel.type", false]], "type (gammapy.modeling.models.generalizedgaussianspatialmodel attribute)": [[235, "gammapy.modeling.models.GeneralizedGaussianSpatialModel.type", false]], "type (gammapy.modeling.models.generalizedgaussiantemporalmodel attribute)": [[236, "gammapy.modeling.models.GeneralizedGaussianTemporalModel.type", false]], "type (gammapy.modeling.models.lightcurvetemplatetemporalmodel attribute)": [[237, "gammapy.modeling.models.LightCurveTemplateTemporalModel.type", false]], "type (gammapy.modeling.models.lineartemporalmodel attribute)": [[238, "gammapy.modeling.models.LinearTemporalModel.type", false]], "type (gammapy.modeling.models.logparabolanormspectralmodel attribute)": [[239, "gammapy.modeling.models.LogParabolaNormSpectralModel.type", false]], "type (gammapy.modeling.models.logparabolaspectralmodel attribute)": [[240, "gammapy.modeling.models.LogParabolaSpectralModel.type", false]], "type (gammapy.modeling.models.meyercrabspectralmodel attribute)": [[242, "gammapy.modeling.models.MeyerCrabSpectralModel.type", false]], "type (gammapy.modeling.models.modelbase attribute)": [[244, "gammapy.modeling.models.ModelBase.type", false]], "type (gammapy.modeling.models.naimaspectralmodel attribute)": [[246, "gammapy.modeling.models.NaimaSpectralModel.type", false]], "type (gammapy.modeling.models.piecewisenormspatialmodel attribute)": [[247, "gammapy.modeling.models.PiecewiseNormSpatialModel.type", false]], "type (gammapy.modeling.models.piecewisenormspectralmodel attribute)": [[248, "gammapy.modeling.models.PiecewiseNormSpectralModel.type", false]], "type (gammapy.modeling.models.pointspatialmodel attribute)": [[249, "gammapy.modeling.models.PointSpatialModel.type", false]], "type (gammapy.modeling.models.powerlaw2spectralmodel attribute)": [[250, "gammapy.modeling.models.PowerLaw2SpectralModel.type", false]], "type (gammapy.modeling.models.powerlawnormspectralmodel attribute)": [[251, "gammapy.modeling.models.PowerLawNormSpectralModel.type", false]], "type (gammapy.modeling.models.powerlawspectralmodel attribute)": [[252, "gammapy.modeling.models.PowerLawSpectralModel.type", false]], "type (gammapy.modeling.models.powerlawtemporalmodel attribute)": [[253, "gammapy.modeling.models.PowerLawTemporalModel.type", false]], "type (gammapy.modeling.models.prior attribute)": [[254, "gammapy.modeling.models.Prior.type", false]], "type (gammapy.modeling.models.scalespectralmodel attribute)": [[257, "gammapy.modeling.models.ScaleSpectralModel.type", false]], "type (gammapy.modeling.models.shell2spatialmodel attribute)": [[258, "gammapy.modeling.models.Shell2SpatialModel.type", false]], "type (gammapy.modeling.models.shellspatialmodel attribute)": [[259, "gammapy.modeling.models.ShellSpatialModel.type", false]], "type (gammapy.modeling.models.sinetemporalmodel attribute)": [[260, "gammapy.modeling.models.SineTemporalModel.type", false]], "type (gammapy.modeling.models.skymodel attribute)": [[261, "gammapy.modeling.models.SkyModel.type", false]], "type (gammapy.modeling.models.smoothbrokenpowerlawspectralmodel attribute)": [[262, "gammapy.modeling.models.SmoothBrokenPowerLawSpectralModel.type", false]], "type (gammapy.modeling.models.spatialmodel attribute)": [[263, "gammapy.modeling.models.SpatialModel.type", false]], "type (gammapy.modeling.models.spectralmodel attribute)": [[264, "gammapy.modeling.models.SpectralModel.type", false]], "type (gammapy.modeling.models.superexpcutoffpowerlaw3fglspectralmodel attribute)": [[265, "gammapy.modeling.models.SuperExpCutoffPowerLaw3FGLSpectralModel.type", false]], "type (gammapy.modeling.models.superexpcutoffpowerlaw4fgldr3spectralmodel attribute)": [[266, "gammapy.modeling.models.SuperExpCutoffPowerLaw4FGLDR3SpectralModel.type", false]], "type (gammapy.modeling.models.superexpcutoffpowerlaw4fglspectralmodel attribute)": [[267, "gammapy.modeling.models.SuperExpCutoffPowerLaw4FGLSpectralModel.type", false]], "type (gammapy.modeling.models.templatendspatialmodel attribute)": [[269, "gammapy.modeling.models.TemplateNDSpatialModel.type", false]], "type (gammapy.modeling.models.templatendspectralmodel attribute)": [[270, "gammapy.modeling.models.TemplateNDSpectralModel.type", false]], "type (gammapy.modeling.models.templatenpredmodel attribute)": [[271, "gammapy.modeling.models.TemplateNPredModel.type", false]], "type (gammapy.modeling.models.templatephasecurvetemporalmodel attribute)": [[272, "gammapy.modeling.models.TemplatePhaseCurveTemporalModel.type", false]], "type (gammapy.modeling.models.templatespatialmodel attribute)": [[273, "gammapy.modeling.models.TemplateSpatialModel.type", false]], "type (gammapy.modeling.models.templatespectralmodel attribute)": [[274, "gammapy.modeling.models.TemplateSpectralModel.type", false]], "type (gammapy.modeling.models.temporalmodel attribute)": [[275, "gammapy.modeling.models.TemporalModel.type", false]], "type (gammapy.modeling.parameter attribute)": [[213, "gammapy.modeling.Parameter.type", false]], "type (gammapy.modeling.priorparameter attribute)": [[215, "gammapy.modeling.PriorParameter.type", false]], "types (gammapy.modeling.parameters attribute)": [[214, "gammapy.modeling.Parameters.types", false]], "types (gammapy.modeling.priorparameters attribute)": [[216, "gammapy.modeling.PriorParameters.types", false]], "unfreeze() (gammapy.astro.darkmatter.darkmatterannihilationspectralmodel method)": [[19, "gammapy.astro.darkmatter.DarkMatterAnnihilationSpectralModel.unfreeze", false]], "unfreeze() (gammapy.astro.darkmatter.darkmatterdecayspectralmodel method)": [[20, "gammapy.astro.darkmatter.DarkMatterDecaySpectralModel.unfreeze", false]], "unfreeze() (gammapy.astro.darkmatter.primaryflux method)": [[26, "gammapy.astro.darkmatter.PrimaryFlux.unfreeze", false]], "unfreeze() (gammapy.modeling.models.brokenpowerlawspectralmodel method)": [[217, "gammapy.modeling.models.BrokenPowerLawSpectralModel.unfreeze", false]], "unfreeze() (gammapy.modeling.models.compoundspectralmodel method)": [[218, "gammapy.modeling.models.CompoundSpectralModel.unfreeze", false]], "unfreeze() (gammapy.modeling.models.constantfluxspatialmodel method)": [[219, "gammapy.modeling.models.ConstantFluxSpatialModel.unfreeze", false]], "unfreeze() (gammapy.modeling.models.constantspatialmodel method)": [[220, "gammapy.modeling.models.ConstantSpatialModel.unfreeze", false]], "unfreeze() (gammapy.modeling.models.constantspectralmodel method)": [[221, "gammapy.modeling.models.ConstantSpectralModel.unfreeze", false]], "unfreeze() (gammapy.modeling.models.constanttemporalmodel method)": [[222, "gammapy.modeling.models.ConstantTemporalModel.unfreeze", false]], "unfreeze() (gammapy.modeling.models.datasetmodels method)": [[223, "gammapy.modeling.models.DatasetModels.unfreeze", false]], "unfreeze() (gammapy.modeling.models.diskspatialmodel method)": [[224, "gammapy.modeling.models.DiskSpatialModel.unfreeze", false]], "unfreeze() (gammapy.modeling.models.eblabsorptionnormspectralmodel method)": [[225, "gammapy.modeling.models.EBLAbsorptionNormSpectralModel.unfreeze", false]], "unfreeze() (gammapy.modeling.models.expcutoffpowerlaw3fglspectralmodel method)": [[227, "gammapy.modeling.models.ExpCutoffPowerLaw3FGLSpectralModel.unfreeze", false]], "unfreeze() (gammapy.modeling.models.expcutoffpowerlawnormspectralmodel method)": [[228, "gammapy.modeling.models.ExpCutoffPowerLawNormSpectralModel.unfreeze", false]], "unfreeze() (gammapy.modeling.models.expcutoffpowerlawspectralmodel method)": [[229, "gammapy.modeling.models.ExpCutoffPowerLawSpectralModel.unfreeze", false]], "unfreeze() (gammapy.modeling.models.expdecaytemporalmodel method)": [[230, "gammapy.modeling.models.ExpDecayTemporalModel.unfreeze", false]], "unfreeze() (gammapy.modeling.models.fovbackgroundmodel method)": [[231, "gammapy.modeling.models.FoVBackgroundModel.unfreeze", false]], "unfreeze() (gammapy.modeling.models.gaussianspatialmodel method)": [[232, "gammapy.modeling.models.GaussianSpatialModel.unfreeze", false]], "unfreeze() (gammapy.modeling.models.gaussianspectralmodel method)": [[233, "gammapy.modeling.models.GaussianSpectralModel.unfreeze", false]], "unfreeze() (gammapy.modeling.models.gaussiantemporalmodel method)": [[234, "gammapy.modeling.models.GaussianTemporalModel.unfreeze", false]], "unfreeze() (gammapy.modeling.models.generalizedgaussianspatialmodel method)": [[235, "gammapy.modeling.models.GeneralizedGaussianSpatialModel.unfreeze", false]], "unfreeze() (gammapy.modeling.models.generalizedgaussiantemporalmodel method)": [[236, "gammapy.modeling.models.GeneralizedGaussianTemporalModel.unfreeze", false]], "unfreeze() (gammapy.modeling.models.lightcurvetemplatetemporalmodel method)": [[237, "gammapy.modeling.models.LightCurveTemplateTemporalModel.unfreeze", false]], "unfreeze() (gammapy.modeling.models.lineartemporalmodel method)": [[238, "gammapy.modeling.models.LinearTemporalModel.unfreeze", false]], "unfreeze() (gammapy.modeling.models.logparabolanormspectralmodel method)": [[239, "gammapy.modeling.models.LogParabolaNormSpectralModel.unfreeze", false]], "unfreeze() (gammapy.modeling.models.logparabolaspectralmodel method)": [[240, "gammapy.modeling.models.LogParabolaSpectralModel.unfreeze", false]], "unfreeze() (gammapy.modeling.models.meyercrabspectralmodel method)": [[242, "gammapy.modeling.models.MeyerCrabSpectralModel.unfreeze", false]], "unfreeze() (gammapy.modeling.models.modelbase method)": [[244, "gammapy.modeling.models.ModelBase.unfreeze", false]], "unfreeze() (gammapy.modeling.models.models method)": [[245, "gammapy.modeling.models.Models.unfreeze", false]], "unfreeze() (gammapy.modeling.models.naimaspectralmodel method)": [[246, "gammapy.modeling.models.NaimaSpectralModel.unfreeze", false]], "unfreeze() (gammapy.modeling.models.piecewisenormspatialmodel method)": [[247, "gammapy.modeling.models.PiecewiseNormSpatialModel.unfreeze", false]], "unfreeze() (gammapy.modeling.models.piecewisenormspectralmodel method)": [[248, "gammapy.modeling.models.PiecewiseNormSpectralModel.unfreeze", false]], "unfreeze() (gammapy.modeling.models.pointspatialmodel method)": [[249, "gammapy.modeling.models.PointSpatialModel.unfreeze", false]], "unfreeze() (gammapy.modeling.models.powerlaw2spectralmodel method)": [[250, "gammapy.modeling.models.PowerLaw2SpectralModel.unfreeze", false]], "unfreeze() (gammapy.modeling.models.powerlawnormspectralmodel method)": [[251, "gammapy.modeling.models.PowerLawNormSpectralModel.unfreeze", false]], "unfreeze() (gammapy.modeling.models.powerlawspectralmodel method)": [[252, "gammapy.modeling.models.PowerLawSpectralModel.unfreeze", false]], "unfreeze() (gammapy.modeling.models.powerlawtemporalmodel method)": [[253, "gammapy.modeling.models.PowerLawTemporalModel.unfreeze", false]], "unfreeze() (gammapy.modeling.models.prior method)": [[254, "gammapy.modeling.models.Prior.unfreeze", false]], "unfreeze() (gammapy.modeling.models.scalespectralmodel method)": [[257, "gammapy.modeling.models.ScaleSpectralModel.unfreeze", false]], "unfreeze() (gammapy.modeling.models.shell2spatialmodel method)": [[258, "gammapy.modeling.models.Shell2SpatialModel.unfreeze", false]], "unfreeze() (gammapy.modeling.models.shellspatialmodel method)": [[259, "gammapy.modeling.models.ShellSpatialModel.unfreeze", false]], "unfreeze() (gammapy.modeling.models.sinetemporalmodel method)": [[260, "gammapy.modeling.models.SineTemporalModel.unfreeze", false]], "unfreeze() (gammapy.modeling.models.skymodel method)": [[261, "gammapy.modeling.models.SkyModel.unfreeze", false]], "unfreeze() (gammapy.modeling.models.smoothbrokenpowerlawspectralmodel method)": [[262, "gammapy.modeling.models.SmoothBrokenPowerLawSpectralModel.unfreeze", false]], "unfreeze() (gammapy.modeling.models.spatialmodel method)": [[263, "gammapy.modeling.models.SpatialModel.unfreeze", false]], "unfreeze() (gammapy.modeling.models.spectralmodel method)": [[264, "gammapy.modeling.models.SpectralModel.unfreeze", false]], "unfreeze() (gammapy.modeling.models.superexpcutoffpowerlaw3fglspectralmodel method)": [[265, "gammapy.modeling.models.SuperExpCutoffPowerLaw3FGLSpectralModel.unfreeze", false]], "unfreeze() (gammapy.modeling.models.superexpcutoffpowerlaw4fgldr3spectralmodel method)": [[266, "gammapy.modeling.models.SuperExpCutoffPowerLaw4FGLDR3SpectralModel.unfreeze", false]], "unfreeze() (gammapy.modeling.models.superexpcutoffpowerlaw4fglspectralmodel method)": [[267, "gammapy.modeling.models.SuperExpCutoffPowerLaw4FGLSpectralModel.unfreeze", false]], "unfreeze() (gammapy.modeling.models.templatendspatialmodel method)": [[269, "gammapy.modeling.models.TemplateNDSpatialModel.unfreeze", false]], "unfreeze() (gammapy.modeling.models.templatendspectralmodel method)": [[270, "gammapy.modeling.models.TemplateNDSpectralModel.unfreeze", false]], "unfreeze() (gammapy.modeling.models.templatenpredmodel method)": [[271, "gammapy.modeling.models.TemplateNPredModel.unfreeze", false]], "unfreeze() (gammapy.modeling.models.templatephasecurvetemporalmodel method)": [[272, "gammapy.modeling.models.TemplatePhaseCurveTemporalModel.unfreeze", false]], "unfreeze() (gammapy.modeling.models.templatespatialmodel method)": [[273, "gammapy.modeling.models.TemplateSpatialModel.unfreeze", false]], "unfreeze() (gammapy.modeling.models.templatespectralmodel method)": [[274, "gammapy.modeling.models.TemplateSpectralModel.unfreeze", false]], "unfreeze() (gammapy.modeling.models.temporalmodel method)": [[275, "gammapy.modeling.models.TemporalModel.unfreeze", false]], "unfreeze_all() (gammapy.modeling.parameters method)": [[214, "gammapy.modeling.Parameters.unfreeze_all", false]], "unfreeze_all() (gammapy.modeling.priorparameters method)": [[216, "gammapy.modeling.PriorParameters.unfreeze_all", false]], "union() (gammapy.data.gti method)": [[86, "gammapy.data.GTI.union", false]], "union() (gammapy.maps.regiongeom method)": [[200, "gammapy.maps.RegionGeom.union", false]], "unique_parameters (gammapy.modeling.parameters attribute)": [[214, "gammapy.modeling.Parameters.unique_parameters", false]], "unique_parameters (gammapy.modeling.priorparameters attribute)": [[216, "gammapy.modeling.PriorParameters.unique_parameters", false]], "unit (gammapy.irf.background2d attribute)": [[146, "gammapy.irf.Background2D.unit", false]], "unit (gammapy.irf.background3d attribute)": [[147, "gammapy.irf.Background3D.unit", false]], "unit (gammapy.irf.backgroundirf attribute)": [[148, "gammapy.irf.BackgroundIRF.unit", false]], "unit (gammapy.irf.edispkernel attribute)": [[149, "gammapy.irf.EDispKernel.unit", false]], "unit (gammapy.irf.effectiveareatable2d attribute)": [[152, "gammapy.irf.EffectiveAreaTable2D.unit", false]], "unit (gammapy.irf.energydependentmultigausspsf attribute)": [[153, "gammapy.irf.EnergyDependentMultiGaussPSF.unit", false]], "unit (gammapy.irf.energydispersion2d attribute)": [[154, "gammapy.irf.EnergyDispersion2D.unit", false]], "unit (gammapy.irf.irf attribute)": [[156, "gammapy.irf.IRF.unit", false]], "unit (gammapy.irf.parametricpsf attribute)": [[163, "gammapy.irf.ParametricPSF.unit", false]], "unit (gammapy.irf.psf3d attribute)": [[159, "gammapy.irf.PSF3D.unit", false]], "unit (gammapy.irf.psfking attribute)": [[161, "gammapy.irf.PSFKing.unit", false]], "unit (gammapy.irf.radmax2d attribute)": [[164, "gammapy.irf.RadMax2D.unit", false]], "unit (gammapy.maps.hpxmap attribute)": [[192, "gammapy.maps.HpxMap.unit", false]], "unit (gammapy.maps.hpxndmap attribute)": [[193, "gammapy.maps.HpxNDMap.unit", false]], "unit (gammapy.maps.labelmapaxis attribute)": [[194, "gammapy.maps.LabelMapAxis.unit", false]], "unit (gammapy.maps.map attribute)": [[195, "gammapy.maps.Map.unit", false]], "unit (gammapy.maps.mapaxis attribute)": [[197, "gammapy.maps.MapAxis.unit", false]], "unit (gammapy.maps.regionndmap attribute)": [[201, "gammapy.maps.RegionNDMap.unit", false]], "unit (gammapy.maps.timemapaxis attribute)": [[202, "gammapy.maps.TimeMapAxis.unit", false]], "unit (gammapy.maps.wcsmap attribute)": [[204, "gammapy.maps.WcsMap.unit", false]], "unit (gammapy.maps.wcsndmap attribute)": [[205, "gammapy.maps.WcsNDMap.unit", false]], "unit (gammapy.modeling.parameter attribute)": [[213, "gammapy.modeling.Parameter.unit", false]], "unit (gammapy.modeling.priorparameter attribute)": [[215, "gammapy.modeling.PriorParameter.unit", false]], "unit_from_fits_image_hdu() (in module gammapy.utils.units)": [[363, "gammapy.utils.units.unit_from_fits_image_hdu", false]], "update() (gammapy.analysis.analysisconfig method)": [[16, "gammapy.analysis.AnalysisConfig.update", false]], "update() (gammapy.data.hduindextable method)": [[87, "gammapy.data.HDUIndexTable.update", false]], "update() (gammapy.data.observationtable method)": [[91, "gammapy.data.ObservationTable.update", false]], "update() (gammapy.maps.maps method)": [[199, "gammapy.maps.Maps.update", false]], "update_config() (gammapy.analysis.analysis method)": [[15, "gammapy.analysis.Analysis.update_config", false]], "update_forward_refs() (gammapy.analysis.analysisconfig class method)": [[16, "gammapy.analysis.AnalysisConfig.update_forward_refs", false]], "update_forward_refs() (gammapy.data.eventlistmetadata class method)": [[84, "gammapy.data.EventListMetaData.update_forward_refs", false]], "update_forward_refs() (gammapy.data.observationmetadata class method)": [[90, "gammapy.data.ObservationMetaData.update_forward_refs", false]], "update_forward_refs() (gammapy.datasets.mapdatasetmetadata class method)": [[104, "gammapy.datasets.MapDatasetMetaData.update_forward_refs", false]], "update_forward_refs() (gammapy.estimators.fluxmetadata class method)": [[123, "gammapy.estimators.FluxMetaData.update_forward_refs", false]], "update_from_dict() (gammapy.modeling.parameter method)": [[213, "gammapy.modeling.Parameter.update_from_dict", false]], "update_from_dict() (gammapy.modeling.priorparameter method)": [[215, "gammapy.modeling.PriorParameter.update_from_dict", false]], "update_link_label() (gammapy.modeling.models.datasetmodels method)": [[223, "gammapy.modeling.models.DatasetModels.update_link_label", false]], "update_link_label() (gammapy.modeling.models.models method)": [[245, "gammapy.modeling.models.Models.update_link_label", false]], "update_parameters_from_table() (gammapy.modeling.models.datasetmodels method)": [[223, "gammapy.modeling.models.DatasetModels.update_parameters_from_table", false]], "update_parameters_from_table() (gammapy.modeling.models.models method)": [[245, "gammapy.modeling.models.Models.update_parameters_from_table", false]], "upsample() (gammapy.maps.geom method)": [[190, "gammapy.maps.Geom.upsample", false]], "upsample() (gammapy.maps.hpxgeom method)": [[191, "gammapy.maps.HpxGeom.upsample", false]], "upsample() (gammapy.maps.hpxmap method)": [[192, "gammapy.maps.HpxMap.upsample", false]], "upsample() (gammapy.maps.hpxndmap method)": [[193, "gammapy.maps.HpxNDMap.upsample", false]], "upsample() (gammapy.maps.labelmapaxis method)": [[194, "gammapy.maps.LabelMapAxis.upsample", false]], "upsample() (gammapy.maps.map method)": [[195, "gammapy.maps.Map.upsample", false]], "upsample() (gammapy.maps.mapaxes method)": [[196, "gammapy.maps.MapAxes.upsample", false]], "upsample() (gammapy.maps.mapaxis method)": [[197, "gammapy.maps.MapAxis.upsample", false]], "upsample() (gammapy.maps.regiongeom method)": [[200, "gammapy.maps.RegionGeom.upsample", false]], "upsample() (gammapy.maps.regionndmap method)": [[201, "gammapy.maps.RegionNDMap.upsample", false]], "upsample() (gammapy.maps.timemapaxis method)": [[202, "gammapy.maps.TimeMapAxis.upsample", false]], "upsample() (gammapy.maps.wcsgeom method)": [[203, "gammapy.maps.WcsGeom.upsample", false]], "upsample() (gammapy.maps.wcsmap method)": [[204, "gammapy.maps.WcsMap.upsample", false]], "upsample() (gammapy.maps.wcsndmap method)": [[205, "gammapy.maps.WcsNDMap.upsample", false]], "use_center_as_plot_labels (gammapy.maps.mapaxis attribute)": [[197, "gammapy.maps.MapAxis.use_center_as_plot_labels", false]], "uses_quantity (gammapy.astro.population.casebattacharya1998 attribute)": [[28, "gammapy.astro.population.CaseBattacharya1998.uses_quantity", false]], "uses_quantity (gammapy.astro.population.exponential attribute)": [[29, "gammapy.astro.population.Exponential.uses_quantity", false]], "uses_quantity (gammapy.astro.population.faucherkaspi2006 attribute)": [[30, "gammapy.astro.population.FaucherKaspi2006.uses_quantity", false]], "uses_quantity (gammapy.astro.population.faucherkaspi2006velocitybimodal attribute)": [[31, "gammapy.astro.population.FaucherKaspi2006VelocityBimodal.uses_quantity", false]], "uses_quantity (gammapy.astro.population.faucherkaspi2006velocitymaxwellian attribute)": [[32, "gammapy.astro.population.FaucherKaspi2006VelocityMaxwellian.uses_quantity", false]], "uses_quantity (gammapy.astro.population.lorimer2006 attribute)": [[35, "gammapy.astro.population.Lorimer2006.uses_quantity", false]], "uses_quantity (gammapy.astro.population.paczynski1990 attribute)": [[36, "gammapy.astro.population.Paczynski1990.uses_quantity", false]], "uses_quantity (gammapy.astro.population.paczynski1990velocity attribute)": [[37, "gammapy.astro.population.Paczynski1990Velocity.uses_quantity", false]], "uses_quantity (gammapy.astro.population.yusifovkucuk2004 attribute)": [[39, "gammapy.astro.population.YusifovKucuk2004.uses_quantity", false]], "uses_quantity (gammapy.astro.population.yusifovkucuk2004b attribute)": [[40, "gammapy.astro.population.YusifovKucuk2004B.uses_quantity", false]], "v_0 (gammapy.astro.population.paczynski1990velocity attribute)": [[37, "gammapy.astro.population.Paczynski1990Velocity.v_0", false]], "valid_hdu_class (gammapy.data.hduindextable attribute)": [[87, "gammapy.data.HDUIndexTable.VALID_HDU_CLASS", false]], "valid_hdu_type (gammapy.data.hduindextable attribute)": [[87, "gammapy.data.HDUIndexTable.VALID_HDU_TYPE", false]], "validate() (gammapy.analysis.analysisconfig class method)": [[16, "gammapy.analysis.AnalysisConfig.validate", false]], "validate() (gammapy.data.eventlistmetadata class method)": [[84, "gammapy.data.EventListMetaData.validate", false]], "validate() (gammapy.data.observationmetadata class method)": [[90, "gammapy.data.ObservationMetaData.validate", false]], "validate() (gammapy.datasets.mapdatasetmetadata class method)": [[104, "gammapy.datasets.MapDatasetMetaData.validate", false]], "validate() (gammapy.estimators.fluxmetadata class method)": [[123, "gammapy.estimators.FluxMetaData.validate", false]], "valleespiral (class in gammapy.astro.population)": [[38, "gammapy.astro.population.ValleeSpiral", false]], "value (gammapy.modeling.models.constantspatialmodel attribute)": [[220, "gammapy.modeling.models.ConstantSpatialModel.value", false]], "value (gammapy.modeling.parameter attribute)": [[213, "gammapy.modeling.Parameter.value", false]], "value (gammapy.modeling.parameters attribute)": [[214, "gammapy.modeling.Parameters.value", false]], "value (gammapy.modeling.priorparameter attribute)": [[215, "gammapy.modeling.PriorParameter.value", false]], "value (gammapy.modeling.priorparameters attribute)": [[216, "gammapy.modeling.PriorParameters.value", false]], "values() (gammapy.data.hduindextable method)": [[87, "gammapy.data.HDUIndexTable.values", false]], "values() (gammapy.data.observationtable method)": [[91, "gammapy.data.ObservationTable.values", false]], "values() (gammapy.maps.maps method)": [[199, "gammapy.maps.Maps.values", false]], "values_equal() (gammapy.data.hduindextable method)": [[87, "gammapy.data.HDUIndexTable.values_equal", false]], "values_equal() (gammapy.data.observationtable method)": [[91, "gammapy.data.ObservationTable.values_equal", false]], "velocity_distributions (in module gammapy.astro.population)": [[49, "gammapy.astro.population.velocity_distributions", false]], "velocity_glon_glat() (in module gammapy.utils.coordinates)": [[311, "gammapy.utils.coordinates.velocity_glon_glat", false]], "w (gammapy.astro.population.faucherkaspi2006velocitybimodal attribute)": [[31, "gammapy.astro.population.FaucherKaspi2006VelocityBimodal.w", false]], "wcs (gammapy.maps.regiongeom attribute)": [[200, "gammapy.maps.RegionGeom.wcs", false]], "wcs (gammapy.maps.wcsgeom attribute)": [[203, "gammapy.maps.WcsGeom.wcs", false]], "wcs_geom (gammapy.modeling.models.datasetmodels attribute)": [[223, "gammapy.modeling.models.DatasetModels.wcs_geom", false]], "wcs_geom (gammapy.modeling.models.models attribute)": [[245, "gammapy.modeling.models.Models.wcs_geom", false]], "wcsgeom (class in gammapy.maps)": [[203, "gammapy.maps.WcsGeom", false]], "wcsmap (class in gammapy.maps)": [[204, "gammapy.maps.WcsMap", false]], "wcsndmap (class in gammapy.maps)": [[205, "gammapy.maps.WcsNDMap", false]], "weight (gammapy.modeling.models.prior attribute)": [[254, "gammapy.modeling.models.Prior.weight", false]], "width (gammapy.maps.hpxgeom attribute)": [[191, "gammapy.maps.HpxGeom.width", false]], "width (gammapy.maps.regiongeom attribute)": [[200, "gammapy.maps.RegionGeom.width", false]], "width (gammapy.maps.wcsgeom attribute)": [[203, "gammapy.maps.WcsGeom.width", false]], "width (gammapy.modeling.models.shellspatialmodel attribute)": [[259, "gammapy.modeling.models.ShellSpatialModel.width", false]], "width() (gammapy.catalog.sourcecataloglargescalehgps method)": [[68, "gammapy.catalog.SourceCatalogLargeScaleHGPS.width", false]], "width_error() (gammapy.catalog.sourcecataloglargescalehgps method)": [[68, "gammapy.catalog.SourceCatalogLargeScaleHGPS.width_error", false]], "with_units_from_data() (gammapy.astro.population.casebattacharya1998 method)": [[28, "gammapy.astro.population.CaseBattacharya1998.with_units_from_data", false]], "with_units_from_data() (gammapy.astro.population.exponential method)": [[29, "gammapy.astro.population.Exponential.with_units_from_data", false]], "with_units_from_data() (gammapy.astro.population.faucherkaspi2006 method)": [[30, "gammapy.astro.population.FaucherKaspi2006.with_units_from_data", false]], "with_units_from_data() (gammapy.astro.population.faucherkaspi2006velocitybimodal method)": [[31, "gammapy.astro.population.FaucherKaspi2006VelocityBimodal.with_units_from_data", false]], "with_units_from_data() (gammapy.astro.population.faucherkaspi2006velocitymaxwellian method)": [[32, "gammapy.astro.population.FaucherKaspi2006VelocityMaxwellian.with_units_from_data", false]], "with_units_from_data() (gammapy.astro.population.lorimer2006 method)": [[35, "gammapy.astro.population.Lorimer2006.with_units_from_data", false]], "with_units_from_data() (gammapy.astro.population.paczynski1990 method)": [[36, "gammapy.astro.population.Paczynski1990.with_units_from_data", false]], "with_units_from_data() (gammapy.astro.population.paczynski1990velocity method)": [[37, "gammapy.astro.population.Paczynski1990Velocity.with_units_from_data", false]], "with_units_from_data() (gammapy.astro.population.yusifovkucuk2004 method)": [[39, "gammapy.astro.population.YusifovKucuk2004.with_units_from_data", false]], "with_units_from_data() (gammapy.astro.population.yusifovkucuk2004b method)": [[40, "gammapy.astro.population.YusifovKucuk2004B.with_units_from_data", false]], "without_units_for_data() (gammapy.astro.population.casebattacharya1998 method)": [[28, "gammapy.astro.population.CaseBattacharya1998.without_units_for_data", false]], "without_units_for_data() (gammapy.astro.population.exponential method)": [[29, "gammapy.astro.population.Exponential.without_units_for_data", false]], "without_units_for_data() (gammapy.astro.population.faucherkaspi2006 method)": [[30, "gammapy.astro.population.FaucherKaspi2006.without_units_for_data", false]], "without_units_for_data() (gammapy.astro.population.faucherkaspi2006velocitybimodal method)": [[31, "gammapy.astro.population.FaucherKaspi2006VelocityBimodal.without_units_for_data", false]], "without_units_for_data() (gammapy.astro.population.faucherkaspi2006velocitymaxwellian method)": [[32, "gammapy.astro.population.FaucherKaspi2006VelocityMaxwellian.without_units_for_data", false]], "without_units_for_data() (gammapy.astro.population.lorimer2006 method)": [[35, "gammapy.astro.population.Lorimer2006.without_units_for_data", false]], "without_units_for_data() (gammapy.astro.population.paczynski1990 method)": [[36, "gammapy.astro.population.Paczynski1990.without_units_for_data", false]], "without_units_for_data() (gammapy.astro.population.paczynski1990velocity method)": [[37, "gammapy.astro.population.Paczynski1990Velocity.without_units_for_data", false]], "without_units_for_data() (gammapy.astro.population.yusifovkucuk2004 method)": [[39, "gammapy.astro.population.YusifovKucuk2004.without_units_for_data", false]], "without_units_for_data() (gammapy.astro.population.yusifovkucuk2004b method)": [[40, "gammapy.astro.population.YusifovKucuk2004B.without_units_for_data", false]], "wobbleregionsfinder (class in gammapy.makers)": [[180, "gammapy.makers.WobbleRegionsFinder", false]], "wrap_coord() (gammapy.maps.mapaxis method)": [[197, "gammapy.maps.MapAxis.wrap_coord", false]], "write (gammapy.data.hduindextable attribute)": [[87, "gammapy.data.HDUIndexTable.write", false]], "write (gammapy.data.observationtable attribute)": [[91, "gammapy.data.ObservationTable.write", false]], "write() (gammapy.analysis.analysisconfig method)": [[16, "gammapy.analysis.AnalysisConfig.write", false]], "write() (gammapy.astro.darkmatter.primaryflux method)": [[26, "gammapy.astro.darkmatter.PrimaryFlux.write", false]], "write() (gammapy.data.gti method)": [[86, "gammapy.data.GTI.write", false]], "write() (gammapy.data.observation method)": [[88, "gammapy.data.Observation.write", false]], "write() (gammapy.datasets.datasets method)": [[100, "gammapy.datasets.Datasets.write", false]], "write() (gammapy.datasets.fluxpointsdataset method)": [[101, "gammapy.datasets.FluxPointsDataset.write", false]], "write() (gammapy.datasets.mapdataset method)": [[102, "gammapy.datasets.MapDataset.write", false]], "write() (gammapy.datasets.mapdatasetonoff method)": [[105, "gammapy.datasets.MapDatasetOnOff.write", false]], "write() (gammapy.datasets.ogipdatasetwriter method)": [[107, "gammapy.datasets.OGIPDatasetWriter.write", false]], "write() (gammapy.datasets.spectrumdataset method)": [[109, "gammapy.datasets.SpectrumDataset.write", false]], "write() (gammapy.datasets.spectrumdatasetonoff method)": [[110, "gammapy.datasets.SpectrumDatasetOnOff.write", false]], "write() (gammapy.estimators.fluxmaps method)": [[122, "gammapy.estimators.FluxMaps.write", false]], "write() (gammapy.estimators.fluxpoints method)": [[124, "gammapy.estimators.FluxPoints.write", false]], "write() (gammapy.irf.background2d method)": [[146, "gammapy.irf.Background2D.write", false]], "write() (gammapy.irf.background3d method)": [[147, "gammapy.irf.Background3D.write", false]], "write() (gammapy.irf.backgroundirf method)": [[148, "gammapy.irf.BackgroundIRF.write", false]], "write() (gammapy.irf.edispkernel method)": [[149, "gammapy.irf.EDispKernel.write", false]], "write() (gammapy.irf.edispkernelmap method)": [[150, "gammapy.irf.EDispKernelMap.write", false]], "write() (gammapy.irf.edispmap method)": [[151, "gammapy.irf.EDispMap.write", false]], "write() (gammapy.irf.effectiveareatable2d method)": [[152, "gammapy.irf.EffectiveAreaTable2D.write", false]], "write() (gammapy.irf.energydependentmultigausspsf method)": [[153, "gammapy.irf.EnergyDependentMultiGaussPSF.write", false]], "write() (gammapy.irf.energydispersion2d method)": [[154, "gammapy.irf.EnergyDispersion2D.write", false]], "write() (gammapy.irf.irf method)": [[156, "gammapy.irf.IRF.write", false]], "write() (gammapy.irf.irfmap method)": [[157, "gammapy.irf.IRFMap.write", false]], "write() (gammapy.irf.parametricpsf method)": [[163, "gammapy.irf.ParametricPSF.write", false]], "write() (gammapy.irf.psf3d method)": [[159, "gammapy.irf.PSF3D.write", false]], "write() (gammapy.irf.psfkernel method)": [[160, "gammapy.irf.PSFKernel.write", false]], "write() (gammapy.irf.psfking method)": [[161, "gammapy.irf.PSFKing.write", false]], "write() (gammapy.irf.psfmap method)": [[162, "gammapy.irf.PSFMap.write", false]], "write() (gammapy.irf.radmax2d method)": [[164, "gammapy.irf.RadMax2D.write", false]], "write() (gammapy.irf.recopsfmap method)": [[165, "gammapy.irf.RecoPSFMap.write", false]], "write() (gammapy.maps.hpxmap method)": [[192, "gammapy.maps.HpxMap.write", false]], "write() (gammapy.maps.hpxndmap method)": [[193, "gammapy.maps.HpxNDMap.write", false]], "write() (gammapy.maps.map method)": [[195, "gammapy.maps.Map.write", false]], "write() (gammapy.maps.maps method)": [[199, "gammapy.maps.Maps.write", false]], "write() (gammapy.maps.regionndmap method)": [[201, "gammapy.maps.RegionNDMap.write", false]], "write() (gammapy.maps.wcsmap method)": [[204, "gammapy.maps.WcsMap.write", false]], "write() (gammapy.maps.wcsndmap method)": [[205, "gammapy.maps.WcsNDMap.write", false]], "write() (gammapy.modeling.fitresult method)": [[211, "gammapy.modeling.FitResult.write", false]], "write() (gammapy.modeling.models.datasetmodels method)": [[223, "gammapy.modeling.models.DatasetModels.write", false]], "write() (gammapy.modeling.models.lightcurvetemplatetemporalmodel method)": [[237, "gammapy.modeling.models.LightCurveTemplateTemporalModel.write", false]], "write() (gammapy.modeling.models.models method)": [[245, "gammapy.modeling.models.Models.write", false]], "write() (gammapy.modeling.models.templatendspatialmodel method)": [[269, "gammapy.modeling.models.TemplateNDSpatialModel.write", false]], "write() (gammapy.modeling.models.templatendspectralmodel method)": [[270, "gammapy.modeling.models.TemplateNDSpectralModel.write", false]], "write() (gammapy.modeling.models.templatenpredmodel method)": [[271, "gammapy.modeling.models.TemplateNPredModel.write", false]], "write() (gammapy.modeling.models.templatephasecurvetemporalmodel method)": [[272, "gammapy.modeling.models.TemplatePhaseCurveTemporalModel.write", false]], "write() (gammapy.modeling.models.templatespatialmodel method)": [[273, "gammapy.modeling.models.TemplateSpatialModel.write", false]], "write_arf() (gammapy.datasets.ogipdatasetwriter method)": [[107, "gammapy.datasets.OGIPDatasetWriter.write_arf", false]], "write_bkg() (gammapy.datasets.ogipdatasetwriter method)": [[107, "gammapy.datasets.OGIPDatasetWriter.write_bkg", false]], "write_covariance() (gammapy.modeling.models.datasetmodels method)": [[223, "gammapy.modeling.models.DatasetModels.write_covariance", false]], "write_covariance() (gammapy.modeling.models.models method)": [[245, "gammapy.modeling.models.Models.write_covariance", false]], "write_datasets() (gammapy.analysis.analysis method)": [[15, "gammapy.analysis.Analysis.write_datasets", false]], "write_models() (gammapy.analysis.analysis method)": [[15, "gammapy.analysis.Analysis.write_models", false]], "write_pha() (gammapy.datasets.ogipdatasetwriter method)": [[107, "gammapy.datasets.OGIPDatasetWriter.write_pha", false]], "write_rmf() (gammapy.datasets.ogipdatasetwriter method)": [[107, "gammapy.datasets.OGIPDatasetWriter.write_rmf", false]], "write_yaml() (in module gammapy.utils.scripts)": [[346, "gammapy.utils.scripts.write_yaml", false]], "wstat() (in module gammapy.stats)": [[301, "gammapy.stats.wstat", false]], "wstatcountsstatistic (class in gammapy.stats)": [[287, "gammapy.stats.WStatCountsStatistic", false]], "x_max (gammapy.estimators.imageprofile attribute)": [[127, "gammapy.estimators.ImageProfile.x_max", false]], "x_min (gammapy.estimators.imageprofile attribute)": [[127, "gammapy.estimators.ImageProfile.x_min", false]], "x_ref (gammapy.estimators.imageprofile attribute)": [[127, "gammapy.estimators.ImageProfile.x_ref", false]], "xy_position() (gammapy.astro.population.faucherspiral method)": [[33, "gammapy.astro.population.FaucherSpiral.xy_position", false]], "xy_position() (gammapy.astro.population.logspiral method)": [[34, "gammapy.astro.population.LogSpiral.xy_position", false]], "xy_position() (gammapy.astro.population.valleespiral method)": [[38, "gammapy.astro.population.ValleeSpiral.xy_position", false]], "yusifovkucuk2004 (class in gammapy.astro.population)": [[39, "gammapy.astro.population.YusifovKucuk2004", false]], "yusifovkucuk2004b (class in gammapy.astro.population)": [[40, "gammapy.astro.population.YusifovKucuk2004B", false]], "z_0 (gammapy.astro.population.exponential attribute)": [[29, "gammapy.astro.population.Exponential.z_0", false]], "zhaoprofile (class in gammapy.astro.darkmatter)": [[27, "gammapy.astro.darkmatter.ZhaoProfile", false]]}, "objects": {"gammapy": [[0, 0, 0, "-", "analysis"], [2, 0, 0, "-", "catalog"], [3, 0, 0, "-", "data"], [4, 0, 0, "-", "datasets"], [5, 0, 0, "-", "estimators"], [7, 0, 0, "-", "irf"], [8, 0, 0, "-", "makers"], [9, 0, 0, "-", "maps"], [10, 0, 0, "-", "modeling"], [12, 0, 0, "-", "stats"], [14, 0, 0, "-", "visualization"], [11, 6, 1, "cmdoption-gammapy-ignore-warnings", "--ignore-warnings"], [11, 6, 1, "cmdoption-gammapy-log-level", "--log-level"], [11, 6, 1, "cmdoption-gammapy-version", "--version"]], "gammapy-analysis-config": [[11, 6, 1, "cmdoption-gammapy-analysis-config-filename", "--filename"], [11, 6, 1, "cmdoption-gammapy-analysis-config-overwrite", "--overwrite"]], "gammapy-analysis-run": [[11, 6, 1, "cmdoption-gammapy-analysis-run-filename", "--filename"], [11, 6, 1, "cmdoption-gammapy-analysis-run-out", "--out"], [11, 6, 1, "cmdoption-gammapy-analysis-run-overwrite", "--overwrite"]], "gammapy-download-datasets": [[11, 6, 1, "cmdoption-gammapy-download-datasets-out", "--out"], [11, 6, 1, "cmdoption-gammapy-download-datasets-release", "--release"]], "gammapy-download-notebooks": [[11, 6, 1, "cmdoption-gammapy-download-notebooks-out", "--out"], [11, 6, 1, "cmdoption-gammapy-download-notebooks-release", "--release"]], "gammapy-info": [[11, 6, 1, "cmdoption-gammapy-info-dependencies", "--dependencies"], [11, 6, 1, "cmdoption-gammapy-info-envvar", "--envvar"], [11, 6, 1, "cmdoption-gammapy-info-dependencies", "--no-dependencies"], [11, 6, 1, "cmdoption-gammapy-info-envvar", "--no-envvar"], [11, 6, 1, "cmdoption-gammapy-info-system", "--no-system"], [11, 6, 1, "cmdoption-gammapy-info-version", "--no-version"], [11, 6, 1, "cmdoption-gammapy-info-system", "--system"], [11, 6, 1, "cmdoption-gammapy-info-version", "--version"]], "gammapy.analysis": [[15, 1, 1, "", "Analysis"], [16, 1, 1, "", "AnalysisConfig"]], "gammapy.analysis.Analysis": [[15, 2, 1, "", "config"], [15, 3, 1, "", "get_datasets"], [15, 3, 1, "", "get_excess_map"], [15, 3, 1, "", "get_flux_points"], [15, 3, 1, "", "get_light_curve"], [15, 3, 1, "", "get_observations"], [15, 2, 1, "", "models"], [15, 3, 1, "", "read_datasets"], [15, 3, 1, "", "read_models"], [15, 3, 1, "", "run_fit"], [15, 3, 1, "", "set_models"], [15, 3, 1, "", "update_config"], [15, 3, 1, "", "write_datasets"], [15, 3, 1, "", "write_models"]], "gammapy.analysis.AnalysisConfig": [[16, 3, 1, "", "construct"], [16, 3, 1, "", "copy"], [16, 3, 1, "", "dict"], [16, 3, 1, "", "from_orm"], [16, 3, 1, "", "from_yaml"], [16, 3, 1, "", "json"], [16, 2, 1, "", "model_computed_fields"], [16, 2, 1, "", "model_config"], [16, 3, 1, "", "model_construct"], [16, 3, 1, "", "model_copy"], [16, 3, 1, "", "model_dump"], [16, 3, 1, "", "model_dump_json"], [16, 2, 1, "", "model_extra"], [16, 2, 1, "", "model_fields"], [16, 2, 1, "", "model_fields_set"], [16, 3, 1, "", "model_json_schema"], [16, 3, 1, "", "model_parametrized_name"], [16, 3, 1, "", "model_post_init"], [16, 3, 1, "", "model_rebuild"], [16, 3, 1, "", "model_validate"], [16, 3, 1, "", "model_validate_json"], [16, 3, 1, "", "model_validate_strings"], [16, 3, 1, "", "parse_file"], [16, 3, 1, "", "parse_obj"], [16, 3, 1, "", "parse_raw"], [16, 3, 1, "", "read"], [16, 3, 1, "", "schema"], [16, 3, 1, "", "schema_json"], [16, 3, 1, "", "set_logging"], [16, 3, 1, "", "to_yaml"], [16, 3, 1, "", "update"], [16, 3, 1, "", "update_forward_refs"], [16, 3, 1, "", "validate"], [16, 3, 1, "", "write"]], "gammapy.astro": [[1, 0, 0, "-", "darkmatter"], [1, 0, 0, "-", "population"], [1, 0, 0, "-", "source"]], "gammapy.astro.darkmatter": [[17, 1, 1, "", "BurkertProfile"], [18, 1, 1, "", "DMProfile"], [19, 1, 1, "", "DarkMatterAnnihilationSpectralModel"], [20, 1, 1, "", "DarkMatterDecaySpectralModel"], [21, 1, 1, "", "EinastoProfile"], [22, 1, 1, "", "IsothermalProfile"], [23, 1, 1, "", "JFactory"], [24, 1, 1, "", "MooreProfile"], [25, 1, 1, "", "NFWProfile"], [26, 1, 1, "", "PrimaryFlux"], [27, 1, 1, "", "ZhaoProfile"]], "gammapy.astro.darkmatter.BurkertProfile": [[17, 2, 1, "", "DEFAULT_SCALE_RADIUS"], [17, 2, 1, "", "DISTANCE_GC"], [17, 2, 1, "", "LOCAL_DENSITY"], [17, 3, 1, "", "__call__"], [17, 3, 1, "", "evaluate"], [17, 3, 1, "", "integral"], [17, 3, 1, "", "integrate_spectrum_separation"], [17, 3, 1, "", "scale_to_local_density"]], "gammapy.astro.darkmatter.DMProfile": [[18, 2, 1, "", "DISTANCE_GC"], [18, 2, 1, "", "LOCAL_DENSITY"], [18, 3, 1, "", "__call__"], [18, 3, 1, "", "integral"], [18, 3, 1, "", "integrate_spectrum_separation"], [18, 3, 1, "", "scale_to_local_density"]], "gammapy.astro.darkmatter.DarkMatterAnnihilationSpectralModel": [[19, 2, 1, "", "THERMAL_RELIC_CROSS_SECTION"], [19, 3, 1, "", "__call__"], [19, 3, 1, "", "copy"], [19, 2, 1, "", "covariance"], [19, 2, 1, "", "default_parameters"], [19, 3, 1, "", "energy_flux"], [19, 3, 1, "", "energy_flux_error"], [19, 3, 1, "", "evaluate"], [19, 3, 1, "", "evaluate_error"], [19, 3, 1, "", "freeze"], [19, 3, 1, "", "from_dict"], [19, 3, 1, "", "from_parameters"], [19, 2, 1, "", "frozen"], [19, 3, 1, "", "integral"], [19, 3, 1, "", "integral_error"], [19, 3, 1, "", "inverse"], [19, 3, 1, "", "inverse_all"], [19, 2, 1, "", "is_norm_spectral_model"], [19, 2, 1, "", "parameters"], [19, 2, 1, "", "parameters_unique_names"], [19, 2, 1, "", "pivot_energy"], [19, 3, 1, "", "plot"], [19, 3, 1, "", "plot_error"], [19, 3, 1, "", "reassign"], [19, 3, 1, "", "reference_fluxes"], [19, 2, 1, "", "scale"], [19, 3, 1, "", "spectral_index"], [19, 3, 1, "", "spectral_index_error"], [19, 2, 1, "", "tag"], [19, 3, 1, "", "to_dict"], [19, 2, 1, "", "type"], [19, 3, 1, "", "unfreeze"]], "gammapy.astro.darkmatter.DarkMatterDecaySpectralModel": [[20, 2, 1, "", "LIFETIME_AGE_OF_UNIVERSE"], [20, 3, 1, "", "__call__"], [20, 3, 1, "", "copy"], [20, 2, 1, "", "covariance"], [20, 2, 1, "", "default_parameters"], [20, 3, 1, "", "energy_flux"], [20, 3, 1, "", "energy_flux_error"], [20, 3, 1, "", "evaluate"], [20, 3, 1, "", "evaluate_error"], [20, 3, 1, "", "freeze"], [20, 3, 1, "", "from_dict"], [20, 3, 1, "", "from_parameters"], [20, 2, 1, "", "frozen"], [20, 3, 1, "", "integral"], [20, 3, 1, "", "integral_error"], [20, 3, 1, "", "inverse"], [20, 3, 1, "", "inverse_all"], [20, 2, 1, "", "is_norm_spectral_model"], [20, 2, 1, "", "parameters"], [20, 2, 1, "", "parameters_unique_names"], [20, 2, 1, "", "pivot_energy"], [20, 3, 1, "", "plot"], [20, 3, 1, "", "plot_error"], [20, 3, 1, "", "reassign"], [20, 3, 1, "", "reference_fluxes"], [20, 2, 1, "", "scale"], [20, 3, 1, "", "spectral_index"], [20, 3, 1, "", "spectral_index_error"], [20, 2, 1, "", "tag"], [20, 3, 1, "", "to_dict"], [20, 2, 1, "", "type"], [20, 3, 1, "", "unfreeze"]], "gammapy.astro.darkmatter.EinastoProfile": [[21, 2, 1, "", "DEFAULT_ALPHA"], [21, 2, 1, "", "DEFAULT_SCALE_RADIUS"], [21, 2, 1, "", "DISTANCE_GC"], [21, 2, 1, "", "LOCAL_DENSITY"], [21, 3, 1, "", "__call__"], [21, 3, 1, "", "evaluate"], [21, 3, 1, "", "integral"], [21, 3, 1, "", "integrate_spectrum_separation"], [21, 3, 1, "", "scale_to_local_density"]], "gammapy.astro.darkmatter.IsothermalProfile": [[22, 2, 1, "", "DEFAULT_SCALE_RADIUS"], [22, 2, 1, "", "DISTANCE_GC"], [22, 2, 1, "", "LOCAL_DENSITY"], [22, 3, 1, "", "__call__"], [22, 3, 1, "", "evaluate"], [22, 3, 1, "", "integral"], [22, 3, 1, "", "integrate_spectrum_separation"], [22, 3, 1, "", "scale_to_local_density"]], "gammapy.astro.darkmatter.JFactory": [[23, 3, 1, "", "compute_differential_jfactor"], [23, 3, 1, "", "compute_jfactor"]], "gammapy.astro.darkmatter.MooreProfile": [[24, 2, 1, "", "DEFAULT_SCALE_RADIUS"], [24, 2, 1, "", "DISTANCE_GC"], [24, 2, 1, "", "LOCAL_DENSITY"], [24, 3, 1, "", "__call__"], [24, 3, 1, "", "evaluate"], [24, 3, 1, "", "integral"], [24, 3, 1, "", "integrate_spectrum_separation"], [24, 3, 1, "", "scale_to_local_density"]], "gammapy.astro.darkmatter.NFWProfile": [[25, 2, 1, "", "DEFAULT_SCALE_RADIUS"], [25, 2, 1, "", "DISTANCE_GC"], [25, 2, 1, "", "LOCAL_DENSITY"], [25, 3, 1, "", "__call__"], [25, 3, 1, "", "evaluate"], [25, 3, 1, "", "integral"], [25, 3, 1, "", "integrate_spectrum_separation"], [25, 3, 1, "", "scale_to_local_density"]], "gammapy.astro.darkmatter.PrimaryFlux": [[26, 3, 1, "", "__call__"], [26, 2, 1, "", "allowed_channels"], [26, 2, 1, "", "channel"], [26, 2, 1, "", "channel_registry"], [26, 3, 1, "", "copy"], [26, 2, 1, "", "covariance"], [26, 2, 1, "", "default_parameters"], [26, 3, 1, "", "energy_flux"], [26, 3, 1, "", "energy_flux_error"], [26, 3, 1, "", "evaluate"], [26, 3, 1, "", "evaluate_error"], [26, 3, 1, "", "freeze"], [26, 3, 1, "", "from_dict"], [26, 3, 1, "", "from_parameters"], [26, 2, 1, "", "frozen"], [26, 3, 1, "", "integral"], [26, 3, 1, "", "integral_error"], [26, 3, 1, "", "inverse"], [26, 3, 1, "", "inverse_all"], [26, 2, 1, "", "is_norm_spectral_model"], [26, 2, 1, "", "mDM"], [26, 2, 1, "", "map"], [26, 2, 1, "", "parameters"], [26, 2, 1, "", "parameters_unique_names"], [26, 2, 1, "", "pivot_energy"], [26, 3, 1, "", "plot"], [26, 3, 1, "", "plot_error"], [26, 3, 1, "", "reassign"], [26, 3, 1, "", "reference_fluxes"], [26, 3, 1, "", "spectral_index"], [26, 3, 1, "", "spectral_index_error"], [26, 2, 1, "", "table_filename"], [26, 2, 1, "", "tag"], [26, 3, 1, "", "to_dict"], [26, 2, 1, "", "type"], [26, 3, 1, "", "unfreeze"], [26, 3, 1, "", "write"]], "gammapy.astro.darkmatter.ZhaoProfile": [[27, 2, 1, "", "DEFAULT_ALPHA"], [27, 2, 1, "", "DEFAULT_BETA"], [27, 2, 1, "", "DEFAULT_GAMMA"], [27, 2, 1, "", "DEFAULT_SCALE_RADIUS"], [27, 2, 1, "", "DISTANCE_GC"], [27, 2, 1, "", "LOCAL_DENSITY"], [27, 3, 1, "", "__call__"], [27, 3, 1, "", "evaluate"], [27, 3, 1, "", "integral"], [27, 3, 1, "", "integrate_spectrum_separation"], [27, 3, 1, "", "scale_to_local_density"]], "gammapy.astro.population": [[28, 1, 1, "", "CaseBattacharya1998"], [29, 1, 1, "", "Exponential"], [30, 1, 1, "", "FaucherKaspi2006"], [31, 1, 1, "", "FaucherKaspi2006VelocityBimodal"], [32, 1, 1, "", "FaucherKaspi2006VelocityMaxwellian"], [33, 1, 1, "", "FaucherSpiral"], [34, 1, 1, "", "LogSpiral"], [35, 1, 1, "", "Lorimer2006"], [36, 1, 1, "", "Paczynski1990"], [37, 1, 1, "", "Paczynski1990Velocity"], [38, 1, 1, "", "ValleeSpiral"], [39, 1, 1, "", "YusifovKucuk2004"], [40, 1, 1, "", "YusifovKucuk2004B"], [41, 4, 1, "", "add_observed_parameters"], [42, 4, 1, "", "add_pulsar_parameters"], [43, 4, 1, "", "add_pwn_parameters"], [44, 4, 1, "", "add_snr_parameters"], [45, 4, 1, "", "make_base_catalog_galactic"], [46, 4, 1, "", "make_catalog_random_positions_cube"], [47, 4, 1, "", "make_catalog_random_positions_sphere"], [48, 5, 1, "", "radial_distributions"], [49, 5, 1, "", "velocity_distributions"]], "gammapy.astro.population.CaseBattacharya1998": [[28, 3, 1, "", "__call__"], [28, 2, 1, "", "alpha"], [28, 2, 1, "", "amplitude"], [28, 2, 1, "", "bbox_with_units"], [28, 2, 1, "", "beta"], [28, 2, 1, "", "bounding_box"], [28, 2, 1, "", "bounds"], [28, 3, 1, "", "coerce_units"], [28, 2, 1, "", "col_fit_deriv"], [28, 3, 1, "", "copy"], [28, 2, 1, "", "cov_matrix"], [28, 3, 1, "", "deepcopy"], [28, 2, 1, "", "eqcons"], [28, 3, 1, "", "evaluate"], [28, 2, 1, "", "evolved"], [28, 2, 1, "", "fit_deriv"], [28, 2, 1, "", "fittable"], [28, 2, 1, "", "fixed"], [28, 3, 1, "", "get_bounding_box"], [28, 3, 1, "", "has_inverse"], [28, 2, 1, "", "has_user_bounding_box"], [28, 2, 1, "", "has_user_inverse"], [28, 2, 1, "", "ineqcons"], [28, 3, 1, "", "input_shape"], [28, 2, 1, "", "input_units"], [28, 2, 1, "", "input_units_allow_dimensionless"], [28, 2, 1, "", "input_units_equivalencies"], [28, 2, 1, "", "input_units_strict"], [28, 2, 1, "", "inputs"], [28, 2, 1, "", "inverse"], [28, 2, 1, "", "linear"], [28, 2, 1, "", "meta"], [28, 2, 1, "", "model_constraints"], [28, 2, 1, "", "model_set_axis"], [28, 2, 1, "", "n_inputs"], [28, 2, 1, "", "n_outputs"], [28, 2, 1, "", "n_submodels"], [28, 2, 1, "", "name"], [28, 3, 1, "", "output_units"], [28, 2, 1, "", "outputs"], [28, 2, 1, "", "param_names"], [28, 2, 1, "", "param_sets"], [28, 2, 1, "", "parameter_constraints"], [28, 2, 1, "", "parameters"], [28, 3, 1, "", "prepare_inputs"], [28, 3, 1, "", "prepare_outputs"], [28, 3, 1, "", "rename"], [28, 3, 1, "", "render"], [28, 2, 1, "", "return_units"], [28, 2, 1, "", "separable"], [28, 3, 1, "", "set_slice_args"], [28, 2, 1, "", "standard_broadcasting"], [28, 2, 1, "", "stds"], [28, 3, 1, "", "strip_units_from_tree"], [28, 3, 1, "", "sum_of_implicit_terms"], [28, 2, 1, "", "sync_constraints"], [28, 2, 1, "", "tied"], [28, 2, 1, "", "uses_quantity"], [28, 3, 1, "", "with_units_from_data"], [28, 3, 1, "", "without_units_for_data"]], "gammapy.astro.population.Exponential": [[29, 3, 1, "", "__call__"], [29, 2, 1, "", "amplitude"], [29, 2, 1, "", "bbox_with_units"], [29, 2, 1, "", "bounding_box"], [29, 2, 1, "", "bounds"], [29, 3, 1, "", "coerce_units"], [29, 2, 1, "", "col_fit_deriv"], [29, 3, 1, "", "copy"], [29, 2, 1, "", "cov_matrix"], [29, 3, 1, "", "deepcopy"], [29, 2, 1, "", "eqcons"], [29, 3, 1, "", "evaluate"], [29, 2, 1, "", "evolved"], [29, 2, 1, "", "fit_deriv"], [29, 2, 1, "", "fittable"], [29, 2, 1, "", "fixed"], [29, 3, 1, "", "get_bounding_box"], [29, 3, 1, "", "has_inverse"], [29, 2, 1, "", "has_user_bounding_box"], [29, 2, 1, "", "has_user_inverse"], [29, 2, 1, "", "ineqcons"], [29, 3, 1, "", "input_shape"], [29, 2, 1, "", "input_units"], [29, 2, 1, "", "input_units_allow_dimensionless"], [29, 2, 1, "", "input_units_equivalencies"], [29, 2, 1, "", "input_units_strict"], [29, 2, 1, "", "inputs"], [29, 2, 1, "", "inverse"], [29, 2, 1, "", "linear"], [29, 2, 1, "", "meta"], [29, 2, 1, "", "model_constraints"], [29, 2, 1, "", "model_set_axis"], [29, 2, 1, "", "n_inputs"], [29, 2, 1, "", "n_outputs"], [29, 2, 1, "", "n_submodels"], [29, 2, 1, "", "name"], [29, 3, 1, "", "output_units"], [29, 2, 1, "", "outputs"], [29, 2, 1, "", "param_names"], [29, 2, 1, "", "param_sets"], [29, 2, 1, "", "parameter_constraints"], [29, 2, 1, "", "parameters"], [29, 3, 1, "", "prepare_inputs"], [29, 3, 1, "", "prepare_outputs"], [29, 3, 1, "", "rename"], [29, 3, 1, "", "render"], [29, 2, 1, "", "return_units"], [29, 2, 1, "", "separable"], [29, 3, 1, "", "set_slice_args"], [29, 2, 1, "", "standard_broadcasting"], [29, 2, 1, "", "stds"], [29, 3, 1, "", "strip_units_from_tree"], [29, 3, 1, "", "sum_of_implicit_terms"], [29, 2, 1, "", "sync_constraints"], [29, 2, 1, "", "tied"], [29, 2, 1, "", "uses_quantity"], [29, 3, 1, "", "with_units_from_data"], [29, 3, 1, "", "without_units_for_data"], [29, 2, 1, "", "z_0"]], "gammapy.astro.population.FaucherKaspi2006": [[30, 3, 1, "", "__call__"], [30, 2, 1, "", "amplitude"], [30, 2, 1, "", "bbox_with_units"], [30, 2, 1, "", "bounding_box"], [30, 2, 1, "", "bounds"], [30, 3, 1, "", "coerce_units"], [30, 2, 1, "", "col_fit_deriv"], [30, 3, 1, "", "copy"], [30, 2, 1, "", "cov_matrix"], [30, 3, 1, "", "deepcopy"], [30, 2, 1, "", "eqcons"], [30, 3, 1, "", "evaluate"], [30, 2, 1, "", "evolved"], [30, 2, 1, "", "fit_deriv"], [30, 2, 1, "", "fittable"], [30, 2, 1, "", "fixed"], [30, 3, 1, "", "get_bounding_box"], [30, 3, 1, "", "has_inverse"], [30, 2, 1, "", "has_user_bounding_box"], [30, 2, 1, "", "has_user_inverse"], [30, 2, 1, "", "ineqcons"], [30, 3, 1, "", "input_shape"], [30, 2, 1, "", "input_units"], [30, 2, 1, "", "input_units_allow_dimensionless"], [30, 2, 1, "", "input_units_equivalencies"], [30, 2, 1, "", "input_units_strict"], [30, 2, 1, "", "inputs"], [30, 2, 1, "", "inverse"], [30, 2, 1, "", "linear"], [30, 2, 1, "", "meta"], [30, 2, 1, "", "model_constraints"], [30, 2, 1, "", "model_set_axis"], [30, 2, 1, "", "n_inputs"], [30, 2, 1, "", "n_outputs"], [30, 2, 1, "", "n_submodels"], [30, 2, 1, "", "name"], [30, 3, 1, "", "output_units"], [30, 2, 1, "", "outputs"], [30, 2, 1, "", "param_names"], [30, 2, 1, "", "param_sets"], [30, 2, 1, "", "parameter_constraints"], [30, 2, 1, "", "parameters"], [30, 3, 1, "", "prepare_inputs"], [30, 3, 1, "", "prepare_outputs"], [30, 2, 1, "", "r_0"], [30, 3, 1, "", "rename"], [30, 3, 1, "", "render"], [30, 2, 1, "", "return_units"], [30, 2, 1, "", "separable"], [30, 3, 1, "", "set_slice_args"], [30, 2, 1, "", "sigma"], [30, 2, 1, "", "standard_broadcasting"], [30, 2, 1, "", "stds"], [30, 3, 1, "", "strip_units_from_tree"], [30, 3, 1, "", "sum_of_implicit_terms"], [30, 2, 1, "", "sync_constraints"], [30, 2, 1, "", "tied"], [30, 2, 1, "", "uses_quantity"], [30, 3, 1, "", "with_units_from_data"], [30, 3, 1, "", "without_units_for_data"]], "gammapy.astro.population.FaucherKaspi2006VelocityBimodal": [[31, 3, 1, "", "__call__"], [31, 2, 1, "", "amplitude"], [31, 2, 1, "", "bbox_with_units"], [31, 2, 1, "", "bounding_box"], [31, 2, 1, "", "bounds"], [31, 3, 1, "", "coerce_units"], [31, 2, 1, "", "col_fit_deriv"], [31, 3, 1, "", "copy"], [31, 2, 1, "", "cov_matrix"], [31, 3, 1, "", "deepcopy"], [31, 2, 1, "", "eqcons"], [31, 3, 1, "", "evaluate"], [31, 2, 1, "", "fit_deriv"], [31, 2, 1, "", "fittable"], [31, 2, 1, "", "fixed"], [31, 3, 1, "", "get_bounding_box"], [31, 3, 1, "", "has_inverse"], [31, 2, 1, "", "has_user_bounding_box"], [31, 2, 1, "", "has_user_inverse"], [31, 2, 1, "", "ineqcons"], [31, 3, 1, "", "input_shape"], [31, 2, 1, "", "input_units"], [31, 2, 1, "", "input_units_allow_dimensionless"], [31, 2, 1, "", "input_units_equivalencies"], [31, 2, 1, "", "input_units_strict"], [31, 2, 1, "", "inputs"], [31, 2, 1, "", "inverse"], [31, 2, 1, "", "linear"], [31, 2, 1, "", "meta"], [31, 2, 1, "", "model_constraints"], [31, 2, 1, "", "model_set_axis"], [31, 2, 1, "", "n_inputs"], [31, 2, 1, "", "n_outputs"], [31, 2, 1, "", "n_submodels"], [31, 2, 1, "", "name"], [31, 3, 1, "", "output_units"], [31, 2, 1, "", "outputs"], [31, 2, 1, "", "param_names"], [31, 2, 1, "", "param_sets"], [31, 2, 1, "", "parameter_constraints"], [31, 2, 1, "", "parameters"], [31, 3, 1, "", "prepare_inputs"], [31, 3, 1, "", "prepare_outputs"], [31, 3, 1, "", "rename"], [31, 3, 1, "", "render"], [31, 2, 1, "", "return_units"], [31, 2, 1, "", "separable"], [31, 3, 1, "", "set_slice_args"], [31, 2, 1, "", "sigma_1"], [31, 2, 1, "", "sigma_2"], [31, 2, 1, "", "standard_broadcasting"], [31, 2, 1, "", "stds"], [31, 3, 1, "", "strip_units_from_tree"], [31, 3, 1, "", "sum_of_implicit_terms"], [31, 2, 1, "", "sync_constraints"], [31, 2, 1, "", "tied"], [31, 2, 1, "", "uses_quantity"], [31, 2, 1, "", "w"], [31, 3, 1, "", "with_units_from_data"], [31, 3, 1, "", "without_units_for_data"]], "gammapy.astro.population.FaucherKaspi2006VelocityMaxwellian": [[32, 3, 1, "", "__call__"], [32, 2, 1, "", "amplitude"], [32, 2, 1, "", "bbox_with_units"], [32, 2, 1, "", "bounding_box"], [32, 2, 1, "", "bounds"], [32, 3, 1, "", "coerce_units"], [32, 2, 1, "", "col_fit_deriv"], [32, 3, 1, "", "copy"], [32, 2, 1, "", "cov_matrix"], [32, 3, 1, "", "deepcopy"], [32, 2, 1, "", "eqcons"], [32, 3, 1, "", "evaluate"], [32, 2, 1, "", "fit_deriv"], [32, 2, 1, "", "fittable"], [32, 2, 1, "", "fixed"], [32, 3, 1, "", "get_bounding_box"], [32, 3, 1, "", "has_inverse"], [32, 2, 1, "", "has_user_bounding_box"], [32, 2, 1, "", "has_user_inverse"], [32, 2, 1, "", "ineqcons"], [32, 3, 1, "", "input_shape"], [32, 2, 1, "", "input_units"], [32, 2, 1, "", "input_units_allow_dimensionless"], [32, 2, 1, "", "input_units_equivalencies"], [32, 2, 1, "", "input_units_strict"], [32, 2, 1, "", "inputs"], [32, 2, 1, "", "inverse"], [32, 2, 1, "", "linear"], [32, 2, 1, "", "meta"], [32, 2, 1, "", "model_constraints"], [32, 2, 1, "", "model_set_axis"], [32, 2, 1, "", "n_inputs"], [32, 2, 1, "", "n_outputs"], [32, 2, 1, "", "n_submodels"], [32, 2, 1, "", "name"], [32, 3, 1, "", "output_units"], [32, 2, 1, "", "outputs"], [32, 2, 1, "", "param_names"], [32, 2, 1, "", "param_sets"], [32, 2, 1, "", "parameter_constraints"], [32, 2, 1, "", "parameters"], [32, 3, 1, "", "prepare_inputs"], [32, 3, 1, "", "prepare_outputs"], [32, 3, 1, "", "rename"], [32, 3, 1, "", "render"], [32, 2, 1, "", "return_units"], [32, 2, 1, "", "separable"], [32, 3, 1, "", "set_slice_args"], [32, 2, 1, "", "sigma"], [32, 2, 1, "", "standard_broadcasting"], [32, 2, 1, "", "stds"], [32, 3, 1, "", "strip_units_from_tree"], [32, 3, 1, "", "sum_of_implicit_terms"], [32, 2, 1, "", "sync_constraints"], [32, 2, 1, "", "tied"], [32, 2, 1, "", "uses_quantity"], [32, 3, 1, "", "with_units_from_data"], [32, 3, 1, "", "without_units_for_data"]], "gammapy.astro.population.FaucherSpiral": [[33, 3, 1, "", "__call__"], [33, 2, 1, "", "k"], [33, 2, 1, "", "r_0"], [33, 3, 1, "", "radius"], [33, 2, 1, "", "spiralarms"], [33, 3, 1, "", "theta"], [33, 2, 1, "", "theta_0"], [33, 3, 1, "", "xy_position"]], "gammapy.astro.population.LogSpiral": [[34, 3, 1, "", "radius"], [34, 3, 1, "", "theta"], [34, 3, 1, "", "xy_position"]], "gammapy.astro.population.Lorimer2006": [[35, 2, 1, "", "B"], [35, 2, 1, "", "C"], [35, 3, 1, "", "__call__"], [35, 2, 1, "", "amplitude"], [35, 2, 1, "", "bbox_with_units"], [35, 2, 1, "", "bounding_box"], [35, 2, 1, "", "bounds"], [35, 3, 1, "", "coerce_units"], [35, 2, 1, "", "col_fit_deriv"], [35, 3, 1, "", "copy"], [35, 2, 1, "", "cov_matrix"], [35, 3, 1, "", "deepcopy"], [35, 2, 1, "", "eqcons"], [35, 3, 1, "", "evaluate"], [35, 2, 1, "", "evolved"], [35, 2, 1, "", "fit_deriv"], [35, 2, 1, "", "fittable"], [35, 2, 1, "", "fixed"], [35, 3, 1, "", "get_bounding_box"], [35, 3, 1, "", "has_inverse"], [35, 2, 1, "", "has_user_bounding_box"], [35, 2, 1, "", "has_user_inverse"], [35, 2, 1, "", "ineqcons"], [35, 3, 1, "", "input_shape"], [35, 2, 1, "", "input_units"], [35, 2, 1, "", "input_units_allow_dimensionless"], [35, 2, 1, "", "input_units_equivalencies"], [35, 2, 1, "", "input_units_strict"], [35, 2, 1, "", "inputs"], [35, 2, 1, "", "inverse"], [35, 2, 1, "", "linear"], [35, 2, 1, "", "meta"], [35, 2, 1, "", "model_constraints"], [35, 2, 1, "", "model_set_axis"], [35, 2, 1, "", "n_inputs"], [35, 2, 1, "", "n_outputs"], [35, 2, 1, "", "n_submodels"], [35, 2, 1, "", "name"], [35, 3, 1, "", "output_units"], [35, 2, 1, "", "outputs"], [35, 2, 1, "", "param_names"], [35, 2, 1, "", "param_sets"], [35, 2, 1, "", "parameter_constraints"], [35, 2, 1, "", "parameters"], [35, 3, 1, "", "prepare_inputs"], [35, 3, 1, "", "prepare_outputs"], [35, 3, 1, "", "rename"], [35, 3, 1, "", "render"], [35, 2, 1, "", "return_units"], [35, 2, 1, "", "separable"], [35, 3, 1, "", "set_slice_args"], [35, 2, 1, "", "standard_broadcasting"], [35, 2, 1, "", "stds"], [35, 3, 1, "", "strip_units_from_tree"], [35, 3, 1, "", "sum_of_implicit_terms"], [35, 2, 1, "", "sync_constraints"], [35, 2, 1, "", "tied"], [35, 2, 1, "", "uses_quantity"], [35, 3, 1, "", "with_units_from_data"], [35, 3, 1, "", "without_units_for_data"]], "gammapy.astro.population.Paczynski1990": [[36, 3, 1, "", "__call__"], [36, 2, 1, "", "amplitude"], [36, 2, 1, "", "bbox_with_units"], [36, 2, 1, "", "bounding_box"], [36, 2, 1, "", "bounds"], [36, 3, 1, "", "coerce_units"], [36, 2, 1, "", "col_fit_deriv"], [36, 3, 1, "", "copy"], [36, 2, 1, "", "cov_matrix"], [36, 3, 1, "", "deepcopy"], [36, 2, 1, "", "eqcons"], [36, 3, 1, "", "evaluate"], [36, 2, 1, "", "evolved"], [36, 2, 1, "", "fit_deriv"], [36, 2, 1, "", "fittable"], [36, 2, 1, "", "fixed"], [36, 3, 1, "", "get_bounding_box"], [36, 3, 1, "", "has_inverse"], [36, 2, 1, "", "has_user_bounding_box"], [36, 2, 1, "", "has_user_inverse"], [36, 2, 1, "", "ineqcons"], [36, 3, 1, "", "input_shape"], [36, 2, 1, "", "input_units"], [36, 2, 1, "", "input_units_allow_dimensionless"], [36, 2, 1, "", "input_units_equivalencies"], [36, 2, 1, "", "input_units_strict"], [36, 2, 1, "", "inputs"], [36, 2, 1, "", "inverse"], [36, 2, 1, "", "linear"], [36, 2, 1, "", "meta"], [36, 2, 1, "", "model_constraints"], [36, 2, 1, "", "model_set_axis"], [36, 2, 1, "", "n_inputs"], [36, 2, 1, "", "n_outputs"], [36, 2, 1, "", "n_submodels"], [36, 2, 1, "", "name"], [36, 3, 1, "", "output_units"], [36, 2, 1, "", "outputs"], [36, 2, 1, "", "param_names"], [36, 2, 1, "", "param_sets"], [36, 2, 1, "", "parameter_constraints"], [36, 2, 1, "", "parameters"], [36, 3, 1, "", "prepare_inputs"], [36, 3, 1, "", "prepare_outputs"], [36, 2, 1, "", "r_exp"], [36, 3, 1, "", "rename"], [36, 3, 1, "", "render"], [36, 2, 1, "", "return_units"], [36, 2, 1, "", "separable"], [36, 3, 1, "", "set_slice_args"], [36, 2, 1, "", "standard_broadcasting"], [36, 2, 1, "", "stds"], [36, 3, 1, "", "strip_units_from_tree"], [36, 3, 1, "", "sum_of_implicit_terms"], [36, 2, 1, "", "sync_constraints"], [36, 2, 1, "", "tied"], [36, 2, 1, "", "uses_quantity"], [36, 3, 1, "", "with_units_from_data"], [36, 3, 1, "", "without_units_for_data"]], "gammapy.astro.population.Paczynski1990Velocity": [[37, 3, 1, "", "__call__"], [37, 2, 1, "", "amplitude"], [37, 2, 1, "", "bbox_with_units"], [37, 2, 1, "", "bounding_box"], [37, 2, 1, "", "bounds"], [37, 3, 1, "", "coerce_units"], [37, 2, 1, "", "col_fit_deriv"], [37, 3, 1, "", "copy"], [37, 2, 1, "", "cov_matrix"], [37, 3, 1, "", "deepcopy"], [37, 2, 1, "", "eqcons"], [37, 3, 1, "", "evaluate"], [37, 2, 1, "", "fit_deriv"], [37, 2, 1, "", "fittable"], [37, 2, 1, "", "fixed"], [37, 3, 1, "", "get_bounding_box"], [37, 3, 1, "", "has_inverse"], [37, 2, 1, "", "has_user_bounding_box"], [37, 2, 1, "", "has_user_inverse"], [37, 2, 1, "", "ineqcons"], [37, 3, 1, "", "input_shape"], [37, 2, 1, "", "input_units"], [37, 2, 1, "", "input_units_allow_dimensionless"], [37, 2, 1, "", "input_units_equivalencies"], [37, 2, 1, "", "input_units_strict"], [37, 2, 1, "", "inputs"], [37, 2, 1, "", "inverse"], [37, 2, 1, "", "linear"], [37, 2, 1, "", "meta"], [37, 2, 1, "", "model_constraints"], [37, 2, 1, "", "model_set_axis"], [37, 2, 1, "", "n_inputs"], [37, 2, 1, "", "n_outputs"], [37, 2, 1, "", "n_submodels"], [37, 2, 1, "", "name"], [37, 3, 1, "", "output_units"], [37, 2, 1, "", "outputs"], [37, 2, 1, "", "param_names"], [37, 2, 1, "", "param_sets"], [37, 2, 1, "", "parameter_constraints"], [37, 2, 1, "", "parameters"], [37, 3, 1, "", "prepare_inputs"], [37, 3, 1, "", "prepare_outputs"], [37, 3, 1, "", "rename"], [37, 3, 1, "", "render"], [37, 2, 1, "", "return_units"], [37, 2, 1, "", "separable"], [37, 3, 1, "", "set_slice_args"], [37, 2, 1, "", "standard_broadcasting"], [37, 2, 1, "", "stds"], [37, 3, 1, "", "strip_units_from_tree"], [37, 3, 1, "", "sum_of_implicit_terms"], [37, 2, 1, "", "sync_constraints"], [37, 2, 1, "", "tied"], [37, 2, 1, "", "uses_quantity"], [37, 2, 1, "", "v_0"], [37, 3, 1, "", "with_units_from_data"], [37, 3, 1, "", "without_units_for_data"]], "gammapy.astro.population.ValleeSpiral": [[38, 2, 1, "", "bar_radius"], [38, 2, 1, "", "m"], [38, 2, 1, "", "p"], [38, 2, 1, "", "r_0"], [38, 2, 1, "", "r_sun"], [38, 3, 1, "", "radius"], [38, 2, 1, "", "spiralarms"], [38, 3, 1, "", "theta"], [38, 2, 1, "", "theta_0"], [38, 3, 1, "", "xy_position"]], "gammapy.astro.population.YusifovKucuk2004": [[39, 3, 1, "", "__call__"], [39, 2, 1, "", "a"], [39, 2, 1, "", "amplitude"], [39, 2, 1, "", "b"], [39, 2, 1, "", "bbox_with_units"], [39, 2, 1, "", "bounding_box"], [39, 2, 1, "", "bounds"], [39, 3, 1, "", "coerce_units"], [39, 2, 1, "", "col_fit_deriv"], [39, 3, 1, "", "copy"], [39, 2, 1, "", "cov_matrix"], [39, 3, 1, "", "deepcopy"], [39, 2, 1, "", "eqcons"], [39, 3, 1, "", "evaluate"], [39, 2, 1, "", "evolved"], [39, 2, 1, "", "fit_deriv"], [39, 2, 1, "", "fittable"], [39, 2, 1, "", "fixed"], [39, 3, 1, "", "get_bounding_box"], [39, 3, 1, "", "has_inverse"], [39, 2, 1, "", "has_user_bounding_box"], [39, 2, 1, "", "has_user_inverse"], [39, 2, 1, "", "ineqcons"], [39, 3, 1, "", "input_shape"], [39, 2, 1, "", "input_units"], [39, 2, 1, "", "input_units_allow_dimensionless"], [39, 2, 1, "", "input_units_equivalencies"], [39, 2, 1, "", "input_units_strict"], [39, 2, 1, "", "inputs"], [39, 2, 1, "", "inverse"], [39, 2, 1, "", "linear"], [39, 2, 1, "", "meta"], [39, 2, 1, "", "model_constraints"], [39, 2, 1, "", "model_set_axis"], [39, 2, 1, "", "n_inputs"], [39, 2, 1, "", "n_outputs"], [39, 2, 1, "", "n_submodels"], [39, 2, 1, "", "name"], [39, 3, 1, "", "output_units"], [39, 2, 1, "", "outputs"], [39, 2, 1, "", "param_names"], [39, 2, 1, "", "param_sets"], [39, 2, 1, "", "parameter_constraints"], [39, 2, 1, "", "parameters"], [39, 3, 1, "", "prepare_inputs"], [39, 3, 1, "", "prepare_outputs"], [39, 2, 1, "", "r_1"], [39, 3, 1, "", "rename"], [39, 3, 1, "", "render"], [39, 2, 1, "", "return_units"], [39, 2, 1, "", "separable"], [39, 3, 1, "", "set_slice_args"], [39, 2, 1, "", "standard_broadcasting"], [39, 2, 1, "", "stds"], [39, 3, 1, "", "strip_units_from_tree"], [39, 3, 1, "", "sum_of_implicit_terms"], [39, 2, 1, "", "sync_constraints"], [39, 2, 1, "", "tied"], [39, 2, 1, "", "uses_quantity"], [39, 3, 1, "", "with_units_from_data"], [39, 3, 1, "", "without_units_for_data"]], "gammapy.astro.population.YusifovKucuk2004B": [[40, 3, 1, "", "__call__"], [40, 2, 1, "", "a"], [40, 2, 1, "", "amplitude"], [40, 2, 1, "", "b"], [40, 2, 1, "", "bbox_with_units"], [40, 2, 1, "", "bounding_box"], [40, 2, 1, "", "bounds"], [40, 3, 1, "", "coerce_units"], [40, 2, 1, "", "col_fit_deriv"], [40, 3, 1, "", "copy"], [40, 2, 1, "", "cov_matrix"], [40, 3, 1, "", "deepcopy"], [40, 2, 1, "", "eqcons"], [40, 3, 1, "", "evaluate"], [40, 2, 1, "", "evolved"], [40, 2, 1, "", "fit_deriv"], [40, 2, 1, "", "fittable"], [40, 2, 1, "", "fixed"], [40, 3, 1, "", "get_bounding_box"], [40, 3, 1, "", "has_inverse"], [40, 2, 1, "", "has_user_bounding_box"], [40, 2, 1, "", "has_user_inverse"], [40, 2, 1, "", "ineqcons"], [40, 3, 1, "", "input_shape"], [40, 2, 1, "", "input_units"], [40, 2, 1, "", "input_units_allow_dimensionless"], [40, 2, 1, "", "input_units_equivalencies"], [40, 2, 1, "", "input_units_strict"], [40, 2, 1, "", "inputs"], [40, 2, 1, "", "inverse"], [40, 2, 1, "", "linear"], [40, 2, 1, "", "meta"], [40, 2, 1, "", "model_constraints"], [40, 2, 1, "", "model_set_axis"], [40, 2, 1, "", "n_inputs"], [40, 2, 1, "", "n_outputs"], [40, 2, 1, "", "n_submodels"], [40, 2, 1, "", "name"], [40, 3, 1, "", "output_units"], [40, 2, 1, "", "outputs"], [40, 2, 1, "", "param_names"], [40, 2, 1, "", "param_sets"], [40, 2, 1, "", "parameter_constraints"], [40, 2, 1, "", "parameters"], [40, 3, 1, "", "prepare_inputs"], [40, 3, 1, "", "prepare_outputs"], [40, 3, 1, "", "rename"], [40, 3, 1, "", "render"], [40, 2, 1, "", "return_units"], [40, 2, 1, "", "separable"], [40, 3, 1, "", "set_slice_args"], [40, 2, 1, "", "standard_broadcasting"], [40, 2, 1, "", "stds"], [40, 3, 1, "", "strip_units_from_tree"], [40, 3, 1, "", "sum_of_implicit_terms"], [40, 2, 1, "", "sync_constraints"], [40, 2, 1, "", "tied"], [40, 2, 1, "", "uses_quantity"], [40, 3, 1, "", "with_units_from_data"], [40, 3, 1, "", "without_units_for_data"]], "gammapy.astro.source": [[50, 1, 1, "", "PWN"], [51, 1, 1, "", "Pulsar"], [52, 1, 1, "", "SNR"], [53, 1, 1, "", "SNRTrueloveMcKee"], [54, 1, 1, "", "SimplePulsar"]], "gammapy.astro.source.PWN": [[50, 3, 1, "", "magnetic_field"], [50, 3, 1, "", "radius"]], "gammapy.astro.source.Pulsar": [[51, 3, 1, "", "energy_integrated"], [51, 3, 1, "", "luminosity_spindown"], [51, 3, 1, "", "magnetic_field"], [51, 3, 1, "", "period"], [51, 3, 1, "", "period_dot"], [51, 3, 1, "", "tau"]], "gammapy.astro.source.SNR": [[52, 3, 1, "", "luminosity_tev"], [52, 3, 1, "", "radius"], [52, 3, 1, "", "radius_inner"], [52, 2, 1, "", "sedov_taylor_begin"], [52, 2, 1, "", "sedov_taylor_end"]], "gammapy.astro.source.SNRTrueloveMcKee": [[53, 3, 1, "", "luminosity_tev"], [53, 3, 1, "", "radius"], [53, 3, 1, "", "radius_inner"], [53, 3, 1, "", "radius_reverse_shock"], [53, 2, 1, "", "sedov_taylor_begin"], [53, 2, 1, "", "sedov_taylor_end"]], "gammapy.astro.source.SimplePulsar": [[54, 2, 1, "", "luminosity_spindown"], [54, 2, 1, "", "magnetic_field"], [54, 2, 1, "", "tau"]], "gammapy.catalog": [[55, 5, 1, "", "CATALOG_REGISTRY"], [56, 1, 1, "", "SourceCatalog"], [57, 1, 1, "", "SourceCatalog1LHAASO"], [58, 1, 1, "", "SourceCatalog2FHL"], [59, 1, 1, "", "SourceCatalog2HWC"], [60, 1, 1, "", "SourceCatalog2PC"], [61, 1, 1, "", "SourceCatalog3FGL"], [62, 1, 1, "", "SourceCatalog3FHL"], [63, 1, 1, "", "SourceCatalog3HWC"], [64, 1, 1, "", "SourceCatalog3PC"], [65, 1, 1, "", "SourceCatalog4FGL"], [66, 1, 1, "", "SourceCatalogGammaCat"], [67, 1, 1, "", "SourceCatalogHGPS"], [68, 1, 1, "", "SourceCatalogLargeScaleHGPS"], [69, 1, 1, "", "SourceCatalogObject"], [70, 1, 1, "", "SourceCatalogObject1LHAASO"], [71, 1, 1, "", "SourceCatalogObject2FHL"], [72, 1, 1, "", "SourceCatalogObject2HWC"], [73, 1, 1, "", "SourceCatalogObject2PC"], [74, 1, 1, "", "SourceCatalogObject3FGL"], [75, 1, 1, "", "SourceCatalogObject3FHL"], [76, 1, 1, "", "SourceCatalogObject3HWC"], [77, 1, 1, "", "SourceCatalogObject3PC"], [78, 1, 1, "", "SourceCatalogObject4FGL"], [79, 1, 1, "", "SourceCatalogObjectGammaCat"], [80, 1, 1, "", "SourceCatalogObjectHGPS"], [81, 1, 1, "", "SourceCatalogObjectHGPSComponent"]], "gammapy.catalog.SourceCatalog": [[56, 3, 1, "", "description"], [56, 2, 1, "", "positions"], [56, 3, 1, "", "row_index"], [56, 3, 1, "", "source_name"], [56, 2, 1, "", "tag"], [56, 3, 1, "", "to_models"]], "gammapy.catalog.SourceCatalog1LHAASO": [[57, 2, 1, "", "description"], [57, 2, 1, "", "positions"], [57, 3, 1, "", "row_index"], [57, 3, 1, "", "source_name"], [57, 2, 1, "", "tag"], [57, 3, 1, "", "to_models"]], "gammapy.catalog.SourceCatalog2FHL": [[58, 2, 1, "", "description"], [58, 2, 1, "", "positions"], [58, 3, 1, "", "row_index"], [58, 3, 1, "", "source_name"], [58, 2, 1, "", "tag"], [58, 3, 1, "", "to_models"]], "gammapy.catalog.SourceCatalog2HWC": [[59, 2, 1, "", "description"], [59, 2, 1, "", "positions"], [59, 3, 1, "", "row_index"], [59, 3, 1, "", "source_name"], [59, 2, 1, "", "tag"], [59, 3, 1, "", "to_models"]], "gammapy.catalog.SourceCatalog2PC": [[60, 2, 1, "", "description"], [60, 2, 1, "", "positions"], [60, 3, 1, "", "row_index"], [60, 3, 1, "", "source_name"], [60, 2, 1, "", "tag"], [60, 3, 1, "", "to_models"]], "gammapy.catalog.SourceCatalog3FGL": [[61, 2, 1, "", "description"], [61, 2, 1, "", "positions"], [61, 3, 1, "", "row_index"], [61, 3, 1, "", "source_name"], [61, 2, 1, "", "tag"], [61, 3, 1, "", "to_models"]], "gammapy.catalog.SourceCatalog3FHL": [[62, 2, 1, "", "description"], [62, 2, 1, "", "positions"], [62, 3, 1, "", "row_index"], [62, 3, 1, "", "source_name"], [62, 2, 1, "", "tag"], [62, 3, 1, "", "to_models"]], "gammapy.catalog.SourceCatalog3HWC": [[63, 2, 1, "", "description"], [63, 2, 1, "", "positions"], [63, 3, 1, "", "row_index"], [63, 3, 1, "", "source_name"], [63, 2, 1, "", "tag"], [63, 3, 1, "", "to_models"]], "gammapy.catalog.SourceCatalog3PC": [[64, 2, 1, "", "description"], [64, 2, 1, "", "positions"], [64, 3, 1, "", "row_index"], [64, 3, 1, "", "source_name"], [64, 2, 1, "", "tag"], [64, 3, 1, "", "to_models"]], "gammapy.catalog.SourceCatalog4FGL": [[65, 2, 1, "", "description"], [65, 2, 1, "", "positions"], [65, 3, 1, "", "row_index"], [65, 3, 1, "", "source_name"], [65, 2, 1, "", "tag"], [65, 3, 1, "", "to_models"]], "gammapy.catalog.SourceCatalogGammaCat": [[66, 2, 1, "", "description"], [66, 2, 1, "", "positions"], [66, 3, 1, "", "row_index"], [66, 3, 1, "", "source_name"], [66, 2, 1, "", "tag"], [66, 3, 1, "", "to_models"]], "gammapy.catalog.SourceCatalogHGPS": [[67, 2, 1, "", "description"], [67, 3, 1, "", "gaussian_component"], [67, 2, 1, "", "large_scale_component"], [67, 2, 1, "", "positions"], [67, 3, 1, "", "row_index"], [67, 3, 1, "", "source_name"], [67, 2, 1, "", "table_associations"], [67, 2, 1, "", "table_components"], [67, 2, 1, "", "table_identifications"], [67, 2, 1, "", "table_large_scale_component"], [67, 2, 1, "", "tag"], [67, 3, 1, "", "to_models"]], "gammapy.catalog.SourceCatalogLargeScaleHGPS": [[68, 3, 1, "", "evaluate"], [68, 3, 1, "", "peak_brightness"], [68, 3, 1, "", "peak_brightness_error"], [68, 3, 1, "", "peak_latitude"], [68, 3, 1, "", "peak_latitude_error"], [68, 3, 1, "", "width"], [68, 3, 1, "", "width_error"]], "gammapy.catalog.SourceCatalogObject": [[69, 2, 1, "", "name"], [69, 2, 1, "", "position"], [69, 2, 1, "", "row_index"]], "gammapy.catalog.SourceCatalogObject1LHAASO": [[70, 2, 1, "", "name"], [70, 2, 1, "", "position"], [70, 2, 1, "", "row_index"], [70, 3, 1, "", "sky_model"], [70, 3, 1, "", "spatial_model"], [70, 3, 1, "", "spectral_model"]], "gammapy.catalog.SourceCatalogObject2FHL": [[71, 2, 1, "", "asso"], [71, 2, 1, "", "energy_range"], [71, 2, 1, "", "flux_points"], [71, 2, 1, "", "flux_points_meta"], [71, 2, 1, "", "flux_points_table"], [71, 3, 1, "", "info"], [71, 2, 1, "", "is_pointlike"], [71, 2, 1, "", "name"], [71, 2, 1, "", "position"], [71, 2, 1, "", "row_index"], [71, 3, 1, "", "sky_model"], [71, 3, 1, "", "spatial_model"], [71, 3, 1, "", "spectral_model"]], "gammapy.catalog.SourceCatalogObject2HWC": [[72, 3, 1, "", "info"], [72, 2, 1, "", "n_models"], [72, 2, 1, "", "name"], [72, 2, 1, "", "position"], [72, 2, 1, "", "row_index"], [72, 3, 1, "", "sky_model"], [72, 3, 1, "", "spatial_model"], [72, 3, 1, "", "spectral_model"]], "gammapy.catalog.SourceCatalogObject2PC": [[73, 2, 1, "", "flux_points"], [73, 2, 1, "", "flux_points_table"], [73, 3, 1, "", "info"], [73, 2, 1, "", "lightcurve"], [73, 2, 1, "", "name"], [73, 2, 1, "", "position"], [73, 2, 1, "", "row_index"], [73, 3, 1, "", "sky_model"], [73, 3, 1, "", "spatial_model"], [73, 3, 1, "", "spectral_model"]], "gammapy.catalog.SourceCatalogObject3FGL": [[74, 2, 1, "", "asso"], [74, 2, 1, "", "energy_range"], [74, 2, 1, "", "flux_points"], [74, 2, 1, "", "flux_points_meta"], [74, 2, 1, "", "flux_points_table"], [74, 3, 1, "", "info"], [74, 2, 1, "", "is_pointlike"], [74, 3, 1, "", "lightcurve"], [74, 2, 1, "", "name"], [74, 2, 1, "", "position"], [74, 2, 1, "", "row_index"], [74, 3, 1, "", "sky_model"], [74, 3, 1, "", "spatial_model"], [74, 3, 1, "", "spectral_model"]], "gammapy.catalog.SourceCatalogObject3FHL": [[75, 2, 1, "", "asso"], [75, 2, 1, "", "energy_range"], [75, 2, 1, "", "flux_points"], [75, 2, 1, "", "flux_points_meta"], [75, 2, 1, "", "flux_points_table"], [75, 3, 1, "", "info"], [75, 2, 1, "", "is_pointlike"], [75, 2, 1, "", "name"], [75, 2, 1, "", "position"], [75, 2, 1, "", "row_index"], [75, 3, 1, "", "sky_model"], [75, 3, 1, "", "spatial_model"], [75, 3, 1, "", "spectral_model"]], "gammapy.catalog.SourceCatalogObject3HWC": [[76, 3, 1, "", "info"], [76, 2, 1, "", "is_pointlike"], [76, 2, 1, "", "n_models"], [76, 2, 1, "", "name"], [76, 2, 1, "", "position"], [76, 2, 1, "", "row_index"], [76, 3, 1, "", "sky_model"], [76, 3, 1, "", "spatial_model"], [76, 3, 1, "", "spectral_model"]], "gammapy.catalog.SourceCatalogObject3PC": [[77, 2, 1, "", "asso"], [77, 2, 1, "", "flux_points"], [77, 2, 1, "", "flux_points_table"], [77, 3, 1, "", "info"], [77, 2, 1, "", "lightcurve"], [77, 2, 1, "", "name"], [77, 2, 1, "", "position"], [77, 2, 1, "", "row_index"], [77, 3, 1, "", "sky_model"], [77, 3, 1, "", "spatial_model"], [77, 3, 1, "", "spectral_model"]], "gammapy.catalog.SourceCatalogObject4FGL": [[78, 2, 1, "", "asso"], [78, 2, 1, "", "flux_points"], [78, 2, 1, "", "flux_points_meta"], [78, 2, 1, "", "flux_points_table"], [78, 3, 1, "", "info"], [78, 2, 1, "", "is_pointlike"], [78, 3, 1, "", "lightcurve"], [78, 2, 1, "", "name"], [78, 2, 1, "", "position"], [78, 2, 1, "", "row_index"], [78, 3, 1, "", "sky_model"], [78, 3, 1, "", "spatial_model"], [78, 3, 1, "", "spectral_model"]], "gammapy.catalog.SourceCatalogObjectGammaCat": [[79, 2, 1, "", "flux_points"], [79, 2, 1, "", "flux_points_table"], [79, 3, 1, "", "info"], [79, 2, 1, "", "name"], [79, 2, 1, "", "position"], [79, 2, 1, "", "row_index"], [79, 3, 1, "", "sky_model"], [79, 3, 1, "", "spatial_model"], [79, 3, 1, "", "spectral_model"]], "gammapy.catalog.SourceCatalogObjectHGPS": [[80, 3, 1, "", "components_models"], [80, 2, 1, "", "energy_range"], [80, 2, 1, "", "flux_points"], [80, 2, 1, "", "flux_points_table"], [80, 3, 1, "", "info"], [80, 2, 1, "", "name"], [80, 2, 1, "", "position"], [80, 2, 1, "", "row_index"], [80, 3, 1, "", "sky_model"], [80, 3, 1, "", "spatial_model"], [80, 3, 1, "", "spectral_model"]], "gammapy.catalog.SourceCatalogObjectHGPSComponent": [[81, 2, 1, "", "name"], [81, 2, 1, "", "position"], [81, 2, 1, "", "row_index"], [81, 3, 1, "", "spatial_model"]], "gammapy.data": [[82, 1, 1, "", "DataStore"], [83, 1, 1, "", "EventList"], [84, 1, 1, "", "EventListMetaData"], [85, 1, 1, "", "FixedPointingInfo"], [86, 1, 1, "", "GTI"], [87, 1, 1, "", "HDUIndexTable"], [88, 1, 1, "", "Observation"], [89, 1, 1, "", "ObservationFilter"], [90, 1, 1, "", "ObservationMetaData"], [91, 1, 1, "", "ObservationTable"], [92, 1, 1, "", "Observations"], [93, 1, 1, "", "ObservationsEventsSampler"], [94, 1, 1, "", "PointingInfo"], [95, 1, 1, "", "PointingMode"], [96, 4, 1, "", "get_irfs_features"], [97, 5, 1, "", "observatory_locations"]], "gammapy.data.DataStore": [[82, 2, 1, "", "DEFAULT_HDU_TABLE"], [82, 2, 1, "", "DEFAULT_OBS_TABLE"], [82, 3, 1, "", "check"], [82, 3, 1, "", "copy_obs"], [82, 3, 1, "", "from_dir"], [82, 3, 1, "", "from_events_files"], [82, 3, 1, "", "from_file"], [82, 3, 1, "", "get_observations"], [82, 3, 1, "", "info"], [82, 3, 1, "", "obs"], [82, 2, 1, "", "obs_ids"]], "gammapy.data.EventList": [[83, 2, 1, "", "altaz"], [83, 2, 1, "", "altaz_frame"], [83, 2, 1, "", "altaz_from_table"], [83, 3, 1, "", "check"], [83, 3, 1, "", "copy"], [83, 2, 1, "", "energy"], [83, 3, 1, "", "from_stack"], [83, 2, 1, "", "galactic"], [83, 2, 1, "", "galactic_median"], [83, 2, 1, "", "is_pointed_observation"], [83, 3, 1, "", "map_coord"], [83, 2, 1, "", "observation_dead_time_fraction"], [83, 2, 1, "", "observation_live_time_duration"], [83, 2, 1, "", "observation_time_duration"], [83, 2, 1, "", "observation_time_start"], [83, 2, 1, "", "observation_time_stop"], [83, 2, 1, "", "observatory_earth_location"], [83, 2, 1, "", "offset"], [83, 2, 1, "", "offset_from_median"], [83, 3, 1, "", "peek"], [83, 3, 1, "", "plot_energy"], [83, 3, 1, "", "plot_energy_offset"], [83, 3, 1, "", "plot_image"], [83, 3, 1, "", "plot_offset2_distribution"], [83, 3, 1, "", "plot_time"], [83, 2, 1, "", "pointing_radec"], [83, 2, 1, "", "radec"], [83, 3, 1, "", "read"], [83, 3, 1, "", "select_energy"], [83, 3, 1, "", "select_mask"], [83, 3, 1, "", "select_offset"], [83, 3, 1, "", "select_parameter"], [83, 3, 1, "", "select_rad_max"], [83, 3, 1, "", "select_region"], [83, 3, 1, "", "select_row_subset"], [83, 3, 1, "", "select_time"], [83, 3, 1, "", "stack"], [83, 2, 1, "", "time"], [83, 2, 1, "", "time_ref"], [83, 3, 1, "", "to_table_hdu"]], "gammapy.data.EventListMetaData": [[84, 3, 1, "", "construct"], [84, 3, 1, "", "copy"], [84, 3, 1, "", "dict"], [84, 3, 1, "", "from_header"], [84, 3, 1, "", "from_orm"], [84, 3, 1, "", "json"], [84, 2, 1, "", "model_computed_fields"], [84, 2, 1, "", "model_config"], [84, 3, 1, "", "model_construct"], [84, 3, 1, "", "model_copy"], [84, 3, 1, "", "model_dump"], [84, 3, 1, "", "model_dump_json"], [84, 2, 1, "", "model_extra"], [84, 2, 1, "", "model_fields"], [84, 2, 1, "", "model_fields_set"], [84, 3, 1, "", "model_json_schema"], [84, 3, 1, "", "model_parametrized_name"], [84, 3, 1, "", "model_post_init"], [84, 3, 1, "", "model_rebuild"], [84, 3, 1, "", "model_validate"], [84, 3, 1, "", "model_validate_json"], [84, 3, 1, "", "model_validate_strings"], [84, 3, 1, "", "parse_file"], [84, 3, 1, "", "parse_obj"], [84, 3, 1, "", "parse_raw"], [84, 3, 1, "", "schema"], [84, 3, 1, "", "schema_json"], [84, 2, 1, "", "tag"], [84, 3, 1, "", "to_header"], [84, 3, 1, "", "to_yaml"], [84, 3, 1, "", "update_forward_refs"], [84, 3, 1, "", "validate"]], "gammapy.data.FixedPointingInfo": [[85, 2, 1, "", "fixed_altaz"], [85, 2, 1, "", "fixed_icrs"], [85, 3, 1, "", "from_fits_header"], [85, 3, 1, "", "get_altaz"], [85, 3, 1, "", "get_icrs"], [85, 2, 1, "", "mode"], [85, 3, 1, "", "read"], [85, 3, 1, "", "to_fits_header"]], "gammapy.data.GTI": [[86, 3, 1, "", "copy"], [86, 3, 1, "", "create"], [86, 3, 1, "", "delete_interval"], [86, 3, 1, "", "from_stack"], [86, 3, 1, "", "from_table_hdu"], [86, 3, 1, "", "from_time_intervals"], [86, 3, 1, "", "group_table"], [86, 2, 1, "", "met_start"], [86, 2, 1, "", "met_stop"], [86, 3, 1, "", "read"], [86, 3, 1, "", "select_time"], [86, 3, 1, "", "stack"], [86, 2, 1, "", "time_delta"], [86, 2, 1, "", "time_intervals"], [86, 2, 1, "", "time_ref"], [86, 2, 1, "", "time_start"], [86, 2, 1, "", "time_stop"], [86, 2, 1, "", "time_sum"], [86, 3, 1, "", "to_table_hdu"], [86, 3, 1, "", "union"], [86, 3, 1, "", "write"]], "gammapy.data.HDUIndexTable": [[87, 2, 1, "", "ColumnClass"], [87, 2, 1, "", "VALID_HDU_CLASS"], [87, 2, 1, "", "VALID_HDU_TYPE"], [87, 3, 1, "", "add_column"], [87, 3, 1, "", "add_columns"], [87, 3, 1, "", "add_index"], [87, 3, 1, "", "add_row"], [87, 3, 1, "", "argsort"], [87, 3, 1, "", "as_array"], [87, 2, 1, "", "base_dir"], [87, 2, 1, "", "colnames"], [87, 3, 1, "", "convert_bytestring_to_unicode"], [87, 3, 1, "", "convert_unicode_to_bytestring"], [87, 3, 1, "", "copy"], [87, 2, 1, "", "dtype"], [87, 3, 1, "", "field"], [87, 3, 1, "", "filled"], [87, 3, 1, "", "from_pandas"], [87, 3, 1, "", "group_by"], [87, 2, 1, "", "groups"], [87, 2, 1, "", "has_masked_columns"], [87, 2, 1, "", "has_masked_values"], [87, 2, 1, "", "has_mixin_columns"], [87, 2, 1, "", "hdu_class_unique"], [87, 3, 1, "", "hdu_location"], [87, 2, 1, "", "hdu_type_unique"], [87, 2, 1, "", "iloc"], [87, 3, 1, "", "index_column"], [87, 3, 1, "", "index_mode"], [87, 2, 1, "", "indices"], [87, 2, 1, "", "info"], [87, 3, 1, "", "insert_row"], [87, 3, 1, "", "items"], [87, 3, 1, "", "itercols"], [87, 3, 1, "", "iterrows"], [87, 3, 1, "", "keep_columns"], [87, 3, 1, "", "keys"], [87, 2, 1, "", "loc"], [87, 2, 1, "", "loc_indices"], [87, 3, 1, "", "location_info"], [87, 2, 1, "", "mask"], [87, 2, 1, "", "masked"], [87, 2, 1, "", "meta"], [87, 3, 1, "", "more"], [87, 2, 1, "", "obs_id_unique"], [87, 3, 1, "", "pformat"], [87, 3, 1, "", "pformat_all"], [87, 3, 1, "", "pprint"], [87, 3, 1, "", "pprint_all"], [87, 2, 1, "", "pprint_exclude_names"], [87, 2, 1, "", "pprint_include_names"], [87, 3, 1, "", "read"], [87, 3, 1, "", "remove_column"], [87, 3, 1, "", "remove_columns"], [87, 3, 1, "", "remove_indices"], [87, 3, 1, "", "remove_row"], [87, 3, 1, "", "remove_rows"], [87, 3, 1, "", "rename_column"], [87, 3, 1, "", "rename_columns"], [87, 3, 1, "", "replace_column"], [87, 3, 1, "", "reverse"], [87, 3, 1, "", "round"], [87, 3, 1, "", "row_idx"], [87, 3, 1, "", "show_in_browser"], [87, 3, 1, "", "show_in_notebook"], [87, 3, 1, "", "sort"], [87, 3, 1, "", "summary"], [87, 3, 1, "", "to_pandas"], [87, 3, 1, "", "update"], [87, 3, 1, "", "values"], [87, 3, 1, "", "values_equal"], [87, 2, 1, "", "write"]], "gammapy.data.Observation": [[88, 2, 1, "", "aeff"], [88, 2, 1, "", "available_hdus"], [88, 2, 1, "", "available_irfs"], [88, 2, 1, "", "bkg"], [88, 3, 1, "", "check"], [88, 3, 1, "", "copy"], [88, 3, 1, "", "create"], [88, 2, 1, "", "edisp"], [88, 2, 1, "", "events"], [88, 3, 1, "", "get_pointing_altaz"], [88, 3, 1, "", "get_pointing_icrs"], [88, 2, 1, "", "gti"], [88, 2, 1, "", "meta"], [88, 2, 1, "", "observation_dead_time_fraction"], [88, 2, 1, "", "observation_live_time_duration"], [88, 2, 1, "", "observation_time_duration"], [88, 2, 1, "", "observatory_earth_location"], [88, 3, 1, "", "peek"], [88, 2, 1, "", "pointing"], [88, 2, 1, "", "psf"], [88, 2, 1, "", "rad_max"], [88, 3, 1, "", "read"], [88, 3, 1, "", "select_time"], [88, 2, 1, "", "target_radec"], [88, 2, 1, "", "tmid"], [88, 2, 1, "", "tstart"], [88, 2, 1, "", "tstop"], [88, 3, 1, "", "write"]], "gammapy.data.ObservationFilter": [[89, 2, 1, "", "EVENT_FILTER_TYPES"], [89, 3, 1, "", "copy"], [89, 3, 1, "", "filter_events"], [89, 3, 1, "", "filter_gti"], [89, 2, 1, "", "livetime_fraction"]], "gammapy.data.ObservationMetaData": [[90, 3, 1, "", "construct"], [90, 3, 1, "", "copy"], [90, 3, 1, "", "dict"], [90, 3, 1, "", "from_header"], [90, 3, 1, "", "from_orm"], [90, 3, 1, "", "json"], [90, 2, 1, "", "model_computed_fields"], [90, 2, 1, "", "model_config"], [90, 3, 1, "", "model_construct"], [90, 3, 1, "", "model_copy"], [90, 3, 1, "", "model_dump"], [90, 3, 1, "", "model_dump_json"], [90, 2, 1, "", "model_extra"], [90, 2, 1, "", "model_fields"], [90, 2, 1, "", "model_fields_set"], [90, 3, 1, "", "model_json_schema"], [90, 3, 1, "", "model_parametrized_name"], [90, 3, 1, "", "model_post_init"], [90, 3, 1, "", "model_rebuild"], [90, 3, 1, "", "model_validate"], [90, 3, 1, "", "model_validate_json"], [90, 3, 1, "", "model_validate_strings"], [90, 3, 1, "", "parse_file"], [90, 3, 1, "", "parse_obj"], [90, 3, 1, "", "parse_raw"], [90, 3, 1, "", "schema"], [90, 3, 1, "", "schema_json"], [90, 2, 1, "", "tag"], [90, 3, 1, "", "to_header"], [90, 3, 1, "", "to_yaml"], [90, 3, 1, "", "update_forward_refs"], [90, 3, 1, "", "validate"]], "gammapy.data.ObservationTable": [[91, 2, 1, "", "ColumnClass"], [91, 3, 1, "", "add_column"], [91, 3, 1, "", "add_columns"], [91, 3, 1, "", "add_index"], [91, 3, 1, "", "add_row"], [91, 3, 1, "", "argsort"], [91, 3, 1, "", "as_array"], [91, 2, 1, "", "colnames"], [91, 3, 1, "", "convert_bytestring_to_unicode"], [91, 3, 1, "", "convert_unicode_to_bytestring"], [91, 3, 1, "", "copy"], [91, 2, 1, "", "dtype"], [91, 3, 1, "", "field"], [91, 3, 1, "", "filled"], [91, 3, 1, "", "from_pandas"], [91, 3, 1, "", "group_by"], [91, 2, 1, "", "groups"], [91, 2, 1, "", "has_masked_columns"], [91, 2, 1, "", "has_masked_values"], [91, 2, 1, "", "has_mixin_columns"], [91, 2, 1, "", "iloc"], [91, 3, 1, "", "index_column"], [91, 3, 1, "", "index_mode"], [91, 2, 1, "", "indices"], [91, 2, 1, "", "info"], [91, 3, 1, "", "insert_row"], [91, 3, 1, "", "items"], [91, 3, 1, "", "itercols"], [91, 3, 1, "", "iterrows"], [91, 3, 1, "", "keep_columns"], [91, 3, 1, "", "keys"], [91, 2, 1, "", "loc"], [91, 2, 1, "", "loc_indices"], [91, 2, 1, "", "mask"], [91, 2, 1, "", "masked"], [91, 2, 1, "", "meta"], [91, 3, 1, "", "more"], [91, 3, 1, "", "pformat"], [91, 3, 1, "", "pformat_all"], [91, 2, 1, "", "pointing_galactic"], [91, 2, 1, "", "pointing_radec"], [91, 3, 1, "", "pprint"], [91, 3, 1, "", "pprint_all"], [91, 2, 1, "", "pprint_exclude_names"], [91, 2, 1, "", "pprint_include_names"], [91, 3, 1, "", "read"], [91, 3, 1, "", "remove_column"], [91, 3, 1, "", "remove_columns"], [91, 3, 1, "", "remove_indices"], [91, 3, 1, "", "remove_row"], [91, 3, 1, "", "remove_rows"], [91, 3, 1, "", "rename_column"], [91, 3, 1, "", "rename_columns"], [91, 3, 1, "", "replace_column"], [91, 3, 1, "", "reverse"], [91, 3, 1, "", "round"], [91, 3, 1, "", "select_obs_id"], [91, 3, 1, "", "select_observations"], [91, 3, 1, "", "select_range"], [91, 3, 1, "", "select_sky_circle"], [91, 3, 1, "", "select_time_range"], [91, 3, 1, "", "show_in_browser"], [91, 3, 1, "", "show_in_notebook"], [91, 3, 1, "", "sort"], [91, 3, 1, "", "summary"], [91, 2, 1, "", "time_ref"], [91, 2, 1, "", "time_start"], [91, 2, 1, "", "time_stop"], [91, 3, 1, "", "to_pandas"], [91, 3, 1, "", "update"], [91, 3, 1, "", "values"], [91, 3, 1, "", "values_equal"], [91, 2, 1, "", "write"]], "gammapy.data.Observations": [[92, 3, 1, "", "append"], [92, 3, 1, "", "clear"], [92, 3, 1, "", "count"], [92, 3, 1, "", "extend"], [92, 3, 1, "", "from_stack"], [92, 3, 1, "", "group_by_label"], [92, 2, 1, "", "ids"], [92, 3, 1, "", "in_memory_generator"], [92, 3, 1, "", "index"], [92, 3, 1, "", "insert"], [92, 3, 1, "", "pop"], [92, 3, 1, "", "remove"], [92, 3, 1, "", "reverse"], [92, 3, 1, "", "select_time"]], "gammapy.data.ObservationsEventsSampler": [[93, 2, 1, "", "n_jobs"], [93, 2, 1, "", "parallel_backend"], [93, 3, 1, "", "run"], [93, 3, 1, "", "simulate_observation"]], "gammapy.data.PointingInfo": [[94, 2, 1, "", "altaz"], [94, 2, 1, "", "altaz_frame"], [94, 2, 1, "", "altaz_from_table"], [94, 3, 1, "", "altaz_interpolate"], [94, 2, 1, "", "duration"], [94, 3, 1, "", "get_altaz"], [94, 3, 1, "", "get_icrs"], [94, 2, 1, "", "location"], [94, 2, 1, "", "radec"], [94, 3, 1, "", "read"], [94, 2, 1, "", "time"], [94, 2, 1, "", "time_ref"]], "gammapy.data.PointingMode": [[95, 2, 1, "", "DRIFT"], [95, 2, 1, "", "POINTING"]], "gammapy.datasets": [[98, 5, 1, "", "DATASET_REGISTRY"], [99, 1, 1, "", "Dataset"], [100, 1, 1, "", "Datasets"], [101, 1, 1, "", "FluxPointsDataset"], [102, 1, 1, "", "MapDataset"], [103, 1, 1, "", "MapDatasetEventSampler"], [104, 1, 1, "", "MapDatasetMetaData"], [105, 1, 1, "", "MapDatasetOnOff"], [106, 1, 1, "", "OGIPDatasetReader"], [107, 1, 1, "", "OGIPDatasetWriter"], [108, 1, 1, "", "ObservationEventSampler"], [109, 1, 1, "", "SpectrumDataset"], [110, 1, 1, "", "SpectrumDatasetOnOff"], [111, 4, 1, "", "apply_edisp"], [112, 4, 1, "", "create_map_dataset_from_observation"], [113, 4, 1, "", "create_map_dataset_geoms"], [114, 4, 1, "", "split_dataset"], [4, 0, 0, "-", "utils"]], "gammapy.datasets.Dataset": [[99, 3, 1, "", "copy"], [99, 2, 1, "", "mask"], [99, 2, 1, "", "name"], [99, 3, 1, "", "stat_array"], [99, 3, 1, "", "stat_sum"], [99, 2, 1, "", "tag"], [99, 3, 1, "", "to_dict"]], "gammapy.datasets.Datasets": [[100, 3, 1, "", "append"], [100, 3, 1, "", "clear"], [100, 2, 1, "", "contributes_to_stat"], [100, 3, 1, "", "copy"], [100, 3, 1, "", "count"], [100, 2, 1, "", "energy_axes_are_aligned"], [100, 2, 1, "", "energy_ranges"], [100, 3, 1, "", "extend"], [100, 2, 1, "", "gti"], [100, 3, 1, "", "index"], [100, 3, 1, "", "info_table"], [100, 3, 1, "", "insert"], [100, 2, 1, "", "is_all_same_energy_shape"], [100, 2, 1, "", "is_all_same_shape"], [100, 2, 1, "", "is_all_same_type"], [100, 2, 1, "", "meta_table"], [100, 2, 1, "", "models"], [100, 2, 1, "", "names"], [100, 2, 1, "", "parameters"], [100, 3, 1, "", "pop"], [100, 3, 1, "", "read"], [100, 3, 1, "", "remove"], [100, 3, 1, "", "reverse"], [100, 3, 1, "", "select_time"], [100, 3, 1, "", "slice_by_energy"], [100, 3, 1, "", "stack_reduce"], [100, 3, 1, "", "stat_sum"], [100, 3, 1, "", "to_spectrum_datasets"], [100, 3, 1, "", "write"]], "gammapy.datasets.FluxPointsDataset": [[101, 2, 1, "", "available_stat_type"], [101, 3, 1, "", "copy"], [101, 3, 1, "", "data_shape"], [101, 3, 1, "", "flux_pred"], [101, 3, 1, "", "from_dict"], [101, 2, 1, "", "gti"], [101, 2, 1, "", "mask"], [101, 2, 1, "", "mask_safe"], [101, 2, 1, "", "mask_valid"], [101, 2, 1, "", "models"], [101, 2, 1, "", "name"], [101, 3, 1, "", "plot_fit"], [101, 3, 1, "", "plot_residuals"], [101, 3, 1, "", "plot_spectrum"], [101, 3, 1, "", "read"], [101, 3, 1, "", "residuals"], [101, 3, 1, "", "stat_array"], [101, 3, 1, "", "stat_sum"], [101, 2, 1, "", "stat_type"], [101, 2, 1, "", "tag"], [101, 3, 1, "", "to_dict"], [101, 3, 1, "", "write"]], "gammapy.datasets.MapDataset": [[102, 2, 1, "", "background"], [102, 2, 1, "", "background_model"], [102, 3, 1, "", "copy"], [102, 2, 1, "", "counts"], [102, 3, 1, "", "create"], [102, 3, 1, "", "cutout"], [102, 2, 1, "", "data_shape"], [102, 3, 1, "", "downsample"], [102, 2, 1, "", "edisp"], [102, 2, 1, "", "energy_range"], [102, 2, 1, "", "energy_range_fit"], [102, 2, 1, "", "energy_range_safe"], [102, 2, 1, "", "energy_range_total"], [102, 2, 1, "", "evaluators"], [102, 2, 1, "", "excess"], [102, 2, 1, "", "exposure"], [102, 3, 1, "", "fake"], [102, 3, 1, "", "from_dict"], [102, 3, 1, "", "from_geoms"], [102, 3, 1, "", "from_hdulist"], [102, 2, 1, "", "geoms"], [102, 2, 1, "", "gti"], [102, 3, 1, "", "info_dict"], [102, 2, 1, "", "mask"], [102, 2, 1, "", "mask_fit"], [102, 2, 1, "", "mask_fit_image"], [102, 2, 1, "", "mask_image"], [102, 2, 1, "", "mask_safe"], [102, 2, 1, "", "mask_safe_edisp"], [102, 2, 1, "", "mask_safe_image"], [102, 2, 1, "", "mask_safe_psf"], [102, 2, 1, "", "meta"], [102, 2, 1, "", "meta_table"], [102, 2, 1, "", "models"], [102, 2, 1, "", "name"], [102, 3, 1, "", "npred"], [102, 3, 1, "", "npred_background"], [102, 3, 1, "", "npred_signal"], [102, 3, 1, "", "pad"], [102, 3, 1, "", "peek"], [102, 3, 1, "", "plot_residuals"], [102, 3, 1, "", "plot_residuals_spatial"], [102, 3, 1, "", "plot_residuals_spectral"], [102, 2, 1, "", "psf"], [102, 3, 1, "", "read"], [102, 3, 1, "", "resample_energy_axis"], [102, 3, 1, "", "reset_data_cache"], [102, 3, 1, "", "residuals"], [102, 3, 1, "", "slice_by_energy"], [102, 3, 1, "", "slice_by_idx"], [102, 3, 1, "", "stack"], [102, 3, 1, "", "stat_array"], [102, 3, 1, "", "stat_sum"], [102, 2, 1, "", "stat_type"], [102, 2, 1, "", "tag"], [102, 3, 1, "", "to_dict"], [102, 3, 1, "", "to_hdulist"], [102, 3, 1, "", "to_image"], [102, 3, 1, "", "to_masked"], [102, 3, 1, "", "to_region_map_dataset"], [102, 3, 1, "", "to_spectrum_dataset"], [102, 3, 1, "", "write"]], "gammapy.datasets.MapDatasetEventSampler": [[103, 3, 1, "", "event_det_coords"], [103, 3, 1, "", "event_list_meta"], [103, 3, 1, "", "run"], [103, 3, 1, "", "sample_background"], [103, 3, 1, "", "sample_edisp"], [103, 3, 1, "", "sample_psf"], [103, 3, 1, "", "sample_sources"]], "gammapy.datasets.MapDatasetMetaData": [[104, 3, 1, "", "construct"], [104, 3, 1, "", "copy"], [104, 3, 1, "", "dict"], [104, 3, 1, "", "from_header"], [104, 3, 1, "", "from_orm"], [104, 3, 1, "", "json"], [104, 2, 1, "", "model_computed_fields"], [104, 2, 1, "", "model_config"], [104, 3, 1, "", "model_construct"], [104, 3, 1, "", "model_copy"], [104, 3, 1, "", "model_dump"], [104, 3, 1, "", "model_dump_json"], [104, 2, 1, "", "model_extra"], [104, 2, 1, "", "model_fields"], [104, 2, 1, "", "model_fields_set"], [104, 3, 1, "", "model_json_schema"], [104, 3, 1, "", "model_parametrized_name"], [104, 3, 1, "", "model_post_init"], [104, 3, 1, "", "model_rebuild"], [104, 3, 1, "", "model_validate"], [104, 3, 1, "", "model_validate_json"], [104, 3, 1, "", "model_validate_strings"], [104, 3, 1, "", "parse_file"], [104, 3, 1, "", "parse_obj"], [104, 3, 1, "", "parse_raw"], [104, 3, 1, "", "schema"], [104, 3, 1, "", "schema_json"], [104, 3, 1, "", "stack"], [104, 2, 1, "", "tag"], [104, 3, 1, "", "to_header"], [104, 3, 1, "", "to_yaml"], [104, 3, 1, "", "update_forward_refs"], [104, 3, 1, "", "validate"]], "gammapy.datasets.MapDatasetOnOff": [[105, 2, 1, "", "alpha"], [105, 2, 1, "", "background"], [105, 2, 1, "", "background_model"], [105, 3, 1, "", "copy"], [105, 2, 1, "", "counts"], [105, 3, 1, "", "create"], [105, 3, 1, "", "cutout"], [105, 2, 1, "", "data_shape"], [105, 3, 1, "", "downsample"], [105, 2, 1, "", "edisp"], [105, 2, 1, "", "energy_range"], [105, 2, 1, "", "energy_range_fit"], [105, 2, 1, "", "energy_range_safe"], [105, 2, 1, "", "energy_range_total"], [105, 2, 1, "", "evaluators"], [105, 2, 1, "", "excess"], [105, 2, 1, "", "exposure"], [105, 3, 1, "", "fake"], [105, 3, 1, "", "from_dict"], [105, 3, 1, "", "from_geoms"], [105, 3, 1, "", "from_hdulist"], [105, 3, 1, "", "from_map_dataset"], [105, 2, 1, "", "geoms"], [105, 2, 1, "", "gti"], [105, 3, 1, "", "info_dict"], [105, 2, 1, "", "mask"], [105, 2, 1, "", "mask_fit"], [105, 2, 1, "", "mask_fit_image"], [105, 2, 1, "", "mask_image"], [105, 2, 1, "", "mask_safe"], [105, 2, 1, "", "mask_safe_edisp"], [105, 2, 1, "", "mask_safe_image"], [105, 2, 1, "", "mask_safe_psf"], [105, 2, 1, "", "meta"], [105, 2, 1, "", "meta_table"], [105, 2, 1, "", "models"], [105, 2, 1, "", "name"], [105, 3, 1, "", "npred"], [105, 3, 1, "", "npred_background"], [105, 3, 1, "", "npred_off"], [105, 3, 1, "", "npred_signal"], [105, 3, 1, "", "pad"], [105, 3, 1, "", "peek"], [105, 3, 1, "", "plot_residuals"], [105, 3, 1, "", "plot_residuals_spatial"], [105, 3, 1, "", "plot_residuals_spectral"], [105, 2, 1, "", "psf"], [105, 3, 1, "", "read"], [105, 3, 1, "", "resample_energy_axis"], [105, 3, 1, "", "reset_data_cache"], [105, 3, 1, "", "residuals"], [105, 3, 1, "", "slice_by_energy"], [105, 3, 1, "", "slice_by_idx"], [105, 3, 1, "", "stack"], [105, 3, 1, "", "stat_array"], [105, 3, 1, "", "stat_sum"], [105, 2, 1, "", "stat_type"], [105, 2, 1, "", "tag"], [105, 3, 1, "", "to_dict"], [105, 3, 1, "", "to_hdulist"], [105, 3, 1, "", "to_image"], [105, 3, 1, "", "to_map_dataset"], [105, 3, 1, "", "to_masked"], [105, 3, 1, "", "to_region_map_dataset"], [105, 3, 1, "", "to_spectrum_dataset"], [105, 3, 1, "", "write"]], "gammapy.datasets.OGIPDatasetReader": [[106, 3, 1, "", "get_filenames"], [106, 3, 1, "", "get_valid_path"], [106, 3, 1, "", "read"], [106, 3, 1, "", "read_arf"], [106, 3, 1, "", "read_bkg"], [106, 3, 1, "", "read_pha"], [106, 3, 1, "", "read_rmf"], [106, 2, 1, "", "tag"]], "gammapy.datasets.OGIPDatasetWriter": [[107, 3, 1, "", "get_filenames"], [107, 3, 1, "", "get_ogip_meta"], [107, 2, 1, "", "tag"], [107, 3, 1, "", "to_counts_hdulist"], [107, 3, 1, "", "write"], [107, 3, 1, "", "write_arf"], [107, 3, 1, "", "write_bkg"], [107, 3, 1, "", "write_pha"], [107, 3, 1, "", "write_rmf"]], "gammapy.datasets.ObservationEventSampler": [[108, 3, 1, "", "event_det_coords"], [108, 3, 1, "", "event_list_meta"], [108, 3, 1, "", "run"], [108, 3, 1, "", "sample_background"], [108, 3, 1, "", "sample_edisp"], [108, 3, 1, "", "sample_psf"], [108, 3, 1, "", "sample_sources"]], "gammapy.datasets.SpectrumDataset": [[109, 2, 1, "", "background"], [109, 2, 1, "", "background_model"], [109, 3, 1, "", "copy"], [109, 2, 1, "", "counts"], [109, 3, 1, "", "create"], [109, 3, 1, "", "cutout"], [109, 2, 1, "", "data_shape"], [109, 3, 1, "", "downsample"], [109, 2, 1, "", "edisp"], [109, 2, 1, "", "energy_range"], [109, 2, 1, "", "energy_range_fit"], [109, 2, 1, "", "energy_range_safe"], [109, 2, 1, "", "energy_range_total"], [109, 2, 1, "", "evaluators"], [109, 2, 1, "", "excess"], [109, 2, 1, "", "exposure"], [109, 3, 1, "", "fake"], [109, 3, 1, "", "from_dict"], [109, 3, 1, "", "from_geoms"], [109, 3, 1, "", "from_hdulist"], [109, 2, 1, "", "geoms"], [109, 2, 1, "", "gti"], [109, 3, 1, "", "info_dict"], [109, 2, 1, "", "mask"], [109, 2, 1, "", "mask_fit"], [109, 2, 1, "", "mask_fit_image"], [109, 2, 1, "", "mask_image"], [109, 2, 1, "", "mask_safe"], [109, 2, 1, "", "mask_safe_edisp"], [109, 2, 1, "", "mask_safe_image"], [109, 2, 1, "", "mask_safe_psf"], [109, 2, 1, "", "meta"], [109, 2, 1, "", "meta_table"], [109, 2, 1, "", "models"], [109, 2, 1, "", "name"], [109, 3, 1, "", "npred"], [109, 3, 1, "", "npred_background"], [109, 3, 1, "", "npred_signal"], [109, 3, 1, "", "pad"], [109, 3, 1, "", "peek"], [109, 3, 1, "", "plot_counts"], [109, 3, 1, "", "plot_excess"], [109, 3, 1, "", "plot_fit"], [109, 3, 1, "", "plot_masks"], [109, 3, 1, "", "plot_residuals"], [109, 3, 1, "", "plot_residuals_spatial"], [109, 3, 1, "", "plot_residuals_spectral"], [109, 2, 1, "", "psf"], [109, 3, 1, "", "read"], [109, 3, 1, "", "resample_energy_axis"], [109, 3, 1, "", "reset_data_cache"], [109, 3, 1, "", "residuals"], [109, 3, 1, "", "slice_by_energy"], [109, 3, 1, "", "slice_by_idx"], [109, 3, 1, "", "stack"], [109, 3, 1, "", "stat_array"], [109, 3, 1, "", "stat_sum"], [109, 2, 1, "", "stat_type"], [109, 2, 1, "", "tag"], [109, 3, 1, "", "to_dict"], [109, 3, 1, "", "to_hdulist"], [109, 3, 1, "", "to_image"], [109, 3, 1, "", "to_masked"], [109, 3, 1, "", "to_region_map_dataset"], [109, 3, 1, "", "to_spectrum_dataset"], [109, 3, 1, "", "write"]], "gammapy.datasets.SpectrumDatasetOnOff": [[110, 2, 1, "", "alpha"], [110, 2, 1, "", "background"], [110, 2, 1, "", "background_model"], [110, 3, 1, "", "copy"], [110, 2, 1, "", "counts"], [110, 3, 1, "", "create"], [110, 3, 1, "", "cutout"], [110, 2, 1, "", "data_shape"], [110, 3, 1, "", "downsample"], [110, 2, 1, "", "edisp"], [110, 2, 1, "", "energy_range"], [110, 2, 1, "", "energy_range_fit"], [110, 2, 1, "", "energy_range_safe"], [110, 2, 1, "", "energy_range_total"], [110, 2, 1, "", "evaluators"], [110, 2, 1, "", "excess"], [110, 2, 1, "", "exposure"], [110, 3, 1, "", "fake"], [110, 3, 1, "", "from_dict"], [110, 3, 1, "", "from_geoms"], [110, 3, 1, "", "from_hdulist"], [110, 3, 1, "", "from_map_dataset"], [110, 3, 1, "", "from_spectrum_dataset"], [110, 2, 1, "", "geoms"], [110, 2, 1, "", "gti"], [110, 3, 1, "", "info_dict"], [110, 2, 1, "", "mask"], [110, 2, 1, "", "mask_fit"], [110, 2, 1, "", "mask_fit_image"], [110, 2, 1, "", "mask_image"], [110, 2, 1, "", "mask_safe"], [110, 2, 1, "", "mask_safe_edisp"], [110, 2, 1, "", "mask_safe_image"], [110, 2, 1, "", "mask_safe_psf"], [110, 2, 1, "", "meta"], [110, 2, 1, "", "meta_table"], [110, 2, 1, "", "models"], [110, 2, 1, "", "name"], [110, 3, 1, "", "npred"], [110, 3, 1, "", "npred_background"], [110, 3, 1, "", "npred_off"], [110, 3, 1, "", "npred_signal"], [110, 3, 1, "", "pad"], [110, 3, 1, "", "peek"], [110, 3, 1, "", "plot_counts"], [110, 3, 1, "", "plot_excess"], [110, 3, 1, "", "plot_fit"], [110, 3, 1, "", "plot_masks"], [110, 3, 1, "", "plot_residuals"], [110, 3, 1, "", "plot_residuals_spatial"], [110, 3, 1, "", "plot_residuals_spectral"], [110, 2, 1, "", "psf"], [110, 3, 1, "", "read"], [110, 3, 1, "", "resample_energy_axis"], [110, 3, 1, "", "reset_data_cache"], [110, 3, 1, "", "residuals"], [110, 3, 1, "", "slice_by_energy"], [110, 3, 1, "", "slice_by_idx"], [110, 3, 1, "", "stack"], [110, 3, 1, "", "stat_array"], [110, 3, 1, "", "stat_sum"], [110, 2, 1, "", "stat_type"], [110, 2, 1, "", "tag"], [110, 3, 1, "", "to_dict"], [110, 3, 1, "", "to_hdulist"], [110, 3, 1, "", "to_image"], [110, 3, 1, "", "to_map_dataset"], [110, 3, 1, "", "to_masked"], [110, 3, 1, "", "to_region_map_dataset"], [110, 3, 1, "", "to_spectrum_dataset"], [110, 3, 1, "", "write"]], "gammapy.datasets.utils": [[115, 4, 1, "", "apply_edisp"], [116, 4, 1, "", "split_dataset"]], "gammapy.estimators": [[117, 1, 1, "", "ASmoothMapEstimator"], [118, 5, 1, "", "ESTIMATOR_REGISTRY"], [119, 1, 1, "", "EnergyDependentMorphologyEstimator"], [120, 1, 1, "", "Estimator"], [121, 1, 1, "", "ExcessMapEstimator"], [122, 1, 1, "", "FluxMaps"], [123, 1, 1, "", "FluxMetaData"], [124, 1, 1, "", "FluxPoints"], [125, 1, 1, "", "FluxPointsEstimator"], [126, 1, 1, "", "FluxProfileEstimator"], [127, 1, 1, "", "ImageProfile"], [128, 1, 1, "", "ImageProfileEstimator"], [129, 1, 1, "", "LightCurveEstimator"], [130, 1, 1, "", "ParameterEstimator"], [131, 1, 1, "", "SensitivityEstimator"], [132, 1, 1, "", "TSMapEstimator"], [5, 0, 0, "-", "utils"]], "gammapy.estimators.ASmoothMapEstimator": [[117, 2, 1, "", "config_parameters"], [117, 3, 1, "", "copy"], [117, 3, 1, "", "estimate_maps"], [117, 3, 1, "", "get_kernels"], [117, 3, 1, "", "get_scales"], [117, 3, 1, "", "run"], [117, 3, 1, "", "selection_all"], [117, 2, 1, "", "selection_optional"], [117, 2, 1, "", "tag"]], "gammapy.estimators.EnergyDependentMorphologyEstimator": [[119, 2, 1, "", "config_parameters"], [119, 3, 1, "", "copy"], [119, 3, 1, "", "estimate_energy_dependence"], [119, 3, 1, "", "run"], [119, 2, 1, "", "selection_optional"], [119, 2, 1, "", "tag"]], "gammapy.estimators.Estimator": [[120, 2, 1, "", "config_parameters"], [120, 3, 1, "", "copy"], [120, 3, 1, "", "run"], [120, 2, 1, "", "selection_optional"], [120, 2, 1, "", "tag"]], "gammapy.estimators.ExcessMapEstimator": [[121, 2, 1, "", "config_parameters"], [121, 3, 1, "", "copy"], [121, 2, 1, "", "correlation_radius"], [121, 3, 1, "", "estimate_excess_map"], [121, 3, 1, "", "estimate_exposure_reco_energy"], [121, 3, 1, "", "estimate_kernel"], [121, 3, 1, "", "estimate_mask_default"], [121, 3, 1, "", "run"], [121, 2, 1, "", "selection_optional"], [121, 2, 1, "", "tag"]], "gammapy.estimators.FluxMaps": [[122, 2, 1, "", "acceptance_off"], [122, 2, 1, "", "acceptance_on"], [122, 3, 1, "", "all_quantities"], [122, 2, 1, "", "alpha"], [122, 2, 1, "", "available_quantities"], [122, 3, 1, "", "copy"], [122, 2, 1, "", "counts"], [122, 2, 1, "", "dnde"], [122, 2, 1, "", "dnde_err"], [122, 2, 1, "", "dnde_errn"], [122, 2, 1, "", "dnde_errp"], [122, 2, 1, "", "dnde_ref"], [122, 2, 1, "", "dnde_scan_values"], [122, 2, 1, "", "dnde_ul"], [122, 2, 1, "", "e2dnde"], [122, 2, 1, "", "e2dnde_err"], [122, 2, 1, "", "e2dnde_errn"], [122, 2, 1, "", "e2dnde_errp"], [122, 2, 1, "", "e2dnde_ref"], [122, 2, 1, "", "e2dnde_ul"], [122, 2, 1, "", "eflux"], [122, 2, 1, "", "eflux_err"], [122, 2, 1, "", "eflux_errn"], [122, 2, 1, "", "eflux_errp"], [122, 2, 1, "", "eflux_ref"], [122, 2, 1, "", "eflux_ul"], [122, 2, 1, "", "energy_axis"], [122, 2, 1, "", "energy_max"], [122, 2, 1, "", "energy_min"], [122, 2, 1, "", "energy_ref"], [122, 2, 1, "", "filter_success_nan"], [122, 2, 1, "", "flux"], [122, 2, 1, "", "flux_err"], [122, 2, 1, "", "flux_errn"], [122, 2, 1, "", "flux_errp"], [122, 2, 1, "", "flux_ref"], [122, 2, 1, "", "flux_sensitivity"], [122, 2, 1, "", "flux_ul"], [122, 3, 1, "", "from_hdulist"], [122, 3, 1, "", "from_maps"], [122, 3, 1, "", "from_stack"], [122, 2, 1, "", "geom"], [122, 3, 1, "", "get_flux_points"], [122, 2, 1, "", "has_any_ts"], [122, 2, 1, "", "has_stat_profiles"], [122, 2, 1, "", "has_success"], [122, 2, 1, "", "has_ul"], [122, 2, 1, "", "is_convertible_to_flux_sed_type"], [122, 2, 1, "", "is_ul"], [122, 3, 1, "", "iter_by_axis"], [122, 2, 1, "", "n_dof"], [122, 2, 1, "", "n_sigma"], [122, 2, 1, "", "n_sigma_ul"], [122, 2, 1, "", "niter"], [122, 2, 1, "", "norm"], [122, 2, 1, "", "norm_err"], [122, 2, 1, "", "norm_errn"], [122, 2, 1, "", "norm_errp"], [122, 2, 1, "", "norm_sensitivity"], [122, 2, 1, "", "norm_ul"], [122, 2, 1, "", "npred"], [122, 2, 1, "", "npred_background"], [122, 2, 1, "", "npred_excess"], [122, 2, 1, "", "npred_excess_err"], [122, 2, 1, "", "npred_excess_errn"], [122, 2, 1, "", "npred_excess_errp"], [122, 2, 1, "", "npred_excess_ref"], [122, 2, 1, "", "npred_excess_ul"], [122, 3, 1, "", "read"], [122, 2, 1, "", "reference_model"], [122, 2, 1, "", "reference_model_default"], [122, 2, 1, "", "reference_spectral_model"], [122, 2, 1, "", "sed_type_init"], [122, 2, 1, "", "sed_type_plot_default"], [122, 3, 1, "", "slice_by_coord"], [122, 3, 1, "", "slice_by_energy"], [122, 3, 1, "", "slice_by_idx"], [122, 3, 1, "", "slice_by_time"], [122, 2, 1, "", "sqrt_ts"], [122, 2, 1, "", "sqrt_ts_threshold_ul"], [122, 2, 1, "", "stat"], [122, 2, 1, "", "stat_null"], [122, 2, 1, "", "stat_scan"], [122, 2, 1, "", "success"], [122, 3, 1, "", "to_hdulist"], [122, 3, 1, "", "to_maps"], [122, 2, 1, "", "ts"], [122, 2, 1, "", "ts_scan"], [122, 3, 1, "", "write"]], "gammapy.estimators.FluxMetaData": [[123, 3, 1, "", "construct"], [123, 3, 1, "", "copy"], [123, 3, 1, "", "dict"], [123, 3, 1, "", "from_header"], [123, 3, 1, "", "from_orm"], [123, 3, 1, "", "json"], [123, 2, 1, "", "model_computed_fields"], [123, 2, 1, "", "model_config"], [123, 3, 1, "", "model_construct"], [123, 3, 1, "", "model_copy"], [123, 3, 1, "", "model_dump"], [123, 3, 1, "", "model_dump_json"], [123, 2, 1, "", "model_extra"], [123, 2, 1, "", "model_fields"], [123, 2, 1, "", "model_fields_set"], [123, 3, 1, "", "model_json_schema"], [123, 3, 1, "", "model_parametrized_name"], [123, 3, 1, "", "model_post_init"], [123, 3, 1, "", "model_rebuild"], [123, 3, 1, "", "model_validate"], [123, 3, 1, "", "model_validate_json"], [123, 3, 1, "", "model_validate_strings"], [123, 3, 1, "", "parse_file"], [123, 3, 1, "", "parse_obj"], [123, 3, 1, "", "parse_raw"], [123, 3, 1, "", "schema"], [123, 3, 1, "", "schema_json"], [123, 2, 1, "", "tag"], [123, 3, 1, "", "to_header"], [123, 3, 1, "", "to_yaml"], [123, 3, 1, "", "update_forward_refs"], [123, 3, 1, "", "validate"]], "gammapy.estimators.FluxPoints": [[124, 2, 1, "", "acceptance_off"], [124, 2, 1, "", "acceptance_on"], [124, 3, 1, "", "all_quantities"], [124, 2, 1, "", "alpha"], [124, 2, 1, "", "available_quantities"], [124, 3, 1, "", "copy"], [124, 2, 1, "", "counts"], [124, 2, 1, "", "dnde"], [124, 2, 1, "", "dnde_err"], [124, 2, 1, "", "dnde_errn"], [124, 2, 1, "", "dnde_errp"], [124, 2, 1, "", "dnde_ref"], [124, 2, 1, "", "dnde_scan_values"], [124, 2, 1, "", "dnde_ul"], [124, 2, 1, "", "e2dnde"], [124, 2, 1, "", "e2dnde_err"], [124, 2, 1, "", "e2dnde_errn"], [124, 2, 1, "", "e2dnde_errp"], [124, 2, 1, "", "e2dnde_ref"], [124, 2, 1, "", "e2dnde_ul"], [124, 2, 1, "", "eflux"], [124, 2, 1, "", "eflux_err"], [124, 2, 1, "", "eflux_errn"], [124, 2, 1, "", "eflux_errp"], [124, 2, 1, "", "eflux_ref"], [124, 2, 1, "", "eflux_ul"], [124, 2, 1, "", "energy_axis"], [124, 2, 1, "", "energy_max"], [124, 2, 1, "", "energy_min"], [124, 2, 1, "", "energy_ref"], [124, 2, 1, "", "filter_success_nan"], [124, 2, 1, "", "flux"], [124, 2, 1, "", "flux_err"], [124, 2, 1, "", "flux_errn"], [124, 2, 1, "", "flux_errp"], [124, 2, 1, "", "flux_ref"], [124, 2, 1, "", "flux_sensitivity"], [124, 2, 1, "", "flux_ul"], [124, 3, 1, "", "from_hdulist"], [124, 3, 1, "", "from_maps"], [124, 3, 1, "", "from_stack"], [124, 3, 1, "", "from_table"], [124, 2, 1, "", "geom"], [124, 3, 1, "", "get_flux_points"], [124, 2, 1, "", "has_any_ts"], [124, 2, 1, "", "has_stat_profiles"], [124, 2, 1, "", "has_success"], [124, 2, 1, "", "has_ul"], [124, 2, 1, "", "is_convertible_to_flux_sed_type"], [124, 2, 1, "", "is_ul"], [124, 3, 1, "", "iter_by_axis"], [124, 2, 1, "", "n_dof"], [124, 2, 1, "", "n_sigma"], [124, 2, 1, "", "n_sigma_ul"], [124, 2, 1, "", "niter"], [124, 2, 1, "", "norm"], [124, 2, 1, "", "norm_err"], [124, 2, 1, "", "norm_errn"], [124, 2, 1, "", "norm_errp"], [124, 2, 1, "", "norm_sensitivity"], [124, 2, 1, "", "norm_ul"], [124, 2, 1, "", "npred"], [124, 2, 1, "", "npred_background"], [124, 2, 1, "", "npred_excess"], [124, 2, 1, "", "npred_excess_err"], [124, 2, 1, "", "npred_excess_errn"], [124, 2, 1, "", "npred_excess_errp"], [124, 2, 1, "", "npred_excess_ref"], [124, 2, 1, "", "npred_excess_ul"], [124, 3, 1, "", "plot"], [124, 3, 1, "", "plot_ts_profiles"], [124, 3, 1, "", "read"], [124, 3, 1, "", "recompute_ul"], [124, 2, 1, "", "reference_model"], [124, 2, 1, "", "reference_model_default"], [124, 2, 1, "", "reference_spectral_model"], [124, 3, 1, "", "resample_axis"], [124, 2, 1, "", "sed_type_init"], [124, 2, 1, "", "sed_type_plot_default"], [124, 3, 1, "", "slice_by_coord"], [124, 3, 1, "", "slice_by_energy"], [124, 3, 1, "", "slice_by_idx"], [124, 3, 1, "", "slice_by_time"], [124, 2, 1, "", "sqrt_ts"], [124, 2, 1, "", "sqrt_ts_threshold_ul"], [124, 2, 1, "", "stat"], [124, 2, 1, "", "stat_null"], [124, 2, 1, "", "stat_scan"], [124, 2, 1, "", "success"], [124, 3, 1, "", "to_hdulist"], [124, 3, 1, "", "to_maps"], [124, 3, 1, "", "to_table"], [124, 2, 1, "", "ts"], [124, 2, 1, "", "ts_scan"], [124, 3, 1, "", "write"]], "gammapy.estimators.FluxPointsEstimator": [[125, 2, 1, "", "config_parameters"], [125, 3, 1, "", "copy"], [125, 3, 1, "", "estimate_best_fit"], [125, 3, 1, "", "estimate_counts"], [125, 3, 1, "", "estimate_errn_errp"], [125, 3, 1, "", "estimate_flux_point"], [125, 3, 1, "", "estimate_npred"], [125, 3, 1, "", "estimate_npred_excess"], [125, 3, 1, "", "estimate_scan"], [125, 3, 1, "", "estimate_ts"], [125, 3, 1, "", "estimate_ul"], [125, 3, 1, "", "get_scale_model"], [125, 2, 1, "", "n_jobs"], [125, 2, 1, "", "parallel_backend"], [125, 3, 1, "", "run"], [125, 2, 1, "", "selection_optional"], [125, 2, 1, "", "tag"]], "gammapy.estimators.FluxProfileEstimator": [[126, 2, 1, "", "config_parameters"], [126, 3, 1, "", "copy"], [126, 3, 1, "", "estimate_best_fit"], [126, 3, 1, "", "estimate_counts"], [126, 3, 1, "", "estimate_errn_errp"], [126, 3, 1, "", "estimate_flux_point"], [126, 3, 1, "", "estimate_npred"], [126, 3, 1, "", "estimate_npred_excess"], [126, 3, 1, "", "estimate_scan"], [126, 3, 1, "", "estimate_ts"], [126, 3, 1, "", "estimate_ul"], [126, 3, 1, "", "get_scale_model"], [126, 2, 1, "", "n_jobs"], [126, 2, 1, "", "parallel_backend"], [126, 2, 1, "", "projected_distance_axis"], [126, 3, 1, "", "run"], [126, 2, 1, "", "selection_optional"], [126, 2, 1, "", "tag"]], "gammapy.estimators.ImageProfile": [[127, 3, 1, "", "normalize"], [127, 3, 1, "", "peek"], [127, 3, 1, "", "plot"], [127, 3, 1, "", "plot_err"], [127, 2, 1, "", "profile"], [127, 2, 1, "", "profile_err"], [127, 3, 1, "", "smooth"], [127, 2, 1, "", "x_max"], [127, 2, 1, "", "x_min"], [127, 2, 1, "", "x_ref"]], "gammapy.estimators.ImageProfileEstimator": [[128, 2, 1, "", "config_parameters"], [128, 3, 1, "", "copy"], [128, 3, 1, "", "run"], [128, 2, 1, "", "selection_optional"], [128, 2, 1, "", "tag"]], "gammapy.estimators.LightCurveEstimator": [[129, 2, 1, "", "config_parameters"], [129, 3, 1, "", "copy"], [129, 3, 1, "", "estimate_best_fit"], [129, 3, 1, "", "estimate_counts"], [129, 3, 1, "", "estimate_errn_errp"], [129, 3, 1, "", "estimate_flux_point"], [129, 3, 1, "", "estimate_npred"], [129, 3, 1, "", "estimate_npred_excess"], [129, 3, 1, "", "estimate_scan"], [129, 3, 1, "", "estimate_time_bin_flux"], [129, 3, 1, "", "estimate_ts"], [129, 3, 1, "", "estimate_ul"], [129, 3, 1, "", "expand_map"], [129, 3, 1, "", "get_scale_model"], [129, 2, 1, "", "n_jobs"], [129, 2, 1, "", "parallel_backend"], [129, 3, 1, "", "run"], [129, 2, 1, "", "selection_optional"], [129, 2, 1, "", "tag"]], "gammapy.estimators.ParameterEstimator": [[130, 2, 1, "", "config_parameters"], [130, 3, 1, "", "copy"], [130, 3, 1, "", "estimate_best_fit"], [130, 3, 1, "", "estimate_counts"], [130, 3, 1, "", "estimate_errn_errp"], [130, 3, 1, "", "estimate_npred"], [130, 3, 1, "", "estimate_scan"], [130, 3, 1, "", "estimate_ts"], [130, 3, 1, "", "estimate_ul"], [130, 3, 1, "", "run"], [130, 2, 1, "", "selection_optional"], [130, 2, 1, "", "tag"]], "gammapy.estimators.SensitivityEstimator": [[131, 2, 1, "", "config_parameters"], [131, 3, 1, "", "copy"], [131, 3, 1, "", "estimate_min_e2dnde"], [131, 3, 1, "", "estimate_min_excess"], [131, 3, 1, "", "run"], [131, 2, 1, "", "selection_optional"], [131, 2, 1, "", "tag"]], "gammapy.estimators.TSMapEstimator": [[132, 2, 1, "", "config_parameters"], [132, 3, 1, "", "copy"], [132, 3, 1, "", "estimate_fit_input_maps"], [132, 3, 1, "", "estimate_flux_default"], [132, 3, 1, "", "estimate_flux_map"], [132, 3, 1, "", "estimate_kernel"], [132, 3, 1, "", "estimate_mask_default"], [132, 3, 1, "", "estimate_pad_width"], [132, 2, 1, "", "n_jobs"], [132, 2, 1, "", "parallel_backend"], [132, 3, 1, "", "run"], [132, 2, 1, "", "selection_all"], [132, 2, 1, "", "selection_optional"], [132, 2, 1, "", "tag"]], "gammapy.estimators.utils": [[133, 4, 1, "", "combine_flux_maps"], [134, 4, 1, "", "combine_significance_maps"], [135, 4, 1, "", "compute_lightcurve_discrete_correlation"], [136, 4, 1, "", "compute_lightcurve_doublingtime"], [137, 4, 1, "", "compute_lightcurve_fpp"], [138, 4, 1, "", "compute_lightcurve_fvar"], [139, 4, 1, "", "estimate_exposure_reco_energy"], [140, 4, 1, "", "find_peaks"], [141, 4, 1, "", "find_peaks_in_flux_map"], [142, 4, 1, "", "get_combined_flux_maps"], [143, 4, 1, "", "get_combined_significance_maps"], [144, 4, 1, "", "get_rebinned_axis"], [145, 4, 1, "", "resample_energy_edges"]], "gammapy.irf": [[146, 1, 1, "", "Background2D"], [147, 1, 1, "", "Background3D"], [148, 1, 1, "", "BackgroundIRF"], [149, 1, 1, "", "EDispKernel"], [150, 1, 1, "", "EDispKernelMap"], [151, 1, 1, "", "EDispMap"], [152, 1, 1, "", "EffectiveAreaTable2D"], [153, 1, 1, "", "EnergyDependentMultiGaussPSF"], [154, 1, 1, "", "EnergyDispersion2D"], [155, 1, 1, "", "FoVAlignment"], [156, 1, 1, "", "IRF"], [157, 1, 1, "", "IRFMap"], [158, 5, 1, "", "IRF_REGISTRY"], [159, 1, 1, "", "PSF3D"], [160, 1, 1, "", "PSFKernel"], [161, 1, 1, "", "PSFKing"], [162, 1, 1, "", "PSFMap"], [163, 1, 1, "", "ParametricPSF"], [164, 1, 1, "", "RadMax2D"], [165, 1, 1, "", "RecoPSFMap"], [166, 4, 1, "", "load_irf_dict_from_file"]], "gammapy.irf.Background2D": [[146, 2, 1, "", "axes"], [146, 3, 1, "", "cumsum"], [146, 2, 1, "", "data"], [146, 2, 1, "", "default_interp_kwargs"], [146, 2, 1, "", "default_unit"], [146, 3, 1, "", "evaluate"], [146, 2, 1, "", "fov_alignment"], [146, 3, 1, "", "from_hdulist"], [146, 3, 1, "", "from_table"], [146, 2, 1, "", "has_offset_axis"], [146, 3, 1, "", "integral"], [146, 3, 1, "", "integrate_log_log"], [146, 3, 1, "", "interp_missing_data"], [146, 3, 1, "", "is_allclose"], [146, 2, 1, "", "is_pointlike"], [146, 3, 1, "", "normalize"], [146, 3, 1, "", "pad"], [146, 3, 1, "", "peek"], [146, 3, 1, "", "plot"], [146, 3, 1, "", "plot_at_energy"], [146, 3, 1, "", "plot_energy_dependence"], [146, 3, 1, "", "plot_offset_dependence"], [146, 3, 1, "", "plot_spectrum"], [146, 2, 1, "", "quantity"], [146, 3, 1, "", "read"], [146, 2, 1, "", "required_axes"], [146, 3, 1, "", "slice_by_idx"], [146, 2, 1, "", "tag"], [146, 3, 1, "", "to_3d"], [146, 3, 1, "", "to_hdulist"], [146, 3, 1, "", "to_table"], [146, 3, 1, "", "to_table_hdu"], [146, 3, 1, "", "to_unit"], [146, 2, 1, "", "unit"], [146, 3, 1, "", "write"]], "gammapy.irf.Background3D": [[147, 2, 1, "", "axes"], [147, 3, 1, "", "cumsum"], [147, 2, 1, "", "data"], [147, 2, 1, "", "default_interp_kwargs"], [147, 2, 1, "", "default_unit"], [147, 3, 1, "", "evaluate"], [147, 2, 1, "", "fov_alignment"], [147, 3, 1, "", "from_hdulist"], [147, 3, 1, "", "from_table"], [147, 2, 1, "", "has_offset_axis"], [147, 3, 1, "", "integral"], [147, 3, 1, "", "integrate_log_log"], [147, 3, 1, "", "interp_missing_data"], [147, 3, 1, "", "is_allclose"], [147, 2, 1, "", "is_pointlike"], [147, 3, 1, "", "normalize"], [147, 3, 1, "", "pad"], [147, 3, 1, "", "peek"], [147, 3, 1, "", "plot_at_energy"], [147, 2, 1, "", "quantity"], [147, 3, 1, "", "read"], [147, 2, 1, "", "required_axes"], [147, 3, 1, "", "slice_by_idx"], [147, 2, 1, "", "tag"], [147, 3, 1, "", "to_2d"], [147, 3, 1, "", "to_hdulist"], [147, 3, 1, "", "to_table"], [147, 3, 1, "", "to_table_hdu"], [147, 3, 1, "", "to_unit"], [147, 2, 1, "", "unit"], [147, 3, 1, "", "write"]], "gammapy.irf.BackgroundIRF": [[148, 2, 1, "", "axes"], [148, 3, 1, "", "cumsum"], [148, 2, 1, "", "data"], [148, 2, 1, "", "default_interp_kwargs"], [148, 3, 1, "", "evaluate"], [148, 2, 1, "", "fov_alignment"], [148, 3, 1, "", "from_hdulist"], [148, 3, 1, "", "from_table"], [148, 2, 1, "", "has_offset_axis"], [148, 3, 1, "", "integral"], [148, 3, 1, "", "integrate_log_log"], [148, 3, 1, "", "interp_missing_data"], [148, 3, 1, "", "is_allclose"], [148, 2, 1, "", "is_pointlike"], [148, 3, 1, "", "normalize"], [148, 3, 1, "", "pad"], [148, 2, 1, "", "quantity"], [148, 3, 1, "", "read"], [148, 2, 1, "", "required_axes"], [148, 3, 1, "", "slice_by_idx"], [148, 2, 1, "", "tag"], [148, 3, 1, "", "to_hdulist"], [148, 3, 1, "", "to_table"], [148, 3, 1, "", "to_table_hdu"], [148, 3, 1, "", "to_unit"], [148, 2, 1, "", "unit"], [148, 3, 1, "", "write"]], "gammapy.irf.EDispKernel": [[149, 2, 1, "", "axes"], [149, 3, 1, "", "cumsum"], [149, 2, 1, "", "data"], [149, 2, 1, "", "default_interp_kwargs"], [149, 3, 1, "", "evaluate"], [149, 2, 1, "", "fov_alignment"], [149, 3, 1, "", "from_diagonal_response"], [149, 3, 1, "", "from_gauss"], [149, 3, 1, "", "from_hdulist"], [149, 3, 1, "", "from_table"], [149, 3, 1, "", "get_bias"], [149, 3, 1, "", "get_bias_energy"], [149, 3, 1, "", "get_mean"], [149, 3, 1, "", "get_resolution"], [149, 2, 1, "", "has_offset_axis"], [149, 3, 1, "", "integral"], [149, 3, 1, "", "integrate_log_log"], [149, 3, 1, "", "interp_missing_data"], [149, 3, 1, "", "is_allclose"], [149, 2, 1, "", "is_pointlike"], [149, 3, 1, "", "normalize"], [149, 3, 1, "", "pad"], [149, 3, 1, "", "pdf_in_safe_range"], [149, 2, 1, "", "pdf_matrix"], [149, 3, 1, "", "peek"], [149, 3, 1, "", "plot_bias"], [149, 3, 1, "", "plot_matrix"], [149, 2, 1, "", "quantity"], [149, 3, 1, "", "read"], [149, 2, 1, "", "required_axes"], [149, 3, 1, "", "slice_by_idx"], [149, 2, 1, "", "tag"], [149, 3, 1, "", "to_hdulist"], [149, 3, 1, "", "to_image"], [149, 3, 1, "", "to_table"], [149, 3, 1, "", "to_table_hdu"], [149, 3, 1, "", "to_unit"], [149, 2, 1, "", "unit"], [149, 3, 1, "", "write"]], "gammapy.irf.EDispKernelMap": [[150, 3, 1, "", "copy"], [150, 3, 1, "", "cutout"], [150, 3, 1, "", "downsample"], [150, 2, 1, "", "edisp_map"], [150, 3, 1, "", "from_diagonal_response"], [150, 3, 1, "", "from_edisp_kernel"], [150, 3, 1, "", "from_gauss"], [150, 3, 1, "", "from_geom"], [150, 3, 1, "", "from_hdulist"], [150, 3, 1, "", "get_edisp_kernel"], [150, 2, 1, "", "has_single_spatial_bin"], [150, 2, 1, "", "mask_safe_image"], [150, 3, 1, "", "peek"], [150, 3, 1, "", "read"], [150, 2, 1, "", "required_axes"], [150, 3, 1, "", "resample_energy_axis"], [150, 3, 1, "", "slice_by_idx"], [150, 3, 1, "", "stack"], [150, 2, 1, "", "tag"], [150, 3, 1, "", "to_hdulist"], [150, 3, 1, "", "to_image"], [150, 3, 1, "", "to_region_nd_map"], [150, 3, 1, "", "write"]], "gammapy.irf.EDispMap": [[151, 3, 1, "", "copy"], [151, 3, 1, "", "cutout"], [151, 3, 1, "", "downsample"], [151, 2, 1, "", "edisp_map"], [151, 3, 1, "", "from_diagonal_response"], [151, 3, 1, "", "from_geom"], [151, 3, 1, "", "from_hdulist"], [151, 3, 1, "", "get_edisp_kernel"], [151, 2, 1, "", "has_single_spatial_bin"], [151, 2, 1, "", "mask_safe_image"], [151, 3, 1, "", "normalize"], [151, 3, 1, "", "peek"], [151, 3, 1, "", "read"], [151, 2, 1, "", "required_axes"], [151, 3, 1, "", "sample_coord"], [151, 3, 1, "", "slice_by_idx"], [151, 3, 1, "", "stack"], [151, 2, 1, "", "tag"], [151, 3, 1, "", "to_edisp_kernel_map"], [151, 3, 1, "", "to_hdulist"], [151, 3, 1, "", "to_region_nd_map"], [151, 3, 1, "", "write"]], "gammapy.irf.EffectiveAreaTable2D": [[152, 2, 1, "", "axes"], [152, 3, 1, "", "cumsum"], [152, 2, 1, "", "data"], [152, 2, 1, "", "default_interp_kwargs"], [152, 2, 1, "", "default_unit"], [152, 3, 1, "", "evaluate"], [152, 2, 1, "", "fov_alignment"], [152, 3, 1, "", "from_hdulist"], [152, 3, 1, "", "from_parametrization"], [152, 3, 1, "", "from_table"], [152, 2, 1, "", "has_offset_axis"], [152, 3, 1, "", "integral"], [152, 3, 1, "", "integrate_log_log"], [152, 3, 1, "", "interp_missing_data"], [152, 3, 1, "", "is_allclose"], [152, 2, 1, "", "is_pointlike"], [152, 3, 1, "", "normalize"], [152, 3, 1, "", "pad"], [152, 3, 1, "", "peek"], [152, 3, 1, "", "plot"], [152, 3, 1, "", "plot_energy_dependence"], [152, 3, 1, "", "plot_offset_dependence"], [152, 2, 1, "", "quantity"], [152, 3, 1, "", "read"], [152, 2, 1, "", "required_axes"], [152, 3, 1, "", "slice_by_idx"], [152, 2, 1, "", "tag"], [152, 3, 1, "", "to_hdulist"], [152, 3, 1, "", "to_table"], [152, 3, 1, "", "to_table_hdu"], [152, 3, 1, "", "to_unit"], [152, 2, 1, "", "unit"], [152, 3, 1, "", "write"]], "gammapy.irf.EnergyDependentMultiGaussPSF": [[153, 2, 1, "", "axes"], [153, 3, 1, "", "containment"], [153, 3, 1, "", "containment_radius"], [153, 3, 1, "", "cumsum"], [153, 2, 1, "", "data"], [153, 2, 1, "", "default_interp_kwargs"], [153, 3, 1, "", "evaluate"], [153, 3, 1, "", "evaluate_containment"], [153, 3, 1, "", "evaluate_direct"], [153, 3, 1, "", "evaluate_parameters"], [153, 2, 1, "", "fov_alignment"], [153, 3, 1, "", "from_hdulist"], [153, 3, 1, "", "from_table"], [153, 2, 1, "", "has_offset_axis"], [153, 3, 1, "", "info"], [153, 3, 1, "", "integral"], [153, 3, 1, "", "integrate_log_log"], [153, 3, 1, "", "interp_missing_data"], [153, 3, 1, "", "is_allclose"], [153, 2, 1, "", "is_pointlike"], [153, 3, 1, "", "normalize"], [153, 3, 1, "", "pad"], [153, 3, 1, "", "peek"], [153, 3, 1, "", "plot_containment_radius"], [153, 3, 1, "", "plot_containment_radius_vs_energy"], [153, 3, 1, "", "plot_psf_vs_rad"], [153, 2, 1, "", "quantity"], [153, 3, 1, "", "read"], [153, 2, 1, "", "required_axes"], [153, 2, 1, "", "required_parameters"], [153, 3, 1, "", "slice_by_idx"], [153, 2, 1, "", "tag"], [153, 3, 1, "", "to_hdulist"], [153, 3, 1, "", "to_psf3d"], [153, 3, 1, "", "to_table"], [153, 3, 1, "", "to_table_hdu"], [153, 3, 1, "", "to_unit"], [153, 2, 1, "", "unit"], [153, 3, 1, "", "write"]], "gammapy.irf.EnergyDispersion2D": [[154, 2, 1, "", "axes"], [154, 3, 1, "", "cumsum"], [154, 2, 1, "", "data"], [154, 2, 1, "", "default_interp_kwargs"], [154, 2, 1, "", "default_unit"], [154, 3, 1, "", "evaluate"], [154, 2, 1, "", "fov_alignment"], [154, 3, 1, "", "from_gauss"], [154, 3, 1, "", "from_hdulist"], [154, 3, 1, "", "from_table"], [154, 2, 1, "", "has_offset_axis"], [154, 3, 1, "", "integral"], [154, 3, 1, "", "integrate_log_log"], [154, 3, 1, "", "interp_missing_data"], [154, 3, 1, "", "is_allclose"], [154, 2, 1, "", "is_pointlike"], [154, 3, 1, "", "normalize"], [154, 3, 1, "", "pad"], [154, 3, 1, "", "peek"], [154, 3, 1, "", "plot_bias"], [154, 3, 1, "", "plot_migration"], [154, 2, 1, "", "quantity"], [154, 3, 1, "", "read"], [154, 2, 1, "", "required_axes"], [154, 3, 1, "", "slice_by_idx"], [154, 2, 1, "", "tag"], [154, 3, 1, "", "to_edisp_kernel"], [154, 3, 1, "", "to_hdulist"], [154, 3, 1, "", "to_table"], [154, 3, 1, "", "to_table_hdu"], [154, 3, 1, "", "to_unit"], [154, 2, 1, "", "unit"], [154, 3, 1, "", "write"]], "gammapy.irf.FoVAlignment": [[155, 2, 1, "", "ALTAZ"], [155, 2, 1, "", "RADEC"], [155, 2, 1, "", "REVERSE_LON_RADEC"]], "gammapy.irf.IRF": [[156, 2, 1, "", "axes"], [156, 3, 1, "", "cumsum"], [156, 2, 1, "", "data"], [156, 2, 1, "", "default_interp_kwargs"], [156, 3, 1, "", "evaluate"], [156, 2, 1, "", "fov_alignment"], [156, 3, 1, "", "from_hdulist"], [156, 3, 1, "", "from_table"], [156, 2, 1, "", "has_offset_axis"], [156, 3, 1, "", "integral"], [156, 3, 1, "", "integrate_log_log"], [156, 3, 1, "", "interp_missing_data"], [156, 3, 1, "", "is_allclose"], [156, 2, 1, "", "is_pointlike"], [156, 3, 1, "", "normalize"], [156, 3, 1, "", "pad"], [156, 2, 1, "", "quantity"], [156, 3, 1, "", "read"], [156, 2, 1, "", "required_axes"], [156, 3, 1, "", "slice_by_idx"], [156, 2, 1, "", "tag"], [156, 3, 1, "", "to_hdulist"], [156, 3, 1, "", "to_table"], [156, 3, 1, "", "to_table_hdu"], [156, 3, 1, "", "to_unit"], [156, 2, 1, "", "unit"], [156, 3, 1, "", "write"]], "gammapy.irf.IRFMap": [[157, 3, 1, "", "copy"], [157, 3, 1, "", "cutout"], [157, 3, 1, "", "downsample"], [157, 3, 1, "", "from_hdulist"], [157, 2, 1, "", "has_single_spatial_bin"], [157, 2, 1, "", "mask_safe_image"], [157, 3, 1, "", "read"], [157, 2, 1, "", "required_axes"], [157, 3, 1, "", "slice_by_idx"], [157, 3, 1, "", "stack"], [157, 2, 1, "", "tag"], [157, 3, 1, "", "to_hdulist"], [157, 3, 1, "", "to_region_nd_map"], [157, 3, 1, "", "write"]], "gammapy.irf.PSF3D": [[159, 2, 1, "", "axes"], [159, 3, 1, "", "containment"], [159, 3, 1, "", "containment_radius"], [159, 3, 1, "", "cumsum"], [159, 2, 1, "", "data"], [159, 2, 1, "", "default_interp_kwargs"], [159, 2, 1, "", "default_unit"], [159, 3, 1, "", "evaluate"], [159, 2, 1, "", "fov_alignment"], [159, 3, 1, "", "from_hdulist"], [159, 3, 1, "", "from_table"], [159, 2, 1, "", "has_offset_axis"], [159, 3, 1, "", "info"], [159, 3, 1, "", "integral"], [159, 3, 1, "", "integrate_log_log"], [159, 3, 1, "", "interp_missing_data"], [159, 3, 1, "", "is_allclose"], [159, 2, 1, "", "is_pointlike"], [159, 3, 1, "", "normalize"], [159, 3, 1, "", "pad"], [159, 3, 1, "", "peek"], [159, 3, 1, "", "plot_containment_radius"], [159, 3, 1, "", "plot_containment_radius_vs_energy"], [159, 3, 1, "", "plot_psf_vs_rad"], [159, 2, 1, "", "quantity"], [159, 3, 1, "", "read"], [159, 2, 1, "", "required_axes"], [159, 3, 1, "", "slice_by_idx"], [159, 2, 1, "", "tag"], [159, 3, 1, "", "to_hdulist"], [159, 3, 1, "", "to_table"], [159, 3, 1, "", "to_table_hdu"], [159, 3, 1, "", "to_unit"], [159, 2, 1, "", "unit"], [159, 3, 1, "", "write"]], "gammapy.irf.PSFKernel": [[160, 2, 1, "", "data"], [160, 3, 1, "", "from_gauss"], [160, 3, 1, "", "from_spatial_model"], [160, 3, 1, "", "normalize"], [160, 3, 1, "", "peek"], [160, 3, 1, "", "plot_kernel"], [160, 2, 1, "", "psf_kernel_map"], [160, 3, 1, "", "read"], [160, 3, 1, "", "slice_by_idx"], [160, 3, 1, "", "to_image"], [160, 3, 1, "", "write"]], "gammapy.irf.PSFKing": [[161, 2, 1, "", "axes"], [161, 3, 1, "", "containment"], [161, 3, 1, "", "containment_radius"], [161, 3, 1, "", "cumsum"], [161, 2, 1, "", "data"], [161, 2, 1, "", "default_interp_kwargs"], [161, 3, 1, "", "evaluate"], [161, 3, 1, "", "evaluate_containment"], [161, 3, 1, "", "evaluate_direct"], [161, 3, 1, "", "evaluate_parameters"], [161, 2, 1, "", "fov_alignment"], [161, 3, 1, "", "from_hdulist"], [161, 3, 1, "", "from_table"], [161, 2, 1, "", "has_offset_axis"], [161, 3, 1, "", "info"], [161, 3, 1, "", "integral"], [161, 3, 1, "", "integrate_log_log"], [161, 3, 1, "", "interp_missing_data"], [161, 3, 1, "", "is_allclose"], [161, 2, 1, "", "is_pointlike"], [161, 3, 1, "", "normalize"], [161, 3, 1, "", "pad"], [161, 3, 1, "", "peek"], [161, 3, 1, "", "plot_containment_radius"], [161, 3, 1, "", "plot_containment_radius_vs_energy"], [161, 3, 1, "", "plot_psf_vs_rad"], [161, 2, 1, "", "quantity"], [161, 3, 1, "", "read"], [161, 2, 1, "", "required_axes"], [161, 2, 1, "", "required_parameters"], [161, 3, 1, "", "slice_by_idx"], [161, 2, 1, "", "tag"], [161, 3, 1, "", "to_hdulist"], [161, 3, 1, "", "to_psf3d"], [161, 3, 1, "", "to_table"], [161, 3, 1, "", "to_table_hdu"], [161, 3, 1, "", "to_unit"], [161, 2, 1, "", "unit"], [161, 3, 1, "", "write"]], "gammapy.irf.PSFMap": [[162, 3, 1, "", "containment"], [162, 3, 1, "", "containment_radius"], [162, 3, 1, "", "containment_radius_map"], [162, 3, 1, "", "copy"], [162, 3, 1, "", "cutout"], [162, 3, 1, "", "downsample"], [162, 2, 1, "", "energy_name"], [162, 3, 1, "", "from_gauss"], [162, 3, 1, "", "from_geom"], [162, 3, 1, "", "from_hdulist"], [162, 3, 1, "", "get_psf_kernel"], [162, 2, 1, "", "has_single_spatial_bin"], [162, 2, 1, "", "mask_safe_image"], [162, 3, 1, "", "normalize"], [162, 3, 1, "", "peek"], [162, 3, 1, "", "plot_containment_radius_vs_energy"], [162, 3, 1, "", "plot_psf_vs_rad"], [162, 2, 1, "", "psf_map"], [162, 3, 1, "", "read"], [162, 2, 1, "", "required_axes"], [162, 3, 1, "", "sample_coord"], [162, 3, 1, "", "slice_by_idx"], [162, 3, 1, "", "stack"], [162, 2, 1, "", "tag"], [162, 3, 1, "", "to_hdulist"], [162, 3, 1, "", "to_image"], [162, 3, 1, "", "to_region_nd_map"], [162, 3, 1, "", "write"]], "gammapy.irf.ParametricPSF": [[163, 2, 1, "", "axes"], [163, 3, 1, "", "containment"], [163, 3, 1, "", "containment_radius"], [163, 3, 1, "", "cumsum"], [163, 2, 1, "", "data"], [163, 2, 1, "", "default_interp_kwargs"], [163, 3, 1, "", "evaluate"], [163, 3, 1, "", "evaluate_containment"], [163, 3, 1, "", "evaluate_direct"], [163, 3, 1, "", "evaluate_parameters"], [163, 2, 1, "", "fov_alignment"], [163, 3, 1, "", "from_hdulist"], [163, 3, 1, "", "from_table"], [163, 2, 1, "", "has_offset_axis"], [163, 3, 1, "", "info"], [163, 3, 1, "", "integral"], [163, 3, 1, "", "integrate_log_log"], [163, 3, 1, "", "interp_missing_data"], [163, 3, 1, "", "is_allclose"], [163, 2, 1, "", "is_pointlike"], [163, 3, 1, "", "normalize"], [163, 3, 1, "", "pad"], [163, 3, 1, "", "peek"], [163, 3, 1, "", "plot_containment_radius"], [163, 3, 1, "", "plot_containment_radius_vs_energy"], [163, 3, 1, "", "plot_psf_vs_rad"], [163, 2, 1, "", "quantity"], [163, 3, 1, "", "read"], [163, 2, 1, "", "required_axes"], [163, 2, 1, "", "required_parameters"], [163, 3, 1, "", "slice_by_idx"], [163, 2, 1, "", "tag"], [163, 3, 1, "", "to_hdulist"], [163, 3, 1, "", "to_psf3d"], [163, 3, 1, "", "to_table"], [163, 3, 1, "", "to_table_hdu"], [163, 3, 1, "", "to_unit"], [163, 2, 1, "", "unit"], [163, 3, 1, "", "write"]], "gammapy.irf.RadMax2D": [[164, 2, 1, "", "axes"], [164, 3, 1, "", "cumsum"], [164, 2, 1, "", "data"], [164, 2, 1, "", "default_interp_kwargs"], [164, 2, 1, "", "default_unit"], [164, 3, 1, "", "evaluate"], [164, 2, 1, "", "fov_alignment"], [164, 3, 1, "", "from_hdulist"], [164, 3, 1, "", "from_irf"], [164, 3, 1, "", "from_table"], [164, 2, 1, "", "has_offset_axis"], [164, 3, 1, "", "integral"], [164, 3, 1, "", "integrate_log_log"], [164, 3, 1, "", "interp_missing_data"], [164, 3, 1, "", "is_allclose"], [164, 2, 1, "", "is_fixed_rad_max"], [164, 2, 1, "", "is_pointlike"], [164, 3, 1, "", "normalize"], [164, 3, 1, "", "pad"], [164, 3, 1, "", "plot_rad_max_vs_energy"], [164, 2, 1, "", "quantity"], [164, 3, 1, "", "read"], [164, 2, 1, "", "required_axes"], [164, 3, 1, "", "slice_by_idx"], [164, 2, 1, "", "tag"], [164, 3, 1, "", "to_hdulist"], [164, 3, 1, "", "to_table"], [164, 3, 1, "", "to_table_hdu"], [164, 3, 1, "", "to_unit"], [164, 2, 1, "", "unit"], [164, 3, 1, "", "write"]], "gammapy.irf.RecoPSFMap": [[165, 3, 1, "", "containment"], [165, 3, 1, "", "containment_radius"], [165, 3, 1, "", "containment_radius_map"], [165, 3, 1, "", "copy"], [165, 3, 1, "", "cutout"], [165, 3, 1, "", "downsample"], [165, 2, 1, "", "energy_name"], [165, 3, 1, "", "from_gauss"], [165, 3, 1, "", "from_geom"], [165, 3, 1, "", "from_hdulist"], [165, 3, 1, "", "get_psf_kernel"], [165, 2, 1, "", "has_single_spatial_bin"], [165, 2, 1, "", "mask_safe_image"], [165, 3, 1, "", "normalize"], [165, 3, 1, "", "peek"], [165, 3, 1, "", "plot_containment_radius_vs_energy"], [165, 3, 1, "", "plot_psf_vs_rad"], [165, 2, 1, "", "psf_map"], [165, 3, 1, "", "read"], [165, 2, 1, "", "required_axes"], [165, 3, 1, "", "sample_coord"], [165, 3, 1, "", "slice_by_idx"], [165, 3, 1, "", "stack"], [165, 2, 1, "", "tag"], [165, 3, 1, "", "to_hdulist"], [165, 3, 1, "", "to_image"], [165, 3, 1, "", "to_region_nd_map"], [165, 3, 1, "", "write"]], "gammapy.makers": [[167, 1, 1, "", "AdaptiveRingBackgroundMaker"], [168, 1, 1, "", "DatasetsMaker"], [169, 1, 1, "", "FoVBackgroundMaker"], [170, 5, 1, "", "MAKER_REGISTRY"], [171, 1, 1, "", "Maker"], [172, 1, 1, "", "MapDatasetMaker"], [173, 1, 1, "", "PhaseBackgroundMaker"], [174, 1, 1, "", "ReflectedRegionsBackgroundMaker"], [175, 1, 1, "", "ReflectedRegionsFinder"], [176, 1, 1, "", "RegionsFinder"], [177, 1, 1, "", "RingBackgroundMaker"], [178, 1, 1, "", "SafeMaskMaker"], [179, 1, 1, "", "SpectrumDatasetMaker"], [180, 1, 1, "", "WobbleRegionsFinder"], [8, 0, 0, "-", "utils"]], "gammapy.makers.AdaptiveRingBackgroundMaker": [[167, 3, 1, "", "kernels"], [167, 3, 1, "", "make_cubes"], [167, 3, 1, "", "run"], [167, 2, 1, "", "tag"]], "gammapy.makers.DatasetsMaker": [[168, 3, 1, "", "callback"], [168, 3, 1, "", "error_callback"], [168, 3, 1, "", "make_dataset"], [168, 2, 1, "", "n_jobs"], [168, 2, 1, "", "offset_max"], [168, 2, 1, "", "parallel_backend"], [168, 3, 1, "", "run"], [168, 2, 1, "", "safe_mask_maker"], [168, 2, 1, "", "tag"]], "gammapy.makers.FoVBackgroundMaker": [[169, 2, 1, "", "available_methods"], [169, 3, 1, "", "make_background_fit"], [169, 3, 1, "", "make_background_scale"], [169, 3, 1, "", "make_default_fov_background_model"], [169, 3, 1, "", "make_exclusion_mask"], [169, 2, 1, "", "method"], [169, 3, 1, "", "run"], [169, 2, 1, "", "tag"]], "gammapy.makers.Maker": [[171, 3, 1, "", "run"], [171, 2, 1, "", "tag"]], "gammapy.makers.MapDatasetMaker": [[172, 2, 1, "", "available_selection"], [172, 3, 1, "", "make_background"], [172, 3, 1, "", "make_counts"], [172, 3, 1, "", "make_edisp"], [172, 3, 1, "", "make_edisp_kernel"], [172, 3, 1, "", "make_exposure"], [172, 3, 1, "", "make_exposure_irf"], [172, 3, 1, "", "make_meta_table"], [172, 3, 1, "", "make_psf"], [172, 3, 1, "", "run"], [172, 2, 1, "", "tag"]], "gammapy.makers.PhaseBackgroundMaker": [[173, 3, 1, "", "make_counts"], [173, 3, 1, "", "make_counts_off"], [173, 3, 1, "", "run"], [173, 2, 1, "", "tag"]], "gammapy.makers.ReflectedRegionsBackgroundMaker": [[174, 3, 1, "", "make_counts_off"], [174, 3, 1, "", "run"], [174, 2, 1, "", "tag"]], "gammapy.makers.ReflectedRegionsFinder": [[175, 3, 1, "", "run"]], "gammapy.makers.RegionsFinder": [[176, 3, 1, "", "run"]], "gammapy.makers.RingBackgroundMaker": [[177, 3, 1, "", "kernel"], [177, 3, 1, "", "make_maps_off"], [177, 3, 1, "", "run"], [177, 2, 1, "", "tag"]], "gammapy.makers.SafeMaskMaker": [[178, 2, 1, "", "available_methods"], [178, 3, 1, "", "make_mask_bkg_invalid"], [178, 3, 1, "", "make_mask_energy_aeff_default"], [178, 3, 1, "", "make_mask_energy_aeff_max"], [178, 3, 1, "", "make_mask_energy_bkg_peak"], [178, 3, 1, "", "make_mask_energy_edisp_bias"], [178, 3, 1, "", "make_mask_offset_max"], [178, 3, 1, "", "run"], [178, 2, 1, "", "tag"]], "gammapy.makers.SpectrumDatasetMaker": [[179, 2, 1, "", "available_selection"], [179, 3, 1, "", "make_background"], [179, 3, 1, "", "make_counts"], [179, 3, 1, "", "make_edisp"], [179, 3, 1, "", "make_edisp_kernel"], [179, 3, 1, "", "make_exposure"], [179, 3, 1, "", "make_exposure_irf"], [179, 3, 1, "", "make_meta_table"], [179, 3, 1, "", "make_psf"], [179, 3, 1, "", "run"], [179, 2, 1, "", "tag"]], "gammapy.makers.WobbleRegionsFinder": [[180, 3, 1, "", "run"]], "gammapy.makers.utils": [[181, 4, 1, "", "make_counts_rad_max"], [182, 4, 1, "", "make_edisp_kernel_map"], [183, 4, 1, "", "make_edisp_map"], [184, 4, 1, "", "make_effective_livetime_map"], [185, 4, 1, "", "make_map_background_irf"], [186, 4, 1, "", "make_map_exposure_true_energy"], [187, 4, 1, "", "make_observation_time_map"], [188, 4, 1, "", "make_psf_map"], [189, 4, 1, "", "make_theta_squared_table"]], "gammapy.maps": [[190, 1, 1, "", "Geom"], [191, 1, 1, "", "HpxGeom"], [192, 1, 1, "", "HpxMap"], [193, 1, 1, "", "HpxNDMap"], [194, 1, 1, "", "LabelMapAxis"], [195, 1, 1, "", "Map"], [196, 1, 1, "", "MapAxes"], [197, 1, 1, "", "MapAxis"], [198, 1, 1, "", "MapCoord"], [199, 1, 1, "", "Maps"], [200, 1, 1, "", "RegionGeom"], [201, 1, 1, "", "RegionNDMap"], [202, 1, 1, "", "TimeMapAxis"], [203, 1, 1, "", "WcsGeom"], [204, 1, 1, "", "WcsMap"], [205, 1, 1, "", "WcsNDMap"], [206, 4, 1, "", "containment_radius"], [207, 4, 1, "", "containment_region"]], "gammapy.maps.Geom": [[190, 2, 1, "", "as_energy_true"], [190, 2, 1, "", "center_coord"], [190, 2, 1, "", "center_pix"], [190, 2, 1, "", "center_skydir"], [190, 3, 1, "", "contains"], [190, 3, 1, "", "contains_pix"], [190, 3, 1, "", "coord_to_idx"], [190, 3, 1, "", "coord_to_pix"], [190, 3, 1, "", "copy"], [190, 3, 1, "", "crop"], [190, 3, 1, "", "data_nbytes"], [190, 2, 1, "", "data_shape"], [190, 3, 1, "", "downsample"], [190, 3, 1, "", "drop"], [190, 3, 1, "", "energy_mask"], [190, 3, 1, "", "from_hdulist"], [190, 3, 1, "", "get_coord"], [190, 3, 1, "", "get_idx"], [190, 2, 1, "", "has_energy_axis"], [190, 2, 1, "", "is_allsky"], [190, 2, 1, "", "is_flat"], [190, 2, 1, "", "is_image"], [190, 3, 1, "", "pad"], [190, 3, 1, "", "pix_to_coord"], [190, 3, 1, "", "pix_to_idx"], [190, 3, 1, "", "rename_axes"], [190, 3, 1, "", "replace_axis"], [190, 3, 1, "", "resample_axis"], [190, 3, 1, "", "slice_by_idx"], [190, 3, 1, "", "solid_angle"], [190, 3, 1, "", "squash"], [190, 3, 1, "", "to_bands_hdu"], [190, 3, 1, "", "to_cube"], [190, 3, 1, "", "to_image"], [190, 3, 1, "", "upsample"]], "gammapy.maps.HpxGeom": [[191, 2, 1, "", "as_energy_true"], [191, 2, 1, "", "axes"], [191, 2, 1, "", "axes_names"], [191, 2, 1, "", "center_coord"], [191, 2, 1, "", "center_pix"], [191, 2, 1, "", "center_skydir"], [191, 3, 1, "", "contains"], [191, 3, 1, "", "contains_pix"], [191, 3, 1, "", "coord_to_idx"], [191, 3, 1, "", "coord_to_pix"], [191, 3, 1, "", "copy"], [191, 3, 1, "", "create"], [191, 3, 1, "", "crop"], [191, 3, 1, "", "cutout"], [191, 3, 1, "", "data_nbytes"], [191, 2, 1, "", "data_shape"], [191, 2, 1, "", "data_shape_axes"], [191, 3, 1, "", "downsample"], [191, 3, 1, "", "drop"], [191, 3, 1, "", "energy_mask"], [191, 2, 1, "", "frame"], [191, 3, 1, "", "from_hdu"], [191, 3, 1, "", "from_hdulist"], [191, 3, 1, "", "from_header"], [191, 3, 1, "", "get_coord"], [191, 3, 1, "", "get_idx"], [191, 3, 1, "", "get_index_list"], [191, 3, 1, "", "global_to_local"], [191, 2, 1, "", "has_energy_axis"], [191, 3, 1, "", "interp_weights"], [191, 2, 1, "", "ipix"], [191, 3, 1, "", "is_aligned"], [191, 3, 1, "", "is_allclose"], [191, 2, 1, "", "is_allsky"], [191, 2, 1, "", "is_flat"], [191, 2, 1, "", "is_hpx"], [191, 2, 1, "", "is_image"], [191, 2, 1, "", "is_region"], [191, 2, 1, "", "is_regular"], [191, 3, 1, "", "local_to_global"], [191, 2, 1, "", "ndim"], [191, 2, 1, "", "nest"], [191, 2, 1, "", "npix"], [191, 2, 1, "", "npix_max"], [191, 2, 1, "", "nside"], [191, 2, 1, "", "order"], [191, 2, 1, "", "ordering"], [191, 3, 1, "", "pad"], [191, 3, 1, "", "pix_to_coord"], [191, 3, 1, "", "pix_to_idx"], [191, 2, 1, "", "pixel_scales"], [191, 2, 1, "", "projection"], [191, 2, 1, "", "region"], [191, 3, 1, "", "region_mask"], [191, 3, 1, "", "rename_axes"], [191, 3, 1, "", "replace_axis"], [191, 3, 1, "", "resample_axis"], [191, 3, 1, "", "separation"], [191, 2, 1, "", "shape_axes"], [191, 3, 1, "", "slice_by_idx"], [191, 3, 1, "", "solid_angle"], [191, 3, 1, "", "squash"], [191, 3, 1, "", "to_bands_hdu"], [191, 3, 1, "", "to_binsz"], [191, 3, 1, "", "to_cube"], [191, 3, 1, "", "to_header"], [191, 3, 1, "", "to_image"], [191, 3, 1, "", "to_nside"], [191, 3, 1, "", "to_swapped"], [191, 3, 1, "", "to_wcs_geom"], [191, 3, 1, "", "to_wcs_tiles"], [191, 3, 1, "", "upsample"], [191, 2, 1, "", "width"]], "gammapy.maps.HpxMap": [[192, 3, 1, "", "coadd"], [192, 3, 1, "", "copy"], [192, 3, 1, "", "create"], [192, 3, 1, "", "crop"], [192, 3, 1, "", "cumsum"], [192, 2, 1, "", "data"], [192, 3, 1, "", "dot"], [192, 3, 1, "", "downsample"], [192, 3, 1, "", "fill_by_coord"], [192, 3, 1, "", "fill_by_idx"], [192, 3, 1, "", "fill_by_pix"], [192, 3, 1, "", "fill_events"], [192, 3, 1, "", "from_geom"], [192, 3, 1, "", "from_hdulist"], [192, 3, 1, "", "from_stack"], [192, 2, 1, "", "geom"], [192, 3, 1, "", "get_by_coord"], [192, 3, 1, "", "get_by_idx"], [192, 3, 1, "", "get_by_pix"], [192, 3, 1, "", "get_image_by_coord"], [192, 3, 1, "", "get_image_by_idx"], [192, 3, 1, "", "get_image_by_pix"], [192, 3, 1, "", "get_spectrum"], [192, 3, 1, "", "integral"], [192, 3, 1, "", "interp_by_coord"], [192, 3, 1, "", "interp_by_pix"], [192, 3, 1, "", "interp_to_geom"], [192, 3, 1, "", "is_allclose"], [192, 2, 1, "", "is_mask"], [192, 3, 1, "", "iter_by_axis"], [192, 3, 1, "", "iter_by_image"], [192, 3, 1, "", "iter_by_image_data"], [192, 3, 1, "", "iter_by_image_index"], [192, 3, 1, "", "mask_nearest_position"], [192, 2, 1, "", "meta"], [192, 3, 1, "", "normalize"], [192, 3, 1, "", "pad"], [192, 3, 1, "", "plot_grid"], [192, 3, 1, "", "plot_interactive"], [192, 2, 1, "", "quantity"], [192, 3, 1, "", "read"], [192, 3, 1, "", "reduce"], [192, 3, 1, "", "reduce_over_axes"], [192, 3, 1, "", "rename_axes"], [192, 3, 1, "", "reorder_axes"], [192, 3, 1, "", "reproject_by_image"], [192, 3, 1, "", "reproject_to_geom"], [192, 3, 1, "", "resample"], [192, 3, 1, "", "resample_axis"], [192, 3, 1, "", "sample_coord"], [192, 3, 1, "", "set_by_coord"], [192, 3, 1, "", "set_by_idx"], [192, 3, 1, "", "set_by_pix"], [192, 3, 1, "", "slice_by_idx"], [192, 3, 1, "", "split_by_axis"], [192, 3, 1, "", "sum_over_axes"], [192, 2, 1, "", "tag"], [192, 3, 1, "", "to_cube"], [192, 3, 1, "", "to_hdu"], [192, 3, 1, "", "to_hdulist"], [192, 3, 1, "", "to_swapped"], [192, 3, 1, "", "to_unit"], [192, 3, 1, "", "to_wcs"], [192, 2, 1, "", "unit"], [192, 3, 1, "", "upsample"], [192, 3, 1, "", "write"]], "gammapy.maps.HpxNDMap": [[193, 3, 1, "", "coadd"], [193, 3, 1, "", "convolve"], [193, 3, 1, "", "convolve_full"], [193, 3, 1, "", "convolve_wcs"], [193, 3, 1, "", "copy"], [193, 3, 1, "", "create"], [193, 3, 1, "", "crop"], [193, 3, 1, "", "cumsum"], [193, 3, 1, "", "cutout"], [193, 2, 1, "", "data"], [193, 3, 1, "", "dot"], [193, 3, 1, "", "downsample"], [193, 3, 1, "", "fill_by_coord"], [193, 3, 1, "", "fill_by_idx"], [193, 3, 1, "", "fill_by_pix"], [193, 3, 1, "", "fill_events"], [193, 3, 1, "", "from_geom"], [193, 3, 1, "", "from_hdu"], [193, 3, 1, "", "from_hdulist"], [193, 3, 1, "", "from_stack"], [193, 3, 1, "", "from_wcs_tiles"], [193, 2, 1, "", "geom"], [193, 3, 1, "", "get_by_coord"], [193, 3, 1, "", "get_by_idx"], [193, 3, 1, "", "get_by_pix"], [193, 3, 1, "", "get_image_by_coord"], [193, 3, 1, "", "get_image_by_idx"], [193, 3, 1, "", "get_image_by_pix"], [193, 3, 1, "", "get_spectrum"], [193, 3, 1, "", "integral"], [193, 3, 1, "", "interp_by_coord"], [193, 3, 1, "", "interp_by_pix"], [193, 3, 1, "", "interp_to_geom"], [193, 3, 1, "", "is_allclose"], [193, 2, 1, "", "is_mask"], [193, 3, 1, "", "iter_by_axis"], [193, 3, 1, "", "iter_by_image"], [193, 3, 1, "", "iter_by_image_data"], [193, 3, 1, "", "iter_by_image_index"], [193, 3, 1, "", "mask_nearest_position"], [193, 2, 1, "", "meta"], [193, 3, 1, "", "normalize"], [193, 3, 1, "", "pad"], [193, 3, 1, "", "plot"], [193, 3, 1, "", "plot_grid"], [193, 3, 1, "", "plot_interactive"], [193, 3, 1, "", "plot_mask"], [193, 2, 1, "", "quantity"], [193, 3, 1, "", "read"], [193, 3, 1, "", "reduce"], [193, 3, 1, "", "reduce_over_axes"], [193, 3, 1, "", "rename_axes"], [193, 3, 1, "", "reorder_axes"], [193, 3, 1, "", "reproject_by_image"], [193, 3, 1, "", "reproject_to_geom"], [193, 3, 1, "", "resample"], [193, 3, 1, "", "resample_axis"], [193, 3, 1, "", "sample_coord"], [193, 3, 1, "", "set_by_coord"], [193, 3, 1, "", "set_by_idx"], [193, 3, 1, "", "set_by_pix"], [193, 3, 1, "", "slice_by_idx"], [193, 3, 1, "", "smooth"], [193, 3, 1, "", "split_by_axis"], [193, 3, 1, "", "stack"], [193, 3, 1, "", "sum_over_axes"], [193, 2, 1, "", "tag"], [193, 3, 1, "", "to_cube"], [193, 3, 1, "", "to_hdu"], [193, 3, 1, "", "to_hdulist"], [193, 3, 1, "", "to_nside"], [193, 3, 1, "", "to_region_nd_map"], [193, 3, 1, "", "to_swapped"], [193, 3, 1, "", "to_unit"], [193, 3, 1, "", "to_wcs"], [193, 3, 1, "", "to_wcs_tiles"], [193, 2, 1, "", "unit"], [193, 3, 1, "", "upsample"], [193, 3, 1, "", "write"]], "gammapy.maps.LabelMapAxis": [[194, 2, 1, "", "as_plot_center"], [194, 2, 1, "", "as_plot_edges"], [194, 2, 1, "", "as_plot_labels"], [194, 2, 1, "", "as_plot_xerr"], [194, 3, 1, "", "assert_name"], [194, 2, 1, "", "bin_width"], [194, 2, 1, "", "center"], [194, 3, 1, "", "concatenate"], [194, 3, 1, "", "coord_to_idx"], [194, 3, 1, "", "coord_to_pix"], [194, 3, 1, "", "copy"], [194, 3, 1, "", "downsample"], [194, 2, 1, "", "edges"], [194, 2, 1, "", "edges_max"], [194, 2, 1, "", "edges_min"], [194, 3, 1, "", "format_plot_xaxis"], [194, 3, 1, "", "from_stack"], [194, 3, 1, "", "from_table"], [194, 3, 1, "", "is_allclose"], [194, 2, 1, "", "name"], [194, 2, 1, "", "nbin"], [194, 2, 1, "", "node_type"], [194, 3, 1, "", "pad"], [194, 3, 1, "", "pix_to_coord"], [194, 3, 1, "", "pix_to_idx"], [194, 3, 1, "", "resample"], [194, 3, 1, "", "slice"], [194, 3, 1, "", "squash"], [194, 3, 1, "", "to_header"], [194, 2, 1, "", "unit"], [194, 3, 1, "", "upsample"]], "gammapy.maps.Map": [[195, 3, 1, "", "coadd"], [195, 3, 1, "", "copy"], [195, 3, 1, "", "create"], [195, 3, 1, "", "crop"], [195, 3, 1, "", "cumsum"], [195, 2, 1, "", "data"], [195, 3, 1, "", "dot"], [195, 3, 1, "", "downsample"], [195, 3, 1, "", "fill_by_coord"], [195, 3, 1, "", "fill_by_idx"], [195, 3, 1, "", "fill_by_pix"], [195, 3, 1, "", "fill_events"], [195, 3, 1, "", "from_geom"], [195, 3, 1, "", "from_hdulist"], [195, 3, 1, "", "from_stack"], [195, 2, 1, "", "geom"], [195, 3, 1, "", "get_by_coord"], [195, 3, 1, "", "get_by_idx"], [195, 3, 1, "", "get_by_pix"], [195, 3, 1, "", "get_image_by_coord"], [195, 3, 1, "", "get_image_by_idx"], [195, 3, 1, "", "get_image_by_pix"], [195, 3, 1, "", "get_spectrum"], [195, 3, 1, "", "integral"], [195, 3, 1, "", "interp_by_coord"], [195, 3, 1, "", "interp_by_pix"], [195, 3, 1, "", "interp_to_geom"], [195, 3, 1, "", "is_allclose"], [195, 2, 1, "", "is_mask"], [195, 3, 1, "", "iter_by_axis"], [195, 3, 1, "", "iter_by_image"], [195, 3, 1, "", "iter_by_image_data"], [195, 3, 1, "", "iter_by_image_index"], [195, 3, 1, "", "mask_nearest_position"], [195, 2, 1, "", "meta"], [195, 3, 1, "", "normalize"], [195, 3, 1, "", "pad"], [195, 3, 1, "", "plot_grid"], [195, 3, 1, "", "plot_interactive"], [195, 2, 1, "", "quantity"], [195, 3, 1, "", "read"], [195, 3, 1, "", "reduce"], [195, 3, 1, "", "reduce_over_axes"], [195, 3, 1, "", "rename_axes"], [195, 3, 1, "", "reorder_axes"], [195, 3, 1, "", "reproject_by_image"], [195, 3, 1, "", "reproject_to_geom"], [195, 3, 1, "", "resample"], [195, 3, 1, "", "resample_axis"], [195, 3, 1, "", "sample_coord"], [195, 3, 1, "", "set_by_coord"], [195, 3, 1, "", "set_by_idx"], [195, 3, 1, "", "set_by_pix"], [195, 3, 1, "", "slice_by_idx"], [195, 3, 1, "", "split_by_axis"], [195, 3, 1, "", "sum_over_axes"], [195, 2, 1, "", "tag"], [195, 3, 1, "", "to_cube"], [195, 3, 1, "", "to_unit"], [195, 2, 1, "", "unit"], [195, 3, 1, "", "upsample"], [195, 3, 1, "", "write"]], "gammapy.maps.MapAxes": [[196, 3, 1, "", "assert_names"], [196, 3, 1, "", "bin_volume"], [196, 2, 1, "", "center_coord"], [196, 3, 1, "", "coord_to_idx"], [196, 3, 1, "", "coord_to_pix"], [196, 3, 1, "", "copy"], [196, 3, 1, "", "count"], [196, 3, 1, "", "downsample"], [196, 3, 1, "", "drop"], [196, 3, 1, "", "from_default"], [196, 3, 1, "", "from_table"], [196, 3, 1, "", "from_table_hdu"], [196, 3, 1, "", "get_coord"], [196, 3, 1, "", "index"], [196, 3, 1, "", "index_data"], [196, 3, 1, "", "is_allclose"], [196, 2, 1, "", "is_flat"], [196, 2, 1, "", "is_unidimensional"], [196, 2, 1, "", "iter_with_reshape"], [196, 2, 1, "", "names"], [196, 3, 1, "", "pad"], [196, 3, 1, "", "pix_to_coord"], [196, 3, 1, "", "pix_to_idx"], [196, 2, 1, "", "primary_axis"], [196, 3, 1, "", "rename_axes"], [196, 3, 1, "", "replace"], [196, 3, 1, "", "resample"], [196, 2, 1, "", "reverse"], [196, 2, 1, "", "shape"], [196, 3, 1, "", "slice_by_idx"], [196, 3, 1, "", "squash"], [196, 3, 1, "", "to_header"], [196, 3, 1, "", "to_table"], [196, 3, 1, "", "to_table_hdu"], [196, 3, 1, "", "upsample"]], "gammapy.maps.MapAxis": [[197, 2, 1, "", "as_plot_center"], [197, 2, 1, "", "as_plot_edges"], [197, 2, 1, "", "as_plot_labels"], [197, 2, 1, "", "as_plot_scale"], [197, 2, 1, "", "as_plot_xerr"], [197, 3, 1, "", "assert_name"], [197, 2, 1, "", "bin_width"], [197, 2, 1, "", "bounds"], [197, 2, 1, "", "center"], [197, 3, 1, "", "concatenate"], [197, 3, 1, "", "coord_to_idx"], [197, 3, 1, "", "coord_to_pix"], [197, 3, 1, "", "copy"], [197, 3, 1, "", "downsample"], [197, 2, 1, "", "edges"], [197, 2, 1, "", "edges_max"], [197, 2, 1, "", "edges_min"], [197, 3, 1, "", "format_plot_xaxis"], [197, 3, 1, "", "format_plot_yaxis"], [197, 3, 1, "", "from_bounds"], [197, 3, 1, "", "from_edges"], [197, 3, 1, "", "from_energy_bounds"], [197, 3, 1, "", "from_energy_edges"], [197, 3, 1, "", "from_nodes"], [197, 3, 1, "", "from_stack"], [197, 3, 1, "", "from_table"], [197, 3, 1, "", "from_table_hdu"], [197, 3, 1, "", "group_table"], [197, 2, 1, "", "interp"], [197, 3, 1, "", "is_aligned"], [197, 3, 1, "", "is_allclose"], [197, 2, 1, "", "is_energy_axis"], [197, 2, 1, "", "iter_by_edges"], [197, 2, 1, "", "name"], [197, 2, 1, "", "nbin"], [197, 2, 1, "", "nbin_per_decade"], [197, 2, 1, "", "node_type"], [197, 3, 1, "", "pad"], [197, 3, 1, "", "pix_to_coord"], [197, 3, 1, "", "pix_to_idx"], [197, 3, 1, "", "rename"], [197, 3, 1, "", "round"], [197, 3, 1, "", "slice"], [197, 3, 1, "", "squash"], [197, 3, 1, "", "to_header"], [197, 3, 1, "", "to_node_type"], [197, 3, 1, "", "to_table"], [197, 3, 1, "", "to_table_hdu"], [197, 2, 1, "", "unit"], [197, 3, 1, "", "upsample"], [197, 2, 1, "", "use_center_as_plot_labels"], [197, 3, 1, "", "wrap_coord"]], "gammapy.maps.MapCoord": [[198, 3, 1, "", "apply_mask"], [198, 2, 1, "", "axis_names"], [198, 2, 1, "", "broadcasted"], [198, 3, 1, "", "copy"], [198, 3, 1, "", "create"], [198, 2, 1, "", "flat"], [198, 2, 1, "", "frame"], [198, 2, 1, "", "lat"], [198, 2, 1, "", "lon"], [198, 2, 1, "", "match_by_name"], [198, 2, 1, "", "ndim"], [198, 2, 1, "", "phi"], [198, 2, 1, "", "shape"], [198, 2, 1, "", "size"], [198, 2, 1, "", "skycoord"], [198, 2, 1, "", "theta"], [198, 3, 1, "", "to_frame"]], "gammapy.maps.Maps": [[199, 3, 1, "", "clear"], [199, 3, 1, "", "from_geom"], [199, 3, 1, "", "from_hdulist"], [199, 2, 1, "", "geom"], [199, 3, 1, "", "get"], [199, 3, 1, "", "items"], [199, 3, 1, "", "keys"], [199, 3, 1, "", "pop"], [199, 3, 1, "", "popitem"], [199, 3, 1, "", "read"], [199, 3, 1, "", "setdefault"], [199, 3, 1, "", "to_hdulist"], [199, 3, 1, "", "update"], [199, 3, 1, "", "values"], [199, 3, 1, "", "write"]], "gammapy.maps.RegionGeom": [[200, 2, 1, "", "as_energy_true"], [200, 2, 1, "", "axes"], [200, 2, 1, "", "axes_names"], [200, 3, 1, "", "bin_volume"], [200, 2, 1, "", "binsz_wcs"], [200, 2, 1, "", "center_coord"], [200, 2, 1, "", "center_pix"], [200, 2, 1, "", "center_skydir"], [200, 3, 1, "", "contains"], [200, 3, 1, "", "contains_pix"], [200, 3, 1, "", "contains_wcs_pix"], [200, 3, 1, "", "coord_to_idx"], [200, 3, 1, "", "coord_to_pix"], [200, 3, 1, "", "copy"], [200, 3, 1, "", "create"], [200, 3, 1, "", "crop"], [200, 3, 1, "", "data_nbytes"], [200, 2, 1, "", "data_shape"], [200, 2, 1, "", "data_shape_axes"], [200, 3, 1, "", "downsample"], [200, 3, 1, "", "drop"], [200, 3, 1, "", "energy_mask"], [200, 2, 1, "", "frame"], [200, 3, 1, "", "from_hdulist"], [200, 3, 1, "", "from_regions"], [200, 3, 1, "", "get_coord"], [200, 3, 1, "", "get_idx"], [200, 3, 1, "", "get_wcs_coord_and_weights"], [200, 2, 1, "", "has_energy_axis"], [200, 2, 1, "", "is_all_point_sky_regions"], [200, 3, 1, "", "is_allclose"], [200, 2, 1, "", "is_allsky"], [200, 2, 1, "", "is_flat"], [200, 2, 1, "", "is_hpx"], [200, 2, 1, "", "is_image"], [200, 2, 1, "", "is_region"], [200, 2, 1, "", "is_regular"], [200, 2, 1, "", "npix"], [200, 3, 1, "", "pad"], [200, 3, 1, "", "pix_to_coord"], [200, 3, 1, "", "pix_to_idx"], [200, 3, 1, "", "plot_region"], [200, 2, 1, "", "projection"], [200, 2, 1, "", "region"], [200, 3, 1, "", "rename_axes"], [200, 3, 1, "", "replace_axis"], [200, 3, 1, "", "resample_axis"], [200, 3, 1, "", "separation"], [200, 3, 1, "", "slice_by_idx"], [200, 3, 1, "", "solid_angle"], [200, 3, 1, "", "squash"], [200, 3, 1, "", "to_bands_hdu"], [200, 3, 1, "", "to_binsz"], [200, 3, 1, "", "to_binsz_wcs"], [200, 3, 1, "", "to_cube"], [200, 3, 1, "", "to_hdulist"], [200, 3, 1, "", "to_image"], [200, 3, 1, "", "to_wcs_geom"], [200, 3, 1, "", "union"], [200, 3, 1, "", "upsample"], [200, 2, 1, "", "wcs"], [200, 2, 1, "", "width"]], "gammapy.maps.RegionNDMap": [[201, 3, 1, "", "coadd"], [201, 3, 1, "", "copy"], [201, 3, 1, "", "create"], [201, 3, 1, "", "crop"], [201, 3, 1, "", "cumsum"], [201, 3, 1, "", "cutout"], [201, 2, 1, "", "data"], [201, 3, 1, "", "dot"], [201, 3, 1, "", "downsample"], [201, 3, 1, "", "fill_by_coord"], [201, 3, 1, "", "fill_by_idx"], [201, 3, 1, "", "fill_by_pix"], [201, 3, 1, "", "fill_events"], [201, 3, 1, "", "from_geom"], [201, 3, 1, "", "from_hdulist"], [201, 3, 1, "", "from_stack"], [201, 3, 1, "", "from_table"], [201, 2, 1, "", "geom"], [201, 3, 1, "", "get_by_coord"], [201, 3, 1, "", "get_by_idx"], [201, 3, 1, "", "get_by_pix"], [201, 3, 1, "", "get_image_by_coord"], [201, 3, 1, "", "get_image_by_idx"], [201, 3, 1, "", "get_image_by_pix"], [201, 3, 1, "", "get_spectrum"], [201, 3, 1, "", "integral"], [201, 3, 1, "", "interp_by_coord"], [201, 3, 1, "", "interp_by_pix"], [201, 3, 1, "", "interp_to_geom"], [201, 3, 1, "", "is_allclose"], [201, 2, 1, "", "is_mask"], [201, 3, 1, "", "iter_by_axis"], [201, 3, 1, "", "iter_by_axis_data"], [201, 3, 1, "", "iter_by_image"], [201, 3, 1, "", "iter_by_image_data"], [201, 3, 1, "", "iter_by_image_index"], [201, 3, 1, "", "mask_nearest_position"], [201, 2, 1, "", "meta"], [201, 3, 1, "", "normalize"], [201, 3, 1, "", "pad"], [201, 3, 1, "", "plot"], [201, 3, 1, "", "plot_grid"], [201, 3, 1, "", "plot_hist"], [201, 3, 1, "", "plot_interactive"], [201, 3, 1, "", "plot_mask"], [201, 3, 1, "", "plot_region"], [201, 2, 1, "", "quantity"], [201, 3, 1, "", "read"], [201, 3, 1, "", "reduce"], [201, 3, 1, "", "reduce_over_axes"], [201, 3, 1, "", "rename_axes"], [201, 3, 1, "", "reorder_axes"], [201, 3, 1, "", "reproject_by_image"], [201, 3, 1, "", "reproject_to_geom"], [201, 3, 1, "", "resample"], [201, 3, 1, "", "resample_axis"], [201, 3, 1, "", "sample_coord"], [201, 3, 1, "", "set_by_coord"], [201, 3, 1, "", "set_by_idx"], [201, 3, 1, "", "set_by_pix"], [201, 3, 1, "", "slice_by_idx"], [201, 3, 1, "", "split_by_axis"], [201, 3, 1, "", "stack"], [201, 3, 1, "", "sum_over_axes"], [201, 2, 1, "", "tag"], [201, 3, 1, "", "to_cube"], [201, 3, 1, "", "to_hdulist"], [201, 3, 1, "", "to_region_nd_map"], [201, 3, 1, "", "to_table"], [201, 3, 1, "", "to_unit"], [201, 2, 1, "", "unit"], [201, 3, 1, "", "upsample"], [201, 3, 1, "", "write"]], "gammapy.maps.TimeMapAxis": [[202, 2, 1, "", "as_plot_center"], [202, 2, 1, "", "as_plot_edges"], [202, 2, 1, "", "as_plot_labels"], [202, 2, 1, "", "as_plot_xerr"], [202, 3, 1, "", "assert_name"], [202, 2, 1, "", "bin_width"], [202, 2, 1, "", "bounds"], [202, 2, 1, "", "center"], [202, 3, 1, "", "coord_to_idx"], [202, 3, 1, "", "coord_to_pix"], [202, 3, 1, "", "copy"], [202, 3, 1, "", "downsample"], [202, 2, 1, "", "edges"], [202, 2, 1, "", "edges_max"], [202, 2, 1, "", "edges_min"], [202, 3, 1, "", "format_plot_xaxis"], [202, 3, 1, "", "from_gti"], [202, 3, 1, "", "from_gti_bounds"], [202, 3, 1, "", "from_table"], [202, 3, 1, "", "from_time_bounds"], [202, 3, 1, "", "from_time_edges"], [202, 3, 1, "", "group_table"], [202, 2, 1, "", "interp"], [202, 3, 1, "", "is_aligned"], [202, 3, 1, "", "is_allclose"], [202, 2, 1, "", "is_contiguous"], [202, 2, 1, "", "iter_by_edges"], [202, 2, 1, "", "name"], [202, 2, 1, "", "nbin"], [202, 2, 1, "", "node_type"], [202, 3, 1, "", "pix_to_coord"], [202, 3, 1, "", "pix_to_idx"], [202, 2, 1, "", "reference_time"], [202, 3, 1, "", "slice"], [202, 3, 1, "", "squash"], [202, 2, 1, "", "time_bounds"], [202, 2, 1, "", "time_delta"], [202, 2, 1, "", "time_edges"], [202, 2, 1, "", "time_format"], [202, 2, 1, "", "time_max"], [202, 2, 1, "", "time_mid"], [202, 2, 1, "", "time_min"], [202, 3, 1, "", "to_contiguous"], [202, 3, 1, "", "to_gti"], [202, 3, 1, "", "to_header"], [202, 3, 1, "", "to_table"], [202, 2, 1, "", "unit"], [202, 3, 1, "", "upsample"]], "gammapy.maps.WcsGeom": [[203, 2, 1, "", "as_energy_true"], [203, 2, 1, "", "axes"], [203, 2, 1, "", "axes_names"], [203, 3, 1, "", "bin_volume"], [203, 3, 1, "", "binary_structure"], [203, 3, 1, "", "boundary_mask"], [203, 2, 1, "", "center_coord"], [203, 2, 1, "", "center_pix"], [203, 2, 1, "", "center_skydir"], [203, 3, 1, "", "contains"], [203, 3, 1, "", "contains_pix"], [203, 3, 1, "", "coord_to_idx"], [203, 3, 1, "", "coord_to_pix"], [203, 3, 1, "", "copy"], [203, 3, 1, "", "create"], [203, 3, 1, "", "crop"], [203, 3, 1, "", "cutout"], [203, 3, 1, "", "cutout_slices"], [203, 3, 1, "", "data_nbytes"], [203, 2, 1, "", "data_shape"], [203, 2, 1, "", "data_shape_axes"], [203, 2, 1, "", "data_shape_image"], [203, 3, 1, "", "downsample"], [203, 3, 1, "", "drop"], [203, 3, 1, "", "energy_mask"], [203, 2, 1, "", "footprint"], [203, 2, 1, "", "footprint_rectangle_sky_region"], [203, 2, 1, "", "frame"], [203, 3, 1, "", "from_aligned"], [203, 3, 1, "", "from_hdulist"], [203, 3, 1, "", "from_header"], [203, 3, 1, "", "get_coord"], [203, 3, 1, "", "get_idx"], [203, 3, 1, "", "get_pix"], [203, 2, 1, "", "has_energy_axis"], [203, 3, 1, "", "is_aligned"], [203, 3, 1, "", "is_allclose"], [203, 2, 1, "", "is_allsky"], [203, 2, 1, "", "is_flat"], [203, 2, 1, "", "is_hpx"], [203, 2, 1, "", "is_image"], [203, 2, 1, "", "is_region"], [203, 2, 1, "", "is_regular"], [203, 2, 1, "", "ndim"], [203, 2, 1, "", "npix"], [203, 3, 1, "", "pad"], [203, 3, 1, "", "pix_to_coord"], [203, 3, 1, "", "pix_to_idx"], [203, 2, 1, "", "pixel_area"], [203, 2, 1, "", "pixel_scales"], [203, 2, 1, "", "projection"], [203, 3, 1, "", "region_mask"], [203, 3, 1, "", "region_weights"], [203, 3, 1, "", "rename_axes"], [203, 3, 1, "", "replace_axis"], [203, 3, 1, "", "resample_axis"], [203, 3, 1, "", "separation"], [203, 2, 1, "", "shape_axes"], [203, 3, 1, "", "slice_by_idx"], [203, 3, 1, "", "solid_angle"], [203, 3, 1, "", "squash"], [203, 3, 1, "", "to_bands_hdu"], [203, 3, 1, "", "to_binsz"], [203, 3, 1, "", "to_cube"], [203, 3, 1, "", "to_even_npix"], [203, 3, 1, "", "to_header"], [203, 3, 1, "", "to_image"], [203, 3, 1, "", "to_odd_npix"], [203, 3, 1, "", "upsample"], [203, 2, 1, "", "wcs"], [203, 2, 1, "", "width"]], "gammapy.maps.WcsMap": [[204, 3, 1, "", "coadd"], [204, 3, 1, "", "copy"], [204, 3, 1, "", "create"], [204, 3, 1, "", "crop"], [204, 3, 1, "", "cumsum"], [204, 2, 1, "", "data"], [204, 3, 1, "", "dot"], [204, 3, 1, "", "downsample"], [204, 3, 1, "", "fill_by_coord"], [204, 3, 1, "", "fill_by_idx"], [204, 3, 1, "", "fill_by_pix"], [204, 3, 1, "", "fill_events"], [204, 3, 1, "", "from_geom"], [204, 3, 1, "", "from_hdulist"], [204, 3, 1, "", "from_stack"], [204, 2, 1, "", "geom"], [204, 3, 1, "", "get_by_coord"], [204, 3, 1, "", "get_by_idx"], [204, 3, 1, "", "get_by_pix"], [204, 3, 1, "", "get_image_by_coord"], [204, 3, 1, "", "get_image_by_idx"], [204, 3, 1, "", "get_image_by_pix"], [204, 3, 1, "", "get_spectrum"], [204, 3, 1, "", "integral"], [204, 3, 1, "", "interp_by_coord"], [204, 3, 1, "", "interp_by_pix"], [204, 3, 1, "", "interp_to_geom"], [204, 3, 1, "", "is_allclose"], [204, 2, 1, "", "is_mask"], [204, 3, 1, "", "iter_by_axis"], [204, 3, 1, "", "iter_by_image"], [204, 3, 1, "", "iter_by_image_data"], [204, 3, 1, "", "iter_by_image_index"], [204, 3, 1, "", "mask_nearest_position"], [204, 2, 1, "", "meta"], [204, 3, 1, "", "normalize"], [204, 3, 1, "", "pad"], [204, 3, 1, "", "plot_grid"], [204, 3, 1, "", "plot_interactive"], [204, 2, 1, "", "quantity"], [204, 3, 1, "", "read"], [204, 3, 1, "", "reduce"], [204, 3, 1, "", "reduce_over_axes"], [204, 3, 1, "", "rename_axes"], [204, 3, 1, "", "reorder_axes"], [204, 3, 1, "", "reproject_by_image"], [204, 3, 1, "", "reproject_to_geom"], [204, 3, 1, "", "resample"], [204, 3, 1, "", "resample_axis"], [204, 3, 1, "", "sample_coord"], [204, 3, 1, "", "set_by_coord"], [204, 3, 1, "", "set_by_idx"], [204, 3, 1, "", "set_by_pix"], [204, 3, 1, "", "slice_by_idx"], [204, 3, 1, "", "split_by_axis"], [204, 3, 1, "", "sum_over_axes"], [204, 2, 1, "", "tag"], [204, 3, 1, "", "to_cube"], [204, 3, 1, "", "to_hdu"], [204, 3, 1, "", "to_hdulist"], [204, 3, 1, "", "to_unit"], [204, 2, 1, "", "unit"], [204, 3, 1, "", "upsample"], [204, 3, 1, "", "write"]], "gammapy.maps.WcsNDMap": [[205, 3, 1, "", "binary_dilate"], [205, 3, 1, "", "binary_erode"], [205, 3, 1, "", "coadd"], [205, 3, 1, "", "convolve"], [205, 3, 1, "", "copy"], [205, 3, 1, "", "create"], [205, 3, 1, "", "crop"], [205, 3, 1, "", "cumsum"], [205, 3, 1, "", "cutout"], [205, 3, 1, "", "cutout_and_mask_region"], [205, 2, 1, "", "data"], [205, 3, 1, "", "dot"], [205, 3, 1, "", "downsample"], [205, 3, 1, "", "fill_by_coord"], [205, 3, 1, "", "fill_by_idx"], [205, 3, 1, "", "fill_by_pix"], [205, 3, 1, "", "fill_events"], [205, 3, 1, "", "from_geom"], [205, 3, 1, "", "from_hdu"], [205, 3, 1, "", "from_hdulist"], [205, 3, 1, "", "from_stack"], [205, 2, 1, "", "geom"], [205, 3, 1, "", "get_by_coord"], [205, 3, 1, "", "get_by_idx"], [205, 3, 1, "", "get_by_pix"], [205, 3, 1, "", "get_image_by_coord"], [205, 3, 1, "", "get_image_by_idx"], [205, 3, 1, "", "get_image_by_pix"], [205, 3, 1, "", "get_spectrum"], [205, 3, 1, "", "integral"], [205, 3, 1, "", "interp_by_coord"], [205, 3, 1, "", "interp_by_pix"], [205, 3, 1, "", "interp_to_geom"], [205, 3, 1, "", "is_allclose"], [205, 2, 1, "", "is_mask"], [205, 3, 1, "", "iter_by_axis"], [205, 3, 1, "", "iter_by_image"], [205, 3, 1, "", "iter_by_image_data"], [205, 3, 1, "", "iter_by_image_index"], [205, 3, 1, "", "mask_contains_region"], [205, 3, 1, "", "mask_nearest_position"], [205, 2, 1, "", "meta"], [205, 3, 1, "", "normalize"], [205, 3, 1, "", "pad"], [205, 3, 1, "", "plot"], [205, 3, 1, "", "plot_grid"], [205, 3, 1, "", "plot_interactive"], [205, 3, 1, "", "plot_mask"], [205, 2, 1, "", "quantity"], [205, 3, 1, "", "read"], [205, 3, 1, "", "reduce"], [205, 3, 1, "", "reduce_over_axes"], [205, 3, 1, "", "rename_axes"], [205, 3, 1, "", "reorder_axes"], [205, 3, 1, "", "reproject_by_image"], [205, 3, 1, "", "reproject_to_geom"], [205, 3, 1, "", "resample"], [205, 3, 1, "", "resample_axis"], [205, 3, 1, "", "sample_coord"], [205, 3, 1, "", "set_by_coord"], [205, 3, 1, "", "set_by_idx"], [205, 3, 1, "", "set_by_pix"], [205, 3, 1, "", "slice_by_idx"], [205, 3, 1, "", "smooth"], [205, 3, 1, "", "split_by_axis"], [205, 3, 1, "", "stack"], [205, 3, 1, "", "sum_over_axes"], [205, 2, 1, "", "tag"], [205, 3, 1, "", "to_cube"], [205, 3, 1, "", "to_hdu"], [205, 3, 1, "", "to_hdulist"], [205, 3, 1, "", "to_region_nd_map"], [205, 3, 1, "", "to_region_nd_map_histogram"], [205, 3, 1, "", "to_unit"], [205, 2, 1, "", "unit"], [205, 3, 1, "", "upsample"], [205, 3, 1, "", "write"]], "gammapy.modeling": [[208, 1, 1, "", "Covariance"], [209, 1, 1, "", "CovarianceResult"], [210, 1, 1, "", "Fit"], [211, 1, 1, "", "FitResult"], [212, 1, 1, "", "OptimizeResult"], [213, 1, 1, "", "Parameter"], [214, 1, 1, "", "Parameters"], [215, 1, 1, "", "PriorParameter"], [216, 1, 1, "", "PriorParameters"], [10, 0, 0, "-", "models"], [283, 4, 1, "", "select_nested_models"], [284, 4, 1, "", "stat_profile_ul_scipy"]], "gammapy.modeling.Covariance": [[208, 2, 1, "", "correlation"], [208, 2, 1, "", "data"], [208, 3, 1, "", "from_factor_matrix"], [208, 3, 1, "", "from_stack"], [208, 3, 1, "", "get_subcovariance"], [208, 3, 1, "", "plot_correlation"], [208, 2, 1, "", "scipy_mvn"], [208, 3, 1, "", "set_subcovariance"], [208, 2, 1, "", "shape"]], "gammapy.modeling.CovarianceResult": [[209, 2, 1, "", "backend"], [209, 2, 1, "", "matrix"], [209, 2, 1, "", "message"], [209, 2, 1, "", "method"], [209, 2, 1, "", "success"], [209, 3, 1, "", "to_dict"]], "gammapy.modeling.Fit": [[210, 3, 1, "", "confidence"], [210, 3, 1, "", "covariance"], [210, 3, 1, "", "optimize"], [210, 3, 1, "", "run"], [210, 3, 1, "", "stat_contour"], [210, 3, 1, "", "stat_profile"], [210, 3, 1, "", "stat_surface"]], "gammapy.modeling.FitResult": [[211, 2, 1, "", "backend"], [211, 2, 1, "", "covariance_result"], [211, 2, 1, "", "message"], [211, 2, 1, "", "method"], [211, 2, 1, "", "minuit"], [211, 2, 1, "", "models"], [211, 2, 1, "", "nfev"], [211, 2, 1, "", "optimize_result"], [211, 2, 1, "", "parameters"], [211, 2, 1, "", "success"], [211, 2, 1, "", "total_stat"], [211, 2, 1, "", "trace"], [211, 3, 1, "", "write"]], "gammapy.modeling.OptimizeResult": [[212, 2, 1, "", "backend"], [212, 2, 1, "", "message"], [212, 2, 1, "", "method"], [212, 2, 1, "", "minuit"], [212, 2, 1, "", "models"], [212, 2, 1, "", "nfev"], [212, 2, 1, "", "parameters"], [212, 2, 1, "", "success"], [212, 3, 1, "", "to_dict"], [212, 2, 1, "", "total_stat"], [212, 2, 1, "", "trace"]], "gammapy.modeling.Parameter": [[213, 3, 1, "", "autoscale"], [213, 3, 1, "", "check_limits"], [213, 2, 1, "", "conf_max"], [213, 2, 1, "", "conf_min"], [213, 3, 1, "", "copy"], [213, 2, 1, "", "error"], [213, 2, 1, "", "factor"], [213, 2, 1, "", "factor_max"], [213, 2, 1, "", "factor_min"], [213, 2, 1, "", "frozen"], [213, 2, 1, "", "max"], [213, 2, 1, "", "min"], [213, 2, 1, "", "name"], [213, 2, 1, "", "prior"], [213, 3, 1, "", "prior_stat_sum"], [213, 2, 1, "", "quantity"], [213, 2, 1, "", "scale"], [213, 2, 1, "", "scale_method"], [213, 2, 1, "", "scan_max"], [213, 2, 1, "", "scan_min"], [213, 2, 1, "", "scan_n_sigma"], [213, 2, 1, "", "scan_values"], [213, 3, 1, "", "to_dict"], [213, 2, 1, "", "type"], [213, 2, 1, "", "unit"], [213, 3, 1, "", "update_from_dict"], [213, 2, 1, "", "value"]], "gammapy.modeling.Parameters": [[214, 3, 1, "", "autoscale"], [214, 3, 1, "", "check_limits"], [214, 3, 1, "", "copy"], [214, 3, 1, "", "count"], [214, 2, 1, "", "free_parameters"], [214, 3, 1, "", "freeze_all"], [214, 3, 1, "", "from_dict"], [214, 3, 1, "", "from_stack"], [214, 3, 1, "", "index"], [214, 2, 1, "", "max"], [214, 2, 1, "", "min"], [214, 2, 1, "", "names"], [214, 2, 1, "", "prior"], [214, 3, 1, "", "prior_stat_sum"], [214, 3, 1, "", "restore_status"], [214, 3, 1, "", "select"], [214, 3, 1, "", "set_parameter_factors"], [214, 3, 1, "", "to_dict"], [214, 3, 1, "", "to_table"], [214, 2, 1, "", "types"], [214, 3, 1, "", "unfreeze_all"], [214, 2, 1, "", "unique_parameters"], [214, 2, 1, "", "value"]], "gammapy.modeling.PriorParameter": [[215, 3, 1, "", "autoscale"], [215, 3, 1, "", "check_limits"], [215, 2, 1, "", "conf_max"], [215, 2, 1, "", "conf_min"], [215, 3, 1, "", "copy"], [215, 2, 1, "", "error"], [215, 2, 1, "", "factor"], [215, 2, 1, "", "factor_max"], [215, 2, 1, "", "factor_min"], [215, 2, 1, "", "frozen"], [215, 2, 1, "", "max"], [215, 2, 1, "", "min"], [215, 2, 1, "", "name"], [215, 2, 1, "", "prior"], [215, 3, 1, "", "prior_stat_sum"], [215, 2, 1, "", "quantity"], [215, 2, 1, "", "scale"], [215, 2, 1, "", "scale_method"], [215, 2, 1, "", "scan_max"], [215, 2, 1, "", "scan_min"], [215, 2, 1, "", "scan_n_sigma"], [215, 2, 1, "", "scan_values"], [215, 3, 1, "", "to_dict"], [215, 2, 1, "", "type"], [215, 2, 1, "", "unit"], [215, 3, 1, "", "update_from_dict"], [215, 2, 1, "", "value"]], "gammapy.modeling.PriorParameters": [[216, 3, 1, "", "autoscale"], [216, 3, 1, "", "check_limits"], [216, 3, 1, "", "copy"], [216, 3, 1, "", "count"], [216, 2, 1, "", "free_parameters"], [216, 3, 1, "", "freeze_all"], [216, 3, 1, "", "from_dict"], [216, 3, 1, "", "from_stack"], [216, 3, 1, "", "index"], [216, 2, 1, "", "max"], [216, 2, 1, "", "min"], [216, 2, 1, "", "names"], [216, 2, 1, "", "prior"], [216, 3, 1, "", "prior_stat_sum"], [216, 3, 1, "", "restore_status"], [216, 3, 1, "", "select"], [216, 3, 1, "", "set_parameter_factors"], [216, 3, 1, "", "to_dict"], [216, 3, 1, "", "to_table"], [216, 2, 1, "", "types"], [216, 3, 1, "", "unfreeze_all"], [216, 2, 1, "", "unique_parameters"], [216, 2, 1, "", "value"]], "gammapy.modeling.models": [[217, 1, 1, "", "BrokenPowerLawSpectralModel"], [218, 1, 1, "", "CompoundSpectralModel"], [219, 1, 1, "", "ConstantFluxSpatialModel"], [220, 1, 1, "", "ConstantSpatialModel"], [221, 1, 1, "", "ConstantSpectralModel"], [222, 1, 1, "", "ConstantTemporalModel"], [223, 1, 1, "", "DatasetModels"], [224, 1, 1, "", "DiskSpatialModel"], [225, 1, 1, "", "EBLAbsorptionNormSpectralModel"], [226, 5, 1, "", "EBL_DATA_BUILTIN"], [227, 1, 1, "", "ExpCutoffPowerLaw3FGLSpectralModel"], [228, 1, 1, "", "ExpCutoffPowerLawNormSpectralModel"], [229, 1, 1, "", "ExpCutoffPowerLawSpectralModel"], [230, 1, 1, "", "ExpDecayTemporalModel"], [231, 1, 1, "", "FoVBackgroundModel"], [232, 1, 1, "", "GaussianSpatialModel"], [233, 1, 1, "", "GaussianSpectralModel"], [234, 1, 1, "", "GaussianTemporalModel"], [235, 1, 1, "", "GeneralizedGaussianSpatialModel"], [236, 1, 1, "", "GeneralizedGaussianTemporalModel"], [237, 1, 1, "", "LightCurveTemplateTemporalModel"], [238, 1, 1, "", "LinearTemporalModel"], [239, 1, 1, "", "LogParabolaNormSpectralModel"], [240, 1, 1, "", "LogParabolaSpectralModel"], [241, 5, 1, "", "MODEL_REGISTRY"], [242, 1, 1, "", "MeyerCrabSpectralModel"], [243, 1, 1, "", "Model"], [244, 1, 1, "", "ModelBase"], [245, 1, 1, "", "Models"], [246, 1, 1, "", "NaimaSpectralModel"], [247, 1, 1, "", "PiecewiseNormSpatialModel"], [248, 1, 1, "", "PiecewiseNormSpectralModel"], [249, 1, 1, "", "PointSpatialModel"], [250, 1, 1, "", "PowerLaw2SpectralModel"], [251, 1, 1, "", "PowerLawNormSpectralModel"], [252, 1, 1, "", "PowerLawSpectralModel"], [253, 1, 1, "", "PowerLawTemporalModel"], [254, 1, 1, "", "Prior"], [255, 5, 1, "", "SPATIAL_MODEL_REGISTRY"], [256, 5, 1, "", "SPECTRAL_MODEL_REGISTRY"], [257, 1, 1, "", "ScaleSpectralModel"], [258, 1, 1, "", "Shell2SpatialModel"], [259, 1, 1, "", "ShellSpatialModel"], [260, 1, 1, "", "SineTemporalModel"], [261, 1, 1, "", "SkyModel"], [262, 1, 1, "", "SmoothBrokenPowerLawSpectralModel"], [263, 1, 1, "", "SpatialModel"], [264, 1, 1, "", "SpectralModel"], [265, 1, 1, "", "SuperExpCutoffPowerLaw3FGLSpectralModel"], [266, 1, 1, "", "SuperExpCutoffPowerLaw4FGLDR3SpectralModel"], [267, 1, 1, "", "SuperExpCutoffPowerLaw4FGLSpectralModel"], [268, 5, 1, "", "TEMPORAL_MODEL_REGISTRY"], [269, 1, 1, "", "TemplateNDSpatialModel"], [270, 1, 1, "", "TemplateNDSpectralModel"], [271, 1, 1, "", "TemplateNPredModel"], [272, 1, 1, "", "TemplatePhaseCurveTemporalModel"], [273, 1, 1, "", "TemplateSpatialModel"], [274, 1, 1, "", "TemplateSpectralModel"], [275, 1, 1, "", "TemporalModel"], [276, 4, 1, "", "create_cosmic_ray_spectral_model"], [277, 4, 1, "", "create_crab_spectral_model"], [278, 4, 1, "", "create_fermi_isotropic_diffuse_model"], [279, 4, 1, "", "integrate_spectrum"], [280, 4, 1, "", "read_hermes_cube"], [281, 4, 1, "", "scale_plot_flux"], [10, 0, 0, "-", "utils"]], "gammapy.modeling.models.BrokenPowerLawSpectralModel": [[217, 3, 1, "", "__call__"], [217, 2, 1, "", "amplitude"], [217, 3, 1, "", "copy"], [217, 2, 1, "", "covariance"], [217, 2, 1, "", "default_parameters"], [217, 2, 1, "", "ebreak"], [217, 3, 1, "", "energy_flux"], [217, 3, 1, "", "energy_flux_error"], [217, 3, 1, "", "evaluate"], [217, 3, 1, "", "evaluate_error"], [217, 3, 1, "", "freeze"], [217, 3, 1, "", "from_dict"], [217, 3, 1, "", "from_parameters"], [217, 2, 1, "", "frozen"], [217, 2, 1, "", "index1"], [217, 2, 1, "", "index2"], [217, 3, 1, "", "integral"], [217, 3, 1, "", "integral_error"], [217, 3, 1, "", "inverse"], [217, 3, 1, "", "inverse_all"], [217, 2, 1, "", "is_norm_spectral_model"], [217, 2, 1, "", "parameters"], [217, 2, 1, "", "parameters_unique_names"], [217, 2, 1, "", "pivot_energy"], [217, 3, 1, "", "plot"], [217, 3, 1, "", "plot_error"], [217, 3, 1, "", "reassign"], [217, 3, 1, "", "reference_fluxes"], [217, 3, 1, "", "spectral_index"], [217, 3, 1, "", "spectral_index_error"], [217, 2, 1, "", "tag"], [217, 3, 1, "", "to_dict"], [217, 2, 1, "", "type"], [217, 3, 1, "", "unfreeze"]], "gammapy.modeling.models.CompoundSpectralModel": [[218, 3, 1, "", "__call__"], [218, 3, 1, "", "copy"], [218, 2, 1, "", "covariance"], [218, 2, 1, "", "default_parameters"], [218, 3, 1, "", "energy_flux"], [218, 3, 1, "", "energy_flux_error"], [218, 3, 1, "", "evaluate"], [218, 3, 1, "", "evaluate_error"], [218, 3, 1, "", "freeze"], [218, 3, 1, "", "from_dict"], [218, 3, 1, "", "from_parameters"], [218, 2, 1, "", "frozen"], [218, 3, 1, "", "integral"], [218, 3, 1, "", "integral_error"], [218, 3, 1, "", "inverse"], [218, 3, 1, "", "inverse_all"], [218, 2, 1, "", "is_norm_spectral_model"], [218, 2, 1, "", "parameters"], [218, 2, 1, "", "parameters_unique_names"], [218, 2, 1, "", "pivot_energy"], [218, 3, 1, "", "plot"], [218, 3, 1, "", "plot_error"], [218, 3, 1, "", "reassign"], [218, 3, 1, "", "reference_fluxes"], [218, 3, 1, "", "spectral_index"], [218, 3, 1, "", "spectral_index_error"], [218, 2, 1, "", "tag"], [218, 3, 1, "", "to_dict"], [218, 2, 1, "", "type"], [218, 3, 1, "", "unfreeze"]], "gammapy.modeling.models.ConstantFluxSpatialModel": [[219, 3, 1, "", "__call__"], [219, 3, 1, "", "copy"], [219, 2, 1, "", "covariance"], [219, 2, 1, "", "default_parameters"], [219, 3, 1, "", "evaluate"], [219, 3, 1, "", "evaluate_geom"], [219, 2, 1, "", "evaluation_bin_size_min"], [219, 2, 1, "", "evaluation_radius"], [219, 2, 1, "", "evaluation_region"], [219, 2, 1, "", "frame"], [219, 3, 1, "", "freeze"], [219, 3, 1, "", "from_dict"], [219, 3, 1, "", "from_parameters"], [219, 3, 1, "", "from_position"], [219, 2, 1, "", "frozen"], [219, 3, 1, "", "integrate_geom"], [219, 2, 1, "", "is_energy_dependent"], [219, 2, 1, "", "parameters"], [219, 2, 1, "", "parameters_unique_names"], [219, 2, 1, "", "phi_0"], [219, 3, 1, "", "plot"], [219, 3, 1, "", "plot_error"], [219, 3, 1, "", "plot_grid"], [219, 3, 1, "", "plot_interactive"], [219, 3, 1, "", "plot_position_error"], [219, 2, 1, "", "position"], [219, 2, 1, "", "position_error"], [219, 2, 1, "", "position_lonlat"], [219, 3, 1, "", "reassign"], [219, 2, 1, "", "tag"], [219, 3, 1, "", "to_dict"], [219, 3, 1, "", "to_region"], [219, 2, 1, "", "type"], [219, 3, 1, "", "unfreeze"]], "gammapy.modeling.models.ConstantSpatialModel": [[220, 3, 1, "", "__call__"], [220, 3, 1, "", "copy"], [220, 2, 1, "", "covariance"], [220, 2, 1, "", "default_parameters"], [220, 3, 1, "", "evaluate"], [220, 3, 1, "", "evaluate_geom"], [220, 2, 1, "", "evaluation_bin_size_min"], [220, 2, 1, "", "evaluation_radius"], [220, 2, 1, "", "evaluation_region"], [220, 2, 1, "", "frame"], [220, 3, 1, "", "freeze"], [220, 3, 1, "", "from_dict"], [220, 3, 1, "", "from_parameters"], [220, 3, 1, "", "from_position"], [220, 2, 1, "", "frozen"], [220, 3, 1, "", "integrate_geom"], [220, 2, 1, "", "is_energy_dependent"], [220, 2, 1, "", "parameters"], [220, 2, 1, "", "parameters_unique_names"], [220, 2, 1, "", "phi_0"], [220, 3, 1, "", "plot"], [220, 3, 1, "", "plot_error"], [220, 3, 1, "", "plot_grid"], [220, 3, 1, "", "plot_interactive"], [220, 3, 1, "", "plot_position_error"], [220, 2, 1, "", "position"], [220, 2, 1, "", "position_error"], [220, 2, 1, "", "position_lonlat"], [220, 3, 1, "", "reassign"], [220, 2, 1, "", "tag"], [220, 3, 1, "", "to_dict"], [220, 3, 1, "", "to_region"], [220, 2, 1, "", "type"], [220, 3, 1, "", "unfreeze"], [220, 2, 1, "", "value"]], "gammapy.modeling.models.ConstantSpectralModel": [[221, 3, 1, "", "__call__"], [221, 2, 1, "", "const"], [221, 3, 1, "", "copy"], [221, 2, 1, "", "covariance"], [221, 2, 1, "", "default_parameters"], [221, 3, 1, "", "energy_flux"], [221, 3, 1, "", "energy_flux_error"], [221, 3, 1, "", "evaluate"], [221, 3, 1, "", "evaluate_error"], [221, 3, 1, "", "freeze"], [221, 3, 1, "", "from_dict"], [221, 3, 1, "", "from_parameters"], [221, 2, 1, "", "frozen"], [221, 3, 1, "", "integral"], [221, 3, 1, "", "integral_error"], [221, 3, 1, "", "inverse"], [221, 3, 1, "", "inverse_all"], [221, 2, 1, "", "is_norm_spectral_model"], [221, 2, 1, "", "parameters"], [221, 2, 1, "", "parameters_unique_names"], [221, 2, 1, "", "pivot_energy"], [221, 3, 1, "", "plot"], [221, 3, 1, "", "plot_error"], [221, 3, 1, "", "reassign"], [221, 3, 1, "", "reference_fluxes"], [221, 3, 1, "", "spectral_index"], [221, 3, 1, "", "spectral_index_error"], [221, 2, 1, "", "tag"], [221, 3, 1, "", "to_dict"], [221, 2, 1, "", "type"], [221, 3, 1, "", "unfreeze"]], "gammapy.modeling.models.ConstantTemporalModel": [[222, 3, 1, "", "__call__"], [222, 3, 1, "", "copy"], [222, 2, 1, "", "covariance"], [222, 2, 1, "", "default_parameters"], [222, 3, 1, "", "evaluate"], [222, 3, 1, "", "freeze"], [222, 3, 1, "", "from_dict"], [222, 3, 1, "", "from_parameters"], [222, 2, 1, "", "frozen"], [222, 3, 1, "", "integral"], [222, 2, 1, "", "is_energy_dependent"], [222, 2, 1, "", "parameters"], [222, 2, 1, "", "parameters_unique_names"], [222, 3, 1, "", "plot"], [222, 3, 1, "", "reassign"], [222, 2, 1, "", "reference_time"], [222, 3, 1, "", "sample_time"], [222, 2, 1, "", "tag"], [222, 3, 1, "", "time_sum"], [222, 3, 1, "", "to_dict"], [222, 2, 1, "", "type"], [222, 3, 1, "", "unfreeze"]], "gammapy.modeling.models.DatasetModels": [[223, 3, 1, "", "copy"], [223, 3, 1, "", "count"], [223, 2, 1, "", "covariance"], [223, 3, 1, "", "freeze"], [223, 3, 1, "", "from_dict"], [223, 3, 1, "", "from_yaml"], [223, 2, 1, "", "frozen"], [223, 3, 1, "", "index"], [223, 2, 1, "", "names"], [223, 2, 1, "", "parameters"], [223, 2, 1, "", "parameters_unique_names"], [223, 3, 1, "", "plot_positions"], [223, 3, 1, "", "plot_regions"], [223, 2, 1, "", "positions"], [223, 3, 1, "", "read"], [223, 3, 1, "", "read_covariance"], [223, 3, 1, "", "reassign"], [223, 3, 1, "", "restore_status"], [223, 3, 1, "", "select"], [223, 3, 1, "", "select_from_geom"], [223, 3, 1, "", "select_mask"], [223, 3, 1, "", "select_region"], [223, 3, 1, "", "selection_mask"], [223, 3, 1, "", "set_parameters_bounds"], [223, 3, 1, "", "to_dict"], [223, 3, 1, "", "to_parameters_table"], [223, 3, 1, "", "to_regions"], [223, 3, 1, "", "to_template_sky_model"], [223, 3, 1, "", "to_template_spectral_model"], [223, 3, 1, "", "to_yaml"], [223, 3, 1, "", "unfreeze"], [223, 3, 1, "", "update_link_label"], [223, 3, 1, "", "update_parameters_from_table"], [223, 2, 1, "", "wcs_geom"], [223, 3, 1, "", "write"], [223, 3, 1, "", "write_covariance"]], "gammapy.modeling.models.DiskSpatialModel": [[224, 3, 1, "", "__call__"], [224, 3, 1, "", "copy"], [224, 2, 1, "", "covariance"], [224, 2, 1, "", "default_parameters"], [224, 2, 1, "", "e"], [224, 2, 1, "", "edge_width"], [224, 3, 1, "", "evaluate"], [224, 3, 1, "", "evaluate_geom"], [224, 2, 1, "", "evaluation_bin_size_min"], [224, 2, 1, "", "evaluation_radius"], [224, 2, 1, "", "evaluation_region"], [224, 3, 1, "", "freeze"], [224, 3, 1, "", "from_dict"], [224, 3, 1, "", "from_parameters"], [224, 3, 1, "", "from_position"], [224, 3, 1, "", "from_region"], [224, 2, 1, "", "frozen"], [224, 3, 1, "", "integrate_geom"], [224, 2, 1, "", "is_energy_dependent"], [224, 2, 1, "", "lat_0"], [224, 2, 1, "", "lon_0"], [224, 2, 1, "", "parameters"], [224, 2, 1, "", "parameters_unique_names"], [224, 2, 1, "", "phi"], [224, 2, 1, "", "phi_0"], [224, 3, 1, "", "plot"], [224, 3, 1, "", "plot_error"], [224, 3, 1, "", "plot_grid"], [224, 3, 1, "", "plot_interactive"], [224, 3, 1, "", "plot_position_error"], [224, 2, 1, "", "position"], [224, 2, 1, "", "position_error"], [224, 2, 1, "", "position_lonlat"], [224, 2, 1, "", "r_0"], [224, 3, 1, "", "reassign"], [224, 2, 1, "", "tag"], [224, 3, 1, "", "to_dict"], [224, 3, 1, "", "to_region"], [224, 2, 1, "", "type"], [224, 3, 1, "", "unfreeze"]], "gammapy.modeling.models.EBLAbsorptionNormSpectralModel": [[225, 3, 1, "", "__call__"], [225, 2, 1, "", "alpha_norm"], [225, 3, 1, "", "copy"], [225, 2, 1, "", "covariance"], [225, 2, 1, "", "default_parameters"], [225, 3, 1, "", "energy_flux"], [225, 3, 1, "", "energy_flux_error"], [225, 3, 1, "", "evaluate"], [225, 3, 1, "", "evaluate_error"], [225, 3, 1, "", "freeze"], [225, 3, 1, "", "from_dict"], [225, 3, 1, "", "from_parameters"], [225, 2, 1, "", "frozen"], [225, 3, 1, "", "integral"], [225, 3, 1, "", "integral_error"], [225, 3, 1, "", "inverse"], [225, 3, 1, "", "inverse_all"], [225, 2, 1, "", "is_norm_spectral_model"], [225, 2, 1, "", "parameters"], [225, 2, 1, "", "parameters_unique_names"], [225, 2, 1, "", "pivot_energy"], [225, 3, 1, "", "plot"], [225, 3, 1, "", "plot_error"], [225, 3, 1, "", "read"], [225, 3, 1, "", "read_builtin"], [225, 3, 1, "", "reassign"], [225, 2, 1, "", "redshift"], [225, 3, 1, "", "reference_fluxes"], [225, 3, 1, "", "spectral_index"], [225, 3, 1, "", "spectral_index_error"], [225, 2, 1, "", "tag"], [225, 3, 1, "", "to_dict"], [225, 2, 1, "", "type"], [225, 3, 1, "", "unfreeze"]], "gammapy.modeling.models.ExpCutoffPowerLaw3FGLSpectralModel": [[227, 3, 1, "", "__call__"], [227, 2, 1, "", "amplitude"], [227, 3, 1, "", "copy"], [227, 2, 1, "", "covariance"], [227, 2, 1, "", "default_parameters"], [227, 2, 1, "", "ecut"], [227, 3, 1, "", "energy_flux"], [227, 3, 1, "", "energy_flux_error"], [227, 3, 1, "", "evaluate"], [227, 3, 1, "", "evaluate_error"], [227, 3, 1, "", "freeze"], [227, 3, 1, "", "from_dict"], [227, 3, 1, "", "from_parameters"], [227, 2, 1, "", "frozen"], [227, 2, 1, "", "index"], [227, 3, 1, "", "integral"], [227, 3, 1, "", "integral_error"], [227, 3, 1, "", "inverse"], [227, 3, 1, "", "inverse_all"], [227, 2, 1, "", "is_norm_spectral_model"], [227, 2, 1, "", "parameters"], [227, 2, 1, "", "parameters_unique_names"], [227, 2, 1, "", "pivot_energy"], [227, 3, 1, "", "plot"], [227, 3, 1, "", "plot_error"], [227, 3, 1, "", "reassign"], [227, 2, 1, "", "reference"], [227, 3, 1, "", "reference_fluxes"], [227, 3, 1, "", "spectral_index"], [227, 3, 1, "", "spectral_index_error"], [227, 2, 1, "", "tag"], [227, 3, 1, "", "to_dict"], [227, 2, 1, "", "type"], [227, 3, 1, "", "unfreeze"]], "gammapy.modeling.models.ExpCutoffPowerLawNormSpectralModel": [[228, 3, 1, "", "__call__"], [228, 2, 1, "", "alpha"], [228, 3, 1, "", "copy"], [228, 2, 1, "", "covariance"], [228, 2, 1, "", "default_parameters"], [228, 3, 1, "", "energy_flux"], [228, 3, 1, "", "energy_flux_error"], [228, 3, 1, "", "evaluate"], [228, 3, 1, "", "evaluate_error"], [228, 3, 1, "", "freeze"], [228, 3, 1, "", "from_dict"], [228, 3, 1, "", "from_parameters"], [228, 2, 1, "", "frozen"], [228, 2, 1, "", "index"], [228, 3, 1, "", "integral"], [228, 3, 1, "", "integral_error"], [228, 3, 1, "", "inverse"], [228, 3, 1, "", "inverse_all"], [228, 2, 1, "", "is_norm_spectral_model"], [228, 2, 1, "", "lambda_"], [228, 2, 1, "", "norm"], [228, 2, 1, "", "parameters"], [228, 2, 1, "", "parameters_unique_names"], [228, 2, 1, "", "pivot_energy"], [228, 3, 1, "", "plot"], [228, 3, 1, "", "plot_error"], [228, 3, 1, "", "reassign"], [228, 2, 1, "", "reference"], [228, 3, 1, "", "reference_fluxes"], [228, 3, 1, "", "spectral_index"], [228, 3, 1, "", "spectral_index_error"], [228, 2, 1, "", "tag"], [228, 3, 1, "", "to_dict"], [228, 2, 1, "", "type"], [228, 3, 1, "", "unfreeze"]], "gammapy.modeling.models.ExpCutoffPowerLawSpectralModel": [[229, 3, 1, "", "__call__"], [229, 2, 1, "", "alpha"], [229, 2, 1, "", "amplitude"], [229, 3, 1, "", "copy"], [229, 2, 1, "", "covariance"], [229, 2, 1, "", "default_parameters"], [229, 2, 1, "", "e_peak"], [229, 3, 1, "", "energy_flux"], [229, 3, 1, "", "energy_flux_error"], [229, 3, 1, "", "evaluate"], [229, 3, 1, "", "evaluate_error"], [229, 3, 1, "", "freeze"], [229, 3, 1, "", "from_dict"], [229, 3, 1, "", "from_parameters"], [229, 2, 1, "", "frozen"], [229, 2, 1, "", "index"], [229, 3, 1, "", "integral"], [229, 3, 1, "", "integral_error"], [229, 3, 1, "", "inverse"], [229, 3, 1, "", "inverse_all"], [229, 2, 1, "", "is_norm_spectral_model"], [229, 2, 1, "", "lambda_"], [229, 2, 1, "", "parameters"], [229, 2, 1, "", "parameters_unique_names"], [229, 2, 1, "", "pivot_energy"], [229, 3, 1, "", "plot"], [229, 3, 1, "", "plot_error"], [229, 3, 1, "", "reassign"], [229, 2, 1, "", "reference"], [229, 3, 1, "", "reference_fluxes"], [229, 3, 1, "", "spectral_index"], [229, 3, 1, "", "spectral_index_error"], [229, 2, 1, "", "tag"], [229, 3, 1, "", "to_dict"], [229, 2, 1, "", "type"], [229, 3, 1, "", "unfreeze"]], "gammapy.modeling.models.ExpDecayTemporalModel": [[230, 3, 1, "", "__call__"], [230, 3, 1, "", "copy"], [230, 2, 1, "", "covariance"], [230, 2, 1, "", "default_parameters"], [230, 3, 1, "", "evaluate"], [230, 3, 1, "", "freeze"], [230, 3, 1, "", "from_dict"], [230, 3, 1, "", "from_parameters"], [230, 2, 1, "", "frozen"], [230, 3, 1, "", "integral"], [230, 2, 1, "", "is_energy_dependent"], [230, 2, 1, "", "parameters"], [230, 2, 1, "", "parameters_unique_names"], [230, 3, 1, "", "plot"], [230, 3, 1, "", "reassign"], [230, 2, 1, "", "reference_time"], [230, 3, 1, "", "sample_time"], [230, 2, 1, "", "t0"], [230, 2, 1, "", "t_ref"], [230, 2, 1, "", "tag"], [230, 3, 1, "", "time_sum"], [230, 3, 1, "", "to_dict"], [230, 2, 1, "", "type"], [230, 3, 1, "", "unfreeze"]], "gammapy.modeling.models.FoVBackgroundModel": [[231, 3, 1, "", "contributes"], [231, 3, 1, "", "copy"], [231, 2, 1, "", "covariance"], [231, 2, 1, "", "default_parameters"], [231, 3, 1, "", "evaluate"], [231, 3, 1, "", "evaluate_geom"], [231, 3, 1, "", "freeze"], [231, 3, 1, "", "from_dict"], [231, 3, 1, "", "from_parameters"], [231, 2, 1, "", "frozen"], [231, 2, 1, "", "name"], [231, 2, 1, "", "parameters"], [231, 2, 1, "", "parameters_unique_names"], [231, 3, 1, "", "reassign"], [231, 3, 1, "", "reset_to_default"], [231, 2, 1, "", "spatial_model"], [231, 2, 1, "", "spectral_model"], [231, 2, 1, "", "tag"], [231, 3, 1, "", "to_dict"], [231, 2, 1, "", "type"], [231, 3, 1, "", "unfreeze"]], "gammapy.modeling.models.GaussianSpatialModel": [[232, 3, 1, "", "__call__"], [232, 3, 1, "", "copy"], [232, 2, 1, "", "covariance"], [232, 2, 1, "", "default_parameters"], [232, 2, 1, "", "e"], [232, 3, 1, "", "evaluate"], [232, 3, 1, "", "evaluate_geom"], [232, 2, 1, "", "evaluation_bin_size_min"], [232, 2, 1, "", "evaluation_radius"], [232, 2, 1, "", "evaluation_region"], [232, 3, 1, "", "freeze"], [232, 3, 1, "", "from_dict"], [232, 3, 1, "", "from_parameters"], [232, 3, 1, "", "from_position"], [232, 2, 1, "", "frozen"], [232, 3, 1, "", "integrate_geom"], [232, 2, 1, "", "is_energy_dependent"], [232, 2, 1, "", "lat_0"], [232, 2, 1, "", "lon_0"], [232, 2, 1, "", "parameters"], [232, 2, 1, "", "parameters_unique_names"], [232, 2, 1, "", "phi"], [232, 2, 1, "", "phi_0"], [232, 3, 1, "", "plot"], [232, 3, 1, "", "plot_error"], [232, 3, 1, "", "plot_grid"], [232, 3, 1, "", "plot_interactive"], [232, 3, 1, "", "plot_position_error"], [232, 2, 1, "", "position"], [232, 2, 1, "", "position_error"], [232, 2, 1, "", "position_lonlat"], [232, 3, 1, "", "reassign"], [232, 2, 1, "", "sigma"], [232, 2, 1, "", "tag"], [232, 3, 1, "", "to_dict"], [232, 3, 1, "", "to_region"], [232, 2, 1, "", "type"], [232, 3, 1, "", "unfreeze"]], "gammapy.modeling.models.GaussianSpectralModel": [[233, 3, 1, "", "__call__"], [233, 2, 1, "", "amplitude"], [233, 3, 1, "", "copy"], [233, 2, 1, "", "covariance"], [233, 2, 1, "", "default_parameters"], [233, 3, 1, "", "energy_flux"], [233, 3, 1, "", "energy_flux_error"], [233, 3, 1, "", "evaluate"], [233, 3, 1, "", "evaluate_error"], [233, 3, 1, "", "freeze"], [233, 3, 1, "", "from_dict"], [233, 3, 1, "", "from_parameters"], [233, 2, 1, "", "frozen"], [233, 3, 1, "", "integral"], [233, 3, 1, "", "integral_error"], [233, 3, 1, "", "inverse"], [233, 3, 1, "", "inverse_all"], [233, 2, 1, "", "is_norm_spectral_model"], [233, 2, 1, "", "mean"], [233, 2, 1, "", "parameters"], [233, 2, 1, "", "parameters_unique_names"], [233, 2, 1, "", "pivot_energy"], [233, 3, 1, "", "plot"], [233, 3, 1, "", "plot_error"], [233, 3, 1, "", "reassign"], [233, 3, 1, "", "reference_fluxes"], [233, 2, 1, "", "sigma"], [233, 3, 1, "", "spectral_index"], [233, 3, 1, "", "spectral_index_error"], [233, 2, 1, "", "tag"], [233, 3, 1, "", "to_dict"], [233, 2, 1, "", "type"], [233, 3, 1, "", "unfreeze"]], "gammapy.modeling.models.GaussianTemporalModel": [[234, 3, 1, "", "__call__"], [234, 3, 1, "", "copy"], [234, 2, 1, "", "covariance"], [234, 2, 1, "", "default_parameters"], [234, 3, 1, "", "evaluate"], [234, 3, 1, "", "freeze"], [234, 3, 1, "", "from_dict"], [234, 3, 1, "", "from_parameters"], [234, 2, 1, "", "frozen"], [234, 3, 1, "", "integral"], [234, 2, 1, "", "is_energy_dependent"], [234, 2, 1, "", "parameters"], [234, 2, 1, "", "parameters_unique_names"], [234, 3, 1, "", "plot"], [234, 3, 1, "", "reassign"], [234, 2, 1, "", "reference_time"], [234, 3, 1, "", "sample_time"], [234, 2, 1, "", "sigma"], [234, 2, 1, "", "t_ref"], [234, 2, 1, "", "tag"], [234, 3, 1, "", "time_sum"], [234, 3, 1, "", "to_dict"], [234, 2, 1, "", "type"], [234, 3, 1, "", "unfreeze"]], "gammapy.modeling.models.GeneralizedGaussianSpatialModel": [[235, 3, 1, "", "__call__"], [235, 3, 1, "", "copy"], [235, 2, 1, "", "covariance"], [235, 2, 1, "", "default_parameters"], [235, 2, 1, "", "e"], [235, 2, 1, "", "eta"], [235, 3, 1, "", "evaluate"], [235, 3, 1, "", "evaluate_geom"], [235, 2, 1, "", "evaluation_bin_size_min"], [235, 2, 1, "", "evaluation_radius"], [235, 2, 1, "", "evaluation_region"], [235, 3, 1, "", "freeze"], [235, 3, 1, "", "from_dict"], [235, 3, 1, "", "from_parameters"], [235, 3, 1, "", "from_position"], [235, 2, 1, "", "frozen"], [235, 3, 1, "", "integrate_geom"], [235, 2, 1, "", "is_energy_dependent"], [235, 2, 1, "", "lat_0"], [235, 2, 1, "", "lon_0"], [235, 2, 1, "", "parameters"], [235, 2, 1, "", "parameters_unique_names"], [235, 2, 1, "", "phi"], [235, 2, 1, "", "phi_0"], [235, 3, 1, "", "plot"], [235, 3, 1, "", "plot_error"], [235, 3, 1, "", "plot_grid"], [235, 3, 1, "", "plot_interactive"], [235, 3, 1, "", "plot_position_error"], [235, 2, 1, "", "position"], [235, 2, 1, "", "position_error"], [235, 2, 1, "", "position_lonlat"], [235, 2, 1, "", "r_0"], [235, 3, 1, "", "reassign"], [235, 2, 1, "", "tag"], [235, 3, 1, "", "to_dict"], [235, 3, 1, "", "to_region"], [235, 2, 1, "", "type"], [235, 3, 1, "", "unfreeze"]], "gammapy.modeling.models.GeneralizedGaussianTemporalModel": [[236, 3, 1, "", "__call__"], [236, 3, 1, "", "copy"], [236, 2, 1, "", "covariance"], [236, 2, 1, "", "default_parameters"], [236, 2, 1, "", "eta"], [236, 3, 1, "", "evaluate"], [236, 3, 1, "", "freeze"], [236, 3, 1, "", "from_dict"], [236, 3, 1, "", "from_parameters"], [236, 2, 1, "", "frozen"], [236, 3, 1, "", "integral"], [236, 2, 1, "", "is_energy_dependent"], [236, 2, 1, "", "parameters"], [236, 2, 1, "", "parameters_unique_names"], [236, 3, 1, "", "plot"], [236, 3, 1, "", "reassign"], [236, 2, 1, "", "reference_time"], [236, 3, 1, "", "sample_time"], [236, 2, 1, "", "t_decay"], [236, 2, 1, "", "t_ref"], [236, 2, 1, "", "t_rise"], [236, 2, 1, "", "tag"], [236, 3, 1, "", "time_sum"], [236, 3, 1, "", "to_dict"], [236, 2, 1, "", "type"], [236, 3, 1, "", "unfreeze"]], "gammapy.modeling.models.LightCurveTemplateTemporalModel": [[237, 3, 1, "", "__call__"], [237, 3, 1, "", "copy"], [237, 2, 1, "", "covariance"], [237, 2, 1, "", "default_parameters"], [237, 3, 1, "", "evaluate"], [237, 3, 1, "", "freeze"], [237, 3, 1, "", "from_dict"], [237, 3, 1, "", "from_parameters"], [237, 3, 1, "", "from_table"], [237, 2, 1, "", "frozen"], [237, 3, 1, "", "integral"], [237, 2, 1, "", "is_energy_dependent"], [237, 2, 1, "", "parameters"], [237, 2, 1, "", "parameters_unique_names"], [237, 3, 1, "", "plot"], [237, 3, 1, "", "read"], [237, 3, 1, "", "reassign"], [237, 2, 1, "", "reference_time"], [237, 3, 1, "", "sample_time"], [237, 2, 1, "", "t_ref"], [237, 2, 1, "", "tag"], [237, 3, 1, "", "time_sum"], [237, 3, 1, "", "to_dict"], [237, 3, 1, "", "to_table"], [237, 2, 1, "", "type"], [237, 3, 1, "", "unfreeze"], [237, 3, 1, "", "write"]], "gammapy.modeling.models.LinearTemporalModel": [[238, 3, 1, "", "__call__"], [238, 2, 1, "", "alpha"], [238, 2, 1, "", "beta"], [238, 3, 1, "", "copy"], [238, 2, 1, "", "covariance"], [238, 2, 1, "", "default_parameters"], [238, 3, 1, "", "evaluate"], [238, 3, 1, "", "freeze"], [238, 3, 1, "", "from_dict"], [238, 3, 1, "", "from_parameters"], [238, 2, 1, "", "frozen"], [238, 3, 1, "", "integral"], [238, 2, 1, "", "is_energy_dependent"], [238, 2, 1, "", "parameters"], [238, 2, 1, "", "parameters_unique_names"], [238, 3, 1, "", "plot"], [238, 3, 1, "", "reassign"], [238, 2, 1, "", "reference_time"], [238, 3, 1, "", "sample_time"], [238, 2, 1, "", "t_ref"], [238, 2, 1, "", "tag"], [238, 3, 1, "", "time_sum"], [238, 3, 1, "", "to_dict"], [238, 2, 1, "", "type"], [238, 3, 1, "", "unfreeze"]], "gammapy.modeling.models.LogParabolaNormSpectralModel": [[239, 3, 1, "", "__call__"], [239, 2, 1, "", "alpha"], [239, 2, 1, "", "beta"], [239, 3, 1, "", "copy"], [239, 2, 1, "", "covariance"], [239, 2, 1, "", "default_parameters"], [239, 3, 1, "", "energy_flux"], [239, 3, 1, "", "energy_flux_error"], [239, 3, 1, "", "evaluate"], [239, 3, 1, "", "evaluate_error"], [239, 3, 1, "", "freeze"], [239, 3, 1, "", "from_dict"], [239, 3, 1, "", "from_log10"], [239, 3, 1, "", "from_parameters"], [239, 2, 1, "", "frozen"], [239, 3, 1, "", "integral"], [239, 3, 1, "", "integral_error"], [239, 3, 1, "", "inverse"], [239, 3, 1, "", "inverse_all"], [239, 2, 1, "", "is_norm_spectral_model"], [239, 2, 1, "", "norm"], [239, 2, 1, "", "parameters"], [239, 2, 1, "", "parameters_unique_names"], [239, 2, 1, "", "pivot_energy"], [239, 3, 1, "", "plot"], [239, 3, 1, "", "plot_error"], [239, 3, 1, "", "reassign"], [239, 2, 1, "", "reference"], [239, 3, 1, "", "reference_fluxes"], [239, 3, 1, "", "spectral_index"], [239, 3, 1, "", "spectral_index_error"], [239, 2, 1, "", "tag"], [239, 3, 1, "", "to_dict"], [239, 2, 1, "", "type"], [239, 3, 1, "", "unfreeze"]], "gammapy.modeling.models.LogParabolaSpectralModel": [[240, 3, 1, "", "__call__"], [240, 2, 1, "", "alpha"], [240, 2, 1, "", "amplitude"], [240, 2, 1, "", "beta"], [240, 3, 1, "", "copy"], [240, 2, 1, "", "covariance"], [240, 2, 1, "", "default_parameters"], [240, 2, 1, "", "e_peak"], [240, 3, 1, "", "energy_flux"], [240, 3, 1, "", "energy_flux_error"], [240, 3, 1, "", "evaluate"], [240, 3, 1, "", "evaluate_error"], [240, 3, 1, "", "freeze"], [240, 3, 1, "", "from_dict"], [240, 3, 1, "", "from_log10"], [240, 3, 1, "", "from_parameters"], [240, 2, 1, "", "frozen"], [240, 3, 1, "", "integral"], [240, 3, 1, "", "integral_error"], [240, 3, 1, "", "inverse"], [240, 3, 1, "", "inverse_all"], [240, 2, 1, "", "is_norm_spectral_model"], [240, 2, 1, "", "parameters"], [240, 2, 1, "", "parameters_unique_names"], [240, 2, 1, "", "pivot_energy"], [240, 3, 1, "", "plot"], [240, 3, 1, "", "plot_error"], [240, 3, 1, "", "reassign"], [240, 2, 1, "", "reference"], [240, 3, 1, "", "reference_fluxes"], [240, 3, 1, "", "spectral_index"], [240, 3, 1, "", "spectral_index_error"], [240, 2, 1, "", "tag"], [240, 3, 1, "", "to_dict"], [240, 2, 1, "", "type"], [240, 3, 1, "", "unfreeze"]], "gammapy.modeling.models.MeyerCrabSpectralModel": [[242, 3, 1, "", "__call__"], [242, 2, 1, "", "coefficients"], [242, 3, 1, "", "copy"], [242, 2, 1, "", "covariance"], [242, 2, 1, "", "default_parameters"], [242, 3, 1, "", "energy_flux"], [242, 3, 1, "", "energy_flux_error"], [242, 3, 1, "", "evaluate"], [242, 3, 1, "", "evaluate_error"], [242, 3, 1, "", "freeze"], [242, 3, 1, "", "from_dict"], [242, 3, 1, "", "from_parameters"], [242, 2, 1, "", "frozen"], [242, 3, 1, "", "integral"], [242, 3, 1, "", "integral_error"], [242, 3, 1, "", "inverse"], [242, 3, 1, "", "inverse_all"], [242, 2, 1, "", "is_norm_spectral_model"], [242, 2, 1, "", "norm"], [242, 2, 1, "", "parameters"], [242, 2, 1, "", "parameters_unique_names"], [242, 2, 1, "", "pivot_energy"], [242, 3, 1, "", "plot"], [242, 3, 1, "", "plot_error"], [242, 3, 1, "", "reassign"], [242, 3, 1, "", "reference_fluxes"], [242, 3, 1, "", "spectral_index"], [242, 3, 1, "", "spectral_index_error"], [242, 3, 1, "", "to_dict"], [242, 2, 1, "", "type"], [242, 3, 1, "", "unfreeze"]], "gammapy.modeling.models.Model": [[243, 3, 1, "", "create"], [243, 3, 1, "", "from_dict"]], "gammapy.modeling.models.ModelBase": [[244, 3, 1, "", "copy"], [244, 2, 1, "", "covariance"], [244, 3, 1, "", "freeze"], [244, 3, 1, "", "from_dict"], [244, 3, 1, "", "from_parameters"], [244, 2, 1, "", "frozen"], [244, 2, 1, "", "parameters"], [244, 2, 1, "", "parameters_unique_names"], [244, 3, 1, "", "reassign"], [244, 3, 1, "", "to_dict"], [244, 2, 1, "", "type"], [244, 3, 1, "", "unfreeze"]], "gammapy.modeling.models.Models": [[245, 3, 1, "", "append"], [245, 3, 1, "", "clear"], [245, 3, 1, "", "copy"], [245, 3, 1, "", "count"], [245, 2, 1, "", "covariance"], [245, 3, 1, "", "extend"], [245, 3, 1, "", "freeze"], [245, 3, 1, "", "from_dict"], [245, 3, 1, "", "from_yaml"], [245, 2, 1, "", "frozen"], [245, 3, 1, "", "index"], [245, 3, 1, "", "insert"], [245, 2, 1, "", "names"], [245, 2, 1, "", "parameters"], [245, 2, 1, "", "parameters_unique_names"], [245, 3, 1, "", "plot_positions"], [245, 3, 1, "", "plot_regions"], [245, 3, 1, "", "pop"], [245, 2, 1, "", "positions"], [245, 3, 1, "", "read"], [245, 3, 1, "", "read_covariance"], [245, 3, 1, "", "reassign"], [245, 3, 1, "", "remove"], [245, 3, 1, "", "restore_status"], [245, 3, 1, "", "reverse"], [245, 3, 1, "", "select"], [245, 3, 1, "", "select_from_geom"], [245, 3, 1, "", "select_mask"], [245, 3, 1, "", "select_region"], [245, 3, 1, "", "selection_mask"], [245, 3, 1, "", "set_parameters_bounds"], [245, 3, 1, "", "set_prior"], [245, 3, 1, "", "to_dict"], [245, 3, 1, "", "to_parameters_table"], [245, 3, 1, "", "to_regions"], [245, 3, 1, "", "to_template_sky_model"], [245, 3, 1, "", "to_template_spectral_model"], [245, 3, 1, "", "to_yaml"], [245, 3, 1, "", "unfreeze"], [245, 3, 1, "", "update_link_label"], [245, 3, 1, "", "update_parameters_from_table"], [245, 2, 1, "", "wcs_geom"], [245, 3, 1, "", "write"], [245, 3, 1, "", "write_covariance"]], "gammapy.modeling.models.NaimaSpectralModel": [[246, 3, 1, "", "__call__"], [246, 3, 1, "", "copy"], [246, 2, 1, "", "covariance"], [246, 2, 1, "", "default_parameters"], [246, 3, 1, "", "energy_flux"], [246, 3, 1, "", "energy_flux_error"], [246, 3, 1, "", "evaluate"], [246, 3, 1, "", "evaluate_error"], [246, 3, 1, "", "freeze"], [246, 3, 1, "", "from_dict"], [246, 3, 1, "", "from_parameters"], [246, 2, 1, "", "frozen"], [246, 2, 1, "", "include_ssc"], [246, 3, 1, "", "integral"], [246, 3, 1, "", "integral_error"], [246, 3, 1, "", "inverse"], [246, 3, 1, "", "inverse_all"], [246, 2, 1, "", "is_norm_spectral_model"], [246, 2, 1, "", "parameters"], [246, 2, 1, "", "parameters_unique_names"], [246, 2, 1, "", "particle_distribution"], [246, 2, 1, "", "pivot_energy"], [246, 3, 1, "", "plot"], [246, 3, 1, "", "plot_error"], [246, 3, 1, "", "reassign"], [246, 3, 1, "", "reference_fluxes"], [246, 3, 1, "", "spectral_index"], [246, 3, 1, "", "spectral_index_error"], [246, 2, 1, "", "ssc_model"], [246, 2, 1, "", "tag"], [246, 3, 1, "", "to_dict"], [246, 2, 1, "", "type"], [246, 3, 1, "", "unfreeze"]], "gammapy.modeling.models.PiecewiseNormSpatialModel": [[247, 3, 1, "", "__call__"], [247, 2, 1, "", "coords"], [247, 3, 1, "", "copy"], [247, 2, 1, "", "covariance"], [247, 2, 1, "", "default_parameters"], [247, 3, 1, "", "evaluate"], [247, 3, 1, "", "evaluate_geom"], [247, 2, 1, "", "evaluation_bin_size_min"], [247, 2, 1, "", "evaluation_radius"], [247, 2, 1, "", "evaluation_region"], [247, 3, 1, "", "freeze"], [247, 3, 1, "", "from_dict"], [247, 3, 1, "", "from_parameters"], [247, 3, 1, "", "from_position"], [247, 2, 1, "", "frozen"], [247, 3, 1, "", "integrate_geom"], [247, 2, 1, "", "is_energy_dependent"], [247, 2, 1, "", "norms"], [247, 2, 1, "", "parameters"], [247, 2, 1, "", "parameters_unique_names"], [247, 2, 1, "", "phi_0"], [247, 3, 1, "", "plot"], [247, 3, 1, "", "plot_error"], [247, 3, 1, "", "plot_grid"], [247, 3, 1, "", "plot_interactive"], [247, 3, 1, "", "plot_position_error"], [247, 2, 1, "", "position"], [247, 2, 1, "", "position_error"], [247, 2, 1, "", "position_lonlat"], [247, 3, 1, "", "reassign"], [247, 2, 1, "", "tag"], [247, 3, 1, "", "to_dict"], [247, 2, 1, "", "type"], [247, 3, 1, "", "unfreeze"]], "gammapy.modeling.models.PiecewiseNormSpectralModel": [[248, 3, 1, "", "__call__"], [248, 3, 1, "", "copy"], [248, 2, 1, "", "covariance"], [248, 2, 1, "", "default_parameters"], [248, 2, 1, "", "energy"], [248, 3, 1, "", "energy_flux"], [248, 3, 1, "", "energy_flux_error"], [248, 3, 1, "", "evaluate"], [248, 3, 1, "", "evaluate_error"], [248, 3, 1, "", "freeze"], [248, 3, 1, "", "from_dict"], [248, 3, 1, "", "from_parameters"], [248, 2, 1, "", "frozen"], [248, 3, 1, "", "integral"], [248, 3, 1, "", "integral_error"], [248, 3, 1, "", "inverse"], [248, 3, 1, "", "inverse_all"], [248, 2, 1, "", "is_norm_spectral_model"], [248, 2, 1, "", "norms"], [248, 2, 1, "", "parameters"], [248, 2, 1, "", "parameters_unique_names"], [248, 2, 1, "", "pivot_energy"], [248, 3, 1, "", "plot"], [248, 3, 1, "", "plot_error"], [248, 3, 1, "", "reassign"], [248, 3, 1, "", "reference_fluxes"], [248, 3, 1, "", "spectral_index"], [248, 3, 1, "", "spectral_index_error"], [248, 2, 1, "", "tag"], [248, 3, 1, "", "to_dict"], [248, 2, 1, "", "type"], [248, 3, 1, "", "unfreeze"]], "gammapy.modeling.models.PointSpatialModel": [[249, 3, 1, "", "__call__"], [249, 3, 1, "", "copy"], [249, 2, 1, "", "covariance"], [249, 2, 1, "", "default_parameters"], [249, 3, 1, "", "evaluate_geom"], [249, 2, 1, "", "evaluation_bin_size_min"], [249, 2, 1, "", "evaluation_radius"], [249, 2, 1, "", "evaluation_region"], [249, 3, 1, "", "freeze"], [249, 3, 1, "", "from_dict"], [249, 3, 1, "", "from_parameters"], [249, 3, 1, "", "from_position"], [249, 2, 1, "", "frozen"], [249, 3, 1, "", "integrate_geom"], [249, 2, 1, "", "is_energy_dependent"], [249, 2, 1, "", "lat_0"], [249, 2, 1, "", "lon_0"], [249, 2, 1, "", "parameters"], [249, 2, 1, "", "parameters_unique_names"], [249, 2, 1, "", "phi_0"], [249, 3, 1, "", "plot"], [249, 3, 1, "", "plot_error"], [249, 3, 1, "", "plot_grid"], [249, 3, 1, "", "plot_interactive"], [249, 3, 1, "", "plot_position_error"], [249, 2, 1, "", "position"], [249, 2, 1, "", "position_error"], [249, 2, 1, "", "position_lonlat"], [249, 3, 1, "", "reassign"], [249, 2, 1, "", "tag"], [249, 3, 1, "", "to_dict"], [249, 3, 1, "", "to_region"], [249, 2, 1, "", "type"], [249, 3, 1, "", "unfreeze"]], "gammapy.modeling.models.PowerLaw2SpectralModel": [[250, 3, 1, "", "__call__"], [250, 2, 1, "", "amplitude"], [250, 3, 1, "", "copy"], [250, 2, 1, "", "covariance"], [250, 2, 1, "", "default_parameters"], [250, 2, 1, "", "emax"], [250, 2, 1, "", "emin"], [250, 3, 1, "", "energy_flux"], [250, 3, 1, "", "energy_flux_error"], [250, 3, 1, "", "evaluate"], [250, 3, 1, "", "evaluate_error"], [250, 3, 1, "", "evaluate_integral"], [250, 3, 1, "", "freeze"], [250, 3, 1, "", "from_dict"], [250, 3, 1, "", "from_parameters"], [250, 2, 1, "", "frozen"], [250, 2, 1, "", "index"], [250, 3, 1, "", "integral"], [250, 3, 1, "", "integral_error"], [250, 3, 1, "", "inverse"], [250, 3, 1, "", "inverse_all"], [250, 2, 1, "", "is_norm_spectral_model"], [250, 2, 1, "", "parameters"], [250, 2, 1, "", "parameters_unique_names"], [250, 2, 1, "", "pivot_energy"], [250, 3, 1, "", "plot"], [250, 3, 1, "", "plot_error"], [250, 3, 1, "", "reassign"], [250, 3, 1, "", "reference_fluxes"], [250, 3, 1, "", "spectral_index"], [250, 3, 1, "", "spectral_index_error"], [250, 2, 1, "", "tag"], [250, 3, 1, "", "to_dict"], [250, 2, 1, "", "type"], [250, 3, 1, "", "unfreeze"]], "gammapy.modeling.models.PowerLawNormSpectralModel": [[251, 3, 1, "", "__call__"], [251, 3, 1, "", "copy"], [251, 2, 1, "", "covariance"], [251, 2, 1, "", "default_parameters"], [251, 3, 1, "", "energy_flux"], [251, 3, 1, "", "energy_flux_error"], [251, 3, 1, "", "evaluate"], [251, 3, 1, "", "evaluate_energy_flux"], [251, 3, 1, "", "evaluate_error"], [251, 3, 1, "", "evaluate_integral"], [251, 3, 1, "", "freeze"], [251, 3, 1, "", "from_dict"], [251, 3, 1, "", "from_parameters"], [251, 2, 1, "", "frozen"], [251, 3, 1, "", "integral"], [251, 3, 1, "", "integral_error"], [251, 3, 1, "", "inverse"], [251, 3, 1, "", "inverse_all"], [251, 2, 1, "", "is_norm_spectral_model"], [251, 2, 1, "", "norm"], [251, 2, 1, "", "parameters"], [251, 2, 1, "", "parameters_unique_names"], [251, 2, 1, "", "pivot_energy"], [251, 3, 1, "", "plot"], [251, 3, 1, "", "plot_error"], [251, 3, 1, "", "reassign"], [251, 2, 1, "", "reference"], [251, 3, 1, "", "reference_fluxes"], [251, 3, 1, "", "spectral_index"], [251, 3, 1, "", "spectral_index_error"], [251, 2, 1, "", "tag"], [251, 2, 1, "", "tilt"], [251, 3, 1, "", "to_dict"], [251, 2, 1, "", "type"], [251, 3, 1, "", "unfreeze"]], "gammapy.modeling.models.PowerLawSpectralModel": [[252, 3, 1, "", "__call__"], [252, 2, 1, "", "amplitude"], [252, 3, 1, "", "copy"], [252, 2, 1, "", "covariance"], [252, 2, 1, "", "default_parameters"], [252, 3, 1, "", "energy_flux"], [252, 3, 1, "", "energy_flux_error"], [252, 3, 1, "", "evaluate"], [252, 3, 1, "", "evaluate_energy_flux"], [252, 3, 1, "", "evaluate_error"], [252, 3, 1, "", "evaluate_integral"], [252, 3, 1, "", "freeze"], [252, 3, 1, "", "from_dict"], [252, 3, 1, "", "from_parameters"], [252, 2, 1, "", "frozen"], [252, 2, 1, "", "index"], [252, 3, 1, "", "integral"], [252, 3, 1, "", "integral_error"], [252, 3, 1, "", "inverse"], [252, 3, 1, "", "inverse_all"], [252, 2, 1, "", "is_norm_spectral_model"], [252, 2, 1, "", "parameters"], [252, 2, 1, "", "parameters_unique_names"], [252, 2, 1, "", "pivot_energy"], [252, 3, 1, "", "plot"], [252, 3, 1, "", "plot_error"], [252, 3, 1, "", "reassign"], [252, 2, 1, "", "reference"], [252, 3, 1, "", "reference_fluxes"], [252, 3, 1, "", "spectral_index"], [252, 3, 1, "", "spectral_index_error"], [252, 2, 1, "", "tag"], [252, 3, 1, "", "to_dict"], [252, 2, 1, "", "type"], [252, 3, 1, "", "unfreeze"]], "gammapy.modeling.models.PowerLawTemporalModel": [[253, 3, 1, "", "__call__"], [253, 2, 1, "", "alpha"], [253, 3, 1, "", "copy"], [253, 2, 1, "", "covariance"], [253, 2, 1, "", "default_parameters"], [253, 3, 1, "", "evaluate"], [253, 3, 1, "", "freeze"], [253, 3, 1, "", "from_dict"], [253, 3, 1, "", "from_parameters"], [253, 2, 1, "", "frozen"], [253, 3, 1, "", "integral"], [253, 2, 1, "", "is_energy_dependent"], [253, 2, 1, "", "parameters"], [253, 2, 1, "", "parameters_unique_names"], [253, 3, 1, "", "plot"], [253, 3, 1, "", "reassign"], [253, 2, 1, "", "reference_time"], [253, 3, 1, "", "sample_time"], [253, 2, 1, "", "t0"], [253, 2, 1, "", "t_ref"], [253, 2, 1, "", "tag"], [253, 3, 1, "", "time_sum"], [253, 3, 1, "", "to_dict"], [253, 2, 1, "", "type"], [253, 3, 1, "", "unfreeze"]], "gammapy.modeling.models.Prior": [[254, 3, 1, "", "__call__"], [254, 3, 1, "", "copy"], [254, 2, 1, "", "covariance"], [254, 2, 1, "", "default_parameters"], [254, 3, 1, "", "freeze"], [254, 3, 1, "", "from_dict"], [254, 3, 1, "", "from_parameters"], [254, 2, 1, "", "frozen"], [254, 2, 1, "", "parameters"], [254, 2, 1, "", "parameters_unique_names"], [254, 3, 1, "", "reassign"], [254, 3, 1, "", "to_dict"], [254, 2, 1, "", "type"], [254, 3, 1, "", "unfreeze"], [254, 2, 1, "", "weight"]], "gammapy.modeling.models.ScaleSpectralModel": [[257, 3, 1, "", "__call__"], [257, 3, 1, "", "copy"], [257, 2, 1, "", "covariance"], [257, 2, 1, "", "default_parameters"], [257, 3, 1, "", "energy_flux"], [257, 3, 1, "", "energy_flux_error"], [257, 3, 1, "", "evaluate"], [257, 3, 1, "", "evaluate_error"], [257, 3, 1, "", "freeze"], [257, 3, 1, "", "from_dict"], [257, 3, 1, "", "from_parameters"], [257, 2, 1, "", "frozen"], [257, 3, 1, "", "integral"], [257, 3, 1, "", "integral_error"], [257, 3, 1, "", "inverse"], [257, 3, 1, "", "inverse_all"], [257, 2, 1, "", "is_norm_spectral_model"], [257, 2, 1, "", "norm"], [257, 2, 1, "", "parameters"], [257, 2, 1, "", "parameters_unique_names"], [257, 2, 1, "", "pivot_energy"], [257, 3, 1, "", "plot"], [257, 3, 1, "", "plot_error"], [257, 3, 1, "", "reassign"], [257, 3, 1, "", "reference_fluxes"], [257, 3, 1, "", "spectral_index"], [257, 3, 1, "", "spectral_index_error"], [257, 2, 1, "", "tag"], [257, 3, 1, "", "to_dict"], [257, 2, 1, "", "type"], [257, 3, 1, "", "unfreeze"]], "gammapy.modeling.models.Shell2SpatialModel": [[258, 3, 1, "", "__call__"], [258, 3, 1, "", "copy"], [258, 2, 1, "", "covariance"], [258, 2, 1, "", "default_parameters"], [258, 2, 1, "", "eta"], [258, 3, 1, "", "evaluate"], [258, 3, 1, "", "evaluate_geom"], [258, 2, 1, "", "evaluation_bin_size_min"], [258, 2, 1, "", "evaluation_radius"], [258, 2, 1, "", "evaluation_region"], [258, 3, 1, "", "freeze"], [258, 3, 1, "", "from_dict"], [258, 3, 1, "", "from_parameters"], [258, 3, 1, "", "from_position"], [258, 2, 1, "", "frozen"], [258, 3, 1, "", "integrate_geom"], [258, 2, 1, "", "is_energy_dependent"], [258, 2, 1, "", "lat_0"], [258, 2, 1, "", "lon_0"], [258, 2, 1, "", "parameters"], [258, 2, 1, "", "parameters_unique_names"], [258, 2, 1, "", "phi_0"], [258, 3, 1, "", "plot"], [258, 3, 1, "", "plot_error"], [258, 3, 1, "", "plot_grid"], [258, 3, 1, "", "plot_interactive"], [258, 3, 1, "", "plot_position_error"], [258, 2, 1, "", "position"], [258, 2, 1, "", "position_error"], [258, 2, 1, "", "position_lonlat"], [258, 2, 1, "", "r_0"], [258, 2, 1, "", "r_in"], [258, 3, 1, "", "reassign"], [258, 2, 1, "", "tag"], [258, 3, 1, "", "to_dict"], [258, 3, 1, "", "to_region"], [258, 2, 1, "", "type"], [258, 3, 1, "", "unfreeze"]], "gammapy.modeling.models.ShellSpatialModel": [[259, 3, 1, "", "__call__"], [259, 3, 1, "", "copy"], [259, 2, 1, "", "covariance"], [259, 2, 1, "", "default_parameters"], [259, 3, 1, "", "evaluate"], [259, 3, 1, "", "evaluate_geom"], [259, 2, 1, "", "evaluation_bin_size_min"], [259, 2, 1, "", "evaluation_radius"], [259, 2, 1, "", "evaluation_region"], [259, 3, 1, "", "freeze"], [259, 3, 1, "", "from_dict"], [259, 3, 1, "", "from_parameters"], [259, 3, 1, "", "from_position"], [259, 2, 1, "", "frozen"], [259, 3, 1, "", "integrate_geom"], [259, 2, 1, "", "is_energy_dependent"], [259, 2, 1, "", "lat_0"], [259, 2, 1, "", "lon_0"], [259, 2, 1, "", "parameters"], [259, 2, 1, "", "parameters_unique_names"], [259, 2, 1, "", "phi_0"], [259, 3, 1, "", "plot"], [259, 3, 1, "", "plot_error"], [259, 3, 1, "", "plot_grid"], [259, 3, 1, "", "plot_interactive"], [259, 3, 1, "", "plot_position_error"], [259, 2, 1, "", "position"], [259, 2, 1, "", "position_error"], [259, 2, 1, "", "position_lonlat"], [259, 2, 1, "", "radius"], [259, 3, 1, "", "reassign"], [259, 2, 1, "", "tag"], [259, 3, 1, "", "to_dict"], [259, 3, 1, "", "to_region"], [259, 2, 1, "", "type"], [259, 3, 1, "", "unfreeze"], [259, 2, 1, "", "width"]], "gammapy.modeling.models.SineTemporalModel": [[260, 3, 1, "", "__call__"], [260, 2, 1, "", "amp"], [260, 3, 1, "", "copy"], [260, 2, 1, "", "covariance"], [260, 2, 1, "", "default_parameters"], [260, 3, 1, "", "evaluate"], [260, 3, 1, "", "freeze"], [260, 3, 1, "", "from_dict"], [260, 3, 1, "", "from_parameters"], [260, 2, 1, "", "frozen"], [260, 3, 1, "", "integral"], [260, 2, 1, "", "is_energy_dependent"], [260, 2, 1, "", "omega"], [260, 2, 1, "", "parameters"], [260, 2, 1, "", "parameters_unique_names"], [260, 3, 1, "", "plot"], [260, 3, 1, "", "reassign"], [260, 2, 1, "", "reference_time"], [260, 3, 1, "", "sample_time"], [260, 2, 1, "", "t_ref"], [260, 2, 1, "", "tag"], [260, 3, 1, "", "time_sum"], [260, 3, 1, "", "to_dict"], [260, 2, 1, "", "type"], [260, 3, 1, "", "unfreeze"]], "gammapy.modeling.models.SkyModel": [[261, 3, 1, "", "__call__"], [261, 3, 1, "", "contributes"], [261, 3, 1, "", "copy"], [261, 2, 1, "", "covariance"], [261, 3, 1, "", "create"], [261, 2, 1, "", "default_parameters"], [261, 3, 1, "", "evaluate"], [261, 3, 1, "", "evaluate_geom"], [261, 2, 1, "", "evaluation_bin_size_min"], [261, 2, 1, "", "evaluation_radius"], [261, 2, 1, "", "evaluation_region"], [261, 2, 1, "", "frame"], [261, 3, 1, "", "freeze"], [261, 3, 1, "", "from_dict"], [261, 3, 1, "", "from_parameters"], [261, 2, 1, "", "frozen"], [261, 3, 1, "", "integrate_geom"], [261, 2, 1, "", "name"], [261, 2, 1, "", "parameters"], [261, 2, 1, "", "parameters_unique_names"], [261, 2, 1, "", "position"], [261, 2, 1, "", "position_lonlat"], [261, 3, 1, "", "reassign"], [261, 2, 1, "", "spatial_model"], [261, 2, 1, "", "spectral_model"], [261, 2, 1, "", "tag"], [261, 2, 1, "", "temporal_model"], [261, 3, 1, "", "to_dict"], [261, 2, 1, "", "type"], [261, 3, 1, "", "unfreeze"]], "gammapy.modeling.models.SmoothBrokenPowerLawSpectralModel": [[262, 3, 1, "", "__call__"], [262, 2, 1, "", "amplitude"], [262, 2, 1, "", "beta"], [262, 3, 1, "", "copy"], [262, 2, 1, "", "covariance"], [262, 2, 1, "", "default_parameters"], [262, 2, 1, "", "ebreak"], [262, 3, 1, "", "energy_flux"], [262, 3, 1, "", "energy_flux_error"], [262, 3, 1, "", "evaluate"], [262, 3, 1, "", "evaluate_error"], [262, 3, 1, "", "freeze"], [262, 3, 1, "", "from_dict"], [262, 3, 1, "", "from_parameters"], [262, 2, 1, "", "frozen"], [262, 2, 1, "", "index1"], [262, 2, 1, "", "index2"], [262, 3, 1, "", "integral"], [262, 3, 1, "", "integral_error"], [262, 3, 1, "", "inverse"], [262, 3, 1, "", "inverse_all"], [262, 2, 1, "", "is_norm_spectral_model"], [262, 2, 1, "", "parameters"], [262, 2, 1, "", "parameters_unique_names"], [262, 2, 1, "", "pivot_energy"], [262, 3, 1, "", "plot"], [262, 3, 1, "", "plot_error"], [262, 3, 1, "", "reassign"], [262, 2, 1, "", "reference"], [262, 3, 1, "", "reference_fluxes"], [262, 3, 1, "", "spectral_index"], [262, 3, 1, "", "spectral_index_error"], [262, 2, 1, "", "tag"], [262, 3, 1, "", "to_dict"], [262, 2, 1, "", "type"], [262, 3, 1, "", "unfreeze"]], "gammapy.modeling.models.SpatialModel": [[263, 3, 1, "", "__call__"], [263, 3, 1, "", "copy"], [263, 2, 1, "", "covariance"], [263, 2, 1, "", "default_parameters"], [263, 3, 1, "", "evaluate_geom"], [263, 2, 1, "", "evaluation_bin_size_min"], [263, 2, 1, "", "evaluation_radius"], [263, 2, 1, "", "evaluation_region"], [263, 3, 1, "", "freeze"], [263, 3, 1, "", "from_dict"], [263, 3, 1, "", "from_parameters"], [263, 3, 1, "", "from_position"], [263, 2, 1, "", "frozen"], [263, 3, 1, "", "integrate_geom"], [263, 2, 1, "", "is_energy_dependent"], [263, 2, 1, "", "parameters"], [263, 2, 1, "", "parameters_unique_names"], [263, 2, 1, "", "phi_0"], [263, 3, 1, "", "plot"], [263, 3, 1, "", "plot_error"], [263, 3, 1, "", "plot_grid"], [263, 3, 1, "", "plot_interactive"], [263, 3, 1, "", "plot_position_error"], [263, 2, 1, "", "position"], [263, 2, 1, "", "position_error"], [263, 2, 1, "", "position_lonlat"], [263, 3, 1, "", "reassign"], [263, 3, 1, "", "to_dict"], [263, 2, 1, "", "type"], [263, 3, 1, "", "unfreeze"]], "gammapy.modeling.models.SpectralModel": [[264, 3, 1, "", "__call__"], [264, 3, 1, "", "copy"], [264, 2, 1, "", "covariance"], [264, 2, 1, "", "default_parameters"], [264, 3, 1, "", "energy_flux"], [264, 3, 1, "", "energy_flux_error"], [264, 3, 1, "", "evaluate_error"], [264, 3, 1, "", "freeze"], [264, 3, 1, "", "from_dict"], [264, 3, 1, "", "from_parameters"], [264, 2, 1, "", "frozen"], [264, 3, 1, "", "integral"], [264, 3, 1, "", "integral_error"], [264, 3, 1, "", "inverse"], [264, 3, 1, "", "inverse_all"], [264, 2, 1, "", "is_norm_spectral_model"], [264, 2, 1, "", "parameters"], [264, 2, 1, "", "parameters_unique_names"], [264, 2, 1, "", "pivot_energy"], [264, 3, 1, "", "plot"], [264, 3, 1, "", "plot_error"], [264, 3, 1, "", "reassign"], [264, 3, 1, "", "reference_fluxes"], [264, 3, 1, "", "spectral_index"], [264, 3, 1, "", "spectral_index_error"], [264, 3, 1, "", "to_dict"], [264, 2, 1, "", "type"], [264, 3, 1, "", "unfreeze"]], "gammapy.modeling.models.SuperExpCutoffPowerLaw3FGLSpectralModel": [[265, 3, 1, "", "__call__"], [265, 2, 1, "", "amplitude"], [265, 3, 1, "", "copy"], [265, 2, 1, "", "covariance"], [265, 2, 1, "", "default_parameters"], [265, 2, 1, "", "ecut"], [265, 3, 1, "", "energy_flux"], [265, 3, 1, "", "energy_flux_error"], [265, 3, 1, "", "evaluate"], [265, 3, 1, "", "evaluate_error"], [265, 3, 1, "", "freeze"], [265, 3, 1, "", "from_dict"], [265, 3, 1, "", "from_parameters"], [265, 2, 1, "", "frozen"], [265, 2, 1, "", "index_1"], [265, 2, 1, "", "index_2"], [265, 3, 1, "", "integral"], [265, 3, 1, "", "integral_error"], [265, 3, 1, "", "inverse"], [265, 3, 1, "", "inverse_all"], [265, 2, 1, "", "is_norm_spectral_model"], [265, 2, 1, "", "parameters"], [265, 2, 1, "", "parameters_unique_names"], [265, 2, 1, "", "pivot_energy"], [265, 3, 1, "", "plot"], [265, 3, 1, "", "plot_error"], [265, 3, 1, "", "reassign"], [265, 2, 1, "", "reference"], [265, 3, 1, "", "reference_fluxes"], [265, 3, 1, "", "spectral_index"], [265, 3, 1, "", "spectral_index_error"], [265, 2, 1, "", "tag"], [265, 3, 1, "", "to_dict"], [265, 2, 1, "", "type"], [265, 3, 1, "", "unfreeze"]], "gammapy.modeling.models.SuperExpCutoffPowerLaw4FGLDR3SpectralModel": [[266, 3, 1, "", "__call__"], [266, 2, 1, "", "amplitude"], [266, 3, 1, "", "copy"], [266, 2, 1, "", "covariance"], [266, 2, 1, "", "default_parameters"], [266, 3, 1, "", "energy_flux"], [266, 3, 1, "", "energy_flux_error"], [266, 3, 1, "", "evaluate"], [266, 3, 1, "", "evaluate_error"], [266, 2, 1, "", "expfactor"], [266, 3, 1, "", "freeze"], [266, 3, 1, "", "from_dict"], [266, 3, 1, "", "from_parameters"], [266, 2, 1, "", "frozen"], [266, 2, 1, "", "index_1"], [266, 2, 1, "", "index_2"], [266, 3, 1, "", "integral"], [266, 3, 1, "", "integral_error"], [266, 3, 1, "", "inverse"], [266, 3, 1, "", "inverse_all"], [266, 2, 1, "", "is_norm_spectral_model"], [266, 2, 1, "", "parameters"], [266, 2, 1, "", "parameters_unique_names"], [266, 2, 1, "", "pivot_energy"], [266, 3, 1, "", "plot"], [266, 3, 1, "", "plot_error"], [266, 3, 1, "", "reassign"], [266, 2, 1, "", "reference"], [266, 3, 1, "", "reference_fluxes"], [266, 3, 1, "", "spectral_index"], [266, 3, 1, "", "spectral_index_error"], [266, 2, 1, "", "tag"], [266, 3, 1, "", "to_dict"], [266, 2, 1, "", "type"], [266, 3, 1, "", "unfreeze"]], "gammapy.modeling.models.SuperExpCutoffPowerLaw4FGLSpectralModel": [[267, 3, 1, "", "__call__"], [267, 2, 1, "", "amplitude"], [267, 3, 1, "", "copy"], [267, 2, 1, "", "covariance"], [267, 2, 1, "", "default_parameters"], [267, 3, 1, "", "energy_flux"], [267, 3, 1, "", "energy_flux_error"], [267, 3, 1, "", "evaluate"], [267, 3, 1, "", "evaluate_error"], [267, 2, 1, "", "expfactor"], [267, 3, 1, "", "freeze"], [267, 3, 1, "", "from_dict"], [267, 3, 1, "", "from_parameters"], [267, 2, 1, "", "frozen"], [267, 2, 1, "", "index_1"], [267, 2, 1, "", "index_2"], [267, 3, 1, "", "integral"], [267, 3, 1, "", "integral_error"], [267, 3, 1, "", "inverse"], [267, 3, 1, "", "inverse_all"], [267, 2, 1, "", "is_norm_spectral_model"], [267, 2, 1, "", "parameters"], [267, 2, 1, "", "parameters_unique_names"], [267, 2, 1, "", "pivot_energy"], [267, 3, 1, "", "plot"], [267, 3, 1, "", "plot_error"], [267, 3, 1, "", "reassign"], [267, 2, 1, "", "reference"], [267, 3, 1, "", "reference_fluxes"], [267, 3, 1, "", "spectral_index"], [267, 3, 1, "", "spectral_index_error"], [267, 2, 1, "", "tag"], [267, 3, 1, "", "to_dict"], [267, 2, 1, "", "type"], [267, 3, 1, "", "unfreeze"]], "gammapy.modeling.models.TemplateNDSpatialModel": [[269, 3, 1, "", "__call__"], [269, 3, 1, "", "copy"], [269, 2, 1, "", "covariance"], [269, 2, 1, "", "default_parameters"], [269, 3, 1, "", "evaluate"], [269, 3, 1, "", "evaluate_geom"], [269, 2, 1, "", "evaluation_bin_size_min"], [269, 2, 1, "", "evaluation_radius"], [269, 2, 1, "", "evaluation_region"], [269, 3, 1, "", "freeze"], [269, 3, 1, "", "from_dict"], [269, 3, 1, "", "from_parameters"], [269, 3, 1, "", "from_position"], [269, 2, 1, "", "frozen"], [269, 3, 1, "", "integrate_geom"], [269, 2, 1, "", "is_energy_dependent"], [269, 2, 1, "", "map"], [269, 2, 1, "", "parameters"], [269, 2, 1, "", "parameters_unique_names"], [269, 2, 1, "", "phi_0"], [269, 3, 1, "", "plot"], [269, 3, 1, "", "plot_error"], [269, 3, 1, "", "plot_grid"], [269, 3, 1, "", "plot_interactive"], [269, 3, 1, "", "plot_position_error"], [269, 2, 1, "", "position"], [269, 2, 1, "", "position_error"], [269, 2, 1, "", "position_lonlat"], [269, 3, 1, "", "reassign"], [269, 2, 1, "", "tag"], [269, 3, 1, "", "to_dict"], [269, 2, 1, "", "type"], [269, 3, 1, "", "unfreeze"], [269, 3, 1, "", "write"]], "gammapy.modeling.models.TemplateNDSpectralModel": [[270, 3, 1, "", "__call__"], [270, 3, 1, "", "copy"], [270, 2, 1, "", "covariance"], [270, 2, 1, "", "default_parameters"], [270, 3, 1, "", "energy_flux"], [270, 3, 1, "", "energy_flux_error"], [270, 3, 1, "", "evaluate"], [270, 3, 1, "", "evaluate_error"], [270, 3, 1, "", "freeze"], [270, 3, 1, "", "from_dict"], [270, 3, 1, "", "from_parameters"], [270, 2, 1, "", "frozen"], [270, 3, 1, "", "integral"], [270, 3, 1, "", "integral_error"], [270, 3, 1, "", "inverse"], [270, 3, 1, "", "inverse_all"], [270, 2, 1, "", "is_norm_spectral_model"], [270, 2, 1, "", "map"], [270, 2, 1, "", "parameters"], [270, 2, 1, "", "parameters_unique_names"], [270, 2, 1, "", "pivot_energy"], [270, 3, 1, "", "plot"], [270, 3, 1, "", "plot_error"], [270, 3, 1, "", "reassign"], [270, 3, 1, "", "reference_fluxes"], [270, 3, 1, "", "spectral_index"], [270, 3, 1, "", "spectral_index_error"], [270, 2, 1, "", "tag"], [270, 3, 1, "", "to_dict"], [270, 2, 1, "", "type"], [270, 3, 1, "", "unfreeze"], [270, 3, 1, "", "write"]], "gammapy.modeling.models.TemplateNPredModel": [[271, 3, 1, "", "copy"], [271, 2, 1, "", "covariance"], [271, 3, 1, "", "cutout"], [271, 2, 1, "", "default_parameters"], [271, 2, 1, "", "energy_center"], [271, 3, 1, "", "evaluate"], [271, 2, 1, "", "evaluation_radius"], [271, 3, 1, "", "freeze"], [271, 3, 1, "", "from_dict"], [271, 3, 1, "", "from_parameters"], [271, 2, 1, "", "frozen"], [271, 2, 1, "", "map"], [271, 2, 1, "", "name"], [271, 2, 1, "", "parameters"], [271, 2, 1, "", "parameters_unique_names"], [271, 2, 1, "", "position"], [271, 3, 1, "", "reassign"], [271, 3, 1, "", "slice_by_energy"], [271, 2, 1, "", "spectral_model"], [271, 3, 1, "", "stack"], [271, 2, 1, "", "tag"], [271, 3, 1, "", "to_dict"], [271, 2, 1, "", "type"], [271, 3, 1, "", "unfreeze"], [271, 3, 1, "", "write"]], "gammapy.modeling.models.TemplatePhaseCurveTemporalModel": [[272, 3, 1, "", "__call__"], [272, 3, 1, "", "copy"], [272, 2, 1, "", "covariance"], [272, 2, 1, "", "default_parameters"], [272, 3, 1, "", "evaluate"], [272, 2, 1, "", "f0"], [272, 2, 1, "", "f1"], [272, 2, 1, "", "f2"], [272, 3, 1, "", "freeze"], [272, 3, 1, "", "from_dict"], [272, 3, 1, "", "from_parameters"], [272, 2, 1, "", "frozen"], [272, 3, 1, "", "integral"], [272, 2, 1, "", "is_energy_dependent"], [272, 2, 1, "", "parameters"], [272, 2, 1, "", "parameters_unique_names"], [272, 2, 1, "", "phi_ref"], [272, 3, 1, "", "plot"], [272, 3, 1, "", "plot_phasogram"], [272, 3, 1, "", "read"], [272, 3, 1, "", "reassign"], [272, 2, 1, "", "reference_time"], [272, 3, 1, "", "sample_time"], [272, 2, 1, "", "t_ref"], [272, 2, 1, "", "tag"], [272, 3, 1, "", "time_sum"], [272, 3, 1, "", "to_dict"], [272, 2, 1, "", "type"], [272, 3, 1, "", "unfreeze"], [272, 3, 1, "", "write"]], "gammapy.modeling.models.TemplateSpatialModel": [[273, 3, 1, "", "__call__"], [273, 3, 1, "", "copy"], [273, 2, 1, "", "covariance"], [273, 2, 1, "", "default_parameters"], [273, 3, 1, "", "evaluate"], [273, 3, 1, "", "evaluate_geom"], [273, 2, 1, "", "evaluation_bin_size_min"], [273, 2, 1, "", "evaluation_radius"], [273, 2, 1, "", "evaluation_region"], [273, 3, 1, "", "freeze"], [273, 3, 1, "", "from_dict"], [273, 3, 1, "", "from_parameters"], [273, 3, 1, "", "from_position"], [273, 2, 1, "", "frozen"], [273, 3, 1, "", "integrate_geom"], [273, 2, 1, "", "is_energy_dependent"], [273, 2, 1, "", "lat_0"], [273, 2, 1, "", "lon_0"], [273, 2, 1, "", "map"], [273, 2, 1, "", "map_center"], [273, 2, 1, "", "parameters"], [273, 2, 1, "", "parameters_unique_names"], [273, 2, 1, "", "phi_0"], [273, 3, 1, "", "plot"], [273, 3, 1, "", "plot_error"], [273, 3, 1, "", "plot_grid"], [273, 3, 1, "", "plot_interactive"], [273, 3, 1, "", "plot_position_error"], [273, 2, 1, "", "position"], [273, 2, 1, "", "position_error"], [273, 2, 1, "", "position_lonlat"], [273, 3, 1, "", "read"], [273, 3, 1, "", "reassign"], [273, 2, 1, "", "tag"], [273, 3, 1, "", "to_dict"], [273, 3, 1, "", "to_region"], [273, 2, 1, "", "type"], [273, 3, 1, "", "unfreeze"], [273, 3, 1, "", "write"]], "gammapy.modeling.models.TemplateSpectralModel": [[274, 3, 1, "", "__call__"], [274, 3, 1, "", "copy"], [274, 2, 1, "", "covariance"], [274, 2, 1, "", "default_parameters"], [274, 3, 1, "", "energy_flux"], [274, 3, 1, "", "energy_flux_error"], [274, 3, 1, "", "evaluate"], [274, 3, 1, "", "evaluate_error"], [274, 3, 1, "", "freeze"], [274, 3, 1, "", "from_dict"], [274, 3, 1, "", "from_parameters"], [274, 3, 1, "", "from_region_map"], [274, 2, 1, "", "frozen"], [274, 3, 1, "", "integral"], [274, 3, 1, "", "integral_error"], [274, 3, 1, "", "inverse"], [274, 3, 1, "", "inverse_all"], [274, 2, 1, "", "is_norm_spectral_model"], [274, 2, 1, "", "parameters"], [274, 2, 1, "", "parameters_unique_names"], [274, 2, 1, "", "pivot_energy"], [274, 3, 1, "", "plot"], [274, 3, 1, "", "plot_error"], [274, 3, 1, "", "read_xspec_model"], [274, 3, 1, "", "reassign"], [274, 3, 1, "", "reference_fluxes"], [274, 3, 1, "", "spectral_index"], [274, 3, 1, "", "spectral_index_error"], [274, 2, 1, "", "tag"], [274, 3, 1, "", "to_dict"], [274, 2, 1, "", "type"], [274, 3, 1, "", "unfreeze"]], "gammapy.modeling.models.TemporalModel": [[275, 3, 1, "", "__call__"], [275, 3, 1, "", "copy"], [275, 2, 1, "", "covariance"], [275, 2, 1, "", "default_parameters"], [275, 3, 1, "", "freeze"], [275, 3, 1, "", "from_dict"], [275, 3, 1, "", "from_parameters"], [275, 2, 1, "", "frozen"], [275, 3, 1, "", "integral"], [275, 2, 1, "", "is_energy_dependent"], [275, 2, 1, "", "parameters"], [275, 2, 1, "", "parameters_unique_names"], [275, 3, 1, "", "plot"], [275, 3, 1, "", "reassign"], [275, 2, 1, "", "reference_time"], [275, 3, 1, "", "sample_time"], [275, 3, 1, "", "time_sum"], [275, 3, 1, "", "to_dict"], [275, 2, 1, "", "type"], [275, 3, 1, "", "unfreeze"]], "gammapy.modeling.models.utils": [[282, 4, 1, "", "read_hermes_cube"]], "gammapy.stats": [[285, 1, 1, "", "CashCountsStatistic"], [286, 4, 1, "", "TimmerKonig_lightcurve_simulator"], [287, 1, 1, "", "WStatCountsStatistic"], [288, 4, 1, "", "cash"], [289, 4, 1, "", "cash_sum_cython"], [290, 4, 1, "", "compute_chisq"], [291, 4, 1, "", "compute_flux_doubling"], [292, 4, 1, "", "compute_fpp"], [293, 4, 1, "", "compute_fvar"], [294, 4, 1, "", "cstat"], [295, 4, 1, "", "discrete_correlation"], [296, 4, 1, "", "f_cash_root_cython"], [297, 4, 1, "", "get_wstat_gof_terms"], [298, 4, 1, "", "get_wstat_mu_bkg"], [299, 4, 1, "", "norm_bounds_cython"], [300, 4, 1, "", "structure_function"], [301, 4, 1, "", "wstat"]], "gammapy.stats.CashCountsStatistic": [[285, 3, 1, "", "compute_errn"], [285, 3, 1, "", "compute_errp"], [285, 3, 1, "", "compute_upper_limit"], [285, 2, 1, "", "error"], [285, 3, 1, "", "info_dict"], [285, 2, 1, "", "n_bkg"], [285, 2, 1, "", "n_sig"], [285, 3, 1, "", "n_sig_matching_significance"], [285, 2, 1, "", "p_value"], [285, 2, 1, "", "sqrt_ts"], [285, 2, 1, "", "stat_max"], [285, 2, 1, "", "stat_null"], [285, 3, 1, "", "sum"], [285, 2, 1, "", "ts"]], "gammapy.stats.WStatCountsStatistic": [[287, 3, 1, "", "compute_errn"], [287, 3, 1, "", "compute_errp"], [287, 3, 1, "", "compute_upper_limit"], [287, 2, 1, "", "error"], [287, 3, 1, "", "info_dict"], [287, 2, 1, "", "n_bkg"], [287, 2, 1, "", "n_sig"], [287, 3, 1, "", "n_sig_matching_significance"], [287, 2, 1, "", "p_value"], [287, 2, 1, "", "sqrt_ts"], [287, 2, 1, "", "stat_max"], [287, 2, 1, "", "stat_null"], [287, 3, 1, "", "sum"], [287, 2, 1, "", "ts"]], "gammapy.utils": [[13, 0, 0, "-", "cluster"], [13, 0, 0, "-", "coordinates"], [13, 0, 0, "-", "fits"], [13, 0, 0, "-", "integrate"], [13, 0, 0, "-", "interpolation"], [13, 0, 0, "-", "parallel"], [13, 0, 0, "-", "random"], [13, 0, 0, "-", "regions"], [13, 0, 0, "-", "scripts"], [13, 0, 0, "-", "table"], [13, 0, 0, "-", "testing"], [13, 0, 0, "-", "time"], [13, 0, 0, "-", "units"]], "gammapy.utils.cluster": [[302, 4, 1, "", "hierarchical_clustering"], [303, 4, 1, "", "standard_scaler"]], "gammapy.utils.coordinates": [[304, 5, 1, "", "D_SUN_TO_GALACTIC_CENTER"], [305, 4, 1, "", "cartesian"], [306, 4, 1, "", "fov_to_sky"], [307, 4, 1, "", "galactic"], [308, 4, 1, "", "motion_since_birth"], [309, 4, 1, "", "polar"], [310, 4, 1, "", "sky_to_fov"], [311, 4, 1, "", "velocity_glon_glat"]], "gammapy.utils.fits": [[312, 1, 1, "", "HDULocation"], [313, 1, 1, "", "LazyFitsData"], [314, 4, 1, "", "earth_location_from_dict"]], "gammapy.utils.fits.HDULocation": [[312, 3, 1, "", "get_hdu"], [312, 3, 1, "", "info"], [312, 3, 1, "", "load"], [312, 3, 1, "", "path"]], "gammapy.utils.integrate": [[315, 4, 1, "", "trapz_loglog"]], "gammapy.utils.interpolation": [[316, 1, 1, "", "ScaledRegularGridInterpolator"], [317, 4, 1, "", "interpolate_profile"], [318, 4, 1, "", "interpolation_scale"]], "gammapy.utils.interpolation.ScaledRegularGridInterpolator": [[316, 3, 1, "", "__call__"]], "gammapy.utils.parallel": [[319, 5, 1, "", "BACKEND_DEFAULT"], [320, 5, 1, "", "METHOD_DEFAULT"], [321, 5, 1, "", "METHOD_KWARGS_DEFAULT"], [322, 5, 1, "", "N_JOBS_DEFAULT"], [323, 5, 1, "", "POOL_KWARGS_DEFAULT"], [324, 1, 1, "", "multiprocessing_manager"], [325, 4, 1, "", "run_multiprocessing"]], "gammapy.utils.random": [[326, 1, 1, "", "InverseCDFSampler"], [327, 4, 1, "", "draw"], [328, 4, 1, "", "get_random_state"], [329, 4, 1, "", "normalize"], [330, 4, 1, "", "pdf"], [331, 4, 1, "", "sample_powerlaw"], [332, 4, 1, "", "sample_sphere"], [333, 4, 1, "", "sample_sphere_distance"], [334, 4, 1, "", "sample_times"]], "gammapy.utils.random.InverseCDFSampler": [[326, 3, 1, "", "sample"], [326, 3, 1, "", "sample_axis"]], "gammapy.utils.regions": [[335, 4, 1, "", "compound_region_to_regions"], [336, 4, 1, "", "make_concentric_annulus_sky_regions"], [337, 4, 1, "", "make_orthogonal_rectangle_sky_regions"], [338, 4, 1, "", "region_to_frame"], [339, 4, 1, "", "regions_to_compound_region"]], "gammapy.utils.scripts": [[340, 4, 1, "", "from_yaml"], [341, 4, 1, "", "get_images_paths"], [342, 4, 1, "", "make_path"], [343, 4, 1, "", "read_yaml"], [344, 4, 1, "", "recursive_merge_dicts"], [345, 4, 1, "", "to_yaml"], [346, 4, 1, "", "write_yaml"]], "gammapy.utils.table": [[347, 4, 1, "", "hstack_columns"], [348, 4, 1, "", "table_row_to_dict"], [349, 4, 1, "", "table_standardise_units_copy"], [350, 4, 1, "", "table_standardise_units_inplace"]], "gammapy.utils.testing": [[351, 1, 1, "", "Checker"], [352, 4, 1, "", "assert_quantity_allclose"], [353, 4, 1, "", "assert_skycoord_allclose"], [354, 4, 1, "", "assert_time_allclose"], [355, 4, 1, "", "mpl_plot_check"], [356, 4, 1, "", "requires_data"], [357, 4, 1, "", "requires_dependency"]], "gammapy.utils.testing.Checker": [[351, 3, 1, "", "run"]], "gammapy.utils.time": [[358, 4, 1, "", "absolute_time"], [359, 4, 1, "", "time_ref_from_dict"], [360, 4, 1, "", "time_ref_to_dict"], [361, 4, 1, "", "time_relative_to_ref"]], "gammapy.utils.units": [[362, 4, 1, "", "standardise_unit"], [363, 4, 1, "", "unit_from_fits_image_hdu"]], "gammapy.visualization": [[364, 1, 1, "", "MapPanelPlotter"], [365, 4, 1, "", "add_colorbar"], [366, 4, 1, "", "annotate_heatmap"], [367, 4, 1, "", "colormap_hess"], [368, 4, 1, "", "colormap_milagro"], [369, 4, 1, "", "plot_contour_line"], [370, 4, 1, "", "plot_distribution"], [371, 4, 1, "", "plot_heatmap"], [372, 4, 1, "", "plot_map_rgb"], [373, 4, 1, "", "plot_npred_signal"], [374, 4, 1, "", "plot_spectrum_datasets_off_regions"], [375, 4, 1, "", "plot_theta_squared_table"]], "gammapy.visualization.MapPanelPlotter": [[364, 3, 1, "", "plot"], [364, 3, 1, "", "plot_panel"]]}, "objnames": {"0": ["py", "module", "Python module"], "1": ["py", "class", "Python class"], "2": ["py", "attribute", "Python attribute"], "3": ["py", "method", "Python method"], "4": ["py", "function", "Python function"], "5": ["py", "data", "Python data"], "6": ["std", "cmdoption", "program option"]}, "objtypes": {"0": "py:module", "1": "py:class", "2": "py:attribute", "3": "py:method", "4": "py:function", "5": "py:data", "6": "std:cmdoption"}, "terms": {"": [16, 19, 20, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 41, 51, 52, 53, 67, 82, 83, 84, 86, 87, 90, 91, 92, 95, 100, 101, 102, 103, 104, 105, 108, 109, 110, 123, 124, 125, 129, 132, 140, 141, 146, 147, 148, 152, 172, 178, 199, 205, 217, 221, 222, 227, 229, 230, 233, 234, 236, 237, 238, 240, 243, 245, 246, 250, 252, 253, 260, 261, 262, 265, 266, 267, 272, 275, 276, 277, 283, 293, 312, 362, 366, 367, 374, 377, 378, 380, 382, 387, 388, 389, 391, 393, 394, 395, 396, 397, 400, 403, 406, 407, 409, 410, 412, 413, 414, 415, 443, 445, 446, 447, 448, 449, 451, 453, 454, 455, 456, 457, 459, 460, 461, 462, 463, 465, 467, 468, 469, 470, 471, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 487, 489, 490, 491, 493, 494, 496, 499, 500, 506, 507, 508, 509, 512, 514, 519, 530, 531, 532, 533, 535, 536, 537, 538, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 561, 562, 563, 564, 565, 566, 567, 568, 569, 573, 574, 575, 576, 578], "0": [11, 13, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 31, 33, 34, 35, 38, 39, 42, 47, 50, 51, 52, 53, 67, 71, 75, 83, 85, 87, 88, 89, 90, 91, 94, 96, 102, 103, 105, 108, 109, 110, 111, 112, 113, 115, 117, 119, 121, 122, 124, 125, 126, 127, 129, 131, 132, 140, 141, 146, 147, 148, 149, 151, 152, 153, 154, 156, 159, 160, 161, 162, 163, 164, 165, 167, 169, 172, 175, 176, 180, 190, 191, 192, 193, 194, 195, 196, 197, 200, 201, 202, 203, 204, 205, 206, 207, 210, 213, 215, 217, 218, 221, 222, 223, 224, 225, 227, 228, 229, 230, 232, 233, 234, 235, 236, 237, 238, 239, 240, 242, 245, 246, 248, 249, 250, 251, 252, 253, 257, 258, 259, 260, 261, 262, 264, 265, 266, 267, 269, 270, 272, 273, 274, 275, 281, 283, 285, 286, 287, 288, 291, 292, 293, 294, 295, 302, 303, 322, 326, 333, 334, 354, 365, 367, 368, 372, 374, 377, 378, 380, 381, 384, 388, 389, 391, 392, 393, 394, 395, 396, 397, 399, 400, 401, 402, 403, 404, 405, 406, 410, 413, 442, 443, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 495, 497, 498, 499, 500, 501, 502, 506, 508, 512, 516, 518, 521, 523, 524, 525, 526, 527, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 574, 575, 576, 577], "00": [67, 87, 88, 89, 91, 101, 196, 378, 392, 445, 446, 447, 448, 450, 451, 452, 453, 454, 455, 456, 458, 459, 460, 463, 464, 466, 467, 469, 470, 472, 473, 476, 477, 478, 479, 480, 481, 482, 484, 485, 487, 488, 489, 490, 491, 493, 495, 497, 498, 499, 500, 501, 529, 539, 559, 560, 570, 578], "000": [67, 87, 88, 91, 124, 392, 447, 449, 451, 452, 454, 455, 459, 460, 461, 463, 464, 467, 469, 470, 473, 476, 477, 478, 482, 484, 485, 490, 497, 498, 500, 529], "0000": 403, "00000": 141, "000000": 476, "000000000000002": 482, "00000000000001": 454, "00000000000003": 471, "00000000000004": 476, "0000000000016": 86, "0000000000018": 94, "000000000002": 463, "000000000006": 463, "000000000007": 476, "00000000001": 476, "00000000e": [479, 480], "00000001": 86, "0000000e": 480, "00000143": [378, 578], "0000e": [101, 447, 448, 451, 452, 453, 454, 456, 459, 467, 469, 470, 479, 485, 487, 499, 559], "0001": [19, 20, 26, 217, 218, 221, 225, 227, 228, 229, 233, 239, 240, 242, 246, 248, 250, 251, 252, 257, 262, 264, 265, 266, 267, 270, 274, 368, 461], "00010298": 477, "00015": 478, "000150": 449, "0002": [449, 500], "00020": 449, "0002000": 449, "0003": 461, "00050": 449, "000500": 449, "0006": 449, "00074287037": [94, 464], "000742870370370241": 94, "0008": 476, "0008e": 467, "0009": 449, "000e": [447, 451, 454, 456, 459, 460, 467, 470, 476, 479, 485, 487, 499, 500, 559], "000true": 449, "001": [50, 146, 147, 148, 149, 152, 153, 154, 156, 159, 161, 163, 164, 192, 193, 195, 201, 204, 205, 354, 463, 479, 537], "001414": 553, "0016288e": 480, "001e": 67, "002018": 490, "0025508e": 480, "0028272e": 480, "0029": 402, "0029202684427718766": 498, "002e": [67, 452], "003": [471, 484, 490], "003026327991562108": 460, "0031052863692021915": 498, "0033": 576, "00336861061002e": 473, "0036925550381217": 454, "00375698": 237, "004": 67, "00422666667": 474, "00449161": 242, "004714": 457, "00490": 461, "00490483": 461, "0049409": 489, "005": 476, "00521472221220211": 460, "005909017160171437": 462, "0064830e": 480, "00688029": 237, "007": 476, "0076540e": 480, "008": [476, 575], "008166963876141447": 462, "008891944789387447": 462, "00894": 500, "009": [473, 476], "00931e": 446, "009433226692021113": 462, "00e": [83, 446, 452, 455, 463, 467, 470, 471, 473, 477, 480, 481, 490, 498], "01": [39, 52, 75, 83, 87, 88, 91, 94, 102, 105, 109, 110, 112, 126, 132, 175, 176, 180, 190, 191, 196, 200, 203, 224, 230, 234, 236, 238, 253, 260, 378, 413, 445, 446, 447, 450, 451, 453, 455, 456, 459, 460, 463, 467, 470, 471, 472, 475, 476, 477, 479, 480, 481, 482, 483, 484, 485, 487, 488, 490, 491, 492, 498, 499, 500, 501, 506, 511, 521, 523, 524, 527, 531, 533, 535, 557, 558, 562, 563, 564, 570, 575, 578], "010": 484, "010e": 67, "011": 484, "01183": 141, "011872336272724": 498, "012": 484, "0122385e": 480, "01235137e": 480, "0123e": 470, "012733796525585": 486, "013": [445, 466], "0139252e": 480, "014": [85, 102, 105, 109, 110, 172, 452, 459, 472, 476, 481, 498, 499, 523], "0143724": 237, "0143764": 489, "01449": 83, "0145": 483, "01450": [468, 499], "0149044e": 480, "015": 476, "01551196351647377": 237, "0163": 461, "01648855015875024": 574, "01700709977114979": 474, "017442925431194484": 474, "018": 67, "018182745349064267": 460, "0183519e": 480, "019": [445, 450], "01960784313726": 465, "019672": 478, "019899368286133": 460, "01e": [172, 413, 446, 476], "01t00": [87, 91, 94, 196, 378, 455, 463, 578], "01t01": 91, "01t02": 91, "02": [16, 67, 83, 94, 102, 105, 109, 110, 111, 115, 160, 167, 172, 190, 191, 192, 193, 195, 197, 200, 201, 202, 203, 204, 205, 413, 445, 446, 447, 449, 451, 452, 456, 457, 459, 460, 461, 462, 463, 464, 466, 467, 468, 469, 470, 471, 476, 479, 480, 481, 482, 483, 484, 485, 488, 490, 495, 498, 499, 500, 521, 523, 524, 531, 532, 533, 539], "020": [445, 460, 462, 466, 476, 478], "020420144596410953": 486, "021": [67, 476], "0219e": 467, "022": 467, "0225e": 476, "02288737": 237, "023": [445, 475, 476, 488], "023472814714293713": 498, "024": 476, "02432": 476, "024715584699834": 498, "024e": 500, "025": [476, 490], "0251191207999763": 461, "025e": 141, "026": [53, 67, 476], "02653": [455, 461], "026891": 476, "026914": 476, "027": [67, 445, 488], "028854": 483, "029e": [447, 476], "02e": [83, 473], "02t23": 86, "03": [17, 19, 20, 21, 22, 24, 25, 26, 27, 67, 87, 89, 91, 202, 390, 405, 445, 446, 447, 449, 460, 461, 463, 470, 476, 480, 482, 484, 486, 487, 488, 492, 493, 499, 534], "03034567e": 478, "030459": 559, "032": 476, "0322": 67, "0322775e": 480, "033": [67, 476], "033176650892097": 96, "03383": 489, "034": 575, "0344": 67, "03447394e": 478, "03493": 478, "034e": 449, "035": 478, "0354700e": 480, "0356": 446, "0356551": 446, "036": [67, 445, 450], "036e": 476, "037": 484, "03745318352059925": 568, "0375512e": 480, "0376213e": 480, "0377e": 470, "03893": 478, "039": [459, 460, 478], "039215686274545": 465, "03921700077803329": 460, "0395135e": 480, "03978226e": 485, "04": [30, 67, 94, 445, 450, 452, 454, 455, 457, 460, 463, 470, 471, 476, 480, 482, 485, 490], "040": 451, "040e": 455, "041": 490, "0414": 455, "0415": 500, "041882": 476, "042": 476, "0423761": 446, "042e": 476, "043": 67, "04357249662280083": 451, "04454": 490, "0454683": 489, "046": [67, 445, 457, 458], "0462798e": 480, "047": 67, "0473174": 242, "0474750e": 480, "048": [459, 490], "0482342e": 480, "04897634344908595": 96, "048e": 67, "049": [449, 459], "04939e": 446, "049676": 476, "04d": 463, "04e": 481, "04t15": 86, "04t22": 86, "05": [19, 20, 26, 29, 42, 67, 71, 87, 91, 121, 122, 124, 131, 203, 210, 217, 218, 221, 225, 227, 228, 229, 233, 239, 240, 242, 246, 248, 250, 251, 252, 257, 262, 264, 265, 266, 267, 270, 274, 336, 405, 445, 446, 447, 448, 449, 450, 451, 455, 458, 459, 460, 461, 464, 467, 469, 475, 476, 477, 479, 480, 481, 484, 487, 489, 491, 493, 498, 499, 526, 531], "050": 484, "05019": 141, "0503641": 446, "0505949e": 480, "05075": 480, "0508075688763": 476, "05088486522436142": 451, "050e": 455, "051": [19, 20, 26, 484], "051c": [17, 21, 22, 24, 25, 27], "052": 476, "0520119e": 480, "0521419985089": 462, "05227": 476, "053": 459, "053212009682775": 486, "054833602905273e": 460, "0548e": 460, "054e": 67, "055": 476, "055e": 449, "056": [445, 488], "0560": 500, "056130": 476, "05628243": 500, "05637e": 446, "05673": 500, "057": 476, "057401": 542, "05762513693893088": 460, "058": 67, "058201": 476, "05853": 455, "058823529411775": 465, "059": 67, "05901956e": 480, "0598579": 446, "05deg": 203, "06": [104, 123, 146, 147, 148, 149, 150, 152, 153, 154, 156, 159, 161, 163, 164, 191, 192, 193, 195, 200, 201, 203, 204, 205, 414, 445, 459, 460, 461, 466, 472, 476, 477, 479, 480, 481, 482, 488, 490, 493, 560], "061": 500, "062": [463, 484, 485, 490], "0625": 485, "0628": 500, "063": 67, "0631757e": 480, "06334488877417636": 486, "064108e": 476, "06430": 461, "0643032": 461, "06450": 141, "065071": 476, "065119": 500, "06549": 141, "066": 451, "066442": 476, "067": 455, "068245": 476, "0689": 479, "068e": 449, "069": 67, "06t22": [452, 456, 457, 459, 485, 498, 530, 531, 532, 533, 534, 535, 536, 537, 538, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 561, 562, 563, 564, 565, 566, 567, 568, 569], "07": [102, 172, 352, 392, 413, 445, 449, 450, 452, 459, 461, 469, 471, 472, 473, 476, 477, 480, 482, 484, 490, 501], "07022": 141, "070483": 476, "0711412": 446, "072": 67, "073": 67, "0739282e": 480, "074": [476, 490], "07454639": 461, "07455": 461, "0746": 500, "0748": [476, 500], "075": 67, "07512322002655547": 460, "0756e": 446, "076": 500, "077": 446, "078": 449, "07843137254903": 465, "07871368968": 477, "07934317e": 478, "07943648658692837": 486, "07944657408": 476, "079464e": 500, "0799109224230051": 486, "07e": 471, "08": [86, 372, 413, 453, 454, 456, 457, 459, 460, 467, 476, 477, 479, 481, 490, 498, 499, 540], "0800792e": 480, "08075": 480, "08081469527619482": 454, "08088": 178, "080e": 455, "0811551760882139": 486, "08142": 475, "08191603310406206": 486, "08192": 461, "08192101": 461, "082": 476, "082691868487906": 474, "08269984": 500, "082e": 124, "083": [67, 476], "08328557573258877": 486, "0833333358168602": 451, "0833333432674408": 451, "08342": 141, "08388624433428049": 486, "084": 67, "08447355125099419": 486, "0845515": 446, "085": [445, 476, 570], "08529426": 97, "0855013383552432": 486, "0859117235629056e": 473, "08675": 477, "086e": 476, "087": 500, "08795162606984375": 486, "087e": 476, "088742": 476, "08880368117243051": 486, "08894569035619496": 486, "089": [136, 445, 450, 451], "0894640e": 480, "0897868126630783": 486, "089881": 476, "08e": [467, 484], "09": [33, 124, 172, 445, 447, 452, 455, 457, 459, 466, 476, 477, 480, 481, 498, 499, 500, 576], "0902437e": 480, "0907128e": 480, "0910": [251, 252], "0914": [52, 53], "093477": 461, "09348": 461, "09375": 473, "09426693227142095": 486, "094834": 476, "095": [445, 570], "095232": 476, "09562941": 500, "095707": 500, "096": [445, 452, 570], "0960": 500, "09607": 500, "09610314778983592": 486, "09623312838375568": 486, "097": [445, 570], "09740295372903346": 486, "097e": 67, "098": 467, "09805": 141, "098903": 476, "09907043184188653": 486, "099903": 565, "09e": 481, "0b100": 322, "0d": [126, 465, 477, 535], "0e": [400, 452, 454, 455, 456, 460, 463, 467, 470, 473, 477, 478, 480, 482, 484, 485, 490, 498, 530, 531, 532, 533, 535, 536, 537, 538, 541, 542, 544, 547, 548, 550, 551, 552, 553, 555, 556, 557, 558, 559, 561, 562, 563, 564, 565, 566, 567, 568, 569], "0f": [479, 490, 500], "0npskzm_": 473, "0rc": 406, "0rc1": 406, "0true": 461, "0x105fd0cf8": 377, "0x105fe3b70": 377, "0x129602550": 377, "0x7f15204739a0": 477, "0x7f15208265b0": 465, "0x7f1520826c40": 465, "0x7f1520b770d0": 486, "0x7f1520b77550": 486, "0x7f1540df0160": 474, "0x7f1540fc5e20": 489, "0x7f1540fccd00": 489, "0x7f15410c8190": 486, "0x7f15410c8f40": 486, "0x7f154122c1c0": 477, "0x7f154125b490": 487, "0x7f15412a6310": 489, "0x7f15412fc340": 485, "0x7f154146b0d0": 477, "0x7f15418349d0": 489, "0x7f1551281250": 477, "0x7f155f74bb50": 559, "1": [16, 17, 18, 19, 20, 21, 22, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 35, 36, 37, 38, 39, 40, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 57, 59, 63, 66, 67, 71, 72, 74, 75, 78, 83, 86, 87, 88, 90, 91, 95, 96, 101, 102, 104, 105, 109, 110, 111, 114, 115, 116, 117, 121, 123, 124, 125, 126, 127, 129, 130, 132, 136, 140, 141, 146, 147, 148, 149, 151, 152, 153, 154, 159, 160, 161, 162, 163, 165, 167, 172, 175, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 200, 201, 202, 203, 204, 205, 210, 213, 215, 217, 218, 220, 221, 222, 224, 225, 227, 228, 229, 230, 232, 233, 234, 235, 236, 237, 238, 239, 240, 242, 243, 246, 248, 250, 251, 252, 253, 257, 258, 259, 260, 261, 262, 264, 265, 266, 267, 270, 272, 273, 274, 275, 276, 277, 283, 285, 286, 287, 291, 292, 302, 303, 315, 316, 322, 323, 324, 333, 334, 336, 337, 362, 364, 367, 368, 372, 374, 377, 378, 380, 381, 384, 385, 387, 388, 389, 391, 392, 394, 397, 399, 400, 401, 402, 403, 404, 406, 407, 410, 413, 414, 417, 418, 420, 421, 425, 427, 428, 429, 432, 433, 434, 435, 436, 437, 438, 446, 447, 448, 449, 451, 452, 453, 454, 455, 456, 457, 459, 460, 461, 462, 463, 464, 465, 467, 468, 469, 470, 471, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 489, 490, 491, 492, 495, 498, 499, 500, 502, 506, 507, 508, 511, 512, 514, 516, 517, 518, 519, 520, 523, 524, 525, 526, 527, 530, 531, 532, 533, 534, 535, 536, 537, 538, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 561, 562, 563, 564, 565, 566, 567, 568, 569, 572, 573, 575, 576, 577], "10": [13, 16, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 50, 51, 52, 53, 54, 66, 67, 86, 87, 88, 89, 91, 102, 103, 105, 108, 109, 110, 111, 115, 117, 121, 122, 124, 125, 126, 130, 131, 132, 134, 140, 141, 143, 146, 147, 149, 151, 153, 159, 160, 161, 162, 163, 165, 172, 178, 191, 192, 193, 195, 197, 200, 201, 202, 203, 204, 205, 210, 213, 215, 224, 227, 239, 240, 242, 243, 265, 277, 286, 292, 322, 324, 334, 365, 370, 372, 374, 377, 378, 380, 381, 382, 383, 384, 385, 386, 387, 388, 393, 394, 399, 400, 401, 405, 407, 413, 418, 420, 431, 433, 436, 440, 442, 445, 446, 447, 448, 451, 452, 453, 454, 455, 456, 457, 459, 460, 461, 462, 463, 464, 465, 467, 468, 469, 470, 471, 473, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 487, 488, 489, 490, 491, 492, 498, 499, 500, 502, 508, 512, 518, 521, 523, 524, 525, 526, 536, 537, 540, 542, 545, 546, 548, 549, 550, 551, 553, 554, 556, 557, 558, 559, 562, 563, 564, 574, 575, 578], "100": [19, 20, 26, 46, 47, 74, 94, 124, 132, 151, 152, 162, 203, 205, 217, 218, 221, 222, 225, 227, 228, 229, 230, 233, 234, 236, 237, 238, 239, 240, 242, 246, 248, 250, 251, 252, 253, 257, 260, 262, 264, 265, 266, 267, 270, 272, 274, 275, 277, 279, 334, 377, 378, 380, 385, 396, 416, 446, 448, 451, 454, 459, 460, 461, 463, 464, 465, 467, 471, 474, 475, 476, 477, 478, 480, 481, 482, 485, 487, 489, 490, 491, 500, 504, 506, 507, 508, 512, 523, 526, 527, 530, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 575], "1000": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 193, 198, 377, 380, 449, 476, 477, 480, 487, 490, 500, 526], "10000": [17, 18, 21, 22, 23, 24, 25, 27, 103, 108, 151, 162, 165, 175, 476, 490], "100000": [74, 476, 498], "1000000": [51, 52, 54, 476, 559], "10000000": 559, "100000000000": 478, "1000e": 487, "1001": [435, 463, 464], "1002": 435, "10041": 140, "10045": [65, 267, 558], "10049": 446, "1006": 435, "101": [421, 471, 476], "1012": 475, "1013": 436, "1014": 436, "101430": 471, "10172": 485, "1019": 470, "102": [172, 452, 455, 575, 576], "1021": 436, "1025": 436, "1026": 436, "10262943822890519": [96, 486], "1027": 436, "102877228833871": 486, "1029": 436, "10295505": 500, "102e": 476, "103": [140, 416, 439], "103000133": 491, "1031": 436, "1032": 436, "1032531953505502": 498, "1034": 500, "1035": 436, "1035002116788955": 452, "1036": 455, "1038": 436, "104": 461, "1040": 436, "10409": 461, "10409446": 461, "10416667": 473, "1043": 436, "104317": [102, 477, 484], "1044": 455, "1045": 436, "1046": 395, "10470702368766069": 486, "10477": 500, "105": [82, 492], "1051": 436, "1052": 476, "1053": 436, "1054": 436, "1054498": 136, "1057": 436, "10592": 578, "105953": 500, "105e": 455, "1061971e": 480, "106217": 83, "1062535e": 480, "1064": 476, "1065": 436, "1067": 436, "1069": 436, "107": [446, 482, 539], "1070": [436, 500], "1072542e": 480, "1073": 436, "10752883769757363": 486, "1076": 436, "1078": 436, "107e": [455, 476], "108": 433, "108034597491956e": 485, "108043": 459, "1082": 436, "1083": 436, "1084": 436, "1085": 436, "1085000": 459, "1086": 292, "1087": 436, "1088": 436, "1089": 436, "109": [416, 447, 482], "1090": 436, "1092": [436, 455], "1093": [436, 455], "1098": 436, "1099306e": 480, "109e": 461, "10d": 465, "10e": [172, 476, 480], "10k": 193, "10th": [404, 415], "11": [67, 87, 91, 94, 104, 123, 124, 125, 129, 130, 213, 336, 381, 384, 386, 394, 401, 405, 416, 417, 438, 445, 446, 447, 448, 449, 451, 452, 453, 454, 455, 456, 457, 459, 461, 463, 464, 465, 467, 468, 469, 470, 471, 473, 476, 477, 478, 479, 481, 483, 484, 485, 487, 488, 490, 498, 499, 500, 523, 525, 530, 531, 532, 533, 534, 535, 536, 537, 538, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 561, 562, 563, 564, 565, 566, 567, 568, 569, 576], "110": [454, 476, 490], "1100": [436, 451], "110000": [477, 481], "1102": 436, "1102e": 448, "1103": 436, "110380": [83, 393, 456, 459, 461, 489], "1104": 436, "1105": 436, "1107": 436, "1108": 436, "111": [365, 384, 436, 445, 459, 476, 570], "1110": 436, "1111": [134, 143, 476, 500], "111140": [393, 456, 459, 461], "111159": [393, 456, 459, 461, 489], "11132": 64, "1115": 436, "111507416": 471, "111630": [89, 471, 489], "111797": 476, "11184": [65, 266, 557], "112": [446, 451], "11208": 65, "11220184543": 478, "1127": 436, "11291820875721864": 486, "113": 500, "1131": [385, 457], "1133": 436, "1134": 436, "1136": 436, "114": [445, 570], "114416978060042": 470, "115": 67, "1150": 436, "11517": 500, "11553325504064559": [96, 486], "11587179071752986": 96, "116": [416, 447, 448], "1160": 476, "11610": 500, "1162": 436, "1162290917256776e": 468, "1166": 436, "1167": [384, 391], "1169": 436, "116e": 67, "117": [416, 540], "1170": 436, "1172": 391, "1173775": 476, "117440": 569, "1176": 436, "117877e": 476, "1179": 436, "118": [140, 459], "1183": 436, "118355": 476, "11839": 141, "119": [447, 455, 459], "1190": 436, "119432": 446, "1195": 436, "119e": 451, "11af4c": 416, "11e": 476, "12": [17, 38, 42, 67, 86, 87, 91, 102, 105, 112, 124, 141, 162, 165, 191, 192, 193, 195, 201, 204, 205, 217, 221, 227, 229, 233, 240, 250, 252, 262, 265, 266, 267, 277, 381, 383, 384, 385, 386, 388, 389, 394, 397, 400, 416, 420, 421, 422, 434, 439, 445, 446, 447, 449, 451, 452, 453, 454, 455, 456, 457, 458, 459, 461, 462, 463, 467, 468, 469, 470, 473, 474, 476, 477, 478, 479, 482, 484, 485, 487, 490, 498, 500, 512, 523, 526, 527, 530, 531, 532, 533, 535, 536, 537, 538, 540, 541, 542, 544, 547, 548, 551, 552, 553, 555, 556, 557, 558, 561, 562, 563, 564, 565, 566, 567, 568, 569], "120": [53, 392, 453, 490, 534], "120000": 456, "120154": 476, "1204": 436, "1207": 436, "120e": [67, 500], "121": [67, 461, 484], "1210": 436, "1211": [436, 476], "121241": 459, "12148": 455, "1215": 436, "1216": 448, "12186": 500, "1219": 476, "122": [67, 140, 416, 449, 484], "1220": 436, "1226": 436, "1227": 436, "12276676166802643": 486, "122e": 460, "123": [87, 91, 389, 445, 455, 570], "1231": 437, "1234": 88, "123456789": [196, 378, 578], "1235": 436, "1237": 385, "1238": 436, "123890826": 86, "123892513": 86, "1239": 382, "123944": 83, "123e": 455, "124": [140, 389, 455, 476, 484], "1240": 436, "12423250e": 480, "1243": 500, "1244969200533408": 303, "1246": 436, "12493874": 480, "124e": 67, "125": [67, 124, 140, 451, 461, 482, 490, 500, 575], "12518": 460, "12525306": 474, "12546": 65, "1258925411": 478, "126": [67, 449, 476, 479], "12611": 141, "1264500e": 480, "126585": 446, "1266": 436, "1268": 436, "12688": 83, "1269263e": 480, "12697": 460, "127": 455, "12704": [140, 141], "1271v": 293, "12751": 446, "1277": 383, "1278": 384, "12794487": 485, "128": [416, 471, 502], "12809": [102, 477, 484], "1281": 436, "12816": 500, "12856": 490, "1287": 436, "1289": 436, "128e": 449, "129": [442, 499], "1290": 436, "1291": 436, "1294": 436, "1299": 476, "12nan5": 449, "12r_": 53, "12th": [402, 415], "13": [67, 101, 124, 141, 202, 302, 381, 382, 386, 391, 396, 405, 421, 445, 446, 447, 448, 449, 451, 452, 453, 454, 455, 456, 457, 459, 460, 461, 462, 463, 464, 465, 467, 468, 469, 470, 471, 473, 475, 476, 477, 478, 479, 481, 482, 483, 484, 485, 487, 488, 489, 490, 491, 492, 498, 499, 500, 508, 576], "130": 523, "1300": 436, "1301v": 38, "13030": 500, "1305": 436, "13061": 485, "131": 449, "1310": 500, "1312": 436, "13133": 500, "13152": 461, "1316": 436, "1317": 437, "1318": 436, "1319": [94, 436], "13197": 459, "132": 455, "13226": 500, "1323e": 460, "132472": 461, "132e": 451, "133": 141, "1331": 437, "1334": 437, "1337": 437, "1339": 437, "133e": [449, 470], "134": [141, 452, 455, 461], "1341": 437, "1342a": 152, "1343": 437, "1344": 476, "1345": 437, "1346": 437, "1347": 437, "13499879586502125": 462, "135": [38, 101, 141, 449, 465, 476, 479], "13500212963": 476, "1351e": 476, "1353e": 487, "1354": 437, "135498046875": 451, "1357": 437, "1359316": 500, "135e": 124, "136": 476, "1360": 437, "1361": 476, "1362": 437, "1367": 437, "1369": [385, 437], "137": [141, 455, 462], "1372": 437, "137254901960785": 465, "1373": 437, "1374": 437, "137521287529426e": 498, "1376": 437, "1376407570489014e": 468, "1377": 437, "1378": 437, "1379190199428797": 303, "137990": 476, "138": [416, 449, 463, 500], "1381": 437, "1386": 437, "1387": 437, "138e": 461, "139": [451, 455, 490], "13911": 500, "1393881668086242e": 473, "1394": 546, "13944023e": 478, "1395": 437, "1396": [377, 452], "13960": 500, "1397": 437, "1397412321592923": 486, "13e": 477, "13nan6": 449, "13th": 415, "14": [28, 65, 67, 86, 378, 381, 386, 389, 394, 396, 397, 435, 445, 446, 449, 451, 452, 455, 459, 471, 473, 476, 477, 478, 479, 481, 483, 484, 485, 487, 488, 498, 499, 500, 501, 575], "140": 491, "1401": 437, "1406": 437, "14079": 140, "1408": [437, 500], "141": [301, 461, 476], "1411180": 459, "1412": 437, "14121": 461, "1412536400000000": 500, "14149953611195087": [96, 486], "14150": 461, "1419": [385, 438], "141945": 446, "142": [67, 416, 449, 476, 500], "14201": 140, "1421": 437, "14210": 449, "1426": 437, "142e": 476, "1432": 437, "143227": 547, "1433": 437, "1435": 437, "1438": 175, "1438465e": 480, "1439110308062257": 486, "144": [449, 484, 500], "14419991": 97, "1442739329466746e": 485, "1443": 437, "1444": 437, "1445": 391, "14457": 500, "1446": 437, "1447": 437, "145": 476, "1451": 392, "14531053887243": 461, "1456": 437, "1456479e": 480, "146": 500, "14610": 578, "146472": 476, "1467": [134, 143], "147": [435, 476, 482], "1470": [437, 500], "1474": 437, "1475": 437, "1476": 437, "14773": 490, "147e": 476, "148": 455, "1482": 476, "1485314": 97, "1486415e": 480, "1489": [437, 461], "149": [451, 481, 484], "1492": 437, "1494": 461, "149445429667434": 462, "1495": 437, "1499472780781963": 303, "149e": 476, "14e": [456, 475], "14msts37sst": [463, 464, 489], "14nan3": 449, "14nan5": 449, "14th": [401, 404, 415], "14yr_catalog": 65, "15": [39, 42, 67, 87, 88, 91, 149, 150, 151, 152, 153, 154, 159, 160, 161, 163, 202, 367, 368, 372, 386, 394, 416, 420, 425, 430, 433, 434, 435, 437, 446, 451, 455, 457, 459, 460, 461, 463, 464, 465, 467, 471, 473, 474, 476, 477, 478, 479, 481, 482, 484, 485, 490, 500, 523, 531], "150": [130, 140, 141, 416, 449, 451, 463, 464, 482, 500], "1505": 437, "15076259": 97, "151": [416, 484], "1510": 136, "1510240e": 480, "15140": 455, "1515": 437, "15154854": 97, "1517": 437, "1519": 470, "152": [455, 461], "1521": 461, "1523": 463, "15246": 463, "152477": 490, "1527": 437, "153": 476, "1530": 477, "15319": 463, "153600": 477, "154": [416, 446, 476], "1543": 437, "154e": 461, "155": 416, "15518": 500, "1552": 457, "1553": [476, 500], "1554": 437, "1554106e": 480, "1556": [437, 476, 500], "1556008e": 480, "1558": 437, "156": [416, 445, 451, 452, 455, 461, 478, 484, 539], "1562": 437, "15621": 500, "1564": 437, "156525": 476, "1567629e": 480, "1568": 437, "15686274509804": 465, "157": [416, 500], "1573": 437, "1576": 437, "158": [141, 445, 446, 452, 459, 463, 466], "1582": 437, "15848931924": 478, "1586": 94, "15899": 455, "1594": 437, "1597317": 97, "15990": 141, "159t": 52, "15e": 457, "15h14m00": 476, "15nan8": 449, "16": [16, 24, 53, 67, 94, 109, 110, 191, 381, 385, 394, 397, 398, 421, 436, 441, 443, 446, 448, 451, 452, 453, 454, 455, 456, 457, 459, 460, 461, 462, 463, 464, 465, 468, 469, 470, 471, 473, 475, 476, 477, 478, 479, 481, 482, 483, 484, 485, 487, 489, 490, 491, 492, 498, 499, 500, 525, 567, 575, 576], "160": [31, 124, 416, 425, 465, 484], "1600": 464, "1600e": 447, "1605": 437, "16056": 455, "1606": 437, "1607": 475, "160e": 67, "161": [140, 385, 451, 461, 476], "1610e": [447, 476], "161250": 467, "1613279491744304": 486, "1616": 437, "1618850e": 480, "1619e": 101, "162": 67, "16227766": 482, "1622776601683795": [481, 482, 498], "16240": 499, "1626e": 456, "16287": 500, "1629219e": 480, "163": [465, 575], "1630": [437, 500], "16303": 461, "16303044": 461, "1634": 437, "164": 476, "1642": 446, "165": 484, "1650": 500, "16506": 446, "16511": 461, "16511148": 461, "1658": 437, "165e": 455, "166": [416, 461, 476], "1660": 437, "166015625": 448, "1661916367760008e": 473, "1665478": 97, "166871893629602e": 473, "167": [416, 461, 467], "167219": 476, "1675": 437, "168": [470, 476, 477, 500], "1681": 437, "1685": 437, "1686": 476, "1687": 86, "168702": 446, "169": [445, 461, 472, 473], "1691": 446, "1695": 437, "1696": 437, "1697": 437, "169722": 467, "1698": 451, "169871": 467, "16th": 415, "17": [20, 21, 40, 67, 86, 388, 391, 394, 425, 442, 445, 446, 448, 451, 452, 453, 454, 455, 456, 457, 459, 460, 461, 462, 463, 464, 465, 466, 468, 469, 470, 471, 473, 475, 476, 477, 479, 480, 481, 482, 483, 484, 485, 487, 489, 490, 491, 492, 498, 499, 500, 576], "170": 448, "17016482e": 479, "1702": 437, "17020": 455, "1710": 438, "1711": 437, "1713": 448, "1715": 391, "1717": 500, "171749": 500, "1719502": 97, "1719610": 97, "1719670": 97, "171b": 276, "172": 465, "17229679": 97, "173": 476, "1731": [437, 484], "1732": 476, "17320": 476, "173475": 456, "1736": 455, "1737799900000000": 500, "174": 451, "1742": 67, "17445": 500, "1746": [437, 500], "1748": [437, 484], "1750": 437, "1751": 437, "17511": 141, "1753": 500, "1755": 437, "1756": 452, "1759": 437, "175e": 476, "176": [141, 416, 471, 476], "1760": 437, "1761": 437, "1762": 502, "1763": [438, 476], "1764": [437, 461], "176470588235294": 465, "1766": 438, "1768896e": 480, "177": [416, 490, 491], "1775": 470, "17776": 446, "1778279410": 478, "177e": 476, "178": 436, "178442": 67, "1785": [437, 446], "1791": 437, "179475": 242, "1799": 437, "17a": [60, 476], "17e": 484, "17g": 50, "17th": 431, "18": [11, 87, 91, 104, 123, 140, 202, 381, 396, 402, 422, 428, 445, 446, 448, 451, 452, 453, 454, 455, 456, 457, 459, 460, 461, 462, 463, 464, 465, 466, 468, 469, 470, 471, 472, 473, 475, 476, 477, 478, 479, 481, 482, 483, 484, 485, 487, 489, 490, 491, 492, 498, 499, 500], "180": [391, 409, 411, 416, 445, 470, 476, 482, 539], "1800": [437, 464, 482, 489], "180000": [463, 464, 489], "1804": 476, "180458": 459, "18046952655570045": 303, "1805": 391, "1807": 438, "1808": [437, 476, 500], "181": 455, "1811": 454, "1812": 437, "1813": 476, "1818": 437, "1821": 437, "1822": 437, "1825": 476, "18257": 455, "1829": 470, "183": 451, "1830e": 451, "183139597": 86, "1834": 448, "1835": 94, "1836": 438, "1836544903987521": 486, "1837": 438, "18385658": 461, "18386": 461, "18392464": 514, "184": [86, 94, 430, 434, 455, 459, 463, 469, 473, 483, 484], "18400002": 469, "1841": 386, "1845": 438, "1846": 438, "18465": 500, "1849": 438, "184989894219835": 474, "185": 483, "1854": [438, 476], "1855": 438, "1857": 438, "1859": 438, "186": [429, 461, 476], "1861": 438, "1862": 438, "186484131475074": 334, "1866": 481, "186643": 500, "187": [422, 429, 445, 461, 470, 539], "1871": 438, "1877": 387, "188": [429, 446, 476], "1883": 438, "1884": 438, "18842984749525210": 461, "1888": 438, "188e": 449, "189": [451, 480], "1890": 438, "1891": 438, "18921591": 480, "1893": 438, "1893e": [447, 476], "1894": 438, "1895": 438, "1896e": 447, "1898": 438, "18988": 500, "1899070e": 480, "18a": 62, "18h43m48": 67, "19": [51, 53, 54, 67, 104, 123, 202, 381, 393, 395, 397, 416, 424, 425, 427, 439, 452, 455, 465, 471, 473, 474, 476, 477, 482, 484, 498, 530, 531, 532, 533, 534, 535, 536, 537, 538, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 561, 562, 563, 564, 565, 566, 567, 568, 569], "190": 476, "1902": [65, 267, 558], "1903": 438, "1904": 438, "1905": 460, "1908": 438, "1909": 438, "190e": 451, "191": [140, 429], "1910": 178, "1912": 438, "1917": 500, "1918": 438, "1919": 438, "192": 141, "1920": 500, "1921": 438, "19214093": 97, "1922": 438, "1926": 438, "1926520e": 480, "1927": 438, "1928": 476, "1929": 438, "193": [445, 455, 560], "1930": 438, "1933": 438, "1934": 438, "19354": 461, "1936925": 97, "1937": [438, 476], "193e": 452, "194": [429, 455], "1943186": 97, "1947565": 97, "1949": 438, "195": [141, 237, 451, 470], "1950rspsa": 52, "1951": 417, "1953830": 97, "1955810e": 480, "1958e": 479, "196": [67, 445, 446, 484, 570], "1960784313725492": 465, "1961": [134, 143], "1962": 417, "1963": 476, "19644": 490, "1965tralm": 21, "1966": 417, "1969": 417, "196991563774588": 277, "197": [67, 461, 490], "1971": 388, "19736017641361556": 462, "1975": 417, "1976572e": 480, "1978": 476, "1979": [288, 294, 417, 573], "1979892": 461, "1980": 476, "1982": 37, "1983": 573, "1986": 389, "1986027": 500, "1987": 461, "19879005": 175, "1988": [135, 295, 417], "1988apj": [135, 295], "1989": 417, "199": [461, 484], "1990": [37, 417], "1990apj": [36, 37], "1991": 417, "1991mnra": 22, "19932878": 480, "1994": [417, 573], "1994a": [52, 53], "1995": [416, 417], "1995a": 286, "1995apj": 17, "1996": [27, 455, 474, 573], "1996mnra": 27, "1997": 498, "1997apj": 25, "1998": [87, 91, 417, 573], "1998apj": 28, "1999": [53, 196, 378, 578], "19991": 498, "199922": 533, "199999809265137": 476, "19999999999999998": 454, "1999apj": 53, "19e": 481, "19th": 415, "1d": [16, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 91, 109, 110, 126, 150, 151, 160, 174, 191, 193, 329, 370, 383, 387, 388, 390, 391, 392, 393, 396, 397, 398, 409, 419, 421, 422, 423, 424, 428, 430, 433, 437, 439, 440, 443, 445, 446, 448, 449, 450, 451, 453, 455, 459, 466, 470, 473, 477, 479, 481, 483, 485, 486, 487, 489, 490, 498, 510, 512, 514, 527, 573], "1dc": [82, 83, 89, 102, 105, 109, 110, 114, 116, 117, 121, 140, 141, 147, 151, 152, 153, 162, 365, 370, 372, 385, 387, 393, 397, 418, 446, 454, 456, 459, 461, 467, 470, 471, 477, 478, 480, 484, 512], "1deg": 203, "1e": [19, 20, 26, 86, 100, 129, 130, 132, 146, 147, 148, 149, 150, 152, 153, 154, 156, 159, 161, 163, 164, 191, 192, 193, 195, 200, 201, 203, 204, 205, 217, 218, 221, 225, 227, 228, 229, 233, 239, 240, 242, 243, 246, 248, 250, 251, 252, 257, 262, 264, 265, 266, 267, 270, 274, 277, 288, 294, 336, 352, 354, 377, 388, 447, 449, 451, 453, 455, 457, 459, 461, 463, 464, 467, 468, 469, 470, 471, 476, 479, 485, 487, 490, 491, 508, 512, 516, 540, 541, 542, 544, 547, 548, 552, 553, 555, 556, 557, 558], "1e0": 506, "1e10": [51, 152], "1e12": [506, 516], "1e2": [449, 506, 508], "1e3": [490, 516], "1e30": 550, "1e4": [479, 490, 491], "1e40": 507, "1e5": [453, 490, 508, 526, 527], "1e51": 52, "1e6": [45, 490, 504, 559], "1e7": [126, 559], "1f": 452, "1fhl": [422, 435], "1fhl_name": 71, "1h": 162, "1k": [102, 109], "1kpc": 508, "1lhaaso": [57, 70, 443, 476], "1lhaaso_catalog": 57, "1nimuqkt": 473, "1rc1": 406, "1tev": [52, 53, 130, 464], "2": [11, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 27, 28, 29, 30, 31, 32, 33, 35, 36, 37, 38, 39, 40, 46, 50, 51, 52, 53, 54, 59, 63, 67, 68, 71, 72, 74, 75, 77, 78, 80, 83, 84, 85, 86, 87, 89, 90, 91, 95, 96, 101, 102, 104, 105, 109, 110, 113, 117, 121, 122, 123, 124, 125, 126, 127, 129, 130, 131, 132, 139, 141, 144, 145, 149, 150, 151, 152, 154, 160, 162, 165, 172, 175, 189, 190, 191, 192, 193, 194, 195, 197, 198, 199, 200, 202, 203, 205, 210, 213, 214, 216, 217, 221, 225, 227, 229, 233, 235, 236, 240, 243, 250, 251, 252, 258, 259, 261, 262, 265, 266, 267, 272, 276, 277, 283, 285, 286, 287, 288, 293, 294, 300, 302, 322, 324, 362, 365, 370, 372, 374, 377, 378, 381, 382, 386, 388, 389, 391, 392, 393, 394, 397, 400, 401, 402, 403, 404, 406, 409, 411, 413, 416, 417, 418, 419, 420, 421, 428, 433, 434, 435, 436, 437, 438, 445, 446, 447, 448, 449, 451, 452, 453, 454, 455, 456, 457, 459, 460, 461, 462, 463, 464, 465, 467, 468, 469, 470, 471, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 489, 490, 491, 492, 498, 499, 500, 508, 511, 512, 514, 519, 520, 521, 523, 524, 526, 527, 528, 530, 531, 532, 533, 534, 535, 536, 537, 538, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 551, 552, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 573, 574, 575, 576, 577], "20": [16, 38, 83, 87, 89, 91, 102, 105, 109, 110, 153, 154, 159, 161, 163, 172, 192, 193, 195, 201, 204, 205, 210, 286, 302, 378, 381, 382, 383, 385, 390, 392, 395, 397, 402, 439, 445, 446, 447, 448, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 468, 469, 470, 471, 473, 474, 475, 476, 477, 479, 481, 482, 483, 484, 485, 487, 489, 490, 491, 492, 498, 499, 500, 502, 521, 523, 524, 525, 531, 532, 533, 536, 537, 546, 549, 554, 559, 560, 575], "200": [52, 87, 91, 132, 203, 401, 429, 445, 450, 451, 452, 455, 461, 465, 467, 476, 482, 485, 500, 575], "2000": [88, 102, 105, 109, 110, 126, 230, 234, 236, 238, 253, 260, 417, 463, 464, 465, 481, 490, 500, 573], "2000000": 459, "20000000000000004": 454, "20009124": 480, "2000apj": 277, "2000e": 485, "2001": [94, 417, 455, 573], "20016447648031e": 473, "2002": [87, 91, 292, 474], "2003": [293, 474], "2003mnra": 293, "2004": [86, 94, 474, 492], "2004a": [39, 40], "2004aph": [83, 88], "2004mnra": 24, "2005": [65, 573], "200503": 446, "2005a": 476, "2006": [31, 33, 392, 455, 462, 469, 473], "200638": 500, "2006a": 277, "2006apj": [30, 31, 32, 33], "2006ara": 50, "2006mnra": [35, 117], "2007": [395, 573], "20072608": 480, "2008": [38, 86, 225, 274, 447, 490, 502, 540], "2008aj": 38, "2009": [132, 296, 418, 455, 573], "20097159": 480, "2009851": 480, "20099855": 480, "201": [52, 482], "2010": [126, 152, 225, 242, 300, 378, 540, 573, 578], "2010a": [242, 277], "2010mnra": 152, "2011": [225, 447, 502, 540], "2011jcap": [17, 19, 20, 21, 22, 24, 25, 26, 27], "2012": [91, 418, 573], "2013": [101, 136, 397, 403, 407, 416, 474], "20136": [82, 303, 492], "20137": [303, 492], "2013aph": 276, "2013apj": 60, "2014": [134, 143, 415, 502], "2015": [52, 86, 391, 394, 415, 490], "20151": 303, "2015apj": 61, "2015jheap": 277, "2016": [26, 391, 394, 415, 418, 474, 481, 489], "2016apj": 58, "2017": [225, 382, 384, 394, 397, 413, 415, 418, 461, 489, 540], "2017apj": [59, 62], "2017icrc": 489, "2018": [52, 382, 383, 384, 385, 386, 387, 388, 392, 394, 396, 397, 415, 442, 489, 492, 573], "2019": [384, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 415, 437, 438, 462, 573], "202": 461, "2020": [202, 386, 397, 398, 399, 400, 401, 415, 462, 463, 470, 482, 562, 563, 564], "2021": [89, 225, 399, 401, 415, 442, 485, 489, 540], "2021345e": 480, "2022": [402, 403, 415, 418, 491], "2023": [389, 404, 405, 415, 418], "2023arxiv230517030c": 57, "2024": [104, 123, 414, 415, 452, 456, 457, 459, 485, 489, 498, 530, 531, 532, 533, 534, 535, 536, 537, 538, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 561, 562, 563, 564, 565, 566, 567, 568, 569], "2024e": 499, "2026": [389, 418], "2028": 418, "203": [445, 539], "2030": [389, 418], "2031": 418, "20326": [302, 448], "20327": [302, 448], "2033": 418, "20339": 302, "2034": 418, "20343": 302, "20344": 302, "20345": 302, "20346": 302, "20349": 448, "2035": [122, 124, 418], "20350": 448, "2036": [122, 124, 470], "2037": 418, "20372": 489, "2038": 418, "2039": 418, "20396": 448, "20397": 448, "204": 140, "2040469e": 480, "2041016744274": 470, "2041222e": 480, "20421": 448, "20422": 448, "2045": 389, "2046": 418, "2049": [418, 476, 500], "205": [429, 461, 482], "2050": 418, "20508075688775": 476, "2051": 418, "20517": 448, "20518": 448, "20519": 448, "205192": 476, "20521": 448, "2053315944536949e": 489, "205357": 476, "2054": 418, "20559": 500, "2058705e": 480, "206": 476, "2061": 476, "2062580e": 480, "2064": 418, "2064335": 97, "2065": 418, "2066": 418, "2068682e": 480, "2069": 418, "207": [457, 461, 465, 484], "2071": [389, 418], "2075": 405, "207520865": 469, "207521165": 473, "207521465": 469, "207521627": 473, "2076": 418, "2077": 418, "2079930e": 480, "207e": 455, "208": [60, 445, 457, 560], "2085": 418, "2089": [391, 420], "20898": 448, "20899": 448, "209": 461, "20900": 448, "2093": 418, "2095": 461, "2097": [418, 446, 454, 456, 459, 461, 467, 470, 489], "2097e": 451, "2098": 418, "20challeng": 489, "20data": 489, "20dataset": 489, "20deg": [463, 464], "20document": 489, "20e": 480, "20scienc": 489, "20th": 403, "21": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 101, 126, 147, 380, 381, 425, 431, 440, 445, 446, 447, 450, 452, 455, 461, 469, 470, 472, 473, 475, 476, 478, 480, 482, 500, 527, 575], "210": [429, 445, 476, 560], "2103": 476, "2104": 419, "2104353e": 480, "2106": 419, "210741": 531, "2108": 419, "211": [476, 477], "2111": 419, "2112": [419, 499], "21134890398": 478, "2114": 419, "2115": 419, "211770556360534": 471, "2118": 419, "2119": 419, "211e": 476, "212": [67, 429, 445, 451, 476, 539], "2121": 419, "2121164e": 480, "2123": 419, "21236e": 446, "2124": 419, "2126": 419, "2128": 419, "2129": [391, 420], "213": 453, "2130": 419, "2131": [419, 476], "2132": 419, "21325": 490, "2133": 419, "2136": [390, 421], "2139": 419, "214": [449, 455], "2140": 419, "2141": 419, "2142": 419, "2145": 419, "2146": 419, "21464892": 500, "214e": 451, "215": [67, 429, 443, 458, 476], "21500000000003": 534, "2151": 419, "2152": 419, "21525804550772332": 462, "2153": [419, 476], "2154": [419, 476], "2155": [423, 447, 469, 470, 473, 474, 476, 486, 500, 540], "215686274509824": 465, "2157": 419, "2159e": 101, "215e": 476, "216": [237, 451, 482, 484, 569], "2160": 419, "2162670e": 480, "2163": 419, "2164425e": 480, "2166": 419, "2169": 419, "217": [451, 476], "2171": 419, "21731921e": 482, "21733761e": 482, "21735587e": 482, "218": 61, "219": [445, 560], "2190": 395, "2192": 420, "2197": 461, "21t19": 94, "21t20": 94, "22": [67, 83, 85, 88, 102, 104, 105, 109, 110, 123, 132, 167, 172, 175, 190, 191, 200, 203, 381, 415, 428, 451, 452, 453, 454, 455, 456, 457, 459, 460, 468, 470, 473, 476, 477, 481, 482, 483, 491, 492, 493, 498, 499, 500, 511, 518, 521, 523, 524, 527], "220": [445, 476, 484, 560, 575, 576], "2200": 420, "2201": [65, 266, 476, 500, 557], "2202e": 500, "2204": 420, "2206": 420, "220e": 476, "221": [391, 429], "22149": 455, "2217": 420, "2217412e": 480, "2218": [394, 421], "2219": [393, 421], "222": [58, 476, 484], "2221": 476, "22245374e": 124, "2227134679628": 470, "22271346796282": 470, "222713467962826": 470, "2229": [390, 420], "223": [445, 484, 560], "2230": 420, "2231": 476, "2235": 420, "2237": [420, 500], "2238": 420, "2239": 420, "2240": 420, "2243": 420, "2244": 420, "224436": 500, "225": [96, 302, 303, 401, 429, 445, 476, 560], "2250": 420, "22500": 457, "2254": 420, "2255": [395, 486], "225575051666": 476, "2255890": [469, 473, 486], "2257": 420, "2259": 420, "226": [461, 490], "22608": 477, "2262": 420, "22635140877790516": 479, "2264": [389, 420], "22646133647326874": 479, "2264827111476982": 479, "22648881839710966": 479, "2265163003209506": 479, "22662622801631419": 479, "226e": 470, "2270": 394, "2272": 420, "2274": [396, 421, 446], "2276": 420, "2277": 420, "2278": 420, "2278975306934438": 479, "2279": [394, 421], "227e": 476, "228": [288, 294, 385, 391, 452, 457, 476, 481, 492], "2287": 420, "2289": 420, "229": [67, 476], "2290": 396, "2292": 421, "2294": 420, "2296": 420, "2297": 420, "22974080e": 490, "2298": 420, "22e": 481, "22nd": 415, "23": [77, 94, 175, 377, 381, 403, 415, 439, 448, 451, 453, 455, 460, 470, 473, 476, 479, 482, 484, 486, 500, 501, 523], "230": [429, 455], "2300": 420, "2304": 395, "2305": 420, "230542e": 476, "2307": [64, 65], "2308": 421, "231": 429, "2310": 420, "2313": 421, "2314": 421, "232": 62, "2320": [421, 476, 477], "2321": 421, "2323": 421, "2326": 421, "2327": [476, 484], "23273": 490, "233": 452, "2330": 421, "23306": 455, "2332": 484, "2334": 421, "2335": 421, "2338": 421, "2339": [448, 476, 500], "234": [429, 471], "234132519034915": 482, "23413252": 482, "2342": 421, "2343": 421, "234359264373779": 481, "2343e": 484, "2344": 421, "2345": 421, "2346": 421, "2347": 421, "235": [429, 445, 560], "2350": 422, "2351": 421, "23523": [145, 172, 210, 413, 451, 452, 460, 468, 477, 479, 481, 492, 498, 499, 511, 514, 574], "23526": [145, 210, 451, 452, 460, 468, 477, 479, 481, 492, 498, 499, 574], "235294117647083": 465, "2354": 421, "23559": [451, 452, 468, 477, 481, 498, 499, 521, 523, 524, 574], "2356": 421, "2357": 484, "2358": 421, "2359": 421, "23592": [451, 452, 468, 477, 481, 498, 499, 521, 523, 524, 574], "236": [429, 476], "2360": 421, "2362506e": 480, "23628": 490, "2365": 421, "2366": 421, "2367": 421, "2368": 421, "237": 446, "23734": 500, "2375": 421, "2377": 421, "2378": 421, "2379": 421, "238": 459, "2381": 421, "238298": 446, "2384": 446, "2385": 421, "239": [67, 461], "23905561": 480, "239439": 500, "239557417": 86, "2399": 476, "239e": 476, "23a": 61, "24": [25, 27, 52, 53, 86, 87, 91, 94, 380, 381, 394, 398, 432, 437, 446, 452, 455, 456, 470, 473, 476, 477, 482, 484, 489, 490, 498, 523, 540, 547, 556, 557, 558], "240": [102, 105, 109, 110, 121, 476, 477, 478, 512], "2400": 421, "2401": 421, "2404": 421, "2405": 422, "240e": 451, "241": 476, "2412": 421, "2414": 476, "2419": 446, "2428255": 478, "242835": 67, "243": [451, 478], "2431": 476, "2432": 455, "2433": 422, "2435": 422, "243742672227972e": 473, "244": [67, 429, 451], "2440": 476, "2441": 422, "244140625": 484, "2443672e": 480, "2444": 422, "2446": [422, 484], "2448": 422, "2449": 422, "245": 429, "2450": [422, 484], "245152": 461, "2454": 422, "2455": 422, "24579": 478, "2459": 422, "246": [429, 478], "2461": 422, "24611324074": 476, "2463": [397, 422], "2464": 422, "2465055e": 480, "2468": 422, "24685677e": 480, "247": [67, 429, 445, 450], "2470": 422, "2471938975366008": 302, "2472": 422, "2475": 422, "2476": 422, "2477": 422, "2478": 422, "2479": [422, 499], "248": 429, "2481": 422, "248122": 476, "2483": 422, "2485": 498, "2486": 422, "249": [22, 429], "2490": 422, "2491": 422, "2492": 422, "2493": 422, "2496": 422, "24968": 446, "2497": 422, "2498": 422, "2499": 422, "249965667724609": 481, "249e": 141, "24e": [476, 484], "25": [33, 52, 87, 91, 101, 140, 141, 151, 162, 175, 288, 294, 381, 394, 401, 415, 436, 443, 446, 447, 451, 452, 455, 461, 470, 471, 473, 476, 480, 482, 484, 500, 532, 533, 534, 537], "250": [482, 573], "2501": 422, "250185": 481, "2502": [422, 461], "2505": 422, "2505121": 97, "2505703": 471, "2509": 476, "251": [455, 459], "2510": 422, "251185": 500, "2511884200000000": 500, "2511886431": 478, "25162e": 446, "2518": 476, "251932": 476, "252": [429, 461, 476], "2520": 422, "2521": 422, "2523": 422, "2525": 422, "2528": 422, "253": [454, 484], "2535": 422, "2536": [422, 484], "2537": 484, "2538": 422, "254": 429, "2540": 422, "2546": 422, "254901960784338": 465, "25496": 500, "2551": 422, "2552": [422, 476], "2553": 422, "2555": 398, "2557": 422, "255750516626": 476, "2558": 422, "2559": 422, "256": [67, 432, 445, 539], "2560538e": 480, "2561": 422, "2562": 422, "2563": 422, "2564": 422, "2567": 422, "2568710719919036": 462, "257": [140, 454], "2574": 422, "25743553e": 479, "25763": 455, "257642": 476, "2579999": 489, "258": [445, 454, 461, 466, 538], "2580": 422, "25823909e": 478, "2585": 422, "2587": 422, "2589254117941673": 498, "259": [454, 500], "2591e": [447, 476], "2594": 422, "2595": 422, "2595e": 459, "259e": [141, 455], "25b": 17, "25e": 484, "25t_": 53, "25th": 403, "26": [19, 87, 91, 141, 381, 415, 443, 446, 448, 451, 452, 453, 454, 455, 456, 457, 459, 460, 461, 462, 463, 464, 465, 468, 469, 470, 471, 473, 475, 476, 477, 479, 481, 482, 483, 484, 485, 487, 489, 490, 491, 492, 498, 499, 500, 502, 530, 531, 538, 550, 568], "260": [432, 500], "2604": 422, "2609": 484, "261": [432, 500], "2616": 422, "26173": 455, "2619": 422, "262": [432, 455, 484, 500], "2620": 422, "262554796103245": 498, "2625818241224747": 479, "2627": 422, "262728": 489, "26272868097919794": 486, "2628525e": 480, "263": [140, 141, 455, 484], "2633e": 460, "2635": 422, "2635108e": 480, "2637": 422, "2639554729438709": 486, "264": [140, 432, 461], "2645": 422, "264675": 548, "26475": 457, "2648150": 97, "2649e": 479, "265": [32, 141, 391, 446, 455, 461, 484, 500], "2651": 422, "2654": 422, "266": [140, 141, 391, 454, 455, 461, 463, 467, 482, 484, 500], "2660": 422, "266192": 446, "26665050077722524": 486, "2667": 423, "267": [67, 141, 454, 455, 461, 484, 489], "2672": 423, "2673": 423, "26739753": 97, "2674": 423, "267e": 451, "268": [403, 455, 461, 465, 476, 484, 498, 500], "2681": 423, "2684": 423, "2685": 423, "268663733018811": 486, "2687": 423, "26883694": 500, "26887783978974283": 486, "2689": 461, "269": 500, "2692": 423, "269385": 476, "269627": 489, "2697": 423, "2699878e": 480, "26a": [39, 40, 50, 52, 53, 242, 277, 286, 476], "26e": [476, 484], "26th": 399, "27": [141, 383, 443, 451, 455, 461, 473, 477, 500, 532, 535, 536, 575], "270": [448, 455, 476, 484, 500], "2703": 423, "2705": 423, "27057337686547633": 486, "2707": 423, "2708": 242, "2709": 423, "27093776e": 480, "271": [451, 454, 455, 459, 500], "2711": 423, "2712": 423, "2713": 423, "2715": 423, "271777777777796": 448, "27177778": 94, "2718": 423, "2719": 423, "272": [454, 455, 476, 484], "2720": [398, 424], "27209": 500, "2723": 423, "2725": 423, "2726": 423, "2726e": 500, "2727": 423, "2727693": 489, "2727e": 451, "2728": 423, "2729": 423, "273": [83, 432, 449, 455, 500], "2730": 423, "2731": 423, "2733": 423, "2734": 124, "2735": 423, "2737": 423, "2738": 423, "2739": 423, "274": 482, "27409496735322464": 486, "2741": 423, "2742": 423, "2743": 423, "274509803921596": 465, "2746": 423, "2747": 423, "27473": 461, "275": [454, 476, 568], "2750": 423, "2751": 423, "2752": 423, "2753": 423, "2755": 423, "2756": 423, "2759": 424, "276": 432, "2761": 424, "2762": 424, "2764": 424, "2765": 424, "2767": 424, "2768": 424, "277": 454, "2771": 424, "2772": 424, "27727": 484, "2775": 424, "277522283785622": 462, "2776": 424, "2777": 424, "2777074437073429": 486, "2778": 424, "2779": 424, "278": [27, 432, 445, 454, 467, 476, 484, 560], "2781": 424, "2782": 424, "2783": 424, "2784": 424, "2785": 424, "2785e": 451, "2787": 424, "2788": 424, "2789": 424, "278e": 455, "279": 432, "2790": 424, "2791": 424, "2792": 424, "2793": 424, "2794": 424, "2796": 424, "2797": 424, "2798": 424, "2799": 424, "27e": 476, "27t20": 89, "28": [21, 24, 67, 94, 140, 141, 386, 415, 445, 449, 451, 453, 454, 455, 461, 463, 467, 473, 475, 476, 481, 482, 484, 488, 489, 500, 545, 555], "280": [67, 432, 445, 451, 454, 482, 539], "2800": [463, 484, 500], "2801": 424, "2802": 424, "2803": 424, "2804": 424, "2805": 424, "2808": 424, "2809": 424, "281": [454, 476], "2810": 424, "2811": 424, "28118133544922": 476, "2812": 424, "28120079": 476, "2815": 424, "2816": [424, 484], "2817": 424, "2818": 424, "2818047723094509": 486, "28183829312": 478, "282": [140, 141, 445, 560], "2820": 424, "2822": [424, 484], "2823": 424, "2825456e": 480, "2827": 424, "28275990e": 478, "2827988e": 480, "2828": 424, "2829": 424, "282951078740491e": 473, "282e": 476, "283": [432, 454], "2832": 424, "283218": 446, "283487": 476, "2837": 424, "28382603": 480, "2838398": 489, "28385358839966657": 486, "2839": 424, "284": [454, 476, 578], "2841": 424, "2842": 424, "28429": 461, "2845": 424, "2846": [424, 461], "285": [432, 454], "2852": 484, "28551": 141, "2859229": 478, "285f": [83, 88], "286": [432, 454, 478], "2861432787940619": 486, "286e": [455, 476], "287": [52, 53, 470], "2872": 425, "28720322": 97, "2874": [425, 500], "28755283551095173": 486, "2878662980210884": 303, "288": 124, "2880470e": 480, "2885": 425, "288e": 449, "289": [432, 454], "28905": 490, "2891": 425, "28958": 455, "2896": 425, "2897": 425, "28e": [102, 449, 459, 461, 477, 490], "29": [67, 141, 272, 392, 402, 415, 443, 446, 449, 452, 454, 455, 459, 461, 467, 469, 472, 473, 476, 482, 484, 485, 489, 500, 543, 558], "290": [433, 454, 462, 478], "2900": 484, "290098": 478, "2903": [425, 484], "2903e": 453, "290653": 561, "2907": 425, "291": 432, "2912": 425, "29158": 141, "29170324": 477, "291e": 500, "2922477": 97, "2923272203680937e": 473, "2924": 425, "2927": 425, "2929": 425, "293": 454, "2930": 476, "2931": 425, "2932": 425, "29355238360800506": 486, "2938": 425, "2939": 425, "2942": 399, "2943": 425, "2944": [400, 425], "2945": 425, "2947": 425, "2948": 425, "295": 432, "2950": 425, "2951": 425, "2953": 461, "29553683e": 478, "2956": 425, "29585273e": 490, "2959": 484, "295e": 476, "296": [432, 470], "2965": 425, "2966": 425, "2967": 425, "297": [446, 470], "2971e": 476, "2974": 425, "2976": 425, "2978e": 447, "298": [454, 461, 467, 476], "2981": 425, "2984": 425, "29882214027996945": 486, "299": [432, 454, 476], "2990": 425, "2991": 425, "2992": 425, "2993": 425, "2995484265169": 474, "2996": 500, "2998": 425, "2999": [425, 476], "299940468335294": 461, "299995937905366": 461, "299e": 476, "299t": 53, "29t20": [469, 473], "29t21": 473, "29t22": 473, "29t23": 473, "29th": 415, "2_": 19, "2d": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 140, 141, 146, 147, 148, 149, 150, 152, 153, 154, 156, 159, 160, 161, 162, 163, 164, 165, 172, 182, 183, 190, 191, 192, 193, 195, 200, 201, 203, 204, 205, 210, 232, 383, 388, 393, 396, 397, 398, 409, 417, 423, 436, 437, 438, 445, 455, 457, 458, 461, 482, 483, 500, 510, 513, 524, 525, 526, 538], "2degx2deg": 463, "2e": [197, 446, 448, 449, 463, 464, 473, 476, 479, 484], "2e3": [197, 482], "2e6": 490, "2f": [366, 446, 452, 486, 499, 576], "2fhl": [58, 71, 422, 434, 435, 476, 500, 509], "2hwc": [59, 72, 422, 428, 436, 476, 509], "2k": [102, 109], "2lcuolex": 473, "2m": [242, 277], "2nd": [60, 402], "2nd_psr_catalog": 60, "2pc": [60, 69, 73, 476], "2pc_catalog_v04": 60, "3": [19, 20, 27, 28, 31, 32, 33, 37, 38, 42, 45, 46, 50, 51, 52, 53, 54, 59, 63, 67, 77, 80, 83, 85, 86, 87, 91, 94, 96, 102, 104, 105, 109, 110, 111, 115, 117, 123, 124, 141, 146, 147, 148, 149, 150, 151, 152, 153, 154, 156, 157, 159, 160, 161, 162, 163, 164, 165, 175, 178, 190, 191, 192, 193, 194, 195, 196, 197, 198, 200, 201, 202, 203, 204, 205, 214, 216, 225, 232, 235, 243, 266, 272, 274, 276, 277, 285, 286, 287, 292, 302, 303, 324, 333, 354, 365, 370, 372, 374, 377, 378, 380, 381, 383, 388, 389, 391, 392, 393, 394, 396, 401, 402, 403, 408, 413, 414, 416, 417, 418, 420, 421, 426, 428, 430, 433, 434, 435, 436, 437, 438, 439, 441, 442, 446, 447, 448, 449, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 467, 468, 469, 470, 471, 473, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 489, 490, 491, 492, 498, 499, 500, 501, 502, 504, 507, 508, 511, 512, 516, 518, 520, 521, 523, 524, 527, 530, 531, 532, 533, 534, 535, 536, 537, 538, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 561, 562, 563, 564, 565, 566, 567, 568, 569, 572, 573, 575, 576], "30": [24, 52, 67, 83, 96, 102, 112, 140, 152, 191, 302, 303, 384, 385, 390, 397, 404, 415, 417, 445, 446, 447, 448, 451, 452, 453, 454, 455, 456, 457, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 473, 475, 476, 477, 479, 481, 482, 483, 484, 485, 486, 487, 489, 490, 491, 492, 498, 499, 500, 512, 518, 523, 524, 531, 532, 540, 546, 549, 550, 551, 552, 554, 559], "300": [74, 87, 91, 286, 445, 454, 456, 460, 463, 464, 467, 470, 476, 490, 560], "3000": [387, 476, 526], "30000": 476, "3000000": 559, "30000000": 559, "3000020211954284": 461, "3000e": 447, "3001": 425, "30015e": 446, "3002": 425, "3003": 484, "3004625872247901": 460, "3005": 425, "3006": 500, "3006942": 97, "3007": 425, "301": [432, 454], "3011061699260256": 486, "3012": 425, "3013": 476, "301668796295": 476, "302": 454, "3020791585772495": 302, "30287": 455, "3028e": 484, "302e": 476, "303": [451, 454, 476], "3030": 425, "3032": 425, "3034": 476, "3035": 425, "3037": 425, "3037632e": 480, "3038": [425, 500], "3039": 425, "304": [447, 469, 470, 473, 474, 476, 486, 500, 540], "3041": 425, "3042": 425, "3043": 484, "3045": 425, "3046875": [477, 484], "3049664466089965": 303, "304_steadi": 447, "305": [67, 454], "3051": 425, "3051827": 97, "3051852": 97, "3051856": 97, "3052": 425, "3053": 425, "30535345877453707": 486, "3054": 425, "3054538213469855": 462, "30561": 141, "3058": 425, "3058422e": 480, "305e": 476, "306": [432, 445, 470, 560, 575], "3060": 425, "306196370000000": 500, "3063": 425, "3069": 425, "306e": 476, "307": 454, "3070": 425, "3071": 476, "3072": 425, "3074": 425, "3075": 401, "3076": 425, "307e": 476, "308": [454, 461, 534], "3080": 425, "3081": 425, "3083": 425, "3085": 425, "3086": 425, "3088": 425, "3089": 425, "3091": 425, "3092": 425, "30997": 500, "30a": 277, "30d00m00": 404, "30e": [447, 480, 484], "30t00": 473, "30t01": 473, "30t02": 473, "30th": 389, "31": [140, 141, 386, 387, 400, 401, 413, 440, 447, 449, 451, 452, 454, 455, 459, 462, 465, 469, 470, 473, 476, 477, 481, 482, 484, 487, 491, 498, 500, 550, 551], "3100": 425, "3106": 425, "31067517": 476, "3107": [476, 500], "311": [534, 576], "3110": 426, "3111": 426, "3112": 426, "3113": 426, "31139074e": 479, "3114": 426, "311489174710791e": 500, "3116": 426, "3117988e": 480, "31186857659616535": 486, "3119611261122878": 486, "312": 432, "3122": 427, "3123": 427, "3124": 427, "3125": 427, "3126": 427, "3127": 427, "3129": 427, "313": [454, 460], "3130": 427, "3131": [428, 484], "3135914081482271": 486, "3136": 428, "313714614138": 477, "3138": 428, "314": [437, 470], "3140": 428, "3141": 428, "3145": 428, "3148": 428, "315": 476, "3152": 428, "3153": 428, "3155": 428, "315767542862533": 498, "3158": 428, "316": [445, 454, 490, 491, 539], "3162": 428, "316227": 476, "316227766016838": 481, "3165": 428, "316687": 532, "3168": 428, "3169": 428, "317": [432, 454], "3173": 428, "3178": 428, "317a": 277, "317e": [447, 476], "318": [432, 445, 450, 539], "3180": 428, "3182": 428, "31834": 141, "3185": 428, "3189697265625": 451, "31898": 141, "319": [433, 490], "3191": 428, "3195": 500, "3197": 428, "319725": 489, "3199": 428, "32": [83, 140, 191, 445, 451, 455, 457, 459, 466, 470, 473, 481, 482, 500, 548, 557], "320": [102, 105, 109, 110, 121, 476, 477, 478, 484, 512], "3202": 428, "3207": 428, "3208": 428, "32095": 500, "321": 465, "3211": 428, "3216": 428, "3217": 428, "3219": 428, "322": 454, "3222": 428, "3228": 428, "3229": 461, "323": 454, "3230": 428, "3232943": 344, "3233356": 344, "32377509405904137": 96, "323779": 292, "3237948931463171": 486, "3238": 428, "3241": 428, "3243": 428, "3246": 428, "32465247": 485, "3254": 428, "3257": 428, "3257398688486": 470, "3258": 428, "325e": 452, "326": 432, "3262": 428, "32684": 500, "32684833": 489, "326849": 543, "327": 461, "3272": 428, "3276": 428, "3277": 428, "3278": 428, "3279": 428, "3279955e": 480, "328": [445, 461, 560], "3281": 428, "3283": 428, "3284": 428, "32843": 500, "32847": 446, "3285": 428, "329": [96, 302, 303, 445, 469, 470, 473, 476, 486, 514, 560], "3293": 428, "3299": 476, "329e": [451, 476], "33": [473, 474, 475, 479, 482, 500, 514, 542, 554, 556], "330": [433, 454, 484], "3301": 428, "33013e": 446, "3302": 428, "3302565e": 480, "3303": 428, "330376": 67, "3304": 428, "3305": 428, "330505": 489, "33055e": 446, "3306": 428, "3307": 428, "3308": 428, "3309": 428, "3310": 428, "3314": 428, "33164865722698683": 486, "3319": 428, "3319831545301117": 302, "332": [67, 433, 490], "3320": 428, "3323": [428, 477], "332525": 476, "3328": 428, "332e": [451, 455, 461], "332f": [30, 31, 32, 33], "333": [135, 295], "3330487": 97, "3331": 500, "3331761": 97, "3333": 428, "33333333": 377, "3333333333333344": 465, "3335": 428, "33368e": 446, "3337": 428, "3338": 428, "334": [124, 445, 488, 490, 560], "3342": 428, "3343": 428, "3346": 428, "3347": 428, "33484": 446, "3349": 428, "3349654391": 478, "334e": 476, "335": 433, "3353": 428, "3357": 428, "3358": 428, "335e": 449, "336": [465, 476], "3363": 428, "3364130e": 480, "336444e": 476, "336606": 446, "3368855e": 480, "3369": 428, "337": [433, 454], "3374": 428, "3377": 428, "33787": [96, 486], "33788": [96, 141, 486], "33789": [96, 486], "3379": 428, "33790": 486, "337906": 452, "33791": 486, "33792": 486, "33793": 486, "33794": 486, "33795": 486, "33796": 486, "33797": 486, "33798": 486, "33799": 486, "338": [433, 476], "33800": 486, "33800122": 97, "33801": 486, "3380311e": 480, "3381": 428, "339": [433, 451, 465], "3390": 428, "3392": 428, "3393": 428, "3395": 428, "3397": 428, "339835555384604": 486, "3398360": 480, "33983991887701287": 96, "3399": 428, "33e": [457, 471], "34": [52, 53, 67, 416, 445, 446, 461, 469, 472, 473, 477, 482, 484, 500, 547, 549], "34005": 446, "3402": 428, "3403": 428, "340391": 500, "3404": 428, "34047": 446, "3406": 428, "3409": [94, 428], "341": 446, "3413": 428, "3416": 428, "3418": 428, "342": 433, "3420": 428, "3423": 428, "3426": 428, "3428": 428, "343": [445, 560], "3434": 428, "3438": 428, "3439": 428, "343e": 449, "344": 476, "344238": 500, "3443842": 489, "3445": 428, "3446": 428, "3447": 428, "3449": 428, "344e": 67, "345": [293, 446, 484], "3453": 428, "3454": 428, "345692": 500, "3458": 428, "346": 484, "34613054105945": 462, "346488e": 476, "3466": 428, "3468": 428, "347": [433, 448], "3471": 428, "3474": 428, "348": [36, 37, 433, 451], "3480": 428, "3481e": 459, "3488": 428, "348e": [67, 476], "3491": [428, 455], "3493": 140, "34932": 141, "349530550405035": 479, "349530725254468": 479, "34953073943366": 479, "34953075819191": 479, "34953077463306": 479, "34953079334042": 479, "349530807529028": 479, "349535814693404": 479, "349536723056637": 479, "349537158300407": 479, "349537804239922": 479, "34953807814367": 479, "34953910575007": 479, "34953932636892": 479, "349542158419318": 479, "349559366703698": 479, "349655": 478, "34971209244579": 479, "349724940685938": 479, "3499075e": 480, "349e": 455, "34e": [476, 484], "35": [67, 394, 401, 413, 451, 469, 473, 476, 479, 487, 489, 541, 553], "350": [465, 471, 478], "350105": 461, "3502": 476, "35030398537787": 479, "3503706026275275": 486, "3504": 500, "35052105086856": 479, "350556388466543": 479, "350d": 465, "351": [433, 476, 500], "3514e": 499, "3515": 428, "352": [433, 476], "3521": 448, "3523": 428, "3529": 428, "3529411764705888": 465, "353": [24, 433, 500], "3535": 430, "353592500058824e": 498, "3536": 446, "353e": 461, "354": 465, "3544": 428, "35569283": 480, "355804": 500, "3559": 428, "356": 500, "3561": 428, "3568": 428, "357": [476, 500], "35722435185": 476, "3576e": 448, "358": [461, 476, 500], "3583": 461, "3584": 428, "359": [433, 461, 476, 500], "3590188e": 480, "3592": 428, "3599": 463, "359e": 500, "36": [67, 86, 147, 322, 448, 461, 463, 470, 476, 477, 480, 500, 544, 546, 559], "360": [391, 482, 502], "3600": [454, 463, 464, 482], "36014": 459, "360413": 544, "36073833513766157": 486, "361": [67, 433], "3619e": 499, "362": 560, "362270": 452, "36228879": 500, "36273": 500, "363472509034498": 486, "3639946": 471, "364": 433, "3659253e": 480, "366": [478, 499], "366486": 478, "36669663417038234": 486, "3669": 430, "367": [433, 465, 484], "3674884": 476, "368": 117, "36834038301420274": 486, "368346217294295": 96, "3684": 430, "3689322e": 480, "369": 433, "3690": 500, "3699": 430, "36e": [475, 476], "37": [446, 447, 452, 454, 457, 478, 479, 490, 563, 568, 576], "370": [465, 476, 484], "37058": 141, "371": [433, 445, 472], "3710784e": 480, "3712": 430, "3713": 430, "3715810e": 480, "3718745": 97, "372": [35, 124, 500], "3720": 430, "3721e": 453, "3722": 430, "3725490196078436": 465, "3728": 430, "373": 461, "3733": 430, "373892759762174e": 473, "3739292e": 480, "374": [463, 465], "3740": 430, "37455141": 500, "3748": 430, "375": [433, 482], "3750": 461, "37506": 500, "37517": 455, "3752": 430, "3759377929871826": 486, "376": 67, "3760": 430, "3761": 430, "3765": 446, "3777": 430, "37773": 455, "3779": 500, "3783": 430, "3784": 140, "379": [433, 451], "3792": 484, "3796": 430, "3797": 430, "38": [22, 67, 446, 448, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 468, 469, 470, 471, 475, 476, 477, 479, 481, 482, 483, 484, 485, 487, 489, 490, 491, 492, 498, 499, 500, 559, 564, 566, 567, 569], "3802": 430, "3804": 430, "3806": 430, "381": 484, "3810": 430, "3812": [476, 500], "3812120e": 480, "3812160e": 480, "38143003": 97, "3817": 430, "38258165e": 478, "3829": 500, "382e": 451, "383": [67, 433, 476, 482], "3833": 430, "3837": 430, "383e": 67, "384": 478, "3841385": 478, "3842": 430, "3846": 430, "3848912826152664e": 500, "3856": 430, "385e": 141, "3860": 430, "3862": 439, "387": [433, 500], "3872": 476, "3873": 430, "3874": 430, "3876": 430, "387834": 500, "388": [445, 479, 488, 538], "388405": 500, "3885947175689592": 486, "3886270e": 480, "3887": 430, "389": 382, "3892": 430, "3895": 430, "3898": 430, "389e": 500, "39": [17, 18, 21, 22, 24, 25, 27, 59, 141, 454, 475, 476, 482, 490, 538, 559, 561, 562, 565], "390": 428, "3904": 430, "39042": 86, "3905": 430, "3906": 430, "391": 476, "3915": 430, "3918": 430, "392": [433, 452], "39200283e": 473, "392156862745098": 465, "39224": 455, "3925": 439, "393": [206, 207, 445, 493], "3933": 430, "3935": 448, "3936": 430, "394": 433, "3941": 430, "3945": [448, 476], "3947637541758": 470, "394765638937866": 498, "3948": 431, "395": 433, "3950": [402, 439], "395004": 500, "3956": 439, "3959": 431, "396": 433, "3962942e": 480, "3966": 431, "397": 451, "3970": 403, "397035933646679e": 473, "39728": 500, "3975": 431, "3979": [431, 574], "397918129147546": [413, 574], "39791813": [413, 574], "398": [433, 457, 459], "3981": 500, "39810717055": 478, "3981075200000000": 500, "3983": 431, "3986": 431, "3987": 431, "3988": 431, "398e": 476, "3990": 431, "39e": 476, "3d": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 46, 47, 147, 153, 160, 161, 163, 172, 280, 282, 383, 386, 387, 388, 392, 393, 396, 397, 398, 409, 417, 418, 419, 421, 422, 423, 424, 435, 436, 437, 445, 446, 447, 449, 451, 452, 455, 456, 457, 461, 462, 463, 464, 465, 466, 469, 470, 473, 477, 479, 480, 481, 482, 483, 484, 485, 486, 489, 490, 491, 498, 499, 510, 512, 513, 514, 521, 526, 571, 573], "3d33m15": 67, "3dataset": 460, "3e": [20, 124, 130, 461, 464, 467, 468, 471, 473, 476, 484], "3e4": 490, "3e5": 490, "3e6": 559, "3e7": 559, "3f": [124, 462, 575, 576], "3fgl": [61, 67, 74, 227, 265, 400, 429, 432, 434, 435, 436, 445, 449, 476, 485, 500, 509, 528, 560], "3fgl_name": 71, "3fhl": [62, 75, 86, 126, 128, 132, 283, 397, 435, 436, 449, 455, 463, 465, 476, 482, 483, 484, 485, 490, 500, 509, 511], "3fhl_data_fermi": 460, "3fhl_dataset": [283, 460, 483], "3fhl_model": [283, 460, 484], "3g": [475, 476], "3hwc": [63, 76, 428, 439, 476, 509], "3ml": [395, 490], "3pc": [64, 69, 77, 476], "3pc_catalog": 64, "3rd": 64, "3rd_psr_catalog": 64, "4": [19, 20, 22, 26, 28, 29, 30, 31, 32, 33, 35, 36, 37, 38, 39, 40, 52, 54, 61, 67, 83, 87, 91, 101, 102, 105, 109, 110, 114, 116, 127, 132, 141, 144, 149, 152, 160, 172, 175, 191, 192, 193, 194, 195, 196, 201, 204, 205, 217, 218, 221, 225, 227, 228, 229, 233, 237, 239, 240, 242, 246, 248, 250, 251, 252, 257, 262, 264, 265, 266, 267, 270, 274, 276, 283, 284, 322, 364, 377, 378, 380, 381, 389, 391, 394, 397, 401, 402, 413, 416, 425, 427, 428, 429, 432, 434, 435, 438, 446, 447, 448, 449, 451, 452, 453, 454, 455, 456, 457, 459, 460, 461, 462, 463, 464, 465, 467, 468, 469, 470, 471, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 487, 489, 490, 491, 492, 493, 498, 499, 500, 502, 507, 508, 509, 523, 526, 527, 531, 532, 535, 540, 545, 558, 559, 567, 573, 574, 575, 576, 577], "40": [59, 109, 110, 384, 429, 448, 449, 451, 452, 459, 461, 469, 470, 473, 482, 485, 489, 500, 523, 546, 549, 554, 559, 575], "400": [132, 455, 456, 461, 465, 476, 482, 500, 568], "4000": 439, "40000": [172, 499], "400056": 446, "40050506591797": 476, "40051035": 476, "40071076": 97, "400x200": 465, "401": 452, "40112": 500, "4013": 439, "4014": 439, "4015": 439, "4017": 439, "4018": 439, "401e": 455, "402": 152, "4022": 439, "40235": 459, "4024": 439, "4025": 439, "4026": 439, "402712": 476, "403": [433, 461, 484], "4035": 500, "4037": 439, "404": 300, "4043": 439, "4044": 439, "404752": 556, "40481": 459, "405": 385, "4051": 439, "40525": 459, "4054": 439, "4058": 439, "406": 500, "40611": 500, "4067": 439, "40671": 457, "40672": 457, "407": 476, "4071": 439, "4073": 439, "4073799600000000": 500, "4075": 439, "4076": 439, "4079": 439, "408": [451, 482], "4080": 439, "4080942e": 480, "40822469e": 485, "4083": 439, "4084": 439, "4088": 439, "4089": 439, "40919": 455, "4093": 439, "409416": 500, "4095": 439, "4098": 439, "40a": 59, "40deg": 489, "41": [67, 86, 94, 391, 476, 477, 482, 490, 498, 500], "410": 465, "41009347393684": 477, "4103": 439, "4105": 439, "4106": 439, "4107": 439, "4108": 439, "411": 500, "4110e": 476, "4112": [124, 439], "4113": 439, "4115": 439, "41176470588239": 465, "4119": 439, "411e": 449, "4120719e": 480, "412165": 461, "412779907405": 476, "413": 461, "414": 433, "4140541880588": 462, "41415047": 97, "4142135623730951": 117, "41449": 455, "414e": 455, "415": [433, 550], "4151e": 459, "4155": [476, 500], "41584196": 474, "416": [67, 459, 476, 481], "4161e": 459, "417": 476, "418007850646973": 413, "41803": 457, "41866": 490, "419": 484, "4191": 442, "41924": 140, "4198250e": 480, "41995": 455, "419e": 476, "41e19": [19, 20], "42": [25, 27, 94, 152, 344, 391, 454, 461, 470, 476, 480, 481, 482, 486, 489, 527, 530], "42050348": 477, "4208": 442, "4209": [442, 455], "421": [433, 465, 500, 573], "4210": 442, "4212": 442, "4212028e": 480, "4213": 442, "4215": 442, "4216": 442, "4217": 443, "4219": 442, "422": [39, 40], "4220": 459, "4221": 440, "4225498e": 480, "4225631e": 480, "42267": 461, "4226731": 461, "423": 451, "4231": [440, 442], "42361": 455, "42399798": 461, "423e": 124, "42400": 461, "4242": 442, "4243": 442, "4245": 442, "42463": 490, "424650": 477, "42474": 500, "425": 500, "4252": 442, "426": 476, "4264": 442, "4268": 440, "427": 452, "4275": [440, 442], "4277": 442, "4280": 442, "4281": 476, "4282": 442, "4288": 442, "428e": 470, "429": 451, "4294": 442, "42e": [479, 484], "43": [276, 344, 391, 452, 461, 470, 477, 482, 500, 527], "430": 476, "43000": [52, 53], "4301": [440, 442], "4303606e": 480, "4305": 442, "431": [136, 385, 465, 477], "431023787974766e": 498, "43113": 446, "43137254901962": 465, "4313847458879893": 486, "4319": 500, "43197": 455, "4324": [440, 442], "4326": 442, "432878": 476, "432e": 476, "433": 455, "4336": [440, 442], "43366": 568, "4338e": 447, "434": [445, 476, 560], "43416595": 471, "4344": 440, "4346": 442, "435": 433, "4350": 442, "4351637481047363": 486, "4352": 442, "435763": 566, "4359": [440, 442], "435e": 451, "435l": 476, "436": 433, "4360750e": 480, "4369": 442, "437": [476, 484], "4370": 442, "4373240195300975": 486, "438": 484, "4380": [441, 442], "4381": [405, 443], "4382": 441, "439": 451, "4393": [441, 442], "4394": 441, "4395": 442, "4397": [441, 442], "439e": 476, "43e": 484, "44": [21, 50, 86, 344, 447, 454, 469, 471, 482], "4402": 442, "44055555555555603": 94, "4406": 442, "4408": 443, "4409": 442, "4412": [441, 442], "4417": 442, "4418": 442, "4420073e": 480, "4420222e": 480, "4428": 442, "4428634e": 480, "443": 451, "4430": 442, "44319": 477, "4432": 443, "4435": [441, 442], "4444": 442, "444e": 460, "445": 455, "4450": 500, "44528685": 500, "4453": [441, 442], "44573": 94, "4458": 442, "4459": 442, "446": [484, 576], "4466": [442, 459], "4466832000000000": 500, "4466835921": 478, "447": [433, 445, 493, 560], "44742": 500, "44749e": 446, "44755": 457, "447552": 446, "447e": [461, 476], "447l": 17, "448": 465, "4480056e": 480, "44802852": 500, "4481": 476, "4485": 443, "4486": [441, 442], "448e": 141, "4491": [404, 443], "4495": 442, "4497": 477, "4498": 140, "44e": 413, "45": [51, 54, 445, 450, 451, 454, 460, 471, 473, 477, 482, 483, 485, 502, 527, 532, 533], "450": 484, "4500": [441, 442], "4501": 443, "4504": 442, "4506": 442, "4508": 442, "4509803921569": 465, "4510": [442, 459, 500], "4515": 475, "4517490659800822": 468, "452": [445, 560], "4520": 441, "4521": 442, "4524": 441, "452687": 541, "453": [447, 484], "454": 451, "4540": 443, "4545": 442, "4546": 443, "455": [433, 449], "45515263080596924": 448, "45517415e": 478, "455870": 461, "455e": 67, "456": 433, "4561": 443, "45646095": 471, "4567": 443, "457": [277, 433, 484], "457251": 500, "4574": [441, 443], "4575": 94, "4578": 441, "4579e": 446, "458": [465, 476], "4584": 443, "45856": 500, "4586649826004114": 302, "459": [433, 477, 484], "4593": 441, "45935": 500, "4595": 443, "4599": 443, "45\u00ba": 491, "46": [53, 67, 109, 110, 391, 470, 476, 482], "460249999": 86, "4608": 443, "461": [433, 473], "4615": 443, "46186956763267517": 448, "4619": 441, "462": [433, 451], "4620": [405, 443], "4620e": 476, "46225": 455, "4628": 443, "463": 500, "4631": 441, "4635": 443, "4638": 443, "4638e": 456, "464": 467, "4642048e": 480, "4647544e": 480, "465": [445, 451, 469, 472, 476, 484], "4653": 441, "4657": [441, 443], "465784": 500, "4660": 443, "4664": 443, "4668": 443, "4669": 443, "4671": 443, "46711": 455, "4675e": 469, "4677": [441, 443], "468": [471, 476], "4681": 441, "4684": 448, "468805426856864e": 52, "468e": 67, "4697": 443, "46e": [83, 456, 461], "47": [67, 470, 473, 476, 482, 500], "470": [445, 484, 488], "4703": 443, "470588235294144": 465, "4711": 500, "4712": 455, "4714": 443, "4721": 441, "4726": 443, "4728": 441, "4729": 443, "473": [433, 451], "4738": 443, "474": 433, "4740": 443, "4741": 443, "474e": 476, "475": [433, 484], "4750": 443, "4753": [441, 443], "475468": 446, "4755": 441, "4759": 443, "477": [445, 459, 466], "4770": 443, "4772": 441, "47797": 455, "477e": 476, "478": 433, "47802": 486, "47803": 486, "47804": 486, "47827": 486, "47828": 486, "47829": [82, 486, 492], "4783": 443, "4785": 443, "47e": 476, "48": [33, 172, 416, 445, 459, 460, 482, 484, 490], "480": [448, 476, 484], "4802": 443, "4805": 443, "480554966154": 459, "48068": 455, "4808": 443, "480e": 476, "481": [382, 433], "4810": 443, "4814": [443, 500], "4817": 443, "48180882997916e": 498, "4819444e": 480, "482": 446, "48215685": 97, "4822": 443, "48248": 476, "4825": [476, 500], "4828": 443, "4829": 443, "4834": 443, "4834488e": 480, "4835": 443, "4837": 443, "484": 433, "48442": 272, "4845": 443, "4847": 443, "4848653": 476, "4849": [443, 476, 500], "484e": 141, "485": 433, "4850": 443, "4851": 443, "4854": 443, "485p": [36, 37], "487": [433, 498], "4875723e": 480, "4876": 441, "4879": 443, "4881": [251, 252], "4886": 443, "48871": 446, "488z": 27, "489e": 476, "48e": [476, 484, 499], "49": [53, 455, 459, 476, 484, 490, 498, 526], "490": 25, "4902": 443, "4904": 443, "4904078e": 480, "49078e": 446, "4913": 441, "49152": 490, "4917": 443, "493": [25, 445, 495], "493043594026": 459, "4933657e": 480, "4936": [441, 443], "4937": [441, 443], "4940": 443, "49417615": 86, "4942": 443, "494e": 451, "4958277": 97, "496021": 489, "4963": 500, "4966": 500, "4968236e": 480, "4970": 443, "4971": 443, "49716789e": 478, "4971704e": 480, "4973": 443, "4975": 443, "497609": 537, "497741": 562, "4978": 443, "498": 500, "498784": 476, "4989": 443, "498e": [476, 500], "499": [67, 450, 476], "49919925926": [237, 569], "4992": 443, "4994": 443, "49972277488662115": 486, "4999833830074": 461, "4d": 396, "4e": [471, 476, 484, 559], "4f": [574, 575, 576], "4fgl": [65, 78, 266, 267, 400, 420, 422, 428, 430, 443, 445, 447, 460, 476, 483, 485, 509, 528, 560], "4lkn4lhr": 473, "4th": [389, 415], "4yr_catalog": 61, "5": [16, 17, 18, 19, 20, 21, 22, 24, 25, 26, 27, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 50, 52, 53, 67, 83, 87, 91, 102, 103, 105, 108, 109, 110, 117, 121, 124, 125, 127, 129, 131, 140, 141, 149, 150, 151, 152, 153, 154, 159, 160, 161, 162, 163, 172, 175, 190, 191, 192, 193, 195, 196, 197, 200, 201, 202, 203, 204, 205, 217, 218, 221, 224, 225, 227, 228, 229, 232, 233, 235, 237, 239, 240, 242, 246, 248, 250, 251, 252, 257, 262, 264, 265, 266, 267, 270, 272, 274, 277, 300, 304, 336, 367, 368, 372, 374, 377, 378, 381, 382, 384, 388, 389, 391, 392, 393, 394, 396, 400, 401, 402, 408, 413, 416, 418, 420, 421, 428, 430, 432, 433, 435, 436, 437, 441, 446, 447, 448, 449, 451, 452, 453, 454, 455, 456, 457, 459, 460, 461, 462, 463, 464, 465, 467, 468, 469, 470, 471, 473, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 489, 490, 491, 492, 498, 499, 500, 502, 507, 508, 511, 518, 521, 523, 524, 525, 526, 527, 531, 532, 533, 534, 536, 540, 541, 546, 548, 549, 550, 554, 555, 559, 562, 563, 564, 565, 567, 573, 575, 576], "50": [87, 91, 94, 111, 115, 344, 384, 404, 446, 452, 453, 457, 459, 467, 469, 470, 471, 476, 477, 480, 482, 484, 485, 486, 489, 490, 492, 498, 499, 500, 523, 526, 534, 576], "500": [192, 193, 195, 201, 204, 205, 455, 461, 463, 464, 482, 489, 490, 500, 526, 531], "5000": [19, 20, 87, 91, 502, 526], "5000056568267741": 461, "5000e": 454, "50022222": 94, "500249": 476, "5004": 461, "5015": 443, "502": 433, "5029747": 453, "503": 433, "5030": 500, "504": 28, "5040": 443, "5044": 443, "5049": 500, "505": [67, 476, 477], "505523195905": 459, "506": 433, "5066": 476, "507": 433, "5074834": 97, "5078068": 97, "50807568877": 476, "509587": 478, "509632": 478, "509e": 476, "50e": [454, 484], "51": [52, 53, 67, 141, 457, 459, 465, 498], "510": [433, 478, 493], "5106": 500, "51095676": 471, "511": [67, 433], "51179": [378, 578], "512": 451, "5126": 67, "51265256406349": 470, "513": [413, 482], "51312": 461, "5144": [94, 446], "514854": 489, "51544": [454, 463, 464, 467], "5162628e": 480, "5163273": 489, "5172328235892": 470, "517743": 498, "518": [433, 484], "5188338e": 480, "51910": 94, "5192420e": 480, "5194769e": 480, "51948705e": 485, "51958055e": 478, "52": [53, 124, 172, 446, 448, 455, 457, 459, 470, 476, 489, 492, 500], "5205": 490, "52074074074": 83, "521": [434, 445, 501], "523": [434, 482, 570], "5230376e": 480, "52318414": 97, "523681640625": 451, "5237647004325865": 486, "52389101852": 476, "523a": [242, 277], "523b": 22, "523e": 452, "524": [434, 476, 484], "5248": 500, "524807800000000": 500, "52587": 455, "526": 434, "52607": 500, "527": [434, 490], "527e": 452, "528": [451, 484], "52826166": 476, "5283": [476, 500], "52839183495354": 470, "5286e": 453, "529": 434, "5292": 477, "529411764705883": 465, "5297030e": 480, "529874": 498, "52e": [471, 498], "53": [28, 461, 470, 473, 487, 531, 540], "530": 434, "53025": 94, "531": [434, 465], "531402": 549, "53213": 461, "5324402": 97, "5326744": 97, "5326841": 97, "5326859": 97, "533": 476, "53343": [413, 468], "53344": 468, "53345": 468, "53346": 468, "53347": 468, "53348": 468, "5345275e": 480, "53482e": 446, "535": [434, 476], "535058216604496": 277, "53566": 446, "53616": 242, "53849342472254e": 473, "539": [277, 484], "5390438": 97, "5392e": 469, "539397": 476, "53945": 469, "53946": [473, 474], "539e": 476, "53e": [413, 454], "54": [67, 448, 451, 476, 480], "5400": 477, "5407363826067": 511, "5407363826070": 511, "541": 434, "5411": 446, "5427520e": 480, "54282": 455, "5438860e": 480, "544": [434, 476, 490], "545": 434, "545559": 540, "54566271": 575, "545y": [39, 40], "546": 434, "5461745": 97, "54676837e": 479, "54682": [455, 476, 490, 500], "547": [434, 445, 446, 476], "54721e": 446, "5477": 476, "54772": 476, "54892": 455, "548e": 476, "549": 434, "549007644529844e": 498, "549019607843138": 465, "5492925785381": 470, "5499840": 489, "54e": 484, "55": [39, 42, 87, 91, 210, 470, 471, 479, 483, 487], "550": 451, "55027": 141, "55045": 476, "5508e": 453, "551": [476, 538], "55197": [378, 578], "552": 476, "552007": 545, "55275": 490, "553": [447, 476], "5531e": 447, "553337": 500, "5538": 500, "5538942e": 480, "553e": 455, "554": 67, "55410": 476, "5545130e": 480, "55461982e": 478, "554e": 449, "556": [434, 451, 576], "5561760e": 480, "556852": 498, "557": [434, 484], "55775": 476, "557801": 550, "558": 434, "558338072878877": 498, "559": 434, "5594": 83, "56": [446, 452, 471, 482, 491], "560": [37, 476], "5606985": 471, "5607778e": 480, "56093766": 97, "56141": 476, "561643": 467, "562": 476, "5622482": 97, "56234132519": 478, "56353481": 575, "563e": [451, 461], "564": [292, 434, 451, 484], "564139576925786": 462, "5644": 477, "564e": 470, "565": 434, "56506": 476, "565095": 446, "566e": 451, "56711": 500, "5686274509803928": 465, "56871": 476, "569": [434, 445, 458], "56922612": 575, "5692809e": 480, "56973": 500, "57": [33, 455, 461, 471, 482], "57011": 461, "571": 476, "57185": 511, "5719922e": 480, "571e": 476, "572": 452, "57233": 500, "57236": [455, 476, 490, 500], "572e": [449, 455], "573": [67, 451, 500], "57300957": 175, "5754970e": 480, "576": 484, "5760": 500, "57602": 476, "5763635e": 480, "5768262e": 480, "576e": 455, "577398": 490, "5779092e": 480, "578": [476, 478, 575], "5782814": 478, "579": 476, "579178801616083e": 473, "57944657408": 476, "57967": 476, "57e": 476, "58": [413, 416, 454, 459, 462, 476, 481, 482, 484, 492, 498], "580": 576, "581": 452, "5819e": 453, "582": 434, "583": [445, 472], "58332": 476, "5833e": 476, "5835918e": 480, "583e": 455, "5842497e": 480, "585": 476, "58540702": 97, "5867488e": 480, "58693695": 471, "58698": 476, "588084": 538, "5882352941176467": 465, "588e": 476, "58909": 470, "58926": 455, "5892966e": 480, "5895": 448, "58999": 237, "58e": [467, 476, 478], "59": [83, 457, 467, 468, 476, 481, 492, 500], "590": 451, "59000": [237, 569], "59001": 237, "59063": 476, "5908": 476, "590835686434463": 486, "591": [434, 476], "59100": [568, 569], "59123": [562, 563, 564], "5915030546513255": 474, "5915e": 476, "59200": 568, "59233": 485, "59235": [83, 489], "59240": 485, "5924e": 499, "59250": 485, "59254e": 446, "59265": 446, "593": 434, "59300": 471, "59344": 500, "59348": 500, "59365": 569, "594": 434, "59400008": 97, "59428": 476, "59451": 455, "59497703e": 473, "5951631e": 480, "5956621435": 478, "596": 484, "59696": 455, "596e": 476, "597194451442478e": 473, "597581596925": 470, "597774": 480, "59793": 476, "598": 500, "5985": 500, "5987726": 97, "599": [434, 465, 469, 484], "599625": 489, "59976": 476, "599999904632568": 476, "59d09m41": 476, "59e": [476, 484, 490], "5a": 58, "5e": [454, 464, 476, 478, 484], "6": [28, 29, 30, 31, 32, 35, 36, 37, 38, 39, 40, 50, 52, 53, 67, 86, 87, 91, 100, 102, 109, 111, 115, 124, 129, 141, 146, 147, 148, 149, 150, 152, 153, 154, 156, 159, 161, 163, 164, 190, 191, 192, 193, 195, 196, 197, 200, 201, 203, 204, 205, 237, 277, 365, 368, 381, 384, 389, 393, 394, 397, 402, 410, 413, 426, 428, 430, 436, 437, 441, 443, 446, 447, 448, 449, 451, 452, 453, 454, 455, 456, 457, 459, 460, 461, 462, 463, 464, 465, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 487, 489, 490, 491, 492, 498, 499, 500, 506, 523, 527, 533, 537, 557, 573, 575], "60": [67, 91, 154, 441, 452, 455, 476, 479, 490], "600": [445, 452, 455, 458, 460], "6000": 526, "6000000000000001": 485, "600661": 480, "60075": 480, "60090769e": 485, "600e": 451, "6018166e": 480, "601e": 476, "6024e": 499, "603": [484, 500], "6033": 446, "60350": 449, "603625": 480, "604": 451, "6046689e": 480, "606": [445, 570], "60603928": 485, "60620": [565, 566, 567], "607843137254942": 465, "609990": 557, "60e": 476, "61": [67, 141, 423, 459, 476, 484, 490, 576], "610": 484, "61051": 490, "6105760e": 480, "611": [455, 478, 575], "611168": 478, "6116853": 476, "611e": 476, "6125": 492, "612e": 455, "613114": 474, "61422433": 97, "61453755944866": 462, "61489": 480, "61526": 141, "615316": 500, "617835": 480, "6181862e": 480, "61862": 237, "619": 476, "6194453e": 480, "61975454954816": 498, "62": [476, 491, 499], "620": 476, "620398": 480, "6205": 500, "62111": 455, "621499": 500, "6218742e": 480, "6219": 449, "622": [434, 449], "62258": 476, "6227766": 482, "62277660168379": 482, "6228e": 449, "623": [476, 500], "62320": 449, "623397": 480, "62341325": 482, "623413251903492": 482, "624": [445, 466, 484], "624122": 461, "624d": 24, "62503": 476, "62514628": 480, "6253652e": 480, "6259962e": 480, "6266": 500, "6267247": 500, "627450980392158": 465, "628": 434, "62842028": 477, "628637": 568, "63": [190, 191, 200, 203, 446, 451, 453, 477, 481, 491, 492, 498, 499, 521, 523, 524, 527], "630": [82, 484, 492, 498], "6309576500000000": 500, "630e": 67, "631": [434, 459], "631155605": 463, "631159205": 463, "631170005": 463, "631173605": 463, "631177205": 463, "631180805": 463, "6318811e": 480, "632": [445, 465, 466], "632627": 500, "633": [85, 102, 105, 109, 110, 172, 452, 460, 481, 498, 499, 523], "63307": 83, "63308": [468, 499], "633083": 483, "63310241699219": 460, "63326": 455, "6333": 94, "63342": 500, "633600": 484, "635": 434, "63500212963": 476, "6354": 500, "63541": 489, "63668832485633": 470, "637396": 558, "638": [445, 472, 484], "639": 476, "6390": 446, "63902": 446, "6395e": 456, "6397": 500, "63e": 477, "64": [39, 67, 83, 124, 191, 416, 467, 476, 490], "640": 434, "6402822e": 480, "641": [434, 500], "64103": 489, "6413": 461, "6417": 461, "6419578e": 480, "642": 500, "6423836025257211": 462, "6429005895278312": 486, "642e": 451, "643": [30, 31, 32, 33], "64323": 455, "64438": 490, "6444": 446, "644527": 478, "644649": 535, "645": [477, 478], "6451": 461, "6464": 446, "646e": [135, 295], "647": 434, "647058823529452": 465, "6471115e": 480, "64794383e": 485, "648": 434, "648e": 67, "649": 434, "64987376": 97, "64e": 452, "65": [63, 141, 401, 416, 418, 477], "650": 477, "6509": 446, "651": 476, "651058": 500, "6514": 500, "652": 460, "6522806": 500, "652368617859867": 460, "653": [434, 448], "65357608e": 480, "654": [446, 476], "65412": 461, "654e": 476, "655": 455, "655283": 455, "6554088e": 480, "6556248e": 480, "6557": 455, "655e": [67, 452], "656": 575, "65603222222": 490, "65603794185": 476, "6561e": 459, "6577182894355391": 486, "658": 484, "658909145253801e": 500, "6589622747787678": 486, "659": [451, 455], "65e": 117, "66": [52, 53, 416, 419, 454, 460, 477, 479, 484, 487, 490, 498], "660": 434, "6604475": 461, "660e": 500, "660fals": 449, "661": 434, "66104": 446, "662": 476, "662701": 485, "663": [451, 575], "663742400000000": 500, "664502403": 489, "664502405": 489, "664502408": 489, "664502409": 489, "664502414": 489, "664e": 455, "6652219e": 480, "665292": 564, "6656409356335768": 462, "66650390625": 448, "6666666666583865": 469, "6666666666666666": 564, "666666666666696": 465, "6678": 455, "66813": 461, "66984341": 480, "669e": [141, 455], "66e": [459, 477], "67": [17, 416, 476, 500], "670": 476, "6705024680435898": 302, "671616": 446, "6728": [476, 500], "673": [453, 463, 492, 562], "67304": 97, "67375": 446, "67457342435522e": 500, "6747e": 487, "675": 451, "6768369882260035": 452, "6768e": 452, "677": 434, "6772235e": 480, "67759236e": 480, "678": [86, 462], "67824": 477, "6784": 575, "67861": 480, "678683717532289e": 452, "679": [434, 445, 501], "679478008080033e": 452, "6795e": 452, "67992517": 97, "67e21": 475, "68": [67, 83, 96, 153, 159, 161, 162, 163, 165, 232, 416, 446, 470, 476, 479, 480, 482, 489, 500, 576], "680": 484, "6803": 500, "6812310184489": 470, "68125": 480, "6823": 446, "683535101178161e": 473, "684": [172, 445, 477, 488], "68542112": 97, "68588096384626e": 473, "68628538586": 477, "687": 484, "687214": 481, "687500": 481, "687685": 476, "68e": [447, 459, 476], "69": [102, 443, 455, 467, 476, 477], "690": 67, "690557685186": 476, "6909290e": 480, "691": 476, "691299354164691": 462, "69138": 455, "691680": [102, 477, 484], "692": 455, "692e": 452, "693": [445, 488], "69314486": 483, "693940": 459, "6953125": 477, "69543812": 97, "6959369197218669": 486, "695e": 455, "697317": 490, "69735": 480, "697e": 449, "697fals": 449, "6985": 448, "6992": 461, "6e": [449, 476, 484], "6h": 491, "6th": 415, "6z_ny4zf": 473, "7": [30, 31, 38, 52, 53, 67, 87, 91, 124, 130, 140, 172, 175, 202, 210, 235, 367, 368, 377, 381, 382, 389, 393, 394, 397, 413, 417, 418, 420, 421, 427, 428, 433, 434, 435, 437, 438, 446, 448, 451, 452, 453, 454, 455, 456, 457, 459, 460, 461, 462, 463, 464, 465, 468, 469, 470, 471, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 489, 490, 491, 492, 498, 499, 500, 527, 531, 532, 568, 575, 576], "70": [67, 91, 102, 452, 461, 476, 477, 575], "700": [385, 464, 478, 483], "70000000e": 485, "7000e": 485, "70016": 461, "7007": 461, "701": 523, "70181": 141, "702": [468, 476, 490, 499], "702e": 455, "703": 413, "70358483e": 485, "704": 484, "70428": 500, "70437": 480, "705": 500, "7054": 470, "70546": 455, "70634e": 446, "706e": [460, 476], "707945784": 478, "707t": 286, "708": [451, 452], "709": 434, "7097381e": 480, "70e": 485, "71": [33, 452, 454, 484, 576], "710": 434, "71067811865478": 476, "7115414505410296e": 473, "7116851": 485, "711e": 455, "712": 462, "71220672": 477, "7123895e": 480, "712e": [468, 499], "713": [434, 476], "7132e": 500, "71387207e": 478, "714": 476, "715": 500, "716": [96, 302, 303, 482], "716062": 489, "71693826": [469, 473, 486, 514], "717": 476, "71795506": 500, "7184": 500, "719": [434, 445, 484, 493], "7190994e": 480, "71944e": 446, "7195": 476, "719e": 476, "72": [420, 448, 476, 481, 500], "720": [464, 476], "7200": 467, "722": [445, 484, 488], "72217": 500, "722557505166": 476, "723": 455, "723e": 476, "7240965e": 480, "7247e": 467, "725": 476, "725490196078432": 465, "727": 484, "72775": 500, "7284447e": 480, "729e": 455, "72e": 467, "73": [446, 500], "7303": 500, "731": 434, "731589446928548e": 498, "732e": [67, 476], "733": [67, 434], "734": 500, "735": [445, 450], "7350250533013533": 486, "7350380e": 480, "7351418e": 480, "735e": 476, "736": [451, 575, 576], "737": 451, "738": [434, 476], "7385727e": 480, "739": 434, "7395744e": 480, "739e": 67, "73e": [476, 498], "74": [446, 500], "740": 434, "741e": 470, "742": 484, "743e": [447, 476], "744": [445, 466], "74427": 461, "74465974e": 480, "74479": 455, "745098039215687": 465, "74542e": 446, "746": 434, "7471700e": 480, "7479085e": 480, "748": 476, "748259": 459, "74989420933": 478, "75": [67, 370, 447, 451, 500], "750": 576, "751643891117176": 498, "75267735": 500, "753": [434, 452], "7537086e": 480, "754": [434, 490], "75408483": 500, "7555": 481, "7559": 500, "756": 476, "7567": 446, "7580410e": 480, "759": 434, "7596682e": 480, "75e": [476, 499], "76": [462, 473, 482], "7613": 413, "761c": 28, "762": 434, "762199399999986": 538, "763": 434, "76304499940446": 470, "7637308880733709": 486, "7638": 455, "763e": 455, "76419591747674": 470, "7647": 500, "764705882352942": 465, "76473": 455, "7652512e": 480, "766": [434, 455], "7660168382": 476, "766d": 489, "767": 434, "76739": 476, "768000": [102, 477], "768040": 452, "768048": 97, "7681656e": 480, "76837444": 471, "7684028": 500, "7692170e": 480, "76e": 484, "770": 67, "771667": 492, "77174": 455, "7718272408581743": 302, "771e": 476, "772": [434, 446], "77206": 500, "77218": 455, "772694": 534, "773": 476, "7733e": [447, 476], "77351": 455, "774": [434, 467], "7743835449219": 451, "774e": 476, "775": [67, 484], "7752246942468283": 461, "7755386e": 480, "7760": 500, "7763307219821931": 302, "7765957e": 480, "77678": 446, "7769775": 489, "777": 434, "7771617763704126": 302, "77751797": 97, "777e": [67, 449], "777l": 35, "778": [434, 451, 476], "77827941": 482, "778279410038923": 482, "779": [445, 452, 476, 498, 501], "7796942": 500, "779e": 451, "77e": [454, 476], "78": [482, 483, 491, 499], "780": [31, 124], "7800e": 451, "7804888e": 480, "78083": [140, 141], "780e": 124, "78181": 141, "78188": 455, "78188096": 97, "782": 490, "7827941": 482, "78279410038923": 482, "783": [434, 476, 500], "78332719": 461, "78333": 461, "783587001383003": 489, "783e": 461, "784": [435, 452], "7843137254901955": 465, "78499999999997": 534, "785": 534, "7853981633974483": 567, "787": [67, 172], "787169465401243e": 468, "7875405607868806": 486, "7876233e": 480, "788": 476, "7887840e": 480, "788e": 476, "789": [434, 445, 470, 472], "78910994": 97, "7894": 461, "78952750835169": 470, "78e": 484, "79": [448, 476], "790": 434, "791": 435, "7913e": 451, "792": [445, 481, 488], "7922": 446, "793": [435, 455], "794": 478, "7941697": 478, "79432823": 485, "7943282347": 478, "79469899": 461, "79470": 461, "794e": 455, "795": [445, 560], "796": [435, 484], "797": 435, "7972": 481, "798": 435, "798218": 446, "799": 451, "7990194e": 480, "7997221e": 480, "799999952316284": 476, "7c": 482, "7d": 476, "7e": [476, 484, 485], "7e955f": 416, "8": [17, 18, 21, 22, 24, 25, 27, 38, 40, 50, 67, 87, 89, 91, 102, 105, 109, 110, 111, 115, 127, 141, 146, 147, 196, 203, 235, 237, 304, 377, 381, 384, 385, 394, 417, 418, 421, 423, 424, 428, 429, 430, 433, 434, 435, 438, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 459, 460, 461, 462, 463, 464, 465, 466, 468, 469, 470, 471, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 487, 489, 490, 491, 492, 498, 499, 500, 507, 509, 518, 523, 527, 531, 540, 551, 559, 575], "80": [175, 453, 455, 477, 482, 490, 523, 550, 559], "800932": 476, "801": [500, 523], "801668796295": 476, "802": [484, 500], "803": [451, 455, 538], "8031431e": 480, "8037638e": 480, "803921568627494": 465, "804": 484, "804229": 554, "804492": 467, "80492": 141, "80571": 140, "8062607e": 480, "80683246": 480, "8071": 455, "807201": 500, "8075": [476, 500], "8075185": 476, "8084e": 459, "808687936570502e": 479, "80871364": 97, "8090746": 489, "809505": 476, "80982039": 480, "80e": 447, "81": [424, 447, 468, 540], "810": [435, 476], "810000": 467, "8100e": 447, "810e": 476, "811": 435, "8115337251905373e": 479, "81162785888144": 470, "812": 435, "812075194992371e": 479, "8122169596532167e": 479, "8122425483643125e": 479, "8122e": 479, "812358724314062e": 479, "8129257829574434e": 479, "812951371538087e": 479, "813": 435, "813323": 546, "814": 435, "8150": 500, "8157971601581226e": 479, "816": 435, "8160964882165554": 302, "81699e": 446, "816e": 476, "818388e": 500, "81847286": 471, "818591": 104, "818e": 449, "819": 476, "81e": 540, "82": [67, 416, 459, 476, 499, 527], "820": 435, "8205513": 489, "820562952023891": 302, "820734654694367e": 473, "8222980e": 480, "823": 451, "82352941176471": 465, "824": [136, 435, 484], "8241471833009617": 486, "825": [435, 446, 462, 476], "8253e": 470, "8256": 500, "826": 435, "826414166666": 94, "827": 435, "8272": 502, "82739": 455, "827e": 141, "8290458e": 480, "8293": 500, "82946153": 500, "82e": 460, "83": [30, 67, 83, 85, 94, 102, 105, 109, 110, 172, 175, 190, 191, 200, 203, 451, 452, 453, 455, 460, 468, 477, 481, 482, 483, 491, 492, 498, 499, 518, 521, 523, 524, 527], "830": 435, "8300": 500, "830303716204": 566, "83031003653": 567, "83031257741": 565, "831": 435, "832": 435, "83242471": 480, "833": [435, 452, 455], "833333333336": 471, "834": 435, "8341884287660133": 486, "8349780e": 480, "835": 435, "835e": [452, 461], "835fals": 449, "836": [435, 471, 476], "836731": 476, "8369650e": 480, "837": [435, 484], "8377268e": 480, "838": 455, "8383396349722769": 302, "84": [24, 141, 416, 445, 451, 453, 461, 476, 484, 527], "840": [435, 455], "841": 476, "84196311": 97, "8419e": 467, "842": [435, 445, 476, 488], "84233": 455, "842x": [134, 143], "843": [59, 446, 471], "843137254902004": 465, "843863242310971e": 498, "843e": 67, "8441040e": 480, "844770648146": 94, "8449575657133206": 302, "845": 436, "84529": 476, "8455480e": 480, "845693": 446, "846": [455, 470, 476, 575], "847": 435, "8471": 467, "8475576e": 480, "8475650e": 480, "848216": 485, "84e": 459, "85": [87, 91, 442, 461, 531, 532], "851": 435, "85157506": 500, "8515948e": 480, "85188496e": 480, "85202": 500, "85287": 490, "852e": 476, "854": 435, "854166666664": 471, "85416667": 469, "85469291": 97, "855": [435, 445, 450], "85527": 461, "85527359": 461, "8555500e": 480, "85624": 456, "85625": 456, "8568": 500, "856e": 476, "8570719e": 480, "85722435185": 476, "858": 435, "858e": 476, "859": [435, 451], "85900": 461, "85900392": 461, "8591146247586": 470, "85925": 500, "8593054": 476, "859e": 455, "85e": 476, "86": [449, 451, 452, 455, 467, 482, 500, 511], "860": 476, "861": 500, "86111111": 469, "861150": 449, "8613613e": 480, "86178": 140, "8620": 467, "86201425840758": 470, "8623": [19, 20, 26, 217, 218, 221, 225, 227, 228, 229, 233, 239, 240, 242, 246, 248, 250, 251, 252, 257, 262, 264, 265, 266, 267, 270, 274], "862745098039234": 465, "864": [435, 500], "865": [435, 455], "866295": 563, "86676": 490, "8669": 446, "867": 470, "867064": 123, "8672": 461, "86793518066406": 448, "868": [435, 476], "86831929": 97, "8699": 446, "8699165e": 480, "87": [67, 461, 482], "870": [67, 435], "8704": 455, "871": 435, "871730083414263e": 473, "872": [435, 455], "873": 452, "8733348": 489, "8736082200157": 462, "873659477745188": 486, "874": 448, "875": 435, "876": 484, "87621184": 457, "8769240e": 480, "876e": 455, "87710186": 97, "877563": 476, "878": [476, 484], "87897": 461, "87897418": 461, "8799800e": 480, "87e": 21, "88": [416, 438, 453, 461, 462, 473, 476, 482, 500], "880e": 455, "881": [435, 446, 455], "8815212313941426": 486, "882": 67, "882011": 567, "882352941176466": 465, "883": 435, "8834862e": 480, "883e": 67, "884": 435, "88470839": 485, "885": 435, "886": 476, "8865": 500, "88781": 455, "888": 435, "8885138e": 480, "889": 476, "8893600e": 480, "88e": [449, 476], "89": [33, 482], "8908866e": 480, "8909e": 470, "890e": 67, "892": 484, "89243456": 500, "8926": 500, "89287": 446, "893": 435, "894": 449, "8943121e": 480, "89492144e": 479, "895": 471, "8954039e": 480, "89595846": 485, "89709472": 500, "898": 435, "8986348363207728": 486, "89873": 461, "8989213": 461, "898e": [455, 476], "899": 67, "8999": 461, "899a": 277, "89e": 477, "8e": [449, 459, 462, 464, 484, 490, 559], "9": [16, 31, 33, 35, 67, 83, 84, 87, 90, 91, 104, 123, 140, 196, 235, 237, 334, 341, 374, 381, 382, 386, 394, 413, 419, 421, 432, 435, 437, 440, 442, 446, 448, 449, 451, 452, 453, 454, 455, 456, 457, 459, 460, 461, 462, 463, 464, 465, 467, 468, 469, 470, 471, 473, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 487, 489, 490, 491, 492, 498, 499, 500, 526, 533, 537, 538, 539, 546, 562, 570, 575], "90": [57, 67, 400, 454, 457, 460, 461, 476, 482, 485, 502], "900": 476, "9002269877996247": 471, "900269": 480, "9023670e": 480, "90242058e": 477, "9032163": 86, "904": 500, "905": 476, "9053655e": 480, "9053906e": 480, "906": [435, 476], "90605275e": 490, "90677811e": 478, "90685": 455, "907": 476, "9074812e": 480, "9077294": 489, "90e": [102, 452, 459, 477], "91": [454, 482, 487, 527], "911": 435, "911552434768802e": 468, "912": 476, "912525e": 500, "912779907405": 476, "913196574074": 468, "913e": 455, "914": 67, "915": 476, "91507": [102, 477], "91612243652344": 448, "9163195e": 480, "917": 488, "91719": 477, "918": 67, "918365": 476, "919": 435, "919e": 476, "91e": 484, "92": [141, 454, 455, 482, 489], "920": 451, "92052435e": 478, "9205875e": 480, "921": 452, "9215375e": 480, "92234009259": [413, 468], "924": 452, "9240e": 485, "92490": 455, "925106": 461, "926388": 459, "9269494e": 480, "9277492e": 480, "928": [466, 476], "9280475e": 480, "929": [446, 452], "92960065298276": 498, "93": [67, 122, 124, 454, 455, 482, 489], "93026": 476, "9303": [476, 500], "931": 300, "93128e": 446, "932": 435, "93271046296": 468, "933": 435, "9332549000000": 500, "933636": 551, "934093": 459, "9343": 446, "935826709880043": 474, "937": [445, 488], "93702": 490, "9382336444241555": 486, "938e": [461, 476], "939": [288, 294], "9391360e": 480, "93988308": 97, "93e": 476, "94": [454, 476, 482, 489, 498, 500], "940e": 476, "940fals": 449, "94111838": 97, "941176470588236": 465, "94186555556": [413, 468], "943282347242818": 498, "944060876": 478, "9441e": 456, "944638": 536, "9453950989269149": 486, "9462": 461, "946923": 272, "947196": 457, "94722599": 461, "94723": 461, "947e": 455, "9485e": 470, "948683": 446, "9489822e": 480, "949": 484, "9499210e": 480, "94e": [461, 476], "95": [33, 67, 153, 159, 161, 162, 163, 165, 219, 220, 224, 232, 235, 247, 249, 258, 259, 263, 269, 273, 454, 455, 461, 467, 470, 476, 477, 479, 482, 483, 489, 531, 576], "950": [435, 445, 487, 488, 493], "9500979841335693": 302, "95024543e": 479, "950e": 451, "952": 67, "9529719e": 480, "953": 484, "95421509259": 468, "95451985e": 124, "9546285068162436": 486, "95615": 446, "957": 67, "958": 470, "9580e": 453, "95883": 500, "959198": 476, "959d": [52, 53], "96": [416, 447, 454, 477, 482, 540], "9606540e": 480, "960784313725491": 465, "9608912e": 480, "9619812963": 468, "96374320": 457, "966": 435, "96602": 456, "967546": 455, "9677107409819438": 302, "968": [451, 461], "96814": 500, "96833546296": [476, 490], "968488": 300, "969": 476, "9692e": 447, "96e": 449, "96r": 482, "97": [454, 476, 480, 486, 499], "97003": 500, "97054": 455, "970e": 476, "97116": 461, "9721952295357764e": 473, "973": 476, "9730e": 460, "97369425926": 468, "974e": 476, "975": 435, "97529": 140, "97596": 455, "976": 435, "97749": 461, "97749371": 461, "9776920e": 480, "9782e": 467, "978540": 552, "979": [67, 435, 482, 501], "9792e": 470, "97934": 455, "97978": 83, "979e": 470, "97e": 476, "98": [83, 344, 448, 453, 454, 455, 459, 468, 470, 480, 498], "980": 67, "9803921568627443": 465, "98049": 455, "98149518519": 468, "9816452e": 480, "982075849517389e": 485, "98258": 455, "982586": 555, "9833462074166": 476, "9834338e": 480, "98359211196148547": 461, "98429": 455, "9845": 446, "9847406e": 480, "984e": 455, "985": [435, 449], "985502122122975": 486, "986478": 530, "9868440049211211": 498, "9876": 446, "98772": 140, "988": [435, 476, 484], "988409870698051e": 52, "9890": 500, "98e": 476, "99": [344, 454, 455, 456, 467, 478, 499, 500], "99004": 141, "991": 476, "9910796e": 480, "9912648e": 480, "9912712e": 480, "993": 448, "9931": 500, "994": 435, "99467": 141, "994e": 476, "995": 484, "9952623149688797": 498, "9969731e": 480, "997": 435, "9977859e": 480, "9978": 500, "998": 462, "99848e": 490, "99878762e": 478, "999": [50, 162, 165, 476], "99919925926": 237, "99993896484375": 451, "9999912037958": 461, "999999": 476, "99999994": 86, "9999999995": 476, "9999999997835": 448, "99999999999545": 473, "999999999997": 463, "9999999999977": 476, "9999999999978": 469, "9999999999998": 476, "99999999999994": 476, "99999999999999": [454, 476], "9999e": 470, "99e": 476, "9e": [447, 449, 476, 559], "9hjcvgpi": 473, "9jwx": 485, "9xbln6cd": 481, "A": [16, 19, 20, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 82, 83, 84, 87, 88, 89, 90, 91, 92, 99, 100, 101, 102, 104, 105, 108, 109, 110, 122, 123, 124, 132, 135, 140, 141, 190, 191, 192, 193, 195, 197, 198, 199, 200, 201, 202, 203, 204, 205, 213, 214, 216, 217, 220, 221, 223, 224, 225, 227, 228, 229, 230, 232, 233, 234, 235, 236, 237, 238, 239, 240, 242, 245, 246, 249, 250, 251, 252, 253, 257, 258, 259, 260, 262, 265, 266, 267, 269, 270, 271, 272, 273, 274, 285, 287, 295, 296, 304, 313, 366, 367, 368, 370, 371, 378, 380, 382, 383, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 398, 400, 401, 402, 403, 404, 405, 406, 415, 417, 421, 422, 423, 424, 425, 428, 430, 431, 434, 435, 436, 437, 439, 441, 442, 443, 446, 448, 453, 455, 459, 461, 462, 465, 468, 469, 470, 471, 474, 475, 476, 477, 479, 481, 482, 483, 484, 485, 486, 487, 489, 490, 491, 492, 494, 497, 499, 500, 502, 510, 511, 512, 514, 515, 523, 524, 526, 527, 529, 531, 568, 569, 572, 573, 576], "AND": [483, 484], "AS": 406, "And": [277, 377, 380, 395, 397, 403, 408, 448, 449, 451, 452, 459, 463, 465, 470, 477, 479, 482, 483, 485, 489, 498, 499, 500], "As": [83, 304, 334, 377, 378, 380, 385, 389, 390, 391, 393, 395, 403, 404, 406, 413, 418, 437, 446, 447, 448, 451, 452, 453, 455, 456, 457, 461, 463, 464, 468, 469, 470, 473, 474, 475, 476, 477, 479, 481, 482, 485, 487, 490, 492, 498, 500, 514, 523, 576], "At": [261, 391, 394, 403, 404, 407, 421, 463, 482, 489, 519, 572], "But": [377, 382, 385, 391, 396, 404, 407, 413, 437, 451, 452, 479, 487, 489, 498, 574], "By": [19, 20, 26, 50, 65, 87, 91, 101, 102, 105, 109, 110, 121, 125, 129, 146, 147, 148, 149, 150, 151, 152, 153, 154, 156, 157, 159, 161, 162, 163, 164, 165, 169, 172, 179, 189, 191, 192, 193, 195, 201, 204, 205, 217, 218, 220, 221, 224, 225, 227, 228, 229, 232, 233, 235, 239, 240, 242, 246, 247, 248, 250, 251, 252, 257, 258, 259, 262, 263, 264, 265, 266, 267, 269, 270, 273, 274, 374, 377, 403, 404, 405, 422, 423, 425, 463, 464, 469, 474, 479, 482, 487, 499, 521, 525, 531, 532, 533, 577], "FOR": [135, 295], "For": [11, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 42, 77, 82, 87, 88, 91, 95, 99, 100, 101, 102, 105, 109, 110, 117, 119, 121, 122, 124, 125, 126, 129, 130, 131, 132, 149, 150, 151, 157, 162, 165, 172, 177, 178, 179, 182, 183, 185, 186, 190, 191, 192, 193, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 210, 217, 218, 219, 220, 221, 222, 223, 224, 225, 227, 229, 230, 232, 233, 234, 235, 236, 237, 238, 240, 245, 246, 247, 248, 249, 250, 252, 253, 258, 259, 260, 262, 263, 265, 266, 267, 269, 273, 274, 286, 288, 292, 294, 301, 307, 322, 376, 377, 378, 380, 382, 383, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 396, 397, 398, 400, 402, 403, 404, 405, 406, 407, 408, 409, 411, 412, 413, 415, 418, 419, 420, 422, 423, 424, 425, 428, 435, 439, 442, 446, 447, 448, 449, 451, 452, 453, 454, 455, 456, 457, 459, 460, 461, 463, 465, 467, 468, 469, 470, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 489, 490, 491, 494, 498, 499, 500, 502, 509, 510, 512, 514, 524, 526, 527, 532, 537, 569, 573, 574, 576, 577, 578], "IN": [92, 100, 245], "If": [16, 19, 20, 26, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 45, 80, 82, 83, 84, 85, 86, 87, 88, 90, 91, 93, 94, 96, 100, 102, 103, 104, 105, 106, 107, 108, 109, 110, 112, 113, 119, 121, 122, 123, 124, 125, 127, 129, 132, 135, 139, 140, 142, 144, 149, 150, 151, 157, 160, 162, 165, 166, 168, 169, 172, 174, 175, 178, 179, 182, 183, 185, 186, 187, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 203, 204, 205, 210, 213, 215, 217, 218, 219, 220, 221, 222, 223, 224, 225, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 242, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 269, 270, 271, 272, 273, 274, 275, 283, 284, 301, 304, 316, 317, 322, 363, 366, 370, 371, 372, 373, 377, 378, 379, 380, 382, 384, 385, 390, 391, 393, 394, 395, 398, 399, 400, 402, 403, 406, 407, 408, 409, 410, 411, 412, 413, 417, 418, 419, 436, 437, 438, 446, 448, 449, 451, 453, 454, 456, 459, 461, 464, 467, 468, 469, 470, 471, 473, 476, 477, 479, 481, 482, 483, 484, 485, 487, 489, 490, 491, 500, 512, 514, 525, 527, 533, 535, 548, 574, 575, 576, 577], "In": [15, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 67, 77, 83, 87, 88, 91, 94, 101, 103, 108, 124, 149, 168, 191, 193, 196, 199, 205, 213, 215, 273, 284, 317, 377, 380, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 409, 410, 413, 418, 419, 420, 421, 422, 423, 424, 425, 428, 439, 442, 446, 447, 448, 449, 451, 452, 453, 454, 455, 457, 459, 460, 462, 463, 464, 465, 467, 468, 469, 470, 471, 473, 474, 475, 476, 477, 478, 479, 481, 482, 483, 484, 485, 486, 487, 490, 491, 498, 499, 500, 510, 512, 514, 519, 522, 523, 524, 526, 527, 528, 531, 532, 537, 550, 569, 572, 573, 574, 575, 576, 577, 578], "It": [15, 19, 20, 26, 27, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 91, 102, 105, 109, 110, 111, 113, 115, 122, 140, 149, 153, 160, 161, 162, 163, 165, 175, 178, 182, 183, 188, 192, 193, 195, 197, 200, 201, 204, 205, 207, 217, 218, 221, 224, 225, 227, 228, 229, 233, 237, 239, 240, 242, 246, 248, 250, 257, 261, 262, 264, 265, 266, 267, 270, 274, 286, 290, 292, 293, 312, 326, 331, 377, 378, 380, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 401, 402, 403, 404, 405, 407, 408, 412, 414, 418, 419, 420, 421, 425, 428, 430, 431, 432, 437, 439, 441, 442, 443, 446, 452, 457, 460, 462, 464, 467, 471, 474, 476, 477, 478, 479, 481, 482, 483, 485, 487, 489, 490, 491, 492, 498, 499, 500, 502, 503, 510, 511, 513, 514, 518, 519, 521, 523, 527, 541, 544, 545, 547, 548, 552, 553, 555, 556, 557, 558, 571, 572, 573, 574, 575, 576, 578], "Its": [149, 389, 403, 404, 428, 430, 465, 469, 487, 499, 516, 517, 518, 520], "NOT": 483, "No": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 86, 388, 398, 401, 402, 436, 438, 444, 465, 473, 476, 479, 481, 482, 500], "Not": [105, 109, 110, 194, 200, 202, 385, 559], "ON": [102, 105, 131, 179, 180, 181, 189, 375, 383, 430, 446, 447, 451, 454, 457, 461, 468, 469, 471, 479, 481, 487, 514, 523, 575, 577], "OR": [102, 109, 477, 483, 484], "Of": [377, 380, 413, 459, 477, 482, 490, 574, 577], "On": [59, 167, 173, 174, 177, 286, 293, 300, 377, 378, 383, 385, 392, 393, 406, 408, 409, 410, 411, 432, 459, 460, 479, 494, 576], "One": [31, 32, 37, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 101, 102, 105, 109, 110, 223, 245, 330, 377, 378, 383, 385, 386, 387, 388, 391, 393, 394, 395, 403, 442, 448, 452, 457, 468, 481, 482, 483, 498, 500, 523, 527, 550, 574, 576], "Ones": 304, "Or": [19, 20, 26, 217, 218, 221, 225, 227, 228, 229, 233, 239, 240, 242, 246, 248, 250, 251, 252, 257, 262, 264, 265, 266, 267, 270, 274, 378, 396, 397, 452, 459, 473, 477, 478, 482, 489, 490, 512], "Such": [389, 480, 518], "THE": [135, 295], "That": [16, 19, 20, 84, 90, 104, 123, 210, 213, 217, 220, 221, 224, 225, 227, 228, 229, 230, 232, 233, 234, 235, 236, 237, 238, 239, 240, 242, 249, 250, 251, 252, 253, 257, 258, 259, 260, 262, 265, 266, 267, 272, 273, 377, 378, 382, 391, 394, 397, 479, 500, 574], "The": [11, 15, 16, 19, 20, 23, 26, 27, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 42, 52, 53, 57, 59, 63, 69, 77, 80, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 94, 95, 100, 101, 102, 104, 105, 106, 107, 108, 109, 110, 111, 114, 115, 116, 117, 121, 122, 123, 124, 125, 126, 127, 129, 130, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 156, 157, 159, 160, 161, 162, 163, 164, 165, 169, 173, 174, 178, 179, 182, 183, 184, 187, 188, 189, 190, 191, 192, 193, 194, 195, 197, 199, 200, 201, 202, 203, 204, 205, 209, 210, 211, 214, 216, 217, 218, 219, 220, 221, 224, 225, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 242, 246, 247, 248, 249, 250, 251, 252, 253, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 269, 270, 272, 273, 274, 276, 277, 283, 285, 286, 287, 288, 290, 291, 292, 293, 294, 295, 300, 304, 316, 322, 324, 325, 328, 344, 360, 361, 363, 365, 366, 367, 368, 370, 371, 372, 373, 374, 376, 377, 378, 379, 380, 381, 382, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 409, 410, 411, 414, 417, 418, 420, 421, 422, 423, 424, 425, 428, 430, 431, 432, 436, 437, 438, 439, 440, 441, 442, 443, 446, 447, 448, 449, 451, 452, 453, 454, 455, 456, 457, 459, 461, 463, 464, 465, 467, 468, 469, 470, 471, 473, 474, 475, 476, 477, 480, 481, 482, 483, 484, 485, 486, 489, 490, 491, 492, 494, 498, 499, 500, 502, 503, 504, 505, 509, 510, 512, 513, 514, 516, 517, 518, 519, 520, 521, 522, 524, 525, 526, 527, 528, 531, 533, 535, 536, 537, 540, 546, 548, 550, 559, 569, 571, 572, 573, 574, 575, 576, 577, 578, 579], "Their": 483, "Then": [67, 102, 107, 109, 380, 382, 387, 390, 392, 393, 394, 395, 401, 410, 448, 451, 459, 460, 463, 467, 468, 479, 483, 485, 487, 499], "There": [87, 91, 140, 377, 378, 382, 383, 384, 386, 391, 392, 393, 394, 395, 396, 397, 398, 401, 404, 407, 409, 410, 436, 461, 465, 474, 475, 476, 477, 479, 480, 481, 483, 484, 491, 502, 510, 511, 514, 527], "These": [77, 95, 197, 276, 377, 378, 382, 383, 388, 390, 391, 392, 393, 397, 398, 403, 420, 422, 423, 424, 428, 436, 442, 446, 460, 462, 463, 470, 474, 475, 477, 480, 482, 485, 486, 491, 494, 502, 519, 524, 526, 527, 575, 576, 577], "To": [16, 19, 20, 26, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 84, 87, 90, 91, 100, 104, 108, 121, 123, 125, 129, 191, 203, 217, 218, 221, 225, 227, 228, 229, 233, 239, 240, 242, 246, 248, 250, 251, 252, 257, 262, 264, 265, 266, 267, 270, 272, 274, 276, 286, 367, 368, 379, 380, 384, 385, 388, 389, 390, 392, 393, 398, 399, 400, 401, 402, 403, 407, 408, 409, 410, 411, 412, 413, 414, 418, 419, 420, 423, 424, 428, 430, 436, 437, 439, 442, 446, 447, 448, 449, 451, 452, 453, 454, 456, 457, 459, 461, 462, 463, 464, 465, 467, 468, 469, 470, 473, 474, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 489, 490, 494, 498, 500, 510, 511, 512, 515, 519, 521, 523, 524, 531, 572, 574, 575, 576], "With": [83, 377, 386, 387, 403, 424, 437, 487, 510, 576], "_": [102, 109, 127, 233, 252, 377, 391, 401, 403, 451, 454, 457, 475, 476, 479, 484, 487, 510, 523], "_0": [50, 51], "_1": [105, 110, 511], "_2": [105, 110], "__all__": 377, "__array__": 304, "__array_ufunc__": [453, 463, 492, 562], "__attributes__": [87, 91], "__call__": [17, 18, 19, 20, 21, 22, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 35, 36, 37, 39, 40, 217, 218, 219, 220, 221, 222, 224, 225, 227, 228, 229, 230, 232, 233, 234, 235, 236, 237, 238, 239, 240, 242, 246, 247, 248, 249, 250, 251, 252, 253, 254, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 269, 270, 272, 273, 274, 275, 316, 383, 388, 405, 424], "__class__": [377, 401, 475, 508], "__dict__": [16, 84, 90, 104, 123, 377], "__enter__": 355, "__eq__": 430, "__exit__": 355, "__fields__": [16, 84, 90, 104, 123, 404], "__getitem__": [387, 388, 389], "__init__": [16, 84, 90, 104, 123, 200, 273, 377, 383, 389, 401, 439], "__int__": 322, "__len__": 387, "__main__": [256, 377, 487, 496, 574], "__name__": [377, 457, 468, 469, 470, 473, 475, 496, 508, 574], "__neq__": 430, "__pydantic_extra__": [16, 84, 90, 104, 123], "__pydantic_fields_set__": [16, 84, 90, 104, 123], "__repr__": [377, 423, 437], "__str__": [377, 389, 404, 420], "__subclasses__": 475, "__version__": 412, "_basemodel__context": [16, 84, 90, 104, 123], "_build": [378, 407, 514], "_check_interv": 442, "_compute_flux_spati": 428, "_covari": [223, 245], "_data": 401, "_dataset": 378, "_dom_class": [459, 467, 482, 498, 499], "_energy_t": 401, "_err": 473, "_errn": [125, 126, 129, 130], "_errp": [125, 126, 129, 130], "_evaluate_timevar_sourc": 442, "_f_cash_root_cython": 299, "_factr": 479, "_fields_set": [16, 84, 90, 104, 123], "_i": 127, "_k": [102, 109, 510], "_l": 510, "_lat": 377, "_lon": 377, "_map": 370, "_model": 122, "_new_attribut": 377, "_old_attribut": 377, "_parameter_units_for_data_unit": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40], "_parent_namespace_depth": [16, 84, 90, 104, 123], "_phi": 377, "_prior": 405, "_propagate_error": 427, "_reco": 377, "_repr_html_": 377, "_row_index": 69, "_sample_coord_time_energi": 442, "_scan": 479, "_time_group": 401, "_time_t": 401, "_true": 377, "_type": [405, 487], "_types_namespac": [16, 84, 90, 104, 123], "_was_": [16, 84, 90, 104, 123], "_wc": 538, "_weight": 405, "a_": [105, 110, 152, 516, 519, 576], "a_off": 576, "a_on": 576, "a_scan": 487, "aa": [87, 91, 304, 403], "aaguasca": 439, "ab": [28, 30, 31, 32, 33, 35, 36, 37, 38, 39, 40, 50, 52, 53, 57, 58, 60, 61, 62, 64, 65, 83, 88, 117, 134, 135, 143, 152, 205, 213, 215, 242, 276, 277, 286, 293, 295, 475, 476], "abc": [18, 56, 99, 120, 171, 190, 195, 481], "abcmeta": 481, "abdalla2018": [523, 524, 573], "abeysekara": 59, "abil": [401, 487], "abl": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 387, 392, 395, 448, 467, 468, 469, 487, 494, 574], "about": [11, 13, 16, 84, 90, 104, 123, 147, 152, 232, 237, 334, 377, 380, 382, 386, 393, 394, 396, 397, 398, 402, 403, 405, 406, 407, 412, 413, 432, 433, 437, 438, 439, 447, 449, 455, 456, 457, 460, 461, 463, 476, 480, 482, 485, 490, 499, 500, 510, 511, 574, 577], "abov": [29, 44, 52, 53, 83, 121, 123, 124, 127, 131, 132, 140, 141, 167, 202, 366, 368, 377, 378, 383, 386, 387, 389, 391, 393, 394, 395, 396, 397, 401, 409, 410, 413, 446, 455, 461, 463, 464, 465, 468, 471, 473, 478, 479, 481, 482, 483, 485, 486, 487, 489, 490, 491, 498, 508, 510, 511, 518, 521, 527, 573, 574, 575, 576, 577], "abramowski": 152, "abruptli": [377, 402], "abs_path": 312, "absenc": [392, 457, 481, 483, 523, 575], "absolut": [82, 91, 106, 146, 147, 148, 149, 152, 154, 156, 159, 164, 192, 193, 195, 197, 201, 204, 205, 308, 334, 354, 358, 512], "absolute_tim": 578, "absopt": 395, "absorb": [274, 387, 400, 435, 540], "absorbedspectralmodel": [422, 435], "absorbt": 400, "absorpt": [225, 395, 425, 435, 445, 450, 494, 528, 560], "abstract": [56, 57, 59, 99, 120, 135, 163, 171, 176, 190, 192, 195, 204, 286, 295, 388, 424, 526], "abstractsetintstr": [16, 84, 90, 104, 123], "acada": 403, "academ": [136, 300], "accept": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 83, 87, 91, 105, 106, 110, 121, 122, 124, 167, 184, 189, 191, 192, 193, 195, 203, 204, 205, 223, 245, 287, 375, 381, 382, 383, 384, 385, 386, 389, 390, 391, 393, 394, 395, 396, 397, 398, 400, 402, 403, 404, 405, 429, 433, 442, 446, 447, 452, 453, 454, 457, 461, 464, 477, 481, 482, 490, 510, 526, 532, 550, 575, 576], "acceptance_off": [105, 106, 110, 121, 122, 124, 167, 177, 389, 446, 448, 451, 454, 457, 510, 576], "acceptance_on": [121, 122, 124], "acceptang": 121, "access": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 56, 58, 60, 61, 62, 64, 65, 66, 67, 82, 83, 87, 91, 102, 160, 190, 191, 200, 203, 293, 312, 377, 385, 386, 387, 388, 390, 393, 401, 407, 409, 412, 417, 418, 425, 432, 433, 435, 436, 442, 443, 449, 451, 452, 453, 459, 473, 476, 479, 480, 484, 485, 489, 492, 498, 499, 500, 509, 514, 525, 526, 527, 572], "accessor": 482, "accident": [490, 574], "accomplish": 478, "accord": [15, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 53, 72, 87, 91, 102, 105, 109, 110, 117, 122, 144, 150, 160, 167, 191, 197, 213, 215, 301, 366, 387, 388, 391, 392, 395, 401, 403, 422, 431, 443, 457, 468, 477, 481, 485, 486, 494, 510, 511, 514], "accordingli": [389, 403, 419, 425, 483], "account": [102, 105, 109, 110, 121, 122, 135, 169, 185, 223, 245, 261, 285, 287, 293, 352, 385, 390, 393, 401, 403, 424, 441, 443, 445, 446, 448, 450, 451, 453, 457, 459, 465, 470, 471, 478, 479, 481, 483, 494, 499, 510, 512, 575, 576], "accur": [133, 142, 395, 438, 459, 479, 521], "accuraci": [391, 479, 514], "aceptance_off": 389, "acero": [395, 418, 420, 422, 425, 428, 430, 435, 437, 443], "achiev": [16, 84, 90, 104, 117, 123, 167, 367, 368, 377, 386, 387, 388, 389, 390, 391, 393, 400, 403, 425, 482, 485, 486, 524], "acknowledg": [380, 403, 414], "acquir": 413, "acquisit": 573, "across": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 100, 117, 377, 386, 389, 407, 462, 470, 484, 490, 510, 526, 535, 573], "act": [91, 393, 484, 537], "action": [167, 382, 387, 393, 403, 407, 428, 470], "activ": [91, 293, 380, 394, 408, 409, 411, 412, 413, 422, 439, 474, 514], "actual": [180, 352, 353, 354, 376, 377, 378, 382, 386, 388, 390, 392, 393, 401, 402, 404, 406, 454, 464, 467, 469, 477, 478, 479, 481, 482, 483, 487, 490, 491, 499, 500, 521, 523, 573, 574, 576], "ad": [16, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 41, 59, 82, 83, 84, 87, 90, 91, 102, 104, 105, 109, 110, 113, 114, 116, 123, 124, 192, 193, 195, 200, 201, 204, 205, 377, 378, 380, 382, 383, 385, 386, 387, 389, 390, 391, 392, 393, 394, 396, 397, 401, 403, 417, 418, 419, 421, 422, 423, 425, 428, 430, 432, 433, 434, 435, 436, 437, 438, 439, 441, 442, 443, 453, 457, 459, 460, 480, 481, 484, 485, 486, 487, 491, 510, 527, 577], "adapt": [117, 167, 210, 386, 387, 390, 391, 396, 397, 399, 400, 403, 406, 413, 418, 419, 421, 422, 423, 425, 426, 428, 431, 434, 435, 437, 439, 441, 442, 443, 477, 480, 482, 483, 521, 524], "adaptiveringbackgroundestim": [177, 383], "adaptiveringbackgroundmak": [170, 422, 524], "adass": 397, "add": [13, 15, 16, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 41, 42, 43, 44, 79, 84, 87, 88, 90, 91, 99, 100, 101, 102, 103, 104, 105, 107, 108, 109, 110, 122, 123, 124, 146, 147, 149, 150, 151, 152, 153, 154, 157, 159, 160, 161, 162, 163, 165, 169, 192, 193, 195, 199, 201, 204, 205, 211, 223, 245, 261, 301, 346, 365, 374, 376, 377, 378, 380, 382, 385, 386, 387, 389, 390, 391, 392, 393, 394, 395, 396, 397, 400, 401, 403, 405, 406, 409, 411, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 428, 429, 430, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 446, 447, 448, 454, 459, 460, 463, 467, 468, 471, 477, 480, 481, 482, 483, 485, 487, 489, 500, 504, 505, 514, 527, 542, 574, 577], "add_artist": [485, 531, 532], "add_cbar": [102, 105, 109, 110, 124, 146, 147, 149, 152, 153, 154, 159, 160, 161, 163, 192, 193, 195, 201, 204, 205, 365, 455, 456, 457, 459, 461, 467, 471, 475, 477, 480, 481, 482, 484, 485, 490, 491, 498, 499, 527, 530, 531, 532, 535, 536, 538], "add_column": [87, 91], "add_enabled_unit": [446, 454, 456, 459, 461, 467, 470, 489], "add_index": [87, 91], "add_loc": 377, "add_row": [87, 91], "add_subplot": 365, "addit": [16, 19, 20, 26, 43, 84, 87, 90, 91, 102, 104, 105, 109, 110, 113, 121, 123, 125, 130, 164, 192, 193, 195, 198, 201, 204, 205, 217, 218, 221, 225, 227, 228, 229, 233, 239, 240, 242, 246, 248, 250, 251, 252, 257, 262, 264, 265, 266, 267, 270, 274, 377, 380, 381, 382, 386, 387, 388, 389, 391, 392, 393, 394, 396, 397, 398, 401, 402, 403, 404, 406, 407, 408, 409, 410, 419, 420, 422, 424, 425, 428, 429, 436, 437, 439, 442, 443, 449, 453, 465, 471, 476, 477, 478, 479, 482, 484, 485, 487, 489, 490, 499, 500, 510, 512, 514, 521, 526, 527, 571, 577], "addition": [130, 389, 477, 479, 482, 484, 485], "address": [386, 389, 390, 391, 393, 403, 487, 513], "adequ": 200, "adher": 380, "adjac": [144, 197, 428, 469, 482, 523], "adjust": [16, 67, 192, 193, 195, 201, 204, 205, 386, 388, 400, 452, 474, 477, 478, 485, 486, 498, 514, 521, 573], "admit": 397, "adonath": 383, "adopt": [37, 390, 393, 398, 453, 463, 464, 475], "adsab": [28, 30, 31, 32, 33, 35, 36, 37, 38, 39, 40, 50, 52, 53, 57, 58, 60, 61, 62, 83, 88, 117, 135, 152, 242, 276, 277, 286, 293, 295], "adult": 377, "advanc": [389, 393, 394, 397, 405, 409, 480, 482, 514, 573, 574], "advantag": [385, 391, 394, 401, 428, 482, 487, 550, 574], "advanteg": 389, "advertis": 406, "advic": [377, 403], "advis": [378, 403, 479, 487, 494], "advoc": 377, "aeff": [16, 82, 87, 88, 105, 110, 152, 178, 186, 387, 389, 390, 424, 425, 448, 451, 452, 453, 456, 457, 459, 461, 469, 473, 480, 481, 489, 491, 492, 498, 499, 516, 521, 523, 524, 573], "aeff2d": 151, "aeff_2d": [82, 87, 152, 489, 492], "aeff_3d": 480, "aeff_ev": 480, "aeff_new": 480, "aeff_perc": [178, 448, 451, 452, 461, 469, 473, 481, 491, 523], "aegi": 225, "af": 373, "affect": [135, 377, 385, 389, 391, 402, 419, 420, 431, 440, 447, 487], "affili": [391, 403, 439], "afmhot": [484, 500], "aforement": 403, "after": [16, 45, 50, 51, 52, 53, 84, 90, 91, 100, 102, 104, 105, 109, 123, 162, 165, 293, 316, 334, 358, 361, 377, 380, 382, 385, 386, 388, 390, 391, 392, 393, 395, 396, 397, 399, 400, 401, 402, 403, 404, 406, 407, 408, 413, 417, 424, 426, 427, 428, 430, 436, 438, 439, 440, 449, 457, 459, 469, 473, 474, 479, 482, 484, 489, 491, 492, 514, 574, 578], "aftervalid": 90, "ag": [20, 43, 44, 45, 50, 51, 52, 53, 54, 308, 377, 504], "again": [102, 105, 109, 110, 162, 380, 387, 389, 391, 393, 398, 404, 408, 423, 424, 427, 434, 439, 449, 451, 452, 459, 464, 465, 482, 485, 487, 490, 498, 500, 527, 574], "against": [16, 84, 90, 104, 123, 146, 147, 148, 149, 152, 153, 154, 156, 159, 161, 163, 164, 191, 192, 193, 195, 200, 201, 203, 204, 205, 378, 380, 394, 400, 407, 476, 478, 490, 498, 509, 512], "agent": 393, "agglom": 13, "aggreg": 404, "agil": 390, "agn": [136, 291, 391, 451, 468, 470, 474, 489], "agnost": 479, "ago": 384, "agre": [194, 197, 380, 382, 391, 403], "agreement": [377, 380, 398, 471], "aguasca": [430, 439, 440, 441, 442], "aharonian": 462, "ahead": [391, 417], "ahelp": 210, "aim": [377, 386, 387, 403, 459, 463, 475, 486, 502, 573], "air": 489, "ait": [191, 192, 193, 496], "aitoff": 391, "aka": 500, "al": [26, 33, 59, 101, 135, 136, 152, 225, 292, 293, 295, 300, 387, 455, 462, 474, 502, 573], "albert": 573, "albert2007": 573, "alexi": [425, 428], "algorithm": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 59, 87, 91, 117, 132, 167, 210, 286, 377, 383, 389, 390, 391, 396, 404, 420, 425, 433, 434, 435, 455, 474, 478, 479, 491, 512, 526, 572, 576], "alia": [16, 56, 84, 90, 104, 123, 380, 500], "alias": [16, 56, 84, 90, 104, 123], "align": [87, 91, 100, 146, 147, 148, 149, 152, 153, 154, 155, 156, 159, 161, 163, 164, 191, 192, 193, 195, 197, 201, 203, 204, 205, 377, 480, 483, 485], "alisha": 430, "all": [6, 16, 19, 20, 26, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 82, 83, 84, 87, 88, 89, 90, 91, 92, 95, 96, 100, 102, 103, 104, 105, 107, 108, 109, 110, 121, 122, 123, 124, 125, 129, 130, 132, 146, 147, 148, 149, 150, 151, 152, 153, 154, 156, 159, 161, 162, 163, 164, 165, 166, 172, 179, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 210, 213, 214, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 242, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 269, 270, 271, 272, 273, 274, 275, 276, 283, 349, 350, 351, 352, 353, 354, 364, 373, 376, 377, 378, 380, 382, 383, 384, 385, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 407, 408, 409, 410, 412, 417, 418, 419, 420, 421, 422, 423, 424, 425, 428, 430, 431, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 445, 447, 448, 451, 452, 453, 456, 457, 459, 461, 462, 463, 467, 468, 470, 471, 473, 476, 477, 478, 479, 480, 482, 483, 484, 485, 487, 489, 490, 491, 492, 494, 496, 498, 499, 500, 504, 510, 512, 514, 523, 525, 526, 527, 528, 550, 571, 574, 575, 576], "all_quant": [122, 124], "allclos": [146, 147, 148, 149, 152, 153, 154, 156, 159, 161, 163, 164, 192, 193, 194, 195, 197, 201, 202, 204, 205, 352], "alloc": [193, 201, 205], "allow": [16, 26, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 56, 84, 87, 90, 91, 104, 117, 122, 123, 124, 131, 132, 162, 165, 191, 196, 198, 327, 377, 378, 380, 382, 383, 384, 387, 388, 389, 390, 391, 393, 394, 395, 396, 399, 400, 401, 402, 403, 404, 405, 406, 407, 409, 411, 419, 421, 422, 423, 424, 425, 428, 430, 437, 438, 439, 442, 446, 451, 462, 470, 477, 478, 479, 480, 481, 482, 483, 499, 510, 512, 514, 521, 526, 527, 571, 572, 574, 579], "allow_extra": 196, "allow_pickl": [16, 84, 90, 104, 123], "allowed_channel": [26, 475], "allski": [83, 482], "alma": 396, "almeida": 425, "almost": [376, 378, 380, 391, 490, 500], "alon": 382, "along": [68, 101, 122, 124, 128, 144, 146, 147, 148, 149, 152, 153, 154, 156, 159, 160, 161, 163, 164, 192, 193, 195, 201, 203, 204, 205, 291, 292, 293, 295, 315, 316, 326, 336, 337, 386, 387, 401, 439, 442, 456, 465, 476, 477, 480, 481, 484, 485, 511, 526, 527, 543, 573], "alpha": [21, 27, 28, 48, 102, 105, 109, 110, 121, 122, 124, 167, 189, 210, 228, 229, 238, 239, 240, 253, 287, 298, 301, 374, 375, 389, 400, 402, 428, 435, 446, 447, 448, 449, 451, 453, 454, 457, 459, 460, 464, 471, 476, 479, 487, 489, 531, 540, 542, 544, 546, 548, 549, 550, 559, 565, 566, 575, 576, 577], "alpha_": [105, 110], "alpha_1": [105, 110], "alpha_2": [105, 110], "alpha_norm": [225, 400, 447, 540], "alphabet": [394, 403, 418, 419, 420, 421, 422, 423, 424, 425, 428], "alreadi": [15, 16, 26, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 84, 87, 90, 91, 104, 123, 210, 269, 270, 271, 273, 377, 383, 384, 385, 388, 389, 390, 391, 392, 394, 397, 398, 399, 401, 404, 406, 407, 437, 447, 449, 453, 455, 457, 464, 471, 475, 476, 477, 482, 483, 484, 485, 489, 490, 491, 500, 502, 527, 538], "also": [15, 19, 20, 26, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 87, 91, 95, 117, 121, 122, 124, 125, 133, 134, 140, 142, 143, 164, 169, 175, 190, 197, 199, 200, 210, 217, 218, 221, 225, 227, 228, 229, 233, 239, 240, 242, 246, 248, 250, 251, 252, 257, 262, 264, 265, 266, 267, 270, 272, 274, 284, 304, 312, 317, 377, 378, 380, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 397, 398, 399, 400, 401, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 418, 419, 420, 421, 422, 423, 424, 425, 428, 436, 437, 438, 442, 446, 447, 448, 451, 452, 453, 454, 455, 457, 459, 461, 462, 463, 464, 465, 471, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 487, 489, 490, 498, 499, 502, 510, 511, 512, 513, 514, 521, 523, 526, 527, 550, 553, 571, 573, 574, 575, 576, 578], "alt": [83, 85, 88, 94, 95, 377, 578], "alt_pnt": 91, "altaz": [83, 85, 94, 155, 377, 480, 578], "altaz_fram": [83, 94], "altaz_from_t": [83, 94], "altaz_interpol": 94, "altern": [82, 283, 376, 377, 380, 382, 386, 410, 428, 447, 451, 453, 455, 462, 476, 479, 480, 482, 484, 489, 510, 511, 574], "although": [377, 390, 391, 392, 394, 397, 401, 479, 489, 536, 537, 571, 578], "altitud": 448, "alwai": [77, 83, 87, 91, 149, 197, 200, 207, 213, 215, 231, 377, 378, 380, 383, 384, 385, 387, 388, 389, 391, 394, 402, 403, 410, 417, 424, 439, 440, 442, 454, 455, 459, 467, 475, 479, 481, 482, 484, 486, 487, 494, 512, 526, 527], "am": 386, "ambigu": [391, 436], "amend": 380, "among": [82, 87, 91, 102, 105, 109, 110, 133, 142, 393, 397, 398, 400, 405, 425, 479, 573], "amount": [384, 391, 405, 514], "amp": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 260, 567], "ampl_2": [153, 480], "ampl_3": [153, 480], "amplitud": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 48, 49, 68, 101, 125, 130, 132, 192, 193, 195, 204, 205, 210, 217, 224, 227, 229, 233, 240, 243, 250, 251, 252, 260, 262, 265, 266, 267, 277, 283, 296, 388, 389, 392, 400, 447, 448, 449, 451, 452, 453, 454, 455, 456, 459, 460, 461, 462, 463, 464, 467, 468, 469, 470, 471, 473, 474, 476, 477, 478, 479, 484, 485, 489, 490, 498, 499, 500, 512, 530, 531, 532, 533, 535, 536, 537, 538, 540, 541, 542, 544, 545, 547, 548, 550, 551, 552, 553, 555, 556, 557, 558, 561, 562, 563, 564, 565, 566, 567, 568, 569, 576], "amplitude_err": 473, "amplitude_maximum_signific": 474, "amplitude_maximum_vari": 474, "amplitude_ref": 471, "an": [6, 15, 16, 19, 20, 26, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 47, 50, 66, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 86, 87, 88, 89, 90, 91, 92, 93, 94, 101, 102, 103, 104, 105, 108, 109, 110, 111, 113, 115, 122, 123, 124, 125, 126, 127, 129, 130, 132, 139, 140, 141, 147, 149, 150, 151, 152, 154, 157, 160, 162, 164, 165, 168, 172, 175, 177, 180, 182, 183, 186, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 210, 213, 217, 218, 220, 221, 223, 224, 225, 227, 228, 229, 230, 232, 233, 234, 235, 236, 237, 238, 239, 240, 242, 245, 246, 247, 248, 249, 250, 251, 252, 253, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 269, 270, 272, 273, 274, 279, 286, 291, 293, 302, 304, 308, 322, 333, 337, 355, 361, 367, 368, 370, 373, 376, 378, 380, 382, 383, 384, 385, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 406, 407, 408, 409, 410, 413, 414, 417, 418, 421, 422, 423, 424, 425, 428, 430, 431, 432, 435, 436, 437, 439, 440, 442, 443, 447, 448, 449, 451, 452, 453, 454, 455, 456, 457, 459, 460, 461, 462, 465, 467, 468, 469, 470, 471, 473, 474, 476, 478, 479, 481, 482, 484, 485, 486, 487, 489, 490, 491, 492, 494, 496, 498, 499, 500, 502, 504, 509, 510, 511, 512, 514, 515, 516, 517, 518, 519, 520, 521, 523, 525, 526, 527, 530, 531, 532, 533, 534, 535, 536, 537, 538, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 561, 562, 563, 564, 565, 566, 567, 568, 569, 571, 573, 574, 575, 576, 577], "anaconda": [394, 408, 409], "analog": [87, 91, 192, 193, 195, 201, 204, 205, 527], "analogi": 398, "analys": [82, 376, 377, 386, 387, 388, 389, 391, 395, 397, 399, 400, 405, 413, 414, 420, 421, 422, 424, 425, 435, 437, 440, 451, 452, 459, 469, 470, 475, 476, 483, 485, 489, 490, 491, 498, 499, 502, 510, 574], "analysi": [6, 16, 57, 67, 70, 72, 74, 83, 102, 104, 105, 109, 110, 114, 116, 150, 151, 157, 162, 165, 174, 178, 376, 377, 378, 381, 387, 388, 389, 390, 391, 392, 393, 395, 396, 397, 398, 399, 400, 404, 407, 408, 409, 410, 413, 414, 417, 418, 419, 421, 422, 423, 428, 430, 432, 433, 434, 435, 436, 437, 438, 439, 442, 443, 445, 447, 449, 450, 455, 456, 457, 458, 462, 463, 465, 466, 467, 469, 470, 472, 473, 475, 476, 477, 479, 481, 482, 483, 484, 485, 486, 487, 489, 490, 491, 492, 499, 500, 502, 512, 514, 515, 519, 521, 522, 523, 524, 527, 553, 571, 573, 574, 576], "analysis3d": 438, "analysis_1": [445, 498, 501], "analysis_1d": 468, "analysis_2": [378, 445, 499, 501], "analysis_3d": [437, 445, 459, 466, 468], "analysis_joint": 459, "analysis_mwl": [445, 460, 466], "analysis_stack": 459, "analysisconfig": [15, 378, 452, 456, 457, 459, 468, 498], "analyt": [19, 20, 26, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 152, 153, 161, 163, 217, 218, 221, 225, 227, 228, 229, 233, 239, 240, 242, 246, 248, 250, 251, 252, 257, 262, 264, 265, 266, 267, 270, 274, 390, 395, 443, 478, 480, 485, 512, 533, 577], "analyz": [135, 295, 387, 573], "andrea": 390, "andrew": 437, "angl": [16, 17, 18, 21, 22, 24, 25, 27, 33, 34, 38, 68, 83, 89, 91, 96, 102, 105, 114, 116, 117, 121, 128, 132, 146, 150, 151, 152, 153, 154, 157, 159, 160, 161, 162, 163, 165, 168, 175, 176, 178, 180, 190, 191, 193, 198, 200, 203, 205, 206, 220, 224, 232, 235, 247, 249, 258, 259, 261, 263, 269, 271, 273, 276, 332, 364, 377, 383, 391, 393, 400, 404, 416, 418, 419, 420, 437, 446, 448, 451, 454, 460, 463, 464, 469, 473, 476, 482, 483, 485, 486, 489, 490, 514, 519, 523, 526, 527, 531, 532, 533, 536, 537, 573], "angle_incr": 175, "angular": [23, 102, 105, 114, 116, 127, 150, 151, 157, 162, 165, 168, 193, 200, 203, 205, 224, 232, 235, 271, 308, 311, 377, 393, 441, 453, 464, 471, 519, 520, 573], "angular_extens": 41, "angular_s": 527, "angular_separ": [400, 441, 443, 485], "ani": [16, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 82, 83, 84, 87, 90, 91, 104, 119, 123, 129, 151, 174, 192, 193, 195, 200, 201, 203, 204, 205, 304, 327, 362, 376, 377, 378, 380, 382, 383, 384, 385, 388, 389, 390, 391, 392, 393, 394, 395, 396, 398, 400, 403, 404, 406, 409, 410, 411, 412, 413, 417, 418, 436, 437, 438, 443, 452, 461, 462, 465, 468, 469, 471, 473, 477, 481, 482, 484, 485, 487, 489, 490, 491, 492, 498, 499, 500, 502, 511, 512, 524, 526, 527, 542, 574, 578], "ann": [23, 436], "anna": 377, "annihil": [17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 439, 485, 502], "annoi": [377, 574], "annot": [16, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 84, 90, 104, 123, 366, 404, 531], "announc": [377, 382, 384, 391, 393, 396, 398, 400, 402, 403, 406, 407], "annuli": [465, 527], "annulu": [126, 336, 527], "anonym": 380, "anoth": [19, 20, 26, 83, 86, 87, 91, 102, 105, 109, 110, 150, 151, 152, 157, 162, 164, 165, 194, 197, 217, 218, 219, 220, 221, 222, 223, 224, 225, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 242, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 269, 270, 271, 272, 273, 274, 275, 283, 377, 391, 392, 393, 395, 397, 398, 401, 404, 408, 409, 411, 413, 422, 437, 471, 477, 482, 483, 485, 527, 574], "another_posit": 523, "answer": [479, 514], "anti": [482, 483], "anticip": 386, "anymor": 439, "anyon": [382, 384, 489], "anyth": [149, 393, 574], "anytim": [380, 419], "anywai": [380, 391], "anywher": [391, 394, 396, 510], "ap": [382, 394, 402], "apart": 392, "apertur": 573, "api": [231, 381, 383, 386, 387, 388, 389, 390, 391, 393, 396, 397, 398, 402, 403, 414, 415, 417, 418, 419, 420, 422, 423, 424, 425, 428, 432, 436, 437, 445, 448, 451, 452, 455, 461, 463, 469, 477, 482, 483, 484, 485, 488, 489, 490, 498, 500, 501, 512, 513, 521, 571, 572, 573, 574], "apj": [288, 294], "aplpi": 437, "apologis": [417, 418, 437], "app": [87, 91, 407, 413, 436], "appear": [87, 91, 377, 378, 385, 391, 404, 431, 442, 476], "append": [87, 91, 92, 100, 145, 190, 191, 192, 193, 195, 200, 201, 203, 204, 205, 210, 245, 389, 390, 392, 423, 442, 448, 451, 453, 454, 459, 460, 461, 463, 469, 470, 471, 473, 477, 478, 479, 481, 484, 485, 486, 487, 523], "append_ax": [146, 147, 149, 152, 153, 154, 159, 161, 163, 205, 365], "appendix": [30, 132, 152, 242, 277, 296, 455], "appl": [409, 411, 413], "appli": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 83, 86, 87, 89, 91, 101, 102, 103, 105, 109, 110, 111, 114, 115, 116, 117, 121, 124, 125, 129, 132, 149, 150, 151, 157, 162, 164, 165, 169, 175, 178, 179, 192, 193, 195, 196, 200, 201, 203, 204, 205, 213, 215, 223, 231, 245, 261, 274, 284, 285, 286, 287, 316, 317, 362, 366, 374, 377, 383, 384, 387, 388, 390, 392, 395, 401, 402, 403, 425, 430, 435, 436, 437, 438, 442, 446, 451, 453, 463, 469, 470, 471, 473, 477, 478, 481, 482, 483, 484, 485, 487, 489, 492, 499, 500, 512, 514, 521, 559, 572, 575], "applic": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 68, 87, 91, 377, 388, 403, 405, 424, 474, 479, 526, 573], "apply_async": [324, 325], "apply_edisp": 443, "apply_hysteresis_threshold": 483, "apply_irf": [261, 424], "apply_mask": 198, "apply_psf": [388, 421], "apply_standard_scal": 96, "apply_threshold_sensit": 121, "apply_union": 207, "approach": [87, 91, 132, 377, 383, 385, 389, 393, 398, 401, 402, 404, 442, 446, 451, 481, 494, 573, 576], "appropri": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 83, 87, 91, 191, 192, 193, 195, 204, 205, 304, 312, 378, 453, 457, 459, 473, 482, 574], "approv": [383, 384, 385], "approx": [52, 53], "approxim": [101, 132, 133, 142, 178, 179, 191, 192, 193, 220, 224, 232, 235, 247, 258, 259, 263, 269, 273, 285, 287, 315, 388, 391, 419, 446, 451, 479, 489, 512, 523, 532, 533, 536, 537], "appveyor": 433, "apr": [399, 415], "april": [397, 404, 424], "apt": 410, "ar": [6, 11, 15, 16, 19, 20, 23, 26, 27, 28, 29, 30, 31, 32, 33, 35, 36, 37, 39, 40, 46, 57, 67, 70, 74, 77, 79, 80, 82, 83, 84, 85, 86, 87, 88, 90, 91, 96, 100, 101, 102, 104, 105, 108, 109, 110, 112, 114, 116, 117, 119, 121, 122, 123, 124, 125, 126, 127, 129, 130, 132, 133, 135, 136, 140, 141, 142, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 159, 160, 161, 162, 163, 164, 165, 166, 168, 169, 172, 173, 178, 179, 180, 185, 189, 190, 191, 192, 193, 195, 196, 197, 199, 200, 201, 202, 203, 204, 205, 209, 210, 212, 214, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 242, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 269, 270, 271, 272, 273, 274, 275, 276, 277, 283, 286, 291, 295, 300, 304, 316, 322, 324, 336, 337, 352, 366, 368, 373, 376, 377, 378, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 417, 418, 419, 420, 421, 422, 423, 424, 425, 428, 430, 431, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 446, 447, 448, 449, 451, 452, 453, 454, 455, 456, 457, 459, 460, 461, 462, 463, 464, 465, 467, 468, 469, 470, 471, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 489, 490, 491, 492, 494, 498, 499, 500, 502, 503, 504, 505, 509, 510, 511, 512, 514, 516, 517, 518, 519, 520, 521, 524, 525, 526, 527, 528, 531, 532, 540, 550, 569, 571, 572, 573, 574, 575, 576, 577, 578, 579], "arakelian": 292, "arang": [117, 392, 455, 469, 473, 526], "arb": 487, "arbitrari": [198, 200, 201, 388, 400, 423, 436, 463, 477, 482, 487, 526, 527], "arbitrary_types_allow": [16, 84, 90, 104, 123, 404], "arbitrarytypemetadata": 404, "architectur": [409, 411], "archiv": [403, 492, 499], "arcsec": 175, "arctan": 391, "area": [82, 88, 105, 107, 151, 152, 167, 178, 179, 186, 193, 201, 203, 205, 377, 378, 388, 432, 434, 446, 451, 463, 471, 481, 491, 492, 519, 526, 527, 573], "areasc": [435, 437], "aren": [353, 377, 391, 396, 397, 408, 409, 411], "arf": [106, 107, 110, 196, 197, 200, 201, 451, 527], "arf_ob": 106, "arffil": 106, "arg": [11, 16, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 53, 84, 87, 90, 91, 104, 109, 110, 123, 146, 147, 148, 152, 153, 154, 156, 159, 160, 161, 163, 164, 193, 194, 201, 218, 231, 243, 250, 251, 252, 327, 574], "arg_in_kwarg": 377, "argmax": 474, "argmin": 474, "argpars": [382, 574], "argsort": [87, 91], "argument": [11, 16, 19, 20, 23, 26, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 68, 83, 84, 86, 87, 88, 90, 91, 92, 93, 100, 101, 102, 104, 105, 108, 109, 110, 123, 124, 125, 127, 129, 132, 145, 146, 147, 148, 149, 152, 153, 154, 156, 159, 160, 161, 162, 163, 164, 165, 168, 178, 190, 191, 192, 193, 195, 196, 197, 199, 200, 201, 202, 203, 204, 205, 208, 210, 217, 218, 219, 220, 221, 222, 223, 224, 225, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 242, 245, 246, 247, 248, 249, 250, 251, 252, 253, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 269, 270, 271, 272, 273, 274, 275, 278, 284, 302, 304, 316, 322, 324, 325, 364, 365, 366, 370, 371, 372, 373, 374, 380, 383, 389, 392, 424, 425, 428, 430, 436, 442, 443, 455, 459, 464, 465, 479, 481, 482, 485, 486, 490, 499, 512, 514, 525, 526, 527, 550, 574], "aris": [382, 393, 514], "arithmet": [218, 388, 438, 482, 483, 485, 542], "arjun": [435, 436], "arm": [33, 34, 38, 45, 432], "arm64": [409, 411], "armstrong": 436, "arnau": [430, 439, 440, 441, 442], "around": [56, 140, 168, 191, 193, 203, 205, 316, 391, 392, 453, 471, 475, 479, 483, 491, 500, 514, 523, 526, 527], "arpit": 435, "arr": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40], "arrai": [19, 20, 28, 29, 30, 31, 32, 33, 35, 36, 37, 38, 39, 40, 82, 83, 85, 87, 91, 92, 94, 99, 100, 101, 102, 109, 110, 117, 122, 124, 125, 126, 129, 130, 132, 135, 140, 141, 146, 147, 148, 149, 152, 153, 154, 156, 159, 160, 161, 162, 163, 164, 165, 190, 191, 192, 193, 194, 195, 196, 197, 198, 200, 201, 202, 203, 204, 205, 208, 213, 217, 220, 221, 222, 223, 224, 225, 227, 228, 229, 230, 232, 233, 234, 235, 236, 237, 238, 239, 240, 242, 245, 247, 248, 249, 250, 251, 252, 253, 257, 258, 259, 260, 261, 262, 265, 266, 267, 271, 272, 273, 274, 275, 284, 285, 287, 289, 295, 300, 304, 315, 316, 317, 331, 332, 333, 337, 370, 371, 376, 377, 390, 391, 395, 401, 404, 413, 423, 436, 439, 441, 443, 453, 454, 463, 464, 471, 473, 476, 477, 479, 480, 482, 484, 485, 487, 489, 491, 492, 500, 526, 527, 534, 559, 562, 575, 576], "array_lik": [102, 109, 146, 147, 148, 149, 152, 153, 154, 156, 159, 161, 163, 164, 190, 191, 192, 193, 195, 200, 201, 203, 204, 205, 288, 294, 301], "array_shap": [441, 443], "arriba": [429, 432, 433], "arriv": [222, 230, 234, 236, 237, 238, 253, 260, 272, 275, 382, 390, 422, 423, 424, 463, 573, 577], "arrow": 572, "arrowprop": 531, "arrowstyl": 531, "artefact": [19, 20, 26, 217, 218, 221, 225, 227, 228, 229, 233, 239, 240, 242, 246, 248, 250, 251, 252, 257, 262, 264, 265, 266, 267, 270, 274], "arthmet": 388, "articl": [134, 136, 143, 292, 300, 382, 448, 469], "artifact": [121, 193], "artifici": 463, "artist": [200, 223, 245, 531, 532], "arxiv": [64, 65, 178, 251, 252, 266, 267, 460, 475, 476, 557, 558], "as_arrai": [87, 91], "as_artist": [200, 201, 485, 527, 531, 532], "as_energy_tru": [190, 191, 200, 203], "as_plot_cent": [194, 197, 202, 473], "as_plot_edg": [194, 197, 202], "as_plot_label": [194, 197, 202], "as_plot_scal": 197, "as_plot_xerr": [194, 197, 202], "asanyarrai": 377, "ascii": [87, 91, 124, 377], "asid": 478, "asimov": 487, "asinh": 455, "asinha": 82, "ask": [378, 380, 382, 384, 391, 393, 394, 397, 403, 412, 468, 500, 514, 515, 574], "asmooth": [117, 118, 396, 423, 434, 437], "asmoothestim": 398, "asmoothmapestim": [118, 398, 423, 425, 428, 455, 514], "aspect": [380, 403, 515, 574, 579], "assert": [194, 196, 197, 202, 352, 353, 354, 380, 388, 400, 482], "assert_allclos": 377, "assert_equ": 377, "assert_nam": [194, 196, 197, 202], "assert_quantity_allclos": [377, 432], "assess": [451, 453, 474], "assign": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 102, 103, 108, 109, 191, 261, 271, 373, 377, 386, 389, 392, 404, 406, 448, 467, 468, 477, 482, 485, 487, 499, 500, 526], "assist": 393, "asso": [71, 74, 75, 77, 78], "assoc": 71, "assoc1": [74, 75, 78, 476, 500], "assoc2": [74, 75, 78, 500], "assoc_fgl": 78, "assoc_fhl": 78, "assoc_gam": 75, "assoc_gam1": [74, 78], "assoc_gam2": [74, 78], "assoc_gam3": [74, 78], "assoc_new": 77, "assoc_prob_bai": 476, "assoc_prob_lr": 476, "assoc_tev": [74, 75, 78], "associ": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 67, 80, 87, 91, 100, 102, 105, 122, 131, 135, 136, 137, 138, 150, 151, 162, 165, 182, 183, 188, 201, 272, 295, 304, 377, 383, 393, 401, 402, 403, 404, 405, 442, 443, 447, 448, 449, 451, 455, 460, 476, 477, 478, 481, 482, 484, 485, 487, 491, 500, 511, 512, 514, 527, 576], "association_catalog": [67, 476], "association_nam": [67, 476], "assum": [23, 50, 51, 52, 53, 67, 82, 83, 85, 95, 101, 121, 122, 124, 132, 133, 134, 139, 142, 143, 152, 164, 175, 189, 191, 192, 193, 195, 198, 202, 204, 205, 210, 267, 273, 276, 283, 331, 334, 377, 380, 389, 390, 392, 400, 401, 405, 413, 414, 446, 447, 448, 451, 453, 454, 457, 463, 464, 465, 467, 475, 480, 482, 485, 487, 490, 504, 510, 512, 519, 571, 576], "assumpt": [72, 95, 102, 105, 109, 110, 117, 131, 134, 143, 391, 401, 447, 519, 523, 575], "astri": 97, "astrisim": 390, "astro": [6, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 125, 185, 192, 193, 195, 204, 205, 256, 274, 377, 378, 389, 396, 397, 401, 420, 429, 433, 437, 439, 443, 453, 475, 480, 482, 489, 503, 504, 506, 507, 508, 511, 573], "astro_dark_matt": [397, 445, 475, 488], "astromodel": 502, "astronom": [13, 391, 398, 436, 573], "astronomi": [11, 277, 376, 387, 391, 395, 407, 414, 435, 448, 451, 457, 461, 481, 489, 514, 523, 524, 571, 572, 573, 574, 575, 576, 578, 579], "astrophys": [6, 23, 308, 392, 514, 572, 573], "astropi": [13, 19, 20, 26, 27, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 52, 66, 83, 85, 86, 87, 88, 89, 90, 91, 92, 94, 96, 102, 105, 109, 110, 114, 116, 117, 122, 124, 126, 128, 129, 132, 140, 141, 149, 151, 160, 162, 175, 189, 190, 191, 192, 193, 195, 196, 198, 200, 201, 202, 203, 204, 205, 217, 218, 221, 225, 227, 228, 229, 233, 236, 237, 239, 240, 242, 246, 248, 250, 251, 252, 253, 257, 260, 261, 262, 264, 265, 266, 267, 270, 272, 274, 275, 277, 286, 295, 302, 303, 304, 334, 353, 354, 363, 367, 368, 372, 376, 378, 379, 380, 382, 383, 384, 388, 390, 391, 392, 394, 395, 396, 397, 398, 400, 401, 403, 404, 405, 406, 413, 414, 416, 420, 421, 422, 423, 427, 429, 430, 432, 433, 434, 435, 436, 437, 438, 439, 441, 443, 446, 447, 448, 449, 451, 452, 453, 454, 455, 456, 457, 459, 460, 461, 462, 463, 464, 465, 467, 468, 469, 470, 471, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 489, 490, 491, 492, 494, 498, 499, 500, 504, 506, 507, 508, 510, 511, 512, 514, 516, 518, 521, 523, 524, 525, 526, 527, 531, 532, 533, 534, 535, 538, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 561, 562, 563, 564, 565, 566, 567, 568, 569, 575, 578], "astropy_healpix": 386, "astropy_help": [377, 418, 419, 420], "astropy_introduct": 419, "astropy_timeseri": 392, "astropy_vers": 377, "astropydeprecationwarn": 463, "astyp": [87, 91], "asymetr": [101, 451], "asymmetr": [121, 125, 126, 129, 130, 132, 133, 142, 395, 418, 424, 443, 451, 487, 498, 512, 532], "asymmetri": 480, "asymptot": [576, 577], "atmospher": [392, 409, 414, 489], "atnf": 436, "atol": [86, 100, 129, 197, 202, 352, 354, 377], "atol_ax": [146, 147, 148, 149, 152, 153, 154, 156, 159, 161, 163, 164, 191, 192, 193, 195, 200, 201, 203, 204, 205], "atom": 393, "atproduction_gamma": 26, "atreye": [389, 392, 417, 418, 419, 420, 421, 422, 423, 424, 425, 427, 428, 430, 431, 436, 437, 438, 439, 440, 441, 442, 443], "attach": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 85, 94, 223, 231, 245, 261, 271, 388, 398, 441, 470, 479, 484, 485, 574], "attempt": [16, 84, 90, 104, 123, 380, 391, 394], "attenu": 447, "attr": 377, "attract": 397, "attribut": [15, 16, 17, 18, 19, 20, 21, 22, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 35, 36, 37, 38, 39, 40, 52, 53, 54, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 99, 100, 101, 102, 104, 105, 106, 107, 109, 110, 117, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 159, 160, 161, 162, 163, 164, 165, 167, 168, 169, 171, 172, 173, 174, 177, 178, 179, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 208, 209, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 242, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 269, 270, 271, 272, 273, 274, 275, 285, 287, 304, 387, 389, 399, 404, 405, 418, 419, 422, 423, 424, 425, 428, 430, 432, 434, 436, 441, 442, 443, 449, 453, 463, 479, 481, 482, 483, 485, 500, 510, 526, 527, 576], "attributeerror": 377, "attrribut": 482, "aug": [390, 393, 394, 396, 415], "august": [384, 390, 393, 396, 461], "author": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 380, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 404, 405, 406], "authoris": 403, "authorship": 381, "auto": [77, 192, 193, 195, 204, 205, 378, 380, 388, 397, 423, 437, 479, 574], "autocorrel": 135, "autodiff": 395, "autogener": 397, "autograd": [388, 395], "autom": [11, 385, 393, 403, 406, 407, 430, 479, 574], "automat": [16, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 83, 84, 90, 104, 112, 123, 125, 129, 132, 220, 224, 232, 235, 247, 258, 259, 263, 269, 273, 376, 377, 378, 380, 384, 385, 387, 388, 394, 397, 399, 403, 406, 417, 418, 424, 453, 461, 463, 479, 482, 574, 578], "automatis": 513, "autopep8": 377, "autoscal": [213, 214, 215, 216], "avail": [11, 13, 26, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 57, 67, 70, 72, 77, 78, 83, 87, 88, 91, 101, 102, 105, 109, 110, 121, 122, 124, 125, 129, 130, 132, 133, 142, 145, 166, 172, 178, 179, 197, 210, 213, 215, 219, 220, 224, 225, 232, 235, 247, 249, 258, 259, 263, 269, 271, 273, 277, 328, 365, 377, 380, 383, 384, 385, 386, 388, 389, 390, 391, 394, 395, 397, 404, 407, 408, 409, 410, 411, 412, 418, 422, 423, 424, 428, 431, 435, 437, 439, 442, 447, 451, 452, 455, 473, 478, 479, 481, 483, 485, 489, 490, 494, 498, 500, 502, 504, 505, 511, 513, 514, 516, 517, 518, 520, 528, 540, 572, 574, 576], "available_hdu": 88, "available_irf": 88, "available_method": [169, 178], "available_quant": [122, 124, 455, 478], "available_select": [172, 179], "available_stat_typ": 101, "averag": [19, 102, 105, 109, 110, 172, 179, 182, 183, 185, 186, 428, 447, 448, 451, 510], "averageaz": [463, 464], "avoid": [19, 20, 26, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 87, 91, 121, 172, 217, 218, 221, 225, 227, 228, 229, 233, 239, 240, 242, 246, 248, 250, 251, 252, 257, 262, 264, 265, 266, 267, 270, 274, 286, 377, 378, 383, 384, 385, 387, 391, 395, 396, 399, 400, 402, 403, 405, 428, 430, 439, 441, 442, 451, 457, 483, 487, 511, 514, 523, 574], "awai": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 285, 287], "awar": [377, 382, 389, 397, 403], "ax": [16, 19, 20, 26, 66, 67, 83, 101, 102, 105, 109, 110, 111, 112, 113, 115, 121, 122, 124, 126, 127, 132, 146, 147, 148, 149, 150, 151, 152, 153, 154, 156, 157, 159, 160, 161, 162, 163, 164, 165, 172, 179, 182, 183, 188, 190, 191, 192, 193, 194, 195, 196, 197, 198, 200, 201, 202, 203, 204, 205, 208, 217, 218, 219, 220, 221, 222, 223, 224, 225, 227, 228, 229, 230, 232, 233, 234, 235, 236, 237, 238, 239, 240, 242, 245, 246, 247, 248, 249, 250, 251, 252, 253, 257, 258, 259, 260, 262, 263, 264, 265, 266, 267, 269, 270, 272, 273, 274, 275, 285, 287, 364, 365, 369, 370, 371, 372, 373, 374, 377, 386, 396, 419, 423, 428, 434, 435, 436, 439, 442, 446, 447, 448, 449, 451, 452, 453, 454, 455, 456, 457, 459, 460, 461, 462, 463, 464, 465, 467, 468, 469, 470, 471, 473, 474, 475, 476, 477, 478, 479, 480, 481, 483, 484, 485, 486, 487, 489, 490, 491, 498, 499, 500, 510, 512, 514, 516, 521, 523, 524, 525, 526, 531, 532, 533, 537, 540, 568, 569, 573], "ax1": [446, 455, 457, 461, 471, 483, 484], "ax2": [446, 455, 457, 461, 471, 483, 484], "ax3": [455, 461], "ax_crab_3fhl": 500, "ax_ebl": 540, "ax_excess": [448, 451], "ax_model": 540, "ax_residu": [101, 109, 110, 448, 451, 452, 453, 471, 498], "ax_s": [452, 498], "ax_spati": [102, 105, 109, 110], "ax_spectr": [102, 105, 109, 110], "ax_spectrum": [101, 109, 110, 448, 451, 452, 453, 471], "ax_sqrt_t": [448, 451], "axcols1": 482, "axcols2": 482, "axel": [386, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443], "axes0": [192, 193, 195, 201, 204, 205], "axes_loc": [146, 147, 149, 152, 153, 154, 159, 161, 163, 205, 365], "axes_nam": [191, 192, 193, 195, 200, 201, 203, 204, 205], "axesimag": [365, 366], "axesn": [192, 193, 195, 201, 204, 205], "axi": [19, 20, 26, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 41, 83, 100, 101, 102, 105, 109, 110, 111, 112, 113, 115, 117, 121, 122, 124, 125, 126, 128, 129, 132, 133, 136, 142, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 156, 157, 159, 160, 161, 162, 163, 164, 165, 186, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 200, 201, 202, 203, 204, 205, 208, 217, 218, 221, 222, 223, 224, 225, 227, 228, 229, 230, 233, 234, 236, 237, 238, 239, 240, 242, 245, 246, 248, 250, 251, 252, 253, 257, 260, 262, 264, 265, 266, 267, 270, 271, 272, 274, 275, 281, 285, 286, 287, 291, 292, 293, 295, 315, 316, 326, 365, 370, 371, 372, 373, 383, 386, 399, 401, 420, 423, 424, 425, 428, 430, 435, 437, 438, 439, 442, 446, 448, 451, 452, 453, 454, 456, 457, 459, 461, 463, 464, 465, 467, 469, 470, 473, 474, 476, 477, 480, 481, 482, 489, 490, 491, 498, 499, 500, 510, 512, 514, 518, 523, 526, 527, 569, 573], "axis0": 526, "axis1": 482, "axis2": 482, "axis_edg": 370, "axis_nam": [101, 102, 105, 109, 110, 122, 124, 136, 144, 146, 147, 148, 149, 150, 151, 152, 153, 154, 156, 157, 159, 161, 162, 163, 164, 165, 190, 191, 192, 193, 195, 196, 198, 200, 201, 203, 204, 205, 465, 468, 469, 470, 477, 478], "axis_new": [124, 144, 469, 474], "axis_origin": 474, "axis_rgb": 372, "axis_tru": 461, "axisymmetr": 443, "axvlin": [454, 475, 486, 487], "axvspan": [201, 471], "az": [83, 85, 88, 94, 95, 377, 578], "azimuth": 490, "azur": 424, "b": [16, 19, 20, 26, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 48, 51, 52, 54, 77, 84, 87, 90, 91, 104, 123, 152, 210, 344, 377, 378, 391, 400, 403, 451, 462, 475, 476, 479, 482, 483, 485, 490, 500, 506, 510, 527], "b1509": 476, "b_0": [531, 532], "b_1": [87, 91], "b_mean": 42, "b_psr": 43, "b_stdv": 42, "back": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 69, 77, 87, 91, 193, 316, 380, 387, 388, 391, 397, 451, 452, 454, 482, 485, 498, 574], "backend": [93, 101, 119, 125, 126, 129, 130, 132, 168, 209, 210, 211, 212, 283, 319, 324, 325, 376, 386, 388, 418, 437, 438, 442, 448, 449, 451, 452, 453, 459, 460, 461, 471, 473, 478, 479, 490, 498, 499, 514, 571, 572], "backend_default": [126, 129, 132], "background": [16, 67, 82, 83, 88, 93, 102, 103, 105, 106, 108, 109, 110, 112, 113, 117, 121, 122, 124, 131, 146, 147, 148, 158, 167, 169, 170, 172, 173, 174, 175, 177, 178, 179, 185, 225, 231, 271, 278, 285, 287, 296, 297, 298, 299, 301, 373, 377, 383, 386, 389, 390, 391, 393, 397, 398, 401, 409, 414, 417, 418, 419, 421, 422, 423, 424, 425, 428, 429, 430, 432, 433, 434, 435, 436, 437, 438, 440, 442, 443, 445, 446, 447, 448, 451, 452, 453, 454, 455, 456, 458, 459, 461, 464, 465, 467, 468, 469, 470, 471, 473, 476, 477, 479, 480, 482, 483, 487, 491, 492, 494, 499, 510, 512, 513, 572, 573, 574, 576, 577], "background2d": [147, 148, 158, 424, 431, 439, 441, 443, 517], "background3d": [88, 146, 158, 185, 383, 424, 428, 436, 437, 438, 480, 489, 517], "background_estim": 396, "background_interp_missing_data": 172, "background_map": [271, 388], "background_min": 145, "background_model": [102, 105, 109, 110, 132, 389, 390, 397, 399, 424, 456, 499, 517], "background_oversampl": [172, 179, 481], "background_pad_offset": 172, "background_r": [396, 477], "backgroundconfig": 16, "backgroundestim": [392, 422], "backgroundevalu": 388, "backgroundirf": [146, 147], "backgroundirfmodel": 399, "backgroundmodel": [389, 399, 400, 421, 423, 424, 425, 428], "backgroundtempl": 388, "backport": [384, 402, 406], "backround": 386, "backscal": 201, "backward": [382, 391, 400, 401, 402, 420, 478, 512], "bad": [86, 377, 391], "badli": 407, "balanc": 510, "band": [19, 20, 26, 68, 83, 89, 119, 122, 124, 127, 150, 151, 154, 157, 162, 165, 190, 191, 192, 193, 195, 196, 199, 200, 201, 203, 204, 205, 217, 218, 221, 225, 227, 228, 229, 233, 239, 240, 242, 246, 248, 250, 251, 252, 257, 262, 264, 265, 266, 267, 270, 274, 383, 395, 396, 400, 401, 409, 417, 449, 451, 452, 460, 461, 462, 471, 475, 476, 485, 490, 492, 509, 510, 512, 572], "bandshdu": 482, "banner": 407, "bar": [15, 82, 87, 91, 102, 105, 109, 110, 117, 129, 132, 146, 147, 205, 210, 233, 293, 325, 371, 394, 428, 431, 432, 438, 443, 471, 487, 514, 547], "bar_radiu": 38, "base": [15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 50, 51, 52, 53, 54, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 117, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 159, 160, 161, 162, 163, 164, 165, 167, 168, 169, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 269, 270, 271, 272, 273, 274, 275, 285, 287, 303, 312, 313, 316, 322, 324, 326, 351, 364, 372, 377, 378, 380, 383, 384, 386, 387, 388, 389, 390, 391, 392, 393, 395, 396, 398, 400, 405, 407, 409, 410, 417, 419, 420, 422, 424, 425, 428, 430, 433, 434, 435, 436, 437, 443, 447, 451, 453, 454, 456, 459, 460, 461, 462, 463, 465, 471, 474, 476, 478, 480, 482, 483, 485, 486, 487, 489, 490, 499, 500, 502, 511, 512, 514, 524, 526, 538, 548, 572, 573, 575, 576], "base_dir": [82, 87, 312, 489, 491, 492, 502], "baselin": [82, 83, 238, 489], "basement": 419, "basemodel": [16, 84, 90, 104, 123, 404], "baseradi": 246, "bash": [409, 411, 574], "basi": [382, 383, 393, 396, 406, 430, 432, 471, 475], "basic": [45, 46, 67, 71, 72, 74, 75, 76, 78, 79, 80, 105, 110, 124, 237, 380, 383, 387, 388, 389, 390, 391, 393, 397, 401, 404, 413, 425, 435, 437, 445, 448, 451, 453, 466, 468, 474, 475, 476, 483, 494, 500, 502, 504, 505, 512, 523, 526, 573, 574], "basicconfig": [16, 461, 496], "bayesian": 395, "bayesian_block": 474, "bayesian_edg": 474, "baysian": 386, "bb": [87, 91, 403], "bbar": [19, 20], "bbox_with_unit": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40], "bcf": [147, 151, 152, 153, 162, 446, 454, 467, 470, 480, 489], "becam": 384, "becaus": [16, 84, 90, 104, 123, 192, 193, 195, 199, 201, 204, 205, 377, 378, 380, 382, 384, 388, 389, 391, 392, 396, 400, 401, 404, 407, 428, 430, 448, 449, 452, 465, 469, 471, 481, 482, 483, 484, 489, 490, 491, 498, 499, 500, 510, 514, 574, 577], "becom": [377, 385, 387, 388, 391, 396, 404, 463, 469, 485, 514, 574, 577], "been": [16, 19, 20, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 84, 90, 100, 104, 121, 122, 123, 124, 164, 213, 217, 220, 221, 224, 225, 227, 228, 229, 230, 232, 233, 234, 235, 236, 237, 238, 239, 240, 242, 249, 250, 251, 252, 253, 257, 258, 259, 260, 262, 265, 266, 267, 272, 273, 304, 382, 383, 384, 385, 386, 388, 391, 392, 393, 394, 395, 396, 398, 399, 400, 401, 402, 404, 405, 408, 410, 424, 425, 428, 430, 431, 437, 438, 439, 440, 441, 442, 443, 447, 452, 462, 469, 470, 471, 473, 478, 482, 485, 486, 489, 491, 498, 511, 526, 559], "befor": [13, 16, 17, 18, 19, 20, 21, 22, 24, 25, 27, 52, 53, 84, 87, 90, 91, 92, 100, 104, 122, 123, 192, 193, 213, 217, 220, 221, 224, 225, 227, 228, 229, 230, 232, 233, 234, 235, 236, 237, 238, 239, 240, 242, 245, 249, 250, 251, 252, 253, 257, 258, 259, 260, 262, 265, 266, 267, 272, 273, 316, 372, 377, 378, 380, 382, 384, 385, 386, 387, 391, 392, 393, 395, 396, 402, 406, 407, 413, 431, 437, 447, 452, 454, 468, 469, 478, 479, 482, 485, 491, 494, 498, 550, 574], "beforevalid": 90, "begin": [52, 87, 91, 102, 109, 122, 124, 132, 397, 400, 403, 451, 453, 482, 485, 531, 536, 537, 541, 557, 576], "behav": [377, 387, 442, 456, 577], "behavior": [16, 84, 87, 90, 91, 95, 104, 123, 401, 427, 431, 442], "behaviour": [352, 377, 399, 400, 425, 430, 436, 443, 469, 483, 490, 491, 510, 575], "behind": 473, "being": [121, 131, 193, 377, 382, 385, 391, 398, 401, 407, 453, 462, 474, 483, 503, 514, 527, 574], "belief": 487, "believ": [412, 487], "belong": [86, 401, 424], "below": [52, 53, 87, 91, 191, 195, 202, 203, 366, 367, 368, 372, 374, 378, 380, 381, 386, 387, 391, 393, 394, 397, 400, 401, 403, 404, 405, 407, 408, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 430, 431, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 446, 451, 455, 471, 476, 479, 481, 483, 485, 486, 487, 489, 490, 511, 514, 532, 576], "benchmark": [393, 403, 407], "benefit": 394, "benn": 393, "berg": 573, "berge2007": [391, 523, 524, 573], "bernet": 443, "besancon": 504, "besid": [121, 132, 391, 392, 401, 452, 453, 482, 490, 498, 499, 527], "best": [67, 71, 74, 75, 78, 80, 101, 122, 124, 125, 126, 129, 130, 140, 211, 212, 283, 285, 287, 370, 377, 380, 387, 390, 395, 403, 409, 411, 447, 449, 451, 452, 453, 456, 459, 462, 471, 476, 478, 479, 487, 498, 512, 514, 516, 540, 546, 549, 550, 554, 576, 577, 578], "best_fit_model": 453, "beta": [27, 28, 48, 210, 238, 239, 240, 262, 400, 402, 424, 447, 449, 453, 460, 476, 479, 542, 548, 549, 550, 555, 565], "better": [377, 380, 382, 383, 384, 385, 386, 390, 391, 396, 397, 398, 401, 418, 435, 436, 459, 460, 463, 471, 473, 479, 482, 483, 490, 510], "between": [19, 20, 26, 67, 77, 87, 88, 91, 94, 105, 110, 119, 121, 122, 124, 126, 127, 129, 140, 141, 153, 159, 161, 162, 163, 165, 175, 189, 191, 192, 193, 194, 195, 197, 200, 201, 202, 203, 204, 205, 217, 218, 221, 222, 225, 227, 228, 229, 230, 233, 234, 236, 237, 238, 239, 240, 242, 246, 248, 250, 251, 252, 253, 257, 260, 262, 264, 265, 266, 267, 270, 272, 274, 275, 277, 283, 301, 334, 367, 368, 375, 377, 378, 385, 387, 388, 389, 390, 391, 393, 394, 396, 397, 398, 401, 402, 404, 405, 415, 425, 428, 431, 442, 446, 453, 455, 460, 462, 465, 470, 471, 474, 478, 479, 481, 482, 483, 484, 487, 490, 491, 500, 510, 512, 519, 520, 523, 532, 533, 573, 576, 578], "bewar": [272, 448, 469], "bexcub": 196, "bexpcub": [191, 192, 193, 195, 204, 205, 482], "beyond": [196, 391, 401, 404, 424, 481, 502], "bfg": 479, "bgstat": 434, "bi": [435, 438], "bia": [96, 149, 150, 154, 178, 436, 442, 481, 487, 518], "bias": [453, 575], "bias_energi": 149, "bias_perc": 178, "bibliographi": 573, "biederbeck": [405, 443], "big": [384, 387, 394, 406, 438, 490, 575, 577], "bigger": 193, "biggest": 396, "billion": 377, "bimod": 31, "bin": [19, 20, 26, 83, 86, 88, 102, 105, 108, 109, 110, 112, 117, 119, 121, 122, 124, 125, 127, 128, 129, 131, 132, 134, 135, 136, 137, 138, 143, 144, 145, 149, 150, 151, 152, 154, 157, 160, 162, 164, 165, 172, 174, 175, 176, 178, 180, 189, 190, 191, 192, 193, 194, 195, 196, 197, 200, 201, 202, 203, 204, 205, 217, 218, 220, 221, 222, 223, 224, 225, 227, 228, 229, 230, 232, 233, 234, 235, 236, 237, 238, 239, 240, 242, 245, 246, 247, 248, 249, 250, 251, 252, 253, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 269, 270, 271, 272, 273, 274, 275, 279, 288, 294, 295, 301, 370, 372, 375, 383, 388, 389, 390, 391, 393, 396, 397, 401, 408, 409, 419, 420, 422, 423, 425, 427, 428, 430, 433, 434, 435, 436, 437, 442, 443, 447, 448, 451, 452, 453, 454, 455, 456, 457, 459, 460, 461, 463, 464, 465, 467, 468, 469, 470, 471, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 487, 489, 490, 491, 492, 498, 499, 500, 510, 512, 514, 518, 521, 522, 572, 573, 574, 575, 577], "bin_cent": 471, "bin_edg": 471, "bin_volum": [196, 200, 203, 527], "bin_width": [194, 197, 202, 471], "binari": [203, 205, 385, 391, 394, 403, 407, 428], "binary_dil": [205, 483], "binary_erod": [205, 483], "binary_eros": [205, 428], "binary_structur": 203, "bincent": 295, "bind": 380, "binder": [385, 406, 436, 439, 446, 447, 448, 449, 451, 452, 453, 454, 455, 456, 457, 459, 460, 461, 462, 463, 464, 465, 467, 468, 469, 470, 471, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 489, 490, 491, 492, 494, 496, 498, 499, 500, 530, 531, 532, 533, 534, 535, 536, 537, 538, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 561, 562, 563, 564, 565, 566, 567, 568, 569], "binlik": 124, "binned_likelihood": 125, "binneddataaxi": [419, 435], "binnedtimeseri": [124, 392], "bins_axi": 205, "binsiz": [16, 452, 456, 457, 459, 468, 498, 499], "binsize_irf": [16, 452, 456, 457, 459, 468, 498], "binsz": [102, 105, 109, 110, 111, 115, 151, 160, 162, 172, 175, 176, 180, 190, 191, 192, 193, 195, 200, 201, 203, 204, 205, 393, 451, 461, 462, 463, 464, 467, 471, 475, 477, 480, 481, 482, 483, 485, 490, 491, 499, 521, 523, 524, 526, 527, 530, 532, 533, 534, 535], "binsz_irf": [102, 105, 109, 110, 113, 477, 481, 514], "binsz_irf_default": [102, 105, 109, 110, 481], "binsz_wc": [200, 201], "bintabl": [191, 192, 193, 195, 204, 205], "bintablehdu": [83, 86, 146, 147, 148, 149, 152, 153, 154, 156, 159, 161, 163, 164, 191, 192, 193, 196, 197, 203, 204, 205, 463, 482, 510], "birth": [29, 30, 36, 50, 51, 52, 53], "bit": [83, 140, 378, 380, 384, 385, 391, 395, 396, 404, 471, 482, 527], "bitbucket": 492, "bitpix": 482, "biycc6n9": 473, "bkg": [16, 82, 87, 88, 102, 106, 107, 109, 110, 146, 147, 148, 178, 185, 231, 399, 423, 425, 430, 446, 451, 452, 456, 457, 459, 460, 463, 464, 467, 471, 477, 480, 481, 484, 489, 491, 492, 498, 499, 510, 517, 573, 575, 576, 577], "bkg_": [102, 109], "bkg_2d": [87, 146], "bkg_3d": [82, 87, 147, 489, 492], "bkg_err": 471, "bkg_maker": [399, 448, 451, 453, 461, 469, 473, 523], "bkg_model": [389, 399, 405, 459, 463, 464, 467, 484, 499, 534], "bkg_ob": 106, "bkg_sy": 131, "bkg_syst_fract": [131, 446], "bkg_syst_fraction_sensit": 121, "bkgfile": 106, "black": [109, 110, 366, 367, 374, 395, 437, 439, 446, 471, 475, 481, 486, 523, 559], "blackground": 446, "blanch": [436, 437], "blanklin": [237, 413, 512, 527], "blazar": [300, 447, 473], "blind": [439, 514], "bll": 500, "blob": 416, "block": [378, 380, 383, 390, 397, 407, 416, 436], "block_reduc": 437, "blue": [101, 102, 105, 109, 110, 367, 447, 451, 457, 459, 462, 486, 523, 559], "blur": 33, "board": [386, 397], "bodi": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40], "boilerpl": 377, "boller": 474, "boni": [428, 431], "bool": [15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 45, 80, 82, 83, 84, 86, 87, 88, 90, 91, 93, 96, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 113, 114, 116, 121, 122, 123, 124, 125, 129, 130, 132, 139, 146, 147, 148, 149, 150, 151, 152, 153, 154, 156, 157, 159, 160, 161, 162, 163, 164, 165, 168, 172, 179, 182, 183, 185, 186, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 207, 210, 211, 213, 214, 215, 216, 217, 220, 221, 223, 224, 225, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 242, 245, 249, 250, 251, 252, 253, 257, 258, 259, 260, 261, 262, 265, 266, 267, 269, 270, 271, 272, 273, 286, 301, 304, 313, 316, 317, 334, 340, 343, 345, 346, 348, 374, 377, 391, 461, 476, 481, 482], "boolean": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 83, 87, 91, 122, 125, 126, 129, 130, 191, 192, 193, 195, 198, 200, 201, 203, 204, 205, 210, 223, 245, 261, 393, 425, 459, 476, 482, 483, 484], "boost": 463, "bootstrap": [87, 91], "border": 91, "bose": 419, "bot": 383, "both": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 57, 70, 77, 82, 83, 86, 87, 88, 91, 100, 101, 102, 105, 106, 107, 109, 110, 122, 124, 149, 150, 151, 157, 162, 165, 189, 192, 193, 195, 197, 199, 200, 201, 203, 204, 205, 213, 215, 377, 382, 383, 388, 389, 390, 391, 392, 397, 402, 406, 418, 422, 424, 425, 428, 431, 452, 453, 463, 467, 477, 478, 482, 483, 484, 486, 487, 511, 512, 514, 526, 527, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 561, 562, 563, 564, 565, 566, 567, 576], "bother": 456, "bottom": [397, 399, 447, 463, 468, 469, 470, 476], "bound": [17, 18, 19, 20, 21, 22, 24, 25, 26, 27, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 100, 102, 105, 109, 110, 122, 124, 125, 126, 129, 197, 200, 202, 210, 217, 218, 221, 222, 223, 225, 227, 228, 229, 230, 233, 234, 236, 237, 238, 239, 240, 242, 245, 246, 248, 250, 251, 252, 253, 257, 260, 262, 264, 265, 266, 267, 270, 271, 272, 274, 275, 299, 386, 482, 487], "boundari": [197, 203, 273, 405, 433, 479, 485, 526], "boundary_mask": [203, 483], "boundary_typ": 197, "bounding_box": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40], "bounds_error": [146, 147, 148, 149, 152, 153, 154, 156, 159, 161, 163, 164, 377, 480], "box": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 91, 102, 105, 126, 127, 200, 203, 205, 336, 337, 386, 391, 395, 401, 435, 483, 485, 527], "bpl": [217, 400, 485], "bpwl_norm": 400, "bracket": [149, 210, 440, 442], "brake": 51, "branch": [377, 380, 384, 391, 402, 407, 416], "branchnam": 377, "bratio": 502, "break": [217, 262, 383, 391, 393, 402, 422, 423, 424, 541, 555], "brent": 455, "brentq": [19, 20, 26, 124, 210, 217, 218, 221, 225, 227, 228, 229, 233, 239, 240, 242, 246, 248, 250, 251, 252, 257, 262, 264, 265, 266, 267, 270, 274, 284], "breviti": [459, 514], "brief": 578, "briefli": [491, 492], "bright": [68, 126, 261, 276, 457, 468, 469, 483, 485, 508, 523], "brighter": 463, "brightest": 476, "brigitta": [394, 418, 420, 422, 424, 433, 434, 435, 436, 437, 438, 439], "bring": 382, "broadcast": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 87, 91, 192, 193, 195, 198, 201, 204, 205, 261, 316, 464, 480, 482, 526], "broadcasted_shap": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40], "broken": [217, 262, 403, 445, 473, 528, 560], "brokenpowerlaw": 400, "brokenpowerlawspectralmodel": [256, 262, 400, 425, 485, 541], "brown": [136, 474], "brown2013": 136, "brows": [87, 91, 378, 413, 500], "browser": [87, 91, 380, 407, 413, 433, 436, 446, 447, 448, 449, 451, 452, 453, 454, 455, 456, 457, 459, 460, 461, 462, 463, 464, 465, 467, 468, 469, 470, 471, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 489, 490, 491, 492, 496, 498, 499, 500, 530, 531, 532, 533, 534, 535, 536, 537, 538, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 561, 562, 563, 564, 565, 566, 567, 568, 569], "bruno": [403, 420, 422, 425, 428, 431, 435, 436, 437, 439, 440, 441, 442, 443], "br\u00fcgge": [436, 437], "bsd": 403, "bst": [87, 91], "buchner": 428, "budget": 514, "buffer": 355, "bug": [377, 380, 383, 384, 402, 403, 406, 415, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 431, 433, 434, 435, 436, 437, 438, 440, 441], "bugfix": [384, 386, 402, 435, 436], "build": [16, 84, 90, 104, 123, 191, 225, 377, 383, 384, 385, 390, 391, 393, 397, 401, 402, 403, 404, 406, 424, 430, 439, 455, 459, 471, 481, 483, 511, 514, 574], "build_doc": [341, 378, 380, 446, 448, 451, 452, 453, 454, 455, 456, 457, 459, 460, 461, 462, 463, 464, 465, 467, 468, 469, 470, 471, 473, 475, 476, 477, 479, 481, 482, 483, 484, 485, 487, 489, 490, 491, 492, 498, 499, 500, 538, 546, 562], "built": [10, 179, 225, 344, 361, 376, 377, 378, 388, 389, 391, 393, 394, 396, 404, 407, 414, 437, 442, 476, 484, 490, 494, 510], "builtin": 500, "bullet": 382, "bump": [391, 435], "bunch": [103, 108, 378, 574], "bundl": [101, 102, 105, 109, 110, 386, 389, 407, 429, 437, 461, 477, 481, 510, 527, 572, 573], "bunit": [363, 437, 482], "bureaucrat": 382, "burkert": [17, 502], "burst": 474, "butterfli": [436, 479, 500], "button": [439, 482], "bx": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40], "by_alia": [16, 84, 90, 104, 123], "byte": [16, 84, 87, 90, 91, 104, 123, 322, 355, 377], "bytearrai": [16, 84, 90, 104, 123, 322], "bytestr": [87, 91], "b\u00fchler": 416, "c": [26, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 48, 87, 91, 198, 208, 227, 265, 288, 294, 304, 344, 376, 377, 394, 409, 410, 412, 429, 436, 451, 457, 471, 473, 475, 479, 487, 489, 490, 502, 526, 545, 556, 574, 575, 577], "c0": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40], "c1": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40], "c7": 101, "c_": 208, "c_0": [190, 191, 200, 203], "c_i": [190, 191, 200, 203], "c_n": [190, 191, 200, 203], "cach": [87, 88, 91, 100, 102, 105, 109, 110, 271, 312, 313, 386, 387, 389, 396, 399, 407, 421, 425, 428, 443], "cahil": 430, "cal_gen_92_002": [149, 197], "cal_gen_92_002_summari": 149, "calcul": [13, 15, 19, 20, 26, 96, 105, 110, 135, 136, 137, 138, 178, 217, 218, 221, 225, 227, 228, 229, 233, 239, 240, 242, 246, 248, 250, 257, 262, 264, 265, 266, 267, 270, 273, 274, 290, 292, 293, 301, 303, 326, 359, 367, 368, 387, 390, 418, 424, 428, 429, 430, 436, 441, 443, 446, 471, 474, 475, 478, 487, 498, 499, 502, 514, 573, 577], "caldb": [82, 147, 149, 151, 152, 153, 162, 197, 430, 446, 454, 463, 464, 467, 470, 480, 489], "calendar": [402, 406], "calib_vers": [490, 500], "call": [16, 17, 18, 19, 20, 21, 22, 24, 25, 26, 27, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 83, 84, 86, 87, 90, 91, 101, 102, 104, 105, 109, 110, 123, 135, 136, 137, 138, 146, 147, 148, 149, 152, 153, 154, 156, 159, 161, 163, 164, 174, 190, 191, 200, 203, 210, 217, 218, 219, 220, 221, 224, 225, 227, 228, 229, 232, 233, 235, 239, 240, 242, 246, 247, 248, 249, 250, 251, 252, 254, 257, 258, 259, 261, 262, 263, 264, 265, 266, 267, 269, 270, 273, 274, 316, 328, 349, 355, 363, 366, 374, 377, 378, 380, 382, 383, 386, 389, 390, 391, 392, 393, 395, 397, 399, 401, 403, 405, 407, 409, 413, 424, 428, 442, 451, 452, 461, 476, 477, 478, 479, 481, 482, 485, 490, 492, 498, 499, 500, 510, 514, 523, 524, 525, 526, 527, 574, 575, 576, 577], "callabl": [16, 45, 84, 90, 104, 123, 279], "callback": [168, 574], "caller": [377, 388], "camera": [470, 480, 481], "can": [15, 16, 19, 20, 26, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 46, 47, 50, 56, 67, 68, 69, 77, 82, 83, 84, 87, 90, 91, 93, 102, 104, 105, 108, 109, 110, 113, 117, 121, 122, 123, 124, 129, 130, 132, 133, 140, 142, 147, 152, 160, 162, 165, 169, 175, 178, 190, 191, 192, 193, 195, 197, 198, 200, 201, 202, 203, 204, 205, 207, 210, 214, 216, 217, 218, 220, 221, 223, 224, 225, 227, 228, 229, 232, 233, 235, 237, 239, 240, 242, 245, 246, 247, 248, 250, 251, 252, 257, 258, 259, 262, 263, 264, 265, 266, 267, 269, 270, 273, 274, 284, 286, 291, 304, 316, 317, 322, 325, 334, 353, 355, 370, 374, 376, 377, 378, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 416, 418, 420, 422, 424, 425, 428, 430, 431, 435, 436, 437, 438, 439, 442, 443, 446, 447, 448, 449, 451, 452, 453, 454, 455, 456, 457, 459, 460, 461, 462, 463, 464, 465, 467, 468, 469, 470, 471, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 489, 490, 491, 492, 494, 498, 499, 500, 502, 504, 505, 510, 511, 512, 514, 517, 518, 519, 520, 521, 523, 524, 525, 526, 527, 548, 550, 559, 569, 571, 572, 573, 574, 575, 576, 577], "candel": 225, "candid": [402, 430, 476], "candl": [277, 573], "cannot": [16, 67, 84, 87, 90, 91, 95, 104, 112, 122, 123, 124, 207, 294, 344, 374, 380, 390, 391, 442, 480, 484, 485, 512, 527], "cap": [51, 54], "capabl": [387, 490, 502], "capsiz": 487, "captur": [377, 393], "car": [102, 105, 109, 110, 172, 203, 204, 205, 223, 245, 391, 420, 461, 480, 481, 482, 499, 500], "card": [83, 86, 88, 100, 101, 102, 105, 106, 107, 109, 110, 122, 124, 149, 150, 151, 157, 162, 165, 192, 193, 195, 199, 201, 204, 205, 482], "care": [122, 124, 304, 377, 386, 393, 402, 448, 453, 459, 482, 574], "carefulli": [403, 463, 464, 487], "carina": [33, 38], "carlo": [395, 519, 573], "carri": [392, 400, 402, 404, 428, 449, 499], "carr\u00e9": 203, "cartesian": [41, 46, 193, 204, 205, 307, 309, 441, 500, 526], "case": [15, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 67, 69, 77, 83, 87, 91, 101, 149, 168, 180, 191, 193, 199, 200, 203, 205, 210, 213, 215, 235, 246, 269, 271, 273, 284, 294, 317, 334, 372, 377, 378, 380, 382, 385, 386, 388, 389, 390, 391, 392, 393, 394, 396, 397, 398, 399, 400, 401, 403, 404, 406, 407, 409, 417, 418, 421, 424, 430, 431, 436, 442, 443, 446, 448, 451, 452, 453, 454, 456, 457, 459, 463, 464, 467, 468, 470, 471, 474, 476, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 490, 492, 494, 498, 500, 509, 512, 513, 514, 524, 527, 531, 532, 533, 536, 537, 541, 550, 557, 572, 574, 576], "casebattacharya1998": [29, 30, 35, 36, 39, 40, 48], "cash": [102, 105, 109, 110, 172, 289, 294, 377, 389, 428, 454, 456, 459, 467, 470, 477, 481, 484, 487, 498, 499, 510, 573], "cash1979": [573, 576], "cashcountsstatist": [413, 443, 574, 576], "cast": 91, "cat": [66, 67, 79, 385, 407, 435, 436, 449, 476, 485, 509, 573, 574], "catalof": 69, "catalog": [6, 45, 46, 47, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 121, 125, 391, 397, 416, 420, 422, 424, 428, 429, 430, 433, 434, 435, 436, 437, 439, 443, 445, 447, 449, 455, 460, 477, 485, 488, 490, 494, 504, 538, 572, 573], "catalog_3fgl": 449, "catalog_3fhl": [449, 476], "catalog_3fhl_bright": 476, "catalog_4fgl": 476, "catalog_4fgl_roi": 476, "catalog_gammacat": [449, 476], "catalog_hgp": 476, "catalog_registri": [449, 476, 483], "catalogimageestim": 437, "catalogu": [78, 428, 435], "catch_warn": 514, "categori": [377, 388, 401, 428, 483, 485, 528], "caus": [384, 391, 437, 440, 514], "cautious": 462, "caveat": [210, 300, 443, 532], "cax": 480, "cb98": 48, "cbar": 365, "cbar_kw": 371, "cbarlabel": 371, "cbybx": 473, "cc": [386, 391, 393, 396, 398, 400, 403, 405], "ccube": [191, 192, 193, 195, 196, 197, 203, 204, 205, 482], "cd": [377, 378, 380, 393, 409, 410, 411], "cdelt": [203, 205], "cdelt1": 482, "cdelt2": 482, "cdf": [326, 390, 463, 479], "cdot": [51, 52, 53, 54, 102, 109, 250, 265, 400, 485, 510, 531, 536, 537, 541, 544, 545, 552, 553, 555, 556, 557, 558, 563, 564, 565, 567, 575], "celesti": [482, 526, 531, 535, 578], "celfix": 538, "cell": [385, 413, 439, 460, 471, 482, 489, 490, 500], "center": [17, 18, 21, 22, 23, 24, 25, 27, 41, 83, 87, 91, 96, 102, 105, 109, 110, 122, 124, 126, 127, 128, 132, 149, 150, 151, 152, 153, 154, 157, 161, 162, 163, 165, 172, 175, 176, 178, 179, 180, 182, 183, 185, 186, 191, 192, 193, 194, 195, 196, 197, 200, 201, 202, 203, 204, 205, 206, 219, 220, 223, 224, 232, 235, 245, 247, 249, 258, 259, 261, 263, 269, 271, 273, 306, 310, 336, 377, 378, 391, 393, 400, 401, 418, 419, 428, 430, 443, 446, 448, 451, 453, 454, 455, 456, 457, 459, 461, 463, 464, 465, 469, 470, 471, 473, 475, 480, 481, 482, 483, 484, 485, 489, 490, 499, 500, 516, 517, 518, 519, 520, 521, 523, 524, 526, 527, 531, 532, 535], "center_coord": [190, 191, 196, 200, 203], "center_pix": [190, 191, 200, 203], "center_ski": 527, "center_skydir": [190, 191, 200, 203, 481, 482, 490, 491, 521, 523, 524], "centr": [475, 483, 502], "central": [389, 398, 449, 500], "cern": 502, "certain": [50, 83, 87, 91, 210, 291, 376, 391, 393, 395, 401, 446, 475, 481, 482, 490, 509, 527], "certainli": 380, "certif": 403, "certifi": 403, "cfa": [210, 479], "cff": 406, "cg": 506, "ch": 53, "chain": [168, 390, 393, 422, 481, 514, 524, 573], "chainer": 395, "chakraborti": [434, 435], "challeng": [384, 386, 390, 435, 457, 459, 461, 489], "chanc": 382, "chang": [16, 19, 20, 26, 84, 86, 87, 90, 91, 104, 122, 123, 124, 191, 200, 203, 217, 218, 221, 225, 227, 228, 229, 233, 237, 239, 240, 242, 246, 248, 250, 251, 252, 257, 262, 264, 265, 266, 267, 270, 274, 352, 362, 378, 380, 381, 382, 384, 385, 386, 387, 388, 389, 390, 391, 392, 394, 395, 396, 397, 399, 401, 402, 403, 406, 407, 415, 417, 418, 419, 420, 421, 422, 423, 424, 425, 428, 430, 434, 435, 436, 437, 438, 440, 444, 453, 454, 455, 461, 463, 464, 468, 473, 474, 477, 478, 479, 483, 485, 487, 489, 498, 510, 514, 521, 523, 527, 538, 546, 574], "changelog": [377, 406, 429, 437], "channel": [19, 20, 26, 376, 379, 380, 394, 436, 464, 475, 482, 492, 502], "channel0": 502, "channel1": 502, "channel_registri": [19, 20, 26], "chapter": 475, "charact": [87, 91, 377, 484], "character": [293, 401, 463], "characterist": [21, 25, 27, 51, 52, 53, 54, 136, 291, 388, 442, 474, 573], "charg": [403, 550], "chatti": [377, 461], "cheat": 412, "check": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 82, 83, 86, 87, 88, 91, 102, 105, 106, 109, 110, 122, 124, 149, 150, 151, 157, 162, 165, 190, 191, 192, 193, 194, 195, 196, 197, 200, 201, 202, 203, 204, 205, 214, 216, 223, 245, 261, 300, 351, 353, 380, 393, 399, 403, 406, 407, 409, 410, 411, 414, 423, 428, 436, 449, 467, 473, 480, 494, 502, 514, 518, 527, 571, 574, 575], "check_limit": [213, 214, 215, 216], "check_random_st": 377, "check_tutorials_setup": [446, 448, 451, 452, 453, 454, 455, 456, 457, 459, 460, 461, 462, 463, 464, 465, 468, 469, 470, 471, 475, 476, 477, 479, 481, 482, 483, 484, 485, 487, 489, 490, 491, 492, 498, 499, 500], "checker": [434, 437], "checklist": 407, "checkout": [377, 380, 419, 459, 463, 485], "checksum": [83, 86, 88, 100, 101, 102, 105, 106, 107, 109, 110, 122, 124, 149, 150, 151, 157, 162, 165, 192, 193, 195, 199, 201, 204, 205, 211, 223, 245, 340, 343, 346, 443, 460, 490], "chen": 437, "cherenkov": [152, 390, 409, 414, 448, 451, 457, 468, 481, 489, 491, 523, 524, 573], "cherri": [377, 384, 391, 402], "chi": [290, 392, 575, 576, 577], "chi2": [101, 134, 143, 389, 419, 451, 462, 470, 479, 510, 576], "chi2assym": 422, "child": 387, "children": [459, 467, 482, 498, 499], "chime": 380, "chisq": 290, "chisquar": 290, "chmod": 574, "chnnillw": 481, "choic": [135, 390, 394, 396, 403, 451, 452, 454, 456, 479, 491, 498, 515, 571, 574], "choos": [45, 77, 190, 191, 194, 196, 197, 200, 203, 274, 318, 389, 391, 393, 397, 409, 411, 428, 449, 451, 455, 459, 461, 470, 477, 479, 481, 482, 484, 485, 486, 490, 499, 514, 574], "chose": [463, 490, 491, 576, 578], "chosen": [26, 149, 162, 165, 191, 192, 193, 201, 204, 205, 223, 232, 245, 377, 380, 392, 393, 396, 452, 469, 481, 482, 486, 487, 491, 498, 512, 522, 523, 527], "christoph": [382, 383, 384, 385, 386, 387, 388, 389, 391, 393, 394, 395, 396, 397, 416, 417, 418, 419, 420, 421, 422, 423, 429, 432, 433, 434, 435, 436, 437, 438], "chrome": [87, 91], "chromei": 430, "chunk": [151, 162, 165], "chunk_siz": [151, 162, 165], "ci": [377, 380, 384, 403, 407, 422, 428, 430, 433, 439], "circl": [83, 180, 374, 378, 391, 430, 451, 461, 470, 475, 481, 483, 486, 489, 499, 500, 511, 521, 523, 524, 527], "circle_area": 378, "circleannulusskyregion": [258, 259, 523], "circledast": 510, "circlepixelregion": 391, "circleskyregion": [102, 105, 109, 110, 174, 175, 179, 203, 224, 378, 391, 446, 448, 451, 453, 454, 457, 459, 461, 463, 464, 469, 473, 475, 477, 481, 483, 484, 499, 521, 523, 524, 527], "circular": [91, 102, 105, 179, 191, 193, 203, 388, 396, 398, 448, 453, 477, 486, 523, 527], "circumv": [19, 20, 26, 217, 218, 221, 225, 227, 228, 229, 233, 239, 240, 242, 246, 248, 250, 251, 252, 257, 262, 264, 265, 266, 267, 270, 274], "cirelli": [26, 502], "citat": 406, "cite": [380, 403], "cl": [16, 84, 90, 102, 104, 109, 123, 404], "clabel": 479, "clang": 413, "clarif": 382, "clarifi": [401, 442], "class": [6, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 285, 287, 312, 313, 316, 324, 326, 351, 364, 380, 383, 386, 389, 390, 391, 392, 393, 395, 396, 397, 398, 399, 400, 405, 409, 413, 416, 418, 419, 420, 421, 422, 423, 424, 425, 428, 429, 430, 432, 433, 434, 435, 436, 437, 438, 439, 441, 442, 443, 446, 449, 451, 452, 453, 454, 455, 456, 457, 461, 463, 464, 467, 468, 471, 476, 477, 478, 479, 480, 481, 482, 485, 487, 489, 490, 491, 498, 500, 505, 509, 510, 511, 512, 513, 514, 516, 517, 518, 519, 522, 524, 525, 526, 527, 528, 550, 559, 571, 572, 573, 574, 579], "class1": 476, "class2": 476, "classic": [386, 395, 409, 418, 448, 451, 457, 461, 477, 481, 512, 514, 523, 524, 573, 576], "classifi": 491, "classmethod": [16, 19, 20, 26, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 56, 82, 83, 84, 85, 86, 87, 88, 90, 91, 92, 94, 100, 101, 102, 104, 105, 109, 110, 122, 123, 124, 146, 147, 148, 149, 150, 151, 152, 153, 154, 156, 157, 159, 160, 161, 162, 163, 164, 165, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 208, 214, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 242, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 269, 270, 271, 272, 273, 274, 275, 404], "classproperti": 428, "classvar": [16, 84, 90, 104, 123], "claudio": [441, 443], "claus": [377, 403], "clean": [377, 378, 380, 385, 386, 391, 393, 395, 416, 418, 419, 420, 421, 422, 423, 424, 425, 428, 435, 436, 437, 438], "cleaner": 439, "cleanup": [384, 396, 407, 416, 421, 422, 427, 428, 429, 433, 434, 436], "clear": [92, 100, 199, 245, 377, 382, 384, 388, 391, 392, 396, 397, 398, 436, 462, 578], "clearer": 421, "clearli": [136, 377, 382, 383, 391, 394, 402], "cli": [11, 393, 438, 572], "click": [376, 393, 394, 413, 421, 436, 446, 448, 451, 452, 453, 454, 455, 456, 457, 459, 460, 461, 462, 463, 464, 465, 468, 469, 470, 471, 475, 476, 477, 479, 481, 482, 483, 484, 485, 487, 489, 490, 491, 492, 498, 499, 500, 574], "clip": [19, 20, 26, 190, 191, 194, 196, 197, 200, 202, 203, 217, 218, 221, 225, 227, 228, 229, 233, 239, 240, 242, 246, 248, 250, 251, 252, 257, 262, 264, 265, 266, 267, 270, 273, 274, 316, 421, 422, 455], "clockwis": [224, 232, 235, 531], "clone": [380, 410, 437], "close": [146, 147, 148, 149, 152, 153, 154, 156, 159, 161, 163, 164, 191, 192, 193, 194, 195, 196, 197, 200, 201, 202, 203, 204, 205, 273, 352, 353, 354, 386, 391, 406, 431, 442, 443, 479, 559], "closer": 500, "closest": [117, 121, 125, 129, 132, 191, 192, 193, 195, 201, 204, 205, 478, 483, 512], "cloud": [407, 494], "cluster": [6, 96, 302, 303, 390, 442, 443, 445, 488, 494, 511, 514], "clutter": [459, 514], "cm": [19, 20, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 45, 51, 52, 53, 54, 67, 101, 124, 130, 132, 217, 221, 227, 229, 233, 240, 243, 250, 252, 261, 262, 265, 266, 267, 276, 362, 388, 400, 447, 448, 449, 451, 452, 453, 454, 455, 456, 459, 460, 461, 462, 463, 464, 467, 469, 470, 471, 475, 476, 478, 479, 485, 487, 489, 490, 498, 500, 507, 508, 512, 514, 530, 531, 532, 533, 535, 536, 537, 538, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 561, 562, 563, 564, 565, 566, 567, 568, 569, 573], "cm2": [51, 54, 67, 107, 124, 141, 152, 205, 277, 362, 446, 447, 449, 451, 452, 454, 455, 459, 460, 461, 463, 464, 467, 468, 469, 470, 471, 473, 475, 476, 477, 478, 482, 484, 485, 487, 490, 498, 499, 500, 512, 527, 543, 546, 549, 554, 559], "cm3": [17, 18, 19, 21, 22, 24, 25, 27, 52, 475], "cm5": 475, "cmap": [102, 105, 109, 110, 367, 368, 453, 459, 475, 482, 484, 490, 491, 498, 499, 523], "cmb": 550, "co": [53, 198, 402, 403, 446, 531, 532, 533], "coadd": [192, 193, 195, 201, 204, 205], "coars": 477, "coarser": [197, 202, 477], "codaci": 407, "codata": 52, "code": [19, 20, 26, 82, 83, 87, 91, 149, 217, 218, 221, 225, 227, 228, 229, 233, 239, 240, 242, 246, 248, 250, 251, 252, 257, 262, 264, 265, 266, 267, 270, 274, 372, 380, 381, 382, 384, 385, 387, 390, 391, 392, 393, 394, 395, 396, 397, 398, 400, 401, 402, 403, 404, 410, 413, 416, 419, 420, 422, 423, 424, 425, 428, 430, 433, 434, 435, 436, 437, 439, 442, 446, 447, 448, 449, 451, 452, 453, 454, 455, 456, 457, 459, 460, 461, 462, 463, 464, 465, 467, 468, 469, 470, 471, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 489, 490, 491, 492, 494, 496, 498, 499, 500, 502, 514, 521, 528, 530, 531, 532, 533, 534, 535, 536, 537, 538, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 561, 562, 563, 564, 565, 566, 567, 568, 569, 571, 574], "codebas": [378, 394, 416, 435, 437], "codemeta": 430, "codespel": 428, "codestyl": 380, "coeffici": [127, 238, 242, 540], "coerce_numbers_to_str": 104, "coerce_unit": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40], "coincid": 474, "col": [87, 91, 428], "col0": [87, 91], "col1": [87, 91], "col2": [87, 91], "col_b": [87, 91], "col_c": [87, 91], "col_d": [87, 91], "col_fit_deriv": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40], "col_label": 371, "collabor": [77, 367, 368, 382, 384, 386, 390, 430, 462, 490, 573], "colleagu": [380, 574], "collect": [199, 245, 377, 379, 404, 407, 435, 436, 452, 477, 484, 502, 511, 515, 519, 573, 578], "collis": 50, "colnam": [87, 91, 192, 193, 195, 201, 204, 205, 490, 500], "color": [101, 109, 110, 146, 147, 205, 366, 367, 368, 371, 374, 378, 446, 447, 449, 451, 452, 453, 454, 455, 457, 459, 461, 462, 465, 468, 471, 475, 478, 479, 481, 484, 486, 487, 514, 523, 527, 531, 532, 550, 559], "colorbar": [124, 146, 147, 149, 152, 153, 154, 159, 160, 161, 163, 205, 365, 371, 473, 479, 482], "colorblind": 514, "colorblind10": 514, "colormap": [366, 367, 368, 416, 429, 500], "colormap_hess": [398, 579], "colormap_milagro": 579, "colour": 439, "column": [41, 43, 44, 46, 47, 56, 83, 87, 91, 103, 108, 122, 124, 127, 140, 146, 147, 149, 173, 192, 193, 194, 195, 196, 197, 201, 202, 204, 205, 272, 293, 302, 347, 348, 349, 350, 370, 371, 374, 375, 377, 390, 392, 401, 439, 442, 443, 446, 463, 464, 471, 476, 482, 485, 489, 511, 514], "column_nam": 480, "column_prefix": 197, "columnclass": [87, 91], "columnspac": 374, "com": [134, 136, 143, 300, 331, 332, 344, 380, 397, 406, 407, 410, 489], "combin": [99, 101, 102, 105, 109, 110, 133, 142, 144, 178, 186, 192, 193, 195, 200, 201, 204, 205, 218, 261, 377, 383, 387, 388, 389, 390, 391, 392, 397, 400, 409, 421, 436, 442, 449, 454, 459, 460, 467, 470, 477, 479, 480, 481, 482, 483, 485, 491, 499, 500, 502, 504, 514, 521, 526, 542, 572, 573], "combine_flux_map": 142, "combine_significance_map": 143, "combined_ev": 511, "combining_and_defin": [446, 454, 456, 459, 461, 467, 470, 489], "come": [69, 380, 383, 384, 385, 386, 387, 391, 392, 393, 394, 396, 397, 402, 404, 406, 407, 424, 425, 428, 437, 438, 442, 451, 459, 467, 485, 489, 498, 574], "comma": [71, 72, 74, 75, 76, 78, 79, 80, 476], "command": [6, 13, 94, 101, 124, 153, 159, 161, 163, 376, 378, 380, 385, 386, 388, 393, 394, 407, 408, 409, 410, 411, 412, 418, 422, 433, 436, 437, 439, 463, 513, 572], "commensur": 205, "comment": [124, 377, 378, 382, 386, 390, 391, 393, 394, 396, 398, 400, 402, 403], "commit": [377, 380, 385, 391, 402, 403, 415, 416, 439], "committe": [382, 384, 402, 403], "commod": 403, "common": [95, 376, 377, 378, 380, 382, 383, 391, 393, 397, 398, 400, 401, 403, 410, 412, 413, 428, 430, 452, 453, 465, 476, 480, 483, 485, 498, 499, 502, 509, 512, 513, 527, 532, 574], "common_irf_head": 480, "commonli": [29, 83, 391, 395, 437, 465, 502, 571, 572, 574, 576, 579], "commun": [377, 393, 399, 403, 406, 408, 414, 492], "comp": 476, "compact": [16, 84, 87, 90, 91, 104, 123], "compar": [87, 91, 125, 126, 129, 130, 146, 147, 148, 149, 152, 153, 154, 156, 159, 161, 163, 164, 191, 192, 193, 195, 200, 201, 203, 204, 205, 210, 283, 377, 391, 394, 397, 425, 441, 442, 446, 447, 448, 451, 455, 459, 462, 465, 467, 469, 473, 476, 479, 481, 487, 490, 498, 509, 573, 575], "comparison": [86, 87, 91, 100, 129, 146, 147, 148, 149, 152, 153, 154, 156, 159, 161, 163, 164, 191, 192, 193, 195, 197, 200, 201, 203, 204, 205, 334, 433, 504], "compat": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 87, 91, 192, 193, 195, 204, 205, 231, 382, 384, 388, 391, 400, 402, 404, 405, 413, 416, 418, 420, 437, 443, 482, 526], "compil": [380, 429], "complain": 380, "complaint": 395, "complement": 397, "complementari": [101, 133, 142, 451], "complet": [13, 16, 84, 90, 104, 123, 334, 377, 383, 387, 388, 389, 390, 391, 394, 395, 397, 401, 402, 403, 410, 415, 417, 418, 419, 420, 421, 422, 423, 424, 425, 428, 430, 433, 434, 435, 436, 437, 438, 459, 464, 479, 486, 494, 514, 519], "complex": [377, 378, 383, 387, 391, 392, 393, 399, 401, 413, 448, 451, 461, 464, 470, 474, 477, 482, 483, 485, 486, 490, 523], "complianc": [403, 439], "compliant": [192, 193, 195, 204, 205, 443, 573], "complic": [391, 527], "compon": [15, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 67, 80, 81, 88, 102, 103, 105, 108, 109, 110, 129, 136, 164, 166, 200, 223, 245, 246, 261, 276, 388, 389, 390, 393, 399, 400, 418, 422, 424, 428, 436, 437, 447, 452, 453, 454, 456, 459, 460, 461, 462, 463, 464, 467, 468, 469, 470, 473, 476, 477, 478, 484, 485, 489, 490, 498, 499, 502, 510, 512, 514, 527, 530, 531, 532, 533, 534, 535, 536, 537, 538, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 561, 562, 563, 564, 565, 566, 567, 568, 569, 571, 573], "component_1": 388, "component_2": 388, "component_class": 476, "components_model": 80, "components_statu": 67, "compos": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 383, 403], "composit": [57, 70, 80, 315, 403, 435], "compound": [200, 207, 218, 335, 339, 391, 400, 445, 447, 465, 528, 560], "compoundmodel": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 430], "compoundpixelregion": 339, "compoundskymodel": 388, "compoundskyregion": [207, 335, 339], "compoundsourcemodel": 388, "compoundspectralmodel": [256, 400, 442, 447, 485, 490, 540, 542, 546, 549, 551, 554, 559], "compress": 385, "compris": 491, "compromis": [377, 382, 390, 487], "compton": [246, 424, 550], "compulsori": 485, "comput": [16, 19, 20, 23, 26, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 83, 84, 86, 88, 90, 94, 96, 100, 101, 102, 104, 105, 109, 110, 117, 119, 121, 122, 123, 124, 125, 126, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 140, 142, 143, 146, 147, 148, 149, 150, 151, 152, 153, 154, 156, 157, 159, 160, 161, 162, 163, 164, 165, 167, 178, 179, 181, 184, 185, 186, 187, 189, 191, 192, 193, 195, 197, 200, 201, 202, 203, 204, 205, 206, 210, 217, 218, 221, 223, 225, 227, 228, 229, 233, 237, 239, 240, 242, 245, 246, 248, 250, 251, 252, 257, 262, 264, 265, 266, 267, 270, 272, 274, 276, 277, 283, 284, 285, 287, 290, 291, 292, 293, 295, 299, 300, 303, 307, 308, 311, 377, 386, 387, 388, 389, 390, 391, 392, 395, 397, 398, 399, 400, 401, 405, 407, 409, 410, 414, 416, 418, 419, 420, 421, 424, 425, 427, 428, 429, 431, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 448, 453, 455, 459, 460, 464, 465, 468, 469, 471, 474, 475, 477, 478, 481, 484, 485, 486, 487, 490, 491, 492, 498, 500, 502, 510, 512, 514, 519, 523, 550, 572, 573, 574, 575, 576, 577, 578], "computation": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 210, 390, 391, 510], "compute_chisq": 435, "compute_differential_jfactor": 23, "compute_errn": [285, 287, 439, 576], "compute_errp": [285, 287, 576], "compute_flux_doubl": 136, "compute_fpp": 137, "compute_fvar": [138, 292], "compute_jfactor": [23, 475], "compute_lightcurve_doublingtim": 474, "compute_lightcurve_fpp": 474, "compute_lightcurve_fvar": 474, "compute_lima_map": 424, "compute_npr": 390, "compute_upper_limit": [285, 287], "computedfieldinfo": [16, 84, 90, 104, 123], "con": [377, 393], "concaten": [83, 86, 92, 194, 197, 389, 393, 399, 442, 482], "concentr": 336, "concept": [16, 84, 90, 104, 123, 397, 398, 404, 414, 475, 482, 515], "conception": [390, 399], "concern": [380, 382, 391, 393, 394, 396, 398, 400, 403, 428, 438, 491, 576], "conclud": 386, "concret": [16, 84, 90, 104, 123, 394, 397], "conda": [376, 380, 384, 385, 394, 397, 402, 406, 407, 409, 410, 411, 412, 413, 418, 420, 436, 437, 574], "condit": [52, 53, 145, 197, 214, 216, 223, 245, 401, 405, 425, 446, 451, 454, 464, 476, 483, 484, 486, 491, 510, 519], "conduct": [439, 470], "cone": [91, 391, 452, 486, 498, 499, 514], "conesearch": 393, "conf": [87, 91, 377, 378, 407, 419, 434], "conf_1d": 468, "conf_3d": 468, "conf_max": [213, 215], "conf_min": [213, 215], "confid": [121, 210, 213, 215, 285, 287, 388, 395, 419, 424, 438, 573, 576], "confidence_opt": [210, 478], "config": [15, 16, 84, 90, 104, 123, 376, 378, 383, 385, 386, 393, 394, 397, 404, 409, 411, 421, 422, 423, 428, 436, 452, 459, 498, 571], "config_dict": 498, "config_joint": 459, "config_paramet": [117, 119, 120, 121, 125, 126, 128, 129, 130, 131, 132], "config_stack": 459, "config_str": 16, "configdict": [16, 84, 90, 104, 123], "configpars": 434, "configur": [11, 15, 16, 46, 84, 87, 90, 91, 101, 104, 109, 110, 117, 119, 120, 121, 123, 125, 126, 128, 129, 130, 131, 132, 324, 377, 378, 380, 386, 388, 392, 393, 397, 398, 404, 407, 413, 421, 423, 424, 428, 430, 439, 442, 443, 451, 453, 455, 461, 463, 464, 473, 489, 494, 513, 514, 519, 573, 574], "confirm": 380, "conflict": [87, 91, 377, 380, 403], "confluenc": 492, "conform": [16, 84, 90, 104, 123, 482], "confus": [377, 378, 383, 396], "connect": [387, 451, 465, 467, 483, 499, 571], "consant": [192, 193, 195, 201, 204, 205], "consciou": 382, "consecut": [175, 334, 377, 402], "consensu": [382, 403], "consent": 377, "consequ": [403, 464, 527], "conserv": [510, 535], "consid": [19, 20, 59, 96, 172, 179, 182, 183, 185, 186, 193, 205, 213, 217, 220, 221, 224, 225, 227, 228, 229, 230, 232, 233, 234, 235, 236, 237, 238, 239, 240, 242, 246, 249, 250, 251, 252, 253, 257, 258, 259, 260, 262, 265, 266, 267, 272, 273, 283, 373, 382, 383, 388, 389, 391, 392, 393, 394, 395, 396, 397, 399, 403, 405, 448, 451, 453, 459, 463, 464, 474, 480, 483, 511, 514, 519, 577], "consider": [393, 418, 428, 436, 459], "consist": [74, 91, 95, 122, 124, 150, 151, 162, 165, 192, 193, 195, 204, 205, 232, 235, 377, 387, 388, 390, 391, 392, 397, 404, 421, 422, 423, 424, 425, 432, 436, 437, 439, 441, 442, 443, 452, 453, 454, 455, 462, 467, 470, 479, 481, 482, 485, 487, 498, 548, 550, 575], "consol": [377, 574], "consortium": [404, 489], "const": [219, 220, 221, 222, 400, 464, 485, 543, 561], "const3d": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40], "const_norm": 400, "constant": [50, 51, 52, 53, 102, 109, 117, 152, 192, 193, 195, 201, 203, 204, 205, 219, 220, 221, 222, 224, 236, 238, 333, 390, 391, 396, 436, 445, 468, 490, 507, 510, 528, 539, 560, 570, 573, 577], "constant_model": 561, "constantmodel": 438, "constantnormspectralmodel": 400, "constantspatialmodel": [255, 400, 485, 490, 530], "constantspectralmodel": [256, 400, 464, 485, 543], "constanttemporalmodel": [268, 400, 421, 485, 561], "constitu": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40], "constitut": 477, "constrain": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 403, 447, 456, 460, 481, 487, 521], "constraint": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 514], "construct": [16, 84, 90, 104, 123, 197, 239, 240, 342, 527, 573], "constructor": [190, 191, 192, 193, 195, 197, 200, 201, 202, 203, 204, 205, 442, 499, 525], "consult": 412, "consum": [479, 514], "contact": [379, 384, 386, 403, 412, 414, 417, 418, 419, 433, 436], "contain": [13, 16, 19, 20, 26, 57, 59, 63, 67, 69, 82, 83, 84, 86, 87, 88, 90, 91, 92, 95, 96, 100, 101, 102, 104, 105, 108, 109, 110, 112, 122, 123, 124, 132, 133, 134, 135, 140, 142, 143, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 156, 157, 159, 160, 161, 162, 163, 164, 165, 166, 167, 172, 174, 177, 179, 184, 187, 189, 190, 191, 192, 193, 195, 196, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 210, 214, 217, 218, 219, 220, 221, 222, 223, 224, 225, 227, 228, 229, 230, 232, 233, 234, 235, 236, 237, 238, 239, 240, 242, 243, 245, 246, 247, 248, 249, 250, 251, 252, 253, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 269, 270, 272, 273, 274, 275, 291, 302, 303, 370, 372, 374, 375, 377, 380, 381, 383, 385, 386, 387, 390, 391, 392, 393, 394, 396, 397, 398, 399, 401, 403, 406, 407, 414, 418, 422, 423, 424, 425, 427, 428, 430, 431, 434, 435, 436, 437, 438, 442, 443, 446, 449, 451, 452, 453, 456, 459, 460, 463, 464, 467, 468, 469, 471, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 489, 490, 491, 492, 498, 499, 500, 502, 503, 505, 510, 511, 512, 514, 518, 522, 523, 526, 527, 528, 571, 573, 575, 576, 577], "containment_correct": [16, 102, 105, 179, 446, 451, 452, 453, 456, 457, 459, 461, 468, 469, 471, 473, 477, 481, 498], "containment_fract": 96, "containment_radiu": [153, 159, 161, 162, 163, 165, 446, 477, 480, 483], "containment_radius_map": [162, 165], "contains_pix": [190, 191, 200, 203], "contains_wcs_pix": 200, "contamin": [67, 457, 476, 483, 523], "content": [84, 90, 104, 123, 124, 192, 193, 195, 201, 204, 205, 340, 343, 377, 380, 382, 386, 392, 397, 404, 407, 422, 431, 436, 448, 482, 483, 489, 491, 511, 514, 525, 526], "content_typ": [16, 84, 90, 104, 123], "context": [16, 84, 87, 90, 91, 104, 123, 214, 216, 223, 245, 324, 355, 377, 392, 403, 407, 443, 482, 504], "contigu": [197, 202, 428], "continu": [197, 384, 386, 387, 390, 391, 393, 394, 396, 397, 402, 413, 416, 417, 420, 428, 433, 434, 435, 437, 451, 464, 473, 483, 526, 573], "continuous_upd": [459, 467, 482, 498, 499], "contour": [207, 210, 369, 386, 438], "contour_": 479, "contourf": 205, "contract": 403, "contrari": [378, 385], "contrast": [397, 573], "contrera": 438, "contribut": [100, 114, 116, 223, 231, 245, 261, 373, 377, 379, 386, 391, 399, 401, 407, 414, 417, 428, 430, 432, 481, 515, 550, 571, 574, 575], "contributes_to_stat": 100, "contributor": [377, 380, 397, 407, 415, 426, 427], "control": [83, 87, 91, 102, 105, 109, 110, 377, 390, 408, 410, 446, 475, 482, 487, 514, 576], "controversi": [377, 382, 383, 397], "conveni": [13, 122, 376, 377, 380, 387, 391, 399, 401, 408, 418, 420, 425, 428, 430, 435, 461, 473, 475, 476, 477, 482, 483, 484, 485, 489, 491, 500, 509, 513, 572], "convent": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 191, 192, 193, 195, 203, 204, 205, 399, 401, 420, 421, 424, 425, 439, 477, 481, 482, 485, 510, 512, 519, 526, 576], "converg": [405, 419, 440, 451, 453, 459, 473, 479, 510, 514, 521, 531], "convers": [84, 87, 90, 91, 104, 122, 123, 124, 133, 142, 382, 401, 404, 409, 411, 428, 441, 442, 443, 446, 527], "conversion_typ": [490, 500], "convert": [16, 19, 23, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 50, 83, 85, 86, 87, 91, 99, 101, 102, 105, 107, 109, 110, 122, 124, 127, 146, 147, 148, 149, 150, 151, 152, 153, 154, 156, 157, 159, 161, 162, 163, 164, 165, 175, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 209, 212, 213, 214, 215, 216, 223, 237, 245, 283, 301, 304, 305, 309, 322, 338, 358, 360, 361, 378, 383, 391, 392, 401, 404, 407, 429, 441, 442, 443, 446, 455, 462, 469, 470, 473, 477, 478, 479, 483, 484, 489, 500, 512, 518, 523, 526, 576, 578], "convert_bytestring_to_unicod": [87, 91], "convert_unicode_to_bytestr": [87, 91], "convinc": 500, "convolut": [117, 121, 127, 132, 160, 193, 205, 376, 389, 395, 416, 423, 425, 434, 436, 437, 443, 457, 482, 510, 527], "convolution_method": 193, "convolv": [105, 111, 115, 132, 160, 193, 205, 388, 416, 425, 428, 437, 454, 455, 457, 482, 520, 550], "convolve_ful": 193, "convolve_wc": 193, "cookiecutt": 393, "coolwarm": [459, 490, 491, 499], "coord": [13, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 83, 190, 191, 192, 193, 194, 195, 196, 197, 198, 200, 201, 202, 203, 204, 205, 247, 291, 388, 421, 464, 482, 483, 523, 526, 527, 534], "coord_to_idx": [190, 191, 194, 196, 197, 200, 202, 203, 482], "coord_to_pix": [190, 191, 194, 196, 197, 200, 202, 203, 482], "coordiant": 480, "coordin": [6, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 41, 46, 47, 83, 85, 87, 88, 89, 90, 91, 94, 95, 96, 102, 103, 105, 108, 109, 110, 122, 124, 126, 127, 128, 136, 140, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 159, 161, 162, 163, 164, 165, 175, 185, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 200, 201, 202, 203, 204, 205, 223, 224, 232, 235, 237, 245, 247, 249, 258, 259, 261, 273, 291, 295, 300, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 316, 326, 332, 336, 337, 353, 378, 382, 383, 384, 386, 390, 391, 396, 397, 400, 402, 403, 416, 418, 421, 423, 434, 436, 437, 439, 446, 448, 451, 453, 454, 457, 461, 462, 463, 464, 465, 467, 468, 469, 470, 471, 473, 475, 477, 480, 481, 482, 483, 484, 485, 486, 489, 490, 491, 492, 499, 500, 510, 518, 523, 525, 526, 531, 532, 535, 572, 573, 578], "coordsi": 423, "copi": [11, 16, 19, 20, 26, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 82, 83, 84, 86, 87, 88, 89, 90, 91, 92, 99, 100, 101, 102, 104, 105, 108, 109, 110, 117, 119, 120, 121, 122, 123, 124, 125, 126, 128, 129, 130, 131, 132, 150, 151, 154, 157, 162, 165, 190, 191, 192, 193, 194, 195, 196, 197, 198, 200, 201, 202, 203, 204, 205, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 242, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 269, 270, 271, 272, 273, 274, 275, 304, 349, 377, 382, 385, 387, 391, 393, 399, 406, 407, 413, 428, 430, 437, 438, 439, 442, 447, 448, 451, 453, 454, 459, 461, 467, 469, 470, 473, 476, 479, 481, 485, 487, 490, 514, 523, 527, 538, 574], "copy_data": [87, 91, 223, 231, 245, 261, 269, 271, 273], "copy_indic": [87, 91], "copy_ob": [82, 514], "copy_on_getitem": [87, 91], "copyright": 413, "core": [16, 53, 84, 90, 104, 123, 158, 376, 377, 384, 390, 391, 398, 402, 403, 414, 417, 434, 438, 442, 446, 453, 454, 456, 459, 461, 463, 465, 467, 470, 473, 484, 489, 502, 512, 574], "corner": [391, 394, 446, 448, 451, 452, 453, 454, 455, 456, 457, 459, 460, 461, 462, 463, 464, 465, 468, 469, 470, 471, 475, 476, 477, 479, 481, 482, 483, 484, 485, 487, 489, 490, 491, 492, 498, 499, 500], "corr_coord": [162, 165], "correct": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 67, 83, 88, 102, 103, 105, 151, 162, 165, 179, 184, 185, 198, 231, 247, 248, 273, 377, 389, 390, 402, 403, 404, 406, 420, 423, 425, 426, 427, 428, 431, 434, 435, 437, 439, 440, 441, 442, 443, 446, 447, 451, 452, 453, 454, 463, 467, 468, 476, 477, 479, 481, 483, 484, 485, 487, 491, 498, 500, 511, 512, 521, 534, 546, 549, 551, 554, 559], "correctli": [19, 20, 26, 77, 150, 151, 157, 162, 165, 217, 218, 221, 225, 227, 228, 229, 233, 239, 240, 242, 246, 248, 250, 251, 252, 257, 262, 264, 265, 266, 267, 270, 274, 378, 380, 403, 404, 418, 420, 425, 430, 431, 440, 480, 481, 482, 483, 484, 487, 526, 532], "correl": [19, 20, 26, 121, 127, 135, 208, 217, 218, 221, 225, 227, 228, 229, 233, 239, 240, 242, 246, 248, 250, 257, 262, 264, 265, 266, 267, 270, 274, 295, 395, 400, 401, 428, 438, 462, 465, 479, 483, 485, 487, 498, 512, 571], "correlate_off": [121, 457], "correlation_radiu": [16, 121, 140, 141, 452, 456, 457, 459, 471, 478, 491, 498, 512], "correspond": [16, 19, 20, 26, 28, 29, 30, 31, 32, 33, 35, 36, 37, 39, 40, 45, 84, 87, 89, 90, 91, 100, 102, 104, 105, 109, 110, 122, 123, 124, 125, 126, 127, 129, 130, 132, 133, 142, 149, 150, 151, 157, 160, 162, 164, 165, 166, 190, 191, 192, 193, 195, 196, 197, 199, 200, 201, 202, 203, 204, 205, 207, 217, 218, 221, 225, 227, 228, 229, 232, 233, 239, 240, 242, 246, 248, 250, 251, 252, 257, 262, 264, 265, 266, 267, 270, 272, 274, 302, 370, 387, 388, 389, 390, 397, 398, 401, 403, 405, 422, 425, 448, 449, 451, 452, 453, 459, 463, 464, 468, 476, 479, 481, 482, 485, 486, 487, 489, 490, 491, 498, 500, 510, 511, 512, 514, 526, 527, 537, 540, 572, 573, 578], "cosimo": [425, 428, 430, 436, 437, 439, 442], "cosmic": [52, 225, 276, 395, 489], "coto": 436, "could": [16, 84, 90, 104, 123, 378, 380, 382, 383, 386, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 401, 403, 404, 407, 448, 451, 459, 461, 476, 478, 487, 489, 490, 498, 513], "count": [16, 83, 92, 100, 102, 105, 106, 107, 108, 109, 110, 113, 117, 121, 122, 124, 125, 126, 128, 129, 130, 131, 132, 139, 141, 167, 169, 172, 173, 174, 179, 181, 185, 189, 192, 193, 195, 196, 197, 201, 204, 205, 214, 216, 223, 245, 285, 287, 288, 289, 294, 296, 299, 301, 326, 362, 364, 373, 375, 383, 385, 388, 389, 390, 392, 393, 397, 401, 419, 420, 423, 425, 428, 430, 431, 437, 438, 442, 443, 446, 447, 448, 451, 452, 453, 454, 455, 456, 457, 459, 461, 463, 465, 467, 468, 469, 470, 471, 473, 477, 479, 481, 482, 483, 487, 491, 496, 498, 499, 500, 512, 514, 518, 521, 522, 523, 524, 527, 573, 574, 575, 577], "count_bkg": 471, "count_statist": 576, "counter": [224, 232, 235, 531], "counts_3d": 482, "counts_imag": [465, 477], "counts_min": 145, "counts_off": [102, 105, 106, 109, 110, 167, 173, 174, 177, 375, 389, 430, 441, 442, 447, 452, 453, 454, 457, 461, 471, 477, 510, 576], "counts_on": 419, "counts_rat": 477, "counts_statist": 457, "countspredictor": 388, "countsspectrum": [389, 392, 419, 420, 422, 424, 433], "countsstatist": [285, 287, 401, 424, 425, 428, 439], "coupl": [385, 391, 396, 407, 425, 437, 482], "cours": [377, 380, 384, 387, 394, 413, 452, 459, 477, 482, 490, 498, 574, 577], "cousin": [419, 425, 433, 435, 573], "cousins2007": [573, 576], "coutinho": [425, 428], "cov": [251, 252, 407], "cov_matrix": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40], "covar": [208, 370, 438], "covar_list": 208, "covari": [15, 19, 20, 26, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 100, 125, 126, 129, 130, 209, 210, 211, 214, 217, 218, 219, 220, 221, 222, 223, 224, 225, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 242, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 269, 270, 271, 272, 273, 274, 275, 285, 287, 370, 395, 405, 424, 430, 438, 439, 442, 452, 498, 576], "covariance_data": [223, 231, 245, 261, 271], "covariance_opt": 210, "covariance_result": 211, "covariance_typ": 405, "covariancegaussianprior": 405, "covariancemixin": [218, 223, 261], "covarianceresult": [101, 210, 211, 448, 449, 451, 452, 453, 459, 460, 461, 471, 473, 479, 490, 498, 499], "cover": [272, 377, 379, 391, 392, 393, 401, 448, 468, 469, 477, 482, 494, 500, 515], "coverag": [386, 392, 407, 416, 420, 428, 434, 437, 469, 479], "coveral": [407, 416], "cpu": [125, 126, 129, 132, 324, 325, 390], "cpython": 382, "crab": [67, 83, 109, 110, 130, 145, 210, 242, 277, 283, 385, 389, 397, 416, 422, 434, 436, 451, 452, 453, 460, 461, 468, 476, 477, 478, 479, 483, 487, 490, 491, 492, 498, 499, 500, 512, 523, 527, 573], "crab_10gev_100tev_dataset": 460, "crab_3fhl": 500, "crab_3fhl_spec": 500, "crab_events_pass4": 491, "crab_fp": 452, "crab_fp_tabl": 452, "crab_hess_ecpl": 277, "crab_hess_fp": [122, 124, 144], "crab_magic_lp": 453, "crab_model": 479, "crab_posit": 523, "crab_spec": 460, "crab_spectrum": 479, "crabnebula": 468, "crabspectrum": 420, "creat": [11, 13, 16, 19, 20, 26, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 70, 82, 83, 84, 86, 87, 88, 90, 91, 92, 93, 99, 101, 102, 104, 105, 109, 110, 111, 112, 113, 115, 117, 122, 123, 124, 125, 126, 129, 132, 133, 142, 146, 147, 148, 149, 150, 151, 152, 153, 154, 156, 157, 159, 160, 161, 162, 163, 164, 165, 172, 174, 175, 176, 180, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 214, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 269, 270, 271, 272, 273, 274, 275, 277, 283, 304, 314, 335, 339, 355, 364, 366, 371, 377, 378, 380, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 411, 413, 420, 421, 422, 425, 428, 430, 436, 437, 439, 440, 441, 442, 443, 446, 447, 449, 452, 453, 454, 459, 461, 462, 463, 465, 467, 468, 469, 470, 471, 473, 474, 475, 476, 479, 481, 484, 485, 486, 487, 489, 490, 491, 492, 496, 498, 500, 502, 509, 510, 511, 514, 518, 521, 523, 524, 525, 526, 530, 532, 533, 534, 535, 540, 550, 559, 571, 572, 574, 579], "create_crab_spectral_model": [451, 453, 460], "create_fermi_isotropic_diffuse_model": [484, 490], "create_map_dataset_from_observ": [93, 108], "create_t": 473, "creation": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 84, 90, 104, 123, 126, 203, 386, 387, 391, 400, 403, 422, 428, 474, 485, 492], "creator": [104, 123, 380, 404, 452, 456, 457, 459, 485, 498, 530, 531, 532, 533, 534, 535, 536, 537, 538, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 561, 562, 563, 564, 565, 566, 567, 568, 569], "creatormedadata": 404, "creatormetadata": [84, 90, 104, 123, 404], "credit": 413, "crimson": 453, "criteria": [15, 91, 430, 481, 486, 494], "criterion": [91, 132, 302, 446, 514], "critic": 487, "criticis": 368, "crop": [86, 190, 191, 192, 193, 195, 200, 201, 203, 204, 205], "crop_width": [190, 191, 192, 193, 195, 200, 201, 203, 204, 205], "cross": [19, 383, 397, 502], "crowd": 476, "crpix": 203, "crpix1": 482, "crpix2": 482, "crucial": [404, 463, 464, 477], "cruft": 407, "crux": [33, 38, 473], "crval1": 482, "crval2": 482, "cryptic": 388, "csf": 489, "csh": 574, "csobsselect": 387, "css": [87, 91, 407], "cstat": [389, 422], "csv": 124, "ct": [362, 437], "cta": [82, 83, 89, 102, 105, 109, 110, 114, 116, 117, 121, 140, 141, 147, 151, 152, 153, 162, 225, 365, 370, 372, 381, 384, 385, 386, 390, 393, 396, 397, 406, 417, 418, 428, 434, 435, 436, 437, 445, 446, 454, 456, 459, 461, 463, 464, 467, 470, 471, 477, 478, 480, 484, 493, 494, 498, 512, 516, 573], "cta_data_analysi": [397, 445, 461, 466], "cta_dataset": 484, "cta_north": 97, "cta_sensist": 397, "cta_sensit": [445, 446, 450], "cta_simul": 417, "cta_south": [97, 446, 454, 463, 464, 467, 470], "cta_util": 437, "ctadata": 489, "ctao": [82, 151, 152, 172, 276, 377, 397, 403, 406, 409, 414, 445, 446, 452, 454, 456, 461, 463, 464, 471, 486, 491, 492, 493, 494, 502, 514, 572], "ctaoobservatori": 489, "ctapip": [380, 384, 386, 393, 394, 396, 397, 398], "ctaspectrumobserv": 437, "ctmf3b75": 473, "ctobssim": 390, "ctool": [387, 390, 393, 397, 548], "cts_sigma": 479, "ctselect": 387, "ctype1": 482, "ctype2": 482, "cube": [46, 102, 105, 132, 167, 185, 192, 193, 195, 201, 204, 205, 241, 261, 377, 388, 389, 390, 396, 397, 398, 400, 409, 416, 420, 421, 424, 429, 432, 433, 434, 435, 436, 437, 455, 456, 461, 465, 490, 500, 510, 519, 521, 526, 527, 573], "cubic": 482, "cumbersom": [387, 395], "cumsum": [146, 147, 148, 149, 152, 153, 154, 156, 159, 161, 163, 164, 192, 193, 195, 201, 204, 205], "cumul": [100, 146, 147, 148, 149, 152, 153, 154, 156, 159, 161, 163, 164, 192, 193, 195, 201, 204, 205, 326, 390, 451, 463, 484, 514], "cunit1": 482, "cunit2": 482, "curat": [407, 417], "curl": [67, 394, 408, 409, 411, 489], "current": [11, 15, 19, 20, 26, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 83, 85, 86, 87, 88, 89, 91, 99, 100, 101, 102, 105, 109, 110, 124, 125, 129, 155, 178, 190, 191, 192, 193, 195, 201, 202, 203, 204, 205, 210, 217, 218, 219, 220, 221, 222, 223, 224, 225, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 242, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 269, 270, 271, 272, 273, 274, 275, 355, 371, 377, 378, 380, 383, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 403, 404, 405, 408, 409, 410, 411, 420, 438, 452, 475, 478, 480, 481, 482, 484, 489, 491, 492, 498, 499, 503, 510, 511, 512, 527, 571, 573, 574], "curv": [15, 19, 20, 26, 73, 77, 83, 129, 136, 217, 218, 221, 225, 227, 228, 229, 233, 237, 239, 240, 242, 246, 248, 250, 251, 252, 257, 262, 264, 265, 266, 267, 270, 272, 274, 293, 369, 381, 388, 390, 393, 397, 401, 409, 418, 422, 424, 425, 429, 432, 433, 435, 437, 439, 442, 443, 445, 446, 472, 473, 474, 494, 512, 513, 523, 528, 570, 572], "curve_fit": 370, "cuspi": 502, "custom": [16, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 82, 84, 89, 90, 104, 123, 128, 386, 387, 388, 393, 395, 400, 404, 408, 422, 423, 425, 437, 446, 454, 456, 459, 461, 467, 470, 477, 480, 482, 489, 514, 559], "custom_model": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40], "customari": 485, "customis": [397, 480], "customprior": 487, "cut": [91, 121, 164, 178, 179, 387, 436, 442, 445, 446, 450, 454, 471, 477, 481, 482, 486, 489, 494, 499, 500, 522, 523], "cutoff": [227, 228, 229, 265, 266, 267, 283, 422, 442, 445, 454, 459, 528, 560], "cutout": [102, 105, 109, 110, 114, 116, 150, 151, 157, 162, 165, 168, 191, 193, 201, 203, 205, 271, 383, 389, 418, 423, 428, 434, 437, 456, 457, 459, 461, 465, 477, 481, 490, 499, 500, 510], "cutout2d": [102, 105, 150, 151, 157, 162, 165, 168, 203, 205, 271, 383], "cutout_and_mask_region": [205, 442], "cutout_info": 422, "cutout_mod": 168, "cutout_slic": 203, "cutout_width": 168, "cval": [192, 193, 195, 201, 204, 205], "cwd": 385, "cwt": [397, 422, 434, 437], "cxc": [210, 397, 479], "cyan": 374, "cycl": [374, 380, 381, 382, 394, 396, 410, 435, 439], "cycler": [374, 446], "cython": [380, 419, 429], "d": [19, 20, 23, 87, 89, 91, 196, 199, 202, 237, 242, 253, 272, 277, 344, 380, 395, 397, 430, 439, 449, 457, 463, 464, 470, 482, 485, 486, 519, 526, 531, 561, 562, 563, 564, 565, 566, 567, 568, 569, 574, 577], "dai": [87, 91, 122, 124, 202, 230, 234, 236, 253, 260, 380, 391, 397, 406, 407, 482, 567, 574], "daniel": [438, 441, 443], "dark": [1, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 397, 405, 437, 442, 443, 445, 488, 494, 503, 572], "dark_matter_spectra": 26, "darkbit": 502, "darkblu": 487, "darkgreen": 487, "darkmatt": [6, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 256, 378, 397, 437, 475, 503], "darkmatterannihilationspectralmodel": [20, 256, 439, 475, 485], "darkmatterdecayspectralmodel": [256, 443, 475, 485], "darkorang": [451, 452], "darksusi": 502, "darwin": 413, "dash": [471, 475, 487], "dashboard": 407, "dat": [26, 87, 91, 223, 245, 452, 498, 502], "data": [6, 11, 15, 16, 19, 20, 26, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 113, 122, 123, 124, 125, 126, 127, 128, 135, 140, 141, 146, 147, 148, 149, 150, 151, 152, 153, 154, 156, 157, 159, 160, 161, 162, 163, 164, 165, 168, 169, 172, 173, 174, 178, 185, 189, 190, 191, 192, 193, 195, 196, 197, 198, 200, 201, 202, 203, 204, 205, 208, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 269, 270, 271, 272, 273, 274, 275, 288, 293, 294, 295, 297, 298, 301, 302, 303, 312, 313, 316, 334, 340, 343, 347, 348, 356, 365, 366, 367, 368, 370, 371, 376, 378, 381, 384, 387, 388, 389, 390, 391, 393, 396, 397, 398, 399, 400, 401, 403, 405, 406, 409, 413, 414, 416, 417, 418, 419, 420, 422, 423, 424, 425, 428, 429, 430, 431, 433, 434, 435, 436, 437, 438, 439, 442, 443, 445, 446, 449, 454, 455, 456, 457, 461, 463, 464, 467, 470, 475, 476, 478, 479, 480, 483, 484, 485, 486, 487, 488, 489, 490, 492, 493, 496, 501, 502, 510, 512, 514, 516, 517, 518, 519, 520, 521, 523, 524, 526, 527, 533, 534, 546, 549, 551, 553, 554, 559, 571, 572, 573, 576, 577, 578], "data_extend": [69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80], "data_nbyt": [190, 191, 200, 203], "data_path": 491, "data_reduct": 393, "data_shap": [101, 102, 105, 109, 110, 190, 191, 200, 203, 477, 527], "data_shape_ax": [191, 200, 203], "data_shape_imag": 203, "data_spectr": [69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80], "data_stor": [82, 96, 172, 302, 303, 393, 413, 453, 461, 463, 469, 471, 473, 481, 486, 489, 491, 492, 496, 499, 511, 521, 523, 524], "data_storag": 511, "data_summari": 434, "dataaxi": 419, "databas": [383, 514], "dataclass": 377, "datafram": [87, 91], "dataset": [6, 15, 16, 19, 20, 26, 63, 94, 98, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 119, 120, 121, 122, 124, 125, 126, 129, 130, 131, 132, 134, 139, 140, 141, 142, 143, 145, 150, 151, 157, 162, 165, 167, 168, 169, 172, 173, 174, 177, 178, 179, 194, 199, 210, 217, 218, 219, 220, 221, 222, 223, 224, 225, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 242, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 269, 270, 271, 272, 273, 274, 275, 283, 324, 370, 373, 374, 378, 380, 381, 383, 385, 390, 392, 393, 394, 396, 397, 401, 405, 406, 407, 409, 411, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 428, 429, 430, 431, 432, 435, 437, 438, 439, 440, 441, 442, 443, 445, 447, 449, 451, 454, 455, 461, 462, 463, 465, 467, 471, 473, 475, 476, 482, 485, 486, 488, 489, 490, 492, 494, 496, 500, 511, 512, 514, 519, 521, 522, 523, 524, 534, 538, 540, 568, 569, 571, 572, 573, 574, 575, 576], "dataset1": [487, 510], "dataset1_prior": 487, "dataset2": [487, 510], "dataset2_prior": 487, "dataset_1": 512, "dataset_2": 512, "dataset_3fgl": 449, "dataset_3fhl": 449, "dataset_cta": 477, "dataset_empti": [448, 451, 453, 454, 461, 469, 473, 477, 481, 491, 523], "dataset_energy_depend": 462, "dataset_fak": 454, "dataset_fp": 470, "dataset_gammacat": 449, "dataset_hawc": 460, "dataset_hess": [460, 479], "dataset_imag": [461, 477], "dataset_kwarg": [93, 108], "dataset_lc": 470, "dataset_mak": [451, 453, 461, 469, 473, 481, 523], "dataset_nam": [108, 112, 129, 223, 231, 245, 399, 405, 459, 463, 464, 467, 477, 484, 499, 534], "dataset_on_off": [167, 173, 174, 177, 446, 451, 453, 454, 457, 461, 469, 473, 481, 523, 524], "dataset_on_off1": 446, "dataset_onoff": 389, "dataset_simul": 453, "dataset_stack": [451, 459], "datasetmodel": [212, 245, 261, 399, 425, 463, 464, 467, 473], "datasetread": 106, "datasets1": 374, "datasets2": 374, "datasets3": 374, "datasets_fil": [16, 452, 456, 457, 459, 498], "datasets_hess": 460, "datasets_in_phase_bin_3": 401, "datasets_mak": 481, "datasets_nam": [19, 20, 26, 217, 218, 219, 220, 221, 222, 223, 224, 225, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 242, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 269, 270, 271, 272, 273, 274, 275, 424, 460, 484, 498, 534], "datasets_read": [484, 490], "datasets_sl": 477, "datasets_to_fit": 473, "datasetsconfig": 16, "datasetsmak": [170, 430, 442, 481, 486, 514], "datasetsmetadata": 404, "datasetwrit": 107, "datastor": [16, 89, 96, 172, 302, 303, 383, 387, 392, 409, 413, 419, 430, 431, 433, 434, 436, 442, 443, 448, 451, 452, 453, 456, 457, 459, 461, 463, 467, 469, 471, 473, 481, 486, 491, 492, 496, 498, 511, 514, 521, 523, 524, 574], "datastorecheck": 437, "datastoreindex": 387, "datastoreinmemori": 387, "datastoremak": [419, 430], "datastoremetadata": 404, "datastoreobserv": [173, 383, 387, 423, 436], "datastorexml": 387, "datasum": [83, 86, 88, 100, 101, 102, 105, 106, 107, 109, 110, 122, 124, 149, 150, 151, 157, 162, 165, 192, 193, 195, 199, 201, 204, 205], "datat": [87, 91], "date": [87, 91, 104, 123, 358, 394, 402, 403, 404, 406, 414, 436, 452, 455, 456, 457, 459, 485, 492, 498, 530, 531, 532, 533, 534, 535, 536, 537, 538, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 561, 562, 563, 564, 565, 566, 567, 568, 569, 578], "datefmt": [16, 452, 456, 457, 459, 498, 574], "dateref": 455, "datetim": [104, 123, 404], "datetime64": [87, 91], "datfix": 455, "daughter": 404, "david": [387, 392, 417, 437, 438], "dc": [459, 489], "dc1": [386, 397, 438, 463, 471, 480, 484, 489], "dc2": 386, "dcqg1y8": 478, "ddof": 474, "de": [19, 20, 26, 67, 100, 217, 218, 221, 225, 227, 228, 229, 239, 240, 242, 246, 248, 250, 251, 252, 257, 262, 264, 265, 266, 267, 270, 274, 301, 403, 406, 425, 428, 431, 475, 573], "deabsorb": 447, "deactiv": 408, "dead": [83, 86, 88, 334, 387], "dead_tim": [83, 88, 334], "deadc": 387, "deadlin": [386, 390], "deadtim": [88, 90, 185, 454, 463, 467, 489], "deadtime_fract": [88, 90], "deal": [86, 377, 383, 392, 393, 454, 463, 469, 494, 514], "debanjan": 419, "debian": [394, 410, 432], "debug": [11, 377, 383, 388, 393, 439, 451, 478, 482, 514, 574], "dec": [67, 83, 85, 87, 88, 91, 94, 140, 141, 175, 377, 378, 382, 386, 388, 390, 393, 394, 397, 415, 441, 446, 451, 453, 455, 457, 461, 464, 468, 469, 471, 473, 476, 481, 483, 489, 490, 491, 492, 499, 500, 502, 514, 518, 523, 578], "dec_pnt": 492, "dec_tru": 390, "decad": [17, 18, 21, 22, 24, 25, 27, 112, 197, 279, 443, 463], "decai": [17, 18, 20, 21, 22, 23, 24, 25, 27, 230, 236, 253, 400, 463, 470, 474, 485, 502, 564], "decemb": 415, "decid": [377, 383, 386, 387, 388, 389, 391, 392, 396, 399, 400, 401, 406, 452, 486, 498], "decim": [87, 91, 300], "decis": [377, 378], "declar": [15, 87, 91, 261, 356, 357, 380, 384, 385, 388, 393, 394, 400, 407, 424, 513], "decor": [356, 357, 377, 404, 574], "decorrel": [19, 20, 26, 217, 218, 221, 225, 227, 228, 229, 233, 239, 240, 242, 246, 248, 250, 251, 252, 257, 262, 264, 265, 266, 267, 270, 274], "decoupl": 69, "dedic": [380, 391, 392, 401, 403, 404, 407, 423, 424, 425, 443, 451, 452, 453, 459, 471, 479, 498, 499, 511], "deduc": [401, 443], "deep": [16, 19, 20, 26, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 84, 86, 87, 90, 91, 99, 100, 101, 102, 104, 105, 109, 110, 122, 123, 124, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 227, 228, 229, 230, 232, 233, 234, 235, 236, 237, 238, 239, 240, 242, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 257, 258, 259, 260, 262, 263, 264, 265, 266, 267, 269, 270, 272, 274, 275, 459], "deepcopi": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 87, 91, 269, 271, 273], "def": [16, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 84, 90, 104, 123, 286, 356, 357, 377, 378, 388, 389, 390, 391, 400, 401, 404, 405, 451, 459, 473, 479, 485, 487, 496, 523, 574, 576], "def_unit": [446, 454, 456, 459, 461, 467, 470, 489], "default": [11, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 45, 46, 47, 65, 67, 77, 78, 80, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 96, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 112, 113, 114, 116, 117, 119, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 135, 136, 137, 138, 139, 140, 141, 142, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 156, 157, 159, 160, 161, 162, 163, 164, 165, 167, 168, 169, 172, 173, 175, 176, 178, 179, 180, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 214, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 242, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 269, 270, 271, 272, 273, 274, 275, 276, 277, 279, 281, 283, 284, 285, 286, 287, 288, 292, 293, 294, 295, 300, 301, 302, 304, 315, 316, 317, 322, 324, 325, 331, 332, 333, 334, 336, 337, 340, 343, 345, 346, 348, 354, 359, 360, 364, 366, 367, 368, 370, 371, 373, 374, 377, 383, 389, 393, 394, 400, 403, 407, 413, 419, 421, 422, 423, 425, 428, 430, 436, 437, 439, 440, 441, 442, 443, 451, 452, 453, 455, 457, 459, 463, 464, 469, 470, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 487, 490, 498, 499, 500, 510, 512, 514, 521, 524, 525, 526, 527, 531, 532, 533, 540, 546, 550, 574, 578], "default_alpha": [21, 27], "default_beta": 27, "default_css": [87, 91], "default_css_nb": [87, 91], "default_epoch": 360, "default_gamma": 27, "default_hdu_t": 82, "default_interp_kwarg": [146, 147, 148, 149, 152, 153, 154, 156, 159, 161, 163, 164, 435], "default_nam": [87, 91], "default_notebook_table_class": [87, 91], "default_obs_t": 82, "default_paramet": [19, 20, 26, 217, 218, 219, 220, 221, 222, 224, 225, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 242, 246, 247, 248, 249, 250, 251, 252, 253, 254, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 269, 270, 271, 272, 273, 274, 275, 405], "default_scale_radiu": [17, 21, 22, 24, 25, 27], "default_unit": [146, 147, 152, 154, 159, 164, 480], "defer": [105, 110], "defin": [15, 16, 19, 20, 26, 28, 29, 30, 31, 32, 33, 35, 36, 37, 39, 40, 42, 43, 44, 45, 46, 47, 52, 53, 83, 84, 87, 88, 90, 91, 95, 101, 102, 103, 104, 105, 108, 109, 110, 114, 116, 121, 122, 123, 124, 125, 126, 128, 129, 132, 149, 150, 151, 153, 157, 160, 161, 162, 163, 165, 168, 169, 173, 178, 190, 191, 192, 193, 195, 196, 197, 200, 201, 202, 203, 204, 205, 210, 213, 215, 217, 218, 219, 220, 221, 222, 223, 224, 225, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 242, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 269, 270, 271, 272, 273, 274, 275, 286, 288, 294, 296, 316, 326, 331, 332, 333, 334, 337, 367, 368, 377, 378, 380, 382, 383, 386, 388, 389, 390, 391, 392, 393, 394, 398, 399, 401, 402, 403, 404, 405, 408, 409, 410, 411, 418, 419, 422, 425, 428, 431, 435, 436, 441, 442, 443, 447, 452, 454, 455, 456, 457, 459, 460, 462, 465, 467, 470, 471, 473, 474, 476, 477, 478, 479, 480, 481, 482, 484, 485, 486, 487, 489, 490, 491, 498, 500, 510, 511, 512, 514, 516, 519, 523, 524, 526, 531, 533, 535, 536, 537, 540, 541, 544, 545, 547, 548, 550, 552, 553, 555, 556, 557, 558, 559, 569, 571, 572, 573, 574, 575, 576, 577], "definit": [83, 84, 86, 88, 90, 100, 102, 104, 105, 109, 110, 123, 169, 200, 286, 301, 315, 377, 386, 387, 391, 398, 399, 400, 401, 404, 420, 424, 425, 441, 443, 451, 453, 456, 465, 469, 480, 481, 498, 510, 512, 519, 520, 525, 527, 531, 532, 576], "deform": 527, "deg": [16, 33, 34, 38, 47, 67, 83, 85, 87, 91, 94, 96, 102, 105, 109, 110, 112, 113, 114, 116, 117, 121, 126, 127, 132, 140, 141, 151, 153, 154, 159, 160, 161, 162, 163, 164, 165, 167, 175, 176, 178, 180, 191, 192, 193, 195, 198, 200, 201, 203, 204, 205, 223, 224, 232, 235, 245, 249, 258, 259, 261, 302, 303, 336, 372, 377, 378, 388, 391, 393, 400, 401, 404, 413, 446, 448, 451, 452, 453, 454, 455, 456, 457, 459, 460, 461, 462, 463, 464, 465, 467, 468, 469, 470, 471, 473, 475, 476, 477, 478, 480, 481, 482, 483, 484, 485, 486, 489, 490, 491, 492, 498, 499, 500, 511, 512, 514, 516, 518, 521, 523, 524, 525, 526, 527, 531, 532, 533, 534, 535, 536, 537, 538], "deg2": 492, "degre": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 102, 105, 109, 110, 112, 113, 119, 122, 124, 134, 143, 191, 192, 193, 195, 198, 203, 204, 205, 223, 245, 249, 261, 272, 443, 446, 448, 452, 457, 462, 469, 473, 476, 481, 482, 483, 489, 498, 512, 526, 527, 576, 577], "deil": [382, 383, 384, 385, 386, 387, 388, 389, 391, 393, 394, 395, 396, 397, 416, 417, 418, 419, 420, 421, 422, 423, 429, 432, 433, 434, 435, 436, 437, 438], "deiml": 436, "dej2000": [476, 500], "del": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 87, 91, 388], "delai": [398, 402], "deleg": 393, "delet": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 86, 377, 388, 407, 408, 409, 411, 443, 484], "delete_interv": 86, "delimit": 124, "deliv": 393, "delta": [19, 20, 23, 87, 91, 121, 122, 127, 130, 132, 154, 202, 251, 252, 284, 300, 442, 447, 455, 479, 487, 512, 519, 520, 532, 533, 535, 576], "delta_t": [119, 284, 462], "demonstr": [393, 418, 421, 422, 423, 424, 425, 430, 442, 443, 468, 474, 482, 484, 494, 526], "denot": [102, 109, 401, 510], "densiti": [17, 18, 21, 22, 24, 25, 27, 28, 30, 35, 36, 39, 40, 45, 52, 101, 124, 154, 205, 330, 333, 370, 390, 457, 459, 475, 476, 487, 502, 504, 508, 518, 519, 520, 573], "dep": 442, "depend": [11, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 83, 88, 100, 102, 103, 108, 109, 119, 122, 124, 146, 147, 148, 149, 152, 153, 154, 156, 159, 161, 162, 163, 164, 165, 179, 190, 191, 200, 203, 205, 223, 237, 245, 261, 304, 357, 377, 379, 380, 381, 383, 388, 389, 390, 391, 392, 395, 396, 401, 403, 404, 405, 406, 407, 408, 409, 410, 411, 415, 417, 421, 422, 425, 432, 434, 437, 438, 440, 442, 443, 445, 446, 450, 454, 456, 457, 466, 469, 476, 479, 480, 481, 482, 483, 484, 486, 487, 489, 490, 494, 510, 514, 518, 522, 523, 526, 540], "deploy": 403, "deposit": 403, "deprec": [16, 84, 85, 90, 104, 123, 419, 428, 441, 442, 443, 465, 490, 538], "deprecated_argument_funct": 377, "deprecated_argument_function_kwarg": 377, "deprecated_attribut": 377, "deprecated_funct": 377, "deprecated_renamed_argu": 377, "deprecatedparseprotocol": [16, 84, 90, 104, 123], "deprecation_polici": 402, "depriv": 521, "depth": [16, 84, 90, 104, 123, 344, 409, 414, 447, 474, 540], "deriv": [17, 18, 21, 22, 24, 25, 27, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 50, 51, 54, 100, 121, 125, 129, 132, 133, 142, 272, 377, 389, 390, 395, 398, 401, 455, 478, 489, 491, 512, 526, 575, 576], "describ": [27, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 82, 95, 124, 125, 127, 132, 161, 201, 210, 274, 296, 378, 380, 382, 383, 386, 387, 389, 390, 391, 393, 394, 396, 397, 400, 401, 402, 403, 414, 420, 428, 436, 437, 452, 455, 463, 464, 474, 478, 479, 485, 487, 489, 491, 492, 498, 510, 514, 518, 527, 528, 573, 574, 575, 576], "descript": [56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 87, 91, 126, 210, 378, 382, 383, 391, 397, 402, 403, 414, 439, 443, 459, 467, 476, 479, 482, 489, 491, 498, 499, 514], "description1": 378, "description2": 378, "description3": 378, "description_width": [459, 467, 482, 498, 499], "descriptionstyl": [459, 467, 482, 498, 499], "descriptor": [87, 88, 91, 102, 105, 109, 110, 271, 313, 378, 424], "design": [382, 383, 386, 387, 390, 391, 393, 397, 399, 401, 402, 416, 436, 443], "desir": [16, 84, 87, 90, 91, 104, 123, 160, 190, 191, 200, 203, 286, 352, 353, 354, 482, 500, 527], "desktop": 414, "destin": 11, "detail": [19, 20, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 83, 87, 91, 100, 102, 105, 109, 110, 124, 125, 150, 151, 157, 162, 165, 168, 191, 203, 205, 210, 213, 217, 220, 221, 223, 224, 225, 227, 228, 229, 230, 232, 233, 234, 235, 236, 237, 238, 239, 240, 242, 245, 249, 250, 251, 252, 253, 257, 258, 259, 260, 262, 265, 266, 267, 271, 272, 273, 377, 378, 380, 382, 385, 386, 387, 390, 391, 392, 396, 397, 398, 402, 403, 406, 408, 412, 414, 415, 422, 426, 427, 445, 446, 447, 451, 453, 454, 455, 456, 461, 462, 463, 466, 467, 470, 473, 477, 478, 479, 481, 482, 483, 484, 485, 487, 489, 491, 492, 494, 499, 500, 510, 511, 513, 519, 523, 524, 526, 571, 572, 574, 578], "detect": [59, 140, 141, 283, 367, 368, 378, 393, 396, 397, 399, 416, 422, 423, 424, 434, 436, 437, 443, 445, 458, 476, 489, 491, 494, 573, 576], "detect_t": 397, "detector": [83, 88, 103, 108, 154, 483, 491, 519, 573], "determin": [19, 20, 26, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 87, 91, 112, 131, 153, 159, 161, 163, 175, 176, 178, 180, 217, 218, 221, 225, 227, 228, 229, 233, 239, 240, 242, 246, 248, 250, 251, 252, 257, 262, 264, 265, 266, 267, 270, 272, 274, 304, 326, 388, 392, 395, 403, 430, 442, 443, 446, 453, 456, 457, 462, 468, 481, 483, 504, 572], "determinist": 377, "deti": [83, 103, 108, 390, 489], "detx": [83, 103, 108, 390, 489], "dev": [11, 16, 82, 84, 90, 104, 123, 377, 379, 380, 393, 403, 406, 407, 446, 448, 451, 452, 453, 454, 455, 456, 457, 459, 460, 461, 462, 463, 464, 465, 468, 469, 470, 471, 475, 476, 477, 479, 481, 482, 483, 484, 485, 487, 489, 490, 491, 492, 498, 499, 500, 538, 540, 568, 569], "dev1369": [104, 123, 414, 446, 448, 451, 452, 453, 454, 455, 456, 457, 459, 460, 461, 462, 463, 464, 465, 468, 469, 470, 471, 475, 476, 477, 479, 481, 482, 483, 484, 485, 487, 489, 490, 491, 492, 498, 499, 500, 530, 531, 532, 533, 534, 535, 536, 537, 538, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 561, 562, 563, 564, 565, 566, 567, 568, 569], "develop": [378, 382, 383, 385, 386, 387, 388, 390, 391, 393, 394, 396, 397, 398, 399, 400, 402, 403, 405, 406, 407, 410, 414, 416, 429, 436, 437, 438, 489], "deviat": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 42, 125, 193, 205, 210, 286, 290, 479, 487], "devoid": [451, 517], "devop": 403, "devot": 494, "dex": 304, "df": [87, 91, 119, 134, 143, 462, 479, 576], "dhyr0jhv": 473, "diagnosi": 386, "diagnost": 393, "diagon": [149, 150, 151, 395, 405, 490], "diagram": 578, "dialog": [409, 411], "diamet": [191, 192, 193, 448], "diamond": 486, "dict": [15, 16, 19, 20, 26, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 68, 69, 82, 83, 84, 86, 87, 88, 89, 90, 91, 92, 93, 96, 99, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 113, 117, 119, 122, 123, 124, 125, 126, 127, 129, 130, 132, 134, 135, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 156, 157, 159, 160, 161, 162, 163, 164, 165, 166, 167, 177, 190, 191, 192, 193, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 208, 209, 210, 212, 217, 218, 219, 220, 221, 222, 223, 224, 225, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 242, 245, 246, 247, 248, 249, 250, 251, 252, 253, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 269, 270, 271, 272, 273, 274, 275, 278, 283, 284, 285, 286, 287, 291, 302, 316, 324, 325, 340, 343, 344, 345, 348, 358, 359, 360, 361, 364, 365, 366, 370, 371, 372, 373, 374, 377, 392, 394, 398, 401, 404, 421, 425, 428, 436, 452, 459, 468, 469, 473, 476, 479, 482, 486, 498, 499, 526, 531, 540], "dict_kei": [447, 540], "dictionari": [15, 16, 19, 20, 26, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 69, 84, 87, 88, 89, 90, 91, 92, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 113, 119, 122, 123, 124, 125, 126, 129, 130, 132, 134, 135, 142, 143, 146, 147, 148, 149, 150, 151, 152, 153, 154, 156, 157, 159, 161, 162, 163, 164, 165, 166, 167, 177, 190, 191, 192, 193, 195, 196, 198, 199, 200, 201, 203, 204, 205, 209, 210, 212, 213, 215, 217, 218, 219, 220, 221, 222, 223, 224, 225, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 269, 270, 271, 272, 273, 274, 275, 283, 285, 286, 287, 291, 314, 340, 343, 344, 345, 348, 358, 361, 371, 378, 394, 396, 401, 404, 405, 451, 453, 459, 479, 480, 486, 487, 569], "dictionnari": 370, "did": [77, 384, 391, 396, 397, 398, 400, 403, 419, 446, 454, 456, 459, 461, 467, 470, 479, 487, 489], "didn": [83, 88, 384, 387, 391, 394, 502], "diff": [101, 102, 105, 109, 110, 377, 380, 385, 389, 459, 467, 499], "diff_flux": 475, "diff_flux_point": [101, 477], "differ": [26, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 46, 59, 67, 80, 86, 87, 91, 94, 100, 101, 119, 121, 122, 124, 125, 126, 129, 130, 132, 140, 146, 147, 148, 149, 152, 154, 156, 159, 164, 174, 192, 193, 195, 198, 199, 200, 201, 203, 204, 205, 283, 284, 285, 287, 334, 338, 352, 353, 368, 377, 378, 380, 382, 383, 385, 387, 388, 389, 390, 391, 393, 394, 395, 397, 398, 399, 400, 401, 403, 405, 407, 409, 411, 420, 423, 425, 435, 438, 439, 440, 442, 446, 451, 452, 453, 455, 456, 459, 462, 463, 464, 465, 468, 470, 473, 474, 476, 477, 478, 479, 481, 483, 484, 485, 486, 487, 489, 490, 491, 494, 498, 500, 502, 510, 512, 514, 519, 526, 527, 532, 533, 572, 574, 575, 576], "different": 385, "differenti": [23, 79, 122, 124, 131, 192, 193, 195, 197, 201, 204, 205, 246, 261, 276, 277, 331, 383, 388, 395, 401, 435, 482, 485, 490, 500, 512, 573], "differential_flux": 124, "difficult": [388, 391, 407], "diffus": [68, 192, 193, 195, 201, 204, 205, 278, 377, 393, 396, 437, 438, 459, 463, 476, 482, 484, 485, 489, 571], "diffuse_cub": 485, "diffuse_galactic_fermi": 484, "diffuse_iem": [484, 490], "diffuse_iso": [484, 490], "diffuse_model": 278, "difrsp0": [490, 500], "difrsp1": [490, 500], "difrsp2": [490, 500], "difrsp3": [490, 500], "difrsp4": [490, 500], "digit": 377, "dilat": [205, 428], "dim": [159, 333, 433, 434, 461, 573], "dimens": [46, 53, 102, 105, 109, 110, 122, 124, 146, 147, 148, 149, 150, 151, 152, 153, 154, 156, 157, 159, 161, 162, 163, 164, 165, 174, 190, 191, 192, 193, 195, 196, 198, 200, 201, 203, 204, 205, 269, 270, 273, 304, 316, 370, 393, 425, 436, 438, 442, 479, 480, 482, 485, 494, 510, 526, 527, 532], "dimension": [31, 32, 37, 68, 87, 91, 190, 191, 192, 193, 195, 198, 200, 201, 203, 204, 205, 232, 235, 279, 317, 330, 383, 391, 405, 409, 434, 455, 478, 479, 480, 482, 485, 500, 518, 520, 526, 527, 572, 573], "dimensionless": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 83, 154, 266, 267, 303, 465, 485], "dimitri": [428, 430], "dipol": [51, 54], "dirac": 19, "direct": [91, 104, 164, 182, 183, 186, 188, 197, 224, 232, 235, 308, 311, 378, 383, 389, 391, 396, 398, 401, 404, 428, 445, 450, 454, 481, 494, 511, 519, 520, 522, 523, 531, 572, 573], "directional_offset_bi": [446, 454], "directli": [13, 16, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 56, 69, 83, 84, 87, 90, 91, 104, 123, 133, 139, 142, 143, 164, 179, 192, 193, 195, 201, 204, 205, 269, 271, 273, 377, 379, 380, 382, 384, 385, 388, 389, 390, 391, 395, 397, 404, 409, 411, 412, 416, 418, 419, 420, 422, 436, 443, 449, 451, 452, 454, 459, 460, 461, 464, 465, 467, 469, 470, 474, 476, 477, 478, 479, 480, 482, 483, 484, 485, 486, 489, 490, 498, 499, 500, 502, 510, 514, 519, 523, 526, 550, 576], "directori": [11, 82, 87, 377, 393, 452, 462, 492, 498, 500, 511, 514, 574], "dirk": [419, 433, 435], "disabl": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 377, 428], "disable_unicode_literals_warn": 377, "disadvantag": 574, "disagr": 382, "disambigu": 382, "disc": [456, 457, 459, 464], "discard": [404, 473, 476], "discard_on_copi": [87, 91], "discarded_ind": 476, "discarded_spati": 476, "discarded_t": 476, "disccus": 386, "discourag": 377, "discov": 574, "discrep": 451, "discret": [91, 135, 295, 300, 390, 479, 526], "discrete_correl": 135, "discrete_correlation_dict": 135, "discrete_correlation_err": [135, 295], "discuss": [13, 59, 274, 377, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 407, 414, 436, 487, 492, 503, 578], "disjoint": 391, "disk": [82, 110, 151, 154, 193, 203, 205, 224, 235, 237, 355, 376, 377, 387, 388, 389, 393, 400, 401, 445, 446, 451, 459, 460, 482, 483, 484, 485, 525, 528, 533, 537, 539], "disk_inc": 391, "diskspatialmodel": [72, 255, 400, 421, 442, 484, 485, 531], "dismiss": 100, "disp": [518, 519], "dispatch": 388, "dispers": [82, 88, 102, 103, 105, 107, 108, 109, 110, 111, 113, 115, 149, 150, 151, 154, 172, 178, 179, 182, 183, 186, 377, 383, 388, 389, 390, 422, 424, 434, 435, 436, 438, 446, 448, 451, 452, 459, 463, 481, 491, 492, 498, 499, 510, 519, 522, 573], "displac": 308, "displai": [11, 15, 82, 87, 91, 117, 129, 132, 210, 291, 325, 370, 374, 377, 378, 407, 409, 411, 428, 431, 442, 443, 446, 448, 451, 452, 453, 454, 455, 456, 459, 460, 461, 462, 463, 465, 467, 468, 470, 471, 476, 477, 478, 479, 482, 484, 485, 489, 490, 492, 514, 574], "display_length": [87, 91], "disrupt": [417, 418], "dissolv": 421, "dist": [327, 407], "distanc": [17, 18, 21, 22, 23, 24, 25, 27, 41, 46, 47, 126, 140, 141, 200, 246, 273, 300, 307, 333, 391, 434, 441, 453, 455, 465, 475, 476, 479, 508, 523, 550], "distance_gc": [17, 18, 21, 22, 24, 25, 27, 475], "distance_max": [46, 47, 333, 476], "distance_min": [47, 333, 476], "distance_refer": 476, "distibut": [133, 142], "distinct": [392, 393, 398, 491, 577], "distinguish": [285, 287, 401, 404, 446, 482], "distort": [391, 420], "distrib": [101, 133, 142, 451], "distribut": [13, 28, 29, 30, 31, 32, 33, 35, 36, 37, 39, 40, 42, 45, 46, 83, 101, 108, 133, 134, 142, 143, 154, 189, 229, 240, 246, 285, 287, 326, 327, 331, 370, 373, 375, 376, 377, 381, 382, 385, 390, 395, 396, 399, 402, 403, 407, 410, 421, 430, 436, 442, 443, 446, 451, 453, 454, 457, 459, 463, 465, 467, 468, 479, 484, 487, 489, 500, 502, 514, 518, 519, 521, 527, 535, 550, 573, 575, 576], "divers": 401, "divid": [191, 197, 202, 398, 401, 453, 463, 486, 491, 492], "divis": 197, "djangoproject": 397, "djuvsland": 443, "dl3": [6, 16, 82, 83, 86, 88, 91, 96, 146, 147, 148, 149, 152, 153, 154, 156, 159, 161, 163, 164, 172, 178, 196, 197, 302, 303, 378, 383, 385, 386, 388, 397, 404, 409, 413, 419, 422, 424, 430, 439, 443, 448, 451, 452, 453, 456, 457, 459, 468, 469, 473, 481, 483, 486, 496, 498, 499, 510, 514, 516, 517, 518, 520, 521, 523, 524, 572, 573], "dl4": [99, 101, 102, 105, 109, 110, 117, 121, 125, 129, 132, 157, 178, 378, 383, 404, 409, 424, 470, 477, 478, 479, 514, 572, 573], "dl5": [117, 121, 125, 129, 132, 404, 443, 470, 478, 479, 572, 573], "dl6": [117, 121, 125, 129, 132, 478, 572, 573], "dm": [19, 20, 26, 424, 439, 475, 485], "dm_exampl": 502, "dmfitfunct": 502, "dmpipe": 502, "dmprofil": [17, 21, 22, 23, 24, 25, 27, 475, 502], "dmsky": 502, "dn": [229, 240, 475, 573], "dnde": [19, 20, 26, 67, 122, 123, 124, 131, 133, 135, 136, 137, 138, 142, 217, 218, 221, 225, 227, 228, 229, 233, 239, 240, 242, 246, 248, 250, 251, 252, 257, 262, 264, 265, 266, 267, 270, 274, 276, 401, 428, 449, 451, 452, 461, 465, 476, 477, 478, 485, 490, 498, 500, 512], "dnde_cu": 277, "dnde_err": [122, 124, 133, 142, 512], "dnde_errn": [67, 122, 124, 133, 142, 476], "dnde_error": [19, 20, 26, 217, 218, 221, 225, 227, 228, 229, 233, 239, 240, 242, 246, 248, 250, 251, 252, 257, 262, 264, 265, 266, 267, 270, 274], "dnde_errp": [67, 122, 124, 133, 142, 476], "dnde_ref": [122, 124, 401], "dnde_scan_axi": [133, 142], "dnde_scan_valu": [122, 124], "dnde_ul": [67, 122, 124, 133, 142, 476, 500], "do": [13, 16, 19, 20, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 83, 84, 90, 95, 100, 104, 123, 149, 160, 213, 217, 220, 221, 224, 225, 227, 228, 229, 230, 232, 233, 234, 235, 236, 237, 238, 239, 240, 242, 249, 250, 251, 252, 253, 257, 258, 259, 260, 262, 265, 266, 267, 272, 273, 328, 370, 378, 380, 382, 383, 384, 387, 391, 392, 393, 394, 395, 396, 397, 400, 401, 404, 406, 407, 409, 411, 422, 447, 449, 451, 452, 454, 455, 456, 457, 459, 461, 462, 463, 467, 469, 470, 471, 473, 475, 476, 477, 479, 481, 482, 483, 484, 485, 489, 490, 498, 499, 500, 510, 514, 521, 526, 571, 574, 577, 578], "do_someth": 377, "doc": [11, 13, 16, 83, 84, 87, 90, 91, 104, 123, 149, 191, 197, 200, 203, 210, 223, 245, 304, 341, 377, 378, 380, 382, 385, 391, 393, 394, 396, 397, 406, 413, 414, 416, 422, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 446, 448, 451, 452, 453, 454, 455, 456, 457, 459, 460, 461, 462, 463, 464, 465, 467, 468, 469, 470, 471, 473, 475, 476, 477, 479, 481, 482, 483, 484, 485, 487, 489, 490, 491, 492, 498, 499, 500, 527, 538, 540, 546, 562, 568, 569, 573, 574, 578], "docker": [394, 407], "dockerfil": [385, 406, 407], "docstr": [377, 397, 403, 428, 429, 430, 432, 435, 441, 442, 443, 485], "doctest": [160, 365, 378], "document": [11, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 50, 51, 52, 53, 54, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 117, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 159, 160, 161, 162, 163, 164, 165, 167, 168, 169, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 269, 270, 271, 272, 273, 274, 275, 285, 287, 312, 316, 326, 351, 364, 377, 379, 381, 382, 384, 385, 387, 391, 393, 394, 396, 398, 400, 402, 403, 407, 408, 413, 414, 415, 422, 424, 425, 428, 430, 431, 432, 434, 435, 436, 437, 438, 439, 440, 441, 442, 482, 484, 489, 491, 492, 514, 525, 526, 527, 574], "doe": [16, 84, 87, 90, 91, 104, 123, 125, 129, 135, 152, 162, 165, 199, 237, 272, 283, 377, 378, 384, 385, 387, 389, 391, 392, 394, 396, 397, 400, 401, 403, 404, 419, 428, 439, 446, 447, 451, 454, 456, 459, 461, 462, 476, 479, 480, 481, 482, 483, 491, 502, 514, 523, 574], "doesn": [69, 377, 378, 382, 384, 385, 391, 394, 395, 397, 489, 490, 574], "dof": 576, "doi": [134, 143, 403], "domain": [192, 193, 195, 201, 204, 205, 377, 391, 474], "domenico": 434, "dominguez": [225, 226, 400, 447, 540], "dominquez": 225, "don": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 87, 91, 149, 376, 377, 380, 382, 384, 385, 394, 404, 407, 448, 451, 456, 461, 468, 483, 485, 572, 574, 577, 578], "donath": [386, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443], "done": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 87, 91, 122, 125, 150, 151, 157, 162, 165, 370, 377, 378, 380, 382, 383, 384, 388, 390, 391, 392, 393, 395, 396, 397, 400, 401, 403, 409, 413, 437, 442, 448, 454, 459, 460, 464, 465, 467, 470, 471, 477, 478, 481, 482, 485, 486, 510, 514, 522, 523, 527, 559, 576, 578], "dos2unix": 377, "dot": [50, 51, 54, 109, 110, 192, 193, 195, 201, 204, 205, 406, 442], "doubl": [27, 121, 135, 136, 291, 403, 435, 443], "doubling_dict": 291, "down": [50, 51, 54, 132, 382, 384, 387, 391, 396, 420, 477, 490, 577], "downgrad": [191, 376], "download": [67, 94, 101, 124, 380, 385, 393, 394, 397, 404, 406, 408, 409, 411, 413, 417, 418, 420, 421, 428, 437, 438, 439, 446, 447, 448, 449, 451, 452, 453, 454, 455, 456, 457, 459, 460, 461, 462, 463, 464, 465, 467, 468, 469, 470, 471, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 489, 490, 491, 492, 494, 496, 498, 499, 500, 528, 530, 531, 532, 533, 534, 535, 536, 537, 538, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 561, 562, 563, 564, 565, 566, 567, 568, 569, 574], "downsampl": [102, 105, 109, 110, 132, 146, 147, 148, 149, 150, 151, 152, 153, 154, 156, 157, 159, 161, 162, 163, 164, 165, 190, 191, 192, 193, 194, 195, 196, 197, 200, 201, 202, 203, 204, 205, 419, 425, 434, 477, 478], "downsampled_energi": 477, "downsampling_factor": [132, 461], "downward": [285, 287], "dozen": 377, "dpp": 403, "dr": [17, 18, 21, 22, 24, 25, 27, 533], "dr1": [16, 65, 82, 83, 86, 88, 91, 96, 154, 172, 267, 302, 303, 378, 385, 397, 413, 445, 448, 451, 452, 457, 459, 469, 473, 481, 486, 496, 498, 499, 511, 514, 516, 517, 518, 520, 521, 523, 524, 528, 560], "dr2": [65, 267, 428, 445, 528, 560], "dr3": [65, 266, 445, 485, 528, 560], "dr4": [65, 443], "draft": [377, 381, 382, 405, 437], "drag": 380, "draw": [33, 193, 326, 390, 487], "drawback": [392, 396], "drawn": [326, 390], "drift": [85, 94, 95, 439], "drive": 393, "driven": [11, 15, 383, 393, 395, 397, 436, 494, 513], "drop": [52, 53, 102, 105, 109, 110, 122, 124, 129, 150, 151, 157, 162, 165, 190, 191, 192, 193, 195, 196, 200, 201, 203, 204, 205, 224, 231, 271, 362, 381, 382, 393, 394, 399, 418, 421, 422, 425, 428, 435, 438, 463, 482, 510], "ds9": [83, 191, 200, 203, 207, 223, 245, 377, 378, 391, 420, 483, 485, 527], "ds9parser": 391, "dss": 387, "dt": [87, 91], "dtime_t": 474, "dtype": [33, 38, 87, 91, 111, 115, 147, 149, 152, 190, 191, 192, 193, 195, 200, 201, 203, 204, 205, 223, 245, 304, 377, 405, 453, 456, 465, 473, 476, 477, 478, 480, 481, 482, 489, 490, 500, 512], "duck": [16, 84, 90, 104, 123], "due": [59, 87, 91, 377, 405, 431, 445, 450, 451, 482, 487, 489, 494, 550, 574], "dummi": [109, 110, 391, 456, 514], "dump": [16, 84, 90, 104, 123, 393], "dumps_kwarg": [16, 84, 90, 104, 123], "duplic": [87, 91, 100, 150, 377, 378, 380, 383, 397, 398, 401, 425, 428], "durat": [83, 86, 88, 94, 454, 463, 467, 469, 473, 489, 511, 514], "dure": [16, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 50, 52, 53, 83, 84, 85, 88, 90, 95, 102, 104, 105, 109, 110, 123, 169, 283, 378, 385, 389, 393, 396, 397, 399, 402, 403, 404, 405, 406, 407, 422, 425, 442, 443, 452, 453, 463, 468, 469, 473, 477, 481, 483, 487, 499, 510, 511, 573, 577], "dust": 225, "duti": 403, "dwarf": 502, "dx": [33, 308], "dy": [33, 308], "dynam": [374, 511], "dz": 308, "e": [13, 16, 19, 20, 26, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 46, 47, 50, 51, 54, 59, 67, 68, 82, 83, 84, 85, 86, 87, 90, 91, 95, 104, 113, 123, 124, 125, 140, 149, 150, 151, 152, 154, 178, 185, 191, 192, 193, 195, 197, 199, 201, 203, 204, 205, 210, 213, 215, 217, 218, 220, 221, 224, 225, 227, 228, 229, 230, 232, 233, 234, 235, 236, 237, 238, 239, 240, 242, 246, 248, 249, 250, 251, 252, 253, 257, 258, 259, 260, 262, 264, 265, 266, 267, 270, 272, 273, 274, 285, 287, 291, 304, 306, 310, 336, 344, 355, 366, 367, 372, 376, 377, 378, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 399, 400, 401, 402, 403, 404, 406, 407, 409, 410, 411, 413, 414, 416, 417, 418, 422, 428, 429, 430, 434, 436, 437, 438, 442, 445, 447, 448, 449, 451, 452, 453, 454, 457, 460, 461, 462, 463, 464, 465, 467, 468, 469, 471, 473, 474, 475, 476, 477, 479, 481, 482, 483, 484, 485, 486, 487, 489, 490, 491, 493, 494, 496, 498, 499, 500, 502, 509, 510, 511, 512, 514, 518, 519, 524, 525, 526, 531, 532, 533, 540, 541, 543, 544, 545, 547, 548, 552, 553, 555, 556, 557, 558, 568, 571, 573, 574, 575, 576, 577, 578, 579], "e2dnd": [19, 20, 26, 122, 123, 124, 131, 135, 136, 137, 138, 217, 218, 221, 225, 227, 228, 229, 233, 239, 240, 242, 246, 248, 250, 251, 252, 257, 262, 264, 265, 266, 267, 270, 274, 401, 428, 435, 446, 447, 449, 451, 452, 453, 460, 476, 478, 500, 512, 514, 550], "e2dnde_err": [122, 124], "e2dnde_errn": [122, 124, 476], "e2dnde_errp": [122, 124, 476], "e2dnde_ref": [122, 124], "e2dnde_ul": [122, 124, 476], "e501": [19, 20, 149, 185, 196, 197, 203, 225, 374], "e_": [19, 20, 26, 50, 52, 53, 149, 217, 218, 221, 225, 227, 228, 229, 233, 239, 240, 242, 246, 248, 250, 251, 252, 257, 262, 264, 265, 266, 267, 270, 274, 510, 516, 518, 519, 520, 541, 545, 553, 555, 556], "e_0": [227, 228, 229, 239, 240, 251, 252, 262, 265, 266, 267, 544, 545, 548, 550, 552, 555, 556, 557, 558], "e_7m": 459, "e_b": 400, "e_cut": [67, 476], "e_cutoff": 550, "e_d": [251, 252], "e_edg": 425, "e_max": [67, 124, 401, 446, 451, 452, 453, 464, 468, 476, 477, 478, 479, 482, 487, 500, 512], "e_min": [67, 124, 401, 446, 451, 452, 453, 464, 468, 476, 477, 478, 479, 482, 487, 490, 500, 512], "e_peak": [229, 240], "e_reco": [111, 115, 149, 154, 471, 573], "e_ref": [67, 124, 401, 446, 451, 452, 468, 476, 478, 498, 500, 512], "e_refe_mine_maxdndednde_errpdnde_errndnde_ulsqrt_tsis_ul": 449, "e_refe_mine_maxdndednde_errtssqrt_tsnprednpred_excessstatstat_nullcountssuccess": 461, "e_sn": [43, 44, 52], "e_tru": [111, 115, 154, 471, 490], "each": [11, 19, 20, 26, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 67, 80, 86, 87, 91, 92, 100, 102, 105, 108, 109, 110, 114, 116, 117, 119, 121, 122, 124, 125, 129, 131, 132, 134, 136, 137, 138, 140, 142, 143, 146, 147, 148, 149, 150, 151, 152, 153, 154, 156, 157, 159, 160, 161, 162, 163, 164, 165, 168, 173, 174, 189, 190, 191, 192, 193, 195, 196, 197, 199, 200, 201, 202, 203, 204, 205, 210, 217, 218, 220, 221, 223, 224, 225, 227, 228, 229, 232, 233, 235, 239, 240, 242, 245, 246, 247, 248, 250, 251, 252, 257, 258, 259, 262, 263, 264, 265, 266, 267, 269, 270, 273, 274, 295, 302, 341, 366, 375, 377, 380, 382, 383, 385, 386, 387, 389, 390, 391, 392, 393, 394, 397, 398, 401, 403, 407, 408, 415, 422, 425, 436, 439, 442, 448, 454, 455, 457, 459, 460, 461, 463, 464, 468, 469, 470, 471, 473, 475, 476, 477, 479, 480, 481, 482, 484, 485, 486, 487, 491, 492, 499, 503, 509, 510, 511, 514, 518, 519, 520, 526, 527, 534, 550, 551, 573, 574, 577, 578], "eager": 393, "earli": [391, 396, 397, 489], "earlier": [384, 403], "earth": [41, 88, 90, 276, 490], "earth_azimuth_angl": [490, 500], "earthloc": [83, 85, 88, 90, 94, 97, 314, 404], "easi": [377, 378, 383, 388, 391, 392, 393, 396, 397, 401, 404, 422, 428, 436, 482, 483, 490, 511, 571, 572, 574, 578], "easier": [377, 383, 388, 396, 401, 436, 439, 489], "easiest": 410, "easili": [87, 91, 124, 383, 388, 389, 393, 404, 409, 410, 468, 469, 479, 480, 482, 490, 500, 574], "ebel": 455, "ebl": [225, 226, 274, 395, 400, 422, 425, 435, 442, 445, 450, 485, 494, 528, 560], "ebl_data_builtin": [447, 540], "ebl_dominguez11": [226, 540], "ebl_franceschini": [226, 274], "ebl_franceschini_2017": 226, "ebl_saldana": 226, "eblabsorbtionnormspectralmodel": 400, "eblabsorptionnormspectralmodel": [256, 400, 425, 447, 485, 540], "ebltabl": 447, "ebound": [149, 197, 527], "ebreak": [217, 262, 541, 555], "ec": [471, 485, 527], "eccentr": [224, 232, 235, 531, 532, 533], "echo": 574, "eco": 403, "ecosystem": 404, "ecpl": [67, 80, 227, 228, 229, 283, 400, 434, 449, 476, 485], "ecpl_norm": 546, "ecsv": [59, 63, 124, 389], "ecut": [227, 265, 545, 556], "eda": 485, "edelson": [135, 292, 295, 474], "edelson1988": [135, 295], "edelson2002": 292, "edg": [102, 105, 109, 110, 117, 119, 121, 125, 128, 129, 132, 145, 146, 147, 148, 149, 150, 152, 153, 154, 156, 159, 161, 163, 164, 172, 173, 178, 189, 190, 191, 192, 193, 194, 195, 196, 197, 200, 201, 202, 203, 204, 205, 224, 370, 391, 401, 419, 425, 428, 446, 447, 451, 460, 461, 462, 463, 464, 474, 478, 480, 481, 482, 483, 490, 491, 498, 521, 531], "edge_max": 531, "edge_min": 531, "edge_width": [224, 484, 531], "edgecolor": [374, 451, 453, 455, 461, 462, 465, 471, 475, 523, 531, 532, 533], "edges_max": [194, 196, 197, 202, 482], "edges_min": [194, 196, 197, 202, 482], "edisp": [16, 82, 87, 88, 96, 102, 105, 106, 109, 110, 111, 115, 149, 150, 151, 154, 158, 172, 178, 179, 182, 183, 261, 302, 303, 378, 387, 388, 389, 390, 393, 423, 425, 428, 434, 435, 436, 446, 448, 451, 452, 453, 454, 455, 456, 457, 459, 461, 463, 464, 467, 469, 470, 473, 477, 481, 486, 489, 490, 491, 492, 498, 510, 518, 519, 573], "edisp2d": [151, 154, 378], "edisp3d": 480, "edisp_": 510, "edisp_2d": [82, 87, 154, 489, 492], "edisp_3d": 480, "edisp_ev": 480, "edisp_kernel": [149, 477, 518], "edisp_kernel_map": [150, 491], "edisp_map": [103, 108, 150, 151, 480, 518], "edisp_new": 480, "edispkernel": [105, 111, 115, 150, 154, 182, 423, 518], "edispkernelmap": [102, 105, 106, 109, 110, 113, 151, 157, 158, 162, 165, 172, 179, 182, 424, 425, 455, 481, 490, 514, 518], "edispmap": [102, 103, 105, 108, 109, 110, 150, 157, 158, 162, 165, 172, 179, 182, 183, 389, 390, 398, 418, 421, 422, 423, 425, 428, 480, 510, 518], "edit": [378, 380, 382, 384, 385, 386, 393, 397, 406, 407, 410, 498, 574], "editor": [378, 403, 452, 498, 574], "editori": 403, "edm": 479, "edu": [28, 30, 31, 32, 33, 35, 36, 37, 38, 39, 40, 50, 52, 53, 57, 58, 60, 61, 62, 83, 88, 117, 135, 152, 191, 200, 203, 210, 223, 242, 245, 276, 277, 286, 293, 295, 397, 479, 527], "eemin": 550, "eff": [152, 516, 519, 532, 533], "eff_area": 480, "effarea": 480, "effect": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 45, 46, 82, 87, 88, 91, 105, 107, 151, 152, 178, 179, 184, 186, 187, 200, 223, 245, 367, 368, 377, 382, 387, 388, 390, 391, 401, 432, 434, 451, 463, 465, 468, 474, 487, 491, 492, 494, 498, 519, 527, 532, 533, 573], "effective_area": [158, 390, 489], "effective_livetim": 481, "effective_times_src": 481, "effectivearea3d": 480, "effectiveareat": [389, 416, 428, 432], "effectiveareatable2d": [88, 151, 158, 164, 186, 383, 432, 480, 489, 516], "effici": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 105, 110, 382, 388, 389, 390, 391, 392, 399, 449, 486, 519, 524, 576], "effort": [384, 386, 393, 394, 396, 397, 400, 419, 510], "eflux": [19, 20, 26, 122, 123, 124, 135, 136, 137, 138, 217, 218, 221, 225, 227, 228, 229, 233, 239, 240, 242, 246, 248, 250, 251, 252, 257, 262, 264, 265, 266, 267, 270, 274, 401, 428, 465, 485, 512], "eflux_err": [122, 124, 401], "eflux_errn": [122, 124], "eflux_errp": [122, 124], "eflux_ref": [122, 124], "eflux_ul": [122, 124], "eg": [377, 447, 459, 467, 470, 473, 477, 480, 484, 485, 487], "egal": 489, "egg": 410, "einasto": [21, 502], "either": [67, 82, 87, 88, 91, 95, 110, 122, 124, 154, 169, 190, 191, 192, 193, 195, 197, 198, 199, 200, 201, 203, 204, 205, 237, 286, 304, 334, 366, 378, 380, 382, 384, 391, 393, 396, 399, 403, 409, 428, 442, 452, 459, 465, 470, 477, 479, 485, 487, 498, 510, 512, 514, 525, 527, 571, 574], "ej": [50, 52, 53], "eject": 52, "ejecta": 52, "el": [26, 475], "elabor": [403, 455], "elaps": [83, 386, 573], "electron": [50, 276, 489, 550], "element": [19, 20, 26, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 87, 91, 92, 100, 102, 105, 109, 110, 122, 124, 146, 147, 148, 149, 150, 151, 152, 153, 154, 156, 157, 159, 161, 162, 163, 164, 165, 190, 191, 192, 193, 195, 196, 198, 200, 201, 203, 204, 205, 217, 218, 219, 220, 221, 222, 223, 224, 225, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 242, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 269, 270, 271, 272, 273, 274, 275, 370, 395, 442, 476, 482, 526], "elementtre": 489, "elev": 392, "elif": [377, 391, 404], "elli": [416, 429], "ellips": [224, 391, 527, 531], "ellipseannulusskyregion": [523, 527], "ellipseskyregion": [219, 220, 224, 232, 235, 247, 249, 258, 259, 263, 269, 273, 448, 485, 523], "ellipsoid": 479, "ellipt": [527, 533], "elong": [418, 421, 422, 531, 532], "elpas": 442, "els": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 122, 124, 132, 199, 377, 380, 391, 394, 401, 404, 405, 407, 409, 411, 486, 574, 576], "elsewher": [114, 116], "email": [378, 380, 403, 407], "emax": [129, 250, 277, 456, 462, 553], "emax_fit": 471, "embryon": 393, "emce": [386, 394, 418, 446, 448, 451, 452, 453, 454, 455, 456, 457, 459, 460, 461, 462, 463, 464, 465, 468, 469, 470, 471, 475, 476, 477, 479, 481, 482, 483, 484, 485, 487, 489, 490, 491, 492, 498, 499, 500], "emerg": 387, "emeri": 437, "emin": [129, 250, 277, 456, 462, 553], "emin_fit": 471, "emiss": [52, 68, 136, 383, 388, 392, 451, 457, 459, 460, 463, 484, 489, 490, 510, 524, 550, 571], "emit": [82, 213, 214, 215, 216, 363, 377, 418, 436, 447, 519], "emitt": 451, "emmanoulopoulo": 300, "emmanoulopoulos2010": 300, "emphas": 478, "emphasi": 479, "empir": 40, "emploi": 453, "empti": [92, 100, 102, 105, 109, 110, 140, 172, 192, 193, 195, 199, 201, 204, 205, 210, 245, 363, 385, 387, 419, 431, 459, 463, 464, 467, 470, 481, 482, 491, 503, 510, 523, 524, 527], "empty_dataset": 446, "empty_i": 470, "empty_map": [102, 105, 109, 110, 462, 481, 523], "emsembl": 93, "en": [34, 83, 87, 88, 91, 125, 185, 200, 210, 274, 304, 380, 397, 446, 454, 456, 459, 461, 467, 470, 479, 480, 483, 489, 511, 514, 525, 527], "enabl": [386, 389, 410, 419, 428, 437, 446, 454, 456, 459, 461, 467, 470, 489, 521], "encapsul": [203, 401, 525], "enclos": [205, 378, 448, 453, 479, 483], "enclosur": [82, 156, 453, 480], "encod": [16, 84, 87, 90, 91, 104, 123], "encompass": [191, 525, 527], "encount": [166, 409, 410, 411, 412, 453, 457, 463, 470, 473, 492, 562, 574], "encourag": [377, 382, 403, 406, 436], "end": [52, 53, 86, 87, 91, 92, 94, 100, 102, 109, 122, 124, 132, 197, 237, 245, 382, 384, 386, 388, 389, 391, 392, 393, 394, 396, 397, 400, 429, 439, 446, 447, 448, 449, 451, 452, 453, 454, 455, 456, 457, 459, 460, 461, 462, 463, 464, 465, 467, 468, 469, 470, 471, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 489, 490, 491, 492, 496, 498, 499, 500, 530, 531, 532, 533, 534, 535, 536, 537, 538, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 561, 562, 563, 564, 565, 566, 567, 568, 569, 576], "end_po": [126, 337, 465], "endregion": 457, "endswith": 377, "energet": 463, "energi": [16, 19, 20, 26, 44, 50, 51, 52, 53, 58, 62, 63, 67, 71, 74, 75, 80, 82, 83, 88, 96, 100, 101, 102, 103, 105, 107, 108, 109, 110, 111, 112, 113, 115, 117, 119, 121, 122, 124, 125, 126, 129, 131, 132, 134, 136, 137, 138, 139, 143, 144, 145, 146, 147, 149, 150, 151, 152, 153, 154, 159, 160, 161, 162, 163, 164, 165, 172, 174, 178, 179, 181, 182, 183, 185, 186, 188, 190, 191, 192, 193, 195, 196, 197, 198, 200, 201, 203, 204, 205, 217, 218, 219, 220, 221, 222, 223, 224, 225, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 242, 245, 246, 247, 248, 249, 250, 251, 252, 253, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 269, 270, 271, 272, 273, 274, 275, 277, 279, 281, 372, 373, 377, 383, 386, 388, 389, 390, 391, 392, 393, 395, 396, 399, 401, 405, 409, 413, 417, 418, 419, 420, 422, 423, 424, 425, 427, 428, 430, 433, 434, 435, 436, 437, 438, 439, 440, 442, 443, 445, 447, 448, 450, 451, 452, 454, 455, 456, 457, 459, 460, 461, 463, 465, 466, 467, 468, 469, 470, 471, 473, 476, 477, 478, 481, 482, 491, 492, 494, 498, 499, 500, 509, 510, 511, 514, 519, 521, 522, 523, 525, 526, 527, 534, 540, 546, 549, 551, 554, 559, 569, 572, 573, 575], "energy_axes_are_align": 100, "energy_axi": [19, 20, 26, 102, 105, 109, 110, 111, 112, 115, 122, 124, 149, 150, 151, 154, 162, 164, 165, 172, 190, 191, 192, 193, 195, 196, 200, 201, 203, 204, 205, 217, 218, 221, 225, 227, 228, 229, 233, 239, 240, 242, 246, 248, 250, 251, 252, 257, 262, 264, 265, 266, 267, 270, 274, 401, 446, 448, 451, 453, 454, 455, 457, 461, 463, 464, 469, 470, 473, 477, 480, 481, 482, 485, 490, 491, 499, 518, 521, 523, 524, 526, 527], "energy_axis_new": 477, "energy_axis_tru": [102, 105, 109, 110, 111, 112, 113, 115, 149, 150, 151, 152, 154, 159, 160, 162, 172, 378, 422, 446, 448, 451, 453, 454, 455, 457, 461, 463, 464, 467, 469, 470, 471, 473, 477, 480, 481, 490, 491, 499, 518, 521, 523, 524], "energy_bin": 393, "energy_bin_per_decade_max": 112, "energy_bound": [19, 20, 26, 217, 218, 221, 225, 227, 228, 229, 233, 239, 240, 242, 246, 248, 250, 251, 252, 257, 262, 264, 265, 266, 267, 270, 274, 391, 428, 447, 449, 451, 453, 459, 460, 471, 475, 476, 479, 485, 490, 499, 500, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 559], "energy_cent": 271, "energy_column": 401, "energy_depend": 462, "energy_dependent_estim": [445, 462, 466], "energy_edg": [16, 117, 119, 121, 125, 126, 129, 132, 140, 141, 145, 197, 324, 401, 447, 451, 452, 455, 456, 457, 459, 460, 461, 462, 465, 468, 469, 470, 471, 478, 491, 498, 499, 512], "energy_estim": 491, "energy_flux": [19, 20, 26, 217, 218, 221, 225, 227, 228, 229, 233, 239, 240, 242, 246, 248, 250, 251, 252, 257, 262, 264, 265, 266, 267, 270, 274, 485, 500], "energy_flux_err": [19, 20, 26, 217, 218, 221, 225, 227, 228, 229, 233, 239, 240, 242, 246, 248, 250, 251, 252, 257, 262, 264, 265, 266, 267, 270, 274], "energy_flux_error": [19, 20, 26, 217, 218, 221, 225, 227, 228, 229, 233, 239, 240, 242, 246, 248, 250, 251, 252, 257, 262, 264, 265, 266, 267, 270, 274], "energy_index": 159, "energy_integr": 51, "energy_logspac": 396, "energy_mask": [190, 191, 200, 203, 424, 453, 459, 471, 477, 479, 483, 487], "energy_max": [19, 20, 26, 83, 100, 102, 105, 109, 110, 122, 124, 125, 126, 129, 149, 190, 191, 197, 200, 203, 217, 218, 221, 225, 227, 228, 229, 233, 239, 240, 242, 246, 248, 250, 251, 252, 257, 262, 264, 265, 266, 267, 270, 271, 274, 279, 391, 393, 459, 464, 471, 473, 475, 477, 481, 485, 500], "energy_min": [19, 20, 26, 52, 53, 83, 100, 102, 105, 109, 110, 122, 124, 125, 126, 129, 149, 190, 191, 197, 200, 203, 217, 218, 221, 225, 227, 228, 229, 233, 239, 240, 242, 246, 248, 250, 251, 252, 257, 262, 264, 265, 266, 267, 270, 271, 274, 279, 391, 393, 459, 464, 471, 473, 475, 477, 481, 485, 500], "energy_nam": [162, 165], "energy_nod": [400, 485], "energy_pow": [19, 20, 26, 124, 217, 218, 221, 225, 227, 228, 229, 233, 239, 240, 242, 246, 248, 250, 251, 252, 257, 262, 264, 265, 266, 267, 270, 274, 281, 451, 459, 471, 479, 499, 500], "energy_rang": [66, 67, 71, 74, 75, 80, 83, 100, 102, 105, 109, 110, 428, 477, 483, 557, 558], "energy_range_fit": [102, 105, 109, 110, 477], "energy_range_saf": [102, 105, 109, 110, 477], "energy_range_tot": [102, 105, 109, 110, 483], "energy_reco": [377, 467], "energy_ref": [122, 124], "energy_resolut": 436, "energy_saf": 393, "energy_tru": [16, 96, 102, 105, 109, 110, 111, 115, 149, 150, 151, 152, 153, 154, 159, 160, 161, 162, 163, 172, 179, 182, 190, 191, 197, 200, 203, 302, 303, 377, 378, 390, 442, 446, 448, 451, 452, 453, 454, 455, 456, 457, 459, 461, 463, 464, 467, 468, 469, 470, 471, 473, 477, 480, 481, 482, 483, 485, 486, 489, 490, 491, 498, 499, 518, 519, 521, 523, 524, 526, 527], "energy_true_axi": 149, "energyaxesconfig": 16, "energyaxisconfig": 16, "energybound": 420, "energydependentmorphologi": 462, "energydependentmorphologyestim": [443, 462], "energydependentmultigausspsf": [158, 416, 480, 489, 520], "energydependenttablepsf": [383, 398, 417, 428], "energydispers": [149, 150, 151, 154, 389, 423, 433, 436, 437], "energydispersion2d": [88, 149, 151, 158, 164, 182, 183, 378, 383, 428, 430, 435, 480, 489, 518], "energydispersion3d": 480, "energyoffsetarrai": 433, "energyrangeconfig": 16, "enforc": [16, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 84, 90, 104, 123, 380, 404], "engin": [87, 91], "english": 514, "enhanc": [382, 386, 413], "enlarg": 524, "enough": [390, 392, 393, 451, 454, 457, 467, 468, 483, 521], "enrico": 393, "enrico_config": 393, "enrico_xml": 393, "enriqu": [385, 393, 397, 417, 418, 419, 420, 421, 422, 423, 424, 425, 428, 430, 436, 437, 438], "ensembl": 93, "ensur": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 178, 198, 283, 377, 383, 388, 389, 400, 404, 410, 430, 446, 451, 469, 478, 483, 521, 526, 535], "enter": [214, 216, 223, 245, 413], "entir": [16, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 84, 87, 90, 91, 102, 104, 105, 109, 110, 123, 179, 448, 459, 462, 474], "entri": [43, 44, 87, 91, 94, 119, 122, 125, 126, 129, 130, 132, 134, 135, 142, 143, 210, 211, 223, 245, 283, 344, 377, 378, 389, 397, 401, 404, 406, 409, 411, 428, 439, 448, 452, 476, 479, 482, 485, 486, 514, 515, 527], "entry_point": 429, "enum": [95, 155, 319, 320], "enumer": [451, 463, 476, 479, 484, 487], "env": [380, 394, 406, 408, 409, 411, 412, 437, 574], "envelop": [390, 479, 499], "environ": [11, 82, 342, 376, 377, 380, 384, 385, 389, 394, 397, 406, 407, 409, 410, 411, 412, 413, 417, 418, 420, 436, 437, 446, 448, 451, 452, 453, 454, 455, 456, 457, 459, 460, 461, 462, 463, 464, 465, 468, 469, 470, 471, 475, 476, 477, 479, 481, 482, 483, 484, 485, 487, 489, 490, 491, 492, 498, 499, 500, 574], "envis": 386, "envvar": 11, "eosc": 403, "episod": 136, "epoch": 360, "epsilon": [19, 20, 26, 217, 218, 221, 225, 227, 228, 229, 233, 239, 240, 242, 246, 248, 250, 251, 252, 257, 262, 264, 265, 266, 267, 270, 274], "epsilon_": [102, 109, 510], "epsilon_k": [102, 109, 510], "epsmch": 479, "eq": 101, "eqcon": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40], "eqnarrai": 400, "equal": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 52, 117, 121, 125, 129, 132, 149, 197, 377, 387, 390, 438, 451, 468, 469, 483, 487, 510, 526, 577], "equat": [27, 266, 267, 292, 536, 537, 541, 544, 545, 547, 548, 552, 553, 555, 556, 557, 558, 576, 577], "equatori": [95, 155, 191, 192, 193, 195, 198, 200, 203, 204, 205, 480], "equival": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 87, 91, 122, 146, 147, 148, 149, 152, 153, 154, 156, 159, 161, 163, 164, 190, 191, 192, 193, 195, 197, 200, 201, 203, 204, 205, 370, 378, 389, 390, 391, 400, 401, 442, 443, 451, 476, 481, 482, 483, 485, 489, 498, 510, 512, 514, 525, 526, 527, 574, 575, 576], "er": [26, 475], "era": 225, "ereco": [149, 480], "erf": [233, 531], "erg": [52, 53, 67, 446, 451, 476, 500, 507, 514], "erlangen": 396, "erod": 205, "eros": [203, 205], "err": 479, "errat": 377, "errn": [121, 125, 129, 130, 132, 210, 439, 576], "errn_2sigma": 576, "error": [11, 16, 19, 20, 26, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 67, 68, 79, 84, 86, 90, 101, 102, 104, 105, 109, 110, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 132, 133, 135, 136, 137, 138, 142, 168, 194, 197, 202, 213, 215, 217, 218, 219, 220, 221, 224, 225, 227, 228, 229, 230, 232, 233, 234, 235, 236, 237, 238, 239, 240, 242, 246, 247, 248, 249, 250, 251, 252, 253, 257, 258, 259, 260, 262, 263, 264, 265, 266, 267, 269, 270, 272, 273, 274, 285, 287, 291, 292, 293, 295, 300, 355, 377, 378, 391, 392, 393, 395, 400, 401, 404, 405, 418, 422, 424, 426, 428, 429, 431, 435, 436, 439, 441, 442, 443, 447, 448, 449, 451, 452, 454, 455, 456, 459, 460, 461, 462, 464, 467, 468, 470, 471, 473, 474, 476, 478, 485, 486, 487, 489, 498, 499, 500, 502, 510, 512, 514, 532, 550, 559, 571, 574], "error_callback": 168, "errorbar": [83, 101, 102, 105, 109, 110, 197, 201, 222, 230, 234, 236, 237, 238, 253, 260, 272, 275, 446, 473, 487], "errp": [121, 125, 129, 130, 132, 210, 439, 576], "errp_2sigma": 576, "escap": [377, 403], "especi": [87, 91, 136, 380, 384, 387, 391, 397, 398, 407, 428, 434, 448, 461, 469, 476, 482, 487, 489, 490], "essenti": [387, 389, 392, 422, 423, 424, 465, 482], "establish": [377, 390], "estim": [6, 19, 20, 26, 50, 72, 101, 105, 110, 112, 117, 118, 119, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 167, 173, 174, 175, 181, 190, 191, 200, 203, 205, 210, 213, 217, 218, 220, 221, 224, 225, 227, 228, 229, 230, 232, 233, 234, 235, 236, 237, 238, 239, 240, 242, 246, 247, 248, 249, 250, 251, 252, 253, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 269, 270, 272, 273, 274, 283, 290, 293, 298, 324, 370, 381, 383, 386, 390, 391, 392, 393, 396, 399, 405, 409, 418, 419, 422, 423, 424, 425, 428, 429, 430, 434, 435, 436, 437, 439, 442, 443, 445, 446, 447, 451, 453, 457, 459, 460, 461, 464, 466, 469, 470, 471, 472, 477, 479, 483, 487, 488, 491, 494, 498, 499, 510, 514, 524, 571, 572, 573, 575, 577], "estimate_best_fit": [125, 126, 129, 130], "estimate_count": [125, 126, 129, 130], "estimate_energy_depend": 119, "estimate_errn_errp": [125, 126, 129, 130], "estimate_excess_map": 121, "estimate_exposure_reco_energi": 121, "estimate_fit_input_map": 132, "estimate_flux_default": 132, "estimate_flux_map": 132, "estimate_flux_point": [125, 126, 129], "estimate_kernel": [121, 132], "estimate_map": 117, "estimate_mask_default": [121, 132], "estimate_min_e2dnd": 131, "estimate_min_excess": 131, "estimate_npr": [125, 126, 129, 130], "estimate_npred_excess": [125, 126, 129], "estimate_pad_width": 132, "estimate_scan": [125, 126, 129, 130], "estimate_t": [125, 126, 129, 130], "estimate_time_bin_flux": 129, "estimate_ul": [125, 126, 129, 130], "estimator_result": [134, 142, 143, 471], "et": [26, 33, 59, 101, 135, 136, 152, 225, 292, 293, 295, 300, 387, 455, 462, 474, 502, 573], "eta": [235, 236, 258, 533, 537, 564], "eta_": 50, "eta_b": 50, "eta_rang": [533, 537], "etc": [105, 110, 122, 377, 382, 383, 387, 388, 389, 392, 393, 397, 398, 401, 403, 404, 425, 452, 454, 459, 467, 468, 470, 471, 473, 477, 482, 485, 487, 490, 498, 510, 523], "etru": 480, "eu": 397, "euclidean": 302, "europ": 403, "ev": [478, 480, 514, 550], "ev2": 480, "evalu": [17, 18, 19, 20, 21, 22, 24, 25, 26, 27, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 68, 87, 91, 102, 105, 108, 109, 110, 146, 147, 148, 149, 152, 153, 154, 156, 159, 161, 163, 164, 172, 179, 185, 200, 211, 212, 217, 218, 219, 220, 221, 222, 223, 224, 225, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 242, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 269, 270, 271, 272, 273, 274, 275, 317, 377, 382, 386, 392, 395, 396, 399, 400, 401, 405, 417, 418, 419, 421, 424, 428, 433, 434, 436, 437, 438, 439, 440, 441, 442, 443, 463, 464, 471, 480, 485, 487, 489, 490, 510, 532, 533, 540, 573, 576], "evaluate_contain": [153, 161, 163, 430], "evaluate_direct": [153, 161, 163], "evaluate_energy_flux": [251, 252], "evaluate_error": [19, 20, 26, 124, 217, 218, 221, 225, 227, 228, 229, 233, 239, 240, 242, 246, 248, 250, 251, 252, 257, 262, 264, 265, 266, 267, 270, 274, 395], "evaluate_geom": [219, 220, 224, 231, 232, 235, 247, 249, 258, 259, 261, 263, 269, 273, 443, 485, 533], "evaluate_integr": [250, 251, 252], "evaluate_paramet": [153, 161, 163], "evaluation_bin_size_min": [219, 220, 224, 232, 235, 247, 249, 258, 259, 261, 263, 269, 273], "evaluation_radiu": [219, 220, 224, 232, 235, 247, 249, 258, 259, 261, 263, 269, 271, 273, 388, 389, 400, 485], "evaluation_region": [219, 220, 224, 232, 235, 247, 249, 258, 259, 261, 263, 269, 273], "even": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 87, 91, 133, 142, 203, 214, 216, 377, 380, 382, 384, 385, 391, 394, 395, 403, 404, 420, 468, 471, 478, 479, 481, 482, 483, 484, 485, 498, 510, 512, 536, 537, 574], "event": [82, 83, 84, 85, 86, 87, 88, 89, 90, 93, 103, 104, 108, 113, 121, 131, 151, 162, 165, 166, 173, 181, 192, 193, 195, 201, 204, 205, 222, 230, 234, 236, 237, 238, 253, 260, 272, 275, 334, 377, 378, 381, 383, 387, 389, 391, 392, 393, 404, 409, 413, 420, 421, 422, 424, 428, 429, 430, 435, 436, 437, 438, 439, 442, 443, 445, 448, 451, 452, 453, 457, 459, 460, 466, 470, 481, 491, 494, 496, 498, 499, 514, 522, 523, 524, 572, 573, 576], "event_3fhl": 500, "event_class": [84, 490, 500], "event_det_coord": [103, 108], "event_fil": 88, "event_filt": 89, "event_filter_typ": 89, "event_id": [390, 489, 490, 500, 511], "event_list": [83, 377, 378, 390], "event_list_meta": [103, 108, 423], "event_sampl": [445, 463, 466], "event_sampling_nrg_depend_model": [445, 464, 466], "event_typ": [104, 490, 500], "eventlist": [84, 88, 103, 108, 181, 192, 193, 195, 201, 204, 205, 377, 378, 383, 390, 391, 392, 404, 413, 418, 425, 430, 432, 433, 434, 436, 437, 463, 464, 471, 482, 489, 490, 500, 511, 514, 523], "eventlistbas": 89, "eventlistdataset": 437, "eventlistmetadata": [83, 404], "events2": 83, "events_": 463, "events_0001": 463, "events_1": 511, "events_2": 511, "events_3fhl": 500, "events_bkg": 390, "events_gc_3fhl": 500, "events_list": 390, "events_path": [82, 463], "events_src": 390, "events_tot": 390, "events_vela": 471, "eventu": [377, 382, 393, 396, 397, 413, 485], "ever": 577, "everi": [191, 193, 205, 273, 377, 380, 385, 386, 387, 389, 393, 402, 404, 407, 448, 451, 482, 499, 574], "everyon": 382, "everyth": [377, 395, 396, 514], "everywher": [377, 391, 396, 397, 417], "evid": [136, 476], "evolut": [50, 52, 53, 225, 383, 397, 445, 466, 494, 507, 508, 528], "evolv": [28, 29, 30, 35, 36, 39, 40, 50, 52, 53, 225, 394, 397, 404, 464, 480], "evt_sampl": 463, "ex": [11, 482, 484, 485], "exact": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 91, 395, 469, 482, 490], "exactli": [117, 121, 125, 129, 132, 197, 372, 451, 453, 469, 471, 483, 487, 490, 510, 527], "exagger": 368, "examin": [403, 518], "exampl": [11, 19, 20, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 66, 67, 80, 82, 83, 85, 86, 87, 88, 89, 91, 94, 96, 99, 101, 102, 105, 109, 110, 111, 114, 115, 116, 117, 119, 121, 122, 124, 126, 128, 129, 130, 131, 132, 136, 140, 141, 144, 145, 147, 149, 151, 152, 153, 154, 160, 162, 165, 172, 175, 177, 190, 191, 192, 193, 194, 195, 196, 197, 198, 200, 201, 202, 203, 204, 205, 210, 214, 216, 237, 243, 274, 277, 283, 286, 302, 303, 324, 328, 334, 344, 356, 357, 362, 365, 367, 368, 370, 372, 374, 377, 378, 380, 382, 385, 387, 388, 389, 390, 391, 392, 393, 394, 395, 397, 400, 403, 404, 405, 409, 410, 411, 413, 417, 419, 422, 425, 428, 429, 430, 433, 435, 436, 437, 443, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 504, 505, 511, 514, 516, 517, 518, 520, 525, 527, 528, 529, 539, 560, 568, 569, 570, 571, 574, 576, 578, 579], "example_cub": 482, "example_cube_fgst": 482, "exce": 112, "except": [67, 69, 80, 87, 91, 102, 105, 109, 110, 168, 192, 193, 195, 201, 204, 205, 304, 374, 377, 388, 392, 396, 480, 484, 527], "excerpt": 492, "excess": [15, 67, 72, 102, 105, 109, 110, 118, 121, 122, 124, 125, 126, 129, 131, 134, 137, 138, 142, 143, 172, 285, 287, 292, 293, 375, 389, 392, 424, 425, 431, 436, 443, 446, 447, 451, 452, 454, 455, 456, 459, 461, 465, 467, 470, 471, 476, 477, 478, 481, 483, 484, 491, 498, 499, 512, 514], "excess_estim": 491, "excess_estimator_integr": 491, "excess_integr": 491, "excess_map": [16, 452, 456, 457, 459, 498], "excess_map_estim": 471, "excess_matching_signific": [427, 437], "excess_min": 145, "excess_r": 477, "excessestim": 401, "excessmapconfig": 16, "excessmapestim": [118, 140, 141, 142, 143, 401, 424, 425, 426, 428, 431, 441, 443, 457, 459, 471, 478, 483, 491, 512], "excesspointsestim": 401, "excessprofileestim": [401, 425], "exchang": 391, "exclud": [16, 84, 90, 101, 102, 104, 105, 109, 110, 123, 128, 173, 175, 214, 216, 223, 245, 383, 440, 481, 483, 523, 524], "exclude_default": [16, 84, 90, 104, 123], "exclude_non": [16, 84, 90, 104, 123], "exclude_unset": [16, 84, 90, 104, 123], "exclus": [16, 83, 167, 169, 174, 175, 176, 177, 180, 191, 203, 383, 391, 393, 424, 426, 448, 456, 459, 481, 521, 523], "exclusion_mask": [167, 169, 174, 175, 176, 177, 180, 451, 457, 461, 481, 483, 499, 521, 523, 524], "exclusion_mask_2d": 481, "exclusion_mask_crab": [452, 498], "exclusion_radiu": 483, "exclusion_region": 451, "exclusionmask": 434, "execut": [11, 121, 125, 129, 130, 132, 377, 378, 380, 382, 384, 385, 386, 392, 393, 397, 407, 408, 409, 410, 411, 412, 413, 422, 430, 436, 445, 450, 458, 466, 472, 481, 482, 488, 490, 493, 494, 495, 497, 500, 501, 529, 539, 560, 570, 572], "exercis": [380, 393, 397, 403], "exhibit": 462, "exist": [11, 15, 16, 26, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 87, 88, 91, 99, 100, 101, 102, 105, 107, 109, 110, 122, 124, 150, 151, 157, 162, 165, 177, 190, 191, 192, 193, 195, 196, 199, 200, 201, 203, 204, 205, 211, 223, 237, 245, 269, 270, 271, 273, 346, 361, 377, 380, 382, 385, 386, 388, 389, 390, 391, 393, 394, 396, 397, 398, 400, 401, 403, 404, 409, 410, 413, 414, 417, 421, 422, 436, 437, 439, 442, 455, 457, 477, 482, 483, 485, 486, 490, 511, 526, 527, 575], "exist_ok": [451, 452, 459, 460, 463, 498, 499], "exit": [11, 15, 87, 91, 214, 216, 223, 245, 418, 538, 574], "exot": 394, "exp": [21, 28, 29, 30, 31, 32, 35, 36, 39, 40, 152, 230, 233, 240, 251, 252, 265, 378, 400, 470, 485, 532, 533, 540, 544, 545, 546, 547, 556, 557, 558, 562, 563, 564, 577], "expand": [129, 342, 387, 428], "expand_map": 129, "expans": [50, 52, 53], "expcutoffpowerlaw": 546, "expcutoffpowerlaw3fglspectralmodel": [256, 400, 449, 485, 545], "expcutoffpowerlawnormspectralmodel": [229, 256, 443, 485, 546], "expcutoffpowerlawspectralmodel": [19, 20, 26, 80, 217, 218, 221, 225, 227, 228, 233, 239, 240, 242, 246, 248, 250, 251, 252, 256, 257, 262, 264, 265, 266, 267, 270, 274, 400, 449, 451, 459, 485, 544, 550], "expdecai": [230, 445, 528, 570], "expdecay_model": [463, 562], "expdecaytemporalmodel": [268, 400, 424, 428, 463, 470, 485, 562], "expect": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 105, 108, 110, 122, 177, 182, 183, 188, 203, 285, 286, 287, 288, 290, 294, 301, 334, 377, 382, 390, 392, 393, 394, 397, 402, 404, 446, 448, 453, 454, 455, 457, 463, 464, 468, 474, 475, 479, 482, 483, 487, 490, 492, 510, 512, 575, 576, 577], "expens": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 451, 464], "experi": [377, 380, 382, 386, 388, 392, 405, 407, 436, 502, 573, 578], "experienc": [386, 412], "experiment": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 393, 574], "expert": 397, "expertis": 394, "expfactor": [266, 267, 557, 558], "expir": 390, "explain": [87, 91, 377, 380, 382, 391, 394, 396, 397, 403, 407, 409, 411, 422, 428, 446, 451, 453, 475, 479, 483, 485, 489, 514, 572, 574], "explan": [117, 121, 125, 129, 132, 378, 382, 414, 474, 578], "explicit": [87, 91, 191, 193, 377, 378, 393, 395, 401, 526, 578], "explicitli": [16, 19, 20, 26, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 84, 90, 104, 123, 146, 147, 148, 149, 152, 153, 154, 156, 159, 161, 163, 164, 217, 218, 221, 225, 227, 228, 229, 233, 239, 240, 242, 246, 248, 250, 251, 252, 257, 262, 264, 265, 266, 267, 270, 274, 304, 387, 399, 408, 418, 464, 484, 512, 526, 578], "explor": [192, 193, 195, 201, 204, 205, 385, 393, 413, 445, 451, 456, 459, 462, 465, 466, 468, 469, 473, 474, 476, 477, 484, 491, 492, 498, 500, 514, 523], "explos": 52, "expomap": 390, "expon": [400, 485], "exponenti": [28, 30, 36, 39, 40, 77, 227, 228, 229, 230, 265, 266, 267, 378, 388, 422, 445, 459, 463, 470, 528, 560], "exponentialcutoffpowerlaw": 550, "export": [84, 87, 90, 91, 102, 104, 105, 122, 123, 124, 380, 401, 404, 409, 411, 422, 432, 439, 440, 443, 452, 485, 491, 492, 498], "expos": [6, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 386, 391, 392, 393, 396, 397, 441, 443, 482, 494, 512, 513, 572], "exposur": [16, 83, 88, 102, 105, 106, 108, 109, 110, 121, 132, 139, 150, 151, 157, 160, 162, 165, 167, 172, 179, 182, 183, 184, 186, 187, 188, 261, 296, 299, 301, 383, 386, 387, 388, 389, 390, 401, 420, 425, 433, 435, 436, 437, 439, 446, 447, 448, 451, 452, 453, 454, 455, 456, 457, 459, 461, 463, 464, 467, 469, 470, 473, 477, 481, 482, 483, 491, 498, 499, 510, 519, 522, 527, 576], "exposure_geom": 151, "exposure_hdu": [150, 151, 157, 162, 165], "exposure_hdu_band": [150, 151, 157, 162, 165], "exposure_hpx": 490, "exposure_map": [150, 151, 157, 162, 165, 182, 183, 188, 480], "exposure_max": 477, "exposure_min": 477, "exposure_tim": 390, "express": [121, 136, 285, 287, 388, 400, 401, 443, 457, 479, 480, 485, 487, 510, 526, 533, 575, 576, 577], "exptest": 434, "extend": [15, 19, 20, 26, 69, 72, 87, 91, 92, 100, 167, 194, 197, 205, 217, 218, 221, 225, 227, 228, 229, 233, 239, 240, 242, 245, 246, 248, 250, 251, 252, 257, 262, 264, 265, 266, 267, 270, 274, 286, 384, 388, 389, 390, 391, 397, 399, 400, 401, 404, 409, 421, 423, 428, 445, 450, 451, 455, 464, 468, 476, 482, 483, 484, 485, 490, 494, 522, 523], "extended_archive_v18": 538, "extended_source_spectral_analysi": [445, 448, 450], "extens": [41, 149, 192, 193, 195, 197, 204, 205, 219, 220, 223, 224, 232, 235, 245, 247, 249, 258, 259, 263, 269, 273, 379, 382, 383, 384, 385, 386, 388, 390, 392, 393, 394, 395, 396, 397, 407, 431, 462, 463, 464, 485, 574], "extent": [203, 223, 245, 391, 455, 485], "extern": [113, 378, 403, 429, 433, 434, 437, 489, 514], "extnam": 480, "extra": [16, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 47, 83, 84, 90, 101, 104, 123, 190, 191, 196, 200, 201, 203, 209, 210, 212, 269, 270, 302, 376, 378, 384, 385, 391, 393, 394, 397, 403, 404, 433, 436, 437, 447, 482, 483, 514, 527], "extra_term": 301, "extract": [16, 84, 90, 100, 102, 104, 105, 109, 110, 122, 123, 124, 129, 150, 151, 157, 162, 165, 168, 173, 174, 179, 181, 189, 192, 193, 194, 195, 197, 202, 203, 204, 205, 271, 377, 387, 392, 401, 403, 404, 430, 431, 442, 443, 446, 448, 451, 452, 453, 454, 459, 460, 463, 464, 465, 467, 473, 477, 478, 482, 498, 510, 518, 523], "extragalact": [225, 447, 489], "extrapol": [101, 146, 147, 148, 172, 192, 193, 195, 201, 204, 205, 225, 274, 316, 317, 428, 433, 435, 436, 480, 482, 489, 490, 526], "extras_requir": 394, "extrem": [377, 404, 482, 533], "f": [17, 18, 19, 20, 21, 22, 24, 25, 26, 27, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 87, 91, 132, 145, 199, 210, 217, 218, 221, 225, 227, 228, 229, 233, 239, 240, 242, 246, 248, 250, 251, 252, 257, 262, 264, 265, 266, 267, 270, 274, 303, 304, 331, 377, 380, 394, 399, 400, 405, 408, 409, 411, 430, 439, 446, 448, 451, 452, 454, 460, 461, 462, 463, 464, 469, 470, 471, 473, 475, 476, 479, 481, 483, 485, 486, 487, 489, 490, 491, 496, 498, 499, 500, 508, 523, 540, 550, 561, 562, 563, 564, 565, 566, 567, 574, 575, 576], "f0": [272, 568], "f06": 48, "f06b": [49, 504], "f06p": 49, "f1": [272, 568], "f2": [272, 568], "f4": [147, 152, 453, 477, 480, 482, 489, 490], "f4n1ohuf": 473, "f6eldwoj": 447, "f8": [480, 490], "f_": [291, 293, 303, 510], "f_0": [250, 553], "f_dead": [83, 88], "f_i": 291, "f_max": 474, "f_max_err": 474, "f_mean": 474, "f_mean_err": 474, "f_min": 474, "f_min_err": 474, "f_pp": 292, "f_var": 292, "fabio": [390, 395, 418, 420, 421, 422, 423, 424, 425, 427, 428, 430, 431, 435, 437, 439, 441, 442, 443], "face": [382, 385], "facecolor": [374, 447, 451, 453, 461, 462, 465, 471, 475, 531, 532, 533], "facil": 402, "fact": [19, 20, 97, 213, 217, 220, 221, 224, 225, 227, 228, 229, 230, 232, 233, 234, 235, 236, 237, 238, 239, 240, 242, 249, 250, 251, 252, 253, 257, 258, 259, 260, 262, 265, 266, 267, 272, 273, 403, 448, 527], "facto": 403, "factor": [19, 20, 23, 102, 103, 105, 108, 109, 110, 117, 121, 122, 150, 151, 153, 157, 159, 160, 161, 162, 163, 165, 172, 179, 185, 189, 190, 191, 192, 193, 195, 196, 197, 200, 201, 203, 204, 205, 208, 213, 214, 215, 216, 217, 220, 221, 224, 225, 227, 228, 229, 230, 232, 233, 234, 235, 236, 237, 238, 239, 240, 242, 247, 249, 250, 251, 252, 253, 257, 258, 259, 260, 261, 262, 263, 265, 266, 267, 269, 272, 273, 275, 286, 377, 390, 392, 424, 446, 454, 455, 456, 459, 461, 465, 467, 470, 477, 478, 481, 485, 489, 510, 527, 540], "factor1": [19, 20, 213, 215, 217, 220, 221, 224, 225, 227, 228, 229, 230, 232, 233, 234, 235, 236, 237, 238, 239, 240, 242, 249, 250, 251, 252, 253, 257, 258, 259, 260, 262, 265, 266, 267, 272, 273], "factor_max": [19, 20, 213, 215, 217, 220, 221, 224, 225, 227, 228, 229, 230, 232, 233, 234, 235, 236, 237, 238, 239, 240, 242, 249, 250, 251, 252, 253, 257, 258, 259, 260, 262, 265, 266, 267, 272, 273], "factor_min": [19, 20, 213, 215, 217, 220, 221, 224, 225, 227, 228, 229, 230, 232, 233, 234, 235, 236, 237, 238, 239, 240, 242, 249, 250, 251, 252, 253, 257, 258, 259, 260, 262, 265, 266, 267, 272, 273], "factori": [192, 193, 204, 205, 391, 396, 400, 525, 527], "factoris": [261, 400, 485, 571], "fail": [16, 84, 90, 104, 123, 210, 378, 380, 391, 406, 407, 431, 460, 490], "failur": [439, 442], "faint": 575, "fair": [377, 403], "fair4r": [377, 403], "fake": [102, 105, 109, 110, 389, 390, 420, 453, 454, 467, 470, 487], "fall": [77, 136, 175, 202, 223, 245, 377, 384, 386, 387, 394, 437, 438, 474], "fallback": 377, "fals": [16, 19, 20, 23, 26, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 67, 80, 82, 83, 84, 86, 87, 88, 90, 91, 96, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 113, 114, 116, 121, 122, 123, 124, 125, 129, 146, 147, 148, 149, 150, 151, 152, 153, 154, 156, 157, 159, 160, 161, 162, 163, 164, 165, 172, 179, 182, 183, 185, 186, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 210, 211, 213, 214, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 242, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 269, 270, 271, 272, 273, 274, 275, 286, 304, 317, 334, 340, 343, 345, 346, 374, 377, 391, 393, 400, 405, 436, 437, 443, 446, 447, 448, 451, 452, 453, 454, 456, 457, 459, 460, 461, 462, 463, 465, 467, 468, 469, 470, 473, 475, 476, 477, 479, 480, 481, 482, 483, 484, 485, 487, 490, 498, 499, 500, 511, 514, 521, 523, 524, 538, 550, 559], "falsifi": 487, "famili": 403, "familiar": [394, 395, 482, 483, 500], "fanci": [377, 471], "far": [385, 390, 392, 394, 398, 401, 404, 413, 428, 463, 502], "fashion": [392, 397], "fast": [377, 391, 395, 479], "faster": [87, 91, 133, 142, 192, 193, 195, 201, 204, 205, 355, 443, 455], "faucher": [31, 33, 37, 39, 45], "faucherkaspi2006": [28, 29, 31, 35, 36, 39, 40, 48], "faucherkaspi2006velocitybimod": 49, "faucherkaspi2006velocitymaxwellian": 49, "faucherspir": 504, "favour": [382, 390, 405, 487], "favourit": 461, "fc": [485, 527], "fcluster": [302, 486], "fcluster_kwarg": [302, 486], "fcn": 479, "fdx": 377, "fe": 276, "feasibl": [391, 396, 454, 467, 477], "featur": [6, 13, 87, 91, 96, 117, 140, 302, 303, 367, 368, 377, 380, 384, 386, 387, 388, 389, 391, 393, 394, 399, 400, 401, 403, 404, 405, 410, 415, 418, 419, 420, 421, 422, 424, 425, 428, 432, 435, 436, 437, 438, 474, 482, 483, 485, 486, 512, 550], "feature_irf": 486, "features_irf": [96, 302, 303, 486], "feb": [383, 384, 394, 398, 413, 415], "februari": 415, "fed": 453, "feedback": [380, 382, 386, 391, 393, 394, 397, 398, 400, 406, 436, 480, 514], "feedstock": [406, 407], "feel": [387, 574], "feijen": [441, 442, 443], "feldman": [419, 425, 433, 435, 573], "feldman1998": [573, 576], "fellowship": 403, "felt": 377, "fermi": [55, 58, 60, 61, 62, 64, 65, 69, 71, 74, 75, 77, 78, 83, 86, 125, 126, 128, 132, 192, 193, 195, 201, 202, 204, 205, 225, 276, 278, 283, 384, 385, 386, 387, 389, 390, 393, 394, 397, 407, 409, 414, 416, 417, 420, 422, 425, 429, 432, 433, 434, 435, 436, 437, 445, 447, 449, 455, 463, 465, 476, 482, 483, 484, 485, 493, 494, 500, 502, 511, 514, 519, 538, 548, 553, 571, 578], "fermi_3fhl": [83, 192, 193, 195, 201, 204, 205, 484, 490, 500], "fermi_3fhl_events_select": [83, 490], "fermi_3fhl_exposure_cube_hpx": 490, "fermi_3fhl_psf_gc": 490, "fermi_bkg_model": 484, "fermi_ct": 128, "fermi_dataset": [283, 484, 490], "fermi_lat": [397, 437, 445, 490, 493], "fermi_model": 490, "fermi_prof": 126, "fermi_ts_imag": 378, "fermilat": 447, "fermipi": [384, 386, 389, 393, 397, 401, 434, 436, 490, 502], "fermitool": 393, "fetch": [15, 377, 385, 416, 429, 498, 574], "few": [82, 83, 87, 88, 91, 376, 377, 378, 380, 382, 383, 384, 385, 387, 389, 391, 395, 397, 402, 406, 407, 413, 427, 438, 440, 443, 448, 452, 457, 459, 461, 476, 478, 479, 482, 489, 498, 499, 523, 527, 579], "fewer": [391, 397], "ff": 403, "fft": 205, "fftconvolv": 205, "fgl": [202, 483], "fgst": [191, 192, 193, 195, 196, 197, 203, 204, 205, 482], "fhit": 491, "fidalgo": [387, 392, 417, 437, 438], "fiduci": 482, "field": [16, 42, 50, 51, 54, 83, 84, 87, 90, 91, 104, 123, 146, 147, 148, 149, 152, 153, 154, 155, 156, 159, 161, 163, 164, 169, 231, 246, 306, 310, 364, 377, 391, 403, 404, 413, 418, 423, 430, 437, 451, 453, 457, 459, 461, 463, 480, 481, 483, 489, 490, 514, 516, 517, 518, 519, 520, 521, 523, 550, 573], "fieldinfo": [16, 84, 90, 104, 123], "fig": [205, 365, 446, 448, 451, 452, 453, 454, 455, 457, 459, 460, 461, 462, 465, 468, 470, 471, 475, 479, 483, 487, 523, 524, 533, 537, 540, 572], "figsiz": [88, 102, 105, 109, 110, 127, 146, 147, 149, 150, 151, 152, 153, 154, 159, 160, 161, 162, 163, 165, 192, 193, 195, 201, 204, 205, 365, 448, 451, 454, 455, 457, 459, 460, 461, 462, 468, 469, 470, 471, 473, 474, 475, 479, 480, 481, 482, 483, 484, 485, 486, 487, 489, 490, 492, 523, 533, 537, 540], "figur": [88, 102, 105, 109, 110, 127, 146, 147, 149, 150, 151, 152, 153, 159, 160, 161, 162, 163, 165, 192, 193, 195, 201, 204, 205, 355, 364, 365, 371, 377, 378, 382, 397, 407, 447, 451, 455, 459, 461, 462, 463, 465, 468, 469, 474, 475, 477, 479, 481, 482, 484, 485, 489, 490, 491, 492, 574], "file": [11, 15, 16, 26, 65, 66, 67, 82, 83, 85, 86, 87, 88, 91, 93, 94, 100, 101, 102, 105, 106, 107, 109, 110, 122, 124, 146, 147, 148, 149, 150, 151, 152, 153, 154, 156, 157, 159, 160, 161, 162, 163, 164, 165, 166, 173, 178, 192, 193, 195, 199, 201, 204, 205, 211, 223, 225, 237, 245, 269, 270, 271, 272, 273, 274, 312, 340, 343, 346, 376, 377, 380, 382, 383, 384, 385, 386, 387, 388, 389, 390, 393, 394, 396, 397, 398, 400, 401, 404, 405, 406, 407, 408, 409, 411, 413, 421, 422, 428, 430, 432, 434, 435, 436, 437, 439, 440, 442, 443, 445, 446, 450, 453, 454, 458, 459, 461, 463, 464, 466, 467, 470, 472, 476, 477, 481, 482, 483, 484, 485, 488, 491, 492, 493, 494, 495, 497, 500, 501, 502, 513, 514, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 578], "file_dir": 312, "file_model": 463, "file_nam": 312, "filemod": [16, 452, 456, 457, 459, 498, 574], "filenam": [11, 16, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 82, 83, 85, 86, 87, 91, 94, 100, 101, 102, 105, 106, 107, 109, 110, 122, 124, 126, 128, 130, 146, 147, 148, 149, 150, 151, 152, 153, 154, 156, 157, 159, 161, 162, 163, 164, 165, 166, 192, 193, 195, 199, 201, 204, 205, 223, 225, 237, 245, 269, 270, 271, 272, 273, 274, 278, 280, 282, 283, 312, 343, 346, 356, 377, 378, 382, 425, 451, 452, 456, 457, 459, 460, 464, 465, 476, 477, 478, 482, 483, 484, 485, 489, 490, 498, 499, 500, 511, 514, 516, 517, 518, 520, 538, 540, 568, 569, 574], "filename_1": 511, "filename_2": 511, "filename_arf": 107, "filename_bkg": 107, "filename_model": [100, 122, 283, 484, 490], "filename_rmf": 107, "filepath": 16, "fill": [16, 84, 85, 87, 90, 91, 102, 104, 105, 108, 109, 110, 123, 149, 160, 191, 192, 193, 195, 201, 203, 204, 205, 274, 377, 385, 386, 390, 393, 397, 403, 406, 407, 422, 429, 436, 439, 448, 463, 464, 476, 480, 481, 483, 490, 499, 526], "fill_between": [19, 20, 26, 127, 217, 218, 221, 225, 227, 228, 229, 233, 239, 240, 242, 246, 248, 250, 251, 252, 257, 262, 264, 265, 266, 267, 270, 274, 471], "fill_by_coord": [160, 192, 193, 195, 201, 204, 205, 482, 490, 526], "fill_by_idx": [192, 193, 195, 201, 204, 205, 526], "fill_by_pix": [192, 193, 195, 201, 204, 205, 526], "fill_ev": [192, 193, 195, 201, 204, 205, 431, 442, 453, 482, 490, 496], "fill_nan": 193, "fill_valu": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 87, 91, 146, 147, 148, 149, 152, 153, 154, 156, 159, 161, 163, 164, 192, 193, 195, 201, 204, 205, 269, 270, 273, 377, 480, 482], "filled_t": [87, 91], "filter": [88, 89, 383, 387, 389, 391, 392, 437, 438, 441, 473, 483, 486, 494, 499, 500], "filter_ev": 89, "filter_gti": 89, "filter_success_nan": [122, 124], "filtered_ev": 89, "filtered_gti": 89, "filterwarn": [470, 471], "final": [129, 286, 377, 378, 384, 385, 387, 390, 391, 393, 394, 396, 398, 400, 402, 403, 407, 422, 423, 424, 446, 447, 448, 449, 451, 459, 461, 463, 464, 468, 469, 471, 475, 477, 479, 481, 483, 486, 490, 491, 494, 498, 499, 500, 510, 511, 512], "finalis": 381, "find": [19, 20, 26, 132, 140, 141, 149, 175, 176, 180, 207, 217, 218, 221, 225, 227, 228, 229, 233, 239, 240, 242, 246, 248, 250, 251, 252, 257, 262, 264, 265, 266, 267, 270, 274, 296, 377, 382, 388, 390, 396, 406, 407, 408, 428, 430, 436, 437, 442, 443, 449, 451, 455, 476, 477, 482, 485, 489, 492, 500, 574, 576, 577], "find_peak": [141, 437, 455, 461], "find_peaks_in_flux_map": 455, "find_root": 428, "finder": [140, 175, 176, 428, 437, 455], "fine": [284, 317, 390, 457, 477, 490, 527, 574], "finer": [463, 477, 527], "fingertip": 376, "finish": [380, 384, 386, 406, 434, 436], "finit": [100, 102, 105, 109, 110, 150, 151, 157, 162, 178, 193, 201, 205, 271, 395], "fink": [225, 226, 447, 540], "fir": 550, "firefox": [87, 91], "first": [57, 77, 87, 91, 92, 94, 100, 102, 105, 109, 110, 122, 124, 126, 133, 135, 140, 142, 149, 166, 175, 192, 193, 194, 197, 201, 202, 223, 245, 277, 295, 337, 366, 377, 378, 380, 382, 384, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 397, 398, 401, 402, 403, 407, 408, 413, 417, 418, 419, 420, 421, 422, 423, 424, 425, 428, 430, 435, 437, 438, 439, 440, 442, 446, 448, 449, 451, 455, 456, 457, 459, 460, 461, 462, 463, 464, 465, 468, 469, 470, 471, 473, 474, 476, 477, 478, 479, 481, 482, 483, 484, 485, 486, 487, 489, 490, 491, 494, 498, 499, 500, 511, 523, 526, 574], "firstli": [462, 463, 478], "firstnam": [87, 91], "fit": [6, 15, 16, 19, 20, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 57, 58, 60, 61, 62, 64, 65, 66, 67, 71, 74, 75, 77, 78, 82, 83, 84, 85, 86, 87, 88, 90, 91, 94, 99, 100, 101, 102, 104, 105, 106, 107, 109, 110, 114, 116, 117, 119, 121, 122, 123, 124, 125, 126, 128, 129, 130, 132, 140, 141, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 156, 157, 159, 161, 162, 163, 164, 165, 169, 172, 190, 191, 192, 193, 194, 195, 196, 197, 199, 201, 202, 203, 204, 205, 209, 211, 212, 213, 215, 217, 220, 221, 223, 224, 225, 226, 227, 228, 229, 230, 232, 233, 234, 235, 236, 237, 238, 239, 240, 242, 245, 249, 250, 251, 252, 253, 257, 258, 259, 260, 262, 265, 266, 267, 271, 272, 273, 274, 283, 284, 285, 287, 288, 289, 294, 297, 301, 312, 313, 314, 359, 360, 363, 365, 370, 372, 376, 377, 378, 383, 387, 388, 389, 390, 393, 395, 396, 397, 398, 399, 400, 401, 404, 405, 409, 417, 418, 419, 420, 421, 422, 423, 424, 425, 428, 430, 433, 435, 436, 437, 438, 440, 442, 443, 445, 446, 450, 454, 455, 457, 458, 462, 463, 464, 465, 466, 468, 469, 471, 472, 473, 474, 476, 477, 478, 480, 481, 482, 484, 485, 486, 488, 489, 491, 492, 494, 496, 500, 510, 511, 512, 513, 514, 516, 517, 518, 520, 521, 522, 523, 531, 538, 540, 550, 568, 569, 572, 573, 578], "fit2": 484, "fit_covari": [452, 498], "fit_deriv": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40], "fit_joint": [448, 451, 459, 460], "fit_prior": 487, "fit_rang": [16, 452, 456, 457, 459, 498], "fit_result": [210, 283, 452, 473, 478, 498], "fit_results_nul": 283, "fit_scipi": 479, "fit_sherpa": 479, "fit_stat_scan": 392, "fit_statist": [377, 457], "fit_statistics_cython": 407, "fitconfig": 16, "fitmc": 395, "fitresult": [210, 430, 442, 479, 499], "fitsfixedwarn": [455, 538], "fitsonli": 489, "fitspectrum": 432, "fitstepresult": [209, 212], "fittabl": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 48, 49], "fittable1dmodel": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40], "fitter": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 435, 436, 449], "five": 500, "fix": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 77, 85, 88, 94, 95, 106, 107, 132, 144, 162, 164, 179, 210, 247, 248, 253, 273, 380, 382, 383, 384, 388, 389, 392, 394, 399, 401, 402, 403, 406, 407, 409, 415, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 431, 432, 433, 434, 435, 436, 437, 438, 440, 441, 446, 453, 454, 456, 457, 459, 460, 463, 467, 469, 470, 473, 479, 480, 481, 484, 485, 486, 498, 524, 526, 534, 551], "fixed_altaz": 85, "fixed_bin": 144, "fixed_icr": [85, 162, 446, 454, 463, 464, 467, 470], "fixed_offset": [96, 178, 428], "fixed_r_in": 167, "fixed_width": 167, "fixedpointinginfo": [88, 162, 185, 442, 443, 446, 454, 463, 464, 467, 470], "fk5": [527, 538], "flag": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 91, 103, 108, 122, 124, 125, 126, 129, 130, 190, 191, 192, 193, 195, 197, 198, 200, 201, 203, 204, 205, 209, 210, 211, 212, 448, 459, 463, 476, 485], "flake8": 380, "flare": [136, 291, 409, 422, 423, 445, 468, 470, 472, 473, 474, 494, 512, 523], "flask": 436, "flat": [124, 136, 154, 164, 190, 191, 196, 198, 200, 203, 206, 207, 247, 388, 401], "flatten": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 190, 191, 198, 200, 203, 474], "fledg": 405, "flexibl": [82, 328, 377, 382, 386, 387, 388, 391, 393, 397, 398, 404, 482, 514, 571], "float": [19, 20, 26, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 42, 50, 51, 83, 87, 88, 90, 91, 96, 102, 105, 109, 110, 113, 117, 121, 123, 124, 127, 130, 131, 132, 140, 141, 146, 147, 148, 149, 150, 152, 153, 154, 156, 159, 161, 162, 163, 164, 165, 167, 169, 178, 191, 192, 193, 195, 197, 200, 201, 203, 204, 205, 206, 207, 210, 212, 213, 215, 217, 218, 220, 221, 223, 224, 225, 227, 228, 229, 230, 232, 233, 234, 235, 236, 237, 238, 239, 240, 242, 245, 246, 248, 249, 250, 251, 252, 253, 257, 258, 259, 260, 262, 264, 265, 266, 267, 270, 271, 272, 273, 274, 275, 283, 284, 285, 286, 287, 290, 294, 296, 304, 315, 322, 331, 333, 366, 367, 368, 481, 487, 489, 490, 574, 578], "float32": [190, 191, 192, 193, 195, 200, 201, 203, 204, 205, 456, 461, 482], "float64": [87, 91, 111, 115, 149, 152, 377, 405, 413, 478, 480, 482, 512, 574], "float64float64float64": 461, "float64float64float64float64float64float64float64float32bool": 449, "float64float64float64float64float64float64float64float64": 461, "float_a": [87, 91], "flow": [404, 572, 573], "fluctuat": [285, 287, 401, 454, 467, 487, 576], "flux": [15, 19, 20, 26, 41, 46, 67, 71, 73, 74, 75, 77, 78, 79, 80, 83, 88, 100, 101, 102, 105, 109, 110, 117, 121, 122, 123, 124, 125, 126, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 141, 142, 143, 144, 217, 218, 219, 221, 222, 225, 227, 228, 229, 230, 233, 234, 236, 237, 238, 239, 240, 242, 246, 248, 249, 250, 251, 252, 253, 257, 260, 261, 262, 264, 265, 266, 267, 270, 272, 274, 275, 276, 277, 281, 290, 291, 292, 293, 295, 300, 381, 389, 390, 392, 393, 395, 397, 398, 400, 409, 416, 419, 421, 422, 424, 428, 430, 434, 435, 436, 438, 443, 445, 450, 453, 455, 459, 461, 463, 464, 466, 468, 469, 470, 471, 473, 474, 477, 482, 485, 490, 494, 508, 510, 514, 519, 528, 535, 550, 571, 572, 573, 576], "flux1": 295, "flux2": 295, "flux_err": [19, 20, 26, 122, 124, 132, 141, 217, 218, 221, 225, 227, 228, 229, 233, 239, 240, 242, 246, 248, 250, 251, 252, 257, 262, 264, 265, 266, 267, 270, 274, 291, 292, 293, 300, 455, 468, 474], "flux_err1": 295, "flux_err2": 295, "flux_errn": [122, 124, 476], "flux_errp": [122, 124, 476], "flux_int_cu": 277, "flux_map": [122, 124, 133, 142, 401, 475], "flux_metadata_fits_kei": 123, "flux_per_omega": 485, "flux_point": [16, 66, 67, 71, 73, 74, 75, 77, 78, 79, 80, 98, 101, 122, 124, 125, 389, 446, 449, 451, 452, 456, 457, 459, 461, 471, 476, 477, 498, 499, 500], "flux_point_dataset": 389, "flux_points_at_tim": 401, "flux_points_ctb_37b": 124, "flux_points_dataset": [451, 461, 471], "flux_points_dataset_no_ul": 451, "flux_points_fermi": 460, "flux_points_hawc": 460, "flux_points_hess": 460, "flux_points_intrins": 447, "flux_points_meta": [71, 74, 75, 78], "flux_points_no_ul": 451, "flux_points_ob": 447, "flux_points_recomput": 124, "flux_points_t": [71, 73, 74, 75, 77, 78, 79, 80], "flux_pr": 101, "flux_profil": [445, 465, 466], "flux_profile_estim": 465, "flux_profile_fermi": 465, "flux_quant": [135, 136, 137, 138, 474], "flux_ref": [122, 124, 401], "flux_sensit": [122, 124], "flux_ul": [122, 124, 132, 476], "fluxestim": [122, 124, 125, 398, 424, 426, 427, 428, 430, 443], "fluxmap": [121, 123, 124, 132, 133, 134, 141, 142, 428, 443, 455, 512], "fluxmapestim": 401, "fluxmapsmetadata": 404, "fluxpoint": [71, 73, 74, 75, 77, 78, 79, 80, 101, 122, 123, 125, 126, 129, 135, 136, 137, 138, 144, 389, 392, 401, 404, 428, 435, 436, 442, 443, 446, 449, 460, 465, 468, 469, 474, 476, 477, 500, 509, 510, 512, 514], "fluxpointdataset": [422, 451], "fluxpointestim": [392, 419, 425, 438], "fluxpointfit": 389, "fluxpointfitt": 437, "fluxpointprofil": 438, "fluxpointsconfig": 16, "fluxpointsdataset": [98, 99, 102, 105, 398, 401, 404, 418, 422, 443, 449, 451, 460, 461, 470, 471, 510], "fluxpointsdatasetmetadata": 404, "fluxpointsestim": [118, 126, 129, 324, 398, 399, 401, 409, 419, 424, 425, 428, 442, 443, 447, 451, 460, 461, 471, 478, 498, 499, 514], "fluxpointsetim": 401, "fluxpointsmetadata": 404, "fluxprofileestim": [118, 428, 441, 443, 465], "fly": 387, "fmt": [473, 479, 487], "focu": [387, 397, 422, 435, 453, 574], "focus": [387, 403], "fold": [108, 401, 449, 460, 469, 478, 510, 512], "folder": [11, 82, 94, 101, 106, 110, 124, 341, 377, 378, 382, 385, 406, 408, 413, 418, 428, 431, 452, 459, 463, 489, 498, 499, 572, 574], "follow": [15, 19, 20, 43, 44, 80, 82, 83, 84, 90, 91, 102, 104, 106, 107, 109, 110, 122, 123, 124, 127, 132, 134, 140, 143, 191, 192, 193, 195, 199, 204, 205, 210, 261, 277, 283, 367, 368, 370, 377, 378, 380, 381, 382, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 396, 397, 399, 400, 401, 402, 403, 404, 405, 406, 408, 409, 410, 411, 412, 413, 420, 421, 422, 424, 425, 428, 430, 431, 437, 438, 442, 443, 446, 447, 448, 449, 451, 452, 454, 455, 456, 459, 460, 463, 464, 468, 469, 470, 471, 473, 475, 476, 478, 479, 481, 482, 483, 484, 485, 489, 494, 498, 500, 502, 504, 505, 510, 512, 514, 516, 518, 519, 523, 525, 526, 527, 528, 536, 537, 541, 544, 545, 547, 548, 552, 553, 555, 556, 557, 558, 559, 572, 573, 575, 576, 577, 579], "font": [192, 193, 195, 201, 204, 205, 378, 482], "fontsiz": [374, 471, 479], "foo": [87, 91], "footprint": [192, 193, 195, 201, 203, 204, 205, 534], "footprint_rectangle_sky_region": 203, "forbid": [16, 84, 90, 104, 123], "forbidden": 484, "forc": [16, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 84, 90, 104, 123, 150, 151, 157, 160, 162, 165, 203, 205, 304, 382, 392, 418], "forecom": [377, 402], "foremost": 574, "forens": 393, "foreseen": [387, 402], "forev": 418, "forg": [376, 394, 406, 407, 409, 410, 413, 436, 489], "forget": [452, 462, 498], "forgot": 377, "forgotten": 377, "fork": 380, "form": [16, 84, 87, 90, 91, 102, 104, 123, 162, 165, 200, 316, 377, 383, 387, 392, 400, 402, 404, 414, 436, 483, 487, 511, 519, 532, 542, 572], "formal": [382, 405, 455], "format": [16, 83, 84, 85, 86, 87, 88, 90, 91, 94, 102, 104, 105, 107, 109, 110, 122, 123, 124, 125, 144, 146, 147, 148, 149, 150, 151, 152, 153, 154, 156, 157, 159, 161, 162, 163, 164, 165, 185, 190, 191, 192, 193, 194, 195, 196, 197, 200, 201, 202, 203, 204, 205, 207, 223, 231, 237, 245, 261, 271, 274, 312, 334, 358, 359, 366, 376, 385, 386, 387, 388, 389, 391, 393, 401, 403, 404, 407, 416, 428, 430, 433, 437, 439, 440, 442, 443, 447, 449, 451, 452, 453, 455, 456, 457, 459, 461, 463, 464, 465, 468, 470, 474, 476, 478, 480, 482, 483, 485, 489, 490, 491, 492, 498, 500, 502, 508, 510, 511, 512, 513, 516, 517, 518, 519, 520, 527, 568, 569, 573, 574, 575], "format_plot_xaxi": [194, 197, 202, 480], "format_plot_yaxi": [197, 480], "formatt": [366, 482], "formatwarn": 377, "former": [403, 419, 424, 448, 484, 572, 575], "formula": [28, 29, 30, 31, 35, 36, 37, 39, 40, 50, 52, 53, 161, 251, 252, 301, 446, 575], "forthcom": 478, "forum": 406, "forward": [19, 20, 26, 83, 87, 91, 102, 105, 109, 110, 126, 146, 147, 148, 149, 152, 153, 154, 156, 159, 161, 163, 164, 174, 196, 200, 201, 202, 210, 217, 218, 221, 222, 225, 227, 228, 229, 230, 231, 233, 234, 236, 237, 238, 239, 240, 242, 246, 248, 250, 251, 252, 253, 257, 260, 261, 262, 264, 265, 266, 267, 270, 271, 272, 273, 274, 275, 278, 302, 366, 371, 378, 384, 387, 401, 449, 460, 469, 478, 510, 512, 527], "forwardref": [16, 84, 90, 104, 123], "found": [19, 20, 26, 82, 86, 87, 91, 136, 175, 180, 199, 217, 218, 221, 225, 227, 228, 229, 233, 239, 240, 242, 246, 248, 250, 251, 252, 257, 262, 264, 265, 266, 267, 270, 274, 291, 380, 381, 385, 392, 402, 403, 422, 425, 426, 427, 431, 457, 463, 474, 485, 487, 492, 511, 512, 523, 524], "four": [380, 388, 401, 468, 489, 490, 518, 520, 526, 573], "fov": [121, 146, 147, 169, 170, 184, 185, 187, 189, 231, 377, 383, 391, 433, 436, 437, 456, 473, 480, 483, 484, 489, 499, 522, 573], "fov_": 377, "fov_align": [146, 147, 148, 149, 152, 153, 154, 156, 159, 161, 163, 164, 480], "fov_background": [456, 498], "fov_bkg_mak": [481, 521], "fov_lat": [147, 480, 489, 519], "fov_lat_axi": 480, "fov_lon": [147, 480, 489, 519], "fov_lon_axi": 480, "fov_theta": 377, "fovalign": [146, 147, 148, 149, 152, 153, 154, 156, 159, 161, 163, 164, 480], "fovbackground": [405, 424], "fovbackgroundmak": [170, 423, 428, 481, 498, 499], "fovbackgroundmodel": [15, 102, 108, 109, 112, 169, 241, 405, 425, 442, 443, 459, 460, 463, 464, 467, 477, 484, 498, 499, 521, 534], "fp": [122, 124, 144, 401, 498, 512, 514], "fp_dataset": [451, 477], "fp_dnde": 401, "fp_energy_flux": 401, "fp_estim": 478, "fp_result": 478, "fpe": [324, 399, 401, 447, 451, 461, 471, 499], "fpe_no_ul": 451, "fpp": 292, "fpp_err": [292, 474], "fpp_tabl": 474, "fr": [403, 489], "frac": [17, 19, 20, 21, 22, 23, 24, 25, 27, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 50, 51, 52, 53, 54, 105, 110, 149, 152, 208, 229, 233, 250, 252, 265, 291, 293, 303, 400, 510, 518, 519, 531, 532, 533, 536, 537, 541, 544, 545, 547, 548, 552, 553, 555, 556, 557, 558, 562, 563, 564, 566, 576, 577], "fraction": [19, 20, 26, 50, 52, 53, 83, 88, 89, 90, 121, 131, 138, 153, 159, 161, 162, 163, 165, 200, 206, 207, 217, 218, 221, 224, 225, 227, 228, 229, 233, 239, 240, 242, 246, 248, 250, 251, 252, 257, 262, 264, 265, 266, 267, 270, 274, 292, 293, 387, 392, 435, 443, 446, 454, 463, 467, 477, 480, 483, 489, 490, 491], "frame": [16, 83, 85, 91, 94, 95, 96, 102, 105, 109, 110, 111, 115, 126, 140, 162, 172, 175, 185, 191, 192, 193, 195, 198, 200, 201, 203, 204, 205, 219, 220, 224, 232, 235, 247, 249, 258, 259, 261, 263, 269, 273, 302, 303, 338, 353, 377, 378, 386, 388, 391, 401, 418, 419, 421, 422, 423, 448, 451, 452, 453, 454, 456, 457, 459, 460, 461, 462, 463, 464, 465, 467, 468, 469, 470, 471, 473, 475, 477, 480, 481, 482, 483, 484, 485, 486, 490, 491, 492, 498, 499, 500, 518, 523, 525, 526, 527, 531, 532, 533, 534, 535, 536, 537, 538], "framework": [388, 390, 391, 393, 395, 396, 400, 418, 419, 425, 437, 471, 485, 504, 514], "franceschini": [225, 226, 274, 442, 447, 540], "franceschini17": [226, 447, 540], "franceschni": 540, "frd_ab": 226, "free": [50, 52, 53, 77, 102, 105, 109, 110, 125, 129, 130, 172, 210, 214, 216, 247, 248, 283, 382, 392, 418, 447, 452, 454, 456, 457, 459, 461, 462, 467, 468, 470, 473, 477, 479, 481, 484, 485, 487, 490, 494, 498, 499, 502, 512, 521, 534, 550, 551, 574, 576, 577], "free_paramet": [214, 216, 283, 473, 479, 484], "freedom": [119, 122, 124, 134, 143, 403, 443, 462, 512, 576, 577], "freez": [19, 20, 26, 87, 91, 214, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 242, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 269, 270, 271, 272, 273, 274, 275, 283, 392, 403, 418, 428, 443, 456, 467, 473, 479, 485, 550], "freeze_al": [214, 216], "frenk": 502, "frequenc": [272, 286, 506], "frequent": [197, 377, 386, 395, 403, 469, 470, 474, 483, 514, 515, 574], "frequentist": 395, "fridai": 386, "friendli": [377, 382, 404, 439, 452, 498, 514], "from": [13, 15, 16, 19, 20, 26, 27, 28, 29, 30, 31, 32, 33, 35, 36, 37, 38, 39, 40, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 94, 96, 100, 101, 102, 103, 104, 105, 106, 108, 109, 110, 111, 112, 114, 115, 116, 117, 121, 122, 123, 124, 125, 126, 128, 129, 130, 131, 132, 133, 134, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 156, 157, 159, 160, 161, 162, 163, 164, 165, 166, 167, 172, 173, 174, 175, 178, 179, 181, 185, 187, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 269, 270, 271, 272, 273, 274, 275, 277, 283, 284, 285, 286, 287, 290, 293, 302, 303, 304, 314, 322, 324, 326, 327, 331, 334, 335, 339, 344, 356, 357, 359, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 378, 380, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 409, 411, 413, 414, 416, 417, 418, 420, 421, 422, 423, 424, 425, 428, 429, 430, 432, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 506, 507, 508, 509, 510, 511, 512, 514, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 578], "from_align": [203, 428], "from_attribut": [16, 84, 90, 104, 123], "from_bound": [152, 154, 162, 191, 197, 203, 401, 460, 463, 464, 477, 480, 481, 482, 492, 526, 527], "from_covariance_matrix": 405, "from_default": 196, "from_diagonal_respons": [111, 115, 149, 150, 151, 455, 490], "from_dict": [19, 20, 26, 101, 102, 105, 109, 110, 214, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 269, 270, 271, 272, 273, 274, 275, 421, 428, 487], "from_dir": [82, 89, 96, 172, 302, 303, 413, 448, 451, 453, 461, 469, 471, 473, 481, 486, 489, 492, 496, 499, 511, 514, 521, 523, 524], "from_edg": [151, 192, 193, 195, 197, 201, 204, 205, 454, 467, 470, 480, 490, 491], "from_edisp_kernel": 150, "from_energy_bound": [102, 105, 109, 110, 111, 115, 149, 151, 152, 160, 162, 172, 190, 191, 196, 197, 200, 203, 205, 378, 446, 448, 451, 453, 460, 461, 463, 464, 469, 471, 473, 477, 480, 481, 485, 490, 491, 499, 518, 521, 523, 524, 527], "from_energy_edg": [149, 197, 372, 477, 480], "from_events_fil": [82, 463, 489], "from_factor_matrix": 208, "from_fil": [82, 511], "from_fits_head": 85, "from_gauss": [149, 150, 154, 160, 162, 165, 518], "from_gaussian": 425, "from_geom": [102, 105, 109, 110, 150, 151, 160, 162, 165, 192, 193, 195, 199, 201, 204, 205, 422, 441, 477, 482, 483, 527, 533], "from_gti": 202, "from_gti_bound": 202, "from_hdu": [191, 193, 205], "from_hdulist": [102, 105, 109, 110, 122, 124, 146, 147, 148, 149, 150, 151, 152, 153, 154, 156, 157, 159, 161, 162, 163, 164, 165, 190, 191, 192, 193, 195, 199, 200, 201, 203, 204, 205, 482], "from_head": [84, 90, 104, 123, 191, 203, 404], "from_irf": 164, "from_log10": [239, 240, 548], "from_map": [122, 124], "from_map_dataset": [105, 110], "from_nam": [457, 461], "from_nod": 197, "from_orm": [16, 84, 90, 104, 123], "from_panda": [87, 91], "from_paramet": [19, 20, 26, 217, 218, 219, 220, 221, 222, 224, 225, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 242, 244, 246, 247, 248, 249, 250, 251, 252, 253, 254, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 269, 270, 271, 272, 273, 274, 275], "from_parametr": [152, 516], "from_posit": [219, 220, 224, 232, 235, 247, 249, 258, 259, 263, 269, 273, 464], "from_refer": 400, "from_region": [200, 224, 442, 523], "from_region_map": 274, "from_spatial_model": 160, "from_spectrum_dataset": [110, 446, 454], "from_stack": [83, 86, 92, 122, 124, 192, 193, 194, 195, 197, 201, 204, 205, 208, 214, 216, 442, 443, 511], "from_tabl": [124, 146, 147, 148, 149, 152, 153, 154, 156, 159, 161, 163, 164, 194, 196, 197, 201, 202, 237, 439, 446], "from_table_hdu": [86, 196, 197], "from_time_bound": 202, "from_time_edg": [202, 473, 474], "from_time_interv": 86, "from_wcs_til": 193, "from_yaml": [16, 223, 245, 388, 452], "fromnumer": [453, 473], "front": [386, 406, 435], "frozen": [19, 20, 26, 101, 125, 129, 169, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 242, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 269, 270, 271, 272, 273, 274, 275, 283, 392, 400, 405, 420, 443, 447, 448, 449, 451, 452, 453, 454, 455, 456, 459, 460, 461, 462, 463, 464, 465, 467, 469, 470, 473, 476, 477, 478, 479, 483, 484, 485, 487, 490, 498, 499, 500, 512, 521, 550, 559], "fr\u00f6se": 443, "ftol": 479, "ftool": 392, "fulfil": [404, 482], "full": [82, 125, 132, 146, 147, 148, 149, 152, 153, 154, 156, 159, 161, 163, 164, 193, 211, 223, 245, 312, 373, 376, 377, 382, 386, 387, 390, 392, 393, 397, 403, 405, 408, 415, 418, 428, 430, 446, 447, 448, 449, 451, 452, 453, 454, 455, 456, 457, 459, 460, 461, 462, 463, 464, 465, 467, 468, 469, 470, 471, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 489, 490, 491, 492, 496, 498, 499, 500, 514, 525, 530, 531, 532, 533, 534, 535, 536, 537, 538, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 561, 562, 563, 564, 565, 566, 567, 568, 569, 572], "full_enclosur": [185, 480], "full_output": [19, 20, 26, 211, 217, 218, 219, 220, 221, 222, 223, 224, 225, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 242, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 269, 270, 271, 272, 273, 274, 275], "fulli": [129, 190, 191, 200, 203, 272, 386, 387, 394, 398, 403, 407, 410, 420, 422, 430, 448, 474, 485, 489, 491, 492], "fun": [377, 380], "func": [17, 18, 21, 22, 24, 25, 27, 90, 192, 193, 195, 201, 204, 205, 279, 325, 329, 330, 370, 457, 459], "function": [6, 15, 19, 20, 26, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 46, 82, 83, 85, 87, 88, 90, 91, 100, 101, 102, 103, 105, 108, 109, 110, 117, 122, 129, 132, 133, 135, 136, 137, 138, 141, 142, 152, 153, 154, 156, 157, 159, 161, 162, 163, 165, 192, 193, 195, 197, 201, 204, 205, 210, 211, 212, 217, 218, 221, 225, 227, 228, 229, 233, 239, 240, 242, 246, 248, 250, 251, 252, 257, 260, 261, 262, 264, 265, 266, 267, 270, 274, 279, 285, 286, 287, 295, 296, 300, 317, 325, 326, 328, 329, 333, 334, 344, 362, 365, 366, 370, 372, 374, 376, 380, 383, 387, 388, 389, 390, 391, 392, 395, 396, 397, 398, 400, 401, 402, 404, 405, 409, 411, 413, 414, 416, 418, 419, 420, 421, 422, 424, 425, 428, 429, 430, 432, 433, 434, 435, 436, 437, 438, 441, 442, 443, 446, 447, 451, 452, 453, 454, 455, 459, 461, 462, 463, 464, 465, 473, 477, 478, 479, 480, 481, 482, 483, 484, 485, 487, 491, 492, 494, 498, 499, 500, 502, 503, 504, 509, 510, 511, 513, 514, 523, 525, 527, 532, 533, 535, 562, 571, 572, 573, 574, 575, 577, 579], "functional_model": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40], "fundament": [390, 399, 404], "further": [11, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 82, 117, 121, 125, 126, 129, 132, 198, 328, 377, 380, 381, 383, 386, 387, 390, 391, 394, 396, 397, 398, 399, 400, 423, 424, 425, 428, 430, 457, 463, 475, 476, 477, 478, 482, 499, 500, 503, 504, 519, 574], "furthermor": 489, "futur": [103, 108, 377, 382, 387, 390, 391, 393, 394, 395, 396, 397, 398, 399, 401, 402, 403, 405, 436, 459, 463, 465, 482, 490, 503, 512, 571], "fvar": [138, 293, 392, 435], "fvar_err": [293, 474], "fvar_tabl": 474, "g": [13, 19, 20, 26, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 46, 47, 51, 52, 53, 54, 59, 67, 83, 85, 86, 87, 91, 95, 113, 140, 191, 192, 193, 195, 197, 201, 203, 204, 205, 210, 217, 218, 221, 225, 227, 228, 229, 233, 239, 240, 242, 246, 248, 250, 251, 252, 257, 262, 264, 265, 266, 267, 270, 274, 291, 304, 344, 366, 372, 376, 377, 378, 380, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 400, 401, 403, 404, 406, 407, 409, 410, 411, 428, 430, 434, 436, 437, 438, 439, 442, 448, 449, 451, 452, 454, 461, 463, 465, 475, 476, 477, 479, 482, 483, 484, 485, 489, 490, 494, 500, 502, 506, 509, 510, 511, 512, 514, 519, 524, 525, 526, 533, 571, 573, 574, 576, 578, 579], "g0": [459, 490], "g28": 67, "g320": 476, "g_1": 152, "g_2": 152, "g_3": 152, "ga": 465, "gabriel": 437, "gadf": [83, 84, 85, 86, 88, 90, 95, 102, 104, 105, 109, 110, 123, 124, 146, 147, 148, 149, 150, 151, 152, 153, 154, 156, 157, 159, 161, 162, 163, 164, 165, 190, 191, 192, 193, 194, 195, 196, 197, 200, 201, 202, 203, 204, 205, 387, 390, 401, 404, 428, 430, 439, 442, 478, 480, 482, 498, 510, 514, 527, 573], "gain": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 382, 394, 436], "gal_diffus": 393, "galact": [17, 18, 21, 22, 24, 25, 27, 29, 45, 47, 67, 68, 83, 91, 102, 105, 109, 110, 111, 115, 125, 126, 128, 162, 191, 192, 193, 195, 198, 200, 201, 203, 204, 205, 224, 232, 235, 249, 258, 259, 311, 338, 377, 378, 388, 391, 397, 416, 418, 435, 447, 448, 451, 454, 455, 456, 459, 461, 462, 463, 465, 467, 470, 475, 476, 477, 482, 483, 484, 485, 489, 500, 502, 505, 509, 524, 525, 526, 527, 531, 532, 533, 534, 535, 536, 537, 573, 579], "galactic_median": 83, "galactocentr": 41, "galaxi": [28, 30, 35, 39, 40, 41, 225, 292, 293, 416, 448], "galelli": [441, 443], "gallant": 436, "galleri": [407, 423, 425, 428, 439, 443, 445, 446, 447, 448, 449, 451, 452, 453, 454, 455, 456, 457, 459, 460, 461, 462, 463, 464, 465, 467, 468, 469, 470, 471, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 489, 490, 491, 492, 494, 496, 498, 499, 500, 515, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571], "gallery_jupyt": 528, "gallery_python": 528, "galprop": [191, 192, 193, 195, 204, 205], "galprop2": [191, 192, 193, 195, 204, 205], "gambit": 502, "gamma": [11, 17, 18, 19, 20, 21, 22, 24, 25, 26, 27, 52, 53, 57, 59, 63, 66, 67, 79, 83, 121, 125, 131, 161, 185, 192, 193, 195, 204, 205, 225, 227, 228, 229, 250, 251, 252, 274, 277, 331, 377, 383, 385, 388, 389, 390, 391, 401, 407, 409, 413, 414, 419, 433, 434, 435, 436, 437, 446, 447, 449, 451, 452, 453, 457, 460, 461, 462, 463, 465, 476, 480, 482, 483, 486, 489, 491, 492, 498, 500, 502, 504, 505, 509, 510, 511, 514, 517, 519, 521, 523, 524, 533, 540, 544, 545, 552, 553, 571, 572, 573, 574, 575, 576, 579], "gamma1": [217, 541, 555], "gamma2": [217, 541, 555], "gamma_1": [262, 265, 266, 267, 400, 556, 557, 558], "gamma_2": [262, 265, 266, 267, 400, 556, 557, 558], "gamma_min": [131, 446], "gamma_min_sensit": 121, "gammacat": [55, 66, 435, 449], "gammalib": [377, 390], "gammamc_dif": 502, "gammapi": [6, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 378, 379, 381, 382, 384, 385, 387, 388, 389, 390, 391, 392, 393, 395, 399, 400, 401, 405, 408, 409, 410, 411, 412, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 428, 429, 430, 432, 433, 434, 435, 436, 437, 438, 439, 440, 442, 443, 445, 446, 447, 448, 449, 451, 452, 453, 454, 455, 456, 457, 459, 460, 461, 462, 463, 464, 465, 467, 468, 469, 470, 471, 473, 474, 475, 476, 477, 478, 479, 481, 482, 483, 484, 485, 486, 487, 488, 493, 494, 496, 498, 499, 500, 503, 504, 506, 507, 508, 514, 515, 516, 517, 518, 520, 524, 525, 527, 528, 530, 531, 532, 533, 534, 535, 536, 537, 538, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 561, 562, 563, 564, 565, 566, 567, 568, 569, 573, 574, 575, 576, 579], "gammapy_analysis_config": 393, "gammapy_data": [26, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 82, 83, 86, 88, 89, 91, 94, 96, 101, 102, 105, 109, 110, 114, 116, 117, 121, 122, 124, 126, 128, 130, 132, 140, 141, 144, 145, 147, 151, 152, 153, 154, 162, 172, 192, 193, 195, 201, 204, 205, 210, 226, 237, 274, 283, 302, 303, 356, 365, 370, 372, 377, 378, 380, 393, 409, 411, 413, 417, 418, 419, 428, 437, 446, 447, 448, 451, 452, 453, 454, 455, 456, 457, 459, 460, 461, 462, 463, 464, 465, 467, 468, 469, 470, 471, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 489, 490, 491, 492, 496, 498, 499, 500, 511, 512, 514, 516, 517, 518, 520, 521, 523, 524, 538, 568, 569], "gammapy_extra": 417, "gammapybaseconfig": 16, "gammapydeprecationwarn": [377, 465, 490, 546], "gammmapi": [387, 394], "gap": 135, "garcia": 437, "gather": [391, 397, 406], "gauss": [42, 51, 54, 102, 105, 127, 128, 153, 193, 205, 232, 233, 234, 235, 400, 434, 471, 482, 485, 500, 531, 532], "gauss_elong": 485, "gauss_temp": 485, "gaussian": [67, 68, 80, 81, 101, 117, 127, 133, 142, 149, 150, 154, 160, 162, 165, 193, 205, 232, 233, 234, 235, 236, 292, 293, 388, 396, 400, 405, 421, 425, 445, 447, 449, 451, 461, 463, 467, 470, 474, 476, 479, 480, 485, 487, 489, 500, 518, 520, 528, 539, 560, 570], "gaussian1d": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40], "gaussian2d": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 50], "gaussian2dkernel": 117, "gaussian_compon": [67, 476], "gaussian_error": [133, 142], "gaussian_filt": [127, 205], "gaussian_model": 563, "gaussian_sigma": 479, "gaussianband2d": 436, "gaussianprior": [405, 447, 487], "gaussianspatialmodel": [80, 81, 114, 116, 255, 400, 421, 461, 462, 467, 485, 532], "gaussianspectralmodel": [256, 400, 485, 547], "gaussiantemporalmod": 428, "gaussiantemporalmodel": [268, 400, 424, 485, 563], "gb": [385, 387, 489, 491], "gbf4446caa": [104, 123, 414, 446, 448, 451, 452, 453, 454, 455, 456, 457, 459, 460, 461, 462, 463, 464, 465, 468, 469, 470, 471, 475, 476, 477, 479, 481, 482, 483, 484, 485, 487, 489, 490, 491, 492, 498, 499, 500, 530, 531, 532, 533, 534, 535, 536, 537, 538, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 561, 562, 563, 564, 565, 566, 567, 568, 569], "gc": [86, 102, 105, 109, 110, 114, 116, 117, 121, 126, 128, 132, 140, 141, 365, 370, 372, 380, 455, 456, 459, 461, 463, 465, 475, 477, 478, 482, 484, 485, 489, 490, 500, 502, 511, 512], "gc_3fhl": 500, "gc_3fhl_cutout": 500, "gc_3fhl_smooth": 500, "gc_imag": 465, "gc_po": 490, "gc_sep": 484, "gca": 447, "gcc": 413, "ge": 90, "geminga": 59, "gen_gaussian_model": 564, "gener": [16, 27, 33, 42, 45, 46, 47, 56, 82, 83, 84, 87, 88, 90, 91, 92, 102, 103, 104, 105, 108, 109, 110, 123, 151, 162, 165, 192, 193, 195, 196, 197, 201, 204, 205, 210, 222, 230, 234, 235, 236, 237, 238, 253, 260, 269, 270, 272, 274, 275, 286, 326, 328, 331, 332, 333, 334, 341, 378, 380, 386, 388, 389, 390, 391, 393, 395, 396, 397, 398, 399, 400, 401, 402, 407, 410, 413, 419, 423, 424, 425, 428, 430, 435, 439, 442, 443, 445, 446, 447, 448, 449, 451, 452, 453, 454, 455, 456, 457, 459, 460, 461, 462, 463, 464, 465, 467, 468, 469, 470, 471, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 489, 490, 491, 492, 494, 496, 498, 499, 500, 510, 514, 519, 525, 527, 528, 530, 531, 532, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 561, 562, 563, 565, 566, 567, 568, 569, 570, 574, 576, 577], "generalconfig": 16, "generalis": [124, 396, 422, 480], "generalized_gaussian_model": 564, "generalizedgaussianspatialmodel": [255, 425, 485, 533], "generalizedgaussiantemporalmodel": [268, 430, 485, 564], "generalrandom": 420, "generatejsonschema": [16, 84, 90, 104, 123], "gengauss": [236, 485, 533], "geodeticloc": 94, "geolat": 448, "geom": [16, 23, 83, 102, 105, 109, 110, 111, 113, 115, 121, 122, 124, 126, 132, 150, 151, 160, 162, 165, 172, 179, 181, 182, 183, 184, 185, 186, 187, 188, 191, 192, 193, 195, 199, 200, 201, 203, 204, 205, 219, 220, 223, 224, 231, 232, 235, 245, 247, 249, 258, 259, 261, 263, 269, 273, 388, 390, 392, 425, 428, 437, 443, 446, 447, 448, 451, 452, 453, 454, 455, 456, 457, 459, 461, 463, 464, 465, 467, 468, 469, 470, 471, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 487, 490, 491, 498, 499, 500, 512, 521, 523, 524, 525, 526, 527, 530, 532, 533, 534, 535], "geom_24_energy_bin": 527, "geom_6_energy_bin": 527, "geom_edisp": [102, 105, 109, 110, 477], "geom_energi": 527, "geom_exposur": [102, 105, 109, 110, 441, 477], "geom_imag": [457, 461, 527], "geom_irf": 390, "geom_psf": [102, 105, 109, 110, 477], "geom_tru": 422, "geomconfig": 16, "geometri": [23, 83, 100, 102, 105, 109, 110, 113, 122, 124, 132, 133, 134, 142, 150, 151, 157, 160, 162, 165, 169, 172, 174, 179, 181, 182, 183, 184, 185, 186, 187, 188, 190, 191, 192, 193, 195, 196, 198, 199, 200, 201, 203, 204, 205, 206, 207, 219, 220, 223, 224, 232, 235, 245, 247, 249, 258, 259, 261, 263, 269, 273, 373, 383, 389, 392, 393, 422, 428, 439, 451, 452, 453, 454, 456, 457, 459, 463, 464, 467, 477, 478, 481, 490, 491, 510, 512, 514, 522, 526, 572, 573], "geomspac": [124, 405, 478], "geq": [52, 53], "get": [16, 19, 20, 26, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 82, 84, 85, 87, 88, 90, 91, 94, 96, 100, 102, 104, 106, 107, 109, 117, 121, 123, 125, 126, 129, 130, 132, 140, 144, 149, 150, 151, 157, 162, 165, 190, 191, 192, 193, 195, 196, 199, 200, 201, 203, 204, 205, 208, 214, 216, 217, 218, 219, 220, 221, 224, 225, 227, 228, 229, 232, 233, 235, 239, 240, 242, 246, 247, 248, 249, 250, 251, 252, 254, 257, 258, 259, 262, 263, 264, 265, 266, 267, 269, 270, 272, 273, 274, 276, 312, 328, 377, 378, 382, 383, 384, 385, 386, 387, 391, 392, 394, 401, 403, 404, 405, 407, 408, 410, 411, 413, 414, 417, 419, 434, 435, 436, 437, 446, 452, 454, 455, 459, 460, 461, 467, 469, 473, 476, 477, 479, 480, 481, 483, 484, 485, 487, 489, 490, 491, 492, 494, 498, 499, 500, 502, 510, 514, 527, 573, 577], "get_altaz": [85, 94, 442], "get_bia": 149, "get_bias_energi": 149, "get_bounding_box": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40], "get_by_coord": [192, 193, 195, 201, 204, 205, 481, 482, 490, 491, 526], "get_by_idx": [192, 193, 195, 201, 204, 205, 482, 526], "get_by_pix": [192, 193, 195, 201, 204, 205, 526], "get_cl": [449, 476, 483], "get_combined_flux_map": 133, "get_combined_significance_map": 134, "get_coord": [190, 191, 196, 200, 203, 421, 428, 437, 464, 482, 483, 523, 527], "get_dataset": [15, 452, 456, 457, 459, 468, 498, 514], "get_devel_vers": 380, "get_edges_fixed_bin": 144, "get_edges_min_t": 144, "get_edisp_kernel": [150, 151, 423, 428, 477, 490, 518], "get_events_meta_data": 390, "get_excess_map": [15, 498], "get_filenam": [106, 107], "get_flux_point": [15, 122, 124, 401, 423, 452, 498], "get_group_by_idx": 401, "get_hdu": 312, "get_icr": [85, 94, 442], "get_idx": [190, 191, 200, 203, 527], "get_image_by_coord": [192, 193, 195, 201, 204, 205, 482], "get_image_by_idx": [192, 193, 195, 201, 204, 205], "get_image_by_pix": [192, 193, 195, 201, 204, 205], "get_index_list": 191, "get_irfs_featur": [302, 303, 442, 486], "get_kernel": 117, "get_light_curv": 15, "get_mean": 149, "get_observ": [15, 82, 96, 302, 303, 419, 430, 448, 451, 452, 453, 456, 457, 459, 461, 463, 468, 469, 471, 473, 481, 486, 491, 492, 496, 498, 499, 514, 521, 523, 524], "get_ogip_meta": 107, "get_pix": 203, "get_pointing_altaz": [88, 486], "get_pointing_icr": [88, 442, 461, 481, 499], "get_psf_kernel": [160, 162, 165, 443, 490], "get_random_st": [33, 42, 45, 46, 47, 102, 103, 105, 108, 109, 110, 151, 162, 165, 192, 193, 195, 201, 204, 205, 222, 230, 234, 236, 237, 238, 253, 260, 272, 275, 286, 326, 331, 332, 333, 334, 377], "get_rebinned_axi": 469, "get_resolut": 149, "get_respons": 435, "get_scal": 117, "get_scale_model": [125, 126, 129], "get_spectrum": [192, 193, 195, 201, 204, 205], "get_subcovari": 208, "get_transform": [455, 461, 531, 532], "get_valid_path": 106, "get_wcs_coord_and_weight": 200, "getattr": 405, "getitem": 435, "getlogg": [377, 457, 461, 468, 469, 470, 473, 496], "getter": 378, "getting_start": 397, "gev": [17, 18, 19, 20, 21, 22, 24, 25, 27, 74, 126, 132, 192, 193, 195, 197, 201, 204, 205, 449, 453, 455, 459, 460, 465, 467, 470, 471, 475, 476, 481, 482, 483, 484, 489, 490, 491, 500, 527, 550, 572, 573], "gev2": [19, 475], "gevgevgev1": 449, "gh": [377, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 407], "git": [86, 261, 377, 378, 380, 382, 384, 385, 403, 410, 439], "github": [378, 380, 381, 382, 383, 385, 386, 395, 397, 403, 406, 407, 410, 412, 417, 418, 419, 420, 421, 422, 423, 424, 425, 428, 433, 434, 435, 436, 437, 438, 514], "giuliani": 390, "giunti": [418, 419, 420, 421, 422, 423, 424, 425, 428, 430, 431, 439, 442], "give": [6, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 87, 91, 101, 139, 291, 292, 377, 382, 386, 387, 391, 392, 393, 394, 397, 398, 403, 407, 418, 420, 422, 430, 443, 451, 452, 455, 462, 464, 469, 473, 474, 476, 479, 480, 481, 482, 485, 489, 490, 498, 514, 519, 574, 575, 577, 578], "given": [16, 17, 18, 19, 20, 21, 22, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 42, 46, 51, 52, 53, 67, 68, 69, 80, 82, 83, 84, 85, 87, 88, 90, 91, 94, 96, 99, 100, 101, 102, 103, 104, 105, 108, 109, 110, 112, 119, 121, 122, 123, 124, 125, 127, 129, 130, 131, 132, 133, 140, 141, 142, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 156, 157, 159, 160, 161, 162, 163, 164, 165, 166, 174, 175, 178, 180, 182, 183, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 210, 214, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 242, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 269, 270, 271, 272, 273, 274, 275, 276, 283, 285, 287, 293, 302, 304, 307, 308, 315, 322, 326, 329, 330, 338, 364, 365, 370, 374, 377, 384, 385, 386, 387, 388, 389, 390, 391, 392, 394, 396, 400, 401, 403, 405, 417, 422, 428, 436, 437, 442, 446, 447, 448, 449, 452, 455, 463, 464, 465, 467, 468, 469, 470, 475, 476, 477, 478, 480, 481, 482, 483, 485, 489, 490, 498, 500, 510, 511, 512, 514, 518, 519, 523, 524, 526, 527, 533, 537, 540, 571, 573, 574, 575, 576], "gkubq5ei": 473, "glast": 490, "glat": [41, 67, 68, 83, 377, 451, 476, 482, 490], "glat_err": 476, "glat_pnt": [461, 489], "glimps": [491, 494], "gll_iem_v06_cutout": [192, 193, 195, 201, 204, 205], "gll_iem_v06_gc": [463, 482, 484, 485, 490], "gll_psc_v16": 61, "gll_psc_v20": 476, "gll_psc_v32": 65, "gll_psch_v09": 58, "gll_psch_v13": 62, "glob": [82, 378, 477, 478], "global": [16, 33, 42, 45, 46, 47, 100, 102, 103, 105, 108, 109, 110, 151, 162, 165, 190, 191, 192, 193, 195, 200, 201, 203, 204, 205, 210, 222, 230, 234, 236, 237, 238, 253, 260, 272, 275, 286, 326, 328, 331, 332, 333, 334, 377, 381, 383, 425, 442, 451, 461, 462, 471, 484, 487, 512, 572], "global_dataset": 481, "global_to_loc": 191, "glon": [41, 67, 68, 83, 377, 451, 476, 482, 490], "glon_pnt": [461, 489], "glossari": [397, 439, 510, 527], "glue": 514, "glueviz": 394, "gnufzi": 489, "go": [50, 87, 91, 380, 387, 397, 402, 439, 446, 447, 448, 449, 451, 452, 453, 454, 455, 456, 457, 459, 460, 461, 462, 463, 464, 465, 467, 468, 469, 470, 471, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 489, 490, 491, 492, 496, 498, 499, 500, 502, 530, 531, 532, 533, 534, 535, 536, 537, 538, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 561, 562, 563, 564, 565, 566, 567, 568, 569, 574], "goal": [382, 391, 405, 479], "goe": [41, 52, 367, 377, 396, 407, 465, 487], "gogia": 435, "good": [82, 86, 101, 124, 297, 301, 377, 382, 384, 385, 386, 387, 388, 391, 393, 394, 395, 397, 447, 451, 453, 454, 457, 467, 469, 470, 474, 475, 477, 479, 481, 483, 485, 490, 491, 494, 536, 537, 573, 578], "googl": [87, 91, 397, 406], "got": 489, "gov": [58, 60, 61, 62, 64, 65, 149, 197, 397, 553], "gp": [82, 83, 89, 378, 387, 393, 456, 459, 461, 471, 489, 491], "gpl3": 377, "gps_baseline_110380": [82, 83, 489], "gradient": [19, 20, 26, 217, 218, 221, 225, 227, 228, 229, 233, 239, 240, 242, 246, 248, 250, 251, 252, 257, 262, 264, 265, 266, 267, 270, 274], "grai": [368, 523, 550], "grand": 377, "grant": [380, 403], "granular": 474, "grayify_colormap": 396, "grb": [470, 474], "great": [382, 391, 396, 434, 494], "greater": [169, 370], "green": [101, 109, 110, 436, 462, 486, 487], "grei": 471, "grep": 412, "grid": [17, 18, 21, 22, 24, 25, 27, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 125, 128, 153, 161, 163, 192, 193, 195, 197, 201, 204, 205, 219, 220, 224, 232, 235, 247, 249, 258, 259, 263, 269, 273, 279, 370, 377, 388, 393, 420, 422, 479, 526, 527, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 561, 562, 563, 564, 565, 566, 567], "gridsearch": [210, 479], "gridspec": 364, "gridspec_kw": [455, 461, 468, 470, 540], "ground": [95, 392, 489, 575], "group": [86, 87, 91, 92, 125, 126, 129, 130, 132, 150, 190, 191, 192, 193, 195, 196, 197, 200, 201, 202, 203, 204, 205, 302, 383, 392, 396, 397, 398, 401, 406, 409, 419, 422, 424, 428, 434, 437, 455, 468, 470, 494, 512, 514, 528, 574], "group_1": 486, "group_2": 486, "group_bi": [87, 91, 401], "group_by_axi": 401, "group_by_label": [92, 486], "group_high_zenith": 486, "group_low_zenith": 486, "group_siz": [144, 469], "group_tabl": [86, 197, 202], "grouped_observ": 486, "grow": [385, 396, 436], "grown": 397, "gr\u00e9aux": 442, "gsfc": [58, 60, 61, 62, 64, 65, 149, 197, 397, 553], "gsgtr5he": 481, "gt": 480, "gtexpcube2": 490, "gti": [82, 87, 88, 89, 100, 101, 102, 105, 109, 110, 122, 124, 126, 129, 133, 142, 166, 202, 261, 383, 386, 387, 390, 391, 392, 401, 420, 422, 423, 425, 438, 442, 443, 463, 469, 470, 473, 477, 481, 489, 491, 492, 510, 573], "gti_1": 511, "gti_2": 511, "gti_t0": 470, "gtimetadata": 404, "gtmktime": [387, 490], "gtobsim": 390, "gtol": 479, "gtpsf": [150, 151, 157, 162, 165, 197, 455, 490], "gtselect": [387, 490], "guarante": [385, 400, 402], "guess": [124, 191, 193, 443], "guid": [380, 393, 395, 409, 410, 411, 414, 437, 494, 514, 529, 539, 560, 570], "guidelin": [377, 381, 414, 436], "guiger": [31, 39], "gz": [58, 60, 61, 62, 64, 65, 66, 67, 82, 83, 86, 88, 91, 94, 102, 105, 109, 110, 114, 116, 117, 121, 126, 128, 132, 140, 141, 154, 226, 274, 365, 370, 372, 378, 399, 437, 447, 451, 452, 455, 462, 463, 464, 465, 476, 477, 478, 480, 482, 484, 485, 489, 490, 491, 496, 498, 499, 500, 511, 512, 514, 516, 517, 518, 520, 540], "h": [26, 67, 82, 86, 87, 91, 95, 125, 127, 151, 178, 192, 193, 195, 201, 204, 205, 286, 367, 397, 400, 409, 413, 414, 422, 437, 445, 446, 447, 448, 451, 452, 454, 460, 462, 468, 469, 470, 473, 475, 480, 481, 482, 485, 489, 490, 491, 493, 494, 496, 498, 499, 509, 514, 527, 562, 563, 573, 574], "h0": 462, "h05": [45, 49], "h1": 462, "h_0": [462, 576], "h_1": [462, 576], "h_i": 127, "ha": [19, 20, 26, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 80, 87, 91, 101, 102, 105, 109, 110, 121, 122, 124, 164, 186, 190, 191, 192, 193, 195, 199, 200, 201, 203, 204, 205, 213, 217, 218, 220, 221, 224, 225, 227, 228, 229, 230, 232, 233, 234, 235, 236, 237, 238, 239, 240, 242, 246, 248, 249, 250, 251, 252, 253, 257, 258, 259, 260, 261, 262, 264, 265, 266, 267, 270, 272, 273, 274, 370, 372, 374, 377, 378, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 410, 424, 425, 428, 430, 431, 437, 438, 439, 441, 442, 443, 447, 448, 451, 452, 453, 457, 462, 464, 468, 469, 471, 475, 476, 477, 479, 481, 482, 483, 485, 486, 487, 489, 491, 492, 498, 499, 510, 511, 514, 519, 523, 524, 526, 527, 531, 532, 559, 571, 574, 576], "habilit": 301, "hack": 433, "had": [377, 383, 385, 403, 425, 431, 435, 436], "hadron": [276, 383, 388, 457, 477, 489, 510, 523], "hajlaoui": [425, 428], "hal": 403, "half": [162, 165, 197, 203, 273], "halo": 502, "halv": [136, 291, 443], "halving_coord": 474, "halving_err": 474, "hand": [174, 377, 380, 385, 388, 397, 403, 405, 440, 479, 494, 514], "handbook": [397, 494], "handi": 459, "handl": [3, 16, 84, 90, 104, 122, 123, 124, 178, 199, 294, 376, 378, 381, 389, 390, 391, 393, 398, 400, 401, 404, 406, 409, 411, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 430, 431, 432, 433, 434, 435, 436, 438, 439, 441, 442, 451, 453, 459, 460, 461, 463, 477, 480, 482, 484, 485, 490, 491, 494, 499, 500, 510, 511, 514, 573], "handler_map": 374, "hanna": 443, "hap": 393, "happen": [82, 380, 382, 384, 385, 391, 395, 407, 452, 484, 494, 498, 499, 510, 514, 576], "happi": [380, 384, 397, 417, 418, 437], "hard": [377, 378, 400, 405, 423, 487], "harder": [384, 574], "hardli": 404, "harri": [432, 433], "harvard": [28, 30, 31, 32, 33, 35, 36, 37, 38, 39, 40, 50, 52, 53, 57, 58, 60, 61, 62, 83, 88, 117, 135, 152, 210, 242, 276, 277, 286, 293, 295, 397, 479], "has_any_t": [122, 124], "has_energy_axi": [190, 191, 200, 203], "has_invers": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40], "has_masked_column": [87, 91], "has_masked_valu": [87, 91], "has_mixin_column": [87, 91], "has_offset_axi": [146, 147, 148, 149, 152, 153, 154, 156, 159, 161, 163, 164], "has_single_spatial_bin": [150, 151, 157, 162, 165], "has_stat_profil": [122, 124], "has_success": [122, 124], "has_ul": [122, 124], "has_user_bounding_box": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40], "has_user_invers": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40], "hasattr": 377, "hasn": 382, "hatch": 471, "have": [16, 19, 20, 26, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 67, 82, 84, 87, 90, 91, 95, 100, 104, 107, 111, 115, 122, 123, 124, 125, 129, 140, 141, 149, 150, 151, 160, 162, 165, 172, 174, 186, 190, 191, 192, 193, 195, 199, 200, 201, 203, 204, 205, 217, 218, 219, 220, 221, 222, 223, 224, 225, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 242, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 269, 270, 271, 272, 273, 274, 275, 304, 328, 334, 374, 376, 377, 378, 379, 380, 382, 383, 384, 386, 388, 390, 391, 394, 395, 396, 397, 398, 399, 400, 402, 403, 404, 405, 407, 408, 409, 410, 411, 412, 413, 414, 417, 418, 419, 422, 425, 428, 430, 431, 434, 436, 437, 438, 439, 440, 442, 443, 446, 447, 448, 451, 452, 453, 454, 455, 456, 457, 459, 460, 461, 462, 463, 464, 465, 467, 469, 470, 471, 473, 476, 477, 478, 479, 480, 482, 483, 484, 485, 486, 487, 489, 490, 491, 494, 498, 499, 500, 502, 510, 511, 512, 514, 521, 525, 526, 527, 537, 548, 571, 574, 577, 578], "haven": 413, "hawc": [55, 59, 63, 72, 76, 97, 414, 422, 428, 436, 439, 440, 442, 445, 493, 494, 509, 522, 573], "hawc19_flux_point": [124, 460, 514], "hawc_crab": [124, 460, 514], "hd": 67, "hdr": 404, "hdr_dict": 404, "hdu": [67, 82, 83, 85, 86, 87, 88, 94, 102, 105, 109, 110, 122, 124, 146, 147, 148, 149, 150, 151, 152, 153, 154, 156, 157, 159, 161, 162, 163, 164, 165, 166, 190, 191, 192, 193, 194, 195, 196, 197, 199, 200, 201, 202, 203, 204, 205, 312, 363, 378, 387, 416, 431, 433, 436, 439, 440, 463, 480, 482, 489, 491, 492, 510, 511, 514, 516, 517, 518, 520, 527, 569], "hdu1": 149, "hdu2": 149, "hdu_al": 463, "hdu_band": [122, 124, 150, 151, 157, 162, 165, 190, 191, 192, 193, 195, 196, 199, 200, 201, 203, 204, 205], "hdu_class": [82, 87, 312, 489, 491, 492], "hdu_class_uniqu": 87, "hdu_evt": 463, "hdu_filenam": 491, "hdu_gti": 463, "hdu_hdu": 82, "hdu_index": 82, "hdu_list": [150, 151, 153, 157, 161, 162, 163, 165, 192, 193, 204, 205], "hdu_loc": 87, "hdu_nam": 312, "hdu_ob": 82, "hdu_out": [192, 193], "hdu_region": [200, 201], "hdu_tabl": [82, 491], "hdu_table_filenam": 82, "hdu_typ": [82, 87, 489, 491, 492], "hdu_type_uniqu": 87, "hduclas2": 480, "hduclas3": 480, "hduclas4": 480, "hduclasn": 480, "hduindext": [82, 312, 491], "hdulist": [102, 105, 107, 109, 110, 122, 124, 146, 147, 148, 149, 150, 151, 152, 153, 154, 156, 157, 159, 161, 162, 163, 164, 165, 190, 191, 192, 193, 195, 199, 200, 201, 203, 204, 205, 463, 482, 510], "hduloc": [87, 102], "he": [276, 387, 392], "hea": 392, "head": 378, "header": [82, 83, 84, 85, 86, 87, 88, 90, 91, 94, 100, 101, 102, 104, 105, 106, 107, 109, 110, 122, 123, 124, 149, 150, 151, 157, 162, 165, 190, 191, 192, 193, 194, 195, 196, 197, 199, 201, 202, 203, 204, 205, 273, 314, 359, 360, 363, 382, 387, 390, 404, 422, 430, 432, 437, 439, 442, 453, 463, 464, 482, 489, 578], "healpi": [191, 376, 384, 386, 394, 408, 409, 411, 420, 428, 446, 448, 451, 452, 453, 454, 455, 456, 457, 459, 460, 461, 462, 463, 464, 465, 468, 469, 470, 471, 475, 476, 477, 479, 481, 482, 483, 484, 485, 487, 489, 490, 491, 492, 498, 499, 500, 525], "healpix": [13, 191, 192, 193, 195, 201, 204, 205, 376, 384, 386, 391, 428, 436, 482, 490, 526], "healpix_to_imag": 429, "heapsort": [87, 91], "heart": 576, "heasarc": [149, 197], "heatmap": [366, 371], "heavi": [437, 438], "heavier": 459, "heavili": 428, "hegra": [97, 277], "heidelberg": [377, 406], "heidt": 474, "height": [16, 29, 87, 91, 94, 126, 337, 452, 456, 457, 459, 465, 468, 471, 475, 482, 483, 485, 498, 523, 527], "heighten": 474, "helen": 434, "hello": [413, 461], "help": [11, 87, 91, 288, 294, 377, 380, 382, 384, 391, 392, 393, 397, 403, 406, 407, 408, 413, 417, 418, 419, 436, 437, 439, 476, 481, 482, 484, 490, 492, 500, 514, 574], "helper": [13, 312, 317, 384, 386, 391, 392, 393, 396, 407, 413, 419, 420, 421, 422, 428, 430, 433, 435, 436, 442, 443, 465, 476, 483, 484, 523, 572, 579], "henc": [87, 91, 393, 456, 457, 512, 527, 576], "her": 406, "here": [13, 82, 83, 87, 91, 102, 109, 124, 134, 143, 147, 152, 161, 210, 285, 287, 290, 365, 376, 377, 378, 379, 380, 383, 384, 389, 390, 391, 392, 393, 394, 395, 396, 397, 403, 404, 405, 407, 409, 411, 413, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 428, 430, 431, 433, 434, 435, 436, 437, 438, 439, 442, 443, 446, 447, 448, 449, 451, 452, 453, 454, 455, 456, 457, 459, 461, 462, 463, 464, 467, 468, 469, 470, 471, 473, 474, 476, 477, 478, 479, 480, 481, 482, 483, 486, 487, 489, 490, 491, 494, 498, 499, 500, 504, 510, 514, 519, 521, 530, 531, 532, 533, 534, 535, 536, 537, 538, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 561, 562, 563, 564, 565, 566, 567, 568, 569, 574, 575, 576, 578, 579], "hereaft": 463, "herebi": 487, "heritag": 403, "herm": [280, 282, 443], "hess": [16, 55, 67, 82, 83, 86, 88, 91, 96, 97, 101, 109, 110, 130, 144, 145, 152, 154, 172, 210, 283, 302, 303, 378, 385, 386, 391, 393, 397, 406, 409, 413, 416, 418, 421, 432, 433, 436, 437, 445, 448, 449, 451, 452, 453, 457, 459, 461, 462, 469, 471, 473, 475, 476, 477, 478, 479, 481, 486, 487, 490, 492, 493, 496, 498, 499, 502, 511, 512, 514, 516, 517, 518, 520, 521, 523, 524], "hess2": [152, 516], "hess_dl3_dr1_obs_id_020136": [88, 154, 378, 516, 517, 518, 520], "hess_dl3_dr1_obs_id_023523": [83, 86, 511], "hess_dl3_dr1_obs_id_023526": 511, "hess_ecpl": [277, 451], "hess_pl": 277, "hessian": 512, "heterogen": [404, 449, 460], "hfm": 67, "hgp": [67, 80, 81, 121, 397, 422, 434, 436, 437, 509], "hgps_catalog_v1": 67, "hgps_sourc": 67, "hgpsc": [67, 476], "hi": [377, 435], "hi_bnd": 197, "hi_threshold": 149, "hidden": 388, "hide": [13, 382, 399], "hierarch": [13, 302, 344, 386, 388, 404, 443, 514, 526], "hierarchi": [302, 388, 421], "hierarchical_clust": [442, 486], "high": [6, 15, 58, 62, 63, 83, 149, 197, 327, 377, 381, 382, 383, 390, 391, 392, 397, 404, 420, 421, 422, 423, 424, 428, 436, 437, 445, 446, 449, 452, 455, 456, 459, 465, 467, 468, 475, 476, 477, 478, 481, 483, 489, 490, 491, 492, 494, 499, 500, 501, 509, 510, 511, 512, 519, 522, 572, 573, 574, 575], "high_zenith": 486, "higher": [190, 191, 192, 193, 195, 200, 201, 203, 204, 205, 236, 380, 383, 388, 393, 396, 398, 410, 449, 464, 474, 480, 482, 521, 527], "highest": [140, 178, 474, 481, 489, 500], "highli": 485, "highlight": 574, "him": 406, "hint": [404, 455, 512], "hire": [153, 397, 504, 506, 507, 508, 510, 511, 516, 517, 518, 520, 523, 527, 576, 579], "hist": [83, 109, 110, 201, 205, 370, 454, 487], "histogram": [83, 109, 110, 197, 201, 205, 370, 442, 471, 527, 573], "histori": [391, 403, 439], "hli": [390, 423, 424, 428, 439, 445, 450, 494, 510, 513, 573], "hli_spectrum_analysi": 452, "hline": 531, "hoc": 391, "hold": [69, 82, 89, 92, 96, 100, 160, 231, 304, 386, 387, 389, 392, 574, 576], "home": [16, 341, 446, 448, 451, 452, 453, 454, 455, 456, 457, 459, 460, 461, 462, 463, 464, 465, 467, 468, 469, 470, 471, 473, 475, 476, 477, 479, 481, 482, 483, 484, 485, 487, 489, 490, 491, 492, 498, 499, 500, 538, 540, 546, 562, 568, 569], "homebrew": 394, "homework": 419, "homogen": [87, 91, 425], "honk": 382, "hood": [452, 494, 498], "hook": [380, 439], "hope": 382, "hopefulli": 384, "horizont": [85, 95, 155, 347, 480, 578], "host": 377, "hour": [67, 94, 380, 393, 407, 446, 476, 481, 482, 514], "hover": 378, "how": [16, 19, 20, 82, 83, 84, 85, 90, 99, 104, 123, 124, 126, 128, 172, 193, 203, 205, 328, 334, 379, 382, 385, 389, 391, 393, 394, 396, 399, 400, 403, 404, 407, 408, 409, 413, 414, 417, 418, 419, 422, 423, 430, 432, 435, 436, 437, 442, 443, 446, 447, 449, 451, 452, 453, 454, 455, 456, 457, 460, 461, 462, 463, 464, 465, 467, 468, 469, 470, 471, 473, 474, 476, 477, 478, 479, 483, 484, 485, 486, 487, 489, 490, 491, 492, 494, 498, 500, 504, 510, 512, 515, 519, 523, 525, 526, 540, 559, 572, 574, 575, 576, 578, 579], "howev": [77, 87, 91, 101, 121, 292, 376, 377, 378, 380, 384, 387, 390, 391, 395, 403, 405, 410, 448, 457, 465, 471, 473, 475, 476, 477, 479, 487, 491, 492, 494, 510, 514, 526, 527, 532, 548, 574], "howto": [397, 439, 440], "hpx": [191, 192, 193, 195, 204, 205, 391, 428, 482, 490], "hpx2wc": [192, 193], "hpx_map": [192, 193], "hpx_pixel": 391, "hpx_reg": 191, "hpxgeom": [122, 190, 192, 193, 423, 428, 439, 490, 525], "hpxmap": [193, 195, 525], "hpxndmap": [269, 428, 525], "hpxsparsemap": 422, "hpxtowcsmap": [192, 193], "hr": [463, 464, 467, 470], "hspace": 475, "hspec": [432, 433, 434], "hst": 225, "hstack": [87, 91, 390], "html": [26, 83, 87, 91, 125, 149, 185, 191, 197, 200, 203, 210, 223, 245, 274, 304, 331, 332, 377, 378, 380, 385, 397, 402, 403, 407, 415, 436, 446, 454, 456, 459, 461, 467, 470, 479, 480, 489, 511, 514, 517, 525, 527, 553], "htmlcov": 407, "http": [11, 13, 16, 26, 28, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 50, 52, 53, 57, 58, 60, 61, 62, 63, 64, 65, 67, 83, 84, 87, 88, 90, 91, 104, 117, 123, 125, 134, 135, 136, 143, 149, 152, 178, 185, 191, 197, 200, 203, 210, 223, 242, 245, 251, 252, 266, 267, 274, 276, 277, 286, 292, 293, 295, 300, 304, 331, 332, 344, 380, 394, 397, 402, 403, 406, 407, 408, 409, 410, 411, 415, 419, 436, 446, 451, 454, 456, 459, 460, 461, 467, 470, 475, 476, 479, 480, 489, 511, 514, 525, 527, 553, 557, 558, 574], "hubert": 437, "hue": 368, "huestart": 368, "huge": [407, 532], "hugovk": 418, "human": [358, 388, 407, 430, 452, 498], "hundr": 491, "hvmm": 473, "hypercub": [482, 526, 527], "hypothes": [283, 442, 514, 576], "hypothesi": [122, 124, 125, 126, 129, 130, 283, 285, 287, 449, 455, 462, 478, 512, 514, 573, 576], "hysteresi": 473, "hz": [334, 500], "hzscg2u8": 473, "i": [11, 13, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 45, 46, 47, 50, 51, 52, 53, 54, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 74, 75, 76, 77, 78, 79, 80, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 112, 113, 114, 116, 117, 119, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 156, 157, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 172, 173, 174, 175, 176, 178, 179, 180, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 242, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 269, 270, 271, 272, 273, 274, 275, 276, 277, 279, 281, 283, 284, 285, 286, 287, 288, 290, 291, 292, 293, 294, 295, 296, 300, 301, 302, 304, 306, 310, 312, 315, 316, 317, 322, 324, 325, 328, 331, 332, 333, 334, 336, 337, 340, 343, 345, 346, 348, 352, 354, 355, 359, 360, 361, 363, 364, 365, 366, 367, 368, 370, 371, 372, 373, 374, 376, 378, 379, 381, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 446, 447, 448, 449, 451, 452, 453, 454, 455, 456, 457, 459, 460, 461, 462, 463, 464, 467, 468, 469, 470, 471, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 489, 490, 491, 492, 494, 498, 499, 500, 502, 503, 504, 509, 510, 511, 512, 513, 514, 516, 517, 518, 519, 520, 521, 522, 523, 524, 526, 527, 530, 531, 532, 533, 534, 535, 536, 537, 538, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 561, 562, 563, 564, 565, 566, 567, 568, 569, 571, 572, 573, 574, 575, 576, 577, 578, 579], "i0": [87, 91], "i1": [87, 91], "i4": 465, "i8": [482, 500], "i_0": [192, 193, 195, 201, 204, 205], "i_hpx": [192, 193, 195, 201, 204, 205], "i_lat": [192, 193, 195, 201, 204, 205], "i_lon": [192, 193, 195, 201, 204, 205], "i_n": [192, 193, 195, 201, 204, 205], "i_scan": 487, "iact": [82, 83, 85, 94, 172, 175, 179, 383, 386, 387, 388, 389, 391, 393, 397, 414, 419, 433, 435, 437, 449, 455, 457, 481, 482, 484, 489, 490, 492, 511, 516, 517, 518, 520, 571, 573], "iactbasicimageestim": [383, 436], "iah": 473, "iau": [52, 416, 420], "iau2015": 52, "ic": 550, "icon": 572, "icr": [83, 85, 88, 91, 94, 95, 96, 102, 105, 109, 110, 140, 162, 172, 175, 191, 192, 193, 195, 198, 200, 203, 204, 205, 219, 220, 224, 232, 235, 249, 258, 259, 302, 303, 338, 377, 378, 401, 421, 451, 452, 453, 454, 455, 457, 460, 461, 463, 464, 467, 468, 469, 470, 471, 473, 476, 477, 480, 481, 482, 483, 485, 486, 489, 490, 491, 492, 498, 499, 511, 514, 518, 523, 527, 531, 532, 533, 535, 536, 537], "icrc": 432, "id": [67, 80, 82, 83, 87, 88, 91, 92, 112, 390, 393, 413, 452, 454, 463, 465, 467, 471, 476, 485, 489, 490, 491, 492, 498, 511], "id_obs_vela": 471, "idea": [382, 385, 392, 396, 397, 398, 452, 473, 480, 486, 490, 498], "ideal": [379, 380, 387, 391, 392, 401, 405, 406, 449, 490], "idempot": [16, 84, 90, 104, 123], "ident": [352, 380, 392, 439, 451, 453], "identif": [67, 383, 476], "identifi": [67, 88, 103, 108, 191, 261, 377, 387, 388, 390, 393, 402, 403, 407, 423, 455, 463, 474, 476, 477, 485, 489, 491, 513], "identified_object": 476, "idx": [83, 87, 91, 92, 100, 190, 191, 192, 193, 194, 195, 196, 197, 200, 201, 202, 203, 204, 205, 245, 454, 463, 470, 476, 479, 482, 526], "idx1": 479, "idx2": 479, "idx_glob": 191, "idx_loc": 191, "ie": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 403, 447, 473, 484, 485, 510, 573], "iem": [484, 490], "iem_minus_iem": 482, "iem_plus_iem": 482, "iem_times_two": 482, "ignacio": 438, "ignasi": 432, "ignor": [11, 16, 84, 87, 90, 91, 101, 104, 123, 135, 156, 166, 195, 213, 215, 231, 304, 316, 378, 430, 451, 465, 470, 471, 477, 483, 498, 514, 574], "ii": [208, 434], "ij": 208, "ilist": 191, "illustr": [109, 110, 378, 387, 389, 390, 391, 393, 396, 453, 455, 460, 465, 477, 481, 482, 484, 485, 490, 504, 510, 523, 524, 531, 532, 540, 572], "illustrate_colormap": 396, "iloc": [87, 91], "im": [366, 479], "imag": [102, 105, 109, 110, 117, 127, 128, 140, 151, 152, 153, 159, 161, 162, 163, 165, 167, 177, 190, 191, 192, 193, 195, 200, 201, 203, 204, 205, 273, 296, 299, 341, 363, 365, 366, 367, 368, 372, 377, 385, 386, 388, 393, 394, 397, 398, 407, 409, 414, 416, 417, 418, 421, 422, 423, 429, 433, 434, 435, 436, 437, 445, 456, 459, 465, 466, 481, 483, 485, 489, 499, 500, 510, 519, 523, 524, 525, 526, 527, 572, 573, 579], "image_analysi": [397, 417], "image_err": 128, "image_fitting_with_sherpa": [397, 438], "image_pip": 436, "image_profil": 435, "imagehdu": [192, 193, 204, 205], "imagenorm": [367, 368], "imageprofil": 128, "images_t": 461, "imagin": 574, "img": [365, 482], "iminuit": [210, 376, 394, 403, 428, 430, 437, 441, 442, 446, 448, 451, 452, 453, 454, 455, 456, 457, 459, 460, 461, 462, 463, 464, 465, 468, 469, 470, 471, 475, 476, 477, 479, 481, 482, 483, 484, 485, 487, 489, 490, 491, 492, 498, 499, 500, 571], "immut": 223, "impact": [384, 390, 394, 491], "imperfect": 481, "implement": [19, 20, 102, 105, 109, 110, 134, 143, 213, 217, 220, 221, 224, 225, 227, 228, 229, 230, 232, 233, 234, 235, 236, 237, 238, 239, 240, 242, 249, 250, 251, 252, 253, 257, 258, 259, 260, 262, 265, 266, 267, 272, 273, 286, 292, 377, 378, 382, 383, 385, 386, 389, 390, 391, 392, 393, 394, 395, 398, 399, 400, 401, 402, 404, 418, 419, 420, 421, 422, 423, 424, 425, 428, 429, 430, 435, 436, 438, 439, 442, 443, 448, 456, 469, 474, 475, 476, 481, 482, 483, 502, 510, 512, 514, 519, 520, 521, 559, 571, 572, 573, 574, 575, 578], "implent": 377, "impli": [236, 377, 396, 510, 573], "implic": 399, "implicit": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 519], "implicitli": 481, "import": [19, 20, 26, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 66, 67, 82, 83, 84, 85, 86, 87, 88, 89, 91, 94, 96, 101, 102, 104, 105, 109, 110, 111, 114, 115, 116, 117, 121, 122, 123, 124, 126, 128, 130, 132, 140, 141, 144, 145, 147, 149, 151, 152, 153, 154, 160, 162, 172, 175, 190, 191, 192, 193, 194, 195, 196, 197, 198, 200, 201, 202, 203, 204, 205, 210, 214, 216, 217, 218, 221, 225, 227, 228, 229, 233, 237, 239, 240, 242, 243, 246, 248, 250, 251, 252, 257, 262, 264, 265, 266, 267, 270, 274, 277, 283, 286, 292, 293, 302, 303, 324, 334, 344, 356, 357, 362, 365, 367, 368, 370, 372, 378, 380, 382, 383, 384, 386, 387, 388, 389, 390, 391, 392, 393, 396, 398, 399, 400, 401, 402, 403, 404, 405, 406, 412, 413, 424, 434, 436, 441, 443, 446, 447, 448, 449, 451, 452, 453, 454, 455, 456, 457, 459, 460, 461, 462, 463, 464, 465, 468, 469, 470, 471, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 489, 490, 491, 492, 496, 498, 499, 500, 503, 504, 506, 507, 508, 510, 511, 512, 514, 516, 517, 518, 520, 521, 523, 524, 525, 526, 527, 530, 531, 532, 533, 534, 535, 536, 537, 538, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 561, 562, 563, 564, 565, 566, 567, 568, 569, 572, 574, 575, 576, 578], "importantli": [401, 437, 448, 574], "importerror": [87, 91], "impos": [441, 446, 523], "improv": [108, 283, 379, 381, 382, 383, 385, 386, 387, 391, 392, 393, 394, 395, 396, 397, 402, 407, 408, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 428, 429, 431, 432, 433, 434, 435, 436, 437, 438, 440, 482, 489, 514, 524, 531], "imshow": [102, 105, 160, 193, 205, 365, 371, 435, 482, 500], "in2p3": [403, 489], "in_memori": [88, 514], "in_memory_gener": 92, "in_safe_data_rang": [102, 105, 109, 110], "inaccur": 377, "incex": [16, 84, 90, 104, 123], "incid": 383, "includ": [16, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 45, 82, 83, 84, 87, 88, 90, 91, 104, 123, 129, 160, 166, 168, 169, 175, 176, 180, 190, 191, 200, 203, 246, 312, 376, 377, 383, 385, 388, 389, 390, 391, 393, 394, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 409, 418, 420, 425, 436, 441, 442, 443, 446, 460, 462, 463, 465, 470, 475, 476, 478, 479, 481, 483, 484, 485, 489, 491, 502, 504, 510, 512, 513, 524, 526, 571, 575, 578], "include_irf": [88, 511, 514], "include_ssc": 246, "inclus": [83, 200, 391], "incompat": [402, 430], "incomplet": [377, 407, 417, 418, 419, 420, 421, 422, 423, 424, 425, 428, 430, 431, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443], "inconsist": [425, 431, 441, 442], "inconveni": [396, 437], "incorpor": [393, 397, 405, 573], "incorrect": [83, 377, 404, 412, 421, 439, 440, 481, 487], "incorrectli": [439, 483], "increas": [140, 167, 197, 202, 224, 232, 235, 377, 386, 404, 469, 478, 481, 510, 514, 531], "increment": [19, 20, 26, 117, 217, 218, 221, 225, 227, 228, 229, 233, 239, 240, 242, 246, 248, 250, 251, 252, 257, 262, 264, 265, 266, 267, 270, 274, 391, 482, 526], "ind": [191, 203, 223, 245], "inde": [463, 532], "indefinit": 384, "indent": [16, 84, 90, 104, 123], "independ": [67, 125, 129, 133, 134, 142, 143, 301, 315, 377, 383, 387, 388, 389, 390, 391, 392, 395, 398, 399, 400, 401, 403, 409, 418, 428, 446, 452, 468, 476, 482, 483, 484, 485, 491, 498, 499, 509, 514, 519, 573, 577], "index": [19, 20, 26, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 51, 52, 53, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 87, 89, 91, 92, 100, 101, 102, 105, 109, 110, 117, 121, 122, 124, 125, 126, 130, 131, 132, 139, 149, 150, 151, 157, 160, 162, 165, 185, 190, 191, 192, 193, 194, 195, 196, 197, 198, 200, 201, 202, 203, 204, 205, 210, 214, 216, 217, 218, 221, 223, 225, 227, 228, 229, 233, 239, 240, 242, 243, 245, 246, 248, 250, 251, 252, 257, 262, 264, 265, 266, 267, 270, 274, 277, 286, 312, 326, 331, 380, 383, 386, 387, 388, 389, 392, 393, 400, 401, 402, 406, 409, 419, 433, 435, 436, 442, 443, 447, 448, 449, 451, 452, 454, 455, 456, 459, 461, 462, 463, 464, 465, 467, 468, 469, 470, 471, 473, 476, 477, 478, 479, 480, 484, 485, 489, 490, 491, 492, 498, 499, 500, 512, 514, 525, 526, 527, 530, 531, 532, 533, 535, 536, 537, 538, 540, 542, 544, 545, 546, 551, 552, 553, 561, 562, 563, 564, 565, 566, 567, 568, 569], "index1": [217, 262, 541, 555], "index2": [217, 262, 541, 555], "index_1": [265, 266, 267, 556, 557, 558], "index_2": [77, 265, 266, 267, 556, 557, 558], "index_arrai": [87, 91], "index_column": [87, 91], "index_data": 196, "index_err": 473, "index_error": [19, 20, 26, 217, 218, 221, 225, 227, 228, 229, 233, 239, 240, 242, 246, 248, 250, 251, 252, 257, 262, 264, 265, 266, 267, 270, 274], "index_mod": [87, 91], "index_scan": 487, "indexerror": [92, 100, 245], "indic": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 87, 91, 100, 190, 191, 192, 193, 194, 195, 196, 197, 200, 201, 202, 203, 204, 205, 377, 439, 454, 464, 474, 481, 482, 486, 487, 491, 492, 514, 526, 527, 573], "indico": 386, "indirect": [475, 502], "individu": [87, 91, 108, 119, 127, 373, 383, 389, 390, 392, 397, 400, 401, 405, 448, 451, 454, 462, 465, 469, 476, 477, 479, 481, 484, 485, 500, 510, 514, 519], "indiviud": 399, "indxschm": [192, 193, 204, 205], "ineffici": [87, 91, 380], "ineqcon": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40], "inequ": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40], "inertia": [51, 54], "inf": [67, 235, 405, 487], "infer": [122, 124, 190, 191, 192, 193, 195, 203, 204, 205, 225, 378, 498, 526], "inferno": 482, "infil": 377, "infin": 487, "influenc": 487, "info": [16, 67, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 82, 85, 86, 87, 91, 94, 100, 101, 102, 103, 104, 105, 107, 108, 109, 110, 153, 159, 161, 163, 285, 287, 312, 378, 392, 393, 397, 406, 412, 422, 423, 425, 432, 433, 436, 452, 456, 457, 459, 463, 469, 473, 475, 476, 477, 482, 490, 491, 492, 494, 496, 498, 574], "info_dict": [102, 105, 109, 110, 285, 287, 370, 425, 443, 477], "info_t": [100, 448, 451, 452, 454, 459, 470, 477, 484, 514], "infodict": 370, "inform": [11, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 56, 67, 69, 71, 72, 74, 75, 76, 78, 79, 80, 84, 85, 88, 90, 91, 94, 99, 100, 101, 102, 104, 105, 109, 110, 122, 123, 124, 149, 153, 159, 161, 163, 164, 167, 172, 173, 178, 179, 198, 210, 217, 218, 219, 220, 221, 222, 224, 225, 227, 229, 230, 232, 233, 234, 235, 236, 237, 238, 240, 246, 247, 248, 249, 250, 252, 253, 258, 259, 260, 262, 265, 266, 267, 269, 270, 273, 274, 288, 294, 312, 328, 359, 360, 377, 381, 382, 387, 389, 390, 391, 392, 393, 400, 401, 404, 405, 407, 412, 413, 414, 422, 424, 425, 428, 430, 436, 442, 443, 447, 449, 452, 453, 460, 463, 464, 467, 473, 474, 477, 478, 479, 481, 482, 485, 489, 490, 491, 492, 498, 499, 500, 509, 510, 511, 512, 514, 527, 574, 577], "infrar": 225, "infrastructur": [407, 428, 439, 442], "ingredi": [401, 475], "inherit": [87, 91, 286, 377, 387, 389, 392, 401, 404, 405, 423, 428, 435, 477, 480, 525, 526], "init": [19, 20, 26, 87, 91, 121, 126, 132, 169, 217, 218, 219, 220, 221, 222, 224, 225, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 242, 244, 246, 249, 250, 251, 252, 253, 254, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 269, 270, 271, 272, 273, 274, 275, 316, 328, 389, 425, 440, 442, 443, 455, 465, 469, 476, 477, 478, 500], "initi": [15, 16, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 42, 53, 65, 84, 87, 90, 91, 104, 122, 123, 124, 132, 193, 196, 197, 223, 245, 247, 248, 304, 377, 382, 387, 388, 389, 393, 430, 446, 454, 457, 459, 460, 462, 463, 464, 467, 471, 476, 477, 482, 485, 498, 499, 500, 509, 511, 559, 573], "initialis": [33, 42, 45, 46, 47, 102, 103, 105, 108, 109, 110, 151, 162, 165, 192, 193, 195, 201, 204, 205, 222, 230, 234, 236, 237, 238, 253, 260, 272, 275, 286, 326, 328, 331, 332, 333, 334, 377, 399, 487], "inject": [454, 467], "inlin": [382, 446, 448, 449, 451, 452, 453, 454, 455, 456, 457, 459, 465, 467, 468, 469, 470, 471, 473, 475, 476, 477, 479, 482, 483, 484, 485, 489, 490, 492, 498, 499, 500], "inner": [44, 52, 53, 126, 167, 177, 259, 457, 500, 537], "inner_height": [523, 527], "inner_width": [523, 527], "input": [16, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 41, 84, 86, 87, 90, 91, 102, 104, 105, 108, 117, 119, 121, 122, 123, 124, 125, 128, 129, 132, 136, 137, 138, 139, 141, 145, 150, 151, 153, 160, 161, 162, 163, 164, 165, 167, 169, 173, 175, 177, 191, 192, 193, 195, 197, 198, 199, 200, 201, 202, 203, 204, 205, 214, 216, 223, 237, 245, 272, 273, 274, 286, 304, 315, 325, 328, 347, 349, 370, 372, 383, 385, 387, 388, 389, 390, 391, 392, 393, 398, 413, 423, 428, 431, 438, 442, 454, 463, 464, 471, 478, 482, 487, 512, 526, 527, 575], "input_map": [111, 115], "input_shap": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40], "input_unit": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40], "input_units_allow_dimensionless": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40], "input_units_equival": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40], "input_units_strict": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40], "inputs_map": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40], "ins": 442, "insensit": 199, "insert": [87, 91, 92, 100, 245, 403, 423, 577], "insert_row": [87, 91], "inset": 429, "insid": [50, 83, 102, 109, 114, 116, 149, 175, 191, 192, 193, 195, 200, 203, 204, 205, 223, 245, 261, 366, 370, 377, 378, 391, 393, 401, 428, 446, 451, 454, 456, 459, 461, 467, 470, 477, 481, 483, 484, 485, 489, 491, 511, 521, 523, 524, 527], "inside_geom": 483, "insight": 412, "inspect": [389, 393, 413, 451, 453, 459, 463, 464, 479, 482, 484, 489, 490], "inspir": [377, 401], "instal": [87, 91, 376, 377, 380, 384, 385, 386, 394, 406, 407, 408, 411, 413, 414, 417, 418, 428, 432, 435, 436, 437, 446, 448, 451, 452, 453, 454, 455, 456, 457, 459, 460, 461, 462, 463, 464, 465, 468, 469, 470, 471, 475, 476, 477, 479, 481, 482, 483, 484, 485, 487, 489, 490, 491, 492, 494, 498, 499, 500, 514, 574], "instanc": [16, 19, 20, 26, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 50, 84, 85, 86, 87, 88, 90, 91, 92, 104, 119, 123, 124, 125, 127, 129, 130, 164, 166, 174, 190, 191, 192, 193, 194, 195, 196, 197, 200, 201, 202, 203, 204, 205, 217, 218, 219, 220, 221, 222, 224, 225, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 242, 243, 244, 246, 249, 250, 251, 252, 253, 254, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 269, 270, 271, 272, 273, 274, 275, 283, 322, 328, 364, 366, 367, 368, 371, 373, 377, 383, 388, 389, 392, 393, 399, 401, 404, 428, 449, 451, 454, 465, 476, 478, 479, 481, 483, 484, 485, 500, 504, 514, 526, 527, 550], "instanti": [15, 16, 19, 20, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 84, 90, 104, 123, 192, 193, 195, 197, 204, 205, 388, 393, 448, 452, 476, 477, 482, 485, 487, 498], "instead": [16, 19, 20, 26, 84, 85, 87, 90, 91, 102, 104, 105, 109, 110, 113, 123, 179, 217, 218, 219, 220, 221, 222, 223, 224, 225, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 242, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 269, 270, 271, 272, 273, 274, 275, 377, 378, 380, 382, 384, 385, 387, 388, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 405, 406, 408, 409, 411, 418, 421, 424, 425, 438, 442, 447, 453, 459, 463, 465, 467, 468, 470, 471, 476, 477, 480, 481, 482, 485, 487, 490, 511, 518, 519, 526, 527, 574], "instruct": [377, 386, 394, 406, 408, 409, 417, 428, 432, 436, 463, 489], "instrument": [6, 83, 95, 108, 152, 156, 157, 231, 377, 387, 388, 389, 390, 392, 397, 401, 409, 413, 422, 425, 437, 438, 439, 445, 448, 449, 451, 452, 455, 459, 466, 471, 473, 477, 479, 480, 481, 484, 485, 486, 487, 489, 490, 491, 492, 494, 498, 499, 510, 511, 512, 516, 518, 520, 572, 573], "int": [16, 17, 18, 19, 20, 21, 22, 24, 25, 26, 27, 33, 34, 38, 42, 45, 46, 47, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 69, 82, 83, 84, 85, 87, 88, 90, 91, 93, 94, 102, 103, 104, 105, 108, 109, 110, 112, 117, 119, 123, 124, 125, 126, 129, 130, 132, 140, 141, 146, 147, 148, 149, 150, 151, 152, 153, 154, 156, 157, 159, 160, 161, 162, 163, 164, 165, 168, 169, 172, 175, 179, 180, 185, 190, 191, 192, 193, 194, 195, 196, 197, 200, 201, 202, 203, 204, 205, 210, 212, 213, 214, 216, 217, 218, 220, 221, 222, 224, 225, 227, 228, 229, 230, 232, 233, 234, 235, 236, 237, 238, 239, 240, 242, 246, 247, 248, 249, 250, 251, 252, 253, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 269, 270, 272, 273, 274, 275, 279, 281, 283, 285, 286, 287, 291, 292, 293, 295, 300, 304, 315, 316, 322, 326, 328, 331, 332, 333, 334, 336, 337, 364, 370, 377, 391, 435, 479, 504], "int64": [102, 105, 109, 110, 111, 115, 121, 132, 512], "int_": [17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 217, 218, 221, 225, 227, 228, 229, 239, 240, 242, 246, 248, 250, 251, 252, 257, 262, 264, 265, 266, 267, 270, 274, 519, 531], "int_flux": 475, "integ": [69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 87, 91, 92, 93, 100, 102, 105, 109, 110, 122, 124, 125, 126, 129, 132, 140, 141, 150, 151, 157, 162, 165, 168, 190, 191, 192, 193, 195, 196, 197, 200, 201, 203, 204, 205, 214, 216, 223, 245, 304, 322, 328, 377, 383, 391, 526], "integr": [6, 17, 18, 19, 20, 21, 22, 24, 25, 26, 27, 31, 32, 37, 51, 101, 102, 105, 109, 110, 122, 124, 127, 129, 139, 146, 147, 148, 149, 152, 153, 154, 156, 159, 161, 163, 164, 167, 192, 193, 195, 197, 201, 204, 205, 206, 207, 217, 218, 220, 221, 222, 223, 224, 225, 227, 228, 229, 230, 232, 233, 234, 235, 236, 237, 238, 239, 240, 242, 245, 246, 247, 248, 249, 250, 251, 252, 253, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 269, 270, 272, 273, 274, 275, 276, 277, 279, 315, 376, 384, 386, 388, 390, 391, 392, 394, 395, 397, 401, 403, 416, 418, 419, 423, 424, 428, 433, 434, 435, 436, 437, 438, 439, 442, 451, 453, 454, 456, 470, 473, 475, 476, 477, 482, 483, 485, 500, 502, 510, 512, 518, 533, 553], "integral_error": [19, 20, 26, 217, 218, 221, 225, 227, 228, 229, 233, 239, 240, 242, 246, 248, 250, 251, 252, 257, 262, 264, 265, 266, 267, 270, 274, 395, 425, 473], "integral_flux": 473, "integral_flux_imag": 429, "integrate_geom": [219, 220, 224, 232, 235, 247, 249, 258, 259, 261, 263, 269, 273, 428, 441, 443], "integrate_log_log": [146, 147, 148, 149, 152, 153, 154, 156, 159, 161, 163, 164], "integrate_spectrum": [19, 20, 26, 217, 218, 221, 225, 227, 228, 229, 239, 240, 242, 246, 248, 250, 251, 252, 257, 262, 264, 265, 266, 267, 270, 274, 419, 425], "integrate_spectrum_separ": [17, 18, 21, 22, 24, 25, 27], "intend": [87, 91, 304, 387, 405, 480], "intens": [192, 193, 195, 201, 204, 205, 210, 236, 387, 482, 510], "intent": 382, "interact": [19, 20, 87, 91, 162, 165, 192, 193, 195, 201, 204, 205, 213, 217, 220, 221, 224, 225, 227, 228, 229, 230, 232, 233, 234, 235, 236, 237, 238, 239, 240, 242, 249, 250, 251, 252, 253, 257, 258, 259, 260, 262, 265, 266, 267, 272, 273, 376, 377, 378, 386, 387, 388, 389, 393, 397, 400, 413, 422, 447, 459, 467, 479, 482, 484, 485, 494, 498, 499, 523, 526, 550, 574], "interchang": 526, "interest": [114, 116, 125, 129, 210, 283, 382, 390, 391, 395, 397, 407, 449, 459, 463, 465, 473, 476, 477, 479, 481, 483, 486, 489, 490, 500, 511, 512, 550, 573, 576, 577], "interfac": [6, 11, 15, 19, 20, 87, 91, 208, 210, 213, 214, 215, 216, 217, 220, 221, 224, 225, 227, 228, 229, 230, 232, 233, 234, 235, 236, 237, 238, 239, 240, 242, 249, 250, 251, 252, 253, 257, 258, 259, 260, 262, 265, 266, 267, 272, 273, 377, 381, 382, 383, 387, 389, 390, 392, 394, 395, 396, 397, 418, 421, 423, 424, 425, 428, 432, 435, 436, 442, 445, 447, 452, 455, 456, 459, 467, 468, 479, 485, 489, 494, 499, 500, 501, 510, 511, 514, 522, 525, 550, 571, 572, 573, 574], "intermedi": [203, 386, 393, 403, 413, 448, 469], "intern": [15, 19, 20, 26, 87, 91, 122, 124, 135, 136, 137, 138, 169, 175, 200, 217, 218, 221, 225, 227, 228, 229, 233, 239, 240, 242, 246, 248, 250, 251, 252, 257, 262, 264, 265, 266, 267, 270, 274, 279, 304, 316, 377, 389, 391, 393, 396, 401, 428, 430, 439, 442, 446, 452, 459, 468, 474, 477, 480, 482, 489, 492, 498, 510, 514, 569], "interp": [19, 20, 154, 192, 193, 195, 197, 201, 202, 204, 205, 213, 217, 220, 221, 224, 225, 227, 228, 229, 230, 232, 233, 234, 235, 236, 237, 238, 239, 240, 242, 247, 248, 249, 250, 251, 252, 253, 257, 258, 259, 260, 262, 265, 266, 267, 272, 273, 317, 372, 400, 405, 441, 443, 454, 460, 464, 467, 470, 480, 481, 482, 485, 490, 491, 492, 526, 527, 550, 551], "interp1": 482, "interp1d": 317, "interp2": 482, "interp_by_coord": [192, 193, 195, 201, 204, 205, 273, 439, 482], "interp_by_pix": [192, 193, 195, 201, 204, 205, 269, 270, 482], "interp_kwarg": [68, 146, 147, 148, 149, 152, 153, 154, 156, 159, 161, 163, 164, 225, 269, 270, 273, 274, 377, 480, 490, 559], "interp_map": [192, 193, 195, 201, 204, 205], "interp_missing_data": [146, 147, 148, 149, 152, 153, 154, 156, 159, 161, 163, 164], "interp_param": 377, "interp_scal": [101, 284, 317], "interp_to_geom": [192, 193, 195, 201, 204, 205, 425, 441, 482, 490, 514], "interp_weight": 191, "interpol": [6, 26, 94, 101, 146, 147, 148, 149, 150, 151, 152, 153, 154, 156, 157, 159, 161, 162, 163, 164, 165, 172, 191, 192, 193, 195, 197, 201, 202, 204, 205, 225, 237, 247, 248, 269, 270, 272, 273, 274, 284, 316, 317, 318, 376, 388, 389, 390, 418, 423, 428, 430, 433, 436, 438, 439, 440, 441, 442, 443, 451, 464, 480, 481, 485, 490, 491, 514, 522, 526, 559], "interpolatedunivariatesplin": 272, "interpret": [91, 102, 105, 127, 140, 141, 193, 197, 203, 204, 205, 322, 395, 405, 482, 512, 527], "intersect": [89, 175, 176, 180, 200, 391, 469], "interspers": 382, "interstellar": [45, 463], "interv": [52, 53, 78, 82, 83, 86, 88, 89, 91, 92, 100, 101, 103, 108, 124, 129, 173, 197, 202, 210, 222, 230, 234, 236, 237, 238, 253, 260, 272, 275, 386, 387, 391, 392, 395, 401, 409, 422, 424, 425, 428, 437, 438, 443, 468, 470, 473, 479, 482, 491, 499, 511, 526, 573, 576], "interval_edg": 202, "intrins": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 246, 293, 388, 392], "intrinsic_model": 447, "intro_map": 437, "introduc": [19, 20, 192, 193, 195, 197, 201, 204, 205, 213, 217, 220, 221, 224, 225, 227, 228, 229, 230, 232, 233, 234, 235, 236, 237, 238, 239, 240, 242, 249, 250, 251, 252, 253, 257, 258, 259, 260, 262, 265, 266, 267, 272, 273, 377, 384, 385, 387, 389, 390, 391, 392, 394, 397, 399, 402, 405, 419, 421, 422, 424, 425, 428, 430, 431, 435, 436, 437, 439, 442, 443, 462, 474, 481, 485, 527, 532, 574, 577], "introduct": [380, 398, 399, 400, 418, 422, 423, 424, 425, 449, 452, 485, 498, 499, 503], "introductori": 474, "introspect": 304, "intuit": [398, 577], "invalid": [363, 377, 391, 404, 405, 428, 453, 457, 463, 492], "invalid_pixel": 483, "invers": [19, 20, 26, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 203, 217, 218, 221, 225, 227, 228, 229, 233, 236, 239, 240, 242, 246, 248, 250, 251, 252, 257, 262, 264, 265, 266, 267, 270, 274, 285, 286, 287, 326, 333, 390, 463, 483, 485, 487, 550], "inverse_al": [19, 20, 26, 217, 218, 221, 225, 227, 228, 229, 233, 239, 240, 242, 246, 248, 250, 251, 252, 257, 262, 264, 265, 266, 267, 270, 274], "inverse_cdf": 463, "inversecdf": 390, "inversecdfsampl": [390, 420], "inversecompton": [246, 550], "invert": [91, 191, 203, 500], "invest": 380, "investig": [462, 469, 473], "involv": [87, 91, 102, 105, 109, 110, 377, 382, 391, 393, 395, 399, 455, 574], "io": [13, 83, 86, 87, 91, 125, 185, 195, 200, 210, 274, 380, 386, 397, 407, 419, 422, 434, 438, 442, 463, 479, 480, 482, 489, 511, 514, 525, 527], "iop": 292, "iopscienc": 292, "ipix": 191, "ipykernel": [409, 411], "ipynb": [385, 397, 419, 422, 446, 447, 448, 449, 451, 452, 453, 454, 455, 456, 457, 459, 460, 461, 462, 463, 464, 465, 467, 468, 469, 470, 471, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 489, 490, 491, 492, 496, 498, 499, 500, 530, 531, 532, 533, 534, 535, 536, 537, 538, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 561, 562, 563, 564, 565, 566, 567, 568, 569], "ipynb_to_galleri": 377, "ipython": [87, 91, 376, 377, 393, 394, 408, 412, 420, 446, 448, 449, 451, 452, 453, 454, 455, 456, 457, 459, 460, 461, 462, 463, 464, 465, 467, 468, 469, 470, 471, 475, 476, 477, 478, 479, 481, 482, 483, 484, 485, 487, 489, 490, 491, 492, 494, 498, 499, 500, 513, 574], "ipython3": 410, "ipywidget": 482, "irap": 397, "irf": [6, 82, 88, 96, 102, 103, 105, 108, 109, 110, 111, 112, 113, 115, 132, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 172, 178, 179, 181, 182, 183, 185, 187, 188, 191, 200, 203, 261, 303, 377, 378, 383, 387, 388, 389, 390, 393, 396, 397, 398, 399, 405, 409, 417, 419, 422, 424, 425, 428, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 441, 442, 443, 445, 447, 448, 449, 451, 452, 453, 454, 455, 456, 459, 463, 464, 467, 468, 470, 481, 483, 486, 487, 488, 490, 491, 492, 494, 498, 499, 510, 511, 514, 516, 517, 518, 520, 521, 572, 573], "irf_dict": 166, "irf_dl3_hdu_specif": 480, "irf_fil": [88, 147, 151, 152, 153, 162, 446, 454, 467, 470, 480, 489], "irf_filenam": [463, 464, 480, 489], "irf_map": [150, 151, 157, 162, 165], "irf_path": 463, "irfmap": [150, 151, 162, 165, 409, 425, 514], "irfmetadata": 404, "irfmodel": 388, "irfs1": 489, "irfs2": 489, "irfs_path": 82, "irfstack": [425, 434], "irregular": [191, 203, 526], "irrespect": [390, 459, 482, 526], "is_align": [191, 197, 202, 203], "is_all_point_sky_region": 200, "is_all_same_energy_shap": 100, "is_all_same_shap": 100, "is_all_same_typ": 100, "is_allclos": [146, 147, 148, 149, 152, 153, 154, 156, 159, 161, 163, 164, 191, 192, 193, 194, 195, 196, 197, 200, 201, 202, 203, 204, 205], "is_allski": [190, 191, 200, 203], "is_bkg": 107, "is_contigu": [202, 482], "is_convertible_to_flux_sed_typ": [122, 124], "is_energy_axi": 197, "is_energy_depend": [219, 220, 222, 224, 230, 232, 234, 235, 236, 237, 238, 247, 249, 253, 258, 259, 260, 263, 269, 272, 273, 275, 441, 485], "is_fixed_rad_max": 164, "is_flat": [190, 191, 196, 200, 203], "is_hpx": [191, 200, 203], "is_imag": [190, 191, 200, 203], "is_mask": [192, 193, 195, 201, 204, 205], "is_norm": [405, 430, 443], "is_norm_spectral_model": [19, 20, 26, 217, 218, 221, 225, 227, 228, 229, 233, 239, 240, 242, 246, 248, 250, 251, 252, 257, 262, 264, 265, 266, 267, 270, 274, 428, 485], "is_nul": 482, "is_pointed_observ": 83, "is_pointlik": [71, 74, 75, 76, 78, 146, 147, 148, 149, 152, 153, 154, 156, 159, 161, 163, 164, 428], "is_region": [191, 200, 203], "is_regular": [191, 200, 203], "is_ul": [67, 122, 124, 428, 443, 452, 476, 478, 500], "is_unidimension": 196, "isf": [479, 576], "isinst": [377, 388, 391, 400, 404, 405], "ism": [52, 53, 550], "isn": [380, 384, 391, 393, 396, 407, 461, 574], "isnan": [482, 483], "iso": [88, 124, 202, 207, 442, 470, 484, 490, 526, 568], "iso_p8r2_source_v6_v06": [484, 490], "isol": [391, 408, 483], "isot": [358, 578], "isotherm": [22, 502], "isotrop": [47, 220, 278, 484], "issu": [19, 20, 26, 87, 91, 217, 218, 221, 225, 227, 228, 229, 233, 239, 240, 242, 246, 248, 250, 251, 252, 257, 262, 264, 265, 266, 267, 270, 274, 377, 378, 380, 385, 386, 388, 389, 391, 394, 397, 402, 403, 404, 405, 406, 409, 410, 411, 418, 430, 431, 433, 434, 435, 436, 437, 439, 440, 441, 442, 443, 461, 483, 489, 510, 514, 574, 575], "item": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 87, 91, 92, 100, 199, 245, 397, 404], "iter": [87, 91, 92, 100, 122, 124, 132, 192, 193, 195, 196, 197, 199, 201, 202, 204, 205, 245, 380, 383, 385, 393, 429, 455, 470], "iter_by_axi": [122, 124, 192, 193, 195, 201, 204, 205], "iter_by_axis_data": 201, "iter_by_coord": 420, "iter_by_edg": [197, 202], "iter_by_imag": [192, 193, 195, 201, 204, 205, 437], "iter_by_image_data": [192, 193, 195, 201, 204, 205, 482], "iter_by_image_index": [192, 193, 195, 201, 204, 205], "iter_by_pix": 420, "iter_with_reshap": 196, "itercol": [87, 91], "iterrow": [87, 91], "itertool": 479, "its": [19, 20, 26, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 77, 102, 105, 109, 110, 122, 124, 168, 169, 178, 191, 197, 199, 217, 218, 221, 224, 225, 227, 228, 229, 233, 239, 240, 242, 246, 248, 250, 251, 252, 257, 262, 264, 265, 266, 267, 270, 274, 283, 377, 380, 383, 386, 387, 389, 392, 393, 394, 396, 401, 403, 404, 407, 410, 428, 442, 443, 448, 452, 453, 456, 463, 464, 468, 469, 474, 476, 478, 479, 481, 482, 483, 484, 485, 487, 498, 500, 503, 519, 521, 523, 525, 526, 527, 573, 576], "itself": [87, 91, 376, 377, 392, 403, 448, 468, 469, 471, 487, 574], "ivoa": [377, 443], "j": [19, 20, 23, 102, 109, 127, 134, 143, 286, 378, 380, 510], "j0001": [476, 500], "j0002": [476, 500], "j0003": [476, 500], "j0006": 476, "j0007": 500, "j0008": [476, 500], "j0009": 500, "j0010": 476, "j0013": 476, "j0021": 476, "j0022": 476, "j0025": 476, "j0031": 476, "j0349": 476, "j0521": 451, "j0534": [476, 500], "j0633": 500, "j0835": [449, 500], "j0851": 476, "j1036": 476, "j1104": [476, 500], "j1506": 449, "j1507": 449, "j1513": 476, "j1514": 476, "j1555": 500, "j1653": 476, "j1713": 448, "j1731": 484, "j1732": 484, "j1741": 484, "j1744": 484, "j1745": 484, "j1746": 484, "j1747": 484, "j1748": 484, "j1753": 484, "j1800": 484, "j1801": 484, "j1802": 484, "j1809": 484, "j1811": 484, "j1824": 476, "j1825": 462, "j1843": 67, "j1844": 67, "j2028": 476, "j2158": 476, "j2347": 500, "j2350": 500, "j2351": 500, "j2352": 500, "j2356": 500, "j2357": [476, 500], "j2358": [476, 500], "j2359": [476, 500], "j_": 23, "jackson": [87, 91], "jacob": [418, 437], "jacobian": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 424], "jalel": [425, 428], "jan": [382, 383, 386, 389, 394, 398, 415], "jana": 443, "januari": [384, 386, 402], "jargon": 409, "jason": 418, "javascript": [87, 91], "jax": 395, "jbernet": 443, "jean": [436, 437], "jeffrei": 487, "jeltema": 502, "jep": 382, "jet": 368, "jfact": 475, "jfact_decai": 475, "jfact_map": 475, "jfactor": [19, 20, 442], "jfactori": 475, "jhejharw": 473, "jj": 208, "jk": [102, 109, 510], "jkl": 510, "jl": 510, "jo": [87, 91], "job": [93, 125, 126, 129, 132, 168, 430], "johann": [421, 428, 432, 433, 434, 435, 436, 437], "john": [87, 91], "join": [379, 388, 389, 489], "joint": [100, 109, 110, 119, 130, 133, 134, 143, 145, 210, 283, 385, 386, 389, 393, 397, 399, 409, 418, 419, 421, 422, 437, 438, 445, 448, 449, 451, 452, 453, 455, 462, 466, 470, 477, 478, 479, 481, 485, 486, 487, 490, 494, 498, 512, 514, 571, 572, 573], "joint_fit": 471, "joint_result": 471, "jointli": [486, 491], "jonathan": [432, 433], "jose": [428, 430, 436], "joshi": 428, "jos\u00e9": [385, 393, 397, 417, 418, 419, 420, 421, 422, 423, 424, 425, 428, 436, 437, 438], "journal": 403, "jouvin": [418, 420, 421, 422, 425, 433, 434, 435, 436, 437], "jqueri": [87, 91], "jskwarg": [87, 91], "json": [16, 84, 90, 104, 123, 406, 430, 432, 436], "json_data": [16, 84, 90, 104, 123], "json_encode_earth_loc": 90, "json_schema": [16, 84, 90, 104, 123], "json_schema_input_typ": 90, "jsonschema": [394, 421, 422], "jsviewer": [87, 91, 461], "juan": 443, "jul": [383, 392, 394, 396, 415], "juli": [383, 386, 391, 393, 394, 396, 400, 402, 404, 469, 473], "julia": 443, "julian": 578, "julien": [434, 435, 436], "jun": [391, 393, 394, 399, 400], "june": [391, 395, 415], "junior": [66, 397], "jupyt": [376, 384, 393, 394, 397, 408, 412, 414, 419, 434, 435, 436, 438, 446, 447, 448, 449, 451, 452, 453, 454, 455, 456, 457, 459, 460, 461, 462, 463, 464, 465, 467, 468, 469, 470, 471, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 489, 490, 491, 492, 494, 496, 498, 499, 500, 528, 530, 531, 532, 533, 534, 535, 536, 537, 538, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 561, 562, 563, 564, 565, 566, 567, 568, 569, 574], "jupyterlab": [376, 394, 397, 413, 446, 448, 451, 452, 453, 454, 455, 456, 457, 459, 460, 461, 462, 463, 464, 465, 468, 469, 470, 471, 475, 476, 477, 479, 481, 482, 483, 484, 485, 487, 489, 490, 491, 492, 498, 499, 500], "jupytext": 397, "just": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 83, 86, 152, 352, 377, 378, 379, 380, 382, 385, 387, 391, 393, 394, 395, 397, 406, 407, 408, 410, 436, 438, 447, 451, 452, 454, 459, 461, 463, 468, 469, 471, 474, 477, 482, 490, 491, 498, 500, 511, 527, 574], "juypter": 393, "jyear": [87, 91], "k": [19, 33, 52, 53, 102, 109, 199, 221, 272, 328, 449, 451, 453, 476, 479, 482, 484, 490, 510, 527, 531, 543, 550, 561], "kai": [436, 437], "kaori": 420, "kaspi": [31, 39, 45], "katrin": [405, 441, 442, 443], "kb": 385, "keep": [13, 87, 91, 100, 122, 160, 192, 193, 195, 201, 204, 205, 210, 377, 378, 380, 382, 383, 384, 385, 391, 394, 395, 396, 397, 400, 401, 426, 436, 456, 457, 462, 467, 473, 479, 484, 490], "keep_byteord": [87, 91], "keep_column": [87, 91], "keep_mc_id": [103, 108], "keepdim": [160, 162, 165, 192, 193, 195, 201, 204, 205, 417, 422, 481], "kei": [16, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 69, 82, 84, 87, 89, 90, 91, 102, 104, 105, 109, 110, 117, 123, 132, 199, 210, 340, 345, 346, 363, 385, 387, 394, 399, 401, 404, 414, 437, 447, 477, 485, 540], "kept": [89, 102, 105, 109, 110, 122, 124, 125, 129, 146, 147, 148, 149, 150, 151, 152, 153, 154, 156, 157, 159, 161, 162, 163, 164, 165, 190, 191, 192, 193, 195, 196, 200, 201, 203, 204, 205, 377, 383, 397, 401, 447, 473, 512], "kernel": [102, 105, 109, 110, 117, 121, 127, 128, 132, 149, 150, 151, 160, 162, 165, 167, 172, 177, 179, 182, 193, 203, 205, 383, 404, 409, 411, 423, 424, 429, 434, 438, 439, 455, 457, 471, 481, 482, 483, 490, 500, 510, 514, 518], "kernel_width": [132, 455, 461], "kernelbackgroundestim": 424, "kernelbackgroundmapestim": 398, "kev": [107, 132, 197, 455, 477, 478, 527], "keyboard": 413, "keyerror": [91, 199, 401], "keyword": [16, 19, 20, 26, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 68, 82, 83, 84, 86, 87, 88, 90, 91, 95, 101, 102, 104, 105, 109, 110, 123, 124, 126, 127, 144, 145, 146, 147, 148, 149, 152, 153, 154, 156, 159, 160, 161, 162, 163, 164, 165, 190, 191, 192, 193, 195, 196, 197, 199, 200, 201, 202, 203, 204, 205, 208, 210, 213, 217, 218, 219, 220, 221, 222, 223, 224, 225, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 242, 245, 246, 247, 248, 249, 250, 251, 252, 253, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 269, 270, 271, 272, 273, 274, 275, 278, 284, 286, 316, 324, 325, 346, 358, 360, 361, 364, 365, 366, 370, 371, 372, 373, 374, 404, 424, 428, 431, 439, 440, 453, 463, 464, 477, 482, 491, 512, 527, 538], "kg": 52, "kh": 473, "khelifi": [420, 422, 425, 428, 431, 435, 436, 437, 439, 440], "kh\u00e9lifi": [403, 439, 441, 442, 443], "kind": [87, 91, 352, 388, 389, 390, 395, 396, 400, 403, 437], "kinet": 44, "king": [161, 421, 432, 433, 434, 435, 436, 437, 480, 520], "kirsti": [441, 442, 443], "kl": 510, "klepser": 432, "km": [32, 37], "km2": 489, "km2a": [57, 70], "know": [378, 380, 382, 386, 391, 393, 394, 401, 407, 419, 436, 437, 438, 461, 464, 475, 480, 481, 482, 489, 491, 492, 574], "knowledg": [405, 413, 449, 454, 460, 462, 465, 467, 468, 479, 481, 482, 484, 487], "known": [285, 287, 304, 390, 451, 455, 457, 462, 468, 481, 482, 483, 500, 514, 524, 574, 575, 576], "koenig": 286, "konig": 286, "konrad": 443, "kornecki": 443, "kovalev": 474, "kpc": [17, 18, 21, 22, 24, 25, 27, 29, 33, 34, 38, 246, 304, 307, 475, 476, 508, 550], "kurt": 443, "kwarg": [19, 20, 26, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 53, 56, 58, 59, 60, 61, 62, 63, 64, 65, 66, 83, 86, 87, 88, 91, 101, 102, 105, 109, 110, 124, 125, 126, 127, 129, 144, 146, 147, 148, 149, 152, 153, 154, 156, 159, 160, 161, 162, 163, 164, 165, 174, 190, 191, 192, 193, 194, 195, 196, 197, 199, 200, 201, 202, 203, 204, 205, 208, 209, 210, 212, 217, 218, 219, 220, 221, 222, 223, 224, 225, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 269, 270, 271, 272, 273, 274, 275, 278, 284, 316, 327, 352, 364, 365, 366, 369, 371, 372, 373, 374, 377, 388, 404, 405, 441, 449, 453, 463, 471, 481, 492, 562], "kwargs_ax": [370, 457, 459], "kwargs_background": [109, 110], "kwargs_colorbar": [146, 147, 149, 152, 153, 154, 159, 161, 163, 205, 365], "kwargs_count": [109, 110], "kwargs_excess": [109, 110], "kwargs_extens": [219, 220, 224, 232, 235, 247, 249, 258, 259, 263, 269, 273, 462], "kwargs_fit": [109, 110, 370], "kwargs_fp": 101, "kwargs_hist": [370, 457, 459], "kwargs_list": 199, "kwargs_model": 101, "kwargs_npred_sign": [109, 110], "kwargs_point": [200, 223, 245, 453], "kwargs_posit": [219, 220, 224, 232, 235, 247, 249, 258, 259, 263, 269, 273, 462], "kwargs_residu": [101, 109, 110], "kwargs_saf": [109, 110], "kwargs_spati": [102, 105, 109, 110, 459, 499], "kwargs_spectr": [102, 105, 109, 110, 459, 499], "kwargs_spectrum": [101, 109, 110], "kwsj9tzk": 473, "l": [23, 26, 51, 54, 101, 102, 109, 110, 172, 374, 378, 391, 400, 403, 447, 448, 451, 452, 453, 454, 455, 456, 457, 459, 461, 462, 467, 470, 471, 476, 477, 479, 481, 482, 483, 485, 486, 487, 489, 490, 498, 499, 500, 510, 514, 527, 550, 559, 573, 575, 576, 577], "l06": [48, 504], "l_": [52, 53], "l_0": [51, 507, 531, 532], "l_snr": 44, "la": 434, "lab": [403, 409, 411, 413, 436], "label": [92, 194, 197, 202, 223, 245, 302, 365, 366, 371, 374, 377, 378, 381, 386, 390, 391, 406, 407, 428, 430, 439, 440, 442, 446, 447, 449, 451, 453, 457, 459, 460, 464, 465, 468, 469, 471, 474, 475, 479, 482, 485, 486, 487, 500, 507, 508, 516, 540, 546, 549, 550, 554, 559], "label_axi": [194, 482], "label_axis2": 482, "labelcolor": 446, "labelmapaxi": [428, 442], "lack": [199, 392, 471], "lafferti": [416, 573], "lafferty1994": 573, "lai": 483, "lambda": [67, 228, 229, 286, 370, 476, 489, 544, 576], "lambda_": [228, 229, 283, 449, 451, 459, 544, 546], "lancast": [134, 143], "land": 407, "langl": 19, "languag": [384, 396], "laplac": [235, 533], "lar": [393, 417, 418, 419, 435, 436, 437, 440, 442], "larg": [67, 87, 91, 192, 193, 195, 201, 204, 205, 269, 271, 273, 377, 380, 382, 383, 391, 397, 398, 418, 428, 437, 438, 443, 446, 451, 457, 469, 476, 483, 489, 490, 491, 500, 510, 512, 514, 515, 521, 527, 533, 571, 574, 579], "large_scale_compon": [67, 476], "larger": [27, 131, 150, 151, 157, 162, 165, 283, 292, 378, 385, 396, 442, 446, 448, 451, 477, 481, 482, 483, 487, 511, 527, 533, 575, 576], "largest": [102, 105, 109, 110, 205, 377], "last": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 92, 94, 100, 192, 193, 194, 195, 197, 201, 204, 205, 245, 334, 374, 384, 387, 389, 399, 403, 406, 407, 409, 411, 417, 418, 474, 521, 523], "lat": [16, 47, 58, 60, 61, 62, 64, 65, 69, 71, 74, 75, 77, 78, 83, 86, 91, 94, 96, 102, 105, 109, 111, 115, 121, 125, 126, 128, 132, 150, 151, 157, 162, 165, 168, 192, 193, 195, 198, 201, 203, 204, 205, 219, 220, 224, 231, 232, 235, 247, 249, 258, 259, 261, 263, 269, 271, 273, 278, 283, 306, 307, 310, 332, 377, 378, 385, 386, 387, 388, 389, 390, 396, 397, 400, 407, 409, 414, 417, 422, 435, 436, 437, 445, 449, 452, 455, 456, 457, 459, 461, 465, 468, 469, 473, 476, 477, 478, 480, 481, 482, 483, 484, 485, 486, 493, 494, 498, 499, 500, 502, 509, 511, 512, 514, 519, 526, 527, 531, 532, 533, 534, 535, 536, 537, 571, 578], "lat_0": [224, 232, 235, 249, 258, 259, 273, 392, 400, 455, 456, 459, 460, 462, 463, 464, 467, 468, 476, 477, 484, 485, 490, 498, 499, 531, 532, 533, 535, 536, 537, 538], "lat_0_err": 462, "lat_pnt": [306, 310], "lat_rang": 332, "lat_t": [306, 310], "later": [377, 382, 383, 384, 388, 389, 390, 393, 394, 395, 396, 397, 398, 416, 418, 428, 429, 431, 432, 438, 447, 451, 453, 459, 460, 477, 481, 482, 485, 490, 500, 510], "latest": [125, 185, 274, 304, 380, 384, 397, 402, 403, 410, 439, 446, 454, 456, 459, 460, 461, 467, 470, 479, 511, 514, 527], "latex": [377, 378], "latex_inlin": 442, "latitud": [94, 190, 191, 192, 193, 198, 200, 203, 204, 205, 332, 364, 421, 465, 482, 485, 519, 526, 534], "latpol": 482, "latter": [179, 210, 388, 390, 392, 398, 401, 404, 422, 453, 454, 463, 464, 467, 483, 484, 521, 523, 575], "launch": [409, 411, 436, 574], "laura": [425, 428, 430, 431, 437, 439, 441, 442, 443], "law": [27, 101, 117, 122, 124, 126, 131, 139, 160, 162, 165, 217, 227, 228, 229, 250, 251, 252, 253, 262, 265, 266, 267, 276, 286, 331, 390, 416, 422, 436, 445, 447, 454, 456, 459, 463, 465, 467, 469, 470, 471, 473, 484, 485, 487, 514, 528, 540, 560, 566], "law2": 553, "layer": [87, 91, 389, 396], "layout": [428, 459, 467, 482, 489, 498, 499], "lazi": [88, 100, 102, 105, 109, 110, 271, 313, 436], "lazili": 102, "lazyfitsdata": 424, "lc": [86, 129, 202, 390, 392], "lc_1d": [122, 124, 144, 468, 469, 470, 474], "lc_3d": 468, "lc_estim": 392, "lc_maker_1d": [468, 469, 470], "lc_maker_3d": 468, "lc_new": 469, "ldf0n": 473, "le": 90, "lea": 425, "lead": [121, 377, 386, 391, 396, 398, 400, 402, 403, 421, 487, 489, 491, 502, 574], "leak": [453, 523], "leakag": [286, 468], "learn": [147, 152, 377, 394, 397, 406, 409, 411, 413, 437, 449, 451, 455, 461, 462, 463, 465, 474, 476, 477, 479, 482, 485, 487, 489, 494, 500, 574], "least": [43, 44, 133, 142, 377, 380, 382, 386, 463, 474, 526], "leav": [382, 389, 391, 392, 394, 397, 406, 408, 484], "lefaucheur": [434, 435, 436], "left": [21, 24, 25, 27, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 50, 51, 52, 53, 87, 91, 102, 109, 122, 124, 129, 132, 150, 152, 192, 193, 195, 201, 204, 205, 229, 233, 252, 265, 288, 294, 377, 385, 387, 391, 393, 396, 400, 413, 455, 461, 468, 470, 484, 512, 521, 524, 532, 533, 540, 541, 544, 545, 547, 548, 550, 552, 555, 556, 557, 558, 562, 563, 564, 566, 575, 576, 577], "legaci": [377, 436, 437], "legacy_altaz": 85, "legal": [87, 91], "legend": [374, 446, 447, 449, 451, 453, 459, 460, 464, 468, 469, 471, 474, 475, 479, 485, 486, 487, 490, 507, 508, 516, 540, 546, 549, 550, 554, 559], "legend_kwarg": 374, "lemi\u00e8r": 436, "len": [83, 283, 374, 455, 462, 463, 464, 469, 471, 473, 474, 476, 481, 484, 500, 514], "lenain": [436, 437], "length": [19, 20, 26, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 80, 82, 87, 91, 94, 168, 190, 191, 192, 193, 195, 196, 200, 201, 203, 204, 205, 217, 218, 219, 220, 221, 222, 223, 224, 225, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 242, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 269, 270, 271, 272, 273, 274, 275, 286, 316, 370, 403, 449, 451, 454, 461, 465, 473, 476, 479, 482, 490, 500, 531], "lengthi": 482, "lennarz": [419, 433, 435], "leq": [531, 536, 537], "less": [77, 191, 193, 197, 237, 272, 294, 377, 382, 384, 395, 407, 436, 479, 485, 486, 487], "let": [67, 277, 377, 380, 382, 386, 391, 394, 409, 412, 436, 437, 438, 449, 452, 453, 454, 455, 459, 460, 461, 462, 463, 465, 470, 471, 476, 477, 479, 482, 483, 485, 487, 490, 498, 500, 574], "level": [6, 11, 15, 16, 83, 84, 90, 104, 121, 123, 210, 285, 287, 377, 378, 380, 381, 382, 388, 390, 392, 396, 397, 398, 401, 404, 409, 413, 420, 421, 422, 423, 424, 428, 436, 443, 445, 448, 449, 451, 452, 455, 456, 457, 459, 461, 463, 467, 468, 469, 470, 471, 474, 475, 478, 479, 484, 486, 489, 490, 491, 492, 494, 496, 500, 501, 510, 511, 512, 519, 521, 522, 572, 573, 574, 578], "levelnam": 377, "levmar": [210, 479], "lf": 407, "lgpl": 377, "lgtm": 407, "lhaaso": [55, 57], "li": [117, 121, 175, 383, 446, 455, 457, 463, 478, 573, 576], "lib": [341, 446, 448, 451, 452, 453, 454, 455, 456, 457, 459, 460, 461, 462, 463, 464, 465, 467, 468, 469, 470, 471, 473, 475, 476, 477, 479, 481, 482, 483, 484, 485, 487, 489, 490, 491, 492, 498, 499, 500, 538, 546, 562], "librari": [87, 91, 377, 382, 383, 387, 397, 403, 414, 448, 451, 463, 485, 489, 499, 502, 511, 514, 572, 574], "licenc": 403, "licens": [403, 413], "lie": [190, 191, 197, 200, 203, 478], "life": [384, 479], "lifetim": [20, 443], "lifetime_age_of_univers": 20, "light": [15, 73, 77, 129, 136, 225, 237, 293, 381, 388, 390, 393, 397, 401, 409, 422, 424, 425, 432, 435, 437, 442, 443, 445, 447, 472, 473, 474, 494, 512, 513, 523, 528, 570, 572], "light_curv": [16, 237, 397, 437, 445, 452, 456, 457, 459, 468, 472, 498, 569], "light_curve_flar": [445, 469, 472], "light_curve_model": 569, "light_curve_simul": [445, 470, 472], "lightcrv_pksb1222": [237, 569], "lightcurv": [71, 73, 74, 75, 77, 78, 118, 124, 129, 135, 136, 137, 138, 144, 201, 202, 237, 290, 291, 293, 386, 388, 393, 396, 398, 401, 409, 420, 422, 423, 424, 428, 434, 435, 436, 437, 439, 440, 442, 443, 445, 468, 469, 472, 478, 494, 509, 514, 569], "lightcurve1": 135, "lightcurve2": 135, "lightcurve_at_energi": 401, "lightcurveconfig": 16, "lightcurveestim": [118, 392, 393, 398, 401, 409, 420, 422, 424, 425, 428, 436, 437, 442, 468, 469, 470, 473, 514], "lightcurvetablemodel": [388, 390], "lightcurvetempl": 388, "lightcurvetemplatemodel": [441, 442], "lightcurvetemplatetemporalmodel": [268, 400, 439, 442, 464, 485, 569], "like": [19, 20, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 46, 50, 52, 53, 67, 80, 82, 87, 88, 91, 140, 141, 156, 164, 192, 193, 195, 199, 201, 204, 205, 213, 217, 220, 221, 224, 225, 227, 228, 229, 230, 232, 233, 234, 235, 236, 237, 238, 239, 240, 242, 249, 250, 251, 252, 253, 257, 258, 259, 260, 262, 265, 266, 267, 272, 273, 304, 324, 334, 376, 377, 378, 380, 382, 383, 384, 385, 387, 388, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 403, 405, 406, 408, 409, 413, 419, 428, 430, 431, 435, 436, 438, 439, 441, 442, 446, 447, 449, 451, 452, 453, 454, 457, 464, 465, 471, 474, 475, 477, 479, 480, 482, 486, 487, 489, 490, 494, 498, 500, 502, 503, 510, 514, 519, 527, 537, 572, 574, 575, 576, 577], "likelhood": 389, "likelihood": [100, 101, 102, 105, 110, 121, 122, 123, 124, 126, 132, 133, 142, 284, 301, 377, 383, 386, 389, 390, 393, 395, 397, 398, 399, 401, 409, 416, 418, 419, 422, 429, 432, 435, 437, 438, 443, 449, 451, 452, 453, 455, 461, 465, 468, 469, 471, 477, 478, 479, 481, 487, 490, 498, 499, 502, 510, 512, 514, 550, 572, 573, 575, 576], "likelihood_profil": [388, 418], "likelihood_typ": 423, "likewis": [193, 205], "lima": 117, "lima1983": [512, 573, 576], "lima_map": 457, "lima_maps2": 457, "limamapestim": [398, 424], "limit": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 52, 53, 77, 80, 87, 91, 101, 112, 121, 122, 123, 124, 125, 126, 129, 130, 132, 133, 142, 149, 164, 167, 197, 214, 216, 250, 284, 285, 287, 324, 325, 364, 383, 385, 386, 388, 389, 390, 391, 392, 394, 395, 397, 398, 400, 401, 405, 418, 424, 428, 435, 436, 437, 438, 443, 446, 451, 455, 459, 462, 465, 468, 477, 478, 479, 482, 483, 486, 490, 498, 510, 512, 514, 523, 532, 550, 559, 572, 573, 577], "lin": [19, 20, 197, 201, 202, 205, 213, 217, 220, 221, 224, 225, 227, 228, 229, 230, 232, 233, 234, 235, 236, 237, 238, 239, 240, 242, 247, 248, 249, 250, 251, 252, 253, 257, 258, 259, 260, 262, 265, 266, 267, 272, 273, 284, 316, 317, 318, 405, 464, 480, 482, 492, 527, 550], "line": [6, 13, 46, 82, 83, 87, 91, 101, 102, 105, 109, 110, 153, 159, 161, 163, 200, 201, 223, 245, 336, 337, 374, 376, 378, 380, 383, 386, 388, 391, 393, 394, 401, 407, 408, 409, 411, 413, 422, 433, 436, 459, 479, 481, 485, 502, 514, 527, 572], "line2d": [200, 223, 245], "linear": [19, 20, 26, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 146, 147, 148, 149, 152, 154, 156, 159, 164, 192, 193, 195, 201, 202, 204, 205, 217, 218, 221, 225, 227, 228, 229, 233, 237, 238, 239, 240, 242, 246, 248, 250, 251, 252, 257, 262, 264, 265, 266, 267, 269, 270, 272, 273, 274, 316, 377, 439, 445, 459, 464, 465, 467, 482, 485, 490, 498, 499, 528, 570], "linear_model": 565, "linearli": [202, 205, 482, 510], "linearsegmentedcolormap": [367, 368], "linearstretch": [367, 368], "lineartemporalmodel": [268, 485, 565], "lineno": 377, "liner": [272, 391], "linestyl": [446, 471, 473, 475, 487, 508, 527, 531, 532], "linewidth": [374, 378, 473], "linhoff": [440, 441, 442, 443], "link": [67, 69, 80, 101, 223, 225, 245, 283, 380, 382, 385, 386, 389, 397, 403, 407, 413, 414, 425, 428, 430, 434, 435, 436, 447, 448, 451, 452, 453, 454, 456, 459, 460, 467, 469, 470, 476, 479, 485, 487, 489, 499, 500, 514, 559, 571], "linkag": 302, "linkage_kwarg": 302, "linkcheck": 378, "linspac": [83, 151, 192, 193, 195, 201, 204, 205, 210, 463, 465, 471, 479, 480, 482, 487, 526, 531], "linux": [384, 394, 407, 410, 437, 446, 448, 451, 452, 453, 454, 455, 456, 457, 459, 460, 461, 462, 463, 464, 465, 468, 469, 470, 471, 475, 476, 477, 479, 481, 482, 483, 484, 485, 487, 489, 490, 491, 492, 498, 499, 500, 574], "list": [19, 20, 26, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 71, 72, 74, 75, 76, 78, 79, 80, 82, 83, 86, 87, 88, 89, 90, 91, 92, 93, 96, 100, 101, 102, 103, 104, 105, 108, 109, 110, 117, 119, 121, 122, 124, 125, 126, 129, 130, 132, 133, 134, 142, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 156, 157, 159, 161, 162, 163, 164, 165, 167, 168, 172, 173, 175, 176, 178, 179, 180, 181, 184, 187, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 207, 208, 210, 214, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 269, 270, 271, 272, 273, 274, 275, 283, 325, 335, 336, 337, 339, 366, 370, 371, 373, 374, 376, 377, 379, 380, 381, 382, 383, 384, 385, 386, 387, 396, 397, 398, 399, 400, 401, 403, 404, 406, 407, 408, 409, 410, 411, 412, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 447, 448, 451, 454, 455, 460, 464, 465, 467, 468, 470, 473, 474, 477, 478, 479, 480, 481, 486, 487, 489, 490, 491, 492, 494, 499, 510, 514, 517, 526, 527, 571, 572, 573, 574], "list_format": [87, 91], "listen": 514, "listenv": 380, "liter": [16, 84, 90, 104, 123, 322, 377], "literatur": [502, 504, 573], "littl": [87, 91, 396, 398, 404, 482, 490, 519, 523, 574], "live": [83, 86, 88, 377, 382, 385, 387, 398, 438, 441, 478], "livetim": [67, 88, 89, 105, 106, 110, 162, 184, 186, 187, 383, 446, 448, 451, 452, 454, 461, 463, 464, 467, 470, 476, 477, 480, 482, 490, 491, 500, 510, 514], "livetime_fract": 89, "ljouvin": 383, "ll": [122, 124, 132, 380, 382, 394, 410, 446, 447, 448, 451, 453, 456, 457, 461, 468, 469, 470, 471, 473, 474, 574, 576], "llvm": 413, "lmzvuwxv": 459, "ln": [53, 479, 557], "lo": [23, 435], "lo_bnd": 197, "lo_threshold": 149, "load": [66, 67, 83, 86, 87, 91, 100, 101, 102, 105, 109, 126, 128, 166, 172, 190, 191, 192, 193, 203, 312, 377, 431, 434, 436, 442, 452, 454, 456, 457, 463, 464, 467, 470, 471, 474, 483, 489, 490, 492, 498, 500, 511], "load_cta_irf": [438, 442], "load_irf_dict_from_fil": [162, 442, 446, 454, 463, 464, 467, 470, 489], "loc": [87, 91, 205, 370, 471, 507, 508, 516, 540, 546, 549, 550, 554], "loc_indic": [87, 91], "local": [17, 18, 21, 22, 24, 25, 27, 87, 91, 140, 141, 177, 190, 191, 200, 201, 203, 377, 378, 380, 385, 391, 406, 407, 410, 414, 418, 428, 452, 455, 456, 457, 462, 463, 475, 481, 494, 498, 514], "local_dataset": 481, "local_dens": [17, 18, 21, 22, 24, 25, 27, 475], "local_to_glob": 191, "localfold": 11, "localis": 312, "localn": [16, 84, 90, 104, 123], "locat": [47, 82, 83, 85, 87, 88, 90, 94, 136, 150, 151, 157, 162, 165, 203, 333, 385, 391, 395, 398, 403, 404, 409, 411, 442, 446, 454, 463, 464, 467, 470, 476, 491, 492, 511, 527, 574], "location_info": 87, "log": [16, 19, 20, 26, 42, 84, 90, 102, 104, 122, 123, 124, 146, 147, 148, 149, 152, 153, 154, 156, 159, 161, 163, 164, 172, 197, 201, 205, 213, 217, 218, 220, 221, 224, 225, 227, 228, 229, 230, 232, 233, 234, 235, 236, 237, 238, 239, 240, 242, 246, 247, 248, 249, 250, 251, 252, 253, 257, 258, 259, 260, 262, 264, 265, 266, 267, 269, 270, 272, 273, 274, 276, 279, 288, 294, 315, 316, 318, 363, 372, 389, 393, 415, 432, 439, 443, 445, 447, 452, 454, 455, 456, 457, 459, 460, 461, 464, 467, 468, 469, 470, 473, 475, 477, 479, 480, 481, 482, 485, 487, 490, 491, 496, 498, 499, 514, 516, 526, 527, 528, 551, 559, 560, 566, 573, 574, 575, 576, 577], "log10": 471, "log_": [239, 240, 485, 548], "log_2": 291, "log_en": 485, "log_level": 11, "log_parabola": 449, "log_parabola_norm": 400, "logarithm": [34, 482, 487, 548], "logarithmic_spir": 34, "logb": 42, "logconfig": 16, "logenergyaxi": 435, "loggaussian": 388, "logger": [343, 346, 377, 461], "logic": [16, 84, 86, 90, 104, 123, 178, 401, 482, 483], "logical_and": [192, 193, 195, 201, 204, 205], "logical_or": [192, 193, 195, 201, 204, 205, 481], "loglog": [19, 20, 26, 217, 218, 221, 225, 227, 228, 229, 233, 239, 240, 242, 246, 248, 250, 251, 252, 257, 262, 264, 265, 266, 267, 270, 274, 315, 446, 475, 506, 507, 508], "lognorm": 475, "logo": 407, "logparabola": [388, 549], "logparabolanormspectralmodel": [240, 256, 400, 425, 485, 549], "logparabolaspectralmodel": [210, 239, 256, 400, 447, 449, 451, 453, 460, 476, 479, 485, 542, 548], "logscal": 422, "logspac": [151, 192, 193, 195, 201, 204, 205, 454, 467, 470, 471, 475, 482, 506, 507, 508, 527], "logspir": [33, 38], "lomb": [392, 436], "lon": [16, 47, 91, 94, 96, 102, 105, 109, 111, 115, 121, 126, 128, 132, 150, 151, 157, 162, 165, 168, 192, 193, 195, 198, 201, 203, 204, 205, 219, 220, 224, 231, 232, 235, 247, 249, 258, 259, 261, 263, 269, 271, 273, 306, 307, 310, 332, 377, 378, 388, 391, 396, 400, 421, 452, 455, 456, 457, 459, 461, 465, 468, 469, 473, 476, 477, 478, 480, 481, 482, 485, 486, 490, 498, 499, 500, 512, 526, 527, 531, 532, 533, 534, 535, 536, 537], "lon_0": [224, 232, 235, 249, 258, 259, 273, 392, 400, 455, 456, 459, 460, 462, 463, 464, 467, 468, 476, 477, 484, 485, 490, 498, 499, 531, 532, 533, 535, 536, 537, 538], "lon_0_err": 462, "lon_pnt": [306, 310], "lon_rang": 332, "lon_t": [306, 310], "long": [377, 380, 382, 384, 391, 393, 396, 397, 399, 402, 404, 430, 439, 447, 476, 494, 526], "longer": [292, 377, 383, 384, 391, 392, 394, 397, 410, 428, 431, 436, 437, 439, 442, 448, 454, 468], "longest": 196, "longitud": [68, 94, 190, 191, 192, 193, 198, 200, 203, 204, 205, 332, 364, 391, 465, 482, 485, 519, 526, 534], "lonpol": 482, "look": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 46, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 83, 88, 102, 105, 109, 110, 124, 146, 147, 149, 150, 151, 152, 153, 154, 159, 160, 161, 162, 163, 165, 334, 377, 379, 380, 382, 389, 391, 392, 394, 396, 397, 400, 413, 436, 448, 451, 452, 454, 455, 456, 457, 459, 461, 463, 465, 467, 468, 470, 471, 477, 480, 482, 485, 489, 490, 492, 494, 498, 500, 502, 511, 514, 574], "look_up": 434, "lookup": 198, "loop": [87, 91, 325, 390, 442, 451, 476, 482, 491, 498, 514], "lopez": [225, 436, 442, 540], "lopez21": [226, 447, 540], "lopez_2021": 226, "lorimer2006": [28, 29, 30, 36, 39, 40, 48], "lose": 377, "loss": 52, "lost": [100, 102, 105, 109, 110, 514, 527], "lot": [82, 377, 380, 382, 383, 384, 385, 388, 390, 391, 393, 397, 407, 417, 419, 420, 428, 436, 437, 452, 461, 490, 498, 499, 524], "low": [87, 91, 149, 197, 327, 377, 378, 381, 386, 406, 434, 436, 445, 448, 451, 455, 461, 463, 477, 483, 484, 489, 490, 494, 498, 501, 521, 575], "low_zenith": 486, "lower": [17, 18, 19, 20, 21, 22, 24, 25, 26, 27, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 52, 53, 122, 124, 149, 178, 197, 199, 202, 217, 218, 221, 222, 225, 227, 228, 229, 230, 233, 234, 236, 237, 238, 239, 240, 242, 246, 248, 250, 251, 252, 253, 257, 260, 262, 264, 265, 266, 267, 270, 272, 274, 275, 377, 391, 396, 397, 404, 465, 481, 499], "lower_error": 124, "lowest": [396, 474], "lp": [239, 240, 400, 449, 476, 485, 542], "lp_norm": 549, "lss": 451, "lst": [384, 489], "lsw": 406, "lt": [377, 403, 430, 439, 536, 537], "ltcube": [191, 192, 193, 195, 204, 205, 482], "lts_author": 403, "luca": [418, 419, 420, 421, 422, 423, 424, 425, 428, 430, 431, 439, 442], "lui": 438, "luigi": 433, "luminos": [41, 46, 51, 52, 53, 54, 246], "luminosity_spindown": [51, 54], "luminosity_tev": [52, 53, 508], "lvtm": 470, "lw": [451, 453, 455, 461, 471, 479, 527, 531, 533], "ly": [428, 484], "lyne": 37, "l\u00e9a": [418, 420, 421, 422, 425, 433, 434, 435, 436, 437], "l\u00f3pez": 436, "m": [19, 28, 29, 30, 31, 32, 35, 36, 37, 38, 39, 40, 52, 53, 87, 91, 94, 97, 111, 115, 129, 190, 191, 192, 193, 195, 201, 203, 204, 205, 286, 301, 377, 378, 380, 391, 408, 409, 410, 411, 464, 475, 479, 480, 482, 485, 496, 519, 523, 525, 526, 527, 538, 574, 577], "m1": [409, 411], "m1_jest_": 473, "m2": [102, 152, 172, 447, 452, 454, 456, 457, 459, 461, 467, 477, 480, 481, 489, 498, 499], "m_": [20, 50, 52, 53], "m_3fhl_gc": 482, "m_4d": 482, "m_allski": 482, "m_b": 575, "m_cube": 482, "m_ejecta": [52, 507], "m_gc": 482, "m_hpx": 482, "m_i": 575, "m_iem_10gev": 482, "m_iem_cutout": 482, "m_iem_gc": 482, "m_iem_interp": 482, "m_sub": 482, "m_sun": 507, "m_wc": [192, 193, 195, 201, 204, 205, 482], "ma": [87, 91, 117, 121, 446, 455, 457, 478, 573, 576], "mac": [87, 91, 377, 384, 407, 435, 574], "machin": [380, 384, 385, 390, 394, 407, 446, 448, 451, 452, 453, 454, 455, 456, 457, 459, 460, 461, 462, 463, 464, 465, 468, 469, 470, 471, 475, 476, 477, 479, 481, 482, 483, 484, 485, 487, 489, 490, 491, 492, 498, 499, 500], "machineri": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 459], "maco": [394, 437], "macport": [394, 435, 437], "made": [172, 179, 200, 203, 214, 216, 223, 245, 304, 336, 337, 377, 380, 382, 393, 396, 398, 401, 402, 403, 428, 439, 440, 451, 455, 459, 460, 481, 489, 527, 538], "madrid": 387, "magenta": [374, 462, 486], "magic": [97, 409, 414, 430, 436, 439, 453, 490, 573], "magic_ecpl": 277, "magic_lp": [277, 453], "magnet": [42, 50, 51, 54, 550], "magnetic_field": [50, 51, 54], "magnitud": [316, 463], "mai": [16, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 82, 84, 87, 90, 91, 94, 101, 104, 123, 124, 377, 378, 380, 385, 386, 390, 391, 393, 394, 402, 403, 407, 408, 410, 415, 416, 447, 456, 457, 463, 478, 489, 513, 514, 526, 533, 550, 571, 574, 578], "mail": [378, 380, 382, 384, 391, 393, 396, 398, 400, 403, 406, 412, 417, 418, 500, 574], "mailmap": [428, 439], "main": [91, 102, 109, 377, 380, 382, 383, 385, 389, 392, 393, 394, 397, 401, 403, 407, 418, 424, 428, 431, 436, 442, 452, 462, 463, 465, 467, 473, 476, 480, 482, 483, 484, 496, 498, 499, 509, 511, 515, 574], "mainli": [377, 387, 388, 391, 398, 482], "maintain": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 87, 91, 377, 379, 394, 396, 397, 398, 402, 407, 437, 481], "mainten": [377, 384, 403, 407, 419, 441], "major": [200, 224, 232, 235, 377, 381, 382, 386, 394, 402, 430, 436, 437, 531, 532, 533], "majorana": 19, "make": [16, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 45, 46, 59, 82, 84, 87, 90, 91, 95, 101, 104, 123, 167, 168, 172, 173, 174, 175, 177, 178, 179, 182, 183, 188, 189, 191, 192, 193, 196, 197, 200, 202, 203, 204, 205, 272, 334, 336, 337, 348, 376, 378, 379, 382, 383, 384, 387, 389, 391, 393, 394, 395, 396, 397, 398, 401, 403, 404, 407, 409, 411, 413, 416, 417, 419, 422, 423, 428, 430, 433, 434, 435, 436, 439, 441, 447, 448, 451, 453, 454, 457, 459, 463, 467, 468, 480, 481, 482, 485, 489, 490, 496, 500, 511, 514, 574, 575], "make_background": [172, 179], "make_background_fit": 169, "make_background_scal": 169, "make_base_catalog_galact": [436, 504], "make_concentric_annulus_sky_region": 465, "make_contour": 479, "make_count": [172, 173, 174, 179], "make_counts_off": [173, 174], "make_cub": 167, "make_dataset": 168, "make_default_fov_background_model": 169, "make_edisp": [172, 179], "make_edisp_kernel": [172, 179], "make_edisp_kernel_map": 480, "make_edisp_map": 151, "make_effective_livetime_map": 481, "make_exclusion_mask": 169, "make_exposur": [172, 179], "make_exposure_irf": [172, 179], "make_imag": 437, "make_lupton_rgb": 372, "make_map_background_irf": 431, "make_map_count": 383, "make_map_cutout": 383, "make_map_exposure_reco_energi": 383, "make_map_exposure_true_energi": [151, 383, 480], "make_map_fov_background": 383, "make_map_hadron_accept": 383, "make_map_ring_background": 383, "make_map_xxx": 383, "make_maps_off": 177, "make_mask_bkg_invalid": 178, "make_mask_energy_aeff_default": 178, "make_mask_energy_aeff_max": 178, "make_mask_energy_bkg_peak": 178, "make_mask_energy_edisp_bia": 178, "make_mask_offset_max": 178, "make_mean_edisp": 438, "make_mean_psf": 438, "make_meta_t": [172, 179], "make_model": 396, "make_more_random_stuff": 377, "make_observation_time_map": 481, "make_orthogonal_rectangle_sky_region": [126, 465], "make_path": [124, 460, 477, 478], "make_pixel_region": 391, "make_psf": [162, 172, 179, 438], "make_psf_map": 480, "make_quant": 348, "make_random_stuff": 377, "make_region": 391, "make_sky_coord": 391, "make_some_random_stuff": 377, "make_theta_squared_t": [428, 492], "makefil": [407, 432], "maker": [6, 151, 162, 167, 168, 169, 170, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 383, 390, 392, 403, 422, 424, 425, 430, 439, 442, 443, 445, 446, 451, 453, 454, 457, 461, 463, 464, 467, 470, 471, 473, 477, 480, 483, 488, 491, 492, 494, 524, 573], "maker_fov": 499, "maker_safe_mask": [461, 467, 499], "mamba": [380, 408, 409, 430], "manag": [87, 91, 214, 216, 223, 245, 324, 355, 376, 377, 380, 385, 393, 394, 396, 399, 403, 404, 406, 428, 433, 435, 439, 443, 482, 484, 574], "manconi": 420, "mandatori": [178, 380, 390, 403, 464, 485], "mandatory_keyword": 480, "mani": [87, 91, 316, 377, 378, 380, 382, 384, 386, 389, 391, 392, 393, 394, 397, 398, 403, 407, 413, 419, 420, 425, 428, 434, 435, 436, 437, 438, 441, 442, 448, 451, 454, 462, 467, 474, 478, 482, 492, 494, 502, 510, 512, 524, 527, 571, 572, 573, 574, 578], "manifest": 387, "manipul": [87, 91, 401, 404, 430, 487, 526], "manner": [441, 442], "manpow": [382, 394], "manual": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 87, 91, 384, 389, 399, 406, 463, 514, 522, 574, 575], "manuel": [429, 432, 433], "map": [6, 15, 16, 23, 26, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 67, 80, 83, 84, 87, 90, 91, 96, 98, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 113, 115, 117, 118, 119, 121, 122, 123, 124, 126, 128, 129, 132, 133, 134, 139, 140, 141, 142, 143, 146, 147, 148, 149, 150, 151, 152, 153, 154, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 167, 169, 170, 172, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 190, 191, 192, 193, 194, 196, 197, 198, 200, 201, 202, 203, 204, 205, 206, 207, 220, 223, 224, 231, 232, 235, 237, 245, 247, 249, 258, 259, 261, 263, 269, 270, 271, 273, 274, 281, 286, 326, 364, 365, 370, 372, 374, 376, 377, 378, 380, 384, 388, 389, 390, 391, 392, 393, 396, 397, 398, 399, 400, 401, 404, 409, 413, 417, 418, 420, 421, 422, 423, 424, 425, 428, 429, 430, 432, 433, 434, 436, 437, 438, 439, 442, 443, 445, 446, 448, 451, 452, 453, 454, 458, 459, 462, 463, 464, 465, 466, 468, 469, 470, 473, 474, 476, 477, 478, 481, 485, 488, 489, 490, 491, 492, 494, 495, 498, 499, 502, 509, 510, 513, 514, 518, 520, 521, 522, 523, 524, 530, 532, 533, 534, 535, 538, 569, 572, 573], "map_": [206, 207, 365, 372], "map_4d": 482, "map_analysi": 396, "map_cent": 273, "map_coord": [83, 151, 162, 165], "map_dataset": [389, 471], "map_dataset_empti": 471, "map_dataset_mak": 471, "map_dataset_on_off": 471, "map_edisp": [111, 115], "map_in": [192, 193, 195, 201, 204, 205], "map_out": [105, 110, 150, 151, 157, 162, 165, 192, 193, 195, 201, 204, 205], "map_result": 455, "map_select": [16, 452, 456, 457, 459, 498], "map_typ": [192, 193, 195, 201, 204, 205, 482, 526], "mapax": [146, 147, 148, 149, 152, 153, 154, 156, 159, 161, 163, 164, 425, 428, 430, 482], "mapaxi": [19, 20, 26, 102, 105, 109, 110, 111, 112, 113, 115, 122, 124, 126, 133, 142, 144, 146, 147, 148, 149, 150, 151, 152, 153, 154, 156, 159, 160, 161, 162, 163, 164, 165, 172, 182, 183, 188, 189, 190, 191, 192, 193, 195, 196, 200, 201, 203, 204, 205, 217, 218, 221, 225, 227, 228, 229, 233, 239, 240, 242, 246, 248, 250, 251, 252, 257, 262, 264, 265, 266, 267, 270, 274, 372, 378, 392, 401, 419, 420, 422, 425, 428, 438, 442, 446, 448, 451, 453, 454, 460, 461, 463, 464, 467, 469, 470, 471, 473, 477, 480, 481, 482, 485, 490, 491, 492, 499, 518, 521, 523, 524, 526, 527], "mapcoord": [83, 151, 162, 165, 190, 191, 192, 193, 195, 196, 200, 201, 203, 204, 205, 247, 436, 437, 482, 527, 534], "mapdataset": [98, 99, 103, 105, 108, 109, 110, 112, 113, 114, 116, 117, 121, 126, 129, 132, 139, 140, 141, 142, 143, 167, 168, 169, 172, 173, 177, 178, 231, 370, 373, 390, 392, 398, 399, 418, 419, 420, 421, 422, 423, 424, 425, 428, 442, 443, 455, 456, 460, 461, 462, 464, 465, 467, 468, 470, 471, 478, 479, 481, 483, 484, 490, 498, 499, 512, 514, 521, 524, 573, 575, 576], "mapdataseteventsampl": [93, 108, 422, 423, 424, 431, 442, 463, 464], "mapdatasetmak": [162, 170, 179, 390, 422, 425, 428, 431, 439, 461, 463, 464, 467, 471, 480, 481, 491, 498, 499, 514, 521, 524], "mapdatasetmetadata": [102, 105, 404], "mapdatasetoff": 430, "mapdatasetonoff": [98, 102, 109, 110, 117, 121, 139, 167, 173, 177, 422, 423, 425, 428, 441, 442, 457, 471, 481, 510, 524, 575], "mapdatasetsampl": 390, "mapevalu": [388, 389, 421, 422, 425, 428, 439, 440, 441, 443], "mapeventsampl": [420, 421], "mapfit": [388, 389, 418, 437, 438], "mapgeom": [383, 438, 439], "mapmak": [172, 393, 418, 422, 437], "mapmakerob": [421, 422], "mappabl": 401, "mappanelplott": [398, 579], "mapper": 312, "mappingintstrani": [16, 84, 90, 104, 123], "maps_off": 177, "mar": [394, 415, 440], "march": [384, 386, 415, 417, 438], "marcocirelli": 26, "margin": [101, 105, 110, 114, 116, 191, 193, 203, 205, 223, 245, 261, 388, 483, 531, 575], "marion": [418, 437], "mark": [91, 377, 388, 406], "marker": [101, 102, 105, 109, 110, 446, 448, 451, 453, 455, 461, 468, 469, 470, 474, 500], "markerfacecolor": [102, 105, 109, 110], "markers": [101, 102, 105, 109, 110, 487], "markov": 573, "mask": [83, 87, 91, 99, 101, 102, 105, 109, 110, 121, 125, 126, 128, 129, 130, 132, 150, 151, 157, 162, 165, 167, 169, 174, 175, 176, 177, 178, 180, 190, 191, 192, 193, 195, 198, 200, 201, 203, 204, 205, 214, 216, 223, 245, 261, 389, 405, 422, 424, 425, 426, 428, 431, 437, 439, 440, 441, 442, 445, 446, 448, 459, 461, 481, 484, 488, 491, 494, 510, 521, 523, 526, 573], "mask_1": 486, "mask_2": 486, "mask_bright": 476, "mask_contains_region": 205, "mask_data": 483, "mask_energi": [477, 483], "mask_fit": [101, 102, 105, 109, 110, 114, 116, 389, 422, 439, 453, 457, 459, 471, 477, 479, 483, 487, 510], "mask_fit_imag": [102, 105, 109, 110], "mask_imag": [102, 105, 109, 110], "mask_map": [191, 203, 445, 483, 488], "mask_map_catalog": 483, "mask_nearest_posit": [192, 193, 195, 201, 204, 205], "mask_off": 471, "mask_roi": 476, "mask_saf": [101, 102, 105, 106, 109, 110, 178, 389, 422, 477, 481, 483, 510], "mask_safe_edisp": [102, 105, 109, 110], "mask_safe_imag": [102, 105, 109, 110, 150, 151, 157, 162, 165], "mask_safe_psf": [102, 105, 109, 110], "mask_spac": 477, "mask_valid": 101, "masked_ev": 83, "maskedarrai": [87, 91], "maskedcolumn": [87, 91], "mass": [19, 20, 26, 52, 390, 424, 443, 475, 502, 535], "massdm": [19, 20, 475], "master": [383, 384, 391, 406, 407, 416], "match": [87, 91, 108, 112, 190, 191, 193, 196, 197, 198, 200, 203, 205, 207, 285, 287, 377, 385, 436, 438, 443, 451, 454, 470, 478, 490, 509, 526], "match_by_nam": 198, "math": [232, 376], "mathcal": [479, 510], "mathemat": [485, 487], "mathieu": [428, 431], "mathrm": [19, 20, 23, 102, 109, 152, 475, 479, 510, 575, 577], "mathworld": [331, 332], "matplotlib": [19, 20, 26, 66, 67, 83, 128, 146, 149, 152, 153, 154, 159, 160, 161, 162, 163, 164, 165, 192, 193, 195, 201, 204, 205, 208, 217, 218, 219, 220, 221, 222, 224, 225, 227, 228, 229, 230, 232, 233, 234, 235, 236, 237, 238, 239, 240, 242, 246, 247, 248, 249, 250, 251, 252, 253, 257, 258, 259, 260, 262, 263, 264, 265, 266, 267, 269, 270, 272, 273, 274, 275, 355, 365, 366, 367, 370, 371, 372, 374, 376, 377, 378, 391, 394, 403, 410, 413, 420, 428, 430, 446, 447, 448, 449, 451, 452, 453, 454, 455, 456, 457, 459, 460, 461, 462, 463, 464, 465, 467, 468, 469, 470, 471, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 489, 490, 491, 492, 498, 499, 500, 506, 507, 508, 514, 516, 517, 518, 520, 523, 531, 533, 537, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 561, 562, 563, 564, 565, 566, 567, 578], "matric": 208, "matrix": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 111, 115, 149, 150, 151, 154, 208, 209, 210, 214, 223, 245, 285, 287, 370, 394, 395, 405, 438, 439, 442, 479, 480, 510, 512, 518], "matter": [1, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 391, 397, 405, 437, 442, 443, 445, 481, 488, 490, 494, 503, 572, 574], "matthew": [384, 434, 436, 437], "matthia": [436, 437], "mattox": 455, "max": [16, 17, 18, 19, 20, 21, 22, 24, 25, 26, 27, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 83, 87, 88, 91, 102, 112, 125, 127, 129, 164, 168, 172, 174, 178, 205, 213, 214, 215, 216, 217, 218, 220, 221, 223, 224, 225, 227, 228, 229, 230, 232, 233, 234, 235, 236, 237, 238, 239, 240, 242, 245, 246, 248, 249, 250, 251, 252, 253, 257, 258, 259, 260, 262, 264, 265, 266, 267, 270, 272, 273, 274, 332, 385, 393, 400, 405, 413, 424, 425, 426, 428, 430, 442, 447, 448, 451, 452, 453, 454, 456, 457, 459, 460, 461, 462, 465, 467, 468, 469, 470, 471, 473, 474, 476, 477, 479, 480, 481, 482, 483, 485, 486, 487, 490, 491, 498, 499, 500, 502, 521, 523, 524, 531, 550, 553, 559, 576], "max_ag": [45, 504], "max_column": [87, 91], "max_energi": 474, "max_lin": [87, 91], "max_nit": 132, "max_offset": 393, "max_percentil": 83, "max_radiu": [160, 162, 165, 203, 490], "max_region_numb": [175, 523], "max_width": [87, 91], "maxcal": 210, "maxclust": 302, "maxfev": 479, "maxim": [45, 82, 91, 112, 132, 178, 220, 224, 232, 235, 247, 258, 259, 263, 269, 273, 440, 441, 442, 443, 523], "maxima": [140, 214, 216], "maximilian": [428, 430, 431, 440, 441, 442, 443], "maximum": [19, 20, 45, 46, 47, 83, 87, 91, 100, 122, 124, 127, 162, 165, 167, 175, 178, 184, 187, 191, 197, 202, 203, 213, 215, 217, 220, 221, 223, 224, 225, 227, 228, 229, 230, 232, 233, 234, 235, 236, 237, 238, 239, 240, 242, 245, 249, 250, 251, 252, 253, 257, 258, 259, 260, 262, 265, 266, 267, 272, 273, 285, 287, 331, 333, 336, 374, 380, 383, 391, 430, 449, 455, 474, 478, 481, 482, 487, 491, 499, 504, 512, 523, 550, 572, 573, 576], "maxwellian": 32, "mayb": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 377, 385, 387, 388, 399], "mb": [190, 191, 200, 203, 385, 409, 411, 445, 450, 458, 466, 472, 488, 489, 490, 492, 493, 495, 497, 501, 529, 539, 560, 570], "mbox": [102, 109], "mc": 395, "mc_id": [83, 387, 390, 430, 463, 489], "mcerp": 395, "mckee": [53, 443], "mcmc": [395, 397, 418, 423, 425, 550, 573], "mcmc_sampl": [397, 420], "md": [380, 397, 403], "mdm": [26, 475], "mean": [42, 68, 87, 91, 96, 101, 102, 126, 128, 149, 150, 151, 154, 157, 162, 165, 233, 237, 272, 286, 290, 303, 322, 377, 378, 380, 382, 384, 390, 391, 393, 394, 400, 405, 410, 413, 425, 434, 451, 454, 455, 464, 474, 478, 479, 481, 485, 486, 487, 490, 491, 500, 532, 547, 574, 575], "meaning": 485, "meant": [383, 442, 446, 454, 456, 459, 461, 467, 470, 489], "measur": [27, 67, 101, 105, 110, 128, 133, 142, 197, 277, 285, 287, 290, 291, 292, 293, 295, 297, 298, 300, 301, 383, 391, 396, 401, 407, 416, 421, 429, 435, 437, 447, 448, 451, 453, 454, 457, 460, 462, 465, 467, 468, 469, 474, 476, 490, 499, 500, 512, 519, 521, 524, 572, 573, 576, 577], "mechan": [385, 395, 401, 404], "media": 403, "median": [83, 162, 165, 413, 471, 486, 490], "median_zenith": 486, "medium": [45, 52, 377, 386], "meeseeksdev": 377, "meeseeksmachin": 377, "meet": [223, 245, 304, 383, 385, 397, 402, 407], "megabyt": [190, 191, 200, 203], "mem": [445, 450, 458, 466, 472, 488, 493, 495, 497, 501, 529, 539, 560, 570], "member": [83, 378, 382, 391, 403, 404, 436, 442, 478, 489, 492], "memo": [149, 197], "memori": [87, 88, 91, 92, 100, 102, 103, 105, 108, 109, 110, 190, 191, 200, 203, 269, 271, 273, 355, 377, 387, 389, 390, 393, 399, 401, 422, 428, 443, 454, 467, 514], "memoryobserv": 88, "mender": [441, 442, 443], "mention": [59, 144, 377, 378, 380, 384, 385, 389, 391, 394, 396, 397, 402, 403, 406, 407, 480, 484, 485, 487, 502, 573], "mentor": [380, 397], "mere": 387, "merg": [67, 86, 87, 91, 194, 197, 223, 245, 344, 377, 380, 381, 382, 383, 390, 391, 392, 396, 397, 402, 403, 406, 407, 417, 418, 419, 420, 421, 422, 423, 424, 425, 433, 434, 435, 436, 437, 438], "merge_equ": 86, "mergesort": [87, 91], "mess": 378, "messag": [101, 209, 211, 212, 380, 391, 393, 400, 426, 441, 448, 449, 451, 452, 453, 459, 460, 461, 470, 471, 473, 478, 479, 490, 498, 499, 514, 574], "met": [86, 358, 442, 469, 473, 573], "met_start": 86, "met_stop": 86, "meta": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 83, 85, 87, 88, 91, 94, 100, 102, 103, 105, 107, 108, 109, 110, 122, 124, 146, 147, 148, 149, 152, 153, 154, 156, 159, 161, 163, 164, 172, 179, 192, 193, 195, 201, 204, 205, 269, 270, 273, 274, 314, 358, 359, 360, 361, 387, 390, 391, 392, 401, 404, 424, 425, 436, 440, 442, 443, 463, 471, 482, 486, 489, 491, 511, 512, 569], "meta_t": [100, 101, 102, 105, 109, 110, 172, 179, 401, 404, 425, 448, 454, 481, 510], "metaattribut": [87, 91], "metadata": [16, 83, 84, 85, 87, 88, 90, 91, 104, 106, 122, 123, 124, 146, 147, 148, 152, 153, 156, 159, 161, 163, 164, 192, 193, 195, 201, 204, 205, 359, 381, 383, 394, 443, 452, 456, 457, 459, 463, 485, 498, 530, 531, 532, 533, 534, 535, 536, 537, 538, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 561, 562, 563, 564, 565, 566, 567, 568, 569], "metadata_fits_export_kei": [84, 90, 104, 123], "metadatabas": 404, "metadatabasemodel": 404, "metapackag": 394, "method": [6, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 50, 51, 52, 53, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 117, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 140, 142, 143, 144, 146, 147, 148, 149, 150, 151, 152, 153, 154, 156, 157, 159, 160, 161, 162, 163, 164, 165, 167, 168, 169, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 269, 270, 271, 272, 273, 274, 275, 285, 287, 293, 295, 302, 312, 316, 320, 324, 325, 326, 351, 364, 366, 376, 377, 380, 383, 386, 387, 388, 391, 392, 393, 395, 396, 397, 399, 401, 403, 404, 409, 413, 414, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 428, 430, 431, 433, 434, 435, 436, 437, 438, 439, 442, 443, 446, 448, 449, 451, 452, 453, 455, 456, 457, 459, 460, 461, 462, 463, 464, 467, 469, 471, 473, 475, 476, 477, 478, 479, 480, 481, 483, 484, 485, 486, 487, 489, 490, 491, 492, 498, 499, 500, 509, 511, 513, 514, 518, 521, 523, 524, 525, 527, 548, 562, 571, 572, 573, 574, 576], "method_kwarg": [324, 325], "methoda": 420, "metric": 302, "mev": [74, 83, 146, 147, 148, 152, 446, 447, 454, 456, 459, 461, 467, 470, 471, 476, 480, 482, 485, 489, 490, 500, 559], "meval": 533, "mexico": 491, "meyer": [242, 277, 460, 573], "meyer2010": 573, "mgtime": 392, "michael": [441, 443], "mid": [431, 442, 489], "middl": [366, 393], "midli": 451, "midpoint": 88, "might": [13, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 180, 197, 210, 377, 382, 388, 389, 391, 394, 396, 401, 403, 404, 409, 411, 418, 451, 469, 471, 477, 481, 483, 490, 491, 494, 500, 502, 510, 514, 521, 527, 574, 576], "migra": [102, 105, 109, 110, 151, 154, 183, 393, 463, 464, 480, 519], "migra_axi": [102, 105, 109, 110, 113, 151, 154, 463, 464, 480, 481], "migrad": [101, 210, 448, 449, 451, 452, 453, 459, 460, 461, 471, 473, 478, 479, 490, 498, 499], "migrad_opt": [210, 479], "migrat": [102, 105, 109, 110, 113, 154, 386, 421, 428, 437, 463, 481, 518, 519], "milagro": [97, 368], "mileston": [386, 406], "milki": [33, 38, 416, 504], "miller": [87, 91], "million": [377, 404], "min": [16, 17, 18, 19, 20, 21, 22, 24, 25, 26, 27, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 83, 91, 102, 125, 127, 129, 144, 172, 213, 214, 215, 216, 217, 218, 220, 221, 223, 224, 225, 227, 228, 229, 230, 232, 233, 234, 235, 236, 237, 238, 239, 240, 242, 245, 246, 248, 249, 250, 251, 252, 253, 257, 258, 259, 260, 262, 264, 265, 266, 267, 270, 272, 273, 274, 291, 332, 392, 393, 400, 405, 413, 428, 436, 447, 448, 451, 452, 453, 454, 456, 457, 459, 460, 461, 462, 465, 467, 468, 469, 470, 471, 473, 474, 476, 477, 479, 480, 481, 482, 485, 486, 487, 490, 498, 499, 500, 502, 523, 550, 553, 559], "min_count": 169, "min_dist": [140, 141, 175, 455, 461, 523], "min_distance_input": [175, 523], "min_energi": 474, "min_npix": [150, 151, 157, 162, 165, 203, 205], "min_npred_background": 169, "min_signific": 392, "min_significance_lc": 392, "minaya": 438, "mind": [380, 397, 467, 479], "mini": 397, "miniconda": 408, "minim": [19, 20, 26, 112, 131, 192, 193, 195, 200, 201, 204, 205, 206, 210, 217, 218, 220, 221, 224, 225, 227, 228, 229, 232, 233, 235, 239, 240, 242, 246, 247, 248, 249, 250, 257, 258, 259, 261, 262, 263, 264, 265, 266, 267, 269, 270, 273, 274, 283, 389, 392, 400, 404, 430, 440, 442, 446, 463, 477, 479, 487, 499, 514, 523, 524, 527, 572, 577], "minima": [214, 216, 487], "minimis": [470, 486], "minimmum": [150, 151, 157, 162, 165, 203, 205], "minimum": [19, 20, 26, 47, 83, 100, 121, 122, 124, 127, 131, 136, 140, 141, 144, 145, 167, 169, 175, 197, 200, 202, 212, 213, 215, 217, 218, 220, 221, 223, 224, 225, 227, 228, 229, 230, 232, 233, 234, 235, 236, 237, 238, 239, 240, 242, 245, 246, 248, 249, 250, 251, 252, 253, 257, 258, 259, 260, 262, 264, 265, 266, 267, 270, 272, 273, 274, 279, 284, 288, 291, 304, 331, 333, 336, 372, 394, 430, 436, 451, 455, 463, 478, 479, 482, 487, 490, 512, 514, 523, 550, 577], "mino": [210, 479], "minor": [377, 382, 397, 400, 402, 427, 440, 532, 533], "minos_contour": [420, 438], "minu": [154, 471], "minuit": [101, 119, 210, 211, 212, 388, 395, 422, 437, 438, 442, 448, 449, 451, 452, 453, 459, 460, 461, 471, 473, 478, 479, 490, 498, 499], "minuit_opt": 479, "minut": [397, 407, 436, 451, 455, 457, 459, 461, 462, 463, 465, 469, 470, 473, 475, 477, 479, 481, 484, 487, 498], "mireia": 439, "mirror": 189, "misc": [416, 429, 433, 434, 435], "miss": [82, 87, 91, 146, 147, 148, 149, 152, 153, 154, 156, 159, 161, 163, 164, 172, 377, 380, 385, 386, 387, 388, 391, 397, 398, 401, 426, 428, 430, 436, 441, 482], "mission": [83, 442, 573], "mistak": [382, 402], "mix": [376, 377, 393, 477, 482], "mixin": [87, 91], "mjd": [86, 94, 124, 222, 230, 234, 236, 237, 238, 253, 260, 272, 275, 359, 361, 378, 441, 442, 455, 463, 464, 468, 469, 470, 473, 474, 482, 485, 511, 562, 563, 564, 565, 566, 567, 568, 569, 578], "mjdref": [455, 482], "mjdreff": [94, 358, 361, 464], "mjdrefi": [94, 358, 361, 464], "mkdir": [393, 451, 452, 459, 460, 463, 498, 499], "mkn": [500, 573], "mkn_421_3fhl": 500, "mncontour": 210, "mnra": [136, 300], "mnt": 439, "mock": 462, "mock_dl4": 462, "mode": [16, 84, 85, 87, 90, 91, 94, 102, 104, 105, 109, 123, 127, 150, 151, 157, 162, 165, 168, 191, 192, 193, 195, 196, 197, 200, 201, 203, 204, 205, 271, 404, 423, 436, 439, 443, 470], "model": [1, 6, 15, 16, 18, 19, 20, 26, 28, 29, 30, 31, 32, 35, 36, 37, 38, 39, 40, 45, 50, 51, 52, 53, 54, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 84, 88, 90, 93, 99, 100, 101, 102, 103, 104, 105, 108, 109, 110, 112, 114, 116, 117, 119, 121, 122, 123, 124, 125, 126, 129, 130, 131, 132, 133, 134, 139, 142, 143, 146, 152, 153, 160, 161, 162, 163, 165, 169, 172, 185, 192, 193, 195, 201, 204, 205, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 244, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 296, 299, 301, 373, 376, 377, 378, 381, 382, 383, 389, 390, 392, 393, 395, 397, 398, 401, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 428, 429, 430, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 445, 446, 449, 454, 455, 457, 462, 465, 467, 471, 478, 480, 481, 482, 483, 488, 490, 491, 494, 502, 503, 509, 510, 512, 514, 515, 519, 521, 522, 529, 539, 560, 570, 572, 573, 576, 577], "model1": [218, 540, 542, 546, 549, 551, 554], "model2": [218, 447, 470, 540, 542, 546, 549, 551, 554], "model_1d": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 452], "model_2d": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40], "model_3d": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40], "model_add": [485, 542], "model_best": 447, "model_best_joint": 451, "model_best_stack": 451, "model_bin_": 473, "model_bin_0": 473, "model_bkg": 477, "model_computed_field": [16, 84, 90, 104, 123], "model_config": [16, 84, 90, 104, 123, 456, 498], "model_constraint": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40], "model_construct": [16, 84, 90, 104, 123], "model_copi": [16, 84, 90, 104, 123, 485], "model_dump": [16, 84, 90, 104, 123], "model_dump_json": [16, 84, 90, 104, 123], "model_extra": [16, 84, 90, 104, 123], "model_field": [16, 84, 90, 104, 123], "model_fields_set": [16, 84, 90, 104, 123], "model_fit": 470, "model_in_bin": 473, "model_joint": 459, "model_json_schema": [16, 84, 90, 104, 123], "model_manag": [445, 484, 488], "model_nam": [102, 105, 109, 110, 223, 245, 373, 477], "model_parametrized_nam": [16, 84, 90, 104, 123], "model_plot": 462, "model_post_init": [16, 84, 90, 104, 123], "model_prior": 487, "model_read": 487, "model_rebuild": [16, 84, 90, 104, 123], "model_set_axi": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40], "model_simu": [454, 467, 470], "model_spectrum": 485, "model_str": 452, "model_typ": [223, 231, 243, 245, 261, 271, 283, 400, 484], "model_valid": [16, 84, 90, 104, 123], "model_validate_json": [16, 84, 90, 104, 123], "model_validate_str": [16, 84, 90, 104, 123], "model_weak": 487, "model_weak_prior": 487, "model_without_nam": 485, "modelbas": [231, 254, 261, 263, 264, 271, 275, 405], "modeldm": [19, 20], "modelevalu": 388, "modeling_2d": [445, 456, 458], "modelmetadata": 404, "modelmodel_dump": [16, 84, 90, 104, 123], "modelmodel_dump_json": [16, 84, 90, 104, 123], "models_3fhl": 484, "models_4fgl_roi": 476, "models_as_dict": [16, 84, 90, 104, 123], "models_diffus": 463, "models_fil": [16, 452, 456, 457, 459, 498], "models_fit": 467, "models_gc": 484, "models_gp": 489, "models_joint": 459, "models_or": 484, "models_read": 485, "models_select": 484, "models_stack": 459, "models_yaml": 485, "modelsmetadata": 404, "modern": [87, 91, 395], "modernis": [394, 422], "modest": [377, 532], "modif": [16, 84, 87, 90, 91, 104, 123, 377, 380, 399, 406, 439], "modifi": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 41, 87, 91, 93, 102, 109, 124, 125, 126, 129, 132, 168, 210, 324, 349, 374, 387, 389, 393, 399, 403, 404, 423, 425, 426, 428, 430, 438, 441, 442, 447, 452, 464, 481, 483, 487, 491, 498, 512, 527, 578], "modul": [6, 260, 377, 378, 382, 386, 393, 398, 416, 418, 424, 436, 470, 476, 478, 481, 484, 502, 503, 504, 505, 550, 567, 578], "modular": 383, "mohanti": 101, "mohrmann": [393, 417, 418, 419, 435, 436, 437, 440, 442, 573], "mohrmann2019": 573, "moment": [15, 51, 54, 86, 95, 261, 353, 383, 391, 393, 394, 397, 402, 403, 480, 482, 519], "moncar": [210, 479], "monitor": [390, 489, 514], "monkei": 377, "mono": 385, "monoton": 197, "mont": [395, 519, 573], "montecarlo": [103, 108, 210], "month": [78, 380, 386, 391, 394, 396, 397, 402, 406, 410, 416, 417, 418, 419, 420, 429, 432, 433, 434, 435, 436, 437, 438], "monthli": [386, 404, 409, 438], "moor": 24, "morcuend": [438, 441, 443], "more": [19, 20, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 71, 74, 75, 78, 87, 91, 99, 100, 101, 102, 105, 109, 110, 133, 140, 142, 149, 178, 192, 193, 195, 204, 205, 217, 218, 219, 220, 221, 222, 224, 225, 227, 229, 230, 232, 233, 234, 235, 236, 237, 238, 240, 246, 247, 248, 249, 250, 252, 253, 258, 259, 260, 262, 265, 266, 267, 273, 274, 288, 294, 312, 352, 377, 378, 380, 382, 383, 384, 386, 387, 388, 389, 390, 391, 392, 393, 394, 396, 397, 398, 401, 402, 403, 404, 405, 407, 408, 409, 410, 413, 422, 423, 424, 425, 428, 435, 437, 438, 442, 447, 448, 451, 453, 455, 457, 459, 463, 464, 470, 473, 474, 475, 477, 479, 481, 482, 483, 484, 485, 486, 487, 491, 492, 494, 500, 510, 511, 512, 514, 523, 524, 526, 527, 532, 571, 572, 574, 576, 578], "moreov": [393, 476, 481, 510], "morpholog": [119, 390, 445, 466, 494], "morphologi": [50, 52, 119, 388, 390, 400, 416, 433, 435, 448, 456, 462, 463, 464, 467, 476, 481, 528], "mosaic": 383, "most": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 77, 83, 87, 91, 95, 117, 124, 376, 377, 378, 380, 382, 383, 384, 385, 388, 389, 390, 391, 393, 394, 395, 396, 397, 399, 400, 401, 402, 403, 404, 407, 409, 410, 428, 435, 436, 438, 439, 442, 443, 456, 457, 465, 468, 470, 476, 478, 479, 480, 481, 482, 483, 489, 490, 494, 500, 502, 512, 513, 514, 519, 521, 527, 571, 573, 574, 577], "mostli": [56, 69, 304, 377, 378, 383, 384, 385, 386, 391, 393, 396, 397, 398, 401, 402, 404, 406, 407, 428, 436, 476, 481, 492, 500, 576, 578], "motion": [45, 308], "motiv": [178, 382, 384, 385, 391, 394, 396, 406, 485, 514], "move": [283, 382, 383, 384, 385, 388, 391, 396, 397, 398, 401, 406, 412, 418, 419, 421, 422, 423, 424, 428, 429, 433, 434, 436, 437, 438, 439, 454], "move_axi": 442, "movement": 403, "mpatch": 465, "mpg": 67, "mpi": 67, "mpl": 377, "mpl_check_plot": 377, "mpl_kwarg": [451, 461, 465], "mpl_normal": [367, 368], "mpl_plot_check": 377, "mpl_style": 436, "msg": [446, 454, 456, 459, 461, 467, 470, 489], "msh": [457, 476, 481], "msh15": 492, "mst": 489, "mtebiib": 473, "mu": [26, 285, 287, 288, 370, 405, 447, 475, 487, 518, 519, 576], "mu_": [288, 294, 575, 576, 577], "mu_background": 574, "mu_bkg": [105, 110, 285, 298, 301, 413, 574, 576], "mu_off": 576, "mu_on": [288, 294, 576], "mu_sig": [287, 298, 301, 457, 575, 576], "mu_x": 576, "much": [193, 377, 383, 388, 391, 393, 396, 397, 421, 428, 454, 459, 465, 471, 487, 490, 500, 533], "mul": [26, 447, 475, 485, 540, 546, 549, 551, 554, 559], "mulitpli": 254, "multi": [87, 91, 191, 203, 386, 391, 405, 422, 425, 429, 436, 445, 449, 455, 466, 477, 479, 480, 485, 486, 490, 494, 512, 514, 526, 572, 573], "multidimension": [383, 393, 405, 443, 478, 494, 519, 572], "multinorm": 395, "multipl": [19, 20, 26, 82, 87, 91, 92, 100, 101, 102, 105, 108, 109, 110, 112, 114, 116, 132, 140, 166, 192, 193, 195, 201, 204, 205, 210, 217, 218, 219, 220, 221, 222, 223, 224, 225, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 242, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 269, 270, 271, 272, 273, 274, 275, 377, 378, 383, 386, 389, 390, 391, 393, 395, 398, 399, 401, 405, 409, 418, 425, 426, 428, 436, 442, 443, 453, 459, 469, 476, 477, 478, 481, 482, 483, 485, 490, 512, 526, 550, 559, 571, 572, 573, 574, 579], "multipli": [19, 20, 26, 124, 217, 218, 220, 221, 223, 224, 225, 227, 228, 229, 232, 233, 235, 237, 239, 240, 242, 245, 246, 247, 248, 250, 251, 252, 257, 258, 259, 262, 263, 264, 265, 266, 267, 269, 270, 272, 273, 274, 281, 286, 296, 299, 304, 447, 455, 457, 471, 475, 485, 540, 576], "multiprocess": [13, 93, 125, 126, 129, 132, 168, 319, 324, 325, 422, 442, 443], "multithread": 13, "multivari": 395, "multivariategaussianprior": 405, "multiwavelength": 225, "muon": 486, "muoneff": 486, "mur": [26, 475], "must": [19, 20, 26, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 82, 83, 87, 88, 91, 101, 102, 105, 106, 110, 111, 115, 124, 129, 132, 133, 140, 141, 142, 149, 160, 168, 172, 174, 179, 186, 190, 191, 192, 193, 194, 195, 196, 197, 200, 201, 202, 203, 204, 205, 217, 218, 219, 220, 221, 222, 223, 224, 225, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 242, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 269, 270, 271, 272, 273, 274, 275, 292, 293, 304, 322, 372, 377, 382, 388, 389, 392, 401, 402, 403, 404, 446, 451, 456, 469, 477, 478, 481, 483, 484, 485, 489, 490, 499, 500, 514, 526], "mutablemap": 199, "mutablesequ": [92, 100, 245], "mutipl": 409, "mutltipl": 380, "my": [377, 399, 400, 408, 463, 464, 477, 485], "my_custom_model": 485, "my_flux_map": 401, "my_ob": 89, "my_obs_filt": 89, "my_sourc": 399, "mybind": [407, 436], "myconfig": [11, 574], "mycustomgaussianmodel": [400, 485], "mycustomprior": 487, "mycustomspectralmodel": [256, 485], "mzpjqyfx": 473, "n": [19, 20, 51, 82, 87, 91, 122, 124, 190, 191, 192, 193, 195, 197, 198, 201, 203, 204, 205, 213, 215, 276, 283, 377, 380, 391, 394, 408, 410, 434, 467, 469, 473, 475, 476, 478, 479, 482, 484, 487, 489, 490, 491, 492, 497, 519, 526, 527, 529, 532, 533, 573, 575, 577], "n_": [102, 109, 288, 294, 510, 575, 576, 577], "n_0": [233, 547], "n_bad": 490, "n_bin": 477, "n_bkg": [285, 287, 576], "n_dof": [122, 124, 512], "n_event": [192, 193, 195, 201, 204, 205, 222, 230, 234, 236, 237, 238, 253, 260, 272, 275, 390], "n_event_bunch": [103, 108], "n_events_bkg": 390, "n_fit_bin": [459, 470, 477, 484], "n_free_paramet": 283, "n_input": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 48, 49], "n_ism": [43, 44, 45, 52, 507, 508], "n_job": [16, 93, 125, 126, 129, 132, 168, 324, 442, 452, 455, 456, 457, 459, 465, 469, 481, 498], "n_jobs_default": [93, 125, 126, 129, 132, 168], "n_model": [72, 76], "n_ob": [454, 463, 470], "n_observ": 574, "n_off": [105, 110, 287, 297, 298, 301, 457, 575, 576], "n_off_posit": 453, "n_off_region": [180, 453], "n_on": [285, 287, 288, 294, 297, 298, 301, 413, 457, 574, 575, 576], "n_output": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 48, 49], "n_point": [19, 20, 26, 217, 218, 221, 222, 225, 227, 228, 229, 230, 233, 234, 236, 237, 238, 239, 240, 242, 246, 248, 250, 251, 252, 253, 257, 260, 262, 264, 265, 266, 267, 270, 272, 274, 275, 405, 568], "n_scale": 117, "n_sig": [285, 287, 471, 576], "n_sig_matching_signific": [285, 287], "n_sigma": [71, 74, 75, 78, 121, 122, 123, 124, 125, 126, 129, 130, 131, 132, 283, 285, 287, 446, 455, 465, 469, 476, 477, 478, 498, 500, 512], "n_sigma_sensit": [121, 122, 123, 124], "n_sigma_ul": [71, 74, 75, 78, 121, 122, 123, 124, 125, 126, 129, 130, 132, 455, 465, 468, 469, 476, 477, 478, 498, 500, 512], "n_sourc": [45, 504], "n_spatial_ax": 196, "n_submodel": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40], "n_tel": 91, "n_time_bin": [469, 473], "nachiketa": [434, 435], "naima": [246, 376, 394, 395, 396, 397, 400, 419, 445, 446, 448, 451, 452, 453, 454, 455, 456, 457, 459, 460, 461, 462, 463, 464, 465, 468, 469, 470, 471, 475, 476, 477, 479, 481, 482, 483, 484, 485, 487, 489, 490, 491, 492, 498, 499, 500, 514, 528, 559, 560], "naimamodel": [419, 422, 424], "naimaspectralmodel": [256, 400, 428, 485, 514, 550], "nakashima": 420, "name": [15, 16, 19, 20, 26, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 48, 49, 52, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 90, 91, 94, 96, 99, 100, 101, 102, 104, 105, 106, 107, 109, 110, 111, 114, 115, 116, 122, 123, 124, 125, 126, 129, 130, 132, 136, 144, 146, 147, 148, 149, 150, 151, 152, 153, 154, 156, 157, 159, 160, 161, 162, 163, 164, 165, 172, 173, 182, 183, 188, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 210, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 242, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 269, 270, 271, 272, 273, 274, 275, 283, 302, 303, 325, 356, 357, 372, 378, 380, 383, 386, 387, 389, 390, 391, 392, 395, 396, 399, 400, 401, 403, 404, 405, 406, 409, 411, 418, 419, 420, 421, 422, 423, 424, 425, 428, 437, 439, 440, 442, 446, 447, 448, 449, 451, 452, 453, 454, 455, 456, 457, 459, 460, 461, 462, 463, 464, 465, 467, 468, 469, 470, 471, 473, 476, 477, 478, 479, 480, 481, 482, 484, 485, 486, 487, 489, 490, 491, 492, 498, 499, 500, 502, 512, 514, 518, 521, 523, 524, 526, 527, 528, 530, 531, 532, 533, 534, 535, 536, 537, 538, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 561, 562, 563, 564, 565, 566, 567, 568, 569, 576], "name1": 479, "name2": 479, "name_err": [125, 126, 129, 130], "name_scan": [125, 126, 129, 130], "name_substr": [223, 245, 484], "name_ul": [125, 126, 129, 130], "namedtupl": 377, "nameerror": 377, "namespac": [6, 16, 84, 90, 104, 123, 377, 396, 398, 421, 424, 434, 485, 503, 578], "namibia": 492, "nan": [19, 20, 26, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 67, 87, 91, 102, 122, 124, 135, 172, 190, 191, 192, 193, 195, 201, 204, 205, 213, 215, 217, 218, 221, 225, 227, 228, 229, 233, 239, 240, 242, 246, 248, 250, 251, 252, 257, 262, 264, 265, 266, 267, 270, 274, 377, 400, 405, 447, 448, 451, 452, 453, 454, 456, 457, 459, 460, 465, 467, 468, 469, 470, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 487, 498, 499, 500, 514, 550, 559], "nan_to_num": [100, 102, 105, 109, 110, 150, 151, 157, 162, 165, 193, 201, 205, 271], "nanograv": 514, "nansum": [192, 193, 195, 204, 205], "nasa": [58, 60, 61, 62, 64, 65, 149, 197, 397, 553], "nativ": [87, 91, 198, 389, 394, 428, 482], "natur": [87, 91, 377, 383, 400, 403, 485, 548], "nauroi": [301, 573], "naurois2012": 573, "navarro": 502, "navi": 447, "navig": [436, 438], "naxi": 482, "naxis1": 482, "naxis2": 482, "naxis3": 482, "naxis4": 482, "nbin": [16, 111, 115, 126, 152, 154, 160, 162, 194, 197, 202, 205, 336, 337, 393, 446, 451, 452, 453, 456, 457, 459, 460, 461, 463, 464, 465, 468, 469, 471, 473, 477, 480, 481, 482, 485, 490, 491, 492, 498, 518, 521, 523, 524, 527], "nbin_per_decad": 197, "nbstripout": 385, "nchunk": 286, "ncol": [146, 147, 192, 193, 195, 201, 204, 205, 370, 374, 448, 451, 455, 457, 459, 461, 471, 477, 479, 482, 483, 523, 540], "ncp": 474, "ncwv88t7": 485, "nd": [192, 193, 195, 201, 204, 205, 269, 270, 398, 482, 527], "ndarrai": [17, 18, 21, 22, 24, 25, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 87, 91, 92, 101, 117, 146, 147, 148, 149, 150, 153, 154, 156, 159, 160, 161, 162, 163, 165, 178, 190, 191, 192, 193, 194, 195, 196, 197, 198, 200, 201, 202, 203, 204, 205, 208, 209, 213, 214, 215, 216, 223, 247, 248, 274, 284, 285, 286, 287, 288, 289, 290, 292, 293, 294, 295, 296, 299, 300, 301, 304, 315, 316, 317, 326, 331, 333, 366, 370, 371, 377, 477, 482, 500, 526, 527], "nddata": [419, 422], "nddataarrai": [420, 434, 435], "ndecad": [17, 18, 21, 22, 23, 24, 25, 27, 279], "ndim": [102, 109, 111, 115, 147, 149, 152, 191, 198, 203, 453, 456, 461, 465, 477, 478, 480, 481, 482, 489, 490, 500, 512, 527], "ndimag": [205, 391], "ndmap": 478, "ndmin": 304, "ne": 389, "nearest": [26, 132, 146, 147, 148, 149, 152, 153, 154, 156, 159, 161, 163, 164, 172, 192, 193, 195, 197, 201, 204, 205, 316, 430, 437, 439, 482, 512, 514, 526], "nearli": [377, 428, 448], "nebula": [50, 277, 283, 422, 451, 452, 453, 457, 460, 461, 462, 468, 479, 483, 485, 487, 490, 491, 492, 498, 499, 500, 505, 527, 573], "necess": [401, 487], "necessari": [16, 84, 90, 101, 104, 123, 380, 387, 392, 403, 430, 448, 451, 453, 454, 457, 463, 464, 467, 469, 470, 478, 481, 482, 484, 485, 499, 510, 511, 514], "necessarili": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 82, 392, 456], "need": [11, 16, 19, 20, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 84, 85, 87, 89, 90, 91, 94, 101, 102, 104, 105, 109, 110, 121, 123, 124, 150, 151, 162, 164, 165, 200, 276, 277, 304, 376, 377, 378, 382, 383, 384, 385, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 399, 401, 402, 403, 404, 407, 408, 413, 417, 418, 419, 436, 438, 443, 447, 448, 452, 454, 455, 456, 457, 461, 463, 464, 469, 470, 473, 474, 479, 480, 482, 483, 484, 485, 486, 489, 491, 498, 500, 510, 523, 525, 526, 574, 578], "need_upd": 428, "neg": [19, 20, 26, 87, 91, 122, 124, 125, 126, 129, 130, 132, 217, 218, 221, 225, 227, 228, 229, 233, 239, 240, 242, 246, 248, 250, 251, 252, 257, 262, 264, 265, 266, 267, 270, 273, 274, 285, 287, 378, 425, 443, 487, 512, 576, 577], "neglect": [127, 178, 446, 481, 512, 577], "neighbor": [153, 161, 163, 430, 437], "neighbour": [316, 535], "neither": [96, 178, 394, 402], "neldermead": 210, "nep": [382, 402], "neraest": 193, "nest": [15, 191, 192, 193, 246, 283, 304, 344, 442, 490, 525, 576], "nested_model": 246, "net": [26, 87, 91, 451, 514], "neutrino": [52, 377], "neutron": 36, "never": [374, 376, 377, 380, 383, 387, 391, 399, 491], "new": [16, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 82, 83, 84, 86, 87, 88, 90, 91, 92, 101, 102, 104, 105, 109, 110, 122, 123, 124, 125, 129, 132, 135, 144, 146, 147, 148, 149, 152, 154, 156, 159, 164, 175, 176, 180, 190, 191, 192, 193, 194, 195, 196, 197, 198, 200, 201, 202, 203, 204, 205, 223, 245, 261, 271, 295, 304, 328, 355, 362, 380, 382, 383, 384, 385, 386, 387, 389, 390, 391, 394, 395, 396, 397, 398, 399, 400, 402, 403, 404, 406, 407, 408, 409, 411, 412, 413, 414, 415, 416, 429, 432, 459, 473, 474, 476, 477, 482, 484, 485, 511, 512, 514, 559, 573], "new_attribut": 377, "new_axi": 144, "new_dataset_nam": [223, 245], "new_datasets_nam": [19, 20, 26, 217, 218, 219, 220, 221, 222, 224, 225, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 242, 244, 246, 247, 248, 249, 250, 251, 252, 253, 254, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 269, 270, 271, 272, 273, 274, 275], "new_ev": 514, "new_flux_map": 401, "new_funct": 377, "new_input": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40], "new_model": 559, "new_nam": [87, 91, 190, 191, 192, 193, 195, 196, 197, 200, 201, 203, 204, 205], "new_ob": [88, 514], "new_observ": 92, "newaxi": 526, "newer": [394, 407, 418, 437], "newli": [422, 423, 424], "next": [87, 91, 102, 377, 378, 382, 393, 397, 398, 402, 405, 406, 434, 435, 446, 459, 462, 463, 465, 467, 476, 477, 478, 481, 482, 485, 486, 487, 490], "nfcn": 479, "nfev": [101, 210, 211, 212, 448, 449, 451, 452, 453, 459, 460, 461, 471, 473, 478, 479, 490, 498, 499], "nfw": [25, 27, 502], "nfwprofil": 475, "ni": 377, "nice": [377, 382, 388, 394, 396, 404, 420, 428, 455, 459, 476, 574], "nicer": [377, 413, 500], "nieto": [425, 428, 430, 431, 439, 441, 442, 443], "nieva": 439, "night": [392, 469], "nightli": [409, 468], "nightwise_lc": 468, "nigro": [425, 428, 430, 436, 437, 439, 442], "nijfi3pb": 473, "niter": [122, 124, 132, 455], "nmcid": 431, "nn": 491, "noah": [405, 443], "node": [19, 20, 26, 162, 165, 194, 197, 217, 218, 221, 225, 227, 228, 229, 233, 239, 240, 242, 246, 247, 248, 250, 251, 252, 257, 262, 264, 265, 266, 267, 270, 274, 419, 479, 480, 482, 489, 490, 534, 551], "node_typ": [194, 197, 202, 463, 464, 480, 490], "noeth": [425, 426], "nois": [286, 292, 395, 573], "noisi": 489, "non": [16, 84, 87, 90, 91, 100, 102, 104, 105, 109, 110, 114, 116, 122, 123, 124, 132, 146, 147, 148, 149, 150, 151, 152, 153, 154, 156, 157, 159, 161, 162, 163, 164, 165, 174, 178, 190, 191, 192, 193, 195, 196, 197, 198, 200, 201, 202, 203, 204, 205, 271, 304, 367, 368, 370, 372, 383, 388, 391, 395, 397, 398, 404, 418, 422, 423, 424, 428, 436, 439, 440, 442, 443, 448, 473, 490, 494, 510, 514, 525, 526, 550, 573], "none": [16, 17, 19, 20, 21, 22, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 50, 51, 52, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 96, 99, 100, 101, 102, 103, 104, 105, 108, 109, 110, 112, 113, 117, 119, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 135, 139, 142, 144, 146, 147, 148, 149, 150, 151, 152, 153, 154, 156, 157, 159, 160, 161, 162, 163, 164, 165, 167, 168, 169, 172, 174, 175, 176, 177, 178, 179, 180, 182, 183, 184, 185, 187, 188, 189, 190, 191, 192, 193, 195, 196, 197, 198, 199, 200, 201, 203, 204, 205, 206, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 242, 243, 245, 246, 247, 248, 249, 250, 251, 252, 253, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 269, 270, 271, 272, 273, 274, 275, 283, 285, 286, 287, 301, 302, 304, 307, 312, 316, 324, 325, 326, 328, 331, 332, 333, 334, 343, 346, 352, 360, 364, 365, 366, 370, 371, 372, 373, 374, 377, 389, 391, 394, 401, 404, 405, 430, 441, 442, 447, 448, 449, 451, 452, 454, 455, 459, 460, 461, 463, 464, 465, 467, 469, 470, 471, 473, 475, 476, 477, 478, 481, 482, 484, 485, 487, 490, 498, 502, 510, 526, 531, 532, 533, 574], "nonetyp": [84, 90, 104, 123], "nonposit": [19, 20, 26, 217, 218, 221, 225, 227, 228, 229, 233, 239, 240, 242, 246, 248, 250, 251, 252, 257, 262, 264, 265, 266, 267, 270, 274], "nonposx": [19, 20, 26, 217, 218, 221, 225, 227, 228, 229, 233, 239, 240, 242, 246, 248, 250, 251, 252, 257, 262, 264, 265, 266, 267, 270, 274, 428], "nonstopmod": 378, "nonzero": 39, "nooverlaperror": 441, "noqa": [19, 20, 149, 185, 196, 197, 203, 225, 374], "nor": [96, 178, 387, 398, 402, 406], "norm": [19, 20, 26, 121, 122, 124, 125, 126, 129, 132, 134, 141, 143, 169, 217, 218, 221, 222, 225, 227, 228, 229, 230, 231, 233, 234, 236, 237, 238, 239, 240, 242, 246, 247, 248, 250, 251, 252, 253, 257, 260, 262, 264, 265, 266, 267, 270, 272, 274, 275, 370, 388, 399, 401, 405, 422, 423, 425, 428, 443, 445, 451, 455, 456, 457, 459, 460, 462, 463, 464, 465, 467, 469, 470, 471, 475, 476, 477, 478, 479, 490, 498, 499, 500, 502, 512, 514, 521, 528, 533, 539, 540, 547, 559, 560, 568, 576], "norm_0": [534, 551], "norm_1": [534, 551], "norm_2": [534, 551], "norm_3": [534, 551], "norm_4": 551, "norm_5": 551, "norm_err": [121, 122, 124, 126, 132, 141, 401, 455, 465, 469, 477, 478, 512], "norm_errn": [122, 124, 469, 476, 478, 500, 512], "norm_errp": [122, 124, 469, 476, 478, 500, 512], "norm_only_chang": 440, "norm_prior": 405, "norm_scan": [122, 401, 451, 452, 478, 512], "norm_sensit": [122, 124], "norm_ul": [122, 124, 401, 465, 469, 476, 477, 478, 500, 512], "norma": [33, 38], "normal": [42, 101, 102, 105, 109, 110, 125, 126, 127, 129, 139, 146, 147, 148, 149, 151, 152, 153, 154, 156, 159, 160, 161, 162, 163, 164, 165, 169, 192, 193, 195, 201, 202, 204, 205, 231, 247, 248, 251, 271, 273, 276, 304, 367, 368, 377, 378, 382, 383, 387, 388, 391, 395, 401, 417, 421, 430, 447, 457, 463, 468, 469, 471, 481, 482, 483, 484, 485, 490, 499, 500, 526, 531, 532, 533, 536, 537, 538, 559, 575, 576], "normalis": [67, 80, 121, 122, 124, 129, 146, 147, 148, 149, 152, 154, 156, 159, 160, 164, 169, 189, 192, 193, 195, 201, 204, 205, 247, 248, 261, 375, 452, 455, 456, 457, 470, 478, 483, 484, 485, 490, 498], "normed_templ": 485, "normspectralmodel": [223, 245, 400, 425, 441, 443, 485, 521], "north": [224, 232, 235, 531], "notat": [425, 516, 518, 524, 577], "note": [15, 16, 19, 20, 26, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 78, 82, 83, 84, 86, 87, 90, 91, 94, 101, 102, 103, 104, 105, 108, 109, 110, 117, 121, 123, 124, 129, 132, 149, 154, 162, 164, 174, 185, 203, 207, 210, 213, 217, 218, 220, 221, 224, 225, 227, 228, 229, 230, 232, 233, 234, 235, 236, 237, 238, 239, 240, 242, 246, 248, 249, 250, 251, 252, 253, 257, 258, 259, 260, 262, 264, 265, 266, 267, 270, 272, 273, 274, 292, 293, 304, 325, 352, 368, 374, 376, 379, 380, 382, 385, 390, 391, 394, 397, 401, 402, 403, 405, 406, 407, 410, 416, 418, 438, 440, 442, 446, 447, 448, 452, 453, 455, 456, 459, 462, 464, 469, 470, 471, 473, 474, 475, 476, 477, 479, 480, 481, 482, 483, 484, 485, 487, 489, 490, 491, 510, 512, 514, 521, 526, 527, 536, 537, 548, 576, 577, 578], "notebook": [87, 91, 341, 380, 381, 386, 387, 391, 392, 393, 394, 395, 397, 407, 409, 410, 411, 414, 417, 418, 419, 420, 422, 423, 424, 426, 428, 430, 434, 435, 436, 437, 438, 443, 446, 447, 448, 449, 451, 452, 453, 454, 455, 456, 457, 459, 460, 461, 462, 463, 464, 465, 467, 468, 469, 470, 471, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 489, 490, 491, 492, 494, 496, 498, 499, 500, 513, 514, 515, 528, 530, 531, 532, 533, 534, 535, 536, 537, 538, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 561, 562, 563, 564, 565, 566, 567, 568, 569, 574], "noth": [328, 394, 487], "notic": [383, 479, 494], "notimplementederror": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40], "nov": [384, 389, 394, 395, 397, 401, 414, 415, 439], "novemb": [386, 415, 425, 426, 427, 428], "now": [16, 82, 84, 88, 90, 99, 104, 122, 123, 124, 202, 246, 377, 380, 382, 383, 384, 387, 389, 390, 391, 393, 394, 395, 396, 397, 398, 401, 403, 404, 405, 412, 417, 418, 419, 420, 421, 422, 423, 424, 425, 428, 429, 430, 431, 435, 436, 437, 438, 439, 440, 441, 442, 443, 446, 447, 448, 451, 452, 453, 454, 456, 457, 459, 460, 462, 463, 464, 465, 467, 468, 469, 470, 471, 473, 477, 479, 482, 483, 484, 485, 486, 487, 489, 490, 491, 492, 498, 499, 500, 511, 512, 523, 561, 565, 566, 567, 574, 576, 577, 578], "np": [83, 87, 91, 102, 105, 109, 110, 111, 115, 117, 121, 124, 132, 151, 192, 193, 195, 201, 204, 205, 210, 276, 377, 378, 388, 389, 392, 400, 401, 405, 413, 439, 446, 454, 455, 457, 463, 465, 467, 469, 470, 471, 473, 474, 475, 476, 478, 479, 480, 481, 482, 483, 485, 486, 487, 506, 507, 508, 512, 514, 521, 526, 527, 531, 532, 534, 559, 567, 574], "npanel": 364, "npix": [191, 200, 203, 204, 205, 451, 461, 480, 490, 523, 527, 530, 534], "npix_max": 191, "npoint": [286, 479], "npred": [102, 105, 109, 110, 121, 122, 124, 125, 126, 129, 130, 132, 141, 271, 289, 388, 389, 390, 399, 401, 416, 418, 425, 428, 434, 436, 455, 463, 465, 469, 476, 477, 478, 487, 490, 510, 512, 576], "npred_background": [102, 105, 109, 110, 122, 124, 425, 453, 454, 465, 477, 512, 576], "npred_background_min": 145, "npred_excess": [121, 122, 124, 126, 132, 134, 141, 143, 455, 457, 465, 469, 471, 478, 512], "npred_excess_err": [122, 124], "npred_excess_errn": [122, 124], "npred_excess_errp": [122, 124], "npred_excess_ref": [122, 124], "npred_excess_ul": [122, 124], "npred_min": 145, "npred_off": [105, 110, 576], "npred_sig": [102, 105, 109, 110, 389], "npred_sign": [102, 105, 109, 110, 373, 428, 442, 477, 576], "npred_signal_min": 145, "npred_sourc": 477, "nrow": [448, 451, 479, 540], "nside": [191, 192, 193, 439, 490, 525], "nside2resol": 193, "nside_til": [191, 193], "nsou": 455, "nstep": 392, "nu": [19, 26], "nu_e": [26, 475], "nu_mu": [26, 475], "nu_tau": [26, 475], "nuisanc": [451, 479, 573, 577], "null": [122, 124, 125, 126, 129, 130, 283, 285, 287, 452, 456, 457, 459, 462, 478, 485, 498, 512, 530, 531, 532, 533, 534, 535, 536, 537, 538, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 561, 562, 563, 564, 565, 566, 567, 568, 569, 576], "null_valu": [130, 283, 465], "nullabl": [87, 91], "num": 83, "numba": 394, "number": [11, 17, 18, 19, 20, 21, 22, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 35, 36, 37, 39, 40, 42, 45, 46, 47, 67, 72, 76, 82, 83, 85, 86, 87, 91, 92, 93, 94, 100, 102, 103, 105, 108, 109, 110, 112, 117, 121, 122, 123, 124, 125, 126, 129, 130, 131, 132, 146, 147, 148, 149, 150, 151, 152, 153, 154, 156, 157, 159, 161, 162, 163, 164, 165, 168, 169, 172, 175, 180, 190, 191, 192, 193, 194, 195, 196, 197, 198, 200, 201, 202, 203, 204, 205, 210, 211, 212, 213, 214, 216, 217, 218, 220, 221, 222, 223, 224, 225, 227, 228, 229, 230, 232, 233, 234, 235, 236, 237, 238, 239, 240, 242, 245, 246, 248, 249, 250, 251, 252, 253, 257, 258, 259, 260, 262, 264, 265, 266, 267, 270, 272, 273, 274, 275, 279, 283, 285, 286, 287, 300, 304, 322, 324, 325, 326, 327, 328, 331, 332, 333, 334, 336, 337, 364, 370, 381, 382, 383, 386, 388, 389, 390, 391, 392, 396, 398, 401, 403, 404, 406, 413, 418, 428, 430, 431, 432, 437, 438, 439, 442, 443, 446, 447, 448, 451, 452, 453, 454, 455, 456, 457, 459, 461, 462, 463, 464, 467, 468, 469, 470, 471, 473, 474, 475, 476, 477, 478, 481, 482, 483, 485, 486, 489, 490, 491, 492, 498, 499, 500, 504, 510, 512, 514, 521, 523, 526, 527, 573, 574, 575, 576, 577], "number_of_column": [87, 91], "numer": [17, 18, 19, 20, 21, 22, 24, 25, 26, 27, 87, 91, 124, 197, 213, 217, 218, 220, 221, 224, 225, 227, 228, 229, 230, 232, 233, 234, 235, 236, 237, 238, 239, 240, 242, 246, 248, 249, 250, 251, 252, 253, 257, 258, 259, 260, 262, 264, 265, 266, 267, 270, 272, 273, 274, 275, 304, 376, 377, 390, 395, 410, 428, 446, 454, 456, 459, 461, 467, 470, 482, 489], "numpi": [19, 20, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 83, 87, 91, 92, 101, 111, 115, 117, 124, 146, 147, 148, 149, 151, 152, 153, 154, 156, 159, 160, 161, 163, 164, 190, 191, 192, 193, 195, 200, 201, 203, 204, 205, 207, 208, 210, 213, 214, 216, 217, 220, 221, 223, 224, 225, 227, 228, 229, 230, 232, 233, 234, 235, 236, 237, 238, 239, 240, 242, 245, 249, 250, 251, 252, 253, 257, 258, 259, 260, 261, 262, 265, 266, 267, 272, 273, 285, 287, 304, 328, 333, 371, 376, 377, 378, 380, 384, 388, 390, 394, 395, 396, 403, 405, 413, 414, 421, 422, 425, 433, 434, 435, 437, 439, 440, 441, 443, 446, 448, 451, 452, 453, 454, 455, 456, 457, 459, 460, 461, 462, 463, 464, 465, 467, 468, 469, 470, 471, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 489, 490, 491, 492, 494, 498, 499, 500, 506, 507, 508, 512, 514, 526, 527, 531, 532, 534, 559, 567], "numpoint": [210, 479], "numpy121": 380, "nupeak_ob": 500, "nutshel": 578, "nvow1vo2": 473, "nxxhtbi": 473, "n\u00f6the": [428, 430, 431], "o": [67, 82, 87, 91, 101, 199, 377, 386, 391, 394, 398, 401, 408, 409, 411, 420, 428, 431, 434, 435, 436, 442, 446, 448, 451, 455, 461, 468, 469, 470, 473, 474, 482, 486, 487, 489, 514, 573, 574], "ob": [40, 82, 83, 88, 89, 91, 92, 96, 162, 172, 302, 303, 389, 390, 393, 394, 399, 413, 431, 432, 441, 446, 448, 451, 454, 455, 461, 463, 467, 469, 470, 471, 473, 481, 486, 489, 490, 491, 492, 496, 499, 511, 514, 519, 521, 523, 524], "obei": 526, "obj": [16, 84, 90, 104, 123, 453, 473], "object": [6, 15, 16, 19, 20, 23, 26, 28, 29, 30, 31, 32, 34, 35, 36, 37, 39, 40, 50, 51, 52, 54, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 94, 100, 101, 102, 103, 104, 105, 109, 110, 122, 123, 124, 127, 128, 129, 135, 136, 137, 138, 141, 144, 146, 147, 148, 149, 150, 151, 152, 153, 154, 156, 157, 159, 160, 161, 162, 163, 164, 165, 166, 168, 176, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 269, 270, 271, 272, 273, 274, 275, 283, 285, 287, 304, 308, 312, 313, 316, 324, 326, 328, 334, 337, 351, 352, 353, 354, 359, 364, 370, 372, 373, 374, 383, 388, 389, 390, 391, 392, 393, 395, 396, 397, 398, 401, 403, 404, 409, 413, 419, 420, 422, 423, 424, 425, 428, 430, 435, 436, 437, 439, 442, 443, 446, 447, 448, 449, 451, 452, 453, 454, 455, 460, 462, 465, 467, 468, 469, 470, 473, 474, 477, 479, 481, 482, 483, 484, 485, 487, 489, 490, 491, 492, 498, 499, 500, 504, 509, 510, 511, 512, 520, 523, 525, 526, 527, 559, 571, 573, 574, 578], "obs2": 514, "obs_": 451, "obs_clust": [92, 486], "obs_col": 461, "obs_con": [16, 452, 456, 457, 459, 498], "obs_copi": 88, "obs_fil": [16, 452, 456, 457, 459, 498], "obs_filenam": 491, "obs_filt": [88, 89], "obs_id": [16, 82, 87, 88, 89, 91, 96, 145, 210, 302, 303, 387, 389, 399, 404, 413, 448, 451, 452, 453, 454, 456, 457, 459, 460, 461, 463, 464, 468, 469, 470, 473, 479, 481, 486, 489, 491, 492, 496, 498, 499, 523], "obs_id_uniqu": 87, "obs_index": 82, "obs_info": [90, 104, 404], "obs_list": [436, 438], "obs_list_vela": 471, "obs_mod": 95, "obs_model": 447, "obs_muoneff": 486, "obs_po": [41, 307], "obs_tabl": [82, 91, 96, 302, 303, 430, 461, 463, 469, 473, 481, 486, 489, 491, 492, 496, 499, 523], "obs_table_filenam": 82, "obs_tim": [16, 452, 456, 457, 459, 498], "obs_time_src": 481, "obs_zenith": 486, "obscor": 443, "observ": [6, 15, 16, 41, 82, 83, 85, 86, 87, 89, 90, 91, 93, 94, 95, 96, 101, 102, 103, 104, 105, 108, 109, 110, 112, 162, 167, 168, 169, 172, 173, 174, 175, 177, 178, 179, 182, 183, 184, 185, 187, 188, 189, 222, 225, 230, 234, 236, 237, 238, 253, 260, 272, 275, 288, 294, 301, 303, 312, 333, 381, 383, 389, 390, 391, 392, 393, 397, 399, 401, 404, 409, 418, 422, 423, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 442, 443, 445, 446, 448, 453, 454, 456, 457, 459, 460, 467, 470, 471, 473, 474, 479, 487, 488, 489, 491, 492, 494, 496, 502, 510, 511, 514, 517, 519, 521, 523, 524, 550, 573, 574, 575, 576], "observation_clust": [445, 486, 488], "observation_dead_time_fract": [83, 88], "observation_list": 92, "observation_live_time_dur": [83, 88], "observation_time_dur": [83, 88], "observation_time_start": 83, "observation_time_stop": 83, "observationcheck": 437, "observationcta": 387, "observationeventsampl": 443, "observationfilt": [88, 387, 392, 417, 438], "observationlist": [387, 438], "observationmetadata": 404, "observations_list": 92, "observationsconfig": 16, "observationseventsampl": 443, "observationssummari": 422, "observationstat": [417, 422], "observationt": [82, 390, 391, 439, 486, 491, 499], "observationtablecheck": 437, "observationtablesummari": 434, "observatori": [57, 59, 63, 82, 83, 85, 88, 90, 94, 390, 404, 406, 409, 429, 489, 491, 492, 509, 514], "observatory_earth_loc": [83, 88], "observatory_loc": [404, 430, 446, 454, 463, 464, 467, 470], "obsinfometadata": [90, 104], "obstim": [85, 94, 185, 578], "obtain": [85, 102, 105, 108, 110, 122, 124, 136, 291, 387, 392, 394, 395, 401, 438, 451, 452, 453, 455, 457, 463, 464, 469, 473, 474, 479, 482, 483, 487, 498, 500, 510, 514, 518, 519, 575, 576], "obviou": [389, 396, 397, 398, 404], "obvious": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 502], "occur": [192, 193, 195, 204, 205, 334, 377, 397, 398, 402, 490], "occurr": [92, 100, 196, 214, 216, 223, 245], "oct": [385, 387, 388, 392, 394, 397, 403], "octob": 386, "odd": [203, 205], "odd_npix": [203, 205], "odot": [28, 35, 39, 40, 52], "off": [102, 103, 105, 107, 108, 109, 110, 121, 122, 124, 167, 173, 174, 177, 180, 189, 287, 301, 374, 375, 380, 383, 389, 391, 392, 393, 422, 428, 430, 432, 442, 446, 447, 448, 452, 453, 457, 461, 468, 469, 471, 473, 477, 479, 481, 487, 510, 523, 524, 573, 575, 576, 577], "off_2": [105, 110], "off_ev": 471, "off_patch": 471, "off_phas": [173, 471], "off_phase_rang": 471, "offdatabackgroundmak": 433, "offer": [122, 380, 388, 403, 404, 409, 410, 437, 453, 478, 479, 481, 485, 514], "offici": [403, 515, 574], "offlin": [87, 91], "offset": [83, 96, 112, 146, 147, 148, 149, 152, 153, 154, 156, 159, 161, 162, 163, 164, 165, 168, 172, 178, 179, 184, 187, 192, 193, 195, 197, 201, 204, 205, 377, 383, 391, 413, 422, 432, 434, 436, 441, 442, 443, 446, 453, 454, 456, 459, 460, 461, 467, 471, 480, 481, 486, 489, 492, 499, 511, 519, 521, 524], "offset2": 83, "offset_axi": [152, 154, 159, 164], "offset_band": 83, "offset_from_median": 83, "offset_index": 159, "offset_max": [16, 83, 168, 178, 184, 187, 452, 456, 457, 459, 461, 467, 471, 481, 498, 499, 521, 524], "offset_min": 83, "often": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 136, 277, 367, 368, 377, 382, 391, 392, 393, 395, 435, 446, 448, 452, 456, 457, 460, 461, 467, 473, 477, 479, 481, 483, 498, 499, 510, 514, 573], "ogip": [95, 106, 107, 110, 149, 194, 196, 197, 200, 201, 202, 389, 392, 435, 447, 451, 460, 510, 518, 527], "ogip_column": 201, "ogipdatasetread": 110, "ogipdatasetwrit": [110, 441, 443], "ok": [377, 391, 479], "old": [196, 362, 377, 382, 385, 389, 393, 394, 419, 420, 435, 436, 437, 474], "old_attribut": 377, "older": [384, 394, 410, 435, 476], "oldest": 397, "olga": [433, 434], "olivera": [425, 428, 430, 431, 439, 441, 442, 443], "omega": [19, 20, 23, 260, 276, 489, 531, 567], "omit": [132, 378, 459, 489, 574], "omp": 397, "on_circl": 523, "on_ellipse_annulu": 523, "on_ev": 471, "on_patch": 471, "on_phas": [173, 471], "on_phase_rang": 471, "on_posit": 189, "on_radii": 446, "on_radiu": [461, 471], "on_rectangl": 523, "on_region": [16, 102, 105, 175, 446, 448, 451, 452, 453, 454, 456, 457, 459, 461, 463, 464, 468, 469, 471, 473, 477, 498, 523], "on_region_radiu": [446, 451, 454, 463, 464, 469, 473], "onc": [87, 91, 102, 203, 377, 380, 382, 387, 388, 391, 392, 393, 397, 398, 399, 401, 402, 406, 407, 408, 409, 411, 453, 469, 471, 481, 484, 491, 494, 511, 514, 574], "one": [16, 19, 20, 26, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 59, 70, 84, 87, 89, 90, 91, 92, 93, 95, 99, 102, 104, 105, 108, 109, 110, 112, 117, 121, 122, 123, 124, 125, 126, 127, 129, 130, 132, 134, 135, 140, 143, 146, 147, 148, 149, 150, 151, 152, 153, 154, 156, 157, 159, 160, 161, 162, 163, 164, 165, 168, 172, 174, 190, 191, 192, 193, 194, 195, 196, 197, 200, 201, 202, 203, 204, 205, 210, 217, 218, 219, 220, 221, 222, 223, 224, 225, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 242, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 269, 270, 271, 272, 273, 274, 275, 279, 283, 285, 286, 287, 312, 317, 333, 348, 364, 370, 371, 377, 378, 379, 380, 382, 383, 384, 385, 386, 388, 389, 390, 391, 393, 394, 395, 396, 397, 399, 401, 402, 403, 404, 405, 407, 408, 409, 436, 439, 440, 442, 446, 448, 451, 452, 453, 456, 459, 463, 468, 470, 471, 474, 476, 477, 479, 480, 481, 482, 483, 484, 485, 487, 489, 490, 491, 498, 499, 500, 509, 510, 511, 512, 514, 519, 521, 523, 526, 527, 533, 571, 572, 574, 575, 576, 577, 578], "ones": [87, 91, 117, 121, 125, 129, 132, 149, 196, 381, 385, 389, 391, 394, 397, 405, 410, 413, 470, 474, 480, 482, 502, 521, 573, 574], "ones_lik": [471, 521], "ongo": [380, 383, 384, 407], "onli": [16, 19, 20, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 70, 72, 74, 79, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 93, 95, 100, 101, 102, 103, 104, 105, 108, 109, 110, 121, 123, 124, 125, 129, 132, 133, 135, 142, 143, 150, 151, 155, 157, 162, 165, 168, 174, 179, 190, 191, 192, 193, 195, 197, 200, 201, 202, 203, 204, 205, 213, 214, 216, 217, 220, 221, 223, 224, 225, 227, 228, 229, 230, 232, 233, 234, 235, 236, 237, 238, 239, 240, 242, 243, 245, 246, 249, 250, 251, 252, 253, 257, 258, 259, 260, 261, 262, 265, 266, 267, 271, 272, 273, 285, 287, 304, 324, 352, 374, 377, 378, 380, 382, 383, 384, 385, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 403, 404, 410, 418, 420, 424, 428, 430, 431, 436, 440, 442, 443, 448, 449, 451, 452, 453, 456, 457, 459, 460, 462, 463, 464, 465, 468, 469, 470, 471, 473, 476, 477, 479, 480, 481, 482, 483, 484, 485, 486, 487, 489, 490, 491, 499, 502, 510, 512, 518, 521, 524, 527, 569, 573, 574, 575, 576], "onlin": [87, 91, 378, 382, 385, 397, 413], "onlinelibrari": [134, 143], "onoff": [431, 510], "onserv": 93, "ontim": [185, 387, 463, 477], "onto": [105, 110, 192, 193, 195, 201, 203, 204, 205, 364, 383, 499, 510, 514, 526, 572], "oo": 403, "op": 393, "opac": 225, "open": [66, 87, 91, 377, 378, 380, 382, 388, 391, 394, 396, 397, 401, 402, 403, 406, 408, 409, 411, 413, 414, 435, 452, 460, 482, 489, 491, 492, 498, 509, 573, 574], "openastronomi": 436, "oper": [87, 91, 191, 203, 218, 377, 383, 388, 391, 423, 425, 428, 437, 438, 442, 447, 477, 484, 485, 526, 527, 540, 542, 546, 549, 551, 554, 559], "opinion": [382, 574], "oppos": [474, 550, 574], "opposit": [192, 193], "opt": [89, 476, 540, 550], "opt_method": 479, "optic": [225, 391, 447, 540], "optim": [19, 20, 26, 101, 130, 132, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 221, 225, 227, 228, 229, 233, 239, 240, 242, 246, 248, 250, 251, 252, 257, 262, 264, 265, 266, 267, 270, 274, 370, 376, 377, 386, 389, 390, 399, 401, 448, 449, 451, 452, 453, 454, 455, 459, 460, 461, 471, 473, 474, 478, 479, 487, 490, 498, 499], "optimis": [19, 20, 210, 211, 212, 213, 217, 220, 221, 224, 225, 227, 228, 229, 230, 232, 233, 234, 235, 236, 237, 238, 239, 240, 242, 249, 250, 251, 252, 253, 257, 258, 259, 260, 262, 265, 266, 267, 272, 273, 391, 393, 395, 437, 512, 571], "optimize_opt": [210, 459, 467, 478, 479, 499], "optimize_result": [210, 211, 442], "optimizeresult": [101, 210, 211, 448, 449, 451, 452, 453, 459, 460, 461, 471, 473, 478, 479, 490, 498, 499], "optin": 403, "optinon": [109, 110], "option": [11, 13, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 45, 46, 47, 67, 71, 72, 74, 75, 76, 77, 78, 79, 80, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 112, 114, 116, 117, 119, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 135, 139, 142, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 156, 157, 159, 160, 161, 162, 163, 164, 165, 168, 172, 173, 174, 175, 176, 179, 180, 182, 183, 184, 185, 186, 187, 188, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 207, 208, 209, 210, 211, 212, 213, 214, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 242, 245, 246, 247, 248, 249, 250, 251, 252, 253, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 269, 270, 271, 272, 273, 274, 275, 276, 277, 279, 281, 283, 284, 285, 286, 287, 291, 292, 293, 295, 300, 301, 302, 304, 315, 325, 328, 331, 332, 333, 334, 336, 337, 340, 345, 346, 348, 359, 360, 364, 365, 366, 371, 372, 373, 374, 377, 380, 382, 383, 385, 386, 388, 389, 391, 393, 395, 397, 400, 404, 407, 408, 409, 410, 411, 417, 418, 419, 422, 424, 425, 428, 430, 434, 436, 437, 438, 439, 441, 442, 443, 455, 459, 467, 468, 470, 476, 477, 481, 482, 483, 485, 486, 489, 490, 498, 499, 510, 512, 514, 526, 527, 569, 573, 574], "option1": 378, "option2": 378, "option3": 378, "option_context": [87, 91], "optionali": 534, "optout": 403, "optpars": 382, "oral": 403, "orang": [378, 451, 459, 465, 468, 471, 475, 478, 487, 523], "orchestr": [383, 387, 389, 393, 452, 498, 499], "orcid": 403, "order": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 82, 87, 91, 94, 100, 101, 102, 105, 124, 135, 146, 147, 150, 151, 157, 162, 165, 168, 172, 179, 182, 183, 188, 190, 191, 192, 193, 195, 196, 200, 201, 202, 203, 204, 205, 271, 283, 304, 374, 377, 378, 383, 388, 389, 391, 392, 393, 394, 401, 402, 403, 405, 418, 419, 420, 421, 422, 423, 424, 425, 428, 451, 452, 453, 455, 459, 460, 463, 471, 476, 479, 480, 481, 482, 485, 491, 498, 499, 500, 525, 526, 527, 574, 577], "ordereddict": [383, 394, 421], "ordinari": 500, "org": [11, 34, 63, 64, 65, 83, 87, 88, 91, 178, 210, 251, 252, 266, 267, 292, 304, 380, 385, 394, 397, 402, 403, 406, 408, 409, 411, 415, 434, 436, 446, 454, 456, 459, 460, 461, 467, 470, 475, 476, 479, 489, 557, 558, 574], "organ": [381, 397, 402, 403, 428, 491, 492, 511, 526], "organis": [384, 393, 396, 403, 436], "orient": [147, 155, 156, 377, 388], "origin": [16, 41, 84, 87, 90, 91, 102, 104, 109, 122, 123, 124, 193, 205, 269, 271, 273, 387, 391, 403, 404, 434, 452, 456, 457, 459, 469, 474, 482, 485, 490, 498, 530, 531, 532, 533, 534, 535, 536, 537, 538, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 561, 562, 563, 564, 565, 566, 567, 568, 569, 577, 578], "orthogon": 337, "oscar": [436, 437], "osx": 424, "ot": 406, "other": [13, 16, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 56, 67, 69, 83, 84, 86, 87, 90, 91, 102, 104, 105, 109, 110, 122, 123, 125, 129, 130, 146, 147, 148, 149, 150, 151, 152, 153, 154, 156, 157, 159, 161, 162, 163, 164, 165, 174, 191, 192, 193, 194, 195, 196, 197, 200, 201, 202, 203, 204, 205, 210, 214, 216, 271, 284, 304, 317, 347, 366, 371, 376, 380, 382, 384, 385, 386, 388, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 401, 403, 404, 408, 436, 446, 447, 448, 451, 452, 453, 454, 455, 456, 457, 459, 460, 461, 462, 463, 464, 465, 467, 468, 469, 470, 471, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 487, 489, 490, 491, 492, 498, 499, 500, 510, 511, 512, 514, 519, 521, 523, 527, 542, 571, 572, 574, 578], "other_id": 448, "otherwis": [16, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 82, 84, 87, 90, 91, 102, 104, 105, 109, 110, 123, 160, 199, 203, 205, 207, 213, 214, 215, 216, 223, 245, 304, 370, 390, 400, 403, 484, 485, 490, 541], "oup": [136, 300], "our": [377, 380, 386, 391, 393, 394, 396, 399, 400, 401, 403, 418, 419, 435, 446, 448, 451, 452, 453, 456, 457, 459, 460, 461, 464, 469, 470, 471, 473, 482, 483, 487, 491, 498, 499, 574], "ourself": 500, "out": [11, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 87, 91, 92, 94, 100, 101, 124, 192, 193, 195, 201, 204, 205, 245, 258, 259, 376, 377, 378, 380, 382, 385, 387, 389, 391, 393, 395, 396, 397, 402, 406, 413, 414, 416, 422, 436, 449, 453, 456, 457, 473, 482, 483, 489, 490, 498, 500, 502, 503, 523, 536, 537, 571, 574, 578], "out_fold": 393, "outcom": [382, 391], "outdat": [394, 397], "outdir": [16, 82, 93, 452, 456, 457, 459, 498], "outer": [43, 44, 52, 53, 126, 167, 258, 537], "outer_height": [523, 527], "outer_width": [523, 527], "outfil": 377, "outflow": 202, "outlin": [102, 105, 109, 110, 219, 220, 224, 232, 235, 249, 258, 259, 273, 380, 382, 385, 386, 387, 388, 391, 397, 400], "output": [11, 16, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 41, 83, 84, 86, 87, 88, 90, 91, 93, 104, 123, 140, 141, 149, 154, 192, 193, 195, 201, 204, 205, 211, 223, 237, 245, 286, 333, 378, 385, 387, 390, 393, 394, 398, 401, 404, 417, 432, 438, 441, 442, 459, 463, 464, 467, 470, 478, 481, 482, 498, 499, 512, 514, 574, 575], "output_map": [192, 193, 195, 201, 204, 205], "output_unit": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40], "outsid": [87, 91, 102, 105, 109, 110, 114, 116, 149, 169, 190, 191, 192, 193, 194, 195, 196, 197, 200, 201, 202, 203, 204, 205, 213, 215, 225, 274, 317, 365, 377, 391, 392, 393, 428, 457, 478, 479, 481, 482, 483, 514, 521, 533, 559], "over": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 67, 83, 87, 88, 91, 92, 95, 101, 102, 105, 109, 110, 125, 132, 136, 149, 150, 160, 162, 165, 172, 179, 182, 183, 185, 186, 192, 193, 195, 196, 197, 201, 203, 204, 205, 223, 245, 276, 285, 287, 291, 315, 316, 329, 368, 377, 378, 382, 385, 386, 387, 390, 391, 392, 397, 400, 404, 408, 410, 428, 448, 451, 455, 457, 459, 462, 463, 470, 476, 477, 478, 481, 482, 485, 499, 500, 512, 514, 518, 575, 576], "overal": [385, 391, 451], "overcom": 483, "overestim": [512, 576], "overflow": [202, 453, 470, 473, 562], "overkil": 470, "overlai": [452, 478], "overlaid": [102, 105, 109, 110, 451, 452], "overlap": [86, 91, 114, 116, 129, 180, 197, 202, 374, 392, 451], "overlap_ok": 86, "overlin": [102, 109, 510], "overload": 428, "overplot": [476, 509], "overrid": [16, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 84, 90, 104, 123, 344, 388, 451, 453, 461, 465], "overridden": [16, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 84, 87, 90, 91, 104, 123, 200, 374], "oversampl": [103, 108, 160, 162, 165, 172, 179, 185, 191, 192, 193, 195, 200, 201, 204, 205, 220, 224, 232, 235, 236, 237, 247, 258, 259, 261, 263, 269, 273, 275, 279, 419, 481], "oversample_energy_factor": [103, 108, 464], "oversampling_factor": [193, 203, 219, 220, 224, 232, 235, 236, 237, 247, 249, 258, 259, 261, 263, 269, 273, 275], "overview": [6, 380, 407, 422, 423, 425, 428, 445, 471, 478, 482, 485, 494, 500, 501, 514, 515, 528, 575], "overwrit": [11, 15, 16, 19, 20, 26, 82, 88, 93, 100, 101, 102, 105, 107, 109, 110, 122, 124, 150, 151, 157, 162, 165, 190, 191, 192, 193, 195, 197, 199, 200, 201, 202, 203, 204, 205, 211, 213, 217, 220, 221, 223, 224, 225, 227, 228, 229, 230, 232, 233, 234, 235, 236, 237, 238, 239, 240, 242, 245, 249, 250, 251, 252, 253, 257, 258, 259, 260, 262, 265, 266, 267, 269, 270, 271, 272, 273, 324, 346, 401, 437, 439, 451, 452, 459, 460, 463, 464, 465, 480, 482, 483, 484, 485, 489, 490, 496, 498, 499, 510, 527, 538, 574], "overwrite_templ": [211, 223, 245], "overwritten": [162, 165, 316], "owen": [416, 429], "own": [87, 91, 99, 122, 124, 199, 201, 380, 383, 393, 399, 403, 428, 446, 463, 485, 490, 499, 514, 526, 527], "p": [38, 51, 54, 87, 91, 109, 110, 128, 290, 301, 377, 428, 452, 462, 475, 479, 498, 514, 519, 520, 576], "p0_birth": 43, "p90": 48, "p_": [516, 518, 519, 520], "p_0": [51, 192, 195, 201, 204, 205, 506], "p_dot": [51, 54], "p_i": [192, 195, 201, 204, 205], "p_lat": [192, 195, 201, 204, 205], "p_lon": [192, 195, 201, 204, 205], "p_mean": 42, "p_n": [192, 195, 201, 204, 205], "p_stdv": 42, "p_valu": [285, 287, 479, 574, 576], "pace": [385, 386], "packag": [6, 11, 140, 304, 341, 376, 377, 378, 380, 381, 382, 383, 384, 385, 386, 391, 394, 395, 397, 402, 403, 404, 406, 408, 409, 411, 412, 413, 414, 415, 416, 418, 421, 422, 424, 425, 428, 431, 432, 433, 434, 435, 436, 437, 439, 446, 447, 448, 451, 452, 453, 454, 455, 456, 457, 459, 460, 461, 462, 463, 464, 465, 467, 468, 469, 470, 471, 473, 475, 476, 477, 479, 481, 482, 483, 484, 485, 487, 489, 490, 491, 492, 498, 499, 500, 510, 513, 514, 515, 522, 527, 538, 546, 548, 562, 574, 578], "pacman": 433, "paczynski": 37, "paczynski1990": [28, 29, 30, 35, 37, 39, 40, 48], "paczynski1990veloc": 49, "pad": [87, 91, 102, 105, 109, 110, 132, 146, 147, 148, 149, 152, 153, 154, 156, 159, 161, 163, 164, 172, 190, 191, 192, 193, 194, 195, 196, 197, 200, 201, 203, 204, 205, 365, 425, 428], "pad_width": [102, 109, 132, 146, 147, 148, 149, 152, 153, 154, 156, 159, 161, 163, 164, 190, 191, 192, 193, 195, 196, 197, 200, 201, 203, 204, 205], "pad_with": [192, 193, 195, 201, 204, 205], "page": [6, 87, 91, 210, 288, 294, 301, 378, 380, 382, 389, 391, 394, 397, 403, 406, 407, 409, 410, 414, 422, 423, 428, 431, 432, 435, 436, 437, 438, 479, 482, 492, 494, 512, 514, 525, 527, 575, 578], "pain": [377, 380, 384], "pair": [16, 84, 90, 102, 104, 105, 109, 110, 122, 123, 124, 136, 146, 147, 148, 149, 150, 151, 152, 153, 154, 156, 157, 159, 161, 162, 163, 164, 165, 190, 191, 192, 193, 195, 196, 199, 200, 201, 203, 204, 205, 393, 447], "panda": [87, 91, 376, 394, 437, 446, 448, 451, 452, 453, 454, 455, 456, 457, 459, 460, 461, 462, 463, 464, 465, 468, 469, 470, 471, 475, 476, 477, 479, 481, 482, 483, 484, 485, 487, 489, 490, 491, 492, 498, 499, 500], "panel": [88, 101, 102, 105, 109, 110, 364, 431, 463, 479], "panel_fov": 364, "panni": 428, "papadopoulo": [428, 430], "paper": [57, 59, 63, 72, 74, 125, 178, 397, 403, 437, 469, 474, 476, 481, 491, 502], "papermil": 393, "par": [388, 400, 405, 447, 473, 479, 487, 489], "par_000_amplitud": 479, "par_001_alpha": 479, "par_002_beta": 479, "par_00x_": 388, "par_1": [210, 479], "par_2": [210, 479], "par_alpha": [210, 479], "par_beta": [210, 479], "par_box": 91, "par_nam": [223, 231, 245, 261, 271], "par_to_v": 489, "par_typ": [223, 231, 245, 261, 271], "parabol": [284, 317, 479], "parabola": [239, 240, 445, 460, 479, 528, 560], "paragraph": 382, "parallel": [6, 93, 125, 126, 129, 132, 168, 319, 320, 321, 322, 323, 324, 325, 380, 394, 407, 430, 442, 443, 455, 477], "parallel_backend": [93, 125, 126, 129, 132, 168, 324, 465], "parallelbackendenum": 319, "parallelmixin": [93, 125, 132, 168], "param": [16, 84, 90, 104, 123, 225, 274, 370, 393, 423, 479], "param_nam": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40], "param_pair": 479, "param_set": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40], "paramet": [15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 71, 72, 74, 75, 76, 77, 78, 79, 80, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 96, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 156, 157, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 242, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 281, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 299, 300, 301, 302, 303, 304, 306, 308, 310, 311, 313, 315, 316, 317, 318, 324, 325, 326, 328, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 358, 359, 360, 361, 362, 364, 365, 366, 367, 368, 370, 371, 372, 373, 374, 375, 377, 378, 386, 389, 390, 392, 393, 395, 396, 399, 401, 403, 414, 417, 418, 419, 420, 421, 422, 424, 425, 428, 430, 435, 436, 437, 438, 439, 440, 441, 442, 443, 447, 448, 449, 451, 453, 454, 455, 456, 457, 459, 460, 461, 463, 464, 465, 467, 468, 470, 471, 473, 475, 476, 477, 478, 480, 481, 486, 487, 489, 490, 499, 500, 502, 510, 512, 513, 514, 521, 527, 530, 531, 532, 533, 534, 535, 536, 537, 538, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 561, 562, 563, 564, 565, 566, 567, 568, 569, 571, 572, 573, 574, 575, 576, 577], "parameter": 485, "parameter_constraint": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40], "parameter_nam": 378, "parameter_name_scan": 210, "parameter_typ": 378, "parameterestim": [118, 424, 443], "parameteris": [516, 518], "parameters_list": [214, 216], "parameters_nam": [223, 245], "parameters_stat_sum": 405, "parameters_unique_nam": [19, 20, 26, 217, 218, 219, 220, 221, 222, 223, 224, 225, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 242, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 269, 270, 271, 272, 273, 274, 275, 479], "parametr": [16, 27, 84, 90, 101, 104, 123, 152, 153, 158, 161, 163, 239, 240, 258, 389, 393, 400, 418, 425, 428, 453, 455, 485, 489, 536, 537, 548], "parametricpsf": [153, 161, 428, 430], "parametris": [161, 400, 422, 518, 520, 531, 532, 533, 534, 541, 544, 545, 546, 547, 548, 549, 551, 552, 553, 554, 555, 556, 557, 558, 561, 562, 563, 564, 565, 566, 567, 568, 569], "parent": [16, 84, 90, 104, 117, 121, 123, 125, 129, 132, 203, 377, 387, 404, 469, 478, 512, 550], "parenthes": [388, 394, 440, 442], "parfiv": [394, 421], "parnam": 487, "pars": [16, 84, 85, 90, 104, 123, 191, 200, 378, 391, 446, 454, 456, 459, 461, 467, 470, 483, 489, 574], "parse_arg": 574, "parse_fil": [16, 84, 90, 104, 123], "parse_obj": [16, 84, 90, 104, 123], "parse_raw": [16, 84, 90, 104, 123], "parseabl": 304, "parser": 574, "part": [101, 377, 380, 383, 386, 388, 390, 391, 392, 393, 395, 396, 397, 402, 403, 418, 422, 423, 424, 432, 437, 442, 443, 446, 448, 451, 459, 467, 476, 477, 482, 483, 499, 500, 514, 519, 523], "parti": 382, "partial": [91, 102, 105, 150, 151, 157, 162, 165, 168, 191, 203, 205, 271, 391, 395, 423, 437, 525], "partial_overlap": 91, "particip": [382, 386, 397], "particl": [19, 26, 246, 276, 424, 502, 550], "particle_distribut": [246, 550], "particular": [87, 91, 377, 383, 390, 392, 399, 401, 402, 404, 425, 428, 439, 440, 448, 451, 452, 453, 454, 456, 460, 463, 469, 470, 474, 479, 481, 484, 489, 491, 492, 498, 499, 511, 514, 521, 523, 527, 576], "particularli": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40], "partli": [380, 386, 387, 391, 397, 398], "pass": [15, 16, 19, 20, 26, 28, 29, 30, 31, 32, 33, 35, 36, 37, 39, 40, 42, 45, 46, 47, 68, 83, 84, 85, 86, 87, 88, 89, 90, 91, 93, 101, 102, 104, 105, 108, 109, 110, 123, 124, 127, 144, 146, 147, 148, 149, 150, 151, 152, 153, 154, 156, 157, 159, 160, 161, 162, 163, 164, 165, 168, 169, 177, 185, 190, 191, 192, 193, 195, 197, 199, 200, 201, 203, 204, 205, 208, 209, 210, 212, 214, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 227, 228, 229, 230, 232, 234, 235, 236, 237, 238, 239, 240, 242, 245, 246, 247, 248, 249, 250, 251, 252, 253, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 269, 270, 271, 272, 273, 274, 275, 284, 286, 304, 316, 324, 325, 326, 331, 332, 333, 334, 364, 365, 370, 372, 373, 377, 380, 387, 389, 390, 391, 392, 404, 424, 428, 430, 442, 443, 448, 449, 451, 452, 459, 460, 464, 468, 469, 474, 476, 477, 479, 480, 481, 482, 483, 485, 486, 489, 498, 499, 500, 514, 525, 526, 527, 531, 532, 574, 578], "pass4": 491, "passkwarg": [453, 473], "past": [377, 382, 385, 393, 394, 397, 398, 400, 403, 405, 413, 434, 436, 437, 482, 574], "patch": [374, 377, 384, 403, 431, 440, 451, 453, 461, 465, 471], "path": [11, 15, 16, 66, 82, 83, 84, 86, 87, 88, 90, 91, 93, 100, 104, 106, 107, 110, 123, 146, 147, 148, 149, 150, 151, 152, 153, 154, 156, 157, 159, 161, 162, 163, 164, 165, 166, 192, 193, 195, 200, 201, 204, 205, 211, 223, 237, 245, 272, 312, 341, 342, 343, 346, 377, 380, 412, 446, 448, 451, 452, 453, 454, 455, 456, 457, 459, 460, 461, 462, 463, 464, 465, 468, 469, 470, 471, 475, 476, 477, 478, 479, 481, 482, 483, 484, 485, 487, 489, 490, 491, 492, 498, 499, 500, 512, 568, 569, 574], "path_effect": [200, 223, 245], "path_to_notebook": 377, "path_to_script": 377, "patheffect": [200, 223, 245], "pathlib": [16, 82, 83, 86, 87, 91, 149, 201, 211, 223, 245, 342, 451, 452, 459, 460, 463, 464, 489, 498, 499], "pathpatch": 465, "pattern": [377, 383, 391], "paula": 443, "paulakx": 443, "paz": [429, 432, 433], "pbar": 514, "pc": [46, 47, 50, 52, 507, 508], "pcolormesh": [83, 124, 146, 147, 149, 152, 153, 154, 159, 161, 163, 164, 435, 441, 479, 480], "pd": [87, 91], "pdf": [149, 153, 178, 251, 252, 266, 267, 326, 370, 378, 460, 463, 475, 504, 506, 507, 508, 510, 511, 516, 517, 518, 520, 523, 527, 557, 558, 576, 579], "pdf_in_safe_rang": 149, "pdf_matrix": 149, "pdf_threshold": [149, 150, 154], "pdflatex": 378, "pdpm2ujw": 481, "peak": [68, 127, 140, 141, 149, 178, 229, 234, 236, 240, 430, 436, 443, 455, 474, 476, 481, 537], "peak_bright": 68, "peak_brightness_error": 68, "peak_latitud": 68, "peak_latitude_error": 68, "pedant": 377, "peek": [83, 88, 102, 105, 109, 110, 127, 128, 146, 147, 149, 150, 151, 152, 153, 154, 159, 160, 161, 162, 163, 165, 377, 389, 413, 425, 431, 435, 439, 448, 453, 459, 463, 464, 471, 477, 480, 489, 491, 492, 511, 514, 516, 517, 518, 520], "penalti": 487, "pend": 304, "peopl": [382, 384, 397, 403, 406, 407, 475, 502, 514, 574], "pep": 382, "pep8": 380, "per": [17, 18, 21, 22, 24, 25, 27, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 99, 101, 102, 105, 109, 110, 112, 121, 122, 124, 125, 126, 129, 130, 134, 140, 143, 144, 145, 162, 165, 197, 230, 237, 238, 279, 288, 294, 301, 377, 383, 389, 390, 393, 401, 403, 404, 416, 424, 428, 430, 443, 446, 454, 463, 467, 468, 470, 475, 481, 482, 486, 487, 491, 492, 510, 514, 517, 521, 573, 575], "per_decad": [197, 451, 453, 463, 464, 471, 477, 490, 518, 524], "percent": 131, "percentag": [149, 178, 481], "percentil": 83, "perfect": 149, "perfectli": [532, 574], "perform": [11, 16, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 84, 85, 87, 90, 91, 94, 100, 104, 108, 123, 169, 177, 191, 203, 205, 220, 223, 224, 232, 235, 245, 247, 258, 259, 263, 269, 273, 285, 287, 340, 343, 370, 377, 378, 383, 386, 387, 388, 392, 393, 401, 404, 407, 409, 418, 425, 428, 430, 433, 437, 440, 442, 443, 446, 449, 451, 452, 453, 454, 455, 456, 457, 459, 460, 462, 464, 467, 468, 469, 470, 473, 477, 479, 481, 482, 483, 484, 486, 491, 494, 498, 510, 514, 522, 523, 526, 532, 550, 572, 573, 574, 575], "perhap": 527, "period": [42, 51, 54, 197, 272, 384, 403, 436, 486, 506], "period_dot": 51, "periodogram": [286, 392, 437], "permit": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 403], "perseu": [33, 38], "person": [377, 380, 382, 384, 385, 386, 390, 395, 398], "perspect": [87, 91], "pertain": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40], "peter": 436, "pf": 26, "pformat": [87, 91], "pformat_al": [87, 91], "pg": 500, "ph": 362, "pha": [106, 107, 110, 201, 389, 434, 437, 451, 460], "pha_": 477, "pha_meta": 106, "pha_ob": [106, 145, 210, 460, 478, 479], "pha_obs23523": [109, 110, 130, 283, 487, 512], "pha_obs23592": 512, "phacountsspectrum": 420, "phacountsspectrumlist": 419, "phase": [50, 52, 53, 89, 170, 173, 272, 382, 387, 388, 391, 392, 394, 396, 401, 413, 418, 437, 439, 442, 445, 485, 503, 514, 528, 570], "phase_axi": 401, "phase_bkg_mak": 471, "phase_column_nam": [173, 471], "phase_curve_model": 568, "phase_filt": 89, "phase_max": 471, "phase_min": 471, "phase_model": 568, "phasebackgroundestim": 422, "phasebackgroundmak": [170, 422, 442, 471], "phasecurv": [272, 436, 568], "phasecurve_lsi_dc": 568, "phasecurvemodel": 400, "phasecurvetablemodel": [388, 390], "phasecurvetempl": 388, "phasogram": [272, 568], "phi": [19, 20, 26, 198, 217, 218, 221, 224, 225, 227, 228, 229, 232, 235, 239, 240, 242, 246, 248, 250, 251, 252, 257, 262, 264, 265, 266, 267, 270, 274, 308, 400, 467, 484, 485, 490, 500, 519, 531, 532, 533, 535, 536, 537, 541, 543, 544, 545, 547, 548, 552, 553, 555, 556, 557, 558], "phi_0": [217, 219, 220, 224, 227, 228, 229, 232, 235, 239, 240, 247, 249, 251, 252, 258, 259, 262, 263, 265, 266, 267, 269, 273, 400, 479, 541, 544, 545, 548, 552, 555, 556, 557, 558], "phi_ref": [272, 568], "philipp": [436, 437], "phone": 397, "photon": [44, 225, 246, 362, 392, 447, 454, 463, 467, 483, 485, 500, 519, 550, 573], "photutil": [140, 377, 391, 437], "php": 63, "physic": [125, 126, 129, 132, 324, 325, 376, 401, 405, 419, 452, 460, 482, 485, 487, 489, 498, 512, 514, 550, 573, 576, 577], "pi": [19, 20, 30, 31, 32, 37, 54, 233, 276, 400, 485, 508, 531, 532, 533, 536, 537, 547, 567], "pi6hedcj": 485, "pick": [377, 384, 391, 402, 418, 500], "pictur": 378, "pie": 514, "piec": [377, 383, 391, 396, 405], "piecewis": [247, 248, 445, 485, 528, 539, 560], "piecewisebrokenpowerlawnormspectralmodel": 400, "piecewisebrokenpowerlawnormspectramodel": 400, "piecewisenormsectralmodel": 425, "piecewisenormspatialmodel": [255, 442, 485, 534], "piecewisenormspectralmodel": [256, 405, 425, 428, 441, 443, 485, 521, 551], "pig": [13, 377, 379, 380, 417, 418, 420, 421, 422, 424, 425, 436, 438, 439, 443], "pii": [134, 143], "pillar": 393, "pin": 437, "pink": [109, 110], "pint": [471, 514], "pintor": [390, 420, 421, 422, 423, 424, 425, 427, 428, 430, 431, 439, 441, 442, 443], "pip": [376, 380, 384, 394, 408, 409, 411, 418, 437, 489, 574], "pipe": [433, 434, 435], "pipelin": [390, 392, 424], "piron": 573, "piron2001": 573, "pivot": [19, 20, 26, 67, 217, 218, 221, 225, 227, 228, 229, 233, 239, 240, 242, 246, 248, 250, 251, 252, 257, 262, 264, 265, 266, 267, 270, 274, 443, 476], "pivot_energi": [19, 20, 26, 217, 218, 221, 225, 227, 228, 229, 233, 239, 240, 242, 246, 248, 250, 251, 252, 257, 262, 264, 265, 266, 267, 270, 274], "pix": [190, 191, 192, 193, 194, 195, 196, 197, 200, 201, 202, 203, 204, 205, 526], "pix_reg": 475, "pix_reg_rec": 475, "pix_to_coord": [190, 191, 194, 196, 197, 200, 202, 203, 443], "pix_to_idx": [190, 191, 194, 196, 197, 200, 202, 203], "pixcoord": 391, "pixel": [13, 83, 102, 105, 109, 110, 112, 113, 117, 127, 140, 141, 146, 147, 148, 149, 150, 151, 152, 153, 154, 156, 157, 159, 160, 161, 162, 163, 164, 165, 175, 190, 191, 192, 193, 194, 195, 196, 197, 200, 201, 202, 203, 204, 205, 220, 223, 224, 232, 235, 245, 247, 258, 259, 263, 269, 273, 388, 416, 420, 434, 437, 455, 463, 465, 477, 481, 482, 490, 500, 510, 512, 524, 525, 526, 535], "pixel_area": 203, "pixel_scal": [117, 191, 203], "pixelis": 526, "pixelregion": [391, 523], "pixilis": 482, "pixreg": 533, "pixregion": 205, "pk": [136, 423, 447, 469, 470, 473, 474, 476, 486, 500, 540], "pks2155": [447, 469, 473], "pks2155_hess_lc": [122, 124, 144, 474, 478], "pl": [67, 80, 121, 126, 132, 169, 243, 250, 251, 252, 400, 449, 455, 465, 469, 476, 477, 478, 485, 500], "pl_model": 566, "pl_spectrum": 487, "place": [83, 86, 87, 91, 92, 100, 102, 105, 109, 110, 140, 146, 147, 148, 149, 150, 151, 152, 156, 157, 162, 164, 165, 175, 180, 192, 193, 195, 201, 204, 205, 245, 271, 300, 350, 377, 378, 384, 385, 388, 389, 390, 391, 393, 396, 397, 398, 399, 402, 407, 421, 423, 451, 468, 482, 483, 485, 500, 510, 511, 572, 578], "placehold": 382, "plai": [397, 461], "plain": [394, 482], "plainseri": 90, "plan": [381, 382, 386, 387, 391, 393, 394, 397, 402, 406, 417, 434, 436, 437, 438, 571], "planar": [273, 388], "plane": [29, 67, 68, 125, 190, 191, 192, 193, 195, 200, 201, 203, 204, 205, 397, 475, 476, 482, 489, 509, 524, 527, 532, 573, 579], "plate": [203, 482], "platform": [394, 403, 428], "plausibl": [404, 462], "pleas": [103, 108, 378, 380, 382, 384, 386, 412, 417, 418, 419, 428, 436, 438, 449, 451, 452, 453, 454, 456, 459, 463, 464, 469, 470, 474, 477, 478, 498, 503, 514], "pleasant": 380, "plot": [6, 19, 20, 26, 66, 67, 83, 88, 101, 102, 105, 109, 110, 124, 127, 128, 146, 147, 149, 150, 151, 152, 153, 154, 159, 160, 161, 162, 163, 164, 165, 192, 193, 194, 195, 197, 200, 201, 202, 204, 205, 208, 217, 218, 219, 220, 221, 222, 223, 224, 225, 227, 228, 229, 230, 232, 233, 234, 235, 236, 237, 238, 239, 240, 242, 245, 246, 247, 248, 249, 250, 251, 252, 253, 257, 258, 259, 260, 262, 263, 264, 265, 266, 267, 269, 270, 272, 273, 274, 275, 277, 281, 355, 364, 365, 369, 370, 371, 372, 373, 374, 375, 376, 378, 391, 392, 393, 395, 396, 398, 401, 413, 416, 419, 422, 424, 425, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 441, 442, 443, 446, 448, 449, 453, 455, 456, 457, 459, 460, 464, 467, 468, 469, 470, 471, 473, 474, 475, 476, 477, 478, 479, 481, 483, 485, 486, 487, 489, 490, 491, 492, 498, 500, 504, 506, 507, 508, 510, 514, 516, 517, 518, 520, 523, 568, 569, 573, 576, 578], "plot_absorb": [445, 540, 560], "plot_at_energi": [146, 147, 489], "plot_bia": [149, 154], "plot_broken_powerlaw": [445, 541, 560], "plot_compound": [445, 542, 560], "plot_const": [445, 530, 539], "plot_constant_spectr": [445, 543, 560], "plot_constant_tempor": [445, 561, 570], "plot_containment_radiu": [153, 159, 161, 163], "plot_containment_radius_vs_energi": [153, 159, 161, 162, 163, 165, 489, 490], "plot_contour_lin": 479, "plot_correl": [208, 479], "plot_count": [109, 110], "plot_dat": 578, "plot_disk": [445, 531, 539], "plot_distribut": [457, 459], "plot_energi": [83, 464], "plot_energy_depend": [146, 152, 489, 516], "plot_energy_offset": 83, "plot_err": 127, "plot_error": [19, 20, 26, 66, 67, 101, 217, 218, 219, 220, 221, 224, 225, 227, 228, 229, 232, 233, 235, 239, 240, 242, 246, 247, 248, 249, 250, 251, 252, 257, 258, 259, 262, 263, 264, 265, 266, 267, 269, 270, 273, 274, 395, 447, 449, 451, 453, 459, 460, 462, 476, 479, 499], "plot_excess": [109, 110, 431], "plot_exp_cutoff_powerlaw": [445, 544, 560], "plot_exp_cutoff_powerlaw_3fgl": [445, 545, 560], "plot_exp_cutoff_powerlaw_norm_spectr": [445, 546, 560], "plot_expdecay_tempor": [445, 562, 570], "plot_extension_error": [219, 220, 224, 232, 235, 247, 249, 258, 259, 263, 269, 273], "plot_fit": [101, 109, 110, 448, 451, 452, 453, 461, 471, 498], "plot_gauss": [445, 532, 539], "plot_gauss_spectr": [445, 547, 560], "plot_gaussian_tempor": [445, 563, 570], "plot_gen_gauss": [445, 533, 539], "plot_generalized_gaussian_tempor": [445, 564, 570], "plot_grid": [160, 192, 193, 195, 201, 204, 205, 219, 220, 224, 232, 235, 247, 249, 258, 259, 263, 269, 273, 401, 430, 441, 459, 477, 480, 481, 482, 483, 485, 491], "plot_heatmap": 208, "plot_hist": [201, 527], "plot_imag": 83, "plot_interact": [192, 193, 195, 201, 204, 205, 219, 220, 224, 232, 235, 247, 249, 258, 259, 263, 269, 273, 430, 437, 459, 467, 482, 498, 499], "plot_kernel": 160, "plot_kwarg": [451, 453, 461], "plot_linear_tempor": [445, 565, 570], "plot_logparabola": [445, 548, 560], "plot_logparabola_norm_spectr": [445, 549, 560], "plot_map_rgb": 442, "plot_mask": [109, 110, 193, 201, 205, 452, 523], "plot_matrix": [149, 477, 490], "plot_migr": 154, "plot_naima": [445, 550, 560], "plot_npred_sign": [442, 459, 461, 499], "plot_offset2_distribut": 83, "plot_offset_depend": [146, 152], "plot_panel": 364, "plot_phasogram": 272, "plot_piecewise_norm_spati": [445, 534, 539], "plot_piecewise_norm_spectr": [445, 551, 560], "plot_point": [445, 535, 539], "plot_posit": [223, 245, 484], "plot_position_error": [219, 220, 224, 232, 235, 247, 249, 258, 259, 263, 269, 273], "plot_powerlaw": [445, 552, 560], "plot_powerlaw2": [445, 553, 560], "plot_powerlaw_norm_spectr": [445, 554, 560], "plot_powerlaw_tempor": [445, 566, 570], "plot_profil": 127, "plot_psf_vs_rad": [153, 159, 161, 162, 163, 165, 490], "plot_rad_max_vs_energi": [164, 453], "plot_region": [200, 201, 223, 245, 374, 453, 465, 484, 523, 527], "plot_residu": [101, 102, 105, 109, 110, 426, 428, 459, 499], "plot_residuals_spati": [102, 105, 109, 110, 459, 467, 499], "plot_residuals_spectr": [102, 105, 109, 110], "plot_rgb": 442, "plot_shel": [445, 536, 539], "plot_shell2": [445, 537, 539], "plot_sine_tempor": [445, 567, 570], "plot_smooth_broken_powerlaw": [445, 555, 560], "plot_spati": 428, "plot_spectrum": [101, 146, 459, 470, 477], "plot_spectrum_datasets_off_region": [425, 441, 442, 451, 453, 461, 523], "plot_stat": 451, "plot_super_exp_cutoff_powerlaw_3fgl": [445, 556, 560], "plot_super_exp_cutoff_powerlaw_4fgl": [445, 557, 560], "plot_super_exp_cutoff_powerlaw_4fgl_dr1": [445, 558, 560], "plot_templ": [445, 538, 539], "plot_template_phase_tempor": [445, 568, 570], "plot_template_spectr": [445, 559, 560], "plot_template_tempor": [445, 569, 570], "plot_theta_squared_t": 492, "plot_tim": 83, "plot_ts_profil": [124, 451, 452, 465, 468, 478], "plotmixin": [109, 110], "plotter": 364, "plsuperexpcutoff3fgl": 435, "plsuperexpcutoff4fgl": 420, "plt": [19, 20, 26, 66, 67, 128, 146, 152, 153, 217, 218, 221, 225, 227, 228, 229, 233, 239, 240, 242, 246, 248, 250, 251, 252, 257, 262, 264, 265, 266, 267, 270, 274, 365, 374, 377, 378, 413, 446, 447, 448, 449, 451, 452, 453, 454, 455, 456, 457, 459, 460, 461, 462, 463, 464, 465, 467, 468, 469, 470, 471, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 489, 490, 491, 492, 498, 499, 500, 506, 507, 508, 514, 516, 517, 518, 520, 523, 531, 533, 537, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 561, 562, 563, 564, 565, 566, 567], "plu": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 224, 397, 403, 485], "pmf": 390, "png": [153, 385, 413, 504, 506, 507, 508, 510, 511, 516, 517, 518, 520, 523, 527, 576, 579], "pniyo0kv": 473, "po": [151, 203, 523], "point": [15, 17, 18, 21, 22, 24, 25, 27, 61, 65, 67, 71, 72, 73, 74, 75, 77, 78, 79, 80, 82, 83, 85, 87, 88, 90, 91, 94, 95, 96, 99, 100, 101, 102, 104, 105, 109, 110, 118, 122, 124, 125, 126, 129, 130, 131, 132, 133, 137, 142, 144, 151, 153, 156, 162, 164, 165, 175, 176, 178, 179, 180, 182, 183, 185, 186, 188, 189, 192, 193, 195, 200, 201, 204, 205, 210, 223, 245, 249, 261, 279, 283, 286, 292, 306, 310, 316, 322, 332, 369, 377, 379, 380, 382, 383, 384, 385, 386, 387, 389, 390, 391, 393, 394, 397, 398, 399, 400, 401, 402, 403, 404, 406, 409, 416, 419, 421, 422, 428, 430, 431, 433, 434, 435, 436, 438, 441, 442, 443, 445, 448, 450, 453, 454, 455, 459, 464, 465, 467, 468, 469, 470, 471, 473, 477, 479, 480, 481, 482, 485, 486, 490, 492, 494, 502, 503, 509, 510, 511, 514, 519, 523, 526, 528, 532, 533, 539, 550, 571, 572, 573], "point_sourc": 388, "pointer": 385, "pointing_altaz": [404, 442], "pointing_galact": 91, "pointing_info": [85, 94, 446], "pointing_posit": [162, 454, 464, 467], "pointing_radec": [83, 91, 442, 489], "pointing_t": 94, "pointing_zen": 442, "pointinginfo": [85, 434], "pointinginfometadata": [90, 104], "pointingmetadata": 404, "pointingmod": 85, "pointlik": [146, 147, 148, 149, 152, 153, 154, 156, 159, 161, 163, 164, 436, 523], "points_scal": 316, "pointskyregion": [174, 179, 200, 249, 431, 453, 464], "pointsourc": [388, 502], "pointspatialmodel": [19, 20, 72, 80, 132, 255, 400, 401, 421, 441, 455, 456, 459, 460, 463, 464, 468, 476, 477, 484, 485, 490, 498, 499, 535], "pointspreadfunct": 480, "poisson": [105, 110, 285, 286, 287, 288, 294, 297, 298, 301, 334, 389, 390, 419, 424, 449, 454, 457, 467, 573, 574, 576], "poissonian": [286, 471, 474, 573], "poissonlikelihoodfitt": 433, "polar": [51, 54, 305, 377], "pole": [51, 391, 482], "poli": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 193], "polici": 381, "pollut": 392, "polygon": [193, 207, 391], "polygonis": 391, "polygonpixelregion": 391, "polygonskyregion": [207, 391], "polynomi": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 242, 482], "polynomial1d": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40], "polynomialmodel": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40], "pool": [320, 324, 325], "pool_kwarg": [324, 325], "poolmethodenum": 320, "poon": 434, "poorli": [481, 521], "pop": [92, 100, 199, 245], "popitem": 199, "popul": [6, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 378, 397, 435, 503, 505, 550, 572], "popular": 574, "port": 435, "pos_ob": 461, "pos_on": 189, "pos_target": [461, 471], "posit": [16, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 45, 46, 47, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 83, 84, 85, 87, 90, 91, 94, 95, 96, 102, 103, 104, 105, 108, 122, 123, 124, 125, 126, 129, 130, 132, 150, 151, 157, 160, 162, 165, 175, 178, 180, 189, 191, 192, 193, 195, 200, 201, 202, 203, 204, 205, 206, 213, 214, 215, 216, 219, 220, 223, 224, 232, 235, 245, 247, 249, 258, 259, 261, 263, 269, 271, 273, 283, 285, 287, 302, 303, 306, 307, 310, 311, 365, 377, 384, 388, 390, 391, 400, 401, 402, 403, 418, 420, 425, 428, 430, 443, 446, 453, 454, 455, 456, 457, 459, 460, 461, 462, 463, 464, 465, 467, 470, 471, 475, 476, 477, 480, 481, 482, 483, 484, 485, 486, 489, 490, 492, 500, 510, 511, 512, 514, 519, 520, 523, 524, 525, 527, 531, 532, 533, 535, 550, 576], "position_angl": 454, "position_error": [219, 220, 224, 232, 235, 247, 249, 258, 259, 263, 269, 273, 422], "position_lonlat": [219, 220, 224, 232, 235, 247, 249, 258, 259, 261, 263, 269, 273], "position_off": 189, "positv": 439, "posixpath": [16, 341], "possibl": [33, 82, 87, 91, 135, 155, 377, 378, 380, 384, 385, 388, 389, 390, 391, 392, 393, 394, 396, 397, 398, 401, 404, 407, 409, 419, 420, 428, 435, 437, 442, 447, 451, 455, 456, 457, 462, 465, 477, 479, 480, 481, 482, 490, 499, 500, 512, 514, 521, 526, 527, 550, 574, 575], "possibli": [87, 91, 122, 383, 387, 388, 390, 391, 395, 396, 397, 398, 404, 406, 428, 521], "post": [52, 386, 404], "poster": [380, 403, 407, 432], "posterior": [395, 487], "posteriori": 487, "postfix": 377, "potenti": [119, 385, 393, 462, 514], "potentiel": 403, "power": [19, 20, 26, 27, 101, 117, 122, 124, 126, 131, 139, 160, 162, 165, 191, 213, 215, 217, 218, 221, 225, 227, 228, 229, 233, 239, 240, 242, 246, 248, 250, 251, 252, 253, 257, 262, 264, 265, 266, 267, 270, 274, 276, 281, 286, 331, 388, 390, 416, 422, 434, 436, 445, 447, 454, 456, 459, 463, 465, 467, 469, 470, 471, 473, 484, 485, 487, 514, 528, 540, 560, 566], "power_spectrum": 286, "power_spectrum_param": 286, "powerlaw": [178, 251, 253, 286, 388, 389, 393, 434, 436, 445, 448, 456, 464, 465, 476, 485, 487, 499, 528, 554, 570], "powerlaw2spectralmodel": [243, 251, 252, 256, 400, 449, 456, 485, 500, 553], "powerlaw_with_paramet": 286, "powerlawnormspectralmodel": [67, 231, 250, 252, 256, 271, 399, 400, 405, 425, 443, 459, 460, 463, 464, 467, 477, 484, 485, 490, 498, 521, 534, 554, 559], "powerlawspectr": 132, "powerlawspectralmodel": [70, 72, 76, 80, 101, 109, 110, 114, 116, 121, 124, 130, 132, 214, 216, 250, 251, 256, 277, 400, 401, 405, 447, 448, 449, 452, 454, 455, 461, 462, 463, 464, 465, 467, 468, 469, 470, 471, 473, 476, 477, 478, 484, 485, 487, 489, 490, 498, 499, 500, 512, 530, 531, 532, 533, 535, 536, 537, 538, 540, 542, 551, 552, 561, 562, 563, 564, 565, 566, 567, 568, 569], "powerlawspectramodel": 405, "powerlawtemporalmodel": [268, 485, 566], "pppc4dm": 502, "pppc4dmid": 26, "pprint": [87, 91, 575], "pprint_al": [87, 91], "pprint_exclude_nam": [87, 91], "pprint_include_nam": [87, 91], "pr": [377, 387, 389, 391, 400, 401, 403, 405, 406, 422, 423], "practic": [390, 394, 398, 401, 402, 403, 404, 451, 477, 483, 485, 499, 510, 514, 523, 573], "pre": [16, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 84, 90, 101, 104, 108, 123, 124, 304, 377, 380, 386, 397, 403, 404, 408, 409, 425, 437, 439, 452, 456, 457, 460, 462, 465, 474, 476, 478, 479, 484, 487, 510, 516], "preced": [322, 391, 393, 403, 485], "precis": [132, 153, 159, 161, 163, 220, 224, 232, 235, 247, 258, 259, 263, 269, 273, 377, 395, 402, 403, 464], "precision_factor": [162, 165, 192, 193, 195, 201, 204, 205], "precomput": [26, 101, 124, 477, 484], "pred": 510, "predefin": [409, 411, 430, 465, 468, 469, 498], "predic": 388, "predict": [101, 102, 105, 108, 109, 110, 121, 122, 124, 125, 126, 129, 130, 139, 169, 172, 178, 185, 249, 261, 289, 326, 373, 383, 388, 389, 390, 425, 442, 443, 447, 452, 454, 456, 457, 459, 461, 463, 465, 467, 477, 478, 481, 487, 498, 499, 512, 514, 518, 521, 540, 573, 576], "prefer": [87, 91, 352, 377, 382, 384, 388, 396, 397, 403, 408, 409, 413, 465, 470, 482, 483, 487, 494, 574, 576], "prefix": [197, 388], "preliminari": [386, 397, 405, 433, 435, 443, 455, 480, 490], "prepar": [82, 172, 387, 388, 406, 452, 460, 478, 481, 485, 490, 498, 522, 571], "prepare_input": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40], "prepare_output": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40], "prepend": [87, 91], "presenc": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 455, 474, 482, 550, 573], "present": [15, 70, 82, 83, 85, 91, 92, 100, 106, 110, 122, 124, 166, 194, 199, 223, 231, 245, 304, 377, 378, 380, 390, 393, 397, 401, 404, 407, 428, 448, 453, 456, 457, 468, 469, 473, 474, 475, 480, 481, 482, 484, 510, 512, 515, 527, 574, 576], "preserv": [87, 91, 105, 192, 193, 195, 197, 201, 204, 205, 394, 477, 483], "preserve_count": [192, 193, 195, 201, 204, 205, 482], "press": 489, "pretti": [391, 397, 407, 413], "prevent": [193, 225, 304, 428, 459, 521], "preview": [380, 492], "previou": [74, 87, 91, 377, 380, 391, 397, 398, 402, 406, 419, 425, 443, 453, 462, 463, 482, 485, 486, 487, 500, 509], "previous": [283, 394, 424, 436, 437, 446, 451, 459, 460, 476, 481, 483], "primari": [26, 87, 91, 192, 193, 195, 196, 204, 205, 382, 403, 424, 439, 478, 482], "primarili": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40], "primary_axi": 196, "primary_band": 482, "primary_hdu": 463, "primaryflux": [19, 20, 475, 502], "primaryhdu": [463, 482], "prime": 23, "primer": 395, "princip": 462, "principl": [377, 403, 405, 451, 524], "print": [11, 67, 82, 83, 85, 86, 87, 88, 91, 94, 96, 101, 102, 109, 111, 115, 121, 124, 126, 132, 140, 141, 147, 149, 152, 153, 159, 161, 163, 172, 175, 214, 216, 223, 237, 245, 277, 302, 303, 312, 344, 377, 378, 388, 389, 392, 401, 404, 412, 413, 446, 447, 448, 449, 451, 452, 453, 454, 455, 456, 457, 459, 460, 461, 462, 463, 464, 465, 467, 468, 469, 470, 471, 473, 474, 475, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 489, 490, 498, 499, 500, 512, 514, 526, 527, 530, 531, 532, 533, 534, 535, 536, 537, 538, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 561, 562, 563, 564, 565, 566, 567, 568, 569, 574, 575, 576, 578], "print0": 377, "print_level": [459, 467, 479, 499], "print_stack": 377, "printout": [377, 435, 436, 477], "prior": [19, 20, 99, 101, 102, 109, 213, 214, 215, 216, 217, 220, 221, 224, 225, 227, 228, 229, 230, 232, 233, 234, 235, 236, 237, 238, 239, 240, 242, 245, 249, 250, 251, 252, 253, 257, 258, 259, 260, 262, 265, 266, 267, 272, 273, 381, 386, 409, 411, 443, 445, 447, 448, 451, 452, 453, 454, 456, 459, 460, 465, 467, 469, 470, 476, 479, 485, 488, 494, 499, 500, 559, 571], "prior_registri": 487, "prior_stat_sum": [213, 214, 215, 216, 405, 487], "priorfitstatist": 405, "priori": [401, 457, 483], "prioriti": [374, 386, 388, 389, 391, 403, 406], "priormodel": 405, "priorparamet": [254, 405, 487], "privat": [377, 380, 386, 400, 436, 491, 492], "pro": [377, 393], "probabl": [13, 101, 133, 142, 154, 380, 383, 384, 385, 387, 390, 391, 395, 397, 399, 405, 407, 451, 454, 467, 479, 482, 485, 487, 490, 518, 519, 520, 573, 574, 576, 577], "probe": [132, 292, 485], "problem": [19, 20, 213, 217, 220, 221, 224, 225, 227, 228, 229, 230, 232, 233, 234, 235, 236, 237, 238, 239, 240, 242, 249, 250, 251, 252, 253, 257, 258, 259, 260, 262, 265, 266, 267, 272, 273, 300, 355, 385, 387, 391, 398, 405, 412, 440, 479, 514], "problemat": [396, 401, 404, 469, 514], "proce": [380, 407, 409, 411, 439, 447, 448, 451, 452, 463, 467, 469, 483, 484, 489, 490, 498, 499], "procedur": [390, 402, 407, 447, 455, 459], "proceed": [397, 403, 491], "process": [11, 83, 93, 125, 126, 129, 132, 133, 142, 168, 193, 205, 323, 324, 325, 334, 377, 378, 380, 382, 383, 385, 386, 387, 389, 390, 392, 393, 399, 402, 403, 404, 410, 414, 420, 425, 428, 430, 436, 443, 448, 451, 455, 461, 463, 464, 476, 477, 481, 491, 496, 499, 504, 511, 513, 514, 572, 573, 574], "process_lots_of_data": 377, "processor": 397, "prod": 417, "prod3": 397, "prod3b": 489, "prod5": [463, 464, 489], "produc": [15, 102, 105, 109, 110, 113, 122, 280, 282, 377, 378, 383, 392, 393, 401, 402, 404, 407, 422, 447, 448, 451, 453, 455, 460, 461, 462, 463, 467, 469, 471, 475, 479, 481, 487, 489, 499, 514, 517, 519, 574], "product": [108, 133, 142, 192, 193, 195, 198, 201, 204, 205, 272, 383, 392, 393, 403, 404, 413, 428, 442, 443, 447, 449, 455, 464, 471, 477, 479, 481, 490, 492, 512, 519, 573], "prof_mak": 126, "profil": [17, 18, 21, 22, 23, 24, 25, 27, 101, 118, 122, 124, 125, 126, 127, 128, 129, 130, 132, 133, 142, 153, 159, 161, 162, 163, 165, 189, 193, 201, 210, 234, 236, 284, 301, 317, 336, 337, 389, 391, 395, 396, 403, 409, 411, 416, 418, 425, 428, 433, 435, 437, 438, 443, 445, 451, 452, 461, 466, 468, 469, 470, 478, 479, 487, 494, 502, 512, 514, 531, 576], "profile_err": 127, "profile_high": 465, "profile_new": 465, "profuma": 502, "program": [377, 393], "programmat": 459, "progress": [15, 82, 117, 129, 132, 210, 325, 383, 386, 393, 394, 407, 428, 435, 436, 437, 443, 514], "progress_download": 514, "proj": [102, 105, 109, 110, 172, 191, 192, 193, 203, 204, 205, 451, 481, 482, 490, 499, 523], "project": [102, 109, 126, 169, 175, 191, 192, 193, 195, 200, 201, 203, 204, 205, 220, 223, 224, 232, 235, 245, 247, 258, 259, 263, 269, 273, 311, 337, 377, 378, 379, 380, 382, 384, 391, 393, 394, 397, 403, 420, 428, 436, 442, 452, 455, 457, 461, 465, 471, 480, 482, 483, 484, 489, 490, 496, 498, 499, 500, 502, 523, 526, 527, 536, 537, 572, 574], "projected_distance_axi": 126, "prompt": 574, "pronounc": 514, "pronunci": 514, "prop_cycl": 374, "propag": [19, 20, 26, 53, 127, 217, 218, 221, 225, 227, 228, 229, 233, 239, 240, 242, 246, 248, 250, 251, 252, 257, 262, 264, 265, 266, 267, 270, 274, 291, 388, 395, 422, 442, 479], "proper": [45, 100, 392, 403, 441, 442, 453, 459, 514], "properli": [132, 185, 382, 392, 403, 440, 441, 451, 452, 478, 479, 498, 510, 575], "properti": [19, 20, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 83, 87, 91, 96, 122, 169, 203, 213, 217, 220, 221, 224, 225, 227, 228, 229, 230, 232, 233, 234, 235, 236, 237, 238, 239, 240, 242, 249, 250, 251, 252, 253, 257, 258, 259, 260, 262, 265, 266, 267, 272, 273, 293, 374, 377, 378, 388, 390, 400, 401, 404, 405, 425, 428, 430, 435, 436, 438, 441, 442, 451, 453, 461, 463, 465, 476, 483, 485, 486, 500, 511, 527, 573], "propos": [377, 379, 381, 382, 383, 384, 386, 394, 402, 403, 405, 418, 421, 422, 424, 425, 436, 442], "proto": [16, 84, 90, 104, 123], "proton": [276, 550], "prototyp": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 382, 388, 390, 393, 394, 395, 397, 433, 435, 436, 443, 503], "proven": 393, "provid": [15, 16, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 82, 83, 84, 85, 87, 88, 90, 91, 101, 102, 104, 105, 109, 110, 113, 123, 129, 132, 133, 135, 142, 149, 150, 168, 182, 183, 188, 192, 193, 195, 197, 198, 199, 200, 201, 202, 203, 204, 205, 210, 211, 273, 286, 301, 304, 370, 377, 378, 387, 388, 390, 392, 393, 394, 397, 398, 401, 403, 404, 405, 406, 407, 408, 412, 414, 418, 421, 422, 423, 425, 428, 430, 439, 442, 446, 451, 453, 454, 455, 464, 467, 474, 476, 477, 478, 479, 481, 482, 483, 485, 486, 490, 491, 492, 494, 499, 500, 502, 504, 509, 511, 512, 513, 514, 515, 516, 517, 518, 520, 521, 524, 525, 526, 527, 528, 535, 538, 550, 559, 571, 572, 573, 574, 576, 579], "proxi": 387, "prune": 380, "pset": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40], "pseudonym": 380, "psf": [16, 82, 87, 88, 96, 102, 103, 105, 108, 109, 110, 112, 113, 151, 153, 158, 159, 160, 161, 162, 163, 165, 172, 179, 188, 203, 223, 245, 261, 302, 303, 377, 383, 387, 388, 389, 390, 393, 416, 418, 422, 423, 424, 425, 428, 429, 433, 434, 435, 436, 437, 438, 439, 440, 442, 446, 448, 451, 452, 453, 455, 456, 457, 459, 461, 463, 464, 467, 468, 477, 481, 483, 486, 489, 491, 492, 498, 499, 510, 512, 514, 519, 522, 527, 573], "psf3d": [88, 153, 158, 161, 163, 188, 418, 436, 520], "psf68": 446, "psf_": 510, "psf_3gauss": [87, 153, 489, 520], "psf_assym": 480, "psf_kernel": [162, 490], "psf_kernel_map": [160, 490], "psf_king": [87, 161, 520], "psf_map": [103, 108, 162, 165], "psf_map_reco": [165, 491], "psf_mean": 490, "psf_new": 480, "psf_out": [162, 165], "psf_r95": 483, "psf_tabl": [82, 87, 159, 480, 492], "psf_theta": 377, "psf_updat": [103, 108], "psf_valu": [153, 161, 163], "psfkernel": [105, 162, 165, 193, 205, 389, 398, 437, 520], "psfking": [158, 430, 520], "psfmap": [102, 103, 105, 108, 109, 110, 150, 151, 157, 158, 160, 165, 172, 179, 188, 389, 390, 398, 418, 421, 422, 424, 425, 437, 443, 455, 477, 490, 514, 520], "psfnd": 480, "psr": [471, 476, 500], "public": [6, 367, 368, 380, 382, 391, 396, 399, 402, 407, 432, 448, 460, 468, 469, 473, 572, 579], "publicli": [489, 491, 492], "publish": [11, 394, 407, 451, 490], "pull": [378, 381, 382, 385, 386, 387, 388, 389, 390, 391, 397, 402, 403, 407, 415], "puls": 236, "pulsar": [30, 31, 32, 35, 39, 42, 50, 54, 60, 64, 77, 83, 387, 397, 418, 420, 439, 442, 445, 457, 462, 472, 485, 494, 504, 505, 514], "pulsar_analysi": [397, 445, 471, 472], "pulsar_phas": 514, "pulsar_phase_comput": 514, "pulsarastronomi": 514, "pulsat": 260, "pulse_stat": 471, "punch": [441, 443], "pure": [377, 394, 396, 397, 523], "purpl": 527, "purpos": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 328, 352, 381, 383, 389, 392, 396, 400, 402, 403, 436, 455, 477, 484, 485, 518], "push": [377, 380, 406, 439], "put": [197, 377, 378, 380, 382, 384, 385, 388, 397, 406, 407, 413, 419, 454, 463, 483, 490, 514, 574], "pwbpl": 400, "pwd": [380, 409, 411], "pwl": [19, 20, 26, 124, 214, 216, 217, 218, 221, 225, 227, 228, 229, 233, 239, 240, 242, 246, 248, 250, 251, 252, 257, 262, 264, 265, 266, 267, 270, 274, 277, 388, 400, 405, 447, 449, 463, 478, 485, 487, 512, 530, 531, 532, 533, 535, 536, 537, 538, 540, 542], "pwl2": 485, "pwl_decai": 463, "pwl_norm": [400, 485, 554], "pwn": [43, 476, 500, 507], "pwne": 462, "py": [16, 84, 90, 104, 123, 377, 378, 384, 391, 394, 396, 398, 406, 407, 413, 418, 420, 421, 429, 434, 438, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 495, 496, 498, 499, 500, 501, 514, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 574], "py310": 380, "py35": 435, "pycharm": 419, "pydant": [16, 84, 90, 104, 123, 376, 422, 441, 443], "pydantic_cor": [16, 84, 90, 104, 123], "pydanticserializationerror": [16, 84, 90, 104, 123], "pydanticundefin": [16, 84, 90, 104, 123], "pydata": 430, "pydocstyl": 378, "pyfact": [416, 434], "pyflak": 430, "pyirf": 443, "pyjok": 376, "pymc": 395, "pymotw": 574, "pypi": [394, 404, 406, 407, 409, 410], "pyplot": [19, 20, 26, 66, 67, 83, 128, 153, 217, 218, 221, 225, 227, 228, 229, 233, 239, 240, 242, 246, 248, 250, 251, 252, 257, 262, 264, 265, 266, 267, 270, 274, 365, 370, 413, 446, 447, 448, 449, 451, 452, 453, 454, 455, 456, 457, 459, 460, 461, 462, 463, 464, 465, 467, 468, 469, 470, 471, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 489, 490, 491, 492, 498, 499, 500, 506, 507, 508, 514, 516, 517, 518, 520, 523, 531, 533, 537, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 561, 562, 563, 564, 565, 566, 567], "pyproject": 425, "pyregion": 391, "pytest": [377, 378, 380, 407, 436], "python": [11, 16, 84, 90, 104, 123, 140, 304, 345, 376, 380, 381, 382, 386, 387, 389, 390, 391, 393, 394, 395, 396, 397, 398, 403, 404, 407, 408, 409, 410, 411, 412, 414, 416, 417, 418, 420, 421, 428, 430, 433, 434, 435, 436, 437, 438, 439, 442, 446, 447, 448, 449, 451, 452, 453, 454, 455, 456, 457, 459, 460, 461, 462, 463, 464, 465, 467, 468, 469, 470, 471, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 489, 490, 491, 492, 494, 496, 498, 499, 500, 502, 513, 514, 528, 530, 531, 532, 533, 534, 535, 536, 537, 538, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 561, 562, 563, 564, 565, 566, 567, 568, 569, 571, 572, 574], "python3": [341, 410, 446, 448, 451, 452, 453, 454, 455, 456, 457, 459, 460, 461, 462, 463, 464, 465, 467, 468, 469, 470, 471, 473, 475, 476, 477, 479, 481, 482, 483, 484, 485, 487, 489, 490, 491, 492, 498, 499, 500, 538, 546, 562], "python_execut": [446, 448, 451, 452, 453, 454, 455, 456, 457, 459, 460, 461, 462, 463, 464, 465, 468, 469, 470, 471, 475, 476, 477, 479, 481, 482, 483, 484, 485, 487, 489, 490, 491, 492, 498, 499, 500], "python_vers": [446, 448, 451, 452, 453, 454, 455, 456, 457, 459, 460, 461, 462, 463, 464, 465, 468, 469, 470, 471, 475, 476, 477, 479, 481, 482, 483, 484, 485, 487, 489, 490, 491, 492, 498, 499, 500], "pytorch": 395, "pyx": [380, 407], "pyyaml": [376, 394, 417, 421], "q": [26, 83, 87, 91, 372, 475], "qa3h9dbw": 473, "qgavhe1l": 481, "ql4hwysg": 481, "qtabl": [87, 91, 392, 473], "quadrat": [482, 492, 500, 577], "qualiti": [201, 397, 436, 437, 442, 486, 499, 514, 572, 579], "quantifi": [443, 462, 473, 474, 487], "quantiti": [13, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 45, 46, 47, 50, 51, 52, 53, 54, 71, 74, 75, 80, 83, 86, 87, 88, 91, 94, 96, 100, 102, 103, 105, 106, 108, 109, 110, 112, 113, 117, 119, 121, 122, 123, 124, 125, 126, 127, 129, 130, 131, 132, 133, 135, 136, 137, 138, 140, 141, 142, 145, 146, 147, 148, 149, 150, 152, 153, 154, 156, 159, 160, 161, 162, 163, 164, 165, 167, 176, 177, 178, 180, 184, 185, 186, 187, 190, 191, 192, 193, 195, 196, 197, 200, 201, 202, 203, 204, 205, 206, 207, 213, 215, 217, 218, 220, 221, 222, 223, 224, 225, 227, 228, 229, 230, 232, 233, 234, 235, 236, 237, 238, 239, 240, 242, 245, 246, 248, 249, 250, 251, 252, 253, 257, 258, 259, 260, 261, 262, 264, 265, 266, 267, 270, 271, 272, 273, 274, 275, 279, 285, 286, 287, 290, 291, 292, 293, 295, 300, 303, 304, 306, 308, 310, 311, 316, 334, 336, 337, 348, 352, 377, 378, 383, 386, 388, 391, 392, 393, 395, 400, 401, 404, 405, 419, 421, 425, 428, 429, 437, 438, 439, 446, 453, 455, 463, 464, 465, 469, 473, 474, 476, 477, 480, 481, 482, 483, 485, 489, 491, 492, 500, 506, 507, 508, 510, 514, 527, 553, 562, 564, 573, 576, 578], "quantity_support": [480, 531], "quasar": 136, "quentin": [395, 399, 400, 420, 421, 422, 423, 424, 425, 428, 430, 431, 439, 440, 441, 442, 443], "queri": [393, 433, 476], "question": [344, 380, 382, 384, 385, 386, 388, 389, 390, 391, 394, 396, 401, 412, 417, 418, 436, 437, 438, 461, 500, 514, 515, 574], "questionnair": [384, 436], "quetin": 422, "quick": [83, 88, 102, 105, 109, 110, 146, 147, 149, 150, 151, 152, 153, 154, 159, 160, 161, 162, 163, 165, 377, 380, 397, 407, 455, 456, 459, 461, 463, 470, 477, 480, 484, 489, 491, 492, 494, 500, 502, 511], "quickest": 378, "quickli": [377, 378, 380, 382, 393, 394, 397, 403, 407, 409, 435, 451, 459, 474, 491, 518, 574], "quicklook": 83, "quickplot": 193, "quicksort": [87, 91], "quickstart": 414, "quiescent": 540, "quit": [87, 91, 377, 405, 463], "quival": 388, "quot": [74, 277, 377, 378, 475], "r": [17, 18, 21, 22, 24, 25, 26, 27, 28, 30, 35, 36, 39, 40, 51, 53, 54, 86, 87, 91, 154, 189, 202, 305, 377, 378, 402, 407, 452, 460, 464, 479, 481, 489, 498, 504, 519, 523, 531, 532, 533, 537, 540], "r68": [83, 112, 153, 162, 165], "r70": [67, 476], "r_": [17, 18, 21, 22, 24, 25, 27, 28, 35, 36, 39, 40, 50, 52, 53, 258, 259, 475, 533, 536, 537], "r_0": [30, 33, 38, 48, 224, 235, 258, 484, 531, 533, 537], "r_1": [39, 48], "r_eval": 235, "r_exp": [36, 48], "r_in": [44, 167, 177, 258, 457, 524], "r_m": 533, "r_out": 44, "r_out_max": 167, "r_out_pwn": 43, "r_sun": 38, "ra": [67, 83, 85, 87, 88, 91, 94, 140, 141, 175, 377, 378, 390, 393, 446, 451, 453, 455, 457, 461, 464, 468, 469, 471, 473, 476, 481, 483, 489, 490, 491, 492, 499, 500, 502, 514, 518, 578], "ra_pnt": 492, "ra_tru": [377, 390], "rad": [33, 83, 88, 102, 105, 109, 110, 112, 113, 153, 159, 161, 162, 163, 164, 165, 175, 188, 260, 393, 430, 442, 453, 477, 480, 481, 490, 519, 520, 523, 567], "rad_axi": [102, 105, 109, 110, 113, 159, 162, 165, 477, 480, 481, 514], "rad_di": [45, 504], "rad_index": 159, "rad_max": [82, 83, 87, 88, 158, 164, 181, 430, 439, 441, 442, 453], "rad_max_2d": [87, 164, 174, 179, 181, 453], "radec": [83, 94, 146, 147, 148, 149, 152, 153, 154, 155, 156, 159, 161, 163, 164, 377, 378, 480, 482, 500], "radecsi": 538, "radesysa": 538, "radi": [246, 550], "radial": [28, 30, 35, 36, 39, 40, 45, 128, 189, 193, 330, 377, 388, 396, 401, 418, 433, 435, 443, 463, 465, 481, 489, 502, 504, 520, 523], "radian": [17, 18, 21, 22, 24, 25, 27, 198, 219, 220, 224, 232, 235, 247, 249, 258, 259, 261, 263, 269, 273], "radiat": [225, 514, 536, 537, 550], "radiative_model": [246, 550], "radii": [27, 475, 490, 532], "radio": [136, 391, 482], "radiobutton": [459, 467, 482, 498, 499], "radiu": [16, 17, 18, 21, 22, 24, 25, 27, 33, 34, 38, 43, 44, 50, 51, 52, 53, 54, 72, 82, 83, 91, 96, 102, 105, 109, 110, 121, 126, 127, 153, 159, 161, 162, 163, 165, 167, 175, 177, 193, 203, 205, 206, 223, 224, 232, 235, 245, 247, 249, 258, 259, 261, 263, 269, 271, 273, 302, 303, 336, 378, 391, 393, 400, 401, 418, 427, 428, 432, 442, 446, 448, 451, 452, 454, 455, 456, 457, 459, 461, 463, 464, 468, 469, 471, 473, 475, 477, 480, 481, 483, 484, 485, 486, 489, 498, 499, 500, 507, 508, 521, 523, 524, 527, 531, 532, 533, 536, 537], "radius_inn": [52, 53], "radius_max": [336, 465], "radius_min": 336, "radius_reverse_shock": [50, 53, 507], "radmax": [430, 431, 442, 443], "radmax2d": [83, 88, 158, 181, 428, 453], "rai": [11, 19, 20, 26, 52, 53, 57, 59, 63, 66, 83, 93, 121, 125, 126, 129, 131, 132, 136, 168, 225, 276, 277, 292, 293, 324, 325, 377, 383, 388, 389, 391, 395, 407, 409, 413, 414, 419, 435, 437, 442, 443, 446, 447, 448, 451, 452, 453, 454, 455, 456, 457, 459, 460, 461, 462, 463, 464, 465, 468, 469, 470, 471, 476, 477, 479, 481, 482, 483, 484, 485, 486, 487, 489, 490, 491, 492, 498, 499, 500, 502, 504, 505, 509, 510, 511, 514, 517, 519, 521, 523, 524, 540, 571, 572, 573, 574, 575, 576, 579], "rais": [16, 26, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 72, 84, 86, 87, 90, 91, 92, 100, 104, 123, 194, 199, 223, 225, 245, 269, 270, 271, 273, 304, 355, 377, 391, 400, 401, 404, 405, 422, 439, 442, 443, 464], "raise_error": [16, 84, 90, 104, 123], "raj2000": [476, 500], "ran": 489, "random": [6, 33, 42, 45, 46, 47, 87, 91, 102, 103, 105, 108, 109, 110, 151, 162, 165, 192, 193, 195, 201, 204, 205, 222, 230, 234, 236, 237, 238, 253, 260, 272, 275, 286, 326, 327, 328, 329, 330, 331, 332, 333, 334, 380, 389, 390, 393, 420, 432, 436, 463, 485, 514, 575, 576, 578], "random_se": 389, "random_st": [33, 42, 45, 46, 47, 102, 103, 105, 108, 109, 110, 151, 162, 165, 192, 193, 195, 201, 204, 205, 222, 230, 234, 236, 237, 238, 253, 260, 272, 275, 286, 326, 327, 328, 331, 332, 333, 334, 377, 390, 454, 463, 464], "randomli": [46, 377], "randomnumb": 331, "randomst": [33, 42, 45, 46, 47, 102, 103, 105, 108, 109, 110, 151, 162, 165, 192, 193, 195, 201, 204, 205, 222, 230, 234, 236, 237, 238, 253, 260, 272, 275, 286, 326, 328, 331, 332, 333, 334, 377], "rang": [17, 18, 19, 20, 21, 22, 24, 25, 26, 27, 67, 71, 74, 75, 80, 83, 87, 91, 92, 100, 101, 102, 105, 109, 110, 125, 132, 149, 162, 164, 165, 178, 190, 191, 194, 196, 197, 200, 201, 203, 213, 215, 217, 218, 221, 222, 224, 225, 227, 228, 229, 230, 233, 234, 236, 237, 238, 239, 240, 242, 245, 246, 248, 250, 251, 252, 253, 257, 260, 262, 264, 265, 266, 267, 270, 271, 272, 274, 275, 279, 317, 329, 331, 332, 333, 370, 377, 383, 389, 390, 392, 401, 419, 424, 425, 428, 436, 437, 439, 448, 451, 453, 454, 456, 459, 460, 462, 464, 469, 470, 471, 474, 476, 477, 478, 479, 480, 482, 483, 485, 486, 487, 490, 491, 498, 499, 500, 510, 512, 514, 533, 543, 572, 576], "rangl": 19, "rapid": [136, 292, 383, 386, 401, 402], "rare": [376, 377, 396, 482], "raster": [95, 193], "rate": [44, 45, 83, 88, 146, 147, 178, 185, 286, 334, 390, 413, 437, 451, 453, 471, 481, 489, 490, 492, 504, 517, 573], "rather": [117, 121, 125, 129, 132, 382, 395, 398, 436, 439, 441, 443, 448, 479, 482, 500, 510, 532, 576], "ratio": [105, 110, 167, 191, 192, 193, 287, 301, 401, 446, 471, 489, 524, 573, 575, 576, 577, 579], "ravel": [191, 463], "raw": [122, 178, 500], "rc": [192, 193, 195, 201, 204, 205, 374, 482], "rc1": 406, "rc_context": [192, 193, 195, 201, 204, 205, 482], "rc_param": [192, 193, 195, 201, 204, 205, 482], "rcparam": 374, "rdbu": 498, "rdbu_r": [102, 105, 109, 110], "re": [87, 91, 96, 124, 125, 130, 169, 192, 193, 195, 201, 204, 205, 210, 302, 303, 370, 377, 378, 380, 382, 384, 385, 391, 392, 393, 395, 398, 399, 400, 401, 409, 411, 412, 416, 428, 430, 437, 449, 451, 452, 457, 459, 460, 461, 470, 479, 480, 484, 486, 490, 498, 500, 512, 514, 535, 574], "reach": [53, 131, 206, 382, 387, 390, 485], "reactiv": 439, "read": [15, 16, 83, 85, 86, 87, 88, 91, 94, 100, 101, 102, 105, 106, 109, 110, 114, 116, 117, 121, 122, 124, 126, 128, 130, 132, 140, 141, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 156, 157, 159, 160, 161, 162, 163, 164, 165, 174, 192, 193, 195, 199, 200, 201, 204, 205, 210, 223, 225, 237, 245, 272, 273, 274, 278, 280, 282, 283, 340, 343, 363, 365, 370, 372, 377, 378, 380, 382, 387, 388, 389, 390, 393, 397, 399, 401, 403, 404, 405, 409, 411, 422, 425, 428, 436, 437, 439, 442, 443, 447, 451, 452, 453, 457, 459, 462, 463, 474, 477, 478, 479, 480, 485, 487, 489, 490, 491, 494, 498, 500, 511, 512, 514, 516, 517, 518, 520, 538, 568, 569, 574, 577], "read_arf": 106, "read_bkg": 106, "read_builtin": [225, 447, 540], "read_covari": [223, 245], "read_dataset": 15, "read_lazi": 430, "read_model": 15, "read_pha": 106, "read_rmf": 106, "read_xspec_model": 274, "readabl": [358, 388, 430, 452, 498], "reader": [404, 446, 454, 456, 459, 461, 464, 467, 470, 489], "readi": [387, 404, 412, 573], "readili": 397, "readm": [380, 403], "readthedoc": [13, 125, 185, 200, 210, 274, 380, 397, 419, 434, 479, 480, 489, 511, 514, 525, 527], "real": [51, 377, 380, 407, 454, 455, 457, 464, 479, 483, 510], "realis": [382, 391, 403], "realist": 405, "realiti": 447, "realiz": [383, 573], "realli": [377, 384, 391, 394, 454, 467, 479], "rearrang": 397, "reason": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 377, 382, 383, 384, 385, 388, 389, 390, 392, 394, 396, 398, 403, 436, 447, 463, 479, 487, 491, 510, 574], "reassign": [19, 20, 26, 217, 218, 219, 220, 221, 222, 223, 224, 225, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 242, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 269, 270, 271, 272, 273, 274, 275], "rebas": [377, 391], "rebin": [124, 144, 392, 430, 443, 469, 474, 477], "rebuild": [16, 84, 90, 104, 123, 460], "recarrai": [87, 91, 153, 163], "receiv": [395, 397, 398, 400, 402], "recent": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 87, 91, 387, 391, 392, 393, 394, 397, 410, 417, 431, 437, 460, 489, 491], "recip": [379, 393, 414, 428, 471, 514, 515, 573, 576], "reco": [102, 105, 109, 110, 149, 182, 377, 383, 392, 401, 438, 439, 446, 477, 481, 491, 573], "reco_exposur": 121, "reco_psf": [102, 105, 109, 110, 113, 481, 491], "recogn": [446, 454, 456, 459, 461, 463, 467, 470, 489], "recognis": [388, 574], "recognit": 403, "recommend": [92, 100, 101, 179, 223, 245, 284, 316, 317, 376, 377, 378, 380, 384, 386, 394, 403, 407, 408, 410, 413, 420, 437, 451, 452, 453, 462, 477, 479, 481, 485, 490, 498, 514, 521, 526, 527, 574, 575, 578], "recomput": [124, 401, 457], "recompute_ul": 124, "recon_vers": [490, 500], "reconstruct": [83, 102, 103, 105, 108, 109, 110, 112, 113, 121, 131, 132, 139, 149, 150, 151, 154, 164, 165, 178, 185, 377, 383, 388, 390, 425, 440, 446, 448, 451, 454, 456, 457, 459, 463, 467, 470, 477, 481, 483, 487, 491, 510, 512, 518, 519, 520, 527, 573], "recopsfmap": [158, 439, 442], "record": [83, 88, 377, 382, 383, 403, 489], "recov": 393, "rectangl": [220, 224, 232, 235, 247, 258, 259, 263, 269, 273, 337, 391, 465, 523], "rectangleskyregion": [203, 219, 220, 273, 336, 337, 391, 448, 475, 483, 523, 527], "rectangular": [465, 523, 527], "recurr": 392, "recurs": [344, 404], "red": [101, 286, 292, 367, 446, 447, 451, 454, 457, 459, 462, 475, 486, 487, 531, 532], "redesign": 386, "redistribut": 518, "redo": 471, "redshift": [19, 20, 225, 400, 500, 540], "redshift_scan": 447, "reduc": [6, 11, 15, 100, 102, 105, 109, 110, 160, 162, 165, 170, 180, 192, 193, 195, 197, 201, 204, 205, 383, 384, 386, 388, 389, 393, 396, 398, 403, 404, 409, 416, 421, 428, 437, 443, 445, 447, 448, 449, 452, 453, 454, 459, 460, 463, 467, 468, 469, 470, 473, 483, 486, 488, 491, 494, 510, 514, 524, 527, 532, 533, 572, 573, 574], "reduce_data": 393, "reduce_over_ax": [192, 193, 195, 201, 204, 205, 456, 481, 491], "reduct": [6, 11, 168, 383, 389, 390, 393, 397, 398, 399, 404, 409, 422, 424, 442, 445, 457, 461, 462, 465, 471, 477, 480, 483, 484, 486, 488, 494, 511, 514, 521, 523, 524, 572, 573], "ref": [83, 94, 102, 109, 121, 126, 132, 191, 200, 203, 223, 245, 378, 401, 455, 461, 465, 469, 476, 477, 478, 480, 482, 490, 500, 527, 562, 563, 564, 565, 566, 567, 573, 574], "ref_templ": [16, 84, 90, 104, 123], "refactor": [377, 389, 391, 392, 393, 400, 418, 419, 420, 422, 423, 424, 425, 428, 430, 432, 434, 436], "refer": [16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 50, 52, 53, 57, 59, 63, 67, 69, 77, 83, 84, 85, 86, 87, 88, 90, 91, 94, 101, 102, 104, 105, 106, 109, 110, 112, 113, 122, 123, 124, 125, 127, 132, 133, 135, 136, 142, 154, 168, 169, 172, 175, 176, 179, 180, 181, 184, 185, 187, 202, 203, 204, 205, 210, 217, 218, 221, 222, 225, 227, 228, 229, 230, 233, 234, 236, 237, 238, 239, 240, 242, 246, 248, 250, 251, 252, 253, 257, 260, 262, 264, 265, 266, 267, 270, 272, 274, 275, 277, 286, 288, 292, 293, 294, 295, 300, 301, 331, 332, 358, 359, 360, 361, 377, 378, 383, 385, 388, 389, 391, 393, 395, 400, 401, 402, 403, 404, 407, 414, 428, 435, 436, 447, 448, 449, 451, 452, 453, 454, 455, 456, 459, 460, 461, 462, 463, 464, 467, 468, 469, 470, 471, 473, 474, 476, 477, 478, 479, 481, 482, 484, 485, 487, 489, 490, 491, 498, 499, 500, 503, 510, 512, 525, 526, 527, 530, 531, 532, 533, 534, 535, 536, 537, 538, 540, 542, 544, 545, 546, 548, 549, 551, 552, 554, 555, 556, 557, 558, 559, 561, 562, 563, 564, 565, 566, 567, 568, 569, 576, 578], "referenc": [377, 573], "reference_flux": [19, 20, 26, 217, 218, 221, 225, 227, 228, 229, 233, 239, 240, 242, 246, 248, 250, 251, 252, 257, 262, 264, 265, 266, 267, 270, 274], "reference_map": 482, "reference_model": [122, 124, 133, 142, 446, 447, 455, 460, 478], "reference_model_default": [122, 124], "reference_spectral_model": [122, 124], "reference_tim": [86, 88, 102, 105, 109, 110, 196, 202, 222, 230, 234, 236, 237, 238, 253, 260, 272, 275, 441, 442, 464, 470, 474, 481, 482, 569], "refit": 478, "reflect": [170, 174, 175, 176, 180, 189, 386, 391, 393, 396, 398, 409, 421, 428, 430, 433, 434, 437, 447, 448, 451, 452, 453, 461, 469, 473, 483, 522, 573], "reflected_bkg_mak": 481, "reflectedbgestim": 393, "reflectedregion": 447, "reflectedregionsbackgroundmak": [170, 175, 422, 448, 451, 453, 461, 469, 473, 481], "reflectedregionsfind": [174, 180, 420, 523], "refpix": [203, 204, 205], "refresh": [87, 91], "refus": 377, "reg": [102, 105, 109, 110, 483, 485], "reg_dataset": 477, "regard": [401, 404, 451], "regardless": [87, 91], "regeard": [440, 441, 442, 443], "regi": [383, 388, 389, 393], "region": [6, 27, 83, 91, 100, 102, 105, 107, 109, 110, 114, 116, 121, 122, 124, 126, 128, 131, 136, 150, 151, 157, 162, 165, 167, 168, 169, 172, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 185, 186, 189, 191, 192, 193, 195, 200, 201, 203, 204, 205, 207, 210, 219, 220, 223, 224, 232, 235, 245, 247, 249, 258, 259, 261, 263, 269, 271, 273, 274, 276, 287, 301, 335, 336, 337, 338, 339, 373, 374, 376, 378, 381, 383, 384, 392, 393, 394, 396, 399, 401, 409, 420, 421, 422, 424, 428, 430, 431, 433, 434, 436, 437, 439, 441, 442, 447, 452, 454, 455, 456, 457, 459, 460, 461, 462, 463, 464, 465, 468, 469, 470, 471, 473, 475, 476, 477, 478, 479, 482, 485, 487, 489, 490, 491, 492, 498, 499, 500, 509, 510, 511, 512, 514, 521, 522, 524, 525, 526, 531, 532, 550, 572, 573, 575, 576, 577], "region_coord": 200, "region_ev": 471, "region_find": [174, 453], "region_io": 200, "region_map": [201, 205, 527], "region_map_1": 527, "region_map_2": 527, "region_mask": [83, 191, 203, 391, 451, 457, 461, 477, 481, 483, 499, 521, 523, 524], "region_nd_map": 201, "region_new": 338, "region_pix": 485, "region_weight": 203, "regionfind": [175, 176, 180], "regiongeom": [102, 105, 109, 110, 122, 126, 172, 179, 181, 182, 183, 185, 186, 201, 220, 224, 232, 235, 247, 258, 259, 261, 263, 269, 273, 391, 392, 399, 409, 424, 425, 428, 446, 448, 451, 453, 454, 461, 465, 469, 470, 471, 473, 476, 477, 478, 481, 490, 500, 510, 523, 526], "regionndmap": [26, 106, 109, 110, 131, 173, 174, 179, 181, 192, 193, 195, 200, 204, 205, 220, 224, 232, 235, 237, 247, 258, 259, 263, 269, 270, 273, 374, 391, 409, 424, 425, 428, 431, 439, 442, 464, 478, 490, 510, 526, 569], "regions_ds9": 483, "regionsfind": [174, 175, 180, 430], "regist": 485, "registri": [55, 98, 118, 158, 170, 241, 243, 255, 256, 268, 398, 405, 421, 424, 425, 428, 437, 476, 485], "regress": 380, "regul": 403, "regular": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 191, 199, 203, 386, 405, 430, 442, 467, 482, 483, 491], "regulargridinterpol": [316, 377], "regularis": 405, "regularli": [405, 492], "reichardt": 432, "reimplement": 388, "rej_sampl": 390, "reject": [381, 382, 390], "rel": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 67, 82, 87, 88, 91, 105, 106, 110, 132, 146, 147, 148, 149, 152, 153, 154, 156, 159, 161, 163, 164, 191, 192, 193, 195, 200, 201, 202, 203, 204, 205, 258, 277, 291, 334, 392, 403, 428, 470, 474, 491, 537, 576], "rel_reduction_of_f_": 479, "relat": [11, 13, 67, 83, 85, 208, 292, 383, 385, 388, 390, 391, 394, 396, 397, 398, 403, 407, 424, 425, 437, 443, 463, 477, 485, 489, 504, 571, 576], "relative_variability_amplitud": 474, "relative_variability_error": 474, "relative_variability_signific": 474, "relativist": 550, "releas": [11, 51, 65, 95, 379, 381, 382, 384, 385, 391, 394, 395, 404, 408, 410, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 448, 451, 452, 460, 468, 469, 473, 489, 491, 492, 498, 499, 502, 514, 516, 517, 518, 520], "relev": [122, 285, 287, 360, 377, 383, 392, 397, 401, 406, 451, 452, 455, 468, 469, 470, 473, 484, 486, 489, 491, 492, 498, 499, 510, 511, 578], "reli": [122, 377, 382, 383, 387, 388, 392, 396, 401, 402, 420, 425, 428, 439, 449, 459, 483, 502, 576], "reliabl": [380, 410, 457, 479, 483, 575], "remain": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 87, 91, 100, 382, 383, 384, 385, 390, 394, 403, 418, 437, 453, 484, 520], "remaind": 491, "remark": 453, "rememb": [377, 391, 479, 494, 574], "remi": [399, 400, 420, 421, 422, 423, 424, 425, 428, 439, 440, 441, 442, 443], "remind": [197, 403, 455, 461, 478], "remnant": [28, 52, 448, 462, 485, 505], "remot": 380, "remov": [13, 87, 91, 92, 96, 100, 162, 165, 177, 190, 191, 196, 199, 200, 203, 205, 245, 303, 380, 384, 385, 387, 388, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 408, 417, 418, 419, 420, 421, 422, 423, 424, 425, 428, 429, 430, 432, 433, 434, 435, 436, 437, 440, 441, 442, 443, 451, 457, 465, 471, 477, 483, 486, 489, 490, 503, 514, 523], "remove_column": [87, 91], "remove_indic": [87, 91], "remove_row": [87, 91], "renam": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 87, 91, 124, 190, 191, 192, 193, 195, 196, 197, 200, 201, 203, 204, 205, 380, 387, 388, 396, 397, 400, 416, 419, 421, 422, 423, 424, 428, 438, 439, 442, 574], "rename_ax": [190, 191, 192, 193, 195, 196, 200, 201, 203, 204, 205, 439], "rename_column": [87, 91, 124], "rename_dupl": [87, 91], "render": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 87, 91, 355, 377, 378, 385, 436], "renorm": [457, 521], "renormalis": 177, "reoptim": [125, 129, 130, 210, 418, 447, 465, 468, 478, 479, 487, 498], "reorder_ax": [192, 193, 195, 201, 204, 205, 442], "reorgan": 428, "reorganis": 397, "repeat": [378, 459, 491], "repl": 377, "replac": [15, 16, 84, 87, 90, 91, 100, 102, 104, 105, 109, 110, 123, 150, 151, 157, 162, 190, 191, 193, 196, 200, 201, 203, 205, 271, 283, 377, 387, 388, 391, 395, 398, 404, 410, 419, 420, 422, 424, 425, 442, 443, 463, 471], "replace_axi": [190, 191, 200, 203], "replace_column": [87, 91], "repo": [378, 385, 406, 407, 416, 429], "report": [87, 380, 393, 406, 407, 416, 430, 431, 436], "repositori": [87, 91, 377, 380, 382, 385, 387, 403, 406, 428, 437, 463, 492], "repres": [13, 16, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 47, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 70, 71, 72, 74, 75, 76, 78, 79, 80, 84, 87, 90, 91, 102, 104, 105, 109, 110, 123, 191, 193, 195, 197, 198, 200, 202, 261, 304, 312, 322, 377, 388, 389, 390, 391, 395, 398, 399, 400, 401, 418, 442, 447, 464, 465, 476, 478, 479, 481, 482, 483, 485, 490, 500, 509, 510, 512, 516, 517, 518, 520, 526, 571, 572, 573, 578], "represent": [16, 19, 20, 26, 83, 84, 86, 87, 90, 91, 104, 123, 217, 218, 221, 225, 227, 228, 229, 233, 239, 240, 242, 246, 248, 250, 251, 252, 257, 262, 264, 265, 266, 267, 270, 274, 377, 391, 404, 418, 420, 442, 449, 476, 482, 485, 526], "reprocess": 383, "reproduc": [94, 101, 124, 378, 393, 394, 395, 397, 403, 404, 408, 410, 437, 481], "reproject": [178, 192, 193, 195, 201, 204, 205, 373, 377, 383, 391, 394, 401, 422, 429, 437, 439, 443, 482, 483], "reproject_by_imag": [192, 193, 195, 201, 204, 205, 443], "reproject_to_geom": [192, 193, 195, 201, 204, 205, 439], "request": [85, 122, 124, 378, 381, 382, 384, 385, 386, 387, 388, 389, 391, 397, 401, 402, 403, 405, 407, 415, 463, 478, 483, 512], "requir": [16, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 43, 44, 82, 83, 84, 85, 87, 88, 90, 91, 95, 102, 104, 105, 109, 110, 111, 115, 123, 124, 127, 132, 146, 147, 153, 161, 169, 192, 193, 194, 195, 196, 197, 200, 201, 202, 204, 205, 206, 304, 352, 356, 357, 375, 382, 383, 384, 386, 387, 388, 389, 390, 391, 392, 393, 399, 400, 401, 402, 403, 405, 406, 408, 410, 416, 421, 422, 423, 424, 429, 430, 432, 433, 434, 435, 438, 439, 440, 447, 448, 453, 457, 460, 469, 470, 471, 473, 474, 477, 480, 482, 483, 485, 489, 499, 512, 514, 527], "require_ev": 82, "required_ax": [146, 147, 148, 149, 150, 151, 152, 153, 154, 156, 157, 159, 161, 162, 163, 164, 165, 480], "required_hdu": 431, "required_irf": [16, 82, 452, 453, 456, 457, 459, 498], "required_nam": [194, 196, 197, 202], "required_paramet": [153, 161, 163], "rerun": [392, 473], "resampl": [102, 105, 109, 110, 124, 144, 145, 150, 190, 191, 192, 193, 194, 195, 196, 200, 201, 203, 204, 205, 372, 428, 430, 474, 514], "resample_axi": [124, 190, 191, 192, 193, 195, 200, 201, 203, 204, 205, 372, 425, 469, 474], "resample_energy_axi": [102, 105, 109, 110, 150, 425, 430, 477], "resample_energy_edg": [451, 514], "resampled_energy_edg": 145, "resampled_map": [192, 193, 195, 201, 204, 205], "rescal": 481, "research": [393, 403], "reset": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 102, 105, 109, 110, 231, 271, 378, 425], "reset_data_cach": [102, 105, 109, 110], "reset_to_default": 231, "reshap": [192, 193, 195, 201, 204, 205, 446, 464, 480, 482], "resid": [399, 485], "residu": [72, 101, 102, 105, 109, 110, 169, 388, 389, 393, 420, 425, 431, 438, 457, 477, 479, 490, 510, 523, 573], "resolut": [52, 149, 150, 154, 191, 203, 386, 388, 390, 391, 436, 442, 476, 490], "resolv": [16, 84, 90, 104, 123, 378, 380, 387, 391, 392, 399, 400, 412, 418, 437, 445, 469, 472, 494, 523], "resort": 456, "resourc": [436, 494], "respect": [15, 16, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 47, 83, 84, 87, 90, 91, 104, 106, 123, 124, 136, 191, 193, 203, 205, 284, 377, 387, 392, 403, 405, 425, 455, 457, 470, 478, 482, 483, 491, 512, 527, 577], "respond": 403, "respons": [6, 108, 149, 150, 151, 154, 156, 157, 175, 377, 383, 384, 386, 388, 389, 390, 392, 393, 401, 403, 409, 435, 436, 437, 438, 448, 451, 452, 453, 454, 467, 470, 480, 481, 484, 489, 491, 492, 494, 498, 499, 510, 511, 516, 518, 520, 572, 573], "rest": [26, 380, 394, 396, 476, 509], "restor": [19, 20, 26, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 214, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 242, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 269, 270, 271, 272, 273, 274, 275, 484], "restore_statu": [214, 216, 223, 245, 487], "restore_valu": [214, 216, 223, 245], "restrict": [87, 91, 391, 459, 477, 483], "restructur": [378, 392, 393, 394, 396, 398, 404, 407, 422, 428, 429, 430, 431, 433, 442], "result": [16, 46, 74, 84, 86, 87, 90, 91, 92, 101, 102, 104, 105, 109, 110, 117, 119, 121, 122, 123, 124, 125, 126, 128, 129, 130, 132, 134, 135, 140, 142, 143, 154, 160, 162, 165, 178, 182, 183, 188, 190, 191, 192, 193, 195, 197, 200, 201, 203, 204, 205, 209, 210, 211, 212, 223, 245, 273, 283, 286, 304, 370, 376, 377, 378, 380, 382, 384, 386, 387, 388, 389, 390, 393, 395, 396, 399, 403, 405, 410, 413, 420, 428, 430, 431, 436, 438, 442, 443, 447, 449, 451, 453, 454, 459, 461, 463, 464, 467, 469, 470, 471, 474, 476, 477, 479, 482, 483, 486, 487, 490, 491, 492, 498, 499, 509, 512, 514, 527, 562, 573, 575, 576], "result1": 447, "result2": 484, "result_ecpl": 449, "result_joint": [448, 451, 459], "result_list": 370, "result_log_parabola": 449, "result_minuit": 479, "result_pwl": 449, "result_scipi": 479, "result_stack": 451, "results_joint": 460, "results_prior": 487, "results_simplex": 479, "results_t": 462, "retain": [476, 527], "retriev": [87, 91, 401, 403, 448, 449, 451, 482, 485, 486, 491, 499, 511, 526, 527], "return": [16, 19, 20, 26, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 43, 44, 45, 46, 47, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 77, 80, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 96, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 113, 114, 115, 116, 117, 119, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 156, 157, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 210, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 242, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 269, 270, 271, 272, 273, 274, 275, 276, 278, 281, 283, 284, 285, 286, 287, 288, 290, 291, 292, 293, 294, 295, 300, 301, 302, 303, 304, 306, 308, 310, 311, 315, 317, 322, 326, 328, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 343, 344, 347, 348, 349, 358, 359, 360, 361, 362, 365, 367, 368, 370, 372, 373, 383, 387, 388, 389, 390, 391, 392, 400, 401, 404, 405, 421, 422, 425, 428, 431, 437, 439, 451, 453, 457, 461, 465, 469, 470, 473, 476, 477, 478, 479, 481, 482, 483, 485, 487, 500, 504, 526, 527, 559, 576], "return_delta": 334, "return_diff": 334, "return_typ": 90, "return_unit": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40], "reus": [393, 425, 443], "reval": 533, "revers": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 50, 53, 87, 91, 92, 100, 196, 245, 482, 507], "reverse_lon_radec": 155, "review": [380, 385, 386, 387, 390, 391, 393, 394, 396, 397, 398, 400, 401, 403, 405, 438, 439, 526], "revis": 397, "revisit": 225, "rework": 423, "rewrit": [383, 386, 393, 423, 433, 434, 436, 437, 438, 574], "rewritten": [435, 438], "rf": 475, "rgb": [372, 374, 442, 446, 451], "rglob": [82, 463, 489], "rhe": 181, "rho": [17, 18, 21, 22, 23, 24, 25, 27], "rho_": [17, 21, 22, 24, 25, 27, 52, 53], "rich": [377, 393], "rid": 383, "right": [21, 24, 25, 27, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 50, 51, 52, 53, 87, 91, 102, 109, 122, 124, 132, 152, 229, 233, 252, 265, 288, 294, 365, 377, 391, 400, 403, 455, 461, 463, 468, 470, 489, 531, 532, 533, 540, 541, 544, 545, 547, 548, 552, 555, 556, 557, 558, 562, 563, 564, 566, 574, 575, 576, 577], "rightarrow": [537, 577], "rigid": 382, "ring": [105, 121, 167, 170, 177, 191, 192, 193, 383, 386, 393, 396, 409, 418, 422, 424, 434, 435, 436, 437, 445, 458, 462, 483, 494, 513, 522, 525, 573], "ring2dkernel": [167, 177], "ring_background": [445, 457, 458], "ring_bkg_mak": 524, "ring_mak": 457, "ringbackgroundestim": [383, 436], "ringbackgroundmak": [167, 170, 422, 457, 481, 524], "rise": [136, 236, 474, 564], "risk": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 380, 403], "rj1gf72w": 459, "rm": [149, 150, 154, 400, 453, 479, 516, 518, 519, 520, 533, 562, 563, 564, 565, 566, 567], "rmax": [17, 18, 21, 22, 24, 25, 27], "rmf": [106, 107, 110, 149, 150, 151, 434, 451], "rmf_ob": 106, "rmffile": 106, "rmin": [17, 18, 21, 22, 24, 25, 27], "rng": [33, 42, 45, 46, 47, 102, 103, 105, 108, 109, 110, 151, 162, 165, 192, 193, 195, 201, 204, 205, 222, 230, 234, 236, 237, 238, 253, 260, 272, 275, 286, 326, 328, 331, 332, 333, 334, 377], "roadmap": [381, 384, 393, 402, 417, 438], "roberta": [436, 437], "robust": [377, 437], "roi": [67, 393, 476, 492, 573], "roi_max": 393, "role": [436, 481], "rolf": 416, "rolk": 573, "rolke2005": [573, 576], "roll": 490, "room": 387, "root": [19, 20, 26, 122, 123, 132, 217, 218, 221, 225, 227, 228, 229, 233, 239, 240, 242, 246, 248, 250, 251, 252, 257, 262, 264, 265, 266, 267, 270, 274, 296, 299, 377, 395, 428, 455, 502, 512, 574, 576], "rosillo": 439, "rotang": 464, "rotat": [51, 54, 175, 176, 180, 185, 224, 232, 235, 464, 523, 531, 532], "rough": [72, 393], "roughli": [117, 380, 385, 391, 393, 396, 397, 435, 457], "round": [87, 91, 192, 193, 195, 197, 201, 204, 205, 451, 526], "round_to_edg": [190, 191, 200, 203], "round_trip": [16, 84, 90, 104, 123], "routin": 416, "row": [56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 87, 91, 140, 149, 312, 348, 371, 392, 401, 404, 439, 442, 451, 454, 464, 465, 473, 476, 479, 482, 489, 491, 492, 500, 509], "row_idx": [67, 87], "row_index": [56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 476], "row_label": 371, "row_specifi": [83, 87, 91], "royalblu": 471, "rpovid": 392, "rqkt5l3o": 447, "rspec": [67, 476], "rst": [380, 382, 397, 403, 406, 407, 423, 428], "rtd": 437, "rtol": [132, 352, 377], "rtol_ax": [146, 147, 148, 149, 152, 153, 154, 156, 159, 161, 163, 164, 191, 192, 193, 195, 200, 201, 203, 204, 205], "rtol_wc": 203, "ruben": 436, "rub\u00e9n": 436, "ruiz": [385, 393, 397, 417, 418, 419, 420, 421, 422, 423, 424, 425, 428, 430, 436, 437, 438], "rule": [87, 91, 261, 279, 315, 403, 482, 526], "run": [16, 82, 83, 84, 88, 90, 93, 101, 103, 104, 108, 117, 119, 120, 121, 123, 125, 126, 128, 129, 130, 131, 132, 140, 141, 167, 168, 169, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 190, 191, 200, 203, 210, 324, 325, 351, 370, 376, 377, 378, 384, 385, 387, 390, 392, 393, 394, 397, 399, 401, 405, 406, 407, 408, 413, 419, 420, 423, 424, 435, 437, 438, 442, 446, 447, 448, 449, 454, 455, 456, 457, 459, 460, 461, 463, 467, 469, 470, 471, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 489, 490, 491, 492, 494, 496, 499, 500, 510, 511, 512, 514, 519, 521, 523, 524, 530, 531, 532, 533, 534, 535, 536, 537, 538, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 561, 562, 563, 564, 565, 566, 567, 568, 569], "run_fit": [15, 452, 456, 498], "run_id": [490, 500], "run_multiprocess": 514, "runner": [16, 341, 446, 448, 451, 452, 453, 454, 455, 456, 457, 459, 460, 461, 462, 463, 464, 465, 467, 468, 469, 470, 471, 473, 475, 476, 477, 479, 481, 482, 483, 484, 485, 487, 489, 490, 491, 492, 498, 499, 500, 538, 540, 546, 562, 568, 569], "runtim": [386, 404], "runtimewarn": [453, 457, 463, 473, 492, 562], "rx": 448, "rxj": 448, "rxj1713_2016_250gev": 538, "r\u00e9gi": [383, 386, 387, 391, 392, 394, 396, 398, 399, 400, 401, 402, 404, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 430, 431, 432, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443], "r\u00e9my": [395, 428, 430, 431, 439], "s0167947313003204": [134, 143], "s180": 292, "s2": 272, "s3": 272, "s_0": 514, "s_1": 514, "safari": [87, 91], "safe": [99, 101, 102, 105, 109, 110, 150, 151, 157, 162, 165, 170, 178, 377, 389, 391, 403, 422, 424, 425, 439, 440, 441, 442, 448, 451, 477, 483, 499, 510, 572], "safe_mask": [16, 102, 109, 452, 456, 457, 459, 498], "safe_mask_mak": [168, 448, 451, 471, 481, 491, 521, 523, 524], "safe_mask_mask": [453, 461, 469, 473, 481], "safemaskconfig": 16, "safemaskmak": [168, 170, 398, 422, 423, 428, 430, 431, 443, 448, 451, 453, 461, 467, 469, 471, 473, 481, 483, 491, 498, 499, 521, 522, 523, 524], "safeti": 403, "sagittariu": [33, 38], "saha": 436, "sai": [74, 382, 396, 574], "said": [377, 382, 384, 491, 492, 574], "sake": [463, 479], "saldana": [225, 226, 442, 447, 540], "saldana21": 540, "same": [27, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 82, 87, 91, 95, 100, 102, 105, 106, 109, 110, 121, 132, 133, 134, 140, 141, 142, 143, 153, 154, 160, 161, 162, 163, 165, 166, 168, 189, 190, 191, 192, 193, 195, 196, 199, 200, 201, 203, 204, 205, 277, 286, 292, 370, 377, 380, 385, 387, 389, 391, 392, 396, 397, 398, 399, 400, 401, 402, 403, 405, 407, 409, 410, 420, 421, 425, 428, 442, 449, 452, 453, 454, 459, 460, 463, 467, 468, 469, 471, 476, 477, 482, 483, 484, 485, 486, 487, 490, 491, 494, 498, 510, 511, 512, 518, 526, 527, 574], "sampl": [47, 93, 103, 108, 132, 135, 151, 153, 159, 161, 162, 163, 165, 192, 193, 195, 201, 203, 204, 205, 222, 230, 234, 236, 237, 238, 253, 260, 272, 275, 284, 286, 295, 317, 326, 331, 332, 333, 334, 381, 389, 391, 392, 395, 397, 409, 416, 418, 420, 421, 424, 430, 437, 439, 442, 443, 445, 453, 466, 474, 477, 479, 494, 514], "sample_axi": 326, "sample_background": [103, 108, 422], "sample_coord": [151, 162, 165, 192, 193, 195, 201, 204, 205, 422, 424, 439], "sample_edisp": [103, 108], "sample_powerlaw": 396, "sample_psf": [103, 108], "sample_sourc": [103, 108], "sample_spher": [432, 578], "sample_tim": [222, 230, 234, 236, 237, 238, 253, 260, 272, 275, 428, 439], "sampler": [103, 326, 386, 390, 424, 428, 463], "sampler_kwarg": 93, "saniti": 436, "satisfi": [145, 169, 191, 192, 193, 304, 484, 514], "save": [15, 19, 20, 26, 100, 132, 207, 210, 217, 218, 219, 220, 221, 222, 223, 224, 225, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 242, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 269, 270, 271, 272, 273, 274, 275, 377, 385, 393, 401, 405, 447, 459, 460, 463, 479, 483, 484, 491, 511], "savefig": [355, 413], "savez": 207, "saw": 414, "sbpl": [262, 400, 485], "sc": [87, 91], "scalar": [87, 91, 160, 191, 192, 193, 195, 201, 204, 205, 304, 396, 430, 441, 443, 482, 526], "scale": [17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 29, 52, 53, 67, 86, 88, 96, 100, 104, 105, 110, 117, 123, 125, 126, 129, 153, 169, 197, 201, 202, 203, 205, 213, 215, 217, 218, 220, 221, 224, 225, 227, 228, 229, 230, 232, 233, 234, 235, 236, 237, 238, 239, 240, 242, 246, 247, 248, 249, 250, 251, 252, 253, 257, 258, 259, 260, 262, 264, 265, 266, 267, 270, 272, 273, 274, 281, 284, 303, 316, 317, 318, 334, 358, 359, 360, 370, 378, 386, 391, 392, 395, 400, 423, 428, 429, 437, 440, 441, 442, 452, 455, 464, 465, 468, 469, 470, 474, 475, 476, 478, 480, 481, 482, 485, 486, 487, 489, 498, 500, 502, 540, 561, 562, 563, 564, 565, 566, 567, 568, 569], "scale10": [19, 20, 213, 215, 217, 220, 221, 224, 225, 227, 228, 229, 230, 232, 233, 234, 235, 236, 237, 238, 239, 240, 242, 249, 250, 251, 252, 253, 257, 258, 259, 260, 262, 265, 266, 267, 272, 273, 405, 550], "scale_method": [19, 20, 213, 215, 217, 220, 221, 224, 225, 227, 228, 229, 230, 232, 233, 234, 235, 236, 237, 238, 239, 240, 242, 249, 250, 251, 252, 253, 257, 258, 259, 260, 262, 265, 266, 267, 272, 273, 405, 550], "scale_to_local_dens": [17, 18, 21, 22, 24, 25, 27, 475], "scaled_featur": 303, "scaled_features_irf": [302, 303, 486], "scaledregulargridinterpol": [68, 225, 274, 423, 438], "scalespectralmodel": [125, 126, 129, 256, 400, 485], "scan": [19, 20, 95, 122, 124, 125, 126, 129, 130, 210, 213, 215, 217, 220, 221, 224, 225, 227, 228, 229, 230, 232, 233, 234, 235, 236, 237, 238, 239, 240, 242, 249, 250, 251, 252, 253, 257, 258, 259, 260, 262, 265, 266, 267, 272, 273, 392, 401, 428, 465, 469, 478, 487, 512, 514], "scan_max": [19, 20, 125, 129, 132, 213, 215, 217, 220, 221, 224, 225, 227, 228, 229, 230, 232, 233, 234, 235, 236, 237, 238, 239, 240, 242, 249, 250, 251, 252, 253, 257, 258, 259, 260, 262, 265, 266, 267, 272, 273, 447, 469, 478, 479], "scan_min": [19, 20, 125, 129, 132, 213, 215, 217, 220, 221, 224, 225, 227, 228, 229, 230, 232, 233, 234, 235, 236, 237, 238, 239, 240, 242, 249, 250, 251, 252, 253, 257, 258, 259, 260, 262, 265, 266, 267, 272, 273, 447, 478, 479], "scan_n_sigma": [19, 20, 213, 215, 217, 220, 221, 224, 225, 227, 228, 229, 230, 232, 233, 234, 235, 236, 237, 238, 239, 240, 242, 249, 250, 251, 252, 253, 257, 258, 259, 260, 262, 265, 266, 267, 272, 273, 479], "scan_n_valu": [19, 20, 125, 129, 130, 213, 217, 220, 221, 224, 225, 227, 228, 229, 230, 232, 233, 234, 235, 236, 237, 238, 239, 240, 242, 249, 250, 251, 252, 253, 257, 258, 259, 260, 262, 265, 266, 267, 272, 273, 447, 479, 487], "scan_prior": 487, "scan_valu": [19, 20, 210, 213, 215, 217, 220, 221, 224, 225, 227, 228, 229, 230, 232, 233, 234, 235, 236, 237, 238, 239, 240, 242, 249, 250, 251, 252, 253, 257, 258, 259, 260, 262, 265, 266, 267, 272, 273, 465, 479], "scargl": [392, 436, 474], "scatter": [223, 245, 398, 455, 461, 473, 531, 532], "scenario": [87, 91, 382, 389, 399, 409, 478, 482, 485, 503, 575], "scengin": [87, 91], "schedul": 386, "schema": [15, 16, 84, 90, 104, 123, 393, 396], "schema_gener": [16, 84, 90, 104, 123], "schema_json": [16, 84, 90, 104, 123], "scheme": [16, 84, 90, 101, 104, 106, 107, 123, 191, 192, 193, 202, 237, 377, 383, 387, 389, 392, 399, 400, 401, 402, 404, 421, 428, 439, 443, 464, 480, 482, 485, 514, 519, 525, 526, 528], "school": 403, "scienc": [134, 143, 192, 193, 195, 204, 205, 384, 386, 390, 393, 394, 397, 403, 414, 436, 437, 454, 460, 470, 482, 485, 486, 489, 490, 494, 502, 514, 548, 573, 574], "sciencedirect": [134, 143], "scientif": [378, 384, 400, 403, 410], "scientist": 489, "scikit": [140, 377, 391, 394, 397, 437, 483], "scipi": [19, 20, 26, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 205, 210, 217, 218, 221, 225, 227, 228, 229, 233, 239, 240, 242, 246, 248, 250, 251, 252, 257, 262, 264, 265, 266, 267, 270, 272, 274, 302, 316, 357, 370, 376, 377, 380, 386, 391, 394, 395, 397, 403, 414, 418, 419, 420, 421, 433, 434, 435, 438, 440, 446, 448, 451, 452, 453, 454, 455, 456, 457, 459, 460, 461, 462, 463, 464, 465, 468, 469, 470, 471, 475, 476, 477, 478, 479, 481, 482, 483, 484, 485, 487, 489, 490, 491, 492, 498, 499, 500, 571, 576], "scipy_mvn": 208, "scipy_opt": 479, "scitool": 553, "scope": [390, 391, 392, 393, 396, 404, 503], "scratch": [152, 377, 387, 391, 407, 459, 483], "screen": [87, 91, 482, 500], "script": [6, 87, 91, 124, 340, 341, 342, 343, 344, 345, 346, 378, 383, 384, 386, 388, 391, 393, 396, 397, 403, 406, 407, 417, 418, 419, 420, 428, 429, 433, 436, 437, 438, 439, 443, 445, 451, 455, 457, 459, 460, 461, 462, 463, 465, 469, 470, 473, 475, 476, 477, 478, 479, 481, 484, 487, 490, 495, 498, 513, 514, 574], "scriptabl": 404, "scutum": [33, 38], "sdc": 489, "sdist": 407, "seaborn": 514, "search": [87, 91, 285, 287, 341, 377, 378, 413, 436, 437, 452, 455, 461, 462, 475, 476, 486, 498, 499, 500, 502, 514, 574], "season": 397, "sebastian": 428, "sec": [54, 83, 94, 100, 129, 334], "second": [42, 58, 83, 86, 87, 88, 91, 135, 149, 272, 295, 334, 337, 354, 358, 361, 366, 378, 385, 387, 389, 391, 395, 401, 403, 407, 422, 441, 451, 452, 455, 457, 459, 461, 462, 463, 464, 465, 469, 470, 473, 475, 477, 479, 481, 482, 484, 487, 489, 494, 498, 509, 575, 578], "secpl": [265, 266, 267, 400, 485], "section": [19, 87, 91, 286, 288, 294, 377, 378, 380, 382, 391, 393, 394, 396, 400, 403, 407, 425, 438, 454, 459, 463, 464, 467, 470, 476, 478, 479, 483, 484, 485, 500, 503, 514, 527, 572, 574, 578], "secur": 483, "sed": [118, 121, 122, 123, 124, 126, 132, 201, 225, 376, 393, 395, 401, 409, 416, 435, 449, 455, 465, 469, 476, 477, 478, 498, 500, 573], "sed_fit": [445, 449, 450], "sed_fitting_gammacat_fermi": 397, "sed_typ": [19, 20, 26, 122, 123, 124, 217, 218, 221, 225, 227, 228, 229, 233, 239, 240, 242, 246, 248, 250, 251, 252, 257, 262, 264, 265, 266, 267, 270, 274, 428, 446, 447, 449, 451, 452, 453, 460, 461, 465, 468, 469, 470, 476, 478, 500, 512, 514, 550, 573], "sed_type_init": [71, 74, 75, 78, 122, 123, 124], "sed_type_plot_default": [122, 124], "sedov": [52, 53], "sedov_taylor_begin": [52, 53, 508], "sedov_taylor_end": [52, 53, 508], "seds_20230803": 64, "sedtypeenum": 123, "see": [11, 13, 19, 20, 26, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 50, 66, 82, 83, 85, 87, 89, 91, 95, 99, 100, 101, 102, 105, 109, 110, 117, 119, 121, 124, 125, 126, 129, 131, 132, 134, 143, 146, 147, 148, 149, 150, 151, 152, 153, 154, 156, 157, 159, 161, 162, 163, 164, 165, 168, 175, 177, 178, 185, 190, 191, 193, 195, 197, 198, 200, 203, 205, 210, 213, 214, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 227, 228, 229, 230, 232, 233, 234, 235, 236, 237, 238, 239, 240, 242, 245, 246, 247, 248, 249, 250, 251, 252, 253, 257, 258, 259, 260, 261, 262, 264, 265, 266, 267, 270, 271, 272, 273, 274, 278, 288, 294, 297, 298, 301, 304, 312, 328, 344, 367, 368, 376, 377, 378, 380, 381, 382, 384, 385, 386, 387, 390, 391, 392, 393, 394, 395, 397, 398, 402, 403, 404, 405, 406, 407, 409, 410, 412, 413, 415, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 433, 434, 435, 436, 437, 438, 439, 446, 447, 448, 449, 451, 452, 453, 454, 455, 456, 457, 459, 460, 461, 462, 463, 465, 467, 468, 469, 470, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 489, 491, 494, 498, 499, 500, 502, 510, 511, 514, 524, 525, 527, 553, 557, 558, 571, 573, 574, 575, 576, 578], "seed": [33, 42, 45, 46, 47, 102, 103, 105, 108, 109, 110, 151, 162, 165, 192, 193, 195, 201, 204, 205, 222, 230, 234, 236, 237, 238, 246, 253, 260, 272, 275, 286, 326, 327, 328, 331, 332, 333, 334, 377, 436, 463, 550], "seed_photon_field": [246, 550], "seem": [377, 384, 385, 388, 394, 398, 502], "seen": [377, 391, 398, 448, 455, 460, 469, 482, 485, 490], "select": [16, 82, 83, 86, 87, 88, 89, 91, 92, 96, 100, 102, 105, 109, 110, 121, 172, 179, 192, 193, 194, 195, 197, 202, 204, 205, 214, 216, 223, 245, 261, 271, 283, 373, 374, 387, 389, 390, 391, 392, 393, 397, 399, 401, 404, 409, 411, 417, 420, 428, 432, 446, 451, 453, 454, 456, 457, 459, 460, 462, 463, 464, 467, 470, 471, 477, 478, 479, 481, 482, 483, 486, 489, 491, 492, 494, 500, 512, 514, 518, 519, 523, 572, 574], "select_energi": [83, 511], "select_from_geom": [223, 245], "select_map_mask": 418, "select_mask": [83, 223, 245, 428, 484], "select_nested_model": 442, "select_obs_id": [91, 461], "select_observ": [91, 96, 393, 469, 473, 486, 499, 514], "select_offset": [83, 463, 492, 511], "select_paramet": [83, 89, 471, 511], "select_phas": 387, "select_rad_max": 83, "select_rang": 91, "select_region": [83, 89, 223, 245, 391, 420, 428, 463, 464, 471, 484, 500, 511], "select_row_subset": 83, "select_sky_box": 391, "select_sky_circl": [91, 391], "select_tim": [83, 86, 88, 92, 100, 387, 401, 422, 464, 469, 473, 511], "select_time_rang": 91, "selected_energi": 511, "selected_ev": 83, "selected_id": 511, "selected_obs_t": [91, 486, 499], "selected_offset": 511, "selected_region": 511, "selected_tim": 511, "selection_al": [117, 132], "selection_mask": [223, 245, 484], "selection_opt": [16, 117, 119, 120, 121, 125, 126, 128, 129, 130, 131, 132, 428, 447, 451, 452, 455, 456, 457, 459, 460, 461, 465, 468, 469, 470, 471, 478, 483, 491, 498], "selection_vari": 91, "selectionconfig": 16, "selectionslid": [459, 467, 482, 498, 499], "self": [16, 19, 20, 26, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 83, 84, 86, 87, 90, 91, 104, 122, 123, 124, 200, 201, 217, 218, 221, 225, 227, 228, 229, 233, 239, 240, 242, 246, 248, 250, 251, 252, 257, 261, 262, 264, 265, 266, 267, 270, 274, 377, 378, 388, 389, 391, 394, 400, 401, 404, 405, 424, 457, 482, 485], "semant": [391, 402], "semi": 224, "semiaxi": [224, 232, 235, 531, 532, 533], "semilogi": [19, 20, 26, 217, 218, 221, 225, 227, 228, 229, 233, 239, 240, 242, 246, 248, 250, 251, 252, 257, 262, 264, 265, 266, 267, 270, 274, 446, 464], "semimajor": 476, "semiminor": 476, "semver": 402, "send": 406, "sens": [377, 384, 387, 391, 393, 396, 397, 398, 457], "sensibl": 486, "sensit": [118, 121, 122, 123, 124, 131, 277, 390, 397, 423, 425, 435, 436, 442, 443, 445, 450, 467, 489, 494, 502, 519], "sensitivity_estim": 446, "sensitivity_t": 446, "sensitivityestim": [118, 417, 423, 446], "sent": 382, "sentenc": [382, 397, 403], "sep": [200, 386, 394, 400, 415, 485], "separ": [17, 18, 21, 22, 24, 25, 27, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 67, 71, 72, 74, 75, 76, 78, 79, 80, 83, 91, 191, 200, 203, 300, 366, 377, 378, 383, 384, 385, 386, 389, 390, 391, 392, 393, 396, 397, 398, 399, 424, 428, 434, 436, 437, 441, 442, 454, 457, 459, 461, 467, 470, 476, 484, 485, 486, 503, 511, 519, 520, 531, 532, 536, 537, 550, 573], "septemb": [386, 394, 396, 397, 402], "sequenc": [87, 91, 92, 100, 102, 109, 146, 147, 148, 149, 151, 152, 153, 154, 156, 159, 161, 162, 163, 164, 165, 190, 191, 192, 193, 195, 196, 197, 198, 200, 201, 202, 203, 204, 205, 214, 223, 245, 304, 407], "sequenti": [383, 451, 499], "seri": [87, 91, 124, 286, 291, 334, 386, 391, 392, 428, 474], "serial": [16, 84, 87, 90, 91, 99, 100, 101, 102, 104, 105, 109, 110, 123, 383, 388, 392, 393, 398, 401, 421, 424, 428, 430, 437, 439, 440, 441, 442, 443, 482, 485, 487, 502], "serialis": [20, 102, 105, 109, 110, 217, 218, 221, 223, 225, 227, 228, 229, 231, 233, 237, 239, 240, 242, 244, 245, 246, 248, 250, 251, 252, 254, 257, 262, 264, 265, 266, 267, 269, 270, 271, 272, 273, 274, 389, 391, 393, 396, 398, 399, 400, 420, 422, 424, 428, 433, 436, 438, 439, 441, 442, 443, 487, 498, 514, 527, 569], "serializ": [16, 84, 90, 104, 123], "serialize_as_ani": [16, 84, 90, 104, 123], "serialize_method": [87, 91], "serializiaton": 389, "serilis": [26, 219, 220, 222, 224, 230, 232, 234, 235, 236, 238, 247, 249, 253, 258, 259, 260, 261, 263, 270, 273, 275], "sersic": 400, "sersic2d": 400, "sersicspatialmodel": 400, "serv": [87, 91, 377, 382, 389, 393, 401, 407, 430, 475, 518], "server": [399, 409, 411, 494], "servic": 436, "session": [393, 403, 513], "set": [15, 16, 19, 20, 23, 26, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 82, 84, 87, 90, 91, 95, 101, 102, 103, 104, 105, 106, 108, 109, 110, 113, 119, 121, 122, 123, 124, 125, 126, 128, 129, 132, 134, 143, 149, 151, 162, 165, 168, 169, 172, 178, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 208, 210, 213, 214, 215, 216, 217, 220, 221, 223, 224, 225, 227, 228, 229, 230, 232, 233, 234, 235, 236, 237, 238, 239, 240, 242, 245, 246, 247, 249, 250, 251, 252, 253, 257, 258, 259, 260, 262, 263, 265, 266, 267, 269, 272, 273, 274, 283, 295, 324, 326, 377, 378, 383, 386, 387, 389, 390, 392, 393, 394, 395, 397, 401, 402, 403, 404, 405, 407, 409, 411, 424, 430, 432, 434, 436, 439, 442, 443, 446, 447, 448, 451, 453, 454, 455, 456, 459, 461, 462, 463, 464, 465, 468, 469, 471, 476, 477, 478, 479, 481, 483, 485, 486, 487, 489, 491, 492, 494, 499, 502, 510, 511, 514, 523, 525, 526, 527, 550, 571, 574, 577, 578], "set_by_coord": [192, 193, 195, 201, 204, 205, 482, 526], "set_by_idx": [192, 193, 195, 201, 204, 205, 482, 526], "set_by_pix": [192, 193, 195, 201, 204, 205, 526], "set_label": 473, "set_log": 16, "set_model": [15, 399, 452, 456, 468, 498], "set_models_paramet": 399, "set_parameter_factor": [214, 216], "set_parameters_bound": [223, 245], "set_prior": [245, 405], "set_prop_cycl": 446, "set_slice_arg": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40], "set_subcovari": 208, "set_titl": [447, 448, 451, 455, 457, 461, 471, 475, 479, 480, 481, 484, 523, 533, 537, 540], "set_unit": [449, 478, 514], "set_xlabel": [446, 447, 448, 451, 454, 471, 473, 479, 486, 487], "set_xlim": [449, 451, 452, 460, 471, 516, 540], "set_xscal": [19, 20, 26, 217, 218, 221, 225, 227, 228, 229, 233, 239, 240, 242, 246, 248, 250, 251, 252, 257, 262, 264, 265, 266, 267, 270, 274], "set_xtick": [533, 537], "set_ylabel": [446, 447, 448, 451, 465, 471, 473, 475, 479, 486, 540], "set_ylim": [446, 449, 451, 452, 453, 468, 471, 516, 540], "set_yscal": [19, 20, 26, 217, 218, 221, 225, 227, 228, 229, 233, 239, 240, 242, 246, 248, 250, 251, 252, 257, 262, 264, 265, 266, 267, 270, 274, 465, 475, 516], "set_ytick": [533, 537], "setdefault": 199, "seterr": 377, "setlevel": 461, "setter": [378, 405, 422, 428, 477], "settl": 403, "setup": [13, 379, 380, 381, 384, 389, 390, 394, 397, 405, 434, 438, 494, 574], "setuptool": [429, 574], "sever": [87, 91, 174, 382, 383, 384, 391, 392, 393, 396, 401, 404, 422, 423, 424, 428, 431, 440, 441, 442, 454, 460, 476, 489, 490, 491, 514, 574, 576], "seyfert": 292, "sf": [300, 576], "sgnxlbvq": 473, "sgr": 500, "shade": [193, 201, 205, 479, 572], "shall": 380, "shape": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 100, 101, 102, 105, 109, 110, 111, 115, 121, 122, 126, 127, 132, 139, 140, 141, 147, 149, 152, 190, 191, 192, 193, 195, 196, 198, 200, 201, 203, 204, 205, 208, 235, 284, 304, 317, 333, 388, 391, 395, 426, 441, 449, 451, 453, 455, 456, 461, 464, 465, 469, 473, 474, 476, 477, 478, 480, 481, 482, 483, 485, 489, 490, 500, 512, 526, 527, 528, 533, 537], "shape_ax": [191, 203], "share": [192, 193, 195, 199, 201, 204, 205, 377, 382, 389, 392, 396, 399, 410, 428, 430, 442, 459, 460, 483, 484, 489, 514, 574], "sharepoint": 489, "sharp": [236, 367, 368, 531], "she": [387, 392], "shear": 391, "sheet": [412, 514], "shell": [52, 53, 80, 258, 259, 388, 393, 400, 409, 411, 445, 485, 528, 537, 539, 574], "shell2": [258, 445, 485, 528, 539], "shell2d": 52, "shell2spatialmodel": [255, 259, 485, 537], "shellspatialmodel": [80, 255, 258, 400, 428, 485, 536], "sherpa": [107, 110, 149, 196, 197, 200, 201, 210, 288, 294, 376, 377, 386, 394, 395, 397, 398, 408, 409, 411, 418, 432, 433, 434, 435, 437, 446, 448, 451, 452, 453, 454, 455, 456, 457, 459, 460, 461, 462, 463, 464, 465, 468, 469, 470, 471, 475, 476, 477, 479, 481, 482, 483, 484, 485, 487, 489, 490, 491, 492, 498, 499, 500, 527, 548, 575], "sherpa_opt": 479, "shift": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 273, 413], "shim": 384, "shini": 362, "ship": [384, 385, 394, 417, 435, 454, 467, 471, 485, 514], "shock": [50, 52, 53, 507], "short": [377, 378, 381, 382, 386, 391, 394, 397, 400, 403, 425, 469, 474, 490, 514, 515, 573, 576, 579], "short_observ": [469, 473], "shortcut": [82, 413, 430], "shorten": 428, "shorter": [292, 377, 378, 391, 397, 402, 425, 454, 469, 485, 574], "should": [16, 19, 20, 26, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 83, 84, 87, 90, 91, 102, 104, 105, 108, 109, 110, 112, 114, 116, 122, 123, 124, 125, 129, 132, 135, 136, 137, 138, 144, 150, 151, 154, 160, 162, 165, 177, 182, 183, 188, 190, 191, 192, 193, 195, 197, 199, 200, 201, 203, 204, 205, 213, 217, 218, 219, 220, 221, 222, 223, 224, 225, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 242, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 269, 270, 271, 272, 273, 274, 275, 304, 352, 366, 367, 368, 378, 380, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 397, 398, 400, 402, 403, 404, 406, 407, 409, 411, 412, 413, 418, 420, 442, 453, 459, 462, 463, 464, 470, 471, 477, 479, 480, 481, 482, 483, 484, 485, 487, 489, 491, 510, 512, 514, 519, 521, 526, 574, 575, 577, 578], "shoulder": 276, "shouldn": [83, 377, 380], "show": [11, 82, 87, 91, 126, 127, 128, 153, 172, 237, 374, 377, 378, 380, 389, 391, 392, 396, 397, 405, 407, 417, 418, 422, 430, 435, 436, 437, 442, 443, 446, 447, 448, 449, 451, 452, 453, 454, 455, 456, 457, 459, 460, 463, 464, 465, 467, 468, 469, 470, 471, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 487, 489, 490, 491, 492, 494, 498, 499, 500, 506, 507, 508, 514, 516, 517, 518, 520, 521, 523, 525, 531, 540, 559, 572, 574, 576, 579], "show_dtyp": [87, 91], "show_in_brows": [87, 91, 461], "show_in_notebook": [87, 91], "show_nam": [87, 91], "show_progress_bar": 514, "show_row_index": [87, 91], "show_unit": [87, 91], "showcas": 487, "shower": [432, 489, 519], "shown": [19, 20, 26, 83, 160, 200, 201, 217, 218, 221, 225, 227, 228, 229, 233, 239, 240, 242, 246, 248, 250, 251, 252, 257, 262, 264, 265, 266, 267, 270, 274, 372, 377, 384, 394, 395, 396, 404, 405, 407, 422, 424, 448, 451, 455, 459, 461, 462, 463, 464, 469, 470, 471, 474, 481, 484, 485, 486, 487, 489, 499, 511], "showwarn": 377, "si": [83, 191, 200, 203, 223, 245, 276, 527], "side": [203, 205, 285, 287, 377, 391], "sider": 578, "sidereal_tim": 378, "siejkowski": 437, "sig": [370, 575, 576, 577], "sight": 502, "sigma": [19, 20, 30, 32, 48, 49, 121, 122, 123, 124, 125, 129, 130, 132, 140, 141, 149, 150, 154, 160, 161, 162, 165, 208, 210, 213, 215, 217, 220, 221, 224, 225, 227, 228, 229, 230, 232, 233, 234, 235, 236, 237, 238, 239, 240, 242, 249, 250, 251, 252, 253, 257, 258, 259, 260, 262, 265, 266, 267, 272, 273, 283, 285, 287, 293, 400, 405, 447, 455, 461, 462, 467, 468, 474, 478, 479, 483, 485, 487, 498, 512, 518, 532, 547, 563, 576], "sigma1": 31, "sigma2": 31, "sigma_": [208, 532], "sigma_1": [31, 49, 153, 480], "sigma_10tev": [400, 485], "sigma_1tev": [400, 485], "sigma_2": [31, 49, 153, 480], "sigma_3": [153, 480], "sigma_err": 462, "sigma_gauss": 235, "sigma_laplac": 235, "sigma_m": 532, "sigma_nod": 485, "sigma_to_t": 576, "sigmav": 502, "sign": [213, 215, 285, 287, 380, 403, 424, 439, 512, 576], "signal": [83, 102, 105, 108, 109, 110, 177, 205, 260, 285, 287, 301, 401, 446, 451, 452, 457, 460, 468, 483, 498, 502, 517, 521, 523, 573, 575, 576, 577], "signif_avg": 500, "signific": [77, 117, 121, 122, 123, 124, 131, 132, 134, 143, 144, 283, 285, 287, 291, 367, 368, 375, 382, 383, 384, 385, 392, 393, 397, 398, 401, 403, 424, 425, 433, 436, 437, 442, 443, 445, 446, 451, 452, 458, 459, 460, 461, 462, 468, 471, 473, 474, 476, 478, 479, 491, 494, 498, 500, 512, 514, 572, 573, 574], "significance_lima": 424, "significance_map": [457, 459], "significance_map_off": 457, "significance_mask": 483, "significance_mask_inv": 483, "significancemapestim": 424, "significantli": [428, 447, 463, 489], "signoff": 380, "silent": 439, "silicon": [409, 411], "silvia": 420, "simeq": 53, "similar": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 87, 91, 368, 377, 380, 389, 390, 391, 392, 393, 396, 397, 398, 401, 428, 442, 453, 474, 478, 482, 486, 487, 500, 510, 518, 574], "similarli": [383, 385, 401, 404, 428, 476, 479, 480, 482, 483, 485, 527], "simlat": 286, "simon": [441, 442, 443], "simpifi": 386, "simpl": [50, 52, 140, 220, 224, 232, 235, 247, 258, 259, 263, 269, 273, 276, 377, 378, 389, 390, 391, 392, 393, 396, 401, 404, 405, 418, 428, 432, 436, 437, 442, 446, 448, 449, 451, 452, 453, 454, 456, 459, 471, 473, 474, 478, 479, 482, 483, 486, 492, 498, 499, 500, 504, 514, 572, 573, 574], "simple_norm": 205, "simple_rebin_lc": 392, "simplefilt": 514, "simpler": [180, 385, 390, 391, 399], "simplest": [446, 451, 474], "simplex": [210, 479], "simpli": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 86, 87, 91, 169, 210, 214, 216, 377, 391, 392, 401, 409, 410, 411, 439, 442, 446, 447, 448, 461, 477, 483, 484, 485, 500, 527, 574, 576], "simplic": [460, 463, 479, 485, 487, 490], "simplif": [388, 400, 439], "simplifi": [132, 199, 384, 386, 388, 395, 401, 418, 421, 422, 423, 425, 428, 432, 439, 447, 449, 455, 519, 577], "simu": [467, 470, 487], "simul": [45, 83, 88, 93, 102, 105, 108, 109, 110, 112, 151, 162, 165, 286, 334, 387, 390, 393, 397, 404, 405, 409, 416, 420, 422, 424, 430, 433, 435, 436, 437, 442, 443, 445, 450, 456, 459, 461, 466, 471, 472, 484, 487, 489, 494, 504, 519, 572], "simulate_3d": [397, 437, 445, 466, 467], "simulate_dataset": [418, 422, 423], "simulate_observ": 93, "simulated_d": 453, "simulated_data": 93, "simulated_model": 453, "simultan": [405, 470, 477, 485, 487, 510], "sin": [531, 532, 533, 567], "sinc": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 51, 87, 91, 193, 203, 352, 377, 378, 383, 387, 391, 393, 394, 395, 396, 397, 401, 403, 404, 405, 407, 428, 438, 439, 440, 441, 442, 443, 447, 453, 457, 459, 469, 470, 473, 477, 484, 485, 487, 489, 491, 546, 575, 578], "sine": [260, 388, 445, 528, 570], "sine_model": 567, "sinetemporalmodel": [268, 485, 567], "singl": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 67, 82, 87, 88, 89, 91, 93, 95, 121, 125, 126, 129, 132, 150, 151, 162, 164, 165, 168, 172, 174, 179, 182, 183, 188, 190, 191, 192, 193, 195, 197, 200, 201, 203, 204, 205, 223, 245, 377, 383, 384, 387, 389, 390, 391, 392, 393, 394, 398, 399, 404, 405, 409, 416, 418, 423, 424, 436, 442, 443, 446, 451, 453, 455, 456, 457, 468, 470, 476, 477, 481, 482, 484, 487, 491, 492, 498, 500, 510, 512, 524, 526, 527, 571, 573], "singleobscubemak": 383, "singleobsimagemak": 383, "singleton": 328, "sinha": [389, 392, 417, 418, 419, 420, 421, 422, 423, 424, 425, 427, 428, 430, 431, 436, 437, 438, 439, 440, 441, 442, 443], "sink": 394, "sinu": [260, 485], "sinusoid": [260, 567], "sipocz": [394, 418, 420, 422, 424, 433, 434, 435, 436, 437, 438], "sip\u0151cz": 439, "sit": 380, "site": [341, 407, 446, 448, 451, 452, 453, 454, 455, 456, 457, 459, 460, 461, 462, 463, 464, 465, 467, 468, 469, 470, 471, 473, 475, 476, 477, 479, 481, 482, 483, 484, 485, 487, 489, 490, 491, 492, 498, 499, 500, 538, 546, 562, 574], "situat": [391, 392, 394, 519], "six": [396, 402], "size": [19, 20, 26, 46, 47, 67, 72, 80, 87, 88, 91, 102, 103, 105, 108, 109, 110, 112, 113, 114, 116, 127, 132, 135, 146, 147, 149, 150, 151, 152, 153, 154, 157, 159, 160, 161, 162, 163, 165, 167, 168, 174, 175, 176, 179, 180, 181, 189, 191, 192, 193, 195, 198, 200, 201, 203, 204, 205, 217, 218, 220, 221, 224, 225, 227, 228, 229, 232, 233, 235, 239, 240, 242, 246, 247, 248, 249, 250, 251, 252, 257, 258, 259, 261, 262, 263, 264, 265, 266, 267, 269, 270, 271, 272, 273, 274, 295, 326, 327, 331, 332, 333, 334, 365, 377, 385, 388, 390, 391, 409, 411, 441, 443, 446, 453, 457, 459, 463, 469, 471, 476, 481, 482, 483, 485, 489, 490, 491, 492, 500, 510, 525, 531, 532, 578], "skeleton": 393, "sketch": 393, "skill": [380, 413], "skimag": 437, "skip": [82, 160, 365, 378, 380, 389, 391, 397, 435, 473, 484], "skip_miss": [82, 436], "sklearn": 377, "sky": [6, 13, 41, 57, 68, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 83, 88, 96, 102, 105, 108, 109, 110, 117, 140, 150, 151, 162, 165, 185, 191, 192, 193, 195, 200, 201, 203, 204, 205, 223, 245, 261, 273, 276, 278, 306, 310, 311, 335, 337, 339, 364, 376, 377, 378, 390, 396, 409, 418, 420, 434, 435, 437, 447, 451, 452, 454, 455, 457, 467, 470, 471, 476, 482, 485, 489, 490, 494, 496, 498, 499, 500, 502, 509, 510, 511, 514, 519, 520, 523, 525, 527, 531, 532, 536, 537, 538, 572, 573], "sky_circl": [91, 96, 469, 473, 486, 499], "sky_model": [70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 114, 116, 392, 447, 468, 469, 473, 476, 484, 485, 499, 542], "sky_model_pntpwl": 463, "sky_reg": 475, "sky_reg_rec": 475, "sky_region": 89, "skycood": 388, "skycoord": [56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 83, 85, 87, 88, 91, 94, 96, 102, 105, 109, 110, 122, 124, 126, 128, 150, 151, 157, 162, 165, 175, 176, 178, 180, 182, 183, 185, 186, 188, 189, 191, 192, 193, 195, 198, 200, 201, 203, 204, 205, 206, 219, 220, 223, 224, 232, 235, 245, 247, 249, 258, 259, 261, 263, 269, 271, 273, 302, 303, 336, 337, 353, 373, 378, 388, 391, 401, 404, 446, 448, 451, 453, 454, 457, 461, 462, 463, 464, 465, 467, 468, 469, 470, 471, 473, 475, 476, 477, 480, 481, 482, 483, 484, 485, 486, 489, 490, 491, 492, 499, 500, 514, 518, 523, 525, 527, 535], "skycoord_from_t": 391, "skycoord_to_pixel_scale_angl": 391, "skycoordconfig": 16, "skycub": [383, 396, 434, 435, 436, 437], "skydiffusecub": [388, 400, 419, 424, 425, 437], "skydiffusemap": [388, 419], "skydir": [16, 83, 102, 105, 109, 110, 111, 115, 151, 162, 172, 190, 191, 192, 193, 195, 200, 201, 203, 204, 205, 451, 452, 453, 456, 457, 459, 461, 462, 463, 464, 467, 468, 471, 475, 477, 480, 481, 482, 483, 485, 490, 491, 498, 499, 521, 523, 524, 525, 527, 532, 533, 534, 535], "skydirfunct": 502, "skydisk": 419, "skydiskelong": 388, "skyellips": [418, 419, 420, 421], "skygaussian": 418, "skygaussianelong": 388, "skyimag": [383, 396, 434, 435, 436, 437], "skyimagelist": 434, "skymap": [192, 193, 195, 201, 204, 205, 391, 433, 434, 464], "skymap_band": [464, 569], "skymap_region": 464, "skymask": 435, "skymodel": [67, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 101, 102, 105, 109, 110, 114, 116, 122, 124, 130, 132, 133, 142, 169, 210, 223, 241, 245, 278, 283, 388, 389, 390, 392, 398, 400, 401, 418, 422, 423, 424, 428, 437, 443, 447, 448, 449, 451, 452, 453, 454, 455, 456, 459, 460, 461, 462, 463, 464, 467, 468, 469, 470, 471, 473, 476, 477, 478, 479, 484, 487, 490, 498, 499, 509, 510, 512, 530, 531, 532, 533, 535, 536, 537, 538, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 561, 562, 563, 564, 565, 566, 567, 568, 569, 571], "skypointsourc": 421, "skyregion": [100, 102, 105, 109, 110, 126, 150, 151, 157, 162, 165, 175, 176, 180, 195, 200, 201, 205, 223, 245, 335, 338, 391, 448, 463, 465, 483, 485, 518, 523, 527], "skyspatialmodel": [388, 437], "slack": [379, 380, 384, 400, 406, 412, 417, 418, 574], "slew": 95, "slice": [83, 87, 91, 100, 102, 105, 109, 110, 119, 122, 124, 146, 147, 148, 149, 150, 151, 152, 153, 154, 156, 157, 159, 160, 161, 162, 163, 164, 165, 190, 191, 192, 193, 194, 195, 196, 197, 200, 201, 202, 203, 204, 205, 210, 219, 220, 224, 232, 235, 247, 249, 258, 259, 263, 269, 271, 273, 296, 383, 425, 462, 465, 469, 477, 478, 489, 526], "slice_by_coord": [122, 124, 443], "slice_by_energi": [100, 102, 105, 109, 110, 122, 124, 271, 425, 477], "slice_by_idx": [102, 105, 109, 110, 122, 124, 146, 147, 148, 149, 150, 151, 152, 153, 154, 156, 157, 159, 160, 161, 162, 163, 164, 165, 190, 191, 192, 193, 195, 196, 200, 201, 203, 204, 205, 425, 437, 439, 465, 469, 478, 482, 490], "slice_by_tim": [122, 124], "sliced_ax": 196, "sliced_geom": [190, 191, 200, 203], "sliced_lc": 469, "slide": [386, 455, 476], "slider": 482, "sliderstyl": [459, 467, 482, 498, 499], "slightli": [117, 197], "slope": [27, 419], "slow": [87, 91, 210, 384, 393, 452, 479, 498, 499], "slower": [87, 91, 193, 377, 385, 395], "slowest": 407, "small": [368, 377, 383, 385, 391, 393, 394, 397, 399, 404, 407, 417, 418, 419, 420, 421, 422, 423, 424, 425, 427, 428, 430, 431, 433, 434, 435, 436, 437, 438, 439, 442, 443, 468, 469, 482, 487, 489, 490, 491, 492, 532, 536, 537, 573, 574], "smaller": [27, 151, 162, 165, 180, 191, 192, 193, 195, 201, 204, 205, 370, 380, 418, 437, 463, 469, 474, 479, 482, 487, 532], "smallest": [19, 20, 26, 217, 218, 221, 225, 227, 228, 229, 233, 239, 240, 242, 246, 248, 250, 257, 262, 264, 265, 266, 267, 270, 274, 455], "smooth": [102, 105, 109, 110, 117, 127, 128, 140, 193, 205, 224, 262, 369, 372, 428, 433, 434, 435, 437, 438, 445, 457, 459, 461, 465, 467, 471, 477, 481, 482, 484, 490, 498, 499, 500, 528, 531, 560], "smooth_kernel": [102, 105], "smooth_radiu": [102, 105], "smoothbrokenpowerlawspectralmodel": [217, 256, 400, 423, 424, 485, 555], "sn": [45, 50, 52, 53], "sn_rate": [45, 504], "snippet": [378, 397, 514], "snr": [44, 50, 53, 67, 490, 507, 508], "snr_model": 508, "snrcat": [432, 476], "snrtruelovemcke": [50, 507, 508], "so": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 83, 87, 91, 95, 101, 105, 110, 121, 125, 127, 129, 130, 132, 133, 142, 145, 150, 151, 157, 162, 165, 189, 192, 193, 195, 197, 201, 204, 205, 210, 213, 215, 235, 273, 283, 352, 360, 367, 368, 377, 378, 380, 382, 383, 384, 385, 388, 389, 390, 391, 392, 394, 395, 396, 397, 398, 399, 400, 401, 404, 406, 408, 409, 411, 413, 418, 420, 428, 438, 440, 441, 448, 451, 453, 455, 456, 461, 462, 463, 467, 468, 475, 476, 478, 479, 482, 483, 485, 487, 489, 490, 491, 494, 499, 514, 521, 523, 527, 533, 537, 574, 575, 576, 577], "social": 403, "soft": 292, "softwar": [192, 193, 195, 204, 205, 391, 392, 394, 403, 404, 407, 482, 514], "solar": 52, "sole": [387, 403], "solid": [190, 191, 200, 203, 220, 224, 232, 235, 247, 258, 259, 263, 269, 273, 276, 393, 416, 418, 419, 420, 437, 457, 481, 482, 489, 517, 523, 573], "solid_angl": [190, 191, 200, 203, 482, 527], "solut": [19, 20, 26, 52, 133, 142, 149, 217, 218, 221, 225, 227, 228, 229, 239, 240, 242, 246, 248, 250, 251, 252, 257, 262, 264, 265, 266, 267, 270, 272, 274, 378, 380, 382, 384, 385, 390, 391, 393, 394, 395, 397, 399, 401, 405, 410, 478, 510, 512, 514, 577], "solv": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 380, 385, 387, 388, 389, 390, 430, 514], "some": [13, 16, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 72, 77, 82, 84, 87, 90, 91, 104, 123, 178, 199, 304, 312, 380, 382, 383, 384, 385, 386, 391, 392, 393, 394, 395, 396, 397, 398, 401, 402, 403, 404, 407, 409, 410, 411, 412, 413, 414, 416, 418, 420, 428, 429, 431, 433, 435, 436, 437, 442, 446, 448, 449, 451, 453, 455, 456, 457, 460, 461, 463, 464, 465, 467, 468, 469, 470, 471, 473, 474, 475, 476, 477, 478, 481, 482, 484, 485, 487, 489, 490, 499, 500, 502, 503, 510, 511, 514, 519, 524, 526, 574, 575, 576, 578], "some_class": 377, "some_map": 160, "some_map_convolv": 160, "somehow": [385, 391, 396], "someon": [380, 382, 397], "someth": [87, 91, 377, 378, 379, 380, 382, 385, 391, 394, 395, 397, 407, 409, 411, 454, 476, 527, 574], "sometim": [19, 20, 83, 213, 217, 220, 221, 224, 225, 227, 228, 229, 230, 232, 233, 234, 235, 236, 237, 238, 239, 240, 242, 249, 250, 251, 252, 253, 257, 258, 259, 260, 262, 265, 266, 267, 272, 273, 355, 377, 380, 384, 391, 397, 407, 409, 479, 514, 573, 578], "somewhat": [394, 489], "somewher": [380, 394, 407], "soon": [380, 391, 407], "sort": [82, 83, 87, 91, 101, 140, 340, 345, 346, 377, 394, 419, 500], "sort_kei": [340, 345, 346], "sortedarrai": [87, 91], "sourc": [6, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 377, 378, 380, 382, 385, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 399, 400, 401, 403, 407, 409, 414, 416, 418, 422, 423, 428, 429, 434, 435, 436, 437, 442, 443, 445, 447, 449, 450, 452, 453, 454, 456, 457, 458, 459, 460, 465, 466, 467, 468, 469, 471, 472, 473, 474, 475, 477, 478, 479, 480, 481, 482, 484, 485, 486, 488, 490, 491, 492, 494, 496, 498, 499, 502, 503, 508, 510, 512, 514, 519, 522, 523, 528, 530, 531, 532, 533, 534, 535, 536, 537, 538, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 561, 562, 563, 564, 565, 566, 567, 568, 569, 571, 572, 573, 575, 576], "source1": 485, "source2": 485, "source_1": [388, 393], "source_2": 388, "source_42": 393, "source_fermi_3fgl": 449, "source_fermi_3fhl": 449, "source_gammacat": 449, "source_irf_model": 388, "source_librari": 489, "source_model": 553, "source_nam": [56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 476, 500], "source_name_alia": 56, "source_name_kei": 56, "source_po": [457, 461, 481], "source_population_model": [397, 422], "source_posit": [446, 462, 486], "sourcebackground": 388, "sourcecatalog": [57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 391, 428, 476, 483, 500, 509], "sourcecatalog1lhaaso": [55, 70, 476], "sourcecatalog2fhl": [55, 71, 476, 509], "sourcecatalog2hwc": [55, 72, 476, 509], "sourcecatalog2pc": [55, 476], "sourcecatalog3fgl": [55, 74, 449, 476, 509], "sourcecatalog3fhl": [55, 75, 449, 476, 484, 500, 509], "sourcecatalog3hwc": [55, 76, 476, 509], "sourcecatalog3pc": [55, 476], "sourcecatalog4fgl": [55, 78, 430, 447, 476, 509], "sourcecataloggammacat": [55, 79, 449, 476, 509], "sourcecataloghgp": [55, 80, 81, 476, 509], "sourcecataloglargescalehgp": 67, "sourcecatalogobject": [70, 79, 80, 81, 476, 509], "sourcecatalogobject1lhaaso": 57, "sourcecatalogobject2fhl": 58, "sourcecatalogobject2hwc": 59, "sourcecatalogobject2pc": 60, "sourcecatalogobject3fgl": 61, "sourcecatalogobject3fhl": 62, "sourcecatalogobject3hwc": 63, "sourcecatalogobject3pc": 64, "sourcecatalogobject4fgl": 65, "sourcecatalogobjectfermibas": [71, 74, 75, 78], "sourcecatalogobjectfermipcbas": [73, 77], "sourcecatalogobjectgammacat": 66, "sourcecatalogobjecthgp": [67, 81, 417, 476], "sourcecatalogobjecthgpscompon": 67, "sourcecatalogobjecthwcbas": [72, 76], "sourceevalu": 388, "sources_flux_map": 455, "sourcetempl": 388, "south": [463, 464, 489], "south_z20_50h": [82, 147, 151, 152, 153, 162, 446, 454, 467, 470, 480, 489], "south_z40_50h": 489, "southaz": 489, "southern": 489, "space": [87, 91, 102, 105, 109, 110, 202, 205, 269, 270, 286, 315, 333, 376, 377, 387, 393, 399, 471, 477, 479, 482, 526, 550, 559], "span": 486, "spars": [191, 192, 193, 195, 200, 203, 204, 205, 419, 428, 436, 464, 482], "sparsif": 401, "sparsifi": [192, 193, 195, 204, 205], "spatail": 132, "spatial": [1, 46, 48, 67, 70, 71, 72, 74, 75, 76, 78, 79, 80, 81, 83, 102, 105, 109, 110, 112, 122, 124, 132, 146, 147, 148, 149, 150, 151, 152, 153, 154, 156, 157, 159, 160, 161, 162, 163, 164, 165, 174, 190, 191, 192, 193, 195, 196, 198, 200, 201, 203, 204, 205, 214, 216, 219, 220, 223, 224, 231, 232, 235, 245, 247, 249, 255, 258, 259, 261, 263, 269, 271, 273, 283, 370, 372, 377, 383, 386, 389, 390, 391, 393, 395, 396, 401, 409, 417, 418, 420, 421, 422, 423, 425, 428, 436, 437, 439, 442, 443, 445, 447, 449, 452, 454, 455, 456, 459, 460, 462, 463, 464, 465, 467, 469, 470, 471, 473, 476, 477, 478, 481, 484, 488, 490, 494, 498, 502, 503, 510, 512, 514, 515, 525, 526, 539, 571, 572, 573], "spatial_bin_s": 112, "spatial_bin_size_min": 112, "spatial_model": [70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 114, 116, 132, 224, 231, 261, 271, 283, 392, 422, 447, 455, 459, 461, 462, 463, 464, 467, 468, 469, 473, 476, 477, 484, 485, 490, 499, 530, 531, 532, 533, 534, 535, 536, 537, 538], "spatial_model_point": 463, "spatial_model_registri": 485, "spatial_par": 400, "spatial_typ": 400, "spatial_width": 112, "spatial_width_max": 112, "spatialbackground": 388, "spatialcircleconfig": 16, "spatialconst": 388, "spatialgaussian": 388, "spatialmodel": [70, 71, 72, 74, 75, 76, 78, 79, 80, 219, 220, 224, 231, 232, 235, 247, 249, 258, 259, 261, 269, 271, 273, 388, 400, 422, 437, 441, 476, 485, 499, 502, 509, 528, 571], "spatialtempl": 388, "spatiamodel": 160, "speak": 479, "spec": [80, 110, 377, 391, 433, 459, 464, 476, 489, 499], "spec_model_tru": 471, "special": [87, 91, 235, 377, 387, 389, 391, 392, 400, 403, 404, 417, 456, 463, 476, 477, 478, 484, 485], "specialis": [391, 397], "specif": [15, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 83, 85, 86, 87, 91, 94, 102, 105, 110, 122, 124, 146, 147, 148, 149, 150, 151, 152, 153, 154, 156, 157, 159, 161, 162, 163, 164, 165, 168, 182, 183, 188, 192, 193, 194, 195, 197, 201, 202, 203, 204, 205, 210, 237, 271, 283, 366, 376, 377, 378, 380, 382, 387, 389, 391, 392, 393, 394, 395, 396, 398, 401, 402, 403, 404, 407, 409, 410, 422, 425, 428, 430, 439, 440, 442, 447, 448, 451, 453, 454, 457, 459, 460, 465, 467, 470, 471, 477, 479, 480, 482, 483, 486, 487, 492, 494, 500, 510, 511, 512, 514, 516, 517, 518, 520, 525, 526, 527, 578], "specifi": [16, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 82, 83, 84, 87, 88, 90, 91, 92, 96, 101, 102, 104, 105, 109, 110, 117, 119, 122, 123, 124, 125, 127, 129, 130, 146, 147, 148, 149, 150, 151, 152, 153, 154, 156, 157, 159, 161, 162, 163, 164, 165, 167, 178, 190, 191, 192, 193, 195, 196, 197, 199, 200, 201, 203, 204, 205, 223, 237, 245, 283, 304, 306, 310, 315, 364, 387, 394, 399, 402, 410, 421, 424, 428, 447, 453, 456, 457, 459, 462, 463, 465, 467, 477, 478, 479, 480, 481, 482, 484, 485, 489, 499, 510, 512, 525], "spectra": [26, 109, 110, 125, 130, 145, 210, 256, 276, 283, 383, 386, 388, 390, 392, 396, 400, 416, 420, 433, 437, 447, 448, 453, 454, 460, 464, 468, 470, 471, 477, 478, 479, 481, 485, 487, 502, 510, 512, 514, 573], "spectral": [1, 19, 20, 26, 52, 53, 66, 67, 69, 70, 71, 72, 74, 75, 76, 78, 79, 80, 101, 102, 105, 109, 110, 117, 121, 122, 124, 125, 126, 129, 131, 132, 139, 160, 162, 165, 169, 214, 216, 217, 218, 221, 223, 225, 227, 228, 229, 231, 233, 237, 239, 240, 242, 243, 245, 246, 248, 250, 251, 252, 256, 257, 261, 262, 264, 265, 266, 267, 270, 271, 272, 274, 276, 277, 292, 331, 383, 386, 388, 389, 390, 391, 392, 393, 395, 396, 398, 399, 401, 409, 417, 419, 420, 421, 422, 423, 424, 425, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 442, 443, 445, 450, 454, 455, 456, 459, 462, 463, 464, 465, 467, 468, 469, 470, 471, 473, 476, 477, 478, 479, 481, 483, 484, 487, 488, 489, 490, 498, 499, 502, 503, 509, 510, 512, 513, 514, 515, 521, 522, 523, 530, 531, 532, 533, 534, 535, 536, 537, 538, 556, 557, 558, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 571, 572, 573, 575], "spectral_analysi": [445, 450, 451], "spectral_analysis_hli": [445, 450, 452], "spectral_analysis_rad_max": [445, 450, 453], "spectral_cub": 429, "spectral_index": [19, 20, 26, 52, 217, 218, 221, 225, 227, 228, 229, 233, 239, 240, 242, 246, 248, 250, 251, 252, 257, 262, 264, 265, 266, 267, 270, 274], "spectral_index_error": [19, 20, 26, 217, 218, 221, 225, 227, 228, 229, 233, 239, 240, 242, 246, 248, 250, 251, 252, 257, 262, 264, 265, 266, 267, 270, 274, 442], "spectral_irf_model": 388, "spectral_model": [66, 67, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 101, 109, 110, 114, 116, 117, 121, 126, 130, 131, 132, 139, 160, 162, 165, 169, 210, 223, 231, 243, 245, 261, 271, 283, 392, 395, 399, 400, 401, 405, 425, 446, 447, 448, 449, 451, 453, 454, 455, 459, 460, 461, 462, 463, 464, 465, 467, 468, 469, 470, 471, 473, 476, 477, 478, 479, 484, 485, 487, 490, 499, 500, 512, 521, 530, 531, 532, 533, 535, 536, 537, 538, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 561, 562, 563, 564, 565, 566, 567, 568, 569], "spectral_model1": 470, "spectral_model2": 470, "spectral_model_pwl": 463, "spectral_model_registri": 485, "spectral_par": 400, "spectral_point": 393, "spectral_typ": 400, "spectralbackground": 388, "spectralbackgroundmodel": 389, "spectralcompoundmodel": 388, "spectralconst": 388, "spectralevalu": 388, "spectralexponentialcutoffpowerlaw3fgl": 396, "spectralgaussian": [388, 420], "spectralmodel": [19, 20, 71, 74, 75, 78, 79, 80, 101, 117, 121, 122, 124, 126, 131, 139, 160, 162, 165, 169, 217, 218, 221, 223, 225, 227, 228, 229, 231, 233, 239, 240, 242, 245, 246, 248, 250, 251, 252, 257, 261, 262, 265, 266, 267, 270, 271, 274, 276, 388, 389, 392, 395, 401, 425, 428, 435, 442, 476, 485, 499, 500, 509, 528, 571], "spectralregion": 391, "spectraltempl": 388, "spectroscopi": [445, 469, 472, 494, 523], "spectrum": [19, 20, 26, 72, 76, 98, 100, 101, 102, 105, 106, 109, 110, 122, 124, 129, 131, 136, 162, 165, 170, 174, 178, 179, 192, 193, 195, 204, 205, 217, 218, 221, 225, 227, 228, 229, 233, 239, 240, 242, 246, 248, 250, 251, 252, 257, 262, 264, 265, 266, 267, 270, 274, 276, 277, 286, 292, 374, 383, 388, 389, 392, 393, 396, 397, 398, 409, 419, 420, 421, 422, 424, 428, 430, 433, 434, 435, 436, 437, 439, 441, 445, 448, 449, 450, 452, 459, 460, 463, 464, 465, 470, 475, 476, 477, 483, 485, 489, 490, 494, 498, 500, 502, 510, 514, 519, 527, 541, 544, 545, 547, 548, 552, 553, 555, 556, 557, 558, 574], "spectrum_analysi": 451, "spectrum_dataset": [145, 389, 471, 477], "spectrum_dataset_1": 389, "spectrum_dataset_2": 389, "spectrum_dataset_empti": [471, 481], "spectrum_dataset_mak": [471, 481], "spectrum_dataset_on_off": 471, "spectrum_fitting_with_sherpa": 397, "spectrum_mak": 446, "spectrum_simul": [397, 445, 450, 454], "spectrumanalysisiact": [393, 421, 435], "spectrumdataset": [98, 99, 100, 102, 105, 110, 129, 131, 145, 173, 174, 178, 179, 231, 398, 419, 420, 421, 422, 423, 424, 425, 428, 431, 446, 448, 451, 453, 454, 461, 469, 470, 471, 473, 479, 481, 487, 523, 575], "spectrumdatasetmak": [170, 422, 428, 446, 448, 451, 453, 454, 461, 469, 470, 471, 473, 481, 523], "spectrumdatasetonoff": [98, 105, 106, 107, 109, 130, 131, 145, 173, 174, 210, 283, 374, 392, 419, 420, 421, 423, 424, 440, 441, 442, 446, 447, 448, 451, 452, 454, 460, 461, 468, 471, 473, 477, 478, 479, 481, 487, 510, 512, 575], "spectrumdatasetonoffstack": 421, "spectrumdatasetsonoff": 389, "spectrumenergygroup": 436, "spectrumevalu": 424, "spectrumextract": [392, 419, 422, 435], "spectrumfit": [419, 435, 436, 437], "spectrumobserv": [389, 419, 435], "spectrumobservationlist": [419, 434], "spectrumobservationstack": 434, "spectrumonoffdataset": 392, "spectrumresult": 419, "spectrumsimul": [420, 434, 437], "spectrumstack": 436, "spectrumstat": 420, "specutil": 391, "speed": [132, 304, 380, 410, 420, 422, 430, 436, 437, 479], "spell": [382, 514], "spend": [390, 397], "spent": [384, 481], "sphere": [47, 332, 416, 418, 526, 531, 532, 535], "spherepointpick": 332, "spheric": [47, 377, 418, 526, 572], "sphericalcircleskyregion": [396, 471, 500], "sphinx": [380, 384, 397, 407, 419, 423, 430, 436, 437, 439, 443, 446, 447, 448, 449, 451, 452, 453, 454, 455, 456, 457, 459, 460, 461, 462, 463, 464, 465, 467, 468, 469, 470, 471, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 489, 490, 491, 492, 494, 496, 498, 499, 500, 528, 530, 531, 532, 533, 534, 535, 536, 537, 538, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 561, 562, 563, 564, 565, 566, 567, 568, 569], "sphinx_gallery_conf": 407, "sphinx_gallery_thumbnail_numb": [378, 447, 451, 453, 455, 457, 462, 465, 480, 540], "sphinxext": 378, "spill": 481, "spin": [50, 51, 54, 420, 506], "spir": [418, 437], "spiral": [33, 34, 38, 45, 432], "spiralarm": [33, 38, 45, 436, 504], "spiralarm_index": [33, 34, 38], "spirit": 403, "split": [19, 20, 87, 91, 92, 114, 116, 122, 124, 192, 193, 195, 201, 204, 205, 213, 217, 220, 221, 224, 225, 227, 228, 229, 230, 232, 233, 234, 235, 236, 237, 238, 239, 240, 242, 249, 250, 251, 252, 253, 257, 258, 259, 260, 262, 265, 266, 267, 272, 273, 383, 385, 387, 389, 391, 392, 396, 398, 400, 409, 425, 443, 469, 485, 503, 579], "split_by_axi": [192, 193, 195, 201, 204, 205], "split_template_model": [114, 116], "sporad": 404, "spot": 377, "spread": [82, 88, 153, 162, 165, 377, 399, 425, 446, 455, 480, 519, 573], "spring": [387, 438], "sprint": [385, 386, 390, 393, 394, 395, 396, 398], "spuriou": 140, "sqrt": [19, 20, 30, 31, 32, 67, 101, 102, 105, 109, 110, 117, 122, 124, 127, 132, 192, 193, 195, 197, 201, 204, 205, 208, 213, 217, 220, 221, 224, 225, 227, 228, 229, 230, 232, 233, 234, 235, 236, 237, 238, 239, 240, 242, 249, 250, 251, 252, 253, 257, 258, 259, 260, 262, 265, 266, 267, 272, 273, 284, 293, 316, 317, 318, 389, 448, 451, 455, 457, 459, 465, 467, 471, 474, 476, 479, 481, 482, 484, 490, 498, 499, 500, 512, 532, 533, 536, 537, 547, 576], "sqrt_space": [396, 422], "sqrt_t": [117, 121, 122, 124, 132, 140, 141, 145, 285, 287, 370, 401, 413, 425, 448, 451, 452, 455, 457, 459, 461, 471, 476, 477, 478, 483, 491, 498, 500, 512, 574, 576], "sqrt_ts_min": [145, 451], "sqrt_ts_threshold_ul": [71, 74, 75, 78, 121, 122, 123, 124, 126, 132, 455, 465, 468, 469, 476, 477, 478, 498, 500], "squar": [17, 18, 21, 22, 24, 25, 27, 46, 102, 105, 122, 123, 149, 150, 151, 157, 162, 165, 168, 189, 203, 205, 271, 290, 392, 395, 425, 483, 487, 502, 512, 526, 574, 575, 576, 577], "squash": [151, 190, 191, 194, 196, 197, 200, 202, 203, 442, 446, 457, 477, 482], "squeez": [446, 480], "sr": [146, 147, 148, 159, 190, 191, 200, 203, 220, 273, 276, 446, 454, 456, 459, 461, 467, 470, 476, 477, 480, 482, 485, 489, 490, 519, 530, 538], "sr7vx7mb": 473, "src": [390, 447, 462, 510], "src_above_bkg": 462, "src_event": [463, 464], "src_posit": [463, 464], "srcmap": [191, 192, 193, 195, 204, 205, 482], "ssc": [58, 60, 61, 62, 64, 65, 246, 397, 553], "ssc_model": 246, "ssm_tkhj": 473, "st": [53, 479, 490], "stabil": [19, 20, 213, 217, 220, 221, 224, 225, 227, 228, 229, 230, 232, 233, 234, 235, 236, 237, 238, 239, 240, 242, 249, 250, 251, 252, 253, 257, 258, 259, 260, 262, 265, 266, 267, 272, 273, 402, 467], "stabl": [11, 87, 91, 200, 210, 304, 384, 385, 386, 393, 394, 397, 402, 406, 407, 408, 410, 422, 423, 424, 430, 435, 437, 439, 479, 511], "stack": [16, 83, 86, 92, 100, 101, 102, 104, 105, 109, 110, 121, 122, 124, 133, 142, 150, 151, 157, 162, 165, 168, 192, 193, 194, 195, 200, 201, 204, 205, 208, 214, 216, 271, 347, 377, 389, 392, 393, 399, 404, 418, 421, 422, 425, 428, 433, 434, 439, 440, 442, 447, 448, 452, 456, 460, 461, 468, 471, 477, 479, 481, 486, 487, 498, 499, 511, 512, 521, 524], "stack_dataset": [168, 471, 481], "stack_reduc": [100, 145, 210, 421, 448, 451, 453, 459, 460, 461, 471, 477, 479, 512], "stacked_dataset": [461, 462], "stacked_fit": 451, "stacked_on_off": 457, "stackedobscubemak": 383, "stackedobsimagemak": 383, "stackoverflow": 344, "stage": [380, 393, 457, 459, 470, 477, 510, 573], "stai": 389, "stand": 382, "standard": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 42, 86, 87, 91, 96, 193, 205, 210, 277, 286, 303, 359, 360, 377, 378, 380, 382, 386, 388, 389, 390, 393, 395, 401, 403, 404, 413, 420, 421, 437, 443, 446, 447, 452, 454, 457, 460, 462, 464, 467, 469, 470, 473, 475, 479, 482, 485, 486, 487, 489, 492, 494, 498, 510, 513, 518, 526, 572, 573, 574], "standard_broadcast": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40], "standard_scal": [96, 302, 486], "standardis": [349, 350, 362, 436], "standardise_unit": [349, 363], "standpoint": 377, "stapel": 443, "star": [36, 40, 225], "starmap": [320, 324, 325], "start": [16, 53, 83, 86, 88, 89, 91, 92, 94, 100, 129, 140, 202, 222, 223, 230, 234, 236, 237, 238, 245, 253, 260, 272, 275, 377, 378, 380, 382, 384, 385, 386, 387, 390, 391, 393, 394, 402, 403, 405, 406, 407, 411, 412, 413, 414, 416, 421, 430, 433, 434, 435, 436, 437, 442, 445, 446, 447, 448, 449, 451, 452, 453, 455, 456, 457, 459, 461, 462, 463, 464, 465, 468, 469, 470, 471, 473, 474, 475, 476, 478, 482, 485, 489, 490, 491, 494, 498, 500, 501, 514, 518, 572], "start_po": [126, 337, 465], "startswith": 377, "stat": [6, 100, 101, 105, 110, 122, 124, 125, 126, 129, 130, 132, 210, 211, 213, 215, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 370, 377, 389, 397, 405, 407, 413, 420, 422, 423, 424, 425, 428, 434, 437, 438, 439, 443, 448, 449, 451, 452, 453, 455, 457, 459, 460, 461, 462, 465, 469, 471, 473, 474, 478, 479, 487, 490, 498, 499, 512, 574, 575, 576], "stat_arrai": [99, 101, 102, 105, 109, 110, 405], "stat_contour": 210, "stat_kwarg": 101, "stat_max": [285, 287], "stat_nul": [122, 124, 125, 126, 129, 130, 132, 285, 287, 443, 455, 465, 469, 478, 512], "stat_per_bin": 389, "stat_profil": [210, 447, 479, 487, 514], "stat_scan": [101, 122, 124, 125, 126, 129, 130, 132, 133, 142, 210, 284, 447, 451, 469, 478, 479, 487, 512], "stat_sum": [99, 100, 101, 102, 105, 109, 110, 405, 441, 442, 459, 470, 477, 484, 514], "stat_surfac": [210, 425, 514], "stat_typ": [101, 102, 105, 109, 110, 423, 451, 459, 470, 477, 484], "state": [16, 45, 47, 202, 210, 377, 383, 387, 389, 393, 397, 399, 401, 447, 452, 498, 519, 540], "stateless": 404, "statement": [377, 380, 384, 441, 443, 503], "static": [17, 21, 22, 24, 25, 27, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 103, 106, 107, 108, 117, 121, 122, 124, 125, 126, 129, 130, 132, 153, 161, 172, 178, 179, 191, 192, 193, 195, 201, 202, 204, 205, 217, 219, 220, 221, 222, 224, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 242, 243, 250, 251, 252, 253, 258, 259, 260, 262, 265, 266, 267, 272, 274, 275, 374, 385, 388, 407, 419, 436], "staticmethod": [388, 400, 405, 485, 487], "statist": [6, 19, 20, 26, 79, 99, 100, 101, 102, 105, 109, 110, 121, 122, 124, 125, 126, 129, 130, 132, 141, 145, 172, 210, 212, 217, 218, 221, 225, 227, 228, 229, 233, 239, 240, 242, 246, 248, 250, 257, 262, 264, 265, 266, 267, 270, 274, 283, 284, 285, 287, 288, 289, 294, 301, 389, 392, 395, 396, 397, 399, 405, 419, 423, 424, 425, 428, 430, 442, 443, 446, 447, 452, 454, 455, 456, 457, 459, 461, 465, 467, 468, 470, 471, 474, 477, 479, 481, 487, 498, 499, 510, 512, 514, 521, 524, 572, 573], "statu": [19, 20, 26, 122, 124, 209, 211, 212, 214, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 242, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 269, 270, 271, 272, 273, 274, 275, 377, 380, 381, 383, 384, 385, 386, 388, 389, 390, 391, 392, 393, 394, 395, 397, 398, 399, 400, 401, 403, 404, 405, 438, 443, 484, 485], "std": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 286, 303, 454, 474, 490], "stddev": 68, "stderr": 377, "stdout": [312, 377], "steadi": 447, "steep": 454, "stefan": [432, 443], "step": [19, 20, 26, 121, 125, 129, 130, 132, 210, 211, 217, 218, 219, 220, 221, 222, 224, 225, 227, 228, 229, 230, 232, 233, 234, 235, 236, 237, 238, 239, 240, 242, 246, 247, 248, 249, 250, 251, 252, 253, 257, 258, 259, 260, 262, 263, 264, 265, 266, 267, 269, 270, 272, 273, 274, 275, 377, 380, 383, 384, 387, 388, 389, 391, 392, 393, 395, 398, 402, 405, 406, 407, 413, 430, 437, 438, 442, 446, 451, 453, 456, 459, 461, 462, 463, 464, 469, 470, 477, 478, 479, 481, 485, 487, 498, 499, 500, 514, 522, 527], "stepprior": 405, "stepsiz": 167, "steradian": 200, "stewart": [132, 296, 455, 573], "stewart2009": [132, 573, 576], "stick": [380, 400, 418, 437, 479, 573], "still": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 384, 385, 387, 390, 391, 394, 396, 397, 398, 401, 402, 404, 406, 407, 435, 436, 437, 485, 487, 500, 512, 536, 537, 574], "stipul": 403, "stone": [377, 397], "stop": [16, 52, 83, 86, 88, 89, 91, 92, 100, 129, 132, 202, 222, 223, 230, 234, 236, 237, 238, 245, 253, 260, 272, 275, 387, 413, 442, 452, 456, 457, 459, 469, 471, 473, 479, 490, 498], "storag": [82, 514], "store": [11, 15, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 56, 69, 82, 83, 85, 86, 87, 91, 122, 123, 124, 127, 129, 160, 173, 174, 192, 193, 195, 201, 204, 205, 210, 211, 213, 215, 223, 245, 360, 377, 378, 380, 383, 385, 386, 387, 389, 390, 393, 395, 399, 401, 403, 404, 407, 425, 428, 429, 448, 453, 454, 463, 464, 471, 473, 474, 477, 478, 479, 480, 481, 482, 483, 486, 489, 490, 491, 492, 500, 510, 511, 514, 519, 520, 521, 526, 527, 550, 571, 572, 574, 578], "store_per_ob": 393, "store_trac": [210, 479], "str": [15, 16, 19, 20, 26, 50, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 77, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 93, 94, 99, 100, 101, 102, 104, 105, 106, 107, 108, 109, 110, 112, 119, 121, 122, 123, 124, 125, 127, 129, 130, 132, 133, 135, 136, 137, 138, 142, 144, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 159, 161, 162, 163, 164, 165, 166, 169, 172, 173, 178, 179, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 211, 213, 214, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 242, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 269, 270, 271, 272, 273, 274, 275, 278, 304, 316, 325, 340, 341, 342, 346, 359, 360, 362, 366, 370, 371, 373, 391, 404, 451, 453, 473, 481, 485], "str3": [87, 91], "straight": [378, 409, 514], "straightforward": [407, 577], "strang": 377, "strategi": [377, 384, 391, 442, 479, 577], "stream": 377, "streil": [405, 441, 442, 443], "strength": [51, 54, 405, 550], "stretch": [192, 193, 195, 201, 204, 205, 367, 368, 372, 455, 459, 465, 467, 481, 482, 484, 490, 498, 499, 500], "strict": [16, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 84, 90, 102, 104, 105, 123, 150, 151, 157, 162, 165, 168, 197, 203, 205, 271], "strict_bound": 197, "strictli": [16, 84, 90, 104, 123, 197], "strike": 510, "string": [15, 16, 26, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 56, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 87, 90, 91, 93, 104, 122, 123, 124, 125, 126, 129, 132, 153, 159, 161, 163, 168, 191, 192, 193, 195, 197, 198, 200, 201, 203, 204, 205, 213, 215, 223, 245, 304, 322, 366, 377, 390, 391, 394, 396, 403, 404, 416, 420, 428, 430, 452, 476, 483, 485, 498, 526, 527], "strip": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40], "strip_units_from_tre": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40], "strong": [52, 390, 397, 451], "stronger": 487, "strongli": [292, 392, 394, 403, 428, 456, 479, 487], "structur": [87, 91, 203, 300, 381, 382, 383, 386, 388, 390, 393, 397, 400, 403, 404, 415, 421, 422, 424, 428, 431, 443, 445, 465, 477, 478, 481, 482, 483, 485, 494, 501, 502, 511, 515, 526, 527, 574], "stuck": 574, "student": 380, "studi": [46, 276, 300, 390, 393, 401, 410, 437, 448, 449, 460, 461, 462, 465, 467, 469, 470, 473, 479, 482, 485, 489, 504, 514, 523, 575], "stuff": [378, 407, 514], "stuff1": 377, "stuff2": 377, "style": [87, 91, 101, 192, 193, 195, 201, 204, 205, 374, 380, 386, 403, 432, 434, 459, 467, 480, 482, 498, 499, 514, 527], "sub": [11, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 102, 105, 109, 110, 114, 116, 146, 147, 148, 149, 150, 151, 152, 153, 154, 156, 157, 159, 161, 162, 163, 164, 165, 192, 193, 194, 195, 197, 201, 202, 204, 205, 208, 377, 380, 384, 386, 387, 391, 396, 397, 398, 399, 404, 407, 416, 418, 422, 424, 425, 433, 435, 436, 461, 463, 478, 481, 483, 485, 491, 492, 510, 513, 514, 522, 572, 574, 578], "subclass": [16, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 84, 87, 90, 91, 104, 123, 304, 391, 434, 437, 485, 487], "subcompon": [67, 80], "subfold": [385, 428], "submit": [382, 403], "submodul": [385, 418, 419, 424, 482, 500, 512], "subok": 304, "subpackag": [398, 404, 421, 428, 432], "subplot": [66, 67, 192, 193, 195, 201, 204, 205, 446, 448, 449, 451, 452, 453, 454, 455, 457, 459, 460, 461, 465, 468, 470, 471, 473, 475, 478, 479, 480, 482, 483, 484, 486, 487, 514, 516, 523, 533, 537, 540], "subplot_kw": [455, 457, 461, 471, 483, 523], "subplots_adjust": [469, 475], "subsect": [397, 482], "subsequ": [291, 386], "subset": [82, 83, 87, 91, 125, 129, 132, 246, 404, 432, 433, 461, 471, 484, 489, 491, 513, 572], "subspac": 391, "substanti": [87, 91], "substitut": 575, "substr": [223, 245], "subtract": 453, "succed": 406, "succeed": 122, "success": [16, 84, 90, 101, 104, 122, 123, 124, 125, 126, 129, 130, 132, 209, 210, 211, 212, 405, 428, 448, 449, 451, 452, 453, 455, 459, 460, 461, 465, 468, 469, 471, 473, 478, 479, 484, 490, 498, 499, 538], "successfulli": [101, 448, 449, 451, 452, 453, 459, 460, 461, 470, 471, 473, 478, 479, 490, 498, 499], "sudo": 410, "suffer": [394, 471], "suffic": 470, "suffici": [380, 383, 390, 403, 442, 514], "suffix": [101, 122, 378, 388, 400, 406, 485, 526, 528], "suggest": [380, 382, 384, 387, 391, 397, 399, 401, 405, 455, 463, 464, 514, 574], "suit": [193, 377, 527], "suitabl": 193, "sum": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 86, 102, 105, 109, 110, 124, 125, 126, 128, 129, 130, 132, 133, 134, 142, 143, 146, 147, 148, 149, 150, 152, 153, 154, 156, 159, 160, 161, 162, 163, 164, 165, 192, 193, 195, 201, 204, 205, 222, 230, 234, 236, 237, 238, 253, 260, 272, 275, 276, 285, 287, 289, 373, 377, 387, 388, 390, 399, 401, 405, 419, 443, 455, 459, 463, 471, 475, 477, 487, 490, 498, 499, 500, 510, 520, 573, 575], "sum_": 510, "sum_band": [192, 193], "sum_i": 127, "sum_j": 510, "sum_k": 510, "sum_of_implicit_term": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40], "sum_over_ax": [192, 193, 195, 201, 204, 205, 365, 437, 457, 459, 465, 471, 477, 481, 483, 484, 490, 499], "sum_over_energy_group": [121, 125, 132, 455, 461, 465], "summar": [386, 502], "summari": [15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 50, 51, 52, 53, 54, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 117, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 159, 160, 161, 162, 163, 164, 165, 167, 168, 169, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 269, 270, 271, 272, 273, 274, 275, 285, 287, 312, 316, 326, 351, 364, 378, 380, 397, 415, 448, 452, 469, 470, 477, 489, 498, 514], "summaris": [377, 382, 384, 397], "summat": [285, 287, 383], "summer": 385, "sun": 41, "sunpi": [394, 397, 398], "super": [191, 193, 265, 266, 267, 445, 453, 463, 492, 528, 560, 562], "superexpcutoffpowerlaw3fglspectralmodel": [256, 400, 485, 556], "superexpcutoffpowerlaw4fgldr3spectralmodel": [77, 256, 485, 557], "superexpcutoffpowerlaw4fglspectralmodel": [256, 400, 485, 558], "superflu": [387, 471], "supernova": [28, 52, 448, 462, 485, 504, 505], "superpixel": 191, "supersed": [191, 192, 193, 203, 204, 205], "supervisor": 393, "suppli": [19, 20, 26, 87, 91, 217, 218, 221, 225, 227, 228, 229, 233, 239, 240, 242, 246, 248, 250, 251, 252, 257, 262, 264, 265, 266, 267, 270, 274, 447, 469, 470], "support": [83, 85, 86, 87, 88, 89, 91, 92, 95, 100, 102, 105, 109, 110, 113, 124, 144, 155, 160, 191, 192, 193, 194, 195, 197, 202, 203, 204, 205, 210, 223, 245, 376, 381, 382, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 399, 400, 401, 404, 410, 414, 417, 418, 420, 421, 422, 423, 424, 425, 428, 430, 433, 435, 436, 437, 438, 439, 440, 441, 442, 443, 446, 452, 454, 456, 459, 461, 467, 470, 475, 476, 477, 482, 487, 489, 490, 491, 492, 498, 513, 519, 526, 527, 569, 571, 572, 574], "suppos": [237, 272, 382, 389, 573, 575], "suppress": [149, 150, 154, 514], "sure": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 377, 380, 382, 393, 406, 451, 468, 482, 514, 574], "surfac": [28, 30, 35, 36, 39, 40, 45, 210, 261, 276, 330, 396, 425, 479, 485, 504], "surface_brightness_err": 476, "surprisingli": 391, "surround": [52, 322, 377], "survei": [63, 67, 125, 225, 384, 387, 397, 413, 445, 489, 494, 495, 504, 509, 514, 573], "survey_map": [445, 495, 496], "suspect": 576, "suss": [386, 403], "svg": 377, "swap": 191, "swept": 52, "swh": 403, "swhid": 403, "switch": [103, 108, 283, 377, 384, 387, 430, 434], "switcher": 406, "sy": [377, 412], "syllabl": 514, "symbol": 483, "symmetr": [102, 105, 109, 110, 121, 130, 132, 180, 189, 193, 232, 377, 388, 418, 430, 433, 449, 470, 481, 487, 489, 502, 512, 520, 531, 532, 576], "symmetri": [193, 418], "sync": 437, "sync_constraint": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40], "synchronis": 403, "synchrotron": [246, 424, 550], "syntact": [87, 91], "syntax": [16, 87, 91, 378, 393, 396, 422, 439, 574], "synthesi": [504, 505], "synthet": 416, "system": [11, 83, 87, 91, 147, 155, 156, 191, 192, 193, 195, 198, 200, 203, 204, 205, 223, 245, 377, 383, 388, 390, 394, 397, 398, 402, 403, 405, 410, 418, 436, 442, 446, 448, 451, 452, 453, 454, 455, 456, 457, 459, 460, 461, 462, 463, 464, 465, 468, 469, 470, 471, 475, 476, 477, 479, 480, 481, 482, 483, 484, 485, 487, 489, 490, 491, 492, 498, 499, 500, 525, 526, 572, 574, 578], "systemat": [388, 401, 403, 404, 425, 451, 468, 481, 512, 573, 575], "t": [16, 26, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 50, 51, 52, 53, 67, 69, 83, 84, 86, 87, 88, 90, 91, 104, 117, 118, 119, 121, 122, 123, 124, 125, 126, 129, 130, 132, 133, 134, 141, 142, 143, 144, 149, 189, 202, 223, 237, 245, 283, 285, 286, 287, 302, 349, 353, 376, 377, 378, 380, 382, 384, 385, 387, 389, 391, 393, 394, 395, 396, 397, 400, 401, 402, 404, 407, 408, 409, 411, 413, 425, 429, 432, 433, 434, 437, 442, 446, 447, 448, 451, 456, 459, 461, 462, 465, 467, 468, 469, 471, 473, 474, 475, 476, 478, 479, 481, 482, 483, 485, 486, 487, 489, 490, 502, 506, 507, 508, 510, 512, 514, 523, 561, 562, 563, 564, 565, 566, 567, 572, 574, 577, 578], "t0": [230, 253, 463, 469, 470, 473, 562, 566], "t1": [87, 91], "t2": [87, 91], "t_": [52, 53, 291, 519, 562, 563, 564, 565, 566, 567, 575], "t_0": 566, "t_b": 575, "t_decai": [236, 564], "t_delta": [103, 108, 202, 222, 230, 234, 236, 237, 238, 253, 260, 272, 275], "t_i": 291, "t_j": 510, "t_live": [83, 88], "t_max": [222, 230, 234, 236, 237, 238, 253, 260, 272, 275, 390, 401, 473], "t_min": [222, 230, 234, 236, 237, 238, 253, 260, 272, 275, 390, 401, 473], "t_observ": [83, 88], "t_r": 237, "t_ref": [230, 234, 236, 237, 238, 253, 260, 272, 441, 442, 463, 464, 470, 485, 562, 563, 564, 565, 566, 567, 568, 569], "t_rise": [236, 564], "t_start": [86, 511], "t_stop": [52, 86, 511], "ta": 286, "ta2": 286, "ta3": 286, "tab": [149, 382, 459, 465, 468, 478, 487, 523], "tabl": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 477, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579], "table_arrai": [87, 91], "table_associ": 67, "table_bkg_src": 462, "table_class": [87, 91], "table_compon": [67, 476], "table_filenam": 26, "table_format": 124, "table_from_row_data": 442, "table_hdu": 86, "table_identif": 67, "table_large_scale_compon": [67, 476], "table_model": [274, 400], "table_oth": 347, "tableau": 514, "tableclass": [87, 91], "tablegroup": [87, 91], "tableid": [87, 91], "tableiloc": [87, 91], "tableindic": [87, 91], "tableloc": [87, 91], "tablelocindic": [87, 91], "tablemodel": [388, 438], "tablepsf": [398, 416, 418], "tablepsfcheck": 434, "tabul": 502, "tabular": [485, 559], "tackl": 386, "tag": [19, 20, 26, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 84, 87, 90, 91, 99, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 117, 119, 120, 121, 122, 123, 125, 126, 128, 129, 130, 131, 132, 146, 147, 148, 149, 150, 151, 152, 153, 154, 156, 157, 159, 161, 162, 163, 164, 165, 167, 168, 169, 171, 172, 173, 174, 177, 178, 179, 192, 193, 195, 201, 204, 205, 217, 218, 219, 220, 221, 222, 223, 224, 225, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 243, 245, 246, 247, 248, 249, 250, 251, 252, 253, 257, 258, 259, 260, 261, 262, 265, 266, 267, 269, 270, 271, 272, 273, 274, 402, 405, 406, 425, 439, 480, 485, 487, 533, 537], "tail": [489, 574], "take": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 87, 91, 102, 105, 109, 110, 121, 147, 167, 169, 201, 203, 210, 223, 245, 261, 352, 375, 377, 382, 383, 386, 387, 388, 389, 390, 391, 392, 393, 396, 397, 398, 401, 407, 423, 424, 425, 428, 430, 438, 439, 441, 442, 443, 446, 448, 451, 453, 454, 463, 464, 465, 470, 471, 473, 478, 479, 481, 482, 483, 485, 486, 487, 489, 499, 500, 511, 514, 527, 543, 575, 576, 577], "taken": [15, 27, 87, 91, 102, 105, 109, 110, 122, 124, 152, 160, 179, 185, 187, 201, 202, 205, 210, 294, 378, 382, 386, 390, 441, 447, 451, 459, 460, 471, 473, 478, 480, 483, 484, 489, 500, 510, 512, 523, 524, 576], "talk": [380, 382, 384, 394, 403], "tan": [193, 200, 391, 420, 451, 482, 490, 523], "tandem": 502, "tangent": [175, 220, 224, 232, 235, 247, 258, 259, 263, 269, 273], "tangenti": [191, 527], "tar": [407, 489], "target": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 88, 90, 102, 105, 109, 110, 113, 117, 121, 123, 132, 150, 151, 162, 165, 182, 183, 187, 188, 192, 193, 195, 197, 201, 204, 205, 378, 383, 384, 390, 403, 406, 434, 448, 453, 461, 469, 481, 483, 499], "target_nam": 523, "target_posit": [175, 448, 451, 453, 461, 468, 469, 473, 499], "target_radec": 88, "targetmetadata": [90, 123], "task": [325, 397, 401, 403, 404, 406, 407, 438, 452, 455, 481, 482, 490, 494, 498, 514, 522, 572, 574, 578], "task_nam": 325, "tast": 574, "tau": [26, 51, 54, 135, 295, 405, 475, 540], "tau_0": 51, "taul": [26, 475], "taur": [26, 475], "taylor": [52, 53], "tb00058": [134, 143], "tbl": [87, 91], "tc": 473, "tctypn": 463, "tcunin": 463, "tdelta_precis": 300, "team": [382, 386, 394, 397, 399, 403, 415, 436], "technic": [379, 380, 382, 390, 397, 399, 401, 403, 407, 456], "techniqu": [383, 392, 393, 395, 448, 451, 459, 462, 481, 483, 491, 521, 524, 572], "tediou": 476, "tel": [87, 91], "telescop": [82, 83, 85, 91, 95, 104, 152, 390, 391, 404, 409, 413, 414, 463, 468, 471, 486, 489, 490, 492], "tell": 453, "temp": [432, 464], "temperatur": [52, 53], "templat": [16, 26, 57, 70, 84, 90, 104, 105, 110, 114, 116, 123, 169, 177, 191, 192, 193, 195, 196, 197, 203, 204, 205, 211, 223, 237, 245, 269, 270, 271, 272, 273, 274, 280, 282, 296, 299, 382, 388, 389, 393, 400, 425, 439, 442, 443, 445, 454, 455, 457, 464, 482, 483, 484, 485, 502, 523, 528, 539, 546, 549, 554, 560, 568], "template_diffus": [484, 490], "template_extrapol": 559, "template_model": 463, "template_noextrapol": 559, "templatelightcurvetemporalmodel": 439, "templatend": [269, 270, 485], "templatendspatialmodel": [255, 485], "templatendspectralmodel": [26, 256, 430, 441, 485], "templatenpredmodel": [241, 428], "templatephasecurvetemporalmodel": [268, 439, 485, 568], "templatespatialmodel": [67, 255, 399, 400, 425, 439, 440, 442, 443, 463, 484, 485, 490, 538], "templatespectralmodel": [223, 245, 256, 278, 400, 485, 490, 510, 546, 549, 554, 559], "templatetemporalmodel": 439, "tempo2": [471, 514], "tempor": [214, 216, 222, 223, 230, 234, 236, 237, 238, 245, 253, 260, 261, 268, 272, 275, 291, 388, 390, 400, 401, 421, 423, 424, 425, 430, 439, 441, 442, 443, 445, 447, 449, 452, 454, 455, 459, 460, 461, 463, 466, 467, 473, 474, 476, 477, 478, 484, 490, 494, 498, 514, 515, 570, 571, 573], "temporal_model": [261, 390, 463, 464, 470, 485, 561, 562, 563, 564, 565, 566, 567, 568, 569], "temporal_model1": 470, "temporal_model2": 470, "temporal_model_map": 464, "temporal_model_registri": 485, "temporal_typ": 400, "temporalbackground": 388, "temporalmodel": [222, 230, 234, 236, 237, 238, 253, 260, 261, 272, 388, 401, 424, 439, 441, 442, 528], "temporari": 494, "temporarili": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 388], "ten": [383, 397], "tend": [377, 533], "tension": 474, "tensorflow": [395, 397], "tent": 406, "term": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 238, 297, 301, 380, 382, 384, 386, 387, 391, 394, 397, 402, 404, 426, 430, 439, 447, 455, 479, 480, 574, 576, 577], "termin": [87, 91, 101, 393, 408, 409, 410, 411, 412, 448, 449, 451, 452, 453, 459, 460, 461, 471, 473, 478, 479, 490, 498, 499, 574], "terrier": [383, 386, 387, 388, 389, 391, 392, 393, 394, 396, 398, 399, 400, 401, 402, 404, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 430, 431, 432, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443], "test": [6, 94, 101, 114, 116, 119, 121, 122, 124, 125, 126, 129, 130, 132, 141, 160, 162, 165, 192, 193, 195, 201, 204, 205, 237, 283, 284, 285, 287, 290, 334, 351, 352, 353, 354, 355, 356, 357, 378, 383, 384, 385, 386, 387, 389, 390, 391, 392, 393, 394, 395, 402, 405, 406, 407, 417, 419, 420, 422, 424, 428, 429, 430, 433, 434, 435, 436, 437, 438, 439, 442, 448, 454, 455, 464, 467, 468, 469, 470, 473, 477, 478, 480, 512, 514, 518, 524, 568, 569, 573, 576], "test2": 470, "test_aeff3d": 480, "test_edisp": 480, "test_events_with_gti": 511, "test_gti": 511, "test_person_txt": 377, "test_plot": 377, "test_psf": 480, "test_someth": 377, "test_using_data_fil": 356, "test_using_scipi": 357, "testcod": 378, "testoutput": 378, "testpar": 405, "teststatisticnest": 442, "tev": [16, 19, 20, 26, 44, 52, 53, 66, 67, 71, 75, 83, 96, 101, 102, 105, 109, 110, 111, 115, 117, 122, 124, 125, 140, 141, 146, 147, 149, 151, 152, 153, 154, 159, 160, 161, 162, 163, 165, 172, 190, 191, 192, 193, 195, 196, 200, 201, 203, 204, 205, 217, 218, 221, 225, 227, 228, 229, 233, 239, 240, 242, 246, 248, 250, 251, 252, 257, 261, 262, 264, 265, 266, 267, 270, 274, 276, 277, 302, 303, 324, 372, 378, 388, 400, 401, 404, 405, 413, 446, 447, 448, 449, 451, 452, 453, 454, 455, 456, 457, 459, 460, 461, 462, 463, 464, 465, 467, 468, 469, 470, 471, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 485, 486, 487, 489, 490, 491, 492, 498, 499, 500, 508, 511, 512, 518, 519, 521, 523, 524, 527, 530, 531, 532, 533, 534, 535, 536, 537, 538, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 561, 562, 563, 564, 565, 566, 567, 568, 569, 572], "tevcat": [429, 476], "tevcat_nam": 71, "tevpi": 416, "tevtevtev1": 461, "tex": 378, "texliv": 378, "text": [17, 18, 21, 22, 23, 24, 25, 27, 50, 51, 52, 53, 54, 105, 110, 122, 124, 132, 258, 259, 303, 340, 346, 366, 378, 385, 393, 403, 407, 452, 471, 480, 489, 498, 500, 531, 532, 533, 536, 537, 541, 557, 564, 574, 576], "textcolor": 366, "textkw": 366, "th": 197, "than": [27, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 77, 87, 91, 131, 150, 151, 153, 154, 157, 161, 162, 163, 165, 169, 190, 191, 192, 193, 195, 196, 197, 200, 201, 203, 204, 205, 283, 292, 355, 370, 377, 378, 380, 382, 383, 384, 387, 390, 391, 392, 395, 396, 401, 403, 404, 407, 436, 439, 440, 441, 443, 446, 448, 459, 460, 463, 468, 469, 474, 479, 481, 483, 486, 487, 510, 527, 532, 533, 574, 576], "thank": [401, 422, 423, 428, 430, 481, 514], "thaw": 484, "thei": [16, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 84, 87, 90, 91, 95, 104, 108, 112, 123, 129, 136, 166, 272, 291, 324, 377, 378, 380, 382, 383, 384, 385, 386, 388, 391, 393, 394, 396, 397, 400, 401, 402, 403, 404, 405, 407, 414, 425, 428, 430, 442, 443, 448, 449, 453, 475, 477, 479, 483, 484, 485, 486, 487, 489, 492, 502, 511, 512, 514, 519, 526, 527, 572, 573, 574, 575, 576, 578], "them": [11, 15, 16, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 83, 84, 87, 90, 91, 100, 104, 123, 214, 216, 223, 245, 304, 377, 378, 380, 382, 384, 385, 391, 393, 396, 403, 404, 406, 407, 413, 420, 436, 448, 449, 451, 454, 456, 459, 460, 462, 464, 468, 476, 477, 478, 479, 482, 483, 485, 487, 489, 491, 494, 499, 511, 514, 523, 574, 576], "theme": [430, 437], "themselv": [87, 91, 393, 481, 483, 521], "theorem": [283, 512, 576], "theoret": 487, "therefor": [105, 383, 387, 390, 391, 392, 396, 398, 400, 410, 428, 448, 468, 471, 479, 482, 483, 486, 487, 491, 500, 512, 576, 577], "thereof": 388, "thermal": [19, 550, 573], "thermal_relic_cross_sect": 19, "theta": [33, 34, 38, 52, 53, 153, 159, 161, 163, 167, 175, 189, 198, 305, 308, 377, 425, 453, 490, 500, 531, 532, 536, 537], "theta2": [179, 189, 375, 436], "theta2_axi": 492, "theta2_max": 375, "theta2_min": 375, "theta2_t": 492, "theta_0": [33, 38], "theta_squared_axi": [189, 492], "thew": 476, "thi": [6, 15, 16, 19, 20, 26, 27, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 46, 47, 56, 67, 68, 69, 82, 83, 84, 85, 86, 87, 88, 90, 91, 100, 102, 103, 104, 105, 108, 109, 110, 113, 117, 121, 122, 123, 124, 125, 126, 128, 129, 131, 132, 133, 136, 140, 142, 143, 146, 147, 148, 149, 150, 151, 152, 153, 154, 156, 157, 159, 160, 161, 162, 163, 164, 165, 167, 169, 172, 174, 175, 176, 178, 180, 182, 183, 186, 188, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 210, 213, 215, 217, 218, 220, 221, 224, 225, 227, 228, 229, 230, 232, 233, 234, 235, 236, 237, 238, 239, 240, 242, 246, 247, 248, 249, 250, 251, 252, 253, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 269, 270, 272, 273, 274, 276, 283, 285, 287, 293, 304, 312, 322, 325, 328, 333, 334, 352, 355, 362, 364, 366, 367, 368, 372, 374, 376, 377, 378, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 413, 415, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 430, 431, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 446, 447, 448, 449, 451, 452, 453, 454, 455, 456, 457, 459, 460, 461, 462, 463, 464, 465, 467, 468, 469, 470, 471, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 489, 490, 491, 492, 494, 496, 498, 499, 500, 502, 503, 510, 511, 512, 514, 516, 517, 518, 519, 520, 521, 523, 524, 525, 526, 527, 530, 531, 532, 533, 534, 535, 536, 537, 538, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 561, 562, 563, 564, 565, 566, 567, 568, 569, 571, 572, 573, 574, 575, 576, 577, 578], "thick": 374, "thin": [56, 316], "thing": [377, 380, 382, 385, 391, 392, 393, 394, 397, 401, 407, 416, 435, 453, 456, 470, 471, 483, 490], "think": [382, 394, 395, 397], "third": [62, 63, 87, 91, 378, 428, 476, 479, 482, 494, 500, 509], "thoma": [403, 436], "thorough": [482, 502], "those": [15, 83, 178, 192, 193, 195, 201, 204, 205, 210, 214, 216, 223, 245, 312, 366, 377, 380, 382, 384, 386, 391, 393, 396, 397, 398, 399, 400, 402, 407, 408, 409, 411, 412, 422, 425, 468, 473, 479, 482, 483, 484, 486, 494, 500, 512, 514, 523, 578], "though": [15, 380, 385, 391, 392, 393, 395, 397, 452, 485, 498], "thought": [382, 391], "three": [87, 91, 160, 286, 377, 386, 389, 391, 403, 461, 463, 468, 474, 482, 487, 494, 519, 526, 573], "threshold": [67, 102, 109, 117, 122, 123, 124, 132, 140, 141, 149, 150, 154, 167, 178, 202, 283, 366, 367, 368, 391, 418, 424, 425, 446, 451, 453, 455, 461, 465, 468, 476, 477, 479, 481, 483, 489, 498, 510, 512], "threshold_alpha": 167, "through": [41, 87, 91, 303, 304, 374, 380, 382, 390, 391, 397, 401, 402, 410, 414, 428, 439, 447, 455, 464, 474, 479, 481, 482, 483, 484, 490, 491, 514, 519, 526, 573, 576], "throughout": [13, 384, 386, 387, 391, 393, 435, 476], "throught": 465, "thrown": 485, "thu": [377, 384, 391, 394, 395, 397, 432, 446, 447, 456, 457, 461, 463, 478, 571, 577], "thumbnail": 428, "ti": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 193, 386, 470], "tibaldo": 433, "tick": [441, 442], "tick_param": 446, "ticker": 366, "tight_layout": [469, 479, 487, 533, 537], "tightli": 396, "tikonov": 405, "tild": [191, 203], "tile": [191, 193], "tilt": [251, 271, 388, 399, 400, 405, 417, 423, 456, 459, 460, 463, 464, 467, 477, 485, 490, 498, 499, 521, 527, 534, 554, 559], "tilt_prior": 405, "tim": 443, "time": [6, 19, 20, 50, 51, 52, 53, 78, 82, 83, 85, 86, 87, 88, 89, 91, 92, 94, 100, 101, 102, 103, 104, 105, 108, 109, 110, 122, 123, 124, 129, 132, 135, 136, 144, 168, 174, 185, 187, 192, 193, 194, 195, 196, 201, 202, 204, 205, 210, 213, 215, 222, 225, 230, 234, 236, 237, 238, 253, 260, 261, 272, 275, 286, 291, 295, 300, 334, 354, 358, 359, 360, 361, 377, 378, 380, 382, 383, 384, 385, 387, 390, 391, 393, 394, 395, 396, 397, 398, 400, 401, 402, 403, 406, 407, 409, 413, 417, 418, 421, 422, 423, 425, 428, 432, 434, 435, 436, 437, 438, 439, 441, 442, 443, 447, 451, 453, 454, 455, 457, 459, 461, 462, 464, 465, 468, 471, 475, 476, 477, 478, 479, 481, 482, 483, 484, 485, 486, 487, 489, 490, 491, 498, 499, 500, 506, 507, 508, 510, 511, 512, 514, 519, 523, 527, 532, 533, 540, 561, 562, 563, 564, 565, 566, 567, 568, 569, 573, 574, 575, 576, 577], "time1": 295, "time2": 295, "time_axi": [192, 193, 195, 196, 201, 204, 205, 286, 464, 473, 482, 527], "time_bin": 392, "time_bin_end": 392, "time_bin_s": 392, "time_bin_start": 392, "time_bound": 202, "time_box": 91, "time_column": 401, "time_delta": [86, 202, 358, 361], "time_edg": [202, 474, 482], "time_filt": 89, "time_format": [124, 202, 442, 470], "time_info": 90, "time_interv": [16, 83, 86, 88, 92, 129, 452, 456, 457, 459, 464, 468, 469, 473, 498], "time_map_axi": [202, 482], "time_map_axis_contigu": 482, "time_max": [100, 122, 124, 202, 391, 392, 393, 464, 468, 473, 476, 482], "time_mid": [202, 474], "time_min": [100, 122, 124, 202, 391, 392, 393, 464, 468, 473, 476, 482], "time_rang": [91, 222, 230, 234, 236, 237, 238, 253, 260, 272, 275, 464, 561, 562, 563, 564, 565, 566, 567, 568, 569], "time_ref": [83, 85, 86, 91, 94, 196], "time_ref_default": 86, "time_ref_from_dict": 578, "time_relative_to_ref": 578, "time_resolved_spectroscopi": [445, 472, 473], "time_seri": 286, "time_start": [85, 86, 91, 392], "time_step": 392, "time_stop": [85, 86, 91, 392], "time_sum": [86, 222, 230, 234, 236, 237, 238, 253, 260, 272, 275], "timedelta": [87, 91, 94, 202, 222, 230, 234, 236, 237, 238, 253, 260, 272, 275, 334, 358, 361, 578], "timedelta64": [87, 91], "timeinfometadata": 90, "timelin": [382, 384, 436], "timemapaxi": [124, 144, 194, 196, 428, 443, 469, 470, 473, 474], "timerangeconfig": 16, "timeref": 463, "timescal": [136, 230, 292, 402, 474], "timeseri": 392, "timesi": [94, 440, 442, 463], "timestamp": 377, "timeunit": 463, "timmer": 286, "timmer1995": 286, "tini": [461, 489], "tip": 514, "titl": [382, 465, 475], "tiziani": 434, "tke": 490, "tm": [87, 91], "tmax": 392, "tmid": [88, 442, 461, 481, 486, 499], "tmin": 392, "to_2d": [147, 492], "to_3d": [146, 441, 443], "to_bands_hdu": [190, 191, 200, 203], "to_binsz": [191, 200, 203, 428], "to_binsz_wc": 200, "to_contigu": [202, 482], "to_counts_hdulist": 107, "to_cub": [190, 191, 192, 193, 195, 200, 201, 203, 204, 205, 425, 457, 527], "to_dict": [19, 20, 26, 99, 101, 102, 105, 109, 110, 209, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 242, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 269, 270, 271, 272, 273, 274, 275, 404, 487], "to_edisp_kernel": [154, 518], "to_edisp_kernel_map": [151, 428, 518], "to_energy_dependent_table_psf": 436, "to_even_npix": 203, "to_fits_head": 85, "to_fram": 198, "to_gti": [202, 443], "to_hdu": [192, 193, 204, 205], "to_hdulist": [102, 105, 109, 110, 122, 124, 146, 147, 148, 149, 150, 151, 152, 153, 154, 156, 157, 159, 161, 162, 163, 164, 165, 192, 193, 199, 200, 201, 204, 205, 482], "to_head": [84, 90, 104, 123, 191, 194, 196, 197, 202, 203, 404], "to_html": 377, "to_imag": [102, 105, 109, 110, 149, 150, 160, 162, 165, 190, 191, 200, 203, 399, 422, 423, 446, 457, 461, 477, 490, 524, 527], "to_json": [16, 84, 90, 104, 123], "to_map": [122, 124], "to_map_dataset": [105, 110], "to_mask": [102, 105, 109, 110, 475], "to_model": [56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 428, 476], "to_node_typ": 197, "to_nsid": [191, 193], "to_odd_npix": 203, "to_panda": [87, 91], "to_parameters_t": [223, 245, 447, 448, 451, 452, 453, 456, 459, 469, 479, 487, 499], "to_pixel": [391, 451, 461, 475, 481, 485, 523, 531, 532, 533], "to_polygon": 391, "to_psf3d": [153, 161, 163], "to_python": [16, 84, 90, 104, 123], "to_region": [219, 220, 223, 224, 232, 235, 245, 249, 258, 259, 273, 391, 422, 485, 531, 532, 533], "to_region_map_dataset": [102, 105, 109, 110, 477], "to_region_nd_map": [150, 151, 157, 162, 165, 193, 201, 205, 425, 428, 490], "to_region_nd_map_histogram": [205, 442], "to_sed_typ": 401, "to_sherpa": [422, 436, 437], "to_spectrum": 428, "to_spectrum_dataset": [100, 102, 105, 109, 110, 399, 421, 423, 471, 477, 487], "to_st": 442, "to_str": [442, 446], "to_swap": [191, 192, 193], "to_tabl": [101, 124, 146, 147, 148, 149, 152, 153, 154, 156, 159, 161, 163, 164, 196, 197, 201, 202, 214, 216, 237, 428, 447, 449, 451, 452, 461, 465, 467, 468, 470, 476, 478, 485, 500, 512], "to_table_hdu": [83, 86, 146, 147, 148, 149, 152, 153, 154, 156, 159, 161, 163, 164, 196, 197, 482], "to_table_psf": 434, "to_template_sky_model": [223, 245], "to_template_spectral_model": [223, 245, 400], "to_unit": [146, 147, 148, 149, 152, 153, 154, 156, 159, 161, 163, 164, 192, 193, 195, 201, 204, 205], "to_wc": [192, 193], "to_wcs_geom": [191, 200, 527], "to_wcs_til": [191, 193], "to_yaml": [16, 84, 90, 104, 123, 223, 245, 388, 404, 485, 530, 531, 532, 533, 534, 535, 536, 537, 538, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 561, 562, 563, 564, 565, 566, 567, 568, 569], "tob": 452, "todai": 403, "todo": [13, 79, 87, 91, 99, 160, 274, 378, 401, 419, 489, 504, 505, 578], "tof": 159, "togeth": [100, 102, 105, 109, 110, 125, 129, 223, 245, 374, 377, 390, 394, 397, 408, 420, 447, 457, 459, 460, 465, 469, 477, 479, 481, 484, 485, 486, 487, 492, 499, 510, 511, 574], "tol": 479, "toler": [86, 100, 129, 146, 147, 148, 149, 152, 153, 154, 156, 159, 161, 163, 164, 191, 192, 193, 195, 197, 200, 201, 203, 204, 205, 354, 479], "tolist": 479, "tomato": 447, "toml": 425, "ton": [292, 489], "too": [377, 382, 383, 427, 428, 441, 442, 443, 479, 483], "took": 402, "tool": [6, 13, 192, 193, 195, 204, 205, 376, 380, 384, 386, 388, 390, 393, 394, 397, 403, 414, 422, 433, 436, 437, 462, 465, 470, 477, 479, 482, 486, 489, 490, 492, 502, 514, 548, 572, 573], "toolbox": [393, 433], "top": [109, 110, 364, 373, 377, 382, 393, 397, 399, 410, 436, 453, 455, 461, 465, 468, 470, 474, 476, 481, 500, 514, 527, 572, 574, 578], "top_five_ts_3fhl": 500, "tophat2dkernel": 121, "topic": [382, 386, 397, 405, 500], "total": [51, 67, 99, 101, 102, 105, 109, 110, 125, 126, 129, 130, 139, 172, 187, 191, 211, 222, 230, 234, 236, 237, 238, 253, 260, 272, 275, 301, 385, 401, 405, 409, 411, 443, 445, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 469, 470, 471, 472, 473, 475, 476, 477, 478, 479, 481, 482, 483, 484, 487, 488, 490, 493, 495, 497, 498, 499, 500, 501, 504, 510, 514, 519, 529, 539, 550, 560, 570, 573], "total_jfact": 475, "total_jfact_decai": 475, "total_model": 388, "total_obstim": 481, "total_stat": [211, 212, 447, 473, 479, 575], "touch": [86, 417], "tour": 494, "toward": [322, 384, 391, 397, 438], "tox": [341, 378, 380, 439, 446, 448, 451, 452, 453, 454, 455, 456, 457, 459, 460, 461, 462, 463, 464, 465, 467, 468, 469, 470, 471, 473, 475, 476, 477, 479, 481, 482, 483, 484, 485, 487, 489, 490, 491, 492, 498, 499, 500, 538, 546, 562], "tqdm": 514, "trace": [210, 211, 212, 425, 479], "traceback": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 377], "track": [85, 94, 377, 386, 392, 403, 430, 484], "tracker": [380, 391], "tradition": [485, 575], "train": 402, "traitlet": [393, 404], "traittyp": 404, "transfer": 404, "transform": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 83, 85, 94, 160, 194, 196, 197, 202, 203, 223, 245, 306, 310, 333, 338, 377, 391, 393, 401, 405, 416, 418, 434, 437, 455, 461, 481, 487, 526, 531, 532, 578], "transit": [27, 367, 368, 384, 417, 418, 436, 491], "transit_map": 491, "transit_numb": 491, "transitsmap_crab": 491, "translat": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 393, 512], "transpar": 392, "transport": 482, "transpos": 437, "trapezoid": [146, 147, 148, 149, 152, 153, 154, 156, 159, 161, 163, 164, 279, 315], "trapz": 315, "trapz_loglog": 423, "trash": 419, "travi": [422, 424, 428], "treat": [95, 409, 441, 442, 451, 463, 577], "treatment": [428, 451, 459, 573], "trend": 463, "tri": [77, 385, 391], "tributor": 403, "tricki": 391, "trigger": [355, 377, 406, 491], "trim": [102, 105, 150, 151, 157, 162, 165, 168, 203, 205, 271], "tripl": 153, "trivial": 384, "troubl": 574, "troubleshoot": [409, 410, 411], "trough": 474, "true": [15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 35, 36, 37, 39, 40, 45, 80, 82, 83, 84, 86, 87, 88, 90, 91, 93, 96, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 112, 113, 114, 116, 121, 122, 123, 124, 125, 129, 130, 132, 133, 139, 142, 146, 147, 149, 150, 151, 152, 153, 154, 156, 157, 159, 160, 161, 162, 163, 164, 165, 168, 172, 178, 179, 182, 183, 185, 186, 188, 191, 192, 193, 195, 196, 197, 198, 199, 200, 201, 203, 204, 205, 207, 210, 211, 214, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 242, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 269, 270, 271, 272, 273, 274, 275, 301, 304, 312, 313, 316, 334, 346, 348, 365, 370, 374, 377, 383, 390, 391, 392, 393, 400, 401, 404, 419, 423, 424, 435, 437, 438, 446, 447, 448, 449, 451, 452, 453, 454, 455, 456, 457, 459, 460, 461, 462, 463, 464, 465, 467, 468, 469, 470, 471, 473, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 487, 490, 491, 496, 498, 499, 500, 504, 510, 512, 514, 519, 524, 526, 527, 530, 531, 532, 535, 536, 538, 559, 573, 576], "truelov": 53, "truncat": [132, 322, 428], "truncation_valu": [288, 294], "trust": [16, 84, 90, 104, 123], "trustworthi": 405, "truth": 487, "try": [16, 77, 84, 90, 104, 123, 192, 193, 195, 201, 204, 205, 377, 378, 387, 391, 397, 406, 407, 413, 418, 449, 451, 453, 463, 464, 468, 476, 479, 482, 500, 574], "ts2": 286, "ts3": 286, "ts_image_estim": 461, "ts_scan": [122, 124], "ts_threshold": [144, 283], "ts_threshold_ul": [471, 512], "ts_to_sigma": [462, 576], "tsimageestim": 436, "tsmap_est": 370, "tsmapestim": [118, 142, 143, 370, 398, 401, 423, 424, 426, 428, 442, 455, 461, 514], "tstart": [88, 91, 390, 392, 454, 463, 467, 469, 470, 473, 489], "tstop": [88, 390, 392, 454, 463, 467, 469, 473, 489], "tt": [86, 94, 359, 360, 403, 464, 469, 473, 578], "tth_sec3": 197, "tupl": [16, 19, 20, 26, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 41, 56, 83, 84, 87, 88, 90, 91, 101, 102, 104, 105, 109, 110, 123, 127, 132, 146, 147, 149, 150, 151, 152, 153, 154, 157, 159, 160, 161, 162, 163, 165, 168, 173, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 203, 204, 205, 217, 218, 221, 225, 227, 228, 229, 233, 239, 240, 242, 246, 248, 250, 251, 252, 257, 262, 264, 265, 266, 267, 270, 271, 274, 285, 287, 290, 316, 326, 333, 377, 482, 526], "turn": [83, 88, 378, 380, 391, 489, 571], "tutori": [82, 99, 119, 129, 131, 177, 377, 380, 381, 386, 389, 390, 391, 392, 393, 394, 395, 398, 407, 411, 412, 413, 414, 417, 418, 419, 420, 421, 422, 423, 424, 425, 427, 428, 430, 431, 434, 435, 436, 437, 438, 439, 442, 443, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 456, 458, 459, 460, 461, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 476, 477, 478, 479, 480, 482, 484, 485, 486, 487, 488, 490, 492, 493, 495, 497, 498, 499, 500, 501, 514, 515, 517, 526, 571, 574], "tutorials_jupyt": [406, 494], "tutorials_python": 494, "tweak": [393, 428, 482], "twice": [121, 526, 577], "twinx": 446, "two": [19, 20, 26, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 59, 77, 86, 87, 89, 91, 101, 102, 105, 109, 110, 135, 146, 147, 148, 149, 152, 153, 154, 155, 156, 159, 161, 163, 164, 168, 173, 175, 191, 192, 193, 194, 195, 197, 200, 201, 203, 204, 205, 210, 217, 218, 219, 220, 221, 222, 223, 224, 225, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 242, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 269, 270, 271, 272, 273, 274, 275, 283, 334, 344, 366, 371, 374, 376, 377, 378, 380, 384, 386, 387, 388, 389, 391, 392, 393, 394, 395, 397, 398, 401, 402, 403, 405, 406, 407, 409, 430, 436, 438, 442, 452, 453, 459, 460, 462, 465, 470, 476, 477, 478, 479, 480, 482, 483, 485, 486, 487, 489, 491, 498, 499, 504, 510, 511, 512, 514, 523, 526, 527, 542, 576, 577], "txt": [124, 402, 404, 484, 490], "txxrpw_h": 473, "tyler": 430, "type": [16, 19, 20, 26, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 69, 84, 87, 89, 90, 91, 96, 99, 100, 101, 102, 104, 113, 121, 122, 123, 124, 126, 132, 166, 172, 190, 191, 192, 193, 195, 197, 200, 201, 203, 204, 205, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 269, 270, 271, 272, 273, 274, 275, 276, 304, 334, 383, 386, 387, 388, 389, 391, 392, 393, 396, 400, 401, 403, 405, 407, 408, 413, 421, 428, 434, 435, 436, 442, 447, 448, 449, 451, 452, 453, 454, 455, 456, 457, 459, 460, 461, 462, 463, 464, 465, 467, 468, 469, 470, 473, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 489, 490, 491, 498, 499, 500, 502, 514, 526, 530, 531, 532, 533, 534, 535, 536, 537, 538, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 561, 562, 563, 564, 565, 566, 567, 568, 569, 573, 574], "typeerror": [16, 84, 90, 104, 123, 304, 391, 401, 405], "typic": [122, 383, 386, 388, 395, 399, 400, 401, 402, 404, 409, 410, 448, 453, 457, 465, 467, 468, 469, 476, 477, 478, 480, 483, 485, 486, 502, 509, 510, 511, 519, 523, 572, 573], "typing_extens": [16, 84, 90, 104, 123], "typo": [377, 414, 440, 441], "u": [19, 20, 26, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 66, 83, 85, 87, 91, 96, 102, 105, 109, 110, 114, 116, 117, 122, 124, 126, 128, 132, 140, 141, 149, 151, 160, 190, 191, 192, 193, 195, 196, 200, 201, 202, 203, 204, 205, 217, 218, 221, 225, 227, 228, 229, 233, 237, 239, 240, 242, 246, 248, 250, 251, 252, 257, 262, 264, 265, 266, 267, 270, 274, 276, 277, 286, 302, 303, 304, 324, 372, 377, 380, 384, 385, 386, 392, 393, 394, 395, 400, 401, 404, 405, 417, 418, 419, 436, 437, 438, 446, 447, 448, 449, 451, 453, 454, 455, 456, 457, 459, 460, 461, 462, 463, 464, 465, 467, 468, 469, 470, 471, 473, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 489, 490, 491, 492, 498, 499, 500, 504, 511, 512, 514, 516, 521, 523, 524, 527, 531, 533, 534, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 561, 562, 563, 564, 565, 566, 567, 568], "u03c3": 462, "u18": [33, 38], "uc": [87, 91], "ufunc": [192, 193, 195, 201, 204, 205, 453, 473], "ui": [28, 30, 31, 32, 33, 35, 36, 37, 38, 39, 40, 50, 52, 53, 57, 58, 60, 61, 62, 83, 88, 117, 135, 152, 242, 276, 277, 286, 293, 295], "ul": [67, 121, 122, 124, 125, 126, 129, 130, 132, 284, 460, 465, 470, 476], "ultim": 377, "un": [389, 403, 425, 484], "unambigu": 485, "unbehaun": 443, "unbin": [389, 390, 437], "unboundlocalerror": 377, "uncertaint": 395, "uncertainti": [52, 102, 105, 109, 110, 285, 287, 381, 394, 435, 449, 451, 471, 479, 487, 499, 572, 573, 575], "unchang": [102, 105, 109, 110, 114, 116, 122, 124, 146, 147, 148, 149, 150, 151, 152, 153, 154, 156, 157, 159, 161, 162, 163, 164, 165, 190, 191, 192, 193, 195, 196, 200, 201, 203, 204, 205, 436], "unclear": [377, 387, 388, 394, 404], "uncom": [393, 489], "undefin": 577, "under": [72, 91, 133, 134, 142, 143, 377, 381, 386, 394, 403, 437, 438, 447, 452, 494, 498, 510, 576, 577], "underestim": 512, "underflow": 202, "underli": [87, 91, 200, 390, 449, 476, 482, 487, 500, 502, 511, 523, 526], "underscor": 377, "understand": [393, 414, 422, 423, 448, 451, 452, 453, 456, 463, 464, 469, 470, 474, 482, 483, 484, 489, 498, 499, 574], "undertak": 397, "unevenli": [135, 295], "unexpect": 491, "unfold": 573, "unfreez": [19, 20, 26, 214, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 242, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 269, 270, 271, 272, 273, 274, 275, 550], "unfreeze_al": [214, 216, 484], "unfrozen": 521, "unheard": 574, "uni": [405, 406], "uni_prior_stat_sum": 487, "unicod": [87, 91, 377], "unid": 67, "unidimension": 196, "unif": 422, "unifi": [87, 91, 381, 386, 391, 417, 420, 422, 423, 424, 425, 428, 437, 438, 573], "uniform": [160, 210, 333, 377, 386, 388, 389, 399, 401, 405, 419, 420, 424, 428, 448, 482, 487, 572], "uniform_filt": [127, 205], "uniformli": [390, 512], "uniformprior": [405, 487], "uninstal": 376, "union": [84, 86, 89, 90, 102, 104, 105, 123, 200, 339, 391, 392, 403, 404, 420, 510], "uniqu": [87, 91, 100, 149, 191, 192, 193, 194, 195, 201, 203, 204, 205, 214, 216, 223, 231, 245, 261, 271, 370, 387, 388, 389, 390, 400, 403, 423, 452, 477, 485, 491, 527, 571], "unique_id": 485, "unique_paramet": [214, 216], "uniquifi": [87, 91], "unit": [6, 19, 20, 26, 27, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 52, 66, 83, 85, 87, 88, 91, 96, 101, 102, 105, 107, 109, 110, 111, 114, 115, 116, 117, 122, 124, 126, 128, 132, 140, 141, 146, 147, 148, 149, 151, 152, 153, 154, 156, 159, 160, 161, 162, 163, 164, 172, 175, 190, 191, 192, 193, 194, 195, 196, 197, 198, 200, 201, 202, 203, 204, 205, 213, 215, 217, 218, 220, 221, 224, 225, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 242, 246, 248, 249, 250, 251, 252, 253, 257, 258, 259, 260, 261, 262, 264, 265, 266, 267, 270, 271, 272, 273, 274, 276, 277, 286, 295, 302, 303, 304, 334, 348, 349, 350, 352, 361, 362, 363, 366, 367, 368, 372, 378, 386, 388, 391, 393, 395, 400, 401, 405, 417, 418, 420, 428, 430, 436, 437, 439, 440, 441, 442, 446, 447, 448, 449, 451, 452, 453, 454, 455, 456, 457, 459, 460, 461, 462, 463, 464, 465, 467, 468, 469, 470, 471, 473, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 489, 490, 491, 492, 498, 499, 500, 504, 506, 507, 508, 511, 512, 514, 516, 518, 519, 521, 523, 524, 525, 526, 527, 530, 531, 532, 533, 534, 535, 536, 537, 538, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 561, 562, 563, 564, 565, 566, 567, 568, 569, 573], "unit_string_format": [442, 446], "unitbas": 304, "uniti": [127, 194, 273, 440, 533], "unitless": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 231, 271], "unitsmap": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40], "unitswarn": [446, 454, 456, 459, 461, 467, 470, 489], "univers": [192, 193, 195, 201, 204, 205, 573], "univsers": 20, "unknown": [101, 287, 455, 479, 575, 576], "unless": [90, 93, 95, 125, 126, 129, 132, 168, 304, 376, 383, 402, 404, 480], "unlik": [87, 91, 283, 384, 395], "unmaintain": 418, "unmask": [87, 91], "unnam": [87, 91, 198], "unnecessari": [428, 439, 459], "unneed": 442, "unphys": 577, "unrealist": 377, "unrel": 578, "unreli": 489, "unsaf": 377, "unstabl": [377, 489], "unsupport": 394, "untar": 489, "until": [377, 380, 384, 391, 402, 435], "unus": [393, 420, 422], "unusu": 382, "unweight": [105, 110], "unzip": 489, "up": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 52, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 74, 101, 126, 128, 132, 153, 159, 161, 163, 200, 304, 377, 378, 381, 382, 384, 385, 386, 389, 391, 393, 394, 395, 397, 399, 403, 405, 407, 408, 409, 411, 413, 416, 418, 419, 420, 421, 422, 423, 424, 425, 428, 432, 434, 435, 436, 437, 438, 451, 452, 459, 462, 463, 487, 489, 490, 527, 574], "upcast": 304, "upcom": [385, 386], "updat": [15, 16, 84, 87, 90, 91, 103, 104, 108, 123, 199, 213, 215, 223, 245, 273, 283, 324, 344, 377, 380, 382, 383, 384, 385, 386, 389, 394, 399, 401, 403, 404, 406, 407, 409, 410, 417, 418, 419, 420, 421, 422, 423, 425, 427, 428, 429, 430, 431, 434, 435, 436, 437, 439, 442, 443, 482, 485, 525, 526], "update_config": 15, "update_forward_ref": [16, 84, 90, 104, 123], "update_from_dict": [213, 215], "update_link_label": [223, 245], "update_parameters_from_t": [223, 245], "upgrad": [191, 376, 402, 410], "upload": [394, 406], "upon": [102, 105, 109, 110, 386, 456, 484, 489, 510], "upper": [17, 18, 19, 20, 21, 22, 24, 25, 26, 27, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 77, 80, 101, 121, 122, 123, 124, 125, 126, 129, 130, 132, 133, 142, 149, 197, 202, 210, 217, 218, 221, 222, 225, 227, 228, 229, 230, 233, 234, 236, 237, 238, 239, 240, 242, 246, 248, 250, 251, 252, 253, 257, 260, 262, 264, 265, 266, 267, 270, 272, 274, 275, 284, 285, 287, 404, 413, 424, 428, 435, 436, 437, 443, 451, 455, 465, 468, 477, 478, 481, 498, 510, 512, 514], "upper_error": 124, "upsampl": [162, 190, 191, 192, 193, 194, 195, 196, 197, 200, 201, 202, 203, 204, 205, 419, 439], "upsample_geom": 162, "upstream": [377, 380], "upward": [285, 287], "url": 385, "us": [11, 13, 16, 17, 18, 19, 20, 21, 22, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 35, 36, 37, 39, 40, 41, 46, 47, 53, 56, 57, 59, 65, 69, 70, 71, 74, 75, 80, 82, 83, 84, 85, 86, 87, 88, 90, 91, 93, 94, 95, 96, 101, 102, 103, 104, 105, 107, 108, 109, 110, 112, 113, 119, 121, 122, 123, 124, 125, 126, 127, 129, 130, 132, 133, 135, 136, 137, 138, 140, 141, 142, 143, 145, 146, 147, 148, 149, 150, 152, 153, 154, 156, 159, 160, 161, 162, 163, 164, 165, 167, 168, 169, 172, 175, 176, 177, 178, 179, 180, 181, 182, 183, 185, 188, 189, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 227, 228, 229, 230, 232, 233, 234, 235, 236, 237, 238, 239, 240, 242, 245, 246, 247, 248, 249, 250, 251, 252, 253, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 269, 270, 271, 272, 273, 274, 275, 277, 279, 284, 286, 288, 300, 302, 304, 312, 315, 316, 317, 324, 325, 328, 333, 334, 341, 344, 360, 361, 363, 364, 366, 367, 368, 370, 371, 372, 373, 374, 376, 378, 379, 380, 382, 383, 384, 385, 386, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 403, 404, 406, 407, 408, 409, 411, 412, 414, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 428, 429, 430, 432, 433, 434, 435, 436, 437, 438, 439, 440, 442, 443, 445, 446, 447, 448, 449, 451, 453, 454, 455, 456, 457, 459, 460, 461, 464, 465, 467, 469, 470, 471, 473, 474, 475, 476, 478, 481, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 494, 496, 500, 503, 504, 514, 516, 517, 518, 520, 524, 525, 527, 528, 530, 531, 532, 533, 534, 535, 536, 537, 538, 540, 541, 542, 543, 544, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 572, 573, 574, 575, 576, 578, 579], "usabl": 377, "usag": [16, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 82, 84, 90, 104, 119, 123, 129, 131, 177, 190, 191, 200, 203, 328, 383, 387, 388, 390, 392, 396, 401, 421, 442, 443, 476, 481, 483, 484, 574], "use_cach": 246, "use_center_as_plot_label": 197, "use_enum_valu": [16, 84, 90, 104, 123], "use_evaluation_region": [223, 245], "use_fft": 205, "use_local_fil": [87, 91], "use_nullable_int": [87, 91], "use_region_cent": [172, 179, 182, 183, 185, 186, 428, 448], "useless": 489, "user": [15, 19, 20, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 77, 82, 88, 213, 217, 220, 221, 224, 225, 227, 228, 229, 230, 232, 233, 234, 235, 236, 237, 238, 239, 240, 242, 249, 250, 251, 252, 253, 257, 258, 259, 260, 262, 265, 266, 267, 272, 273, 377, 378, 380, 382, 383, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 399, 401, 402, 403, 404, 406, 407, 408, 409, 410, 411, 414, 421, 428, 429, 435, 436, 437, 439, 452, 455, 462, 463, 464, 477, 478, 480, 482, 483, 484, 485, 486, 494, 498, 511, 512, 513, 514, 519, 523, 526, 529, 535, 539, 560, 570, 571, 574], "userdataset": 389, "usernam": 380, "userwarn": [451, 453, 460, 461, 465, 490], "uses_quant": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40], "usr": 574, "usual": [29, 82, 83, 122, 140, 146, 147, 148, 160, 201, 312, 377, 378, 380, 382, 383, 384, 385, 391, 392, 397, 403, 407, 442, 446, 447, 448, 449, 451, 453, 454, 456, 457, 461, 463, 464, 467, 468, 469, 470, 473, 474, 475, 477, 483, 486, 491, 499, 502, 510, 514, 516, 517, 518, 520, 523, 527, 532, 571, 573, 574, 575], "ut1": 578, "utc": [86, 88, 104, 123, 358, 463, 468, 469, 473, 482, 485, 561, 562, 563, 564, 565, 566, 567, 568, 569, 578], "utf": [87, 91], "utf8": [16, 84, 90, 104, 123], "util": [6, 96, 104, 111, 114, 115, 116, 123, 124, 126, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 151, 181, 182, 183, 184, 185, 186, 187, 188, 189, 282, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 377, 386, 388, 389, 390, 391, 401, 416, 419, 420, 421, 422, 429, 430, 433, 434, 435, 436, 437, 438, 442, 443, 446, 448, 451, 452, 453, 454, 455, 456, 457, 459, 460, 461, 462, 463, 464, 465, 468, 469, 470, 471, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 489, 490, 491, 492, 498, 499, 500, 502, 503, 514, 573], "utilis": [141, 378, 409, 411, 446, 451, 455, 462, 474, 478, 482, 486, 491, 499, 511, 514, 521], "uvuw7f6n": 473, "uxb": 459, "v": [26, 31, 32, 37, 87, 91, 153, 159, 161, 162, 163, 165, 174, 181, 199, 272, 283, 308, 380, 385, 392, 393, 404, 405, 406, 407, 430, 446, 468, 475, 486, 498], "v0": [95, 384, 385, 388, 389, 391, 394, 396, 397, 402, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 430, 431, 437, 438, 439, 463, 464, 480, 484, 489], "v1": [13, 16, 84, 90, 104, 123, 377, 384, 386, 388, 393, 394, 395, 396, 402, 403, 406, 409, 411, 422, 423, 424, 430, 435, 439, 440, 441, 442, 443, 465, 490, 546], "v2": [403, 404, 428, 436, 443], "v3": 420, "v_0": [37, 49], "v_glat": 311, "v_glon": 311, "va": 531, "vagu": 382, "vain": 380, "val": [87, 91, 192, 193, 195, 201, 204, 205, 214, 216, 482, 526], "valfmt": 366, "valid": [16, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 84, 87, 90, 91, 104, 106, 122, 123, 126, 134, 143, 164, 178, 190, 191, 192, 193, 194, 195, 196, 197, 198, 200, 201, 203, 204, 205, 304, 322, 376, 377, 386, 390, 393, 394, 403, 422, 430, 439, 448, 451, 473, 479, 481, 482, 485, 490, 512, 514, 519, 573], "valid_hdu_class": [82, 87], "valid_hdu_typ": 87, "valid_interv": 473, "valid_tim": 473, "validate_al": 404, "validate_assign": [16, 84, 90, 104, 123, 404], "validate_default": [16, 84, 90, 104, 123], "validate_earth_loc": 90, "validate_loc": 404, "validate_scalar": 90, "validate_zenith_angl": 404, "validationerror": [16, 84, 90, 104, 123, 404], "valle": 38, "valleespir": 504, "valu": [11, 15, 16, 19, 20, 26, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 42, 52, 83, 84, 86, 87, 88, 90, 91, 92, 95, 99, 100, 101, 102, 104, 105, 109, 110, 112, 117, 119, 121, 122, 123, 124, 125, 126, 127, 129, 130, 132, 133, 135, 140, 141, 142, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 159, 161, 162, 163, 164, 165, 168, 172, 178, 179, 181, 182, 183, 185, 186, 190, 191, 192, 193, 194, 195, 196, 197, 199, 200, 201, 202, 203, 204, 205, 210, 212, 213, 214, 215, 216, 217, 218, 220, 221, 222, 223, 224, 225, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 242, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 269, 270, 271, 272, 273, 274, 275, 276, 283, 284, 285, 287, 288, 290, 291, 292, 295, 304, 308, 316, 317, 331, 334, 344, 348, 363, 366, 367, 368, 378, 380, 383, 388, 389, 391, 393, 395, 397, 400, 401, 404, 419, 422, 428, 439, 442, 443, 446, 447, 448, 449, 451, 452, 453, 454, 455, 456, 457, 459, 460, 461, 463, 464, 465, 467, 468, 469, 470, 471, 473, 474, 475, 476, 477, 478, 479, 480, 481, 483, 484, 485, 486, 489, 490, 491, 492, 498, 499, 500, 502, 506, 507, 508, 512, 514, 518, 526, 527, 530, 531, 532, 533, 534, 535, 536, 537, 538, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 561, 562, 563, 564, 565, 566, 567, 568, 569, 574, 575, 576, 577], "value_rang": 91, "value_scan": 284, "valueerror": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 72, 87, 91, 92, 100, 223, 245, 377, 391, 404], "values_equ": [87, 91], "values_err": 471, "values_scal": [146, 147, 148, 201, 205, 237, 269, 273, 274, 316, 440, 442, 464, 480], "vanilla": [87, 91], "var": [293, 409, 411], "vari": [68, 103, 108, 129, 160, 210, 316, 344, 389, 391, 392, 402, 422, 425, 445, 447, 456, 461, 462, 464, 472, 473, 481, 485, 487, 490, 494], "variability_amplitud": 474, "variability_amplitude_100": 474, "variability_amplitude_error": 474, "variability_amplitude_signific": 474, "variability_estim": [445, 469, 472, 474], "variabl": [11, 16, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 82, 84, 90, 91, 104, 123, 135, 136, 205, 285, 287, 290, 291, 292, 293, 295, 300, 315, 342, 377, 378, 380, 390, 392, 393, 407, 409, 411, 417, 418, 434, 435, 436, 442, 443, 445, 446, 448, 451, 452, 453, 454, 455, 456, 457, 459, 460, 461, 462, 464, 465, 468, 469, 470, 471, 472, 473, 475, 476, 477, 479, 481, 482, 483, 484, 485, 487, 489, 490, 491, 492, 494, 498, 499, 500, 519, 574, 575, 576], "varianc": [96, 137, 138, 292, 293, 303, 392, 443, 486, 521], "variant": 407, "variat": [136, 238, 292, 383, 393, 446, 474, 480, 481, 524, 576], "varieti": [388, 572], "variou": [119, 125, 126, 129, 130, 132, 141, 377, 383, 387, 389, 392, 401, 404, 407, 409, 428, 429, 443, 447, 449, 452, 455, 460, 462, 468, 478, 479, 498, 510, 514, 572, 578], "vast": [394, 430], "vaughan": [293, 474], "vaughan2003": 293, "ve": [377, 378, 380, 574], "vector": [190, 191, 192, 193, 195, 200, 201, 203, 204, 205, 482, 518, 526], "vega": 437, "vel": 471, "vel_di": [45, 504], "vela": [66, 416, 449, 471, 500], "veloc": [31, 32, 37, 45, 49, 308, 311], "ver": 482, "verbos": [11, 82, 378, 400, 574, 576], "veri": [63, 87, 91, 140, 210, 367, 376, 377, 378, 379, 382, 383, 388, 390, 391, 392, 393, 394, 395, 396, 397, 400, 401, 404, 407, 438, 446, 447, 454, 474, 476, 478, 479, 482, 487, 490, 500, 510, 514, 527, 536, 537, 571, 573, 574, 575], "verif": [100, 223, 245, 340, 343, 460, 490], "verifi": [214, 216, 235, 283, 377, 390, 476, 514], "verifywarn": 514, "verita": [97, 409, 414, 490], "versa": 191, "version": [11, 78, 85, 87, 91, 124, 180, 376, 378, 380, 381, 384, 385, 386, 387, 391, 394, 397, 403, 404, 405, 407, 408, 409, 410, 411, 412, 414, 416, 417, 418, 419, 421, 422, 427, 429, 430, 432, 435, 436, 437, 439, 440, 442, 443, 446, 448, 451, 452, 453, 454, 455, 456, 457, 459, 460, 461, 462, 463, 464, 465, 468, 469, 470, 471, 475, 476, 477, 479, 481, 482, 483, 484, 485, 487, 489, 490, 491, 492, 498, 499, 500, 512, 574], "versu": [146, 152, 283, 285, 287, 489, 508], "vert": 252, "vertex": 391, "vgnteseb": 481, "vhe": [448, 502], "via": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 67, 82, 83, 91, 103, 108, 193, 198, 208, 376, 378, 380, 385, 389, 391, 392, 393, 394, 395, 396, 398, 400, 403, 404, 405, 406, 407, 409, 410, 417, 425, 433, 435, 436, 437, 441, 442, 446, 447, 448, 449, 451, 452, 453, 454, 455, 456, 457, 459, 460, 461, 462, 463, 464, 465, 467, 468, 469, 470, 471, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 489, 490, 491, 492, 496, 498, 499, 500, 514, 518, 523, 527, 530, 531, 532, 533, 534, 535, 536, 537, 538, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 561, 562, 563, 564, 565, 566, 567, 568, 569, 571, 574, 578], "viabil": 404, "vice": 191, "victor": 432, "view": [83, 87, 91, 146, 147, 148, 149, 152, 153, 154, 155, 156, 159, 161, 163, 164, 169, 192, 193, 195, 199, 201, 204, 205, 231, 306, 310, 364, 377, 391, 418, 423, 428, 430, 437, 438, 451, 453, 457, 459, 463, 473, 477, 480, 481, 483, 489, 490, 514, 516, 517, 518, 519, 520, 521, 523, 573], "vika": 428, "vin\u00edciu": 435, "viridi": [453, 475], "virtual": [380, 407, 409, 410, 411, 574], "visibl": [87, 91, 367, 368, 385, 428, 446, 463, 491, 499, 500, 573], "vision": 382, "visit": 464, "visual": [6, 193, 205, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 391, 423, 424, 442, 443, 451, 453, 457, 459, 461, 464, 473, 479, 480, 486, 492, 499, 500, 514, 523, 528, 531, 572], "visualis": [374, 389, 391, 398, 424, 439, 453, 480, 485, 487, 489, 514], "vline": [508, 531, 532], "vmax": [102, 105, 109, 110, 367, 368, 456, 459, 461, 467, 477, 482, 483, 490, 491, 498, 499, 523], "vmin": [102, 105, 109, 110, 367, 368, 455, 459, 467, 477, 482, 483, 490, 491, 498, 499, 523], "volum": [27, 196, 200, 203], "vorokh": [433, 434], "voruganti": [435, 436], "vstack": [83, 86, 390], "vuillaum": [403, 436], "vx": [308, 311, 402], "vy": [308, 311], "vz": [308, 311], "w": [26, 31, 49, 86, 189, 202, 301, 378, 402, 455, 457, 465, 475, 481, 485, 487, 523, 575, 577], "wa": [16, 19, 20, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 59, 84, 85, 87, 90, 91, 93, 94, 102, 104, 117, 123, 125, 126, 129, 132, 168, 213, 217, 220, 221, 224, 225, 227, 228, 229, 230, 232, 233, 234, 235, 236, 237, 238, 239, 240, 242, 249, 250, 251, 252, 253, 257, 258, 259, 260, 262, 265, 266, 267, 272, 273, 370, 377, 380, 382, 383, 384, 385, 386, 387, 390, 391, 393, 394, 395, 396, 397, 398, 400, 401, 402, 403, 404, 405, 407, 417, 420, 421, 422, 423, 424, 425, 432, 436, 437, 438, 439, 440, 441, 442, 447, 449, 451, 457, 459, 461, 465, 481, 487, 489, 490, 491, 492, 500, 574], "wagner": 474, "wai": [33, 38, 83, 87, 91, 197, 286, 328, 334, 376, 377, 378, 380, 382, 383, 384, 385, 387, 388, 389, 391, 392, 393, 394, 397, 398, 401, 403, 409, 410, 411, 413, 416, 420, 436, 437, 449, 451, 453, 456, 459, 474, 476, 477, 478, 479, 481, 482, 483, 484, 486, 489, 490, 491, 492, 494, 504, 511, 513, 514, 518, 527, 572, 574, 576], "wait": [377, 406, 407], "wall": [83, 88], "want": [16, 19, 20, 26, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 82, 83, 84, 90, 104, 107, 123, 149, 175, 200, 217, 218, 221, 225, 227, 228, 229, 233, 239, 240, 242, 246, 248, 250, 251, 252, 257, 262, 264, 265, 266, 267, 270, 274, 377, 379, 380, 382, 383, 384, 387, 391, 392, 393, 395, 396, 397, 407, 408, 409, 410, 411, 413, 414, 417, 437, 448, 451, 452, 453, 454, 456, 463, 464, 467, 468, 470, 471, 473, 475, 476, 477, 479, 481, 482, 483, 484, 485, 487, 489, 490, 498, 499, 500, 518, 571, 574, 575, 576, 577, 578], "ward": 302, "warn": [11, 16, 26, 82, 84, 87, 90, 91, 104, 123, 193, 213, 214, 215, 216, 269, 270, 271, 273, 363, 402, 407, 419, 436, 441, 442, 443, 446, 454, 455, 456, 459, 460, 461, 463, 464, 467, 470, 471, 489, 490, 514, 538, 546, 574], "warn_miss": 87, "warn_with_traceback": 377, "wasn": [384, 437], "watch": [490, 578], "water": [409, 491], "watson": 418, "wavelength": 396, "wavelet": [416, 434], "wbj9t7": 455, "wc": [13, 16, 83, 102, 105, 109, 126, 167, 175, 176, 180, 191, 192, 193, 195, 200, 201, 203, 204, 205, 220, 223, 224, 232, 235, 245, 247, 258, 259, 263, 269, 273, 337, 372, 377, 383, 391, 396, 418, 419, 420, 422, 428, 436, 437, 441, 443, 451, 452, 455, 456, 457, 459, 461, 465, 468, 471, 475, 477, 480, 481, 483, 484, 485, 490, 498, 499, 500, 523, 526, 531, 532, 533, 538], "wcda": [57, 70], "wcs_geom": [200, 223, 245, 482, 527], "wcs_geom_3d": 482, "wcs_geom_cel": 482, "wcs_map": [204, 205, 370], "wcs_tile": [191, 193], "wcsax": [102, 105, 109, 110, 193, 200, 201, 205, 223, 245, 372, 374, 459, 482, 500, 530, 534, 535, 536], "wcsconfig": 16, "wcsgeom": [23, 83, 102, 105, 109, 110, 111, 113, 115, 121, 122, 132, 151, 160, 162, 172, 185, 186, 190, 191, 200, 204, 205, 219, 220, 224, 232, 235, 247, 249, 258, 259, 263, 269, 273, 378, 383, 391, 418, 421, 422, 423, 428, 441, 443, 451, 455, 456, 461, 463, 464, 465, 467, 471, 475, 477, 478, 480, 481, 482, 483, 485, 490, 491, 499, 500, 510, 512, 521, 523, 524, 527, 530, 532, 533, 534, 535], "wcslib": 377, "wcsmap": [192, 193, 195, 205, 439], "wcsndmap": [102, 105, 111, 115, 117, 132, 140, 160, 162, 165, 167, 169, 174, 175, 176, 177, 180, 185, 186, 191, 192, 193, 195, 201, 203, 204, 206, 207, 223, 245, 261, 269, 364, 370, 372, 383, 421, 422, 423, 425, 428, 430, 437, 439, 442, 443, 455, 456, 465, 475, 477, 481, 482, 490, 500, 510, 512, 520, 523], "wcsprm": 538, "wcsshape": 482, "we": [13, 19, 20, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 65, 83, 87, 88, 89, 91, 95, 101, 132, 174, 200, 203, 213, 217, 220, 221, 224, 225, 227, 228, 229, 230, 232, 233, 234, 235, 236, 237, 238, 239, 240, 242, 249, 250, 251, 252, 253, 257, 258, 259, 260, 262, 265, 266, 267, 272, 273, 277, 352, 377, 378, 380, 382, 383, 384, 386, 387, 388, 389, 390, 391, 394, 395, 396, 397, 398, 399, 400, 403, 404, 406, 407, 408, 409, 410, 411, 413, 416, 417, 418, 419, 424, 428, 430, 435, 436, 437, 438, 446, 447, 448, 449, 451, 452, 453, 454, 455, 456, 457, 459, 460, 461, 462, 463, 464, 465, 467, 468, 469, 470, 471, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 489, 490, 496, 498, 499, 500, 511, 518, 519, 521, 523, 526, 537, 540, 550, 571, 574, 575, 576, 577, 578], "weak": [396, 478, 487], "weaker": 283, "weakli": 483, "web": [87, 91, 385, 403, 406, 407, 413, 414, 428, 436, 476, 489], "webpag": [379, 385, 397, 403, 406, 436, 439], "wedg": 391, "week": [380, 385, 395, 397, 402, 406], "weekli": [383, 386, 390, 391, 468], "wegen": [436, 437], "weigh": [162, 165, 487], "weight": [67, 105, 110, 150, 151, 157, 160, 162, 165, 191, 192, 193, 195, 200, 201, 203, 204, 205, 254, 271, 405, 438, 442, 462, 487, 510, 526], "weighted_chi2_paramet": 462, "weighted_kernel": 160, "welcom": [382, 391, 490], "well": [11, 19, 20, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 56, 67, 83, 87, 91, 105, 110, 114, 116, 121, 122, 130, 191, 195, 197, 201, 203, 213, 217, 220, 221, 223, 224, 225, 227, 228, 229, 230, 232, 233, 234, 235, 236, 237, 238, 239, 240, 242, 245, 249, 250, 251, 252, 253, 257, 258, 259, 260, 262, 265, 266, 267, 272, 273, 367, 368, 376, 377, 378, 379, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 403, 404, 406, 407, 408, 409, 410, 413, 414, 417, 419, 420, 421, 422, 423, 424, 425, 428, 430, 431, 436, 437, 438, 442, 443, 447, 448, 454, 457, 462, 464, 468, 470, 473, 477, 478, 479, 480, 481, 482, 483, 485, 489, 490, 494, 498, 499, 500, 510, 511, 512, 523, 526, 527, 571, 572, 574, 576], "went": 417, "were": [16, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 84, 90, 104, 123, 136, 291, 377, 382, 383, 384, 385, 390, 392, 393, 394, 395, 396, 397, 398, 400, 402, 405, 407, 417, 420, 421, 422, 423, 424, 425, 428, 431, 436, 437, 440, 460, 471, 473, 483, 487, 489, 577], "wg": 406, "what": [13, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 46, 277, 334, 378, 383, 391, 394, 396, 397, 404, 407, 415, 465, 475, 476, 478, 479, 489, 490, 494, 499, 502, 510, 527, 559, 574, 575, 578], "whatev": [391, 393, 394, 574], "whatsnew": 406, "wheel": 394, "when": [16, 19, 20, 26, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 52, 53, 83, 84, 86, 87, 88, 89, 90, 91, 100, 101, 102, 103, 104, 105, 107, 108, 109, 110, 121, 122, 123, 124, 139, 150, 151, 157, 162, 164, 165, 175, 178, 192, 193, 195, 197, 199, 201, 204, 205, 210, 211, 217, 218, 221, 223, 225, 227, 228, 229, 233, 237, 239, 240, 242, 245, 246, 248, 250, 251, 252, 254, 257, 262, 264, 265, 266, 267, 270, 273, 274, 316, 376, 377, 378, 380, 382, 383, 384, 387, 389, 391, 392, 394, 397, 402, 403, 404, 405, 409, 410, 411, 422, 430, 431, 436, 438, 441, 442, 443, 447, 453, 457, 461, 464, 465, 468, 469, 471, 476, 479, 481, 482, 485, 486, 489, 490, 510, 512, 514, 519, 521, 525, 526, 573, 575, 576, 577, 578], "when_us": 90, "whenev": [87, 91], "where": [11, 16, 19, 20, 26, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 52, 69, 83, 84, 87, 88, 90, 91, 104, 122, 123, 124, 127, 132, 149, 150, 151, 157, 162, 165, 167, 178, 190, 191, 192, 193, 195, 197, 200, 201, 203, 204, 205, 206, 217, 218, 219, 220, 221, 222, 223, 224, 225, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 242, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 269, 270, 271, 272, 273, 274, 275, 288, 291, 294, 296, 304, 341, 378, 380, 382, 384, 385, 386, 387, 388, 389, 390, 391, 393, 395, 396, 397, 398, 399, 400, 401, 404, 405, 407, 409, 411, 413, 419, 431, 437, 446, 451, 456, 463, 464, 476, 481, 482, 483, 485, 487, 489, 490, 491, 500, 502, 510, 511, 514, 519, 526, 531, 532, 533, 536, 537, 540, 573, 574, 575, 576, 577, 578], "wherea": [383, 391, 394, 574], "whether": [16, 19, 20, 26, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 83, 84, 86, 87, 88, 90, 91, 100, 102, 104, 105, 107, 109, 110, 122, 123, 124, 125, 132, 146, 147, 148, 149, 152, 153, 154, 156, 159, 161, 163, 164, 178, 190, 191, 192, 193, 194, 195, 196, 197, 200, 201, 202, 203, 204, 205, 210, 217, 218, 221, 223, 225, 227, 228, 229, 233, 237, 239, 240, 242, 245, 246, 248, 250, 251, 252, 257, 262, 264, 265, 266, 267, 270, 271, 273, 274, 286, 304, 313, 340, 343, 345, 346, 374, 382, 384, 391, 394, 396, 397, 404, 442, 454, 467, 478, 481, 482, 500, 526, 575, 576], "which": [16, 19, 20, 26, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 41, 43, 56, 57, 59, 67, 70, 72, 77, 80, 83, 84, 85, 86, 87, 88, 89, 90, 91, 93, 94, 95, 96, 100, 101, 102, 104, 105, 107, 109, 110, 117, 119, 121, 122, 123, 124, 125, 126, 128, 129, 130, 131, 132, 133, 136, 140, 141, 142, 146, 147, 148, 149, 152, 153, 154, 156, 159, 160, 161, 162, 163, 164, 165, 167, 168, 172, 173, 178, 179, 189, 190, 191, 192, 193, 195, 196, 197, 200, 201, 203, 204, 205, 210, 217, 218, 219, 220, 221, 223, 224, 225, 227, 228, 229, 232, 233, 235, 239, 240, 242, 245, 246, 247, 248, 249, 250, 251, 252, 257, 258, 259, 261, 262, 263, 264, 265, 266, 267, 269, 270, 271, 273, 274, 277, 283, 285, 286, 287, 291, 292, 293, 295, 300, 302, 316, 326, 336, 337, 355, 364, 366, 371, 373, 376, 378, 380, 382, 383, 384, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 403, 404, 405, 407, 408, 409, 411, 412, 414, 418, 419, 420, 422, 423, 424, 425, 428, 431, 437, 439, 442, 446, 447, 448, 451, 454, 455, 456, 457, 459, 462, 463, 464, 465, 468, 470, 471, 473, 474, 476, 477, 478, 479, 481, 482, 483, 484, 485, 486, 487, 489, 490, 491, 492, 498, 499, 500, 504, 505, 510, 511, 512, 514, 516, 517, 518, 520, 521, 523, 525, 526, 527, 528, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 561, 562, 563, 564, 565, 566, 567, 571, 572, 573, 574, 575, 576, 577], "whichev": [191, 192, 193], "while": [87, 91, 105, 192, 193, 195, 197, 201, 204, 205, 377, 380, 382, 383, 384, 386, 389, 390, 392, 396, 398, 399, 401, 402, 403, 406, 407, 409, 446, 451, 453, 456, 464, 470, 471, 477, 478, 480, 481, 482, 484, 485, 510, 512, 514, 525, 527, 574], "whilst": [378, 486, 494], "whippl": 97, "whirlwind": 494, "white": [292, 366, 367, 461, 471, 479, 484, 502, 527], "whitespac": 322, "who": [403, 475, 502], "whole": [95, 117, 169, 172, 179, 182, 183, 185, 186, 191, 192, 193, 195, 204, 205, 246, 276, 285, 287, 377, 383, 389, 392, 403, 448, 451, 459, 464, 468, 471, 477, 485, 490, 492, 571], "whose": [403, 407, 464, 520, 532], "why": [377, 378, 382, 384, 391, 479, 527], "wide": [384, 403, 404, 418, 437, 449, 460, 573], "wider": [469, 483, 521], "widget": [192, 193, 195, 201, 204, 205, 459, 467, 482, 498, 499], "width": [16, 27, 68, 83, 87, 91, 102, 105, 109, 110, 111, 112, 114, 115, 116, 117, 127, 132, 149, 150, 151, 154, 157, 160, 162, 165, 167, 172, 177, 190, 191, 192, 193, 194, 195, 196, 197, 200, 201, 202, 203, 204, 205, 220, 223, 224, 232, 234, 235, 245, 247, 258, 259, 261, 263, 269, 271, 273, 367, 368, 393, 400, 438, 452, 453, 455, 456, 457, 459, 461, 462, 463, 464, 465, 467, 468, 471, 475, 476, 477, 480, 481, 482, 483, 485, 490, 491, 498, 499, 500, 521, 523, 524, 525, 526, 527, 531, 532, 533, 535, 536, 537], "width_err": 476, "width_error": 68, "width_min": 200, "width_pix": [191, 192, 193], "widthconfig": 16, "wiki": [34, 83, 88, 428, 489, 492], "wikipedia": [34, 83, 88, 333, 391, 395], "wilei": [134, 143], "wilk": [283, 512, 576], "willing": 380, "wind": [50, 457, 462, 485, 505], "window": [112, 376, 377, 384, 394, 407, 408, 409, 411, 417, 433, 437, 455, 476, 573, 574, 576], "wise": [19, 20, 26, 87, 91, 140, 141, 193, 217, 218, 219, 220, 221, 222, 223, 224, 225, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 242, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 269, 270, 271, 272, 273, 274, 275, 405, 430, 457, 459, 510], "wish": [200, 380, 395, 462, 479], "with_bbox": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40], "with_bounding_box": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40], "with_units_from_data": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40], "withdraw": [387, 388, 389, 392, 399, 401], "withdrawn": [381, 382, 387, 388, 389, 392, 399, 401], "within": [125, 128, 140, 191, 205, 222, 223, 224, 230, 234, 235, 236, 237, 238, 245, 253, 258, 260, 261, 272, 275, 376, 377, 378, 382, 386, 391, 393, 394, 395, 396, 397, 400, 402, 403, 405, 407, 408, 409, 411, 431, 434, 436, 440, 442, 452, 453, 459, 462, 468, 469, 470, 473, 476, 478, 480, 481, 482, 485, 486, 490, 494, 500, 510, 513, 514, 573], "without": [13, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 129, 152, 190, 191, 196, 200, 203, 374, 377, 380, 382, 385, 387, 391, 392, 393, 394, 396, 401, 407, 418, 419, 423, 452, 455, 459, 460, 473, 475, 481, 482, 483, 498, 514, 525, 526, 527, 569, 574, 576], "without_units_for_data": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40], "wl": [26, 475], "wo": 471, "wobbl": [95, 470, 489], "wobbleregionfind": 430, "wobbleregionsfind": 453, "wolfram": [331, 332], "women": 433, "won": [87, 91, 117, 121, 125, 129, 132, 349, 402, 459, 482, 489, 577], "wong": 420, "wood": [384, 434, 436, 437], "word": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 514], "work": [11, 13, 16, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 87, 91, 100, 124, 202, 341, 376, 377, 378, 380, 382, 384, 385, 386, 387, 388, 389, 391, 392, 393, 394, 395, 396, 397, 399, 402, 403, 406, 407, 408, 409, 410, 412, 413, 414, 416, 417, 418, 419, 420, 422, 423, 429, 432, 433, 434, 435, 436, 437, 438, 439, 446, 448, 449, 451, 452, 453, 454, 455, 456, 457, 459, 460, 461, 462, 463, 464, 465, 467, 468, 469, 470, 471, 473, 475, 476, 477, 479, 480, 481, 482, 483, 484, 485, 487, 489, 490, 491, 492, 498, 499, 500, 510, 514, 524, 526, 538, 540, 546, 562, 568, 569, 574], "workaround": 394, "workflow": [380, 385, 386, 393, 398, 402, 407, 422, 452, 457, 494, 498, 499, 515], "workshop": 386, "workspac": 380, "world": [83, 203, 223, 245, 377, 383, 461, 500, 526], "worst": 380, "worth": [377, 502], "would": [16, 84, 87, 90, 91, 95, 104, 123, 192, 193, 195, 201, 204, 205, 377, 380, 383, 384, 385, 388, 389, 391, 392, 393, 394, 395, 396, 397, 398, 401, 403, 404, 419, 428, 449, 451, 454, 455, 467, 479, 482, 483, 485, 487, 490, 527], "wouldn": 391, "wrap": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 197, 257, 312, 391, 421], "wrap_at": 388, "wrap_coord": 197, "wrapper": [56, 246, 257, 316, 391, 392, 419, 422, 502, 514], "write": [11, 15, 16, 26, 82, 86, 87, 88, 91, 100, 101, 102, 105, 107, 109, 110, 122, 124, 146, 147, 148, 149, 150, 151, 152, 153, 154, 156, 157, 159, 160, 161, 162, 163, 164, 165, 192, 193, 195, 199, 201, 204, 205, 211, 223, 237, 245, 269, 270, 271, 272, 273, 346, 355, 378, 380, 386, 387, 388, 389, 390, 391, 393, 394, 396, 397, 399, 400, 401, 403, 404, 405, 407, 413, 416, 422, 425, 430, 432, 435, 436, 437, 438, 443, 446, 451, 459, 460, 463, 465, 480, 484, 485, 489, 490, 496, 498, 499, 514, 519, 575, 577], "write_arf": 107, "write_bkg": 107, "write_covari": [15, 100, 211, 223, 245], "write_dataset": 15, "write_ds9": 485, "write_model": 15, "write_pha": 107, "write_rmf": 107, "writeabl": 405, "writer": [87, 91, 397, 404], "writeto": [86, 146, 147, 148, 152, 153, 154, 156, 159, 161, 163, 164, 463], "written": [88, 100, 101, 102, 105, 107, 109, 110, 122, 124, 150, 151, 157, 162, 165, 192, 193, 195, 199, 201, 204, 205, 207, 377, 378, 380, 382, 386, 387, 397, 403, 405, 440, 446, 464, 484, 487, 502, 510, 511, 514, 527, 573], "wrong": [377, 426, 440, 441, 442], "wrote": 403, "wrt": [83, 162, 165, 377, 395, 470, 569], "wstat": [105, 110, 297, 298, 389, 416, 434, 435, 447, 451, 452, 454, 457, 461, 471, 477, 487, 510, 573], "wstatcountsstatist": [471, 576], "wt": [26, 475], "wun": 420, "www": [26, 67, 87, 91, 134, 143, 397, 489, 514], "wyatt": [416, 573], "x": [19, 20, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 46, 67, 68, 87, 91, 102, 109, 127, 134, 140, 141, 143, 147, 197, 201, 202, 210, 213, 215, 217, 220, 221, 224, 225, 227, 228, 229, 230, 232, 233, 234, 235, 236, 237, 238, 239, 240, 242, 249, 250, 251, 252, 253, 257, 258, 259, 260, 262, 265, 266, 267, 272, 273, 286, 292, 293, 296, 307, 308, 309, 311, 315, 317, 322, 331, 366, 369, 370, 377, 378, 382, 384, 385, 386, 391, 402, 406, 409, 411, 449, 454, 455, 461, 464, 471, 473, 474, 476, 479, 480, 482, 487, 490, 500, 508, 514, 531, 532, 574, 576], "x27": [478, 480], "x86_64": [446, 448, 451, 452, 453, 454, 455, 456, 457, 459, 460, 461, 462, 463, 464, 465, 468, 469, 470, 471, 475, 476, 477, 479, 481, 482, 483, 484, 485, 487, 489, 490, 491, 492, 498, 499, 500], "x_": 127, "x_0": [192, 193, 195, 201, 204, 205], "x_1": 316, "x_2": 316, "x_3": 316, "x_bkg": 471, "x_edg": 128, "x_high": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40], "x_i": [192, 193, 195, 201, 204, 205], "x_j": 127, "x_low": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40], "x_max": [127, 329, 331, 465], "x_min": [127, 329, 331, 465], "x_n": [192, 193, 195, 201, 204, 205], "x_r_0": 235, "x_ref": [127, 465], "x_sigma": 232, "x_stddev": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40], "x_valu": [210, 479], "xarg": 377, "xaxi": [478, 514], "xerr": [446, 473, 487], "xf": 489, "xfail": 377, "xlabel": [378, 442, 457, 470, 473, 487, 490, 506, 507, 508, 531, 568], "xlim": [364, 459, 487, 490, 508], "xmax": [17, 18, 21, 22, 24, 25, 27, 201, 405], "xmin": [17, 18, 21, 22, 24, 25, 27, 201, 405], "xml": [386, 387, 388, 421, 435, 437, 489, 502], "xmltodict": [429, 489], "xref": 127, "xspec": [225, 274, 301, 435, 447, 575], "xunit": [453, 540], "xviii": 397, "xx": [388, 403], "xxx": [87, 91, 382, 403], "xxx_by_coord": 482, "xxxx": 514, "xy": [451, 461, 465, 531], "xy_posit": [33, 34, 38], "xytext": 531, "xyz": 406, "y": [19, 20, 26, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 46, 68, 87, 91, 140, 141, 147, 197, 210, 217, 218, 221, 225, 227, 228, 229, 233, 239, 240, 242, 246, 248, 250, 251, 252, 257, 262, 264, 265, 266, 267, 270, 274, 307, 308, 309, 311, 315, 317, 369, 377, 391, 402, 409, 411, 442, 446, 455, 461, 464, 473, 479, 487, 508, 514], "y7iddgcm": 454, "y_high": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40], "y_low": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40], "y_stddev": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40], "y_valu": [210, 479], "yaml": [11, 15, 16, 20, 26, 84, 90, 99, 100, 101, 102, 104, 105, 109, 110, 122, 123, 217, 218, 219, 220, 221, 222, 223, 224, 225, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 242, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 269, 270, 271, 272, 273, 274, 275, 283, 340, 343, 345, 346, 376, 385, 386, 388, 389, 390, 393, 394, 399, 404, 405, 407, 408, 420, 421, 422, 425, 430, 439, 443, 446, 448, 451, 453, 454, 455, 456, 457, 459, 460, 461, 462, 463, 464, 465, 468, 469, 470, 471, 475, 476, 477, 479, 481, 482, 483, 484, 485, 487, 489, 490, 491, 492, 499, 500, 513, 571, 572, 573, 574], "yaml_str": [223, 245, 452], "yaxi": [449, 478, 514], "ydg6ldhq": 473, "ye": 407, "year": [45, 61, 65, 78, 377, 382, 384, 385, 387, 394, 397, 398, 402, 404, 407, 434, 436, 437, 460, 462, 476, 489, 506, 507, 508, 509], "yearli": [410, 435], "yellow": 367, "yerr": [471, 473], "yet": [89, 376, 377, 380, 382, 384, 391, 394, 397, 398, 444, 449, 452, 498, 578], "yield": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 82, 83, 88, 92, 192, 193, 195, 201, 204, 205, 341, 384, 390, 391, 396, 398, 400, 405, 483, 575, 576, 577], "yk04": [45, 48], "yk04b": 48, "ylabel": [378, 470, 473, 487, 490, 506, 507, 508, 531, 568], "ylim": [364, 447, 457, 487, 490, 506, 508, 547, 556, 557, 558], "ymax": [531, 532], "ymin": [531, 532], "yml": [380, 394, 406, 407, 408, 409, 411, 436], "you": [16, 19, 20, 26, 67, 82, 83, 84, 87, 90, 91, 94, 101, 104, 107, 123, 124, 140, 147, 149, 152, 175, 192, 193, 195, 201, 204, 205, 210, 217, 218, 221, 225, 227, 228, 229, 233, 239, 240, 242, 246, 248, 250, 251, 252, 257, 262, 264, 265, 266, 267, 270, 274, 276, 283, 376, 377, 378, 379, 380, 382, 384, 387, 391, 394, 395, 406, 407, 408, 409, 410, 411, 412, 413, 414, 417, 418, 419, 428, 436, 437, 438, 447, 448, 449, 451, 452, 453, 454, 456, 457, 459, 461, 463, 464, 467, 469, 470, 471, 473, 476, 477, 478, 479, 481, 482, 483, 484, 485, 487, 489, 490, 491, 492, 494, 498, 499, 500, 510, 511, 514, 517, 521, 525, 548, 571, 574, 575, 576, 577, 578], "your": [16, 19, 20, 26, 84, 90, 99, 104, 123, 217, 218, 221, 225, 227, 228, 229, 233, 239, 240, 242, 246, 248, 250, 251, 252, 257, 262, 264, 265, 266, 267, 270, 274, 376, 377, 378, 380, 382, 384, 407, 408, 409, 410, 411, 413, 414, 417, 418, 419, 422, 423, 428, 437, 438, 446, 447, 448, 449, 451, 453, 454, 455, 456, 457, 459, 460, 461, 462, 463, 464, 465, 467, 468, 469, 470, 471, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 489, 490, 491, 492, 494, 496, 498, 499, 500, 509, 514, 530, 531, 532, 533, 534, 535, 536, 537, 538, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 561, 562, 563, 564, 565, 566, 567, 568, 569, 571, 573, 576], "yourself": [574, 575], "yr": [45, 52, 53, 504, 506, 507, 508], "yscale": [457, 566], "yt": 377, "yu": 420, "yunit": [451, 453, 475, 476, 490, 551], "yusifovkucuk2004": [28, 29, 30, 35, 36, 40, 48], "yusifovkucuk2004b": [28, 29, 30, 35, 36, 39, 48], "yve": 436, "yy": 403, "yyyi": 403, "z": [19, 20, 26, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 41, 46, 87, 91, 307, 308, 311, 402, 403, 409, 411, 475, 504, 540], "z8ccqpdl": 473, "z_0": 29, "z_high": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40], "z_low": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40], "zabalza": 432, "zanin": [436, 437], "zd": 83, "zen": 486, "zen_pnt": 486, "zenith": [446, 460, 486, 489, 490, 491, 519], "zenith_angl": [83, 404, 490, 500], "zenodo": [403, 430, 489], "zero": [52, 53, 67, 87, 91, 100, 102, 105, 109, 110, 132, 140, 149, 150, 151, 154, 157, 162, 178, 192, 193, 195, 201, 204, 205, 249, 271, 273, 316, 322, 334, 377, 421, 424, 439, 476, 481, 482, 487, 577], "zg7faoa3": 473, "zh6p5luc": 473, "zhao": [27, 443], "zhen": [134, 143], "zip": [392, 405, 406, 446, 447, 448, 449, 451, 452, 453, 454, 455, 456, 457, 459, 460, 461, 462, 463, 464, 465, 467, 468, 469, 470, 471, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 489, 490, 491, 492, 494, 496, 498, 499, 500, 508, 528, 530, 531, 532, 533, 534, 535, 536, 537, 538, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 561, 562, 563, 564, 565, 566, 567, 568, 569], "zl": [26, 475], "zone": 471, "zsh": 378, "zt": [26, 475], "z\u00e9": 435, "\u00e0": 434, "\u0261\u00e6m\u0259pa\u026a": 514, "\u03b3": [136, 502, 573], "\u03c3": 462}, "titles": ["analysis - High level interface", "astro - Astrophysics", "catalog - Source catalogs", "data - DL3 data and observations", "datasets - Reduced datasets", "estimators - High level estimators", "API reference", "irf - Instrument response functions", "makers - Data reduction", "maps - Sky maps", "modeling - Models and fitting", "scripts - Command line tools", "stats - Statistics", "utils - Utilities", "visualization - Plotting features", "Analysis", "AnalysisConfig", "BurkertProfile", "DMProfile", "DarkMatterAnnihilationSpectralModel", "DarkMatterDecaySpectralModel", "EinastoProfile", "IsothermalProfile", "JFactory", "MooreProfile", "NFWProfile", "PrimaryFlux", "ZhaoProfile", "CaseBattacharya1998", "Exponential", "FaucherKaspi2006", "FaucherKaspi2006VelocityBimodal", "FaucherKaspi2006VelocityMaxwellian", "FaucherSpiral", "LogSpiral", "Lorimer2006", "Paczynski1990", "Paczynski1990Velocity", "ValleeSpiral", "YusifovKucuk2004", "YusifovKucuk2004B", "add_observed_parameters", "add_pulsar_parameters", "add_pwn_parameters", "add_snr_parameters", "make_base_catalog_galactic", "make_catalog_random_positions_cube", "make_catalog_random_positions_sphere", "radial_distributions", "velocity_distributions", "PWN", "Pulsar", "SNR", "SNRTrueloveMcKee", "SimplePulsar", "CATALOG_REGISTRY", "SourceCatalog", "SourceCatalog1LHAASO", "SourceCatalog2FHL", "SourceCatalog2HWC", "SourceCatalog2PC", "SourceCatalog3FGL", "SourceCatalog3FHL", "SourceCatalog3HWC", "SourceCatalog3PC", "SourceCatalog4FGL", "SourceCatalogGammaCat", "SourceCatalogHGPS", "SourceCatalogLargeScaleHGPS", "SourceCatalogObject", "SourceCatalogObject1LHAASO", "SourceCatalogObject2FHL", "SourceCatalogObject2HWC", "SourceCatalogObject2PC", "SourceCatalogObject3FGL", "SourceCatalogObject3FHL", "SourceCatalogObject3HWC", "SourceCatalogObject3PC", "SourceCatalogObject4FGL", "SourceCatalogObjectGammaCat", "SourceCatalogObjectHGPS", "SourceCatalogObjectHGPSComponent", "DataStore", "EventList", "EventListMetaData", "FixedPointingInfo", "GTI", "HDUIndexTable", "Observation", "ObservationFilter", "ObservationMetaData", "ObservationTable", "Observations", "ObservationsEventsSampler", "PointingInfo", "PointingMode", "get_irfs_features", "observatory_locations", "DATASET_REGISTRY", "Dataset", "Datasets", "FluxPointsDataset", "MapDataset", "MapDatasetEventSampler", "MapDatasetMetaData", "MapDatasetOnOff", "OGIPDatasetReader", "OGIPDatasetWriter", "ObservationEventSampler", "SpectrumDataset", "SpectrumDatasetOnOff", "apply_edisp", "create_map_dataset_from_observation", "create_map_dataset_geoms", "split_dataset", "apply_edisp", "split_dataset", "ASmoothMapEstimator", "ESTIMATOR_REGISTRY", "EnergyDependentMorphologyEstimator", "Estimator", "ExcessMapEstimator", "FluxMaps", "FluxMetaData", "FluxPoints", "FluxPointsEstimator", "FluxProfileEstimator", "ImageProfile", "ImageProfileEstimator", "LightCurveEstimator", "ParameterEstimator", "SensitivityEstimator", "TSMapEstimator", "combine_flux_maps", "combine_significance_maps", "compute_lightcurve_discrete_correlation", "compute_lightcurve_doublingtime", "compute_lightcurve_fpp", "compute_lightcurve_fvar", "estimate_exposure_reco_energy", "find_peaks", "find_peaks_in_flux_map", "get_combined_flux_maps", "get_combined_significance_maps", "get_rebinned_axis", "resample_energy_edges", "Background2D", "Background3D", "BackgroundIRF", "EDispKernel", "EDispKernelMap", "EDispMap", "EffectiveAreaTable2D", "EnergyDependentMultiGaussPSF", "EnergyDispersion2D", "FoVAlignment", "IRF", "IRFMap", "IRF_REGISTRY", "PSF3D", "PSFKernel", "PSFKing", "PSFMap", "ParametricPSF", "RadMax2D", "RecoPSFMap", "load_irf_dict_from_file", "AdaptiveRingBackgroundMaker", "DatasetsMaker", "FoVBackgroundMaker", "MAKER_REGISTRY", "Maker", "MapDatasetMaker", "PhaseBackgroundMaker", "ReflectedRegionsBackgroundMaker", "ReflectedRegionsFinder", "RegionsFinder", "RingBackgroundMaker", "SafeMaskMaker", "SpectrumDatasetMaker", "WobbleRegionsFinder", "make_counts_rad_max", "make_edisp_kernel_map", "make_edisp_map", "make_effective_livetime_map", "make_map_background_irf", "make_map_exposure_true_energy", "make_observation_time_map", "make_psf_map", "make_theta_squared_table", "Geom", "HpxGeom", "HpxMap", "HpxNDMap", "LabelMapAxis", "Map", "MapAxes", "MapAxis", "MapCoord", "Maps", "RegionGeom", "RegionNDMap", "TimeMapAxis", "WcsGeom", "WcsMap", "WcsNDMap", "containment_radius", "containment_region", "Covariance", "CovarianceResult", "Fit", "FitResult", "OptimizeResult", "Parameter", "Parameters", "PriorParameter", "PriorParameters", "BrokenPowerLawSpectralModel", "CompoundSpectralModel", "ConstantFluxSpatialModel", "ConstantSpatialModel", "ConstantSpectralModel", "ConstantTemporalModel", "DatasetModels", "DiskSpatialModel", "EBLAbsorptionNormSpectralModel", "EBL_DATA_BUILTIN", "ExpCutoffPowerLaw3FGLSpectralModel", "ExpCutoffPowerLawNormSpectralModel", "ExpCutoffPowerLawSpectralModel", "ExpDecayTemporalModel", "FoVBackgroundModel", "GaussianSpatialModel", "GaussianSpectralModel", "GaussianTemporalModel", "GeneralizedGaussianSpatialModel", "GeneralizedGaussianTemporalModel", "LightCurveTemplateTemporalModel", "LinearTemporalModel", "LogParabolaNormSpectralModel", "LogParabolaSpectralModel", "MODEL_REGISTRY", "MeyerCrabSpectralModel", "Model", "ModelBase", "Models", "NaimaSpectralModel", "PiecewiseNormSpatialModel", "PiecewiseNormSpectralModel", "PointSpatialModel", "PowerLaw2SpectralModel", "PowerLawNormSpectralModel", "PowerLawSpectralModel", "PowerLawTemporalModel", "Prior", "SPATIAL_MODEL_REGISTRY", "SPECTRAL_MODEL_REGISTRY", "ScaleSpectralModel", "Shell2SpatialModel", "ShellSpatialModel", "SineTemporalModel", "SkyModel", "SmoothBrokenPowerLawSpectralModel", "SpatialModel", "SpectralModel", "SuperExpCutoffPowerLaw3FGLSpectralModel", "SuperExpCutoffPowerLaw4FGLDR3SpectralModel", "SuperExpCutoffPowerLaw4FGLSpectralModel", "TEMPORAL_MODEL_REGISTRY", "TemplateNDSpatialModel", "TemplateNDSpectralModel", "TemplateNPredModel", "TemplatePhaseCurveTemporalModel", "TemplateSpatialModel", "TemplateSpectralModel", "TemporalModel", "create_cosmic_ray_spectral_model", "create_crab_spectral_model", "create_fermi_isotropic_diffuse_model", "integrate_spectrum", "read_hermes_cube", "scale_plot_flux", "read_hermes_cube", "select_nested_models", "stat_profile_ul_scipy", "CashCountsStatistic", "TimmerKonig_lightcurve_simulator", "WStatCountsStatistic", "cash", "cash_sum_cython", "compute_chisq", "compute_flux_doubling", "compute_fpp", "compute_fvar", "cstat", "discrete_correlation", "f_cash_root_cython", "get_wstat_gof_terms", "get_wstat_mu_bkg", "norm_bounds_cython", "structure_function", "wstat", "hierarchical_clustering", "standard_scaler", "D_SUN_TO_GALACTIC_CENTER", "cartesian", "fov_to_sky", "galactic", "motion_since_birth", "polar", "sky_to_fov", "velocity_glon_glat", "HDULocation", "LazyFitsData", "earth_location_from_dict", "trapz_loglog", "ScaledRegularGridInterpolator", "interpolate_profile", "interpolation_scale", "BACKEND_DEFAULT", "METHOD_DEFAULT", "METHOD_KWARGS_DEFAULT", "N_JOBS_DEFAULT", "POOL_KWARGS_DEFAULT", "multiprocessing_manager", "run_multiprocessing", "InverseCDFSampler", "draw", "get_random_state", "normalize", "pdf", "sample_powerlaw", "sample_sphere", "sample_sphere_distance", "sample_times", "compound_region_to_regions", "make_concentric_annulus_sky_regions", "make_orthogonal_rectangle_sky_regions", "region_to_frame", "regions_to_compound_region", "from_yaml", "get_images_paths", "make_path", "read_yaml", "recursive_merge_dicts", "to_yaml", "write_yaml", "hstack_columns", "table_row_to_dict", "table_standardise_units_copy", "table_standardise_units_inplace", "Checker", "assert_quantity_allclose", "assert_skycoord_allclose", "assert_time_allclose", "mpl_plot_check", "requires_data", "requires_dependency", "absolute_time", "time_ref_from_dict", "time_ref_to_dict", "time_relative_to_ref", "standardise_unit", "unit_from_fits_image_hdu", "MapPanelPlotter", "add_colorbar", "annotate_heatmap", "colormap_hess", "colormap_milagro", "plot_contour_line", "plot_distribution", "plot_heatmap", "plot_map_rgb", "plot_npred_signal", "plot_spectrum_datasets_off_regions", "plot_theta_squared_table", "Dependencies", "Developer How To", "Documentation How To", "Developer guide", "How to contribute to Gammapy", "PIGs", "PIG 1 - PIG purpose and guidelines", "PIG 2 - Organization of low level analysis code", "PIG 3 - Plan for dropping Python 2.7 support", "PIG 4 - Setup for tutorial notebooks and data", "PIG 5 - Gammapy 1.0 roadmap", "PIG 6 - CTA observation handling", "PIG 7 - Models", "PIG 8 - Datasets", "PIG 9 - Event sampling", "PIG 10 - Regions", "PIG 11 - Light curves", "PIG 12 - High level interface", "PIG 13 - Gammapy dependencies and distribution", "PIG 14 - Uncertainty estimation", "PIG 16 - Gammapy package structure", "PIG 18 - Documentation", "PIG 19 - Gammapy package structure follow up", "PIG 20 - Global Model API", "PIG 21 - Models improvements", "PIG 22 - Unified flux estimators API", "PIG 23 - Gammapy release cycle and version numbering", "PIG 24 - Authorship policy", "PIG 25 - Metadata container for Gammapy", "PIG 26 - Model Priors API", "How to make a Gammapy release", "Project setup", "Virtual Environments", "Getting started", "Installation", "Recommended Setup", "Troubleshooting", "Using Gammapy", "Gammapy", "Release notes", "0.1 (Aug 25, 2014)", "0.10 (Jan 28, 2019)", "0.11 (Mar 29, 2019)", "0.12 (May 30, 2019)", "0.13 (Jul 26, 2019)", "0.14 (Sep 30, 2019)", "0.15 (Dec 3, 2019)", "0.16 (Feb 1, 2020)", "0.17 (Apr 1, 2020)", "0.18 (Nov 4th, 2020)", "0.18.1 (Nov 6th, 2020)", "0.18.2 (Nov 19th, 2020)", "0.19 (Nov 22nd, 2021)", "0.2 (Apr 13, 2015)", "0.20 (May 12th, 2022)", "0.20.1 (June 16th, 2022)", "0.3 (Aug 13, 2015)", "0.4 (Apr 20, 2016)", "0.5 (Nov 22, 2016)", "0.6 (Apr 28, 2017)", "0.7 (Feb 28, 2018)", "0.8 (Sep 23, 2018)", "0.9 (Nov 29, 2018)", "1.0 (November 10th, 2022)", "1.0.1 (March 14th, 2023)", "1.0.2 (December 6th, 2023)", "1.1 (June 13th 2023)", "1.2 (February 29th 2024)", "1.3 (unreleased)", "Computation times", "Point source sensitivity", "Account for spectral absorption due to the EBL", "Spectral analysis of extended sources", "Flux point fitting", "Computation times", "Spectral analysis", "Spectral analysis with the HLI", "Spectral analysis with energy-dependent directional cuts", "1D spectrum simulation", "Source detection and significance maps", "2D map fitting", "Ring background map", "Computation times", "3D detailed analysis", "Multi instrument joint 3D and 1D analysis", "Basic image exploration and fitting", "Morphological energy dependence estimation", "Event sampling", "Sample a source with energy-dependent temporal evolution", "Flux Profile Estimation", "Computation times", "3D map simulation", "Light curves", "Light curves for flares", "Simulating and fitting a time varying source", "Pulsar analysis", "Computation times", "Time resolved spectroscopy estimator", "Estimation of time variability in a lightcurve", "Dark matter spatial and spectral models", "Source catalogs", "Datasets - Reduced data, IRFs, models", "Estimators", "Fitting", "Using Gammapy IRFs", "Makers - Data reduction", "Maps", "Mask maps", "Modelling", "Models", "Observational clustering", "Priors", "Computation times", "CTAO with Gammapy", "Fermi-LAT with Gammapy", "HAWC with Gammapy", "H.E.S.S. with Gammapy", "Computation times", "Tutorials", "Computation times", "Survey Map Script", "Computation times", "High level interface", "Low level API", "Data structures", "Computation times", "Dark matter", "Astrophysics", "Astrophysical source population models", "Astrophysical source models", "Pulsar Source Models", "Pulsar Wind Nebula Source Models", "Supernova Remnant Models", "Source catalogs", "Datasets (DL4)", "Data access and selection (DL3)", "Estimators (DL4 to DL5, and DL6)", "High Level Analysis Interface", "How To", "User guide", "Effective area", "Background", "Energy Dispersion", "Instrument Response Functions (DL3)", "Point Spread Function", "FoV background", "Data reduction (DL3 to DL4)", "Reflected regions background", "Ring background", "HEALPix-based maps", "Sky maps (DL4)", "RegionGeom and RegionNDMap", "Model gallery", "Computation times", "Constant spatial model", "Disk spatial model", "Gaussian spatial model", "Generalized gaussian spatial model", "Piecewise norm spatial model", "Point spatial model", "Shell spatial model", "Shell2 spatial model", "Template spatial model", "Computation times", "EBL absorption spectral model", "Broken power law spectral model", "Compound spectral model", "Constant spectral model", "Exponential cutoff power law spectral model", "Exponential cutoff power law spectral model used for 3FGL", "Exponential cutoff power law norm spectral model", "Gaussian spectral model", "Log parabola spectral model", "Log parabola spectral norm model", "Naima spectral model", "Piecewise  norm spectral model", "Power law spectral model", "Power law 2 spectral model", "Power law norm spectral model", "Smooth broken power law spectral model", "Super exponential cutoff power law model used for 3FGL", "Super Exponential Cutoff Power Law Model used for 4FGL-DR3", "Super Exponential Cutoff Power Law Model used for 4FGL-DR1 (and DR2)", "Template spectral model", "Computation times", "Constant temporal model", "ExpDecay temporal model", "Gaussian temporal model", "Generalized Gaussian temporal model", "Linear temporal model", "PowerLaw temporal model", "Sine temporal model", "Phase curve temporal model", "Light curve temporal model", "Computation times", "Modeling and Fitting (DL4 to DL5)", "Gammapy analysis workflow and package structure", "Glossary and references", "Command line tools", "Fit statistics", "Statistical utility functions", "Derivation of the WStat formula", "Utility functions", "Visualization"], "titleterms": {"": [417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 430, 431, 433, 434, 435, 436, 437, 438, 452, 464, 492, 498], "0": [386, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441], "1": [382, 386, 405, 415, 416, 423, 424, 426, 431, 439, 440, 441, 442, 443, 444, 487], "10": [391, 415, 417], "10th": 439, "11": [392, 415, 418], "12": [393, 415, 419], "12th": 430, "13": [394, 415, 420, 429, 432], "13th": 442, "14": [395, 415, 421], "14th": 440, "15": [415, 422], "16": [396, 415, 423], "16th": 431, "17": [415, 424], "18": [397, 415, 425, 426, 427], "19": [398, 415, 428], "19th": 427, "1d": [452, 454, 460, 468, 469, 494], "1dc": 489, "2": [383, 384, 405, 415, 427, 429, 441, 443, 487, 553], "20": [399, 415, 430, 431, 433], "2014": 416, "2015": [429, 432], "2016": [433, 434], "2017": 435, "2018": [436, 437, 438], "2019": [417, 418, 419, 420, 421, 422], "2020": [423, 424, 425, 426, 427], "2021": 428, "2022": [430, 431, 439], "2023": [440, 441, 442], "2024": 443, "21": 400, "2155": 478, "22": [401, 434], "22nd": 428, "23": [402, 437], "24": 403, "25": [404, 416], "26": [405, 420], "28": [417, 435, 436], "29": [418, 438], "29th": 443, "2d": [456, 494], "3": [384, 405, 415, 422, 432, 444], "30": [419, 421], "304": 478, "32": 377, "3955": 405, "3d": [459, 460, 467, 468, 494], "3fgl": [545, 556], "3fhl": 460, "4": [385, 415, 433], "4122": 405, "4fgl": [557, 558], "4th": 425, "5": [386, 415, 434], "6": [387, 415, 435], "64": 377, "6th": [426, 441], "7": [384, 388, 415, 436], "8": [389, 415, 437], "9": [390, 415, 438], "A": [451, 478], "As": 520, "In": 378, "ON": [448, 453, 460], "On": 454, "The": [383, 407, 460, 462, 478, 479, 487, 511, 523], "To": [377, 378, 397, 514], "about": 487, "abov": 462, "absolute_tim": 358, "absorpt": [400, 447, 540], "abstract": [382, 383, 384, 385, 386, 387, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405], "accept": 380, "access": [455, 477, 478, 482, 491, 511], "accessor": 526, "account": 447, "action": [377, 397], "ad": 482, "adapt": 455, "adaptiveringbackgroundmak": 167, "add": [388, 484], "add_colorbar": 365, "add_observed_paramet": 41, "add_pulsar_paramet": 42, "add_pwn_paramet": 43, "add_snr_paramet": 44, "addit": [400, 405, 520, 572], "aeff_2d": 516, "against": 453, "aim": 484, "algorithm": 473, "alia": 400, "all": 469, "along": 404, "altern": [385, 388, 390, 391, 392, 393, 394, 395, 397, 398, 401, 404], "amplitud": [405, 487], "an": [377, 446, 463, 464, 477, 483], "anaconda": 410, "analysi": [0, 11, 15, 383, 386, 446, 448, 451, 452, 453, 454, 459, 460, 461, 468, 471, 494, 498, 510, 513, 572], "analysisconfig": 16, "angl": [516, 517, 518, 520], "angular": 527, "annihil": 475, "annotate_heatmap": 366, "api": [6, 377, 378, 399, 401, 404, 405, 439, 442, 443, 478, 494, 499], "apply_edisp": [111, 115], "approach": [392, 448, 449, 452, 454, 455, 456, 457, 460, 463, 464, 465, 467, 468, 469, 470, 473, 474, 479, 483, 484, 486, 498, 499], "apr": [424, 429, 433, 435], "arbitrari": 404, "area": [480, 489, 516], "argument": [377, 391], "arm": 504, "asmoothmapestim": 117, "assert": 377, "assert_quantity_allclos": 352, "assert_skycoord_allclos": 353, "assert_time_allclos": 354, "assess": [459, 479], "assign": [469, 484], "astro": [1, 502, 505], "astronomi": 392, "astrophys": [1, 503, 504, 505], "astropi": [377, 402], "asymmetr": 480, "attribut": [377, 378, 388], "aug": [416, 432], "author": 403, "authorship": 403, "avail": 476, "ax": [482, 527], "axi": [377, 519], "backend_default": 319, "background": [388, 392, 396, 399, 405, 457, 462, 463, 481, 484, 489, 490, 498, 517, 521, 522, 523, 524, 575], "background2d": 146, "background3d": 147, "backgroundirf": 148, "backgroundirfmodel": 388, "backgroundmodel": 388, "backport": 377, "base": [401, 404, 525], "basic": [461, 482], "bayesian": 474, "between": 399, "bin": [392, 446, 462, 527], "binder": 407, "bit": 377, "bkg_2d": 517, "bkg_3d": 517, "block": 474, "boundari": 483, "branch": 406, "break": 377, "broken": [378, 541, 555], "brokenpowerlawspectralmodel": 217, "bsd": 377, "bug": [430, 439, 442, 443], "bugfix": 406, "build": [378, 380, 407, 468, 469], "built": 571, "bullet": 378, "bundl": 377, "burkertprofil": 17, "butterfli": 499, "call": 388, "candid": [406, 455], "caplog": 377, "cartesian": 305, "case": [383, 387, 405, 577], "casebattacharya1998": 28, "cash": [288, 575, 576], "cash_sum_cython": 289, "cashcountsstatist": 285, "catalog": [2, 476, 483, 484, 500, 509], "catalog_registri": 55, "caveat": 575, "cell": 377, "certif": 380, "cff": 403, "chain": [451, 453], "chang": [377, 398, 439, 442, 443], "changelog": 397, "character": 474, "check": [11, 377, 378, 412, 446, 448, 451, 452, 453, 454, 455, 456, 457, 459, 460, 461, 462, 463, 464, 465, 468, 469, 470, 471, 475, 476, 477, 479, 481, 482, 483, 484, 485, 487, 489, 490, 491, 492, 498, 499, 500], "checker": 351, "chi": 462, "choos": 378, "citat": 403, "class": [0, 1, 2, 3, 4, 5, 7, 8, 9, 10, 12, 13, 14, 377, 378, 387, 388, 401, 404, 499, 520, 576], "clean": 396, "cli": 574, "click": 377, "clobber": 377, "clumpi": 502, "cluster": [13, 486], "code": [377, 378, 383, 386, 407], "codemeta": 403, "collect": 403, "colormap": 579, "colormap_hess": 367, "colormap_milagro": 368, "combin": [484, 511], "combine_flux_map": 133, "combine_significance_map": 134, "command": [11, 377, 574], "common": 478, "compar": [453, 468], "compound": [485, 542], "compound_region_to_region": 335, "compoundspectralmodel": 218, "comput": [445, 446, 450, 451, 452, 457, 458, 461, 466, 472, 479, 488, 493, 495, 497, 499, 501, 529, 539, 560, 570], "compute_chisq": 290, "compute_flux_doubl": 291, "compute_fpp": 292, "compute_fvar": 293, "compute_lightcurve_discrete_correl": 135, "compute_lightcurve_doublingtim": 136, "compute_lightcurve_fpp": 137, "compute_lightcurve_fvar": 138, "conda": 408, "confer": 403, "confid": 479, "config": [11, 456, 457, 574], "configur": [452, 459, 465, 468, 478, 498, 572], "constant": [530, 543, 561], "constantfluxspatialmodel": 219, "constantspatialmodel": 220, "constantspectralmodel": 221, "constanttemporalmodel": 222, "contain": 404, "containment_radiu": 206, "containment_region": 207, "content": [477, 527], "context": [448, 449, 451, 452, 453, 454, 455, 456, 457, 460, 462, 463, 465, 467, 468, 469, 470, 473, 474, 483, 486, 487, 498, 499], "contigu": 482, "continu": 407, "contour": 479, "contribut": [380, 403, 484], "contributor": [403, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443], "conveni": 389, "convent": 377, "convers": [377, 478], "convert": 377, "coordin": [13, 377, 388, 517, 527], "correct": 378, "correl": 457, "count": [478, 484, 490, 510, 576], "covari": [208, 479], "covarianceresult": 209, "creat": [448, 451, 456, 457, 464, 477, 478, 480, 482, 483, 499, 527], "create_cosmic_ray_spectral_model": 276, "create_crab_spectral_model": 277, "create_fermi_isotropic_diffuse_model": 278, "create_map_dataset_from_observ": 112, "create_map_dataset_geom": 113, "creation": [448, 452, 469], "cstat": 294, "cta": [387, 489], "ctao": 489, "cube": [383, 482, 494], "cumul": 448, "current": 402, "curv": [392, 468, 469, 470, 478, 568, 569], "custom": [485, 487, 571], "cut": [449, 453], "cutoff": [544, 545, 546, 556, 557, 558], "cutout": 482, "cycl": 402, "cython": [402, 407], "d_sun_to_galactic_cent": 304, "dark": [475, 502], "darkmatt": [1, 502], "darkmatterannihilationspectralmodel": 19, "darkmatterdecayspectralmodel": 20, "data": [3, 8, 377, 383, 385, 386, 392, 404, 407, 447, 448, 451, 452, 453, 459, 460, 462, 465, 468, 469, 471, 473, 477, 481, 482, 491, 494, 498, 499, 500, 511, 522, 574, 575], "dataflow": 404, "dataset": [4, 11, 99, 100, 377, 386, 389, 398, 399, 404, 446, 448, 452, 453, 456, 457, 459, 460, 464, 468, 469, 470, 477, 478, 479, 481, 483, 484, 487, 491, 498, 499, 510], "dataset_registri": 98, "datasetmodel": 223, "datasetsmak": 168, "datastor": [82, 489, 499], "dco": [380, 403], "deal": 378, "dec": 422, "decai": 475, "decemb": 441, "decis": [382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405], "default": 388, "defin": [446, 448, 451, 453, 461, 463, 464, 468, 469, 483, 499, 527], "definit": [403, 468, 522], "depend": [376, 394, 400, 430, 453, 462, 464, 485], "deprec": [377, 402], "deriv": 577, "detail": [384, 459], "detect": [398, 455, 461, 519], "detector": 517, "develop": [377, 379, 380, 384], "diagram": 387, "differ": [460, 482, 578], "diffus": 490, "dilat": 483, "direct": 453, "discrete_correl": 295, "discuss": 392, "disk": [452, 464, 498, 499, 531], "diskspatialmodel": 224, "dispers": [480, 489, 490, 518], "dissolv": 396, "distribut": [394, 492, 504], "dl3": [3, 460, 492, 511, 519, 522], "dl4": [480, 510, 512, 522, 526, 571], "dl5": [512, 571], "dl6": 512, "dmprofil": 18, "do": 377, "doc": 407, "docstr": 378, "document": [378, 380, 386, 397, 443], "doubl": 474, "download": [11, 407], "downsampl": 527, "dr1": [492, 558], "dr2": 558, "dr3": 557, "draw": 327, "driven": 574, "drop": 384, "due": 447, "durat": 481, "e": 492, "each": 462, "earli": 380, "earth_location_from_dict": 314, "ebl": [447, 540], "ebl_data_builtin": 226, "eblabsorptionnormspectralmodel": 225, "edg": 512, "edisp": 480, "edisp_2d": 518, "edispkernel": 149, "edispkernelmap": 150, "edispmap": 151, "effect": [480, 481, 489, 516], "effectiveareatable2d": 152, "einastoprofil": 21, "elaps": 578, "empti": 477, "encourag": 487, "end": 377, "energi": [400, 446, 453, 462, 464, 480, 483, 485, 489, 490, 512, 516, 517, 518, 520], "energydependentmorphologyestim": 119, "energydependentmultigausspsf": 153, "energydispersion2d": 154, "environ": 408, "eros": 483, "error": [479, 576], "estim": [5, 120, 395, 398, 401, 404, 452, 455, 462, 465, 468, 473, 474, 478, 481, 512, 522, 523, 576], "estimate_exposure_reco_energi": 139, "estimator_registri": 118, "evalu": [388, 389, 390], "event": [386, 390, 463, 464, 471, 482, 489, 490, 492, 500, 511, 519], "eventlist": 83, "eventlistmetadata": 84, "evolut": 464, "exampl": [407, 487, 510, 512, 513, 521, 522, 523, 530, 531, 532, 533, 534, 535, 536, 537, 538, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 561, 562, 563, 564, 565, 566, 567, 575], "excess": [401, 448, 457, 474, 576], "excessmapestim": 121, "exclus": [451, 452, 457, 483, 498], "execut": 574, "exemplari": 405, "exercis": [446, 449, 451, 454, 459, 461, 463, 464, 470, 473, 489, 490, 491, 492, 500], "exist": 383, "expcutoffpowerlaw3fglspectralmodel": 227, "expcutoffpowerlawnormspectralmodel": 228, "expcutoffpowerlawspectralmodel": 229, "expdecai": 562, "expdecaytemporalmodel": 230, "expect": 519, "explor": [448, 452, 461, 494], "exponenti": [29, 449, 544, 545, 546, 556, 557, 558], "expos": 388, "exposur": [480, 490], "extend": [448, 463], "extens": [378, 447], "extern": 377, "extra": 407, "extract": [457, 468, 469, 470], "extrapol": [377, 559], "f_cash_root_cython": 296, "factor": 475, "factori": 482, "factoris": 519, "faucherkaspi2006": 30, "faucherkaspi2006velocitybimod": 31, "faucherkaspi2006velocitymaxwellian": 32, "faucherspir": 33, "favor": 405, "featur": [14, 402, 406, 439, 442, 443, 478], "feb": [423, 436], "februari": 443, "fermi": [460, 490], "fermist": 502, "file": [378, 403, 452, 456, 457, 460, 489, 498, 511, 527], "fill": [482, 527], "filter": 469, "final": [382, 406, 452, 577], "find_peak": 140, "find_peaks_in_flux_map": 141, "finder": 523, "first": [406, 452], "fit": [10, 13, 210, 386, 392, 447, 448, 449, 451, 452, 453, 456, 459, 460, 461, 467, 470, 479, 483, 487, 490, 498, 499, 527, 571, 575, 576, 577], "fitresult": 211, "fix": [377, 430, 439, 442, 443], "fixedpointinginfo": 85, "fixtur": 377, "flare": 469, "float": 377, "flux": [401, 405, 446, 447, 449, 451, 452, 460, 465, 475, 476, 478, 498, 499, 500, 512], "fluxestim": 401, "fluxmap": [122, 401, 478], "fluxmetadata": 123, "fluxpoint": [124, 478], "fluxpointscollect": 401, "fluxpointsdataset": [101, 389, 477], "fluxpointsestim": [125, 512], "fluxprofileestim": 126, "fold": 388, "folder": 407, "follow": 398, "format": [377, 378, 578], "formula": 577, "forward": 388, "found": 574, "fov": [481, 521], "fov_to_ski": 306, "fovalign": 155, "fovbackgroundmak": [169, 521], "fovbackgroundmodel": 231, "fraction": 474, "freez": [402, 406, 484], "from": [377, 469, 482, 483, 484, 527], "from_yaml": 340, "fulli": 478, "function": [1, 3, 4, 5, 7, 8, 9, 10, 12, 13, 14, 377, 378, 489, 516, 517, 518, 519, 520, 576, 578], "further": [392, 447, 575], "galact": [307, 490], "galactocentr": 504, "galleri": [377, 378, 528], "gamlik": 502, "gamma": [392, 475], "gammapi": [0, 1, 2, 3, 4, 5, 7, 8, 9, 10, 11, 12, 13, 14, 377, 380, 383, 386, 394, 396, 397, 398, 402, 403, 404, 406, 407, 413, 414, 480, 489, 490, 491, 492, 502, 505, 509, 510, 511, 512, 513, 519, 521, 522, 523, 526, 571, 572, 578], "gaussian": [532, 533, 547, 563, 564], "gaussianspatialmodel": 232, "gaussianspectralmodel": 233, "gaussiantemporalmodel": 234, "gener": [377, 383, 387, 392, 403, 404, 512, 533, 564], "generalist": 401, "generalizedgaussianspatialmodel": 235, "generalizedgaussiantemporalmodel": 236, "geom": 190, "geometri": [448, 461, 468, 469, 482, 483, 498, 499, 525, 527], "get": [380, 397, 409, 447, 456, 457, 482, 503, 504, 505, 511, 526], "get_combined_flux_map": 142, "get_combined_significance_map": 143, "get_images_path": 341, "get_irfs_featur": 96, "get_random_st": 328, "get_rebinned_axi": 144, "get_wstat_gof_term": 297, "get_wstat_mu_bkg": 298, "github": 377, "given": 484, "global": 399, "glossari": 573, "good": 577, "gpl": 377, "group": 486, "gti": [86, 511], "guid": [379, 515], "guidelin": [378, 382, 383, 397], "h": 492, "halv": 474, "handl": [377, 386, 387, 388, 399, 403, 481, 578], "have": [385, 387, 392, 393, 401], "hawc": [460, 491], "hduindext": 87, "hduloc": 312, "healpix": 525, "help": 412, "helper": 389, "hess": 460, "hgp": 476, "hierarch": 486, "hierarchi": 404, "hierarchical_clust": 302, "high": [0, 5, 386, 393, 498, 513], "hli": 452, "how": [377, 378, 380, 397, 406, 482, 514], "hpxgeom": 191, "hpxmap": 192, "hpxndmap": 193, "hstack_column": 347, "i": [377, 380, 382, 465], "idea": 387, "imag": [378, 383, 391, 396, 455, 461, 482, 494], "imageprofil": 127, "imageprofileestim": 128, "implement": [387, 388, 397, 403, 405, 485, 487], "import": [377, 467], "improv": [388, 400, 430, 439, 442, 443], "inbuilt": 480, "includ": [378, 487], "index": [482, 487, 511], "info": [11, 377], "inform": [403, 476, 487, 518], "input": [377, 404, 455], "inspect": 499, "instal": [397, 409, 410, 412], "instrument": [7, 460, 519], "integr": [13, 407, 446], "integrate_spectrum": 279, "interact": 399, "interest": 462, "interfac": [0, 386, 388, 393, 498, 513, 526], "intern": 478, "interpol": [13, 377, 482], "interpolate_profil": 317, "interpolation_scal": 318, "interv": 469, "intrins": 447, "introduc": [388, 396, 398, 400, 401, 465], "introduct": [388, 391, 392, 394, 395, 397, 401, 403, 404, 446, 451, 453, 461, 471, 475, 476, 477, 481, 482, 489, 490, 491, 492, 494, 500, 502, 504, 505, 575], "inversecdfsampl": 326, "ipython": 413, "irf": [7, 156, 386, 404, 446, 477, 480, 489, 519], "irf_registri": 158, "irfmap": 157, "isothermalprofil": 22, "isotrop": 490, "issu": 412, "iter": 482, "j": 475, "jan": 417, "jfactori": 23, "joint": [459, 460, 510], "json": 403, "jul": 420, "june": [431, 442], "jupyt": [377, 409, 411, 413], "kei": 478, "kernel": 480, "labelmapaxi": [194, 482], "lat": [460, 490], "latest": 489, "law": [449, 541, 544, 545, 546, 552, 553, 554, 555, 556, 557, 558], "lazi": 389, "lazyfitsdata": 313, "lc": 468, "let": 464, "level": [0, 5, 383, 386, 393, 498, 499, 513], "li": 471, "licens": 377, "light": [392, 468, 469, 470, 478, 569], "lightcurv": [392, 463, 470, 474, 476], "lightcurveestim": [129, 512], "lightcurvetemplatetemporalmodel": 237, "like": [463, 478], "likelihood": 577, "limit": 387, "line": [11, 377, 574], "linear": 565, "lineartemporalmodel": 238, "link": 378, "list": [378, 388, 389, 390, 391, 392, 393, 394, 463, 469, 476, 482, 483, 484, 485, 500, 511], "literatur": 453, "livetim": 481, "load": [389, 446, 447, 449, 451, 453, 476, 478, 484, 491], "load_irf_dict_from_fil": 166, "locat": 377, "log": [11, 377, 449, 548, 549], "logparabolanormspectralmodel": 239, "logparabolaspectralmodel": 240, "logspir": 34, "long": 403, "loop": [448, 481, 499], "lorimer2006": 35, "low": [383, 499], "lt": 402, "ma": 471, "mai": [419, 430], "maintain": [384, 403], "mainten": 386, "major": 406, "make": [377, 380, 406, 461, 464, 471, 499], "make_base_catalog_galact": 45, "make_catalog_random_positions_cub": 46, "make_catalog_random_positions_spher": 47, "make_concentric_annulus_sky_region": 336, "make_counts_rad_max": 181, "make_edisp_kernel_map": 182, "make_edisp_map": 183, "make_effective_livetime_map": 184, "make_map_background_irf": 185, "make_map_exposure_true_energi": 186, "make_observation_time_map": 187, "make_orthogonal_rectangle_sky_region": 337, "make_path": 342, "make_psf_map": 188, "make_theta_squared_t": 189, "maker": [8, 171, 398, 404, 448, 469, 481, 498, 499, 521, 522, 523], "maker_registri": 170, "mamba": 410, "manag": [386, 410], "manual": [483, 486], "map": [9, 195, 199, 383, 386, 387, 455, 456, 457, 460, 461, 467, 471, 475, 480, 482, 483, 484, 496, 500, 512, 525, 526, 527], "mapax": 196, "mapaxi": 197, "mapcoord": [198, 526], "mapdataset": [102, 389, 459, 463, 477, 491, 510], "mapdataseteventsampl": [103, 390], "mapdatasetmak": [172, 522], "mapdatasetmetadata": 104, "mapdatasetonoff": [105, 389], "mappanelplott": 364, "mar": 418, "march": 440, "mask": [391, 451, 452, 457, 477, 483, 498], "materi": 403, "matter": [475, 502], "measur": 575, "meet": 386, "messag": 377, "met": 578, "metadata": [403, 404], "method": [378, 389, 390, 405, 474, 482, 512, 526], "method_default": 320, "method_kwargs_default": 321, "meyercrabspectralmodel": 242, "miniconda": 410, "minor": 398, "mission": 578, "model": [10, 243, 245, 386, 388, 396, 399, 400, 404, 405, 447, 448, 451, 452, 453, 456, 459, 460, 461, 463, 464, 468, 469, 470, 473, 475, 476, 477, 479, 484, 485, 487, 489, 498, 499, 500, 504, 505, 506, 507, 508, 528, 530, 531, 532, 533, 534, 535, 536, 537, 538, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 561, 562, 563, 564, 565, 566, 567, 568, 569, 571, 575], "model_registri": 241, "modelbas": 244, "modif": 483, "modifi": [377, 482, 485], "modul": [4, 5, 8, 10, 13], "mooreprofil": 24, "morpholog": 462, "morphologi": 485, "motion_since_birth": 308, "motiv": 405, "mpl_plot_check": 355, "multi": 460, "multipl": [463, 484, 487, 510], "multiprocessing_manag": 324, "n_jobs_default": 322, "naima": 550, "naimaspectralmodel": 246, "name": [377, 388, 519], "nebula": 507, "new": [377, 388, 392, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 430, 431, 433, 434, 435, 436, 437, 438, 439, 442, 443, 469], "next": [449, 451, 452, 455, 461, 468, 489, 491, 492, 498, 500], "nfwprofil": 25, "night": 468, "non": [377, 482, 527], "norm": [400, 485, 534, 546, 549, 551, 554], "norm_bounds_cython": 299, "normal": [329, 498], "notat": 576, "note": [377, 415, 451, 478, 575], "notebook": [11, 377, 385, 413], "nov": [425, 426, 427, 428, 434, 438], "novemb": 439, "now": 392, "nuisanc": 405, "number": [377, 402, 519], "numpi": 402, "o": 465, "object": [377, 378, 387, 399, 456, 457, 463, 464, 476, 478, 486], "observ": [3, 88, 92, 386, 387, 447, 451, 452, 461, 463, 464, 468, 469, 481, 486, 498, 499], "observationeventsampl": 108, "observationfilt": 89, "observationmetadata": 90, "observationseventssampl": 93, "observationt": 91, "observatory_loc": 97, "obtain": [446, 462, 470, 486], "off": [449, 451, 454, 460], "offset": [516, 517, 518, 520], "ogipdatasetread": 106, "ogipdatasetwrit": 107, "old": 407, "one": 478, "onto": 482, "open": 471, "oper": [482, 483], "optimizeresult": 212, "option": [376, 394, 479], "org": 407, "organ": [383, 392], "origin": [377, 380], "other": [377, 378, 387, 407, 410, 502], "outlin": 405, "outlook": [389, 390, 391, 393, 394, 396, 397, 398, 401], "output": 377, "over": 471, "overview": [397, 409, 462, 489, 491, 521, 523, 524], "overwrit": 377, "own": 574, "packag": [0, 1, 2, 3, 4, 5, 7, 8, 9, 10, 12, 13, 14, 396, 398, 407, 410, 430, 494, 502, 503, 572], "paczynski1990": 36, "paczynski1990veloc": 37, "panel": 579, "paper": 386, "parabola": [449, 548, 549], "parallel": [13, 389], "paramet": [213, 214, 388, 400, 405, 452, 462, 479, 484, 485, 498], "parameterestim": 130, "parametr": 388, "parametricpsf": 163, "pdf": 330, "perform": [390, 448, 489, 499], "person": 403, "perspect": 384, "phase": [471, 568], "phasebackgroundmak": 173, "phasogram": 471, "piecewis": [534, 551], "piecewisenormspatialmodel": 247, "piecewisenormspectralmodel": 248, "pig": [381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405], "pip": 410, "pixel": [377, 391, 483], "pk": 478, "plan": 384, "plot": [14, 377, 447, 451, 452, 461, 462, 465, 482, 484, 499, 527, 530, 531, 532, 533, 534, 535, 536, 537, 538, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 561, 562, 563, 564, 565, 566, 567, 579], "plot_contour_lin": 369, "plot_distribut": 370, "plot_heatmap": 371, "plot_map_rgb": 372, "plot_npred_sign": 373, "plot_spectrum_datasets_off_region": 374, "plot_theta_squared_t": 375, "png": 378, "point": [378, 405, 446, 447, 449, 451, 452, 460, 461, 463, 474, 476, 478, 489, 498, 499, 500, 512, 520, 535], "pointinginfo": 94, "pointingmod": 95, "pointspatialmodel": 249, "poisson": 575, "polar": 309, "polici": 403, "pool_kwargs_default": 323, "popul": [1, 504], "posit": [405, 487, 518], "possibl": 403, "post": 406, "power": [449, 541, 544, 545, 546, 552, 553, 554, 555, 556, 557, 558], "powerlaw": [449, 566], "powerlaw2spectralmodel": 250, "powerlawnormspectralmodel": 251, "powerlawspectralmodel": 252, "powerlawtemporalmodel": 253, "precis": 390, "predict": 510, "prepar": [392, 402, 446, 448, 464, 499], "prerequisit": [448, 449, 451, 452, 453, 454, 456, 460, 462, 463, 464, 465, 467, 468, 469, 470, 474, 479, 483, 484, 487, 498, 499], "pretti": 476, "primaryflux": 26, "print": 476, "prior": [254, 405, 487], "priorparamet": [215, 216], "produc": 491, "product": [475, 480], "profil": [447, 465, 475, 577], "project": [386, 407], "propag": 404, "propos": [385, 387, 388, 389, 390, 391, 392, 393, 395, 396, 397, 398, 399, 400, 401, 404, 448, 449, 452, 454, 455, 456, 457, 460, 463, 464, 465, 467, 468, 469, 470, 473, 474, 479, 483, 484, 486, 498, 499], "psf": [480, 490, 520], "psf3d": 159, "psf_tabl": 520, "psfkernel": 160, "psfking": 161, "psfmap": [162, 480], "public": 403, "pull": [377, 380, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443], "pulsar": [51, 471, 506, 507], "purpos": 382, "pwn": 50, "pydant": 404, "python": [377, 378, 384, 402, 413], "qualiti": [386, 407, 451, 453, 459, 479], "quantiti": [478, 486, 512], "radial": 517, "radial_distribut": 48, "radmax2d": 164, "rai": [392, 475], "random": [13, 377], "rang": [481, 522], "read": [455, 460, 464, 465, 482, 483, 484, 527], "read_hermes_cub": [280, 282], "read_yaml": 343, "recommend": [409, 411], "reconstruct": 517, "recopsfmap": 165, "recursive_merge_dict": 344, "redshift": 447, "reduc": [4, 456, 457, 477, 498, 499], "reduct": [8, 386, 392, 448, 451, 452, 453, 459, 468, 469, 473, 481, 491, 498, 499, 522, 574], "refer": [6, 397, 573, 574, 575], "reflect": [481, 523], "reflectedregionsbackgroundmak": [174, 523], "reflectedregionsfind": 175, "region": [13, 388, 391, 446, 448, 451, 453, 481, 483, 484, 523, 527], "region_to_fram": 338, "regiongeom": [200, 527], "regionndmap": [201, 527], "regions_to_compound_region": 339, "regionsfind": 176, "relat": 527, "releas": [377, 386, 402, 403, 406, 407, 415], "remark": 382, "remnant": 508, "remov": [377, 484], "renam": 377, "repositori": 407, "repr": 377, "represent": [400, 478, 530, 531, 532, 533, 534, 535, 536, 537, 538, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 561, 562, 563, 564, 565, 566, 567, 568, 569], "request": [377, 380, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443], "requir": [376, 377, 394, 404], "requires_data": 356, "requires_depend": 357, "resampl": 477, "resample_energy_edg": 145, "residu": [451, 453, 459, 499], "resolv": [398, 471, 473], "respons": [7, 519], "restructur": 397, "result": [392, 401, 446, 448, 452, 455, 462, 465, 468, 473, 478, 577], "return": [377, 378], "review": 382, "ring": [457, 481, 524], "ringbackgroundmak": 177, "rmf": 518, "road": 387, "roadmap": 386, "rotat": 391, "rst": 378, "run": [11, 380, 451, 452, 453, 462, 464, 465, 468, 498, 574], "run_multiprocess": 325, "safe": [481, 522], "safemaskmak": 178, "sampl": [390, 463, 464], "sample_powerlaw": 331, "sample_spher": 332, "sample_sphere_dist": 333, "sample_tim": 334, "sampler": 464, "save": [452, 498, 499], "scale": 578, "scale_plot_flux": 281, "scaledregulargridinterpol": 316, "scalespectralmodel": 257, "scenario": 387, "schedul": 402, "scheme": [388, 403], "script": [11, 13, 377, 413, 494, 496], "section": 397, "sed": 512, "select": [448, 452, 461, 468, 469, 473, 476, 484, 498, 499, 511], "select_nested_model": 283, "sensit": 446, "sensitivityestim": 131, "sep": [421, 437], "serial": [389, 404, 460], "serialis": [405, 452, 465, 480, 484, 485, 490, 510], "seril": 388, "set": [380, 452, 482, 498], "setup": [385, 407, 409, 411, 412, 446, 447, 448, 449, 451, 452, 453, 454, 455, 456, 457, 459, 460, 461, 462, 463, 464, 465, 468, 469, 470, 471, 473, 474, 475, 476, 477, 478, 479, 481, 482, 483, 484, 485, 487, 489, 490, 491, 492, 498, 499, 500], "sever": 377, "share": 485, "shell": 536, "shell2": 537, "shell2spatialmodel": 258, "shellspatialmodel": 259, "shorter": 400, "should": 377, "show": [461, 462, 486], "signal": 462, "signific": [448, 455, 457, 483, 576], "simplepulsar": 54, "simplifi": 400, "simul": [386, 389, 453, 454, 463, 464, 467, 470], "sine": 567, "sinetemporalmodel": 260, "singl": [378, 454], "size": 527, "skip": 377, "sky": [9, 388, 391, 461, 463, 483, 518, 526], "sky_to_fov": 310, "skycoord": 526, "skymodel": [261, 485], "slice": 482, "small": 380, "smooth": [455, 555], "smoothbrokenpowerlawspectralmodel": 262, "snr": 52, "snrtruelovemcke": 53, "solut": 404, "some": [377, 387, 483], "sourc": [1, 2, 446, 448, 451, 455, 461, 462, 463, 464, 470, 476, 483, 487, 489, 500, 504, 505, 506, 507, 509], "sourcecatalog": 56, "sourcecatalog1lhaaso": 57, "sourcecatalog2fhl": 58, "sourcecatalog2hwc": 59, "sourcecatalog2pc": 60, "sourcecatalog3fgl": 61, "sourcecatalog3fhl": 62, "sourcecatalog3hwc": 63, "sourcecatalog3pc": 64, "sourcecatalog4fgl": 65, "sourcecataloggammacat": 66, "sourcecataloghgp": 67, "sourcecataloglargescalehgp": 68, "sourcecatalogobject": 69, "sourcecatalogobject1lhaaso": 70, "sourcecatalogobject2fhl": 71, "sourcecatalogobject2hwc": 72, "sourcecatalogobject2pc": 73, "sourcecatalogobject3fgl": 74, "sourcecatalogobject3fhl": 75, "sourcecatalogobject3hwc": 76, "sourcecatalogobject3pc": 77, "sourcecatalogobject4fgl": 78, "sourcecatalogobjectgammacat": 79, "sourcecatalogobjecthgp": 80, "sourcecatalogobjecthgpscompon": 81, "sourceirfmodel": 388, "sourcemodel": 388, "spatial": [388, 400, 461, 475, 482, 485, 504, 527, 528, 530, 531, 532, 533, 534, 535, 536, 537, 538], "spatial_model_registri": 255, "spatialirfmodel": 388, "spatialmodel": 263, "special": 577, "specif": [388, 397, 476, 478], "spectra": 475, "spectral": [400, 405, 447, 448, 449, 451, 452, 453, 460, 461, 475, 485, 494, 500, 528, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 559], "spectral_model_registri": 256, "spectralirfmodel": 388, "spectralmodel": 264, "spectroscopi": 473, "spectrum": [447, 451, 453, 454, 461, 471, 481, 499], "spectrumdataset": [109, 389, 477, 510], "spectrumdatasetmak": [179, 522], "spectrumdatasetonoff": [110, 389], "sphinx": [377, 378], "spiral": 504, "split_dataset": [114, 116], "spread": [489, 520], "squar": [462, 492], "stack": [451, 457, 459, 510], "standard_scal": 303, "standardise_unit": 362, "start": [397, 409, 503, 504, 505, 511, 526], "stat": [12, 447], "stat_contour": 479, "stat_profile_ul_scipi": 284, "stat_surfac": 479, "statist": [12, 451, 483, 575, 576], "statu": [382, 387, 396, 402], "step": [452, 489, 491, 492, 572], "store": [392, 452, 518], "str": 377, "structur": [396, 398, 430, 500, 572], "structure_funct": 300, "studi": 392, "style": 383, "sub": [482, 503], "subclass": 405, "subpackag": 383, "subset": 476, "suggest": 403, "summari": [416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 459, 490], "super": [556, 557, 558], "superexpcutoffpowerlaw3fglspectralmodel": 265, "superexpcutoffpowerlaw4fgldr3spectralmodel": 266, "superexpcutoffpowerlaw4fglspectralmodel": 267, "supernova": 508, "support": [377, 384, 402, 403, 405, 480, 510], "survei": [496, 579], "symmetr": 517, "systemat": 405, "t": [455, 576], "tabl": [13, 462, 476, 478, 491, 511], "table_row_to_dict": 348, "table_standardise_units_copi": 349, "table_standardise_units_inplac": 350, "tag": 400, "target": 451, "task": [388, 389, 390, 391, 392, 393, 394], "templat": [463, 538, 559], "templatendspatialmodel": 269, "templatendspectralmodel": 270, "templatenpredmodel": 271, "templatephasecurvetemporalmodel": 272, "templatespatialmodel": 273, "templatespectralmodel": 274, "tempor": [464, 470, 485, 528, 561, 562, 563, 564, 565, 566, 567, 568, 569], "temporal_model_registri": 268, "temporalmodel": 275, "term": 403, "terminologi": 387, "test": [13, 377, 380, 462, 471], "text": 377, "theta": 492, "thi": 380, "through": 478, "thumbnail": 378, "time": [13, 386, 392, 445, 450, 458, 463, 466, 469, 470, 472, 473, 474, 488, 493, 494, 495, 497, 501, 529, 539, 560, 570, 578], "time_ref_from_dict": 359, "time_ref_to_dict": 360, "time_relative_to_ref": 361, "timemapaxi": [202, 482], "timmerkonig_lightcurve_simul": 286, "to_yaml": 345, "tool": [11, 377, 574], "tooltip": 378, "touch": 380, "trapz_loglog": 315, "troubleshoot": [412, 574], "true": [516, 518, 520], "tsmapestim": 132, "tutori": [378, 385, 397, 409, 462, 489, 491, 494], "two": 484, "type": [377, 404, 510, 512], "uncertainti": 395, "underli": [469, 527], "unfold": 405, "unfreez": 484, "unif": 401, "unifi": [388, 401], "unit": [13, 377], "unit_from_fits_image_hdu": 363, "unix": 377, "unreleas": 444, "up": [380, 396, 398], "upsampl": 527, "us": [377, 387, 405, 410, 413, 452, 462, 463, 468, 477, 479, 480, 482, 498, 499, 502, 505, 509, 510, 511, 512, 513, 519, 521, 522, 523, 526, 545, 556, 557, 558, 571], "user": [384, 515], "util": [4, 5, 8, 10, 13, 396, 572, 576, 578], "valid": 404, "valleespir": 38, "valu": [377, 405, 462, 482, 487], "vari": 470, "variabl": [1, 2, 3, 4, 5, 7, 8, 10, 13, 463, 474], "varianc": 474, "variou": 486, "veloc": 504, "velocity_distribut": 49, "velocity_glon_glat": 311, "venv": 408, "version": [377, 402, 406, 415, 467], "virtual": 408, "visual": [14, 398, 482, 527, 579], "visualis": [455, 473, 478], "volum": 527, "warn": 377, "wc": [482, 527], "wcsgeom": 203, "wcsmap": 204, "wcsndmap": 205, "we": [385, 392, 393, 401, 491], "webpag": 407, "what": [377, 380, 382, 385, 387, 392, 393, 401, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 430, 431, 433, 434, 435, 436, 437, 438, 449, 451, 452, 455, 461, 468, 498, 500], "where": 377, "which": 377, "wind": 507, "wise": 468, "without": 487, "wobbleregionsfind": 180, "work": 511, "workflow": 572, "write": [377, 382, 452, 464, 482, 483, 511, 527, 574], "write_yaml": 346, "wstat": [301, 575, 576, 577], "wstatcountsstatist": 287, "yaml": [400, 452, 498, 530, 531, 532, 533, 534, 535, 536, 537, 538, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 561, 562, 563, 564, 565, 566, 567, 568, 569], "your": [412, 452, 574], "yusifovkucuk2004": 39, "yusifovkucuk2004b": 40, "zhaoprofil": 27}})