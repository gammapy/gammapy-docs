Search.setIndex({"alltitles": {"0.1 (Aug 25, 2014)": [[437, null]], "0.10 (Jan 28, 2019)": [[438, null]], "0.11 (Mar 29, 2019)": [[439, null]], "0.12 (May 30, 2019)": [[440, null]], "0.13 (Jul 26, 2019)": [[441, null]], "0.14 (Sep 30, 2019)": [[442, null]], "0.15 (Dec 3, 2019)": [[443, null]], "0.16 (Feb 1, 2020)": [[444, null]], "0.17 (Apr 1, 2020)": [[445, null]], "0.18 (Nov 4th, 2020)": [[446, null]], "0.18.1 (Nov 6th, 2020)": [[447, null]], "0.18.2 (Nov 19th, 2020)": [[448, null]], "0.19 (Nov 22nd, 2021)": [[449, null]], "0.2 (Apr 13, 2015)": [[450, null]], "0.20 (May 12th, 2022)": [[451, null]], "0.20.1 (June 16th, 2022)": [[452, null]], "0.3 (Aug 13, 2015)": [[453, null]], "0.4 (Apr 20, 2016)": [[454, null]], "0.5 (Nov 22, 2016)": [[455, null]], "0.6 (Apr 28, 2017)": [[456, null]], "0.7 (Feb 28, 2018)": [[457, null]], "0.8 (Sep 23, 2018)": [[458, null]], "0.9 (Nov 29, 2018)": [[459, null]], "1. Bayesian analysis": [[513, "bayesian-analysis"]], "1.0 (November 10th, 2022)": [[460, null]], "1.0.1 (March 14th, 2023)": [[461, null]], "1.0.2 (December 6th, 2023)": [[462, null]], "1.1 (June 13th 2023)": [[463, null]], "1.2 (February 29th 2024)": [[464, null]], "1.3 (November 26th, 2024)": [[465, null]], "1D Spectral": [[471, "d-spectral"], [524, "d-spectral"]], "1D spectrum simulation": [[477, null]], "2. Limitations of the Markov Chain Monte Carlo approach": [[513, "limitations-of-the-markov-chain-monte-carlo-approach"]], "2.0 (unreleased)": [[466, null]], "2D Image": [[479, null], [524, "d-image"]], "2D map fitting": [[480, null]], "3. Nested sampling approach": [[513, "nested-sampling-approach"]], "3D Cube": [[490, null], [524, "d-cube"]], "3D detailed analysis": [[483, null]], "3D map simulation": [[492, null]], "A fully configured Flux Points Estimation": [[504, "a-fully-configured-flux-points-estimation"]], "A note on statistics": [[474, "a-note-on-statistics"]], "A note on the internal representation": [[504, "a-note-on-the-internal-representation"]], "API Links": [[396, "api-links"]], "API changes": [[460, "api-changes"], [463, "api-changes"], [464, "api-changes"], [465, "api-changes"]], "API reference": [[6, null]], "ASmoothMapEstimator": [[121, null]], "Abstract": [[400, "abstract"], [401, "abstract"], [402, "abstract"], [403, "abstract"], [404, "abstract"], [405, "abstract"], [407, "abstract"], [408, "abstract"], [409, "abstract"], [410, "abstract"], [411, "abstract"], [412, "abstract"], [413, "abstract"], [414, "abstract"], [415, "abstract"], [416, "abstract"], [417, "abstract"], [418, "abstract"], [419, "abstract"], [420, "abstract"], [421, "abstract"], [422, "abstract"], [423, "abstract"], [424, "abstract"], [425, "abstract"], [426, "abstract"]], "Acceptation of the Developer Certificate of Origin (DCO)": [[398, "acceptation-of-the-developer-certificate-of-origin-dco"]], "Accessing Data": [[509, "accessing-data"]], "Accessing and visualising results": [[478, "accessing-and-visualising-results"]], "Accessing and visualising the results": [[504, "accessing-and-visualising-the-results"]], "Accessing contents of a dataset": [[503, "accessing-contents-of-a-dataset"]], "Accessing documentation build on a Pull Request": [[396, "accessing-documentation-build-on-a-pull-request"]], "Accessor methods": [[558, "accessor-methods"]], "Account for spectral absorption due to the EBL": [[469, null]], "Adaptive smoothing": [[478, "adaptive-smoothing"]], "AdaptiveRingBackgroundMaker": [[172, null]], "Add a model on multiple datasets": [[511, "add-a-model-on-multiple-datasets"]], "Add new parametric models": [[406, "add-new-parametric-models"]], "Adding Non-Spatial Axes": [[509, "adding-non-spatial-axes"]], "Adding Non-contiguous axes": [[509, "adding-non-contiguous-axes"]], "Additional Models": [[419, "additional-models"]], "Additional PSF classes": [[552, "additional-psf-classes"]], "Additional utilities": [[607, "additional-utilities"]], "Aim": [[511, "aim"]], "Alternative": [[420, "alternative"]], "Alternatives": [[403, "alternatives"], [406, "alternatives"], [409, "alternatives"], [411, "alternatives"], [412, "alternatives"], [413, "alternatives"], [415, "alternatives"], [416, "alternatives"], [417, "alternatives"], [423, "alternatives"]], "Alternatives / Outlook": [[408, "alternatives-outlook"]], "Analysis": [[15, null]], "Analysis configuration": [[475, "analysis-configuration"], [483, "analysis-configuration"], [494, "analysis-configuration"], [529, "analysis-configuration"]], "Analysis steps": [[607, "analysis-steps"]], "Analysis workflow": [[607, "analysis-workflow"]], "AnalysisConfig": [[16, null]], "As a function of of true energy and offset angle (EDISP_2D)": [[550, "as-a-function-of-of-true-energy-and-offset-angle-gadf-edisp-2d"]], "As a function of of true energy and offset angle (PSF_TABLE)": [[552, "as-a-function-of-of-true-energy-and-offset-angle-gadf-psf-table"]], "As a function of reconstructed energy and detector coordinates (BKG_3D)": [[549, "as-a-function-of-reconstructed-energy-and-detector-coordinates-gadf-bkg-3d"]], "As a function of reconstructed energy and offset angle, radially symmetric (BKG_2D)": [[549, "as-a-function-of-reconstructed-energy-and-offset-angle-radially-symmetric-gadf-bkg-2d"]], "As a function of true energy (RMF)": [[550, "as-a-function-of-true-energy-gadf-ogip-rmf"]], "As a function of true energy and offset angle (AEFF_2D)": [[548, "as-a-function-of-true-energy-and-offset-angle-gadf-aeff-2d"]], "Assert convention": [[395, "assert-convention"]], "Assign to model to all datasets": [[495, "assign-to-model-to-all-datasets"]], "Assigning background models to datasets": [[511, "assigning-background-models-to-datasets"]], "Astrophysical source models": [[537, null]], "Astrophysical source population models": [[536, null]], "Astrophysics": [[535, null]], "Authorship policy": [[422, "authorship-policy"]], "BACKEND_DEFAULT": [[336, null]], "BSD or GPL license?": [[395, "bsd-or-gpl-license"]], "Background": [[518, "background"], [549, null]], "Background / What we have now": [[410, "background-what-we-have-now"]], "Background Model Handling": [[418, "background-model-handling"]], "Background estimation": [[508, "background-estimation"], [554, "background-estimation"]], "Background2D": [[151, null]], "Background3D": [[152, null]], "BackgroundIRF": [[153, null]], "BackgroundIRFModel": [[406, "backgroundirfmodel"]], "BackgroundModel": [[406, "backgroundmodel"]], "Basic image exploration and fitting": [[485, null]], "Basic operators": [[509, "basic-operators"]], "Bayesian analysis with nested sampling": [[513, null]], "Bayesian blocks": [[500, "bayesian-blocks"]], "Bin volume and angular size": [[559, "bin-volume-and-angular-size"]], "Boundary mask": [[510, "boundary-mask"]], "Broken power law spectral model": [[575, null]], "BrokenPowerLawSpectralModel": [[224, null]], "Bug fixes and improvements": [[451, "bug-fixes-and-improvements"], [460, "bug-fixes-and-improvements"], [463, "bug-fixes-and-improvements"], [464, "bug-fixes-and-improvements"], [465, "bug-fixes-and-improvements"]], "Build": [[428, "build"]], "Building 1D datasets from the new observations": [[495, "building-1d-datasets-from-the-new-observations"]], "Building the 1D analysis configuration": [[494, "building-the-1d-analysis-configuration"]], "Building the 3D analysis configuration": [[494, "building-the-3d-analysis-configuration"]], "Built-in models": [[606, "built-in-models"]], "Bundled gammapy.extern code": [[395, "bundled-gammapy-extern-code"]], "BurkertProfile": [[17, null]], "CATALOG_REGISTRY": [[55, null]], "CITATION.cff": [[422, "citation-cff"]], "CLUMPY": [[534, "clumpy"]], "CTA 1DC": [[518, "cta-1dc"]], "CTAO with Gammapy": [[518, null]], "Caplog fixture": [[395, "caplog-fixture"]], "Case 1: Background systematics as a nuisance parameter #3955": [[424, "case-1-background-systematics-as-a-nuisance-parameter-3955"]], "Case 1: Estimate the posterior distribution with a tuning-parameter free approach": [[425, "case-1-estimate-the-posterior-distribution-with-a-tuning-parameter-free-approach"]], "Case 2: Favoring positive values for flux amplitudes": [[424, "case-2-favoring-positive-values-for-flux-amplitudes"]], "Case 2: Minuit convergence issues": [[425, "case-2-minuit-convergence-issues"]], "Case 3: Model comparison using the Bayesian evidence (aka marginal evidence)": [[425, "case-3-model-comparison-using-the-bayesian-evidence-aka-marginal-evidence"]], "Case 3: Support unfolding methods for spectral flux points #4122": [[424, "case-3-support-unfolding-methods-for-spectral-flux-points-4122"]], "Case 4: Parallelization of the \u201cfitting\u201d": [[425, "case-4-parallelization-of-the-fitting"]], "CaseBattacharya1998": [[28, null]], "Cash : Poisson data with background model": [[610, "cash-poisson-data-with-background-model"]], "Cash counts statistic": [[611, "cash-counts-statistic"]], "CashCountsStatistic": [[295, null]], "Catalog table": [[502, "catalog-table"]], "Caveat": [[610, "caveat"]], "Changelog": [[416, "changelog"]], "Check Python code": [[396, "check-python-code"]], "Check broken links": [[396, "check-broken-links"]], "Check setup": [[468, "check-setup"], [470, "check-setup"], [474, "check-setup"], [475, "check-setup"], [476, "check-setup"], [477, "check-setup"], [478, "check-setup"], [480, "check-setup"], [481, "check-setup"], [483, "check-setup"], [484, "check-setup"], [485, "check-setup"], [486, "check-setup"], [487, "check-setup"], [488, "check-setup"], [489, "check-setup"], [494, "check-setup"], [495, "check-setup"], [496, "check-setup"], [497, "check-setup"], [501, "check-setup"], [502, "check-setup"], [503, "check-setup"], [505, "check-setup"], [508, "check-setup"], [509, "check-setup"], [510, "check-setup"], [511, "check-setup"], [512, "check-setup"], [515, "check-setup"], [517, "check-setup"], [518, "check-setup"], [519, "check-setup"], [520, "check-setup"], [521, "check-setup"], [529, "check-setup"], [530, "check-setup"], [532, "check-setup"]], "Check the dataset we produced": [[520, "check-the-dataset-we-produced"]], "Check your setup": [[433, "check-your-setup"]], "Checker": [[368, null]], "Chi2AsymmetricErrorFitStatistic": [[296, null]], "Chi2FitStatistic": [[297, null]], "Choose a thumbnail and tooltip for the tutorial gallery": [[396, "choose-a-thumbnail-and-tooltip-for-the-tutorial-gallery"]], "Citation scheme": [[422, "citation-scheme"]], "Clarify internal Gammapy DL3 data model": [[426, "clarify-internal-gammapy-dl3-data-model"]], "Class attributes": [[396, "class-attributes"]], "Classes": [[0, "classes"], [1, "classes"], [1, "id1"], [1, "id2"], [2, "classes"], [3, "classes"], [4, "classes"], [5, "classes"], [7, "classes"], [8, "classes"], [9, "classes"], [10, "classes"], [10, "id2"], [12, "classes"], [13, "classes"], [13, "id4"], [13, "id6"], [13, "id8"], [13, "id11"], [13, "id16"], [14, "classes"]], "Clean up gammapy.utils": [[414, "clean-up-gammapy-utils"]], "Clobber or overwrite?": [[395, "clobber-or-overwrite"]], "Code in RST files": [[396, "code-in-rst-files"]], "Code in docstrings in Python files": [[396, "code-in-docstrings-in-python-files"]], "Code quality": [[428, "code-quality"]], "Collection of the personal information of authors": [[422, "collection-of-the-personal-information-of-authors"]], "Colormaps": [[614, "colormaps"]], "Combining event lists and GTIs": [[543, "combining-event-lists-and-gtis"]], "Combining two Models": [[511, "combining-two-models"]], "Command line tools": [[609, null]], "Command not found": [[609, "command-not-found"]], "Common API": [[504, "common-api"]], "Compare against the literature": [[476, "compare-against-the-literature"]], "Compare results": [[494, "compare-results"]], "Comparing the posterior distribution of all runs": [[513, "comparing-the-posterior-distribution-of-all-runs"]], "Compound Spectral Model": [[512, "compound-spectral-model"]], "Compound spectral model": [[576, null]], "CompoundSpectralModel": [[225, null]], "Computation times": [[467, null], [473, null], [482, null], [491, null], [498, null], [516, null], [523, null], [526, null], [528, null], [533, null], [561, null], [572, null], [594, null], [605, null]], "Compute Flux Points": [[474, "compute-flux-points"]], "Compute correlated significance and correlated excess maps": [[481, "compute-correlated-significance-and-correlated-excess-maps"]], "Compute images": [[485, "compute-images"]], "Compute sensitivity": [[468, "compute-sensitivity"]], "Computing contours using stat_contour": [[505, "computing-contours-using-stat-contour"]], "Computing contours using stat_surface": [[505, "computing-contours-using-stat-surface"]], "Computing flux points": [[530, "computing-flux-points"]], "Conda Environments": [[429, "conda-environments"]], "Confidence contours": [[505, "confidence-contours"]], "Configurable API": [[426, "configurable-api"]], "Configurable analysis": [[607, "configurable-analysis"]], "Configuration": [[489, "configuration"]], "Configuration for stacked and joint analysis": [[483, "configuration-for-stacked-and-joint-analysis"]], "Configuration of the analysis": [[475, "configuration-of-the-analysis"]], "Constant spatial model": [[563, null]], "Constant spectral model": [[577, null]], "Constant temporal model": [[596, null]], "ConstantFluxSpatialModel": [[226, null]], "ConstantSpatialModel": [[227, null]], "ConstantSpectralModel": [[228, null]], "ConstantTemporalModel": [[229, null]], "Context": [[470, "context"], [472, "context"], [474, "context"], [475, "context"], [476, "context"], [477, "context"], [478, "context"], [480, "context"], [481, "context"], [484, "context"], [486, "context"], [487, "context"], [489, "context"], [492, "context"], [494, "context"], [495, "context"], [496, "context"], [499, "context"], [500, "context"], [510, "context"], [513, "context"], [514, "context"], [515, "context"], [529, "context"], [530, "context"]], "Continuous integration": [[428, "continuous-integration"]], "Contribution in conferences": [[422, "contribution-in-conferences"]], "Contributors": [[437, "contributors"], [438, "contributors"], [439, "contributors"], [440, "contributors"], [441, "contributors"], [442, "contributors"], [443, "contributors"], [444, "contributors"], [445, "contributors"], [446, "contributors"], [449, "contributors"], [450, "contributors"], [451, "contributors"], [452, "contributors"], [453, "contributors"], [454, "contributors"], [455, "contributors"], [456, "contributors"], [457, "contributors"], [458, "contributors"], [459, "contributors"], [460, "contributors"], [461, "contributors"], [462, "contributors"], [463, "contributors"], [464, "contributors"], [465, "contributors"]], "Convert a jupyter notebook to python script in the sphinx-gallery format": [[395, "convert-a-jupyter-notebook-to-python-script-in-the-sphinx-gallery-format"]], "Coordinate and axis names": [[395, "coordinate-and-axis-names"]], "Coordinates defined by the RegionGeom": [[559, "coordinates-defined-by-the-regiongeom"]], "Corner plot comparison": [[513, "corner-plot-comparison"]], "Correct format for bullet point list": [[396, "correct-format-for-bullet-point-list"]], "Counts": [[519, "counts"]], "Counts and fit statistics": [[611, "counts-and-fit-statistics"]], "Counts statistics classes": [[611, "counts-statistics-classes"]], "Covariance": [[213, null]], "Covariance and parameters errors": [[505, "covariance-and-parameters-errors"]], "CovarianceResult": [[214, null]], "Create DL4 product - PSFMap": [[507, "create-dl4-product-psfmap"]], "Create a FluxMaps object through one of the estimators.": [[504, "create-a-fluxmaps-object-through-one-of-the-estimators"]], "Create a mask in energy": [[510, "create-a-mask-in-energy"]], "Create a stacked dataset": [[481, "create-a-stacked-dataset"]], "Create edisp kernel map (DL4 product) - EDispKernelMap": [[507, "create-edisp-kernel-map-dl4-product-edispkernelmap"]], "Create exclusion mask": [[474, "create-exclusion-mask"], [481, "create-exclusion-mask"]], "Create exposure map (DL4 product)": [[507, "create-exposure-map-dl4-product"]], "Create the energy-dependent temporal model": [[488, "create-the-energy-dependent-temporal-model"]], "Create the maker classes to be used": [[530, "create-the-maker-classes-to-be-used"]], "Create the makers": [[470, "create-the-makers"]], "Create the mask from a catalog of sources": [[510, "create-the-mask-from-a-catalog-of-sources"]], "Create the mask from a list of regions": [[510, "create-the-mask-from-a-list-of-regions"]], "Create the mask from statistically significant pixels in a dataset": [[510, "create-the-mask-from-statistically-significant-pixels-in-a-dataset"]], "Create the mask map": [[510, "create-the-mask-map"]], "Create the temporal model and write it to disk": [[488, "create-the-temporal-model-and-write-it-to-disk"]], "Creating WCS Maps": [[509, "creating-wcs-maps"]], "Creating a RegionGeom": [[559, "creating-a-regiongeom"]], "Creating a RegionNDMap": [[559, "creating-a-regionndmap"]], "Creating a mask for fitting": [[510, "creating-a-mask-for-fitting"]], "Creating a mask manually": [[510, "creating-a-mask-manually"]], "Creating an empty dataset": [[503, "creating-an-empty-dataset"]], "Creating an exclusion mask": [[510, "creating-an-exclusion-mask"]], "Creating from a Map Geometry": [[509, "creating-from-a-map-geometry"]], "Creating the config file": [[480, "creating-the-config-file"], [481, "creating-the-config-file"]], "Creation of the Flux points": [[475, "creation-of-the-flux-points"]], "Creation of the data reduction makers": [[495, "creation-of-the-data-reduction-makers"]], "Creation of the datasets": [[495, "creation-of-the-datasets"]], "Creation of the model": [[475, "creation-of-the-model"]], "Creation of the theta2 plot": [[517, "creation-of-the-theta2-plot"]], "Cube plotting": [[509, "cube-plotting"]], "Cumulative excess and significance": [[470, "cumulative-excess-and-significance"]], "Current status": [[421, "current-status"]], "Custom models": [[606, "custom-models"]], "Cutouts": [[509, "cutouts"]], "Cython": [[428, "cython"]], "DATASET_REGISTRY": [[99, null]], "DCO implementation": [[422, "dco-implementation"]], "DL3 DR1": [[521, "dl3-dr1"]], "DMProfile": [[18, null]], "D_SUN_TO_GALACTIC_CENTER": [[319, null]], "Dark matter": [[534, null]], "Dark matter spatial and spectral models": [[501, null]], "DarkMatterAnnihilationSpectralModel": [[19, null]], "DarkMatterDecaySpectralModel": [[20, null]], "Data Fitting": [[410, "data-fitting"]], "Data access and selection (DL3)": [[543, null]], "Data analysis": [[471, null], [524, "data-analysis"]], "Data analysis subpackages in gammapy": [[401, "data-analysis-subpackages-in-gammapy"]], "Data and Observation handling": [[404, "data-and-observation-handling"]], "Data and models files": [[484, "data-and-models-files"]], "Data exploration": [[522, "data-exploration"], [524, "data-exploration"]], "Data model and data formats": [[426, "data-model-and-data-formats"]], "Data reduction": [[410, "data-reduction"], [483, "data-reduction"], [483, "id1"], [499, "data-reduction"], [529, "data-reduction"], [530, "data-reduction"]], "Data reduction (DL3 to DL4)": [[554, null]], "Data reduction into a MapDataset": [[520, "data-reduction-into-a-mapdataset"]], "Data reduction loop": [[508, "data-reduction-loop"]], "Data selection": [[499, "data-selection"]], "Data structures": [[532, null]], "DataStore": [[82, null]], "Dataset": [[100, null], [407, "dataset"], [508, "dataset"]], "Dataset helper / convenience methods": [[407, "dataset-helper-convenience-methods"]], "Dataset serialization": [[407, "dataset-serialization"]], "Dataset simulations": [[476, "dataset-simulations"]], "Dataset specific quantities (\u201ccounts like\u201d)": [[504, "dataset-specific-quantities-counts-like"]], "DatasetModels": [[230, null]], "Datasets": [[101, null], [404, "datasets"], [407, "datasets"], [423, "datasets"], [503, "datasets"]], "Datasets (DL4)": [[542, null]], "Datasets - Reduced data, IRFs, models": [[503, null]], "Datasets serialization": [[484, "datasets-serialization"]], "DatasetsMaker": [[173, null]], "Datastore": [[518, "datastore"]], "Dealing with links": [[396, "dealing-with-links"]], "Decision": [[400, "decision"], [401, "decision"], [402, "decision"], [403, "decision"], [404, "decision"], [405, "decision"], [406, "decision"], [407, "decision"], [408, "decision"], [409, "decision"], [410, "decision"], [411, "decision"], [412, "decision"], [413, "decision"], [414, "decision"], [415, "decision"], [416, "decision"], [417, "decision"], [418, "decision"], [419, "decision"], [420, "decision"], [421, "decision"], [422, "decision"], [423, "decision"], [424, "decision"], [425, "decision"], [426, "decision"]], "Define Target Region": [[474, "define-target-region"]], "Define a test position": [[517, "define-a-test-position"]], "Define an Observation": [[487, "define-an-observation"]], "Define an observation and make a dataset": [[488, "define-an-observation-and-make-a-dataset"]], "Define analysis region and energy binning": [[468, "define-analysis-region-and-energy-binning"]], "Define map geometry": [[485, "define-map-geometry"]], "Define the MapDataset": [[487, "define-the-mapdataset"]], "Define the ON region": [[476, "define-the-on-region"]], "Define the Sky model: a point-like source": [[487, "define-the-sky-model-a-point-like-source"]], "Define the geometries": [[470, "define-the-geometries"]], "Define the geometry": [[510, "define-the-geometry"]], "Define the model": [[530, "define-the-model"]], "Define the model to be used": [[494, "define-the-model-to-be-used"], [494, "id3"]], "Define the simulation source model": [[488, "define-the-simulation-source-model"]], "Define time intervals": [[495, "define-time-intervals"]], "Define underlying model": [[495, "define-underlying-model"]], "Defining the datastore and selecting observations": [[530, "defining-the-datastore-and-selecting-observations"]], "Defining the geometry": [[495, "defining-the-geometry"]], "Defining the sampler and options": [[513, "defining-the-sampler-and-options"]], "Definition of a Contributor": [[422, "definition-of-a-contributor"]], "Definition of the Maintainer": [[422, "definition-of-the-maintainer"]], "Definition of the data selection": [[494, "definition-of-the-data-selection"], [494, "id1"]], "Definition of the dataset geometry": [[494, "definition-of-the-dataset-geometry"], [494, "id2"]], "Dependencies": [[394, null], [412, "dependencies"]], "Deprecating a function or a class": [[395, "deprecating-a-function-or-a-class"]], "Deprecation": [[421, "deprecation"]], "Derivation of the WStat formula": [[612, null]], "Detailed plan": [[402, "detailed-plan"]], "Developer How To": [[395, null]], "Developer guide": [[397, null]], "Discussion / Alternatives": [[410, "discussion-alternatives"]], "Disk spatial model": [[564, null]], "DiskSpatialModel": [[231, null]], "Dissolve gammapy.background": [[414, "dissolve-gammapy-background"]], "Dissolve gammapy.image": [[414, "dissolve-gammapy-image"]], "Distributed Computing and Performance": [[426, "distributed-computing-and-performance"]], "Distributions": [[412, "distributions"], [412, "id1"]], "Docstring formatting": [[396, "docstring-formatting"]], "Documentation": [[404, "documentation"], [426, "documentation"], [464, "documentation"]], "Documentation How To": [[396, null]], "Documentation building": [[396, "documentation-building"]], "Documentation guidelines": [[396, "documentation-guidelines"]], "Documentation improvements": [[465, "documentation-improvements"]], "Download": [[428, "download"]], "EBL absorption spectral model": [[574, null]], "EBLAbsorptionNormSpectralModel": [[232, null]], "EBL_DATA_BUILTIN": [[233, null]], "EDispKernel": [[154, null]], "EDispKernelMap": [[155, null]], "EDispMap": [[156, null]], "ESTIMATOR_REGISTRY": [[122, null]], "Effective Area": [[507, "effective-area"]], "Effective area": [[518, "effective-area"], [548, null]], "EffectiveAreaTable2D": [[157, null]], "EinastoProfile": [[21, null]], "Energy Dependent Spatial Models": [[419, "energy-dependent-spatial-models"]], "Energy Dispersion": [[507, "energy-dispersion"], [519, "energy-dispersion"], [550, null]], "Energy dispersion": [[518, "energy-dispersion"]], "Energy edges": [[544, "energy-edges"]], "EnergyDependentMorphologyEstimator": [[123, null]], "EnergyDependentMultiGaussPSF": [[158, null]], "EnergyDispersion2D": [[159, null]], "Estimating TS": [[611, "estimating-ts"]], "Estimation of time variability in a lightcurve": [[500, null]], "Estimator": [[124, null]], "Estimators": [[423, "estimators"], [426, "estimators"], [504, null]], "Estimators (DL4 to DL5, and DL6)": [[544, null]], "Event Simulation": [[404, "event-simulation"]], "Event lists": [[532, "event-lists"]], "Event sampling": [[487, null]], "Event type handling": [[426, "event-type-handling"]], "EventList": [[83, null]], "EventListMetaData": [[84, null]], "Events": [[518, "events"], [519, "events"]], "Example": [[610, "example"], [610, "id2"]], "Example 1: Including Prior Information about the Sources Index": [[515, "example-1-including-prior-information-about-the-sources-index"]], "Example 2: Encouraging Positive Amplitude Values": [[515, "example-2-encouraging-positive-amplitude-values"]], "Example of extrapolation": [[593, "example-of-extrapolation"]], "Example plot": [[563, "example-plot"], [564, "example-plot"], [565, "example-plot"], [566, "example-plot"], [567, "example-plot"], [568, "example-plot"], [569, "example-plot"], [570, "example-plot"], [571, "example-plot"], [574, "example-plot"], [575, "example-plot"], [576, "example-plot"], [577, "example-plot"], [578, "example-plot"], [579, "example-plot"], [580, "example-plot"], [581, "example-plot"], [582, "example-plot"], [583, "example-plot"], [584, "example-plot"], [585, "example-plot"], [586, "example-plot"], [587, "example-plot"], [588, "example-plot"], [589, "example-plot"], [590, "example-plot"], [591, "example-plot"], [592, "example-plot"], [593, "example-plot"], [596, "example-plot"], [597, "example-plot"], [598, "example-plot"], [599, "example-plot"], [600, "example-plot"], [601, "example-plot"], [602, "example-plot"]], "Examples using Analysis": [[545, "examples-using-analysis"]], "Examples using FluxPointsEstimator": [[544, "examples-using-fluxpointsestimator"]], "Examples using LightCurveEstimator": [[544, "examples-using-lightcurveestimator"]], "Examples using MapDataset": [[542, "examples-using-mapdataset"]], "Examples using MapDatasetMaker": [[554, "examples-using-mapdatasetmaker"]], "Examples using SpectrumDataset": [[542, "examples-using-spectrumdataset"]], "Examples using SpectrumDatasetMaker": [[554, "examples-using-spectrumdatasetmaker"]], "Examples using catalog": [[541, "examples-using-catalog"]], "Examples using gammapy.makers.FoVBackgroundMaker": [[553, "examples-using-gammapy-makers-fovbackgroundmaker"]], "Examples using gammapy.makers.ReflectedRegionsBackgroundMaker": [[555, "examples-using-gammapy-makers-reflectedregionsbackgroundmaker"]], "Excess and Significance": [[611, "excess-and-significance"], [611, "id2"]], "Excess errors": [[611, "excess-errors"], [611, "id4"]], "Excess estimators": [[420, "excess-estimators"]], "ExcessMapEstimator": [[125, null]], "Exclusion masks": [[510, "exclusion-masks"]], "Execution": [[609, "execution"]], "Exemplary additional prior subclasses:": [[424, "exemplary-additional-prior-subclasses"]], "Exercises": [[468, "exercises"], [472, "exercises"], [474, "exercises"], [477, "exercises"], [483, "exercises"], [485, "exercises"], [487, "exercises"], [488, "exercises"], [496, "exercises"], [499, "exercises"], [518, "exercises"], [519, "exercises"], [520, "exercises"], [521, "exercises"], [532, "exercises"], [532, "id1"], [532, "id2"], [532, "id3"]], "Existing code": [[401, "existing-code"]], "ExpCutoffPowerLaw3FGLSpectralModel": [[234, null]], "ExpCutoffPowerLawNormSpectralModel": [[235, null]], "ExpCutoffPowerLawSpectralModel": [[236, null]], "ExpDecay temporal model": [[597, null]], "ExpDecayTemporalModel": [[237, null]], "Expected number of detected events": [[551, "expected-number-of-detected-events"]], "Exploration of the fit results": [[475, "exploration-of-the-fit-results"]], "Explore the fit results": [[470, "explore-the-fit-results"]], "Explore the results": [[470, "explore-the-results"]], "Exponential": [[29, null]], "Exponential Cut-Off Powerlaw Fit": [[472, "exponential-cut-off-powerlaw-fit"]], "Exponential cutoff power law norm spectral model": [[580, null]], "Exponential cutoff power law spectral model": [[578, null]], "Exponential cutoff power law spectral model used for 3FGL": [[579, null]], "Expose model parameters as attributes": [[406, "expose-model-parameters-as-attributes"]], "Exposure": [[519, "exposure"]], "Extended source using a template": [[487, "extended-source-using-a-template"]], "Extract the light curve": [[495, "extract-the-light-curve"]], "Extract the lightcurve": [[496, "extract-the-lightcurve"]], "Extracting the light curve": [[494, "extracting-the-light-curve"]], "Extracting the ring background": [[481, "extracting-the-ring-background"]], "Factorisation of the gamma-ray IRFs": [[551, "factorisation-of-the-gamma-ray-irfs"]], "FaucherKaspi2006": [[30, null]], "FaucherKaspi2006VelocityBimodal": [[31, null]], "FaucherKaspi2006VelocityMaxwellian": [[32, null]], "FaucherSpiral": [[33, null]], "Feature Freeze and Branching": [[427, "feature-freeze-and-branching"]], "Fermi-LAT 3FHL: map dataset for 3D analysis": [[484, "fermi-lat-3fhl-map-dataset-for-3d-analysis"]], "Fermi-LAT with Gammapy": [[519, null]], "FermiST": [[534, "fermist"]], "FermipyDatasetsReader": [[102, null]], "Files": [[518, "files"]], "Filling a RegionNDMap": [[559, "filling-a-regionndmap"]], "Filling maps from event lists": [[509, "filling-maps-from-event-lists"]], "Filling maps from interpolation": [[509, "filling-maps-from-interpolation"]], "Filter the observations list in time intervals": [[495, "filter-the-observations-list-in-time-intervals"]], "Final remarks": [[400, "final-remarks"]], "Final result": [[612, "final-result"]], "Fit": [[215, null], [492, "fit"], [519, "fit"]], "Fit quality and model residuals": [[474, "fit-quality-and-model-residuals"], [476, "fit-quality-and-model-residuals"]], "Fit quality assessment": [[505, "fit-quality-assessment"]], "Fit quality assessment and model residuals for a MapDataset": [[483, "fit-quality-assessment-and-model-residuals-for-a-mapdataset"]], "Fit quality assessment and model residuals for a joint Datasets": [[483, "fit-quality-assessment-and-model-residuals-for-a-joint-datasets"]], "Fit spectrum": [[474, "fit-spectrum"], [476, "fit-spectrum"]], "Fit statistics": [[610, null]], "Fit the datasets": [[496, "fit-the-datasets"]], "Fit the model": [[530, "fit-the-model"]], "FitResult": [[216, null]], "Fitting": [[404, "fitting"], [505, null]], "Fitting Multiple Datasets with and without the Prior": [[515, "fitting-multiple-datasets-with-and-without-the-prior"]], "Fitting a Dataset with and without the Prior": [[515, "fitting-a-dataset-with-and-without-the-prior"]], "Fitting options": [[505, "fitting-options"]], "Fitting temporal models": [[496, "fitting-temporal-models"]], "Fitting the obtained light curve": [[496, "fitting-the-obtained-light-curve"]], "Fix non-Unix line endings": [[395, "fix-non-unix-line-endings"]], "FixedPointingInfo": [[85, null]], "Flexible Statistics API": [[426, "flexible-statistics-api"]], "Float data type: 32 bit or 64 bit?": [[395, "float-data-type-32-bit-or-64-bit"]], "Flux Points Estimation": [[504, "flux-points-estimation"]], "Flux Profile Estimation": [[489, null]], "Flux maps": [[544, "flux-maps"]], "Flux maps for annihilation": [[501, "flux-maps-for-annihilation"]], "Flux maps for decay": [[501, "flux-maps-for-decay"]], "Flux point fitting": [[472, null]], "Flux points": [[502, "flux-points"], [529, "flux-points"], [544, "flux-points"]], "Flux quantities": [[544, "flux-quantities"]], "FluxMaps": [[126, null]], "FluxMetaData": [[127, null]], "FluxPoints": [[128, null]], "FluxPointsDataset": [[103, null], [407, "fluxpointsdataset"], [503, "fluxpointsdataset"]], "FluxPointsEstimator": [[129, null]], "FluxProfileEstimator": [[130, null]], "FoV background": [[508, "fov-background"], [553, null]], "FoVAlignment": [[160, null]], "FoVAltAzFrame": [[320, null]], "FoVBackgroundMaker": [[174, null]], "FoVBackgroundModel": [[238, null]], "FoVICRSFrame": [[321, null]], "Fractional excess variance, point-to-point fractional variance and doubling/halving time": [[500, "fractional-excess-variance-point-to-point-fractional-variance-and-doubling-halving-time"]], "Freezing and unfreezing model parameters": [[511, "freezing-and-unfreezing-model-parameters"]], "Functions": [[1, "functions"], [3, "functions"], [4, "functions"], [4, "id1"], [5, "functions"], [7, "functions"], [8, "functions"], [9, "functions"], [10, "functions"], [10, "id1"], [10, "id3"], [12, "functions"], [13, "functions"], [13, "id1"], [13, "id2"], [13, "id3"], [13, "id5"], [13, "id7"], [13, "id9"], [13, "id10"], [13, "id13"], [13, "id14"], [13, "id15"], [13, "id17"], [13, "id18"], [14, "functions"]], "Functions or class methods that return a single object": [[396, "functions-or-class-methods-that-return-a-single-object"]], "Functions returning several values": [[395, "functions-returning-several-values"]], "Fundamental Concepts: Gammapy analysis workflow and package structure": [[607, null]], "Further extensions": [[469, "further-extensions"]], "Further references": [[610, "further-references"]], "GTI": [[86, null]], "GTIMetaData": [[87, null]], "Galactic diffuse background": [[519, "galactic-diffuse-background"]], "Galactocentric spatial distributions": [[536, "galactocentric-spatial-distributions"]], "Gamma-ray spectra at production": [[501, "gamma-ray-spectra-at-production"]], "Gammapy": [[435, null]], "Gammapy Binder": [[428, "id1"]], "Gammapy Maps": [[426, "gammapy-maps"]], "Gammapy overview": [[416, "gammapy-overview"]], "Gammapy repository": [[428, "gammapy-repository"]], "Gammapy webpages": [[428, "gammapy-webpages"]], "Gammapy-recipes and additional ressources": [[426, "gammapy-recipes-and-additional-ressources"]], "Gaussian spatial model": [[565, null]], "Gaussian spectral model": [[581, null]], "Gaussian temporal model": [[598, null]], "GaussianPrior": [[239, null]], "GaussianSpatialModel": [[240, null]], "GaussianSpectralModel": [[241, null]], "GaussianTemporalModel": [[242, null]], "General Gammapy publications": [[422, "general-gammapy-publications"]], "General code style guidelines": [[401, "general-code-style-guidelines"]], "General conventions": [[395, "general-conventions"]], "General idea and class diagram": [[405, "general-idea-and-class-diagram"]], "General method": [[544, "general-method"]], "General organization of the new approach": [[410, "general-organization-of-the-new-approach"]], "Generalist estimators": [[420, "generalist-estimators"]], "Generalized Gaussian temporal model": [[599, null]], "Generalized gaussian spatial model": [[566, null]], "GeneralizedGaussianSpatialModel": [[243, null]], "GeneralizedGaussianTemporalModel": [[244, null]], "Generating log messages": [[395, "generating-log-messages"]], "Geom": [[195, null]], "Get a fit stat profile for the redshift": [[469, "get-a-fit-stat-profile-for-the-redshift"]], "Get in touch early": [[398, "get-in-touch-early"]], "Get set up": [[398, "get-set-up"]], "Get some data": [[517, "get-some-data"]], "Get the flux points": [[469, "get-the-flux-points"]], "Getting started": [[416, "getting-started"], [430, null], [535, "getting-started"], [536, "getting-started"], [537, "getting-started"]], "Getting started section restructuring": [[416, "getting-started-section-restructuring"]], "Getting started with data": [[543, "getting-started-with-data"]], "Getting started with maps": [[558, "getting-started-with-maps"]], "Getting the reduced dataset": [[480, "getting-the-reduced-dataset"], [481, "getting-the-reduced-dataset"]], "Global Model Handling": [[418, "global-model-handling"]], "Glossary": [[608, "glossary"]], "Glossary and references": [[608, null]], "Goodness of fit": [[612, "goodness-of-fit"]], "Guidelines and specific actions": [[416, "guidelines-and-specific-actions"]], "H.E.S.S. with Gammapy": [[521, null]], "HAWC data access and reduction": [[520, "hawc-data-access-and-reduction"]], "HAWC with Gammapy": [[520, null]], "HAWC: 1D dataset for flux point fitting": [[484, "hawc-1d-dataset-for-flux-point-fitting"]], "HDUIndexTable": [[88, null]], "HDULocation": [[329, null]], "HEALPix geometry": [[557, "healpix-geometry"]], "HEALPix-based maps": [[557, null]], "HESS-DL3: 1D ON/OFF dataset for spectral fitting": [[484, "hess-dl3-1d-on-off-dataset-for-spectral-fitting"]], "Handling of conference material": [[422, "handling-of-conference-material"]], "Handling systematic effects": [[426, "handling-systematic-effects"]], "Help!?": [[433, "help"]], "Hierarchical clustering of observations": [[514, "hierarchical-clustering-of-observations"]], "Hierarchy": [[423, "hierarchy"]], "High Level Analysis Interface": [[545, null]], "High level interface": [[404, "high-level-interface"], [529, null]], "How To": [[416, "how-to"], [546, null]], "How to capture a deprecation": [[395, "how-to-capture-a-deprecation"]], "How to contribute to Gammapy": [[398, null]], "How to get data values": [[509, "how-to-get-data-values"]], "How to handle API breaking changes?": [[395, "how-to-handle-api-breaking-changes"]], "How to make a Gammapy release": [[427, null]], "How to make a pull request": [[395, "how-to-make-a-pull-request"]], "How to set data values": [[509, "how-to-set-data-values"]], "How to use logging": [[395, "how-to-use-logging"]], "How to use random numbers": [[395, "how-to-use-random-numbers"]], "How to write code": [[395, "how-to-write-code"]], "How to write tests": [[395, "how-to-write-tests"]], "HpxGeom": [[196, null]], "HpxMap": [[197, null]], "HpxNDMap": [[198, null]], "IPython": [[434, "id3"]], "IRF": [[161, null], [423, "irf"]], "IRF axis naming": [[551, "irf-axis-naming"]], "IRFMap": [[162, null]], "IRF_REGISTRY": [[163, null]], "IRFs": [[404, "irfs"], [518, "irfs"]], "Image Plotting": [[509, "image-plotting"]], "ImageProfile": [[131, null]], "ImageProfileEstimator": [[132, null]], "Images and masks": [[409, "images-and-masks"]], "Implement default parameters": [[406, "implement-default-parameters"]], "Implement evaluation region specifications": [[406, "implement-evaluation-region-specifications"]], "Implement sky coordinate handling": [[406, "implement-sky-coordinate-handling"]], "Implementation": [[416, "implementation"], [424, "implementation"]], "Implementation Outline": [[424, "implementation-outline"]], "Implementation impact": [[425, "implementation-impact"]], "Implementation road map": [[405, "implementation-road-map"]], "Implementing a custom model": [[512, "implementing-a-custom-model"]], "Implementing a custom prior": [[515, "implementing-a-custom-prior"]], "Imports and versions": [[492, "imports-and-versions"]], "Improve SourceModels class": [[406, "improve-sourcemodels-class"]], "Improve and implement model serilization": [[406, "improve-and-implement-model-serilization"]], "Improve spatial models": [[406, "improve-spatial-models"]], "In the RST files": [[396, "in-the-rst-files"]], "Inbuilt Gammapy IRFs": [[507, "inbuilt-gammapy-irfs"]], "Include png files as images": [[396, "include-png-files-as-images"]], "Indexing and Slicing Sub-Maps": [[509, "indexing-and-slicing-sub-maps"]], "Individual run analysis": [[513, "individual-run-analysis"]], "Infrastructure": [[426, "infrastructure"], [465, "infrastructure"]], "Inspect the reduced dataset": [[530, "inspect-the-reduced-dataset"]], "Inspecting residuals": [[530, "inspecting-residuals"]], "Install issues": [[433, "install-issues"]], "Installation": [[416, "installation"], [430, "installation"], [431, null]], "Instrument Response Functions (DL3)": [[551, null]], "Interaction Between Models and Dataset Objects": [[418, "interaction-between-models-and-dataset-objects"]], "Interface with MapCoord and SkyCoord": [[558, "interface-with-mapcoord-and-skycoord"]], "Interpolating onto a different geometry": [[509, "interpolating-onto-a-different-geometry"]], "Interpolation and extrapolation": [[395, "interpolation-and-extrapolation"]], "Introduce Shorter YAML Alias Tags": [[419, "introduce-shorter-yaml-alias-tags"]], "Introduce a FluxEstimate base class": [[420, "introduce-a-fluxestimate-base-class"]], "Introduce a FluxMap API": [[420, "introduce-a-fluxmap-api"]], "Introduce a FluxPointsCollection API": [[420, "introduce-a-fluxpointscollection-api"]], "Introduce gammapy.datasets": [[417, "introduce-gammapy-datasets"]], "Introduce gammapy.estimators": [[417, "introduce-gammapy-estimators"]], "Introduce gammapy.makers": [[417, "introduce-gammapy-makers"]], "Introduce gammapy.modeling": [[414, "introduce-gammapy-modeling"]], "Introduce gammapy.visualization": [[417, "introduce-gammapy-visualization"]], "Introduce naming scheme for models": [[406, "introduce-naming-scheme-for-models"]], "Introduction": [[406, "introduction"], [409, "introduction"], [410, "introduction"], [412, "introduction"], [413, "introduction"], [416, "introduction"], [420, "introduction"], [422, "introduction"], [423, "introduction"], [468, "introduction"], [474, "introduction"], [476, "introduction"], [485, "introduction"], [497, "introduction"], [501, "introduction"], [502, "introduction"], [503, "introduction"], [508, "introduction"], [509, "introduction"], [518, "introduction"], [519, "introduction"], [520, "introduction"], [521, "introduction"], [524, "introduction"], [531, null], [532, "introduction"], [534, "introduction"], [536, "introduction"], [537, "introduction"], [610, "introduction"]], "Introduction of background models": [[406, "introduction-of-background-models"]], "Introduction of model name attributes": [[406, "introduction-of-model-name-attributes"]], "Introduction of \u201cforward folded\u201d models": [[406, "introduction-of-forward-folded-models"]], "InverseCDFSampler": [[343, null]], "IsothermalProfile": [[22, null]], "Isotropic diffuse background": [[519, "isotropic-diffuse-background"]], "Iterating by image": [[509, "iterating-by-image"]], "J Factors": [[501, "j-factors"]], "JFactory": [[23, null]], "Joint Analysis": [[542, "joint-analysis"]], "Joint analysis": [[483, "joint-analysis"], [484, "joint-analysis"]], "Jupyter": [[430, "id2"], [432, "jupyter"]], "Jupyter notebooks": [[434, "jupyter-notebooks"]], "Key Features": [[504, "key-features"]], "Known issues": [[465, "known-issues"]], "LabelMapAxis": [[199, null], [509, "labelmapaxis"]], "Latest CTAO performance files": [[518, "latest-ctao-performance-files"]], "Lazy loading of Datasets": [[407, "lazy-loading-of-datasets"]], "LazyFitsData": [[330, null]], "Let\u2019s simulate the model": [[488, "let-s-simulate-the-model"]], "Light Curve Fitting": [[410, "light-curve-fitting"]], "Light Curve estimation by observation": [[494, "light-curve-estimation-by-observation"]], "Light curve temporal model": [[604, null]], "Light curves": [[494, null]], "Light curves for flares": [[495, null]], "LightCurveEstimator": [[133, null]], "LightCurveTemplateTemporalModel": [[245, null]], "Lightcurve": [[410, "lightcurve"]], "Lightcurves": [[502, "lightcurves"]], "Lightcurves in gamma-ray astronomy": [[410, "lightcurves-in-gamma-ray-astronomy"]], "Limitations": [[405, "limitations"]], "Linear temporal model": [[600, null]], "LinearTemporalModel": [[246, null]], "Links to documentation": [[396, "links-to-documentation"]], "Links to other tutorials": [[396, "links-to-other-tutorials"]], "List available catalogs": [[502, "list-available-catalogs"]], "Load Data": [[474, "load-data"]], "Load IRFs and prepare dataset": [[468, "load-irfs-and-prepare-dataset"]], "Load catalogs": [[502, "load-catalogs"]], "Load data": [[476, "load-data"]], "Load spectral points": [[472, "load-spectral-points"]], "Load the data": [[469, "load-the-data"]], "Load the light curve for the PKS 2155-304 as a FluxPoints object.": [[504, "load-the-light-curve-for-the-pks-2155-304-as-a-fluxpoints-object"]], "Load the tables": [[520, "load-the-tables"]], "Loading models from a catalog": [[511, "loading-models-from-a-catalog"]], "Loading the spectral datasets": [[513, "loading-the-spectral-datasets"]], "Locate origin of warnings": [[395, "locate-origin-of-warnings"]], "Log parabola spectral model": [[582, null]], "Log parabola spectral norm model": [[583, null]], "Log-Parabola Fit": [[472, "log-parabola-fit"]], "LogParabolaNormSpectralModel": [[247, null]], "LogParabolaSpectralModel": [[248, null]], "LogSpiral": [[34, null]], "LogUniformPrior": [[249, null]], "Long Term Support releases": [[422, "long-term-support-releases"]], "Lorimer2006": [[35, null]], "Low level API": [[530, null]], "Low level map and cube analysis": [[401, "low-level-map-and-cube-analysis"]], "MAKER_REGISTRY": [[175, null]], "METHOD_DEFAULT": [[337, null]], "METHOD_KWARGS_DEFAULT": [[338, null]], "MODEL_REGISTRY": [[250, null]], "Main documentation": [[426, "main-documentation"]], "Maintainer and developer perspective": [[402, "maintainer-and-developer-perspective"]], "Maintenance and Code Quality": [[404, "maintenance-and-code-quality"]], "Make a Bugfix release": [[427, "make-a-bugfix-release"]], "Make a Li&Ma test over the events": [[497, "make-a-li-ma-test-over-the-events"]], "Make a theta-square plot": [[517, null]], "Make sky images": [[485, "make-sky-images"]], "Make small pull requests": [[398, "make-small-pull-requests"]], "Maker": [[176, null]], "Makers": [[423, "makers"]], "Makers - Data reduction": [[508, null]], "Making a butterfly plot": [[530, "making-a-butterfly-plot"]], "Making a pull request that requires backport": [[395, "making-a-pull-request-that-requires-backport"]], "Making a pull request which skips GitHub Actions": [[395, "making-a-pull-request-which-skips-github-actions"]], "Making a pull request with new or modified datasets": [[395, "making-a-pull-request-with-new-or-modified-datasets"]], "Making a theta2 plot for a given energy range": [[517, "making-a-theta2-plot-for-a-given-energy-range"]], "Manipulation and selection of Datasets": [[426, "manipulation-and-selection-of-datasets"]], "Manual grouping of observations": [[514, "manual-grouping-of-observations"]], "Map": [[200, null]], "Map Analysis / Data Reduction": [[404, "map-analysis-data-reduction"]], "MapAxes": [[201, null]], "MapAxis": [[202, null]], "MapCoord": [[203, null], [558, "mapcoord"]], "MapDataset": [[104, null], [407, "mapdataset"], [503, "mapdataset"]], "MapDatasetEventSampler": [[105, null], [408, "mapdataseteventsampler"]], "MapDatasetMaker": [[177, null]], "MapDatasetMetaData": [[106, null]], "MapDatasetOnOff": [[107, null], [407, "mapdatasetonoff"]], "MapPanelPlotter": [[382, null]], "Maps": [[204, null], [404, "maps"], [509, null], [532, "maps"]], "Maps operations": [[509, "maps-operations"]], "Mask dilation and erosion": [[510, "mask-dilation-and-erosion"]], "Mask maps": [[510, null]], "Mask modifications": [[510, "mask-modifications"]], "Mask some sky regions": [[510, "mask-some-sky-regions"]], "Masks for fitting": [[510, "masks-for-fitting"]], "Masks operations": [[510, "masks-operations"]], "Meetings": [[404, "meetings"]], "Meta Data Handling": [[426, "meta-data-handling"]], "Metadata API": [[423, "metadata-api"]], "Metadata files": [[422, "metadata-files"]], "Metadata generation and propagation along the dataflow": [[423, "metadata-generation-and-propagation-along-the-dataflow"]], "Methods to characterize variability": [[500, "methods-to-characterize-variability"]], "MeyerCrabSpectralModel": [[251, null]], "Minor changes": [[417, "minor-changes"]], "Mission elapsed times (MET)": [[613, "mission-elapsed-times-met"]], "Model": [[252, null]], "Model Gallery": [[522, null], [524, "model-gallery"]], "Model and dataset": [[505, "model-and-dataset"], [515, "model-and-dataset"]], "Model definition": [[513, "model-definition"]], "Model fit": [[485, "model-fit"]], "Model fitting": [[475, "model-fitting"], [529, "model-fitting"]], "Model gallery": [[560, null]], "Model lists and serialisation": [[512, "model-lists-and-serialisation"]], "Model the observed spectrum": [[469, "model-the-observed-spectrum"]], "ModelBase": [[253, null]], "Modeling": [[404, "modeling"], [423, "modeling"], [499, "modeling"]], "Modeling and Fitting (DL4 to DL5)": [[606, null]], "Modeling and fitting": [[483, "modeling-and-fitting"]], "Modelling": [[480, "modelling"], [511, null]], "Models": [[254, null], [512, null]], "Models and Modeling": [[426, "models-and-modeling"]], "Models with energy dependent morphology": [[512, "models-with-energy-dependent-morphology"]], "Models with shared parameter": [[512, "models-with-shared-parameter"]], "Modifying Data": [[509, "modifying-data"]], "Modifying model parameters": [[512, "modifying-model-parameters"]], "MooreProfile": [[24, null]], "Morphological energy dependence estimation": [[486, null]], "Morphology estimation": [[426, "morphology-estimation"]], "Motivation": [[424, "motivation"], [425, "motivation"]], "Multi instrument joint 3D and 1D analysis": [[484, null]], "NFWProfile": [[25, null]], "N_JOBS_DEFAULT": [[339, null]], "Naima spectral model": [[584, null]], "NaimaSpectralModel": [[255, null]], "Need of four individual responses": [[551, "need-of-four-individual-responses"]], "New features": [[460, "new-features"], [463, "new-features"], [464, "new-features"], [465, "new-features"]], "Next steps": [[518, "next-steps"], [520, "next-steps"], [521, "next-steps"]], "Night-wise LC estimation": [[494, "night-wise-lc-estimation"]], "Norm Spectral Models": [[512, "norm-spectral-models"]], "Notations": [[611, "notations"]], "Note": [[505, "note"]], "Notes": [[610, "notes"]], "Nuisance parameters and priors": [[426, "nuisance-parameters-and-priors"]], "OGIPDatasetReader": [[108, null]], "OGIPDatasetWriter": [[109, null]], "Object text repr, str and info": [[395, "object-text-repr-str-and-info"]], "Objective": [[480, "objective"], [481, "objective"], [487, "objective"], [488, "objective"], [514, "objective"]], "Objectives": [[405, "objectives"]], "Observation": [[89, null]], "Observation duration and effective livetime": [[508, "observation-duration-and-effective-livetime"]], "Observation selection": [[475, "observation-selection"], [529, "observation-selection"]], "ObservationEventSampler": [[110, null]], "ObservationFilter": [[90, null]], "ObservationMetaData": [[91, null]], "ObservationTable": [[92, null]], "Observational clustering": [[514, null]], "Observations": [[93, null]], "ObservationsEventsSampler": [[94, null]], "Obtain the data to use": [[486, "obtain-the-data-to-use"]], "Obtain the observations": [[514, "obtain-the-observations"]], "Obtaining an integral flux sensitivity": [[468, "obtaining-an-integral-flux-sensitivity"]], "Old example data": [[428, "old-example-data"]], "On-Off analysis": [[477, "on-off-analysis"]], "Opening the data": [[497, "opening-the-data"]], "OptimizeResult": [[217, null]], "Optional dependencies": [[394, "optional-dependencies"], [412, "optional-dependencies"]], "Other folders": [[428, "other-folders"]], "Other packages": [[534, "other-packages"]], "Other repositories": [[428, "other-repositories"]], "Other types of maps": [[558, "other-types-of-maps"]], "Others": [[395, "others"], [428, "others"]], "Outlook": [[407, "outlook"], [409, "outlook"], [411, "outlook"], [412, "outlook"], [414, "outlook"], [415, "outlook"], [416, "outlook"], [417, "outlook"], [420, "outlook"]], "Output in Jupyter notebook cells": [[395, "output-in-jupyter-notebook-cells"]], "Outputs from the Nested Sampling": [[425, "outputs-from-the-nested-sampling"]], "Overview": [[553, "overview"], [555, "overview"], [556, "overview"]], "PIG 1 - PIG purpose and guidelines": [[400, null]], "PIG 10 - Regions": [[409, null]], "PIG 11 - Light curves": [[410, null]], "PIG 12 - High level interface": [[411, null]], "PIG 13 - Gammapy dependencies and distribution": [[412, null]], "PIG 14 - Uncertainty estimation": [[413, null]], "PIG 16 - Gammapy package structure": [[414, null]], "PIG 17 - Provenance capture": [[415, null]], "PIG 18 - Documentation": [[416, null]], "PIG 19 - Gammapy package structure follow up": [[417, null]], "PIG 2 - Organization of low level analysis code": [[401, null]], "PIG 20 - Global Model API": [[418, null]], "PIG 21 - Models improvements": [[419, null]], "PIG 22 - Unified flux estimators API": [[420, null]], "PIG 23 - Gammapy release cycle and version numbering": [[421, null]], "PIG 24 - Authorship policy": [[422, null]], "PIG 25 - Metadata container for Gammapy": [[423, null]], "PIG 26 - Model Priors API": [[424, null]], "PIG 27 - Bayesian Inference using Nested Sampling": [[425, null]], "PIG 28 - Gammapy version 2.0 Roadmap": [[426, null]], "PIG 3 - Plan for dropping Python 2.7 support": [[402, null]], "PIG 4 - Setup for tutorial notebooks and data": [[403, null]], "PIG 5 - Gammapy 1.0 roadmap": [[404, null]], "PIG 6 - CTA observation handling": [[405, null]], "PIG 7 - Models": [[406, null]], "PIG 8 - Datasets": [[407, null]], "PIG 9 - Event sampling": [[408, null]], "PIG review": [[400, "pig-review"]], "PIG status": [[400, "pig-status"]], "PIGs": [[399, null]], "POOL_KWARGS_DEFAULT": [[340, null]], "PSF": [[507, "psf"], [519, "psf"]], "PSF3D": [[164, null]], "PSFKernel": [[165, null]], "PSFKing": [[166, null]], "PSFMap": [[167, null]], "PWN": [[50, null]], "Package / API": [[506, null], [524, "package-api"]], "Package and docs": [[428, "package-and-docs"]], "Package structure and dependencies": [[451, "package-structure-and-dependencies"]], "Paczynski1990": [[36, null]], "Paczynski1990Velocity": [[37, null]], "Papers": [[404, "papers"]], "Parallel evaluation of datasets": [[407, "parallel-evaluation-of-datasets"]], "Parameter": [[218, null]], "ParameterEstimator": [[134, null]], "ParameterSensitivityEstimator": [[135, null]], "Parameters": [[219, null]], "ParametricPSF": [[168, null]], "Perform spectral model fitting": [[470, "perform-spectral-model-fitting"]], "Perform the data reduction loop": [[530, "perform-the-data-reduction-loop"]], "Perform the data reduction loop.": [[470, "perform-the-data-reduction-loop"]], "Performance and precision evaluation": [[408, "performance-and-precision-evaluation"]], "Phase curve temporal model": [[603, null]], "Phase-resolved map": [[497, "phase-resolved-map"]], "Phase-resolved spectrum": [[497, "phase-resolved-spectrum"]], "PhaseBackgroundMaker": [[178, null]], "Phasogram": [[497, "phasogram"]], "Piecewise  norm spectral model": [[585, null]], "Piecewise norm spatial model": [[567, null]], "PiecewiseNormSpatialModel": [[256, null]], "PiecewiseNormSpectralModel": [[257, null]], "Pixel coordinate convention": [[395, "pixel-coordinate-convention"]], "Plot": [[485, "plot"]], "Plot off regions": [[474, "plot-off-regions"]], "Plot the fitted spectrum": [[530, "plot-the-fitted-spectrum"]], "Plot the observed and intrinsic fluxes": [[469, "plot-the-observed-and-intrinsic-fluxes"]], "Plotting Results": [[489, "plotting-results"]], "Plotting a RegionGeom": [[559, "plotting-a-regiongeom"]], "Plotting models on a (counts) map": [[511, "plotting-models-on-a-counts-map"]], "Plotting the final results of the 1D Analysis": [[475, "plotting-the-final-results-of-the-1d-analysis"]], "Plotting the map content": [[559, "plotting-the-map-content"]], "Plotting the results": [[486, "plotting-the-results"]], "Plotting the underlying region": [[559, "plotting-the-underlying-region"]], "Point Spread Function": [[552, null]], "Point source sensitivity": [[468, null]], "Point spatial model": [[568, null]], "Point spread function": [[518, "point-spread-function"]], "PointSpatialModel": [[258, null]], "PointingInfo": [[95, null]], "PointingMode": [[96, null]], "Possible implementations": [[422, "possible-implementations"]], "Possible major changes": [[426, "possible-major-changes"]], "Post release": [[427, "post-release"]], "Power Law Fit": [[472, "power-law-fit"]], "Power law 2 spectral model": [[587, null]], "Power law norm spectral model": [[588, null]], "Power law spectral model": [[586, null]], "PowerLaw temporal model": [[601, null]], "PowerLaw2SpectralModel": [[259, null]], "PowerLawNormSpectralModel": [[260, null]], "PowerLawSpectralModel": [[261, null]], "PowerLawTemporalModel": [[262, null]], "Predicted counts": [[542, "predicted-counts"]], "Prepare and run the event sampler": [[488, "prepare-and-run-the-event-sampler"]], "Prepare the datasets creation": [[470, "prepare-the-datasets-creation"]], "Preparing reduced datasets geometry": [[530, "preparing-reduced-datasets-geometry"]], "Prerequisites": [[470, "prerequisites"], [472, "prerequisites"], [474, "prerequisites"], [475, "prerequisites"], [476, "prerequisites"], [477, "prerequisites"], [480, "prerequisites"], [484, "prerequisites"], [486, "prerequisites"], [487, "prerequisites"], [488, "prerequisites"], [489, "prerequisites"], [492, "prerequisites"], [494, "prerequisites"], [495, "prerequisites"], [496, "prerequisites"], [500, "prerequisites"], [505, "prerequisites"], [510, "prerequisites"], [511, "prerequisites"], [515, "prerequisites"], [529, "prerequisites"], [530, "prerequisites"]], "Pretty-print source information": [[502, "pretty-print-source-information"]], "PrimaryFlux": [[26, null]], "Prior": [[263, null]], "PriorParameter": [[220, null]], "PriorParameters": [[221, null]], "Priors": [[515, null]], "Profile Estimation": [[489, "profile-estimation"]], "Profile Likelihood": [[612, "profile-likelihood"]], "Profiles": [[501, "profiles"]], "Project Management": [[404, "project-management"]], "Project setup": [[428, null]], "Projects": [[404, "projects"]], "Proposal": [[403, "proposal"], [405, "proposal"], [406, "proposal"], [407, "proposal"], [408, "proposal"], [409, "proposal"], [410, "proposal"], [411, "proposal"], [413, "proposal"], [414, "proposal"], [415, "proposal"], [416, "proposal"], [417, "proposal"], [418, "proposal"], [419, "proposal"], [425, "proposal"]], "Proposal of API for flux estimate results": [[420, "proposal-of-api-for-flux-estimate-results"]], "Proposed Approach": [[489, "proposed-approach"]], "Proposed approach": [[470, "proposed-approach"], [472, "proposed-approach"], [475, "proposed-approach"], [477, "proposed-approach"], [478, "proposed-approach"], [480, "proposed-approach"], [481, "proposed-approach"], [484, "proposed-approach"], [487, "proposed-approach"], [488, "proposed-approach"], [492, "proposed-approach"], [494, "proposed-approach"], [495, "proposed-approach"], [496, "proposed-approach"], [499, "proposed-approach"], [500, "proposed-approach"], [505, "proposed-approach"], [510, "proposed-approach"], [511, "proposed-approach"], [513, "proposed-approach"], [514, "proposed-approach"], [529, "proposed-approach"], [530, "proposed-approach"]], "Proposed class diagram": [[405, "proposed-class-diagram"]], "Proposed metadata classes": [[423, "proposed-metadata-classes"]], "Proposed minor changes": [[426, "proposed-minor-changes"]], "Proposed solution": [[423, "proposed-solution"]], "Pull Requests": [[451, "pull-requests"], [452, "pull-requests"], [460, "pull-requests"], [461, "pull-requests"], [462, "pull-requests"], [463, "pull-requests"], [464, "pull-requests"], [465, "pull-requests"]], "Pull requests": [[437, "pull-requests"], [438, "pull-requests"], [439, "pull-requests"], [440, "pull-requests"], [441, "pull-requests"], [442, "pull-requests"], [443, "pull-requests"], [444, "pull-requests"], [445, "pull-requests"], [446, "pull-requests"], [447, "pull-requests"], [448, "pull-requests"], [449, "pull-requests"], [450, "pull-requests"], [453, "pull-requests"], [454, "pull-requests"], [455, "pull-requests"], [456, "pull-requests"], [457, "pull-requests"], [458, "pull-requests"], [459, "pull-requests"]], "Pulsar": [[51, null]], "Pulsar Source Models": [[538, null]], "Pulsar Wind Nebula Source Models": [[539, null]], "Pulsar analysis": [[497, null]], "Pulsed signal search": [[426, "pulsed-signal-search"]], "Python": [[434, "id2"]], "Python scripts": [[434, "python-scripts"]], "Python version support": [[395, "python-version-support"]], "RadMax2D": [[169, null]], "Read and Introduce Data": [[489, "read-and-introduce-data"]], "Read in input images": [[478, "read-in-input-images"]], "Read the datasets": [[511, "read-the-datasets"]], "Read the energy-dependent model": [[488, "read-the-energy-dependent-model"]], "Reading Maps": [[509, "reading-maps"]], "Reading and Writing": [[509, "reading-and-writing"]], "Reading and writing masks": [[510, "reading-and-writing-masks"]], "Reading different datasets": [[484, "reading-different-datasets"]], "RecoPSFMap": [[170, null]], "Recommended Setup": [[430, "recommended-setup"], [432, null]], "Reference": [[416, "reference"], [609, "reference"]], "References": [[608, "publications"], [611, "references"]], "Reflected regions background": [[508, "reflected-regions-background"], [555, null]], "ReflectedRegionsBackgroundMaker": [[179, null]], "ReflectedRegionsFinder": [[180, null]], "Region arguments": [[409, "region-arguments"]], "RegionGeom": [[205, null], [559, "regiongeom"]], "RegionGeom and RegionNDMap": [[559, null]], "RegionGeom and coordinates": [[559, "regiongeom-and-coordinates"]], "RegionNDMap": [[206, null], [559, "regionndmap"]], "RegionsFinder": [[181, null]], "Relation to WCS geometries": [[559, "relation-to-wcs-geometries"]], "Release notes": [[395, "release-notes"], [436, null]], "Release preparation, feature freeze": [[421, "release-preparation-feature-freeze"]], "Release scheduling and LTS": [[421, "release-scheduling-and-lts"]], "Releases": [[404, "releases"], [422, "releases"], [428, "releases"]], "Releasing the final version of the major release": [[427, "releasing-the-final-version-of-the-major-release"]], "Releasing the first major release candidate": [[427, "releasing-the-first-major-release-candidate"]], "Removing a model from a dataset": [[511, "removing-a-model-from-a-dataset"]], "Removing an attribute": [[395, "removing-an-attribute"]], "Renaming an argument": [[395, "renaming-an-argument"]], "Required dependencies": [[394, "required-dependencies"], [412, "required-dependencies"]], "Requirements": [[423, "requirements"]], "Resampling datasets": [[503, "resampling-datasets"]], "Residual instrumental background rate": [[551, "residual-instrumental-background-rate"]], "Resolve gammapy.detect": [[417, "resolve-gammapy-detect"]], "Results": [[468, "results"], [513, "results"]], "Results exploration": [[475, "results-exploration"]], "Ring background": [[508, "ring-background"], [556, null]], "Ring background map": [[481, null]], "RingBackgroundMaker": [[182, null]], "Rotated regions": [[409, "rotated-regions"]], "Run Estimation": [[489, "run-estimation"]], "Run Estimator": [[486, "run-estimator"]], "Run data reduction chain": [[474, "run-data-reduction-chain"], [476, "run-data-reduction-chain"]], "Run the 1D data reduction": [[494, "run-the-1d-data-reduction"]], "Run the 3D data reduction": [[494, "run-the-3d-data-reduction"]], "Running config driven data reduction": [[609, "running-config-driven-data-reduction"]], "Running tests & building Documentation": [[398, "running-tests-building-documentation"]], "Running the Data Reduction": [[475, "running-the-data-reduction"]], "Running the analysis": [[529, "running-the-analysis"]], "Running the estimation": [[475, "running-the-estimation"]], "Running the first step of the analysis: the Data Reduction": [[475, "running-the-first-step-of-the-analysis-the-data-reduction"]], "Running the fit": [[475, "running-the-fit"]], "Running the light curve extraction in 1D": [[494, "running-the-light-curve-extraction-in-1d"]], "SED types": [[544, "sed-types"]], "SNR": [[52, null]], "SNRTrueloveMcKee": [[53, null]], "SPATIAL_MODEL_REGISTRY": [[264, null]], "SPECTRAL_MODEL_REGISTRY": [[265, null]], "Safe data range definition": [[554, "safe-data-range-definition"]], "Safe data range handling": [[508, "safe-data-range-handling"]], "SafeMaskMaker": [[183, null]], "Sample a source with energy-dependent temporal evolution": [[488, null]], "Sampler": [[222, null]], "SamplerResult": [[223, null]], "Sampling methods": [[408, "sampling-methods"]], "Sampling the source and background events": [[487, "sampling-the-source-and-background-events"]], "Save dataset to disk": [[475, "save-dataset-to-disk"], [529, "save-dataset-to-disk"], [530, "save-dataset-to-disk"]], "ScaleSpectralModel": [[266, null]], "ScaledRegularGridInterpolator": [[333, null]], "Scripts": [[524, "scripts"], [525, null]], "Select a catalog subset": [[502, "select-a-catalog-subset"]], "Select a source": [[502, "select-a-source"]], "Select observations": [[485, "select-observations"]], "Select the ON region": [[470, "select-the-on-region"]], "Select the data": [[470, "select-the-data"], [495, "select-the-data"]], "Selecting models contributing to a given region": [[511, "selecting-models-contributing-to-a-given-region"]], "Selecting models from a list": [[511, "selecting-models-from-a-list"]], "SensitivityEstimator": [[136, null]], "Serialisation": [[424, "serialisation"], [507, "serialisation"], [507, "id1"], [507, "id2"], [519, "serialisation"]], "Serialisation and I/O": [[489, "serialisation-and-i-o"]], "Serialisation of datasets": [[542, "serialisation-of-datasets"]], "Serialisation of the fit result": [[475, "serialisation-of-the-fit-result"]], "Serialisation of the results": [[475, "serialisation-of-the-results"]], "Serialisation of the samples": [[425, "serialisation-of-the-samples"]], "Serialising models": [[511, "serialising-models"]], "Serialization": [[423, "serialization"]], "Setting fitting parameters": [[475, "setting-fitting-parameters"]], "Setting modeling and fitting parameters": [[529, "setting-modeling-and-fitting-parameters"]], "Setting the background normalization maker": [[529, "setting-the-background-normalization-maker"]], "Setting the data to use": [[529, "setting-the-data-to-use"]], "Setting the exclusion mask": [[475, "setting-the-exclusion-mask"], [529, "setting-the-exclusion-mask"]], "Setting the reduced datasets geometry": [[529, "setting-the-reduced-datasets-geometry"]], "Setup": [[468, "setup"], [469, "setup"], [470, "setup"], [472, "setup"], [474, "setup"], [475, "setup"], [476, "setup"], [477, "setup"], [478, "setup"], [480, "setup"], [481, "setup"], [485, "setup"], [486, "setup"], [487, "setup"], [488, "setup"], [489, "setup"], [494, "setup"], [495, "setup"], [496, "setup"], [499, "setup"], [500, "setup"], [501, "setup"], [503, "setup"], [508, "setup"], [509, "setup"], [510, "setup"], [511, "setup"], [512, "setup"], [513, "setup"], [517, "setup"], [518, "setup"], [519, "setup"], [529, "setup"], [530, "setup"], [532, "setup"]], "Shell spatial model": [[569, null]], "Shell2 spatial model": [[570, null]], "Shell2SpatialModel": [[267, null]], "ShellSpatialModel": [[268, null]], "Show images": [[485, "show-images"]], "Show the results tables": [[486, "show-the-results-tables"]], "Show various observation quantities": [[514, "show-various-observation-quantities"]], "SimplePulsar": [[54, null]], "Simplify YAML Parameter Representation": [[419, "simplify-yaml-parameter-representation"]], "Simplify YAML Representation": [[419, "simplify-yaml-representation"]], "Simulate multiple event lists": [[487, "simulate-multiple-event-lists"]], "Simulating a light curve": [[496, "simulating-a-light-curve"]], "Simulating and fitting a time varying source": [[496, null]], "Simulation": [[492, "simulation"]], "Simulation of MapDataset and SpectrumDataset": [[407, "simulation-of-mapdataset-and-spectrumdataset"]], "Simulation of a single spectrum": [[477, "simulation-of-a-single-spectrum"]], "Sine temporal model": [[602, null]], "SineTemporalModel": [[269, null]], "Skip unit tests for some Astropy versions": [[395, "skip-unit-tests-for-some-astropy-versions"]], "Sky and pixel regions": [[409, "sky-and-pixel-regions"]], "Sky maps (DL4)": [[558, null]], "SkyModel": [[270, null], [512, "skymodel"]], "Smooth broken power law spectral model": [[589, null]], "SmoothBrokenPowerLawSpectralModel": [[271, null]], "Some terminology": [[405, "some-terminology"]], "Source Detection": [[485, "source-detection"]], "Source candidates": [[478, "source-candidates"]], "Source catalogs": [[502, null], [532, "source-catalogs"], [541, null]], "Source detection": [[426, "source-detection"]], "Source detection and significance maps": [[478, null]], "Source information": [[502, "source-information"]], "Source models": [[502, "source-models"], [518, "source-models"]], "Source object": [[502, "source-object"]], "Source statistic": [[474, "source-statistic"]], "SourceCatalog": [[56, null]], "SourceCatalog1LHAASO": [[57, null]], "SourceCatalog2FHL": [[58, null]], "SourceCatalog2HWC": [[59, null]], "SourceCatalog2PC": [[60, null]], "SourceCatalog3FGL": [[61, null]], "SourceCatalog3FHL": [[62, null]], "SourceCatalog3HWC": [[63, null]], "SourceCatalog3PC": [[64, null]], "SourceCatalog4FGL": [[65, null]], "SourceCatalogGammaCat": [[66, null]], "SourceCatalogHGPS": [[67, null]], "SourceCatalogLargeScaleHGPS": [[68, null]], "SourceCatalogObject": [[69, null]], "SourceCatalogObject1LHAASO": [[70, null]], "SourceCatalogObject2FHL": [[71, null]], "SourceCatalogObject2HWC": [[72, null]], "SourceCatalogObject2PC": [[73, null]], "SourceCatalogObject3FGL": [[74, null]], "SourceCatalogObject3FHL": [[75, null]], "SourceCatalogObject3HWC": [[76, null]], "SourceCatalogObject3PC": [[77, null]], "SourceCatalogObject4FGL": [[78, null]], "SourceCatalogObjectGammaCat": [[79, null]], "SourceCatalogObjectHGPS": [[80, null]], "SourceCatalogObjectHGPSComponent": [[81, null]], "SourceIRFModel": [[406, "sourceirfmodel"]], "Spatial analysis": [[485, "spatial-analysis"]], "Spatial models": [[512, "spatial-models"], [560, "spatial-models"], [562, null]], "SpatialIRFModel": [[406, "spatialirfmodel"]], "SpatialModel": [[272, null]], "Special cases": [[612, "special-cases"]], "Specific Projects": [[426, "specific-projects"]], "Specificities of the HGPS catalog": [[502, "specificities-of-the-hgps-catalog"]], "Spectral Absorption Model": [[419, "spectral-absorption-model"]], "Spectral Norm Models": [[419, "spectral-norm-models"]], "Spectral analysis": [[474, null]], "Spectral analysis of extended sources": [[470, null]], "Spectral analysis with energy-dependent directional cuts": [[476, null]], "Spectral analysis with the HLI": [[475, null]], "Spectral models": [[512, "spectral-models"], [560, "spectral-models"], [573, null]], "Spectral models and flux points": [[532, "spectral-models-and-flux-points"]], "Spectral points": [[485, "spectral-points"]], "Spectral unfolding": [[426, "spectral-unfolding"]], "SpectralIRFModel": [[406, "spectralirfmodel"]], "SpectralModel": [[273, null]], "Spectrum": [[485, "spectrum"]], "Spectrum dataset": [[508, "spectrum-dataset"]], "SpectrumDataset": [[111, null], [407, "spectrumdataset"], [503, "spectrumdataset"]], "SpectrumDatasetMaker": [[184, null]], "SpectrumDatasetOnOff": [[112, null], [407, "spectrumdatasetonoff"]], "Sphinx gallery extension": [[396, "sphinx-gallery-extension"]], "Spiral arm models": [[536, "spiral-arm-models"]], "Stack observations": [[474, "stack-observations"]], "Stacked analysis": [[483, "stacked-analysis"]], "Stacking Multiple Datasets": [[542, "stacking-multiple-datasets"]], "Statistical significance of a detection": [[517, "statistical-significance-of-a-detection"]], "Statistical utility functions": [[611, "statistical-utility-functions"]], "Statistics in Gammapy": [[611, null]], "Status": [[405, "status"], [414, "status"], [415, "status"]], "Storing the energy dispersion information as a function of sky position": [[550, "storing-the-energy-dispersion-information-as-a-function-of-sky-position"]], "Storing the results and further studies": [[410, "storing-the-results-and-further-studies"]], "Sub-packages": [[535, "sub-packages"]], "Suggestions": [[422, "suggestions"]], "Summary": [[437, "summary"], [438, "summary"], [439, "summary"], [440, "summary"], [441, "summary"], [442, "summary"], [443, "summary"], [444, "summary"], [445, "summary"], [446, "summary"], [447, "summary"], [448, "summary"], [449, "summary"], [450, "summary"], [451, "summary"], [452, "summary"], [453, "summary"], [454, "summary"], [455, "summary"], [456, "summary"], [457, "summary"], [458, "summary"], [459, "summary"], [460, "summary"], [461, "summary"], [462, "summary"], [463, "summary"], [464, "summary"], [465, "summary"], [483, "summary"], [519, "summary"]], "Super Exponential Cutoff Power Law Model used for 4FGL-DR1 (and DR2)": [[592, null]], "Super Exponential Cutoff Power Law Model used for 4FGL-DR3": [[591, null]], "Super exponential cutoff power law model used for 3FGL": [[590, null]], "SuperExpCutoffPowerLaw3FGLSpectralModel": [[274, null]], "SuperExpCutoffPowerLaw4FGLDR3SpectralModel": [[275, null]], "SuperExpCutoffPowerLaw4FGLSpectralModel": [[276, null]], "Supernova Remnant Models": [[540, null]], "Support for Asymmetric IRFs": [[507, "support-for-asymmetric-irfs"]], "Support of python Cython, numpy and astropy versions": [[421, "support-of-python-cython-numpy-and-astropy-versions"]], "Survey Map Script": [[527, null]], "Survey panel plots": [[614, "survey-panel-plots"]], "TEMPORAL_MODEL_REGISTRY": [[277, null]], "TS map estimation": [[478, "ts-map-estimation"]], "TSMapEstimator": [[137, null]], "Table conversion": [[504, "table-conversion"]], "Task List": [[407, "task-list"]], "Task list": [[406, "task-list"], [408, "task-list"], [409, "task-list"], [410, "task-list"], [411, "task-list"], [412, "task-list"], [415, "task-list"], [425, "task-list"]], "Template spatial model": [[571, null]], "Template spectral model": [[593, null]], "TemplateNDSpatialModel": [[278, null]], "TemplateNDSpectralModel": [[279, null]], "TemplateNPredModel": [[280, null]], "TemplatePhaseCurveTemporalModel": [[281, null]], "TemplateSpatialModel": [[282, null]], "TemplateSpectralModel": [[283, null]], "Temporal models": [[512, "temporal-models"], [560, "temporal-models"], [595, null]], "TemporalModel": [[284, null]], "Testing of plotting functions": [[395, "testing-of-plotting-functions"]], "The case of image and cube analysis": [[401, "the-case-of-image-and-cube-analysis"]], "The chi-squared value for each parameter of interest": [[486, "the-chi-squared-value-for-each-parameter-of-interest"]], "The gammapy-data repository": [[428, "the-gammapy-data-repository"]], "The gammapy-extra repository": [[428, "the-gammapy-extra-repository"]], "The index tables": [[543, "the-index-tables"]], "The reflected region finder": [[555, "the-reflected-region-finder"]], "The results for testing energy dependence": [[486, "the-results-for-testing-energy-dependence"]], "The results of the source signal above the background in each energy bin": [[486, "the-results-of-the-source-signal-above-the-background-in-each-energy-bin"]], "The setup": [[484, "the-setup"], [504, "the-setup"], [505, "the-setup"], [515, "the-setup"]], "Time": [[493, null], [524, "time"]], "Time bin preparation": [[410, "time-bin-preparation"]], "Time bins": [[410, "time-bins"]], "Time differences": [[613, "time-differences"]], "Time format and scale": [[613, "time-format-and-scale"]], "Time handling in Gammapy": [[613, "time-handling-in-gammapy"]], "Time resolved spectroscopy algorithm": [[499, "time-resolved-spectroscopy-algorithm"]], "Time resolved spectroscopy estimator": [[499, null]], "Time variable source using a lightcurve": [[487, "time-variable-source-using-a-lightcurve"]], "TimeMapAxis": [[207, null], [509, "timemapaxis"]], "Timing Analysis": [[404, "timing-analysis"]], "TimmerKonig_lightcurve_simulator": [[298, null]], "Transient source detection": [[426, "transient-source-detection"]], "Troubleshooting": [[433, null], [609, "troubleshooting"]], "Tutorial overview": [[486, "tutorial-overview"], [518, "tutorial-overview"], [520, "tutorial-overview"]], "Tutorials": [[416, "tutorials"], [524, null]], "Tutorials Overview": [[430, "tutorials-overview"]], "Type validation": [[423, "type-validation"]], "Types of supported datasets": [[542, "types-of-supported-datasets"]], "Unbinned spectral or 3D analysis": [[426, "unbinned-spectral-or-3d-analysis"]], "Understanding the outputs": [[513, "understanding-the-outputs"]], "Unification of flux estimators?": [[420, "unification-of-flux-estimators"]], "UniformPrior": [[285, null]], "Unify calling interface for models": [[406, "unify-calling-interface-for-models"]], "Upsampling and downsampling non-spatial axes": [[559, "upsampling-and-downsampling-non-spatial-axes"]], "Use cases": [[424, "use-cases"], [425, "use-cases"]], "Use cases / scenarios": [[405, "use-cases-scenarios"]], "Use cases to support": [[426, "use-cases-to-support"]], "User guide": [[547, null]], "User perspective": [[402, "user-perspective"]], "User testing of the API": [[425, "user-testing-of-the-api"]], "Using Anaconda / Miniconda": [[431, "using-anaconda-miniconda"]], "Using Factory Methods": [[509, "using-factory-methods"]], "Using Gammapy": [[434, null]], "Using Gammapy IRFs": [[507, null]], "Using Mamba": [[431, "using-mamba"]], "Using YAML configuration files": [[529, "using-yaml-configuration-files"]], "Using YAML configuration files for setting/writing the Data Reduction parameters": [[475, "using-yaml-configuration-files-for-setting-writing-the-data-reduction-parameters"]], "Using data stored into your computer": [[475, "using-data-stored-into-your-computer"]], "Using gammapy.analysis": [[545, "using-gammapy-analysis"]], "Using gammapy.astro.darkmatter": [[534, "using-gammapy-astro-darkmatter"]], "Using gammapy.astro.source": [[537, "using-gammapy-astro-source"]], "Using gammapy.catalog": [[541, "using-gammapy-catalog"]], "Using gammapy.data": [[543, "using-gammapy-data"]], "Using gammapy.datasets": [[542, "using-gammapy-datasets"]], "Using gammapy.estimators": [[544, "using-gammapy-estimators"]], "Using gammapy.irf": [[551, "using-gammapy-irf"]], "Using gammapy.makers": [[554, "using-gammapy-makers"]], "Using gammapy.maps": [[558, "using-gammapy-maps"]], "Using gammapy.modeling": [[606, "using-gammapy-modeling"]], "Using masks": [[503, "using-masks"]], "Using other package managers": [[431, "using-other-package-managers"]], "Using pip": [[431, "using-pip"]], "Using regions": [[555, "using-regions"]], "Using the reflected background estimator": [[555, "using-the-reflected-background-estimator"]], "Utility functions": [[613, null]], "ValleeSpiral": [[38, null]], "Variables": [[1, "variables"], [2, "variables"], [3, "variables"], [4, "variables"], [5, "variables"], [7, "variables"], [8, "variables"], [10, "variables"], [13, "variables"], [13, "id12"]], "Velocity distributions": [[536, "velocity-distributions"]], "Venv Environments": [[429, "venv-environments"]], "Version 0.1": [[436, "version-0-1"]], "Version 0.10": [[436, "version-0-10"]], "Version 0.11": [[436, "version-0-11"]], "Version 0.12": [[436, "version-0-12"]], "Version 0.13": [[436, "version-0-13"]], "Version 0.14": [[436, "version-0-14"]], "Version 0.15": [[436, "version-0-15"]], "Version 0.16": [[436, "version-0-16"]], "Version 0.17": [[436, "version-0-17"]], "Version 0.18": [[436, "version-0-18"]], "Version 0.19": [[436, "version-0-19"]], "Version 0.2": [[436, "version-0-2"]], "Version 0.20": [[436, "version-0-20"]], "Version 0.20.1": [[436, "version-0-20-1"]], "Version 0.3": [[436, "version-0-3"]], "Version 0.4": [[436, "version-0-4"]], "Version 0.5": [[436, "version-0-5"]], "Version 0.6": [[436, "version-0-6"]], "Version 0.7": [[436, "version-0-7"]], "Version 0.8": [[436, "version-0-8"]], "Version 0.9": [[436, "version-0-9"]], "Version 1.0": [[436, "version-1-0"]], "Version 1.0.1": [[436, "version-1-0-1"]], "Version 1.0.2": [[436, "version-1-0-2"]], "Version 1.1": [[436, "version-1-1"]], "Version 1.2": [[436, "version-1-2"]], "Version 1.3": [[436, "version-1-3"]], "Version Support for I/O": [[426, "version-support-for-i-o"]], "Version numbering": [[421, "version-numbering"]], "Virtual Environments": [[429, null]], "Visualing a RegionNDMap": [[559, "visualing-a-regionndmap"]], "Visualising the results": [[499, "visualising-the-results"]], "Visualization": [[614, null]], "Visualizing and Plotting": [[509, "visualizing-and-plotting"]], "WStat : Poisson data with background measurement": [[610, "wstat-poisson-data-with-background-measurement"]], "WStat counts statistic": [[611, "wstat-counts-statistic"]], "WStatCountsStatistic": [[299, null]], "WcsGeom": [[208, null]], "WcsMap": [[209, null]], "WcsNDMap": [[210, null]], "What checks and conversions should I do for inputs?": [[395, "what-checks-and-conversions-should-i-do-for-inputs"]], "What is a PIG?": [[400, "what-is-a-pig"]], "What is this?": [[398, "what-is-this"]], "What next?": [[472, "what-next"], [474, "what-next"], [478, "what-next"], [485, "what-next"], [494, "what-next"], [532, "what-next"]], "What others have": [[405, "what-others-have"]], "What we have": [[403, "what-we-have"], [411, "what-we-have"], [420, "what-we-have"]], "What\u2019s new?": [[438, "what-s-new"], [439, "what-s-new"], [440, "what-s-new"], [441, "what-s-new"], [442, "what-s-new"], [443, "what-s-new"], [444, "what-s-new"], [445, "what-s-new"], [446, "what-s-new"], [447, "what-s-new"], [448, "what-s-new"], [449, "what-s-new"], [451, "what-s-new"], [452, "what-s-new"], [454, "what-s-new"], [455, "what-s-new"], [456, "what-s-new"], [457, "what-s-new"], [458, "what-s-new"], [459, "what-s-new"]], "What\u2019s next": [[529, "whats-next"]], "What\u2019s next?": [[475, "whats-next"]], "Where should I import from?": [[395, "where-should-i-import-from"]], "WobbleRegionsFinder": [[185, null]], "Working with event lists": [[543, "working-with-event-lists"]], "Write your own CLI": [[609, "write-your-own-cli"]], "Writing Maps": [[509, "writing-maps"]], "Writing a PIG": [[400, "writing-a-pig"]], "Writing and reading a RegionNDMap to/from a FITS file": [[559, "writing-and-reading-a-regionndmap-to-from-a-fits-file"]], "Writing event lists and GTIs to file": [[543, "writing-event-lists-and-gtis-to-file"]], "YAML representation": [[563, "yaml-representation"], [564, "yaml-representation"], [565, "yaml-representation"], [566, "yaml-representation"], [567, "yaml-representation"], [568, "yaml-representation"], [569, "yaml-representation"], [570, "yaml-representation"], [571, "yaml-representation"], [574, "yaml-representation"], [575, "yaml-representation"], [576, "yaml-representation"], [577, "yaml-representation"], [578, "yaml-representation"], [579, "yaml-representation"], [580, "yaml-representation"], [581, "yaml-representation"], [582, "yaml-representation"], [583, "yaml-representation"], [584, "yaml-representation"], [585, "yaml-representation"], [586, "yaml-representation"], [587, "yaml-representation"], [588, "yaml-representation"], [589, "yaml-representation"], [590, "yaml-representation"], [591, "yaml-representation"], [592, "yaml-representation"], [593, "yaml-representation"], [596, "yaml-representation"], [597, "yaml-representation"], [598, "yaml-representation"], [599, "yaml-representation"], [600, "yaml-representation"], [601, "yaml-representation"], [602, "yaml-representation"], [603, "yaml-representation"], [604, "yaml-representation"]], "YusifovKucuk2004": [[39, null]], "YusifovKucuk2004B": [[40, null]], "ZhaoProfile": [[27, null]], "absolute_time": [[375, null]], "add_colorbar": [[383, null]], "add_observed_parameters": [[41, null]], "add_pulsar_parameters": [[42, null]], "add_pwn_parameters": [[43, null]], "add_snr_parameters": [[44, null]], "analysis": [[11, "gammapy-analysis"]], "analysis - High level interface": [[0, null]], "annotate_heatmap": [[384, null]], "apply_edisp": [[113, null], [118, null]], "arbitrary type input and validation": [[423, "arbitrary-type-input-and-validation"]], "assert_quantity_allclose": [[369, null]], "assert_skycoord_allclose": [[370, null]], "assert_time_allclose": [[371, null]], "astro - Astrophysics": [[1, null]], "cartesian": [[322, null]], "cash": [[300, null]], "cash_sum_cython": [[301, null]], "catalog - Source catalogs": [[2, null]], "check": [[11, "gammapy-check"]], "codemeta.json": [[422, "codemeta-json"]], "colormap_hess": [[385, null]], "colormap_milagro": [[386, null]], "combine_flux_maps": [[138, null]], "combine_significance_maps": [[139, null]], "compound_region_to_regions": [[352, null]], "compute_chisq": [[302, null]], "compute_flux_doubling": [[303, null]], "compute_fpp": [[304, null]], "compute_fvar": [[305, null]], "compute_lightcurve_discrete_correlation": [[140, null]], "compute_lightcurve_doublingtime": [[141, null]], "compute_lightcurve_fpp": [[142, null]], "compute_lightcurve_fvar": [[143, null]], "config": [[11, "gammapy-analysis-config"], [11, "gammapy-workflow-config"]], "containment_radius": [[211, null]], "containment_region": [[212, null]], "create_cosmic_ray_spectral_model": [[286, null]], "create_crab_spectral_model": [[287, null]], "create_empty_map_dataset_from_irfs": [[114, null]], "create_fermi_isotropic_diffuse_model": [[288, null]], "create_map_dataset_from_dl4": [[119, null]], "create_map_dataset_from_observation": [[115, null]], "create_map_dataset_geoms": [[116, null]], "cstat": [[306, null]], "data": [[423, "data"]], "data - DL3 data and observations": [[3, null]], "datasets": [[11, "gammapy-download-datasets"]], "datasets - Reduced datasets": [[4, null]], "discrete_correlation": [[307, null]], "docs.gammapy.org": [[428, "docs-gammapy-org"]], "download": [[11, "gammapy-download"]], "draw": [[344, null]], "earth_location_from_dict": [[331, null]], "estimate_exposure_reco_energy": [[144, null]], "estimators - High level estimators": [[5, null]], "f_cash_root_cython": [[308, null]], "find_peaks": [[145, null]], "find_peaks_in_flux_map": [[146, null]], "fov_to_sky": [[323, null]], "from_yaml": [[357, null]], "galactic": [[324, null]], "gamLike": [[534, "gamlike"]], "gammapy": [[11, "gammapy"]], "gammapy.analysis Package": [[0, "module-gammapy.analysis"]], "gammapy.astro.darkmatter Package": [[1, "module-gammapy.astro.darkmatter"]], "gammapy.astro.population Package": [[1, "module-gammapy.astro.population"]], "gammapy.astro.source Package": [[1, "module-gammapy.astro.source"]], "gammapy.catalog Package": [[2, "module-gammapy.catalog"]], "gammapy.data Package": [[3, "module-gammapy.data"]], "gammapy.datasets Package": [[4, "module-gammapy.datasets"]], "gammapy.datasets.utils Module": [[4, "module-gammapy.datasets.utils"]], "gammapy.estimators Package": [[5, "module-gammapy.estimators"]], "gammapy.estimators.utils Module": [[5, "module-gammapy.estimators.utils"]], "gammapy.irf Package": [[7, "module-gammapy.irf"]], "gammapy.makers Package": [[8, "module-gammapy.makers"]], "gammapy.makers.utils Module": [[8, "module-gammapy.makers.utils"]], "gammapy.maps Package": [[9, "module-gammapy.maps"]], "gammapy.modeling Package": [[10, "module-gammapy.modeling"]], "gammapy.modeling.models Package": [[10, "module-gammapy.modeling.models"]], "gammapy.modeling.models.utils Module": [[10, "module-gammapy.modeling.models.utils"]], "gammapy.org": [[428, "gammapy-org"]], "gammapy.stats Package": [[12, "module-gammapy.stats"]], "gammapy.utils.cluster Module": [[13, "module-gammapy.utils.cluster"]], "gammapy.utils.coordinates Package": [[13, "module-gammapy.utils.coordinates"]], "gammapy.utils.fits Module": [[13, "module-gammapy.utils.fits"]], "gammapy.utils.integrate Module": [[13, "module-gammapy.utils.integrate"]], "gammapy.utils.interpolation Module": [[13, "module-gammapy.utils.interpolation"]], "gammapy.utils.parallel Module": [[13, "module-gammapy.utils.parallel"]], "gammapy.utils.random Package": [[13, "module-gammapy.utils.random"]], "gammapy.utils.regions Module": [[13, "module-gammapy.utils.regions"]], "gammapy.utils.scripts Module": [[13, "module-gammapy.utils.scripts"]], "gammapy.utils.table Module": [[13, "module-gammapy.utils.table"]], "gammapy.utils.testing Module": [[13, "module-gammapy.utils.testing"]], "gammapy.utils.time Module": [[13, "module-gammapy.utils.time"]], "gammapy.utils.units Module": [[13, "module-gammapy.utils.units"]], "gammapy.visualization Package": [[14, "module-gammapy.visualization"]], "get_combined_flux_maps": [[147, null]], "get_combined_significance_maps": [[148, null]], "get_images_paths": [[358, null]], "get_irfs_features": [[97, null]], "get_random_state": [[345, null]], "get_rebinned_axis": [[149, null]], "get_wstat_gof_terms": [[309, null]], "get_wstat_mu_bkg": [[310, null]], "hierarchical_clustering": [[317, null]], "hstack_columns": [[364, null]], "info": [[11, "gammapy-info"]], "integrate_spectrum": [[289, null]], "interpolate_profile": [[334, null]], "interpolation_scale": [[335, null]], "irf - Instrument response functions": [[7, null]], "load_irf_dict_from_file": [[171, null]], "logging": [[11, "gammapy-check-logging"]], "make_base_catalog_galactic": [[45, null]], "make_catalog_random_positions_cube": [[46, null]], "make_catalog_random_positions_sphere": [[47, null]], "make_concentric_annulus_sky_regions": [[353, null]], "make_counts_rad_max": [[186, null]], "make_edisp_kernel_map": [[187, null]], "make_edisp_map": [[188, null]], "make_effective_livetime_map": [[189, null]], "make_map_background_irf": [[190, null]], "make_map_exposure_true_energy": [[191, null]], "make_observation_time_map": [[192, null]], "make_orthogonal_rectangle_sky_regions": [[354, null]], "make_path": [[359, null]], "make_psf_map": [[193, null]], "make_theta_squared_table": [[194, null]], "makers - Data reduction": [[8, null]], "maps - Sky maps": [[9, null]], "modeling - Models and fitting": [[10, null]], "motion_since_birth": [[325, null]], "mpl_plot_check": [[372, null]], "multiprocessing_manager": [[341, null]], "norm_bounds_cython": [[311, null]], "normalize": [[346, null]], "notebooks": [[11, "gammapy-download-notebooks"]], "observatory_locations": [[98, null]], "pdf": [[347, null]], "plot_contour_line": [[387, null]], "plot_distribution": [[388, null]], "plot_heatmap": [[389, null]], "plot_map_rgb": [[390, null]], "plot_npred_signal": [[391, null]], "plot_spectrum_datasets_off_regions": [[392, null]], "plot_theta_squared_table": [[393, null]], "polar": [[326, null]], "pydantic": [[423, "pydantic"]], "radial_distributions": [[48, null]], "read_hermes_cube": [[290, null], [292, null]], "read_yaml": [[360, null]], "recursive_merge_dicts": [[361, null]], "region_to_frame": [[355, null]], "regions_to_compound_region": [[356, null]], "requires_data": [[373, null]], "requires_dependency": [[374, null]], "resample_energy_edges": [[150, null]], "run": [[11, "gammapy-analysis-run"], [11, "gammapy-workflow-run"]], "run_multiprocessing": [[342, null]], "sample_powerlaw": [[348, null]], "sample_sphere": [[349, null]], "sample_sphere_distance": [[350, null]], "sample_times": [[351, null]], "scale_plot_flux": [[291, null]], "scripts - Command line tools": [[11, null]], "select_nested_models": [[293, null]], "sigma_to_ts": [[312, null]], "sky_to_fov": [[327, null]], "split_dataset": [[117, null], [120, null]], "standard_scaler": [[318, null]], "standardise_unit": [[379, null]], "stat_profile_ul_scipy": [[294, null]], "stats - Statistics": [[12, null]], "structure_function": [[313, null]], "table_row_to_dict": [[365, null]], "table_standardise_units_copy": [[366, null]], "table_standardise_units_inplace": [[367, null]], "the base class": [[423, "the-base-class"]], "time_ref_from_dict": [[376, null]], "time_ref_to_dict": [[377, null]], "time_relative_to_ref": [[378, null]], "to_yaml": [[362, null]], "trapz_loglog": [[332, null]], "ts_to_sigma": [[314, null]], "unit_from_fits_image_hdu": [[380, null]], "utils - Utilities": [[13, null]], "velocity_distributions": [[49, null]], "velocity_glon_glat": [[328, null]], "visualization - Plotting features": [[14, null]], "weighted_cash_sum_cython": [[315, null]], "workflow": [[11, "gammapy-workflow"]], "wrap_at": [[381, null]], "write_yaml": [[363, null]], "wstat": [[316, null]]}, "docnames": ["api-reference/analysis", "api-reference/astro", "api-reference/catalog", "api-reference/data", "api-reference/datasets", "api-reference/estimators", "api-reference/index", "api-reference/irf", "api-reference/makers", "api-reference/maps", "api-reference/modeling", "api-reference/scripts", "api-reference/stats", "api-reference/utils", "api-reference/visualization", "api/gammapy.analysis.Analysis", "api/gammapy.analysis.AnalysisConfig", "api/gammapy.astro.darkmatter.BurkertProfile", "api/gammapy.astro.darkmatter.DMProfile", "api/gammapy.astro.darkmatter.DarkMatterAnnihilationSpectralModel", "api/gammapy.astro.darkmatter.DarkMatterDecaySpectralModel", "api/gammapy.astro.darkmatter.EinastoProfile", "api/gammapy.astro.darkmatter.IsothermalProfile", "api/gammapy.astro.darkmatter.JFactory", "api/gammapy.astro.darkmatter.MooreProfile", "api/gammapy.astro.darkmatter.NFWProfile", "api/gammapy.astro.darkmatter.PrimaryFlux", "api/gammapy.astro.darkmatter.ZhaoProfile", "api/gammapy.astro.population.CaseBattacharya1998", "api/gammapy.astro.population.Exponential", "api/gammapy.astro.population.FaucherKaspi2006", "api/gammapy.astro.population.FaucherKaspi2006VelocityBimodal", "api/gammapy.astro.population.FaucherKaspi2006VelocityMaxwellian", "api/gammapy.astro.population.FaucherSpiral", "api/gammapy.astro.population.LogSpiral", "api/gammapy.astro.population.Lorimer2006", "api/gammapy.astro.population.Paczynski1990", "api/gammapy.astro.population.Paczynski1990Velocity", "api/gammapy.astro.population.ValleeSpiral", "api/gammapy.astro.population.YusifovKucuk2004", "api/gammapy.astro.population.YusifovKucuk2004B", "api/gammapy.astro.population.add_observed_parameters", "api/gammapy.astro.population.add_pulsar_parameters", "api/gammapy.astro.population.add_pwn_parameters", "api/gammapy.astro.population.add_snr_parameters", "api/gammapy.astro.population.make_base_catalog_galactic", "api/gammapy.astro.population.make_catalog_random_positions_cube", "api/gammapy.astro.population.make_catalog_random_positions_sphere", "api/gammapy.astro.population.radial_distributions", "api/gammapy.astro.population.velocity_distributions", "api/gammapy.astro.source.PWN", "api/gammapy.astro.source.Pulsar", "api/gammapy.astro.source.SNR", "api/gammapy.astro.source.SNRTrueloveMcKee", "api/gammapy.astro.source.SimplePulsar", "api/gammapy.catalog.CATALOG_REGISTRY", "api/gammapy.catalog.SourceCatalog", "api/gammapy.catalog.SourceCatalog1LHAASO", "api/gammapy.catalog.SourceCatalog2FHL", "api/gammapy.catalog.SourceCatalog2HWC", "api/gammapy.catalog.SourceCatalog2PC", "api/gammapy.catalog.SourceCatalog3FGL", "api/gammapy.catalog.SourceCatalog3FHL", "api/gammapy.catalog.SourceCatalog3HWC", "api/gammapy.catalog.SourceCatalog3PC", "api/gammapy.catalog.SourceCatalog4FGL", "api/gammapy.catalog.SourceCatalogGammaCat", "api/gammapy.catalog.SourceCatalogHGPS", "api/gammapy.catalog.SourceCatalogLargeScaleHGPS", "api/gammapy.catalog.SourceCatalogObject", "api/gammapy.catalog.SourceCatalogObject1LHAASO", "api/gammapy.catalog.SourceCatalogObject2FHL", "api/gammapy.catalog.SourceCatalogObject2HWC", "api/gammapy.catalog.SourceCatalogObject2PC", "api/gammapy.catalog.SourceCatalogObject3FGL", "api/gammapy.catalog.SourceCatalogObject3FHL", "api/gammapy.catalog.SourceCatalogObject3HWC", "api/gammapy.catalog.SourceCatalogObject3PC", "api/gammapy.catalog.SourceCatalogObject4FGL", "api/gammapy.catalog.SourceCatalogObjectGammaCat", "api/gammapy.catalog.SourceCatalogObjectHGPS", "api/gammapy.catalog.SourceCatalogObjectHGPSComponent", "api/gammapy.data.DataStore", "api/gammapy.data.EventList", "api/gammapy.data.EventListMetaData", "api/gammapy.data.FixedPointingInfo", "api/gammapy.data.GTI", "api/gammapy.data.GTIMetaData", "api/gammapy.data.HDUIndexTable", "api/gammapy.data.Observation", "api/gammapy.data.ObservationFilter", "api/gammapy.data.ObservationMetaData", "api/gammapy.data.ObservationTable", "api/gammapy.data.Observations", "api/gammapy.data.ObservationsEventsSampler", "api/gammapy.data.PointingInfo", "api/gammapy.data.PointingMode", "api/gammapy.data.get_irfs_features", "api/gammapy.data.observatory_locations", "api/gammapy.datasets.DATASET_REGISTRY", "api/gammapy.datasets.Dataset", "api/gammapy.datasets.Datasets", "api/gammapy.datasets.FermipyDatasetsReader", "api/gammapy.datasets.FluxPointsDataset", "api/gammapy.datasets.MapDataset", "api/gammapy.datasets.MapDatasetEventSampler", "api/gammapy.datasets.MapDatasetMetaData", "api/gammapy.datasets.MapDatasetOnOff", "api/gammapy.datasets.OGIPDatasetReader", "api/gammapy.datasets.OGIPDatasetWriter", "api/gammapy.datasets.ObservationEventSampler", "api/gammapy.datasets.SpectrumDataset", "api/gammapy.datasets.SpectrumDatasetOnOff", "api/gammapy.datasets.apply_edisp", "api/gammapy.datasets.create_empty_map_dataset_from_irfs", "api/gammapy.datasets.create_map_dataset_from_observation", "api/gammapy.datasets.create_map_dataset_geoms", "api/gammapy.datasets.split_dataset", "api/gammapy.datasets.utils.apply_edisp", "api/gammapy.datasets.utils.create_map_dataset_from_dl4", "api/gammapy.datasets.utils.split_dataset", "api/gammapy.estimators.ASmoothMapEstimator", "api/gammapy.estimators.ESTIMATOR_REGISTRY", "api/gammapy.estimators.EnergyDependentMorphologyEstimator", "api/gammapy.estimators.Estimator", "api/gammapy.estimators.ExcessMapEstimator", "api/gammapy.estimators.FluxMaps", "api/gammapy.estimators.FluxMetaData", "api/gammapy.estimators.FluxPoints", "api/gammapy.estimators.FluxPointsEstimator", "api/gammapy.estimators.FluxProfileEstimator", "api/gammapy.estimators.ImageProfile", "api/gammapy.estimators.ImageProfileEstimator", "api/gammapy.estimators.LightCurveEstimator", "api/gammapy.estimators.ParameterEstimator", "api/gammapy.estimators.ParameterSensitivityEstimator", "api/gammapy.estimators.SensitivityEstimator", "api/gammapy.estimators.TSMapEstimator", "api/gammapy.estimators.utils.combine_flux_maps", "api/gammapy.estimators.utils.combine_significance_maps", "api/gammapy.estimators.utils.compute_lightcurve_discrete_correlation", "api/gammapy.estimators.utils.compute_lightcurve_doublingtime", "api/gammapy.estimators.utils.compute_lightcurve_fpp", "api/gammapy.estimators.utils.compute_lightcurve_fvar", "api/gammapy.estimators.utils.estimate_exposure_reco_energy", "api/gammapy.estimators.utils.find_peaks", "api/gammapy.estimators.utils.find_peaks_in_flux_map", "api/gammapy.estimators.utils.get_combined_flux_maps", "api/gammapy.estimators.utils.get_combined_significance_maps", "api/gammapy.estimators.utils.get_rebinned_axis", "api/gammapy.estimators.utils.resample_energy_edges", "api/gammapy.irf.Background2D", "api/gammapy.irf.Background3D", "api/gammapy.irf.BackgroundIRF", "api/gammapy.irf.EDispKernel", "api/gammapy.irf.EDispKernelMap", "api/gammapy.irf.EDispMap", "api/gammapy.irf.EffectiveAreaTable2D", "api/gammapy.irf.EnergyDependentMultiGaussPSF", "api/gammapy.irf.EnergyDispersion2D", "api/gammapy.irf.FoVAlignment", "api/gammapy.irf.IRF", "api/gammapy.irf.IRFMap", "api/gammapy.irf.IRF_REGISTRY", "api/gammapy.irf.PSF3D", "api/gammapy.irf.PSFKernel", "api/gammapy.irf.PSFKing", "api/gammapy.irf.PSFMap", "api/gammapy.irf.ParametricPSF", "api/gammapy.irf.RadMax2D", "api/gammapy.irf.RecoPSFMap", "api/gammapy.irf.load_irf_dict_from_file", "api/gammapy.makers.AdaptiveRingBackgroundMaker", "api/gammapy.makers.DatasetsMaker", "api/gammapy.makers.FoVBackgroundMaker", "api/gammapy.makers.MAKER_REGISTRY", "api/gammapy.makers.Maker", "api/gammapy.makers.MapDatasetMaker", "api/gammapy.makers.PhaseBackgroundMaker", "api/gammapy.makers.ReflectedRegionsBackgroundMaker", "api/gammapy.makers.ReflectedRegionsFinder", "api/gammapy.makers.RegionsFinder", "api/gammapy.makers.RingBackgroundMaker", "api/gammapy.makers.SafeMaskMaker", "api/gammapy.makers.SpectrumDatasetMaker", "api/gammapy.makers.WobbleRegionsFinder", "api/gammapy.makers.utils.make_counts_rad_max", "api/gammapy.makers.utils.make_edisp_kernel_map", "api/gammapy.makers.utils.make_edisp_map", "api/gammapy.makers.utils.make_effective_livetime_map", "api/gammapy.makers.utils.make_map_background_irf", "api/gammapy.makers.utils.make_map_exposure_true_energy", "api/gammapy.makers.utils.make_observation_time_map", "api/gammapy.makers.utils.make_psf_map", "api/gammapy.makers.utils.make_theta_squared_table", "api/gammapy.maps.Geom", "api/gammapy.maps.HpxGeom", "api/gammapy.maps.HpxMap", "api/gammapy.maps.HpxNDMap", "api/gammapy.maps.LabelMapAxis", "api/gammapy.maps.Map", "api/gammapy.maps.MapAxes", "api/gammapy.maps.MapAxis", "api/gammapy.maps.MapCoord", "api/gammapy.maps.Maps", "api/gammapy.maps.RegionGeom", "api/gammapy.maps.RegionNDMap", "api/gammapy.maps.TimeMapAxis", "api/gammapy.maps.WcsGeom", "api/gammapy.maps.WcsMap", "api/gammapy.maps.WcsNDMap", "api/gammapy.maps.containment_radius", "api/gammapy.maps.containment_region", "api/gammapy.modeling.Covariance", "api/gammapy.modeling.CovarianceResult", "api/gammapy.modeling.Fit", "api/gammapy.modeling.FitResult", "api/gammapy.modeling.OptimizeResult", "api/gammapy.modeling.Parameter", "api/gammapy.modeling.Parameters", "api/gammapy.modeling.PriorParameter", "api/gammapy.modeling.PriorParameters", "api/gammapy.modeling.Sampler", "api/gammapy.modeling.SamplerResult", "api/gammapy.modeling.models.BrokenPowerLawSpectralModel", "api/gammapy.modeling.models.CompoundSpectralModel", "api/gammapy.modeling.models.ConstantFluxSpatialModel", "api/gammapy.modeling.models.ConstantSpatialModel", "api/gammapy.modeling.models.ConstantSpectralModel", "api/gammapy.modeling.models.ConstantTemporalModel", "api/gammapy.modeling.models.DatasetModels", "api/gammapy.modeling.models.DiskSpatialModel", "api/gammapy.modeling.models.EBLAbsorptionNormSpectralModel", "api/gammapy.modeling.models.EBL_DATA_BUILTIN", "api/gammapy.modeling.models.ExpCutoffPowerLaw3FGLSpectralModel", "api/gammapy.modeling.models.ExpCutoffPowerLawNormSpectralModel", "api/gammapy.modeling.models.ExpCutoffPowerLawSpectralModel", "api/gammapy.modeling.models.ExpDecayTemporalModel", "api/gammapy.modeling.models.FoVBackgroundModel", "api/gammapy.modeling.models.GaussianPrior", "api/gammapy.modeling.models.GaussianSpatialModel", "api/gammapy.modeling.models.GaussianSpectralModel", "api/gammapy.modeling.models.GaussianTemporalModel", "api/gammapy.modeling.models.GeneralizedGaussianSpatialModel", "api/gammapy.modeling.models.GeneralizedGaussianTemporalModel", "api/gammapy.modeling.models.LightCurveTemplateTemporalModel", "api/gammapy.modeling.models.LinearTemporalModel", "api/gammapy.modeling.models.LogParabolaNormSpectralModel", "api/gammapy.modeling.models.LogParabolaSpectralModel", "api/gammapy.modeling.models.LogUniformPrior", "api/gammapy.modeling.models.MODEL_REGISTRY", "api/gammapy.modeling.models.MeyerCrabSpectralModel", "api/gammapy.modeling.models.Model", "api/gammapy.modeling.models.ModelBase", "api/gammapy.modeling.models.Models", "api/gammapy.modeling.models.NaimaSpectralModel", "api/gammapy.modeling.models.PiecewiseNormSpatialModel", "api/gammapy.modeling.models.PiecewiseNormSpectralModel", "api/gammapy.modeling.models.PointSpatialModel", "api/gammapy.modeling.models.PowerLaw2SpectralModel", "api/gammapy.modeling.models.PowerLawNormSpectralModel", "api/gammapy.modeling.models.PowerLawSpectralModel", "api/gammapy.modeling.models.PowerLawTemporalModel", "api/gammapy.modeling.models.Prior", "api/gammapy.modeling.models.SPATIAL_MODEL_REGISTRY", "api/gammapy.modeling.models.SPECTRAL_MODEL_REGISTRY", "api/gammapy.modeling.models.ScaleSpectralModel", "api/gammapy.modeling.models.Shell2SpatialModel", "api/gammapy.modeling.models.ShellSpatialModel", "api/gammapy.modeling.models.SineTemporalModel", "api/gammapy.modeling.models.SkyModel", "api/gammapy.modeling.models.SmoothBrokenPowerLawSpectralModel", "api/gammapy.modeling.models.SpatialModel", "api/gammapy.modeling.models.SpectralModel", "api/gammapy.modeling.models.SuperExpCutoffPowerLaw3FGLSpectralModel", "api/gammapy.modeling.models.SuperExpCutoffPowerLaw4FGLDR3SpectralModel", "api/gammapy.modeling.models.SuperExpCutoffPowerLaw4FGLSpectralModel", "api/gammapy.modeling.models.TEMPORAL_MODEL_REGISTRY", "api/gammapy.modeling.models.TemplateNDSpatialModel", "api/gammapy.modeling.models.TemplateNDSpectralModel", "api/gammapy.modeling.models.TemplateNPredModel", "api/gammapy.modeling.models.TemplatePhaseCurveTemporalModel", "api/gammapy.modeling.models.TemplateSpatialModel", "api/gammapy.modeling.models.TemplateSpectralModel", "api/gammapy.modeling.models.TemporalModel", "api/gammapy.modeling.models.UniformPrior", "api/gammapy.modeling.models.create_cosmic_ray_spectral_model", "api/gammapy.modeling.models.create_crab_spectral_model", "api/gammapy.modeling.models.create_fermi_isotropic_diffuse_model", "api/gammapy.modeling.models.integrate_spectrum", "api/gammapy.modeling.models.read_hermes_cube", "api/gammapy.modeling.models.scale_plot_flux", "api/gammapy.modeling.models.utils.read_hermes_cube", "api/gammapy.modeling.select_nested_models", "api/gammapy.modeling.stat_profile_ul_scipy", "api/gammapy.stats.CashCountsStatistic", "api/gammapy.stats.Chi2AsymmetricErrorFitStatistic", "api/gammapy.stats.Chi2FitStatistic", "api/gammapy.stats.TimmerKonig_lightcurve_simulator", "api/gammapy.stats.WStatCountsStatistic", "api/gammapy.stats.cash", "api/gammapy.stats.cash_sum_cython", "api/gammapy.stats.compute_chisq", "api/gammapy.stats.compute_flux_doubling", "api/gammapy.stats.compute_fpp", "api/gammapy.stats.compute_fvar", "api/gammapy.stats.cstat", "api/gammapy.stats.discrete_correlation", "api/gammapy.stats.f_cash_root_cython", "api/gammapy.stats.get_wstat_gof_terms", "api/gammapy.stats.get_wstat_mu_bkg", "api/gammapy.stats.norm_bounds_cython", "api/gammapy.stats.sigma_to_ts", "api/gammapy.stats.structure_function", "api/gammapy.stats.ts_to_sigma", "api/gammapy.stats.weighted_cash_sum_cython", "api/gammapy.stats.wstat", "api/gammapy.utils.cluster.hierarchical_clustering", "api/gammapy.utils.cluster.standard_scaler", "api/gammapy.utils.coordinates.D_SUN_TO_GALACTIC_CENTER", "api/gammapy.utils.coordinates.FoVAltAzFrame", "api/gammapy.utils.coordinates.FoVICRSFrame", "api/gammapy.utils.coordinates.cartesian", "api/gammapy.utils.coordinates.fov_to_sky", "api/gammapy.utils.coordinates.galactic", "api/gammapy.utils.coordinates.motion_since_birth", "api/gammapy.utils.coordinates.polar", "api/gammapy.utils.coordinates.sky_to_fov", "api/gammapy.utils.coordinates.velocity_glon_glat", "api/gammapy.utils.fits.HDULocation", "api/gammapy.utils.fits.LazyFitsData", "api/gammapy.utils.fits.earth_location_from_dict", "api/gammapy.utils.integrate.trapz_loglog", "api/gammapy.utils.interpolation.ScaledRegularGridInterpolator", "api/gammapy.utils.interpolation.interpolate_profile", "api/gammapy.utils.interpolation.interpolation_scale", "api/gammapy.utils.parallel.BACKEND_DEFAULT", "api/gammapy.utils.parallel.METHOD_DEFAULT", "api/gammapy.utils.parallel.METHOD_KWARGS_DEFAULT", "api/gammapy.utils.parallel.N_JOBS_DEFAULT", "api/gammapy.utils.parallel.POOL_KWARGS_DEFAULT", "api/gammapy.utils.parallel.multiprocessing_manager", "api/gammapy.utils.parallel.run_multiprocessing", "api/gammapy.utils.random.InverseCDFSampler", "api/gammapy.utils.random.draw", "api/gammapy.utils.random.get_random_state", "api/gammapy.utils.random.normalize", "api/gammapy.utils.random.pdf", "api/gammapy.utils.random.sample_powerlaw", "api/gammapy.utils.random.sample_sphere", "api/gammapy.utils.random.sample_sphere_distance", "api/gammapy.utils.random.sample_times", "api/gammapy.utils.regions.compound_region_to_regions", "api/gammapy.utils.regions.make_concentric_annulus_sky_regions", "api/gammapy.utils.regions.make_orthogonal_rectangle_sky_regions", "api/gammapy.utils.regions.region_to_frame", "api/gammapy.utils.regions.regions_to_compound_region", "api/gammapy.utils.scripts.from_yaml", "api/gammapy.utils.scripts.get_images_paths", "api/gammapy.utils.scripts.make_path", "api/gammapy.utils.scripts.read_yaml", "api/gammapy.utils.scripts.recursive_merge_dicts", "api/gammapy.utils.scripts.to_yaml", "api/gammapy.utils.scripts.write_yaml", "api/gammapy.utils.table.hstack_columns", "api/gammapy.utils.table.table_row_to_dict", "api/gammapy.utils.table.table_standardise_units_copy", "api/gammapy.utils.table.table_standardise_units_inplace", "api/gammapy.utils.testing.Checker", "api/gammapy.utils.testing.assert_quantity_allclose", "api/gammapy.utils.testing.assert_skycoord_allclose", "api/gammapy.utils.testing.assert_time_allclose", "api/gammapy.utils.testing.mpl_plot_check", "api/gammapy.utils.testing.requires_data", "api/gammapy.utils.testing.requires_dependency", "api/gammapy.utils.time.absolute_time", "api/gammapy.utils.time.time_ref_from_dict", "api/gammapy.utils.time.time_ref_to_dict", "api/gammapy.utils.time.time_relative_to_ref", "api/gammapy.utils.units.standardise_unit", "api/gammapy.utils.units.unit_from_fits_image_hdu", "api/gammapy.utils.units.wrap_at", "api/gammapy.visualization.MapPanelPlotter", "api/gammapy.visualization.add_colorbar", "api/gammapy.visualization.annotate_heatmap", "api/gammapy.visualization.colormap_hess", "api/gammapy.visualization.colormap_milagro", "api/gammapy.visualization.plot_contour_line", "api/gammapy.visualization.plot_distribution", "api/gammapy.visualization.plot_heatmap", "api/gammapy.visualization.plot_map_rgb", "api/gammapy.visualization.plot_npred_signal", "api/gammapy.visualization.plot_spectrum_datasets_off_regions", "api/gammapy.visualization.plot_theta_squared_table", "development/dependencies", "development/dev_howto", "development/doc_howto", "development/index", "development/intro", "development/pigs/index", "development/pigs/pig-001", "development/pigs/pig-002", "development/pigs/pig-003", "development/pigs/pig-004", "development/pigs/pig-005", "development/pigs/pig-006", "development/pigs/pig-007", "development/pigs/pig-008", "development/pigs/pig-009", "development/pigs/pig-010", "development/pigs/pig-011", "development/pigs/pig-012", "development/pigs/pig-013", "development/pigs/pig-014", "development/pigs/pig-016", "development/pigs/pig-017", "development/pigs/pig-018", "development/pigs/pig-019", "development/pigs/pig-020", "development/pigs/pig-021", "development/pigs/pig-022", "development/pigs/pig-023", "development/pigs/pig-024", "development/pigs/pig-025", "development/pigs/pig-026", "development/pigs/pig-027", "development/pigs/pig-028", "development/release", "development/setup", "getting-started/environments", "getting-started/index", "getting-started/install", "getting-started/quickstart", "getting-started/troubleshooting", "getting-started/usage", "index", "release-notes/index", "release-notes/v0.1", "release-notes/v0.10", "release-notes/v0.11", "release-notes/v0.12", "release-notes/v0.13", "release-notes/v0.14", "release-notes/v0.15", "release-notes/v0.16", "release-notes/v0.17", "release-notes/v0.18", "release-notes/v0.18.1", "release-notes/v0.18.2", "release-notes/v0.19", "release-notes/v0.2", "release-notes/v0.20", "release-notes/v0.20.1", "release-notes/v0.3", "release-notes/v0.4", "release-notes/v0.5", "release-notes/v0.6", "release-notes/v0.7", "release-notes/v0.8", "release-notes/v0.9", "release-notes/v1.0", "release-notes/v1.0.1", "release-notes/v1.0.2", "release-notes/v1.1", "release-notes/v1.2", "release-notes/v1.3", "release-notes/v2.0", "sg_execution_times", "tutorials/analysis-1d/cta_sensitivity", "tutorials/analysis-1d/ebl", "tutorials/analysis-1d/extended_source_spectral_analysis", "tutorials/analysis-1d/index", "tutorials/analysis-1d/sed_fitting", "tutorials/analysis-1d/sg_execution_times", "tutorials/analysis-1d/spectral_analysis", "tutorials/analysis-1d/spectral_analysis_hli", "tutorials/analysis-1d/spectral_analysis_rad_max", "tutorials/analysis-1d/spectrum_simulation", "tutorials/analysis-2d/detect", "tutorials/analysis-2d/index", "tutorials/analysis-2d/modeling_2D", "tutorials/analysis-2d/ring_background", "tutorials/analysis-2d/sg_execution_times", "tutorials/analysis-3d/analysis_3d", "tutorials/analysis-3d/analysis_mwl", "tutorials/analysis-3d/cta_data_analysis", "tutorials/analysis-3d/energy_dependent_estimation", "tutorials/analysis-3d/event_sampling", "tutorials/analysis-3d/event_sampling_nrg_depend_models", "tutorials/analysis-3d/flux_profiles", "tutorials/analysis-3d/index", "tutorials/analysis-3d/sg_execution_times", "tutorials/analysis-3d/simulate_3d", "tutorials/analysis-time/index", "tutorials/analysis-time/light_curve", "tutorials/analysis-time/light_curve_flare", "tutorials/analysis-time/light_curve_simulation", "tutorials/analysis-time/pulsar_analysis", "tutorials/analysis-time/sg_execution_times", "tutorials/analysis-time/time_resolved_spectroscopy", "tutorials/analysis-time/variability_estimation", "tutorials/api/astro_dark_matter", "tutorials/api/catalog", "tutorials/api/datasets", "tutorials/api/estimators", "tutorials/api/fitting", "tutorials/api/index", "tutorials/api/irfs", "tutorials/api/makers", "tutorials/api/maps", "tutorials/api/mask_maps", "tutorials/api/model_management", "tutorials/api/models", "tutorials/api/nested_sampling_Crab", "tutorials/api/observation_clustering", "tutorials/api/priors", "tutorials/api/sg_execution_times", "tutorials/api/theta_square_plot", "tutorials/data/cta", "tutorials/data/fermi_lat", "tutorials/data/hawc", "tutorials/data/hess", "tutorials/data/index", "tutorials/data/sg_execution_times", "tutorials/index", "tutorials/scripts/index", "tutorials/scripts/sg_execution_times", "tutorials/scripts/survey_map", "tutorials/sg_execution_times", "tutorials/starting/analysis_1", "tutorials/starting/analysis_2", "tutorials/starting/index", "tutorials/starting/overview", "tutorials/starting/sg_execution_times", "user-guide/astro/darkmatter/index", "user-guide/astro/index", "user-guide/astro/population/index", "user-guide/astro/source/index", "user-guide/astro/source/pulsar", "user-guide/astro/source/pwn", "user-guide/astro/source/snr", "user-guide/catalog", "user-guide/datasets/index", "user-guide/dl3", "user-guide/estimators", "user-guide/hli", "user-guide/howto", "user-guide/index", "user-guide/irf/aeff", "user-guide/irf/bkg", "user-guide/irf/edisp", "user-guide/irf/index", "user-guide/irf/psf", "user-guide/makers/fov", "user-guide/makers/index", "user-guide/makers/reflected", "user-guide/makers/ring", "user-guide/maps/hpxmap", "user-guide/maps/index", "user-guide/maps/regionmap", "user-guide/model-gallery/index", "user-guide/model-gallery/sg_execution_times", "user-guide/model-gallery/spatial/index", "user-guide/model-gallery/spatial/plot_constant", "user-guide/model-gallery/spatial/plot_disk", "user-guide/model-gallery/spatial/plot_gauss", "user-guide/model-gallery/spatial/plot_gen_gauss", "user-guide/model-gallery/spatial/plot_piecewise_norm_spatial", "user-guide/model-gallery/spatial/plot_point", "user-guide/model-gallery/spatial/plot_shell", "user-guide/model-gallery/spatial/plot_shell2", "user-guide/model-gallery/spatial/plot_template", "user-guide/model-gallery/spatial/sg_execution_times", "user-guide/model-gallery/spectral/index", "user-guide/model-gallery/spectral/plot_absorbed", "user-guide/model-gallery/spectral/plot_broken_powerlaw", "user-guide/model-gallery/spectral/plot_compound", "user-guide/model-gallery/spectral/plot_constant_spectral", "user-guide/model-gallery/spectral/plot_exp_cutoff_powerlaw", "user-guide/model-gallery/spectral/plot_exp_cutoff_powerlaw_3fgl", "user-guide/model-gallery/spectral/plot_exp_cutoff_powerlaw_norm_spectral", "user-guide/model-gallery/spectral/plot_gauss_spectral", "user-guide/model-gallery/spectral/plot_logparabola", "user-guide/model-gallery/spectral/plot_logparabola_norm_spectral", "user-guide/model-gallery/spectral/plot_naima", "user-guide/model-gallery/spectral/plot_piecewise_norm_spectral", "user-guide/model-gallery/spectral/plot_powerlaw", "user-guide/model-gallery/spectral/plot_powerlaw2", "user-guide/model-gallery/spectral/plot_powerlaw_norm_spectral", "user-guide/model-gallery/spectral/plot_smooth_broken_powerlaw", "user-guide/model-gallery/spectral/plot_super_exp_cutoff_powerlaw_3fgl", "user-guide/model-gallery/spectral/plot_super_exp_cutoff_powerlaw_4fgl", "user-guide/model-gallery/spectral/plot_super_exp_cutoff_powerlaw_4fgl_dr1", "user-guide/model-gallery/spectral/plot_template_spectral", "user-guide/model-gallery/spectral/sg_execution_times", "user-guide/model-gallery/temporal/index", "user-guide/model-gallery/temporal/plot_constant_temporal", "user-guide/model-gallery/temporal/plot_expdecay_temporal", "user-guide/model-gallery/temporal/plot_gaussian_temporal", "user-guide/model-gallery/temporal/plot_generalized_gaussian_temporal", "user-guide/model-gallery/temporal/plot_linear_temporal", "user-guide/model-gallery/temporal/plot_powerlaw_temporal", "user-guide/model-gallery/temporal/plot_sine_temporal", "user-guide/model-gallery/temporal/plot_template_phase_temporal", "user-guide/model-gallery/temporal/plot_template_temporal", "user-guide/model-gallery/temporal/sg_execution_times", "user-guide/modeling", "user-guide/package", "user-guide/references", "user-guide/scripts/index", "user-guide/stats/fit_statistics", "user-guide/stats/index", "user-guide/stats/wstat_derivation", "user-guide/utils", "user-guide/visualization/index"], "envversion": {"sphinx": 62, "sphinx.domains.c": 3, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 9, "sphinx.domains.index": 1, "sphinx.domains.javascript": 3, "sphinx.domains.math": 2, "sphinx.domains.python": 4, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "sphinx.ext.intersphinx": 1, "sphinx.ext.viewcode": 1}, "filenames": ["api-reference/analysis.rst", "api-reference/astro.rst", "api-reference/catalog.rst", "api-reference/data.rst", "api-reference/datasets.rst", "api-reference/estimators.rst", "api-reference/index.rst", "api-reference/irf.rst", "api-reference/makers.rst", "api-reference/maps.rst", "api-reference/modeling.rst", "api-reference/scripts.rst", "api-reference/stats.rst", "api-reference/utils.rst", "api-reference/visualization.rst", "api/gammapy.analysis.Analysis.rst", "api/gammapy.analysis.AnalysisConfig.rst", "api/gammapy.astro.darkmatter.BurkertProfile.rst", "api/gammapy.astro.darkmatter.DMProfile.rst", "api/gammapy.astro.darkmatter.DarkMatterAnnihilationSpectralModel.rst", "api/gammapy.astro.darkmatter.DarkMatterDecaySpectralModel.rst", "api/gammapy.astro.darkmatter.EinastoProfile.rst", "api/gammapy.astro.darkmatter.IsothermalProfile.rst", "api/gammapy.astro.darkmatter.JFactory.rst", "api/gammapy.astro.darkmatter.MooreProfile.rst", "api/gammapy.astro.darkmatter.NFWProfile.rst", "api/gammapy.astro.darkmatter.PrimaryFlux.rst", "api/gammapy.astro.darkmatter.ZhaoProfile.rst", "api/gammapy.astro.population.CaseBattacharya1998.rst", "api/gammapy.astro.population.Exponential.rst", "api/gammapy.astro.population.FaucherKaspi2006.rst", "api/gammapy.astro.population.FaucherKaspi2006VelocityBimodal.rst", "api/gammapy.astro.population.FaucherKaspi2006VelocityMaxwellian.rst", "api/gammapy.astro.population.FaucherSpiral.rst", "api/gammapy.astro.population.LogSpiral.rst", "api/gammapy.astro.population.Lorimer2006.rst", "api/gammapy.astro.population.Paczynski1990.rst", "api/gammapy.astro.population.Paczynski1990Velocity.rst", "api/gammapy.astro.population.ValleeSpiral.rst", "api/gammapy.astro.population.YusifovKucuk2004.rst", "api/gammapy.astro.population.YusifovKucuk2004B.rst", "api/gammapy.astro.population.add_observed_parameters.rst", "api/gammapy.astro.population.add_pulsar_parameters.rst", "api/gammapy.astro.population.add_pwn_parameters.rst", "api/gammapy.astro.population.add_snr_parameters.rst", "api/gammapy.astro.population.make_base_catalog_galactic.rst", "api/gammapy.astro.population.make_catalog_random_positions_cube.rst", "api/gammapy.astro.population.make_catalog_random_positions_sphere.rst", "api/gammapy.astro.population.radial_distributions.rst", "api/gammapy.astro.population.velocity_distributions.rst", "api/gammapy.astro.source.PWN.rst", "api/gammapy.astro.source.Pulsar.rst", "api/gammapy.astro.source.SNR.rst", "api/gammapy.astro.source.SNRTrueloveMcKee.rst", "api/gammapy.astro.source.SimplePulsar.rst", "api/gammapy.catalog.CATALOG_REGISTRY.rst", "api/gammapy.catalog.SourceCatalog.rst", "api/gammapy.catalog.SourceCatalog1LHAASO.rst", "api/gammapy.catalog.SourceCatalog2FHL.rst", "api/gammapy.catalog.SourceCatalog2HWC.rst", "api/gammapy.catalog.SourceCatalog2PC.rst", "api/gammapy.catalog.SourceCatalog3FGL.rst", "api/gammapy.catalog.SourceCatalog3FHL.rst", "api/gammapy.catalog.SourceCatalog3HWC.rst", "api/gammapy.catalog.SourceCatalog3PC.rst", "api/gammapy.catalog.SourceCatalog4FGL.rst", "api/gammapy.catalog.SourceCatalogGammaCat.rst", "api/gammapy.catalog.SourceCatalogHGPS.rst", "api/gammapy.catalog.SourceCatalogLargeScaleHGPS.rst", "api/gammapy.catalog.SourceCatalogObject.rst", "api/gammapy.catalog.SourceCatalogObject1LHAASO.rst", "api/gammapy.catalog.SourceCatalogObject2FHL.rst", "api/gammapy.catalog.SourceCatalogObject2HWC.rst", "api/gammapy.catalog.SourceCatalogObject2PC.rst", "api/gammapy.catalog.SourceCatalogObject3FGL.rst", "api/gammapy.catalog.SourceCatalogObject3FHL.rst", "api/gammapy.catalog.SourceCatalogObject3HWC.rst", "api/gammapy.catalog.SourceCatalogObject3PC.rst", "api/gammapy.catalog.SourceCatalogObject4FGL.rst", "api/gammapy.catalog.SourceCatalogObjectGammaCat.rst", "api/gammapy.catalog.SourceCatalogObjectHGPS.rst", "api/gammapy.catalog.SourceCatalogObjectHGPSComponent.rst", "api/gammapy.data.DataStore.rst", "api/gammapy.data.EventList.rst", "api/gammapy.data.EventListMetaData.rst", "api/gammapy.data.FixedPointingInfo.rst", "api/gammapy.data.GTI.rst", "api/gammapy.data.GTIMetaData.rst", "api/gammapy.data.HDUIndexTable.rst", "api/gammapy.data.Observation.rst", "api/gammapy.data.ObservationFilter.rst", "api/gammapy.data.ObservationMetaData.rst", "api/gammapy.data.ObservationTable.rst", "api/gammapy.data.Observations.rst", "api/gammapy.data.ObservationsEventsSampler.rst", "api/gammapy.data.PointingInfo.rst", "api/gammapy.data.PointingMode.rst", "api/gammapy.data.get_irfs_features.rst", "api/gammapy.data.observatory_locations.rst", "api/gammapy.datasets.DATASET_REGISTRY.rst", "api/gammapy.datasets.Dataset.rst", "api/gammapy.datasets.Datasets.rst", "api/gammapy.datasets.FermipyDatasetsReader.rst", "api/gammapy.datasets.FluxPointsDataset.rst", "api/gammapy.datasets.MapDataset.rst", "api/gammapy.datasets.MapDatasetEventSampler.rst", "api/gammapy.datasets.MapDatasetMetaData.rst", "api/gammapy.datasets.MapDatasetOnOff.rst", "api/gammapy.datasets.OGIPDatasetReader.rst", "api/gammapy.datasets.OGIPDatasetWriter.rst", "api/gammapy.datasets.ObservationEventSampler.rst", "api/gammapy.datasets.SpectrumDataset.rst", "api/gammapy.datasets.SpectrumDatasetOnOff.rst", "api/gammapy.datasets.apply_edisp.rst", "api/gammapy.datasets.create_empty_map_dataset_from_irfs.rst", "api/gammapy.datasets.create_map_dataset_from_observation.rst", "api/gammapy.datasets.create_map_dataset_geoms.rst", "api/gammapy.datasets.split_dataset.rst", "api/gammapy.datasets.utils.apply_edisp.rst", "api/gammapy.datasets.utils.create_map_dataset_from_dl4.rst", "api/gammapy.datasets.utils.split_dataset.rst", "api/gammapy.estimators.ASmoothMapEstimator.rst", "api/gammapy.estimators.ESTIMATOR_REGISTRY.rst", "api/gammapy.estimators.EnergyDependentMorphologyEstimator.rst", "api/gammapy.estimators.Estimator.rst", "api/gammapy.estimators.ExcessMapEstimator.rst", "api/gammapy.estimators.FluxMaps.rst", "api/gammapy.estimators.FluxMetaData.rst", "api/gammapy.estimators.FluxPoints.rst", "api/gammapy.estimators.FluxPointsEstimator.rst", "api/gammapy.estimators.FluxProfileEstimator.rst", "api/gammapy.estimators.ImageProfile.rst", "api/gammapy.estimators.ImageProfileEstimator.rst", "api/gammapy.estimators.LightCurveEstimator.rst", "api/gammapy.estimators.ParameterEstimator.rst", "api/gammapy.estimators.ParameterSensitivityEstimator.rst", "api/gammapy.estimators.SensitivityEstimator.rst", "api/gammapy.estimators.TSMapEstimator.rst", "api/gammapy.estimators.utils.combine_flux_maps.rst", "api/gammapy.estimators.utils.combine_significance_maps.rst", "api/gammapy.estimators.utils.compute_lightcurve_discrete_correlation.rst", "api/gammapy.estimators.utils.compute_lightcurve_doublingtime.rst", "api/gammapy.estimators.utils.compute_lightcurve_fpp.rst", "api/gammapy.estimators.utils.compute_lightcurve_fvar.rst", "api/gammapy.estimators.utils.estimate_exposure_reco_energy.rst", "api/gammapy.estimators.utils.find_peaks.rst", "api/gammapy.estimators.utils.find_peaks_in_flux_map.rst", "api/gammapy.estimators.utils.get_combined_flux_maps.rst", "api/gammapy.estimators.utils.get_combined_significance_maps.rst", "api/gammapy.estimators.utils.get_rebinned_axis.rst", "api/gammapy.estimators.utils.resample_energy_edges.rst", "api/gammapy.irf.Background2D.rst", "api/gammapy.irf.Background3D.rst", "api/gammapy.irf.BackgroundIRF.rst", "api/gammapy.irf.EDispKernel.rst", "api/gammapy.irf.EDispKernelMap.rst", "api/gammapy.irf.EDispMap.rst", "api/gammapy.irf.EffectiveAreaTable2D.rst", "api/gammapy.irf.EnergyDependentMultiGaussPSF.rst", "api/gammapy.irf.EnergyDispersion2D.rst", "api/gammapy.irf.FoVAlignment.rst", "api/gammapy.irf.IRF.rst", "api/gammapy.irf.IRFMap.rst", "api/gammapy.irf.IRF_REGISTRY.rst", "api/gammapy.irf.PSF3D.rst", "api/gammapy.irf.PSFKernel.rst", "api/gammapy.irf.PSFKing.rst", "api/gammapy.irf.PSFMap.rst", "api/gammapy.irf.ParametricPSF.rst", "api/gammapy.irf.RadMax2D.rst", "api/gammapy.irf.RecoPSFMap.rst", "api/gammapy.irf.load_irf_dict_from_file.rst", "api/gammapy.makers.AdaptiveRingBackgroundMaker.rst", "api/gammapy.makers.DatasetsMaker.rst", "api/gammapy.makers.FoVBackgroundMaker.rst", "api/gammapy.makers.MAKER_REGISTRY.rst", "api/gammapy.makers.Maker.rst", "api/gammapy.makers.MapDatasetMaker.rst", "api/gammapy.makers.PhaseBackgroundMaker.rst", "api/gammapy.makers.ReflectedRegionsBackgroundMaker.rst", "api/gammapy.makers.ReflectedRegionsFinder.rst", "api/gammapy.makers.RegionsFinder.rst", "api/gammapy.makers.RingBackgroundMaker.rst", "api/gammapy.makers.SafeMaskMaker.rst", "api/gammapy.makers.SpectrumDatasetMaker.rst", "api/gammapy.makers.WobbleRegionsFinder.rst", "api/gammapy.makers.utils.make_counts_rad_max.rst", "api/gammapy.makers.utils.make_edisp_kernel_map.rst", "api/gammapy.makers.utils.make_edisp_map.rst", "api/gammapy.makers.utils.make_effective_livetime_map.rst", "api/gammapy.makers.utils.make_map_background_irf.rst", "api/gammapy.makers.utils.make_map_exposure_true_energy.rst", "api/gammapy.makers.utils.make_observation_time_map.rst", "api/gammapy.makers.utils.make_psf_map.rst", "api/gammapy.makers.utils.make_theta_squared_table.rst", "api/gammapy.maps.Geom.rst", "api/gammapy.maps.HpxGeom.rst", "api/gammapy.maps.HpxMap.rst", "api/gammapy.maps.HpxNDMap.rst", "api/gammapy.maps.LabelMapAxis.rst", "api/gammapy.maps.Map.rst", "api/gammapy.maps.MapAxes.rst", "api/gammapy.maps.MapAxis.rst", "api/gammapy.maps.MapCoord.rst", "api/gammapy.maps.Maps.rst", "api/gammapy.maps.RegionGeom.rst", "api/gammapy.maps.RegionNDMap.rst", "api/gammapy.maps.TimeMapAxis.rst", "api/gammapy.maps.WcsGeom.rst", "api/gammapy.maps.WcsMap.rst", "api/gammapy.maps.WcsNDMap.rst", "api/gammapy.maps.containment_radius.rst", "api/gammapy.maps.containment_region.rst", "api/gammapy.modeling.Covariance.rst", "api/gammapy.modeling.CovarianceResult.rst", "api/gammapy.modeling.Fit.rst", "api/gammapy.modeling.FitResult.rst", "api/gammapy.modeling.OptimizeResult.rst", "api/gammapy.modeling.Parameter.rst", "api/gammapy.modeling.Parameters.rst", "api/gammapy.modeling.PriorParameter.rst", "api/gammapy.modeling.PriorParameters.rst", "api/gammapy.modeling.Sampler.rst", "api/gammapy.modeling.SamplerResult.rst", "api/gammapy.modeling.models.BrokenPowerLawSpectralModel.rst", "api/gammapy.modeling.models.CompoundSpectralModel.rst", "api/gammapy.modeling.models.ConstantFluxSpatialModel.rst", "api/gammapy.modeling.models.ConstantSpatialModel.rst", "api/gammapy.modeling.models.ConstantSpectralModel.rst", "api/gammapy.modeling.models.ConstantTemporalModel.rst", "api/gammapy.modeling.models.DatasetModels.rst", "api/gammapy.modeling.models.DiskSpatialModel.rst", "api/gammapy.modeling.models.EBLAbsorptionNormSpectralModel.rst", "api/gammapy.modeling.models.EBL_DATA_BUILTIN.rst", "api/gammapy.modeling.models.ExpCutoffPowerLaw3FGLSpectralModel.rst", "api/gammapy.modeling.models.ExpCutoffPowerLawNormSpectralModel.rst", "api/gammapy.modeling.models.ExpCutoffPowerLawSpectralModel.rst", "api/gammapy.modeling.models.ExpDecayTemporalModel.rst", "api/gammapy.modeling.models.FoVBackgroundModel.rst", "api/gammapy.modeling.models.GaussianPrior.rst", "api/gammapy.modeling.models.GaussianSpatialModel.rst", "api/gammapy.modeling.models.GaussianSpectralModel.rst", "api/gammapy.modeling.models.GaussianTemporalModel.rst", "api/gammapy.modeling.models.GeneralizedGaussianSpatialModel.rst", "api/gammapy.modeling.models.GeneralizedGaussianTemporalModel.rst", "api/gammapy.modeling.models.LightCurveTemplateTemporalModel.rst", "api/gammapy.modeling.models.LinearTemporalModel.rst", "api/gammapy.modeling.models.LogParabolaNormSpectralModel.rst", "api/gammapy.modeling.models.LogParabolaSpectralModel.rst", "api/gammapy.modeling.models.LogUniformPrior.rst", "api/gammapy.modeling.models.MODEL_REGISTRY.rst", "api/gammapy.modeling.models.MeyerCrabSpectralModel.rst", "api/gammapy.modeling.models.Model.rst", "api/gammapy.modeling.models.ModelBase.rst", "api/gammapy.modeling.models.Models.rst", "api/gammapy.modeling.models.NaimaSpectralModel.rst", "api/gammapy.modeling.models.PiecewiseNormSpatialModel.rst", "api/gammapy.modeling.models.PiecewiseNormSpectralModel.rst", "api/gammapy.modeling.models.PointSpatialModel.rst", "api/gammapy.modeling.models.PowerLaw2SpectralModel.rst", "api/gammapy.modeling.models.PowerLawNormSpectralModel.rst", "api/gammapy.modeling.models.PowerLawSpectralModel.rst", "api/gammapy.modeling.models.PowerLawTemporalModel.rst", "api/gammapy.modeling.models.Prior.rst", "api/gammapy.modeling.models.SPATIAL_MODEL_REGISTRY.rst", "api/gammapy.modeling.models.SPECTRAL_MODEL_REGISTRY.rst", "api/gammapy.modeling.models.ScaleSpectralModel.rst", "api/gammapy.modeling.models.Shell2SpatialModel.rst", "api/gammapy.modeling.models.ShellSpatialModel.rst", "api/gammapy.modeling.models.SineTemporalModel.rst", "api/gammapy.modeling.models.SkyModel.rst", "api/gammapy.modeling.models.SmoothBrokenPowerLawSpectralModel.rst", "api/gammapy.modeling.models.SpatialModel.rst", "api/gammapy.modeling.models.SpectralModel.rst", "api/gammapy.modeling.models.SuperExpCutoffPowerLaw3FGLSpectralModel.rst", "api/gammapy.modeling.models.SuperExpCutoffPowerLaw4FGLDR3SpectralModel.rst", "api/gammapy.modeling.models.SuperExpCutoffPowerLaw4FGLSpectralModel.rst", "api/gammapy.modeling.models.TEMPORAL_MODEL_REGISTRY.rst", "api/gammapy.modeling.models.TemplateNDSpatialModel.rst", "api/gammapy.modeling.models.TemplateNDSpectralModel.rst", "api/gammapy.modeling.models.TemplateNPredModel.rst", "api/gammapy.modeling.models.TemplatePhaseCurveTemporalModel.rst", "api/gammapy.modeling.models.TemplateSpatialModel.rst", "api/gammapy.modeling.models.TemplateSpectralModel.rst", "api/gammapy.modeling.models.TemporalModel.rst", "api/gammapy.modeling.models.UniformPrior.rst", "api/gammapy.modeling.models.create_cosmic_ray_spectral_model.rst", "api/gammapy.modeling.models.create_crab_spectral_model.rst", "api/gammapy.modeling.models.create_fermi_isotropic_diffuse_model.rst", "api/gammapy.modeling.models.integrate_spectrum.rst", "api/gammapy.modeling.models.read_hermes_cube.rst", "api/gammapy.modeling.models.scale_plot_flux.rst", "api/gammapy.modeling.models.utils.read_hermes_cube.rst", "api/gammapy.modeling.select_nested_models.rst", "api/gammapy.modeling.stat_profile_ul_scipy.rst", "api/gammapy.stats.CashCountsStatistic.rst", "api/gammapy.stats.Chi2AsymmetricErrorFitStatistic.rst", "api/gammapy.stats.Chi2FitStatistic.rst", "api/gammapy.stats.TimmerKonig_lightcurve_simulator.rst", "api/gammapy.stats.WStatCountsStatistic.rst", "api/gammapy.stats.cash.rst", "api/gammapy.stats.cash_sum_cython.rst", "api/gammapy.stats.compute_chisq.rst", "api/gammapy.stats.compute_flux_doubling.rst", "api/gammapy.stats.compute_fpp.rst", "api/gammapy.stats.compute_fvar.rst", "api/gammapy.stats.cstat.rst", "api/gammapy.stats.discrete_correlation.rst", "api/gammapy.stats.f_cash_root_cython.rst", "api/gammapy.stats.get_wstat_gof_terms.rst", "api/gammapy.stats.get_wstat_mu_bkg.rst", "api/gammapy.stats.norm_bounds_cython.rst", "api/gammapy.stats.sigma_to_ts.rst", "api/gammapy.stats.structure_function.rst", "api/gammapy.stats.ts_to_sigma.rst", "api/gammapy.stats.weighted_cash_sum_cython.rst", "api/gammapy.stats.wstat.rst", "api/gammapy.utils.cluster.hierarchical_clustering.rst", "api/gammapy.utils.cluster.standard_scaler.rst", "api/gammapy.utils.coordinates.D_SUN_TO_GALACTIC_CENTER.rst", "api/gammapy.utils.coordinates.FoVAltAzFrame.rst", "api/gammapy.utils.coordinates.FoVICRSFrame.rst", "api/gammapy.utils.coordinates.cartesian.rst", "api/gammapy.utils.coordinates.fov_to_sky.rst", "api/gammapy.utils.coordinates.galactic.rst", "api/gammapy.utils.coordinates.motion_since_birth.rst", "api/gammapy.utils.coordinates.polar.rst", "api/gammapy.utils.coordinates.sky_to_fov.rst", "api/gammapy.utils.coordinates.velocity_glon_glat.rst", "api/gammapy.utils.fits.HDULocation.rst", "api/gammapy.utils.fits.LazyFitsData.rst", "api/gammapy.utils.fits.earth_location_from_dict.rst", "api/gammapy.utils.integrate.trapz_loglog.rst", "api/gammapy.utils.interpolation.ScaledRegularGridInterpolator.rst", "api/gammapy.utils.interpolation.interpolate_profile.rst", "api/gammapy.utils.interpolation.interpolation_scale.rst", "api/gammapy.utils.parallel.BACKEND_DEFAULT.rst", "api/gammapy.utils.parallel.METHOD_DEFAULT.rst", "api/gammapy.utils.parallel.METHOD_KWARGS_DEFAULT.rst", "api/gammapy.utils.parallel.N_JOBS_DEFAULT.rst", "api/gammapy.utils.parallel.POOL_KWARGS_DEFAULT.rst", "api/gammapy.utils.parallel.multiprocessing_manager.rst", "api/gammapy.utils.parallel.run_multiprocessing.rst", "api/gammapy.utils.random.InverseCDFSampler.rst", "api/gammapy.utils.random.draw.rst", "api/gammapy.utils.random.get_random_state.rst", "api/gammapy.utils.random.normalize.rst", "api/gammapy.utils.random.pdf.rst", "api/gammapy.utils.random.sample_powerlaw.rst", "api/gammapy.utils.random.sample_sphere.rst", "api/gammapy.utils.random.sample_sphere_distance.rst", "api/gammapy.utils.random.sample_times.rst", "api/gammapy.utils.regions.compound_region_to_regions.rst", "api/gammapy.utils.regions.make_concentric_annulus_sky_regions.rst", "api/gammapy.utils.regions.make_orthogonal_rectangle_sky_regions.rst", "api/gammapy.utils.regions.region_to_frame.rst", "api/gammapy.utils.regions.regions_to_compound_region.rst", "api/gammapy.utils.scripts.from_yaml.rst", "api/gammapy.utils.scripts.get_images_paths.rst", "api/gammapy.utils.scripts.make_path.rst", "api/gammapy.utils.scripts.read_yaml.rst", "api/gammapy.utils.scripts.recursive_merge_dicts.rst", "api/gammapy.utils.scripts.to_yaml.rst", "api/gammapy.utils.scripts.write_yaml.rst", "api/gammapy.utils.table.hstack_columns.rst", "api/gammapy.utils.table.table_row_to_dict.rst", "api/gammapy.utils.table.table_standardise_units_copy.rst", "api/gammapy.utils.table.table_standardise_units_inplace.rst", "api/gammapy.utils.testing.Checker.rst", "api/gammapy.utils.testing.assert_quantity_allclose.rst", "api/gammapy.utils.testing.assert_skycoord_allclose.rst", "api/gammapy.utils.testing.assert_time_allclose.rst", "api/gammapy.utils.testing.mpl_plot_check.rst", "api/gammapy.utils.testing.requires_data.rst", "api/gammapy.utils.testing.requires_dependency.rst", "api/gammapy.utils.time.absolute_time.rst", "api/gammapy.utils.time.time_ref_from_dict.rst", "api/gammapy.utils.time.time_ref_to_dict.rst", "api/gammapy.utils.time.time_relative_to_ref.rst", "api/gammapy.utils.units.standardise_unit.rst", "api/gammapy.utils.units.unit_from_fits_image_hdu.rst", "api/gammapy.utils.units.wrap_at.rst", "api/gammapy.visualization.MapPanelPlotter.rst", "api/gammapy.visualization.add_colorbar.rst", "api/gammapy.visualization.annotate_heatmap.rst", "api/gammapy.visualization.colormap_hess.rst", "api/gammapy.visualization.colormap_milagro.rst", "api/gammapy.visualization.plot_contour_line.rst", "api/gammapy.visualization.plot_distribution.rst", "api/gammapy.visualization.plot_heatmap.rst", "api/gammapy.visualization.plot_map_rgb.rst", "api/gammapy.visualization.plot_npred_signal.rst", "api/gammapy.visualization.plot_spectrum_datasets_off_regions.rst", "api/gammapy.visualization.plot_theta_squared_table.rst", "development/dependencies.rst", "development/dev_howto.rst", "development/doc_howto.rst", "development/index.rst", "development/intro.rst", "development/pigs/index.rst", "development/pigs/pig-001.rst", "development/pigs/pig-002.rst", "development/pigs/pig-003.rst", "development/pigs/pig-004.rst", "development/pigs/pig-005.rst", "development/pigs/pig-006.rst", "development/pigs/pig-007.rst", "development/pigs/pig-008.rst", "development/pigs/pig-009.rst", "development/pigs/pig-010.rst", "development/pigs/pig-011.rst", "development/pigs/pig-012.rst", "development/pigs/pig-013.rst", "development/pigs/pig-014.rst", "development/pigs/pig-016.rst", "development/pigs/pig-017.rst", "development/pigs/pig-018.rst", "development/pigs/pig-019.rst", "development/pigs/pig-020.rst", "development/pigs/pig-021.rst", "development/pigs/pig-022.rst", "development/pigs/pig-023.rst", "development/pigs/pig-024.rst", "development/pigs/pig-025.rst", "development/pigs/pig-026.rst", "development/pigs/pig-027.rst", "development/pigs/pig-028.rst", "development/release.rst", "development/setup.rst", "getting-started/environments.rst", "getting-started/index.rst", "getting-started/install.rst", "getting-started/quickstart.rst", "getting-started/troubleshooting.rst", "getting-started/usage.rst", "index.rst", "release-notes/index.rst", "release-notes/v0.1.rst", "release-notes/v0.10.rst", "release-notes/v0.11.rst", "release-notes/v0.12.rst", "release-notes/v0.13.rst", "release-notes/v0.14.rst", "release-notes/v0.15.rst", "release-notes/v0.16.rst", "release-notes/v0.17.rst", "release-notes/v0.18.rst", "release-notes/v0.18.1.rst", "release-notes/v0.18.2.rst", "release-notes/v0.19.rst", "release-notes/v0.2.rst", "release-notes/v0.20.rst", "release-notes/v0.20.1.rst", "release-notes/v0.3.rst", "release-notes/v0.4.rst", "release-notes/v0.5.rst", "release-notes/v0.6.rst", "release-notes/v0.7.rst", "release-notes/v0.8.rst", "release-notes/v0.9.rst", "release-notes/v1.0.rst", "release-notes/v1.0.1.rst", "release-notes/v1.0.2.rst", "release-notes/v1.1.rst", "release-notes/v1.2.rst", "release-notes/v1.3.rst", "release-notes/v2.0.rst", "sg_execution_times.rst", "tutorials/analysis-1d/cta_sensitivity.rst", "tutorials/analysis-1d/ebl.rst", "tutorials/analysis-1d/extended_source_spectral_analysis.rst", "tutorials/analysis-1d/index.rst", "tutorials/analysis-1d/sed_fitting.rst", "tutorials/analysis-1d/sg_execution_times.rst", "tutorials/analysis-1d/spectral_analysis.rst", "tutorials/analysis-1d/spectral_analysis_hli.rst", "tutorials/analysis-1d/spectral_analysis_rad_max.rst", "tutorials/analysis-1d/spectrum_simulation.rst", "tutorials/analysis-2d/detect.rst", "tutorials/analysis-2d/index.rst", "tutorials/analysis-2d/modeling_2D.rst", "tutorials/analysis-2d/ring_background.rst", "tutorials/analysis-2d/sg_execution_times.rst", "tutorials/analysis-3d/analysis_3d.rst", "tutorials/analysis-3d/analysis_mwl.rst", "tutorials/analysis-3d/cta_data_analysis.rst", "tutorials/analysis-3d/energy_dependent_estimation.rst", "tutorials/analysis-3d/event_sampling.rst", "tutorials/analysis-3d/event_sampling_nrg_depend_models.rst", "tutorials/analysis-3d/flux_profiles.rst", "tutorials/analysis-3d/index.rst", "tutorials/analysis-3d/sg_execution_times.rst", "tutorials/analysis-3d/simulate_3d.rst", "tutorials/analysis-time/index.rst", "tutorials/analysis-time/light_curve.rst", "tutorials/analysis-time/light_curve_flare.rst", "tutorials/analysis-time/light_curve_simulation.rst", "tutorials/analysis-time/pulsar_analysis.rst", "tutorials/analysis-time/sg_execution_times.rst", "tutorials/analysis-time/time_resolved_spectroscopy.rst", "tutorials/analysis-time/variability_estimation.rst", "tutorials/api/astro_dark_matter.rst", "tutorials/api/catalog.rst", "tutorials/api/datasets.rst", "tutorials/api/estimators.rst", "tutorials/api/fitting.rst", "tutorials/api/index.rst", "tutorials/api/irfs.rst", "tutorials/api/makers.rst", "tutorials/api/maps.rst", "tutorials/api/mask_maps.rst", "tutorials/api/model_management.rst", "tutorials/api/models.rst", "tutorials/api/nested_sampling_Crab.rst", "tutorials/api/observation_clustering.rst", "tutorials/api/priors.rst", "tutorials/api/sg_execution_times.rst", "tutorials/api/theta_square_plot.rst", "tutorials/data/cta.rst", "tutorials/data/fermi_lat.rst", "tutorials/data/hawc.rst", "tutorials/data/hess.rst", "tutorials/data/index.rst", "tutorials/data/sg_execution_times.rst", "tutorials/index.rst", "tutorials/scripts/index.rst", "tutorials/scripts/sg_execution_times.rst", "tutorials/scripts/survey_map.rst", "tutorials/sg_execution_times.rst", "tutorials/starting/analysis_1.rst", "tutorials/starting/analysis_2.rst", "tutorials/starting/index.rst", "tutorials/starting/overview.rst", "tutorials/starting/sg_execution_times.rst", "user-guide/astro/darkmatter/index.rst", "user-guide/astro/index.rst", "user-guide/astro/population/index.rst", "user-guide/astro/source/index.rst", "user-guide/astro/source/pulsar.rst", "user-guide/astro/source/pwn.rst", "user-guide/astro/source/snr.rst", "user-guide/catalog.rst", "user-guide/datasets/index.rst", "user-guide/dl3.rst", "user-guide/estimators.rst", "user-guide/hli.rst", "user-guide/howto.rst", "user-guide/index.rst", "user-guide/irf/aeff.rst", "user-guide/irf/bkg.rst", "user-guide/irf/edisp.rst", "user-guide/irf/index.rst", "user-guide/irf/psf.rst", "user-guide/makers/fov.rst", "user-guide/makers/index.rst", "user-guide/makers/reflected.rst", "user-guide/makers/ring.rst", "user-guide/maps/hpxmap.rst", "user-guide/maps/index.rst", "user-guide/maps/regionmap.rst", "user-guide/model-gallery/index.rst", "user-guide/model-gallery/sg_execution_times.rst", "user-guide/model-gallery/spatial/index.rst", "user-guide/model-gallery/spatial/plot_constant.rst", "user-guide/model-gallery/spatial/plot_disk.rst", "user-guide/model-gallery/spatial/plot_gauss.rst", "user-guide/model-gallery/spatial/plot_gen_gauss.rst", "user-guide/model-gallery/spatial/plot_piecewise_norm_spatial.rst", "user-guide/model-gallery/spatial/plot_point.rst", "user-guide/model-gallery/spatial/plot_shell.rst", "user-guide/model-gallery/spatial/plot_shell2.rst", "user-guide/model-gallery/spatial/plot_template.rst", "user-guide/model-gallery/spatial/sg_execution_times.rst", "user-guide/model-gallery/spectral/index.rst", "user-guide/model-gallery/spectral/plot_absorbed.rst", "user-guide/model-gallery/spectral/plot_broken_powerlaw.rst", "user-guide/model-gallery/spectral/plot_compound.rst", "user-guide/model-gallery/spectral/plot_constant_spectral.rst", "user-guide/model-gallery/spectral/plot_exp_cutoff_powerlaw.rst", "user-guide/model-gallery/spectral/plot_exp_cutoff_powerlaw_3fgl.rst", "user-guide/model-gallery/spectral/plot_exp_cutoff_powerlaw_norm_spectral.rst", "user-guide/model-gallery/spectral/plot_gauss_spectral.rst", "user-guide/model-gallery/spectral/plot_logparabola.rst", "user-guide/model-gallery/spectral/plot_logparabola_norm_spectral.rst", "user-guide/model-gallery/spectral/plot_naima.rst", "user-guide/model-gallery/spectral/plot_piecewise_norm_spectral.rst", "user-guide/model-gallery/spectral/plot_powerlaw.rst", "user-guide/model-gallery/spectral/plot_powerlaw2.rst", "user-guide/model-gallery/spectral/plot_powerlaw_norm_spectral.rst", "user-guide/model-gallery/spectral/plot_smooth_broken_powerlaw.rst", "user-guide/model-gallery/spectral/plot_super_exp_cutoff_powerlaw_3fgl.rst", "user-guide/model-gallery/spectral/plot_super_exp_cutoff_powerlaw_4fgl.rst", "user-guide/model-gallery/spectral/plot_super_exp_cutoff_powerlaw_4fgl_dr1.rst", "user-guide/model-gallery/spectral/plot_template_spectral.rst", "user-guide/model-gallery/spectral/sg_execution_times.rst", "user-guide/model-gallery/temporal/index.rst", "user-guide/model-gallery/temporal/plot_constant_temporal.rst", "user-guide/model-gallery/temporal/plot_expdecay_temporal.rst", "user-guide/model-gallery/temporal/plot_gaussian_temporal.rst", "user-guide/model-gallery/temporal/plot_generalized_gaussian_temporal.rst", "user-guide/model-gallery/temporal/plot_linear_temporal.rst", "user-guide/model-gallery/temporal/plot_powerlaw_temporal.rst", "user-guide/model-gallery/temporal/plot_sine_temporal.rst", "user-guide/model-gallery/temporal/plot_template_phase_temporal.rst", "user-guide/model-gallery/temporal/plot_template_temporal.rst", "user-guide/model-gallery/temporal/sg_execution_times.rst", "user-guide/modeling.rst", "user-guide/package.rst", "user-guide/references.rst", "user-guide/scripts/index.rst", "user-guide/stats/fit_statistics.rst", "user-guide/stats/index.rst", "user-guide/stats/wstat_derivation.rst", "user-guide/utils.rst", "user-guide/visualization/index.rst"], "indexentries": {"--dependencies": [[11, "cmdoption-gammapy-info-dependencies", false]], "--envvar": [[11, "cmdoption-gammapy-info-envvar", false]], "--filename": [[11, "cmdoption-gammapy-analysis-config-filename", false], [11, "cmdoption-gammapy-analysis-run-filename", false], [11, "cmdoption-gammapy-workflow-config-filename", false], [11, "cmdoption-gammapy-workflow-run-filename", false]], "--ignore-warnings": [[11, "cmdoption-gammapy-ignore-warnings", false]], "--log-level": [[11, "cmdoption-gammapy-log-level", false]], "--no-dependencies": [[11, "cmdoption-gammapy-info-dependencies", false]], "--no-envvar": [[11, "cmdoption-gammapy-info-envvar", false]], "--no-system": [[11, "cmdoption-gammapy-info-system", false]], "--no-version": [[11, "cmdoption-gammapy-info-version", false]], "--out": [[11, "cmdoption-gammapy-analysis-run-out", false], [11, "cmdoption-gammapy-download-datasets-out", false], [11, "cmdoption-gammapy-download-notebooks-out", false]], "--overwrite": [[11, "cmdoption-gammapy-analysis-config-overwrite", false], [11, "cmdoption-gammapy-analysis-run-overwrite", false], [11, "cmdoption-gammapy-workflow-config-overwrite", false]], "--release": [[11, "cmdoption-gammapy-download-datasets-release", false], [11, "cmdoption-gammapy-download-notebooks-release", false]], "--system": [[11, "cmdoption-gammapy-info-system", false]], "--version": [[11, "cmdoption-gammapy-info-version", false], [11, "cmdoption-gammapy-version", false]], "1d analysis": [[608, "term-1D-Analysis", true]], "3d analysis": [[608, "term-3D-Analysis", true]], "__call__() (gammapy.astro.darkmatter.burkertprofile method)": [[17, "gammapy.astro.darkmatter.BurkertProfile.__call__", false]], "__call__() (gammapy.astro.darkmatter.darkmatterannihilationspectralmodel method)": [[19, "gammapy.astro.darkmatter.DarkMatterAnnihilationSpectralModel.__call__", false]], "__call__() (gammapy.astro.darkmatter.darkmatterdecayspectralmodel method)": [[20, "gammapy.astro.darkmatter.DarkMatterDecaySpectralModel.__call__", false]], "__call__() (gammapy.astro.darkmatter.dmprofile method)": [[18, "gammapy.astro.darkmatter.DMProfile.__call__", false]], "__call__() (gammapy.astro.darkmatter.einastoprofile method)": [[21, "gammapy.astro.darkmatter.EinastoProfile.__call__", false]], "__call__() (gammapy.astro.darkmatter.isothermalprofile method)": [[22, "gammapy.astro.darkmatter.IsothermalProfile.__call__", false]], "__call__() (gammapy.astro.darkmatter.mooreprofile method)": [[24, "gammapy.astro.darkmatter.MooreProfile.__call__", false]], "__call__() (gammapy.astro.darkmatter.nfwprofile method)": [[25, "gammapy.astro.darkmatter.NFWProfile.__call__", false]], "__call__() (gammapy.astro.darkmatter.primaryflux method)": [[26, "gammapy.astro.darkmatter.PrimaryFlux.__call__", false]], "__call__() (gammapy.astro.darkmatter.zhaoprofile method)": [[27, "gammapy.astro.darkmatter.ZhaoProfile.__call__", false]], "__call__() (gammapy.astro.population.casebattacharya1998 method)": [[28, "gammapy.astro.population.CaseBattacharya1998.__call__", false]], "__call__() (gammapy.astro.population.exponential method)": [[29, "gammapy.astro.population.Exponential.__call__", false]], "__call__() (gammapy.astro.population.faucherkaspi2006 method)": [[30, "gammapy.astro.population.FaucherKaspi2006.__call__", false]], "__call__() (gammapy.astro.population.faucherkaspi2006velocitybimodal method)": [[31, "gammapy.astro.population.FaucherKaspi2006VelocityBimodal.__call__", false]], "__call__() (gammapy.astro.population.faucherkaspi2006velocitymaxwellian method)": [[32, "gammapy.astro.population.FaucherKaspi2006VelocityMaxwellian.__call__", false]], "__call__() (gammapy.astro.population.faucherspiral method)": [[33, "gammapy.astro.population.FaucherSpiral.__call__", false]], "__call__() (gammapy.astro.population.lorimer2006 method)": [[35, "gammapy.astro.population.Lorimer2006.__call__", false]], "__call__() (gammapy.astro.population.paczynski1990 method)": [[36, "gammapy.astro.population.Paczynski1990.__call__", false]], "__call__() (gammapy.astro.population.paczynski1990velocity method)": [[37, "gammapy.astro.population.Paczynski1990Velocity.__call__", false]], "__call__() (gammapy.astro.population.yusifovkucuk2004 method)": [[39, "gammapy.astro.population.YusifovKucuk2004.__call__", false]], "__call__() (gammapy.astro.population.yusifovkucuk2004b method)": [[40, "gammapy.astro.population.YusifovKucuk2004B.__call__", false]], "__call__() (gammapy.modeling.models.brokenpowerlawspectralmodel method)": [[224, "gammapy.modeling.models.BrokenPowerLawSpectralModel.__call__", false]], "__call__() (gammapy.modeling.models.compoundspectralmodel method)": [[225, "gammapy.modeling.models.CompoundSpectralModel.__call__", false]], "__call__() (gammapy.modeling.models.constantfluxspatialmodel method)": [[226, "gammapy.modeling.models.ConstantFluxSpatialModel.__call__", false]], "__call__() (gammapy.modeling.models.constantspatialmodel method)": [[227, "gammapy.modeling.models.ConstantSpatialModel.__call__", false]], "__call__() (gammapy.modeling.models.constantspectralmodel method)": [[228, "gammapy.modeling.models.ConstantSpectralModel.__call__", false]], "__call__() (gammapy.modeling.models.constanttemporalmodel method)": [[229, "gammapy.modeling.models.ConstantTemporalModel.__call__", false]], "__call__() (gammapy.modeling.models.diskspatialmodel method)": [[231, "gammapy.modeling.models.DiskSpatialModel.__call__", false]], "__call__() (gammapy.modeling.models.eblabsorptionnormspectralmodel method)": [[232, "gammapy.modeling.models.EBLAbsorptionNormSpectralModel.__call__", false]], "__call__() (gammapy.modeling.models.expcutoffpowerlaw3fglspectralmodel method)": [[234, "gammapy.modeling.models.ExpCutoffPowerLaw3FGLSpectralModel.__call__", false]], "__call__() (gammapy.modeling.models.expcutoffpowerlawnormspectralmodel method)": [[235, "gammapy.modeling.models.ExpCutoffPowerLawNormSpectralModel.__call__", false]], "__call__() (gammapy.modeling.models.expcutoffpowerlawspectralmodel method)": [[236, "gammapy.modeling.models.ExpCutoffPowerLawSpectralModel.__call__", false]], "__call__() (gammapy.modeling.models.expdecaytemporalmodel method)": [[237, "gammapy.modeling.models.ExpDecayTemporalModel.__call__", false]], "__call__() (gammapy.modeling.models.gaussianprior method)": [[239, "gammapy.modeling.models.GaussianPrior.__call__", false]], "__call__() (gammapy.modeling.models.gaussianspatialmodel method)": [[240, "gammapy.modeling.models.GaussianSpatialModel.__call__", false]], "__call__() (gammapy.modeling.models.gaussianspectralmodel method)": [[241, "gammapy.modeling.models.GaussianSpectralModel.__call__", false]], "__call__() (gammapy.modeling.models.gaussiantemporalmodel method)": [[242, "gammapy.modeling.models.GaussianTemporalModel.__call__", false]], "__call__() (gammapy.modeling.models.generalizedgaussianspatialmodel method)": [[243, "gammapy.modeling.models.GeneralizedGaussianSpatialModel.__call__", false]], "__call__() (gammapy.modeling.models.generalizedgaussiantemporalmodel method)": [[244, "gammapy.modeling.models.GeneralizedGaussianTemporalModel.__call__", false]], "__call__() (gammapy.modeling.models.lightcurvetemplatetemporalmodel method)": [[245, "gammapy.modeling.models.LightCurveTemplateTemporalModel.__call__", false]], "__call__() (gammapy.modeling.models.lineartemporalmodel method)": [[246, "gammapy.modeling.models.LinearTemporalModel.__call__", false]], "__call__() (gammapy.modeling.models.logparabolanormspectralmodel method)": [[247, "gammapy.modeling.models.LogParabolaNormSpectralModel.__call__", false]], "__call__() (gammapy.modeling.models.logparabolaspectralmodel method)": [[248, "gammapy.modeling.models.LogParabolaSpectralModel.__call__", false]], "__call__() (gammapy.modeling.models.loguniformprior method)": [[249, "gammapy.modeling.models.LogUniformPrior.__call__", false]], "__call__() (gammapy.modeling.models.meyercrabspectralmodel method)": [[251, "gammapy.modeling.models.MeyerCrabSpectralModel.__call__", false]], "__call__() (gammapy.modeling.models.naimaspectralmodel method)": [[255, "gammapy.modeling.models.NaimaSpectralModel.__call__", false]], "__call__() (gammapy.modeling.models.piecewisenormspatialmodel method)": [[256, "gammapy.modeling.models.PiecewiseNormSpatialModel.__call__", false]], "__call__() (gammapy.modeling.models.piecewisenormspectralmodel method)": [[257, "gammapy.modeling.models.PiecewiseNormSpectralModel.__call__", false]], "__call__() (gammapy.modeling.models.pointspatialmodel method)": [[258, "gammapy.modeling.models.PointSpatialModel.__call__", false]], "__call__() (gammapy.modeling.models.powerlaw2spectralmodel method)": [[259, "gammapy.modeling.models.PowerLaw2SpectralModel.__call__", false]], "__call__() (gammapy.modeling.models.powerlawnormspectralmodel method)": [[260, "gammapy.modeling.models.PowerLawNormSpectralModel.__call__", false]], "__call__() (gammapy.modeling.models.powerlawspectralmodel method)": [[261, "gammapy.modeling.models.PowerLawSpectralModel.__call__", false]], "__call__() (gammapy.modeling.models.powerlawtemporalmodel method)": [[262, "gammapy.modeling.models.PowerLawTemporalModel.__call__", false]], "__call__() (gammapy.modeling.models.prior method)": [[263, "gammapy.modeling.models.Prior.__call__", false]], "__call__() (gammapy.modeling.models.scalespectralmodel method)": [[266, "gammapy.modeling.models.ScaleSpectralModel.__call__", false]], "__call__() (gammapy.modeling.models.shell2spatialmodel method)": [[267, "gammapy.modeling.models.Shell2SpatialModel.__call__", false]], "__call__() (gammapy.modeling.models.shellspatialmodel method)": [[268, "gammapy.modeling.models.ShellSpatialModel.__call__", false]], "__call__() (gammapy.modeling.models.sinetemporalmodel method)": [[269, "gammapy.modeling.models.SineTemporalModel.__call__", false]], "__call__() (gammapy.modeling.models.skymodel method)": [[270, "gammapy.modeling.models.SkyModel.__call__", false]], "__call__() (gammapy.modeling.models.smoothbrokenpowerlawspectralmodel method)": [[271, "gammapy.modeling.models.SmoothBrokenPowerLawSpectralModel.__call__", false]], "__call__() (gammapy.modeling.models.spatialmodel method)": [[272, "gammapy.modeling.models.SpatialModel.__call__", false]], "__call__() (gammapy.modeling.models.spectralmodel method)": [[273, "gammapy.modeling.models.SpectralModel.__call__", false]], "__call__() (gammapy.modeling.models.superexpcutoffpowerlaw3fglspectralmodel method)": [[274, "gammapy.modeling.models.SuperExpCutoffPowerLaw3FGLSpectralModel.__call__", false]], "__call__() (gammapy.modeling.models.superexpcutoffpowerlaw4fgldr3spectralmodel method)": [[275, "gammapy.modeling.models.SuperExpCutoffPowerLaw4FGLDR3SpectralModel.__call__", false]], "__call__() (gammapy.modeling.models.superexpcutoffpowerlaw4fglspectralmodel method)": [[276, "gammapy.modeling.models.SuperExpCutoffPowerLaw4FGLSpectralModel.__call__", false]], "__call__() (gammapy.modeling.models.templatendspatialmodel method)": [[278, "gammapy.modeling.models.TemplateNDSpatialModel.__call__", false]], "__call__() (gammapy.modeling.models.templatendspectralmodel method)": [[279, "gammapy.modeling.models.TemplateNDSpectralModel.__call__", false]], "__call__() (gammapy.modeling.models.templatephasecurvetemporalmodel method)": [[281, "gammapy.modeling.models.TemplatePhaseCurveTemporalModel.__call__", false]], "__call__() (gammapy.modeling.models.templatespatialmodel method)": [[282, "gammapy.modeling.models.TemplateSpatialModel.__call__", false]], "__call__() (gammapy.modeling.models.templatespectralmodel method)": [[283, "gammapy.modeling.models.TemplateSpectralModel.__call__", false]], "__call__() (gammapy.modeling.models.temporalmodel method)": [[284, "gammapy.modeling.models.TemporalModel.__call__", false]], "__call__() (gammapy.modeling.models.uniformprior method)": [[285, "gammapy.modeling.models.UniformPrior.__call__", false]], "__call__() (gammapy.utils.interpolation.scaledregulargridinterpolator method)": [[333, "gammapy.utils.interpolation.ScaledRegularGridInterpolator.__call__", false]], "a (gammapy.astro.population.yusifovkucuk2004 attribute)": [[39, "gammapy.astro.population.YusifovKucuk2004.a", false]], "a (gammapy.astro.population.yusifovkucuk2004b attribute)": [[40, "gammapy.astro.population.YusifovKucuk2004B.a", false]], "absolute_time() (in module gammapy.utils.time)": [[375, "gammapy.utils.time.absolute_time", false]], "acceptance_off (gammapy.estimators.fluxmaps attribute)": [[126, "gammapy.estimators.FluxMaps.acceptance_off", false]], "acceptance_off (gammapy.estimators.fluxpoints attribute)": [[128, "gammapy.estimators.FluxPoints.acceptance_off", false]], "acceptance_on (gammapy.estimators.fluxmaps attribute)": [[126, "gammapy.estimators.FluxMaps.acceptance_on", false]], "acceptance_on (gammapy.estimators.fluxpoints attribute)": [[128, "gammapy.estimators.FluxPoints.acceptance_on", false]], "adaptiveringbackgroundmaker (class in gammapy.makers)": [[172, "gammapy.makers.AdaptiveRingBackgroundMaker", false]], "add_colorbar() (in module gammapy.visualization)": [[383, "gammapy.visualization.add_colorbar", false]], "add_column() (gammapy.data.hduindextable method)": [[88, "gammapy.data.HDUIndexTable.add_column", false]], "add_column() (gammapy.data.observationtable method)": [[92, "gammapy.data.ObservationTable.add_column", false]], "add_columns() (gammapy.data.hduindextable method)": [[88, "gammapy.data.HDUIndexTable.add_columns", false]], "add_columns() (gammapy.data.observationtable method)": [[92, "gammapy.data.ObservationTable.add_columns", false]], "add_index() (gammapy.data.hduindextable method)": [[88, "gammapy.data.HDUIndexTable.add_index", false]], "add_index() (gammapy.data.observationtable method)": [[92, "gammapy.data.ObservationTable.add_index", false]], "add_observed_parameters() (in module gammapy.astro.population)": [[41, "gammapy.astro.population.add_observed_parameters", false]], "add_pulsar_parameters() (in module gammapy.astro.population)": [[42, "gammapy.astro.population.add_pulsar_parameters", false]], "add_pwn_parameters() (in module gammapy.astro.population)": [[43, "gammapy.astro.population.add_pwn_parameters", false]], "add_row() (gammapy.data.hduindextable method)": [[88, "gammapy.data.HDUIndexTable.add_row", false]], "add_row() (gammapy.data.observationtable method)": [[92, "gammapy.data.ObservationTable.add_row", false]], "add_snr_parameters() (in module gammapy.astro.population)": [[44, "gammapy.astro.population.add_snr_parameters", false]], "aeff": [[608, "term-Aeff", true]], "aeff (gammapy.data.observation attribute)": [[89, "gammapy.data.Observation.aeff", false]], "all_quantities() (gammapy.estimators.fluxmaps static method)": [[126, "gammapy.estimators.FluxMaps.all_quantities", false]], "all_quantities() (gammapy.estimators.fluxpoints static method)": [[128, "gammapy.estimators.FluxPoints.all_quantities", false]], "allowed_channels (gammapy.astro.darkmatter.primaryflux attribute)": [[26, "gammapy.astro.darkmatter.PrimaryFlux.allowed_channels", false]], "alpha (gammapy.astro.population.casebattacharya1998 attribute)": [[28, "gammapy.astro.population.CaseBattacharya1998.alpha", false]], "alpha (gammapy.datasets.mapdatasetonoff attribute)": [[107, "gammapy.datasets.MapDatasetOnOff.alpha", false]], "alpha (gammapy.datasets.spectrumdatasetonoff attribute)": [[112, "gammapy.datasets.SpectrumDatasetOnOff.alpha", false]], "alpha (gammapy.estimators.fluxmaps attribute)": [[126, "gammapy.estimators.FluxMaps.alpha", false]], "alpha (gammapy.estimators.fluxpoints attribute)": [[128, "gammapy.estimators.FluxPoints.alpha", false]], "alpha (gammapy.modeling.models.expcutoffpowerlawnormspectralmodel attribute)": [[235, "gammapy.modeling.models.ExpCutoffPowerLawNormSpectralModel.alpha", false]], "alpha (gammapy.modeling.models.expcutoffpowerlawspectralmodel attribute)": [[236, "gammapy.modeling.models.ExpCutoffPowerLawSpectralModel.alpha", false]], "alpha (gammapy.modeling.models.lineartemporalmodel attribute)": [[246, "gammapy.modeling.models.LinearTemporalModel.alpha", false]], "alpha (gammapy.modeling.models.logparabolanormspectralmodel attribute)": [[247, "gammapy.modeling.models.LogParabolaNormSpectralModel.alpha", false]], "alpha (gammapy.modeling.models.logparabolaspectralmodel attribute)": [[248, "gammapy.modeling.models.LogParabolaSpectralModel.alpha", false]], "alpha (gammapy.modeling.models.powerlawtemporalmodel attribute)": [[262, "gammapy.modeling.models.PowerLawTemporalModel.alpha", false]], "alpha_norm (gammapy.modeling.models.eblabsorptionnormspectralmodel attribute)": [[232, "gammapy.modeling.models.EBLAbsorptionNormSpectralModel.alpha_norm", false]], "altaz (gammapy.data.eventlist attribute)": [[83, "gammapy.data.EventList.altaz", false]], "altaz (gammapy.data.pointinginfo attribute)": [[95, "gammapy.data.PointingInfo.altaz", false]], "altaz (gammapy.irf.fovalignment attribute)": [[160, "gammapy.irf.FoVAlignment.ALTAZ", false]], "altaz_frame (gammapy.data.eventlist attribute)": [[83, "gammapy.data.EventList.altaz_frame", false]], "altaz_frame (gammapy.data.pointinginfo attribute)": [[95, "gammapy.data.PointingInfo.altaz_frame", false]], "altaz_from_table (gammapy.data.eventlist attribute)": [[83, "gammapy.data.EventList.altaz_from_table", false]], "altaz_from_table (gammapy.data.pointinginfo attribute)": [[95, "gammapy.data.PointingInfo.altaz_from_table", false]], "altaz_interpolate() (gammapy.data.pointinginfo method)": [[95, "gammapy.data.PointingInfo.altaz_interpolate", false]], "amp (gammapy.modeling.models.sinetemporalmodel attribute)": [[269, "gammapy.modeling.models.SineTemporalModel.amp", false]], "amplitude (gammapy.astro.population.casebattacharya1998 attribute)": [[28, "gammapy.astro.population.CaseBattacharya1998.amplitude", false]], "amplitude (gammapy.astro.population.exponential attribute)": [[29, "gammapy.astro.population.Exponential.amplitude", false]], "amplitude (gammapy.astro.population.faucherkaspi2006 attribute)": [[30, "gammapy.astro.population.FaucherKaspi2006.amplitude", false]], "amplitude (gammapy.astro.population.faucherkaspi2006velocitybimodal attribute)": [[31, "gammapy.astro.population.FaucherKaspi2006VelocityBimodal.amplitude", false]], "amplitude (gammapy.astro.population.faucherkaspi2006velocitymaxwellian attribute)": [[32, "gammapy.astro.population.FaucherKaspi2006VelocityMaxwellian.amplitude", false]], "amplitude (gammapy.astro.population.lorimer2006 attribute)": [[35, "gammapy.astro.population.Lorimer2006.amplitude", false]], "amplitude (gammapy.astro.population.paczynski1990 attribute)": [[36, "gammapy.astro.population.Paczynski1990.amplitude", false]], "amplitude (gammapy.astro.population.paczynski1990velocity attribute)": [[37, "gammapy.astro.population.Paczynski1990Velocity.amplitude", false]], "amplitude (gammapy.astro.population.yusifovkucuk2004 attribute)": [[39, "gammapy.astro.population.YusifovKucuk2004.amplitude", false]], "amplitude (gammapy.astro.population.yusifovkucuk2004b attribute)": [[40, "gammapy.astro.population.YusifovKucuk2004B.amplitude", false]], "amplitude (gammapy.modeling.models.brokenpowerlawspectralmodel attribute)": [[224, "gammapy.modeling.models.BrokenPowerLawSpectralModel.amplitude", false]], "amplitude (gammapy.modeling.models.expcutoffpowerlaw3fglspectralmodel attribute)": [[234, "gammapy.modeling.models.ExpCutoffPowerLaw3FGLSpectralModel.amplitude", false]], "amplitude (gammapy.modeling.models.expcutoffpowerlawspectralmodel attribute)": [[236, "gammapy.modeling.models.ExpCutoffPowerLawSpectralModel.amplitude", false]], "amplitude (gammapy.modeling.models.gaussianspectralmodel attribute)": [[241, "gammapy.modeling.models.GaussianSpectralModel.amplitude", false]], "amplitude (gammapy.modeling.models.logparabolaspectralmodel attribute)": [[248, "gammapy.modeling.models.LogParabolaSpectralModel.amplitude", false]], "amplitude (gammapy.modeling.models.powerlaw2spectralmodel attribute)": [[259, "gammapy.modeling.models.PowerLaw2SpectralModel.amplitude", false]], "amplitude (gammapy.modeling.models.powerlawspectralmodel attribute)": [[261, "gammapy.modeling.models.PowerLawSpectralModel.amplitude", false]], "amplitude (gammapy.modeling.models.smoothbrokenpowerlawspectralmodel attribute)": [[271, "gammapy.modeling.models.SmoothBrokenPowerLawSpectralModel.amplitude", false]], "amplitude (gammapy.modeling.models.superexpcutoffpowerlaw3fglspectralmodel attribute)": [[274, "gammapy.modeling.models.SuperExpCutoffPowerLaw3FGLSpectralModel.amplitude", false]], "amplitude (gammapy.modeling.models.superexpcutoffpowerlaw4fgldr3spectralmodel attribute)": [[275, "gammapy.modeling.models.SuperExpCutoffPowerLaw4FGLDR3SpectralModel.amplitude", false]], "amplitude (gammapy.modeling.models.superexpcutoffpowerlaw4fglspectralmodel attribute)": [[276, "gammapy.modeling.models.SuperExpCutoffPowerLaw4FGLSpectralModel.amplitude", false]], "analysis (class in gammapy.analysis)": [[15, "gammapy.analysis.Analysis", false]], "analysisconfig (class in gammapy.analysis)": [[16, "gammapy.analysis.AnalysisConfig", false]], "annotate_heatmap() (in module gammapy.visualization)": [[384, "gammapy.visualization.annotate_heatmap", false]], "append() (gammapy.data.observations method)": [[93, "gammapy.data.Observations.append", false]], "append() (gammapy.datasets.datasets method)": [[101, "gammapy.datasets.Datasets.append", false]], "append() (gammapy.modeling.models.models method)": [[254, "gammapy.modeling.models.Models.append", false]], "apply_edisp() (in module gammapy.datasets)": [[113, "gammapy.datasets.apply_edisp", false]], "apply_edisp() (in module gammapy.datasets.utils)": [[118, "gammapy.datasets.utils.apply_edisp", false]], "apply_mask() (gammapy.maps.mapcoord method)": [[203, "gammapy.maps.MapCoord.apply_mask", false]], "argsort() (gammapy.data.hduindextable method)": [[88, "gammapy.data.HDUIndexTable.argsort", false]], "argsort() (gammapy.data.observationtable method)": [[92, "gammapy.data.ObservationTable.argsort", false]], "as_array() (gammapy.data.hduindextable method)": [[88, "gammapy.data.HDUIndexTable.as_array", false]], "as_array() (gammapy.data.observationtable method)": [[92, "gammapy.data.ObservationTable.as_array", false]], "as_energy_true (gammapy.maps.geom attribute)": [[195, "gammapy.maps.Geom.as_energy_true", false]], "as_energy_true (gammapy.maps.hpxgeom attribute)": [[196, "gammapy.maps.HpxGeom.as_energy_true", false]], "as_energy_true (gammapy.maps.regiongeom attribute)": [[205, "gammapy.maps.RegionGeom.as_energy_true", false]], "as_energy_true (gammapy.maps.wcsgeom attribute)": [[208, "gammapy.maps.WcsGeom.as_energy_true", false]], "as_plot_center (gammapy.maps.labelmapaxis attribute)": [[199, "gammapy.maps.LabelMapAxis.as_plot_center", false]], "as_plot_center (gammapy.maps.mapaxis attribute)": [[202, "gammapy.maps.MapAxis.as_plot_center", false]], "as_plot_center (gammapy.maps.timemapaxis attribute)": [[207, "gammapy.maps.TimeMapAxis.as_plot_center", false]], "as_plot_edges (gammapy.maps.labelmapaxis attribute)": [[199, "gammapy.maps.LabelMapAxis.as_plot_edges", false]], "as_plot_edges (gammapy.maps.mapaxis attribute)": [[202, "gammapy.maps.MapAxis.as_plot_edges", false]], "as_plot_edges (gammapy.maps.timemapaxis attribute)": [[207, "gammapy.maps.TimeMapAxis.as_plot_edges", false]], "as_plot_labels (gammapy.maps.labelmapaxis attribute)": [[199, "gammapy.maps.LabelMapAxis.as_plot_labels", false]], "as_plot_labels (gammapy.maps.mapaxis attribute)": [[202, "gammapy.maps.MapAxis.as_plot_labels", false]], "as_plot_labels (gammapy.maps.timemapaxis attribute)": [[207, "gammapy.maps.TimeMapAxis.as_plot_labels", false]], "as_plot_scale (gammapy.maps.mapaxis attribute)": [[202, "gammapy.maps.MapAxis.as_plot_scale", false]], "as_plot_xerr (gammapy.maps.labelmapaxis attribute)": [[199, "gammapy.maps.LabelMapAxis.as_plot_xerr", false]], "as_plot_xerr (gammapy.maps.mapaxis attribute)": [[202, "gammapy.maps.MapAxis.as_plot_xerr", false]], "as_plot_xerr (gammapy.maps.timemapaxis attribute)": [[207, "gammapy.maps.TimeMapAxis.as_plot_xerr", false]], "asmoothmapestimator (class in gammapy.estimators)": [[121, "gammapy.estimators.ASmoothMapEstimator", false]], "assert_name() (gammapy.maps.labelmapaxis method)": [[199, "gammapy.maps.LabelMapAxis.assert_name", false]], "assert_name() (gammapy.maps.mapaxis method)": [[202, "gammapy.maps.MapAxis.assert_name", false]], "assert_name() (gammapy.maps.timemapaxis method)": [[207, "gammapy.maps.TimeMapAxis.assert_name", false]], "assert_names() (gammapy.maps.mapaxes method)": [[201, "gammapy.maps.MapAxes.assert_names", false]], "assert_quantity_allclose() (in module gammapy.utils.testing)": [[369, "gammapy.utils.testing.assert_quantity_allclose", false]], "assert_skycoord_allclose() (in module gammapy.utils.testing)": [[370, "gammapy.utils.testing.assert_skycoord_allclose", false]], "assert_time_allclose() (in module gammapy.utils.testing)": [[371, "gammapy.utils.testing.assert_time_allclose", false]], "asso (gammapy.catalog.sourcecatalogobject2fhl attribute)": [[71, "gammapy.catalog.SourceCatalogObject2FHL.asso", false]], "asso (gammapy.catalog.sourcecatalogobject3fgl attribute)": [[74, "gammapy.catalog.SourceCatalogObject3FGL.asso", false]], "asso (gammapy.catalog.sourcecatalogobject3fhl attribute)": [[75, "gammapy.catalog.SourceCatalogObject3FHL.asso", false]], "asso (gammapy.catalog.sourcecatalogobject3pc attribute)": [[77, "gammapy.catalog.SourceCatalogObject3PC.asso", false]], "asso (gammapy.catalog.sourcecatalogobject4fgl attribute)": [[78, "gammapy.catalog.SourceCatalogObject4FGL.asso", false]], "autoscale() (gammapy.modeling.parameter method)": [[218, "gammapy.modeling.Parameter.autoscale", false]], "autoscale() (gammapy.modeling.parameters method)": [[219, "gammapy.modeling.Parameters.autoscale", false]], "autoscale() (gammapy.modeling.priorparameter method)": [[220, "gammapy.modeling.PriorParameter.autoscale", false]], "autoscale() (gammapy.modeling.priorparameters method)": [[221, "gammapy.modeling.PriorParameters.autoscale", false]], "available_hdus (gammapy.data.observation attribute)": [[89, "gammapy.data.Observation.available_hdus", false]], "available_irfs (gammapy.data.observation attribute)": [[89, "gammapy.data.Observation.available_irfs", false]], "available_methods (gammapy.makers.fovbackgroundmaker attribute)": [[174, "gammapy.makers.FoVBackgroundMaker.available_methods", false]], "available_methods (gammapy.makers.safemaskmaker attribute)": [[183, "gammapy.makers.SafeMaskMaker.available_methods", false]], "available_quantities (gammapy.estimators.fluxmaps attribute)": [[126, "gammapy.estimators.FluxMaps.available_quantities", false]], "available_quantities (gammapy.estimators.fluxpoints attribute)": [[128, "gammapy.estimators.FluxPoints.available_quantities", false]], "available_selection (gammapy.makers.mapdatasetmaker attribute)": [[177, "gammapy.makers.MapDatasetMaker.available_selection", false]], "available_selection (gammapy.makers.spectrumdatasetmaker attribute)": [[184, "gammapy.makers.SpectrumDatasetMaker.available_selection", false]], "available_stat_type (gammapy.datasets.fluxpointsdataset attribute)": [[103, "gammapy.datasets.FluxPointsDataset.available_stat_type", false]], "axes (gammapy.irf.background2d attribute)": [[151, "gammapy.irf.Background2D.axes", false]], "axes (gammapy.irf.background3d attribute)": [[152, "gammapy.irf.Background3D.axes", false]], "axes (gammapy.irf.backgroundirf attribute)": [[153, "gammapy.irf.BackgroundIRF.axes", false]], "axes (gammapy.irf.edispkernel attribute)": [[154, "gammapy.irf.EDispKernel.axes", false]], "axes (gammapy.irf.effectiveareatable2d attribute)": [[157, "gammapy.irf.EffectiveAreaTable2D.axes", false]], "axes (gammapy.irf.energydependentmultigausspsf attribute)": [[158, "gammapy.irf.EnergyDependentMultiGaussPSF.axes", false]], "axes (gammapy.irf.energydispersion2d attribute)": [[159, "gammapy.irf.EnergyDispersion2D.axes", false]], "axes (gammapy.irf.irf attribute)": [[161, "gammapy.irf.IRF.axes", false]], "axes (gammapy.irf.parametricpsf attribute)": [[168, "gammapy.irf.ParametricPSF.axes", false]], "axes (gammapy.irf.psf3d attribute)": [[164, "gammapy.irf.PSF3D.axes", false]], "axes (gammapy.irf.psfking attribute)": [[166, "gammapy.irf.PSFKing.axes", false]], "axes (gammapy.irf.radmax2d attribute)": [[169, "gammapy.irf.RadMax2D.axes", false]], "axes (gammapy.maps.hpxgeom attribute)": [[196, "gammapy.maps.HpxGeom.axes", false]], "axes (gammapy.maps.regiongeom attribute)": [[205, "gammapy.maps.RegionGeom.axes", false]], "axes (gammapy.maps.wcsgeom attribute)": [[208, "gammapy.maps.WcsGeom.axes", false]], "axes_names (gammapy.maps.hpxgeom attribute)": [[196, "gammapy.maps.HpxGeom.axes_names", false]], "axes_names (gammapy.maps.regiongeom attribute)": [[205, "gammapy.maps.RegionGeom.axes_names", false]], "axes_names (gammapy.maps.wcsgeom attribute)": [[208, "gammapy.maps.WcsGeom.axes_names", false]], "axis_names (gammapy.maps.mapcoord attribute)": [[203, "gammapy.maps.MapCoord.axis_names", false]], "b (gammapy.astro.population.lorimer2006 attribute)": [[35, "gammapy.astro.population.Lorimer2006.B", false]], "b (gammapy.astro.population.yusifovkucuk2004 attribute)": [[39, "gammapy.astro.population.YusifovKucuk2004.b", false]], "b (gammapy.astro.population.yusifovkucuk2004b attribute)": [[40, "gammapy.astro.population.YusifovKucuk2004B.b", false]], "backend (gammapy.modeling.covarianceresult attribute)": [[214, "gammapy.modeling.CovarianceResult.backend", false]], "backend (gammapy.modeling.fitresult attribute)": [[216, "gammapy.modeling.FitResult.backend", false]], "backend (gammapy.modeling.optimizeresult attribute)": [[217, "gammapy.modeling.OptimizeResult.backend", false]], "backend_default (in module gammapy.utils.parallel)": [[336, "gammapy.utils.parallel.BACKEND_DEFAULT", false]], "background (gammapy.datasets.mapdataset attribute)": [[104, "gammapy.datasets.MapDataset.background", false]], "background (gammapy.datasets.mapdatasetonoff attribute)": [[107, "gammapy.datasets.MapDatasetOnOff.background", false]], "background (gammapy.datasets.spectrumdataset attribute)": [[111, "gammapy.datasets.SpectrumDataset.background", false]], "background (gammapy.datasets.spectrumdatasetonoff attribute)": [[112, "gammapy.datasets.SpectrumDatasetOnOff.background", false]], "background2d (class in gammapy.irf)": [[151, "gammapy.irf.Background2D", false]], "background3d (class in gammapy.irf)": [[152, "gammapy.irf.Background3D", false]], "background_model (gammapy.datasets.mapdataset attribute)": [[104, "gammapy.datasets.MapDataset.background_model", false]], "background_model (gammapy.datasets.mapdatasetonoff attribute)": [[107, "gammapy.datasets.MapDatasetOnOff.background_model", false]], "background_model (gammapy.datasets.spectrumdataset attribute)": [[111, "gammapy.datasets.SpectrumDataset.background_model", false]], "background_model (gammapy.datasets.spectrumdatasetonoff attribute)": [[112, "gammapy.datasets.SpectrumDatasetOnOff.background_model", false]], "background_models (gammapy.modeling.models.datasetmodels attribute)": [[230, "gammapy.modeling.models.DatasetModels.background_models", false]], "background_models (gammapy.modeling.models.models attribute)": [[254, "gammapy.modeling.models.Models.background_models", false]], "backgroundirf (class in gammapy.irf)": [[153, "gammapy.irf.BackgroundIRF", false]], "bar_radius (gammapy.astro.population.valleespiral attribute)": [[38, "gammapy.astro.population.ValleeSpiral.bar_radius", false]], "base_dir (gammapy.data.hduindextable attribute)": [[88, "gammapy.data.HDUIndexTable.base_dir", false]], "bbox_with_units (gammapy.astro.population.casebattacharya1998 attribute)": [[28, "gammapy.astro.population.CaseBattacharya1998.bbox_with_units", false]], "bbox_with_units (gammapy.astro.population.exponential attribute)": [[29, "gammapy.astro.population.Exponential.bbox_with_units", false]], "bbox_with_units (gammapy.astro.population.faucherkaspi2006 attribute)": [[30, "gammapy.astro.population.FaucherKaspi2006.bbox_with_units", false]], "bbox_with_units (gammapy.astro.population.faucherkaspi2006velocitybimodal attribute)": [[31, "gammapy.astro.population.FaucherKaspi2006VelocityBimodal.bbox_with_units", false]], "bbox_with_units (gammapy.astro.population.faucherkaspi2006velocitymaxwellian attribute)": [[32, "gammapy.astro.population.FaucherKaspi2006VelocityMaxwellian.bbox_with_units", false]], "bbox_with_units (gammapy.astro.population.lorimer2006 attribute)": [[35, "gammapy.astro.population.Lorimer2006.bbox_with_units", false]], "bbox_with_units (gammapy.astro.population.paczynski1990 attribute)": [[36, "gammapy.astro.population.Paczynski1990.bbox_with_units", false]], "bbox_with_units (gammapy.astro.population.paczynski1990velocity attribute)": [[37, "gammapy.astro.population.Paczynski1990Velocity.bbox_with_units", false]], "bbox_with_units (gammapy.astro.population.yusifovkucuk2004 attribute)": [[39, "gammapy.astro.population.YusifovKucuk2004.bbox_with_units", false]], "bbox_with_units (gammapy.astro.population.yusifovkucuk2004b attribute)": [[40, "gammapy.astro.population.YusifovKucuk2004B.bbox_with_units", false]], "beta (gammapy.astro.population.casebattacharya1998 attribute)": [[28, "gammapy.astro.population.CaseBattacharya1998.beta", false]], "beta (gammapy.modeling.models.lineartemporalmodel attribute)": [[246, "gammapy.modeling.models.LinearTemporalModel.beta", false]], "beta (gammapy.modeling.models.logparabolanormspectralmodel attribute)": [[247, "gammapy.modeling.models.LogParabolaNormSpectralModel.beta", false]], "beta (gammapy.modeling.models.logparabolaspectralmodel attribute)": [[248, "gammapy.modeling.models.LogParabolaSpectralModel.beta", false]], "beta (gammapy.modeling.models.smoothbrokenpowerlawspectralmodel attribute)": [[271, "gammapy.modeling.models.SmoothBrokenPowerLawSpectralModel.beta", false]], "bin_volume() (gammapy.maps.mapaxes method)": [[201, "gammapy.maps.MapAxes.bin_volume", false]], "bin_volume() (gammapy.maps.regiongeom method)": [[205, "gammapy.maps.RegionGeom.bin_volume", false]], "bin_volume() (gammapy.maps.wcsgeom method)": [[208, "gammapy.maps.WcsGeom.bin_volume", false]], "bin_width (gammapy.maps.labelmapaxis attribute)": [[199, "gammapy.maps.LabelMapAxis.bin_width", false]], "bin_width (gammapy.maps.mapaxis attribute)": [[202, "gammapy.maps.MapAxis.bin_width", false]], "bin_width (gammapy.maps.timemapaxis attribute)": [[207, "gammapy.maps.TimeMapAxis.bin_width", false]], "binary_dilate() (gammapy.maps.wcsndmap method)": [[210, "gammapy.maps.WcsNDMap.binary_dilate", false]], "binary_erode() (gammapy.maps.wcsndmap method)": [[210, "gammapy.maps.WcsNDMap.binary_erode", false]], "binary_structure() (gammapy.maps.wcsgeom method)": [[208, "gammapy.maps.WcsGeom.binary_structure", false]], "binsz_wcs (gammapy.maps.regiongeom attribute)": [[205, "gammapy.maps.RegionGeom.binsz_wcs", false]], "bkg": [[608, "term-Bkg", true]], "bkg (gammapy.data.observation attribute)": [[89, "gammapy.data.Observation.bkg", false]], "boundary_mask() (gammapy.maps.wcsgeom method)": [[208, "gammapy.maps.WcsGeom.boundary_mask", false]], "bounding_box (gammapy.astro.population.casebattacharya1998 attribute)": [[28, "gammapy.astro.population.CaseBattacharya1998.bounding_box", false]], "bounding_box (gammapy.astro.population.exponential attribute)": [[29, "gammapy.astro.population.Exponential.bounding_box", false]], "bounding_box (gammapy.astro.population.faucherkaspi2006 attribute)": [[30, "gammapy.astro.population.FaucherKaspi2006.bounding_box", false]], "bounding_box (gammapy.astro.population.faucherkaspi2006velocitybimodal attribute)": [[31, "gammapy.astro.population.FaucherKaspi2006VelocityBimodal.bounding_box", false]], "bounding_box (gammapy.astro.population.faucherkaspi2006velocitymaxwellian attribute)": [[32, "gammapy.astro.population.FaucherKaspi2006VelocityMaxwellian.bounding_box", false]], "bounding_box (gammapy.astro.population.lorimer2006 attribute)": [[35, "gammapy.astro.population.Lorimer2006.bounding_box", false]], "bounding_box (gammapy.astro.population.paczynski1990 attribute)": [[36, "gammapy.astro.population.Paczynski1990.bounding_box", false]], "bounding_box (gammapy.astro.population.paczynski1990velocity attribute)": [[37, "gammapy.astro.population.Paczynski1990Velocity.bounding_box", false]], "bounding_box (gammapy.astro.population.yusifovkucuk2004 attribute)": [[39, "gammapy.astro.population.YusifovKucuk2004.bounding_box", false]], "bounding_box (gammapy.astro.population.yusifovkucuk2004b attribute)": [[40, "gammapy.astro.population.YusifovKucuk2004B.bounding_box", false]], "bounds (gammapy.astro.population.casebattacharya1998 attribute)": [[28, "gammapy.astro.population.CaseBattacharya1998.bounds", false]], "bounds (gammapy.astro.population.exponential attribute)": [[29, "gammapy.astro.population.Exponential.bounds", false]], "bounds (gammapy.astro.population.faucherkaspi2006 attribute)": [[30, "gammapy.astro.population.FaucherKaspi2006.bounds", false]], "bounds (gammapy.astro.population.faucherkaspi2006velocitybimodal attribute)": [[31, "gammapy.astro.population.FaucherKaspi2006VelocityBimodal.bounds", false]], "bounds (gammapy.astro.population.faucherkaspi2006velocitymaxwellian attribute)": [[32, "gammapy.astro.population.FaucherKaspi2006VelocityMaxwellian.bounds", false]], "bounds (gammapy.astro.population.lorimer2006 attribute)": [[35, "gammapy.astro.population.Lorimer2006.bounds", false]], "bounds (gammapy.astro.population.paczynski1990 attribute)": [[36, "gammapy.astro.population.Paczynski1990.bounds", false]], "bounds (gammapy.astro.population.paczynski1990velocity attribute)": [[37, "gammapy.astro.population.Paczynski1990Velocity.bounds", false]], "bounds (gammapy.astro.population.yusifovkucuk2004 attribute)": [[39, "gammapy.astro.population.YusifovKucuk2004.bounds", false]], "bounds (gammapy.astro.population.yusifovkucuk2004b attribute)": [[40, "gammapy.astro.population.YusifovKucuk2004B.bounds", false]], "bounds (gammapy.maps.mapaxis attribute)": [[202, "gammapy.maps.MapAxis.bounds", false]], "bounds (gammapy.maps.timemapaxis attribute)": [[207, "gammapy.maps.TimeMapAxis.bounds", false]], "broadcasted (gammapy.maps.mapcoord attribute)": [[203, "gammapy.maps.MapCoord.broadcasted", false]], "brokenpowerlawspectralmodel (class in gammapy.modeling.models)": [[224, "gammapy.modeling.models.BrokenPowerLawSpectralModel", false]], "burkertprofile (class in gammapy.astro.darkmatter)": [[17, "gammapy.astro.darkmatter.BurkertProfile", false]], "c (gammapy.astro.population.lorimer2006 attribute)": [[35, "gammapy.astro.population.Lorimer2006.C", false]], "cache (gammapy.utils.coordinates.fovaltazframe attribute)": [[320, "gammapy.utils.coordinates.FoVAltAzFrame.cache", false]], "cache (gammapy.utils.coordinates.fovicrsframe attribute)": [[321, "gammapy.utils.coordinates.FoVICRSFrame.cache", false]], "callback() (gammapy.makers.datasetsmaker method)": [[173, "gammapy.makers.DatasetsMaker.callback", false]], "cartesian (gammapy.utils.coordinates.fovaltazframe attribute)": [[320, "gammapy.utils.coordinates.FoVAltAzFrame.cartesian", false]], "cartesian (gammapy.utils.coordinates.fovicrsframe attribute)": [[321, "gammapy.utils.coordinates.FoVICRSFrame.cartesian", false]], "cartesian() (in module gammapy.utils.coordinates)": [[322, "gammapy.utils.coordinates.cartesian", false]], "casebattacharya1998 (class in gammapy.astro.population)": [[28, "gammapy.astro.population.CaseBattacharya1998", false]], "cash": [[608, "term-Cash", true]], "cash() (in module gammapy.stats)": [[300, "gammapy.stats.cash", false]], "cash_sum_cython() (in module gammapy.stats)": [[301, "gammapy.stats.cash_sum_cython", false]], "cashcountsstatistic (class in gammapy.stats)": [[295, "gammapy.stats.CashCountsStatistic", false]], "catalog_registry (in module gammapy.catalog)": [[55, "gammapy.catalog.CATALOG_REGISTRY", false]], "center (gammapy.maps.labelmapaxis attribute)": [[199, "gammapy.maps.LabelMapAxis.center", false]], "center (gammapy.maps.mapaxis attribute)": [[202, "gammapy.maps.MapAxis.center", false]], "center (gammapy.maps.timemapaxis attribute)": [[207, "gammapy.maps.TimeMapAxis.center", false]], "center_coord (gammapy.maps.geom attribute)": [[195, "gammapy.maps.Geom.center_coord", false]], "center_coord (gammapy.maps.hpxgeom attribute)": [[196, "gammapy.maps.HpxGeom.center_coord", false]], "center_coord (gammapy.maps.mapaxes attribute)": [[201, "gammapy.maps.MapAxes.center_coord", false]], "center_coord (gammapy.maps.regiongeom attribute)": [[205, "gammapy.maps.RegionGeom.center_coord", false]], "center_coord (gammapy.maps.wcsgeom attribute)": [[208, "gammapy.maps.WcsGeom.center_coord", false]], "center_pix (gammapy.maps.geom attribute)": [[195, "gammapy.maps.Geom.center_pix", false]], "center_pix (gammapy.maps.hpxgeom attribute)": [[196, "gammapy.maps.HpxGeom.center_pix", false]], "center_pix (gammapy.maps.regiongeom attribute)": [[205, "gammapy.maps.RegionGeom.center_pix", false]], "center_pix (gammapy.maps.wcsgeom attribute)": [[208, "gammapy.maps.WcsGeom.center_pix", false]], "center_skydir (gammapy.maps.geom attribute)": [[195, "gammapy.maps.Geom.center_skydir", false]], "center_skydir (gammapy.maps.hpxgeom attribute)": [[196, "gammapy.maps.HpxGeom.center_skydir", false]], "center_skydir (gammapy.maps.regiongeom attribute)": [[205, "gammapy.maps.RegionGeom.center_skydir", false]], "center_skydir (gammapy.maps.wcsgeom attribute)": [[208, "gammapy.maps.WcsGeom.center_skydir", false]], "channel (gammapy.astro.darkmatter.primaryflux attribute)": [[26, "gammapy.astro.darkmatter.PrimaryFlux.channel", false]], "channel_registry (gammapy.astro.darkmatter.primaryflux attribute)": [[26, "gammapy.astro.darkmatter.PrimaryFlux.channel_registry", false]], "check() (gammapy.data.datastore method)": [[82, "gammapy.data.DataStore.check", false]], "check() (gammapy.data.eventlist method)": [[83, "gammapy.data.EventList.check", false]], "check() (gammapy.data.observation method)": [[89, "gammapy.data.Observation.check", false]], "check_limits() (gammapy.modeling.parameter method)": [[218, "gammapy.modeling.Parameter.check_limits", false]], "check_limits() (gammapy.modeling.parameters method)": [[219, "gammapy.modeling.Parameters.check_limits", false]], "check_limits() (gammapy.modeling.priorparameter method)": [[220, "gammapy.modeling.PriorParameter.check_limits", false]], "check_limits() (gammapy.modeling.priorparameters method)": [[221, "gammapy.modeling.PriorParameters.check_limits", false]], "checker (class in gammapy.utils.testing)": [[368, "gammapy.utils.testing.Checker", false]], "chi2asymmetricerrorfitstatistic (class in gammapy.stats)": [[296, "gammapy.stats.Chi2AsymmetricErrorFitStatistic", false]], "chi2fitstatistic (class in gammapy.stats)": [[297, "gammapy.stats.Chi2FitStatistic", false]], "clear() (gammapy.data.observations method)": [[93, "gammapy.data.Observations.clear", false]], "clear() (gammapy.datasets.datasets method)": [[101, "gammapy.datasets.Datasets.clear", false]], "clear() (gammapy.maps.maps method)": [[204, "gammapy.maps.Maps.clear", false]], "clear() (gammapy.modeling.models.models method)": [[254, "gammapy.modeling.models.Models.clear", false]], "coadd() (gammapy.maps.hpxmap method)": [[197, "gammapy.maps.HpxMap.coadd", false]], "coadd() (gammapy.maps.hpxndmap method)": [[198, "gammapy.maps.HpxNDMap.coadd", false]], "coadd() (gammapy.maps.map method)": [[200, "gammapy.maps.Map.coadd", false]], "coadd() (gammapy.maps.regionndmap method)": [[206, "gammapy.maps.RegionNDMap.coadd", false]], "coadd() (gammapy.maps.wcsmap method)": [[209, "gammapy.maps.WcsMap.coadd", false]], "coadd() (gammapy.maps.wcsndmap method)": [[210, "gammapy.maps.WcsNDMap.coadd", false]], "coefficients (gammapy.modeling.models.meyercrabspectralmodel attribute)": [[251, "gammapy.modeling.models.MeyerCrabSpectralModel.coefficients", false]], "coerce_units() (gammapy.astro.population.casebattacharya1998 method)": [[28, "gammapy.astro.population.CaseBattacharya1998.coerce_units", false]], "coerce_units() (gammapy.astro.population.exponential method)": [[29, "gammapy.astro.population.Exponential.coerce_units", false]], "coerce_units() (gammapy.astro.population.faucherkaspi2006 method)": [[30, "gammapy.astro.population.FaucherKaspi2006.coerce_units", false]], "coerce_units() (gammapy.astro.population.faucherkaspi2006velocitybimodal method)": [[31, "gammapy.astro.population.FaucherKaspi2006VelocityBimodal.coerce_units", false]], "coerce_units() (gammapy.astro.population.faucherkaspi2006velocitymaxwellian method)": [[32, "gammapy.astro.population.FaucherKaspi2006VelocityMaxwellian.coerce_units", false]], "coerce_units() (gammapy.astro.population.lorimer2006 method)": [[35, "gammapy.astro.population.Lorimer2006.coerce_units", false]], "coerce_units() (gammapy.astro.population.paczynski1990 method)": [[36, "gammapy.astro.population.Paczynski1990.coerce_units", false]], "coerce_units() (gammapy.astro.population.paczynski1990velocity method)": [[37, "gammapy.astro.population.Paczynski1990Velocity.coerce_units", false]], "coerce_units() (gammapy.astro.population.yusifovkucuk2004 method)": [[39, "gammapy.astro.population.YusifovKucuk2004.coerce_units", false]], "coerce_units() (gammapy.astro.population.yusifovkucuk2004b method)": [[40, "gammapy.astro.population.YusifovKucuk2004B.coerce_units", false]], "col_fit_deriv (gammapy.astro.population.casebattacharya1998 attribute)": [[28, "gammapy.astro.population.CaseBattacharya1998.col_fit_deriv", false]], "col_fit_deriv (gammapy.astro.population.exponential attribute)": [[29, "gammapy.astro.population.Exponential.col_fit_deriv", false]], "col_fit_deriv (gammapy.astro.population.faucherkaspi2006 attribute)": [[30, "gammapy.astro.population.FaucherKaspi2006.col_fit_deriv", false]], "col_fit_deriv (gammapy.astro.population.faucherkaspi2006velocitybimodal attribute)": [[31, "gammapy.astro.population.FaucherKaspi2006VelocityBimodal.col_fit_deriv", false]], "col_fit_deriv (gammapy.astro.population.faucherkaspi2006velocitymaxwellian attribute)": [[32, "gammapy.astro.population.FaucherKaspi2006VelocityMaxwellian.col_fit_deriv", false]], "col_fit_deriv (gammapy.astro.population.lorimer2006 attribute)": [[35, "gammapy.astro.population.Lorimer2006.col_fit_deriv", false]], "col_fit_deriv (gammapy.astro.population.paczynski1990 attribute)": [[36, "gammapy.astro.population.Paczynski1990.col_fit_deriv", false]], "col_fit_deriv (gammapy.astro.population.paczynski1990velocity attribute)": [[37, "gammapy.astro.population.Paczynski1990Velocity.col_fit_deriv", false]], "col_fit_deriv (gammapy.astro.population.yusifovkucuk2004 attribute)": [[39, "gammapy.astro.population.YusifovKucuk2004.col_fit_deriv", false]], "col_fit_deriv (gammapy.astro.population.yusifovkucuk2004b attribute)": [[40, "gammapy.astro.population.YusifovKucuk2004B.col_fit_deriv", false]], "colnames (gammapy.data.hduindextable attribute)": [[88, "gammapy.data.HDUIndexTable.colnames", false]], "colnames (gammapy.data.observationtable attribute)": [[92, "gammapy.data.ObservationTable.colnames", false]], "colormap_hess() (in module gammapy.visualization)": [[385, "gammapy.visualization.colormap_hess", false]], "colormap_milagro() (in module gammapy.visualization)": [[386, "gammapy.visualization.colormap_milagro", false]], "columnclass (gammapy.data.hduindextable attribute)": [[88, "gammapy.data.HDUIndexTable.ColumnClass", false]], "columnclass (gammapy.data.observationtable attribute)": [[92, "gammapy.data.ObservationTable.ColumnClass", false]], "combine_flux_maps() (in module gammapy.estimators.utils)": [[138, "gammapy.estimators.utils.combine_flux_maps", false]], "combine_significance_maps() (in module gammapy.estimators.utils)": [[139, "gammapy.estimators.utils.combine_significance_maps", false]], "components_models() (gammapy.catalog.sourcecatalogobjecthgps method)": [[80, "gammapy.catalog.SourceCatalogObjectHGPS.components_models", false]], "compound_region_to_regions() (in module gammapy.utils.regions)": [[352, "gammapy.utils.regions.compound_region_to_regions", false]], "compoundspectralmodel (class in gammapy.modeling.models)": [[225, "gammapy.modeling.models.CompoundSpectralModel", false]], "compute_chisq() (in module gammapy.stats)": [[302, "gammapy.stats.compute_chisq", false]], "compute_differential_jfactor() (gammapy.astro.darkmatter.jfactory method)": [[23, "gammapy.astro.darkmatter.JFactory.compute_differential_jfactor", false]], "compute_errn() (gammapy.stats.cashcountsstatistic method)": [[295, "gammapy.stats.CashCountsStatistic.compute_errn", false]], "compute_errn() (gammapy.stats.wstatcountsstatistic method)": [[299, "gammapy.stats.WStatCountsStatistic.compute_errn", false]], "compute_errp() (gammapy.stats.cashcountsstatistic method)": [[295, "gammapy.stats.CashCountsStatistic.compute_errp", false]], "compute_errp() (gammapy.stats.wstatcountsstatistic method)": [[299, "gammapy.stats.WStatCountsStatistic.compute_errp", false]], "compute_flux_doubling() (in module gammapy.stats)": [[303, "gammapy.stats.compute_flux_doubling", false]], "compute_fpp() (in module gammapy.stats)": [[304, "gammapy.stats.compute_fpp", false]], "compute_fvar() (in module gammapy.stats)": [[305, "gammapy.stats.compute_fvar", false]], "compute_jfactor() (gammapy.astro.darkmatter.jfactory method)": [[23, "gammapy.astro.darkmatter.JFactory.compute_jfactor", false]], "compute_lightcurve_discrete_correlation() (in module gammapy.estimators.utils)": [[140, "gammapy.estimators.utils.compute_lightcurve_discrete_correlation", false]], "compute_lightcurve_doublingtime() (in module gammapy.estimators.utils)": [[141, "gammapy.estimators.utils.compute_lightcurve_doublingtime", false]], "compute_lightcurve_fpp() (in module gammapy.estimators.utils)": [[142, "gammapy.estimators.utils.compute_lightcurve_fpp", false]], "compute_lightcurve_fvar() (in module gammapy.estimators.utils)": [[143, "gammapy.estimators.utils.compute_lightcurve_fvar", false]], "compute_upper_limit() (gammapy.stats.cashcountsstatistic method)": [[295, "gammapy.stats.CashCountsStatistic.compute_upper_limit", false]], "compute_upper_limit() (gammapy.stats.wstatcountsstatistic method)": [[299, "gammapy.stats.WStatCountsStatistic.compute_upper_limit", false]], "concatenate() (gammapy.maps.labelmapaxis method)": [[199, "gammapy.maps.LabelMapAxis.concatenate", false]], "concatenate() (gammapy.maps.mapaxis method)": [[202, "gammapy.maps.MapAxis.concatenate", false]], "conf_max (gammapy.modeling.parameter attribute)": [[218, "gammapy.modeling.Parameter.conf_max", false]], "conf_max (gammapy.modeling.priorparameter attribute)": [[220, "gammapy.modeling.PriorParameter.conf_max", false]], "conf_min (gammapy.modeling.parameter attribute)": [[218, "gammapy.modeling.Parameter.conf_min", false]], "conf_min (gammapy.modeling.priorparameter attribute)": [[220, "gammapy.modeling.PriorParameter.conf_min", false]], "confidence() (gammapy.modeling.fit method)": [[215, "gammapy.modeling.Fit.confidence", false]], "config (gammapy.analysis.analysis attribute)": [[15, "gammapy.analysis.Analysis.config", false]], "config_parameters (gammapy.estimators.asmoothmapestimator attribute)": [[121, "gammapy.estimators.ASmoothMapEstimator.config_parameters", false]], "config_parameters (gammapy.estimators.energydependentmorphologyestimator attribute)": [[123, "gammapy.estimators.EnergyDependentMorphologyEstimator.config_parameters", false]], "config_parameters (gammapy.estimators.estimator attribute)": [[124, "gammapy.estimators.Estimator.config_parameters", false]], "config_parameters (gammapy.estimators.excessmapestimator attribute)": [[125, "gammapy.estimators.ExcessMapEstimator.config_parameters", false]], "config_parameters (gammapy.estimators.fluxpointsestimator attribute)": [[129, "gammapy.estimators.FluxPointsEstimator.config_parameters", false]], "config_parameters (gammapy.estimators.fluxprofileestimator attribute)": [[130, "gammapy.estimators.FluxProfileEstimator.config_parameters", false]], "config_parameters (gammapy.estimators.imageprofileestimator attribute)": [[132, "gammapy.estimators.ImageProfileEstimator.config_parameters", false]], "config_parameters (gammapy.estimators.lightcurveestimator attribute)": [[133, "gammapy.estimators.LightCurveEstimator.config_parameters", false]], "config_parameters (gammapy.estimators.parameterestimator attribute)": [[134, "gammapy.estimators.ParameterEstimator.config_parameters", false]], "config_parameters (gammapy.estimators.sensitivityestimator attribute)": [[136, "gammapy.estimators.SensitivityEstimator.config_parameters", false]], "config_parameters (gammapy.estimators.tsmapestimator attribute)": [[137, "gammapy.estimators.TSMapEstimator.config_parameters", false]], "const (gammapy.modeling.models.constantspectralmodel attribute)": [[228, "gammapy.modeling.models.ConstantSpectralModel.const", false]], "constantfluxspatialmodel (class in gammapy.modeling.models)": [[226, "gammapy.modeling.models.ConstantFluxSpatialModel", false]], "constantspatialmodel (class in gammapy.modeling.models)": [[227, "gammapy.modeling.models.ConstantSpatialModel", false]], "constantspectralmodel (class in gammapy.modeling.models)": [[228, "gammapy.modeling.models.ConstantSpectralModel", false]], "constanttemporalmodel (class in gammapy.modeling.models)": [[229, "gammapy.modeling.models.ConstantTemporalModel", false]], "construct() (gammapy.analysis.analysisconfig class method)": [[16, "gammapy.analysis.AnalysisConfig.construct", false]], "construct() (gammapy.data.eventlistmetadata class method)": [[84, "gammapy.data.EventListMetaData.construct", false]], "construct() (gammapy.data.gtimetadata class method)": [[87, "gammapy.data.GTIMetaData.construct", false]], "construct() (gammapy.data.observationmetadata class method)": [[91, "gammapy.data.ObservationMetaData.construct", false]], "construct() (gammapy.datasets.mapdatasetmetadata class method)": [[106, "gammapy.datasets.MapDatasetMetaData.construct", false]], "construct() (gammapy.estimators.fluxmetadata class method)": [[127, "gammapy.estimators.FluxMetaData.construct", false]], "containment() (gammapy.irf.energydependentmultigausspsf method)": [[158, "gammapy.irf.EnergyDependentMultiGaussPSF.containment", false]], "containment() (gammapy.irf.parametricpsf method)": [[168, "gammapy.irf.ParametricPSF.containment", false]], "containment() (gammapy.irf.psf3d method)": [[164, "gammapy.irf.PSF3D.containment", false]], "containment() (gammapy.irf.psfking method)": [[166, "gammapy.irf.PSFKing.containment", false]], "containment() (gammapy.irf.psfmap method)": [[167, "gammapy.irf.PSFMap.containment", false]], "containment() (gammapy.irf.recopsfmap method)": [[170, "gammapy.irf.RecoPSFMap.containment", false]], "containment_radius() (gammapy.irf.energydependentmultigausspsf method)": [[158, "gammapy.irf.EnergyDependentMultiGaussPSF.containment_radius", false]], "containment_radius() (gammapy.irf.parametricpsf method)": [[168, "gammapy.irf.ParametricPSF.containment_radius", false]], "containment_radius() (gammapy.irf.psf3d method)": [[164, "gammapy.irf.PSF3D.containment_radius", false]], "containment_radius() (gammapy.irf.psfking method)": [[166, "gammapy.irf.PSFKing.containment_radius", false]], "containment_radius() (gammapy.irf.psfmap method)": [[167, "gammapy.irf.PSFMap.containment_radius", false]], "containment_radius() (gammapy.irf.recopsfmap method)": [[170, "gammapy.irf.RecoPSFMap.containment_radius", false]], "containment_radius() (in module gammapy.maps)": [[211, "gammapy.maps.containment_radius", false]], "containment_radius_map() (gammapy.irf.psfmap method)": [[167, "gammapy.irf.PSFMap.containment_radius_map", false]], "containment_radius_map() (gammapy.irf.recopsfmap method)": [[170, "gammapy.irf.RecoPSFMap.containment_radius_map", false]], "containment_region() (in module gammapy.maps)": [[212, "gammapy.maps.containment_region", false]], "contains() (gammapy.maps.geom method)": [[195, "gammapy.maps.Geom.contains", false]], "contains() (gammapy.maps.hpxgeom method)": [[196, "gammapy.maps.HpxGeom.contains", false]], "contains() (gammapy.maps.regiongeom method)": [[205, "gammapy.maps.RegionGeom.contains", false]], "contains() (gammapy.maps.wcsgeom method)": [[208, "gammapy.maps.WcsGeom.contains", false]], "contains_pix() (gammapy.maps.geom method)": [[195, "gammapy.maps.Geom.contains_pix", false]], "contains_pix() (gammapy.maps.hpxgeom method)": [[196, "gammapy.maps.HpxGeom.contains_pix", false]], "contains_pix() (gammapy.maps.regiongeom method)": [[205, "gammapy.maps.RegionGeom.contains_pix", false]], "contains_pix() (gammapy.maps.wcsgeom method)": [[208, "gammapy.maps.WcsGeom.contains_pix", false]], "contains_wcs_pix() (gammapy.maps.regiongeom method)": [[205, "gammapy.maps.RegionGeom.contains_wcs_pix", false]], "contributes() (gammapy.modeling.models.fovbackgroundmodel static method)": [[238, "gammapy.modeling.models.FoVBackgroundModel.contributes", false]], "contributes() (gammapy.modeling.models.skymodel method)": [[270, "gammapy.modeling.models.SkyModel.contributes", false]], "contributes_to_stat (gammapy.datasets.datasets attribute)": [[101, "gammapy.datasets.Datasets.contributes_to_stat", false]], "convert_bytestring_to_unicode() (gammapy.data.hduindextable method)": [[88, "gammapy.data.HDUIndexTable.convert_bytestring_to_unicode", false]], "convert_bytestring_to_unicode() (gammapy.data.observationtable method)": [[92, "gammapy.data.ObservationTable.convert_bytestring_to_unicode", false]], "convert_unicode_to_bytestring() (gammapy.data.hduindextable method)": [[88, "gammapy.data.HDUIndexTable.convert_unicode_to_bytestring", false]], "convert_unicode_to_bytestring() (gammapy.data.observationtable method)": [[92, "gammapy.data.ObservationTable.convert_unicode_to_bytestring", false]], "convolve() (gammapy.maps.hpxndmap method)": [[198, "gammapy.maps.HpxNDMap.convolve", false]], "convolve() (gammapy.maps.wcsndmap method)": [[210, "gammapy.maps.WcsNDMap.convolve", false]], "convolve_full() (gammapy.maps.hpxndmap method)": [[198, "gammapy.maps.HpxNDMap.convolve_full", false]], "convolve_wcs() (gammapy.maps.hpxndmap method)": [[198, "gammapy.maps.HpxNDMap.convolve_wcs", false]], "coord_to_idx() (gammapy.maps.geom method)": [[195, "gammapy.maps.Geom.coord_to_idx", false]], "coord_to_idx() (gammapy.maps.hpxgeom method)": [[196, "gammapy.maps.HpxGeom.coord_to_idx", false]], "coord_to_idx() (gammapy.maps.labelmapaxis method)": [[199, "gammapy.maps.LabelMapAxis.coord_to_idx", false]], "coord_to_idx() (gammapy.maps.mapaxes method)": [[201, "gammapy.maps.MapAxes.coord_to_idx", false]], "coord_to_idx() (gammapy.maps.mapaxis method)": [[202, "gammapy.maps.MapAxis.coord_to_idx", false]], "coord_to_idx() (gammapy.maps.regiongeom method)": [[205, "gammapy.maps.RegionGeom.coord_to_idx", false]], "coord_to_idx() (gammapy.maps.timemapaxis method)": [[207, "gammapy.maps.TimeMapAxis.coord_to_idx", false]], "coord_to_idx() (gammapy.maps.wcsgeom method)": [[208, "gammapy.maps.WcsGeom.coord_to_idx", false]], "coord_to_pix() (gammapy.maps.geom method)": [[195, "gammapy.maps.Geom.coord_to_pix", false]], "coord_to_pix() (gammapy.maps.hpxgeom method)": [[196, "gammapy.maps.HpxGeom.coord_to_pix", false]], "coord_to_pix() (gammapy.maps.labelmapaxis method)": [[199, "gammapy.maps.LabelMapAxis.coord_to_pix", false]], "coord_to_pix() (gammapy.maps.mapaxes method)": [[201, "gammapy.maps.MapAxes.coord_to_pix", false]], "coord_to_pix() (gammapy.maps.mapaxis method)": [[202, "gammapy.maps.MapAxis.coord_to_pix", false]], "coord_to_pix() (gammapy.maps.regiongeom method)": [[205, "gammapy.maps.RegionGeom.coord_to_pix", false]], "coord_to_pix() (gammapy.maps.timemapaxis method)": [[207, "gammapy.maps.TimeMapAxis.coord_to_pix", false]], "coord_to_pix() (gammapy.maps.wcsgeom method)": [[208, "gammapy.maps.WcsGeom.coord_to_pix", false]], "coords (gammapy.modeling.models.piecewisenormspatialmodel attribute)": [[256, "gammapy.modeling.models.PiecewiseNormSpatialModel.coords", false]], "copy() (gammapy.analysis.analysisconfig method)": [[16, "gammapy.analysis.AnalysisConfig.copy", false]], "copy() (gammapy.astro.darkmatter.darkmatterannihilationspectralmodel method)": [[19, "gammapy.astro.darkmatter.DarkMatterAnnihilationSpectralModel.copy", false]], "copy() (gammapy.astro.darkmatter.darkmatterdecayspectralmodel method)": [[20, "gammapy.astro.darkmatter.DarkMatterDecaySpectralModel.copy", false]], "copy() (gammapy.astro.darkmatter.primaryflux method)": [[26, "gammapy.astro.darkmatter.PrimaryFlux.copy", false]], "copy() (gammapy.astro.population.casebattacharya1998 method)": [[28, "gammapy.astro.population.CaseBattacharya1998.copy", false]], "copy() (gammapy.astro.population.exponential method)": [[29, "gammapy.astro.population.Exponential.copy", false]], "copy() (gammapy.astro.population.faucherkaspi2006 method)": [[30, "gammapy.astro.population.FaucherKaspi2006.copy", false]], "copy() (gammapy.astro.population.faucherkaspi2006velocitybimodal method)": [[31, "gammapy.astro.population.FaucherKaspi2006VelocityBimodal.copy", false]], "copy() (gammapy.astro.population.faucherkaspi2006velocitymaxwellian method)": [[32, "gammapy.astro.population.FaucherKaspi2006VelocityMaxwellian.copy", false]], "copy() (gammapy.astro.population.lorimer2006 method)": [[35, "gammapy.astro.population.Lorimer2006.copy", false]], "copy() (gammapy.astro.population.paczynski1990 method)": [[36, "gammapy.astro.population.Paczynski1990.copy", false]], "copy() (gammapy.astro.population.paczynski1990velocity method)": [[37, "gammapy.astro.population.Paczynski1990Velocity.copy", false]], "copy() (gammapy.astro.population.yusifovkucuk2004 method)": [[39, "gammapy.astro.population.YusifovKucuk2004.copy", false]], "copy() (gammapy.astro.population.yusifovkucuk2004b method)": [[40, "gammapy.astro.population.YusifovKucuk2004B.copy", false]], "copy() (gammapy.data.eventlist method)": [[83, "gammapy.data.EventList.copy", false]], "copy() (gammapy.data.eventlistmetadata method)": [[84, "gammapy.data.EventListMetaData.copy", false]], "copy() (gammapy.data.gti method)": [[86, "gammapy.data.GTI.copy", false]], "copy() (gammapy.data.gtimetadata method)": [[87, "gammapy.data.GTIMetaData.copy", false]], "copy() (gammapy.data.hduindextable method)": [[88, "gammapy.data.HDUIndexTable.copy", false]], "copy() (gammapy.data.observation method)": [[89, "gammapy.data.Observation.copy", false]], "copy() (gammapy.data.observationfilter method)": [[90, "gammapy.data.ObservationFilter.copy", false]], "copy() (gammapy.data.observationmetadata method)": [[91, "gammapy.data.ObservationMetaData.copy", false]], "copy() (gammapy.data.observationtable method)": [[92, "gammapy.data.ObservationTable.copy", false]], "copy() (gammapy.datasets.dataset method)": [[100, "gammapy.datasets.Dataset.copy", false]], "copy() (gammapy.datasets.datasets method)": [[101, "gammapy.datasets.Datasets.copy", false]], "copy() (gammapy.datasets.fluxpointsdataset method)": [[103, "gammapy.datasets.FluxPointsDataset.copy", false]], "copy() (gammapy.datasets.mapdataset method)": [[104, "gammapy.datasets.MapDataset.copy", false]], "copy() (gammapy.datasets.mapdatasetmetadata method)": [[106, "gammapy.datasets.MapDatasetMetaData.copy", false]], "copy() (gammapy.datasets.mapdatasetonoff method)": [[107, "gammapy.datasets.MapDatasetOnOff.copy", false]], "copy() (gammapy.datasets.spectrumdataset method)": [[111, "gammapy.datasets.SpectrumDataset.copy", false]], "copy() (gammapy.datasets.spectrumdatasetonoff method)": [[112, "gammapy.datasets.SpectrumDatasetOnOff.copy", false]], "copy() (gammapy.estimators.asmoothmapestimator method)": [[121, "gammapy.estimators.ASmoothMapEstimator.copy", false]], "copy() (gammapy.estimators.energydependentmorphologyestimator method)": [[123, "gammapy.estimators.EnergyDependentMorphologyEstimator.copy", false]], "copy() (gammapy.estimators.estimator method)": [[124, "gammapy.estimators.Estimator.copy", false]], "copy() (gammapy.estimators.excessmapestimator method)": [[125, "gammapy.estimators.ExcessMapEstimator.copy", false]], "copy() (gammapy.estimators.fluxmaps method)": [[126, "gammapy.estimators.FluxMaps.copy", false]], "copy() (gammapy.estimators.fluxmetadata method)": [[127, "gammapy.estimators.FluxMetaData.copy", false]], "copy() (gammapy.estimators.fluxpoints method)": [[128, "gammapy.estimators.FluxPoints.copy", false]], "copy() (gammapy.estimators.fluxpointsestimator method)": [[129, "gammapy.estimators.FluxPointsEstimator.copy", false]], "copy() (gammapy.estimators.fluxprofileestimator method)": [[130, "gammapy.estimators.FluxProfileEstimator.copy", false]], "copy() (gammapy.estimators.imageprofileestimator method)": [[132, "gammapy.estimators.ImageProfileEstimator.copy", false]], "copy() (gammapy.estimators.lightcurveestimator method)": [[133, "gammapy.estimators.LightCurveEstimator.copy", false]], "copy() (gammapy.estimators.parameterestimator method)": [[134, "gammapy.estimators.ParameterEstimator.copy", false]], "copy() (gammapy.estimators.sensitivityestimator method)": [[136, "gammapy.estimators.SensitivityEstimator.copy", false]], "copy() (gammapy.estimators.tsmapestimator method)": [[137, "gammapy.estimators.TSMapEstimator.copy", false]], "copy() (gammapy.irf.edispkernelmap method)": [[155, "gammapy.irf.EDispKernelMap.copy", false]], "copy() (gammapy.irf.edispmap method)": [[156, "gammapy.irf.EDispMap.copy", false]], "copy() (gammapy.irf.irfmap method)": [[162, "gammapy.irf.IRFMap.copy", false]], "copy() (gammapy.irf.psfmap method)": [[167, "gammapy.irf.PSFMap.copy", false]], "copy() (gammapy.irf.recopsfmap method)": [[170, "gammapy.irf.RecoPSFMap.copy", false]], "copy() (gammapy.maps.geom method)": [[195, "gammapy.maps.Geom.copy", false]], "copy() (gammapy.maps.hpxgeom method)": [[196, "gammapy.maps.HpxGeom.copy", false]], "copy() (gammapy.maps.hpxmap method)": [[197, "gammapy.maps.HpxMap.copy", false]], "copy() (gammapy.maps.hpxndmap method)": [[198, "gammapy.maps.HpxNDMap.copy", false]], "copy() (gammapy.maps.labelmapaxis method)": [[199, "gammapy.maps.LabelMapAxis.copy", false]], "copy() (gammapy.maps.map method)": [[200, "gammapy.maps.Map.copy", false]], "copy() (gammapy.maps.mapaxes method)": [[201, "gammapy.maps.MapAxes.copy", false]], "copy() (gammapy.maps.mapaxis method)": [[202, "gammapy.maps.MapAxis.copy", false]], "copy() (gammapy.maps.mapcoord method)": [[203, "gammapy.maps.MapCoord.copy", false]], "copy() (gammapy.maps.regiongeom method)": [[205, "gammapy.maps.RegionGeom.copy", false]], "copy() (gammapy.maps.regionndmap method)": [[206, "gammapy.maps.RegionNDMap.copy", false]], "copy() (gammapy.maps.timemapaxis method)": [[207, "gammapy.maps.TimeMapAxis.copy", false]], "copy() (gammapy.maps.wcsgeom method)": [[208, "gammapy.maps.WcsGeom.copy", false]], "copy() (gammapy.maps.wcsmap method)": [[209, "gammapy.maps.WcsMap.copy", false]], "copy() (gammapy.maps.wcsndmap method)": [[210, "gammapy.maps.WcsNDMap.copy", false]], "copy() (gammapy.modeling.models.brokenpowerlawspectralmodel method)": [[224, "gammapy.modeling.models.BrokenPowerLawSpectralModel.copy", false]], "copy() (gammapy.modeling.models.compoundspectralmodel method)": [[225, "gammapy.modeling.models.CompoundSpectralModel.copy", false]], "copy() (gammapy.modeling.models.constantfluxspatialmodel method)": [[226, "gammapy.modeling.models.ConstantFluxSpatialModel.copy", false]], "copy() (gammapy.modeling.models.constantspatialmodel method)": [[227, "gammapy.modeling.models.ConstantSpatialModel.copy", false]], "copy() (gammapy.modeling.models.constantspectralmodel method)": [[228, "gammapy.modeling.models.ConstantSpectralModel.copy", false]], "copy() (gammapy.modeling.models.constanttemporalmodel method)": [[229, "gammapy.modeling.models.ConstantTemporalModel.copy", false]], "copy() (gammapy.modeling.models.datasetmodels method)": [[230, "gammapy.modeling.models.DatasetModels.copy", false]], "copy() (gammapy.modeling.models.diskspatialmodel method)": [[231, "gammapy.modeling.models.DiskSpatialModel.copy", false]], "copy() (gammapy.modeling.models.eblabsorptionnormspectralmodel method)": [[232, "gammapy.modeling.models.EBLAbsorptionNormSpectralModel.copy", false]], "copy() (gammapy.modeling.models.expcutoffpowerlaw3fglspectralmodel method)": [[234, "gammapy.modeling.models.ExpCutoffPowerLaw3FGLSpectralModel.copy", false]], "copy() (gammapy.modeling.models.expcutoffpowerlawnormspectralmodel method)": [[235, "gammapy.modeling.models.ExpCutoffPowerLawNormSpectralModel.copy", false]], "copy() (gammapy.modeling.models.expcutoffpowerlawspectralmodel method)": [[236, "gammapy.modeling.models.ExpCutoffPowerLawSpectralModel.copy", false]], "copy() (gammapy.modeling.models.expdecaytemporalmodel method)": [[237, "gammapy.modeling.models.ExpDecayTemporalModel.copy", false]], "copy() (gammapy.modeling.models.fovbackgroundmodel method)": [[238, "gammapy.modeling.models.FoVBackgroundModel.copy", false]], "copy() (gammapy.modeling.models.gaussianprior method)": [[239, "gammapy.modeling.models.GaussianPrior.copy", false]], "copy() (gammapy.modeling.models.gaussianspatialmodel method)": [[240, "gammapy.modeling.models.GaussianSpatialModel.copy", false]], "copy() (gammapy.modeling.models.gaussianspectralmodel method)": [[241, "gammapy.modeling.models.GaussianSpectralModel.copy", false]], "copy() (gammapy.modeling.models.gaussiantemporalmodel method)": [[242, "gammapy.modeling.models.GaussianTemporalModel.copy", false]], "copy() (gammapy.modeling.models.generalizedgaussianspatialmodel method)": [[243, "gammapy.modeling.models.GeneralizedGaussianSpatialModel.copy", false]], "copy() (gammapy.modeling.models.generalizedgaussiantemporalmodel method)": [[244, "gammapy.modeling.models.GeneralizedGaussianTemporalModel.copy", false]], "copy() (gammapy.modeling.models.lightcurvetemplatetemporalmodel method)": [[245, "gammapy.modeling.models.LightCurveTemplateTemporalModel.copy", false]], "copy() (gammapy.modeling.models.lineartemporalmodel method)": [[246, "gammapy.modeling.models.LinearTemporalModel.copy", false]], "copy() (gammapy.modeling.models.logparabolanormspectralmodel method)": [[247, "gammapy.modeling.models.LogParabolaNormSpectralModel.copy", false]], "copy() (gammapy.modeling.models.logparabolaspectralmodel method)": [[248, "gammapy.modeling.models.LogParabolaSpectralModel.copy", false]], "copy() (gammapy.modeling.models.loguniformprior method)": [[249, "gammapy.modeling.models.LogUniformPrior.copy", false]], "copy() (gammapy.modeling.models.meyercrabspectralmodel method)": [[251, "gammapy.modeling.models.MeyerCrabSpectralModel.copy", false]], "copy() (gammapy.modeling.models.modelbase method)": [[253, "gammapy.modeling.models.ModelBase.copy", false]], "copy() (gammapy.modeling.models.models method)": [[254, "gammapy.modeling.models.Models.copy", false]], "copy() (gammapy.modeling.models.naimaspectralmodel method)": [[255, "gammapy.modeling.models.NaimaSpectralModel.copy", false]], "copy() (gammapy.modeling.models.piecewisenormspatialmodel method)": [[256, "gammapy.modeling.models.PiecewiseNormSpatialModel.copy", false]], "copy() (gammapy.modeling.models.piecewisenormspectralmodel method)": [[257, "gammapy.modeling.models.PiecewiseNormSpectralModel.copy", false]], "copy() (gammapy.modeling.models.pointspatialmodel method)": [[258, "gammapy.modeling.models.PointSpatialModel.copy", false]], "copy() (gammapy.modeling.models.powerlaw2spectralmodel method)": [[259, "gammapy.modeling.models.PowerLaw2SpectralModel.copy", false]], "copy() (gammapy.modeling.models.powerlawnormspectralmodel method)": [[260, "gammapy.modeling.models.PowerLawNormSpectralModel.copy", false]], "copy() (gammapy.modeling.models.powerlawspectralmodel method)": [[261, "gammapy.modeling.models.PowerLawSpectralModel.copy", false]], "copy() (gammapy.modeling.models.powerlawtemporalmodel method)": [[262, "gammapy.modeling.models.PowerLawTemporalModel.copy", false]], "copy() (gammapy.modeling.models.prior method)": [[263, "gammapy.modeling.models.Prior.copy", false]], "copy() (gammapy.modeling.models.scalespectralmodel method)": [[266, "gammapy.modeling.models.ScaleSpectralModel.copy", false]], "copy() (gammapy.modeling.models.shell2spatialmodel method)": [[267, "gammapy.modeling.models.Shell2SpatialModel.copy", false]], "copy() (gammapy.modeling.models.shellspatialmodel method)": [[268, "gammapy.modeling.models.ShellSpatialModel.copy", false]], "copy() (gammapy.modeling.models.sinetemporalmodel method)": [[269, "gammapy.modeling.models.SineTemporalModel.copy", false]], "copy() (gammapy.modeling.models.skymodel method)": [[270, "gammapy.modeling.models.SkyModel.copy", false]], "copy() (gammapy.modeling.models.smoothbrokenpowerlawspectralmodel method)": [[271, "gammapy.modeling.models.SmoothBrokenPowerLawSpectralModel.copy", false]], "copy() (gammapy.modeling.models.spatialmodel method)": [[272, "gammapy.modeling.models.SpatialModel.copy", false]], "copy() (gammapy.modeling.models.spectralmodel method)": [[273, "gammapy.modeling.models.SpectralModel.copy", false]], "copy() (gammapy.modeling.models.superexpcutoffpowerlaw3fglspectralmodel method)": [[274, "gammapy.modeling.models.SuperExpCutoffPowerLaw3FGLSpectralModel.copy", false]], "copy() (gammapy.modeling.models.superexpcutoffpowerlaw4fgldr3spectralmodel method)": [[275, "gammapy.modeling.models.SuperExpCutoffPowerLaw4FGLDR3SpectralModel.copy", false]], "copy() (gammapy.modeling.models.superexpcutoffpowerlaw4fglspectralmodel method)": [[276, "gammapy.modeling.models.SuperExpCutoffPowerLaw4FGLSpectralModel.copy", false]], "copy() (gammapy.modeling.models.templatendspatialmodel method)": [[278, "gammapy.modeling.models.TemplateNDSpatialModel.copy", false]], "copy() (gammapy.modeling.models.templatendspectralmodel method)": [[279, "gammapy.modeling.models.TemplateNDSpectralModel.copy", false]], "copy() (gammapy.modeling.models.templatenpredmodel method)": [[280, "gammapy.modeling.models.TemplateNPredModel.copy", false]], "copy() (gammapy.modeling.models.templatephasecurvetemporalmodel method)": [[281, "gammapy.modeling.models.TemplatePhaseCurveTemporalModel.copy", false]], "copy() (gammapy.modeling.models.templatespatialmodel method)": [[282, "gammapy.modeling.models.TemplateSpatialModel.copy", false]], "copy() (gammapy.modeling.models.templatespectralmodel method)": [[283, "gammapy.modeling.models.TemplateSpectralModel.copy", false]], "copy() (gammapy.modeling.models.temporalmodel method)": [[284, "gammapy.modeling.models.TemporalModel.copy", false]], "copy() (gammapy.modeling.models.uniformprior method)": [[285, "gammapy.modeling.models.UniformPrior.copy", false]], "copy() (gammapy.modeling.parameter method)": [[218, "gammapy.modeling.Parameter.copy", false]], "copy() (gammapy.modeling.parameters method)": [[219, "gammapy.modeling.Parameters.copy", false]], "copy() (gammapy.modeling.priorparameter method)": [[220, "gammapy.modeling.PriorParameter.copy", false]], "copy() (gammapy.modeling.priorparameters method)": [[221, "gammapy.modeling.PriorParameters.copy", false]], "copy() (gammapy.utils.coordinates.fovaltazframe method)": [[320, "gammapy.utils.coordinates.FoVAltAzFrame.copy", false]], "copy() (gammapy.utils.coordinates.fovicrsframe method)": [[321, "gammapy.utils.coordinates.FoVICRSFrame.copy", false]], "copy_obs() (gammapy.data.datastore method)": [[82, "gammapy.data.DataStore.copy_obs", false]], "correlation (gammapy.modeling.covariance attribute)": [[213, "gammapy.modeling.Covariance.correlation", false]], "correlation_radius (gammapy.estimators.excessmapestimator attribute)": [[125, "gammapy.estimators.ExcessMapEstimator.correlation_radius", false]], "count() (gammapy.data.observations method)": [[93, "gammapy.data.Observations.count", false]], "count() (gammapy.datasets.datasets method)": [[101, "gammapy.datasets.Datasets.count", false]], "count() (gammapy.maps.mapaxes method)": [[201, "gammapy.maps.MapAxes.count", false]], "count() (gammapy.modeling.models.datasetmodels method)": [[230, "gammapy.modeling.models.DatasetModels.count", false]], "count() (gammapy.modeling.models.models method)": [[254, "gammapy.modeling.models.Models.count", false]], "count() (gammapy.modeling.parameters method)": [[219, "gammapy.modeling.Parameters.count", false]], "count() (gammapy.modeling.priorparameters method)": [[221, "gammapy.modeling.PriorParameters.count", false]], "counts (gammapy.datasets.mapdataset attribute)": [[104, "gammapy.datasets.MapDataset.counts", false]], "counts (gammapy.datasets.mapdatasetonoff attribute)": [[107, "gammapy.datasets.MapDatasetOnOff.counts", false]], "counts (gammapy.datasets.spectrumdataset attribute)": [[111, "gammapy.datasets.SpectrumDataset.counts", false]], "counts (gammapy.datasets.spectrumdatasetonoff attribute)": [[112, "gammapy.datasets.SpectrumDatasetOnOff.counts", false]], "counts (gammapy.estimators.fluxmaps attribute)": [[126, "gammapy.estimators.FluxMaps.counts", false]], "counts (gammapy.estimators.fluxpoints attribute)": [[128, "gammapy.estimators.FluxPoints.counts", false]], "cov_matrix (gammapy.astro.population.casebattacharya1998 attribute)": [[28, "gammapy.astro.population.CaseBattacharya1998.cov_matrix", false]], "cov_matrix (gammapy.astro.population.exponential attribute)": [[29, "gammapy.astro.population.Exponential.cov_matrix", false]], "cov_matrix (gammapy.astro.population.faucherkaspi2006 attribute)": [[30, "gammapy.astro.population.FaucherKaspi2006.cov_matrix", false]], "cov_matrix (gammapy.astro.population.faucherkaspi2006velocitybimodal attribute)": [[31, "gammapy.astro.population.FaucherKaspi2006VelocityBimodal.cov_matrix", false]], "cov_matrix (gammapy.astro.population.faucherkaspi2006velocitymaxwellian attribute)": [[32, "gammapy.astro.population.FaucherKaspi2006VelocityMaxwellian.cov_matrix", false]], "cov_matrix (gammapy.astro.population.lorimer2006 attribute)": [[35, "gammapy.astro.population.Lorimer2006.cov_matrix", false]], "cov_matrix (gammapy.astro.population.paczynski1990 attribute)": [[36, "gammapy.astro.population.Paczynski1990.cov_matrix", false]], "cov_matrix (gammapy.astro.population.paczynski1990velocity attribute)": [[37, "gammapy.astro.population.Paczynski1990Velocity.cov_matrix", false]], "cov_matrix (gammapy.astro.population.yusifovkucuk2004 attribute)": [[39, "gammapy.astro.population.YusifovKucuk2004.cov_matrix", false]], "cov_matrix (gammapy.astro.population.yusifovkucuk2004b attribute)": [[40, "gammapy.astro.population.YusifovKucuk2004B.cov_matrix", false]], "covariance (class in gammapy.modeling)": [[213, "gammapy.modeling.Covariance", false]], "covariance (gammapy.astro.darkmatter.darkmatterannihilationspectralmodel attribute)": [[19, "gammapy.astro.darkmatter.DarkMatterAnnihilationSpectralModel.covariance", false]], "covariance (gammapy.astro.darkmatter.darkmatterdecayspectralmodel attribute)": [[20, "gammapy.astro.darkmatter.DarkMatterDecaySpectralModel.covariance", false]], "covariance (gammapy.astro.darkmatter.primaryflux attribute)": [[26, "gammapy.astro.darkmatter.PrimaryFlux.covariance", false]], "covariance (gammapy.modeling.models.brokenpowerlawspectralmodel attribute)": [[224, "gammapy.modeling.models.BrokenPowerLawSpectralModel.covariance", false]], "covariance (gammapy.modeling.models.compoundspectralmodel attribute)": [[225, "gammapy.modeling.models.CompoundSpectralModel.covariance", false]], "covariance (gammapy.modeling.models.constantfluxspatialmodel attribute)": [[226, "gammapy.modeling.models.ConstantFluxSpatialModel.covariance", false]], "covariance (gammapy.modeling.models.constantspatialmodel attribute)": [[227, "gammapy.modeling.models.ConstantSpatialModel.covariance", false]], "covariance (gammapy.modeling.models.constantspectralmodel attribute)": [[228, "gammapy.modeling.models.ConstantSpectralModel.covariance", false]], "covariance (gammapy.modeling.models.constanttemporalmodel attribute)": [[229, "gammapy.modeling.models.ConstantTemporalModel.covariance", false]], "covariance (gammapy.modeling.models.datasetmodels attribute)": [[230, "gammapy.modeling.models.DatasetModels.covariance", false]], "covariance (gammapy.modeling.models.diskspatialmodel attribute)": [[231, "gammapy.modeling.models.DiskSpatialModel.covariance", false]], "covariance (gammapy.modeling.models.eblabsorptionnormspectralmodel attribute)": [[232, "gammapy.modeling.models.EBLAbsorptionNormSpectralModel.covariance", false]], "covariance (gammapy.modeling.models.expcutoffpowerlaw3fglspectralmodel attribute)": [[234, "gammapy.modeling.models.ExpCutoffPowerLaw3FGLSpectralModel.covariance", false]], "covariance (gammapy.modeling.models.expcutoffpowerlawnormspectralmodel attribute)": [[235, "gammapy.modeling.models.ExpCutoffPowerLawNormSpectralModel.covariance", false]], "covariance (gammapy.modeling.models.expcutoffpowerlawspectralmodel attribute)": [[236, "gammapy.modeling.models.ExpCutoffPowerLawSpectralModel.covariance", false]], "covariance (gammapy.modeling.models.expdecaytemporalmodel attribute)": [[237, "gammapy.modeling.models.ExpDecayTemporalModel.covariance", false]], "covariance (gammapy.modeling.models.fovbackgroundmodel attribute)": [[238, "gammapy.modeling.models.FoVBackgroundModel.covariance", false]], "covariance (gammapy.modeling.models.gaussianprior attribute)": [[239, "gammapy.modeling.models.GaussianPrior.covariance", false]], "covariance (gammapy.modeling.models.gaussianspatialmodel attribute)": [[240, "gammapy.modeling.models.GaussianSpatialModel.covariance", false]], "covariance (gammapy.modeling.models.gaussianspectralmodel attribute)": [[241, "gammapy.modeling.models.GaussianSpectralModel.covariance", false]], "covariance (gammapy.modeling.models.gaussiantemporalmodel attribute)": [[242, "gammapy.modeling.models.GaussianTemporalModel.covariance", false]], "covariance (gammapy.modeling.models.generalizedgaussianspatialmodel attribute)": [[243, "gammapy.modeling.models.GeneralizedGaussianSpatialModel.covariance", false]], "covariance (gammapy.modeling.models.generalizedgaussiantemporalmodel attribute)": [[244, "gammapy.modeling.models.GeneralizedGaussianTemporalModel.covariance", false]], "covariance (gammapy.modeling.models.lightcurvetemplatetemporalmodel attribute)": [[245, "gammapy.modeling.models.LightCurveTemplateTemporalModel.covariance", false]], "covariance (gammapy.modeling.models.lineartemporalmodel attribute)": [[246, "gammapy.modeling.models.LinearTemporalModel.covariance", false]], "covariance (gammapy.modeling.models.logparabolanormspectralmodel attribute)": [[247, "gammapy.modeling.models.LogParabolaNormSpectralModel.covariance", false]], "covariance (gammapy.modeling.models.logparabolaspectralmodel attribute)": [[248, "gammapy.modeling.models.LogParabolaSpectralModel.covariance", false]], "covariance (gammapy.modeling.models.loguniformprior attribute)": [[249, "gammapy.modeling.models.LogUniformPrior.covariance", false]], "covariance (gammapy.modeling.models.meyercrabspectralmodel attribute)": [[251, "gammapy.modeling.models.MeyerCrabSpectralModel.covariance", false]], "covariance (gammapy.modeling.models.modelbase attribute)": [[253, "gammapy.modeling.models.ModelBase.covariance", false]], "covariance (gammapy.modeling.models.models attribute)": [[254, "gammapy.modeling.models.Models.covariance", false]], "covariance (gammapy.modeling.models.naimaspectralmodel attribute)": [[255, "gammapy.modeling.models.NaimaSpectralModel.covariance", false]], "covariance (gammapy.modeling.models.piecewisenormspatialmodel attribute)": [[256, "gammapy.modeling.models.PiecewiseNormSpatialModel.covariance", false]], "covariance (gammapy.modeling.models.piecewisenormspectralmodel attribute)": [[257, "gammapy.modeling.models.PiecewiseNormSpectralModel.covariance", false]], "covariance (gammapy.modeling.models.pointspatialmodel attribute)": [[258, "gammapy.modeling.models.PointSpatialModel.covariance", false]], "covariance (gammapy.modeling.models.powerlaw2spectralmodel attribute)": [[259, "gammapy.modeling.models.PowerLaw2SpectralModel.covariance", false]], "covariance (gammapy.modeling.models.powerlawnormspectralmodel attribute)": [[260, "gammapy.modeling.models.PowerLawNormSpectralModel.covariance", false]], "covariance (gammapy.modeling.models.powerlawspectralmodel attribute)": [[261, "gammapy.modeling.models.PowerLawSpectralModel.covariance", false]], "covariance (gammapy.modeling.models.powerlawtemporalmodel attribute)": [[262, "gammapy.modeling.models.PowerLawTemporalModel.covariance", false]], "covariance (gammapy.modeling.models.prior attribute)": [[263, "gammapy.modeling.models.Prior.covariance", false]], "covariance (gammapy.modeling.models.scalespectralmodel attribute)": [[266, "gammapy.modeling.models.ScaleSpectralModel.covariance", false]], "covariance (gammapy.modeling.models.shell2spatialmodel attribute)": [[267, "gammapy.modeling.models.Shell2SpatialModel.covariance", false]], "covariance (gammapy.modeling.models.shellspatialmodel attribute)": [[268, "gammapy.modeling.models.ShellSpatialModel.covariance", false]], "covariance (gammapy.modeling.models.sinetemporalmodel attribute)": [[269, "gammapy.modeling.models.SineTemporalModel.covariance", false]], "covariance (gammapy.modeling.models.skymodel attribute)": [[270, "gammapy.modeling.models.SkyModel.covariance", false]], "covariance (gammapy.modeling.models.smoothbrokenpowerlawspectralmodel attribute)": [[271, "gammapy.modeling.models.SmoothBrokenPowerLawSpectralModel.covariance", false]], "covariance (gammapy.modeling.models.spatialmodel attribute)": [[272, "gammapy.modeling.models.SpatialModel.covariance", false]], "covariance (gammapy.modeling.models.spectralmodel attribute)": [[273, "gammapy.modeling.models.SpectralModel.covariance", false]], "covariance (gammapy.modeling.models.superexpcutoffpowerlaw3fglspectralmodel attribute)": [[274, "gammapy.modeling.models.SuperExpCutoffPowerLaw3FGLSpectralModel.covariance", false]], "covariance (gammapy.modeling.models.superexpcutoffpowerlaw4fgldr3spectralmodel attribute)": [[275, "gammapy.modeling.models.SuperExpCutoffPowerLaw4FGLDR3SpectralModel.covariance", false]], "covariance (gammapy.modeling.models.superexpcutoffpowerlaw4fglspectralmodel attribute)": [[276, "gammapy.modeling.models.SuperExpCutoffPowerLaw4FGLSpectralModel.covariance", false]], "covariance (gammapy.modeling.models.templatendspatialmodel attribute)": [[278, "gammapy.modeling.models.TemplateNDSpatialModel.covariance", false]], "covariance (gammapy.modeling.models.templatendspectralmodel attribute)": [[279, "gammapy.modeling.models.TemplateNDSpectralModel.covariance", false]], "covariance (gammapy.modeling.models.templatenpredmodel attribute)": [[280, "gammapy.modeling.models.TemplateNPredModel.covariance", false]], "covariance (gammapy.modeling.models.templatephasecurvetemporalmodel attribute)": [[281, "gammapy.modeling.models.TemplatePhaseCurveTemporalModel.covariance", false]], "covariance (gammapy.modeling.models.templatespatialmodel attribute)": [[282, "gammapy.modeling.models.TemplateSpatialModel.covariance", false]], "covariance (gammapy.modeling.models.templatespectralmodel attribute)": [[283, "gammapy.modeling.models.TemplateSpectralModel.covariance", false]], "covariance (gammapy.modeling.models.temporalmodel attribute)": [[284, "gammapy.modeling.models.TemporalModel.covariance", false]], "covariance (gammapy.modeling.models.uniformprior attribute)": [[285, "gammapy.modeling.models.UniformPrior.covariance", false]], "covariance() (gammapy.modeling.fit method)": [[215, "gammapy.modeling.Fit.covariance", false]], "covariance_result (gammapy.modeling.fitresult attribute)": [[216, "gammapy.modeling.FitResult.covariance_result", false]], "covarianceresult (class in gammapy.modeling)": [[214, "gammapy.modeling.CovarianceResult", false]], "create() (gammapy.data.gti class method)": [[86, "gammapy.data.GTI.create", false]], "create() (gammapy.data.observation class method)": [[89, "gammapy.data.Observation.create", false]], "create() (gammapy.datasets.mapdataset class method)": [[104, "gammapy.datasets.MapDataset.create", false]], "create() (gammapy.datasets.mapdatasetonoff class method)": [[107, "gammapy.datasets.MapDatasetOnOff.create", false]], "create() (gammapy.datasets.spectrumdataset class method)": [[111, "gammapy.datasets.SpectrumDataset.create", false]], "create() (gammapy.datasets.spectrumdatasetonoff class method)": [[112, "gammapy.datasets.SpectrumDatasetOnOff.create", false]], "create() (gammapy.maps.hpxgeom class method)": [[196, "gammapy.maps.HpxGeom.create", false]], "create() (gammapy.maps.hpxmap class method)": [[197, "gammapy.maps.HpxMap.create", false]], "create() (gammapy.maps.hpxndmap class method)": [[198, "gammapy.maps.HpxNDMap.create", false]], "create() (gammapy.maps.map static method)": [[200, "gammapy.maps.Map.create", false]], "create() (gammapy.maps.mapcoord class method)": [[203, "gammapy.maps.MapCoord.create", false]], "create() (gammapy.maps.regiongeom class method)": [[205, "gammapy.maps.RegionGeom.create", false]], "create() (gammapy.maps.regionndmap class method)": [[206, "gammapy.maps.RegionNDMap.create", false]], "create() (gammapy.maps.wcsgeom class method)": [[208, "gammapy.maps.WcsGeom.create", false]], "create() (gammapy.maps.wcsmap class method)": [[209, "gammapy.maps.WcsMap.create", false]], "create() (gammapy.maps.wcsndmap class method)": [[210, "gammapy.maps.WcsNDMap.create", false]], "create() (gammapy.modeling.models.model static method)": [[252, "gammapy.modeling.models.Model.create", false]], "create() (gammapy.modeling.models.skymodel class method)": [[270, "gammapy.modeling.models.SkyModel.create", false]], "create_cosmic_ray_spectral_model() (in module gammapy.modeling.models)": [[286, "gammapy.modeling.models.create_cosmic_ray_spectral_model", false]], "create_crab_spectral_model() (in module gammapy.modeling.models)": [[287, "gammapy.modeling.models.create_crab_spectral_model", false]], "create_dataset() (gammapy.datasets.fermipydatasetsreader static method)": [[102, "gammapy.datasets.FermipyDatasetsReader.create_dataset", false]], "create_empty_map_dataset_from_irfs() (in module gammapy.datasets)": [[114, "gammapy.datasets.create_empty_map_dataset_from_irfs", false]], "create_fermi_isotropic_diffuse_model() (in module gammapy.modeling.models)": [[288, "gammapy.modeling.models.create_fermi_isotropic_diffuse_model", false]], "create_map_dataset_from_dl4() (in module gammapy.datasets.utils)": [[119, "gammapy.datasets.utils.create_map_dataset_from_dl4", false]], "create_map_dataset_from_observation() (in module gammapy.datasets)": [[115, "gammapy.datasets.create_map_dataset_from_observation", false]], "create_map_dataset_geoms() (in module gammapy.datasets)": [[116, "gammapy.datasets.create_map_dataset_geoms", false]], "create_mask() (gammapy.maps.geom method)": [[195, "gammapy.maps.Geom.create_mask", false]], "create_mask() (gammapy.maps.hpxgeom method)": [[196, "gammapy.maps.HpxGeom.create_mask", false]], "create_mask() (gammapy.maps.regiongeom method)": [[205, "gammapy.maps.RegionGeom.create_mask", false]], "create_mask() (gammapy.maps.wcsgeom method)": [[208, "gammapy.maps.WcsGeom.create_mask", false]], "crop() (gammapy.maps.geom method)": [[195, "gammapy.maps.Geom.crop", false]], "crop() (gammapy.maps.hpxgeom method)": [[196, "gammapy.maps.HpxGeom.crop", false]], "crop() (gammapy.maps.hpxmap method)": [[197, "gammapy.maps.HpxMap.crop", false]], "crop() (gammapy.maps.hpxndmap method)": [[198, "gammapy.maps.HpxNDMap.crop", false]], "crop() (gammapy.maps.map method)": [[200, "gammapy.maps.Map.crop", false]], "crop() (gammapy.maps.regiongeom method)": [[205, "gammapy.maps.RegionGeom.crop", false]], "crop() (gammapy.maps.regionndmap method)": [[206, "gammapy.maps.RegionNDMap.crop", false]], "crop() (gammapy.maps.wcsgeom method)": [[208, "gammapy.maps.WcsGeom.crop", false]], "crop() (gammapy.maps.wcsmap method)": [[209, "gammapy.maps.WcsMap.crop", false]], "crop() (gammapy.maps.wcsndmap method)": [[210, "gammapy.maps.WcsNDMap.crop", false]], "cstat() (in module gammapy.stats)": [[306, "gammapy.stats.cstat", false]], "cumsum() (gammapy.irf.background2d method)": [[151, "gammapy.irf.Background2D.cumsum", false]], "cumsum() (gammapy.irf.background3d method)": [[152, "gammapy.irf.Background3D.cumsum", false]], "cumsum() (gammapy.irf.backgroundirf method)": [[153, "gammapy.irf.BackgroundIRF.cumsum", false]], "cumsum() (gammapy.irf.edispkernel method)": [[154, "gammapy.irf.EDispKernel.cumsum", false]], "cumsum() (gammapy.irf.effectiveareatable2d method)": [[157, "gammapy.irf.EffectiveAreaTable2D.cumsum", false]], "cumsum() (gammapy.irf.energydependentmultigausspsf method)": [[158, "gammapy.irf.EnergyDependentMultiGaussPSF.cumsum", false]], "cumsum() (gammapy.irf.energydispersion2d method)": [[159, "gammapy.irf.EnergyDispersion2D.cumsum", false]], "cumsum() (gammapy.irf.irf method)": [[161, "gammapy.irf.IRF.cumsum", false]], "cumsum() (gammapy.irf.parametricpsf method)": [[168, "gammapy.irf.ParametricPSF.cumsum", false]], "cumsum() (gammapy.irf.psf3d method)": [[164, "gammapy.irf.PSF3D.cumsum", false]], "cumsum() (gammapy.irf.psfking method)": [[166, "gammapy.irf.PSFKing.cumsum", false]], "cumsum() (gammapy.irf.radmax2d method)": [[169, "gammapy.irf.RadMax2D.cumsum", false]], "cumsum() (gammapy.maps.hpxmap method)": [[197, "gammapy.maps.HpxMap.cumsum", false]], "cumsum() (gammapy.maps.hpxndmap method)": [[198, "gammapy.maps.HpxNDMap.cumsum", false]], "cumsum() (gammapy.maps.map method)": [[200, "gammapy.maps.Map.cumsum", false]], "cumsum() (gammapy.maps.regionndmap method)": [[206, "gammapy.maps.RegionNDMap.cumsum", false]], "cumsum() (gammapy.maps.wcsmap method)": [[209, "gammapy.maps.WcsMap.cumsum", false]], "cumsum() (gammapy.maps.wcsndmap method)": [[210, "gammapy.maps.WcsNDMap.cumsum", false]], "cutout() (gammapy.datasets.mapdataset method)": [[104, "gammapy.datasets.MapDataset.cutout", false]], "cutout() (gammapy.datasets.mapdatasetonoff method)": [[107, "gammapy.datasets.MapDatasetOnOff.cutout", false]], "cutout() (gammapy.datasets.spectrumdataset method)": [[111, "gammapy.datasets.SpectrumDataset.cutout", false]], "cutout() (gammapy.datasets.spectrumdatasetonoff method)": [[112, "gammapy.datasets.SpectrumDatasetOnOff.cutout", false]], "cutout() (gammapy.irf.edispkernelmap method)": [[155, "gammapy.irf.EDispKernelMap.cutout", false]], "cutout() (gammapy.irf.edispmap method)": [[156, "gammapy.irf.EDispMap.cutout", false]], "cutout() (gammapy.irf.irfmap method)": [[162, "gammapy.irf.IRFMap.cutout", false]], "cutout() (gammapy.irf.psfmap method)": [[167, "gammapy.irf.PSFMap.cutout", false]], "cutout() (gammapy.irf.recopsfmap method)": [[170, "gammapy.irf.RecoPSFMap.cutout", false]], "cutout() (gammapy.maps.hpxgeom method)": [[196, "gammapy.maps.HpxGeom.cutout", false]], "cutout() (gammapy.maps.hpxndmap method)": [[198, "gammapy.maps.HpxNDMap.cutout", false]], "cutout() (gammapy.maps.regionndmap method)": [[206, "gammapy.maps.RegionNDMap.cutout", false]], "cutout() (gammapy.maps.wcsgeom method)": [[208, "gammapy.maps.WcsGeom.cutout", false]], "cutout() (gammapy.maps.wcsndmap method)": [[210, "gammapy.maps.WcsNDMap.cutout", false]], "cutout() (gammapy.modeling.models.templatenpredmodel method)": [[280, "gammapy.modeling.models.TemplateNPredModel.cutout", false]], "cutout_and_mask_region() (gammapy.maps.wcsndmap method)": [[210, "gammapy.maps.WcsNDMap.cutout_and_mask_region", false]], "cutout_slices() (gammapy.maps.wcsgeom method)": [[208, "gammapy.maps.WcsGeom.cutout_slices", false]], "cylindrical (gammapy.utils.coordinates.fovaltazframe attribute)": [[320, "gammapy.utils.coordinates.FoVAltAzFrame.cylindrical", false]], "cylindrical (gammapy.utils.coordinates.fovicrsframe attribute)": [[321, "gammapy.utils.coordinates.FoVICRSFrame.cylindrical", false]], "d_sun_to_galactic_center (in module gammapy.utils.coordinates)": [[319, "gammapy.utils.coordinates.D_SUN_TO_GALACTIC_CENTER", false]], "darkmatterannihilationspectralmodel (class in gammapy.astro.darkmatter)": [[19, "gammapy.astro.darkmatter.DarkMatterAnnihilationSpectralModel", false]], "darkmatterdecayspectralmodel (class in gammapy.astro.darkmatter)": [[20, "gammapy.astro.darkmatter.DarkMatterDecaySpectralModel", false]], "data (gammapy.irf.background2d attribute)": [[151, "gammapy.irf.Background2D.data", false]], "data (gammapy.irf.background3d attribute)": [[152, "gammapy.irf.Background3D.data", false]], "data (gammapy.irf.backgroundirf attribute)": [[153, "gammapy.irf.BackgroundIRF.data", false]], "data (gammapy.irf.edispkernel attribute)": [[154, "gammapy.irf.EDispKernel.data", false]], "data (gammapy.irf.effectiveareatable2d attribute)": [[157, "gammapy.irf.EffectiveAreaTable2D.data", false]], "data (gammapy.irf.energydependentmultigausspsf attribute)": [[158, "gammapy.irf.EnergyDependentMultiGaussPSF.data", false]], "data (gammapy.irf.energydispersion2d attribute)": [[159, "gammapy.irf.EnergyDispersion2D.data", false]], "data (gammapy.irf.irf attribute)": [[161, "gammapy.irf.IRF.data", false]], "data (gammapy.irf.parametricpsf attribute)": [[168, "gammapy.irf.ParametricPSF.data", false]], "data (gammapy.irf.psf3d attribute)": [[164, "gammapy.irf.PSF3D.data", false]], "data (gammapy.irf.psfkernel attribute)": [[165, "gammapy.irf.PSFKernel.data", false]], "data (gammapy.irf.psfking attribute)": [[166, "gammapy.irf.PSFKing.data", false]], "data (gammapy.irf.radmax2d attribute)": [[169, "gammapy.irf.RadMax2D.data", false]], "data (gammapy.maps.hpxmap attribute)": [[197, "gammapy.maps.HpxMap.data", false]], "data (gammapy.maps.hpxndmap attribute)": [[198, "gammapy.maps.HpxNDMap.data", false]], "data (gammapy.maps.map attribute)": [[200, "gammapy.maps.Map.data", false]], "data (gammapy.maps.regionndmap attribute)": [[206, "gammapy.maps.RegionNDMap.data", false]], "data (gammapy.maps.wcsmap attribute)": [[209, "gammapy.maps.WcsMap.data", false]], "data (gammapy.maps.wcsndmap attribute)": [[210, "gammapy.maps.WcsNDMap.data", false]], "data (gammapy.modeling.covariance attribute)": [[213, "gammapy.modeling.Covariance.data", false]], "data (gammapy.utils.coordinates.fovaltazframe attribute)": [[320, "gammapy.utils.coordinates.FoVAltAzFrame.data", false]], "data (gammapy.utils.coordinates.fovicrsframe attribute)": [[321, "gammapy.utils.coordinates.FoVICRSFrame.data", false]], "data_nbytes() (gammapy.maps.geom method)": [[195, "gammapy.maps.Geom.data_nbytes", false]], "data_nbytes() (gammapy.maps.hpxgeom method)": [[196, "gammapy.maps.HpxGeom.data_nbytes", false]], "data_nbytes() (gammapy.maps.regiongeom method)": [[205, "gammapy.maps.RegionGeom.data_nbytes", false]], "data_nbytes() (gammapy.maps.wcsgeom method)": [[208, "gammapy.maps.WcsGeom.data_nbytes", false]], "data_shape (gammapy.datasets.mapdataset attribute)": [[104, "gammapy.datasets.MapDataset.data_shape", false]], "data_shape (gammapy.datasets.mapdatasetonoff attribute)": [[107, "gammapy.datasets.MapDatasetOnOff.data_shape", false]], "data_shape (gammapy.datasets.spectrumdataset attribute)": [[111, "gammapy.datasets.SpectrumDataset.data_shape", false]], "data_shape (gammapy.datasets.spectrumdatasetonoff attribute)": [[112, "gammapy.datasets.SpectrumDatasetOnOff.data_shape", false]], "data_shape (gammapy.maps.geom attribute)": [[195, "gammapy.maps.Geom.data_shape", false]], "data_shape (gammapy.maps.hpxgeom attribute)": [[196, "gammapy.maps.HpxGeom.data_shape", false]], "data_shape (gammapy.maps.regiongeom attribute)": [[205, "gammapy.maps.RegionGeom.data_shape", false]], "data_shape (gammapy.maps.wcsgeom attribute)": [[208, "gammapy.maps.WcsGeom.data_shape", false]], "data_shape() (gammapy.datasets.fluxpointsdataset method)": [[103, "gammapy.datasets.FluxPointsDataset.data_shape", false]], "data_shape_axes (gammapy.maps.hpxgeom attribute)": [[196, "gammapy.maps.HpxGeom.data_shape_axes", false]], "data_shape_axes (gammapy.maps.regiongeom attribute)": [[205, "gammapy.maps.RegionGeom.data_shape_axes", false]], "data_shape_axes (gammapy.maps.wcsgeom attribute)": [[208, "gammapy.maps.WcsGeom.data_shape_axes", false]], "data_shape_image (gammapy.maps.wcsgeom attribute)": [[208, "gammapy.maps.WcsGeom.data_shape_image", false]], "dataset": [[608, "term-Dataset", true]], "dataset (class in gammapy.datasets)": [[100, "gammapy.datasets.Dataset", false]], "dataset_registry (in module gammapy.datasets)": [[99, "gammapy.datasets.DATASET_REGISTRY", false]], "datasetmodels (class in gammapy.modeling.models)": [[230, "gammapy.modeling.models.DatasetModels", false]], "datasets (class in gammapy.datasets)": [[101, "gammapy.datasets.Datasets", false]], "datasetsmaker (class in gammapy.makers)": [[173, "gammapy.makers.DatasetsMaker", false]], "datastore (class in gammapy.data)": [[82, "gammapy.data.DataStore", false]], "deepcopy() (gammapy.astro.population.casebattacharya1998 method)": [[28, "gammapy.astro.population.CaseBattacharya1998.deepcopy", false]], "deepcopy() (gammapy.astro.population.exponential method)": [[29, "gammapy.astro.population.Exponential.deepcopy", false]], "deepcopy() (gammapy.astro.population.faucherkaspi2006 method)": [[30, "gammapy.astro.population.FaucherKaspi2006.deepcopy", false]], "deepcopy() (gammapy.astro.population.faucherkaspi2006velocitybimodal method)": [[31, "gammapy.astro.population.FaucherKaspi2006VelocityBimodal.deepcopy", false]], "deepcopy() (gammapy.astro.population.faucherkaspi2006velocitymaxwellian method)": [[32, "gammapy.astro.population.FaucherKaspi2006VelocityMaxwellian.deepcopy", false]], "deepcopy() (gammapy.astro.population.lorimer2006 method)": [[35, "gammapy.astro.population.Lorimer2006.deepcopy", false]], "deepcopy() (gammapy.astro.population.paczynski1990 method)": [[36, "gammapy.astro.population.Paczynski1990.deepcopy", false]], "deepcopy() (gammapy.astro.population.paczynski1990velocity method)": [[37, "gammapy.astro.population.Paczynski1990Velocity.deepcopy", false]], "deepcopy() (gammapy.astro.population.yusifovkucuk2004 method)": [[39, "gammapy.astro.population.YusifovKucuk2004.deepcopy", false]], "deepcopy() (gammapy.astro.population.yusifovkucuk2004b method)": [[40, "gammapy.astro.population.YusifovKucuk2004B.deepcopy", false]], "default_alpha (gammapy.astro.darkmatter.einastoprofile attribute)": [[21, "gammapy.astro.darkmatter.EinastoProfile.DEFAULT_ALPHA", false]], "default_alpha (gammapy.astro.darkmatter.zhaoprofile attribute)": [[27, "gammapy.astro.darkmatter.ZhaoProfile.DEFAULT_ALPHA", false]], "default_beta (gammapy.astro.darkmatter.zhaoprofile attribute)": [[27, "gammapy.astro.darkmatter.ZhaoProfile.DEFAULT_BETA", false]], "default_differential (gammapy.utils.coordinates.fovaltazframe attribute)": [[320, "gammapy.utils.coordinates.FoVAltAzFrame.default_differential", false]], "default_differential (gammapy.utils.coordinates.fovicrsframe attribute)": [[321, "gammapy.utils.coordinates.FoVICRSFrame.default_differential", false]], "default_gamma (gammapy.astro.darkmatter.zhaoprofile attribute)": [[27, "gammapy.astro.darkmatter.ZhaoProfile.DEFAULT_GAMMA", false]], "default_hdu_table (gammapy.data.datastore attribute)": [[82, "gammapy.data.DataStore.DEFAULT_HDU_TABLE", false]], "default_interp_kwargs (gammapy.irf.background2d attribute)": [[151, "gammapy.irf.Background2D.default_interp_kwargs", false]], "default_interp_kwargs (gammapy.irf.background3d attribute)": [[152, "gammapy.irf.Background3D.default_interp_kwargs", false]], "default_interp_kwargs (gammapy.irf.backgroundirf attribute)": [[153, "gammapy.irf.BackgroundIRF.default_interp_kwargs", false]], "default_interp_kwargs (gammapy.irf.edispkernel attribute)": [[154, "gammapy.irf.EDispKernel.default_interp_kwargs", false]], "default_interp_kwargs (gammapy.irf.effectiveareatable2d attribute)": [[157, "gammapy.irf.EffectiveAreaTable2D.default_interp_kwargs", false]], "default_interp_kwargs (gammapy.irf.energydependentmultigausspsf attribute)": [[158, "gammapy.irf.EnergyDependentMultiGaussPSF.default_interp_kwargs", false]], "default_interp_kwargs (gammapy.irf.energydispersion2d attribute)": [[159, "gammapy.irf.EnergyDispersion2D.default_interp_kwargs", false]], "default_interp_kwargs (gammapy.irf.irf attribute)": [[161, "gammapy.irf.IRF.default_interp_kwargs", false]], "default_interp_kwargs (gammapy.irf.parametricpsf attribute)": [[168, "gammapy.irf.ParametricPSF.default_interp_kwargs", false]], "default_interp_kwargs (gammapy.irf.psf3d attribute)": [[164, "gammapy.irf.PSF3D.default_interp_kwargs", false]], "default_interp_kwargs (gammapy.irf.psfking attribute)": [[166, "gammapy.irf.PSFKing.default_interp_kwargs", false]], "default_interp_kwargs (gammapy.irf.radmax2d attribute)": [[169, "gammapy.irf.RadMax2D.default_interp_kwargs", false]], "default_obs_table (gammapy.data.datastore attribute)": [[82, "gammapy.data.DataStore.DEFAULT_OBS_TABLE", false]], "default_parameters (gammapy.astro.darkmatter.darkmatterannihilationspectralmodel attribute)": [[19, "gammapy.astro.darkmatter.DarkMatterAnnihilationSpectralModel.default_parameters", false]], "default_parameters (gammapy.astro.darkmatter.darkmatterdecayspectralmodel attribute)": [[20, "gammapy.astro.darkmatter.DarkMatterDecaySpectralModel.default_parameters", false]], "default_parameters (gammapy.astro.darkmatter.primaryflux attribute)": [[26, "gammapy.astro.darkmatter.PrimaryFlux.default_parameters", false]], "default_parameters (gammapy.modeling.models.brokenpowerlawspectralmodel attribute)": [[224, "gammapy.modeling.models.BrokenPowerLawSpectralModel.default_parameters", false]], "default_parameters (gammapy.modeling.models.compoundspectralmodel attribute)": [[225, "gammapy.modeling.models.CompoundSpectralModel.default_parameters", false]], "default_parameters (gammapy.modeling.models.constantfluxspatialmodel attribute)": [[226, "gammapy.modeling.models.ConstantFluxSpatialModel.default_parameters", false]], "default_parameters (gammapy.modeling.models.constantspatialmodel attribute)": [[227, "gammapy.modeling.models.ConstantSpatialModel.default_parameters", false]], "default_parameters (gammapy.modeling.models.constantspectralmodel attribute)": [[228, "gammapy.modeling.models.ConstantSpectralModel.default_parameters", false]], "default_parameters (gammapy.modeling.models.constanttemporalmodel attribute)": [[229, "gammapy.modeling.models.ConstantTemporalModel.default_parameters", false]], "default_parameters (gammapy.modeling.models.diskspatialmodel attribute)": [[231, "gammapy.modeling.models.DiskSpatialModel.default_parameters", false]], "default_parameters (gammapy.modeling.models.eblabsorptionnormspectralmodel attribute)": [[232, "gammapy.modeling.models.EBLAbsorptionNormSpectralModel.default_parameters", false]], "default_parameters (gammapy.modeling.models.expcutoffpowerlaw3fglspectralmodel attribute)": [[234, "gammapy.modeling.models.ExpCutoffPowerLaw3FGLSpectralModel.default_parameters", false]], "default_parameters (gammapy.modeling.models.expcutoffpowerlawnormspectralmodel attribute)": [[235, "gammapy.modeling.models.ExpCutoffPowerLawNormSpectralModel.default_parameters", false]], "default_parameters (gammapy.modeling.models.expcutoffpowerlawspectralmodel attribute)": [[236, "gammapy.modeling.models.ExpCutoffPowerLawSpectralModel.default_parameters", false]], "default_parameters (gammapy.modeling.models.expdecaytemporalmodel attribute)": [[237, "gammapy.modeling.models.ExpDecayTemporalModel.default_parameters", false]], "default_parameters (gammapy.modeling.models.fovbackgroundmodel attribute)": [[238, "gammapy.modeling.models.FoVBackgroundModel.default_parameters", false]], "default_parameters (gammapy.modeling.models.gaussianprior attribute)": [[239, "gammapy.modeling.models.GaussianPrior.default_parameters", false]], "default_parameters (gammapy.modeling.models.gaussianspatialmodel attribute)": [[240, "gammapy.modeling.models.GaussianSpatialModel.default_parameters", false]], "default_parameters (gammapy.modeling.models.gaussianspectralmodel attribute)": [[241, "gammapy.modeling.models.GaussianSpectralModel.default_parameters", false]], "default_parameters (gammapy.modeling.models.gaussiantemporalmodel attribute)": [[242, "gammapy.modeling.models.GaussianTemporalModel.default_parameters", false]], "default_parameters (gammapy.modeling.models.generalizedgaussianspatialmodel attribute)": [[243, "gammapy.modeling.models.GeneralizedGaussianSpatialModel.default_parameters", false]], "default_parameters (gammapy.modeling.models.generalizedgaussiantemporalmodel attribute)": [[244, "gammapy.modeling.models.GeneralizedGaussianTemporalModel.default_parameters", false]], "default_parameters (gammapy.modeling.models.lightcurvetemplatetemporalmodel attribute)": [[245, "gammapy.modeling.models.LightCurveTemplateTemporalModel.default_parameters", false]], "default_parameters (gammapy.modeling.models.lineartemporalmodel attribute)": [[246, "gammapy.modeling.models.LinearTemporalModel.default_parameters", false]], "default_parameters (gammapy.modeling.models.logparabolanormspectralmodel attribute)": [[247, "gammapy.modeling.models.LogParabolaNormSpectralModel.default_parameters", false]], "default_parameters (gammapy.modeling.models.logparabolaspectralmodel attribute)": [[248, "gammapy.modeling.models.LogParabolaSpectralModel.default_parameters", false]], "default_parameters (gammapy.modeling.models.loguniformprior attribute)": [[249, "gammapy.modeling.models.LogUniformPrior.default_parameters", false]], "default_parameters (gammapy.modeling.models.meyercrabspectralmodel attribute)": [[251, "gammapy.modeling.models.MeyerCrabSpectralModel.default_parameters", false]], "default_parameters (gammapy.modeling.models.naimaspectralmodel attribute)": [[255, "gammapy.modeling.models.NaimaSpectralModel.default_parameters", false]], "default_parameters (gammapy.modeling.models.piecewisenormspatialmodel attribute)": [[256, "gammapy.modeling.models.PiecewiseNormSpatialModel.default_parameters", false]], "default_parameters (gammapy.modeling.models.piecewisenormspectralmodel attribute)": [[257, "gammapy.modeling.models.PiecewiseNormSpectralModel.default_parameters", false]], "default_parameters (gammapy.modeling.models.pointspatialmodel attribute)": [[258, "gammapy.modeling.models.PointSpatialModel.default_parameters", false]], "default_parameters (gammapy.modeling.models.powerlaw2spectralmodel attribute)": [[259, "gammapy.modeling.models.PowerLaw2SpectralModel.default_parameters", false]], "default_parameters (gammapy.modeling.models.powerlawnormspectralmodel attribute)": [[260, "gammapy.modeling.models.PowerLawNormSpectralModel.default_parameters", false]], "default_parameters (gammapy.modeling.models.powerlawspectralmodel attribute)": [[261, "gammapy.modeling.models.PowerLawSpectralModel.default_parameters", false]], "default_parameters (gammapy.modeling.models.powerlawtemporalmodel attribute)": [[262, "gammapy.modeling.models.PowerLawTemporalModel.default_parameters", false]], "default_parameters (gammapy.modeling.models.prior attribute)": [[263, "gammapy.modeling.models.Prior.default_parameters", false]], "default_parameters (gammapy.modeling.models.scalespectralmodel attribute)": [[266, "gammapy.modeling.models.ScaleSpectralModel.default_parameters", false]], "default_parameters (gammapy.modeling.models.shell2spatialmodel attribute)": [[267, "gammapy.modeling.models.Shell2SpatialModel.default_parameters", false]], "default_parameters (gammapy.modeling.models.shellspatialmodel attribute)": [[268, "gammapy.modeling.models.ShellSpatialModel.default_parameters", false]], "default_parameters (gammapy.modeling.models.sinetemporalmodel attribute)": [[269, "gammapy.modeling.models.SineTemporalModel.default_parameters", false]], "default_parameters (gammapy.modeling.models.skymodel attribute)": [[270, "gammapy.modeling.models.SkyModel.default_parameters", false]], "default_parameters (gammapy.modeling.models.smoothbrokenpowerlawspectralmodel attribute)": [[271, "gammapy.modeling.models.SmoothBrokenPowerLawSpectralModel.default_parameters", false]], "default_parameters (gammapy.modeling.models.spatialmodel attribute)": [[272, "gammapy.modeling.models.SpatialModel.default_parameters", false]], "default_parameters (gammapy.modeling.models.spectralmodel attribute)": [[273, "gammapy.modeling.models.SpectralModel.default_parameters", false]], "default_parameters (gammapy.modeling.models.superexpcutoffpowerlaw3fglspectralmodel attribute)": [[274, "gammapy.modeling.models.SuperExpCutoffPowerLaw3FGLSpectralModel.default_parameters", false]], "default_parameters (gammapy.modeling.models.superexpcutoffpowerlaw4fgldr3spectralmodel attribute)": [[275, "gammapy.modeling.models.SuperExpCutoffPowerLaw4FGLDR3SpectralModel.default_parameters", false]], "default_parameters (gammapy.modeling.models.superexpcutoffpowerlaw4fglspectralmodel attribute)": [[276, "gammapy.modeling.models.SuperExpCutoffPowerLaw4FGLSpectralModel.default_parameters", false]], "default_parameters (gammapy.modeling.models.templatendspatialmodel attribute)": [[278, "gammapy.modeling.models.TemplateNDSpatialModel.default_parameters", false]], "default_parameters (gammapy.modeling.models.templatendspectralmodel attribute)": [[279, "gammapy.modeling.models.TemplateNDSpectralModel.default_parameters", false]], "default_parameters (gammapy.modeling.models.templatenpredmodel attribute)": [[280, "gammapy.modeling.models.TemplateNPredModel.default_parameters", false]], "default_parameters (gammapy.modeling.models.templatephasecurvetemporalmodel attribute)": [[281, "gammapy.modeling.models.TemplatePhaseCurveTemporalModel.default_parameters", false]], "default_parameters (gammapy.modeling.models.templatespatialmodel attribute)": [[282, "gammapy.modeling.models.TemplateSpatialModel.default_parameters", false]], "default_parameters (gammapy.modeling.models.templatespectralmodel attribute)": [[283, "gammapy.modeling.models.TemplateSpectralModel.default_parameters", false]], "default_parameters (gammapy.modeling.models.temporalmodel attribute)": [[284, "gammapy.modeling.models.TemporalModel.default_parameters", false]], "default_parameters (gammapy.modeling.models.uniformprior attribute)": [[285, "gammapy.modeling.models.UniformPrior.default_parameters", false]], "default_representation (gammapy.utils.coordinates.fovaltazframe attribute)": [[320, "gammapy.utils.coordinates.FoVAltAzFrame.default_representation", false]], "default_representation (gammapy.utils.coordinates.fovicrsframe attribute)": [[321, "gammapy.utils.coordinates.FoVICRSFrame.default_representation", false]], "default_scale_radius (gammapy.astro.darkmatter.burkertprofile attribute)": [[17, "gammapy.astro.darkmatter.BurkertProfile.DEFAULT_SCALE_RADIUS", false]], "default_scale_radius (gammapy.astro.darkmatter.einastoprofile attribute)": [[21, "gammapy.astro.darkmatter.EinastoProfile.DEFAULT_SCALE_RADIUS", false]], "default_scale_radius (gammapy.astro.darkmatter.isothermalprofile attribute)": [[22, "gammapy.astro.darkmatter.IsothermalProfile.DEFAULT_SCALE_RADIUS", false]], "default_scale_radius (gammapy.astro.darkmatter.mooreprofile attribute)": [[24, "gammapy.astro.darkmatter.MooreProfile.DEFAULT_SCALE_RADIUS", false]], "default_scale_radius (gammapy.astro.darkmatter.nfwprofile attribute)": [[25, "gammapy.astro.darkmatter.NFWProfile.DEFAULT_SCALE_RADIUS", false]], "default_scale_radius (gammapy.astro.darkmatter.zhaoprofile attribute)": [[27, "gammapy.astro.darkmatter.ZhaoProfile.DEFAULT_SCALE_RADIUS", false]], "default_unit (gammapy.irf.background2d attribute)": [[151, "gammapy.irf.Background2D.default_unit", false]], "default_unit (gammapy.irf.background3d attribute)": [[152, "gammapy.irf.Background3D.default_unit", false]], "default_unit (gammapy.irf.effectiveareatable2d attribute)": [[157, "gammapy.irf.EffectiveAreaTable2D.default_unit", false]], "default_unit (gammapy.irf.energydispersion2d attribute)": [[159, "gammapy.irf.EnergyDispersion2D.default_unit", false]], "default_unit (gammapy.irf.psf3d attribute)": [[164, "gammapy.irf.PSF3D.default_unit", false]], "default_unit (gammapy.irf.radmax2d attribute)": [[169, "gammapy.irf.RadMax2D.default_unit", false]], "delete_interval() (gammapy.data.gti method)": [[86, "gammapy.data.GTI.delete_interval", false]], "description (gammapy.catalog.sourcecatalog1lhaaso attribute)": [[57, "gammapy.catalog.SourceCatalog1LHAASO.description", false]], "description (gammapy.catalog.sourcecatalog2fhl attribute)": [[58, "gammapy.catalog.SourceCatalog2FHL.description", false]], "description (gammapy.catalog.sourcecatalog2hwc attribute)": [[59, "gammapy.catalog.SourceCatalog2HWC.description", false]], "description (gammapy.catalog.sourcecatalog2pc attribute)": [[60, "gammapy.catalog.SourceCatalog2PC.description", false]], "description (gammapy.catalog.sourcecatalog3fgl attribute)": [[61, "gammapy.catalog.SourceCatalog3FGL.description", false]], "description (gammapy.catalog.sourcecatalog3fhl attribute)": [[62, "gammapy.catalog.SourceCatalog3FHL.description", false]], "description (gammapy.catalog.sourcecatalog3hwc attribute)": [[63, "gammapy.catalog.SourceCatalog3HWC.description", false]], "description (gammapy.catalog.sourcecatalog3pc attribute)": [[64, "gammapy.catalog.SourceCatalog3PC.description", false]], "description (gammapy.catalog.sourcecatalog4fgl attribute)": [[65, "gammapy.catalog.SourceCatalog4FGL.description", false]], "description (gammapy.catalog.sourcecataloggammacat attribute)": [[66, "gammapy.catalog.SourceCatalogGammaCat.description", false]], "description (gammapy.catalog.sourcecataloghgps attribute)": [[67, "gammapy.catalog.SourceCatalogHGPS.description", false]], "description() (gammapy.catalog.sourcecatalog class method)": [[56, "gammapy.catalog.SourceCatalog.description", false]], "diagonal() (gammapy.utils.coordinates.fovaltazframe method)": [[320, "gammapy.utils.coordinates.FoVAltAzFrame.diagonal", false]], "diagonal() (gammapy.utils.coordinates.fovicrsframe method)": [[321, "gammapy.utils.coordinates.FoVICRSFrame.diagonal", false]], "dict() (gammapy.analysis.analysisconfig method)": [[16, "gammapy.analysis.AnalysisConfig.dict", false]], "dict() (gammapy.data.eventlistmetadata method)": [[84, "gammapy.data.EventListMetaData.dict", false]], "dict() (gammapy.data.gtimetadata method)": [[87, "gammapy.data.GTIMetaData.dict", false]], "dict() (gammapy.data.observationmetadata method)": [[91, "gammapy.data.ObservationMetaData.dict", false]], "dict() (gammapy.datasets.mapdatasetmetadata method)": [[106, "gammapy.datasets.MapDatasetMetaData.dict", false]], "dict() (gammapy.estimators.fluxmetadata method)": [[127, "gammapy.estimators.FluxMetaData.dict", false]], "differential_type (gammapy.utils.coordinates.fovaltazframe attribute)": [[320, "gammapy.utils.coordinates.FoVAltAzFrame.differential_type", false]], "differential_type (gammapy.utils.coordinates.fovicrsframe attribute)": [[321, "gammapy.utils.coordinates.FoVICRSFrame.differential_type", false]], "discrete_correlation() (in module gammapy.stats)": [[307, "gammapy.stats.discrete_correlation", false]], "diskspatialmodel (class in gammapy.modeling.models)": [[231, "gammapy.modeling.models.DiskSpatialModel", false]], "distance_gc (gammapy.astro.darkmatter.burkertprofile attribute)": [[17, "gammapy.astro.darkmatter.BurkertProfile.DISTANCE_GC", false]], "distance_gc (gammapy.astro.darkmatter.dmprofile attribute)": [[18, "gammapy.astro.darkmatter.DMProfile.DISTANCE_GC", false]], "distance_gc (gammapy.astro.darkmatter.einastoprofile attribute)": [[21, "gammapy.astro.darkmatter.EinastoProfile.DISTANCE_GC", false]], "distance_gc (gammapy.astro.darkmatter.isothermalprofile attribute)": [[22, "gammapy.astro.darkmatter.IsothermalProfile.DISTANCE_GC", false]], "distance_gc (gammapy.astro.darkmatter.mooreprofile attribute)": [[24, "gammapy.astro.darkmatter.MooreProfile.DISTANCE_GC", false]], "distance_gc (gammapy.astro.darkmatter.nfwprofile attribute)": [[25, "gammapy.astro.darkmatter.NFWProfile.DISTANCE_GC", false]], "distance_gc (gammapy.astro.darkmatter.zhaoprofile attribute)": [[27, "gammapy.astro.darkmatter.ZhaoProfile.DISTANCE_GC", false]], "dl3": [[608, "term-DL3", true]], "dl4": [[608, "term-DL4", true]], "dl5": [[608, "term-DL5", true]], "dl6": [[608, "term-DL6", true]], "dmprofile (class in gammapy.astro.darkmatter)": [[18, "gammapy.astro.darkmatter.DMProfile", false]], "dnde (gammapy.estimators.fluxmaps attribute)": [[126, "gammapy.estimators.FluxMaps.dnde", false]], "dnde (gammapy.estimators.fluxpoints attribute)": [[128, "gammapy.estimators.FluxPoints.dnde", false]], "dnde_err (gammapy.estimators.fluxmaps attribute)": [[126, "gammapy.estimators.FluxMaps.dnde_err", false]], "dnde_err (gammapy.estimators.fluxpoints attribute)": [[128, "gammapy.estimators.FluxPoints.dnde_err", false]], "dnde_errn (gammapy.estimators.fluxmaps attribute)": [[126, "gammapy.estimators.FluxMaps.dnde_errn", false]], "dnde_errn (gammapy.estimators.fluxpoints attribute)": [[128, "gammapy.estimators.FluxPoints.dnde_errn", false]], "dnde_errp (gammapy.estimators.fluxmaps attribute)": [[126, "gammapy.estimators.FluxMaps.dnde_errp", false]], "dnde_errp (gammapy.estimators.fluxpoints attribute)": [[128, "gammapy.estimators.FluxPoints.dnde_errp", false]], "dnde_ref (gammapy.estimators.fluxmaps attribute)": [[126, "gammapy.estimators.FluxMaps.dnde_ref", false]], "dnde_ref (gammapy.estimators.fluxpoints attribute)": [[128, "gammapy.estimators.FluxPoints.dnde_ref", false]], "dnde_scan_values (gammapy.estimators.fluxmaps attribute)": [[126, "gammapy.estimators.FluxMaps.dnde_scan_values", false]], "dnde_scan_values (gammapy.estimators.fluxpoints attribute)": [[128, "gammapy.estimators.FluxPoints.dnde_scan_values", false]], "dnde_ul (gammapy.estimators.fluxmaps attribute)": [[126, "gammapy.estimators.FluxMaps.dnde_ul", false]], "dnde_ul (gammapy.estimators.fluxpoints attribute)": [[128, "gammapy.estimators.FluxPoints.dnde_ul", false]], "dot() (gammapy.maps.hpxmap method)": [[197, "gammapy.maps.HpxMap.dot", false]], "dot() (gammapy.maps.hpxndmap method)": [[198, "gammapy.maps.HpxNDMap.dot", false]], "dot() (gammapy.maps.map method)": [[200, "gammapy.maps.Map.dot", false]], "dot() (gammapy.maps.regionndmap method)": [[206, "gammapy.maps.RegionNDMap.dot", false]], "dot() (gammapy.maps.wcsmap method)": [[209, "gammapy.maps.WcsMap.dot", false]], "dot() (gammapy.maps.wcsndmap method)": [[210, "gammapy.maps.WcsNDMap.dot", false]], "downsample() (gammapy.datasets.mapdataset method)": [[104, "gammapy.datasets.MapDataset.downsample", false]], "downsample() (gammapy.datasets.mapdatasetonoff method)": [[107, "gammapy.datasets.MapDatasetOnOff.downsample", false]], "downsample() (gammapy.datasets.spectrumdataset method)": [[111, "gammapy.datasets.SpectrumDataset.downsample", false]], "downsample() (gammapy.datasets.spectrumdatasetonoff method)": [[112, "gammapy.datasets.SpectrumDatasetOnOff.downsample", false]], "downsample() (gammapy.irf.edispkernelmap method)": [[155, "gammapy.irf.EDispKernelMap.downsample", false]], "downsample() (gammapy.irf.edispmap method)": [[156, "gammapy.irf.EDispMap.downsample", false]], "downsample() (gammapy.irf.irfmap method)": [[162, "gammapy.irf.IRFMap.downsample", false]], "downsample() (gammapy.irf.psfmap method)": [[167, "gammapy.irf.PSFMap.downsample", false]], "downsample() (gammapy.irf.recopsfmap method)": [[170, "gammapy.irf.RecoPSFMap.downsample", false]], "downsample() (gammapy.maps.geom method)": [[195, "gammapy.maps.Geom.downsample", false]], "downsample() (gammapy.maps.hpxgeom method)": [[196, "gammapy.maps.HpxGeom.downsample", false]], "downsample() (gammapy.maps.hpxmap method)": [[197, "gammapy.maps.HpxMap.downsample", false]], "downsample() (gammapy.maps.hpxndmap method)": [[198, "gammapy.maps.HpxNDMap.downsample", false]], "downsample() (gammapy.maps.labelmapaxis method)": [[199, "gammapy.maps.LabelMapAxis.downsample", false]], "downsample() (gammapy.maps.map method)": [[200, "gammapy.maps.Map.downsample", false]], "downsample() (gammapy.maps.mapaxes method)": [[201, "gammapy.maps.MapAxes.downsample", false]], "downsample() (gammapy.maps.mapaxis method)": [[202, "gammapy.maps.MapAxis.downsample", false]], "downsample() (gammapy.maps.regiongeom method)": [[205, "gammapy.maps.RegionGeom.downsample", false]], "downsample() (gammapy.maps.regionndmap method)": [[206, "gammapy.maps.RegionNDMap.downsample", false]], "downsample() (gammapy.maps.timemapaxis method)": [[207, "gammapy.maps.TimeMapAxis.downsample", false]], "downsample() (gammapy.maps.wcsgeom method)": [[208, "gammapy.maps.WcsGeom.downsample", false]], "downsample() (gammapy.maps.wcsmap method)": [[209, "gammapy.maps.WcsMap.downsample", false]], "downsample() (gammapy.maps.wcsndmap method)": [[210, "gammapy.maps.WcsNDMap.downsample", false]], "draw() (in module gammapy.utils.random)": [[344, "gammapy.utils.random.draw", false]], "drift (gammapy.data.pointingmode attribute)": [[96, "gammapy.data.PointingMode.DRIFT", false]], "drop() (gammapy.maps.geom method)": [[195, "gammapy.maps.Geom.drop", false]], "drop() (gammapy.maps.hpxgeom method)": [[196, "gammapy.maps.HpxGeom.drop", false]], "drop() (gammapy.maps.mapaxes method)": [[201, "gammapy.maps.MapAxes.drop", false]], "drop() (gammapy.maps.regiongeom method)": [[205, "gammapy.maps.RegionGeom.drop", false]], "drop() (gammapy.maps.wcsgeom method)": [[208, "gammapy.maps.WcsGeom.drop", false]], "dtype (gammapy.data.hduindextable attribute)": [[88, "gammapy.data.HDUIndexTable.dtype", false]], "dtype (gammapy.data.observationtable attribute)": [[92, "gammapy.data.ObservationTable.dtype", false]], "duration (gammapy.data.pointinginfo attribute)": [[95, "gammapy.data.PointingInfo.duration", false]], "e (gammapy.modeling.models.diskspatialmodel attribute)": [[231, "gammapy.modeling.models.DiskSpatialModel.e", false]], "e (gammapy.modeling.models.gaussianspatialmodel attribute)": [[240, "gammapy.modeling.models.GaussianSpatialModel.e", false]], "e (gammapy.modeling.models.generalizedgaussianspatialmodel attribute)": [[243, "gammapy.modeling.models.GeneralizedGaussianSpatialModel.e", false]], "e2dnde (gammapy.estimators.fluxmaps attribute)": [[126, "gammapy.estimators.FluxMaps.e2dnde", false]], "e2dnde (gammapy.estimators.fluxpoints attribute)": [[128, "gammapy.estimators.FluxPoints.e2dnde", false]], "e2dnde_err (gammapy.estimators.fluxmaps attribute)": [[126, "gammapy.estimators.FluxMaps.e2dnde_err", false]], "e2dnde_err (gammapy.estimators.fluxpoints attribute)": [[128, "gammapy.estimators.FluxPoints.e2dnde_err", false]], "e2dnde_errn (gammapy.estimators.fluxmaps attribute)": [[126, "gammapy.estimators.FluxMaps.e2dnde_errn", false]], "e2dnde_errn (gammapy.estimators.fluxpoints attribute)": [[128, "gammapy.estimators.FluxPoints.e2dnde_errn", false]], "e2dnde_errp (gammapy.estimators.fluxmaps attribute)": [[126, "gammapy.estimators.FluxMaps.e2dnde_errp", false]], "e2dnde_errp (gammapy.estimators.fluxpoints attribute)": [[128, "gammapy.estimators.FluxPoints.e2dnde_errp", false]], "e2dnde_ref (gammapy.estimators.fluxmaps attribute)": [[126, "gammapy.estimators.FluxMaps.e2dnde_ref", false]], "e2dnde_ref (gammapy.estimators.fluxpoints attribute)": [[128, "gammapy.estimators.FluxPoints.e2dnde_ref", false]], "e2dnde_ul (gammapy.estimators.fluxmaps attribute)": [[126, "gammapy.estimators.FluxMaps.e2dnde_ul", false]], "e2dnde_ul (gammapy.estimators.fluxpoints attribute)": [[128, "gammapy.estimators.FluxPoints.e2dnde_ul", false]], "e_peak (gammapy.modeling.models.expcutoffpowerlawspectralmodel attribute)": [[236, "gammapy.modeling.models.ExpCutoffPowerLawSpectralModel.e_peak", false]], "e_peak (gammapy.modeling.models.logparabolaspectralmodel attribute)": [[248, "gammapy.modeling.models.LogParabolaSpectralModel.e_peak", false]], "e_peak (gammapy.modeling.models.superexpcutoffpowerlaw4fgldr3spectralmodel attribute)": [[275, "gammapy.modeling.models.SuperExpCutoffPowerLaw4FGLDR3SpectralModel.e_peak", false]], "earth_location_from_dict() (in module gammapy.utils.fits)": [[331, "gammapy.utils.fits.earth_location_from_dict", false]], "ebl_data_builtin (in module gammapy.modeling.models)": [[233, "gammapy.modeling.models.EBL_DATA_BUILTIN", false]], "eblabsorptionnormspectralmodel (class in gammapy.modeling.models)": [[232, "gammapy.modeling.models.EBLAbsorptionNormSpectralModel", false]], "ebreak (gammapy.modeling.models.brokenpowerlawspectralmodel attribute)": [[224, "gammapy.modeling.models.BrokenPowerLawSpectralModel.ebreak", false]], "ebreak (gammapy.modeling.models.smoothbrokenpowerlawspectralmodel attribute)": [[271, "gammapy.modeling.models.SmoothBrokenPowerLawSpectralModel.ebreak", false]], "ecut (gammapy.modeling.models.expcutoffpowerlaw3fglspectralmodel attribute)": [[234, "gammapy.modeling.models.ExpCutoffPowerLaw3FGLSpectralModel.ecut", false]], "ecut (gammapy.modeling.models.superexpcutoffpowerlaw3fglspectralmodel attribute)": [[274, "gammapy.modeling.models.SuperExpCutoffPowerLaw3FGLSpectralModel.ecut", false]], "edge_width (gammapy.modeling.models.diskspatialmodel attribute)": [[231, "gammapy.modeling.models.DiskSpatialModel.edge_width", false]], "edges (gammapy.maps.labelmapaxis attribute)": [[199, "gammapy.maps.LabelMapAxis.edges", false]], "edges (gammapy.maps.mapaxis attribute)": [[202, "gammapy.maps.MapAxis.edges", false]], "edges (gammapy.maps.timemapaxis attribute)": [[207, "gammapy.maps.TimeMapAxis.edges", false]], "edges_max (gammapy.maps.labelmapaxis attribute)": [[199, "gammapy.maps.LabelMapAxis.edges_max", false]], "edges_max (gammapy.maps.mapaxis attribute)": [[202, "gammapy.maps.MapAxis.edges_max", false]], "edges_max (gammapy.maps.timemapaxis attribute)": [[207, "gammapy.maps.TimeMapAxis.edges_max", false]], "edges_min (gammapy.maps.labelmapaxis attribute)": [[199, "gammapy.maps.LabelMapAxis.edges_min", false]], "edges_min (gammapy.maps.mapaxis attribute)": [[202, "gammapy.maps.MapAxis.edges_min", false]], "edges_min (gammapy.maps.timemapaxis attribute)": [[207, "gammapy.maps.TimeMapAxis.edges_min", false]], "edisp": [[608, "term-EDisp", true]], "edisp (gammapy.data.observation attribute)": [[89, "gammapy.data.Observation.edisp", false]], "edisp (gammapy.datasets.mapdataset attribute)": [[104, "gammapy.datasets.MapDataset.edisp", false]], "edisp (gammapy.datasets.mapdatasetonoff attribute)": [[107, "gammapy.datasets.MapDatasetOnOff.edisp", false]], "edisp (gammapy.datasets.spectrumdataset attribute)": [[111, "gammapy.datasets.SpectrumDataset.edisp", false]], "edisp (gammapy.datasets.spectrumdatasetonoff attribute)": [[112, "gammapy.datasets.SpectrumDatasetOnOff.edisp", false]], "edisp_map (gammapy.irf.edispkernelmap attribute)": [[155, "gammapy.irf.EDispKernelMap.edisp_map", false]], "edisp_map (gammapy.irf.edispmap attribute)": [[156, "gammapy.irf.EDispMap.edisp_map", false]], "edispkernel (class in gammapy.irf)": [[154, "gammapy.irf.EDispKernel", false]], "edispkernelmap (class in gammapy.irf)": [[155, "gammapy.irf.EDispKernelMap", false]], "edispmap (class in gammapy.irf)": [[156, "gammapy.irf.EDispMap", false]], "effectiveareatable2d (class in gammapy.irf)": [[157, "gammapy.irf.EffectiveAreaTable2D", false]], "eflux (gammapy.estimators.fluxmaps attribute)": [[126, "gammapy.estimators.FluxMaps.eflux", false]], "eflux (gammapy.estimators.fluxpoints attribute)": [[128, "gammapy.estimators.FluxPoints.eflux", false]], "eflux_err (gammapy.estimators.fluxmaps attribute)": [[126, "gammapy.estimators.FluxMaps.eflux_err", false]], "eflux_err (gammapy.estimators.fluxpoints attribute)": [[128, "gammapy.estimators.FluxPoints.eflux_err", false]], "eflux_errn (gammapy.estimators.fluxmaps attribute)": [[126, "gammapy.estimators.FluxMaps.eflux_errn", false]], "eflux_errn (gammapy.estimators.fluxpoints attribute)": [[128, "gammapy.estimators.FluxPoints.eflux_errn", false]], "eflux_errp (gammapy.estimators.fluxmaps attribute)": [[126, "gammapy.estimators.FluxMaps.eflux_errp", false]], "eflux_errp (gammapy.estimators.fluxpoints attribute)": [[128, "gammapy.estimators.FluxPoints.eflux_errp", false]], "eflux_ref (gammapy.estimators.fluxmaps attribute)": [[126, "gammapy.estimators.FluxMaps.eflux_ref", false]], "eflux_ref (gammapy.estimators.fluxpoints attribute)": [[128, "gammapy.estimators.FluxPoints.eflux_ref", false]], "eflux_ul (gammapy.estimators.fluxmaps attribute)": [[126, "gammapy.estimators.FluxMaps.eflux_ul", false]], "eflux_ul (gammapy.estimators.fluxpoints attribute)": [[128, "gammapy.estimators.FluxPoints.eflux_ul", false]], "einastoprofile (class in gammapy.astro.darkmatter)": [[21, "gammapy.astro.darkmatter.EinastoProfile", false]], "emax (gammapy.modeling.models.powerlaw2spectralmodel attribute)": [[259, "gammapy.modeling.models.PowerLaw2SpectralModel.emax", false]], "emin (gammapy.modeling.models.powerlaw2spectralmodel attribute)": [[259, "gammapy.modeling.models.PowerLaw2SpectralModel.emin", false]], "energy (gammapy.data.eventlist attribute)": [[83, "gammapy.data.EventList.energy", false]], "energy (gammapy.modeling.models.piecewisenormspectralmodel attribute)": [[257, "gammapy.modeling.models.PiecewiseNormSpectralModel.energy", false]], "energy_axes_are_aligned (gammapy.datasets.datasets attribute)": [[101, "gammapy.datasets.Datasets.energy_axes_are_aligned", false]], "energy_axis (gammapy.estimators.fluxmaps attribute)": [[126, "gammapy.estimators.FluxMaps.energy_axis", false]], "energy_axis (gammapy.estimators.fluxpoints attribute)": [[128, "gammapy.estimators.FluxPoints.energy_axis", false]], "energy_center (gammapy.modeling.models.templatenpredmodel attribute)": [[280, "gammapy.modeling.models.TemplateNPredModel.energy_center", false]], "energy_flux() (gammapy.astro.darkmatter.darkmatterannihilationspectralmodel method)": [[19, "gammapy.astro.darkmatter.DarkMatterAnnihilationSpectralModel.energy_flux", false]], "energy_flux() (gammapy.astro.darkmatter.darkmatterdecayspectralmodel method)": [[20, "gammapy.astro.darkmatter.DarkMatterDecaySpectralModel.energy_flux", false]], "energy_flux() (gammapy.astro.darkmatter.primaryflux method)": [[26, "gammapy.astro.darkmatter.PrimaryFlux.energy_flux", false]], "energy_flux() (gammapy.modeling.models.brokenpowerlawspectralmodel method)": [[224, "gammapy.modeling.models.BrokenPowerLawSpectralModel.energy_flux", false]], "energy_flux() (gammapy.modeling.models.compoundspectralmodel method)": [[225, "gammapy.modeling.models.CompoundSpectralModel.energy_flux", false]], "energy_flux() (gammapy.modeling.models.constantspectralmodel method)": [[228, "gammapy.modeling.models.ConstantSpectralModel.energy_flux", false]], "energy_flux() (gammapy.modeling.models.eblabsorptionnormspectralmodel method)": [[232, "gammapy.modeling.models.EBLAbsorptionNormSpectralModel.energy_flux", false]], "energy_flux() (gammapy.modeling.models.expcutoffpowerlaw3fglspectralmodel method)": [[234, "gammapy.modeling.models.ExpCutoffPowerLaw3FGLSpectralModel.energy_flux", false]], "energy_flux() (gammapy.modeling.models.expcutoffpowerlawnormspectralmodel method)": [[235, "gammapy.modeling.models.ExpCutoffPowerLawNormSpectralModel.energy_flux", false]], "energy_flux() (gammapy.modeling.models.expcutoffpowerlawspectralmodel method)": [[236, "gammapy.modeling.models.ExpCutoffPowerLawSpectralModel.energy_flux", false]], "energy_flux() (gammapy.modeling.models.gaussianspectralmodel method)": [[241, "gammapy.modeling.models.GaussianSpectralModel.energy_flux", false]], "energy_flux() (gammapy.modeling.models.logparabolanormspectralmodel method)": [[247, "gammapy.modeling.models.LogParabolaNormSpectralModel.energy_flux", false]], "energy_flux() (gammapy.modeling.models.logparabolaspectralmodel method)": [[248, "gammapy.modeling.models.LogParabolaSpectralModel.energy_flux", false]], "energy_flux() (gammapy.modeling.models.meyercrabspectralmodel method)": [[251, "gammapy.modeling.models.MeyerCrabSpectralModel.energy_flux", false]], "energy_flux() (gammapy.modeling.models.naimaspectralmodel method)": [[255, "gammapy.modeling.models.NaimaSpectralModel.energy_flux", false]], "energy_flux() (gammapy.modeling.models.piecewisenormspectralmodel method)": [[257, "gammapy.modeling.models.PiecewiseNormSpectralModel.energy_flux", false]], "energy_flux() (gammapy.modeling.models.powerlaw2spectralmodel method)": [[259, "gammapy.modeling.models.PowerLaw2SpectralModel.energy_flux", false]], "energy_flux() (gammapy.modeling.models.powerlawnormspectralmodel method)": [[260, "gammapy.modeling.models.PowerLawNormSpectralModel.energy_flux", false]], "energy_flux() (gammapy.modeling.models.powerlawspectralmodel method)": [[261, "gammapy.modeling.models.PowerLawSpectralModel.energy_flux", false]], "energy_flux() (gammapy.modeling.models.scalespectralmodel method)": [[266, "gammapy.modeling.models.ScaleSpectralModel.energy_flux", false]], "energy_flux() (gammapy.modeling.models.smoothbrokenpowerlawspectralmodel method)": [[271, "gammapy.modeling.models.SmoothBrokenPowerLawSpectralModel.energy_flux", false]], "energy_flux() (gammapy.modeling.models.spectralmodel method)": [[273, "gammapy.modeling.models.SpectralModel.energy_flux", false]], "energy_flux() (gammapy.modeling.models.superexpcutoffpowerlaw3fglspectralmodel method)": [[274, "gammapy.modeling.models.SuperExpCutoffPowerLaw3FGLSpectralModel.energy_flux", false]], "energy_flux() (gammapy.modeling.models.superexpcutoffpowerlaw4fgldr3spectralmodel method)": [[275, "gammapy.modeling.models.SuperExpCutoffPowerLaw4FGLDR3SpectralModel.energy_flux", false]], "energy_flux() (gammapy.modeling.models.superexpcutoffpowerlaw4fglspectralmodel method)": [[276, "gammapy.modeling.models.SuperExpCutoffPowerLaw4FGLSpectralModel.energy_flux", false]], "energy_flux() (gammapy.modeling.models.templatendspectralmodel method)": [[279, "gammapy.modeling.models.TemplateNDSpectralModel.energy_flux", false]], "energy_flux() (gammapy.modeling.models.templatespectralmodel method)": [[283, "gammapy.modeling.models.TemplateSpectralModel.energy_flux", false]], "energy_flux_error() (gammapy.astro.darkmatter.darkmatterannihilationspectralmodel method)": [[19, "gammapy.astro.darkmatter.DarkMatterAnnihilationSpectralModel.energy_flux_error", false]], "energy_flux_error() (gammapy.astro.darkmatter.darkmatterdecayspectralmodel method)": [[20, "gammapy.astro.darkmatter.DarkMatterDecaySpectralModel.energy_flux_error", false]], "energy_flux_error() (gammapy.astro.darkmatter.primaryflux method)": [[26, "gammapy.astro.darkmatter.PrimaryFlux.energy_flux_error", false]], "energy_flux_error() (gammapy.modeling.models.brokenpowerlawspectralmodel method)": [[224, "gammapy.modeling.models.BrokenPowerLawSpectralModel.energy_flux_error", false]], "energy_flux_error() (gammapy.modeling.models.compoundspectralmodel method)": [[225, "gammapy.modeling.models.CompoundSpectralModel.energy_flux_error", false]], "energy_flux_error() (gammapy.modeling.models.constantspectralmodel method)": [[228, "gammapy.modeling.models.ConstantSpectralModel.energy_flux_error", false]], "energy_flux_error() (gammapy.modeling.models.eblabsorptionnormspectralmodel method)": [[232, "gammapy.modeling.models.EBLAbsorptionNormSpectralModel.energy_flux_error", false]], "energy_flux_error() (gammapy.modeling.models.expcutoffpowerlaw3fglspectralmodel method)": [[234, "gammapy.modeling.models.ExpCutoffPowerLaw3FGLSpectralModel.energy_flux_error", false]], "energy_flux_error() (gammapy.modeling.models.expcutoffpowerlawnormspectralmodel method)": [[235, "gammapy.modeling.models.ExpCutoffPowerLawNormSpectralModel.energy_flux_error", false]], "energy_flux_error() (gammapy.modeling.models.expcutoffpowerlawspectralmodel method)": [[236, "gammapy.modeling.models.ExpCutoffPowerLawSpectralModel.energy_flux_error", false]], "energy_flux_error() (gammapy.modeling.models.gaussianspectralmodel method)": [[241, "gammapy.modeling.models.GaussianSpectralModel.energy_flux_error", false]], "energy_flux_error() (gammapy.modeling.models.logparabolanormspectralmodel method)": [[247, "gammapy.modeling.models.LogParabolaNormSpectralModel.energy_flux_error", false]], "energy_flux_error() (gammapy.modeling.models.logparabolaspectralmodel method)": [[248, "gammapy.modeling.models.LogParabolaSpectralModel.energy_flux_error", false]], "energy_flux_error() (gammapy.modeling.models.meyercrabspectralmodel method)": [[251, "gammapy.modeling.models.MeyerCrabSpectralModel.energy_flux_error", false]], "energy_flux_error() (gammapy.modeling.models.naimaspectralmodel method)": [[255, "gammapy.modeling.models.NaimaSpectralModel.energy_flux_error", false]], "energy_flux_error() (gammapy.modeling.models.piecewisenormspectralmodel method)": [[257, "gammapy.modeling.models.PiecewiseNormSpectralModel.energy_flux_error", false]], "energy_flux_error() (gammapy.modeling.models.powerlaw2spectralmodel method)": [[259, "gammapy.modeling.models.PowerLaw2SpectralModel.energy_flux_error", false]], "energy_flux_error() (gammapy.modeling.models.powerlawnormspectralmodel method)": [[260, "gammapy.modeling.models.PowerLawNormSpectralModel.energy_flux_error", false]], "energy_flux_error() (gammapy.modeling.models.powerlawspectralmodel method)": [[261, "gammapy.modeling.models.PowerLawSpectralModel.energy_flux_error", false]], "energy_flux_error() (gammapy.modeling.models.scalespectralmodel method)": [[266, "gammapy.modeling.models.ScaleSpectralModel.energy_flux_error", false]], "energy_flux_error() (gammapy.modeling.models.smoothbrokenpowerlawspectralmodel method)": [[271, "gammapy.modeling.models.SmoothBrokenPowerLawSpectralModel.energy_flux_error", false]], "energy_flux_error() (gammapy.modeling.models.spectralmodel method)": [[273, "gammapy.modeling.models.SpectralModel.energy_flux_error", false]], "energy_flux_error() (gammapy.modeling.models.superexpcutoffpowerlaw3fglspectralmodel method)": [[274, "gammapy.modeling.models.SuperExpCutoffPowerLaw3FGLSpectralModel.energy_flux_error", false]], "energy_flux_error() (gammapy.modeling.models.superexpcutoffpowerlaw4fgldr3spectralmodel method)": [[275, "gammapy.modeling.models.SuperExpCutoffPowerLaw4FGLDR3SpectralModel.energy_flux_error", false]], "energy_flux_error() (gammapy.modeling.models.superexpcutoffpowerlaw4fglspectralmodel method)": [[276, "gammapy.modeling.models.SuperExpCutoffPowerLaw4FGLSpectralModel.energy_flux_error", false]], "energy_flux_error() (gammapy.modeling.models.templatendspectralmodel method)": [[279, "gammapy.modeling.models.TemplateNDSpectralModel.energy_flux_error", false]], "energy_flux_error() (gammapy.modeling.models.templatespectralmodel method)": [[283, "gammapy.modeling.models.TemplateSpectralModel.energy_flux_error", false]], "energy_integrated() (gammapy.astro.source.pulsar method)": [[51, "gammapy.astro.source.Pulsar.energy_integrated", false]], "energy_mask() (gammapy.maps.geom method)": [[195, "gammapy.maps.Geom.energy_mask", false]], "energy_mask() (gammapy.maps.hpxgeom method)": [[196, "gammapy.maps.HpxGeom.energy_mask", false]], "energy_mask() (gammapy.maps.regiongeom method)": [[205, "gammapy.maps.RegionGeom.energy_mask", false]], "energy_mask() (gammapy.maps.wcsgeom method)": [[208, "gammapy.maps.WcsGeom.energy_mask", false]], "energy_max (gammapy.estimators.fluxmaps attribute)": [[126, "gammapy.estimators.FluxMaps.energy_max", false]], "energy_max (gammapy.estimators.fluxpoints attribute)": [[128, "gammapy.estimators.FluxPoints.energy_max", false]], "energy_min (gammapy.estimators.fluxmaps attribute)": [[126, "gammapy.estimators.FluxMaps.energy_min", false]], "energy_min (gammapy.estimators.fluxpoints attribute)": [[128, "gammapy.estimators.FluxPoints.energy_min", false]], "energy_name (gammapy.irf.psfmap attribute)": [[167, "gammapy.irf.PSFMap.energy_name", false]], "energy_name (gammapy.irf.recopsfmap attribute)": [[170, "gammapy.irf.RecoPSFMap.energy_name", false]], "energy_range (gammapy.catalog.sourcecatalogobject2fhl attribute)": [[71, "gammapy.catalog.SourceCatalogObject2FHL.energy_range", false]], "energy_range (gammapy.catalog.sourcecatalogobject3fgl attribute)": [[74, "gammapy.catalog.SourceCatalogObject3FGL.energy_range", false]], "energy_range (gammapy.catalog.sourcecatalogobject3fhl attribute)": [[75, "gammapy.catalog.SourceCatalogObject3FHL.energy_range", false]], "energy_range (gammapy.catalog.sourcecatalogobjecthgps attribute)": [[80, "gammapy.catalog.SourceCatalogObjectHGPS.energy_range", false]], "energy_range (gammapy.datasets.mapdataset attribute)": [[104, "gammapy.datasets.MapDataset.energy_range", false]], "energy_range (gammapy.datasets.mapdatasetonoff attribute)": [[107, "gammapy.datasets.MapDatasetOnOff.energy_range", false]], "energy_range (gammapy.datasets.spectrumdataset attribute)": [[111, "gammapy.datasets.SpectrumDataset.energy_range", false]], "energy_range (gammapy.datasets.spectrumdatasetonoff attribute)": [[112, "gammapy.datasets.SpectrumDatasetOnOff.energy_range", false]], "energy_range_fit (gammapy.datasets.mapdataset attribute)": [[104, "gammapy.datasets.MapDataset.energy_range_fit", false]], "energy_range_fit (gammapy.datasets.mapdatasetonoff attribute)": [[107, "gammapy.datasets.MapDatasetOnOff.energy_range_fit", false]], "energy_range_fit (gammapy.datasets.spectrumdataset attribute)": [[111, "gammapy.datasets.SpectrumDataset.energy_range_fit", false]], "energy_range_fit (gammapy.datasets.spectrumdatasetonoff attribute)": [[112, "gammapy.datasets.SpectrumDatasetOnOff.energy_range_fit", false]], "energy_range_safe (gammapy.datasets.mapdataset attribute)": [[104, "gammapy.datasets.MapDataset.energy_range_safe", false]], "energy_range_safe (gammapy.datasets.mapdatasetonoff attribute)": [[107, "gammapy.datasets.MapDatasetOnOff.energy_range_safe", false]], "energy_range_safe (gammapy.datasets.spectrumdataset attribute)": [[111, "gammapy.datasets.SpectrumDataset.energy_range_safe", false]], "energy_range_safe (gammapy.datasets.spectrumdatasetonoff attribute)": [[112, "gammapy.datasets.SpectrumDatasetOnOff.energy_range_safe", false]], "energy_range_total (gammapy.datasets.mapdataset attribute)": [[104, "gammapy.datasets.MapDataset.energy_range_total", false]], "energy_range_total (gammapy.datasets.mapdatasetonoff attribute)": [[107, "gammapy.datasets.MapDatasetOnOff.energy_range_total", false]], "energy_range_total (gammapy.datasets.spectrumdataset attribute)": [[111, "gammapy.datasets.SpectrumDataset.energy_range_total", false]], "energy_range_total (gammapy.datasets.spectrumdatasetonoff attribute)": [[112, "gammapy.datasets.SpectrumDatasetOnOff.energy_range_total", false]], "energy_ranges (gammapy.datasets.datasets attribute)": [[101, "gammapy.datasets.Datasets.energy_ranges", false]], "energy_ref (gammapy.estimators.fluxmaps attribute)": [[126, "gammapy.estimators.FluxMaps.energy_ref", false]], "energy_ref (gammapy.estimators.fluxpoints attribute)": [[128, "gammapy.estimators.FluxPoints.energy_ref", false]], "energydependentmorphologyestimator (class in gammapy.estimators)": [[123, "gammapy.estimators.EnergyDependentMorphologyEstimator", false]], "energydependentmultigausspsf (class in gammapy.irf)": [[158, "gammapy.irf.EnergyDependentMultiGaussPSF", false]], "energydispersion2d (class in gammapy.irf)": [[159, "gammapy.irf.EnergyDispersion2D", false]], "eqcons (gammapy.astro.population.casebattacharya1998 attribute)": [[28, "gammapy.astro.population.CaseBattacharya1998.eqcons", false]], "eqcons (gammapy.astro.population.exponential attribute)": [[29, "gammapy.astro.population.Exponential.eqcons", false]], "eqcons (gammapy.astro.population.faucherkaspi2006 attribute)": [[30, "gammapy.astro.population.FaucherKaspi2006.eqcons", false]], "eqcons (gammapy.astro.population.faucherkaspi2006velocitybimodal attribute)": [[31, "gammapy.astro.population.FaucherKaspi2006VelocityBimodal.eqcons", false]], "eqcons (gammapy.astro.population.faucherkaspi2006velocitymaxwellian attribute)": [[32, "gammapy.astro.population.FaucherKaspi2006VelocityMaxwellian.eqcons", false]], "eqcons (gammapy.astro.population.lorimer2006 attribute)": [[35, "gammapy.astro.population.Lorimer2006.eqcons", false]], "eqcons (gammapy.astro.population.paczynski1990 attribute)": [[36, "gammapy.astro.population.Paczynski1990.eqcons", false]], "eqcons (gammapy.astro.population.paczynski1990velocity attribute)": [[37, "gammapy.astro.population.Paczynski1990Velocity.eqcons", false]], "eqcons (gammapy.astro.population.yusifovkucuk2004 attribute)": [[39, "gammapy.astro.population.YusifovKucuk2004.eqcons", false]], "eqcons (gammapy.astro.population.yusifovkucuk2004b attribute)": [[40, "gammapy.astro.population.YusifovKucuk2004B.eqcons", false]], "error (gammapy.modeling.parameter attribute)": [[218, "gammapy.modeling.Parameter.error", false]], "error (gammapy.modeling.priorparameter attribute)": [[220, "gammapy.modeling.PriorParameter.error", false]], "error (gammapy.stats.cashcountsstatistic attribute)": [[295, "gammapy.stats.CashCountsStatistic.error", false]], "error (gammapy.stats.wstatcountsstatistic attribute)": [[299, "gammapy.stats.WStatCountsStatistic.error", false]], "error_callback() (gammapy.makers.datasetsmaker method)": [[173, "gammapy.makers.DatasetsMaker.error_callback", false]], "estimate_best_fit() (gammapy.estimators.fluxpointsestimator method)": [[129, "gammapy.estimators.FluxPointsEstimator.estimate_best_fit", false]], "estimate_best_fit() (gammapy.estimators.fluxprofileestimator method)": [[130, "gammapy.estimators.FluxProfileEstimator.estimate_best_fit", false]], "estimate_best_fit() (gammapy.estimators.lightcurveestimator method)": [[133, "gammapy.estimators.LightCurveEstimator.estimate_best_fit", false]], "estimate_best_fit() (gammapy.estimators.parameterestimator method)": [[134, "gammapy.estimators.ParameterEstimator.estimate_best_fit", false]], "estimate_counts() (gammapy.estimators.fluxpointsestimator static method)": [[129, "gammapy.estimators.FluxPointsEstimator.estimate_counts", false]], "estimate_counts() (gammapy.estimators.fluxprofileestimator static method)": [[130, "gammapy.estimators.FluxProfileEstimator.estimate_counts", false]], "estimate_counts() (gammapy.estimators.lightcurveestimator static method)": [[133, "gammapy.estimators.LightCurveEstimator.estimate_counts", false]], "estimate_counts() (gammapy.estimators.parameterestimator static method)": [[134, "gammapy.estimators.ParameterEstimator.estimate_counts", false]], "estimate_energy_dependence() (gammapy.estimators.energydependentmorphologyestimator method)": [[123, "gammapy.estimators.EnergyDependentMorphologyEstimator.estimate_energy_dependence", false]], "estimate_errn_errp() (gammapy.estimators.fluxpointsestimator method)": [[129, "gammapy.estimators.FluxPointsEstimator.estimate_errn_errp", false]], "estimate_errn_errp() (gammapy.estimators.fluxprofileestimator method)": [[130, "gammapy.estimators.FluxProfileEstimator.estimate_errn_errp", false]], "estimate_errn_errp() (gammapy.estimators.lightcurveestimator method)": [[133, "gammapy.estimators.LightCurveEstimator.estimate_errn_errp", false]], "estimate_errn_errp() (gammapy.estimators.parameterestimator method)": [[134, "gammapy.estimators.ParameterEstimator.estimate_errn_errp", false]], "estimate_excess_map() (gammapy.estimators.excessmapestimator method)": [[125, "gammapy.estimators.ExcessMapEstimator.estimate_excess_map", false]], "estimate_exposure_reco_energy() (gammapy.estimators.excessmapestimator method)": [[125, "gammapy.estimators.ExcessMapEstimator.estimate_exposure_reco_energy", false]], "estimate_exposure_reco_energy() (in module gammapy.estimators.utils)": [[144, "gammapy.estimators.utils.estimate_exposure_reco_energy", false]], "estimate_fit_input_maps() (gammapy.estimators.tsmapestimator method)": [[137, "gammapy.estimators.TSMapEstimator.estimate_fit_input_maps", false]], "estimate_flux_default() (gammapy.estimators.tsmapestimator method)": [[137, "gammapy.estimators.TSMapEstimator.estimate_flux_default", false]], "estimate_flux_map() (gammapy.estimators.tsmapestimator method)": [[137, "gammapy.estimators.TSMapEstimator.estimate_flux_map", false]], "estimate_flux_point() (gammapy.estimators.fluxpointsestimator method)": [[129, "gammapy.estimators.FluxPointsEstimator.estimate_flux_point", false]], "estimate_flux_point() (gammapy.estimators.fluxprofileestimator method)": [[130, "gammapy.estimators.FluxProfileEstimator.estimate_flux_point", false]], "estimate_flux_point() (gammapy.estimators.lightcurveestimator method)": [[133, "gammapy.estimators.LightCurveEstimator.estimate_flux_point", false]], "estimate_kernel() (gammapy.estimators.excessmapestimator method)": [[125, "gammapy.estimators.ExcessMapEstimator.estimate_kernel", false]], "estimate_kernel() (gammapy.estimators.tsmapestimator method)": [[137, "gammapy.estimators.TSMapEstimator.estimate_kernel", false]], "estimate_maps() (gammapy.estimators.asmoothmapestimator method)": [[121, "gammapy.estimators.ASmoothMapEstimator.estimate_maps", false]], "estimate_mask_default() (gammapy.estimators.excessmapestimator static method)": [[125, "gammapy.estimators.ExcessMapEstimator.estimate_mask_default", false]], "estimate_mask_default() (gammapy.estimators.tsmapestimator static method)": [[137, "gammapy.estimators.TSMapEstimator.estimate_mask_default", false]], "estimate_min_e2dnde() (gammapy.estimators.sensitivityestimator method)": [[136, "gammapy.estimators.SensitivityEstimator.estimate_min_e2dnde", false]], "estimate_min_excess() (gammapy.estimators.sensitivityestimator method)": [[136, "gammapy.estimators.SensitivityEstimator.estimate_min_excess", false]], "estimate_npred() (gammapy.estimators.fluxpointsestimator static method)": [[129, "gammapy.estimators.FluxPointsEstimator.estimate_npred", false]], "estimate_npred() (gammapy.estimators.fluxprofileestimator static method)": [[130, "gammapy.estimators.FluxProfileEstimator.estimate_npred", false]], "estimate_npred() (gammapy.estimators.lightcurveestimator static method)": [[133, "gammapy.estimators.LightCurveEstimator.estimate_npred", false]], "estimate_npred() (gammapy.estimators.parameterestimator static method)": [[134, "gammapy.estimators.ParameterEstimator.estimate_npred", false]], "estimate_npred_excess() (gammapy.estimators.fluxpointsestimator method)": [[129, "gammapy.estimators.FluxPointsEstimator.estimate_npred_excess", false]], "estimate_npred_excess() (gammapy.estimators.fluxprofileestimator method)": [[130, "gammapy.estimators.FluxProfileEstimator.estimate_npred_excess", false]], "estimate_npred_excess() (gammapy.estimators.lightcurveestimator method)": [[133, "gammapy.estimators.LightCurveEstimator.estimate_npred_excess", false]], "estimate_pad_width() (gammapy.estimators.tsmapestimator method)": [[137, "gammapy.estimators.TSMapEstimator.estimate_pad_width", false]], "estimate_scan() (gammapy.estimators.fluxpointsestimator method)": [[129, "gammapy.estimators.FluxPointsEstimator.estimate_scan", false]], "estimate_scan() (gammapy.estimators.fluxprofileestimator method)": [[130, "gammapy.estimators.FluxProfileEstimator.estimate_scan", false]], "estimate_scan() (gammapy.estimators.lightcurveestimator method)": [[133, "gammapy.estimators.LightCurveEstimator.estimate_scan", false]], "estimate_scan() (gammapy.estimators.parameterestimator method)": [[134, "gammapy.estimators.ParameterEstimator.estimate_scan", false]], "estimate_sensitivity() (gammapy.estimators.fluxpointsestimator method)": [[129, "gammapy.estimators.FluxPointsEstimator.estimate_sensitivity", false]], "estimate_sensitivity() (gammapy.estimators.fluxprofileestimator method)": [[130, "gammapy.estimators.FluxProfileEstimator.estimate_sensitivity", false]], "estimate_sensitivity() (gammapy.estimators.lightcurveestimator method)": [[133, "gammapy.estimators.LightCurveEstimator.estimate_sensitivity", false]], "estimate_sensitivity() (gammapy.estimators.parameterestimator method)": [[134, "gammapy.estimators.ParameterEstimator.estimate_sensitivity", false]], "estimate_time_bin_flux() (gammapy.estimators.lightcurveestimator method)": [[133, "gammapy.estimators.LightCurveEstimator.estimate_time_bin_flux", false]], "estimate_ts() (gammapy.estimators.fluxpointsestimator method)": [[129, "gammapy.estimators.FluxPointsEstimator.estimate_ts", false]], "estimate_ts() (gammapy.estimators.fluxprofileestimator method)": [[130, "gammapy.estimators.FluxProfileEstimator.estimate_ts", false]], "estimate_ts() (gammapy.estimators.lightcurveestimator method)": [[133, "gammapy.estimators.LightCurveEstimator.estimate_ts", false]], "estimate_ts() (gammapy.estimators.parameterestimator method)": [[134, "gammapy.estimators.ParameterEstimator.estimate_ts", false]], "estimate_ul() (gammapy.estimators.fluxpointsestimator method)": [[129, "gammapy.estimators.FluxPointsEstimator.estimate_ul", false]], "estimate_ul() (gammapy.estimators.fluxprofileestimator method)": [[130, "gammapy.estimators.FluxProfileEstimator.estimate_ul", false]], "estimate_ul() (gammapy.estimators.lightcurveestimator method)": [[133, "gammapy.estimators.LightCurveEstimator.estimate_ul", false]], "estimate_ul() (gammapy.estimators.parameterestimator method)": [[134, "gammapy.estimators.ParameterEstimator.estimate_ul", false]], "estimator": [[608, "term-Estimator", true]], "estimator (class in gammapy.estimators)": [[124, "gammapy.estimators.Estimator", false]], "estimator_registry (in module gammapy.estimators)": [[122, "gammapy.estimators.ESTIMATOR_REGISTRY", false]], "eta (gammapy.modeling.models.generalizedgaussianspatialmodel attribute)": [[243, "gammapy.modeling.models.GeneralizedGaussianSpatialModel.eta", false]], "eta (gammapy.modeling.models.generalizedgaussiantemporalmodel attribute)": [[244, "gammapy.modeling.models.GeneralizedGaussianTemporalModel.eta", false]], "eta (gammapy.modeling.models.shell2spatialmodel attribute)": [[267, "gammapy.modeling.models.Shell2SpatialModel.eta", false]], "evaluate() (gammapy.astro.darkmatter.burkertprofile static method)": [[17, "gammapy.astro.darkmatter.BurkertProfile.evaluate", false]], "evaluate() (gammapy.astro.darkmatter.darkmatterannihilationspectralmodel method)": [[19, "gammapy.astro.darkmatter.DarkMatterAnnihilationSpectralModel.evaluate", false]], "evaluate() (gammapy.astro.darkmatter.darkmatterdecayspectralmodel method)": [[20, "gammapy.astro.darkmatter.DarkMatterDecaySpectralModel.evaluate", false]], "evaluate() (gammapy.astro.darkmatter.einastoprofile static method)": [[21, "gammapy.astro.darkmatter.EinastoProfile.evaluate", false]], "evaluate() (gammapy.astro.darkmatter.isothermalprofile static method)": [[22, "gammapy.astro.darkmatter.IsothermalProfile.evaluate", false]], "evaluate() (gammapy.astro.darkmatter.mooreprofile static method)": [[24, "gammapy.astro.darkmatter.MooreProfile.evaluate", false]], "evaluate() (gammapy.astro.darkmatter.nfwprofile static method)": [[25, "gammapy.astro.darkmatter.NFWProfile.evaluate", false]], "evaluate() (gammapy.astro.darkmatter.primaryflux method)": [[26, "gammapy.astro.darkmatter.PrimaryFlux.evaluate", false]], "evaluate() (gammapy.astro.darkmatter.zhaoprofile static method)": [[27, "gammapy.astro.darkmatter.ZhaoProfile.evaluate", false]], "evaluate() (gammapy.astro.population.casebattacharya1998 static method)": [[28, "gammapy.astro.population.CaseBattacharya1998.evaluate", false]], "evaluate() (gammapy.astro.population.exponential static method)": [[29, "gammapy.astro.population.Exponential.evaluate", false]], "evaluate() (gammapy.astro.population.faucherkaspi2006 static method)": [[30, "gammapy.astro.population.FaucherKaspi2006.evaluate", false]], "evaluate() (gammapy.astro.population.faucherkaspi2006velocitybimodal static method)": [[31, "gammapy.astro.population.FaucherKaspi2006VelocityBimodal.evaluate", false]], "evaluate() (gammapy.astro.population.faucherkaspi2006velocitymaxwellian static method)": [[32, "gammapy.astro.population.FaucherKaspi2006VelocityMaxwellian.evaluate", false]], "evaluate() (gammapy.astro.population.lorimer2006 static method)": [[35, "gammapy.astro.population.Lorimer2006.evaluate", false]], "evaluate() (gammapy.astro.population.paczynski1990 static method)": [[36, "gammapy.astro.population.Paczynski1990.evaluate", false]], "evaluate() (gammapy.astro.population.paczynski1990velocity static method)": [[37, "gammapy.astro.population.Paczynski1990Velocity.evaluate", false]], "evaluate() (gammapy.astro.population.yusifovkucuk2004 static method)": [[39, "gammapy.astro.population.YusifovKucuk2004.evaluate", false]], "evaluate() (gammapy.astro.population.yusifovkucuk2004b static method)": [[40, "gammapy.astro.population.YusifovKucuk2004B.evaluate", false]], "evaluate() (gammapy.catalog.sourcecataloglargescalehgps method)": [[68, "gammapy.catalog.SourceCatalogLargeScaleHGPS.evaluate", false]], "evaluate() (gammapy.irf.background2d method)": [[151, "gammapy.irf.Background2D.evaluate", false]], "evaluate() (gammapy.irf.background3d method)": [[152, "gammapy.irf.Background3D.evaluate", false]], "evaluate() (gammapy.irf.backgroundirf method)": [[153, "gammapy.irf.BackgroundIRF.evaluate", false]], "evaluate() (gammapy.irf.edispkernel method)": [[154, "gammapy.irf.EDispKernel.evaluate", false]], "evaluate() (gammapy.irf.effectiveareatable2d method)": [[157, "gammapy.irf.EffectiveAreaTable2D.evaluate", false]], "evaluate() (gammapy.irf.energydependentmultigausspsf method)": [[158, "gammapy.irf.EnergyDependentMultiGaussPSF.evaluate", false]], "evaluate() (gammapy.irf.energydispersion2d method)": [[159, "gammapy.irf.EnergyDispersion2D.evaluate", false]], "evaluate() (gammapy.irf.irf method)": [[161, "gammapy.irf.IRF.evaluate", false]], "evaluate() (gammapy.irf.parametricpsf method)": [[168, "gammapy.irf.ParametricPSF.evaluate", false]], "evaluate() (gammapy.irf.psf3d method)": [[164, "gammapy.irf.PSF3D.evaluate", false]], "evaluate() (gammapy.irf.psfking method)": [[166, "gammapy.irf.PSFKing.evaluate", false]], "evaluate() (gammapy.irf.radmax2d method)": [[169, "gammapy.irf.RadMax2D.evaluate", false]], "evaluate() (gammapy.modeling.models.brokenpowerlawspectralmodel static method)": [[224, "gammapy.modeling.models.BrokenPowerLawSpectralModel.evaluate", false]], "evaluate() (gammapy.modeling.models.compoundspectralmodel method)": [[225, "gammapy.modeling.models.CompoundSpectralModel.evaluate", false]], "evaluate() (gammapy.modeling.models.constantfluxspatialmodel static method)": [[226, "gammapy.modeling.models.ConstantFluxSpatialModel.evaluate", false]], "evaluate() (gammapy.modeling.models.constantspatialmodel static method)": [[227, "gammapy.modeling.models.ConstantSpatialModel.evaluate", false]], "evaluate() (gammapy.modeling.models.constantspectralmodel static method)": [[228, "gammapy.modeling.models.ConstantSpectralModel.evaluate", false]], "evaluate() (gammapy.modeling.models.constanttemporalmodel static method)": [[229, "gammapy.modeling.models.ConstantTemporalModel.evaluate", false]], "evaluate() (gammapy.modeling.models.diskspatialmodel static method)": [[231, "gammapy.modeling.models.DiskSpatialModel.evaluate", false]], "evaluate() (gammapy.modeling.models.eblabsorptionnormspectralmodel method)": [[232, "gammapy.modeling.models.EBLAbsorptionNormSpectralModel.evaluate", false]], "evaluate() (gammapy.modeling.models.expcutoffpowerlaw3fglspectralmodel static method)": [[234, "gammapy.modeling.models.ExpCutoffPowerLaw3FGLSpectralModel.evaluate", false]], "evaluate() (gammapy.modeling.models.expcutoffpowerlawnormspectralmodel static method)": [[235, "gammapy.modeling.models.ExpCutoffPowerLawNormSpectralModel.evaluate", false]], "evaluate() (gammapy.modeling.models.expcutoffpowerlawspectralmodel static method)": [[236, "gammapy.modeling.models.ExpCutoffPowerLawSpectralModel.evaluate", false]], "evaluate() (gammapy.modeling.models.expdecaytemporalmodel static method)": [[237, "gammapy.modeling.models.ExpDecayTemporalModel.evaluate", false]], "evaluate() (gammapy.modeling.models.fovbackgroundmodel method)": [[238, "gammapy.modeling.models.FoVBackgroundModel.evaluate", false]], "evaluate() (gammapy.modeling.models.gaussianprior static method)": [[239, "gammapy.modeling.models.GaussianPrior.evaluate", false]], "evaluate() (gammapy.modeling.models.gaussianspatialmodel static method)": [[240, "gammapy.modeling.models.GaussianSpatialModel.evaluate", false]], "evaluate() (gammapy.modeling.models.gaussianspectralmodel static method)": [[241, "gammapy.modeling.models.GaussianSpectralModel.evaluate", false]], "evaluate() (gammapy.modeling.models.gaussiantemporalmodel static method)": [[242, "gammapy.modeling.models.GaussianTemporalModel.evaluate", false]], "evaluate() (gammapy.modeling.models.generalizedgaussianspatialmodel static method)": [[243, "gammapy.modeling.models.GeneralizedGaussianSpatialModel.evaluate", false]], "evaluate() (gammapy.modeling.models.generalizedgaussiantemporalmodel static method)": [[244, "gammapy.modeling.models.GeneralizedGaussianTemporalModel.evaluate", false]], "evaluate() (gammapy.modeling.models.lightcurvetemplatetemporalmodel method)": [[245, "gammapy.modeling.models.LightCurveTemplateTemporalModel.evaluate", false]], "evaluate() (gammapy.modeling.models.lineartemporalmodel static method)": [[246, "gammapy.modeling.models.LinearTemporalModel.evaluate", false]], "evaluate() (gammapy.modeling.models.logparabolanormspectralmodel static method)": [[247, "gammapy.modeling.models.LogParabolaNormSpectralModel.evaluate", false]], "evaluate() (gammapy.modeling.models.logparabolaspectralmodel static method)": [[248, "gammapy.modeling.models.LogParabolaSpectralModel.evaluate", false]], "evaluate() (gammapy.modeling.models.loguniformprior static method)": [[249, "gammapy.modeling.models.LogUniformPrior.evaluate", false]], "evaluate() (gammapy.modeling.models.meyercrabspectralmodel static method)": [[251, "gammapy.modeling.models.MeyerCrabSpectralModel.evaluate", false]], "evaluate() (gammapy.modeling.models.naimaspectralmodel method)": [[255, "gammapy.modeling.models.NaimaSpectralModel.evaluate", false]], "evaluate() (gammapy.modeling.models.piecewisenormspatialmodel method)": [[256, "gammapy.modeling.models.PiecewiseNormSpatialModel.evaluate", false]], "evaluate() (gammapy.modeling.models.piecewisenormspectralmodel method)": [[257, "gammapy.modeling.models.PiecewiseNormSpectralModel.evaluate", false]], "evaluate() (gammapy.modeling.models.powerlaw2spectralmodel static method)": [[259, "gammapy.modeling.models.PowerLaw2SpectralModel.evaluate", false]], "evaluate() (gammapy.modeling.models.powerlawnormspectralmodel static method)": [[260, "gammapy.modeling.models.PowerLawNormSpectralModel.evaluate", false]], "evaluate() (gammapy.modeling.models.powerlawspectralmodel static method)": [[261, "gammapy.modeling.models.PowerLawSpectralModel.evaluate", false]], "evaluate() (gammapy.modeling.models.powerlawtemporalmodel static method)": [[262, "gammapy.modeling.models.PowerLawTemporalModel.evaluate", false]], "evaluate() (gammapy.modeling.models.scalespectralmodel method)": [[266, "gammapy.modeling.models.ScaleSpectralModel.evaluate", false]], "evaluate() (gammapy.modeling.models.shell2spatialmodel static method)": [[267, "gammapy.modeling.models.Shell2SpatialModel.evaluate", false]], "evaluate() (gammapy.modeling.models.shellspatialmodel static method)": [[268, "gammapy.modeling.models.ShellSpatialModel.evaluate", false]], "evaluate() (gammapy.modeling.models.sinetemporalmodel static method)": [[269, "gammapy.modeling.models.SineTemporalModel.evaluate", false]], "evaluate() (gammapy.modeling.models.skymodel method)": [[270, "gammapy.modeling.models.SkyModel.evaluate", false]], "evaluate() (gammapy.modeling.models.smoothbrokenpowerlawspectralmodel static method)": [[271, "gammapy.modeling.models.SmoothBrokenPowerLawSpectralModel.evaluate", false]], "evaluate() (gammapy.modeling.models.superexpcutoffpowerlaw3fglspectralmodel static method)": [[274, "gammapy.modeling.models.SuperExpCutoffPowerLaw3FGLSpectralModel.evaluate", false]], "evaluate() (gammapy.modeling.models.superexpcutoffpowerlaw4fgldr3spectralmodel static method)": [[275, "gammapy.modeling.models.SuperExpCutoffPowerLaw4FGLDR3SpectralModel.evaluate", false]], "evaluate() (gammapy.modeling.models.superexpcutoffpowerlaw4fglspectralmodel static method)": [[276, "gammapy.modeling.models.SuperExpCutoffPowerLaw4FGLSpectralModel.evaluate", false]], "evaluate() (gammapy.modeling.models.templatendspatialmodel method)": [[278, "gammapy.modeling.models.TemplateNDSpatialModel.evaluate", false]], "evaluate() (gammapy.modeling.models.templatendspectralmodel method)": [[279, "gammapy.modeling.models.TemplateNDSpectralModel.evaluate", false]], "evaluate() (gammapy.modeling.models.templatenpredmodel method)": [[280, "gammapy.modeling.models.TemplateNPredModel.evaluate", false]], "evaluate() (gammapy.modeling.models.templatephasecurvetemporalmodel method)": [[281, "gammapy.modeling.models.TemplatePhaseCurveTemporalModel.evaluate", false]], "evaluate() (gammapy.modeling.models.templatespatialmodel method)": [[282, "gammapy.modeling.models.TemplateSpatialModel.evaluate", false]], "evaluate() (gammapy.modeling.models.templatespectralmodel method)": [[283, "gammapy.modeling.models.TemplateSpectralModel.evaluate", false]], "evaluate() (gammapy.modeling.models.uniformprior static method)": [[285, "gammapy.modeling.models.UniformPrior.evaluate", false]], "evaluate_containment() (gammapy.irf.energydependentmultigausspsf static method)": [[158, "gammapy.irf.EnergyDependentMultiGaussPSF.evaluate_containment", false]], "evaluate_containment() (gammapy.irf.parametricpsf method)": [[168, "gammapy.irf.ParametricPSF.evaluate_containment", false]], "evaluate_containment() (gammapy.irf.psfking static method)": [[166, "gammapy.irf.PSFKing.evaluate_containment", false]], "evaluate_direct() (gammapy.irf.energydependentmultigausspsf static method)": [[158, "gammapy.irf.EnergyDependentMultiGaussPSF.evaluate_direct", false]], "evaluate_direct() (gammapy.irf.parametricpsf method)": [[168, "gammapy.irf.ParametricPSF.evaluate_direct", false]], "evaluate_direct() (gammapy.irf.psfking static method)": [[166, "gammapy.irf.PSFKing.evaluate_direct", false]], "evaluate_energy_flux() (gammapy.modeling.models.powerlawnormspectralmodel static method)": [[260, "gammapy.modeling.models.PowerLawNormSpectralModel.evaluate_energy_flux", false]], "evaluate_energy_flux() (gammapy.modeling.models.powerlawspectralmodel static method)": [[261, "gammapy.modeling.models.PowerLawSpectralModel.evaluate_energy_flux", false]], "evaluate_error() (gammapy.astro.darkmatter.darkmatterannihilationspectralmodel method)": [[19, "gammapy.astro.darkmatter.DarkMatterAnnihilationSpectralModel.evaluate_error", false]], "evaluate_error() (gammapy.astro.darkmatter.darkmatterdecayspectralmodel method)": [[20, "gammapy.astro.darkmatter.DarkMatterDecaySpectralModel.evaluate_error", false]], "evaluate_error() (gammapy.astro.darkmatter.primaryflux method)": [[26, "gammapy.astro.darkmatter.PrimaryFlux.evaluate_error", false]], "evaluate_error() (gammapy.modeling.models.brokenpowerlawspectralmodel method)": [[224, "gammapy.modeling.models.BrokenPowerLawSpectralModel.evaluate_error", false]], "evaluate_error() (gammapy.modeling.models.compoundspectralmodel method)": [[225, "gammapy.modeling.models.CompoundSpectralModel.evaluate_error", false]], "evaluate_error() (gammapy.modeling.models.constantspectralmodel method)": [[228, "gammapy.modeling.models.ConstantSpectralModel.evaluate_error", false]], "evaluate_error() (gammapy.modeling.models.eblabsorptionnormspectralmodel method)": [[232, "gammapy.modeling.models.EBLAbsorptionNormSpectralModel.evaluate_error", false]], "evaluate_error() (gammapy.modeling.models.expcutoffpowerlaw3fglspectralmodel method)": [[234, "gammapy.modeling.models.ExpCutoffPowerLaw3FGLSpectralModel.evaluate_error", false]], "evaluate_error() (gammapy.modeling.models.expcutoffpowerlawnormspectralmodel method)": [[235, "gammapy.modeling.models.ExpCutoffPowerLawNormSpectralModel.evaluate_error", false]], "evaluate_error() (gammapy.modeling.models.expcutoffpowerlawspectralmodel method)": [[236, "gammapy.modeling.models.ExpCutoffPowerLawSpectralModel.evaluate_error", false]], "evaluate_error() (gammapy.modeling.models.gaussianspectralmodel method)": [[241, "gammapy.modeling.models.GaussianSpectralModel.evaluate_error", false]], "evaluate_error() (gammapy.modeling.models.logparabolanormspectralmodel method)": [[247, "gammapy.modeling.models.LogParabolaNormSpectralModel.evaluate_error", false]], "evaluate_error() (gammapy.modeling.models.logparabolaspectralmodel method)": [[248, "gammapy.modeling.models.LogParabolaSpectralModel.evaluate_error", false]], "evaluate_error() (gammapy.modeling.models.meyercrabspectralmodel method)": [[251, "gammapy.modeling.models.MeyerCrabSpectralModel.evaluate_error", false]], "evaluate_error() (gammapy.modeling.models.naimaspectralmodel method)": [[255, "gammapy.modeling.models.NaimaSpectralModel.evaluate_error", false]], "evaluate_error() (gammapy.modeling.models.piecewisenormspectralmodel method)": [[257, "gammapy.modeling.models.PiecewiseNormSpectralModel.evaluate_error", false]], "evaluate_error() (gammapy.modeling.models.powerlaw2spectralmodel method)": [[259, "gammapy.modeling.models.PowerLaw2SpectralModel.evaluate_error", false]], "evaluate_error() (gammapy.modeling.models.powerlawnormspectralmodel method)": [[260, "gammapy.modeling.models.PowerLawNormSpectralModel.evaluate_error", false]], "evaluate_error() (gammapy.modeling.models.powerlawspectralmodel method)": [[261, "gammapy.modeling.models.PowerLawSpectralModel.evaluate_error", false]], "evaluate_error() (gammapy.modeling.models.scalespectralmodel method)": [[266, "gammapy.modeling.models.ScaleSpectralModel.evaluate_error", false]], "evaluate_error() (gammapy.modeling.models.smoothbrokenpowerlawspectralmodel method)": [[271, "gammapy.modeling.models.SmoothBrokenPowerLawSpectralModel.evaluate_error", false]], "evaluate_error() (gammapy.modeling.models.spectralmodel method)": [[273, "gammapy.modeling.models.SpectralModel.evaluate_error", false]], "evaluate_error() (gammapy.modeling.models.superexpcutoffpowerlaw3fglspectralmodel method)": [[274, "gammapy.modeling.models.SuperExpCutoffPowerLaw3FGLSpectralModel.evaluate_error", false]], "evaluate_error() (gammapy.modeling.models.superexpcutoffpowerlaw4fgldr3spectralmodel method)": [[275, "gammapy.modeling.models.SuperExpCutoffPowerLaw4FGLDR3SpectralModel.evaluate_error", false]], "evaluate_error() (gammapy.modeling.models.superexpcutoffpowerlaw4fglspectralmodel method)": [[276, "gammapy.modeling.models.SuperExpCutoffPowerLaw4FGLSpectralModel.evaluate_error", false]], "evaluate_error() (gammapy.modeling.models.templatendspectralmodel method)": [[279, "gammapy.modeling.models.TemplateNDSpectralModel.evaluate_error", false]], "evaluate_error() (gammapy.modeling.models.templatespectralmodel method)": [[283, "gammapy.modeling.models.TemplateSpectralModel.evaluate_error", false]], "evaluate_geom() (gammapy.modeling.models.constantfluxspatialmodel static method)": [[226, "gammapy.modeling.models.ConstantFluxSpatialModel.evaluate_geom", false]], "evaluate_geom() (gammapy.modeling.models.constantspatialmodel method)": [[227, "gammapy.modeling.models.ConstantSpatialModel.evaluate_geom", false]], "evaluate_geom() (gammapy.modeling.models.diskspatialmodel method)": [[231, "gammapy.modeling.models.DiskSpatialModel.evaluate_geom", false]], "evaluate_geom() (gammapy.modeling.models.fovbackgroundmodel method)": [[238, "gammapy.modeling.models.FoVBackgroundModel.evaluate_geom", false]], "evaluate_geom() (gammapy.modeling.models.gaussianspatialmodel method)": [[240, "gammapy.modeling.models.GaussianSpatialModel.evaluate_geom", false]], "evaluate_geom() (gammapy.modeling.models.generalizedgaussianspatialmodel method)": [[243, "gammapy.modeling.models.GeneralizedGaussianSpatialModel.evaluate_geom", false]], "evaluate_geom() (gammapy.modeling.models.piecewisenormspatialmodel method)": [[256, "gammapy.modeling.models.PiecewiseNormSpatialModel.evaluate_geom", false]], "evaluate_geom() (gammapy.modeling.models.pointspatialmodel method)": [[258, "gammapy.modeling.models.PointSpatialModel.evaluate_geom", false]], "evaluate_geom() (gammapy.modeling.models.shell2spatialmodel method)": [[267, "gammapy.modeling.models.Shell2SpatialModel.evaluate_geom", false]], "evaluate_geom() (gammapy.modeling.models.shellspatialmodel method)": [[268, "gammapy.modeling.models.ShellSpatialModel.evaluate_geom", false]], "evaluate_geom() (gammapy.modeling.models.skymodel method)": [[270, "gammapy.modeling.models.SkyModel.evaluate_geom", false]], "evaluate_geom() (gammapy.modeling.models.spatialmodel method)": [[272, "gammapy.modeling.models.SpatialModel.evaluate_geom", false]], "evaluate_geom() (gammapy.modeling.models.templatendspatialmodel method)": [[278, "gammapy.modeling.models.TemplateNDSpatialModel.evaluate_geom", false]], "evaluate_geom() (gammapy.modeling.models.templatespatialmodel method)": [[282, "gammapy.modeling.models.TemplateSpatialModel.evaluate_geom", false]], "evaluate_integral() (gammapy.modeling.models.powerlaw2spectralmodel static method)": [[259, "gammapy.modeling.models.PowerLaw2SpectralModel.evaluate_integral", false]], "evaluate_integral() (gammapy.modeling.models.powerlawnormspectralmodel static method)": [[260, "gammapy.modeling.models.PowerLawNormSpectralModel.evaluate_integral", false]], "evaluate_integral() (gammapy.modeling.models.powerlawspectralmodel static method)": [[261, "gammapy.modeling.models.PowerLawSpectralModel.evaluate_integral", false]], "evaluate_parameters() (gammapy.irf.energydependentmultigausspsf method)": [[158, "gammapy.irf.EnergyDependentMultiGaussPSF.evaluate_parameters", false]], "evaluate_parameters() (gammapy.irf.parametricpsf method)": [[168, "gammapy.irf.ParametricPSF.evaluate_parameters", false]], "evaluate_parameters() (gammapy.irf.psfking method)": [[166, "gammapy.irf.PSFKing.evaluate_parameters", false]], "evaluation_bin_size_min (gammapy.modeling.models.constantfluxspatialmodel attribute)": [[226, "gammapy.modeling.models.ConstantFluxSpatialModel.evaluation_bin_size_min", false]], "evaluation_bin_size_min (gammapy.modeling.models.constantspatialmodel attribute)": [[227, "gammapy.modeling.models.ConstantSpatialModel.evaluation_bin_size_min", false]], "evaluation_bin_size_min (gammapy.modeling.models.diskspatialmodel attribute)": [[231, "gammapy.modeling.models.DiskSpatialModel.evaluation_bin_size_min", false]], "evaluation_bin_size_min (gammapy.modeling.models.gaussianspatialmodel attribute)": [[240, "gammapy.modeling.models.GaussianSpatialModel.evaluation_bin_size_min", false]], "evaluation_bin_size_min (gammapy.modeling.models.generalizedgaussianspatialmodel attribute)": [[243, "gammapy.modeling.models.GeneralizedGaussianSpatialModel.evaluation_bin_size_min", false]], "evaluation_bin_size_min (gammapy.modeling.models.piecewisenormspatialmodel attribute)": [[256, "gammapy.modeling.models.PiecewiseNormSpatialModel.evaluation_bin_size_min", false]], "evaluation_bin_size_min (gammapy.modeling.models.pointspatialmodel attribute)": [[258, "gammapy.modeling.models.PointSpatialModel.evaluation_bin_size_min", false]], "evaluation_bin_size_min (gammapy.modeling.models.shell2spatialmodel attribute)": [[267, "gammapy.modeling.models.Shell2SpatialModel.evaluation_bin_size_min", false]], "evaluation_bin_size_min (gammapy.modeling.models.shellspatialmodel attribute)": [[268, "gammapy.modeling.models.ShellSpatialModel.evaluation_bin_size_min", false]], "evaluation_bin_size_min (gammapy.modeling.models.skymodel attribute)": [[270, "gammapy.modeling.models.SkyModel.evaluation_bin_size_min", false]], "evaluation_bin_size_min (gammapy.modeling.models.spatialmodel attribute)": [[272, "gammapy.modeling.models.SpatialModel.evaluation_bin_size_min", false]], "evaluation_bin_size_min (gammapy.modeling.models.templatendspatialmodel attribute)": [[278, "gammapy.modeling.models.TemplateNDSpatialModel.evaluation_bin_size_min", false]], "evaluation_bin_size_min (gammapy.modeling.models.templatespatialmodel attribute)": [[282, "gammapy.modeling.models.TemplateSpatialModel.evaluation_bin_size_min", false]], "evaluation_radius (gammapy.modeling.models.constantfluxspatialmodel attribute)": [[226, "gammapy.modeling.models.ConstantFluxSpatialModel.evaluation_radius", false]], "evaluation_radius (gammapy.modeling.models.constantspatialmodel attribute)": [[227, "gammapy.modeling.models.ConstantSpatialModel.evaluation_radius", false]], "evaluation_radius (gammapy.modeling.models.diskspatialmodel attribute)": [[231, "gammapy.modeling.models.DiskSpatialModel.evaluation_radius", false]], "evaluation_radius (gammapy.modeling.models.gaussianspatialmodel attribute)": [[240, "gammapy.modeling.models.GaussianSpatialModel.evaluation_radius", false]], "evaluation_radius (gammapy.modeling.models.generalizedgaussianspatialmodel attribute)": [[243, "gammapy.modeling.models.GeneralizedGaussianSpatialModel.evaluation_radius", false]], "evaluation_radius (gammapy.modeling.models.piecewisenormspatialmodel attribute)": [[256, "gammapy.modeling.models.PiecewiseNormSpatialModel.evaluation_radius", false]], "evaluation_radius (gammapy.modeling.models.pointspatialmodel attribute)": [[258, "gammapy.modeling.models.PointSpatialModel.evaluation_radius", false]], "evaluation_radius (gammapy.modeling.models.shell2spatialmodel attribute)": [[267, "gammapy.modeling.models.Shell2SpatialModel.evaluation_radius", false]], "evaluation_radius (gammapy.modeling.models.shellspatialmodel attribute)": [[268, "gammapy.modeling.models.ShellSpatialModel.evaluation_radius", false]], "evaluation_radius (gammapy.modeling.models.skymodel attribute)": [[270, "gammapy.modeling.models.SkyModel.evaluation_radius", false]], "evaluation_radius (gammapy.modeling.models.spatialmodel attribute)": [[272, "gammapy.modeling.models.SpatialModel.evaluation_radius", false]], "evaluation_radius (gammapy.modeling.models.templatendspatialmodel attribute)": [[278, "gammapy.modeling.models.TemplateNDSpatialModel.evaluation_radius", false]], "evaluation_radius (gammapy.modeling.models.templatenpredmodel attribute)": [[280, "gammapy.modeling.models.TemplateNPredModel.evaluation_radius", false]], "evaluation_radius (gammapy.modeling.models.templatespatialmodel attribute)": [[282, "gammapy.modeling.models.TemplateSpatialModel.evaluation_radius", false]], "evaluation_region (gammapy.modeling.models.constantfluxspatialmodel attribute)": [[226, "gammapy.modeling.models.ConstantFluxSpatialModel.evaluation_region", false]], "evaluation_region (gammapy.modeling.models.constantspatialmodel attribute)": [[227, "gammapy.modeling.models.ConstantSpatialModel.evaluation_region", false]], "evaluation_region (gammapy.modeling.models.diskspatialmodel attribute)": [[231, "gammapy.modeling.models.DiskSpatialModel.evaluation_region", false]], "evaluation_region (gammapy.modeling.models.gaussianspatialmodel attribute)": [[240, "gammapy.modeling.models.GaussianSpatialModel.evaluation_region", false]], "evaluation_region (gammapy.modeling.models.generalizedgaussianspatialmodel attribute)": [[243, "gammapy.modeling.models.GeneralizedGaussianSpatialModel.evaluation_region", false]], "evaluation_region (gammapy.modeling.models.piecewisenormspatialmodel attribute)": [[256, "gammapy.modeling.models.PiecewiseNormSpatialModel.evaluation_region", false]], "evaluation_region (gammapy.modeling.models.pointspatialmodel attribute)": [[258, "gammapy.modeling.models.PointSpatialModel.evaluation_region", false]], "evaluation_region (gammapy.modeling.models.shell2spatialmodel attribute)": [[267, "gammapy.modeling.models.Shell2SpatialModel.evaluation_region", false]], "evaluation_region (gammapy.modeling.models.shellspatialmodel attribute)": [[268, "gammapy.modeling.models.ShellSpatialModel.evaluation_region", false]], "evaluation_region (gammapy.modeling.models.skymodel attribute)": [[270, "gammapy.modeling.models.SkyModel.evaluation_region", false]], "evaluation_region (gammapy.modeling.models.spatialmodel attribute)": [[272, "gammapy.modeling.models.SpatialModel.evaluation_region", false]], "evaluation_region (gammapy.modeling.models.templatendspatialmodel attribute)": [[278, "gammapy.modeling.models.TemplateNDSpatialModel.evaluation_region", false]], "evaluation_region (gammapy.modeling.models.templatespatialmodel attribute)": [[282, "gammapy.modeling.models.TemplateSpatialModel.evaluation_region", false]], "evaluators (gammapy.datasets.mapdataset attribute)": [[104, "gammapy.datasets.MapDataset.evaluators", false]], "evaluators (gammapy.datasets.mapdatasetonoff attribute)": [[107, "gammapy.datasets.MapDatasetOnOff.evaluators", false]], "evaluators (gammapy.datasets.spectrumdataset attribute)": [[111, "gammapy.datasets.SpectrumDataset.evaluators", false]], "evaluators (gammapy.datasets.spectrumdatasetonoff attribute)": [[112, "gammapy.datasets.SpectrumDatasetOnOff.evaluators", false]], "event_det_coords() (gammapy.datasets.mapdataseteventsampler static method)": [[105, "gammapy.datasets.MapDatasetEventSampler.event_det_coords", false]], "event_det_coords() (gammapy.datasets.observationeventsampler static method)": [[110, "gammapy.datasets.ObservationEventSampler.event_det_coords", false]], "event_filter_types (gammapy.data.observationfilter attribute)": [[90, "gammapy.data.ObservationFilter.EVENT_FILTER_TYPES", false]], "event_list_meta() (gammapy.datasets.mapdataseteventsampler static method)": [[105, "gammapy.datasets.MapDatasetEventSampler.event_list_meta", false]], "event_list_meta() (gammapy.datasets.observationeventsampler static method)": [[110, "gammapy.datasets.ObservationEventSampler.event_list_meta", false]], "eventlist (class in gammapy.data)": [[83, "gammapy.data.EventList", false]], "eventlistmetadata (class in gammapy.data)": [[84, "gammapy.data.EventListMetaData", false]], "events (gammapy.data.observation attribute)": [[89, "gammapy.data.Observation.events", false]], "evolved (gammapy.astro.population.casebattacharya1998 attribute)": [[28, "gammapy.astro.population.CaseBattacharya1998.evolved", false]], "evolved (gammapy.astro.population.exponential attribute)": [[29, "gammapy.astro.population.Exponential.evolved", false]], "evolved (gammapy.astro.population.faucherkaspi2006 attribute)": [[30, "gammapy.astro.population.FaucherKaspi2006.evolved", false]], "evolved (gammapy.astro.population.lorimer2006 attribute)": [[35, "gammapy.astro.population.Lorimer2006.evolved", false]], "evolved (gammapy.astro.population.paczynski1990 attribute)": [[36, "gammapy.astro.population.Paczynski1990.evolved", false]], "evolved (gammapy.astro.population.yusifovkucuk2004 attribute)": [[39, "gammapy.astro.population.YusifovKucuk2004.evolved", false]], "evolved (gammapy.astro.population.yusifovkucuk2004b attribute)": [[40, "gammapy.astro.population.YusifovKucuk2004B.evolved", false]], "excess (gammapy.datasets.mapdataset attribute)": [[104, "gammapy.datasets.MapDataset.excess", false]], "excess (gammapy.datasets.mapdatasetonoff attribute)": [[107, "gammapy.datasets.MapDatasetOnOff.excess", false]], "excess (gammapy.datasets.spectrumdataset attribute)": [[111, "gammapy.datasets.SpectrumDataset.excess", false]], "excess (gammapy.datasets.spectrumdatasetonoff attribute)": [[112, "gammapy.datasets.SpectrumDatasetOnOff.excess", false]], "excessmapestimator (class in gammapy.estimators)": [[125, "gammapy.estimators.ExcessMapEstimator", false]], "expand_map() (gammapy.estimators.lightcurveestimator static method)": [[133, "gammapy.estimators.LightCurveEstimator.expand_map", false]], "expcutoffpowerlaw3fglspectralmodel (class in gammapy.modeling.models)": [[234, "gammapy.modeling.models.ExpCutoffPowerLaw3FGLSpectralModel", false]], "expcutoffpowerlawnormspectralmodel (class in gammapy.modeling.models)": [[235, "gammapy.modeling.models.ExpCutoffPowerLawNormSpectralModel", false]], "expcutoffpowerlawspectralmodel (class in gammapy.modeling.models)": [[236, "gammapy.modeling.models.ExpCutoffPowerLawSpectralModel", false]], "expdecaytemporalmodel (class in gammapy.modeling.models)": [[237, "gammapy.modeling.models.ExpDecayTemporalModel", false]], "expfactor (gammapy.modeling.models.superexpcutoffpowerlaw4fgldr3spectralmodel attribute)": [[275, "gammapy.modeling.models.SuperExpCutoffPowerLaw4FGLDR3SpectralModel.expfactor", false]], "expfactor (gammapy.modeling.models.superexpcutoffpowerlaw4fglspectralmodel attribute)": [[276, "gammapy.modeling.models.SuperExpCutoffPowerLaw4FGLSpectralModel.expfactor", false]], "exponential (class in gammapy.astro.population)": [[29, "gammapy.astro.population.Exponential", false]], "exposure (gammapy.datasets.mapdataset attribute)": [[104, "gammapy.datasets.MapDataset.exposure", false]], "exposure (gammapy.datasets.mapdatasetonoff attribute)": [[107, "gammapy.datasets.MapDatasetOnOff.exposure", false]], "exposure (gammapy.datasets.spectrumdataset attribute)": [[111, "gammapy.datasets.SpectrumDataset.exposure", false]], "exposure (gammapy.datasets.spectrumdatasetonoff attribute)": [[112, "gammapy.datasets.SpectrumDatasetOnOff.exposure", false]], "extend() (gammapy.data.observations method)": [[93, "gammapy.data.Observations.extend", false]], "extend() (gammapy.datasets.datasets method)": [[101, "gammapy.datasets.Datasets.extend", false]], "extend() (gammapy.modeling.models.models method)": [[254, "gammapy.modeling.models.Models.extend", false]], "f0 (gammapy.modeling.models.templatephasecurvetemporalmodel attribute)": [[281, "gammapy.modeling.models.TemplatePhaseCurveTemporalModel.f0", false]], "f1 (gammapy.modeling.models.templatephasecurvetemporalmodel attribute)": [[281, "gammapy.modeling.models.TemplatePhaseCurveTemporalModel.f1", false]], "f2 (gammapy.modeling.models.templatephasecurvetemporalmodel attribute)": [[281, "gammapy.modeling.models.TemplatePhaseCurveTemporalModel.f2", false]], "f_cash_root_cython() (in module gammapy.stats)": [[308, "gammapy.stats.f_cash_root_cython", false]], "factor (gammapy.modeling.parameter attribute)": [[218, "gammapy.modeling.Parameter.factor", false]], "factor (gammapy.modeling.priorparameter attribute)": [[220, "gammapy.modeling.PriorParameter.factor", false]], "factor_max (gammapy.modeling.parameter attribute)": [[218, "gammapy.modeling.Parameter.factor_max", false]], "factor_max (gammapy.modeling.priorparameter attribute)": [[220, "gammapy.modeling.PriorParameter.factor_max", false]], "factor_min (gammapy.modeling.parameter attribute)": [[218, "gammapy.modeling.Parameter.factor_min", false]], "factor_min (gammapy.modeling.priorparameter attribute)": [[220, "gammapy.modeling.PriorParameter.factor_min", false]], "fake() (gammapy.datasets.mapdataset method)": [[104, "gammapy.datasets.MapDataset.fake", false]], "fake() (gammapy.datasets.mapdatasetonoff method)": [[107, "gammapy.datasets.MapDatasetOnOff.fake", false]], "fake() (gammapy.datasets.spectrumdataset method)": [[111, "gammapy.datasets.SpectrumDataset.fake", false]], "fake() (gammapy.datasets.spectrumdatasetonoff method)": [[112, "gammapy.datasets.SpectrumDatasetOnOff.fake", false]], "faucherkaspi2006 (class in gammapy.astro.population)": [[30, "gammapy.astro.population.FaucherKaspi2006", false]], "faucherkaspi2006velocitybimodal (class in gammapy.astro.population)": [[31, "gammapy.astro.population.FaucherKaspi2006VelocityBimodal", false]], "faucherkaspi2006velocitymaxwellian (class in gammapy.astro.population)": [[32, "gammapy.astro.population.FaucherKaspi2006VelocityMaxwellian", false]], "faucherspiral (class in gammapy.astro.population)": [[33, "gammapy.astro.population.FaucherSpiral", false]], "fermipydatasetsreader (class in gammapy.datasets)": [[102, "gammapy.datasets.FermipyDatasetsReader", false]], "field() (gammapy.data.hduindextable method)": [[88, "gammapy.data.HDUIndexTable.field", false]], "field() (gammapy.data.observationtable method)": [[92, "gammapy.data.ObservationTable.field", false]], "fill_by_coord() (gammapy.maps.hpxmap method)": [[197, "gammapy.maps.HpxMap.fill_by_coord", false]], "fill_by_coord() (gammapy.maps.hpxndmap method)": [[198, "gammapy.maps.HpxNDMap.fill_by_coord", false]], "fill_by_coord() (gammapy.maps.map method)": [[200, "gammapy.maps.Map.fill_by_coord", false]], "fill_by_coord() (gammapy.maps.regionndmap method)": [[206, "gammapy.maps.RegionNDMap.fill_by_coord", false]], "fill_by_coord() (gammapy.maps.wcsmap method)": [[209, "gammapy.maps.WcsMap.fill_by_coord", false]], "fill_by_coord() (gammapy.maps.wcsndmap method)": [[210, "gammapy.maps.WcsNDMap.fill_by_coord", false]], "fill_by_idx() (gammapy.maps.hpxmap method)": [[197, "gammapy.maps.HpxMap.fill_by_idx", false]], "fill_by_idx() (gammapy.maps.hpxndmap method)": [[198, "gammapy.maps.HpxNDMap.fill_by_idx", false]], "fill_by_idx() (gammapy.maps.map method)": [[200, "gammapy.maps.Map.fill_by_idx", false]], "fill_by_idx() (gammapy.maps.regionndmap method)": [[206, "gammapy.maps.RegionNDMap.fill_by_idx", false]], "fill_by_idx() (gammapy.maps.wcsmap method)": [[209, "gammapy.maps.WcsMap.fill_by_idx", false]], "fill_by_idx() (gammapy.maps.wcsndmap method)": [[210, "gammapy.maps.WcsNDMap.fill_by_idx", false]], "fill_by_pix() (gammapy.maps.hpxmap method)": [[197, "gammapy.maps.HpxMap.fill_by_pix", false]], "fill_by_pix() (gammapy.maps.hpxndmap method)": [[198, "gammapy.maps.HpxNDMap.fill_by_pix", false]], "fill_by_pix() (gammapy.maps.map method)": [[200, "gammapy.maps.Map.fill_by_pix", false]], "fill_by_pix() (gammapy.maps.regionndmap method)": [[206, "gammapy.maps.RegionNDMap.fill_by_pix", false]], "fill_by_pix() (gammapy.maps.wcsmap method)": [[209, "gammapy.maps.WcsMap.fill_by_pix", false]], "fill_by_pix() (gammapy.maps.wcsndmap method)": [[210, "gammapy.maps.WcsNDMap.fill_by_pix", false]], "fill_events() (gammapy.maps.hpxmap method)": [[197, "gammapy.maps.HpxMap.fill_events", false]], "fill_events() (gammapy.maps.hpxndmap method)": [[198, "gammapy.maps.HpxNDMap.fill_events", false]], "fill_events() (gammapy.maps.map method)": [[200, "gammapy.maps.Map.fill_events", false]], "fill_events() (gammapy.maps.regionndmap method)": [[206, "gammapy.maps.RegionNDMap.fill_events", false]], "fill_events() (gammapy.maps.wcsmap method)": [[209, "gammapy.maps.WcsMap.fill_events", false]], "fill_events() (gammapy.maps.wcsndmap method)": [[210, "gammapy.maps.WcsNDMap.fill_events", false]], "filled() (gammapy.data.hduindextable method)": [[88, "gammapy.data.HDUIndexTable.filled", false]], "filled() (gammapy.data.observationtable method)": [[92, "gammapy.data.ObservationTable.filled", false]], "filter_events() (gammapy.data.observationfilter method)": [[90, "gammapy.data.ObservationFilter.filter_events", false]], "filter_gti() (gammapy.data.observationfilter method)": [[90, "gammapy.data.ObservationFilter.filter_gti", false]], "filter_success_nan (gammapy.estimators.fluxmaps attribute)": [[126, "gammapy.estimators.FluxMaps.filter_success_nan", false]], "filter_success_nan (gammapy.estimators.fluxpoints attribute)": [[128, "gammapy.estimators.FluxPoints.filter_success_nan", false]], "find_peaks() (in module gammapy.estimators.utils)": [[145, "gammapy.estimators.utils.find_peaks", false]], "find_peaks_in_flux_map() (in module gammapy.estimators.utils)": [[146, "gammapy.estimators.utils.find_peaks_in_flux_map", false]], "fit (class in gammapy.modeling)": [[215, "gammapy.modeling.Fit", false]], "fit_deriv (gammapy.astro.population.casebattacharya1998 attribute)": [[28, "gammapy.astro.population.CaseBattacharya1998.fit_deriv", false]], "fit_deriv (gammapy.astro.population.exponential attribute)": [[29, "gammapy.astro.population.Exponential.fit_deriv", false]], "fit_deriv (gammapy.astro.population.faucherkaspi2006 attribute)": [[30, "gammapy.astro.population.FaucherKaspi2006.fit_deriv", false]], "fit_deriv (gammapy.astro.population.faucherkaspi2006velocitybimodal attribute)": [[31, "gammapy.astro.population.FaucherKaspi2006VelocityBimodal.fit_deriv", false]], "fit_deriv (gammapy.astro.population.faucherkaspi2006velocitymaxwellian attribute)": [[32, "gammapy.astro.population.FaucherKaspi2006VelocityMaxwellian.fit_deriv", false]], "fit_deriv (gammapy.astro.population.lorimer2006 attribute)": [[35, "gammapy.astro.population.Lorimer2006.fit_deriv", false]], "fit_deriv (gammapy.astro.population.paczynski1990 attribute)": [[36, "gammapy.astro.population.Paczynski1990.fit_deriv", false]], "fit_deriv (gammapy.astro.population.paczynski1990velocity attribute)": [[37, "gammapy.astro.population.Paczynski1990Velocity.fit_deriv", false]], "fit_deriv (gammapy.astro.population.yusifovkucuk2004 attribute)": [[39, "gammapy.astro.population.YusifovKucuk2004.fit_deriv", false]], "fit_deriv (gammapy.astro.population.yusifovkucuk2004b attribute)": [[40, "gammapy.astro.population.YusifovKucuk2004B.fit_deriv", false]], "fitresult (class in gammapy.modeling)": [[216, "gammapy.modeling.FitResult", false]], "fittable (gammapy.astro.population.casebattacharya1998 attribute)": [[28, "gammapy.astro.population.CaseBattacharya1998.fittable", false]], "fittable (gammapy.astro.population.exponential attribute)": [[29, "gammapy.astro.population.Exponential.fittable", false]], "fittable (gammapy.astro.population.faucherkaspi2006 attribute)": [[30, "gammapy.astro.population.FaucherKaspi2006.fittable", false]], "fittable (gammapy.astro.population.faucherkaspi2006velocitybimodal attribute)": [[31, "gammapy.astro.population.FaucherKaspi2006VelocityBimodal.fittable", false]], "fittable (gammapy.astro.population.faucherkaspi2006velocitymaxwellian attribute)": [[32, "gammapy.astro.population.FaucherKaspi2006VelocityMaxwellian.fittable", false]], "fittable (gammapy.astro.population.lorimer2006 attribute)": [[35, "gammapy.astro.population.Lorimer2006.fittable", false]], "fittable (gammapy.astro.population.paczynski1990 attribute)": [[36, "gammapy.astro.population.Paczynski1990.fittable", false]], "fittable (gammapy.astro.population.paczynski1990velocity attribute)": [[37, "gammapy.astro.population.Paczynski1990Velocity.fittable", false]], "fittable (gammapy.astro.population.yusifovkucuk2004 attribute)": [[39, "gammapy.astro.population.YusifovKucuk2004.fittable", false]], "fittable (gammapy.astro.population.yusifovkucuk2004b attribute)": [[40, "gammapy.astro.population.YusifovKucuk2004B.fittable", false]], "fixed (gammapy.astro.population.casebattacharya1998 attribute)": [[28, "gammapy.astro.population.CaseBattacharya1998.fixed", false]], "fixed (gammapy.astro.population.exponential attribute)": [[29, "gammapy.astro.population.Exponential.fixed", false]], "fixed (gammapy.astro.population.faucherkaspi2006 attribute)": [[30, "gammapy.astro.population.FaucherKaspi2006.fixed", false]], "fixed (gammapy.astro.population.faucherkaspi2006velocitybimodal attribute)": [[31, "gammapy.astro.population.FaucherKaspi2006VelocityBimodal.fixed", false]], "fixed (gammapy.astro.population.faucherkaspi2006velocitymaxwellian attribute)": [[32, "gammapy.astro.population.FaucherKaspi2006VelocityMaxwellian.fixed", false]], "fixed (gammapy.astro.population.lorimer2006 attribute)": [[35, "gammapy.astro.population.Lorimer2006.fixed", false]], "fixed (gammapy.astro.population.paczynski1990 attribute)": [[36, "gammapy.astro.population.Paczynski1990.fixed", false]], "fixed (gammapy.astro.population.paczynski1990velocity attribute)": [[37, "gammapy.astro.population.Paczynski1990Velocity.fixed", false]], "fixed (gammapy.astro.population.yusifovkucuk2004 attribute)": [[39, "gammapy.astro.population.YusifovKucuk2004.fixed", false]], "fixed (gammapy.astro.population.yusifovkucuk2004b attribute)": [[40, "gammapy.astro.population.YusifovKucuk2004B.fixed", false]], "fixed_altaz (gammapy.data.fixedpointinginfo attribute)": [[85, "gammapy.data.FixedPointingInfo.fixed_altaz", false]], "fixed_icrs (gammapy.data.fixedpointinginfo attribute)": [[85, "gammapy.data.FixedPointingInfo.fixed_icrs", false]], "fixedpointinginfo (class in gammapy.data)": [[85, "gammapy.data.FixedPointingInfo", false]], "flat (gammapy.maps.mapcoord attribute)": [[203, "gammapy.maps.MapCoord.flat", false]], "flatten() (gammapy.utils.coordinates.fovaltazframe method)": [[320, "gammapy.utils.coordinates.FoVAltAzFrame.flatten", false]], "flatten() (gammapy.utils.coordinates.fovicrsframe method)": [[321, "gammapy.utils.coordinates.FoVICRSFrame.flatten", false]], "flux (gammapy.estimators.fluxmaps attribute)": [[126, "gammapy.estimators.FluxMaps.flux", false]], "flux (gammapy.estimators.fluxpoints attribute)": [[128, "gammapy.estimators.FluxPoints.flux", false]], "flux_err (gammapy.estimators.fluxmaps attribute)": [[126, "gammapy.estimators.FluxMaps.flux_err", false]], "flux_err (gammapy.estimators.fluxpoints attribute)": [[128, "gammapy.estimators.FluxPoints.flux_err", false]], "flux_errn (gammapy.estimators.fluxmaps attribute)": [[126, "gammapy.estimators.FluxMaps.flux_errn", false]], "flux_errn (gammapy.estimators.fluxpoints attribute)": [[128, "gammapy.estimators.FluxPoints.flux_errn", false]], "flux_errp (gammapy.estimators.fluxmaps attribute)": [[126, "gammapy.estimators.FluxMaps.flux_errp", false]], "flux_errp (gammapy.estimators.fluxpoints attribute)": [[128, "gammapy.estimators.FluxPoints.flux_errp", false]], "flux_points (gammapy.catalog.sourcecatalogobject2fhl attribute)": [[71, "gammapy.catalog.SourceCatalogObject2FHL.flux_points", false]], "flux_points (gammapy.catalog.sourcecatalogobject2pc attribute)": [[73, "gammapy.catalog.SourceCatalogObject2PC.flux_points", false]], "flux_points (gammapy.catalog.sourcecatalogobject3fgl attribute)": [[74, "gammapy.catalog.SourceCatalogObject3FGL.flux_points", false]], "flux_points (gammapy.catalog.sourcecatalogobject3fhl attribute)": [[75, "gammapy.catalog.SourceCatalogObject3FHL.flux_points", false]], "flux_points (gammapy.catalog.sourcecatalogobject3pc attribute)": [[77, "gammapy.catalog.SourceCatalogObject3PC.flux_points", false]], "flux_points (gammapy.catalog.sourcecatalogobject4fgl attribute)": [[78, "gammapy.catalog.SourceCatalogObject4FGL.flux_points", false]], "flux_points (gammapy.catalog.sourcecatalogobjectgammacat attribute)": [[79, "gammapy.catalog.SourceCatalogObjectGammaCat.flux_points", false]], "flux_points (gammapy.catalog.sourcecatalogobjecthgps attribute)": [[80, "gammapy.catalog.SourceCatalogObjectHGPS.flux_points", false]], "flux_points_meta (gammapy.catalog.sourcecatalogobject2fhl attribute)": [[71, "gammapy.catalog.SourceCatalogObject2FHL.flux_points_meta", false]], "flux_points_meta (gammapy.catalog.sourcecatalogobject3fgl attribute)": [[74, "gammapy.catalog.SourceCatalogObject3FGL.flux_points_meta", false]], "flux_points_meta (gammapy.catalog.sourcecatalogobject3fhl attribute)": [[75, "gammapy.catalog.SourceCatalogObject3FHL.flux_points_meta", false]], "flux_points_meta (gammapy.catalog.sourcecatalogobject4fgl attribute)": [[78, "gammapy.catalog.SourceCatalogObject4FGL.flux_points_meta", false]], "flux_points_table (gammapy.catalog.sourcecatalogobject2fhl attribute)": [[71, "gammapy.catalog.SourceCatalogObject2FHL.flux_points_table", false]], "flux_points_table (gammapy.catalog.sourcecatalogobject2pc attribute)": [[73, "gammapy.catalog.SourceCatalogObject2PC.flux_points_table", false]], "flux_points_table (gammapy.catalog.sourcecatalogobject3fgl attribute)": [[74, "gammapy.catalog.SourceCatalogObject3FGL.flux_points_table", false]], "flux_points_table (gammapy.catalog.sourcecatalogobject3fhl attribute)": [[75, "gammapy.catalog.SourceCatalogObject3FHL.flux_points_table", false]], "flux_points_table (gammapy.catalog.sourcecatalogobject3pc attribute)": [[77, "gammapy.catalog.SourceCatalogObject3PC.flux_points_table", false]], "flux_points_table (gammapy.catalog.sourcecatalogobject4fgl attribute)": [[78, "gammapy.catalog.SourceCatalogObject4FGL.flux_points_table", false]], "flux_points_table (gammapy.catalog.sourcecatalogobjectgammacat attribute)": [[79, "gammapy.catalog.SourceCatalogObjectGammaCat.flux_points_table", false]], "flux_points_table (gammapy.catalog.sourcecatalogobjecthgps attribute)": [[80, "gammapy.catalog.SourceCatalogObjectHGPS.flux_points_table", false]], "flux_pred() (gammapy.datasets.fluxpointsdataset method)": [[103, "gammapy.datasets.FluxPointsDataset.flux_pred", false]], "flux_ref (gammapy.estimators.fluxmaps attribute)": [[126, "gammapy.estimators.FluxMaps.flux_ref", false]], "flux_ref (gammapy.estimators.fluxpoints attribute)": [[128, "gammapy.estimators.FluxPoints.flux_ref", false]], "flux_sensitivity (gammapy.estimators.fluxmaps attribute)": [[126, "gammapy.estimators.FluxMaps.flux_sensitivity", false]], "flux_sensitivity (gammapy.estimators.fluxpoints attribute)": [[128, "gammapy.estimators.FluxPoints.flux_sensitivity", false]], "flux_ul (gammapy.estimators.fluxmaps attribute)": [[126, "gammapy.estimators.FluxMaps.flux_ul", false]], "flux_ul (gammapy.estimators.fluxpoints attribute)": [[128, "gammapy.estimators.FluxPoints.flux_ul", false]], "fluxmaps (class in gammapy.estimators)": [[126, "gammapy.estimators.FluxMaps", false]], "fluxmetadata (class in gammapy.estimators)": [[127, "gammapy.estimators.FluxMetaData", false]], "fluxpoints (class in gammapy.estimators)": [[128, "gammapy.estimators.FluxPoints", false]], "fluxpointsdataset (class in gammapy.datasets)": [[103, "gammapy.datasets.FluxPointsDataset", false]], "fluxpointsestimator (class in gammapy.estimators)": [[129, "gammapy.estimators.FluxPointsEstimator", false]], "fluxprofileestimator (class in gammapy.estimators)": [[130, "gammapy.estimators.FluxProfileEstimator", false]], "footprint (gammapy.maps.wcsgeom attribute)": [[208, "gammapy.maps.WcsGeom.footprint", false]], "footprint_rectangle_sky_region (gammapy.maps.wcsgeom attribute)": [[208, "gammapy.maps.WcsGeom.footprint_rectangle_sky_region", false]], "format_plot_xaxis() (gammapy.maps.labelmapaxis method)": [[199, "gammapy.maps.LabelMapAxis.format_plot_xaxis", false]], "format_plot_xaxis() (gammapy.maps.mapaxis method)": [[202, "gammapy.maps.MapAxis.format_plot_xaxis", false]], "format_plot_xaxis() (gammapy.maps.timemapaxis method)": [[207, "gammapy.maps.TimeMapAxis.format_plot_xaxis", false]], "format_plot_yaxis() (gammapy.maps.mapaxis method)": [[202, "gammapy.maps.MapAxis.format_plot_yaxis", false]], "fov": [[608, "term-FoV", true]], "fov background": [[608, "term-FoV-Background", true]], "fov_alignment (gammapy.irf.background2d attribute)": [[151, "gammapy.irf.Background2D.fov_alignment", false]], "fov_alignment (gammapy.irf.background3d attribute)": [[152, "gammapy.irf.Background3D.fov_alignment", false]], "fov_alignment (gammapy.irf.backgroundirf attribute)": [[153, "gammapy.irf.BackgroundIRF.fov_alignment", false]], "fov_alignment (gammapy.irf.edispkernel attribute)": [[154, "gammapy.irf.EDispKernel.fov_alignment", false]], "fov_alignment (gammapy.irf.effectiveareatable2d attribute)": [[157, "gammapy.irf.EffectiveAreaTable2D.fov_alignment", false]], "fov_alignment (gammapy.irf.energydependentmultigausspsf attribute)": [[158, "gammapy.irf.EnergyDependentMultiGaussPSF.fov_alignment", false]], "fov_alignment (gammapy.irf.energydispersion2d attribute)": [[159, "gammapy.irf.EnergyDispersion2D.fov_alignment", false]], "fov_alignment (gammapy.irf.irf attribute)": [[161, "gammapy.irf.IRF.fov_alignment", false]], "fov_alignment (gammapy.irf.parametricpsf attribute)": [[168, "gammapy.irf.ParametricPSF.fov_alignment", false]], "fov_alignment (gammapy.irf.psf3d attribute)": [[164, "gammapy.irf.PSF3D.fov_alignment", false]], "fov_alignment (gammapy.irf.psfking attribute)": [[166, "gammapy.irf.PSFKing.fov_alignment", false]], "fov_alignment (gammapy.irf.radmax2d attribute)": [[169, "gammapy.irf.RadMax2D.fov_alignment", false]], "fov_to_sky() (in module gammapy.utils.coordinates)": [[323, "gammapy.utils.coordinates.fov_to_sky", false]], "fovalignment (class in gammapy.irf)": [[160, "gammapy.irf.FoVAlignment", false]], "fovaltazframe (class in gammapy.utils.coordinates)": [[320, "gammapy.utils.coordinates.FoVAltAzFrame", false]], "fovbackgroundmaker (class in gammapy.makers)": [[174, "gammapy.makers.FoVBackgroundMaker", false]], "fovbackgroundmodel (class in gammapy.modeling.models)": [[238, "gammapy.modeling.models.FoVBackgroundModel", false]], "fovicrsframe (class in gammapy.utils.coordinates)": [[321, "gammapy.utils.coordinates.FoVICRSFrame", false]], "frame (gammapy.maps.hpxgeom attribute)": [[196, "gammapy.maps.HpxGeom.frame", false]], "frame (gammapy.maps.mapcoord attribute)": [[203, "gammapy.maps.MapCoord.frame", false]], "frame (gammapy.maps.regiongeom attribute)": [[205, "gammapy.maps.RegionGeom.frame", false]], "frame (gammapy.maps.wcsgeom attribute)": [[208, "gammapy.maps.WcsGeom.frame", false]], "frame (gammapy.modeling.models.constantfluxspatialmodel attribute)": [[226, "gammapy.modeling.models.ConstantFluxSpatialModel.frame", false]], "frame (gammapy.modeling.models.constantspatialmodel attribute)": [[227, "gammapy.modeling.models.ConstantSpatialModel.frame", false]], "frame (gammapy.modeling.models.skymodel attribute)": [[270, "gammapy.modeling.models.SkyModel.frame", false]], "frame_attributes (gammapy.utils.coordinates.fovaltazframe attribute)": [[320, "gammapy.utils.coordinates.FoVAltAzFrame.frame_attributes", false]], "frame_attributes (gammapy.utils.coordinates.fovicrsframe attribute)": [[321, "gammapy.utils.coordinates.FoVICRSFrame.frame_attributes", false]], "frame_specific_representation_info (gammapy.utils.coordinates.fovaltazframe attribute)": [[320, "gammapy.utils.coordinates.FoVAltAzFrame.frame_specific_representation_info", false]], "frame_specific_representation_info (gammapy.utils.coordinates.fovicrsframe attribute)": [[321, "gammapy.utils.coordinates.FoVICRSFrame.frame_specific_representation_info", false]], "free_parameters (gammapy.modeling.parameters attribute)": [[219, "gammapy.modeling.Parameters.free_parameters", false]], "free_parameters (gammapy.modeling.priorparameters attribute)": [[221, "gammapy.modeling.PriorParameters.free_parameters", false]], "free_unique_parameters (gammapy.modeling.parameters attribute)": [[219, "gammapy.modeling.Parameters.free_unique_parameters", false]], "free_unique_parameters (gammapy.modeling.priorparameters attribute)": [[221, "gammapy.modeling.PriorParameters.free_unique_parameters", false]], "freeze() (gammapy.astro.darkmatter.darkmatterannihilationspectralmodel method)": [[19, "gammapy.astro.darkmatter.DarkMatterAnnihilationSpectralModel.freeze", false]], "freeze() (gammapy.astro.darkmatter.darkmatterdecayspectralmodel method)": [[20, "gammapy.astro.darkmatter.DarkMatterDecaySpectralModel.freeze", false]], "freeze() (gammapy.astro.darkmatter.primaryflux method)": [[26, "gammapy.astro.darkmatter.PrimaryFlux.freeze", false]], "freeze() (gammapy.modeling.models.brokenpowerlawspectralmodel method)": [[224, "gammapy.modeling.models.BrokenPowerLawSpectralModel.freeze", false]], "freeze() (gammapy.modeling.models.compoundspectralmodel method)": [[225, "gammapy.modeling.models.CompoundSpectralModel.freeze", false]], "freeze() (gammapy.modeling.models.constantfluxspatialmodel method)": [[226, "gammapy.modeling.models.ConstantFluxSpatialModel.freeze", false]], "freeze() (gammapy.modeling.models.constantspatialmodel method)": [[227, "gammapy.modeling.models.ConstantSpatialModel.freeze", false]], "freeze() (gammapy.modeling.models.constantspectralmodel method)": [[228, "gammapy.modeling.models.ConstantSpectralModel.freeze", false]], "freeze() (gammapy.modeling.models.constanttemporalmodel method)": [[229, "gammapy.modeling.models.ConstantTemporalModel.freeze", false]], "freeze() (gammapy.modeling.models.datasetmodels method)": [[230, "gammapy.modeling.models.DatasetModels.freeze", false]], "freeze() (gammapy.modeling.models.diskspatialmodel method)": [[231, "gammapy.modeling.models.DiskSpatialModel.freeze", false]], "freeze() (gammapy.modeling.models.eblabsorptionnormspectralmodel method)": [[232, "gammapy.modeling.models.EBLAbsorptionNormSpectralModel.freeze", false]], "freeze() (gammapy.modeling.models.expcutoffpowerlaw3fglspectralmodel method)": [[234, "gammapy.modeling.models.ExpCutoffPowerLaw3FGLSpectralModel.freeze", false]], "freeze() (gammapy.modeling.models.expcutoffpowerlawnormspectralmodel method)": [[235, "gammapy.modeling.models.ExpCutoffPowerLawNormSpectralModel.freeze", false]], "freeze() (gammapy.modeling.models.expcutoffpowerlawspectralmodel method)": [[236, "gammapy.modeling.models.ExpCutoffPowerLawSpectralModel.freeze", false]], "freeze() (gammapy.modeling.models.expdecaytemporalmodel method)": [[237, "gammapy.modeling.models.ExpDecayTemporalModel.freeze", false]], "freeze() (gammapy.modeling.models.fovbackgroundmodel method)": [[238, "gammapy.modeling.models.FoVBackgroundModel.freeze", false]], "freeze() (gammapy.modeling.models.gaussianprior method)": [[239, "gammapy.modeling.models.GaussianPrior.freeze", false]], "freeze() (gammapy.modeling.models.gaussianspatialmodel method)": [[240, "gammapy.modeling.models.GaussianSpatialModel.freeze", false]], "freeze() (gammapy.modeling.models.gaussianspectralmodel method)": [[241, "gammapy.modeling.models.GaussianSpectralModel.freeze", false]], "freeze() (gammapy.modeling.models.gaussiantemporalmodel method)": [[242, "gammapy.modeling.models.GaussianTemporalModel.freeze", false]], "freeze() (gammapy.modeling.models.generalizedgaussianspatialmodel method)": [[243, "gammapy.modeling.models.GeneralizedGaussianSpatialModel.freeze", false]], "freeze() (gammapy.modeling.models.generalizedgaussiantemporalmodel method)": [[244, "gammapy.modeling.models.GeneralizedGaussianTemporalModel.freeze", false]], "freeze() (gammapy.modeling.models.lightcurvetemplatetemporalmodel method)": [[245, "gammapy.modeling.models.LightCurveTemplateTemporalModel.freeze", false]], "freeze() (gammapy.modeling.models.lineartemporalmodel method)": [[246, "gammapy.modeling.models.LinearTemporalModel.freeze", false]], "freeze() (gammapy.modeling.models.logparabolanormspectralmodel method)": [[247, "gammapy.modeling.models.LogParabolaNormSpectralModel.freeze", false]], "freeze() (gammapy.modeling.models.logparabolaspectralmodel method)": [[248, "gammapy.modeling.models.LogParabolaSpectralModel.freeze", false]], "freeze() (gammapy.modeling.models.loguniformprior method)": [[249, "gammapy.modeling.models.LogUniformPrior.freeze", false]], "freeze() (gammapy.modeling.models.meyercrabspectralmodel method)": [[251, "gammapy.modeling.models.MeyerCrabSpectralModel.freeze", false]], "freeze() (gammapy.modeling.models.modelbase method)": [[253, "gammapy.modeling.models.ModelBase.freeze", false]], "freeze() (gammapy.modeling.models.models method)": [[254, "gammapy.modeling.models.Models.freeze", false]], "freeze() (gammapy.modeling.models.naimaspectralmodel method)": [[255, "gammapy.modeling.models.NaimaSpectralModel.freeze", false]], "freeze() (gammapy.modeling.models.piecewisenormspatialmodel method)": [[256, "gammapy.modeling.models.PiecewiseNormSpatialModel.freeze", false]], "freeze() (gammapy.modeling.models.piecewisenormspectralmodel method)": [[257, "gammapy.modeling.models.PiecewiseNormSpectralModel.freeze", false]], "freeze() (gammapy.modeling.models.pointspatialmodel method)": [[258, "gammapy.modeling.models.PointSpatialModel.freeze", false]], "freeze() (gammapy.modeling.models.powerlaw2spectralmodel method)": [[259, "gammapy.modeling.models.PowerLaw2SpectralModel.freeze", false]], "freeze() (gammapy.modeling.models.powerlawnormspectralmodel method)": [[260, "gammapy.modeling.models.PowerLawNormSpectralModel.freeze", false]], "freeze() (gammapy.modeling.models.powerlawspectralmodel method)": [[261, "gammapy.modeling.models.PowerLawSpectralModel.freeze", false]], "freeze() (gammapy.modeling.models.powerlawtemporalmodel method)": [[262, "gammapy.modeling.models.PowerLawTemporalModel.freeze", false]], "freeze() (gammapy.modeling.models.prior method)": [[263, "gammapy.modeling.models.Prior.freeze", false]], "freeze() (gammapy.modeling.models.scalespectralmodel method)": [[266, "gammapy.modeling.models.ScaleSpectralModel.freeze", false]], "freeze() (gammapy.modeling.models.shell2spatialmodel method)": [[267, "gammapy.modeling.models.Shell2SpatialModel.freeze", false]], "freeze() (gammapy.modeling.models.shellspatialmodel method)": [[268, "gammapy.modeling.models.ShellSpatialModel.freeze", false]], "freeze() (gammapy.modeling.models.sinetemporalmodel method)": [[269, "gammapy.modeling.models.SineTemporalModel.freeze", false]], "freeze() (gammapy.modeling.models.skymodel method)": [[270, "gammapy.modeling.models.SkyModel.freeze", false]], "freeze() (gammapy.modeling.models.smoothbrokenpowerlawspectralmodel method)": [[271, "gammapy.modeling.models.SmoothBrokenPowerLawSpectralModel.freeze", false]], "freeze() (gammapy.modeling.models.spatialmodel method)": [[272, "gammapy.modeling.models.SpatialModel.freeze", false]], "freeze() (gammapy.modeling.models.spectralmodel method)": [[273, "gammapy.modeling.models.SpectralModel.freeze", false]], "freeze() (gammapy.modeling.models.superexpcutoffpowerlaw3fglspectralmodel method)": [[274, "gammapy.modeling.models.SuperExpCutoffPowerLaw3FGLSpectralModel.freeze", false]], "freeze() (gammapy.modeling.models.superexpcutoffpowerlaw4fgldr3spectralmodel method)": [[275, "gammapy.modeling.models.SuperExpCutoffPowerLaw4FGLDR3SpectralModel.freeze", false]], "freeze() (gammapy.modeling.models.superexpcutoffpowerlaw4fglspectralmodel method)": [[276, "gammapy.modeling.models.SuperExpCutoffPowerLaw4FGLSpectralModel.freeze", false]], "freeze() (gammapy.modeling.models.templatendspatialmodel method)": [[278, "gammapy.modeling.models.TemplateNDSpatialModel.freeze", false]], "freeze() (gammapy.modeling.models.templatendspectralmodel method)": [[279, "gammapy.modeling.models.TemplateNDSpectralModel.freeze", false]], "freeze() (gammapy.modeling.models.templatenpredmodel method)": [[280, "gammapy.modeling.models.TemplateNPredModel.freeze", false]], "freeze() (gammapy.modeling.models.templatephasecurvetemporalmodel method)": [[281, "gammapy.modeling.models.TemplatePhaseCurveTemporalModel.freeze", false]], "freeze() (gammapy.modeling.models.templatespatialmodel method)": [[282, "gammapy.modeling.models.TemplateSpatialModel.freeze", false]], "freeze() (gammapy.modeling.models.templatespectralmodel method)": [[283, "gammapy.modeling.models.TemplateSpectralModel.freeze", false]], "freeze() (gammapy.modeling.models.temporalmodel method)": [[284, "gammapy.modeling.models.TemporalModel.freeze", false]], "freeze() (gammapy.modeling.models.uniformprior method)": [[285, "gammapy.modeling.models.UniformPrior.freeze", false]], "freeze_all() (gammapy.modeling.parameters method)": [[219, "gammapy.modeling.Parameters.freeze_all", false]], "freeze_all() (gammapy.modeling.priorparameters method)": [[221, "gammapy.modeling.PriorParameters.freeze_all", false]], "from_aligned() (gammapy.maps.wcsgeom class method)": [[208, "gammapy.maps.WcsGeom.from_aligned", false]], "from_bounds() (gammapy.maps.mapaxis class method)": [[202, "gammapy.maps.MapAxis.from_bounds", false]], "from_default() (gammapy.maps.mapaxes class method)": [[201, "gammapy.maps.MapAxes.from_default", false]], "from_diagonal_response() (gammapy.irf.edispkernel class method)": [[154, "gammapy.irf.EDispKernel.from_diagonal_response", false]], "from_diagonal_response() (gammapy.irf.edispkernelmap class method)": [[155, "gammapy.irf.EDispKernelMap.from_diagonal_response", false]], "from_diagonal_response() (gammapy.irf.edispmap class method)": [[156, "gammapy.irf.EDispMap.from_diagonal_response", false]], "from_dict() (gammapy.astro.darkmatter.darkmatterannihilationspectralmodel class method)": [[19, "gammapy.astro.darkmatter.DarkMatterAnnihilationSpectralModel.from_dict", false]], "from_dict() (gammapy.astro.darkmatter.darkmatterdecayspectralmodel class method)": [[20, "gammapy.astro.darkmatter.DarkMatterDecaySpectralModel.from_dict", false]], "from_dict() (gammapy.astro.darkmatter.primaryflux class method)": [[26, "gammapy.astro.darkmatter.PrimaryFlux.from_dict", false]], "from_dict() (gammapy.datasets.fluxpointsdataset class method)": [[103, "gammapy.datasets.FluxPointsDataset.from_dict", false]], "from_dict() (gammapy.datasets.mapdataset class method)": [[104, "gammapy.datasets.MapDataset.from_dict", false]], "from_dict() (gammapy.datasets.mapdatasetonoff class method)": [[107, "gammapy.datasets.MapDatasetOnOff.from_dict", false]], "from_dict() (gammapy.datasets.spectrumdataset class method)": [[111, "gammapy.datasets.SpectrumDataset.from_dict", false]], "from_dict() (gammapy.datasets.spectrumdatasetonoff class method)": [[112, "gammapy.datasets.SpectrumDatasetOnOff.from_dict", false]], "from_dict() (gammapy.modeling.models.brokenpowerlawspectralmodel class method)": [[224, "gammapy.modeling.models.BrokenPowerLawSpectralModel.from_dict", false]], "from_dict() (gammapy.modeling.models.compoundspectralmodel class method)": [[225, "gammapy.modeling.models.CompoundSpectralModel.from_dict", false]], "from_dict() (gammapy.modeling.models.constantfluxspatialmodel class method)": [[226, "gammapy.modeling.models.ConstantFluxSpatialModel.from_dict", false]], "from_dict() (gammapy.modeling.models.constantspatialmodel class method)": [[227, "gammapy.modeling.models.ConstantSpatialModel.from_dict", false]], "from_dict() (gammapy.modeling.models.constantspectralmodel class method)": [[228, "gammapy.modeling.models.ConstantSpectralModel.from_dict", false]], "from_dict() (gammapy.modeling.models.constanttemporalmodel class method)": [[229, "gammapy.modeling.models.ConstantTemporalModel.from_dict", false]], "from_dict() (gammapy.modeling.models.datasetmodels class method)": [[230, "gammapy.modeling.models.DatasetModels.from_dict", false]], "from_dict() (gammapy.modeling.models.diskspatialmodel class method)": [[231, "gammapy.modeling.models.DiskSpatialModel.from_dict", false]], "from_dict() (gammapy.modeling.models.eblabsorptionnormspectralmodel class method)": [[232, "gammapy.modeling.models.EBLAbsorptionNormSpectralModel.from_dict", false]], "from_dict() (gammapy.modeling.models.expcutoffpowerlaw3fglspectralmodel class method)": [[234, "gammapy.modeling.models.ExpCutoffPowerLaw3FGLSpectralModel.from_dict", false]], "from_dict() (gammapy.modeling.models.expcutoffpowerlawnormspectralmodel class method)": [[235, "gammapy.modeling.models.ExpCutoffPowerLawNormSpectralModel.from_dict", false]], "from_dict() (gammapy.modeling.models.expcutoffpowerlawspectralmodel class method)": [[236, "gammapy.modeling.models.ExpCutoffPowerLawSpectralModel.from_dict", false]], "from_dict() (gammapy.modeling.models.expdecaytemporalmodel class method)": [[237, "gammapy.modeling.models.ExpDecayTemporalModel.from_dict", false]], "from_dict() (gammapy.modeling.models.fovbackgroundmodel class method)": [[238, "gammapy.modeling.models.FoVBackgroundModel.from_dict", false]], "from_dict() (gammapy.modeling.models.gaussianprior class method)": [[239, "gammapy.modeling.models.GaussianPrior.from_dict", false]], "from_dict() (gammapy.modeling.models.gaussianspatialmodel class method)": [[240, "gammapy.modeling.models.GaussianSpatialModel.from_dict", false]], "from_dict() (gammapy.modeling.models.gaussianspectralmodel class method)": [[241, "gammapy.modeling.models.GaussianSpectralModel.from_dict", false]], "from_dict() (gammapy.modeling.models.gaussiantemporalmodel class method)": [[242, "gammapy.modeling.models.GaussianTemporalModel.from_dict", false]], "from_dict() (gammapy.modeling.models.generalizedgaussianspatialmodel class method)": [[243, "gammapy.modeling.models.GeneralizedGaussianSpatialModel.from_dict", false]], "from_dict() (gammapy.modeling.models.generalizedgaussiantemporalmodel class method)": [[244, "gammapy.modeling.models.GeneralizedGaussianTemporalModel.from_dict", false]], "from_dict() (gammapy.modeling.models.lightcurvetemplatetemporalmodel class method)": [[245, "gammapy.modeling.models.LightCurveTemplateTemporalModel.from_dict", false]], "from_dict() (gammapy.modeling.models.lineartemporalmodel class method)": [[246, "gammapy.modeling.models.LinearTemporalModel.from_dict", false]], "from_dict() (gammapy.modeling.models.logparabolanormspectralmodel class method)": [[247, "gammapy.modeling.models.LogParabolaNormSpectralModel.from_dict", false]], "from_dict() (gammapy.modeling.models.logparabolaspectralmodel class method)": [[248, "gammapy.modeling.models.LogParabolaSpectralModel.from_dict", false]], "from_dict() (gammapy.modeling.models.loguniformprior class method)": [[249, "gammapy.modeling.models.LogUniformPrior.from_dict", false]], "from_dict() (gammapy.modeling.models.meyercrabspectralmodel class method)": [[251, "gammapy.modeling.models.MeyerCrabSpectralModel.from_dict", false]], "from_dict() (gammapy.modeling.models.model static method)": [[252, "gammapy.modeling.models.Model.from_dict", false]], "from_dict() (gammapy.modeling.models.modelbase class method)": [[253, "gammapy.modeling.models.ModelBase.from_dict", false]], "from_dict() (gammapy.modeling.models.models class method)": [[254, "gammapy.modeling.models.Models.from_dict", false]], "from_dict() (gammapy.modeling.models.naimaspectralmodel class method)": [[255, "gammapy.modeling.models.NaimaSpectralModel.from_dict", false]], "from_dict() (gammapy.modeling.models.piecewisenormspatialmodel class method)": [[256, "gammapy.modeling.models.PiecewiseNormSpatialModel.from_dict", false]], "from_dict() (gammapy.modeling.models.piecewisenormspectralmodel class method)": [[257, "gammapy.modeling.models.PiecewiseNormSpectralModel.from_dict", false]], "from_dict() (gammapy.modeling.models.pointspatialmodel class method)": [[258, "gammapy.modeling.models.PointSpatialModel.from_dict", false]], "from_dict() (gammapy.modeling.models.powerlaw2spectralmodel class method)": [[259, "gammapy.modeling.models.PowerLaw2SpectralModel.from_dict", false]], "from_dict() (gammapy.modeling.models.powerlawnormspectralmodel class method)": [[260, "gammapy.modeling.models.PowerLawNormSpectralModel.from_dict", false]], "from_dict() (gammapy.modeling.models.powerlawspectralmodel class method)": [[261, "gammapy.modeling.models.PowerLawSpectralModel.from_dict", false]], "from_dict() (gammapy.modeling.models.powerlawtemporalmodel class method)": [[262, "gammapy.modeling.models.PowerLawTemporalModel.from_dict", false]], "from_dict() (gammapy.modeling.models.prior class method)": [[263, "gammapy.modeling.models.Prior.from_dict", false]], "from_dict() (gammapy.modeling.models.scalespectralmodel class method)": [[266, "gammapy.modeling.models.ScaleSpectralModel.from_dict", false]], "from_dict() (gammapy.modeling.models.shell2spatialmodel class method)": [[267, "gammapy.modeling.models.Shell2SpatialModel.from_dict", false]], "from_dict() (gammapy.modeling.models.shellspatialmodel class method)": [[268, "gammapy.modeling.models.ShellSpatialModel.from_dict", false]], "from_dict() (gammapy.modeling.models.sinetemporalmodel class method)": [[269, "gammapy.modeling.models.SineTemporalModel.from_dict", false]], "from_dict() (gammapy.modeling.models.skymodel class method)": [[270, "gammapy.modeling.models.SkyModel.from_dict", false]], "from_dict() (gammapy.modeling.models.smoothbrokenpowerlawspectralmodel class method)": [[271, "gammapy.modeling.models.SmoothBrokenPowerLawSpectralModel.from_dict", false]], "from_dict() (gammapy.modeling.models.spatialmodel class method)": [[272, "gammapy.modeling.models.SpatialModel.from_dict", false]], "from_dict() (gammapy.modeling.models.spectralmodel class method)": [[273, "gammapy.modeling.models.SpectralModel.from_dict", false]], "from_dict() (gammapy.modeling.models.superexpcutoffpowerlaw3fglspectralmodel class method)": [[274, "gammapy.modeling.models.SuperExpCutoffPowerLaw3FGLSpectralModel.from_dict", false]], "from_dict() (gammapy.modeling.models.superexpcutoffpowerlaw4fgldr3spectralmodel class method)": [[275, "gammapy.modeling.models.SuperExpCutoffPowerLaw4FGLDR3SpectralModel.from_dict", false]], "from_dict() (gammapy.modeling.models.superexpcutoffpowerlaw4fglspectralmodel class method)": [[276, "gammapy.modeling.models.SuperExpCutoffPowerLaw4FGLSpectralModel.from_dict", false]], "from_dict() (gammapy.modeling.models.templatendspatialmodel class method)": [[278, "gammapy.modeling.models.TemplateNDSpatialModel.from_dict", false]], "from_dict() (gammapy.modeling.models.templatendspectralmodel class method)": [[279, "gammapy.modeling.models.TemplateNDSpectralModel.from_dict", false]], "from_dict() (gammapy.modeling.models.templatenpredmodel class method)": [[280, "gammapy.modeling.models.TemplateNPredModel.from_dict", false]], "from_dict() (gammapy.modeling.models.templatephasecurvetemporalmodel class method)": [[281, "gammapy.modeling.models.TemplatePhaseCurveTemporalModel.from_dict", false]], "from_dict() (gammapy.modeling.models.templatespatialmodel class method)": [[282, "gammapy.modeling.models.TemplateSpatialModel.from_dict", false]], "from_dict() (gammapy.modeling.models.templatespectralmodel class method)": [[283, "gammapy.modeling.models.TemplateSpectralModel.from_dict", false]], "from_dict() (gammapy.modeling.models.temporalmodel class method)": [[284, "gammapy.modeling.models.TemporalModel.from_dict", false]], "from_dict() (gammapy.modeling.models.uniformprior class method)": [[285, "gammapy.modeling.models.UniformPrior.from_dict", false]], "from_dict() (gammapy.modeling.parameters class method)": [[219, "gammapy.modeling.Parameters.from_dict", false]], "from_dict() (gammapy.modeling.priorparameters class method)": [[221, "gammapy.modeling.PriorParameters.from_dict", false]], "from_dir() (gammapy.data.datastore class method)": [[82, "gammapy.data.DataStore.from_dir", false]], "from_edges() (gammapy.maps.mapaxis class method)": [[202, "gammapy.maps.MapAxis.from_edges", false]], "from_edisp_kernel() (gammapy.irf.edispkernelmap class method)": [[155, "gammapy.irf.EDispKernelMap.from_edisp_kernel", false]], "from_energy_bounds() (gammapy.maps.mapaxis class method)": [[202, "gammapy.maps.MapAxis.from_energy_bounds", false]], "from_energy_edges() (gammapy.maps.mapaxis class method)": [[202, "gammapy.maps.MapAxis.from_energy_edges", false]], "from_events_files() (gammapy.data.datastore class method)": [[82, "gammapy.data.DataStore.from_events_files", false]], "from_factor_matrix() (gammapy.modeling.covariance class method)": [[213, "gammapy.modeling.Covariance.from_factor_matrix", false]], "from_file() (gammapy.data.datastore class method)": [[82, "gammapy.data.DataStore.from_file", false]], "from_fits_header() (gammapy.data.fixedpointinginfo class method)": [[85, "gammapy.data.FixedPointingInfo.from_fits_header", false]], "from_gauss() (gammapy.irf.edispkernel class method)": [[154, "gammapy.irf.EDispKernel.from_gauss", false]], "from_gauss() (gammapy.irf.edispkernelmap class method)": [[155, "gammapy.irf.EDispKernelMap.from_gauss", false]], "from_gauss() (gammapy.irf.energydispersion2d class method)": [[159, "gammapy.irf.EnergyDispersion2D.from_gauss", false]], "from_gauss() (gammapy.irf.psfkernel class method)": [[165, "gammapy.irf.PSFKernel.from_gauss", false]], "from_gauss() (gammapy.irf.psfmap class method)": [[167, "gammapy.irf.PSFMap.from_gauss", false]], "from_gauss() (gammapy.irf.recopsfmap class method)": [[170, "gammapy.irf.RecoPSFMap.from_gauss", false]], "from_geom() (gammapy.irf.edispkernelmap class method)": [[155, "gammapy.irf.EDispKernelMap.from_geom", false]], "from_geom() (gammapy.irf.edispmap class method)": [[156, "gammapy.irf.EDispMap.from_geom", false]], "from_geom() (gammapy.irf.psfmap class method)": [[167, "gammapy.irf.PSFMap.from_geom", false]], "from_geom() (gammapy.irf.recopsfmap class method)": [[170, "gammapy.irf.RecoPSFMap.from_geom", false]], "from_geom() (gammapy.maps.hpxmap static method)": [[197, "gammapy.maps.HpxMap.from_geom", false]], "from_geom() (gammapy.maps.hpxndmap static method)": [[198, "gammapy.maps.HpxNDMap.from_geom", false]], "from_geom() (gammapy.maps.map static method)": [[200, "gammapy.maps.Map.from_geom", false]], "from_geom() (gammapy.maps.maps class method)": [[204, "gammapy.maps.Maps.from_geom", false]], "from_geom() (gammapy.maps.regionndmap static method)": [[206, "gammapy.maps.RegionNDMap.from_geom", false]], "from_geom() (gammapy.maps.wcsmap static method)": [[209, "gammapy.maps.WcsMap.from_geom", false]], "from_geom() (gammapy.maps.wcsndmap static method)": [[210, "gammapy.maps.WcsNDMap.from_geom", false]], "from_geoms() (gammapy.datasets.mapdataset class method)": [[104, "gammapy.datasets.MapDataset.from_geoms", false]], "from_geoms() (gammapy.datasets.mapdatasetonoff class method)": [[107, "gammapy.datasets.MapDatasetOnOff.from_geoms", false]], "from_geoms() (gammapy.datasets.spectrumdataset class method)": [[111, "gammapy.datasets.SpectrumDataset.from_geoms", false]], "from_geoms() (gammapy.datasets.spectrumdatasetonoff class method)": [[112, "gammapy.datasets.SpectrumDatasetOnOff.from_geoms", false]], "from_gti() (gammapy.maps.timemapaxis class method)": [[207, "gammapy.maps.TimeMapAxis.from_gti", false]], "from_gti_bounds() (gammapy.maps.timemapaxis class method)": [[207, "gammapy.maps.TimeMapAxis.from_gti_bounds", false]], "from_hdu() (gammapy.maps.hpxgeom class method)": [[196, "gammapy.maps.HpxGeom.from_hdu", false]], "from_hdu() (gammapy.maps.hpxndmap class method)": [[198, "gammapy.maps.HpxNDMap.from_hdu", false]], "from_hdu() (gammapy.maps.wcsndmap class method)": [[210, "gammapy.maps.WcsNDMap.from_hdu", false]], "from_hdulist() (gammapy.datasets.mapdataset class method)": [[104, "gammapy.datasets.MapDataset.from_hdulist", false]], "from_hdulist() (gammapy.datasets.mapdatasetonoff class method)": [[107, "gammapy.datasets.MapDatasetOnOff.from_hdulist", false]], "from_hdulist() (gammapy.datasets.spectrumdataset class method)": [[111, "gammapy.datasets.SpectrumDataset.from_hdulist", false]], "from_hdulist() (gammapy.datasets.spectrumdatasetonoff class method)": [[112, "gammapy.datasets.SpectrumDatasetOnOff.from_hdulist", false]], "from_hdulist() (gammapy.estimators.fluxmaps class method)": [[126, "gammapy.estimators.FluxMaps.from_hdulist", false]], "from_hdulist() (gammapy.estimators.fluxpoints class method)": [[128, "gammapy.estimators.FluxPoints.from_hdulist", false]], "from_hdulist() (gammapy.irf.background2d class method)": [[151, "gammapy.irf.Background2D.from_hdulist", false]], "from_hdulist() (gammapy.irf.background3d class method)": [[152, "gammapy.irf.Background3D.from_hdulist", false]], "from_hdulist() (gammapy.irf.backgroundirf class method)": [[153, "gammapy.irf.BackgroundIRF.from_hdulist", false]], "from_hdulist() (gammapy.irf.edispkernel class method)": [[154, "gammapy.irf.EDispKernel.from_hdulist", false]], "from_hdulist() (gammapy.irf.edispkernelmap class method)": [[155, "gammapy.irf.EDispKernelMap.from_hdulist", false]], "from_hdulist() (gammapy.irf.edispmap class method)": [[156, "gammapy.irf.EDispMap.from_hdulist", false]], "from_hdulist() (gammapy.irf.effectiveareatable2d class method)": [[157, "gammapy.irf.EffectiveAreaTable2D.from_hdulist", false]], "from_hdulist() (gammapy.irf.energydependentmultigausspsf class method)": [[158, "gammapy.irf.EnergyDependentMultiGaussPSF.from_hdulist", false]], "from_hdulist() (gammapy.irf.energydispersion2d class method)": [[159, "gammapy.irf.EnergyDispersion2D.from_hdulist", false]], "from_hdulist() (gammapy.irf.irf class method)": [[161, "gammapy.irf.IRF.from_hdulist", false]], "from_hdulist() (gammapy.irf.irfmap class method)": [[162, "gammapy.irf.IRFMap.from_hdulist", false]], "from_hdulist() (gammapy.irf.parametricpsf class method)": [[168, "gammapy.irf.ParametricPSF.from_hdulist", false]], "from_hdulist() (gammapy.irf.psf3d class method)": [[164, "gammapy.irf.PSF3D.from_hdulist", false]], "from_hdulist() (gammapy.irf.psfking class method)": [[166, "gammapy.irf.PSFKing.from_hdulist", false]], "from_hdulist() (gammapy.irf.psfmap class method)": [[167, "gammapy.irf.PSFMap.from_hdulist", false]], "from_hdulist() (gammapy.irf.radmax2d class method)": [[169, "gammapy.irf.RadMax2D.from_hdulist", false]], "from_hdulist() (gammapy.irf.recopsfmap class method)": [[170, "gammapy.irf.RecoPSFMap.from_hdulist", false]], "from_hdulist() (gammapy.maps.geom class method)": [[195, "gammapy.maps.Geom.from_hdulist", false]], "from_hdulist() (gammapy.maps.hpxgeom class method)": [[196, "gammapy.maps.HpxGeom.from_hdulist", false]], "from_hdulist() (gammapy.maps.hpxmap class method)": [[197, "gammapy.maps.HpxMap.from_hdulist", false]], "from_hdulist() (gammapy.maps.hpxndmap class method)": [[198, "gammapy.maps.HpxNDMap.from_hdulist", false]], "from_hdulist() (gammapy.maps.map static method)": [[200, "gammapy.maps.Map.from_hdulist", false]], "from_hdulist() (gammapy.maps.maps class method)": [[204, "gammapy.maps.Maps.from_hdulist", false]], "from_hdulist() (gammapy.maps.regiongeom class method)": [[205, "gammapy.maps.RegionGeom.from_hdulist", false]], "from_hdulist() (gammapy.maps.regionndmap class method)": [[206, "gammapy.maps.RegionNDMap.from_hdulist", false]], "from_hdulist() (gammapy.maps.wcsgeom class method)": [[208, "gammapy.maps.WcsGeom.from_hdulist", false]], "from_hdulist() (gammapy.maps.wcsmap class method)": [[209, "gammapy.maps.WcsMap.from_hdulist", false]], "from_hdulist() (gammapy.maps.wcsndmap class method)": [[210, "gammapy.maps.WcsNDMap.from_hdulist", false]], "from_header() (gammapy.data.eventlistmetadata class method)": [[84, "gammapy.data.EventListMetaData.from_header", false]], "from_header() (gammapy.data.gtimetadata class method)": [[87, "gammapy.data.GTIMetaData.from_header", false]], "from_header() (gammapy.data.observationmetadata class method)": [[91, "gammapy.data.ObservationMetaData.from_header", false]], "from_header() (gammapy.datasets.mapdatasetmetadata class method)": [[106, "gammapy.datasets.MapDatasetMetaData.from_header", false]], "from_header() (gammapy.estimators.fluxmetadata class method)": [[127, "gammapy.estimators.FluxMetaData.from_header", false]], "from_header() (gammapy.maps.hpxgeom class method)": [[196, "gammapy.maps.HpxGeom.from_header", false]], "from_header() (gammapy.maps.wcsgeom class method)": [[208, "gammapy.maps.WcsGeom.from_header", false]], "from_irf() (gammapy.irf.radmax2d class method)": [[169, "gammapy.irf.RadMax2D.from_irf", false]], "from_log10() (gammapy.modeling.models.logparabolanormspectralmodel class method)": [[247, "gammapy.modeling.models.LogParabolaNormSpectralModel.from_log10", false]], "from_log10() (gammapy.modeling.models.logparabolaspectralmodel class method)": [[248, "gammapy.modeling.models.LogParabolaSpectralModel.from_log10", false]], "from_map_dataset() (gammapy.datasets.mapdatasetonoff class method)": [[107, "gammapy.datasets.MapDatasetOnOff.from_map_dataset", false]], "from_map_dataset() (gammapy.datasets.spectrumdatasetonoff class method)": [[112, "gammapy.datasets.SpectrumDatasetOnOff.from_map_dataset", false]], "from_maps() (gammapy.estimators.fluxmaps class method)": [[126, "gammapy.estimators.FluxMaps.from_maps", false]], "from_maps() (gammapy.estimators.fluxpoints class method)": [[128, "gammapy.estimators.FluxPoints.from_maps", false]], "from_nodes() (gammapy.maps.mapaxis class method)": [[202, "gammapy.maps.MapAxis.from_nodes", false]], "from_orm() (gammapy.analysis.analysisconfig class method)": [[16, "gammapy.analysis.AnalysisConfig.from_orm", false]], "from_orm() (gammapy.data.eventlistmetadata class method)": [[84, "gammapy.data.EventListMetaData.from_orm", false]], "from_orm() (gammapy.data.gtimetadata class method)": [[87, "gammapy.data.GTIMetaData.from_orm", false]], "from_orm() (gammapy.data.observationmetadata class method)": [[91, "gammapy.data.ObservationMetaData.from_orm", false]], "from_orm() (gammapy.datasets.mapdatasetmetadata class method)": [[106, "gammapy.datasets.MapDatasetMetaData.from_orm", false]], "from_orm() (gammapy.estimators.fluxmetadata class method)": [[127, "gammapy.estimators.FluxMetaData.from_orm", false]], "from_pandas() (gammapy.data.hduindextable class method)": [[88, "gammapy.data.HDUIndexTable.from_pandas", false]], "from_pandas() (gammapy.data.observationtable class method)": [[92, "gammapy.data.ObservationTable.from_pandas", false]], "from_parameters() (gammapy.astro.darkmatter.darkmatterannihilationspectralmodel class method)": [[19, "gammapy.astro.darkmatter.DarkMatterAnnihilationSpectralModel.from_parameters", false]], "from_parameters() (gammapy.astro.darkmatter.darkmatterdecayspectralmodel class method)": [[20, "gammapy.astro.darkmatter.DarkMatterDecaySpectralModel.from_parameters", false]], "from_parameters() (gammapy.astro.darkmatter.primaryflux class method)": [[26, "gammapy.astro.darkmatter.PrimaryFlux.from_parameters", false]], "from_parameters() (gammapy.modeling.models.brokenpowerlawspectralmodel class method)": [[224, "gammapy.modeling.models.BrokenPowerLawSpectralModel.from_parameters", false]], "from_parameters() (gammapy.modeling.models.compoundspectralmodel class method)": [[225, "gammapy.modeling.models.CompoundSpectralModel.from_parameters", false]], "from_parameters() (gammapy.modeling.models.constantfluxspatialmodel class method)": [[226, "gammapy.modeling.models.ConstantFluxSpatialModel.from_parameters", false]], "from_parameters() (gammapy.modeling.models.constantspatialmodel class method)": [[227, "gammapy.modeling.models.ConstantSpatialModel.from_parameters", false]], "from_parameters() (gammapy.modeling.models.constantspectralmodel class method)": [[228, "gammapy.modeling.models.ConstantSpectralModel.from_parameters", false]], "from_parameters() (gammapy.modeling.models.constanttemporalmodel class method)": [[229, "gammapy.modeling.models.ConstantTemporalModel.from_parameters", false]], "from_parameters() (gammapy.modeling.models.diskspatialmodel class method)": [[231, "gammapy.modeling.models.DiskSpatialModel.from_parameters", false]], "from_parameters() (gammapy.modeling.models.eblabsorptionnormspectralmodel class method)": [[232, "gammapy.modeling.models.EBLAbsorptionNormSpectralModel.from_parameters", false]], "from_parameters() (gammapy.modeling.models.expcutoffpowerlaw3fglspectralmodel class method)": [[234, "gammapy.modeling.models.ExpCutoffPowerLaw3FGLSpectralModel.from_parameters", false]], "from_parameters() (gammapy.modeling.models.expcutoffpowerlawnormspectralmodel class method)": [[235, "gammapy.modeling.models.ExpCutoffPowerLawNormSpectralModel.from_parameters", false]], "from_parameters() (gammapy.modeling.models.expcutoffpowerlawspectralmodel class method)": [[236, "gammapy.modeling.models.ExpCutoffPowerLawSpectralModel.from_parameters", false]], "from_parameters() (gammapy.modeling.models.expdecaytemporalmodel class method)": [[237, "gammapy.modeling.models.ExpDecayTemporalModel.from_parameters", false]], "from_parameters() (gammapy.modeling.models.fovbackgroundmodel class method)": [[238, "gammapy.modeling.models.FoVBackgroundModel.from_parameters", false]], "from_parameters() (gammapy.modeling.models.gaussianprior class method)": [[239, "gammapy.modeling.models.GaussianPrior.from_parameters", false]], "from_parameters() (gammapy.modeling.models.gaussianspatialmodel class method)": [[240, "gammapy.modeling.models.GaussianSpatialModel.from_parameters", false]], "from_parameters() (gammapy.modeling.models.gaussianspectralmodel class method)": [[241, "gammapy.modeling.models.GaussianSpectralModel.from_parameters", false]], "from_parameters() (gammapy.modeling.models.gaussiantemporalmodel class method)": [[242, "gammapy.modeling.models.GaussianTemporalModel.from_parameters", false]], "from_parameters() (gammapy.modeling.models.generalizedgaussianspatialmodel class method)": [[243, "gammapy.modeling.models.GeneralizedGaussianSpatialModel.from_parameters", false]], "from_parameters() (gammapy.modeling.models.generalizedgaussiantemporalmodel class method)": [[244, "gammapy.modeling.models.GeneralizedGaussianTemporalModel.from_parameters", false]], "from_parameters() (gammapy.modeling.models.lightcurvetemplatetemporalmodel class method)": [[245, "gammapy.modeling.models.LightCurveTemplateTemporalModel.from_parameters", false]], "from_parameters() (gammapy.modeling.models.lineartemporalmodel class method)": [[246, "gammapy.modeling.models.LinearTemporalModel.from_parameters", false]], "from_parameters() (gammapy.modeling.models.logparabolanormspectralmodel class method)": [[247, "gammapy.modeling.models.LogParabolaNormSpectralModel.from_parameters", false]], "from_parameters() (gammapy.modeling.models.logparabolaspectralmodel class method)": [[248, "gammapy.modeling.models.LogParabolaSpectralModel.from_parameters", false]], "from_parameters() (gammapy.modeling.models.loguniformprior class method)": [[249, "gammapy.modeling.models.LogUniformPrior.from_parameters", false]], "from_parameters() (gammapy.modeling.models.meyercrabspectralmodel class method)": [[251, "gammapy.modeling.models.MeyerCrabSpectralModel.from_parameters", false]], "from_parameters() (gammapy.modeling.models.modelbase class method)": [[253, "gammapy.modeling.models.ModelBase.from_parameters", false]], "from_parameters() (gammapy.modeling.models.naimaspectralmodel class method)": [[255, "gammapy.modeling.models.NaimaSpectralModel.from_parameters", false]], "from_parameters() (gammapy.modeling.models.piecewisenormspatialmodel class method)": [[256, "gammapy.modeling.models.PiecewiseNormSpatialModel.from_parameters", false]], "from_parameters() (gammapy.modeling.models.piecewisenormspectralmodel class method)": [[257, "gammapy.modeling.models.PiecewiseNormSpectralModel.from_parameters", false]], "from_parameters() (gammapy.modeling.models.pointspatialmodel class method)": [[258, "gammapy.modeling.models.PointSpatialModel.from_parameters", false]], "from_parameters() (gammapy.modeling.models.powerlaw2spectralmodel class method)": [[259, "gammapy.modeling.models.PowerLaw2SpectralModel.from_parameters", false]], "from_parameters() (gammapy.modeling.models.powerlawnormspectralmodel class method)": [[260, "gammapy.modeling.models.PowerLawNormSpectralModel.from_parameters", false]], "from_parameters() (gammapy.modeling.models.powerlawspectralmodel class method)": [[261, "gammapy.modeling.models.PowerLawSpectralModel.from_parameters", false]], "from_parameters() (gammapy.modeling.models.powerlawtemporalmodel class method)": [[262, "gammapy.modeling.models.PowerLawTemporalModel.from_parameters", false]], "from_parameters() (gammapy.modeling.models.prior class method)": [[263, "gammapy.modeling.models.Prior.from_parameters", false]], "from_parameters() (gammapy.modeling.models.scalespectralmodel class method)": [[266, "gammapy.modeling.models.ScaleSpectralModel.from_parameters", false]], "from_parameters() (gammapy.modeling.models.shell2spatialmodel class method)": [[267, "gammapy.modeling.models.Shell2SpatialModel.from_parameters", false]], "from_parameters() (gammapy.modeling.models.shellspatialmodel class method)": [[268, "gammapy.modeling.models.ShellSpatialModel.from_parameters", false]], "from_parameters() (gammapy.modeling.models.sinetemporalmodel class method)": [[269, "gammapy.modeling.models.SineTemporalModel.from_parameters", false]], "from_parameters() (gammapy.modeling.models.skymodel class method)": [[270, "gammapy.modeling.models.SkyModel.from_parameters", false]], "from_parameters() (gammapy.modeling.models.smoothbrokenpowerlawspectralmodel class method)": [[271, "gammapy.modeling.models.SmoothBrokenPowerLawSpectralModel.from_parameters", false]], "from_parameters() (gammapy.modeling.models.spatialmodel class method)": [[272, "gammapy.modeling.models.SpatialModel.from_parameters", false]], "from_parameters() (gammapy.modeling.models.spectralmodel class method)": [[273, "gammapy.modeling.models.SpectralModel.from_parameters", false]], "from_parameters() (gammapy.modeling.models.superexpcutoffpowerlaw3fglspectralmodel class method)": [[274, "gammapy.modeling.models.SuperExpCutoffPowerLaw3FGLSpectralModel.from_parameters", false]], "from_parameters() (gammapy.modeling.models.superexpcutoffpowerlaw4fgldr3spectralmodel class method)": [[275, "gammapy.modeling.models.SuperExpCutoffPowerLaw4FGLDR3SpectralModel.from_parameters", false]], "from_parameters() (gammapy.modeling.models.superexpcutoffpowerlaw4fglspectralmodel class method)": [[276, "gammapy.modeling.models.SuperExpCutoffPowerLaw4FGLSpectralModel.from_parameters", false]], "from_parameters() (gammapy.modeling.models.templatendspatialmodel class method)": [[278, "gammapy.modeling.models.TemplateNDSpatialModel.from_parameters", false]], "from_parameters() (gammapy.modeling.models.templatendspectralmodel class method)": [[279, "gammapy.modeling.models.TemplateNDSpectralModel.from_parameters", false]], "from_parameters() (gammapy.modeling.models.templatenpredmodel class method)": [[280, "gammapy.modeling.models.TemplateNPredModel.from_parameters", false]], "from_parameters() (gammapy.modeling.models.templatephasecurvetemporalmodel class method)": [[281, "gammapy.modeling.models.TemplatePhaseCurveTemporalModel.from_parameters", false]], "from_parameters() (gammapy.modeling.models.templatespatialmodel class method)": [[282, "gammapy.modeling.models.TemplateSpatialModel.from_parameters", false]], "from_parameters() (gammapy.modeling.models.templatespectralmodel class method)": [[283, "gammapy.modeling.models.TemplateSpectralModel.from_parameters", false]], "from_parameters() (gammapy.modeling.models.temporalmodel class method)": [[284, "gammapy.modeling.models.TemporalModel.from_parameters", false]], "from_parameters() (gammapy.modeling.models.uniformprior class method)": [[285, "gammapy.modeling.models.UniformPrior.from_parameters", false]], "from_parametrization() (gammapy.irf.effectiveareatable2d class method)": [[157, "gammapy.irf.EffectiveAreaTable2D.from_parametrization", false]], "from_position() (gammapy.modeling.models.constantfluxspatialmodel class method)": [[226, "gammapy.modeling.models.ConstantFluxSpatialModel.from_position", false]], "from_position() (gammapy.modeling.models.constantspatialmodel class method)": [[227, "gammapy.modeling.models.ConstantSpatialModel.from_position", false]], "from_position() (gammapy.modeling.models.diskspatialmodel class method)": [[231, "gammapy.modeling.models.DiskSpatialModel.from_position", false]], "from_position() (gammapy.modeling.models.gaussianspatialmodel class method)": [[240, "gammapy.modeling.models.GaussianSpatialModel.from_position", false]], "from_position() (gammapy.modeling.models.generalizedgaussianspatialmodel class method)": [[243, "gammapy.modeling.models.GeneralizedGaussianSpatialModel.from_position", false]], "from_position() (gammapy.modeling.models.piecewisenormspatialmodel class method)": [[256, "gammapy.modeling.models.PiecewiseNormSpatialModel.from_position", false]], "from_position() (gammapy.modeling.models.pointspatialmodel class method)": [[258, "gammapy.modeling.models.PointSpatialModel.from_position", false]], "from_position() (gammapy.modeling.models.shell2spatialmodel class method)": [[267, "gammapy.modeling.models.Shell2SpatialModel.from_position", false]], "from_position() (gammapy.modeling.models.shellspatialmodel class method)": [[268, "gammapy.modeling.models.ShellSpatialModel.from_position", false]], "from_position() (gammapy.modeling.models.spatialmodel class method)": [[272, "gammapy.modeling.models.SpatialModel.from_position", false]], "from_position() (gammapy.modeling.models.templatendspatialmodel class method)": [[278, "gammapy.modeling.models.TemplateNDSpatialModel.from_position", false]], "from_position() (gammapy.modeling.models.templatespatialmodel class method)": [[282, "gammapy.modeling.models.TemplateSpatialModel.from_position", false]], "from_region() (gammapy.modeling.models.diskspatialmodel class method)": [[231, "gammapy.modeling.models.DiskSpatialModel.from_region", false]], "from_region_map() (gammapy.modeling.models.templatespectralmodel class method)": [[283, "gammapy.modeling.models.TemplateSpectralModel.from_region_map", false]], "from_regions() (gammapy.maps.regiongeom class method)": [[205, "gammapy.maps.RegionGeom.from_regions", false]], "from_spatial_model() (gammapy.irf.psfkernel class method)": [[165, "gammapy.irf.PSFKernel.from_spatial_model", false]], "from_spectrum_dataset() (gammapy.datasets.spectrumdatasetonoff class method)": [[112, "gammapy.datasets.SpectrumDatasetOnOff.from_spectrum_dataset", false]], "from_stack() (gammapy.data.eventlist class method)": [[83, "gammapy.data.EventList.from_stack", false]], "from_stack() (gammapy.data.gti class method)": [[86, "gammapy.data.GTI.from_stack", false]], "from_stack() (gammapy.data.observations class method)": [[93, "gammapy.data.Observations.from_stack", false]], "from_stack() (gammapy.estimators.fluxmaps class method)": [[126, "gammapy.estimators.FluxMaps.from_stack", false]], "from_stack() (gammapy.estimators.fluxpoints class method)": [[128, "gammapy.estimators.FluxPoints.from_stack", false]], "from_stack() (gammapy.maps.hpxmap class method)": [[197, "gammapy.maps.HpxMap.from_stack", false]], "from_stack() (gammapy.maps.hpxndmap class method)": [[198, "gammapy.maps.HpxNDMap.from_stack", false]], "from_stack() (gammapy.maps.labelmapaxis class method)": [[199, "gammapy.maps.LabelMapAxis.from_stack", false]], "from_stack() (gammapy.maps.map class method)": [[200, "gammapy.maps.Map.from_stack", false]], "from_stack() (gammapy.maps.mapaxis class method)": [[202, "gammapy.maps.MapAxis.from_stack", false]], "from_stack() (gammapy.maps.regionndmap class method)": [[206, "gammapy.maps.RegionNDMap.from_stack", false]], "from_stack() (gammapy.maps.wcsmap class method)": [[209, "gammapy.maps.WcsMap.from_stack", false]], "from_stack() (gammapy.maps.wcsndmap class method)": [[210, "gammapy.maps.WcsNDMap.from_stack", false]], "from_stack() (gammapy.modeling.covariance class method)": [[213, "gammapy.modeling.Covariance.from_stack", false]], "from_stack() (gammapy.modeling.parameters class method)": [[219, "gammapy.modeling.Parameters.from_stack", false]], "from_stack() (gammapy.modeling.priorparameters class method)": [[221, "gammapy.modeling.PriorParameters.from_stack", false]], "from_table() (gammapy.estimators.fluxpoints class method)": [[128, "gammapy.estimators.FluxPoints.from_table", false]], "from_table() (gammapy.irf.background2d class method)": [[151, "gammapy.irf.Background2D.from_table", false]], "from_table() (gammapy.irf.background3d class method)": [[152, "gammapy.irf.Background3D.from_table", false]], "from_table() (gammapy.irf.backgroundirf class method)": [[153, "gammapy.irf.BackgroundIRF.from_table", false]], "from_table() (gammapy.irf.edispkernel class method)": [[154, "gammapy.irf.EDispKernel.from_table", false]], "from_table() (gammapy.irf.effectiveareatable2d class method)": [[157, "gammapy.irf.EffectiveAreaTable2D.from_table", false]], "from_table() (gammapy.irf.energydependentmultigausspsf class method)": [[158, "gammapy.irf.EnergyDependentMultiGaussPSF.from_table", false]], "from_table() (gammapy.irf.energydispersion2d class method)": [[159, "gammapy.irf.EnergyDispersion2D.from_table", false]], "from_table() (gammapy.irf.irf class method)": [[161, "gammapy.irf.IRF.from_table", false]], "from_table() (gammapy.irf.parametricpsf class method)": [[168, "gammapy.irf.ParametricPSF.from_table", false]], "from_table() (gammapy.irf.psf3d class method)": [[164, "gammapy.irf.PSF3D.from_table", false]], "from_table() (gammapy.irf.psfking class method)": [[166, "gammapy.irf.PSFKing.from_table", false]], "from_table() (gammapy.irf.radmax2d class method)": [[169, "gammapy.irf.RadMax2D.from_table", false]], "from_table() (gammapy.maps.labelmapaxis class method)": [[199, "gammapy.maps.LabelMapAxis.from_table", false]], "from_table() (gammapy.maps.mapaxes class method)": [[201, "gammapy.maps.MapAxes.from_table", false]], "from_table() (gammapy.maps.mapaxis class method)": [[202, "gammapy.maps.MapAxis.from_table", false]], "from_table() (gammapy.maps.regionndmap class method)": [[206, "gammapy.maps.RegionNDMap.from_table", false]], "from_table() (gammapy.maps.timemapaxis class method)": [[207, "gammapy.maps.TimeMapAxis.from_table", false]], "from_table() (gammapy.modeling.models.lightcurvetemplatetemporalmodel class method)": [[245, "gammapy.modeling.models.LightCurveTemplateTemporalModel.from_table", false]], "from_table_hdu() (gammapy.data.gti class method)": [[86, "gammapy.data.GTI.from_table_hdu", false]], "from_table_hdu() (gammapy.maps.mapaxes class method)": [[201, "gammapy.maps.MapAxes.from_table_hdu", false]], "from_table_hdu() (gammapy.maps.mapaxis class method)": [[202, "gammapy.maps.MapAxis.from_table_hdu", false]], "from_time_bounds() (gammapy.maps.timemapaxis class method)": [[207, "gammapy.maps.TimeMapAxis.from_time_bounds", false]], "from_time_edges() (gammapy.maps.timemapaxis class method)": [[207, "gammapy.maps.TimeMapAxis.from_time_edges", false]], "from_time_intervals() (gammapy.data.gti class method)": [[86, "gammapy.data.GTI.from_time_intervals", false]], "from_ultranest() (gammapy.modeling.samplerresult class method)": [[223, "gammapy.modeling.SamplerResult.from_ultranest", false]], "from_wcs_tiles() (gammapy.maps.hpxndmap class method)": [[198, "gammapy.maps.HpxNDMap.from_wcs_tiles", false]], "from_yaml() (gammapy.analysis.analysisconfig class method)": [[16, "gammapy.analysis.AnalysisConfig.from_yaml", false]], "from_yaml() (gammapy.modeling.models.datasetmodels class method)": [[230, "gammapy.modeling.models.DatasetModels.from_yaml", false]], "from_yaml() (gammapy.modeling.models.models class method)": [[254, "gammapy.modeling.models.Models.from_yaml", false]], "from_yaml() (in module gammapy.utils.scripts)": [[357, "gammapy.utils.scripts.from_yaml", false]], "frozen (gammapy.astro.darkmatter.darkmatterannihilationspectralmodel attribute)": [[19, "gammapy.astro.darkmatter.DarkMatterAnnihilationSpectralModel.frozen", false]], "frozen (gammapy.astro.darkmatter.darkmatterdecayspectralmodel attribute)": [[20, "gammapy.astro.darkmatter.DarkMatterDecaySpectralModel.frozen", false]], "frozen (gammapy.astro.darkmatter.primaryflux attribute)": [[26, "gammapy.astro.darkmatter.PrimaryFlux.frozen", false]], "frozen (gammapy.modeling.models.brokenpowerlawspectralmodel attribute)": [[224, "gammapy.modeling.models.BrokenPowerLawSpectralModel.frozen", false]], "frozen (gammapy.modeling.models.compoundspectralmodel attribute)": [[225, "gammapy.modeling.models.CompoundSpectralModel.frozen", false]], "frozen (gammapy.modeling.models.constantfluxspatialmodel attribute)": [[226, "gammapy.modeling.models.ConstantFluxSpatialModel.frozen", false]], "frozen (gammapy.modeling.models.constantspatialmodel attribute)": [[227, "gammapy.modeling.models.ConstantSpatialModel.frozen", false]], "frozen (gammapy.modeling.models.constantspectralmodel attribute)": [[228, "gammapy.modeling.models.ConstantSpectralModel.frozen", false]], "frozen (gammapy.modeling.models.constanttemporalmodel attribute)": [[229, "gammapy.modeling.models.ConstantTemporalModel.frozen", false]], "frozen (gammapy.modeling.models.datasetmodels attribute)": [[230, "gammapy.modeling.models.DatasetModels.frozen", false]], "frozen (gammapy.modeling.models.diskspatialmodel attribute)": [[231, "gammapy.modeling.models.DiskSpatialModel.frozen", false]], "frozen (gammapy.modeling.models.eblabsorptionnormspectralmodel attribute)": [[232, "gammapy.modeling.models.EBLAbsorptionNormSpectralModel.frozen", false]], "frozen (gammapy.modeling.models.expcutoffpowerlaw3fglspectralmodel attribute)": [[234, "gammapy.modeling.models.ExpCutoffPowerLaw3FGLSpectralModel.frozen", false]], "frozen (gammapy.modeling.models.expcutoffpowerlawnormspectralmodel attribute)": [[235, "gammapy.modeling.models.ExpCutoffPowerLawNormSpectralModel.frozen", false]], "frozen (gammapy.modeling.models.expcutoffpowerlawspectralmodel attribute)": [[236, "gammapy.modeling.models.ExpCutoffPowerLawSpectralModel.frozen", false]], "frozen (gammapy.modeling.models.expdecaytemporalmodel attribute)": [[237, "gammapy.modeling.models.ExpDecayTemporalModel.frozen", false]], "frozen (gammapy.modeling.models.fovbackgroundmodel attribute)": [[238, "gammapy.modeling.models.FoVBackgroundModel.frozen", false]], "frozen (gammapy.modeling.models.gaussianprior attribute)": [[239, "gammapy.modeling.models.GaussianPrior.frozen", false]], "frozen (gammapy.modeling.models.gaussianspatialmodel attribute)": [[240, "gammapy.modeling.models.GaussianSpatialModel.frozen", false]], "frozen (gammapy.modeling.models.gaussianspectralmodel attribute)": [[241, "gammapy.modeling.models.GaussianSpectralModel.frozen", false]], "frozen (gammapy.modeling.models.gaussiantemporalmodel attribute)": [[242, "gammapy.modeling.models.GaussianTemporalModel.frozen", false]], "frozen (gammapy.modeling.models.generalizedgaussianspatialmodel attribute)": [[243, "gammapy.modeling.models.GeneralizedGaussianSpatialModel.frozen", false]], "frozen (gammapy.modeling.models.generalizedgaussiantemporalmodel attribute)": [[244, "gammapy.modeling.models.GeneralizedGaussianTemporalModel.frozen", false]], "frozen (gammapy.modeling.models.lightcurvetemplatetemporalmodel attribute)": [[245, "gammapy.modeling.models.LightCurveTemplateTemporalModel.frozen", false]], "frozen (gammapy.modeling.models.lineartemporalmodel attribute)": [[246, "gammapy.modeling.models.LinearTemporalModel.frozen", false]], "frozen (gammapy.modeling.models.logparabolanormspectralmodel attribute)": [[247, "gammapy.modeling.models.LogParabolaNormSpectralModel.frozen", false]], "frozen (gammapy.modeling.models.logparabolaspectralmodel attribute)": [[248, "gammapy.modeling.models.LogParabolaSpectralModel.frozen", false]], "frozen (gammapy.modeling.models.loguniformprior attribute)": [[249, "gammapy.modeling.models.LogUniformPrior.frozen", false]], "frozen (gammapy.modeling.models.meyercrabspectralmodel attribute)": [[251, "gammapy.modeling.models.MeyerCrabSpectralModel.frozen", false]], "frozen (gammapy.modeling.models.modelbase attribute)": [[253, "gammapy.modeling.models.ModelBase.frozen", false]], "frozen (gammapy.modeling.models.models attribute)": [[254, "gammapy.modeling.models.Models.frozen", false]], "frozen (gammapy.modeling.models.naimaspectralmodel attribute)": [[255, "gammapy.modeling.models.NaimaSpectralModel.frozen", false]], "frozen (gammapy.modeling.models.piecewisenormspatialmodel attribute)": [[256, "gammapy.modeling.models.PiecewiseNormSpatialModel.frozen", false]], "frozen (gammapy.modeling.models.piecewisenormspectralmodel attribute)": [[257, "gammapy.modeling.models.PiecewiseNormSpectralModel.frozen", false]], "frozen (gammapy.modeling.models.pointspatialmodel attribute)": [[258, "gammapy.modeling.models.PointSpatialModel.frozen", false]], "frozen (gammapy.modeling.models.powerlaw2spectralmodel attribute)": [[259, "gammapy.modeling.models.PowerLaw2SpectralModel.frozen", false]], "frozen (gammapy.modeling.models.powerlawnormspectralmodel attribute)": [[260, "gammapy.modeling.models.PowerLawNormSpectralModel.frozen", false]], "frozen (gammapy.modeling.models.powerlawspectralmodel attribute)": [[261, "gammapy.modeling.models.PowerLawSpectralModel.frozen", false]], "frozen (gammapy.modeling.models.powerlawtemporalmodel attribute)": [[262, "gammapy.modeling.models.PowerLawTemporalModel.frozen", false]], "frozen (gammapy.modeling.models.prior attribute)": [[263, "gammapy.modeling.models.Prior.frozen", false]], "frozen (gammapy.modeling.models.scalespectralmodel attribute)": [[266, "gammapy.modeling.models.ScaleSpectralModel.frozen", false]], "frozen (gammapy.modeling.models.shell2spatialmodel attribute)": [[267, "gammapy.modeling.models.Shell2SpatialModel.frozen", false]], "frozen (gammapy.modeling.models.shellspatialmodel attribute)": [[268, "gammapy.modeling.models.ShellSpatialModel.frozen", false]], "frozen (gammapy.modeling.models.sinetemporalmodel attribute)": [[269, "gammapy.modeling.models.SineTemporalModel.frozen", false]], "frozen (gammapy.modeling.models.skymodel attribute)": [[270, "gammapy.modeling.models.SkyModel.frozen", false]], "frozen (gammapy.modeling.models.smoothbrokenpowerlawspectralmodel attribute)": [[271, "gammapy.modeling.models.SmoothBrokenPowerLawSpectralModel.frozen", false]], "frozen (gammapy.modeling.models.spatialmodel attribute)": [[272, "gammapy.modeling.models.SpatialModel.frozen", false]], "frozen (gammapy.modeling.models.spectralmodel attribute)": [[273, "gammapy.modeling.models.SpectralModel.frozen", false]], "frozen (gammapy.modeling.models.superexpcutoffpowerlaw3fglspectralmodel attribute)": [[274, "gammapy.modeling.models.SuperExpCutoffPowerLaw3FGLSpectralModel.frozen", false]], "frozen (gammapy.modeling.models.superexpcutoffpowerlaw4fgldr3spectralmodel attribute)": [[275, "gammapy.modeling.models.SuperExpCutoffPowerLaw4FGLDR3SpectralModel.frozen", false]], "frozen (gammapy.modeling.models.superexpcutoffpowerlaw4fglspectralmodel attribute)": [[276, "gammapy.modeling.models.SuperExpCutoffPowerLaw4FGLSpectralModel.frozen", false]], "frozen (gammapy.modeling.models.templatendspatialmodel attribute)": [[278, "gammapy.modeling.models.TemplateNDSpatialModel.frozen", false]], "frozen (gammapy.modeling.models.templatendspectralmodel attribute)": [[279, "gammapy.modeling.models.TemplateNDSpectralModel.frozen", false]], "frozen (gammapy.modeling.models.templatenpredmodel attribute)": [[280, "gammapy.modeling.models.TemplateNPredModel.frozen", false]], "frozen (gammapy.modeling.models.templatephasecurvetemporalmodel attribute)": [[281, "gammapy.modeling.models.TemplatePhaseCurveTemporalModel.frozen", false]], "frozen (gammapy.modeling.models.templatespatialmodel attribute)": [[282, "gammapy.modeling.models.TemplateSpatialModel.frozen", false]], "frozen (gammapy.modeling.models.templatespectralmodel attribute)": [[283, "gammapy.modeling.models.TemplateSpectralModel.frozen", false]], "frozen (gammapy.modeling.models.temporalmodel attribute)": [[284, "gammapy.modeling.models.TemporalModel.frozen", false]], "frozen (gammapy.modeling.models.uniformprior attribute)": [[285, "gammapy.modeling.models.UniformPrior.frozen", false]], "frozen (gammapy.modeling.parameter attribute)": [[218, "gammapy.modeling.Parameter.frozen", false]], "frozen (gammapy.modeling.priorparameter attribute)": [[220, "gammapy.modeling.PriorParameter.frozen", false]], "gadf": [[608, "term-GADF", true]], "galactic (gammapy.data.eventlist attribute)": [[83, "gammapy.data.EventList.galactic", false]], "galactic() (in module gammapy.utils.coordinates)": [[324, "gammapy.utils.coordinates.galactic", false]], "galactic_median (gammapy.data.eventlist attribute)": [[83, "gammapy.data.EventList.galactic_median", false]], "gammapy command line option": [[11, "cmdoption-gammapy-ignore-warnings", false], [11, "cmdoption-gammapy-log-level", false], [11, "cmdoption-gammapy-version", false]], "gammapy-analysis-config command line option": [[11, "cmdoption-gammapy-analysis-config-filename", false], [11, "cmdoption-gammapy-analysis-config-overwrite", false]], "gammapy-analysis-run command line option": [[11, "cmdoption-gammapy-analysis-run-filename", false], [11, "cmdoption-gammapy-analysis-run-out", false], [11, "cmdoption-gammapy-analysis-run-overwrite", false]], "gammapy-download-datasets command line option": [[11, "cmdoption-gammapy-download-datasets-out", false], [11, "cmdoption-gammapy-download-datasets-release", false]], "gammapy-download-notebooks command line option": [[11, "cmdoption-gammapy-download-notebooks-out", false], [11, "cmdoption-gammapy-download-notebooks-release", false]], "gammapy-info command line option": [[11, "cmdoption-gammapy-info-dependencies", false], [11, "cmdoption-gammapy-info-envvar", false], [11, "cmdoption-gammapy-info-system", false], [11, "cmdoption-gammapy-info-version", false]], "gammapy-workflow-config command line option": [[11, "cmdoption-gammapy-workflow-config-filename", false], [11, "cmdoption-gammapy-workflow-config-overwrite", false]], "gammapy-workflow-run command line option": [[11, "cmdoption-gammapy-workflow-run-filename", false]], "gammapy.analysis": [[0, "module-gammapy.analysis", false]], "gammapy.astro.darkmatter": [[1, "module-gammapy.astro.darkmatter", false]], "gammapy.astro.population": [[1, "module-gammapy.astro.population", false]], "gammapy.astro.source": [[1, "module-gammapy.astro.source", false]], "gammapy.catalog": [[2, "module-gammapy.catalog", false]], "gammapy.data": [[3, "module-gammapy.data", false]], "gammapy.datasets": [[4, "module-gammapy.datasets", false]], "gammapy.datasets.utils": [[4, "module-gammapy.datasets.utils", false]], "gammapy.estimators": [[5, "module-gammapy.estimators", false]], "gammapy.estimators.utils": [[5, "module-gammapy.estimators.utils", false]], "gammapy.irf": [[7, "module-gammapy.irf", false]], "gammapy.makers": [[8, "module-gammapy.makers", false]], "gammapy.makers.utils": [[8, "module-gammapy.makers.utils", false]], "gammapy.maps": [[9, "module-gammapy.maps", false]], "gammapy.modeling": [[10, "module-gammapy.modeling", false]], "gammapy.modeling.models": [[10, "module-gammapy.modeling.models", false]], "gammapy.modeling.models.utils": [[10, "module-gammapy.modeling.models.utils", false]], "gammapy.stats": [[12, "module-gammapy.stats", false]], "gammapy.utils.cluster": [[13, "module-gammapy.utils.cluster", false]], "gammapy.utils.coordinates": [[13, "module-gammapy.utils.coordinates", false]], "gammapy.utils.fits": [[13, "module-gammapy.utils.fits", false]], "gammapy.utils.integrate": [[13, "module-gammapy.utils.integrate", false]], "gammapy.utils.interpolation": [[13, "module-gammapy.utils.interpolation", false]], "gammapy.utils.parallel": [[13, "module-gammapy.utils.parallel", false]], "gammapy.utils.random": [[13, "module-gammapy.utils.random", false]], "gammapy.utils.regions": [[13, "module-gammapy.utils.regions", false]], "gammapy.utils.scripts": [[13, "module-gammapy.utils.scripts", false]], "gammapy.utils.table": [[13, "module-gammapy.utils.table", false]], "gammapy.utils.testing": [[13, "module-gammapy.utils.testing", false]], "gammapy.utils.time": [[13, "module-gammapy.utils.time", false]], "gammapy.utils.units": [[13, "module-gammapy.utils.units", false]], "gammapy.visualization": [[14, "module-gammapy.visualization", false]], "gaussian_component() (gammapy.catalog.sourcecataloghgps method)": [[67, "gammapy.catalog.SourceCatalogHGPS.gaussian_component", false]], "gaussianprior (class in gammapy.modeling.models)": [[239, "gammapy.modeling.models.GaussianPrior", false]], "gaussianspatialmodel (class in gammapy.modeling.models)": [[240, "gammapy.modeling.models.GaussianSpatialModel", false]], "gaussianspectralmodel (class in gammapy.modeling.models)": [[241, "gammapy.modeling.models.GaussianSpectralModel", false]], "gaussiantemporalmodel (class in gammapy.modeling.models)": [[242, "gammapy.modeling.models.GaussianTemporalModel", false]], "generalizedgaussianspatialmodel (class in gammapy.modeling.models)": [[243, "gammapy.modeling.models.GeneralizedGaussianSpatialModel", false]], "generalizedgaussiantemporalmodel (class in gammapy.modeling.models)": [[244, "gammapy.modeling.models.GeneralizedGaussianTemporalModel", false]], "geom (class in gammapy.maps)": [[195, "gammapy.maps.Geom", false]], "geom (gammapy.estimators.fluxmaps attribute)": [[126, "gammapy.estimators.FluxMaps.geom", false]], "geom (gammapy.estimators.fluxpoints attribute)": [[128, "gammapy.estimators.FluxPoints.geom", false]], "geom (gammapy.maps.hpxmap attribute)": [[197, "gammapy.maps.HpxMap.geom", false]], "geom (gammapy.maps.hpxndmap attribute)": [[198, "gammapy.maps.HpxNDMap.geom", false]], "geom (gammapy.maps.map attribute)": [[200, "gammapy.maps.Map.geom", false]], "geom (gammapy.maps.maps attribute)": [[204, "gammapy.maps.Maps.geom", false]], "geom (gammapy.maps.regionndmap attribute)": [[206, "gammapy.maps.RegionNDMap.geom", false]], "geom (gammapy.maps.wcsmap attribute)": [[209, "gammapy.maps.WcsMap.geom", false]], "geom (gammapy.maps.wcsndmap attribute)": [[210, "gammapy.maps.WcsNDMap.geom", false]], "geoms (gammapy.datasets.mapdataset attribute)": [[104, "gammapy.datasets.MapDataset.geoms", false]], "geoms (gammapy.datasets.mapdatasetonoff attribute)": [[107, "gammapy.datasets.MapDatasetOnOff.geoms", false]], "geoms (gammapy.datasets.spectrumdataset attribute)": [[111, "gammapy.datasets.SpectrumDataset.geoms", false]], "geoms (gammapy.datasets.spectrumdatasetonoff attribute)": [[112, "gammapy.datasets.SpectrumDatasetOnOff.geoms", false]], "get() (gammapy.maps.maps method)": [[204, "gammapy.maps.Maps.get", false]], "get_altaz() (gammapy.data.fixedpointinginfo method)": [[85, "gammapy.data.FixedPointingInfo.get_altaz", false]], "get_altaz() (gammapy.data.pointinginfo method)": [[95, "gammapy.data.PointingInfo.get_altaz", false]], "get_bias() (gammapy.irf.edispkernel method)": [[154, "gammapy.irf.EDispKernel.get_bias", false]], "get_bias_energy() (gammapy.irf.edispkernel method)": [[154, "gammapy.irf.EDispKernel.get_bias_energy", false]], "get_bounding_box() (gammapy.astro.population.casebattacharya1998 method)": [[28, "gammapy.astro.population.CaseBattacharya1998.get_bounding_box", false]], "get_bounding_box() (gammapy.astro.population.exponential method)": [[29, "gammapy.astro.population.Exponential.get_bounding_box", false]], "get_bounding_box() (gammapy.astro.population.faucherkaspi2006 method)": [[30, "gammapy.astro.population.FaucherKaspi2006.get_bounding_box", false]], "get_bounding_box() (gammapy.astro.population.faucherkaspi2006velocitybimodal method)": [[31, "gammapy.astro.population.FaucherKaspi2006VelocityBimodal.get_bounding_box", false]], "get_bounding_box() (gammapy.astro.population.faucherkaspi2006velocitymaxwellian method)": [[32, "gammapy.astro.population.FaucherKaspi2006VelocityMaxwellian.get_bounding_box", false]], "get_bounding_box() (gammapy.astro.population.lorimer2006 method)": [[35, "gammapy.astro.population.Lorimer2006.get_bounding_box", false]], "get_bounding_box() (gammapy.astro.population.paczynski1990 method)": [[36, "gammapy.astro.population.Paczynski1990.get_bounding_box", false]], "get_bounding_box() (gammapy.astro.population.paczynski1990velocity method)": [[37, "gammapy.astro.population.Paczynski1990Velocity.get_bounding_box", false]], "get_bounding_box() (gammapy.astro.population.yusifovkucuk2004 method)": [[39, "gammapy.astro.population.YusifovKucuk2004.get_bounding_box", false]], "get_bounding_box() (gammapy.astro.population.yusifovkucuk2004b method)": [[40, "gammapy.astro.population.YusifovKucuk2004B.get_bounding_box", false]], "get_by_coord() (gammapy.maps.hpxmap method)": [[197, "gammapy.maps.HpxMap.get_by_coord", false]], "get_by_coord() (gammapy.maps.hpxndmap method)": [[198, "gammapy.maps.HpxNDMap.get_by_coord", false]], "get_by_coord() (gammapy.maps.map method)": [[200, "gammapy.maps.Map.get_by_coord", false]], "get_by_coord() (gammapy.maps.regionndmap method)": [[206, "gammapy.maps.RegionNDMap.get_by_coord", false]], "get_by_coord() (gammapy.maps.wcsmap method)": [[209, "gammapy.maps.WcsMap.get_by_coord", false]], "get_by_coord() (gammapy.maps.wcsndmap method)": [[210, "gammapy.maps.WcsNDMap.get_by_coord", false]], "get_by_idx() (gammapy.maps.hpxmap method)": [[197, "gammapy.maps.HpxMap.get_by_idx", false]], "get_by_idx() (gammapy.maps.hpxndmap method)": [[198, "gammapy.maps.HpxNDMap.get_by_idx", false]], "get_by_idx() (gammapy.maps.map method)": [[200, "gammapy.maps.Map.get_by_idx", false]], "get_by_idx() (gammapy.maps.regionndmap method)": [[206, "gammapy.maps.RegionNDMap.get_by_idx", false]], "get_by_idx() (gammapy.maps.wcsmap method)": [[209, "gammapy.maps.WcsMap.get_by_idx", false]], "get_by_idx() (gammapy.maps.wcsndmap method)": [[210, "gammapy.maps.WcsNDMap.get_by_idx", false]], "get_by_pix() (gammapy.maps.hpxmap method)": [[197, "gammapy.maps.HpxMap.get_by_pix", false]], "get_by_pix() (gammapy.maps.hpxndmap method)": [[198, "gammapy.maps.HpxNDMap.get_by_pix", false]], "get_by_pix() (gammapy.maps.map method)": [[200, "gammapy.maps.Map.get_by_pix", false]], "get_by_pix() (gammapy.maps.regionndmap method)": [[206, "gammapy.maps.RegionNDMap.get_by_pix", false]], "get_by_pix() (gammapy.maps.wcsmap method)": [[209, "gammapy.maps.WcsMap.get_by_pix", false]], "get_by_pix() (gammapy.maps.wcsndmap method)": [[210, "gammapy.maps.WcsNDMap.get_by_pix", false]], "get_combined_flux_maps() (in module gammapy.estimators.utils)": [[147, "gammapy.estimators.utils.get_combined_flux_maps", false]], "get_combined_significance_maps() (in module gammapy.estimators.utils)": [[148, "gammapy.estimators.utils.get_combined_significance_maps", false]], "get_coord() (gammapy.maps.geom method)": [[195, "gammapy.maps.Geom.get_coord", false]], "get_coord() (gammapy.maps.hpxgeom method)": [[196, "gammapy.maps.HpxGeom.get_coord", false]], "get_coord() (gammapy.maps.mapaxes method)": [[201, "gammapy.maps.MapAxes.get_coord", false]], "get_coord() (gammapy.maps.regiongeom method)": [[205, "gammapy.maps.RegionGeom.get_coord", false]], "get_coord() (gammapy.maps.wcsgeom method)": [[208, "gammapy.maps.WcsGeom.get_coord", false]], "get_datasets() (gammapy.analysis.analysis method)": [[15, "gammapy.analysis.Analysis.get_datasets", false]], "get_edisp_kernel() (gammapy.irf.edispkernelmap method)": [[155, "gammapy.irf.EDispKernelMap.get_edisp_kernel", false]], "get_edisp_kernel() (gammapy.irf.edispmap method)": [[156, "gammapy.irf.EDispMap.get_edisp_kernel", false]], "get_excess_map() (gammapy.analysis.analysis method)": [[15, "gammapy.analysis.Analysis.get_excess_map", false]], "get_filenames() (gammapy.datasets.ogipdatasetreader method)": [[108, "gammapy.datasets.OGIPDatasetReader.get_filenames", false]], "get_filenames() (gammapy.datasets.ogipdatasetwriter static method)": [[109, "gammapy.datasets.OGIPDatasetWriter.get_filenames", false]], "get_flux_points() (gammapy.analysis.analysis method)": [[15, "gammapy.analysis.Analysis.get_flux_points", false]], "get_flux_points() (gammapy.estimators.fluxmaps method)": [[126, "gammapy.estimators.FluxMaps.get_flux_points", false]], "get_flux_points() (gammapy.estimators.fluxpoints method)": [[128, "gammapy.estimators.FluxPoints.get_flux_points", false]], "get_frame_attr_defaults() (gammapy.utils.coordinates.fovaltazframe class method)": [[320, "gammapy.utils.coordinates.FoVAltAzFrame.get_frame_attr_defaults", false]], "get_frame_attr_defaults() (gammapy.utils.coordinates.fovicrsframe class method)": [[321, "gammapy.utils.coordinates.FoVICRSFrame.get_frame_attr_defaults", false]], "get_frame_attr_names() (gammapy.utils.coordinates.fovaltazframe class method)": [[320, "gammapy.utils.coordinates.FoVAltAzFrame.get_frame_attr_names", false]], "get_frame_attr_names() (gammapy.utils.coordinates.fovicrsframe class method)": [[321, "gammapy.utils.coordinates.FoVICRSFrame.get_frame_attr_names", false]], "get_hdu() (gammapy.utils.fits.hdulocation method)": [[329, "gammapy.utils.fits.HDULocation.get_hdu", false]], "get_icrs() (gammapy.data.fixedpointinginfo method)": [[85, "gammapy.data.FixedPointingInfo.get_icrs", false]], "get_icrs() (gammapy.data.pointinginfo method)": [[95, "gammapy.data.PointingInfo.get_icrs", false]], "get_idx() (gammapy.maps.geom method)": [[195, "gammapy.maps.Geom.get_idx", false]], "get_idx() (gammapy.maps.hpxgeom method)": [[196, "gammapy.maps.HpxGeom.get_idx", false]], "get_idx() (gammapy.maps.regiongeom method)": [[205, "gammapy.maps.RegionGeom.get_idx", false]], "get_idx() (gammapy.maps.wcsgeom method)": [[208, "gammapy.maps.WcsGeom.get_idx", false]], "get_image_by_coord() (gammapy.maps.hpxmap method)": [[197, "gammapy.maps.HpxMap.get_image_by_coord", false]], "get_image_by_coord() (gammapy.maps.hpxndmap method)": [[198, "gammapy.maps.HpxNDMap.get_image_by_coord", false]], "get_image_by_coord() (gammapy.maps.map method)": [[200, "gammapy.maps.Map.get_image_by_coord", false]], "get_image_by_coord() (gammapy.maps.regionndmap method)": [[206, "gammapy.maps.RegionNDMap.get_image_by_coord", false]], "get_image_by_coord() (gammapy.maps.wcsmap method)": [[209, "gammapy.maps.WcsMap.get_image_by_coord", false]], "get_image_by_coord() (gammapy.maps.wcsndmap method)": [[210, "gammapy.maps.WcsNDMap.get_image_by_coord", false]], "get_image_by_idx() (gammapy.maps.hpxmap method)": [[197, "gammapy.maps.HpxMap.get_image_by_idx", false]], "get_image_by_idx() (gammapy.maps.hpxndmap method)": [[198, "gammapy.maps.HpxNDMap.get_image_by_idx", false]], "get_image_by_idx() (gammapy.maps.map method)": [[200, "gammapy.maps.Map.get_image_by_idx", false]], "get_image_by_idx() (gammapy.maps.regionndmap method)": [[206, "gammapy.maps.RegionNDMap.get_image_by_idx", false]], "get_image_by_idx() (gammapy.maps.wcsmap method)": [[209, "gammapy.maps.WcsMap.get_image_by_idx", false]], "get_image_by_idx() (gammapy.maps.wcsndmap method)": [[210, "gammapy.maps.WcsNDMap.get_image_by_idx", false]], "get_image_by_pix() (gammapy.maps.hpxmap method)": [[197, "gammapy.maps.HpxMap.get_image_by_pix", false]], "get_image_by_pix() (gammapy.maps.hpxndmap method)": [[198, "gammapy.maps.HpxNDMap.get_image_by_pix", false]], "get_image_by_pix() (gammapy.maps.map method)": [[200, "gammapy.maps.Map.get_image_by_pix", false]], "get_image_by_pix() (gammapy.maps.regionndmap method)": [[206, "gammapy.maps.RegionNDMap.get_image_by_pix", false]], "get_image_by_pix() (gammapy.maps.wcsmap method)": [[209, "gammapy.maps.WcsMap.get_image_by_pix", false]], "get_image_by_pix() (gammapy.maps.wcsndmap method)": [[210, "gammapy.maps.WcsNDMap.get_image_by_pix", false]], "get_images_paths() (in module gammapy.utils.scripts)": [[358, "gammapy.utils.scripts.get_images_paths", false]], "get_index_list() (gammapy.maps.hpxgeom static method)": [[196, "gammapy.maps.HpxGeom.get_index_list", false]], "get_irfs_features() (in module gammapy.data)": [[97, "gammapy.data.get_irfs_features", false]], "get_kernels() (gammapy.estimators.asmoothmapestimator method)": [[121, "gammapy.estimators.ASmoothMapEstimator.get_kernels", false]], "get_light_curve() (gammapy.analysis.analysis method)": [[15, "gammapy.analysis.Analysis.get_light_curve", false]], "get_mean() (gammapy.irf.edispkernel method)": [[154, "gammapy.irf.EDispKernel.get_mean", false]], "get_observations() (gammapy.analysis.analysis method)": [[15, "gammapy.analysis.Analysis.get_observations", false]], "get_observations() (gammapy.data.datastore method)": [[82, "gammapy.data.DataStore.get_observations", false]], "get_ogip_meta() (gammapy.datasets.ogipdatasetwriter method)": [[109, "gammapy.datasets.OGIPDatasetWriter.get_ogip_meta", false]], "get_pix() (gammapy.maps.wcsgeom method)": [[208, "gammapy.maps.WcsGeom.get_pix", false]], "get_pointing_altaz() (gammapy.data.observation method)": [[89, "gammapy.data.Observation.get_pointing_altaz", false]], "get_pointing_icrs() (gammapy.data.observation method)": [[89, "gammapy.data.Observation.get_pointing_icrs", false]], "get_psf_kernel() (gammapy.irf.psfmap method)": [[167, "gammapy.irf.PSFMap.get_psf_kernel", false]], "get_psf_kernel() (gammapy.irf.recopsfmap method)": [[170, "gammapy.irf.RecoPSFMap.get_psf_kernel", false]], "get_random_state() (in module gammapy.utils.random)": [[345, "gammapy.utils.random.get_random_state", false]], "get_rebinned_axis() (in module gammapy.estimators.utils)": [[149, "gammapy.estimators.utils.get_rebinned_axis", false]], "get_representation_cls() (gammapy.utils.coordinates.fovaltazframe method)": [[320, "gammapy.utils.coordinates.FoVAltAzFrame.get_representation_cls", false]], "get_representation_cls() (gammapy.utils.coordinates.fovicrsframe method)": [[321, "gammapy.utils.coordinates.FoVICRSFrame.get_representation_cls", false]], "get_representation_component_names() (gammapy.utils.coordinates.fovaltazframe method)": [[320, "gammapy.utils.coordinates.FoVAltAzFrame.get_representation_component_names", false]], "get_representation_component_names() (gammapy.utils.coordinates.fovicrsframe method)": [[321, "gammapy.utils.coordinates.FoVICRSFrame.get_representation_component_names", false]], "get_representation_component_units() (gammapy.utils.coordinates.fovaltazframe method)": [[320, "gammapy.utils.coordinates.FoVAltAzFrame.get_representation_component_units", false]], "get_representation_component_units() (gammapy.utils.coordinates.fovicrsframe method)": [[321, "gammapy.utils.coordinates.FoVICRSFrame.get_representation_component_units", false]], "get_resolution() (gammapy.irf.edispkernel method)": [[154, "gammapy.irf.EDispKernel.get_resolution", false]], "get_scale_model() (gammapy.estimators.fluxpointsestimator method)": [[129, "gammapy.estimators.FluxPointsEstimator.get_scale_model", false]], "get_scale_model() (gammapy.estimators.fluxprofileestimator method)": [[130, "gammapy.estimators.FluxProfileEstimator.get_scale_model", false]], "get_scale_model() (gammapy.estimators.lightcurveestimator method)": [[133, "gammapy.estimators.LightCurveEstimator.get_scale_model", false]], "get_scales() (gammapy.estimators.asmoothmapestimator static method)": [[121, "gammapy.estimators.ASmoothMapEstimator.get_scales", false]], "get_spectrum() (gammapy.maps.hpxmap method)": [[197, "gammapy.maps.HpxMap.get_spectrum", false]], "get_spectrum() (gammapy.maps.hpxndmap method)": [[198, "gammapy.maps.HpxNDMap.get_spectrum", false]], "get_spectrum() (gammapy.maps.map method)": [[200, "gammapy.maps.Map.get_spectrum", false]], "get_spectrum() (gammapy.maps.regionndmap method)": [[206, "gammapy.maps.RegionNDMap.get_spectrum", false]], "get_spectrum() (gammapy.maps.wcsmap method)": [[209, "gammapy.maps.WcsMap.get_spectrum", false]], "get_spectrum() (gammapy.maps.wcsndmap method)": [[210, "gammapy.maps.WcsNDMap.get_spectrum", false]], "get_subcovariance() (gammapy.modeling.covariance method)": [[213, "gammapy.modeling.Covariance.get_subcovariance", false]], "get_valid_path() (gammapy.datasets.ogipdatasetreader method)": [[108, "gammapy.datasets.OGIPDatasetReader.get_valid_path", false]], "get_wcs_coord_and_weights() (gammapy.maps.regiongeom method)": [[205, "gammapy.maps.RegionGeom.get_wcs_coord_and_weights", false]], "get_wstat_gof_terms() (in module gammapy.stats)": [[309, "gammapy.stats.get_wstat_gof_terms", false]], "get_wstat_mu_bkg() (in module gammapy.stats)": [[310, "gammapy.stats.get_wstat_mu_bkg", false]], "global_to_local() (gammapy.maps.hpxgeom method)": [[196, "gammapy.maps.HpxGeom.global_to_local", false]], "group_by() (gammapy.data.hduindextable method)": [[88, "gammapy.data.HDUIndexTable.group_by", false]], "group_by() (gammapy.data.observationtable method)": [[92, "gammapy.data.ObservationTable.group_by", false]], "group_by_label() (gammapy.data.observations method)": [[93, "gammapy.data.Observations.group_by_label", false]], "group_table() (gammapy.data.gti method)": [[86, "gammapy.data.GTI.group_table", false]], "group_table() (gammapy.maps.mapaxis method)": [[202, "gammapy.maps.MapAxis.group_table", false]], "group_table() (gammapy.maps.timemapaxis method)": [[207, "gammapy.maps.TimeMapAxis.group_table", false]], "groups (gammapy.data.hduindextable attribute)": [[88, "gammapy.data.HDUIndexTable.groups", false]], "groups (gammapy.data.observationtable attribute)": [[92, "gammapy.data.ObservationTable.groups", false]], "gti": [[608, "term-GTI", true]], "gti (class in gammapy.data)": [[86, "gammapy.data.GTI", false]], "gti (gammapy.data.observation attribute)": [[89, "gammapy.data.Observation.gti", false]], "gti (gammapy.datasets.datasets attribute)": [[101, "gammapy.datasets.Datasets.gti", false]], "gti (gammapy.datasets.fluxpointsdataset attribute)": [[103, "gammapy.datasets.FluxPointsDataset.gti", false]], "gti (gammapy.datasets.mapdataset attribute)": [[104, "gammapy.datasets.MapDataset.gti", false]], "gti (gammapy.datasets.mapdatasetonoff attribute)": [[107, "gammapy.datasets.MapDatasetOnOff.gti", false]], "gti (gammapy.datasets.spectrumdataset attribute)": [[111, "gammapy.datasets.SpectrumDataset.gti", false]], "gti (gammapy.datasets.spectrumdatasetonoff attribute)": [[112, "gammapy.datasets.SpectrumDatasetOnOff.gti", false]], "gtimetadata (class in gammapy.data)": [[87, "gammapy.data.GTIMetaData", false]], "has_any_ts (gammapy.estimators.fluxmaps attribute)": [[126, "gammapy.estimators.FluxMaps.has_any_ts", false]], "has_any_ts (gammapy.estimators.fluxpoints attribute)": [[128, "gammapy.estimators.FluxPoints.has_any_ts", false]], "has_data (gammapy.utils.coordinates.fovaltazframe attribute)": [[320, "gammapy.utils.coordinates.FoVAltAzFrame.has_data", false]], "has_data (gammapy.utils.coordinates.fovicrsframe attribute)": [[321, "gammapy.utils.coordinates.FoVICRSFrame.has_data", false]], "has_energy_axis (gammapy.maps.geom attribute)": [[195, "gammapy.maps.Geom.has_energy_axis", false]], "has_energy_axis (gammapy.maps.hpxgeom attribute)": [[196, "gammapy.maps.HpxGeom.has_energy_axis", false]], "has_energy_axis (gammapy.maps.regiongeom attribute)": [[205, "gammapy.maps.RegionGeom.has_energy_axis", false]], "has_energy_axis (gammapy.maps.wcsgeom attribute)": [[208, "gammapy.maps.WcsGeom.has_energy_axis", false]], "has_inverse() (gammapy.astro.population.casebattacharya1998 method)": [[28, "gammapy.astro.population.CaseBattacharya1998.has_inverse", false]], "has_inverse() (gammapy.astro.population.exponential method)": [[29, "gammapy.astro.population.Exponential.has_inverse", false]], "has_inverse() (gammapy.astro.population.faucherkaspi2006 method)": [[30, "gammapy.astro.population.FaucherKaspi2006.has_inverse", false]], "has_inverse() (gammapy.astro.population.faucherkaspi2006velocitybimodal method)": [[31, "gammapy.astro.population.FaucherKaspi2006VelocityBimodal.has_inverse", false]], "has_inverse() (gammapy.astro.population.faucherkaspi2006velocitymaxwellian method)": [[32, "gammapy.astro.population.FaucherKaspi2006VelocityMaxwellian.has_inverse", false]], "has_inverse() (gammapy.astro.population.lorimer2006 method)": [[35, "gammapy.astro.population.Lorimer2006.has_inverse", false]], "has_inverse() (gammapy.astro.population.paczynski1990 method)": [[36, "gammapy.astro.population.Paczynski1990.has_inverse", false]], "has_inverse() (gammapy.astro.population.paczynski1990velocity method)": [[37, "gammapy.astro.population.Paczynski1990Velocity.has_inverse", false]], "has_inverse() (gammapy.astro.population.yusifovkucuk2004 method)": [[39, "gammapy.astro.population.YusifovKucuk2004.has_inverse", false]], "has_inverse() (gammapy.astro.population.yusifovkucuk2004b method)": [[40, "gammapy.astro.population.YusifovKucuk2004B.has_inverse", false]], "has_masked_columns (gammapy.data.hduindextable attribute)": [[88, "gammapy.data.HDUIndexTable.has_masked_columns", false]], "has_masked_columns (gammapy.data.observationtable attribute)": [[92, "gammapy.data.ObservationTable.has_masked_columns", false]], "has_masked_values (gammapy.data.hduindextable attribute)": [[88, "gammapy.data.HDUIndexTable.has_masked_values", false]], "has_masked_values (gammapy.data.observationtable attribute)": [[92, "gammapy.data.ObservationTable.has_masked_values", false]], "has_mixin_columns (gammapy.data.hduindextable attribute)": [[88, "gammapy.data.HDUIndexTable.has_mixin_columns", false]], "has_mixin_columns (gammapy.data.observationtable attribute)": [[92, "gammapy.data.ObservationTable.has_mixin_columns", false]], "has_offset_axis (gammapy.irf.background2d attribute)": [[151, "gammapy.irf.Background2D.has_offset_axis", false]], "has_offset_axis (gammapy.irf.background3d attribute)": [[152, "gammapy.irf.Background3D.has_offset_axis", false]], "has_offset_axis (gammapy.irf.backgroundirf attribute)": [[153, "gammapy.irf.BackgroundIRF.has_offset_axis", false]], "has_offset_axis (gammapy.irf.edispkernel attribute)": [[154, "gammapy.irf.EDispKernel.has_offset_axis", false]], "has_offset_axis (gammapy.irf.effectiveareatable2d attribute)": [[157, "gammapy.irf.EffectiveAreaTable2D.has_offset_axis", false]], "has_offset_axis (gammapy.irf.energydependentmultigausspsf attribute)": [[158, "gammapy.irf.EnergyDependentMultiGaussPSF.has_offset_axis", false]], "has_offset_axis (gammapy.irf.energydispersion2d attribute)": [[159, "gammapy.irf.EnergyDispersion2D.has_offset_axis", false]], "has_offset_axis (gammapy.irf.irf attribute)": [[161, "gammapy.irf.IRF.has_offset_axis", false]], "has_offset_axis (gammapy.irf.parametricpsf attribute)": [[168, "gammapy.irf.ParametricPSF.has_offset_axis", false]], "has_offset_axis (gammapy.irf.psf3d attribute)": [[164, "gammapy.irf.PSF3D.has_offset_axis", false]], "has_offset_axis (gammapy.irf.psfking attribute)": [[166, "gammapy.irf.PSFKing.has_offset_axis", false]], "has_offset_axis (gammapy.irf.radmax2d attribute)": [[169, "gammapy.irf.RadMax2D.has_offset_axis", false]], "has_single_spatial_bin (gammapy.irf.edispkernelmap attribute)": [[155, "gammapy.irf.EDispKernelMap.has_single_spatial_bin", false]], "has_single_spatial_bin (gammapy.irf.edispmap attribute)": [[156, "gammapy.irf.EDispMap.has_single_spatial_bin", false]], "has_single_spatial_bin (gammapy.irf.irfmap attribute)": [[162, "gammapy.irf.IRFMap.has_single_spatial_bin", false]], "has_single_spatial_bin (gammapy.irf.psfmap attribute)": [[167, "gammapy.irf.PSFMap.has_single_spatial_bin", false]], "has_single_spatial_bin (gammapy.irf.recopsfmap attribute)": [[170, "gammapy.irf.RecoPSFMap.has_single_spatial_bin", false]], "has_stat_profiles (gammapy.estimators.fluxmaps attribute)": [[126, "gammapy.estimators.FluxMaps.has_stat_profiles", false]], "has_stat_profiles (gammapy.estimators.fluxpoints attribute)": [[128, "gammapy.estimators.FluxPoints.has_stat_profiles", false]], "has_success (gammapy.estimators.fluxmaps attribute)": [[126, "gammapy.estimators.FluxMaps.has_success", false]], "has_success (gammapy.estimators.fluxpoints attribute)": [[128, "gammapy.estimators.FluxPoints.has_success", false]], "has_ul (gammapy.estimators.fluxmaps attribute)": [[126, "gammapy.estimators.FluxMaps.has_ul", false]], "has_ul (gammapy.estimators.fluxpoints attribute)": [[128, "gammapy.estimators.FluxPoints.has_ul", false]], "has_user_bounding_box (gammapy.astro.population.casebattacharya1998 attribute)": [[28, "gammapy.astro.population.CaseBattacharya1998.has_user_bounding_box", false]], "has_user_bounding_box (gammapy.astro.population.exponential attribute)": [[29, "gammapy.astro.population.Exponential.has_user_bounding_box", false]], "has_user_bounding_box (gammapy.astro.population.faucherkaspi2006 attribute)": [[30, "gammapy.astro.population.FaucherKaspi2006.has_user_bounding_box", false]], "has_user_bounding_box (gammapy.astro.population.faucherkaspi2006velocitybimodal attribute)": [[31, "gammapy.astro.population.FaucherKaspi2006VelocityBimodal.has_user_bounding_box", false]], "has_user_bounding_box (gammapy.astro.population.faucherkaspi2006velocitymaxwellian attribute)": [[32, "gammapy.astro.population.FaucherKaspi2006VelocityMaxwellian.has_user_bounding_box", false]], "has_user_bounding_box (gammapy.astro.population.lorimer2006 attribute)": [[35, "gammapy.astro.population.Lorimer2006.has_user_bounding_box", false]], "has_user_bounding_box (gammapy.astro.population.paczynski1990 attribute)": [[36, "gammapy.astro.population.Paczynski1990.has_user_bounding_box", false]], "has_user_bounding_box (gammapy.astro.population.paczynski1990velocity attribute)": [[37, "gammapy.astro.population.Paczynski1990Velocity.has_user_bounding_box", false]], "has_user_bounding_box (gammapy.astro.population.yusifovkucuk2004 attribute)": [[39, "gammapy.astro.population.YusifovKucuk2004.has_user_bounding_box", false]], "has_user_bounding_box (gammapy.astro.population.yusifovkucuk2004b attribute)": [[40, "gammapy.astro.population.YusifovKucuk2004B.has_user_bounding_box", false]], "has_user_inverse (gammapy.astro.population.casebattacharya1998 attribute)": [[28, "gammapy.astro.population.CaseBattacharya1998.has_user_inverse", false]], "has_user_inverse (gammapy.astro.population.exponential attribute)": [[29, "gammapy.astro.population.Exponential.has_user_inverse", false]], "has_user_inverse (gammapy.astro.population.faucherkaspi2006 attribute)": [[30, "gammapy.astro.population.FaucherKaspi2006.has_user_inverse", false]], "has_user_inverse (gammapy.astro.population.faucherkaspi2006velocitybimodal attribute)": [[31, "gammapy.astro.population.FaucherKaspi2006VelocityBimodal.has_user_inverse", false]], "has_user_inverse (gammapy.astro.population.faucherkaspi2006velocitymaxwellian attribute)": [[32, "gammapy.astro.population.FaucherKaspi2006VelocityMaxwellian.has_user_inverse", false]], "has_user_inverse (gammapy.astro.population.lorimer2006 attribute)": [[35, "gammapy.astro.population.Lorimer2006.has_user_inverse", false]], "has_user_inverse (gammapy.astro.population.paczynski1990 attribute)": [[36, "gammapy.astro.population.Paczynski1990.has_user_inverse", false]], "has_user_inverse (gammapy.astro.population.paczynski1990velocity attribute)": [[37, "gammapy.astro.population.Paczynski1990Velocity.has_user_inverse", false]], "has_user_inverse (gammapy.astro.population.yusifovkucuk2004 attribute)": [[39, "gammapy.astro.population.YusifovKucuk2004.has_user_inverse", false]], "has_user_inverse (gammapy.astro.population.yusifovkucuk2004b attribute)": [[40, "gammapy.astro.population.YusifovKucuk2004B.has_user_inverse", false]], "hdu_class_unique (gammapy.data.hduindextable attribute)": [[88, "gammapy.data.HDUIndexTable.hdu_class_unique", false]], "hdu_location() (gammapy.data.hduindextable method)": [[88, "gammapy.data.HDUIndexTable.hdu_location", false]], "hdu_type_unique (gammapy.data.hduindextable attribute)": [[88, "gammapy.data.HDUIndexTable.hdu_type_unique", false]], "hduindextable (class in gammapy.data)": [[88, "gammapy.data.HDUIndexTable", false]], "hdulocation (class in gammapy.utils.fits)": [[329, "gammapy.utils.fits.HDULocation", false]], "hierarchical_clustering() (in module gammapy.utils.cluster)": [[317, "gammapy.utils.cluster.hierarchical_clustering", false]], "hli": [[608, "term-HLI", true]], "hpxgeom (class in gammapy.maps)": [[196, "gammapy.maps.HpxGeom", false]], "hpxmap (class in gammapy.maps)": [[197, "gammapy.maps.HpxMap", false]], "hpxndmap (class in gammapy.maps)": [[198, "gammapy.maps.HpxNDMap", false]], "hstack_columns() (in module gammapy.utils.table)": [[364, "gammapy.utils.table.hstack_columns", false]], "iact": [[608, "term-IACT", true]], "ids (gammapy.data.observations attribute)": [[93, "gammapy.data.Observations.ids", false]], "iloc (gammapy.data.hduindextable attribute)": [[88, "gammapy.data.HDUIndexTable.iloc", false]], "iloc (gammapy.data.observationtable attribute)": [[92, "gammapy.data.ObservationTable.iloc", false]], "imageprofile (class in gammapy.estimators)": [[131, "gammapy.estimators.ImageProfile", false]], "imageprofileestimator (class in gammapy.estimators)": [[132, "gammapy.estimators.ImageProfileEstimator", false]], "in_memory_generator() (gammapy.data.observations method)": [[93, "gammapy.data.Observations.in_memory_generator", false]], "include_ssc (gammapy.modeling.models.naimaspectralmodel attribute)": [[255, "gammapy.modeling.models.NaimaSpectralModel.include_ssc", false]], "index (gammapy.modeling.models.expcutoffpowerlaw3fglspectralmodel attribute)": [[234, "gammapy.modeling.models.ExpCutoffPowerLaw3FGLSpectralModel.index", false]], "index (gammapy.modeling.models.expcutoffpowerlawnormspectralmodel attribute)": [[235, "gammapy.modeling.models.ExpCutoffPowerLawNormSpectralModel.index", false]], "index (gammapy.modeling.models.expcutoffpowerlawspectralmodel attribute)": [[236, "gammapy.modeling.models.ExpCutoffPowerLawSpectralModel.index", false]], "index (gammapy.modeling.models.powerlaw2spectralmodel attribute)": [[259, "gammapy.modeling.models.PowerLaw2SpectralModel.index", false]], "index (gammapy.modeling.models.powerlawspectralmodel attribute)": [[261, "gammapy.modeling.models.PowerLawSpectralModel.index", false]], "index() (gammapy.data.observations method)": [[93, "gammapy.data.Observations.index", false]], "index() (gammapy.datasets.datasets method)": [[101, "gammapy.datasets.Datasets.index", false]], "index() (gammapy.maps.mapaxes method)": [[201, "gammapy.maps.MapAxes.index", false]], "index() (gammapy.modeling.models.datasetmodels method)": [[230, "gammapy.modeling.models.DatasetModels.index", false]], "index() (gammapy.modeling.models.models method)": [[254, "gammapy.modeling.models.Models.index", false]], "index() (gammapy.modeling.parameters method)": [[219, "gammapy.modeling.Parameters.index", false]], "index() (gammapy.modeling.priorparameters method)": [[221, "gammapy.modeling.PriorParameters.index", false]], "index1 (gammapy.modeling.models.brokenpowerlawspectralmodel attribute)": [[224, "gammapy.modeling.models.BrokenPowerLawSpectralModel.index1", false]], "index1 (gammapy.modeling.models.smoothbrokenpowerlawspectralmodel attribute)": [[271, "gammapy.modeling.models.SmoothBrokenPowerLawSpectralModel.index1", false]], "index2 (gammapy.modeling.models.brokenpowerlawspectralmodel attribute)": [[224, "gammapy.modeling.models.BrokenPowerLawSpectralModel.index2", false]], "index2 (gammapy.modeling.models.smoothbrokenpowerlawspectralmodel attribute)": [[271, "gammapy.modeling.models.SmoothBrokenPowerLawSpectralModel.index2", false]], "index_1 (gammapy.modeling.models.superexpcutoffpowerlaw3fglspectralmodel attribute)": [[274, "gammapy.modeling.models.SuperExpCutoffPowerLaw3FGLSpectralModel.index_1", false]], "index_1 (gammapy.modeling.models.superexpcutoffpowerlaw4fgldr3spectralmodel attribute)": [[275, "gammapy.modeling.models.SuperExpCutoffPowerLaw4FGLDR3SpectralModel.index_1", false]], "index_1 (gammapy.modeling.models.superexpcutoffpowerlaw4fglspectralmodel attribute)": [[276, "gammapy.modeling.models.SuperExpCutoffPowerLaw4FGLSpectralModel.index_1", false]], "index_2 (gammapy.modeling.models.superexpcutoffpowerlaw3fglspectralmodel attribute)": [[274, "gammapy.modeling.models.SuperExpCutoffPowerLaw3FGLSpectralModel.index_2", false]], "index_2 (gammapy.modeling.models.superexpcutoffpowerlaw4fgldr3spectralmodel attribute)": [[275, "gammapy.modeling.models.SuperExpCutoffPowerLaw4FGLDR3SpectralModel.index_2", false]], "index_2 (gammapy.modeling.models.superexpcutoffpowerlaw4fglspectralmodel attribute)": [[276, "gammapy.modeling.models.SuperExpCutoffPowerLaw4FGLSpectralModel.index_2", false]], "index_column() (gammapy.data.hduindextable method)": [[88, "gammapy.data.HDUIndexTable.index_column", false]], "index_column() (gammapy.data.observationtable method)": [[92, "gammapy.data.ObservationTable.index_column", false]], "index_data() (gammapy.maps.mapaxes method)": [[201, "gammapy.maps.MapAxes.index_data", false]], "index_mode() (gammapy.data.hduindextable method)": [[88, "gammapy.data.HDUIndexTable.index_mode", false]], "index_mode() (gammapy.data.observationtable method)": [[92, "gammapy.data.ObservationTable.index_mode", false]], "indices (gammapy.data.hduindextable attribute)": [[88, "gammapy.data.HDUIndexTable.indices", false]], "indices (gammapy.data.observationtable attribute)": [[92, "gammapy.data.ObservationTable.indices", false]], "ineqcons (gammapy.astro.population.casebattacharya1998 attribute)": [[28, "gammapy.astro.population.CaseBattacharya1998.ineqcons", false]], "ineqcons (gammapy.astro.population.exponential attribute)": [[29, "gammapy.astro.population.Exponential.ineqcons", false]], "ineqcons (gammapy.astro.population.faucherkaspi2006 attribute)": [[30, "gammapy.astro.population.FaucherKaspi2006.ineqcons", false]], "ineqcons (gammapy.astro.population.faucherkaspi2006velocitybimodal attribute)": [[31, "gammapy.astro.population.FaucherKaspi2006VelocityBimodal.ineqcons", false]], "ineqcons (gammapy.astro.population.faucherkaspi2006velocitymaxwellian attribute)": [[32, "gammapy.astro.population.FaucherKaspi2006VelocityMaxwellian.ineqcons", false]], "ineqcons (gammapy.astro.population.lorimer2006 attribute)": [[35, "gammapy.astro.population.Lorimer2006.ineqcons", false]], "ineqcons (gammapy.astro.population.paczynski1990 attribute)": [[36, "gammapy.astro.population.Paczynski1990.ineqcons", false]], "ineqcons (gammapy.astro.population.paczynski1990velocity attribute)": [[37, "gammapy.astro.population.Paczynski1990Velocity.ineqcons", false]], "ineqcons (gammapy.astro.population.yusifovkucuk2004 attribute)": [[39, "gammapy.astro.population.YusifovKucuk2004.ineqcons", false]], "ineqcons (gammapy.astro.population.yusifovkucuk2004b attribute)": [[40, "gammapy.astro.population.YusifovKucuk2004B.ineqcons", false]], "info (gammapy.data.hduindextable attribute)": [[88, "gammapy.data.HDUIndexTable.info", false]], "info (gammapy.data.observationtable attribute)": [[92, "gammapy.data.ObservationTable.info", false]], "info() (gammapy.catalog.sourcecatalogobject2fhl method)": [[71, "gammapy.catalog.SourceCatalogObject2FHL.info", false]], "info() (gammapy.catalog.sourcecatalogobject2hwc method)": [[72, "gammapy.catalog.SourceCatalogObject2HWC.info", false]], "info() (gammapy.catalog.sourcecatalogobject2pc method)": [[73, "gammapy.catalog.SourceCatalogObject2PC.info", false]], "info() (gammapy.catalog.sourcecatalogobject3fgl method)": [[74, "gammapy.catalog.SourceCatalogObject3FGL.info", false]], "info() (gammapy.catalog.sourcecatalogobject3fhl method)": [[75, "gammapy.catalog.SourceCatalogObject3FHL.info", false]], "info() (gammapy.catalog.sourcecatalogobject3hwc method)": [[76, "gammapy.catalog.SourceCatalogObject3HWC.info", false]], "info() (gammapy.catalog.sourcecatalogobject3pc method)": [[77, "gammapy.catalog.SourceCatalogObject3PC.info", false]], "info() (gammapy.catalog.sourcecatalogobject4fgl method)": [[78, "gammapy.catalog.SourceCatalogObject4FGL.info", false]], "info() (gammapy.catalog.sourcecatalogobjectgammacat method)": [[79, "gammapy.catalog.SourceCatalogObjectGammaCat.info", false]], "info() (gammapy.catalog.sourcecatalogobjecthgps method)": [[80, "gammapy.catalog.SourceCatalogObjectHGPS.info", false]], "info() (gammapy.data.datastore method)": [[82, "gammapy.data.DataStore.info", false]], "info() (gammapy.irf.energydependentmultigausspsf method)": [[158, "gammapy.irf.EnergyDependentMultiGaussPSF.info", false]], "info() (gammapy.irf.parametricpsf method)": [[168, "gammapy.irf.ParametricPSF.info", false]], "info() (gammapy.irf.psf3d method)": [[164, "gammapy.irf.PSF3D.info", false]], "info() (gammapy.irf.psfking method)": [[166, "gammapy.irf.PSFKing.info", false]], "info() (gammapy.utils.fits.hdulocation method)": [[329, "gammapy.utils.fits.HDULocation.info", false]], "info_dict() (gammapy.datasets.mapdataset method)": [[104, "gammapy.datasets.MapDataset.info_dict", false]], "info_dict() (gammapy.datasets.mapdatasetonoff method)": [[107, "gammapy.datasets.MapDatasetOnOff.info_dict", false]], "info_dict() (gammapy.datasets.spectrumdataset method)": [[111, "gammapy.datasets.SpectrumDataset.info_dict", false]], "info_dict() (gammapy.datasets.spectrumdatasetonoff method)": [[112, "gammapy.datasets.SpectrumDatasetOnOff.info_dict", false]], "info_dict() (gammapy.stats.cashcountsstatistic method)": [[295, "gammapy.stats.CashCountsStatistic.info_dict", false]], "info_dict() (gammapy.stats.wstatcountsstatistic method)": [[299, "gammapy.stats.WStatCountsStatistic.info_dict", false]], "info_table() (gammapy.datasets.datasets method)": [[101, "gammapy.datasets.Datasets.info_table", false]], "input_shape() (gammapy.astro.population.casebattacharya1998 method)": [[28, "gammapy.astro.population.CaseBattacharya1998.input_shape", false]], "input_shape() (gammapy.astro.population.exponential method)": [[29, "gammapy.astro.population.Exponential.input_shape", false]], "input_shape() (gammapy.astro.population.faucherkaspi2006 method)": [[30, "gammapy.astro.population.FaucherKaspi2006.input_shape", false]], "input_shape() (gammapy.astro.population.faucherkaspi2006velocitybimodal method)": [[31, "gammapy.astro.population.FaucherKaspi2006VelocityBimodal.input_shape", false]], "input_shape() (gammapy.astro.population.faucherkaspi2006velocitymaxwellian method)": [[32, "gammapy.astro.population.FaucherKaspi2006VelocityMaxwellian.input_shape", false]], "input_shape() (gammapy.astro.population.lorimer2006 method)": [[35, "gammapy.astro.population.Lorimer2006.input_shape", false]], "input_shape() (gammapy.astro.population.paczynski1990 method)": [[36, "gammapy.astro.population.Paczynski1990.input_shape", false]], "input_shape() (gammapy.astro.population.paczynski1990velocity method)": [[37, "gammapy.astro.population.Paczynski1990Velocity.input_shape", false]], "input_shape() (gammapy.astro.population.yusifovkucuk2004 method)": [[39, "gammapy.astro.population.YusifovKucuk2004.input_shape", false]], "input_shape() (gammapy.astro.population.yusifovkucuk2004b method)": [[40, "gammapy.astro.population.YusifovKucuk2004B.input_shape", false]], "input_units (gammapy.astro.population.casebattacharya1998 attribute)": [[28, "gammapy.astro.population.CaseBattacharya1998.input_units", false]], "input_units (gammapy.astro.population.exponential attribute)": [[29, "gammapy.astro.population.Exponential.input_units", false]], "input_units (gammapy.astro.population.faucherkaspi2006 attribute)": [[30, "gammapy.astro.population.FaucherKaspi2006.input_units", false]], "input_units (gammapy.astro.population.faucherkaspi2006velocitybimodal attribute)": [[31, "gammapy.astro.population.FaucherKaspi2006VelocityBimodal.input_units", false]], "input_units (gammapy.astro.population.faucherkaspi2006velocitymaxwellian attribute)": [[32, "gammapy.astro.population.FaucherKaspi2006VelocityMaxwellian.input_units", false]], "input_units (gammapy.astro.population.lorimer2006 attribute)": [[35, "gammapy.astro.population.Lorimer2006.input_units", false]], "input_units (gammapy.astro.population.paczynski1990 attribute)": [[36, "gammapy.astro.population.Paczynski1990.input_units", false]], "input_units (gammapy.astro.population.paczynski1990velocity attribute)": [[37, "gammapy.astro.population.Paczynski1990Velocity.input_units", false]], "input_units (gammapy.astro.population.yusifovkucuk2004 attribute)": [[39, "gammapy.astro.population.YusifovKucuk2004.input_units", false]], "input_units (gammapy.astro.population.yusifovkucuk2004b attribute)": [[40, "gammapy.astro.population.YusifovKucuk2004B.input_units", false]], "input_units_allow_dimensionless (gammapy.astro.population.casebattacharya1998 attribute)": [[28, "gammapy.astro.population.CaseBattacharya1998.input_units_allow_dimensionless", false]], "input_units_allow_dimensionless (gammapy.astro.population.exponential attribute)": [[29, "gammapy.astro.population.Exponential.input_units_allow_dimensionless", false]], "input_units_allow_dimensionless (gammapy.astro.population.faucherkaspi2006 attribute)": [[30, "gammapy.astro.population.FaucherKaspi2006.input_units_allow_dimensionless", false]], "input_units_allow_dimensionless (gammapy.astro.population.faucherkaspi2006velocitybimodal attribute)": [[31, "gammapy.astro.population.FaucherKaspi2006VelocityBimodal.input_units_allow_dimensionless", false]], "input_units_allow_dimensionless (gammapy.astro.population.faucherkaspi2006velocitymaxwellian attribute)": [[32, "gammapy.astro.population.FaucherKaspi2006VelocityMaxwellian.input_units_allow_dimensionless", false]], "input_units_allow_dimensionless (gammapy.astro.population.lorimer2006 attribute)": [[35, "gammapy.astro.population.Lorimer2006.input_units_allow_dimensionless", false]], "input_units_allow_dimensionless (gammapy.astro.population.paczynski1990 attribute)": [[36, "gammapy.astro.population.Paczynski1990.input_units_allow_dimensionless", false]], "input_units_allow_dimensionless (gammapy.astro.population.paczynski1990velocity attribute)": [[37, "gammapy.astro.population.Paczynski1990Velocity.input_units_allow_dimensionless", false]], "input_units_allow_dimensionless (gammapy.astro.population.yusifovkucuk2004 attribute)": [[39, "gammapy.astro.population.YusifovKucuk2004.input_units_allow_dimensionless", false]], "input_units_allow_dimensionless (gammapy.astro.population.yusifovkucuk2004b attribute)": [[40, "gammapy.astro.population.YusifovKucuk2004B.input_units_allow_dimensionless", false]], "input_units_equivalencies (gammapy.astro.population.casebattacharya1998 attribute)": [[28, "gammapy.astro.population.CaseBattacharya1998.input_units_equivalencies", false]], "input_units_equivalencies (gammapy.astro.population.exponential attribute)": [[29, "gammapy.astro.population.Exponential.input_units_equivalencies", false]], "input_units_equivalencies (gammapy.astro.population.faucherkaspi2006 attribute)": [[30, "gammapy.astro.population.FaucherKaspi2006.input_units_equivalencies", false]], "input_units_equivalencies (gammapy.astro.population.faucherkaspi2006velocitybimodal attribute)": [[31, "gammapy.astro.population.FaucherKaspi2006VelocityBimodal.input_units_equivalencies", false]], "input_units_equivalencies (gammapy.astro.population.faucherkaspi2006velocitymaxwellian attribute)": [[32, "gammapy.astro.population.FaucherKaspi2006VelocityMaxwellian.input_units_equivalencies", false]], "input_units_equivalencies (gammapy.astro.population.lorimer2006 attribute)": [[35, "gammapy.astro.population.Lorimer2006.input_units_equivalencies", false]], "input_units_equivalencies (gammapy.astro.population.paczynski1990 attribute)": [[36, "gammapy.astro.population.Paczynski1990.input_units_equivalencies", false]], "input_units_equivalencies (gammapy.astro.population.paczynski1990velocity attribute)": [[37, "gammapy.astro.population.Paczynski1990Velocity.input_units_equivalencies", false]], "input_units_equivalencies (gammapy.astro.population.yusifovkucuk2004 attribute)": [[39, "gammapy.astro.population.YusifovKucuk2004.input_units_equivalencies", false]], "input_units_equivalencies (gammapy.astro.population.yusifovkucuk2004b attribute)": [[40, "gammapy.astro.population.YusifovKucuk2004B.input_units_equivalencies", false]], "input_units_strict (gammapy.astro.population.casebattacharya1998 attribute)": [[28, "gammapy.astro.population.CaseBattacharya1998.input_units_strict", false]], "input_units_strict (gammapy.astro.population.exponential attribute)": [[29, "gammapy.astro.population.Exponential.input_units_strict", false]], "input_units_strict (gammapy.astro.population.faucherkaspi2006 attribute)": [[30, "gammapy.astro.population.FaucherKaspi2006.input_units_strict", false]], "input_units_strict (gammapy.astro.population.faucherkaspi2006velocitybimodal attribute)": [[31, "gammapy.astro.population.FaucherKaspi2006VelocityBimodal.input_units_strict", false]], "input_units_strict (gammapy.astro.population.faucherkaspi2006velocitymaxwellian attribute)": [[32, "gammapy.astro.population.FaucherKaspi2006VelocityMaxwellian.input_units_strict", false]], "input_units_strict (gammapy.astro.population.lorimer2006 attribute)": [[35, "gammapy.astro.population.Lorimer2006.input_units_strict", false]], "input_units_strict (gammapy.astro.population.paczynski1990 attribute)": [[36, "gammapy.astro.population.Paczynski1990.input_units_strict", false]], "input_units_strict (gammapy.astro.population.paczynski1990velocity attribute)": [[37, "gammapy.astro.population.Paczynski1990Velocity.input_units_strict", false]], "input_units_strict (gammapy.astro.population.yusifovkucuk2004 attribute)": [[39, "gammapy.astro.population.YusifovKucuk2004.input_units_strict", false]], "input_units_strict (gammapy.astro.population.yusifovkucuk2004b attribute)": [[40, "gammapy.astro.population.YusifovKucuk2004B.input_units_strict", false]], "inputs (gammapy.astro.population.casebattacharya1998 attribute)": [[28, "gammapy.astro.population.CaseBattacharya1998.inputs", false]], "inputs (gammapy.astro.population.exponential attribute)": [[29, "gammapy.astro.population.Exponential.inputs", false]], "inputs (gammapy.astro.population.faucherkaspi2006 attribute)": [[30, "gammapy.astro.population.FaucherKaspi2006.inputs", false]], "inputs (gammapy.astro.population.faucherkaspi2006velocitybimodal attribute)": [[31, "gammapy.astro.population.FaucherKaspi2006VelocityBimodal.inputs", false]], "inputs (gammapy.astro.population.faucherkaspi2006velocitymaxwellian attribute)": [[32, "gammapy.astro.population.FaucherKaspi2006VelocityMaxwellian.inputs", false]], "inputs (gammapy.astro.population.lorimer2006 attribute)": [[35, "gammapy.astro.population.Lorimer2006.inputs", false]], "inputs (gammapy.astro.population.paczynski1990 attribute)": [[36, "gammapy.astro.population.Paczynski1990.inputs", false]], "inputs (gammapy.astro.population.paczynski1990velocity attribute)": [[37, "gammapy.astro.population.Paczynski1990Velocity.inputs", false]], "inputs (gammapy.astro.population.yusifovkucuk2004 attribute)": [[39, "gammapy.astro.population.YusifovKucuk2004.inputs", false]], "inputs (gammapy.astro.population.yusifovkucuk2004b attribute)": [[40, "gammapy.astro.population.YusifovKucuk2004B.inputs", false]], "insert() (gammapy.data.observations method)": [[93, "gammapy.data.Observations.insert", false]], "insert() (gammapy.datasets.datasets method)": [[101, "gammapy.datasets.Datasets.insert", false]], "insert() (gammapy.modeling.models.models method)": [[254, "gammapy.modeling.models.Models.insert", false]], "insert_row() (gammapy.data.hduindextable method)": [[88, "gammapy.data.HDUIndexTable.insert_row", false]], "insert_row() (gammapy.data.observationtable method)": [[92, "gammapy.data.ObservationTable.insert_row", false]], "integral() (gammapy.astro.darkmatter.burkertprofile method)": [[17, "gammapy.astro.darkmatter.BurkertProfile.integral", false]], "integral() (gammapy.astro.darkmatter.darkmatterannihilationspectralmodel method)": [[19, "gammapy.astro.darkmatter.DarkMatterAnnihilationSpectralModel.integral", false]], "integral() (gammapy.astro.darkmatter.darkmatterdecayspectralmodel method)": [[20, "gammapy.astro.darkmatter.DarkMatterDecaySpectralModel.integral", false]], "integral() (gammapy.astro.darkmatter.dmprofile method)": [[18, "gammapy.astro.darkmatter.DMProfile.integral", false]], "integral() (gammapy.astro.darkmatter.einastoprofile method)": [[21, "gammapy.astro.darkmatter.EinastoProfile.integral", false]], "integral() (gammapy.astro.darkmatter.isothermalprofile method)": [[22, "gammapy.astro.darkmatter.IsothermalProfile.integral", false]], "integral() (gammapy.astro.darkmatter.mooreprofile method)": [[24, "gammapy.astro.darkmatter.MooreProfile.integral", false]], "integral() (gammapy.astro.darkmatter.nfwprofile method)": [[25, "gammapy.astro.darkmatter.NFWProfile.integral", false]], "integral() (gammapy.astro.darkmatter.primaryflux method)": [[26, "gammapy.astro.darkmatter.PrimaryFlux.integral", false]], "integral() (gammapy.astro.darkmatter.zhaoprofile method)": [[27, "gammapy.astro.darkmatter.ZhaoProfile.integral", false]], "integral() (gammapy.irf.background2d method)": [[151, "gammapy.irf.Background2D.integral", false]], "integral() (gammapy.irf.background3d method)": [[152, "gammapy.irf.Background3D.integral", false]], "integral() (gammapy.irf.backgroundirf method)": [[153, "gammapy.irf.BackgroundIRF.integral", false]], "integral() (gammapy.irf.edispkernel method)": [[154, "gammapy.irf.EDispKernel.integral", false]], "integral() (gammapy.irf.effectiveareatable2d method)": [[157, "gammapy.irf.EffectiveAreaTable2D.integral", false]], "integral() (gammapy.irf.energydependentmultigausspsf method)": [[158, "gammapy.irf.EnergyDependentMultiGaussPSF.integral", false]], "integral() (gammapy.irf.energydispersion2d method)": [[159, "gammapy.irf.EnergyDispersion2D.integral", false]], "integral() (gammapy.irf.irf method)": [[161, "gammapy.irf.IRF.integral", false]], "integral() (gammapy.irf.parametricpsf method)": [[168, "gammapy.irf.ParametricPSF.integral", false]], "integral() (gammapy.irf.psf3d method)": [[164, "gammapy.irf.PSF3D.integral", false]], "integral() (gammapy.irf.psfking method)": [[166, "gammapy.irf.PSFKing.integral", false]], "integral() (gammapy.irf.radmax2d method)": [[169, "gammapy.irf.RadMax2D.integral", false]], "integral() (gammapy.maps.hpxmap method)": [[197, "gammapy.maps.HpxMap.integral", false]], "integral() (gammapy.maps.hpxndmap method)": [[198, "gammapy.maps.HpxNDMap.integral", false]], "integral() (gammapy.maps.map method)": [[200, "gammapy.maps.Map.integral", false]], "integral() (gammapy.maps.regionndmap method)": [[206, "gammapy.maps.RegionNDMap.integral", false]], "integral() (gammapy.maps.wcsmap method)": [[209, "gammapy.maps.WcsMap.integral", false]], "integral() (gammapy.maps.wcsndmap method)": [[210, "gammapy.maps.WcsNDMap.integral", false]], "integral() (gammapy.modeling.models.brokenpowerlawspectralmodel method)": [[224, "gammapy.modeling.models.BrokenPowerLawSpectralModel.integral", false]], "integral() (gammapy.modeling.models.compoundspectralmodel method)": [[225, "gammapy.modeling.models.CompoundSpectralModel.integral", false]], "integral() (gammapy.modeling.models.constantspectralmodel method)": [[228, "gammapy.modeling.models.ConstantSpectralModel.integral", false]], "integral() (gammapy.modeling.models.constanttemporalmodel method)": [[229, "gammapy.modeling.models.ConstantTemporalModel.integral", false]], "integral() (gammapy.modeling.models.eblabsorptionnormspectralmodel method)": [[232, "gammapy.modeling.models.EBLAbsorptionNormSpectralModel.integral", false]], "integral() (gammapy.modeling.models.expcutoffpowerlaw3fglspectralmodel method)": [[234, "gammapy.modeling.models.ExpCutoffPowerLaw3FGLSpectralModel.integral", false]], "integral() (gammapy.modeling.models.expcutoffpowerlawnormspectralmodel method)": [[235, "gammapy.modeling.models.ExpCutoffPowerLawNormSpectralModel.integral", false]], "integral() (gammapy.modeling.models.expcutoffpowerlawspectralmodel method)": [[236, "gammapy.modeling.models.ExpCutoffPowerLawSpectralModel.integral", false]], "integral() (gammapy.modeling.models.expdecaytemporalmodel method)": [[237, "gammapy.modeling.models.ExpDecayTemporalModel.integral", false]], "integral() (gammapy.modeling.models.gaussianspectralmodel method)": [[241, "gammapy.modeling.models.GaussianSpectralModel.integral", false]], "integral() (gammapy.modeling.models.gaussiantemporalmodel method)": [[242, "gammapy.modeling.models.GaussianTemporalModel.integral", false]], "integral() (gammapy.modeling.models.generalizedgaussiantemporalmodel method)": [[244, "gammapy.modeling.models.GeneralizedGaussianTemporalModel.integral", false]], "integral() (gammapy.modeling.models.lightcurvetemplatetemporalmodel method)": [[245, "gammapy.modeling.models.LightCurveTemplateTemporalModel.integral", false]], "integral() (gammapy.modeling.models.lineartemporalmodel method)": [[246, "gammapy.modeling.models.LinearTemporalModel.integral", false]], "integral() (gammapy.modeling.models.logparabolanormspectralmodel method)": [[247, "gammapy.modeling.models.LogParabolaNormSpectralModel.integral", false]], "integral() (gammapy.modeling.models.logparabolaspectralmodel method)": [[248, "gammapy.modeling.models.LogParabolaSpectralModel.integral", false]], "integral() (gammapy.modeling.models.meyercrabspectralmodel method)": [[251, "gammapy.modeling.models.MeyerCrabSpectralModel.integral", false]], "integral() (gammapy.modeling.models.naimaspectralmodel method)": [[255, "gammapy.modeling.models.NaimaSpectralModel.integral", false]], "integral() (gammapy.modeling.models.piecewisenormspectralmodel method)": [[257, "gammapy.modeling.models.PiecewiseNormSpectralModel.integral", false]], "integral() (gammapy.modeling.models.powerlaw2spectralmodel method)": [[259, "gammapy.modeling.models.PowerLaw2SpectralModel.integral", false]], "integral() (gammapy.modeling.models.powerlawnormspectralmodel method)": [[260, "gammapy.modeling.models.PowerLawNormSpectralModel.integral", false]], "integral() (gammapy.modeling.models.powerlawspectralmodel method)": [[261, "gammapy.modeling.models.PowerLawSpectralModel.integral", false]], "integral() (gammapy.modeling.models.powerlawtemporalmodel method)": [[262, "gammapy.modeling.models.PowerLawTemporalModel.integral", false]], "integral() (gammapy.modeling.models.scalespectralmodel method)": [[266, "gammapy.modeling.models.ScaleSpectralModel.integral", false]], "integral() (gammapy.modeling.models.sinetemporalmodel method)": [[269, "gammapy.modeling.models.SineTemporalModel.integral", false]], "integral() (gammapy.modeling.models.smoothbrokenpowerlawspectralmodel method)": [[271, "gammapy.modeling.models.SmoothBrokenPowerLawSpectralModel.integral", false]], "integral() (gammapy.modeling.models.spectralmodel method)": [[273, "gammapy.modeling.models.SpectralModel.integral", false]], "integral() (gammapy.modeling.models.superexpcutoffpowerlaw3fglspectralmodel method)": [[274, "gammapy.modeling.models.SuperExpCutoffPowerLaw3FGLSpectralModel.integral", false]], "integral() (gammapy.modeling.models.superexpcutoffpowerlaw4fgldr3spectralmodel method)": [[275, "gammapy.modeling.models.SuperExpCutoffPowerLaw4FGLDR3SpectralModel.integral", false]], "integral() (gammapy.modeling.models.superexpcutoffpowerlaw4fglspectralmodel method)": [[276, "gammapy.modeling.models.SuperExpCutoffPowerLaw4FGLSpectralModel.integral", false]], "integral() (gammapy.modeling.models.templatendspectralmodel method)": [[279, "gammapy.modeling.models.TemplateNDSpectralModel.integral", false]], "integral() (gammapy.modeling.models.templatephasecurvetemporalmodel method)": [[281, "gammapy.modeling.models.TemplatePhaseCurveTemporalModel.integral", false]], "integral() (gammapy.modeling.models.templatespectralmodel method)": [[283, "gammapy.modeling.models.TemplateSpectralModel.integral", false]], "integral() (gammapy.modeling.models.temporalmodel method)": [[284, "gammapy.modeling.models.TemporalModel.integral", false]], "integral_error() (gammapy.astro.darkmatter.darkmatterannihilationspectralmodel method)": [[19, "gammapy.astro.darkmatter.DarkMatterAnnihilationSpectralModel.integral_error", false]], "integral_error() (gammapy.astro.darkmatter.darkmatterdecayspectralmodel method)": [[20, "gammapy.astro.darkmatter.DarkMatterDecaySpectralModel.integral_error", false]], "integral_error() (gammapy.astro.darkmatter.primaryflux method)": [[26, "gammapy.astro.darkmatter.PrimaryFlux.integral_error", false]], "integral_error() (gammapy.modeling.models.brokenpowerlawspectralmodel method)": [[224, "gammapy.modeling.models.BrokenPowerLawSpectralModel.integral_error", false]], "integral_error() (gammapy.modeling.models.compoundspectralmodel method)": [[225, "gammapy.modeling.models.CompoundSpectralModel.integral_error", false]], "integral_error() (gammapy.modeling.models.constantspectralmodel method)": [[228, "gammapy.modeling.models.ConstantSpectralModel.integral_error", false]], "integral_error() (gammapy.modeling.models.eblabsorptionnormspectralmodel method)": [[232, "gammapy.modeling.models.EBLAbsorptionNormSpectralModel.integral_error", false]], "integral_error() (gammapy.modeling.models.expcutoffpowerlaw3fglspectralmodel method)": [[234, "gammapy.modeling.models.ExpCutoffPowerLaw3FGLSpectralModel.integral_error", false]], "integral_error() (gammapy.modeling.models.expcutoffpowerlawnormspectralmodel method)": [[235, "gammapy.modeling.models.ExpCutoffPowerLawNormSpectralModel.integral_error", false]], "integral_error() (gammapy.modeling.models.expcutoffpowerlawspectralmodel method)": [[236, "gammapy.modeling.models.ExpCutoffPowerLawSpectralModel.integral_error", false]], "integral_error() (gammapy.modeling.models.gaussianspectralmodel method)": [[241, "gammapy.modeling.models.GaussianSpectralModel.integral_error", false]], "integral_error() (gammapy.modeling.models.logparabolanormspectralmodel method)": [[247, "gammapy.modeling.models.LogParabolaNormSpectralModel.integral_error", false]], "integral_error() (gammapy.modeling.models.logparabolaspectralmodel method)": [[248, "gammapy.modeling.models.LogParabolaSpectralModel.integral_error", false]], "integral_error() (gammapy.modeling.models.meyercrabspectralmodel method)": [[251, "gammapy.modeling.models.MeyerCrabSpectralModel.integral_error", false]], "integral_error() (gammapy.modeling.models.naimaspectralmodel method)": [[255, "gammapy.modeling.models.NaimaSpectralModel.integral_error", false]], "integral_error() (gammapy.modeling.models.piecewisenormspectralmodel method)": [[257, "gammapy.modeling.models.PiecewiseNormSpectralModel.integral_error", false]], "integral_error() (gammapy.modeling.models.powerlaw2spectralmodel method)": [[259, "gammapy.modeling.models.PowerLaw2SpectralModel.integral_error", false]], "integral_error() (gammapy.modeling.models.powerlawnormspectralmodel method)": [[260, "gammapy.modeling.models.PowerLawNormSpectralModel.integral_error", false]], "integral_error() (gammapy.modeling.models.powerlawspectralmodel method)": [[261, "gammapy.modeling.models.PowerLawSpectralModel.integral_error", false]], "integral_error() (gammapy.modeling.models.scalespectralmodel method)": [[266, "gammapy.modeling.models.ScaleSpectralModel.integral_error", false]], "integral_error() (gammapy.modeling.models.smoothbrokenpowerlawspectralmodel method)": [[271, "gammapy.modeling.models.SmoothBrokenPowerLawSpectralModel.integral_error", false]], "integral_error() (gammapy.modeling.models.spectralmodel method)": [[273, "gammapy.modeling.models.SpectralModel.integral_error", false]], "integral_error() (gammapy.modeling.models.superexpcutoffpowerlaw3fglspectralmodel method)": [[274, "gammapy.modeling.models.SuperExpCutoffPowerLaw3FGLSpectralModel.integral_error", false]], "integral_error() (gammapy.modeling.models.superexpcutoffpowerlaw4fgldr3spectralmodel method)": [[275, "gammapy.modeling.models.SuperExpCutoffPowerLaw4FGLDR3SpectralModel.integral_error", false]], "integral_error() (gammapy.modeling.models.superexpcutoffpowerlaw4fglspectralmodel method)": [[276, "gammapy.modeling.models.SuperExpCutoffPowerLaw4FGLSpectralModel.integral_error", false]], "integral_error() (gammapy.modeling.models.templatendspectralmodel method)": [[279, "gammapy.modeling.models.TemplateNDSpectralModel.integral_error", false]], "integral_error() (gammapy.modeling.models.templatespectralmodel method)": [[283, "gammapy.modeling.models.TemplateSpectralModel.integral_error", false]], "integrate_geom() (gammapy.modeling.models.constantfluxspatialmodel static method)": [[226, "gammapy.modeling.models.ConstantFluxSpatialModel.integrate_geom", false]], "integrate_geom() (gammapy.modeling.models.constantspatialmodel method)": [[227, "gammapy.modeling.models.ConstantSpatialModel.integrate_geom", false]], "integrate_geom() (gammapy.modeling.models.diskspatialmodel method)": [[231, "gammapy.modeling.models.DiskSpatialModel.integrate_geom", false]], "integrate_geom() (gammapy.modeling.models.gaussianspatialmodel method)": [[240, "gammapy.modeling.models.GaussianSpatialModel.integrate_geom", false]], "integrate_geom() (gammapy.modeling.models.generalizedgaussianspatialmodel method)": [[243, "gammapy.modeling.models.GeneralizedGaussianSpatialModel.integrate_geom", false]], "integrate_geom() (gammapy.modeling.models.piecewisenormspatialmodel method)": [[256, "gammapy.modeling.models.PiecewiseNormSpatialModel.integrate_geom", false]], "integrate_geom() (gammapy.modeling.models.pointspatialmodel method)": [[258, "gammapy.modeling.models.PointSpatialModel.integrate_geom", false]], "integrate_geom() (gammapy.modeling.models.shell2spatialmodel method)": [[267, "gammapy.modeling.models.Shell2SpatialModel.integrate_geom", false]], "integrate_geom() (gammapy.modeling.models.shellspatialmodel method)": [[268, "gammapy.modeling.models.ShellSpatialModel.integrate_geom", false]], "integrate_geom() (gammapy.modeling.models.skymodel method)": [[270, "gammapy.modeling.models.SkyModel.integrate_geom", false]], "integrate_geom() (gammapy.modeling.models.spatialmodel method)": [[272, "gammapy.modeling.models.SpatialModel.integrate_geom", false]], "integrate_geom() (gammapy.modeling.models.templatendspatialmodel method)": [[278, "gammapy.modeling.models.TemplateNDSpatialModel.integrate_geom", false]], "integrate_geom() (gammapy.modeling.models.templatespatialmodel method)": [[282, "gammapy.modeling.models.TemplateSpatialModel.integrate_geom", false]], "integrate_log_log() (gammapy.irf.background2d method)": [[151, "gammapy.irf.Background2D.integrate_log_log", false]], "integrate_log_log() (gammapy.irf.background3d method)": [[152, "gammapy.irf.Background3D.integrate_log_log", false]], "integrate_log_log() (gammapy.irf.backgroundirf method)": [[153, "gammapy.irf.BackgroundIRF.integrate_log_log", false]], "integrate_log_log() (gammapy.irf.edispkernel method)": [[154, "gammapy.irf.EDispKernel.integrate_log_log", false]], "integrate_log_log() (gammapy.irf.effectiveareatable2d method)": [[157, "gammapy.irf.EffectiveAreaTable2D.integrate_log_log", false]], "integrate_log_log() (gammapy.irf.energydependentmultigausspsf method)": [[158, "gammapy.irf.EnergyDependentMultiGaussPSF.integrate_log_log", false]], "integrate_log_log() (gammapy.irf.energydispersion2d method)": [[159, "gammapy.irf.EnergyDispersion2D.integrate_log_log", false]], "integrate_log_log() (gammapy.irf.irf method)": [[161, "gammapy.irf.IRF.integrate_log_log", false]], "integrate_log_log() (gammapy.irf.parametricpsf method)": [[168, "gammapy.irf.ParametricPSF.integrate_log_log", false]], "integrate_log_log() (gammapy.irf.psf3d method)": [[164, "gammapy.irf.PSF3D.integrate_log_log", false]], "integrate_log_log() (gammapy.irf.psfking method)": [[166, "gammapy.irf.PSFKing.integrate_log_log", false]], "integrate_log_log() (gammapy.irf.radmax2d method)": [[169, "gammapy.irf.RadMax2D.integrate_log_log", false]], "integrate_spectrum() (in module gammapy.modeling.models)": [[289, "gammapy.modeling.models.integrate_spectrum", false]], "integrate_spectrum_separation() (gammapy.astro.darkmatter.burkertprofile method)": [[17, "gammapy.astro.darkmatter.BurkertProfile.integrate_spectrum_separation", false]], "integrate_spectrum_separation() (gammapy.astro.darkmatter.dmprofile method)": [[18, "gammapy.astro.darkmatter.DMProfile.integrate_spectrum_separation", false]], "integrate_spectrum_separation() (gammapy.astro.darkmatter.einastoprofile method)": [[21, "gammapy.astro.darkmatter.EinastoProfile.integrate_spectrum_separation", false]], "integrate_spectrum_separation() (gammapy.astro.darkmatter.isothermalprofile method)": [[22, "gammapy.astro.darkmatter.IsothermalProfile.integrate_spectrum_separation", false]], "integrate_spectrum_separation() (gammapy.astro.darkmatter.mooreprofile method)": [[24, "gammapy.astro.darkmatter.MooreProfile.integrate_spectrum_separation", false]], "integrate_spectrum_separation() (gammapy.astro.darkmatter.nfwprofile method)": [[25, "gammapy.astro.darkmatter.NFWProfile.integrate_spectrum_separation", false]], "integrate_spectrum_separation() (gammapy.astro.darkmatter.zhaoprofile method)": [[27, "gammapy.astro.darkmatter.ZhaoProfile.integrate_spectrum_separation", false]], "interp (gammapy.maps.mapaxis attribute)": [[202, "gammapy.maps.MapAxis.interp", false]], "interp (gammapy.maps.timemapaxis attribute)": [[207, "gammapy.maps.TimeMapAxis.interp", false]], "interp_by_coord() (gammapy.maps.hpxmap method)": [[197, "gammapy.maps.HpxMap.interp_by_coord", false]], "interp_by_coord() (gammapy.maps.hpxndmap method)": [[198, "gammapy.maps.HpxNDMap.interp_by_coord", false]], "interp_by_coord() (gammapy.maps.map method)": [[200, "gammapy.maps.Map.interp_by_coord", false]], "interp_by_coord() (gammapy.maps.regionndmap method)": [[206, "gammapy.maps.RegionNDMap.interp_by_coord", false]], "interp_by_coord() (gammapy.maps.wcsmap method)": [[209, "gammapy.maps.WcsMap.interp_by_coord", false]], "interp_by_coord() (gammapy.maps.wcsndmap method)": [[210, "gammapy.maps.WcsNDMap.interp_by_coord", false]], "interp_by_pix() (gammapy.maps.hpxmap method)": [[197, "gammapy.maps.HpxMap.interp_by_pix", false]], "interp_by_pix() (gammapy.maps.hpxndmap method)": [[198, "gammapy.maps.HpxNDMap.interp_by_pix", false]], "interp_by_pix() (gammapy.maps.map method)": [[200, "gammapy.maps.Map.interp_by_pix", false]], "interp_by_pix() (gammapy.maps.regionndmap method)": [[206, "gammapy.maps.RegionNDMap.interp_by_pix", false]], "interp_by_pix() (gammapy.maps.wcsmap method)": [[209, "gammapy.maps.WcsMap.interp_by_pix", false]], "interp_by_pix() (gammapy.maps.wcsndmap method)": [[210, "gammapy.maps.WcsNDMap.interp_by_pix", false]], "interp_missing_data() (gammapy.irf.background2d method)": [[151, "gammapy.irf.Background2D.interp_missing_data", false]], "interp_missing_data() (gammapy.irf.background3d method)": [[152, "gammapy.irf.Background3D.interp_missing_data", false]], "interp_missing_data() (gammapy.irf.backgroundirf method)": [[153, "gammapy.irf.BackgroundIRF.interp_missing_data", false]], "interp_missing_data() (gammapy.irf.edispkernel method)": [[154, "gammapy.irf.EDispKernel.interp_missing_data", false]], "interp_missing_data() (gammapy.irf.effectiveareatable2d method)": [[157, "gammapy.irf.EffectiveAreaTable2D.interp_missing_data", false]], "interp_missing_data() (gammapy.irf.energydependentmultigausspsf method)": [[158, "gammapy.irf.EnergyDependentMultiGaussPSF.interp_missing_data", false]], "interp_missing_data() (gammapy.irf.energydispersion2d method)": [[159, "gammapy.irf.EnergyDispersion2D.interp_missing_data", false]], "interp_missing_data() (gammapy.irf.irf method)": [[161, "gammapy.irf.IRF.interp_missing_data", false]], "interp_missing_data() (gammapy.irf.parametricpsf method)": [[168, "gammapy.irf.ParametricPSF.interp_missing_data", false]], "interp_missing_data() (gammapy.irf.psf3d method)": [[164, "gammapy.irf.PSF3D.interp_missing_data", false]], "interp_missing_data() (gammapy.irf.psfking method)": [[166, "gammapy.irf.PSFKing.interp_missing_data", false]], "interp_missing_data() (gammapy.irf.radmax2d method)": [[169, "gammapy.irf.RadMax2D.interp_missing_data", false]], "interp_to_geom() (gammapy.maps.hpxmap method)": [[197, "gammapy.maps.HpxMap.interp_to_geom", false]], "interp_to_geom() (gammapy.maps.hpxndmap method)": [[198, "gammapy.maps.HpxNDMap.interp_to_geom", false]], "interp_to_geom() (gammapy.maps.map method)": [[200, "gammapy.maps.Map.interp_to_geom", false]], "interp_to_geom() (gammapy.maps.regionndmap method)": [[206, "gammapy.maps.RegionNDMap.interp_to_geom", false]], "interp_to_geom() (gammapy.maps.wcsmap method)": [[209, "gammapy.maps.WcsMap.interp_to_geom", false]], "interp_to_geom() (gammapy.maps.wcsndmap method)": [[210, "gammapy.maps.WcsNDMap.interp_to_geom", false]], "interp_weights() (gammapy.maps.hpxgeom method)": [[196, "gammapy.maps.HpxGeom.interp_weights", false]], "interpolate_profile() (in module gammapy.utils.interpolation)": [[334, "gammapy.utils.interpolation.interpolate_profile", false]], "interpolation_scale() (in module gammapy.utils.interpolation)": [[335, "gammapy.utils.interpolation.interpolation_scale", false]], "inverse (gammapy.astro.population.casebattacharya1998 attribute)": [[28, "gammapy.astro.population.CaseBattacharya1998.inverse", false]], "inverse (gammapy.astro.population.exponential attribute)": [[29, "gammapy.astro.population.Exponential.inverse", false]], "inverse (gammapy.astro.population.faucherkaspi2006 attribute)": [[30, "gammapy.astro.population.FaucherKaspi2006.inverse", false]], "inverse (gammapy.astro.population.faucherkaspi2006velocitybimodal attribute)": [[31, "gammapy.astro.population.FaucherKaspi2006VelocityBimodal.inverse", false]], "inverse (gammapy.astro.population.faucherkaspi2006velocitymaxwellian attribute)": [[32, "gammapy.astro.population.FaucherKaspi2006VelocityMaxwellian.inverse", false]], "inverse (gammapy.astro.population.lorimer2006 attribute)": [[35, "gammapy.astro.population.Lorimer2006.inverse", false]], "inverse (gammapy.astro.population.paczynski1990 attribute)": [[36, "gammapy.astro.population.Paczynski1990.inverse", false]], "inverse (gammapy.astro.population.paczynski1990velocity attribute)": [[37, "gammapy.astro.population.Paczynski1990Velocity.inverse", false]], "inverse (gammapy.astro.population.yusifovkucuk2004 attribute)": [[39, "gammapy.astro.population.YusifovKucuk2004.inverse", false]], "inverse (gammapy.astro.population.yusifovkucuk2004b attribute)": [[40, "gammapy.astro.population.YusifovKucuk2004B.inverse", false]], "inverse() (gammapy.astro.darkmatter.darkmatterannihilationspectralmodel method)": [[19, "gammapy.astro.darkmatter.DarkMatterAnnihilationSpectralModel.inverse", false]], "inverse() (gammapy.astro.darkmatter.darkmatterdecayspectralmodel method)": [[20, "gammapy.astro.darkmatter.DarkMatterDecaySpectralModel.inverse", false]], "inverse() (gammapy.astro.darkmatter.primaryflux method)": [[26, "gammapy.astro.darkmatter.PrimaryFlux.inverse", false]], "inverse() (gammapy.modeling.models.brokenpowerlawspectralmodel method)": [[224, "gammapy.modeling.models.BrokenPowerLawSpectralModel.inverse", false]], "inverse() (gammapy.modeling.models.compoundspectralmodel method)": [[225, "gammapy.modeling.models.CompoundSpectralModel.inverse", false]], "inverse() (gammapy.modeling.models.constantspectralmodel method)": [[228, "gammapy.modeling.models.ConstantSpectralModel.inverse", false]], "inverse() (gammapy.modeling.models.eblabsorptionnormspectralmodel method)": [[232, "gammapy.modeling.models.EBLAbsorptionNormSpectralModel.inverse", false]], "inverse() (gammapy.modeling.models.expcutoffpowerlaw3fglspectralmodel method)": [[234, "gammapy.modeling.models.ExpCutoffPowerLaw3FGLSpectralModel.inverse", false]], "inverse() (gammapy.modeling.models.expcutoffpowerlawnormspectralmodel method)": [[235, "gammapy.modeling.models.ExpCutoffPowerLawNormSpectralModel.inverse", false]], "inverse() (gammapy.modeling.models.expcutoffpowerlawspectralmodel method)": [[236, "gammapy.modeling.models.ExpCutoffPowerLawSpectralModel.inverse", false]], "inverse() (gammapy.modeling.models.gaussianspectralmodel method)": [[241, "gammapy.modeling.models.GaussianSpectralModel.inverse", false]], "inverse() (gammapy.modeling.models.logparabolanormspectralmodel method)": [[247, "gammapy.modeling.models.LogParabolaNormSpectralModel.inverse", false]], "inverse() (gammapy.modeling.models.logparabolaspectralmodel method)": [[248, "gammapy.modeling.models.LogParabolaSpectralModel.inverse", false]], "inverse() (gammapy.modeling.models.meyercrabspectralmodel method)": [[251, "gammapy.modeling.models.MeyerCrabSpectralModel.inverse", false]], "inverse() (gammapy.modeling.models.naimaspectralmodel method)": [[255, "gammapy.modeling.models.NaimaSpectralModel.inverse", false]], "inverse() (gammapy.modeling.models.piecewisenormspectralmodel method)": [[257, "gammapy.modeling.models.PiecewiseNormSpectralModel.inverse", false]], "inverse() (gammapy.modeling.models.powerlaw2spectralmodel method)": [[259, "gammapy.modeling.models.PowerLaw2SpectralModel.inverse", false]], "inverse() (gammapy.modeling.models.powerlawnormspectralmodel method)": [[260, "gammapy.modeling.models.PowerLawNormSpectralModel.inverse", false]], "inverse() (gammapy.modeling.models.powerlawspectralmodel method)": [[261, "gammapy.modeling.models.PowerLawSpectralModel.inverse", false]], "inverse() (gammapy.modeling.models.scalespectralmodel method)": [[266, "gammapy.modeling.models.ScaleSpectralModel.inverse", false]], "inverse() (gammapy.modeling.models.smoothbrokenpowerlawspectralmodel method)": [[271, "gammapy.modeling.models.SmoothBrokenPowerLawSpectralModel.inverse", false]], "inverse() (gammapy.modeling.models.spectralmodel method)": [[273, "gammapy.modeling.models.SpectralModel.inverse", false]], "inverse() (gammapy.modeling.models.superexpcutoffpowerlaw3fglspectralmodel method)": [[274, "gammapy.modeling.models.SuperExpCutoffPowerLaw3FGLSpectralModel.inverse", false]], "inverse() (gammapy.modeling.models.superexpcutoffpowerlaw4fgldr3spectralmodel method)": [[275, "gammapy.modeling.models.SuperExpCutoffPowerLaw4FGLDR3SpectralModel.inverse", false]], "inverse() (gammapy.modeling.models.superexpcutoffpowerlaw4fglspectralmodel method)": [[276, "gammapy.modeling.models.SuperExpCutoffPowerLaw4FGLSpectralModel.inverse", false]], "inverse() (gammapy.modeling.models.templatendspectralmodel method)": [[279, "gammapy.modeling.models.TemplateNDSpectralModel.inverse", false]], "inverse() (gammapy.modeling.models.templatespectralmodel method)": [[283, "gammapy.modeling.models.TemplateSpectralModel.inverse", false]], "inverse_all() (gammapy.astro.darkmatter.darkmatterannihilationspectralmodel method)": [[19, "gammapy.astro.darkmatter.DarkMatterAnnihilationSpectralModel.inverse_all", false]], "inverse_all() (gammapy.astro.darkmatter.darkmatterdecayspectralmodel method)": [[20, "gammapy.astro.darkmatter.DarkMatterDecaySpectralModel.inverse_all", false]], "inverse_all() (gammapy.astro.darkmatter.primaryflux method)": [[26, "gammapy.astro.darkmatter.PrimaryFlux.inverse_all", false]], "inverse_all() (gammapy.modeling.models.brokenpowerlawspectralmodel method)": [[224, "gammapy.modeling.models.BrokenPowerLawSpectralModel.inverse_all", false]], "inverse_all() (gammapy.modeling.models.compoundspectralmodel method)": [[225, "gammapy.modeling.models.CompoundSpectralModel.inverse_all", false]], "inverse_all() (gammapy.modeling.models.constantspectralmodel method)": [[228, "gammapy.modeling.models.ConstantSpectralModel.inverse_all", false]], "inverse_all() (gammapy.modeling.models.eblabsorptionnormspectralmodel method)": [[232, "gammapy.modeling.models.EBLAbsorptionNormSpectralModel.inverse_all", false]], "inverse_all() (gammapy.modeling.models.expcutoffpowerlaw3fglspectralmodel method)": [[234, "gammapy.modeling.models.ExpCutoffPowerLaw3FGLSpectralModel.inverse_all", false]], "inverse_all() (gammapy.modeling.models.expcutoffpowerlawnormspectralmodel method)": [[235, "gammapy.modeling.models.ExpCutoffPowerLawNormSpectralModel.inverse_all", false]], "inverse_all() (gammapy.modeling.models.expcutoffpowerlawspectralmodel method)": [[236, "gammapy.modeling.models.ExpCutoffPowerLawSpectralModel.inverse_all", false]], "inverse_all() (gammapy.modeling.models.gaussianspectralmodel method)": [[241, "gammapy.modeling.models.GaussianSpectralModel.inverse_all", false]], "inverse_all() (gammapy.modeling.models.logparabolanormspectralmodel method)": [[247, "gammapy.modeling.models.LogParabolaNormSpectralModel.inverse_all", false]], "inverse_all() (gammapy.modeling.models.logparabolaspectralmodel method)": [[248, "gammapy.modeling.models.LogParabolaSpectralModel.inverse_all", false]], "inverse_all() (gammapy.modeling.models.meyercrabspectralmodel method)": [[251, "gammapy.modeling.models.MeyerCrabSpectralModel.inverse_all", false]], "inverse_all() (gammapy.modeling.models.naimaspectralmodel method)": [[255, "gammapy.modeling.models.NaimaSpectralModel.inverse_all", false]], "inverse_all() (gammapy.modeling.models.piecewisenormspectralmodel method)": [[257, "gammapy.modeling.models.PiecewiseNormSpectralModel.inverse_all", false]], "inverse_all() (gammapy.modeling.models.powerlaw2spectralmodel method)": [[259, "gammapy.modeling.models.PowerLaw2SpectralModel.inverse_all", false]], "inverse_all() (gammapy.modeling.models.powerlawnormspectralmodel method)": [[260, "gammapy.modeling.models.PowerLawNormSpectralModel.inverse_all", false]], "inverse_all() (gammapy.modeling.models.powerlawspectralmodel method)": [[261, "gammapy.modeling.models.PowerLawSpectralModel.inverse_all", false]], "inverse_all() (gammapy.modeling.models.scalespectralmodel method)": [[266, "gammapy.modeling.models.ScaleSpectralModel.inverse_all", false]], "inverse_all() (gammapy.modeling.models.smoothbrokenpowerlawspectralmodel method)": [[271, "gammapy.modeling.models.SmoothBrokenPowerLawSpectralModel.inverse_all", false]], "inverse_all() (gammapy.modeling.models.spectralmodel method)": [[273, "gammapy.modeling.models.SpectralModel.inverse_all", false]], "inverse_all() (gammapy.modeling.models.superexpcutoffpowerlaw3fglspectralmodel method)": [[274, "gammapy.modeling.models.SuperExpCutoffPowerLaw3FGLSpectralModel.inverse_all", false]], "inverse_all() (gammapy.modeling.models.superexpcutoffpowerlaw4fgldr3spectralmodel method)": [[275, "gammapy.modeling.models.SuperExpCutoffPowerLaw4FGLDR3SpectralModel.inverse_all", false]], "inverse_all() (gammapy.modeling.models.superexpcutoffpowerlaw4fglspectralmodel method)": [[276, "gammapy.modeling.models.SuperExpCutoffPowerLaw4FGLSpectralModel.inverse_all", false]], "inverse_all() (gammapy.modeling.models.templatendspectralmodel method)": [[279, "gammapy.modeling.models.TemplateNDSpectralModel.inverse_all", false]], "inverse_all() (gammapy.modeling.models.templatespectralmodel method)": [[283, "gammapy.modeling.models.TemplateSpectralModel.inverse_all", false]], "inverse_transform() (gammapy.modeling.parameter method)": [[218, "gammapy.modeling.Parameter.inverse_transform", false]], "inverse_transform() (gammapy.modeling.priorparameter method)": [[220, "gammapy.modeling.PriorParameter.inverse_transform", false]], "inversecdfsampler (class in gammapy.utils.random)": [[343, "gammapy.utils.random.InverseCDFSampler", false]], "ipix (gammapy.maps.hpxgeom attribute)": [[196, "gammapy.maps.HpxGeom.ipix", false]], "irf": [[608, "term-IRF", true]], "irf (class in gammapy.irf)": [[161, "gammapy.irf.IRF", false]], "irf_registry (in module gammapy.irf)": [[163, "gammapy.irf.IRF_REGISTRY", false]], "irfmap (class in gammapy.irf)": [[162, "gammapy.irf.IRFMap", false]], "is_aligned() (gammapy.maps.hpxgeom method)": [[196, "gammapy.maps.HpxGeom.is_aligned", false]], "is_aligned() (gammapy.maps.mapaxis method)": [[202, "gammapy.maps.MapAxis.is_aligned", false]], "is_aligned() (gammapy.maps.timemapaxis method)": [[207, "gammapy.maps.TimeMapAxis.is_aligned", false]], "is_aligned() (gammapy.maps.wcsgeom method)": [[208, "gammapy.maps.WcsGeom.is_aligned", false]], "is_all_point_sky_regions (gammapy.maps.regiongeom attribute)": [[205, "gammapy.maps.RegionGeom.is_all_point_sky_regions", false]], "is_all_same_energy_shape (gammapy.datasets.datasets attribute)": [[101, "gammapy.datasets.Datasets.is_all_same_energy_shape", false]], "is_all_same_shape (gammapy.datasets.datasets attribute)": [[101, "gammapy.datasets.Datasets.is_all_same_shape", false]], "is_all_same_type (gammapy.datasets.datasets attribute)": [[101, "gammapy.datasets.Datasets.is_all_same_type", false]], "is_allclose() (gammapy.irf.background2d method)": [[151, "gammapy.irf.Background2D.is_allclose", false]], "is_allclose() (gammapy.irf.background3d method)": [[152, "gammapy.irf.Background3D.is_allclose", false]], "is_allclose() (gammapy.irf.backgroundirf method)": [[153, "gammapy.irf.BackgroundIRF.is_allclose", false]], "is_allclose() (gammapy.irf.edispkernel method)": [[154, "gammapy.irf.EDispKernel.is_allclose", false]], "is_allclose() (gammapy.irf.effectiveareatable2d method)": [[157, "gammapy.irf.EffectiveAreaTable2D.is_allclose", false]], "is_allclose() (gammapy.irf.energydependentmultigausspsf method)": [[158, "gammapy.irf.EnergyDependentMultiGaussPSF.is_allclose", false]], "is_allclose() (gammapy.irf.energydispersion2d method)": [[159, "gammapy.irf.EnergyDispersion2D.is_allclose", false]], "is_allclose() (gammapy.irf.irf method)": [[161, "gammapy.irf.IRF.is_allclose", false]], "is_allclose() (gammapy.irf.parametricpsf method)": [[168, "gammapy.irf.ParametricPSF.is_allclose", false]], "is_allclose() (gammapy.irf.psf3d method)": [[164, "gammapy.irf.PSF3D.is_allclose", false]], "is_allclose() (gammapy.irf.psfking method)": [[166, "gammapy.irf.PSFKing.is_allclose", false]], "is_allclose() (gammapy.irf.radmax2d method)": [[169, "gammapy.irf.RadMax2D.is_allclose", false]], "is_allclose() (gammapy.maps.hpxgeom method)": [[196, "gammapy.maps.HpxGeom.is_allclose", false]], "is_allclose() (gammapy.maps.hpxmap method)": [[197, "gammapy.maps.HpxMap.is_allclose", false]], "is_allclose() (gammapy.maps.hpxndmap method)": [[198, "gammapy.maps.HpxNDMap.is_allclose", false]], "is_allclose() (gammapy.maps.labelmapaxis method)": [[199, "gammapy.maps.LabelMapAxis.is_allclose", false]], "is_allclose() (gammapy.maps.map method)": [[200, "gammapy.maps.Map.is_allclose", false]], "is_allclose() (gammapy.maps.mapaxes method)": [[201, "gammapy.maps.MapAxes.is_allclose", false]], "is_allclose() (gammapy.maps.mapaxis method)": [[202, "gammapy.maps.MapAxis.is_allclose", false]], "is_allclose() (gammapy.maps.regiongeom method)": [[205, "gammapy.maps.RegionGeom.is_allclose", false]], "is_allclose() (gammapy.maps.regionndmap method)": [[206, "gammapy.maps.RegionNDMap.is_allclose", false]], "is_allclose() (gammapy.maps.timemapaxis method)": [[207, "gammapy.maps.TimeMapAxis.is_allclose", false]], "is_allclose() (gammapy.maps.wcsgeom method)": [[208, "gammapy.maps.WcsGeom.is_allclose", false]], "is_allclose() (gammapy.maps.wcsmap method)": [[209, "gammapy.maps.WcsMap.is_allclose", false]], "is_allclose() (gammapy.maps.wcsndmap method)": [[210, "gammapy.maps.WcsNDMap.is_allclose", false]], "is_allsky (gammapy.maps.geom attribute)": [[195, "gammapy.maps.Geom.is_allsky", false]], "is_allsky (gammapy.maps.hpxgeom attribute)": [[196, "gammapy.maps.HpxGeom.is_allsky", false]], "is_allsky (gammapy.maps.regiongeom attribute)": [[205, "gammapy.maps.RegionGeom.is_allsky", false]], "is_allsky (gammapy.maps.wcsgeom attribute)": [[208, "gammapy.maps.WcsGeom.is_allsky", false]], "is_contiguous (gammapy.maps.timemapaxis attribute)": [[207, "gammapy.maps.TimeMapAxis.is_contiguous", false]], "is_convertible_to_flux_sed_type (gammapy.estimators.fluxmaps attribute)": [[126, "gammapy.estimators.FluxMaps.is_convertible_to_flux_sed_type", false]], "is_convertible_to_flux_sed_type (gammapy.estimators.fluxpoints attribute)": [[128, "gammapy.estimators.FluxPoints.is_convertible_to_flux_sed_type", false]], "is_energy_axis (gammapy.maps.mapaxis attribute)": [[202, "gammapy.maps.MapAxis.is_energy_axis", false]], "is_energy_dependent (gammapy.modeling.models.constantfluxspatialmodel attribute)": [[226, "gammapy.modeling.models.ConstantFluxSpatialModel.is_energy_dependent", false]], "is_energy_dependent (gammapy.modeling.models.constantspatialmodel attribute)": [[227, "gammapy.modeling.models.ConstantSpatialModel.is_energy_dependent", false]], "is_energy_dependent (gammapy.modeling.models.constanttemporalmodel attribute)": [[229, "gammapy.modeling.models.ConstantTemporalModel.is_energy_dependent", false]], "is_energy_dependent (gammapy.modeling.models.diskspatialmodel attribute)": [[231, "gammapy.modeling.models.DiskSpatialModel.is_energy_dependent", false]], "is_energy_dependent (gammapy.modeling.models.expdecaytemporalmodel attribute)": [[237, "gammapy.modeling.models.ExpDecayTemporalModel.is_energy_dependent", false]], "is_energy_dependent (gammapy.modeling.models.gaussianspatialmodel attribute)": [[240, "gammapy.modeling.models.GaussianSpatialModel.is_energy_dependent", false]], "is_energy_dependent (gammapy.modeling.models.gaussiantemporalmodel attribute)": [[242, "gammapy.modeling.models.GaussianTemporalModel.is_energy_dependent", false]], "is_energy_dependent (gammapy.modeling.models.generalizedgaussianspatialmodel attribute)": [[243, "gammapy.modeling.models.GeneralizedGaussianSpatialModel.is_energy_dependent", false]], "is_energy_dependent (gammapy.modeling.models.generalizedgaussiantemporalmodel attribute)": [[244, "gammapy.modeling.models.GeneralizedGaussianTemporalModel.is_energy_dependent", false]], "is_energy_dependent (gammapy.modeling.models.lightcurvetemplatetemporalmodel attribute)": [[245, "gammapy.modeling.models.LightCurveTemplateTemporalModel.is_energy_dependent", false]], "is_energy_dependent (gammapy.modeling.models.lineartemporalmodel attribute)": [[246, "gammapy.modeling.models.LinearTemporalModel.is_energy_dependent", false]], "is_energy_dependent (gammapy.modeling.models.piecewisenormspatialmodel attribute)": [[256, "gammapy.modeling.models.PiecewiseNormSpatialModel.is_energy_dependent", false]], "is_energy_dependent (gammapy.modeling.models.pointspatialmodel attribute)": [[258, "gammapy.modeling.models.PointSpatialModel.is_energy_dependent", false]], "is_energy_dependent (gammapy.modeling.models.powerlawtemporalmodel attribute)": [[262, "gammapy.modeling.models.PowerLawTemporalModel.is_energy_dependent", false]], "is_energy_dependent (gammapy.modeling.models.shell2spatialmodel attribute)": [[267, "gammapy.modeling.models.Shell2SpatialModel.is_energy_dependent", false]], "is_energy_dependent (gammapy.modeling.models.shellspatialmodel attribute)": [[268, "gammapy.modeling.models.ShellSpatialModel.is_energy_dependent", false]], "is_energy_dependent (gammapy.modeling.models.sinetemporalmodel attribute)": [[269, "gammapy.modeling.models.SineTemporalModel.is_energy_dependent", false]], "is_energy_dependent (gammapy.modeling.models.spatialmodel attribute)": [[272, "gammapy.modeling.models.SpatialModel.is_energy_dependent", false]], "is_energy_dependent (gammapy.modeling.models.templatendspatialmodel attribute)": [[278, "gammapy.modeling.models.TemplateNDSpatialModel.is_energy_dependent", false]], "is_energy_dependent (gammapy.modeling.models.templatephasecurvetemporalmodel attribute)": [[281, "gammapy.modeling.models.TemplatePhaseCurveTemporalModel.is_energy_dependent", false]], "is_energy_dependent (gammapy.modeling.models.templatespatialmodel attribute)": [[282, "gammapy.modeling.models.TemplateSpatialModel.is_energy_dependent", false]], "is_energy_dependent (gammapy.modeling.models.temporalmodel attribute)": [[284, "gammapy.modeling.models.TemporalModel.is_energy_dependent", false]], "is_equivalent_frame() (gammapy.utils.coordinates.fovaltazframe method)": [[320, "gammapy.utils.coordinates.FoVAltAzFrame.is_equivalent_frame", false]], "is_equivalent_frame() (gammapy.utils.coordinates.fovicrsframe method)": [[321, "gammapy.utils.coordinates.FoVICRSFrame.is_equivalent_frame", false]], "is_fixed_rad_max (gammapy.irf.radmax2d attribute)": [[169, "gammapy.irf.RadMax2D.is_fixed_rad_max", false]], "is_flat (gammapy.maps.geom attribute)": [[195, "gammapy.maps.Geom.is_flat", false]], "is_flat (gammapy.maps.hpxgeom attribute)": [[196, "gammapy.maps.HpxGeom.is_flat", false]], "is_flat (gammapy.maps.mapaxes attribute)": [[201, "gammapy.maps.MapAxes.is_flat", false]], "is_flat (gammapy.maps.regiongeom attribute)": [[205, "gammapy.maps.RegionGeom.is_flat", false]], "is_flat (gammapy.maps.wcsgeom attribute)": [[208, "gammapy.maps.WcsGeom.is_flat", false]], "is_frame_attr_default() (gammapy.utils.coordinates.fovaltazframe method)": [[320, "gammapy.utils.coordinates.FoVAltAzFrame.is_frame_attr_default", false]], "is_frame_attr_default() (gammapy.utils.coordinates.fovicrsframe method)": [[321, "gammapy.utils.coordinates.FoVICRSFrame.is_frame_attr_default", false]], "is_hpx (gammapy.maps.hpxgeom attribute)": [[196, "gammapy.maps.HpxGeom.is_hpx", false]], "is_hpx (gammapy.maps.regiongeom attribute)": [[205, "gammapy.maps.RegionGeom.is_hpx", false]], "is_hpx (gammapy.maps.wcsgeom attribute)": [[208, "gammapy.maps.WcsGeom.is_hpx", false]], "is_image (gammapy.maps.geom attribute)": [[195, "gammapy.maps.Geom.is_image", false]], "is_image (gammapy.maps.hpxgeom attribute)": [[196, "gammapy.maps.HpxGeom.is_image", false]], "is_image (gammapy.maps.regiongeom attribute)": [[205, "gammapy.maps.RegionGeom.is_image", false]], "is_image (gammapy.maps.wcsgeom attribute)": [[208, "gammapy.maps.WcsGeom.is_image", false]], "is_mask (gammapy.maps.hpxmap attribute)": [[197, "gammapy.maps.HpxMap.is_mask", false]], "is_mask (gammapy.maps.hpxndmap attribute)": [[198, "gammapy.maps.HpxNDMap.is_mask", false]], "is_mask (gammapy.maps.map attribute)": [[200, "gammapy.maps.Map.is_mask", false]], "is_mask (gammapy.maps.regionndmap attribute)": [[206, "gammapy.maps.RegionNDMap.is_mask", false]], "is_mask (gammapy.maps.wcsmap attribute)": [[209, "gammapy.maps.WcsMap.is_mask", false]], "is_mask (gammapy.maps.wcsndmap attribute)": [[210, "gammapy.maps.WcsNDMap.is_mask", false]], "is_norm_spectral_model (gammapy.astro.darkmatter.darkmatterannihilationspectralmodel attribute)": [[19, "gammapy.astro.darkmatter.DarkMatterAnnihilationSpectralModel.is_norm_spectral_model", false]], "is_norm_spectral_model (gammapy.astro.darkmatter.darkmatterdecayspectralmodel attribute)": [[20, "gammapy.astro.darkmatter.DarkMatterDecaySpectralModel.is_norm_spectral_model", false]], "is_norm_spectral_model (gammapy.astro.darkmatter.primaryflux attribute)": [[26, "gammapy.astro.darkmatter.PrimaryFlux.is_norm_spectral_model", false]], "is_norm_spectral_model (gammapy.modeling.models.brokenpowerlawspectralmodel attribute)": [[224, "gammapy.modeling.models.BrokenPowerLawSpectralModel.is_norm_spectral_model", false]], "is_norm_spectral_model (gammapy.modeling.models.compoundspectralmodel attribute)": [[225, "gammapy.modeling.models.CompoundSpectralModel.is_norm_spectral_model", false]], "is_norm_spectral_model (gammapy.modeling.models.constantspectralmodel attribute)": [[228, "gammapy.modeling.models.ConstantSpectralModel.is_norm_spectral_model", false]], "is_norm_spectral_model (gammapy.modeling.models.eblabsorptionnormspectralmodel attribute)": [[232, "gammapy.modeling.models.EBLAbsorptionNormSpectralModel.is_norm_spectral_model", false]], "is_norm_spectral_model (gammapy.modeling.models.expcutoffpowerlaw3fglspectralmodel attribute)": [[234, "gammapy.modeling.models.ExpCutoffPowerLaw3FGLSpectralModel.is_norm_spectral_model", false]], "is_norm_spectral_model (gammapy.modeling.models.expcutoffpowerlawnormspectralmodel attribute)": [[235, "gammapy.modeling.models.ExpCutoffPowerLawNormSpectralModel.is_norm_spectral_model", false]], "is_norm_spectral_model (gammapy.modeling.models.expcutoffpowerlawspectralmodel attribute)": [[236, "gammapy.modeling.models.ExpCutoffPowerLawSpectralModel.is_norm_spectral_model", false]], "is_norm_spectral_model (gammapy.modeling.models.gaussianspectralmodel attribute)": [[241, "gammapy.modeling.models.GaussianSpectralModel.is_norm_spectral_model", false]], "is_norm_spectral_model (gammapy.modeling.models.logparabolanormspectralmodel attribute)": [[247, "gammapy.modeling.models.LogParabolaNormSpectralModel.is_norm_spectral_model", false]], "is_norm_spectral_model (gammapy.modeling.models.logparabolaspectralmodel attribute)": [[248, "gammapy.modeling.models.LogParabolaSpectralModel.is_norm_spectral_model", false]], "is_norm_spectral_model (gammapy.modeling.models.meyercrabspectralmodel attribute)": [[251, "gammapy.modeling.models.MeyerCrabSpectralModel.is_norm_spectral_model", false]], "is_norm_spectral_model (gammapy.modeling.models.naimaspectralmodel attribute)": [[255, "gammapy.modeling.models.NaimaSpectralModel.is_norm_spectral_model", false]], "is_norm_spectral_model (gammapy.modeling.models.piecewisenormspectralmodel attribute)": [[257, "gammapy.modeling.models.PiecewiseNormSpectralModel.is_norm_spectral_model", false]], "is_norm_spectral_model (gammapy.modeling.models.powerlaw2spectralmodel attribute)": [[259, "gammapy.modeling.models.PowerLaw2SpectralModel.is_norm_spectral_model", false]], "is_norm_spectral_model (gammapy.modeling.models.powerlawnormspectralmodel attribute)": [[260, "gammapy.modeling.models.PowerLawNormSpectralModel.is_norm_spectral_model", false]], "is_norm_spectral_model (gammapy.modeling.models.powerlawspectralmodel attribute)": [[261, "gammapy.modeling.models.PowerLawSpectralModel.is_norm_spectral_model", false]], "is_norm_spectral_model (gammapy.modeling.models.scalespectralmodel attribute)": [[266, "gammapy.modeling.models.ScaleSpectralModel.is_norm_spectral_model", false]], "is_norm_spectral_model (gammapy.modeling.models.smoothbrokenpowerlawspectralmodel attribute)": [[271, "gammapy.modeling.models.SmoothBrokenPowerLawSpectralModel.is_norm_spectral_model", false]], "is_norm_spectral_model (gammapy.modeling.models.spectralmodel attribute)": [[273, "gammapy.modeling.models.SpectralModel.is_norm_spectral_model", false]], "is_norm_spectral_model (gammapy.modeling.models.superexpcutoffpowerlaw3fglspectralmodel attribute)": [[274, "gammapy.modeling.models.SuperExpCutoffPowerLaw3FGLSpectralModel.is_norm_spectral_model", false]], "is_norm_spectral_model (gammapy.modeling.models.superexpcutoffpowerlaw4fgldr3spectralmodel attribute)": [[275, "gammapy.modeling.models.SuperExpCutoffPowerLaw4FGLDR3SpectralModel.is_norm_spectral_model", false]], "is_norm_spectral_model (gammapy.modeling.models.superexpcutoffpowerlaw4fglspectralmodel attribute)": [[276, "gammapy.modeling.models.SuperExpCutoffPowerLaw4FGLSpectralModel.is_norm_spectral_model", false]], "is_norm_spectral_model (gammapy.modeling.models.templatendspectralmodel attribute)": [[279, "gammapy.modeling.models.TemplateNDSpectralModel.is_norm_spectral_model", false]], "is_norm_spectral_model (gammapy.modeling.models.templatespectralmodel attribute)": [[283, "gammapy.modeling.models.TemplateSpectralModel.is_norm_spectral_model", false]], "is_pointed_observation (gammapy.data.eventlist attribute)": [[83, "gammapy.data.EventList.is_pointed_observation", false]], "is_pointlike (gammapy.catalog.sourcecatalogobject2fhl attribute)": [[71, "gammapy.catalog.SourceCatalogObject2FHL.is_pointlike", false]], "is_pointlike (gammapy.catalog.sourcecatalogobject3fgl attribute)": [[74, "gammapy.catalog.SourceCatalogObject3FGL.is_pointlike", false]], "is_pointlike (gammapy.catalog.sourcecatalogobject3fhl attribute)": [[75, "gammapy.catalog.SourceCatalogObject3FHL.is_pointlike", false]], "is_pointlike (gammapy.catalog.sourcecatalogobject3hwc attribute)": [[76, "gammapy.catalog.SourceCatalogObject3HWC.is_pointlike", false]], "is_pointlike (gammapy.catalog.sourcecatalogobject4fgl attribute)": [[78, "gammapy.catalog.SourceCatalogObject4FGL.is_pointlike", false]], "is_pointlike (gammapy.irf.background2d attribute)": [[151, "gammapy.irf.Background2D.is_pointlike", false]], "is_pointlike (gammapy.irf.background3d attribute)": [[152, "gammapy.irf.Background3D.is_pointlike", false]], "is_pointlike (gammapy.irf.backgroundirf attribute)": [[153, "gammapy.irf.BackgroundIRF.is_pointlike", false]], "is_pointlike (gammapy.irf.edispkernel attribute)": [[154, "gammapy.irf.EDispKernel.is_pointlike", false]], "is_pointlike (gammapy.irf.effectiveareatable2d attribute)": [[157, "gammapy.irf.EffectiveAreaTable2D.is_pointlike", false]], "is_pointlike (gammapy.irf.energydependentmultigausspsf attribute)": [[158, "gammapy.irf.EnergyDependentMultiGaussPSF.is_pointlike", false]], "is_pointlike (gammapy.irf.energydispersion2d attribute)": [[159, "gammapy.irf.EnergyDispersion2D.is_pointlike", false]], "is_pointlike (gammapy.irf.irf attribute)": [[161, "gammapy.irf.IRF.is_pointlike", false]], "is_pointlike (gammapy.irf.parametricpsf attribute)": [[168, "gammapy.irf.ParametricPSF.is_pointlike", false]], "is_pointlike (gammapy.irf.psf3d attribute)": [[164, "gammapy.irf.PSF3D.is_pointlike", false]], "is_pointlike (gammapy.irf.psfking attribute)": [[166, "gammapy.irf.PSFKing.is_pointlike", false]], "is_pointlike (gammapy.irf.radmax2d attribute)": [[169, "gammapy.irf.RadMax2D.is_pointlike", false]], "is_region (gammapy.maps.hpxgeom attribute)": [[196, "gammapy.maps.HpxGeom.is_region", false]], "is_region (gammapy.maps.regiongeom attribute)": [[205, "gammapy.maps.RegionGeom.is_region", false]], "is_region (gammapy.maps.wcsgeom attribute)": [[208, "gammapy.maps.WcsGeom.is_region", false]], "is_regular (gammapy.maps.hpxgeom attribute)": [[196, "gammapy.maps.HpxGeom.is_regular", false]], "is_regular (gammapy.maps.regiongeom attribute)": [[205, "gammapy.maps.RegionGeom.is_regular", false]], "is_regular (gammapy.maps.wcsgeom attribute)": [[208, "gammapy.maps.WcsGeom.is_regular", false]], "is_transformable_to() (gammapy.utils.coordinates.fovaltazframe method)": [[320, "gammapy.utils.coordinates.FoVAltAzFrame.is_transformable_to", false]], "is_transformable_to() (gammapy.utils.coordinates.fovicrsframe method)": [[321, "gammapy.utils.coordinates.FoVICRSFrame.is_transformable_to", false]], "is_ul (gammapy.estimators.fluxmaps attribute)": [[126, "gammapy.estimators.FluxMaps.is_ul", false]], "is_ul (gammapy.estimators.fluxpoints attribute)": [[128, "gammapy.estimators.FluxPoints.is_ul", false]], "is_unidimensional (gammapy.maps.mapaxes attribute)": [[201, "gammapy.maps.MapAxes.is_unidimensional", false]], "isothermalprofile (class in gammapy.astro.darkmatter)": [[22, "gammapy.astro.darkmatter.IsothermalProfile", false]], "isscalar (gammapy.utils.coordinates.fovaltazframe attribute)": [[320, "gammapy.utils.coordinates.FoVAltAzFrame.isscalar", false]], "isscalar (gammapy.utils.coordinates.fovicrsframe attribute)": [[321, "gammapy.utils.coordinates.FoVICRSFrame.isscalar", false]], "items() (gammapy.data.hduindextable method)": [[88, "gammapy.data.HDUIndexTable.items", false]], "items() (gammapy.data.observationtable method)": [[92, "gammapy.data.ObservationTable.items", false]], "items() (gammapy.maps.maps method)": [[204, "gammapy.maps.Maps.items", false]], "iter_by_axis() (gammapy.estimators.fluxmaps method)": [[126, "gammapy.estimators.FluxMaps.iter_by_axis", false]], "iter_by_axis() (gammapy.estimators.fluxpoints method)": [[128, "gammapy.estimators.FluxPoints.iter_by_axis", false]], "iter_by_axis() (gammapy.maps.hpxmap method)": [[197, "gammapy.maps.HpxMap.iter_by_axis", false]], "iter_by_axis() (gammapy.maps.hpxndmap method)": [[198, "gammapy.maps.HpxNDMap.iter_by_axis", false]], "iter_by_axis() (gammapy.maps.map method)": [[200, "gammapy.maps.Map.iter_by_axis", false]], "iter_by_axis() (gammapy.maps.regionndmap method)": [[206, "gammapy.maps.RegionNDMap.iter_by_axis", false]], "iter_by_axis() (gammapy.maps.wcsmap method)": [[209, "gammapy.maps.WcsMap.iter_by_axis", false]], "iter_by_axis() (gammapy.maps.wcsndmap method)": [[210, "gammapy.maps.WcsNDMap.iter_by_axis", false]], "iter_by_axis_data() (gammapy.maps.regionndmap method)": [[206, "gammapy.maps.RegionNDMap.iter_by_axis_data", false]], "iter_by_edges (gammapy.maps.mapaxis attribute)": [[202, "gammapy.maps.MapAxis.iter_by_edges", false]], "iter_by_edges (gammapy.maps.timemapaxis attribute)": [[207, "gammapy.maps.TimeMapAxis.iter_by_edges", false]], "iter_by_image() (gammapy.maps.hpxmap method)": [[197, "gammapy.maps.HpxMap.iter_by_image", false]], "iter_by_image() (gammapy.maps.hpxndmap method)": [[198, "gammapy.maps.HpxNDMap.iter_by_image", false]], "iter_by_image() (gammapy.maps.map method)": [[200, "gammapy.maps.Map.iter_by_image", false]], "iter_by_image() (gammapy.maps.regionndmap method)": [[206, "gammapy.maps.RegionNDMap.iter_by_image", false]], "iter_by_image() (gammapy.maps.wcsmap method)": [[209, "gammapy.maps.WcsMap.iter_by_image", false]], "iter_by_image() (gammapy.maps.wcsndmap method)": [[210, "gammapy.maps.WcsNDMap.iter_by_image", false]], "iter_by_image_data() (gammapy.maps.hpxmap method)": [[197, "gammapy.maps.HpxMap.iter_by_image_data", false]], "iter_by_image_data() (gammapy.maps.hpxndmap method)": [[198, "gammapy.maps.HpxNDMap.iter_by_image_data", false]], "iter_by_image_data() (gammapy.maps.map method)": [[200, "gammapy.maps.Map.iter_by_image_data", false]], "iter_by_image_data() (gammapy.maps.regionndmap method)": [[206, "gammapy.maps.RegionNDMap.iter_by_image_data", false]], "iter_by_image_data() (gammapy.maps.wcsmap method)": [[209, "gammapy.maps.WcsMap.iter_by_image_data", false]], "iter_by_image_data() (gammapy.maps.wcsndmap method)": [[210, "gammapy.maps.WcsNDMap.iter_by_image_data", false]], "iter_by_image_index() (gammapy.maps.hpxmap method)": [[197, "gammapy.maps.HpxMap.iter_by_image_index", false]], "iter_by_image_index() (gammapy.maps.hpxndmap method)": [[198, "gammapy.maps.HpxNDMap.iter_by_image_index", false]], "iter_by_image_index() (gammapy.maps.map method)": [[200, "gammapy.maps.Map.iter_by_image_index", false]], "iter_by_image_index() (gammapy.maps.regionndmap method)": [[206, "gammapy.maps.RegionNDMap.iter_by_image_index", false]], "iter_by_image_index() (gammapy.maps.wcsmap method)": [[209, "gammapy.maps.WcsMap.iter_by_image_index", false]], "iter_by_image_index() (gammapy.maps.wcsndmap method)": [[210, "gammapy.maps.WcsNDMap.iter_by_image_index", false]], "iter_with_reshape (gammapy.maps.mapaxes attribute)": [[201, "gammapy.maps.MapAxes.iter_with_reshape", false]], "itercols() (gammapy.data.hduindextable method)": [[88, "gammapy.data.HDUIndexTable.itercols", false]], "itercols() (gammapy.data.observationtable method)": [[92, "gammapy.data.ObservationTable.itercols", false]], "iterrows() (gammapy.data.hduindextable method)": [[88, "gammapy.data.HDUIndexTable.iterrows", false]], "iterrows() (gammapy.data.observationtable method)": [[92, "gammapy.data.ObservationTable.iterrows", false]], "jfactory (class in gammapy.astro.darkmatter)": [[23, "gammapy.astro.darkmatter.JFactory", false]], "joint analysis": [[608, "term-Joint-Analysis", true]], "json() (gammapy.analysis.analysisconfig method)": [[16, "gammapy.analysis.AnalysisConfig.json", false]], "json() (gammapy.data.eventlistmetadata method)": [[84, "gammapy.data.EventListMetaData.json", false]], "json() (gammapy.data.gtimetadata method)": [[87, "gammapy.data.GTIMetaData.json", false]], "json() (gammapy.data.observationmetadata method)": [[91, "gammapy.data.ObservationMetaData.json", false]], "json() (gammapy.datasets.mapdatasetmetadata method)": [[106, "gammapy.datasets.MapDatasetMetaData.json", false]], "json() (gammapy.estimators.fluxmetadata method)": [[127, "gammapy.estimators.FluxMetaData.json", false]], "k (gammapy.astro.population.faucherspiral attribute)": [[33, "gammapy.astro.population.FaucherSpiral.k", false]], "keep_columns() (gammapy.data.hduindextable method)": [[88, "gammapy.data.HDUIndexTable.keep_columns", false]], "keep_columns() (gammapy.data.observationtable method)": [[92, "gammapy.data.ObservationTable.keep_columns", false]], "kernel() (gammapy.makers.ringbackgroundmaker method)": [[182, "gammapy.makers.RingBackgroundMaker.kernel", false]], "kernels() (gammapy.makers.adaptiveringbackgroundmaker method)": [[172, "gammapy.makers.AdaptiveRingBackgroundMaker.kernels", false]], "keys() (gammapy.data.hduindextable method)": [[88, "gammapy.data.HDUIndexTable.keys", false]], "keys() (gammapy.data.observationtable method)": [[92, "gammapy.data.ObservationTable.keys", false]], "keys() (gammapy.maps.maps method)": [[204, "gammapy.maps.Maps.keys", false]], "labelmapaxis (class in gammapy.maps)": [[199, "gammapy.maps.LabelMapAxis", false]], "lambda_ (gammapy.modeling.models.expcutoffpowerlawnormspectralmodel attribute)": [[235, "gammapy.modeling.models.ExpCutoffPowerLawNormSpectralModel.lambda_", false]], "lambda_ (gammapy.modeling.models.expcutoffpowerlawspectralmodel attribute)": [[236, "gammapy.modeling.models.ExpCutoffPowerLawSpectralModel.lambda_", false]], "large_scale_component (gammapy.catalog.sourcecataloghgps attribute)": [[67, "gammapy.catalog.SourceCatalogHGPS.large_scale_component", false]], "lat (gammapy.maps.mapcoord attribute)": [[203, "gammapy.maps.MapCoord.lat", false]], "lat_0 (gammapy.modeling.models.diskspatialmodel attribute)": [[231, "gammapy.modeling.models.DiskSpatialModel.lat_0", false]], "lat_0 (gammapy.modeling.models.gaussianspatialmodel attribute)": [[240, "gammapy.modeling.models.GaussianSpatialModel.lat_0", false]], "lat_0 (gammapy.modeling.models.generalizedgaussianspatialmodel attribute)": [[243, "gammapy.modeling.models.GeneralizedGaussianSpatialModel.lat_0", false]], "lat_0 (gammapy.modeling.models.pointspatialmodel attribute)": [[258, "gammapy.modeling.models.PointSpatialModel.lat_0", false]], "lat_0 (gammapy.modeling.models.shell2spatialmodel attribute)": [[267, "gammapy.modeling.models.Shell2SpatialModel.lat_0", false]], "lat_0 (gammapy.modeling.models.shellspatialmodel attribute)": [[268, "gammapy.modeling.models.ShellSpatialModel.lat_0", false]], "lat_0 (gammapy.modeling.models.templatespatialmodel attribute)": [[282, "gammapy.modeling.models.TemplateSpatialModel.lat_0", false]], "lazyfitsdata (class in gammapy.utils.fits)": [[330, "gammapy.utils.fits.LazyFitsData", false]], "lifetime_age_of_universe (gammapy.astro.darkmatter.darkmatterdecayspectralmodel attribute)": [[20, "gammapy.astro.darkmatter.DarkMatterDecaySpectralModel.LIFETIME_AGE_OF_UNIVERSE", false]], "lightcurve (gammapy.catalog.sourcecatalogobject2pc attribute)": [[73, "gammapy.catalog.SourceCatalogObject2PC.lightcurve", false]], "lightcurve (gammapy.catalog.sourcecatalogobject3pc attribute)": [[77, "gammapy.catalog.SourceCatalogObject3PC.lightcurve", false]], "lightcurve() (gammapy.catalog.sourcecatalogobject3fgl method)": [[74, "gammapy.catalog.SourceCatalogObject3FGL.lightcurve", false]], "lightcurve() (gammapy.catalog.sourcecatalogobject4fgl method)": [[78, "gammapy.catalog.SourceCatalogObject4FGL.lightcurve", false]], "lightcurveestimator (class in gammapy.estimators)": [[133, "gammapy.estimators.LightCurveEstimator", false]], "lightcurvetemplatetemporalmodel (class in gammapy.modeling.models)": [[245, "gammapy.modeling.models.LightCurveTemplateTemporalModel", false]], "linear (gammapy.astro.population.casebattacharya1998 attribute)": [[28, "gammapy.astro.population.CaseBattacharya1998.linear", false]], "linear (gammapy.astro.population.exponential attribute)": [[29, "gammapy.astro.population.Exponential.linear", false]], "linear (gammapy.astro.population.faucherkaspi2006 attribute)": [[30, "gammapy.astro.population.FaucherKaspi2006.linear", false]], "linear (gammapy.astro.population.faucherkaspi2006velocitybimodal attribute)": [[31, "gammapy.astro.population.FaucherKaspi2006VelocityBimodal.linear", false]], "linear (gammapy.astro.population.faucherkaspi2006velocitymaxwellian attribute)": [[32, "gammapy.astro.population.FaucherKaspi2006VelocityMaxwellian.linear", false]], "linear (gammapy.astro.population.lorimer2006 attribute)": [[35, "gammapy.astro.population.Lorimer2006.linear", false]], "linear (gammapy.astro.population.paczynski1990 attribute)": [[36, "gammapy.astro.population.Paczynski1990.linear", false]], "linear (gammapy.astro.population.paczynski1990velocity attribute)": [[37, "gammapy.astro.population.Paczynski1990Velocity.linear", false]], "linear (gammapy.astro.population.yusifovkucuk2004 attribute)": [[39, "gammapy.astro.population.YusifovKucuk2004.linear", false]], "linear (gammapy.astro.population.yusifovkucuk2004b attribute)": [[40, "gammapy.astro.population.YusifovKucuk2004B.linear", false]], "lineartemporalmodel (class in gammapy.modeling.models)": [[246, "gammapy.modeling.models.LinearTemporalModel", false]], "livetime_fraction (gammapy.data.observationfilter attribute)": [[90, "gammapy.data.ObservationFilter.livetime_fraction", false]], "load() (gammapy.utils.fits.hdulocation method)": [[329, "gammapy.utils.fits.HDULocation.load", false]], "load_irf_dict_from_file() (in module gammapy.irf)": [[171, "gammapy.irf.load_irf_dict_from_file", false]], "loc (gammapy.data.hduindextable attribute)": [[88, "gammapy.data.HDUIndexTable.loc", false]], "loc (gammapy.data.observationtable attribute)": [[92, "gammapy.data.ObservationTable.loc", false]], "loc_indices (gammapy.data.hduindextable attribute)": [[88, "gammapy.data.HDUIndexTable.loc_indices", false]], "loc_indices (gammapy.data.observationtable attribute)": [[92, "gammapy.data.ObservationTable.loc_indices", false]], "local_density (gammapy.astro.darkmatter.burkertprofile attribute)": [[17, "gammapy.astro.darkmatter.BurkertProfile.LOCAL_DENSITY", false]], "local_density (gammapy.astro.darkmatter.dmprofile attribute)": [[18, "gammapy.astro.darkmatter.DMProfile.LOCAL_DENSITY", false]], "local_density (gammapy.astro.darkmatter.einastoprofile attribute)": [[21, "gammapy.astro.darkmatter.EinastoProfile.LOCAL_DENSITY", false]], "local_density (gammapy.astro.darkmatter.isothermalprofile attribute)": [[22, "gammapy.astro.darkmatter.IsothermalProfile.LOCAL_DENSITY", false]], "local_density (gammapy.astro.darkmatter.mooreprofile attribute)": [[24, "gammapy.astro.darkmatter.MooreProfile.LOCAL_DENSITY", false]], "local_density (gammapy.astro.darkmatter.nfwprofile attribute)": [[25, "gammapy.astro.darkmatter.NFWProfile.LOCAL_DENSITY", false]], "local_density (gammapy.astro.darkmatter.zhaoprofile attribute)": [[27, "gammapy.astro.darkmatter.ZhaoProfile.LOCAL_DENSITY", false]], "local_to_global() (gammapy.maps.hpxgeom method)": [[196, "gammapy.maps.HpxGeom.local_to_global", false]], "location (gammapy.data.pointinginfo attribute)": [[95, "gammapy.data.PointingInfo.location", false]], "location (gammapy.utils.coordinates.fovaltazframe attribute)": [[320, "gammapy.utils.coordinates.FoVAltAzFrame.location", false]], "location_info() (gammapy.data.hduindextable method)": [[88, "gammapy.data.HDUIndexTable.location_info", false]], "loglikelihood_dataset() (gammapy.stats.chi2asymmetricerrorfitstatistic class method)": [[296, "gammapy.stats.Chi2AsymmetricErrorFitStatistic.loglikelihood_dataset", false]], "loglikelihood_dataset() (gammapy.stats.chi2fitstatistic class method)": [[297, "gammapy.stats.Chi2FitStatistic.loglikelihood_dataset", false]], "logparabolanormspectralmodel (class in gammapy.modeling.models)": [[247, "gammapy.modeling.models.LogParabolaNormSpectralModel", false]], "logparabolaspectralmodel (class in gammapy.modeling.models)": [[248, "gammapy.modeling.models.LogParabolaSpectralModel", false]], "logspiral (class in gammapy.astro.population)": [[34, "gammapy.astro.population.LogSpiral", false]], "loguniformprior (class in gammapy.modeling.models)": [[249, "gammapy.modeling.models.LogUniformPrior", false]], "lon (gammapy.maps.mapcoord attribute)": [[203, "gammapy.maps.MapCoord.lon", false]], "lon_0 (gammapy.modeling.models.diskspatialmodel attribute)": [[231, "gammapy.modeling.models.DiskSpatialModel.lon_0", false]], "lon_0 (gammapy.modeling.models.gaussianspatialmodel attribute)": [[240, "gammapy.modeling.models.GaussianSpatialModel.lon_0", false]], "lon_0 (gammapy.modeling.models.generalizedgaussianspatialmodel attribute)": [[243, "gammapy.modeling.models.GeneralizedGaussianSpatialModel.lon_0", false]], "lon_0 (gammapy.modeling.models.pointspatialmodel attribute)": [[258, "gammapy.modeling.models.PointSpatialModel.lon_0", false]], "lon_0 (gammapy.modeling.models.shell2spatialmodel attribute)": [[267, "gammapy.modeling.models.Shell2SpatialModel.lon_0", false]], "lon_0 (gammapy.modeling.models.shellspatialmodel attribute)": [[268, "gammapy.modeling.models.ShellSpatialModel.lon_0", false]], "lon_0 (gammapy.modeling.models.templatespatialmodel attribute)": [[282, "gammapy.modeling.models.TemplateSpatialModel.lon_0", false]], "lorimer2006 (class in gammapy.astro.population)": [[35, "gammapy.astro.population.Lorimer2006", false]], "luminosity_spindown (gammapy.astro.source.simplepulsar attribute)": [[54, "gammapy.astro.source.SimplePulsar.luminosity_spindown", false]], "luminosity_spindown() (gammapy.astro.source.pulsar method)": [[51, "gammapy.astro.source.Pulsar.luminosity_spindown", false]], "luminosity_tev() (gammapy.astro.source.snr method)": [[52, "gammapy.astro.source.SNR.luminosity_tev", false]], "luminosity_tev() (gammapy.astro.source.snrtruelovemckee method)": [[53, "gammapy.astro.source.SNRTrueloveMcKee.luminosity_tev", false]], "m (gammapy.astro.population.valleespiral attribute)": [[38, "gammapy.astro.population.ValleeSpiral.m", false]], "magnetic_field (gammapy.astro.source.simplepulsar attribute)": [[54, "gammapy.astro.source.SimplePulsar.magnetic_field", false]], "magnetic_field() (gammapy.astro.source.pulsar method)": [[51, "gammapy.astro.source.Pulsar.magnetic_field", false]], "magnetic_field() (gammapy.astro.source.pwn method)": [[50, "gammapy.astro.source.PWN.magnetic_field", false]], "make_background() (gammapy.makers.mapdatasetmaker method)": [[177, "gammapy.makers.MapDatasetMaker.make_background", false]], "make_background() (gammapy.makers.spectrumdatasetmaker method)": [[184, "gammapy.makers.SpectrumDatasetMaker.make_background", false]], "make_background_fit() (gammapy.makers.fovbackgroundmaker method)": [[174, "gammapy.makers.FoVBackgroundMaker.make_background_fit", false]], "make_background_scale() (gammapy.makers.fovbackgroundmaker method)": [[174, "gammapy.makers.FoVBackgroundMaker.make_background_scale", false]], "make_base_catalog_galactic() (in module gammapy.astro.population)": [[45, "gammapy.astro.population.make_base_catalog_galactic", false]], "make_catalog_random_positions_cube() (in module gammapy.astro.population)": [[46, "gammapy.astro.population.make_catalog_random_positions_cube", false]], "make_catalog_random_positions_sphere() (in module gammapy.astro.population)": [[47, "gammapy.astro.population.make_catalog_random_positions_sphere", false]], "make_concentric_annulus_sky_regions() (in module gammapy.utils.regions)": [[353, "gammapy.utils.regions.make_concentric_annulus_sky_regions", false]], "make_counts() (gammapy.makers.mapdatasetmaker static method)": [[177, "gammapy.makers.MapDatasetMaker.make_counts", false]], "make_counts() (gammapy.makers.phasebackgroundmaker method)": [[178, "gammapy.makers.PhaseBackgroundMaker.make_counts", false]], "make_counts() (gammapy.makers.spectrumdatasetmaker static method)": [[184, "gammapy.makers.SpectrumDatasetMaker.make_counts", false]], "make_counts_off() (gammapy.makers.phasebackgroundmaker method)": [[178, "gammapy.makers.PhaseBackgroundMaker.make_counts_off", false]], "make_counts_off() (gammapy.makers.reflectedregionsbackgroundmaker method)": [[179, "gammapy.makers.ReflectedRegionsBackgroundMaker.make_counts_off", false]], "make_counts_rad_max() (in module gammapy.makers.utils)": [[186, "gammapy.makers.utils.make_counts_rad_max", false]], "make_cubes() (gammapy.makers.adaptiveringbackgroundmaker method)": [[172, "gammapy.makers.AdaptiveRingBackgroundMaker.make_cubes", false]], "make_dataset() (gammapy.makers.datasetsmaker method)": [[173, "gammapy.makers.DatasetsMaker.make_dataset", false]], "make_default_fov_background_model() (gammapy.makers.fovbackgroundmaker method)": [[174, "gammapy.makers.FoVBackgroundMaker.make_default_fov_background_model", false]], "make_edisp() (gammapy.makers.mapdatasetmaker method)": [[177, "gammapy.makers.MapDatasetMaker.make_edisp", false]], "make_edisp() (gammapy.makers.spectrumdatasetmaker method)": [[184, "gammapy.makers.SpectrumDatasetMaker.make_edisp", false]], "make_edisp_kernel() (gammapy.makers.mapdatasetmaker method)": [[177, "gammapy.makers.MapDatasetMaker.make_edisp_kernel", false]], "make_edisp_kernel() (gammapy.makers.spectrumdatasetmaker method)": [[184, "gammapy.makers.SpectrumDatasetMaker.make_edisp_kernel", false]], "make_edisp_kernel_map() (in module gammapy.makers.utils)": [[187, "gammapy.makers.utils.make_edisp_kernel_map", false]], "make_edisp_map() (in module gammapy.makers.utils)": [[188, "gammapy.makers.utils.make_edisp_map", false]], "make_effective_livetime_map() (in module gammapy.makers.utils)": [[189, "gammapy.makers.utils.make_effective_livetime_map", false]], "make_exclusion_mask() (gammapy.makers.fovbackgroundmaker method)": [[174, "gammapy.makers.FoVBackgroundMaker.make_exclusion_mask", false]], "make_exposure() (gammapy.makers.mapdatasetmaker static method)": [[177, "gammapy.makers.MapDatasetMaker.make_exposure", false]], "make_exposure() (gammapy.makers.spectrumdatasetmaker method)": [[184, "gammapy.makers.SpectrumDatasetMaker.make_exposure", false]], "make_exposure_irf() (gammapy.makers.mapdatasetmaker static method)": [[177, "gammapy.makers.MapDatasetMaker.make_exposure_irf", false]], "make_exposure_irf() (gammapy.makers.spectrumdatasetmaker static method)": [[184, "gammapy.makers.SpectrumDatasetMaker.make_exposure_irf", false]], "make_map_background_irf() (in module gammapy.makers.utils)": [[190, "gammapy.makers.utils.make_map_background_irf", false]], "make_map_exposure_true_energy() (in module gammapy.makers.utils)": [[191, "gammapy.makers.utils.make_map_exposure_true_energy", false]], "make_maps_off() (gammapy.makers.ringbackgroundmaker method)": [[182, "gammapy.makers.RingBackgroundMaker.make_maps_off", false]], "make_mask_bkg_invalid() (gammapy.makers.safemaskmaker static method)": [[183, "gammapy.makers.SafeMaskMaker.make_mask_bkg_invalid", false]], "make_mask_energy_aeff_default() (gammapy.makers.safemaskmaker static method)": [[183, "gammapy.makers.SafeMaskMaker.make_mask_energy_aeff_default", false]], "make_mask_energy_aeff_max() (gammapy.makers.safemaskmaker method)": [[183, "gammapy.makers.SafeMaskMaker.make_mask_energy_aeff_max", false]], "make_mask_energy_bkg_peak() (gammapy.makers.safemaskmaker method)": [[183, "gammapy.makers.SafeMaskMaker.make_mask_energy_bkg_peak", false]], "make_mask_energy_edisp_bias() (gammapy.makers.safemaskmaker method)": [[183, "gammapy.makers.SafeMaskMaker.make_mask_energy_edisp_bias", false]], "make_mask_offset_max() (gammapy.makers.safemaskmaker method)": [[183, "gammapy.makers.SafeMaskMaker.make_mask_offset_max", false]], "make_meta_table() (gammapy.makers.mapdatasetmaker static method)": [[177, "gammapy.makers.MapDatasetMaker.make_meta_table", false]], "make_meta_table() (gammapy.makers.spectrumdatasetmaker static method)": [[184, "gammapy.makers.SpectrumDatasetMaker.make_meta_table", false]], "make_observation_time_map() (in module gammapy.makers.utils)": [[192, "gammapy.makers.utils.make_observation_time_map", false]], "make_orthogonal_rectangle_sky_regions() (in module gammapy.utils.regions)": [[354, "gammapy.utils.regions.make_orthogonal_rectangle_sky_regions", false]], "make_path() (in module gammapy.utils.scripts)": [[359, "gammapy.utils.scripts.make_path", false]], "make_psf() (gammapy.makers.mapdatasetmaker method)": [[177, "gammapy.makers.MapDatasetMaker.make_psf", false]], "make_psf() (gammapy.makers.spectrumdatasetmaker method)": [[184, "gammapy.makers.SpectrumDatasetMaker.make_psf", false]], "make_psf_map() (in module gammapy.makers.utils)": [[193, "gammapy.makers.utils.make_psf_map", false]], "make_theta_squared_table() (in module gammapy.makers.utils)": [[194, "gammapy.makers.utils.make_theta_squared_table", false]], "maker": [[608, "term-Maker", true]], "maker (class in gammapy.makers)": [[176, "gammapy.makers.Maker", false]], "maker_registry (in module gammapy.makers)": [[175, "gammapy.makers.MAKER_REGISTRY", false]], "map (class in gammapy.maps)": [[200, "gammapy.maps.Map", false]], "map (gammapy.astro.darkmatter.primaryflux attribute)": [[26, "gammapy.astro.darkmatter.PrimaryFlux.map", false]], "map (gammapy.modeling.models.templatendspatialmodel attribute)": [[278, "gammapy.modeling.models.TemplateNDSpatialModel.map", false]], "map (gammapy.modeling.models.templatendspectralmodel attribute)": [[279, "gammapy.modeling.models.TemplateNDSpectralModel.map", false]], "map (gammapy.modeling.models.templatenpredmodel attribute)": [[280, "gammapy.modeling.models.TemplateNPredModel.map", false]], "map (gammapy.modeling.models.templatespatialmodel attribute)": [[282, "gammapy.modeling.models.TemplateSpatialModel.map", false]], "map_center (gammapy.modeling.models.templatespatialmodel attribute)": [[282, "gammapy.modeling.models.TemplateSpatialModel.map_center", false]], "map_coord() (gammapy.data.eventlist method)": [[83, "gammapy.data.EventList.map_coord", false]], "mapaxes (class in gammapy.maps)": [[201, "gammapy.maps.MapAxes", false]], "mapaxis (class in gammapy.maps)": [[202, "gammapy.maps.MapAxis", false]], "mapcoord (class in gammapy.maps)": [[203, "gammapy.maps.MapCoord", false]], "mapdataset (class in gammapy.datasets)": [[104, "gammapy.datasets.MapDataset", false]], "mapdataseteventsampler (class in gammapy.datasets)": [[105, "gammapy.datasets.MapDatasetEventSampler", false]], "mapdatasetmaker (class in gammapy.makers)": [[177, "gammapy.makers.MapDatasetMaker", false]], "mapdatasetmetadata (class in gammapy.datasets)": [[106, "gammapy.datasets.MapDatasetMetaData", false]], "mapdatasetonoff (class in gammapy.datasets)": [[107, "gammapy.datasets.MapDatasetOnOff", false]], "mappanelplotter (class in gammapy.visualization)": [[382, "gammapy.visualization.MapPanelPlotter", false]], "maps (class in gammapy.maps)": [[204, "gammapy.maps.Maps", false]], "mask (gammapy.data.hduindextable attribute)": [[88, "gammapy.data.HDUIndexTable.mask", false]], "mask (gammapy.data.observationtable attribute)": [[92, "gammapy.data.ObservationTable.mask", false]], "mask (gammapy.datasets.dataset attribute)": [[100, "gammapy.datasets.Dataset.mask", false]], "mask (gammapy.datasets.fluxpointsdataset attribute)": [[103, "gammapy.datasets.FluxPointsDataset.mask", false]], "mask (gammapy.datasets.mapdataset attribute)": [[104, "gammapy.datasets.MapDataset.mask", false]], "mask (gammapy.datasets.mapdatasetonoff attribute)": [[107, "gammapy.datasets.MapDatasetOnOff.mask", false]], "mask (gammapy.datasets.spectrumdataset attribute)": [[111, "gammapy.datasets.SpectrumDataset.mask", false]], "mask (gammapy.datasets.spectrumdatasetonoff attribute)": [[112, "gammapy.datasets.SpectrumDatasetOnOff.mask", false]], "mask_contains_region() (gammapy.maps.wcsndmap method)": [[210, "gammapy.maps.WcsNDMap.mask_contains_region", false]], "mask_fit (gammapy.datasets.mapdataset attribute)": [[104, "gammapy.datasets.MapDataset.mask_fit", false]], "mask_fit (gammapy.datasets.mapdatasetonoff attribute)": [[107, "gammapy.datasets.MapDatasetOnOff.mask_fit", false]], "mask_fit (gammapy.datasets.spectrumdataset attribute)": [[111, "gammapy.datasets.SpectrumDataset.mask_fit", false]], "mask_fit (gammapy.datasets.spectrumdatasetonoff attribute)": [[112, "gammapy.datasets.SpectrumDatasetOnOff.mask_fit", false]], "mask_fit_image (gammapy.datasets.mapdataset attribute)": [[104, "gammapy.datasets.MapDataset.mask_fit_image", false]], "mask_fit_image (gammapy.datasets.mapdatasetonoff attribute)": [[107, "gammapy.datasets.MapDatasetOnOff.mask_fit_image", false]], "mask_fit_image (gammapy.datasets.spectrumdataset attribute)": [[111, "gammapy.datasets.SpectrumDataset.mask_fit_image", false]], "mask_fit_image (gammapy.datasets.spectrumdatasetonoff attribute)": [[112, "gammapy.datasets.SpectrumDatasetOnOff.mask_fit_image", false]], "mask_image (gammapy.datasets.mapdataset attribute)": [[104, "gammapy.datasets.MapDataset.mask_image", false]], "mask_image (gammapy.datasets.mapdatasetonoff attribute)": [[107, "gammapy.datasets.MapDatasetOnOff.mask_image", false]], "mask_image (gammapy.datasets.spectrumdataset attribute)": [[111, "gammapy.datasets.SpectrumDataset.mask_image", false]], "mask_image (gammapy.datasets.spectrumdatasetonoff attribute)": [[112, "gammapy.datasets.SpectrumDatasetOnOff.mask_image", false]], "mask_nearest_position() (gammapy.maps.hpxmap method)": [[197, "gammapy.maps.HpxMap.mask_nearest_position", false]], "mask_nearest_position() (gammapy.maps.hpxndmap method)": [[198, "gammapy.maps.HpxNDMap.mask_nearest_position", false]], "mask_nearest_position() (gammapy.maps.map method)": [[200, "gammapy.maps.Map.mask_nearest_position", false]], "mask_nearest_position() (gammapy.maps.regionndmap method)": [[206, "gammapy.maps.RegionNDMap.mask_nearest_position", false]], "mask_nearest_position() (gammapy.maps.wcsmap method)": [[209, "gammapy.maps.WcsMap.mask_nearest_position", false]], "mask_nearest_position() (gammapy.maps.wcsndmap method)": [[210, "gammapy.maps.WcsNDMap.mask_nearest_position", false]], "mask_safe (gammapy.datasets.fluxpointsdataset attribute)": [[103, "gammapy.datasets.FluxPointsDataset.mask_safe", false]], "mask_safe (gammapy.datasets.mapdataset attribute)": [[104, "gammapy.datasets.MapDataset.mask_safe", false]], "mask_safe (gammapy.datasets.mapdatasetonoff attribute)": [[107, "gammapy.datasets.MapDatasetOnOff.mask_safe", false]], "mask_safe (gammapy.datasets.spectrumdataset attribute)": [[111, "gammapy.datasets.SpectrumDataset.mask_safe", false]], "mask_safe (gammapy.datasets.spectrumdatasetonoff attribute)": [[112, "gammapy.datasets.SpectrumDatasetOnOff.mask_safe", false]], "mask_safe_edisp (gammapy.datasets.mapdataset attribute)": [[104, "gammapy.datasets.MapDataset.mask_safe_edisp", false]], "mask_safe_edisp (gammapy.datasets.mapdatasetonoff attribute)": [[107, "gammapy.datasets.MapDatasetOnOff.mask_safe_edisp", false]], "mask_safe_edisp (gammapy.datasets.spectrumdataset attribute)": [[111, "gammapy.datasets.SpectrumDataset.mask_safe_edisp", false]], "mask_safe_edisp (gammapy.datasets.spectrumdatasetonoff attribute)": [[112, "gammapy.datasets.SpectrumDatasetOnOff.mask_safe_edisp", false]], "mask_safe_image (gammapy.datasets.mapdataset attribute)": [[104, "gammapy.datasets.MapDataset.mask_safe_image", false]], "mask_safe_image (gammapy.datasets.mapdatasetonoff attribute)": [[107, "gammapy.datasets.MapDatasetOnOff.mask_safe_image", false]], "mask_safe_image (gammapy.datasets.spectrumdataset attribute)": [[111, "gammapy.datasets.SpectrumDataset.mask_safe_image", false]], "mask_safe_image (gammapy.datasets.spectrumdatasetonoff attribute)": [[112, "gammapy.datasets.SpectrumDatasetOnOff.mask_safe_image", false]], "mask_safe_image (gammapy.irf.edispkernelmap attribute)": [[155, "gammapy.irf.EDispKernelMap.mask_safe_image", false]], "mask_safe_image (gammapy.irf.edispmap attribute)": [[156, "gammapy.irf.EDispMap.mask_safe_image", false]], "mask_safe_image (gammapy.irf.irfmap attribute)": [[162, "gammapy.irf.IRFMap.mask_safe_image", false]], "mask_safe_image (gammapy.irf.psfmap attribute)": [[167, "gammapy.irf.PSFMap.mask_safe_image", false]], "mask_safe_image (gammapy.irf.recopsfmap attribute)": [[170, "gammapy.irf.RecoPSFMap.mask_safe_image", false]], "mask_safe_psf (gammapy.datasets.mapdataset attribute)": [[104, "gammapy.datasets.MapDataset.mask_safe_psf", false]], "mask_safe_psf (gammapy.datasets.mapdatasetonoff attribute)": [[107, "gammapy.datasets.MapDatasetOnOff.mask_safe_psf", false]], "mask_safe_psf (gammapy.datasets.spectrumdataset attribute)": [[111, "gammapy.datasets.SpectrumDataset.mask_safe_psf", false]], "mask_safe_psf (gammapy.datasets.spectrumdatasetonoff attribute)": [[112, "gammapy.datasets.SpectrumDatasetOnOff.mask_safe_psf", false]], "mask_valid (gammapy.datasets.fluxpointsdataset attribute)": [[103, "gammapy.datasets.FluxPointsDataset.mask_valid", false]], "masked (gammapy.data.hduindextable attribute)": [[88, "gammapy.data.HDUIndexTable.masked", false]], "masked (gammapy.data.observationtable attribute)": [[92, "gammapy.data.ObservationTable.masked", false]], "match_by_name (gammapy.maps.mapcoord attribute)": [[203, "gammapy.maps.MapCoord.match_by_name", false]], "matrix (gammapy.modeling.covarianceresult attribute)": [[214, "gammapy.modeling.CovarianceResult.matrix", false]], "max (gammapy.modeling.models.loguniformprior attribute)": [[249, "gammapy.modeling.models.LogUniformPrior.max", false]], "max (gammapy.modeling.models.uniformprior attribute)": [[285, "gammapy.modeling.models.UniformPrior.max", false]], "max (gammapy.modeling.parameter attribute)": [[218, "gammapy.modeling.Parameter.max", false]], "max (gammapy.modeling.parameters attribute)": [[219, "gammapy.modeling.Parameters.max", false]], "max (gammapy.modeling.priorparameter attribute)": [[220, "gammapy.modeling.PriorParameter.max", false]], "max (gammapy.modeling.priorparameters attribute)": [[221, "gammapy.modeling.PriorParameters.max", false]], "mcmc": [[608, "term-MCMC", true]], "mdm (gammapy.astro.darkmatter.primaryflux attribute)": [[26, "gammapy.astro.darkmatter.PrimaryFlux.mDM", false]], "mean (gammapy.modeling.models.gaussianspectralmodel attribute)": [[241, "gammapy.modeling.models.GaussianSpectralModel.mean", false]], "message (gammapy.modeling.covarianceresult attribute)": [[214, "gammapy.modeling.CovarianceResult.message", false]], "message (gammapy.modeling.fitresult attribute)": [[216, "gammapy.modeling.FitResult.message", false]], "message (gammapy.modeling.optimizeresult attribute)": [[217, "gammapy.modeling.OptimizeResult.message", false]], "met": [[608, "term-MET", true]], "met_start (gammapy.data.gti attribute)": [[86, "gammapy.data.GTI.met_start", false]], "met_stop (gammapy.data.gti attribute)": [[86, "gammapy.data.GTI.met_stop", false]], "meta (gammapy.astro.population.casebattacharya1998 attribute)": [[28, "gammapy.astro.population.CaseBattacharya1998.meta", false]], "meta (gammapy.astro.population.exponential attribute)": [[29, "gammapy.astro.population.Exponential.meta", false]], "meta (gammapy.astro.population.faucherkaspi2006 attribute)": [[30, "gammapy.astro.population.FaucherKaspi2006.meta", false]], "meta (gammapy.astro.population.faucherkaspi2006velocitybimodal attribute)": [[31, "gammapy.astro.population.FaucherKaspi2006VelocityBimodal.meta", false]], "meta (gammapy.astro.population.faucherkaspi2006velocitymaxwellian attribute)": [[32, "gammapy.astro.population.FaucherKaspi2006VelocityMaxwellian.meta", false]], "meta (gammapy.astro.population.lorimer2006 attribute)": [[35, "gammapy.astro.population.Lorimer2006.meta", false]], "meta (gammapy.astro.population.paczynski1990 attribute)": [[36, "gammapy.astro.population.Paczynski1990.meta", false]], "meta (gammapy.astro.population.paczynski1990velocity attribute)": [[37, "gammapy.astro.population.Paczynski1990Velocity.meta", false]], "meta (gammapy.astro.population.yusifovkucuk2004 attribute)": [[39, "gammapy.astro.population.YusifovKucuk2004.meta", false]], "meta (gammapy.astro.population.yusifovkucuk2004b attribute)": [[40, "gammapy.astro.population.YusifovKucuk2004B.meta", false]], "meta (gammapy.data.hduindextable attribute)": [[88, "gammapy.data.HDUIndexTable.meta", false]], "meta (gammapy.data.observation attribute)": [[89, "gammapy.data.Observation.meta", false]], "meta (gammapy.data.observationtable attribute)": [[92, "gammapy.data.ObservationTable.meta", false]], "meta (gammapy.datasets.mapdataset attribute)": [[104, "gammapy.datasets.MapDataset.meta", false]], "meta (gammapy.datasets.mapdatasetonoff attribute)": [[107, "gammapy.datasets.MapDatasetOnOff.meta", false]], "meta (gammapy.datasets.spectrumdataset attribute)": [[111, "gammapy.datasets.SpectrumDataset.meta", false]], "meta (gammapy.datasets.spectrumdatasetonoff attribute)": [[112, "gammapy.datasets.SpectrumDatasetOnOff.meta", false]], "meta (gammapy.maps.hpxmap attribute)": [[197, "gammapy.maps.HpxMap.meta", false]], "meta (gammapy.maps.hpxndmap attribute)": [[198, "gammapy.maps.HpxNDMap.meta", false]], "meta (gammapy.maps.map attribute)": [[200, "gammapy.maps.Map.meta", false]], "meta (gammapy.maps.regionndmap attribute)": [[206, "gammapy.maps.RegionNDMap.meta", false]], "meta (gammapy.maps.wcsmap attribute)": [[209, "gammapy.maps.WcsMap.meta", false]], "meta (gammapy.maps.wcsndmap attribute)": [[210, "gammapy.maps.WcsNDMap.meta", false]], "meta_table (gammapy.datasets.datasets attribute)": [[101, "gammapy.datasets.Datasets.meta_table", false]], "meta_table (gammapy.datasets.mapdataset attribute)": [[104, "gammapy.datasets.MapDataset.meta_table", false]], "meta_table (gammapy.datasets.mapdatasetonoff attribute)": [[107, "gammapy.datasets.MapDatasetOnOff.meta_table", false]], "meta_table (gammapy.datasets.spectrumdataset attribute)": [[111, "gammapy.datasets.SpectrumDataset.meta_table", false]], "meta_table (gammapy.datasets.spectrumdatasetonoff attribute)": [[112, "gammapy.datasets.SpectrumDatasetOnOff.meta_table", false]], "method (gammapy.makers.fovbackgroundmaker attribute)": [[174, "gammapy.makers.FoVBackgroundMaker.method", false]], "method (gammapy.modeling.covarianceresult attribute)": [[214, "gammapy.modeling.CovarianceResult.method", false]], "method (gammapy.modeling.fitresult attribute)": [[216, "gammapy.modeling.FitResult.method", false]], "method (gammapy.modeling.optimizeresult attribute)": [[217, "gammapy.modeling.OptimizeResult.method", false]], "method_default (in module gammapy.utils.parallel)": [[337, "gammapy.utils.parallel.METHOD_DEFAULT", false]], "method_kwargs_default (in module gammapy.utils.parallel)": [[338, "gammapy.utils.parallel.METHOD_KWARGS_DEFAULT", false]], "meyercrabspectralmodel (class in gammapy.modeling.models)": [[251, "gammapy.modeling.models.MeyerCrabSpectralModel", false]], "min (gammapy.modeling.models.loguniformprior attribute)": [[249, "gammapy.modeling.models.LogUniformPrior.min", false]], "min (gammapy.modeling.models.uniformprior attribute)": [[285, "gammapy.modeling.models.UniformPrior.min", false]], "min (gammapy.modeling.parameter attribute)": [[218, "gammapy.modeling.Parameter.min", false]], "min (gammapy.modeling.parameters attribute)": [[219, "gammapy.modeling.Parameters.min", false]], "min (gammapy.modeling.priorparameter attribute)": [[220, "gammapy.modeling.PriorParameter.min", false]], "min (gammapy.modeling.priorparameters attribute)": [[221, "gammapy.modeling.PriorParameters.min", false]], "minuit (gammapy.modeling.fitresult attribute)": [[216, "gammapy.modeling.FitResult.minuit", false]], "minuit (gammapy.modeling.optimizeresult attribute)": [[217, "gammapy.modeling.OptimizeResult.minuit", false]], "mode (gammapy.data.fixedpointinginfo attribute)": [[85, "gammapy.data.FixedPointingInfo.mode", false]], "model (class in gammapy.modeling.models)": [[252, "gammapy.modeling.models.Model", false]], "model_computed_fields (gammapy.analysis.analysisconfig attribute)": [[16, "gammapy.analysis.AnalysisConfig.model_computed_fields", false]], "model_computed_fields (gammapy.data.eventlistmetadata attribute)": [[84, "gammapy.data.EventListMetaData.model_computed_fields", false]], "model_computed_fields (gammapy.data.gtimetadata attribute)": [[87, "gammapy.data.GTIMetaData.model_computed_fields", false]], "model_computed_fields (gammapy.data.observationmetadata attribute)": [[91, "gammapy.data.ObservationMetaData.model_computed_fields", false]], "model_computed_fields (gammapy.datasets.mapdatasetmetadata attribute)": [[106, "gammapy.datasets.MapDatasetMetaData.model_computed_fields", false]], "model_computed_fields (gammapy.estimators.fluxmetadata attribute)": [[127, "gammapy.estimators.FluxMetaData.model_computed_fields", false]], "model_config (gammapy.analysis.analysisconfig attribute)": [[16, "gammapy.analysis.AnalysisConfig.model_config", false]], "model_config (gammapy.data.eventlistmetadata attribute)": [[84, "gammapy.data.EventListMetaData.model_config", false]], "model_config (gammapy.data.gtimetadata attribute)": [[87, "gammapy.data.GTIMetaData.model_config", false]], "model_config (gammapy.data.observationmetadata attribute)": [[91, "gammapy.data.ObservationMetaData.model_config", false]], "model_config (gammapy.datasets.mapdatasetmetadata attribute)": [[106, "gammapy.datasets.MapDatasetMetaData.model_config", false]], "model_config (gammapy.estimators.fluxmetadata attribute)": [[127, "gammapy.estimators.FluxMetaData.model_config", false]], "model_constraints (gammapy.astro.population.casebattacharya1998 attribute)": [[28, "gammapy.astro.population.CaseBattacharya1998.model_constraints", false]], "model_constraints (gammapy.astro.population.exponential attribute)": [[29, "gammapy.astro.population.Exponential.model_constraints", false]], "model_constraints (gammapy.astro.population.faucherkaspi2006 attribute)": [[30, "gammapy.astro.population.FaucherKaspi2006.model_constraints", false]], "model_constraints (gammapy.astro.population.faucherkaspi2006velocitybimodal attribute)": [[31, "gammapy.astro.population.FaucherKaspi2006VelocityBimodal.model_constraints", false]], "model_constraints (gammapy.astro.population.faucherkaspi2006velocitymaxwellian attribute)": [[32, "gammapy.astro.population.FaucherKaspi2006VelocityMaxwellian.model_constraints", false]], "model_constraints (gammapy.astro.population.lorimer2006 attribute)": [[35, "gammapy.astro.population.Lorimer2006.model_constraints", false]], "model_constraints (gammapy.astro.population.paczynski1990 attribute)": [[36, "gammapy.astro.population.Paczynski1990.model_constraints", false]], "model_constraints (gammapy.astro.population.paczynski1990velocity attribute)": [[37, "gammapy.astro.population.Paczynski1990Velocity.model_constraints", false]], "model_constraints (gammapy.astro.population.yusifovkucuk2004 attribute)": [[39, "gammapy.astro.population.YusifovKucuk2004.model_constraints", false]], "model_constraints (gammapy.astro.population.yusifovkucuk2004b attribute)": [[40, "gammapy.astro.population.YusifovKucuk2004B.model_constraints", false]], "model_construct() (gammapy.analysis.analysisconfig class method)": [[16, "gammapy.analysis.AnalysisConfig.model_construct", false]], "model_construct() (gammapy.data.eventlistmetadata class method)": [[84, "gammapy.data.EventListMetaData.model_construct", false]], "model_construct() (gammapy.data.gtimetadata class method)": [[87, "gammapy.data.GTIMetaData.model_construct", false]], "model_construct() (gammapy.data.observationmetadata class method)": [[91, "gammapy.data.ObservationMetaData.model_construct", false]], "model_construct() (gammapy.datasets.mapdatasetmetadata class method)": [[106, "gammapy.datasets.MapDatasetMetaData.model_construct", false]], "model_construct() (gammapy.estimators.fluxmetadata class method)": [[127, "gammapy.estimators.FluxMetaData.model_construct", false]], "model_copy() (gammapy.analysis.analysisconfig method)": [[16, "gammapy.analysis.AnalysisConfig.model_copy", false]], "model_copy() (gammapy.data.eventlistmetadata method)": [[84, "gammapy.data.EventListMetaData.model_copy", false]], "model_copy() (gammapy.data.gtimetadata method)": [[87, "gammapy.data.GTIMetaData.model_copy", false]], "model_copy() (gammapy.data.observationmetadata method)": [[91, "gammapy.data.ObservationMetaData.model_copy", false]], "model_copy() (gammapy.datasets.mapdatasetmetadata method)": [[106, "gammapy.datasets.MapDatasetMetaData.model_copy", false]], "model_copy() (gammapy.estimators.fluxmetadata method)": [[127, "gammapy.estimators.FluxMetaData.model_copy", false]], "model_dump() (gammapy.analysis.analysisconfig method)": [[16, "gammapy.analysis.AnalysisConfig.model_dump", false]], "model_dump() (gammapy.data.eventlistmetadata method)": [[84, "gammapy.data.EventListMetaData.model_dump", false]], "model_dump() (gammapy.data.gtimetadata method)": [[87, "gammapy.data.GTIMetaData.model_dump", false]], "model_dump() (gammapy.data.observationmetadata method)": [[91, "gammapy.data.ObservationMetaData.model_dump", false]], "model_dump() (gammapy.datasets.mapdatasetmetadata method)": [[106, "gammapy.datasets.MapDatasetMetaData.model_dump", false]], "model_dump() (gammapy.estimators.fluxmetadata method)": [[127, "gammapy.estimators.FluxMetaData.model_dump", false]], "model_dump_json() (gammapy.analysis.analysisconfig method)": [[16, "gammapy.analysis.AnalysisConfig.model_dump_json", false]], "model_dump_json() (gammapy.data.eventlistmetadata method)": [[84, "gammapy.data.EventListMetaData.model_dump_json", false]], "model_dump_json() (gammapy.data.gtimetadata method)": [[87, "gammapy.data.GTIMetaData.model_dump_json", false]], "model_dump_json() (gammapy.data.observationmetadata method)": [[91, "gammapy.data.ObservationMetaData.model_dump_json", false]], "model_dump_json() (gammapy.datasets.mapdatasetmetadata method)": [[106, "gammapy.datasets.MapDatasetMetaData.model_dump_json", false]], "model_dump_json() (gammapy.estimators.fluxmetadata method)": [[127, "gammapy.estimators.FluxMetaData.model_dump_json", false]], "model_extra (gammapy.analysis.analysisconfig attribute)": [[16, "gammapy.analysis.AnalysisConfig.model_extra", false]], "model_extra (gammapy.data.eventlistmetadata attribute)": [[84, "gammapy.data.EventListMetaData.model_extra", false]], "model_extra (gammapy.data.gtimetadata attribute)": [[87, "gammapy.data.GTIMetaData.model_extra", false]], "model_extra (gammapy.data.observationmetadata attribute)": [[91, "gammapy.data.ObservationMetaData.model_extra", false]], "model_extra (gammapy.datasets.mapdatasetmetadata attribute)": [[106, "gammapy.datasets.MapDatasetMetaData.model_extra", false]], "model_extra (gammapy.estimators.fluxmetadata attribute)": [[127, "gammapy.estimators.FluxMetaData.model_extra", false]], "model_fields (gammapy.analysis.analysisconfig attribute)": [[16, "gammapy.analysis.AnalysisConfig.model_fields", false]], "model_fields (gammapy.data.eventlistmetadata attribute)": [[84, "gammapy.data.EventListMetaData.model_fields", false]], "model_fields (gammapy.data.gtimetadata attribute)": [[87, "gammapy.data.GTIMetaData.model_fields", false]], "model_fields (gammapy.data.observationmetadata attribute)": [[91, "gammapy.data.ObservationMetaData.model_fields", false]], "model_fields (gammapy.datasets.mapdatasetmetadata attribute)": [[106, "gammapy.datasets.MapDatasetMetaData.model_fields", false]], "model_fields (gammapy.estimators.fluxmetadata attribute)": [[127, "gammapy.estimators.FluxMetaData.model_fields", false]], "model_fields_set (gammapy.analysis.analysisconfig attribute)": [[16, "gammapy.analysis.AnalysisConfig.model_fields_set", false]], "model_fields_set (gammapy.data.eventlistmetadata attribute)": [[84, "gammapy.data.EventListMetaData.model_fields_set", false]], "model_fields_set (gammapy.data.gtimetadata attribute)": [[87, "gammapy.data.GTIMetaData.model_fields_set", false]], "model_fields_set (gammapy.data.observationmetadata attribute)": [[91, "gammapy.data.ObservationMetaData.model_fields_set", false]], "model_fields_set (gammapy.datasets.mapdatasetmetadata attribute)": [[106, "gammapy.datasets.MapDatasetMetaData.model_fields_set", false]], "model_fields_set (gammapy.estimators.fluxmetadata attribute)": [[127, "gammapy.estimators.FluxMetaData.model_fields_set", false]], "model_json_schema() (gammapy.analysis.analysisconfig class method)": [[16, "gammapy.analysis.AnalysisConfig.model_json_schema", false]], "model_json_schema() (gammapy.data.eventlistmetadata class method)": [[84, "gammapy.data.EventListMetaData.model_json_schema", false]], "model_json_schema() (gammapy.data.gtimetadata class method)": [[87, "gammapy.data.GTIMetaData.model_json_schema", false]], "model_json_schema() (gammapy.data.observationmetadata class method)": [[91, "gammapy.data.ObservationMetaData.model_json_schema", false]], "model_json_schema() (gammapy.datasets.mapdatasetmetadata class method)": [[106, "gammapy.datasets.MapDatasetMetaData.model_json_schema", false]], "model_json_schema() (gammapy.estimators.fluxmetadata class method)": [[127, "gammapy.estimators.FluxMetaData.model_json_schema", false]], "model_parametrized_name() (gammapy.analysis.analysisconfig class method)": [[16, "gammapy.analysis.AnalysisConfig.model_parametrized_name", false]], "model_parametrized_name() (gammapy.data.eventlistmetadata class method)": [[84, "gammapy.data.EventListMetaData.model_parametrized_name", false]], "model_parametrized_name() (gammapy.data.gtimetadata class method)": [[87, "gammapy.data.GTIMetaData.model_parametrized_name", false]], "model_parametrized_name() (gammapy.data.observationmetadata class method)": [[91, "gammapy.data.ObservationMetaData.model_parametrized_name", false]], "model_parametrized_name() (gammapy.datasets.mapdatasetmetadata class method)": [[106, "gammapy.datasets.MapDatasetMetaData.model_parametrized_name", false]], "model_parametrized_name() (gammapy.estimators.fluxmetadata class method)": [[127, "gammapy.estimators.FluxMetaData.model_parametrized_name", false]], "model_post_init() (gammapy.analysis.analysisconfig method)": [[16, "gammapy.analysis.AnalysisConfig.model_post_init", false]], "model_post_init() (gammapy.data.eventlistmetadata method)": [[84, "gammapy.data.EventListMetaData.model_post_init", false]], "model_post_init() (gammapy.data.gtimetadata method)": [[87, "gammapy.data.GTIMetaData.model_post_init", false]], "model_post_init() (gammapy.data.observationmetadata method)": [[91, "gammapy.data.ObservationMetaData.model_post_init", false]], "model_post_init() (gammapy.datasets.mapdatasetmetadata method)": [[106, "gammapy.datasets.MapDatasetMetaData.model_post_init", false]], "model_post_init() (gammapy.estimators.fluxmetadata method)": [[127, "gammapy.estimators.FluxMetaData.model_post_init", false]], "model_rebuild() (gammapy.analysis.analysisconfig class method)": [[16, "gammapy.analysis.AnalysisConfig.model_rebuild", false]], "model_rebuild() (gammapy.data.eventlistmetadata class method)": [[84, "gammapy.data.EventListMetaData.model_rebuild", false]], "model_rebuild() (gammapy.data.gtimetadata class method)": [[87, "gammapy.data.GTIMetaData.model_rebuild", false]], "model_rebuild() (gammapy.data.observationmetadata class method)": [[91, "gammapy.data.ObservationMetaData.model_rebuild", false]], "model_rebuild() (gammapy.datasets.mapdatasetmetadata class method)": [[106, "gammapy.datasets.MapDatasetMetaData.model_rebuild", false]], "model_rebuild() (gammapy.estimators.fluxmetadata class method)": [[127, "gammapy.estimators.FluxMetaData.model_rebuild", false]], "model_registry (in module gammapy.modeling.models)": [[250, "gammapy.modeling.models.MODEL_REGISTRY", false]], "model_set_axis (gammapy.astro.population.casebattacharya1998 attribute)": [[28, "gammapy.astro.population.CaseBattacharya1998.model_set_axis", false]], "model_set_axis (gammapy.astro.population.exponential attribute)": [[29, "gammapy.astro.population.Exponential.model_set_axis", false]], "model_set_axis (gammapy.astro.population.faucherkaspi2006 attribute)": [[30, "gammapy.astro.population.FaucherKaspi2006.model_set_axis", false]], "model_set_axis (gammapy.astro.population.faucherkaspi2006velocitybimodal attribute)": [[31, "gammapy.astro.population.FaucherKaspi2006VelocityBimodal.model_set_axis", false]], "model_set_axis (gammapy.astro.population.faucherkaspi2006velocitymaxwellian attribute)": [[32, "gammapy.astro.population.FaucherKaspi2006VelocityMaxwellian.model_set_axis", false]], "model_set_axis (gammapy.astro.population.lorimer2006 attribute)": [[35, "gammapy.astro.population.Lorimer2006.model_set_axis", false]], "model_set_axis (gammapy.astro.population.paczynski1990 attribute)": [[36, "gammapy.astro.population.Paczynski1990.model_set_axis", false]], "model_set_axis (gammapy.astro.population.paczynski1990velocity attribute)": [[37, "gammapy.astro.population.Paczynski1990Velocity.model_set_axis", false]], "model_set_axis (gammapy.astro.population.yusifovkucuk2004 attribute)": [[39, "gammapy.astro.population.YusifovKucuk2004.model_set_axis", false]], "model_set_axis (gammapy.astro.population.yusifovkucuk2004b attribute)": [[40, "gammapy.astro.population.YusifovKucuk2004B.model_set_axis", false]], "model_validate() (gammapy.analysis.analysisconfig class method)": [[16, "gammapy.analysis.AnalysisConfig.model_validate", false]], "model_validate() (gammapy.data.eventlistmetadata class method)": [[84, "gammapy.data.EventListMetaData.model_validate", false]], "model_validate() (gammapy.data.gtimetadata class method)": [[87, "gammapy.data.GTIMetaData.model_validate", false]], "model_validate() (gammapy.data.observationmetadata class method)": [[91, "gammapy.data.ObservationMetaData.model_validate", false]], "model_validate() (gammapy.datasets.mapdatasetmetadata class method)": [[106, "gammapy.datasets.MapDatasetMetaData.model_validate", false]], "model_validate() (gammapy.estimators.fluxmetadata class method)": [[127, "gammapy.estimators.FluxMetaData.model_validate", false]], "model_validate_json() (gammapy.analysis.analysisconfig class method)": [[16, "gammapy.analysis.AnalysisConfig.model_validate_json", false]], "model_validate_json() (gammapy.data.eventlistmetadata class method)": [[84, "gammapy.data.EventListMetaData.model_validate_json", false]], "model_validate_json() (gammapy.data.gtimetadata class method)": [[87, "gammapy.data.GTIMetaData.model_validate_json", false]], "model_validate_json() (gammapy.data.observationmetadata class method)": [[91, "gammapy.data.ObservationMetaData.model_validate_json", false]], "model_validate_json() (gammapy.datasets.mapdatasetmetadata class method)": [[106, "gammapy.datasets.MapDatasetMetaData.model_validate_json", false]], "model_validate_json() (gammapy.estimators.fluxmetadata class method)": [[127, "gammapy.estimators.FluxMetaData.model_validate_json", false]], "model_validate_strings() (gammapy.analysis.analysisconfig class method)": [[16, "gammapy.analysis.AnalysisConfig.model_validate_strings", false]], "model_validate_strings() (gammapy.data.eventlistmetadata class method)": [[84, "gammapy.data.EventListMetaData.model_validate_strings", false]], "model_validate_strings() (gammapy.data.gtimetadata class method)": [[87, "gammapy.data.GTIMetaData.model_validate_strings", false]], "model_validate_strings() (gammapy.data.observationmetadata class method)": [[91, "gammapy.data.ObservationMetaData.model_validate_strings", false]], "model_validate_strings() (gammapy.datasets.mapdatasetmetadata class method)": [[106, "gammapy.datasets.MapDatasetMetaData.model_validate_strings", false]], "model_validate_strings() (gammapy.estimators.fluxmetadata class method)": [[127, "gammapy.estimators.FluxMetaData.model_validate_strings", false]], "modelbase (class in gammapy.modeling.models)": [[253, "gammapy.modeling.models.ModelBase", false]], "models (class in gammapy.modeling.models)": [[254, "gammapy.modeling.models.Models", false]], "models (gammapy.analysis.analysis attribute)": [[15, "gammapy.analysis.Analysis.models", false]], "models (gammapy.datasets.datasets attribute)": [[101, "gammapy.datasets.Datasets.models", false]], "models (gammapy.datasets.fluxpointsdataset attribute)": [[103, "gammapy.datasets.FluxPointsDataset.models", false]], "models (gammapy.datasets.mapdataset attribute)": [[104, "gammapy.datasets.MapDataset.models", false]], "models (gammapy.datasets.mapdatasetonoff attribute)": [[107, "gammapy.datasets.MapDatasetOnOff.models", false]], "models (gammapy.datasets.spectrumdataset attribute)": [[111, "gammapy.datasets.SpectrumDataset.models", false]], "models (gammapy.datasets.spectrumdatasetonoff attribute)": [[112, "gammapy.datasets.SpectrumDatasetOnOff.models", false]], "models (gammapy.modeling.fitresult attribute)": [[216, "gammapy.modeling.FitResult.models", false]], "models (gammapy.modeling.optimizeresult attribute)": [[217, "gammapy.modeling.OptimizeResult.models", false]], "module": [[0, "module-gammapy.analysis", false], [1, "module-gammapy.astro.darkmatter", false], [1, "module-gammapy.astro.population", false], [1, "module-gammapy.astro.source", false], [2, "module-gammapy.catalog", false], [3, "module-gammapy.data", false], [4, "module-gammapy.datasets", false], [4, "module-gammapy.datasets.utils", false], [5, "module-gammapy.estimators", false], [5, "module-gammapy.estimators.utils", false], [7, "module-gammapy.irf", false], [8, "module-gammapy.makers", false], [8, "module-gammapy.makers.utils", false], [9, "module-gammapy.maps", false], [10, "module-gammapy.modeling", false], [10, "module-gammapy.modeling.models", false], [10, "module-gammapy.modeling.models.utils", false], [12, "module-gammapy.stats", false], [13, "module-gammapy.utils.cluster", false], [13, "module-gammapy.utils.coordinates", false], [13, "module-gammapy.utils.fits", false], [13, "module-gammapy.utils.integrate", false], [13, "module-gammapy.utils.interpolation", false], [13, "module-gammapy.utils.parallel", false], [13, "module-gammapy.utils.random", false], [13, "module-gammapy.utils.regions", false], [13, "module-gammapy.utils.scripts", false], [13, "module-gammapy.utils.table", false], [13, "module-gammapy.utils.testing", false], [13, "module-gammapy.utils.time", false], [13, "module-gammapy.utils.units", false], [14, "module-gammapy.visualization", false]], "mooreprofile (class in gammapy.astro.darkmatter)": [[24, "gammapy.astro.darkmatter.MooreProfile", false]], "more() (gammapy.data.hduindextable method)": [[88, "gammapy.data.HDUIndexTable.more", false]], "more() (gammapy.data.observationtable method)": [[92, "gammapy.data.ObservationTable.more", false]], "motion_since_birth() (in module gammapy.utils.coordinates)": [[325, "gammapy.utils.coordinates.motion_since_birth", false]], "mpl_plot_check() (in module gammapy.utils.testing)": [[372, "gammapy.utils.testing.mpl_plot_check", false]], "mu (gammapy.modeling.models.gaussianprior attribute)": [[239, "gammapy.modeling.models.GaussianPrior.mu", false]], "multiprocessing_manager (class in gammapy.utils.parallel)": [[341, "gammapy.utils.parallel.multiprocessing_manager", false]], "n_bkg (gammapy.stats.cashcountsstatistic attribute)": [[295, "gammapy.stats.CashCountsStatistic.n_bkg", false]], "n_bkg (gammapy.stats.wstatcountsstatistic attribute)": [[299, "gammapy.stats.WStatCountsStatistic.n_bkg", false]], "n_dof (gammapy.estimators.fluxmaps attribute)": [[126, "gammapy.estimators.FluxMaps.n_dof", false]], "n_dof (gammapy.estimators.fluxpoints attribute)": [[128, "gammapy.estimators.FluxPoints.n_dof", false]], "n_inputs (gammapy.astro.population.casebattacharya1998 attribute)": [[28, "gammapy.astro.population.CaseBattacharya1998.n_inputs", false]], "n_inputs (gammapy.astro.population.exponential attribute)": [[29, "gammapy.astro.population.Exponential.n_inputs", false]], "n_inputs (gammapy.astro.population.faucherkaspi2006 attribute)": [[30, "gammapy.astro.population.FaucherKaspi2006.n_inputs", false]], "n_inputs (gammapy.astro.population.faucherkaspi2006velocitybimodal attribute)": [[31, "gammapy.astro.population.FaucherKaspi2006VelocityBimodal.n_inputs", false]], "n_inputs (gammapy.astro.population.faucherkaspi2006velocitymaxwellian attribute)": [[32, "gammapy.astro.population.FaucherKaspi2006VelocityMaxwellian.n_inputs", false]], "n_inputs (gammapy.astro.population.lorimer2006 attribute)": [[35, "gammapy.astro.population.Lorimer2006.n_inputs", false]], "n_inputs (gammapy.astro.population.paczynski1990 attribute)": [[36, "gammapy.astro.population.Paczynski1990.n_inputs", false]], "n_inputs (gammapy.astro.population.paczynski1990velocity attribute)": [[37, "gammapy.astro.population.Paczynski1990Velocity.n_inputs", false]], "n_inputs (gammapy.astro.population.yusifovkucuk2004 attribute)": [[39, "gammapy.astro.population.YusifovKucuk2004.n_inputs", false]], "n_inputs (gammapy.astro.population.yusifovkucuk2004b attribute)": [[40, "gammapy.astro.population.YusifovKucuk2004B.n_inputs", false]], "n_jobs (gammapy.data.observationseventssampler attribute)": [[94, "gammapy.data.ObservationsEventsSampler.n_jobs", false]], "n_jobs (gammapy.estimators.fluxpointsestimator attribute)": [[129, "gammapy.estimators.FluxPointsEstimator.n_jobs", false]], "n_jobs (gammapy.estimators.fluxprofileestimator attribute)": [[130, "gammapy.estimators.FluxProfileEstimator.n_jobs", false]], "n_jobs (gammapy.estimators.lightcurveestimator attribute)": [[133, "gammapy.estimators.LightCurveEstimator.n_jobs", false]], "n_jobs (gammapy.estimators.tsmapestimator attribute)": [[137, "gammapy.estimators.TSMapEstimator.n_jobs", false]], "n_jobs (gammapy.makers.datasetsmaker attribute)": [[173, "gammapy.makers.DatasetsMaker.n_jobs", false]], "n_jobs_default (in module gammapy.utils.parallel)": [[339, "gammapy.utils.parallel.N_JOBS_DEFAULT", false]], "n_models (gammapy.catalog.sourcecatalogobject2hwc attribute)": [[72, "gammapy.catalog.SourceCatalogObject2HWC.n_models", false]], "n_models (gammapy.catalog.sourcecatalogobject3hwc attribute)": [[76, "gammapy.catalog.SourceCatalogObject3HWC.n_models", false]], "n_outputs (gammapy.astro.population.casebattacharya1998 attribute)": [[28, "gammapy.astro.population.CaseBattacharya1998.n_outputs", false]], "n_outputs (gammapy.astro.population.exponential attribute)": [[29, "gammapy.astro.population.Exponential.n_outputs", false]], "n_outputs (gammapy.astro.population.faucherkaspi2006 attribute)": [[30, "gammapy.astro.population.FaucherKaspi2006.n_outputs", false]], "n_outputs (gammapy.astro.population.faucherkaspi2006velocitybimodal attribute)": [[31, "gammapy.astro.population.FaucherKaspi2006VelocityBimodal.n_outputs", false]], "n_outputs (gammapy.astro.population.faucherkaspi2006velocitymaxwellian attribute)": [[32, "gammapy.astro.population.FaucherKaspi2006VelocityMaxwellian.n_outputs", false]], "n_outputs (gammapy.astro.population.lorimer2006 attribute)": [[35, "gammapy.astro.population.Lorimer2006.n_outputs", false]], "n_outputs (gammapy.astro.population.paczynski1990 attribute)": [[36, "gammapy.astro.population.Paczynski1990.n_outputs", false]], "n_outputs (gammapy.astro.population.paczynski1990velocity attribute)": [[37, "gammapy.astro.population.Paczynski1990Velocity.n_outputs", false]], "n_outputs (gammapy.astro.population.yusifovkucuk2004 attribute)": [[39, "gammapy.astro.population.YusifovKucuk2004.n_outputs", false]], "n_outputs (gammapy.astro.population.yusifovkucuk2004b attribute)": [[40, "gammapy.astro.population.YusifovKucuk2004B.n_outputs", false]], "n_sig (gammapy.stats.cashcountsstatistic attribute)": [[295, "gammapy.stats.CashCountsStatistic.n_sig", false]], "n_sig (gammapy.stats.wstatcountsstatistic attribute)": [[299, "gammapy.stats.WStatCountsStatistic.n_sig", false]], "n_sig_matching_significance() (gammapy.stats.cashcountsstatistic method)": [[295, "gammapy.stats.CashCountsStatistic.n_sig_matching_significance", false]], "n_sig_matching_significance() (gammapy.stats.wstatcountsstatistic method)": [[299, "gammapy.stats.WStatCountsStatistic.n_sig_matching_significance", false]], "n_sigma (gammapy.estimators.fluxmaps attribute)": [[126, "gammapy.estimators.FluxMaps.n_sigma", false]], "n_sigma (gammapy.estimators.fluxpoints attribute)": [[128, "gammapy.estimators.FluxPoints.n_sigma", false]], "n_sigma_ul (gammapy.estimators.fluxmaps attribute)": [[126, "gammapy.estimators.FluxMaps.n_sigma_ul", false]], "n_sigma_ul (gammapy.estimators.fluxpoints attribute)": [[128, "gammapy.estimators.FluxPoints.n_sigma_ul", false]], "n_submodels (gammapy.astro.population.casebattacharya1998 attribute)": [[28, "gammapy.astro.population.CaseBattacharya1998.n_submodels", false]], "n_submodels (gammapy.astro.population.exponential attribute)": [[29, "gammapy.astro.population.Exponential.n_submodels", false]], "n_submodels (gammapy.astro.population.faucherkaspi2006 attribute)": [[30, "gammapy.astro.population.FaucherKaspi2006.n_submodels", false]], "n_submodels (gammapy.astro.population.faucherkaspi2006velocitybimodal attribute)": [[31, "gammapy.astro.population.FaucherKaspi2006VelocityBimodal.n_submodels", false]], "n_submodels (gammapy.astro.population.faucherkaspi2006velocitymaxwellian attribute)": [[32, "gammapy.astro.population.FaucherKaspi2006VelocityMaxwellian.n_submodels", false]], "n_submodels (gammapy.astro.population.lorimer2006 attribute)": [[35, "gammapy.astro.population.Lorimer2006.n_submodels", false]], "n_submodels (gammapy.astro.population.paczynski1990 attribute)": [[36, "gammapy.astro.population.Paczynski1990.n_submodels", false]], "n_submodels (gammapy.astro.population.paczynski1990velocity attribute)": [[37, "gammapy.astro.population.Paczynski1990Velocity.n_submodels", false]], "n_submodels (gammapy.astro.population.yusifovkucuk2004 attribute)": [[39, "gammapy.astro.population.YusifovKucuk2004.n_submodels", false]], "n_submodels (gammapy.astro.population.yusifovkucuk2004b attribute)": [[40, "gammapy.astro.population.YusifovKucuk2004B.n_submodels", false]], "naimaspectralmodel (class in gammapy.modeling.models)": [[255, "gammapy.modeling.models.NaimaSpectralModel", false]], "name (gammapy.astro.population.casebattacharya1998 attribute)": [[28, "gammapy.astro.population.CaseBattacharya1998.name", false]], "name (gammapy.astro.population.exponential attribute)": [[29, "gammapy.astro.population.Exponential.name", false]], "name (gammapy.astro.population.faucherkaspi2006 attribute)": [[30, "gammapy.astro.population.FaucherKaspi2006.name", false]], "name (gammapy.astro.population.faucherkaspi2006velocitybimodal attribute)": [[31, "gammapy.astro.population.FaucherKaspi2006VelocityBimodal.name", false]], "name (gammapy.astro.population.faucherkaspi2006velocitymaxwellian attribute)": [[32, "gammapy.astro.population.FaucherKaspi2006VelocityMaxwellian.name", false]], "name (gammapy.astro.population.lorimer2006 attribute)": [[35, "gammapy.astro.population.Lorimer2006.name", false]], "name (gammapy.astro.population.paczynski1990 attribute)": [[36, "gammapy.astro.population.Paczynski1990.name", false]], "name (gammapy.astro.population.paczynski1990velocity attribute)": [[37, "gammapy.astro.population.Paczynski1990Velocity.name", false]], "name (gammapy.astro.population.yusifovkucuk2004 attribute)": [[39, "gammapy.astro.population.YusifovKucuk2004.name", false]], "name (gammapy.astro.population.yusifovkucuk2004b attribute)": [[40, "gammapy.astro.population.YusifovKucuk2004B.name", false]], "name (gammapy.catalog.sourcecatalogobject attribute)": [[69, "gammapy.catalog.SourceCatalogObject.name", false]], "name (gammapy.catalog.sourcecatalogobject1lhaaso attribute)": [[70, "gammapy.catalog.SourceCatalogObject1LHAASO.name", false]], "name (gammapy.catalog.sourcecatalogobject2fhl attribute)": [[71, "gammapy.catalog.SourceCatalogObject2FHL.name", false]], "name (gammapy.catalog.sourcecatalogobject2hwc attribute)": [[72, "gammapy.catalog.SourceCatalogObject2HWC.name", false]], "name (gammapy.catalog.sourcecatalogobject2pc attribute)": [[73, "gammapy.catalog.SourceCatalogObject2PC.name", false]], "name (gammapy.catalog.sourcecatalogobject3fgl attribute)": [[74, "gammapy.catalog.SourceCatalogObject3FGL.name", false]], "name (gammapy.catalog.sourcecatalogobject3fhl attribute)": [[75, "gammapy.catalog.SourceCatalogObject3FHL.name", false]], "name (gammapy.catalog.sourcecatalogobject3hwc attribute)": [[76, "gammapy.catalog.SourceCatalogObject3HWC.name", false]], "name (gammapy.catalog.sourcecatalogobject3pc attribute)": [[77, "gammapy.catalog.SourceCatalogObject3PC.name", false]], "name (gammapy.catalog.sourcecatalogobject4fgl attribute)": [[78, "gammapy.catalog.SourceCatalogObject4FGL.name", false]], "name (gammapy.catalog.sourcecatalogobjectgammacat attribute)": [[79, "gammapy.catalog.SourceCatalogObjectGammaCat.name", false]], "name (gammapy.catalog.sourcecatalogobjecthgps attribute)": [[80, "gammapy.catalog.SourceCatalogObjectHGPS.name", false]], "name (gammapy.catalog.sourcecatalogobjecthgpscomponent attribute)": [[81, "gammapy.catalog.SourceCatalogObjectHGPSComponent.name", false]], "name (gammapy.datasets.dataset attribute)": [[100, "gammapy.datasets.Dataset.name", false]], "name (gammapy.datasets.fluxpointsdataset attribute)": [[103, "gammapy.datasets.FluxPointsDataset.name", false]], "name (gammapy.datasets.mapdataset attribute)": [[104, "gammapy.datasets.MapDataset.name", false]], "name (gammapy.datasets.mapdatasetonoff attribute)": [[107, "gammapy.datasets.MapDatasetOnOff.name", false]], "name (gammapy.datasets.spectrumdataset attribute)": [[111, "gammapy.datasets.SpectrumDataset.name", false]], "name (gammapy.datasets.spectrumdatasetonoff attribute)": [[112, "gammapy.datasets.SpectrumDatasetOnOff.name", false]], "name (gammapy.maps.labelmapaxis attribute)": [[199, "gammapy.maps.LabelMapAxis.name", false]], "name (gammapy.maps.mapaxis attribute)": [[202, "gammapy.maps.MapAxis.name", false]], "name (gammapy.maps.timemapaxis attribute)": [[207, "gammapy.maps.TimeMapAxis.name", false]], "name (gammapy.modeling.models.fovbackgroundmodel attribute)": [[238, "gammapy.modeling.models.FoVBackgroundModel.name", false]], "name (gammapy.modeling.models.skymodel attribute)": [[270, "gammapy.modeling.models.SkyModel.name", false]], "name (gammapy.modeling.models.templatenpredmodel attribute)": [[280, "gammapy.modeling.models.TemplateNPredModel.name", false]], "name (gammapy.modeling.parameter attribute)": [[218, "gammapy.modeling.Parameter.name", false]], "name (gammapy.modeling.priorparameter attribute)": [[220, "gammapy.modeling.PriorParameter.name", false]], "name (gammapy.utils.coordinates.fovaltazframe attribute)": [[320, "gammapy.utils.coordinates.FoVAltAzFrame.name", false]], "name (gammapy.utils.coordinates.fovicrsframe attribute)": [[321, "gammapy.utils.coordinates.FoVICRSFrame.name", false]], "names (gammapy.datasets.datasets attribute)": [[101, "gammapy.datasets.Datasets.names", false]], "names (gammapy.maps.mapaxes attribute)": [[201, "gammapy.maps.MapAxes.names", false]], "names (gammapy.modeling.models.datasetmodels attribute)": [[230, "gammapy.modeling.models.DatasetModels.names", false]], "names (gammapy.modeling.models.models attribute)": [[254, "gammapy.modeling.models.Models.names", false]], "names (gammapy.modeling.parameters attribute)": [[219, "gammapy.modeling.Parameters.names", false]], "names (gammapy.modeling.priorparameters attribute)": [[221, "gammapy.modeling.PriorParameters.names", false]], "nbin (gammapy.maps.labelmapaxis attribute)": [[199, "gammapy.maps.LabelMapAxis.nbin", false]], "nbin (gammapy.maps.mapaxis attribute)": [[202, "gammapy.maps.MapAxis.nbin", false]], "nbin (gammapy.maps.timemapaxis attribute)": [[207, "gammapy.maps.TimeMapAxis.nbin", false]], "nbin_per_decade (gammapy.maps.mapaxis attribute)": [[202, "gammapy.maps.MapAxis.nbin_per_decade", false]], "ndim (gammapy.maps.hpxgeom attribute)": [[196, "gammapy.maps.HpxGeom.ndim", false]], "ndim (gammapy.maps.mapcoord attribute)": [[203, "gammapy.maps.MapCoord.ndim", false]], "ndim (gammapy.maps.wcsgeom attribute)": [[208, "gammapy.maps.WcsGeom.ndim", false]], "ndim (gammapy.utils.coordinates.fovaltazframe attribute)": [[320, "gammapy.utils.coordinates.FoVAltAzFrame.ndim", false]], "ndim (gammapy.utils.coordinates.fovicrsframe attribute)": [[321, "gammapy.utils.coordinates.FoVICRSFrame.ndim", false]], "nest (gammapy.maps.hpxgeom attribute)": [[196, "gammapy.maps.HpxGeom.nest", false]], "nfev (gammapy.modeling.fitresult attribute)": [[216, "gammapy.modeling.FitResult.nfev", false]], "nfev (gammapy.modeling.optimizeresult attribute)": [[217, "gammapy.modeling.OptimizeResult.nfev", false]], "nfwprofile (class in gammapy.astro.darkmatter)": [[25, "gammapy.astro.darkmatter.NFWProfile", false]], "niter (gammapy.estimators.fluxmaps attribute)": [[126, "gammapy.estimators.FluxMaps.niter", false]], "niter (gammapy.estimators.fluxpoints attribute)": [[128, "gammapy.estimators.FluxPoints.niter", false]], "node_type (gammapy.maps.labelmapaxis attribute)": [[199, "gammapy.maps.LabelMapAxis.node_type", false]], "node_type (gammapy.maps.mapaxis attribute)": [[202, "gammapy.maps.MapAxis.node_type", false]], "node_type (gammapy.maps.timemapaxis attribute)": [[207, "gammapy.maps.TimeMapAxis.node_type", false]], "norm (gammapy.estimators.fluxmaps attribute)": [[126, "gammapy.estimators.FluxMaps.norm", false]], "norm (gammapy.estimators.fluxpoints attribute)": [[128, "gammapy.estimators.FluxPoints.norm", false]], "norm (gammapy.modeling.models.expcutoffpowerlawnormspectralmodel attribute)": [[235, "gammapy.modeling.models.ExpCutoffPowerLawNormSpectralModel.norm", false]], "norm (gammapy.modeling.models.logparabolanormspectralmodel attribute)": [[247, "gammapy.modeling.models.LogParabolaNormSpectralModel.norm", false]], "norm (gammapy.modeling.models.meyercrabspectralmodel attribute)": [[251, "gammapy.modeling.models.MeyerCrabSpectralModel.norm", false]], "norm (gammapy.modeling.models.powerlawnormspectralmodel attribute)": [[260, "gammapy.modeling.models.PowerLawNormSpectralModel.norm", false]], "norm (gammapy.modeling.models.scalespectralmodel attribute)": [[266, "gammapy.modeling.models.ScaleSpectralModel.norm", false]], "norm_bounds_cython() (in module gammapy.stats)": [[311, "gammapy.stats.norm_bounds_cython", false]], "norm_err (gammapy.estimators.fluxmaps attribute)": [[126, "gammapy.estimators.FluxMaps.norm_err", false]], "norm_err (gammapy.estimators.fluxpoints attribute)": [[128, "gammapy.estimators.FluxPoints.norm_err", false]], "norm_errn (gammapy.estimators.fluxmaps attribute)": [[126, "gammapy.estimators.FluxMaps.norm_errn", false]], "norm_errn (gammapy.estimators.fluxpoints attribute)": [[128, "gammapy.estimators.FluxPoints.norm_errn", false]], "norm_errp (gammapy.estimators.fluxmaps attribute)": [[126, "gammapy.estimators.FluxMaps.norm_errp", false]], "norm_errp (gammapy.estimators.fluxpoints attribute)": [[128, "gammapy.estimators.FluxPoints.norm_errp", false]], "norm_sensitivity (gammapy.estimators.fluxmaps attribute)": [[126, "gammapy.estimators.FluxMaps.norm_sensitivity", false]], "norm_sensitivity (gammapy.estimators.fluxpoints attribute)": [[128, "gammapy.estimators.FluxPoints.norm_sensitivity", false]], "norm_ul (gammapy.estimators.fluxmaps attribute)": [[126, "gammapy.estimators.FluxMaps.norm_ul", false]], "norm_ul (gammapy.estimators.fluxpoints attribute)": [[128, "gammapy.estimators.FluxPoints.norm_ul", false]], "normalize() (gammapy.estimators.imageprofile method)": [[131, "gammapy.estimators.ImageProfile.normalize", false]], "normalize() (gammapy.irf.background2d method)": [[151, "gammapy.irf.Background2D.normalize", false]], "normalize() (gammapy.irf.background3d method)": [[152, "gammapy.irf.Background3D.normalize", false]], "normalize() (gammapy.irf.backgroundirf method)": [[153, "gammapy.irf.BackgroundIRF.normalize", false]], "normalize() (gammapy.irf.edispkernel method)": [[154, "gammapy.irf.EDispKernel.normalize", false]], "normalize() (gammapy.irf.edispmap method)": [[156, "gammapy.irf.EDispMap.normalize", false]], "normalize() (gammapy.irf.effectiveareatable2d method)": [[157, "gammapy.irf.EffectiveAreaTable2D.normalize", false]], "normalize() (gammapy.irf.energydependentmultigausspsf method)": [[158, "gammapy.irf.EnergyDependentMultiGaussPSF.normalize", false]], "normalize() (gammapy.irf.energydispersion2d method)": [[159, "gammapy.irf.EnergyDispersion2D.normalize", false]], "normalize() (gammapy.irf.irf method)": [[161, "gammapy.irf.IRF.normalize", false]], "normalize() (gammapy.irf.parametricpsf method)": [[168, "gammapy.irf.ParametricPSF.normalize", false]], "normalize() (gammapy.irf.psf3d method)": [[164, "gammapy.irf.PSF3D.normalize", false]], "normalize() (gammapy.irf.psfkernel method)": [[165, "gammapy.irf.PSFKernel.normalize", false]], "normalize() (gammapy.irf.psfking method)": [[166, "gammapy.irf.PSFKing.normalize", false]], "normalize() (gammapy.irf.psfmap method)": [[167, "gammapy.irf.PSFMap.normalize", false]], "normalize() (gammapy.irf.radmax2d method)": [[169, "gammapy.irf.RadMax2D.normalize", false]], "normalize() (gammapy.irf.recopsfmap method)": [[170, "gammapy.irf.RecoPSFMap.normalize", false]], "normalize() (gammapy.maps.hpxmap method)": [[197, "gammapy.maps.HpxMap.normalize", false]], "normalize() (gammapy.maps.hpxndmap method)": [[198, "gammapy.maps.HpxNDMap.normalize", false]], "normalize() (gammapy.maps.map method)": [[200, "gammapy.maps.Map.normalize", false]], "normalize() (gammapy.maps.regionndmap method)": [[206, "gammapy.maps.RegionNDMap.normalize", false]], "normalize() (gammapy.maps.wcsmap method)": [[209, "gammapy.maps.WcsMap.normalize", false]], "normalize() (gammapy.maps.wcsndmap method)": [[210, "gammapy.maps.WcsNDMap.normalize", false]], "normalize() (in module gammapy.utils.random)": [[346, "gammapy.utils.random.normalize", false]], "norms (gammapy.modeling.models.piecewisenormspatialmodel attribute)": [[256, "gammapy.modeling.models.PiecewiseNormSpatialModel.norms", false]], "norms (gammapy.modeling.models.piecewisenormspectralmodel attribute)": [[257, "gammapy.modeling.models.PiecewiseNormSpectralModel.norms", false]], "npix (gammapy.maps.hpxgeom attribute)": [[196, "gammapy.maps.HpxGeom.npix", false]], "npix (gammapy.maps.regiongeom attribute)": [[205, "gammapy.maps.RegionGeom.npix", false]], "npix (gammapy.maps.wcsgeom attribute)": [[208, "gammapy.maps.WcsGeom.npix", false]], "npix_max (gammapy.maps.hpxgeom attribute)": [[196, "gammapy.maps.HpxGeom.npix_max", false]], "npred (gammapy.estimators.fluxmaps attribute)": [[126, "gammapy.estimators.FluxMaps.npred", false]], "npred (gammapy.estimators.fluxpoints attribute)": [[128, "gammapy.estimators.FluxPoints.npred", false]], "npred() (gammapy.datasets.mapdataset method)": [[104, "gammapy.datasets.MapDataset.npred", false]], "npred() (gammapy.datasets.mapdatasetonoff method)": [[107, "gammapy.datasets.MapDatasetOnOff.npred", false]], "npred() (gammapy.datasets.spectrumdataset method)": [[111, "gammapy.datasets.SpectrumDataset.npred", false]], "npred() (gammapy.datasets.spectrumdatasetonoff method)": [[112, "gammapy.datasets.SpectrumDatasetOnOff.npred", false]], "npred_background (gammapy.estimators.fluxmaps attribute)": [[126, "gammapy.estimators.FluxMaps.npred_background", false]], "npred_background (gammapy.estimators.fluxpoints attribute)": [[128, "gammapy.estimators.FluxPoints.npred_background", false]], "npred_background() (gammapy.datasets.mapdataset method)": [[104, "gammapy.datasets.MapDataset.npred_background", false]], "npred_background() (gammapy.datasets.mapdatasetonoff method)": [[107, "gammapy.datasets.MapDatasetOnOff.npred_background", false]], "npred_background() (gammapy.datasets.spectrumdataset method)": [[111, "gammapy.datasets.SpectrumDataset.npred_background", false]], "npred_background() (gammapy.datasets.spectrumdatasetonoff method)": [[112, "gammapy.datasets.SpectrumDatasetOnOff.npred_background", false]], "npred_excess (gammapy.estimators.fluxmaps attribute)": [[126, "gammapy.estimators.FluxMaps.npred_excess", false]], "npred_excess (gammapy.estimators.fluxpoints attribute)": [[128, "gammapy.estimators.FluxPoints.npred_excess", false]], "npred_excess_err (gammapy.estimators.fluxmaps attribute)": [[126, "gammapy.estimators.FluxMaps.npred_excess_err", false]], "npred_excess_err (gammapy.estimators.fluxpoints attribute)": [[128, "gammapy.estimators.FluxPoints.npred_excess_err", false]], "npred_excess_errn (gammapy.estimators.fluxmaps attribute)": [[126, "gammapy.estimators.FluxMaps.npred_excess_errn", false]], "npred_excess_errn (gammapy.estimators.fluxpoints attribute)": [[128, "gammapy.estimators.FluxPoints.npred_excess_errn", false]], "npred_excess_errp (gammapy.estimators.fluxmaps attribute)": [[126, "gammapy.estimators.FluxMaps.npred_excess_errp", false]], "npred_excess_errp (gammapy.estimators.fluxpoints attribute)": [[128, "gammapy.estimators.FluxPoints.npred_excess_errp", false]], "npred_excess_ref (gammapy.estimators.fluxmaps attribute)": [[126, "gammapy.estimators.FluxMaps.npred_excess_ref", false]], "npred_excess_ref (gammapy.estimators.fluxpoints attribute)": [[128, "gammapy.estimators.FluxPoints.npred_excess_ref", false]], "npred_excess_ul (gammapy.estimators.fluxmaps attribute)": [[126, "gammapy.estimators.FluxMaps.npred_excess_ul", false]], "npred_excess_ul (gammapy.estimators.fluxpoints attribute)": [[128, "gammapy.estimators.FluxPoints.npred_excess_ul", false]], "npred_off() (gammapy.datasets.mapdatasetonoff method)": [[107, "gammapy.datasets.MapDatasetOnOff.npred_off", false]], "npred_off() (gammapy.datasets.spectrumdatasetonoff method)": [[112, "gammapy.datasets.SpectrumDatasetOnOff.npred_off", false]], "npred_signal() (gammapy.datasets.mapdataset method)": [[104, "gammapy.datasets.MapDataset.npred_signal", false]], "npred_signal() (gammapy.datasets.mapdatasetonoff method)": [[107, "gammapy.datasets.MapDatasetOnOff.npred_signal", false]], "npred_signal() (gammapy.datasets.spectrumdataset method)": [[111, "gammapy.datasets.SpectrumDataset.npred_signal", false]], "npred_signal() (gammapy.datasets.spectrumdatasetonoff method)": [[112, "gammapy.datasets.SpectrumDatasetOnOff.npred_signal", false]], "nside (gammapy.maps.hpxgeom attribute)": [[196, "gammapy.maps.HpxGeom.nside", false]], "obs() (gammapy.data.datastore method)": [[82, "gammapy.data.DataStore.obs", false]], "obs_id_unique (gammapy.data.hduindextable attribute)": [[88, "gammapy.data.HDUIndexTable.obs_id_unique", false]], "obs_ids (gammapy.data.datastore attribute)": [[82, "gammapy.data.DataStore.obs_ids", false]], "observation (class in gammapy.data)": [[89, "gammapy.data.Observation", false]], "observation_dead_time_fraction (gammapy.data.eventlist attribute)": [[83, "gammapy.data.EventList.observation_dead_time_fraction", false]], "observation_dead_time_fraction (gammapy.data.observation attribute)": [[89, "gammapy.data.Observation.observation_dead_time_fraction", false]], "observation_live_time_duration (gammapy.data.eventlist attribute)": [[83, "gammapy.data.EventList.observation_live_time_duration", false]], "observation_live_time_duration (gammapy.data.observation attribute)": [[89, "gammapy.data.Observation.observation_live_time_duration", false]], "observation_time_duration (gammapy.data.eventlist attribute)": [[83, "gammapy.data.EventList.observation_time_duration", false]], "observation_time_duration (gammapy.data.observation attribute)": [[89, "gammapy.data.Observation.observation_time_duration", false]], "observation_time_start (gammapy.data.eventlist attribute)": [[83, "gammapy.data.EventList.observation_time_start", false]], "observation_time_stop (gammapy.data.eventlist attribute)": [[83, "gammapy.data.EventList.observation_time_stop", false]], "observationeventsampler (class in gammapy.datasets)": [[110, "gammapy.datasets.ObservationEventSampler", false]], "observationfilter (class in gammapy.data)": [[90, "gammapy.data.ObservationFilter", false]], "observationmetadata (class in gammapy.data)": [[91, "gammapy.data.ObservationMetaData", false]], "observations (class in gammapy.data)": [[93, "gammapy.data.Observations", false]], "observationseventssampler (class in gammapy.data)": [[94, "gammapy.data.ObservationsEventsSampler", false]], "observationtable (class in gammapy.data)": [[92, "gammapy.data.ObservationTable", false]], "observatory_earth_location (gammapy.data.eventlist attribute)": [[83, "gammapy.data.EventList.observatory_earth_location", false]], "observatory_earth_location (gammapy.data.observation attribute)": [[89, "gammapy.data.Observation.observatory_earth_location", false]], "observatory_locations (in module gammapy.data)": [[98, "gammapy.data.observatory_locations", false]], "obstime (gammapy.utils.coordinates.fovaltazframe attribute)": [[320, "gammapy.utils.coordinates.FoVAltAzFrame.obstime", false]], "offset (gammapy.data.eventlist attribute)": [[83, "gammapy.data.EventList.offset", false]], "offset_from_median (gammapy.data.eventlist attribute)": [[83, "gammapy.data.EventList.offset_from_median", false]], "offset_max (gammapy.makers.datasetsmaker attribute)": [[173, "gammapy.makers.DatasetsMaker.offset_max", false]], "ogipdatasetreader (class in gammapy.datasets)": [[108, "gammapy.datasets.OGIPDatasetReader", false]], "ogipdatasetwriter (class in gammapy.datasets)": [[109, "gammapy.datasets.OGIPDatasetWriter", false]], "omega (gammapy.modeling.models.sinetemporalmodel attribute)": [[269, "gammapy.modeling.models.SineTemporalModel.omega", false]], "optimize() (gammapy.modeling.fit method)": [[215, "gammapy.modeling.Fit.optimize", false]], "optimize_result (gammapy.modeling.fitresult attribute)": [[216, "gammapy.modeling.FitResult.optimize_result", false]], "optimizeresult (class in gammapy.modeling)": [[217, "gammapy.modeling.OptimizeResult", false]], "order (gammapy.maps.hpxgeom attribute)": [[196, "gammapy.maps.HpxGeom.order", false]], "ordering (gammapy.maps.hpxgeom attribute)": [[196, "gammapy.maps.HpxGeom.ordering", false]], "origin (gammapy.utils.coordinates.fovaltazframe attribute)": [[320, "gammapy.utils.coordinates.FoVAltAzFrame.origin", false]], "origin (gammapy.utils.coordinates.fovicrsframe attribute)": [[321, "gammapy.utils.coordinates.FoVICRSFrame.origin", false]], "output_units() (gammapy.astro.population.casebattacharya1998 method)": [[28, "gammapy.astro.population.CaseBattacharya1998.output_units", false]], "output_units() (gammapy.astro.population.exponential method)": [[29, "gammapy.astro.population.Exponential.output_units", false]], "output_units() (gammapy.astro.population.faucherkaspi2006 method)": [[30, "gammapy.astro.population.FaucherKaspi2006.output_units", false]], "output_units() (gammapy.astro.population.faucherkaspi2006velocitybimodal method)": [[31, "gammapy.astro.population.FaucherKaspi2006VelocityBimodal.output_units", false]], "output_units() (gammapy.astro.population.faucherkaspi2006velocitymaxwellian method)": [[32, "gammapy.astro.population.FaucherKaspi2006VelocityMaxwellian.output_units", false]], "output_units() (gammapy.astro.population.lorimer2006 method)": [[35, "gammapy.astro.population.Lorimer2006.output_units", false]], "output_units() (gammapy.astro.population.paczynski1990 method)": [[36, "gammapy.astro.population.Paczynski1990.output_units", false]], "output_units() (gammapy.astro.population.paczynski1990velocity method)": [[37, "gammapy.astro.population.Paczynski1990Velocity.output_units", false]], "output_units() (gammapy.astro.population.yusifovkucuk2004 method)": [[39, "gammapy.astro.population.YusifovKucuk2004.output_units", false]], "output_units() (gammapy.astro.population.yusifovkucuk2004b method)": [[40, "gammapy.astro.population.YusifovKucuk2004B.output_units", false]], "outputs (gammapy.astro.population.casebattacharya1998 attribute)": [[28, "gammapy.astro.population.CaseBattacharya1998.outputs", false]], "outputs (gammapy.astro.population.exponential attribute)": [[29, "gammapy.astro.population.Exponential.outputs", false]], "outputs (gammapy.astro.population.faucherkaspi2006 attribute)": [[30, "gammapy.astro.population.FaucherKaspi2006.outputs", false]], "outputs (gammapy.astro.population.faucherkaspi2006velocitybimodal attribute)": [[31, "gammapy.astro.population.FaucherKaspi2006VelocityBimodal.outputs", false]], "outputs (gammapy.astro.population.faucherkaspi2006velocitymaxwellian attribute)": [[32, "gammapy.astro.population.FaucherKaspi2006VelocityMaxwellian.outputs", false]], "outputs (gammapy.astro.population.lorimer2006 attribute)": [[35, "gammapy.astro.population.Lorimer2006.outputs", false]], "outputs (gammapy.astro.population.paczynski1990 attribute)": [[36, "gammapy.astro.population.Paczynski1990.outputs", false]], "outputs (gammapy.astro.population.paczynski1990velocity attribute)": [[37, "gammapy.astro.population.Paczynski1990Velocity.outputs", false]], "outputs (gammapy.astro.population.yusifovkucuk2004 attribute)": [[39, "gammapy.astro.population.YusifovKucuk2004.outputs", false]], "outputs (gammapy.astro.population.yusifovkucuk2004b attribute)": [[40, "gammapy.astro.population.YusifovKucuk2004B.outputs", false]], "p (gammapy.astro.population.valleespiral attribute)": [[38, "gammapy.astro.population.ValleeSpiral.p", false]], "p_value (gammapy.stats.cashcountsstatistic attribute)": [[295, "gammapy.stats.CashCountsStatistic.p_value", false]], "p_value (gammapy.stats.wstatcountsstatistic attribute)": [[299, "gammapy.stats.WStatCountsStatistic.p_value", false]], "paczynski1990 (class in gammapy.astro.population)": [[36, "gammapy.astro.population.Paczynski1990", false]], "paczynski1990velocity (class in gammapy.astro.population)": [[37, "gammapy.astro.population.Paczynski1990Velocity", false]], "pad() (gammapy.datasets.mapdataset method)": [[104, "gammapy.datasets.MapDataset.pad", false]], "pad() (gammapy.datasets.mapdatasetonoff method)": [[107, "gammapy.datasets.MapDatasetOnOff.pad", false]], "pad() (gammapy.datasets.spectrumdataset method)": [[111, "gammapy.datasets.SpectrumDataset.pad", false]], "pad() (gammapy.datasets.spectrumdatasetonoff method)": [[112, "gammapy.datasets.SpectrumDatasetOnOff.pad", false]], "pad() (gammapy.irf.background2d method)": [[151, "gammapy.irf.Background2D.pad", false]], "pad() (gammapy.irf.background3d method)": [[152, "gammapy.irf.Background3D.pad", false]], "pad() (gammapy.irf.backgroundirf method)": [[153, "gammapy.irf.BackgroundIRF.pad", false]], "pad() (gammapy.irf.edispkernel method)": [[154, "gammapy.irf.EDispKernel.pad", false]], "pad() (gammapy.irf.effectiveareatable2d method)": [[157, "gammapy.irf.EffectiveAreaTable2D.pad", false]], "pad() (gammapy.irf.energydependentmultigausspsf method)": [[158, "gammapy.irf.EnergyDependentMultiGaussPSF.pad", false]], "pad() (gammapy.irf.energydispersion2d method)": [[159, "gammapy.irf.EnergyDispersion2D.pad", false]], "pad() (gammapy.irf.irf method)": [[161, "gammapy.irf.IRF.pad", false]], "pad() (gammapy.irf.parametricpsf method)": [[168, "gammapy.irf.ParametricPSF.pad", false]], "pad() (gammapy.irf.psf3d method)": [[164, "gammapy.irf.PSF3D.pad", false]], "pad() (gammapy.irf.psfking method)": [[166, "gammapy.irf.PSFKing.pad", false]], "pad() (gammapy.irf.radmax2d method)": [[169, "gammapy.irf.RadMax2D.pad", false]], "pad() (gammapy.maps.geom method)": [[195, "gammapy.maps.Geom.pad", false]], "pad() (gammapy.maps.hpxgeom method)": [[196, "gammapy.maps.HpxGeom.pad", false]], "pad() (gammapy.maps.hpxmap method)": [[197, "gammapy.maps.HpxMap.pad", false]], "pad() (gammapy.maps.hpxndmap method)": [[198, "gammapy.maps.HpxNDMap.pad", false]], "pad() (gammapy.maps.labelmapaxis method)": [[199, "gammapy.maps.LabelMapAxis.pad", false]], "pad() (gammapy.maps.map method)": [[200, "gammapy.maps.Map.pad", false]], "pad() (gammapy.maps.mapaxes method)": [[201, "gammapy.maps.MapAxes.pad", false]], "pad() (gammapy.maps.mapaxis method)": [[202, "gammapy.maps.MapAxis.pad", false]], "pad() (gammapy.maps.regiongeom method)": [[205, "gammapy.maps.RegionGeom.pad", false]], "pad() (gammapy.maps.regionndmap method)": [[206, "gammapy.maps.RegionNDMap.pad", false]], "pad() (gammapy.maps.wcsgeom method)": [[208, "gammapy.maps.WcsGeom.pad", false]], "pad() (gammapy.maps.wcsmap method)": [[209, "gammapy.maps.WcsMap.pad", false]], "pad() (gammapy.maps.wcsndmap method)": [[210, "gammapy.maps.WcsNDMap.pad", false]], "parallel_backend (gammapy.data.observationseventssampler attribute)": [[94, "gammapy.data.ObservationsEventsSampler.parallel_backend", false]], "parallel_backend (gammapy.estimators.fluxpointsestimator attribute)": [[129, "gammapy.estimators.FluxPointsEstimator.parallel_backend", false]], "parallel_backend (gammapy.estimators.fluxprofileestimator attribute)": [[130, "gammapy.estimators.FluxProfileEstimator.parallel_backend", false]], "parallel_backend (gammapy.estimators.lightcurveestimator attribute)": [[133, "gammapy.estimators.LightCurveEstimator.parallel_backend", false]], "parallel_backend (gammapy.estimators.tsmapestimator attribute)": [[137, "gammapy.estimators.TSMapEstimator.parallel_backend", false]], "parallel_backend (gammapy.makers.datasetsmaker attribute)": [[173, "gammapy.makers.DatasetsMaker.parallel_backend", false]], "param_names (gammapy.astro.population.casebattacharya1998 attribute)": [[28, "gammapy.astro.population.CaseBattacharya1998.param_names", false]], "param_names (gammapy.astro.population.exponential attribute)": [[29, "gammapy.astro.population.Exponential.param_names", false]], "param_names (gammapy.astro.population.faucherkaspi2006 attribute)": [[30, "gammapy.astro.population.FaucherKaspi2006.param_names", false]], "param_names (gammapy.astro.population.faucherkaspi2006velocitybimodal attribute)": [[31, "gammapy.astro.population.FaucherKaspi2006VelocityBimodal.param_names", false]], "param_names (gammapy.astro.population.faucherkaspi2006velocitymaxwellian attribute)": [[32, "gammapy.astro.population.FaucherKaspi2006VelocityMaxwellian.param_names", false]], "param_names (gammapy.astro.population.lorimer2006 attribute)": [[35, "gammapy.astro.population.Lorimer2006.param_names", false]], "param_names (gammapy.astro.population.paczynski1990 attribute)": [[36, "gammapy.astro.population.Paczynski1990.param_names", false]], "param_names (gammapy.astro.population.paczynski1990velocity attribute)": [[37, "gammapy.astro.population.Paczynski1990Velocity.param_names", false]], "param_names (gammapy.astro.population.yusifovkucuk2004 attribute)": [[39, "gammapy.astro.population.YusifovKucuk2004.param_names", false]], "param_names (gammapy.astro.population.yusifovkucuk2004b attribute)": [[40, "gammapy.astro.population.YusifovKucuk2004B.param_names", false]], "param_sets (gammapy.astro.population.casebattacharya1998 attribute)": [[28, "gammapy.astro.population.CaseBattacharya1998.param_sets", false]], "param_sets (gammapy.astro.population.exponential attribute)": [[29, "gammapy.astro.population.Exponential.param_sets", false]], "param_sets (gammapy.astro.population.faucherkaspi2006 attribute)": [[30, "gammapy.astro.population.FaucherKaspi2006.param_sets", false]], "param_sets (gammapy.astro.population.faucherkaspi2006velocitybimodal attribute)": [[31, "gammapy.astro.population.FaucherKaspi2006VelocityBimodal.param_sets", false]], "param_sets (gammapy.astro.population.faucherkaspi2006velocitymaxwellian attribute)": [[32, "gammapy.astro.population.FaucherKaspi2006VelocityMaxwellian.param_sets", false]], "param_sets (gammapy.astro.population.lorimer2006 attribute)": [[35, "gammapy.astro.population.Lorimer2006.param_sets", false]], "param_sets (gammapy.astro.population.paczynski1990 attribute)": [[36, "gammapy.astro.population.Paczynski1990.param_sets", false]], "param_sets (gammapy.astro.population.paczynski1990velocity attribute)": [[37, "gammapy.astro.population.Paczynski1990Velocity.param_sets", false]], "param_sets (gammapy.astro.population.yusifovkucuk2004 attribute)": [[39, "gammapy.astro.population.YusifovKucuk2004.param_sets", false]], "param_sets (gammapy.astro.population.yusifovkucuk2004b attribute)": [[40, "gammapy.astro.population.YusifovKucuk2004B.param_sets", false]], "parameter (class in gammapy.modeling)": [[218, "gammapy.modeling.Parameter", false]], "parameter_constraints (gammapy.astro.population.casebattacharya1998 attribute)": [[28, "gammapy.astro.population.CaseBattacharya1998.parameter_constraints", false]], "parameter_constraints (gammapy.astro.population.exponential attribute)": [[29, "gammapy.astro.population.Exponential.parameter_constraints", false]], "parameter_constraints (gammapy.astro.population.faucherkaspi2006 attribute)": [[30, "gammapy.astro.population.FaucherKaspi2006.parameter_constraints", false]], "parameter_constraints (gammapy.astro.population.faucherkaspi2006velocitybimodal attribute)": [[31, "gammapy.astro.population.FaucherKaspi2006VelocityBimodal.parameter_constraints", false]], "parameter_constraints (gammapy.astro.population.faucherkaspi2006velocitymaxwellian attribute)": [[32, "gammapy.astro.population.FaucherKaspi2006VelocityMaxwellian.parameter_constraints", false]], "parameter_constraints (gammapy.astro.population.lorimer2006 attribute)": [[35, "gammapy.astro.population.Lorimer2006.parameter_constraints", false]], "parameter_constraints (gammapy.astro.population.paczynski1990 attribute)": [[36, "gammapy.astro.population.Paczynski1990.parameter_constraints", false]], "parameter_constraints (gammapy.astro.population.paczynski1990velocity attribute)": [[37, "gammapy.astro.population.Paczynski1990Velocity.parameter_constraints", false]], "parameter_constraints (gammapy.astro.population.yusifovkucuk2004 attribute)": [[39, "gammapy.astro.population.YusifovKucuk2004.parameter_constraints", false]], "parameter_constraints (gammapy.astro.population.yusifovkucuk2004b attribute)": [[40, "gammapy.astro.population.YusifovKucuk2004B.parameter_constraints", false]], "parameter_matching_significance() (gammapy.estimators.parametersensitivityestimator method)": [[135, "gammapy.estimators.ParameterSensitivityEstimator.parameter_matching_significance", false]], "parameterestimator (class in gammapy.estimators)": [[134, "gammapy.estimators.ParameterEstimator", false]], "parameters (class in gammapy.modeling)": [[219, "gammapy.modeling.Parameters", false]], "parameters (gammapy.astro.darkmatter.darkmatterannihilationspectralmodel attribute)": [[19, "gammapy.astro.darkmatter.DarkMatterAnnihilationSpectralModel.parameters", false]], "parameters (gammapy.astro.darkmatter.darkmatterdecayspectralmodel attribute)": [[20, "gammapy.astro.darkmatter.DarkMatterDecaySpectralModel.parameters", false]], "parameters (gammapy.astro.darkmatter.primaryflux attribute)": [[26, "gammapy.astro.darkmatter.PrimaryFlux.parameters", false]], "parameters (gammapy.astro.population.casebattacharya1998 attribute)": [[28, "gammapy.astro.population.CaseBattacharya1998.parameters", false]], "parameters (gammapy.astro.population.exponential attribute)": [[29, "gammapy.astro.population.Exponential.parameters", false]], "parameters (gammapy.astro.population.faucherkaspi2006 attribute)": [[30, "gammapy.astro.population.FaucherKaspi2006.parameters", false]], "parameters (gammapy.astro.population.faucherkaspi2006velocitybimodal attribute)": [[31, "gammapy.astro.population.FaucherKaspi2006VelocityBimodal.parameters", false]], "parameters (gammapy.astro.population.faucherkaspi2006velocitymaxwellian attribute)": [[32, "gammapy.astro.population.FaucherKaspi2006VelocityMaxwellian.parameters", false]], "parameters (gammapy.astro.population.lorimer2006 attribute)": [[35, "gammapy.astro.population.Lorimer2006.parameters", false]], "parameters (gammapy.astro.population.paczynski1990 attribute)": [[36, "gammapy.astro.population.Paczynski1990.parameters", false]], "parameters (gammapy.astro.population.paczynski1990velocity attribute)": [[37, "gammapy.astro.population.Paczynski1990Velocity.parameters", false]], "parameters (gammapy.astro.population.yusifovkucuk2004 attribute)": [[39, "gammapy.astro.population.YusifovKucuk2004.parameters", false]], "parameters (gammapy.astro.population.yusifovkucuk2004b attribute)": [[40, "gammapy.astro.population.YusifovKucuk2004B.parameters", false]], "parameters (gammapy.datasets.datasets attribute)": [[101, "gammapy.datasets.Datasets.parameters", false]], "parameters (gammapy.modeling.fitresult attribute)": [[216, "gammapy.modeling.FitResult.parameters", false]], "parameters (gammapy.modeling.models.brokenpowerlawspectralmodel attribute)": [[224, "gammapy.modeling.models.BrokenPowerLawSpectralModel.parameters", false]], "parameters (gammapy.modeling.models.compoundspectralmodel attribute)": [[225, "gammapy.modeling.models.CompoundSpectralModel.parameters", false]], "parameters (gammapy.modeling.models.constantfluxspatialmodel attribute)": [[226, "gammapy.modeling.models.ConstantFluxSpatialModel.parameters", false]], "parameters (gammapy.modeling.models.constantspatialmodel attribute)": [[227, "gammapy.modeling.models.ConstantSpatialModel.parameters", false]], "parameters (gammapy.modeling.models.constantspectralmodel attribute)": [[228, "gammapy.modeling.models.ConstantSpectralModel.parameters", false]], "parameters (gammapy.modeling.models.constanttemporalmodel attribute)": [[229, "gammapy.modeling.models.ConstantTemporalModel.parameters", false]], "parameters (gammapy.modeling.models.datasetmodels attribute)": [[230, "gammapy.modeling.models.DatasetModels.parameters", false]], "parameters (gammapy.modeling.models.diskspatialmodel attribute)": [[231, "gammapy.modeling.models.DiskSpatialModel.parameters", false]], "parameters (gammapy.modeling.models.eblabsorptionnormspectralmodel attribute)": [[232, "gammapy.modeling.models.EBLAbsorptionNormSpectralModel.parameters", false]], "parameters (gammapy.modeling.models.expcutoffpowerlaw3fglspectralmodel attribute)": [[234, "gammapy.modeling.models.ExpCutoffPowerLaw3FGLSpectralModel.parameters", false]], "parameters (gammapy.modeling.models.expcutoffpowerlawnormspectralmodel attribute)": [[235, "gammapy.modeling.models.ExpCutoffPowerLawNormSpectralModel.parameters", false]], "parameters (gammapy.modeling.models.expcutoffpowerlawspectralmodel attribute)": [[236, "gammapy.modeling.models.ExpCutoffPowerLawSpectralModel.parameters", false]], "parameters (gammapy.modeling.models.expdecaytemporalmodel attribute)": [[237, "gammapy.modeling.models.ExpDecayTemporalModel.parameters", false]], "parameters (gammapy.modeling.models.fovbackgroundmodel attribute)": [[238, "gammapy.modeling.models.FoVBackgroundModel.parameters", false]], "parameters (gammapy.modeling.models.gaussianprior attribute)": [[239, "gammapy.modeling.models.GaussianPrior.parameters", false]], "parameters (gammapy.modeling.models.gaussianspatialmodel attribute)": [[240, "gammapy.modeling.models.GaussianSpatialModel.parameters", false]], "parameters (gammapy.modeling.models.gaussianspectralmodel attribute)": [[241, "gammapy.modeling.models.GaussianSpectralModel.parameters", false]], "parameters (gammapy.modeling.models.gaussiantemporalmodel attribute)": [[242, "gammapy.modeling.models.GaussianTemporalModel.parameters", false]], "parameters (gammapy.modeling.models.generalizedgaussianspatialmodel attribute)": [[243, "gammapy.modeling.models.GeneralizedGaussianSpatialModel.parameters", false]], "parameters (gammapy.modeling.models.generalizedgaussiantemporalmodel attribute)": [[244, "gammapy.modeling.models.GeneralizedGaussianTemporalModel.parameters", false]], "parameters (gammapy.modeling.models.lightcurvetemplatetemporalmodel attribute)": [[245, "gammapy.modeling.models.LightCurveTemplateTemporalModel.parameters", false]], "parameters (gammapy.modeling.models.lineartemporalmodel attribute)": [[246, "gammapy.modeling.models.LinearTemporalModel.parameters", false]], "parameters (gammapy.modeling.models.logparabolanormspectralmodel attribute)": [[247, "gammapy.modeling.models.LogParabolaNormSpectralModel.parameters", false]], "parameters (gammapy.modeling.models.logparabolaspectralmodel attribute)": [[248, "gammapy.modeling.models.LogParabolaSpectralModel.parameters", false]], "parameters (gammapy.modeling.models.loguniformprior attribute)": [[249, "gammapy.modeling.models.LogUniformPrior.parameters", false]], "parameters (gammapy.modeling.models.meyercrabspectralmodel attribute)": [[251, "gammapy.modeling.models.MeyerCrabSpectralModel.parameters", false]], "parameters (gammapy.modeling.models.modelbase attribute)": [[253, "gammapy.modeling.models.ModelBase.parameters", false]], "parameters (gammapy.modeling.models.models attribute)": [[254, "gammapy.modeling.models.Models.parameters", false]], "parameters (gammapy.modeling.models.naimaspectralmodel attribute)": [[255, "gammapy.modeling.models.NaimaSpectralModel.parameters", false]], "parameters (gammapy.modeling.models.piecewisenormspatialmodel attribute)": [[256, "gammapy.modeling.models.PiecewiseNormSpatialModel.parameters", false]], "parameters (gammapy.modeling.models.piecewisenormspectralmodel attribute)": [[257, "gammapy.modeling.models.PiecewiseNormSpectralModel.parameters", false]], "parameters (gammapy.modeling.models.pointspatialmodel attribute)": [[258, "gammapy.modeling.models.PointSpatialModel.parameters", false]], "parameters (gammapy.modeling.models.powerlaw2spectralmodel attribute)": [[259, "gammapy.modeling.models.PowerLaw2SpectralModel.parameters", false]], "parameters (gammapy.modeling.models.powerlawnormspectralmodel attribute)": [[260, "gammapy.modeling.models.PowerLawNormSpectralModel.parameters", false]], "parameters (gammapy.modeling.models.powerlawspectralmodel attribute)": [[261, "gammapy.modeling.models.PowerLawSpectralModel.parameters", false]], "parameters (gammapy.modeling.models.powerlawtemporalmodel attribute)": [[262, "gammapy.modeling.models.PowerLawTemporalModel.parameters", false]], "parameters (gammapy.modeling.models.prior attribute)": [[263, "gammapy.modeling.models.Prior.parameters", false]], "parameters (gammapy.modeling.models.scalespectralmodel attribute)": [[266, "gammapy.modeling.models.ScaleSpectralModel.parameters", false]], "parameters (gammapy.modeling.models.shell2spatialmodel attribute)": [[267, "gammapy.modeling.models.Shell2SpatialModel.parameters", false]], "parameters (gammapy.modeling.models.shellspatialmodel attribute)": [[268, "gammapy.modeling.models.ShellSpatialModel.parameters", false]], "parameters (gammapy.modeling.models.sinetemporalmodel attribute)": [[269, "gammapy.modeling.models.SineTemporalModel.parameters", false]], "parameters (gammapy.modeling.models.skymodel attribute)": [[270, "gammapy.modeling.models.SkyModel.parameters", false]], "parameters (gammapy.modeling.models.smoothbrokenpowerlawspectralmodel attribute)": [[271, "gammapy.modeling.models.SmoothBrokenPowerLawSpectralModel.parameters", false]], "parameters (gammapy.modeling.models.spatialmodel attribute)": [[272, "gammapy.modeling.models.SpatialModel.parameters", false]], "parameters (gammapy.modeling.models.spectralmodel attribute)": [[273, "gammapy.modeling.models.SpectralModel.parameters", false]], "parameters (gammapy.modeling.models.superexpcutoffpowerlaw3fglspectralmodel attribute)": [[274, "gammapy.modeling.models.SuperExpCutoffPowerLaw3FGLSpectralModel.parameters", false]], "parameters (gammapy.modeling.models.superexpcutoffpowerlaw4fgldr3spectralmodel attribute)": [[275, "gammapy.modeling.models.SuperExpCutoffPowerLaw4FGLDR3SpectralModel.parameters", false]], "parameters (gammapy.modeling.models.superexpcutoffpowerlaw4fglspectralmodel attribute)": [[276, "gammapy.modeling.models.SuperExpCutoffPowerLaw4FGLSpectralModel.parameters", false]], "parameters (gammapy.modeling.models.templatendspatialmodel attribute)": [[278, "gammapy.modeling.models.TemplateNDSpatialModel.parameters", false]], "parameters (gammapy.modeling.models.templatendspectralmodel attribute)": [[279, "gammapy.modeling.models.TemplateNDSpectralModel.parameters", false]], "parameters (gammapy.modeling.models.templatenpredmodel attribute)": [[280, "gammapy.modeling.models.TemplateNPredModel.parameters", false]], "parameters (gammapy.modeling.models.templatephasecurvetemporalmodel attribute)": [[281, "gammapy.modeling.models.TemplatePhaseCurveTemporalModel.parameters", false]], "parameters (gammapy.modeling.models.templatespatialmodel attribute)": [[282, "gammapy.modeling.models.TemplateSpatialModel.parameters", false]], "parameters (gammapy.modeling.models.templatespectralmodel attribute)": [[283, "gammapy.modeling.models.TemplateSpectralModel.parameters", false]], "parameters (gammapy.modeling.models.temporalmodel attribute)": [[284, "gammapy.modeling.models.TemporalModel.parameters", false]], "parameters (gammapy.modeling.models.uniformprior attribute)": [[285, "gammapy.modeling.models.UniformPrior.parameters", false]], "parameters (gammapy.modeling.optimizeresult attribute)": [[217, "gammapy.modeling.OptimizeResult.parameters", false]], "parameters_unique_names (gammapy.astro.darkmatter.darkmatterannihilationspectralmodel attribute)": [[19, "gammapy.astro.darkmatter.DarkMatterAnnihilationSpectralModel.parameters_unique_names", false]], "parameters_unique_names (gammapy.astro.darkmatter.darkmatterdecayspectralmodel attribute)": [[20, "gammapy.astro.darkmatter.DarkMatterDecaySpectralModel.parameters_unique_names", false]], "parameters_unique_names (gammapy.astro.darkmatter.primaryflux attribute)": [[26, "gammapy.astro.darkmatter.PrimaryFlux.parameters_unique_names", false]], "parameters_unique_names (gammapy.modeling.models.brokenpowerlawspectralmodel attribute)": [[224, "gammapy.modeling.models.BrokenPowerLawSpectralModel.parameters_unique_names", false]], "parameters_unique_names (gammapy.modeling.models.compoundspectralmodel attribute)": [[225, "gammapy.modeling.models.CompoundSpectralModel.parameters_unique_names", false]], "parameters_unique_names (gammapy.modeling.models.constantfluxspatialmodel attribute)": [[226, "gammapy.modeling.models.ConstantFluxSpatialModel.parameters_unique_names", false]], "parameters_unique_names (gammapy.modeling.models.constantspatialmodel attribute)": [[227, "gammapy.modeling.models.ConstantSpatialModel.parameters_unique_names", false]], "parameters_unique_names (gammapy.modeling.models.constantspectralmodel attribute)": [[228, "gammapy.modeling.models.ConstantSpectralModel.parameters_unique_names", false]], "parameters_unique_names (gammapy.modeling.models.constanttemporalmodel attribute)": [[229, "gammapy.modeling.models.ConstantTemporalModel.parameters_unique_names", false]], "parameters_unique_names (gammapy.modeling.models.datasetmodels attribute)": [[230, "gammapy.modeling.models.DatasetModels.parameters_unique_names", false]], "parameters_unique_names (gammapy.modeling.models.diskspatialmodel attribute)": [[231, "gammapy.modeling.models.DiskSpatialModel.parameters_unique_names", false]], "parameters_unique_names (gammapy.modeling.models.eblabsorptionnormspectralmodel attribute)": [[232, "gammapy.modeling.models.EBLAbsorptionNormSpectralModel.parameters_unique_names", false]], "parameters_unique_names (gammapy.modeling.models.expcutoffpowerlaw3fglspectralmodel attribute)": [[234, "gammapy.modeling.models.ExpCutoffPowerLaw3FGLSpectralModel.parameters_unique_names", false]], "parameters_unique_names (gammapy.modeling.models.expcutoffpowerlawnormspectralmodel attribute)": [[235, "gammapy.modeling.models.ExpCutoffPowerLawNormSpectralModel.parameters_unique_names", false]], "parameters_unique_names (gammapy.modeling.models.expcutoffpowerlawspectralmodel attribute)": [[236, "gammapy.modeling.models.ExpCutoffPowerLawSpectralModel.parameters_unique_names", false]], "parameters_unique_names (gammapy.modeling.models.expdecaytemporalmodel attribute)": [[237, "gammapy.modeling.models.ExpDecayTemporalModel.parameters_unique_names", false]], "parameters_unique_names (gammapy.modeling.models.fovbackgroundmodel attribute)": [[238, "gammapy.modeling.models.FoVBackgroundModel.parameters_unique_names", false]], "parameters_unique_names (gammapy.modeling.models.gaussianprior attribute)": [[239, "gammapy.modeling.models.GaussianPrior.parameters_unique_names", false]], "parameters_unique_names (gammapy.modeling.models.gaussianspatialmodel attribute)": [[240, "gammapy.modeling.models.GaussianSpatialModel.parameters_unique_names", false]], "parameters_unique_names (gammapy.modeling.models.gaussianspectralmodel attribute)": [[241, "gammapy.modeling.models.GaussianSpectralModel.parameters_unique_names", false]], "parameters_unique_names (gammapy.modeling.models.gaussiantemporalmodel attribute)": [[242, "gammapy.modeling.models.GaussianTemporalModel.parameters_unique_names", false]], "parameters_unique_names (gammapy.modeling.models.generalizedgaussianspatialmodel attribute)": [[243, "gammapy.modeling.models.GeneralizedGaussianSpatialModel.parameters_unique_names", false]], "parameters_unique_names (gammapy.modeling.models.generalizedgaussiantemporalmodel attribute)": [[244, "gammapy.modeling.models.GeneralizedGaussianTemporalModel.parameters_unique_names", false]], "parameters_unique_names (gammapy.modeling.models.lightcurvetemplatetemporalmodel attribute)": [[245, "gammapy.modeling.models.LightCurveTemplateTemporalModel.parameters_unique_names", false]], "parameters_unique_names (gammapy.modeling.models.lineartemporalmodel attribute)": [[246, "gammapy.modeling.models.LinearTemporalModel.parameters_unique_names", false]], "parameters_unique_names (gammapy.modeling.models.logparabolanormspectralmodel attribute)": [[247, "gammapy.modeling.models.LogParabolaNormSpectralModel.parameters_unique_names", false]], "parameters_unique_names (gammapy.modeling.models.logparabolaspectralmodel attribute)": [[248, "gammapy.modeling.models.LogParabolaSpectralModel.parameters_unique_names", false]], "parameters_unique_names (gammapy.modeling.models.loguniformprior attribute)": [[249, "gammapy.modeling.models.LogUniformPrior.parameters_unique_names", false]], "parameters_unique_names (gammapy.modeling.models.meyercrabspectralmodel attribute)": [[251, "gammapy.modeling.models.MeyerCrabSpectralModel.parameters_unique_names", false]], "parameters_unique_names (gammapy.modeling.models.modelbase attribute)": [[253, "gammapy.modeling.models.ModelBase.parameters_unique_names", false]], "parameters_unique_names (gammapy.modeling.models.models attribute)": [[254, "gammapy.modeling.models.Models.parameters_unique_names", false]], "parameters_unique_names (gammapy.modeling.models.naimaspectralmodel attribute)": [[255, "gammapy.modeling.models.NaimaSpectralModel.parameters_unique_names", false]], "parameters_unique_names (gammapy.modeling.models.piecewisenormspatialmodel attribute)": [[256, "gammapy.modeling.models.PiecewiseNormSpatialModel.parameters_unique_names", false]], "parameters_unique_names (gammapy.modeling.models.piecewisenormspectralmodel attribute)": [[257, "gammapy.modeling.models.PiecewiseNormSpectralModel.parameters_unique_names", false]], "parameters_unique_names (gammapy.modeling.models.pointspatialmodel attribute)": [[258, "gammapy.modeling.models.PointSpatialModel.parameters_unique_names", false]], "parameters_unique_names (gammapy.modeling.models.powerlaw2spectralmodel attribute)": [[259, "gammapy.modeling.models.PowerLaw2SpectralModel.parameters_unique_names", false]], "parameters_unique_names (gammapy.modeling.models.powerlawnormspectralmodel attribute)": [[260, "gammapy.modeling.models.PowerLawNormSpectralModel.parameters_unique_names", false]], "parameters_unique_names (gammapy.modeling.models.powerlawspectralmodel attribute)": [[261, "gammapy.modeling.models.PowerLawSpectralModel.parameters_unique_names", false]], "parameters_unique_names (gammapy.modeling.models.powerlawtemporalmodel attribute)": [[262, "gammapy.modeling.models.PowerLawTemporalModel.parameters_unique_names", false]], "parameters_unique_names (gammapy.modeling.models.prior attribute)": [[263, "gammapy.modeling.models.Prior.parameters_unique_names", false]], "parameters_unique_names (gammapy.modeling.models.scalespectralmodel attribute)": [[266, "gammapy.modeling.models.ScaleSpectralModel.parameters_unique_names", false]], "parameters_unique_names (gammapy.modeling.models.shell2spatialmodel attribute)": [[267, "gammapy.modeling.models.Shell2SpatialModel.parameters_unique_names", false]], "parameters_unique_names (gammapy.modeling.models.shellspatialmodel attribute)": [[268, "gammapy.modeling.models.ShellSpatialModel.parameters_unique_names", false]], "parameters_unique_names (gammapy.modeling.models.sinetemporalmodel attribute)": [[269, "gammapy.modeling.models.SineTemporalModel.parameters_unique_names", false]], "parameters_unique_names (gammapy.modeling.models.skymodel attribute)": [[270, "gammapy.modeling.models.SkyModel.parameters_unique_names", false]], "parameters_unique_names (gammapy.modeling.models.smoothbrokenpowerlawspectralmodel attribute)": [[271, "gammapy.modeling.models.SmoothBrokenPowerLawSpectralModel.parameters_unique_names", false]], "parameters_unique_names (gammapy.modeling.models.spatialmodel attribute)": [[272, "gammapy.modeling.models.SpatialModel.parameters_unique_names", false]], "parameters_unique_names (gammapy.modeling.models.spectralmodel attribute)": [[273, "gammapy.modeling.models.SpectralModel.parameters_unique_names", false]], "parameters_unique_names (gammapy.modeling.models.superexpcutoffpowerlaw3fglspectralmodel attribute)": [[274, "gammapy.modeling.models.SuperExpCutoffPowerLaw3FGLSpectralModel.parameters_unique_names", false]], "parameters_unique_names (gammapy.modeling.models.superexpcutoffpowerlaw4fgldr3spectralmodel attribute)": [[275, "gammapy.modeling.models.SuperExpCutoffPowerLaw4FGLDR3SpectralModel.parameters_unique_names", false]], "parameters_unique_names (gammapy.modeling.models.superexpcutoffpowerlaw4fglspectralmodel attribute)": [[276, "gammapy.modeling.models.SuperExpCutoffPowerLaw4FGLSpectralModel.parameters_unique_names", false]], "parameters_unique_names (gammapy.modeling.models.templatendspatialmodel attribute)": [[278, "gammapy.modeling.models.TemplateNDSpatialModel.parameters_unique_names", false]], "parameters_unique_names (gammapy.modeling.models.templatendspectralmodel attribute)": [[279, "gammapy.modeling.models.TemplateNDSpectralModel.parameters_unique_names", false]], "parameters_unique_names (gammapy.modeling.models.templatenpredmodel attribute)": [[280, "gammapy.modeling.models.TemplateNPredModel.parameters_unique_names", false]], "parameters_unique_names (gammapy.modeling.models.templatephasecurvetemporalmodel attribute)": [[281, "gammapy.modeling.models.TemplatePhaseCurveTemporalModel.parameters_unique_names", false]], "parameters_unique_names (gammapy.modeling.models.templatespatialmodel attribute)": [[282, "gammapy.modeling.models.TemplateSpatialModel.parameters_unique_names", false]], "parameters_unique_names (gammapy.modeling.models.templatespectralmodel attribute)": [[283, "gammapy.modeling.models.TemplateSpectralModel.parameters_unique_names", false]], "parameters_unique_names (gammapy.modeling.models.temporalmodel attribute)": [[284, "gammapy.modeling.models.TemporalModel.parameters_unique_names", false]], "parameters_unique_names (gammapy.modeling.models.uniformprior attribute)": [[285, "gammapy.modeling.models.UniformPrior.parameters_unique_names", false]], "parametersensitivityestimator (class in gammapy.estimators)": [[135, "gammapy.estimators.ParameterSensitivityEstimator", false]], "parametricpsf (class in gammapy.irf)": [[168, "gammapy.irf.ParametricPSF", false]], "parse_file() (gammapy.analysis.analysisconfig class method)": [[16, "gammapy.analysis.AnalysisConfig.parse_file", false]], "parse_file() (gammapy.data.eventlistmetadata class method)": [[84, "gammapy.data.EventListMetaData.parse_file", false]], "parse_file() (gammapy.data.gtimetadata class method)": [[87, "gammapy.data.GTIMetaData.parse_file", false]], "parse_file() (gammapy.data.observationmetadata class method)": [[91, "gammapy.data.ObservationMetaData.parse_file", false]], "parse_file() (gammapy.datasets.mapdatasetmetadata class method)": [[106, "gammapy.datasets.MapDatasetMetaData.parse_file", false]], "parse_file() (gammapy.estimators.fluxmetadata class method)": [[127, "gammapy.estimators.FluxMetaData.parse_file", false]], "parse_obj() (gammapy.analysis.analysisconfig class method)": [[16, "gammapy.analysis.AnalysisConfig.parse_obj", false]], "parse_obj() (gammapy.data.eventlistmetadata class method)": [[84, "gammapy.data.EventListMetaData.parse_obj", false]], "parse_obj() (gammapy.data.gtimetadata class method)": [[87, "gammapy.data.GTIMetaData.parse_obj", false]], "parse_obj() (gammapy.data.observationmetadata class method)": [[91, "gammapy.data.ObservationMetaData.parse_obj", false]], "parse_obj() (gammapy.datasets.mapdatasetmetadata class method)": [[106, "gammapy.datasets.MapDatasetMetaData.parse_obj", false]], "parse_obj() (gammapy.estimators.fluxmetadata class method)": [[127, "gammapy.estimators.FluxMetaData.parse_obj", false]], "parse_raw() (gammapy.analysis.analysisconfig class method)": [[16, "gammapy.analysis.AnalysisConfig.parse_raw", false]], "parse_raw() (gammapy.data.eventlistmetadata class method)": [[84, "gammapy.data.EventListMetaData.parse_raw", false]], "parse_raw() (gammapy.data.gtimetadata class method)": [[87, "gammapy.data.GTIMetaData.parse_raw", false]], "parse_raw() (gammapy.data.observationmetadata class method)": [[91, "gammapy.data.ObservationMetaData.parse_raw", false]], "parse_raw() (gammapy.datasets.mapdatasetmetadata class method)": [[106, "gammapy.datasets.MapDatasetMetaData.parse_raw", false]], "parse_raw() (gammapy.estimators.fluxmetadata class method)": [[127, "gammapy.estimators.FluxMetaData.parse_raw", false]], "particle_distribution (gammapy.modeling.models.naimaspectralmodel attribute)": [[255, "gammapy.modeling.models.NaimaSpectralModel.particle_distribution", false]], "path() (gammapy.utils.fits.hdulocation method)": [[329, "gammapy.utils.fits.HDULocation.path", false]], "pdf() (in module gammapy.utils.random)": [[347, "gammapy.utils.random.pdf", false]], "pdf_in_safe_range() (gammapy.irf.edispkernel method)": [[154, "gammapy.irf.EDispKernel.pdf_in_safe_range", false]], "pdf_matrix (gammapy.irf.edispkernel attribute)": [[154, "gammapy.irf.EDispKernel.pdf_matrix", false]], "peak_brightness() (gammapy.catalog.sourcecataloglargescalehgps method)": [[68, "gammapy.catalog.SourceCatalogLargeScaleHGPS.peak_brightness", false]], "peak_brightness_error() (gammapy.catalog.sourcecataloglargescalehgps method)": [[68, "gammapy.catalog.SourceCatalogLargeScaleHGPS.peak_brightness_error", false]], "peak_latitude() (gammapy.catalog.sourcecataloglargescalehgps method)": [[68, "gammapy.catalog.SourceCatalogLargeScaleHGPS.peak_latitude", false]], "peak_latitude_error() (gammapy.catalog.sourcecataloglargescalehgps method)": [[68, "gammapy.catalog.SourceCatalogLargeScaleHGPS.peak_latitude_error", false]], "peek() (gammapy.data.eventlist method)": [[83, "gammapy.data.EventList.peek", false]], "peek() (gammapy.data.observation method)": [[89, "gammapy.data.Observation.peek", false]], "peek() (gammapy.datasets.mapdataset method)": [[104, "gammapy.datasets.MapDataset.peek", false]], "peek() (gammapy.datasets.mapdatasetonoff method)": [[107, "gammapy.datasets.MapDatasetOnOff.peek", false]], "peek() (gammapy.datasets.spectrumdataset method)": [[111, "gammapy.datasets.SpectrumDataset.peek", false]], "peek() (gammapy.datasets.spectrumdatasetonoff method)": [[112, "gammapy.datasets.SpectrumDatasetOnOff.peek", false]], "peek() (gammapy.estimators.imageprofile method)": [[131, "gammapy.estimators.ImageProfile.peek", false]], "peek() (gammapy.irf.background2d method)": [[151, "gammapy.irf.Background2D.peek", false]], "peek() (gammapy.irf.background3d method)": [[152, "gammapy.irf.Background3D.peek", false]], "peek() (gammapy.irf.edispkernel method)": [[154, "gammapy.irf.EDispKernel.peek", false]], "peek() (gammapy.irf.edispkernelmap method)": [[155, "gammapy.irf.EDispKernelMap.peek", false]], "peek() (gammapy.irf.edispmap method)": [[156, "gammapy.irf.EDispMap.peek", false]], "peek() (gammapy.irf.effectiveareatable2d method)": [[157, "gammapy.irf.EffectiveAreaTable2D.peek", false]], "peek() (gammapy.irf.energydependentmultigausspsf method)": [[158, "gammapy.irf.EnergyDependentMultiGaussPSF.peek", false]], "peek() (gammapy.irf.energydispersion2d method)": [[159, "gammapy.irf.EnergyDispersion2D.peek", false]], "peek() (gammapy.irf.parametricpsf method)": [[168, "gammapy.irf.ParametricPSF.peek", false]], "peek() (gammapy.irf.psf3d method)": [[164, "gammapy.irf.PSF3D.peek", false]], "peek() (gammapy.irf.psfkernel method)": [[165, "gammapy.irf.PSFKernel.peek", false]], "peek() (gammapy.irf.psfking method)": [[166, "gammapy.irf.PSFKing.peek", false]], "peek() (gammapy.irf.psfmap method)": [[167, "gammapy.irf.PSFMap.peek", false]], "peek() (gammapy.irf.recopsfmap method)": [[170, "gammapy.irf.RecoPSFMap.peek", false]], "period() (gammapy.astro.source.pulsar method)": [[51, "gammapy.astro.source.Pulsar.period", false]], "period_dot() (gammapy.astro.source.pulsar method)": [[51, "gammapy.astro.source.Pulsar.period_dot", false]], "pformat() (gammapy.data.hduindextable method)": [[88, "gammapy.data.HDUIndexTable.pformat", false]], "pformat() (gammapy.data.observationtable method)": [[92, "gammapy.data.ObservationTable.pformat", false]], "pformat_all() (gammapy.data.hduindextable method)": [[88, "gammapy.data.HDUIndexTable.pformat_all", false]], "pformat_all() (gammapy.data.observationtable method)": [[92, "gammapy.data.ObservationTable.pformat_all", false]], "phasebackgroundmaker (class in gammapy.makers)": [[178, "gammapy.makers.PhaseBackgroundMaker", false]], "phi (gammapy.maps.mapcoord attribute)": [[203, "gammapy.maps.MapCoord.phi", false]], "phi (gammapy.modeling.models.diskspatialmodel attribute)": [[231, "gammapy.modeling.models.DiskSpatialModel.phi", false]], "phi (gammapy.modeling.models.gaussianspatialmodel attribute)": [[240, "gammapy.modeling.models.GaussianSpatialModel.phi", false]], "phi (gammapy.modeling.models.generalizedgaussianspatialmodel attribute)": [[243, "gammapy.modeling.models.GeneralizedGaussianSpatialModel.phi", false]], "phi_0 (gammapy.modeling.models.constantfluxspatialmodel attribute)": [[226, "gammapy.modeling.models.ConstantFluxSpatialModel.phi_0", false]], "phi_0 (gammapy.modeling.models.constantspatialmodel attribute)": [[227, "gammapy.modeling.models.ConstantSpatialModel.phi_0", false]], "phi_0 (gammapy.modeling.models.diskspatialmodel attribute)": [[231, "gammapy.modeling.models.DiskSpatialModel.phi_0", false]], "phi_0 (gammapy.modeling.models.gaussianspatialmodel attribute)": [[240, "gammapy.modeling.models.GaussianSpatialModel.phi_0", false]], "phi_0 (gammapy.modeling.models.generalizedgaussianspatialmodel attribute)": [[243, "gammapy.modeling.models.GeneralizedGaussianSpatialModel.phi_0", false]], "phi_0 (gammapy.modeling.models.piecewisenormspatialmodel attribute)": [[256, "gammapy.modeling.models.PiecewiseNormSpatialModel.phi_0", false]], "phi_0 (gammapy.modeling.models.pointspatialmodel attribute)": [[258, "gammapy.modeling.models.PointSpatialModel.phi_0", false]], "phi_0 (gammapy.modeling.models.shell2spatialmodel attribute)": [[267, "gammapy.modeling.models.Shell2SpatialModel.phi_0", false]], "phi_0 (gammapy.modeling.models.shellspatialmodel attribute)": [[268, "gammapy.modeling.models.ShellSpatialModel.phi_0", false]], "phi_0 (gammapy.modeling.models.spatialmodel attribute)": [[272, "gammapy.modeling.models.SpatialModel.phi_0", false]], "phi_0 (gammapy.modeling.models.templatendspatialmodel attribute)": [[278, "gammapy.modeling.models.TemplateNDSpatialModel.phi_0", false]], "phi_0 (gammapy.modeling.models.templatespatialmodel attribute)": [[282, "gammapy.modeling.models.TemplateSpatialModel.phi_0", false]], "phi_ref (gammapy.modeling.models.templatephasecurvetemporalmodel attribute)": [[281, "gammapy.modeling.models.TemplatePhaseCurveTemporalModel.phi_ref", false]], "piecewisenormspatialmodel (class in gammapy.modeling.models)": [[256, "gammapy.modeling.models.PiecewiseNormSpatialModel", false]], "piecewisenormspectralmodel (class in gammapy.modeling.models)": [[257, "gammapy.modeling.models.PiecewiseNormSpectralModel", false]], "pivot_energy (gammapy.astro.darkmatter.darkmatterannihilationspectralmodel attribute)": [[19, "gammapy.astro.darkmatter.DarkMatterAnnihilationSpectralModel.pivot_energy", false]], "pivot_energy (gammapy.astro.darkmatter.darkmatterdecayspectralmodel attribute)": [[20, "gammapy.astro.darkmatter.DarkMatterDecaySpectralModel.pivot_energy", false]], "pivot_energy (gammapy.astro.darkmatter.primaryflux attribute)": [[26, "gammapy.astro.darkmatter.PrimaryFlux.pivot_energy", false]], "pivot_energy (gammapy.modeling.models.brokenpowerlawspectralmodel attribute)": [[224, "gammapy.modeling.models.BrokenPowerLawSpectralModel.pivot_energy", false]], "pivot_energy (gammapy.modeling.models.compoundspectralmodel attribute)": [[225, "gammapy.modeling.models.CompoundSpectralModel.pivot_energy", false]], "pivot_energy (gammapy.modeling.models.constantspectralmodel attribute)": [[228, "gammapy.modeling.models.ConstantSpectralModel.pivot_energy", false]], "pivot_energy (gammapy.modeling.models.eblabsorptionnormspectralmodel attribute)": [[232, "gammapy.modeling.models.EBLAbsorptionNormSpectralModel.pivot_energy", false]], "pivot_energy (gammapy.modeling.models.expcutoffpowerlaw3fglspectralmodel attribute)": [[234, "gammapy.modeling.models.ExpCutoffPowerLaw3FGLSpectralModel.pivot_energy", false]], "pivot_energy (gammapy.modeling.models.expcutoffpowerlawnormspectralmodel attribute)": [[235, "gammapy.modeling.models.ExpCutoffPowerLawNormSpectralModel.pivot_energy", false]], "pivot_energy (gammapy.modeling.models.expcutoffpowerlawspectralmodel attribute)": [[236, "gammapy.modeling.models.ExpCutoffPowerLawSpectralModel.pivot_energy", false]], "pivot_energy (gammapy.modeling.models.gaussianspectralmodel attribute)": [[241, "gammapy.modeling.models.GaussianSpectralModel.pivot_energy", false]], "pivot_energy (gammapy.modeling.models.logparabolanormspectralmodel attribute)": [[247, "gammapy.modeling.models.LogParabolaNormSpectralModel.pivot_energy", false]], "pivot_energy (gammapy.modeling.models.logparabolaspectralmodel attribute)": [[248, "gammapy.modeling.models.LogParabolaSpectralModel.pivot_energy", false]], "pivot_energy (gammapy.modeling.models.meyercrabspectralmodel attribute)": [[251, "gammapy.modeling.models.MeyerCrabSpectralModel.pivot_energy", false]], "pivot_energy (gammapy.modeling.models.naimaspectralmodel attribute)": [[255, "gammapy.modeling.models.NaimaSpectralModel.pivot_energy", false]], "pivot_energy (gammapy.modeling.models.piecewisenormspectralmodel attribute)": [[257, "gammapy.modeling.models.PiecewiseNormSpectralModel.pivot_energy", false]], "pivot_energy (gammapy.modeling.models.powerlaw2spectralmodel attribute)": [[259, "gammapy.modeling.models.PowerLaw2SpectralModel.pivot_energy", false]], "pivot_energy (gammapy.modeling.models.powerlawnormspectralmodel attribute)": [[260, "gammapy.modeling.models.PowerLawNormSpectralModel.pivot_energy", false]], "pivot_energy (gammapy.modeling.models.powerlawspectralmodel attribute)": [[261, "gammapy.modeling.models.PowerLawSpectralModel.pivot_energy", false]], "pivot_energy (gammapy.modeling.models.scalespectralmodel attribute)": [[266, "gammapy.modeling.models.ScaleSpectralModel.pivot_energy", false]], "pivot_energy (gammapy.modeling.models.smoothbrokenpowerlawspectralmodel attribute)": [[271, "gammapy.modeling.models.SmoothBrokenPowerLawSpectralModel.pivot_energy", false]], "pivot_energy (gammapy.modeling.models.spectralmodel attribute)": [[273, "gammapy.modeling.models.SpectralModel.pivot_energy", false]], "pivot_energy (gammapy.modeling.models.superexpcutoffpowerlaw3fglspectralmodel attribute)": [[274, "gammapy.modeling.models.SuperExpCutoffPowerLaw3FGLSpectralModel.pivot_energy", false]], "pivot_energy (gammapy.modeling.models.superexpcutoffpowerlaw4fgldr3spectralmodel attribute)": [[275, "gammapy.modeling.models.SuperExpCutoffPowerLaw4FGLDR3SpectralModel.pivot_energy", false]], "pivot_energy (gammapy.modeling.models.superexpcutoffpowerlaw4fglspectralmodel attribute)": [[276, "gammapy.modeling.models.SuperExpCutoffPowerLaw4FGLSpectralModel.pivot_energy", false]], "pivot_energy (gammapy.modeling.models.templatendspectralmodel attribute)": [[279, "gammapy.modeling.models.TemplateNDSpectralModel.pivot_energy", false]], "pivot_energy (gammapy.modeling.models.templatespectralmodel attribute)": [[283, "gammapy.modeling.models.TemplateSpectralModel.pivot_energy", false]], "pix_to_coord() (gammapy.maps.geom method)": [[195, "gammapy.maps.Geom.pix_to_coord", false]], "pix_to_coord() (gammapy.maps.hpxgeom method)": [[196, "gammapy.maps.HpxGeom.pix_to_coord", false]], "pix_to_coord() (gammapy.maps.labelmapaxis method)": [[199, "gammapy.maps.LabelMapAxis.pix_to_coord", false]], "pix_to_coord() (gammapy.maps.mapaxes method)": [[201, "gammapy.maps.MapAxes.pix_to_coord", false]], "pix_to_coord() (gammapy.maps.mapaxis method)": [[202, "gammapy.maps.MapAxis.pix_to_coord", false]], "pix_to_coord() (gammapy.maps.regiongeom method)": [[205, "gammapy.maps.RegionGeom.pix_to_coord", false]], "pix_to_coord() (gammapy.maps.timemapaxis method)": [[207, "gammapy.maps.TimeMapAxis.pix_to_coord", false]], "pix_to_coord() (gammapy.maps.wcsgeom method)": [[208, "gammapy.maps.WcsGeom.pix_to_coord", false]], "pix_to_idx() (gammapy.maps.geom method)": [[195, "gammapy.maps.Geom.pix_to_idx", false]], "pix_to_idx() (gammapy.maps.hpxgeom method)": [[196, "gammapy.maps.HpxGeom.pix_to_idx", false]], "pix_to_idx() (gammapy.maps.labelmapaxis method)": [[199, "gammapy.maps.LabelMapAxis.pix_to_idx", false]], "pix_to_idx() (gammapy.maps.mapaxes method)": [[201, "gammapy.maps.MapAxes.pix_to_idx", false]], "pix_to_idx() (gammapy.maps.mapaxis method)": [[202, "gammapy.maps.MapAxis.pix_to_idx", false]], "pix_to_idx() (gammapy.maps.regiongeom method)": [[205, "gammapy.maps.RegionGeom.pix_to_idx", false]], "pix_to_idx() (gammapy.maps.timemapaxis static method)": [[207, "gammapy.maps.TimeMapAxis.pix_to_idx", false]], "pix_to_idx() (gammapy.maps.wcsgeom method)": [[208, "gammapy.maps.WcsGeom.pix_to_idx", false]], "pixel_area (gammapy.maps.wcsgeom attribute)": [[208, "gammapy.maps.WcsGeom.pixel_area", false]], "pixel_scales (gammapy.maps.hpxgeom attribute)": [[196, "gammapy.maps.HpxGeom.pixel_scales", false]], "pixel_scales (gammapy.maps.wcsgeom attribute)": [[208, "gammapy.maps.WcsGeom.pixel_scales", false]], "plot() (gammapy.astro.darkmatter.darkmatterannihilationspectralmodel method)": [[19, "gammapy.astro.darkmatter.DarkMatterAnnihilationSpectralModel.plot", false]], "plot() (gammapy.astro.darkmatter.darkmatterdecayspectralmodel method)": [[20, "gammapy.astro.darkmatter.DarkMatterDecaySpectralModel.plot", false]], "plot() (gammapy.astro.darkmatter.primaryflux method)": [[26, "gammapy.astro.darkmatter.PrimaryFlux.plot", false]], "plot() (gammapy.estimators.fluxpoints method)": [[128, "gammapy.estimators.FluxPoints.plot", false]], "plot() (gammapy.estimators.imageprofile method)": [[131, "gammapy.estimators.ImageProfile.plot", false]], "plot() (gammapy.irf.background2d method)": [[151, "gammapy.irf.Background2D.plot", false]], "plot() (gammapy.irf.effectiveareatable2d method)": [[157, "gammapy.irf.EffectiveAreaTable2D.plot", false]], "plot() (gammapy.maps.hpxndmap method)": [[198, "gammapy.maps.HpxNDMap.plot", false]], "plot() (gammapy.maps.regionndmap method)": [[206, "gammapy.maps.RegionNDMap.plot", false]], "plot() (gammapy.maps.wcsndmap method)": [[210, "gammapy.maps.WcsNDMap.plot", false]], "plot() (gammapy.modeling.models.brokenpowerlawspectralmodel method)": [[224, "gammapy.modeling.models.BrokenPowerLawSpectralModel.plot", false]], "plot() (gammapy.modeling.models.compoundspectralmodel method)": [[225, "gammapy.modeling.models.CompoundSpectralModel.plot", false]], "plot() (gammapy.modeling.models.constantfluxspatialmodel method)": [[226, "gammapy.modeling.models.ConstantFluxSpatialModel.plot", false]], "plot() (gammapy.modeling.models.constantspatialmodel method)": [[227, "gammapy.modeling.models.ConstantSpatialModel.plot", false]], "plot() (gammapy.modeling.models.constantspectralmodel method)": [[228, "gammapy.modeling.models.ConstantSpectralModel.plot", false]], "plot() (gammapy.modeling.models.constanttemporalmodel method)": [[229, "gammapy.modeling.models.ConstantTemporalModel.plot", false]], "plot() (gammapy.modeling.models.diskspatialmodel method)": [[231, "gammapy.modeling.models.DiskSpatialModel.plot", false]], "plot() (gammapy.modeling.models.eblabsorptionnormspectralmodel method)": [[232, "gammapy.modeling.models.EBLAbsorptionNormSpectralModel.plot", false]], "plot() (gammapy.modeling.models.expcutoffpowerlaw3fglspectralmodel method)": [[234, "gammapy.modeling.models.ExpCutoffPowerLaw3FGLSpectralModel.plot", false]], "plot() (gammapy.modeling.models.expcutoffpowerlawnormspectralmodel method)": [[235, "gammapy.modeling.models.ExpCutoffPowerLawNormSpectralModel.plot", false]], "plot() (gammapy.modeling.models.expcutoffpowerlawspectralmodel method)": [[236, "gammapy.modeling.models.ExpCutoffPowerLawSpectralModel.plot", false]], "plot() (gammapy.modeling.models.expdecaytemporalmodel method)": [[237, "gammapy.modeling.models.ExpDecayTemporalModel.plot", false]], "plot() (gammapy.modeling.models.gaussianspatialmodel method)": [[240, "gammapy.modeling.models.GaussianSpatialModel.plot", false]], "plot() (gammapy.modeling.models.gaussianspectralmodel method)": [[241, "gammapy.modeling.models.GaussianSpectralModel.plot", false]], "plot() (gammapy.modeling.models.gaussiantemporalmodel method)": [[242, "gammapy.modeling.models.GaussianTemporalModel.plot", false]], "plot() (gammapy.modeling.models.generalizedgaussianspatialmodel method)": [[243, "gammapy.modeling.models.GeneralizedGaussianSpatialModel.plot", false]], "plot() (gammapy.modeling.models.generalizedgaussiantemporalmodel method)": [[244, "gammapy.modeling.models.GeneralizedGaussianTemporalModel.plot", false]], "plot() (gammapy.modeling.models.lightcurvetemplatetemporalmodel method)": [[245, "gammapy.modeling.models.LightCurveTemplateTemporalModel.plot", false]], "plot() (gammapy.modeling.models.lineartemporalmodel method)": [[246, "gammapy.modeling.models.LinearTemporalModel.plot", false]], "plot() (gammapy.modeling.models.logparabolanormspectralmodel method)": [[247, "gammapy.modeling.models.LogParabolaNormSpectralModel.plot", false]], "plot() (gammapy.modeling.models.logparabolaspectralmodel method)": [[248, "gammapy.modeling.models.LogParabolaSpectralModel.plot", false]], "plot() (gammapy.modeling.models.meyercrabspectralmodel method)": [[251, "gammapy.modeling.models.MeyerCrabSpectralModel.plot", false]], "plot() (gammapy.modeling.models.naimaspectralmodel method)": [[255, "gammapy.modeling.models.NaimaSpectralModel.plot", false]], "plot() (gammapy.modeling.models.piecewisenormspatialmodel method)": [[256, "gammapy.modeling.models.PiecewiseNormSpatialModel.plot", false]], "plot() (gammapy.modeling.models.piecewisenormspectralmodel method)": [[257, "gammapy.modeling.models.PiecewiseNormSpectralModel.plot", false]], "plot() (gammapy.modeling.models.pointspatialmodel method)": [[258, "gammapy.modeling.models.PointSpatialModel.plot", false]], "plot() (gammapy.modeling.models.powerlaw2spectralmodel method)": [[259, "gammapy.modeling.models.PowerLaw2SpectralModel.plot", false]], "plot() (gammapy.modeling.models.powerlawnormspectralmodel method)": [[260, "gammapy.modeling.models.PowerLawNormSpectralModel.plot", false]], "plot() (gammapy.modeling.models.powerlawspectralmodel method)": [[261, "gammapy.modeling.models.PowerLawSpectralModel.plot", false]], "plot() (gammapy.modeling.models.powerlawtemporalmodel method)": [[262, "gammapy.modeling.models.PowerLawTemporalModel.plot", false]], "plot() (gammapy.modeling.models.scalespectralmodel method)": [[266, "gammapy.modeling.models.ScaleSpectralModel.plot", false]], "plot() (gammapy.modeling.models.shell2spatialmodel method)": [[267, "gammapy.modeling.models.Shell2SpatialModel.plot", false]], "plot() (gammapy.modeling.models.shellspatialmodel method)": [[268, "gammapy.modeling.models.ShellSpatialModel.plot", false]], "plot() (gammapy.modeling.models.sinetemporalmodel method)": [[269, "gammapy.modeling.models.SineTemporalModel.plot", false]], "plot() (gammapy.modeling.models.smoothbrokenpowerlawspectralmodel method)": [[271, "gammapy.modeling.models.SmoothBrokenPowerLawSpectralModel.plot", false]], "plot() (gammapy.modeling.models.spatialmodel method)": [[272, "gammapy.modeling.models.SpatialModel.plot", false]], "plot() (gammapy.modeling.models.spectralmodel method)": [[273, "gammapy.modeling.models.SpectralModel.plot", false]], "plot() (gammapy.modeling.models.superexpcutoffpowerlaw3fglspectralmodel method)": [[274, "gammapy.modeling.models.SuperExpCutoffPowerLaw3FGLSpectralModel.plot", false]], "plot() (gammapy.modeling.models.superexpcutoffpowerlaw4fgldr3spectralmodel method)": [[275, "gammapy.modeling.models.SuperExpCutoffPowerLaw4FGLDR3SpectralModel.plot", false]], "plot() (gammapy.modeling.models.superexpcutoffpowerlaw4fglspectralmodel method)": [[276, "gammapy.modeling.models.SuperExpCutoffPowerLaw4FGLSpectralModel.plot", false]], "plot() (gammapy.modeling.models.templatendspatialmodel method)": [[278, "gammapy.modeling.models.TemplateNDSpatialModel.plot", false]], "plot() (gammapy.modeling.models.templatendspectralmodel method)": [[279, "gammapy.modeling.models.TemplateNDSpectralModel.plot", false]], "plot() (gammapy.modeling.models.templatephasecurvetemporalmodel method)": [[281, "gammapy.modeling.models.TemplatePhaseCurveTemporalModel.plot", false]], "plot() (gammapy.modeling.models.templatespatialmodel method)": [[282, "gammapy.modeling.models.TemplateSpatialModel.plot", false]], "plot() (gammapy.modeling.models.templatespectralmodel method)": [[283, "gammapy.modeling.models.TemplateSpectralModel.plot", false]], "plot() (gammapy.modeling.models.temporalmodel method)": [[284, "gammapy.modeling.models.TemporalModel.plot", false]], "plot() (gammapy.visualization.mappanelplotter method)": [[382, "gammapy.visualization.MapPanelPlotter.plot", false]], "plot_at_energy() (gammapy.irf.background2d method)": [[151, "gammapy.irf.Background2D.plot_at_energy", false]], "plot_at_energy() (gammapy.irf.background3d method)": [[152, "gammapy.irf.Background3D.plot_at_energy", false]], "plot_bias() (gammapy.irf.edispkernel method)": [[154, "gammapy.irf.EDispKernel.plot_bias", false]], "plot_bias() (gammapy.irf.energydispersion2d method)": [[159, "gammapy.irf.EnergyDispersion2D.plot_bias", false]], "plot_containment_radius() (gammapy.irf.energydependentmultigausspsf method)": [[158, "gammapy.irf.EnergyDependentMultiGaussPSF.plot_containment_radius", false]], "plot_containment_radius() (gammapy.irf.parametricpsf method)": [[168, "gammapy.irf.ParametricPSF.plot_containment_radius", false]], "plot_containment_radius() (gammapy.irf.psf3d method)": [[164, "gammapy.irf.PSF3D.plot_containment_radius", false]], "plot_containment_radius() (gammapy.irf.psfking method)": [[166, "gammapy.irf.PSFKing.plot_containment_radius", false]], "plot_containment_radius_vs_energy() (gammapy.irf.energydependentmultigausspsf method)": [[158, "gammapy.irf.EnergyDependentMultiGaussPSF.plot_containment_radius_vs_energy", false]], "plot_containment_radius_vs_energy() (gammapy.irf.parametricpsf method)": [[168, "gammapy.irf.ParametricPSF.plot_containment_radius_vs_energy", false]], "plot_containment_radius_vs_energy() (gammapy.irf.psf3d method)": [[164, "gammapy.irf.PSF3D.plot_containment_radius_vs_energy", false]], "plot_containment_radius_vs_energy() (gammapy.irf.psfking method)": [[166, "gammapy.irf.PSFKing.plot_containment_radius_vs_energy", false]], "plot_containment_radius_vs_energy() (gammapy.irf.psfmap method)": [[167, "gammapy.irf.PSFMap.plot_containment_radius_vs_energy", false]], "plot_containment_radius_vs_energy() (gammapy.irf.recopsfmap method)": [[170, "gammapy.irf.RecoPSFMap.plot_containment_radius_vs_energy", false]], "plot_contour_line() (in module gammapy.visualization)": [[387, "gammapy.visualization.plot_contour_line", false]], "plot_correlation() (gammapy.modeling.covariance method)": [[213, "gammapy.modeling.Covariance.plot_correlation", false]], "plot_counts() (gammapy.datasets.spectrumdataset method)": [[111, "gammapy.datasets.SpectrumDataset.plot_counts", false]], "plot_counts() (gammapy.datasets.spectrumdatasetonoff method)": [[112, "gammapy.datasets.SpectrumDatasetOnOff.plot_counts", false]], "plot_distribution() (in module gammapy.visualization)": [[388, "gammapy.visualization.plot_distribution", false]], "plot_energy() (gammapy.data.eventlist method)": [[83, "gammapy.data.EventList.plot_energy", false]], "plot_energy_dependence() (gammapy.irf.background2d method)": [[151, "gammapy.irf.Background2D.plot_energy_dependence", false]], "plot_energy_dependence() (gammapy.irf.effectiveareatable2d method)": [[157, "gammapy.irf.EffectiveAreaTable2D.plot_energy_dependence", false]], "plot_energy_offset() (gammapy.data.eventlist method)": [[83, "gammapy.data.EventList.plot_energy_offset", false]], "plot_err() (gammapy.estimators.imageprofile method)": [[131, "gammapy.estimators.ImageProfile.plot_err", false]], "plot_error() (gammapy.astro.darkmatter.darkmatterannihilationspectralmodel method)": [[19, "gammapy.astro.darkmatter.DarkMatterAnnihilationSpectralModel.plot_error", false]], "plot_error() (gammapy.astro.darkmatter.darkmatterdecayspectralmodel method)": [[20, "gammapy.astro.darkmatter.DarkMatterDecaySpectralModel.plot_error", false]], "plot_error() (gammapy.astro.darkmatter.primaryflux method)": [[26, "gammapy.astro.darkmatter.PrimaryFlux.plot_error", false]], "plot_error() (gammapy.modeling.models.brokenpowerlawspectralmodel method)": [[224, "gammapy.modeling.models.BrokenPowerLawSpectralModel.plot_error", false]], "plot_error() (gammapy.modeling.models.compoundspectralmodel method)": [[225, "gammapy.modeling.models.CompoundSpectralModel.plot_error", false]], "plot_error() (gammapy.modeling.models.constantfluxspatialmodel method)": [[226, "gammapy.modeling.models.ConstantFluxSpatialModel.plot_error", false]], "plot_error() (gammapy.modeling.models.constantspatialmodel method)": [[227, "gammapy.modeling.models.ConstantSpatialModel.plot_error", false]], "plot_error() (gammapy.modeling.models.constantspectralmodel method)": [[228, "gammapy.modeling.models.ConstantSpectralModel.plot_error", false]], "plot_error() (gammapy.modeling.models.diskspatialmodel method)": [[231, "gammapy.modeling.models.DiskSpatialModel.plot_error", false]], "plot_error() (gammapy.modeling.models.eblabsorptionnormspectralmodel method)": [[232, "gammapy.modeling.models.EBLAbsorptionNormSpectralModel.plot_error", false]], "plot_error() (gammapy.modeling.models.expcutoffpowerlaw3fglspectralmodel method)": [[234, "gammapy.modeling.models.ExpCutoffPowerLaw3FGLSpectralModel.plot_error", false]], "plot_error() (gammapy.modeling.models.expcutoffpowerlawnormspectralmodel method)": [[235, "gammapy.modeling.models.ExpCutoffPowerLawNormSpectralModel.plot_error", false]], "plot_error() (gammapy.modeling.models.expcutoffpowerlawspectralmodel method)": [[236, "gammapy.modeling.models.ExpCutoffPowerLawSpectralModel.plot_error", false]], "plot_error() (gammapy.modeling.models.gaussianspatialmodel method)": [[240, "gammapy.modeling.models.GaussianSpatialModel.plot_error", false]], "plot_error() (gammapy.modeling.models.gaussianspectralmodel method)": [[241, "gammapy.modeling.models.GaussianSpectralModel.plot_error", false]], "plot_error() (gammapy.modeling.models.generalizedgaussianspatialmodel method)": [[243, "gammapy.modeling.models.GeneralizedGaussianSpatialModel.plot_error", false]], "plot_error() (gammapy.modeling.models.logparabolanormspectralmodel method)": [[247, "gammapy.modeling.models.LogParabolaNormSpectralModel.plot_error", false]], "plot_error() (gammapy.modeling.models.logparabolaspectralmodel method)": [[248, "gammapy.modeling.models.LogParabolaSpectralModel.plot_error", false]], "plot_error() (gammapy.modeling.models.meyercrabspectralmodel method)": [[251, "gammapy.modeling.models.MeyerCrabSpectralModel.plot_error", false]], "plot_error() (gammapy.modeling.models.naimaspectralmodel method)": [[255, "gammapy.modeling.models.NaimaSpectralModel.plot_error", false]], "plot_error() (gammapy.modeling.models.piecewisenormspatialmodel method)": [[256, "gammapy.modeling.models.PiecewiseNormSpatialModel.plot_error", false]], "plot_error() (gammapy.modeling.models.piecewisenormspectralmodel method)": [[257, "gammapy.modeling.models.PiecewiseNormSpectralModel.plot_error", false]], "plot_error() (gammapy.modeling.models.pointspatialmodel method)": [[258, "gammapy.modeling.models.PointSpatialModel.plot_error", false]], "plot_error() (gammapy.modeling.models.powerlaw2spectralmodel method)": [[259, "gammapy.modeling.models.PowerLaw2SpectralModel.plot_error", false]], "plot_error() (gammapy.modeling.models.powerlawnormspectralmodel method)": [[260, "gammapy.modeling.models.PowerLawNormSpectralModel.plot_error", false]], "plot_error() (gammapy.modeling.models.powerlawspectralmodel method)": [[261, "gammapy.modeling.models.PowerLawSpectralModel.plot_error", false]], "plot_error() (gammapy.modeling.models.scalespectralmodel method)": [[266, "gammapy.modeling.models.ScaleSpectralModel.plot_error", false]], "plot_error() (gammapy.modeling.models.shell2spatialmodel method)": [[267, "gammapy.modeling.models.Shell2SpatialModel.plot_error", false]], "plot_error() (gammapy.modeling.models.shellspatialmodel method)": [[268, "gammapy.modeling.models.ShellSpatialModel.plot_error", false]], "plot_error() (gammapy.modeling.models.smoothbrokenpowerlawspectralmodel method)": [[271, "gammapy.modeling.models.SmoothBrokenPowerLawSpectralModel.plot_error", false]], "plot_error() (gammapy.modeling.models.spatialmodel method)": [[272, "gammapy.modeling.models.SpatialModel.plot_error", false]], "plot_error() (gammapy.modeling.models.spectralmodel method)": [[273, "gammapy.modeling.models.SpectralModel.plot_error", false]], "plot_error() (gammapy.modeling.models.superexpcutoffpowerlaw3fglspectralmodel method)": [[274, "gammapy.modeling.models.SuperExpCutoffPowerLaw3FGLSpectralModel.plot_error", false]], "plot_error() (gammapy.modeling.models.superexpcutoffpowerlaw4fgldr3spectralmodel method)": [[275, "gammapy.modeling.models.SuperExpCutoffPowerLaw4FGLDR3SpectralModel.plot_error", false]], "plot_error() (gammapy.modeling.models.superexpcutoffpowerlaw4fglspectralmodel method)": [[276, "gammapy.modeling.models.SuperExpCutoffPowerLaw4FGLSpectralModel.plot_error", false]], "plot_error() (gammapy.modeling.models.templatendspatialmodel method)": [[278, "gammapy.modeling.models.TemplateNDSpatialModel.plot_error", false]], "plot_error() (gammapy.modeling.models.templatendspectralmodel method)": [[279, "gammapy.modeling.models.TemplateNDSpectralModel.plot_error", false]], "plot_error() (gammapy.modeling.models.templatespatialmodel method)": [[282, "gammapy.modeling.models.TemplateSpatialModel.plot_error", false]], "plot_error() (gammapy.modeling.models.templatespectralmodel method)": [[283, "gammapy.modeling.models.TemplateSpectralModel.plot_error", false]], "plot_excess() (gammapy.datasets.spectrumdataset method)": [[111, "gammapy.datasets.SpectrumDataset.plot_excess", false]], "plot_excess() (gammapy.datasets.spectrumdatasetonoff method)": [[112, "gammapy.datasets.SpectrumDatasetOnOff.plot_excess", false]], "plot_fit() (gammapy.datasets.fluxpointsdataset method)": [[103, "gammapy.datasets.FluxPointsDataset.plot_fit", false]], "plot_fit() (gammapy.datasets.spectrumdataset method)": [[111, "gammapy.datasets.SpectrumDataset.plot_fit", false]], "plot_fit() (gammapy.datasets.spectrumdatasetonoff method)": [[112, "gammapy.datasets.SpectrumDatasetOnOff.plot_fit", false]], "plot_grid() (gammapy.maps.hpxmap method)": [[197, "gammapy.maps.HpxMap.plot_grid", false]], "plot_grid() (gammapy.maps.hpxndmap method)": [[198, "gammapy.maps.HpxNDMap.plot_grid", false]], "plot_grid() (gammapy.maps.map method)": [[200, "gammapy.maps.Map.plot_grid", false]], "plot_grid() (gammapy.maps.regionndmap method)": [[206, "gammapy.maps.RegionNDMap.plot_grid", false]], "plot_grid() (gammapy.maps.wcsmap method)": [[209, "gammapy.maps.WcsMap.plot_grid", false]], "plot_grid() (gammapy.maps.wcsndmap method)": [[210, "gammapy.maps.WcsNDMap.plot_grid", false]], "plot_grid() (gammapy.modeling.models.constantfluxspatialmodel method)": [[226, "gammapy.modeling.models.ConstantFluxSpatialModel.plot_grid", false]], "plot_grid() (gammapy.modeling.models.constantspatialmodel method)": [[227, "gammapy.modeling.models.ConstantSpatialModel.plot_grid", false]], "plot_grid() (gammapy.modeling.models.diskspatialmodel method)": [[231, "gammapy.modeling.models.DiskSpatialModel.plot_grid", false]], "plot_grid() (gammapy.modeling.models.gaussianspatialmodel method)": [[240, "gammapy.modeling.models.GaussianSpatialModel.plot_grid", false]], "plot_grid() (gammapy.modeling.models.generalizedgaussianspatialmodel method)": [[243, "gammapy.modeling.models.GeneralizedGaussianSpatialModel.plot_grid", false]], "plot_grid() (gammapy.modeling.models.piecewisenormspatialmodel method)": [[256, "gammapy.modeling.models.PiecewiseNormSpatialModel.plot_grid", false]], "plot_grid() (gammapy.modeling.models.pointspatialmodel method)": [[258, "gammapy.modeling.models.PointSpatialModel.plot_grid", false]], "plot_grid() (gammapy.modeling.models.shell2spatialmodel method)": [[267, "gammapy.modeling.models.Shell2SpatialModel.plot_grid", false]], "plot_grid() (gammapy.modeling.models.shellspatialmodel method)": [[268, "gammapy.modeling.models.ShellSpatialModel.plot_grid", false]], "plot_grid() (gammapy.modeling.models.spatialmodel method)": [[272, "gammapy.modeling.models.SpatialModel.plot_grid", false]], "plot_grid() (gammapy.modeling.models.templatendspatialmodel method)": [[278, "gammapy.modeling.models.TemplateNDSpatialModel.plot_grid", false]], "plot_grid() (gammapy.modeling.models.templatespatialmodel method)": [[282, "gammapy.modeling.models.TemplateSpatialModel.plot_grid", false]], "plot_heatmap() (in module gammapy.visualization)": [[389, "gammapy.visualization.plot_heatmap", false]], "plot_hist() (gammapy.maps.regionndmap method)": [[206, "gammapy.maps.RegionNDMap.plot_hist", false]], "plot_image() (gammapy.data.eventlist method)": [[83, "gammapy.data.EventList.plot_image", false]], "plot_interactive() (gammapy.maps.hpxmap method)": [[197, "gammapy.maps.HpxMap.plot_interactive", false]], "plot_interactive() (gammapy.maps.hpxndmap method)": [[198, "gammapy.maps.HpxNDMap.plot_interactive", false]], "plot_interactive() (gammapy.maps.map method)": [[200, "gammapy.maps.Map.plot_interactive", false]], "plot_interactive() (gammapy.maps.regionndmap method)": [[206, "gammapy.maps.RegionNDMap.plot_interactive", false]], "plot_interactive() (gammapy.maps.wcsmap method)": [[209, "gammapy.maps.WcsMap.plot_interactive", false]], "plot_interactive() (gammapy.maps.wcsndmap method)": [[210, "gammapy.maps.WcsNDMap.plot_interactive", false]], "plot_interactive() (gammapy.modeling.models.constantfluxspatialmodel method)": [[226, "gammapy.modeling.models.ConstantFluxSpatialModel.plot_interactive", false]], "plot_interactive() (gammapy.modeling.models.constantspatialmodel method)": [[227, "gammapy.modeling.models.ConstantSpatialModel.plot_interactive", false]], "plot_interactive() (gammapy.modeling.models.diskspatialmodel method)": [[231, "gammapy.modeling.models.DiskSpatialModel.plot_interactive", false]], "plot_interactive() (gammapy.modeling.models.gaussianspatialmodel method)": [[240, "gammapy.modeling.models.GaussianSpatialModel.plot_interactive", false]], "plot_interactive() (gammapy.modeling.models.generalizedgaussianspatialmodel method)": [[243, "gammapy.modeling.models.GeneralizedGaussianSpatialModel.plot_interactive", false]], "plot_interactive() (gammapy.modeling.models.piecewisenormspatialmodel method)": [[256, "gammapy.modeling.models.PiecewiseNormSpatialModel.plot_interactive", false]], "plot_interactive() (gammapy.modeling.models.pointspatialmodel method)": [[258, "gammapy.modeling.models.PointSpatialModel.plot_interactive", false]], "plot_interactive() (gammapy.modeling.models.shell2spatialmodel method)": [[267, "gammapy.modeling.models.Shell2SpatialModel.plot_interactive", false]], "plot_interactive() (gammapy.modeling.models.shellspatialmodel method)": [[268, "gammapy.modeling.models.ShellSpatialModel.plot_interactive", false]], "plot_interactive() (gammapy.modeling.models.spatialmodel method)": [[272, "gammapy.modeling.models.SpatialModel.plot_interactive", false]], "plot_interactive() (gammapy.modeling.models.templatendspatialmodel method)": [[278, "gammapy.modeling.models.TemplateNDSpatialModel.plot_interactive", false]], "plot_interactive() (gammapy.modeling.models.templatespatialmodel method)": [[282, "gammapy.modeling.models.TemplateSpatialModel.plot_interactive", false]], "plot_kernel() (gammapy.irf.psfkernel method)": [[165, "gammapy.irf.PSFKernel.plot_kernel", false]], "plot_map_rgb() (in module gammapy.visualization)": [[390, "gammapy.visualization.plot_map_rgb", false]], "plot_mask() (gammapy.maps.hpxndmap method)": [[198, "gammapy.maps.HpxNDMap.plot_mask", false]], "plot_mask() (gammapy.maps.regionndmap method)": [[206, "gammapy.maps.RegionNDMap.plot_mask", false]], "plot_mask() (gammapy.maps.wcsndmap method)": [[210, "gammapy.maps.WcsNDMap.plot_mask", false]], "plot_masks() (gammapy.datasets.spectrumdataset method)": [[111, "gammapy.datasets.SpectrumDataset.plot_masks", false]], "plot_masks() (gammapy.datasets.spectrumdatasetonoff method)": [[112, "gammapy.datasets.SpectrumDatasetOnOff.plot_masks", false]], "plot_matrix() (gammapy.irf.edispkernel method)": [[154, "gammapy.irf.EDispKernel.plot_matrix", false]], "plot_migration() (gammapy.irf.energydispersion2d method)": [[159, "gammapy.irf.EnergyDispersion2D.plot_migration", false]], "plot_npred_signal() (in module gammapy.visualization)": [[391, "gammapy.visualization.plot_npred_signal", false]], "plot_offset2_distribution() (gammapy.data.eventlist method)": [[83, "gammapy.data.EventList.plot_offset2_distribution", false]], "plot_offset_dependence() (gammapy.irf.background2d method)": [[151, "gammapy.irf.Background2D.plot_offset_dependence", false]], "plot_offset_dependence() (gammapy.irf.effectiveareatable2d method)": [[157, "gammapy.irf.EffectiveAreaTable2D.plot_offset_dependence", false]], "plot_panel() (gammapy.visualization.mappanelplotter method)": [[382, "gammapy.visualization.MapPanelPlotter.plot_panel", false]], "plot_phasogram() (gammapy.modeling.models.templatephasecurvetemporalmodel method)": [[281, "gammapy.modeling.models.TemplatePhaseCurveTemporalModel.plot_phasogram", false]], "plot_position_error() (gammapy.modeling.models.constantfluxspatialmodel method)": [[226, "gammapy.modeling.models.ConstantFluxSpatialModel.plot_position_error", false]], "plot_position_error() (gammapy.modeling.models.constantspatialmodel method)": [[227, "gammapy.modeling.models.ConstantSpatialModel.plot_position_error", false]], "plot_position_error() (gammapy.modeling.models.diskspatialmodel method)": [[231, "gammapy.modeling.models.DiskSpatialModel.plot_position_error", false]], "plot_position_error() (gammapy.modeling.models.gaussianspatialmodel method)": [[240, "gammapy.modeling.models.GaussianSpatialModel.plot_position_error", false]], "plot_position_error() (gammapy.modeling.models.generalizedgaussianspatialmodel method)": [[243, "gammapy.modeling.models.GeneralizedGaussianSpatialModel.plot_position_error", false]], "plot_position_error() (gammapy.modeling.models.piecewisenormspatialmodel method)": [[256, "gammapy.modeling.models.PiecewiseNormSpatialModel.plot_position_error", false]], "plot_position_error() (gammapy.modeling.models.pointspatialmodel method)": [[258, "gammapy.modeling.models.PointSpatialModel.plot_position_error", false]], "plot_position_error() (gammapy.modeling.models.shell2spatialmodel method)": [[267, "gammapy.modeling.models.Shell2SpatialModel.plot_position_error", false]], "plot_position_error() (gammapy.modeling.models.shellspatialmodel method)": [[268, "gammapy.modeling.models.ShellSpatialModel.plot_position_error", false]], "plot_position_error() (gammapy.modeling.models.spatialmodel method)": [[272, "gammapy.modeling.models.SpatialModel.plot_position_error", false]], "plot_position_error() (gammapy.modeling.models.templatendspatialmodel method)": [[278, "gammapy.modeling.models.TemplateNDSpatialModel.plot_position_error", false]], "plot_position_error() (gammapy.modeling.models.templatespatialmodel method)": [[282, "gammapy.modeling.models.TemplateSpatialModel.plot_position_error", false]], "plot_positions() (gammapy.modeling.models.datasetmodels method)": [[230, "gammapy.modeling.models.DatasetModels.plot_positions", false]], "plot_positions() (gammapy.modeling.models.models method)": [[254, "gammapy.modeling.models.Models.plot_positions", false]], "plot_psf_vs_rad() (gammapy.irf.energydependentmultigausspsf method)": [[158, "gammapy.irf.EnergyDependentMultiGaussPSF.plot_psf_vs_rad", false]], "plot_psf_vs_rad() (gammapy.irf.parametricpsf method)": [[168, "gammapy.irf.ParametricPSF.plot_psf_vs_rad", false]], "plot_psf_vs_rad() (gammapy.irf.psf3d method)": [[164, "gammapy.irf.PSF3D.plot_psf_vs_rad", false]], "plot_psf_vs_rad() (gammapy.irf.psfking method)": [[166, "gammapy.irf.PSFKing.plot_psf_vs_rad", false]], "plot_psf_vs_rad() (gammapy.irf.psfmap method)": [[167, "gammapy.irf.PSFMap.plot_psf_vs_rad", false]], "plot_psf_vs_rad() (gammapy.irf.recopsfmap method)": [[170, "gammapy.irf.RecoPSFMap.plot_psf_vs_rad", false]], "plot_rad_max_vs_energy() (gammapy.irf.radmax2d method)": [[169, "gammapy.irf.RadMax2D.plot_rad_max_vs_energy", false]], "plot_region() (gammapy.maps.regiongeom method)": [[205, "gammapy.maps.RegionGeom.plot_region", false]], "plot_region() (gammapy.maps.regionndmap method)": [[206, "gammapy.maps.RegionNDMap.plot_region", false]], "plot_regions() (gammapy.modeling.models.datasetmodels method)": [[230, "gammapy.modeling.models.DatasetModels.plot_regions", false]], "plot_regions() (gammapy.modeling.models.models method)": [[254, "gammapy.modeling.models.Models.plot_regions", false]], "plot_residuals() (gammapy.datasets.fluxpointsdataset method)": [[103, "gammapy.datasets.FluxPointsDataset.plot_residuals", false]], "plot_residuals() (gammapy.datasets.mapdataset method)": [[104, "gammapy.datasets.MapDataset.plot_residuals", false]], "plot_residuals() (gammapy.datasets.mapdatasetonoff method)": [[107, "gammapy.datasets.MapDatasetOnOff.plot_residuals", false]], "plot_residuals() (gammapy.datasets.spectrumdataset method)": [[111, "gammapy.datasets.SpectrumDataset.plot_residuals", false]], "plot_residuals() (gammapy.datasets.spectrumdatasetonoff method)": [[112, "gammapy.datasets.SpectrumDatasetOnOff.plot_residuals", false]], "plot_residuals_spatial() (gammapy.datasets.mapdataset method)": [[104, "gammapy.datasets.MapDataset.plot_residuals_spatial", false]], "plot_residuals_spatial() (gammapy.datasets.mapdatasetonoff method)": [[107, "gammapy.datasets.MapDatasetOnOff.plot_residuals_spatial", false]], "plot_residuals_spatial() (gammapy.datasets.spectrumdataset method)": [[111, "gammapy.datasets.SpectrumDataset.plot_residuals_spatial", false]], "plot_residuals_spatial() (gammapy.datasets.spectrumdatasetonoff method)": [[112, "gammapy.datasets.SpectrumDatasetOnOff.plot_residuals_spatial", false]], "plot_residuals_spectral() (gammapy.datasets.mapdataset method)": [[104, "gammapy.datasets.MapDataset.plot_residuals_spectral", false]], "plot_residuals_spectral() (gammapy.datasets.mapdatasetonoff method)": [[107, "gammapy.datasets.MapDatasetOnOff.plot_residuals_spectral", false]], "plot_residuals_spectral() (gammapy.datasets.spectrumdataset method)": [[111, "gammapy.datasets.SpectrumDataset.plot_residuals_spectral", false]], "plot_residuals_spectral() (gammapy.datasets.spectrumdatasetonoff method)": [[112, "gammapy.datasets.SpectrumDatasetOnOff.plot_residuals_spectral", false]], "plot_spectrum() (gammapy.datasets.fluxpointsdataset method)": [[103, "gammapy.datasets.FluxPointsDataset.plot_spectrum", false]], "plot_spectrum() (gammapy.irf.background2d method)": [[151, "gammapy.irf.Background2D.plot_spectrum", false]], "plot_spectrum_datasets_off_regions() (in module gammapy.visualization)": [[392, "gammapy.visualization.plot_spectrum_datasets_off_regions", false]], "plot_theta_squared_table() (in module gammapy.visualization)": [[393, "gammapy.visualization.plot_theta_squared_table", false]], "plot_time() (gammapy.data.eventlist method)": [[83, "gammapy.data.EventList.plot_time", false]], "plot_ts_profiles() (gammapy.estimators.fluxpoints method)": [[128, "gammapy.estimators.FluxPoints.plot_ts_profiles", false]], "pointing (gammapy.data.observation attribute)": [[89, "gammapy.data.Observation.pointing", false]], "pointing (gammapy.data.pointingmode attribute)": [[96, "gammapy.data.PointingMode.POINTING", false]], "pointing_galactic (gammapy.data.observationtable attribute)": [[92, "gammapy.data.ObservationTable.pointing_galactic", false]], "pointing_radec (gammapy.data.eventlist attribute)": [[83, "gammapy.data.EventList.pointing_radec", false]], "pointing_radec (gammapy.data.observationtable attribute)": [[92, "gammapy.data.ObservationTable.pointing_radec", false]], "pointinginfo (class in gammapy.data)": [[95, "gammapy.data.PointingInfo", false]], "pointingmode (class in gammapy.data)": [[96, "gammapy.data.PointingMode", false]], "pointspatialmodel (class in gammapy.modeling.models)": [[258, "gammapy.modeling.models.PointSpatialModel", false]], "polar() (in module gammapy.utils.coordinates)": [[326, "gammapy.utils.coordinates.polar", false]], "pool_kwargs_default (in module gammapy.utils.parallel)": [[340, "gammapy.utils.parallel.POOL_KWARGS_DEFAULT", false]], "pop() (gammapy.data.observations method)": [[93, "gammapy.data.Observations.pop", false]], "pop() (gammapy.datasets.datasets method)": [[101, "gammapy.datasets.Datasets.pop", false]], "pop() (gammapy.maps.maps method)": [[204, "gammapy.maps.Maps.pop", false]], "pop() (gammapy.modeling.models.models method)": [[254, "gammapy.modeling.models.Models.pop", false]], "popitem() (gammapy.maps.maps method)": [[204, "gammapy.maps.Maps.popitem", false]], "position (gammapy.catalog.sourcecatalogobject attribute)": [[69, "gammapy.catalog.SourceCatalogObject.position", false]], "position (gammapy.catalog.sourcecatalogobject1lhaaso attribute)": [[70, "gammapy.catalog.SourceCatalogObject1LHAASO.position", false]], "position (gammapy.catalog.sourcecatalogobject2fhl attribute)": [[71, "gammapy.catalog.SourceCatalogObject2FHL.position", false]], "position (gammapy.catalog.sourcecatalogobject2hwc attribute)": [[72, "gammapy.catalog.SourceCatalogObject2HWC.position", false]], "position (gammapy.catalog.sourcecatalogobject2pc attribute)": [[73, "gammapy.catalog.SourceCatalogObject2PC.position", false]], "position (gammapy.catalog.sourcecatalogobject3fgl attribute)": [[74, "gammapy.catalog.SourceCatalogObject3FGL.position", false]], "position (gammapy.catalog.sourcecatalogobject3fhl attribute)": [[75, "gammapy.catalog.SourceCatalogObject3FHL.position", false]], "position (gammapy.catalog.sourcecatalogobject3hwc attribute)": [[76, "gammapy.catalog.SourceCatalogObject3HWC.position", false]], "position (gammapy.catalog.sourcecatalogobject3pc attribute)": [[77, "gammapy.catalog.SourceCatalogObject3PC.position", false]], "position (gammapy.catalog.sourcecatalogobject4fgl attribute)": [[78, "gammapy.catalog.SourceCatalogObject4FGL.position", false]], "position (gammapy.catalog.sourcecatalogobjectgammacat attribute)": [[79, "gammapy.catalog.SourceCatalogObjectGammaCat.position", false]], "position (gammapy.catalog.sourcecatalogobjecthgps attribute)": [[80, "gammapy.catalog.SourceCatalogObjectHGPS.position", false]], "position (gammapy.catalog.sourcecatalogobjecthgpscomponent attribute)": [[81, "gammapy.catalog.SourceCatalogObjectHGPSComponent.position", false]], "position (gammapy.modeling.models.constantfluxspatialmodel attribute)": [[226, "gammapy.modeling.models.ConstantFluxSpatialModel.position", false]], "position (gammapy.modeling.models.constantspatialmodel attribute)": [[227, "gammapy.modeling.models.ConstantSpatialModel.position", false]], "position (gammapy.modeling.models.diskspatialmodel attribute)": [[231, "gammapy.modeling.models.DiskSpatialModel.position", false]], "position (gammapy.modeling.models.gaussianspatialmodel attribute)": [[240, "gammapy.modeling.models.GaussianSpatialModel.position", false]], "position (gammapy.modeling.models.generalizedgaussianspatialmodel attribute)": [[243, "gammapy.modeling.models.GeneralizedGaussianSpatialModel.position", false]], "position (gammapy.modeling.models.piecewisenormspatialmodel attribute)": [[256, "gammapy.modeling.models.PiecewiseNormSpatialModel.position", false]], "position (gammapy.modeling.models.pointspatialmodel attribute)": [[258, "gammapy.modeling.models.PointSpatialModel.position", false]], "position (gammapy.modeling.models.shell2spatialmodel attribute)": [[267, "gammapy.modeling.models.Shell2SpatialModel.position", false]], "position (gammapy.modeling.models.shellspatialmodel attribute)": [[268, "gammapy.modeling.models.ShellSpatialModel.position", false]], "position (gammapy.modeling.models.skymodel attribute)": [[270, "gammapy.modeling.models.SkyModel.position", false]], "position (gammapy.modeling.models.spatialmodel attribute)": [[272, "gammapy.modeling.models.SpatialModel.position", false]], "position (gammapy.modeling.models.templatendspatialmodel attribute)": [[278, "gammapy.modeling.models.TemplateNDSpatialModel.position", false]], "position (gammapy.modeling.models.templatenpredmodel attribute)": [[280, "gammapy.modeling.models.TemplateNPredModel.position", false]], "position (gammapy.modeling.models.templatespatialmodel attribute)": [[282, "gammapy.modeling.models.TemplateSpatialModel.position", false]], "position_error (gammapy.modeling.models.constantfluxspatialmodel attribute)": [[226, "gammapy.modeling.models.ConstantFluxSpatialModel.position_error", false]], "position_error (gammapy.modeling.models.constantspatialmodel attribute)": [[227, "gammapy.modeling.models.ConstantSpatialModel.position_error", false]], "position_error (gammapy.modeling.models.diskspatialmodel attribute)": [[231, "gammapy.modeling.models.DiskSpatialModel.position_error", false]], "position_error (gammapy.modeling.models.gaussianspatialmodel attribute)": [[240, "gammapy.modeling.models.GaussianSpatialModel.position_error", false]], "position_error (gammapy.modeling.models.generalizedgaussianspatialmodel attribute)": [[243, "gammapy.modeling.models.GeneralizedGaussianSpatialModel.position_error", false]], "position_error (gammapy.modeling.models.piecewisenormspatialmodel attribute)": [[256, "gammapy.modeling.models.PiecewiseNormSpatialModel.position_error", false]], "position_error (gammapy.modeling.models.pointspatialmodel attribute)": [[258, "gammapy.modeling.models.PointSpatialModel.position_error", false]], "position_error (gammapy.modeling.models.shell2spatialmodel attribute)": [[267, "gammapy.modeling.models.Shell2SpatialModel.position_error", false]], "position_error (gammapy.modeling.models.shellspatialmodel attribute)": [[268, "gammapy.modeling.models.ShellSpatialModel.position_error", false]], "position_error (gammapy.modeling.models.spatialmodel attribute)": [[272, "gammapy.modeling.models.SpatialModel.position_error", false]], "position_error (gammapy.modeling.models.templatendspatialmodel attribute)": [[278, "gammapy.modeling.models.TemplateNDSpatialModel.position_error", false]], "position_error (gammapy.modeling.models.templatespatialmodel attribute)": [[282, "gammapy.modeling.models.TemplateSpatialModel.position_error", false]], "position_lonlat (gammapy.modeling.models.constantfluxspatialmodel attribute)": [[226, "gammapy.modeling.models.ConstantFluxSpatialModel.position_lonlat", false]], "position_lonlat (gammapy.modeling.models.constantspatialmodel attribute)": [[227, "gammapy.modeling.models.ConstantSpatialModel.position_lonlat", false]], "position_lonlat (gammapy.modeling.models.diskspatialmodel attribute)": [[231, "gammapy.modeling.models.DiskSpatialModel.position_lonlat", false]], "position_lonlat (gammapy.modeling.models.gaussianspatialmodel attribute)": [[240, "gammapy.modeling.models.GaussianSpatialModel.position_lonlat", false]], "position_lonlat (gammapy.modeling.models.generalizedgaussianspatialmodel attribute)": [[243, "gammapy.modeling.models.GeneralizedGaussianSpatialModel.position_lonlat", false]], "position_lonlat (gammapy.modeling.models.piecewisenormspatialmodel attribute)": [[256, "gammapy.modeling.models.PiecewiseNormSpatialModel.position_lonlat", false]], "position_lonlat (gammapy.modeling.models.pointspatialmodel attribute)": [[258, "gammapy.modeling.models.PointSpatialModel.position_lonlat", false]], "position_lonlat (gammapy.modeling.models.shell2spatialmodel attribute)": [[267, "gammapy.modeling.models.Shell2SpatialModel.position_lonlat", false]], "position_lonlat (gammapy.modeling.models.shellspatialmodel attribute)": [[268, "gammapy.modeling.models.ShellSpatialModel.position_lonlat", false]], "position_lonlat (gammapy.modeling.models.skymodel attribute)": [[270, "gammapy.modeling.models.SkyModel.position_lonlat", false]], "position_lonlat (gammapy.modeling.models.spatialmodel attribute)": [[272, "gammapy.modeling.models.SpatialModel.position_lonlat", false]], "position_lonlat (gammapy.modeling.models.templatendspatialmodel attribute)": [[278, "gammapy.modeling.models.TemplateNDSpatialModel.position_lonlat", false]], "position_lonlat (gammapy.modeling.models.templatespatialmodel attribute)": [[282, "gammapy.modeling.models.TemplateSpatialModel.position_lonlat", false]], "positions (gammapy.catalog.sourcecatalog attribute)": [[56, "gammapy.catalog.SourceCatalog.positions", false]], "positions (gammapy.catalog.sourcecatalog1lhaaso attribute)": [[57, "gammapy.catalog.SourceCatalog1LHAASO.positions", false]], "positions (gammapy.catalog.sourcecatalog2fhl attribute)": [[58, "gammapy.catalog.SourceCatalog2FHL.positions", false]], "positions (gammapy.catalog.sourcecatalog2hwc attribute)": [[59, "gammapy.catalog.SourceCatalog2HWC.positions", false]], "positions (gammapy.catalog.sourcecatalog2pc attribute)": [[60, "gammapy.catalog.SourceCatalog2PC.positions", false]], "positions (gammapy.catalog.sourcecatalog3fgl attribute)": [[61, "gammapy.catalog.SourceCatalog3FGL.positions", false]], "positions (gammapy.catalog.sourcecatalog3fhl attribute)": [[62, "gammapy.catalog.SourceCatalog3FHL.positions", false]], "positions (gammapy.catalog.sourcecatalog3hwc attribute)": [[63, "gammapy.catalog.SourceCatalog3HWC.positions", false]], "positions (gammapy.catalog.sourcecatalog3pc attribute)": [[64, "gammapy.catalog.SourceCatalog3PC.positions", false]], "positions (gammapy.catalog.sourcecatalog4fgl attribute)": [[65, "gammapy.catalog.SourceCatalog4FGL.positions", false]], "positions (gammapy.catalog.sourcecataloggammacat attribute)": [[66, "gammapy.catalog.SourceCatalogGammaCat.positions", false]], "positions (gammapy.catalog.sourcecataloghgps attribute)": [[67, "gammapy.catalog.SourceCatalogHGPS.positions", false]], "positions (gammapy.modeling.models.datasetmodels attribute)": [[230, "gammapy.modeling.models.DatasetModels.positions", false]], "positions (gammapy.modeling.models.models attribute)": [[254, "gammapy.modeling.models.Models.positions", false]], "powerlaw2spectralmodel (class in gammapy.modeling.models)": [[259, "gammapy.modeling.models.PowerLaw2SpectralModel", false]], "powerlawnormspectralmodel (class in gammapy.modeling.models)": [[260, "gammapy.modeling.models.PowerLawNormSpectralModel", false]], "powerlawspectralmodel (class in gammapy.modeling.models)": [[261, "gammapy.modeling.models.PowerLawSpectralModel", false]], "powerlawtemporalmodel (class in gammapy.modeling.models)": [[262, "gammapy.modeling.models.PowerLawTemporalModel", false]], "pprint() (gammapy.data.hduindextable method)": [[88, "gammapy.data.HDUIndexTable.pprint", false]], "pprint() (gammapy.data.observationtable method)": [[92, "gammapy.data.ObservationTable.pprint", false]], "pprint_all() (gammapy.data.hduindextable method)": [[88, "gammapy.data.HDUIndexTable.pprint_all", false]], "pprint_all() (gammapy.data.observationtable method)": [[92, "gammapy.data.ObservationTable.pprint_all", false]], "pprint_exclude_names (gammapy.data.hduindextable attribute)": [[88, "gammapy.data.HDUIndexTable.pprint_exclude_names", false]], "pprint_exclude_names (gammapy.data.observationtable attribute)": [[92, "gammapy.data.ObservationTable.pprint_exclude_names", false]], "pprint_include_names (gammapy.data.hduindextable attribute)": [[88, "gammapy.data.HDUIndexTable.pprint_include_names", false]], "pprint_include_names (gammapy.data.observationtable attribute)": [[92, "gammapy.data.ObservationTable.pprint_include_names", false]], "prepare_inputs() (gammapy.astro.population.casebattacharya1998 method)": [[28, "gammapy.astro.population.CaseBattacharya1998.prepare_inputs", false]], "prepare_inputs() (gammapy.astro.population.exponential method)": [[29, "gammapy.astro.population.Exponential.prepare_inputs", false]], "prepare_inputs() (gammapy.astro.population.faucherkaspi2006 method)": [[30, "gammapy.astro.population.FaucherKaspi2006.prepare_inputs", false]], "prepare_inputs() (gammapy.astro.population.faucherkaspi2006velocitybimodal method)": [[31, "gammapy.astro.population.FaucherKaspi2006VelocityBimodal.prepare_inputs", false]], "prepare_inputs() (gammapy.astro.population.faucherkaspi2006velocitymaxwellian method)": [[32, "gammapy.astro.population.FaucherKaspi2006VelocityMaxwellian.prepare_inputs", false]], "prepare_inputs() (gammapy.astro.population.lorimer2006 method)": [[35, "gammapy.astro.population.Lorimer2006.prepare_inputs", false]], "prepare_inputs() (gammapy.astro.population.paczynski1990 method)": [[36, "gammapy.astro.population.Paczynski1990.prepare_inputs", false]], "prepare_inputs() (gammapy.astro.population.paczynski1990velocity method)": [[37, "gammapy.astro.population.Paczynski1990Velocity.prepare_inputs", false]], "prepare_inputs() (gammapy.astro.population.yusifovkucuk2004 method)": [[39, "gammapy.astro.population.YusifovKucuk2004.prepare_inputs", false]], "prepare_inputs() (gammapy.astro.population.yusifovkucuk2004b method)": [[40, "gammapy.astro.population.YusifovKucuk2004B.prepare_inputs", false]], "prepare_outputs() (gammapy.astro.population.casebattacharya1998 method)": [[28, "gammapy.astro.population.CaseBattacharya1998.prepare_outputs", false]], "prepare_outputs() (gammapy.astro.population.exponential method)": [[29, "gammapy.astro.population.Exponential.prepare_outputs", false]], "prepare_outputs() (gammapy.astro.population.faucherkaspi2006 method)": [[30, "gammapy.astro.population.FaucherKaspi2006.prepare_outputs", false]], "prepare_outputs() (gammapy.astro.population.faucherkaspi2006velocitybimodal method)": [[31, "gammapy.astro.population.FaucherKaspi2006VelocityBimodal.prepare_outputs", false]], "prepare_outputs() (gammapy.astro.population.faucherkaspi2006velocitymaxwellian method)": [[32, "gammapy.astro.population.FaucherKaspi2006VelocityMaxwellian.prepare_outputs", false]], "prepare_outputs() (gammapy.astro.population.lorimer2006 method)": [[35, "gammapy.astro.population.Lorimer2006.prepare_outputs", false]], "prepare_outputs() (gammapy.astro.population.paczynski1990 method)": [[36, "gammapy.astro.population.Paczynski1990.prepare_outputs", false]], "prepare_outputs() (gammapy.astro.population.paczynski1990velocity method)": [[37, "gammapy.astro.population.Paczynski1990Velocity.prepare_outputs", false]], "prepare_outputs() (gammapy.astro.population.yusifovkucuk2004 method)": [[39, "gammapy.astro.population.YusifovKucuk2004.prepare_outputs", false]], "prepare_outputs() (gammapy.astro.population.yusifovkucuk2004b method)": [[40, "gammapy.astro.population.YusifovKucuk2004B.prepare_outputs", false]], "primary_axis (gammapy.maps.mapaxes attribute)": [[201, "gammapy.maps.MapAxes.primary_axis", false]], "primaryflux (class in gammapy.astro.darkmatter)": [[26, "gammapy.astro.darkmatter.PrimaryFlux", false]], "prior (class in gammapy.modeling.models)": [[263, "gammapy.modeling.models.Prior", false]], "prior (gammapy.modeling.parameter attribute)": [[218, "gammapy.modeling.Parameter.prior", false]], "prior (gammapy.modeling.parameters attribute)": [[219, "gammapy.modeling.Parameters.prior", false]], "prior (gammapy.modeling.priorparameter attribute)": [[220, "gammapy.modeling.PriorParameter.prior", false]], "prior (gammapy.modeling.priorparameters attribute)": [[221, "gammapy.modeling.PriorParameters.prior", false]], "prior_stat_sum() (gammapy.modeling.parameter method)": [[218, "gammapy.modeling.Parameter.prior_stat_sum", false]], "prior_stat_sum() (gammapy.modeling.parameters method)": [[219, "gammapy.modeling.Parameters.prior_stat_sum", false]], "prior_stat_sum() (gammapy.modeling.priorparameter method)": [[220, "gammapy.modeling.PriorParameter.prior_stat_sum", false]], "prior_stat_sum() (gammapy.modeling.priorparameters method)": [[221, "gammapy.modeling.PriorParameters.prior_stat_sum", false]], "priorparameter (class in gammapy.modeling)": [[220, "gammapy.modeling.PriorParameter", false]], "priorparameters (class in gammapy.modeling)": [[221, "gammapy.modeling.PriorParameters", false]], "profile (gammapy.estimators.imageprofile attribute)": [[131, "gammapy.estimators.ImageProfile.profile", false]], "profile_err (gammapy.estimators.imageprofile attribute)": [[131, "gammapy.estimators.ImageProfile.profile_err", false]], "projected_distance_axis (gammapy.estimators.fluxprofileestimator attribute)": [[130, "gammapy.estimators.FluxProfileEstimator.projected_distance_axis", false]], "projection (gammapy.maps.hpxgeom attribute)": [[196, "gammapy.maps.HpxGeom.projection", false]], "projection (gammapy.maps.regiongeom attribute)": [[205, "gammapy.maps.RegionGeom.projection", false]], "projection (gammapy.maps.wcsgeom attribute)": [[208, "gammapy.maps.WcsGeom.projection", false]], "proper_motion (gammapy.utils.coordinates.fovaltazframe attribute)": [[320, "gammapy.utils.coordinates.FoVAltAzFrame.proper_motion", false]], "proper_motion (gammapy.utils.coordinates.fovicrsframe attribute)": [[321, "gammapy.utils.coordinates.FoVICRSFrame.proper_motion", false]], "psf": [[608, "term-PSF", true]], "psf (gammapy.data.observation attribute)": [[89, "gammapy.data.Observation.psf", false]], "psf (gammapy.datasets.mapdataset attribute)": [[104, "gammapy.datasets.MapDataset.psf", false]], "psf (gammapy.datasets.mapdatasetonoff attribute)": [[107, "gammapy.datasets.MapDatasetOnOff.psf", false]], "psf (gammapy.datasets.spectrumdataset attribute)": [[111, "gammapy.datasets.SpectrumDataset.psf", false]], "psf (gammapy.datasets.spectrumdatasetonoff attribute)": [[112, "gammapy.datasets.SpectrumDatasetOnOff.psf", false]], "psf3d (class in gammapy.irf)": [[164, "gammapy.irf.PSF3D", false]], "psf_kernel_map (gammapy.irf.psfkernel attribute)": [[165, "gammapy.irf.PSFKernel.psf_kernel_map", false]], "psf_map (gammapy.irf.psfmap attribute)": [[167, "gammapy.irf.PSFMap.psf_map", false]], "psf_map (gammapy.irf.recopsfmap attribute)": [[170, "gammapy.irf.RecoPSFMap.psf_map", false]], "psfkernel (class in gammapy.irf)": [[165, "gammapy.irf.PSFKernel", false]], "psfking (class in gammapy.irf)": [[166, "gammapy.irf.PSFKing", false]], "psfmap (class in gammapy.irf)": [[167, "gammapy.irf.PSFMap", false]], "pulsar (class in gammapy.astro.source)": [[51, "gammapy.astro.source.Pulsar", false]], "pulse_profile_best_fit (gammapy.catalog.sourcecatalogobject3pc attribute)": [[77, "gammapy.catalog.SourceCatalogObject3PC.pulse_profile_best_fit", false]], "pulse_profile_radio (gammapy.catalog.sourcecatalogobject3pc attribute)": [[77, "gammapy.catalog.SourceCatalogObject3PC.pulse_profile_radio", false]], "pulse_profiles (gammapy.catalog.sourcecatalogobject3pc attribute)": [[77, "gammapy.catalog.SourceCatalogObject3PC.pulse_profiles", false]], "pwn (class in gammapy.astro.source)": [[50, "gammapy.astro.source.PWN", false]], "quantity (gammapy.irf.background2d attribute)": [[151, "gammapy.irf.Background2D.quantity", false]], "quantity (gammapy.irf.background3d attribute)": [[152, "gammapy.irf.Background3D.quantity", false]], "quantity (gammapy.irf.backgroundirf attribute)": [[153, "gammapy.irf.BackgroundIRF.quantity", false]], "quantity (gammapy.irf.edispkernel attribute)": [[154, "gammapy.irf.EDispKernel.quantity", false]], "quantity (gammapy.irf.effectiveareatable2d attribute)": [[157, "gammapy.irf.EffectiveAreaTable2D.quantity", false]], "quantity (gammapy.irf.energydependentmultigausspsf attribute)": [[158, "gammapy.irf.EnergyDependentMultiGaussPSF.quantity", false]], "quantity (gammapy.irf.energydispersion2d attribute)": [[159, "gammapy.irf.EnergyDispersion2D.quantity", false]], "quantity (gammapy.irf.irf attribute)": [[161, "gammapy.irf.IRF.quantity", false]], "quantity (gammapy.irf.parametricpsf attribute)": [[168, "gammapy.irf.ParametricPSF.quantity", false]], "quantity (gammapy.irf.psf3d attribute)": [[164, "gammapy.irf.PSF3D.quantity", false]], "quantity (gammapy.irf.psfking attribute)": [[166, "gammapy.irf.PSFKing.quantity", false]], "quantity (gammapy.irf.radmax2d attribute)": [[169, "gammapy.irf.RadMax2D.quantity", false]], "quantity (gammapy.maps.hpxmap attribute)": [[197, "gammapy.maps.HpxMap.quantity", false]], "quantity (gammapy.maps.hpxndmap attribute)": [[198, "gammapy.maps.HpxNDMap.quantity", false]], "quantity (gammapy.maps.map attribute)": [[200, "gammapy.maps.Map.quantity", false]], "quantity (gammapy.maps.regionndmap attribute)": [[206, "gammapy.maps.RegionNDMap.quantity", false]], "quantity (gammapy.maps.wcsmap attribute)": [[209, "gammapy.maps.WcsMap.quantity", false]], "quantity (gammapy.maps.wcsndmap attribute)": [[210, "gammapy.maps.WcsNDMap.quantity", false]], "quantity (gammapy.modeling.parameter attribute)": [[218, "gammapy.modeling.Parameter.quantity", false]], "quantity (gammapy.modeling.priorparameter attribute)": [[220, "gammapy.modeling.PriorParameter.quantity", false]], "r_0 (gammapy.astro.population.faucherkaspi2006 attribute)": [[30, "gammapy.astro.population.FaucherKaspi2006.r_0", false]], "r_0 (gammapy.astro.population.faucherspiral attribute)": [[33, "gammapy.astro.population.FaucherSpiral.r_0", false]], "r_0 (gammapy.astro.population.valleespiral attribute)": [[38, "gammapy.astro.population.ValleeSpiral.r_0", false]], "r_0 (gammapy.modeling.models.diskspatialmodel attribute)": [[231, "gammapy.modeling.models.DiskSpatialModel.r_0", false]], "r_0 (gammapy.modeling.models.generalizedgaussianspatialmodel attribute)": [[243, "gammapy.modeling.models.GeneralizedGaussianSpatialModel.r_0", false]], "r_0 (gammapy.modeling.models.shell2spatialmodel attribute)": [[267, "gammapy.modeling.models.Shell2SpatialModel.r_0", false]], "r_1 (gammapy.astro.population.yusifovkucuk2004 attribute)": [[39, "gammapy.astro.population.YusifovKucuk2004.r_1", false]], "r_exp (gammapy.astro.population.paczynski1990 attribute)": [[36, "gammapy.astro.population.Paczynski1990.r_exp", false]], "r_in (gammapy.modeling.models.shell2spatialmodel attribute)": [[267, "gammapy.modeling.models.Shell2SpatialModel.r_in", false]], "r_sun (gammapy.astro.population.valleespiral attribute)": [[38, "gammapy.astro.population.ValleeSpiral.r_sun", false]], "rad_max (gammapy.data.observation attribute)": [[89, "gammapy.data.Observation.rad_max", false]], "radec (gammapy.data.eventlist attribute)": [[83, "gammapy.data.EventList.radec", false]], "radec (gammapy.data.pointinginfo attribute)": [[95, "gammapy.data.PointingInfo.radec", false]], "radec (gammapy.irf.fovalignment attribute)": [[160, "gammapy.irf.FoVAlignment.RADEC", false]], "radial_distributions (in module gammapy.astro.population)": [[48, "gammapy.astro.population.radial_distributions", false]], "radial_velocity (gammapy.utils.coordinates.fovaltazframe attribute)": [[320, "gammapy.utils.coordinates.FoVAltAzFrame.radial_velocity", false]], "radial_velocity (gammapy.utils.coordinates.fovicrsframe attribute)": [[321, "gammapy.utils.coordinates.FoVICRSFrame.radial_velocity", false]], "radius (gammapy.modeling.models.shellspatialmodel attribute)": [[268, "gammapy.modeling.models.ShellSpatialModel.radius", false]], "radius() (gammapy.astro.population.faucherspiral method)": [[33, "gammapy.astro.population.FaucherSpiral.radius", false]], "radius() (gammapy.astro.population.logspiral method)": [[34, "gammapy.astro.population.LogSpiral.radius", false]], "radius() (gammapy.astro.population.valleespiral method)": [[38, "gammapy.astro.population.ValleeSpiral.radius", false]], "radius() (gammapy.astro.source.pwn method)": [[50, "gammapy.astro.source.PWN.radius", false]], "radius() (gammapy.astro.source.snr method)": [[52, "gammapy.astro.source.SNR.radius", false]], "radius() (gammapy.astro.source.snrtruelovemckee method)": [[53, "gammapy.astro.source.SNRTrueloveMcKee.radius", false]], "radius_inner() (gammapy.astro.source.snr method)": [[52, "gammapy.astro.source.SNR.radius_inner", false]], "radius_inner() (gammapy.astro.source.snrtruelovemckee method)": [[53, "gammapy.astro.source.SNRTrueloveMcKee.radius_inner", false]], "radius_reverse_shock() (gammapy.astro.source.snrtruelovemckee method)": [[53, "gammapy.astro.source.SNRTrueloveMcKee.radius_reverse_shock", false]], "radmax2d (class in gammapy.irf)": [[169, "gammapy.irf.RadMax2D", false]], "ravel() (gammapy.utils.coordinates.fovaltazframe method)": [[320, "gammapy.utils.coordinates.FoVAltAzFrame.ravel", false]], "ravel() (gammapy.utils.coordinates.fovicrsframe method)": [[321, "gammapy.utils.coordinates.FoVICRSFrame.ravel", false]], "read() (gammapy.analysis.analysisconfig class method)": [[16, "gammapy.analysis.AnalysisConfig.read", false]], "read() (gammapy.data.eventlist class method)": [[83, "gammapy.data.EventList.read", false]], "read() (gammapy.data.fixedpointinginfo class method)": [[85, "gammapy.data.FixedPointingInfo.read", false]], "read() (gammapy.data.gti class method)": [[86, "gammapy.data.GTI.read", false]], "read() (gammapy.data.hduindextable class method)": [[88, "gammapy.data.HDUIndexTable.read", false]], "read() (gammapy.data.observation class method)": [[89, "gammapy.data.Observation.read", false]], "read() (gammapy.data.observationtable class method)": [[92, "gammapy.data.ObservationTable.read", false]], "read() (gammapy.data.pointinginfo class method)": [[95, "gammapy.data.PointingInfo.read", false]], "read() (gammapy.datasets.datasets class method)": [[101, "gammapy.datasets.Datasets.read", false]], "read() (gammapy.datasets.fermipydatasetsreader method)": [[102, "gammapy.datasets.FermipyDatasetsReader.read", false]], "read() (gammapy.datasets.fluxpointsdataset class method)": [[103, "gammapy.datasets.FluxPointsDataset.read", false]], "read() (gammapy.datasets.mapdataset class method)": [[104, "gammapy.datasets.MapDataset.read", false]], "read() (gammapy.datasets.mapdatasetonoff class method)": [[107, "gammapy.datasets.MapDatasetOnOff.read", false]], "read() (gammapy.datasets.ogipdatasetreader method)": [[108, "gammapy.datasets.OGIPDatasetReader.read", false]], "read() (gammapy.datasets.spectrumdataset class method)": [[111, "gammapy.datasets.SpectrumDataset.read", false]], "read() (gammapy.datasets.spectrumdatasetonoff class method)": [[112, "gammapy.datasets.SpectrumDatasetOnOff.read", false]], "read() (gammapy.estimators.fluxmaps class method)": [[126, "gammapy.estimators.FluxMaps.read", false]], "read() (gammapy.estimators.fluxpoints class method)": [[128, "gammapy.estimators.FluxPoints.read", false]], "read() (gammapy.irf.background2d class method)": [[151, "gammapy.irf.Background2D.read", false]], "read() (gammapy.irf.background3d class method)": [[152, "gammapy.irf.Background3D.read", false]], "read() (gammapy.irf.backgroundirf class method)": [[153, "gammapy.irf.BackgroundIRF.read", false]], "read() (gammapy.irf.edispkernel class method)": [[154, "gammapy.irf.EDispKernel.read", false]], "read() (gammapy.irf.edispkernelmap class method)": [[155, "gammapy.irf.EDispKernelMap.read", false]], "read() (gammapy.irf.edispmap class method)": [[156, "gammapy.irf.EDispMap.read", false]], "read() (gammapy.irf.effectiveareatable2d class method)": [[157, "gammapy.irf.EffectiveAreaTable2D.read", false]], "read() (gammapy.irf.energydependentmultigausspsf class method)": [[158, "gammapy.irf.EnergyDependentMultiGaussPSF.read", false]], "read() (gammapy.irf.energydispersion2d class method)": [[159, "gammapy.irf.EnergyDispersion2D.read", false]], "read() (gammapy.irf.irf class method)": [[161, "gammapy.irf.IRF.read", false]], "read() (gammapy.irf.irfmap class method)": [[162, "gammapy.irf.IRFMap.read", false]], "read() (gammapy.irf.parametricpsf class method)": [[168, "gammapy.irf.ParametricPSF.read", false]], "read() (gammapy.irf.psf3d class method)": [[164, "gammapy.irf.PSF3D.read", false]], "read() (gammapy.irf.psfkernel class method)": [[165, "gammapy.irf.PSFKernel.read", false]], "read() (gammapy.irf.psfking class method)": [[166, "gammapy.irf.PSFKing.read", false]], "read() (gammapy.irf.psfmap class method)": [[167, "gammapy.irf.PSFMap.read", false]], "read() (gammapy.irf.radmax2d class method)": [[169, "gammapy.irf.RadMax2D.read", false]], "read() (gammapy.irf.recopsfmap class method)": [[170, "gammapy.irf.RecoPSFMap.read", false]], "read() (gammapy.maps.hpxmap static method)": [[197, "gammapy.maps.HpxMap.read", false]], "read() (gammapy.maps.hpxndmap static method)": [[198, "gammapy.maps.HpxNDMap.read", false]], "read() (gammapy.maps.map static method)": [[200, "gammapy.maps.Map.read", false]], "read() (gammapy.maps.maps class method)": [[204, "gammapy.maps.Maps.read", false]], "read() (gammapy.maps.regionndmap class method)": [[206, "gammapy.maps.RegionNDMap.read", false]], "read() (gammapy.maps.wcsmap static method)": [[209, "gammapy.maps.WcsMap.read", false]], "read() (gammapy.maps.wcsndmap static method)": [[210, "gammapy.maps.WcsNDMap.read", false]], "read() (gammapy.modeling.models.datasetmodels class method)": [[230, "gammapy.modeling.models.DatasetModels.read", false]], "read() (gammapy.modeling.models.eblabsorptionnormspectralmodel class method)": [[232, "gammapy.modeling.models.EBLAbsorptionNormSpectralModel.read", false]], "read() (gammapy.modeling.models.lightcurvetemplatetemporalmodel class method)": [[245, "gammapy.modeling.models.LightCurveTemplateTemporalModel.read", false]], "read() (gammapy.modeling.models.models class method)": [[254, "gammapy.modeling.models.Models.read", false]], "read() (gammapy.modeling.models.templatephasecurvetemporalmodel class method)": [[281, "gammapy.modeling.models.TemplatePhaseCurveTemporalModel.read", false]], "read() (gammapy.modeling.models.templatespatialmodel class method)": [[282, "gammapy.modeling.models.TemplateSpatialModel.read", false]], "read_arf() (gammapy.datasets.ogipdatasetreader static method)": [[108, "gammapy.datasets.OGIPDatasetReader.read_arf", false]], "read_bkg() (gammapy.datasets.ogipdatasetreader static method)": [[108, "gammapy.datasets.OGIPDatasetReader.read_bkg", false]], "read_builtin() (gammapy.modeling.models.eblabsorptionnormspectralmodel class method)": [[232, "gammapy.modeling.models.EBLAbsorptionNormSpectralModel.read_builtin", false]], "read_covariance() (gammapy.modeling.models.datasetmodels method)": [[230, "gammapy.modeling.models.DatasetModels.read_covariance", false]], "read_covariance() (gammapy.modeling.models.models method)": [[254, "gammapy.modeling.models.Models.read_covariance", false]], "read_datasets() (gammapy.analysis.analysis method)": [[15, "gammapy.analysis.Analysis.read_datasets", false]], "read_hermes_cube() (in module gammapy.modeling.models)": [[290, "gammapy.modeling.models.read_hermes_cube", false]], "read_hermes_cube() (in module gammapy.modeling.models.utils)": [[292, "gammapy.modeling.models.utils.read_hermes_cube", false]], "read_models() (gammapy.analysis.analysis method)": [[15, "gammapy.analysis.Analysis.read_models", false]], "read_pha() (gammapy.datasets.ogipdatasetreader static method)": [[108, "gammapy.datasets.OGIPDatasetReader.read_pha", false]], "read_rmf() (gammapy.datasets.ogipdatasetreader static method)": [[108, "gammapy.datasets.OGIPDatasetReader.read_rmf", false]], "read_xspec_model() (gammapy.modeling.models.templatespectralmodel class method)": [[283, "gammapy.modeling.models.TemplateSpectralModel.read_xspec_model", false]], "read_yaml() (in module gammapy.utils.scripts)": [[360, "gammapy.utils.scripts.read_yaml", false]], "realize_frame() (gammapy.utils.coordinates.fovaltazframe method)": [[320, "gammapy.utils.coordinates.FoVAltAzFrame.realize_frame", false]], "realize_frame() (gammapy.utils.coordinates.fovicrsframe method)": [[321, "gammapy.utils.coordinates.FoVICRSFrame.realize_frame", false]], "reassign() (gammapy.astro.darkmatter.darkmatterannihilationspectralmodel method)": [[19, "gammapy.astro.darkmatter.DarkMatterAnnihilationSpectralModel.reassign", false]], "reassign() (gammapy.astro.darkmatter.darkmatterdecayspectralmodel method)": [[20, "gammapy.astro.darkmatter.DarkMatterDecaySpectralModel.reassign", false]], "reassign() (gammapy.astro.darkmatter.primaryflux method)": [[26, "gammapy.astro.darkmatter.PrimaryFlux.reassign", false]], "reassign() (gammapy.modeling.models.brokenpowerlawspectralmodel method)": [[224, "gammapy.modeling.models.BrokenPowerLawSpectralModel.reassign", false]], "reassign() (gammapy.modeling.models.compoundspectralmodel method)": [[225, "gammapy.modeling.models.CompoundSpectralModel.reassign", false]], "reassign() (gammapy.modeling.models.constantfluxspatialmodel method)": [[226, "gammapy.modeling.models.ConstantFluxSpatialModel.reassign", false]], "reassign() (gammapy.modeling.models.constantspatialmodel method)": [[227, "gammapy.modeling.models.ConstantSpatialModel.reassign", false]], "reassign() (gammapy.modeling.models.constantspectralmodel method)": [[228, "gammapy.modeling.models.ConstantSpectralModel.reassign", false]], "reassign() (gammapy.modeling.models.constanttemporalmodel method)": [[229, "gammapy.modeling.models.ConstantTemporalModel.reassign", false]], "reassign() (gammapy.modeling.models.datasetmodels method)": [[230, "gammapy.modeling.models.DatasetModels.reassign", false]], "reassign() (gammapy.modeling.models.diskspatialmodel method)": [[231, "gammapy.modeling.models.DiskSpatialModel.reassign", false]], "reassign() (gammapy.modeling.models.eblabsorptionnormspectralmodel method)": [[232, "gammapy.modeling.models.EBLAbsorptionNormSpectralModel.reassign", false]], "reassign() (gammapy.modeling.models.expcutoffpowerlaw3fglspectralmodel method)": [[234, "gammapy.modeling.models.ExpCutoffPowerLaw3FGLSpectralModel.reassign", false]], "reassign() (gammapy.modeling.models.expcutoffpowerlawnormspectralmodel method)": [[235, "gammapy.modeling.models.ExpCutoffPowerLawNormSpectralModel.reassign", false]], "reassign() (gammapy.modeling.models.expcutoffpowerlawspectralmodel method)": [[236, "gammapy.modeling.models.ExpCutoffPowerLawSpectralModel.reassign", false]], "reassign() (gammapy.modeling.models.expdecaytemporalmodel method)": [[237, "gammapy.modeling.models.ExpDecayTemporalModel.reassign", false]], "reassign() (gammapy.modeling.models.fovbackgroundmodel method)": [[238, "gammapy.modeling.models.FoVBackgroundModel.reassign", false]], "reassign() (gammapy.modeling.models.gaussianprior method)": [[239, "gammapy.modeling.models.GaussianPrior.reassign", false]], "reassign() (gammapy.modeling.models.gaussianspatialmodel method)": [[240, "gammapy.modeling.models.GaussianSpatialModel.reassign", false]], "reassign() (gammapy.modeling.models.gaussianspectralmodel method)": [[241, "gammapy.modeling.models.GaussianSpectralModel.reassign", false]], "reassign() (gammapy.modeling.models.gaussiantemporalmodel method)": [[242, "gammapy.modeling.models.GaussianTemporalModel.reassign", false]], "reassign() (gammapy.modeling.models.generalizedgaussianspatialmodel method)": [[243, "gammapy.modeling.models.GeneralizedGaussianSpatialModel.reassign", false]], "reassign() (gammapy.modeling.models.generalizedgaussiantemporalmodel method)": [[244, "gammapy.modeling.models.GeneralizedGaussianTemporalModel.reassign", false]], "reassign() (gammapy.modeling.models.lightcurvetemplatetemporalmodel method)": [[245, "gammapy.modeling.models.LightCurveTemplateTemporalModel.reassign", false]], "reassign() (gammapy.modeling.models.lineartemporalmodel method)": [[246, "gammapy.modeling.models.LinearTemporalModel.reassign", false]], "reassign() (gammapy.modeling.models.logparabolanormspectralmodel method)": [[247, "gammapy.modeling.models.LogParabolaNormSpectralModel.reassign", false]], "reassign() (gammapy.modeling.models.logparabolaspectralmodel method)": [[248, "gammapy.modeling.models.LogParabolaSpectralModel.reassign", false]], "reassign() (gammapy.modeling.models.loguniformprior method)": [[249, "gammapy.modeling.models.LogUniformPrior.reassign", false]], "reassign() (gammapy.modeling.models.meyercrabspectralmodel method)": [[251, "gammapy.modeling.models.MeyerCrabSpectralModel.reassign", false]], "reassign() (gammapy.modeling.models.modelbase method)": [[253, "gammapy.modeling.models.ModelBase.reassign", false]], "reassign() (gammapy.modeling.models.models method)": [[254, "gammapy.modeling.models.Models.reassign", false]], "reassign() (gammapy.modeling.models.naimaspectralmodel method)": [[255, "gammapy.modeling.models.NaimaSpectralModel.reassign", false]], "reassign() (gammapy.modeling.models.piecewisenormspatialmodel method)": [[256, "gammapy.modeling.models.PiecewiseNormSpatialModel.reassign", false]], "reassign() (gammapy.modeling.models.piecewisenormspectralmodel method)": [[257, "gammapy.modeling.models.PiecewiseNormSpectralModel.reassign", false]], "reassign() (gammapy.modeling.models.pointspatialmodel method)": [[258, "gammapy.modeling.models.PointSpatialModel.reassign", false]], "reassign() (gammapy.modeling.models.powerlaw2spectralmodel method)": [[259, "gammapy.modeling.models.PowerLaw2SpectralModel.reassign", false]], "reassign() (gammapy.modeling.models.powerlawnormspectralmodel method)": [[260, "gammapy.modeling.models.PowerLawNormSpectralModel.reassign", false]], "reassign() (gammapy.modeling.models.powerlawspectralmodel method)": [[261, "gammapy.modeling.models.PowerLawSpectralModel.reassign", false]], "reassign() (gammapy.modeling.models.powerlawtemporalmodel method)": [[262, "gammapy.modeling.models.PowerLawTemporalModel.reassign", false]], "reassign() (gammapy.modeling.models.prior method)": [[263, "gammapy.modeling.models.Prior.reassign", false]], "reassign() (gammapy.modeling.models.scalespectralmodel method)": [[266, "gammapy.modeling.models.ScaleSpectralModel.reassign", false]], "reassign() (gammapy.modeling.models.shell2spatialmodel method)": [[267, "gammapy.modeling.models.Shell2SpatialModel.reassign", false]], "reassign() (gammapy.modeling.models.shellspatialmodel method)": [[268, "gammapy.modeling.models.ShellSpatialModel.reassign", false]], "reassign() (gammapy.modeling.models.sinetemporalmodel method)": [[269, "gammapy.modeling.models.SineTemporalModel.reassign", false]], "reassign() (gammapy.modeling.models.skymodel method)": [[270, "gammapy.modeling.models.SkyModel.reassign", false]], "reassign() (gammapy.modeling.models.smoothbrokenpowerlawspectralmodel method)": [[271, "gammapy.modeling.models.SmoothBrokenPowerLawSpectralModel.reassign", false]], "reassign() (gammapy.modeling.models.spatialmodel method)": [[272, "gammapy.modeling.models.SpatialModel.reassign", false]], "reassign() (gammapy.modeling.models.spectralmodel method)": [[273, "gammapy.modeling.models.SpectralModel.reassign", false]], "reassign() (gammapy.modeling.models.superexpcutoffpowerlaw3fglspectralmodel method)": [[274, "gammapy.modeling.models.SuperExpCutoffPowerLaw3FGLSpectralModel.reassign", false]], "reassign() (gammapy.modeling.models.superexpcutoffpowerlaw4fgldr3spectralmodel method)": [[275, "gammapy.modeling.models.SuperExpCutoffPowerLaw4FGLDR3SpectralModel.reassign", false]], "reassign() (gammapy.modeling.models.superexpcutoffpowerlaw4fglspectralmodel method)": [[276, "gammapy.modeling.models.SuperExpCutoffPowerLaw4FGLSpectralModel.reassign", false]], "reassign() (gammapy.modeling.models.templatendspatialmodel method)": [[278, "gammapy.modeling.models.TemplateNDSpatialModel.reassign", false]], "reassign() (gammapy.modeling.models.templatendspectralmodel method)": [[279, "gammapy.modeling.models.TemplateNDSpectralModel.reassign", false]], "reassign() (gammapy.modeling.models.templatenpredmodel method)": [[280, "gammapy.modeling.models.TemplateNPredModel.reassign", false]], "reassign() (gammapy.modeling.models.templatephasecurvetemporalmodel method)": [[281, "gammapy.modeling.models.TemplatePhaseCurveTemporalModel.reassign", false]], "reassign() (gammapy.modeling.models.templatespatialmodel method)": [[282, "gammapy.modeling.models.TemplateSpatialModel.reassign", false]], "reassign() (gammapy.modeling.models.templatespectralmodel method)": [[283, "gammapy.modeling.models.TemplateSpectralModel.reassign", false]], "reassign() (gammapy.modeling.models.temporalmodel method)": [[284, "gammapy.modeling.models.TemporalModel.reassign", false]], "reassign() (gammapy.modeling.models.uniformprior method)": [[285, "gammapy.modeling.models.UniformPrior.reassign", false]], "reco energy": [[608, "term-Reco-Energy", true]], "recompute_ul() (gammapy.estimators.fluxpoints method)": [[128, "gammapy.estimators.FluxPoints.recompute_ul", false]], "recopsfmap (class in gammapy.irf)": [[170, "gammapy.irf.RecoPSFMap", false]], "recursive_merge_dicts() (in module gammapy.utils.scripts)": [[361, "gammapy.utils.scripts.recursive_merge_dicts", false]], "redshift (gammapy.modeling.models.eblabsorptionnormspectralmodel attribute)": [[232, "gammapy.modeling.models.EBLAbsorptionNormSpectralModel.redshift", false]], "reduce() (gammapy.maps.hpxmap method)": [[197, "gammapy.maps.HpxMap.reduce", false]], "reduce() (gammapy.maps.hpxndmap method)": [[198, "gammapy.maps.HpxNDMap.reduce", false]], "reduce() (gammapy.maps.map method)": [[200, "gammapy.maps.Map.reduce", false]], "reduce() (gammapy.maps.regionndmap method)": [[206, "gammapy.maps.RegionNDMap.reduce", false]], "reduce() (gammapy.maps.wcsmap method)": [[209, "gammapy.maps.WcsMap.reduce", false]], "reduce() (gammapy.maps.wcsndmap method)": [[210, "gammapy.maps.WcsNDMap.reduce", false]], "reduce_over_axes() (gammapy.maps.hpxmap method)": [[197, "gammapy.maps.HpxMap.reduce_over_axes", false]], "reduce_over_axes() (gammapy.maps.hpxndmap method)": [[198, "gammapy.maps.HpxNDMap.reduce_over_axes", false]], "reduce_over_axes() (gammapy.maps.map method)": [[200, "gammapy.maps.Map.reduce_over_axes", false]], "reduce_over_axes() (gammapy.maps.regionndmap method)": [[206, "gammapy.maps.RegionNDMap.reduce_over_axes", false]], "reduce_over_axes() (gammapy.maps.wcsmap method)": [[209, "gammapy.maps.WcsMap.reduce_over_axes", false]], "reduce_over_axes() (gammapy.maps.wcsndmap method)": [[210, "gammapy.maps.WcsNDMap.reduce_over_axes", false]], "reference (gammapy.modeling.models.expcutoffpowerlaw3fglspectralmodel attribute)": [[234, "gammapy.modeling.models.ExpCutoffPowerLaw3FGLSpectralModel.reference", false]], "reference (gammapy.modeling.models.expcutoffpowerlawnormspectralmodel attribute)": [[235, "gammapy.modeling.models.ExpCutoffPowerLawNormSpectralModel.reference", false]], "reference (gammapy.modeling.models.expcutoffpowerlawspectralmodel attribute)": [[236, "gammapy.modeling.models.ExpCutoffPowerLawSpectralModel.reference", false]], "reference (gammapy.modeling.models.logparabolanormspectralmodel attribute)": [[247, "gammapy.modeling.models.LogParabolaNormSpectralModel.reference", false]], "reference (gammapy.modeling.models.logparabolaspectralmodel attribute)": [[248, "gammapy.modeling.models.LogParabolaSpectralModel.reference", false]], "reference (gammapy.modeling.models.powerlawnormspectralmodel attribute)": [[260, "gammapy.modeling.models.PowerLawNormSpectralModel.reference", false]], "reference (gammapy.modeling.models.powerlawspectralmodel attribute)": [[261, "gammapy.modeling.models.PowerLawSpectralModel.reference", false]], "reference (gammapy.modeling.models.smoothbrokenpowerlawspectralmodel attribute)": [[271, "gammapy.modeling.models.SmoothBrokenPowerLawSpectralModel.reference", false]], "reference (gammapy.modeling.models.superexpcutoffpowerlaw3fglspectralmodel attribute)": [[274, "gammapy.modeling.models.SuperExpCutoffPowerLaw3FGLSpectralModel.reference", false]], "reference (gammapy.modeling.models.superexpcutoffpowerlaw4fgldr3spectralmodel attribute)": [[275, "gammapy.modeling.models.SuperExpCutoffPowerLaw4FGLDR3SpectralModel.reference", false]], "reference (gammapy.modeling.models.superexpcutoffpowerlaw4fglspectralmodel attribute)": [[276, "gammapy.modeling.models.SuperExpCutoffPowerLaw4FGLSpectralModel.reference", false]], "reference_fluxes() (gammapy.astro.darkmatter.darkmatterannihilationspectralmodel method)": [[19, "gammapy.astro.darkmatter.DarkMatterAnnihilationSpectralModel.reference_fluxes", false]], "reference_fluxes() (gammapy.astro.darkmatter.darkmatterdecayspectralmodel method)": [[20, "gammapy.astro.darkmatter.DarkMatterDecaySpectralModel.reference_fluxes", false]], "reference_fluxes() (gammapy.astro.darkmatter.primaryflux method)": [[26, "gammapy.astro.darkmatter.PrimaryFlux.reference_fluxes", false]], "reference_fluxes() (gammapy.modeling.models.brokenpowerlawspectralmodel method)": [[224, "gammapy.modeling.models.BrokenPowerLawSpectralModel.reference_fluxes", false]], "reference_fluxes() (gammapy.modeling.models.compoundspectralmodel method)": [[225, "gammapy.modeling.models.CompoundSpectralModel.reference_fluxes", false]], "reference_fluxes() (gammapy.modeling.models.constantspectralmodel method)": [[228, "gammapy.modeling.models.ConstantSpectralModel.reference_fluxes", false]], "reference_fluxes() (gammapy.modeling.models.eblabsorptionnormspectralmodel method)": [[232, "gammapy.modeling.models.EBLAbsorptionNormSpectralModel.reference_fluxes", false]], "reference_fluxes() (gammapy.modeling.models.expcutoffpowerlaw3fglspectralmodel method)": [[234, "gammapy.modeling.models.ExpCutoffPowerLaw3FGLSpectralModel.reference_fluxes", false]], "reference_fluxes() (gammapy.modeling.models.expcutoffpowerlawnormspectralmodel method)": [[235, "gammapy.modeling.models.ExpCutoffPowerLawNormSpectralModel.reference_fluxes", false]], "reference_fluxes() (gammapy.modeling.models.expcutoffpowerlawspectralmodel method)": [[236, "gammapy.modeling.models.ExpCutoffPowerLawSpectralModel.reference_fluxes", false]], "reference_fluxes() (gammapy.modeling.models.gaussianspectralmodel method)": [[241, "gammapy.modeling.models.GaussianSpectralModel.reference_fluxes", false]], "reference_fluxes() (gammapy.modeling.models.logparabolanormspectralmodel method)": [[247, "gammapy.modeling.models.LogParabolaNormSpectralModel.reference_fluxes", false]], "reference_fluxes() (gammapy.modeling.models.logparabolaspectralmodel method)": [[248, "gammapy.modeling.models.LogParabolaSpectralModel.reference_fluxes", false]], "reference_fluxes() (gammapy.modeling.models.meyercrabspectralmodel method)": [[251, "gammapy.modeling.models.MeyerCrabSpectralModel.reference_fluxes", false]], "reference_fluxes() (gammapy.modeling.models.naimaspectralmodel method)": [[255, "gammapy.modeling.models.NaimaSpectralModel.reference_fluxes", false]], "reference_fluxes() (gammapy.modeling.models.piecewisenormspectralmodel method)": [[257, "gammapy.modeling.models.PiecewiseNormSpectralModel.reference_fluxes", false]], "reference_fluxes() (gammapy.modeling.models.powerlaw2spectralmodel method)": [[259, "gammapy.modeling.models.PowerLaw2SpectralModel.reference_fluxes", false]], "reference_fluxes() (gammapy.modeling.models.powerlawnormspectralmodel method)": [[260, "gammapy.modeling.models.PowerLawNormSpectralModel.reference_fluxes", false]], "reference_fluxes() (gammapy.modeling.models.powerlawspectralmodel method)": [[261, "gammapy.modeling.models.PowerLawSpectralModel.reference_fluxes", false]], "reference_fluxes() (gammapy.modeling.models.scalespectralmodel method)": [[266, "gammapy.modeling.models.ScaleSpectralModel.reference_fluxes", false]], "reference_fluxes() (gammapy.modeling.models.smoothbrokenpowerlawspectralmodel method)": [[271, "gammapy.modeling.models.SmoothBrokenPowerLawSpectralModel.reference_fluxes", false]], "reference_fluxes() (gammapy.modeling.models.spectralmodel method)": [[273, "gammapy.modeling.models.SpectralModel.reference_fluxes", false]], "reference_fluxes() (gammapy.modeling.models.superexpcutoffpowerlaw3fglspectralmodel method)": [[274, "gammapy.modeling.models.SuperExpCutoffPowerLaw3FGLSpectralModel.reference_fluxes", false]], "reference_fluxes() (gammapy.modeling.models.superexpcutoffpowerlaw4fgldr3spectralmodel method)": [[275, "gammapy.modeling.models.SuperExpCutoffPowerLaw4FGLDR3SpectralModel.reference_fluxes", false]], "reference_fluxes() (gammapy.modeling.models.superexpcutoffpowerlaw4fglspectralmodel method)": [[276, "gammapy.modeling.models.SuperExpCutoffPowerLaw4FGLSpectralModel.reference_fluxes", false]], "reference_fluxes() (gammapy.modeling.models.templatendspectralmodel method)": [[279, "gammapy.modeling.models.TemplateNDSpectralModel.reference_fluxes", false]], "reference_fluxes() (gammapy.modeling.models.templatespectralmodel method)": [[283, "gammapy.modeling.models.TemplateSpectralModel.reference_fluxes", false]], "reference_model (gammapy.estimators.fluxmaps attribute)": [[126, "gammapy.estimators.FluxMaps.reference_model", false]], "reference_model (gammapy.estimators.fluxpoints attribute)": [[128, "gammapy.estimators.FluxPoints.reference_model", false]], "reference_model_default (gammapy.estimators.fluxmaps attribute)": [[126, "gammapy.estimators.FluxMaps.reference_model_default", false]], "reference_model_default (gammapy.estimators.fluxpoints attribute)": [[128, "gammapy.estimators.FluxPoints.reference_model_default", false]], "reference_spectral_model (gammapy.estimators.fluxmaps attribute)": [[126, "gammapy.estimators.FluxMaps.reference_spectral_model", false]], "reference_spectral_model (gammapy.estimators.fluxpoints attribute)": [[128, "gammapy.estimators.FluxPoints.reference_spectral_model", false]], "reference_time (gammapy.maps.timemapaxis attribute)": [[207, "gammapy.maps.TimeMapAxis.reference_time", false]], "reference_time (gammapy.modeling.models.constanttemporalmodel attribute)": [[229, "gammapy.modeling.models.ConstantTemporalModel.reference_time", false]], "reference_time (gammapy.modeling.models.expdecaytemporalmodel attribute)": [[237, "gammapy.modeling.models.ExpDecayTemporalModel.reference_time", false]], "reference_time (gammapy.modeling.models.gaussiantemporalmodel attribute)": [[242, "gammapy.modeling.models.GaussianTemporalModel.reference_time", false]], "reference_time (gammapy.modeling.models.generalizedgaussiantemporalmodel attribute)": [[244, "gammapy.modeling.models.GeneralizedGaussianTemporalModel.reference_time", false]], "reference_time (gammapy.modeling.models.lightcurvetemplatetemporalmodel attribute)": [[245, "gammapy.modeling.models.LightCurveTemplateTemporalModel.reference_time", false]], "reference_time (gammapy.modeling.models.lineartemporalmodel attribute)": [[246, "gammapy.modeling.models.LinearTemporalModel.reference_time", false]], "reference_time (gammapy.modeling.models.powerlawtemporalmodel attribute)": [[262, "gammapy.modeling.models.PowerLawTemporalModel.reference_time", false]], "reference_time (gammapy.modeling.models.sinetemporalmodel attribute)": [[269, "gammapy.modeling.models.SineTemporalModel.reference_time", false]], "reference_time (gammapy.modeling.models.templatephasecurvetemporalmodel attribute)": [[281, "gammapy.modeling.models.TemplatePhaseCurveTemporalModel.reference_time", false]], "reference_time (gammapy.modeling.models.temporalmodel attribute)": [[284, "gammapy.modeling.models.TemporalModel.reference_time", false]], "reflected background": [[608, "term-Reflected-Background", true]], "reflectedregionsbackgroundmaker (class in gammapy.makers)": [[179, "gammapy.makers.ReflectedRegionsBackgroundMaker", false]], "reflectedregionsfinder (class in gammapy.makers)": [[180, "gammapy.makers.ReflectedRegionsFinder", false]], "region (gammapy.maps.hpxgeom attribute)": [[196, "gammapy.maps.HpxGeom.region", false]], "region (gammapy.maps.regiongeom attribute)": [[205, "gammapy.maps.RegionGeom.region", false]], "region_mask() (gammapy.maps.hpxgeom method)": [[196, "gammapy.maps.HpxGeom.region_mask", false]], "region_mask() (gammapy.maps.wcsgeom method)": [[208, "gammapy.maps.WcsGeom.region_mask", false]], "region_to_frame() (in module gammapy.utils.regions)": [[355, "gammapy.utils.regions.region_to_frame", false]], "region_weights() (gammapy.maps.wcsgeom method)": [[208, "gammapy.maps.WcsGeom.region_weights", false]], "regiongeom (class in gammapy.maps)": [[205, "gammapy.maps.RegionGeom", false]], "regionndmap (class in gammapy.maps)": [[206, "gammapy.maps.RegionNDMap", false]], "regions_to_compound_region() (in module gammapy.utils.regions)": [[356, "gammapy.utils.regions.regions_to_compound_region", false]], "regionsfinder (class in gammapy.makers)": [[181, "gammapy.makers.RegionsFinder", false]], "remove() (gammapy.data.observations method)": [[93, "gammapy.data.Observations.remove", false]], "remove() (gammapy.datasets.datasets method)": [[101, "gammapy.datasets.Datasets.remove", false]], "remove() (gammapy.modeling.models.models method)": [[254, "gammapy.modeling.models.Models.remove", false]], "remove_column() (gammapy.data.hduindextable method)": [[88, "gammapy.data.HDUIndexTable.remove_column", false]], "remove_column() (gammapy.data.observationtable method)": [[92, "gammapy.data.ObservationTable.remove_column", false]], "remove_columns() (gammapy.data.hduindextable method)": [[88, "gammapy.data.HDUIndexTable.remove_columns", false]], "remove_columns() (gammapy.data.observationtable method)": [[92, "gammapy.data.ObservationTable.remove_columns", false]], "remove_indices() (gammapy.data.hduindextable method)": [[88, "gammapy.data.HDUIndexTable.remove_indices", false]], "remove_indices() (gammapy.data.observationtable method)": [[92, "gammapy.data.ObservationTable.remove_indices", false]], "remove_row() (gammapy.data.hduindextable method)": [[88, "gammapy.data.HDUIndexTable.remove_row", false]], "remove_row() (gammapy.data.observationtable method)": [[92, "gammapy.data.ObservationTable.remove_row", false]], "remove_rows() (gammapy.data.hduindextable method)": [[88, "gammapy.data.HDUIndexTable.remove_rows", false]], "remove_rows() (gammapy.data.observationtable method)": [[92, "gammapy.data.ObservationTable.remove_rows", false]], "rename() (gammapy.astro.population.casebattacharya1998 class method)": [[28, "gammapy.astro.population.CaseBattacharya1998.rename", false]], "rename() (gammapy.astro.population.exponential class method)": [[29, "gammapy.astro.population.Exponential.rename", false]], "rename() (gammapy.astro.population.faucherkaspi2006 class method)": [[30, "gammapy.astro.population.FaucherKaspi2006.rename", false]], "rename() (gammapy.astro.population.faucherkaspi2006velocitybimodal class method)": [[31, "gammapy.astro.population.FaucherKaspi2006VelocityBimodal.rename", false]], "rename() (gammapy.astro.population.faucherkaspi2006velocitymaxwellian class method)": [[32, "gammapy.astro.population.FaucherKaspi2006VelocityMaxwellian.rename", false]], "rename() (gammapy.astro.population.lorimer2006 class method)": [[35, "gammapy.astro.population.Lorimer2006.rename", false]], "rename() (gammapy.astro.population.paczynski1990 class method)": [[36, "gammapy.astro.population.Paczynski1990.rename", false]], "rename() (gammapy.astro.population.paczynski1990velocity class method)": [[37, "gammapy.astro.population.Paczynski1990Velocity.rename", false]], "rename() (gammapy.astro.population.yusifovkucuk2004 class method)": [[39, "gammapy.astro.population.YusifovKucuk2004.rename", false]], "rename() (gammapy.astro.population.yusifovkucuk2004b class method)": [[40, "gammapy.astro.population.YusifovKucuk2004B.rename", false]], "rename() (gammapy.maps.mapaxis method)": [[202, "gammapy.maps.MapAxis.rename", false]], "rename_axes() (gammapy.maps.geom method)": [[195, "gammapy.maps.Geom.rename_axes", false]], "rename_axes() (gammapy.maps.hpxgeom method)": [[196, "gammapy.maps.HpxGeom.rename_axes", false]], "rename_axes() (gammapy.maps.hpxmap method)": [[197, "gammapy.maps.HpxMap.rename_axes", false]], "rename_axes() (gammapy.maps.hpxndmap method)": [[198, "gammapy.maps.HpxNDMap.rename_axes", false]], "rename_axes() (gammapy.maps.map method)": [[200, "gammapy.maps.Map.rename_axes", false]], "rename_axes() (gammapy.maps.mapaxes method)": [[201, "gammapy.maps.MapAxes.rename_axes", false]], "rename_axes() (gammapy.maps.regiongeom method)": [[205, "gammapy.maps.RegionGeom.rename_axes", false]], "rename_axes() (gammapy.maps.regionndmap method)": [[206, "gammapy.maps.RegionNDMap.rename_axes", false]], "rename_axes() (gammapy.maps.wcsgeom method)": [[208, "gammapy.maps.WcsGeom.rename_axes", false]], "rename_axes() (gammapy.maps.wcsmap method)": [[209, "gammapy.maps.WcsMap.rename_axes", false]], "rename_axes() (gammapy.maps.wcsndmap method)": [[210, "gammapy.maps.WcsNDMap.rename_axes", false]], "rename_column() (gammapy.data.hduindextable method)": [[88, "gammapy.data.HDUIndexTable.rename_column", false]], "rename_column() (gammapy.data.observationtable method)": [[92, "gammapy.data.ObservationTable.rename_column", false]], "rename_columns() (gammapy.data.hduindextable method)": [[88, "gammapy.data.HDUIndexTable.rename_columns", false]], "rename_columns() (gammapy.data.observationtable method)": [[92, "gammapy.data.ObservationTable.rename_columns", false]], "render() (gammapy.astro.population.casebattacharya1998 method)": [[28, "gammapy.astro.population.CaseBattacharya1998.render", false]], "render() (gammapy.astro.population.exponential method)": [[29, "gammapy.astro.population.Exponential.render", false]], "render() (gammapy.astro.population.faucherkaspi2006 method)": [[30, "gammapy.astro.population.FaucherKaspi2006.render", false]], "render() (gammapy.astro.population.faucherkaspi2006velocitybimodal method)": [[31, "gammapy.astro.population.FaucherKaspi2006VelocityBimodal.render", false]], "render() (gammapy.astro.population.faucherkaspi2006velocitymaxwellian method)": [[32, "gammapy.astro.population.FaucherKaspi2006VelocityMaxwellian.render", false]], "render() (gammapy.astro.population.lorimer2006 method)": [[35, "gammapy.astro.population.Lorimer2006.render", false]], "render() (gammapy.astro.population.paczynski1990 method)": [[36, "gammapy.astro.population.Paczynski1990.render", false]], "render() (gammapy.astro.population.paczynski1990velocity method)": [[37, "gammapy.astro.population.Paczynski1990Velocity.render", false]], "render() (gammapy.astro.population.yusifovkucuk2004 method)": [[39, "gammapy.astro.population.YusifovKucuk2004.render", false]], "render() (gammapy.astro.population.yusifovkucuk2004b method)": [[40, "gammapy.astro.population.YusifovKucuk2004B.render", false]], "reorder_axes() (gammapy.maps.hpxmap method)": [[197, "gammapy.maps.HpxMap.reorder_axes", false]], "reorder_axes() (gammapy.maps.hpxndmap method)": [[198, "gammapy.maps.HpxNDMap.reorder_axes", false]], "reorder_axes() (gammapy.maps.map method)": [[200, "gammapy.maps.Map.reorder_axes", false]], "reorder_axes() (gammapy.maps.regionndmap method)": [[206, "gammapy.maps.RegionNDMap.reorder_axes", false]], "reorder_axes() (gammapy.maps.wcsmap method)": [[209, "gammapy.maps.WcsMap.reorder_axes", false]], "reorder_axes() (gammapy.maps.wcsndmap method)": [[210, "gammapy.maps.WcsNDMap.reorder_axes", false]], "replace() (gammapy.maps.mapaxes method)": [[201, "gammapy.maps.MapAxes.replace", false]], "replace_axis() (gammapy.maps.geom method)": [[195, "gammapy.maps.Geom.replace_axis", false]], "replace_axis() (gammapy.maps.hpxgeom method)": [[196, "gammapy.maps.HpxGeom.replace_axis", false]], "replace_axis() (gammapy.maps.regiongeom method)": [[205, "gammapy.maps.RegionGeom.replace_axis", false]], "replace_axis() (gammapy.maps.wcsgeom method)": [[208, "gammapy.maps.WcsGeom.replace_axis", false]], "replace_column() (gammapy.data.hduindextable method)": [[88, "gammapy.data.HDUIndexTable.replace_column", false]], "replace_column() (gammapy.data.observationtable method)": [[92, "gammapy.data.ObservationTable.replace_column", false]], "replicate() (gammapy.utils.coordinates.fovaltazframe method)": [[320, "gammapy.utils.coordinates.FoVAltAzFrame.replicate", false]], "replicate() (gammapy.utils.coordinates.fovicrsframe method)": [[321, "gammapy.utils.coordinates.FoVICRSFrame.replicate", false]], "replicate_without_data() (gammapy.utils.coordinates.fovaltazframe method)": [[320, "gammapy.utils.coordinates.FoVAltAzFrame.replicate_without_data", false]], "replicate_without_data() (gammapy.utils.coordinates.fovicrsframe method)": [[321, "gammapy.utils.coordinates.FoVICRSFrame.replicate_without_data", false]], "represent_as() (gammapy.utils.coordinates.fovaltazframe method)": [[320, "gammapy.utils.coordinates.FoVAltAzFrame.represent_as", false]], "represent_as() (gammapy.utils.coordinates.fovicrsframe method)": [[321, "gammapy.utils.coordinates.FoVICRSFrame.represent_as", false]], "representation_component_names (gammapy.utils.coordinates.fovaltazframe attribute)": [[320, "gammapy.utils.coordinates.FoVAltAzFrame.representation_component_names", false]], "representation_component_names (gammapy.utils.coordinates.fovicrsframe attribute)": [[321, "gammapy.utils.coordinates.FoVICRSFrame.representation_component_names", false]], "representation_component_units (gammapy.utils.coordinates.fovaltazframe attribute)": [[320, "gammapy.utils.coordinates.FoVAltAzFrame.representation_component_units", false]], "representation_component_units (gammapy.utils.coordinates.fovicrsframe attribute)": [[321, "gammapy.utils.coordinates.FoVICRSFrame.representation_component_units", false]], "representation_info (gammapy.utils.coordinates.fovaltazframe attribute)": [[320, "gammapy.utils.coordinates.FoVAltAzFrame.representation_info", false]], "representation_info (gammapy.utils.coordinates.fovicrsframe attribute)": [[321, "gammapy.utils.coordinates.FoVICRSFrame.representation_info", false]], "representation_type (gammapy.utils.coordinates.fovaltazframe attribute)": [[320, "gammapy.utils.coordinates.FoVAltAzFrame.representation_type", false]], "representation_type (gammapy.utils.coordinates.fovicrsframe attribute)": [[321, "gammapy.utils.coordinates.FoVICRSFrame.representation_type", false]], "reproject_by_image() (gammapy.maps.hpxmap method)": [[197, "gammapy.maps.HpxMap.reproject_by_image", false]], "reproject_by_image() (gammapy.maps.hpxndmap method)": [[198, "gammapy.maps.HpxNDMap.reproject_by_image", false]], "reproject_by_image() (gammapy.maps.map method)": [[200, "gammapy.maps.Map.reproject_by_image", false]], "reproject_by_image() (gammapy.maps.regionndmap method)": [[206, "gammapy.maps.RegionNDMap.reproject_by_image", false]], "reproject_by_image() (gammapy.maps.wcsmap method)": [[209, "gammapy.maps.WcsMap.reproject_by_image", false]], "reproject_by_image() (gammapy.maps.wcsndmap method)": [[210, "gammapy.maps.WcsNDMap.reproject_by_image", false]], "reproject_to_geom() (gammapy.maps.hpxmap method)": [[197, "gammapy.maps.HpxMap.reproject_to_geom", false]], "reproject_to_geom() (gammapy.maps.hpxndmap method)": [[198, "gammapy.maps.HpxNDMap.reproject_to_geom", false]], "reproject_to_geom() (gammapy.maps.map method)": [[200, "gammapy.maps.Map.reproject_to_geom", false]], "reproject_to_geom() (gammapy.maps.regionndmap method)": [[206, "gammapy.maps.RegionNDMap.reproject_to_geom", false]], "reproject_to_geom() (gammapy.maps.wcsmap method)": [[209, "gammapy.maps.WcsMap.reproject_to_geom", false]], "reproject_to_geom() (gammapy.maps.wcsndmap method)": [[210, "gammapy.maps.WcsNDMap.reproject_to_geom", false]], "required_axes (gammapy.irf.background2d attribute)": [[151, "gammapy.irf.Background2D.required_axes", false]], "required_axes (gammapy.irf.background3d attribute)": [[152, "gammapy.irf.Background3D.required_axes", false]], "required_axes (gammapy.irf.backgroundirf attribute)": [[153, "gammapy.irf.BackgroundIRF.required_axes", false]], "required_axes (gammapy.irf.edispkernel attribute)": [[154, "gammapy.irf.EDispKernel.required_axes", false]], "required_axes (gammapy.irf.edispkernelmap attribute)": [[155, "gammapy.irf.EDispKernelMap.required_axes", false]], "required_axes (gammapy.irf.edispmap attribute)": [[156, "gammapy.irf.EDispMap.required_axes", false]], "required_axes (gammapy.irf.effectiveareatable2d attribute)": [[157, "gammapy.irf.EffectiveAreaTable2D.required_axes", false]], "required_axes (gammapy.irf.energydependentmultigausspsf attribute)": [[158, "gammapy.irf.EnergyDependentMultiGaussPSF.required_axes", false]], "required_axes (gammapy.irf.energydispersion2d attribute)": [[159, "gammapy.irf.EnergyDispersion2D.required_axes", false]], "required_axes (gammapy.irf.irf attribute)": [[161, "gammapy.irf.IRF.required_axes", false]], "required_axes (gammapy.irf.irfmap attribute)": [[162, "gammapy.irf.IRFMap.required_axes", false]], "required_axes (gammapy.irf.parametricpsf attribute)": [[168, "gammapy.irf.ParametricPSF.required_axes", false]], "required_axes (gammapy.irf.psf3d attribute)": [[164, "gammapy.irf.PSF3D.required_axes", false]], "required_axes (gammapy.irf.psfking attribute)": [[166, "gammapy.irf.PSFKing.required_axes", false]], "required_axes (gammapy.irf.psfmap attribute)": [[167, "gammapy.irf.PSFMap.required_axes", false]], "required_axes (gammapy.irf.radmax2d attribute)": [[169, "gammapy.irf.RadMax2D.required_axes", false]], "required_axes (gammapy.irf.recopsfmap attribute)": [[170, "gammapy.irf.RecoPSFMap.required_axes", false]], "required_parameters (gammapy.irf.energydependentmultigausspsf attribute)": [[158, "gammapy.irf.EnergyDependentMultiGaussPSF.required_parameters", false]], "required_parameters (gammapy.irf.parametricpsf attribute)": [[168, "gammapy.irf.ParametricPSF.required_parameters", false]], "required_parameters (gammapy.irf.psfking attribute)": [[166, "gammapy.irf.PSFKing.required_parameters", false]], "requires_data() (in module gammapy.utils.testing)": [[373, "gammapy.utils.testing.requires_data", false]], "requires_dependency() (in module gammapy.utils.testing)": [[374, "gammapy.utils.testing.requires_dependency", false]], "resample() (gammapy.maps.hpxmap method)": [[197, "gammapy.maps.HpxMap.resample", false]], "resample() (gammapy.maps.hpxndmap method)": [[198, "gammapy.maps.HpxNDMap.resample", false]], "resample() (gammapy.maps.labelmapaxis method)": [[199, "gammapy.maps.LabelMapAxis.resample", false]], "resample() (gammapy.maps.map method)": [[200, "gammapy.maps.Map.resample", false]], "resample() (gammapy.maps.mapaxes method)": [[201, "gammapy.maps.MapAxes.resample", false]], "resample() (gammapy.maps.regionndmap method)": [[206, "gammapy.maps.RegionNDMap.resample", false]], "resample() (gammapy.maps.wcsmap method)": [[209, "gammapy.maps.WcsMap.resample", false]], "resample() (gammapy.maps.wcsndmap method)": [[210, "gammapy.maps.WcsNDMap.resample", false]], "resample_axis() (gammapy.estimators.fluxpoints method)": [[128, "gammapy.estimators.FluxPoints.resample_axis", false]], "resample_axis() (gammapy.maps.geom method)": [[195, "gammapy.maps.Geom.resample_axis", false]], "resample_axis() (gammapy.maps.hpxgeom method)": [[196, "gammapy.maps.HpxGeom.resample_axis", false]], "resample_axis() (gammapy.maps.hpxmap method)": [[197, "gammapy.maps.HpxMap.resample_axis", false]], "resample_axis() (gammapy.maps.hpxndmap method)": [[198, "gammapy.maps.HpxNDMap.resample_axis", false]], "resample_axis() (gammapy.maps.map method)": [[200, "gammapy.maps.Map.resample_axis", false]], "resample_axis() (gammapy.maps.regiongeom method)": [[205, "gammapy.maps.RegionGeom.resample_axis", false]], "resample_axis() (gammapy.maps.regionndmap method)": [[206, "gammapy.maps.RegionNDMap.resample_axis", false]], "resample_axis() (gammapy.maps.wcsgeom method)": [[208, "gammapy.maps.WcsGeom.resample_axis", false]], "resample_axis() (gammapy.maps.wcsmap method)": [[209, "gammapy.maps.WcsMap.resample_axis", false]], "resample_axis() (gammapy.maps.wcsndmap method)": [[210, "gammapy.maps.WcsNDMap.resample_axis", false]], "resample_energy_axis() (gammapy.datasets.mapdataset method)": [[104, "gammapy.datasets.MapDataset.resample_energy_axis", false]], "resample_energy_axis() (gammapy.datasets.mapdatasetonoff method)": [[107, "gammapy.datasets.MapDatasetOnOff.resample_energy_axis", false]], "resample_energy_axis() (gammapy.datasets.spectrumdataset method)": [[111, "gammapy.datasets.SpectrumDataset.resample_energy_axis", false]], "resample_energy_axis() (gammapy.datasets.spectrumdatasetonoff method)": [[112, "gammapy.datasets.SpectrumDatasetOnOff.resample_energy_axis", false]], "resample_energy_axis() (gammapy.irf.edispkernelmap method)": [[155, "gammapy.irf.EDispKernelMap.resample_energy_axis", false]], "resample_energy_edges() (in module gammapy.estimators.utils)": [[150, "gammapy.estimators.utils.resample_energy_edges", false]], "reset_autoscale() (gammapy.modeling.parameter method)": [[218, "gammapy.modeling.Parameter.reset_autoscale", false]], "reset_autoscale() (gammapy.modeling.priorparameter method)": [[220, "gammapy.modeling.PriorParameter.reset_autoscale", false]], "reset_data_cache() (gammapy.datasets.mapdataset method)": [[104, "gammapy.datasets.MapDataset.reset_data_cache", false]], "reset_data_cache() (gammapy.datasets.mapdatasetonoff method)": [[107, "gammapy.datasets.MapDatasetOnOff.reset_data_cache", false]], "reset_data_cache() (gammapy.datasets.spectrumdataset method)": [[111, "gammapy.datasets.SpectrumDataset.reset_data_cache", false]], "reset_data_cache() (gammapy.datasets.spectrumdatasetonoff method)": [[112, "gammapy.datasets.SpectrumDatasetOnOff.reset_data_cache", false]], "reset_to_default() (gammapy.modeling.models.fovbackgroundmodel method)": [[238, "gammapy.modeling.models.FoVBackgroundModel.reset_to_default", false]], "reshape() (gammapy.utils.coordinates.fovaltazframe method)": [[320, "gammapy.utils.coordinates.FoVAltAzFrame.reshape", false]], "reshape() (gammapy.utils.coordinates.fovicrsframe method)": [[321, "gammapy.utils.coordinates.FoVICRSFrame.reshape", false]], "residuals() (gammapy.datasets.fluxpointsdataset method)": [[103, "gammapy.datasets.FluxPointsDataset.residuals", false]], "residuals() (gammapy.datasets.mapdataset method)": [[104, "gammapy.datasets.MapDataset.residuals", false]], "residuals() (gammapy.datasets.mapdatasetonoff method)": [[107, "gammapy.datasets.MapDatasetOnOff.residuals", false]], "residuals() (gammapy.datasets.spectrumdataset method)": [[111, "gammapy.datasets.SpectrumDataset.residuals", false]], "residuals() (gammapy.datasets.spectrumdatasetonoff method)": [[112, "gammapy.datasets.SpectrumDatasetOnOff.residuals", false]], "restore_status() (gammapy.modeling.models.datasetmodels method)": [[230, "gammapy.modeling.models.DatasetModels.restore_status", false]], "restore_status() (gammapy.modeling.models.models method)": [[254, "gammapy.modeling.models.Models.restore_status", false]], "restore_status() (gammapy.modeling.parameters method)": [[219, "gammapy.modeling.Parameters.restore_status", false]], "restore_status() (gammapy.modeling.priorparameters method)": [[221, "gammapy.modeling.PriorParameters.restore_status", false]], "return_units (gammapy.astro.population.casebattacharya1998 attribute)": [[28, "gammapy.astro.population.CaseBattacharya1998.return_units", false]], "return_units (gammapy.astro.population.exponential attribute)": [[29, "gammapy.astro.population.Exponential.return_units", false]], "return_units (gammapy.astro.population.faucherkaspi2006 attribute)": [[30, "gammapy.astro.population.FaucherKaspi2006.return_units", false]], "return_units (gammapy.astro.population.faucherkaspi2006velocitybimodal attribute)": [[31, "gammapy.astro.population.FaucherKaspi2006VelocityBimodal.return_units", false]], "return_units (gammapy.astro.population.faucherkaspi2006velocitymaxwellian attribute)": [[32, "gammapy.astro.population.FaucherKaspi2006VelocityMaxwellian.return_units", false]], "return_units (gammapy.astro.population.lorimer2006 attribute)": [[35, "gammapy.astro.population.Lorimer2006.return_units", false]], "return_units (gammapy.astro.population.paczynski1990 attribute)": [[36, "gammapy.astro.population.Paczynski1990.return_units", false]], "return_units (gammapy.astro.population.paczynski1990velocity attribute)": [[37, "gammapy.astro.population.Paczynski1990Velocity.return_units", false]], "return_units (gammapy.astro.population.yusifovkucuk2004 attribute)": [[39, "gammapy.astro.population.YusifovKucuk2004.return_units", false]], "return_units (gammapy.astro.population.yusifovkucuk2004b attribute)": [[40, "gammapy.astro.population.YusifovKucuk2004B.return_units", false]], "reverse (gammapy.maps.mapaxes attribute)": [[201, "gammapy.maps.MapAxes.reverse", false]], "reverse() (gammapy.data.hduindextable method)": [[88, "gammapy.data.HDUIndexTable.reverse", false]], "reverse() (gammapy.data.observations method)": [[93, "gammapy.data.Observations.reverse", false]], "reverse() (gammapy.data.observationtable method)": [[92, "gammapy.data.ObservationTable.reverse", false]], "reverse() (gammapy.datasets.datasets method)": [[101, "gammapy.datasets.Datasets.reverse", false]], "reverse() (gammapy.modeling.models.models method)": [[254, "gammapy.modeling.models.Models.reverse", false]], "reverse_lon_radec (gammapy.irf.fovalignment attribute)": [[160, "gammapy.irf.FoVAlignment.REVERSE_LON_RADEC", false]], "ring background": [[608, "term-Ring-Background", true]], "ringbackgroundmaker (class in gammapy.makers)": [[182, "gammapy.makers.RingBackgroundMaker", false]], "roi": [[608, "term-RoI", true]], "round() (gammapy.data.hduindextable method)": [[88, "gammapy.data.HDUIndexTable.round", false]], "round() (gammapy.data.observationtable method)": [[92, "gammapy.data.ObservationTable.round", false]], "round() (gammapy.maps.mapaxis method)": [[202, "gammapy.maps.MapAxis.round", false]], "row_idx() (gammapy.data.hduindextable method)": [[88, "gammapy.data.HDUIndexTable.row_idx", false]], "row_index (gammapy.catalog.sourcecatalogobject attribute)": [[69, "gammapy.catalog.SourceCatalogObject.row_index", false]], "row_index (gammapy.catalog.sourcecatalogobject1lhaaso attribute)": [[70, "gammapy.catalog.SourceCatalogObject1LHAASO.row_index", false]], "row_index (gammapy.catalog.sourcecatalogobject2fhl attribute)": [[71, "gammapy.catalog.SourceCatalogObject2FHL.row_index", false]], "row_index (gammapy.catalog.sourcecatalogobject2hwc attribute)": [[72, "gammapy.catalog.SourceCatalogObject2HWC.row_index", false]], "row_index (gammapy.catalog.sourcecatalogobject2pc attribute)": [[73, "gammapy.catalog.SourceCatalogObject2PC.row_index", false]], "row_index (gammapy.catalog.sourcecatalogobject3fgl attribute)": [[74, "gammapy.catalog.SourceCatalogObject3FGL.row_index", false]], "row_index (gammapy.catalog.sourcecatalogobject3fhl attribute)": [[75, "gammapy.catalog.SourceCatalogObject3FHL.row_index", false]], "row_index (gammapy.catalog.sourcecatalogobject3hwc attribute)": [[76, "gammapy.catalog.SourceCatalogObject3HWC.row_index", false]], "row_index (gammapy.catalog.sourcecatalogobject3pc attribute)": [[77, "gammapy.catalog.SourceCatalogObject3PC.row_index", false]], "row_index (gammapy.catalog.sourcecatalogobject4fgl attribute)": [[78, "gammapy.catalog.SourceCatalogObject4FGL.row_index", false]], "row_index (gammapy.catalog.sourcecatalogobjectgammacat attribute)": [[79, "gammapy.catalog.SourceCatalogObjectGammaCat.row_index", false]], "row_index (gammapy.catalog.sourcecatalogobjecthgps attribute)": [[80, "gammapy.catalog.SourceCatalogObjectHGPS.row_index", false]], "row_index (gammapy.catalog.sourcecatalogobjecthgpscomponent attribute)": [[81, "gammapy.catalog.SourceCatalogObjectHGPSComponent.row_index", false]], "row_index() (gammapy.catalog.sourcecatalog method)": [[56, "gammapy.catalog.SourceCatalog.row_index", false]], "row_index() (gammapy.catalog.sourcecatalog1lhaaso method)": [[57, "gammapy.catalog.SourceCatalog1LHAASO.row_index", false]], "row_index() (gammapy.catalog.sourcecatalog2fhl method)": [[58, "gammapy.catalog.SourceCatalog2FHL.row_index", false]], "row_index() (gammapy.catalog.sourcecatalog2hwc method)": [[59, "gammapy.catalog.SourceCatalog2HWC.row_index", false]], "row_index() (gammapy.catalog.sourcecatalog2pc method)": [[60, "gammapy.catalog.SourceCatalog2PC.row_index", false]], "row_index() (gammapy.catalog.sourcecatalog3fgl method)": [[61, "gammapy.catalog.SourceCatalog3FGL.row_index", false]], "row_index() (gammapy.catalog.sourcecatalog3fhl method)": [[62, "gammapy.catalog.SourceCatalog3FHL.row_index", false]], "row_index() (gammapy.catalog.sourcecatalog3hwc method)": [[63, "gammapy.catalog.SourceCatalog3HWC.row_index", false]], "row_index() (gammapy.catalog.sourcecatalog3pc method)": [[64, "gammapy.catalog.SourceCatalog3PC.row_index", false]], "row_index() (gammapy.catalog.sourcecatalog4fgl method)": [[65, "gammapy.catalog.SourceCatalog4FGL.row_index", false]], "row_index() (gammapy.catalog.sourcecataloggammacat method)": [[66, "gammapy.catalog.SourceCatalogGammaCat.row_index", false]], "row_index() (gammapy.catalog.sourcecataloghgps method)": [[67, "gammapy.catalog.SourceCatalogHGPS.row_index", false]], "run() (gammapy.data.observationseventssampler method)": [[94, "gammapy.data.ObservationsEventsSampler.run", false]], "run() (gammapy.datasets.mapdataseteventsampler method)": [[105, "gammapy.datasets.MapDatasetEventSampler.run", false]], "run() (gammapy.datasets.observationeventsampler method)": [[110, "gammapy.datasets.ObservationEventSampler.run", false]], "run() (gammapy.estimators.asmoothmapestimator method)": [[121, "gammapy.estimators.ASmoothMapEstimator.run", false]], "run() (gammapy.estimators.energydependentmorphologyestimator method)": [[123, "gammapy.estimators.EnergyDependentMorphologyEstimator.run", false]], "run() (gammapy.estimators.estimator method)": [[124, "gammapy.estimators.Estimator.run", false]], "run() (gammapy.estimators.excessmapestimator method)": [[125, "gammapy.estimators.ExcessMapEstimator.run", false]], "run() (gammapy.estimators.fluxpointsestimator method)": [[129, "gammapy.estimators.FluxPointsEstimator.run", false]], "run() (gammapy.estimators.fluxprofileestimator method)": [[130, "gammapy.estimators.FluxProfileEstimator.run", false]], "run() (gammapy.estimators.imageprofileestimator method)": [[132, "gammapy.estimators.ImageProfileEstimator.run", false]], "run() (gammapy.estimators.lightcurveestimator method)": [[133, "gammapy.estimators.LightCurveEstimator.run", false]], "run() (gammapy.estimators.parameterestimator method)": [[134, "gammapy.estimators.ParameterEstimator.run", false]], "run() (gammapy.estimators.parametersensitivityestimator method)": [[135, "gammapy.estimators.ParameterSensitivityEstimator.run", false]], "run() (gammapy.estimators.sensitivityestimator method)": [[136, "gammapy.estimators.SensitivityEstimator.run", false]], "run() (gammapy.estimators.tsmapestimator method)": [[137, "gammapy.estimators.TSMapEstimator.run", false]], "run() (gammapy.makers.adaptiveringbackgroundmaker method)": [[172, "gammapy.makers.AdaptiveRingBackgroundMaker.run", false]], "run() (gammapy.makers.datasetsmaker method)": [[173, "gammapy.makers.DatasetsMaker.run", false]], "run() (gammapy.makers.fovbackgroundmaker method)": [[174, "gammapy.makers.FoVBackgroundMaker.run", false]], "run() (gammapy.makers.maker method)": [[176, "gammapy.makers.Maker.run", false]], "run() (gammapy.makers.mapdatasetmaker method)": [[177, "gammapy.makers.MapDatasetMaker.run", false]], "run() (gammapy.makers.phasebackgroundmaker method)": [[178, "gammapy.makers.PhaseBackgroundMaker.run", false]], "run() (gammapy.makers.reflectedregionsbackgroundmaker method)": [[179, "gammapy.makers.ReflectedRegionsBackgroundMaker.run", false]], "run() (gammapy.makers.reflectedregionsfinder method)": [[180, "gammapy.makers.ReflectedRegionsFinder.run", false]], "run() (gammapy.makers.regionsfinder method)": [[181, "gammapy.makers.RegionsFinder.run", false]], "run() (gammapy.makers.ringbackgroundmaker method)": [[182, "gammapy.makers.RingBackgroundMaker.run", false]], "run() (gammapy.makers.safemaskmaker method)": [[183, "gammapy.makers.SafeMaskMaker.run", false]], "run() (gammapy.makers.spectrumdatasetmaker method)": [[184, "gammapy.makers.SpectrumDatasetMaker.run", false]], "run() (gammapy.makers.wobbleregionsfinder method)": [[185, "gammapy.makers.WobbleRegionsFinder.run", false]], "run() (gammapy.modeling.fit method)": [[215, "gammapy.modeling.Fit.run", false]], "run() (gammapy.modeling.sampler method)": [[222, "gammapy.modeling.Sampler.run", false]], "run() (gammapy.utils.testing.checker method)": [[368, "gammapy.utils.testing.Checker.run", false]], "run_fit() (gammapy.analysis.analysis method)": [[15, "gammapy.analysis.Analysis.run_fit", false]], "run_multiprocessing() (in module gammapy.utils.parallel)": [[342, "gammapy.utils.parallel.run_multiprocessing", false]], "safe_mask_maker (gammapy.makers.datasetsmaker attribute)": [[173, "gammapy.makers.DatasetsMaker.safe_mask_maker", false]], "safemaskmaker (class in gammapy.makers)": [[183, "gammapy.makers.SafeMaskMaker", false]], "sample() (gammapy.utils.random.inversecdfsampler method)": [[343, "gammapy.utils.random.InverseCDFSampler.sample", false]], "sample_axis() (gammapy.utils.random.inversecdfsampler method)": [[343, "gammapy.utils.random.InverseCDFSampler.sample_axis", false]], "sample_background() (gammapy.datasets.mapdataseteventsampler method)": [[105, "gammapy.datasets.MapDatasetEventSampler.sample_background", false]], "sample_background() (gammapy.datasets.observationeventsampler method)": [[110, "gammapy.datasets.ObservationEventSampler.sample_background", false]], "sample_coord() (gammapy.irf.edispmap method)": [[156, "gammapy.irf.EDispMap.sample_coord", false]], "sample_coord() (gammapy.irf.psfmap method)": [[167, "gammapy.irf.PSFMap.sample_coord", false]], "sample_coord() (gammapy.irf.recopsfmap method)": [[170, "gammapy.irf.RecoPSFMap.sample_coord", false]], "sample_coord() (gammapy.maps.hpxmap method)": [[197, "gammapy.maps.HpxMap.sample_coord", false]], "sample_coord() (gammapy.maps.hpxndmap method)": [[198, "gammapy.maps.HpxNDMap.sample_coord", false]], "sample_coord() (gammapy.maps.map method)": [[200, "gammapy.maps.Map.sample_coord", false]], "sample_coord() (gammapy.maps.regionndmap method)": [[206, "gammapy.maps.RegionNDMap.sample_coord", false]], "sample_coord() (gammapy.maps.wcsmap method)": [[209, "gammapy.maps.WcsMap.sample_coord", false]], "sample_coord() (gammapy.maps.wcsndmap method)": [[210, "gammapy.maps.WcsNDMap.sample_coord", false]], "sample_edisp() (gammapy.datasets.mapdataseteventsampler method)": [[105, "gammapy.datasets.MapDatasetEventSampler.sample_edisp", false]], "sample_edisp() (gammapy.datasets.observationeventsampler method)": [[110, "gammapy.datasets.ObservationEventSampler.sample_edisp", false]], "sample_powerlaw() (in module gammapy.utils.random)": [[348, "gammapy.utils.random.sample_powerlaw", false]], "sample_psf() (gammapy.datasets.mapdataseteventsampler method)": [[105, "gammapy.datasets.MapDatasetEventSampler.sample_psf", false]], "sample_psf() (gammapy.datasets.observationeventsampler method)": [[110, "gammapy.datasets.ObservationEventSampler.sample_psf", false]], "sample_sources() (gammapy.datasets.mapdataseteventsampler method)": [[105, "gammapy.datasets.MapDatasetEventSampler.sample_sources", false]], "sample_sources() (gammapy.datasets.observationeventsampler method)": [[110, "gammapy.datasets.ObservationEventSampler.sample_sources", false]], "sample_sphere() (in module gammapy.utils.random)": [[349, "gammapy.utils.random.sample_sphere", false]], "sample_sphere_distance() (in module gammapy.utils.random)": [[350, "gammapy.utils.random.sample_sphere_distance", false]], "sample_time() (gammapy.modeling.models.constanttemporalmodel method)": [[229, "gammapy.modeling.models.ConstantTemporalModel.sample_time", false]], "sample_time() (gammapy.modeling.models.expdecaytemporalmodel method)": [[237, "gammapy.modeling.models.ExpDecayTemporalModel.sample_time", false]], "sample_time() (gammapy.modeling.models.gaussiantemporalmodel method)": [[242, "gammapy.modeling.models.GaussianTemporalModel.sample_time", false]], "sample_time() (gammapy.modeling.models.generalizedgaussiantemporalmodel method)": [[244, "gammapy.modeling.models.GeneralizedGaussianTemporalModel.sample_time", false]], "sample_time() (gammapy.modeling.models.lightcurvetemplatetemporalmodel method)": [[245, "gammapy.modeling.models.LightCurveTemplateTemporalModel.sample_time", false]], "sample_time() (gammapy.modeling.models.lineartemporalmodel method)": [[246, "gammapy.modeling.models.LinearTemporalModel.sample_time", false]], "sample_time() (gammapy.modeling.models.powerlawtemporalmodel method)": [[262, "gammapy.modeling.models.PowerLawTemporalModel.sample_time", false]], "sample_time() (gammapy.modeling.models.sinetemporalmodel method)": [[269, "gammapy.modeling.models.SineTemporalModel.sample_time", false]], "sample_time() (gammapy.modeling.models.templatephasecurvetemporalmodel method)": [[281, "gammapy.modeling.models.TemplatePhaseCurveTemporalModel.sample_time", false]], "sample_time() (gammapy.modeling.models.temporalmodel method)": [[284, "gammapy.modeling.models.TemporalModel.sample_time", false]], "sample_times() (in module gammapy.utils.random)": [[351, "gammapy.utils.random.sample_times", false]], "sampler (class in gammapy.modeling)": [[222, "gammapy.modeling.Sampler", false]], "sampler_ultranest() (gammapy.modeling.sampler method)": [[222, "gammapy.modeling.Sampler.sampler_ultranest", false]], "samplerresult (class in gammapy.modeling)": [[223, "gammapy.modeling.SamplerResult", false]], "scale (gammapy.astro.darkmatter.darkmatterannihilationspectralmodel attribute)": [[19, "gammapy.astro.darkmatter.DarkMatterAnnihilationSpectralModel.scale", false]], "scale (gammapy.astro.darkmatter.darkmatterdecayspectralmodel attribute)": [[20, "gammapy.astro.darkmatter.DarkMatterDecaySpectralModel.scale", false]], "scale (gammapy.modeling.parameter attribute)": [[218, "gammapy.modeling.Parameter.scale", false]], "scale (gammapy.modeling.priorparameter attribute)": [[220, "gammapy.modeling.PriorParameter.scale", false]], "scale_method (gammapy.modeling.parameter attribute)": [[218, "gammapy.modeling.Parameter.scale_method", false]], "scale_method (gammapy.modeling.priorparameter attribute)": [[220, "gammapy.modeling.PriorParameter.scale_method", false]], "scale_plot_flux() (in module gammapy.modeling.models)": [[291, "gammapy.modeling.models.scale_plot_flux", false]], "scale_to_local_density() (gammapy.astro.darkmatter.burkertprofile method)": [[17, "gammapy.astro.darkmatter.BurkertProfile.scale_to_local_density", false]], "scale_to_local_density() (gammapy.astro.darkmatter.dmprofile method)": [[18, "gammapy.astro.darkmatter.DMProfile.scale_to_local_density", false]], "scale_to_local_density() (gammapy.astro.darkmatter.einastoprofile method)": [[21, "gammapy.astro.darkmatter.EinastoProfile.scale_to_local_density", false]], "scale_to_local_density() (gammapy.astro.darkmatter.isothermalprofile method)": [[22, "gammapy.astro.darkmatter.IsothermalProfile.scale_to_local_density", false]], "scale_to_local_density() (gammapy.astro.darkmatter.mooreprofile method)": [[24, "gammapy.astro.darkmatter.MooreProfile.scale_to_local_density", false]], "scale_to_local_density() (gammapy.astro.darkmatter.nfwprofile method)": [[25, "gammapy.astro.darkmatter.NFWProfile.scale_to_local_density", false]], "scale_to_local_density() (gammapy.astro.darkmatter.zhaoprofile method)": [[27, "gammapy.astro.darkmatter.ZhaoProfile.scale_to_local_density", false]], "scale_transform (gammapy.modeling.parameter attribute)": [[218, "gammapy.modeling.Parameter.scale_transform", false]], "scale_transform (gammapy.modeling.priorparameter attribute)": [[220, "gammapy.modeling.PriorParameter.scale_transform", false]], "scaledregulargridinterpolator (class in gammapy.utils.interpolation)": [[333, "gammapy.utils.interpolation.ScaledRegularGridInterpolator", false]], "scalespectralmodel (class in gammapy.modeling.models)": [[266, "gammapy.modeling.models.ScaleSpectralModel", false]], "scan_max (gammapy.modeling.parameter attribute)": [[218, "gammapy.modeling.Parameter.scan_max", false]], "scan_max (gammapy.modeling.priorparameter attribute)": [[220, "gammapy.modeling.PriorParameter.scan_max", false]], "scan_min (gammapy.modeling.parameter attribute)": [[218, "gammapy.modeling.Parameter.scan_min", false]], "scan_min (gammapy.modeling.priorparameter attribute)": [[220, "gammapy.modeling.PriorParameter.scan_min", false]], "scan_n_sigma (gammapy.modeling.parameter attribute)": [[218, "gammapy.modeling.Parameter.scan_n_sigma", false]], "scan_n_sigma (gammapy.modeling.priorparameter attribute)": [[220, "gammapy.modeling.PriorParameter.scan_n_sigma", false]], "scan_values (gammapy.modeling.parameter attribute)": [[218, "gammapy.modeling.Parameter.scan_values", false]], "scan_values (gammapy.modeling.priorparameter attribute)": [[220, "gammapy.modeling.PriorParameter.scan_values", false]], "schema() (gammapy.analysis.analysisconfig class method)": [[16, "gammapy.analysis.AnalysisConfig.schema", false]], "schema() (gammapy.data.eventlistmetadata class method)": [[84, "gammapy.data.EventListMetaData.schema", false]], "schema() (gammapy.data.gtimetadata class method)": [[87, "gammapy.data.GTIMetaData.schema", false]], "schema() (gammapy.data.observationmetadata class method)": [[91, "gammapy.data.ObservationMetaData.schema", false]], "schema() (gammapy.datasets.mapdatasetmetadata class method)": [[106, "gammapy.datasets.MapDatasetMetaData.schema", false]], "schema() (gammapy.estimators.fluxmetadata class method)": [[127, "gammapy.estimators.FluxMetaData.schema", false]], "schema_json() (gammapy.analysis.analysisconfig class method)": [[16, "gammapy.analysis.AnalysisConfig.schema_json", false]], "schema_json() (gammapy.data.eventlistmetadata class method)": [[84, "gammapy.data.EventListMetaData.schema_json", false]], "schema_json() (gammapy.data.gtimetadata class method)": [[87, "gammapy.data.GTIMetaData.schema_json", false]], "schema_json() (gammapy.data.observationmetadata class method)": [[91, "gammapy.data.ObservationMetaData.schema_json", false]], "schema_json() (gammapy.datasets.mapdatasetmetadata class method)": [[106, "gammapy.datasets.MapDatasetMetaData.schema_json", false]], "schema_json() (gammapy.estimators.fluxmetadata class method)": [[127, "gammapy.estimators.FluxMetaData.schema_json", false]], "scipy_mvn (gammapy.modeling.covariance attribute)": [[213, "gammapy.modeling.Covariance.scipy_mvn", false]], "sed": [[608, "term-SED", true]], "sed_type_init (gammapy.estimators.fluxmaps attribute)": [[126, "gammapy.estimators.FluxMaps.sed_type_init", false]], "sed_type_init (gammapy.estimators.fluxpoints attribute)": [[128, "gammapy.estimators.FluxPoints.sed_type_init", false]], "sed_type_plot_default (gammapy.estimators.fluxmaps attribute)": [[126, "gammapy.estimators.FluxMaps.sed_type_plot_default", false]], "sed_type_plot_default (gammapy.estimators.fluxpoints attribute)": [[128, "gammapy.estimators.FluxPoints.sed_type_plot_default", false]], "sedov_taylor_begin (gammapy.astro.source.snr attribute)": [[52, "gammapy.astro.source.SNR.sedov_taylor_begin", false]], "sedov_taylor_begin (gammapy.astro.source.snrtruelovemckee attribute)": [[53, "gammapy.astro.source.SNRTrueloveMcKee.sedov_taylor_begin", false]], "sedov_taylor_end (gammapy.astro.source.snr attribute)": [[52, "gammapy.astro.source.SNR.sedov_taylor_end", false]], "sedov_taylor_end (gammapy.astro.source.snrtruelovemckee attribute)": [[53, "gammapy.astro.source.SNRTrueloveMcKee.sedov_taylor_end", false]], "select() (gammapy.modeling.models.datasetmodels method)": [[230, "gammapy.modeling.models.DatasetModels.select", false]], "select() (gammapy.modeling.models.models method)": [[254, "gammapy.modeling.models.Models.select", false]], "select() (gammapy.modeling.parameters method)": [[219, "gammapy.modeling.Parameters.select", false]], "select() (gammapy.modeling.priorparameters method)": [[221, "gammapy.modeling.PriorParameters.select", false]], "select_energy() (gammapy.data.eventlist method)": [[83, "gammapy.data.EventList.select_energy", false]], "select_from_geom() (gammapy.modeling.models.datasetmodels method)": [[230, "gammapy.modeling.models.DatasetModels.select_from_geom", false]], "select_from_geom() (gammapy.modeling.models.models method)": [[254, "gammapy.modeling.models.Models.select_from_geom", false]], "select_mask() (gammapy.data.eventlist method)": [[83, "gammapy.data.EventList.select_mask", false]], "select_mask() (gammapy.modeling.models.datasetmodels method)": [[230, "gammapy.modeling.models.DatasetModels.select_mask", false]], "select_mask() (gammapy.modeling.models.models method)": [[254, "gammapy.modeling.models.Models.select_mask", false]], "select_nested_models() (in module gammapy.modeling)": [[293, "gammapy.modeling.select_nested_models", false]], "select_obs_id() (gammapy.data.observationtable method)": [[92, "gammapy.data.ObservationTable.select_obs_id", false]], "select_observations() (gammapy.data.observationtable method)": [[92, "gammapy.data.ObservationTable.select_observations", false]], "select_offset() (gammapy.data.eventlist method)": [[83, "gammapy.data.EventList.select_offset", false]], "select_parameter() (gammapy.data.eventlist method)": [[83, "gammapy.data.EventList.select_parameter", false]], "select_rad_max() (gammapy.data.eventlist method)": [[83, "gammapy.data.EventList.select_rad_max", false]], "select_range() (gammapy.data.observationtable method)": [[92, "gammapy.data.ObservationTable.select_range", false]], "select_region() (gammapy.data.eventlist method)": [[83, "gammapy.data.EventList.select_region", false]], "select_region() (gammapy.modeling.models.datasetmodels method)": [[230, "gammapy.modeling.models.DatasetModels.select_region", false]], "select_region() (gammapy.modeling.models.models method)": [[254, "gammapy.modeling.models.Models.select_region", false]], "select_row_subset() (gammapy.data.eventlist method)": [[83, "gammapy.data.EventList.select_row_subset", false]], "select_sky_circle() (gammapy.data.observationtable method)": [[92, "gammapy.data.ObservationTable.select_sky_circle", false]], "select_time() (gammapy.data.eventlist method)": [[83, "gammapy.data.EventList.select_time", false]], "select_time() (gammapy.data.gti method)": [[86, "gammapy.data.GTI.select_time", false]], "select_time() (gammapy.data.observation method)": [[89, "gammapy.data.Observation.select_time", false]], "select_time() (gammapy.data.observations method)": [[93, "gammapy.data.Observations.select_time", false]], "select_time() (gammapy.datasets.datasets method)": [[101, "gammapy.datasets.Datasets.select_time", false]], "select_time_range() (gammapy.data.observationtable method)": [[92, "gammapy.data.ObservationTable.select_time_range", false]], "selection_all (gammapy.estimators.tsmapestimator attribute)": [[137, "gammapy.estimators.TSMapEstimator.selection_all", false]], "selection_all() (gammapy.estimators.asmoothmapestimator method)": [[121, "gammapy.estimators.ASmoothMapEstimator.selection_all", false]], "selection_mask() (gammapy.modeling.models.datasetmodels method)": [[230, "gammapy.modeling.models.DatasetModels.selection_mask", false]], "selection_mask() (gammapy.modeling.models.models method)": [[254, "gammapy.modeling.models.Models.selection_mask", false]], "selection_optional (gammapy.estimators.asmoothmapestimator attribute)": [[121, "gammapy.estimators.ASmoothMapEstimator.selection_optional", false]], "selection_optional (gammapy.estimators.energydependentmorphologyestimator attribute)": [[123, "gammapy.estimators.EnergyDependentMorphologyEstimator.selection_optional", false]], "selection_optional (gammapy.estimators.estimator attribute)": [[124, "gammapy.estimators.Estimator.selection_optional", false]], "selection_optional (gammapy.estimators.excessmapestimator attribute)": [[125, "gammapy.estimators.ExcessMapEstimator.selection_optional", false]], "selection_optional (gammapy.estimators.fluxpointsestimator attribute)": [[129, "gammapy.estimators.FluxPointsEstimator.selection_optional", false]], "selection_optional (gammapy.estimators.fluxprofileestimator attribute)": [[130, "gammapy.estimators.FluxProfileEstimator.selection_optional", false]], "selection_optional (gammapy.estimators.imageprofileestimator attribute)": [[132, "gammapy.estimators.ImageProfileEstimator.selection_optional", false]], "selection_optional (gammapy.estimators.lightcurveestimator attribute)": [[133, "gammapy.estimators.LightCurveEstimator.selection_optional", false]], "selection_optional (gammapy.estimators.parameterestimator attribute)": [[134, "gammapy.estimators.ParameterEstimator.selection_optional", false]], "selection_optional (gammapy.estimators.sensitivityestimator attribute)": [[136, "gammapy.estimators.SensitivityEstimator.selection_optional", false]], "selection_optional (gammapy.estimators.tsmapestimator attribute)": [[137, "gammapy.estimators.TSMapEstimator.selection_optional", false]], "sensitivityestimator (class in gammapy.estimators)": [[136, "gammapy.estimators.SensitivityEstimator", false]], "separable (gammapy.astro.population.casebattacharya1998 attribute)": [[28, "gammapy.astro.population.CaseBattacharya1998.separable", false]], "separable (gammapy.astro.population.exponential attribute)": [[29, "gammapy.astro.population.Exponential.separable", false]], "separable (gammapy.astro.population.faucherkaspi2006 attribute)": [[30, "gammapy.astro.population.FaucherKaspi2006.separable", false]], "separable (gammapy.astro.population.faucherkaspi2006velocitybimodal attribute)": [[31, "gammapy.astro.population.FaucherKaspi2006VelocityBimodal.separable", false]], "separable (gammapy.astro.population.faucherkaspi2006velocitymaxwellian attribute)": [[32, "gammapy.astro.population.FaucherKaspi2006VelocityMaxwellian.separable", false]], "separable (gammapy.astro.population.lorimer2006 attribute)": [[35, "gammapy.astro.population.Lorimer2006.separable", false]], "separable (gammapy.astro.population.paczynski1990 attribute)": [[36, "gammapy.astro.population.Paczynski1990.separable", false]], "separable (gammapy.astro.population.paczynski1990velocity attribute)": [[37, "gammapy.astro.population.Paczynski1990Velocity.separable", false]], "separable (gammapy.astro.population.yusifovkucuk2004 attribute)": [[39, "gammapy.astro.population.YusifovKucuk2004.separable", false]], "separable (gammapy.astro.population.yusifovkucuk2004b attribute)": [[40, "gammapy.astro.population.YusifovKucuk2004B.separable", false]], "separation() (gammapy.maps.hpxgeom method)": [[196, "gammapy.maps.HpxGeom.separation", false]], "separation() (gammapy.maps.regiongeom method)": [[205, "gammapy.maps.RegionGeom.separation", false]], "separation() (gammapy.maps.wcsgeom method)": [[208, "gammapy.maps.WcsGeom.separation", false]], "separation() (gammapy.utils.coordinates.fovaltazframe method)": [[320, "gammapy.utils.coordinates.FoVAltAzFrame.separation", false]], "separation() (gammapy.utils.coordinates.fovicrsframe method)": [[321, "gammapy.utils.coordinates.FoVICRSFrame.separation", false]], "separation_3d() (gammapy.utils.coordinates.fovaltazframe method)": [[320, "gammapy.utils.coordinates.FoVAltAzFrame.separation_3d", false]], "separation_3d() (gammapy.utils.coordinates.fovicrsframe method)": [[321, "gammapy.utils.coordinates.FoVICRSFrame.separation_3d", false]], "set_by_coord() (gammapy.maps.hpxmap method)": [[197, "gammapy.maps.HpxMap.set_by_coord", false]], "set_by_coord() (gammapy.maps.hpxndmap method)": [[198, "gammapy.maps.HpxNDMap.set_by_coord", false]], "set_by_coord() (gammapy.maps.map method)": [[200, "gammapy.maps.Map.set_by_coord", false]], "set_by_coord() (gammapy.maps.regionndmap method)": [[206, "gammapy.maps.RegionNDMap.set_by_coord", false]], "set_by_coord() (gammapy.maps.wcsmap method)": [[209, "gammapy.maps.WcsMap.set_by_coord", false]], "set_by_coord() (gammapy.maps.wcsndmap method)": [[210, "gammapy.maps.WcsNDMap.set_by_coord", false]], "set_by_idx() (gammapy.maps.hpxmap method)": [[197, "gammapy.maps.HpxMap.set_by_idx", false]], "set_by_idx() (gammapy.maps.hpxndmap method)": [[198, "gammapy.maps.HpxNDMap.set_by_idx", false]], "set_by_idx() (gammapy.maps.map method)": [[200, "gammapy.maps.Map.set_by_idx", false]], "set_by_idx() (gammapy.maps.regionndmap method)": [[206, "gammapy.maps.RegionNDMap.set_by_idx", false]], "set_by_idx() (gammapy.maps.wcsmap method)": [[209, "gammapy.maps.WcsMap.set_by_idx", false]], "set_by_idx() (gammapy.maps.wcsndmap method)": [[210, "gammapy.maps.WcsNDMap.set_by_idx", false]], "set_by_pix() (gammapy.maps.hpxmap method)": [[197, "gammapy.maps.HpxMap.set_by_pix", false]], "set_by_pix() (gammapy.maps.hpxndmap method)": [[198, "gammapy.maps.HpxNDMap.set_by_pix", false]], "set_by_pix() (gammapy.maps.map method)": [[200, "gammapy.maps.Map.set_by_pix", false]], "set_by_pix() (gammapy.maps.regionndmap method)": [[206, "gammapy.maps.RegionNDMap.set_by_pix", false]], "set_by_pix() (gammapy.maps.wcsmap method)": [[209, "gammapy.maps.WcsMap.set_by_pix", false]], "set_by_pix() (gammapy.maps.wcsndmap method)": [[210, "gammapy.maps.WcsNDMap.set_by_pix", false]], "set_lim() (gammapy.modeling.parameter method)": [[218, "gammapy.modeling.Parameter.set_lim", false]], "set_lim() (gammapy.modeling.priorparameter method)": [[220, "gammapy.modeling.PriorParameter.set_lim", false]], "set_logging() (gammapy.analysis.analysisconfig method)": [[16, "gammapy.analysis.AnalysisConfig.set_logging", false]], "set_models() (gammapy.analysis.analysis method)": [[15, "gammapy.analysis.Analysis.set_models", false]], "set_parameter_factors() (gammapy.modeling.parameters method)": [[219, "gammapy.modeling.Parameters.set_parameter_factors", false]], "set_parameter_factors() (gammapy.modeling.priorparameters method)": [[221, "gammapy.modeling.PriorParameters.set_parameter_factors", false]], "set_parameters_bounds() (gammapy.modeling.models.datasetmodels method)": [[230, "gammapy.modeling.models.DatasetModels.set_parameters_bounds", false]], "set_parameters_bounds() (gammapy.modeling.models.models method)": [[254, "gammapy.modeling.models.Models.set_parameters_bounds", false]], "set_prior() (gammapy.modeling.models.models method)": [[254, "gammapy.modeling.models.Models.set_prior", false]], "set_representation_cls() (gammapy.utils.coordinates.fovaltazframe method)": [[320, "gammapy.utils.coordinates.FoVAltAzFrame.set_representation_cls", false]], "set_representation_cls() (gammapy.utils.coordinates.fovicrsframe method)": [[321, "gammapy.utils.coordinates.FoVICRSFrame.set_representation_cls", false]], "set_slice_args() (gammapy.astro.population.casebattacharya1998 method)": [[28, "gammapy.astro.population.CaseBattacharya1998.set_slice_args", false]], "set_slice_args() (gammapy.astro.population.exponential method)": [[29, "gammapy.astro.population.Exponential.set_slice_args", false]], "set_slice_args() (gammapy.astro.population.faucherkaspi2006 method)": [[30, "gammapy.astro.population.FaucherKaspi2006.set_slice_args", false]], "set_slice_args() (gammapy.astro.population.faucherkaspi2006velocitybimodal method)": [[31, "gammapy.astro.population.FaucherKaspi2006VelocityBimodal.set_slice_args", false]], "set_slice_args() (gammapy.astro.population.faucherkaspi2006velocitymaxwellian method)": [[32, "gammapy.astro.population.FaucherKaspi2006VelocityMaxwellian.set_slice_args", false]], "set_slice_args() (gammapy.astro.population.lorimer2006 method)": [[35, "gammapy.astro.population.Lorimer2006.set_slice_args", false]], "set_slice_args() (gammapy.astro.population.paczynski1990 method)": [[36, "gammapy.astro.population.Paczynski1990.set_slice_args", false]], "set_slice_args() (gammapy.astro.population.paczynski1990velocity method)": [[37, "gammapy.astro.population.Paczynski1990Velocity.set_slice_args", false]], "set_slice_args() (gammapy.astro.population.yusifovkucuk2004 method)": [[39, "gammapy.astro.population.YusifovKucuk2004.set_slice_args", false]], "set_slice_args() (gammapy.astro.population.yusifovkucuk2004b method)": [[40, "gammapy.astro.population.YusifovKucuk2004B.set_slice_args", false]], "set_subcovariance() (gammapy.modeling.covariance method)": [[213, "gammapy.modeling.Covariance.set_subcovariance", false]], "setdefault() (gammapy.maps.maps method)": [[204, "gammapy.maps.Maps.setdefault", false]], "shape (gammapy.maps.mapaxes attribute)": [[201, "gammapy.maps.MapAxes.shape", false]], "shape (gammapy.maps.mapcoord attribute)": [[203, "gammapy.maps.MapCoord.shape", false]], "shape (gammapy.modeling.covariance attribute)": [[213, "gammapy.modeling.Covariance.shape", false]], "shape (gammapy.utils.coordinates.fovaltazframe attribute)": [[320, "gammapy.utils.coordinates.FoVAltAzFrame.shape", false]], "shape (gammapy.utils.coordinates.fovicrsframe attribute)": [[321, "gammapy.utils.coordinates.FoVICRSFrame.shape", false]], "shape_axes (gammapy.maps.hpxgeom attribute)": [[196, "gammapy.maps.HpxGeom.shape_axes", false]], "shape_axes (gammapy.maps.wcsgeom attribute)": [[208, "gammapy.maps.WcsGeom.shape_axes", false]], "shell2spatialmodel (class in gammapy.modeling.models)": [[267, "gammapy.modeling.models.Shell2SpatialModel", false]], "shellspatialmodel (class in gammapy.modeling.models)": [[268, "gammapy.modeling.models.ShellSpatialModel", false]], "show_in_browser() (gammapy.data.hduindextable method)": [[88, "gammapy.data.HDUIndexTable.show_in_browser", false]], "show_in_browser() (gammapy.data.observationtable method)": [[92, "gammapy.data.ObservationTable.show_in_browser", false]], "show_in_notebook() (gammapy.data.hduindextable method)": [[88, "gammapy.data.HDUIndexTable.show_in_notebook", false]], "show_in_notebook() (gammapy.data.observationtable method)": [[92, "gammapy.data.ObservationTable.show_in_notebook", false]], "sigma (gammapy.astro.population.faucherkaspi2006 attribute)": [[30, "gammapy.astro.population.FaucherKaspi2006.sigma", false]], "sigma (gammapy.astro.population.faucherkaspi2006velocitymaxwellian attribute)": [[32, "gammapy.astro.population.FaucherKaspi2006VelocityMaxwellian.sigma", false]], "sigma (gammapy.modeling.models.gaussianprior attribute)": [[239, "gammapy.modeling.models.GaussianPrior.sigma", false]], "sigma (gammapy.modeling.models.gaussianspatialmodel attribute)": [[240, "gammapy.modeling.models.GaussianSpatialModel.sigma", false]], "sigma (gammapy.modeling.models.gaussianspectralmodel attribute)": [[241, "gammapy.modeling.models.GaussianSpectralModel.sigma", false]], "sigma (gammapy.modeling.models.gaussiantemporalmodel attribute)": [[242, "gammapy.modeling.models.GaussianTemporalModel.sigma", false]], "sigma_1 (gammapy.astro.population.faucherkaspi2006velocitybimodal attribute)": [[31, "gammapy.astro.population.FaucherKaspi2006VelocityBimodal.sigma_1", false]], "sigma_2 (gammapy.astro.population.faucherkaspi2006velocitybimodal attribute)": [[31, "gammapy.astro.population.FaucherKaspi2006VelocityBimodal.sigma_2", false]], "sigma_to_ts() (in module gammapy.stats)": [[312, "gammapy.stats.sigma_to_ts", false]], "simplepulsar (class in gammapy.astro.source)": [[54, "gammapy.astro.source.SimplePulsar", false]], "simulate_observation() (gammapy.data.observationseventssampler method)": [[94, "gammapy.data.ObservationsEventsSampler.simulate_observation", false]], "sinetemporalmodel (class in gammapy.modeling.models)": [[269, "gammapy.modeling.models.SineTemporalModel", false]], "size (gammapy.maps.mapcoord attribute)": [[203, "gammapy.maps.MapCoord.size", false]], "size (gammapy.utils.coordinates.fovaltazframe attribute)": [[320, "gammapy.utils.coordinates.FoVAltAzFrame.size", false]], "size (gammapy.utils.coordinates.fovicrsframe attribute)": [[321, "gammapy.utils.coordinates.FoVICRSFrame.size", false]], "sky_model() (gammapy.catalog.sourcecatalogobject1lhaaso method)": [[70, "gammapy.catalog.SourceCatalogObject1LHAASO.sky_model", false]], "sky_model() (gammapy.catalog.sourcecatalogobject2fhl method)": [[71, "gammapy.catalog.SourceCatalogObject2FHL.sky_model", false]], "sky_model() (gammapy.catalog.sourcecatalogobject2hwc method)": [[72, "gammapy.catalog.SourceCatalogObject2HWC.sky_model", false]], "sky_model() (gammapy.catalog.sourcecatalogobject2pc method)": [[73, "gammapy.catalog.SourceCatalogObject2PC.sky_model", false]], "sky_model() (gammapy.catalog.sourcecatalogobject3fgl method)": [[74, "gammapy.catalog.SourceCatalogObject3FGL.sky_model", false]], "sky_model() (gammapy.catalog.sourcecatalogobject3fhl method)": [[75, "gammapy.catalog.SourceCatalogObject3FHL.sky_model", false]], "sky_model() (gammapy.catalog.sourcecatalogobject3hwc method)": [[76, "gammapy.catalog.SourceCatalogObject3HWC.sky_model", false]], "sky_model() (gammapy.catalog.sourcecatalogobject3pc method)": [[77, "gammapy.catalog.SourceCatalogObject3PC.sky_model", false]], "sky_model() (gammapy.catalog.sourcecatalogobject4fgl method)": [[78, "gammapy.catalog.SourceCatalogObject4FGL.sky_model", false]], "sky_model() (gammapy.catalog.sourcecatalogobjectgammacat method)": [[79, "gammapy.catalog.SourceCatalogObjectGammaCat.sky_model", false]], "sky_model() (gammapy.catalog.sourcecatalogobjecthgps method)": [[80, "gammapy.catalog.SourceCatalogObjectHGPS.sky_model", false]], "sky_to_fov() (in module gammapy.utils.coordinates)": [[327, "gammapy.utils.coordinates.sky_to_fov", false]], "skycoord (gammapy.maps.mapcoord attribute)": [[203, "gammapy.maps.MapCoord.skycoord", false]], "skymodel (class in gammapy.modeling.models)": [[270, "gammapy.modeling.models.SkyModel", false]], "slice() (gammapy.maps.labelmapaxis method)": [[199, "gammapy.maps.LabelMapAxis.slice", false]], "slice() (gammapy.maps.mapaxis method)": [[202, "gammapy.maps.MapAxis.slice", false]], "slice() (gammapy.maps.timemapaxis method)": [[207, "gammapy.maps.TimeMapAxis.slice", false]], "slice_by_coord() (gammapy.estimators.fluxmaps method)": [[126, "gammapy.estimators.FluxMaps.slice_by_coord", false]], "slice_by_coord() (gammapy.estimators.fluxpoints method)": [[128, "gammapy.estimators.FluxPoints.slice_by_coord", false]], "slice_by_energy() (gammapy.datasets.datasets method)": [[101, "gammapy.datasets.Datasets.slice_by_energy", false]], "slice_by_energy() (gammapy.datasets.mapdataset method)": [[104, "gammapy.datasets.MapDataset.slice_by_energy", false]], "slice_by_energy() (gammapy.datasets.mapdatasetonoff method)": [[107, "gammapy.datasets.MapDatasetOnOff.slice_by_energy", false]], "slice_by_energy() (gammapy.datasets.spectrumdataset method)": [[111, "gammapy.datasets.SpectrumDataset.slice_by_energy", false]], "slice_by_energy() (gammapy.datasets.spectrumdatasetonoff method)": [[112, "gammapy.datasets.SpectrumDatasetOnOff.slice_by_energy", false]], "slice_by_energy() (gammapy.estimators.fluxmaps method)": [[126, "gammapy.estimators.FluxMaps.slice_by_energy", false]], "slice_by_energy() (gammapy.estimators.fluxpoints method)": [[128, "gammapy.estimators.FluxPoints.slice_by_energy", false]], "slice_by_energy() (gammapy.modeling.models.templatenpredmodel method)": [[280, "gammapy.modeling.models.TemplateNPredModel.slice_by_energy", false]], "slice_by_idx() (gammapy.datasets.mapdataset method)": [[104, "gammapy.datasets.MapDataset.slice_by_idx", false]], "slice_by_idx() (gammapy.datasets.mapdatasetonoff method)": [[107, "gammapy.datasets.MapDatasetOnOff.slice_by_idx", false]], "slice_by_idx() (gammapy.datasets.spectrumdataset method)": [[111, "gammapy.datasets.SpectrumDataset.slice_by_idx", false]], "slice_by_idx() (gammapy.datasets.spectrumdatasetonoff method)": [[112, "gammapy.datasets.SpectrumDatasetOnOff.slice_by_idx", false]], "slice_by_idx() (gammapy.estimators.fluxmaps method)": [[126, "gammapy.estimators.FluxMaps.slice_by_idx", false]], "slice_by_idx() (gammapy.estimators.fluxpoints method)": [[128, "gammapy.estimators.FluxPoints.slice_by_idx", false]], "slice_by_idx() (gammapy.irf.background2d method)": [[151, "gammapy.irf.Background2D.slice_by_idx", false]], "slice_by_idx() (gammapy.irf.background3d method)": [[152, "gammapy.irf.Background3D.slice_by_idx", false]], "slice_by_idx() (gammapy.irf.backgroundirf method)": [[153, "gammapy.irf.BackgroundIRF.slice_by_idx", false]], "slice_by_idx() (gammapy.irf.edispkernel method)": [[154, "gammapy.irf.EDispKernel.slice_by_idx", false]], "slice_by_idx() (gammapy.irf.edispkernelmap method)": [[155, "gammapy.irf.EDispKernelMap.slice_by_idx", false]], "slice_by_idx() (gammapy.irf.edispmap method)": [[156, "gammapy.irf.EDispMap.slice_by_idx", false]], "slice_by_idx() (gammapy.irf.effectiveareatable2d method)": [[157, "gammapy.irf.EffectiveAreaTable2D.slice_by_idx", false]], "slice_by_idx() (gammapy.irf.energydependentmultigausspsf method)": [[158, "gammapy.irf.EnergyDependentMultiGaussPSF.slice_by_idx", false]], "slice_by_idx() (gammapy.irf.energydispersion2d method)": [[159, "gammapy.irf.EnergyDispersion2D.slice_by_idx", false]], "slice_by_idx() (gammapy.irf.irf method)": [[161, "gammapy.irf.IRF.slice_by_idx", false]], "slice_by_idx() (gammapy.irf.irfmap method)": [[162, "gammapy.irf.IRFMap.slice_by_idx", false]], "slice_by_idx() (gammapy.irf.parametricpsf method)": [[168, "gammapy.irf.ParametricPSF.slice_by_idx", false]], "slice_by_idx() (gammapy.irf.psf3d method)": [[164, "gammapy.irf.PSF3D.slice_by_idx", false]], "slice_by_idx() (gammapy.irf.psfkernel method)": [[165, "gammapy.irf.PSFKernel.slice_by_idx", false]], "slice_by_idx() (gammapy.irf.psfking method)": [[166, "gammapy.irf.PSFKing.slice_by_idx", false]], "slice_by_idx() (gammapy.irf.psfmap method)": [[167, "gammapy.irf.PSFMap.slice_by_idx", false]], "slice_by_idx() (gammapy.irf.radmax2d method)": [[169, "gammapy.irf.RadMax2D.slice_by_idx", false]], "slice_by_idx() (gammapy.irf.recopsfmap method)": [[170, "gammapy.irf.RecoPSFMap.slice_by_idx", false]], "slice_by_idx() (gammapy.maps.geom method)": [[195, "gammapy.maps.Geom.slice_by_idx", false]], "slice_by_idx() (gammapy.maps.hpxgeom method)": [[196, "gammapy.maps.HpxGeom.slice_by_idx", false]], "slice_by_idx() (gammapy.maps.hpxmap method)": [[197, "gammapy.maps.HpxMap.slice_by_idx", false]], "slice_by_idx() (gammapy.maps.hpxndmap method)": [[198, "gammapy.maps.HpxNDMap.slice_by_idx", false]], "slice_by_idx() (gammapy.maps.map method)": [[200, "gammapy.maps.Map.slice_by_idx", false]], "slice_by_idx() (gammapy.maps.mapaxes method)": [[201, "gammapy.maps.MapAxes.slice_by_idx", false]], "slice_by_idx() (gammapy.maps.regiongeom method)": [[205, "gammapy.maps.RegionGeom.slice_by_idx", false]], "slice_by_idx() (gammapy.maps.regionndmap method)": [[206, "gammapy.maps.RegionNDMap.slice_by_idx", false]], "slice_by_idx() (gammapy.maps.wcsgeom method)": [[208, "gammapy.maps.WcsGeom.slice_by_idx", false]], "slice_by_idx() (gammapy.maps.wcsmap method)": [[209, "gammapy.maps.WcsMap.slice_by_idx", false]], "slice_by_idx() (gammapy.maps.wcsndmap method)": [[210, "gammapy.maps.WcsNDMap.slice_by_idx", false]], "slice_by_time() (gammapy.estimators.fluxmaps method)": [[126, "gammapy.estimators.FluxMaps.slice_by_time", false]], "slice_by_time() (gammapy.estimators.fluxpoints method)": [[128, "gammapy.estimators.FluxPoints.slice_by_time", false]], "smooth() (gammapy.estimators.imageprofile method)": [[131, "gammapy.estimators.ImageProfile.smooth", false]], "smooth() (gammapy.maps.hpxndmap method)": [[198, "gammapy.maps.HpxNDMap.smooth", false]], "smooth() (gammapy.maps.wcsndmap method)": [[210, "gammapy.maps.WcsNDMap.smooth", false]], "smoothbrokenpowerlawspectralmodel (class in gammapy.modeling.models)": [[271, "gammapy.modeling.models.SmoothBrokenPowerLawSpectralModel", false]], "snr (class in gammapy.astro.source)": [[52, "gammapy.astro.source.SNR", false]], "snrtruelovemckee (class in gammapy.astro.source)": [[53, "gammapy.astro.source.SNRTrueloveMcKee", false]], "solid_angle() (gammapy.maps.geom method)": [[195, "gammapy.maps.Geom.solid_angle", false]], "solid_angle() (gammapy.maps.hpxgeom method)": [[196, "gammapy.maps.HpxGeom.solid_angle", false]], "solid_angle() (gammapy.maps.regiongeom method)": [[205, "gammapy.maps.RegionGeom.solid_angle", false]], "solid_angle() (gammapy.maps.wcsgeom method)": [[208, "gammapy.maps.WcsGeom.solid_angle", false]], "sort() (gammapy.data.hduindextable method)": [[88, "gammapy.data.HDUIndexTable.sort", false]], "sort() (gammapy.data.observationtable method)": [[92, "gammapy.data.ObservationTable.sort", false]], "source_name() (gammapy.catalog.sourcecatalog method)": [[56, "gammapy.catalog.SourceCatalog.source_name", false]], "source_name() (gammapy.catalog.sourcecatalog1lhaaso method)": [[57, "gammapy.catalog.SourceCatalog1LHAASO.source_name", false]], "source_name() (gammapy.catalog.sourcecatalog2fhl method)": [[58, "gammapy.catalog.SourceCatalog2FHL.source_name", false]], "source_name() (gammapy.catalog.sourcecatalog2hwc method)": [[59, "gammapy.catalog.SourceCatalog2HWC.source_name", false]], "source_name() (gammapy.catalog.sourcecatalog2pc method)": [[60, "gammapy.catalog.SourceCatalog2PC.source_name", false]], "source_name() (gammapy.catalog.sourcecatalog3fgl method)": [[61, "gammapy.catalog.SourceCatalog3FGL.source_name", false]], "source_name() (gammapy.catalog.sourcecatalog3fhl method)": [[62, "gammapy.catalog.SourceCatalog3FHL.source_name", false]], "source_name() (gammapy.catalog.sourcecatalog3hwc method)": [[63, "gammapy.catalog.SourceCatalog3HWC.source_name", false]], "source_name() (gammapy.catalog.sourcecatalog3pc method)": [[64, "gammapy.catalog.SourceCatalog3PC.source_name", false]], "source_name() (gammapy.catalog.sourcecatalog4fgl method)": [[65, "gammapy.catalog.SourceCatalog4FGL.source_name", false]], "source_name() (gammapy.catalog.sourcecataloggammacat method)": [[66, "gammapy.catalog.SourceCatalogGammaCat.source_name", false]], "source_name() (gammapy.catalog.sourcecataloghgps method)": [[67, "gammapy.catalog.SourceCatalogHGPS.source_name", false]], "sourcecatalog (class in gammapy.catalog)": [[56, "gammapy.catalog.SourceCatalog", false]], "sourcecatalog1lhaaso (class in gammapy.catalog)": [[57, "gammapy.catalog.SourceCatalog1LHAASO", false]], "sourcecatalog2fhl (class in gammapy.catalog)": [[58, "gammapy.catalog.SourceCatalog2FHL", false]], "sourcecatalog2hwc (class in gammapy.catalog)": [[59, "gammapy.catalog.SourceCatalog2HWC", false]], "sourcecatalog2pc (class in gammapy.catalog)": [[60, "gammapy.catalog.SourceCatalog2PC", false]], "sourcecatalog3fgl (class in gammapy.catalog)": [[61, "gammapy.catalog.SourceCatalog3FGL", false]], "sourcecatalog3fhl (class in gammapy.catalog)": [[62, "gammapy.catalog.SourceCatalog3FHL", false]], "sourcecatalog3hwc (class in gammapy.catalog)": [[63, "gammapy.catalog.SourceCatalog3HWC", false]], "sourcecatalog3pc (class in gammapy.catalog)": [[64, "gammapy.catalog.SourceCatalog3PC", false]], "sourcecatalog4fgl (class in gammapy.catalog)": [[65, "gammapy.catalog.SourceCatalog4FGL", false]], "sourcecataloggammacat (class in gammapy.catalog)": [[66, "gammapy.catalog.SourceCatalogGammaCat", false]], "sourcecataloghgps (class in gammapy.catalog)": [[67, "gammapy.catalog.SourceCatalogHGPS", false]], "sourcecataloglargescalehgps (class in gammapy.catalog)": [[68, "gammapy.catalog.SourceCatalogLargeScaleHGPS", false]], "sourcecatalogobject (class in gammapy.catalog)": [[69, "gammapy.catalog.SourceCatalogObject", false]], "sourcecatalogobject1lhaaso (class in gammapy.catalog)": [[70, "gammapy.catalog.SourceCatalogObject1LHAASO", false]], "sourcecatalogobject2fhl (class in gammapy.catalog)": [[71, "gammapy.catalog.SourceCatalogObject2FHL", false]], "sourcecatalogobject2hwc (class in gammapy.catalog)": [[72, "gammapy.catalog.SourceCatalogObject2HWC", false]], "sourcecatalogobject2pc (class in gammapy.catalog)": [[73, "gammapy.catalog.SourceCatalogObject2PC", false]], "sourcecatalogobject3fgl (class in gammapy.catalog)": [[74, "gammapy.catalog.SourceCatalogObject3FGL", false]], "sourcecatalogobject3fhl (class in gammapy.catalog)": [[75, "gammapy.catalog.SourceCatalogObject3FHL", false]], "sourcecatalogobject3hwc (class in gammapy.catalog)": [[76, "gammapy.catalog.SourceCatalogObject3HWC", false]], "sourcecatalogobject3pc (class in gammapy.catalog)": [[77, "gammapy.catalog.SourceCatalogObject3PC", false]], "sourcecatalogobject4fgl (class in gammapy.catalog)": [[78, "gammapy.catalog.SourceCatalogObject4FGL", false]], "sourcecatalogobjectgammacat (class in gammapy.catalog)": [[79, "gammapy.catalog.SourceCatalogObjectGammaCat", false]], "sourcecatalogobjecthgps (class in gammapy.catalog)": [[80, "gammapy.catalog.SourceCatalogObjectHGPS", false]], "sourcecatalogobjecthgpscomponent (class in gammapy.catalog)": [[81, "gammapy.catalog.SourceCatalogObjectHGPSComponent", false]], "spatial_model (gammapy.modeling.models.fovbackgroundmodel attribute)": [[238, "gammapy.modeling.models.FoVBackgroundModel.spatial_model", false]], "spatial_model (gammapy.modeling.models.skymodel attribute)": [[270, "gammapy.modeling.models.SkyModel.spatial_model", false]], "spatial_model() (gammapy.catalog.sourcecatalogobject1lhaaso method)": [[70, "gammapy.catalog.SourceCatalogObject1LHAASO.spatial_model", false]], "spatial_model() (gammapy.catalog.sourcecatalogobject2fhl method)": [[71, "gammapy.catalog.SourceCatalogObject2FHL.spatial_model", false]], "spatial_model() (gammapy.catalog.sourcecatalogobject2hwc method)": [[72, "gammapy.catalog.SourceCatalogObject2HWC.spatial_model", false]], "spatial_model() (gammapy.catalog.sourcecatalogobject2pc method)": [[73, "gammapy.catalog.SourceCatalogObject2PC.spatial_model", false]], "spatial_model() (gammapy.catalog.sourcecatalogobject3fgl method)": [[74, "gammapy.catalog.SourceCatalogObject3FGL.spatial_model", false]], "spatial_model() (gammapy.catalog.sourcecatalogobject3fhl method)": [[75, "gammapy.catalog.SourceCatalogObject3FHL.spatial_model", false]], "spatial_model() (gammapy.catalog.sourcecatalogobject3hwc method)": [[76, "gammapy.catalog.SourceCatalogObject3HWC.spatial_model", false]], "spatial_model() (gammapy.catalog.sourcecatalogobject3pc method)": [[77, "gammapy.catalog.SourceCatalogObject3PC.spatial_model", false]], "spatial_model() (gammapy.catalog.sourcecatalogobject4fgl method)": [[78, "gammapy.catalog.SourceCatalogObject4FGL.spatial_model", false]], "spatial_model() (gammapy.catalog.sourcecatalogobjectgammacat method)": [[79, "gammapy.catalog.SourceCatalogObjectGammaCat.spatial_model", false]], "spatial_model() (gammapy.catalog.sourcecatalogobjecthgps method)": [[80, "gammapy.catalog.SourceCatalogObjectHGPS.spatial_model", false]], "spatial_model() (gammapy.catalog.sourcecatalogobjecthgpscomponent method)": [[81, "gammapy.catalog.SourceCatalogObjectHGPSComponent.spatial_model", false]], "spatial_model_registry (in module gammapy.modeling.models)": [[264, "gammapy.modeling.models.SPATIAL_MODEL_REGISTRY", false]], "spatialmodel (class in gammapy.modeling.models)": [[272, "gammapy.modeling.models.SpatialModel", false]], "spectral_index() (gammapy.astro.darkmatter.darkmatterannihilationspectralmodel method)": [[19, "gammapy.astro.darkmatter.DarkMatterAnnihilationSpectralModel.spectral_index", false]], "spectral_index() (gammapy.astro.darkmatter.darkmatterdecayspectralmodel method)": [[20, "gammapy.astro.darkmatter.DarkMatterDecaySpectralModel.spectral_index", false]], "spectral_index() (gammapy.astro.darkmatter.primaryflux method)": [[26, "gammapy.astro.darkmatter.PrimaryFlux.spectral_index", false]], "spectral_index() (gammapy.modeling.models.brokenpowerlawspectralmodel method)": [[224, "gammapy.modeling.models.BrokenPowerLawSpectralModel.spectral_index", false]], "spectral_index() (gammapy.modeling.models.compoundspectralmodel method)": [[225, "gammapy.modeling.models.CompoundSpectralModel.spectral_index", false]], "spectral_index() (gammapy.modeling.models.constantspectralmodel method)": [[228, "gammapy.modeling.models.ConstantSpectralModel.spectral_index", false]], "spectral_index() (gammapy.modeling.models.eblabsorptionnormspectralmodel method)": [[232, "gammapy.modeling.models.EBLAbsorptionNormSpectralModel.spectral_index", false]], "spectral_index() (gammapy.modeling.models.expcutoffpowerlaw3fglspectralmodel method)": [[234, "gammapy.modeling.models.ExpCutoffPowerLaw3FGLSpectralModel.spectral_index", false]], "spectral_index() (gammapy.modeling.models.expcutoffpowerlawnormspectralmodel method)": [[235, "gammapy.modeling.models.ExpCutoffPowerLawNormSpectralModel.spectral_index", false]], "spectral_index() (gammapy.modeling.models.expcutoffpowerlawspectralmodel method)": [[236, "gammapy.modeling.models.ExpCutoffPowerLawSpectralModel.spectral_index", false]], "spectral_index() (gammapy.modeling.models.gaussianspectralmodel method)": [[241, "gammapy.modeling.models.GaussianSpectralModel.spectral_index", false]], "spectral_index() (gammapy.modeling.models.logparabolanormspectralmodel method)": [[247, "gammapy.modeling.models.LogParabolaNormSpectralModel.spectral_index", false]], "spectral_index() (gammapy.modeling.models.logparabolaspectralmodel method)": [[248, "gammapy.modeling.models.LogParabolaSpectralModel.spectral_index", false]], "spectral_index() (gammapy.modeling.models.meyercrabspectralmodel method)": [[251, "gammapy.modeling.models.MeyerCrabSpectralModel.spectral_index", false]], "spectral_index() (gammapy.modeling.models.naimaspectralmodel method)": [[255, "gammapy.modeling.models.NaimaSpectralModel.spectral_index", false]], "spectral_index() (gammapy.modeling.models.piecewisenormspectralmodel method)": [[257, "gammapy.modeling.models.PiecewiseNormSpectralModel.spectral_index", false]], "spectral_index() (gammapy.modeling.models.powerlaw2spectralmodel method)": [[259, "gammapy.modeling.models.PowerLaw2SpectralModel.spectral_index", false]], "spectral_index() (gammapy.modeling.models.powerlawnormspectralmodel method)": [[260, "gammapy.modeling.models.PowerLawNormSpectralModel.spectral_index", false]], "spectral_index() (gammapy.modeling.models.powerlawspectralmodel method)": [[261, "gammapy.modeling.models.PowerLawSpectralModel.spectral_index", false]], "spectral_index() (gammapy.modeling.models.scalespectralmodel method)": [[266, "gammapy.modeling.models.ScaleSpectralModel.spectral_index", false]], "spectral_index() (gammapy.modeling.models.smoothbrokenpowerlawspectralmodel method)": [[271, "gammapy.modeling.models.SmoothBrokenPowerLawSpectralModel.spectral_index", false]], "spectral_index() (gammapy.modeling.models.spectralmodel method)": [[273, "gammapy.modeling.models.SpectralModel.spectral_index", false]], "spectral_index() (gammapy.modeling.models.superexpcutoffpowerlaw3fglspectralmodel method)": [[274, "gammapy.modeling.models.SuperExpCutoffPowerLaw3FGLSpectralModel.spectral_index", false]], "spectral_index() (gammapy.modeling.models.superexpcutoffpowerlaw4fgldr3spectralmodel method)": [[275, "gammapy.modeling.models.SuperExpCutoffPowerLaw4FGLDR3SpectralModel.spectral_index", false]], "spectral_index() (gammapy.modeling.models.superexpcutoffpowerlaw4fglspectralmodel method)": [[276, "gammapy.modeling.models.SuperExpCutoffPowerLaw4FGLSpectralModel.spectral_index", false]], "spectral_index() (gammapy.modeling.models.templatendspectralmodel method)": [[279, "gammapy.modeling.models.TemplateNDSpectralModel.spectral_index", false]], "spectral_index() (gammapy.modeling.models.templatespectralmodel method)": [[283, "gammapy.modeling.models.TemplateSpectralModel.spectral_index", false]], "spectral_index_error() (gammapy.astro.darkmatter.darkmatterannihilationspectralmodel method)": [[19, "gammapy.astro.darkmatter.DarkMatterAnnihilationSpectralModel.spectral_index_error", false]], "spectral_index_error() (gammapy.astro.darkmatter.darkmatterdecayspectralmodel method)": [[20, "gammapy.astro.darkmatter.DarkMatterDecaySpectralModel.spectral_index_error", false]], "spectral_index_error() (gammapy.astro.darkmatter.primaryflux method)": [[26, "gammapy.astro.darkmatter.PrimaryFlux.spectral_index_error", false]], "spectral_index_error() (gammapy.modeling.models.brokenpowerlawspectralmodel method)": [[224, "gammapy.modeling.models.BrokenPowerLawSpectralModel.spectral_index_error", false]], "spectral_index_error() (gammapy.modeling.models.compoundspectralmodel method)": [[225, "gammapy.modeling.models.CompoundSpectralModel.spectral_index_error", false]], "spectral_index_error() (gammapy.modeling.models.constantspectralmodel method)": [[228, "gammapy.modeling.models.ConstantSpectralModel.spectral_index_error", false]], "spectral_index_error() (gammapy.modeling.models.eblabsorptionnormspectralmodel method)": [[232, "gammapy.modeling.models.EBLAbsorptionNormSpectralModel.spectral_index_error", false]], "spectral_index_error() (gammapy.modeling.models.expcutoffpowerlaw3fglspectralmodel method)": [[234, "gammapy.modeling.models.ExpCutoffPowerLaw3FGLSpectralModel.spectral_index_error", false]], "spectral_index_error() (gammapy.modeling.models.expcutoffpowerlawnormspectralmodel method)": [[235, "gammapy.modeling.models.ExpCutoffPowerLawNormSpectralModel.spectral_index_error", false]], "spectral_index_error() (gammapy.modeling.models.expcutoffpowerlawspectralmodel method)": [[236, "gammapy.modeling.models.ExpCutoffPowerLawSpectralModel.spectral_index_error", false]], "spectral_index_error() (gammapy.modeling.models.gaussianspectralmodel method)": [[241, "gammapy.modeling.models.GaussianSpectralModel.spectral_index_error", false]], "spectral_index_error() (gammapy.modeling.models.logparabolanormspectralmodel method)": [[247, "gammapy.modeling.models.LogParabolaNormSpectralModel.spectral_index_error", false]], "spectral_index_error() (gammapy.modeling.models.logparabolaspectralmodel method)": [[248, "gammapy.modeling.models.LogParabolaSpectralModel.spectral_index_error", false]], "spectral_index_error() (gammapy.modeling.models.meyercrabspectralmodel method)": [[251, "gammapy.modeling.models.MeyerCrabSpectralModel.spectral_index_error", false]], "spectral_index_error() (gammapy.modeling.models.naimaspectralmodel method)": [[255, "gammapy.modeling.models.NaimaSpectralModel.spectral_index_error", false]], "spectral_index_error() (gammapy.modeling.models.piecewisenormspectralmodel method)": [[257, "gammapy.modeling.models.PiecewiseNormSpectralModel.spectral_index_error", false]], "spectral_index_error() (gammapy.modeling.models.powerlaw2spectralmodel method)": [[259, "gammapy.modeling.models.PowerLaw2SpectralModel.spectral_index_error", false]], "spectral_index_error() (gammapy.modeling.models.powerlawnormspectralmodel method)": [[260, "gammapy.modeling.models.PowerLawNormSpectralModel.spectral_index_error", false]], "spectral_index_error() (gammapy.modeling.models.powerlawspectralmodel method)": [[261, "gammapy.modeling.models.PowerLawSpectralModel.spectral_index_error", false]], "spectral_index_error() (gammapy.modeling.models.scalespectralmodel method)": [[266, "gammapy.modeling.models.ScaleSpectralModel.spectral_index_error", false]], "spectral_index_error() (gammapy.modeling.models.smoothbrokenpowerlawspectralmodel method)": [[271, "gammapy.modeling.models.SmoothBrokenPowerLawSpectralModel.spectral_index_error", false]], "spectral_index_error() (gammapy.modeling.models.spectralmodel method)": [[273, "gammapy.modeling.models.SpectralModel.spectral_index_error", false]], "spectral_index_error() (gammapy.modeling.models.superexpcutoffpowerlaw3fglspectralmodel method)": [[274, "gammapy.modeling.models.SuperExpCutoffPowerLaw3FGLSpectralModel.spectral_index_error", false]], "spectral_index_error() (gammapy.modeling.models.superexpcutoffpowerlaw4fgldr3spectralmodel method)": [[275, "gammapy.modeling.models.SuperExpCutoffPowerLaw4FGLDR3SpectralModel.spectral_index_error", false]], "spectral_index_error() (gammapy.modeling.models.superexpcutoffpowerlaw4fglspectralmodel method)": [[276, "gammapy.modeling.models.SuperExpCutoffPowerLaw4FGLSpectralModel.spectral_index_error", false]], "spectral_index_error() (gammapy.modeling.models.templatendspectralmodel method)": [[279, "gammapy.modeling.models.TemplateNDSpectralModel.spectral_index_error", false]], "spectral_index_error() (gammapy.modeling.models.templatespectralmodel method)": [[283, "gammapy.modeling.models.TemplateSpectralModel.spectral_index_error", false]], "spectral_model (gammapy.modeling.models.fovbackgroundmodel attribute)": [[238, "gammapy.modeling.models.FoVBackgroundModel.spectral_model", false]], "spectral_model (gammapy.modeling.models.skymodel attribute)": [[270, "gammapy.modeling.models.SkyModel.spectral_model", false]], "spectral_model (gammapy.modeling.models.templatenpredmodel attribute)": [[280, "gammapy.modeling.models.TemplateNPredModel.spectral_model", false]], "spectral_model() (gammapy.catalog.sourcecatalogobject1lhaaso method)": [[70, "gammapy.catalog.SourceCatalogObject1LHAASO.spectral_model", false]], "spectral_model() (gammapy.catalog.sourcecatalogobject2fhl method)": [[71, "gammapy.catalog.SourceCatalogObject2FHL.spectral_model", false]], "spectral_model() (gammapy.catalog.sourcecatalogobject2hwc method)": [[72, "gammapy.catalog.SourceCatalogObject2HWC.spectral_model", false]], "spectral_model() (gammapy.catalog.sourcecatalogobject2pc method)": [[73, "gammapy.catalog.SourceCatalogObject2PC.spectral_model", false]], "spectral_model() (gammapy.catalog.sourcecatalogobject3fgl method)": [[74, "gammapy.catalog.SourceCatalogObject3FGL.spectral_model", false]], "spectral_model() (gammapy.catalog.sourcecatalogobject3fhl method)": [[75, "gammapy.catalog.SourceCatalogObject3FHL.spectral_model", false]], "spectral_model() (gammapy.catalog.sourcecatalogobject3hwc method)": [[76, "gammapy.catalog.SourceCatalogObject3HWC.spectral_model", false]], "spectral_model() (gammapy.catalog.sourcecatalogobject3pc method)": [[77, "gammapy.catalog.SourceCatalogObject3PC.spectral_model", false]], "spectral_model() (gammapy.catalog.sourcecatalogobject4fgl method)": [[78, "gammapy.catalog.SourceCatalogObject4FGL.spectral_model", false]], "spectral_model() (gammapy.catalog.sourcecatalogobjectgammacat method)": [[79, "gammapy.catalog.SourceCatalogObjectGammaCat.spectral_model", false]], "spectral_model() (gammapy.catalog.sourcecatalogobjecthgps method)": [[80, "gammapy.catalog.SourceCatalogObjectHGPS.spectral_model", false]], "spectral_model_registry (in module gammapy.modeling.models)": [[265, "gammapy.modeling.models.SPECTRAL_MODEL_REGISTRY", false]], "spectralmodel (class in gammapy.modeling.models)": [[273, "gammapy.modeling.models.SpectralModel", false]], "spectrumdataset (class in gammapy.datasets)": [[111, "gammapy.datasets.SpectrumDataset", false]], "spectrumdatasetmaker (class in gammapy.makers)": [[184, "gammapy.makers.SpectrumDatasetMaker", false]], "spectrumdatasetonoff (class in gammapy.datasets)": [[112, "gammapy.datasets.SpectrumDatasetOnOff", false]], "spherical (gammapy.utils.coordinates.fovaltazframe attribute)": [[320, "gammapy.utils.coordinates.FoVAltAzFrame.spherical", false]], "spherical (gammapy.utils.coordinates.fovicrsframe attribute)": [[321, "gammapy.utils.coordinates.FoVICRSFrame.spherical", false]], "sphericalcoslat (gammapy.utils.coordinates.fovaltazframe attribute)": [[320, "gammapy.utils.coordinates.FoVAltAzFrame.sphericalcoslat", false]], "sphericalcoslat (gammapy.utils.coordinates.fovicrsframe attribute)": [[321, "gammapy.utils.coordinates.FoVICRSFrame.sphericalcoslat", false]], "spiralarms (gammapy.astro.population.faucherspiral attribute)": [[33, "gammapy.astro.population.FaucherSpiral.spiralarms", false]], "spiralarms (gammapy.astro.population.valleespiral attribute)": [[38, "gammapy.astro.population.ValleeSpiral.spiralarms", false]], "split_by_axis() (gammapy.maps.hpxmap method)": [[197, "gammapy.maps.HpxMap.split_by_axis", false]], "split_by_axis() (gammapy.maps.hpxndmap method)": [[198, "gammapy.maps.HpxNDMap.split_by_axis", false]], "split_by_axis() (gammapy.maps.map method)": [[200, "gammapy.maps.Map.split_by_axis", false]], "split_by_axis() (gammapy.maps.regionndmap method)": [[206, "gammapy.maps.RegionNDMap.split_by_axis", false]], "split_by_axis() (gammapy.maps.wcsmap method)": [[209, "gammapy.maps.WcsMap.split_by_axis", false]], "split_by_axis() (gammapy.maps.wcsndmap method)": [[210, "gammapy.maps.WcsNDMap.split_by_axis", false]], "split_dataset() (in module gammapy.datasets)": [[117, "gammapy.datasets.split_dataset", false]], "split_dataset() (in module gammapy.datasets.utils)": [[120, "gammapy.datasets.utils.split_dataset", false]], "sqrt_ts (gammapy.estimators.fluxmaps attribute)": [[126, "gammapy.estimators.FluxMaps.sqrt_ts", false]], "sqrt_ts (gammapy.estimators.fluxpoints attribute)": [[128, "gammapy.estimators.FluxPoints.sqrt_ts", false]], "sqrt_ts (gammapy.stats.cashcountsstatistic attribute)": [[295, "gammapy.stats.CashCountsStatistic.sqrt_ts", false]], "sqrt_ts (gammapy.stats.wstatcountsstatistic attribute)": [[299, "gammapy.stats.WStatCountsStatistic.sqrt_ts", false]], "sqrt_ts_threshold_ul (gammapy.estimators.fluxmaps attribute)": [[126, "gammapy.estimators.FluxMaps.sqrt_ts_threshold_ul", false]], "sqrt_ts_threshold_ul (gammapy.estimators.fluxpoints attribute)": [[128, "gammapy.estimators.FluxPoints.sqrt_ts_threshold_ul", false]], "squash() (gammapy.maps.geom method)": [[195, "gammapy.maps.Geom.squash", false]], "squash() (gammapy.maps.hpxgeom method)": [[196, "gammapy.maps.HpxGeom.squash", false]], "squash() (gammapy.maps.labelmapaxis method)": [[199, "gammapy.maps.LabelMapAxis.squash", false]], "squash() (gammapy.maps.mapaxes method)": [[201, "gammapy.maps.MapAxes.squash", false]], "squash() (gammapy.maps.mapaxis method)": [[202, "gammapy.maps.MapAxis.squash", false]], "squash() (gammapy.maps.regiongeom method)": [[205, "gammapy.maps.RegionGeom.squash", false]], "squash() (gammapy.maps.timemapaxis method)": [[207, "gammapy.maps.TimeMapAxis.squash", false]], "squash() (gammapy.maps.wcsgeom method)": [[208, "gammapy.maps.WcsGeom.squash", false]], "squeeze() (gammapy.utils.coordinates.fovaltazframe method)": [[320, "gammapy.utils.coordinates.FoVAltAzFrame.squeeze", false]], "squeeze() (gammapy.utils.coordinates.fovicrsframe method)": [[321, "gammapy.utils.coordinates.FoVICRSFrame.squeeze", false]], "ssc_model (gammapy.modeling.models.naimaspectralmodel attribute)": [[255, "gammapy.modeling.models.NaimaSpectralModel.ssc_model", false]], "stack() (gammapy.data.eventlist method)": [[83, "gammapy.data.EventList.stack", false]], "stack() (gammapy.data.gti method)": [[86, "gammapy.data.GTI.stack", false]], "stack() (gammapy.datasets.mapdataset method)": [[104, "gammapy.datasets.MapDataset.stack", false]], "stack() (gammapy.datasets.mapdatasetmetadata method)": [[106, "gammapy.datasets.MapDatasetMetaData.stack", false]], "stack() (gammapy.datasets.mapdatasetonoff method)": [[107, "gammapy.datasets.MapDatasetOnOff.stack", false]], "stack() (gammapy.datasets.spectrumdataset method)": [[111, "gammapy.datasets.SpectrumDataset.stack", false]], "stack() (gammapy.datasets.spectrumdatasetonoff method)": [[112, "gammapy.datasets.SpectrumDatasetOnOff.stack", false]], "stack() (gammapy.irf.edispkernelmap method)": [[155, "gammapy.irf.EDispKernelMap.stack", false]], "stack() (gammapy.irf.edispmap method)": [[156, "gammapy.irf.EDispMap.stack", false]], "stack() (gammapy.irf.irfmap method)": [[162, "gammapy.irf.IRFMap.stack", false]], "stack() (gammapy.irf.psfmap method)": [[167, "gammapy.irf.PSFMap.stack", false]], "stack() (gammapy.irf.recopsfmap method)": [[170, "gammapy.irf.RecoPSFMap.stack", false]], "stack() (gammapy.maps.hpxndmap method)": [[198, "gammapy.maps.HpxNDMap.stack", false]], "stack() (gammapy.maps.regionndmap method)": [[206, "gammapy.maps.RegionNDMap.stack", false]], "stack() (gammapy.maps.wcsndmap method)": [[210, "gammapy.maps.WcsNDMap.stack", false]], "stack() (gammapy.modeling.models.templatenpredmodel method)": [[280, "gammapy.modeling.models.TemplateNPredModel.stack", false]], "stack_reduce() (gammapy.datasets.datasets method)": [[101, "gammapy.datasets.Datasets.stack_reduce", false]], "stacked analysis": [[608, "term-Stacked-Analysis", true]], "standard_broadcasting (gammapy.astro.population.casebattacharya1998 attribute)": [[28, "gammapy.astro.population.CaseBattacharya1998.standard_broadcasting", false]], "standard_broadcasting (gammapy.astro.population.exponential attribute)": [[29, "gammapy.astro.population.Exponential.standard_broadcasting", false]], "standard_broadcasting (gammapy.astro.population.faucherkaspi2006 attribute)": [[30, "gammapy.astro.population.FaucherKaspi2006.standard_broadcasting", false]], "standard_broadcasting (gammapy.astro.population.faucherkaspi2006velocitybimodal attribute)": [[31, "gammapy.astro.population.FaucherKaspi2006VelocityBimodal.standard_broadcasting", false]], "standard_broadcasting (gammapy.astro.population.faucherkaspi2006velocitymaxwellian attribute)": [[32, "gammapy.astro.population.FaucherKaspi2006VelocityMaxwellian.standard_broadcasting", false]], "standard_broadcasting (gammapy.astro.population.lorimer2006 attribute)": [[35, "gammapy.astro.population.Lorimer2006.standard_broadcasting", false]], "standard_broadcasting (gammapy.astro.population.paczynski1990 attribute)": [[36, "gammapy.astro.population.Paczynski1990.standard_broadcasting", false]], "standard_broadcasting (gammapy.astro.population.paczynski1990velocity attribute)": [[37, "gammapy.astro.population.Paczynski1990Velocity.standard_broadcasting", false]], "standard_broadcasting (gammapy.astro.population.yusifovkucuk2004 attribute)": [[39, "gammapy.astro.population.YusifovKucuk2004.standard_broadcasting", false]], "standard_broadcasting (gammapy.astro.population.yusifovkucuk2004b attribute)": [[40, "gammapy.astro.population.YusifovKucuk2004B.standard_broadcasting", false]], "standard_scaler() (in module gammapy.utils.cluster)": [[318, "gammapy.utils.cluster.standard_scaler", false]], "standardise_unit() (in module gammapy.utils.units)": [[379, "gammapy.utils.units.standardise_unit", false]], "stat (gammapy.estimators.fluxmaps attribute)": [[126, "gammapy.estimators.FluxMaps.stat", false]], "stat (gammapy.estimators.fluxpoints attribute)": [[128, "gammapy.estimators.FluxPoints.stat", false]], "stat_array() (gammapy.datasets.dataset method)": [[100, "gammapy.datasets.Dataset.stat_array", false]], "stat_array() (gammapy.datasets.fluxpointsdataset method)": [[103, "gammapy.datasets.FluxPointsDataset.stat_array", false]], "stat_array() (gammapy.datasets.mapdataset method)": [[104, "gammapy.datasets.MapDataset.stat_array", false]], "stat_array() (gammapy.datasets.mapdatasetonoff method)": [[107, "gammapy.datasets.MapDatasetOnOff.stat_array", false]], "stat_array() (gammapy.datasets.spectrumdataset method)": [[111, "gammapy.datasets.SpectrumDataset.stat_array", false]], "stat_array() (gammapy.datasets.spectrumdatasetonoff method)": [[112, "gammapy.datasets.SpectrumDatasetOnOff.stat_array", false]], "stat_array_dataset() (gammapy.stats.chi2asymmetricerrorfitstatistic class method)": [[296, "gammapy.stats.Chi2AsymmetricErrorFitStatistic.stat_array_dataset", false]], "stat_array_dataset() (gammapy.stats.chi2fitstatistic class method)": [[297, "gammapy.stats.Chi2FitStatistic.stat_array_dataset", false]], "stat_contour() (gammapy.modeling.fit method)": [[215, "gammapy.modeling.Fit.stat_contour", false]], "stat_max (gammapy.stats.cashcountsstatistic attribute)": [[295, "gammapy.stats.CashCountsStatistic.stat_max", false]], "stat_max (gammapy.stats.wstatcountsstatistic attribute)": [[299, "gammapy.stats.WStatCountsStatistic.stat_max", false]], "stat_null (gammapy.estimators.fluxmaps attribute)": [[126, "gammapy.estimators.FluxMaps.stat_null", false]], "stat_null (gammapy.estimators.fluxpoints attribute)": [[128, "gammapy.estimators.FluxPoints.stat_null", false]], "stat_null (gammapy.stats.cashcountsstatistic attribute)": [[295, "gammapy.stats.CashCountsStatistic.stat_null", false]], "stat_null (gammapy.stats.wstatcountsstatistic attribute)": [[299, "gammapy.stats.WStatCountsStatistic.stat_null", false]], "stat_profile() (gammapy.modeling.fit method)": [[215, "gammapy.modeling.Fit.stat_profile", false]], "stat_profile_ul_scipy() (in module gammapy.modeling)": [[294, "gammapy.modeling.stat_profile_ul_scipy", false]], "stat_scan (gammapy.estimators.fluxmaps attribute)": [[126, "gammapy.estimators.FluxMaps.stat_scan", false]], "stat_scan (gammapy.estimators.fluxpoints attribute)": [[128, "gammapy.estimators.FluxPoints.stat_scan", false]], "stat_sum() (gammapy.datasets.dataset method)": [[100, "gammapy.datasets.Dataset.stat_sum", false]], "stat_sum() (gammapy.datasets.datasets method)": [[101, "gammapy.datasets.Datasets.stat_sum", false]], "stat_sum() (gammapy.datasets.fluxpointsdataset method)": [[103, "gammapy.datasets.FluxPointsDataset.stat_sum", false]], "stat_sum() (gammapy.datasets.mapdataset method)": [[104, "gammapy.datasets.MapDataset.stat_sum", false]], "stat_sum() (gammapy.datasets.mapdatasetonoff method)": [[107, "gammapy.datasets.MapDatasetOnOff.stat_sum", false]], "stat_sum() (gammapy.datasets.spectrumdataset method)": [[111, "gammapy.datasets.SpectrumDataset.stat_sum", false]], "stat_sum() (gammapy.datasets.spectrumdatasetonoff method)": [[112, "gammapy.datasets.SpectrumDatasetOnOff.stat_sum", false]], "stat_sum_dataset() (gammapy.stats.chi2asymmetricerrorfitstatistic class method)": [[296, "gammapy.stats.Chi2AsymmetricErrorFitStatistic.stat_sum_dataset", false]], "stat_sum_dataset() (gammapy.stats.chi2fitstatistic class method)": [[297, "gammapy.stats.Chi2FitStatistic.stat_sum_dataset", false]], "stat_surface() (gammapy.modeling.fit method)": [[215, "gammapy.modeling.Fit.stat_surface", false]], "stat_type (gammapy.datasets.dataset attribute)": [[100, "gammapy.datasets.Dataset.stat_type", false]], "stat_type (gammapy.datasets.fluxpointsdataset attribute)": [[103, "gammapy.datasets.FluxPointsDataset.stat_type", false]], "stat_type (gammapy.datasets.mapdataset attribute)": [[104, "gammapy.datasets.MapDataset.stat_type", false]], "stat_type (gammapy.datasets.mapdatasetonoff attribute)": [[107, "gammapy.datasets.MapDatasetOnOff.stat_type", false]], "stat_type (gammapy.datasets.spectrumdataset attribute)": [[111, "gammapy.datasets.SpectrumDataset.stat_type", false]], "stat_type (gammapy.datasets.spectrumdatasetonoff attribute)": [[112, "gammapy.datasets.SpectrumDatasetOnOff.stat_type", false]], "stds (gammapy.astro.population.casebattacharya1998 attribute)": [[28, "gammapy.astro.population.CaseBattacharya1998.stds", false]], "stds (gammapy.astro.population.exponential attribute)": [[29, "gammapy.astro.population.Exponential.stds", false]], "stds (gammapy.astro.population.faucherkaspi2006 attribute)": [[30, "gammapy.astro.population.FaucherKaspi2006.stds", false]], "stds (gammapy.astro.population.faucherkaspi2006velocitybimodal attribute)": [[31, "gammapy.astro.population.FaucherKaspi2006VelocityBimodal.stds", false]], "stds (gammapy.astro.population.faucherkaspi2006velocitymaxwellian attribute)": [[32, "gammapy.astro.population.FaucherKaspi2006VelocityMaxwellian.stds", false]], "stds (gammapy.astro.population.lorimer2006 attribute)": [[35, "gammapy.astro.population.Lorimer2006.stds", false]], "stds (gammapy.astro.population.paczynski1990 attribute)": [[36, "gammapy.astro.population.Paczynski1990.stds", false]], "stds (gammapy.astro.population.paczynski1990velocity attribute)": [[37, "gammapy.astro.population.Paczynski1990Velocity.stds", false]], "stds (gammapy.astro.population.yusifovkucuk2004 attribute)": [[39, "gammapy.astro.population.YusifovKucuk2004.stds", false]], "stds (gammapy.astro.population.yusifovkucuk2004b attribute)": [[40, "gammapy.astro.population.YusifovKucuk2004B.stds", false]], "strip_units_from_tree() (gammapy.astro.population.casebattacharya1998 method)": [[28, "gammapy.astro.population.CaseBattacharya1998.strip_units_from_tree", false]], "strip_units_from_tree() (gammapy.astro.population.exponential method)": [[29, "gammapy.astro.population.Exponential.strip_units_from_tree", false]], "strip_units_from_tree() (gammapy.astro.population.faucherkaspi2006 method)": [[30, "gammapy.astro.population.FaucherKaspi2006.strip_units_from_tree", false]], "strip_units_from_tree() (gammapy.astro.population.faucherkaspi2006velocitybimodal method)": [[31, "gammapy.astro.population.FaucherKaspi2006VelocityBimodal.strip_units_from_tree", false]], "strip_units_from_tree() (gammapy.astro.population.faucherkaspi2006velocitymaxwellian method)": [[32, "gammapy.astro.population.FaucherKaspi2006VelocityMaxwellian.strip_units_from_tree", false]], "strip_units_from_tree() (gammapy.astro.population.lorimer2006 method)": [[35, "gammapy.astro.population.Lorimer2006.strip_units_from_tree", false]], "strip_units_from_tree() (gammapy.astro.population.paczynski1990 method)": [[36, "gammapy.astro.population.Paczynski1990.strip_units_from_tree", false]], "strip_units_from_tree() (gammapy.astro.population.paczynski1990velocity method)": [[37, "gammapy.astro.population.Paczynski1990Velocity.strip_units_from_tree", false]], "strip_units_from_tree() (gammapy.astro.population.yusifovkucuk2004 method)": [[39, "gammapy.astro.population.YusifovKucuk2004.strip_units_from_tree", false]], "strip_units_from_tree() (gammapy.astro.population.yusifovkucuk2004b method)": [[40, "gammapy.astro.population.YusifovKucuk2004B.strip_units_from_tree", false]], "structure_function() (in module gammapy.stats)": [[313, "gammapy.stats.structure_function", false]], "success (gammapy.estimators.fluxmaps attribute)": [[126, "gammapy.estimators.FluxMaps.success", false]], "success (gammapy.estimators.fluxpoints attribute)": [[128, "gammapy.estimators.FluxPoints.success", false]], "success (gammapy.modeling.covarianceresult attribute)": [[214, "gammapy.modeling.CovarianceResult.success", false]], "success (gammapy.modeling.fitresult attribute)": [[216, "gammapy.modeling.FitResult.success", false]], "success (gammapy.modeling.optimizeresult attribute)": [[217, "gammapy.modeling.OptimizeResult.success", false]], "sum() (gammapy.stats.cashcountsstatistic method)": [[295, "gammapy.stats.CashCountsStatistic.sum", false]], "sum() (gammapy.stats.wstatcountsstatistic method)": [[299, "gammapy.stats.WStatCountsStatistic.sum", false]], "sum_of_implicit_terms() (gammapy.astro.population.casebattacharya1998 method)": [[28, "gammapy.astro.population.CaseBattacharya1998.sum_of_implicit_terms", false]], "sum_of_implicit_terms() (gammapy.astro.population.exponential method)": [[29, "gammapy.astro.population.Exponential.sum_of_implicit_terms", false]], "sum_of_implicit_terms() (gammapy.astro.population.faucherkaspi2006 method)": [[30, "gammapy.astro.population.FaucherKaspi2006.sum_of_implicit_terms", false]], "sum_of_implicit_terms() (gammapy.astro.population.faucherkaspi2006velocitybimodal method)": [[31, "gammapy.astro.population.FaucherKaspi2006VelocityBimodal.sum_of_implicit_terms", false]], "sum_of_implicit_terms() (gammapy.astro.population.faucherkaspi2006velocitymaxwellian method)": [[32, "gammapy.astro.population.FaucherKaspi2006VelocityMaxwellian.sum_of_implicit_terms", false]], "sum_of_implicit_terms() (gammapy.astro.population.lorimer2006 method)": [[35, "gammapy.astro.population.Lorimer2006.sum_of_implicit_terms", false]], "sum_of_implicit_terms() (gammapy.astro.population.paczynski1990 method)": [[36, "gammapy.astro.population.Paczynski1990.sum_of_implicit_terms", false]], "sum_of_implicit_terms() (gammapy.astro.population.paczynski1990velocity method)": [[37, "gammapy.astro.population.Paczynski1990Velocity.sum_of_implicit_terms", false]], "sum_of_implicit_terms() (gammapy.astro.population.yusifovkucuk2004 method)": [[39, "gammapy.astro.population.YusifovKucuk2004.sum_of_implicit_terms", false]], "sum_of_implicit_terms() (gammapy.astro.population.yusifovkucuk2004b method)": [[40, "gammapy.astro.population.YusifovKucuk2004B.sum_of_implicit_terms", false]], "sum_over_axes() (gammapy.maps.hpxmap method)": [[197, "gammapy.maps.HpxMap.sum_over_axes", false]], "sum_over_axes() (gammapy.maps.hpxndmap method)": [[198, "gammapy.maps.HpxNDMap.sum_over_axes", false]], "sum_over_axes() (gammapy.maps.map method)": [[200, "gammapy.maps.Map.sum_over_axes", false]], "sum_over_axes() (gammapy.maps.regionndmap method)": [[206, "gammapy.maps.RegionNDMap.sum_over_axes", false]], "sum_over_axes() (gammapy.maps.wcsmap method)": [[209, "gammapy.maps.WcsMap.sum_over_axes", false]], "sum_over_axes() (gammapy.maps.wcsndmap method)": [[210, "gammapy.maps.WcsNDMap.sum_over_axes", false]], "summary() (gammapy.data.hduindextable method)": [[88, "gammapy.data.HDUIndexTable.summary", false]], "summary() (gammapy.data.observationtable method)": [[92, "gammapy.data.ObservationTable.summary", false]], "superexpcutoffpowerlaw3fglspectralmodel (class in gammapy.modeling.models)": [[274, "gammapy.modeling.models.SuperExpCutoffPowerLaw3FGLSpectralModel", false]], "superexpcutoffpowerlaw4fgldr3spectralmodel (class in gammapy.modeling.models)": [[275, "gammapy.modeling.models.SuperExpCutoffPowerLaw4FGLDR3SpectralModel", false]], "superexpcutoffpowerlaw4fglspectralmodel (class in gammapy.modeling.models)": [[276, "gammapy.modeling.models.SuperExpCutoffPowerLaw4FGLSpectralModel", false]], "swapaxes() (gammapy.utils.coordinates.fovaltazframe method)": [[320, "gammapy.utils.coordinates.FoVAltAzFrame.swapaxes", false]], "swapaxes() (gammapy.utils.coordinates.fovicrsframe method)": [[321, "gammapy.utils.coordinates.FoVICRSFrame.swapaxes", false]], "sync_constraints (gammapy.astro.population.casebattacharya1998 attribute)": [[28, "gammapy.astro.population.CaseBattacharya1998.sync_constraints", false]], "sync_constraints (gammapy.astro.population.exponential attribute)": [[29, "gammapy.astro.population.Exponential.sync_constraints", false]], "sync_constraints (gammapy.astro.population.faucherkaspi2006 attribute)": [[30, "gammapy.astro.population.FaucherKaspi2006.sync_constraints", false]], "sync_constraints (gammapy.astro.population.faucherkaspi2006velocitybimodal attribute)": [[31, "gammapy.astro.population.FaucherKaspi2006VelocityBimodal.sync_constraints", false]], "sync_constraints (gammapy.astro.population.faucherkaspi2006velocitymaxwellian attribute)": [[32, "gammapy.astro.population.FaucherKaspi2006VelocityMaxwellian.sync_constraints", false]], "sync_constraints (gammapy.astro.population.lorimer2006 attribute)": [[35, "gammapy.astro.population.Lorimer2006.sync_constraints", false]], "sync_constraints (gammapy.astro.population.paczynski1990 attribute)": [[36, "gammapy.astro.population.Paczynski1990.sync_constraints", false]], "sync_constraints (gammapy.astro.population.paczynski1990velocity attribute)": [[37, "gammapy.astro.population.Paczynski1990Velocity.sync_constraints", false]], "sync_constraints (gammapy.astro.population.yusifovkucuk2004 attribute)": [[39, "gammapy.astro.population.YusifovKucuk2004.sync_constraints", false]], "sync_constraints (gammapy.astro.population.yusifovkucuk2004b attribute)": [[40, "gammapy.astro.population.YusifovKucuk2004B.sync_constraints", false]], "t (gammapy.utils.coordinates.fovaltazframe attribute)": [[320, "gammapy.utils.coordinates.FoVAltAzFrame.T", false]], "t (gammapy.utils.coordinates.fovicrsframe attribute)": [[321, "gammapy.utils.coordinates.FoVICRSFrame.T", false]], "t0 (gammapy.modeling.models.expdecaytemporalmodel attribute)": [[237, "gammapy.modeling.models.ExpDecayTemporalModel.t0", false]], "t0 (gammapy.modeling.models.powerlawtemporalmodel attribute)": [[262, "gammapy.modeling.models.PowerLawTemporalModel.t0", false]], "t_decay (gammapy.modeling.models.generalizedgaussiantemporalmodel attribute)": [[244, "gammapy.modeling.models.GeneralizedGaussianTemporalModel.t_decay", false]], "t_ref (gammapy.modeling.models.expdecaytemporalmodel attribute)": [[237, "gammapy.modeling.models.ExpDecayTemporalModel.t_ref", false]], "t_ref (gammapy.modeling.models.gaussiantemporalmodel attribute)": [[242, "gammapy.modeling.models.GaussianTemporalModel.t_ref", false]], "t_ref (gammapy.modeling.models.generalizedgaussiantemporalmodel attribute)": [[244, "gammapy.modeling.models.GeneralizedGaussianTemporalModel.t_ref", false]], "t_ref (gammapy.modeling.models.lightcurvetemplatetemporalmodel attribute)": [[245, "gammapy.modeling.models.LightCurveTemplateTemporalModel.t_ref", false]], "t_ref (gammapy.modeling.models.lineartemporalmodel attribute)": [[246, "gammapy.modeling.models.LinearTemporalModel.t_ref", false]], "t_ref (gammapy.modeling.models.powerlawtemporalmodel attribute)": [[262, "gammapy.modeling.models.PowerLawTemporalModel.t_ref", false]], "t_ref (gammapy.modeling.models.sinetemporalmodel attribute)": [[269, "gammapy.modeling.models.SineTemporalModel.t_ref", false]], "t_ref (gammapy.modeling.models.templatephasecurvetemporalmodel attribute)": [[281, "gammapy.modeling.models.TemplatePhaseCurveTemporalModel.t_ref", false]], "t_rise (gammapy.modeling.models.generalizedgaussiantemporalmodel attribute)": [[244, "gammapy.modeling.models.GeneralizedGaussianTemporalModel.t_rise", false]], "table_associations (gammapy.catalog.sourcecataloghgps attribute)": [[67, "gammapy.catalog.SourceCatalogHGPS.table_associations", false]], "table_components (gammapy.catalog.sourcecataloghgps attribute)": [[67, "gammapy.catalog.SourceCatalogHGPS.table_components", false]], "table_filename (gammapy.astro.darkmatter.primaryflux attribute)": [[26, "gammapy.astro.darkmatter.PrimaryFlux.table_filename", false]], "table_identifications (gammapy.catalog.sourcecataloghgps attribute)": [[67, "gammapy.catalog.SourceCatalogHGPS.table_identifications", false]], "table_large_scale_component (gammapy.catalog.sourcecataloghgps attribute)": [[67, "gammapy.catalog.SourceCatalogHGPS.table_large_scale_component", false]], "table_row_to_dict() (in module gammapy.utils.table)": [[365, "gammapy.utils.table.table_row_to_dict", false]], "table_standardise_units_copy() (in module gammapy.utils.table)": [[366, "gammapy.utils.table.table_standardise_units_copy", false]], "table_standardise_units_inplace() (in module gammapy.utils.table)": [[367, "gammapy.utils.table.table_standardise_units_inplace", false]], "tag (gammapy.astro.darkmatter.darkmatterannihilationspectralmodel attribute)": [[19, "gammapy.astro.darkmatter.DarkMatterAnnihilationSpectralModel.tag", false]], "tag (gammapy.astro.darkmatter.darkmatterdecayspectralmodel attribute)": [[20, "gammapy.astro.darkmatter.DarkMatterDecaySpectralModel.tag", false]], "tag (gammapy.astro.darkmatter.primaryflux attribute)": [[26, "gammapy.astro.darkmatter.PrimaryFlux.tag", false]], "tag (gammapy.catalog.sourcecatalog attribute)": [[56, "gammapy.catalog.SourceCatalog.tag", false]], "tag (gammapy.catalog.sourcecatalog1lhaaso attribute)": [[57, "gammapy.catalog.SourceCatalog1LHAASO.tag", false]], "tag (gammapy.catalog.sourcecatalog2fhl attribute)": [[58, "gammapy.catalog.SourceCatalog2FHL.tag", false]], "tag (gammapy.catalog.sourcecatalog2hwc attribute)": [[59, "gammapy.catalog.SourceCatalog2HWC.tag", false]], "tag (gammapy.catalog.sourcecatalog2pc attribute)": [[60, "gammapy.catalog.SourceCatalog2PC.tag", false]], "tag (gammapy.catalog.sourcecatalog3fgl attribute)": [[61, "gammapy.catalog.SourceCatalog3FGL.tag", false]], "tag (gammapy.catalog.sourcecatalog3fhl attribute)": [[62, "gammapy.catalog.SourceCatalog3FHL.tag", false]], "tag (gammapy.catalog.sourcecatalog3hwc attribute)": [[63, "gammapy.catalog.SourceCatalog3HWC.tag", false]], "tag (gammapy.catalog.sourcecatalog3pc attribute)": [[64, "gammapy.catalog.SourceCatalog3PC.tag", false]], "tag (gammapy.catalog.sourcecatalog4fgl attribute)": [[65, "gammapy.catalog.SourceCatalog4FGL.tag", false]], "tag (gammapy.catalog.sourcecataloggammacat attribute)": [[66, "gammapy.catalog.SourceCatalogGammaCat.tag", false]], "tag (gammapy.catalog.sourcecataloghgps attribute)": [[67, "gammapy.catalog.SourceCatalogHGPS.tag", false]], "tag (gammapy.data.eventlistmetadata attribute)": [[84, "gammapy.data.EventListMetaData.tag", false]], "tag (gammapy.data.gtimetadata attribute)": [[87, "gammapy.data.GTIMetaData.tag", false]], "tag (gammapy.data.observationmetadata attribute)": [[91, "gammapy.data.ObservationMetaData.tag", false]], "tag (gammapy.datasets.dataset attribute)": [[100, "gammapy.datasets.Dataset.tag", false]], "tag (gammapy.datasets.fermipydatasetsreader attribute)": [[102, "gammapy.datasets.FermipyDatasetsReader.tag", false]], "tag (gammapy.datasets.fluxpointsdataset attribute)": [[103, "gammapy.datasets.FluxPointsDataset.tag", false]], "tag (gammapy.datasets.mapdataset attribute)": [[104, "gammapy.datasets.MapDataset.tag", false]], "tag (gammapy.datasets.mapdatasetmetadata attribute)": [[106, "gammapy.datasets.MapDatasetMetaData.tag", false]], "tag (gammapy.datasets.mapdatasetonoff attribute)": [[107, "gammapy.datasets.MapDatasetOnOff.tag", false]], "tag (gammapy.datasets.ogipdatasetreader attribute)": [[108, "gammapy.datasets.OGIPDatasetReader.tag", false]], "tag (gammapy.datasets.ogipdatasetwriter attribute)": [[109, "gammapy.datasets.OGIPDatasetWriter.tag", false]], "tag (gammapy.datasets.spectrumdataset attribute)": [[111, "gammapy.datasets.SpectrumDataset.tag", false]], "tag (gammapy.datasets.spectrumdatasetonoff attribute)": [[112, "gammapy.datasets.SpectrumDatasetOnOff.tag", false]], "tag (gammapy.estimators.asmoothmapestimator attribute)": [[121, "gammapy.estimators.ASmoothMapEstimator.tag", false]], "tag (gammapy.estimators.energydependentmorphologyestimator attribute)": [[123, "gammapy.estimators.EnergyDependentMorphologyEstimator.tag", false]], "tag (gammapy.estimators.estimator attribute)": [[124, "gammapy.estimators.Estimator.tag", false]], "tag (gammapy.estimators.excessmapestimator attribute)": [[125, "gammapy.estimators.ExcessMapEstimator.tag", false]], "tag (gammapy.estimators.fluxmetadata attribute)": [[127, "gammapy.estimators.FluxMetaData.tag", false]], "tag (gammapy.estimators.fluxpointsestimator attribute)": [[129, "gammapy.estimators.FluxPointsEstimator.tag", false]], "tag (gammapy.estimators.fluxprofileestimator attribute)": [[130, "gammapy.estimators.FluxProfileEstimator.tag", false]], "tag (gammapy.estimators.imageprofileestimator attribute)": [[132, "gammapy.estimators.ImageProfileEstimator.tag", false]], "tag (gammapy.estimators.lightcurveestimator attribute)": [[133, "gammapy.estimators.LightCurveEstimator.tag", false]], "tag (gammapy.estimators.parameterestimator attribute)": [[134, "gammapy.estimators.ParameterEstimator.tag", false]], "tag (gammapy.estimators.parametersensitivityestimator attribute)": [[135, "gammapy.estimators.ParameterSensitivityEstimator.tag", false]], "tag (gammapy.estimators.sensitivityestimator attribute)": [[136, "gammapy.estimators.SensitivityEstimator.tag", false]], "tag (gammapy.estimators.tsmapestimator attribute)": [[137, "gammapy.estimators.TSMapEstimator.tag", false]], "tag (gammapy.irf.background2d attribute)": [[151, "gammapy.irf.Background2D.tag", false]], "tag (gammapy.irf.background3d attribute)": [[152, "gammapy.irf.Background3D.tag", false]], "tag (gammapy.irf.backgroundirf attribute)": [[153, "gammapy.irf.BackgroundIRF.tag", false]], "tag (gammapy.irf.edispkernel attribute)": [[154, "gammapy.irf.EDispKernel.tag", false]], "tag (gammapy.irf.edispkernelmap attribute)": [[155, "gammapy.irf.EDispKernelMap.tag", false]], "tag (gammapy.irf.edispmap attribute)": [[156, "gammapy.irf.EDispMap.tag", false]], "tag (gammapy.irf.effectiveareatable2d attribute)": [[157, "gammapy.irf.EffectiveAreaTable2D.tag", false]], "tag (gammapy.irf.energydependentmultigausspsf attribute)": [[158, "gammapy.irf.EnergyDependentMultiGaussPSF.tag", false]], "tag (gammapy.irf.energydispersion2d attribute)": [[159, "gammapy.irf.EnergyDispersion2D.tag", false]], "tag (gammapy.irf.irf attribute)": [[161, "gammapy.irf.IRF.tag", false]], "tag (gammapy.irf.irfmap attribute)": [[162, "gammapy.irf.IRFMap.tag", false]], "tag (gammapy.irf.parametricpsf attribute)": [[168, "gammapy.irf.ParametricPSF.tag", false]], "tag (gammapy.irf.psf3d attribute)": [[164, "gammapy.irf.PSF3D.tag", false]], "tag (gammapy.irf.psfking attribute)": [[166, "gammapy.irf.PSFKing.tag", false]], "tag (gammapy.irf.psfmap attribute)": [[167, "gammapy.irf.PSFMap.tag", false]], "tag (gammapy.irf.radmax2d attribute)": [[169, "gammapy.irf.RadMax2D.tag", false]], "tag (gammapy.irf.recopsfmap attribute)": [[170, "gammapy.irf.RecoPSFMap.tag", false]], "tag (gammapy.makers.adaptiveringbackgroundmaker attribute)": [[172, "gammapy.makers.AdaptiveRingBackgroundMaker.tag", false]], "tag (gammapy.makers.datasetsmaker attribute)": [[173, "gammapy.makers.DatasetsMaker.tag", false]], "tag (gammapy.makers.fovbackgroundmaker attribute)": [[174, "gammapy.makers.FoVBackgroundMaker.tag", false]], "tag (gammapy.makers.maker attribute)": [[176, "gammapy.makers.Maker.tag", false]], "tag (gammapy.makers.mapdatasetmaker attribute)": [[177, "gammapy.makers.MapDatasetMaker.tag", false]], "tag (gammapy.makers.phasebackgroundmaker attribute)": [[178, "gammapy.makers.PhaseBackgroundMaker.tag", false]], "tag (gammapy.makers.reflectedregionsbackgroundmaker attribute)": [[179, "gammapy.makers.ReflectedRegionsBackgroundMaker.tag", false]], "tag (gammapy.makers.ringbackgroundmaker attribute)": [[182, "gammapy.makers.RingBackgroundMaker.tag", false]], "tag (gammapy.makers.safemaskmaker attribute)": [[183, "gammapy.makers.SafeMaskMaker.tag", false]], "tag (gammapy.makers.spectrumdatasetmaker attribute)": [[184, "gammapy.makers.SpectrumDatasetMaker.tag", false]], "tag (gammapy.maps.hpxmap attribute)": [[197, "gammapy.maps.HpxMap.tag", false]], "tag (gammapy.maps.hpxndmap attribute)": [[198, "gammapy.maps.HpxNDMap.tag", false]], "tag (gammapy.maps.map attribute)": [[200, "gammapy.maps.Map.tag", false]], "tag (gammapy.maps.regionndmap attribute)": [[206, "gammapy.maps.RegionNDMap.tag", false]], "tag (gammapy.maps.wcsmap attribute)": [[209, "gammapy.maps.WcsMap.tag", false]], "tag (gammapy.maps.wcsndmap attribute)": [[210, "gammapy.maps.WcsNDMap.tag", false]], "tag (gammapy.modeling.models.brokenpowerlawspectralmodel attribute)": [[224, "gammapy.modeling.models.BrokenPowerLawSpectralModel.tag", false]], "tag (gammapy.modeling.models.compoundspectralmodel attribute)": [[225, "gammapy.modeling.models.CompoundSpectralModel.tag", false]], "tag (gammapy.modeling.models.constantfluxspatialmodel attribute)": [[226, "gammapy.modeling.models.ConstantFluxSpatialModel.tag", false]], "tag (gammapy.modeling.models.constantspatialmodel attribute)": [[227, "gammapy.modeling.models.ConstantSpatialModel.tag", false]], "tag (gammapy.modeling.models.constantspectralmodel attribute)": [[228, "gammapy.modeling.models.ConstantSpectralModel.tag", false]], "tag (gammapy.modeling.models.constanttemporalmodel attribute)": [[229, "gammapy.modeling.models.ConstantTemporalModel.tag", false]], "tag (gammapy.modeling.models.diskspatialmodel attribute)": [[231, "gammapy.modeling.models.DiskSpatialModel.tag", false]], "tag (gammapy.modeling.models.eblabsorptionnormspectralmodel attribute)": [[232, "gammapy.modeling.models.EBLAbsorptionNormSpectralModel.tag", false]], "tag (gammapy.modeling.models.expcutoffpowerlaw3fglspectralmodel attribute)": [[234, "gammapy.modeling.models.ExpCutoffPowerLaw3FGLSpectralModel.tag", false]], "tag (gammapy.modeling.models.expcutoffpowerlawnormspectralmodel attribute)": [[235, "gammapy.modeling.models.ExpCutoffPowerLawNormSpectralModel.tag", false]], "tag (gammapy.modeling.models.expcutoffpowerlawspectralmodel attribute)": [[236, "gammapy.modeling.models.ExpCutoffPowerLawSpectralModel.tag", false]], "tag (gammapy.modeling.models.expdecaytemporalmodel attribute)": [[237, "gammapy.modeling.models.ExpDecayTemporalModel.tag", false]], "tag (gammapy.modeling.models.fovbackgroundmodel attribute)": [[238, "gammapy.modeling.models.FoVBackgroundModel.tag", false]], "tag (gammapy.modeling.models.gaussianprior attribute)": [[239, "gammapy.modeling.models.GaussianPrior.tag", false]], "tag (gammapy.modeling.models.gaussianspatialmodel attribute)": [[240, "gammapy.modeling.models.GaussianSpatialModel.tag", false]], "tag (gammapy.modeling.models.gaussianspectralmodel attribute)": [[241, "gammapy.modeling.models.GaussianSpectralModel.tag", false]], "tag (gammapy.modeling.models.gaussiantemporalmodel attribute)": [[242, "gammapy.modeling.models.GaussianTemporalModel.tag", false]], "tag (gammapy.modeling.models.generalizedgaussianspatialmodel attribute)": [[243, "gammapy.modeling.models.GeneralizedGaussianSpatialModel.tag", false]], "tag (gammapy.modeling.models.generalizedgaussiantemporalmodel attribute)": [[244, "gammapy.modeling.models.GeneralizedGaussianTemporalModel.tag", false]], "tag (gammapy.modeling.models.lightcurvetemplatetemporalmodel attribute)": [[245, "gammapy.modeling.models.LightCurveTemplateTemporalModel.tag", false]], "tag (gammapy.modeling.models.lineartemporalmodel attribute)": [[246, "gammapy.modeling.models.LinearTemporalModel.tag", false]], "tag (gammapy.modeling.models.logparabolanormspectralmodel attribute)": [[247, "gammapy.modeling.models.LogParabolaNormSpectralModel.tag", false]], "tag (gammapy.modeling.models.logparabolaspectralmodel attribute)": [[248, "gammapy.modeling.models.LogParabolaSpectralModel.tag", false]], "tag (gammapy.modeling.models.loguniformprior attribute)": [[249, "gammapy.modeling.models.LogUniformPrior.tag", false]], "tag (gammapy.modeling.models.naimaspectralmodel attribute)": [[255, "gammapy.modeling.models.NaimaSpectralModel.tag", false]], "tag (gammapy.modeling.models.piecewisenormspatialmodel attribute)": [[256, "gammapy.modeling.models.PiecewiseNormSpatialModel.tag", false]], "tag (gammapy.modeling.models.piecewisenormspectralmodel attribute)": [[257, "gammapy.modeling.models.PiecewiseNormSpectralModel.tag", false]], "tag (gammapy.modeling.models.pointspatialmodel attribute)": [[258, "gammapy.modeling.models.PointSpatialModel.tag", false]], "tag (gammapy.modeling.models.powerlaw2spectralmodel attribute)": [[259, "gammapy.modeling.models.PowerLaw2SpectralModel.tag", false]], "tag (gammapy.modeling.models.powerlawnormspectralmodel attribute)": [[260, "gammapy.modeling.models.PowerLawNormSpectralModel.tag", false]], "tag (gammapy.modeling.models.powerlawspectralmodel attribute)": [[261, "gammapy.modeling.models.PowerLawSpectralModel.tag", false]], "tag (gammapy.modeling.models.powerlawtemporalmodel attribute)": [[262, "gammapy.modeling.models.PowerLawTemporalModel.tag", false]], "tag (gammapy.modeling.models.scalespectralmodel attribute)": [[266, "gammapy.modeling.models.ScaleSpectralModel.tag", false]], "tag (gammapy.modeling.models.shell2spatialmodel attribute)": [[267, "gammapy.modeling.models.Shell2SpatialModel.tag", false]], "tag (gammapy.modeling.models.shellspatialmodel attribute)": [[268, "gammapy.modeling.models.ShellSpatialModel.tag", false]], "tag (gammapy.modeling.models.sinetemporalmodel attribute)": [[269, "gammapy.modeling.models.SineTemporalModel.tag", false]], "tag (gammapy.modeling.models.skymodel attribute)": [[270, "gammapy.modeling.models.SkyModel.tag", false]], "tag (gammapy.modeling.models.smoothbrokenpowerlawspectralmodel attribute)": [[271, "gammapy.modeling.models.SmoothBrokenPowerLawSpectralModel.tag", false]], "tag (gammapy.modeling.models.superexpcutoffpowerlaw3fglspectralmodel attribute)": [[274, "gammapy.modeling.models.SuperExpCutoffPowerLaw3FGLSpectralModel.tag", false]], "tag (gammapy.modeling.models.superexpcutoffpowerlaw4fgldr3spectralmodel attribute)": [[275, "gammapy.modeling.models.SuperExpCutoffPowerLaw4FGLDR3SpectralModel.tag", false]], "tag (gammapy.modeling.models.superexpcutoffpowerlaw4fglspectralmodel attribute)": [[276, "gammapy.modeling.models.SuperExpCutoffPowerLaw4FGLSpectralModel.tag", false]], "tag (gammapy.modeling.models.templatendspatialmodel attribute)": [[278, "gammapy.modeling.models.TemplateNDSpatialModel.tag", false]], "tag (gammapy.modeling.models.templatendspectralmodel attribute)": [[279, "gammapy.modeling.models.TemplateNDSpectralModel.tag", false]], "tag (gammapy.modeling.models.templatenpredmodel attribute)": [[280, "gammapy.modeling.models.TemplateNPredModel.tag", false]], "tag (gammapy.modeling.models.templatephasecurvetemporalmodel attribute)": [[281, "gammapy.modeling.models.TemplatePhaseCurveTemporalModel.tag", false]], "tag (gammapy.modeling.models.templatespatialmodel attribute)": [[282, "gammapy.modeling.models.TemplateSpatialModel.tag", false]], "tag (gammapy.modeling.models.templatespectralmodel attribute)": [[283, "gammapy.modeling.models.TemplateSpectralModel.tag", false]], "tag (gammapy.modeling.models.uniformprior attribute)": [[285, "gammapy.modeling.models.UniformPrior.tag", false]], "take() (gammapy.utils.coordinates.fovaltazframe method)": [[320, "gammapy.utils.coordinates.FoVAltAzFrame.take", false]], "take() (gammapy.utils.coordinates.fovicrsframe method)": [[321, "gammapy.utils.coordinates.FoVICRSFrame.take", false]], "target_radec (gammapy.data.observation attribute)": [[89, "gammapy.data.Observation.target_radec", false]], "tau (gammapy.astro.source.simplepulsar attribute)": [[54, "gammapy.astro.source.SimplePulsar.tau", false]], "tau() (gammapy.astro.source.pulsar method)": [[51, "gammapy.astro.source.Pulsar.tau", false]], "templatendspatialmodel (class in gammapy.modeling.models)": [[278, "gammapy.modeling.models.TemplateNDSpatialModel", false]], "templatendspectralmodel (class in gammapy.modeling.models)": [[279, "gammapy.modeling.models.TemplateNDSpectralModel", false]], "templatenpredmodel (class in gammapy.modeling.models)": [[280, "gammapy.modeling.models.TemplateNPredModel", false]], "templatephasecurvetemporalmodel (class in gammapy.modeling.models)": [[281, "gammapy.modeling.models.TemplatePhaseCurveTemporalModel", false]], "templatespatialmodel (class in gammapy.modeling.models)": [[282, "gammapy.modeling.models.TemplateSpatialModel", false]], "templatespectralmodel (class in gammapy.modeling.models)": [[283, "gammapy.modeling.models.TemplateSpectralModel", false]], "temporal_model (gammapy.modeling.models.skymodel attribute)": [[270, "gammapy.modeling.models.SkyModel.temporal_model", false]], "temporal_model_registry (in module gammapy.modeling.models)": [[277, "gammapy.modeling.models.TEMPORAL_MODEL_REGISTRY", false]], "temporalmodel (class in gammapy.modeling.models)": [[284, "gammapy.modeling.models.TemporalModel", false]], "thermal_relic_cross_section (gammapy.astro.darkmatter.darkmatterannihilationspectralmodel attribute)": [[19, "gammapy.astro.darkmatter.DarkMatterAnnihilationSpectralModel.THERMAL_RELIC_CROSS_SECTION", false]], "theta (gammapy.maps.mapcoord attribute)": [[203, "gammapy.maps.MapCoord.theta", false]], "theta() (gammapy.astro.population.faucherspiral method)": [[33, "gammapy.astro.population.FaucherSpiral.theta", false]], "theta() (gammapy.astro.population.logspiral method)": [[34, "gammapy.astro.population.LogSpiral.theta", false]], "theta() (gammapy.astro.population.valleespiral method)": [[38, "gammapy.astro.population.ValleeSpiral.theta", false]], "theta_0 (gammapy.astro.population.faucherspiral attribute)": [[33, "gammapy.astro.population.FaucherSpiral.theta_0", false]], "theta_0 (gammapy.astro.population.valleespiral attribute)": [[38, "gammapy.astro.population.ValleeSpiral.theta_0", false]], "tied (gammapy.astro.population.casebattacharya1998 attribute)": [[28, "gammapy.astro.population.CaseBattacharya1998.tied", false]], "tied (gammapy.astro.population.exponential attribute)": [[29, "gammapy.astro.population.Exponential.tied", false]], "tied (gammapy.astro.population.faucherkaspi2006 attribute)": [[30, "gammapy.astro.population.FaucherKaspi2006.tied", false]], "tied (gammapy.astro.population.faucherkaspi2006velocitybimodal attribute)": [[31, "gammapy.astro.population.FaucherKaspi2006VelocityBimodal.tied", false]], "tied (gammapy.astro.population.faucherkaspi2006velocitymaxwellian attribute)": [[32, "gammapy.astro.population.FaucherKaspi2006VelocityMaxwellian.tied", false]], "tied (gammapy.astro.population.lorimer2006 attribute)": [[35, "gammapy.astro.population.Lorimer2006.tied", false]], "tied (gammapy.astro.population.paczynski1990 attribute)": [[36, "gammapy.astro.population.Paczynski1990.tied", false]], "tied (gammapy.astro.population.paczynski1990velocity attribute)": [[37, "gammapy.astro.population.Paczynski1990Velocity.tied", false]], "tied (gammapy.astro.population.yusifovkucuk2004 attribute)": [[39, "gammapy.astro.population.YusifovKucuk2004.tied", false]], "tied (gammapy.astro.population.yusifovkucuk2004b attribute)": [[40, "gammapy.astro.population.YusifovKucuk2004B.tied", false]], "tilt (gammapy.modeling.models.powerlawnormspectralmodel attribute)": [[260, "gammapy.modeling.models.PowerLawNormSpectralModel.tilt", false]], "time (gammapy.data.eventlist attribute)": [[83, "gammapy.data.EventList.time", false]], "time (gammapy.data.pointinginfo attribute)": [[95, "gammapy.data.PointingInfo.time", false]], "time_bounds (gammapy.maps.timemapaxis attribute)": [[207, "gammapy.maps.TimeMapAxis.time_bounds", false]], "time_delta (gammapy.data.gti attribute)": [[86, "gammapy.data.GTI.time_delta", false]], "time_delta (gammapy.maps.timemapaxis attribute)": [[207, "gammapy.maps.TimeMapAxis.time_delta", false]], "time_edges (gammapy.maps.timemapaxis attribute)": [[207, "gammapy.maps.TimeMapAxis.time_edges", false]], "time_format (gammapy.maps.timemapaxis attribute)": [[207, "gammapy.maps.TimeMapAxis.time_format", false]], "time_intervals (gammapy.data.gti attribute)": [[86, "gammapy.data.GTI.time_intervals", false]], "time_max (gammapy.maps.timemapaxis attribute)": [[207, "gammapy.maps.TimeMapAxis.time_max", false]], "time_mid (gammapy.maps.timemapaxis attribute)": [[207, "gammapy.maps.TimeMapAxis.time_mid", false]], "time_min (gammapy.maps.timemapaxis attribute)": [[207, "gammapy.maps.TimeMapAxis.time_min", false]], "time_ref (gammapy.data.eventlist attribute)": [[83, "gammapy.data.EventList.time_ref", false]], "time_ref (gammapy.data.gti attribute)": [[86, "gammapy.data.GTI.time_ref", false]], "time_ref (gammapy.data.observationtable attribute)": [[92, "gammapy.data.ObservationTable.time_ref", false]], "time_ref (gammapy.data.pointinginfo attribute)": [[95, "gammapy.data.PointingInfo.time_ref", false]], "time_ref_from_dict() (in module gammapy.utils.time)": [[376, "gammapy.utils.time.time_ref_from_dict", false]], "time_ref_to_dict() (in module gammapy.utils.time)": [[377, "gammapy.utils.time.time_ref_to_dict", false]], "time_relative_to_ref() (in module gammapy.utils.time)": [[378, "gammapy.utils.time.time_relative_to_ref", false]], "time_start (gammapy.data.gti attribute)": [[86, "gammapy.data.GTI.time_start", false]], "time_start (gammapy.data.observationtable attribute)": [[92, "gammapy.data.ObservationTable.time_start", false]], "time_stop (gammapy.data.gti attribute)": [[86, "gammapy.data.GTI.time_stop", false]], "time_stop (gammapy.data.observationtable attribute)": [[92, "gammapy.data.ObservationTable.time_stop", false]], "time_sum (gammapy.data.gti attribute)": [[86, "gammapy.data.GTI.time_sum", false]], "time_sum() (gammapy.modeling.models.constanttemporalmodel static method)": [[229, "gammapy.modeling.models.ConstantTemporalModel.time_sum", false]], "time_sum() (gammapy.modeling.models.expdecaytemporalmodel static method)": [[237, "gammapy.modeling.models.ExpDecayTemporalModel.time_sum", false]], "time_sum() (gammapy.modeling.models.gaussiantemporalmodel static method)": [[242, "gammapy.modeling.models.GaussianTemporalModel.time_sum", false]], "time_sum() (gammapy.modeling.models.generalizedgaussiantemporalmodel static method)": [[244, "gammapy.modeling.models.GeneralizedGaussianTemporalModel.time_sum", false]], "time_sum() (gammapy.modeling.models.lightcurvetemplatetemporalmodel static method)": [[245, "gammapy.modeling.models.LightCurveTemplateTemporalModel.time_sum", false]], "time_sum() (gammapy.modeling.models.lineartemporalmodel static method)": [[246, "gammapy.modeling.models.LinearTemporalModel.time_sum", false]], "time_sum() (gammapy.modeling.models.powerlawtemporalmodel static method)": [[262, "gammapy.modeling.models.PowerLawTemporalModel.time_sum", false]], "time_sum() (gammapy.modeling.models.sinetemporalmodel static method)": [[269, "gammapy.modeling.models.SineTemporalModel.time_sum", false]], "time_sum() (gammapy.modeling.models.templatephasecurvetemporalmodel static method)": [[281, "gammapy.modeling.models.TemplatePhaseCurveTemporalModel.time_sum", false]], "time_sum() (gammapy.modeling.models.temporalmodel static method)": [[284, "gammapy.modeling.models.TemporalModel.time_sum", false]], "timemapaxis (class in gammapy.maps)": [[207, "gammapy.maps.TimeMapAxis", false]], "timmerkonig_lightcurve_simulator() (in module gammapy.stats)": [[298, "gammapy.stats.TimmerKonig_lightcurve_simulator", false]], "tmid (gammapy.data.observation attribute)": [[89, "gammapy.data.Observation.tmid", false]], "to_2d() (gammapy.irf.background3d method)": [[152, "gammapy.irf.Background3D.to_2d", false]], "to_3d() (gammapy.irf.background2d method)": [[151, "gammapy.irf.Background2D.to_3d", false]], "to_bands_hdu() (gammapy.maps.geom method)": [[195, "gammapy.maps.Geom.to_bands_hdu", false]], "to_bands_hdu() (gammapy.maps.hpxgeom method)": [[196, "gammapy.maps.HpxGeom.to_bands_hdu", false]], "to_bands_hdu() (gammapy.maps.regiongeom method)": [[205, "gammapy.maps.RegionGeom.to_bands_hdu", false]], "to_bands_hdu() (gammapy.maps.wcsgeom method)": [[208, "gammapy.maps.WcsGeom.to_bands_hdu", false]], "to_binsz() (gammapy.maps.hpxgeom method)": [[196, "gammapy.maps.HpxGeom.to_binsz", false]], "to_binsz() (gammapy.maps.regiongeom method)": [[205, "gammapy.maps.RegionGeom.to_binsz", false]], "to_binsz() (gammapy.maps.wcsgeom method)": [[208, "gammapy.maps.WcsGeom.to_binsz", false]], "to_binsz_wcs() (gammapy.maps.regiongeom method)": [[205, "gammapy.maps.RegionGeom.to_binsz_wcs", false]], "to_contiguous() (gammapy.maps.timemapaxis method)": [[207, "gammapy.maps.TimeMapAxis.to_contiguous", false]], "to_counts_hdulist() (gammapy.datasets.ogipdatasetwriter method)": [[109, "gammapy.datasets.OGIPDatasetWriter.to_counts_hdulist", false]], "to_cube() (gammapy.maps.geom method)": [[195, "gammapy.maps.Geom.to_cube", false]], "to_cube() (gammapy.maps.hpxgeom method)": [[196, "gammapy.maps.HpxGeom.to_cube", false]], "to_cube() (gammapy.maps.hpxmap method)": [[197, "gammapy.maps.HpxMap.to_cube", false]], "to_cube() (gammapy.maps.hpxndmap method)": [[198, "gammapy.maps.HpxNDMap.to_cube", false]], "to_cube() (gammapy.maps.map method)": [[200, "gammapy.maps.Map.to_cube", false]], "to_cube() (gammapy.maps.regiongeom method)": [[205, "gammapy.maps.RegionGeom.to_cube", false]], "to_cube() (gammapy.maps.regionndmap method)": [[206, "gammapy.maps.RegionNDMap.to_cube", false]], "to_cube() (gammapy.maps.wcsgeom method)": [[208, "gammapy.maps.WcsGeom.to_cube", false]], "to_cube() (gammapy.maps.wcsmap method)": [[209, "gammapy.maps.WcsMap.to_cube", false]], "to_cube() (gammapy.maps.wcsndmap method)": [[210, "gammapy.maps.WcsNDMap.to_cube", false]], "to_dict() (gammapy.astro.darkmatter.darkmatterannihilationspectralmodel method)": [[19, "gammapy.astro.darkmatter.DarkMatterAnnihilationSpectralModel.to_dict", false]], "to_dict() (gammapy.astro.darkmatter.darkmatterdecayspectralmodel method)": [[20, "gammapy.astro.darkmatter.DarkMatterDecaySpectralModel.to_dict", false]], "to_dict() (gammapy.astro.darkmatter.primaryflux method)": [[26, "gammapy.astro.darkmatter.PrimaryFlux.to_dict", false]], "to_dict() (gammapy.datasets.dataset method)": [[100, "gammapy.datasets.Dataset.to_dict", false]], "to_dict() (gammapy.datasets.fluxpointsdataset method)": [[103, "gammapy.datasets.FluxPointsDataset.to_dict", false]], "to_dict() (gammapy.datasets.mapdataset method)": [[104, "gammapy.datasets.MapDataset.to_dict", false]], "to_dict() (gammapy.datasets.mapdatasetonoff method)": [[107, "gammapy.datasets.MapDatasetOnOff.to_dict", false]], "to_dict() (gammapy.datasets.spectrumdataset method)": [[111, "gammapy.datasets.SpectrumDataset.to_dict", false]], "to_dict() (gammapy.datasets.spectrumdatasetonoff method)": [[112, "gammapy.datasets.SpectrumDatasetOnOff.to_dict", false]], "to_dict() (gammapy.modeling.covarianceresult method)": [[214, "gammapy.modeling.CovarianceResult.to_dict", false]], "to_dict() (gammapy.modeling.models.brokenpowerlawspectralmodel method)": [[224, "gammapy.modeling.models.BrokenPowerLawSpectralModel.to_dict", false]], "to_dict() (gammapy.modeling.models.compoundspectralmodel method)": [[225, "gammapy.modeling.models.CompoundSpectralModel.to_dict", false]], "to_dict() (gammapy.modeling.models.constantfluxspatialmodel method)": [[226, "gammapy.modeling.models.ConstantFluxSpatialModel.to_dict", false]], "to_dict() (gammapy.modeling.models.constantspatialmodel method)": [[227, "gammapy.modeling.models.ConstantSpatialModel.to_dict", false]], "to_dict() (gammapy.modeling.models.constantspectralmodel method)": [[228, "gammapy.modeling.models.ConstantSpectralModel.to_dict", false]], "to_dict() (gammapy.modeling.models.constanttemporalmodel method)": [[229, "gammapy.modeling.models.ConstantTemporalModel.to_dict", false]], "to_dict() (gammapy.modeling.models.datasetmodels method)": [[230, "gammapy.modeling.models.DatasetModels.to_dict", false]], "to_dict() (gammapy.modeling.models.diskspatialmodel method)": [[231, "gammapy.modeling.models.DiskSpatialModel.to_dict", false]], "to_dict() (gammapy.modeling.models.eblabsorptionnormspectralmodel method)": [[232, "gammapy.modeling.models.EBLAbsorptionNormSpectralModel.to_dict", false]], "to_dict() (gammapy.modeling.models.expcutoffpowerlaw3fglspectralmodel method)": [[234, "gammapy.modeling.models.ExpCutoffPowerLaw3FGLSpectralModel.to_dict", false]], "to_dict() (gammapy.modeling.models.expcutoffpowerlawnormspectralmodel method)": [[235, "gammapy.modeling.models.ExpCutoffPowerLawNormSpectralModel.to_dict", false]], "to_dict() (gammapy.modeling.models.expcutoffpowerlawspectralmodel method)": [[236, "gammapy.modeling.models.ExpCutoffPowerLawSpectralModel.to_dict", false]], "to_dict() (gammapy.modeling.models.expdecaytemporalmodel method)": [[237, "gammapy.modeling.models.ExpDecayTemporalModel.to_dict", false]], "to_dict() (gammapy.modeling.models.fovbackgroundmodel method)": [[238, "gammapy.modeling.models.FoVBackgroundModel.to_dict", false]], "to_dict() (gammapy.modeling.models.gaussianprior method)": [[239, "gammapy.modeling.models.GaussianPrior.to_dict", false]], "to_dict() (gammapy.modeling.models.gaussianspatialmodel method)": [[240, "gammapy.modeling.models.GaussianSpatialModel.to_dict", false]], "to_dict() (gammapy.modeling.models.gaussianspectralmodel method)": [[241, "gammapy.modeling.models.GaussianSpectralModel.to_dict", false]], "to_dict() (gammapy.modeling.models.gaussiantemporalmodel method)": [[242, "gammapy.modeling.models.GaussianTemporalModel.to_dict", false]], "to_dict() (gammapy.modeling.models.generalizedgaussianspatialmodel method)": [[243, "gammapy.modeling.models.GeneralizedGaussianSpatialModel.to_dict", false]], "to_dict() (gammapy.modeling.models.generalizedgaussiantemporalmodel method)": [[244, "gammapy.modeling.models.GeneralizedGaussianTemporalModel.to_dict", false]], "to_dict() (gammapy.modeling.models.lightcurvetemplatetemporalmodel method)": [[245, "gammapy.modeling.models.LightCurveTemplateTemporalModel.to_dict", false]], "to_dict() (gammapy.modeling.models.lineartemporalmodel method)": [[246, "gammapy.modeling.models.LinearTemporalModel.to_dict", false]], "to_dict() (gammapy.modeling.models.logparabolanormspectralmodel method)": [[247, "gammapy.modeling.models.LogParabolaNormSpectralModel.to_dict", false]], "to_dict() (gammapy.modeling.models.logparabolaspectralmodel method)": [[248, "gammapy.modeling.models.LogParabolaSpectralModel.to_dict", false]], "to_dict() (gammapy.modeling.models.loguniformprior method)": [[249, "gammapy.modeling.models.LogUniformPrior.to_dict", false]], "to_dict() (gammapy.modeling.models.meyercrabspectralmodel method)": [[251, "gammapy.modeling.models.MeyerCrabSpectralModel.to_dict", false]], "to_dict() (gammapy.modeling.models.modelbase method)": [[253, "gammapy.modeling.models.ModelBase.to_dict", false]], "to_dict() (gammapy.modeling.models.models method)": [[254, "gammapy.modeling.models.Models.to_dict", false]], "to_dict() (gammapy.modeling.models.naimaspectralmodel method)": [[255, "gammapy.modeling.models.NaimaSpectralModel.to_dict", false]], "to_dict() (gammapy.modeling.models.piecewisenormspatialmodel method)": [[256, "gammapy.modeling.models.PiecewiseNormSpatialModel.to_dict", false]], "to_dict() (gammapy.modeling.models.piecewisenormspectralmodel method)": [[257, "gammapy.modeling.models.PiecewiseNormSpectralModel.to_dict", false]], "to_dict() (gammapy.modeling.models.pointspatialmodel method)": [[258, "gammapy.modeling.models.PointSpatialModel.to_dict", false]], "to_dict() (gammapy.modeling.models.powerlaw2spectralmodel method)": [[259, "gammapy.modeling.models.PowerLaw2SpectralModel.to_dict", false]], "to_dict() (gammapy.modeling.models.powerlawnormspectralmodel method)": [[260, "gammapy.modeling.models.PowerLawNormSpectralModel.to_dict", false]], "to_dict() (gammapy.modeling.models.powerlawspectralmodel method)": [[261, "gammapy.modeling.models.PowerLawSpectralModel.to_dict", false]], "to_dict() (gammapy.modeling.models.powerlawtemporalmodel method)": [[262, "gammapy.modeling.models.PowerLawTemporalModel.to_dict", false]], "to_dict() (gammapy.modeling.models.prior method)": [[263, "gammapy.modeling.models.Prior.to_dict", false]], "to_dict() (gammapy.modeling.models.scalespectralmodel method)": [[266, "gammapy.modeling.models.ScaleSpectralModel.to_dict", false]], "to_dict() (gammapy.modeling.models.shell2spatialmodel method)": [[267, "gammapy.modeling.models.Shell2SpatialModel.to_dict", false]], "to_dict() (gammapy.modeling.models.shellspatialmodel method)": [[268, "gammapy.modeling.models.ShellSpatialModel.to_dict", false]], "to_dict() (gammapy.modeling.models.sinetemporalmodel method)": [[269, "gammapy.modeling.models.SineTemporalModel.to_dict", false]], "to_dict() (gammapy.modeling.models.skymodel method)": [[270, "gammapy.modeling.models.SkyModel.to_dict", false]], "to_dict() (gammapy.modeling.models.smoothbrokenpowerlawspectralmodel method)": [[271, "gammapy.modeling.models.SmoothBrokenPowerLawSpectralModel.to_dict", false]], "to_dict() (gammapy.modeling.models.spatialmodel method)": [[272, "gammapy.modeling.models.SpatialModel.to_dict", false]], "to_dict() (gammapy.modeling.models.spectralmodel method)": [[273, "gammapy.modeling.models.SpectralModel.to_dict", false]], "to_dict() (gammapy.modeling.models.superexpcutoffpowerlaw3fglspectralmodel method)": [[274, "gammapy.modeling.models.SuperExpCutoffPowerLaw3FGLSpectralModel.to_dict", false]], "to_dict() (gammapy.modeling.models.superexpcutoffpowerlaw4fgldr3spectralmodel method)": [[275, "gammapy.modeling.models.SuperExpCutoffPowerLaw4FGLDR3SpectralModel.to_dict", false]], "to_dict() (gammapy.modeling.models.superexpcutoffpowerlaw4fglspectralmodel method)": [[276, "gammapy.modeling.models.SuperExpCutoffPowerLaw4FGLSpectralModel.to_dict", false]], "to_dict() (gammapy.modeling.models.templatendspatialmodel method)": [[278, "gammapy.modeling.models.TemplateNDSpatialModel.to_dict", false]], "to_dict() (gammapy.modeling.models.templatendspectralmodel method)": [[279, "gammapy.modeling.models.TemplateNDSpectralModel.to_dict", false]], "to_dict() (gammapy.modeling.models.templatenpredmodel method)": [[280, "gammapy.modeling.models.TemplateNPredModel.to_dict", false]], "to_dict() (gammapy.modeling.models.templatephasecurvetemporalmodel method)": [[281, "gammapy.modeling.models.TemplatePhaseCurveTemporalModel.to_dict", false]], "to_dict() (gammapy.modeling.models.templatespatialmodel method)": [[282, "gammapy.modeling.models.TemplateSpatialModel.to_dict", false]], "to_dict() (gammapy.modeling.models.templatespectralmodel method)": [[283, "gammapy.modeling.models.TemplateSpectralModel.to_dict", false]], "to_dict() (gammapy.modeling.models.temporalmodel method)": [[284, "gammapy.modeling.models.TemporalModel.to_dict", false]], "to_dict() (gammapy.modeling.models.uniformprior method)": [[285, "gammapy.modeling.models.UniformPrior.to_dict", false]], "to_dict() (gammapy.modeling.optimizeresult method)": [[217, "gammapy.modeling.OptimizeResult.to_dict", false]], "to_dict() (gammapy.modeling.parameter method)": [[218, "gammapy.modeling.Parameter.to_dict", false]], "to_dict() (gammapy.modeling.parameters method)": [[219, "gammapy.modeling.Parameters.to_dict", false]], "to_dict() (gammapy.modeling.priorparameter method)": [[220, "gammapy.modeling.PriorParameter.to_dict", false]], "to_dict() (gammapy.modeling.priorparameters method)": [[221, "gammapy.modeling.PriorParameters.to_dict", false]], "to_edisp_kernel() (gammapy.irf.energydispersion2d method)": [[159, "gammapy.irf.EnergyDispersion2D.to_edisp_kernel", false]], "to_edisp_kernel_map() (gammapy.irf.edispmap method)": [[156, "gammapy.irf.EDispMap.to_edisp_kernel_map", false]], "to_even_npix() (gammapy.maps.wcsgeom method)": [[208, "gammapy.maps.WcsGeom.to_even_npix", false]], "to_fits_header() (gammapy.data.fixedpointinginfo method)": [[85, "gammapy.data.FixedPointingInfo.to_fits_header", false]], "to_frame() (gammapy.maps.mapcoord method)": [[203, "gammapy.maps.MapCoord.to_frame", false]], "to_gti() (gammapy.maps.timemapaxis method)": [[207, "gammapy.maps.TimeMapAxis.to_gti", false]], "to_hdu() (gammapy.maps.hpxmap method)": [[197, "gammapy.maps.HpxMap.to_hdu", false]], "to_hdu() (gammapy.maps.hpxndmap method)": [[198, "gammapy.maps.HpxNDMap.to_hdu", false]], "to_hdu() (gammapy.maps.wcsmap method)": [[209, "gammapy.maps.WcsMap.to_hdu", false]], "to_hdu() (gammapy.maps.wcsndmap method)": [[210, "gammapy.maps.WcsNDMap.to_hdu", false]], "to_hdulist() (gammapy.datasets.mapdataset method)": [[104, "gammapy.datasets.MapDataset.to_hdulist", false]], "to_hdulist() (gammapy.datasets.mapdatasetonoff method)": [[107, "gammapy.datasets.MapDatasetOnOff.to_hdulist", false]], "to_hdulist() (gammapy.datasets.spectrumdataset method)": [[111, "gammapy.datasets.SpectrumDataset.to_hdulist", false]], "to_hdulist() (gammapy.datasets.spectrumdatasetonoff method)": [[112, "gammapy.datasets.SpectrumDatasetOnOff.to_hdulist", false]], "to_hdulist() (gammapy.estimators.fluxmaps method)": [[126, "gammapy.estimators.FluxMaps.to_hdulist", false]], "to_hdulist() (gammapy.estimators.fluxpoints method)": [[128, "gammapy.estimators.FluxPoints.to_hdulist", false]], "to_hdulist() (gammapy.irf.background2d method)": [[151, "gammapy.irf.Background2D.to_hdulist", false]], "to_hdulist() (gammapy.irf.background3d method)": [[152, "gammapy.irf.Background3D.to_hdulist", false]], "to_hdulist() (gammapy.irf.backgroundirf method)": [[153, "gammapy.irf.BackgroundIRF.to_hdulist", false]], "to_hdulist() (gammapy.irf.edispkernel method)": [[154, "gammapy.irf.EDispKernel.to_hdulist", false]], "to_hdulist() (gammapy.irf.edispkernelmap method)": [[155, "gammapy.irf.EDispKernelMap.to_hdulist", false]], "to_hdulist() (gammapy.irf.edispmap method)": [[156, "gammapy.irf.EDispMap.to_hdulist", false]], "to_hdulist() (gammapy.irf.effectiveareatable2d method)": [[157, "gammapy.irf.EffectiveAreaTable2D.to_hdulist", false]], "to_hdulist() (gammapy.irf.energydependentmultigausspsf method)": [[158, "gammapy.irf.EnergyDependentMultiGaussPSF.to_hdulist", false]], "to_hdulist() (gammapy.irf.energydispersion2d method)": [[159, "gammapy.irf.EnergyDispersion2D.to_hdulist", false]], "to_hdulist() (gammapy.irf.irf method)": [[161, "gammapy.irf.IRF.to_hdulist", false]], "to_hdulist() (gammapy.irf.irfmap method)": [[162, "gammapy.irf.IRFMap.to_hdulist", false]], "to_hdulist() (gammapy.irf.parametricpsf method)": [[168, "gammapy.irf.ParametricPSF.to_hdulist", false]], "to_hdulist() (gammapy.irf.psf3d method)": [[164, "gammapy.irf.PSF3D.to_hdulist", false]], "to_hdulist() (gammapy.irf.psfking method)": [[166, "gammapy.irf.PSFKing.to_hdulist", false]], "to_hdulist() (gammapy.irf.psfmap method)": [[167, "gammapy.irf.PSFMap.to_hdulist", false]], "to_hdulist() (gammapy.irf.radmax2d method)": [[169, "gammapy.irf.RadMax2D.to_hdulist", false]], "to_hdulist() (gammapy.irf.recopsfmap method)": [[170, "gammapy.irf.RecoPSFMap.to_hdulist", false]], "to_hdulist() (gammapy.maps.hpxmap method)": [[197, "gammapy.maps.HpxMap.to_hdulist", false]], "to_hdulist() (gammapy.maps.hpxndmap method)": [[198, "gammapy.maps.HpxNDMap.to_hdulist", false]], "to_hdulist() (gammapy.maps.maps method)": [[204, "gammapy.maps.Maps.to_hdulist", false]], "to_hdulist() (gammapy.maps.regiongeom method)": [[205, "gammapy.maps.RegionGeom.to_hdulist", false]], "to_hdulist() (gammapy.maps.regionndmap method)": [[206, "gammapy.maps.RegionNDMap.to_hdulist", false]], "to_hdulist() (gammapy.maps.wcsmap method)": [[209, "gammapy.maps.WcsMap.to_hdulist", false]], "to_hdulist() (gammapy.maps.wcsndmap method)": [[210, "gammapy.maps.WcsNDMap.to_hdulist", false]], "to_header() (gammapy.data.eventlistmetadata method)": [[84, "gammapy.data.EventListMetaData.to_header", false]], "to_header() (gammapy.data.gtimetadata method)": [[87, "gammapy.data.GTIMetaData.to_header", false]], "to_header() (gammapy.data.observationmetadata method)": [[91, "gammapy.data.ObservationMetaData.to_header", false]], "to_header() (gammapy.datasets.mapdatasetmetadata method)": [[106, "gammapy.datasets.MapDatasetMetaData.to_header", false]], "to_header() (gammapy.estimators.fluxmetadata method)": [[127, "gammapy.estimators.FluxMetaData.to_header", false]], "to_header() (gammapy.maps.hpxgeom method)": [[196, "gammapy.maps.HpxGeom.to_header", false]], "to_header() (gammapy.maps.labelmapaxis method)": [[199, "gammapy.maps.LabelMapAxis.to_header", false]], "to_header() (gammapy.maps.mapaxes method)": [[201, "gammapy.maps.MapAxes.to_header", false]], "to_header() (gammapy.maps.mapaxis method)": [[202, "gammapy.maps.MapAxis.to_header", false]], "to_header() (gammapy.maps.timemapaxis method)": [[207, "gammapy.maps.TimeMapAxis.to_header", false]], "to_header() (gammapy.maps.wcsgeom method)": [[208, "gammapy.maps.WcsGeom.to_header", false]], "to_image() (gammapy.datasets.mapdataset method)": [[104, "gammapy.datasets.MapDataset.to_image", false]], "to_image() (gammapy.datasets.mapdatasetonoff method)": [[107, "gammapy.datasets.MapDatasetOnOff.to_image", false]], "to_image() (gammapy.datasets.spectrumdataset method)": [[111, "gammapy.datasets.SpectrumDataset.to_image", false]], "to_image() (gammapy.datasets.spectrumdatasetonoff method)": [[112, "gammapy.datasets.SpectrumDatasetOnOff.to_image", false]], "to_image() (gammapy.irf.edispkernel method)": [[154, "gammapy.irf.EDispKernel.to_image", false]], "to_image() (gammapy.irf.edispkernelmap method)": [[155, "gammapy.irf.EDispKernelMap.to_image", false]], "to_image() (gammapy.irf.psfkernel method)": [[165, "gammapy.irf.PSFKernel.to_image", false]], "to_image() (gammapy.irf.psfmap method)": [[167, "gammapy.irf.PSFMap.to_image", false]], "to_image() (gammapy.irf.recopsfmap method)": [[170, "gammapy.irf.RecoPSFMap.to_image", false]], "to_image() (gammapy.maps.geom method)": [[195, "gammapy.maps.Geom.to_image", false]], "to_image() (gammapy.maps.hpxgeom method)": [[196, "gammapy.maps.HpxGeom.to_image", false]], "to_image() (gammapy.maps.regiongeom method)": [[205, "gammapy.maps.RegionGeom.to_image", false]], "to_image() (gammapy.maps.wcsgeom method)": [[208, "gammapy.maps.WcsGeom.to_image", false]], "to_map_dataset() (gammapy.datasets.mapdatasetonoff method)": [[107, "gammapy.datasets.MapDatasetOnOff.to_map_dataset", false]], "to_map_dataset() (gammapy.datasets.spectrumdatasetonoff method)": [[112, "gammapy.datasets.SpectrumDatasetOnOff.to_map_dataset", false]], "to_maps() (gammapy.estimators.fluxmaps method)": [[126, "gammapy.estimators.FluxMaps.to_maps", false]], "to_maps() (gammapy.estimators.fluxpoints method)": [[128, "gammapy.estimators.FluxPoints.to_maps", false]], "to_masked() (gammapy.datasets.mapdataset method)": [[104, "gammapy.datasets.MapDataset.to_masked", false]], "to_masked() (gammapy.datasets.mapdatasetonoff method)": [[107, "gammapy.datasets.MapDatasetOnOff.to_masked", false]], "to_masked() (gammapy.datasets.spectrumdataset method)": [[111, "gammapy.datasets.SpectrumDataset.to_masked", false]], "to_masked() (gammapy.datasets.spectrumdatasetonoff method)": [[112, "gammapy.datasets.SpectrumDatasetOnOff.to_masked", false]], "to_models() (gammapy.catalog.sourcecatalog method)": [[56, "gammapy.catalog.SourceCatalog.to_models", false]], "to_models() (gammapy.catalog.sourcecatalog1lhaaso method)": [[57, "gammapy.catalog.SourceCatalog1LHAASO.to_models", false]], "to_models() (gammapy.catalog.sourcecatalog2fhl method)": [[58, "gammapy.catalog.SourceCatalog2FHL.to_models", false]], "to_models() (gammapy.catalog.sourcecatalog2hwc method)": [[59, "gammapy.catalog.SourceCatalog2HWC.to_models", false]], "to_models() (gammapy.catalog.sourcecatalog2pc method)": [[60, "gammapy.catalog.SourceCatalog2PC.to_models", false]], "to_models() (gammapy.catalog.sourcecatalog3fgl method)": [[61, "gammapy.catalog.SourceCatalog3FGL.to_models", false]], "to_models() (gammapy.catalog.sourcecatalog3fhl method)": [[62, "gammapy.catalog.SourceCatalog3FHL.to_models", false]], "to_models() (gammapy.catalog.sourcecatalog3hwc method)": [[63, "gammapy.catalog.SourceCatalog3HWC.to_models", false]], "to_models() (gammapy.catalog.sourcecatalog3pc method)": [[64, "gammapy.catalog.SourceCatalog3PC.to_models", false]], "to_models() (gammapy.catalog.sourcecatalog4fgl method)": [[65, "gammapy.catalog.SourceCatalog4FGL.to_models", false]], "to_models() (gammapy.catalog.sourcecataloggammacat method)": [[66, "gammapy.catalog.SourceCatalogGammaCat.to_models", false]], "to_models() (gammapy.catalog.sourcecataloghgps method)": [[67, "gammapy.catalog.SourceCatalogHGPS.to_models", false]], "to_node_type() (gammapy.maps.mapaxis method)": [[202, "gammapy.maps.MapAxis.to_node_type", false]], "to_nside() (gammapy.maps.hpxgeom method)": [[196, "gammapy.maps.HpxGeom.to_nside", false]], "to_nside() (gammapy.maps.hpxndmap method)": [[198, "gammapy.maps.HpxNDMap.to_nside", false]], "to_odd_npix() (gammapy.maps.wcsgeom method)": [[208, "gammapy.maps.WcsGeom.to_odd_npix", false]], "to_pandas() (gammapy.data.hduindextable method)": [[88, "gammapy.data.HDUIndexTable.to_pandas", false]], "to_pandas() (gammapy.data.observationtable method)": [[92, "gammapy.data.ObservationTable.to_pandas", false]], "to_parameters_table() (gammapy.modeling.models.datasetmodels method)": [[230, "gammapy.modeling.models.DatasetModels.to_parameters_table", false]], "to_parameters_table() (gammapy.modeling.models.models method)": [[254, "gammapy.modeling.models.Models.to_parameters_table", false]], "to_psf3d() (gammapy.irf.energydependentmultigausspsf method)": [[158, "gammapy.irf.EnergyDependentMultiGaussPSF.to_psf3d", false]], "to_psf3d() (gammapy.irf.parametricpsf method)": [[168, "gammapy.irf.ParametricPSF.to_psf3d", false]], "to_psf3d() (gammapy.irf.psfking method)": [[166, "gammapy.irf.PSFKing.to_psf3d", false]], "to_region() (gammapy.modeling.models.constantfluxspatialmodel method)": [[226, "gammapy.modeling.models.ConstantFluxSpatialModel.to_region", false]], "to_region() (gammapy.modeling.models.constantspatialmodel method)": [[227, "gammapy.modeling.models.ConstantSpatialModel.to_region", false]], "to_region() (gammapy.modeling.models.diskspatialmodel method)": [[231, "gammapy.modeling.models.DiskSpatialModel.to_region", false]], "to_region() (gammapy.modeling.models.gaussianspatialmodel method)": [[240, "gammapy.modeling.models.GaussianSpatialModel.to_region", false]], "to_region() (gammapy.modeling.models.generalizedgaussianspatialmodel method)": [[243, "gammapy.modeling.models.GeneralizedGaussianSpatialModel.to_region", false]], "to_region() (gammapy.modeling.models.pointspatialmodel method)": [[258, "gammapy.modeling.models.PointSpatialModel.to_region", false]], "to_region() (gammapy.modeling.models.shell2spatialmodel method)": [[267, "gammapy.modeling.models.Shell2SpatialModel.to_region", false]], "to_region() (gammapy.modeling.models.shellspatialmodel method)": [[268, "gammapy.modeling.models.ShellSpatialModel.to_region", false]], "to_region() (gammapy.modeling.models.templatespatialmodel method)": [[282, "gammapy.modeling.models.TemplateSpatialModel.to_region", false]], "to_region_map_dataset() (gammapy.datasets.mapdataset method)": [[104, "gammapy.datasets.MapDataset.to_region_map_dataset", false]], "to_region_map_dataset() (gammapy.datasets.mapdatasetonoff method)": [[107, "gammapy.datasets.MapDatasetOnOff.to_region_map_dataset", false]], "to_region_map_dataset() (gammapy.datasets.spectrumdataset method)": [[111, "gammapy.datasets.SpectrumDataset.to_region_map_dataset", false]], "to_region_map_dataset() (gammapy.datasets.spectrumdatasetonoff method)": [[112, "gammapy.datasets.SpectrumDatasetOnOff.to_region_map_dataset", false]], "to_region_nd_map() (gammapy.irf.edispkernelmap method)": [[155, "gammapy.irf.EDispKernelMap.to_region_nd_map", false]], "to_region_nd_map() (gammapy.irf.edispmap method)": [[156, "gammapy.irf.EDispMap.to_region_nd_map", false]], "to_region_nd_map() (gammapy.irf.irfmap method)": [[162, "gammapy.irf.IRFMap.to_region_nd_map", false]], "to_region_nd_map() (gammapy.irf.psfmap method)": [[167, "gammapy.irf.PSFMap.to_region_nd_map", false]], "to_region_nd_map() (gammapy.irf.recopsfmap method)": [[170, "gammapy.irf.RecoPSFMap.to_region_nd_map", false]], "to_region_nd_map() (gammapy.maps.hpxndmap method)": [[198, "gammapy.maps.HpxNDMap.to_region_nd_map", false]], "to_region_nd_map() (gammapy.maps.regionndmap method)": [[206, "gammapy.maps.RegionNDMap.to_region_nd_map", false]], "to_region_nd_map() (gammapy.maps.wcsndmap method)": [[210, "gammapy.maps.WcsNDMap.to_region_nd_map", false]], "to_region_nd_map_histogram() (gammapy.maps.wcsndmap method)": [[210, "gammapy.maps.WcsNDMap.to_region_nd_map_histogram", false]], "to_regions() (gammapy.modeling.models.datasetmodels method)": [[230, "gammapy.modeling.models.DatasetModels.to_regions", false]], "to_regions() (gammapy.modeling.models.models method)": [[254, "gammapy.modeling.models.Models.to_regions", false]], "to_spectrum_dataset() (gammapy.datasets.mapdataset method)": [[104, "gammapy.datasets.MapDataset.to_spectrum_dataset", false]], "to_spectrum_dataset() (gammapy.datasets.mapdatasetonoff method)": [[107, "gammapy.datasets.MapDatasetOnOff.to_spectrum_dataset", false]], "to_spectrum_dataset() (gammapy.datasets.spectrumdataset method)": [[111, "gammapy.datasets.SpectrumDataset.to_spectrum_dataset", false]], "to_spectrum_dataset() (gammapy.datasets.spectrumdatasetonoff method)": [[112, "gammapy.datasets.SpectrumDatasetOnOff.to_spectrum_dataset", false]], "to_spectrum_datasets() (gammapy.datasets.datasets method)": [[101, "gammapy.datasets.Datasets.to_spectrum_datasets", false]], "to_swapped() (gammapy.maps.hpxgeom method)": [[196, "gammapy.maps.HpxGeom.to_swapped", false]], "to_swapped() (gammapy.maps.hpxmap method)": [[197, "gammapy.maps.HpxMap.to_swapped", false]], "to_swapped() (gammapy.maps.hpxndmap method)": [[198, "gammapy.maps.HpxNDMap.to_swapped", false]], "to_table() (gammapy.estimators.fluxpoints method)": [[128, "gammapy.estimators.FluxPoints.to_table", false]], "to_table() (gammapy.irf.background2d method)": [[151, "gammapy.irf.Background2D.to_table", false]], "to_table() (gammapy.irf.background3d method)": [[152, "gammapy.irf.Background3D.to_table", false]], "to_table() (gammapy.irf.backgroundirf method)": [[153, "gammapy.irf.BackgroundIRF.to_table", false]], "to_table() (gammapy.irf.edispkernel method)": [[154, "gammapy.irf.EDispKernel.to_table", false]], "to_table() (gammapy.irf.effectiveareatable2d method)": [[157, "gammapy.irf.EffectiveAreaTable2D.to_table", false]], "to_table() (gammapy.irf.energydependentmultigausspsf method)": [[158, "gammapy.irf.EnergyDependentMultiGaussPSF.to_table", false]], "to_table() (gammapy.irf.energydispersion2d method)": [[159, "gammapy.irf.EnergyDispersion2D.to_table", false]], "to_table() (gammapy.irf.irf method)": [[161, "gammapy.irf.IRF.to_table", false]], "to_table() (gammapy.irf.parametricpsf method)": [[168, "gammapy.irf.ParametricPSF.to_table", false]], "to_table() (gammapy.irf.psf3d method)": [[164, "gammapy.irf.PSF3D.to_table", false]], "to_table() (gammapy.irf.psfking method)": [[166, "gammapy.irf.PSFKing.to_table", false]], "to_table() (gammapy.irf.radmax2d method)": [[169, "gammapy.irf.RadMax2D.to_table", false]], "to_table() (gammapy.maps.mapaxes method)": [[201, "gammapy.maps.MapAxes.to_table", false]], "to_table() (gammapy.maps.mapaxis method)": [[202, "gammapy.maps.MapAxis.to_table", false]], "to_table() (gammapy.maps.regionndmap method)": [[206, "gammapy.maps.RegionNDMap.to_table", false]], "to_table() (gammapy.maps.timemapaxis method)": [[207, "gammapy.maps.TimeMapAxis.to_table", false]], "to_table() (gammapy.modeling.models.lightcurvetemplatetemporalmodel method)": [[245, "gammapy.modeling.models.LightCurveTemplateTemporalModel.to_table", false]], "to_table() (gammapy.modeling.parameters method)": [[219, "gammapy.modeling.Parameters.to_table", false]], "to_table() (gammapy.modeling.priorparameters method)": [[221, "gammapy.modeling.PriorParameters.to_table", false]], "to_table_hdu() (gammapy.data.eventlist method)": [[83, "gammapy.data.EventList.to_table_hdu", false]], "to_table_hdu() (gammapy.data.gti method)": [[86, "gammapy.data.GTI.to_table_hdu", false]], "to_table_hdu() (gammapy.irf.background2d method)": [[151, "gammapy.irf.Background2D.to_table_hdu", false]], "to_table_hdu() (gammapy.irf.background3d method)": [[152, "gammapy.irf.Background3D.to_table_hdu", false]], "to_table_hdu() (gammapy.irf.backgroundirf method)": [[153, "gammapy.irf.BackgroundIRF.to_table_hdu", false]], "to_table_hdu() (gammapy.irf.edispkernel method)": [[154, "gammapy.irf.EDispKernel.to_table_hdu", false]], "to_table_hdu() (gammapy.irf.effectiveareatable2d method)": [[157, "gammapy.irf.EffectiveAreaTable2D.to_table_hdu", false]], "to_table_hdu() (gammapy.irf.energydependentmultigausspsf method)": [[158, "gammapy.irf.EnergyDependentMultiGaussPSF.to_table_hdu", false]], "to_table_hdu() (gammapy.irf.energydispersion2d method)": [[159, "gammapy.irf.EnergyDispersion2D.to_table_hdu", false]], "to_table_hdu() (gammapy.irf.irf method)": [[161, "gammapy.irf.IRF.to_table_hdu", false]], "to_table_hdu() (gammapy.irf.parametricpsf method)": [[168, "gammapy.irf.ParametricPSF.to_table_hdu", false]], "to_table_hdu() (gammapy.irf.psf3d method)": [[164, "gammapy.irf.PSF3D.to_table_hdu", false]], "to_table_hdu() (gammapy.irf.psfking method)": [[166, "gammapy.irf.PSFKing.to_table_hdu", false]], "to_table_hdu() (gammapy.irf.radmax2d method)": [[169, "gammapy.irf.RadMax2D.to_table_hdu", false]], "to_table_hdu() (gammapy.maps.mapaxes method)": [[201, "gammapy.maps.MapAxes.to_table_hdu", false]], "to_table_hdu() (gammapy.maps.mapaxis method)": [[202, "gammapy.maps.MapAxis.to_table_hdu", false]], "to_template_sky_model() (gammapy.modeling.models.datasetmodels method)": [[230, "gammapy.modeling.models.DatasetModels.to_template_sky_model", false]], "to_template_sky_model() (gammapy.modeling.models.models method)": [[254, "gammapy.modeling.models.Models.to_template_sky_model", false]], "to_template_spectral_model() (gammapy.modeling.models.datasetmodels method)": [[230, "gammapy.modeling.models.DatasetModels.to_template_spectral_model", false]], "to_template_spectral_model() (gammapy.modeling.models.models method)": [[254, "gammapy.modeling.models.Models.to_template_spectral_model", false]], "to_unit() (gammapy.irf.background2d method)": [[151, "gammapy.irf.Background2D.to_unit", false]], "to_unit() (gammapy.irf.background3d method)": [[152, "gammapy.irf.Background3D.to_unit", false]], "to_unit() (gammapy.irf.backgroundirf method)": [[153, "gammapy.irf.BackgroundIRF.to_unit", false]], "to_unit() (gammapy.irf.edispkernel method)": [[154, "gammapy.irf.EDispKernel.to_unit", false]], "to_unit() (gammapy.irf.effectiveareatable2d method)": [[157, "gammapy.irf.EffectiveAreaTable2D.to_unit", false]], "to_unit() (gammapy.irf.energydependentmultigausspsf method)": [[158, "gammapy.irf.EnergyDependentMultiGaussPSF.to_unit", false]], "to_unit() (gammapy.irf.energydispersion2d method)": [[159, "gammapy.irf.EnergyDispersion2D.to_unit", false]], "to_unit() (gammapy.irf.irf method)": [[161, "gammapy.irf.IRF.to_unit", false]], "to_unit() (gammapy.irf.parametricpsf method)": [[168, "gammapy.irf.ParametricPSF.to_unit", false]], "to_unit() (gammapy.irf.psf3d method)": [[164, "gammapy.irf.PSF3D.to_unit", false]], "to_unit() (gammapy.irf.psfking method)": [[166, "gammapy.irf.PSFKing.to_unit", false]], "to_unit() (gammapy.irf.radmax2d method)": [[169, "gammapy.irf.RadMax2D.to_unit", false]], "to_unit() (gammapy.maps.hpxmap method)": [[197, "gammapy.maps.HpxMap.to_unit", false]], "to_unit() (gammapy.maps.hpxndmap method)": [[198, "gammapy.maps.HpxNDMap.to_unit", false]], "to_unit() (gammapy.maps.map method)": [[200, "gammapy.maps.Map.to_unit", false]], "to_unit() (gammapy.maps.regionndmap method)": [[206, "gammapy.maps.RegionNDMap.to_unit", false]], "to_unit() (gammapy.maps.wcsmap method)": [[209, "gammapy.maps.WcsMap.to_unit", false]], "to_unit() (gammapy.maps.wcsndmap method)": [[210, "gammapy.maps.WcsNDMap.to_unit", false]], "to_wcs() (gammapy.maps.hpxmap method)": [[197, "gammapy.maps.HpxMap.to_wcs", false]], "to_wcs() (gammapy.maps.hpxndmap method)": [[198, "gammapy.maps.HpxNDMap.to_wcs", false]], "to_wcs_geom() (gammapy.maps.hpxgeom method)": [[196, "gammapy.maps.HpxGeom.to_wcs_geom", false]], "to_wcs_geom() (gammapy.maps.regiongeom method)": [[205, "gammapy.maps.RegionGeom.to_wcs_geom", false]], "to_wcs_tiles() (gammapy.maps.hpxgeom method)": [[196, "gammapy.maps.HpxGeom.to_wcs_tiles", false]], "to_wcs_tiles() (gammapy.maps.hpxndmap method)": [[198, "gammapy.maps.HpxNDMap.to_wcs_tiles", false]], "to_yaml() (gammapy.analysis.analysisconfig method)": [[16, "gammapy.analysis.AnalysisConfig.to_yaml", false]], "to_yaml() (gammapy.data.eventlistmetadata method)": [[84, "gammapy.data.EventListMetaData.to_yaml", false]], "to_yaml() (gammapy.data.gtimetadata method)": [[87, "gammapy.data.GTIMetaData.to_yaml", false]], "to_yaml() (gammapy.data.observationmetadata method)": [[91, "gammapy.data.ObservationMetaData.to_yaml", false]], "to_yaml() (gammapy.datasets.mapdatasetmetadata method)": [[106, "gammapy.datasets.MapDatasetMetaData.to_yaml", false]], "to_yaml() (gammapy.estimators.fluxmetadata method)": [[127, "gammapy.estimators.FluxMetaData.to_yaml", false]], "to_yaml() (gammapy.modeling.models.datasetmodels method)": [[230, "gammapy.modeling.models.DatasetModels.to_yaml", false]], "to_yaml() (gammapy.modeling.models.models method)": [[254, "gammapy.modeling.models.Models.to_yaml", false]], "to_yaml() (in module gammapy.utils.scripts)": [[362, "gammapy.utils.scripts.to_yaml", false]], "total_stat (gammapy.modeling.fitresult attribute)": [[216, "gammapy.modeling.FitResult.total_stat", false]], "total_stat (gammapy.modeling.optimizeresult attribute)": [[217, "gammapy.modeling.OptimizeResult.total_stat", false]], "trace (gammapy.modeling.fitresult attribute)": [[216, "gammapy.modeling.FitResult.trace", false]], "trace (gammapy.modeling.optimizeresult attribute)": [[217, "gammapy.modeling.OptimizeResult.trace", false]], "transform() (gammapy.modeling.parameter method)": [[218, "gammapy.modeling.Parameter.transform", false]], "transform() (gammapy.modeling.priorparameter method)": [[220, "gammapy.modeling.PriorParameter.transform", false]], "transform_to() (gammapy.utils.coordinates.fovaltazframe method)": [[320, "gammapy.utils.coordinates.FoVAltAzFrame.transform_to", false]], "transform_to() (gammapy.utils.coordinates.fovicrsframe method)": [[321, "gammapy.utils.coordinates.FoVICRSFrame.transform_to", false]], "transit": [[608, "term-Transit", true]], "transpose() (gammapy.utils.coordinates.fovaltazframe method)": [[320, "gammapy.utils.coordinates.FoVAltAzFrame.transpose", false]], "transpose() (gammapy.utils.coordinates.fovicrsframe method)": [[321, "gammapy.utils.coordinates.FoVICRSFrame.transpose", false]], "trapz_loglog() (in module gammapy.utils.integrate)": [[332, "gammapy.utils.integrate.trapz_loglog", false]], "true energy": [[608, "term-True-Energy", true]], "ts": [[608, "term-TS", true]], "ts (gammapy.estimators.fluxmaps attribute)": [[126, "gammapy.estimators.FluxMaps.ts", false]], "ts (gammapy.estimators.fluxpoints attribute)": [[128, "gammapy.estimators.FluxPoints.ts", false]], "ts (gammapy.stats.cashcountsstatistic attribute)": [[295, "gammapy.stats.CashCountsStatistic.ts", false]], "ts (gammapy.stats.wstatcountsstatistic attribute)": [[299, "gammapy.stats.WStatCountsStatistic.ts", false]], "ts_scan (gammapy.estimators.fluxmaps attribute)": [[126, "gammapy.estimators.FluxMaps.ts_scan", false]], "ts_scan (gammapy.estimators.fluxpoints attribute)": [[128, "gammapy.estimators.FluxPoints.ts_scan", false]], "ts_to_sigma() (in module gammapy.stats)": [[314, "gammapy.stats.ts_to_sigma", false]], "tsmapestimator (class in gammapy.estimators)": [[137, "gammapy.estimators.TSMapEstimator", false]], "tstart (gammapy.data.observation attribute)": [[89, "gammapy.data.Observation.tstart", false]], "tstop (gammapy.data.observation attribute)": [[89, "gammapy.data.Observation.tstop", false]], "type (gammapy.astro.darkmatter.darkmatterannihilationspectralmodel attribute)": [[19, "gammapy.astro.darkmatter.DarkMatterAnnihilationSpectralModel.type", false]], "type (gammapy.astro.darkmatter.darkmatterdecayspectralmodel attribute)": [[20, "gammapy.astro.darkmatter.DarkMatterDecaySpectralModel.type", false]], "type (gammapy.astro.darkmatter.primaryflux attribute)": [[26, "gammapy.astro.darkmatter.PrimaryFlux.type", false]], "type (gammapy.modeling.models.brokenpowerlawspectralmodel attribute)": [[224, "gammapy.modeling.models.BrokenPowerLawSpectralModel.type", false]], "type (gammapy.modeling.models.compoundspectralmodel attribute)": [[225, "gammapy.modeling.models.CompoundSpectralModel.type", false]], "type (gammapy.modeling.models.constantfluxspatialmodel attribute)": [[226, "gammapy.modeling.models.ConstantFluxSpatialModel.type", false]], "type (gammapy.modeling.models.constantspatialmodel attribute)": [[227, "gammapy.modeling.models.ConstantSpatialModel.type", false]], "type (gammapy.modeling.models.constantspectralmodel attribute)": [[228, "gammapy.modeling.models.ConstantSpectralModel.type", false]], "type (gammapy.modeling.models.constanttemporalmodel attribute)": [[229, "gammapy.modeling.models.ConstantTemporalModel.type", false]], "type (gammapy.modeling.models.diskspatialmodel attribute)": [[231, "gammapy.modeling.models.DiskSpatialModel.type", false]], "type (gammapy.modeling.models.eblabsorptionnormspectralmodel attribute)": [[232, "gammapy.modeling.models.EBLAbsorptionNormSpectralModel.type", false]], "type (gammapy.modeling.models.expcutoffpowerlaw3fglspectralmodel attribute)": [[234, "gammapy.modeling.models.ExpCutoffPowerLaw3FGLSpectralModel.type", false]], "type (gammapy.modeling.models.expcutoffpowerlawnormspectralmodel attribute)": [[235, "gammapy.modeling.models.ExpCutoffPowerLawNormSpectralModel.type", false]], "type (gammapy.modeling.models.expcutoffpowerlawspectralmodel attribute)": [[236, "gammapy.modeling.models.ExpCutoffPowerLawSpectralModel.type", false]], "type (gammapy.modeling.models.expdecaytemporalmodel attribute)": [[237, "gammapy.modeling.models.ExpDecayTemporalModel.type", false]], "type (gammapy.modeling.models.fovbackgroundmodel attribute)": [[238, "gammapy.modeling.models.FoVBackgroundModel.type", false]], "type (gammapy.modeling.models.gaussianprior attribute)": [[239, "gammapy.modeling.models.GaussianPrior.type", false]], "type (gammapy.modeling.models.gaussianspatialmodel attribute)": [[240, "gammapy.modeling.models.GaussianSpatialModel.type", false]], "type (gammapy.modeling.models.gaussianspectralmodel attribute)": [[241, "gammapy.modeling.models.GaussianSpectralModel.type", false]], "type (gammapy.modeling.models.gaussiantemporalmodel attribute)": [[242, "gammapy.modeling.models.GaussianTemporalModel.type", false]], "type (gammapy.modeling.models.generalizedgaussianspatialmodel attribute)": [[243, "gammapy.modeling.models.GeneralizedGaussianSpatialModel.type", false]], "type (gammapy.modeling.models.generalizedgaussiantemporalmodel attribute)": [[244, "gammapy.modeling.models.GeneralizedGaussianTemporalModel.type", false]], "type (gammapy.modeling.models.lightcurvetemplatetemporalmodel attribute)": [[245, "gammapy.modeling.models.LightCurveTemplateTemporalModel.type", false]], "type (gammapy.modeling.models.lineartemporalmodel attribute)": [[246, "gammapy.modeling.models.LinearTemporalModel.type", false]], "type (gammapy.modeling.models.logparabolanormspectralmodel attribute)": [[247, "gammapy.modeling.models.LogParabolaNormSpectralModel.type", false]], "type (gammapy.modeling.models.logparabolaspectralmodel attribute)": [[248, "gammapy.modeling.models.LogParabolaSpectralModel.type", false]], "type (gammapy.modeling.models.loguniformprior attribute)": [[249, "gammapy.modeling.models.LogUniformPrior.type", false]], "type (gammapy.modeling.models.meyercrabspectralmodel attribute)": [[251, "gammapy.modeling.models.MeyerCrabSpectralModel.type", false]], "type (gammapy.modeling.models.modelbase attribute)": [[253, "gammapy.modeling.models.ModelBase.type", false]], "type (gammapy.modeling.models.naimaspectralmodel attribute)": [[255, "gammapy.modeling.models.NaimaSpectralModel.type", false]], "type (gammapy.modeling.models.piecewisenormspatialmodel attribute)": [[256, "gammapy.modeling.models.PiecewiseNormSpatialModel.type", false]], "type (gammapy.modeling.models.piecewisenormspectralmodel attribute)": [[257, "gammapy.modeling.models.PiecewiseNormSpectralModel.type", false]], "type (gammapy.modeling.models.pointspatialmodel attribute)": [[258, "gammapy.modeling.models.PointSpatialModel.type", false]], "type (gammapy.modeling.models.powerlaw2spectralmodel attribute)": [[259, "gammapy.modeling.models.PowerLaw2SpectralModel.type", false]], "type (gammapy.modeling.models.powerlawnormspectralmodel attribute)": [[260, "gammapy.modeling.models.PowerLawNormSpectralModel.type", false]], "type (gammapy.modeling.models.powerlawspectralmodel attribute)": [[261, "gammapy.modeling.models.PowerLawSpectralModel.type", false]], "type (gammapy.modeling.models.powerlawtemporalmodel attribute)": [[262, "gammapy.modeling.models.PowerLawTemporalModel.type", false]], "type (gammapy.modeling.models.prior attribute)": [[263, "gammapy.modeling.models.Prior.type", false]], "type (gammapy.modeling.models.scalespectralmodel attribute)": [[266, "gammapy.modeling.models.ScaleSpectralModel.type", false]], "type (gammapy.modeling.models.shell2spatialmodel attribute)": [[267, "gammapy.modeling.models.Shell2SpatialModel.type", false]], "type (gammapy.modeling.models.shellspatialmodel attribute)": [[268, "gammapy.modeling.models.ShellSpatialModel.type", false]], "type (gammapy.modeling.models.sinetemporalmodel attribute)": [[269, "gammapy.modeling.models.SineTemporalModel.type", false]], "type (gammapy.modeling.models.skymodel attribute)": [[270, "gammapy.modeling.models.SkyModel.type", false]], "type (gammapy.modeling.models.smoothbrokenpowerlawspectralmodel attribute)": [[271, "gammapy.modeling.models.SmoothBrokenPowerLawSpectralModel.type", false]], "type (gammapy.modeling.models.spatialmodel attribute)": [[272, "gammapy.modeling.models.SpatialModel.type", false]], "type (gammapy.modeling.models.spectralmodel attribute)": [[273, "gammapy.modeling.models.SpectralModel.type", false]], "type (gammapy.modeling.models.superexpcutoffpowerlaw3fglspectralmodel attribute)": [[274, "gammapy.modeling.models.SuperExpCutoffPowerLaw3FGLSpectralModel.type", false]], "type (gammapy.modeling.models.superexpcutoffpowerlaw4fgldr3spectralmodel attribute)": [[275, "gammapy.modeling.models.SuperExpCutoffPowerLaw4FGLDR3SpectralModel.type", false]], "type (gammapy.modeling.models.superexpcutoffpowerlaw4fglspectralmodel attribute)": [[276, "gammapy.modeling.models.SuperExpCutoffPowerLaw4FGLSpectralModel.type", false]], "type (gammapy.modeling.models.templatendspatialmodel attribute)": [[278, "gammapy.modeling.models.TemplateNDSpatialModel.type", false]], "type (gammapy.modeling.models.templatendspectralmodel attribute)": [[279, "gammapy.modeling.models.TemplateNDSpectralModel.type", false]], "type (gammapy.modeling.models.templatenpredmodel attribute)": [[280, "gammapy.modeling.models.TemplateNPredModel.type", false]], "type (gammapy.modeling.models.templatephasecurvetemporalmodel attribute)": [[281, "gammapy.modeling.models.TemplatePhaseCurveTemporalModel.type", false]], "type (gammapy.modeling.models.templatespatialmodel attribute)": [[282, "gammapy.modeling.models.TemplateSpatialModel.type", false]], "type (gammapy.modeling.models.templatespectralmodel attribute)": [[283, "gammapy.modeling.models.TemplateSpectralModel.type", false]], "type (gammapy.modeling.models.temporalmodel attribute)": [[284, "gammapy.modeling.models.TemporalModel.type", false]], "type (gammapy.modeling.models.uniformprior attribute)": [[285, "gammapy.modeling.models.UniformPrior.type", false]], "type (gammapy.modeling.parameter attribute)": [[218, "gammapy.modeling.Parameter.type", false]], "type (gammapy.modeling.priorparameter attribute)": [[220, "gammapy.modeling.PriorParameter.type", false]], "types (gammapy.modeling.parameters attribute)": [[219, "gammapy.modeling.Parameters.types", false]], "types (gammapy.modeling.priorparameters attribute)": [[221, "gammapy.modeling.PriorParameters.types", false]], "unfreeze() (gammapy.astro.darkmatter.darkmatterannihilationspectralmodel method)": [[19, "gammapy.astro.darkmatter.DarkMatterAnnihilationSpectralModel.unfreeze", false]], "unfreeze() (gammapy.astro.darkmatter.darkmatterdecayspectralmodel method)": [[20, "gammapy.astro.darkmatter.DarkMatterDecaySpectralModel.unfreeze", false]], "unfreeze() (gammapy.astro.darkmatter.primaryflux method)": [[26, "gammapy.astro.darkmatter.PrimaryFlux.unfreeze", false]], "unfreeze() (gammapy.modeling.models.brokenpowerlawspectralmodel method)": [[224, "gammapy.modeling.models.BrokenPowerLawSpectralModel.unfreeze", false]], "unfreeze() (gammapy.modeling.models.compoundspectralmodel method)": [[225, "gammapy.modeling.models.CompoundSpectralModel.unfreeze", false]], "unfreeze() (gammapy.modeling.models.constantfluxspatialmodel method)": [[226, "gammapy.modeling.models.ConstantFluxSpatialModel.unfreeze", false]], "unfreeze() (gammapy.modeling.models.constantspatialmodel method)": [[227, "gammapy.modeling.models.ConstantSpatialModel.unfreeze", false]], "unfreeze() (gammapy.modeling.models.constantspectralmodel method)": [[228, "gammapy.modeling.models.ConstantSpectralModel.unfreeze", false]], "unfreeze() (gammapy.modeling.models.constanttemporalmodel method)": [[229, "gammapy.modeling.models.ConstantTemporalModel.unfreeze", false]], "unfreeze() (gammapy.modeling.models.datasetmodels method)": [[230, "gammapy.modeling.models.DatasetModels.unfreeze", false]], "unfreeze() (gammapy.modeling.models.diskspatialmodel method)": [[231, "gammapy.modeling.models.DiskSpatialModel.unfreeze", false]], "unfreeze() (gammapy.modeling.models.eblabsorptionnormspectralmodel method)": [[232, "gammapy.modeling.models.EBLAbsorptionNormSpectralModel.unfreeze", false]], "unfreeze() (gammapy.modeling.models.expcutoffpowerlaw3fglspectralmodel method)": [[234, "gammapy.modeling.models.ExpCutoffPowerLaw3FGLSpectralModel.unfreeze", false]], "unfreeze() (gammapy.modeling.models.expcutoffpowerlawnormspectralmodel method)": [[235, "gammapy.modeling.models.ExpCutoffPowerLawNormSpectralModel.unfreeze", false]], "unfreeze() (gammapy.modeling.models.expcutoffpowerlawspectralmodel method)": [[236, "gammapy.modeling.models.ExpCutoffPowerLawSpectralModel.unfreeze", false]], "unfreeze() (gammapy.modeling.models.expdecaytemporalmodel method)": [[237, "gammapy.modeling.models.ExpDecayTemporalModel.unfreeze", false]], "unfreeze() (gammapy.modeling.models.fovbackgroundmodel method)": [[238, "gammapy.modeling.models.FoVBackgroundModel.unfreeze", false]], "unfreeze() (gammapy.modeling.models.gaussianprior method)": [[239, "gammapy.modeling.models.GaussianPrior.unfreeze", false]], "unfreeze() (gammapy.modeling.models.gaussianspatialmodel method)": [[240, "gammapy.modeling.models.GaussianSpatialModel.unfreeze", false]], "unfreeze() (gammapy.modeling.models.gaussianspectralmodel method)": [[241, "gammapy.modeling.models.GaussianSpectralModel.unfreeze", false]], "unfreeze() (gammapy.modeling.models.gaussiantemporalmodel method)": [[242, "gammapy.modeling.models.GaussianTemporalModel.unfreeze", false]], "unfreeze() (gammapy.modeling.models.generalizedgaussianspatialmodel method)": [[243, "gammapy.modeling.models.GeneralizedGaussianSpatialModel.unfreeze", false]], "unfreeze() (gammapy.modeling.models.generalizedgaussiantemporalmodel method)": [[244, "gammapy.modeling.models.GeneralizedGaussianTemporalModel.unfreeze", false]], "unfreeze() (gammapy.modeling.models.lightcurvetemplatetemporalmodel method)": [[245, "gammapy.modeling.models.LightCurveTemplateTemporalModel.unfreeze", false]], "unfreeze() (gammapy.modeling.models.lineartemporalmodel method)": [[246, "gammapy.modeling.models.LinearTemporalModel.unfreeze", false]], "unfreeze() (gammapy.modeling.models.logparabolanormspectralmodel method)": [[247, "gammapy.modeling.models.LogParabolaNormSpectralModel.unfreeze", false]], "unfreeze() (gammapy.modeling.models.logparabolaspectralmodel method)": [[248, "gammapy.modeling.models.LogParabolaSpectralModel.unfreeze", false]], "unfreeze() (gammapy.modeling.models.loguniformprior method)": [[249, "gammapy.modeling.models.LogUniformPrior.unfreeze", false]], "unfreeze() (gammapy.modeling.models.meyercrabspectralmodel method)": [[251, "gammapy.modeling.models.MeyerCrabSpectralModel.unfreeze", false]], "unfreeze() (gammapy.modeling.models.modelbase method)": [[253, "gammapy.modeling.models.ModelBase.unfreeze", false]], "unfreeze() (gammapy.modeling.models.models method)": [[254, "gammapy.modeling.models.Models.unfreeze", false]], "unfreeze() (gammapy.modeling.models.naimaspectralmodel method)": [[255, "gammapy.modeling.models.NaimaSpectralModel.unfreeze", false]], "unfreeze() (gammapy.modeling.models.piecewisenormspatialmodel method)": [[256, "gammapy.modeling.models.PiecewiseNormSpatialModel.unfreeze", false]], "unfreeze() (gammapy.modeling.models.piecewisenormspectralmodel method)": [[257, "gammapy.modeling.models.PiecewiseNormSpectralModel.unfreeze", false]], "unfreeze() (gammapy.modeling.models.pointspatialmodel method)": [[258, "gammapy.modeling.models.PointSpatialModel.unfreeze", false]], "unfreeze() (gammapy.modeling.models.powerlaw2spectralmodel method)": [[259, "gammapy.modeling.models.PowerLaw2SpectralModel.unfreeze", false]], "unfreeze() (gammapy.modeling.models.powerlawnormspectralmodel method)": [[260, "gammapy.modeling.models.PowerLawNormSpectralModel.unfreeze", false]], "unfreeze() (gammapy.modeling.models.powerlawspectralmodel method)": [[261, "gammapy.modeling.models.PowerLawSpectralModel.unfreeze", false]], "unfreeze() (gammapy.modeling.models.powerlawtemporalmodel method)": [[262, "gammapy.modeling.models.PowerLawTemporalModel.unfreeze", false]], "unfreeze() (gammapy.modeling.models.prior method)": [[263, "gammapy.modeling.models.Prior.unfreeze", false]], "unfreeze() (gammapy.modeling.models.scalespectralmodel method)": [[266, "gammapy.modeling.models.ScaleSpectralModel.unfreeze", false]], "unfreeze() (gammapy.modeling.models.shell2spatialmodel method)": [[267, "gammapy.modeling.models.Shell2SpatialModel.unfreeze", false]], "unfreeze() (gammapy.modeling.models.shellspatialmodel method)": [[268, "gammapy.modeling.models.ShellSpatialModel.unfreeze", false]], "unfreeze() (gammapy.modeling.models.sinetemporalmodel method)": [[269, "gammapy.modeling.models.SineTemporalModel.unfreeze", false]], "unfreeze() (gammapy.modeling.models.skymodel method)": [[270, "gammapy.modeling.models.SkyModel.unfreeze", false]], "unfreeze() (gammapy.modeling.models.smoothbrokenpowerlawspectralmodel method)": [[271, "gammapy.modeling.models.SmoothBrokenPowerLawSpectralModel.unfreeze", false]], "unfreeze() (gammapy.modeling.models.spatialmodel method)": [[272, "gammapy.modeling.models.SpatialModel.unfreeze", false]], "unfreeze() (gammapy.modeling.models.spectralmodel method)": [[273, "gammapy.modeling.models.SpectralModel.unfreeze", false]], "unfreeze() (gammapy.modeling.models.superexpcutoffpowerlaw3fglspectralmodel method)": [[274, "gammapy.modeling.models.SuperExpCutoffPowerLaw3FGLSpectralModel.unfreeze", false]], "unfreeze() (gammapy.modeling.models.superexpcutoffpowerlaw4fgldr3spectralmodel method)": [[275, "gammapy.modeling.models.SuperExpCutoffPowerLaw4FGLDR3SpectralModel.unfreeze", false]], "unfreeze() (gammapy.modeling.models.superexpcutoffpowerlaw4fglspectralmodel method)": [[276, "gammapy.modeling.models.SuperExpCutoffPowerLaw4FGLSpectralModel.unfreeze", false]], "unfreeze() (gammapy.modeling.models.templatendspatialmodel method)": [[278, "gammapy.modeling.models.TemplateNDSpatialModel.unfreeze", false]], "unfreeze() (gammapy.modeling.models.templatendspectralmodel method)": [[279, "gammapy.modeling.models.TemplateNDSpectralModel.unfreeze", false]], "unfreeze() (gammapy.modeling.models.templatenpredmodel method)": [[280, "gammapy.modeling.models.TemplateNPredModel.unfreeze", false]], "unfreeze() (gammapy.modeling.models.templatephasecurvetemporalmodel method)": [[281, "gammapy.modeling.models.TemplatePhaseCurveTemporalModel.unfreeze", false]], "unfreeze() (gammapy.modeling.models.templatespatialmodel method)": [[282, "gammapy.modeling.models.TemplateSpatialModel.unfreeze", false]], "unfreeze() (gammapy.modeling.models.templatespectralmodel method)": [[283, "gammapy.modeling.models.TemplateSpectralModel.unfreeze", false]], "unfreeze() (gammapy.modeling.models.temporalmodel method)": [[284, "gammapy.modeling.models.TemporalModel.unfreeze", false]], "unfreeze() (gammapy.modeling.models.uniformprior method)": [[285, "gammapy.modeling.models.UniformPrior.unfreeze", false]], "unfreeze_all() (gammapy.modeling.parameters method)": [[219, "gammapy.modeling.Parameters.unfreeze_all", false]], "unfreeze_all() (gammapy.modeling.priorparameters method)": [[221, "gammapy.modeling.PriorParameters.unfreeze_all", false]], "uniformprior (class in gammapy.modeling.models)": [[285, "gammapy.modeling.models.UniformPrior", false]], "union() (gammapy.data.gti method)": [[86, "gammapy.data.GTI.union", false]], "union() (gammapy.maps.regiongeom method)": [[205, "gammapy.maps.RegionGeom.union", false]], "unique_parameters (gammapy.modeling.parameters attribute)": [[219, "gammapy.modeling.Parameters.unique_parameters", false]], "unique_parameters (gammapy.modeling.priorparameters attribute)": [[221, "gammapy.modeling.PriorParameters.unique_parameters", false]], "unit (gammapy.irf.background2d attribute)": [[151, "gammapy.irf.Background2D.unit", false]], "unit (gammapy.irf.background3d attribute)": [[152, "gammapy.irf.Background3D.unit", false]], "unit (gammapy.irf.backgroundirf attribute)": [[153, "gammapy.irf.BackgroundIRF.unit", false]], "unit (gammapy.irf.edispkernel attribute)": [[154, "gammapy.irf.EDispKernel.unit", false]], "unit (gammapy.irf.effectiveareatable2d attribute)": [[157, "gammapy.irf.EffectiveAreaTable2D.unit", false]], "unit (gammapy.irf.energydependentmultigausspsf attribute)": [[158, "gammapy.irf.EnergyDependentMultiGaussPSF.unit", false]], "unit (gammapy.irf.energydispersion2d attribute)": [[159, "gammapy.irf.EnergyDispersion2D.unit", false]], "unit (gammapy.irf.irf attribute)": [[161, "gammapy.irf.IRF.unit", false]], "unit (gammapy.irf.parametricpsf attribute)": [[168, "gammapy.irf.ParametricPSF.unit", false]], "unit (gammapy.irf.psf3d attribute)": [[164, "gammapy.irf.PSF3D.unit", false]], "unit (gammapy.irf.psfking attribute)": [[166, "gammapy.irf.PSFKing.unit", false]], "unit (gammapy.irf.radmax2d attribute)": [[169, "gammapy.irf.RadMax2D.unit", false]], "unit (gammapy.maps.hpxmap attribute)": [[197, "gammapy.maps.HpxMap.unit", false]], "unit (gammapy.maps.hpxndmap attribute)": [[198, "gammapy.maps.HpxNDMap.unit", false]], "unit (gammapy.maps.labelmapaxis attribute)": [[199, "gammapy.maps.LabelMapAxis.unit", false]], "unit (gammapy.maps.map attribute)": [[200, "gammapy.maps.Map.unit", false]], "unit (gammapy.maps.mapaxis attribute)": [[202, "gammapy.maps.MapAxis.unit", false]], "unit (gammapy.maps.regionndmap attribute)": [[206, "gammapy.maps.RegionNDMap.unit", false]], "unit (gammapy.maps.timemapaxis attribute)": [[207, "gammapy.maps.TimeMapAxis.unit", false]], "unit (gammapy.maps.wcsmap attribute)": [[209, "gammapy.maps.WcsMap.unit", false]], "unit (gammapy.maps.wcsndmap attribute)": [[210, "gammapy.maps.WcsNDMap.unit", false]], "unit (gammapy.modeling.parameter attribute)": [[218, "gammapy.modeling.Parameter.unit", false]], "unit (gammapy.modeling.priorparameter attribute)": [[220, "gammapy.modeling.PriorParameter.unit", false]], "unit_from_fits_image_hdu() (in module gammapy.utils.units)": [[380, "gammapy.utils.units.unit_from_fits_image_hdu", false]], "update() (gammapy.analysis.analysisconfig method)": [[16, "gammapy.analysis.AnalysisConfig.update", false]], "update() (gammapy.data.hduindextable method)": [[88, "gammapy.data.HDUIndexTable.update", false]], "update() (gammapy.data.observationtable method)": [[92, "gammapy.data.ObservationTable.update", false]], "update() (gammapy.maps.maps method)": [[204, "gammapy.maps.Maps.update", false]], "update_config() (gammapy.analysis.analysis method)": [[15, "gammapy.analysis.Analysis.update_config", false]], "update_forward_refs() (gammapy.analysis.analysisconfig class method)": [[16, "gammapy.analysis.AnalysisConfig.update_forward_refs", false]], "update_forward_refs() (gammapy.data.eventlistmetadata class method)": [[84, "gammapy.data.EventListMetaData.update_forward_refs", false]], "update_forward_refs() (gammapy.data.gtimetadata class method)": [[87, "gammapy.data.GTIMetaData.update_forward_refs", false]], "update_forward_refs() (gammapy.data.observationmetadata class method)": [[91, "gammapy.data.ObservationMetaData.update_forward_refs", false]], "update_forward_refs() (gammapy.datasets.mapdatasetmetadata class method)": [[106, "gammapy.datasets.MapDatasetMetaData.update_forward_refs", false]], "update_forward_refs() (gammapy.estimators.fluxmetadata class method)": [[127, "gammapy.estimators.FluxMetaData.update_forward_refs", false]], "update_from_dict() (gammapy.modeling.parameter method)": [[218, "gammapy.modeling.Parameter.update_from_dict", false]], "update_from_dict() (gammapy.modeling.priorparameter method)": [[220, "gammapy.modeling.PriorParameter.update_from_dict", false]], "update_link_label() (gammapy.modeling.models.datasetmodels method)": [[230, "gammapy.modeling.models.DatasetModels.update_link_label", false]], "update_link_label() (gammapy.modeling.models.models method)": [[254, "gammapy.modeling.models.Models.update_link_label", false]], "update_link_label() (gammapy.modeling.parameters method)": [[219, "gammapy.modeling.Parameters.update_link_label", false]], "update_link_label() (gammapy.modeling.priorparameters method)": [[221, "gammapy.modeling.PriorParameters.update_link_label", false]], "update_parameters_from_table() (gammapy.modeling.models.datasetmodels method)": [[230, "gammapy.modeling.models.DatasetModels.update_parameters_from_table", false]], "update_parameters_from_table() (gammapy.modeling.models.models method)": [[254, "gammapy.modeling.models.Models.update_parameters_from_table", false]], "update_scale() (gammapy.modeling.parameter method)": [[218, "gammapy.modeling.Parameter.update_scale", false]], "update_scale() (gammapy.modeling.priorparameter method)": [[220, "gammapy.modeling.PriorParameter.update_scale", false]], "upsample() (gammapy.maps.geom method)": [[195, "gammapy.maps.Geom.upsample", false]], "upsample() (gammapy.maps.hpxgeom method)": [[196, "gammapy.maps.HpxGeom.upsample", false]], "upsample() (gammapy.maps.hpxmap method)": [[197, "gammapy.maps.HpxMap.upsample", false]], "upsample() (gammapy.maps.hpxndmap method)": [[198, "gammapy.maps.HpxNDMap.upsample", false]], "upsample() (gammapy.maps.labelmapaxis method)": [[199, "gammapy.maps.LabelMapAxis.upsample", false]], "upsample() (gammapy.maps.map method)": [[200, "gammapy.maps.Map.upsample", false]], "upsample() (gammapy.maps.mapaxes method)": [[201, "gammapy.maps.MapAxes.upsample", false]], "upsample() (gammapy.maps.mapaxis method)": [[202, "gammapy.maps.MapAxis.upsample", false]], "upsample() (gammapy.maps.regiongeom method)": [[205, "gammapy.maps.RegionGeom.upsample", false]], "upsample() (gammapy.maps.regionndmap method)": [[206, "gammapy.maps.RegionNDMap.upsample", false]], "upsample() (gammapy.maps.timemapaxis method)": [[207, "gammapy.maps.TimeMapAxis.upsample", false]], "upsample() (gammapy.maps.wcsgeom method)": [[208, "gammapy.maps.WcsGeom.upsample", false]], "upsample() (gammapy.maps.wcsmap method)": [[209, "gammapy.maps.WcsMap.upsample", false]], "upsample() (gammapy.maps.wcsndmap method)": [[210, "gammapy.maps.WcsNDMap.upsample", false]], "use_center_as_plot_labels (gammapy.maps.mapaxis attribute)": [[202, "gammapy.maps.MapAxis.use_center_as_plot_labels", false]], "uses_quantity (gammapy.astro.population.casebattacharya1998 attribute)": [[28, "gammapy.astro.population.CaseBattacharya1998.uses_quantity", false]], "uses_quantity (gammapy.astro.population.exponential attribute)": [[29, "gammapy.astro.population.Exponential.uses_quantity", false]], "uses_quantity (gammapy.astro.population.faucherkaspi2006 attribute)": [[30, "gammapy.astro.population.FaucherKaspi2006.uses_quantity", false]], "uses_quantity (gammapy.astro.population.faucherkaspi2006velocitybimodal attribute)": [[31, "gammapy.astro.population.FaucherKaspi2006VelocityBimodal.uses_quantity", false]], "uses_quantity (gammapy.astro.population.faucherkaspi2006velocitymaxwellian attribute)": [[32, "gammapy.astro.population.FaucherKaspi2006VelocityMaxwellian.uses_quantity", false]], "uses_quantity (gammapy.astro.population.lorimer2006 attribute)": [[35, "gammapy.astro.population.Lorimer2006.uses_quantity", false]], "uses_quantity (gammapy.astro.population.paczynski1990 attribute)": [[36, "gammapy.astro.population.Paczynski1990.uses_quantity", false]], "uses_quantity (gammapy.astro.population.paczynski1990velocity attribute)": [[37, "gammapy.astro.population.Paczynski1990Velocity.uses_quantity", false]], "uses_quantity (gammapy.astro.population.yusifovkucuk2004 attribute)": [[39, "gammapy.astro.population.YusifovKucuk2004.uses_quantity", false]], "uses_quantity (gammapy.astro.population.yusifovkucuk2004b attribute)": [[40, "gammapy.astro.population.YusifovKucuk2004B.uses_quantity", false]], "v_0 (gammapy.astro.population.paczynski1990velocity attribute)": [[37, "gammapy.astro.population.Paczynski1990Velocity.v_0", false]], "valid_hdu_class (gammapy.data.hduindextable attribute)": [[88, "gammapy.data.HDUIndexTable.VALID_HDU_CLASS", false]], "valid_hdu_type (gammapy.data.hduindextable attribute)": [[88, "gammapy.data.HDUIndexTable.VALID_HDU_TYPE", false]], "validate() (gammapy.analysis.analysisconfig class method)": [[16, "gammapy.analysis.AnalysisConfig.validate", false]], "validate() (gammapy.data.eventlistmetadata class method)": [[84, "gammapy.data.EventListMetaData.validate", false]], "validate() (gammapy.data.gtimetadata class method)": [[87, "gammapy.data.GTIMetaData.validate", false]], "validate() (gammapy.data.observationmetadata class method)": [[91, "gammapy.data.ObservationMetaData.validate", false]], "validate() (gammapy.datasets.mapdatasetmetadata class method)": [[106, "gammapy.datasets.MapDatasetMetaData.validate", false]], "validate() (gammapy.estimators.fluxmetadata class method)": [[127, "gammapy.estimators.FluxMetaData.validate", false]], "valleespiral (class in gammapy.astro.population)": [[38, "gammapy.astro.population.ValleeSpiral", false]], "value (gammapy.modeling.models.constantspatialmodel attribute)": [[227, "gammapy.modeling.models.ConstantSpatialModel.value", false]], "value (gammapy.modeling.parameter attribute)": [[218, "gammapy.modeling.Parameter.value", false]], "value (gammapy.modeling.parameters attribute)": [[219, "gammapy.modeling.Parameters.value", false]], "value (gammapy.modeling.priorparameter attribute)": [[220, "gammapy.modeling.PriorParameter.value", false]], "value (gammapy.modeling.priorparameters attribute)": [[221, "gammapy.modeling.PriorParameters.value", false]], "values() (gammapy.data.hduindextable method)": [[88, "gammapy.data.HDUIndexTable.values", false]], "values() (gammapy.data.observationtable method)": [[92, "gammapy.data.ObservationTable.values", false]], "values() (gammapy.maps.maps method)": [[204, "gammapy.maps.Maps.values", false]], "values_equal() (gammapy.data.hduindextable method)": [[88, "gammapy.data.HDUIndexTable.values_equal", false]], "values_equal() (gammapy.data.observationtable method)": [[92, "gammapy.data.ObservationTable.values_equal", false]], "velocity (gammapy.utils.coordinates.fovaltazframe attribute)": [[320, "gammapy.utils.coordinates.FoVAltAzFrame.velocity", false]], "velocity (gammapy.utils.coordinates.fovicrsframe attribute)": [[321, "gammapy.utils.coordinates.FoVICRSFrame.velocity", false]], "velocity_distributions (in module gammapy.astro.population)": [[49, "gammapy.astro.population.velocity_distributions", false]], "velocity_glon_glat() (in module gammapy.utils.coordinates)": [[328, "gammapy.utils.coordinates.velocity_glon_glat", false]], "w (gammapy.astro.population.faucherkaspi2006velocitybimodal attribute)": [[31, "gammapy.astro.population.FaucherKaspi2006VelocityBimodal.w", false]], "wcd": [[608, "term-WCD", true]], "wcs (gammapy.maps.regiongeom attribute)": [[205, "gammapy.maps.RegionGeom.wcs", false]], "wcs (gammapy.maps.wcsgeom attribute)": [[208, "gammapy.maps.WcsGeom.wcs", false]], "wcs_geom (gammapy.modeling.models.datasetmodels attribute)": [[230, "gammapy.modeling.models.DatasetModels.wcs_geom", false]], "wcs_geom (gammapy.modeling.models.models attribute)": [[254, "gammapy.modeling.models.Models.wcs_geom", false]], "wcsgeom (class in gammapy.maps)": [[208, "gammapy.maps.WcsGeom", false]], "wcsmap (class in gammapy.maps)": [[209, "gammapy.maps.WcsMap", false]], "wcsndmap (class in gammapy.maps)": [[210, "gammapy.maps.WcsNDMap", false]], "weight (gammapy.modeling.models.gaussianprior attribute)": [[239, "gammapy.modeling.models.GaussianPrior.weight", false]], "weight (gammapy.modeling.models.loguniformprior attribute)": [[249, "gammapy.modeling.models.LogUniformPrior.weight", false]], "weight (gammapy.modeling.models.prior attribute)": [[263, "gammapy.modeling.models.Prior.weight", false]], "weight (gammapy.modeling.models.uniformprior attribute)": [[285, "gammapy.modeling.models.UniformPrior.weight", false]], "weighted_cash_sum_cython() (in module gammapy.stats)": [[315, "gammapy.stats.weighted_cash_sum_cython", false]], "width (gammapy.maps.hpxgeom attribute)": [[196, "gammapy.maps.HpxGeom.width", false]], "width (gammapy.maps.regiongeom attribute)": [[205, "gammapy.maps.RegionGeom.width", false]], "width (gammapy.maps.wcsgeom attribute)": [[208, "gammapy.maps.WcsGeom.width", false]], "width (gammapy.modeling.models.shellspatialmodel attribute)": [[268, "gammapy.modeling.models.ShellSpatialModel.width", false]], "width() (gammapy.catalog.sourcecataloglargescalehgps method)": [[68, "gammapy.catalog.SourceCatalogLargeScaleHGPS.width", false]], "width_error() (gammapy.catalog.sourcecataloglargescalehgps method)": [[68, "gammapy.catalog.SourceCatalogLargeScaleHGPS.width_error", false]], "with_units_from_data() (gammapy.astro.population.casebattacharya1998 method)": [[28, "gammapy.astro.population.CaseBattacharya1998.with_units_from_data", false]], "with_units_from_data() (gammapy.astro.population.exponential method)": [[29, "gammapy.astro.population.Exponential.with_units_from_data", false]], "with_units_from_data() (gammapy.astro.population.faucherkaspi2006 method)": [[30, "gammapy.astro.population.FaucherKaspi2006.with_units_from_data", false]], "with_units_from_data() (gammapy.astro.population.faucherkaspi2006velocitybimodal method)": [[31, "gammapy.astro.population.FaucherKaspi2006VelocityBimodal.with_units_from_data", false]], "with_units_from_data() (gammapy.astro.population.faucherkaspi2006velocitymaxwellian method)": [[32, "gammapy.astro.population.FaucherKaspi2006VelocityMaxwellian.with_units_from_data", false]], "with_units_from_data() (gammapy.astro.population.lorimer2006 method)": [[35, "gammapy.astro.population.Lorimer2006.with_units_from_data", false]], "with_units_from_data() (gammapy.astro.population.paczynski1990 method)": [[36, "gammapy.astro.population.Paczynski1990.with_units_from_data", false]], "with_units_from_data() (gammapy.astro.population.paczynski1990velocity method)": [[37, "gammapy.astro.population.Paczynski1990Velocity.with_units_from_data", false]], "with_units_from_data() (gammapy.astro.population.yusifovkucuk2004 method)": [[39, "gammapy.astro.population.YusifovKucuk2004.with_units_from_data", false]], "with_units_from_data() (gammapy.astro.population.yusifovkucuk2004b method)": [[40, "gammapy.astro.population.YusifovKucuk2004B.with_units_from_data", false]], "without_units_for_data() (gammapy.astro.population.casebattacharya1998 method)": [[28, "gammapy.astro.population.CaseBattacharya1998.without_units_for_data", false]], "without_units_for_data() (gammapy.astro.population.exponential method)": [[29, "gammapy.astro.population.Exponential.without_units_for_data", false]], "without_units_for_data() (gammapy.astro.population.faucherkaspi2006 method)": [[30, "gammapy.astro.population.FaucherKaspi2006.without_units_for_data", false]], "without_units_for_data() (gammapy.astro.population.faucherkaspi2006velocitybimodal method)": [[31, "gammapy.astro.population.FaucherKaspi2006VelocityBimodal.without_units_for_data", false]], "without_units_for_data() (gammapy.astro.population.faucherkaspi2006velocitymaxwellian method)": [[32, "gammapy.astro.population.FaucherKaspi2006VelocityMaxwellian.without_units_for_data", false]], "without_units_for_data() (gammapy.astro.population.lorimer2006 method)": [[35, "gammapy.astro.population.Lorimer2006.without_units_for_data", false]], "without_units_for_data() (gammapy.astro.population.paczynski1990 method)": [[36, "gammapy.astro.population.Paczynski1990.without_units_for_data", false]], "without_units_for_data() (gammapy.astro.population.paczynski1990velocity method)": [[37, "gammapy.astro.population.Paczynski1990Velocity.without_units_for_data", false]], "without_units_for_data() (gammapy.astro.population.yusifovkucuk2004 method)": [[39, "gammapy.astro.population.YusifovKucuk2004.without_units_for_data", false]], "without_units_for_data() (gammapy.astro.population.yusifovkucuk2004b method)": [[40, "gammapy.astro.population.YusifovKucuk2004B.without_units_for_data", false]], "wobbleregionsfinder (class in gammapy.makers)": [[185, "gammapy.makers.WobbleRegionsFinder", false]], "wrap_at() (in module gammapy.utils.units)": [[381, "gammapy.utils.units.wrap_at", false]], "wrap_coord() (gammapy.maps.mapaxis method)": [[202, "gammapy.maps.MapAxis.wrap_coord", false]], "write (gammapy.data.hduindextable attribute)": [[88, "gammapy.data.HDUIndexTable.write", false]], "write (gammapy.data.observationtable attribute)": [[92, "gammapy.data.ObservationTable.write", false]], "write() (gammapy.analysis.analysisconfig method)": [[16, "gammapy.analysis.AnalysisConfig.write", false]], "write() (gammapy.astro.darkmatter.primaryflux method)": [[26, "gammapy.astro.darkmatter.PrimaryFlux.write", false]], "write() (gammapy.data.gti method)": [[86, "gammapy.data.GTI.write", false]], "write() (gammapy.data.observation method)": [[89, "gammapy.data.Observation.write", false]], "write() (gammapy.datasets.datasets method)": [[101, "gammapy.datasets.Datasets.write", false]], "write() (gammapy.datasets.fluxpointsdataset method)": [[103, "gammapy.datasets.FluxPointsDataset.write", false]], "write() (gammapy.datasets.mapdataset method)": [[104, "gammapy.datasets.MapDataset.write", false]], "write() (gammapy.datasets.mapdatasetonoff method)": [[107, "gammapy.datasets.MapDatasetOnOff.write", false]], "write() (gammapy.datasets.ogipdatasetwriter method)": [[109, "gammapy.datasets.OGIPDatasetWriter.write", false]], "write() (gammapy.datasets.spectrumdataset method)": [[111, "gammapy.datasets.SpectrumDataset.write", false]], "write() (gammapy.datasets.spectrumdatasetonoff method)": [[112, "gammapy.datasets.SpectrumDatasetOnOff.write", false]], "write() (gammapy.estimators.fluxmaps method)": [[126, "gammapy.estimators.FluxMaps.write", false]], "write() (gammapy.estimators.fluxpoints method)": [[128, "gammapy.estimators.FluxPoints.write", false]], "write() (gammapy.irf.background2d method)": [[151, "gammapy.irf.Background2D.write", false]], "write() (gammapy.irf.background3d method)": [[152, "gammapy.irf.Background3D.write", false]], "write() (gammapy.irf.backgroundirf method)": [[153, "gammapy.irf.BackgroundIRF.write", false]], "write() (gammapy.irf.edispkernel method)": [[154, "gammapy.irf.EDispKernel.write", false]], "write() (gammapy.irf.edispkernelmap method)": [[155, "gammapy.irf.EDispKernelMap.write", false]], "write() (gammapy.irf.edispmap method)": [[156, "gammapy.irf.EDispMap.write", false]], "write() (gammapy.irf.effectiveareatable2d method)": [[157, "gammapy.irf.EffectiveAreaTable2D.write", false]], "write() (gammapy.irf.energydependentmultigausspsf method)": [[158, "gammapy.irf.EnergyDependentMultiGaussPSF.write", false]], "write() (gammapy.irf.energydispersion2d method)": [[159, "gammapy.irf.EnergyDispersion2D.write", false]], "write() (gammapy.irf.irf method)": [[161, "gammapy.irf.IRF.write", false]], "write() (gammapy.irf.irfmap method)": [[162, "gammapy.irf.IRFMap.write", false]], "write() (gammapy.irf.parametricpsf method)": [[168, "gammapy.irf.ParametricPSF.write", false]], "write() (gammapy.irf.psf3d method)": [[164, "gammapy.irf.PSF3D.write", false]], "write() (gammapy.irf.psfkernel method)": [[165, "gammapy.irf.PSFKernel.write", false]], "write() (gammapy.irf.psfking method)": [[166, "gammapy.irf.PSFKing.write", false]], "write() (gammapy.irf.psfmap method)": [[167, "gammapy.irf.PSFMap.write", false]], "write() (gammapy.irf.radmax2d method)": [[169, "gammapy.irf.RadMax2D.write", false]], "write() (gammapy.irf.recopsfmap method)": [[170, "gammapy.irf.RecoPSFMap.write", false]], "write() (gammapy.maps.hpxmap method)": [[197, "gammapy.maps.HpxMap.write", false]], "write() (gammapy.maps.hpxndmap method)": [[198, "gammapy.maps.HpxNDMap.write", false]], "write() (gammapy.maps.map method)": [[200, "gammapy.maps.Map.write", false]], "write() (gammapy.maps.maps method)": [[204, "gammapy.maps.Maps.write", false]], "write() (gammapy.maps.regionndmap method)": [[206, "gammapy.maps.RegionNDMap.write", false]], "write() (gammapy.maps.wcsmap method)": [[209, "gammapy.maps.WcsMap.write", false]], "write() (gammapy.maps.wcsndmap method)": [[210, "gammapy.maps.WcsNDMap.write", false]], "write() (gammapy.modeling.fitresult method)": [[216, "gammapy.modeling.FitResult.write", false]], "write() (gammapy.modeling.models.datasetmodels method)": [[230, "gammapy.modeling.models.DatasetModels.write", false]], "write() (gammapy.modeling.models.lightcurvetemplatetemporalmodel method)": [[245, "gammapy.modeling.models.LightCurveTemplateTemporalModel.write", false]], "write() (gammapy.modeling.models.models method)": [[254, "gammapy.modeling.models.Models.write", false]], "write() (gammapy.modeling.models.templatendspatialmodel method)": [[278, "gammapy.modeling.models.TemplateNDSpatialModel.write", false]], "write() (gammapy.modeling.models.templatendspectralmodel method)": [[279, "gammapy.modeling.models.TemplateNDSpectralModel.write", false]], "write() (gammapy.modeling.models.templatenpredmodel method)": [[280, "gammapy.modeling.models.TemplateNPredModel.write", false]], "write() (gammapy.modeling.models.templatephasecurvetemporalmodel method)": [[281, "gammapy.modeling.models.TemplatePhaseCurveTemporalModel.write", false]], "write() (gammapy.modeling.models.templatespatialmodel method)": [[282, "gammapy.modeling.models.TemplateSpatialModel.write", false]], "write_arf() (gammapy.datasets.ogipdatasetwriter method)": [[109, "gammapy.datasets.OGIPDatasetWriter.write_arf", false]], "write_bkg() (gammapy.datasets.ogipdatasetwriter method)": [[109, "gammapy.datasets.OGIPDatasetWriter.write_bkg", false]], "write_covariance() (gammapy.modeling.models.datasetmodels method)": [[230, "gammapy.modeling.models.DatasetModels.write_covariance", false]], "write_covariance() (gammapy.modeling.models.models method)": [[254, "gammapy.modeling.models.Models.write_covariance", false]], "write_datasets() (gammapy.analysis.analysis method)": [[15, "gammapy.analysis.Analysis.write_datasets", false]], "write_models() (gammapy.analysis.analysis method)": [[15, "gammapy.analysis.Analysis.write_models", false]], "write_pha() (gammapy.datasets.ogipdatasetwriter method)": [[109, "gammapy.datasets.OGIPDatasetWriter.write_pha", false]], "write_rmf() (gammapy.datasets.ogipdatasetwriter method)": [[109, "gammapy.datasets.OGIPDatasetWriter.write_rmf", false]], "write_yaml() (in module gammapy.utils.scripts)": [[363, "gammapy.utils.scripts.write_yaml", false]], "wstat": [[608, "term-WStat", true]], "wstat() (in module gammapy.stats)": [[316, "gammapy.stats.wstat", false]], "wstatcountsstatistic (class in gammapy.stats)": [[299, "gammapy.stats.WStatCountsStatistic", false]], "x_max (gammapy.estimators.imageprofile attribute)": [[131, "gammapy.estimators.ImageProfile.x_max", false]], "x_min (gammapy.estimators.imageprofile attribute)": [[131, "gammapy.estimators.ImageProfile.x_min", false]], "x_ref (gammapy.estimators.imageprofile attribute)": [[131, "gammapy.estimators.ImageProfile.x_ref", false]], "xy_position() (gammapy.astro.population.faucherspiral method)": [[33, "gammapy.astro.population.FaucherSpiral.xy_position", false]], "xy_position() (gammapy.astro.population.logspiral method)": [[34, "gammapy.astro.population.LogSpiral.xy_position", false]], "xy_position() (gammapy.astro.population.valleespiral method)": [[38, "gammapy.astro.population.ValleeSpiral.xy_position", false]], "yusifovkucuk2004 (class in gammapy.astro.population)": [[39, "gammapy.astro.population.YusifovKucuk2004", false]], "yusifovkucuk2004b (class in gammapy.astro.population)": [[40, "gammapy.astro.population.YusifovKucuk2004B", false]], "z_0 (gammapy.astro.population.exponential attribute)": [[29, "gammapy.astro.population.Exponential.z_0", false]], "zhaoprofile (class in gammapy.astro.darkmatter)": [[27, "gammapy.astro.darkmatter.ZhaoProfile", false]]}, "objects": {"gammapy": [[0, 0, 0, "-", "analysis"], [2, 0, 0, "-", "catalog"], [3, 0, 0, "-", "data"], [4, 0, 0, "-", "datasets"], [5, 0, 0, "-", "estimators"], [7, 0, 0, "-", "irf"], [8, 0, 0, "-", "makers"], [9, 0, 0, "-", "maps"], [10, 0, 0, "-", "modeling"], [12, 0, 0, "-", "stats"], [14, 0, 0, "-", "visualization"], [11, 6, 1, "cmdoption-gammapy-ignore-warnings", "--ignore-warnings"], [11, 6, 1, "cmdoption-gammapy-log-level", "--log-level"], [11, 6, 1, "cmdoption-gammapy-version", "--version"]], "gammapy-analysis-config": [[11, 6, 1, "cmdoption-gammapy-analysis-config-filename", "--filename"], [11, 6, 1, "cmdoption-gammapy-analysis-config-overwrite", "--overwrite"]], "gammapy-analysis-run": [[11, 6, 1, "cmdoption-gammapy-analysis-run-filename", "--filename"], [11, 6, 1, "cmdoption-gammapy-analysis-run-out", "--out"], [11, 6, 1, "cmdoption-gammapy-analysis-run-overwrite", "--overwrite"]], "gammapy-download-datasets": [[11, 6, 1, "cmdoption-gammapy-download-datasets-out", "--out"], [11, 6, 1, "cmdoption-gammapy-download-datasets-release", "--release"]], "gammapy-download-notebooks": [[11, 6, 1, "cmdoption-gammapy-download-notebooks-out", "--out"], [11, 6, 1, "cmdoption-gammapy-download-notebooks-release", "--release"]], "gammapy-info": [[11, 6, 1, "cmdoption-gammapy-info-dependencies", "--dependencies"], [11, 6, 1, "cmdoption-gammapy-info-envvar", "--envvar"], [11, 6, 1, "cmdoption-gammapy-info-dependencies", "--no-dependencies"], [11, 6, 1, "cmdoption-gammapy-info-envvar", "--no-envvar"], [11, 6, 1, "cmdoption-gammapy-info-system", "--no-system"], [11, 6, 1, "cmdoption-gammapy-info-version", "--no-version"], [11, 6, 1, "cmdoption-gammapy-info-system", "--system"], [11, 6, 1, "cmdoption-gammapy-info-version", "--version"]], "gammapy-workflow-config": [[11, 6, 1, "cmdoption-gammapy-workflow-config-filename", "--filename"], [11, 6, 1, "cmdoption-gammapy-workflow-config-overwrite", "--overwrite"]], "gammapy-workflow-run": [[11, 6, 1, "cmdoption-gammapy-workflow-run-filename", "--filename"]], "gammapy.analysis": [[15, 1, 1, "", "Analysis"], [16, 1, 1, "", "AnalysisConfig"]], "gammapy.analysis.Analysis": [[15, 2, 1, "", "config"], [15, 3, 1, "", "get_datasets"], [15, 3, 1, "", "get_excess_map"], [15, 3, 1, "", "get_flux_points"], [15, 3, 1, "", "get_light_curve"], [15, 3, 1, "", "get_observations"], [15, 2, 1, "", "models"], [15, 3, 1, "", "read_datasets"], [15, 3, 1, "", "read_models"], [15, 3, 1, "", "run_fit"], [15, 3, 1, "", "set_models"], [15, 3, 1, "", "update_config"], [15, 3, 1, "", "write_datasets"], [15, 3, 1, "", "write_models"]], "gammapy.analysis.AnalysisConfig": [[16, 3, 1, "", "construct"], [16, 3, 1, "", "copy"], [16, 3, 1, "", "dict"], [16, 3, 1, "", "from_orm"], [16, 3, 1, "", "from_yaml"], [16, 3, 1, "", "json"], [16, 2, 1, "", "model_computed_fields"], [16, 2, 1, "", "model_config"], [16, 3, 1, "", "model_construct"], [16, 3, 1, "", "model_copy"], [16, 3, 1, "", "model_dump"], [16, 3, 1, "", "model_dump_json"], [16, 2, 1, "", "model_extra"], [16, 2, 1, "", "model_fields"], [16, 2, 1, "", "model_fields_set"], [16, 3, 1, "", "model_json_schema"], [16, 3, 1, "", "model_parametrized_name"], [16, 3, 1, "", "model_post_init"], [16, 3, 1, "", "model_rebuild"], [16, 3, 1, "", "model_validate"], [16, 3, 1, "", "model_validate_json"], [16, 3, 1, "", "model_validate_strings"], [16, 3, 1, "", "parse_file"], [16, 3, 1, "", "parse_obj"], [16, 3, 1, "", "parse_raw"], [16, 3, 1, "", "read"], [16, 3, 1, "", "schema"], [16, 3, 1, "", "schema_json"], [16, 3, 1, "", "set_logging"], [16, 3, 1, "", "to_yaml"], [16, 3, 1, "", "update"], [16, 3, 1, "", "update_forward_refs"], [16, 3, 1, "", "validate"], [16, 3, 1, "", "write"]], "gammapy.astro": [[1, 0, 0, "-", "darkmatter"], [1, 0, 0, "-", "population"], [1, 0, 0, "-", "source"]], "gammapy.astro.darkmatter": [[17, 1, 1, "", "BurkertProfile"], [18, 1, 1, "", "DMProfile"], [19, 1, 1, "", "DarkMatterAnnihilationSpectralModel"], [20, 1, 1, "", "DarkMatterDecaySpectralModel"], [21, 1, 1, "", "EinastoProfile"], [22, 1, 1, "", "IsothermalProfile"], [23, 1, 1, "", "JFactory"], [24, 1, 1, "", "MooreProfile"], [25, 1, 1, "", "NFWProfile"], [26, 1, 1, "", "PrimaryFlux"], [27, 1, 1, "", "ZhaoProfile"]], "gammapy.astro.darkmatter.BurkertProfile": [[17, 2, 1, "", "DEFAULT_SCALE_RADIUS"], [17, 2, 1, "", "DISTANCE_GC"], [17, 2, 1, "", "LOCAL_DENSITY"], [17, 3, 1, "", "__call__"], [17, 3, 1, "", "evaluate"], [17, 3, 1, "", "integral"], [17, 3, 1, "", "integrate_spectrum_separation"], [17, 3, 1, "", "scale_to_local_density"]], "gammapy.astro.darkmatter.DMProfile": [[18, 2, 1, "", "DISTANCE_GC"], [18, 2, 1, "", "LOCAL_DENSITY"], [18, 3, 1, "", "__call__"], [18, 3, 1, "", "integral"], [18, 3, 1, "", "integrate_spectrum_separation"], [18, 3, 1, "", "scale_to_local_density"]], "gammapy.astro.darkmatter.DarkMatterAnnihilationSpectralModel": [[19, 2, 1, "", "THERMAL_RELIC_CROSS_SECTION"], [19, 3, 1, "", "__call__"], [19, 3, 1, "", "copy"], [19, 2, 1, "", "covariance"], [19, 2, 1, "", "default_parameters"], [19, 3, 1, "", "energy_flux"], [19, 3, 1, "", "energy_flux_error"], [19, 3, 1, "", "evaluate"], [19, 3, 1, "", "evaluate_error"], [19, 3, 1, "", "freeze"], [19, 3, 1, "", "from_dict"], [19, 3, 1, "", "from_parameters"], [19, 2, 1, "", "frozen"], [19, 3, 1, "", "integral"], [19, 3, 1, "", "integral_error"], [19, 3, 1, "", "inverse"], [19, 3, 1, "", "inverse_all"], [19, 2, 1, "", "is_norm_spectral_model"], [19, 2, 1, "", "parameters"], [19, 2, 1, "", "parameters_unique_names"], [19, 2, 1, "", "pivot_energy"], [19, 3, 1, "", "plot"], [19, 3, 1, "", "plot_error"], [19, 3, 1, "", "reassign"], [19, 3, 1, "", "reference_fluxes"], [19, 2, 1, "", "scale"], [19, 3, 1, "", "spectral_index"], [19, 3, 1, "", "spectral_index_error"], [19, 2, 1, "", "tag"], [19, 3, 1, "", "to_dict"], [19, 2, 1, "", "type"], [19, 3, 1, "", "unfreeze"]], "gammapy.astro.darkmatter.DarkMatterDecaySpectralModel": [[20, 2, 1, "", "LIFETIME_AGE_OF_UNIVERSE"], [20, 3, 1, "", "__call__"], [20, 3, 1, "", "copy"], [20, 2, 1, "", "covariance"], [20, 2, 1, "", "default_parameters"], [20, 3, 1, "", "energy_flux"], [20, 3, 1, "", "energy_flux_error"], [20, 3, 1, "", "evaluate"], [20, 3, 1, "", "evaluate_error"], [20, 3, 1, "", "freeze"], [20, 3, 1, "", "from_dict"], [20, 3, 1, "", "from_parameters"], [20, 2, 1, "", "frozen"], [20, 3, 1, "", "integral"], [20, 3, 1, "", "integral_error"], [20, 3, 1, "", "inverse"], [20, 3, 1, "", "inverse_all"], [20, 2, 1, "", "is_norm_spectral_model"], [20, 2, 1, "", "parameters"], [20, 2, 1, "", "parameters_unique_names"], [20, 2, 1, "", "pivot_energy"], [20, 3, 1, "", "plot"], [20, 3, 1, "", "plot_error"], [20, 3, 1, "", "reassign"], [20, 3, 1, "", "reference_fluxes"], [20, 2, 1, "", "scale"], [20, 3, 1, "", "spectral_index"], [20, 3, 1, "", "spectral_index_error"], [20, 2, 1, "", "tag"], [20, 3, 1, "", "to_dict"], [20, 2, 1, "", "type"], [20, 3, 1, "", "unfreeze"]], "gammapy.astro.darkmatter.EinastoProfile": [[21, 2, 1, "", "DEFAULT_ALPHA"], [21, 2, 1, "", "DEFAULT_SCALE_RADIUS"], [21, 2, 1, "", "DISTANCE_GC"], [21, 2, 1, "", "LOCAL_DENSITY"], [21, 3, 1, "", "__call__"], [21, 3, 1, "", "evaluate"], [21, 3, 1, "", "integral"], [21, 3, 1, "", "integrate_spectrum_separation"], [21, 3, 1, "", "scale_to_local_density"]], "gammapy.astro.darkmatter.IsothermalProfile": [[22, 2, 1, "", "DEFAULT_SCALE_RADIUS"], [22, 2, 1, "", "DISTANCE_GC"], [22, 2, 1, "", "LOCAL_DENSITY"], [22, 3, 1, "", "__call__"], [22, 3, 1, "", "evaluate"], [22, 3, 1, "", "integral"], [22, 3, 1, "", "integrate_spectrum_separation"], [22, 3, 1, "", "scale_to_local_density"]], "gammapy.astro.darkmatter.JFactory": [[23, 3, 1, "", "compute_differential_jfactor"], [23, 3, 1, "", "compute_jfactor"]], "gammapy.astro.darkmatter.MooreProfile": [[24, 2, 1, "", "DEFAULT_SCALE_RADIUS"], [24, 2, 1, "", "DISTANCE_GC"], [24, 2, 1, "", "LOCAL_DENSITY"], [24, 3, 1, "", "__call__"], [24, 3, 1, "", "evaluate"], [24, 3, 1, "", "integral"], [24, 3, 1, "", "integrate_spectrum_separation"], [24, 3, 1, "", "scale_to_local_density"]], "gammapy.astro.darkmatter.NFWProfile": [[25, 2, 1, "", "DEFAULT_SCALE_RADIUS"], [25, 2, 1, "", "DISTANCE_GC"], [25, 2, 1, "", "LOCAL_DENSITY"], [25, 3, 1, "", "__call__"], [25, 3, 1, "", "evaluate"], [25, 3, 1, "", "integral"], [25, 3, 1, "", "integrate_spectrum_separation"], [25, 3, 1, "", "scale_to_local_density"]], "gammapy.astro.darkmatter.PrimaryFlux": [[26, 3, 1, "", "__call__"], [26, 2, 1, "", "allowed_channels"], [26, 2, 1, "", "channel"], [26, 2, 1, "", "channel_registry"], [26, 3, 1, "", "copy"], [26, 2, 1, "", "covariance"], [26, 2, 1, "", "default_parameters"], [26, 3, 1, "", "energy_flux"], [26, 3, 1, "", "energy_flux_error"], [26, 3, 1, "", "evaluate"], [26, 3, 1, "", "evaluate_error"], [26, 3, 1, "", "freeze"], [26, 3, 1, "", "from_dict"], [26, 3, 1, "", "from_parameters"], [26, 2, 1, "", "frozen"], [26, 3, 1, "", "integral"], [26, 3, 1, "", "integral_error"], [26, 3, 1, "", "inverse"], [26, 3, 1, "", "inverse_all"], [26, 2, 1, "", "is_norm_spectral_model"], [26, 2, 1, "", "mDM"], [26, 2, 1, "", "map"], [26, 2, 1, "", "parameters"], [26, 2, 1, "", "parameters_unique_names"], [26, 2, 1, "", "pivot_energy"], [26, 3, 1, "", "plot"], [26, 3, 1, "", "plot_error"], [26, 3, 1, "", "reassign"], [26, 3, 1, "", "reference_fluxes"], [26, 3, 1, "", "spectral_index"], [26, 3, 1, "", "spectral_index_error"], [26, 2, 1, "", "table_filename"], [26, 2, 1, "", "tag"], [26, 3, 1, "", "to_dict"], [26, 2, 1, "", "type"], [26, 3, 1, "", "unfreeze"], [26, 3, 1, "", "write"]], "gammapy.astro.darkmatter.ZhaoProfile": [[27, 2, 1, "", "DEFAULT_ALPHA"], [27, 2, 1, "", "DEFAULT_BETA"], [27, 2, 1, "", "DEFAULT_GAMMA"], [27, 2, 1, "", "DEFAULT_SCALE_RADIUS"], [27, 2, 1, "", "DISTANCE_GC"], [27, 2, 1, "", "LOCAL_DENSITY"], [27, 3, 1, "", "__call__"], [27, 3, 1, "", "evaluate"], [27, 3, 1, "", "integral"], [27, 3, 1, "", "integrate_spectrum_separation"], [27, 3, 1, "", "scale_to_local_density"]], "gammapy.astro.population": [[28, 1, 1, "", "CaseBattacharya1998"], [29, 1, 1, "", "Exponential"], [30, 1, 1, "", "FaucherKaspi2006"], [31, 1, 1, "", "FaucherKaspi2006VelocityBimodal"], [32, 1, 1, "", "FaucherKaspi2006VelocityMaxwellian"], [33, 1, 1, "", "FaucherSpiral"], [34, 1, 1, "", "LogSpiral"], [35, 1, 1, "", "Lorimer2006"], [36, 1, 1, "", "Paczynski1990"], [37, 1, 1, "", "Paczynski1990Velocity"], [38, 1, 1, "", "ValleeSpiral"], [39, 1, 1, "", "YusifovKucuk2004"], [40, 1, 1, "", "YusifovKucuk2004B"], [41, 4, 1, "", "add_observed_parameters"], [42, 4, 1, "", "add_pulsar_parameters"], [43, 4, 1, "", "add_pwn_parameters"], [44, 4, 1, "", "add_snr_parameters"], [45, 4, 1, "", "make_base_catalog_galactic"], [46, 4, 1, "", "make_catalog_random_positions_cube"], [47, 4, 1, "", "make_catalog_random_positions_sphere"], [48, 5, 1, "", "radial_distributions"], [49, 5, 1, "", "velocity_distributions"]], "gammapy.astro.population.CaseBattacharya1998": [[28, 3, 1, "", "__call__"], [28, 2, 1, "", "alpha"], [28, 2, 1, "", "amplitude"], [28, 2, 1, "", "bbox_with_units"], [28, 2, 1, "", "beta"], [28, 2, 1, "", "bounding_box"], [28, 2, 1, "", "bounds"], [28, 3, 1, "", "coerce_units"], [28, 2, 1, "", "col_fit_deriv"], [28, 3, 1, "", "copy"], [28, 2, 1, "", "cov_matrix"], [28, 3, 1, "", "deepcopy"], [28, 2, 1, "", "eqcons"], [28, 3, 1, "", "evaluate"], [28, 2, 1, "", "evolved"], [28, 2, 1, "", "fit_deriv"], [28, 2, 1, "", "fittable"], [28, 2, 1, "", "fixed"], [28, 3, 1, "", "get_bounding_box"], [28, 3, 1, "", "has_inverse"], [28, 2, 1, "", "has_user_bounding_box"], [28, 2, 1, "", "has_user_inverse"], [28, 2, 1, "", "ineqcons"], [28, 3, 1, "", "input_shape"], [28, 2, 1, "", "input_units"], [28, 2, 1, "", "input_units_allow_dimensionless"], [28, 2, 1, "", "input_units_equivalencies"], [28, 2, 1, "", "input_units_strict"], [28, 2, 1, "", "inputs"], [28, 2, 1, "", "inverse"], [28, 2, 1, "", "linear"], [28, 2, 1, "", "meta"], [28, 2, 1, "", "model_constraints"], [28, 2, 1, "", "model_set_axis"], [28, 2, 1, "", "n_inputs"], [28, 2, 1, "", "n_outputs"], [28, 2, 1, "", "n_submodels"], [28, 2, 1, "", "name"], [28, 3, 1, "", "output_units"], [28, 2, 1, "", "outputs"], [28, 2, 1, "", "param_names"], [28, 2, 1, "", "param_sets"], [28, 2, 1, "", "parameter_constraints"], [28, 2, 1, "", "parameters"], [28, 3, 1, "", "prepare_inputs"], [28, 3, 1, "", "prepare_outputs"], [28, 3, 1, "", "rename"], [28, 3, 1, "", "render"], [28, 2, 1, "", "return_units"], [28, 2, 1, "", "separable"], [28, 3, 1, "", "set_slice_args"], [28, 2, 1, "", "standard_broadcasting"], [28, 2, 1, "", "stds"], [28, 3, 1, "", "strip_units_from_tree"], [28, 3, 1, "", "sum_of_implicit_terms"], [28, 2, 1, "", "sync_constraints"], [28, 2, 1, "", "tied"], [28, 2, 1, "", "uses_quantity"], [28, 3, 1, "", "with_units_from_data"], [28, 3, 1, "", "without_units_for_data"]], "gammapy.astro.population.Exponential": [[29, 3, 1, "", "__call__"], [29, 2, 1, "", "amplitude"], [29, 2, 1, "", "bbox_with_units"], [29, 2, 1, "", "bounding_box"], [29, 2, 1, "", "bounds"], [29, 3, 1, "", "coerce_units"], [29, 2, 1, "", "col_fit_deriv"], [29, 3, 1, "", "copy"], [29, 2, 1, "", "cov_matrix"], [29, 3, 1, "", "deepcopy"], [29, 2, 1, "", "eqcons"], [29, 3, 1, "", "evaluate"], [29, 2, 1, "", "evolved"], [29, 2, 1, "", "fit_deriv"], [29, 2, 1, "", "fittable"], [29, 2, 1, "", "fixed"], [29, 3, 1, "", "get_bounding_box"], [29, 3, 1, "", "has_inverse"], [29, 2, 1, "", "has_user_bounding_box"], [29, 2, 1, "", "has_user_inverse"], [29, 2, 1, "", "ineqcons"], [29, 3, 1, "", "input_shape"], [29, 2, 1, "", "input_units"], [29, 2, 1, "", "input_units_allow_dimensionless"], [29, 2, 1, "", "input_units_equivalencies"], [29, 2, 1, "", "input_units_strict"], [29, 2, 1, "", "inputs"], [29, 2, 1, "", "inverse"], [29, 2, 1, "", "linear"], [29, 2, 1, "", "meta"], [29, 2, 1, "", "model_constraints"], [29, 2, 1, "", "model_set_axis"], [29, 2, 1, "", "n_inputs"], [29, 2, 1, "", "n_outputs"], [29, 2, 1, "", "n_submodels"], [29, 2, 1, "", "name"], [29, 3, 1, "", "output_units"], [29, 2, 1, "", "outputs"], [29, 2, 1, "", "param_names"], [29, 2, 1, "", "param_sets"], [29, 2, 1, "", "parameter_constraints"], [29, 2, 1, "", "parameters"], [29, 3, 1, "", "prepare_inputs"], [29, 3, 1, "", "prepare_outputs"], [29, 3, 1, "", "rename"], [29, 3, 1, "", "render"], [29, 2, 1, "", "return_units"], [29, 2, 1, "", "separable"], [29, 3, 1, "", "set_slice_args"], [29, 2, 1, "", "standard_broadcasting"], [29, 2, 1, "", "stds"], [29, 3, 1, "", "strip_units_from_tree"], [29, 3, 1, "", "sum_of_implicit_terms"], [29, 2, 1, "", "sync_constraints"], [29, 2, 1, "", "tied"], [29, 2, 1, "", "uses_quantity"], [29, 3, 1, "", "with_units_from_data"], [29, 3, 1, "", "without_units_for_data"], [29, 2, 1, "", "z_0"]], "gammapy.astro.population.FaucherKaspi2006": [[30, 3, 1, "", "__call__"], [30, 2, 1, "", "amplitude"], [30, 2, 1, "", "bbox_with_units"], [30, 2, 1, "", "bounding_box"], [30, 2, 1, "", "bounds"], [30, 3, 1, "", "coerce_units"], [30, 2, 1, "", "col_fit_deriv"], [30, 3, 1, "", "copy"], [30, 2, 1, "", "cov_matrix"], [30, 3, 1, "", "deepcopy"], [30, 2, 1, "", "eqcons"], [30, 3, 1, "", "evaluate"], [30, 2, 1, "", "evolved"], [30, 2, 1, "", "fit_deriv"], [30, 2, 1, "", "fittable"], [30, 2, 1, "", "fixed"], [30, 3, 1, "", "get_bounding_box"], [30, 3, 1, "", "has_inverse"], [30, 2, 1, "", "has_user_bounding_box"], [30, 2, 1, "", "has_user_inverse"], [30, 2, 1, "", "ineqcons"], [30, 3, 1, "", "input_shape"], [30, 2, 1, "", "input_units"], [30, 2, 1, "", "input_units_allow_dimensionless"], [30, 2, 1, "", "input_units_equivalencies"], [30, 2, 1, "", "input_units_strict"], [30, 2, 1, "", "inputs"], [30, 2, 1, "", "inverse"], [30, 2, 1, "", "linear"], [30, 2, 1, "", "meta"], [30, 2, 1, "", "model_constraints"], [30, 2, 1, "", "model_set_axis"], [30, 2, 1, "", "n_inputs"], [30, 2, 1, "", "n_outputs"], [30, 2, 1, "", "n_submodels"], [30, 2, 1, "", "name"], [30, 3, 1, "", "output_units"], [30, 2, 1, "", "outputs"], [30, 2, 1, "", "param_names"], [30, 2, 1, "", "param_sets"], [30, 2, 1, "", "parameter_constraints"], [30, 2, 1, "", "parameters"], [30, 3, 1, "", "prepare_inputs"], [30, 3, 1, "", "prepare_outputs"], [30, 2, 1, "", "r_0"], [30, 3, 1, "", "rename"], [30, 3, 1, "", "render"], [30, 2, 1, "", "return_units"], [30, 2, 1, "", "separable"], [30, 3, 1, "", "set_slice_args"], [30, 2, 1, "", "sigma"], [30, 2, 1, "", "standard_broadcasting"], [30, 2, 1, "", "stds"], [30, 3, 1, "", "strip_units_from_tree"], [30, 3, 1, "", "sum_of_implicit_terms"], [30, 2, 1, "", "sync_constraints"], [30, 2, 1, "", "tied"], [30, 2, 1, "", "uses_quantity"], [30, 3, 1, "", "with_units_from_data"], [30, 3, 1, "", "without_units_for_data"]], "gammapy.astro.population.FaucherKaspi2006VelocityBimodal": [[31, 3, 1, "", "__call__"], [31, 2, 1, "", "amplitude"], [31, 2, 1, "", "bbox_with_units"], [31, 2, 1, "", "bounding_box"], [31, 2, 1, "", "bounds"], [31, 3, 1, "", "coerce_units"], [31, 2, 1, "", "col_fit_deriv"], [31, 3, 1, "", "copy"], [31, 2, 1, "", "cov_matrix"], [31, 3, 1, "", "deepcopy"], [31, 2, 1, "", "eqcons"], [31, 3, 1, "", "evaluate"], [31, 2, 1, "", "fit_deriv"], [31, 2, 1, "", "fittable"], [31, 2, 1, "", "fixed"], [31, 3, 1, "", "get_bounding_box"], [31, 3, 1, "", "has_inverse"], [31, 2, 1, "", "has_user_bounding_box"], [31, 2, 1, "", "has_user_inverse"], [31, 2, 1, "", "ineqcons"], [31, 3, 1, "", "input_shape"], [31, 2, 1, "", "input_units"], [31, 2, 1, "", "input_units_allow_dimensionless"], [31, 2, 1, "", "input_units_equivalencies"], [31, 2, 1, "", "input_units_strict"], [31, 2, 1, "", "inputs"], [31, 2, 1, "", "inverse"], [31, 2, 1, "", "linear"], [31, 2, 1, "", "meta"], [31, 2, 1, "", "model_constraints"], [31, 2, 1, "", "model_set_axis"], [31, 2, 1, "", "n_inputs"], [31, 2, 1, "", "n_outputs"], [31, 2, 1, "", "n_submodels"], [31, 2, 1, "", "name"], [31, 3, 1, "", "output_units"], [31, 2, 1, "", "outputs"], [31, 2, 1, "", "param_names"], [31, 2, 1, "", "param_sets"], [31, 2, 1, "", "parameter_constraints"], [31, 2, 1, "", "parameters"], [31, 3, 1, "", "prepare_inputs"], [31, 3, 1, "", "prepare_outputs"], [31, 3, 1, "", "rename"], [31, 3, 1, "", "render"], [31, 2, 1, "", "return_units"], [31, 2, 1, "", "separable"], [31, 3, 1, "", "set_slice_args"], [31, 2, 1, "", "sigma_1"], [31, 2, 1, "", "sigma_2"], [31, 2, 1, "", "standard_broadcasting"], [31, 2, 1, "", "stds"], [31, 3, 1, "", "strip_units_from_tree"], [31, 3, 1, "", "sum_of_implicit_terms"], [31, 2, 1, "", "sync_constraints"], [31, 2, 1, "", "tied"], [31, 2, 1, "", "uses_quantity"], [31, 2, 1, "", "w"], [31, 3, 1, "", "with_units_from_data"], [31, 3, 1, "", "without_units_for_data"]], "gammapy.astro.population.FaucherKaspi2006VelocityMaxwellian": [[32, 3, 1, "", "__call__"], [32, 2, 1, "", "amplitude"], [32, 2, 1, "", "bbox_with_units"], [32, 2, 1, "", "bounding_box"], [32, 2, 1, "", "bounds"], [32, 3, 1, "", "coerce_units"], [32, 2, 1, "", "col_fit_deriv"], [32, 3, 1, "", "copy"], [32, 2, 1, "", "cov_matrix"], [32, 3, 1, "", "deepcopy"], [32, 2, 1, "", "eqcons"], [32, 3, 1, "", "evaluate"], [32, 2, 1, "", "fit_deriv"], [32, 2, 1, "", "fittable"], [32, 2, 1, "", "fixed"], [32, 3, 1, "", "get_bounding_box"], [32, 3, 1, "", "has_inverse"], [32, 2, 1, "", "has_user_bounding_box"], [32, 2, 1, "", "has_user_inverse"], [32, 2, 1, "", "ineqcons"], [32, 3, 1, "", "input_shape"], [32, 2, 1, "", "input_units"], [32, 2, 1, "", "input_units_allow_dimensionless"], [32, 2, 1, "", "input_units_equivalencies"], [32, 2, 1, "", "input_units_strict"], [32, 2, 1, "", "inputs"], [32, 2, 1, "", "inverse"], [32, 2, 1, "", "linear"], [32, 2, 1, "", "meta"], [32, 2, 1, "", "model_constraints"], [32, 2, 1, "", "model_set_axis"], [32, 2, 1, "", "n_inputs"], [32, 2, 1, "", "n_outputs"], [32, 2, 1, "", "n_submodels"], [32, 2, 1, "", "name"], [32, 3, 1, "", "output_units"], [32, 2, 1, "", "outputs"], [32, 2, 1, "", "param_names"], [32, 2, 1, "", "param_sets"], [32, 2, 1, "", "parameter_constraints"], [32, 2, 1, "", "parameters"], [32, 3, 1, "", "prepare_inputs"], [32, 3, 1, "", "prepare_outputs"], [32, 3, 1, "", "rename"], [32, 3, 1, "", "render"], [32, 2, 1, "", "return_units"], [32, 2, 1, "", "separable"], [32, 3, 1, "", "set_slice_args"], [32, 2, 1, "", "sigma"], [32, 2, 1, "", "standard_broadcasting"], [32, 2, 1, "", "stds"], [32, 3, 1, "", "strip_units_from_tree"], [32, 3, 1, "", "sum_of_implicit_terms"], [32, 2, 1, "", "sync_constraints"], [32, 2, 1, "", "tied"], [32, 2, 1, "", "uses_quantity"], [32, 3, 1, "", "with_units_from_data"], [32, 3, 1, "", "without_units_for_data"]], "gammapy.astro.population.FaucherSpiral": [[33, 3, 1, "", "__call__"], [33, 2, 1, "", "k"], [33, 2, 1, "", "r_0"], [33, 3, 1, "", "radius"], [33, 2, 1, "", "spiralarms"], [33, 3, 1, "", "theta"], [33, 2, 1, "", "theta_0"], [33, 3, 1, "", "xy_position"]], "gammapy.astro.population.LogSpiral": [[34, 3, 1, "", "radius"], [34, 3, 1, "", "theta"], [34, 3, 1, "", "xy_position"]], "gammapy.astro.population.Lorimer2006": [[35, 2, 1, "", "B"], [35, 2, 1, "", "C"], [35, 3, 1, "", "__call__"], [35, 2, 1, "", "amplitude"], [35, 2, 1, "", "bbox_with_units"], [35, 2, 1, "", "bounding_box"], [35, 2, 1, "", "bounds"], [35, 3, 1, "", "coerce_units"], [35, 2, 1, "", "col_fit_deriv"], [35, 3, 1, "", "copy"], [35, 2, 1, "", "cov_matrix"], [35, 3, 1, "", "deepcopy"], [35, 2, 1, "", "eqcons"], [35, 3, 1, "", "evaluate"], [35, 2, 1, "", "evolved"], [35, 2, 1, "", "fit_deriv"], [35, 2, 1, "", "fittable"], [35, 2, 1, "", "fixed"], [35, 3, 1, "", "get_bounding_box"], [35, 3, 1, "", "has_inverse"], [35, 2, 1, "", "has_user_bounding_box"], [35, 2, 1, "", "has_user_inverse"], [35, 2, 1, "", "ineqcons"], [35, 3, 1, "", "input_shape"], [35, 2, 1, "", "input_units"], [35, 2, 1, "", "input_units_allow_dimensionless"], [35, 2, 1, "", "input_units_equivalencies"], [35, 2, 1, "", "input_units_strict"], [35, 2, 1, "", "inputs"], [35, 2, 1, "", "inverse"], [35, 2, 1, "", "linear"], [35, 2, 1, "", "meta"], [35, 2, 1, "", "model_constraints"], [35, 2, 1, "", "model_set_axis"], [35, 2, 1, "", "n_inputs"], [35, 2, 1, "", "n_outputs"], [35, 2, 1, "", "n_submodels"], [35, 2, 1, "", "name"], [35, 3, 1, "", "output_units"], [35, 2, 1, "", "outputs"], [35, 2, 1, "", "param_names"], [35, 2, 1, "", "param_sets"], [35, 2, 1, "", "parameter_constraints"], [35, 2, 1, "", "parameters"], [35, 3, 1, "", "prepare_inputs"], [35, 3, 1, "", "prepare_outputs"], [35, 3, 1, "", "rename"], [35, 3, 1, "", "render"], [35, 2, 1, "", "return_units"], [35, 2, 1, "", "separable"], [35, 3, 1, "", "set_slice_args"], [35, 2, 1, "", "standard_broadcasting"], [35, 2, 1, "", "stds"], [35, 3, 1, "", "strip_units_from_tree"], [35, 3, 1, "", "sum_of_implicit_terms"], [35, 2, 1, "", "sync_constraints"], [35, 2, 1, "", "tied"], [35, 2, 1, "", "uses_quantity"], [35, 3, 1, "", "with_units_from_data"], [35, 3, 1, "", "without_units_for_data"]], "gammapy.astro.population.Paczynski1990": [[36, 3, 1, "", "__call__"], [36, 2, 1, "", "amplitude"], [36, 2, 1, "", "bbox_with_units"], [36, 2, 1, "", "bounding_box"], [36, 2, 1, "", "bounds"], [36, 3, 1, "", "coerce_units"], [36, 2, 1, "", "col_fit_deriv"], [36, 3, 1, "", "copy"], [36, 2, 1, "", "cov_matrix"], [36, 3, 1, "", "deepcopy"], [36, 2, 1, "", "eqcons"], [36, 3, 1, "", "evaluate"], [36, 2, 1, "", "evolved"], [36, 2, 1, "", "fit_deriv"], [36, 2, 1, "", "fittable"], [36, 2, 1, "", "fixed"], [36, 3, 1, "", "get_bounding_box"], [36, 3, 1, "", "has_inverse"], [36, 2, 1, "", "has_user_bounding_box"], [36, 2, 1, "", "has_user_inverse"], [36, 2, 1, "", "ineqcons"], [36, 3, 1, "", "input_shape"], [36, 2, 1, "", "input_units"], [36, 2, 1, "", "input_units_allow_dimensionless"], [36, 2, 1, "", "input_units_equivalencies"], [36, 2, 1, "", "input_units_strict"], [36, 2, 1, "", "inputs"], [36, 2, 1, "", "inverse"], [36, 2, 1, "", "linear"], [36, 2, 1, "", "meta"], [36, 2, 1, "", "model_constraints"], [36, 2, 1, "", "model_set_axis"], [36, 2, 1, "", "n_inputs"], [36, 2, 1, "", "n_outputs"], [36, 2, 1, "", "n_submodels"], [36, 2, 1, "", "name"], [36, 3, 1, "", "output_units"], [36, 2, 1, "", "outputs"], [36, 2, 1, "", "param_names"], [36, 2, 1, "", "param_sets"], [36, 2, 1, "", "parameter_constraints"], [36, 2, 1, "", "parameters"], [36, 3, 1, "", "prepare_inputs"], [36, 3, 1, "", "prepare_outputs"], [36, 2, 1, "", "r_exp"], [36, 3, 1, "", "rename"], [36, 3, 1, "", "render"], [36, 2, 1, "", "return_units"], [36, 2, 1, "", "separable"], [36, 3, 1, "", "set_slice_args"], [36, 2, 1, "", "standard_broadcasting"], [36, 2, 1, "", "stds"], [36, 3, 1, "", "strip_units_from_tree"], [36, 3, 1, "", "sum_of_implicit_terms"], [36, 2, 1, "", "sync_constraints"], [36, 2, 1, "", "tied"], [36, 2, 1, "", "uses_quantity"], [36, 3, 1, "", "with_units_from_data"], [36, 3, 1, "", "without_units_for_data"]], "gammapy.astro.population.Paczynski1990Velocity": [[37, 3, 1, "", "__call__"], [37, 2, 1, "", "amplitude"], [37, 2, 1, "", "bbox_with_units"], [37, 2, 1, "", "bounding_box"], [37, 2, 1, "", "bounds"], [37, 3, 1, "", "coerce_units"], [37, 2, 1, "", "col_fit_deriv"], [37, 3, 1, "", "copy"], [37, 2, 1, "", "cov_matrix"], [37, 3, 1, "", "deepcopy"], [37, 2, 1, "", "eqcons"], [37, 3, 1, "", "evaluate"], [37, 2, 1, "", "fit_deriv"], [37, 2, 1, "", "fittable"], [37, 2, 1, "", "fixed"], [37, 3, 1, "", "get_bounding_box"], [37, 3, 1, "", "has_inverse"], [37, 2, 1, "", "has_user_bounding_box"], [37, 2, 1, "", "has_user_inverse"], [37, 2, 1, "", "ineqcons"], [37, 3, 1, "", "input_shape"], [37, 2, 1, "", "input_units"], [37, 2, 1, "", "input_units_allow_dimensionless"], [37, 2, 1, "", "input_units_equivalencies"], [37, 2, 1, "", "input_units_strict"], [37, 2, 1, "", "inputs"], [37, 2, 1, "", "inverse"], [37, 2, 1, "", "linear"], [37, 2, 1, "", "meta"], [37, 2, 1, "", "model_constraints"], [37, 2, 1, "", "model_set_axis"], [37, 2, 1, "", "n_inputs"], [37, 2, 1, "", "n_outputs"], [37, 2, 1, "", "n_submodels"], [37, 2, 1, "", "name"], [37, 3, 1, "", "output_units"], [37, 2, 1, "", "outputs"], [37, 2, 1, "", "param_names"], [37, 2, 1, "", "param_sets"], [37, 2, 1, "", "parameter_constraints"], [37, 2, 1, "", "parameters"], [37, 3, 1, "", "prepare_inputs"], [37, 3, 1, "", "prepare_outputs"], [37, 3, 1, "", "rename"], [37, 3, 1, "", "render"], [37, 2, 1, "", "return_units"], [37, 2, 1, "", "separable"], [37, 3, 1, "", "set_slice_args"], [37, 2, 1, "", "standard_broadcasting"], [37, 2, 1, "", "stds"], [37, 3, 1, "", "strip_units_from_tree"], [37, 3, 1, "", "sum_of_implicit_terms"], [37, 2, 1, "", "sync_constraints"], [37, 2, 1, "", "tied"], [37, 2, 1, "", "uses_quantity"], [37, 2, 1, "", "v_0"], [37, 3, 1, "", "with_units_from_data"], [37, 3, 1, "", "without_units_for_data"]], "gammapy.astro.population.ValleeSpiral": [[38, 2, 1, "", "bar_radius"], [38, 2, 1, "", "m"], [38, 2, 1, "", "p"], [38, 2, 1, "", "r_0"], [38, 2, 1, "", "r_sun"], [38, 3, 1, "", "radius"], [38, 2, 1, "", "spiralarms"], [38, 3, 1, "", "theta"], [38, 2, 1, "", "theta_0"], [38, 3, 1, "", "xy_position"]], "gammapy.astro.population.YusifovKucuk2004": [[39, 3, 1, "", "__call__"], [39, 2, 1, "", "a"], [39, 2, 1, "", "amplitude"], [39, 2, 1, "", "b"], [39, 2, 1, "", "bbox_with_units"], [39, 2, 1, "", "bounding_box"], [39, 2, 1, "", "bounds"], [39, 3, 1, "", "coerce_units"], [39, 2, 1, "", "col_fit_deriv"], [39, 3, 1, "", "copy"], [39, 2, 1, "", "cov_matrix"], [39, 3, 1, "", "deepcopy"], [39, 2, 1, "", "eqcons"], [39, 3, 1, "", "evaluate"], [39, 2, 1, "", "evolved"], [39, 2, 1, "", "fit_deriv"], [39, 2, 1, "", "fittable"], [39, 2, 1, "", "fixed"], [39, 3, 1, "", "get_bounding_box"], [39, 3, 1, "", "has_inverse"], [39, 2, 1, "", "has_user_bounding_box"], [39, 2, 1, "", "has_user_inverse"], [39, 2, 1, "", "ineqcons"], [39, 3, 1, "", "input_shape"], [39, 2, 1, "", "input_units"], [39, 2, 1, "", "input_units_allow_dimensionless"], [39, 2, 1, "", "input_units_equivalencies"], [39, 2, 1, "", "input_units_strict"], [39, 2, 1, "", "inputs"], [39, 2, 1, "", "inverse"], [39, 2, 1, "", "linear"], [39, 2, 1, "", "meta"], [39, 2, 1, "", "model_constraints"], [39, 2, 1, "", "model_set_axis"], [39, 2, 1, "", "n_inputs"], [39, 2, 1, "", "n_outputs"], [39, 2, 1, "", "n_submodels"], [39, 2, 1, "", "name"], [39, 3, 1, "", "output_units"], [39, 2, 1, "", "outputs"], [39, 2, 1, "", "param_names"], [39, 2, 1, "", "param_sets"], [39, 2, 1, "", "parameter_constraints"], [39, 2, 1, "", "parameters"], [39, 3, 1, "", "prepare_inputs"], [39, 3, 1, "", "prepare_outputs"], [39, 2, 1, "", "r_1"], [39, 3, 1, "", "rename"], [39, 3, 1, "", "render"], [39, 2, 1, "", "return_units"], [39, 2, 1, "", "separable"], [39, 3, 1, "", "set_slice_args"], [39, 2, 1, "", "standard_broadcasting"], [39, 2, 1, "", "stds"], [39, 3, 1, "", "strip_units_from_tree"], [39, 3, 1, "", "sum_of_implicit_terms"], [39, 2, 1, "", "sync_constraints"], [39, 2, 1, "", "tied"], [39, 2, 1, "", "uses_quantity"], [39, 3, 1, "", "with_units_from_data"], [39, 3, 1, "", "without_units_for_data"]], "gammapy.astro.population.YusifovKucuk2004B": [[40, 3, 1, "", "__call__"], [40, 2, 1, "", "a"], [40, 2, 1, "", "amplitude"], [40, 2, 1, "", "b"], [40, 2, 1, "", "bbox_with_units"], [40, 2, 1, "", "bounding_box"], [40, 2, 1, "", "bounds"], [40, 3, 1, "", "coerce_units"], [40, 2, 1, "", "col_fit_deriv"], [40, 3, 1, "", "copy"], [40, 2, 1, "", "cov_matrix"], [40, 3, 1, "", "deepcopy"], [40, 2, 1, "", "eqcons"], [40, 3, 1, "", "evaluate"], [40, 2, 1, "", "evolved"], [40, 2, 1, "", "fit_deriv"], [40, 2, 1, "", "fittable"], [40, 2, 1, "", "fixed"], [40, 3, 1, "", "get_bounding_box"], [40, 3, 1, "", "has_inverse"], [40, 2, 1, "", "has_user_bounding_box"], [40, 2, 1, "", "has_user_inverse"], [40, 2, 1, "", "ineqcons"], [40, 3, 1, "", "input_shape"], [40, 2, 1, "", "input_units"], [40, 2, 1, "", "input_units_allow_dimensionless"], [40, 2, 1, "", "input_units_equivalencies"], [40, 2, 1, "", "input_units_strict"], [40, 2, 1, "", "inputs"], [40, 2, 1, "", "inverse"], [40, 2, 1, "", "linear"], [40, 2, 1, "", "meta"], [40, 2, 1, "", "model_constraints"], [40, 2, 1, "", "model_set_axis"], [40, 2, 1, "", "n_inputs"], [40, 2, 1, "", "n_outputs"], [40, 2, 1, "", "n_submodels"], [40, 2, 1, "", "name"], [40, 3, 1, "", "output_units"], [40, 2, 1, "", "outputs"], [40, 2, 1, "", "param_names"], [40, 2, 1, "", "param_sets"], [40, 2, 1, "", "parameter_constraints"], [40, 2, 1, "", "parameters"], [40, 3, 1, "", "prepare_inputs"], [40, 3, 1, "", "prepare_outputs"], [40, 3, 1, "", "rename"], [40, 3, 1, "", "render"], [40, 2, 1, "", "return_units"], [40, 2, 1, "", "separable"], [40, 3, 1, "", "set_slice_args"], [40, 2, 1, "", "standard_broadcasting"], [40, 2, 1, "", "stds"], [40, 3, 1, "", "strip_units_from_tree"], [40, 3, 1, "", "sum_of_implicit_terms"], [40, 2, 1, "", "sync_constraints"], [40, 2, 1, "", "tied"], [40, 2, 1, "", "uses_quantity"], [40, 3, 1, "", "with_units_from_data"], [40, 3, 1, "", "without_units_for_data"]], "gammapy.astro.source": [[50, 1, 1, "", "PWN"], [51, 1, 1, "", "Pulsar"], [52, 1, 1, "", "SNR"], [53, 1, 1, "", "SNRTrueloveMcKee"], [54, 1, 1, "", "SimplePulsar"]], "gammapy.astro.source.PWN": [[50, 3, 1, "", "magnetic_field"], [50, 3, 1, "", "radius"]], "gammapy.astro.source.Pulsar": [[51, 3, 1, "", "energy_integrated"], [51, 3, 1, "", "luminosity_spindown"], [51, 3, 1, "", "magnetic_field"], [51, 3, 1, "", "period"], [51, 3, 1, "", "period_dot"], [51, 3, 1, "", "tau"]], "gammapy.astro.source.SNR": [[52, 3, 1, "", "luminosity_tev"], [52, 3, 1, "", "radius"], [52, 3, 1, "", "radius_inner"], [52, 2, 1, "", "sedov_taylor_begin"], [52, 2, 1, "", "sedov_taylor_end"]], "gammapy.astro.source.SNRTrueloveMcKee": [[53, 3, 1, "", "luminosity_tev"], [53, 3, 1, "", "radius"], [53, 3, 1, "", "radius_inner"], [53, 3, 1, "", "radius_reverse_shock"], [53, 2, 1, "", "sedov_taylor_begin"], [53, 2, 1, "", "sedov_taylor_end"]], "gammapy.astro.source.SimplePulsar": [[54, 2, 1, "", "luminosity_spindown"], [54, 2, 1, "", "magnetic_field"], [54, 2, 1, "", "tau"]], "gammapy.catalog": [[55, 5, 1, "", "CATALOG_REGISTRY"], [56, 1, 1, "", "SourceCatalog"], [57, 1, 1, "", "SourceCatalog1LHAASO"], [58, 1, 1, "", "SourceCatalog2FHL"], [59, 1, 1, "", "SourceCatalog2HWC"], [60, 1, 1, "", "SourceCatalog2PC"], [61, 1, 1, "", "SourceCatalog3FGL"], [62, 1, 1, "", "SourceCatalog3FHL"], [63, 1, 1, "", "SourceCatalog3HWC"], [64, 1, 1, "", "SourceCatalog3PC"], [65, 1, 1, "", "SourceCatalog4FGL"], [66, 1, 1, "", "SourceCatalogGammaCat"], [67, 1, 1, "", "SourceCatalogHGPS"], [68, 1, 1, "", "SourceCatalogLargeScaleHGPS"], [69, 1, 1, "", "SourceCatalogObject"], [70, 1, 1, "", "SourceCatalogObject1LHAASO"], [71, 1, 1, "", "SourceCatalogObject2FHL"], [72, 1, 1, "", "SourceCatalogObject2HWC"], [73, 1, 1, "", "SourceCatalogObject2PC"], [74, 1, 1, "", "SourceCatalogObject3FGL"], [75, 1, 1, "", "SourceCatalogObject3FHL"], [76, 1, 1, "", "SourceCatalogObject3HWC"], [77, 1, 1, "", "SourceCatalogObject3PC"], [78, 1, 1, "", "SourceCatalogObject4FGL"], [79, 1, 1, "", "SourceCatalogObjectGammaCat"], [80, 1, 1, "", "SourceCatalogObjectHGPS"], [81, 1, 1, "", "SourceCatalogObjectHGPSComponent"]], "gammapy.catalog.SourceCatalog": [[56, 3, 1, "", "description"], [56, 2, 1, "", "positions"], [56, 3, 1, "", "row_index"], [56, 3, 1, "", "source_name"], [56, 2, 1, "", "tag"], [56, 3, 1, "", "to_models"]], "gammapy.catalog.SourceCatalog1LHAASO": [[57, 2, 1, "", "description"], [57, 2, 1, "", "positions"], [57, 3, 1, "", "row_index"], [57, 3, 1, "", "source_name"], [57, 2, 1, "", "tag"], [57, 3, 1, "", "to_models"]], "gammapy.catalog.SourceCatalog2FHL": [[58, 2, 1, "", "description"], [58, 2, 1, "", "positions"], [58, 3, 1, "", "row_index"], [58, 3, 1, "", "source_name"], [58, 2, 1, "", "tag"], [58, 3, 1, "", "to_models"]], "gammapy.catalog.SourceCatalog2HWC": [[59, 2, 1, "", "description"], [59, 2, 1, "", "positions"], [59, 3, 1, "", "row_index"], [59, 3, 1, "", "source_name"], [59, 2, 1, "", "tag"], [59, 3, 1, "", "to_models"]], "gammapy.catalog.SourceCatalog2PC": [[60, 2, 1, "", "description"], [60, 2, 1, "", "positions"], [60, 3, 1, "", "row_index"], [60, 3, 1, "", "source_name"], [60, 2, 1, "", "tag"], [60, 3, 1, "", "to_models"]], "gammapy.catalog.SourceCatalog3FGL": [[61, 2, 1, "", "description"], [61, 2, 1, "", "positions"], [61, 3, 1, "", "row_index"], [61, 3, 1, "", "source_name"], [61, 2, 1, "", "tag"], [61, 3, 1, "", "to_models"]], "gammapy.catalog.SourceCatalog3FHL": [[62, 2, 1, "", "description"], [62, 2, 1, "", "positions"], [62, 3, 1, "", "row_index"], [62, 3, 1, "", "source_name"], [62, 2, 1, "", "tag"], [62, 3, 1, "", "to_models"]], "gammapy.catalog.SourceCatalog3HWC": [[63, 2, 1, "", "description"], [63, 2, 1, "", "positions"], [63, 3, 1, "", "row_index"], [63, 3, 1, "", "source_name"], [63, 2, 1, "", "tag"], [63, 3, 1, "", "to_models"]], "gammapy.catalog.SourceCatalog3PC": [[64, 2, 1, "", "description"], [64, 2, 1, "", "positions"], [64, 3, 1, "", "row_index"], [64, 3, 1, "", "source_name"], [64, 2, 1, "", "tag"], [64, 3, 1, "", "to_models"]], "gammapy.catalog.SourceCatalog4FGL": [[65, 2, 1, "", "description"], [65, 2, 1, "", "positions"], [65, 3, 1, "", "row_index"], [65, 3, 1, "", "source_name"], [65, 2, 1, "", "tag"], [65, 3, 1, "", "to_models"]], "gammapy.catalog.SourceCatalogGammaCat": [[66, 2, 1, "", "description"], [66, 2, 1, "", "positions"], [66, 3, 1, "", "row_index"], [66, 3, 1, "", "source_name"], [66, 2, 1, "", "tag"], [66, 3, 1, "", "to_models"]], "gammapy.catalog.SourceCatalogHGPS": [[67, 2, 1, "", "description"], [67, 3, 1, "", "gaussian_component"], [67, 2, 1, "", "large_scale_component"], [67, 2, 1, "", "positions"], [67, 3, 1, "", "row_index"], [67, 3, 1, "", "source_name"], [67, 2, 1, "", "table_associations"], [67, 2, 1, "", "table_components"], [67, 2, 1, "", "table_identifications"], [67, 2, 1, "", "table_large_scale_component"], [67, 2, 1, "", "tag"], [67, 3, 1, "", "to_models"]], "gammapy.catalog.SourceCatalogLargeScaleHGPS": [[68, 3, 1, "", "evaluate"], [68, 3, 1, "", "peak_brightness"], [68, 3, 1, "", "peak_brightness_error"], [68, 3, 1, "", "peak_latitude"], [68, 3, 1, "", "peak_latitude_error"], [68, 3, 1, "", "width"], [68, 3, 1, "", "width_error"]], "gammapy.catalog.SourceCatalogObject": [[69, 2, 1, "", "name"], [69, 2, 1, "", "position"], [69, 2, 1, "", "row_index"]], "gammapy.catalog.SourceCatalogObject1LHAASO": [[70, 2, 1, "", "name"], [70, 2, 1, "", "position"], [70, 2, 1, "", "row_index"], [70, 3, 1, "", "sky_model"], [70, 3, 1, "", "spatial_model"], [70, 3, 1, "", "spectral_model"]], "gammapy.catalog.SourceCatalogObject2FHL": [[71, 2, 1, "", "asso"], [71, 2, 1, "", "energy_range"], [71, 2, 1, "", "flux_points"], [71, 2, 1, "", "flux_points_meta"], [71, 2, 1, "", "flux_points_table"], [71, 3, 1, "", "info"], [71, 2, 1, "", "is_pointlike"], [71, 2, 1, "", "name"], [71, 2, 1, "", "position"], [71, 2, 1, "", "row_index"], [71, 3, 1, "", "sky_model"], [71, 3, 1, "", "spatial_model"], [71, 3, 1, "", "spectral_model"]], "gammapy.catalog.SourceCatalogObject2HWC": [[72, 3, 1, "", "info"], [72, 2, 1, "", "n_models"], [72, 2, 1, "", "name"], [72, 2, 1, "", "position"], [72, 2, 1, "", "row_index"], [72, 3, 1, "", "sky_model"], [72, 3, 1, "", "spatial_model"], [72, 3, 1, "", "spectral_model"]], "gammapy.catalog.SourceCatalogObject2PC": [[73, 2, 1, "", "flux_points"], [73, 2, 1, "", "flux_points_table"], [73, 3, 1, "", "info"], [73, 2, 1, "", "lightcurve"], [73, 2, 1, "", "name"], [73, 2, 1, "", "position"], [73, 2, 1, "", "row_index"], [73, 3, 1, "", "sky_model"], [73, 3, 1, "", "spatial_model"], [73, 3, 1, "", "spectral_model"]], "gammapy.catalog.SourceCatalogObject3FGL": [[74, 2, 1, "", "asso"], [74, 2, 1, "", "energy_range"], [74, 2, 1, "", "flux_points"], [74, 2, 1, "", "flux_points_meta"], [74, 2, 1, "", "flux_points_table"], [74, 3, 1, "", "info"], [74, 2, 1, "", "is_pointlike"], [74, 3, 1, "", "lightcurve"], [74, 2, 1, "", "name"], [74, 2, 1, "", "position"], [74, 2, 1, "", "row_index"], [74, 3, 1, "", "sky_model"], [74, 3, 1, "", "spatial_model"], [74, 3, 1, "", "spectral_model"]], "gammapy.catalog.SourceCatalogObject3FHL": [[75, 2, 1, "", "asso"], [75, 2, 1, "", "energy_range"], [75, 2, 1, "", "flux_points"], [75, 2, 1, "", "flux_points_meta"], [75, 2, 1, "", "flux_points_table"], [75, 3, 1, "", "info"], [75, 2, 1, "", "is_pointlike"], [75, 2, 1, "", "name"], [75, 2, 1, "", "position"], [75, 2, 1, "", "row_index"], [75, 3, 1, "", "sky_model"], [75, 3, 1, "", "spatial_model"], [75, 3, 1, "", "spectral_model"]], "gammapy.catalog.SourceCatalogObject3HWC": [[76, 3, 1, "", "info"], [76, 2, 1, "", "is_pointlike"], [76, 2, 1, "", "n_models"], [76, 2, 1, "", "name"], [76, 2, 1, "", "position"], [76, 2, 1, "", "row_index"], [76, 3, 1, "", "sky_model"], [76, 3, 1, "", "spatial_model"], [76, 3, 1, "", "spectral_model"]], "gammapy.catalog.SourceCatalogObject3PC": [[77, 2, 1, "", "asso"], [77, 2, 1, "", "flux_points"], [77, 2, 1, "", "flux_points_table"], [77, 3, 1, "", "info"], [77, 2, 1, "", "lightcurve"], [77, 2, 1, "", "name"], [77, 2, 1, "", "position"], [77, 2, 1, "", "pulse_profile_best_fit"], [77, 2, 1, "", "pulse_profile_radio"], [77, 2, 1, "", "pulse_profiles"], [77, 2, 1, "", "row_index"], [77, 3, 1, "", "sky_model"], [77, 3, 1, "", "spatial_model"], [77, 3, 1, "", "spectral_model"]], "gammapy.catalog.SourceCatalogObject4FGL": [[78, 2, 1, "", "asso"], [78, 2, 1, "", "flux_points"], [78, 2, 1, "", "flux_points_meta"], [78, 2, 1, "", "flux_points_table"], [78, 3, 1, "", "info"], [78, 2, 1, "", "is_pointlike"], [78, 3, 1, "", "lightcurve"], [78, 2, 1, "", "name"], [78, 2, 1, "", "position"], [78, 2, 1, "", "row_index"], [78, 3, 1, "", "sky_model"], [78, 3, 1, "", "spatial_model"], [78, 3, 1, "", "spectral_model"]], "gammapy.catalog.SourceCatalogObjectGammaCat": [[79, 2, 1, "", "flux_points"], [79, 2, 1, "", "flux_points_table"], [79, 3, 1, "", "info"], [79, 2, 1, "", "name"], [79, 2, 1, "", "position"], [79, 2, 1, "", "row_index"], [79, 3, 1, "", "sky_model"], [79, 3, 1, "", "spatial_model"], [79, 3, 1, "", "spectral_model"]], "gammapy.catalog.SourceCatalogObjectHGPS": [[80, 3, 1, "", "components_models"], [80, 2, 1, "", "energy_range"], [80, 2, 1, "", "flux_points"], [80, 2, 1, "", "flux_points_table"], [80, 3, 1, "", "info"], [80, 2, 1, "", "name"], [80, 2, 1, "", "position"], [80, 2, 1, "", "row_index"], [80, 3, 1, "", "sky_model"], [80, 3, 1, "", "spatial_model"], [80, 3, 1, "", "spectral_model"]], "gammapy.catalog.SourceCatalogObjectHGPSComponent": [[81, 2, 1, "", "name"], [81, 2, 1, "", "position"], [81, 2, 1, "", "row_index"], [81, 3, 1, "", "spatial_model"]], "gammapy.data": [[82, 1, 1, "", "DataStore"], [83, 1, 1, "", "EventList"], [84, 1, 1, "", "EventListMetaData"], [85, 1, 1, "", "FixedPointingInfo"], [86, 1, 1, "", "GTI"], [87, 1, 1, "", "GTIMetaData"], [88, 1, 1, "", "HDUIndexTable"], [89, 1, 1, "", "Observation"], [90, 1, 1, "", "ObservationFilter"], [91, 1, 1, "", "ObservationMetaData"], [92, 1, 1, "", "ObservationTable"], [93, 1, 1, "", "Observations"], [94, 1, 1, "", "ObservationsEventsSampler"], [95, 1, 1, "", "PointingInfo"], [96, 1, 1, "", "PointingMode"], [97, 4, 1, "", "get_irfs_features"], [98, 5, 1, "", "observatory_locations"]], "gammapy.data.DataStore": [[82, 2, 1, "", "DEFAULT_HDU_TABLE"], [82, 2, 1, "", "DEFAULT_OBS_TABLE"], [82, 3, 1, "", "check"], [82, 3, 1, "", "copy_obs"], [82, 3, 1, "", "from_dir"], [82, 3, 1, "", "from_events_files"], [82, 3, 1, "", "from_file"], [82, 3, 1, "", "get_observations"], [82, 3, 1, "", "info"], [82, 3, 1, "", "obs"], [82, 2, 1, "", "obs_ids"]], "gammapy.data.EventList": [[83, 2, 1, "", "altaz"], [83, 2, 1, "", "altaz_frame"], [83, 2, 1, "", "altaz_from_table"], [83, 3, 1, "", "check"], [83, 3, 1, "", "copy"], [83, 2, 1, "", "energy"], [83, 3, 1, "", "from_stack"], [83, 2, 1, "", "galactic"], [83, 2, 1, "", "galactic_median"], [83, 2, 1, "", "is_pointed_observation"], [83, 3, 1, "", "map_coord"], [83, 2, 1, "", "observation_dead_time_fraction"], [83, 2, 1, "", "observation_live_time_duration"], [83, 2, 1, "", "observation_time_duration"], [83, 2, 1, "", "observation_time_start"], [83, 2, 1, "", "observation_time_stop"], [83, 2, 1, "", "observatory_earth_location"], [83, 2, 1, "", "offset"], [83, 2, 1, "", "offset_from_median"], [83, 3, 1, "", "peek"], [83, 3, 1, "", "plot_energy"], [83, 3, 1, "", "plot_energy_offset"], [83, 3, 1, "", "plot_image"], [83, 3, 1, "", "plot_offset2_distribution"], [83, 3, 1, "", "plot_time"], [83, 2, 1, "", "pointing_radec"], [83, 2, 1, "", "radec"], [83, 3, 1, "", "read"], [83, 3, 1, "", "select_energy"], [83, 3, 1, "", "select_mask"], [83, 3, 1, "", "select_offset"], [83, 3, 1, "", "select_parameter"], [83, 3, 1, "", "select_rad_max"], [83, 3, 1, "", "select_region"], [83, 3, 1, "", "select_row_subset"], [83, 3, 1, "", "select_time"], [83, 3, 1, "", "stack"], [83, 2, 1, "", "time"], [83, 2, 1, "", "time_ref"], [83, 3, 1, "", "to_table_hdu"]], "gammapy.data.EventListMetaData": [[84, 3, 1, "", "construct"], [84, 3, 1, "", "copy"], [84, 3, 1, "", "dict"], [84, 3, 1, "", "from_header"], [84, 3, 1, "", "from_orm"], [84, 3, 1, "", "json"], [84, 2, 1, "", "model_computed_fields"], [84, 2, 1, "", "model_config"], [84, 3, 1, "", "model_construct"], [84, 3, 1, "", "model_copy"], [84, 3, 1, "", "model_dump"], [84, 3, 1, "", "model_dump_json"], [84, 2, 1, "", "model_extra"], [84, 2, 1, "", "model_fields"], [84, 2, 1, "", "model_fields_set"], [84, 3, 1, "", "model_json_schema"], [84, 3, 1, "", "model_parametrized_name"], [84, 3, 1, "", "model_post_init"], [84, 3, 1, "", "model_rebuild"], [84, 3, 1, "", "model_validate"], [84, 3, 1, "", "model_validate_json"], [84, 3, 1, "", "model_validate_strings"], [84, 3, 1, "", "parse_file"], [84, 3, 1, "", "parse_obj"], [84, 3, 1, "", "parse_raw"], [84, 3, 1, "", "schema"], [84, 3, 1, "", "schema_json"], [84, 2, 1, "", "tag"], [84, 3, 1, "", "to_header"], [84, 3, 1, "", "to_yaml"], [84, 3, 1, "", "update_forward_refs"], [84, 3, 1, "", "validate"]], "gammapy.data.FixedPointingInfo": [[85, 2, 1, "", "fixed_altaz"], [85, 2, 1, "", "fixed_icrs"], [85, 3, 1, "", "from_fits_header"], [85, 3, 1, "", "get_altaz"], [85, 3, 1, "", "get_icrs"], [85, 2, 1, "", "mode"], [85, 3, 1, "", "read"], [85, 3, 1, "", "to_fits_header"]], "gammapy.data.GTI": [[86, 3, 1, "", "copy"], [86, 3, 1, "", "create"], [86, 3, 1, "", "delete_interval"], [86, 3, 1, "", "from_stack"], [86, 3, 1, "", "from_table_hdu"], [86, 3, 1, "", "from_time_intervals"], [86, 3, 1, "", "group_table"], [86, 2, 1, "", "met_start"], [86, 2, 1, "", "met_stop"], [86, 3, 1, "", "read"], [86, 3, 1, "", "select_time"], [86, 3, 1, "", "stack"], [86, 2, 1, "", "time_delta"], [86, 2, 1, "", "time_intervals"], [86, 2, 1, "", "time_ref"], [86, 2, 1, "", "time_start"], [86, 2, 1, "", "time_stop"], [86, 2, 1, "", "time_sum"], [86, 3, 1, "", "to_table_hdu"], [86, 3, 1, "", "union"], [86, 3, 1, "", "write"]], "gammapy.data.GTIMetaData": [[87, 3, 1, "", "construct"], [87, 3, 1, "", "copy"], [87, 3, 1, "", "dict"], [87, 3, 1, "", "from_header"], [87, 3, 1, "", "from_orm"], [87, 3, 1, "", "json"], [87, 2, 1, "", "model_computed_fields"], [87, 2, 1, "", "model_config"], [87, 3, 1, "", "model_construct"], [87, 3, 1, "", "model_copy"], [87, 3, 1, "", "model_dump"], [87, 3, 1, "", "model_dump_json"], [87, 2, 1, "", "model_extra"], [87, 2, 1, "", "model_fields"], [87, 2, 1, "", "model_fields_set"], [87, 3, 1, "", "model_json_schema"], [87, 3, 1, "", "model_parametrized_name"], [87, 3, 1, "", "model_post_init"], [87, 3, 1, "", "model_rebuild"], [87, 3, 1, "", "model_validate"], [87, 3, 1, "", "model_validate_json"], [87, 3, 1, "", "model_validate_strings"], [87, 3, 1, "", "parse_file"], [87, 3, 1, "", "parse_obj"], [87, 3, 1, "", "parse_raw"], [87, 3, 1, "", "schema"], [87, 3, 1, "", "schema_json"], [87, 2, 1, "", "tag"], [87, 3, 1, "", "to_header"], [87, 3, 1, "", "to_yaml"], [87, 3, 1, "", "update_forward_refs"], [87, 3, 1, "", "validate"]], "gammapy.data.HDUIndexTable": [[88, 2, 1, "", "ColumnClass"], [88, 2, 1, "", "VALID_HDU_CLASS"], [88, 2, 1, "", "VALID_HDU_TYPE"], [88, 3, 1, "", "add_column"], [88, 3, 1, "", "add_columns"], [88, 3, 1, "", "add_index"], [88, 3, 1, "", "add_row"], [88, 3, 1, "", "argsort"], [88, 3, 1, "", "as_array"], [88, 2, 1, "", "base_dir"], [88, 2, 1, "", "colnames"], [88, 3, 1, "", "convert_bytestring_to_unicode"], [88, 3, 1, "", "convert_unicode_to_bytestring"], [88, 3, 1, "", "copy"], [88, 2, 1, "", "dtype"], [88, 3, 1, "", "field"], [88, 3, 1, "", "filled"], [88, 3, 1, "", "from_pandas"], [88, 3, 1, "", "group_by"], [88, 2, 1, "", "groups"], [88, 2, 1, "", "has_masked_columns"], [88, 2, 1, "", "has_masked_values"], [88, 2, 1, "", "has_mixin_columns"], [88, 2, 1, "", "hdu_class_unique"], [88, 3, 1, "", "hdu_location"], [88, 2, 1, "", "hdu_type_unique"], [88, 2, 1, "", "iloc"], [88, 3, 1, "", "index_column"], [88, 3, 1, "", "index_mode"], [88, 2, 1, "", "indices"], [88, 2, 1, "", "info"], [88, 3, 1, "", "insert_row"], [88, 3, 1, "", "items"], [88, 3, 1, "", "itercols"], [88, 3, 1, "", "iterrows"], [88, 3, 1, "", "keep_columns"], [88, 3, 1, "", "keys"], [88, 2, 1, "", "loc"], [88, 2, 1, "", "loc_indices"], [88, 3, 1, "", "location_info"], [88, 2, 1, "", "mask"], [88, 2, 1, "", "masked"], [88, 2, 1, "", "meta"], [88, 3, 1, "", "more"], [88, 2, 1, "", "obs_id_unique"], [88, 3, 1, "", "pformat"], [88, 3, 1, "", "pformat_all"], [88, 3, 1, "", "pprint"], [88, 3, 1, "", "pprint_all"], [88, 2, 1, "", "pprint_exclude_names"], [88, 2, 1, "", "pprint_include_names"], [88, 3, 1, "", "read"], [88, 3, 1, "", "remove_column"], [88, 3, 1, "", "remove_columns"], [88, 3, 1, "", "remove_indices"], [88, 3, 1, "", "remove_row"], [88, 3, 1, "", "remove_rows"], [88, 3, 1, "", "rename_column"], [88, 3, 1, "", "rename_columns"], [88, 3, 1, "", "replace_column"], [88, 3, 1, "", "reverse"], [88, 3, 1, "", "round"], [88, 3, 1, "", "row_idx"], [88, 3, 1, "", "show_in_browser"], [88, 3, 1, "", "show_in_notebook"], [88, 3, 1, "", "sort"], [88, 3, 1, "", "summary"], [88, 3, 1, "", "to_pandas"], [88, 3, 1, "", "update"], [88, 3, 1, "", "values"], [88, 3, 1, "", "values_equal"], [88, 2, 1, "", "write"]], "gammapy.data.Observation": [[89, 2, 1, "", "aeff"], [89, 2, 1, "", "available_hdus"], [89, 2, 1, "", "available_irfs"], [89, 2, 1, "", "bkg"], [89, 3, 1, "", "check"], [89, 3, 1, "", "copy"], [89, 3, 1, "", "create"], [89, 2, 1, "", "edisp"], [89, 2, 1, "", "events"], [89, 3, 1, "", "get_pointing_altaz"], [89, 3, 1, "", "get_pointing_icrs"], [89, 2, 1, "", "gti"], [89, 2, 1, "", "meta"], [89, 2, 1, "", "observation_dead_time_fraction"], [89, 2, 1, "", "observation_live_time_duration"], [89, 2, 1, "", "observation_time_duration"], [89, 2, 1, "", "observatory_earth_location"], [89, 3, 1, "", "peek"], [89, 2, 1, "", "pointing"], [89, 2, 1, "", "psf"], [89, 2, 1, "", "rad_max"], [89, 3, 1, "", "read"], [89, 3, 1, "", "select_time"], [89, 2, 1, "", "target_radec"], [89, 2, 1, "", "tmid"], [89, 2, 1, "", "tstart"], [89, 2, 1, "", "tstop"], [89, 3, 1, "", "write"]], "gammapy.data.ObservationFilter": [[90, 2, 1, "", "EVENT_FILTER_TYPES"], [90, 3, 1, "", "copy"], [90, 3, 1, "", "filter_events"], [90, 3, 1, "", "filter_gti"], [90, 2, 1, "", "livetime_fraction"]], "gammapy.data.ObservationMetaData": [[91, 3, 1, "", "construct"], [91, 3, 1, "", "copy"], [91, 3, 1, "", "dict"], [91, 3, 1, "", "from_header"], [91, 3, 1, "", "from_orm"], [91, 3, 1, "", "json"], [91, 2, 1, "", "model_computed_fields"], [91, 2, 1, "", "model_config"], [91, 3, 1, "", "model_construct"], [91, 3, 1, "", "model_copy"], [91, 3, 1, "", "model_dump"], [91, 3, 1, "", "model_dump_json"], [91, 2, 1, "", "model_extra"], [91, 2, 1, "", "model_fields"], [91, 2, 1, "", "model_fields_set"], [91, 3, 1, "", "model_json_schema"], [91, 3, 1, "", "model_parametrized_name"], [91, 3, 1, "", "model_post_init"], [91, 3, 1, "", "model_rebuild"], [91, 3, 1, "", "model_validate"], [91, 3, 1, "", "model_validate_json"], [91, 3, 1, "", "model_validate_strings"], [91, 3, 1, "", "parse_file"], [91, 3, 1, "", "parse_obj"], [91, 3, 1, "", "parse_raw"], [91, 3, 1, "", "schema"], [91, 3, 1, "", "schema_json"], [91, 2, 1, "", "tag"], [91, 3, 1, "", "to_header"], [91, 3, 1, "", "to_yaml"], [91, 3, 1, "", "update_forward_refs"], [91, 3, 1, "", "validate"]], "gammapy.data.ObservationTable": [[92, 2, 1, "", "ColumnClass"], [92, 3, 1, "", "add_column"], [92, 3, 1, "", "add_columns"], [92, 3, 1, "", "add_index"], [92, 3, 1, "", "add_row"], [92, 3, 1, "", "argsort"], [92, 3, 1, "", "as_array"], [92, 2, 1, "", "colnames"], [92, 3, 1, "", "convert_bytestring_to_unicode"], [92, 3, 1, "", "convert_unicode_to_bytestring"], [92, 3, 1, "", "copy"], [92, 2, 1, "", "dtype"], [92, 3, 1, "", "field"], [92, 3, 1, "", "filled"], [92, 3, 1, "", "from_pandas"], [92, 3, 1, "", "group_by"], [92, 2, 1, "", "groups"], [92, 2, 1, "", "has_masked_columns"], [92, 2, 1, "", "has_masked_values"], [92, 2, 1, "", "has_mixin_columns"], [92, 2, 1, "", "iloc"], [92, 3, 1, "", "index_column"], [92, 3, 1, "", "index_mode"], [92, 2, 1, "", "indices"], [92, 2, 1, "", "info"], [92, 3, 1, "", "insert_row"], [92, 3, 1, "", "items"], [92, 3, 1, "", "itercols"], [92, 3, 1, "", "iterrows"], [92, 3, 1, "", "keep_columns"], [92, 3, 1, "", "keys"], [92, 2, 1, "", "loc"], [92, 2, 1, "", "loc_indices"], [92, 2, 1, "", "mask"], [92, 2, 1, "", "masked"], [92, 2, 1, "", "meta"], [92, 3, 1, "", "more"], [92, 3, 1, "", "pformat"], [92, 3, 1, "", "pformat_all"], [92, 2, 1, "", "pointing_galactic"], [92, 2, 1, "", "pointing_radec"], [92, 3, 1, "", "pprint"], [92, 3, 1, "", "pprint_all"], [92, 2, 1, "", "pprint_exclude_names"], [92, 2, 1, "", "pprint_include_names"], [92, 3, 1, "", "read"], [92, 3, 1, "", "remove_column"], [92, 3, 1, "", "remove_columns"], [92, 3, 1, "", "remove_indices"], [92, 3, 1, "", "remove_row"], [92, 3, 1, "", "remove_rows"], [92, 3, 1, "", "rename_column"], [92, 3, 1, "", "rename_columns"], [92, 3, 1, "", "replace_column"], [92, 3, 1, "", "reverse"], [92, 3, 1, "", "round"], [92, 3, 1, "", "select_obs_id"], [92, 3, 1, "", "select_observations"], [92, 3, 1, "", "select_range"], [92, 3, 1, "", "select_sky_circle"], [92, 3, 1, "", "select_time_range"], [92, 3, 1, "", "show_in_browser"], [92, 3, 1, "", "show_in_notebook"], [92, 3, 1, "", "sort"], [92, 3, 1, "", "summary"], [92, 2, 1, "", "time_ref"], [92, 2, 1, "", "time_start"], [92, 2, 1, "", "time_stop"], [92, 3, 1, "", "to_pandas"], [92, 3, 1, "", "update"], [92, 3, 1, "", "values"], [92, 3, 1, "", "values_equal"], [92, 2, 1, "", "write"]], "gammapy.data.Observations": [[93, 3, 1, "", "append"], [93, 3, 1, "", "clear"], [93, 3, 1, "", "count"], [93, 3, 1, "", "extend"], [93, 3, 1, "", "from_stack"], [93, 3, 1, "", "group_by_label"], [93, 2, 1, "", "ids"], [93, 3, 1, "", "in_memory_generator"], [93, 3, 1, "", "index"], [93, 3, 1, "", "insert"], [93, 3, 1, "", "pop"], [93, 3, 1, "", "remove"], [93, 3, 1, "", "reverse"], [93, 3, 1, "", "select_time"]], "gammapy.data.ObservationsEventsSampler": [[94, 2, 1, "", "n_jobs"], [94, 2, 1, "", "parallel_backend"], [94, 3, 1, "", "run"], [94, 3, 1, "", "simulate_observation"]], "gammapy.data.PointingInfo": [[95, 2, 1, "", "altaz"], [95, 2, 1, "", "altaz_frame"], [95, 2, 1, "", "altaz_from_table"], [95, 3, 1, "", "altaz_interpolate"], [95, 2, 1, "", "duration"], [95, 3, 1, "", "get_altaz"], [95, 3, 1, "", "get_icrs"], [95, 2, 1, "", "location"], [95, 2, 1, "", "radec"], [95, 3, 1, "", "read"], [95, 2, 1, "", "time"], [95, 2, 1, "", "time_ref"]], "gammapy.data.PointingMode": [[96, 2, 1, "", "DRIFT"], [96, 2, 1, "", "POINTING"]], "gammapy.datasets": [[99, 5, 1, "", "DATASET_REGISTRY"], [100, 1, 1, "", "Dataset"], [101, 1, 1, "", "Datasets"], [102, 1, 1, "", "FermipyDatasetsReader"], [103, 1, 1, "", "FluxPointsDataset"], [104, 1, 1, "", "MapDataset"], [105, 1, 1, "", "MapDatasetEventSampler"], [106, 1, 1, "", "MapDatasetMetaData"], [107, 1, 1, "", "MapDatasetOnOff"], [108, 1, 1, "", "OGIPDatasetReader"], [109, 1, 1, "", "OGIPDatasetWriter"], [110, 1, 1, "", "ObservationEventSampler"], [111, 1, 1, "", "SpectrumDataset"], [112, 1, 1, "", "SpectrumDatasetOnOff"], [113, 4, 1, "", "apply_edisp"], [114, 4, 1, "", "create_empty_map_dataset_from_irfs"], [115, 4, 1, "", "create_map_dataset_from_observation"], [116, 4, 1, "", "create_map_dataset_geoms"], [117, 4, 1, "", "split_dataset"], [4, 0, 0, "-", "utils"]], "gammapy.datasets.Dataset": [[100, 3, 1, "", "copy"], [100, 2, 1, "", "mask"], [100, 2, 1, "", "name"], [100, 3, 1, "", "stat_array"], [100, 3, 1, "", "stat_sum"], [100, 2, 1, "", "stat_type"], [100, 2, 1, "", "tag"], [100, 3, 1, "", "to_dict"]], "gammapy.datasets.Datasets": [[101, 3, 1, "", "append"], [101, 3, 1, "", "clear"], [101, 2, 1, "", "contributes_to_stat"], [101, 3, 1, "", "copy"], [101, 3, 1, "", "count"], [101, 2, 1, "", "energy_axes_are_aligned"], [101, 2, 1, "", "energy_ranges"], [101, 3, 1, "", "extend"], [101, 2, 1, "", "gti"], [101, 3, 1, "", "index"], [101, 3, 1, "", "info_table"], [101, 3, 1, "", "insert"], [101, 2, 1, "", "is_all_same_energy_shape"], [101, 2, 1, "", "is_all_same_shape"], [101, 2, 1, "", "is_all_same_type"], [101, 2, 1, "", "meta_table"], [101, 2, 1, "", "models"], [101, 2, 1, "", "names"], [101, 2, 1, "", "parameters"], [101, 3, 1, "", "pop"], [101, 3, 1, "", "read"], [101, 3, 1, "", "remove"], [101, 3, 1, "", "reverse"], [101, 3, 1, "", "select_time"], [101, 3, 1, "", "slice_by_energy"], [101, 3, 1, "", "stack_reduce"], [101, 3, 1, "", "stat_sum"], [101, 3, 1, "", "to_spectrum_datasets"], [101, 3, 1, "", "write"]], "gammapy.datasets.FermipyDatasetsReader": [[102, 3, 1, "", "create_dataset"], [102, 3, 1, "", "read"], [102, 2, 1, "", "tag"]], "gammapy.datasets.FluxPointsDataset": [[103, 2, 1, "", "available_stat_type"], [103, 3, 1, "", "copy"], [103, 3, 1, "", "data_shape"], [103, 3, 1, "", "flux_pred"], [103, 3, 1, "", "from_dict"], [103, 2, 1, "", "gti"], [103, 2, 1, "", "mask"], [103, 2, 1, "", "mask_safe"], [103, 2, 1, "", "mask_valid"], [103, 2, 1, "", "models"], [103, 2, 1, "", "name"], [103, 3, 1, "", "plot_fit"], [103, 3, 1, "", "plot_residuals"], [103, 3, 1, "", "plot_spectrum"], [103, 3, 1, "", "read"], [103, 3, 1, "", "residuals"], [103, 3, 1, "", "stat_array"], [103, 3, 1, "", "stat_sum"], [103, 2, 1, "", "stat_type"], [103, 2, 1, "", "tag"], [103, 3, 1, "", "to_dict"], [103, 3, 1, "", "write"]], "gammapy.datasets.MapDataset": [[104, 2, 1, "", "background"], [104, 2, 1, "", "background_model"], [104, 3, 1, "", "copy"], [104, 2, 1, "", "counts"], [104, 3, 1, "", "create"], [104, 3, 1, "", "cutout"], [104, 2, 1, "", "data_shape"], [104, 3, 1, "", "downsample"], [104, 2, 1, "", "edisp"], [104, 2, 1, "", "energy_range"], [104, 2, 1, "", "energy_range_fit"], [104, 2, 1, "", "energy_range_safe"], [104, 2, 1, "", "energy_range_total"], [104, 2, 1, "", "evaluators"], [104, 2, 1, "", "excess"], [104, 2, 1, "", "exposure"], [104, 3, 1, "", "fake"], [104, 3, 1, "", "from_dict"], [104, 3, 1, "", "from_geoms"], [104, 3, 1, "", "from_hdulist"], [104, 2, 1, "", "geoms"], [104, 2, 1, "", "gti"], [104, 3, 1, "", "info_dict"], [104, 2, 1, "", "mask"], [104, 2, 1, "", "mask_fit"], [104, 2, 1, "", "mask_fit_image"], [104, 2, 1, "", "mask_image"], [104, 2, 1, "", "mask_safe"], [104, 2, 1, "", "mask_safe_edisp"], [104, 2, 1, "", "mask_safe_image"], [104, 2, 1, "", "mask_safe_psf"], [104, 2, 1, "", "meta"], [104, 2, 1, "", "meta_table"], [104, 2, 1, "", "models"], [104, 2, 1, "", "name"], [104, 3, 1, "", "npred"], [104, 3, 1, "", "npred_background"], [104, 3, 1, "", "npred_signal"], [104, 3, 1, "", "pad"], [104, 3, 1, "", "peek"], [104, 3, 1, "", "plot_residuals"], [104, 3, 1, "", "plot_residuals_spatial"], [104, 3, 1, "", "plot_residuals_spectral"], [104, 2, 1, "", "psf"], [104, 3, 1, "", "read"], [104, 3, 1, "", "resample_energy_axis"], [104, 3, 1, "", "reset_data_cache"], [104, 3, 1, "", "residuals"], [104, 3, 1, "", "slice_by_energy"], [104, 3, 1, "", "slice_by_idx"], [104, 3, 1, "", "stack"], [104, 3, 1, "", "stat_array"], [104, 3, 1, "", "stat_sum"], [104, 2, 1, "", "stat_type"], [104, 2, 1, "", "tag"], [104, 3, 1, "", "to_dict"], [104, 3, 1, "", "to_hdulist"], [104, 3, 1, "", "to_image"], [104, 3, 1, "", "to_masked"], [104, 3, 1, "", "to_region_map_dataset"], [104, 3, 1, "", "to_spectrum_dataset"], [104, 3, 1, "", "write"]], "gammapy.datasets.MapDatasetEventSampler": [[105, 3, 1, "", "event_det_coords"], [105, 3, 1, "", "event_list_meta"], [105, 3, 1, "", "run"], [105, 3, 1, "", "sample_background"], [105, 3, 1, "", "sample_edisp"], [105, 3, 1, "", "sample_psf"], [105, 3, 1, "", "sample_sources"]], "gammapy.datasets.MapDatasetMetaData": [[106, 3, 1, "", "construct"], [106, 3, 1, "", "copy"], [106, 3, 1, "", "dict"], [106, 3, 1, "", "from_header"], [106, 3, 1, "", "from_orm"], [106, 3, 1, "", "json"], [106, 2, 1, "", "model_computed_fields"], [106, 2, 1, "", "model_config"], [106, 3, 1, "", "model_construct"], [106, 3, 1, "", "model_copy"], [106, 3, 1, "", "model_dump"], [106, 3, 1, "", "model_dump_json"], [106, 2, 1, "", "model_extra"], [106, 2, 1, "", "model_fields"], [106, 2, 1, "", "model_fields_set"], [106, 3, 1, "", "model_json_schema"], [106, 3, 1, "", "model_parametrized_name"], [106, 3, 1, "", "model_post_init"], [106, 3, 1, "", "model_rebuild"], [106, 3, 1, "", "model_validate"], [106, 3, 1, "", "model_validate_json"], [106, 3, 1, "", "model_validate_strings"], [106, 3, 1, "", "parse_file"], [106, 3, 1, "", "parse_obj"], [106, 3, 1, "", "parse_raw"], [106, 3, 1, "", "schema"], [106, 3, 1, "", "schema_json"], [106, 3, 1, "", "stack"], [106, 2, 1, "", "tag"], [106, 3, 1, "", "to_header"], [106, 3, 1, "", "to_yaml"], [106, 3, 1, "", "update_forward_refs"], [106, 3, 1, "", "validate"]], "gammapy.datasets.MapDatasetOnOff": [[107, 2, 1, "", "alpha"], [107, 2, 1, "", "background"], [107, 2, 1, "", "background_model"], [107, 3, 1, "", "copy"], [107, 2, 1, "", "counts"], [107, 3, 1, "", "create"], [107, 3, 1, "", "cutout"], [107, 2, 1, "", "data_shape"], [107, 3, 1, "", "downsample"], [107, 2, 1, "", "edisp"], [107, 2, 1, "", "energy_range"], [107, 2, 1, "", "energy_range_fit"], [107, 2, 1, "", "energy_range_safe"], [107, 2, 1, "", "energy_range_total"], [107, 2, 1, "", "evaluators"], [107, 2, 1, "", "excess"], [107, 2, 1, "", "exposure"], [107, 3, 1, "", "fake"], [107, 3, 1, "", "from_dict"], [107, 3, 1, "", "from_geoms"], [107, 3, 1, "", "from_hdulist"], [107, 3, 1, "", "from_map_dataset"], [107, 2, 1, "", "geoms"], [107, 2, 1, "", "gti"], [107, 3, 1, "", "info_dict"], [107, 2, 1, "", "mask"], [107, 2, 1, "", "mask_fit"], [107, 2, 1, "", "mask_fit_image"], [107, 2, 1, "", "mask_image"], [107, 2, 1, "", "mask_safe"], [107, 2, 1, "", "mask_safe_edisp"], [107, 2, 1, "", "mask_safe_image"], [107, 2, 1, "", "mask_safe_psf"], [107, 2, 1, "", "meta"], [107, 2, 1, "", "meta_table"], [107, 2, 1, "", "models"], [107, 2, 1, "", "name"], [107, 3, 1, "", "npred"], [107, 3, 1, "", "npred_background"], [107, 3, 1, "", "npred_off"], [107, 3, 1, "", "npred_signal"], [107, 3, 1, "", "pad"], [107, 3, 1, "", "peek"], [107, 3, 1, "", "plot_residuals"], [107, 3, 1, "", "plot_residuals_spatial"], [107, 3, 1, "", "plot_residuals_spectral"], [107, 2, 1, "", "psf"], [107, 3, 1, "", "read"], [107, 3, 1, "", "resample_energy_axis"], [107, 3, 1, "", "reset_data_cache"], [107, 3, 1, "", "residuals"], [107, 3, 1, "", "slice_by_energy"], [107, 3, 1, "", "slice_by_idx"], [107, 3, 1, "", "stack"], [107, 3, 1, "", "stat_array"], [107, 3, 1, "", "stat_sum"], [107, 2, 1, "", "stat_type"], [107, 2, 1, "", "tag"], [107, 3, 1, "", "to_dict"], [107, 3, 1, "", "to_hdulist"], [107, 3, 1, "", "to_image"], [107, 3, 1, "", "to_map_dataset"], [107, 3, 1, "", "to_masked"], [107, 3, 1, "", "to_region_map_dataset"], [107, 3, 1, "", "to_spectrum_dataset"], [107, 3, 1, "", "write"]], "gammapy.datasets.OGIPDatasetReader": [[108, 3, 1, "", "get_filenames"], [108, 3, 1, "", "get_valid_path"], [108, 3, 1, "", "read"], [108, 3, 1, "", "read_arf"], [108, 3, 1, "", "read_bkg"], [108, 3, 1, "", "read_pha"], [108, 3, 1, "", "read_rmf"], [108, 2, 1, "", "tag"]], "gammapy.datasets.OGIPDatasetWriter": [[109, 3, 1, "", "get_filenames"], [109, 3, 1, "", "get_ogip_meta"], [109, 2, 1, "", "tag"], [109, 3, 1, "", "to_counts_hdulist"], [109, 3, 1, "", "write"], [109, 3, 1, "", "write_arf"], [109, 3, 1, "", "write_bkg"], [109, 3, 1, "", "write_pha"], [109, 3, 1, "", "write_rmf"]], "gammapy.datasets.ObservationEventSampler": [[110, 3, 1, "", "event_det_coords"], [110, 3, 1, "", "event_list_meta"], [110, 3, 1, "", "run"], [110, 3, 1, "", "sample_background"], [110, 3, 1, "", "sample_edisp"], [110, 3, 1, "", "sample_psf"], [110, 3, 1, "", "sample_sources"]], "gammapy.datasets.SpectrumDataset": [[111, 2, 1, "", "background"], [111, 2, 1, "", "background_model"], [111, 3, 1, "", "copy"], [111, 2, 1, "", "counts"], [111, 3, 1, "", "create"], [111, 3, 1, "", "cutout"], [111, 2, 1, "", "data_shape"], [111, 3, 1, "", "downsample"], [111, 2, 1, "", "edisp"], [111, 2, 1, "", "energy_range"], [111, 2, 1, "", "energy_range_fit"], [111, 2, 1, "", "energy_range_safe"], [111, 2, 1, "", "energy_range_total"], [111, 2, 1, "", "evaluators"], [111, 2, 1, "", "excess"], [111, 2, 1, "", "exposure"], [111, 3, 1, "", "fake"], [111, 3, 1, "", "from_dict"], [111, 3, 1, "", "from_geoms"], [111, 3, 1, "", "from_hdulist"], [111, 2, 1, "", "geoms"], [111, 2, 1, "", "gti"], [111, 3, 1, "", "info_dict"], [111, 2, 1, "", "mask"], [111, 2, 1, "", "mask_fit"], [111, 2, 1, "", "mask_fit_image"], [111, 2, 1, "", "mask_image"], [111, 2, 1, "", "mask_safe"], [111, 2, 1, "", "mask_safe_edisp"], [111, 2, 1, "", "mask_safe_image"], [111, 2, 1, "", "mask_safe_psf"], [111, 2, 1, "", "meta"], [111, 2, 1, "", "meta_table"], [111, 2, 1, "", "models"], [111, 2, 1, "", "name"], [111, 3, 1, "", "npred"], [111, 3, 1, "", "npred_background"], [111, 3, 1, "", "npred_signal"], [111, 3, 1, "", "pad"], [111, 3, 1, "", "peek"], [111, 3, 1, "", "plot_counts"], [111, 3, 1, "", "plot_excess"], [111, 3, 1, "", "plot_fit"], [111, 3, 1, "", "plot_masks"], [111, 3, 1, "", "plot_residuals"], [111, 3, 1, "", "plot_residuals_spatial"], [111, 3, 1, "", "plot_residuals_spectral"], [111, 2, 1, "", "psf"], [111, 3, 1, "", "read"], [111, 3, 1, "", "resample_energy_axis"], [111, 3, 1, "", "reset_data_cache"], [111, 3, 1, "", "residuals"], [111, 3, 1, "", "slice_by_energy"], [111, 3, 1, "", "slice_by_idx"], [111, 3, 1, "", "stack"], [111, 3, 1, "", "stat_array"], [111, 3, 1, "", "stat_sum"], [111, 2, 1, "", "stat_type"], [111, 2, 1, "", "tag"], [111, 3, 1, "", "to_dict"], [111, 3, 1, "", "to_hdulist"], [111, 3, 1, "", "to_image"], [111, 3, 1, "", "to_masked"], [111, 3, 1, "", "to_region_map_dataset"], [111, 3, 1, "", "to_spectrum_dataset"], [111, 3, 1, "", "write"]], "gammapy.datasets.SpectrumDatasetOnOff": [[112, 2, 1, "", "alpha"], [112, 2, 1, "", "background"], [112, 2, 1, "", "background_model"], [112, 3, 1, "", "copy"], [112, 2, 1, "", "counts"], [112, 3, 1, "", "create"], [112, 3, 1, "", "cutout"], [112, 2, 1, "", "data_shape"], [112, 3, 1, "", "downsample"], [112, 2, 1, "", "edisp"], [112, 2, 1, "", "energy_range"], [112, 2, 1, "", "energy_range_fit"], [112, 2, 1, "", "energy_range_safe"], [112, 2, 1, "", "energy_range_total"], [112, 2, 1, "", "evaluators"], [112, 2, 1, "", "excess"], [112, 2, 1, "", "exposure"], [112, 3, 1, "", "fake"], [112, 3, 1, "", "from_dict"], [112, 3, 1, "", "from_geoms"], [112, 3, 1, "", "from_hdulist"], [112, 3, 1, "", "from_map_dataset"], [112, 3, 1, "", "from_spectrum_dataset"], [112, 2, 1, "", "geoms"], [112, 2, 1, "", "gti"], [112, 3, 1, "", "info_dict"], [112, 2, 1, "", "mask"], [112, 2, 1, "", "mask_fit"], [112, 2, 1, "", "mask_fit_image"], [112, 2, 1, "", "mask_image"], [112, 2, 1, "", "mask_safe"], [112, 2, 1, "", "mask_safe_edisp"], [112, 2, 1, "", "mask_safe_image"], [112, 2, 1, "", "mask_safe_psf"], [112, 2, 1, "", "meta"], [112, 2, 1, "", "meta_table"], [112, 2, 1, "", "models"], [112, 2, 1, "", "name"], [112, 3, 1, "", "npred"], [112, 3, 1, "", "npred_background"], [112, 3, 1, "", "npred_off"], [112, 3, 1, "", "npred_signal"], [112, 3, 1, "", "pad"], [112, 3, 1, "", "peek"], [112, 3, 1, "", "plot_counts"], [112, 3, 1, "", "plot_excess"], [112, 3, 1, "", "plot_fit"], [112, 3, 1, "", "plot_masks"], [112, 3, 1, "", "plot_residuals"], [112, 3, 1, "", "plot_residuals_spatial"], [112, 3, 1, "", "plot_residuals_spectral"], [112, 2, 1, "", "psf"], [112, 3, 1, "", "read"], [112, 3, 1, "", "resample_energy_axis"], [112, 3, 1, "", "reset_data_cache"], [112, 3, 1, "", "residuals"], [112, 3, 1, "", "slice_by_energy"], [112, 3, 1, "", "slice_by_idx"], [112, 3, 1, "", "stack"], [112, 3, 1, "", "stat_array"], [112, 3, 1, "", "stat_sum"], [112, 2, 1, "", "stat_type"], [112, 2, 1, "", "tag"], [112, 3, 1, "", "to_dict"], [112, 3, 1, "", "to_hdulist"], [112, 3, 1, "", "to_image"], [112, 3, 1, "", "to_map_dataset"], [112, 3, 1, "", "to_masked"], [112, 3, 1, "", "to_region_map_dataset"], [112, 3, 1, "", "to_spectrum_dataset"], [112, 3, 1, "", "write"]], "gammapy.datasets.utils": [[118, 4, 1, "", "apply_edisp"], [119, 4, 1, "", "create_map_dataset_from_dl4"], [120, 4, 1, "", "split_dataset"]], "gammapy.estimators": [[121, 1, 1, "", "ASmoothMapEstimator"], [122, 5, 1, "", "ESTIMATOR_REGISTRY"], [123, 1, 1, "", "EnergyDependentMorphologyEstimator"], [124, 1, 1, "", "Estimator"], [125, 1, 1, "", "ExcessMapEstimator"], [126, 1, 1, "", "FluxMaps"], [127, 1, 1, "", "FluxMetaData"], [128, 1, 1, "", "FluxPoints"], [129, 1, 1, "", "FluxPointsEstimator"], [130, 1, 1, "", "FluxProfileEstimator"], [131, 1, 1, "", "ImageProfile"], [132, 1, 1, "", "ImageProfileEstimator"], [133, 1, 1, "", "LightCurveEstimator"], [134, 1, 1, "", "ParameterEstimator"], [135, 1, 1, "", "ParameterSensitivityEstimator"], [136, 1, 1, "", "SensitivityEstimator"], [137, 1, 1, "", "TSMapEstimator"], [5, 0, 0, "-", "utils"]], "gammapy.estimators.ASmoothMapEstimator": [[121, 2, 1, "", "config_parameters"], [121, 3, 1, "", "copy"], [121, 3, 1, "", "estimate_maps"], [121, 3, 1, "", "get_kernels"], [121, 3, 1, "", "get_scales"], [121, 3, 1, "", "run"], [121, 3, 1, "", "selection_all"], [121, 2, 1, "", "selection_optional"], [121, 2, 1, "", "tag"]], "gammapy.estimators.EnergyDependentMorphologyEstimator": [[123, 2, 1, "", "config_parameters"], [123, 3, 1, "", "copy"], [123, 3, 1, "", "estimate_energy_dependence"], [123, 3, 1, "", "run"], [123, 2, 1, "", "selection_optional"], [123, 2, 1, "", "tag"]], "gammapy.estimators.Estimator": [[124, 2, 1, "", "config_parameters"], [124, 3, 1, "", "copy"], [124, 3, 1, "", "run"], [124, 2, 1, "", "selection_optional"], [124, 2, 1, "", "tag"]], "gammapy.estimators.ExcessMapEstimator": [[125, 2, 1, "", "config_parameters"], [125, 3, 1, "", "copy"], [125, 2, 1, "", "correlation_radius"], [125, 3, 1, "", "estimate_excess_map"], [125, 3, 1, "", "estimate_exposure_reco_energy"], [125, 3, 1, "", "estimate_kernel"], [125, 3, 1, "", "estimate_mask_default"], [125, 3, 1, "", "run"], [125, 2, 1, "", "selection_optional"], [125, 2, 1, "", "tag"]], "gammapy.estimators.FluxMaps": [[126, 2, 1, "", "acceptance_off"], [126, 2, 1, "", "acceptance_on"], [126, 3, 1, "", "all_quantities"], [126, 2, 1, "", "alpha"], [126, 2, 1, "", "available_quantities"], [126, 3, 1, "", "copy"], [126, 2, 1, "", "counts"], [126, 2, 1, "", "dnde"], [126, 2, 1, "", "dnde_err"], [126, 2, 1, "", "dnde_errn"], [126, 2, 1, "", "dnde_errp"], [126, 2, 1, "", "dnde_ref"], [126, 2, 1, "", "dnde_scan_values"], [126, 2, 1, "", "dnde_ul"], [126, 2, 1, "", "e2dnde"], [126, 2, 1, "", "e2dnde_err"], [126, 2, 1, "", "e2dnde_errn"], [126, 2, 1, "", "e2dnde_errp"], [126, 2, 1, "", "e2dnde_ref"], [126, 2, 1, "", "e2dnde_ul"], [126, 2, 1, "", "eflux"], [126, 2, 1, "", "eflux_err"], [126, 2, 1, "", "eflux_errn"], [126, 2, 1, "", "eflux_errp"], [126, 2, 1, "", "eflux_ref"], [126, 2, 1, "", "eflux_ul"], [126, 2, 1, "", "energy_axis"], [126, 2, 1, "", "energy_max"], [126, 2, 1, "", "energy_min"], [126, 2, 1, "", "energy_ref"], [126, 2, 1, "", "filter_success_nan"], [126, 2, 1, "", "flux"], [126, 2, 1, "", "flux_err"], [126, 2, 1, "", "flux_errn"], [126, 2, 1, "", "flux_errp"], [126, 2, 1, "", "flux_ref"], [126, 2, 1, "", "flux_sensitivity"], [126, 2, 1, "", "flux_ul"], [126, 3, 1, "", "from_hdulist"], [126, 3, 1, "", "from_maps"], [126, 3, 1, "", "from_stack"], [126, 2, 1, "", "geom"], [126, 3, 1, "", "get_flux_points"], [126, 2, 1, "", "has_any_ts"], [126, 2, 1, "", "has_stat_profiles"], [126, 2, 1, "", "has_success"], [126, 2, 1, "", "has_ul"], [126, 2, 1, "", "is_convertible_to_flux_sed_type"], [126, 2, 1, "", "is_ul"], [126, 3, 1, "", "iter_by_axis"], [126, 2, 1, "", "n_dof"], [126, 2, 1, "", "n_sigma"], [126, 2, 1, "", "n_sigma_ul"], [126, 2, 1, "", "niter"], [126, 2, 1, "", "norm"], [126, 2, 1, "", "norm_err"], [126, 2, 1, "", "norm_errn"], [126, 2, 1, "", "norm_errp"], [126, 2, 1, "", "norm_sensitivity"], [126, 2, 1, "", "norm_ul"], [126, 2, 1, "", "npred"], [126, 2, 1, "", "npred_background"], [126, 2, 1, "", "npred_excess"], [126, 2, 1, "", "npred_excess_err"], [126, 2, 1, "", "npred_excess_errn"], [126, 2, 1, "", "npred_excess_errp"], [126, 2, 1, "", "npred_excess_ref"], [126, 2, 1, "", "npred_excess_ul"], [126, 3, 1, "", "read"], [126, 2, 1, "", "reference_model"], [126, 2, 1, "", "reference_model_default"], [126, 2, 1, "", "reference_spectral_model"], [126, 2, 1, "", "sed_type_init"], [126, 2, 1, "", "sed_type_plot_default"], [126, 3, 1, "", "slice_by_coord"], [126, 3, 1, "", "slice_by_energy"], [126, 3, 1, "", "slice_by_idx"], [126, 3, 1, "", "slice_by_time"], [126, 2, 1, "", "sqrt_ts"], [126, 2, 1, "", "sqrt_ts_threshold_ul"], [126, 2, 1, "", "stat"], [126, 2, 1, "", "stat_null"], [126, 2, 1, "", "stat_scan"], [126, 2, 1, "", "success"], [126, 3, 1, "", "to_hdulist"], [126, 3, 1, "", "to_maps"], [126, 2, 1, "", "ts"], [126, 2, 1, "", "ts_scan"], [126, 3, 1, "", "write"]], "gammapy.estimators.FluxMetaData": [[127, 3, 1, "", "construct"], [127, 3, 1, "", "copy"], [127, 3, 1, "", "dict"], [127, 3, 1, "", "from_header"], [127, 3, 1, "", "from_orm"], [127, 3, 1, "", "json"], [127, 2, 1, "", "model_computed_fields"], [127, 2, 1, "", "model_config"], [127, 3, 1, "", "model_construct"], [127, 3, 1, "", "model_copy"], [127, 3, 1, "", "model_dump"], [127, 3, 1, "", "model_dump_json"], [127, 2, 1, "", "model_extra"], [127, 2, 1, "", "model_fields"], [127, 2, 1, "", "model_fields_set"], [127, 3, 1, "", "model_json_schema"], [127, 3, 1, "", "model_parametrized_name"], [127, 3, 1, "", "model_post_init"], [127, 3, 1, "", "model_rebuild"], [127, 3, 1, "", "model_validate"], [127, 3, 1, "", "model_validate_json"], [127, 3, 1, "", "model_validate_strings"], [127, 3, 1, "", "parse_file"], [127, 3, 1, "", "parse_obj"], [127, 3, 1, "", "parse_raw"], [127, 3, 1, "", "schema"], [127, 3, 1, "", "schema_json"], [127, 2, 1, "", "tag"], [127, 3, 1, "", "to_header"], [127, 3, 1, "", "to_yaml"], [127, 3, 1, "", "update_forward_refs"], [127, 3, 1, "", "validate"]], "gammapy.estimators.FluxPoints": [[128, 2, 1, "", "acceptance_off"], [128, 2, 1, "", "acceptance_on"], [128, 3, 1, "", "all_quantities"], [128, 2, 1, "", "alpha"], [128, 2, 1, "", "available_quantities"], [128, 3, 1, "", "copy"], [128, 2, 1, "", "counts"], [128, 2, 1, "", "dnde"], [128, 2, 1, "", "dnde_err"], [128, 2, 1, "", "dnde_errn"], [128, 2, 1, "", "dnde_errp"], [128, 2, 1, "", "dnde_ref"], [128, 2, 1, "", "dnde_scan_values"], [128, 2, 1, "", "dnde_ul"], [128, 2, 1, "", "e2dnde"], [128, 2, 1, "", "e2dnde_err"], [128, 2, 1, "", "e2dnde_errn"], [128, 2, 1, "", "e2dnde_errp"], [128, 2, 1, "", "e2dnde_ref"], [128, 2, 1, "", "e2dnde_ul"], [128, 2, 1, "", "eflux"], [128, 2, 1, "", "eflux_err"], [128, 2, 1, "", "eflux_errn"], [128, 2, 1, "", "eflux_errp"], [128, 2, 1, "", "eflux_ref"], [128, 2, 1, "", "eflux_ul"], [128, 2, 1, "", "energy_axis"], [128, 2, 1, "", "energy_max"], [128, 2, 1, "", "energy_min"], [128, 2, 1, "", "energy_ref"], [128, 2, 1, "", "filter_success_nan"], [128, 2, 1, "", "flux"], [128, 2, 1, "", "flux_err"], [128, 2, 1, "", "flux_errn"], [128, 2, 1, "", "flux_errp"], [128, 2, 1, "", "flux_ref"], [128, 2, 1, "", "flux_sensitivity"], [128, 2, 1, "", "flux_ul"], [128, 3, 1, "", "from_hdulist"], [128, 3, 1, "", "from_maps"], [128, 3, 1, "", "from_stack"], [128, 3, 1, "", "from_table"], [128, 2, 1, "", "geom"], [128, 3, 1, "", "get_flux_points"], [128, 2, 1, "", "has_any_ts"], [128, 2, 1, "", "has_stat_profiles"], [128, 2, 1, "", "has_success"], [128, 2, 1, "", "has_ul"], [128, 2, 1, "", "is_convertible_to_flux_sed_type"], [128, 2, 1, "", "is_ul"], [128, 3, 1, "", "iter_by_axis"], [128, 2, 1, "", "n_dof"], [128, 2, 1, "", "n_sigma"], [128, 2, 1, "", "n_sigma_ul"], [128, 2, 1, "", "niter"], [128, 2, 1, "", "norm"], [128, 2, 1, "", "norm_err"], [128, 2, 1, "", "norm_errn"], [128, 2, 1, "", "norm_errp"], [128, 2, 1, "", "norm_sensitivity"], [128, 2, 1, "", "norm_ul"], [128, 2, 1, "", "npred"], [128, 2, 1, "", "npred_background"], [128, 2, 1, "", "npred_excess"], [128, 2, 1, "", "npred_excess_err"], [128, 2, 1, "", "npred_excess_errn"], [128, 2, 1, "", "npred_excess_errp"], [128, 2, 1, "", "npred_excess_ref"], [128, 2, 1, "", "npred_excess_ul"], [128, 3, 1, "", "plot"], [128, 3, 1, "", "plot_ts_profiles"], [128, 3, 1, "", "read"], [128, 3, 1, "", "recompute_ul"], [128, 2, 1, "", "reference_model"], [128, 2, 1, "", "reference_model_default"], [128, 2, 1, "", "reference_spectral_model"], [128, 3, 1, "", "resample_axis"], [128, 2, 1, "", "sed_type_init"], [128, 2, 1, "", "sed_type_plot_default"], [128, 3, 1, "", "slice_by_coord"], [128, 3, 1, "", "slice_by_energy"], [128, 3, 1, "", "slice_by_idx"], [128, 3, 1, "", "slice_by_time"], [128, 2, 1, "", "sqrt_ts"], [128, 2, 1, "", "sqrt_ts_threshold_ul"], [128, 2, 1, "", "stat"], [128, 2, 1, "", "stat_null"], [128, 2, 1, "", "stat_scan"], [128, 2, 1, "", "success"], [128, 3, 1, "", "to_hdulist"], [128, 3, 1, "", "to_maps"], [128, 3, 1, "", "to_table"], [128, 2, 1, "", "ts"], [128, 2, 1, "", "ts_scan"], [128, 3, 1, "", "write"]], "gammapy.estimators.FluxPointsEstimator": [[129, 2, 1, "", "config_parameters"], [129, 3, 1, "", "copy"], [129, 3, 1, "", "estimate_best_fit"], [129, 3, 1, "", "estimate_counts"], [129, 3, 1, "", "estimate_errn_errp"], [129, 3, 1, "", "estimate_flux_point"], [129, 3, 1, "", "estimate_npred"], [129, 3, 1, "", "estimate_npred_excess"], [129, 3, 1, "", "estimate_scan"], [129, 3, 1, "", "estimate_sensitivity"], [129, 3, 1, "", "estimate_ts"], [129, 3, 1, "", "estimate_ul"], [129, 3, 1, "", "get_scale_model"], [129, 2, 1, "", "n_jobs"], [129, 2, 1, "", "parallel_backend"], [129, 3, 1, "", "run"], [129, 2, 1, "", "selection_optional"], [129, 2, 1, "", "tag"]], "gammapy.estimators.FluxProfileEstimator": [[130, 2, 1, "", "config_parameters"], [130, 3, 1, "", "copy"], [130, 3, 1, "", "estimate_best_fit"], [130, 3, 1, "", "estimate_counts"], [130, 3, 1, "", "estimate_errn_errp"], [130, 3, 1, "", "estimate_flux_point"], [130, 3, 1, "", "estimate_npred"], [130, 3, 1, "", "estimate_npred_excess"], [130, 3, 1, "", "estimate_scan"], [130, 3, 1, "", "estimate_sensitivity"], [130, 3, 1, "", "estimate_ts"], [130, 3, 1, "", "estimate_ul"], [130, 3, 1, "", "get_scale_model"], [130, 2, 1, "", "n_jobs"], [130, 2, 1, "", "parallel_backend"], [130, 2, 1, "", "projected_distance_axis"], [130, 3, 1, "", "run"], [130, 2, 1, "", "selection_optional"], [130, 2, 1, "", "tag"]], "gammapy.estimators.ImageProfile": [[131, 3, 1, "", "normalize"], [131, 3, 1, "", "peek"], [131, 3, 1, "", "plot"], [131, 3, 1, "", "plot_err"], [131, 2, 1, "", "profile"], [131, 2, 1, "", "profile_err"], [131, 3, 1, "", "smooth"], [131, 2, 1, "", "x_max"], [131, 2, 1, "", "x_min"], [131, 2, 1, "", "x_ref"]], "gammapy.estimators.ImageProfileEstimator": [[132, 2, 1, "", "config_parameters"], [132, 3, 1, "", "copy"], [132, 3, 1, "", "run"], [132, 2, 1, "", "selection_optional"], [132, 2, 1, "", "tag"]], "gammapy.estimators.LightCurveEstimator": [[133, 2, 1, "", "config_parameters"], [133, 3, 1, "", "copy"], [133, 3, 1, "", "estimate_best_fit"], [133, 3, 1, "", "estimate_counts"], [133, 3, 1, "", "estimate_errn_errp"], [133, 3, 1, "", "estimate_flux_point"], [133, 3, 1, "", "estimate_npred"], [133, 3, 1, "", "estimate_npred_excess"], [133, 3, 1, "", "estimate_scan"], [133, 3, 1, "", "estimate_sensitivity"], [133, 3, 1, "", "estimate_time_bin_flux"], [133, 3, 1, "", "estimate_ts"], [133, 3, 1, "", "estimate_ul"], [133, 3, 1, "", "expand_map"], [133, 3, 1, "", "get_scale_model"], [133, 2, 1, "", "n_jobs"], [133, 2, 1, "", "parallel_backend"], [133, 3, 1, "", "run"], [133, 2, 1, "", "selection_optional"], [133, 2, 1, "", "tag"]], "gammapy.estimators.ParameterEstimator": [[134, 2, 1, "", "config_parameters"], [134, 3, 1, "", "copy"], [134, 3, 1, "", "estimate_best_fit"], [134, 3, 1, "", "estimate_counts"], [134, 3, 1, "", "estimate_errn_errp"], [134, 3, 1, "", "estimate_npred"], [134, 3, 1, "", "estimate_scan"], [134, 3, 1, "", "estimate_sensitivity"], [134, 3, 1, "", "estimate_ts"], [134, 3, 1, "", "estimate_ul"], [134, 3, 1, "", "run"], [134, 2, 1, "", "selection_optional"], [134, 2, 1, "", "tag"]], "gammapy.estimators.ParameterSensitivityEstimator": [[135, 3, 1, "", "parameter_matching_significance"], [135, 3, 1, "", "run"], [135, 2, 1, "", "tag"]], "gammapy.estimators.SensitivityEstimator": [[136, 2, 1, "", "config_parameters"], [136, 3, 1, "", "copy"], [136, 3, 1, "", "estimate_min_e2dnde"], [136, 3, 1, "", "estimate_min_excess"], [136, 3, 1, "", "run"], [136, 2, 1, "", "selection_optional"], [136, 2, 1, "", "tag"]], "gammapy.estimators.TSMapEstimator": [[137, 2, 1, "", "config_parameters"], [137, 3, 1, "", "copy"], [137, 3, 1, "", "estimate_fit_input_maps"], [137, 3, 1, "", "estimate_flux_default"], [137, 3, 1, "", "estimate_flux_map"], [137, 3, 1, "", "estimate_kernel"], [137, 3, 1, "", "estimate_mask_default"], [137, 3, 1, "", "estimate_pad_width"], [137, 2, 1, "", "n_jobs"], [137, 2, 1, "", "parallel_backend"], [137, 3, 1, "", "run"], [137, 2, 1, "", "selection_all"], [137, 2, 1, "", "selection_optional"], [137, 2, 1, "", "tag"]], "gammapy.estimators.utils": [[138, 4, 1, "", "combine_flux_maps"], [139, 4, 1, "", "combine_significance_maps"], [140, 4, 1, "", "compute_lightcurve_discrete_correlation"], [141, 4, 1, "", "compute_lightcurve_doublingtime"], [142, 4, 1, "", "compute_lightcurve_fpp"], [143, 4, 1, "", "compute_lightcurve_fvar"], [144, 4, 1, "", "estimate_exposure_reco_energy"], [145, 4, 1, "", "find_peaks"], [146, 4, 1, "", "find_peaks_in_flux_map"], [147, 4, 1, "", "get_combined_flux_maps"], [148, 4, 1, "", "get_combined_significance_maps"], [149, 4, 1, "", "get_rebinned_axis"], [150, 4, 1, "", "resample_energy_edges"]], "gammapy.irf": [[151, 1, 1, "", "Background2D"], [152, 1, 1, "", "Background3D"], [153, 1, 1, "", "BackgroundIRF"], [154, 1, 1, "", "EDispKernel"], [155, 1, 1, "", "EDispKernelMap"], [156, 1, 1, "", "EDispMap"], [157, 1, 1, "", "EffectiveAreaTable2D"], [158, 1, 1, "", "EnergyDependentMultiGaussPSF"], [159, 1, 1, "", "EnergyDispersion2D"], [160, 1, 1, "", "FoVAlignment"], [161, 1, 1, "", "IRF"], [162, 1, 1, "", "IRFMap"], [163, 5, 1, "", "IRF_REGISTRY"], [164, 1, 1, "", "PSF3D"], [165, 1, 1, "", "PSFKernel"], [166, 1, 1, "", "PSFKing"], [167, 1, 1, "", "PSFMap"], [168, 1, 1, "", "ParametricPSF"], [169, 1, 1, "", "RadMax2D"], [170, 1, 1, "", "RecoPSFMap"], [171, 4, 1, "", "load_irf_dict_from_file"]], "gammapy.irf.Background2D": [[151, 2, 1, "", "axes"], [151, 3, 1, "", "cumsum"], [151, 2, 1, "", "data"], [151, 2, 1, "", "default_interp_kwargs"], [151, 2, 1, "", "default_unit"], [151, 3, 1, "", "evaluate"], [151, 2, 1, "", "fov_alignment"], [151, 3, 1, "", "from_hdulist"], [151, 3, 1, "", "from_table"], [151, 2, 1, "", "has_offset_axis"], [151, 3, 1, "", "integral"], [151, 3, 1, "", "integrate_log_log"], [151, 3, 1, "", "interp_missing_data"], [151, 3, 1, "", "is_allclose"], [151, 2, 1, "", "is_pointlike"], [151, 3, 1, "", "normalize"], [151, 3, 1, "", "pad"], [151, 3, 1, "", "peek"], [151, 3, 1, "", "plot"], [151, 3, 1, "", "plot_at_energy"], [151, 3, 1, "", "plot_energy_dependence"], [151, 3, 1, "", "plot_offset_dependence"], [151, 3, 1, "", "plot_spectrum"], [151, 2, 1, "", "quantity"], [151, 3, 1, "", "read"], [151, 2, 1, "", "required_axes"], [151, 3, 1, "", "slice_by_idx"], [151, 2, 1, "", "tag"], [151, 3, 1, "", "to_3d"], [151, 3, 1, "", "to_hdulist"], [151, 3, 1, "", "to_table"], [151, 3, 1, "", "to_table_hdu"], [151, 3, 1, "", "to_unit"], [151, 2, 1, "", "unit"], [151, 3, 1, "", "write"]], "gammapy.irf.Background3D": [[152, 2, 1, "", "axes"], [152, 3, 1, "", "cumsum"], [152, 2, 1, "", "data"], [152, 2, 1, "", "default_interp_kwargs"], [152, 2, 1, "", "default_unit"], [152, 3, 1, "", "evaluate"], [152, 2, 1, "", "fov_alignment"], [152, 3, 1, "", "from_hdulist"], [152, 3, 1, "", "from_table"], [152, 2, 1, "", "has_offset_axis"], [152, 3, 1, "", "integral"], [152, 3, 1, "", "integrate_log_log"], [152, 3, 1, "", "interp_missing_data"], [152, 3, 1, "", "is_allclose"], [152, 2, 1, "", "is_pointlike"], [152, 3, 1, "", "normalize"], [152, 3, 1, "", "pad"], [152, 3, 1, "", "peek"], [152, 3, 1, "", "plot_at_energy"], [152, 2, 1, "", "quantity"], [152, 3, 1, "", "read"], [152, 2, 1, "", "required_axes"], [152, 3, 1, "", "slice_by_idx"], [152, 2, 1, "", "tag"], [152, 3, 1, "", "to_2d"], [152, 3, 1, "", "to_hdulist"], [152, 3, 1, "", "to_table"], [152, 3, 1, "", "to_table_hdu"], [152, 3, 1, "", "to_unit"], [152, 2, 1, "", "unit"], [152, 3, 1, "", "write"]], "gammapy.irf.BackgroundIRF": [[153, 2, 1, "", "axes"], [153, 3, 1, "", "cumsum"], [153, 2, 1, "", "data"], [153, 2, 1, "", "default_interp_kwargs"], [153, 3, 1, "", "evaluate"], [153, 2, 1, "", "fov_alignment"], [153, 3, 1, "", "from_hdulist"], [153, 3, 1, "", "from_table"], [153, 2, 1, "", "has_offset_axis"], [153, 3, 1, "", "integral"], [153, 3, 1, "", "integrate_log_log"], [153, 3, 1, "", "interp_missing_data"], [153, 3, 1, "", "is_allclose"], [153, 2, 1, "", "is_pointlike"], [153, 3, 1, "", "normalize"], [153, 3, 1, "", "pad"], [153, 2, 1, "", "quantity"], [153, 3, 1, "", "read"], [153, 2, 1, "", "required_axes"], [153, 3, 1, "", "slice_by_idx"], [153, 2, 1, "", "tag"], [153, 3, 1, "", "to_hdulist"], [153, 3, 1, "", "to_table"], [153, 3, 1, "", "to_table_hdu"], [153, 3, 1, "", "to_unit"], [153, 2, 1, "", "unit"], [153, 3, 1, "", "write"]], "gammapy.irf.EDispKernel": [[154, 2, 1, "", "axes"], [154, 3, 1, "", "cumsum"], [154, 2, 1, "", "data"], [154, 2, 1, "", "default_interp_kwargs"], [154, 3, 1, "", "evaluate"], [154, 2, 1, "", "fov_alignment"], [154, 3, 1, "", "from_diagonal_response"], [154, 3, 1, "", "from_gauss"], [154, 3, 1, "", "from_hdulist"], [154, 3, 1, "", "from_table"], [154, 3, 1, "", "get_bias"], [154, 3, 1, "", "get_bias_energy"], [154, 3, 1, "", "get_mean"], [154, 3, 1, "", "get_resolution"], [154, 2, 1, "", "has_offset_axis"], [154, 3, 1, "", "integral"], [154, 3, 1, "", "integrate_log_log"], [154, 3, 1, "", "interp_missing_data"], [154, 3, 1, "", "is_allclose"], [154, 2, 1, "", "is_pointlike"], [154, 3, 1, "", "normalize"], [154, 3, 1, "", "pad"], [154, 3, 1, "", "pdf_in_safe_range"], [154, 2, 1, "", "pdf_matrix"], [154, 3, 1, "", "peek"], [154, 3, 1, "", "plot_bias"], [154, 3, 1, "", "plot_matrix"], [154, 2, 1, "", "quantity"], [154, 3, 1, "", "read"], [154, 2, 1, "", "required_axes"], [154, 3, 1, "", "slice_by_idx"], [154, 2, 1, "", "tag"], [154, 3, 1, "", "to_hdulist"], [154, 3, 1, "", "to_image"], [154, 3, 1, "", "to_table"], [154, 3, 1, "", "to_table_hdu"], [154, 3, 1, "", "to_unit"], [154, 2, 1, "", "unit"], [154, 3, 1, "", "write"]], "gammapy.irf.EDispKernelMap": [[155, 3, 1, "", "copy"], [155, 3, 1, "", "cutout"], [155, 3, 1, "", "downsample"], [155, 2, 1, "", "edisp_map"], [155, 3, 1, "", "from_diagonal_response"], [155, 3, 1, "", "from_edisp_kernel"], [155, 3, 1, "", "from_gauss"], [155, 3, 1, "", "from_geom"], [155, 3, 1, "", "from_hdulist"], [155, 3, 1, "", "get_edisp_kernel"], [155, 2, 1, "", "has_single_spatial_bin"], [155, 2, 1, "", "mask_safe_image"], [155, 3, 1, "", "peek"], [155, 3, 1, "", "read"], [155, 2, 1, "", "required_axes"], [155, 3, 1, "", "resample_energy_axis"], [155, 3, 1, "", "slice_by_idx"], [155, 3, 1, "", "stack"], [155, 2, 1, "", "tag"], [155, 3, 1, "", "to_hdulist"], [155, 3, 1, "", "to_image"], [155, 3, 1, "", "to_region_nd_map"], [155, 3, 1, "", "write"]], "gammapy.irf.EDispMap": [[156, 3, 1, "", "copy"], [156, 3, 1, "", "cutout"], [156, 3, 1, "", "downsample"], [156, 2, 1, "", "edisp_map"], [156, 3, 1, "", "from_diagonal_response"], [156, 3, 1, "", "from_geom"], [156, 3, 1, "", "from_hdulist"], [156, 3, 1, "", "get_edisp_kernel"], [156, 2, 1, "", "has_single_spatial_bin"], [156, 2, 1, "", "mask_safe_image"], [156, 3, 1, "", "normalize"], [156, 3, 1, "", "peek"], [156, 3, 1, "", "read"], [156, 2, 1, "", "required_axes"], [156, 3, 1, "", "sample_coord"], [156, 3, 1, "", "slice_by_idx"], [156, 3, 1, "", "stack"], [156, 2, 1, "", "tag"], [156, 3, 1, "", "to_edisp_kernel_map"], [156, 3, 1, "", "to_hdulist"], [156, 3, 1, "", "to_region_nd_map"], [156, 3, 1, "", "write"]], "gammapy.irf.EffectiveAreaTable2D": [[157, 2, 1, "", "axes"], [157, 3, 1, "", "cumsum"], [157, 2, 1, "", "data"], [157, 2, 1, "", "default_interp_kwargs"], [157, 2, 1, "", "default_unit"], [157, 3, 1, "", "evaluate"], [157, 2, 1, "", "fov_alignment"], [157, 3, 1, "", "from_hdulist"], [157, 3, 1, "", "from_parametrization"], [157, 3, 1, "", "from_table"], [157, 2, 1, "", "has_offset_axis"], [157, 3, 1, "", "integral"], [157, 3, 1, "", "integrate_log_log"], [157, 3, 1, "", "interp_missing_data"], [157, 3, 1, "", "is_allclose"], [157, 2, 1, "", "is_pointlike"], [157, 3, 1, "", "normalize"], [157, 3, 1, "", "pad"], [157, 3, 1, "", "peek"], [157, 3, 1, "", "plot"], [157, 3, 1, "", "plot_energy_dependence"], [157, 3, 1, "", "plot_offset_dependence"], [157, 2, 1, "", "quantity"], [157, 3, 1, "", "read"], [157, 2, 1, "", "required_axes"], [157, 3, 1, "", "slice_by_idx"], [157, 2, 1, "", "tag"], [157, 3, 1, "", "to_hdulist"], [157, 3, 1, "", "to_table"], [157, 3, 1, "", "to_table_hdu"], [157, 3, 1, "", "to_unit"], [157, 2, 1, "", "unit"], [157, 3, 1, "", "write"]], "gammapy.irf.EnergyDependentMultiGaussPSF": [[158, 2, 1, "", "axes"], [158, 3, 1, "", "containment"], [158, 3, 1, "", "containment_radius"], [158, 3, 1, "", "cumsum"], [158, 2, 1, "", "data"], [158, 2, 1, "", "default_interp_kwargs"], [158, 3, 1, "", "evaluate"], [158, 3, 1, "", "evaluate_containment"], [158, 3, 1, "", "evaluate_direct"], [158, 3, 1, "", "evaluate_parameters"], [158, 2, 1, "", "fov_alignment"], [158, 3, 1, "", "from_hdulist"], [158, 3, 1, "", "from_table"], [158, 2, 1, "", "has_offset_axis"], [158, 3, 1, "", "info"], [158, 3, 1, "", "integral"], [158, 3, 1, "", "integrate_log_log"], [158, 3, 1, "", "interp_missing_data"], [158, 3, 1, "", "is_allclose"], [158, 2, 1, "", "is_pointlike"], [158, 3, 1, "", "normalize"], [158, 3, 1, "", "pad"], [158, 3, 1, "", "peek"], [158, 3, 1, "", "plot_containment_radius"], [158, 3, 1, "", "plot_containment_radius_vs_energy"], [158, 3, 1, "", "plot_psf_vs_rad"], [158, 2, 1, "", "quantity"], [158, 3, 1, "", "read"], [158, 2, 1, "", "required_axes"], [158, 2, 1, "", "required_parameters"], [158, 3, 1, "", "slice_by_idx"], [158, 2, 1, "", "tag"], [158, 3, 1, "", "to_hdulist"], [158, 3, 1, "", "to_psf3d"], [158, 3, 1, "", "to_table"], [158, 3, 1, "", "to_table_hdu"], [158, 3, 1, "", "to_unit"], [158, 2, 1, "", "unit"], [158, 3, 1, "", "write"]], "gammapy.irf.EnergyDispersion2D": [[159, 2, 1, "", "axes"], [159, 3, 1, "", "cumsum"], [159, 2, 1, "", "data"], [159, 2, 1, "", "default_interp_kwargs"], [159, 2, 1, "", "default_unit"], [159, 3, 1, "", "evaluate"], [159, 2, 1, "", "fov_alignment"], [159, 3, 1, "", "from_gauss"], [159, 3, 1, "", "from_hdulist"], [159, 3, 1, "", "from_table"], [159, 2, 1, "", "has_offset_axis"], [159, 3, 1, "", "integral"], [159, 3, 1, "", "integrate_log_log"], [159, 3, 1, "", "interp_missing_data"], [159, 3, 1, "", "is_allclose"], [159, 2, 1, "", "is_pointlike"], [159, 3, 1, "", "normalize"], [159, 3, 1, "", "pad"], [159, 3, 1, "", "peek"], [159, 3, 1, "", "plot_bias"], [159, 3, 1, "", "plot_migration"], [159, 2, 1, "", "quantity"], [159, 3, 1, "", "read"], [159, 2, 1, "", "required_axes"], [159, 3, 1, "", "slice_by_idx"], [159, 2, 1, "", "tag"], [159, 3, 1, "", "to_edisp_kernel"], [159, 3, 1, "", "to_hdulist"], [159, 3, 1, "", "to_table"], [159, 3, 1, "", "to_table_hdu"], [159, 3, 1, "", "to_unit"], [159, 2, 1, "", "unit"], [159, 3, 1, "", "write"]], "gammapy.irf.FoVAlignment": [[160, 2, 1, "", "ALTAZ"], [160, 2, 1, "", "RADEC"], [160, 2, 1, "", "REVERSE_LON_RADEC"]], "gammapy.irf.IRF": [[161, 2, 1, "", "axes"], [161, 3, 1, "", "cumsum"], [161, 2, 1, "", "data"], [161, 2, 1, "", "default_interp_kwargs"], [161, 3, 1, "", "evaluate"], [161, 2, 1, "", "fov_alignment"], [161, 3, 1, "", "from_hdulist"], [161, 3, 1, "", "from_table"], [161, 2, 1, "", "has_offset_axis"], [161, 3, 1, "", "integral"], [161, 3, 1, "", "integrate_log_log"], [161, 3, 1, "", "interp_missing_data"], [161, 3, 1, "", "is_allclose"], [161, 2, 1, "", "is_pointlike"], [161, 3, 1, "", "normalize"], [161, 3, 1, "", "pad"], [161, 2, 1, "", "quantity"], [161, 3, 1, "", "read"], [161, 2, 1, "", "required_axes"], [161, 3, 1, "", "slice_by_idx"], [161, 2, 1, "", "tag"], [161, 3, 1, "", "to_hdulist"], [161, 3, 1, "", "to_table"], [161, 3, 1, "", "to_table_hdu"], [161, 3, 1, "", "to_unit"], [161, 2, 1, "", "unit"], [161, 3, 1, "", "write"]], "gammapy.irf.IRFMap": [[162, 3, 1, "", "copy"], [162, 3, 1, "", "cutout"], [162, 3, 1, "", "downsample"], [162, 3, 1, "", "from_hdulist"], [162, 2, 1, "", "has_single_spatial_bin"], [162, 2, 1, "", "mask_safe_image"], [162, 3, 1, "", "read"], [162, 2, 1, "", "required_axes"], [162, 3, 1, "", "slice_by_idx"], [162, 3, 1, "", "stack"], [162, 2, 1, "", "tag"], [162, 3, 1, "", "to_hdulist"], [162, 3, 1, "", "to_region_nd_map"], [162, 3, 1, "", "write"]], "gammapy.irf.PSF3D": [[164, 2, 1, "", "axes"], [164, 3, 1, "", "containment"], [164, 3, 1, "", "containment_radius"], [164, 3, 1, "", "cumsum"], [164, 2, 1, "", "data"], [164, 2, 1, "", "default_interp_kwargs"], [164, 2, 1, "", "default_unit"], [164, 3, 1, "", "evaluate"], [164, 2, 1, "", "fov_alignment"], [164, 3, 1, "", "from_hdulist"], [164, 3, 1, "", "from_table"], [164, 2, 1, "", "has_offset_axis"], [164, 3, 1, "", "info"], [164, 3, 1, "", "integral"], [164, 3, 1, "", "integrate_log_log"], [164, 3, 1, "", "interp_missing_data"], [164, 3, 1, "", "is_allclose"], [164, 2, 1, "", "is_pointlike"], [164, 3, 1, "", "normalize"], [164, 3, 1, "", "pad"], [164, 3, 1, "", "peek"], [164, 3, 1, "", "plot_containment_radius"], [164, 3, 1, "", "plot_containment_radius_vs_energy"], [164, 3, 1, "", "plot_psf_vs_rad"], [164, 2, 1, "", "quantity"], [164, 3, 1, "", "read"], [164, 2, 1, "", "required_axes"], [164, 3, 1, "", "slice_by_idx"], [164, 2, 1, "", "tag"], [164, 3, 1, "", "to_hdulist"], [164, 3, 1, "", "to_table"], [164, 3, 1, "", "to_table_hdu"], [164, 3, 1, "", "to_unit"], [164, 2, 1, "", "unit"], [164, 3, 1, "", "write"]], "gammapy.irf.PSFKernel": [[165, 2, 1, "", "data"], [165, 3, 1, "", "from_gauss"], [165, 3, 1, "", "from_spatial_model"], [165, 3, 1, "", "normalize"], [165, 3, 1, "", "peek"], [165, 3, 1, "", "plot_kernel"], [165, 2, 1, "", "psf_kernel_map"], [165, 3, 1, "", "read"], [165, 3, 1, "", "slice_by_idx"], [165, 3, 1, "", "to_image"], [165, 3, 1, "", "write"]], "gammapy.irf.PSFKing": [[166, 2, 1, "", "axes"], [166, 3, 1, "", "containment"], [166, 3, 1, "", "containment_radius"], [166, 3, 1, "", "cumsum"], [166, 2, 1, "", "data"], [166, 2, 1, "", "default_interp_kwargs"], [166, 3, 1, "", "evaluate"], [166, 3, 1, "", "evaluate_containment"], [166, 3, 1, "", "evaluate_direct"], [166, 3, 1, "", "evaluate_parameters"], [166, 2, 1, "", "fov_alignment"], [166, 3, 1, "", "from_hdulist"], [166, 3, 1, "", "from_table"], [166, 2, 1, "", "has_offset_axis"], [166, 3, 1, "", "info"], [166, 3, 1, "", "integral"], [166, 3, 1, "", "integrate_log_log"], [166, 3, 1, "", "interp_missing_data"], [166, 3, 1, "", "is_allclose"], [166, 2, 1, "", "is_pointlike"], [166, 3, 1, "", "normalize"], [166, 3, 1, "", "pad"], [166, 3, 1, "", "peek"], [166, 3, 1, "", "plot_containment_radius"], [166, 3, 1, "", "plot_containment_radius_vs_energy"], [166, 3, 1, "", "plot_psf_vs_rad"], [166, 2, 1, "", "quantity"], [166, 3, 1, "", "read"], [166, 2, 1, "", "required_axes"], [166, 2, 1, "", "required_parameters"], [166, 3, 1, "", "slice_by_idx"], [166, 2, 1, "", "tag"], [166, 3, 1, "", "to_hdulist"], [166, 3, 1, "", "to_psf3d"], [166, 3, 1, "", "to_table"], [166, 3, 1, "", "to_table_hdu"], [166, 3, 1, "", "to_unit"], [166, 2, 1, "", "unit"], [166, 3, 1, "", "write"]], "gammapy.irf.PSFMap": [[167, 3, 1, "", "containment"], [167, 3, 1, "", "containment_radius"], [167, 3, 1, "", "containment_radius_map"], [167, 3, 1, "", "copy"], [167, 3, 1, "", "cutout"], [167, 3, 1, "", "downsample"], [167, 2, 1, "", "energy_name"], [167, 3, 1, "", "from_gauss"], [167, 3, 1, "", "from_geom"], [167, 3, 1, "", "from_hdulist"], [167, 3, 1, "", "get_psf_kernel"], [167, 2, 1, "", "has_single_spatial_bin"], [167, 2, 1, "", "mask_safe_image"], [167, 3, 1, "", "normalize"], [167, 3, 1, "", "peek"], [167, 3, 1, "", "plot_containment_radius_vs_energy"], [167, 3, 1, "", "plot_psf_vs_rad"], [167, 2, 1, "", "psf_map"], [167, 3, 1, "", "read"], [167, 2, 1, "", "required_axes"], [167, 3, 1, "", "sample_coord"], [167, 3, 1, "", "slice_by_idx"], [167, 3, 1, "", "stack"], [167, 2, 1, "", "tag"], [167, 3, 1, "", "to_hdulist"], [167, 3, 1, "", "to_image"], [167, 3, 1, "", "to_region_nd_map"], [167, 3, 1, "", "write"]], "gammapy.irf.ParametricPSF": [[168, 2, 1, "", "axes"], [168, 3, 1, "", "containment"], [168, 3, 1, "", "containment_radius"], [168, 3, 1, "", "cumsum"], [168, 2, 1, "", "data"], [168, 2, 1, "", "default_interp_kwargs"], [168, 3, 1, "", "evaluate"], [168, 3, 1, "", "evaluate_containment"], [168, 3, 1, "", "evaluate_direct"], [168, 3, 1, "", "evaluate_parameters"], [168, 2, 1, "", "fov_alignment"], [168, 3, 1, "", "from_hdulist"], [168, 3, 1, "", "from_table"], [168, 2, 1, "", "has_offset_axis"], [168, 3, 1, "", "info"], [168, 3, 1, "", "integral"], [168, 3, 1, "", "integrate_log_log"], [168, 3, 1, "", "interp_missing_data"], [168, 3, 1, "", "is_allclose"], [168, 2, 1, "", "is_pointlike"], [168, 3, 1, "", "normalize"], [168, 3, 1, "", "pad"], [168, 3, 1, "", "peek"], [168, 3, 1, "", "plot_containment_radius"], [168, 3, 1, "", "plot_containment_radius_vs_energy"], [168, 3, 1, "", "plot_psf_vs_rad"], [168, 2, 1, "", "quantity"], [168, 3, 1, "", "read"], [168, 2, 1, "", "required_axes"], [168, 2, 1, "", "required_parameters"], [168, 3, 1, "", "slice_by_idx"], [168, 2, 1, "", "tag"], [168, 3, 1, "", "to_hdulist"], [168, 3, 1, "", "to_psf3d"], [168, 3, 1, "", "to_table"], [168, 3, 1, "", "to_table_hdu"], [168, 3, 1, "", "to_unit"], [168, 2, 1, "", "unit"], [168, 3, 1, "", "write"]], "gammapy.irf.RadMax2D": [[169, 2, 1, "", "axes"], [169, 3, 1, "", "cumsum"], [169, 2, 1, "", "data"], [169, 2, 1, "", "default_interp_kwargs"], [169, 2, 1, "", "default_unit"], [169, 3, 1, "", "evaluate"], [169, 2, 1, "", "fov_alignment"], [169, 3, 1, "", "from_hdulist"], [169, 3, 1, "", "from_irf"], [169, 3, 1, "", "from_table"], [169, 2, 1, "", "has_offset_axis"], [169, 3, 1, "", "integral"], [169, 3, 1, "", "integrate_log_log"], [169, 3, 1, "", "interp_missing_data"], [169, 3, 1, "", "is_allclose"], [169, 2, 1, "", "is_fixed_rad_max"], [169, 2, 1, "", "is_pointlike"], [169, 3, 1, "", "normalize"], [169, 3, 1, "", "pad"], [169, 3, 1, "", "plot_rad_max_vs_energy"], [169, 2, 1, "", "quantity"], [169, 3, 1, "", "read"], [169, 2, 1, "", "required_axes"], [169, 3, 1, "", "slice_by_idx"], [169, 2, 1, "", "tag"], [169, 3, 1, "", "to_hdulist"], [169, 3, 1, "", "to_table"], [169, 3, 1, "", "to_table_hdu"], [169, 3, 1, "", "to_unit"], [169, 2, 1, "", "unit"], [169, 3, 1, "", "write"]], "gammapy.irf.RecoPSFMap": [[170, 3, 1, "", "containment"], [170, 3, 1, "", "containment_radius"], [170, 3, 1, "", "containment_radius_map"], [170, 3, 1, "", "copy"], [170, 3, 1, "", "cutout"], [170, 3, 1, "", "downsample"], [170, 2, 1, "", "energy_name"], [170, 3, 1, "", "from_gauss"], [170, 3, 1, "", "from_geom"], [170, 3, 1, "", "from_hdulist"], [170, 3, 1, "", "get_psf_kernel"], [170, 2, 1, "", "has_single_spatial_bin"], [170, 2, 1, "", "mask_safe_image"], [170, 3, 1, "", "normalize"], [170, 3, 1, "", "peek"], [170, 3, 1, "", "plot_containment_radius_vs_energy"], [170, 3, 1, "", "plot_psf_vs_rad"], [170, 2, 1, "", "psf_map"], [170, 3, 1, "", "read"], [170, 2, 1, "", "required_axes"], [170, 3, 1, "", "sample_coord"], [170, 3, 1, "", "slice_by_idx"], [170, 3, 1, "", "stack"], [170, 2, 1, "", "tag"], [170, 3, 1, "", "to_hdulist"], [170, 3, 1, "", "to_image"], [170, 3, 1, "", "to_region_nd_map"], [170, 3, 1, "", "write"]], "gammapy.makers": [[172, 1, 1, "", "AdaptiveRingBackgroundMaker"], [173, 1, 1, "", "DatasetsMaker"], [174, 1, 1, "", "FoVBackgroundMaker"], [175, 5, 1, "", "MAKER_REGISTRY"], [176, 1, 1, "", "Maker"], [177, 1, 1, "", "MapDatasetMaker"], [178, 1, 1, "", "PhaseBackgroundMaker"], [179, 1, 1, "", "ReflectedRegionsBackgroundMaker"], [180, 1, 1, "", "ReflectedRegionsFinder"], [181, 1, 1, "", "RegionsFinder"], [182, 1, 1, "", "RingBackgroundMaker"], [183, 1, 1, "", "SafeMaskMaker"], [184, 1, 1, "", "SpectrumDatasetMaker"], [185, 1, 1, "", "WobbleRegionsFinder"], [8, 0, 0, "-", "utils"]], "gammapy.makers.AdaptiveRingBackgroundMaker": [[172, 3, 1, "", "kernels"], [172, 3, 1, "", "make_cubes"], [172, 3, 1, "", "run"], [172, 2, 1, "", "tag"]], "gammapy.makers.DatasetsMaker": [[173, 3, 1, "", "callback"], [173, 3, 1, "", "error_callback"], [173, 3, 1, "", "make_dataset"], [173, 2, 1, "", "n_jobs"], [173, 2, 1, "", "offset_max"], [173, 2, 1, "", "parallel_backend"], [173, 3, 1, "", "run"], [173, 2, 1, "", "safe_mask_maker"], [173, 2, 1, "", "tag"]], "gammapy.makers.FoVBackgroundMaker": [[174, 2, 1, "", "available_methods"], [174, 3, 1, "", "make_background_fit"], [174, 3, 1, "", "make_background_scale"], [174, 3, 1, "", "make_default_fov_background_model"], [174, 3, 1, "", "make_exclusion_mask"], [174, 2, 1, "", "method"], [174, 3, 1, "", "run"], [174, 2, 1, "", "tag"]], "gammapy.makers.Maker": [[176, 3, 1, "", "run"], [176, 2, 1, "", "tag"]], "gammapy.makers.MapDatasetMaker": [[177, 2, 1, "", "available_selection"], [177, 3, 1, "", "make_background"], [177, 3, 1, "", "make_counts"], [177, 3, 1, "", "make_edisp"], [177, 3, 1, "", "make_edisp_kernel"], [177, 3, 1, "", "make_exposure"], [177, 3, 1, "", "make_exposure_irf"], [177, 3, 1, "", "make_meta_table"], [177, 3, 1, "", "make_psf"], [177, 3, 1, "", "run"], [177, 2, 1, "", "tag"]], "gammapy.makers.PhaseBackgroundMaker": [[178, 3, 1, "", "make_counts"], [178, 3, 1, "", "make_counts_off"], [178, 3, 1, "", "run"], [178, 2, 1, "", "tag"]], "gammapy.makers.ReflectedRegionsBackgroundMaker": [[179, 3, 1, "", "make_counts_off"], [179, 3, 1, "", "run"], [179, 2, 1, "", "tag"]], "gammapy.makers.ReflectedRegionsFinder": [[180, 3, 1, "", "run"]], "gammapy.makers.RegionsFinder": [[181, 3, 1, "", "run"]], "gammapy.makers.RingBackgroundMaker": [[182, 3, 1, "", "kernel"], [182, 3, 1, "", "make_maps_off"], [182, 3, 1, "", "run"], [182, 2, 1, "", "tag"]], "gammapy.makers.SafeMaskMaker": [[183, 2, 1, "", "available_methods"], [183, 3, 1, "", "make_mask_bkg_invalid"], [183, 3, 1, "", "make_mask_energy_aeff_default"], [183, 3, 1, "", "make_mask_energy_aeff_max"], [183, 3, 1, "", "make_mask_energy_bkg_peak"], [183, 3, 1, "", "make_mask_energy_edisp_bias"], [183, 3, 1, "", "make_mask_offset_max"], [183, 3, 1, "", "run"], [183, 2, 1, "", "tag"]], "gammapy.makers.SpectrumDatasetMaker": [[184, 2, 1, "", "available_selection"], [184, 3, 1, "", "make_background"], [184, 3, 1, "", "make_counts"], [184, 3, 1, "", "make_edisp"], [184, 3, 1, "", "make_edisp_kernel"], [184, 3, 1, "", "make_exposure"], [184, 3, 1, "", "make_exposure_irf"], [184, 3, 1, "", "make_meta_table"], [184, 3, 1, "", "make_psf"], [184, 3, 1, "", "run"], [184, 2, 1, "", "tag"]], "gammapy.makers.WobbleRegionsFinder": [[185, 3, 1, "", "run"]], "gammapy.makers.utils": [[186, 4, 1, "", "make_counts_rad_max"], [187, 4, 1, "", "make_edisp_kernel_map"], [188, 4, 1, "", "make_edisp_map"], [189, 4, 1, "", "make_effective_livetime_map"], [190, 4, 1, "", "make_map_background_irf"], [191, 4, 1, "", "make_map_exposure_true_energy"], [192, 4, 1, "", "make_observation_time_map"], [193, 4, 1, "", "make_psf_map"], [194, 4, 1, "", "make_theta_squared_table"]], "gammapy.maps": [[195, 1, 1, "", "Geom"], [196, 1, 1, "", "HpxGeom"], [197, 1, 1, "", "HpxMap"], [198, 1, 1, "", "HpxNDMap"], [199, 1, 1, "", "LabelMapAxis"], [200, 1, 1, "", "Map"], [201, 1, 1, "", "MapAxes"], [202, 1, 1, "", "MapAxis"], [203, 1, 1, "", "MapCoord"], [204, 1, 1, "", "Maps"], [205, 1, 1, "", "RegionGeom"], [206, 1, 1, "", "RegionNDMap"], [207, 1, 1, "", "TimeMapAxis"], [208, 1, 1, "", "WcsGeom"], [209, 1, 1, "", "WcsMap"], [210, 1, 1, "", "WcsNDMap"], [211, 4, 1, "", "containment_radius"], [212, 4, 1, "", "containment_region"]], "gammapy.maps.Geom": [[195, 2, 1, "", "as_energy_true"], [195, 2, 1, "", "center_coord"], [195, 2, 1, "", "center_pix"], [195, 2, 1, "", "center_skydir"], [195, 3, 1, "", "contains"], [195, 3, 1, "", "contains_pix"], [195, 3, 1, "", "coord_to_idx"], [195, 3, 1, "", "coord_to_pix"], [195, 3, 1, "", "copy"], [195, 3, 1, "", "create_mask"], [195, 3, 1, "", "crop"], [195, 3, 1, "", "data_nbytes"], [195, 2, 1, "", "data_shape"], [195, 3, 1, "", "downsample"], [195, 3, 1, "", "drop"], [195, 3, 1, "", "energy_mask"], [195, 3, 1, "", "from_hdulist"], [195, 3, 1, "", "get_coord"], [195, 3, 1, "", "get_idx"], [195, 2, 1, "", "has_energy_axis"], [195, 2, 1, "", "is_allsky"], [195, 2, 1, "", "is_flat"], [195, 2, 1, "", "is_image"], [195, 3, 1, "", "pad"], [195, 3, 1, "", "pix_to_coord"], [195, 3, 1, "", "pix_to_idx"], [195, 3, 1, "", "rename_axes"], [195, 3, 1, "", "replace_axis"], [195, 3, 1, "", "resample_axis"], [195, 3, 1, "", "slice_by_idx"], [195, 3, 1, "", "solid_angle"], [195, 3, 1, "", "squash"], [195, 3, 1, "", "to_bands_hdu"], [195, 3, 1, "", "to_cube"], [195, 3, 1, "", "to_image"], [195, 3, 1, "", "upsample"]], "gammapy.maps.HpxGeom": [[196, 2, 1, "", "as_energy_true"], [196, 2, 1, "", "axes"], [196, 2, 1, "", "axes_names"], [196, 2, 1, "", "center_coord"], [196, 2, 1, "", "center_pix"], [196, 2, 1, "", "center_skydir"], [196, 3, 1, "", "contains"], [196, 3, 1, "", "contains_pix"], [196, 3, 1, "", "coord_to_idx"], [196, 3, 1, "", "coord_to_pix"], [196, 3, 1, "", "copy"], [196, 3, 1, "", "create"], [196, 3, 1, "", "create_mask"], [196, 3, 1, "", "crop"], [196, 3, 1, "", "cutout"], [196, 3, 1, "", "data_nbytes"], [196, 2, 1, "", "data_shape"], [196, 2, 1, "", "data_shape_axes"], [196, 3, 1, "", "downsample"], [196, 3, 1, "", "drop"], [196, 3, 1, "", "energy_mask"], [196, 2, 1, "", "frame"], [196, 3, 1, "", "from_hdu"], [196, 3, 1, "", "from_hdulist"], [196, 3, 1, "", "from_header"], [196, 3, 1, "", "get_coord"], [196, 3, 1, "", "get_idx"], [196, 3, 1, "", "get_index_list"], [196, 3, 1, "", "global_to_local"], [196, 2, 1, "", "has_energy_axis"], [196, 3, 1, "", "interp_weights"], [196, 2, 1, "", "ipix"], [196, 3, 1, "", "is_aligned"], [196, 3, 1, "", "is_allclose"], [196, 2, 1, "", "is_allsky"], [196, 2, 1, "", "is_flat"], [196, 2, 1, "", "is_hpx"], [196, 2, 1, "", "is_image"], [196, 2, 1, "", "is_region"], [196, 2, 1, "", "is_regular"], [196, 3, 1, "", "local_to_global"], [196, 2, 1, "", "ndim"], [196, 2, 1, "", "nest"], [196, 2, 1, "", "npix"], [196, 2, 1, "", "npix_max"], [196, 2, 1, "", "nside"], [196, 2, 1, "", "order"], [196, 2, 1, "", "ordering"], [196, 3, 1, "", "pad"], [196, 3, 1, "", "pix_to_coord"], [196, 3, 1, "", "pix_to_idx"], [196, 2, 1, "", "pixel_scales"], [196, 2, 1, "", "projection"], [196, 2, 1, "", "region"], [196, 3, 1, "", "region_mask"], [196, 3, 1, "", "rename_axes"], [196, 3, 1, "", "replace_axis"], [196, 3, 1, "", "resample_axis"], [196, 3, 1, "", "separation"], [196, 2, 1, "", "shape_axes"], [196, 3, 1, "", "slice_by_idx"], [196, 3, 1, "", "solid_angle"], [196, 3, 1, "", "squash"], [196, 3, 1, "", "to_bands_hdu"], [196, 3, 1, "", "to_binsz"], [196, 3, 1, "", "to_cube"], [196, 3, 1, "", "to_header"], [196, 3, 1, "", "to_image"], [196, 3, 1, "", "to_nside"], [196, 3, 1, "", "to_swapped"], [196, 3, 1, "", "to_wcs_geom"], [196, 3, 1, "", "to_wcs_tiles"], [196, 3, 1, "", "upsample"], [196, 2, 1, "", "width"]], "gammapy.maps.HpxMap": [[197, 3, 1, "", "coadd"], [197, 3, 1, "", "copy"], [197, 3, 1, "", "create"], [197, 3, 1, "", "crop"], [197, 3, 1, "", "cumsum"], [197, 2, 1, "", "data"], [197, 3, 1, "", "dot"], [197, 3, 1, "", "downsample"], [197, 3, 1, "", "fill_by_coord"], [197, 3, 1, "", "fill_by_idx"], [197, 3, 1, "", "fill_by_pix"], [197, 3, 1, "", "fill_events"], [197, 3, 1, "", "from_geom"], [197, 3, 1, "", "from_hdulist"], [197, 3, 1, "", "from_stack"], [197, 2, 1, "", "geom"], [197, 3, 1, "", "get_by_coord"], [197, 3, 1, "", "get_by_idx"], [197, 3, 1, "", "get_by_pix"], [197, 3, 1, "", "get_image_by_coord"], [197, 3, 1, "", "get_image_by_idx"], [197, 3, 1, "", "get_image_by_pix"], [197, 3, 1, "", "get_spectrum"], [197, 3, 1, "", "integral"], [197, 3, 1, "", "interp_by_coord"], [197, 3, 1, "", "interp_by_pix"], [197, 3, 1, "", "interp_to_geom"], [197, 3, 1, "", "is_allclose"], [197, 2, 1, "", "is_mask"], [197, 3, 1, "", "iter_by_axis"], [197, 3, 1, "", "iter_by_image"], [197, 3, 1, "", "iter_by_image_data"], [197, 3, 1, "", "iter_by_image_index"], [197, 3, 1, "", "mask_nearest_position"], [197, 2, 1, "", "meta"], [197, 3, 1, "", "normalize"], [197, 3, 1, "", "pad"], [197, 3, 1, "", "plot_grid"], [197, 3, 1, "", "plot_interactive"], [197, 2, 1, "", "quantity"], [197, 3, 1, "", "read"], [197, 3, 1, "", "reduce"], [197, 3, 1, "", "reduce_over_axes"], [197, 3, 1, "", "rename_axes"], [197, 3, 1, "", "reorder_axes"], [197, 3, 1, "", "reproject_by_image"], [197, 3, 1, "", "reproject_to_geom"], [197, 3, 1, "", "resample"], [197, 3, 1, "", "resample_axis"], [197, 3, 1, "", "sample_coord"], [197, 3, 1, "", "set_by_coord"], [197, 3, 1, "", "set_by_idx"], [197, 3, 1, "", "set_by_pix"], [197, 3, 1, "", "slice_by_idx"], [197, 3, 1, "", "split_by_axis"], [197, 3, 1, "", "sum_over_axes"], [197, 2, 1, "", "tag"], [197, 3, 1, "", "to_cube"], [197, 3, 1, "", "to_hdu"], [197, 3, 1, "", "to_hdulist"], [197, 3, 1, "", "to_swapped"], [197, 3, 1, "", "to_unit"], [197, 3, 1, "", "to_wcs"], [197, 2, 1, "", "unit"], [197, 3, 1, "", "upsample"], [197, 3, 1, "", "write"]], "gammapy.maps.HpxNDMap": [[198, 3, 1, "", "coadd"], [198, 3, 1, "", "convolve"], [198, 3, 1, "", "convolve_full"], [198, 3, 1, "", "convolve_wcs"], [198, 3, 1, "", "copy"], [198, 3, 1, "", "create"], [198, 3, 1, "", "crop"], [198, 3, 1, "", "cumsum"], [198, 3, 1, "", "cutout"], [198, 2, 1, "", "data"], [198, 3, 1, "", "dot"], [198, 3, 1, "", "downsample"], [198, 3, 1, "", "fill_by_coord"], [198, 3, 1, "", "fill_by_idx"], [198, 3, 1, "", "fill_by_pix"], [198, 3, 1, "", "fill_events"], [198, 3, 1, "", "from_geom"], [198, 3, 1, "", "from_hdu"], [198, 3, 1, "", "from_hdulist"], [198, 3, 1, "", "from_stack"], [198, 3, 1, "", "from_wcs_tiles"], [198, 2, 1, "", "geom"], [198, 3, 1, "", "get_by_coord"], [198, 3, 1, "", "get_by_idx"], [198, 3, 1, "", "get_by_pix"], [198, 3, 1, "", "get_image_by_coord"], [198, 3, 1, "", "get_image_by_idx"], [198, 3, 1, "", "get_image_by_pix"], [198, 3, 1, "", "get_spectrum"], [198, 3, 1, "", "integral"], [198, 3, 1, "", "interp_by_coord"], [198, 3, 1, "", "interp_by_pix"], [198, 3, 1, "", "interp_to_geom"], [198, 3, 1, "", "is_allclose"], [198, 2, 1, "", "is_mask"], [198, 3, 1, "", "iter_by_axis"], [198, 3, 1, "", "iter_by_image"], [198, 3, 1, "", "iter_by_image_data"], [198, 3, 1, "", "iter_by_image_index"], [198, 3, 1, "", "mask_nearest_position"], [198, 2, 1, "", "meta"], [198, 3, 1, "", "normalize"], [198, 3, 1, "", "pad"], [198, 3, 1, "", "plot"], [198, 3, 1, "", "plot_grid"], [198, 3, 1, "", "plot_interactive"], [198, 3, 1, "", "plot_mask"], [198, 2, 1, "", "quantity"], [198, 3, 1, "", "read"], [198, 3, 1, "", "reduce"], [198, 3, 1, "", "reduce_over_axes"], [198, 3, 1, "", "rename_axes"], [198, 3, 1, "", "reorder_axes"], [198, 3, 1, "", "reproject_by_image"], [198, 3, 1, "", "reproject_to_geom"], [198, 3, 1, "", "resample"], [198, 3, 1, "", "resample_axis"], [198, 3, 1, "", "sample_coord"], [198, 3, 1, "", "set_by_coord"], [198, 3, 1, "", "set_by_idx"], [198, 3, 1, "", "set_by_pix"], [198, 3, 1, "", "slice_by_idx"], [198, 3, 1, "", "smooth"], [198, 3, 1, "", "split_by_axis"], [198, 3, 1, "", "stack"], [198, 3, 1, "", "sum_over_axes"], [198, 2, 1, "", "tag"], [198, 3, 1, "", "to_cube"], [198, 3, 1, "", "to_hdu"], [198, 3, 1, "", "to_hdulist"], [198, 3, 1, "", "to_nside"], [198, 3, 1, "", "to_region_nd_map"], [198, 3, 1, "", "to_swapped"], [198, 3, 1, "", "to_unit"], [198, 3, 1, "", "to_wcs"], [198, 3, 1, "", "to_wcs_tiles"], [198, 2, 1, "", "unit"], [198, 3, 1, "", "upsample"], [198, 3, 1, "", "write"]], "gammapy.maps.LabelMapAxis": [[199, 2, 1, "", "as_plot_center"], [199, 2, 1, "", "as_plot_edges"], [199, 2, 1, "", "as_plot_labels"], [199, 2, 1, "", "as_plot_xerr"], [199, 3, 1, "", "assert_name"], [199, 2, 1, "", "bin_width"], [199, 2, 1, "", "center"], [199, 3, 1, "", "concatenate"], [199, 3, 1, "", "coord_to_idx"], [199, 3, 1, "", "coord_to_pix"], [199, 3, 1, "", "copy"], [199, 3, 1, "", "downsample"], [199, 2, 1, "", "edges"], [199, 2, 1, "", "edges_max"], [199, 2, 1, "", "edges_min"], [199, 3, 1, "", "format_plot_xaxis"], [199, 3, 1, "", "from_stack"], [199, 3, 1, "", "from_table"], [199, 3, 1, "", "is_allclose"], [199, 2, 1, "", "name"], [199, 2, 1, "", "nbin"], [199, 2, 1, "", "node_type"], [199, 3, 1, "", "pad"], [199, 3, 1, "", "pix_to_coord"], [199, 3, 1, "", "pix_to_idx"], [199, 3, 1, "", "resample"], [199, 3, 1, "", "slice"], [199, 3, 1, "", "squash"], [199, 3, 1, "", "to_header"], [199, 2, 1, "", "unit"], [199, 3, 1, "", "upsample"]], "gammapy.maps.Map": [[200, 3, 1, "", "coadd"], [200, 3, 1, "", "copy"], [200, 3, 1, "", "create"], [200, 3, 1, "", "crop"], [200, 3, 1, "", "cumsum"], [200, 2, 1, "", "data"], [200, 3, 1, "", "dot"], [200, 3, 1, "", "downsample"], [200, 3, 1, "", "fill_by_coord"], [200, 3, 1, "", "fill_by_idx"], [200, 3, 1, "", "fill_by_pix"], [200, 3, 1, "", "fill_events"], [200, 3, 1, "", "from_geom"], [200, 3, 1, "", "from_hdulist"], [200, 3, 1, "", "from_stack"], [200, 2, 1, "", "geom"], [200, 3, 1, "", "get_by_coord"], [200, 3, 1, "", "get_by_idx"], [200, 3, 1, "", "get_by_pix"], [200, 3, 1, "", "get_image_by_coord"], [200, 3, 1, "", "get_image_by_idx"], [200, 3, 1, "", "get_image_by_pix"], [200, 3, 1, "", "get_spectrum"], [200, 3, 1, "", "integral"], [200, 3, 1, "", "interp_by_coord"], [200, 3, 1, "", "interp_by_pix"], [200, 3, 1, "", "interp_to_geom"], [200, 3, 1, "", "is_allclose"], [200, 2, 1, "", "is_mask"], [200, 3, 1, "", "iter_by_axis"], [200, 3, 1, "", "iter_by_image"], [200, 3, 1, "", "iter_by_image_data"], [200, 3, 1, "", "iter_by_image_index"], [200, 3, 1, "", "mask_nearest_position"], [200, 2, 1, "", "meta"], [200, 3, 1, "", "normalize"], [200, 3, 1, "", "pad"], [200, 3, 1, "", "plot_grid"], [200, 3, 1, "", "plot_interactive"], [200, 2, 1, "", "quantity"], [200, 3, 1, "", "read"], [200, 3, 1, "", "reduce"], [200, 3, 1, "", "reduce_over_axes"], [200, 3, 1, "", "rename_axes"], [200, 3, 1, "", "reorder_axes"], [200, 3, 1, "", "reproject_by_image"], [200, 3, 1, "", "reproject_to_geom"], [200, 3, 1, "", "resample"], [200, 3, 1, "", "resample_axis"], [200, 3, 1, "", "sample_coord"], [200, 3, 1, "", "set_by_coord"], [200, 3, 1, "", "set_by_idx"], [200, 3, 1, "", "set_by_pix"], [200, 3, 1, "", "slice_by_idx"], [200, 3, 1, "", "split_by_axis"], [200, 3, 1, "", "sum_over_axes"], [200, 2, 1, "", "tag"], [200, 3, 1, "", "to_cube"], [200, 3, 1, "", "to_unit"], [200, 2, 1, "", "unit"], [200, 3, 1, "", "upsample"], [200, 3, 1, "", "write"]], "gammapy.maps.MapAxes": [[201, 3, 1, "", "assert_names"], [201, 3, 1, "", "bin_volume"], [201, 2, 1, "", "center_coord"], [201, 3, 1, "", "coord_to_idx"], [201, 3, 1, "", "coord_to_pix"], [201, 3, 1, "", "copy"], [201, 3, 1, "", "count"], [201, 3, 1, "", "downsample"], [201, 3, 1, "", "drop"], [201, 3, 1, "", "from_default"], [201, 3, 1, "", "from_table"], [201, 3, 1, "", "from_table_hdu"], [201, 3, 1, "", "get_coord"], [201, 3, 1, "", "index"], [201, 3, 1, "", "index_data"], [201, 3, 1, "", "is_allclose"], [201, 2, 1, "", "is_flat"], [201, 2, 1, "", "is_unidimensional"], [201, 2, 1, "", "iter_with_reshape"], [201, 2, 1, "", "names"], [201, 3, 1, "", "pad"], [201, 3, 1, "", "pix_to_coord"], [201, 3, 1, "", "pix_to_idx"], [201, 2, 1, "", "primary_axis"], [201, 3, 1, "", "rename_axes"], [201, 3, 1, "", "replace"], [201, 3, 1, "", "resample"], [201, 2, 1, "", "reverse"], [201, 2, 1, "", "shape"], [201, 3, 1, "", "slice_by_idx"], [201, 3, 1, "", "squash"], [201, 3, 1, "", "to_header"], [201, 3, 1, "", "to_table"], [201, 3, 1, "", "to_table_hdu"], [201, 3, 1, "", "upsample"]], "gammapy.maps.MapAxis": [[202, 2, 1, "", "as_plot_center"], [202, 2, 1, "", "as_plot_edges"], [202, 2, 1, "", "as_plot_labels"], [202, 2, 1, "", "as_plot_scale"], [202, 2, 1, "", "as_plot_xerr"], [202, 3, 1, "", "assert_name"], [202, 2, 1, "", "bin_width"], [202, 2, 1, "", "bounds"], [202, 2, 1, "", "center"], [202, 3, 1, "", "concatenate"], [202, 3, 1, "", "coord_to_idx"], [202, 3, 1, "", "coord_to_pix"], [202, 3, 1, "", "copy"], [202, 3, 1, "", "downsample"], [202, 2, 1, "", "edges"], [202, 2, 1, "", "edges_max"], [202, 2, 1, "", "edges_min"], [202, 3, 1, "", "format_plot_xaxis"], [202, 3, 1, "", "format_plot_yaxis"], [202, 3, 1, "", "from_bounds"], [202, 3, 1, "", "from_edges"], [202, 3, 1, "", "from_energy_bounds"], [202, 3, 1, "", "from_energy_edges"], [202, 3, 1, "", "from_nodes"], [202, 3, 1, "", "from_stack"], [202, 3, 1, "", "from_table"], [202, 3, 1, "", "from_table_hdu"], [202, 3, 1, "", "group_table"], [202, 2, 1, "", "interp"], [202, 3, 1, "", "is_aligned"], [202, 3, 1, "", "is_allclose"], [202, 2, 1, "", "is_energy_axis"], [202, 2, 1, "", "iter_by_edges"], [202, 2, 1, "", "name"], [202, 2, 1, "", "nbin"], [202, 2, 1, "", "nbin_per_decade"], [202, 2, 1, "", "node_type"], [202, 3, 1, "", "pad"], [202, 3, 1, "", "pix_to_coord"], [202, 3, 1, "", "pix_to_idx"], [202, 3, 1, "", "rename"], [202, 3, 1, "", "round"], [202, 3, 1, "", "slice"], [202, 3, 1, "", "squash"], [202, 3, 1, "", "to_header"], [202, 3, 1, "", "to_node_type"], [202, 3, 1, "", "to_table"], [202, 3, 1, "", "to_table_hdu"], [202, 2, 1, "", "unit"], [202, 3, 1, "", "upsample"], [202, 2, 1, "", "use_center_as_plot_labels"], [202, 3, 1, "", "wrap_coord"]], "gammapy.maps.MapCoord": [[203, 3, 1, "", "apply_mask"], [203, 2, 1, "", "axis_names"], [203, 2, 1, "", "broadcasted"], [203, 3, 1, "", "copy"], [203, 3, 1, "", "create"], [203, 2, 1, "", "flat"], [203, 2, 1, "", "frame"], [203, 2, 1, "", "lat"], [203, 2, 1, "", "lon"], [203, 2, 1, "", "match_by_name"], [203, 2, 1, "", "ndim"], [203, 2, 1, "", "phi"], [203, 2, 1, "", "shape"], [203, 2, 1, "", "size"], [203, 2, 1, "", "skycoord"], [203, 2, 1, "", "theta"], [203, 3, 1, "", "to_frame"]], "gammapy.maps.Maps": [[204, 3, 1, "", "clear"], [204, 3, 1, "", "from_geom"], [204, 3, 1, "", "from_hdulist"], [204, 2, 1, "", "geom"], [204, 3, 1, "", "get"], [204, 3, 1, "", "items"], [204, 3, 1, "", "keys"], [204, 3, 1, "", "pop"], [204, 3, 1, "", "popitem"], [204, 3, 1, "", "read"], [204, 3, 1, "", "setdefault"], [204, 3, 1, "", "to_hdulist"], [204, 3, 1, "", "update"], [204, 3, 1, "", "values"], [204, 3, 1, "", "write"]], "gammapy.maps.RegionGeom": [[205, 2, 1, "", "as_energy_true"], [205, 2, 1, "", "axes"], [205, 2, 1, "", "axes_names"], [205, 3, 1, "", "bin_volume"], [205, 2, 1, "", "binsz_wcs"], [205, 2, 1, "", "center_coord"], [205, 2, 1, "", "center_pix"], [205, 2, 1, "", "center_skydir"], [205, 3, 1, "", "contains"], [205, 3, 1, "", "contains_pix"], [205, 3, 1, "", "contains_wcs_pix"], [205, 3, 1, "", "coord_to_idx"], [205, 3, 1, "", "coord_to_pix"], [205, 3, 1, "", "copy"], [205, 3, 1, "", "create"], [205, 3, 1, "", "create_mask"], [205, 3, 1, "", "crop"], [205, 3, 1, "", "data_nbytes"], [205, 2, 1, "", "data_shape"], [205, 2, 1, "", "data_shape_axes"], [205, 3, 1, "", "downsample"], [205, 3, 1, "", "drop"], [205, 3, 1, "", "energy_mask"], [205, 2, 1, "", "frame"], [205, 3, 1, "", "from_hdulist"], [205, 3, 1, "", "from_regions"], [205, 3, 1, "", "get_coord"], [205, 3, 1, "", "get_idx"], [205, 3, 1, "", "get_wcs_coord_and_weights"], [205, 2, 1, "", "has_energy_axis"], [205, 2, 1, "", "is_all_point_sky_regions"], [205, 3, 1, "", "is_allclose"], [205, 2, 1, "", "is_allsky"], [205, 2, 1, "", "is_flat"], [205, 2, 1, "", "is_hpx"], [205, 2, 1, "", "is_image"], [205, 2, 1, "", "is_region"], [205, 2, 1, "", "is_regular"], [205, 2, 1, "", "npix"], [205, 3, 1, "", "pad"], [205, 3, 1, "", "pix_to_coord"], [205, 3, 1, "", "pix_to_idx"], [205, 3, 1, "", "plot_region"], [205, 2, 1, "", "projection"], [205, 2, 1, "", "region"], [205, 3, 1, "", "rename_axes"], [205, 3, 1, "", "replace_axis"], [205, 3, 1, "", "resample_axis"], [205, 3, 1, "", "separation"], [205, 3, 1, "", "slice_by_idx"], [205, 3, 1, "", "solid_angle"], [205, 3, 1, "", "squash"], [205, 3, 1, "", "to_bands_hdu"], [205, 3, 1, "", "to_binsz"], [205, 3, 1, "", "to_binsz_wcs"], [205, 3, 1, "", "to_cube"], [205, 3, 1, "", "to_hdulist"], [205, 3, 1, "", "to_image"], [205, 3, 1, "", "to_wcs_geom"], [205, 3, 1, "", "union"], [205, 3, 1, "", "upsample"], [205, 2, 1, "", "wcs"], [205, 2, 1, "", "width"]], "gammapy.maps.RegionNDMap": [[206, 3, 1, "", "coadd"], [206, 3, 1, "", "copy"], [206, 3, 1, "", "create"], [206, 3, 1, "", "crop"], [206, 3, 1, "", "cumsum"], [206, 3, 1, "", "cutout"], [206, 2, 1, "", "data"], [206, 3, 1, "", "dot"], [206, 3, 1, "", "downsample"], [206, 3, 1, "", "fill_by_coord"], [206, 3, 1, "", "fill_by_idx"], [206, 3, 1, "", "fill_by_pix"], [206, 3, 1, "", "fill_events"], [206, 3, 1, "", "from_geom"], [206, 3, 1, "", "from_hdulist"], [206, 3, 1, "", "from_stack"], [206, 3, 1, "", "from_table"], [206, 2, 1, "", "geom"], [206, 3, 1, "", "get_by_coord"], [206, 3, 1, "", "get_by_idx"], [206, 3, 1, "", "get_by_pix"], [206, 3, 1, "", "get_image_by_coord"], [206, 3, 1, "", "get_image_by_idx"], [206, 3, 1, "", "get_image_by_pix"], [206, 3, 1, "", "get_spectrum"], [206, 3, 1, "", "integral"], [206, 3, 1, "", "interp_by_coord"], [206, 3, 1, "", "interp_by_pix"], [206, 3, 1, "", "interp_to_geom"], [206, 3, 1, "", "is_allclose"], [206, 2, 1, "", "is_mask"], [206, 3, 1, "", "iter_by_axis"], [206, 3, 1, "", "iter_by_axis_data"], [206, 3, 1, "", "iter_by_image"], [206, 3, 1, "", "iter_by_image_data"], [206, 3, 1, "", "iter_by_image_index"], [206, 3, 1, "", "mask_nearest_position"], [206, 2, 1, "", "meta"], [206, 3, 1, "", "normalize"], [206, 3, 1, "", "pad"], [206, 3, 1, "", "plot"], [206, 3, 1, "", "plot_grid"], [206, 3, 1, "", "plot_hist"], [206, 3, 1, "", "plot_interactive"], [206, 3, 1, "", "plot_mask"], [206, 3, 1, "", "plot_region"], [206, 2, 1, "", "quantity"], [206, 3, 1, "", "read"], [206, 3, 1, "", "reduce"], [206, 3, 1, "", "reduce_over_axes"], [206, 3, 1, "", "rename_axes"], [206, 3, 1, "", "reorder_axes"], [206, 3, 1, "", "reproject_by_image"], [206, 3, 1, "", "reproject_to_geom"], [206, 3, 1, "", "resample"], [206, 3, 1, "", "resample_axis"], [206, 3, 1, "", "sample_coord"], [206, 3, 1, "", "set_by_coord"], [206, 3, 1, "", "set_by_idx"], [206, 3, 1, "", "set_by_pix"], [206, 3, 1, "", "slice_by_idx"], [206, 3, 1, "", "split_by_axis"], [206, 3, 1, "", "stack"], [206, 3, 1, "", "sum_over_axes"], [206, 2, 1, "", "tag"], [206, 3, 1, "", "to_cube"], [206, 3, 1, "", "to_hdulist"], [206, 3, 1, "", "to_region_nd_map"], [206, 3, 1, "", "to_table"], [206, 3, 1, "", "to_unit"], [206, 2, 1, "", "unit"], [206, 3, 1, "", "upsample"], [206, 3, 1, "", "write"]], "gammapy.maps.TimeMapAxis": [[207, 2, 1, "", "as_plot_center"], [207, 2, 1, "", "as_plot_edges"], [207, 2, 1, "", "as_plot_labels"], [207, 2, 1, "", "as_plot_xerr"], [207, 3, 1, "", "assert_name"], [207, 2, 1, "", "bin_width"], [207, 2, 1, "", "bounds"], [207, 2, 1, "", "center"], [207, 3, 1, "", "coord_to_idx"], [207, 3, 1, "", "coord_to_pix"], [207, 3, 1, "", "copy"], [207, 3, 1, "", "downsample"], [207, 2, 1, "", "edges"], [207, 2, 1, "", "edges_max"], [207, 2, 1, "", "edges_min"], [207, 3, 1, "", "format_plot_xaxis"], [207, 3, 1, "", "from_gti"], [207, 3, 1, "", "from_gti_bounds"], [207, 3, 1, "", "from_table"], [207, 3, 1, "", "from_time_bounds"], [207, 3, 1, "", "from_time_edges"], [207, 3, 1, "", "group_table"], [207, 2, 1, "", "interp"], [207, 3, 1, "", "is_aligned"], [207, 3, 1, "", "is_allclose"], [207, 2, 1, "", "is_contiguous"], [207, 2, 1, "", "iter_by_edges"], [207, 2, 1, "", "name"], [207, 2, 1, "", "nbin"], [207, 2, 1, "", "node_type"], [207, 3, 1, "", "pix_to_coord"], [207, 3, 1, "", "pix_to_idx"], [207, 2, 1, "", "reference_time"], [207, 3, 1, "", "slice"], [207, 3, 1, "", "squash"], [207, 2, 1, "", "time_bounds"], [207, 2, 1, "", "time_delta"], [207, 2, 1, "", "time_edges"], [207, 2, 1, "", "time_format"], [207, 2, 1, "", "time_max"], [207, 2, 1, "", "time_mid"], [207, 2, 1, "", "time_min"], [207, 3, 1, "", "to_contiguous"], [207, 3, 1, "", "to_gti"], [207, 3, 1, "", "to_header"], [207, 3, 1, "", "to_table"], [207, 2, 1, "", "unit"], [207, 3, 1, "", "upsample"]], "gammapy.maps.WcsGeom": [[208, 2, 1, "", "as_energy_true"], [208, 2, 1, "", "axes"], [208, 2, 1, "", "axes_names"], [208, 3, 1, "", "bin_volume"], [208, 3, 1, "", "binary_structure"], [208, 3, 1, "", "boundary_mask"], [208, 2, 1, "", "center_coord"], [208, 2, 1, "", "center_pix"], [208, 2, 1, "", "center_skydir"], [208, 3, 1, "", "contains"], [208, 3, 1, "", "contains_pix"], [208, 3, 1, "", "coord_to_idx"], [208, 3, 1, "", "coord_to_pix"], [208, 3, 1, "", "copy"], [208, 3, 1, "", "create"], [208, 3, 1, "", "create_mask"], [208, 3, 1, "", "crop"], [208, 3, 1, "", "cutout"], [208, 3, 1, "", "cutout_slices"], [208, 3, 1, "", "data_nbytes"], [208, 2, 1, "", "data_shape"], [208, 2, 1, "", "data_shape_axes"], [208, 2, 1, "", "data_shape_image"], [208, 3, 1, "", "downsample"], [208, 3, 1, "", "drop"], [208, 3, 1, "", "energy_mask"], [208, 2, 1, "", "footprint"], [208, 2, 1, "", "footprint_rectangle_sky_region"], [208, 2, 1, "", "frame"], [208, 3, 1, "", "from_aligned"], [208, 3, 1, "", "from_hdulist"], [208, 3, 1, "", "from_header"], [208, 3, 1, "", "get_coord"], [208, 3, 1, "", "get_idx"], [208, 3, 1, "", "get_pix"], [208, 2, 1, "", "has_energy_axis"], [208, 3, 1, "", "is_aligned"], [208, 3, 1, "", "is_allclose"], [208, 2, 1, "", "is_allsky"], [208, 2, 1, "", "is_flat"], [208, 2, 1, "", "is_hpx"], [208, 2, 1, "", "is_image"], [208, 2, 1, "", "is_region"], [208, 2, 1, "", "is_regular"], [208, 2, 1, "", "ndim"], [208, 2, 1, "", "npix"], [208, 3, 1, "", "pad"], [208, 3, 1, "", "pix_to_coord"], [208, 3, 1, "", "pix_to_idx"], [208, 2, 1, "", "pixel_area"], [208, 2, 1, "", "pixel_scales"], [208, 2, 1, "", "projection"], [208, 3, 1, "", "region_mask"], [208, 3, 1, "", "region_weights"], [208, 3, 1, "", "rename_axes"], [208, 3, 1, "", "replace_axis"], [208, 3, 1, "", "resample_axis"], [208, 3, 1, "", "separation"], [208, 2, 1, "", "shape_axes"], [208, 3, 1, "", "slice_by_idx"], [208, 3, 1, "", "solid_angle"], [208, 3, 1, "", "squash"], [208, 3, 1, "", "to_bands_hdu"], [208, 3, 1, "", "to_binsz"], [208, 3, 1, "", "to_cube"], [208, 3, 1, "", "to_even_npix"], [208, 3, 1, "", "to_header"], [208, 3, 1, "", "to_image"], [208, 3, 1, "", "to_odd_npix"], [208, 3, 1, "", "upsample"], [208, 2, 1, "", "wcs"], [208, 2, 1, "", "width"]], "gammapy.maps.WcsMap": [[209, 3, 1, "", "coadd"], [209, 3, 1, "", "copy"], [209, 3, 1, "", "create"], [209, 3, 1, "", "crop"], [209, 3, 1, "", "cumsum"], [209, 2, 1, "", "data"], [209, 3, 1, "", "dot"], [209, 3, 1, "", "downsample"], [209, 3, 1, "", "fill_by_coord"], [209, 3, 1, "", "fill_by_idx"], [209, 3, 1, "", "fill_by_pix"], [209, 3, 1, "", "fill_events"], [209, 3, 1, "", "from_geom"], [209, 3, 1, "", "from_hdulist"], [209, 3, 1, "", "from_stack"], [209, 2, 1, "", "geom"], [209, 3, 1, "", "get_by_coord"], [209, 3, 1, "", "get_by_idx"], [209, 3, 1, "", "get_by_pix"], [209, 3, 1, "", "get_image_by_coord"], [209, 3, 1, "", "get_image_by_idx"], [209, 3, 1, "", "get_image_by_pix"], [209, 3, 1, "", "get_spectrum"], [209, 3, 1, "", "integral"], [209, 3, 1, "", "interp_by_coord"], [209, 3, 1, "", "interp_by_pix"], [209, 3, 1, "", "interp_to_geom"], [209, 3, 1, "", "is_allclose"], [209, 2, 1, "", "is_mask"], [209, 3, 1, "", "iter_by_axis"], [209, 3, 1, "", "iter_by_image"], [209, 3, 1, "", "iter_by_image_data"], [209, 3, 1, "", "iter_by_image_index"], [209, 3, 1, "", "mask_nearest_position"], [209, 2, 1, "", "meta"], [209, 3, 1, "", "normalize"], [209, 3, 1, "", "pad"], [209, 3, 1, "", "plot_grid"], [209, 3, 1, "", "plot_interactive"], [209, 2, 1, "", "quantity"], [209, 3, 1, "", "read"], [209, 3, 1, "", "reduce"], [209, 3, 1, "", "reduce_over_axes"], [209, 3, 1, "", "rename_axes"], [209, 3, 1, "", "reorder_axes"], [209, 3, 1, "", "reproject_by_image"], [209, 3, 1, "", "reproject_to_geom"], [209, 3, 1, "", "resample"], [209, 3, 1, "", "resample_axis"], [209, 3, 1, "", "sample_coord"], [209, 3, 1, "", "set_by_coord"], [209, 3, 1, "", "set_by_idx"], [209, 3, 1, "", "set_by_pix"], [209, 3, 1, "", "slice_by_idx"], [209, 3, 1, "", "split_by_axis"], [209, 3, 1, "", "sum_over_axes"], [209, 2, 1, "", "tag"], [209, 3, 1, "", "to_cube"], [209, 3, 1, "", "to_hdu"], [209, 3, 1, "", "to_hdulist"], [209, 3, 1, "", "to_unit"], [209, 2, 1, "", "unit"], [209, 3, 1, "", "upsample"], [209, 3, 1, "", "write"]], "gammapy.maps.WcsNDMap": [[210, 3, 1, "", "binary_dilate"], [210, 3, 1, "", "binary_erode"], [210, 3, 1, "", "coadd"], [210, 3, 1, "", "convolve"], [210, 3, 1, "", "copy"], [210, 3, 1, "", "create"], [210, 3, 1, "", "crop"], [210, 3, 1, "", "cumsum"], [210, 3, 1, "", "cutout"], [210, 3, 1, "", "cutout_and_mask_region"], [210, 2, 1, "", "data"], [210, 3, 1, "", "dot"], [210, 3, 1, "", "downsample"], [210, 3, 1, "", "fill_by_coord"], [210, 3, 1, "", "fill_by_idx"], [210, 3, 1, "", "fill_by_pix"], [210, 3, 1, "", "fill_events"], [210, 3, 1, "", "from_geom"], [210, 3, 1, "", "from_hdu"], [210, 3, 1, "", "from_hdulist"], [210, 3, 1, "", "from_stack"], [210, 2, 1, "", "geom"], [210, 3, 1, "", "get_by_coord"], [210, 3, 1, "", "get_by_idx"], [210, 3, 1, "", "get_by_pix"], [210, 3, 1, "", "get_image_by_coord"], [210, 3, 1, "", "get_image_by_idx"], [210, 3, 1, "", "get_image_by_pix"], [210, 3, 1, "", "get_spectrum"], [210, 3, 1, "", "integral"], [210, 3, 1, "", "interp_by_coord"], [210, 3, 1, "", "interp_by_pix"], [210, 3, 1, "", "interp_to_geom"], [210, 3, 1, "", "is_allclose"], [210, 2, 1, "", "is_mask"], [210, 3, 1, "", "iter_by_axis"], [210, 3, 1, "", "iter_by_image"], [210, 3, 1, "", "iter_by_image_data"], [210, 3, 1, "", "iter_by_image_index"], [210, 3, 1, "", "mask_contains_region"], [210, 3, 1, "", "mask_nearest_position"], [210, 2, 1, "", "meta"], [210, 3, 1, "", "normalize"], [210, 3, 1, "", "pad"], [210, 3, 1, "", "plot"], [210, 3, 1, "", "plot_grid"], [210, 3, 1, "", "plot_interactive"], [210, 3, 1, "", "plot_mask"], [210, 2, 1, "", "quantity"], [210, 3, 1, "", "read"], [210, 3, 1, "", "reduce"], [210, 3, 1, "", "reduce_over_axes"], [210, 3, 1, "", "rename_axes"], [210, 3, 1, "", "reorder_axes"], [210, 3, 1, "", "reproject_by_image"], [210, 3, 1, "", "reproject_to_geom"], [210, 3, 1, "", "resample"], [210, 3, 1, "", "resample_axis"], [210, 3, 1, "", "sample_coord"], [210, 3, 1, "", "set_by_coord"], [210, 3, 1, "", "set_by_idx"], [210, 3, 1, "", "set_by_pix"], [210, 3, 1, "", "slice_by_idx"], [210, 3, 1, "", "smooth"], [210, 3, 1, "", "split_by_axis"], [210, 3, 1, "", "stack"], [210, 3, 1, "", "sum_over_axes"], [210, 2, 1, "", "tag"], [210, 3, 1, "", "to_cube"], [210, 3, 1, "", "to_hdu"], [210, 3, 1, "", "to_hdulist"], [210, 3, 1, "", "to_region_nd_map"], [210, 3, 1, "", "to_region_nd_map_histogram"], [210, 3, 1, "", "to_unit"], [210, 2, 1, "", "unit"], [210, 3, 1, "", "upsample"], [210, 3, 1, "", "write"]], "gammapy.modeling": [[213, 1, 1, "", "Covariance"], [214, 1, 1, "", "CovarianceResult"], [215, 1, 1, "", "Fit"], [216, 1, 1, "", "FitResult"], [217, 1, 1, "", "OptimizeResult"], [218, 1, 1, "", "Parameter"], [219, 1, 1, "", "Parameters"], [220, 1, 1, "", "PriorParameter"], [221, 1, 1, "", "PriorParameters"], [222, 1, 1, "", "Sampler"], [223, 1, 1, "", "SamplerResult"], [10, 0, 0, "-", "models"], [293, 4, 1, "", "select_nested_models"], [294, 4, 1, "", "stat_profile_ul_scipy"]], "gammapy.modeling.Covariance": [[213, 2, 1, "", "correlation"], [213, 2, 1, "", "data"], [213, 3, 1, "", "from_factor_matrix"], [213, 3, 1, "", "from_stack"], [213, 3, 1, "", "get_subcovariance"], [213, 3, 1, "", "plot_correlation"], [213, 2, 1, "", "scipy_mvn"], [213, 3, 1, "", "set_subcovariance"], [213, 2, 1, "", "shape"]], "gammapy.modeling.CovarianceResult": [[214, 2, 1, "", "backend"], [214, 2, 1, "", "matrix"], [214, 2, 1, "", "message"], [214, 2, 1, "", "method"], [214, 2, 1, "", "success"], [214, 3, 1, "", "to_dict"]], "gammapy.modeling.Fit": [[215, 3, 1, "", "confidence"], [215, 3, 1, "", "covariance"], [215, 3, 1, "", "optimize"], [215, 3, 1, "", "run"], [215, 3, 1, "", "stat_contour"], [215, 3, 1, "", "stat_profile"], [215, 3, 1, "", "stat_surface"]], "gammapy.modeling.FitResult": [[216, 2, 1, "", "backend"], [216, 2, 1, "", "covariance_result"], [216, 2, 1, "", "message"], [216, 2, 1, "", "method"], [216, 2, 1, "", "minuit"], [216, 2, 1, "", "models"], [216, 2, 1, "", "nfev"], [216, 2, 1, "", "optimize_result"], [216, 2, 1, "", "parameters"], [216, 2, 1, "", "success"], [216, 2, 1, "", "total_stat"], [216, 2, 1, "", "trace"], [216, 3, 1, "", "write"]], "gammapy.modeling.OptimizeResult": [[217, 2, 1, "", "backend"], [217, 2, 1, "", "message"], [217, 2, 1, "", "method"], [217, 2, 1, "", "minuit"], [217, 2, 1, "", "models"], [217, 2, 1, "", "nfev"], [217, 2, 1, "", "parameters"], [217, 2, 1, "", "success"], [217, 3, 1, "", "to_dict"], [217, 2, 1, "", "total_stat"], [217, 2, 1, "", "trace"]], "gammapy.modeling.Parameter": [[218, 3, 1, "", "autoscale"], [218, 3, 1, "", "check_limits"], [218, 2, 1, "", "conf_max"], [218, 2, 1, "", "conf_min"], [218, 3, 1, "", "copy"], [218, 2, 1, "", "error"], [218, 2, 1, "", "factor"], [218, 2, 1, "", "factor_max"], [218, 2, 1, "", "factor_min"], [218, 2, 1, "", "frozen"], [218, 3, 1, "", "inverse_transform"], [218, 2, 1, "", "max"], [218, 2, 1, "", "min"], [218, 2, 1, "", "name"], [218, 2, 1, "", "prior"], [218, 3, 1, "", "prior_stat_sum"], [218, 2, 1, "", "quantity"], [218, 3, 1, "", "reset_autoscale"], [218, 2, 1, "", "scale"], [218, 2, 1, "", "scale_method"], [218, 2, 1, "", "scale_transform"], [218, 2, 1, "", "scan_max"], [218, 2, 1, "", "scan_min"], [218, 2, 1, "", "scan_n_sigma"], [218, 2, 1, "", "scan_values"], [218, 3, 1, "", "set_lim"], [218, 3, 1, "", "to_dict"], [218, 3, 1, "", "transform"], [218, 2, 1, "", "type"], [218, 2, 1, "", "unit"], [218, 3, 1, "", "update_from_dict"], [218, 3, 1, "", "update_scale"], [218, 2, 1, "", "value"]], "gammapy.modeling.Parameters": [[219, 3, 1, "", "autoscale"], [219, 3, 1, "", "check_limits"], [219, 3, 1, "", "copy"], [219, 3, 1, "", "count"], [219, 2, 1, "", "free_parameters"], [219, 2, 1, "", "free_unique_parameters"], [219, 3, 1, "", "freeze_all"], [219, 3, 1, "", "from_dict"], [219, 3, 1, "", "from_stack"], [219, 3, 1, "", "index"], [219, 2, 1, "", "max"], [219, 2, 1, "", "min"], [219, 2, 1, "", "names"], [219, 2, 1, "", "prior"], [219, 3, 1, "", "prior_stat_sum"], [219, 3, 1, "", "restore_status"], [219, 3, 1, "", "select"], [219, 3, 1, "", "set_parameter_factors"], [219, 3, 1, "", "to_dict"], [219, 3, 1, "", "to_table"], [219, 2, 1, "", "types"], [219, 3, 1, "", "unfreeze_all"], [219, 2, 1, "", "unique_parameters"], [219, 3, 1, "", "update_link_label"], [219, 2, 1, "", "value"]], "gammapy.modeling.PriorParameter": [[220, 3, 1, "", "autoscale"], [220, 3, 1, "", "check_limits"], [220, 2, 1, "", "conf_max"], [220, 2, 1, "", "conf_min"], [220, 3, 1, "", "copy"], [220, 2, 1, "", "error"], [220, 2, 1, "", "factor"], [220, 2, 1, "", "factor_max"], [220, 2, 1, "", "factor_min"], [220, 2, 1, "", "frozen"], [220, 3, 1, "", "inverse_transform"], [220, 2, 1, "", "max"], [220, 2, 1, "", "min"], [220, 2, 1, "", "name"], [220, 2, 1, "", "prior"], [220, 3, 1, "", "prior_stat_sum"], [220, 2, 1, "", "quantity"], [220, 3, 1, "", "reset_autoscale"], [220, 2, 1, "", "scale"], [220, 2, 1, "", "scale_method"], [220, 2, 1, "", "scale_transform"], [220, 2, 1, "", "scan_max"], [220, 2, 1, "", "scan_min"], [220, 2, 1, "", "scan_n_sigma"], [220, 2, 1, "", "scan_values"], [220, 3, 1, "", "set_lim"], [220, 3, 1, "", "to_dict"], [220, 3, 1, "", "transform"], [220, 2, 1, "", "type"], [220, 2, 1, "", "unit"], [220, 3, 1, "", "update_from_dict"], [220, 3, 1, "", "update_scale"], [220, 2, 1, "", "value"]], "gammapy.modeling.PriorParameters": [[221, 3, 1, "", "autoscale"], [221, 3, 1, "", "check_limits"], [221, 3, 1, "", "copy"], [221, 3, 1, "", "count"], [221, 2, 1, "", "free_parameters"], [221, 2, 1, "", "free_unique_parameters"], [221, 3, 1, "", "freeze_all"], [221, 3, 1, "", "from_dict"], [221, 3, 1, "", "from_stack"], [221, 3, 1, "", "index"], [221, 2, 1, "", "max"], [221, 2, 1, "", "min"], [221, 2, 1, "", "names"], [221, 2, 1, "", "prior"], [221, 3, 1, "", "prior_stat_sum"], [221, 3, 1, "", "restore_status"], [221, 3, 1, "", "select"], [221, 3, 1, "", "set_parameter_factors"], [221, 3, 1, "", "to_dict"], [221, 3, 1, "", "to_table"], [221, 2, 1, "", "types"], [221, 3, 1, "", "unfreeze_all"], [221, 2, 1, "", "unique_parameters"], [221, 3, 1, "", "update_link_label"], [221, 2, 1, "", "value"]], "gammapy.modeling.Sampler": [[222, 3, 1, "", "run"], [222, 3, 1, "", "sampler_ultranest"]], "gammapy.modeling.SamplerResult": [[223, 3, 1, "", "from_ultranest"]], "gammapy.modeling.models": [[224, 1, 1, "", "BrokenPowerLawSpectralModel"], [225, 1, 1, "", "CompoundSpectralModel"], [226, 1, 1, "", "ConstantFluxSpatialModel"], [227, 1, 1, "", "ConstantSpatialModel"], [228, 1, 1, "", "ConstantSpectralModel"], [229, 1, 1, "", "ConstantTemporalModel"], [230, 1, 1, "", "DatasetModels"], [231, 1, 1, "", "DiskSpatialModel"], [232, 1, 1, "", "EBLAbsorptionNormSpectralModel"], [233, 5, 1, "", "EBL_DATA_BUILTIN"], [234, 1, 1, "", "ExpCutoffPowerLaw3FGLSpectralModel"], [235, 1, 1, "", "ExpCutoffPowerLawNormSpectralModel"], [236, 1, 1, "", "ExpCutoffPowerLawSpectralModel"], [237, 1, 1, "", "ExpDecayTemporalModel"], [238, 1, 1, "", "FoVBackgroundModel"], [239, 1, 1, "", "GaussianPrior"], [240, 1, 1, "", "GaussianSpatialModel"], [241, 1, 1, "", "GaussianSpectralModel"], [242, 1, 1, "", "GaussianTemporalModel"], [243, 1, 1, "", "GeneralizedGaussianSpatialModel"], [244, 1, 1, "", "GeneralizedGaussianTemporalModel"], [245, 1, 1, "", "LightCurveTemplateTemporalModel"], [246, 1, 1, "", "LinearTemporalModel"], [247, 1, 1, "", "LogParabolaNormSpectralModel"], [248, 1, 1, "", "LogParabolaSpectralModel"], [249, 1, 1, "", "LogUniformPrior"], [250, 5, 1, "", "MODEL_REGISTRY"], [251, 1, 1, "", "MeyerCrabSpectralModel"], [252, 1, 1, "", "Model"], [253, 1, 1, "", "ModelBase"], [254, 1, 1, "", "Models"], [255, 1, 1, "", "NaimaSpectralModel"], [256, 1, 1, "", "PiecewiseNormSpatialModel"], [257, 1, 1, "", "PiecewiseNormSpectralModel"], [258, 1, 1, "", "PointSpatialModel"], [259, 1, 1, "", "PowerLaw2SpectralModel"], [260, 1, 1, "", "PowerLawNormSpectralModel"], [261, 1, 1, "", "PowerLawSpectralModel"], [262, 1, 1, "", "PowerLawTemporalModel"], [263, 1, 1, "", "Prior"], [264, 5, 1, "", "SPATIAL_MODEL_REGISTRY"], [265, 5, 1, "", "SPECTRAL_MODEL_REGISTRY"], [266, 1, 1, "", "ScaleSpectralModel"], [267, 1, 1, "", "Shell2SpatialModel"], [268, 1, 1, "", "ShellSpatialModel"], [269, 1, 1, "", "SineTemporalModel"], [270, 1, 1, "", "SkyModel"], [271, 1, 1, "", "SmoothBrokenPowerLawSpectralModel"], [272, 1, 1, "", "SpatialModel"], [273, 1, 1, "", "SpectralModel"], [274, 1, 1, "", "SuperExpCutoffPowerLaw3FGLSpectralModel"], [275, 1, 1, "", "SuperExpCutoffPowerLaw4FGLDR3SpectralModel"], [276, 1, 1, "", "SuperExpCutoffPowerLaw4FGLSpectralModel"], [277, 5, 1, "", "TEMPORAL_MODEL_REGISTRY"], [278, 1, 1, "", "TemplateNDSpatialModel"], [279, 1, 1, "", "TemplateNDSpectralModel"], [280, 1, 1, "", "TemplateNPredModel"], [281, 1, 1, "", "TemplatePhaseCurveTemporalModel"], [282, 1, 1, "", "TemplateSpatialModel"], [283, 1, 1, "", "TemplateSpectralModel"], [284, 1, 1, "", "TemporalModel"], [285, 1, 1, "", "UniformPrior"], [286, 4, 1, "", "create_cosmic_ray_spectral_model"], [287, 4, 1, "", "create_crab_spectral_model"], [288, 4, 1, "", "create_fermi_isotropic_diffuse_model"], [289, 4, 1, "", "integrate_spectrum"], [290, 4, 1, "", "read_hermes_cube"], [291, 4, 1, "", "scale_plot_flux"], [10, 0, 0, "-", "utils"]], "gammapy.modeling.models.BrokenPowerLawSpectralModel": [[224, 3, 1, "", "__call__"], [224, 2, 1, "", "amplitude"], [224, 3, 1, "", "copy"], [224, 2, 1, "", "covariance"], [224, 2, 1, "", "default_parameters"], [224, 2, 1, "", "ebreak"], [224, 3, 1, "", "energy_flux"], [224, 3, 1, "", "energy_flux_error"], [224, 3, 1, "", "evaluate"], [224, 3, 1, "", "evaluate_error"], [224, 3, 1, "", "freeze"], [224, 3, 1, "", "from_dict"], [224, 3, 1, "", "from_parameters"], [224, 2, 1, "", "frozen"], [224, 2, 1, "", "index1"], [224, 2, 1, "", "index2"], [224, 3, 1, "", "integral"], [224, 3, 1, "", "integral_error"], [224, 3, 1, "", "inverse"], [224, 3, 1, "", "inverse_all"], [224, 2, 1, "", "is_norm_spectral_model"], [224, 2, 1, "", "parameters"], [224, 2, 1, "", "parameters_unique_names"], [224, 2, 1, "", "pivot_energy"], [224, 3, 1, "", "plot"], [224, 3, 1, "", "plot_error"], [224, 3, 1, "", "reassign"], [224, 3, 1, "", "reference_fluxes"], [224, 3, 1, "", "spectral_index"], [224, 3, 1, "", "spectral_index_error"], [224, 2, 1, "", "tag"], [224, 3, 1, "", "to_dict"], [224, 2, 1, "", "type"], [224, 3, 1, "", "unfreeze"]], "gammapy.modeling.models.CompoundSpectralModel": [[225, 3, 1, "", "__call__"], [225, 3, 1, "", "copy"], [225, 2, 1, "", "covariance"], [225, 2, 1, "", "default_parameters"], [225, 3, 1, "", "energy_flux"], [225, 3, 1, "", "energy_flux_error"], [225, 3, 1, "", "evaluate"], [225, 3, 1, "", "evaluate_error"], [225, 3, 1, "", "freeze"], [225, 3, 1, "", "from_dict"], [225, 3, 1, "", "from_parameters"], [225, 2, 1, "", "frozen"], [225, 3, 1, "", "integral"], [225, 3, 1, "", "integral_error"], [225, 3, 1, "", "inverse"], [225, 3, 1, "", "inverse_all"], [225, 2, 1, "", "is_norm_spectral_model"], [225, 2, 1, "", "parameters"], [225, 2, 1, "", "parameters_unique_names"], [225, 2, 1, "", "pivot_energy"], [225, 3, 1, "", "plot"], [225, 3, 1, "", "plot_error"], [225, 3, 1, "", "reassign"], [225, 3, 1, "", "reference_fluxes"], [225, 3, 1, "", "spectral_index"], [225, 3, 1, "", "spectral_index_error"], [225, 2, 1, "", "tag"], [225, 3, 1, "", "to_dict"], [225, 2, 1, "", "type"], [225, 3, 1, "", "unfreeze"]], "gammapy.modeling.models.ConstantFluxSpatialModel": [[226, 3, 1, "", "__call__"], [226, 3, 1, "", "copy"], [226, 2, 1, "", "covariance"], [226, 2, 1, "", "default_parameters"], [226, 3, 1, "", "evaluate"], [226, 3, 1, "", "evaluate_geom"], [226, 2, 1, "", "evaluation_bin_size_min"], [226, 2, 1, "", "evaluation_radius"], [226, 2, 1, "", "evaluation_region"], [226, 2, 1, "", "frame"], [226, 3, 1, "", "freeze"], [226, 3, 1, "", "from_dict"], [226, 3, 1, "", "from_parameters"], [226, 3, 1, "", "from_position"], [226, 2, 1, "", "frozen"], [226, 3, 1, "", "integrate_geom"], [226, 2, 1, "", "is_energy_dependent"], [226, 2, 1, "", "parameters"], [226, 2, 1, "", "parameters_unique_names"], [226, 2, 1, "", "phi_0"], [226, 3, 1, "", "plot"], [226, 3, 1, "", "plot_error"], [226, 3, 1, "", "plot_grid"], [226, 3, 1, "", "plot_interactive"], [226, 3, 1, "", "plot_position_error"], [226, 2, 1, "", "position"], [226, 2, 1, "", "position_error"], [226, 2, 1, "", "position_lonlat"], [226, 3, 1, "", "reassign"], [226, 2, 1, "", "tag"], [226, 3, 1, "", "to_dict"], [226, 3, 1, "", "to_region"], [226, 2, 1, "", "type"], [226, 3, 1, "", "unfreeze"]], "gammapy.modeling.models.ConstantSpatialModel": [[227, 3, 1, "", "__call__"], [227, 3, 1, "", "copy"], [227, 2, 1, "", "covariance"], [227, 2, 1, "", "default_parameters"], [227, 3, 1, "", "evaluate"], [227, 3, 1, "", "evaluate_geom"], [227, 2, 1, "", "evaluation_bin_size_min"], [227, 2, 1, "", "evaluation_radius"], [227, 2, 1, "", "evaluation_region"], [227, 2, 1, "", "frame"], [227, 3, 1, "", "freeze"], [227, 3, 1, "", "from_dict"], [227, 3, 1, "", "from_parameters"], [227, 3, 1, "", "from_position"], [227, 2, 1, "", "frozen"], [227, 3, 1, "", "integrate_geom"], [227, 2, 1, "", "is_energy_dependent"], [227, 2, 1, "", "parameters"], [227, 2, 1, "", "parameters_unique_names"], [227, 2, 1, "", "phi_0"], [227, 3, 1, "", "plot"], [227, 3, 1, "", "plot_error"], [227, 3, 1, "", "plot_grid"], [227, 3, 1, "", "plot_interactive"], [227, 3, 1, "", "plot_position_error"], [227, 2, 1, "", "position"], [227, 2, 1, "", "position_error"], [227, 2, 1, "", "position_lonlat"], [227, 3, 1, "", "reassign"], [227, 2, 1, "", "tag"], [227, 3, 1, "", "to_dict"], [227, 3, 1, "", "to_region"], [227, 2, 1, "", "type"], [227, 3, 1, "", "unfreeze"], [227, 2, 1, "", "value"]], "gammapy.modeling.models.ConstantSpectralModel": [[228, 3, 1, "", "__call__"], [228, 2, 1, "", "const"], [228, 3, 1, "", "copy"], [228, 2, 1, "", "covariance"], [228, 2, 1, "", "default_parameters"], [228, 3, 1, "", "energy_flux"], [228, 3, 1, "", "energy_flux_error"], [228, 3, 1, "", "evaluate"], [228, 3, 1, "", "evaluate_error"], [228, 3, 1, "", "freeze"], [228, 3, 1, "", "from_dict"], [228, 3, 1, "", "from_parameters"], [228, 2, 1, "", "frozen"], [228, 3, 1, "", "integral"], [228, 3, 1, "", "integral_error"], [228, 3, 1, "", "inverse"], [228, 3, 1, "", "inverse_all"], [228, 2, 1, "", "is_norm_spectral_model"], [228, 2, 1, "", "parameters"], [228, 2, 1, "", "parameters_unique_names"], [228, 2, 1, "", "pivot_energy"], [228, 3, 1, "", "plot"], [228, 3, 1, "", "plot_error"], [228, 3, 1, "", "reassign"], [228, 3, 1, "", "reference_fluxes"], [228, 3, 1, "", "spectral_index"], [228, 3, 1, "", "spectral_index_error"], [228, 2, 1, "", "tag"], [228, 3, 1, "", "to_dict"], [228, 2, 1, "", "type"], [228, 3, 1, "", "unfreeze"]], "gammapy.modeling.models.ConstantTemporalModel": [[229, 3, 1, "", "__call__"], [229, 3, 1, "", "copy"], [229, 2, 1, "", "covariance"], [229, 2, 1, "", "default_parameters"], [229, 3, 1, "", "evaluate"], [229, 3, 1, "", "freeze"], [229, 3, 1, "", "from_dict"], [229, 3, 1, "", "from_parameters"], [229, 2, 1, "", "frozen"], [229, 3, 1, "", "integral"], [229, 2, 1, "", "is_energy_dependent"], [229, 2, 1, "", "parameters"], [229, 2, 1, "", "parameters_unique_names"], [229, 3, 1, "", "plot"], [229, 3, 1, "", "reassign"], [229, 2, 1, "", "reference_time"], [229, 3, 1, "", "sample_time"], [229, 2, 1, "", "tag"], [229, 3, 1, "", "time_sum"], [229, 3, 1, "", "to_dict"], [229, 2, 1, "", "type"], [229, 3, 1, "", "unfreeze"]], "gammapy.modeling.models.DatasetModels": [[230, 2, 1, "", "background_models"], [230, 3, 1, "", "copy"], [230, 3, 1, "", "count"], [230, 2, 1, "", "covariance"], [230, 3, 1, "", "freeze"], [230, 3, 1, "", "from_dict"], [230, 3, 1, "", "from_yaml"], [230, 2, 1, "", "frozen"], [230, 3, 1, "", "index"], [230, 2, 1, "", "names"], [230, 2, 1, "", "parameters"], [230, 2, 1, "", "parameters_unique_names"], [230, 3, 1, "", "plot_positions"], [230, 3, 1, "", "plot_regions"], [230, 2, 1, "", "positions"], [230, 3, 1, "", "read"], [230, 3, 1, "", "read_covariance"], [230, 3, 1, "", "reassign"], [230, 3, 1, "", "restore_status"], [230, 3, 1, "", "select"], [230, 3, 1, "", "select_from_geom"], [230, 3, 1, "", "select_mask"], [230, 3, 1, "", "select_region"], [230, 3, 1, "", "selection_mask"], [230, 3, 1, "", "set_parameters_bounds"], [230, 3, 1, "", "to_dict"], [230, 3, 1, "", "to_parameters_table"], [230, 3, 1, "", "to_regions"], [230, 3, 1, "", "to_template_sky_model"], [230, 3, 1, "", "to_template_spectral_model"], [230, 3, 1, "", "to_yaml"], [230, 3, 1, "", "unfreeze"], [230, 3, 1, "", "update_link_label"], [230, 3, 1, "", "update_parameters_from_table"], [230, 2, 1, "", "wcs_geom"], [230, 3, 1, "", "write"], [230, 3, 1, "", "write_covariance"]], "gammapy.modeling.models.DiskSpatialModel": [[231, 3, 1, "", "__call__"], [231, 3, 1, "", "copy"], [231, 2, 1, "", "covariance"], [231, 2, 1, "", "default_parameters"], [231, 2, 1, "", "e"], [231, 2, 1, "", "edge_width"], [231, 3, 1, "", "evaluate"], [231, 3, 1, "", "evaluate_geom"], [231, 2, 1, "", "evaluation_bin_size_min"], [231, 2, 1, "", "evaluation_radius"], [231, 2, 1, "", "evaluation_region"], [231, 3, 1, "", "freeze"], [231, 3, 1, "", "from_dict"], [231, 3, 1, "", "from_parameters"], [231, 3, 1, "", "from_position"], [231, 3, 1, "", "from_region"], [231, 2, 1, "", "frozen"], [231, 3, 1, "", "integrate_geom"], [231, 2, 1, "", "is_energy_dependent"], [231, 2, 1, "", "lat_0"], [231, 2, 1, "", "lon_0"], [231, 2, 1, "", "parameters"], [231, 2, 1, "", "parameters_unique_names"], [231, 2, 1, "", "phi"], [231, 2, 1, "", "phi_0"], [231, 3, 1, "", "plot"], [231, 3, 1, "", "plot_error"], [231, 3, 1, "", "plot_grid"], [231, 3, 1, "", "plot_interactive"], [231, 3, 1, "", "plot_position_error"], [231, 2, 1, "", "position"], [231, 2, 1, "", "position_error"], [231, 2, 1, "", "position_lonlat"], [231, 2, 1, "", "r_0"], [231, 3, 1, "", "reassign"], [231, 2, 1, "", "tag"], [231, 3, 1, "", "to_dict"], [231, 3, 1, "", "to_region"], [231, 2, 1, "", "type"], [231, 3, 1, "", "unfreeze"]], "gammapy.modeling.models.EBLAbsorptionNormSpectralModel": [[232, 3, 1, "", "__call__"], [232, 2, 1, "", "alpha_norm"], [232, 3, 1, "", "copy"], [232, 2, 1, "", "covariance"], [232, 2, 1, "", "default_parameters"], [232, 3, 1, "", "energy_flux"], [232, 3, 1, "", "energy_flux_error"], [232, 3, 1, "", "evaluate"], [232, 3, 1, "", "evaluate_error"], [232, 3, 1, "", "freeze"], [232, 3, 1, "", "from_dict"], [232, 3, 1, "", "from_parameters"], [232, 2, 1, "", "frozen"], [232, 3, 1, "", "integral"], [232, 3, 1, "", "integral_error"], [232, 3, 1, "", "inverse"], [232, 3, 1, "", "inverse_all"], [232, 2, 1, "", "is_norm_spectral_model"], [232, 2, 1, "", "parameters"], [232, 2, 1, "", "parameters_unique_names"], [232, 2, 1, "", "pivot_energy"], [232, 3, 1, "", "plot"], [232, 3, 1, "", "plot_error"], [232, 3, 1, "", "read"], [232, 3, 1, "", "read_builtin"], [232, 3, 1, "", "reassign"], [232, 2, 1, "", "redshift"], [232, 3, 1, "", "reference_fluxes"], [232, 3, 1, "", "spectral_index"], [232, 3, 1, "", "spectral_index_error"], [232, 2, 1, "", "tag"], [232, 3, 1, "", "to_dict"], [232, 2, 1, "", "type"], [232, 3, 1, "", "unfreeze"]], "gammapy.modeling.models.ExpCutoffPowerLaw3FGLSpectralModel": [[234, 3, 1, "", "__call__"], [234, 2, 1, "", "amplitude"], [234, 3, 1, "", "copy"], [234, 2, 1, "", "covariance"], [234, 2, 1, "", "default_parameters"], [234, 2, 1, "", "ecut"], [234, 3, 1, "", "energy_flux"], [234, 3, 1, "", "energy_flux_error"], [234, 3, 1, "", "evaluate"], [234, 3, 1, "", "evaluate_error"], [234, 3, 1, "", "freeze"], [234, 3, 1, "", "from_dict"], [234, 3, 1, "", "from_parameters"], [234, 2, 1, "", "frozen"], [234, 2, 1, "", "index"], [234, 3, 1, "", "integral"], [234, 3, 1, "", "integral_error"], [234, 3, 1, "", "inverse"], [234, 3, 1, "", "inverse_all"], [234, 2, 1, "", "is_norm_spectral_model"], [234, 2, 1, "", "parameters"], [234, 2, 1, "", "parameters_unique_names"], [234, 2, 1, "", "pivot_energy"], [234, 3, 1, "", "plot"], [234, 3, 1, "", "plot_error"], [234, 3, 1, "", "reassign"], [234, 2, 1, "", "reference"], [234, 3, 1, "", "reference_fluxes"], [234, 3, 1, "", "spectral_index"], [234, 3, 1, "", "spectral_index_error"], [234, 2, 1, "", "tag"], [234, 3, 1, "", "to_dict"], [234, 2, 1, "", "type"], [234, 3, 1, "", "unfreeze"]], "gammapy.modeling.models.ExpCutoffPowerLawNormSpectralModel": [[235, 3, 1, "", "__call__"], [235, 2, 1, "", "alpha"], [235, 3, 1, "", "copy"], [235, 2, 1, "", "covariance"], [235, 2, 1, "", "default_parameters"], [235, 3, 1, "", "energy_flux"], [235, 3, 1, "", "energy_flux_error"], [235, 3, 1, "", "evaluate"], [235, 3, 1, "", "evaluate_error"], [235, 3, 1, "", "freeze"], [235, 3, 1, "", "from_dict"], [235, 3, 1, "", "from_parameters"], [235, 2, 1, "", "frozen"], [235, 2, 1, "", "index"], [235, 3, 1, "", "integral"], [235, 3, 1, "", "integral_error"], [235, 3, 1, "", "inverse"], [235, 3, 1, "", "inverse_all"], [235, 2, 1, "", "is_norm_spectral_model"], [235, 2, 1, "", "lambda_"], [235, 2, 1, "", "norm"], [235, 2, 1, "", "parameters"], [235, 2, 1, "", "parameters_unique_names"], [235, 2, 1, "", "pivot_energy"], [235, 3, 1, "", "plot"], [235, 3, 1, "", "plot_error"], [235, 3, 1, "", "reassign"], [235, 2, 1, "", "reference"], [235, 3, 1, "", "reference_fluxes"], [235, 3, 1, "", "spectral_index"], [235, 3, 1, "", "spectral_index_error"], [235, 2, 1, "", "tag"], [235, 3, 1, "", "to_dict"], [235, 2, 1, "", "type"], [235, 3, 1, "", "unfreeze"]], "gammapy.modeling.models.ExpCutoffPowerLawSpectralModel": [[236, 3, 1, "", "__call__"], [236, 2, 1, "", "alpha"], [236, 2, 1, "", "amplitude"], [236, 3, 1, "", "copy"], [236, 2, 1, "", "covariance"], [236, 2, 1, "", "default_parameters"], [236, 2, 1, "", "e_peak"], [236, 3, 1, "", "energy_flux"], [236, 3, 1, "", "energy_flux_error"], [236, 3, 1, "", "evaluate"], [236, 3, 1, "", "evaluate_error"], [236, 3, 1, "", "freeze"], [236, 3, 1, "", "from_dict"], [236, 3, 1, "", "from_parameters"], [236, 2, 1, "", "frozen"], [236, 2, 1, "", "index"], [236, 3, 1, "", "integral"], [236, 3, 1, "", "integral_error"], [236, 3, 1, "", "inverse"], [236, 3, 1, "", "inverse_all"], [236, 2, 1, "", "is_norm_spectral_model"], [236, 2, 1, "", "lambda_"], [236, 2, 1, "", "parameters"], [236, 2, 1, "", "parameters_unique_names"], [236, 2, 1, "", "pivot_energy"], [236, 3, 1, "", "plot"], [236, 3, 1, "", "plot_error"], [236, 3, 1, "", "reassign"], [236, 2, 1, "", "reference"], [236, 3, 1, "", "reference_fluxes"], [236, 3, 1, "", "spectral_index"], [236, 3, 1, "", "spectral_index_error"], [236, 2, 1, "", "tag"], [236, 3, 1, "", "to_dict"], [236, 2, 1, "", "type"], [236, 3, 1, "", "unfreeze"]], "gammapy.modeling.models.ExpDecayTemporalModel": [[237, 3, 1, "", "__call__"], [237, 3, 1, "", "copy"], [237, 2, 1, "", "covariance"], [237, 2, 1, "", "default_parameters"], [237, 3, 1, "", "evaluate"], [237, 3, 1, "", "freeze"], [237, 3, 1, "", "from_dict"], [237, 3, 1, "", "from_parameters"], [237, 2, 1, "", "frozen"], [237, 3, 1, "", "integral"], [237, 2, 1, "", "is_energy_dependent"], [237, 2, 1, "", "parameters"], [237, 2, 1, "", "parameters_unique_names"], [237, 3, 1, "", "plot"], [237, 3, 1, "", "reassign"], [237, 2, 1, "", "reference_time"], [237, 3, 1, "", "sample_time"], [237, 2, 1, "", "t0"], [237, 2, 1, "", "t_ref"], [237, 2, 1, "", "tag"], [237, 3, 1, "", "time_sum"], [237, 3, 1, "", "to_dict"], [237, 2, 1, "", "type"], [237, 3, 1, "", "unfreeze"]], "gammapy.modeling.models.FoVBackgroundModel": [[238, 3, 1, "", "contributes"], [238, 3, 1, "", "copy"], [238, 2, 1, "", "covariance"], [238, 2, 1, "", "default_parameters"], [238, 3, 1, "", "evaluate"], [238, 3, 1, "", "evaluate_geom"], [238, 3, 1, "", "freeze"], [238, 3, 1, "", "from_dict"], [238, 3, 1, "", "from_parameters"], [238, 2, 1, "", "frozen"], [238, 2, 1, "", "name"], [238, 2, 1, "", "parameters"], [238, 2, 1, "", "parameters_unique_names"], [238, 3, 1, "", "reassign"], [238, 3, 1, "", "reset_to_default"], [238, 2, 1, "", "spatial_model"], [238, 2, 1, "", "spectral_model"], [238, 2, 1, "", "tag"], [238, 3, 1, "", "to_dict"], [238, 2, 1, "", "type"], [238, 3, 1, "", "unfreeze"]], "gammapy.modeling.models.GaussianPrior": [[239, 3, 1, "", "__call__"], [239, 3, 1, "", "copy"], [239, 2, 1, "", "covariance"], [239, 2, 1, "", "default_parameters"], [239, 3, 1, "", "evaluate"], [239, 3, 1, "", "freeze"], [239, 3, 1, "", "from_dict"], [239, 3, 1, "", "from_parameters"], [239, 2, 1, "", "frozen"], [239, 2, 1, "", "mu"], [239, 2, 1, "", "parameters"], [239, 2, 1, "", "parameters_unique_names"], [239, 3, 1, "", "reassign"], [239, 2, 1, "", "sigma"], [239, 2, 1, "", "tag"], [239, 3, 1, "", "to_dict"], [239, 2, 1, "", "type"], [239, 3, 1, "", "unfreeze"], [239, 2, 1, "", "weight"]], "gammapy.modeling.models.GaussianSpatialModel": [[240, 3, 1, "", "__call__"], [240, 3, 1, "", "copy"], [240, 2, 1, "", "covariance"], [240, 2, 1, "", "default_parameters"], [240, 2, 1, "", "e"], [240, 3, 1, "", "evaluate"], [240, 3, 1, "", "evaluate_geom"], [240, 2, 1, "", "evaluation_bin_size_min"], [240, 2, 1, "", "evaluation_radius"], [240, 2, 1, "", "evaluation_region"], [240, 3, 1, "", "freeze"], [240, 3, 1, "", "from_dict"], [240, 3, 1, "", "from_parameters"], [240, 3, 1, "", "from_position"], [240, 2, 1, "", "frozen"], [240, 3, 1, "", "integrate_geom"], [240, 2, 1, "", "is_energy_dependent"], [240, 2, 1, "", "lat_0"], [240, 2, 1, "", "lon_0"], [240, 2, 1, "", "parameters"], [240, 2, 1, "", "parameters_unique_names"], [240, 2, 1, "", "phi"], [240, 2, 1, "", "phi_0"], [240, 3, 1, "", "plot"], [240, 3, 1, "", "plot_error"], [240, 3, 1, "", "plot_grid"], [240, 3, 1, "", "plot_interactive"], [240, 3, 1, "", "plot_position_error"], [240, 2, 1, "", "position"], [240, 2, 1, "", "position_error"], [240, 2, 1, "", "position_lonlat"], [240, 3, 1, "", "reassign"], [240, 2, 1, "", "sigma"], [240, 2, 1, "", "tag"], [240, 3, 1, "", "to_dict"], [240, 3, 1, "", "to_region"], [240, 2, 1, "", "type"], [240, 3, 1, "", "unfreeze"]], "gammapy.modeling.models.GaussianSpectralModel": [[241, 3, 1, "", "__call__"], [241, 2, 1, "", "amplitude"], [241, 3, 1, "", "copy"], [241, 2, 1, "", "covariance"], [241, 2, 1, "", "default_parameters"], [241, 3, 1, "", "energy_flux"], [241, 3, 1, "", "energy_flux_error"], [241, 3, 1, "", "evaluate"], [241, 3, 1, "", "evaluate_error"], [241, 3, 1, "", "freeze"], [241, 3, 1, "", "from_dict"], [241, 3, 1, "", "from_parameters"], [241, 2, 1, "", "frozen"], [241, 3, 1, "", "integral"], [241, 3, 1, "", "integral_error"], [241, 3, 1, "", "inverse"], [241, 3, 1, "", "inverse_all"], [241, 2, 1, "", "is_norm_spectral_model"], [241, 2, 1, "", "mean"], [241, 2, 1, "", "parameters"], [241, 2, 1, "", "parameters_unique_names"], [241, 2, 1, "", "pivot_energy"], [241, 3, 1, "", "plot"], [241, 3, 1, "", "plot_error"], [241, 3, 1, "", "reassign"], [241, 3, 1, "", "reference_fluxes"], [241, 2, 1, "", "sigma"], [241, 3, 1, "", "spectral_index"], [241, 3, 1, "", "spectral_index_error"], [241, 2, 1, "", "tag"], [241, 3, 1, "", "to_dict"], [241, 2, 1, "", "type"], [241, 3, 1, "", "unfreeze"]], "gammapy.modeling.models.GaussianTemporalModel": [[242, 3, 1, "", "__call__"], [242, 3, 1, "", "copy"], [242, 2, 1, "", "covariance"], [242, 2, 1, "", "default_parameters"], [242, 3, 1, "", "evaluate"], [242, 3, 1, "", "freeze"], [242, 3, 1, "", "from_dict"], [242, 3, 1, "", "from_parameters"], [242, 2, 1, "", "frozen"], [242, 3, 1, "", "integral"], [242, 2, 1, "", "is_energy_dependent"], [242, 2, 1, "", "parameters"], [242, 2, 1, "", "parameters_unique_names"], [242, 3, 1, "", "plot"], [242, 3, 1, "", "reassign"], [242, 2, 1, "", "reference_time"], [242, 3, 1, "", "sample_time"], [242, 2, 1, "", "sigma"], [242, 2, 1, "", "t_ref"], [242, 2, 1, "", "tag"], [242, 3, 1, "", "time_sum"], [242, 3, 1, "", "to_dict"], [242, 2, 1, "", "type"], [242, 3, 1, "", "unfreeze"]], "gammapy.modeling.models.GeneralizedGaussianSpatialModel": [[243, 3, 1, "", "__call__"], [243, 3, 1, "", "copy"], [243, 2, 1, "", "covariance"], [243, 2, 1, "", "default_parameters"], [243, 2, 1, "", "e"], [243, 2, 1, "", "eta"], [243, 3, 1, "", "evaluate"], [243, 3, 1, "", "evaluate_geom"], [243, 2, 1, "", "evaluation_bin_size_min"], [243, 2, 1, "", "evaluation_radius"], [243, 2, 1, "", "evaluation_region"], [243, 3, 1, "", "freeze"], [243, 3, 1, "", "from_dict"], [243, 3, 1, "", "from_parameters"], [243, 3, 1, "", "from_position"], [243, 2, 1, "", "frozen"], [243, 3, 1, "", "integrate_geom"], [243, 2, 1, "", "is_energy_dependent"], [243, 2, 1, "", "lat_0"], [243, 2, 1, "", "lon_0"], [243, 2, 1, "", "parameters"], [243, 2, 1, "", "parameters_unique_names"], [243, 2, 1, "", "phi"], [243, 2, 1, "", "phi_0"], [243, 3, 1, "", "plot"], [243, 3, 1, "", "plot_error"], [243, 3, 1, "", "plot_grid"], [243, 3, 1, "", "plot_interactive"], [243, 3, 1, "", "plot_position_error"], [243, 2, 1, "", "position"], [243, 2, 1, "", "position_error"], [243, 2, 1, "", "position_lonlat"], [243, 2, 1, "", "r_0"], [243, 3, 1, "", "reassign"], [243, 2, 1, "", "tag"], [243, 3, 1, "", "to_dict"], [243, 3, 1, "", "to_region"], [243, 2, 1, "", "type"], [243, 3, 1, "", "unfreeze"]], "gammapy.modeling.models.GeneralizedGaussianTemporalModel": [[244, 3, 1, "", "__call__"], [244, 3, 1, "", "copy"], [244, 2, 1, "", "covariance"], [244, 2, 1, "", "default_parameters"], [244, 2, 1, "", "eta"], [244, 3, 1, "", "evaluate"], [244, 3, 1, "", "freeze"], [244, 3, 1, "", "from_dict"], [244, 3, 1, "", "from_parameters"], [244, 2, 1, "", "frozen"], [244, 3, 1, "", "integral"], [244, 2, 1, "", "is_energy_dependent"], [244, 2, 1, "", "parameters"], [244, 2, 1, "", "parameters_unique_names"], [244, 3, 1, "", "plot"], [244, 3, 1, "", "reassign"], [244, 2, 1, "", "reference_time"], [244, 3, 1, "", "sample_time"], [244, 2, 1, "", "t_decay"], [244, 2, 1, "", "t_ref"], [244, 2, 1, "", "t_rise"], [244, 2, 1, "", "tag"], [244, 3, 1, "", "time_sum"], [244, 3, 1, "", "to_dict"], [244, 2, 1, "", "type"], [244, 3, 1, "", "unfreeze"]], "gammapy.modeling.models.LightCurveTemplateTemporalModel": [[245, 3, 1, "", "__call__"], [245, 3, 1, "", "copy"], [245, 2, 1, "", "covariance"], [245, 2, 1, "", "default_parameters"], [245, 3, 1, "", "evaluate"], [245, 3, 1, "", "freeze"], [245, 3, 1, "", "from_dict"], [245, 3, 1, "", "from_parameters"], [245, 3, 1, "", "from_table"], [245, 2, 1, "", "frozen"], [245, 3, 1, "", "integral"], [245, 2, 1, "", "is_energy_dependent"], [245, 2, 1, "", "parameters"], [245, 2, 1, "", "parameters_unique_names"], [245, 3, 1, "", "plot"], [245, 3, 1, "", "read"], [245, 3, 1, "", "reassign"], [245, 2, 1, "", "reference_time"], [245, 3, 1, "", "sample_time"], [245, 2, 1, "", "t_ref"], [245, 2, 1, "", "tag"], [245, 3, 1, "", "time_sum"], [245, 3, 1, "", "to_dict"], [245, 3, 1, "", "to_table"], [245, 2, 1, "", "type"], [245, 3, 1, "", "unfreeze"], [245, 3, 1, "", "write"]], "gammapy.modeling.models.LinearTemporalModel": [[246, 3, 1, "", "__call__"], [246, 2, 1, "", "alpha"], [246, 2, 1, "", "beta"], [246, 3, 1, "", "copy"], [246, 2, 1, "", "covariance"], [246, 2, 1, "", "default_parameters"], [246, 3, 1, "", "evaluate"], [246, 3, 1, "", "freeze"], [246, 3, 1, "", "from_dict"], [246, 3, 1, "", "from_parameters"], [246, 2, 1, "", "frozen"], [246, 3, 1, "", "integral"], [246, 2, 1, "", "is_energy_dependent"], [246, 2, 1, "", "parameters"], [246, 2, 1, "", "parameters_unique_names"], [246, 3, 1, "", "plot"], [246, 3, 1, "", "reassign"], [246, 2, 1, "", "reference_time"], [246, 3, 1, "", "sample_time"], [246, 2, 1, "", "t_ref"], [246, 2, 1, "", "tag"], [246, 3, 1, "", "time_sum"], [246, 3, 1, "", "to_dict"], [246, 2, 1, "", "type"], [246, 3, 1, "", "unfreeze"]], "gammapy.modeling.models.LogParabolaNormSpectralModel": [[247, 3, 1, "", "__call__"], [247, 2, 1, "", "alpha"], [247, 2, 1, "", "beta"], [247, 3, 1, "", "copy"], [247, 2, 1, "", "covariance"], [247, 2, 1, "", "default_parameters"], [247, 3, 1, "", "energy_flux"], [247, 3, 1, "", "energy_flux_error"], [247, 3, 1, "", "evaluate"], [247, 3, 1, "", "evaluate_error"], [247, 3, 1, "", "freeze"], [247, 3, 1, "", "from_dict"], [247, 3, 1, "", "from_log10"], [247, 3, 1, "", "from_parameters"], [247, 2, 1, "", "frozen"], [247, 3, 1, "", "integral"], [247, 3, 1, "", "integral_error"], [247, 3, 1, "", "inverse"], [247, 3, 1, "", "inverse_all"], [247, 2, 1, "", "is_norm_spectral_model"], [247, 2, 1, "", "norm"], [247, 2, 1, "", "parameters"], [247, 2, 1, "", "parameters_unique_names"], [247, 2, 1, "", "pivot_energy"], [247, 3, 1, "", "plot"], [247, 3, 1, "", "plot_error"], [247, 3, 1, "", "reassign"], [247, 2, 1, "", "reference"], [247, 3, 1, "", "reference_fluxes"], [247, 3, 1, "", "spectral_index"], [247, 3, 1, "", "spectral_index_error"], [247, 2, 1, "", "tag"], [247, 3, 1, "", "to_dict"], [247, 2, 1, "", "type"], [247, 3, 1, "", "unfreeze"]], "gammapy.modeling.models.LogParabolaSpectralModel": [[248, 3, 1, "", "__call__"], [248, 2, 1, "", "alpha"], [248, 2, 1, "", "amplitude"], [248, 2, 1, "", "beta"], [248, 3, 1, "", "copy"], [248, 2, 1, "", "covariance"], [248, 2, 1, "", "default_parameters"], [248, 2, 1, "", "e_peak"], [248, 3, 1, "", "energy_flux"], [248, 3, 1, "", "energy_flux_error"], [248, 3, 1, "", "evaluate"], [248, 3, 1, "", "evaluate_error"], [248, 3, 1, "", "freeze"], [248, 3, 1, "", "from_dict"], [248, 3, 1, "", "from_log10"], [248, 3, 1, "", "from_parameters"], [248, 2, 1, "", "frozen"], [248, 3, 1, "", "integral"], [248, 3, 1, "", "integral_error"], [248, 3, 1, "", "inverse"], [248, 3, 1, "", "inverse_all"], [248, 2, 1, "", "is_norm_spectral_model"], [248, 2, 1, "", "parameters"], [248, 2, 1, "", "parameters_unique_names"], [248, 2, 1, "", "pivot_energy"], [248, 3, 1, "", "plot"], [248, 3, 1, "", "plot_error"], [248, 3, 1, "", "reassign"], [248, 2, 1, "", "reference"], [248, 3, 1, "", "reference_fluxes"], [248, 3, 1, "", "spectral_index"], [248, 3, 1, "", "spectral_index_error"], [248, 2, 1, "", "tag"], [248, 3, 1, "", "to_dict"], [248, 2, 1, "", "type"], [248, 3, 1, "", "unfreeze"]], "gammapy.modeling.models.LogUniformPrior": [[249, 3, 1, "", "__call__"], [249, 3, 1, "", "copy"], [249, 2, 1, "", "covariance"], [249, 2, 1, "", "default_parameters"], [249, 3, 1, "", "evaluate"], [249, 3, 1, "", "freeze"], [249, 3, 1, "", "from_dict"], [249, 3, 1, "", "from_parameters"], [249, 2, 1, "", "frozen"], [249, 2, 1, "", "max"], [249, 2, 1, "", "min"], [249, 2, 1, "", "parameters"], [249, 2, 1, "", "parameters_unique_names"], [249, 3, 1, "", "reassign"], [249, 2, 1, "", "tag"], [249, 3, 1, "", "to_dict"], [249, 2, 1, "", "type"], [249, 3, 1, "", "unfreeze"], [249, 2, 1, "", "weight"]], "gammapy.modeling.models.MeyerCrabSpectralModel": [[251, 3, 1, "", "__call__"], [251, 2, 1, "", "coefficients"], [251, 3, 1, "", "copy"], [251, 2, 1, "", "covariance"], [251, 2, 1, "", "default_parameters"], [251, 3, 1, "", "energy_flux"], [251, 3, 1, "", "energy_flux_error"], [251, 3, 1, "", "evaluate"], [251, 3, 1, "", "evaluate_error"], [251, 3, 1, "", "freeze"], [251, 3, 1, "", "from_dict"], [251, 3, 1, "", "from_parameters"], [251, 2, 1, "", "frozen"], [251, 3, 1, "", "integral"], [251, 3, 1, "", "integral_error"], [251, 3, 1, "", "inverse"], [251, 3, 1, "", "inverse_all"], [251, 2, 1, "", "is_norm_spectral_model"], [251, 2, 1, "", "norm"], [251, 2, 1, "", "parameters"], [251, 2, 1, "", "parameters_unique_names"], [251, 2, 1, "", "pivot_energy"], [251, 3, 1, "", "plot"], [251, 3, 1, "", "plot_error"], [251, 3, 1, "", "reassign"], [251, 3, 1, "", "reference_fluxes"], [251, 3, 1, "", "spectral_index"], [251, 3, 1, "", "spectral_index_error"], [251, 3, 1, "", "to_dict"], [251, 2, 1, "", "type"], [251, 3, 1, "", "unfreeze"]], "gammapy.modeling.models.Model": [[252, 3, 1, "", "create"], [252, 3, 1, "", "from_dict"]], "gammapy.modeling.models.ModelBase": [[253, 3, 1, "", "copy"], [253, 2, 1, "", "covariance"], [253, 3, 1, "", "freeze"], [253, 3, 1, "", "from_dict"], [253, 3, 1, "", "from_parameters"], [253, 2, 1, "", "frozen"], [253, 2, 1, "", "parameters"], [253, 2, 1, "", "parameters_unique_names"], [253, 3, 1, "", "reassign"], [253, 3, 1, "", "to_dict"], [253, 2, 1, "", "type"], [253, 3, 1, "", "unfreeze"]], "gammapy.modeling.models.Models": [[254, 3, 1, "", "append"], [254, 2, 1, "", "background_models"], [254, 3, 1, "", "clear"], [254, 3, 1, "", "copy"], [254, 3, 1, "", "count"], [254, 2, 1, "", "covariance"], [254, 3, 1, "", "extend"], [254, 3, 1, "", "freeze"], [254, 3, 1, "", "from_dict"], [254, 3, 1, "", "from_yaml"], [254, 2, 1, "", "frozen"], [254, 3, 1, "", "index"], [254, 3, 1, "", "insert"], [254, 2, 1, "", "names"], [254, 2, 1, "", "parameters"], [254, 2, 1, "", "parameters_unique_names"], [254, 3, 1, "", "plot_positions"], [254, 3, 1, "", "plot_regions"], [254, 3, 1, "", "pop"], [254, 2, 1, "", "positions"], [254, 3, 1, "", "read"], [254, 3, 1, "", "read_covariance"], [254, 3, 1, "", "reassign"], [254, 3, 1, "", "remove"], [254, 3, 1, "", "restore_status"], [254, 3, 1, "", "reverse"], [254, 3, 1, "", "select"], [254, 3, 1, "", "select_from_geom"], [254, 3, 1, "", "select_mask"], [254, 3, 1, "", "select_region"], [254, 3, 1, "", "selection_mask"], [254, 3, 1, "", "set_parameters_bounds"], [254, 3, 1, "", "set_prior"], [254, 3, 1, "", "to_dict"], [254, 3, 1, "", "to_parameters_table"], [254, 3, 1, "", "to_regions"], [254, 3, 1, "", "to_template_sky_model"], [254, 3, 1, "", "to_template_spectral_model"], [254, 3, 1, "", "to_yaml"], [254, 3, 1, "", "unfreeze"], [254, 3, 1, "", "update_link_label"], [254, 3, 1, "", "update_parameters_from_table"], [254, 2, 1, "", "wcs_geom"], [254, 3, 1, "", "write"], [254, 3, 1, "", "write_covariance"]], "gammapy.modeling.models.NaimaSpectralModel": [[255, 3, 1, "", "__call__"], [255, 3, 1, "", "copy"], [255, 2, 1, "", "covariance"], [255, 2, 1, "", "default_parameters"], [255, 3, 1, "", "energy_flux"], [255, 3, 1, "", "energy_flux_error"], [255, 3, 1, "", "evaluate"], [255, 3, 1, "", "evaluate_error"], [255, 3, 1, "", "freeze"], [255, 3, 1, "", "from_dict"], [255, 3, 1, "", "from_parameters"], [255, 2, 1, "", "frozen"], [255, 2, 1, "", "include_ssc"], [255, 3, 1, "", "integral"], [255, 3, 1, "", "integral_error"], [255, 3, 1, "", "inverse"], [255, 3, 1, "", "inverse_all"], [255, 2, 1, "", "is_norm_spectral_model"], [255, 2, 1, "", "parameters"], [255, 2, 1, "", "parameters_unique_names"], [255, 2, 1, "", "particle_distribution"], [255, 2, 1, "", "pivot_energy"], [255, 3, 1, "", "plot"], [255, 3, 1, "", "plot_error"], [255, 3, 1, "", "reassign"], [255, 3, 1, "", "reference_fluxes"], [255, 3, 1, "", "spectral_index"], [255, 3, 1, "", "spectral_index_error"], [255, 2, 1, "", "ssc_model"], [255, 2, 1, "", "tag"], [255, 3, 1, "", "to_dict"], [255, 2, 1, "", "type"], [255, 3, 1, "", "unfreeze"]], "gammapy.modeling.models.PiecewiseNormSpatialModel": [[256, 3, 1, "", "__call__"], [256, 2, 1, "", "coords"], [256, 3, 1, "", "copy"], [256, 2, 1, "", "covariance"], [256, 2, 1, "", "default_parameters"], [256, 3, 1, "", "evaluate"], [256, 3, 1, "", "evaluate_geom"], [256, 2, 1, "", "evaluation_bin_size_min"], [256, 2, 1, "", "evaluation_radius"], [256, 2, 1, "", "evaluation_region"], [256, 3, 1, "", "freeze"], [256, 3, 1, "", "from_dict"], [256, 3, 1, "", "from_parameters"], [256, 3, 1, "", "from_position"], [256, 2, 1, "", "frozen"], [256, 3, 1, "", "integrate_geom"], [256, 2, 1, "", "is_energy_dependent"], [256, 2, 1, "", "norms"], [256, 2, 1, "", "parameters"], [256, 2, 1, "", "parameters_unique_names"], [256, 2, 1, "", "phi_0"], [256, 3, 1, "", "plot"], [256, 3, 1, "", "plot_error"], [256, 3, 1, "", "plot_grid"], [256, 3, 1, "", "plot_interactive"], [256, 3, 1, "", "plot_position_error"], [256, 2, 1, "", "position"], [256, 2, 1, "", "position_error"], [256, 2, 1, "", "position_lonlat"], [256, 3, 1, "", "reassign"], [256, 2, 1, "", "tag"], [256, 3, 1, "", "to_dict"], [256, 2, 1, "", "type"], [256, 3, 1, "", "unfreeze"]], "gammapy.modeling.models.PiecewiseNormSpectralModel": [[257, 3, 1, "", "__call__"], [257, 3, 1, "", "copy"], [257, 2, 1, "", "covariance"], [257, 2, 1, "", "default_parameters"], [257, 2, 1, "", "energy"], [257, 3, 1, "", "energy_flux"], [257, 3, 1, "", "energy_flux_error"], [257, 3, 1, "", "evaluate"], [257, 3, 1, "", "evaluate_error"], [257, 3, 1, "", "freeze"], [257, 3, 1, "", "from_dict"], [257, 3, 1, "", "from_parameters"], [257, 2, 1, "", "frozen"], [257, 3, 1, "", "integral"], [257, 3, 1, "", "integral_error"], [257, 3, 1, "", "inverse"], [257, 3, 1, "", "inverse_all"], [257, 2, 1, "", "is_norm_spectral_model"], [257, 2, 1, "", "norms"], [257, 2, 1, "", "parameters"], [257, 2, 1, "", "parameters_unique_names"], [257, 2, 1, "", "pivot_energy"], [257, 3, 1, "", "plot"], [257, 3, 1, "", "plot_error"], [257, 3, 1, "", "reassign"], [257, 3, 1, "", "reference_fluxes"], [257, 3, 1, "", "spectral_index"], [257, 3, 1, "", "spectral_index_error"], [257, 2, 1, "", "tag"], [257, 3, 1, "", "to_dict"], [257, 2, 1, "", "type"], [257, 3, 1, "", "unfreeze"]], "gammapy.modeling.models.PointSpatialModel": [[258, 3, 1, "", "__call__"], [258, 3, 1, "", "copy"], [258, 2, 1, "", "covariance"], [258, 2, 1, "", "default_parameters"], [258, 3, 1, "", "evaluate_geom"], [258, 2, 1, "", "evaluation_bin_size_min"], [258, 2, 1, "", "evaluation_radius"], [258, 2, 1, "", "evaluation_region"], [258, 3, 1, "", "freeze"], [258, 3, 1, "", "from_dict"], [258, 3, 1, "", "from_parameters"], [258, 3, 1, "", "from_position"], [258, 2, 1, "", "frozen"], [258, 3, 1, "", "integrate_geom"], [258, 2, 1, "", "is_energy_dependent"], [258, 2, 1, "", "lat_0"], [258, 2, 1, "", "lon_0"], [258, 2, 1, "", "parameters"], [258, 2, 1, "", "parameters_unique_names"], [258, 2, 1, "", "phi_0"], [258, 3, 1, "", "plot"], [258, 3, 1, "", "plot_error"], [258, 3, 1, "", "plot_grid"], [258, 3, 1, "", "plot_interactive"], [258, 3, 1, "", "plot_position_error"], [258, 2, 1, "", "position"], [258, 2, 1, "", "position_error"], [258, 2, 1, "", "position_lonlat"], [258, 3, 1, "", "reassign"], [258, 2, 1, "", "tag"], [258, 3, 1, "", "to_dict"], [258, 3, 1, "", "to_region"], [258, 2, 1, "", "type"], [258, 3, 1, "", "unfreeze"]], "gammapy.modeling.models.PowerLaw2SpectralModel": [[259, 3, 1, "", "__call__"], [259, 2, 1, "", "amplitude"], [259, 3, 1, "", "copy"], [259, 2, 1, "", "covariance"], [259, 2, 1, "", "default_parameters"], [259, 2, 1, "", "emax"], [259, 2, 1, "", "emin"], [259, 3, 1, "", "energy_flux"], [259, 3, 1, "", "energy_flux_error"], [259, 3, 1, "", "evaluate"], [259, 3, 1, "", "evaluate_error"], [259, 3, 1, "", "evaluate_integral"], [259, 3, 1, "", "freeze"], [259, 3, 1, "", "from_dict"], [259, 3, 1, "", "from_parameters"], [259, 2, 1, "", "frozen"], [259, 2, 1, "", "index"], [259, 3, 1, "", "integral"], [259, 3, 1, "", "integral_error"], [259, 3, 1, "", "inverse"], [259, 3, 1, "", "inverse_all"], [259, 2, 1, "", "is_norm_spectral_model"], [259, 2, 1, "", "parameters"], [259, 2, 1, "", "parameters_unique_names"], [259, 2, 1, "", "pivot_energy"], [259, 3, 1, "", "plot"], [259, 3, 1, "", "plot_error"], [259, 3, 1, "", "reassign"], [259, 3, 1, "", "reference_fluxes"], [259, 3, 1, "", "spectral_index"], [259, 3, 1, "", "spectral_index_error"], [259, 2, 1, "", "tag"], [259, 3, 1, "", "to_dict"], [259, 2, 1, "", "type"], [259, 3, 1, "", "unfreeze"]], "gammapy.modeling.models.PowerLawNormSpectralModel": [[260, 3, 1, "", "__call__"], [260, 3, 1, "", "copy"], [260, 2, 1, "", "covariance"], [260, 2, 1, "", "default_parameters"], [260, 3, 1, "", "energy_flux"], [260, 3, 1, "", "energy_flux_error"], [260, 3, 1, "", "evaluate"], [260, 3, 1, "", "evaluate_energy_flux"], [260, 3, 1, "", "evaluate_error"], [260, 3, 1, "", "evaluate_integral"], [260, 3, 1, "", "freeze"], [260, 3, 1, "", "from_dict"], [260, 3, 1, "", "from_parameters"], [260, 2, 1, "", "frozen"], [260, 3, 1, "", "integral"], [260, 3, 1, "", "integral_error"], [260, 3, 1, "", "inverse"], [260, 3, 1, "", "inverse_all"], [260, 2, 1, "", "is_norm_spectral_model"], [260, 2, 1, "", "norm"], [260, 2, 1, "", "parameters"], [260, 2, 1, "", "parameters_unique_names"], [260, 2, 1, "", "pivot_energy"], [260, 3, 1, "", "plot"], [260, 3, 1, "", "plot_error"], [260, 3, 1, "", "reassign"], [260, 2, 1, "", "reference"], [260, 3, 1, "", "reference_fluxes"], [260, 3, 1, "", "spectral_index"], [260, 3, 1, "", "spectral_index_error"], [260, 2, 1, "", "tag"], [260, 2, 1, "", "tilt"], [260, 3, 1, "", "to_dict"], [260, 2, 1, "", "type"], [260, 3, 1, "", "unfreeze"]], "gammapy.modeling.models.PowerLawSpectralModel": [[261, 3, 1, "", "__call__"], [261, 2, 1, "", "amplitude"], [261, 3, 1, "", "copy"], [261, 2, 1, "", "covariance"], [261, 2, 1, "", "default_parameters"], [261, 3, 1, "", "energy_flux"], [261, 3, 1, "", "energy_flux_error"], [261, 3, 1, "", "evaluate"], [261, 3, 1, "", "evaluate_energy_flux"], [261, 3, 1, "", "evaluate_error"], [261, 3, 1, "", "evaluate_integral"], [261, 3, 1, "", "freeze"], [261, 3, 1, "", "from_dict"], [261, 3, 1, "", "from_parameters"], [261, 2, 1, "", "frozen"], [261, 2, 1, "", "index"], [261, 3, 1, "", "integral"], [261, 3, 1, "", "integral_error"], [261, 3, 1, "", "inverse"], [261, 3, 1, "", "inverse_all"], [261, 2, 1, "", "is_norm_spectral_model"], [261, 2, 1, "", "parameters"], [261, 2, 1, "", "parameters_unique_names"], [261, 2, 1, "", "pivot_energy"], [261, 3, 1, "", "plot"], [261, 3, 1, "", "plot_error"], [261, 3, 1, "", "reassign"], [261, 2, 1, "", "reference"], [261, 3, 1, "", "reference_fluxes"], [261, 3, 1, "", "spectral_index"], [261, 3, 1, "", "spectral_index_error"], [261, 2, 1, "", "tag"], [261, 3, 1, "", "to_dict"], [261, 2, 1, "", "type"], [261, 3, 1, "", "unfreeze"]], "gammapy.modeling.models.PowerLawTemporalModel": [[262, 3, 1, "", "__call__"], [262, 2, 1, "", "alpha"], [262, 3, 1, "", "copy"], [262, 2, 1, "", "covariance"], [262, 2, 1, "", "default_parameters"], [262, 3, 1, "", "evaluate"], [262, 3, 1, "", "freeze"], [262, 3, 1, "", "from_dict"], [262, 3, 1, "", "from_parameters"], [262, 2, 1, "", "frozen"], [262, 3, 1, "", "integral"], [262, 2, 1, "", "is_energy_dependent"], [262, 2, 1, "", "parameters"], [262, 2, 1, "", "parameters_unique_names"], [262, 3, 1, "", "plot"], [262, 3, 1, "", "reassign"], [262, 2, 1, "", "reference_time"], [262, 3, 1, "", "sample_time"], [262, 2, 1, "", "t0"], [262, 2, 1, "", "t_ref"], [262, 2, 1, "", "tag"], [262, 3, 1, "", "time_sum"], [262, 3, 1, "", "to_dict"], [262, 2, 1, "", "type"], [262, 3, 1, "", "unfreeze"]], "gammapy.modeling.models.Prior": [[263, 3, 1, "", "__call__"], [263, 3, 1, "", "copy"], [263, 2, 1, "", "covariance"], [263, 2, 1, "", "default_parameters"], [263, 3, 1, "", "freeze"], [263, 3, 1, "", "from_dict"], [263, 3, 1, "", "from_parameters"], [263, 2, 1, "", "frozen"], [263, 2, 1, "", "parameters"], [263, 2, 1, "", "parameters_unique_names"], [263, 3, 1, "", "reassign"], [263, 3, 1, "", "to_dict"], [263, 2, 1, "", "type"], [263, 3, 1, "", "unfreeze"], [263, 2, 1, "", "weight"]], "gammapy.modeling.models.ScaleSpectralModel": [[266, 3, 1, "", "__call__"], [266, 3, 1, "", "copy"], [266, 2, 1, "", "covariance"], [266, 2, 1, "", "default_parameters"], [266, 3, 1, "", "energy_flux"], [266, 3, 1, "", "energy_flux_error"], [266, 3, 1, "", "evaluate"], [266, 3, 1, "", "evaluate_error"], [266, 3, 1, "", "freeze"], [266, 3, 1, "", "from_dict"], [266, 3, 1, "", "from_parameters"], [266, 2, 1, "", "frozen"], [266, 3, 1, "", "integral"], [266, 3, 1, "", "integral_error"], [266, 3, 1, "", "inverse"], [266, 3, 1, "", "inverse_all"], [266, 2, 1, "", "is_norm_spectral_model"], [266, 2, 1, "", "norm"], [266, 2, 1, "", "parameters"], [266, 2, 1, "", "parameters_unique_names"], [266, 2, 1, "", "pivot_energy"], [266, 3, 1, "", "plot"], [266, 3, 1, "", "plot_error"], [266, 3, 1, "", "reassign"], [266, 3, 1, "", "reference_fluxes"], [266, 3, 1, "", "spectral_index"], [266, 3, 1, "", "spectral_index_error"], [266, 2, 1, "", "tag"], [266, 3, 1, "", "to_dict"], [266, 2, 1, "", "type"], [266, 3, 1, "", "unfreeze"]], "gammapy.modeling.models.Shell2SpatialModel": [[267, 3, 1, "", "__call__"], [267, 3, 1, "", "copy"], [267, 2, 1, "", "covariance"], [267, 2, 1, "", "default_parameters"], [267, 2, 1, "", "eta"], [267, 3, 1, "", "evaluate"], [267, 3, 1, "", "evaluate_geom"], [267, 2, 1, "", "evaluation_bin_size_min"], [267, 2, 1, "", "evaluation_radius"], [267, 2, 1, "", "evaluation_region"], [267, 3, 1, "", "freeze"], [267, 3, 1, "", "from_dict"], [267, 3, 1, "", "from_parameters"], [267, 3, 1, "", "from_position"], [267, 2, 1, "", "frozen"], [267, 3, 1, "", "integrate_geom"], [267, 2, 1, "", "is_energy_dependent"], [267, 2, 1, "", "lat_0"], [267, 2, 1, "", "lon_0"], [267, 2, 1, "", "parameters"], [267, 2, 1, "", "parameters_unique_names"], [267, 2, 1, "", "phi_0"], [267, 3, 1, "", "plot"], [267, 3, 1, "", "plot_error"], [267, 3, 1, "", "plot_grid"], [267, 3, 1, "", "plot_interactive"], [267, 3, 1, "", "plot_position_error"], [267, 2, 1, "", "position"], [267, 2, 1, "", "position_error"], [267, 2, 1, "", "position_lonlat"], [267, 2, 1, "", "r_0"], [267, 2, 1, "", "r_in"], [267, 3, 1, "", "reassign"], [267, 2, 1, "", "tag"], [267, 3, 1, "", "to_dict"], [267, 3, 1, "", "to_region"], [267, 2, 1, "", "type"], [267, 3, 1, "", "unfreeze"]], "gammapy.modeling.models.ShellSpatialModel": [[268, 3, 1, "", "__call__"], [268, 3, 1, "", "copy"], [268, 2, 1, "", "covariance"], [268, 2, 1, "", "default_parameters"], [268, 3, 1, "", "evaluate"], [268, 3, 1, "", "evaluate_geom"], [268, 2, 1, "", "evaluation_bin_size_min"], [268, 2, 1, "", "evaluation_radius"], [268, 2, 1, "", "evaluation_region"], [268, 3, 1, "", "freeze"], [268, 3, 1, "", "from_dict"], [268, 3, 1, "", "from_parameters"], [268, 3, 1, "", "from_position"], [268, 2, 1, "", "frozen"], [268, 3, 1, "", "integrate_geom"], [268, 2, 1, "", "is_energy_dependent"], [268, 2, 1, "", "lat_0"], [268, 2, 1, "", "lon_0"], [268, 2, 1, "", "parameters"], [268, 2, 1, "", "parameters_unique_names"], [268, 2, 1, "", "phi_0"], [268, 3, 1, "", "plot"], [268, 3, 1, "", "plot_error"], [268, 3, 1, "", "plot_grid"], [268, 3, 1, "", "plot_interactive"], [268, 3, 1, "", "plot_position_error"], [268, 2, 1, "", "position"], [268, 2, 1, "", "position_error"], [268, 2, 1, "", "position_lonlat"], [268, 2, 1, "", "radius"], [268, 3, 1, "", "reassign"], [268, 2, 1, "", "tag"], [268, 3, 1, "", "to_dict"], [268, 3, 1, "", "to_region"], [268, 2, 1, "", "type"], [268, 3, 1, "", "unfreeze"], [268, 2, 1, "", "width"]], "gammapy.modeling.models.SineTemporalModel": [[269, 3, 1, "", "__call__"], [269, 2, 1, "", "amp"], [269, 3, 1, "", "copy"], [269, 2, 1, "", "covariance"], [269, 2, 1, "", "default_parameters"], [269, 3, 1, "", "evaluate"], [269, 3, 1, "", "freeze"], [269, 3, 1, "", "from_dict"], [269, 3, 1, "", "from_parameters"], [269, 2, 1, "", "frozen"], [269, 3, 1, "", "integral"], [269, 2, 1, "", "is_energy_dependent"], [269, 2, 1, "", "omega"], [269, 2, 1, "", "parameters"], [269, 2, 1, "", "parameters_unique_names"], [269, 3, 1, "", "plot"], [269, 3, 1, "", "reassign"], [269, 2, 1, "", "reference_time"], [269, 3, 1, "", "sample_time"], [269, 2, 1, "", "t_ref"], [269, 2, 1, "", "tag"], [269, 3, 1, "", "time_sum"], [269, 3, 1, "", "to_dict"], [269, 2, 1, "", "type"], [269, 3, 1, "", "unfreeze"]], "gammapy.modeling.models.SkyModel": [[270, 3, 1, "", "__call__"], [270, 3, 1, "", "contributes"], [270, 3, 1, "", "copy"], [270, 2, 1, "", "covariance"], [270, 3, 1, "", "create"], [270, 2, 1, "", "default_parameters"], [270, 3, 1, "", "evaluate"], [270, 3, 1, "", "evaluate_geom"], [270, 2, 1, "", "evaluation_bin_size_min"], [270, 2, 1, "", "evaluation_radius"], [270, 2, 1, "", "evaluation_region"], [270, 2, 1, "", "frame"], [270, 3, 1, "", "freeze"], [270, 3, 1, "", "from_dict"], [270, 3, 1, "", "from_parameters"], [270, 2, 1, "", "frozen"], [270, 3, 1, "", "integrate_geom"], [270, 2, 1, "", "name"], [270, 2, 1, "", "parameters"], [270, 2, 1, "", "parameters_unique_names"], [270, 2, 1, "", "position"], [270, 2, 1, "", "position_lonlat"], [270, 3, 1, "", "reassign"], [270, 2, 1, "", "spatial_model"], [270, 2, 1, "", "spectral_model"], [270, 2, 1, "", "tag"], [270, 2, 1, "", "temporal_model"], [270, 3, 1, "", "to_dict"], [270, 2, 1, "", "type"], [270, 3, 1, "", "unfreeze"]], "gammapy.modeling.models.SmoothBrokenPowerLawSpectralModel": [[271, 3, 1, "", "__call__"], [271, 2, 1, "", "amplitude"], [271, 2, 1, "", "beta"], [271, 3, 1, "", "copy"], [271, 2, 1, "", "covariance"], [271, 2, 1, "", "default_parameters"], [271, 2, 1, "", "ebreak"], [271, 3, 1, "", "energy_flux"], [271, 3, 1, "", "energy_flux_error"], [271, 3, 1, "", "evaluate"], [271, 3, 1, "", "evaluate_error"], [271, 3, 1, "", "freeze"], [271, 3, 1, "", "from_dict"], [271, 3, 1, "", "from_parameters"], [271, 2, 1, "", "frozen"], [271, 2, 1, "", "index1"], [271, 2, 1, "", "index2"], [271, 3, 1, "", "integral"], [271, 3, 1, "", "integral_error"], [271, 3, 1, "", "inverse"], [271, 3, 1, "", "inverse_all"], [271, 2, 1, "", "is_norm_spectral_model"], [271, 2, 1, "", "parameters"], [271, 2, 1, "", "parameters_unique_names"], [271, 2, 1, "", "pivot_energy"], [271, 3, 1, "", "plot"], [271, 3, 1, "", "plot_error"], [271, 3, 1, "", "reassign"], [271, 2, 1, "", "reference"], [271, 3, 1, "", "reference_fluxes"], [271, 3, 1, "", "spectral_index"], [271, 3, 1, "", "spectral_index_error"], [271, 2, 1, "", "tag"], [271, 3, 1, "", "to_dict"], [271, 2, 1, "", "type"], [271, 3, 1, "", "unfreeze"]], "gammapy.modeling.models.SpatialModel": [[272, 3, 1, "", "__call__"], [272, 3, 1, "", "copy"], [272, 2, 1, "", "covariance"], [272, 2, 1, "", "default_parameters"], [272, 3, 1, "", "evaluate_geom"], [272, 2, 1, "", "evaluation_bin_size_min"], [272, 2, 1, "", "evaluation_radius"], [272, 2, 1, "", "evaluation_region"], [272, 3, 1, "", "freeze"], [272, 3, 1, "", "from_dict"], [272, 3, 1, "", "from_parameters"], [272, 3, 1, "", "from_position"], [272, 2, 1, "", "frozen"], [272, 3, 1, "", "integrate_geom"], [272, 2, 1, "", "is_energy_dependent"], [272, 2, 1, "", "parameters"], [272, 2, 1, "", "parameters_unique_names"], [272, 2, 1, "", "phi_0"], [272, 3, 1, "", "plot"], [272, 3, 1, "", "plot_error"], [272, 3, 1, "", "plot_grid"], [272, 3, 1, "", "plot_interactive"], [272, 3, 1, "", "plot_position_error"], [272, 2, 1, "", "position"], [272, 2, 1, "", "position_error"], [272, 2, 1, "", "position_lonlat"], [272, 3, 1, "", "reassign"], [272, 3, 1, "", "to_dict"], [272, 2, 1, "", "type"], [272, 3, 1, "", "unfreeze"]], "gammapy.modeling.models.SpectralModel": [[273, 3, 1, "", "__call__"], [273, 3, 1, "", "copy"], [273, 2, 1, "", "covariance"], [273, 2, 1, "", "default_parameters"], [273, 3, 1, "", "energy_flux"], [273, 3, 1, "", "energy_flux_error"], [273, 3, 1, "", "evaluate_error"], [273, 3, 1, "", "freeze"], [273, 3, 1, "", "from_dict"], [273, 3, 1, "", "from_parameters"], [273, 2, 1, "", "frozen"], [273, 3, 1, "", "integral"], [273, 3, 1, "", "integral_error"], [273, 3, 1, "", "inverse"], [273, 3, 1, "", "inverse_all"], [273, 2, 1, "", "is_norm_spectral_model"], [273, 2, 1, "", "parameters"], [273, 2, 1, "", "parameters_unique_names"], [273, 2, 1, "", "pivot_energy"], [273, 3, 1, "", "plot"], [273, 3, 1, "", "plot_error"], [273, 3, 1, "", "reassign"], [273, 3, 1, "", "reference_fluxes"], [273, 3, 1, "", "spectral_index"], [273, 3, 1, "", "spectral_index_error"], [273, 3, 1, "", "to_dict"], [273, 2, 1, "", "type"], [273, 3, 1, "", "unfreeze"]], "gammapy.modeling.models.SuperExpCutoffPowerLaw3FGLSpectralModel": [[274, 3, 1, "", "__call__"], [274, 2, 1, "", "amplitude"], [274, 3, 1, "", "copy"], [274, 2, 1, "", "covariance"], [274, 2, 1, "", "default_parameters"], [274, 2, 1, "", "ecut"], [274, 3, 1, "", "energy_flux"], [274, 3, 1, "", "energy_flux_error"], [274, 3, 1, "", "evaluate"], [274, 3, 1, "", "evaluate_error"], [274, 3, 1, "", "freeze"], [274, 3, 1, "", "from_dict"], [274, 3, 1, "", "from_parameters"], [274, 2, 1, "", "frozen"], [274, 2, 1, "", "index_1"], [274, 2, 1, "", "index_2"], [274, 3, 1, "", "integral"], [274, 3, 1, "", "integral_error"], [274, 3, 1, "", "inverse"], [274, 3, 1, "", "inverse_all"], [274, 2, 1, "", "is_norm_spectral_model"], [274, 2, 1, "", "parameters"], [274, 2, 1, "", "parameters_unique_names"], [274, 2, 1, "", "pivot_energy"], [274, 3, 1, "", "plot"], [274, 3, 1, "", "plot_error"], [274, 3, 1, "", "reassign"], [274, 2, 1, "", "reference"], [274, 3, 1, "", "reference_fluxes"], [274, 3, 1, "", "spectral_index"], [274, 3, 1, "", "spectral_index_error"], [274, 2, 1, "", "tag"], [274, 3, 1, "", "to_dict"], [274, 2, 1, "", "type"], [274, 3, 1, "", "unfreeze"]], "gammapy.modeling.models.SuperExpCutoffPowerLaw4FGLDR3SpectralModel": [[275, 3, 1, "", "__call__"], [275, 2, 1, "", "amplitude"], [275, 3, 1, "", "copy"], [275, 2, 1, "", "covariance"], [275, 2, 1, "", "default_parameters"], [275, 2, 1, "", "e_peak"], [275, 3, 1, "", "energy_flux"], [275, 3, 1, "", "energy_flux_error"], [275, 3, 1, "", "evaluate"], [275, 3, 1, "", "evaluate_error"], [275, 2, 1, "", "expfactor"], [275, 3, 1, "", "freeze"], [275, 3, 1, "", "from_dict"], [275, 3, 1, "", "from_parameters"], [275, 2, 1, "", "frozen"], [275, 2, 1, "", "index_1"], [275, 2, 1, "", "index_2"], [275, 3, 1, "", "integral"], [275, 3, 1, "", "integral_error"], [275, 3, 1, "", "inverse"], [275, 3, 1, "", "inverse_all"], [275, 2, 1, "", "is_norm_spectral_model"], [275, 2, 1, "", "parameters"], [275, 2, 1, "", "parameters_unique_names"], [275, 2, 1, "", "pivot_energy"], [275, 3, 1, "", "plot"], [275, 3, 1, "", "plot_error"], [275, 3, 1, "", "reassign"], [275, 2, 1, "", "reference"], [275, 3, 1, "", "reference_fluxes"], [275, 3, 1, "", "spectral_index"], [275, 3, 1, "", "spectral_index_error"], [275, 2, 1, "", "tag"], [275, 3, 1, "", "to_dict"], [275, 2, 1, "", "type"], [275, 3, 1, "", "unfreeze"]], "gammapy.modeling.models.SuperExpCutoffPowerLaw4FGLSpectralModel": [[276, 3, 1, "", "__call__"], [276, 2, 1, "", "amplitude"], [276, 3, 1, "", "copy"], [276, 2, 1, "", "covariance"], [276, 2, 1, "", "default_parameters"], [276, 3, 1, "", "energy_flux"], [276, 3, 1, "", "energy_flux_error"], [276, 3, 1, "", "evaluate"], [276, 3, 1, "", "evaluate_error"], [276, 2, 1, "", "expfactor"], [276, 3, 1, "", "freeze"], [276, 3, 1, "", "from_dict"], [276, 3, 1, "", "from_parameters"], [276, 2, 1, "", "frozen"], [276, 2, 1, "", "index_1"], [276, 2, 1, "", "index_2"], [276, 3, 1, "", "integral"], [276, 3, 1, "", "integral_error"], [276, 3, 1, "", "inverse"], [276, 3, 1, "", "inverse_all"], [276, 2, 1, "", "is_norm_spectral_model"], [276, 2, 1, "", "parameters"], [276, 2, 1, "", "parameters_unique_names"], [276, 2, 1, "", "pivot_energy"], [276, 3, 1, "", "plot"], [276, 3, 1, "", "plot_error"], [276, 3, 1, "", "reassign"], [276, 2, 1, "", "reference"], [276, 3, 1, "", "reference_fluxes"], [276, 3, 1, "", "spectral_index"], [276, 3, 1, "", "spectral_index_error"], [276, 2, 1, "", "tag"], [276, 3, 1, "", "to_dict"], [276, 2, 1, "", "type"], [276, 3, 1, "", "unfreeze"]], "gammapy.modeling.models.TemplateNDSpatialModel": [[278, 3, 1, "", "__call__"], [278, 3, 1, "", "copy"], [278, 2, 1, "", "covariance"], [278, 2, 1, "", "default_parameters"], [278, 3, 1, "", "evaluate"], [278, 3, 1, "", "evaluate_geom"], [278, 2, 1, "", "evaluation_bin_size_min"], [278, 2, 1, "", "evaluation_radius"], [278, 2, 1, "", "evaluation_region"], [278, 3, 1, "", "freeze"], [278, 3, 1, "", "from_dict"], [278, 3, 1, "", "from_parameters"], [278, 3, 1, "", "from_position"], [278, 2, 1, "", "frozen"], [278, 3, 1, "", "integrate_geom"], [278, 2, 1, "", "is_energy_dependent"], [278, 2, 1, "", "map"], [278, 2, 1, "", "parameters"], [278, 2, 1, "", "parameters_unique_names"], [278, 2, 1, "", "phi_0"], [278, 3, 1, "", "plot"], [278, 3, 1, "", "plot_error"], [278, 3, 1, "", "plot_grid"], [278, 3, 1, "", "plot_interactive"], [278, 3, 1, "", "plot_position_error"], [278, 2, 1, "", "position"], [278, 2, 1, "", "position_error"], [278, 2, 1, "", "position_lonlat"], [278, 3, 1, "", "reassign"], [278, 2, 1, "", "tag"], [278, 3, 1, "", "to_dict"], [278, 2, 1, "", "type"], [278, 3, 1, "", "unfreeze"], [278, 3, 1, "", "write"]], "gammapy.modeling.models.TemplateNDSpectralModel": [[279, 3, 1, "", "__call__"], [279, 3, 1, "", "copy"], [279, 2, 1, "", "covariance"], [279, 2, 1, "", "default_parameters"], [279, 3, 1, "", "energy_flux"], [279, 3, 1, "", "energy_flux_error"], [279, 3, 1, "", "evaluate"], [279, 3, 1, "", "evaluate_error"], [279, 3, 1, "", "freeze"], [279, 3, 1, "", "from_dict"], [279, 3, 1, "", "from_parameters"], [279, 2, 1, "", "frozen"], [279, 3, 1, "", "integral"], [279, 3, 1, "", "integral_error"], [279, 3, 1, "", "inverse"], [279, 3, 1, "", "inverse_all"], [279, 2, 1, "", "is_norm_spectral_model"], [279, 2, 1, "", "map"], [279, 2, 1, "", "parameters"], [279, 2, 1, "", "parameters_unique_names"], [279, 2, 1, "", "pivot_energy"], [279, 3, 1, "", "plot"], [279, 3, 1, "", "plot_error"], [279, 3, 1, "", "reassign"], [279, 3, 1, "", "reference_fluxes"], [279, 3, 1, "", "spectral_index"], [279, 3, 1, "", "spectral_index_error"], [279, 2, 1, "", "tag"], [279, 3, 1, "", "to_dict"], [279, 2, 1, "", "type"], [279, 3, 1, "", "unfreeze"], [279, 3, 1, "", "write"]], "gammapy.modeling.models.TemplateNPredModel": [[280, 3, 1, "", "copy"], [280, 2, 1, "", "covariance"], [280, 3, 1, "", "cutout"], [280, 2, 1, "", "default_parameters"], [280, 2, 1, "", "energy_center"], [280, 3, 1, "", "evaluate"], [280, 2, 1, "", "evaluation_radius"], [280, 3, 1, "", "freeze"], [280, 3, 1, "", "from_dict"], [280, 3, 1, "", "from_parameters"], [280, 2, 1, "", "frozen"], [280, 2, 1, "", "map"], [280, 2, 1, "", "name"], [280, 2, 1, "", "parameters"], [280, 2, 1, "", "parameters_unique_names"], [280, 2, 1, "", "position"], [280, 3, 1, "", "reassign"], [280, 3, 1, "", "slice_by_energy"], [280, 2, 1, "", "spectral_model"], [280, 3, 1, "", "stack"], [280, 2, 1, "", "tag"], [280, 3, 1, "", "to_dict"], [280, 2, 1, "", "type"], [280, 3, 1, "", "unfreeze"], [280, 3, 1, "", "write"]], "gammapy.modeling.models.TemplatePhaseCurveTemporalModel": [[281, 3, 1, "", "__call__"], [281, 3, 1, "", "copy"], [281, 2, 1, "", "covariance"], [281, 2, 1, "", "default_parameters"], [281, 3, 1, "", "evaluate"], [281, 2, 1, "", "f0"], [281, 2, 1, "", "f1"], [281, 2, 1, "", "f2"], [281, 3, 1, "", "freeze"], [281, 3, 1, "", "from_dict"], [281, 3, 1, "", "from_parameters"], [281, 2, 1, "", "frozen"], [281, 3, 1, "", "integral"], [281, 2, 1, "", "is_energy_dependent"], [281, 2, 1, "", "parameters"], [281, 2, 1, "", "parameters_unique_names"], [281, 2, 1, "", "phi_ref"], [281, 3, 1, "", "plot"], [281, 3, 1, "", "plot_phasogram"], [281, 3, 1, "", "read"], [281, 3, 1, "", "reassign"], [281, 2, 1, "", "reference_time"], [281, 3, 1, "", "sample_time"], [281, 2, 1, "", "t_ref"], [281, 2, 1, "", "tag"], [281, 3, 1, "", "time_sum"], [281, 3, 1, "", "to_dict"], [281, 2, 1, "", "type"], [281, 3, 1, "", "unfreeze"], [281, 3, 1, "", "write"]], "gammapy.modeling.models.TemplateSpatialModel": [[282, 3, 1, "", "__call__"], [282, 3, 1, "", "copy"], [282, 2, 1, "", "covariance"], [282, 2, 1, "", "default_parameters"], [282, 3, 1, "", "evaluate"], [282, 3, 1, "", "evaluate_geom"], [282, 2, 1, "", "evaluation_bin_size_min"], [282, 2, 1, "", "evaluation_radius"], [282, 2, 1, "", "evaluation_region"], [282, 3, 1, "", "freeze"], [282, 3, 1, "", "from_dict"], [282, 3, 1, "", "from_parameters"], [282, 3, 1, "", "from_position"], [282, 2, 1, "", "frozen"], [282, 3, 1, "", "integrate_geom"], [282, 2, 1, "", "is_energy_dependent"], [282, 2, 1, "", "lat_0"], [282, 2, 1, "", "lon_0"], [282, 2, 1, "", "map"], [282, 2, 1, "", "map_center"], [282, 2, 1, "", "parameters"], [282, 2, 1, "", "parameters_unique_names"], [282, 2, 1, "", "phi_0"], [282, 3, 1, "", "plot"], [282, 3, 1, "", "plot_error"], [282, 3, 1, "", "plot_grid"], [282, 3, 1, "", "plot_interactive"], [282, 3, 1, "", "plot_position_error"], [282, 2, 1, "", "position"], [282, 2, 1, "", "position_error"], [282, 2, 1, "", "position_lonlat"], [282, 3, 1, "", "read"], [282, 3, 1, "", "reassign"], [282, 2, 1, "", "tag"], [282, 3, 1, "", "to_dict"], [282, 3, 1, "", "to_region"], [282, 2, 1, "", "type"], [282, 3, 1, "", "unfreeze"], [282, 3, 1, "", "write"]], "gammapy.modeling.models.TemplateSpectralModel": [[283, 3, 1, "", "__call__"], [283, 3, 1, "", "copy"], [283, 2, 1, "", "covariance"], [283, 2, 1, "", "default_parameters"], [283, 3, 1, "", "energy_flux"], [283, 3, 1, "", "energy_flux_error"], [283, 3, 1, "", "evaluate"], [283, 3, 1, "", "evaluate_error"], [283, 3, 1, "", "freeze"], [283, 3, 1, "", "from_dict"], [283, 3, 1, "", "from_parameters"], [283, 3, 1, "", "from_region_map"], [283, 2, 1, "", "frozen"], [283, 3, 1, "", "integral"], [283, 3, 1, "", "integral_error"], [283, 3, 1, "", "inverse"], [283, 3, 1, "", "inverse_all"], [283, 2, 1, "", "is_norm_spectral_model"], [283, 2, 1, "", "parameters"], [283, 2, 1, "", "parameters_unique_names"], [283, 2, 1, "", "pivot_energy"], [283, 3, 1, "", "plot"], [283, 3, 1, "", "plot_error"], [283, 3, 1, "", "read_xspec_model"], [283, 3, 1, "", "reassign"], [283, 3, 1, "", "reference_fluxes"], [283, 3, 1, "", "spectral_index"], [283, 3, 1, "", "spectral_index_error"], [283, 2, 1, "", "tag"], [283, 3, 1, "", "to_dict"], [283, 2, 1, "", "type"], [283, 3, 1, "", "unfreeze"]], "gammapy.modeling.models.TemporalModel": [[284, 3, 1, "", "__call__"], [284, 3, 1, "", "copy"], [284, 2, 1, "", "covariance"], [284, 2, 1, "", "default_parameters"], [284, 3, 1, "", "freeze"], [284, 3, 1, "", "from_dict"], [284, 3, 1, "", "from_parameters"], [284, 2, 1, "", "frozen"], [284, 3, 1, "", "integral"], [284, 2, 1, "", "is_energy_dependent"], [284, 2, 1, "", "parameters"], [284, 2, 1, "", "parameters_unique_names"], [284, 3, 1, "", "plot"], [284, 3, 1, "", "reassign"], [284, 2, 1, "", "reference_time"], [284, 3, 1, "", "sample_time"], [284, 3, 1, "", "time_sum"], [284, 3, 1, "", "to_dict"], [284, 2, 1, "", "type"], [284, 3, 1, "", "unfreeze"]], "gammapy.modeling.models.UniformPrior": [[285, 3, 1, "", "__call__"], [285, 3, 1, "", "copy"], [285, 2, 1, "", "covariance"], [285, 2, 1, "", "default_parameters"], [285, 3, 1, "", "evaluate"], [285, 3, 1, "", "freeze"], [285, 3, 1, "", "from_dict"], [285, 3, 1, "", "from_parameters"], [285, 2, 1, "", "frozen"], [285, 2, 1, "", "max"], [285, 2, 1, "", "min"], [285, 2, 1, "", "parameters"], [285, 2, 1, "", "parameters_unique_names"], [285, 3, 1, "", "reassign"], [285, 2, 1, "", "tag"], [285, 3, 1, "", "to_dict"], [285, 2, 1, "", "type"], [285, 3, 1, "", "unfreeze"], [285, 2, 1, "", "weight"]], "gammapy.modeling.models.utils": [[292, 4, 1, "", "read_hermes_cube"]], "gammapy.stats": [[295, 1, 1, "", "CashCountsStatistic"], [296, 1, 1, "", "Chi2AsymmetricErrorFitStatistic"], [297, 1, 1, "", "Chi2FitStatistic"], [298, 4, 1, "", "TimmerKonig_lightcurve_simulator"], [299, 1, 1, "", "WStatCountsStatistic"], [300, 4, 1, "", "cash"], [301, 4, 1, "", "cash_sum_cython"], [302, 4, 1, "", "compute_chisq"], [303, 4, 1, "", "compute_flux_doubling"], [304, 4, 1, "", "compute_fpp"], [305, 4, 1, "", "compute_fvar"], [306, 4, 1, "", "cstat"], [307, 4, 1, "", "discrete_correlation"], [308, 4, 1, "", "f_cash_root_cython"], [309, 4, 1, "", "get_wstat_gof_terms"], [310, 4, 1, "", "get_wstat_mu_bkg"], [311, 4, 1, "", "norm_bounds_cython"], [312, 4, 1, "", "sigma_to_ts"], [313, 4, 1, "", "structure_function"], [314, 4, 1, "", "ts_to_sigma"], [315, 4, 1, "", "weighted_cash_sum_cython"], [316, 4, 1, "", "wstat"]], "gammapy.stats.CashCountsStatistic": [[295, 3, 1, "", "compute_errn"], [295, 3, 1, "", "compute_errp"], [295, 3, 1, "", "compute_upper_limit"], [295, 2, 1, "", "error"], [295, 3, 1, "", "info_dict"], [295, 2, 1, "", "n_bkg"], [295, 2, 1, "", "n_sig"], [295, 3, 1, "", "n_sig_matching_significance"], [295, 2, 1, "", "p_value"], [295, 2, 1, "", "sqrt_ts"], [295, 2, 1, "", "stat_max"], [295, 2, 1, "", "stat_null"], [295, 3, 1, "", "sum"], [295, 2, 1, "", "ts"]], "gammapy.stats.Chi2AsymmetricErrorFitStatistic": [[296, 3, 1, "", "loglikelihood_dataset"], [296, 3, 1, "", "stat_array_dataset"], [296, 3, 1, "", "stat_sum_dataset"]], "gammapy.stats.Chi2FitStatistic": [[297, 3, 1, "", "loglikelihood_dataset"], [297, 3, 1, "", "stat_array_dataset"], [297, 3, 1, "", "stat_sum_dataset"]], "gammapy.stats.WStatCountsStatistic": [[299, 3, 1, "", "compute_errn"], [299, 3, 1, "", "compute_errp"], [299, 3, 1, "", "compute_upper_limit"], [299, 2, 1, "", "error"], [299, 3, 1, "", "info_dict"], [299, 2, 1, "", "n_bkg"], [299, 2, 1, "", "n_sig"], [299, 3, 1, "", "n_sig_matching_significance"], [299, 2, 1, "", "p_value"], [299, 2, 1, "", "sqrt_ts"], [299, 2, 1, "", "stat_max"], [299, 2, 1, "", "stat_null"], [299, 3, 1, "", "sum"], [299, 2, 1, "", "ts"]], "gammapy.utils": [[13, 0, 0, "-", "cluster"], [13, 0, 0, "-", "coordinates"], [13, 0, 0, "-", "fits"], [13, 0, 0, "-", "integrate"], [13, 0, 0, "-", "interpolation"], [13, 0, 0, "-", "parallel"], [13, 0, 0, "-", "random"], [13, 0, 0, "-", "regions"], [13, 0, 0, "-", "scripts"], [13, 0, 0, "-", "table"], [13, 0, 0, "-", "testing"], [13, 0, 0, "-", "time"], [13, 0, 0, "-", "units"]], "gammapy.utils.cluster": [[317, 4, 1, "", "hierarchical_clustering"], [318, 4, 1, "", "standard_scaler"]], "gammapy.utils.coordinates": [[319, 5, 1, "", "D_SUN_TO_GALACTIC_CENTER"], [320, 1, 1, "", "FoVAltAzFrame"], [321, 1, 1, "", "FoVICRSFrame"], [322, 4, 1, "", "cartesian"], [323, 4, 1, "", "fov_to_sky"], [324, 4, 1, "", "galactic"], [325, 4, 1, "", "motion_since_birth"], [326, 4, 1, "", "polar"], [327, 4, 1, "", "sky_to_fov"], [328, 4, 1, "", "velocity_glon_glat"]], "gammapy.utils.coordinates.FoVAltAzFrame": [[320, 2, 1, "", "T"], [320, 2, 1, "", "cache"], [320, 2, 1, "", "cartesian"], [320, 3, 1, "", "copy"], [320, 2, 1, "", "cylindrical"], [320, 2, 1, "", "data"], [320, 2, 1, "", "default_differential"], [320, 2, 1, "", "default_representation"], [320, 3, 1, "", "diagonal"], [320, 2, 1, "", "differential_type"], [320, 3, 1, "", "flatten"], [320, 2, 1, "", "frame_attributes"], [320, 2, 1, "", "frame_specific_representation_info"], [320, 3, 1, "", "get_frame_attr_defaults"], [320, 3, 1, "", "get_frame_attr_names"], [320, 3, 1, "", "get_representation_cls"], [320, 3, 1, "", "get_representation_component_names"], [320, 3, 1, "", "get_representation_component_units"], [320, 2, 1, "", "has_data"], [320, 3, 1, "", "is_equivalent_frame"], [320, 3, 1, "", "is_frame_attr_default"], [320, 3, 1, "", "is_transformable_to"], [320, 2, 1, "", "isscalar"], [320, 2, 1, "", "location"], [320, 2, 1, "", "name"], [320, 2, 1, "", "ndim"], [320, 2, 1, "", "obstime"], [320, 2, 1, "", "origin"], [320, 2, 1, "", "proper_motion"], [320, 2, 1, "", "radial_velocity"], [320, 3, 1, "", "ravel"], [320, 3, 1, "", "realize_frame"], [320, 3, 1, "", "replicate"], [320, 3, 1, "", "replicate_without_data"], [320, 3, 1, "", "represent_as"], [320, 2, 1, "", "representation_component_names"], [320, 2, 1, "", "representation_component_units"], [320, 2, 1, "", "representation_info"], [320, 2, 1, "", "representation_type"], [320, 3, 1, "", "reshape"], [320, 3, 1, "", "separation"], [320, 3, 1, "", "separation_3d"], [320, 3, 1, "", "set_representation_cls"], [320, 2, 1, "", "shape"], [320, 2, 1, "", "size"], [320, 2, 1, "", "spherical"], [320, 2, 1, "", "sphericalcoslat"], [320, 3, 1, "", "squeeze"], [320, 3, 1, "", "swapaxes"], [320, 3, 1, "", "take"], [320, 3, 1, "", "transform_to"], [320, 3, 1, "", "transpose"], [320, 2, 1, "", "velocity"]], "gammapy.utils.coordinates.FoVICRSFrame": [[321, 2, 1, "", "T"], [321, 2, 1, "", "cache"], [321, 2, 1, "", "cartesian"], [321, 3, 1, "", "copy"], [321, 2, 1, "", "cylindrical"], [321, 2, 1, "", "data"], [321, 2, 1, "", "default_differential"], [321, 2, 1, "", "default_representation"], [321, 3, 1, "", "diagonal"], [321, 2, 1, "", "differential_type"], [321, 3, 1, "", "flatten"], [321, 2, 1, "", "frame_attributes"], [321, 2, 1, "", "frame_specific_representation_info"], [321, 3, 1, "", "get_frame_attr_defaults"], [321, 3, 1, "", "get_frame_attr_names"], [321, 3, 1, "", "get_representation_cls"], [321, 3, 1, "", "get_representation_component_names"], [321, 3, 1, "", "get_representation_component_units"], [321, 2, 1, "", "has_data"], [321, 3, 1, "", "is_equivalent_frame"], [321, 3, 1, "", "is_frame_attr_default"], [321, 3, 1, "", "is_transformable_to"], [321, 2, 1, "", "isscalar"], [321, 2, 1, "", "name"], [321, 2, 1, "", "ndim"], [321, 2, 1, "", "origin"], [321, 2, 1, "", "proper_motion"], [321, 2, 1, "", "radial_velocity"], [321, 3, 1, "", "ravel"], [321, 3, 1, "", "realize_frame"], [321, 3, 1, "", "replicate"], [321, 3, 1, "", "replicate_without_data"], [321, 3, 1, "", "represent_as"], [321, 2, 1, "", "representation_component_names"], [321, 2, 1, "", "representation_component_units"], [321, 2, 1, "", "representation_info"], [321, 2, 1, "", "representation_type"], [321, 3, 1, "", "reshape"], [321, 3, 1, "", "separation"], [321, 3, 1, "", "separation_3d"], [321, 3, 1, "", "set_representation_cls"], [321, 2, 1, "", "shape"], [321, 2, 1, "", "size"], [321, 2, 1, "", "spherical"], [321, 2, 1, "", "sphericalcoslat"], [321, 3, 1, "", "squeeze"], [321, 3, 1, "", "swapaxes"], [321, 3, 1, "", "take"], [321, 3, 1, "", "transform_to"], [321, 3, 1, "", "transpose"], [321, 2, 1, "", "velocity"]], "gammapy.utils.fits": [[329, 1, 1, "", "HDULocation"], [330, 1, 1, "", "LazyFitsData"], [331, 4, 1, "", "earth_location_from_dict"]], "gammapy.utils.fits.HDULocation": [[329, 3, 1, "", "get_hdu"], [329, 3, 1, "", "info"], [329, 3, 1, "", "load"], [329, 3, 1, "", "path"]], "gammapy.utils.integrate": [[332, 4, 1, "", "trapz_loglog"]], "gammapy.utils.interpolation": [[333, 1, 1, "", "ScaledRegularGridInterpolator"], [334, 4, 1, "", "interpolate_profile"], [335, 4, 1, "", "interpolation_scale"]], "gammapy.utils.interpolation.ScaledRegularGridInterpolator": [[333, 3, 1, "", "__call__"]], "gammapy.utils.parallel": [[336, 5, 1, "", "BACKEND_DEFAULT"], [337, 5, 1, "", "METHOD_DEFAULT"], [338, 5, 1, "", "METHOD_KWARGS_DEFAULT"], [339, 5, 1, "", "N_JOBS_DEFAULT"], [340, 5, 1, "", "POOL_KWARGS_DEFAULT"], [341, 1, 1, "", "multiprocessing_manager"], [342, 4, 1, "", "run_multiprocessing"]], "gammapy.utils.random": [[343, 1, 1, "", "InverseCDFSampler"], [344, 4, 1, "", "draw"], [345, 4, 1, "", "get_random_state"], [346, 4, 1, "", "normalize"], [347, 4, 1, "", "pdf"], [348, 4, 1, "", "sample_powerlaw"], [349, 4, 1, "", "sample_sphere"], [350, 4, 1, "", "sample_sphere_distance"], [351, 4, 1, "", "sample_times"]], "gammapy.utils.random.InverseCDFSampler": [[343, 3, 1, "", "sample"], [343, 3, 1, "", "sample_axis"]], "gammapy.utils.regions": [[352, 4, 1, "", "compound_region_to_regions"], [353, 4, 1, "", "make_concentric_annulus_sky_regions"], [354, 4, 1, "", "make_orthogonal_rectangle_sky_regions"], [355, 4, 1, "", "region_to_frame"], [356, 4, 1, "", "regions_to_compound_region"]], "gammapy.utils.scripts": [[357, 4, 1, "", "from_yaml"], [358, 4, 1, "", "get_images_paths"], [359, 4, 1, "", "make_path"], [360, 4, 1, "", "read_yaml"], [361, 4, 1, "", "recursive_merge_dicts"], [362, 4, 1, "", "to_yaml"], [363, 4, 1, "", "write_yaml"]], "gammapy.utils.table": [[364, 4, 1, "", "hstack_columns"], [365, 4, 1, "", "table_row_to_dict"], [366, 4, 1, "", "table_standardise_units_copy"], [367, 4, 1, "", "table_standardise_units_inplace"]], "gammapy.utils.testing": [[368, 1, 1, "", "Checker"], [369, 4, 1, "", "assert_quantity_allclose"], [370, 4, 1, "", "assert_skycoord_allclose"], [371, 4, 1, "", "assert_time_allclose"], [372, 4, 1, "", "mpl_plot_check"], [373, 4, 1, "", "requires_data"], [374, 4, 1, "", "requires_dependency"]], "gammapy.utils.testing.Checker": [[368, 3, 1, "", "run"]], "gammapy.utils.time": [[375, 4, 1, "", "absolute_time"], [376, 4, 1, "", "time_ref_from_dict"], [377, 4, 1, "", "time_ref_to_dict"], [378, 4, 1, "", "time_relative_to_ref"]], "gammapy.utils.units": [[379, 4, 1, "", "standardise_unit"], [380, 4, 1, "", "unit_from_fits_image_hdu"], [381, 4, 1, "", "wrap_at"]], "gammapy.visualization": [[382, 1, 1, "", "MapPanelPlotter"], [383, 4, 1, "", "add_colorbar"], [384, 4, 1, "", "annotate_heatmap"], [385, 4, 1, "", "colormap_hess"], [386, 4, 1, "", "colormap_milagro"], [387, 4, 1, "", "plot_contour_line"], [388, 4, 1, "", "plot_distribution"], [389, 4, 1, "", "plot_heatmap"], [390, 4, 1, "", "plot_map_rgb"], [391, 4, 1, "", "plot_npred_signal"], [392, 4, 1, "", "plot_spectrum_datasets_off_regions"], [393, 4, 1, "", "plot_theta_squared_table"]], "gammapy.visualization.MapPanelPlotter": [[382, 3, 1, "", "plot"], [382, 3, 1, "", "plot_panel"]]}, "objnames": {"0": ["py", "module", "Python module"], "1": ["py", "class", "Python class"], "2": ["py", "attribute", "Python attribute"], "3": ["py", "method", "Python method"], "4": ["py", "function", "Python function"], "5": ["py", "data", "Python data"], "6": ["std", "cmdoption", "program option"]}, "objtypes": {"0": "py:module", "1": "py:class", "2": "py:attribute", "3": "py:method", "4": "py:function", "5": "py:data", "6": "std:cmdoption"}, "terms": {"": [16, 19, 20, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 41, 51, 52, 53, 67, 82, 83, 84, 86, 87, 88, 91, 92, 93, 96, 101, 103, 104, 105, 106, 107, 110, 111, 112, 127, 128, 129, 133, 137, 145, 151, 152, 153, 157, 177, 183, 204, 210, 224, 228, 229, 234, 236, 237, 241, 242, 244, 245, 246, 248, 252, 254, 255, 259, 261, 262, 269, 270, 271, 274, 275, 276, 281, 284, 286, 287, 305, 320, 321, 329, 379, 384, 385, 392, 395, 396, 398, 400, 405, 406, 407, 409, 411, 412, 413, 414, 416, 419, 422, 426, 427, 428, 430, 431, 433, 434, 435, 436, 464, 465, 467, 468, 469, 470, 472, 474, 476, 477, 478, 480, 481, 483, 484, 485, 486, 487, 489, 492, 494, 495, 496, 497, 499, 500, 501, 502, 503, 504, 505, 507, 508, 509, 510, 511, 512, 513, 514, 515, 517, 518, 519, 520, 522, 523, 524, 527, 530, 532, 538, 539, 540, 541, 544, 546, 551, 563, 564, 565, 566, 568, 569, 570, 571, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 596, 597, 598, 599, 600, 601, 602, 603, 604, 608, 609, 610, 611, 613], "0": [11, 13, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 31, 33, 34, 35, 38, 39, 42, 47, 50, 51, 52, 53, 67, 71, 75, 77, 83, 85, 88, 89, 90, 91, 92, 95, 97, 102, 104, 105, 106, 107, 110, 111, 112, 113, 114, 115, 116, 118, 121, 123, 125, 126, 127, 128, 129, 130, 131, 133, 135, 136, 137, 145, 146, 148, 151, 152, 153, 154, 156, 157, 158, 159, 161, 164, 165, 166, 167, 168, 169, 170, 172, 174, 177, 180, 181, 185, 190, 195, 196, 197, 198, 199, 200, 201, 202, 205, 206, 207, 208, 209, 210, 211, 212, 213, 215, 218, 220, 222, 223, 224, 225, 227, 228, 229, 230, 231, 232, 234, 235, 236, 237, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 251, 254, 255, 257, 258, 259, 260, 261, 262, 266, 267, 268, 269, 270, 271, 273, 274, 275, 276, 278, 279, 281, 282, 283, 284, 285, 291, 293, 295, 298, 299, 300, 303, 304, 305, 306, 307, 312, 314, 317, 318, 320, 321, 339, 343, 350, 351, 371, 383, 385, 386, 390, 392, 395, 396, 399, 402, 406, 407, 409, 410, 411, 412, 413, 414, 416, 418, 419, 420, 421, 422, 423, 424, 425, 427, 431, 434, 435, 463, 464, 465, 467, 468, 469, 470, 472, 473, 474, 475, 476, 477, 478, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 491, 492, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 523, 526, 528, 529, 530, 532, 533, 534, 538, 540, 544, 548, 550, 553, 555, 556, 557, 558, 559, 561, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 609, 610, 611, 612, 614], "00": [67, 88, 89, 90, 92, 103, 201, 320, 321, 396, 410, 467, 468, 469, 470, 473, 474, 475, 476, 477, 478, 480, 482, 483, 484, 487, 488, 491, 492, 495, 496, 498, 499, 502, 503, 504, 505, 507, 508, 509, 511, 512, 513, 515, 516, 518, 519, 520, 523, 526, 528, 529, 530, 532, 533, 561, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 613], "000": [67, 88, 89, 92, 128, 410, 469, 472, 474, 475, 477, 478, 483, 484, 485, 487, 488, 492, 495, 496, 499, 502, 503, 504, 509, 511, 512, 513, 519, 528, 529, 532, 561, 614], "0000": [422, 513], "000000": 502, "000000000000002": 509, "00000000000001": 477, "00000000000003": 497, "00000000000004": 502, "0000000000016": 86, "0000000000018": 95, "000000000002": 487, "0000000000030": 513, "0000000000038": 513, "0000000000058": 513, "0000000000064": 487, "000000000007": 502, "0000000000079": 513, "00000000001": 502, "0000000000200": 513, "0000000000280": 513, "0000000000339": 513, "0000000000341": 513, "0000000000346": 513, "0000000000443": 513, "0000000000505": 513, "0000000000535": 513, "0000000000550": 513, "0000000000590": 513, "0000000000767": 513, "0000000000898": 513, "00000000e": [505, 507], "00000001": 86, "0000000e": 507, "00000143": [396, 613], "0000e": [103, 469, 470, 474, 475, 476, 477, 480, 483, 492, 495, 496, 505, 512, 515, 530, 593], "0001": [19, 20, 26, 224, 225, 228, 232, 234, 235, 236, 241, 247, 248, 251, 255, 257, 259, 260, 261, 266, 271, 273, 274, 275, 276, 279, 283, 386, 485], "00010298": 503, "00015": 504, "000150": 472, "0002": [472, 513, 532], "00020": 472, "0002000": 472, "0003": 485, "00050": 472, "000500": 472, "0006": 472, "00074287037": [95, 488], "000742870370370241": 95, "0008": 502, "0009": 472, "000e": [469, 474, 477, 480, 483, 484, 492, 496, 502, 505, 512, 515, 530, 532, 593], "000true": 472, "001": [50, 151, 152, 153, 154, 157, 158, 159, 161, 164, 166, 168, 169, 197, 198, 200, 206, 209, 210, 371, 487, 505, 570], "0012": 513, "0013": 513, "0016288e": 507, "001e": 67, "002018": 519, "0022": 513, "0023": 513, "0025508e": 507, "0028272e": 507, "0029": 421, "002924909437196891": 529, "002e": [67, 475], "003": [497, 511, 519], "003026327991562108": 484, "003105928246293051": 529, "0033": 611, "0033685231218731e": 499, "0036925550396303": 477, "00375698": 245, "0038": 513, "004": 67, "00422666667": 500, "00449161": 251, "0046": 513, "00472179200096": 425, "00490": 485, "00490483": 485, "0049409": 518, "005": 502, "00521472221220211": 484, "005911103564621735": 486, "0064830e": 507, "00688029": 245, "007": 502, "0074": 513, "0076540e": 507, "0078": 513, "008": [492, 502, 610], "0081": 513, "008166963876141447": 486, "0081e": 492, "00889194478934663": 486, "00894": 532, "009": [499, 502], "0091": 513, "00931e": 468, "009428253484623464": 486, "00e": [83, 468, 475, 478, 487, 492, 496, 497, 499, 503, 507, 508, 513, 519, 529], "01": [39, 52, 75, 83, 88, 89, 92, 95, 104, 107, 111, 112, 114, 115, 130, 135, 137, 180, 181, 185, 195, 196, 201, 205, 208, 231, 237, 242, 244, 246, 262, 269, 320, 321, 396, 425, 434, 467, 468, 469, 474, 476, 478, 480, 483, 484, 487, 492, 496, 497, 498, 501, 502, 503, 505, 507, 508, 509, 510, 511, 512, 513, 515, 516, 519, 520, 529, 530, 532, 538, 543, 553, 555, 556, 559, 564, 566, 568, 581, 591, 597, 598, 599, 605, 610, 613], "010": 511, "010066705375548107": 425, "0103": 513, "010e": 67, "011": [312, 314, 511], "0113": 513, "011872336272724": 529, "012": 511, "0122385e": 507, "01235137e": 507, "0126": 513, "012733796525585": 514, "0132": 513, "0139252e": 507, "014": [85, 104, 107, 111, 112, 177, 475, 483, 502, 508, 529, 530, 555], "0143724": 245, "0143764": 518, "01444444": [320, 321], "01449": 83, "0145": 510, "01450": [494, 530], "0147": 513, "0148015517529894": 425, "014811633859834": 425, "0149044e": 507, "015": 502, "0151": 513, "01551196351647377": 245, "0159": 513, "0163": 485, "01648855015875024": 609, "0168": 513, "0170": 513, "01700709977114979": 500, "0173": 513, "0174": 517, "017442925431194484": 500, "018": 67, "018182745349064267": 484, "0182": 513, "0183519e": 507, "0193": 513, "0195": 513, "019672": 504, "019899368286133": 484, "01e": [177, 434, 468, 502], "01t00": [88, 92, 95, 201, 320, 321, 396, 478, 487, 613], "01t01": 92, "01t02": 92, "02": [16, 67, 83, 95, 104, 107, 111, 112, 113, 118, 165, 172, 177, 195, 196, 197, 198, 200, 202, 205, 206, 207, 208, 209, 210, 434, 467, 468, 469, 472, 473, 474, 475, 480, 481, 483, 484, 485, 486, 487, 488, 491, 492, 494, 495, 496, 497, 498, 502, 505, 507, 508, 509, 510, 511, 512, 513, 516, 519, 526, 529, 530, 532, 533, 553, 555, 556, 564, 565, 566, 572], "020": [484, 502, 504], "0202": 513, "0204081632653064": 489, "020420144596410953": 514, "021": [67, 502], "0210": 513, "0214": 513, "0215": 513, "0216": 513, "0221": 513, "0225e": 502, "02288737": 245, "023": 502, "0231": 513, "0233": 513, "023472813526874605": 529, "0239": 513, "024": 502, "02432": 502, "0247": 513, "02471554675416": 529, "024897178551308": 425, "024e": 532, "025": [502, 519], "025119120535663": 485, "026": [53, 67, 502], "02653": [478, 485], "026891": 502, "0268e": 496, "026914": 502, "027": 67, "0275": 513, "0276": 513, "028549898215494e": 425, "028854": 510, "0291": 513, "0292": 513, "029e": [469, 502], "02e": [83, 499], "02t23": 86, "03": [67, 88, 90, 92, 207, 408, 424, 467, 468, 469, 472, 484, 485, 487, 496, 502, 507, 509, 511, 513, 514, 515, 516, 521, 523, 530, 567], "0301": 513, "03034567e": 504, "031": 572, "0316": 513, "032": 502, "0322": 67, "0322775e": 507, "033": [67, 502], "033082": 587, "0331": 513, "033176650892097": 97, "0336": 513, "03383": 518, "034": 610, "0341": 513, "0342": 513, "0344": 67, "03447394e": 504, "03493": 504, "034e": 472, "035": 504, "0354700e": 507, "0356": [468, 513], "0356551": 468, "0357": 513, "036": 67, "036e": 502, "037": 511, "0373": 513, "03745318352059925": 603, "0375512e": 507, "0376": 513, "0376213e": 507, "038": 513, "03893": 504, "039": [483, 484, 504], "0391": 513, "03921700077803329": 484, "0395135e": 507, "03978226e": 512, "04": [30, 67, 95, 467, 473, 475, 477, 478, 481, 484, 487, 496, 497, 498, 502, 507, 509, 512, 513, 516, 519], "040": 474, "040e": 478, "041": 519, "0414": 478, "0415": [513, 532], "041882": 502, "042": 502, "0420": 513, "0423": 513, "0423761": 468, "042e": 502, "043": 67, "0431": 513, "04357249662280083": 474, "0436": 513, "0438": 513, "04454": 519, "0454683": 518, "0456": 513, "046": 67, "0462798e": 507, "047": 67, "0472e": 492, "0473174": 251, "0474750e": 507, "048": [483, 519], "0480": 513, "0482342e": 507, "0487": 513, "04897634344908595": 97, "048e": 67, "049": [472, 483], "04939e": 468, "049676": 502, "04d": 487, "04e": 508, "04t15": 86, "04t22": 86, "05": [19, 20, 26, 29, 42, 67, 71, 77, 88, 92, 125, 126, 128, 136, 208, 215, 224, 225, 228, 232, 234, 235, 236, 241, 247, 248, 251, 255, 257, 259, 260, 261, 266, 271, 273, 274, 275, 276, 279, 283, 353, 424, 467, 468, 469, 470, 472, 474, 478, 481, 483, 484, 485, 488, 492, 495, 501, 502, 503, 505, 507, 508, 511, 513, 515, 518, 520, 523, 529, 530, 558, 564], "050": 511, "0503641": 468, "0503e": 496, "0505949e": 507, "0506": 513, "05075": 507, "0508075688763": 502, "05088486522436142": 474, "050e": 478, "051": 511, "0516e": 496, "0518": 513, "052": 502, "0520119e": 507, "0521468441366": 486, "0522": 513, "05227": 502, "0523": 513, "053": 483, "053212009682775": 514, "053e": 496, "054833602905273e": 484, "0548e": 484, "054e": 67, "055": 502, "055e": 472, "0560": 532, "056130": 502, "0562": 513, "05628243": 532, "05637e": 468, "05673": 532, "057": 502, "05762513693893088": 484, "0578": 513, "058": 67, "058201": 502, "05853": 478, "0586": 513, "059": 67, "05901956e": 507, "0598579": 468, "05deg": 208, "06": [106, 127, 151, 152, 153, 154, 155, 157, 158, 159, 161, 164, 166, 168, 169, 196, 197, 198, 200, 205, 206, 208, 209, 210, 467, 475, 480, 481, 482, 483, 484, 485, 502, 503, 505, 507, 508, 509, 512, 513, 519, 523, 529, 563, 564, 565, 566, 567, 568, 569, 570, 571, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 596, 597, 598, 599, 600, 601, 602, 603, 604], "0603": 513, "061": 532, "061224489795904": 489, "0615": 513, "0617": 513, "062": [487, 511, 512, 519], "0625": 512, "0626": 513, "0628": 532, "063": 67, "0631757e": 507, "06334488877417636": 514, "064108e": 502, "0643": 513, "06430": 485, "0643032": 485, "065071": 502, "065119": 532, "0656": 513, "066": 474, "066442": 502, "0669": 513, "067": 478, "0673": 513, "068245": 502, "0689": 505, "068e": 472, "069": 67, "0690": 513, "069191": 600, "07": [104, 177, 369, 410, 434, 467, 472, 473, 475, 483, 485, 495, 497, 499, 502, 503, 507, 509, 511, 513, 519, 563, 565, 570], "070483": 502, "0706": 513, "070876": 601, "0711412": 468, "072": 67, "0721": 513, "0724e": 496, "073": 67, "0739282e": 507, "074": [502, 519], "0741": 513, "0743": 513, "07443": 426, "07454639": 485, "07455": 485, "0746": 532, "0748": [502, 513, 532], "075": 67, "0750": 513, "07512322002655547": 484, "0756e": 468, "076": 532, "0760": 513, "077": 468, "0771": 513, "0774": 513, "078": 472, "0780": 513, "0781": 513, "0786": 513, "07871368968": 503, "0791": 513, "07943648658692837": 514, "07944657408": 502, "079464e": 532, "0799109224230051": 514, "07e": 497, "08": [86, 390, 434, 467, 473, 476, 477, 480, 481, 483, 484, 491, 492, 502, 503, 505, 508, 513, 519, 523, 529, 530, 564, 568, 571, 574], "0800792e": 507, "0801": 513, "0804": 513, "08075": 507, "08081469527497996": 477, "08088": 183, "080e": 478, "0811": 513, "0811551760882139": 514, "08142": 501, "081632653061217": 489, "08191603310406206": 514, "08192": 485, "08192101": 485, "082": 502, "0823": 513, "082691868487906": 500, "08269984": 532, "082e": 128, "083": [67, 502], "0832": 513, "08328557573258877": 514, "0833333358168602": 474, "0833333432674408": 474, "08388624433428049": 514, "084": [67, 513, 605], "08419871859424323": 513, "0843": 513, "08447355125099419": 514, "0845515": 468, "085": 502, "08529426": 98, "0855013383552432": 514, "0859123667444601e": 499, "08675": 503, "086e": 502, "087": 532, "0870": 513, "08795162606984375": 514, "087e": 502, "088742": 502, "08880368117243051": 514, "08894569035619496": 514, "089": 141, "0894640e": 507, "0897868126630783": 514, "089881": 502, "0899": 513, "08e": [492, 511], "09": [33, 128, 177, 467, 469, 475, 478, 481, 483, 502, 503, 507, 508, 513, 516, 529, 530, 532, 579, 586, 611], "0902437e": 507, "0907128e": 507, "09096": 513, "090e": 474, "0910": [260, 261], "0911": 513, "0914": [52, 53], "093477": 485, "09348": 485, "09375": 499, "0939": 513, "0942": 513, "09426693227142095": 514, "0945": 513, "094834": 502, "09485": 513, "095": 492, "0950": 513, "095232": 502, "09562941": 532, "095707": 532, "096": 475, "0960": 532, "09607": 532, "09610314778983592": 514, "09623312838375568": 514, "0968": 513, "0970545781941743": 513, "09740295372903346": 514, "097e": 67, "0980": 513, "0986": 513, "0987": 513, "0988": 513, "0989": 513, "098903": 502, "099": [467, 605], "09907043184188653": 514, "09e": 508, "0b100": 339, "0d": [130, 489, 503, 568, 614], "0e": [419, 475, 477, 478, 480, 484, 487, 492, 496, 499, 503, 504, 507, 509, 511, 512, 513, 519, 529, 563, 564, 565, 566, 568, 569, 570, 571, 575, 576, 578, 582, 584, 585, 586, 587, 589, 590, 591, 592, 593, 596, 597, 598, 599, 600, 601, 602, 603, 604], "0f": [505, 519, 532], "0rc": 427, "0rc1": 427, "0true": 485, "0x105fd0cf8": 395, "0x105fe3b70": 395, "0x129602550": 395, "0x7f4a0f316c40": 514, "0x7f4a0f316d60": 514, "0x7f4a15e52fa0": 503, "0x7f4a15ed3fd0": 514, "0x7f4a160be310": 514, "0x7f4a16424580": 512, "0x7f4a1650c190": 489, "0x7f4a1650c280": 489, "0x7f4a23c77910": 593, "0x7f4a24e0e820": 515, "0x7f4a24e3af10": 518, "0x7f4a250c4a60": 503, "0x7f4a250e39a0": 500, "0x7f4a2518b7c0": 518, "0x7f4a251a2b50": 518, "0x7f4a253dba00": 518, "0x7f4a258a8850": 503, "0x7f4a25a6a370": 503, "1": [16, 17, 18, 19, 20, 21, 22, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 35, 36, 37, 38, 39, 40, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 57, 59, 63, 66, 67, 71, 72, 74, 75, 77, 78, 83, 86, 88, 89, 91, 92, 96, 97, 102, 103, 104, 107, 111, 112, 113, 117, 118, 120, 121, 125, 128, 129, 130, 131, 133, 134, 137, 145, 146, 151, 152, 153, 154, 156, 157, 158, 159, 164, 165, 166, 167, 168, 170, 172, 177, 180, 190, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 205, 206, 207, 208, 209, 210, 215, 218, 220, 224, 225, 227, 228, 229, 230, 231, 232, 234, 235, 236, 237, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 251, 252, 254, 255, 257, 259, 260, 261, 262, 266, 267, 268, 269, 270, 271, 273, 274, 275, 276, 279, 281, 282, 283, 284, 285, 286, 287, 293, 295, 298, 299, 303, 304, 312, 314, 317, 318, 320, 321, 332, 333, 339, 340, 341, 350, 351, 353, 354, 379, 382, 385, 386, 390, 392, 395, 396, 398, 399, 402, 403, 405, 406, 407, 409, 410, 412, 416, 418, 419, 420, 421, 422, 423, 427, 428, 431, 434, 438, 439, 441, 442, 446, 448, 449, 450, 453, 454, 455, 456, 457, 458, 459, 468, 469, 470, 472, 474, 475, 476, 477, 478, 480, 481, 483, 484, 485, 486, 487, 488, 489, 492, 494, 495, 496, 497, 499, 500, 501, 502, 503, 504, 505, 507, 508, 509, 510, 511, 512, 514, 517, 518, 519, 520, 521, 526, 529, 530, 532, 534, 538, 539, 540, 543, 544, 546, 548, 549, 550, 551, 552, 555, 556, 557, 558, 559, 563, 564, 565, 566, 567, 568, 569, 570, 571, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 596, 597, 598, 599, 600, 601, 602, 603, 604, 607, 608, 610, 611, 612, 614], "10": [13, 16, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 50, 51, 52, 53, 54, 66, 67, 77, 86, 88, 89, 90, 92, 102, 104, 105, 107, 110, 111, 112, 113, 118, 121, 125, 126, 128, 129, 130, 134, 136, 137, 139, 145, 146, 151, 152, 154, 156, 158, 159, 164, 165, 166, 167, 168, 170, 177, 183, 196, 197, 198, 200, 202, 205, 206, 207, 208, 209, 210, 215, 218, 220, 222, 231, 234, 247, 248, 249, 251, 252, 274, 275, 287, 298, 312, 314, 339, 341, 351, 383, 388, 390, 392, 395, 396, 398, 399, 400, 401, 402, 403, 404, 405, 406, 411, 412, 418, 419, 420, 424, 425, 428, 434, 439, 441, 452, 454, 457, 461, 463, 467, 468, 469, 470, 474, 475, 476, 477, 478, 480, 481, 483, 484, 485, 486, 487, 488, 489, 492, 494, 495, 496, 497, 499, 501, 502, 503, 504, 505, 507, 508, 509, 510, 511, 512, 513, 515, 516, 517, 518, 519, 520, 521, 529, 530, 532, 534, 540, 544, 550, 553, 555, 556, 557, 558, 569, 570, 574, 576, 579, 580, 582, 583, 584, 585, 587, 588, 590, 591, 592, 593, 597, 598, 599, 609, 610, 613, 614], "100": [19, 20, 26, 46, 47, 74, 77, 95, 128, 135, 137, 156, 157, 167, 208, 210, 224, 225, 228, 229, 232, 234, 235, 236, 237, 241, 242, 244, 245, 246, 247, 248, 251, 255, 257, 259, 260, 261, 262, 266, 269, 271, 273, 274, 275, 276, 279, 281, 283, 284, 287, 289, 351, 395, 396, 398, 403, 414, 425, 437, 468, 470, 474, 477, 483, 484, 485, 487, 488, 489, 492, 497, 500, 501, 502, 503, 504, 507, 508, 509, 512, 513, 515, 518, 519, 520, 532, 536, 538, 539, 540, 544, 555, 558, 559, 563, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 610], "1000": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 77, 198, 203, 222, 395, 398, 472, 502, 503, 507, 515, 519, 532, 558], "10000": [17, 18, 21, 22, 23, 24, 25, 27, 105, 110, 156, 167, 170, 180, 502, 519], "100000": [74, 502, 529], "1000000": [51, 52, 54, 502, 593], "10000000": 593, "100000000000": 504, "10000_100000_wtct": 77, "1000_3000_wtct": 77, "1000e": 515, "1001": [456, 487, 488, 513], "1002": 456, "10045": [65, 276, 592], "10049": 468, "1005": 513, "1006": [456, 513], "100_300_wtct": 77, "101": [442, 483, 497, 502, 513], "1011": 513, "1012": [501, 513], "1013": 457, "1014": [457, 513], "101430": 497, "1015": 496, "1017": 513, "10172": 512, "102": [177, 475, 478, 513, 610, 611], "1020": 513, "102040816326531": 489, "1021": [457, 513], "1025": 457, "1026": [457, 513], "10262943822890519": [97, 514], "1027": 457, "1028": 513, "102877228833871": 514, "1029": [457, 513], "10295505": 532, "102e": 502, "103": [437, 460, 513], "1030": 513, "103000133": 520, "1031": [457, 513], "1032": 457, "10325325433327517": 529, "1033": 513, "1034": [513, 532], "1035": [457, 513], "10350020170706745": 475, "1036": 478, "1038": 457, "1039": 513, "104": [483, 485, 513], "1040": [457, 513], "10409": 485, "10409446": 485, "10416667": 499, "1043": 457, "104317": [104, 503, 511], "1044": 478, "1045": [457, 513], "1046": 413, "1047": 513, "10470702368766069": 514, "10477": 532, "105": [82, 513, 521], "1050": 513, "1051": 457, "1052": 502, "1053": 457, "1054": [457, 513], "1055": 513, "1057": 457, "10592": 613, "105953": 532, "105e": 478, "106": [467, 477, 496, 513, 605], "1061971e": 507, "1062": 513, "106217": 83, "1062535e": 507, "1064": [502, 513], "1065": [457, 496], "1066": 513, "1067": [457, 513], "1068": 513, "1069": [457, 513], "107": [468, 509, 513], "1070": [457, 532], "1071": 513, "1072": 513, "1072542e": 507, "1073": [457, 513], "10752883769757363": 514, "1076": [457, 513], "1077": 513, "1078": 457, "107e": [478, 502], "108": [454, 467, 513, 605], "1080": 513, "108034597491956e": 512, "108043": 483, "1081": 513, "1082": 457, "1083": 457, "1084": [457, 513], "1085": 457, "1085000": 483, "1087": 457, "1088": 457, "1089": 457, "109": [437, 467, 469, 509, 513, 605], "1090": 457, "1092": [457, 478], "1093": [457, 478], "1096": 513, "1098": 457, "1099": 513, "1099306e": 507, "109e": 485, "10e": [177, 502, 507], "10k": 198, "10th": [423, 436], "11": [19, 20, 67, 88, 92, 95, 128, 129, 133, 134, 218, 224, 227, 228, 231, 232, 234, 235, 236, 237, 240, 241, 242, 243, 244, 245, 246, 247, 248, 251, 258, 259, 260, 261, 262, 266, 267, 268, 269, 271, 274, 275, 276, 281, 282, 353, 399, 402, 404, 412, 420, 424, 437, 438, 459, 467, 468, 469, 470, 472, 474, 475, 476, 477, 478, 480, 481, 482, 483, 485, 487, 488, 489, 492, 494, 495, 496, 497, 499, 502, 503, 504, 505, 508, 510, 511, 513, 515, 517, 519, 529, 530, 532, 533, 555, 557, 574, 580, 611], "110": [502, 513, 519], "1100": [457, 474, 513], "110000": [503, 508], "1101": 513, "1102": [457, 513], "1102e": 470, "1103": 457, "110380": [83, 411, 480, 483, 485, 518], "1104": [457, 513], "1105": [457, 513], "1106": 513, "1107": 457, "1108": 457, "1109": 513, "111": [383, 402, 457, 467, 483, 502, 513, 605], "1110": [457, 513], "1111": [139, 502, 532], "111140": [411, 480, 483, 485], "111159": [411, 480, 483, 485, 518], "1112": 513, "1113": 513, "11132": 64, "1114": 513, "1115": [457, 513], "111507416": 497, "111630": [90, 497, 518], "1117": 513, "111797": 502, "1118": 513, "11184": [65, 275, 591], "112": [468, 474, 513], "11208": 65, "1121": 513, "1122": 513, "11220184543": 504, "1123": 513, "1125": 513, "1127": 457, "1128": 513, "1129": 513, "11291820875721864": 514, "113": [513, 532], "1130": 513, "1131": [403, 481, 513], "1132": 513, "1133": [457, 513], "1134": 457, "1136": 457, "1139": 513, "114": 513, "1140": [312, 314, 513], "1142": 513, "1143": 513, "1144": 513, "114416978060042": 496, "1145": 513, "115": [67, 513], "1150": [457, 513], "11517": 532, "1154": 513, "1155": 513, "11553325504064559": [97, 514], "1156": 513, "11587179071752986": 97, "115980": 582, "116": [437, 469, 470, 513], "1160": 502, "1161": 513, "11610": 532, "1162": 457, "1162290849837497e": 494, "1163": 513, "1164": 513, "1166": 457, "1167": [402, 409, 513], "1169": [457, 513], "116e": 67, "117": [437, 513, 574], "1170": [457, 513], "1172": 409, "1173": 513, "1173775": 502, "1175": 513, "1176": 457, "1177": 513, "117877e": 502, "1179": 457, "118": [483, 513], "1180": 513, "1182": 513, "1183": 457, "118355": 502, "1188": 513, "119": [469, 478, 483, 513], "1190": 457, "1191": 513, "1192": 513, "1193": 513, "1194": 513, "119432": 468, "1195": [457, 513], "1199": 513, "119e": 474, "11af4c": 437, "11e": 502, "12": [17, 38, 42, 67, 86, 88, 92, 114, 115, 128, 167, 170, 196, 197, 198, 200, 206, 209, 210, 224, 228, 234, 236, 241, 248, 259, 261, 271, 274, 275, 276, 287, 399, 401, 402, 403, 404, 406, 407, 412, 415, 416, 419, 425, 437, 441, 442, 443, 455, 460, 467, 468, 469, 472, 474, 475, 476, 477, 478, 480, 483, 484, 485, 486, 487, 491, 492, 494, 495, 496, 499, 500, 502, 503, 504, 505, 509, 511, 512, 513, 515, 519, 529, 532, 544, 555, 558, 559, 563, 564, 565, 566, 568, 569, 570, 571, 574, 575, 576, 578, 581, 582, 585, 586, 587, 589, 590, 591, 592, 596, 597, 598, 599, 600, 601, 602, 603, 604, 614], "120": [53, 410, 476, 513, 519, 567], "1200": 513, "120000": 480, "1201": 513, "120154": 502, "1204": 457, "1206": 513, "1207": [457, 513], "1209": 513, "120e": [67, 532], "121": [67, 485, 511, 614], "1210": [457, 513], "1211": [457, 502], "121241": 483, "1213": 513, "1214": 513, "12148": 478, "1215": 457, "1216": 470, "1217": 513, "1218": 513, "12186": 532, "1219": [502, 513], "122": [67, 437, 472, 511, 513, 614], "1220": 457, "1221": 513, "1222": 513, "1224": 513, "1224489795918373": 489, "1226": [457, 513], "1227": 457, "12276676166802643": 514, "122e": 484, "123": [88, 92, 407, 467, 478, 513, 605], "1230": 513, "1231": 458, "1232": 513, "1234": [89, 513], "123456789": [201, 396, 613], "1235": 457, "1237": 403, "1238": 457, "123890826": 86, "123892513": 86, "1239": 400, "123944": 83, "123e": 478, "124": [407, 478, 502, 511, 513], "1240": [457, 513], "1241": 513, "12423250e": 507, "1243": 532, "1244": 513, "1244969200533408": 318, "1246": [457, 513], "1248": 513, "12493874": 507, "124e": 67, "125": [67, 128, 474, 485, 509, 519, 532, 610], "1250": 513, "1251": 513, "12518": 484, "12525306": 500, "12546": 65, "1255": 513, "1256": 513, "1258925411": 504, "126": [67, 467, 472, 502, 505, 513, 605], "1260": 513, "1262": 513, "1264500e": 507, "1265": 513, "126585": 468, "1266": 457, "1268": 457, "12688": 83, "1269": 513, "1269263e": 507, "12697": 484, "127": [478, 513], "1270": 513, "1272": 513, "1273": 513, "12751": 468, "1277": 401, "1278": [402, 513], "1279": 513, "12794487": 512, "128": [437, 497, 513, 534], "1280": 513, "12809": [104, 503, 511], "1281": 457, "12816": 532, "1284": 513, "1285": 513, "12856": 519, "1287": [457, 513], "1289": [457, 513], "128e": 472, "129": [463, 513, 530], "1290": [457, 513], "1291": 457, "1293": 513, "1294": 457, "1298": 513, "1299": 502, "12nan5": 472, "12r_": 53, "12th": [421, 436], "13": [67, 103, 104, 107, 128, 207, 317, 399, 400, 404, 409, 414, 424, 442, 468, 469, 470, 472, 474, 475, 476, 477, 478, 480, 481, 483, 484, 485, 486, 487, 488, 489, 492, 494, 495, 496, 497, 499, 501, 502, 503, 504, 505, 508, 509, 510, 511, 512, 513, 515, 517, 518, 519, 520, 521, 529, 530, 532, 540, 584, 593, 611], "130": [513, 555], "1300": [457, 513], "1301": 513, "1301v": 38, "13030": 532, "1304": 513, "1305": 457, "1306": 513, "13061": 512, "131": 472, "1310": 532, "1312": 457, "1313": 513, "13133": 532, "1315": 513, "13152": 485, "1316": 457, "1317": [458, 513], "1318": 457, "1319": [95, 457], "13197": 483, "132": [478, 513], "1320": 513, "13226": 532, "1323": 513, "1323e": 484, "132472": 485, "1329": 513, "132e": 474, "133": 513, "1331": 458, "1332": 513, "1334": [458, 513], "1337": 458, "1339": 458, "133e": 472, "134": [475, 478, 485, 513], "1340": 513, "1341": 458, "1342a": 157, "1343": 458, "1344": [502, 513], "1345": 458, "1346": 458, "1347": [458, 513], "1349": 513, "13499879586502125": 486, "135": [38, 103, 472, 502, 505, 513], "1350": 513, "13500212963": 502, "1351e": 502, "1354": 458, "135498046875": 474, "1357": [458, 513], "1359316": 532, "135e": 128, "136": [502, 513], "1360": 458, "1361": 502, "1362": 458, "1363": 513, "1364": 513, "1365": 513, "1367": [458, 513], "1369": [403, 458], "137": [478, 486, 513], "1371": 513, "1372": 458, "1373": [458, 513], "1374": [458, 513], "13752123871171e": 529, "1376": [458, 513], "1376407467165896e": 494, "1377": [458, 513], "1378": [458, 513], "1379": 513, "1379190199428797": 318, "137990": 502, "138": [437, 472, 487, 513, 532], "1380": 513, "1381": 458, "1383": 513, "1386": [458, 513], "1387": 458, "1388": 513, "138e": 485, "139": [474, 478, 513, 519], "13911": 532, "1392": 513, "1393": 513, "139388186431198e": 499, "13944023e": 504, "1395": 458, "1396": [395, 475], "13960": 532, "1397": 458, "1397412321592923": 514, "1398": 513, "13e": 503, "13nan6": 472, "13th": 436, "14": [28, 65, 67, 86, 249, 276, 396, 399, 404, 407, 412, 414, 415, 416, 425, 456, 467, 468, 472, 474, 475, 478, 483, 489, 497, 499, 502, 503, 504, 505, 508, 510, 511, 512, 513, 516, 530, 532, 585, 588, 592, 610], "140": 520, "1400": 513, "1401": 458, "1402": 513, "1403": 513, "1406": [458, 513], "1407": 513, "1408": [458, 532], "141": [316, 485, 502], "1410": 513, "1411": 513, "1411180": 483, "1412": [458, 513], "14121": 485, "1412536400000000": 532, "1414": 513, "14149953611195087": [97, 514], "14150": 485, "1418": 513, "1419": [403, 459], "141945": 468, "142": [35, 67, 437, 472, 502, 513, 532], "1421": 458, "14210": 472, "1426": [458, 513], "142857142857132": 489, "142e": 502, "143": 513, "1432": 458, "1433": [458, 513], "1435": [458, 513], "1436": [496, 513], "1437": 513, "1438": [180, 513], "1438465e": 507, "1439": 513, "1439110308062257": 514, "144": [472, 511, 513, 532], "1440": 513, "14419991": 98, "1442": 513, "1442739329466746e": 512, "1443": 458, "1444": [458, 513], "1445": [409, 513], "14457": 532, "1446": [458, 513], "1447": 458, "1449": 513, "145": [467, 502, 513, 572], "1450": 513, "1451": 410, "1453105388336073": 485, "1454": 513, "1455": 513, "1456": 458, "1456479e": 507, "1458": 513, "1459": 513, "146": [513, 532], "1461": 513, "14610": 613, "1463": 513, "1464": 513, "146472": 502, "1466": 513, "1467": [139, 513], "1468": 513, "147": [456, 502, 509, 513], "1470": [458, 513, 532], "1474": [458, 513], "1475": 458, "1476": [458, 513], "14773": 519, "147e": 502, "148": [478, 513], "1480": 513, "1482": 502, "148234717822831e": 513, "1484": 513, "1485": 513, "1485314": 98, "1486415e": 507, "1488": 513, "1489": [458, 485, 513], "149": [474, 508, 511, 513], "1491": 513, "1492": 458, "1494": 485, "1495": [458, 513], "1496": 513, "1499472780781963": 318, "149e": 502, "14e": [480, 501], "14msts37sst": [487, 488, 518], "14nan3": 472, "14nan5": 472, "14th": [420, 423, 436], "14yr_catalog": 65, "15": [39, 42, 67, 88, 89, 92, 154, 155, 156, 157, 158, 159, 164, 165, 166, 168, 207, 222, 385, 386, 390, 404, 412, 415, 437, 441, 446, 451, 454, 455, 456, 458, 467, 468, 474, 478, 481, 483, 484, 485, 487, 488, 489, 492, 496, 497, 499, 500, 502, 503, 504, 505, 508, 509, 511, 512, 513, 516, 519, 532, 555, 564, 577, 590, 614], "150": [134, 437, 472, 474, 487, 488, 509, 513, 532], "1500": 513, "1501": 513, "1502": 513, "1505": 458, "15076259": 98, "151": [437, 511, 513], "1510": 141, "1510240e": 507, "1512": 513, "15140": 478, "1515": 458, "15154854": 98, "1517": 458, "1519": 513, "151955134028793": 486, "152": [478, 485, 513], "1521": [485, 513], "1523": [487, 513], "1524": 513, "15246": 487, "152477": 519, "1527": [458, 513], "1528": 513, "153": [502, 513], "1530": [503, 513], "1531": 513, "15319": 487, "1534": 513, "1536": 513, "153600": 503, "1538": 275, "154": [437, 468, 502, 513], "1540": 513, "1541": 513, "1543": 458, "1545": 513, "1548": 513, "1549": 513, "154e": 485, "155": 437, "1551": 513, "155179": 475, "15518": 532, "1552": 481, "1553": [502, 532], "1554": [312, 314, 458], "1554106e": 507, "1556": [458, 502, 513, 532], "1556008e": 507, "1558": [458, 513], "156": [437, 474, 475, 478, 485, 504, 511, 513], "1560": 513, "1561": 513, "1562": 458, "15621": 532, "1563": 513, "1564": 458, "156525": 502, "1567629e": 507, "1568": 458, "1569": 513, "157": [437, 513, 532], "1571": 513, "1573": [458, 513], "1574": 513, "1575": 513, "1576": 458, "1578": 513, "1579": 513, "158": [468, 475, 483, 513], "1581": 513, "1582": 458, "1583": [496, 513], "1584": 513, "15848931924": 504, "1586": [95, 513], "1587": 513, "15899": 478, "159": 513, "1590": 513, "1593": 513, "1594": 458, "1597317": 98, "159t": 52, "15e": 481, "15h14m00": 502, "15nan8": 472, "16": [16, 24, 53, 67, 95, 111, 112, 196, 399, 403, 412, 416, 417, 425, 442, 457, 462, 464, 465, 467, 468, 470, 472, 473, 474, 475, 476, 477, 478, 480, 481, 483, 484, 485, 486, 487, 488, 489, 494, 495, 496, 497, 498, 499, 501, 502, 503, 504, 505, 508, 509, 510, 511, 512, 513, 515, 517, 518, 519, 520, 521, 529, 530, 532, 557, 583, 587, 591, 602, 610, 611], "160": [31, 128, 437, 446, 489, 511], "1600": [488, 513], "1600e": 469, "1601": 513, "1605": [458, 513], "16056": 478, "1606": 458, "1607": 501, "1608": 513, "1609": 513, "160e": 67, "161": [403, 467, 474, 485, 502, 523], "1610": 513, "1610e": [469, 502], "161250": 492, "1613": 513, "1613279491744304": 514, "1615": 513, "1616": 458, "1618850e": 507, "1619e": 103, "162": [67, 513], "1620": 513, "16227766": 509, "1622776601683795": [508, 509, 529], "1624": 513, "16240": 530, "1625": 513, "1625e": 480, "1626": 513, "1627": 513, "1628": 513, "16287": 532, "1629219e": 507, "163": [513, 610], "1630": [458, 532], "16303": 485, "16303044": 485, "1632": 513, "163265306122433": 489, "1633": 513, "1634": 458, "1635": 513, "1639": 513, "164": [502, 513], "1642": 468, "1644": 513, "1645e": 515, "1646": 513, "1647": 513, "1648": 513, "165": [511, 513], "1650": [513, 532], "16506": 468, "16511": 485, "16511148": 485, "1655": 513, "1658": [458, 513], "1659": 513, "165e": 478, "166": [437, 485, 502], "1660": [458, 513], "166015625": 470, "1661": 513, "1661919226690951e": 499, "1662": 513, "1665478": 98, "1666": 513, "1667": 513, "166871893872855e": 499, "167": [437, 485, 492], "1671": 513, "167219": 502, "1674": 513, "1675": [458, 513], "1676": 513, "1678": 513, "1679": 513, "168": [502, 503, 513, 532], "1680": 513, "1681": [458, 513], "1685": 458, "1686": 502, "1687": 86, "168702": 468, "1689": 513, "169": [467, 473, 485, 513], "1691": 468, "169226": 512, "1693": 513, "169445": 492, "1695": 458, "1696": 458, "1697": [458, 513], "1698": [474, 513], "169871": 492, "1699": 513, "16th": 436, "17": [20, 21, 40, 67, 86, 399, 406, 409, 412, 446, 463, 467, 468, 470, 474, 475, 476, 477, 478, 480, 481, 483, 484, 485, 486, 487, 488, 489, 494, 495, 496, 497, 498, 499, 501, 502, 503, 505, 507, 508, 509, 510, 511, 512, 513, 515, 516, 517, 518, 519, 520, 521, 529, 530, 532, 578, 589, 604, 611], "170": [470, 513], "1700": 513, "17016467e": 505, "1702": 458, "17020": 478, "1703": 513, "1705": 513, "1707": 513, "1708": 513, "1709": 513, "171": 513, "1710": [459, 513], "1711": 458, "1713": 470, "1715": 409, "1717": 532, "171749": 532, "1718": 513, "1719": 513, "1719502": 98, "1719610": 98, "1719670": 98, "171b": 286, "172": 320, "1720": 513, "17229679": 98, "1726": 513, "173": 502, "1730": 513, "1731": [458, 511, 513], "1732": [502, 513], "17320": 502, "1735": 513, "1736": [478, 513], "173618637951": 496, "1737": 513, "1737799900000000": 532, "174": [474, 513], "1740": 513, "1742": [67, 513], "17445": 532, "1746": [458, 532], "1747": 513, "1748": [458, 511], "1749": 513, "175": 513, "1750": [458, 513], "1751": [458, 513], "1753": 532, "1754": 513, "1755": 458, "1756": 475, "1758": 513, "1759": [458, 513], "175e": 502, "176": [437, 467, 497, 502, 513, 572], "1760": 458, "1761": 458, "1762": 534, "1763": [459, 502], "1764": [458, 485], "1765": 513, "1766": 459, "1768": 513, "1768896e": 507, "1769": 513, "177": [437, 513, 519, 520], "1770": 513, "17776": 468, "1778279410": 504, "177e": 502, "178": [457, 513], "178442": 67, "1785": [458, 468, 513], "1786": 513, "1788": 513, "179": 513, "1790": 513, "1791": [458, 513], "1793": 513, "179475": 251, "1795": 513, "1797": 513, "1798": 513, "1799": 458, "179986": 475, "17a": [60, 502], "17e": 511, "17g": 50, "17th": 452, "18": [11, 88, 92, 207, 399, 414, 421, 443, 449, 468, 470, 474, 475, 476, 477, 478, 480, 481, 483, 484, 485, 486, 487, 488, 489, 494, 495, 496, 497, 499, 501, 502, 503, 505, 508, 509, 510, 511, 512, 513, 515, 516, 517, 518, 519, 520, 521, 529, 530, 532, 596, 600, 602, 603], "180": [231, 240, 243, 409, 430, 432, 437, 496, 502, 509, 513, 614], "1800": [458, 488, 509, 513, 518], "180000": [487, 488, 518], "1801": 513, "1804": [502, 513], "180458": 483, "18046952655570045": 318, "1805": [409, 513], "1806": 513, "1807": 459, "1808": [458, 502, 532], "1809": 513, "181": [478, 496, 513], "1811": 477, "1812": 458, "1813": [502, 513], "1815": 513, "1818": [458, 513], "182": 513, "1821": 458, "1822": 458, "1823": 513, "1825": [502, 513], "18257": 478, "1826": 513, "183": [474, 513], "1830": 513, "1830e": 474, "1831": 513, "183139597": 86, "1833": 513, "1834": [470, 513], "1835": [95, 513], "1836": [459, 513], "1836544903987521": 514, "18367346938775508": 489, "1837": [459, 513], "18385658": 485, "18386": 485, "1839": 513, "18392464": 546, "184": [86, 95, 451, 455, 467, 478, 483, 487, 491, 495, 499, 510, 511], "18400002": 495, "1841": [404, 513], "1842": 513, "1844": 513, "1845": 459, "1846": 459, "18465": 532, "1849": [459, 513], "184989894219835": 500, "185": [510, 513], "1853": 513, "1854": [459, 502], "1855": [459, 513], "1857": [459, 513], "1859": 459, "186": [450, 485, 502], "1860": 513, "1861": [459, 513], "1862": 459, "186484131475074": 351, "1866": 508, "186643": 532, "1867": [496, 513], "1868": 513, "187": [443, 450, 485], "1870": 513, "1871": 459, "1872": 513, "1873": 513, "1874": 513, "1875": 513, "1876": 513, "1877": [405, 513], "1879": 513, "188": [450, 468, 502, 513], "1880": 513, "1883": 459, "1884": 459, "18842984749180410": 485, "1887": 513, "1888": 459, "188e": 472, "189": [474, 507, 513], "1890": [459, 513], "1891": [459, 513], "1892": 513, "18921591": 507, "1893": [459, 513], "1893e": [469, 502], "1894": 459, "1895": 459, "1896e": 469, "1898": [459, 513], "18988": 532, "1899070e": 507, "189e": 496, "18a": 62, "18h43m48": 67, "19": [51, 53, 54, 67, 207, 399, 411, 413, 416, 437, 445, 446, 448, 460, 467, 473, 475, 478, 485, 486, 491, 496, 497, 499, 500, 502, 503, 509, 511, 512, 513, 597, 598, 599, 601], "190": 502, "1902": [65, 276, 592], "1903": [459, 513], "19031940273801": 496, "1904": [459, 513], "1905": 484, "1907": 513, "1908": 459, "1909": 459, "190e": 474, "191": [450, 513], "1910": 183, "1912": [459, 513], "1913": 513, "1915": 513, "1917": [513, 532], "1918": [459, 513], "19187460435": 600, "191877200705": 602, "19188513825": 601, "1919": 459, "192": 513, "1920": [513, 532], "1921": 459, "19214093": 98, "1922": [459, 513], "1925": 513, "1926": 459, "1926520e": 507, "1927": 459, "1928": [502, 513], "1929": 459, "193": [478, 513], "1930": 459, "1931": 513, "1933": [459, 513], "1934": 459, "19354": 485, "1936925": 98, "1937": [459, 502], "193e": 475, "194": [450, 478, 513], "1943": [312, 314], "1943186": 98, "1946": 513, "1947565": 98, "1949": 459, "195": [245, 474, 513], "1950": 513, "1950rspsa": 52, "1951": [438, 513], "1953": 425, "1953830": 98, "1955810e": 507, "1957": 513, "1958": 513, "1958e": 505, "1959": 513, "196": [67, 468, 496, 511], "1960": 513, "1961": [139, 148, 513], "1962": 438, "1963": 502, "19644": 519, "1965": [21, 513], "1966": 438, "1967": 513, "1969": 438, "196991563774588": 287, "197": [67, 467, 485, 492, 513, 519, 605], "1971": 406, "1972": 513, "19736017641361556": 486, "1975": [438, 513], "1976572e": 507, "1978": 502, "1979": [300, 306, 438, 513, 608], "1979892": 485, "198": 513, "1980": [502, 513], "1982": 37, "1983": 608, "1986": 407, "1986027": 532, "1987": 485, "19879005": 180, "1988": [140, 307, 438], "1989": [438, 513], "199": [485, 496, 511, 513], "1990": [36, 37, 438, 513], "1991": [22, 438], "19932878": 507, "1994": [438, 608], "1994a": [52, 53], "1995": [17, 298, 437, 438, 513], "1996": [27, 478, 500, 608], "1997": [25, 513, 529], "1998": [28, 88, 92, 438, 608], "1999": [53, 201, 396, 513, 613], "19991": 529, "199999809265137": 502, "19999999999999998": 477, "1999apj": 53, "19e": 508, "19th": 436, "1d": [16, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 92, 111, 112, 130, 155, 156, 165, 179, 196, 198, 346, 388, 401, 405, 406, 408, 409, 410, 411, 414, 416, 417, 430, 440, 442, 443, 444, 445, 449, 451, 454, 458, 460, 461, 464, 467, 468, 470, 472, 473, 474, 476, 478, 483, 490, 491, 496, 499, 503, 505, 508, 510, 512, 513, 514, 515, 518, 519, 529, 542, 544, 546, 551, 559, 608], "1dc": [82, 83, 90, 104, 107, 111, 112, 117, 120, 121, 125, 145, 146, 152, 156, 157, 158, 167, 383, 388, 390, 403, 405, 411, 416, 439, 468, 477, 480, 483, 485, 492, 496, 497, 503, 504, 507, 511, 544], "1deg": 208, "1e": [19, 20, 26, 86, 101, 133, 134, 137, 151, 152, 153, 154, 155, 157, 158, 159, 161, 164, 166, 168, 169, 196, 197, 198, 200, 205, 206, 208, 209, 210, 222, 224, 225, 228, 232, 234, 235, 236, 241, 247, 248, 249, 251, 252, 255, 257, 259, 260, 261, 266, 271, 273, 274, 275, 276, 279, 283, 287, 300, 306, 353, 369, 371, 395, 406, 469, 472, 474, 476, 478, 481, 483, 485, 487, 488, 492, 494, 495, 496, 497, 502, 505, 512, 513, 515, 519, 520, 540, 544, 548, 574, 575, 576, 578, 581, 582, 586, 587, 589, 590, 591, 592], "1e0": 538, "1e10": [51, 157], "1e12": [538, 548], "1e2": [472, 538, 540], "1e3": [519, 548], "1e30": 584, "1e4": [505, 519, 520], "1e40": 539, "1e5": [476, 519, 540, 558, 559], "1e51": 52, "1e6": [45, 519, 536, 593], "1e7": [130, 593], "1f": 475, "1fhl": [443, 456], "1fhl_name": 71, "1h": 167, "1k": [104, 111], "1kpc": 540, "1lhaaso": [57, 70, 464, 502], "1lhaaso_catalog": 57, "1rc1": 427, "1scwdd7f": 504, "1tev": [52, 53, 134, 488], "1ty98bdiapj": 287, "2000e": 512, "2001": [95, 438, 478, 608], "20016392130233e": 499, "2002": [88, 92, 304, 500], "2003": [305, 500, 513], "2004": [24, 39, 40, 86, 95, 425, 500, 513, 521], "2004aph": [83, 89], "2005": [65, 608], "200503": 468, "2005a": 502, "2006": [30, 31, 32, 33, 35, 121, 410, 478, 486, 495, 499, 513], "200638": 532, "2006a": 287, "2006apj": 33, "2006ara": 50, "2007": [413, 608], "20072608": 507, "2008": [38, 86, 232, 283, 469, 513, 519, 534, 574], "2008aj": 38, "2009": [137, 308, 439, 478, 608], "20097159": 507, "2009851": 507, "20099855": 507, "201": [52, 509, 513], "2010": [130, 157, 232, 251, 313, 396, 465, 513, 574, 608, 613], "2010a": [251, 287], "2010mnra": 157, "2011": [17, 19, 20, 21, 22, 24, 25, 26, 27, 135, 232, 312, 314, 469, 534, 574], "2012": [92, 439, 608], "2013": [103, 141, 416, 422, 428, 437, 500], "20136": [82, 318, 521], "20137": [318, 521], "2013aph": 286, "2013apj": 60, "2014": [139, 148, 436, 513, 534], "2015": [52, 86, 409, 412, 436, 519], "20151": 318, "2015apj": 61, "2015jheap": 287, "2016": [26, 409, 412, 436, 439, 500, 508, 518], "2016apj": 58, "2017": [59, 232, 400, 402, 412, 416, 434, 436, 439, 485, 518, 574], "2017apj": 62, "2017icrc": 518, "2018": [52, 400, 401, 402, 403, 404, 405, 406, 410, 412, 414, 416, 436, 463, 518, 521, 608], "2019": [402, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 436, 458, 459, 486, 608], "202": 485, "2020": [207, 404, 416, 417, 418, 419, 420, 436, 486, 487, 496, 509, 513, 597, 598, 599], "2021": [63, 90, 232, 418, 420, 436, 463, 512, 513, 518, 574], "2021345e": 507, "2022": [396, 421, 422, 425, 436, 439, 513, 520], "2023": [57, 396, 407, 423, 424, 425, 426, 436, 439, 513], "2024": [425, 426, 436, 518], "2024e": 530, "2025": [106, 127, 320, 321, 415, 425, 426, 435, 475, 480, 481, 483, 512, 529, 563, 564, 565, 566, 567, 568, 569, 570, 571, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 596, 597, 598, 599, 600, 601, 602, 603, 604], "2026": [407, 439], "2028": 439, "203": 513, "2030": [407, 439], "2031": 439, "20326": [317, 470], "20327": [317, 470], "2033": [439, 513], "20339": 317, "2034": 439, "20343": 317, "20344": 317, "20345": 317, "20346": 317, "20349": 470, "2035": [126, 128, 439], "20350": 470, "2036": [126, 128, 513], "2037": [439, 513], "20372": 518, "2038": 439, "2039": [439, 513], "20396": 470, "20397": 470, "204": [467, 513, 572], "2040": 513, "2040469e": 507, "204081632653062": 489, "2041222e": 507, "20421": 470, "20422": 470, "2043": 513, "2045": 407, "2046": [439, 513], "2049": [439, 502, 513, 532], "205": [450, 485, 509, 513], "2050": 439, "20508075688775": 502, "2051": [439, 513], "20517": 470, "20518": 470, "20519": 470, "205192": 502, "2052": 513, "20521": 470, "2053315944536949e": 518, "205357": 502, "2054": 439, "20559": 532, "2056": 513, "2058705e": 507, "206": 502, "2061": [502, 513], "2062": 513, "2062580e": 507, "2063": 513, "2064": 439, "2064335": 98, "2065": [439, 513], "2066": [439, 513], "2068": 513, "2068682e": 507, "2069": 439, "207": [467, 485, 489, 511, 513, 594], "2070": 513, "2071": [407, 439, 513], "2075": 424, "207520865": 495, "207521165": 499, "207521465": 495, "207521627": 499, "2076": 439, "2077": [439, 513], "2078": 513, "2079930e": 507, "207e": 478, "208": [60, 467, 594], "2080": 513, "2081": 513, "2085": 439, "2089": [409, 441, 513], "20898": 470, "20899": 470, "209": [485, 513], "20900": 470, "2093": [439, 513], "2094": 513, "2095": 485, "2097": 439, "2097e": 474, "2098": [439, 513], "2099": 513, "20deg": [487, 488], "20e": 507, "20th": [422, 426], "21": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 103, 130, 152, 275, 398, 399, 446, 452, 461, 468, 469, 477, 478, 485, 495, 499, 501, 502, 507, 509, 513, 532, 559, 610], "210": [450, 502, 513], "2100": 513, "2101": 513, "2103": 502, "2104": [440, 513], "2104353e": 507, "2106": 440, "2108": 440, "2109": 426, "211": [502, 503, 513], "2111": 440, "2112": [440, 513, 530], "21134890398": 504, "2114": 440, "2115": [440, 513], "2116": 513, "211761": 588, "211770556360534": 497, "2118": 440, "2119": 440, "211e": 502, "212": [67, 450, 465, 467, 474, 502, 594], "2121": [440, 513], "2121164e": 507, "212182": 480, "2123": 440, "21236e": 468, "2124": 440, "2126": [440, 468, 477, 480, 483, 485, 492, 496, 513, 518], "2127": 513, "2128": [440, 513], "2129": [409, 441], "213": [476, 513], "2130": [440, 513], "2131": [440, 502, 513], "2132": [440, 513], "21325": 519, "2133": 440, "2135": 513, "2136": [408, 442], "2139": [440, 496], "214": [472, 478, 513], "2140": 440, "2141": 440, "2142": 440, "2143": 513, "2144": 513, "2145": 440, "2146": 440, "21464892": 532, "2147": 513, "2148": 513, "214e": 474, "215": [67, 450, 464, 502], "21500000000003": 567, "2151": 440, "2152": 440, "21525839967018867": 486, "2153": [440, 502], "2154": [440, 502, 513], "2155": [444, 469, 495, 496, 499, 500, 502, 514, 532, 574], "2157": 440, "2158": 513, "2159e": 103, "215e": 502, "216": [245, 474, 509, 511, 604], "2160": [440, 513], "2162670e": 507, "2163": 440, "2164425e": 507, "2165": 513, "2166": 440, "2168": 513, "2169": 440, "217": [474, 502], "2171": 440, "21731921e": 509, "21733761e": 509, "21735587e": 509, "2175": 513, "2176": 513, "2177": 513, "218": [61, 513], "2181": 513, "2182": 513, "2183": 513, "2186": 513, "2188": 513, "218825": 589, "2190": 413, "2192": [441, 513], "219378": 529, "2197": [485, 513], "219756": 569, "21t19": 95, "21t20": 95, "22": [67, 83, 85, 89, 104, 107, 111, 112, 137, 172, 177, 180, 195, 196, 205, 208, 320, 321, 399, 436, 449, 467, 468, 470, 474, 475, 476, 477, 478, 480, 481, 483, 484, 485, 486, 487, 488, 489, 494, 495, 496, 497, 498, 499, 501, 502, 503, 505, 508, 509, 510, 511, 512, 513, 515, 517, 518, 519, 520, 521, 529, 530, 532, 543, 550, 553, 555, 556, 559], "220": [502, 511, 513, 610, 611], "2200": [441, 513], "2201": [65, 275, 502, 513, 532, 591], "2202e": 532, "2203": 513, "2204": 441, "2206": [441, 513], "2207": 513, "220e": 502, "221": [409, 450], "22149": 478, "2216": [415, 513], "2217": [441, 513], "2217412e": 507, "2218": [412, 442], "2219": [411, 442], "222": [58, 483, 502, 511], "2221": [502, 513], "2223": 513, "2224": 513, "22245374e": 128, "2225": 513, "2227134679628": 496, "22271346796282": 496, "222713467962826": 496, "2229": [408, 441], "222e": 496, "223": [467, 511, 594], "2230": 441, "2231": [502, 513], "2233": 513, "2235": 441, "2236": 513, "2237": [441, 532], "2238": 441, "2239": [441, 513], "224": [467, 513, 594], "2240": 441, "2242": 513, "2243": [441, 513], "2244": 441, "224436": 532, "225": [97, 317, 318, 420, 450, 481, 502], "2250": 441, "22500": 481, "2253": 513, "225362": 481, "2254": [441, 513], "2255": [413, 514], "225575051666": 502, "2255890": [495, 499, 514], "2257": 441, "2259": 441, "226": [467, 481, 485, 513, 519, 594], "2260": 513, "22608": 503, "2261": 513, "2262": [441, 513], "2263": 513, "22635141851205703": 505, "2264": [407, 441, 513], "22646134620907912": 505, "2264827221149211": 505, "22648882813333465": 505, "22651631005759018": 505, "22662623775461227": 505, "2268": 513, "2269": 513, "2270": 412, "2272": 441, "227215": 571, "2274": [414, 442, 468], "2275": 513, "2276": [441, 513], "2277": 441, "2278": 441, "22788666362099286": 505, "2279": [412, 442], "227e": 502, "228": [300, 306, 403, 409, 467, 475, 481, 502, 508, 521, 572], "2280": 513, "2281": 513, "2283": 513, "2287": 441, "2289": [441, 513], "229": [67, 467, 482, 502], "2290": 414, "2292": 442, "2293": 513, "2294": 441, "2296": 441, "2297": 441, "22974080e": 519, "2298": [441, 513], "22d": 512, "22e": 508, "22nd": 436, "23": [77, 95, 106, 127, 180, 395, 399, 422, 435, 436, 460, 470, 474, 476, 478, 484, 496, 499, 502, 505, 509, 511, 513, 514, 523, 532, 555], "230": [450, 478], "2300": 441, "2303": 513, "2304": [413, 513], "2305": [441, 513], "230542e": 502, "2307": [64, 65, 513], "2308": 442, "231": 450, "2310": 441, "2313": 442, "2314": [442, 513], "232": [62, 513], "2320": [442, 502, 503], "2321": [442, 513], "2323": [442, 513], "2325": 513, "2326": 442, "2327": [502, 511], "23273": 519, "233": [467, 475, 513, 572], "2330": 442, "23306": 478, "2332": 511, "2333": 513, "2334": 442, "2335": 442, "2336": 513, "2338": 442, "2339": [470, 502, 513, 532], "234": [450, 497, 513], "2341": 513, "234132519034915": 509, "23413252": 509, "2342": 442, "2343": 442, "234359264373779": 508, "2343e": 511, "2344": 442, "2345": 442, "2346": [442, 513], "2347": 442, "2349": 513, "235": 450, "2350": 443, "2351": 442, "23523": [150, 177, 215, 434, 474, 475, 484, 494, 503, 505, 508, 517, 521, 529, 530, 543, 546, 609], "23526": [150, 215, 474, 475, 484, 494, 503, 505, 508, 513, 517, 529, 530, 609], "2353": 513, "2354": [442, 513], "23559": [474, 475, 494, 503, 508, 513, 529, 530, 553, 555, 556, 609], "2356": 442, "2357": 511, "2358": 442, "2359": [442, 513], "23592": [474, 475, 494, 503, 508, 513, 529, 530, 553, 555, 556, 609], "236": [450, 502, 513], "2360": 442, "2362506e": 507, "23628": 519, "2365": [442, 513], "2366": [442, 513], "2367": 442, "2368": [442, 513], "237": 468, "2371": 513, "23734": 532, "2375": 442, "2377": [442, 513], "2378": 442, "2379": 442, "2381": [442, 513], "238298": 468, "2384": [468, 513], "2385": [442, 513], "2386": 513, "239": [67, 485, 513], "23905561": 507, "239275": 584, "2394": 513, "239439": 532, "239557414": 83, "239557417": 86, "239559565": 83, "2398": 513, "2399": 502, "239e": 502, "23a": 61, "23rd": [415, 426], "23t07": [475, 480, 481, 483, 512, 529, 563, 564, 565, 566, 567, 568, 569, 570, 571, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 596, 597, 598, 599, 600, 601, 602, 603, 604], "24": [25, 27, 52, 53, 86, 88, 92, 95, 398, 399, 412, 417, 453, 458, 468, 475, 478, 496, 499, 502, 503, 509, 511, 513, 518, 519, 529, 555, 574, 581, 590, 591, 592], "240": [104, 107, 111, 112, 125, 502, 503, 504, 513, 544], "2400": 442, "2401": 442, "2403": 513, "2404": [442, 513], "2405": 443, "2406": 513, "2407": 513, "2408": 513, "2409": 513, "240e": 474, "241": 502, "2412": 442, "2414": 502, "2419": 468, "242": 513, "2426": 513, "2427": 513, "2428255": 504, "242835": 67, "243": [474, 504], "2431": 502, "2432": [478, 513], "2433": 443, "2435": [443, 513], "2436": 513, "243745080459877e": 499, "244": [67, 450, 474], "2440": 502, "2441": 443, "244140625": 511, "2443": 513, "2443672e": 507, "2444": [443, 513], "2446": [443, 511], "2447": 415, "2448": 443, "244897959183646": 489, "2449": [443, 513], "245": 450, "2450": [443, 511], "245152": 485, "2452": 415, "2454": [443, 513], "2455": 443, "24579": 504, "2458": [415, 513], "2459": [443, 513], "246": [450, 504], "2461": 443, "24611324074": 502, "2463": [416, 443], "2464": 443, "2465055e": 507, "2468": 443, "24685677e": 507, "2469": 513, "247": [67, 450, 467, 513, 594], "2470": 443, "2471": 513, "2471938975366008": 317, "2472": [443, 513], "2475": 443, "2476": [443, 513], "2477": 443, "2478": 443, "2479": [443, 530], "248": 450, "2481": [443, 513], "248122": 502, "2483": 443, "2484": 513, "2485": 529, "2486": [443, 513], "249": [450, 513], "2490": 443, "2491": [443, 513], "2492": 443, "2493": 443, "2494": 513, "2496": 443, "24968": 468, "2497": 443, "2498": 443, "2499": 443, "249965667724609": 508, "24e": [502, 511], "25": [33, 52, 88, 92, 103, 145, 156, 167, 180, 300, 306, 399, 412, 420, 426, 436, 457, 464, 465, 467, 468, 469, 473, 474, 475, 478, 485, 496, 497, 499, 502, 507, 509, 511, 513, 532, 565, 570], "250": [467, 472, 473, 509, 608], "2501": 443, "250185": 508, "2502": [443, 485], "2504": 513, "2505": 443, "2505121": 98, "2505703": 497, "2508": 513, "2509": 502, "251": [478, 483], "2510": 443, "251185": 532, "2511884200000000": 532, "2511886431": 504, "2512": 513, "2516": 513, "25162e": 468, "2518": 502, "2519": 513, "251932": 502, "252": [450, 485, 502], "2520": 443, "2521": 443, "2522": 513, "2523": 443, "2525": [443, 513], "2526": 513, "2528": 443, "253": [477, 511, 513], "2532": 513, "2535": 443, "2536": [443, 511], "2537": 511, "2538": [443, 513], "254": 450, "2540": 443, "2544": 513, "2545": 513, "2546": 443, "2548": 513, "2549": 513, "25496": 532, "255": 513, "2551": 443, "2552": [443, 502], "2553": 443, "2555": 417, "2557": 443, "255750516626": 502, "2558": [443, 513], "2559": [443, 513], "256": [67, 453], "2560538e": 507, "2561": [443, 513], "2562": 443, "2563": [443, 513], "2564": [443, 513], "2565": 513, "2567": [443, 513], "2568710837134529": 486, "257": 477, "2574": 443, "25743552e": 505, "25763": 478, "257642": 502, "2578": 513, "2579999": 518, "258": [467, 477, 516, 571], "2580": 443, "2581": 513, "2582": 513, "25823909e": 504, "2585": 443, "2586": 513, "2587": 443, "2589254117941673": 529, "259": [477, 532], "2590": 513, "2591e": [469, 502], "2592": 513, "2594": 443, "2595": 443, "2595e": 483, "2598": 513, "259e": 478, "25e": 511, "25t_": 53, "25th": 422, "26": [19, 88, 92, 399, 436, 464, 467, 468, 470, 474, 475, 476, 477, 478, 480, 481, 483, 484, 485, 486, 487, 488, 489, 491, 494, 495, 496, 497, 499, 501, 502, 503, 505, 508, 509, 510, 511, 512, 513, 515, 517, 518, 519, 520, 521, 529, 530, 532, 534, 584, 603], "260": [453, 532], "2600": 513, "2601": 513, "2602": 513, "260298": 563, "2603": 513, "2604": 443, "2605": 513, "2609": [511, 513], "261": [453, 496, 513, 532], "2610": 513, "2611": 513, "2614": 513, "2616": 443, "2617": 513, "26173": 478, "2619": 443, "262": [453, 478, 511, 513, 532], "2620": [443, 513], "2622": 513, "26255414786544": 529, "26258181596485647": 505, "2627": 443, "262728": 518, "26272868097919794": 514, "2628": 513, "2628525e": 507, "263": [478, 511, 513], "2630": 513, "2633e": 484, "2635": 443, "2635108e": 507, "263565": 577, "2637": 443, "2638": 513, "2639554729438709": 514, "264": [453, 485, 513], "2642": 513, "2645": 443, "26475": 481, "2648": 513, "2648150": 98, "2649": 513, "2649e": 505, "265": [32, 409, 468, 478, 485, 511, 532], "2651": 443, "2652": 513, "2653": 513, "265306122448973": 489, "2654": [443, 513], "2655": 513, "2656": 513, "2657": 513, "2658": 513, "266": [409, 477, 478, 485, 487, 492, 509, 511, 513, 529, 532], "2660": 443, "2661": 513, "266192": 468, "26665050077722524": 514, "2667": 444, "267": [67, 477, 478, 485, 489, 511, 518], "2672": 444, "2673": 444, "26739753": 98, "2674": [444, 513], "2676": 513, "268": [422, 467, 478, 485, 491, 502, 511, 513, 532, 572], "2681": [444, 513], "2683": 513, "2684": 444, "2685": 444, "268663733018811": 514, "2687": [444, 513], "2688": 513, "26883694": 532, "26887783978974283": 514, "2689": [485, 513], "269": 532, "2691": 513, "2692": 444, "269385": 502, "269627": 518, "2697": [444, 513], "2699878e": 507, "26a": [50, 52, 53, 251, 287, 502], "26e": [502, 511], "26th": [418, 436], "27": [399, 401, 464, 467, 474, 478, 485, 499, 501, 503, 504, 505, 513, 516, 532, 610], "270": [470, 478, 502, 511, 513, 532], "2703": [444, 513], "2704": 513, "2705": 444, "27057337686547633": 514, "2707": [444, 513], "2708": 251, "2709": [444, 513], "27093776e": 507, "270d": 614, "271": [474, 477, 478, 483, 496, 513, 532], "2711": 444, "2712": 444, "2713": 444, "2715": 444, "271777777777796": 470, "27177778": 95, "2718": 444, "2719": 444, "272": [477, 478, 502, 511], "2720": [417, 445], "27209": 532, "2721": 513, "2722": 513, "2723": 444, "2725": 444, "2726": 444, "2726e": 532, "2727": [444, 513], "2727693": 518, "2727e": 474, "2728": 444, "2729": 444, "273": [83, 453, 467, 472, 478, 513, 532, 572], "2730": [444, 513], "2731": 444, "2732": 513, "2733": [444, 513], "2734": [128, 513], "2735": 444, "2737": 444, "2738": 444, "2739": 444, "274": 509, "27409496735322464": 514, "2741": 444, "2742": 444, "2743": 444, "2746": [444, 513], "2747": 444, "27473": 485, "275": [467, 477, 497, 498, 502, 594, 603], "2750": 444, "2751": [444, 513], "2752": 444, "2753": [444, 513], "2754": 513, "2755": 444, "2756": 444, "2758": 513, "2759": 445, "276": 453, "2760": 513, "2761": 445, "2762": [445, 513], "2764": 445, "2765": [445, 513], "2767": [445, 513], "2768": 445, "277": 477, "2771": 445, "2772": [445, 513], "27727": 511, "2775": 445, "277522361013748": 486, "2776": [445, 513], "2777": 445, "2777074437073429": 514, "2778": 445, "2779": 445, "278": [453, 477, 492, 502, 511], "2781": 445, "2782": 445, "2783": 445, "2784": [445, 513], "2785": 445, "2785e": 474, "2787": 445, "2788": 445, "2789": 445, "278e": 478, "279": [453, 477], "2790": [445, 513], "2791": [445, 513], "2792": 445, "2793": 445, "2794": 445, "2796": 445, "2797": [445, 513], "2798": 445, "2799": [445, 513], "27_theorem": [312, 314], "27e": 502, "27t20": 90, "28": [21, 24, 67, 95, 399, 404, 436, 467, 472, 474, 476, 477, 478, 485, 487, 489, 491, 492, 499, 502, 504, 508, 509, 511, 513, 518, 529, 532, 533], "280": [67, 453, 474, 477, 509, 513], "2800": [487, 511, 532], "2801": [445, 513], "2802": 445, "2803": 445, "2804": 445, "2805": [445, 513], "2806": 513, "2808": [445, 513], "2809": [445, 513], "281": [477, 502], "2810": [445, 513], "2811": 445, "28118133544922": 502, "2812": 445, "28120079": 502, "2813": 513, "2815": 445, "2816": [445, 511, 513], "2817": [445, 513], "2818": 445, "2818047723094509": 514, "28183829312": 504, "282": [467, 533, 594], "2820": 445, "2822": [445, 511], "2823": 445, "2824": 513, "2825456e": 507, "282598": 481, "2827": 445, "28275990e": 504, "2827988e": 507, "2828": 445, "2829": 445, "282952714500289e": 499, "282e": 502, "283": [453, 477, 513], "2831": 513, "2832": [445, 513], "283218": 468, "283487": 502, "2836": 513, "2837": 445, "28382603": 507, "2838398": 518, "28385358839966657": 514, "2839": [445, 513], "284": [477, 502, 613], "2840": 513, "2841": [445, 513], "2842": [445, 513], "28429": 485, "2845": 445, "2846": [445, 485, 513], "2848": 513, "2849": 513, "285": [453, 477], "2852": 511, "285714285714286": 489, "2859229": 504, "285f": [83, 89], "286": [453, 477, 504], "2861432787940619": 514, "2864": 513, "2867": 513, "2868": 513, "2869": 513, "286e": [478, 502], "287": [52, 53], "2871": 513, "2872": [446, 513], "28720322": 98, "2873": 513, "2874": [446, 532], "28755283551095173": 514, "2878662980210884": 318, "288": [128, 513], "2880470e": 507, "2882": 513, "2885": 446, "2889": 513, "288e": 472, "289": [453, 477], "28905": 519, "2891": 446, "2893": 513, "2894": 513, "2895": 513, "28958": 478, "2896": 446, "2897": [446, 513], "2899": 513, "28e": [104, 472, 483, 485, 503, 519], "29": [67, 281, 410, 421, 425, 436, 464, 467, 468, 472, 475, 477, 478, 485, 492, 495, 498, 499, 502, 509, 511, 512, 513, 518, 532], "290": [454, 477, 486, 504], "2900": 511, "290098": 504, "2903": [446, 511], "2903e": 476, "290608": 599, "2907": [446, 513], "291": [453, 489], "2912": [446, 513], "29170324": 503, "2919": 513, "291e": 532, "292": 513, "2920": 513, "2922477": 98, "2923273215208544e": 499, "2924": [446, 513], "2927": 446, "2928": 513, "2929": [446, 513], "293": 477, "2930": 502, "2931": 446, "2932": 446, "2933": 513, "29355238360800506": 514, "2936": 513, "2938": 446, "2939": 446, "293989": 602, "294": [496, 513], "2942": 418, "2943": 446, "2944": [419, 446], "2945": 446, "2947": 446, "2948": 446, "295": [453, 513], "2950": [446, 513], "2951": 446, "2952": 513, "2953": [485, 513], "2955": 513, "2956": 446, "29585273e": 519, "2959": [511, 513], "295e": 502, "296": [453, 513], "2965": 446, "2966": 446, "2967": 446, "297": [468, 513], "2971e": 502, "2973": 513, "2974": 446, "2976": 446, "2978e": 469, "298": [477, 485, 502], "2981": 446, "2984": [446, 513], "29882214027996945": 514, "299": [453, 477, 502], "2990": 446, "2991": 446, "2992": 446, "2993": 446, "2995484265169": 500, "2996": 532, "2998": [446, 513], "2999": [446, 502], "299940468335294": 485, "299995937905366": 485, "299e": 502, "299t": 53, "29t20": [495, 499], "29t21": 499, "29t22": 499, "29t23": 499, "29th": 436, "2_": 19, "2d": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 145, 146, 151, 152, 153, 154, 155, 157, 158, 159, 161, 164, 165, 166, 167, 168, 169, 170, 177, 187, 188, 195, 196, 197, 198, 200, 205, 206, 208, 209, 210, 215, 240, 388, 401, 406, 411, 414, 416, 417, 430, 438, 444, 457, 458, 459, 467, 478, 481, 482, 485, 509, 510, 532, 542, 545, 556, 557, 558, 571], "2degx2deg": 487, "2e": [202, 468, 470, 472, 487, 488, 499, 502, 505, 511, 513], "2e3": [202, 509], "2e6": 519, "2f": [384, 468, 475, 514, 530, 611], "2fhl": [58, 71, 443, 455, 456, 502, 532, 541], "2hwc": [59, 72, 443, 449, 457, 502, 541], "2k": [104, 111], "2m": [251, 287], "2nd": [60, 421], "2nd_psr_catalog": 60, "2pc": [60, 69, 73, 465, 502], "2pc_catalog_v04": 60, "3": [19, 20, 27, 28, 31, 32, 33, 37, 38, 42, 45, 46, 50, 51, 52, 53, 54, 59, 63, 67, 77, 80, 83, 85, 86, 88, 92, 95, 97, 102, 104, 107, 111, 112, 113, 118, 121, 128, 151, 152, 153, 154, 155, 156, 157, 158, 159, 161, 162, 164, 165, 166, 167, 168, 169, 170, 180, 183, 195, 196, 197, 198, 199, 200, 201, 202, 203, 205, 206, 207, 208, 209, 210, 219, 221, 240, 243, 252, 275, 281, 283, 286, 287, 295, 298, 299, 304, 312, 314, 317, 318, 341, 350, 371, 383, 388, 390, 392, 395, 396, 398, 399, 401, 406, 407, 409, 410, 411, 412, 414, 420, 421, 422, 427, 429, 434, 437, 438, 439, 441, 442, 447, 449, 451, 454, 455, 456, 457, 458, 459, 460, 462, 463, 468, 469, 470, 472, 474, 475, 476, 477, 478, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 492, 494, 495, 496, 497, 499, 501, 502, 503, 504, 505, 507, 508, 509, 510, 511, 512, 514, 515, 517, 518, 519, 520, 521, 529, 530, 532, 533, 534, 536, 539, 540, 543, 544, 548, 550, 552, 553, 555, 556, 559, 564, 566, 567, 569, 570, 574, 579, 580, 582, 583, 584, 585, 587, 588, 591, 593, 598, 599, 603, 607, 608, 610, 611, 614], "30": [24, 52, 67, 83, 97, 104, 114, 115, 157, 196, 317, 318, 402, 403, 408, 416, 423, 436, 438, 468, 469, 470, 474, 475, 478, 480, 485, 488, 492, 495, 496, 497, 499, 502, 503, 505, 509, 511, 512, 513, 514, 515, 518, 519, 532, 544, 550, 555, 556, 564, 565, 580, 583, 584, 585, 588, 593], "300": [74, 88, 92, 477, 480, 484, 487, 488, 492, 496, 502, 513, 519], "3000": [405, 502, 558], "30000": 502, "3000000": 593, "30000000": 593, "3000020211954284": 485, "3000_100000_wtct": 77, "3000e": 469, "3001": 446, "30015e": 468, "3002": 446, "3003": [511, 513], "3004625872247901": 484, "3005": 446, "3006": 532, "3006942": 98, "3007": 446, "300_1000_wtct": 77, "301": [453, 477, 513], "3011061699260256": 514, "3012": 446, "3013": 502, "301668796295": 502, "302": 477, "3020791585772495": 317, "3020e": 496, "3021": 513, "3024": 513, "30287": 478, "3028e": 511, "3029": 513, "302e": 502, "303": [474, 477, 502, 513], "3030": 446, "3032": 446, "3034": [502, 513], "3035": 446, "3037": 446, "3037632e": 507, "3038": [446, 532], "3039": 446, "304": [467, 469, 495, 496, 499, 500, 502, 514, 532, 572, 574], "3041": 446, "3042": [446, 513], "3043": [511, 513], "3045": 446, "3046875": [503, 511], "3049": 513, "3049664466089965": 318, "304_steadi": 469, "305": [67, 477, 492], "3051": 446, "3051827": 98, "3051852": 98, "3051856": 98, "3052": 446, "3053": 446, "30535345877453707": 514, "3054": 446, "3055487448271073": 486, "3058": 446, "3058422e": 507, "3059": 513, "305e": 502, "306": [453, 513, 610], "3060": 446, "3061224489795924": 489, "306196370000000": 532, "3062": 513, "3063": 446, "3066": 513, "3069": 446, "306e": 502, "307": [477, 513], "3070": 446, "3071": 502, "3072": 446, "3074": 446, "3075": 420, "3076": 446, "3077": 513, "307e": 502, "308": [477, 485, 567], "3080": 446, "3081": [446, 513], "3083": 446, "3085": 446, "3086": [446, 513], "3088": [446, 513], "3089": 446, "309": 496, "3091": 446, "3092": 446, "30997": 532, "30a": 287, "30d00m00": 423, "30e": [469, 507, 511], "30t00": 499, "30t01": 499, "30t02": 499, "30th": 407, "31": [404, 405, 419, 420, 434, 461, 468, 469, 470, 472, 474, 475, 476, 477, 478, 480, 481, 483, 484, 485, 486, 487, 488, 489, 494, 495, 496, 497, 498, 499, 501, 502, 503, 504, 505, 508, 509, 510, 511, 512, 513, 515, 517, 518, 519, 520, 521, 529, 530, 532], "3100": 446, "3105": 513, "3106": 446, "31067517": 502, "3107": [502, 532], "311": [489, 567, 611], "3110": 447, "3111": [447, 513], "3112": 447, "3113": 447, "31139055e": 505, "3114": 447, "311489174710791e": 532, "3116": 447, "3117988e": 507, "31186857659616535": 514, "3119611261122878": 514, "312": [453, 513], "3121": 513, "3122": [448, 513], "3123": 448, "3124": 448, "3125": 448, "3126": 448, "3127": 448, "3129": 448, "313": [477, 484, 513], "3130": 448, "3131": [449, 511], "3134": 513, "3135914081482271": 514, "3136": 449, "3137": 513, "313714614138": 503, "3138": [449, 513], "314": [458, 513], "3140": [449, 513], "3141": 449, "3145": 449, "3148": 449, "315": [415, 502, 513], "3151": 513, "3152": 449, "3153": 449, "3155": 449, "315767532000283": 529, "3158": 449, "316": [477, 519, 520], "3162": 449, "316227": 502, "316227766016838": 508, "3165": [449, 513], "3168": [449, 513], "3169": [449, 513], "317": [453, 477], "3173": 449, "3178": 449, "317a": 287, "317e": [469, 502], "318": [415, 453], "3180": 449, "3182": 449, "3185": 449, "3186": 513, "3189697265625": 474, "319": [454, 489, 513, 519], "3191": 449, "3195": 532, "3197": 449, "319725": 518, "3199": [449, 513], "32": [83, 196, 474, 478, 481, 499, 508, 509, 513, 529, 532], "320": [104, 107, 111, 112, 125, 415, 502, 503, 504, 511, 544], "3202": 449, "3204": 513, "3206": 513, "3207": 449, "3208": 449, "32095": 532, "321": [489, 513], "3211": 449, "3216": 449, "3217": 449, "3219": 449, "322": [467, 477, 489, 503, 513, 516], "3222": 449, "3224": 513, "3226": 513, "3228": 449, "3229": 485, "323": [477, 513], "3230": 449, "3232": 513, "3232943": 361, "3233356": 361, "32377509405904137": 97, "3237948931463171": 514, "3238": 449, "324": [496, 513], "3241": 449, "3243": [449, 513], "3244": 513, "3246": 449, "32465247": 512, "3254": 449, "3256": 513, "3257": 449, "3258": 449, "325e": 475, "326": [453, 467, 513, 594], "3262": 449, "326530612244888": 489, "32684": 532, "32684833": 518, "327": 485, "3270": 513, "3272": 449, "3276": 449, "3277": 449, "3278": 449, "3279": [449, 513], "3279955e": 507, "328": [467, 485, 489, 513, 594], "3281": [449, 513], "3282": 513, "3283": [449, 513], "3284": 449, "32843": 532, "32847": 468, "3285": 449, "3288": 513, "329": [97, 317, 318, 495, 499, 502, 513, 514, 546], "3293": 449, "3299": 502, "329e": [474, 502], "33": [496, 499, 500, 501, 505, 509, 513, 532, 546], "330": [454, 477, 511, 513], "3301": 449, "33013e": 468, "3302": 449, "3302565e": 507, "3303": 449, "330376": 67, "3304": 449, "3305": 449, "330505": 518, "33055e": 468, "3306": 449, "3307": 449, "3308": 449, "3309": [449, 513], "331": 513, "3310": 449, "3313": 513, "3314": 449, "3315": 513, "33164865722698683": 514, "3318": 513, "3319": 449, "3319831545301117": 317, "332": [67, 454, 513], "3320": 449, "3323": [449, 503], "332525": 502, "3328": 449, "3329": 513, "332e": [478, 485], "332f": 33, "333": 513, "3330487": 98, "3331": 532, "3331761": 98, "3333": [449, 513], "33333333": 395, "3335": 449, "33368e": 468, "3337": [449, 513], "3338": [449, 513], "334": [128, 467, 496, 513, 519, 523], "3341": 513, "3342": 449, "3343": 449, "3346": 449, "3347": 449, "33484": 468, "3349": 449, "3349654391": 504, "334e": 502, "335": [454, 513], "3353": 449, "3357": 449, "3358": 449, "335e": 472, "336": 502, "3360": 513, "3363": 449, "3364130e": 507, "336444e": 502, "336606": 468, "3368855e": 507, "3369": 449, "337": [454, 467, 477, 496, 498], "337178": 579, "3374": 449, "3377": 449, "33787": [97, 514], "33788": [97, 514], "33789": [97, 514], "3379": 449, "33790": 514, "33791": 514, "33792": 514, "33793": 514, "33794": 514, "33795": 514, "33796": 514, "33797": 514, "33798": 514, "33799": 514, "338": [454, 502, 513], "33800": 514, "33800122": 98, "33801": 514, "3380311e": 507, "3381": 449, "339": [454, 474, 513], "3390": 449, "3392": 449, "3393": 449, "3395": 449, "3397": 449, "339835555384604": 514, "3398360": 507, "33983991887701287": 97, "3399": 449, "33e": [481, 497], "34": [52, 53, 67, 437, 468, 485, 495, 496, 499, 503, 509, 511, 513, 532], "34005": 468, "3402": 449, "3403": 449, "340391": 532, "3404": 449, "34047": 468, "3405": 513, "3406": 449, "3408": 513, "3409": [95, 449], "341": 468, "3413": 449, "3414": 513, "3416": 449, "3417": 513, "3418": 449, "342": 454, "3420": 449, "3423": 449, "3426": 449, "3428": 449, "343": [467, 513, 594], "3434": 449, "3438": 449, "3439": 449, "343e": 472, "344": [489, 502, 513], "344238": 532, "3443842": 518, "3445": 449, "3446": 449, "3447": 449, "3448": 513, "3449": 449, "344e": 67, "345": [468, 511], "3453": 449, "3454": 449, "3456": 513, "345692": 532, "3458": 449, "346": [415, 511], "34613054105945": 486, "346488e": 502, "3465": 513, "3466": 449, "3468": 449, "34693877551019": 489, "347": [454, 470], "3471": 449, "3474": 449, "348": [454, 474, 513], "3480": 449, "3481e": 483, "3482": 513, "3488": 449, "3489": 513, "348e": [67, 502], "349": 513, "3491": [449, 478], "3494": 513, "349530550364513": 505, "349530725238324": 505, "349530739434762": 505, "34953075814257": 505, "349530774637106": 505, "349530793294022": 505, "349530807499818": 505, "349535814771492": 505, "349536722980144": 505, "34953715852974": 505, "349537804335895": 505, "34953807800248": 505, "349538946234787": 505, "349539326364486": 505, "349541972204694": 505, "349559366767238": 505, "3495e": 476, "349655": 504, "349711555166778": 505, "349724385715966": 505, "3499075e": 507, "349e": 478, "34e": [502, 511], "35": [67, 412, 420, 434, 467, 474, 495, 499, 502, 505, 513, 515, 518], "350": [489, 497, 504], "3500": [19, 20, 26, 224, 225, 228, 232, 234, 235, 236, 241, 247, 248, 251, 255, 257, 259, 260, 261, 266, 271, 273, 274, 275, 276, 279, 283], "350105": 485, "3502": 502, "350292033852874": 505, "3503": 513, "3503706026275275": 514, "3504": 532, "35050396342807": 505, "35053891085894": 505, "351": [454, 502, 513, 532], "3514e": 530, "3515": [449, 513], "351d": 489, "352": [454, 502], "3521": 470, "3523": 449, "3529": [449, 513], "353": [454, 513, 532], "3535": 451, "3535924566679284e": 529, "3536": 468, "353e": 485, "354": 513, "3544": 449, "3547": 513, "355": [467, 495, 498], "35569283": 507, "355804": 532, "3559": 449, "355940": 575, "356": [513, 532], "3561": 449, "3565": 513, "3568": 449, "357": [489, 502, 532], "3571": 513, "35722435185": 502, "3576": 513, "3576e": 470, "358": [485, 502, 532], "3583": 485, "3584": 449, "359": [454, 485, 502, 532], "3590188e": 507, "3592": 449, "3599": 487, "359e": [496, 532], "36": [67, 86, 152, 339, 470, 485, 487, 502, 503, 507, 513, 532], "360": [409, 509, 513, 534], "3600": [477, 487, 488, 509], "36014": 483, "36073833513766157": 514, "361": [67, 454, 489], "3619": 513, "3619e": 530, "362": 513, "3621": 513, "36228879": 532, "3627": 513, "36273": 532, "363472509034498": 514, "3638": 513, "3639": 513, "3639946": 497, "364": [454, 513], "3645": 513, "365": 513, "3659253e": 507, "366": [467, 504, 513, 516, 530], "366486": 504, "3666": 513, "36669663417038234": 514, "3669": 451, "367": [454, 511, 513], "36734693877551017": 489, "3674884": 502, "368": 489, "36834038301420274": 514, "368346217294295": 97, "3684": 451, "3689322e": 507, "369": 454, "3690": 532, "3699": 451, "36e": [501, 502], "37": [468, 469, 475, 477, 481, 504, 505, 513, 519, 611], "370": [502, 511], "371": [454, 513], "3710784e": 507, "3712": 451, "3713": 451, "371545": 591, "3715810e": 507, "3718": 513, "3718745": 98, "372": [128, 513, 532], "3720": 451, "3722": [451, 513], "3726": 513, "3728": 451, "373": 485, "3733": 451, "373907718050568e": 499, "3739292e": 507, "374": [489, 513], "3740": 451, "37455141": 532, "3748": 451, "375": [454, 498, 509], "3750": 485, "37506": 532, "37517": 478, "3752": [451, 513], "3759377929871826": 514, "376": 67, "3760": 451, "3761": 451, "376485": 529, "3765": 468, "3767": 426, "377": [467, 533], "3777": 451, "37773": 478, "3779": [513, 532], "378": 513, "3783": 451, "3786": 513, "379": [454, 474, 513], "3792": 511, "3796": [451, 513], "3797": 451, "3799": 513, "38": [22, 67, 83, 468, 470, 482, 496, 502, 509, 511, 513, 532, 593], "3801": 513, "3802": 451, "3804": 451, "3806": 451, "381": [511, 513], "3810": 451, "3812": [502, 532], "3812120e": 507, "3812160e": 507, "38143003": 98, "3817": 451, "382": [467, 530, 533], "3820": 513, "3821": 513, "38258165e": 504, "3829": 532, "382e": 474, "383": [67, 454, 502, 509, 513], "3833": 451, "3837": 451, "383e": 67, "384": [504, 513], "3841385": 504, "3842": 451, "3846": [451, 513], "3847": 275, "3848912826152664e": 532, "3849": 513, "385": [489, 513], "3856": 451, "385e": 496, "386": 489, "3860": 451, "3861": 513, "3862": 460, "3863": 426, "3868": 513, "387": [454, 532], "3872": 502, "3873": 451, "3874": 451, "3876": 451, "387755102040817": 489, "387834": 532, "388": 571, "388405": 532, "3885947175689592": 514, "3886270e": 507, "3887": 451, "389": [400, 513], "3892": 451, "3895": 451, "3898": 451, "389e": 532, "39": [17, 18, 21, 22, 24, 25, 27, 59, 501, 502, 509, 513, 519, 571, 593], "390": [449, 489, 513], "3900": 513, "3904": 451, "39042": 86, "3905": 451, "3906": 451, "3907": 513, "3908": 513, "391": 502, "3910": 513, "3915": 451, "3918": 451, "392": [454, 475], "39224": 478, "3925": 460, "3927": 513, "393": [211, 212], "3933": 451, "3935": 470, "3936": 451, "3938": 513, "3939": 513, "394": 454, "3940": 513, "3941": 451, "394354793675": 496, "3945": [470, 502], "3947637541758": 496, "394767169890468": 529, "3948": 452, "395": 454, "3950": [421, 460], "395004": 532, "3951": 513, "3956": 460, "3959": [452, 513], "396": [454, 513], "3962942e": 507, "3966": 452, "39666267e": 499, "397": 474, "3970": 422, "3970355304768176e": 499, "39728": 532, "3973": 513, "3975": 452, "3976": 513, "3977": 513, "3979": [452, 609], "397918129147546": [434, 609], "39791813": [434, 609], "398": [454, 481, 483], "3981": 532, "39810717055": 504, "3981075200000000": 532, "3982": 513, "3982e": 515, "3983": 452, "3986": 452, "3987": 452, "3988": 452, "398e": 502, "3990": 452, "3993": 513, "39e": 502, "3bhvdgvo": 508, "3d": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 46, 47, 152, 158, 165, 166, 168, 177, 190, 290, 292, 401, 404, 405, 406, 410, 411, 414, 416, 417, 430, 438, 439, 440, 442, 443, 444, 445, 456, 457, 458, 465, 467, 468, 469, 472, 474, 475, 478, 480, 481, 485, 486, 487, 488, 489, 491, 495, 496, 499, 503, 505, 507, 508, 509, 510, 511, 512, 514, 518, 519, 520, 529, 530, 542, 544, 545, 546, 551, 553, 558, 606, 608], "3d33m15": 67, "3dataset": 484, "3e": [20, 128, 134, 485, 488, 492, 494, 497, 499, 502, 511, 513], "3e4": 519, "3e5": 519, "3e6": 593, "3e7": 593, "3f": [128, 486, 610, 611], "3fgl": [61, 67, 74, 234, 274, 419, 450, 453, 455, 456, 457, 467, 472, 502, 512, 532, 541, 560, 573, 594], "3fgl_name": 71, "3fhl": [62, 75, 86, 130, 132, 137, 230, 254, 293, 416, 456, 457, 472, 478, 487, 489, 502, 509, 510, 511, 512, 519, 532, 541, 543], "3fhl_data_fermi": 484, "3fhl_dataset": [293, 484, 510], "3fhl_model": [293, 484, 511], "3g": [501, 502], "3hwc": [63, 76, 449, 460, 502, 541], "3jcfkwz": 499, "3ml": [413, 519], "3pc": [64, 69, 77, 465, 502], "3pc_catalog": 64, "3rd": 64, "3rd_psr_catalog": 64, "4": [17, 19, 20, 21, 22, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 35, 36, 37, 38, 39, 40, 52, 54, 61, 67, 83, 88, 92, 103, 104, 107, 111, 112, 117, 120, 131, 137, 149, 154, 157, 165, 177, 180, 196, 197, 198, 199, 200, 201, 206, 209, 210, 224, 225, 228, 232, 234, 235, 236, 241, 245, 247, 248, 251, 255, 257, 259, 260, 261, 266, 271, 273, 274, 275, 276, 279, 283, 286, 293, 294, 339, 382, 395, 396, 398, 399, 407, 409, 412, 416, 420, 421, 434, 437, 446, 448, 449, 450, 453, 455, 456, 459, 465, 468, 469, 470, 472, 474, 475, 476, 477, 478, 480, 481, 483, 484, 485, 486, 487, 488, 489, 492, 494, 495, 496, 497, 499, 500, 501, 502, 503, 504, 505, 507, 508, 509, 510, 511, 512, 513, 515, 517, 518, 519, 520, 521, 523, 529, 530, 532, 534, 539, 540, 541, 555, 558, 559, 564, 565, 568, 574, 579, 592, 593, 602, 608, 609, 610, 611, 612], "40": [59, 111, 112, 402, 450, 470, 472, 474, 475, 483, 485, 491, 495, 496, 499, 509, 512, 513, 518, 532, 555, 580, 583, 588, 593, 610], "400": [137, 222, 478, 480, 485, 489, 502, 509, 513, 532, 603], "4000": [460, 513], "40000": [177, 530], "400056": 468, "40050506591797": 502, "40051035": 502, "40071076": 98, "400x200": 489, "401": [475, 513], "40112": 532, "4013": 460, "4014": 460, "4015": 460, "4017": 460, "4018": 460, "401e": 478, "402": [157, 513], "4022": 460, "40235": 483, "4024": 460, "4025": 460, "4026": 460, "402712": 502, "403": [454, 485, 511], "4030": 513, "4035": 532, "4037": 460, "4038": 513, "403899": 529, "404": 513, "4043": 460, "4044": 460, "4046": 513, "40481": 483, "405": [403, 489], "4051": 460, "40525": 483, "4053": 513, "4054": 460, "4058": 460, "406": 532, "40611": 532, "4064": 513, "4067": 460, "40671": 481, "40672": 481, "407": [502, 513], "4071": 460, "4073": 460, "4073799600000000": 532, "4075": 460, "4076": 460, "4079": 460, "408": [474, 509], "4080": [460, 513], "4080942e": 507, "40822469e": 512, "4083": 460, "4084": [460, 513], "4088": 460, "4089": 460, "40919": 478, "4093": 460, "409416": 532, "4095": 460, "4098": 460, "40deg": 518, "41": [67, 86, 95, 409, 502, 503, 509, 513, 519, 532], "41009347393684": 503, "4101": 513, "4103": 460, "4105": 460, "4106": 460, "4107": 460, "4108": 460, "411": [513, 532], "4110e": 502, "4112": [128, 460], "4113": 460, "4115": 460, "4118": 513, "4119": 460, "411e": 472, "4120719e": 507, "412165": 485, "4124": 513, "4125": 513, "412779907405": 502, "413": 485, "4133": 513, "4134": 513, "414": 454, "414054187946": 486, "41415047": 98, "4142135623730951": 121, "41449": 478, "414e": 478, "415": [454, 513, 584], "4151e": 483, "4155": [502, 532], "41584196": 500, "416": [67, 483, 502, 508, 513], "4161e": 483, "4167": 513, "4169": 513, "417": 502, "4173": 513, "4175e": 496, "4178": 513, "417919902794806e": 513, "418007850646973": 434, "41803": 481, "4186": 513, "41866": 519, "419": 511, "4191": 463, "4194": 513, "4198250e": 507, "41995": 478, "419e": 502, "41e19": [19, 20], "42": [19, 20, 25, 26, 27, 95, 157, 224, 225, 228, 232, 234, 235, 236, 241, 247, 248, 251, 255, 257, 259, 260, 261, 266, 271, 273, 274, 275, 276, 279, 283, 361, 409, 467, 477, 483, 485, 491, 502, 507, 508, 509, 513, 514, 518, 533, 559, 563], "420": 513, "42050348": 503, "4208": 463, "4209": [463, 478], "421": [454, 513, 532, 608], "4210": 463, "4212": [463, 513], "4212028e": 507, "4213": [463, 513], "42130982e": 499, "4215": 463, "4216": [463, 513], "4217": 464, "4219": 463, "422": 513, "4220": 483, "4221": 461, "4222": 513, "4224": 513, "4225498e": 507, "4225631e": 507, "42267": 485, "4226731": 485, "423": 474, "4231": [461, 463], "4236": 513, "42361": 478, "4238": 426, "4239": 426, "42399798": 485, "423e": 128, "4240": [426, 513], "42400": 485, "4241": 426, "4242": 463, "4243": 463, "4244": 513, "4245": 463, "42463": 519, "424650": 503, "42474": 532, "425": 532, "4252": 463, "4253": 426, "4256": 513, "426": 502, "4260": 513, "4264": 463, "4266": 513, "4268": 461, "4269": 513, "427": [475, 513], "4270": 513, "4275": [461, 463], "4277": 463, "4280": [463, 513], "4281": 502, "4282": 463, "428571428571404": 489, "4288": 463, "429": 474, "4290": 513, "429009936092852e": 513, "4294": 463, "4295": 513, "4297": 513, "4299": 513, "42e": [505, 511], "43": [286, 361, 409, 475, 485, 496, 503, 509, 513, 532, 559], "430": 502, "4300": 513, "43000": [52, 53], "4301": [461, 463], "4303606e": 507, "4305": 463, "431": [403, 503], "431024101062279e": 529, "43113": 468, "4313": 513, "4313847458879893": 514, "4319": [513, 532], "43197": 478, "432": 513, "4324": [461, 463, 513], "4326": 463, "432878": 502, "432e": 502, "433": [478, 513], "4336": [461, 463, 513], "43366": 603, "4338e": 469, "434": [502, 513], "4341": 513, "43416595": 497, "4344": 461, "4346": 463, "435": 454, "4350": 463, "4351637481047363": 514, "4352": [463, 513], "4357": 275, "4359": [461, 463, 513], "435e": 474, "435l": 502, "436": [454, 513], "4360750e": 507, "4362": 513, "4369": 463, "437": [502, 511, 513], "4370": 463, "4372": 513, "4373240195300975": 514, "438": 511, "4380": [462, 463], "4381": [424, 426, 464], "4382": 462, "4388": 426, "4389": 513, "439": [474, 513], "4390": 513, "4393": [462, 463], "4394": 462, "4395": 463, "4397": [462, 463], "439e": 502, "43e": [511, 513], "44": [21, 50, 86, 361, 467, 469, 473, 474, 477, 495, 497, 509, 513], "440": 513, "4402": 463, "44055555555555603": 95, "4406": 463, "4408": 464, "4409": 463, "441": [467, 513, 594], "4412": [462, 463], "4417": [463, 513], "4418": 463, "4420073e": 507, "4420222e": 507, "4421": 513, "4428": 463, "4428634e": 507, "443": [474, 513], "4430": 463, "44319": 503, "4432": 464, "4433": 465, "4435": [462, 463], "4438": 513, "443859": 574, "4443": 513, "4444": [463, 513], "444e": 484, "445": [478, 513], "4450": 532, "44528685": 532, "4453": [462, 463], "4455": 513, "44573": 95, "4458": 463, "4459": 463, "446": [511, 513, 611], "4466": [463, 483], "4466832000000000": 532, "4466835921": 504, "4467": 513, "447": [454, 513], "4472573661157": 496, "44742": 532, "44749e": 468, "44755": 481, "447552": 468, "447e": [485, 502], "4480": 513, "4480056e": 507, "44802852": 532, "4481": 502, "4485": [464, 513], "4486": [462, 463], "4488": 513, "44897959183673": 489, "4491": [423, 426, 464], "4493": 513, "4495": 463, "4496": 513, "4497": 503, "4498": 513, "44e": 434, "45": [51, 54, 477, 484, 497, 499, 503, 509, 510, 512, 513, 534, 559, 565, 566], "450": [467, 473, 511, 513], "4500": [462, 463], "4501": 464, "4504": 463, "4505": 513, "4506": 463, "4508": [463, 513], "4510": [463, 483, 532], "4513": 513, "4515": 501, "4517490659800822": 494, "4520": 462, "4521": 463, "4523": 513, "4524": 462, "453": [467, 469, 511, 513, 594], "4538": 513, "454": [474, 513], "4540": [464, 513], "4545": 463, "4546": [464, 513], "455": [454, 472], "45515263080596924": 470, "45517415e": 504, "4557": 513, "455870": 485, "455e": 67, "456": [454, 513], "4561": 464, "45646095": 497, "4567": 464, "457": [287, 454, 511, 513], "457251": 532, "4574": [462, 464], "4575": 95, "4578": 462, "4579e": 468, "458": [467, 502, 513, 516], "4584": 464, "45856": 532, "4586649826004114": 317, "459": [454, 503, 511, 513], "4593": 462, "45935": 532, "4595": 464, "4598": 513, "4599": 464, "459941302": 83, "45\u00ba": 520, "46": [53, 67, 111, 112, 409, 496, 502, 509, 513], "460249999": 86, "4608": 464, "461": [454, 499], "4615": [464, 513], "46186956763267517": 470, "4619": 462, "462": [454, 474], "4620": [424, 464], "4620e": 502, "46225": 478, "4628": 464, "463": 532, "4631": 462, "4635": 464, "4638": 464, "4639e": 480, "464": 492, "4642048e": 507, "4643": 513, "4644": 513, "4647544e": 507, "465": [474, 502, 511, 513], "4651": 513, "4653": 462, "4656": 513, "4657": [462, 464], "465784": 532, "466": 513, "4660": 464, "4663": 513, "4664": 464, "4668": 464, "4669": 464, "4671": 464, "46711": 478, "4675": 513, "4675e": 495, "4677": [462, 464], "468": [497, 502, 513], "4681": [462, 513], "4684": 470, "468805426856864e": 52, "468e": 67, "469": 513, "469387755102041": 489, "4696": 513, "4697": 464, "46e": [83, 480, 485], "47": [67, 468, 470, 474, 475, 476, 477, 478, 480, 481, 483, 484, 485, 486, 487, 488, 489, 494, 495, 496, 497, 499, 501, 502, 503, 505, 508, 509, 510, 511, 512, 513, 515, 517, 518, 519, 520, 521, 529, 530, 532], "4702": 513, "4703": [464, 513], "4704": 513, "471": 513, "4711": 532, "4712": 478, "4714": 464, "4721": 462, "4726": 464, "4728": 462, "4729": 464, "473": [454, 474], "4737": 513, "4738": 464, "474": 454, "4740": 464, "4741": 464, "4749": 513, "474e": 502, "475": [454, 511, 513], "4750": 464, "4753": [462, 464], "475468": 468, "4755": 462, "4759": 464, "4766": 513, "4770": 464, "4772": 462, "4778": 513, "47797": 478, "477e": 502, "478": [454, 513], "47802": 514, "47803": 514, "47804": 514, "47827": 514, "47828": 514, "47829": [82, 514, 521], "4783": 464, "4785": 464, "4786": 513, "4788": 513, "479": 513, "4792": 513, "4793": 513, "47e": 502, "48": [33, 177, 437, 467, 483, 484, 509, 511, 513, 516, 519], "480": [470, 502, 511, 513], "4802": 464, "4805": 464, "480554966161": 483, "48068": 478, "4808": 464, "480e": 502, "481": [400, 454, 467, 484, 491], "4810": 464, "4814": [464, 532], "4815": 513, "4817": 464, "48180953439317e": 529, "4819444e": 507, "482": 468, "4821": 513, "48215685": 98, "4822": 464, "48248": 502, "4825": [502, 513, 532], "4828": 464, "4829": 464, "483": 513, "4834": 464, "4834488e": 507, "4835": 464, "4837": 464, "484": [454, 489], "48442": 281, "4845": 464, "4847": 464, "4848653": 502, "4849": [464, 502, 532], "485": 454, "4850": 464, "4851": 464, "485392": 567, "4854": 464, "4857": 513, "4858": 513, "487": [454, 489, 529], "4875723e": 507, "4876": 462, "4879": 464, "488": [467, 489, 491], "4881": [260, 261, 513], "4886": 464, "48871": 468, "489": 513, "4891": 513, "4893": 513, "4897": 513, "4897959183673475": 489, "489e": 502, "48e": [502, 511, 530], "49": [53, 477, 478, 483, 489, 502, 511, 513, 519, 529, 558], "4901": 513, "4902": [464, 513], "4904": 464, "4904078e": 507, "49078e": 468, "4908": 513, "4910": 513, "4913": 462, "4915": 513, "49152": 519, "4917": 464, "4924": 513, "4925": 513, "4928": 513, "493": 513, "4930435940405": 483, "4933657e": 507, "4936": [462, 464], "4937": [462, 464], "4940": [464, 513], "49417615": 86, "4942": 464, "494e": 474, "4952": 513, "4958277": 98, "496": [467, 526], "496021": 518, "4963": 532, "4965": 513, "4966": 532, "4968236e": 507, "497": 513, "4970": 464, "4971": [464, 513], "49716789e": 504, "4971704e": 507, "4973": 464, "4975": 464, "4978": 464, "498": [513, 532], "4983": [465, 513], "4986": 513, "498784": 502, "4989": 464, "498e": [502, 532], "499": [67, 502, 513], "49919925926": [245, 604], "4992": 464, "4994": 464, "4996": 465, "49972277488662115": 514, "4999833830074": 485, "4d": 414, "4e": [497, 502, 511, 513, 593], "4f": [609, 610, 611], "4fgl": [65, 78, 275, 276, 419, 441, 443, 449, 451, 464, 467, 469, 484, 502, 510, 512, 541, 560, 573, 594], "4th": [407, 436], "4yr_catalog": 61, "5": [16, 17, 18, 19, 20, 21, 22, 24, 25, 26, 27, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 50, 52, 53, 67, 83, 88, 92, 104, 105, 107, 110, 111, 112, 121, 125, 128, 129, 131, 133, 134, 135, 136, 137, 145, 146, 154, 155, 156, 157, 158, 159, 164, 165, 166, 167, 168, 177, 180, 195, 196, 197, 198, 200, 201, 202, 205, 206, 207, 208, 209, 210, 222, 224, 225, 228, 230, 231, 232, 234, 235, 236, 240, 241, 243, 245, 247, 248, 251, 254, 255, 257, 259, 260, 261, 266, 271, 273, 274, 275, 276, 279, 281, 283, 287, 313, 319, 320, 321, 353, 385, 386, 390, 392, 395, 396, 399, 400, 402, 406, 407, 409, 410, 411, 412, 414, 419, 420, 421, 425, 429, 434, 437, 439, 441, 442, 449, 451, 453, 454, 456, 457, 458, 462, 468, 469, 470, 472, 474, 475, 476, 477, 478, 480, 481, 483, 484, 485, 486, 487, 488, 489, 492, 494, 495, 496, 497, 499, 501, 502, 503, 504, 505, 507, 508, 509, 510, 511, 512, 513, 514, 515, 517, 518, 519, 520, 521, 529, 530, 532, 534, 539, 540, 543, 550, 553, 555, 556, 557, 558, 559, 564, 565, 566, 567, 569, 574, 575, 582, 583, 584, 588, 589, 593, 597, 598, 599, 600, 602, 608, 610, 611, 614], "50": [88, 92, 95, 113, 118, 135, 361, 402, 423, 468, 475, 476, 481, 483, 492, 495, 496, 497, 502, 503, 507, 509, 511, 512, 513, 514, 518, 519, 521, 529, 530, 532, 555, 558, 567, 611], "500": [197, 198, 200, 206, 209, 210, 478, 485, 487, 488, 509, 518, 519, 532, 558, 564], "5000": [19, 20, 88, 92, 513, 534, 558], "5000056568267741": 485, "5000e": 477, "50022222": 95, "500249": 502, "5003": 513, "5004": 485, "5015": 464, "502": 454, "5021": 513, "5029": 513, "5029747": 476, "503": [454, 513], "5030": [513, 532], "5033": 513, "5034": 513, "5037": 513, "504": 513, "5040": 464, "5044": 464, "5049": 532, "505": [67, 502, 503], "5054": 513, "505523195912": 483, "5057": 465, "5058": 465, "5059": 513, "506": [454, 513], "5066": 502, "507": [454, 513], "5070": 513, "5071": 513, "5074": 513, "5074834": 98, "5077": 513, "5078068": 98, "508": 513, "50807568877": 502, "509587": 504, "509632": 504, "509e": 502, "50_100_wtct": 77, "50e": [477, 511], "51": [52, 53, 67, 481, 483, 513, 529], "510": [454, 504, 513], "510204081632645": 489, "5106": 532, "51095676": 497, "511": [67, 454, 513], "5115": 465, "51179": [396, 613], "5118": 465, "512": 474, "5124": 513, "5125": 465, "5126": [67, 513], "5127": 513, "5129": 465, "513": [434, 509], "51312": 485, "5134": 513, "5135": 465, "5140": 513, "5141": 513, "5144": [95, 468], "5145": 465, "5146": 513, "5147": 513, "514854": 518, "5149": 513, "5154": 513, "51544": [477, 487, 488, 492], "5156": 465, "516": 513, "5160": 465, "5161": 465, "5162628e": 507, "5163273": 518, "5169": 465, "5170": 513, "5176": 465, "518": [454, 511], "5180": 465, "5184": 465, "5186": 465, "5188": 465, "5188338e": 507, "519": 513, "5191": 513, "51910": 95, "5192420e": 507, "5194769e": 507, "51948705e": 512, "51958055e": 504, "52": [53, 128, 177, 468, 470, 478, 481, 483, 496, 502, 513, 518, 521, 532], "5200": 465, "5205": [465, 519], "5206": 465, "5207": 465, "52074074074": 83, "521": [455, 513], "5214": 513, "5218": 513, "521800": 597, "5222": 465, "5226": 513, "5229": 513, "523": [455, 509], "5230": 513, "5230376e": 507, "52318414": 98, "5233": 513, "5234": 513, "523681640625": 474, "5237647004325865": 514, "52389101852": 502, "523a": [251, 287], "523e": 475, "524": [455, 502, 511], "5243": 513, "5248": 532, "524807800000000": 532, "5254": 465, "5255": 465, "5258": 465, "52587": 478, "526": [455, 513], "52607": 532, "5269": 465, "527": [455, 467, 505, 513, 516, 519], "5270": 465, "5271": 465, "5275": 465, "5279": 465, "527e": 475, "528": [474, 511], "5280": 465, "5281": 513, "52826166": 502, "5283": [502, 532], "52839183495354": 496, "5285": 465, "5287": 513, "5289": 465, "529": [455, 467, 516], "5292": [503, 513], "5297": [465, 513], "5297030e": 507, "5298": 465, "52e": [497, 529], "53": [28, 485, 499, 513, 515, 564, 574], "530": 455, "5300": 465, "53025": 95, "5303": 465, "5304": 465, "530612244897945": 489, "5308": 513, "531": 455, "5312": 465, "5314": 465, "5316": 465, "532": 513, "5320": 465, "53213": 485, "5324402": 98, "5326744": 98, "5326841": 98, "5326859": 98, "533": [502, 513], "53343": [434, 494], "53344": 494, "53345": 494, "53346": 494, "53347": 494, "53348": 494, "533777": 603, "5340": 513, "5342": [465, 513], "5345275e": 507, "5346": 465, "5348": 513, "53482e": 468, "535": [455, 502, 513], "5350": 465, "535058216604496": 287, "5353": 465, "5356": 465, "53566": 468, "536": 513, "53616": 251, "5362": 513, "5366": 465, "537": 489, "5370": 465, "5377": 513, "5378": 465, "538": 513, "5380": 465, "5381": 465, "5382": 465, "538491845944134e": 499, "5385": [465, 513], "5389": [465, 513], "539": [287, 511, 571], "5390": 465, "5390438": 98, "5392e": 495, "539397": 502, "53945": 495, "53946": [499, 500], "5396": 513, "5398": 513, "539e": 502, "53e": [434, 477], "54": [67, 470, 474, 502, 507, 513], "540": 513, "5400": 503, "5402": 513, "5405": [465, 513], "5407": 465, "5407363826067": 543, "5407363826070": 543, "5408": 465, "5409": 465, "541": 455, "5411": 468, "5416e": 492, "5417": 513, "5418": 513, "5422": 513, "5423": 465, "5424": 513, "5427": 465, "5427520e": 507, "542792": 578, "54282": 478, "5433": 465, "5437": 465, "5438": [465, 513], "5438860e": 507, "544": [455, 502, 519], "5444": 513, "5445": 465, "5448": 465, "5449": 465, "545": [455, 513], "5453": 465, "5454": 513, "54566271": 610, "546": 455, "5461745": 98, "5462": 465, "5466": 465, "54676809e": 505, "54682": [478, 502, 519, 532], "547": [455, 468, 502, 513], "5472": 465, "54721e": 468, "5477": 502, "54772": 502, "54892": 478, "548e": 502, "549": 455, "5490039491683206e": 529, "5496": 513, "5499840": 518, "54e": 511, "55": [39, 42, 88, 92, 215, 496, 497, 505, 510, 513, 515], "550": [474, 513], "55045": 502, "551": 502, "5510204081632653": 489, "5515": 513, "55197": [396, 613], "552": [502, 513], "5522": 513, "5525": 465, "55275": 519, "552890": 585, "5529": 513, "553": [469, 502, 513], "5531e": 469, "553337": 532, "5538": 532, "5538942e": 507, "553e": 478, "554": 67, "55410": 502, "554483": 576, "5545": 465, "5545130e": 507, "55461982e": 504, "554e": 472, "555": [467, 515, 516], "555014": 570, "5552": 513, "5554": 513, "5555": 513, "5559": 513, "556": [455, 474, 513, 611], "5561760e": 507, "5562": 513, "557": [455, 467, 511, 516], "55775": 502, "558": 455, "5582": 513, "5583371740851524": 529, "559": [455, 467, 473, 516], "5594": [83, 513], "5595": 513, "56": [468, 475, 497, 509, 513, 520], "560": [37, 502], "5606985": 497, "5607778e": 507, "56093766": 98, "561": 513, "56141": 502, "561984": 492, "562": [467, 502, 511, 516], "5622482": 98, "56234132519": 504, "5624": 513, "5632": 513, "56353481": 610, "563e": [474, 485], "564": [304, 455, 474, 511, 513], "564139576922415": 486, "5644": [503, 513], "565": [455, 513], "5650": 513, "56506": 502, "565095": 468, "5655": 513, "5658": 513, "5668": 513, "566e": 474, "56711": 532, "5672": 513, "5677": 513, "5682": 513, "5687": 513, "56871": 502, "5688": 513, "569": 455, "56922612": 610, "5692809e": 507, "5695": 513, "56973": 532, "57": [33, 478, 485, 497, 509, 513], "570": 513, "57011": 485, "5705": 513, "5709": 513, "571": 502, "571428571428572": 489, "57185": 543, "5719922e": 507, "571e": 502, "572": 475, "57233": 532, "57236": [478, 502, 519, 532], "5728": 513, "572e": [472, 478], "573": [67, 474, 532], "57300957": 180, "5736": 513, "5741": 513, "5742e": 476, "5744": 513, "5749": 513, "5750": 513, "5754970e": 507, "576": 511, "5760": 532, "57602": 502, "5763635e": 507, "5765": 513, "5768262e": 507, "576e": 478, "5770": 513, "577398": 519, "5779": 513, "5779092e": 507, "578": [502, 504, 513, 610], "5782814": 504, "579": [502, 513], "5791754818483286e": 499, "5793": 513, "57944657408": 502, "57967": 502, "57e": 502, "58": [106, 127, 434, 437, 477, 481, 483, 486, 502, 508, 509, 511, 513, 521, 529], "580": 611, "5806": 513, "581": [475, 513], "5819e": 476, "582": [455, 513], "5820": 513, "5821": 513, "583": 513, "5833": 513, "58332": 502, "5833e": 502, "5835918e": 507, "583e": 478, "584": 513, "5842497e": 507, "5847": 513, "585": 502, "58540702": 98, "5862": 513, "5867488e": 507, "58693695": 497, "58698": 502, "587": 513, "5877": 513, "5878": 513, "5883": 513, "5886": 513, "588e": 502, "58909": 496, "58926": 478, "5892966e": 507, "5895": 470, "58999": 245, "58e": [492, 502, 504], "59": [83, 106, 127, 481, 492, 494, 502, 508, 513, 521, 532], "590": 474, "5900": 513, "59000": [245, 604], "59001": 245, "5901": 513, "5902": 513, "59063": 502, "5908": 502, "590835686434463": 514, "591": [455, 467, 502, 523], "59100": [603, 604], "5912": 513, "59123": [597, 598, 599], "5913": 513, "5915030546513255": 500, "5915256430921616": 513, "5915e": 502, "5918": 513, "5919": 513, "592": 513, "59200": 603, "59233": 512, "59235": [83, 518], "5924": 513, "59240": 512, "5924e": 530, "59250": 512, "59254e": 468, "5926": 513, "59265": 468, "5929": 513, "593": [455, 513], "59300": 497, "5931": 513, "59344": 532, "59348": 532, "59365": 604, "594": 455, "59400008": 98, "59428": 502, "5945": 513, "59451": 478, "5947": 513, "5951631e": 507, "5956621435": 504, "596": 511, "5967": 513, "59696": 478, "596e": 502, "597": 513, "597195622266303e": 499, "5974": 513, "597774": 507, "59793": 502, "598": 532, "598090": 590, "5985": 532, "5987726": 98, "599": [455, 495, 511], "5990": 513, "5994": 513, "599625": 518, "59976": 502, "599999904632568": 502, "59d09m41": 502, "59e": [502, 511, 519], "5a": 58, "5d": 614, "5e": [477, 488, 502, 504, 511, 513], "5sa46wc": 483, "6": [28, 29, 30, 31, 32, 35, 36, 37, 38, 39, 40, 50, 52, 53, 67, 86, 88, 92, 101, 104, 111, 113, 118, 128, 133, 151, 152, 153, 154, 155, 157, 158, 159, 161, 164, 166, 168, 169, 195, 196, 197, 198, 200, 201, 202, 205, 206, 208, 209, 210, 245, 287, 383, 386, 399, 402, 407, 411, 412, 416, 421, 431, 434, 447, 449, 451, 457, 458, 462, 464, 468, 469, 470, 472, 474, 475, 476, 477, 478, 480, 481, 483, 484, 485, 486, 487, 488, 489, 492, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 507, 508, 509, 510, 511, 512, 513, 515, 517, 518, 519, 520, 521, 529, 530, 532, 538, 555, 559, 566, 570, 591, 608, 610, 614], "60": [67, 92, 159, 462, 475, 478, 502, 505, 513, 519], "600": [475, 478, 484, 513], "6000": 558, "6000000000000001": 512, "6002": 513, "6003": 513, "600661": 507, "60075": 507, "60090769e": 512, "600e": 474, "6010": 513, "6018166e": 507, "601e": 502, "6021": 513, "6024e": 530, "6026": 513, "6028": 513, "603": [511, 513, 532], "6033": 468, "60350": 472, "603625": 507, "604": 474, "6040": 513, "6044": 513, "6044758630708": 496, "6046689e": 507, "6049": 513, "606": 513, "60603928": 512, "6062": 513, "6069": 513, "607": 489, "6076": 513, "6080": 513, "60849": [600, 601, 602], "6090": 513, "6099": 513, "60e": 502, "61": [67, 444, 483, 502, 511, 513, 519, 611], "610": 511, "61051": 519, "6105760e": 507, "611": [478, 504, 610], "611168": 504, "6116853": 502, "6119": 513, "611e": 502, "612": 513, "612244897959162": 489, "6125": 521, "612e": 478, "613114": 500, "614": 513, "6142": 513, "61422433": 98, "6144": 513, "61489": 507, "615": 513, "615316": 532, "6163": 496, "617": 513, "617835": 507, "6180092990321": 496, "6181862e": 507, "61862": 245, "619": 502, "6194453e": 507, "61975474351522": 529, "6199": 513, "62": [502, 513, 520, 530], "620": 502, "620398": 507, "6204": 513, "6205": 532, "621": 513, "6210": 513, "6211": 513, "62111": 478, "621499": 532, "6218742e": 507, "6219": 472, "622": [455, 472, 513], "62258": 502, "6227766": 509, "62277660168379": 509, "6228e": 472, "623": [502, 513, 532], "62320": 472, "623397": 507, "62341325": 509, "623413251903492": 509, "6237": 513, "624": [511, 513], "6241": 513, "624122": 485, "625": 513, "62503": 502, "62514628": 507, "6253652e": 507, "6256": 513, "6259962e": 507, "6263": 513, "6266": 532, "6267247": 532, "627": 513, "628": 455, "62842028": 503, "63": [195, 196, 205, 208, 468, 474, 476, 503, 508, 513, 520, 529, 530, 553, 555, 556, 559], "630": [82, 511, 513, 521, 529], "6303": 513, "6309576500000000": 532, "630e": 67, "631": [455, 483], "631155605": 487, "631159205": 487, "631170005": 487, "631173605": 487, "631177205": 487, "631180805": 487, "6314": 513, "6316": 513, "6318811e": 507, "6319": 513, "632": 513, "6324": 517, "632627": 532, "632653061224474": 489, "6327": 513, "633": [85, 104, 107, 111, 112, 177, 475, 484, 508, 513, 529, 530, 555], "63307": 83, "63308": [494, 530], "633083": 510, "63310241699219": 484, "63326": 478, "6333": 95, "63333333": [320, 321], "6334": 513, "63342": 532, "633600": 511, "634": 513, "6340": 513, "6349": 513, "635": 455, "63500212963": 502, "6353": 513, "6354": 532, "63541": 518, "6364": 513, "63668832485633": 496, "6378": 513, "638": [467, 469, 473, 511], "639": 502, "6390": 468, "63902": 468, "6392": 513, "6393": 513, "6394e": 480, "6397": 532, "63cbq": 499, "63e": 503, "64": [39, 67, 83, 128, 196, 437, 492, 502, 513, 519], "640": [455, 513], "6402822e": 507, "641": [455, 532], "6410": 513, "64103": 518, "6411": 513, "6413": 485, "6417": 485, "6419578e": 507, "642": 532, "6424216679053606": 486, "6429005895278312": 514, "642e": 474, "643": [33, 513], "64323": 478, "6435": 513, "644": [467, 473, 504, 516], "64438": 519, "6444": 468, "644527": 504, "645": [503, 504], "6451": 485, "6464": 468, "647": 455, "6471115e": 507, "6472": 513, "6475": 513, "64794383e": 512, "648": [455, 467, 516], "6481": 513, "6485": 513, "6489": 513, "648e": 67, "649": 455, "6496": 513, "64987376": 98, "64e": 475, "65": [63, 420, 437, 439, 496, 503, 513], "650": 503, "650309": 564, "6509": 468, "651": [502, 513], "651058": 532, "651277": 483, "6514": 532, "652": [467, 484, 486, 491, 513], "6522": 513, "6522806": 532, "652368617859867": 484, "6528": 513, "653": [455, 470], "6530612244897958": 489, "6533": 513, "65357608e": 507, "6538": 513, "654": [468, 502], "6540": 513, "65412": 485, "6542": 513, "654e": 502, "655": [478, 513], "6550": 513, "655283": 478, "6554088e": 507, "6555": 513, "6556248e": 507, "6557": 478, "655e": [67, 475], "656": [513, 610], "65603222222": 519, "65603794185": 502, "6561e": 483, "6563679838373": 496, "6567": 513, "657": 513, "6577182894355391": 514, "658": 511, "6582": 513, "6583": 513, "6584": 513, "658909145253801e": 532, "6589622747787678": 514, "659": [474, 478, 513], "659395": 483, "66": [52, 53, 437, 440, 477, 503, 505, 511, 513, 515, 529], "660": [455, 513], "6600": 513, "6604475": 485, "660e": 532, "660fals": 472, "661": 455, "6610048102039": 486, "66104": 468, "6612": 513, "6617": 513, "662": 502, "663": [474, 610], "663742400000000": 532, "664502403": 518, "664502405": 518, "664502408": 518, "664502409": 518, "664502414": 518, "664e": 478, "6652219e": 507, "6656873021399468": 486, "666": 513, "66650390625": 470, "6666666666583865": 495, "6666666666666666": 599, "6675": 513, "6678": 478, "6681": 513, "66813": 485, "66984341": 507, "669e": 478, "66e": [483, 503], "67": [17, 437, 496, 502, 513, 532], "670": [502, 513], "6702": 513, "6705024680435898": 317, "6706": 513, "671": [476, 487, 513, 521, 597], "671401202421353": 513, "6714844975732426": 513, "671616": 468, "6723": 513, "6725": 513, "6728": [502, 532], "673": 513, "67304": 98, "67375": 468, "6739": 513, "67457342435522e": 532, "6746": 513, "675": [467, 474, 498, 513], "6753": 513, "6761": 513, "6768369882203884": 475, "6768e": 475, "677": [455, 513], "6772235e": 507, "67759236e": 507, "6776": 513, "678": [86, 486], "67824": 503, "6784": 610, "6786": 513, "67861": 507, "6786834721261165e": 475, "679": [455, 491], "679478008101006e": 475, "6795e": 475, "67992517": 98, "67e21": 501, "68": [67, 83, 97, 158, 164, 166, 167, 168, 170, 240, 437, 468, 474, 484, 502, 505, 507, 509, 513, 518, 519, 532, 611], "680": 511, "6803": 532, "6804": 513, "6812": 513, "6812310184489": 496, "68125": 507, "682": 513, "6823": 468, "6831": 513, "683531458783184e": 499, "684": 177, "68542112": 98, "6855": 513, "685880899226832e": 499, "68628538586": 503, "6863": 513, "687": 511, "6871": 513, "687214": 508, "687500": 508, "687685": 502, "68e": [469, 483, 502], "69": [104, 464, 478, 492, 502, 503, 513], "690": [67, 513], "690557685186": 502, "6906": 513, "6909290e": 507, "691": 502, "6913": 513, "69138": 478, "691492300600545": 486, "691680": [104, 503, 511], "692": [478, 513], "692e": 475, "693": 513, "69314486": 510, "6932172783190618": 513, "6934": 513, "693877551020403": 489, "693940": 483, "694429": 581, "6946": 513, "6953125": 503, "69543812": 98, "6955": 513, "6958": 513, "6959": 513, "6959369197218669": 514, "695e": 478, "6968": 513, "697": 513, "6972": 513, "697317": 519, "69735": 507, "6979": 513, "697e": 472, "697fals": 472, "6985": 470, "699": 513, "6992": 485, "6999": 513, "6e": [472, 502, 511, 513], "6h": 520, "6th": 436, "7": [30, 31, 38, 52, 53, 67, 88, 92, 104, 107, 128, 134, 177, 180, 207, 213, 215, 243, 385, 386, 395, 399, 400, 407, 411, 412, 416, 434, 438, 439, 441, 442, 448, 449, 454, 455, 456, 458, 459, 468, 474, 475, 477, 478, 484, 486, 487, 494, 495, 496, 497, 499, 500, 502, 504, 505, 507, 508, 509, 511, 512, 513, 514, 515, 518, 519, 529, 532, 559, 564, 565, 603, 610, 611], "70": [67, 92, 104, 475, 485, 502, 503, 513, 610], "700": [403, 488, 504, 510], "70000000e": 512, "7000e": 512, "70016": 485, "7007": 485, "701": 555, "702": [494, 502, 519, 530], "7021": 513, "702e": 478, "703": [434, 513], "70358483e": 512, "704": 511, "70428": 532, "70437": 507, "705": 532, "70546": 478, "7057": 513, "7059": 513, "70634e": 468, "7068": 513, "706e": [484, 502], "707": 513, "7079": 513, "707945784": 504, "708": [474, 475], "7084": 513, "709": 455, "7097381e": 507, "7098": 513, "70e": 512, "71": [33, 312, 314, 475, 477, 511, 513, 611], "710": 455, "71067811865478": 502, "711": 513, "711541686998153e": 499, "7116851": 512, "711e": 478, "712": 486, "71220672": 503, "7123895e": 507, "7124": 513, "712e": [494, 530], "713": [455, 467, 502, 529, 533], "7132e": 532, "7134": 513, "71387207e": 504, "714": [502, 513], "7141": 513, "714285714285705": 489, "7143": 513, "715": [513, 532], "7155": 513, "7156": 513, "716": [97, 317, 318, 509, 513], "716062": 518, "71693826": [495, 499, 514, 546], "717": [502, 513], "7171": 513, "7172": 513, "71795506": 532, "718": 513, "7180": 513, "7184": 532, "7185": 513, "719": [455, 511], "7190994e": 507, "7191": 513, "7193": 513, "71944e": 468, "7195": 502, "719e": 502, "72": [441, 470, 502, 508, 513, 532], "720": [488, 502, 513], "7200": 492, "7217": 513, "722": 511, "72217": 532, "722557505166": 502, "7229": 513, "723": 478, "7239": 513, "723e": 502, "7240965e": 507, "72411791e": 504, "7244": 513, "7245": 513, "7248902504598615e": 513, "725": [502, 513], "7264": 513, "727": [511, 513], "7273": 513, "72775": 532, "728": 513, "7284447e": 507, "728454": 475, "7286": 513, "729e": 478, "73": [468, 513, 532], "730": 513, "7303": 532, "7304": 513, "731": 455, "7311": 513, "7312": 513, "731586963481223e": 529, "7322": 513, "7327": 513, "732e": [67, 502], "733": [67, 455], "7339": 513, "734": 532, "7342": 513, "7346938775510206": 489, "7350250533013533": 514, "7350380e": 507, "7351418e": 507, "735e": 502, "736": [474, 513, 610, 611], "7363042847805": 496, "7367": 513, "7368": 513, "7369": 513, "737": [474, 513], "7375": 513, "738": [455, 502], "7382": 513, "7385727e": 507, "739": 455, "7391": 513, "7395744e": 507, "739770898783367e": 425, "739e": 67, "73e": [502, 529], "74": [468, 513, 532], "740": 455, "7415": 513, "7418": 513, "7419": 513, "742": 511, "7429e": 492, "743": 513, "743e": [469, 502], "7441": 513, "74427": 485, "74465974e": 507, "74479": 478, "745": 513, "74542e": 468, "746": [455, 513], "7466": 513, "7468": 513, "7469": 513, "7470": 513, "7471700e": 507, "7479085e": 507, "748": [496, 502], "748012": 598, "7481": 513, "748259": 483, "74989420933": 504, "74e": 492, "75": [67, 388, 465, 469, 474, 513, 532], "750": [513, 516, 611], "7500": 513, "7509": 513, "7510": 513, "751647922374016": 529, "7523861786389254": 513, "75267735": 532, "7527": 513, "7528": 513, "753": [455, 475, 513], "7537086e": 507, "754": [455, 519], "75408483": 532, "754117": 596, "7542": 513, "7550": 513, "755102040816327": 489, "7555": 508, "7557": 513, "7559": 532, "756": 502, "7563": 513, "7567": 468, "7576": 513, "758": 513, "7580410e": 507, "759": 455, "7590": 513, "7594": 513, "7596682e": 507, "75e": [502, 530], "76": [486, 499, 509, 513], "7613": 434, "762": [455, 513], "762199399999986": 571, "763": 455, "7637308880733709": 514, "7638": 478, "763e": 478, "764": [467, 491], "76419591747674": 496, "7642": 513, "7647": [513, 532], "76473": 478, "7652512e": 507, "765938": 583, "766": [455, 467, 478, 498, 499], "7660168382": 502, "766d": 518, "767": 455, "76739": 502, "768": [467, 478, 482], "768000": [104, 503], "768048": 98, "7681656e": 507, "76837444": 497, "7684028": 532, "769": 496, "7692170e": 507, "76e": 511, "77": 513, "770": [67, 513], "7705": 513, "771": 513, "771667": 521, "77174": 478, "7718272408581743": 317, "771e": 502, "772": [455, 468, 513], "77206": 532, "77218": 478, "773": 502, "7731": 513, "7733e": [469, 502], "7734": 513, "77351": 478, "774": [455, 492, 513], "7742": 513, "7743": 513, "7743835449219": 474, "7748": 513, "774e": 502, "775": [67, 467, 511, 513, 594], "7751": 513, "7752246952377783": 485, "7755386e": 507, "7758": 513, "7760": 532, "7763307219821931": 317, "7764": 513, "7765957e": 507, "77678": 468, "7769775": 518, "777": [455, 513], "7770": 513, "7771617763704126": 317, "7772": 513, "77751797": 98, "777699": 586, "7778": 513, "777e": [67, 472], "778": [455, 467, 473, 474, 475, 502, 513], "7782": 513, "77827941": 509, "778279410038923": 509, "7783": 513, "7784": 513, "779": [475, 502], "7792": 513, "7794": 513, "7796942": 532, "779e": 474, "77e": [477, 502], "78": [509, 510, 513, 520, 530], "780": [31, 128, 513], "7800e": 474, "7804888e": 507, "7809": 513, "780e": 128, "7810": 513, "7816": 513, "78188": 478, "78188096": 98, "782": 519, "7821": 513, "7827941": 509, "78279410038923": 509, "783": [455, 502, 532], "7833": 513, "78332719": 485, "78333": 485, "7834": 513, "783587001383003": 518, "783e": 485, "784": [456, 475], "7844": 513, "78499999999997": 567, "785": [513, 567], "7852": 513, "7853981633974483": 602, "786": 513, "787": [67, 177, 482], "7871694602003052e": 494, "7875405607868806": 514, "7876233e": 507, "788": 502, "7885": 513, "7887840e": 507, "788e": 502, "789": [455, 467, 481, 482], "78910994": 98, "7894": 485, "7895": 513, "78952750835169": 496, "7897": 513, "7899": 513, "78e": 511, "79": [470, 502, 513], "790": 455, "791": [456, 513], "7913e": 474, "7922": 468, "7926": 513, "793": [456, 478], "7933": 513, "7934": 513, "7936": 513, "794": 504, "7940": 513, "7941697": 504, "7942": 513, "79432823": 512, "7943282347": 504, "79469899": 485, "79470": 485, "7948": 513, "7949": 513, "794e": 478, "79591836734692": 489, "796": [456, 511, 513], "7962": 513, "7964": 513, "797": [456, 467, 508, 516], "7972": 508, "798": 456, "798218": 468, "7983": 513, "7989": 513, "799": 474, "7990194e": 507, "7993": 513, "7997221e": 507, "799999952316284": 502, "7c": 509, "7d": 502, "7e": [502, 511, 512, 513], "7e955f": 437, "8": [17, 18, 21, 22, 24, 25, 27, 38, 40, 50, 67, 88, 90, 92, 102, 104, 107, 111, 112, 113, 118, 131, 151, 152, 201, 208, 243, 245, 319, 395, 399, 402, 403, 412, 438, 439, 442, 444, 445, 449, 450, 451, 454, 455, 456, 459, 468, 469, 470, 472, 473, 474, 475, 476, 477, 478, 480, 481, 483, 484, 485, 486, 487, 488, 489, 491, 494, 495, 496, 497, 499, 500, 501, 502, 503, 504, 505, 507, 508, 509, 510, 511, 512, 513, 515, 517, 518, 519, 520, 521, 529, 530, 532, 539, 541, 550, 555, 559, 564, 574, 585, 593, 610], "80": [180, 320, 476, 477, 478, 503, 509, 513, 519, 555, 584, 593], "800": 513, "800468": 106, "800932": 502, "800e": [492, 512], "801": [532, 555], "8011": 513, "801668796295": 502, "8017": 513, "802": [511, 532], "8023": 513, "803": [474, 513], "8030": 513, "8031431e": 507, "8033": 513, "8037638e": 507, "804": [511, 513], "804492": 492, "8046": 513, "805": 513, "8053": 513, "8062607e": 507, "8065": 513, "80683246": 507, "8069": 513, "807": [478, 571], "8071": 478, "807201": 532, "8075": [502, 532], "8075185": 502, "8081": 513, "8084e": 483, "808693108304212e": 505, "80871364": 98, "809": 513, "8090746": 518, "8095": 513, "809505": 502, "8098": 513, "80982039": 507, "80e": 469, "81": [445, 469, 494, 496, 513, 574], "810": [456, 502, 513], "810000": 492, "8100e": 469, "8101": 513, "8108": 513, "810e": 502, "811": 456, "811533729700176e": 505, "8119": 513, "812": 456, "8120751984899354e": 505, "81221696315049e": 505, "8122425528751894e": 505, "8122e": 505, "8123587278110435e": 505, "81292578645326e": 505, "812951376050203e": 505, "813": 456, "814": 456, "81482879e": 499, "8150": 532, "815791997446166e": 505, "816": 456, "8160964882165554": 317, "8163": 513, "81632653061222": 489, "81699e": 468, "816e": 502, "8170": 513, "817277": 593, "8174": 513, "818": 513, "818388e": 532, "81847286": 497, "818e": 472, "819": 502, "8194": 492, "81e": 574, "82": [67, 437, 483, 502, 513, 530, 559], "820": 456, "8205": 513, "8205513": 518, "820562952023891": 317, "82073484337354e": 499, "8209": 513, "821": 513, "8222980e": 507, "8224": 513, "823": 474, "8230": 513, "8235": 513, "824": [456, 511], "8241471833009617": 514, "825": [456, 468, 486, 502, 513], "8250": 513, "8252": 513, "8256": 532, "826": 456, "826414166666": 95, "827": 456, "8272": 534, "82739": 478, "8275": 513, "8279": 513, "8282": 513, "8289": 513, "829": 513, "8290458e": 507, "8292": 513, "8293": 532, "82946153": 532, "8295": 513, "8298": 513, "82e": 484, "83": [30, 67, 83, 85, 95, 104, 107, 111, 112, 177, 180, 195, 196, 205, 208, 320, 321, 474, 475, 476, 478, 484, 494, 503, 508, 509, 510, 513, 517, 520, 529, 530, 550, 553, 555, 556, 559], "830": 456, "8300": 532, "8307": 513, "831": [456, 513], "8317": 513, "832": 456, "8320": 513, "83242471": 507, "833": [456, 475, 478], "833333333336": 497, "833487": 127, "8339": 513, "834": [456, 513], "8340": 513, "8341884287660133": 514, "8349780e": 507, "835": 456, "8351": 513, "835e": [475, 485], "835fals": 472, "836": [456, 497, 502, 513], "8363": 513, "836731": 502, "836734693877551": 489, "8369": 513, "8369650e": 507, "837": [456, 511, 513], "8373": 513, "8377268e": 507, "838": 478, "8383": 513, "8383396349722769": 317, "8387e": 476, "8395": 513, "84": [24, 437, 474, 476, 485, 502, 511, 513, 559], "840": [456, 478, 513], "8404": 513, "841": [502, 513], "8414": 513, "8418": 513, "84196311": 98, "842": [456, 502], "8420": 513, "8423": 513, "84233": 478, "8429": 513, "842x": 139, "843": [468, 497], "843864549579762e": 529, "843e": 67, "8441040e": 507, "844770648146": 95, "8449575657133206": 317, "845": 457, "84529": 502, "8455480e": 507, "845693": 468, "846": [478, 502, 610], "8462": 513, "8466": 513, "846825": 604, "847": 456, "8471": 513, "8475576e": 507, "8475650e": 507, "84794837119178": 496, "8491": 513, "8493": 513, "8495": 513, "8497": 513, "84e": 483, "85": [88, 92, 321, 463, 485, 513, 564, 565], "8507": 513, "851": 456, "85157506": 532, "8515948e": 507, "85188496e": 507, "85202": 532, "85287": 519, "852e": 502, "853": 513, "854": [456, 513], "854166666664": 497, "85416667": 495, "85469291": 98, "8548": 513, "855": 456, "85527": 485, "85527359": 485, "8555500e": 507, "8557": 513, "85624": 480, "85625": 480, "8568": [513, 532], "856e": 502, "8570719e": 507, "85722435185": 502, "8578": 513, "858": [456, 513], "858e": 502, "859": [456, 474, 513], "85900": 485, "85900392": 485, "85925": 532, "8593054": 502, "859e": 478, "85e": 502, "86": [467, 472, 474, 475, 478, 509, 513, 532, 543], "860": [502, 513], "8600": 513, "8609": 513, "861": 532, "86111111": 495, "861150": 472, "8613613e": 507, "862": 513, "8620": 492, "8621": 513, "8623": [19, 20, 26, 224, 225, 228, 232, 234, 235, 236, 241, 247, 248, 251, 255, 257, 259, 260, 261, 266, 271, 273, 274, 275, 276, 279, 283], "864": [456, 532], "8648": 513, "865": [456, 478, 513], "86676": 519, "8669": 468, "8672": 485, "8674": 513, "8676": 513, "86793518066406": 470, "868": [456, 502, 513], "86831929": 98, "8689": 513, "869": [467, 523], "8693": 513, "8699": 468, "8699165e": 507, "87": [67, 485, 509, 513], "870": [67, 456, 467, 491, 513], "8704": 478, "871": [456, 513], "8711": 513, "871719011827246e": 499, "872": [456, 478], "873": 475, "8733348": 518, "87358893e": 504, "8736082200157": 486, "873659477745188": 514, "873881": 565, "874": 470, "874749": 566, "875": 456, "8752": 513, "8758": 513, "876": 511, "87621184": 481, "8767": 513, "8769": 513, "8769240e": 507, "876e": 478, "877": 513, "8770": 513, "87710186": 98, "8774": 513, "877551020408161": 489, "877563": 502, "8776": 513, "8779": 513, "878": [502, 511], "8788": 513, "87897": 485, "87897418": 485, "8791": 513, "8799800e": 507, "88": [437, 459, 476, 485, 486, 499, 502, 509, 513, 532], "8802": 513, "880e": 478, "881": [456, 468, 478, 513], "8811": 513, "8815212313941426": 514, "882": 67, "8827": 513, "883": 456, "8834862e": 507, "883e": 67, "884": 456, "88470839": 512, "885": [456, 513], "8854": 513, "886": 502, "8863": 513, "8864": 513, "8865": 532, "8866": 513, "8868": 513, "8874": 513, "88781": 478, "888": [456, 513], "8885138e": 507, "889": 502, "8893600e": 507, "88e": [472, 502], "89": [33, 509, 513], "8903": 513, "8908866e": 507, "8909e": 496, "890e": 67, "8912": 513, "8916": 513, "8917": 513, "892": [511, 513], "8921": 513, "89243456": 532, "8926": 532, "89287": 468, "893": 456, "894": 472, "8943121e": 507, "8945": 513, "8948": 513, "89492101e": 505, "895": [467, 473, 474, 497, 513], "8954039e": 507, "89595846": 512, "896": 513, "8963": 513, "897": 513, "89709472": 532, "8971": 513, "89795918367346": 489, "898": 456, "8986348363207728": 514, "89873": 485, "8989213": 485, "898e": [478, 502], "899": 67, "8999": 485, "899a": 287, "89e": 503, "8e": [472, 483, 486, 488, 511, 513, 519, 593], "8solcrfp": 499, "9": [31, 33, 35, 67, 83, 88, 92, 201, 213, 243, 245, 351, 358, 392, 399, 400, 404, 412, 434, 440, 442, 453, 456, 458, 461, 463, 468, 470, 472, 474, 475, 476, 477, 478, 480, 481, 483, 484, 485, 486, 487, 488, 489, 492, 494, 495, 496, 497, 499, 501, 502, 503, 504, 505, 507, 508, 509, 510, 511, 512, 513, 515, 517, 518, 519, 520, 521, 529, 530, 532, 558, 566, 570, 571, 572, 597, 605, 610], "90": [57, 67, 419, 477, 481, 484, 485, 502, 509, 512, 513, 534], "900": [502, 513], "9002269877996247": 497, "900269": 507, "9003": 513, "9007": 513, "9013": 513, "9023670e": 507, "90242058e": 503, "902444": 592, "9025": 513, "903": 513, "9032163": 86, "904": 532, "905": [467, 473, 502], "9053": 513, "9053655e": 507, "9053906e": 507, "9058": 513, "906": [456, 502], "90605275e": 519, "90677811e": 504, "90685": 478, "907": [502, 513], "907319": 580, "9074812e": 507, "9075": 513, "9077294": 518, "9087": 513, "9089": 513, "908e": 474, "9092": 513, "9095": 513, "90d": 614, "90e": [104, 475, 483, 503], "91": [477, 509, 513, 515, 559], "911": 456, "9113": 513, "911552441438736e": 494, "9118": 513, "912": 502, "912525e": 532, "912779907405": 502, "9128": 513, "913": 513, "9130": 513, "913196574074": 494, "9133": 513, "9136": 513, "913e": 478, "914": 67, "9149": 513, "914e": 496, "915": [502, 513], "91507": [104, 503], "91612243652344": 470, "9163195e": 507, "9164": 513, "91719": 503, "9175": 513, "918": 67, "918365": 502, "9183673469387759": 489, "9184": 513, "919": [456, 513], "9192": 513, "919e": 502, "91e": 511, "92": [477, 478, 509, 513, 518], "920": 474, "92052435e": 504, "9205875e": 507, "921": [475, 513], "9215": 513, "9215375e": 507, "9218": 513, "92234009259": [434, 494], "9231": 513, "9233": 513, "924": [475, 513], "9240e": 512, "92490": 478, "925106": 485, "925496127504": 496, "9266": 513, "9269": 513, "9269494e": 507, "9277492e": 507, "928": [502, 513], "9280475e": 507, "929": [468, 475, 513], "929597172179024": 529, "93": [67, 126, 128, 477, 478, 509, 513, 518], "930": 513, "9300": 513, "93026": 502, "9303": [502, 532], "9310": 513, "93128e": 468, "9314": 513, "9318": 513, "932": 456, "9325": 513, "9326": 513, "93271046296": 494, "933": 456, "9332549000000": 532, "9338": 513, "934": 513, "9343": [468, 513], "9344": 513, "9346": 513, "9352": 513, "935826709880043": 500, "9359": 513, "936": 513, "9362": 513, "9363": 513, "937": 513, "93702": 519, "9373": 513, "9377": 513, "938": 513, "9382": 513, "9382336444241555": 514, "9386": 513, "9387755102040822": 489, "9389": 513, "938e": [485, 502], "939": [300, 306], "9391360e": 507, "9393": 513, "93988308": 98, "93e": 502, "94": [477, 502, 509, 513, 518, 529, 532], "940e": 502, "940fals": 472, "941": 513, "94111838": 98, "9412": 513, "9415": 513, "94186555556": [434, 494], "9419": 513, "9424": 513, "9426": 513, "9428": 513, "943282347242818": 529, "9435": 513, "9440": 513, "944060876": 504, "9441e": 480, "9443": 513, "9445": 513, "9447": 513, "9453950989269149": 514, "9459": 513, "946": 513, "9462": 485, "9463": 513, "9464": 513, "946923": 281, "94722599": 485, "94723": 485, "9474": 513, "947e": 478, "9481": 513, "9482": 513, "948683": 468, "9489822e": 507, "949": 511, "9494": 513, "9499210e": 507, "94e": [485, 502], "95": [33, 67, 158, 164, 166, 167, 168, 170, 226, 227, 231, 240, 243, 256, 258, 267, 268, 272, 278, 282, 477, 478, 485, 492, 502, 503, 505, 509, 510, 513, 518, 564, 611], "950": [456, 513], "9500979841335693": 317, "95024536e": 505, "950e": 474, "952": 67, "9520": 513, "9524": 513, "9528": 513, "9529719e": 507, "953": 511, "9535": 513, "9537056583888585e": 425, "9539": 513, "954": 513, "9540": 513, "95421509259": 494, "95451985e": 128, "9546285068162436": 514, "955": [513, 523], "9551": 513, "9552": 513, "95615": 468, "9569": 513, "957": [67, 513], "9570": 513, "9575": 513, "9580e": 476, "95883": 532, "9589": 513, "959": 513, "959198": 502, "959d": [52, 53], "96": [437, 469, 477, 503, 509, 513, 574], "960": 513, "9606540e": 507, "9608912e": 507, "9616": 513, "9619812963": 494, "96374320": 481, "965": [467, 494, 498], "9659": 513, "966": 456, "96602": 480, "967": 513, "967546": 478, "9676": 513, "9677107409819438": 317, "9679": 513, "968": [474, 485], "96814": 532, "968155": 568, "96833546296": [502, 519], "9686": 513, "969": 502, "9692e": 469, "96e": 472, "96r": 509, "97": [477, 502, 507, 513, 514, 530], "970": 513, "97003": 532, "97054": 478, "970e": 502, "971": [467, 487, 491], "97116": 485, "9715": 513, "972194607053448e": 499, "973": [502, 513], "9730e": 484, "9735": 513, "97369425926": 494, "9739": 513, "9740": 513, "9742e": 492, "9744": 513, "974e": 502, "975": 456, "9757": 513, "97596": 478, "976": 456, "9766": 513, "9768": 513, "9769": 513, "977": [467, 501, 513, 516], "97749": 485, "97749371": 485, "9776920e": 507, "9779": 513, "9780": 513, "9784": 513, "979": [67, 456, 509, 513], "97934": 478, "979591836734677": 489, "9797": 513, "97978": 83, "97e": 502, "98": [83, 361, 470, 476, 477, 478, 483, 494, 496, 507, 513, 529], "980": 67, "9802": 513, "9804": 513, "98049": 478, "981367": 512, "98149518519": 494, "9816452e": 507, "9818": 513, "982": 513, "982075849517389e": 512, "98258": 478, "9827": 513, "9833462074166": 502, "9834338e": 507, "9835": 513, "98359211280635647": 485, "984": 513, "98429": 478, "9845": [468, 513], "9847406e": 507, "984e": 478, "985": [456, 472], "985502122122975": 514, "986": 513, "9864": 513, "9865": 513, "9868439189392118": 529, "9871": 513, "9874": 513, "9876": 468, "9878": 513, "9879": 513, "988": [456, 502, 511], "988409870698051e": 52, "988413141629203e": 425, "989": 513, "9890": 532, "9895": 513, "989779066475214e": 425, "98e": 502, "99": [361, 477, 478, 480, 492, 504, 513, 530, 532], "990": 513, "991": [502, 513], "9910796e": 507, "9912648e": 507, "9912712e": 507, "992": [467, 516], "993": [470, 513], "9931": 532, "9934": 513, "994": 456, "9944": 513, "994e": 502, "995": 511, "9952": 513, "9952623149688797": 529, "9958": 513, "996": 513, "9969731e": 507, "997": [456, 513], "9972": 513, "9977859e": 507, "9978": 532, "998": 486, "9984": 513, "99848e": 519, "99878762e": 504, "999": [50, 167, 170, 502], "99919925926": 245, "9994703125224964e": 513, "99993896484375": 474, "9999912037958": 485, "999999": 502, "99999994": 86, "9999999995": 502, "9999999997835": 470, "99999999999545": 499, "999999999997": 487, "9999999999977": 502, "9999999999978": 495, "9999999999998": 502, "99999999999994": 502, "99999999999999": [477, 502], "99e": 502, "9bb6knqy": 508, "9d": 489, "9e": [469, 472, 502, 513, 593], "A": [16, 19, 20, 25, 26, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 82, 83, 84, 87, 88, 89, 90, 91, 92, 93, 100, 101, 103, 104, 106, 107, 110, 111, 112, 126, 127, 128, 137, 140, 145, 146, 195, 196, 197, 198, 200, 202, 203, 204, 205, 206, 207, 208, 209, 210, 218, 219, 220, 221, 224, 227, 228, 230, 231, 232, 234, 235, 236, 237, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 251, 254, 255, 258, 259, 260, 261, 262, 266, 267, 268, 269, 271, 274, 275, 276, 278, 279, 280, 281, 282, 283, 285, 295, 299, 307, 308, 319, 320, 321, 330, 384, 385, 386, 388, 389, 395, 396, 398, 400, 401, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 417, 419, 420, 421, 422, 423, 424, 425, 426, 427, 436, 438, 442, 443, 444, 445, 446, 449, 451, 452, 455, 456, 457, 458, 460, 462, 463, 464, 465, 468, 470, 476, 478, 483, 485, 486, 489, 494, 495, 496, 497, 500, 501, 502, 503, 505, 508, 509, 510, 511, 512, 513, 514, 515, 518, 519, 520, 521, 522, 524, 528, 530, 532, 534, 542, 543, 544, 546, 547, 555, 556, 558, 559, 561, 564, 603, 604, 607, 608, 611], "AND": [510, 511], "AS": 427, "And": [287, 395, 398, 413, 416, 422, 429, 470, 472, 474, 475, 483, 487, 489, 496, 503, 505, 509, 510, 512, 513, 518, 529, 530, 532], "As": [83, 319, 351, 395, 396, 398, 403, 407, 408, 409, 411, 413, 422, 423, 426, 427, 434, 439, 458, 468, 469, 470, 474, 475, 476, 478, 480, 481, 485, 487, 488, 494, 495, 496, 499, 500, 501, 502, 503, 505, 508, 509, 512, 513, 515, 519, 529, 532, 546, 555, 611], "At": [270, 409, 412, 415, 422, 423, 425, 428, 442, 487, 509, 518, 607], "But": [395, 400, 403, 409, 414, 423, 428, 434, 458, 474, 475, 505, 515, 518, 529, 609], "By": [19, 20, 26, 50, 65, 88, 92, 103, 104, 107, 111, 112, 125, 129, 133, 151, 152, 153, 154, 155, 156, 157, 158, 159, 161, 164, 166, 167, 168, 169, 170, 177, 184, 194, 196, 197, 198, 200, 206, 209, 210, 218, 220, 224, 225, 227, 228, 231, 232, 234, 235, 236, 240, 241, 243, 245, 247, 248, 251, 255, 256, 257, 259, 260, 261, 266, 267, 268, 271, 272, 273, 274, 275, 276, 278, 279, 282, 283, 392, 395, 422, 423, 424, 443, 444, 446, 487, 488, 495, 500, 505, 509, 513, 515, 530, 553, 557, 564, 565, 566, 612], "FOR": [140, 307], "For": [11, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 42, 77, 82, 88, 89, 92, 96, 100, 101, 102, 103, 104, 107, 111, 112, 121, 123, 125, 126, 128, 129, 130, 133, 134, 136, 137, 154, 155, 156, 161, 162, 167, 170, 177, 182, 183, 184, 187, 188, 190, 191, 194, 195, 196, 197, 198, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 215, 220, 222, 224, 225, 226, 227, 228, 229, 230, 231, 232, 234, 236, 237, 239, 240, 241, 242, 243, 244, 245, 246, 248, 249, 254, 255, 256, 257, 258, 259, 261, 262, 263, 267, 268, 269, 271, 272, 274, 275, 276, 278, 282, 283, 285, 298, 300, 304, 306, 316, 320, 321, 324, 339, 394, 395, 396, 398, 400, 401, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 414, 415, 416, 417, 419, 421, 422, 423, 424, 426, 428, 429, 430, 431, 433, 434, 436, 439, 440, 441, 443, 444, 445, 446, 449, 456, 460, 463, 468, 469, 470, 472, 474, 475, 476, 477, 478, 480, 481, 483, 484, 485, 487, 489, 492, 494, 495, 496, 499, 500, 501, 502, 503, 504, 505, 507, 508, 509, 510, 511, 512, 513, 514, 515, 518, 519, 520, 524, 525, 529, 530, 532, 534, 541, 542, 544, 546, 551, 556, 558, 559, 565, 570, 604, 608, 609, 611, 612, 613], "IN": [93, 101, 254], "If": [16, 19, 20, 26, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 45, 80, 82, 83, 84, 85, 86, 87, 88, 89, 91, 92, 94, 95, 97, 101, 104, 105, 106, 107, 108, 109, 110, 111, 112, 114, 115, 116, 123, 125, 126, 127, 128, 129, 130, 131, 133, 134, 137, 140, 144, 145, 147, 149, 154, 155, 156, 162, 165, 167, 170, 171, 173, 174, 177, 179, 180, 183, 184, 187, 188, 190, 191, 192, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 208, 209, 210, 215, 218, 220, 222, 224, 225, 226, 227, 228, 229, 230, 231, 232, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 251, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 278, 279, 280, 281, 282, 283, 284, 285, 293, 294, 316, 319, 320, 321, 333, 334, 339, 380, 384, 388, 389, 390, 391, 395, 396, 397, 398, 400, 402, 403, 408, 409, 411, 412, 413, 417, 418, 419, 421, 422, 426, 427, 428, 429, 430, 431, 432, 433, 434, 438, 439, 440, 457, 458, 459, 468, 470, 472, 474, 476, 477, 480, 483, 485, 488, 492, 494, 495, 496, 497, 499, 502, 503, 505, 508, 509, 510, 511, 512, 513, 515, 518, 519, 520, 532, 544, 546, 551, 557, 559, 566, 568, 582, 609, 610, 611, 612], "In": [15, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 67, 77, 83, 88, 89, 92, 95, 103, 105, 110, 125, 128, 129, 133, 137, 154, 173, 196, 198, 201, 204, 210, 218, 220, 282, 294, 312, 314, 320, 321, 334, 395, 398, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 430, 431, 434, 439, 440, 441, 442, 443, 444, 445, 446, 449, 460, 463, 468, 469, 470, 472, 474, 475, 476, 477, 478, 481, 483, 484, 486, 487, 488, 489, 492, 494, 495, 496, 497, 499, 500, 501, 502, 503, 504, 505, 508, 509, 510, 511, 512, 513, 514, 515, 519, 520, 524, 529, 530, 532, 542, 544, 546, 551, 554, 555, 556, 558, 559, 560, 564, 565, 570, 584, 604, 607, 608, 609, 610, 611, 612, 613], "It": [15, 19, 20, 26, 27, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 92, 104, 107, 111, 112, 113, 116, 118, 126, 145, 154, 155, 156, 158, 162, 165, 166, 167, 168, 170, 180, 183, 187, 188, 193, 197, 198, 200, 202, 205, 206, 209, 210, 212, 224, 225, 228, 231, 232, 234, 235, 236, 241, 245, 247, 248, 251, 255, 257, 259, 266, 270, 271, 273, 274, 275, 276, 279, 283, 298, 302, 304, 305, 320, 321, 329, 343, 348, 395, 396, 398, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 420, 421, 422, 423, 424, 426, 428, 429, 433, 435, 439, 440, 441, 442, 446, 449, 451, 452, 453, 458, 460, 462, 463, 464, 465, 468, 475, 481, 484, 486, 488, 492, 497, 500, 502, 503, 504, 505, 508, 509, 510, 512, 513, 515, 518, 519, 520, 521, 524, 529, 530, 532, 534, 535, 542, 543, 545, 546, 550, 551, 553, 555, 559, 575, 578, 579, 581, 582, 586, 587, 589, 590, 591, 592, 606, 607, 608, 609, 610, 611, 613], "Its": [28, 407, 422, 423, 449, 451, 489, 495, 515, 530, 548, 549, 550, 552], "NOT": 510, "No": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 86, 406, 417, 420, 421, 457, 459, 466, 489, 499, 502, 505, 508, 509, 513, 532], "Not": [107, 111, 112, 199, 205, 207, 403, 593], "ON": [104, 107, 136, 184, 185, 186, 194, 393, 401, 451, 465, 468, 469, 474, 477, 481, 485, 494, 495, 497, 505, 508, 515, 517, 546, 555, 608, 610, 612], "OR": [104, 111, 503, 510, 511], "Of": [395, 398, 434, 483, 503, 509, 513, 519, 609, 612], "On": [21, 148, 172, 178, 179, 182, 298, 305, 313, 395, 396, 401, 403, 410, 411, 427, 429, 430, 431, 432, 453, 483, 484, 505, 524, 611], "One": [31, 32, 37, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 103, 104, 107, 111, 112, 230, 239, 254, 347, 395, 396, 401, 403, 404, 405, 406, 409, 411, 412, 413, 422, 425, 426, 463, 470, 475, 481, 494, 505, 508, 509, 510, 513, 529, 532, 555, 559, 584, 609, 611], "Ones": 319, "Or": [19, 20, 26, 224, 225, 228, 232, 234, 235, 236, 241, 247, 248, 251, 255, 257, 259, 260, 261, 266, 271, 273, 274, 275, 276, 279, 283, 396, 414, 416, 475, 483, 499, 503, 504, 509, 518, 519, 544], "Such": [407, 426, 550], "THE": [140, 307], "That": [16, 19, 20, 84, 87, 91, 106, 127, 215, 218, 224, 227, 228, 231, 232, 234, 235, 236, 237, 240, 241, 242, 243, 244, 245, 246, 247, 248, 251, 258, 259, 260, 261, 262, 266, 267, 268, 269, 271, 274, 275, 276, 281, 282, 395, 396, 400, 409, 412, 416, 505, 532, 609], "The": [11, 15, 16, 17, 19, 20, 23, 26, 27, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 42, 52, 53, 57, 59, 63, 69, 77, 80, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 95, 96, 100, 101, 102, 103, 104, 106, 107, 108, 109, 110, 111, 112, 113, 117, 118, 119, 120, 121, 125, 126, 127, 128, 129, 130, 131, 133, 134, 135, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 161, 162, 164, 165, 166, 167, 168, 169, 170, 174, 178, 179, 183, 184, 187, 188, 189, 192, 193, 194, 195, 196, 197, 198, 199, 200, 202, 204, 205, 206, 207, 208, 209, 210, 214, 215, 216, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 231, 232, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 251, 255, 256, 257, 258, 259, 260, 261, 262, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 278, 279, 281, 282, 283, 285, 286, 287, 293, 295, 298, 299, 300, 302, 303, 304, 305, 306, 307, 313, 319, 320, 321, 333, 339, 341, 342, 345, 361, 377, 378, 380, 381, 383, 384, 385, 386, 388, 389, 390, 391, 392, 394, 395, 396, 397, 398, 399, 400, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 430, 431, 432, 435, 438, 439, 441, 442, 443, 444, 445, 446, 449, 451, 452, 453, 457, 458, 459, 460, 461, 462, 463, 464, 465, 468, 469, 470, 471, 472, 474, 475, 476, 477, 478, 480, 481, 483, 485, 487, 488, 489, 492, 494, 495, 496, 497, 499, 500, 501, 502, 503, 506, 507, 508, 509, 510, 511, 512, 513, 514, 517, 518, 519, 520, 521, 524, 525, 529, 530, 531, 532, 534, 535, 536, 537, 541, 542, 544, 545, 546, 548, 549, 550, 551, 552, 553, 554, 556, 557, 558, 559, 560, 564, 566, 568, 569, 570, 574, 582, 584, 593, 604, 606, 607, 608, 609, 610, 611, 612, 613, 614], "Their": 510, "Then": [67, 104, 109, 111, 396, 398, 400, 405, 408, 410, 411, 412, 413, 420, 430, 431, 470, 474, 483, 484, 487, 492, 494, 505, 510, 512, 515, 530], "There": [88, 92, 123, 145, 395, 396, 400, 401, 402, 404, 409, 410, 411, 412, 413, 414, 415, 416, 417, 420, 423, 425, 428, 430, 431, 457, 465, 485, 489, 500, 501, 502, 503, 505, 507, 508, 510, 511, 520, 534, 542, 543, 546, 559], "These": [77, 96, 202, 286, 395, 396, 400, 401, 406, 408, 409, 410, 411, 415, 416, 417, 422, 425, 441, 443, 444, 445, 449, 457, 463, 468, 484, 486, 487, 496, 500, 501, 503, 509, 512, 513, 514, 520, 522, 524, 534, 551, 556, 558, 559, 610, 611, 612], "To": [16, 19, 20, 26, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 84, 87, 88, 91, 92, 101, 106, 110, 125, 127, 129, 133, 196, 208, 224, 225, 228, 232, 234, 235, 236, 241, 247, 248, 251, 255, 257, 259, 260, 261, 266, 271, 273, 274, 275, 276, 279, 281, 283, 286, 298, 320, 321, 385, 386, 397, 398, 402, 403, 406, 407, 408, 410, 411, 417, 418, 419, 420, 421, 422, 425, 426, 428, 429, 430, 431, 432, 433, 434, 435, 439, 440, 441, 444, 445, 449, 451, 457, 458, 460, 463, 468, 469, 470, 472, 474, 475, 476, 477, 480, 481, 483, 485, 486, 487, 488, 489, 492, 494, 495, 496, 499, 500, 502, 503, 504, 505, 507, 508, 509, 510, 511, 512, 513, 514, 515, 517, 518, 519, 524, 529, 532, 542, 543, 544, 547, 551, 553, 555, 556, 564, 607, 609, 610, 611, 614], "With": [83, 102, 249, 395, 404, 405, 422, 445, 458, 515, 542, 611], "_": [104, 111, 131, 241, 261, 395, 396, 409, 420, 422, 474, 477, 481, 501, 502, 505, 511, 515, 542, 551, 555], "_0": [50, 51], "_1": [107, 112, 543], "_2": [107, 112], "__all__": 395, "__array__": 319, "__array_ufunc__": [476, 487, 521, 597], "__attributes__": [88, 92], "__call__": [17, 18, 19, 20, 21, 22, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 35, 36, 37, 39, 40, 224, 225, 226, 227, 228, 229, 231, 232, 234, 235, 236, 237, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 251, 255, 256, 257, 258, 259, 260, 261, 262, 263, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 278, 279, 281, 282, 283, 284, 285, 333, 401, 406, 424, 445], "__class__": [395, 420, 501, 540], "__dict__": [16, 84, 87, 91, 106, 127, 395], "__enter__": 372, "__eq__": 451, "__exit__": 372, "__fields__": 423, "__getitem__": [405, 406, 407, 465], "__init__": [16, 84, 87, 91, 106, 127, 205, 282, 395, 401, 407, 420, 425, 460], "__int__": 339, "__len__": 405, "__main__": [265, 395, 515, 527, 609], "__name__": [395, 481, 494, 495, 496, 499, 501, 527, 540, 609], "__neq__": 451, "__pydantic_extra__": [16, 84, 87, 91, 106, 127], "__pydantic_fields_set__": [16, 84, 87, 91, 106, 127], "__repr__": [395, 444, 458], "__str__": [395, 407, 423, 441], "__subclasses__": 501, "__version__": 433, "_build": [396, 428], "_check_interv": 463, "_compute_flux_spati": 449, "_covari": [230, 254], "_data": 420, "_dataset": 396, "_dom_class": [483, 492, 509, 529, 530], "_energy_t": 420, "_err": 499, "_errn": [129, 130, 133, 134], "_errp": [129, 130, 133, 134], "_evaluate_timevar_sourc": 463, "_f_cash_root_cython": 311, "_factr": 505, "_fields_set": [16, 84, 87, 91, 106, 127], "_i": 131, "_k": [104, 111, 542], "_l": 542, "_lat": 395, "_lon": 395, "_map": 388, "_model": 126, "_new_attribut": 395, "_old_attribut": 395, "_parameter_units_for_data_unit": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40], "_parent_namespace_depth": [16, 84, 87, 91, 106, 127], "_parse_dataset": 425, "_phi": 395, "_prior": 424, "_propagate_error": 448, "_reco": 395, "_repr_html_": 395, "_row_index": 69, "_sampl": 425, "_sample_coord_time_energi": 463, "_sampler": 425, "_scan": 505, "_static": 396, "_time_group": 420, "_time_t": 420, "_true": 395, "_type": [424, 515], "_types_namespac": [16, 84, 87, 91, 106, 127], "_update_model": 425, "_was_": [16, 84, 87, 91, 106, 127], "_wc": 571, "_weight": 424, "a_": [107, 112, 157, 548, 551, 611], "a_off": 611, "a_on": 611, "a_scan": 515, "aa": [88, 92, 319, 422], "aaguasca": 460, "ab": [33, 38, 50, 52, 53, 58, 60, 61, 62, 64, 65, 83, 89, 139, 157, 210, 218, 220, 251, 286, 287, 426, 501, 502], "abaqu": 426, "abc": [18, 56, 100, 124, 176, 195, 200, 508], "abcmeta": 508, "abdalla2018": [555, 556, 608], "abeysekara": 59, "abil": [420, 425, 513, 515], "abl": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 405, 410, 413, 425, 426, 470, 492, 494, 495, 513, 515, 522, 524, 609], "about": [11, 13, 84, 87, 91, 106, 127, 152, 157, 220, 239, 240, 245, 249, 285, 351, 395, 398, 400, 404, 411, 412, 414, 415, 416, 417, 421, 422, 424, 426, 427, 428, 433, 434, 453, 454, 458, 459, 460, 469, 472, 478, 480, 481, 483, 484, 485, 487, 502, 507, 509, 512, 513, 519, 530, 532, 542, 543, 609, 612], "abov": [29, 44, 52, 53, 83, 125, 127, 128, 131, 135, 136, 137, 145, 146, 172, 207, 384, 386, 395, 396, 398, 401, 404, 405, 407, 409, 411, 412, 413, 414, 416, 420, 425, 430, 431, 434, 468, 478, 485, 487, 488, 489, 494, 497, 499, 504, 505, 508, 509, 510, 512, 513, 514, 515, 518, 519, 520, 529, 540, 542, 543, 550, 553, 559, 608, 609, 610, 611, 612], "abramowski": 157, "abruptli": [395, 421], "abs_path": 329, "absenc": [410, 481, 508, 510, 555, 610], "absolut": [82, 92, 108, 151, 152, 153, 154, 157, 159, 161, 164, 169, 197, 198, 200, 202, 206, 209, 210, 325, 351, 371, 375, 426, 544], "absolute_tim": 613, "absopt": 413, "absorb": [283, 405, 419, 456, 574], "absorbedspectralmodel": [443, 456], "absorbt": 419, "absorpt": [232, 413, 446, 456, 465, 467, 471, 473, 524, 560, 573, 594], "abstract": [16, 56, 59, 84, 87, 91, 100, 106, 124, 127, 168, 176, 181, 195, 197, 200, 209, 263, 406, 445, 558], "abstractsetintstr": [16, 84, 87, 91, 106, 127], "ac": [312, 314], "acada": 422, "acceler": 426, "accept": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 83, 88, 92, 107, 108, 112, 125, 126, 128, 130, 172, 189, 194, 196, 197, 198, 200, 208, 209, 210, 230, 254, 299, 393, 399, 400, 401, 402, 403, 404, 407, 408, 409, 411, 412, 413, 414, 415, 416, 417, 419, 421, 422, 423, 424, 425, 426, 450, 454, 463, 465, 468, 469, 475, 476, 477, 481, 485, 488, 503, 508, 509, 513, 519, 542, 558, 565, 584, 610, 611], "acceptance_off": [107, 108, 112, 125, 126, 128, 172, 182, 407, 468, 470, 474, 477, 481, 542, 611], "acceptance_on": [125, 126, 128], "acceptang": 125, "access": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 56, 58, 60, 61, 62, 64, 65, 66, 67, 77, 82, 83, 88, 92, 104, 125, 137, 165, 195, 196, 205, 208, 305, 329, 395, 403, 404, 405, 406, 408, 411, 415, 420, 428, 430, 433, 438, 439, 446, 453, 454, 456, 457, 463, 464, 472, 474, 475, 476, 483, 499, 502, 505, 507, 511, 512, 513, 518, 521, 529, 530, 532, 541, 546, 557, 558, 559, 607], "accessor": 509, "accident": [519, 609], "accomplish": [415, 504], "accord": [15, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 53, 72, 83, 88, 92, 104, 107, 111, 112, 121, 126, 149, 155, 165, 172, 196, 202, 218, 220, 312, 314, 316, 384, 405, 406, 409, 410, 413, 415, 420, 422, 443, 452, 464, 471, 481, 494, 503, 508, 512, 514, 522, 524, 542, 543, 546], "accordingli": [210, 407, 415, 422, 440, 446, 510], "account": [104, 107, 111, 112, 125, 126, 140, 174, 190, 230, 254, 270, 295, 299, 305, 320, 321, 369, 403, 408, 411, 420, 422, 445, 462, 464, 467, 468, 470, 471, 473, 474, 476, 481, 483, 489, 496, 497, 504, 505, 508, 510, 524, 530, 542, 544, 610, 611], "accur": [138, 147, 222, 413, 415, 425, 459, 483, 505, 513, 553], "accuraci": [409, 505, 546], "acee67": 275, "aceptance_off": 407, "acero": [413, 425, 439, 441, 443, 446, 449, 451, 456, 458, 464, 465], "achiev": [16, 84, 87, 91, 106, 121, 127, 172, 385, 386, 395, 404, 405, 406, 407, 408, 409, 411, 415, 419, 422, 446, 509, 512, 514, 556, 614], "acknowledg": [398, 422, 435], "acquir": 434, "acquisit": 608, "across": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 101, 121, 395, 404, 407, 428, 486, 496, 511, 519, 542, 558, 568, 608], "act": [92, 411, 511, 570], "action": [172, 400, 405, 411, 415, 422, 427, 428, 449, 496], "activ": [92, 305, 398, 412, 415, 429, 430, 432, 433, 434, 443, 460, 500, 546], "actual": [185, 369, 370, 371, 394, 395, 396, 400, 404, 406, 408, 410, 411, 415, 420, 421, 423, 427, 477, 488, 492, 495, 503, 504, 505, 508, 509, 510, 515, 519, 520, 530, 532, 553, 555, 608, 609, 611], "ad": [16, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 41, 82, 83, 84, 87, 88, 91, 92, 104, 106, 107, 111, 112, 116, 117, 120, 127, 128, 154, 197, 198, 200, 205, 206, 209, 210, 395, 396, 398, 400, 401, 403, 404, 405, 407, 408, 409, 410, 411, 412, 414, 416, 420, 422, 438, 439, 440, 442, 443, 444, 446, 449, 451, 453, 454, 455, 456, 457, 458, 459, 460, 462, 463, 464, 465, 476, 481, 483, 484, 507, 508, 511, 512, 514, 515, 520, 542, 559, 612], "adapt": [121, 172, 215, 404, 405, 408, 409, 414, 415, 416, 418, 419, 422, 427, 434, 439, 440, 442, 443, 444, 446, 447, 449, 452, 455, 456, 458, 460, 462, 463, 464, 465, 503, 507, 509, 510, 553, 556], "adaptiveringbackgroundestim": [182, 401], "adaptiveringbackgroundmak": [175, 443, 556], "adass": 416, "add": [13, 15, 16, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 41, 42, 43, 44, 79, 84, 87, 88, 89, 91, 92, 100, 101, 103, 104, 105, 106, 107, 109, 110, 111, 112, 126, 127, 128, 151, 152, 154, 155, 156, 157, 158, 159, 162, 164, 165, 166, 167, 168, 170, 174, 197, 198, 200, 204, 206, 209, 210, 216, 230, 254, 270, 316, 363, 383, 392, 394, 395, 396, 398, 400, 403, 404, 405, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 419, 420, 422, 424, 425, 426, 427, 430, 432, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 449, 450, 451, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 468, 469, 470, 477, 483, 484, 487, 492, 494, 497, 503, 507, 508, 509, 510, 512, 515, 518, 532, 536, 537, 546, 559, 576, 609, 612], "add_artist": [512, 564, 565], "add_cbar": [104, 107, 111, 112, 128, 151, 152, 154, 157, 158, 159, 164, 165, 166, 168, 197, 198, 200, 206, 209, 210, 230, 254, 383, 478, 480, 481, 483, 485, 492, 497, 501, 503, 507, 508, 509, 511, 512, 519, 520, 529, 530, 559, 563, 564, 565, 568, 569, 571, 614], "add_chain": 513, "add_column": [88, 92], "add_enabled_unit": [468, 477, 480, 483, 485, 492, 496, 518], "add_index": [88, 92], "add_loc": 395, "add_row": [88, 92], "add_subplot": [383, 614], "addit": [16, 19, 20, 26, 43, 84, 87, 88, 91, 92, 104, 106, 107, 111, 112, 116, 125, 127, 129, 134, 169, 197, 198, 200, 203, 206, 209, 210, 224, 225, 228, 232, 234, 235, 236, 241, 247, 248, 251, 255, 257, 259, 260, 261, 266, 271, 273, 274, 275, 276, 279, 283, 320, 321, 395, 398, 399, 400, 404, 405, 406, 407, 409, 410, 411, 412, 414, 415, 416, 417, 420, 421, 422, 423, 425, 428, 429, 430, 431, 440, 441, 443, 445, 446, 449, 450, 457, 458, 460, 463, 464, 465, 472, 476, 489, 497, 502, 503, 504, 505, 509, 511, 512, 513, 515, 518, 519, 530, 532, 542, 544, 546, 553, 558, 559, 606, 612], "addition": [134, 407, 503, 505, 509, 511, 512], "address": [404, 407, 408, 409, 411, 415, 422, 515, 545], "adequ": 205, "adher": 398, "adjac": [149, 202, 449, 495, 509, 555], "adjust": [16, 67, 197, 198, 200, 206, 209, 210, 404, 406, 419, 426, 465, 475, 500, 503, 504, 512, 514, 529, 546, 553, 608], "admit": 416, "adonath": 401, "adopt": [37, 408, 411, 417, 476, 487, 488, 501], "adress": 425, "adsab": [33, 38, 50, 52, 53, 58, 60, 61, 62, 83, 89, 157, 251, 286, 287], "adult": 395, "advanc": [407, 411, 412, 416, 424, 426, 430, 507, 509, 546, 608, 609], "advantag": [403, 409, 412, 415, 420, 425, 449, 509, 515, 584, 609], "advanteg": 407, "advertis": 427, "advic": [395, 422], "advis": [396, 422, 505, 515, 524], "advoc": 395, "aeff": [16, 82, 88, 89, 107, 112, 157, 183, 191, 405, 407, 408, 445, 446, 470, 474, 475, 476, 480, 481, 483, 485, 495, 499, 507, 508, 518, 520, 521, 529, 530, 548, 553, 555, 556, 608], "aeff2d": 156, "aeff_2d": [82, 88, 157, 518, 521], "aeff_3d": 507, "aeff_ev": 507, "aeff_new": 507, "aeff_perc": [183, 470, 474, 475, 485, 495, 499, 508, 520, 555], "aegi": 232, "af": 391, "affect": [140, 395, 403, 407, 409, 421, 440, 441, 452, 461, 469, 515], "affili": [409, 422, 460], "afmhot": [511, 532], "aforement": 422, "after": [16, 45, 50, 51, 52, 53, 84, 87, 91, 92, 101, 104, 106, 107, 111, 127, 167, 170, 223, 305, 333, 351, 375, 378, 395, 398, 400, 403, 404, 406, 408, 409, 410, 411, 413, 414, 416, 418, 419, 420, 421, 422, 423, 425, 426, 427, 428, 429, 434, 438, 445, 447, 448, 449, 451, 457, 459, 460, 461, 472, 481, 483, 495, 499, 500, 505, 509, 511, 513, 518, 520, 521, 546, 609, 613], "aftervalid": 91, "ag": [20, 43, 44, 45, 50, 51, 52, 53, 54, 325, 395, 536], "again": [167, 398, 405, 407, 409, 411, 417, 423, 429, 444, 445, 448, 455, 460, 472, 474, 475, 483, 488, 489, 509, 512, 515, 519, 529, 532, 559, 609], "against": [16, 84, 87, 91, 106, 127, 151, 152, 153, 154, 157, 158, 159, 161, 164, 166, 168, 169, 196, 197, 198, 200, 205, 206, 208, 209, 210, 396, 398, 412, 419, 428, 502, 504, 519, 529, 541, 544], "agent": 411, "agglom": 13, "aggreg": 423, "agil": 408, "agn": [141, 303, 409, 474, 494, 496, 500, 518], "agnost": 505, "ago": 402, "agre": [199, 202, 398, 400, 409, 415, 422], "agreement": [395, 398, 417, 497], "aguasca": [451, 460, 461, 462, 463, 465], "aharonian": 486, "ahead": [409, 438], "ahelp": 215, "aic": [425, 426], "aim": [395, 404, 405, 422, 425, 483, 487, 501, 514, 534, 608], "air": 518, "ait": [196, 197, 198, 527], "aitoff": 409, "aka": 532, "al": [17, 19, 20, 21, 22, 24, 25, 26, 27, 28, 33, 35, 39, 40, 57, 59, 63, 103, 121, 135, 140, 141, 157, 232, 304, 305, 307, 312, 313, 314, 396, 405, 425, 465, 478, 486, 500, 513, 534, 608], "alamo": 425, "albert": [63, 608], "albert2007": 608, "alexi": [446, 449], "algorithm": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 59, 88, 92, 121, 135, 137, 172, 215, 298, 395, 401, 407, 408, 409, 414, 423, 425, 441, 446, 454, 455, 456, 465, 478, 500, 504, 505, 513, 520, 544, 558, 607, 611], "alia": [16, 56, 84, 87, 91, 106, 127, 398, 532], "alias": [16, 56, 84, 87, 91, 106, 127], "align": [88, 92, 101, 151, 152, 153, 154, 157, 158, 159, 160, 161, 164, 166, 168, 169, 177, 196, 197, 198, 200, 202, 206, 208, 209, 210, 320, 321, 395, 465, 507, 510, 512], "alisha": 451, "all": [6, 16, 19, 20, 26, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 82, 83, 84, 87, 88, 89, 90, 91, 92, 93, 96, 97, 101, 104, 105, 106, 107, 109, 110, 111, 112, 125, 126, 127, 128, 129, 133, 134, 137, 151, 152, 153, 154, 155, 156, 157, 158, 159, 161, 164, 166, 167, 168, 169, 170, 171, 177, 184, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 215, 218, 219, 221, 224, 225, 226, 227, 228, 229, 230, 231, 232, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 251, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 278, 279, 280, 281, 282, 283, 284, 285, 286, 293, 320, 321, 366, 367, 368, 369, 370, 371, 382, 391, 394, 395, 396, 398, 400, 401, 402, 403, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 433, 438, 439, 440, 441, 442, 443, 444, 445, 446, 449, 451, 452, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 467, 469, 470, 474, 475, 476, 480, 481, 483, 485, 486, 487, 492, 494, 496, 497, 499, 502, 503, 504, 505, 507, 509, 510, 511, 512, 515, 518, 519, 520, 521, 522, 524, 527, 529, 530, 532, 536, 542, 544, 546, 551, 555, 557, 558, 559, 560, 584, 606, 609, 610, 611], "all_quant": [126, 128], "allclos": [151, 152, 153, 154, 157, 158, 159, 161, 164, 166, 168, 169, 197, 198, 199, 200, 202, 206, 207, 209, 210, 369], "allianc": 415, "alloc": [198, 206, 210], "allow": [16, 26, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 56, 84, 87, 88, 91, 92, 106, 121, 126, 127, 128, 136, 137, 167, 170, 196, 201, 203, 344, 395, 396, 398, 400, 401, 402, 405, 406, 407, 408, 409, 411, 412, 413, 414, 415, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 430, 432, 440, 442, 443, 444, 445, 446, 449, 451, 458, 459, 460, 463, 465, 468, 474, 486, 496, 503, 504, 505, 507, 508, 509, 510, 513, 530, 542, 544, 546, 553, 558, 559, 606, 607, 609, 614], "allow_extra": 201, "allow_pickl": [16, 84, 87, 91, 106, 127], "allowed_channel": [26, 501], "allski": [83, 509], "alma": 414, "almeida": 446, "almost": [394, 396, 398, 409, 519, 532], "alogrithm": 425, "alon": 400, "along": [68, 103, 126, 128, 132, 149, 151, 152, 153, 154, 157, 158, 159, 161, 164, 165, 166, 168, 169, 197, 198, 200, 206, 208, 209, 210, 303, 304, 305, 307, 332, 333, 343, 353, 354, 404, 405, 420, 425, 460, 463, 465, 480, 489, 502, 503, 507, 508, 511, 512, 513, 543, 558, 559, 577, 608], "alpha": [21, 27, 28, 48, 104, 107, 111, 112, 125, 126, 128, 172, 194, 215, 235, 236, 246, 247, 248, 262, 299, 310, 316, 392, 393, 407, 419, 421, 449, 456, 465, 468, 469, 470, 472, 474, 476, 477, 481, 483, 484, 488, 497, 502, 505, 515, 518, 564, 574, 576, 578, 580, 582, 583, 584, 593, 600, 601, 610, 611, 612], "alpha_": [107, 112], "alpha_1": [107, 112], "alpha_2": [107, 112], "alpha_norm": [232, 419, 469, 574], "alphabet": [412, 422, 439, 440, 441, 442, 443, 444, 445, 446, 449], "alreadi": [15, 16, 26, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 84, 87, 88, 91, 92, 106, 127, 215, 278, 279, 280, 282, 320, 321, 395, 398, 401, 402, 403, 406, 407, 408, 409, 410, 412, 416, 417, 418, 420, 423, 425, 426, 427, 428, 458, 469, 472, 476, 478, 481, 488, 497, 501, 502, 503, 509, 510, 511, 512, 513, 518, 519, 520, 532, 534, 559, 571], "also": [15, 19, 20, 26, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 88, 92, 96, 121, 125, 126, 128, 129, 138, 139, 145, 147, 148, 169, 174, 180, 195, 202, 204, 205, 215, 224, 225, 228, 232, 234, 235, 236, 241, 247, 248, 251, 255, 257, 259, 260, 261, 266, 271, 273, 274, 275, 276, 279, 281, 283, 294, 319, 320, 321, 329, 334, 395, 396, 398, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 415, 416, 417, 418, 419, 420, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 439, 440, 441, 442, 443, 444, 445, 446, 449, 457, 458, 459, 463, 468, 469, 470, 474, 475, 476, 477, 478, 481, 483, 485, 486, 487, 488, 489, 497, 500, 501, 502, 503, 504, 505, 507, 508, 509, 510, 511, 512, 513, 515, 517, 518, 519, 529, 530, 534, 542, 543, 544, 545, 546, 551, 553, 555, 558, 559, 584, 587, 606, 608, 609, 610, 611, 613], "alt": [83, 85, 89, 95, 96, 320, 395, 396, 613], "alt_pnt": 92, "altaz": [83, 85, 95, 160, 177, 190, 320, 395, 507, 613], "altaz_fram": [83, 95], "altaz_from_t": [83, 95], "altaz_interpol": 95, "altern": [82, 88, 92, 123, 293, 394, 395, 398, 400, 404, 431, 449, 469, 474, 476, 478, 486, 502, 505, 507, 509, 511, 518, 542, 543, 609], "although": [395, 408, 409, 410, 412, 416, 420, 505, 513, 518, 569, 570, 606, 613], "altitud": 470, "alwai": [77, 83, 88, 92, 154, 202, 205, 212, 218, 220, 238, 320, 321, 395, 396, 398, 401, 402, 403, 405, 406, 407, 409, 412, 415, 421, 422, 425, 431, 438, 445, 460, 461, 463, 477, 478, 483, 492, 501, 505, 508, 509, 511, 514, 515, 524, 544, 558, 559], "am": 404, "ambigu": [409, 457], "amend": 398, "among": [82, 88, 92, 104, 107, 111, 112, 138, 147, 411, 415, 416, 417, 419, 424, 446, 505, 608], "amount": [402, 409, 424, 546], "amp": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 269, 602], "ampl_2": [158, 507], "ampl_3": [158, 507], "amplitud": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 48, 49, 68, 103, 129, 134, 137, 197, 198, 200, 209, 210, 215, 224, 231, 234, 236, 241, 248, 252, 259, 260, 261, 269, 271, 274, 275, 276, 287, 293, 308, 406, 407, 410, 419, 425, 426, 469, 470, 472, 474, 475, 476, 477, 478, 480, 483, 484, 485, 486, 487, 488, 492, 494, 495, 496, 497, 499, 500, 502, 503, 504, 505, 511, 512, 513, 518, 519, 529, 530, 532, 544, 563, 564, 565, 566, 568, 569, 570, 571, 574, 575, 576, 578, 579, 581, 582, 584, 585, 586, 587, 589, 590, 591, 592, 596, 597, 598, 599, 600, 601, 602, 603, 604, 611], "amplitude_err": 499, "amplitude_maximum_signific": 500, "amplitude_maximum_vari": 500, "amplitude_ref": 497, "an": [6, 15, 16, 19, 20, 26, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 47, 50, 66, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 103, 104, 105, 106, 107, 110, 111, 112, 113, 116, 118, 119, 126, 127, 128, 129, 130, 131, 133, 134, 137, 144, 145, 146, 148, 152, 154, 155, 156, 157, 159, 162, 165, 167, 169, 170, 173, 177, 180, 182, 185, 187, 188, 191, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 215, 218, 224, 225, 227, 228, 230, 231, 232, 234, 235, 236, 237, 240, 241, 242, 243, 244, 245, 246, 247, 248, 251, 254, 255, 256, 257, 258, 259, 260, 261, 262, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 278, 279, 281, 282, 283, 289, 298, 303, 305, 317, 319, 320, 321, 325, 339, 350, 354, 372, 378, 385, 386, 388, 391, 394, 396, 398, 400, 401, 402, 403, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 425, 426, 427, 428, 429, 430, 431, 434, 435, 438, 439, 442, 443, 444, 445, 446, 449, 451, 452, 453, 456, 457, 458, 460, 461, 463, 464, 465, 469, 470, 472, 474, 475, 476, 477, 478, 480, 481, 483, 484, 485, 486, 489, 492, 494, 495, 496, 497, 499, 500, 502, 504, 505, 508, 509, 511, 512, 513, 514, 515, 517, 518, 519, 520, 521, 522, 524, 527, 529, 530, 531, 532, 534, 536, 541, 542, 543, 544, 546, 547, 548, 549, 550, 551, 552, 553, 555, 557, 558, 559, 563, 564, 565, 566, 567, 568, 569, 570, 571, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 596, 597, 598, 599, 600, 601, 602, 603, 604, 606, 608, 609, 610, 611, 612], "anaconda": [412, 429, 430], "analog": [88, 92, 197, 198, 200, 206, 209, 210, 559], "analogi": 417, "analys": [82, 394, 395, 404, 405, 406, 407, 409, 413, 416, 418, 419, 424, 434, 435, 441, 442, 443, 445, 446, 456, 458, 461, 474, 475, 483, 495, 496, 501, 502, 510, 512, 513, 518, 519, 520, 529, 530, 534, 542, 609], "analysi": [6, 16, 35, 57, 67, 70, 72, 74, 83, 102, 104, 106, 107, 111, 112, 117, 120, 155, 156, 162, 167, 170, 179, 183, 222, 223, 394, 395, 396, 399, 405, 406, 407, 408, 409, 410, 411, 413, 414, 415, 416, 417, 418, 419, 423, 425, 428, 429, 430, 431, 432, 434, 435, 438, 439, 440, 442, 443, 444, 449, 451, 453, 454, 455, 456, 457, 458, 459, 460, 463, 464, 465, 467, 469, 472, 473, 478, 480, 481, 482, 486, 487, 489, 490, 491, 492, 493, 496, 498, 499, 501, 502, 503, 505, 506, 508, 509, 510, 511, 512, 514, 515, 516, 517, 518, 519, 520, 521, 530, 531, 532, 534, 544, 546, 551, 553, 554, 555, 556, 559, 587, 606, 608, 609, 611], "analysis3d": 459, "analysis_1": [467, 529, 533], "analysis_1d": 494, "analysis_2": [396, 467, 530, 533], "analysis_3d": [458, 467, 483, 491, 494], "analysis_joint": 483, "analysis_mwl": [467, 484, 491], "analysis_stack": 483, "analysisconfig": [15, 396, 426, 475, 480, 481, 483, 494, 529], "analyt": [19, 20, 26, 27, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 157, 158, 166, 168, 224, 225, 228, 232, 234, 235, 236, 241, 247, 248, 251, 255, 257, 259, 260, 261, 266, 271, 273, 274, 275, 276, 279, 283, 408, 413, 464, 465, 504, 507, 512, 544, 566, 612], "analyz": [140, 307, 405, 608], "andrea": 408, "andrew": 458, "angl": [16, 17, 18, 21, 22, 24, 25, 27, 33, 34, 38, 68, 83, 90, 92, 97, 104, 107, 117, 120, 121, 125, 132, 137, 151, 155, 156, 157, 158, 159, 162, 164, 165, 166, 167, 168, 170, 173, 177, 180, 181, 183, 185, 195, 196, 198, 203, 205, 208, 210, 211, 227, 231, 240, 243, 256, 258, 267, 268, 270, 272, 278, 280, 282, 286, 320, 321, 349, 382, 395, 401, 409, 411, 419, 423, 426, 437, 439, 440, 441, 458, 465, 468, 470, 474, 477, 484, 487, 488, 495, 499, 502, 509, 510, 512, 514, 518, 519, 546, 551, 555, 558, 559, 564, 565, 566, 569, 570, 608, 614], "angle_incr": 180, "angular": [23, 104, 107, 117, 120, 131, 155, 156, 162, 167, 170, 173, 198, 205, 208, 210, 231, 240, 243, 280, 320, 321, 325, 328, 395, 411, 462, 476, 488, 497, 517, 551, 552, 608], "angular_extens": 41, "angular_s": 559, "angular_separ": [419, 462, 464, 512], "ani": [16, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 82, 83, 84, 87, 88, 91, 92, 106, 123, 127, 133, 156, 179, 197, 198, 200, 205, 206, 208, 209, 210, 319, 320, 321, 344, 379, 394, 395, 396, 398, 400, 401, 402, 403, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 417, 419, 422, 423, 425, 426, 427, 430, 431, 432, 433, 434, 438, 439, 457, 458, 459, 464, 475, 485, 486, 489, 494, 495, 497, 499, 503, 508, 509, 511, 512, 513, 515, 518, 519, 520, 521, 529, 530, 532, 534, 543, 544, 556, 558, 559, 576, 609, 613], "ann": [23, 457], "anna": 395, "annihil": [17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 460, 512, 534], "annoi": [395, 609], "annot": [16, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 84, 87, 91, 106, 127, 384, 423, 564], "announc": [395, 400, 402, 409, 411, 414, 417, 419, 421, 422, 427, 428], "annuli": [489, 559], "annulu": [130, 353, 559], "anonym": 398, "anoth": [19, 20, 26, 83, 86, 88, 92, 104, 107, 111, 112, 155, 156, 157, 162, 167, 169, 170, 199, 202, 224, 225, 226, 227, 228, 229, 230, 231, 232, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 251, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 278, 279, 280, 281, 282, 283, 284, 285, 293, 320, 321, 395, 396, 409, 410, 411, 413, 415, 416, 417, 420, 423, 425, 426, 429, 430, 432, 434, 443, 458, 497, 503, 509, 510, 512, 559, 609], "another_posit": 555, "anqc_rqn": 499, "answer": [320, 321, 415, 505, 546], "anti": [509, 510], "anticip": 404, "antipod": [320, 321], "anymor": 460, "anyon": [400, 402, 518], "anyth": [16, 84, 87, 91, 106, 127, 154, 320, 321, 411, 609], "anytim": [398, 440], "anywai": [398, 409], "anywher": [409, 412, 414, 542], "ap": [400, 412, 421], "apart": 410, "apertur": 608, "api": [238, 399, 401, 404, 405, 406, 407, 408, 409, 411, 414, 415, 416, 417, 421, 422, 435, 436, 438, 439, 440, 441, 443, 444, 445, 446, 449, 453, 457, 458, 467, 470, 474, 475, 478, 485, 487, 495, 503, 509, 510, 511, 512, 516, 518, 519, 529, 531, 532, 533, 544, 545, 553, 606, 607, 608, 609], "apj": [300, 306], "aplpi": 458, "apologis": [438, 439, 458], "app": [88, 92, 428, 434, 457], "appar": 425, "appear": [88, 92, 395, 396, 403, 409, 423, 452, 463, 465, 502], "append": [88, 92, 93, 101, 150, 195, 196, 197, 198, 200, 205, 206, 208, 209, 210, 215, 254, 407, 408, 410, 444, 463, 470, 474, 476, 477, 483, 484, 485, 487, 495, 496, 497, 499, 503, 504, 505, 508, 511, 512, 513, 514, 515, 555], "append_ax": [151, 152, 154, 157, 158, 159, 164, 166, 168, 210, 383], "appendix": [30, 137, 157, 251, 287, 308, 478, 513], "appl": 434, "appli": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 83, 86, 88, 90, 92, 102, 103, 104, 105, 107, 111, 112, 113, 117, 118, 120, 121, 125, 128, 133, 137, 154, 155, 156, 162, 167, 169, 170, 174, 180, 183, 184, 197, 198, 200, 201, 205, 206, 208, 209, 210, 218, 220, 230, 238, 254, 270, 283, 294, 295, 298, 299, 312, 314, 320, 321, 333, 334, 379, 384, 392, 395, 401, 402, 405, 406, 408, 410, 413, 415, 420, 421, 422, 426, 446, 451, 456, 457, 458, 459, 463, 465, 468, 474, 476, 487, 495, 496, 497, 499, 503, 504, 508, 509, 510, 511, 512, 513, 515, 518, 521, 530, 532, 544, 546, 553, 593, 607, 610], "applic": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 68, 88, 92, 148, 395, 406, 422, 424, 445, 500, 505, 558, 608], "apply_async": [341, 342], "apply_edisp": 464, "apply_hysteresis_threshold": 510, "apply_irf": [270, 445], "apply_mask": 203, "apply_psf": [406, 442], "apply_standard_scal": 97, "apply_threshold_sensit": 125, "apply_union": 212, "approach": [88, 92, 137, 395, 401, 403, 407, 411, 415, 417, 420, 421, 423, 426, 463, 468, 474, 508, 524, 531, 608, 611], "appropri": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 83, 88, 92, 196, 197, 198, 200, 209, 210, 319, 329, 396, 476, 481, 483, 499, 509, 609], "approv": [401, 402, 403], "approx": [52, 53], "approxim": [103, 137, 138, 147, 183, 184, 196, 197, 198, 227, 231, 240, 243, 256, 267, 268, 272, 278, 282, 295, 299, 332, 406, 409, 425, 440, 465, 468, 474, 505, 513, 518, 544, 555, 565, 566, 569, 570, 608], "appveyor": 454, "apr": [418, 436], "april": [416, 423, 445], "apt": 431, "ar": [6, 11, 15, 16, 19, 20, 23, 26, 27, 28, 29, 30, 31, 32, 33, 35, 36, 37, 39, 40, 46, 57, 67, 70, 74, 77, 79, 80, 82, 83, 84, 85, 86, 87, 88, 89, 91, 92, 97, 101, 102, 103, 104, 106, 107, 110, 111, 112, 114, 115, 117, 120, 121, 123, 125, 126, 127, 128, 129, 130, 131, 133, 134, 137, 138, 140, 141, 145, 146, 147, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 164, 165, 166, 167, 168, 169, 170, 171, 173, 174, 177, 178, 183, 184, 185, 190, 194, 195, 196, 197, 198, 200, 201, 202, 204, 205, 206, 207, 208, 209, 210, 214, 215, 217, 219, 221, 222, 224, 225, 226, 227, 228, 229, 230, 231, 232, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 251, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 293, 298, 303, 307, 312, 313, 319, 320, 321, 333, 339, 341, 353, 354, 369, 384, 386, 391, 394, 395, 396, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 438, 439, 440, 441, 442, 443, 444, 445, 446, 449, 451, 452, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 468, 469, 470, 471, 472, 474, 475, 476, 477, 478, 480, 481, 483, 484, 485, 486, 487, 488, 489, 492, 494, 495, 496, 497, 499, 500, 501, 502, 503, 504, 505, 507, 508, 509, 510, 511, 512, 513, 514, 515, 517, 518, 519, 520, 521, 524, 525, 529, 530, 532, 534, 535, 536, 537, 541, 542, 543, 544, 546, 548, 549, 550, 551, 552, 553, 556, 557, 558, 559, 560, 564, 565, 574, 584, 604, 606, 607, 608, 609, 610, 611, 612, 613, 614], "arakelian": 304, "arang": [121, 410, 478, 495, 499, 558], "arb": 515, "arbitrari": [203, 205, 206, 406, 419, 444, 457, 487, 503, 509, 515, 558, 559], "arbitrary_types_allow": [16, 84, 87, 91, 106, 127, 423], "arbitrarytypemetadata": 423, "archiv": [415, 422, 521, 530], "arcsec": 180, "arctan": 409, "area": [82, 89, 107, 109, 156, 157, 172, 183, 184, 191, 198, 206, 208, 210, 395, 396, 406, 426, 453, 455, 468, 474, 487, 497, 508, 520, 521, 551, 558, 559, 608], "areasc": [456, 458], "aren": [370, 395, 409, 414, 416, 429, 430, 432], "arf": [108, 109, 112, 201, 202, 205, 206, 474, 559], "arf_ob": 108, "arffil": 108, "arg": [11, 16, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 53, 84, 87, 88, 91, 92, 106, 111, 112, 127, 151, 152, 153, 157, 158, 159, 161, 164, 165, 166, 168, 169, 198, 199, 206, 225, 238, 252, 259, 260, 261, 320, 321, 344, 609], "arg_in_kwarg": 395, "argmax": 500, "argmin": 500, "argpars": [400, 609], "argsort": [88, 92], "argument": [11, 16, 19, 20, 23, 26, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 68, 83, 84, 86, 87, 88, 89, 91, 92, 93, 94, 101, 103, 104, 106, 107, 110, 111, 112, 127, 128, 129, 131, 133, 137, 150, 151, 152, 153, 154, 157, 158, 159, 161, 164, 165, 166, 167, 168, 169, 170, 173, 183, 195, 196, 197, 198, 200, 201, 202, 204, 205, 206, 207, 208, 209, 210, 213, 215, 224, 225, 226, 227, 228, 229, 230, 231, 232, 234, 235, 236, 237, 238, 240, 241, 242, 243, 244, 245, 246, 247, 248, 251, 254, 255, 256, 257, 258, 259, 260, 261, 262, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 278, 279, 280, 281, 282, 283, 284, 288, 294, 317, 319, 320, 321, 333, 339, 341, 342, 382, 383, 384, 388, 389, 390, 391, 392, 398, 401, 407, 410, 445, 446, 449, 451, 457, 463, 464, 465, 478, 483, 488, 505, 508, 509, 512, 514, 530, 544, 546, 557, 558, 559, 584, 609], "aris": [400, 411, 546], "arithmet": [225, 406, 459, 509, 510, 512, 576], "arjun": [456, 457], "arm": [33, 34, 38, 45, 453], "armstrong": 457, "arnau": [451, 460, 461, 462, 463, 465], "around": [56, 145, 173, 196, 198, 208, 210, 333, 409, 410, 476, 497, 501, 505, 510, 513, 520, 532, 546, 555, 558, 559], "arpit": 456, "arr": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40], "arrai": [19, 20, 28, 29, 30, 31, 32, 33, 35, 36, 37, 38, 39, 40, 82, 83, 85, 88, 92, 93, 95, 100, 101, 103, 104, 107, 111, 112, 121, 126, 128, 129, 130, 133, 134, 137, 140, 145, 146, 151, 152, 153, 154, 157, 158, 159, 161, 164, 165, 166, 167, 168, 169, 170, 195, 196, 197, 198, 199, 200, 201, 202, 203, 205, 206, 207, 208, 209, 210, 213, 218, 223, 224, 227, 228, 229, 230, 231, 232, 234, 235, 236, 237, 238, 240, 241, 242, 243, 244, 245, 246, 247, 248, 251, 254, 256, 257, 258, 259, 260, 261, 262, 266, 267, 268, 269, 270, 271, 274, 275, 276, 280, 281, 282, 283, 284, 294, 295, 299, 301, 307, 313, 315, 319, 320, 321, 332, 333, 334, 348, 349, 350, 354, 388, 389, 394, 395, 408, 409, 413, 415, 420, 423, 434, 444, 457, 460, 462, 464, 476, 477, 487, 488, 497, 499, 502, 503, 505, 507, 509, 511, 512, 515, 518, 520, 521, 532, 558, 559, 567, 593, 597, 610, 611], "array_lik": [104, 111, 151, 152, 153, 154, 157, 158, 159, 161, 164, 166, 168, 169, 195, 196, 197, 198, 200, 205, 206, 208, 209, 210, 300, 306, 316], "array_shap": [462, 464], "arriba": [450, 453, 454], "arriv": [229, 237, 242, 244, 245, 246, 262, 269, 281, 284, 400, 408, 443, 444, 445, 487, 608, 612], "arrow": 607, "arrowprop": 564, "arrowstyl": 564, "artefact": [19, 20, 26, 224, 225, 228, 232, 234, 235, 236, 241, 247, 248, 251, 255, 257, 259, 260, 261, 266, 271, 273, 274, 275, 276, 279, 283], "arthmet": 406, "articl": [139, 275, 400, 470, 495], "artifact": [125, 198, 396], "artifici": 487, "artist": [205, 230, 254, 564, 565], "arxiv": [64, 65, 183, 260, 261, 275, 276, 426, 484, 501, 502, 591, 592], "as_arrai": [88, 92], "as_artist": [205, 206, 512, 559, 564, 565], "as_energy_tru": [195, 196, 205, 208], "as_plot_cent": [199, 202, 207, 499], "as_plot_edg": [199, 202, 207], "as_plot_label": [199, 202, 207], "as_plot_scal": 202, "as_plot_xerr": [199, 202, 207], "asanyarrai": 395, "ascii": [88, 92, 128, 395], "asdf": 426, "ashton": [425, 513], "ashton2022": 425, "asid": 504, "asimov": [135, 312, 314, 515], "asinh": 478, "asinha": 82, "ask": [396, 398, 400, 402, 409, 411, 412, 416, 422, 433, 494, 532, 546, 547, 609], "asmooth": [121, 122, 395, 414, 444, 455, 458], "asmoothestim": 417, "asmoothmapestim": [122, 395, 417, 444, 446, 449, 478, 546], "aspect": [398, 422, 426, 547, 609, 614], "assert": [199, 201, 202, 207, 369, 370, 371, 398, 406, 419, 509], "assert_allclos": 395, "assert_equ": 395, "assert_nam": [199, 201, 202, 207], "assert_quantity_allclos": [395, 453], "assess": [474, 476, 500], "assign": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 104, 105, 110, 111, 196, 218, 220, 270, 280, 320, 321, 391, 395, 404, 407, 410, 423, 427, 470, 492, 494, 503, 505, 509, 512, 515, 530, 532, 558], "assist": 411, "asso": [71, 74, 75, 77, 78], "assoc": 71, "assoc1": [74, 75, 78, 502, 532], "assoc2": [74, 75, 78, 532], "assoc_fgl": 78, "assoc_fhl": 78, "assoc_gam": 75, "assoc_gam1": [74, 78], "assoc_gam2": [74, 78], "assoc_gam3": [74, 78], "assoc_new": 77, "assoc_prob_bai": 502, "assoc_prob_lr": 502, "assoc_tev": [74, 75, 78], "associ": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 67, 77, 80, 88, 92, 101, 104, 107, 125, 126, 136, 137, 140, 141, 142, 143, 155, 156, 167, 170, 187, 188, 193, 206, 230, 254, 281, 307, 319, 395, 401, 411, 420, 421, 422, 423, 424, 426, 463, 464, 469, 470, 472, 474, 478, 484, 502, 503, 504, 508, 509, 511, 512, 515, 520, 532, 543, 544, 546, 559, 611], "association_catalog": [67, 502], "association_nam": [67, 502], "assum": [23, 50, 51, 52, 53, 67, 82, 83, 85, 96, 103, 125, 126, 128, 137, 138, 139, 144, 147, 148, 157, 169, 180, 194, 196, 197, 198, 200, 203, 207, 209, 210, 215, 276, 282, 286, 293, 296, 312, 314, 348, 351, 395, 398, 407, 408, 410, 419, 420, 424, 426, 434, 435, 468, 469, 470, 474, 476, 477, 481, 487, 488, 489, 492, 501, 507, 509, 512, 515, 519, 536, 542, 544, 551, 606, 611], "assumpt": [72, 96, 104, 107, 111, 112, 121, 136, 139, 148, 312, 409, 420, 469, 513, 551, 555, 610], "astri": 98, "astrisim": 408, "astro": [6, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 129, 190, 197, 198, 200, 209, 210, 265, 283, 395, 396, 407, 414, 416, 420, 426, 441, 450, 454, 458, 460, 464, 476, 501, 507, 509, 518, 535, 536, 538, 539, 540, 543, 607, 608], "astro_dark_matt": [416, 467, 501, 516], "astromodel": 534, "astronom": [13, 409, 415, 417, 457, 608], "astronomi": [11, 287, 394, 405, 409, 413, 415, 425, 428, 435, 456, 470, 474, 481, 485, 508, 513, 518, 546, 555, 556, 606, 607, 608, 609, 610, 611, 613, 614], "astrophys": [6, 23, 325, 410, 415, 546, 607, 608], "astropi": [13, 19, 20, 26, 27, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 52, 66, 83, 85, 86, 87, 88, 89, 90, 91, 92, 93, 95, 97, 104, 107, 111, 112, 117, 120, 121, 126, 128, 130, 132, 133, 137, 145, 146, 154, 156, 165, 167, 180, 194, 195, 196, 197, 198, 200, 201, 203, 205, 206, 207, 208, 209, 210, 218, 220, 224, 225, 228, 232, 234, 235, 236, 241, 244, 245, 247, 248, 251, 255, 257, 259, 260, 261, 262, 266, 269, 270, 271, 273, 274, 275, 276, 279, 281, 283, 284, 287, 298, 307, 317, 318, 319, 320, 321, 351, 370, 371, 380, 385, 386, 390, 394, 396, 397, 398, 400, 401, 402, 406, 408, 409, 410, 412, 413, 414, 416, 417, 419, 420, 422, 423, 424, 426, 427, 434, 435, 437, 441, 442, 443, 444, 448, 450, 451, 453, 454, 455, 456, 457, 458, 459, 460, 462, 464, 468, 469, 470, 472, 474, 475, 476, 477, 478, 480, 481, 483, 484, 485, 486, 487, 488, 489, 492, 494, 495, 496, 497, 499, 500, 501, 502, 503, 504, 505, 507, 508, 509, 510, 511, 512, 514, 515, 517, 518, 519, 520, 521, 524, 529, 530, 532, 536, 538, 539, 540, 542, 543, 544, 546, 548, 550, 553, 555, 556, 557, 558, 559, 564, 565, 566, 567, 568, 571, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 596, 597, 598, 599, 600, 601, 602, 603, 604, 610, 613, 614], "astropy_healpix": 404, "astropy_help": [395, 439, 440, 441], "astropy_introduct": 440, "astropy_timeseri": 410, "astropy_vers": 395, "astyp": [88, 92], "asymetr": 103, "asymmetr": [125, 129, 130, 133, 134, 137, 138, 147, 296, 413, 439, 445, 464, 474, 515, 529, 544, 565], "asymmetri": 507, "asymptot": [135, 611, 612], "atmospher": [410, 430, 435, 513, 518, 551, 608], "atnf": 457, "atol": [86, 101, 133, 202, 207, 369, 371, 395], "atol_ax": [151, 152, 153, 154, 157, 158, 159, 161, 164, 166, 168, 169, 196, 197, 198, 200, 205, 206, 208, 209, 210], "atom": 411, "atproduction_gamma": 26, "atreye": [407, 410, 438, 439, 440, 441, 442, 443, 444, 445, 446, 448, 449, 451, 452, 457, 458, 459, 460, 461, 462, 463, 464, 465], "attach": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 85, 95, 230, 238, 254, 270, 280, 406, 417, 425, 462, 496, 505, 511, 512, 546, 609], "attempt": [16, 84, 87, 91, 106, 127, 398, 409, 412], "attenu": 469, "attr": 395, "attract": 416, "attribut": [15, 16, 17, 18, 19, 20, 21, 22, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 35, 36, 37, 38, 39, 40, 52, 53, 54, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 100, 101, 102, 103, 104, 106, 107, 108, 109, 111, 112, 121, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 164, 165, 166, 167, 168, 169, 170, 172, 173, 174, 176, 177, 178, 179, 182, 183, 184, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 213, 214, 216, 217, 218, 219, 220, 221, 224, 225, 226, 227, 228, 229, 230, 231, 232, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 251, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 278, 279, 280, 281, 282, 283, 284, 285, 295, 299, 319, 320, 321, 405, 407, 418, 423, 424, 425, 439, 440, 443, 444, 445, 446, 449, 451, 453, 455, 457, 462, 463, 464, 472, 476, 505, 508, 509, 510, 512, 532, 542, 546, 558, 559, 611], "attributeerror": [320, 321, 395], "attrnm": [320, 321], "attrribut": 509, "aug": [408, 411, 412, 414, 436], "august": [402, 408, 411, 414, 485], "authent": 398, "author": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 396, 398, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 423, 424, 425, 426, 427], "author2": 396, "authoris": 422, "authorship": 399, "auto": [77, 197, 198, 200, 209, 210, 396, 398, 406, 416, 444, 458, 505, 609], "autocorrel": 140, "autodiff": 413, "autogener": 416, "autograd": [406, 413, 426], "autolog": 415, "autom": [11, 403, 411, 422, 425, 427, 428, 451, 505, 609], "automat": [16, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 83, 84, 87, 91, 106, 114, 115, 127, 129, 133, 137, 227, 231, 238, 240, 243, 256, 267, 268, 272, 278, 282, 394, 395, 396, 398, 402, 403, 405, 406, 412, 415, 416, 418, 422, 426, 427, 438, 439, 445, 476, 485, 505, 509, 513, 546, 609, 613], "automatis": 545, "autopep8": 395, "autoscal": [218, 219, 220, 221], "auxiliari": 77, "avail": [11, 13, 26, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 57, 67, 70, 72, 77, 78, 83, 88, 89, 92, 103, 104, 107, 111, 112, 125, 126, 128, 129, 130, 133, 134, 137, 138, 147, 150, 171, 177, 183, 184, 202, 215, 218, 220, 222, 226, 227, 231, 232, 240, 243, 256, 258, 267, 268, 272, 278, 280, 282, 287, 345, 383, 395, 398, 401, 402, 403, 404, 406, 407, 408, 409, 412, 413, 416, 423, 428, 429, 430, 431, 432, 433, 439, 443, 444, 445, 449, 452, 456, 458, 460, 463, 465, 469, 474, 475, 478, 499, 504, 505, 508, 510, 512, 513, 518, 519, 524, 529, 532, 534, 536, 537, 543, 545, 546, 548, 549, 550, 552, 560, 574, 607, 609, 611], "available_hdu": 89, "available_irf": 89, "available_method": [174, 183], "available_quant": [125, 126, 128, 137, 478, 504], "available_select": [177, 184], "available_stat_typ": 103, "averag": [19, 104, 107, 111, 112, 177, 184, 187, 188, 190, 191, 210, 449, 469, 470, 474, 542, 608], "averageaz": [487, 488], "avoid": [19, 20, 26, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 88, 92, 125, 177, 224, 225, 228, 232, 234, 235, 236, 241, 247, 248, 251, 255, 257, 259, 260, 261, 266, 271, 273, 274, 275, 276, 279, 283, 298, 395, 396, 401, 402, 403, 405, 409, 413, 414, 415, 418, 419, 421, 422, 424, 426, 449, 451, 460, 462, 463, 465, 474, 481, 510, 515, 543, 546, 555, 609], "awai": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 295, 299], "awar": [320, 321, 395, 400, 407, 416, 422], "ax": [16, 19, 20, 26, 66, 67, 83, 103, 104, 107, 111, 112, 113, 114, 115, 116, 118, 125, 126, 128, 130, 131, 137, 151, 152, 153, 154, 155, 156, 157, 158, 159, 161, 162, 164, 165, 166, 167, 168, 169, 170, 177, 184, 187, 188, 193, 195, 196, 197, 198, 199, 200, 201, 202, 203, 205, 206, 207, 208, 209, 210, 213, 224, 225, 226, 227, 228, 229, 230, 231, 232, 234, 235, 236, 237, 240, 241, 242, 243, 244, 245, 246, 247, 248, 251, 254, 255, 256, 257, 258, 259, 260, 261, 262, 266, 267, 268, 269, 271, 272, 273, 274, 275, 276, 278, 279, 281, 282, 283, 284, 295, 299, 320, 321, 382, 383, 387, 388, 389, 390, 391, 392, 395, 404, 414, 426, 440, 444, 449, 455, 456, 457, 460, 463, 465, 468, 469, 470, 472, 474, 475, 476, 477, 478, 480, 481, 483, 484, 485, 486, 487, 488, 489, 492, 494, 495, 496, 497, 499, 500, 501, 502, 503, 504, 505, 507, 508, 510, 511, 512, 513, 514, 515, 518, 519, 520, 529, 530, 532, 542, 544, 546, 548, 553, 555, 556, 557, 558, 564, 565, 566, 570, 574, 603, 604, 608, 614], "ax1": [468, 478, 481, 485, 497, 510, 511], "ax2": [468, 478, 481, 485, 497, 510, 511], "ax3": [478, 485], "ax_crab_3fhl": 532, "ax_ebl": 574, "ax_excess": [470, 474], "ax_model": 574, "ax_residu": [103, 111, 112, 470, 474, 475, 476, 497, 529], "ax_s": [475, 529], "ax_spati": [104, 107, 111, 112], "ax_spectr": [104, 107, 111, 112], "ax_spectrum": [103, 111, 112, 470, 474, 475, 476, 497], "ax_sqrt_t": [470, 474], "axcols1": 509, "axcols2": 509, "axel": [404, 406, 407, 408, 409, 410, 411, 412, 413, 414, 416, 417, 418, 419, 420, 421, 426, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465], "axes0": [197, 198, 200, 206, 209, 210], "axes_loc": [151, 152, 154, 157, 158, 159, 164, 166, 168, 210, 383], "axes_nam": [196, 197, 198, 200, 205, 206, 208, 209, 210], "axesimag": [383, 384], "axesn": [197, 198, 200, 206, 209, 210], "axi": [19, 20, 26, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 41, 83, 101, 103, 104, 107, 111, 112, 113, 114, 115, 116, 118, 119, 121, 125, 126, 128, 129, 130, 132, 133, 137, 138, 141, 147, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 161, 162, 164, 165, 166, 167, 168, 169, 170, 191, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 205, 206, 207, 208, 209, 210, 224, 225, 228, 229, 230, 231, 232, 234, 235, 236, 237, 241, 242, 244, 245, 246, 247, 248, 251, 254, 255, 257, 259, 260, 261, 262, 266, 269, 271, 273, 274, 275, 276, 279, 280, 281, 283, 284, 291, 295, 298, 299, 303, 304, 305, 307, 320, 321, 332, 333, 343, 383, 388, 389, 390, 391, 401, 404, 418, 420, 426, 441, 444, 445, 446, 449, 451, 456, 458, 459, 460, 463, 468, 470, 474, 475, 476, 477, 480, 481, 483, 485, 487, 488, 489, 492, 495, 496, 499, 500, 502, 503, 507, 508, 509, 518, 519, 520, 529, 530, 532, 542, 544, 546, 550, 555, 558, 559, 604, 608], "axis0": 558, "axis1": [320, 321, 509], "axis2": [320, 321, 509], "axis_edg": 388, "axis_nam": [103, 104, 107, 111, 112, 126, 128, 141, 149, 151, 152, 153, 154, 155, 156, 157, 158, 159, 161, 162, 164, 166, 167, 168, 169, 170, 195, 196, 197, 198, 200, 201, 203, 205, 206, 208, 209, 210, 489, 494, 495, 496, 503, 504], "axis_new": [128, 149, 495, 500], "axis_origin": 500, "axis_rgb": 390, "axis_tru": 485, "axisymmetr": 464, "axvlin": [477, 501, 513, 514, 515], "axvspan": [206, 497], "az": [83, 85, 89, 95, 96, 320, 395, 613], "azimuth": 519, "azur": 445, "b": [16, 19, 20, 26, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 48, 51, 52, 54, 77, 84, 87, 88, 91, 92, 106, 127, 157, 215, 361, 395, 396, 398, 409, 419, 422, 426, 427, 474, 486, 501, 502, 505, 509, 510, 512, 513, 519, 532, 538, 542, 559], "b1509": 502, "b2bqo3k8": 499, "b2qnexf2": 499, "b_0": [564, 565], "b_1": [88, 92], "b_mean": 42, "b_psr": 43, "b_stdv": 42, "back": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 69, 77, 88, 92, 198, 320, 321, 333, 398, 405, 406, 409, 415, 416, 425, 427, 474, 475, 477, 509, 512, 529, 609], "backend": [94, 103, 123, 129, 130, 133, 134, 137, 173, 214, 215, 216, 217, 222, 223, 293, 336, 341, 342, 394, 404, 406, 439, 458, 459, 463, 470, 472, 474, 475, 476, 483, 484, 485, 497, 499, 504, 505, 513, 519, 529, 530, 546, 606, 607], "backend_default": [129, 130, 133, 137], "background": [16, 67, 82, 83, 89, 94, 104, 105, 107, 108, 110, 111, 112, 115, 116, 121, 125, 126, 128, 136, 151, 152, 153, 163, 172, 174, 175, 177, 178, 179, 180, 182, 183, 184, 190, 232, 238, 280, 288, 295, 299, 308, 309, 310, 311, 316, 391, 395, 401, 404, 407, 408, 409, 411, 416, 417, 420, 426, 430, 435, 438, 439, 440, 442, 443, 444, 445, 446, 449, 450, 451, 453, 454, 455, 456, 457, 458, 459, 461, 463, 464, 465, 467, 468, 469, 470, 474, 475, 476, 477, 478, 479, 480, 482, 483, 485, 488, 489, 492, 494, 495, 496, 497, 499, 502, 503, 505, 507, 509, 510, 515, 517, 520, 521, 524, 530, 542, 544, 545, 607, 608, 609, 611, 612], "background2d": [152, 153, 163, 445, 452, 460, 462, 464, 549], "background3d": [89, 151, 163, 190, 401, 445, 449, 457, 458, 459, 465, 507, 518, 549], "background_estim": 414, "background_interp_missing_data": 177, "background_map": [280, 406], "background_min": 150, "background_model": [104, 107, 111, 112, 137, 230, 254, 407, 408, 416, 418, 445, 480, 530], "background_oversampl": [177, 184, 508], "background_pad_offset": 177, "background_r": [414, 503], "backgroundconfig": 16, "backgroundestim": [410, 443], "backgroundevalu": 406, "backgroundirf": [151, 152], "backgroundirfmodel": 418, "backgroundmodel": [407, 418, 419, 442, 444, 445, 446, 449], "backgroundtempl": 406, "backport": [402, 421, 427], "backround": 404, "backscal": 206, "backward": [130, 400, 409, 419, 420, 421, 441, 504, 544], "bad": [86, 395, 409], "badli": 428, "balanc": 542, "band": [19, 20, 26, 68, 83, 90, 123, 126, 128, 131, 155, 156, 159, 162, 167, 170, 195, 196, 197, 198, 200, 201, 204, 205, 206, 208, 209, 210, 224, 225, 228, 232, 234, 235, 236, 241, 247, 248, 251, 255, 257, 259, 260, 261, 266, 271, 273, 274, 275, 276, 279, 283, 401, 413, 414, 419, 420, 426, 430, 438, 472, 474, 475, 484, 485, 486, 497, 501, 502, 512, 519, 521, 541, 542, 544, 607], "bandshdu": 509, "banner": 428, "bar": [15, 82, 88, 92, 104, 107, 111, 112, 121, 133, 137, 151, 152, 210, 215, 241, 305, 342, 389, 412, 449, 452, 453, 459, 464, 497, 513, 515, 546, 581], "bar_radiu": 38, "base": [15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 50, 51, 52, 53, 54, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 121, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 164, 165, 166, 167, 168, 169, 170, 172, 173, 174, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 278, 279, 280, 281, 282, 283, 284, 285, 295, 296, 297, 299, 318, 320, 321, 329, 330, 333, 339, 341, 343, 368, 382, 390, 395, 396, 398, 401, 402, 404, 405, 406, 407, 408, 409, 410, 411, 413, 414, 415, 417, 419, 424, 425, 426, 428, 430, 431, 438, 440, 441, 443, 445, 446, 449, 451, 454, 455, 456, 457, 458, 464, 465, 469, 474, 476, 477, 480, 483, 484, 485, 486, 487, 489, 497, 500, 502, 504, 507, 509, 510, 512, 513, 514, 515, 518, 519, 530, 532, 534, 543, 544, 546, 556, 558, 571, 582, 607, 608, 610, 611], "base_dir": [82, 88, 329, 518, 520, 521, 534], "basecoordinatefram": [320, 321], "basedifferenti": [320, 321], "baselin": [82, 83, 246, 518], "basement": 440, "basemodel": [16, 84, 87, 91, 106, 127, 423, 426, 483], "baseradi": 255, "baserepresent": [320, 321], "bash": [430, 432, 609], "bash_profil": 398, "bashrc": 398, "basi": [400, 401, 411, 414, 427, 451, 453, 497, 501], "basic": [45, 46, 67, 71, 72, 74, 75, 76, 78, 79, 80, 107, 112, 128, 245, 398, 401, 405, 406, 407, 408, 409, 411, 415, 416, 420, 423, 434, 446, 456, 458, 467, 470, 474, 476, 490, 491, 494, 500, 501, 502, 510, 524, 531, 532, 534, 536, 537, 544, 555, 558, 608, 609], "basicconfig": [16, 485, 527], "bayesian": [222, 223, 399, 413, 467, 505, 506, 516, 524], "bayesian_block": 500, "bayesian_edg": 500, "bayesianfit": 425, "bayesianinfer": 425, "baysian": 404, "bb": [88, 92, 422], "bbar": [19, 20], "bbox_with_unit": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40], "bcf": [152, 156, 157, 158, 167, 468, 477, 492, 496, 507, 518], "becam": 402, "becaus": [16, 84, 87, 91, 106, 127, 197, 198, 200, 204, 206, 209, 210, 320, 321, 395, 396, 398, 400, 402, 406, 407, 409, 410, 414, 419, 420, 423, 428, 449, 451, 465, 470, 472, 475, 489, 495, 497, 508, 509, 510, 511, 518, 519, 520, 529, 530, 532, 542, 546, 609, 612], "becom": [395, 403, 405, 406, 409, 414, 423, 425, 426, 487, 495, 512, 513, 546, 609, 612], "been": [16, 19, 20, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 84, 87, 91, 101, 106, 125, 126, 127, 128, 169, 218, 224, 227, 228, 231, 232, 234, 235, 236, 237, 240, 241, 242, 243, 244, 245, 246, 247, 248, 251, 258, 259, 260, 261, 262, 266, 267, 268, 269, 271, 274, 275, 276, 281, 282, 319, 400, 401, 402, 403, 404, 406, 409, 410, 411, 412, 413, 414, 415, 417, 418, 419, 420, 421, 423, 424, 425, 426, 429, 431, 445, 446, 449, 451, 452, 458, 459, 460, 461, 462, 463, 464, 465, 469, 475, 486, 495, 496, 497, 499, 504, 509, 512, 513, 514, 518, 520, 529, 543, 558, 593], "befor": [13, 16, 17, 18, 19, 20, 21, 22, 24, 25, 27, 52, 53, 84, 87, 88, 91, 92, 93, 101, 106, 126, 127, 197, 198, 218, 224, 227, 228, 231, 232, 234, 235, 236, 237, 240, 241, 242, 243, 244, 245, 246, 247, 248, 251, 254, 258, 259, 260, 261, 262, 266, 267, 268, 269, 271, 274, 275, 276, 281, 282, 333, 390, 395, 396, 398, 400, 402, 403, 404, 405, 409, 410, 411, 413, 414, 415, 421, 427, 428, 434, 452, 458, 469, 475, 477, 494, 495, 504, 505, 509, 512, 513, 520, 524, 529, 584, 609], "beforevalid": [87, 91], "begeman": 22, "begin": [52, 88, 92, 104, 111, 126, 128, 137, 416, 419, 422, 474, 476, 509, 512, 564, 569, 570, 575, 591, 611], "behav": [395, 405, 463, 480, 612], "behavior": [16, 84, 87, 88, 91, 92, 96, 106, 127, 320, 321, 420, 448, 452, 463, 465], "behaviour": [369, 395, 415, 418, 419, 446, 451, 457, 464, 495, 510, 519, 520, 542, 610], "behind": 499, "being": [125, 136, 198, 320, 321, 395, 400, 403, 409, 417, 420, 426, 428, 476, 486, 500, 510, 535, 559, 609], "belief": 515, "believ": [433, 515], "belong": [86, 420, 445], "below": [52, 53, 88, 92, 125, 137, 196, 200, 207, 208, 384, 385, 386, 390, 392, 396, 398, 399, 404, 405, 409, 411, 412, 416, 419, 420, 422, 423, 424, 425, 428, 429, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 451, 452, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 468, 474, 478, 497, 502, 505, 508, 510, 512, 514, 515, 518, 519, 543, 546, 565, 611], "benchmark": [411, 422, 428], "benefit": 412, "benn": 411, "berg": 608, "berge2007": [409, 555, 556, 608], "bernet": 464, "besancon": 536, "besid": [125, 137, 409, 410, 420, 425, 475, 476, 509, 513, 519, 529, 530, 559], "best": [67, 71, 74, 75, 77, 78, 80, 103, 126, 128, 129, 130, 133, 134, 145, 216, 217, 293, 295, 299, 388, 395, 398, 405, 408, 413, 422, 425, 426, 430, 432, 469, 472, 474, 475, 476, 480, 483, 486, 497, 502, 504, 505, 513, 515, 524, 529, 544, 546, 548, 574, 580, 583, 584, 588, 611, 612, 613], "best_fit_model": 476, "best_fit_profil": 77, "beta": [27, 28, 48, 215, 246, 247, 248, 271, 419, 421, 445, 469, 472, 476, 484, 502, 505, 576, 582, 583, 584, 589, 600], "better": [395, 398, 400, 401, 402, 403, 404, 408, 409, 414, 416, 417, 420, 425, 426, 439, 456, 457, 483, 484, 487, 497, 499, 505, 509, 510, 513, 519, 542], "between": [19, 20, 26, 67, 77, 88, 89, 92, 95, 107, 112, 123, 125, 126, 128, 130, 131, 133, 135, 145, 146, 158, 164, 166, 167, 168, 170, 177, 180, 194, 196, 197, 198, 199, 200, 202, 205, 206, 207, 208, 209, 210, 224, 225, 228, 229, 232, 234, 235, 236, 237, 241, 242, 244, 245, 246, 247, 248, 251, 255, 257, 259, 260, 261, 262, 266, 269, 271, 273, 274, 275, 276, 279, 281, 283, 284, 287, 293, 316, 320, 321, 351, 385, 386, 393, 395, 396, 398, 403, 405, 406, 407, 408, 409, 411, 412, 414, 416, 417, 420, 421, 423, 424, 425, 426, 427, 436, 446, 449, 452, 463, 468, 476, 478, 484, 486, 489, 496, 497, 500, 504, 505, 508, 509, 510, 511, 513, 515, 519, 520, 532, 542, 544, 551, 552, 555, 565, 566, 608, 611, 613], "bewar": [281, 470, 495], "bexcub": 201, "bexpcub": [196, 197, 198, 200, 209, 210, 509], "beyond": [201, 409, 420, 423, 426, 445, 508, 534, 551], "bfg": 505, "bgstat": 455, "bi": [456, 459], "bia": [97, 154, 155, 159, 183, 426, 457, 463, 508, 515, 550], "bias": [476, 610], "bias_energi": 154, "bias_perc": 183, "bibliographi": 608, "bic": 425, "biederbeck": [424, 464], "big": [402, 405, 412, 427, 459, 519, 610, 612], "bigger": 198, "biggest": [414, 426], "billion": 395, "bimod": 31, "bin": [19, 20, 26, 77, 83, 86, 89, 102, 104, 107, 110, 111, 112, 114, 115, 121, 123, 125, 126, 128, 129, 131, 132, 133, 136, 137, 139, 140, 141, 142, 143, 148, 149, 150, 154, 155, 156, 157, 159, 162, 165, 167, 169, 170, 177, 179, 180, 181, 183, 185, 190, 194, 195, 196, 197, 198, 199, 200, 201, 202, 205, 206, 207, 208, 209, 210, 224, 225, 227, 228, 229, 230, 231, 232, 234, 235, 236, 237, 240, 241, 242, 243, 244, 245, 246, 247, 248, 251, 254, 255, 256, 257, 258, 259, 260, 261, 262, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 278, 279, 280, 281, 282, 283, 284, 289, 297, 300, 306, 307, 316, 388, 390, 393, 401, 406, 407, 408, 409, 411, 414, 416, 420, 426, 429, 430, 440, 441, 443, 444, 446, 448, 449, 451, 454, 455, 456, 457, 458, 463, 464, 465, 469, 470, 474, 475, 476, 477, 478, 480, 481, 483, 484, 485, 487, 488, 489, 492, 494, 495, 496, 497, 499, 500, 501, 502, 503, 504, 505, 507, 508, 509, 510, 511, 512, 513, 515, 517, 518, 519, 520, 521, 529, 530, 532, 542, 544, 546, 550, 551, 553, 554, 607, 608, 609, 610, 612], "bin_cent": 497, "bin_edg": 497, "bin_volum": [201, 205, 208, 559], "bin_width": [199, 202, 207, 497], "binari": [208, 210, 403, 409, 412, 422, 428, 449], "binary_dil": [210, 510], "binary_erod": [210, 510], "binary_eros": [210, 449], "binary_structur": 208, "bincent": 307, "bind": [398, 415], "binder": [403, 426, 427, 457, 460, 468, 469, 470, 472, 474, 475, 476, 477, 478, 480, 481, 483, 484, 485, 486, 487, 488, 489, 492, 494, 495, 496, 497, 499, 500, 501, 502, 503, 504, 505, 507, 508, 509, 510, 511, 512, 513, 514, 515, 517, 518, 519, 520, 521, 524, 527, 529, 530, 532, 563, 564, 565, 566, 567, 568, 569, 570, 571, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 596, 597, 598, 599, 600, 601, 602, 603, 604], "binlik": 128, "binned_likelihood": 129, "binneddataaxi": [440, 456], "binnedtimeseri": [128, 410], "bins_axi": 210, "binsiz": [16, 475, 480, 481, 483, 494, 529, 530], "binsize_irf": [16, 475, 480, 481, 483, 494, 529], "binsz": [104, 107, 111, 112, 113, 118, 156, 165, 167, 177, 180, 181, 185, 195, 196, 197, 198, 200, 205, 206, 208, 209, 210, 411, 474, 485, 486, 487, 488, 492, 497, 501, 503, 507, 508, 509, 510, 512, 519, 520, 530, 553, 555, 556, 558, 559, 563, 565, 566, 567, 568], "binsz_irf": [104, 107, 111, 112, 116, 503, 508, 546], "binsz_irf_default": [104, 107, 111, 112, 508], "binsz_wc": [205, 206], "bintabl": [196, 197, 198, 200, 209, 210], "bintablehdu": [83, 86, 151, 152, 153, 154, 157, 158, 159, 161, 164, 166, 168, 169, 196, 197, 198, 201, 202, 208, 209, 210, 509, 542], "birth": [29, 30, 31, 32, 36, 50, 51, 52, 53], "bit": [83, 145, 396, 398, 402, 403, 409, 413, 414, 423, 465, 497, 509, 559], "bitbucket": 521, "bitpix": 509, "bkg": [16, 82, 88, 89, 104, 108, 109, 111, 112, 151, 152, 153, 183, 190, 238, 418, 444, 446, 451, 465, 468, 474, 475, 480, 481, 483, 484, 487, 488, 492, 497, 503, 507, 508, 511, 518, 520, 521, 529, 530, 542, 549, 551, 608, 610, 611, 612], "bkg_": [104, 111], "bkg_2d": [88, 151], "bkg_3d": [82, 88, 152, 518, 521], "bkg_err": 497, "bkg_maker": [418, 470, 474, 476, 485, 495, 499, 555], "bkg_model": [407, 418, 424, 483, 487, 488, 492, 511, 530, 567], "bkg_ob": 108, "bkg_sy": 136, "bkg_syst_fract": [136, 468], "bkg_syst_fraction_sensit": 125, "bkgfile": 108, "black": [111, 112, 384, 385, 392, 413, 458, 460, 468, 497, 501, 508, 514, 555, 593], "blanch": [457, 458], "blanklin": [245, 434, 544, 559], "blazar": [313, 469, 499], "blind": [460, 546, 614], "bll": 532, "blob": 437, "block": [396, 398, 401, 408, 416, 428, 437, 457], "block_reduc": 458, "blocker": 415, "blue": [103, 104, 107, 111, 112, 230, 254, 385, 469, 474, 481, 483, 486, 514, 555, 593], "blur": 33, "blwyhdlo": 499, "bmhzm3fk": 499, "board": [404, 416], "bodi": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40], "boilerpl": 395, "boller": 500, "boni": [449, 452], "bool": [15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 45, 80, 82, 83, 84, 86, 87, 88, 89, 91, 92, 94, 97, 101, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 116, 117, 120, 125, 126, 127, 128, 129, 133, 134, 137, 144, 151, 152, 153, 154, 155, 156, 157, 158, 159, 161, 162, 164, 165, 166, 167, 168, 169, 170, 173, 177, 184, 187, 188, 190, 191, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 212, 215, 216, 218, 219, 220, 221, 222, 223, 224, 227, 228, 230, 231, 232, 234, 235, 236, 237, 238, 240, 241, 242, 243, 244, 245, 246, 247, 248, 251, 254, 258, 259, 260, 261, 262, 266, 267, 268, 269, 270, 271, 274, 275, 276, 278, 279, 280, 281, 282, 298, 316, 319, 320, 321, 330, 333, 334, 351, 357, 360, 362, 363, 365, 392, 395, 409, 485, 502, 508, 509], "boolean": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 83, 88, 92, 126, 129, 130, 133, 134, 196, 197, 198, 200, 203, 205, 206, 208, 209, 210, 215, 230, 254, 270, 411, 446, 483, 502, 509, 510, 511], "boost": 487, "bootstrap": [88, 92, 425, 513], "border": 92, "bose": 440, "bot": 401, "both": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 57, 70, 77, 82, 83, 86, 88, 89, 92, 101, 103, 104, 107, 108, 109, 111, 112, 126, 128, 154, 155, 156, 162, 167, 170, 194, 197, 198, 200, 202, 204, 205, 206, 208, 209, 210, 218, 220, 320, 321, 395, 398, 400, 401, 406, 407, 408, 409, 410, 415, 416, 421, 427, 439, 443, 445, 446, 449, 452, 474, 475, 476, 487, 492, 503, 504, 509, 510, 511, 514, 515, 543, 544, 546, 558, 559, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 596, 597, 598, 599, 600, 601, 602, 611], "bother": 480, "bottom": [396, 416, 418, 469, 487, 494, 495, 496, 500, 502], "bound": [17, 18, 19, 20, 21, 22, 24, 25, 26, 27, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 101, 104, 107, 111, 112, 126, 128, 129, 130, 133, 195, 196, 202, 205, 207, 208, 215, 224, 225, 228, 229, 230, 232, 234, 235, 236, 237, 241, 242, 244, 245, 246, 247, 248, 251, 254, 255, 257, 259, 260, 261, 262, 266, 269, 271, 273, 274, 275, 276, 279, 280, 281, 283, 284, 311, 404, 509, 515], "boundari": [202, 208, 282, 312, 314, 424, 425, 426, 454, 465, 505, 512, 513, 558], "boundary_mask": [208, 510], "boundary_typ": 202, "bounding_box": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40], "bounds_error": [151, 152, 153, 154, 157, 158, 159, 161, 164, 166, 168, 169, 395, 507], "box": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 92, 104, 107, 130, 131, 205, 208, 210, 353, 354, 404, 409, 413, 420, 425, 456, 510, 512, 559], "bpl": [224, 419, 512], "bpwl_norm": 419, "bracket": [154, 215, 461, 463], "brake": 51, "branch": [395, 398, 402, 409, 421, 428, 437], "branchnam": 395, "bratio": 534, "break": [224, 271, 401, 409, 411, 421, 443, 444, 445, 465, 575, 589], "brent": 478, "brentq": [19, 20, 26, 128, 215, 224, 225, 228, 232, 234, 235, 236, 241, 247, 248, 251, 255, 257, 259, 260, 261, 266, 271, 273, 274, 275, 276, 279, 283, 294], "breviti": [483, 546], "brief": 613, "briefli": [520, 521], "bright": [68, 130, 270, 286, 481, 494, 495, 510, 512, 540, 555], "brighter": 487, "brightest": 502, "brigitta": [412, 439, 441, 443, 445, 454, 455, 456, 457, 458, 459, 460, 465], "bring": 400, "broadcast": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 88, 92, 197, 198, 200, 203, 206, 209, 210, 270, 333, 465, 488, 507, 509, 558], "broadcasted_shap": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40], "broaden": 426, "broken": [224, 271, 422, 427, 467, 499, 560, 573, 594], "brokenpowerlaw": 419, "brokenpowerlawspectralmodel": [265, 271, 419, 446, 512, 575], "brought": 465, "brown": [141, 500], "brows": [88, 92, 396, 434, 532], "browser": [88, 92, 398, 428, 434, 454, 457, 468, 469, 470, 472, 474, 475, 476, 477, 478, 480, 481, 483, 484, 485, 486, 487, 488, 489, 492, 494, 495, 496, 497, 499, 500, 501, 502, 503, 504, 505, 507, 508, 509, 510, 511, 512, 513, 514, 515, 517, 518, 519, 520, 521, 527, 529, 530, 532, 563, 564, 565, 566, 567, 568, 569, 570, 571, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 596, 597, 598, 599, 600, 601, 602, 603, 604], "bruno": [422, 425, 426, 441, 443, 446, 449, 452, 456, 457, 458, 460, 461, 462, 463, 464, 465], "br\u00fcgge": [457, 458], "bsd": 422, "bst": [88, 92], "buchner": [425, 449, 513], "buchner2023": 425, "budget": [513, 546], "buffer": 372, "bug": [395, 398, 401, 402, 421, 422, 427, 436, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 452, 454, 455, 456, 457, 458, 459, 461, 462], "bugfix": [402, 404, 421, 456, 457], "build": [16, 84, 87, 91, 106, 127, 196, 232, 395, 401, 402, 403, 408, 409, 411, 415, 416, 420, 421, 422, 423, 426, 427, 445, 451, 460, 465, 478, 483, 497, 508, 510, 543, 546, 551, 609], "build_doc": [358, 396, 398, 468, 470, 474, 475, 476, 477, 478, 480, 481, 483, 484, 485, 486, 487, 488, 489, 492, 494, 495, 496, 497, 499, 501, 502, 503, 505, 508, 509, 510, 511, 512, 515, 517, 518, 519, 520, 521, 529, 530, 532, 571, 597], "built": [10, 184, 232, 361, 378, 394, 395, 396, 406, 407, 409, 411, 412, 414, 415, 423, 428, 435, 458, 463, 502, 511, 519, 524, 542], "builtin": 532, "bullet": 400, "bump": [409, 456], "bunch": [105, 110, 396, 609], "bundl": [103, 104, 107, 111, 112, 404, 407, 428, 450, 458, 485, 503, 508, 542, 559, 607, 608], "bunit": [380, 458, 509], "bureaucrat": 400, "burkert": [17, 534], "burn": 425, "burst": [36, 37, 500], "butterfli": [457, 505, 532], "button": [460, 509], "bx": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40], "bxa": 513, "by_alia": [16, 84, 87, 91, 106, 127], "by_nam": [16, 84, 87, 91, 106, 127], "byte": [16, 84, 87, 88, 91, 92, 106, 127, 339, 372, 395], "bytearrai": [16, 84, 87, 91, 106, 127, 339], "bytestr": [88, 92], "b\u00fchler": 437, "c": [26, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 48, 88, 92, 203, 213, 234, 274, 300, 306, 312, 314, 319, 361, 394, 395, 412, 430, 431, 433, 450, 457, 474, 481, 497, 499, 501, 505, 513, 515, 518, 519, 534, 558, 579, 590, 609, 610, 612], "c0": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40], "c1": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40], "c7": 103, "c_": 213, "c_0": [195, 196, 205, 208], "c_i": [195, 196, 205, 208], "c_n": [195, 196, 205, 208], "cabot": 465, "cach": [16, 84, 87, 88, 89, 91, 92, 101, 104, 106, 107, 111, 112, 127, 280, 320, 321, 329, 330, 404, 405, 407, 414, 418, 428, 442, 446, 449, 464], "cached_properti": [16, 84, 87, 91, 106, 127], "cahil": 451, "cal_gen_92_002": [154, 202], "cal_gen_92_002_summari": 154, "calcul": [13, 15, 19, 20, 26, 97, 140, 141, 142, 143, 183, 224, 225, 228, 232, 234, 235, 236, 241, 247, 248, 251, 255, 257, 259, 266, 271, 273, 274, 275, 276, 279, 282, 283, 296, 297, 302, 304, 305, 316, 318, 320, 321, 343, 376, 385, 386, 405, 408, 439, 445, 449, 450, 451, 457, 462, 464, 468, 497, 500, 501, 504, 515, 529, 530, 534, 546, 608, 612], "caldb": [82, 152, 154, 156, 157, 158, 167, 202, 451, 468, 477, 487, 488, 492, 496, 507, 518], "calendar": [421, 427], "calib_vers": [519, 532], "calibr": 513, "call": [16, 17, 18, 19, 20, 21, 22, 24, 25, 26, 27, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 83, 84, 86, 87, 88, 91, 92, 103, 104, 106, 107, 111, 112, 127, 140, 141, 142, 143, 151, 152, 153, 154, 157, 158, 159, 161, 164, 166, 168, 169, 179, 195, 196, 205, 208, 215, 223, 224, 225, 226, 227, 228, 231, 232, 234, 235, 236, 239, 240, 241, 243, 247, 248, 249, 251, 255, 256, 257, 258, 259, 260, 261, 263, 266, 267, 268, 270, 271, 272, 273, 274, 275, 276, 278, 279, 282, 283, 285, 320, 321, 333, 345, 366, 372, 380, 384, 392, 395, 396, 398, 400, 401, 404, 407, 408, 409, 410, 411, 413, 415, 416, 418, 420, 422, 424, 425, 426, 428, 430, 434, 445, 449, 463, 474, 475, 485, 502, 503, 504, 505, 508, 509, 512, 519, 521, 529, 530, 532, 542, 546, 555, 556, 557, 558, 559, 609, 610, 611, 612], "callabl": [16, 45, 84, 87, 91, 106, 127, 289, 425], "callback": [173, 609], "caller": [395, 406], "camera": [496, 507, 508], "can": [15, 16, 19, 20, 26, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 46, 47, 50, 56, 67, 68, 69, 77, 82, 83, 84, 87, 88, 91, 92, 94, 104, 106, 107, 110, 111, 112, 116, 121, 125, 126, 127, 128, 130, 133, 134, 135, 137, 138, 145, 147, 152, 157, 165, 167, 170, 174, 180, 183, 195, 196, 197, 198, 200, 202, 203, 205, 206, 207, 208, 209, 210, 212, 215, 219, 220, 221, 222, 223, 224, 225, 227, 228, 230, 231, 232, 234, 235, 236, 239, 240, 241, 243, 245, 247, 248, 249, 251, 254, 255, 256, 257, 259, 260, 261, 266, 267, 268, 271, 272, 273, 274, 275, 276, 278, 279, 282, 283, 285, 294, 298, 303, 312, 314, 319, 320, 321, 333, 334, 339, 342, 351, 370, 372, 388, 392, 394, 395, 396, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 437, 439, 441, 443, 445, 446, 449, 451, 452, 456, 457, 458, 459, 460, 463, 464, 465, 468, 469, 470, 472, 474, 475, 476, 477, 478, 480, 481, 483, 484, 485, 486, 487, 488, 489, 492, 494, 495, 496, 497, 499, 500, 501, 502, 503, 504, 505, 507, 508, 509, 510, 511, 512, 513, 514, 515, 517, 518, 519, 520, 521, 522, 524, 529, 530, 532, 534, 536, 537, 542, 543, 544, 546, 549, 550, 551, 552, 553, 555, 556, 557, 558, 559, 582, 584, 593, 604, 606, 607, 608, 609, 610, 611, 612, 614], "candel": 232, "candid": [421, 426, 451, 502, 551], "candl": [287, 608], "cannot": [16, 67, 84, 87, 88, 91, 92, 96, 106, 114, 115, 126, 127, 128, 212, 306, 361, 392, 398, 408, 409, 463, 507, 511, 512, 544, 559], "cao": 57, "cap": [51, 54], "capabl": [405, 415, 519, 534], "capsiz": 515, "caption": 396, "captur": [399, 411], "car": [104, 107, 111, 112, 177, 208, 209, 210, 230, 254, 409, 441, 485, 507, 508, 509, 530, 532], "card": [83, 86, 89, 101, 103, 104, 107, 108, 109, 111, 112, 126, 128, 154, 155, 156, 162, 167, 170, 197, 198, 200, 204, 206, 209, 210, 509], "care": [126, 128, 319, 395, 404, 411, 421, 470, 476, 483, 509, 609], "carefulli": [422, 487, 488, 515], "carina": [33, 38], "carlo": [413, 425, 551, 608], "carri": [410, 419, 421, 423, 449, 472, 530], "carr\u00e9": 208, "cartesian": [41, 46, 198, 209, 210, 320, 321, 324, 326, 462, 532, 558], "cartesiandifferenti": [320, 321], "cartesianrepresent": [320, 321], "case": [15, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 67, 69, 77, 83, 88, 92, 102, 103, 129, 133, 154, 173, 185, 196, 198, 204, 205, 208, 210, 215, 218, 220, 243, 255, 278, 280, 282, 294, 306, 312, 314, 320, 321, 334, 351, 390, 395, 396, 398, 400, 403, 404, 406, 407, 408, 409, 410, 411, 412, 414, 415, 416, 417, 418, 419, 420, 422, 423, 427, 428, 430, 438, 439, 442, 445, 451, 452, 457, 463, 464, 468, 470, 471, 474, 475, 476, 477, 480, 481, 483, 487, 488, 492, 494, 496, 497, 500, 502, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 519, 521, 524, 529, 531, 532, 541, 544, 545, 546, 556, 559, 564, 565, 566, 569, 570, 575, 584, 591, 607, 609, 611], "casebattacharya1998": [29, 30, 35, 36, 39, 40, 48], "cash": [104, 107, 111, 112, 177, 301, 306, 315, 395, 407, 449, 477, 480, 483, 492, 496, 503, 508, 511, 515, 529, 530, 542, 608], "cash1979": [608, 611], "cashcountsstatist": [434, 464, 609, 611], "cast": 92, "cat": [66, 67, 79, 403, 428, 456, 457, 472, 502, 512, 541, 608, 609], "catalof": 69, "catalog": [6, 45, 46, 47, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 125, 129, 230, 254, 409, 416, 437, 441, 443, 445, 449, 450, 451, 454, 455, 456, 457, 458, 460, 464, 465, 467, 469, 472, 478, 484, 503, 506, 512, 516, 519, 524, 531, 536, 571, 607, 608], "catalog_3fgl": 472, "catalog_3fhl": [472, 502], "catalog_3fhl_bright": 502, "catalog_4fgl": 502, "catalog_4fgl_roi": 502, "catalog_gammacat": [472, 502], "catalog_hgp": 502, "catalog_registri": [472, 502, 510], "catalogimageestim": 458, "catalogu": [78, 449, 456], "catch_warn": 546, "categori": [395, 406, 420, 449, 465, 510, 512, 560], "caught": 426, "caus": [402, 409, 458, 461, 546], "cautious": 486, "caveat": [215, 313, 464, 565], "cax": 507, "cb98": 48, "cbar": 383, "cbar_kw": 389, "cbarlabel": 389, "cc": [404, 409, 411, 414, 417, 419, 422, 424], "ccube": [196, 197, 198, 200, 201, 202, 208, 209, 210, 509], "cd": [395, 396, 398, 411, 415, 426, 430, 431, 432], "cdelt": [208, 210], "cdelt1": 509, "cdelt2": 509, "cdf": [343, 408, 425, 487, 505], "cdot": [51, 52, 53, 54, 104, 111, 259, 274, 419, 512, 542, 564, 569, 570, 575, 578, 579, 586, 587, 589, 590, 591, 592, 598, 599, 600, 602, 610], "cea": [430, 431], "celesti": [509, 558, 564, 568, 613], "celfix": 571, "cell": [403, 434, 460, 484, 497, 509, 518, 519, 532], "center": [17, 18, 21, 22, 23, 24, 25, 27, 41, 83, 88, 92, 97, 104, 107, 111, 112, 114, 115, 126, 128, 130, 131, 132, 136, 137, 154, 155, 156, 157, 158, 159, 162, 166, 167, 168, 170, 177, 180, 181, 183, 184, 185, 187, 188, 190, 191, 196, 197, 198, 199, 200, 201, 202, 205, 206, 207, 208, 209, 210, 211, 226, 227, 230, 231, 240, 243, 254, 256, 258, 267, 268, 270, 272, 278, 280, 282, 320, 321, 323, 327, 353, 395, 396, 409, 411, 419, 420, 439, 440, 449, 451, 464, 468, 470, 474, 476, 477, 478, 480, 481, 483, 485, 487, 488, 489, 495, 496, 497, 499, 501, 507, 508, 509, 510, 511, 512, 518, 519, 530, 532, 548, 549, 550, 551, 552, 553, 555, 556, 558, 559, 564, 565, 568], "center_coord": [195, 196, 201, 205, 208], "center_pix": [195, 196, 205, 208], "center_ski": 559, "center_skydir": [195, 196, 205, 208, 508, 509, 519, 520, 553, 555, 556], "centr": [501, 510, 534], "central": [135, 312, 314, 407, 417, 472, 532], "cern": 534, "certain": [50, 83, 88, 92, 215, 303, 394, 409, 411, 413, 420, 430, 431, 468, 501, 508, 509, 519, 541, 559], "certainli": 398, "certif": 422, "certifi": 422, "cfa": [215, 505], "cff": 427, "cg": 538, "ch": 53, "chain": [173, 408, 411, 425, 443, 508, 546, 556, 608], "chainconfig": 513, "chainconsum": 513, "chainer": 413, "chakraborti": [455, 456], "challeng": [402, 404, 408, 456, 481, 483, 485, 518], "chanc": 400, "chang": [16, 19, 20, 26, 84, 86, 87, 88, 91, 92, 106, 126, 127, 128, 196, 205, 208, 224, 225, 228, 232, 234, 235, 236, 241, 245, 247, 248, 251, 255, 257, 259, 260, 261, 266, 271, 273, 274, 275, 276, 279, 283, 320, 321, 369, 379, 396, 398, 399, 400, 402, 403, 404, 405, 406, 407, 408, 409, 410, 412, 413, 414, 416, 418, 420, 421, 422, 427, 428, 436, 438, 439, 440, 441, 442, 443, 444, 445, 446, 449, 451, 455, 456, 457, 458, 459, 461, 466, 476, 477, 478, 485, 487, 488, 494, 499, 500, 503, 504, 505, 510, 512, 513, 515, 518, 529, 542, 546, 553, 555, 559, 571, 609], "changeabl": [320, 321], "changelog": [395, 427, 450, 458], "channel": [19, 20, 26, 394, 397, 398, 412, 457, 488, 501, 509, 521, 534], "channel0": 534, "channel1": 534, "channel_registri": [19, 20, 26], "chapter": 501, "charact": [88, 92, 395, 511], "character": [305, 420, 487], "characterist": [21, 25, 27, 51, 52, 53, 54, 141, 303, 406, 463, 500, 608], "charg": [422, 427, 551, 584], "chat": 435, "chatti": [395, 485], "cheat": 433, "check": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 82, 83, 86, 88, 89, 92, 104, 107, 108, 111, 112, 126, 128, 154, 155, 156, 162, 167, 170, 195, 196, 197, 198, 199, 200, 201, 202, 205, 206, 207, 208, 209, 210, 219, 221, 230, 254, 270, 313, 320, 321, 368, 370, 398, 411, 418, 422, 427, 428, 430, 431, 432, 435, 444, 449, 457, 465, 472, 492, 499, 507, 524, 534, 546, 550, 559, 606, 609, 610], "check_limit": [218, 219, 220, 221], "check_random_st": 395, "check_tutorials_setup": [468, 470, 474, 475, 476, 477, 478, 480, 481, 483, 484, 485, 486, 487, 488, 489, 494, 495, 496, 497, 501, 502, 503, 505, 508, 509, 510, 511, 512, 515, 517, 518, 519, 520, 521, 529, 530, 532], "checker": [455, 458], "checklist": 428, "checkout": [395, 398, 427, 440, 483, 487, 512], "checksum": [83, 86, 89, 101, 103, 104, 107, 108, 109, 111, 112, 126, 128, 154, 155, 156, 162, 167, 170, 197, 198, 200, 204, 206, 209, 210, 216, 230, 254, 357, 360, 363, 464, 474, 484, 519], "chen": [148, 458], "cherenkov": [157, 408, 430, 435, 470, 474, 481, 494, 508, 518, 520, 555, 556, 608], "cherri": [395, 402, 409, 421], "chi": [302, 410, 610, 611, 612], "chi2": [103, 135, 139, 148, 296, 297, 312, 314, 407, 440, 474, 486, 496, 505, 542, 611], "chi2assym": 443, "chi2asymmetricerrorfitstatist": 610, "chi2fitstatist": 610, "child": 405, "children": [483, 492, 509, 529, 530], "chime": 398, "chisq": 302, "chisquar": 302, "chmod": 609, "choic": [140, 408, 412, 414, 415, 422, 425, 474, 475, 477, 480, 505, 513, 520, 529, 547, 606, 609], "choos": [45, 77, 195, 196, 199, 201, 202, 205, 208, 283, 335, 398, 407, 409, 411, 416, 425, 430, 432, 449, 472, 474, 478, 483, 485, 496, 503, 505, 508, 509, 511, 512, 514, 519, 530, 546, 609], "chose": [396, 487, 519, 520, 611, 613], "chosen": [26, 154, 167, 170, 196, 197, 198, 206, 209, 210, 230, 240, 254, 395, 410, 411, 414, 475, 495, 508, 509, 514, 515, 520, 529, 544, 546, 554, 555, 559], "christoph": [400, 401, 402, 403, 404, 405, 406, 407, 409, 411, 412, 413, 414, 416, 437, 438, 439, 440, 441, 442, 443, 444, 450, 453, 454, 455, 456, 457, 458, 459], "chrome": [88, 92], "chromei": 451, "chunk": [156, 167, 170], "chunk_siz": [156, 167, 170], "ci": [395, 396, 398, 402, 422, 428, 443, 449, 451, 454, 460], "circl": [83, 185, 392, 396, 409, 451, 474, 485, 496, 501, 508, 510, 514, 518, 530, 532, 543, 553, 555, 556, 559], "circle_area": 396, "circle_dist": [320, 321], "circleannulusskyregion": [267, 268, 555], "circledast": 542, "circlepixelregion": 409, "circleskyregion": [104, 107, 111, 112, 179, 180, 184, 208, 231, 396, 409, 468, 470, 474, 476, 477, 481, 483, 485, 487, 488, 495, 499, 501, 503, 508, 510, 511, 530, 553, 555, 556, 559], "circular": [92, 104, 107, 184, 196, 198, 208, 406, 414, 417, 470, 476, 503, 514, 555, 559], "circumv": [19, 20, 26, 224, 225, 228, 232, 234, 235, 236, 241, 247, 248, 251, 255, 257, 259, 260, 261, 266, 271, 273, 274, 275, 276, 279, 283], "cirelli": [26, 534], "citat": [222, 427, 513], "cite": [222, 398, 422, 513], "cl": [16, 84, 87, 91, 104, 106, 111, 127, 423], "cl6_deho": 499, "clabel": 505, "claim": 425, "clang": 434, "clarif": 400, "clarifi": [420, 463], "class": [6, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 295, 296, 297, 299, 320, 321, 329, 330, 333, 341, 343, 368, 382, 398, 401, 404, 407, 408, 409, 410, 411, 413, 414, 415, 416, 417, 418, 419, 424, 425, 426, 430, 434, 437, 439, 440, 441, 442, 443, 444, 445, 446, 449, 450, 451, 453, 454, 455, 456, 457, 458, 459, 460, 462, 463, 464, 465, 468, 472, 474, 475, 476, 477, 478, 480, 481, 485, 487, 488, 492, 494, 497, 502, 503, 504, 505, 507, 508, 509, 512, 513, 515, 518, 519, 520, 524, 529, 532, 537, 541, 542, 543, 544, 545, 546, 548, 549, 550, 551, 554, 556, 557, 558, 559, 560, 584, 593, 606, 607, 608, 609, 614], "class1": 502, "class2": 502, "classic": [404, 413, 425, 430, 439, 470, 474, 481, 485, 503, 508, 513, 544, 546, 555, 556, 608, 611], "classifi": [520, 551], "classmethod": [16, 19, 20, 26, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 56, 82, 83, 84, 85, 86, 87, 88, 89, 91, 92, 93, 95, 101, 103, 104, 106, 107, 111, 112, 126, 127, 128, 151, 152, 153, 154, 155, 156, 157, 158, 159, 161, 162, 164, 165, 166, 167, 168, 169, 170, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 213, 219, 221, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 251, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 278, 279, 280, 281, 282, 283, 284, 285, 296, 297, 320, 321, 423], "classproperti": 449, "classvar": [16, 84, 87, 91, 106, 127], "claudio": [462, 464, 465], "claus": [395, 422], "clean": [395, 396, 398, 403, 404, 409, 411, 413, 426, 437, 439, 440, 441, 442, 443, 444, 445, 446, 449, 456, 457, 458, 459], "cleaner": 460, "cleanup": [402, 414, 428, 437, 442, 443, 448, 449, 450, 454, 455, 457, 465], "clear": [93, 101, 204, 254, 320, 321, 395, 400, 402, 406, 409, 410, 414, 416, 417, 426, 457, 486, 613], "clearer": 442, "clearli": [141, 395, 400, 401, 409, 412, 421], "cli": [11, 411, 459, 607], "click": [394, 396, 411, 412, 434, 442, 457, 468, 470, 474, 475, 476, 477, 478, 480, 481, 483, 484, 485, 486, 487, 488, 489, 494, 495, 496, 497, 501, 502, 503, 505, 508, 509, 510, 511, 512, 515, 517, 518, 519, 520, 521, 529, 530, 532, 609], "clip": [19, 20, 26, 195, 196, 199, 201, 202, 205, 207, 208, 224, 225, 228, 232, 234, 235, 236, 241, 247, 248, 251, 255, 257, 259, 260, 261, 266, 271, 273, 274, 275, 276, 279, 282, 283, 333, 442, 443, 478], "clockwis": [231, 240, 243, 564], "clone": [398, 431, 458], "close": [151, 152, 153, 154, 157, 158, 159, 161, 164, 166, 168, 169, 196, 197, 198, 199, 200, 201, 202, 205, 206, 207, 208, 209, 210, 282, 369, 370, 371, 404, 409, 427, 452, 463, 464, 465, 505, 593], "closer": 532, "closest": [121, 125, 129, 133, 137, 195, 196, 197, 198, 200, 205, 206, 208, 209, 210, 504, 510, 544], "cloud": [428, 524], "cluster": [24, 25, 97, 317, 318, 408, 425, 463, 464, 467, 506, 516, 524, 543, 546], "clutter": [483, 546], "cm": [19, 20, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 45, 51, 52, 53, 54, 67, 103, 128, 134, 137, 224, 228, 234, 236, 241, 248, 252, 259, 261, 270, 271, 274, 275, 276, 286, 379, 406, 419, 469, 470, 472, 474, 475, 476, 477, 478, 480, 483, 484, 485, 486, 487, 488, 492, 495, 496, 497, 501, 502, 504, 505, 512, 515, 518, 519, 529, 532, 539, 540, 544, 546, 563, 564, 565, 566, 568, 569, 570, 571, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 596, 597, 598, 599, 600, 601, 602, 603, 604, 608], "cm2": [51, 54, 67, 109, 128, 157, 210, 287, 379, 468, 469, 472, 474, 475, 477, 478, 483, 484, 485, 487, 488, 492, 494, 495, 496, 497, 499, 501, 502, 503, 504, 509, 511, 512, 513, 515, 519, 529, 530, 532, 544, 559, 577, 580, 583, 588, 593], "cm3": [17, 18, 19, 21, 22, 24, 25, 27, 52, 501], "cm5": 501, "cmap": [104, 107, 111, 112, 230, 254, 385, 386, 476, 483, 501, 509, 511, 513, 519, 520, 529, 530, 555, 614], "cmb": 584, "co": [53, 203, 320, 321, 421, 422, 468, 564, 565, 566], "coadd": [197, 198, 200, 206, 209, 210], "coars": 503, "coarser": [202, 207, 503], "codaci": 428, "codata": 52, "code": [19, 20, 26, 82, 83, 88, 92, 154, 224, 225, 228, 232, 234, 235, 236, 241, 247, 248, 251, 255, 257, 259, 260, 261, 266, 271, 273, 274, 275, 276, 279, 283, 390, 398, 399, 400, 402, 403, 405, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 419, 420, 421, 422, 423, 425, 426, 431, 434, 437, 440, 441, 443, 444, 445, 446, 449, 451, 454, 455, 456, 457, 458, 460, 463, 465, 468, 469, 470, 472, 474, 475, 476, 477, 478, 480, 481, 483, 484, 485, 486, 487, 488, 489, 492, 494, 495, 496, 497, 499, 500, 501, 502, 503, 504, 505, 507, 508, 509, 510, 511, 512, 513, 514, 515, 517, 518, 519, 520, 521, 524, 527, 529, 530, 532, 534, 546, 553, 560, 563, 564, 565, 566, 567, 568, 569, 570, 571, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 596, 597, 598, 599, 600, 601, 602, 603, 604, 606, 609], "codebas": [396, 412, 425, 437, 456, 458], "codemeta": 451, "codespel": 449, "codestyl": 398, "coeffici": [131, 246, 251, 574], "coerce_numbers_to_str": 106, "coerce_unit": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40], "coher": 465, "coincid": 500, "col": [88, 92, 449], "col0": [88, 92], "col1": [88, 92], "col2": [88, 92], "col_b": [88, 92], "col_c": [88, 92], "col_d": [88, 92], "col_fit_deriv": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40], "col_label": 389, "collabor": [77, 385, 386, 400, 402, 404, 408, 451, 486, 519, 608], "collaps": [320, 321], "colleagu": [398, 425, 609], "collect": [204, 254, 395, 397, 415, 423, 425, 428, 456, 457, 475, 503, 511, 513, 534, 543, 547, 551, 608, 613], "collis": 50, "colnam": [88, 92, 197, 198, 200, 206, 209, 210, 519, 532], "color": [103, 111, 112, 151, 152, 210, 230, 254, 384, 385, 386, 389, 392, 396, 415, 468, 469, 472, 474, 475, 476, 477, 478, 481, 483, 485, 486, 489, 494, 497, 501, 504, 505, 508, 511, 513, 514, 515, 546, 555, 559, 564, 565, 584, 593, 614], "colorbar": [128, 151, 152, 154, 157, 158, 159, 164, 165, 166, 168, 210, 383, 389, 499, 505, 509], "colorblind": 546, "colorblind10": 546, "colormap": [384, 385, 386, 437, 450, 532], "colormap_hess": [417, 614], "colormap_milagro": 614, "colour": 460, "column": [41, 43, 44, 46, 47, 56, 83, 88, 92, 105, 110, 123, 126, 128, 131, 136, 145, 151, 152, 154, 178, 197, 198, 199, 200, 201, 202, 206, 207, 209, 210, 281, 305, 317, 364, 365, 366, 367, 388, 389, 392, 393, 395, 408, 410, 420, 460, 463, 464, 468, 488, 497, 502, 509, 512, 513, 518, 543, 546], "column_nam": 507, "column_prefix": 202, "columnclass": [88, 92], "columnspac": 392, "com": [139, 348, 349, 361, 398, 416, 427, 428, 431], "combin": [100, 103, 104, 107, 111, 112, 138, 147, 148, 149, 183, 191, 197, 198, 200, 205, 206, 209, 210, 225, 270, 395, 401, 405, 406, 407, 408, 409, 410, 416, 419, 430, 442, 457, 463, 465, 472, 477, 483, 484, 492, 496, 503, 505, 507, 508, 509, 510, 512, 520, 530, 532, 534, 536, 546, 553, 558, 576, 607, 608], "combine_flux_map": [147, 465], "combine_significance_map": 148, "combined_ev": 543, "combining_and_defin": [468, 477, 480, 483, 485, 492, 496, 518], "come": [69, 398, 401, 402, 403, 404, 405, 409, 410, 411, 412, 414, 415, 416, 421, 423, 427, 428, 445, 446, 449, 458, 459, 463, 474, 483, 492, 512, 513, 518, 529, 551, 609], "comma": [71, 72, 74, 75, 76, 78, 79, 80, 502], "command": [6, 13, 95, 103, 128, 158, 164, 166, 168, 394, 395, 396, 398, 403, 404, 406, 411, 412, 415, 428, 429, 430, 431, 432, 433, 439, 443, 454, 457, 458, 460, 487, 545, 607], "commensur": 210, "comment": [128, 395, 396, 400, 404, 408, 409, 411, 412, 414, 417, 419, 421, 422, 425], "commit": [395, 398, 403, 409, 421, 422, 427, 436, 437, 460], "committe": [400, 402, 421, 422], "commod": 422, "common": [96, 394, 395, 396, 398, 400, 401, 409, 411, 415, 416, 417, 419, 420, 422, 426, 431, 433, 434, 449, 451, 475, 476, 489, 502, 507, 510, 512, 529, 530, 534, 541, 544, 545, 559, 565, 609], "common_irf_head": 507, "commonli": [29, 83, 409, 413, 425, 458, 489, 534, 606, 607, 609, 611, 614], "commun": [395, 411, 415, 418, 422, 426, 427, 429, 435, 521], "comp": 502, "compact": [16, 84, 87, 88, 91, 92, 106, 127], "compar": [88, 92, 129, 130, 133, 134, 151, 152, 153, 154, 157, 158, 159, 161, 164, 166, 168, 169, 196, 197, 198, 200, 205, 206, 208, 209, 210, 215, 293, 395, 409, 412, 416, 425, 446, 462, 463, 468, 469, 470, 474, 478, 483, 486, 489, 492, 495, 499, 502, 505, 508, 515, 519, 529, 541, 608, 610], "comparison": [86, 88, 92, 101, 133, 151, 152, 153, 154, 157, 158, 159, 161, 164, 166, 168, 169, 196, 197, 198, 200, 202, 205, 206, 208, 209, 210, 351, 415, 454, 536], "compat": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 88, 92, 197, 198, 200, 209, 210, 238, 400, 402, 406, 409, 419, 421, 423, 424, 434, 437, 439, 441, 458, 464, 465, 509, 558], "compil": [398, 450], "complain": 398, "complaint": 413, "complement": 416, "complementari": [103, 138, 147, 296, 474], "complet": [13, 16, 84, 87, 91, 106, 125, 127, 137, 223, 351, 395, 401, 405, 406, 407, 408, 409, 412, 413, 416, 420, 421, 422, 425, 427, 431, 436, 438, 439, 440, 441, 442, 443, 444, 445, 446, 449, 451, 454, 455, 456, 457, 458, 459, 483, 488, 505, 513, 514, 524, 531, 546, 551], "complex": [222, 395, 396, 401, 405, 409, 410, 411, 418, 420, 425, 426, 434, 465, 470, 474, 485, 488, 496, 500, 503, 509, 510, 512, 513, 514, 519, 551, 555], "complianc": [422, 460], "compliant": [197, 198, 200, 209, 210, 426, 464, 608], "complic": [409, 559], "compon": [15, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 67, 80, 81, 89, 104, 105, 107, 110, 111, 112, 133, 141, 169, 171, 205, 230, 254, 255, 270, 286, 320, 321, 406, 407, 408, 411, 418, 419, 439, 443, 445, 449, 457, 458, 469, 475, 476, 477, 480, 483, 484, 485, 486, 487, 488, 492, 494, 495, 496, 499, 502, 503, 504, 511, 512, 513, 518, 519, 529, 530, 534, 542, 544, 546, 559, 563, 564, 565, 566, 567, 568, 569, 570, 571, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 596, 597, 598, 599, 600, 601, 602, 603, 604, 606, 608], "component_1": 406, "component_2": 406, "component_class": 502, "components_model": 80, "components_statu": 67, "compos": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 401, 422], "composit": [21, 57, 70, 80, 332, 422, 456, 551], "compound": [205, 212, 225, 352, 356, 409, 419, 467, 469, 489, 560, 573, 594], "compoundmodel": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 451], "compoundpixelregion": 356, "compoundskymodel": 406, "compoundskyregion": [212, 352, 356], "compoundsourcemodel": 406, "compoundspectralmodel": [265, 419, 463, 469, 512, 519, 574, 576, 580, 583, 585, 588, 593], "compress": 403, "compris": 520, "compromis": [395, 400, 408, 515], "compton": [255, 445, 584], "compulsori": 512, "comput": [16, 19, 20, 23, 26, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 83, 84, 86, 87, 89, 91, 95, 97, 101, 103, 104, 106, 107, 111, 112, 121, 123, 125, 126, 127, 128, 129, 130, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 145, 147, 148, 151, 152, 153, 154, 155, 156, 157, 158, 159, 161, 162, 164, 165, 166, 167, 168, 169, 170, 172, 183, 184, 186, 189, 190, 191, 192, 194, 196, 197, 198, 200, 202, 205, 206, 207, 208, 209, 210, 211, 215, 222, 224, 225, 228, 230, 232, 234, 235, 236, 241, 245, 247, 248, 251, 254, 255, 257, 259, 260, 261, 266, 271, 273, 274, 275, 276, 279, 281, 283, 286, 287, 293, 294, 295, 299, 302, 303, 304, 305, 307, 311, 312, 313, 314, 318, 320, 321, 324, 325, 328, 395, 404, 405, 406, 407, 408, 409, 410, 413, 416, 417, 418, 419, 420, 424, 425, 428, 430, 431, 435, 437, 439, 440, 441, 442, 445, 446, 448, 449, 450, 452, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 470, 476, 478, 483, 484, 488, 489, 494, 495, 497, 500, 501, 503, 504, 508, 511, 512, 513, 514, 515, 517, 519, 520, 521, 529, 532, 534, 542, 544, 546, 555, 584, 607, 608, 609, 610, 611, 612, 613], "computation": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 215, 408, 409, 542], "compute_chisq": 456, "compute_differential_jfactor": 23, "compute_errn": [295, 299, 460, 611], "compute_errp": [295, 299, 611], "compute_flux_doubl": 141, "compute_fpp": 142, "compute_fvar": [143, 304], "compute_jfactor": [23, 501], "compute_lightcurve_doublingtim": 500, "compute_lightcurve_fpp": 500, "compute_lightcurve_fvar": 500, "compute_lima_map": 445, "compute_npr": 408, "compute_upper_limit": [295, 299], "con": [395, 411], "concaten": [83, 86, 93, 199, 202, 407, 411, 418, 463, 509], "concentr": 353, "concept": [16, 84, 87, 91, 106, 127, 415, 416, 417, 423, 425, 426, 430, 432, 435, 501, 509, 513, 524, 547], "conception": [408, 418], "conceptu": [415, 425], "concern": [398, 400, 409, 411, 412, 414, 417, 419, 422, 449, 459, 520, 611], "conclud": 404, "concret": [16, 84, 87, 91, 106, 127, 412, 416, 513], "conda": [394, 398, 402, 403, 412, 416, 421, 427, 428, 430, 431, 432, 433, 434, 439, 441, 457, 458, 609], "condit": [52, 53, 150, 202, 219, 221, 230, 254, 420, 424, 446, 465, 468, 474, 477, 488, 502, 510, 511, 513, 514, 520, 542, 551], "conduct": [460, 496], "cone": [92, 409, 475, 514, 529, 530, 546], "conesearch": 411, "conf": [88, 92, 395, 396, 428, 440, 455], "conf_1d": 494, "conf_3d": 494, "conf_max": [218, 220], "conf_min": [218, 220], "confid": [125, 215, 218, 220, 295, 299, 406, 413, 440, 445, 459, 608, 611], "confidence_opt": [215, 504], "config": [15, 16, 84, 87, 91, 106, 127, 394, 396, 398, 401, 403, 404, 411, 412, 416, 423, 426, 430, 432, 442, 443, 444, 449, 457, 475, 483, 529, 606], "config_dict": 529, "config_joint": 483, "config_paramet": [121, 123, 124, 125, 129, 130, 132, 133, 134, 136, 137], "config_stack": 483, "config_str": 16, "configdict": [16, 84, 87, 91, 106, 127], "configpars": 455, "configur": [11, 15, 16, 46, 84, 87, 88, 91, 92, 102, 103, 106, 111, 112, 121, 123, 124, 125, 127, 129, 130, 132, 133, 134, 136, 137, 341, 395, 396, 398, 404, 406, 410, 411, 415, 416, 417, 423, 427, 428, 434, 442, 444, 445, 449, 451, 460, 463, 464, 474, 476, 478, 485, 487, 488, 499, 518, 524, 531, 545, 546, 551, 608, 609], "confirm": [398, 427], "conflict": [88, 92, 395, 398, 422], "confluenc": 521, "conform": [16, 84, 87, 91, 106, 127, 509], "confus": [395, 396, 401, 414], "connect": [405, 435, 474, 489, 492, 510, 530, 606], "consant": [197, 198, 200, 206, 209, 210], "consciou": 400, "consecut": [180, 351, 395, 421], "consensu": [400, 422], "consent": 395, "consequ": [422, 488, 524, 559], "conserv": [542, 568], "consid": [19, 20, 59, 97, 129, 177, 184, 187, 188, 190, 191, 198, 210, 218, 224, 227, 228, 231, 232, 234, 235, 236, 237, 240, 241, 242, 243, 244, 245, 246, 247, 248, 251, 255, 258, 259, 260, 261, 262, 266, 267, 268, 269, 271, 274, 275, 276, 281, 282, 293, 391, 395, 400, 401, 406, 407, 409, 410, 411, 412, 413, 414, 415, 416, 418, 422, 424, 470, 474, 476, 483, 487, 488, 500, 507, 510, 513, 543, 546, 551, 612], "consider": [411, 439, 449, 457, 483], "consist": [74, 92, 96, 126, 128, 155, 156, 167, 170, 195, 196, 197, 198, 200, 205, 208, 209, 210, 222, 240, 243, 395, 405, 406, 408, 409, 410, 416, 423, 426, 442, 443, 444, 445, 446, 453, 457, 458, 460, 462, 463, 464, 475, 476, 477, 478, 486, 492, 496, 505, 508, 509, 512, 515, 517, 529, 582, 584, 610], "consol": [395, 609], "consortium": [423, 518], "const": [226, 227, 228, 229, 419, 488, 512, 577], "const3d": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40], "const_norm": 419, "constant": [50, 51, 52, 53, 104, 111, 121, 157, 197, 198, 200, 206, 208, 209, 210, 226, 227, 228, 229, 231, 244, 246, 350, 408, 409, 414, 457, 467, 494, 519, 539, 542, 560, 562, 572, 573, 594, 595, 605, 608, 612], "constant_model": 596, "constantmodel": 459, "constantnormspectralmodel": 419, "constantspatialmodel": [264, 419, 512, 519, 563], "constantspectralmodel": [265, 419, 488, 512, 577], "constanttemporalmodel": [277, 419, 442, 512, 596], "constitu": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40], "constitut": [503, 551], "constrain": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 422, 469, 480, 484, 508, 513, 515, 553], "constraint": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 546], "construct": [16, 21, 84, 87, 91, 106, 127, 202, 247, 248, 359, 559, 608], "constructor": [195, 196, 197, 198, 200, 202, 205, 206, 207, 208, 209, 210, 426, 463, 530, 557], "consult": 433, "consum": [425, 505, 513, 546], "contact": [397, 402, 404, 422, 433, 435, 438, 439, 440, 454, 457], "contain": [13, 16, 19, 20, 26, 57, 59, 63, 67, 69, 77, 82, 83, 84, 86, 87, 88, 89, 91, 92, 93, 96, 97, 101, 103, 104, 106, 107, 110, 111, 112, 114, 115, 119, 123, 125, 126, 127, 128, 134, 136, 137, 138, 139, 140, 145, 147, 148, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 161, 162, 164, 165, 166, 167, 168, 169, 170, 171, 172, 177, 179, 182, 184, 189, 192, 194, 195, 196, 197, 198, 200, 201, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 215, 219, 221, 222, 224, 225, 226, 227, 228, 229, 230, 231, 232, 234, 235, 236, 237, 240, 241, 242, 243, 244, 245, 246, 247, 248, 251, 252, 254, 255, 256, 257, 258, 259, 260, 261, 262, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 278, 279, 281, 282, 283, 284, 303, 317, 318, 320, 321, 388, 390, 392, 393, 395, 398, 399, 401, 403, 404, 405, 408, 409, 410, 411, 412, 414, 416, 417, 418, 420, 422, 425, 426, 427, 428, 435, 439, 443, 444, 445, 446, 448, 449, 451, 452, 455, 456, 457, 458, 459, 463, 464, 465, 468, 472, 474, 475, 476, 480, 483, 484, 487, 488, 492, 494, 495, 497, 502, 503, 504, 505, 507, 508, 509, 510, 511, 512, 513, 514, 515, 518, 519, 520, 521, 529, 530, 532, 534, 535, 537, 542, 543, 544, 546, 550, 554, 555, 558, 559, 560, 606, 608, 610, 611, 612], "containment_correct": [16, 104, 107, 184, 468, 474, 475, 476, 480, 481, 483, 485, 494, 495, 497, 499, 503, 508, 529], "containment_fract": 97, "containment_radiu": [158, 164, 166, 167, 168, 170, 468, 503, 507, 510], "containment_radius_map": [167, 170], "contains_pix": [195, 196, 205, 208], "contains_wcs_pix": 205, "contamin": [67, 481, 502, 510, 555], "content": [84, 87, 91, 106, 127, 128, 197, 198, 200, 206, 209, 210, 222, 357, 360, 395, 398, 400, 404, 410, 415, 416, 423, 426, 428, 443, 452, 457, 470, 509, 510, 518, 520, 543, 546, 557, 558], "content_typ": [16, 84, 87, 91, 106, 127], "context": [16, 84, 87, 88, 91, 92, 106, 127, 219, 221, 230, 254, 341, 372, 395, 410, 415, 422, 428, 464, 509, 536], "contigu": [202, 207, 449], "continu": [202, 222, 402, 404, 405, 408, 409, 411, 412, 414, 416, 421, 434, 437, 438, 441, 449, 454, 455, 456, 458, 474, 488, 499, 510, 558, 608], "continuous_upd": [483, 492, 509, 529, 530], "contour": [212, 215, 387, 404, 425, 426, 459, 513], "contour_": 505, "contourf": 210, "contract": 422, "contrari": [396, 403], "contrast": [416, 608], "contrera": 459, "contribut": [101, 117, 120, 230, 238, 254, 270, 391, 395, 397, 404, 409, 415, 418, 420, 428, 435, 438, 449, 451, 453, 508, 547, 584, 606, 609, 610], "contributes_to_stat": 101, "contributor": [395, 398, 416, 426, 428, 436, 447, 448], "control": [83, 88, 92, 104, 107, 111, 112, 395, 408, 429, 431, 468, 501, 509, 515, 546, 611], "controversi": [395, 400, 401, 416], "conveni": [13, 126, 394, 395, 405, 409, 418, 420, 429, 439, 441, 446, 449, 451, 456, 485, 499, 501, 502, 503, 509, 510, 511, 512, 518, 520, 532, 541, 545, 607], "convent": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 154, 196, 197, 198, 200, 208, 209, 210, 396, 418, 420, 441, 442, 445, 446, 460, 465, 503, 508, 509, 512, 542, 544, 551, 558, 611], "converg": [24, 223, 424, 440, 461, 474, 476, 483, 499, 505, 513, 542, 546, 553, 564], "convers": [84, 87, 88, 91, 92, 106, 126, 127, 128, 138, 147, 320, 321, 400, 420, 423, 430, 432, 449, 462, 463, 464, 468, 559], "conversion_typ": [519, 532], "convert": [16, 19, 23, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 50, 83, 85, 86, 88, 92, 100, 103, 104, 107, 109, 111, 112, 126, 128, 131, 151, 152, 153, 154, 155, 156, 157, 158, 159, 161, 162, 164, 166, 167, 168, 169, 170, 180, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 214, 217, 218, 219, 220, 221, 230, 245, 254, 293, 312, 314, 316, 319, 322, 326, 339, 355, 375, 377, 378, 396, 401, 409, 410, 420, 423, 428, 450, 462, 463, 464, 465, 468, 478, 486, 495, 496, 499, 503, 504, 505, 510, 511, 518, 532, 544, 550, 555, 558, 611, 613], "convert_bytestring_to_unicod": [88, 92], "convert_unicode_to_bytestr": [88, 92], "convinc": 532, "convolut": [121, 125, 131, 137, 165, 198, 210, 394, 407, 413, 437, 444, 446, 455, 457, 458, 464, 465, 481, 509, 542, 559], "convolution_method": 198, "convolv": [107, 113, 118, 137, 165, 198, 210, 406, 437, 446, 449, 458, 477, 478, 481, 509, 552, 584], "convolve_ful": 198, "convolve_wc": 198, "coodin": 426, "cookbook": [17, 19, 20, 21, 22, 24, 25, 26, 27], "cookiecutt": 411, "coolwarm": [483, 519, 520, 530], "coord": [13, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 83, 195, 196, 197, 198, 199, 200, 201, 202, 203, 205, 206, 207, 208, 209, 210, 256, 303, 320, 321, 406, 442, 488, 509, 510, 555, 558, 559, 567], "coord2": [320, 321], "coord_to_idx": [195, 196, 199, 201, 202, 205, 207, 208, 509], "coord_to_pix": [195, 196, 199, 201, 202, 205, 207, 208, 509], "coordin": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 41, 46, 47, 83, 85, 88, 89, 90, 91, 92, 95, 96, 97, 104, 105, 107, 110, 111, 112, 114, 115, 126, 128, 130, 131, 132, 141, 145, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 164, 166, 167, 168, 169, 170, 180, 190, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 205, 206, 207, 208, 209, 210, 230, 231, 240, 243, 245, 254, 256, 258, 267, 268, 270, 282, 303, 307, 313, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 333, 343, 349, 353, 354, 370, 396, 400, 401, 402, 404, 408, 409, 414, 416, 419, 421, 422, 426, 437, 439, 442, 444, 455, 457, 458, 460, 468, 470, 474, 476, 477, 481, 485, 486, 487, 488, 489, 492, 494, 495, 496, 497, 499, 501, 503, 507, 508, 509, 510, 511, 512, 514, 517, 518, 519, 520, 530, 532, 542, 550, 555, 557, 558, 564, 565, 568, 607, 608, 613, 614], "coordinateattribut": [320, 321], "coordsi": 444, "copi": [11, 16, 19, 20, 26, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 82, 83, 84, 86, 87, 88, 89, 90, 91, 92, 93, 100, 101, 103, 104, 106, 107, 110, 111, 112, 121, 123, 124, 125, 126, 127, 128, 129, 130, 132, 133, 134, 136, 137, 155, 156, 159, 162, 167, 170, 195, 196, 197, 198, 199, 200, 201, 202, 203, 205, 206, 207, 208, 209, 210, 218, 219, 220, 221, 224, 225, 226, 227, 228, 229, 230, 231, 232, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 251, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 278, 279, 280, 281, 282, 283, 284, 285, 319, 320, 321, 366, 395, 398, 400, 403, 405, 409, 411, 418, 425, 427, 428, 434, 449, 451, 458, 459, 460, 463, 465, 469, 470, 474, 476, 477, 483, 485, 492, 495, 496, 499, 502, 505, 508, 512, 515, 519, 546, 555, 559, 571, 609], "copy_data": [88, 92, 230, 238, 254, 270, 278, 280, 282], "copy_indic": [88, 92], "copy_ob": [82, 546], "copy_on_getitem": [88, 92], "copyright": 434, "core": [16, 53, 84, 87, 91, 106, 127, 163, 394, 395, 402, 408, 409, 415, 417, 421, 422, 425, 427, 435, 438, 455, 459, 463, 468, 476, 477, 480, 483, 485, 487, 489, 492, 496, 499, 511, 518, 534, 544, 609], "corner": [223, 409, 412, 425, 468, 470, 474, 475, 476, 477, 478, 480, 481, 483, 484, 485, 486, 487, 488, 489, 494, 495, 496, 497, 501, 502, 503, 505, 508, 509, 510, 511, 512, 515, 517, 518, 519, 520, 521, 529, 530, 532], "cornerplot": 513, "corr_coord": [167, 170], "correct": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 67, 83, 89, 104, 105, 107, 156, 167, 170, 184, 189, 190, 203, 238, 256, 257, 282, 395, 407, 408, 421, 422, 423, 425, 427, 441, 444, 446, 447, 448, 449, 452, 455, 456, 458, 460, 461, 462, 463, 464, 465, 468, 469, 474, 475, 476, 477, 487, 492, 494, 502, 503, 505, 508, 510, 511, 512, 515, 520, 529, 532, 543, 544, 553, 567, 580, 583, 585, 588, 593], "correctli": [19, 20, 26, 77, 102, 155, 156, 162, 167, 170, 224, 225, 228, 232, 234, 235, 236, 241, 247, 248, 251, 255, 257, 259, 260, 261, 266, 271, 273, 274, 275, 276, 279, 283, 395, 396, 398, 422, 423, 439, 441, 446, 451, 452, 461, 507, 508, 509, 510, 511, 515, 558, 565], "correl": [19, 20, 26, 125, 131, 140, 213, 224, 225, 228, 232, 234, 235, 236, 241, 247, 248, 251, 255, 257, 259, 266, 271, 273, 274, 275, 276, 279, 283, 307, 413, 419, 420, 425, 449, 459, 465, 486, 489, 505, 510, 512, 513, 515, 529, 544, 606], "correlate_off": [125, 481], "correlation_radiu": [16, 125, 145, 146, 148, 475, 480, 481, 483, 497, 504, 520, 529, 544], "correspond": [19, 20, 26, 28, 29, 30, 31, 32, 33, 35, 36, 37, 39, 40, 45, 77, 88, 90, 92, 101, 102, 104, 107, 111, 112, 126, 128, 129, 130, 131, 133, 134, 137, 138, 147, 154, 155, 156, 162, 165, 167, 169, 170, 171, 195, 196, 197, 198, 200, 201, 202, 204, 205, 206, 207, 208, 209, 210, 212, 224, 225, 228, 232, 234, 235, 236, 240, 241, 247, 248, 251, 255, 257, 259, 260, 261, 266, 271, 273, 274, 275, 276, 279, 281, 283, 296, 317, 388, 398, 405, 406, 407, 408, 416, 417, 420, 422, 424, 426, 443, 446, 470, 472, 474, 475, 476, 483, 487, 488, 494, 502, 505, 508, 509, 512, 514, 515, 518, 519, 520, 529, 532, 542, 543, 544, 546, 558, 559, 570, 574, 607, 608, 613], "cosimo": [446, 449, 451, 457, 458, 460, 463], "cosmic": [52, 232, 286, 413, 518, 551], "cosmologi": [425, 513], "cost": [222, 608], "coto": 457, "could": [16, 84, 87, 91, 106, 127, 396, 398, 400, 401, 404, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 420, 422, 423, 425, 426, 428, 470, 474, 483, 485, 502, 504, 505, 513, 515, 518, 519, 529, 545], "count": [16, 77, 83, 93, 101, 102, 104, 107, 108, 109, 110, 111, 112, 116, 121, 125, 126, 128, 129, 130, 132, 133, 134, 135, 136, 137, 144, 172, 174, 177, 178, 179, 184, 186, 190, 194, 197, 198, 200, 201, 202, 206, 209, 210, 219, 221, 230, 254, 295, 299, 300, 301, 306, 308, 311, 312, 314, 315, 316, 343, 379, 382, 391, 393, 401, 403, 406, 407, 408, 410, 411, 416, 420, 426, 440, 441, 444, 446, 449, 451, 452, 458, 459, 463, 464, 468, 469, 470, 474, 475, 476, 477, 478, 480, 481, 483, 485, 487, 489, 492, 494, 495, 496, 497, 499, 503, 505, 508, 509, 510, 515, 517, 520, 527, 529, 530, 532, 544, 546, 550, 551, 553, 554, 555, 556, 559, 608, 609, 610, 612, 614], "count_bkg": 497, "count_statist": 611, "counter": [231, 240, 243, 564], "counts_3d": 509, "counts_fil": 102, "counts_imag": [489, 503], "counts_min": 150, "counts_off": [104, 107, 108, 111, 112, 172, 178, 179, 182, 393, 407, 451, 462, 463, 469, 475, 476, 477, 481, 485, 497, 503, 542, 611], "counts_on": 440, "counts_rat": 503, "counts_statist": 481, "countspredictor": 406, "countsspectrum": [407, 410, 440, 441, 443, 445, 454], "countsstatist": [295, 299, 420, 445, 446, 449, 460], "coupl": [403, 409, 414, 415, 428, 446, 458, 509], "cours": [395, 398, 402, 405, 412, 426, 434, 475, 483, 503, 509, 513, 519, 529, 608, 609, 612], "cousin": [440, 446, 454, 456, 608], "cousins2007": 608, "coutinho": [446, 449], "cov": [260, 261, 425, 428], "cov_matrix": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40], "covar": [213, 388, 459], "covar_list": 213, "covari": [15, 19, 20, 26, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 101, 129, 130, 133, 134, 214, 215, 216, 219, 224, 225, 226, 227, 228, 229, 230, 231, 232, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 251, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 278, 279, 280, 281, 282, 283, 284, 285, 295, 299, 388, 413, 424, 425, 445, 451, 459, 460, 463, 465, 475, 529, 611], "covariance_data": [230, 238, 254, 270, 280], "covariance_opt": 215, "covariance_result": 216, "covariance_typ": 424, "covariancegaussianprior": 424, "covariancemixin": [225, 230, 270, 465], "covarianceresult": [103, 215, 216, 470, 472, 474, 475, 476, 483, 484, 485, 497, 499, 505, 519, 529, 530], "cover": [281, 395, 397, 409, 410, 411, 420, 425, 470, 471, 494, 495, 503, 509, 524, 532, 547, 551], "coverag": [404, 410, 426, 428, 437, 441, 449, 455, 458, 495, 505], "coveral": [428, 437], "cowan": [135, 312, 314], "cpu": [129, 130, 133, 137, 341, 342, 408, 425, 513], "cpython": 400, "crab": [67, 83, 111, 112, 134, 150, 215, 251, 287, 293, 320, 321, 403, 407, 416, 425, 437, 443, 455, 457, 474, 475, 476, 484, 485, 494, 502, 503, 504, 505, 510, 513, 515, 517, 519, 520, 521, 529, 530, 532, 544, 555, 559, 608], "crab_10gev_100tev_dataset": 484, "crab_3fhl": 532, "crab_3fhl_spec": 532, "crab_events_pass4": 520, "crab_fp": 475, "crab_fp_tabl": 475, "crab_hess_ecpl": 287, "crab_hess_fp": [126, 128, 149], "crab_magic_lp": 476, "crab_model": 505, "crab_posit": 555, "crab_spec": 484, "crab_spectrum": 505, "crabnebula": 494, "crabspectrum": 441, "crash": 513, "creat": [11, 13, 16, 19, 20, 26, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 70, 82, 83, 84, 86, 87, 88, 89, 91, 92, 93, 94, 100, 102, 103, 104, 106, 107, 111, 112, 113, 114, 115, 116, 118, 119, 121, 126, 127, 128, 129, 130, 133, 134, 137, 138, 147, 151, 152, 153, 154, 155, 156, 157, 158, 159, 161, 162, 164, 165, 166, 167, 168, 169, 170, 177, 179, 180, 181, 185, 190, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 219, 221, 222, 224, 225, 226, 227, 228, 229, 230, 231, 232, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 278, 279, 280, 281, 282, 283, 284, 285, 287, 293, 319, 320, 321, 331, 352, 356, 372, 382, 384, 389, 395, 396, 398, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 432, 434, 441, 442, 443, 446, 449, 451, 457, 458, 460, 461, 462, 463, 464, 465, 468, 469, 472, 475, 476, 477, 483, 485, 486, 487, 489, 492, 494, 495, 496, 497, 499, 500, 501, 502, 505, 508, 511, 512, 513, 514, 515, 518, 519, 520, 521, 527, 529, 532, 534, 541, 542, 543, 546, 550, 553, 555, 556, 557, 558, 563, 565, 566, 567, 568, 574, 584, 593, 606, 607, 609, 614], "create_chain": 513, "create_crab_spectral_model": [474, 476, 484], "create_dataset": 102, "create_fermi_isotropic_diffuse_model": [511, 519], "create_map_dataset_from_observ": [94, 110], "create_mask": [195, 196, 205, 208], "create_t": 499, "creation": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 84, 87, 91, 106, 109, 127, 130, 154, 208, 320, 321, 404, 405, 409, 419, 422, 426, 443, 449, 465, 500, 512, 521], "creator": [106, 109, 127, 398, 423, 475, 480, 481, 483, 512, 529, 563, 564, 565, 566, 567, 568, 569, 570, 571, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 596, 597, 598, 599, 600, 601, 602, 603, 604], "creatormedadata": 423, "creatormetadata": [84, 87, 91, 106, 109, 127, 154, 423], "credit": 434, "crimson": 476, "criteria": [15, 92, 425, 451, 508, 513, 514, 522, 524], "criterion": [92, 135, 136, 137, 317, 426, 468, 546], "critic": [425, 513, 515], "criticis": 386, "crop": [86, 195, 196, 197, 198, 200, 205, 206, 208, 209, 210], "crop_width": [195, 196, 197, 198, 200, 205, 206, 208, 209, 210], "cross": [19, 401, 416, 465, 534], "crowd": 502, "crpix": 208, "crpix1": 509, "crpix2": 509, "crucial": [423, 425, 487, 488, 503], "cruft": 428, "crux": [33, 38, 499], "crval1": 509, "crval2": 509, "cryptic": 406, "csh": 609, "csobsselect": 405, "css": [88, 92, 428, 465], "cstat": [407, 425, 443], "csv": 128, "ct": [379, 458], "cta": [82, 83, 90, 104, 107, 111, 112, 117, 120, 121, 125, 145, 146, 152, 156, 157, 158, 167, 232, 383, 388, 390, 399, 402, 403, 404, 408, 411, 414, 415, 416, 427, 438, 439, 449, 455, 456, 457, 458, 465, 467, 468, 477, 480, 483, 485, 487, 488, 492, 496, 497, 503, 504, 507, 511, 522, 523, 524, 529, 544, 608], "cta_data_analysi": [416, 467, 485, 491], "cta_dataset": 511, "cta_north": 98, "cta_sensist": 416, "cta_sensit": [467, 468, 473], "cta_simul": 438, "cta_south": 98, "cta_util": 458, "ctadata": 518, "ctao": [82, 156, 157, 161, 177, 286, 395, 398, 416, 422, 427, 430, 435, 465, 467, 468, 475, 477, 480, 485, 487, 488, 497, 514, 520, 521, 522, 523, 524, 534, 546, 548, 607, 608], "ctao_north": [98, 320, 321], "ctao_south": [98, 468, 477, 487, 488, 492, 496], "ctapip": [398, 402, 404, 411, 412, 414, 415, 416, 417, 426], "ctaspectrumobserv": 458, "ctobssim": 408, "ctool": [405, 408, 411, 416, 582], "cts_sigma": 505, "ctselect": 405, "ctype1": 509, "ctype2": 509, "cube": [46, 104, 107, 137, 172, 190, 197, 198, 200, 206, 209, 210, 250, 270, 395, 406, 407, 408, 414, 416, 417, 419, 425, 430, 437, 441, 442, 445, 450, 453, 454, 455, 456, 457, 458, 471, 478, 480, 485, 489, 519, 532, 542, 551, 553, 558, 559, 608], "cubic": 509, "cumbersom": [405, 413], "cumsum": [151, 152, 153, 154, 157, 158, 159, 161, 164, 166, 168, 169, 197, 198, 200, 206, 209, 210], "cumul": [101, 151, 152, 153, 154, 157, 158, 159, 161, 164, 166, 168, 169, 197, 198, 200, 206, 209, 210, 343, 408, 425, 474, 487, 511, 546], "cunit1": 509, "cunit2": 509, "curat": [428, 438], "curl": [67, 412, 429, 430, 432, 518], "current": [11, 15, 19, 20, 26, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 83, 85, 86, 88, 89, 90, 92, 100, 101, 103, 104, 107, 111, 112, 128, 129, 133, 160, 183, 195, 196, 197, 198, 200, 206, 207, 208, 209, 210, 215, 222, 224, 225, 226, 227, 228, 229, 230, 231, 232, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 251, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 278, 279, 280, 281, 282, 283, 284, 285, 297, 372, 389, 395, 396, 398, 401, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 416, 417, 418, 419, 420, 422, 423, 424, 425, 426, 429, 430, 431, 432, 441, 459, 475, 501, 504, 507, 508, 509, 511, 518, 520, 521, 529, 530, 535, 542, 543, 544, 551, 559, 606, 608, 609, 610], "curv": [15, 19, 20, 22, 26, 73, 77, 83, 133, 141, 224, 225, 228, 232, 234, 235, 236, 241, 245, 247, 248, 251, 255, 257, 259, 260, 261, 266, 271, 273, 274, 275, 276, 279, 281, 283, 305, 387, 399, 406, 408, 411, 416, 420, 426, 430, 439, 443, 445, 446, 450, 453, 454, 456, 458, 460, 463, 464, 467, 468, 471, 493, 498, 499, 500, 524, 544, 545, 555, 560, 595, 605, 607], "curve_fit": 388, "cuspi": 534, "custom": [16, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 82, 84, 87, 90, 91, 106, 127, 132, 404, 405, 406, 411, 413, 415, 419, 423, 429, 443, 444, 446, 458, 468, 477, 480, 483, 485, 492, 496, 503, 507, 509, 518, 546, 593], "custom_model": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40], "customari": 512, "customis": [416, 507], "customprior": 515, "cut": [92, 125, 169, 183, 184, 405, 415, 457, 463, 467, 468, 471, 473, 477, 497, 503, 508, 509, 513, 514, 518, 524, 530, 532, 554, 555], "cutoff": [234, 235, 236, 274, 275, 276, 293, 443, 463, 467, 477, 483, 560, 573, 594], "cutout": [104, 107, 111, 112, 117, 120, 155, 156, 162, 167, 170, 173, 196, 198, 206, 208, 210, 280, 401, 407, 439, 444, 449, 455, 458, 465, 480, 481, 483, 485, 489, 503, 508, 519, 530, 532, 542], "cutout2d": [104, 107, 155, 156, 162, 167, 170, 173, 208, 210, 280, 401], "cutout_and_mask_region": [210, 463], "cutout_info": 443, "cutout_mod": 173, "cutout_slic": 208, "cutout_template_model": 465, "cutout_width": 173, "cval": [197, 198, 200, 206, 209, 210], "cwd": 403, "cwt": [416, 443, 455, 458], "cxc": [215, 416, 505], "cyan": 392, "cycl": [392, 398, 399, 400, 412, 414, 431, 456, 460], "cycler": [392, 468], "cylindr": [320, 321], "cython": [398, 440, 450], "d": [19, 20, 23, 28, 88, 90, 92, 201, 204, 207, 245, 251, 262, 281, 287, 361, 398, 413, 416, 451, 460, 472, 481, 487, 488, 496, 509, 512, 514, 551, 558, 564, 596, 597, 598, 599, 600, 601, 602, 603, 604, 609, 612], "dai": [88, 92, 126, 128, 207, 237, 242, 244, 262, 269, 398, 409, 416, 427, 428, 509, 602, 608, 609], "daniel": [459, 462, 464, 465], "dark": [1, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 416, 424, 458, 463, 464, 467, 506, 516, 524, 535, 607], "dark_matter_spectra": 26, "darkbit": 534, "darkblu": 515, "darkgreen": 515, "darkmatt": [17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 265, 396, 416, 458, 501, 535], "darkmatterannihilationspectralmodel": [20, 265, 460, 501, 512], "darkmatterdecayspectralmodel": [265, 464, 501, 512], "darkorang": [474, 475], "darksusi": 534, "darwin": 434, "dash": [497, 501, 515], "dashboard": 428, "dat": [26, 88, 92, 230, 254, 475, 529, 534], "data": [6, 11, 15, 16, 19, 20, 26, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 116, 119, 121, 126, 127, 128, 129, 130, 131, 132, 140, 145, 146, 151, 152, 153, 154, 155, 156, 157, 158, 159, 161, 162, 164, 165, 166, 167, 168, 169, 170, 173, 174, 177, 178, 179, 183, 190, 194, 195, 196, 197, 198, 200, 201, 202, 203, 205, 206, 207, 208, 209, 210, 213, 218, 219, 220, 221, 222, 224, 225, 226, 227, 228, 229, 230, 231, 232, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 278, 279, 280, 281, 282, 283, 284, 285, 296, 300, 305, 306, 307, 309, 310, 316, 317, 318, 320, 321, 329, 330, 333, 351, 357, 360, 364, 365, 373, 383, 384, 385, 386, 388, 389, 394, 396, 398, 399, 402, 405, 406, 407, 408, 409, 411, 414, 415, 416, 417, 418, 419, 420, 422, 424, 425, 427, 430, 434, 435, 437, 438, 439, 440, 441, 443, 444, 445, 446, 449, 450, 451, 452, 454, 455, 456, 457, 458, 459, 460, 463, 464, 467, 468, 472, 477, 478, 480, 481, 485, 487, 488, 492, 496, 501, 502, 504, 505, 506, 507, 510, 511, 512, 513, 514, 515, 516, 518, 519, 521, 523, 525, 527, 531, 533, 534, 541, 542, 544, 546, 548, 549, 550, 551, 552, 553, 555, 556, 558, 559, 566, 567, 580, 583, 585, 587, 588, 593, 606, 607, 608, 611, 612, 613, 614], "data_extend": [69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80], "data_nbyt": [195, 196, 205, 208], "data_path": 520, "data_reduct": 411, "data_shap": [103, 104, 107, 111, 112, 195, 196, 205, 208, 503, 559], "data_shape_ax": [196, 205, 208], "data_shape_imag": 208, "data_spectr": [69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80], "data_stor": [82, 97, 177, 317, 318, 411, 434, 476, 485, 487, 495, 497, 499, 508, 514, 517, 518, 520, 521, 527, 530, 543, 553, 555, 556], "data_storag": 543, "data_summari": 455, "dataaxi": 440, "databas": [401, 415, 546], "dataclass": 395, "datafram": [88, 92, 513], "dataset": [6, 15, 16, 19, 20, 26, 95, 99, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 123, 124, 125, 126, 128, 129, 130, 133, 134, 135, 136, 137, 139, 144, 145, 146, 147, 148, 150, 155, 156, 162, 167, 170, 172, 173, 174, 177, 178, 179, 182, 183, 184, 199, 204, 215, 220, 222, 224, 225, 226, 227, 228, 229, 230, 231, 232, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 251, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 278, 279, 280, 281, 282, 283, 284, 285, 293, 296, 297, 312, 314, 341, 388, 391, 392, 396, 398, 399, 401, 403, 408, 410, 411, 412, 414, 415, 416, 420, 424, 425, 427, 428, 430, 432, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 449, 450, 451, 452, 453, 456, 458, 459, 460, 461, 462, 463, 464, 465, 467, 469, 472, 474, 477, 478, 485, 486, 487, 489, 492, 497, 499, 501, 502, 506, 509, 512, 514, 516, 517, 518, 519, 521, 524, 527, 532, 543, 544, 546, 553, 554, 555, 556, 567, 571, 574, 603, 604, 606, 607, 608, 609, 610, 611], "dataset1": [515, 542], "dataset1_prior": 515, "dataset2": [515, 542], "dataset2_prior": 515, "dataset_1": 544, "dataset_2": 544, "dataset_3fgl": 472, "dataset_3fhl": 472, "dataset_cta": 503, "dataset_empti": [470, 474, 476, 477, 485, 495, 499, 503, 508, 520, 555], "dataset_energy_depend": 486, "dataset_fak": 477, "dataset_fp": 496, "dataset_gammacat": 472, "dataset_hawc": 484, "dataset_hess": [484, 505], "dataset_imag": [485, 503], "dataset_kwarg": [94, 110], "dataset_lc": 496, "dataset_mak": [474, 476, 485, 495, 499, 508, 555], "dataset_nam": [110, 114, 115, 133, 230, 238, 254, 418, 424, 465, 483, 487, 488, 492, 503, 511, 530, 567], "dataset_on_off": [172, 178, 179, 182, 468, 474, 476, 477, 481, 485, 495, 499, 508, 555, 556], "dataset_on_off1": 468, "dataset_onoff": 407, "dataset_simul": 476, "dataset_stack": [474, 483], "datasetmetadata": 426, "datasetmodel": [217, 254, 270, 418, 446, 487, 488, 492, 499, 513], "datasetread": [102, 108], "datasets1": 392, "datasets2": 392, "datasets3": 392, "datasets_fil": [16, 475, 480, 481, 483, 529], "datasets_hess": 484, "datasets_in_phase_bin_3": 420, "datasets_mak": 508, "datasets_nam": [19, 20, 26, 224, 225, 226, 227, 228, 229, 230, 231, 232, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 251, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 278, 279, 280, 281, 282, 283, 284, 285, 288, 445, 484, 511, 529, 567], "datasets_read": [511, 519], "datasets_sl": 503, "datasets_to_fit": 499, "datasetsconfig": 16, "datasetsmak": [175, 451, 463, 474, 508, 514, 546], "datasetsmetadata": 423, "datasetwrit": 109, "datastor": [16, 90, 97, 177, 317, 318, 401, 405, 410, 426, 430, 434, 440, 451, 452, 454, 455, 457, 463, 464, 470, 474, 475, 476, 480, 481, 483, 485, 487, 492, 495, 497, 499, 508, 514, 517, 520, 521, 527, 529, 543, 546, 553, 555, 556, 609], "datastorecheck": 458, "datastoreindex": 405, "datastoreinmemori": 405, "datastoremak": [440, 451], "datastoremetadata": 423, "datastoreobserv": [178, 401, 405, 444, 457], "datastorexml": 405, "datasum": [83, 86, 89, 101, 103, 104, 107, 108, 109, 111, 112, 126, 128, 154, 155, 156, 162, 167, 170, 197, 198, 200, 204, 206, 209, 210], "datat": [88, 92], "date": [88, 92, 106, 127, 375, 412, 421, 422, 423, 425, 427, 435, 457, 475, 478, 480, 481, 483, 512, 521, 529, 563, 564, 565, 566, 567, 568, 569, 570, 571, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 596, 597, 598, 599, 600, 601, 602, 603, 604, 613], "datefmt": [16, 475, 480, 481, 483, 529, 609], "dateref": 478, "datetim": [106, 127, 423], "datetime64": [88, 92], "datfix": 478, "daughter": 423, "david": [405, 410, 438, 458, 459], "dc": 483, "dc1": [404, 416, 459, 487, 497, 507, 511, 518], "dc2": 404, "ddof": 500, "de": [19, 20, 26, 67, 101, 224, 225, 228, 232, 234, 235, 236, 247, 248, 251, 255, 257, 259, 260, 261, 266, 271, 273, 274, 275, 276, 279, 283, 316, 422, 427, 446, 449, 452, 501, 608], "deabsorb": 469, "deactiv": 429, "dead": [83, 86, 89, 351, 405, 425, 513], "dead_tim": [83, 89, 351], "deadc": 405, "deadlin": [404, 408], "deadtim": [89, 91, 190, 477, 487, 492, 518], "deadtime_fract": [89, 91], "deal": [86, 395, 401, 410, 411, 477, 487, 495, 524, 531, 546], "debanjan": 440, "debian": [412, 431, 453], "debug": [11, 395, 401, 406, 411, 460, 474, 504, 509, 513, 546, 609], "dec": [67, 83, 85, 88, 89, 92, 95, 145, 180, 395, 396, 400, 404, 406, 408, 411, 412, 416, 436, 462, 468, 474, 476, 478, 481, 485, 488, 494, 495, 497, 499, 502, 508, 510, 517, 518, 519, 520, 530, 532, 534, 546, 550, 555, 613], "dec_pnt": 521, "dec_tru": 408, "decad": [17, 18, 21, 22, 24, 25, 27, 102, 114, 115, 202, 289, 464, 487], "decai": [17, 18, 20, 21, 22, 23, 24, 25, 27, 237, 244, 262, 419, 487, 496, 500, 512, 534, 599], "decemb": 436, "decid": [395, 401, 404, 405, 406, 407, 409, 410, 414, 418, 419, 420, 427, 475, 514, 529], "decim": [88, 92, 313], "decis": 395, "declar": [15, 88, 92, 270, 373, 374, 402, 403, 406, 411, 412, 415, 419, 428, 445, 545], "decor": [373, 374, 395, 415, 423, 609], "decorrel": [19, 20, 26, 224, 225, 228, 232, 234, 235, 236, 241, 247, 248, 251, 255, 257, 259, 260, 261, 266, 271, 273, 274, 275, 276, 279, 283], "decoupl": 69, "dedic": [398, 409, 410, 420, 422, 423, 426, 428, 444, 445, 446, 464, 474, 475, 476, 483, 497, 505, 529, 530, 543], "deduc": [420, 464], "deep": [16, 19, 20, 26, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 84, 86, 87, 88, 91, 92, 100, 101, 103, 104, 106, 107, 111, 112, 126, 127, 128, 218, 219, 220, 221, 224, 225, 226, 227, 228, 229, 230, 231, 232, 234, 235, 236, 237, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 251, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 266, 267, 268, 269, 271, 272, 273, 274, 275, 276, 278, 279, 281, 283, 284, 285, 426, 483], "deepcopi": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 88, 92, 278, 280, 282], "deepli": 426, "def": [16, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 84, 87, 91, 106, 127, 298, 373, 374, 395, 396, 406, 407, 408, 409, 419, 420, 423, 424, 425, 474, 483, 499, 505, 512, 513, 515, 527, 555, 609, 611], "def_unit": [468, 477, 480, 483, 485, 492, 496, 518], "default": [11, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 45, 46, 47, 65, 67, 77, 78, 80, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 97, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 114, 115, 116, 117, 119, 120, 121, 123, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 140, 141, 142, 143, 144, 145, 146, 147, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 161, 162, 164, 165, 166, 167, 168, 169, 170, 172, 173, 174, 177, 178, 180, 181, 183, 184, 185, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 224, 225, 226, 227, 228, 229, 230, 231, 232, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 251, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 289, 291, 293, 294, 295, 298, 299, 300, 304, 305, 306, 307, 312, 313, 314, 316, 317, 319, 320, 321, 332, 333, 334, 339, 341, 342, 348, 349, 350, 351, 353, 354, 357, 360, 362, 363, 365, 371, 376, 377, 382, 384, 385, 386, 388, 389, 391, 392, 395, 396, 401, 407, 411, 412, 419, 422, 426, 428, 434, 440, 442, 443, 444, 446, 449, 451, 457, 458, 460, 461, 462, 463, 464, 474, 475, 476, 478, 481, 483, 487, 488, 495, 496, 502, 503, 504, 505, 507, 508, 509, 510, 511, 512, 513, 515, 519, 524, 529, 530, 532, 542, 544, 546, 553, 556, 557, 558, 559, 564, 565, 566, 574, 584, 609, 613], "default_alpha": [21, 27], "default_beta": 27, "default_css": [88, 92], "default_css_nb": [88, 92], "default_differenti": [320, 321], "default_epoch": 377, "default_gamma": 27, "default_hdu_t": 82, "default_interp_kwarg": [151, 152, 153, 154, 157, 158, 159, 161, 164, 166, 168, 169, 456], "default_nam": [88, 92], "default_notebook_table_class": [88, 92], "default_obs_t": 82, "default_paramet": [19, 20, 26, 224, 225, 226, 227, 228, 229, 231, 232, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 251, 255, 256, 257, 258, 259, 260, 261, 262, 263, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 278, 279, 280, 281, 282, 283, 284, 285, 424], "default_represent": [320, 321], "default_scale_radiu": [17, 21, 22, 24, 25, 27], "default_unit": [151, 152, 157, 159, 164, 169, 507], "defer": [107, 112], "defin": [15, 16, 19, 20, 26, 28, 29, 30, 31, 32, 33, 35, 36, 37, 39, 40, 42, 43, 44, 45, 46, 47, 52, 53, 83, 84, 87, 88, 89, 91, 92, 96, 103, 104, 105, 106, 107, 110, 111, 112, 117, 120, 125, 126, 127, 128, 129, 130, 132, 133, 137, 154, 155, 156, 158, 162, 165, 166, 167, 168, 170, 173, 174, 178, 183, 195, 196, 197, 198, 200, 201, 202, 205, 206, 207, 208, 209, 210, 215, 218, 220, 222, 224, 225, 226, 227, 228, 229, 230, 231, 232, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 251, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 278, 279, 280, 281, 282, 283, 284, 285, 298, 300, 306, 308, 312, 314, 320, 321, 333, 343, 348, 349, 350, 351, 354, 385, 386, 388, 395, 396, 398, 400, 401, 404, 406, 407, 408, 409, 410, 411, 412, 415, 417, 418, 420, 421, 422, 423, 424, 425, 426, 429, 430, 431, 432, 439, 440, 443, 446, 449, 452, 456, 457, 462, 463, 464, 469, 475, 477, 478, 480, 481, 483, 484, 486, 489, 492, 496, 497, 499, 500, 502, 503, 504, 505, 507, 508, 509, 511, 512, 514, 515, 518, 519, 520, 524, 529, 532, 542, 543, 544, 546, 548, 551, 555, 556, 558, 564, 566, 568, 569, 570, 574, 575, 578, 579, 581, 582, 584, 586, 587, 589, 590, 591, 592, 593, 604, 606, 607, 608, 609, 610, 611, 612], "definit": [83, 84, 86, 87, 89, 91, 101, 104, 106, 107, 111, 112, 127, 174, 205, 223, 298, 316, 332, 395, 404, 405, 409, 417, 418, 419, 420, 423, 426, 441, 445, 446, 462, 464, 465, 474, 476, 480, 489, 495, 507, 508, 529, 542, 544, 551, 552, 557, 559, 564, 565, 611], "deform": 559, "deg": [16, 33, 34, 38, 47, 67, 83, 85, 88, 92, 95, 97, 104, 107, 111, 112, 114, 115, 116, 117, 120, 121, 125, 130, 131, 137, 145, 146, 148, 156, 158, 159, 164, 165, 166, 167, 168, 169, 170, 172, 177, 180, 181, 183, 185, 190, 196, 197, 198, 200, 203, 205, 206, 208, 209, 210, 230, 231, 240, 243, 254, 258, 267, 268, 270, 317, 318, 320, 321, 353, 390, 395, 396, 406, 409, 411, 419, 420, 423, 434, 468, 470, 474, 475, 476, 477, 478, 480, 481, 483, 484, 485, 486, 487, 488, 489, 492, 494, 495, 496, 497, 499, 501, 502, 503, 504, 507, 508, 509, 510, 511, 512, 514, 517, 518, 519, 520, 521, 529, 530, 532, 543, 544, 546, 548, 550, 553, 555, 556, 557, 558, 559, 564, 565, 566, 567, 568, 569, 570, 571, 614], "deg2": 517, "degeneraci": 513, "degre": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 104, 107, 111, 112, 114, 115, 116, 123, 126, 128, 139, 148, 196, 197, 198, 200, 203, 208, 209, 210, 230, 254, 258, 270, 281, 312, 314, 464, 468, 470, 475, 481, 486, 495, 499, 502, 508, 509, 510, 518, 529, 544, 558, 559, 611, 612], "deil": [400, 401, 402, 403, 404, 405, 406, 407, 409, 411, 412, 413, 414, 416, 437, 438, 439, 440, 441, 442, 443, 444, 450, 453, 454, 455, 456, 457, 458, 459], "deiml": 457, "dej2000": [502, 532], "del": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 88, 92, 406], "delai": [417, 421], "deleg": 411, "delet": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 86, 395, 406, 428, 429, 430, 432, 464, 511], "delete_interv": 86, "delimit": 128, "deliv": [411, 415, 551], "delta": [19, 20, 23, 88, 92, 123, 125, 126, 131, 134, 137, 159, 207, 260, 261, 294, 312, 313, 314, 463, 469, 478, 505, 515, 544, 551, 552, 565, 566, 568, 611], "delta_t": [123, 294, 486], "deltaaic": 513, "deltacstat": 425, "deltaloglik": 513, "deltalogz": 513, "demonstr": [411, 439, 442, 443, 444, 445, 446, 451, 463, 464, 494, 500, 506, 509, 511, 513, 524, 558], "denot": [104, 111, 420, 542], "densiti": [17, 18, 21, 22, 24, 25, 27, 28, 30, 35, 36, 39, 40, 45, 52, 103, 128, 159, 210, 220, 239, 249, 285, 347, 350, 388, 408, 481, 483, 501, 502, 515, 534, 536, 540, 550, 551, 552, 608], "dep": 463, "depend": [11, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 83, 89, 101, 104, 105, 110, 111, 123, 126, 128, 151, 152, 153, 154, 157, 158, 159, 161, 164, 166, 167, 168, 169, 170, 184, 195, 196, 205, 208, 210, 223, 230, 245, 254, 270, 319, 374, 395, 397, 398, 399, 401, 406, 407, 408, 409, 410, 413, 414, 415, 420, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 436, 438, 442, 443, 446, 453, 455, 458, 459, 461, 463, 464, 465, 467, 468, 471, 473, 477, 480, 481, 490, 491, 495, 502, 505, 507, 508, 509, 510, 511, 513, 514, 515, 518, 519, 524, 542, 546, 550, 551, 554, 555, 558, 574], "deploy": 422, "deposit": 422, "deprec": [16, 19, 20, 26, 84, 85, 87, 91, 106, 127, 224, 225, 228, 232, 234, 235, 236, 241, 247, 248, 251, 255, 257, 259, 260, 261, 266, 271, 273, 274, 275, 276, 279, 283, 320, 321, 426, 440, 449, 462, 463, 464, 465, 483, 571], "deprecated_argument_funct": 395, "deprecated_argument_function_kwarg": 395, "deprecated_attribut": 395, "deprecated_funct": 395, "deprecated_renamed_argu": 395, "deprecatedparseprotocol": [16, 84, 87, 91, 106, 127], "deprecation_polici": 421, "depriv": 553, "depth": [16, 84, 87, 91, 106, 127, 361, 430, 435, 469, 500, 574], "deriv": [17, 18, 21, 22, 24, 25, 27, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 50, 51, 54, 101, 119, 125, 133, 137, 138, 147, 281, 320, 321, 395, 407, 408, 413, 415, 417, 420, 478, 504, 518, 520, 544, 551, 558, 610, 611], "descent": [425, 513], "describ": [27, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 82, 96, 128, 129, 131, 137, 166, 206, 215, 283, 308, 312, 314, 398, 400, 401, 404, 405, 407, 408, 409, 411, 412, 414, 415, 416, 419, 420, 421, 422, 425, 426, 435, 441, 449, 457, 458, 474, 475, 478, 487, 488, 500, 504, 505, 512, 513, 515, 518, 520, 521, 524, 529, 542, 546, 550, 559, 560, 608, 609, 610, 611], "descript": [56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 88, 92, 125, 130, 137, 215, 222, 223, 396, 400, 401, 409, 415, 416, 421, 422, 435, 460, 464, 483, 492, 502, 505, 509, 513, 518, 520, 529, 530, 546, 611], "description1": 396, "description2": 396, "description3": 396, "description_width": [483, 492, 509, 529, 530], "descriptionstyl": [483, 492, 509, 529, 530], "descriptor": [88, 89, 92, 104, 107, 111, 112, 280, 330, 396, 445], "desi": [430, 431], "design": [400, 401, 404, 405, 408, 409, 411, 415, 416, 418, 420, 421, 425, 426, 437, 457, 464], "desir": [16, 84, 87, 88, 91, 92, 106, 127, 165, 195, 196, 205, 208, 210, 298, 320, 321, 369, 370, 371, 415, 509, 532, 559], "desktop": 435, "destin": 11, "detail": [19, 20, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 83, 88, 92, 101, 104, 107, 111, 112, 123, 128, 129, 155, 156, 162, 167, 170, 173, 196, 208, 210, 215, 218, 224, 227, 228, 230, 231, 232, 234, 235, 236, 237, 240, 241, 242, 243, 244, 245, 246, 247, 248, 251, 254, 258, 259, 260, 261, 262, 266, 267, 268, 269, 271, 274, 275, 276, 280, 281, 282, 395, 396, 398, 400, 403, 404, 405, 408, 409, 410, 414, 415, 416, 417, 421, 422, 425, 426, 429, 433, 435, 436, 443, 447, 448, 467, 468, 469, 474, 476, 477, 478, 480, 485, 486, 487, 490, 491, 492, 496, 499, 503, 504, 505, 507, 508, 509, 510, 511, 512, 513, 515, 518, 520, 521, 524, 530, 532, 542, 543, 545, 551, 555, 556, 558, 606, 607, 608, 609, 611, 613], "detect": [17, 19, 20, 21, 22, 24, 25, 26, 27, 59, 145, 146, 293, 385, 386, 411, 414, 416, 418, 437, 443, 444, 445, 455, 457, 458, 464, 467, 479, 482, 502, 518, 520, 524, 608, 611], "detect_t": 416, "detector": [83, 89, 105, 110, 159, 510, 520, 551, 608], "determin": [19, 20, 21, 26, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 88, 92, 114, 115, 136, 158, 164, 166, 168, 180, 181, 183, 185, 224, 225, 228, 232, 234, 235, 236, 241, 247, 248, 251, 255, 257, 259, 260, 261, 266, 271, 273, 274, 275, 276, 279, 281, 283, 319, 320, 321, 343, 406, 410, 413, 422, 451, 463, 464, 468, 476, 480, 481, 486, 494, 508, 510, 536, 607], "determinist": 395, "deti": [83, 105, 110, 408, 518], "detx": [83, 105, 110, 408, 518], "dev": [11, 16, 82, 395, 397, 398, 411, 422, 425, 427, 428, 465, 468, 470, 474, 475, 476, 477, 478, 480, 481, 483, 484, 485, 486, 487, 488, 489, 494, 495, 496, 497, 501, 502, 503, 505, 508, 509, 510, 511, 512, 515, 517, 518, 519, 520, 521, 529, 530, 532, 571, 574, 603, 604], "dev1474": [106, 127, 435, 468, 470, 474, 475, 476, 477, 478, 480, 481, 483, 484, 485, 486, 487, 488, 489, 494, 495, 496, 497, 501, 502, 503, 505, 508, 509, 510, 511, 512, 515, 517, 518, 519, 520, 521, 529, 530, 532, 563, 564, 565, 566, 567, 568, 569, 570, 571, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 596, 597, 598, 599, 600, 601, 602, 603, 604], "develop": [396, 400, 401, 403, 404, 405, 406, 408, 409, 411, 412, 414, 415, 416, 417, 418, 419, 421, 422, 424, 426, 427, 428, 431, 435, 437, 450, 457, 458, 459, 518], "deviat": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 42, 129, 198, 210, 215, 239, 298, 302, 505, 515], "devoid": [474, 549], "devop": 422, "devot": [471, 524], "dex": 319, "df": [88, 92, 123, 139, 148, 312, 314, 486, 505, 611], "dftnhiwi": 499, "diagnosi": 404, "diagnost": 411, "diagon": [154, 155, 156, 320, 321, 413, 424, 519], "diagram": 613, "dialog": [430, 432], "diamet": [196, 197, 198, 470], "diamond": 514, "dict": [15, 16, 19, 20, 26, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 68, 69, 82, 83, 84, 86, 87, 88, 89, 90, 91, 92, 93, 94, 97, 100, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 116, 121, 123, 126, 127, 128, 129, 130, 131, 133, 134, 137, 139, 140, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 161, 162, 164, 165, 166, 167, 168, 169, 170, 171, 172, 182, 195, 196, 197, 198, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 213, 214, 215, 217, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 234, 235, 236, 237, 238, 240, 241, 242, 243, 244, 245, 246, 247, 248, 251, 254, 255, 256, 257, 258, 259, 260, 261, 262, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 278, 279, 280, 281, 282, 283, 284, 288, 293, 294, 295, 298, 299, 303, 317, 320, 321, 333, 341, 342, 357, 360, 361, 362, 365, 375, 376, 377, 378, 382, 383, 384, 388, 389, 390, 391, 392, 395, 410, 412, 417, 420, 423, 442, 446, 449, 457, 475, 483, 494, 495, 499, 502, 505, 509, 514, 529, 530, 558, 564, 574], "dict_kei": [469, 513, 574], "dictionari": [15, 16, 19, 20, 26, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 69, 84, 87, 88, 89, 90, 91, 92, 93, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 116, 123, 126, 127, 128, 129, 130, 133, 134, 137, 139, 140, 147, 148, 151, 152, 153, 154, 155, 156, 157, 158, 159, 161, 162, 164, 166, 167, 168, 169, 170, 171, 172, 182, 195, 196, 197, 198, 200, 201, 203, 204, 205, 206, 208, 209, 210, 214, 215, 217, 218, 220, 224, 225, 226, 227, 228, 229, 230, 231, 232, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 278, 279, 280, 281, 282, 283, 284, 285, 293, 295, 298, 299, 303, 320, 321, 331, 357, 360, 361, 362, 365, 375, 378, 389, 396, 412, 414, 415, 420, 423, 424, 474, 476, 483, 505, 507, 513, 514, 515, 604], "dictionnari": [230, 254, 388, 425, 513], "did": [77, 223, 402, 409, 414, 416, 417, 419, 422, 440, 468, 477, 480, 483, 485, 492, 496, 505, 515, 518], "didn": [83, 89, 402, 405, 409, 412, 534], "diemand": 24, "diff": [103, 104, 107, 111, 112, 395, 398, 403, 407, 483, 492, 530], "diff_flux": 501, "diff_flux_point": [103, 503], "differ": [26, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 46, 59, 67, 77, 80, 86, 88, 92, 95, 101, 103, 123, 125, 126, 128, 129, 130, 133, 134, 135, 137, 145, 151, 152, 153, 154, 157, 159, 161, 164, 169, 179, 197, 198, 200, 203, 204, 205, 206, 208, 209, 210, 220, 239, 249, 285, 293, 294, 295, 299, 320, 321, 351, 355, 369, 370, 386, 395, 396, 398, 400, 401, 403, 405, 406, 407, 408, 409, 411, 412, 413, 415, 416, 417, 418, 419, 420, 422, 424, 425, 428, 430, 432, 441, 444, 446, 456, 459, 460, 461, 463, 465, 468, 474, 475, 476, 478, 480, 483, 486, 487, 488, 489, 494, 496, 499, 500, 502, 503, 504, 505, 506, 508, 510, 511, 512, 513, 514, 515, 518, 519, 520, 522, 524, 529, 531, 532, 534, 542, 544, 546, 551, 558, 559, 565, 566, 607, 609, 610, 611], "different": 403, "differenti": [19, 20, 23, 26, 79, 126, 128, 136, 197, 198, 200, 202, 206, 209, 210, 224, 225, 228, 232, 234, 235, 236, 241, 247, 248, 251, 255, 257, 259, 260, 261, 266, 270, 271, 273, 274, 275, 276, 279, 283, 286, 287, 320, 321, 348, 401, 406, 413, 420, 456, 509, 512, 519, 532, 544, 608], "differential_flux": 128, "differential_typ": [320, 321], "difficult": [406, 409, 428], "diffus": [68, 197, 198, 200, 206, 209, 210, 288, 395, 411, 414, 458, 459, 483, 487, 502, 509, 511, 512, 518, 606], "diffuse_cub": 512, "diffuse_galactic_fermi": 511, "diffuse_iem": [511, 519], "diffuse_iso": [511, 519], "diffuse_model": 288, "difrsp0": [519, 532], "difrsp1": [519, 532], "difrsp2": [519, 532], "difrsp3": [519, 532], "difrsp4": [519, 532], "digit": 395, "dilat": [210, 449], "dim": [164, 350, 454, 455, 485, 608], "dimens": [46, 53, 104, 107, 111, 112, 126, 128, 151, 152, 153, 154, 155, 156, 157, 158, 159, 161, 162, 164, 166, 167, 168, 169, 170, 179, 195, 196, 197, 198, 200, 201, 203, 205, 206, 208, 209, 210, 222, 278, 279, 282, 319, 320, 321, 333, 388, 411, 425, 446, 457, 459, 463, 465, 505, 506, 507, 509, 512, 513, 524, 542, 558, 559, 565], "dimension": [31, 32, 37, 68, 88, 92, 121, 195, 196, 197, 198, 200, 203, 205, 206, 208, 209, 210, 222, 239, 240, 243, 289, 320, 321, 334, 347, 401, 409, 424, 426, 430, 455, 478, 504, 505, 507, 509, 512, 532, 550, 552, 558, 559, 607, 608], "dimensionless": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 159, 275, 276, 318, 320, 321, 489, 512], "dimitri": [449, 451], "dipol": [51, 54, 551], "dirac": 19, "direct": [92, 106, 169, 187, 188, 191, 193, 202, 222, 231, 240, 243, 325, 328, 396, 401, 407, 409, 414, 417, 420, 423, 449, 467, 471, 473, 477, 508, 524, 543, 551, 552, 554, 555, 564, 607, 608], "directional_offset_bi": [468, 477], "directli": [13, 16, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 56, 69, 83, 84, 87, 88, 91, 92, 106, 127, 138, 144, 147, 148, 169, 184, 197, 198, 200, 206, 209, 210, 278, 280, 282, 395, 397, 398, 400, 402, 403, 406, 407, 408, 409, 413, 416, 423, 425, 426, 430, 432, 433, 437, 439, 440, 441, 443, 457, 464, 472, 474, 475, 477, 483, 484, 485, 488, 489, 492, 495, 496, 500, 502, 503, 504, 505, 507, 509, 510, 511, 512, 514, 518, 519, 529, 530, 532, 534, 542, 546, 551, 555, 558, 584, 611], "directori": [11, 82, 88, 395, 411, 475, 486, 513, 521, 529, 532, 543, 546, 609], "dirk": [440, 454, 456], "disabl": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 449], "disadvantag": 609, "disagr": 400, "disambigu": 400, "disc": [480, 481, 483, 488], "discard": [423, 499, 502], "discard_on_copi": [88, 92], "discarded_ind": 502, "discarded_spati": 502, "discarded_t": 502, "disccus": 404, "discourag": 395, "discov": [222, 513, 609], "discoveri": [35, 513], "discrep": 474, "discret": [92, 140, 307, 313, 408, 465, 505, 558], "discrete_correl": 140, "discrete_correlation_dict": 140, "discrete_correlation_err": [140, 307], "discuss": [13, 59, 283, 395, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 428, 435, 457, 513, 515, 521, 535, 613], "disjoint": 409, "disk": [82, 109, 112, 156, 159, 198, 208, 210, 231, 243, 245, 372, 394, 395, 405, 406, 407, 411, 415, 419, 420, 425, 465, 467, 468, 474, 483, 484, 509, 510, 511, 512, 513, 557, 560, 562, 566, 570, 572], "disk_inc": 409, "diskspatialmodel": [72, 264, 419, 442, 463, 511, 512, 564], "dismiss": 101, "disp": [550, 551], "dispatch": 406, "dispers": [82, 89, 102, 104, 105, 107, 109, 110, 111, 112, 113, 116, 118, 154, 155, 156, 159, 177, 183, 184, 187, 188, 191, 395, 401, 406, 407, 408, 443, 445, 455, 456, 457, 459, 468, 470, 474, 475, 483, 487, 508, 520, 521, 529, 530, 542, 551, 554, 608], "displac": 325, "displai": [11, 15, 82, 88, 92, 121, 133, 137, 215, 303, 342, 388, 392, 395, 396, 415, 428, 430, 432, 449, 452, 463, 464, 468, 470, 474, 475, 476, 477, 478, 480, 483, 484, 485, 486, 487, 489, 492, 494, 496, 497, 502, 503, 504, 505, 509, 511, 512, 518, 519, 521, 546, 609], "display_length": [88, 92], "disrupt": [438, 439], "dissolv": 442, "dist": [344, 428], "distanc": [17, 18, 21, 22, 23, 24, 25, 27, 41, 46, 47, 130, 145, 146, 205, 255, 282, 313, 320, 321, 324, 350, 409, 455, 462, 476, 478, 489, 501, 502, 505, 517, 540, 555, 584], "distance_gc": [17, 18, 21, 22, 24, 25, 27, 501], "distance_max": [46, 47, 350, 502], "distance_min": [47, 350, 502], "distance_refer": 502, "distibut": [138, 147], "distinct": [410, 411, 417, 520, 612], "distinguish": [295, 299, 420, 423, 468, 509], "distort": [409, 441], "distrib": [103, 138, 147, 474], "distribut": [13, 19, 20, 26, 28, 29, 30, 31, 32, 33, 35, 36, 37, 39, 40, 42, 45, 46, 83, 103, 110, 135, 138, 139, 147, 148, 159, 194, 220, 222, 224, 225, 228, 232, 234, 235, 236, 239, 241, 247, 248, 249, 251, 255, 257, 259, 260, 261, 266, 271, 273, 274, 275, 276, 279, 283, 285, 295, 296, 299, 312, 314, 343, 344, 348, 388, 391, 393, 394, 395, 399, 400, 403, 408, 413, 414, 418, 421, 422, 427, 428, 431, 442, 451, 457, 463, 464, 468, 474, 476, 477, 481, 483, 487, 489, 492, 494, 505, 511, 515, 517, 518, 532, 534, 546, 550, 551, 553, 559, 568, 584, 607, 608, 610, 611], "divers": 420, "divid": [196, 202, 207, 417, 420, 476, 487, 514, 520, 521], "divis": 202, "djangoproject": 416, "djuvsland": 464, "dl3": [6, 16, 82, 83, 86, 89, 92, 97, 151, 152, 153, 154, 157, 158, 159, 161, 164, 166, 168, 169, 177, 183, 201, 202, 317, 318, 396, 401, 403, 404, 406, 416, 423, 430, 434, 440, 443, 445, 451, 460, 464, 470, 474, 475, 476, 480, 481, 483, 494, 495, 499, 508, 510, 514, 517, 527, 529, 530, 542, 546, 548, 549, 550, 552, 553, 555, 556, 607, 608], "dl4": [100, 103, 104, 107, 111, 112, 119, 121, 125, 129, 133, 137, 147, 148, 162, 183, 396, 401, 423, 430, 445, 496, 503, 504, 505, 546, 551, 607, 608], "dl5": [121, 125, 129, 133, 137, 423, 464, 496, 504, 505, 607, 608], "dl6": [121, 125, 129, 133, 137, 504, 607, 608], "dlogz": 513, "dm": [17, 19, 20, 21, 22, 24, 25, 26, 27, 415, 445, 460, 501, 512], "dm_exampl": 534, "dmfitfunct": 534, "dmpipe": 534, "dmprofil": [17, 21, 22, 23, 24, 25, 27, 501, 534], "dmsky": 534, "dn": [236, 248, 275, 501, 608], "dnde": [19, 20, 26, 67, 126, 127, 128, 136, 138, 140, 141, 142, 143, 147, 224, 225, 228, 232, 234, 235, 236, 241, 247, 248, 251, 255, 257, 259, 260, 261, 266, 271, 273, 274, 275, 276, 279, 283, 286, 420, 449, 472, 474, 475, 485, 489, 502, 503, 504, 512, 519, 529, 532, 544], "dnde_cu": 287, "dnde_err": [126, 128, 138, 147, 544], "dnde_errn": [19, 20, 26, 67, 126, 128, 138, 147, 224, 225, 228, 232, 234, 235, 236, 241, 247, 248, 251, 255, 257, 259, 260, 261, 266, 271, 273, 274, 275, 276, 279, 283, 502], "dnde_errp": [19, 20, 26, 67, 126, 128, 138, 147, 224, 225, 228, 232, 234, 235, 236, 241, 247, 248, 251, 255, 257, 259, 260, 261, 266, 271, 273, 274, 275, 276, 279, 283, 502], "dnde_ref": [126, 128, 420], "dnde_scan_axi": [138, 147], "dnde_scan_valu": [126, 128], "dnde_ul": [67, 126, 128, 138, 147, 502, 532], "do": [13, 16, 19, 20, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 83, 84, 87, 91, 96, 101, 106, 127, 154, 165, 218, 224, 227, 228, 231, 232, 234, 235, 236, 237, 240, 241, 242, 243, 244, 245, 246, 247, 248, 251, 258, 259, 260, 261, 262, 266, 267, 268, 269, 271, 274, 275, 276, 281, 282, 320, 321, 345, 388, 396, 398, 400, 401, 402, 405, 409, 410, 411, 412, 413, 414, 415, 416, 419, 420, 423, 425, 427, 428, 430, 432, 443, 469, 472, 474, 475, 477, 478, 480, 481, 483, 485, 486, 487, 492, 495, 496, 497, 499, 501, 502, 503, 505, 508, 509, 510, 511, 512, 513, 518, 519, 529, 530, 532, 542, 546, 553, 558, 606, 609, 612, 613], "do_someth": 395, "doc": [11, 13, 16, 83, 88, 92, 154, 196, 202, 205, 208, 215, 222, 230, 254, 319, 358, 395, 396, 398, 400, 403, 409, 411, 412, 414, 416, 425, 427, 434, 435, 437, 443, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 468, 470, 474, 475, 476, 477, 478, 480, 481, 483, 484, 485, 486, 487, 488, 489, 492, 494, 495, 496, 497, 499, 501, 502, 503, 505, 508, 509, 510, 511, 512, 513, 515, 517, 518, 519, 520, 521, 529, 530, 532, 559, 571, 574, 597, 603, 604, 608, 609, 613], "docker": [412, 426, 428], "dockerfil": [403, 427, 428], "docstr": [395, 416, 422, 449, 450, 451, 453, 456, 462, 463, 464, 465, 483, 512], "doctest": [165, 383, 396], "document": [11, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 50, 51, 52, 53, 54, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 121, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 164, 165, 166, 167, 168, 169, 170, 172, 173, 174, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 278, 279, 280, 281, 282, 283, 284, 285, 295, 296, 297, 299, 320, 321, 329, 333, 343, 368, 382, 395, 397, 399, 400, 402, 403, 405, 409, 411, 412, 414, 415, 417, 419, 421, 422, 425, 428, 429, 434, 435, 436, 443, 445, 446, 449, 451, 452, 453, 455, 456, 457, 458, 459, 460, 461, 462, 463, 509, 511, 518, 520, 521, 546, 551, 557, 558, 559, 609], "doe": [16, 84, 87, 88, 91, 92, 106, 127, 133, 140, 157, 167, 170, 204, 245, 281, 293, 320, 321, 395, 396, 402, 403, 405, 407, 409, 410, 412, 414, 415, 416, 419, 420, 422, 423, 425, 440, 449, 460, 468, 469, 474, 477, 480, 483, 485, 486, 502, 505, 507, 508, 509, 510, 520, 534, 546, 555, 609], "doesn": [69, 395, 396, 400, 402, 403, 409, 412, 413, 416, 465, 518, 519, 609], "dof": 611, "doi": [139, 312, 314, 422], "domain": [197, 198, 200, 206, 209, 210, 395, 409, 426, 500], "domenico": 455, "dominguez": [232, 233, 419, 469, 574], "dominquez": 232, "don": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 88, 92, 154, 394, 395, 398, 400, 402, 403, 412, 423, 428, 470, 474, 480, 485, 494, 510, 512, 513, 607, 609, 612, 613], "donath": [404, 406, 407, 408, 409, 410, 411, 412, 413, 414, 416, 417, 418, 419, 420, 421, 426, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465], "done": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 88, 92, 126, 129, 155, 156, 162, 167, 170, 388, 395, 396, 398, 400, 401, 402, 406, 408, 409, 410, 411, 413, 414, 415, 416, 419, 420, 422, 426, 427, 430, 434, 458, 463, 470, 477, 483, 484, 488, 489, 492, 496, 497, 503, 504, 508, 509, 512, 513, 514, 542, 546, 554, 555, 559, 593, 611, 613], "door": 415, "dos2unix": 395, "dot": [50, 51, 54, 111, 112, 197, 198, 200, 206, 209, 210, 463], "doubl": [27, 125, 140, 141, 303, 422, 426, 456, 464], "doubling_dict": 303, "down": [50, 51, 54, 137, 396, 400, 402, 405, 409, 414, 427, 441, 503, 513, 519, 612], "downgrad": [196, 394], "download": [67, 95, 103, 128, 396, 398, 403, 411, 412, 416, 423, 427, 429, 430, 432, 434, 438, 439, 441, 442, 449, 458, 459, 460, 468, 469, 470, 472, 474, 475, 476, 477, 478, 480, 481, 483, 484, 485, 486, 487, 488, 489, 492, 494, 495, 496, 497, 499, 500, 501, 502, 503, 504, 505, 507, 508, 509, 510, 511, 512, 513, 514, 515, 517, 518, 519, 520, 521, 524, 527, 529, 530, 532, 560, 563, 564, 565, 566, 567, 568, 569, 570, 571, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 596, 597, 598, 599, 600, 601, 602, 603, 604, 609], "downsampl": [104, 107, 111, 112, 137, 151, 152, 153, 154, 155, 156, 157, 158, 159, 161, 162, 164, 166, 167, 168, 169, 170, 195, 196, 197, 198, 199, 200, 201, 202, 205, 206, 207, 208, 209, 210, 440, 446, 455, 465, 503, 504], "downsampled_energi": 503, "downsampling_factor": [137, 485], "downward": [295, 299], "dozen": 395, "dpp": 422, "dr": [17, 18, 21, 22, 24, 25, 27, 566], "dr1": [16, 65, 82, 83, 86, 89, 92, 97, 159, 177, 276, 317, 318, 396, 403, 416, 434, 467, 470, 474, 475, 481, 483, 495, 499, 508, 514, 517, 527, 529, 530, 543, 546, 548, 549, 550, 552, 553, 555, 556, 560, 573, 594], "dr2": [65, 276, 449, 467, 560, 573, 594], "dr3": [65, 275, 467, 512, 560, 573, 594], "dr4": [65, 464], "draft": [395, 399, 400, 424, 426, 458], "drag": 398, "draw": [33, 198, 343, 408, 426, 515], "drawback": [410, 414], "drawn": [343, 408, 425, 513], "drift": [85, 95, 96, 460, 608], "drive": 411, "driven": [11, 15, 401, 411, 413, 416, 457, 524, 531, 545], "drop": [52, 53, 104, 107, 111, 112, 126, 128, 133, 155, 156, 162, 167, 170, 174, 195, 196, 197, 198, 200, 201, 205, 206, 208, 209, 210, 231, 238, 280, 320, 321, 379, 399, 400, 411, 412, 418, 439, 442, 443, 446, 449, 456, 459, 509, 542], "ds9": [83, 196, 205, 208, 212, 230, 254, 395, 396, 409, 441, 510, 512, 559], "ds9parser": 409, "dss": 405, "dt": [88, 92], "dtime_t": 500, "dtype": [33, 38, 88, 92, 113, 118, 152, 154, 157, 195, 196, 197, 198, 200, 205, 206, 208, 209, 210, 230, 254, 319, 395, 424, 476, 480, 489, 499, 502, 503, 504, 507, 508, 509, 518, 519, 532, 544], "duck": [16, 84, 87, 91, 106, 127], "due": [59, 88, 92, 395, 415, 424, 425, 452, 467, 471, 473, 474, 509, 513, 515, 518, 524, 584, 609], "dummi": [111, 112, 409, 480, 546], "dump": [16, 84, 87, 91, 106, 127, 411], "dumps_kwarg": [16, 84, 87, 91, 106, 127], "duplic": [88, 92, 101, 155, 395, 396, 401, 416, 417, 420, 446, 449, 465], "durat": [83, 86, 89, 95, 477, 487, 492, 495, 499, 518, 543, 546], "dure": [16, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 50, 52, 53, 83, 84, 85, 87, 89, 91, 96, 104, 106, 107, 111, 112, 127, 174, 177, 293, 395, 396, 403, 407, 411, 414, 415, 416, 418, 421, 422, 423, 424, 426, 427, 428, 443, 446, 463, 464, 475, 476, 487, 494, 495, 499, 503, 508, 510, 513, 515, 530, 542, 543, 551, 608, 612], "dust": 232, "duti": 422, "dwarf": [17, 534], "dx": [33, 325], "dy": [33, 325], "dynam": [22, 392, 543], "dynesti": 425, "dz": 325, "e": [13, 16, 19, 20, 26, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 46, 47, 50, 51, 54, 59, 67, 68, 82, 83, 84, 85, 86, 87, 88, 91, 92, 96, 106, 116, 127, 128, 129, 133, 135, 145, 154, 155, 156, 157, 159, 183, 190, 196, 197, 198, 200, 202, 204, 206, 208, 209, 210, 215, 218, 220, 224, 225, 227, 228, 231, 232, 234, 235, 236, 237, 240, 241, 242, 243, 244, 245, 246, 247, 248, 251, 255, 257, 258, 259, 260, 261, 262, 266, 267, 268, 269, 271, 273, 274, 275, 276, 279, 281, 282, 283, 295, 299, 303, 319, 320, 321, 323, 327, 353, 361, 372, 384, 385, 390, 394, 395, 396, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 418, 419, 420, 421, 422, 423, 425, 426, 427, 428, 430, 431, 432, 434, 435, 437, 438, 439, 443, 449, 450, 451, 455, 457, 458, 459, 463, 465, 467, 469, 470, 472, 474, 475, 476, 477, 481, 484, 485, 486, 487, 488, 489, 492, 494, 495, 497, 499, 500, 501, 502, 503, 505, 508, 509, 510, 511, 512, 513, 514, 515, 517, 518, 519, 520, 522, 523, 524, 527, 529, 530, 532, 534, 541, 542, 543, 544, 546, 550, 551, 556, 557, 558, 564, 565, 566, 574, 575, 577, 578, 579, 581, 582, 586, 587, 589, 590, 591, 592, 603, 606, 608, 609, 610, 611, 612, 613, 614], "e2dnd": [19, 20, 26, 126, 127, 128, 136, 140, 141, 142, 143, 224, 225, 228, 232, 234, 235, 236, 241, 247, 248, 251, 255, 257, 259, 260, 261, 266, 271, 273, 274, 275, 276, 279, 283, 420, 449, 456, 468, 469, 472, 474, 475, 476, 484, 502, 504, 530, 532, 544, 546, 584], "e2dnde_err": [126, 128], "e2dnde_errn": [126, 128, 502], "e2dnde_errp": [126, 128, 502], "e2dnde_ref": [126, 128], "e2dnde_ul": [126, 128, 502], "e501": [19, 20, 154, 190, 201, 202, 208, 392], "e_": [19, 20, 26, 50, 52, 53, 154, 224, 225, 228, 232, 234, 235, 236, 241, 247, 248, 251, 255, 257, 259, 260, 261, 266, 271, 273, 274, 275, 276, 279, 283, 542, 548, 550, 551, 552, 575, 579, 587, 589, 590], "e_0": [234, 235, 236, 247, 248, 260, 261, 271, 274, 275, 276, 578, 579, 582, 584, 586, 589, 590, 591, 592], "e_b": 419, "e_cut": [67, 502], "e_cutoff": 584, "e_d": [260, 261], "e_edg": 446, "e_max": [67, 128, 136, 420, 468, 474, 475, 476, 488, 494, 502, 503, 504, 505, 509, 515, 532, 544], "e_min": [67, 128, 136, 420, 468, 474, 475, 476, 488, 494, 502, 503, 504, 505, 509, 515, 519, 532, 544], "e_peak": [236, 248, 275], "e_reco": [113, 118, 154, 159, 497, 608], "e_ref": [67, 128, 136, 420, 468, 474, 475, 494, 502, 504, 529, 532, 544], "e_refe_mine_maxdndednde_errpdnde_errndnde_ulsqrt_tsis_ul": 472, "e_refe_mine_maxdndednde_errtssqrt_tsnprednpred_excessstatstat_nullcountssuccess": 485, "e_sn": [43, 44, 52], "e_tru": [113, 118, 159, 497, 519, 608], "each": [11, 19, 20, 26, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 67, 77, 80, 86, 88, 92, 93, 101, 104, 107, 110, 111, 112, 117, 120, 121, 123, 125, 126, 128, 129, 133, 136, 137, 139, 141, 142, 143, 145, 147, 148, 151, 152, 153, 154, 155, 156, 157, 158, 159, 161, 162, 164, 165, 166, 167, 168, 169, 170, 173, 178, 179, 194, 195, 196, 197, 198, 200, 201, 202, 204, 205, 206, 207, 208, 209, 210, 215, 222, 224, 225, 227, 228, 230, 231, 232, 234, 235, 236, 240, 241, 243, 247, 248, 251, 254, 255, 256, 257, 259, 260, 261, 266, 267, 268, 271, 272, 273, 274, 275, 276, 278, 279, 282, 283, 307, 317, 320, 321, 358, 384, 393, 395, 398, 400, 401, 403, 404, 405, 407, 408, 409, 410, 411, 412, 415, 416, 417, 420, 422, 425, 426, 428, 429, 436, 443, 446, 457, 460, 463, 465, 470, 477, 478, 481, 483, 484, 485, 487, 488, 494, 495, 496, 497, 499, 501, 502, 503, 505, 507, 508, 509, 511, 512, 514, 515, 520, 521, 524, 530, 535, 541, 542, 543, 546, 550, 551, 552, 558, 559, 567, 584, 585, 608, 609, 612, 613], "eager": 411, "earli": [409, 414, 416, 518], "earlier": [402, 422], "earth": [41, 89, 91, 286, 519], "earth_azimuth_angl": [519, 532], "earthloc": [83, 85, 89, 91, 95, 98, 320, 331, 423], "earthlocationattribut": 320, "eas": 426, "easi": [395, 396, 401, 406, 409, 410, 411, 414, 416, 420, 423, 426, 443, 449, 457, 509, 510, 519, 543, 606, 607, 609, 613], "easier": [395, 401, 406, 414, 420, 457, 460, 518], "easiest": 431, "easili": [88, 92, 128, 401, 406, 407, 411, 415, 423, 425, 426, 430, 431, 494, 495, 505, 507, 509, 519, 532, 609], "ebel": [121, 478], "ebl": [232, 233, 283, 413, 419, 443, 446, 456, 463, 465, 467, 471, 473, 512, 524, 560, 573, 594], "ebl_data_builtin": [469, 574], "ebl_dominguez11": [233, 574], "ebl_franceschini": [233, 283], "ebl_franceschini_2017": 233, "ebl_saldana": 233, "eblabsorbtionnormspectralmodel": 419, "eblabsorptionnormspectralmodel": [265, 419, 446, 469, 512, 574], "ebltabl": 469, "ebound": [154, 202, 559], "ebreak": [224, 271, 575, 589], "ec": [497, 512, 559], "eccentr": [231, 240, 243, 564, 565, 566], "echo": 609, "eco": 422, "ecosystem": 423, "ecpl": [67, 80, 234, 235, 236, 293, 419, 455, 472, 502, 512], "ecpl_norm": 580, "ecsv": [59, 63, 128, 407], "ecut": [234, 274, 579, 590], "edelson": [140, 304, 307, 500], "edg": [104, 107, 111, 112, 121, 123, 125, 129, 132, 133, 137, 150, 151, 152, 153, 154, 155, 157, 158, 159, 161, 164, 166, 168, 169, 177, 178, 183, 194, 195, 196, 197, 198, 199, 200, 201, 202, 205, 206, 207, 208, 209, 210, 231, 388, 409, 420, 440, 446, 449, 468, 469, 474, 484, 485, 486, 487, 488, 500, 504, 507, 508, 509, 510, 519, 520, 529, 553, 564], "edge_max": [195, 196, 205, 208, 564], "edge_min": [195, 196, 205, 208, 564], "edge_width": [231, 511, 564], "edgecolor": [392, 474, 476, 478, 485, 486, 489, 497, 501, 555, 564, 565, 566], "edges_max": [199, 201, 202, 207, 509], "edges_min": [199, 201, 202, 207, 509], "edisp": [16, 82, 88, 89, 97, 104, 107, 108, 111, 112, 113, 118, 154, 155, 156, 159, 163, 177, 183, 184, 187, 188, 270, 317, 318, 396, 405, 406, 407, 408, 411, 444, 446, 449, 455, 456, 457, 465, 468, 470, 474, 475, 476, 477, 478, 480, 481, 483, 485, 487, 488, 492, 495, 496, 499, 503, 508, 514, 518, 519, 520, 521, 529, 542, 550, 608], "edisp2d": [156, 159, 396], "edisp2d_ax": 159, "edisp3d": 507, "edisp_": 542, "edisp_2d": [82, 88, 159, 518, 521], "edisp_3d": 507, "edisp_bin": 102, "edisp_ev": 507, "edisp_fil": 102, "edisp_kernel": [154, 503, 550], "edisp_kernel_map": [155, 520], "edisp_map": [105, 110, 155, 156, 507, 550], "edisp_new": 507, "edispkernel": [107, 113, 118, 155, 159, 187, 444, 550], "edispkernelmap": [104, 107, 108, 111, 112, 116, 156, 162, 163, 167, 170, 177, 184, 187, 445, 446, 478, 508, 519, 546, 550], "edispmap": [104, 105, 107, 110, 111, 112, 162, 163, 167, 170, 177, 184, 187, 188, 407, 408, 417, 439, 442, 443, 444, 446, 449, 507, 542, 550], "edit": [396, 398, 400, 402, 403, 404, 411, 416, 427, 428, 431, 529, 609], "editor": [396, 422, 475, 529, 609], "editori": 422, "edm": 505, "edu": [33, 38, 50, 52, 53, 58, 60, 61, 62, 83, 89, 157, 196, 205, 208, 215, 230, 251, 254, 286, 287, 416, 505, 559], "eemin": 584, "ef8gkke": 508, "eff": [157, 513, 548, 551, 565, 566], "eff_area": 507, "effarea": 507, "effect": [16, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 45, 46, 82, 84, 87, 88, 89, 91, 92, 106, 107, 109, 127, 156, 157, 183, 184, 189, 191, 192, 205, 222, 230, 254, 385, 386, 395, 400, 405, 406, 408, 409, 420, 453, 455, 474, 487, 489, 494, 500, 513, 515, 520, 521, 524, 529, 551, 559, 565, 566, 608], "effective_area": [163, 408, 518], "effective_livetim": 508, "effective_times_src": 508, "effectivearea3d": 507, "effectiveareat": [407, 437, 449, 453], "effectiveareatable2d": [89, 156, 163, 169, 191, 401, 453, 507, 518, 548], "effici": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 107, 112, 121, 222, 400, 406, 407, 408, 409, 410, 418, 472, 513, 514, 551, 556, 611], "effort": [402, 404, 411, 412, 414, 415, 416, 419, 426, 440, 542, 551], "eflux": [19, 20, 26, 126, 127, 128, 140, 141, 142, 143, 224, 225, 228, 232, 234, 235, 236, 241, 247, 248, 251, 255, 257, 259, 260, 261, 266, 271, 273, 274, 275, 276, 279, 283, 420, 449, 489, 512, 544], "eflux_err": [126, 128, 420], "eflux_errn": [126, 128], "eflux_errp": [126, 128], "eflux_ref": [126, 128], "eflux_ul": [126, 128], "eg": [395, 465, 469, 483, 492, 496, 499, 503, 507, 511, 512, 515], "egal": 518, "egg": 431, "einasto": [21, 534], "either": [67, 82, 83, 88, 89, 92, 96, 112, 126, 128, 159, 174, 195, 196, 197, 198, 200, 202, 203, 204, 205, 206, 208, 209, 210, 245, 298, 319, 320, 321, 351, 384, 396, 398, 400, 402, 409, 411, 414, 418, 422, 426, 430, 449, 463, 475, 483, 489, 496, 503, 505, 512, 515, 529, 542, 544, 546, 557, 559, 606, 609], "ej": [50, 52, 53], "eject": 52, "ejecta": 52, "el": [26, 501], "elabor": [415, 422, 478], "elaps": [83, 404, 608], "electron": [50, 286, 518, 551, 584], "element": [19, 20, 26, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 88, 92, 93, 101, 104, 107, 111, 112, 126, 128, 151, 152, 153, 154, 155, 156, 157, 158, 159, 161, 162, 164, 166, 167, 168, 169, 170, 195, 196, 197, 198, 200, 201, 203, 205, 206, 208, 209, 210, 224, 225, 226, 227, 228, 229, 230, 231, 232, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 251, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 278, 279, 280, 281, 282, 283, 284, 285, 320, 321, 388, 413, 425, 426, 463, 465, 502, 509, 513, 558], "elementtre": 518, "elev": 410, "elif": [395, 409, 423], "eliot": 415, "elli": [437, 450], "ellips": [231, 409, 559, 564], "ellipseannulusskyregion": [555, 559], "ellipseskyregion": [226, 227, 231, 240, 243, 256, 258, 267, 268, 272, 278, 282, 470, 512, 555], "ellipsoid": 505, "ellipt": [559, 566], "elong": [439, 442, 443, 564, 565], "elpas": 463, "els": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 126, 128, 137, 204, 320, 321, 395, 398, 409, 412, 420, 423, 424, 428, 430, 432, 514, 609, 611], "elsewher": [117, 120], "email": [396, 398, 422, 428], "emax": [102, 123, 133, 259, 287, 480, 486, 587], "emax_fit": 497, "embryon": 411, "emce": [404, 412, 439, 468, 470, 474, 475, 476, 477, 478, 480, 481, 483, 484, 485, 486, 487, 488, 489, 494, 495, 496, 497, 501, 502, 503, 505, 508, 509, 510, 511, 512, 515, 517, 518, 519, 520, 521, 529, 530, 532], "emerg": 405, "emeri": 458, "emin": [102, 123, 133, 259, 287, 480, 486, 587], "emin_fit": 497, "emiss": [52, 68, 141, 401, 406, 410, 474, 481, 483, 484, 487, 511, 518, 519, 542, 551, 556, 584, 606], "emit": [82, 218, 219, 220, 221, 380, 395, 439, 457, 469, 551], "emitt": 474, "emmanoulopoulo": [313, 465], "emphas": 504, "emphasi": 505, "empir": 40, "emploi": 476, "empti": [93, 101, 104, 107, 111, 112, 145, 177, 197, 198, 200, 204, 206, 209, 210, 215, 254, 380, 403, 405, 440, 452, 483, 487, 488, 492, 496, 508, 509, 520, 535, 542, 555, 556, 559], "empty_dataset": 468, "empty_i": 496, "empty_map": [104, 107, 111, 112, 486, 508, 555], "emsembl": 94, "en": [34, 83, 88, 89, 92, 129, 190, 205, 215, 283, 312, 314, 319, 320, 321, 416, 426, 468, 477, 480, 483, 485, 492, 496, 505, 507, 510, 518, 543, 557, 559], "enabl": [404, 407, 415, 431, 440, 449, 458, 468, 477, 480, 483, 485, 492, 496, 518, 553], "encapsul": [208, 420, 557], "enclos": [210, 396, 470, 476, 505, 510], "enclosur": [82, 161, 465, 476, 507], "encod": [16, 84, 87, 88, 91, 92, 106, 127], "encompass": [196, 557, 559], "encount": [16, 84, 87, 91, 106, 127, 171, 430, 431, 432, 433, 476, 481, 487, 496, 499, 521, 597, 609], "encourag": [395, 400, 422, 427, 457], "end": [52, 53, 86, 88, 92, 93, 95, 101, 104, 111, 126, 128, 137, 202, 245, 254, 400, 402, 404, 406, 407, 409, 410, 411, 412, 414, 415, 416, 419, 425, 426, 450, 460, 468, 469, 470, 472, 474, 475, 476, 477, 478, 480, 481, 483, 484, 485, 486, 487, 488, 489, 492, 494, 495, 496, 497, 499, 500, 501, 502, 503, 504, 505, 507, 508, 509, 510, 511, 512, 513, 514, 515, 517, 518, 519, 520, 521, 527, 529, 530, 532, 563, 564, 565, 566, 567, 568, 569, 570, 571, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 596, 597, 598, 599, 600, 601, 602, 603, 604, 611], "end_po": [130, 354, 489], "endswith": 395, "energet": 487, "energi": [16, 19, 20, 26, 44, 50, 51, 52, 53, 58, 62, 63, 67, 71, 74, 75, 77, 80, 82, 83, 89, 97, 101, 102, 103, 104, 105, 107, 109, 110, 111, 112, 113, 114, 115, 116, 118, 119, 121, 123, 125, 126, 128, 129, 130, 133, 136, 137, 139, 141, 142, 143, 144, 148, 149, 150, 151, 152, 154, 155, 156, 157, 158, 159, 164, 165, 166, 167, 168, 169, 170, 177, 179, 183, 184, 186, 187, 188, 190, 191, 193, 194, 195, 196, 197, 198, 200, 201, 202, 203, 205, 206, 208, 209, 210, 224, 225, 226, 227, 228, 229, 230, 231, 232, 234, 235, 236, 237, 238, 240, 241, 242, 243, 244, 245, 246, 247, 248, 251, 254, 255, 256, 257, 258, 259, 260, 261, 262, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 278, 279, 280, 281, 282, 283, 284, 287, 289, 291, 390, 391, 395, 401, 404, 406, 407, 408, 409, 410, 411, 413, 414, 418, 420, 424, 426, 430, 434, 438, 439, 440, 441, 443, 444, 445, 446, 448, 449, 451, 454, 455, 456, 457, 458, 459, 460, 461, 463, 464, 465, 467, 469, 470, 471, 473, 474, 475, 477, 478, 480, 481, 483, 484, 485, 487, 489, 490, 491, 492, 494, 495, 496, 497, 499, 502, 503, 504, 508, 509, 520, 521, 524, 529, 530, 532, 541, 542, 543, 546, 551, 553, 554, 555, 557, 558, 559, 567, 574, 580, 583, 585, 588, 593, 604, 607, 608, 610], "energy_axes_are_align": 101, "energy_axi": [19, 20, 26, 104, 107, 111, 112, 113, 114, 115, 118, 126, 128, 154, 155, 156, 159, 167, 170, 177, 195, 196, 197, 198, 200, 201, 205, 206, 208, 209, 210, 224, 225, 228, 232, 234, 235, 236, 241, 247, 248, 251, 255, 257, 259, 260, 261, 266, 271, 273, 274, 275, 276, 279, 283, 420, 468, 470, 474, 476, 477, 478, 481, 485, 487, 488, 495, 496, 499, 503, 507, 508, 509, 512, 519, 520, 530, 550, 553, 555, 556, 558, 559], "energy_axis_new": 503, "energy_axis_tru": [104, 107, 111, 112, 113, 114, 115, 116, 118, 119, 154, 155, 156, 157, 159, 165, 167, 177, 396, 443, 468, 470, 474, 476, 477, 478, 481, 485, 487, 488, 492, 495, 496, 497, 499, 503, 507, 508, 519, 520, 530, 550, 553, 555, 556], "energy_bin": 411, "energy_bin_per_decade_max": [114, 115], "energy_bound": [19, 20, 26, 224, 225, 228, 232, 234, 235, 236, 241, 247, 248, 251, 255, 257, 259, 260, 261, 266, 271, 273, 274, 275, 276, 279, 283, 409, 449, 469, 472, 474, 476, 483, 484, 497, 501, 502, 505, 512, 519, 530, 532, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 593], "energy_cent": 280, "energy_column": 420, "energy_depend": [123, 486], "energy_dependent_estim": [467, 486, 491], "energy_edg": [16, 121, 123, 125, 129, 130, 133, 137, 145, 146, 150, 194, 202, 341, 420, 469, 474, 475, 478, 480, 481, 483, 484, 485, 486, 489, 494, 495, 496, 497, 504, 517, 520, 529, 530, 544], "energy_estim": 520, "energy_flux": [19, 20, 26, 224, 225, 228, 232, 234, 235, 236, 241, 247, 248, 251, 255, 257, 259, 260, 261, 266, 271, 273, 274, 275, 276, 279, 283, 512, 532], "energy_flux_errn": [19, 20, 26, 224, 225, 228, 232, 234, 235, 236, 241, 247, 248, 251, 255, 257, 259, 260, 261, 266, 271, 273, 274, 275, 276, 279, 283], "energy_flux_error": [19, 20, 26, 224, 225, 228, 232, 234, 235, 236, 241, 247, 248, 251, 255, 257, 259, 260, 261, 266, 271, 273, 274, 275, 276, 279, 283], "energy_flux_errp": [19, 20, 26, 224, 225, 228, 232, 234, 235, 236, 241, 247, 248, 251, 255, 257, 259, 260, 261, 266, 271, 273, 274, 275, 276, 279, 283], "energy_index": 164, "energy_integr": 51, "energy_logspac": 414, "energy_mask": [195, 196, 205, 208, 445, 476, 483, 497, 503, 505, 510, 515], "energy_max": [19, 20, 26, 83, 101, 104, 107, 111, 112, 126, 128, 129, 130, 133, 154, 195, 196, 202, 205, 208, 224, 225, 228, 232, 234, 235, 236, 241, 247, 248, 251, 255, 257, 259, 260, 261, 266, 271, 273, 274, 275, 276, 279, 280, 283, 289, 409, 411, 483, 488, 497, 499, 501, 503, 508, 512, 532], "energy_min": [19, 20, 26, 52, 53, 83, 101, 104, 107, 111, 112, 126, 128, 129, 130, 133, 154, 195, 196, 202, 205, 208, 224, 225, 228, 232, 234, 235, 236, 241, 247, 248, 251, 255, 257, 259, 260, 261, 266, 271, 273, 274, 275, 276, 279, 280, 283, 289, 409, 411, 483, 488, 497, 499, 501, 503, 508, 512, 532], "energy_nam": [167, 170], "energy_nod": [419, 512], "energy_pow": [19, 20, 26, 128, 224, 225, 228, 232, 234, 235, 236, 241, 247, 248, 251, 255, 257, 259, 260, 261, 266, 271, 273, 274, 275, 276, 279, 283, 291, 474, 483, 497, 505, 532], "energy_rang": [66, 67, 71, 74, 75, 80, 83, 101, 104, 107, 111, 112, 449, 503, 510, 591, 592], "energy_range_fit": [104, 107, 111, 112, 503], "energy_range_saf": [104, 107, 111, 112, 503], "energy_range_tot": [104, 107, 111, 112, 510], "energy_reco": [395, 492], "energy_ref": [126, 128], "energy_resolut": 457, "energy_saf": 411, "energy_tru": [16, 97, 104, 107, 111, 112, 113, 118, 154, 155, 156, 157, 158, 159, 164, 165, 166, 167, 168, 177, 184, 187, 195, 196, 202, 205, 208, 317, 318, 395, 396, 408, 463, 468, 470, 474, 475, 476, 477, 478, 480, 481, 483, 485, 487, 488, 492, 494, 495, 496, 497, 499, 503, 507, 508, 509, 510, 512, 514, 518, 519, 520, 529, 530, 550, 551, 553, 555, 556, 558, 559], "energy_true_axi": 154, "energyaxesconfig": 16, "energyaxisconfig": 16, "energybound": 441, "energydependentmorphologi": 486, "energydependentmorphologyestim": [464, 486], "energydependentmultigausspsf": [163, 437, 507, 518, 552], "energydependenttablepsf": [401, 417, 438, 449], "energydispers": [154, 155, 156, 407, 444, 454, 457, 458], "energydispersion2d": [89, 154, 156, 163, 169, 187, 188, 396, 401, 449, 451, 456, 507, 518, 550], "energydispersion3d": 507, "energyoffsetarrai": 454, "energyrangeconfig": 16, "enforc": [16, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 84, 87, 91, 106, 127, 398, 423], "engin": [88, 92], "english": 546, "enhanc": [400, 404, 434], "enlarg": 556, "enough": [408, 410, 411, 425, 474, 477, 481, 492, 494, 510, 553], "enrico": 411, "enrico_config": 411, "enrico_xml": 411, "enriqu": [403, 411, 415, 416, 438, 439, 440, 441, 442, 443, 444, 445, 446, 449, 451, 457, 458, 459], "ensembl": [94, 425, 513], "ensur": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 183, 203, 293, 395, 401, 406, 407, 419, 423, 431, 451, 465, 468, 474, 495, 504, 510, 553, 558, 568], "enter": [219, 221, 230, 254, 434], "entir": [16, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 84, 87, 88, 91, 92, 104, 106, 107, 111, 112, 127, 184, 425, 470, 483, 486, 500, 513], "entiti": 415, "entri": [43, 44, 88, 92, 95, 123, 126, 129, 130, 133, 134, 137, 139, 140, 147, 148, 215, 216, 230, 254, 293, 320, 321, 361, 395, 396, 407, 416, 420, 423, 427, 449, 460, 465, 470, 475, 502, 505, 509, 512, 514, 546, 547, 559], "entry_point": 450, "enum": [96, 160, 336, 337], "enumer": [425, 474, 487, 502, 505, 511, 513, 515], "env": [398, 412, 427, 429, 430, 432, 433, 458, 609], "envelop": [408, 505, 530], "environ": [11, 82, 359, 394, 395, 398, 402, 403, 407, 412, 415, 416, 427, 428, 430, 431, 432, 433, 434, 438, 439, 441, 457, 458, 465, 468, 470, 474, 475, 476, 477, 478, 480, 481, 483, 484, 485, 486, 487, 488, 489, 494, 495, 496, 497, 501, 502, 503, 505, 508, 509, 510, 511, 512, 515, 517, 518, 519, 520, 521, 529, 530, 532, 609], "envis": 404, "envvar": 11, "eosc": 422, "episod": 141, "epjc": [312, 314], "epoch": 377, "epsilon": [19, 20, 26, 224, 225, 228, 232, 234, 235, 236, 241, 247, 248, 251, 255, 257, 259, 260, 261, 266, 271, 273, 274, 275, 276, 279, 283], "epsilon_": [104, 111, 542], "epsilon_k": [104, 111, 542], "epsmch": 505, "eq": [103, 275], "eqcon": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40], "eqnarrai": 419, "equal": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 52, 121, 125, 129, 133, 137, 154, 202, 312, 314, 320, 321, 395, 405, 408, 459, 474, 494, 495, 510, 515, 542, 558, 612], "equat": [27, 275, 276, 304, 396, 569, 570, 575, 578, 579, 581, 582, 586, 587, 589, 590, 591, 592, 611, 612], "equatori": [96, 160, 196, 197, 198, 200, 203, 205, 208, 209, 210, 507], "equival": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 88, 92, 126, 151, 152, 153, 154, 157, 158, 159, 161, 164, 166, 168, 169, 195, 196, 197, 198, 200, 202, 205, 206, 208, 209, 210, 249, 320, 321, 388, 396, 407, 408, 409, 419, 420, 463, 464, 474, 502, 508, 509, 510, 512, 518, 529, 542, 544, 546, 557, 558, 559, 609, 610, 611], "er": [26, 501], "era": 232, "ereco": [154, 507], "erf": [241, 564], "erg": [52, 53, 67, 468, 474, 502, 532, 539, 546], "erlangen": 414, "erod": 210, "eros": [208, 210], "err": 505, "errat": 395, "errlo": [425, 513], "errn": [125, 129, 133, 134, 137, 215, 460, 611], "errn_2sigma": 611, "error": [11, 16, 19, 20, 26, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 67, 68, 79, 84, 86, 87, 91, 103, 104, 106, 107, 111, 112, 123, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 137, 138, 140, 141, 142, 143, 147, 173, 177, 190, 199, 202, 207, 218, 220, 224, 225, 226, 227, 228, 231, 232, 234, 235, 236, 237, 240, 241, 242, 243, 244, 245, 246, 247, 248, 251, 255, 256, 257, 258, 259, 260, 261, 262, 266, 267, 268, 269, 271, 272, 273, 274, 275, 276, 278, 279, 281, 282, 283, 295, 296, 297, 299, 303, 304, 305, 307, 313, 320, 321, 372, 395, 396, 409, 410, 411, 413, 419, 420, 423, 424, 425, 426, 439, 443, 445, 447, 449, 450, 452, 456, 457, 460, 462, 463, 464, 465, 469, 470, 472, 474, 475, 477, 478, 480, 483, 484, 485, 486, 488, 492, 494, 496, 497, 499, 500, 502, 504, 512, 513, 514, 515, 518, 529, 530, 532, 534, 542, 544, 546, 565, 584, 593, 606, 609], "error_callback": 173, "errorbar": [83, 103, 104, 107, 111, 112, 202, 206, 229, 237, 242, 244, 245, 246, 262, 269, 281, 284, 468, 499, 515], "errp": [125, 129, 133, 134, 137, 215, 460, 611], "errp_2sigma": 611, "errup": [425, 513], "escap": [395, 422, 425, 513], "eso": [430, 431], "especi": [88, 92, 141, 398, 402, 405, 409, 416, 417, 428, 449, 455, 470, 485, 495, 502, 509, 515, 518, 519], "ess": [425, 513], "essenti": [320, 321, 405, 407, 410, 443, 444, 445, 489, 509], "establish": [395, 408, 415], "estim": [6, 19, 20, 26, 50, 72, 103, 107, 112, 114, 115, 121, 122, 123, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 172, 178, 179, 180, 186, 195, 196, 205, 208, 210, 215, 218, 220, 224, 225, 227, 228, 231, 232, 234, 235, 236, 237, 240, 241, 242, 243, 244, 245, 246, 247, 248, 251, 255, 256, 257, 258, 259, 260, 261, 262, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 278, 279, 281, 282, 283, 293, 296, 302, 305, 310, 341, 388, 399, 401, 404, 408, 409, 410, 411, 414, 418, 424, 430, 439, 440, 443, 444, 445, 446, 449, 450, 451, 455, 456, 457, 458, 460, 463, 464, 465, 467, 468, 469, 474, 476, 481, 483, 484, 485, 488, 490, 491, 493, 495, 496, 497, 498, 503, 505, 506, 510, 513, 515, 516, 520, 524, 529, 530, 542, 546, 551, 556, 606, 607, 608, 610, 612], "estimate_best_fit": [129, 130, 133, 134], "estimate_count": [129, 130, 133, 134], "estimate_energy_depend": 123, "estimate_errn_errp": [129, 130, 133, 134], "estimate_excess_map": 125, "estimate_exposure_reco_energi": 125, "estimate_fit_input_map": 137, "estimate_flux_default": 137, "estimate_flux_map": 137, "estimate_flux_point": [129, 130, 133], "estimate_kernel": [125, 137], "estimate_map": 121, "estimate_mask_default": [125, 137], "estimate_min_e2dnd": 136, "estimate_min_excess": 136, "estimate_npr": [129, 130, 133, 134], "estimate_npred_excess": [129, 130, 133], "estimate_pad_width": 137, "estimate_scan": [129, 130, 133, 134], "estimate_sensit": [129, 130, 133, 134], "estimate_t": [129, 130, 133, 134], "estimate_time_bin_flux": 133, "estimate_ul": [129, 130, 133, 134], "estimator_result": [139, 147, 148, 497], "et": [17, 19, 20, 21, 22, 24, 25, 26, 27, 28, 33, 35, 39, 40, 57, 59, 63, 103, 121, 135, 140, 141, 157, 232, 304, 305, 307, 312, 313, 314, 396, 405, 425, 465, 478, 486, 500, 513, 534, 608], "eta": [243, 244, 267, 566, 570, 599], "eta_": 50, "eta_b": 50, "eta_rang": [566, 570], "etc": [107, 112, 126, 395, 400, 401, 405, 406, 407, 410, 411, 415, 416, 417, 420, 422, 423, 425, 426, 446, 475, 477, 483, 492, 494, 496, 497, 499, 503, 509, 512, 513, 515, 519, 529, 542, 555, 608], "etru": 507, "eu": 416, "euclidean": 317, "europ": 422, "european": [312, 314], "ev": [504, 507, 546, 584], "ev2": 507, "eval": 513, "evalu": [17, 18, 19, 20, 21, 22, 24, 25, 26, 27, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 68, 88, 92, 104, 107, 110, 111, 112, 151, 152, 153, 154, 157, 158, 159, 161, 164, 166, 168, 169, 177, 184, 190, 194, 205, 216, 217, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 251, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 278, 279, 280, 281, 282, 283, 284, 285, 334, 395, 400, 404, 410, 413, 414, 418, 419, 420, 424, 426, 438, 439, 440, 442, 445, 449, 454, 455, 457, 458, 459, 460, 461, 462, 463, 464, 465, 487, 488, 497, 507, 512, 513, 515, 518, 519, 542, 565, 566, 574, 608, 611], "evaluate_contain": [158, 166, 168, 451], "evaluate_direct": [158, 166, 168], "evaluate_energy_flux": [260, 261], "evaluate_error": [19, 20, 26, 128, 224, 225, 228, 232, 234, 235, 236, 241, 247, 248, 251, 255, 257, 259, 260, 261, 266, 271, 273, 274, 275, 276, 279, 283, 413], "evaluate_geom": [226, 227, 231, 238, 240, 243, 256, 258, 267, 268, 270, 272, 278, 282, 464, 512, 566], "evaluate_integr": [259, 260, 261], "evaluate_paramet": [158, 166, 168], "evaluation_bin_size_min": [226, 227, 231, 240, 243, 256, 258, 267, 268, 270, 272, 278, 282], "evaluation_radiu": [226, 227, 231, 240, 243, 256, 258, 267, 268, 270, 272, 278, 280, 282, 406, 407, 419, 512], "evaluation_region": [226, 227, 231, 240, 243, 256, 258, 267, 268, 270, 272, 278, 282], "even": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 88, 92, 138, 147, 208, 219, 221, 320, 321, 395, 398, 400, 402, 403, 409, 412, 413, 422, 423, 425, 426, 441, 494, 497, 504, 505, 508, 509, 510, 511, 512, 529, 542, 544, 569, 570, 609], "event": [82, 83, 84, 85, 86, 88, 89, 90, 91, 94, 105, 106, 110, 116, 125, 136, 156, 167, 170, 171, 178, 186, 197, 198, 200, 206, 209, 210, 229, 237, 242, 244, 245, 246, 262, 269, 281, 284, 351, 395, 396, 399, 401, 405, 407, 409, 410, 411, 423, 430, 434, 441, 442, 443, 445, 449, 450, 451, 456, 457, 458, 459, 460, 463, 464, 465, 467, 470, 474, 475, 476, 481, 483, 484, 490, 491, 496, 508, 517, 520, 521, 522, 524, 527, 529, 530, 531, 546, 554, 555, 556, 607, 608, 611, 614], "event_3fhl": 532, "event_class": [84, 519, 532], "event_det_coord": [105, 110], "event_fil": 89, "event_filt": 90, "event_filter_typ": 90, "event_id": [408, 518, 519, 532, 543], "event_list": [83, 395, 396, 408], "event_list_id": 83, "event_list_meta": [105, 110, 444], "event_list_zd": 83, "event_sampl": [467, 487, 491], "event_sampling_nrg_depend_model": [467, 488, 491], "event_typ": [106, 519, 532], "eventlist": [84, 89, 105, 110, 186, 197, 198, 200, 206, 209, 210, 395, 396, 401, 408, 409, 410, 423, 426, 434, 439, 446, 451, 453, 454, 455, 457, 458, 487, 488, 497, 509, 518, 519, 532, 543, 546, 555, 614], "eventlistbas": 90, "eventlistdataset": 458, "eventlistmetadata": [83, 423], "events2": 83, "events_": 487, "events_0001": 487, "events_1": 543, "events_2": 543, "events_3fhl": 532, "events_bkg": 408, "events_gc_3fhl": 532, "events_list": 408, "events_path": [82, 487], "events_src": 408, "events_tot": 408, "events_vela": 497, "eventu": [395, 400, 411, 414, 416, 434, 512], "ever": [425, 513, 612], "everi": [196, 198, 210, 282, 395, 398, 403, 404, 405, 407, 411, 421, 423, 428, 470, 474, 509, 530, 609], "everyon": 400, "everyth": [395, 413, 414, 546], "everywher": [395, 409, 414, 416, 426, 438], "evid": [141, 502, 513], "evolut": [30, 31, 32, 50, 52, 53, 232, 401, 416, 467, 490, 491, 524, 539, 540, 560], "evolv": [28, 29, 30, 35, 36, 39, 40, 50, 52, 53, 232, 412, 416, 423, 425, 488, 507, 513], "evt_sampl": 487, "ex": [11, 509, 511, 512], "exact": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 83, 92, 222, 413, 495, 509, 519], "exactli": [121, 125, 129, 133, 137, 202, 390, 425, 474, 476, 495, 497, 510, 515, 519, 542, 559], "exagger": 386, "examin": [422, 550], "exampl": [11, 19, 20, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 66, 67, 80, 82, 83, 85, 86, 88, 89, 90, 92, 95, 97, 100, 103, 104, 107, 111, 112, 113, 117, 118, 120, 121, 123, 125, 126, 128, 130, 132, 133, 134, 136, 137, 141, 145, 146, 147, 148, 149, 150, 152, 154, 156, 157, 158, 159, 161, 165, 167, 170, 177, 180, 182, 195, 196, 197, 198, 199, 200, 201, 202, 203, 205, 206, 207, 208, 209, 210, 215, 219, 220, 221, 222, 230, 239, 245, 249, 252, 254, 263, 283, 285, 287, 293, 298, 317, 318, 320, 321, 341, 345, 351, 361, 373, 374, 379, 383, 385, 386, 388, 390, 392, 395, 396, 398, 400, 403, 405, 406, 407, 408, 409, 410, 411, 412, 413, 415, 416, 419, 422, 423, 424, 425, 430, 431, 432, 434, 438, 440, 443, 446, 449, 450, 451, 454, 456, 457, 458, 464, 465, 467, 468, 469, 470, 472, 473, 474, 475, 476, 477, 478, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 491, 492, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 507, 508, 509, 510, 511, 512, 513, 514, 516, 517, 518, 519, 520, 521, 523, 524, 525, 526, 527, 528, 529, 530, 532, 533, 534, 536, 537, 543, 546, 548, 549, 550, 552, 557, 559, 560, 561, 572, 594, 603, 604, 605, 606, 609, 611, 613, 614], "example_cub": 509, "example_cube_fgst": 509, "exce": [114, 115], "except": [67, 69, 80, 88, 92, 104, 107, 111, 112, 173, 197, 198, 200, 206, 209, 210, 319, 320, 321, 392, 395, 406, 410, 414, 507, 511, 559], "excerpt": 521, "excess": [15, 67, 72, 104, 107, 111, 112, 122, 125, 126, 128, 129, 130, 133, 136, 137, 139, 142, 143, 147, 148, 177, 230, 254, 295, 299, 304, 305, 393, 407, 410, 426, 445, 446, 452, 457, 464, 465, 468, 469, 474, 475, 477, 478, 480, 483, 485, 489, 492, 496, 497, 502, 503, 504, 508, 510, 511, 517, 520, 529, 530, 544, 546], "excess_estim": 520, "excess_estimator_integr": 520, "excess_integr": 520, "excess_map": [16, 475, 480, 481, 483, 529], "excess_map_estim": 497, "excess_matching_signific": [448, 458], "excess_min": 150, "excess_r": 503, "excessestim": 420, "excessmapconfig": 16, "excessmapestim": [122, 145, 146, 147, 148, 420, 445, 446, 447, 449, 452, 462, 464, 465, 481, 483, 497, 504, 510, 520, 544], "excesspointsestim": 420, "excessprofileestim": [420, 446], "exchang": 409, "exclud": [16, 84, 87, 91, 103, 104, 106, 107, 111, 112, 127, 132, 178, 180, 219, 221, 230, 254, 401, 461, 483, 508, 510, 555, 556], "exclude_default": [16, 84, 87, 91, 106, 127], "exclude_non": [16, 84, 87, 91, 106, 127], "exclude_unset": [16, 84, 87, 91, 106, 127], "exclus": [16, 83, 172, 174, 179, 180, 181, 182, 185, 196, 208, 381, 401, 409, 411, 445, 447, 465, 470, 480, 483, 508, 553, 555], "exclusion_mask": [172, 174, 179, 180, 181, 182, 185, 474, 481, 485, 508, 510, 530, 553, 555, 556], "exclusion_mask_2d": 508, "exclusion_mask_crab": [475, 529], "exclusion_radiu": 510, "exclusion_region": 474, "exclusionmask": 455, "execut": [11, 125, 129, 133, 134, 137, 395, 396, 398, 400, 402, 403, 404, 410, 411, 415, 416, 428, 429, 430, 431, 432, 433, 434, 443, 451, 457, 467, 473, 482, 491, 498, 508, 509, 516, 519, 523, 524, 526, 528, 532, 533, 561, 572, 594, 605, 607], "exercis": [398, 411, 416, 422], "exhibit": 486, "exist": [11, 15, 16, 26, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 88, 89, 92, 100, 101, 103, 104, 107, 109, 111, 112, 126, 128, 155, 156, 162, 167, 170, 182, 195, 196, 197, 198, 200, 201, 204, 205, 206, 208, 209, 210, 216, 230, 245, 254, 263, 278, 279, 280, 282, 363, 378, 395, 398, 400, 403, 404, 406, 407, 408, 409, 411, 412, 414, 416, 417, 419, 420, 422, 423, 425, 426, 430, 431, 434, 435, 438, 442, 443, 457, 458, 460, 463, 478, 481, 503, 509, 510, 512, 513, 514, 519, 543, 558, 559, 610], "exist_ok": [474, 475, 483, 484, 487, 529, 530], "exit": [11, 15, 88, 92, 219, 221, 230, 254, 439, 571, 609], "exot": 412, "exp": [21, 28, 29, 30, 31, 32, 35, 36, 39, 40, 157, 237, 241, 248, 260, 261, 274, 396, 419, 496, 512, 513, 565, 566, 574, 578, 579, 580, 581, 590, 591, 592, 597, 598, 599, 612], "expand": [133, 359, 405, 449], "expand_map": 133, "expans": [50, 52, 53], "expcutoffpowerlaw": 580, "expcutoffpowerlaw3fglspectralmodel": [265, 419, 472, 512, 579], "expcutoffpowerlawnormspectralmodel": [236, 265, 464, 512, 580], "expcutoffpowerlawspectralmodel": [19, 20, 26, 80, 224, 225, 228, 232, 234, 235, 241, 247, 248, 251, 255, 257, 259, 260, 261, 265, 266, 271, 273, 274, 275, 276, 279, 283, 419, 472, 474, 483, 512, 578, 584], "expdecai": [237, 467, 560, 595, 605], "expdecay_model": [487, 597], "expdecaytemporalmodel": [277, 419, 445, 449, 487, 496, 512, 597], "expect": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 107, 110, 112, 126, 182, 187, 188, 193, 208, 295, 298, 299, 300, 302, 306, 316, 351, 395, 400, 408, 410, 411, 412, 415, 416, 421, 423, 426, 468, 470, 476, 477, 478, 481, 487, 488, 494, 500, 501, 505, 509, 510, 513, 515, 519, 521, 542, 544, 610, 611, 612], "expected_ts_0": 614, "expens": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 320, 321, 474, 488], "expensive_func": [320, 321], "experi": [395, 398, 400, 404, 406, 410, 424, 425, 428, 457, 534, 608, 613], "experienc": [404, 433], "experiment": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 411, 609], "expert": [416, 524], "expertis": [412, 426], "expfactor": [275, 276, 591, 592], "expir": 408, "explain": [88, 92, 395, 398, 400, 409, 412, 414, 416, 422, 428, 430, 432, 443, 449, 468, 474, 476, 501, 505, 510, 512, 517, 518, 546, 607, 609], "explan": [121, 125, 129, 133, 137, 396, 400, 435, 500, 613], "explicit": [88, 92, 196, 198, 320, 321, 395, 396, 411, 413, 420, 558, 613], "explicitli": [16, 19, 20, 26, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 84, 87, 91, 106, 127, 151, 152, 153, 154, 157, 158, 159, 161, 164, 166, 168, 169, 224, 225, 228, 232, 234, 235, 236, 241, 247, 248, 251, 255, 257, 259, 260, 261, 266, 271, 273, 274, 275, 276, 279, 283, 319, 320, 321, 405, 418, 429, 439, 488, 511, 544, 558, 613], "explor": [197, 198, 200, 206, 209, 210, 403, 411, 415, 425, 426, 434, 467, 474, 480, 483, 486, 489, 490, 491, 494, 495, 499, 500, 502, 503, 511, 513, 520, 521, 529, 532, 546, 555], "explos": 52, "expomap": 408, "expon": [419, 512], "exponenti": [28, 30, 36, 39, 40, 77, 234, 235, 236, 237, 274, 275, 276, 396, 406, 443, 467, 483, 487, 496, 560, 573, 594], "exponentialcutoffpowerlaw": 584, "export": [84, 87, 88, 91, 92, 104, 106, 107, 126, 127, 128, 398, 420, 423, 430, 432, 443, 453, 460, 461, 464, 475, 512, 520, 521, 529], "expos": [6, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 404, 409, 410, 411, 414, 415, 416, 462, 464, 465, 506, 509, 524, 544, 545, 607], "exposur": [16, 83, 89, 102, 104, 107, 108, 110, 111, 112, 125, 137, 144, 155, 156, 162, 165, 167, 170, 172, 177, 184, 187, 188, 189, 191, 192, 193, 270, 308, 311, 316, 401, 404, 405, 406, 407, 408, 420, 441, 446, 454, 456, 457, 458, 460, 468, 469, 470, 474, 475, 476, 477, 478, 480, 481, 483, 485, 487, 488, 492, 495, 496, 499, 503, 508, 509, 510, 520, 529, 530, 542, 554, 559, 611], "exposure_fil": 102, "exposure_geom": 156, "exposure_hdu": [155, 156, 162, 167, 170], "exposure_hdu_band": [155, 156, 162, 167, 170], "exposure_hpx": 519, "exposure_map": [155, 156, 162, 167, 170, 187, 188, 193, 507], "exposure_max": 503, "exposure_min": 503, "exposure_tim": 408, "express": [125, 141, 295, 299, 406, 419, 420, 464, 481, 505, 507, 512, 515, 542, 551, 558, 566, 610, 611, 612], "expressli": 415, "exptest": 455, "extend": [15, 19, 20, 22, 26, 69, 72, 88, 92, 93, 101, 172, 199, 202, 210, 224, 225, 228, 232, 234, 235, 236, 241, 247, 248, 251, 254, 255, 257, 259, 260, 261, 266, 271, 273, 274, 275, 276, 279, 283, 298, 402, 406, 407, 408, 409, 415, 416, 418, 419, 420, 423, 430, 442, 444, 449, 467, 471, 473, 474, 478, 488, 494, 502, 509, 510, 511, 512, 517, 519, 524, 554, 555], "extended_archive_v18": 571, "extended_source_spectral_analysi": [467, 470, 473], "extens": [41, 154, 197, 198, 200, 202, 209, 210, 226, 227, 230, 231, 240, 243, 254, 256, 258, 267, 268, 272, 278, 282, 397, 400, 401, 402, 403, 404, 406, 408, 410, 411, 412, 413, 414, 416, 426, 427, 428, 452, 486, 487, 488, 512, 609], "extent": [208, 230, 254, 409, 478, 512], "extern": [116, 396, 415, 422, 426, 450, 454, 455, 458, 518, 546], "extnam": 507, "extra": [16, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 47, 83, 84, 87, 91, 103, 106, 127, 195, 196, 201, 205, 206, 208, 214, 215, 217, 278, 279, 317, 320, 321, 394, 396, 402, 403, 409, 411, 412, 416, 422, 423, 454, 457, 458, 469, 509, 510, 524, 546, 559], "extra_term": 316, "extract": [16, 84, 87, 91, 101, 104, 106, 107, 111, 112, 126, 127, 128, 133, 155, 156, 162, 167, 170, 173, 178, 179, 184, 186, 194, 197, 198, 199, 200, 202, 207, 208, 209, 210, 280, 395, 405, 410, 415, 420, 422, 423, 426, 451, 452, 463, 464, 468, 470, 474, 475, 476, 477, 483, 484, 487, 488, 489, 492, 499, 503, 504, 509, 529, 542, 550, 555], "extragalact": [232, 469, 518], "extrapol": [103, 151, 152, 153, 177, 197, 198, 200, 206, 209, 210, 232, 283, 333, 334, 449, 454, 456, 457, 465, 507, 509, 518, 519, 558], "extras_requir": 412, "extrem": [395, 423, 509, 566], "ey": 425, "f": [17, 18, 19, 20, 21, 22, 24, 25, 26, 27, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 88, 92, 137, 150, 204, 215, 224, 225, 228, 232, 234, 235, 236, 241, 247, 248, 251, 255, 257, 259, 260, 261, 266, 271, 273, 274, 275, 276, 279, 283, 318, 319, 348, 395, 398, 412, 418, 419, 424, 429, 430, 432, 451, 460, 468, 470, 475, 477, 484, 485, 486, 487, 488, 495, 496, 497, 499, 501, 502, 505, 508, 510, 512, 513, 514, 515, 519, 520, 527, 529, 530, 532, 540, 555, 574, 584, 596, 597, 598, 599, 600, 601, 602, 609, 610, 611], "f0": [281, 603], "f06": 48, "f06b": [49, 536], "f06p": 49, "f1": [281, 603], "f2": [281, 603], "f4": [152, 157, 476, 503, 507, 509, 518, 519], "f8": [507, 519], "f_": [303, 305, 318, 542], "f_0": [259, 587], "f_dead": [83, 89], "f_i": 303, "f_max": 500, "f_max_err": 500, "f_mean": 500, "f_mean_err": 500, "f_min": 500, "f_min_err": 500, "f_pp": 304, "f_var": 304, "fabio": [408, 413, 425, 439, 441, 442, 443, 444, 445, 446, 448, 449, 451, 452, 456, 458, 460, 462, 463, 464, 465], "face": [400, 403], "facecolor": [392, 469, 474, 476, 485, 486, 489, 497, 501, 564, 565, 566], "facil": 421, "fact": [19, 20, 98, 218, 224, 227, 228, 231, 232, 234, 235, 236, 237, 240, 241, 242, 243, 244, 245, 246, 247, 248, 251, 258, 259, 260, 261, 262, 266, 267, 268, 269, 271, 274, 275, 276, 281, 282, 415, 422, 470, 559], "facto": 422, "factor": [19, 20, 23, 104, 105, 107, 110, 111, 112, 121, 125, 126, 155, 156, 158, 162, 164, 165, 166, 167, 168, 170, 177, 184, 190, 194, 195, 196, 197, 198, 200, 201, 202, 205, 206, 208, 209, 210, 213, 218, 219, 220, 221, 224, 227, 228, 231, 232, 234, 235, 236, 237, 240, 241, 242, 243, 244, 245, 246, 247, 248, 251, 256, 258, 259, 260, 261, 262, 266, 267, 268, 269, 270, 271, 272, 274, 275, 276, 278, 281, 282, 284, 298, 395, 408, 410, 425, 445, 465, 468, 477, 478, 480, 483, 485, 489, 492, 496, 503, 504, 508, 512, 518, 542, 559, 574], "factor1": [19, 20, 218, 220, 224, 227, 228, 231, 232, 234, 235, 236, 237, 240, 241, 242, 243, 244, 245, 246, 247, 248, 251, 258, 259, 260, 261, 262, 266, 267, 268, 269, 271, 274, 275, 276, 281, 282], "factor_max": [19, 20, 218, 220, 224, 227, 228, 231, 232, 234, 235, 236, 237, 240, 241, 242, 243, 244, 245, 246, 247, 248, 251, 258, 259, 260, 261, 262, 266, 267, 268, 269, 271, 274, 275, 276, 281, 282], "factor_min": [19, 20, 218, 220, 224, 227, 228, 231, 232, 234, 235, 236, 237, 240, 241, 242, 243, 244, 245, 246, 247, 248, 251, 258, 259, 260, 261, 262, 266, 267, 268, 269, 271, 274, 275, 276, 281, 282], "factori": [197, 198, 209, 210, 409, 414, 419, 557, 559], "factoris": [270, 419, 512, 606], "fadguffi": 499, "fail": [16, 84, 87, 91, 106, 127, 129, 215, 396, 398, 409, 425, 427, 428, 452, 465, 474, 484, 519], "failur": [129, 133, 460, 463], "faint": 610, "fair": [395, 422], "fair4r": [395, 422], "fake": [104, 107, 111, 112, 407, 408, 441, 476, 477, 492, 496, 515], "fall": [77, 141, 180, 207, 230, 254, 395, 402, 404, 405, 412, 425, 458, 459, 500, 513], "fallback": [16, 84, 87, 91, 106, 127, 395], "fals": [16, 19, 20, 23, 26, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 67, 80, 82, 83, 84, 86, 87, 88, 89, 91, 92, 97, 101, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 116, 117, 120, 125, 126, 127, 128, 129, 130, 133, 151, 152, 153, 154, 155, 156, 157, 158, 159, 161, 162, 164, 165, 166, 167, 168, 169, 170, 177, 184, 187, 188, 190, 191, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 215, 216, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 251, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 278, 279, 280, 281, 282, 283, 284, 285, 298, 319, 320, 321, 334, 351, 357, 360, 362, 363, 392, 395, 409, 411, 419, 424, 425, 457, 458, 464, 468, 469, 470, 474, 475, 476, 477, 480, 481, 483, 484, 485, 486, 487, 489, 492, 494, 495, 496, 499, 501, 502, 503, 505, 507, 508, 509, 510, 511, 512, 513, 515, 519, 529, 530, 532, 543, 546, 553, 555, 556, 571, 584, 593], "falsifi": 515, "famili": 422, "familiar": [412, 413, 509, 510, 532], "fanci": [395, 497], "far": [403, 408, 410, 412, 417, 420, 423, 425, 434, 449, 487, 513, 534], "fashion": [410, 416], "fast": [395, 409, 413, 505], "faster": [88, 92, 138, 147, 197, 198, 200, 206, 209, 210, 372, 464, 478, 513], "fastest": [320, 321], "faucher": [30, 31, 32, 33, 37, 39, 45], "faucherkaspi2006": [28, 29, 35, 36, 39, 40, 48], "faucherkaspi2006velocitybimod": 49, "faucherkaspi2006velocitymaxwellian": 49, "faucherspir": 536, "favour": [400, 408, 424, 515], "favourit": 485, "fc": [512, 559], "fcluster": [317, 514], "fcluster_kwarg": [317, 514], "fcn": [425, 505], "fd": 499, "fdx": 395, "fe": 286, "feasibl": [409, 414, 426, 477, 492, 503], "featur": [6, 13, 88, 92, 97, 121, 145, 317, 318, 385, 386, 395, 398, 402, 404, 405, 406, 407, 409, 411, 412, 415, 418, 419, 420, 422, 423, 424, 426, 431, 436, 439, 440, 441, 442, 443, 445, 446, 449, 453, 456, 457, 458, 459, 500, 509, 510, 512, 514, 544, 584], "feature_irf": 514, "features_irf": [97, 317, 318, 514], "feb": [401, 402, 412, 417, 434, 436], "februari": 436, "fed": 476, "feedback": [398, 400, 404, 409, 411, 412, 415, 416, 417, 419, 425, 427, 457, 507, 546], "feedstock": [427, 428], "feel": [405, 609], "feijen": [462, 463, 464, 465], "feldman": [440, 446, 454, 456, 608], "feldman1998": 608, "fellowship": 422, "felt": 395, "fermi": [55, 58, 60, 61, 62, 64, 65, 69, 71, 74, 75, 77, 78, 83, 86, 102, 129, 130, 132, 137, 197, 198, 200, 206, 207, 209, 210, 230, 232, 254, 286, 288, 293, 402, 403, 404, 405, 407, 408, 411, 412, 416, 428, 430, 435, 437, 438, 441, 443, 446, 450, 453, 454, 455, 456, 457, 458, 465, 467, 469, 472, 478, 487, 489, 502, 509, 510, 511, 512, 522, 523, 524, 532, 534, 543, 546, 551, 571, 582, 587, 606, 613], "fermi_3fhl": [83, 197, 198, 200, 206, 209, 210, 511, 519, 532, 614], "fermi_3fhl_events_select": [83, 519, 614], "fermi_3fhl_exposure_cube_hpx": 519, "fermi_3fhl_psf_gc": 519, "fermi_bkg_model": 511, "fermi_ct": 132, "fermi_dataset": [230, 254, 293, 511, 519], "fermi_lat": [416, 458, 467, 519, 523], "fermi_model": 519, "fermi_prof": 130, "fermilat": 469, "fermipi": [102, 402, 404, 407, 411, 416, 420, 455, 457, 519, 534], "fermitool": 411, "fetch": [15, 395, 398, 403, 427, 437, 450, 529, 609], "few": [82, 83, 88, 89, 92, 394, 395, 396, 398, 400, 401, 402, 403, 405, 407, 409, 413, 415, 416, 421, 425, 426, 427, 428, 434, 448, 459, 461, 464, 465, 470, 475, 481, 483, 485, 502, 504, 505, 509, 513, 518, 529, 530, 555, 559, 614], "fewer": [409, 416], "ff": 422, "fft": 210, "fftconvolv": 210, "fgl": [207, 510], "fgst": [196, 197, 198, 200, 201, 202, 208, 209, 210, 509], "fhit": 520, "fidalgo": [405, 410, 438, 458, 459], "fiduci": 509, "field": [16, 42, 50, 51, 54, 83, 84, 87, 88, 91, 92, 106, 127, 151, 152, 153, 154, 157, 158, 159, 160, 161, 164, 166, 168, 169, 174, 238, 255, 323, 327, 382, 395, 409, 422, 423, 434, 439, 444, 451, 458, 474, 476, 481, 483, 485, 487, 507, 508, 510, 518, 519, 546, 548, 549, 550, 551, 552, 553, 555, 584, 608], "fieldinfo": [16, 84, 87, 91, 106, 127], "fig": [210, 383, 468, 470, 474, 475, 476, 477, 478, 481, 483, 484, 485, 486, 489, 494, 496, 497, 501, 505, 510, 513, 515, 530, 555, 556, 566, 570, 574, 607, 614], "figsiz": [89, 104, 107, 111, 112, 131, 151, 152, 154, 155, 156, 157, 158, 159, 164, 165, 166, 167, 168, 170, 197, 198, 200, 206, 209, 210, 213, 383, 470, 474, 477, 478, 481, 483, 484, 485, 486, 494, 495, 496, 497, 499, 500, 501, 502, 505, 507, 508, 509, 510, 511, 512, 514, 515, 517, 518, 519, 530, 555, 566, 570, 574, 614], "figur": [89, 104, 107, 111, 112, 131, 151, 152, 154, 155, 156, 157, 158, 164, 165, 166, 167, 168, 170, 197, 198, 200, 206, 209, 210, 213, 372, 382, 383, 389, 395, 396, 400, 416, 428, 469, 474, 478, 483, 485, 486, 487, 489, 494, 495, 500, 501, 502, 503, 505, 508, 509, 511, 512, 517, 518, 519, 520, 609, 614], "file": [11, 15, 16, 26, 65, 66, 67, 77, 82, 83, 85, 86, 88, 89, 92, 94, 95, 101, 102, 103, 104, 107, 108, 109, 111, 112, 126, 128, 151, 152, 153, 154, 155, 156, 157, 158, 159, 161, 162, 164, 165, 166, 167, 168, 169, 170, 171, 178, 183, 197, 198, 200, 204, 206, 209, 210, 216, 222, 230, 232, 245, 254, 278, 279, 280, 281, 282, 283, 329, 357, 360, 363, 394, 395, 398, 400, 401, 402, 403, 404, 405, 406, 407, 408, 411, 412, 414, 415, 416, 417, 419, 420, 423, 424, 426, 427, 428, 429, 430, 432, 434, 442, 443, 449, 451, 453, 455, 456, 457, 458, 460, 461, 463, 464, 465, 467, 468, 473, 476, 477, 482, 483, 485, 487, 488, 491, 492, 496, 498, 502, 503, 508, 509, 510, 511, 512, 513, 516, 520, 521, 522, 523, 524, 526, 528, 532, 533, 534, 545, 546, 561, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 613], "file_dir": 329, "file_model": 487, "file_nam": 329, "filemod": [16, 475, 480, 481, 483, 529, 609], "filenam": [11, 16, 26, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 82, 83, 85, 86, 88, 92, 95, 101, 102, 103, 104, 107, 108, 109, 111, 112, 126, 128, 130, 132, 134, 151, 152, 153, 154, 155, 156, 157, 158, 159, 161, 162, 164, 166, 167, 168, 169, 170, 171, 197, 198, 200, 204, 206, 209, 210, 230, 232, 245, 254, 278, 279, 280, 281, 282, 283, 288, 290, 292, 293, 329, 360, 363, 373, 395, 396, 400, 446, 465, 474, 475, 480, 481, 483, 484, 488, 489, 502, 503, 504, 509, 510, 511, 512, 518, 519, 529, 530, 532, 543, 546, 548, 549, 550, 552, 571, 574, 603, 604, 609, 614], "filename_1": 543, "filename_2": 543, "filename_arf": 109, "filename_bkg": 109, "filename_model": [101, 126, 293, 511, 519], "filename_rmf": 109, "filepath": 16, "fill": [16, 84, 85, 87, 88, 91, 92, 104, 106, 107, 110, 111, 112, 127, 154, 165, 196, 197, 198, 200, 206, 208, 209, 210, 283, 395, 403, 404, 408, 411, 416, 422, 427, 428, 443, 450, 457, 460, 470, 487, 488, 502, 507, 508, 510, 513, 519, 530, 558], "fill_between": [19, 20, 26, 131, 224, 225, 228, 232, 234, 235, 236, 241, 247, 248, 251, 255, 257, 259, 260, 261, 266, 271, 273, 274, 275, 276, 279, 283, 497], "fill_by_coord": [165, 197, 198, 200, 206, 209, 210, 509, 519, 558], "fill_by_idx": [197, 198, 200, 206, 209, 210, 558], "fill_by_pix": [197, 198, 200, 206, 209, 210, 558], "fill_ev": [197, 198, 200, 206, 209, 210, 452, 463, 476, 509, 519, 527, 614], "fill_nan": 198, "fill_valu": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 88, 92, 151, 152, 153, 154, 157, 158, 159, 161, 164, 166, 168, 169, 197, 198, 200, 206, 209, 210, 278, 279, 282, 395, 507, 509], "filled_t": [88, 92], "filter": [83, 89, 90, 401, 405, 407, 409, 410, 415, 458, 459, 462, 499, 510, 514, 522, 524, 530, 532], "filter_ev": 90, "filter_gti": 90, "filter_success_nan": [126, 128], "filtered_ev": 90, "filtered_gti": 90, "filterwarn": [496, 497], "final": [133, 298, 395, 396, 402, 403, 405, 408, 409, 411, 412, 414, 415, 417, 419, 421, 422, 428, 443, 444, 445, 468, 469, 470, 472, 474, 483, 485, 487, 488, 494, 495, 497, 501, 503, 505, 508, 510, 513, 514, 519, 520, 524, 529, 530, 531, 532, 542, 543, 544], "finalis": 399, "find": [19, 20, 26, 135, 137, 145, 146, 154, 180, 181, 185, 212, 223, 224, 225, 228, 232, 234, 235, 236, 241, 247, 248, 251, 255, 257, 259, 260, 261, 266, 271, 273, 274, 275, 276, 279, 283, 308, 395, 400, 406, 408, 414, 415, 426, 427, 428, 429, 449, 451, 457, 458, 463, 464, 472, 474, 478, 502, 503, 509, 512, 513, 518, 521, 532, 609, 611, 612], "find_peak": [146, 458, 478, 485], "find_peaks_in_flux_map": 478, "find_root": 449, "finder": [145, 180, 181, 449, 458, 478], "fine": [294, 334, 408, 415, 481, 503, 519, 559, 609], "finer": [487, 503, 559], "fingertip": 394, "finish": [398, 402, 404, 427, 455, 457], "finit": [101, 104, 107, 111, 112, 155, 156, 162, 167, 183, 198, 206, 210, 280, 413], "fink": [232, 233, 469, 574], "fir": 584, "firefox": [88, 92], "first": [57, 77, 88, 92, 93, 95, 101, 104, 107, 111, 112, 126, 128, 130, 138, 140, 145, 147, 154, 171, 180, 197, 198, 199, 202, 206, 207, 230, 254, 287, 307, 320, 321, 354, 384, 395, 396, 398, 400, 402, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 415, 416, 417, 420, 421, 422, 425, 426, 428, 429, 434, 438, 439, 440, 441, 442, 443, 444, 445, 446, 449, 451, 456, 458, 459, 460, 461, 463, 465, 468, 470, 472, 474, 478, 480, 481, 483, 484, 485, 486, 487, 488, 489, 494, 495, 496, 497, 499, 500, 502, 503, 504, 505, 508, 509, 510, 511, 512, 514, 515, 518, 519, 520, 524, 529, 530, 531, 532, 543, 555, 558, 609], "firstli": [396, 398, 486, 487, 504], "firstnam": [88, 92], "fit": [6, 15, 16, 19, 20, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 57, 58, 60, 61, 62, 64, 65, 66, 67, 71, 74, 75, 77, 78, 82, 83, 84, 85, 86, 87, 88, 89, 91, 92, 95, 100, 101, 103, 104, 106, 107, 108, 109, 111, 112, 117, 120, 121, 123, 125, 126, 127, 128, 129, 130, 132, 133, 134, 137, 145, 146, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 161, 162, 164, 166, 167, 168, 169, 170, 174, 177, 195, 196, 197, 198, 199, 200, 201, 202, 204, 206, 207, 208, 209, 210, 214, 216, 217, 218, 220, 222, 223, 224, 227, 228, 230, 231, 232, 233, 234, 235, 236, 237, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 251, 254, 258, 259, 260, 261, 262, 266, 267, 268, 269, 271, 274, 275, 276, 280, 281, 282, 283, 285, 293, 294, 295, 296, 297, 299, 300, 301, 306, 309, 315, 316, 329, 330, 331, 376, 377, 380, 383, 388, 390, 394, 395, 396, 401, 405, 406, 407, 408, 411, 413, 414, 416, 417, 418, 419, 420, 423, 424, 426, 430, 438, 439, 440, 441, 442, 443, 444, 445, 446, 449, 451, 454, 456, 457, 458, 459, 461, 463, 464, 465, 467, 468, 471, 473, 477, 478, 479, 481, 482, 486, 487, 488, 489, 490, 491, 493, 494, 495, 497, 498, 499, 500, 502, 503, 504, 506, 507, 508, 509, 511, 512, 513, 514, 516, 517, 518, 520, 521, 524, 527, 531, 532, 542, 543, 544, 545, 546, 548, 549, 550, 551, 552, 553, 554, 555, 564, 571, 574, 584, 603, 604, 607, 608, 613, 614], "fit2": 511, "fit_covari": [475, 529], "fit_deriv": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40], "fit_joint": [470, 474, 483, 484], "fit_prior": 515, "fit_rang": [16, 475, 480, 481, 483, 529], "fit_result": [215, 293, 475, 499, 504, 529], "fit_results_nul": 293, "fit_scipi": 505, "fit_sherpa": 505, "fit_stat_scan": 410, "fit_statist": [395, 481], "fit_statistics_cython": 428, "fitconfig": 16, "fitmc": 413, "fitresult": [215, 426, 451, 463, 465, 505, 530], "fitsfixedwarn": [478, 571], "fitsonli": 518, "fitspectrum": 453, "fitstatist": [296, 297], "fitstepresult": [214, 217], "fittabl": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 48, 49], "fittable1dmodel": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40], "fitter": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 456, 457, 472], "five": 532, "fix": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 77, 85, 89, 95, 96, 108, 109, 137, 149, 167, 169, 184, 215, 256, 257, 262, 282, 398, 400, 401, 402, 406, 407, 410, 412, 415, 418, 420, 421, 422, 427, 428, 430, 436, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 452, 453, 454, 455, 456, 457, 458, 459, 461, 462, 468, 476, 477, 480, 481, 483, 484, 487, 492, 495, 496, 499, 505, 507, 508, 511, 512, 514, 517, 529, 556, 558, 567, 585], "fixed_altaz": 85, "fixed_bin": 149, "fixed_icr": [85, 167, 468, 477, 487, 488, 492, 496], "fixed_offset": [97, 183, 449], "fixed_r_in": 172, "fixed_width": 172, "fixedpointinginfo": [89, 167, 190, 463, 464, 468, 477, 487, 488, 492, 496], "fk5": [559, 571], "flag": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 92, 105, 110, 126, 128, 129, 130, 133, 134, 195, 196, 197, 198, 200, 202, 203, 205, 206, 208, 209, 210, 214, 215, 216, 217, 396, 470, 483, 487, 502, 512], "flake8": 398, "flare": [141, 303, 426, 430, 443, 444, 467, 493, 494, 496, 498, 499, 500, 524, 544, 555], "flask": 457, "flat": [128, 141, 159, 169, 195, 196, 201, 203, 205, 208, 211, 212, 256, 406, 415, 420, 426], "flatten": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 195, 196, 203, 205, 208, 320, 321, 500], "fledg": 424, "flexibl": [82, 345, 395, 400, 404, 405, 406, 409, 411, 415, 416, 417, 423, 509, 546, 606], "float": [19, 20, 26, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 42, 50, 51, 83, 88, 89, 91, 92, 97, 104, 107, 111, 112, 116, 121, 125, 127, 128, 131, 134, 135, 136, 137, 145, 146, 151, 152, 153, 154, 155, 157, 158, 159, 161, 164, 166, 167, 168, 169, 170, 172, 174, 183, 195, 196, 197, 198, 200, 202, 205, 206, 208, 209, 210, 211, 212, 215, 217, 218, 220, 222, 224, 225, 227, 228, 230, 231, 232, 234, 235, 236, 237, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 251, 254, 255, 257, 258, 259, 260, 261, 262, 266, 267, 268, 269, 271, 273, 274, 275, 276, 279, 280, 281, 282, 283, 284, 285, 293, 294, 295, 298, 299, 302, 306, 308, 312, 314, 319, 332, 339, 348, 350, 381, 384, 385, 386, 508, 515, 518, 519, 609, 613], "float32": [195, 196, 197, 198, 200, 205, 206, 208, 209, 210, 480, 485, 509], "float64": [88, 92, 113, 118, 154, 157, 395, 424, 434, 504, 507, 509, 544, 609], "float64float64float64": 485, "float64float64float64float64float64float64float64float32bool": 472, "float64float64float64float64float64float64float64float64": 485, "float_a": [88, 92], "flow": [423, 607, 608], "fluctuat": [295, 299, 420, 477, 492, 515, 611], "flux": [15, 19, 20, 26, 41, 46, 67, 71, 73, 74, 75, 77, 78, 79, 80, 83, 89, 101, 103, 104, 107, 111, 112, 121, 125, 126, 127, 128, 129, 130, 133, 134, 136, 137, 138, 139, 140, 141, 142, 143, 144, 146, 147, 148, 149, 224, 225, 226, 228, 229, 232, 234, 235, 236, 237, 241, 242, 244, 245, 246, 247, 248, 251, 255, 257, 258, 259, 260, 261, 262, 266, 269, 270, 271, 273, 274, 275, 276, 279, 281, 283, 284, 286, 287, 291, 296, 302, 303, 304, 305, 307, 313, 399, 407, 408, 410, 411, 413, 416, 417, 419, 426, 430, 437, 440, 442, 443, 445, 449, 451, 455, 456, 457, 459, 464, 465, 467, 471, 473, 476, 478, 483, 485, 487, 488, 490, 491, 494, 495, 496, 497, 499, 500, 503, 509, 512, 519, 524, 531, 540, 542, 546, 551, 560, 568, 584, 606, 607, 608, 611], "flux1": 307, "flux2": 307, "flux_err": [125, 126, 128, 137, 303, 304, 305, 313, 478, 494, 500], "flux_err1": 307, "flux_err2": 307, "flux_errn": [19, 20, 26, 126, 128, 224, 225, 228, 232, 234, 235, 236, 241, 247, 248, 251, 255, 257, 259, 260, 261, 266, 271, 273, 274, 275, 276, 279, 283, 502], "flux_errp": [19, 20, 26, 126, 128, 224, 225, 228, 232, 234, 235, 236, 241, 247, 248, 251, 255, 257, 259, 260, 261, 266, 271, 273, 274, 275, 276, 279, 283, 502], "flux_int_cu": 287, "flux_map": [126, 128, 138, 147, 420, 501], "flux_metadata_fits_kei": 127, "flux_per_omega": 512, "flux_point": [16, 66, 67, 71, 73, 74, 75, 77, 78, 79, 80, 99, 103, 126, 128, 129, 407, 468, 472, 474, 475, 480, 481, 483, 485, 497, 502, 503, 529, 530, 532], "flux_point_dataset": 407, "flux_points_at_tim": 420, "flux_points_ctb_37b": 128, "flux_points_dataset": [474, 485, 497], "flux_points_dataset_no_ul": 474, "flux_points_fermi": 484, "flux_points_hawc": 484, "flux_points_hess": 484, "flux_points_intrins": 469, "flux_points_meta": [71, 74, 75, 78], "flux_points_no_ul": 474, "flux_points_ob": 469, "flux_points_recomput": 128, "flux_points_t": [71, 73, 74, 75, 77, 78, 79, 80], "flux_pr": 103, "flux_profil": [467, 489, 491], "flux_profile_estim": 489, "flux_profile_fermi": 489, "flux_quant": [140, 141, 142, 143, 500], "flux_ref": [126, 128, 420], "flux_sensit": [125, 126, 128, 137], "flux_ul": [125, 126, 128, 137, 502], "fluxestim": [126, 128, 129, 417, 445, 447, 448, 449, 451, 464], "fluxmap": [125, 127, 128, 137, 138, 139, 146, 147, 449, 464, 465, 478, 544], "fluxmapestim": 420, "fluxmapsmetadata": 423, "fluxpoint": [71, 73, 74, 75, 77, 78, 79, 80, 103, 126, 127, 129, 130, 133, 140, 141, 142, 143, 149, 407, 410, 420, 423, 449, 456, 457, 463, 464, 465, 468, 472, 484, 489, 494, 495, 500, 502, 503, 532, 541, 542, 544, 546], "fluxpointdataset": 443, "fluxpointestim": [410, 440, 446, 459], "fluxpointfit": 407, "fluxpointfitt": 458, "fluxpointprofil": 459, "fluxpointsconfig": 16, "fluxpointsdataset": [99, 100, 104, 107, 417, 420, 423, 439, 443, 464, 465, 472, 474, 484, 485, 496, 497, 542], "fluxpointsdatasetmetadata": 423, "fluxpointsestim": [122, 130, 133, 341, 417, 418, 420, 430, 440, 445, 446, 449, 463, 464, 469, 474, 484, 485, 497, 504, 529, 530, 546], "fluxpointsetim": 420, "fluxpointsmetadata": 423, "fluxprofileestim": [122, 449, 462, 464, 489], "fly": 405, "fmt": [499, 505, 515], "focu": [405, 416, 443, 456, 476, 609], "focus": [405, 415, 422, 425], "fold": [110, 130, 420, 472, 484, 495, 504, 542, 544], "folder": [11, 82, 95, 103, 108, 112, 128, 358, 395, 396, 400, 403, 415, 427, 429, 434, 439, 449, 452, 475, 483, 487, 518, 529, 530, 607, 609], "follow": [15, 19, 20, 43, 44, 77, 80, 82, 83, 84, 87, 91, 92, 104, 106, 108, 109, 111, 112, 125, 126, 127, 128, 131, 134, 136, 137, 139, 145, 148, 196, 197, 198, 200, 204, 209, 210, 215, 222, 270, 287, 293, 296, 312, 314, 385, 386, 388, 395, 396, 398, 399, 400, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 414, 416, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 429, 430, 431, 432, 433, 434, 441, 442, 443, 445, 446, 449, 451, 452, 458, 459, 463, 464, 465, 468, 469, 470, 471, 472, 474, 475, 477, 478, 480, 483, 484, 487, 488, 494, 495, 496, 497, 499, 501, 502, 504, 505, 506, 508, 509, 510, 511, 512, 513, 517, 518, 524, 525, 529, 531, 532, 534, 536, 537, 542, 544, 546, 548, 550, 551, 555, 557, 558, 559, 560, 569, 570, 575, 578, 579, 581, 582, 586, 587, 589, 590, 591, 592, 593, 607, 608, 610, 611, 612, 614], "font": [197, 198, 200, 206, 209, 210, 396, 509], "fontsiz": [392, 497, 505], "foo": [88, 92], "footprint": [197, 198, 200, 206, 208, 209, 210, 567], "footprint_rectangle_sky_region": 208, "forbid": [16, 84, 87, 91, 106, 127], "forbidden": 511, "forc": [16, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 84, 87, 91, 106, 127, 155, 156, 162, 165, 167, 170, 208, 210, 319, 320, 321, 400, 410, 439], "forecom": [395, 421], "foremost": 609, "forens": [411, 415], "foreseen": [405, 415, 421, 426], "forev": 439, "forg": [394, 412, 427, 428, 430, 431, 434, 457], "forget": [475, 486, 529], "forgot": [320, 321, 395], "forgotten": 395, "fork": [398, 427], "form": [16, 84, 87, 88, 91, 92, 104, 106, 127, 167, 170, 205, 220, 239, 249, 285, 320, 321, 333, 395, 401, 405, 410, 415, 419, 421, 423, 425, 435, 457, 465, 510, 513, 515, 543, 551, 565, 576, 607], "formal": [400, 424, 478], "format": [16, 83, 84, 85, 86, 87, 88, 89, 91, 92, 95, 104, 106, 107, 109, 111, 112, 126, 127, 128, 129, 149, 151, 152, 153, 154, 155, 156, 157, 158, 159, 161, 162, 164, 166, 167, 168, 169, 170, 190, 195, 196, 197, 198, 199, 200, 201, 202, 205, 206, 207, 208, 209, 210, 212, 230, 238, 245, 254, 270, 280, 283, 329, 351, 375, 376, 384, 394, 403, 404, 405, 406, 407, 409, 411, 415, 420, 422, 423, 428, 437, 449, 451, 454, 458, 460, 461, 463, 464, 465, 469, 472, 474, 475, 476, 478, 480, 481, 483, 485, 487, 488, 489, 494, 496, 500, 502, 504, 507, 509, 510, 512, 518, 519, 520, 521, 529, 532, 534, 540, 542, 543, 544, 545, 548, 549, 550, 551, 552, 559, 603, 604, 607, 608, 609, 610], "format_plot_xaxi": [199, 202, 207, 507], "format_plot_yaxi": [202, 507], "formatt": [384, 415, 509], "formatwarn": 395, "former": [422, 440, 445, 470, 511, 607, 610], "formula": [28, 29, 30, 31, 35, 36, 37, 39, 40, 50, 52, 53, 135, 166, 260, 261, 316, 320, 321, 468, 610], "forthcom": 504, "forum": 427, "forward": [19, 20, 26, 83, 88, 92, 104, 107, 111, 112, 130, 151, 152, 153, 154, 157, 158, 159, 161, 164, 166, 168, 169, 179, 201, 205, 206, 207, 215, 224, 225, 228, 229, 232, 234, 235, 236, 237, 238, 241, 242, 244, 245, 246, 247, 248, 251, 255, 257, 259, 260, 261, 262, 266, 269, 270, 271, 273, 274, 275, 276, 279, 280, 281, 282, 283, 284, 288, 317, 384, 389, 396, 402, 405, 415, 420, 472, 484, 495, 504, 542, 544, 559], "forwardref": [16, 84, 87, 91, 106, 127], "found": [19, 20, 26, 82, 86, 88, 92, 141, 180, 185, 204, 222, 224, 225, 228, 232, 234, 235, 236, 241, 247, 248, 251, 255, 257, 259, 260, 261, 266, 271, 273, 274, 275, 276, 279, 283, 303, 396, 398, 399, 403, 410, 415, 421, 422, 443, 446, 447, 448, 452, 481, 487, 500, 507, 512, 513, 515, 521, 522, 524, 543, 544, 555, 556], "four": [398, 406, 420, 427, 494, 518, 519, 550, 552, 558, 608], "fov": [125, 151, 152, 174, 175, 189, 190, 192, 194, 238, 320, 321, 395, 401, 409, 454, 457, 458, 465, 480, 499, 507, 510, 511, 518, 530, 551, 554, 608], "fov_": 395, "fov_align": [151, 152, 153, 154, 157, 158, 159, 161, 164, 166, 168, 169, 507], "fov_background": [480, 529], "fov_bkg_mak": [508, 553], "fov_fram": [320, 321], "fov_lat": [152, 507, 518, 551], "fov_lat_axi": 507, "fov_lon": [152, 507, 518, 551], "fov_lon_axi": 507, "fov_rotation_step": [177, 190], "fov_theta": 395, "fovalign": [151, 152, 153, 154, 157, 158, 159, 161, 164, 166, 168, 169, 507], "fovbackground": [424, 445], "fovbackgroundmak": [175, 444, 449, 508, 529, 530], "fovbackgroundmodel": [15, 104, 110, 111, 115, 174, 230, 250, 254, 424, 446, 463, 464, 465, 483, 484, 487, 488, 492, 503, 511, 529, 530, 551, 553, 567], "fp": [126, 128, 149, 420, 529, 544, 546], "fp_dataset": [474, 503], "fp_dnde": 420, "fp_energy_flux": 420, "fp_estim": 504, "fp_result": 504, "fpe": [341, 418, 420, 469, 474, 485, 497, 530], "fpe_no_ul": 474, "fpp": 304, "fpp_err": [304, 500], "fpp_tabl": 500, "fpqchwdj": 508, "fr": 422, "frac": [17, 19, 20, 21, 22, 23, 24, 25, 27, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 50, 51, 52, 53, 54, 107, 112, 154, 157, 213, 236, 241, 259, 261, 274, 275, 303, 305, 318, 419, 542, 550, 551, 564, 565, 566, 569, 570, 575, 578, 579, 581, 582, 586, 587, 589, 590, 591, 592, 597, 598, 599, 601, 611, 612], "frac_remain": [222, 425, 513], "fraction": [19, 20, 26, 50, 52, 53, 83, 89, 90, 91, 125, 136, 143, 158, 164, 166, 167, 168, 170, 205, 211, 212, 222, 224, 225, 228, 231, 232, 234, 235, 236, 241, 247, 248, 251, 255, 257, 259, 260, 261, 266, 271, 273, 274, 275, 276, 279, 283, 304, 305, 405, 410, 425, 456, 464, 468, 477, 487, 492, 503, 507, 510, 513, 518, 519, 520], "frame": [16, 83, 85, 92, 95, 96, 97, 104, 107, 111, 112, 113, 114, 115, 118, 130, 145, 167, 177, 180, 190, 196, 197, 198, 200, 203, 205, 206, 208, 209, 210, 226, 227, 231, 240, 243, 256, 258, 267, 268, 270, 272, 278, 282, 317, 318, 320, 321, 355, 370, 395, 396, 404, 406, 409, 420, 439, 440, 442, 443, 444, 470, 474, 475, 476, 477, 480, 481, 483, 484, 485, 486, 487, 488, 489, 492, 494, 495, 496, 497, 499, 501, 503, 507, 508, 509, 510, 511, 512, 514, 519, 520, 529, 530, 532, 550, 555, 557, 558, 559, 564, 565, 566, 567, 568, 569, 570, 571, 614], "frame_attribut": [320, 321], "frame_specific_representation_info": [320, 321], "frameobj": [320, 321], "framework": [406, 408, 409, 411, 413, 414, 415, 419, 425, 439, 440, 446, 458, 497, 512, 513, 536, 546], "franceschini": [232, 233, 283, 463, 469, 574], "franceschini17": [233, 469, 574], "franceschni": 574, "frd_ab": 233, "free": [50, 52, 53, 77, 104, 107, 111, 112, 123, 129, 133, 134, 135, 177, 215, 219, 221, 256, 257, 293, 400, 410, 415, 439, 465, 469, 475, 477, 480, 481, 483, 485, 486, 492, 494, 496, 499, 503, 505, 508, 511, 512, 515, 519, 524, 529, 530, 534, 544, 553, 567, 584, 585, 609, 611, 612], "free_paramet": [219, 221, 293, 425, 499, 505, 511, 513], "free_unique_paramet": [219, 221], "freedom": [123, 126, 128, 139, 148, 312, 314, 422, 464, 486, 544, 611, 612], "freez": [19, 20, 26, 88, 92, 219, 221, 224, 225, 226, 227, 228, 229, 230, 231, 232, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 251, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 278, 279, 280, 281, 282, 283, 284, 285, 293, 410, 422, 439, 449, 464, 480, 492, 499, 505, 512, 584], "freeze_al": [219, 221], "frenk": 534, "frequenc": [281, 298, 426, 538], "frequent": [202, 395, 404, 413, 422, 425, 495, 496, 500, 510, 524, 546, 547, 609], "frequentist": [413, 505], "fresh": 222, "fridai": 404, "friendli": [395, 400, 423, 460, 475, 529, 546, 614], "from": [13, 15, 16, 19, 20, 25, 26, 27, 28, 29, 30, 31, 32, 33, 35, 36, 37, 38, 39, 40, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 95, 97, 101, 102, 103, 104, 105, 106, 107, 108, 110, 111, 112, 113, 114, 115, 117, 118, 119, 120, 121, 125, 126, 127, 128, 129, 130, 132, 133, 134, 136, 137, 138, 139, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 161, 162, 164, 165, 166, 167, 168, 169, 170, 171, 172, 177, 178, 179, 180, 183, 184, 186, 190, 192, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 215, 216, 217, 218, 219, 220, 221, 224, 225, 226, 227, 228, 229, 230, 231, 232, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 278, 279, 280, 281, 282, 283, 284, 285, 287, 293, 294, 295, 296, 298, 299, 302, 305, 317, 318, 319, 320, 321, 331, 339, 341, 343, 344, 348, 351, 352, 356, 361, 373, 374, 376, 379, 380, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 396, 398, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 426, 427, 428, 430, 432, 434, 435, 437, 438, 439, 441, 442, 443, 444, 445, 446, 449, 450, 451, 453, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 467, 468, 469, 470, 472, 473, 474, 475, 476, 477, 478, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 491, 492, 494, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 507, 508, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 523, 524, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 538, 539, 540, 541, 542, 543, 544, 546, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 561, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 613, 614], "from_align": [208, 449], "from_attribut": [16, 84, 87, 91, 106, 127], "from_bound": [157, 159, 167, 196, 202, 208, 420, 484, 487, 488, 503, 507, 508, 509, 517, 558, 559], "from_covariance_matrix": 424, "from_default": 201, "from_diagonal_respons": [113, 118, 154, 155, 156, 478, 519], "from_dict": [19, 20, 26, 103, 104, 107, 111, 112, 219, 221, 224, 225, 226, 227, 228, 229, 230, 231, 232, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 278, 279, 280, 281, 282, 283, 284, 285, 442, 449, 515], "from_dir": [82, 90, 97, 177, 317, 318, 434, 470, 474, 476, 485, 495, 497, 499, 508, 514, 517, 518, 521, 527, 530, 543, 546, 553, 555, 556], "from_edg": [156, 197, 198, 200, 202, 206, 209, 210, 477, 492, 496, 507, 519, 520], "from_edisp_kernel": 155, "from_energy_bound": [104, 107, 111, 112, 113, 118, 154, 156, 157, 159, 165, 167, 177, 195, 196, 201, 202, 205, 208, 210, 396, 468, 470, 474, 476, 484, 485, 487, 488, 495, 497, 499, 503, 507, 508, 512, 519, 520, 530, 550, 553, 555, 556, 559], "from_energy_edg": [154, 202, 390, 503, 507], "from_events_fil": [82, 487, 518], "from_factor_matrix": 213, "from_fil": [82, 543], "from_fits_head": 85, "from_gauss": [154, 155, 159, 165, 167, 170, 550], "from_gaussian": 446, "from_geom": [104, 107, 111, 112, 155, 156, 165, 167, 170, 197, 198, 200, 204, 206, 209, 210, 443, 462, 503, 509, 510, 559, 566], "from_gti": 207, "from_gti_bound": 207, "from_hdu": [196, 198, 210], "from_hdulist": [104, 107, 111, 112, 126, 128, 151, 152, 153, 154, 155, 156, 157, 158, 159, 161, 162, 164, 166, 167, 168, 169, 170, 195, 196, 197, 198, 200, 204, 205, 206, 208, 209, 210, 509], "from_head": [84, 87, 91, 106, 127, 196, 208, 423], "from_irf": 169, "from_log10": [247, 248, 582], "from_map": [126, 128], "from_map_dataset": [107, 112], "from_nam": [481, 485], "from_nod": 202, "from_orm": [16, 84, 87, 91, 106, 127], "from_panda": [88, 92], "from_paramet": [19, 20, 26, 224, 225, 226, 227, 228, 229, 231, 232, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 251, 253, 255, 256, 257, 258, 259, 260, 261, 262, 263, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 278, 279, 280, 281, 282, 283, 284, 285], "from_parametr": [157, 548], "from_posit": [226, 227, 231, 240, 243, 256, 258, 267, 268, 272, 278, 282, 488], "from_refer": 419, "from_region": [205, 231, 463, 555], "from_region_map": 283, "from_spatial_model": 165, "from_spectrum_dataset": [112, 468, 477], "from_stack": [83, 86, 93, 126, 128, 197, 198, 199, 200, 202, 206, 209, 210, 213, 219, 221, 463, 464, 543], "from_tabl": [128, 151, 152, 153, 154, 157, 158, 159, 161, 164, 166, 168, 169, 199, 201, 202, 206, 207, 245, 460, 468], "from_table_hdu": [86, 201, 202], "from_time_bound": 207, "from_time_edg": [207, 499, 500], "from_time_interv": 86, "from_ultranest": 223, "from_wcs_til": 198, "from_yaml": [16, 230, 254, 406, 475], "fromnumer": [476, 499], "front": [404, 425, 427, 456], "frozen": [19, 20, 26, 103, 129, 133, 174, 218, 219, 220, 221, 224, 225, 226, 227, 228, 229, 230, 231, 232, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 251, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 278, 279, 280, 281, 282, 283, 284, 285, 293, 410, 419, 424, 441, 464, 469, 470, 472, 474, 475, 476, 477, 478, 480, 483, 484, 485, 486, 487, 488, 489, 492, 495, 496, 499, 502, 503, 504, 505, 510, 511, 512, 513, 515, 519, 529, 530, 532, 544, 553, 584, 593], "fr\u00f6se": [464, 465], "ftol": 505, "ftool": 410, "fulfil": [423, 509], "full": [82, 129, 137, 151, 152, 153, 154, 157, 158, 159, 161, 164, 166, 168, 169, 198, 216, 222, 230, 254, 329, 391, 394, 395, 400, 404, 405, 408, 410, 411, 416, 422, 424, 425, 429, 436, 439, 449, 451, 465, 468, 469, 470, 472, 474, 475, 476, 477, 478, 480, 481, 483, 484, 485, 486, 487, 488, 489, 492, 494, 495, 496, 497, 499, 500, 501, 502, 503, 504, 505, 507, 508, 509, 510, 511, 512, 513, 514, 515, 517, 518, 519, 520, 521, 527, 529, 530, 532, 546, 557, 563, 564, 565, 566, 567, 568, 569, 570, 571, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 596, 597, 598, 599, 600, 601, 602, 603, 604, 607, 608], "full_enclosur": [190, 507], "full_output": [19, 20, 26, 216, 224, 225, 226, 227, 228, 229, 230, 231, 232, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 251, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 278, 279, 280, 281, 282, 283, 284, 285], "fulli": [133, 195, 196, 205, 208, 281, 404, 405, 412, 417, 422, 426, 428, 431, 441, 443, 451, 470, 500, 512, 518, 520, 521], "fun": [395, 398], "func": [17, 18, 21, 22, 24, 25, 27, 87, 91, 197, 198, 200, 206, 209, 210, 289, 342, 346, 347, 388, 481, 483], "function": [6, 15, 16, 19, 20, 26, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 46, 82, 83, 84, 85, 87, 88, 89, 91, 92, 101, 102, 103, 104, 105, 106, 110, 111, 121, 125, 126, 127, 133, 137, 138, 140, 141, 142, 143, 146, 147, 148, 155, 156, 157, 158, 159, 161, 162, 164, 166, 167, 168, 170, 197, 198, 200, 202, 206, 209, 210, 215, 216, 217, 220, 222, 224, 225, 228, 232, 234, 235, 236, 239, 241, 247, 248, 249, 251, 255, 257, 259, 260, 261, 266, 269, 270, 271, 273, 274, 275, 276, 279, 283, 285, 289, 295, 296, 297, 298, 299, 307, 308, 312, 313, 314, 320, 321, 334, 342, 343, 345, 346, 350, 351, 361, 379, 383, 384, 388, 390, 392, 394, 398, 401, 405, 406, 407, 408, 409, 410, 413, 414, 415, 416, 417, 419, 420, 421, 423, 424, 425, 430, 432, 434, 435, 437, 439, 440, 441, 442, 443, 445, 446, 449, 450, 451, 453, 454, 455, 456, 457, 458, 459, 462, 463, 464, 465, 468, 469, 474, 475, 476, 477, 478, 483, 485, 486, 487, 488, 489, 499, 503, 504, 505, 507, 508, 509, 510, 511, 512, 513, 515, 517, 520, 521, 522, 524, 529, 530, 532, 534, 535, 536, 541, 542, 543, 545, 546, 555, 557, 559, 565, 566, 568, 597, 606, 607, 608, 609, 610, 612, 614], "functional_model": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40], "functool": [16, 84, 87, 91, 106, 127], "fundament": [408, 418, 423, 425, 430, 432, 513, 524, 547], "further": [11, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 82, 121, 125, 129, 130, 133, 137, 203, 345, 398, 399, 401, 404, 405, 408, 409, 412, 414, 416, 417, 418, 419, 426, 444, 445, 446, 449, 451, 481, 487, 501, 502, 503, 504, 509, 530, 532, 535, 536, 551, 609], "furthermor": 518, "futur": [105, 110, 320, 321, 395, 400, 405, 408, 409, 411, 412, 413, 414, 415, 416, 417, 418, 420, 421, 422, 424, 425, 426, 457, 483, 509, 519, 535, 544, 606], "fvar": [143, 305, 410, 456], "fvar_err": [305, 500], "fvar_tabl": 500, "fykrgxv": 499, "g": [13, 16, 19, 20, 26, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 46, 47, 51, 52, 53, 54, 59, 67, 83, 84, 85, 86, 87, 88, 91, 92, 96, 106, 116, 127, 129, 133, 145, 196, 197, 198, 200, 202, 206, 208, 209, 210, 215, 224, 225, 228, 232, 234, 235, 236, 241, 247, 248, 251, 255, 257, 259, 260, 261, 266, 271, 273, 274, 275, 276, 279, 283, 303, 319, 320, 321, 361, 384, 390, 394, 395, 396, 398, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 416, 419, 420, 422, 423, 425, 426, 427, 428, 430, 431, 432, 449, 451, 455, 457, 458, 459, 460, 463, 470, 472, 474, 475, 477, 485, 487, 489, 501, 502, 503, 505, 509, 510, 511, 512, 513, 518, 519, 524, 532, 534, 538, 541, 542, 543, 544, 546, 551, 556, 557, 558, 566, 606, 608, 609, 611, 613, 614], "g0": [483, 519], "g28": 67, "g320": 502, "g72a3c30c2": [106, 127, 435, 468, 470, 474, 475, 476, 477, 478, 480, 481, 483, 484, 485, 486, 487, 488, 489, 494, 495, 496, 497, 501, 502, 503, 505, 508, 509, 510, 511, 512, 515, 517, 518, 519, 520, 521, 529, 530, 532, 563, 564, 565, 566, 567, 568, 569, 570, 571, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 596, 597, 598, 599, 600, 601, 602, 603, 604], "g_1": 157, "g_2": 157, "g_3": 157, "ga": 489, "gabriel": 458, "gadf": [83, 84, 85, 86, 87, 89, 91, 96, 104, 106, 107, 111, 112, 127, 128, 151, 152, 153, 154, 155, 156, 157, 158, 159, 161, 162, 164, 166, 167, 168, 169, 170, 195, 196, 197, 198, 199, 200, 201, 202, 205, 206, 207, 208, 209, 210, 405, 408, 420, 423, 426, 449, 451, 460, 463, 465, 504, 507, 509, 529, 542, 546, 559, 608], "gain": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 400, 412, 457, 513], "gal_diffus": 411, "galact": [17, 18, 21, 22, 24, 25, 27, 28, 29, 35, 36, 37, 45, 47, 67, 68, 83, 92, 104, 107, 111, 112, 113, 118, 129, 130, 132, 167, 196, 197, 198, 200, 203, 205, 206, 208, 209, 210, 231, 240, 243, 258, 267, 268, 328, 355, 395, 396, 406, 409, 416, 437, 439, 456, 469, 470, 474, 477, 478, 480, 483, 485, 486, 487, 489, 492, 496, 501, 502, 503, 509, 510, 511, 512, 518, 532, 534, 537, 541, 556, 557, 558, 559, 564, 565, 566, 567, 568, 569, 570, 608, 614], "galactic_median": 83, "galactocentr": 41, "galaxi": [17, 21, 22, 28, 30, 35, 39, 40, 41, 232, 304, 305, 437, 470], "galelli": [462, 464, 465], "gallant": 457, "galleri": [426, 428, 444, 446, 449, 460, 464, 467, 468, 469, 470, 472, 474, 475, 476, 477, 478, 480, 481, 483, 484, 485, 486, 487, 488, 489, 492, 494, 495, 496, 497, 499, 500, 501, 502, 503, 504, 505, 507, 508, 509, 510, 511, 512, 513, 514, 515, 517, 518, 519, 520, 521, 527, 529, 530, 532, 547, 561, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606], "gallery_jupyt": 560, "gallery_python": 560, "galprop": [196, 197, 198, 200, 209, 210], "galprop2": [196, 197, 198, 200, 209, 210], "gambit": 534, "gamma": [11, 17, 18, 19, 20, 21, 22, 24, 25, 26, 27, 36, 37, 52, 53, 57, 59, 63, 66, 67, 79, 83, 125, 129, 136, 166, 190, 197, 198, 200, 209, 210, 232, 234, 235, 236, 259, 260, 261, 283, 287, 348, 395, 401, 403, 406, 407, 408, 409, 420, 426, 428, 430, 434, 435, 440, 454, 455, 456, 457, 458, 468, 469, 472, 474, 475, 476, 481, 484, 485, 486, 487, 489, 502, 507, 509, 510, 514, 518, 520, 521, 529, 532, 534, 536, 537, 541, 542, 543, 546, 549, 553, 555, 556, 566, 574, 578, 579, 586, 587, 606, 607, 608, 609, 610, 611, 614], "gamma1": [224, 575, 589], "gamma2": [224, 575, 589], "gamma_1": [271, 274, 275, 276, 419, 590, 591, 592], "gamma_2": [271, 274, 275, 276, 419, 590, 591, 592], "gamma_min": [136, 468], "gamma_min_sensit": 125, "gammacat": [55, 66, 456, 472], "gammalib": [395, 408], "gammamc_dif": 534, "gammapi": [6, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 396, 397, 399, 400, 402, 403, 405, 406, 407, 408, 409, 410, 411, 413, 415, 418, 419, 420, 424, 425, 429, 430, 431, 432, 433, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 449, 450, 451, 453, 454, 455, 456, 457, 458, 459, 460, 461, 463, 464, 465, 467, 468, 469, 470, 472, 474, 475, 476, 477, 478, 480, 481, 483, 484, 485, 486, 487, 488, 489, 492, 494, 495, 496, 497, 499, 500, 501, 502, 503, 504, 505, 506, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 522, 523, 524, 525, 527, 529, 530, 531, 532, 535, 536, 538, 539, 540, 546, 547, 548, 549, 550, 552, 556, 557, 559, 560, 563, 564, 565, 566, 567, 568, 569, 570, 571, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 596, 597, 598, 599, 600, 601, 602, 603, 604, 608, 609, 610, 614], "gammapy_analysis_config": 411, "gammapy_bann": 396, "gammapy_data": [26, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 82, 83, 86, 89, 90, 92, 95, 97, 103, 104, 107, 111, 112, 117, 120, 121, 125, 126, 128, 130, 132, 134, 137, 145, 146, 147, 148, 149, 150, 152, 156, 157, 158, 159, 167, 177, 197, 198, 200, 206, 209, 210, 215, 230, 233, 245, 254, 283, 293, 317, 318, 373, 383, 388, 390, 395, 396, 398, 411, 425, 430, 432, 434, 438, 439, 440, 449, 458, 468, 469, 470, 474, 475, 476, 477, 478, 480, 481, 483, 484, 485, 486, 487, 488, 489, 492, 494, 495, 496, 497, 499, 500, 501, 502, 503, 504, 505, 507, 508, 509, 510, 511, 512, 513, 514, 515, 517, 518, 519, 520, 521, 527, 529, 530, 532, 543, 544, 546, 548, 549, 550, 552, 553, 555, 556, 571, 603, 604, 614], "gammapy_extra": 438, "gammapy_map": 396, "gammapybaseconfig": 16, "gammapydeprecationwarn": 395, "gammmapi": [405, 412], "gap": 140, "garcia": 458, "gather": [409, 416, 427], "gauss": [42, 51, 54, 104, 107, 131, 132, 158, 198, 210, 240, 241, 242, 243, 419, 455, 497, 509, 512, 532, 564, 565], "gauss_elong": 512, "gauss_temp": 512, "gaussian": [67, 68, 80, 81, 103, 121, 131, 138, 147, 154, 155, 159, 165, 167, 170, 198, 210, 220, 239, 240, 241, 242, 243, 244, 249, 285, 296, 297, 304, 305, 406, 414, 419, 424, 425, 442, 446, 465, 467, 469, 472, 474, 485, 487, 492, 496, 500, 502, 505, 507, 512, 513, 515, 518, 532, 550, 552, 560, 562, 572, 573, 594, 595, 605], "gaussian1d": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40], "gaussian2d": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 50], "gaussian2dkernel": 121, "gaussian_compon": [67, 502], "gaussian_error": [138, 147], "gaussian_filt": [131, 210], "gaussian_model": 598, "gaussian_sigma": 505, "gaussianband2d": 457, "gaussianprior": [263, 424, 469, 515], "gaussianspatialmodel": [80, 81, 117, 120, 264, 419, 442, 485, 486, 492, 512, 565], "gaussianspectralmodel": [265, 419, 512, 581], "gaussiantemporalmod": 449, "gaussiantemporalmodel": [277, 419, 445, 512, 598], "gb": [403, 405, 518, 520], "gc": [86, 104, 107, 111, 112, 117, 120, 121, 125, 130, 132, 137, 145, 146, 230, 254, 383, 388, 390, 398, 478, 480, 483, 485, 487, 489, 501, 503, 504, 509, 511, 512, 518, 519, 532, 534, 543, 544], "gc_3fhl": 532, "gc_3fhl_cutout": 532, "gc_3fhl_smooth": 532, "gc_imag": 489, "gc_po": 519, "gc_sep": 511, "gca": 469, "gcc": 434, "ge": 91, "geminga": 59, "gen_gaussian_model": 599, "gener": [16, 19, 20, 26, 27, 33, 42, 45, 46, 47, 56, 82, 83, 84, 87, 88, 89, 91, 92, 93, 102, 104, 105, 106, 107, 110, 111, 112, 119, 127, 156, 167, 170, 197, 198, 200, 201, 202, 206, 209, 210, 215, 224, 225, 228, 229, 232, 234, 235, 236, 237, 238, 241, 242, 243, 244, 245, 246, 247, 248, 251, 255, 257, 259, 260, 261, 262, 266, 269, 271, 273, 274, 275, 276, 278, 279, 281, 283, 284, 298, 320, 321, 343, 345, 348, 349, 350, 351, 358, 396, 398, 404, 406, 407, 408, 409, 411, 413, 414, 415, 416, 417, 418, 419, 420, 421, 425, 426, 427, 428, 431, 434, 440, 444, 445, 446, 449, 451, 456, 460, 463, 464, 465, 467, 468, 469, 470, 472, 474, 475, 476, 477, 478, 480, 481, 483, 484, 485, 486, 487, 488, 489, 492, 494, 495, 496, 497, 499, 500, 501, 502, 503, 504, 505, 507, 508, 509, 510, 511, 512, 513, 514, 515, 517, 518, 519, 520, 521, 524, 527, 529, 530, 532, 542, 546, 551, 557, 559, 560, 562, 563, 564, 565, 567, 568, 569, 570, 571, 572, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 595, 596, 597, 598, 600, 601, 602, 603, 604, 605, 609, 611, 612], "generalconfig": 16, "generalis": [128, 414, 443, 507], "generalized_gaussian_model": 599, "generalizedgaussianspatialmodel": [264, 446, 512, 566], "generalizedgaussiantemporalmodel": [277, 451, 512, 599], "generalrandom": 441, "generatejsonschema": [16, 84, 87, 91, 106, 127], "gengauss": [244, 512, 566], "geodeticloc": 95, "geolat": 470, "geom": [16, 23, 83, 104, 107, 111, 112, 113, 116, 118, 119, 125, 126, 128, 130, 137, 155, 156, 165, 167, 170, 177, 184, 186, 187, 188, 189, 190, 191, 192, 193, 196, 197, 198, 200, 204, 205, 206, 208, 209, 210, 226, 227, 230, 231, 238, 240, 243, 254, 256, 258, 267, 268, 270, 272, 278, 282, 406, 408, 410, 426, 446, 449, 458, 464, 468, 469, 470, 474, 475, 476, 477, 478, 480, 481, 483, 485, 487, 488, 489, 492, 494, 495, 496, 497, 499, 500, 501, 502, 503, 504, 505, 507, 508, 509, 510, 511, 512, 515, 519, 520, 529, 530, 532, 544, 553, 555, 556, 557, 558, 559, 563, 565, 566, 567, 568, 614], "geom_24_energy_bin": 559, "geom_6_energy_bin": 559, "geom_edisp": [104, 107, 111, 112, 503], "geom_energi": 559, "geom_exposur": [104, 107, 111, 112, 462, 503], "geom_imag": [481, 485, 559], "geom_irf": 408, "geom_psf": [104, 107, 111, 112, 503], "geom_tru": 443, "geomconfig": 16, "geometri": [23, 83, 101, 104, 107, 111, 112, 114, 115, 116, 119, 126, 128, 137, 138, 139, 147, 155, 156, 162, 165, 167, 170, 174, 177, 179, 184, 186, 187, 188, 189, 190, 191, 192, 193, 195, 196, 197, 198, 200, 201, 203, 204, 205, 206, 208, 209, 210, 211, 212, 226, 227, 230, 231, 240, 243, 254, 256, 258, 267, 268, 270, 272, 278, 282, 391, 401, 407, 410, 411, 443, 449, 460, 465, 474, 475, 476, 477, 480, 481, 483, 487, 488, 492, 503, 504, 508, 519, 520, 542, 544, 546, 554, 558, 607, 608], "geomspac": [128, 424, 504], "geq": [52, 53], "gerrit": 465, "get": [16, 19, 20, 26, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 82, 84, 85, 87, 88, 89, 91, 92, 95, 97, 101, 104, 106, 108, 109, 111, 121, 125, 127, 129, 130, 133, 134, 137, 145, 149, 154, 155, 156, 162, 167, 170, 195, 196, 197, 198, 200, 201, 204, 205, 206, 208, 209, 210, 213, 219, 221, 222, 224, 225, 226, 227, 228, 231, 232, 234, 235, 236, 239, 240, 241, 243, 247, 248, 249, 251, 255, 256, 257, 258, 259, 260, 261, 263, 266, 267, 268, 271, 272, 273, 274, 275, 276, 278, 279, 281, 282, 283, 285, 286, 320, 321, 329, 345, 395, 396, 400, 401, 402, 403, 404, 405, 409, 410, 412, 420, 422, 423, 424, 426, 428, 429, 431, 432, 434, 435, 438, 440, 455, 456, 457, 458, 465, 468, 475, 477, 478, 483, 484, 485, 492, 495, 499, 502, 503, 505, 507, 508, 510, 511, 512, 515, 518, 519, 520, 521, 522, 524, 529, 530, 532, 534, 542, 546, 559, 608, 612], "get_altaz": [85, 95, 463], "get_bia": 154, "get_bias_energi": 154, "get_bounding_box": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40], "get_by_coord": [197, 198, 200, 206, 209, 210, 508, 509, 519, 520, 558], "get_by_idx": [197, 198, 200, 206, 209, 210, 509, 558], "get_by_pix": [197, 198, 200, 206, 209, 210, 558], "get_cl": [472, 502, 510], "get_combined_flux_map": 138, "get_combined_significance_map": 139, "get_coord": [195, 196, 201, 205, 208, 442, 449, 458, 488, 509, 510, 555, 559], "get_dataset": [15, 475, 480, 481, 483, 494, 529], "get_edges_fixed_bin": 149, "get_edges_min_t": 149, "get_edisp_kernel": [155, 156, 444, 449, 503, 519, 550], "get_events_meta_data": 408, "get_excess_map": [15, 529], "get_filenam": [108, 109], "get_flux_point": [15, 126, 128, 420, 444, 475, 529], "get_frame_attr_default": [320, 321], "get_frame_attr_nam": [320, 321], "get_group_by_idx": 420, "get_hdu": 329, "get_icr": [85, 95, 463], "get_idx": [195, 196, 205, 208, 559], "get_image_by_coord": [197, 198, 200, 206, 209, 210, 509], "get_image_by_idx": [197, 198, 200, 206, 209, 210], "get_image_by_pix": [197, 198, 200, 206, 209, 210], "get_index_list": 196, "get_irfs_featur": [317, 318, 463, 514], "get_kernel": 121, "get_light_curv": 15, "get_mean": 154, "get_observ": [15, 82, 97, 317, 318, 440, 451, 470, 474, 475, 476, 480, 481, 483, 485, 487, 494, 495, 497, 499, 508, 514, 517, 520, 527, 529, 530, 546, 553, 555, 556], "get_ogip_meta": 109, "get_pix": 208, "get_pointing_altaz": [89, 514], "get_pointing_icr": [89, 463, 485, 508, 530], "get_psf_kernel": [165, 167, 170, 464, 465, 519], "get_random_st": [19, 20, 26, 33, 42, 45, 46, 47, 104, 105, 107, 110, 111, 112, 156, 167, 170, 197, 198, 200, 206, 209, 210, 224, 225, 228, 229, 232, 234, 235, 236, 237, 241, 242, 244, 245, 246, 247, 248, 251, 255, 257, 259, 260, 261, 262, 266, 269, 271, 273, 274, 275, 276, 279, 281, 283, 284, 298, 343, 348, 349, 350, 351, 395], "get_rebinned_axi": 495, "get_representation_cl": [320, 321], "get_representation_component_nam": [320, 321], "get_representation_component_unit": [320, 321], "get_resolut": 154, "get_respons": 456, "get_scal": 121, "get_scale_model": [129, 130, 133], "get_spectrum": [197, 198, 200, 206, 209, 210], "get_subcovari": 213, "get_transform": [478, 485, 564, 565], "get_valid_path": 108, "get_wcs_coord_and_weight": 205, "getattr": 424, "getitem": 456, "getlogg": [395, 481, 485, 494, 495, 496, 499, 527], "getter": 396, "getting_start": 416, "gev": [17, 18, 19, 20, 21, 22, 24, 25, 27, 74, 77, 130, 137, 197, 198, 200, 202, 206, 209, 210, 472, 476, 478, 483, 484, 489, 492, 496, 497, 501, 502, 508, 509, 510, 511, 518, 519, 520, 532, 559, 584, 607, 608], "gev2": [19, 501], "gevgevgev1": 472, "gh": [395, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 426, 428], "gigu\u00e8r": [30, 31, 32, 39], "git": [86, 270, 395, 396, 398, 400, 402, 403, 422, 427, 431, 460], "github": [396, 398, 399, 400, 401, 403, 404, 413, 416, 422, 425, 426, 427, 428, 431, 433, 438, 439, 440, 441, 442, 443, 444, 445, 446, 449, 454, 455, 456, 457, 458, 459, 513], "giuliani": 408, "giunti": [439, 440, 441, 442, 443, 444, 445, 446, 449, 451, 452, 460, 463], "give": [6, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 88, 92, 103, 123, 144, 303, 304, 320, 321, 395, 400, 404, 405, 409, 410, 411, 412, 416, 417, 422, 428, 439, 441, 443, 451, 464, 474, 475, 478, 486, 488, 495, 499, 500, 502, 505, 507, 508, 509, 512, 518, 519, 529, 546, 551, 609, 610, 612, 613], "given": [16, 17, 18, 19, 20, 21, 22, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 42, 46, 51, 52, 53, 67, 68, 69, 80, 82, 83, 84, 85, 87, 88, 89, 91, 92, 95, 97, 100, 101, 103, 104, 105, 106, 107, 110, 111, 112, 114, 115, 123, 125, 126, 127, 128, 129, 131, 133, 134, 135, 136, 137, 138, 145, 146, 147, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 161, 162, 164, 165, 166, 167, 168, 169, 170, 171, 179, 180, 183, 185, 187, 188, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 215, 219, 221, 222, 224, 225, 226, 227, 228, 229, 230, 231, 232, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 251, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 278, 279, 280, 281, 282, 283, 284, 285, 286, 293, 295, 297, 299, 305, 317, 319, 320, 321, 324, 325, 332, 339, 343, 346, 347, 355, 382, 383, 388, 392, 395, 402, 403, 404, 405, 406, 407, 408, 409, 410, 412, 414, 419, 420, 422, 424, 426, 438, 443, 449, 457, 458, 463, 468, 469, 470, 472, 475, 478, 487, 488, 489, 492, 494, 495, 496, 501, 502, 503, 504, 507, 508, 509, 510, 512, 513, 518, 519, 524, 529, 532, 542, 543, 544, 546, 550, 551, 555, 556, 558, 559, 566, 570, 574, 606, 608, 609, 610, 611], "glast": 519, "glat": [41, 67, 68, 83, 395, 474, 502, 509, 519], "glat_err": 502, "glat_pnt": [485, 518], "glimps": [520, 524, 531], "gll_iem_v06_cutout": [197, 198, 200, 206, 209, 210], "gll_iem_v06_gc": [487, 509, 511, 512, 519], "gll_psc_v16": 61, "gll_psc_v20": 502, "gll_psc_v32": 65, "gll_psch_v09": 58, "gll_psch_v13": 62, "glob": [82, 396, 503, 504], "global": [16, 19, 20, 26, 33, 42, 45, 46, 47, 101, 104, 105, 107, 110, 111, 112, 156, 167, 170, 195, 196, 197, 198, 200, 205, 206, 208, 209, 210, 215, 222, 224, 225, 228, 229, 232, 234, 235, 236, 237, 241, 242, 244, 245, 246, 247, 248, 251, 255, 257, 259, 260, 261, 262, 266, 269, 271, 273, 274, 275, 276, 279, 281, 283, 284, 298, 343, 345, 348, 349, 350, 351, 395, 399, 401, 425, 446, 463, 474, 485, 486, 497, 511, 513, 515, 544, 607], "global_dataset": 508, "global_to_loc": 196, "glon": [41, 67, 68, 83, 395, 474, 502, 509, 519], "glon_pnt": [485, 518], "glossari": [416, 460, 542, 559], "glue": 546, "glueviz": 412, "gnoxk8fr": 508, "go": [50, 88, 92, 398, 405, 416, 421, 425, 460, 468, 469, 470, 472, 474, 475, 476, 477, 478, 480, 481, 483, 484, 485, 486, 487, 488, 489, 492, 494, 495, 496, 497, 499, 500, 501, 502, 503, 504, 505, 507, 508, 509, 510, 511, 512, 513, 514, 515, 517, 518, 519, 520, 521, 527, 529, 530, 532, 534, 563, 564, 565, 566, 567, 568, 569, 570, 571, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 596, 597, 598, 599, 600, 601, 602, 603, 604, 609], "goal": [400, 409, 415, 424, 505, 513], "goe": [41, 52, 385, 395, 414, 428, 489, 515], "gogia": 456, "good": [82, 86, 103, 128, 223, 309, 316, 395, 400, 402, 403, 404, 405, 406, 409, 411, 412, 413, 415, 416, 425, 469, 474, 476, 477, 481, 492, 495, 496, 500, 501, 503, 505, 508, 510, 512, 513, 519, 520, 524, 569, 570, 608, 613], "googl": [88, 92, 416, 427, 465], "got": 518, "gov": [58, 60, 61, 62, 64, 65, 102, 154, 202, 416, 587], "gp": [82, 83, 90, 405, 411, 480, 483, 485, 497, 518, 520], "gpg": 398, "gpl3": 395, "gps_baseline_110380": [82, 83, 518], "gpu": 426, "gqjg": 499, "gradient": [19, 20, 26, 224, 225, 228, 232, 234, 235, 236, 241, 247, 248, 251, 255, 257, 259, 260, 261, 266, 271, 273, 274, 275, 276, 279, 283, 425, 513], "grai": [386, 555, 584], "grand": 395, "grant": [398, 422], "granular": [415, 500], "graph": 415, "grayify_colormap": 414, "grb": [496, 500], "great": [320, 321, 400, 409, 414, 455, 524, 525], "greater": [174, 388], "green": [103, 111, 112, 457, 486, 514, 515], "grei": 497, "grep": 433, "grid": [17, 18, 21, 22, 24, 25, 27, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 129, 132, 158, 166, 168, 197, 198, 200, 202, 206, 209, 210, 226, 227, 231, 240, 243, 256, 258, 267, 268, 272, 278, 282, 289, 388, 395, 406, 411, 425, 441, 443, 505, 558, 559, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 596, 597, 598, 599, 600, 601, 602], "gridsearch": [215, 505], "gridspec": 382, "gridspec_kw": [478, 485, 494, 496, 574], "ground": [96, 410, 518, 610], "group": [86, 88, 92, 93, 129, 130, 133, 134, 137, 155, 195, 196, 197, 198, 200, 201, 202, 205, 206, 207, 208, 209, 210, 317, 401, 410, 414, 416, 417, 420, 427, 430, 440, 443, 445, 449, 455, 458, 471, 478, 494, 496, 524, 544, 546, 560, 609], "group_1": 514, "group_2": 514, "group_bi": [88, 92, 420], "group_by_axi": 420, "group_by_label": [93, 514], "group_high_zenith": 514, "group_low_zenith": 514, "group_siz": [149, 495], "group_tabl": [86, 202, 207], "grouped_observ": 514, "grow": [403, 414, 457], "grown": 416, "gr\u00e9aux": 463, "gsfc": [58, 60, 61, 62, 64, 65, 102, 154, 202, 416, 587], "gt": 507, "gt100_wtcnt": 77, "gtdrm": [154, 155], "gtexpcube2": 519, "gti": [82, 87, 88, 89, 90, 101, 103, 104, 107, 111, 112, 126, 128, 130, 133, 138, 147, 171, 207, 270, 401, 404, 405, 408, 409, 410, 420, 441, 443, 444, 446, 459, 463, 464, 487, 495, 496, 499, 503, 508, 518, 520, 521, 542, 608], "gti_1": 543, "gti_2": 543, "gti_t0": 496, "gtimetadata": 423, "gtmktime": [405, 519], "gtobsim": 408, "gtol": 505, "gtpsf": [155, 156, 162, 167, 170, 202, 478, 519], "gtselect": [405, 519], "guarante": [403, 419, 421, 425, 513], "guess": [128, 196, 198, 464], "guid": [129, 133, 398, 411, 413, 430, 431, 432, 435, 458, 483, 507, 524, 546, 561, 572, 594, 605], "guidelin": [395, 399, 435, 457], "guiger": 31, "gz": [58, 60, 61, 62, 64, 65, 66, 67, 82, 83, 86, 89, 92, 95, 104, 107, 111, 112, 117, 120, 121, 125, 130, 132, 137, 145, 146, 159, 230, 233, 254, 283, 383, 388, 390, 396, 418, 458, 469, 475, 478, 486, 487, 488, 489, 502, 503, 504, 507, 509, 511, 512, 518, 519, 520, 527, 529, 530, 532, 543, 544, 546, 548, 549, 550, 552, 574, 614], "h": [26, 67, 82, 86, 88, 92, 96, 129, 131, 156, 183, 197, 198, 200, 206, 209, 210, 298, 385, 416, 419, 425, 430, 434, 435, 443, 458, 465, 467, 468, 469, 470, 474, 475, 477, 481, 484, 486, 494, 495, 496, 499, 501, 505, 507, 508, 509, 512, 513, 514, 515, 517, 518, 519, 520, 522, 523, 524, 527, 529, 530, 541, 546, 559, 597, 598, 608, 609], "h0": [312, 486], "h05": [45, 49], "h1": [312, 486], "h_0": [486, 611], "h_1": [486, 611], "h_i": 131, "ha": [19, 20, 26, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 77, 80, 88, 92, 103, 104, 107, 111, 112, 125, 126, 128, 169, 177, 191, 195, 196, 197, 198, 200, 204, 205, 206, 208, 209, 210, 218, 224, 225, 227, 228, 231, 232, 234, 235, 236, 237, 240, 241, 242, 243, 244, 245, 246, 247, 248, 251, 255, 257, 258, 259, 260, 261, 262, 266, 267, 268, 269, 270, 271, 273, 274, 275, 276, 279, 281, 282, 283, 320, 321, 388, 390, 392, 395, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 428, 429, 431, 445, 446, 449, 451, 452, 458, 459, 460, 462, 463, 464, 465, 469, 470, 474, 475, 476, 481, 486, 488, 494, 495, 497, 501, 502, 503, 505, 508, 509, 510, 512, 513, 514, 515, 518, 520, 521, 529, 530, 542, 543, 546, 551, 555, 556, 558, 559, 564, 565, 593, 606, 609, 611], "habilit": 316, "hack": 454, "had": [320, 321, 395, 401, 403, 422, 446, 452, 456, 457], "hadron": [286, 401, 406, 481, 503, 518, 542, 551, 555], "hajlaoui": [446, 449], "hal": 422, "half": [167, 170, 202, 208, 282], "halo": [17, 22, 534], "halv": [141, 303, 464], "halving_coord": 500, "halving_err": 500, "hand": [179, 395, 396, 398, 403, 406, 416, 422, 424, 426, 461, 505, 524, 546], "handbook": [416, 524], "handi": 483, "handl": [3, 16, 84, 87, 91, 106, 126, 127, 128, 183, 204, 306, 394, 396, 399, 407, 408, 409, 411, 417, 419, 420, 423, 427, 430, 432, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 451, 452, 453, 454, 455, 456, 457, 459, 460, 462, 463, 474, 476, 483, 484, 485, 487, 503, 507, 509, 511, 512, 519, 520, 524, 530, 531, 532, 542, 543, 546, 608, 611], "handler": 415, "handler_map": 392, "handson": 426, "hanna": [464, 465], "hap": 411, "happen": [82, 398, 400, 402, 403, 409, 413, 426, 428, 475, 511, 524, 529, 530, 531, 542, 546, 611], "happi": [398, 402, 416, 438, 439, 458], "hard": [395, 396, 419, 424, 426, 444, 515], "harder": [402, 426, 609], "hardli": 423, "harri": [453, 454], "harvard": [33, 38, 50, 52, 53, 58, 60, 61, 62, 83, 89, 157, 215, 251, 286, 287, 416, 505], "has_any_t": [126, 128], "has_data": [320, 321], "has_energy_axi": [195, 196, 205, 208], "has_invers": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40], "has_masked_column": [88, 92], "has_masked_valu": [88, 92], "has_mixin_column": [88, 92], "has_offset_axi": [151, 152, 153, 154, 157, 158, 159, 161, 164, 166, 168, 169], "has_single_spatial_bin": [155, 156, 162, 167, 170], "has_stat_profil": [126, 128], "has_success": [126, 128], "has_ul": [126, 128], "has_user_bounding_box": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40], "has_user_invers": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40], "hasattr": 395, "hash": 415, "hashabl": 415, "hasn": 400, "hatch": 497, "have": [16, 19, 20, 26, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 67, 82, 84, 87, 88, 91, 92, 96, 101, 106, 109, 113, 118, 126, 127, 128, 133, 135, 145, 146, 154, 155, 156, 165, 167, 170, 177, 179, 191, 195, 196, 197, 198, 200, 204, 205, 206, 208, 209, 210, 224, 225, 226, 227, 228, 229, 230, 231, 232, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 251, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 278, 279, 280, 281, 282, 283, 284, 285, 319, 320, 321, 345, 351, 392, 394, 395, 396, 397, 398, 400, 401, 402, 404, 406, 408, 409, 412, 413, 414, 415, 416, 417, 418, 419, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 438, 439, 440, 443, 446, 449, 451, 452, 455, 457, 458, 459, 460, 461, 463, 464, 465, 468, 469, 470, 474, 475, 476, 477, 478, 480, 481, 483, 484, 485, 486, 487, 488, 489, 492, 495, 496, 497, 499, 502, 503, 504, 505, 507, 509, 510, 511, 512, 513, 514, 515, 518, 519, 520, 524, 529, 530, 532, 534, 542, 543, 544, 546, 553, 557, 558, 559, 570, 582, 606, 609, 612, 613], "haven": [426, 434, 513], "hawc": [55, 59, 63, 72, 76, 98, 147, 148, 435, 443, 449, 457, 460, 461, 463, 467, 522, 523, 524, 541, 554, 608], "hawc19_flux_point": [128, 484, 546], "hawc_crab": [128, 484, 546], "hawc_pass4_public_crab": [147, 148], "hd": 67, "hdr": 423, "hdr_dict": 423, "hdu": [67, 82, 83, 85, 86, 88, 89, 95, 104, 107, 111, 112, 126, 128, 151, 152, 153, 154, 155, 156, 157, 158, 159, 161, 162, 164, 166, 167, 168, 169, 170, 171, 195, 196, 197, 198, 199, 200, 201, 202, 204, 205, 206, 207, 208, 209, 210, 329, 380, 396, 405, 437, 452, 454, 457, 460, 461, 507, 509, 518, 520, 521, 542, 543, 546, 548, 549, 550, 552, 559, 604, 614], "hdu1": 154, "hdu2": 154, "hdu_band": [126, 128, 155, 156, 162, 167, 170, 195, 196, 197, 198, 200, 201, 204, 205, 206, 208, 209, 210], "hdu_class": [82, 88, 329, 518, 520, 521], "hdu_class_uniqu": 88, "hdu_filenam": 520, "hdu_hdu": 82, "hdu_index": 82, "hdu_list": [155, 156, 158, 162, 166, 167, 168, 170, 197, 198, 209, 210], "hdu_loc": 88, "hdu_nam": 329, "hdu_ob": 82, "hdu_out": [197, 198], "hdu_region": [205, 206], "hdu_tabl": [82, 520], "hdu_table_filenam": 82, "hdu_typ": [82, 88, 518, 520, 521], "hdu_type_uniqu": 88, "hduclas2": 507, "hduclas3": 507, "hduclas4": 507, "hduclasn": 507, "hduindext": [82, 329, 520], "hdulist": [104, 107, 109, 111, 112, 126, 128, 151, 152, 153, 154, 155, 156, 157, 158, 159, 161, 162, 164, 166, 167, 168, 169, 170, 195, 196, 197, 198, 200, 204, 205, 206, 208, 209, 210, 509, 542], "hduloc": [88, 104], "he": [286, 405, 410], "hea": 410, "head": 396, "header": [82, 83, 84, 85, 86, 87, 88, 89, 91, 92, 95, 101, 103, 104, 106, 107, 108, 109, 111, 112, 126, 127, 128, 154, 155, 156, 162, 167, 170, 195, 196, 197, 198, 199, 200, 201, 202, 204, 206, 207, 208, 209, 210, 282, 331, 376, 377, 380, 400, 405, 408, 423, 443, 451, 453, 458, 460, 463, 476, 488, 509, 518, 613], "healpi": [196, 394, 402, 404, 412, 426, 429, 430, 432, 441, 449, 468, 470, 474, 475, 476, 477, 478, 480, 481, 483, 484, 485, 486, 487, 488, 489, 494, 495, 496, 497, 501, 502, 503, 505, 508, 509, 510, 511, 512, 515, 517, 518, 519, 520, 521, 529, 530, 532, 557], "healpix": [13, 196, 197, 198, 200, 206, 209, 210, 394, 402, 404, 409, 426, 449, 457, 509, 519, 558], "healpix_to_imag": 450, "heapsort": [88, 92], "hear": 425, "heart": 611, "heasarc": [154, 202], "heatmap": [384, 389], "heavi": [458, 459], "heavier": 483, "heavili": 449, "hegra": [98, 287], "heidelberg": [395, 427], "heidt": 500, "height": [16, 29, 88, 92, 95, 130, 354, 475, 480, 481, 483, 489, 494, 497, 501, 509, 510, 512, 529, 555, 559], "heighten": 500, "helen": 455, "hello": [434, 485], "help": [11, 88, 92, 300, 306, 395, 398, 400, 402, 409, 410, 411, 416, 422, 426, 427, 428, 429, 434, 435, 438, 439, 440, 457, 458, 460, 502, 508, 509, 511, 519, 532, 546, 609], "helper": [13, 329, 334, 402, 404, 409, 410, 411, 414, 428, 434, 440, 441, 442, 443, 449, 451, 454, 456, 457, 463, 464, 489, 502, 510, 511, 555, 607, 614], "henc": [88, 92, 249, 411, 415, 480, 481, 544, 559, 611], "here": [13, 82, 83, 88, 92, 102, 104, 111, 128, 139, 148, 152, 157, 166, 215, 295, 299, 302, 383, 394, 395, 396, 397, 398, 401, 402, 407, 408, 409, 410, 411, 412, 413, 414, 416, 422, 423, 424, 425, 426, 427, 428, 430, 432, 434, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 449, 451, 452, 454, 455, 456, 457, 458, 459, 460, 463, 464, 465, 468, 469, 470, 472, 474, 475, 476, 477, 478, 480, 481, 483, 485, 486, 487, 488, 492, 494, 495, 496, 497, 499, 500, 502, 503, 504, 505, 507, 508, 509, 510, 513, 514, 515, 517, 518, 519, 520, 524, 529, 530, 532, 536, 542, 546, 551, 553, 563, 564, 565, 566, 567, 568, 569, 570, 571, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 596, 597, 598, 599, 600, 601, 602, 603, 604, 609, 610, 611, 613, 614], "hereaft": 487, "herebi": 515, "heritag": 422, "herm": [290, 292, 464], "herr": [425, 513], "hess": [16, 55, 67, 82, 83, 86, 89, 92, 97, 98, 103, 111, 112, 134, 149, 150, 157, 159, 177, 215, 293, 317, 318, 396, 403, 404, 409, 411, 416, 425, 427, 430, 434, 437, 439, 442, 453, 454, 457, 458, 467, 470, 472, 474, 475, 476, 481, 483, 485, 486, 495, 497, 499, 502, 503, 504, 505, 508, 513, 514, 515, 517, 519, 521, 523, 527, 529, 530, 534, 543, 544, 546, 548, 549, 550, 552, 553, 555, 556, 614], "hess2": [157, 548], "hess_dl3_dr1_obs_id_020136": [89, 159, 396, 548, 549, 550, 552], "hess_dl3_dr1_obs_id_023523": [83, 86, 543], "hess_dl3_dr1_obs_id_023526": 543, "hess_ecpl": [287, 474], "hess_pl": 287, "hessian": 544, "heterogen": [423, 472, 484], "hfm": 67, "hgp": [67, 80, 81, 125, 416, 443, 455, 457, 458, 541], "hgps_catalog_v1": 67, "hgps_sourc": 67, "hgpsc": [67, 502], "hi": [395, 456], "hi_bnd": 202, "hi_threshold": 154, "hidden": 406, "hide": [13, 400, 418], "hierarch": [13, 25, 317, 361, 404, 406, 423, 426, 464, 546, 558], "hierarchi": [317, 406, 442], "hierarchical_clust": [463, 514], "high": [6, 15, 58, 62, 63, 83, 154, 202, 344, 395, 399, 400, 401, 408, 409, 410, 415, 416, 423, 425, 441, 442, 443, 444, 445, 449, 457, 458, 467, 468, 472, 475, 478, 480, 483, 489, 492, 494, 501, 502, 503, 504, 508, 510, 513, 518, 519, 520, 521, 524, 530, 531, 532, 533, 541, 542, 543, 544, 551, 554, 607, 608, 609, 610], "high_zenith": 514, "higher": [195, 196, 197, 198, 200, 205, 206, 208, 209, 210, 222, 244, 398, 401, 406, 411, 414, 417, 431, 472, 488, 500, 507, 509, 553, 559], "highest": [145, 183, 500, 508, 518, 532], "highli": [415, 512, 513], "highlight": 609, "hint": [423, 426, 478, 544], "hip": 415, "hire": [158, 416, 536, 538, 539, 540, 542, 543, 548, 549, 550, 552, 555, 559, 611, 614], "hist": [83, 111, 112, 206, 210, 388, 477, 513, 515], "histogram": [83, 111, 112, 202, 206, 210, 223, 388, 463, 497, 559, 608], "histori": [409, 422, 460], "hit": 425, "hli": [408, 444, 445, 449, 460, 467, 471, 473, 524, 542, 545, 608], "hli_spectrum_analysi": 475, "hline": 564, "hnrqbzp0": 499, "hoc": 409, "hold": [69, 82, 90, 93, 97, 101, 165, 238, 319, 404, 405, 407, 410, 609, 611], "home": [16, 358, 398, 468, 470, 474, 475, 476, 477, 478, 480, 481, 483, 484, 485, 486, 487, 488, 489, 492, 494, 495, 496, 497, 499, 501, 502, 503, 505, 508, 509, 510, 511, 512, 515, 517, 518, 519, 520, 521, 529, 530, 532, 571, 574, 597, 603, 604], "homebrew": 412, "homework": 440, "homogen": [88, 92, 446], "honk": 400, "hood": [475, 524, 529, 531], "hook": [398, 460], "hope": 400, "hopefulli": 402, "horizont": [85, 96, 160, 364, 507, 613], "host": [395, 425], "hour": [67, 95, 398, 411, 427, 428, 468, 502, 508, 509, 546], "hover": 396, "how": [16, 19, 20, 82, 83, 84, 85, 87, 91, 100, 106, 127, 128, 129, 130, 132, 133, 177, 198, 208, 210, 345, 351, 397, 400, 403, 407, 409, 411, 412, 414, 415, 418, 419, 422, 423, 425, 426, 428, 429, 430, 434, 435, 438, 439, 440, 443, 444, 451, 453, 456, 457, 458, 463, 464, 468, 469, 472, 474, 475, 476, 477, 478, 480, 481, 483, 484, 485, 486, 487, 488, 489, 492, 494, 495, 496, 497, 499, 500, 502, 503, 504, 505, 506, 510, 511, 512, 513, 514, 515, 517, 518, 519, 520, 521, 522, 524, 525, 529, 531, 532, 536, 542, 544, 547, 551, 555, 557, 558, 574, 593, 607, 609, 610, 611, 613, 614], "howev": [77, 88, 92, 103, 125, 130, 304, 394, 395, 396, 398, 402, 405, 408, 409, 413, 422, 424, 425, 431, 470, 481, 489, 497, 499, 501, 502, 503, 505, 513, 515, 520, 521, 524, 525, 542, 546, 558, 559, 565, 582, 609], "howto": [415, 416, 460, 461], "hpuymknr": 469, "hpx": [196, 197, 198, 200, 209, 210, 409, 426, 449, 509, 519], "hpx2wc": [197, 198], "hpx_map": [197, 198], "hpx_pixel": 409, "hpx_reg": 196, "hpxgeom": [126, 195, 197, 198, 444, 449, 460, 519, 557], "hpxmap": [198, 200, 557], "hpxmapaxi": 426, "hpxndmap": [278, 449, 557], "hpxsparsemap": 443, "hpxtowcsmap": [197, 198], "hr": [487, 488, 492, 496], "hr7f4iv7": 499, "hspace": 501, "hspec": [453, 454, 455], "hst": 232, "hstack": [88, 92, 408], "html": [83, 88, 92, 102, 129, 154, 190, 196, 202, 205, 208, 215, 230, 254, 283, 319, 348, 349, 395, 396, 403, 416, 421, 422, 427, 428, 436, 457, 468, 477, 480, 483, 485, 492, 496, 505, 507, 518, 543, 557, 559, 587], "htmlcov": 428, "http": [11, 13, 33, 34, 38, 50, 52, 53, 58, 60, 61, 62, 64, 65, 67, 83, 88, 89, 92, 102, 129, 139, 154, 157, 183, 190, 196, 202, 205, 208, 215, 230, 251, 254, 260, 261, 275, 276, 283, 286, 287, 312, 314, 319, 320, 321, 348, 349, 361, 412, 416, 421, 422, 425, 426, 427, 428, 429, 430, 431, 432, 436, 440, 457, 468, 474, 477, 480, 483, 484, 485, 492, 496, 501, 502, 505, 507, 513, 518, 543, 557, 559, 587, 591, 592, 609], "hubert": 458, "hue": 386, "huestart": 386, "huge": [428, 565], "hugovk": 439, "human": [375, 406, 425, 428, 451, 475, 513, 529], "hundr": 520, "hypercub": [509, 558, 559], "hypothes": [123, 293, 312, 314, 463, 546, 611], "hypothesi": [123, 126, 128, 129, 130, 133, 134, 135, 293, 295, 299, 426, 465, 472, 478, 486, 504, 544, 546, 608, 611], "hysteresi": 499, "hz": [351, 532], "i": [11, 13, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 45, 46, 47, 50, 51, 52, 53, 54, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 74, 75, 76, 77, 78, 79, 80, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 114, 115, 116, 117, 119, 120, 121, 123, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 161, 162, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 177, 178, 179, 180, 181, 183, 184, 185, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 224, 225, 226, 227, 228, 229, 230, 231, 232, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 251, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 289, 291, 293, 294, 295, 298, 299, 300, 302, 303, 304, 305, 306, 307, 308, 312, 313, 314, 316, 317, 319, 320, 321, 323, 327, 329, 332, 333, 334, 339, 341, 342, 345, 348, 349, 350, 351, 353, 354, 357, 360, 362, 363, 365, 369, 371, 372, 376, 377, 378, 380, 382, 383, 384, 385, 386, 388, 389, 390, 391, 392, 394, 396, 397, 399, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 427, 428, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 468, 469, 470, 472, 474, 475, 476, 477, 478, 480, 481, 483, 484, 485, 486, 487, 488, 492, 494, 495, 496, 497, 499, 500, 501, 502, 503, 504, 505, 507, 508, 509, 510, 511, 512, 513, 514, 515, 517, 518, 519, 520, 521, 524, 529, 530, 531, 532, 534, 535, 536, 541, 542, 543, 544, 545, 546, 548, 549, 550, 551, 552, 553, 554, 555, 556, 558, 559, 563, 564, 565, 566, 567, 568, 569, 570, 571, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 596, 597, 598, 599, 600, 601, 602, 603, 604, 606, 607, 608, 609, 610, 611, 612, 613, 614], "i0": [88, 92], "i1": [88, 92], "i4": 489, "i8": [509, 532], "i_0": [197, 198, 200, 206, 209, 210], "i_hpx": [197, 198, 200, 206, 209, 210], "i_lat": [197, 198, 200, 206, 209, 210], "i_lon": [197, 198, 200, 206, 209, 210], "i_n": [197, 198, 200, 206, 209, 210], "i_scan": 515, "iact": [82, 83, 85, 95, 177, 180, 184, 401, 404, 405, 406, 407, 409, 411, 416, 435, 440, 454, 456, 458, 472, 478, 481, 508, 509, 511, 518, 519, 521, 543, 548, 549, 550, 551, 552, 606, 608], "iactbasicimageestim": [401, 457], "iau": [52, 437, 441], "iau2015": 52, "ic": 584, "icon": 607, "icr": [83, 85, 89, 92, 95, 96, 97, 104, 107, 111, 112, 114, 115, 145, 167, 177, 180, 196, 197, 198, 200, 203, 205, 208, 209, 210, 226, 227, 231, 240, 243, 258, 267, 268, 317, 318, 320, 321, 355, 395, 396, 420, 442, 474, 475, 476, 477, 478, 481, 484, 485, 487, 488, 492, 494, 495, 496, 497, 499, 502, 503, 507, 508, 509, 510, 512, 514, 517, 518, 519, 520, 529, 530, 543, 546, 550, 555, 559, 564, 565, 566, 568, 569, 570], "icrc": 453, "id": [17, 19, 20, 21, 22, 24, 25, 26, 27, 67, 80, 82, 83, 88, 89, 92, 93, 114, 115, 408, 411, 434, 475, 477, 487, 489, 492, 497, 502, 512, 513, 518, 519, 520, 521, 529, 543], "id_obs_vela": 497, "idea": [400, 403, 410, 414, 416, 417, 475, 499, 507, 514, 519, 529], "ideal": [397, 398, 405, 409, 410, 415, 420, 424, 427, 472, 519], "idempot": [16, 84, 87, 91, 106, 127], "ident": [369, 410, 460, 474, 476], "identif": [67, 401, 502], "identifi": [67, 89, 105, 110, 196, 270, 395, 405, 406, 408, 411, 415, 421, 422, 428, 444, 478, 487, 500, 502, 503, 512, 518, 520, 545], "identified_object": 502, "idx": [83, 88, 92, 93, 101, 195, 196, 197, 198, 199, 200, 201, 202, 205, 206, 207, 208, 209, 210, 254, 477, 487, 496, 502, 505, 509, 558], "idx1": 505, "idx2": 505, "idx_glob": 196, "idx_loc": 196, "ie": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 125, 422, 469, 499, 511, 512, 542, 608], "iem": [511, 519], "iem_minus_iem": 509, "iem_plus_iem": 509, "iem_times_two": 509, "ignacio": 459, "ignasi": 453, "ignor": [11, 16, 84, 87, 88, 91, 92, 103, 106, 127, 140, 161, 171, 200, 218, 220, 238, 319, 333, 396, 451, 465, 474, 489, 496, 497, 503, 510, 529, 546, 609], "ii": [213, 455], "ij": 213, "ilist": 196, "illustr": [111, 112, 396, 405, 407, 408, 409, 411, 414, 425, 476, 478, 484, 489, 503, 508, 509, 511, 512, 519, 524, 536, 542, 555, 556, 564, 565, 574, 607], "illustrate_colormap": 414, "iloc": [88, 92], "im": [384, 505], "imag": [104, 107, 111, 112, 121, 131, 132, 145, 156, 157, 158, 164, 166, 167, 168, 170, 172, 182, 195, 196, 197, 198, 200, 205, 206, 208, 209, 210, 282, 308, 311, 358, 380, 383, 384, 385, 386, 390, 395, 403, 404, 406, 411, 412, 416, 417, 426, 428, 430, 435, 437, 438, 439, 442, 443, 444, 450, 454, 455, 456, 457, 458, 465, 467, 471, 480, 483, 489, 490, 491, 508, 510, 512, 518, 530, 532, 542, 551, 555, 556, 557, 558, 559, 607, 608, 614], "image_analysi": [416, 438], "image_err": 132, "image_fitting_with_sherpa": [416, 459], "image_pip": 457, "image_profil": 456, "imagehdu": [197, 198, 209, 210], "imagenorm": [385, 386, 614], "imageprofil": 132, "images_t": 485, "imagin": 609, "img": [383, 509], "iminuit": [215, 394, 412, 422, 425, 449, 451, 458, 462, 463, 468, 470, 474, 475, 476, 477, 478, 480, 481, 483, 484, 485, 486, 487, 488, 489, 494, 495, 496, 497, 501, 502, 503, 505, 508, 509, 510, 511, 512, 515, 517, 518, 519, 520, 521, 529, 530, 532, 606], "immut": 230, "impact": [402, 408, 412, 426, 520], "imperfect": 508, "implement": [19, 20, 104, 107, 111, 112, 139, 148, 218, 224, 227, 228, 231, 232, 234, 235, 236, 237, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 251, 258, 259, 260, 261, 262, 266, 267, 268, 269, 271, 274, 275, 276, 281, 282, 298, 304, 320, 321, 395, 396, 400, 401, 403, 404, 407, 408, 409, 410, 411, 412, 413, 415, 417, 418, 419, 420, 421, 423, 426, 439, 440, 441, 442, 443, 444, 445, 446, 449, 450, 451, 456, 457, 459, 460, 463, 464, 465, 470, 480, 495, 500, 501, 502, 508, 509, 510, 513, 534, 542, 544, 546, 551, 552, 553, 593, 606, 607, 608, 609, 610, 613], "implent": 395, "impli": [244, 395, 414, 425, 542, 608], "implic": 418, "implicit": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 551], "implicitli": 508, "import": [19, 20, 26, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 66, 67, 82, 83, 84, 85, 86, 87, 88, 89, 90, 92, 95, 97, 103, 104, 106, 107, 111, 112, 113, 117, 118, 120, 121, 125, 126, 127, 128, 130, 132, 134, 137, 145, 146, 147, 148, 149, 150, 152, 154, 156, 157, 158, 159, 165, 167, 177, 180, 195, 196, 197, 198, 199, 200, 201, 202, 203, 205, 206, 207, 208, 209, 210, 215, 219, 221, 224, 225, 228, 230, 232, 234, 235, 236, 241, 245, 247, 248, 251, 252, 254, 255, 257, 259, 260, 261, 266, 271, 273, 274, 275, 276, 279, 283, 287, 293, 298, 304, 305, 317, 318, 320, 321, 341, 351, 361, 373, 374, 379, 383, 385, 386, 388, 390, 396, 398, 400, 401, 402, 404, 405, 406, 407, 408, 409, 410, 411, 414, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 433, 434, 445, 455, 457, 462, 464, 465, 468, 469, 470, 472, 474, 475, 476, 477, 478, 480, 481, 483, 484, 485, 486, 487, 488, 489, 494, 495, 496, 497, 499, 500, 501, 502, 503, 504, 505, 507, 508, 509, 510, 511, 512, 513, 514, 515, 517, 518, 519, 520, 521, 527, 529, 530, 532, 535, 536, 538, 539, 540, 542, 543, 544, 546, 548, 549, 550, 552, 553, 555, 556, 557, 558, 559, 563, 564, 565, 566, 567, 568, 569, 570, 571, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 596, 597, 598, 599, 600, 601, 602, 603, 604, 607, 609, 610, 611, 613, 614], "importantli": [420, 458, 470, 609], "importerror": [88, 92], "impos": [462, 468, 555], "imposs": 425, "improv": [110, 293, 397, 399, 400, 401, 403, 404, 405, 409, 410, 411, 412, 413, 414, 415, 416, 421, 426, 428, 429, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 449, 450, 452, 453, 454, 455, 456, 457, 458, 459, 461, 509, 518, 546, 551, 556, 564], "imshow": [104, 107, 165, 198, 210, 383, 389, 456, 509, 532], "in2p3": 422, "in_frame_unit": [320, 321], "in_memori": [89, 546], "in_memory_gener": 93, "in_safe_data_rang": [104, 107, 111, 112], "inaccur": 395, "incex": [16, 84, 87, 91, 106, 127], "incid": [401, 608], "includ": [16, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 45, 82, 83, 84, 87, 88, 89, 91, 92, 106, 127, 133, 155, 165, 171, 173, 174, 180, 181, 185, 195, 196, 205, 208, 220, 239, 249, 255, 285, 320, 321, 329, 394, 395, 398, 401, 403, 406, 407, 408, 409, 411, 412, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 430, 439, 441, 446, 457, 462, 463, 464, 465, 468, 483, 484, 486, 487, 489, 496, 501, 502, 504, 505, 508, 510, 511, 512, 513, 518, 520, 534, 536, 542, 544, 545, 556, 558, 606, 610, 613], "include_irf": [89, 487, 543, 546], "include_ssc": 255, "inclus": [83, 205, 381, 409], "incompat": [421, 451], "incomplet": [395, 428, 438, 439, 440, 441, 442, 443, 444, 445, 446, 449, 451, 452, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465], "inconsist": [446, 452, 462, 463], "inconveni": [414, 458], "incorpor": [411, 416, 424, 608], "incorrect": [83, 395, 423, 433, 442, 460, 461, 508, 515], "incorrectli": [460, 510], "increas": [145, 172, 202, 207, 222, 231, 240, 243, 395, 404, 423, 426, 495, 504, 508, 542, 564], "increment": [19, 20, 26, 121, 224, 225, 228, 232, 234, 235, 236, 241, 247, 248, 251, 255, 257, 259, 260, 261, 266, 271, 273, 274, 275, 276, 279, 283, 409, 509, 558], "ind": [196, 208, 230, 254], "inde": [487, 565], "indefinit": 402, "indent": [16, 84, 87, 91, 106, 127], "independ": [67, 129, 133, 138, 139, 147, 148, 316, 332, 395, 398, 401, 405, 406, 407, 408, 409, 410, 413, 415, 417, 418, 419, 420, 422, 426, 430, 439, 449, 468, 475, 494, 502, 509, 510, 511, 512, 520, 529, 530, 541, 546, 551, 608, 612], "index": [19, 20, 26, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 51, 52, 53, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 88, 90, 92, 93, 101, 103, 104, 107, 111, 112, 121, 125, 126, 128, 129, 130, 134, 136, 137, 144, 154, 155, 156, 162, 165, 167, 170, 190, 195, 196, 197, 198, 199, 200, 201, 202, 203, 205, 206, 207, 208, 209, 210, 215, 219, 221, 224, 225, 228, 230, 232, 234, 235, 236, 241, 247, 248, 251, 252, 254, 255, 257, 259, 260, 261, 266, 271, 273, 274, 275, 276, 279, 283, 287, 298, 329, 343, 348, 401, 404, 405, 406, 407, 410, 411, 419, 420, 421, 427, 430, 440, 454, 456, 457, 463, 464, 469, 470, 472, 474, 475, 477, 478, 480, 483, 485, 486, 487, 488, 489, 492, 494, 495, 496, 497, 499, 502, 503, 504, 505, 507, 511, 512, 513, 518, 519, 520, 521, 529, 530, 532, 544, 557, 558, 559, 563, 564, 565, 566, 568, 569, 570, 571, 574, 576, 578, 579, 580, 585, 586, 587, 596, 597, 598, 599, 600, 601, 602, 603, 604], "index1": [224, 271, 575, 589], "index2": [224, 271, 575, 589], "index_1": [274, 275, 276, 590, 591, 592], "index_2": [77, 274, 275, 276, 590, 591, 592], "index_arrai": [88, 92], "index_column": [88, 92], "index_data": 201, "index_err": 499, "index_errn": [19, 20, 26, 224, 225, 228, 232, 234, 235, 236, 241, 247, 248, 251, 255, 257, 259, 260, 261, 266, 271, 273, 274, 275, 276, 279, 283], "index_errp": [19, 20, 26, 224, 225, 228, 232, 234, 235, 236, 241, 247, 248, 251, 255, 257, 259, 260, 261, 266, 271, 273, 274, 275, 276, 279, 283], "index_mod": [88, 92], "index_scan": 515, "indexerror": [93, 101, 254], "indic": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 88, 92, 101, 195, 196, 197, 198, 199, 200, 201, 202, 205, 206, 207, 208, 209, 210, 320, 321, 395, 460, 477, 488, 500, 508, 509, 513, 514, 515, 520, 521, 546, 558, 559, 608], "indico": 404, "indirect": [17, 19, 20, 21, 22, 24, 25, 26, 27, 501, 534], "individu": [88, 92, 110, 123, 131, 391, 401, 407, 408, 410, 416, 419, 420, 424, 426, 470, 474, 477, 486, 489, 495, 502, 503, 505, 508, 511, 512, 532, 542, 546, 608], "indiviud": 418, "indxschm": [197, 198, 209, 210], "ineffici": [88, 92, 398], "ineqcon": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40], "inequ": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40], "inertia": [51, 54], "inf": [67, 243, 285, 424, 513, 515], "infer": [126, 128, 195, 196, 197, 198, 200, 208, 209, 210, 232, 320, 321, 396, 399, 513, 529, 558], "inferno": 509, "infil": 395, "infin": 515, "influenc": 515, "info": [16, 67, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 82, 85, 86, 88, 92, 95, 101, 103, 104, 105, 106, 107, 109, 110, 111, 112, 158, 164, 166, 168, 295, 299, 329, 410, 411, 416, 427, 430, 432, 433, 443, 444, 446, 453, 454, 457, 475, 480, 481, 483, 487, 495, 499, 501, 502, 503, 509, 513, 519, 520, 521, 524, 527, 529, 609], "info_dict": [104, 107, 111, 112, 295, 299, 388, 446, 464, 503], "info_t": [101, 470, 474, 475, 477, 483, 496, 503, 511, 546], "infodict": 388, "inform": [11, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 56, 67, 69, 71, 72, 74, 75, 76, 78, 79, 80, 84, 85, 87, 89, 91, 92, 95, 100, 101, 103, 104, 106, 107, 111, 112, 126, 127, 128, 154, 158, 164, 166, 168, 169, 172, 177, 178, 183, 184, 203, 215, 220, 222, 224, 225, 226, 227, 228, 229, 231, 232, 234, 236, 237, 239, 240, 241, 242, 243, 244, 245, 246, 248, 249, 255, 256, 257, 258, 259, 261, 262, 267, 268, 269, 271, 274, 275, 276, 278, 279, 282, 283, 285, 300, 306, 320, 321, 329, 345, 376, 377, 395, 396, 399, 400, 405, 407, 408, 409, 410, 411, 415, 419, 420, 423, 424, 425, 426, 428, 433, 434, 435, 443, 445, 446, 449, 451, 457, 463, 464, 469, 472, 475, 476, 484, 487, 488, 492, 499, 500, 503, 504, 505, 508, 509, 512, 513, 518, 519, 520, 521, 529, 530, 532, 541, 542, 543, 544, 546, 559, 608, 609, 612], "information_gain_bit": 513, "infrar": 232, "infrastructur": [428, 436, 449, 460, 463], "ingredi": [420, 501], "inher": 513, "inherit": [88, 92, 298, 395, 405, 407, 410, 415, 420, 423, 424, 444, 449, 456, 503, 507, 557, 558], "init": [19, 20, 26, 88, 92, 125, 130, 137, 174, 224, 225, 226, 227, 228, 229, 231, 232, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 251, 253, 255, 258, 259, 260, 261, 262, 263, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 278, 279, 280, 281, 282, 283, 284, 285, 333, 345, 407, 426, 446, 461, 463, 464, 465, 478, 489, 495, 502, 503, 504, 532], "initi": [15, 16, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 42, 53, 65, 84, 87, 88, 91, 92, 106, 126, 127, 128, 137, 195, 196, 198, 201, 202, 205, 208, 230, 254, 256, 257, 319, 395, 400, 405, 406, 407, 411, 425, 451, 468, 477, 481, 483, 484, 486, 487, 488, 492, 497, 502, 503, 509, 512, 529, 530, 532, 541, 543, 593, 608], "initialis": [19, 20, 26, 33, 42, 45, 46, 47, 104, 105, 107, 110, 111, 112, 156, 167, 170, 197, 198, 200, 206, 209, 210, 224, 225, 228, 229, 232, 234, 235, 236, 237, 241, 242, 244, 245, 246, 247, 248, 251, 255, 257, 259, 260, 261, 262, 266, 269, 271, 273, 274, 275, 276, 279, 281, 283, 284, 298, 343, 345, 348, 349, 350, 351, 395, 418, 513, 515], "initiliaz": 425, "inject": [477, 492], "inlin": [400, 468, 470, 472, 474, 475, 476, 477, 478, 480, 481, 483, 489, 492, 494, 495, 496, 497, 499, 501, 502, 503, 505, 509, 510, 511, 512, 517, 518, 519, 521, 529, 530, 532], "inner": [44, 52, 53, 130, 172, 182, 268, 481, 532, 570], "inner_height": [555, 559], "inner_width": [555, 559], "input": [16, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 41, 84, 86, 87, 88, 91, 92, 104, 106, 107, 110, 121, 123, 125, 126, 127, 128, 129, 132, 133, 137, 141, 142, 143, 144, 146, 150, 155, 156, 158, 165, 166, 167, 168, 169, 170, 172, 174, 178, 180, 182, 196, 197, 198, 200, 202, 203, 204, 205, 206, 207, 208, 209, 210, 219, 221, 230, 245, 254, 281, 282, 283, 298, 319, 332, 342, 345, 364, 366, 388, 390, 401, 403, 405, 406, 407, 408, 409, 410, 411, 415, 417, 426, 434, 444, 449, 452, 459, 463, 465, 474, 477, 487, 488, 497, 504, 509, 515, 544, 558, 559, 610], "input_map": [113, 118], "input_shap": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40], "input_unit": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40], "input_units_allow_dimensionless": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40], "input_units_equival": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40], "input_units_strict": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40], "inputs_map": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40], "ins": 463, "insensit": 204, "insert": [88, 92, 93, 101, 254, 422, 444, 513, 612], "insert_row": [88, 92], "insertion_order_mww_test": [425, 513], "inset": 450, "insid": [50, 83, 104, 111, 117, 120, 154, 180, 196, 197, 198, 200, 205, 208, 209, 210, 230, 254, 270, 384, 388, 395, 396, 398, 409, 411, 415, 420, 449, 468, 474, 477, 480, 483, 485, 492, 496, 503, 508, 510, 511, 512, 518, 520, 543, 553, 555, 556, 559], "inside_geom": 510, "insight": 433, "inspect": [407, 411, 415, 434, 474, 476, 483, 487, 488, 505, 509, 511, 518, 519], "inspir": [395, 420, 427], "instal": [88, 92, 394, 395, 398, 402, 403, 404, 412, 427, 428, 429, 432, 434, 435, 438, 439, 449, 453, 456, 457, 458, 465, 468, 470, 474, 475, 476, 477, 478, 480, 481, 483, 484, 485, 486, 487, 488, 489, 494, 495, 496, 497, 501, 502, 503, 505, 508, 509, 510, 511, 512, 513, 515, 517, 518, 519, 520, 521, 524, 529, 530, 532, 546, 609], "instanc": [16, 19, 20, 26, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 50, 84, 85, 86, 87, 88, 89, 91, 92, 93, 106, 123, 127, 128, 129, 131, 133, 134, 169, 171, 179, 195, 196, 197, 198, 199, 200, 201, 202, 205, 206, 207, 208, 209, 210, 224, 225, 226, 227, 228, 229, 231, 232, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 251, 252, 253, 255, 258, 259, 260, 261, 262, 263, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 278, 279, 280, 281, 282, 283, 284, 285, 293, 320, 321, 339, 345, 382, 384, 385, 386, 389, 391, 395, 401, 406, 407, 410, 411, 418, 420, 423, 426, 449, 472, 474, 477, 489, 502, 504, 505, 508, 510, 511, 512, 513, 532, 536, 546, 558, 559, 584], "instanti": [15, 16, 19, 20, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 84, 87, 91, 106, 127, 197, 198, 200, 202, 209, 210, 406, 411, 426, 470, 475, 502, 503, 509, 512, 515, 529], "instead": [16, 19, 20, 26, 84, 85, 87, 88, 91, 92, 104, 106, 107, 111, 112, 116, 127, 184, 224, 225, 226, 227, 228, 229, 230, 231, 232, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 251, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 278, 279, 280, 281, 282, 283, 284, 285, 395, 398, 400, 402, 403, 405, 406, 409, 410, 411, 412, 413, 414, 416, 417, 418, 419, 424, 429, 430, 432, 439, 442, 445, 446, 459, 463, 465, 469, 476, 483, 487, 492, 494, 496, 497, 502, 503, 507, 508, 509, 512, 515, 543, 550, 551, 558, 559, 609], "instruct": [395, 398, 404, 412, 427, 429, 430, 438, 449, 453, 457, 487, 518], "instrument": [6, 83, 96, 110, 157, 161, 162, 238, 320, 395, 405, 406, 407, 408, 410, 416, 420, 430, 434, 443, 446, 458, 459, 460, 467, 470, 472, 474, 475, 478, 483, 490, 491, 497, 499, 503, 505, 507, 508, 511, 512, 514, 515, 518, 519, 520, 521, 522, 524, 529, 530, 542, 543, 544, 548, 550, 552, 607, 608], "int": [16, 17, 18, 19, 20, 21, 22, 24, 25, 26, 27, 33, 34, 38, 42, 45, 46, 47, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 69, 82, 83, 84, 85, 87, 88, 89, 91, 92, 94, 95, 102, 104, 105, 106, 107, 110, 111, 112, 114, 115, 121, 123, 127, 128, 129, 130, 133, 134, 135, 137, 145, 146, 151, 152, 153, 154, 155, 156, 157, 158, 159, 161, 162, 164, 165, 166, 167, 168, 169, 170, 173, 174, 177, 180, 184, 185, 190, 195, 196, 197, 198, 199, 200, 201, 202, 205, 206, 207, 208, 209, 210, 215, 217, 218, 219, 221, 222, 223, 224, 225, 227, 228, 229, 231, 232, 234, 235, 236, 237, 240, 241, 242, 243, 244, 245, 246, 247, 248, 251, 255, 256, 257, 258, 259, 260, 261, 262, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 278, 279, 281, 282, 283, 284, 289, 291, 293, 295, 298, 299, 303, 304, 305, 307, 312, 313, 314, 319, 332, 333, 339, 343, 345, 348, 349, 350, 351, 353, 354, 382, 388, 395, 409, 456, 505, 536], "int64": [104, 107, 111, 112, 113, 118, 125, 137, 544], "int_": [17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 224, 225, 228, 232, 234, 235, 236, 247, 248, 251, 255, 257, 259, 260, 261, 266, 271, 273, 274, 275, 276, 279, 283, 551, 564], "int_flux": 501, "integ": [69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 88, 92, 93, 94, 101, 104, 107, 111, 112, 126, 128, 129, 130, 133, 137, 145, 146, 155, 156, 162, 167, 170, 173, 195, 196, 197, 198, 200, 201, 202, 205, 206, 208, 209, 210, 219, 221, 230, 254, 319, 339, 345, 395, 401, 409, 558], "integr": [17, 18, 19, 20, 21, 22, 24, 25, 26, 27, 31, 32, 37, 51, 103, 104, 107, 111, 112, 126, 128, 131, 133, 144, 151, 152, 153, 154, 157, 158, 159, 161, 164, 166, 168, 169, 172, 197, 198, 200, 202, 206, 209, 210, 211, 212, 222, 224, 225, 227, 228, 229, 230, 231, 232, 234, 235, 236, 237, 240, 241, 242, 243, 244, 245, 246, 247, 248, 251, 254, 255, 256, 257, 258, 259, 260, 261, 262, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 278, 279, 281, 282, 283, 284, 286, 287, 289, 332, 394, 402, 404, 406, 408, 409, 410, 412, 413, 416, 420, 422, 425, 437, 439, 440, 444, 445, 449, 454, 455, 456, 457, 458, 459, 460, 463, 474, 476, 477, 480, 496, 499, 501, 502, 503, 509, 510, 512, 513, 532, 534, 542, 544, 550, 566, 587], "integral_error": [19, 20, 26, 224, 225, 228, 232, 234, 235, 236, 241, 247, 248, 251, 255, 257, 259, 260, 261, 266, 271, 273, 274, 275, 276, 279, 283, 413, 446, 499], "integral_flux": 499, "integral_flux_imag": 450, "integrate_geom": [226, 227, 231, 240, 243, 256, 258, 267, 268, 270, 272, 278, 282, 449, 462, 464], "integrate_log_log": [151, 152, 153, 154, 157, 158, 159, 161, 164, 166, 168, 169], "integrate_spectrum": [19, 20, 26, 224, 225, 228, 232, 234, 235, 236, 247, 248, 251, 255, 257, 259, 260, 261, 266, 271, 273, 274, 275, 276, 279, 283, 440, 446], "integrate_spectrum_separ": [17, 18, 21, 22, 24, 25, 27], "intend": [88, 92, 319, 320, 321, 405, 415, 424, 425, 507], "intens": [197, 198, 200, 206, 209, 210, 215, 244, 405, 509, 542], "intent": 400, "interact": [19, 20, 88, 92, 167, 170, 197, 198, 200, 206, 209, 210, 218, 224, 227, 228, 231, 232, 234, 235, 236, 237, 240, 241, 242, 243, 244, 245, 246, 247, 248, 251, 258, 259, 260, 261, 262, 266, 267, 268, 269, 271, 274, 275, 276, 281, 282, 394, 395, 396, 404, 405, 406, 407, 411, 416, 419, 434, 443, 469, 483, 492, 505, 509, 511, 512, 513, 524, 525, 529, 530, 555, 558, 584, 609], "interchang": [320, 321, 558], "interest": [117, 120, 129, 133, 215, 293, 396, 400, 408, 409, 413, 416, 428, 472, 483, 487, 489, 499, 502, 503, 505, 508, 510, 513, 514, 518, 519, 532, 543, 544, 584, 608, 611, 612], "interfac": [6, 11, 15, 19, 20, 88, 92, 213, 215, 218, 219, 221, 222, 224, 227, 228, 231, 232, 234, 235, 236, 237, 240, 241, 242, 243, 244, 245, 246, 247, 248, 251, 258, 259, 260, 261, 262, 266, 267, 268, 269, 271, 274, 275, 276, 281, 282, 395, 399, 400, 401, 405, 407, 408, 410, 412, 413, 414, 415, 416, 425, 426, 439, 442, 444, 445, 446, 449, 453, 456, 457, 463, 467, 469, 475, 478, 480, 483, 492, 494, 505, 512, 518, 524, 530, 531, 532, 533, 542, 543, 546, 554, 557, 584, 606, 607, 608, 609], "interfer": 427, "intermedi": [208, 404, 411, 415, 422, 426, 434, 470, 495], "intern": [15, 19, 20, 26, 88, 92, 126, 128, 129, 130, 134, 140, 141, 142, 143, 174, 180, 205, 224, 225, 228, 232, 234, 235, 236, 241, 247, 248, 251, 255, 257, 259, 260, 261, 266, 271, 273, 274, 275, 276, 279, 283, 289, 319, 320, 321, 333, 395, 407, 409, 411, 414, 415, 420, 449, 451, 460, 463, 468, 475, 483, 494, 500, 503, 509, 521, 529, 542, 546, 604], "interoper": 415, "interp": [19, 20, 159, 197, 198, 200, 202, 206, 207, 209, 210, 218, 220, 224, 227, 228, 231, 232, 234, 235, 236, 237, 240, 241, 242, 243, 244, 245, 246, 247, 248, 251, 256, 257, 258, 259, 260, 261, 262, 266, 267, 268, 269, 271, 274, 275, 276, 281, 282, 334, 390, 419, 424, 462, 464, 477, 484, 488, 492, 496, 507, 508, 509, 512, 517, 519, 520, 558, 559, 584, 585], "interp1": 509, "interp1d": 334, "interp2": 509, "interp_by_coord": [197, 198, 200, 206, 209, 210, 282, 460, 509], "interp_by_pix": [197, 198, 200, 206, 209, 210, 278, 279, 509], "interp_kwarg": [68, 151, 152, 153, 154, 157, 158, 159, 161, 164, 166, 168, 169, 232, 278, 279, 282, 283, 395, 507, 519, 593], "interp_map": [197, 198, 200, 206, 209, 210], "interp_missing_data": [151, 152, 153, 154, 157, 158, 159, 161, 164, 166, 168, 169], "interp_param": 395, "interp_scal": [103, 294, 334], "interp_to_geom": [197, 198, 200, 206, 209, 210, 446, 462, 509, 519, 546], "interp_weight": 196, "interpol": [26, 95, 103, 151, 152, 153, 154, 155, 156, 157, 158, 159, 161, 162, 164, 166, 167, 168, 169, 170, 177, 196, 197, 198, 200, 202, 206, 207, 209, 210, 232, 245, 256, 257, 278, 279, 281, 282, 283, 294, 333, 334, 335, 394, 406, 407, 408, 426, 439, 444, 449, 451, 454, 457, 459, 460, 461, 462, 463, 464, 474, 488, 507, 508, 512, 519, 520, 546, 554, 558, 593], "interpolatedunivariatesplin": 281, "interpolation_scal": [218, 220], "interpret": [92, 104, 107, 131, 145, 146, 198, 202, 208, 209, 210, 339, 413, 424, 509, 544, 559], "intersect": [90, 180, 181, 185, 205, 409, 495], "interspers": 400, "interstellar": [45, 487], "intertwin": 426, "interv": [52, 53, 78, 82, 83, 86, 89, 90, 92, 93, 101, 103, 105, 110, 128, 133, 178, 194, 202, 207, 215, 229, 237, 242, 244, 245, 246, 262, 269, 281, 284, 404, 405, 409, 410, 413, 420, 430, 443, 445, 446, 449, 458, 459, 464, 465, 494, 496, 499, 505, 509, 520, 530, 543, 558, 608, 611], "interval_edg": 207, "intervent": [425, 513], "intrins": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 255, 305, 406, 410, 426], "intrinsic_model": 469, "intro": 425, "intro_map": 458, "introduc": [19, 20, 197, 198, 200, 202, 206, 209, 210, 218, 224, 227, 228, 231, 232, 234, 235, 236, 237, 240, 241, 242, 243, 244, 245, 246, 247, 248, 251, 258, 259, 260, 261, 262, 266, 267, 268, 269, 271, 274, 275, 276, 281, 282, 395, 402, 403, 405, 407, 408, 409, 410, 412, 416, 418, 421, 424, 425, 426, 440, 442, 443, 445, 446, 449, 451, 452, 456, 457, 458, 460, 463, 464, 465, 486, 500, 508, 512, 513, 559, 565, 609, 612], "introduct": [398, 417, 418, 419, 425, 439, 443, 444, 445, 446, 465, 472, 475, 512, 522, 529, 530, 535], "introductori": 500, "introspect": 319, "intrus": 415, "intuit": [417, 612], "invalid": [380, 395, 409, 423, 424, 449, 465, 476, 481, 487, 521], "invalid_pixel": 510, "invers": [19, 20, 26, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 208, 218, 220, 224, 225, 228, 232, 234, 235, 236, 241, 244, 247, 248, 251, 255, 257, 259, 260, 261, 266, 271, 273, 274, 275, 276, 279, 283, 295, 298, 299, 343, 350, 408, 425, 487, 510, 512, 515, 584], "inverse_al": [19, 20, 26, 224, 225, 228, 232, 234, 235, 236, 241, 247, 248, 251, 255, 257, 259, 260, 261, 266, 271, 273, 274, 275, 276, 279, 283], "inverse_cdf": [425, 487], "inverse_transform": [218, 220], "inversecdf": 408, "inversecdfsampl": [408, 441], "inversecompton": [255, 584], "invert": [92, 196, 208, 532], "invest": 398, "investig": [486, 495, 499, 513], "involv": [88, 92, 104, 107, 111, 112, 395, 400, 409, 411, 413, 415, 418, 478, 609], "io": [13, 83, 86, 88, 92, 129, 190, 200, 205, 215, 283, 404, 416, 425, 426, 428, 440, 443, 455, 459, 463, 505, 507, 509, 513, 518, 543, 546, 557, 559], "iop": 275, "iopscienc": 275, "ipix": 196, "ipykernel": [430, 432, 434], "ipynb": [403, 416, 440, 443, 468, 469, 470, 472, 474, 475, 476, 477, 478, 480, 481, 483, 484, 485, 486, 487, 488, 489, 492, 494, 495, 496, 497, 499, 500, 501, 502, 503, 504, 505, 507, 508, 509, 510, 511, 512, 513, 514, 515, 517, 518, 519, 520, 521, 527, 529, 530, 532, 563, 564, 565, 566, 567, 568, 569, 570, 571, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 596, 597, 598, 599, 600, 601, 602, 603, 604], "ipynb_to_galleri": 395, "ipython": [88, 92, 394, 395, 411, 412, 415, 429, 433, 441, 468, 470, 472, 474, 475, 476, 477, 478, 480, 481, 483, 484, 485, 486, 487, 488, 489, 492, 494, 495, 496, 497, 501, 502, 503, 504, 505, 508, 509, 510, 511, 512, 515, 517, 518, 519, 520, 521, 524, 525, 529, 530, 532, 545, 609], "ipython3": 431, "ipywidget": 509, "irap": 416, "irf": [6, 82, 89, 97, 104, 105, 107, 110, 111, 112, 113, 114, 115, 116, 118, 119, 137, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 177, 183, 184, 186, 187, 188, 190, 192, 193, 196, 205, 208, 270, 318, 395, 396, 401, 405, 406, 407, 408, 411, 414, 416, 417, 418, 424, 426, 430, 438, 440, 443, 445, 446, 449, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 462, 463, 464, 465, 467, 469, 470, 472, 474, 475, 476, 477, 478, 480, 483, 487, 488, 492, 494, 496, 506, 508, 510, 514, 515, 516, 519, 520, 521, 522, 524, 529, 530, 542, 543, 546, 548, 549, 550, 552, 553, 607, 608], "irf_dict": 171, "irf_dl3_hdu_specif": 507, "irf_fil": [89, 152, 156, 157, 158, 167, 468, 477, 492, 496, 507, 518], "irf_filenam": [487, 488, 507, 518], "irf_map": [155, 156, 162, 167, 170], "irf_path": 487, "irfmap": [155, 156, 167, 170, 430, 446, 546], "irfmetadata": [423, 426], "irfmodel": 406, "irfs1": 518, "irfs2": 518, "irfs_path": 82, "irfstack": [446, 455], "irreduc": 551, "irregular": [196, 208, 558], "irrespect": [408, 483, 509, 558], "is_align": [196, 202, 207, 208], "is_all_point_sky_region": 205, "is_all_same_energy_shap": 101, "is_all_same_shap": 101, "is_all_same_typ": 101, "is_allclos": [151, 152, 153, 154, 157, 158, 159, 161, 164, 166, 168, 169, 196, 197, 198, 199, 200, 201, 202, 205, 206, 207, 208, 209, 210], "is_allski": [195, 196, 205, 208], "is_bkg": 109, "is_contigu": [207, 509], "is_convertible_to_flux_sed_typ": [126, 128], "is_energy_axi": 202, "is_energy_depend": [226, 227, 229, 231, 237, 240, 242, 243, 244, 245, 246, 256, 258, 262, 267, 268, 269, 272, 278, 281, 282, 284, 462, 512], "is_equivalent_fram": [320, 321], "is_fixed_rad_max": 169, "is_flat": [195, 196, 201, 205, 208], "is_frame_attr_default": [320, 321], "is_hpx": [196, 205, 208], "is_imag": [195, 196, 205, 208], "is_mask": [197, 198, 200, 206, 209, 210], "is_norm": [424, 451, 464], "is_norm_spectral_model": [19, 20, 26, 224, 225, 228, 232, 234, 235, 236, 241, 247, 248, 251, 255, 257, 259, 260, 261, 266, 271, 273, 274, 275, 276, 279, 283, 449, 512], "is_nul": 509, "is_pointed_observ": 83, "is_pointlik": [71, 74, 75, 76, 78, 151, 152, 153, 154, 157, 158, 159, 161, 164, 166, 168, 169, 449], "is_rang": 83, "is_region": [196, 205, 208], "is_regular": [196, 205, 208], "is_transformable_to": [320, 321], "is_ul": [67, 126, 128, 449, 464, 475, 502, 504, 532], "is_unidimension": 201, "isdefault": [320, 321], "isequiv": [320, 321], "isf": [505, 611], "isinst": [395, 406, 409, 419, 423, 424, 425], "ism": [52, 53, 584], "isn": [320, 321, 402, 409, 411, 414, 428, 485, 609], "isnan": [509, 510], "iso": [89, 128, 207, 212, 463, 496, 511, 519, 558, 603], "iso_p8r2_source_v6_v06": [511, 519], "isol": [30, 31, 32, 409, 429, 510], "isot": [375, 613], "isotherm": [22, 534], "isotrop": [47, 102, 227, 288, 511], "isotropi": 551, "isotropic_fil": 102, "isscalar": [320, 321], "issu": [19, 20, 26, 88, 92, 224, 225, 228, 232, 234, 235, 236, 241, 247, 248, 251, 255, 257, 259, 260, 261, 266, 271, 273, 274, 275, 276, 279, 283, 395, 396, 398, 403, 404, 406, 407, 409, 412, 415, 416, 421, 422, 423, 424, 427, 430, 431, 432, 435, 436, 439, 451, 452, 454, 455, 456, 457, 458, 460, 461, 462, 463, 464, 485, 510, 513, 518, 542, 546, 609, 610], "isyf0cgi": 499, "item": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 88, 92, 93, 101, 204, 254, 416, 423], "iter": [88, 92, 93, 101, 126, 128, 135, 137, 197, 198, 200, 201, 202, 204, 206, 207, 209, 210, 254, 398, 401, 403, 411, 450, 478, 496, 513], "iter_by_axi": [126, 128, 197, 198, 200, 206, 209, 210], "iter_by_axis_data": 206, "iter_by_coord": 441, "iter_by_edg": [202, 207], "iter_by_imag": [197, 198, 200, 206, 209, 210, 458], "iter_by_image_data": [197, 198, 200, 206, 209, 210, 509], "iter_by_image_index": [197, 198, 200, 206, 209, 210], "iter_by_pix": 441, "iter_with_reshap": 201, "itercol": [88, 92], "iterrow": [88, 92], "itertool": 505, "its": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 77, 104, 107, 111, 112, 123, 126, 128, 173, 174, 183, 196, 202, 204, 222, 231, 232, 293, 320, 321, 395, 398, 401, 404, 405, 407, 410, 411, 412, 414, 415, 420, 422, 423, 426, 428, 431, 449, 463, 464, 465, 470, 475, 476, 480, 487, 488, 494, 495, 500, 502, 504, 505, 508, 509, 510, 511, 512, 513, 515, 529, 532, 535, 551, 553, 555, 557, 558, 559, 608, 611], "itself": [88, 92, 394, 395, 410, 422, 470, 494, 495, 497, 515, 609], "ivoa": [395, 415, 464], "j": [19, 20, 23, 104, 111, 131, 139, 396, 398, 542], "j0001": [502, 532], "j0002": [502, 532], "j0003": [502, 532], "j0006": 502, "j0007": 532, "j0008": [502, 532], "j0009": 532, "j0010": 502, "j0013": 502, "j0021": 502, "j0022": 502, "j0025": 502, "j0031": 502, "j0349": 502, "j0521": 474, "j0534": [502, 532], "j0633": 532, "j0835": [472, 532], "j0851": 502, "j1036": 502, "j1104": [502, 532], "j1506": 472, "j1507": 472, "j1513": 502, "j1514": 502, "j1555": 532, "j1653": 502, "j1713": 470, "j1731": 511, "j1732": 511, "j1741": 511, "j1744": 511, "j1745": 511, "j1746": 511, "j1747": 511, "j1748": 511, "j1753": 511, "j1800": 511, "j1801": 511, "j1802": 511, "j1809": 511, "j1811": 511, "j1824": 502, "j1825": 486, "j1843": 67, "j1844": 67, "j2028": 502, "j2158": 502, "j2347": 532, "j2350": 532, "j2351": 532, "j2352": 532, "j2356": 532, "j2357": [502, 532], "j2358": [502, 532], "j2359": [502, 532], "j_": 23, "jackson": [88, 92], "jacob": [439, 458], "jacobian": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 445], "jalel": [446, 449], "jan": [400, 401, 404, 407, 412, 417, 436], "jana": 464, "januari": [402, 404, 421], "jargon": 430, "jason": 439, "javascript": [88, 92], "jax": [413, 426], "jbernet": 464, "jean": [457, 458], "jeffrei": 515, "jeltema": 534, "jep": 400, "jet": 386, "jfact": 501, "jfact_decai": 501, "jfact_map": 501, "jfactor": [19, 20, 463], "jfactori": 501, "jj": 213, "jk": [104, 111, 542], "jkl": 542, "jl": 542, "jo": [88, 92], "job": [94, 129, 130, 133, 137, 173, 451], "johann": [442, 449, 453, 454, 455, 456, 457, 458], "johannesbuchn": 425, "john": [88, 92, 425], "join": [397, 406, 407, 435, 518], "joint": [101, 111, 112, 123, 134, 138, 139, 148, 150, 215, 293, 403, 404, 407, 411, 416, 418, 425, 426, 430, 439, 440, 442, 443, 458, 459, 465, 467, 470, 472, 474, 475, 476, 478, 486, 490, 491, 496, 503, 504, 505, 508, 512, 513, 514, 515, 519, 524, 529, 544, 546, 606, 607, 608], "joint_fit": 497, "joint_result": 497, "jointli": [514, 520], "jonathan": [453, 454], "jose": [449, 451, 457], "joshi": 449, "jos\u00e9": [403, 411, 415, 416, 438, 439, 440, 441, 442, 443, 444, 445, 446, 449, 457, 458, 459], "journal": [312, 314, 422], "jouvin": [439, 441, 442, 443, 446, 454, 455, 456, 457, 458], "jqueri": [88, 92], "jskwarg": [88, 92], "json": [16, 84, 87, 91, 106, 127, 415, 427, 451, 453, 457], "json_data": [16, 84, 87, 91, 106, 127], "json_encode_earth_loc": 91, "json_encode_tim": 87, "json_schema": [16, 84, 87, 91, 106, 127], "json_schema_input_typ": [87, 91], "jsonschema": [412, 442, 443], "jsviewer": [88, 92, 485], "juan": 464, "jul": [401, 410, 412, 414, 436], "juli": [401, 404, 409, 411, 412, 414, 419, 421, 423, 495, 499], "julia": 464, "julian": 613, "julien": [455, 456, 457], "jun": [409, 411, 412, 418, 419, 435], "june": [409, 413, 436], "junior": [66, 416], "jupyt": [394, 402, 411, 412, 416, 429, 433, 435, 440, 455, 456, 457, 459, 468, 469, 470, 472, 474, 475, 476, 477, 478, 480, 481, 483, 484, 485, 486, 487, 488, 489, 492, 494, 495, 496, 497, 499, 500, 501, 502, 503, 504, 505, 507, 508, 509, 510, 511, 512, 513, 514, 515, 517, 518, 519, 520, 521, 524, 525, 527, 529, 530, 532, 560, 563, 564, 565, 566, 567, 568, 569, 570, 571, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 596, 597, 598, 599, 600, 601, 602, 603, 604, 609], "jupyterlab": [394, 412, 416, 434, 468, 470, 474, 475, 476, 477, 478, 480, 481, 483, 484, 485, 486, 487, 488, 489, 494, 495, 496, 497, 501, 502, 503, 505, 508, 509, 510, 511, 512, 515, 517, 518, 519, 520, 521, 529, 530, 532], "jupytext": 416, "just": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 83, 86, 157, 320, 321, 369, 395, 396, 397, 398, 400, 403, 405, 409, 411, 412, 413, 416, 428, 429, 431, 457, 459, 469, 474, 475, 477, 483, 485, 487, 494, 495, 497, 500, 503, 509, 513, 519, 520, 524, 529, 532, 543, 559, 609], "juypter": 411, "jyear": [88, 92], "k": [19, 33, 52, 53, 104, 111, 204, 228, 281, 345, 472, 474, 476, 502, 505, 509, 511, 513, 519, 542, 559, 564, 577, 584], "kai": [457, 458], "kaori": 441, "kaspi": [30, 31, 32, 39, 45], "katrin": [424, 462, 463, 464], "kb": 403, "kde": 513, "keep": [13, 88, 92, 101, 126, 165, 197, 198, 200, 206, 209, 210, 215, 395, 396, 398, 400, 401, 402, 403, 409, 412, 413, 414, 415, 416, 419, 420, 425, 426, 447, 457, 480, 481, 486, 492, 499, 505, 511, 519], "keep_byteord": [88, 92], "keep_column": [88, 92], "keep_mc_id": [105, 110], "keepdim": [165, 167, 170, 197, 198, 200, 206, 209, 210, 438, 443, 508], "kei": [16, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 69, 77, 82, 84, 87, 88, 90, 91, 92, 104, 106, 107, 111, 112, 121, 123, 127, 134, 204, 215, 320, 321, 357, 362, 363, 380, 398, 403, 405, 412, 418, 420, 423, 425, 435, 458, 469, 503, 512, 513, 574], "kept": [90, 104, 107, 111, 112, 126, 128, 129, 133, 151, 152, 153, 154, 155, 156, 157, 158, 159, 161, 162, 164, 166, 167, 168, 169, 170, 195, 196, 197, 198, 200, 201, 205, 206, 208, 209, 210, 395, 401, 415, 416, 420, 469, 499, 544], "kernel": [104, 107, 111, 112, 121, 125, 131, 132, 137, 154, 155, 156, 165, 167, 170, 172, 177, 182, 184, 187, 198, 208, 210, 401, 423, 430, 432, 444, 445, 450, 455, 459, 460, 465, 478, 481, 497, 508, 509, 510, 519, 532, 542, 546, 550], "kernel_width": [137, 478, 485], "kernelbackgroundestim": 445, "kernelbackgroundmapestim": 417, "kev": [109, 137, 202, 478, 503, 504, 559], "keyboard": 434, "keyerror": [92, 204, 420], "keyword": [16, 19, 20, 26, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 68, 82, 83, 84, 86, 87, 88, 89, 91, 92, 96, 103, 104, 106, 107, 111, 112, 127, 128, 130, 131, 149, 150, 151, 152, 153, 154, 157, 158, 159, 161, 164, 165, 166, 167, 168, 169, 170, 195, 196, 197, 198, 200, 201, 202, 204, 205, 206, 207, 208, 209, 210, 213, 215, 218, 224, 225, 226, 227, 228, 229, 230, 231, 232, 234, 235, 236, 237, 238, 240, 241, 242, 243, 244, 245, 246, 247, 248, 251, 254, 255, 256, 257, 258, 259, 260, 261, 262, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 278, 279, 280, 281, 282, 283, 284, 288, 294, 298, 320, 321, 333, 341, 342, 363, 375, 377, 378, 382, 383, 384, 388, 389, 390, 391, 392, 423, 445, 449, 452, 460, 461, 476, 487, 488, 503, 509, 513, 520, 544, 559, 571], "kg": 52, "khelifi": [425, 441, 443, 446, 449, 452, 456, 457, 458, 460, 461], "kh\u00e9lifi": [422, 426, 460, 462, 463, 464, 465], "kill": 427, "kind": [88, 92, 369, 406, 407, 408, 413, 414, 415, 419, 422, 458], "kinet": 44, "king": [166, 442, 453, 454, 455, 456, 457, 458, 507, 552], "kirsti": [462, 463, 464, 465], "kj5rqf4m": 499, "kl": [513, 542], "klepser": 453, "klj": 499, "km": [32, 37], "km2": 518, "km2a": [57, 70], "know": [222, 396, 398, 400, 404, 409, 411, 412, 420, 425, 428, 440, 457, 458, 459, 485, 488, 501, 507, 508, 509, 518, 520, 521, 609], "knowledg": [220, 239, 249, 285, 415, 424, 425, 434, 472, 477, 484, 486, 489, 492, 494, 505, 508, 509, 511, 513, 515], "known": [135, 295, 299, 319, 408, 436, 474, 478, 481, 486, 494, 508, 509, 510, 513, 517, 532, 546, 556, 609, 610, 611], "koenig": [298, 465], "konig": [298, 465], "konrad": 464, "kornecki": 464, "kovalev": 500, "kpc": [17, 18, 21, 22, 24, 25, 27, 29, 33, 34, 38, 255, 319, 324, 501, 502, 540, 584], "kurt": 464, "kwarg": [19, 20, 26, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 53, 56, 58, 59, 60, 61, 62, 63, 64, 65, 66, 83, 86, 88, 89, 92, 103, 104, 107, 111, 112, 128, 129, 130, 131, 133, 149, 151, 152, 153, 154, 157, 158, 159, 161, 164, 165, 166, 167, 168, 169, 170, 179, 195, 196, 197, 198, 199, 200, 201, 202, 204, 205, 206, 207, 208, 209, 210, 213, 214, 215, 217, 224, 225, 226, 227, 228, 229, 230, 231, 232, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 278, 279, 280, 281, 282, 283, 284, 285, 288, 294, 320, 321, 333, 344, 369, 382, 383, 384, 387, 389, 390, 391, 392, 395, 406, 423, 424, 462, 472, 476, 487, 497, 508, 521, 597], "kwargs_ax": [388, 481, 483], "kwargs_background": [111, 112], "kwargs_colorbar": [151, 152, 154, 157, 158, 159, 164, 166, 168, 210, 383], "kwargs_count": [111, 112], "kwargs_excess": [111, 112], "kwargs_extens": [226, 227, 231, 240, 243, 256, 258, 267, 268, 272, 278, 282, 486], "kwargs_fit": [111, 112, 388], "kwargs_fp": 103, "kwargs_hist": [388, 481, 483], "kwargs_list": 204, "kwargs_model": 103, "kwargs_npred_sign": [111, 112], "kwargs_point": [205, 230, 254, 476], "kwargs_posit": [226, 227, 231, 240, 243, 256, 258, 267, 268, 272, 278, 282, 486], "kwargs_residu": [103, 111, 112], "kwargs_saf": [111, 112], "kwargs_spati": [104, 107, 111, 112, 483, 530], "kwargs_spectr": [104, 107, 111, 112, 483, 530], "kwargs_spectrum": [103, 111, 112], "l": [23, 26, 51, 54, 103, 104, 111, 112, 177, 296, 297, 392, 396, 409, 419, 422, 469, 470, 474, 475, 476, 477, 478, 480, 481, 483, 485, 486, 492, 496, 497, 502, 503, 505, 508, 509, 510, 512, 513, 514, 515, 518, 519, 529, 530, 532, 542, 546, 559, 584, 593, 608, 610, 611, 612], "l06": [48, 536], "l_": [52, 53], "l_0": [51, 539, 564, 565], "l_snr": 44, "la": 455, "lab": [422, 430, 432, 434, 457], "label": [93, 199, 202, 207, 219, 221, 230, 254, 317, 383, 384, 389, 392, 395, 396, 399, 404, 408, 409, 427, 428, 449, 451, 460, 461, 463, 465, 468, 469, 472, 474, 476, 481, 483, 484, 488, 489, 494, 495, 497, 500, 501, 505, 509, 512, 514, 515, 532, 539, 540, 548, 574, 580, 583, 584, 588, 593], "label_axi": [199, 509], "label_axis2": 509, "labelcolor": 468, "labelmapaxi": [449, 463, 465], "lack": [204, 410, 497], "lafferti": [437, 608], "lafferty1994": 608, "lai": 510, "lambda": [67, 235, 236, 298, 388, 502, 518, 578, 611], "lambda_": [235, 236, 293, 472, 474, 483, 578, 580], "lancast": [139, 148], "land": 428, "landscap": [425, 513], "langl": 19, "languag": [402, 414], "laplac": [243, 566], "laptop": 425, "lar": [411, 438, 439, 440, 456, 457, 458, 461, 463, 465], "larg": [67, 88, 92, 197, 198, 200, 206, 209, 210, 278, 280, 282, 320, 321, 395, 398, 400, 401, 409, 416, 417, 425, 439, 449, 458, 459, 464, 468, 474, 481, 495, 502, 510, 513, 518, 519, 520, 532, 542, 544, 546, 547, 553, 559, 566, 606, 609, 614], "large_scale_compon": [67, 502], "larger": [27, 136, 155, 156, 162, 167, 170, 293, 304, 396, 403, 414, 463, 465, 468, 470, 474, 503, 508, 509, 510, 515, 543, 559, 566, 610, 611], "largest": [104, 107, 111, 112, 210, 395, 426], "last": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 93, 95, 101, 197, 198, 199, 200, 202, 206, 209, 210, 254, 351, 392, 402, 405, 407, 418, 422, 427, 428, 430, 432, 438, 439, 500, 553, 555], "lat": [16, 47, 58, 60, 61, 62, 64, 65, 69, 71, 74, 75, 77, 78, 83, 86, 92, 95, 97, 102, 104, 107, 111, 113, 118, 125, 129, 130, 132, 137, 155, 156, 162, 167, 170, 173, 197, 198, 200, 203, 206, 208, 209, 210, 226, 227, 231, 238, 240, 243, 256, 258, 267, 268, 270, 272, 278, 280, 282, 288, 293, 320, 321, 323, 324, 327, 349, 395, 396, 403, 404, 405, 406, 407, 408, 414, 416, 419, 428, 430, 435, 438, 443, 456, 457, 458, 465, 467, 472, 475, 478, 480, 481, 483, 485, 489, 494, 495, 499, 502, 503, 504, 507, 508, 509, 510, 511, 512, 514, 522, 523, 524, 529, 530, 532, 534, 541, 543, 544, 546, 551, 558, 559, 564, 565, 566, 567, 568, 569, 570, 606, 613], "lat_0": [231, 240, 243, 258, 267, 268, 282, 410, 419, 478, 480, 483, 484, 486, 487, 488, 492, 494, 502, 503, 511, 512, 519, 529, 530, 564, 565, 566, 568, 569, 570, 571], "lat_0_err": 486, "lat_pnt": [323, 327], "lat_rang": 349, "lat_t": [323, 327], "later": [395, 400, 401, 402, 406, 407, 408, 411, 412, 413, 414, 416, 417, 425, 426, 437, 439, 449, 450, 452, 453, 459, 469, 474, 476, 483, 484, 503, 508, 509, 512, 513, 519, 532, 542], "latest": [129, 190, 283, 319, 398, 402, 416, 421, 422, 426, 427, 431, 460, 468, 477, 480, 483, 484, 485, 492, 496, 505, 543, 559], "latex": [395, 396], "latex_inlin": 463, "latitud": [95, 152, 195, 196, 197, 198, 203, 205, 208, 209, 210, 320, 321, 349, 382, 442, 489, 509, 512, 551, 558, 567], "latitudin": [320, 321], "latpol": 509, "latter": [184, 215, 406, 408, 410, 417, 420, 423, 425, 443, 476, 477, 487, 488, 492, 510, 511, 553, 555, 608, 610], "launch": [430, 432, 457, 609], "laura": [446, 449, 451, 452, 458, 460, 462, 463, 464, 465], "law": [27, 103, 121, 126, 128, 130, 136, 144, 165, 167, 170, 224, 234, 235, 236, 259, 260, 261, 262, 271, 274, 275, 276, 286, 298, 348, 408, 437, 443, 457, 467, 469, 477, 480, 483, 487, 489, 492, 495, 496, 497, 499, 511, 512, 515, 546, 560, 573, 574, 594, 601], "law2": 587, "layer": [88, 92, 407, 414, 415], "layout": [449, 483, 492, 509, 518, 529, 530], "lazi": [89, 101, 104, 107, 111, 112, 280, 330, 457], "lazili": 104, "lazyfitsdata": 445, "lc": [86, 133, 207, 408, 410], "lc_1d": [126, 128, 149, 494, 495, 496, 500], "lc_3d": 494, "lc_estim": 410, "lc_maker_1d": [494, 495, 496], "lc_maker_3d": 494, "lc_new": 495, "le": 91, "lea": 446, "lead": [125, 320, 321, 395, 404, 409, 414, 417, 419, 421, 422, 425, 442, 465, 513, 515, 518, 520, 534, 609], "leak": [476, 555], "leakag": [298, 465, 494], "learn": [152, 157, 395, 412, 416, 427, 430, 432, 434, 458, 472, 474, 478, 485, 486, 487, 489, 500, 502, 503, 505, 509, 512, 513, 515, 518, 524, 532, 609], "least": [43, 44, 138, 147, 395, 398, 400, 404, 487, 500, 558], "leav": [400, 407, 409, 410, 412, 416, 429, 511], "lefaucheur": [455, 456, 457], "left": [21, 24, 25, 27, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 50, 51, 52, 53, 88, 92, 104, 111, 126, 128, 133, 137, 155, 157, 197, 198, 200, 206, 209, 210, 222, 236, 241, 261, 274, 275, 300, 303, 306, 395, 396, 403, 405, 409, 411, 414, 415, 419, 434, 478, 485, 494, 496, 500, 502, 511, 513, 544, 553, 556, 565, 566, 574, 575, 578, 579, 581, 582, 584, 586, 589, 590, 591, 592, 597, 598, 599, 601, 610, 611, 612], "legaci": [395, 457, 458], "legacy_altaz": 85, "legal": [88, 92], "legend": [392, 468, 469, 472, 474, 476, 483, 484, 488, 489, 494, 495, 497, 500, 501, 505, 512, 514, 515, 519, 539, 540, 548, 574, 580, 583, 584, 588, 593], "legend_kwarg": 392, "lemi\u00e8r": 457, "len": [83, 135, 293, 392, 478, 486, 487, 488, 495, 497, 499, 500, 502, 508, 511, 532, 546], "lenain": [457, 458], "length": [19, 20, 26, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 80, 82, 88, 92, 95, 173, 195, 196, 197, 198, 200, 201, 205, 206, 208, 209, 210, 224, 225, 226, 227, 228, 229, 230, 231, 232, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 251, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 278, 279, 280, 281, 282, 283, 284, 285, 298, 333, 388, 422, 425, 472, 474, 477, 485, 489, 499, 502, 505, 509, 519, 532, 564], "lengthi": 509, "lennarz": [440, 454, 456], "lepton": 551, "leq": [564, 569, 570], "less": [77, 196, 198, 202, 245, 281, 306, 395, 400, 402, 413, 425, 428, 457, 505, 512, 513, 514, 515], "let": [67, 287, 395, 398, 400, 404, 409, 412, 430, 433, 457, 458, 459, 472, 475, 476, 477, 478, 483, 484, 485, 486, 487, 489, 496, 497, 502, 503, 505, 509, 510, 512, 515, 519, 529, 532, 609], "level": [6, 11, 15, 16, 83, 84, 87, 91, 106, 123, 125, 127, 135, 215, 295, 299, 395, 396, 398, 399, 400, 406, 408, 410, 414, 415, 416, 417, 420, 423, 430, 434, 441, 442, 443, 444, 445, 449, 457, 464, 467, 470, 472, 474, 475, 478, 480, 481, 483, 485, 487, 492, 494, 495, 496, 497, 500, 501, 504, 505, 511, 514, 518, 519, 520, 521, 524, 527, 531, 532, 533, 542, 543, 544, 551, 553, 554, 607, 608, 609, 613], "levelnam": 395, "levmar": [215, 505], "lf": 428, "lgpl": 395, "lgtm": 428, "lhaaso": [55, 57], "li": [121, 125, 180, 401, 425, 468, 478, 481, 487, 504, 513, 608, 611], "lib": [358, 468, 470, 474, 475, 476, 477, 478, 480, 481, 483, 484, 485, 486, 487, 488, 489, 492, 494, 495, 496, 497, 499, 501, 502, 503, 505, 508, 509, 510, 511, 512, 515, 517, 518, 519, 520, 521, 529, 530, 532, 571, 597], "librari": [88, 92, 222, 395, 400, 401, 405, 415, 416, 422, 426, 435, 470, 474, 512, 513, 518, 524, 530, 534, 543, 546, 607, 609], "licenc": 422, "licens": [422, 434], "lie": [195, 196, 202, 205, 208, 504], "life": [402, 505], "lifetim": [20, 464], "lifetime_age_of_univers": 20, "light": [15, 73, 77, 133, 141, 232, 245, 305, 399, 406, 408, 411, 416, 420, 426, 430, 443, 445, 446, 453, 456, 458, 463, 464, 467, 469, 471, 493, 498, 499, 500, 524, 544, 545, 555, 560, 595, 605, 607], "light_curv": [16, 245, 416, 458, 467, 475, 480, 481, 483, 494, 498, 529, 604], "light_curve_flar": [467, 495, 498], "light_curve_model": 604, "light_curve_simul": [467, 496, 498], "lightcrv_pksb1222": [245, 604], "lightcurv": [71, 73, 74, 75, 77, 78, 122, 128, 133, 140, 141, 142, 143, 149, 206, 207, 245, 302, 303, 305, 404, 406, 411, 414, 417, 420, 426, 430, 441, 443, 444, 445, 449, 455, 456, 457, 458, 460, 461, 463, 464, 467, 493, 494, 495, 498, 504, 524, 541, 546, 604], "lightcurve1": 140, "lightcurve2": 140, "lightcurve_at_energi": 420, "lightcurveconfig": 16, "lightcurveestim": [122, 410, 411, 417, 420, 430, 441, 443, 445, 446, 449, 457, 458, 463, 494, 495, 496, 499, 546], "lightcurvetablemodel": [406, 408], "lightcurvetempl": 406, "lightcurvetemplatemodel": [462, 463], "lightcurvetemplatetemporalmodel": [277, 419, 460, 463, 465, 488, 512, 604], "lightweight": 415, "like": [19, 20, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 46, 50, 52, 53, 67, 80, 82, 88, 89, 92, 145, 146, 161, 164, 168, 169, 197, 198, 200, 204, 206, 209, 210, 218, 222, 224, 227, 228, 231, 232, 234, 235, 236, 237, 240, 241, 242, 243, 244, 245, 246, 247, 248, 251, 258, 259, 260, 261, 262, 266, 267, 268, 269, 271, 274, 275, 276, 281, 282, 319, 320, 321, 341, 351, 394, 395, 396, 398, 400, 401, 402, 403, 405, 406, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 422, 424, 425, 426, 427, 429, 430, 434, 440, 449, 451, 452, 456, 457, 459, 460, 462, 463, 468, 469, 472, 474, 475, 476, 477, 481, 488, 489, 497, 500, 501, 503, 505, 507, 509, 513, 514, 515, 518, 519, 524, 525, 529, 531, 532, 534, 535, 542, 546, 551, 559, 570, 607, 608, 609, 610, 611, 612], "likelhood": 407, "likelihood": [101, 103, 104, 107, 112, 125, 126, 127, 128, 130, 135, 137, 138, 147, 222, 223, 249, 294, 315, 316, 395, 401, 404, 407, 408, 411, 413, 416, 417, 418, 420, 425, 426, 430, 437, 439, 440, 443, 450, 453, 456, 458, 459, 464, 465, 472, 474, 475, 476, 478, 485, 489, 494, 495, 497, 503, 504, 505, 508, 513, 515, 519, 529, 530, 534, 542, 544, 546, 584, 607, 608, 610, 611], "likelihood_profil": [406, 439], "likelihood_typ": 444, "likewis": [198, 210], "lima": 121, "lima1983": [517, 544, 608, 611], "lima_map": 481, "lima_maps2": 481, "limamapestim": [417, 445], "limit": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 52, 53, 77, 80, 88, 92, 103, 114, 115, 125, 126, 127, 128, 129, 130, 133, 134, 136, 137, 138, 147, 154, 169, 172, 202, 219, 220, 221, 239, 249, 259, 285, 294, 295, 296, 299, 341, 342, 382, 401, 403, 404, 406, 407, 408, 409, 410, 412, 413, 416, 417, 419, 420, 424, 425, 439, 445, 449, 456, 457, 458, 459, 464, 468, 474, 478, 483, 486, 489, 494, 503, 504, 505, 509, 510, 514, 519, 529, 542, 544, 546, 555, 565, 584, 593, 607, 608, 612], "lin": [19, 20, 202, 206, 207, 210, 218, 220, 224, 227, 228, 231, 232, 234, 235, 236, 237, 240, 241, 242, 243, 244, 245, 246, 247, 248, 251, 256, 257, 258, 259, 260, 261, 262, 266, 267, 268, 269, 271, 274, 275, 276, 281, 282, 294, 333, 334, 335, 424, 488, 507, 509, 517, 559, 584], "line": [6, 13, 46, 82, 83, 88, 92, 103, 104, 107, 111, 112, 158, 164, 166, 168, 205, 206, 230, 254, 320, 321, 353, 354, 392, 394, 396, 398, 401, 404, 406, 409, 411, 412, 415, 420, 426, 428, 429, 430, 432, 434, 443, 454, 457, 465, 483, 505, 508, 512, 513, 534, 546, 559, 607], "line2d": [205, 230, 254], "linear": [19, 20, 26, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 151, 152, 153, 154, 157, 158, 159, 161, 164, 166, 168, 169, 197, 198, 200, 206, 207, 209, 210, 224, 225, 228, 232, 234, 235, 236, 241, 245, 246, 247, 248, 251, 255, 257, 259, 260, 261, 266, 271, 273, 274, 275, 276, 278, 279, 281, 282, 283, 333, 395, 460, 467, 483, 488, 489, 492, 509, 512, 513, 519, 529, 530, 560, 595, 605], "linear_model": 600, "linearli": [207, 210, 509, 542], "linearsegmentedcolormap": [385, 386], "linearstretch": [385, 386, 614], "lineartemporalmodel": [277, 512, 600], "lineno": 395, "liner": [281, 409], "linestyl": [468, 497, 499, 501, 515, 540, 559, 564, 565], "linewidth": [230, 254, 392, 396, 499, 513], "linhoff": [461, 462, 463, 464, 465], "link": [67, 69, 80, 103, 219, 221, 230, 254, 293, 400, 403, 404, 407, 415, 416, 422, 427, 428, 430, 431, 434, 435, 446, 449, 451, 455, 456, 457, 469, 470, 474, 475, 476, 477, 480, 483, 484, 487, 492, 495, 496, 502, 505, 512, 513, 515, 518, 530, 532, 546, 593, 606], "link_to_nasaad": 396, "linkag": 317, "linkage_kwarg": 317, "linkcheck": 396, "linspac": [83, 156, 197, 198, 200, 206, 209, 210, 215, 487, 489, 497, 505, 507, 509, 515, 558, 564], "lint": [16, 84, 87, 91, 106, 127], "linux": [402, 412, 428, 431, 458, 468, 470, 474, 475, 476, 477, 478, 480, 481, 483, 484, 485, 486, 487, 488, 489, 494, 495, 496, 497, 501, 502, 503, 505, 508, 509, 510, 511, 512, 515, 517, 518, 519, 520, 521, 529, 530, 532, 609], "list": [19, 20, 26, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 71, 72, 74, 75, 76, 78, 79, 80, 82, 83, 86, 88, 89, 90, 91, 92, 93, 94, 97, 101, 103, 104, 105, 106, 107, 110, 111, 112, 121, 123, 125, 126, 128, 129, 130, 133, 134, 137, 138, 139, 147, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 161, 162, 164, 166, 167, 168, 169, 170, 172, 173, 177, 178, 180, 181, 183, 184, 185, 186, 189, 192, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 212, 213, 215, 219, 221, 222, 224, 225, 226, 227, 228, 229, 230, 231, 232, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 278, 279, 280, 281, 282, 283, 284, 285, 293, 342, 352, 353, 354, 356, 384, 388, 389, 391, 392, 394, 395, 397, 398, 399, 400, 401, 402, 403, 404, 405, 414, 416, 417, 418, 419, 420, 422, 423, 426, 427, 428, 429, 430, 431, 432, 433, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 469, 470, 474, 477, 478, 484, 488, 489, 492, 494, 496, 499, 500, 503, 504, 505, 507, 508, 514, 515, 518, 519, 520, 521, 522, 524, 530, 531, 542, 546, 549, 558, 559, 606, 607, 608, 609], "list_format": [88, 92], "listen": 546, "listenv": 398, "liter": [16, 84, 87, 91, 106, 127, 339], "literatur": [425, 534, 536, 608], "litgzy6t": 499, "littl": [88, 92, 414, 417, 423, 509, 519, 555, 609], "live": [83, 86, 89, 222, 395, 400, 403, 405, 417, 425, 459, 462, 504, 513], "live_point": [222, 425, 513], "livetim": [67, 89, 90, 107, 108, 112, 167, 189, 191, 192, 401, 468, 470, 474, 475, 477, 485, 487, 488, 492, 496, 502, 503, 507, 509, 519, 520, 532, 542, 546], "livetime_fract": 90, "ljouvin": 401, "ll": [126, 128, 137, 398, 400, 412, 431, 468, 469, 470, 474, 476, 480, 481, 485, 494, 495, 496, 497, 499, 500, 513, 609, 611], "llvm": 434, "ln": [53, 505, 591], "lo": [23, 425, 456], "lo_bnd": 202, "lo_threshold": 154, "load": [66, 67, 83, 86, 88, 92, 101, 103, 104, 107, 111, 130, 132, 171, 177, 195, 196, 197, 198, 208, 329, 395, 452, 455, 457, 463, 475, 477, 480, 481, 487, 488, 492, 496, 497, 500, 510, 518, 519, 521, 529, 532, 543], "load_cta_irf": [459, 463], "load_irf_dict_from_fil": [167, 463, 468, 477, 487, 488, 492, 496, 518], "loc": [88, 92, 210, 388, 497, 539, 540, 548, 574, 580, 583, 584, 588], "loc_indic": [88, 92], "local": [17, 18, 21, 22, 24, 25, 27, 88, 92, 145, 146, 182, 195, 196, 205, 206, 208, 395, 396, 398, 403, 409, 415, 425, 427, 428, 431, 435, 439, 449, 475, 478, 480, 481, 486, 487, 501, 508, 513, 524, 529, 546], "local_dataset": 508, "local_dens": [17, 18, 21, 22, 24, 25, 27, 501], "local_to_glob": 196, "localfold": 11, "localis": 329, "localn": [16, 84, 87, 91, 106, 127], "locat": [47, 82, 83, 85, 88, 89, 91, 95, 141, 155, 156, 162, 167, 170, 208, 320, 321, 350, 398, 403, 409, 413, 417, 422, 423, 430, 432, 463, 465, 468, 477, 487, 488, 492, 496, 502, 520, 521, 543, 559, 609], "location_info": 88, "log": [16, 19, 20, 26, 42, 84, 87, 91, 104, 106, 126, 127, 128, 135, 151, 152, 153, 154, 157, 158, 159, 161, 164, 166, 168, 169, 177, 202, 206, 210, 218, 220, 224, 225, 227, 228, 231, 232, 234, 235, 236, 237, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 251, 255, 256, 257, 258, 259, 260, 261, 262, 266, 267, 268, 269, 271, 273, 274, 275, 276, 278, 279, 281, 282, 283, 286, 289, 296, 297, 300, 306, 332, 333, 335, 380, 390, 407, 411, 415, 425, 436, 453, 460, 464, 467, 469, 475, 477, 478, 480, 481, 483, 484, 485, 488, 492, 494, 495, 496, 499, 501, 503, 505, 507, 508, 509, 512, 513, 515, 519, 520, 527, 529, 530, 546, 548, 558, 559, 560, 573, 585, 593, 594, 601, 608, 609, 610, 611, 612], "log10": 497, "log_": [247, 248, 512, 582], "log_2": 303, "log_dir": [222, 513], "log_en": 512, "log_level": 11, "log_parabola": 472, "log_parabola_norm": 419, "logarithm": [34, 509, 515, 582], "logarithmic_spir": 34, "logb": 42, "logconfig": 16, "logenergyaxi": 456, "loggaussian": 406, "logger": [360, 363, 395, 415, 485], "logic": [16, 84, 86, 87, 91, 106, 127, 183, 420, 465, 509, 510], "logical_and": [197, 198, 200, 206, 209, 210], "logical_or": [197, 198, 200, 206, 209, 210, 508], "loglikelihood_dataset": [296, 297], "loglog": [19, 20, 26, 224, 225, 228, 232, 234, 235, 236, 241, 247, 248, 251, 255, 257, 259, 260, 261, 266, 271, 273, 274, 275, 276, 279, 283, 332, 468, 501, 538, 539, 540], "lognorm": 501, "logo": 428, "logparabola": [406, 583], "logparabolanormspectralmodel": [248, 265, 419, 446, 512, 583], "logparabolaspectralmodel": [215, 247, 265, 419, 469, 472, 474, 476, 484, 502, 505, 512, 576, 582], "logscal": 443, "logspac": [156, 197, 198, 200, 206, 209, 210, 477, 492, 496, 497, 501, 509, 538, 539, 540, 559], "logspir": [33, 38], "loguniform": [249, 425, 513], "loguniformprior": [263, 513], "logz": [425, 513], "logz_b": [425, 513], "logz_singl": [425, 513], "logzerr": [425, 513], "logzerr_b": [425, 513], "logzerr_singl": [425, 513], "logzerr_tail": [425, 513], "lomb": [410, 457], "lon": [16, 47, 92, 95, 97, 104, 107, 111, 113, 118, 125, 130, 132, 137, 155, 156, 162, 167, 170, 173, 197, 198, 200, 203, 206, 208, 209, 210, 226, 227, 231, 238, 240, 243, 256, 258, 267, 268, 270, 272, 278, 280, 282, 323, 324, 327, 349, 395, 396, 406, 409, 414, 419, 442, 465, 475, 478, 480, 481, 483, 485, 489, 494, 495, 499, 502, 503, 504, 507, 508, 509, 512, 514, 519, 529, 530, 532, 544, 558, 559, 564, 565, 566, 567, 568, 569, 570], "lon_0": [231, 240, 243, 258, 267, 268, 282, 410, 419, 478, 480, 483, 484, 486, 487, 488, 492, 494, 502, 503, 511, 512, 519, 529, 530, 564, 565, 566, 568, 569, 570, 571], "lon_0_err": 486, "lon_pnt": [323, 327], "lon_rang": 349, "lon_t": [323, 327], "long": [395, 398, 400, 402, 409, 411, 414, 416, 418, 421, 423, 425, 426, 451, 460, 469, 502, 513, 524, 525, 558], "longer": [304, 395, 401, 402, 409, 410, 412, 416, 431, 449, 452, 457, 458, 460, 463, 470, 477, 494], "longest": 201, "longitud": [68, 95, 152, 195, 196, 197, 198, 203, 205, 208, 209, 210, 320, 321, 349, 382, 409, 489, 509, 512, 551, 558, 567], "longitudin": [320, 321], "lonpol": 509, "look": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 46, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 83, 89, 104, 107, 111, 112, 128, 151, 152, 154, 155, 156, 157, 158, 159, 164, 165, 166, 167, 168, 170, 351, 395, 397, 398, 400, 407, 409, 410, 412, 414, 416, 419, 425, 434, 457, 470, 474, 475, 477, 478, 480, 481, 483, 485, 487, 489, 492, 494, 496, 497, 503, 507, 509, 512, 518, 519, 522, 524, 529, 532, 534, 543, 546, 609], "look_up": 455, "lookup": 203, "loop": [88, 92, 342, 408, 463, 474, 502, 509, 520, 529, 546], "lopez": [232, 457, 463, 574], "lopez21": [233, 469, 574], "lopez_2021": 233, "lorim": 35, "lorimer2006": [28, 29, 30, 36, 39, 40, 48], "lose": 395, "loss": [52, 608], "lost": [101, 104, 107, 111, 112, 546, 559], "lot": [82, 395, 398, 400, 401, 402, 403, 406, 408, 409, 411, 416, 428, 438, 440, 441, 449, 457, 458, 475, 485, 519, 529, 530, 556], "low": [88, 92, 154, 202, 222, 344, 395, 396, 398, 399, 404, 427, 455, 457, 467, 470, 474, 478, 485, 487, 503, 510, 511, 513, 518, 519, 524, 529, 531, 533, 553, 610], "low_zenith": 514, "lower": [17, 18, 19, 20, 21, 22, 24, 25, 26, 27, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 52, 53, 126, 128, 154, 183, 202, 204, 207, 222, 224, 225, 228, 229, 232, 234, 235, 236, 237, 241, 242, 244, 245, 246, 247, 248, 251, 255, 257, 259, 260, 261, 262, 266, 269, 271, 273, 274, 275, 276, 279, 281, 283, 284, 395, 409, 414, 416, 423, 489, 508, 513, 530], "lower_error": 128, "lowest": [414, 500, 513], "lp": [247, 248, 419, 472, 502, 512, 576], "lp_norm": 583, "lqgv5wx5": 499, "lss": 474, "lst": [402, 518], "lsw": 427, "lt": [395, 422, 426, 451, 460, 569, 570], "ltcube": [196, 197, 198, 200, 209, 210, 509], "lts_author": 422, "luca": [439, 440, 441, 442, 443, 444, 445, 446, 449, 451, 452, 460, 463], "lui": 459, "luigi": 454, "luminos": [41, 46, 51, 52, 53, 54, 255], "luminosity_spindown": [51, 54], "luminosity_tev": [52, 53, 540], "lvtm": 496, "lw": [474, 476, 478, 485, 497, 505, 559, 564, 566], "ly": [449, 511], "lyne": 37, "l\u00e9a": [439, 441, 442, 443, 446, 454, 455, 456, 457, 458], "l\u00f3pez": 457, "m": [19, 28, 29, 30, 31, 32, 35, 36, 37, 38, 39, 40, 52, 53, 88, 92, 95, 98, 113, 118, 133, 195, 196, 197, 198, 200, 206, 208, 209, 210, 316, 395, 396, 398, 409, 427, 429, 430, 431, 432, 488, 501, 505, 507, 509, 512, 527, 551, 555, 557, 558, 559, 571, 609, 612], "m2": [104, 157, 177, 469, 475, 477, 480, 481, 483, 485, 492, 503, 507, 508, 518, 529, 530], "m88zfi52": 499, "m_": [20, 50, 52, 53], "m_3fhl_gc": 509, "m_4d": 509, "m_allski": 509, "m_b": 610, "m_cube": 509, "m_ejecta": [52, 539], "m_gc": 509, "m_hpx": 509, "m_i": 610, "m_iem_10gev": 509, "m_iem_cutout": 509, "m_iem_gc": 509, "m_iem_interp": 509, "m_sub": 509, "m_sun": 539, "m_wc": [197, 198, 200, 206, 209, 210, 509], "ma": [88, 92, 121, 125, 468, 478, 481, 504, 608, 611], "mac": [88, 92, 395, 402, 428, 456, 609], "machin": [398, 402, 403, 408, 412, 428, 468, 470, 474, 475, 476, 477, 478, 480, 481, 483, 484, 485, 486, 487, 488, 489, 494, 495, 496, 497, 501, 502, 503, 505, 508, 509, 510, 511, 512, 515, 517, 518, 519, 520, 521, 529, 530, 532], "machineri": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 483], "maco": [412, 458], "macport": [412, 456, 458], "made": [177, 184, 205, 208, 219, 221, 230, 254, 319, 320, 321, 353, 354, 395, 398, 400, 411, 414, 417, 420, 421, 422, 426, 449, 460, 461, 465, 474, 478, 483, 484, 508, 518, 559, 571, 608], "madrid": 405, "magenta": [392, 486, 514], "magic": [98, 430, 435, 451, 457, 460, 476, 519, 608], "magic_ecpl": 287, "magic_lp": [287, 476], "magma": 513, "magnet": [42, 50, 51, 54, 584], "magnetic_field": [50, 51, 54], "magnitud": [333, 487], "mai": [16, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 82, 84, 87, 88, 91, 92, 95, 103, 106, 127, 128, 222, 320, 321, 395, 396, 398, 403, 404, 408, 409, 411, 412, 415, 421, 422, 426, 428, 429, 431, 436, 437, 469, 480, 481, 487, 504, 518, 545, 546, 558, 566, 584, 606, 609, 613], "mail": [396, 398, 400, 402, 409, 411, 414, 417, 419, 422, 427, 433, 438, 439, 532, 609], "mailmap": [449, 460], "main": [92, 104, 111, 125, 137, 395, 398, 400, 401, 403, 407, 410, 411, 412, 415, 416, 420, 422, 427, 428, 439, 445, 449, 452, 457, 463, 475, 486, 487, 489, 492, 499, 502, 507, 509, 510, 511, 513, 527, 529, 530, 541, 543, 547, 609, 611], "mainli": [395, 405, 406, 409, 415, 417, 509, 551], "maint": 465, "maintain": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 88, 92, 395, 397, 412, 414, 416, 417, 421, 426, 428, 458, 508], "mainten": [395, 402, 422, 428, 440, 462], "major": [205, 231, 240, 243, 395, 399, 400, 404, 412, 421, 451, 457, 458, 564, 565, 566], "majorana": 19, "make": [16, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 45, 46, 59, 82, 84, 87, 88, 91, 92, 96, 103, 106, 127, 172, 173, 177, 178, 179, 180, 182, 183, 184, 187, 188, 193, 194, 196, 197, 198, 201, 202, 205, 207, 208, 209, 210, 222, 281, 320, 321, 351, 353, 354, 365, 394, 396, 397, 400, 401, 402, 405, 407, 409, 411, 412, 413, 414, 416, 417, 420, 422, 423, 426, 428, 430, 432, 434, 437, 438, 440, 443, 444, 449, 451, 454, 455, 456, 457, 460, 462, 465, 467, 469, 470, 474, 476, 477, 481, 483, 487, 492, 494, 506, 507, 508, 509, 512, 516, 518, 519, 524, 527, 532, 543, 546, 551, 609, 610], "make_background": [177, 184], "make_background_fit": 174, "make_background_scal": 174, "make_base_catalog_galact": [457, 536], "make_concentric_annulus_sky_region": 489, "make_contour": 505, "make_count": [177, 178, 179, 184], "make_counts_off": [178, 179], "make_cub": 172, "make_dataset": 173, "make_default_fov_background_model": 174, "make_edisp": [177, 184], "make_edisp_kernel": [177, 184], "make_edisp_kernel_map": 507, "make_edisp_map": 156, "make_effective_livetime_map": [465, 508], "make_exclusion_mask": 174, "make_exposur": [177, 184], "make_exposure_irf": [177, 184], "make_imag": 458, "make_lupton_rgb": 390, "make_map_background_irf": 452, "make_map_count": 401, "make_map_cutout": 401, "make_map_exposure_reco_energi": 401, "make_map_exposure_true_energi": [156, 401, 507], "make_map_fov_background": 401, "make_map_hadron_accept": 401, "make_map_ring_background": 401, "make_map_xxx": 401, "make_maps_off": 182, "make_mask_bkg_invalid": 183, "make_mask_energy_aeff_default": 183, "make_mask_energy_aeff_max": 183, "make_mask_energy_bkg_peak": 183, "make_mask_energy_edisp_bia": 183, "make_mask_offset_max": 183, "make_mean_edisp": 459, "make_mean_psf": 459, "make_meta_t": [177, 184], "make_model": 414, "make_more_random_stuff": 395, "make_observation_time_map": 508, "make_orthogonal_rectangle_sky_region": [130, 489], "make_path": [128, 484, 503, 504], "make_pixel_region": 409, "make_psf": [167, 177, 184, 459], "make_psf_map": 507, "make_quant": 365, "make_random_stuff": 395, "make_region": 409, "make_sampl": 513, "make_sky_coord": 409, "make_some_random_stuff": 395, "make_theta_squared_t": [449, 517], "makefil": [428, 453], "maker": [6, 156, 167, 172, 173, 174, 175, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 401, 408, 410, 422, 443, 445, 446, 451, 460, 463, 464, 467, 468, 474, 476, 477, 481, 485, 487, 488, 492, 496, 497, 499, 503, 506, 507, 510, 516, 517, 520, 524, 556, 608], "maker_fov": 530, "maker_safe_mask": [485, 492, 530], "mamba": [398, 429, 430, 451], "manag": [88, 92, 219, 221, 230, 254, 341, 372, 394, 395, 398, 403, 411, 412, 414, 418, 422, 423, 427, 449, 454, 456, 460, 464, 509, 511, 609], "manconi": 441, "mandatori": [183, 398, 408, 422, 488, 512, 513, 551], "mandatory_keyword": 507, "mani": [88, 92, 333, 395, 396, 398, 400, 402, 404, 407, 409, 410, 411, 412, 415, 416, 417, 422, 425, 426, 428, 434, 440, 441, 446, 449, 455, 456, 457, 458, 459, 462, 463, 470, 474, 477, 486, 492, 500, 504, 509, 513, 521, 524, 534, 542, 544, 556, 559, 606, 607, 608, 609, 613], "manifest": 405, "manipul": [88, 92, 420, 423, 451, 515, 558], "manner": [462, 463], "manpow": [400, 412], "manual": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 88, 92, 402, 407, 418, 427, 546, 554, 609, 610], "manuel": [450, 453, 454], "map": [6, 15, 16, 23, 26, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 67, 77, 80, 83, 84, 87, 88, 91, 92, 97, 99, 102, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 116, 118, 119, 121, 122, 123, 125, 126, 127, 128, 130, 132, 133, 137, 138, 139, 144, 145, 146, 147, 148, 151, 152, 153, 154, 155, 156, 157, 158, 159, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 172, 174, 175, 177, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 195, 196, 197, 198, 199, 201, 202, 203, 205, 206, 207, 208, 209, 210, 211, 212, 227, 230, 231, 238, 240, 243, 245, 254, 256, 258, 267, 268, 270, 272, 278, 279, 280, 282, 283, 291, 298, 320, 321, 343, 382, 383, 388, 390, 392, 394, 395, 396, 398, 402, 406, 407, 408, 409, 410, 411, 414, 416, 417, 418, 419, 420, 423, 425, 430, 434, 438, 439, 441, 442, 443, 444, 445, 446, 449, 450, 451, 453, 454, 455, 457, 458, 459, 460, 463, 464, 465, 467, 468, 470, 474, 475, 476, 477, 479, 482, 483, 486, 487, 488, 489, 490, 491, 494, 495, 496, 499, 500, 502, 503, 504, 506, 508, 512, 513, 516, 517, 518, 519, 520, 524, 525, 526, 529, 530, 531, 534, 541, 542, 545, 546, 550, 551, 552, 553, 554, 555, 556, 563, 565, 566, 567, 568, 571, 604, 607, 608, 614], "map_": [211, 212, 383, 390], "map_4d": 509, "map_analysi": 414, "map_cent": 282, "map_coord": [83, 156, 167, 170], "map_dataset": [407, 497], "map_dataset_empti": 497, "map_dataset_mak": 497, "map_dataset_on_off": 497, "map_edisp": [113, 118], "map_in": [197, 198, 200, 206, 209, 210], "map_out": [107, 112, 155, 156, 162, 167, 170, 197, 198, 200, 206, 209, 210], "map_result": 478, "map_select": [16, 475, 480, 481, 483, 529], "map_typ": [197, 198, 200, 206, 209, 210, 509, 558], "mapax": [151, 152, 153, 154, 157, 158, 159, 161, 164, 166, 168, 169, 426, 446, 449, 451, 509], "mapaxi": [19, 20, 26, 104, 107, 111, 112, 113, 114, 115, 116, 118, 119, 126, 128, 130, 138, 147, 149, 151, 152, 153, 154, 155, 156, 157, 158, 159, 161, 164, 165, 166, 167, 168, 169, 170, 177, 187, 188, 193, 194, 195, 196, 197, 198, 200, 201, 205, 206, 208, 209, 210, 224, 225, 228, 232, 234, 235, 236, 241, 247, 248, 251, 255, 257, 259, 260, 261, 266, 271, 273, 274, 275, 276, 279, 283, 390, 396, 410, 420, 426, 440, 441, 443, 446, 449, 459, 463, 465, 468, 470, 474, 476, 477, 484, 485, 487, 488, 492, 495, 496, 497, 499, 503, 507, 508, 509, 512, 517, 519, 520, 530, 550, 553, 555, 556, 558, 559], "mapcoord": [83, 156, 167, 170, 195, 196, 197, 198, 200, 201, 205, 206, 208, 209, 210, 256, 426, 457, 458, 509, 559, 567], "mapdataset": [99, 100, 102, 105, 107, 110, 111, 112, 114, 115, 116, 117, 119, 120, 121, 125, 130, 133, 137, 144, 145, 146, 147, 148, 172, 173, 174, 177, 178, 182, 183, 230, 238, 254, 388, 391, 408, 410, 417, 418, 426, 439, 440, 441, 442, 443, 444, 445, 446, 449, 463, 464, 465, 478, 480, 484, 485, 486, 488, 489, 492, 494, 496, 497, 504, 505, 508, 510, 511, 519, 529, 530, 544, 546, 553, 556, 608, 610, 611], "mapdataseteventsampl": [94, 110, 443, 444, 445, 452, 463, 465, 487, 488], "mapdatasetmak": [167, 175, 184, 408, 443, 446, 449, 452, 460, 485, 487, 488, 492, 497, 507, 508, 520, 529, 530, 546, 551, 553, 556], "mapdatasetmetadata": [104, 107, 423], "mapdatasetoff": 451, "mapdatasetonoff": [99, 104, 111, 112, 121, 125, 144, 172, 178, 182, 443, 444, 446, 449, 462, 463, 481, 497, 508, 542, 556, 610], "mapdatasetsampl": 408, "mapevalu": [406, 407, 442, 443, 446, 449, 460, 461, 462, 464], "mapeventsampl": [441, 442], "mapfit": [406, 407, 439, 458, 459], "mapgeom": [401, 426, 459, 460], "mapmak": [177, 411, 439, 443, 458], "mapmakerob": [442, 443], "mappabl": 420, "mappanelplott": [417, 614], "mapper": [329, 415], "mappingintstrani": [16, 84, 87, 91, 106, 127], "mappingnamespac": [16, 84, 87, 91, 106, 127], "maps_off": 182, "mar": [412, 436, 461], "march": [402, 404, 426, 436, 438, 459], "marco": [17, 19, 20, 21, 22, 24, 25, 26, 27], "margin": [102, 103, 107, 112, 117, 120, 196, 198, 208, 210, 230, 254, 270, 406, 510, 564, 608, 610], "marion": [439, 458], "mark": [92, 395, 406, 427], "marker": [103, 104, 107, 111, 112, 230, 254, 468, 470, 474, 476, 478, 485, 494, 495, 496, 500, 532], "markerfacecolor": [104, 107, 111, 112], "markers": [103, 104, 107, 111, 112, 230, 254, 515], "markov": [425, 608], "mask": [83, 88, 92, 100, 103, 104, 107, 111, 112, 125, 129, 130, 132, 133, 134, 137, 155, 156, 162, 167, 170, 172, 174, 179, 180, 181, 182, 183, 185, 195, 196, 197, 198, 200, 203, 205, 206, 208, 209, 210, 219, 221, 230, 254, 270, 388, 407, 424, 443, 445, 446, 447, 449, 452, 458, 460, 461, 462, 463, 465, 467, 468, 470, 483, 485, 506, 508, 511, 516, 520, 524, 542, 553, 555, 558, 608], "mask_1": 514, "mask_2": 514, "mask_bright": 502, "mask_contains_region": 210, "mask_data": 510, "mask_energi": [503, 510], "mask_fit": [103, 104, 107, 111, 112, 117, 120, 407, 443, 460, 476, 481, 483, 497, 503, 505, 510, 515, 542], "mask_fit_imag": [104, 107, 111, 112], "mask_imag": [104, 107, 111, 112], "mask_map": [196, 208, 467, 510, 516], "mask_map_catalog": 510, "mask_nearest_posit": [197, 198, 200, 206, 209, 210], "mask_off": 497, "mask_roi": 502, "mask_saf": [103, 104, 107, 108, 111, 112, 183, 407, 443, 503, 508, 510, 542], "mask_safe_edisp": [104, 107, 111, 112, 465], "mask_safe_imag": [104, 107, 111, 112, 155, 156, 162, 167, 170], "mask_safe_psf": [104, 107, 111, 112], "mask_spac": 503, "mask_valid": 103, "masked_ev": 83, "maskedarrai": [88, 92], "maskedcolumn": [88, 92], "mass": [19, 20, 26, 52, 408, 445, 464, 501, 513, 534, 568], "massdm": [19, 20, 501], "master": [401, 402, 409, 427, 428, 437], "match": [83, 88, 92, 110, 115, 135, 195, 196, 198, 201, 202, 203, 205, 208, 210, 212, 295, 299, 320, 321, 395, 403, 457, 459, 464, 474, 477, 496, 504, 519, 541, 558], "match_by_nam": 203, "materi": [425, 426], "math": [240, 394], "mathcal": [505, 542], "mathemat": [512, 515], "mathieu": [415, 449, 452], "mathrm": [19, 20, 23, 104, 111, 157, 501, 505, 542, 610, 612], "mathworld": [348, 349], "matomo": 465, "matplotlib": [19, 20, 26, 66, 67, 83, 132, 151, 154, 157, 158, 159, 164, 165, 166, 167, 168, 169, 170, 197, 198, 200, 206, 209, 210, 213, 224, 225, 226, 227, 228, 229, 231, 232, 234, 235, 236, 237, 240, 241, 242, 243, 244, 245, 246, 247, 248, 251, 255, 256, 257, 258, 259, 260, 261, 262, 266, 267, 268, 269, 271, 272, 273, 274, 275, 276, 278, 279, 281, 282, 283, 284, 372, 383, 384, 385, 388, 389, 390, 392, 394, 395, 396, 409, 412, 422, 431, 434, 441, 449, 451, 468, 469, 470, 472, 474, 475, 476, 477, 478, 480, 481, 483, 484, 485, 486, 487, 488, 489, 492, 494, 495, 496, 497, 499, 500, 501, 502, 503, 504, 505, 507, 508, 509, 510, 511, 512, 513, 514, 515, 517, 518, 519, 520, 521, 529, 530, 532, 538, 539, 540, 546, 548, 549, 550, 552, 555, 564, 566, 570, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 596, 597, 598, 599, 600, 601, 602, 613, 614], "matric": 213, "matrix": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 104, 107, 113, 118, 154, 155, 156, 159, 213, 214, 215, 219, 230, 254, 295, 299, 388, 412, 413, 424, 459, 460, 463, 465, 505, 507, 542, 544, 550], "matter": [1, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 320, 321, 409, 416, 424, 458, 463, 464, 467, 506, 508, 516, 519, 524, 535, 607, 609], "matthew": [402, 455, 457, 458], "matthia": [457, 458], "mattox": 478, "max": [16, 17, 18, 19, 20, 21, 22, 24, 25, 26, 27, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 83, 88, 89, 92, 104, 114, 115, 129, 131, 133, 169, 173, 177, 179, 183, 210, 218, 219, 220, 221, 224, 225, 227, 228, 230, 231, 232, 234, 235, 236, 237, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 251, 254, 255, 257, 258, 259, 260, 261, 262, 266, 267, 268, 269, 271, 273, 274, 275, 276, 279, 281, 282, 283, 285, 349, 403, 411, 419, 424, 434, 445, 446, 447, 449, 451, 463, 465, 469, 470, 474, 475, 476, 477, 480, 481, 483, 484, 485, 486, 489, 492, 494, 495, 496, 497, 499, 500, 502, 503, 505, 507, 508, 509, 510, 512, 513, 514, 515, 519, 520, 529, 530, 532, 534, 546, 553, 555, 556, 564, 584, 587, 593, 611], "max_ag": [45, 536], "max_column": [88, 92], "max_energi": 500, "max_lin": [88, 92], "max_nit": [135, 137, 465], "max_offset": 411, "max_percentil": 83, "max_radiu": [165, 167, 170, 208, 519], "max_region_numb": [180, 555], "max_valu": 381, "max_width": [88, 92], "maxcal": 215, "maxclust": 317, "maxfev": 505, "maxim": [45, 82, 92, 114, 115, 135, 137, 183, 227, 231, 240, 243, 256, 267, 268, 272, 278, 282, 425, 461, 462, 463, 464, 465, 555], "maxima": [145, 219, 221], "maximilian": [449, 451, 452, 461, 462, 463, 464, 465], "maximum": [19, 20, 45, 46, 47, 83, 88, 92, 101, 123, 126, 128, 131, 136, 167, 170, 172, 177, 180, 183, 189, 190, 192, 196, 202, 207, 208, 218, 220, 224, 227, 228, 230, 231, 232, 234, 235, 236, 237, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 251, 254, 258, 259, 260, 261, 262, 266, 267, 268, 269, 271, 274, 275, 276, 281, 282, 285, 295, 299, 348, 350, 353, 381, 392, 398, 401, 409, 451, 472, 478, 500, 504, 505, 508, 509, 513, 515, 520, 530, 536, 544, 555, 584, 607, 608, 611], "maximum_likelihood": [425, 513], "maxwellian": 32, "mayb": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 395, 403, 405, 406, 418, 513], "mb": [195, 196, 205, 208, 403, 430, 432, 467, 473, 482, 491, 498, 516, 518, 519, 521, 523, 526, 528, 533, 561, 572, 594, 605], "mbox": [104, 111], "mc": 413, "mc_id": [83, 405, 408, 451, 487, 518], "mcerp": 413, "mckee": [53, 464], "mcmc": [413, 416, 425, 439, 444, 446, 513, 584, 608], "mcmc_sampl": [416, 441], "md": [16, 84, 87, 91, 106, 127, 398, 416, 422], "md5": 415, "mdm": [26, 501], "mean": [42, 68, 88, 92, 97, 103, 104, 130, 132, 154, 155, 156, 159, 162, 167, 170, 239, 241, 245, 281, 298, 302, 318, 320, 321, 339, 395, 396, 398, 400, 402, 408, 409, 411, 412, 415, 419, 424, 425, 431, 434, 446, 455, 474, 477, 478, 488, 500, 504, 505, 508, 512, 513, 514, 515, 519, 520, 532, 565, 581, 609, 610], "meaning": 512, "meant": [401, 463, 468, 477, 480, 483, 485, 492, 496, 518], "measur": [27, 67, 103, 107, 112, 132, 135, 138, 147, 202, 287, 295, 296, 297, 299, 302, 303, 304, 305, 307, 309, 310, 313, 316, 401, 409, 414, 420, 426, 428, 437, 442, 450, 456, 458, 469, 470, 474, 476, 477, 481, 484, 486, 489, 492, 494, 495, 500, 502, 517, 519, 530, 532, 544, 551, 553, 556, 607, 608, 611, 612], "mechan": [403, 413, 415, 420, 423, 426], "media": 422, "median": [19, 20, 26, 83, 167, 170, 224, 225, 228, 232, 234, 235, 236, 241, 247, 248, 251, 255, 257, 259, 260, 261, 266, 271, 273, 274, 275, 276, 279, 283, 425, 434, 497, 513, 514, 519], "median_zenith": 514, "medium": [45, 52, 395, 404], "meeseeksdev": 395, "meeseeksmachin": 395, "meet": [230, 254, 319, 401, 403, 416, 421, 428], "megabyt": [195, 196, 205, 208], "mem": [467, 473, 482, 491, 498, 516, 523, 526, 528, 533, 561, 572, 594, 605], "member": [83, 396, 400, 409, 422, 423, 457, 463, 504, 518, 521], "memo": [154, 202], "memori": [88, 89, 92, 93, 101, 104, 105, 107, 110, 111, 112, 195, 196, 205, 208, 278, 280, 282, 320, 321, 372, 395, 405, 407, 408, 411, 418, 420, 426, 443, 449, 464, 477, 492, 546, 608], "memoryobserv": 89, "mender": [462, 463, 464], "mention": [59, 149, 395, 396, 398, 402, 403, 407, 409, 412, 414, 416, 421, 422, 427, 428, 507, 511, 512, 515, 534, 608], "mentor": [398, 416], "mere": 405, "merg": [67, 86, 88, 92, 199, 202, 230, 254, 361, 395, 398, 399, 400, 401, 408, 409, 410, 414, 416, 421, 422, 427, 428, 438, 439, 440, 441, 442, 443, 444, 445, 446, 454, 455, 456, 457, 458, 459], "merge_equ": 86, "mergesort": [88, 92], "mess": 396, "messag": [103, 214, 216, 217, 398, 409, 411, 415, 419, 425, 447, 462, 470, 472, 474, 475, 476, 483, 484, 485, 496, 497, 499, 504, 505, 519, 529, 530, 546, 609], "met": [86, 375, 463, 495, 499, 608], "met_start": 86, "met_stop": 86, "meta": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 83, 85, 88, 89, 92, 95, 101, 104, 105, 107, 109, 110, 111, 112, 126, 128, 151, 152, 153, 154, 157, 158, 159, 161, 164, 166, 168, 169, 177, 184, 197, 198, 200, 206, 209, 210, 278, 279, 282, 283, 331, 375, 376, 377, 378, 405, 408, 409, 410, 420, 423, 427, 445, 446, 457, 461, 463, 464, 487, 497, 509, 514, 518, 520, 543, 544, 604], "meta_t": [101, 103, 104, 107, 111, 112, 177, 184, 420, 423, 446, 470, 477, 508, 542], "metaattribut": [88, 92], "metaclass": 415, "metadata": [83, 84, 85, 87, 88, 89, 91, 92, 106, 108, 109, 126, 127, 128, 151, 152, 153, 154, 157, 158, 161, 164, 166, 168, 169, 197, 198, 200, 206, 209, 210, 376, 399, 401, 412, 415, 426, 464, 475, 480, 481, 483, 487, 512, 529, 563, 564, 565, 566, 567, 568, 569, 570, 571, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 596, 597, 598, 599, 600, 601, 602, 603, 604], "metadata_fits_export_kei": [84, 87, 91, 106, 127], "metadatabas": 423, "metadatabasemodel": 423, "metapackag": 412, "method": [6, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 50, 51, 52, 53, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 121, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 145, 147, 148, 149, 151, 152, 153, 154, 155, 156, 157, 158, 159, 161, 162, 164, 165, 166, 167, 168, 169, 170, 172, 173, 174, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 278, 279, 280, 281, 282, 283, 284, 285, 295, 296, 297, 299, 305, 307, 317, 320, 321, 329, 333, 337, 341, 342, 343, 368, 382, 384, 394, 395, 398, 401, 404, 405, 406, 409, 410, 411, 413, 414, 415, 416, 418, 420, 422, 423, 425, 426, 430, 434, 435, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 449, 451, 452, 454, 455, 456, 457, 458, 459, 460, 463, 464, 465, 468, 470, 472, 474, 475, 476, 478, 480, 481, 483, 484, 485, 486, 487, 488, 492, 495, 497, 499, 501, 502, 503, 504, 505, 507, 508, 510, 511, 512, 513, 514, 515, 517, 518, 519, 520, 521, 524, 529, 530, 532, 541, 543, 545, 546, 550, 553, 555, 556, 557, 559, 582, 597, 606, 607, 608, 609, 611], "method_kwarg": [341, 342], "methoda": 441, "metric": 317, "metropoli": 425, "mev": [74, 77, 83, 151, 152, 153, 157, 276, 468, 469, 477, 480, 483, 485, 492, 496, 497, 502, 507, 509, 512, 518, 519, 532, 593], "meval": 566, "mexico": 520, "meyer": [251, 287, 484, 608], "meyer2010": 608, "mgtime": 410, "mhealpi": 426, "mi": 551, "michael": [462, 464], "michel": 465, "mid": [114, 452, 463, 518], "middl": [384, 411], "midpoint": 89, "might": [13, 16, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 84, 87, 91, 106, 127, 185, 202, 215, 320, 321, 395, 400, 406, 407, 409, 412, 414, 420, 422, 423, 425, 426, 427, 430, 432, 439, 474, 495, 497, 503, 508, 510, 519, 520, 524, 525, 532, 534, 542, 546, 553, 559, 609, 611], "migra": [104, 107, 111, 112, 156, 159, 164, 188, 411, 487, 488, 507, 551], "migra_axi": [104, 107, 111, 112, 116, 156, 158, 159, 487, 488, 507, 508], "migrad": [103, 215, 470, 472, 474, 475, 476, 483, 484, 485, 497, 499, 504, 505, 519, 529, 530], "migrad_opt": [215, 505], "migrat": [104, 107, 111, 112, 116, 158, 159, 164, 404, 426, 442, 449, 458, 483, 487, 508, 550, 551], "milagro": [98, 386, 614], "mileston": [404, 426, 427], "milki": [33, 38, 437, 536], "miller": [88, 92], "million": [395, 423], "min": [16, 17, 18, 19, 20, 21, 22, 24, 25, 26, 27, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 83, 92, 104, 129, 131, 133, 149, 177, 218, 219, 220, 221, 224, 225, 227, 228, 230, 231, 232, 234, 235, 236, 237, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 251, 254, 255, 257, 258, 259, 260, 261, 262, 266, 267, 268, 269, 271, 273, 274, 275, 276, 279, 281, 282, 283, 285, 303, 349, 410, 411, 419, 424, 434, 449, 457, 465, 469, 470, 474, 475, 476, 477, 480, 481, 483, 484, 485, 486, 489, 492, 494, 495, 496, 497, 499, 500, 502, 503, 505, 507, 508, 509, 512, 513, 514, 515, 519, 529, 530, 532, 534, 546, 555, 584, 587, 593], "min_count": 174, "min_dist": [145, 146, 180, 478, 485, 555], "min_distance_input": [180, 555], "min_energi": 500, "min_ess": 222, "min_npix": [155, 156, 162, 167, 170, 208, 210], "min_npred_background": 174, "min_num_live_point": 425, "min_pix": 465, "min_signific": 410, "min_significance_lc": 410, "min_valu": 381, "minaya": 459, "mind": [398, 416, 492, 505], "mini": 416, "miniconda": [429, 430], "miniforg": [429, 430, 431], "minim": [19, 20, 26, 114, 115, 136, 197, 198, 200, 205, 206, 209, 210, 211, 215, 224, 225, 227, 228, 231, 232, 234, 235, 236, 240, 241, 243, 247, 248, 251, 255, 256, 257, 258, 259, 266, 267, 268, 270, 271, 272, 273, 274, 275, 276, 278, 279, 282, 283, 293, 407, 410, 419, 423, 425, 426, 451, 461, 463, 468, 487, 503, 505, 515, 530, 546, 555, 556, 559, 607, 612], "minima": [219, 221, 425, 513, 515], "minimis": [496, 513, 514], "minimmum": [155, 156, 162, 167, 170, 208, 210], "minimum": [19, 20, 26, 47, 101, 123, 125, 126, 128, 131, 136, 141, 145, 146, 149, 150, 172, 174, 180, 202, 205, 207, 217, 218, 220, 222, 224, 225, 227, 228, 230, 231, 232, 234, 235, 236, 237, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 251, 254, 255, 257, 258, 259, 260, 261, 262, 266, 267, 268, 269, 271, 273, 274, 275, 276, 279, 281, 282, 283, 285, 289, 294, 300, 303, 319, 348, 350, 353, 381, 390, 412, 425, 451, 457, 474, 478, 487, 504, 505, 509, 513, 515, 519, 544, 546, 555, 584, 612], "mino": [215, 505], "minor": [395, 400, 415, 416, 419, 421, 448, 461, 565, 566], "minos_contour": [441, 459], "minu": [159, 497], "minuit": [103, 123, 215, 216, 217, 293, 406, 413, 443, 458, 459, 463, 470, 472, 474, 475, 476, 483, 484, 485, 497, 499, 504, 505, 513, 519, 529, 530], "minuit_opt": 505, "minut": [416, 428, 457, 469, 472, 474, 475, 478, 481, 483, 484, 485, 486, 487, 489, 494, 495, 496, 497, 499, 501, 503, 504, 505, 508, 511, 513, 515, 529, 530], "mireia": [460, 465], "mirror": 194, "misc": [437, 450, 454, 455, 456], "miss": [82, 88, 92, 151, 152, 153, 154, 157, 158, 159, 161, 164, 166, 168, 169, 177, 395, 398, 403, 404, 405, 406, 409, 416, 417, 420, 447, 449, 451, 457, 462, 465, 509, 551], "mission": [83, 463, 608], "mistak": [400, 421], "mix": [394, 395, 411, 415, 503, 509], "mixin": [88, 92], "mj3ocmyd": 478, "mjd": [86, 95, 128, 229, 237, 242, 244, 245, 246, 262, 269, 281, 284, 376, 378, 396, 462, 463, 478, 487, 488, 494, 495, 496, 499, 500, 509, 512, 543, 597, 598, 599, 600, 601, 602, 603, 604, 613], "mjdref": [478, 509], "mjdreff": [95, 375, 378, 488], "mjdrefi": [95, 375, 378, 488], "mkdir": [411, 474, 475, 483, 484, 487, 529, 530], "mkn": [532, 608], "mkn_421_3fhl": 532, "mncontour": 215, "mnt": 460, "mock": 486, "mock_dl4": 486, "modal": 513, "mode": [16, 84, 85, 87, 88, 91, 92, 95, 104, 106, 107, 111, 127, 131, 155, 156, 162, 167, 170, 173, 196, 197, 198, 200, 201, 202, 205, 206, 208, 209, 210, 280, 320, 321, 423, 425, 444, 457, 460, 464, 496, 513], "model": [1, 6, 15, 16, 18, 19, 20, 21, 26, 27, 28, 29, 30, 31, 32, 35, 36, 37, 38, 39, 40, 45, 50, 51, 52, 53, 54, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 84, 87, 89, 91, 94, 100, 101, 103, 104, 105, 106, 107, 110, 111, 112, 115, 117, 120, 121, 123, 125, 126, 127, 128, 129, 130, 133, 134, 136, 137, 138, 139, 144, 147, 148, 151, 157, 158, 165, 166, 167, 168, 170, 174, 177, 190, 197, 198, 200, 206, 209, 210, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 253, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 297, 308, 311, 316, 391, 394, 395, 396, 399, 400, 401, 407, 408, 410, 411, 413, 415, 416, 417, 420, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 449, 450, 451, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 467, 468, 471, 472, 477, 478, 481, 486, 489, 492, 497, 504, 506, 507, 508, 509, 510, 516, 519, 520, 531, 534, 535, 541, 542, 544, 546, 547, 551, 553, 554, 561, 572, 594, 605, 607, 608, 611, 612], "model1": [225, 574, 576, 580, 583, 585, 588], "model2": [225, 469, 496, 574, 576, 580, 583, 585, 588], "model_1d": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 475], "model_2d": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40], "model_3d": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40], "model_add": [512, 576], "model_best": 469, "model_best_joint": 474, "model_best_stack": 474, "model_bin_": 499, "model_bin_0": 499, "model_bkg": 503, "model_computed_field": [16, 84, 87, 91, 106, 127], "model_config": [16, 84, 87, 91, 106, 127, 480, 529], "model_constraint": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40], "model_construct": [16, 84, 87, 91, 106, 127], "model_copi": [16, 84, 87, 91, 106, 127, 483, 512], "model_dump": [16, 84, 87, 91, 106, 127], "model_dump_json": [16, 84, 87, 91, 106, 127], "model_extra": [16, 84, 87, 91, 106, 127], "model_field": [16, 84, 87, 91, 106, 127], "model_fields_set": [16, 84, 87, 91, 106, 127], "model_fit": 496, "model_in_bin": 499, "model_joint": 483, "model_json_schema": [16, 84, 87, 91, 106, 127], "model_manag": [467, 511, 516], "model_nam": [104, 107, 111, 112, 230, 254, 391, 503], "model_parametrized_nam": [16, 84, 87, 91, 106, 127], "model_plot": 486, "model_post_init": [16, 84, 87, 91, 106, 127], "model_prior": 515, "model_read": 515, "model_rebuild": [16, 84, 87, 91, 106, 127], "model_set_axi": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40], "model_simu": [477, 492, 496], "model_spectrum": 512, "model_str": 475, "model_typ": [230, 238, 252, 254, 270, 280, 293, 419, 511], "model_valid": [16, 84, 87, 91, 106, 127], "model_validate_json": [16, 84, 87, 91, 106, 127], "model_validate_str": [16, 84, 87, 91, 106, 127], "model_weak": 515, "model_weak_prior": 515, "model_without_nam": 512, "modelbas": [238, 263, 270, 272, 273, 280, 284, 424], "modeldm": [19, 20], "modelevalu": 406, "modeling_2d": [467, 480, 482], "modelmetadata": 423, "modelmodel_dump": [16, 84, 87, 91, 106, 127], "modelmodel_dump_json": [16, 84, 87, 91, 106, 127], "models_3fhl": 511, "models_4fgl_roi": 502, "models_as_dict": [16, 84, 87, 91, 106, 127], "models_diffus": 487, "models_fil": [16, 475, 480, 481, 483, 529], "models_fit": 492, "models_gc": 511, "models_gp": 518, "models_joint": 483, "models_or": 511, "models_read": 512, "models_select": 511, "models_stack": 483, "models_yaml": 512, "modelsmetadata": 423, "modern": [88, 92, 413], "modernis": [412, 443], "modest": [395, 565], "modif": [16, 84, 87, 88, 91, 92, 106, 127, 320, 321, 395, 398, 415, 418, 425, 427, 460], "modifi": [22, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 41, 88, 92, 94, 104, 111, 128, 130, 133, 137, 173, 215, 341, 366, 392, 405, 407, 411, 418, 422, 423, 425, 444, 446, 447, 449, 451, 459, 462, 463, 465, 469, 475, 488, 508, 510, 515, 520, 529, 544, 559, 613], "modul": [269, 395, 396, 400, 404, 411, 417, 437, 439, 445, 457, 496, 502, 504, 508, 511, 534, 535, 536, 537, 584, 602, 613], "modular": [401, 415], "mohanti": 103, "mohrmann": [411, 438, 439, 440, 456, 457, 458, 461, 463, 465, 608], "mohrmann2019": 608, "moment": [15, 51, 54, 86, 96, 270, 370, 401, 409, 411, 412, 415, 416, 421, 422, 507, 509], "moncar": [215, 505], "mongodb": 415, "monitor": [408, 513, 518, 546], "monkei": 395, "mono": [403, 513], "monoton": 202, "mont": [413, 425, 551, 608], "montecarlo": [105, 110, 215], "month": [78, 398, 404, 409, 412, 414, 416, 421, 427, 431, 437, 438, 439, 440, 441, 450, 453, 454, 455, 456, 457, 458, 459], "monthli": [404, 423, 430, 459], "moor": 24, "morcuend": [459, 462, 464, 465], "more": [19, 20, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 71, 74, 75, 78, 88, 92, 100, 101, 103, 104, 107, 111, 112, 138, 145, 147, 154, 183, 197, 198, 200, 209, 210, 222, 224, 225, 226, 227, 228, 229, 231, 232, 234, 236, 237, 240, 241, 242, 243, 244, 245, 246, 248, 255, 256, 257, 258, 259, 261, 262, 267, 268, 269, 271, 274, 275, 276, 282, 283, 300, 306, 329, 369, 395, 396, 398, 400, 401, 402, 404, 405, 406, 407, 408, 409, 410, 411, 412, 414, 415, 416, 417, 420, 421, 422, 423, 424, 425, 426, 428, 429, 430, 431, 434, 443, 444, 445, 446, 449, 456, 458, 459, 463, 465, 469, 470, 474, 476, 478, 481, 483, 487, 488, 496, 499, 500, 501, 503, 505, 506, 508, 509, 510, 511, 512, 513, 514, 515, 520, 521, 524, 532, 542, 543, 544, 546, 555, 556, 558, 559, 565, 606, 607, 609, 611, 613], "moreov": [411, 502, 508, 542], "morpholog": [123, 408, 467, 490, 491, 524], "morphologi": [50, 52, 123, 406, 408, 419, 437, 454, 456, 470, 480, 486, 487, 488, 492, 502, 508, 560], "mosaic": 401, "most": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 77, 83, 88, 92, 96, 121, 128, 222, 320, 321, 394, 395, 396, 398, 400, 401, 402, 403, 406, 407, 408, 409, 411, 412, 413, 414, 415, 416, 418, 419, 420, 421, 422, 423, 425, 428, 430, 431, 449, 456, 457, 459, 460, 463, 464, 480, 481, 489, 494, 496, 502, 504, 505, 507, 508, 509, 510, 513, 518, 519, 524, 525, 532, 534, 544, 545, 546, 551, 553, 559, 606, 608, 609, 612], "mostli": [56, 69, 319, 395, 396, 401, 402, 403, 404, 409, 411, 414, 416, 417, 420, 421, 423, 426, 428, 449, 457, 502, 508, 521, 532, 611, 613], "motion": [45, 320, 321, 325], "motiv": [183, 400, 402, 403, 409, 412, 414, 427, 512, 546], "move": [293, 400, 401, 402, 403, 406, 409, 414, 416, 417, 420, 426, 427, 433, 439, 440, 442, 443, 444, 445, 449, 450, 454, 455, 457, 458, 459, 460, 477], "move_axi": 463, "movement": 422, "mpatch": 489, "mpcjgx": 499, "mpg": 67, "mpi": [67, 425], "mpik": [430, 431], "mpl": 395, "mpl_check_plot": 395, "mpl_kwarg": [474, 485, 489], "mpl_normal": [385, 386, 614], "mpl_plot_check": 395, "mpl_style": 457, "msg": [468, 477, 480, 483, 485, 492, 496, 518], "msh": [481, 502, 508], "msh15": 521, "mst": 518, "mu": [26, 239, 295, 299, 300, 388, 424, 469, 501, 515, 550, 551, 611], "mu_": [300, 306, 610, 611, 612], "mu_background": 609, "mu_bkg": [107, 112, 295, 310, 316, 434, 609, 611], "mu_off": 611, "mu_on": [300, 306, 611], "mu_sig": [299, 310, 316, 481, 610, 611], "mu_x": 611, "much": [198, 222, 395, 401, 406, 409, 411, 414, 416, 425, 442, 449, 477, 483, 489, 497, 513, 515, 519, 532, 566], "mul": [26, 469, 501, 512, 574, 580, 583, 585, 588, 593], "multi": [88, 92, 196, 208, 404, 409, 424, 426, 443, 446, 450, 457, 467, 472, 478, 490, 491, 503, 505, 507, 512, 514, 519, 524, 544, 546, 558, 607, 608], "multibeam": 35, "multicompon": 465, "multidimension": [401, 411, 424, 464, 504, 522, 524, 551, 607], "multinorm": 413, "multipl": [19, 20, 26, 82, 88, 92, 93, 101, 103, 104, 107, 110, 111, 112, 115, 117, 120, 137, 145, 171, 197, 198, 200, 206, 209, 210, 215, 222, 224, 225, 226, 227, 228, 229, 230, 231, 232, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 251, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 278, 279, 280, 281, 282, 283, 284, 285, 395, 396, 401, 404, 407, 408, 409, 411, 413, 417, 418, 420, 424, 425, 426, 430, 439, 446, 447, 449, 457, 463, 464, 465, 476, 483, 495, 502, 503, 504, 508, 509, 510, 512, 513, 519, 544, 558, 584, 593, 606, 607, 608, 609, 614], "multipli": [19, 20, 26, 128, 210, 224, 225, 227, 228, 230, 231, 232, 234, 235, 236, 239, 240, 241, 243, 245, 247, 248, 249, 251, 254, 255, 256, 257, 259, 260, 261, 263, 266, 267, 268, 271, 272, 273, 274, 275, 276, 278, 279, 281, 282, 283, 285, 291, 298, 308, 311, 319, 469, 478, 481, 497, 501, 512, 574, 611], "multiprocess": [13, 94, 129, 130, 133, 137, 173, 336, 341, 342, 443, 463, 464], "multithread": 13, "multivari": 413, "multivariategaussianprior": 424, "multiwavelength": 232, "muon": 514, "muoneff": 514, "mur": [26, 501], "must": [19, 20, 26, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 82, 88, 89, 92, 103, 104, 107, 108, 112, 113, 118, 128, 133, 137, 138, 145, 146, 147, 165, 173, 177, 179, 184, 191, 195, 196, 197, 198, 199, 200, 201, 202, 205, 206, 207, 208, 209, 210, 224, 225, 226, 227, 228, 229, 230, 231, 232, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 251, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 278, 279, 280, 281, 282, 283, 284, 285, 304, 305, 319, 320, 321, 339, 390, 395, 396, 400, 406, 407, 410, 420, 421, 422, 423, 425, 426, 468, 474, 480, 495, 503, 504, 508, 510, 511, 512, 518, 519, 530, 532, 546, 558, 608], "mutablemap": 204, "mutablesequ": [93, 101, 254], "mutipl": 430, "mutltipl": 398, "my": [395, 418, 419, 425, 429, 487, 488, 503, 512], "my_custom_model": 512, "my_flux_map": 420, "my_ob": 90, "my_obs_filt": 90, "my_sourc": 418, "mybind": [428, 457], "myconfig": [11, 609], "mycustomgaussianmodel": [419, 512], "mycustomprior": 515, "mycustomspectralmodel": [265, 512], "myfram": [320, 321], "mysql": 415, "n": [19, 20, 51, 82, 88, 92, 126, 128, 195, 196, 197, 198, 200, 202, 203, 206, 208, 209, 210, 218, 220, 286, 293, 395, 398, 409, 412, 425, 426, 429, 431, 455, 492, 495, 499, 501, 502, 504, 505, 509, 511, 513, 515, 518, 519, 520, 521, 528, 551, 558, 559, 561, 565, 566, 608, 610, 612], "n_": [104, 111, 300, 306, 542, 610, 611, 612], "n_0": [241, 581], "n_bad": 519, "n_bin": 503, "n_bkg": [295, 299, 611], "n_dof": [126, 128, 544], "n_event": [197, 198, 200, 206, 209, 210, 229, 237, 242, 244, 245, 246, 262, 269, 281, 284, 408], "n_event_bunch": [105, 110], "n_events_bkg": 408, "n_fit_bin": [483, 496, 503, 511], "n_free_paramet": [135, 293], "n_input": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 48, 49], "n_ism": [43, 44, 45, 52, 539, 540], "n_job": [16, 94, 129, 130, 133, 137, 173, 341, 463, 475, 478, 480, 481, 483, 489, 495, 508, 529], "n_jobs_default": [94, 129, 130, 133, 137, 173], "n_model": [72, 76], "n_ob": [477, 487, 496], "n_observ": 609, "n_off": [107, 112, 299, 309, 310, 316, 481, 610, 611], "n_off_posit": 476, "n_off_region": [185, 476], "n_on": [295, 299, 300, 306, 309, 310, 316, 434, 481, 609, 610, 611], "n_output": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 48, 49], "n_point": [19, 20, 26, 224, 225, 228, 229, 232, 234, 235, 236, 237, 241, 242, 244, 245, 246, 247, 248, 251, 255, 257, 259, 260, 261, 262, 266, 269, 271, 273, 274, 275, 276, 279, 281, 283, 284, 424, 603], "n_sampl": [19, 20, 26, 224, 225, 228, 232, 234, 235, 236, 241, 247, 248, 251, 255, 257, 259, 260, 261, 266, 271, 273, 274, 275, 276, 279, 283], "n_scale": 121, "n_sig": [295, 299, 497, 611], "n_sig_matching_signific": [295, 299], "n_sigma": [71, 74, 75, 78, 125, 126, 127, 128, 129, 130, 133, 134, 135, 136, 137, 293, 295, 299, 312, 314, 468, 478, 489, 495, 502, 503, 504, 529, 532, 544], "n_sigma_asimov": 312, "n_sigma_sensit": [125, 126, 127, 128, 129, 134, 137, 489], "n_sigma_ul": [71, 74, 75, 78, 125, 126, 127, 128, 129, 130, 133, 134, 137, 478, 489, 494, 495, 502, 503, 504, 529, 532, 544], "n_sourc": [45, 536], "n_spatial_ax": 201, "n_submodel": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40], "n_tel": 92, "n_time_bin": [495, 499], "nachiketa": [455, 456], "nadarajah": 148, "naima": [255, 394, 412, 413, 414, 416, 419, 440, 467, 468, 470, 474, 475, 476, 477, 478, 480, 481, 483, 484, 485, 486, 487, 488, 489, 494, 495, 496, 497, 501, 502, 503, 505, 508, 509, 510, 511, 512, 515, 517, 518, 519, 520, 521, 529, 530, 532, 546, 560, 573, 593, 594], "naimamodel": [440, 443, 445], "naimaspectralmodel": [265, 419, 449, 512, 546, 584], "nakashima": 441, "name": [15, 16, 19, 20, 26, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 48, 49, 52, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 91, 92, 95, 97, 100, 101, 102, 103, 104, 106, 107, 108, 109, 111, 112, 113, 117, 118, 119, 120, 126, 127, 128, 129, 130, 133, 134, 137, 141, 149, 151, 152, 153, 154, 155, 156, 157, 158, 159, 161, 162, 164, 165, 166, 167, 168, 169, 170, 177, 178, 187, 188, 193, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 215, 218, 219, 220, 221, 224, 225, 226, 227, 228, 229, 230, 231, 232, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 251, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 278, 279, 280, 281, 282, 283, 284, 285, 293, 317, 318, 320, 321, 342, 373, 374, 390, 396, 398, 401, 404, 405, 407, 408, 409, 410, 413, 414, 418, 419, 420, 422, 423, 424, 425, 427, 430, 432, 439, 440, 441, 442, 443, 444, 445, 446, 449, 458, 460, 461, 463, 465, 468, 469, 470, 472, 474, 475, 476, 477, 478, 480, 481, 483, 484, 485, 486, 487, 488, 489, 492, 494, 495, 496, 497, 499, 502, 503, 504, 505, 507, 508, 509, 511, 512, 513, 514, 515, 518, 519, 520, 521, 529, 530, 532, 534, 544, 546, 550, 553, 555, 556, 558, 559, 560, 563, 564, 565, 566, 567, 568, 569, 570, 571, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 596, 597, 598, 599, 600, 601, 602, 603, 604, 611], "name1": 505, "name2": 505, "name_err": [129, 130, 133, 134], "name_scan": [129, 130, 133, 134], "name_substr": [230, 254, 511], "name_ul": [129, 130, 133, 134], "namedtupl": 395, "nameerror": 395, "namespac": [6, 16, 84, 87, 91, 106, 127, 395, 414, 417, 442, 445, 455, 512, 535, 613], "namibia": 521, "nan": [19, 20, 26, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 67, 88, 92, 104, 126, 128, 129, 133, 140, 177, 195, 196, 197, 198, 200, 206, 209, 210, 218, 220, 224, 225, 227, 228, 231, 232, 234, 235, 236, 237, 240, 241, 242, 243, 244, 245, 246, 247, 248, 251, 255, 257, 258, 259, 260, 261, 262, 266, 267, 268, 269, 271, 273, 274, 275, 276, 279, 281, 282, 283, 395, 419, 424, 465, 469, 470, 474, 475, 476, 477, 480, 481, 483, 484, 489, 492, 494, 495, 496, 502, 503, 504, 505, 507, 508, 509, 510, 511, 512, 515, 529, 530, 532, 546, 584, 593], "nan_to_num": [101, 104, 107, 111, 112, 155, 156, 162, 167, 170, 198, 206, 210, 280], "nansum": [197, 198, 200, 209, 210], "nasa": [58, 60, 61, 62, 64, 65, 102, 154, 202, 416, 587], "nat": 513, "nativ": [88, 92, 203, 407, 412, 449, 509], "natur": [88, 92, 395, 401, 419, 422, 512, 582], "nauroi": [316, 608], "naurois2012": 608, "navarro": [25, 534], "navi": 469, "navig": [396, 457, 459], "naxi": 509, "naxis1": 509, "naxis2": 509, "naxis3": 509, "naxis4": 509, "nbin": [16, 113, 118, 130, 157, 159, 165, 167, 199, 202, 207, 210, 353, 354, 411, 468, 474, 475, 476, 480, 481, 483, 484, 485, 487, 488, 489, 494, 495, 497, 499, 503, 507, 508, 509, 512, 517, 519, 520, 529, 550, 553, 555, 556, 559], "nbin_per_decad": 202, "nbstripout": 403, "ncall": [425, 513], "nchunk": 298, "ncol": [151, 152, 197, 198, 200, 206, 209, 210, 388, 392, 470, 474, 478, 481, 483, 485, 497, 503, 505, 509, 510, 555, 574], "ncp": 500, "nd": [197, 198, 200, 206, 209, 210, 278, 279, 417, 509, 559], "ndarrai": [17, 18, 21, 22, 24, 25, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 83, 88, 92, 93, 103, 121, 151, 152, 153, 154, 155, 158, 159, 161, 164, 165, 166, 167, 168, 170, 183, 195, 196, 197, 198, 199, 200, 201, 202, 203, 205, 206, 207, 208, 209, 210, 213, 214, 218, 219, 220, 221, 223, 230, 238, 256, 257, 283, 294, 295, 298, 299, 300, 301, 302, 304, 305, 306, 307, 308, 311, 313, 315, 316, 319, 332, 333, 334, 343, 348, 350, 384, 388, 389, 395, 503, 509, 532, 558, 559], "ndarrayshapemethod": [320, 321], "nddata": [440, 443], "nddataarrai": [441, 455, 456], "ndecad": [17, 18, 21, 22, 23, 24, 25, 27, 289], "ndim": [104, 111, 113, 118, 152, 154, 157, 196, 203, 208, 320, 321, 476, 480, 485, 489, 503, 504, 507, 508, 509, 518, 519, 532, 544, 559], "ndimag": [210, 409], "ndmap": 504, "ndmin": 319, "ne": 407, "nearest": [26, 137, 151, 152, 153, 154, 157, 158, 159, 161, 164, 166, 168, 169, 177, 197, 198, 200, 202, 206, 209, 210, 333, 451, 458, 460, 509, 544, 546, 558], "nearli": [395, 449, 470], "nebula": [50, 287, 293, 443, 474, 475, 476, 481, 484, 485, 486, 494, 505, 510, 512, 513, 515, 519, 520, 521, 529, 530, 532, 537, 559, 608], "necess": [420, 515], "necessari": [16, 84, 87, 91, 103, 106, 127, 320, 321, 398, 405, 410, 415, 422, 426, 427, 451, 470, 474, 476, 477, 481, 487, 488, 492, 495, 496, 504, 508, 509, 511, 512, 530, 542, 543, 546, 551], "necessarili": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 82, 410, 480], "need": [11, 16, 19, 20, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 84, 85, 87, 88, 90, 91, 92, 95, 103, 104, 106, 107, 111, 112, 125, 127, 128, 155, 156, 167, 169, 170, 205, 222, 286, 287, 319, 394, 395, 396, 400, 401, 402, 403, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 418, 420, 421, 422, 423, 425, 426, 428, 429, 434, 435, 438, 439, 440, 457, 459, 464, 469, 470, 475, 477, 478, 480, 481, 485, 487, 488, 495, 496, 499, 500, 505, 507, 509, 510, 511, 512, 513, 514, 518, 520, 529, 532, 542, 555, 557, 558, 609, 613], "need_upd": 449, "needless": 415, "neg": [19, 20, 26, 88, 92, 126, 128, 129, 130, 133, 134, 137, 224, 225, 228, 232, 234, 235, 236, 241, 247, 248, 251, 255, 257, 259, 260, 261, 266, 271, 273, 274, 275, 276, 279, 282, 283, 295, 299, 396, 446, 464, 465, 515, 544, 611, 612], "neglect": [131, 183, 468, 508, 544, 612], "neighbor": [158, 166, 168, 451, 458], "neighbour": [333, 568], "neither": [97, 183, 412, 415, 421], "neldermead": 215, "nep": [400, 421], "neraest": 198, "nest": [15, 196, 197, 198, 222, 223, 255, 293, 319, 361, 399, 415, 463, 467, 505, 506, 516, 519, 524, 557, 611], "nested_model": 255, "nested_sampling_crab": [467, 513, 516], "nestedsampl": 425, "net": [88, 92, 474], "neutrino": [52, 395], "neutron": 36, "never": [392, 394, 395, 398, 401, 405, 409, 418, 425, 513, 520], "nevertheless": 395, "new": [16, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 82, 83, 84, 86, 87, 88, 89, 91, 92, 93, 103, 104, 106, 107, 111, 112, 126, 127, 128, 129, 133, 135, 137, 140, 149, 151, 152, 153, 154, 157, 159, 161, 164, 169, 180, 181, 185, 195, 196, 197, 198, 199, 200, 201, 202, 203, 205, 206, 207, 208, 209, 210, 230, 254, 270, 280, 307, 319, 320, 321, 345, 372, 379, 398, 400, 401, 402, 403, 404, 405, 407, 408, 409, 412, 413, 414, 415, 416, 417, 418, 419, 421, 422, 423, 425, 426, 427, 428, 429, 430, 432, 433, 434, 435, 436, 437, 450, 453, 483, 499, 500, 502, 503, 509, 511, 512, 513, 543, 544, 546, 593, 608], "new_attribut": 395, "new_axi": 149, "new_dataset_nam": [230, 254], "new_datasets_nam": [19, 20, 26, 224, 225, 226, 227, 228, 229, 231, 232, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 251, 253, 255, 256, 257, 258, 259, 260, 261, 262, 263, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 278, 279, 280, 281, 282, 283, 284, 285], "new_ev": 546, "new_flux_map": 420, "new_fram": [320, 321], "new_funct": 395, "new_input": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40], "new_model": 593, "new_nam": [88, 92, 195, 196, 197, 198, 200, 201, 202, 205, 206, 208, 209, 210], "new_ob": [89, 546], "new_observ": 93, "newaxi": 558, "newer": [412, 428, 439, 458], "newfram": [320, 321], "newli": [443, 444, 445], "newrep": [320, 321], "next": [88, 92, 104, 395, 396, 400, 411, 416, 417, 421, 424, 426, 427, 455, 456, 468, 483, 486, 487, 489, 492, 502, 503, 504, 508, 509, 512, 513, 514, 515, 519], "nfcn": 505, "nfev": [103, 215, 216, 217, 223, 470, 472, 474, 475, 476, 483, 484, 485, 497, 499, 504, 505, 519, 529, 530], "nfw": [25, 27, 534], "nfwprofil": 501, "ni": 395, "nice": [395, 400, 406, 412, 414, 423, 426, 441, 449, 478, 483, 502, 513, 609], "nicer": [395, 434, 532], "nieto": [446, 449, 451, 452, 460, 462, 463, 464, 465], "nieva": [460, 465], "night": [410, 495], "nightli": [430, 494], "nightwise_lc": 494, "nigro": [446, 449, 451, 457, 458, 460, 463], "niter": [126, 128, 137, 425, 478, 513], "nmcid": 452, "nn": 520, "noah": [424, 464], "node": [19, 20, 26, 167, 170, 199, 202, 224, 225, 228, 232, 234, 235, 236, 241, 247, 248, 251, 255, 256, 257, 259, 260, 261, 266, 271, 273, 274, 275, 276, 279, 283, 440, 505, 507, 509, 518, 519, 567, 585], "node_typ": [159, 199, 202, 207, 487, 488, 507, 519], "noeth": [446, 447], "nois": [298, 304, 413, 608], "noisi": 518, "non": [16, 84, 87, 88, 91, 92, 101, 104, 106, 107, 111, 112, 117, 120, 126, 127, 128, 135, 137, 151, 152, 153, 154, 155, 156, 157, 158, 159, 161, 162, 164, 166, 167, 168, 169, 170, 179, 183, 195, 196, 197, 198, 200, 201, 202, 203, 205, 206, 207, 208, 209, 210, 280, 312, 314, 319, 385, 386, 388, 390, 401, 406, 409, 413, 415, 416, 417, 423, 425, 426, 439, 443, 444, 445, 449, 457, 460, 461, 463, 464, 465, 470, 499, 513, 519, 524, 525, 542, 546, 557, 558, 584, 608], "none": [16, 17, 19, 20, 21, 22, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 50, 51, 52, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 97, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 114, 115, 116, 119, 121, 123, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 140, 144, 147, 149, 151, 152, 153, 154, 155, 156, 157, 158, 159, 161, 162, 164, 165, 166, 167, 168, 169, 170, 172, 173, 174, 177, 179, 180, 181, 182, 183, 184, 185, 187, 188, 189, 190, 192, 193, 194, 195, 196, 197, 198, 200, 201, 202, 203, 204, 205, 206, 208, 209, 210, 211, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 234, 235, 236, 237, 238, 240, 241, 242, 243, 244, 245, 246, 247, 248, 251, 252, 254, 255, 256, 257, 258, 259, 260, 261, 262, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 278, 279, 280, 281, 282, 283, 284, 288, 293, 295, 298, 299, 316, 317, 319, 320, 321, 324, 329, 333, 341, 342, 343, 345, 348, 349, 350, 351, 360, 363, 369, 377, 382, 383, 384, 388, 389, 390, 391, 392, 395, 407, 409, 412, 420, 423, 424, 425, 426, 451, 462, 463, 465, 469, 470, 472, 474, 475, 477, 478, 483, 484, 485, 487, 488, 489, 492, 495, 496, 497, 499, 501, 502, 503, 504, 508, 509, 511, 512, 513, 515, 519, 529, 534, 542, 558, 564, 565, 566, 609], "nonetyp": [84, 87, 91, 106, 127], "nonposit": [19, 20, 26, 224, 225, 228, 232, 234, 235, 236, 241, 247, 248, 251, 255, 257, 259, 260, 261, 266, 271, 273, 274, 275, 276, 279, 283], "nonposx": [19, 20, 26, 224, 225, 228, 232, 234, 235, 236, 241, 247, 248, 251, 255, 257, 259, 260, 261, 266, 271, 273, 274, 275, 276, 279, 283, 449], "nonstopmod": 396, "nonzero": 39, "nooverlaperror": 462, "noqa": [19, 20, 154, 190, 201, 202, 208, 392], "nor": [97, 183, 405, 415, 417, 421, 427], "norm": [19, 20, 26, 125, 126, 128, 129, 130, 133, 134, 137, 139, 148, 174, 224, 225, 228, 229, 232, 234, 235, 236, 237, 238, 241, 242, 244, 245, 246, 247, 248, 251, 255, 256, 257, 259, 260, 261, 262, 266, 269, 271, 273, 274, 275, 276, 279, 281, 283, 284, 388, 406, 418, 420, 424, 443, 444, 446, 449, 464, 465, 467, 474, 478, 480, 481, 483, 484, 486, 487, 488, 489, 492, 495, 496, 497, 501, 502, 503, 504, 505, 519, 529, 530, 532, 534, 544, 546, 553, 560, 562, 566, 572, 573, 574, 593, 594, 603, 611, 614], "norm_0": [567, 585], "norm_1": [567, 585], "norm_2": [567, 585], "norm_3": [567, 585], "norm_4": 585, "norm_5": 585, "norm_err": [125, 126, 128, 130, 137, 420, 478, 489, 495, 503, 504, 544], "norm_errn": [126, 128, 495, 502, 504, 532, 544], "norm_errp": [126, 128, 495, 502, 504, 532, 544], "norm_only_chang": 461, "norm_prior": 424, "norm_scan": [126, 420, 474, 475, 504, 544], "norm_sensit": [126, 128, 495, 504], "norm_ul": [126, 128, 420, 489, 495, 502, 503, 504, 532, 544], "norma": [33, 38], "normal": [42, 103, 104, 107, 111, 112, 129, 130, 131, 133, 144, 151, 152, 153, 154, 156, 157, 158, 159, 161, 164, 165, 166, 167, 168, 169, 170, 174, 197, 198, 200, 206, 207, 209, 210, 238, 256, 257, 260, 280, 282, 286, 296, 319, 320, 321, 385, 386, 395, 396, 398, 400, 401, 405, 406, 409, 413, 420, 438, 442, 451, 465, 469, 481, 487, 494, 495, 497, 508, 509, 510, 511, 512, 519, 530, 532, 558, 564, 565, 566, 569, 570, 571, 593, 608, 610, 611, 614], "normalis": [67, 80, 125, 126, 128, 133, 151, 152, 153, 154, 157, 159, 161, 164, 165, 169, 174, 194, 197, 198, 200, 206, 209, 210, 256, 257, 270, 393, 475, 478, 480, 481, 496, 504, 510, 511, 512, 513, 519, 529], "normed_templ": 512, "normspectralmodel": [230, 254, 419, 446, 462, 464, 512, 553], "north": [231, 240, 243, 564], "notabl": 513, "notat": [446, 548, 550, 556, 612], "note": [15, 16, 19, 20, 26, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 78, 82, 83, 84, 86, 87, 88, 91, 92, 95, 103, 104, 105, 106, 107, 110, 111, 112, 121, 125, 127, 128, 129, 130, 133, 137, 154, 159, 167, 169, 179, 190, 208, 212, 215, 218, 222, 224, 225, 227, 228, 231, 232, 234, 235, 236, 237, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 251, 255, 257, 258, 259, 260, 261, 262, 266, 267, 268, 269, 271, 273, 274, 275, 276, 279, 281, 282, 283, 304, 305, 319, 320, 321, 342, 369, 386, 392, 394, 397, 398, 400, 403, 408, 409, 412, 416, 420, 421, 422, 424, 425, 427, 428, 431, 434, 437, 439, 459, 461, 463, 465, 468, 469, 470, 475, 476, 478, 480, 483, 486, 488, 495, 496, 497, 499, 500, 501, 502, 503, 507, 508, 509, 510, 511, 512, 513, 515, 518, 519, 520, 542, 544, 546, 551, 553, 558, 559, 569, 570, 582, 611, 612, 613], "notebook": [88, 92, 358, 398, 399, 404, 405, 409, 410, 411, 412, 413, 415, 416, 427, 428, 430, 431, 432, 435, 438, 439, 440, 441, 443, 444, 445, 447, 449, 451, 455, 456, 457, 458, 459, 464, 465, 468, 469, 470, 472, 474, 475, 476, 477, 478, 480, 481, 483, 484, 485, 486, 487, 488, 489, 492, 494, 495, 496, 497, 499, 500, 501, 502, 503, 504, 505, 507, 508, 509, 510, 511, 512, 513, 514, 515, 517, 518, 519, 520, 521, 524, 527, 529, 530, 532, 545, 546, 547, 560, 563, 564, 565, 566, 567, 568, 569, 570, 571, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 596, 597, 598, 599, 600, 601, 602, 603, 604, 609], "noteworthi": 222, "noth": [345, 412, 515], "notic": [401, 505], "notimplementederror": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40], "notion": 425, "nov": [402, 407, 412, 413, 416, 420, 436, 460], "novemb": [404, 436, 446, 447, 448, 449], "now": [16, 82, 84, 87, 89, 91, 100, 102, 106, 126, 127, 128, 194, 207, 255, 263, 395, 398, 400, 401, 402, 405, 407, 408, 409, 411, 412, 413, 414, 415, 416, 417, 420, 422, 423, 424, 433, 438, 439, 440, 441, 442, 443, 444, 445, 446, 449, 450, 451, 452, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 468, 469, 470, 474, 475, 476, 477, 480, 481, 483, 484, 486, 487, 488, 489, 492, 494, 495, 496, 497, 499, 503, 505, 509, 510, 511, 512, 513, 514, 515, 518, 519, 520, 521, 529, 530, 532, 543, 544, 555, 596, 600, 601, 602, 609, 611, 612, 613], "noworkflow": 415, "np": [83, 88, 92, 104, 107, 111, 112, 113, 118, 121, 125, 128, 137, 156, 197, 198, 200, 206, 209, 210, 215, 286, 395, 396, 406, 407, 410, 419, 420, 424, 425, 434, 460, 465, 468, 477, 478, 481, 487, 489, 492, 495, 496, 497, 499, 500, 501, 502, 504, 505, 507, 508, 509, 510, 512, 513, 514, 515, 538, 539, 540, 544, 546, 553, 558, 559, 564, 565, 567, 593, 602, 609], "npanel": [382, 614], "npix": [196, 205, 208, 209, 210, 474, 485, 507, 519, 555, 559, 563, 567], "npix_max": 196, "npoint": [298, 505], "npred": [104, 107, 111, 112, 125, 126, 128, 129, 130, 133, 134, 135, 137, 280, 301, 315, 406, 407, 408, 418, 420, 437, 439, 446, 449, 455, 457, 465, 478, 487, 489, 495, 502, 503, 504, 515, 519, 542, 544, 611], "npred_background": [104, 107, 111, 112, 126, 128, 446, 476, 477, 489, 503, 544, 611], "npred_background_min": 150, "npred_excess": [125, 126, 128, 130, 137, 139, 148, 478, 481, 489, 495, 497, 504, 544], "npred_excess_err": [126, 128], "npred_excess_errn": [126, 128], "npred_excess_errp": [126, 128], "npred_excess_ref": [126, 128], "npred_excess_ul": [126, 128], "npred_min": 150, "npred_off": [107, 112, 611], "npred_sig": [104, 107, 111, 112, 407], "npred_sign": [104, 107, 111, 112, 391, 449, 463, 503, 611], "npred_signal_min": 150, "npred_sourc": 503, "npredmodel": 426, "nrow": [470, 474, 505, 574], "nside": [196, 197, 198, 460, 519, 557], "nside2resol": 198, "nside_til": [196, 198], "nsou": 478, "nstep": [222, 410], "nu": [19, 26], "nu_e": [26, 501], "nu_mu": [26, 501], "nu_tau": [26, 501], "nuclei": 27, "nuisanc": [474, 505, 608, 612], "null": [123, 126, 128, 129, 130, 133, 134, 135, 293, 295, 299, 465, 475, 480, 481, 483, 486, 504, 512, 529, 544, 563, 564, 565, 566, 567, 568, 569, 570, 571, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 596, 597, 598, 599, 600, 601, 602, 603, 604, 611], "null_valu": [134, 135, 293, 489], "nullabl": [88, 92], "num": 83, "numba": 412, "number": [11, 17, 18, 19, 20, 21, 22, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 35, 36, 37, 39, 40, 42, 45, 46, 47, 67, 72, 76, 82, 83, 85, 86, 88, 92, 93, 94, 95, 101, 102, 104, 105, 107, 110, 111, 112, 114, 115, 121, 123, 125, 126, 127, 128, 129, 130, 133, 134, 135, 136, 137, 151, 152, 153, 154, 155, 156, 157, 158, 159, 161, 162, 164, 166, 167, 168, 169, 170, 173, 174, 177, 180, 185, 195, 196, 197, 198, 199, 200, 201, 202, 203, 205, 206, 207, 208, 209, 210, 215, 216, 217, 218, 219, 221, 222, 223, 224, 225, 227, 228, 229, 230, 231, 232, 234, 235, 236, 237, 240, 241, 242, 243, 244, 245, 246, 247, 248, 251, 254, 255, 257, 258, 259, 260, 261, 262, 266, 267, 268, 269, 271, 273, 274, 275, 276, 279, 281, 282, 283, 284, 289, 293, 295, 298, 299, 312, 313, 314, 319, 320, 321, 339, 341, 342, 343, 344, 345, 348, 349, 350, 351, 353, 354, 382, 388, 396, 399, 400, 401, 404, 406, 407, 408, 409, 410, 414, 417, 420, 422, 423, 425, 426, 427, 434, 439, 449, 451, 452, 453, 458, 459, 460, 463, 464, 465, 468, 469, 470, 474, 475, 476, 477, 478, 480, 481, 483, 485, 486, 487, 488, 492, 494, 495, 496, 497, 499, 500, 501, 502, 503, 504, 508, 509, 510, 512, 513, 514, 518, 519, 520, 521, 529, 530, 532, 536, 542, 544, 546, 553, 555, 558, 559, 608, 609, 610, 611, 612], "number_of_column": [88, 92], "number_param": 213, "numer": [17, 18, 19, 20, 21, 22, 24, 25, 26, 27, 83, 88, 92, 128, 202, 218, 224, 225, 227, 228, 231, 232, 234, 235, 236, 237, 240, 241, 242, 243, 244, 245, 246, 247, 248, 251, 255, 257, 258, 259, 260, 261, 262, 266, 267, 268, 269, 271, 273, 274, 275, 276, 279, 281, 282, 283, 284, 319, 394, 395, 408, 413, 431, 449, 468, 477, 480, 483, 485, 492, 496, 509, 518], "numpi": [19, 20, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 83, 88, 92, 93, 103, 113, 118, 121, 128, 151, 152, 153, 154, 156, 157, 158, 159, 161, 164, 165, 166, 168, 169, 195, 196, 197, 198, 200, 205, 206, 208, 209, 210, 212, 213, 215, 218, 219, 220, 221, 224, 227, 228, 230, 231, 232, 234, 235, 236, 237, 240, 241, 242, 243, 244, 245, 246, 247, 248, 251, 254, 258, 259, 260, 261, 262, 266, 267, 268, 269, 270, 271, 274, 275, 276, 281, 282, 295, 299, 319, 345, 350, 389, 394, 395, 396, 398, 402, 406, 408, 412, 413, 414, 422, 424, 434, 435, 442, 443, 446, 454, 455, 456, 458, 460, 461, 462, 464, 465, 468, 470, 474, 475, 476, 477, 478, 480, 481, 483, 484, 485, 486, 487, 488, 489, 492, 494, 495, 496, 497, 499, 500, 501, 502, 503, 504, 505, 507, 508, 509, 510, 511, 512, 513, 514, 515, 517, 518, 519, 520, 521, 524, 529, 530, 532, 538, 539, 540, 544, 546, 558, 559, 564, 565, 567, 593, 602], "numpoint": [215, 505], "numpy121": 398, "nupeak_ob": 532, "nutshel": 613, "nyfewqzx": 483, "nzvnxmdg": 499, "n\u00f6the": [449, 451, 452], "o": [67, 82, 88, 92, 103, 204, 230, 254, 395, 404, 409, 412, 415, 417, 420, 429, 430, 432, 441, 449, 452, 455, 456, 457, 463, 468, 470, 474, 478, 485, 494, 495, 496, 499, 500, 509, 514, 515, 518, 608, 609], "o8enohmz": 499, "ob": [40, 82, 83, 89, 90, 92, 93, 97, 167, 177, 317, 318, 407, 408, 411, 412, 418, 434, 452, 453, 462, 468, 470, 474, 477, 478, 485, 487, 492, 495, 496, 497, 499, 508, 514, 518, 519, 520, 521, 527, 530, 543, 546, 551, 553, 555, 556], "obei": 558, "obj": [16, 84, 87, 91, 106, 127, 476, 499], "object": [6, 15, 16, 19, 20, 23, 26, 28, 29, 30, 31, 32, 34, 35, 36, 37, 39, 40, 50, 51, 52, 54, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 95, 101, 103, 104, 105, 106, 107, 109, 111, 112, 125, 126, 127, 128, 131, 132, 133, 135, 137, 140, 141, 142, 143, 146, 149, 151, 152, 153, 154, 155, 156, 157, 158, 159, 161, 162, 164, 165, 166, 167, 168, 169, 170, 171, 173, 181, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 278, 279, 280, 281, 282, 283, 284, 285, 293, 295, 299, 319, 320, 321, 325, 329, 330, 333, 341, 343, 345, 351, 354, 368, 369, 370, 371, 376, 382, 388, 390, 391, 392, 401, 406, 407, 408, 409, 410, 411, 413, 414, 415, 416, 417, 420, 422, 423, 425, 426, 430, 434, 440, 441, 443, 444, 445, 446, 449, 451, 456, 457, 458, 460, 463, 464, 465, 468, 469, 470, 472, 474, 475, 476, 477, 478, 484, 486, 489, 492, 494, 495, 496, 499, 500, 503, 505, 508, 509, 510, 511, 512, 513, 515, 518, 519, 520, 521, 529, 530, 532, 536, 541, 542, 543, 544, 552, 555, 557, 558, 559, 593, 606, 608, 609, 613], "obs2": 546, "obs_clust": [93, 514], "obs_col": 485, "obs_con": [16, 475, 480, 481, 483, 529], "obs_copi": 89, "obs_fil": [16, 475, 480, 481, 483, 529], "obs_filenam": 520, "obs_filt": [89, 90], "obs_id": [16, 82, 88, 89, 90, 92, 97, 150, 215, 317, 318, 405, 407, 418, 423, 434, 470, 474, 475, 476, 477, 480, 481, 483, 484, 485, 487, 488, 494, 495, 496, 499, 505, 508, 514, 518, 520, 521, 527, 529, 530, 555], "obs_id_uniqu": 88, "obs_index": 82, "obs_info": [91, 106, 423], "obs_list": [457, 459], "obs_list_vela": 497, "obs_mod": 96, "obs_model": 469, "obs_muoneff": 514, "obs_po": [41, 324], "obs_tabl": [82, 92, 97, 317, 318, 451, 485, 487, 495, 499, 508, 514, 518, 520, 521, 527, 530, 555], "obs_table_filenam": 82, "obs_tim": [16, 475, 480, 481, 483, 529], "obs_time_src": 508, "obs_zenith": 514, "obscor": 464, "observ": [6, 15, 16, 41, 82, 83, 85, 86, 88, 90, 91, 92, 94, 95, 96, 97, 103, 104, 105, 106, 107, 110, 111, 112, 114, 115, 119, 167, 172, 173, 174, 177, 178, 179, 180, 182, 183, 184, 187, 188, 189, 190, 192, 193, 194, 229, 232, 237, 242, 244, 245, 246, 262, 269, 281, 284, 300, 306, 316, 318, 320, 321, 329, 350, 399, 401, 407, 408, 409, 410, 411, 415, 416, 418, 420, 423, 426, 430, 439, 443, 444, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 463, 464, 465, 467, 468, 470, 476, 477, 480, 481, 483, 484, 492, 496, 497, 499, 500, 505, 506, 513, 515, 516, 517, 518, 520, 521, 524, 527, 534, 542, 543, 546, 549, 551, 553, 555, 556, 584, 608, 609, 610, 611], "observation_clust": [467, 514, 516], "observation_dead_time_fract": [83, 89], "observation_list": 93, "observation_live_time_dur": [83, 89], "observation_time_dur": [83, 89], "observation_time_start": 83, "observation_time_stop": 83, "observationcheck": 458, "observationcta": 405, "observationeventsampl": 464, "observationfilt": [89, 405, 410, 438, 459], "observationlist": [405, 459], "observationmetadata": [423, 426], "observations_list": 93, "observationsconfig": 16, "observationseventsampl": 464, "observationseventssampl": 465, "observationssummari": 443, "observationstat": [438, 443], "observationt": [82, 408, 409, 460, 514, 520, 530], "observationtablecheck": 458, "observationtablesummari": 455, "observatori": [57, 59, 63, 82, 83, 85, 89, 91, 95, 320, 408, 415, 423, 427, 430, 450, 518, 520, 521, 524, 541, 546, 551], "observatory_earth_loc": [83, 89, 465], "observatory_loc": [320, 321, 423, 451, 468, 477, 487, 488, 492, 496], "obsinfometadata": [91, 106], "obstim": [85, 95, 320, 321, 613], "obtain": [85, 104, 107, 110, 112, 126, 128, 141, 303, 320, 321, 405, 410, 412, 413, 420, 426, 459, 465, 474, 475, 476, 478, 481, 487, 488, 495, 499, 500, 505, 509, 510, 515, 529, 532, 542, 546, 550, 551, 608, 610, 611], "obviou": [407, 414, 416, 417, 423], "obvious": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 320, 321, 534], "occur": [197, 198, 200, 209, 210, 351, 395, 416, 417, 421, 519], "occurr": [93, 101, 201, 219, 221, 230, 254], "oct": [403, 405, 406, 410, 412, 416, 422], "octob": [404, 415], "odd": [208, 210], "odd_npix": [208, 210], "odot": [28, 35, 39, 40, 52], "off": [104, 105, 107, 109, 110, 111, 112, 125, 126, 128, 172, 178, 179, 182, 185, 194, 299, 316, 392, 393, 398, 401, 407, 409, 410, 411, 426, 443, 449, 451, 453, 463, 465, 468, 469, 470, 475, 476, 481, 485, 494, 495, 497, 499, 503, 505, 508, 513, 515, 517, 542, 551, 555, 556, 608, 610, 611, 612], "off_2": [107, 112], "off_ev": 497, "off_patch": 497, "off_phas": [178, 497], "off_phase_rang": 497, "offdatabackgroundmak": 454, "offer": [126, 398, 406, 415, 422, 423, 426, 430, 431, 458, 476, 504, 505, 508, 512, 546], "offici": [422, 547, 609], "offlin": [88, 92], "offset": [83, 97, 114, 115, 151, 152, 153, 154, 157, 158, 159, 161, 164, 166, 167, 168, 169, 170, 173, 177, 183, 184, 189, 192, 197, 198, 200, 202, 206, 209, 210, 395, 401, 409, 434, 443, 453, 455, 457, 462, 463, 464, 465, 468, 476, 477, 480, 483, 484, 485, 492, 497, 507, 508, 514, 518, 530, 543, 551, 553, 556], "offset2": 83, "offset_axi": [157, 158, 159], "offset_band": 83, "offset_from_median": 83, "offset_index": 164, "offset_max": [16, 83, 173, 183, 189, 192, 475, 480, 481, 483, 485, 492, 497, 508, 529, 530, 553, 556], "offset_min": 83, "often": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 141, 287, 385, 386, 395, 400, 409, 410, 411, 413, 456, 468, 470, 475, 480, 481, 484, 485, 492, 499, 503, 505, 508, 510, 529, 530, 542, 608], "ogip": [96, 108, 109, 112, 154, 199, 201, 202, 205, 206, 207, 407, 410, 456, 469, 474, 484, 542, 550, 559], "ogip_column": 206, "ogipdatasetread": 112, "ogipdatasetwrit": [112, 462, 464], "ok": [395, 409, 505, 513], "ol": 508, "old": [201, 379, 395, 400, 403, 407, 411, 412, 440, 441, 456, 457, 458, 500], "old_attribut": 395, "older": [402, 412, 431, 456, 502], "oldest": 416, "olga": [454, 455], "olivera": [446, 449, 451, 452, 460, 462, 463, 464, 465], "omega": [19, 20, 23, 269, 286, 518, 564, 602], "omit": [137, 396, 483, 518, 609], "omp": 416, "on_circl": 555, "on_ellipse_annulu": 555, "on_ev": 497, "on_patch": 497, "on_phas": [178, 497], "on_phase_rang": 497, "on_posit": 194, "on_radii": 468, "on_radiu": [485, 497], "on_rectangl": 555, "on_region": [16, 104, 107, 180, 468, 470, 474, 475, 476, 477, 480, 481, 483, 485, 487, 488, 494, 495, 497, 499, 503, 529, 555], "on_region_radiu": [468, 474, 477, 487, 488, 495, 499], "onc": [88, 92, 104, 135, 208, 395, 398, 400, 405, 406, 409, 410, 411, 416, 417, 418, 420, 421, 425, 426, 427, 428, 429, 430, 432, 476, 495, 497, 508, 511, 513, 520, 524, 543, 546, 609], "one": [16, 19, 20, 26, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 59, 70, 77, 84, 87, 88, 90, 91, 92, 93, 94, 96, 100, 103, 104, 106, 107, 110, 111, 112, 115, 121, 125, 126, 127, 128, 129, 130, 131, 133, 134, 135, 137, 139, 140, 145, 148, 151, 152, 153, 154, 155, 156, 157, 158, 159, 161, 162, 164, 165, 166, 167, 168, 169, 170, 173, 177, 179, 194, 195, 196, 197, 198, 199, 200, 201, 202, 205, 206, 207, 208, 209, 210, 215, 224, 225, 226, 227, 228, 229, 230, 231, 232, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 251, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 278, 279, 280, 281, 282, 283, 284, 285, 289, 293, 295, 298, 299, 320, 321, 329, 334, 350, 365, 382, 388, 389, 395, 396, 397, 398, 400, 401, 402, 403, 404, 406, 407, 408, 409, 411, 412, 413, 414, 415, 416, 418, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 434, 457, 460, 461, 463, 465, 468, 470, 474, 475, 476, 480, 483, 487, 494, 496, 497, 500, 502, 503, 505, 507, 508, 509, 510, 511, 512, 513, 515, 517, 518, 519, 520, 529, 530, 532, 541, 542, 543, 544, 546, 551, 553, 555, 558, 559, 566, 606, 607, 608, 609, 610, 611, 612, 613], "ones": [88, 92, 121, 125, 129, 133, 137, 154, 201, 399, 403, 407, 409, 412, 416, 424, 431, 434, 496, 500, 507, 509, 534, 553, 608, 609], "ones_lik": [497, 553], "ongo": [398, 401, 402, 428, 513, 551], "onli": [16, 19, 20, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 70, 72, 74, 79, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 94, 96, 101, 102, 103, 104, 105, 106, 107, 110, 111, 112, 125, 127, 128, 129, 130, 133, 137, 138, 140, 147, 148, 155, 156, 160, 162, 167, 170, 173, 177, 179, 184, 194, 195, 196, 197, 198, 200, 202, 205, 206, 207, 208, 209, 210, 218, 219, 221, 222, 224, 227, 228, 230, 231, 232, 234, 235, 236, 237, 240, 241, 242, 243, 244, 245, 246, 247, 248, 251, 252, 254, 255, 258, 259, 260, 261, 262, 266, 267, 268, 269, 270, 271, 274, 275, 276, 280, 281, 282, 295, 299, 312, 314, 319, 320, 321, 341, 369, 392, 395, 396, 398, 400, 401, 402, 403, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 422, 423, 425, 426, 431, 439, 441, 445, 449, 451, 452, 457, 461, 463, 464, 465, 470, 472, 474, 475, 476, 480, 481, 483, 484, 486, 487, 488, 489, 494, 495, 496, 497, 499, 502, 503, 505, 507, 508, 509, 510, 511, 512, 513, 514, 515, 518, 519, 520, 530, 534, 542, 544, 550, 553, 556, 559, 604, 608, 609, 610, 611], "onlin": [88, 92, 396, 400, 403, 416, 434], "onlinelibrari": 139, "onoff": [452, 542], "onserv": 94, "ontim": [190, 405, 487, 503], "onto": [107, 112, 197, 198, 200, 206, 208, 209, 210, 382, 401, 530, 542, 546, 558, 607], "oo": 422, "op": 411, "opac": 232, "open": [66, 88, 92, 395, 396, 398, 400, 406, 409, 412, 414, 415, 416, 420, 421, 422, 427, 429, 430, 432, 434, 435, 456, 475, 484, 509, 518, 520, 521, 529, 541, 608, 609], "openastronomi": 457, "oper": [88, 92, 196, 208, 225, 395, 401, 406, 409, 444, 446, 449, 458, 459, 463, 469, 503, 511, 512, 558, 559, 574, 576, 580, 583, 585, 588, 593], "opinion": [400, 609], "oppos": [500, 584, 609], "opposit": [197, 198, 425], "opt": [90, 396, 502, 574, 584], "opt_method": 505, "optic": [232, 409, 415, 469, 574], "optim": [19, 20, 26, 103, 130, 134, 137, 148, 213, 214, 215, 216, 217, 218, 219, 220, 221, 224, 225, 228, 232, 234, 235, 236, 241, 247, 248, 251, 255, 257, 259, 260, 261, 266, 271, 273, 274, 275, 276, 279, 283, 388, 394, 395, 404, 407, 408, 418, 420, 426, 470, 472, 474, 475, 476, 477, 478, 483, 484, 485, 497, 499, 500, 504, 505, 513, 515, 519, 529, 530], "optimis": [19, 20, 215, 216, 217, 218, 224, 227, 228, 231, 232, 234, 235, 236, 237, 240, 241, 242, 243, 244, 245, 246, 247, 248, 251, 258, 259, 260, 261, 262, 266, 267, 268, 269, 271, 274, 275, 276, 281, 282, 409, 411, 413, 458, 465, 544, 606], "optimize_opt": [215, 483, 492, 504, 505, 530], "optimize_result": [215, 216, 463], "optimizeresult": [103, 215, 216, 470, 472, 474, 475, 476, 483, 484, 485, 497, 499, 504, 505, 519, 529, 530], "optin": 422, "optinon": [111, 112], "option": [11, 13, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 45, 46, 47, 67, 71, 72, 74, 75, 76, 77, 78, 79, 80, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 114, 115, 117, 119, 120, 121, 123, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 140, 144, 147, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 161, 162, 164, 165, 166, 167, 168, 169, 170, 173, 174, 177, 178, 179, 180, 181, 184, 185, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 224, 225, 226, 227, 228, 229, 230, 231, 232, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 251, 254, 255, 256, 257, 258, 259, 260, 261, 262, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 289, 291, 293, 294, 295, 298, 299, 303, 304, 305, 307, 312, 313, 314, 316, 317, 319, 320, 321, 332, 342, 345, 348, 349, 350, 351, 353, 354, 357, 362, 363, 365, 376, 377, 382, 383, 384, 388, 389, 390, 391, 392, 395, 396, 398, 400, 401, 403, 404, 406, 407, 409, 411, 413, 415, 416, 419, 423, 425, 426, 428, 429, 430, 431, 432, 438, 439, 440, 443, 445, 446, 449, 451, 455, 457, 458, 459, 460, 462, 463, 464, 465, 478, 483, 492, 494, 496, 502, 503, 508, 509, 510, 512, 514, 518, 519, 529, 530, 542, 544, 546, 558, 559, 604, 608, 609], "option1": 396, "option2": 396, "option3": 396, "option_context": [88, 92], "optionali": 567, "optout": 422, "optpars": 400, "opu": 415, "oral": 422, "orang": [396, 474, 483, 489, 494, 497, 501, 504, 515, 555], "orchestr": [401, 405, 407, 411, 475, 529, 530], "orcid": 422, "order": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 82, 88, 92, 95, 101, 102, 103, 104, 107, 128, 140, 151, 152, 154, 155, 156, 157, 158, 159, 162, 164, 167, 169, 170, 173, 177, 184, 187, 188, 193, 195, 196, 197, 198, 200, 201, 205, 206, 207, 208, 209, 210, 280, 293, 319, 320, 321, 392, 395, 396, 401, 406, 407, 409, 410, 411, 412, 415, 420, 421, 422, 424, 425, 439, 440, 441, 442, 443, 444, 445, 446, 449, 465, 474, 475, 476, 478, 483, 484, 487, 497, 502, 505, 507, 508, 509, 512, 513, 520, 529, 530, 532, 551, 557, 558, 559, 609, 612], "ordereddict": [401, 412, 442], "ordinari": 532, "org": [11, 34, 64, 65, 83, 88, 89, 92, 183, 215, 260, 261, 275, 276, 312, 314, 319, 320, 321, 398, 403, 412, 416, 421, 422, 426, 427, 429, 430, 432, 436, 455, 457, 468, 477, 480, 483, 484, 485, 492, 496, 501, 502, 505, 518, 591, 592, 609], "organ": [399, 416, 421, 422, 426, 449, 520, 521, 543, 558], "organis": [402, 411, 414, 422, 457], "orient": [152, 160, 161, 164, 168, 395, 406], "origin": [16, 36, 37, 41, 84, 87, 88, 91, 92, 104, 106, 111, 126, 127, 128, 198, 210, 278, 280, 282, 320, 321, 405, 409, 415, 422, 423, 427, 455, 475, 480, 481, 483, 495, 500, 509, 512, 519, 529, 551, 563, 564, 565, 566, 567, 568, 569, 570, 571, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 596, 597, 598, 599, 600, 601, 602, 603, 604, 612, 613], "orm": 415, "orthogon": 354, "orthonorm": 148, "oscar": [457, 458], "osx": 445, "other": [13, 16, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 56, 67, 69, 83, 84, 86, 87, 88, 91, 92, 104, 106, 107, 111, 112, 126, 127, 129, 133, 134, 151, 152, 153, 154, 155, 156, 157, 158, 159, 161, 162, 164, 166, 167, 168, 169, 170, 179, 196, 197, 198, 199, 200, 201, 202, 205, 206, 207, 208, 209, 210, 215, 219, 221, 222, 280, 294, 319, 320, 321, 334, 364, 384, 389, 394, 398, 400, 402, 403, 404, 406, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 420, 422, 423, 426, 429, 435, 457, 468, 469, 470, 474, 475, 476, 477, 478, 480, 481, 483, 484, 485, 486, 487, 488, 489, 492, 494, 495, 496, 497, 500, 501, 502, 503, 504, 505, 507, 508, 509, 510, 511, 512, 513, 515, 517, 518, 519, 520, 521, 529, 530, 532, 542, 543, 544, 546, 551, 553, 555, 559, 576, 606, 607, 609, 613], "other_id": 470, "otherwis": [16, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 82, 84, 87, 88, 91, 92, 104, 106, 111, 127, 165, 204, 208, 210, 212, 218, 219, 220, 221, 230, 254, 285, 319, 320, 321, 388, 408, 419, 422, 465, 511, 512, 519, 575], "our": [395, 398, 404, 409, 411, 412, 414, 415, 418, 419, 420, 422, 426, 439, 440, 456, 465, 468, 470, 474, 475, 476, 480, 481, 483, 484, 485, 488, 495, 496, 497, 499, 509, 510, 513, 515, 520, 529, 530, 609], "ourself": 532, "out": [11, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 88, 92, 93, 95, 101, 103, 128, 197, 198, 200, 206, 209, 210, 254, 267, 268, 320, 321, 394, 395, 396, 398, 400, 403, 405, 407, 409, 411, 413, 414, 416, 421, 425, 426, 427, 434, 435, 437, 443, 457, 472, 476, 480, 481, 499, 509, 510, 513, 518, 519, 529, 532, 534, 535, 555, 569, 570, 606, 609, 613], "out_fold": 411, "outcom": [400, 409], "outdat": [412, 416], "outdir": [16, 82, 94, 475, 480, 481, 483, 529], "outer": [43, 44, 52, 53, 130, 172, 267, 570], "outer_height": [555, 559], "outer_width": [555, 559], "outfil": 395, "outflow": 207, "outlin": [104, 107, 111, 112, 226, 227, 231, 240, 243, 258, 267, 268, 282, 398, 400, 403, 404, 405, 406, 409, 416, 419], "output": [11, 16, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 41, 83, 84, 86, 87, 88, 89, 91, 92, 94, 106, 119, 125, 127, 137, 145, 146, 154, 159, 197, 198, 200, 206, 209, 210, 216, 222, 223, 230, 245, 254, 298, 320, 321, 350, 396, 403, 405, 408, 411, 412, 415, 417, 420, 423, 438, 453, 459, 462, 463, 465, 483, 487, 488, 492, 496, 504, 508, 509, 529, 530, 544, 546, 609, 610], "output_map": [197, 198, 200, 206, 209, 210], "output_unit": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40], "outsid": [88, 92, 104, 107, 111, 112, 117, 120, 154, 174, 195, 196, 197, 198, 199, 200, 201, 202, 205, 206, 207, 208, 209, 210, 218, 220, 232, 283, 334, 383, 395, 409, 410, 411, 415, 426, 449, 481, 504, 505, 508, 509, 510, 546, 553, 566, 593, 608], "over": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 67, 83, 88, 89, 92, 93, 96, 103, 104, 107, 111, 112, 129, 137, 141, 154, 155, 165, 167, 170, 177, 184, 187, 188, 190, 191, 195, 196, 197, 198, 200, 201, 202, 205, 206, 208, 209, 210, 230, 254, 286, 295, 299, 303, 332, 333, 346, 386, 395, 396, 400, 403, 404, 405, 408, 409, 410, 416, 419, 423, 425, 429, 431, 449, 470, 474, 478, 481, 483, 486, 487, 496, 502, 503, 504, 505, 508, 509, 512, 513, 530, 532, 544, 550, 608, 610, 611], "overal": [403, 409, 415, 465, 474], "overcom": [425, 510, 513], "overestim": [544, 611], "overflow": [207, 476, 496, 499, 597], "overkil": 496, "overlai": [475, 504], "overlaid": [104, 107, 111, 112, 474, 475], "overlap": [86, 92, 117, 120, 133, 185, 202, 207, 392, 410, 474], "overlap_ok": 86, "overlin": [104, 111, 542], "overload": 449, "overplot": [502, 541], "overrid": [16, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 84, 87, 91, 106, 127, 361, 406, 474, 476, 485, 489], "overridden": [16, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 84, 87, 88, 91, 92, 106, 127, 205, 320, 321, 392], "overs": 415, "oversampl": [105, 110, 165, 167, 170, 177, 184, 190, 196, 197, 198, 200, 205, 206, 209, 210, 227, 231, 240, 243, 244, 245, 256, 267, 268, 270, 272, 278, 282, 284, 289, 440, 508], "oversample_energy_factor": [105, 110, 488], "oversampling_factor": [198, 208, 226, 227, 231, 240, 243, 244, 245, 256, 258, 267, 268, 270, 272, 278, 282, 284], "overview": [6, 398, 415, 425, 428, 443, 444, 446, 449, 467, 497, 504, 509, 512, 513, 524, 531, 532, 533, 546, 547, 560, 610], "overwrit": [11, 15, 16, 19, 20, 26, 82, 89, 94, 101, 103, 104, 107, 109, 111, 112, 126, 128, 155, 156, 162, 167, 170, 195, 196, 197, 198, 200, 202, 204, 205, 206, 207, 208, 209, 210, 216, 218, 222, 224, 227, 228, 230, 231, 232, 234, 235, 236, 237, 240, 241, 242, 243, 244, 245, 246, 247, 248, 251, 254, 258, 259, 260, 261, 262, 266, 267, 268, 269, 271, 274, 275, 276, 278, 279, 280, 281, 282, 341, 363, 420, 458, 460, 465, 474, 475, 483, 484, 487, 488, 489, 507, 509, 510, 511, 512, 518, 519, 527, 529, 530, 542, 559, 571, 609], "overwrite_templ": [216, 230, 254], "overwritten": [167, 170, 333], "owen": [437, 450], "own": [88, 92, 100, 126, 128, 204, 206, 401, 411, 418, 422, 449, 468, 487, 512, 519, 530, 546, 558, 559], "p": [38, 51, 54, 88, 92, 111, 112, 132, 302, 316, 395, 426, 449, 475, 486, 501, 505, 529, 546, 551, 552, 611], "p0_birth": 43, "p15ytyx6": 499, "p90": 48, "p_": [548, 550, 551, 552], "p_0": [51, 197, 200, 206, 209, 210, 538], "p_dot": [51, 54], "p_i": [197, 200, 206, 209, 210], "p_lat": [197, 200, 206, 209, 210], "p_lon": [197, 200, 206, 209, 210], "p_mean": 42, "p_n": [197, 200, 206, 209, 210], "p_stdv": 42, "p_valu": [295, 299, 505, 609, 611], "pace": [403, 404], "packag": [11, 145, 319, 358, 394, 395, 396, 398, 399, 400, 401, 402, 403, 404, 409, 412, 413, 415, 416, 421, 422, 423, 425, 426, 427, 429, 430, 432, 433, 434, 435, 436, 437, 439, 442, 443, 445, 446, 449, 452, 453, 454, 455, 456, 457, 458, 460, 468, 469, 470, 474, 475, 476, 477, 478, 480, 481, 483, 484, 485, 486, 487, 488, 489, 492, 494, 495, 496, 497, 499, 501, 502, 503, 505, 508, 509, 510, 511, 512, 513, 515, 517, 518, 519, 520, 521, 529, 530, 532, 542, 545, 546, 547, 554, 559, 571, 582, 597, 609, 613], "pacman": 454, "paczynski": [36, 37], "paczynski1990": [28, 29, 30, 35, 39, 40, 48], "paczynski1990veloc": 49, "pad": [88, 92, 104, 107, 111, 112, 137, 151, 152, 153, 154, 157, 158, 159, 161, 164, 166, 168, 169, 177, 195, 196, 197, 198, 199, 200, 201, 202, 205, 206, 208, 209, 210, 383, 446, 449], "pad_width": [104, 111, 137, 151, 152, 153, 154, 157, 158, 159, 161, 164, 166, 168, 169, 195, 196, 197, 198, 200, 201, 202, 205, 206, 208, 209, 210], "pad_with": [197, 198, 200, 206, 209, 210], "page": [6, 88, 92, 215, 300, 306, 316, 396, 398, 400, 407, 409, 412, 416, 422, 425, 427, 428, 430, 431, 435, 443, 444, 449, 452, 453, 456, 457, 458, 459, 465, 505, 509, 521, 522, 524, 544, 546, 557, 559, 610, 611, 613], "pain": [395, 398, 402], "pair": [16, 84, 87, 91, 104, 106, 107, 111, 112, 126, 127, 128, 141, 151, 152, 153, 154, 155, 156, 157, 158, 159, 161, 162, 164, 166, 167, 168, 169, 170, 195, 196, 197, 198, 200, 201, 204, 205, 206, 208, 209, 210, 411, 469], "panda": [88, 92, 394, 412, 458, 468, 470, 474, 475, 476, 477, 478, 480, 481, 483, 484, 485, 486, 487, 488, 489, 494, 495, 496, 497, 501, 502, 503, 505, 508, 509, 510, 511, 512, 513, 515, 517, 518, 519, 520, 521, 529, 530, 532], "panel": [89, 103, 104, 107, 111, 112, 382, 452, 487, 505], "panel_fov": 382, "panni": 449, "papadopoulo": [449, 451], "paper": [57, 59, 63, 72, 74, 129, 183, 416, 422, 425, 458, 495, 500, 502, 508, 513, 520, 534], "papermil": 411, "par": [406, 419, 424, 425, 469, 499, 505, 515, 518], "par_000_amplitud": 505, "par_001_alpha": 505, "par_002_beta": 505, "par_00x_": 406, "par_1": [215, 505], "par_2": [215, 505], "par_alpha": [215, 505], "par_beta": [215, 505], "par_box": 92, "par_nam": [230, 238, 254, 270, 280], "par_to_v": 518, "par_typ": [230, 238, 254, 270, 280], "parabol": [294, 334, 505], "parabola": [247, 248, 467, 484, 505, 560, 573, 594], "paragraph": 400, "parallel": [94, 129, 130, 133, 137, 173, 336, 337, 338, 339, 340, 341, 342, 398, 412, 428, 451, 463, 464, 465, 478, 503], "parallel_backend": [94, 129, 130, 133, 137, 173, 341, 489], "parallelbackendenum": 336, "parallelis": 425, "parallelmixin": [94, 129, 137, 173], "param": [16, 84, 87, 91, 106, 127, 232, 283, 388, 411, 444, 505], "param_nam": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40], "param_pair": 505, "param_set": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40], "paramet": [15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 71, 72, 74, 75, 76, 77, 78, 79, 80, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 97, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 161, 162, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 251, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 291, 293, 294, 295, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 323, 325, 327, 328, 330, 332, 333, 334, 335, 341, 342, 343, 345, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 375, 376, 377, 378, 379, 381, 382, 383, 384, 385, 386, 388, 389, 390, 391, 392, 393, 395, 396, 404, 407, 408, 410, 411, 413, 414, 415, 418, 420, 422, 435, 438, 439, 440, 441, 442, 443, 445, 446, 449, 451, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 469, 470, 472, 474, 476, 477, 478, 480, 481, 483, 484, 485, 487, 488, 489, 492, 494, 496, 497, 499, 501, 502, 503, 504, 507, 508, 513, 514, 515, 518, 519, 530, 532, 534, 542, 544, 545, 546, 553, 559, 563, 564, 565, 566, 567, 568, 569, 570, 571, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 596, 597, 598, 599, 600, 601, 602, 603, 604, 606, 607, 608, 609, 610, 611, 612], "parameter": 512, "parameter_constraint": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40], "parameter_matching_signific": 135, "parameter_nam": 396, "parameter_name_scan": 215, "parameter_typ": 396, "parameterestim": [122, 445, 464], "parameteris": [548, 550], "parameters_list": [219, 221], "parameters_nam": [230, 254], "parameters_stat_sum": 424, "parameters_unique_nam": [19, 20, 26, 224, 225, 226, 227, 228, 229, 230, 231, 232, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 251, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 278, 279, 280, 281, 282, 283, 284, 285, 505], "parametersensitivityestim": 122, "parametr": [16, 27, 84, 87, 91, 103, 106, 127, 157, 158, 163, 166, 168, 247, 248, 267, 407, 411, 419, 439, 446, 449, 476, 478, 512, 518, 569, 570, 582], "parametricpsf": [158, 166, 449, 451], "parametris": [166, 419, 443, 550, 552, 564, 565, 566, 567, 575, 578, 579, 580, 581, 582, 583, 585, 586, 587, 588, 589, 590, 591, 592, 596, 597, 598, 599, 600, 601, 602, 603, 604], "paramnam": [425, 513], "parent": [16, 84, 87, 91, 106, 121, 125, 127, 129, 133, 137, 208, 395, 405, 423, 495, 504, 544, 584], "parenthes": [406, 412, 461, 463], "parfiv": [412, 442], "park": 35, "parnam": 515, "pars": [16, 84, 85, 87, 91, 106, 127, 196, 205, 396, 409, 465, 468, 477, 480, 483, 485, 492, 496, 510, 518, 609], "parse_arg": 609, "parse_fil": [16, 84, 87, 91, 106, 127], "parse_obj": [16, 84, 87, 91, 106, 127], "parse_raw": [16, 84, 87, 91, 106, 127], "parseabl": 319, "parser": 609, "part": [103, 320, 321, 395, 398, 401, 404, 406, 408, 409, 410, 411, 413, 414, 415, 416, 421, 422, 425, 426, 439, 443, 444, 445, 453, 458, 463, 464, 468, 470, 474, 483, 492, 502, 503, 509, 510, 513, 530, 532, 546, 551, 555], "parti": 400, "partial": [92, 104, 107, 155, 156, 162, 167, 170, 173, 196, 208, 210, 280, 409, 413, 444, 458, 557], "partial_overlap": 92, "particip": [400, 404, 416], "particl": [17, 19, 20, 21, 22, 24, 25, 26, 27, 255, 286, 445, 534, 584], "particle_distribut": [255, 584], "particular": [88, 92, 125, 137, 320, 321, 395, 401, 408, 410, 418, 420, 421, 423, 425, 426, 446, 449, 460, 461, 470, 474, 475, 476, 477, 480, 484, 487, 495, 496, 500, 505, 508, 511, 513, 518, 520, 521, 529, 530, 543, 546, 553, 555, 559, 611], "particularli": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 320, 321], "partli": [398, 404, 405, 409, 416, 417], "pass": [15, 16, 19, 20, 26, 28, 29, 30, 31, 32, 33, 35, 36, 37, 39, 40, 42, 45, 46, 47, 68, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 94, 103, 104, 106, 107, 110, 111, 112, 127, 128, 131, 149, 151, 152, 153, 154, 155, 156, 157, 158, 159, 161, 162, 164, 165, 166, 167, 168, 169, 170, 173, 174, 182, 190, 195, 196, 197, 198, 200, 202, 204, 205, 206, 208, 209, 210, 213, 214, 215, 217, 219, 221, 222, 224, 225, 226, 227, 228, 229, 230, 231, 232, 234, 235, 236, 237, 240, 241, 242, 243, 244, 245, 246, 247, 248, 251, 254, 255, 256, 257, 258, 259, 260, 261, 262, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 278, 279, 280, 281, 282, 283, 284, 294, 298, 319, 333, 341, 342, 343, 348, 349, 350, 351, 382, 383, 388, 390, 391, 395, 398, 405, 407, 408, 409, 410, 415, 423, 445, 449, 451, 463, 464, 465, 470, 472, 474, 475, 483, 484, 488, 494, 495, 500, 502, 503, 505, 507, 508, 509, 510, 512, 514, 518, 529, 530, 532, 546, 557, 558, 559, 564, 565, 609, 613], "pass4": 520, "pass8_edisp_usag": 102, "passkwarg": [476, 499], "past": [395, 400, 403, 411, 412, 415, 416, 417, 419, 422, 424, 434, 455, 457, 458, 509, 609], "patch": [392, 395, 402, 422, 452, 461, 474, 476, 485, 489, 497], "path": [11, 15, 16, 66, 82, 83, 84, 86, 87, 88, 89, 91, 92, 94, 101, 102, 106, 108, 109, 112, 127, 151, 152, 153, 154, 155, 156, 157, 158, 159, 161, 162, 164, 166, 167, 168, 169, 170, 171, 197, 198, 200, 205, 206, 209, 210, 216, 230, 245, 254, 281, 329, 358, 359, 360, 363, 395, 398, 425, 433, 468, 470, 474, 475, 476, 477, 478, 480, 481, 483, 484, 485, 486, 487, 488, 489, 494, 495, 496, 497, 501, 502, 503, 504, 505, 508, 509, 510, 511, 512, 513, 515, 517, 518, 519, 520, 521, 529, 530, 532, 544, 603, 604, 608, 609], "path_effect": [205, 230, 254], "path_to_notebook": 395, "path_to_script": 395, "patheffect": [205, 230, 254], "pathlib": [16, 82, 83, 86, 88, 92, 154, 206, 216, 230, 254, 359, 474, 475, 483, 484, 487, 488, 518, 529, 530], "pathpatch": 489, "pattern": [395, 401, 409], "paula": 464, "paulakx": 464, "paz": [450, 453, 454], "pbar": 546, "pc": [46, 47, 50, 52, 539, 540], "pcolormesh": [83, 128, 151, 152, 154, 157, 158, 159, 164, 166, 168, 169, 456, 462, 505, 507], "pd": [88, 92], "pdf": [154, 158, 183, 260, 261, 275, 276, 296, 312, 314, 343, 388, 396, 415, 484, 487, 501, 536, 538, 539, 540, 542, 543, 548, 549, 550, 552, 555, 559, 591, 592, 611, 614], "pdf_in_safe_rang": 154, "pdf_matrix": 154, "pdf_threshold": [154, 155, 159], "pdflatex": 396, "peak": [68, 131, 145, 146, 154, 183, 222, 236, 242, 244, 248, 275, 451, 457, 464, 478, 500, 502, 508, 513, 570], "peak_bright": 68, "peak_brightness_error": 68, "peak_latitud": 68, "peak_latitude_error": 68, "pedant": 395, "peek": [83, 89, 104, 107, 111, 112, 131, 132, 151, 152, 154, 155, 156, 157, 158, 159, 164, 165, 166, 167, 168, 170, 395, 407, 434, 446, 452, 456, 460, 470, 476, 483, 487, 488, 497, 503, 507, 518, 520, 521, 543, 546, 548, 549, 550, 552], "pei": 465, "penal": 249, "penalti": [425, 515], "peopl": [400, 402, 416, 422, 427, 428, 501, 534, 546, 609], "pep": 400, "pep257": 396, "pep8": 398, "per": [17, 18, 19, 20, 21, 22, 24, 25, 26, 27, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 77, 100, 102, 103, 104, 107, 111, 112, 114, 115, 123, 125, 126, 128, 129, 130, 133, 134, 139, 145, 148, 149, 150, 167, 170, 202, 224, 225, 228, 232, 234, 235, 236, 237, 241, 245, 246, 247, 248, 251, 255, 257, 259, 260, 261, 266, 271, 273, 274, 275, 276, 279, 283, 289, 297, 300, 306, 316, 395, 401, 407, 408, 411, 420, 422, 423, 426, 437, 445, 449, 451, 464, 468, 477, 487, 492, 494, 496, 501, 508, 509, 514, 515, 520, 521, 524, 542, 546, 549, 553, 608, 610], "per_decad": [202, 474, 476, 487, 488, 497, 503, 519, 550, 556], "percent": 136, "percentag": [154, 183, 508], "percentil": 83, "peresano": 465, "perfect": 154, "perfectli": [565, 609], "perform": [11, 16, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 84, 85, 87, 88, 91, 92, 95, 101, 106, 110, 127, 174, 182, 196, 208, 210, 227, 230, 231, 240, 243, 254, 256, 267, 268, 272, 278, 282, 295, 299, 357, 360, 388, 395, 396, 401, 404, 405, 406, 410, 411, 415, 420, 423, 425, 427, 428, 430, 439, 446, 449, 451, 454, 458, 461, 463, 464, 465, 468, 472, 474, 475, 476, 477, 478, 480, 481, 483, 484, 486, 488, 492, 494, 495, 496, 499, 503, 505, 506, 508, 509, 510, 511, 513, 514, 520, 522, 524, 529, 531, 542, 546, 554, 555, 558, 565, 584, 607, 608, 609, 610], "perhap": 559, "perimet": 415, "period": [42, 51, 54, 202, 281, 402, 422, 425, 426, 457, 465, 513, 514, 538], "period_dot": 51, "periodicmapaxi": 465, "periodogram": [298, 410, 458, 465], "permit": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 415, 422, 524], "perseu": [33, 38], "person": [395, 398, 400, 402, 403, 404, 408, 413, 417], "perspect": [88, 92, 426], "pertain": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40], "peter": 457, "pf": 26, "pformat": [88, 92], "pformat_al": [88, 92], "pg": 532, "ph": 379, "pha": [108, 109, 112, 206, 407, 455, 458, 474, 484], "pha_": 503, "pha_meta": 108, "pha_ob": [108, 150, 215, 484, 504, 505, 513], "pha_obs23523": [111, 112, 134, 293, 425, 515, 544], "pha_obs23592": 544, "phacountsspectrum": 441, "phacountsspectrumlist": 440, "phase": [50, 52, 53, 90, 175, 178, 281, 400, 405, 406, 409, 410, 412, 414, 420, 426, 434, 439, 458, 460, 463, 465, 467, 512, 535, 546, 551, 560, 595, 605], "phase_axi": 420, "phase_bkg_mak": 497, "phase_column_nam": [178, 497], "phase_curve_model": 603, "phase_filt": 90, "phase_max": 497, "phase_min": 497, "phase_model": 603, "phasebackgroundestim": 443, "phasebackgroundmak": [175, 443, 463, 465, 497], "phasecurv": [281, 457, 603], "phasecurve_lsi_dc": 603, "phasecurvemodel": 419, "phasecurvetablemodel": [406, 408], "phasecurvetempl": 406, "phasogram": [281, 426, 603], "phi": [19, 20, 26, 203, 224, 225, 228, 231, 232, 234, 235, 236, 240, 243, 247, 248, 251, 255, 257, 259, 260, 261, 266, 271, 273, 274, 275, 276, 279, 283, 325, 419, 492, 511, 512, 519, 532, 551, 564, 565, 566, 568, 569, 570, 575, 577, 578, 579, 581, 582, 586, 587, 589, 590, 591, 592], "phi_0": [224, 226, 227, 231, 234, 235, 236, 240, 243, 247, 248, 256, 258, 260, 261, 267, 268, 271, 272, 274, 275, 276, 278, 282, 419, 505, 575, 578, 579, 582, 586, 589, 590, 591, 592], "phi_ref": [281, 603], "philipp": [457, 458], "phone": 416, "photon": [44, 232, 255, 379, 410, 469, 477, 487, 492, 510, 512, 532, 551, 584, 608], "photutil": [145, 395, 409, 458], "physic": [129, 130, 133, 135, 137, 312, 314, 341, 342, 394, 420, 424, 440, 475, 484, 509, 512, 513, 515, 518, 529, 544, 546, 584, 608, 611, 612], "physicist": [17, 19, 20, 21, 22, 24, 25, 26, 27], "pi": [19, 20, 30, 31, 32, 37, 54, 241, 286, 419, 512, 540, 564, 565, 566, 569, 570, 581, 602], "pick": [395, 402, 409, 421, 439, 532], "pictur": 396, "pie": 546, "piec": [395, 401, 409, 414, 424], "piecewis": [256, 257, 467, 512, 560, 562, 572, 573, 594], "piecewisebrokenpowerlawnormspectralmodel": 419, "piecewisebrokenpowerlawnormspectramodel": 419, "piecewisenormsectralmodel": 446, "piecewisenormspatialmodel": [264, 463, 465, 512, 567], "piecewisenormspectralmodel": [265, 424, 446, 449, 462, 464, 512, 553, 585], "pig": [13, 395, 397, 398, 438, 439, 441, 442, 443, 445, 446, 457, 459, 460, 464], "pii": 139, "pillar": 411, "pin": 458, "pink": [111, 112], "pint": [497, 546], "pintor": [408, 441, 442, 443, 444, 445, 446, 448, 449, 451, 452, 460, 462, 463, 464, 465], "pip": [394, 398, 402, 412, 429, 430, 439, 458, 518, 609], "pipe": [454, 455, 456], "pipelin": [398, 408, 410, 415, 425, 445, 513], "piron": 608, "piron2001": 608, "pivot": [19, 20, 26, 67, 224, 225, 228, 232, 234, 235, 236, 241, 247, 248, 251, 255, 257, 259, 260, 261, 266, 271, 273, 274, 275, 276, 279, 283, 464, 502], "pivot_energi": [19, 20, 26, 224, 225, 228, 232, 234, 235, 236, 241, 247, 248, 251, 255, 257, 259, 260, 261, 266, 271, 273, 274, 275, 276, 279, 283], "pix": [195, 196, 197, 198, 199, 200, 201, 202, 205, 206, 207, 208, 209, 210, 558], "pix_reg": 501, "pix_reg_rec": 501, "pix_to_coord": [195, 196, 199, 201, 202, 205, 207, 208, 464], "pix_to_idx": [195, 196, 199, 201, 202, 205, 207, 208], "pix_tuple_to_idx": 465, "pixcoord": 409, "pixel": [13, 83, 104, 107, 111, 112, 114, 115, 116, 121, 131, 145, 146, 151, 152, 153, 154, 155, 156, 157, 158, 159, 161, 162, 164, 165, 166, 167, 168, 169, 170, 180, 195, 196, 197, 198, 199, 200, 201, 202, 205, 206, 207, 208, 209, 210, 227, 230, 231, 240, 243, 254, 256, 267, 268, 272, 278, 282, 406, 437, 441, 455, 458, 478, 487, 489, 503, 508, 509, 519, 532, 542, 544, 556, 557, 558, 568], "pixel_area": 208, "pixel_scal": [121, 196, 208], "pixelis": 558, "pixelregion": [409, 555], "pixilis": 509, "pixreg": 566, "pixregion": 210, "pk": [141, 444, 469, 495, 496, 499, 500, 502, 514, 532, 574], "pks2155": [469, 495, 499], "pks2155_hess_lc": [126, 128, 149, 500, 504], "pl": [67, 80, 125, 130, 137, 174, 252, 259, 260, 261, 419, 472, 478, 489, 495, 502, 503, 504, 512, 513, 532], "pl_model": 601, "pl_spectrum": 515, "place": [83, 86, 88, 92, 93, 101, 104, 107, 111, 112, 145, 151, 152, 153, 154, 155, 156, 157, 161, 162, 167, 169, 170, 180, 185, 197, 198, 200, 206, 209, 210, 254, 280, 313, 320, 321, 367, 395, 396, 402, 403, 406, 407, 408, 409, 411, 414, 415, 416, 417, 418, 421, 426, 428, 442, 444, 474, 494, 509, 510, 512, 532, 542, 543, 607, 613], "placehold": 400, "plai": [416, 485], "plain": [412, 415, 509], "plainseri": [87, 91], "plan": [399, 400, 404, 405, 409, 411, 412, 416, 421, 427, 438, 455, 457, 458, 459, 606], "planar": [282, 406], "plane": [29, 67, 68, 129, 195, 196, 197, 198, 200, 205, 206, 208, 209, 210, 416, 501, 502, 509, 518, 541, 556, 559, 565, 608, 614], "plate": [208, 509], "platform": [412, 422, 449], "plausibl": [423, 426, 486], "pleas": [105, 110, 222, 396, 398, 400, 402, 404, 433, 438, 439, 440, 449, 457, 459, 465, 472, 474, 475, 476, 477, 480, 483, 487, 488, 495, 496, 500, 503, 504, 513, 529, 535, 546], "pleasant": 398, "plot": [6, 19, 20, 26, 66, 67, 83, 89, 103, 104, 107, 111, 112, 128, 131, 132, 151, 152, 154, 155, 156, 157, 158, 159, 164, 165, 166, 167, 168, 169, 170, 197, 198, 199, 200, 202, 205, 206, 207, 209, 210, 213, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 234, 235, 236, 237, 240, 241, 242, 243, 244, 245, 246, 247, 248, 251, 254, 255, 256, 257, 258, 259, 260, 261, 262, 266, 267, 268, 269, 271, 272, 273, 274, 275, 276, 278, 279, 281, 282, 283, 284, 287, 291, 372, 382, 383, 387, 388, 389, 390, 391, 392, 393, 394, 396, 409, 410, 411, 413, 414, 417, 420, 425, 434, 437, 440, 443, 445, 446, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 462, 463, 464, 465, 467, 468, 470, 472, 476, 478, 480, 481, 483, 484, 488, 492, 494, 495, 496, 497, 499, 500, 501, 502, 503, 504, 505, 506, 508, 510, 512, 514, 515, 516, 518, 519, 520, 521, 524, 529, 532, 536, 538, 539, 540, 542, 546, 548, 549, 550, 552, 555, 603, 604, 608, 611, 613], "plot_absorb": [467, 574, 594], "plot_at_energi": [151, 152, 518], "plot_bia": [154, 159], "plot_broken_powerlaw": [467, 575, 594], "plot_compound": [467, 576, 594], "plot_const": [467, 563, 572], "plot_constant_spectr": [467, 577, 594], "plot_constant_tempor": [467, 596, 605], "plot_containment_radiu": [158, 164, 166, 168], "plot_containment_radius_vs_energi": [158, 164, 166, 167, 168, 170, 518, 519], "plot_contour_lin": 505, "plot_correl": [213, 505], "plot_count": [111, 112], "plot_dat": 613, "plot_datapoint": 513, "plot_dens": 513, "plot_disk": [467, 564, 572], "plot_distribut": [465, 481, 483], "plot_energi": [83, 488], "plot_energy_depend": [151, 157, 518, 548], "plot_energy_offset": 83, "plot_err": 131, "plot_error": [19, 20, 26, 66, 67, 103, 224, 225, 226, 227, 228, 231, 232, 234, 235, 236, 240, 241, 243, 247, 248, 251, 255, 256, 257, 258, 259, 260, 261, 266, 267, 268, 271, 272, 273, 274, 275, 276, 278, 279, 282, 283, 413, 469, 472, 474, 476, 483, 484, 486, 502, 505, 530], "plot_excess": [111, 112, 452], "plot_exp_cutoff_powerlaw": [467, 578, 594], "plot_exp_cutoff_powerlaw_3fgl": [467, 579, 594], "plot_exp_cutoff_powerlaw_norm_spectr": [467, 580, 594], "plot_expdecay_tempor": [467, 597, 605], "plot_extension_error": [226, 227, 231, 240, 243, 256, 258, 267, 268, 272, 278, 282], "plot_fit": [103, 111, 112, 470, 474, 475, 476, 485, 497, 529], "plot_gauss": [467, 565, 572], "plot_gauss_spectr": [467, 581, 594], "plot_gaussian_tempor": [467, 598, 605], "plot_gen_gauss": [467, 566, 572], "plot_generalized_gaussian_tempor": [467, 599, 605], "plot_grid": [165, 197, 198, 200, 206, 209, 210, 226, 227, 231, 240, 243, 256, 258, 267, 268, 272, 278, 282, 420, 451, 462, 483, 503, 507, 508, 509, 510, 512, 520], "plot_heatmap": 213, "plot_hist": [206, 559], "plot_imag": 83, "plot_interact": [197, 198, 200, 206, 209, 210, 226, 227, 231, 240, 243, 256, 258, 267, 268, 272, 278, 282, 451, 458, 483, 492, 509, 529, 530], "plot_kernel": 165, "plot_kwarg": [474, 476, 485], "plot_linear_tempor": [467, 600, 605], "plot_logparabola": [467, 582, 594], "plot_logparabola_norm_spectr": [467, 583, 594], "plot_map_rgb": 463, "plot_mask": [111, 112, 198, 206, 210, 555], "plot_matrix": [154, 503, 519], "plot_migr": 159, "plot_naima": [467, 584, 594], "plot_npred_sign": [463, 483, 485, 530], "plot_offset2_distribut": 83, "plot_offset_depend": [151, 157], "plot_panel": 382, "plot_phasogram": 281, "plot_piecewise_norm_spati": [467, 567, 572], "plot_piecewise_norm_spectr": [467, 585, 594], "plot_point": [467, 568, 572], "plot_posit": [230, 254, 511], "plot_position_error": [226, 227, 231, 240, 243, 256, 258, 267, 268, 272, 278, 282], "plot_powerlaw": [467, 586, 594], "plot_powerlaw2": [467, 587, 594], "plot_powerlaw_norm_spectr": [467, 588, 594], "plot_powerlaw_tempor": [467, 601, 605], "plot_profil": 131, "plot_psf_vs_rad": [158, 164, 166, 167, 168, 170, 519], "plot_rad_max_vs_energi": [169, 465, 476], "plot_region": [205, 206, 230, 254, 392, 476, 489, 511, 555, 559], "plot_residu": [103, 104, 107, 111, 112, 447, 449, 483, 530], "plot_residuals_spati": [104, 107, 111, 112, 483, 492, 530], "plot_residuals_spectr": [104, 107, 111, 112], "plot_rgb": 463, "plot_shel": [467, 569, 572], "plot_shell2": [467, 570, 572], "plot_sine_tempor": [467, 602, 605], "plot_smooth_broken_powerlaw": [467, 589, 594], "plot_spati": 449, "plot_spectrum": [103, 151, 483, 496, 503], "plot_spectrum_datasets_off_region": [446, 462, 463, 474, 476, 485, 555], "plot_stat": 474, "plot_super_exp_cutoff_powerlaw_3fgl": [467, 590, 594], "plot_super_exp_cutoff_powerlaw_4fgl": [467, 591, 594], "plot_super_exp_cutoff_powerlaw_4fgl_dr1": [467, 592, 594], "plot_templ": [467, 571, 572], "plot_template_phase_tempor": [467, 603, 605], "plot_template_spectr": [467, 593, 594], "plot_template_tempor": [467, 604, 605], "plot_theta_squared_t": 517, "plot_tim": 83, "plot_ts_profil": [128, 474, 475, 489, 494, 504], "plotconfig": 513, "plotmixin": [111, 112], "plotter": [382, 513, 614], "plsuperexpcutoff3fgl": 456, "plsuperexpcutoff4fgl": 441, "plt": [19, 20, 26, 66, 67, 132, 151, 157, 158, 224, 225, 228, 232, 234, 235, 236, 241, 247, 248, 251, 255, 257, 259, 260, 261, 266, 271, 273, 274, 275, 276, 279, 283, 383, 392, 395, 396, 434, 468, 469, 470, 472, 474, 475, 476, 477, 478, 480, 481, 483, 484, 485, 486, 487, 488, 489, 492, 494, 495, 496, 497, 499, 500, 501, 502, 503, 504, 505, 507, 508, 509, 510, 511, 512, 513, 514, 515, 517, 518, 519, 520, 521, 529, 530, 532, 538, 539, 540, 546, 548, 549, 550, 552, 555, 564, 566, 570, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 596, 597, 598, 599, 600, 601, 602, 614], "plu": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 231, 416, 422, 512], "plug": 425, "pmf": 408, "png": [158, 403, 415, 434, 536, 538, 539, 540, 542, 543, 548, 549, 550, 552, 555, 559, 611, 614], "po": [156, 208, 555], "point": [15, 17, 18, 21, 22, 24, 25, 27, 61, 65, 67, 71, 72, 73, 74, 75, 77, 78, 79, 80, 82, 83, 85, 88, 89, 91, 92, 95, 96, 97, 100, 101, 102, 103, 104, 106, 107, 111, 112, 114, 115, 122, 126, 128, 129, 130, 133, 134, 136, 137, 138, 142, 147, 149, 156, 158, 161, 164, 167, 168, 169, 170, 180, 181, 183, 184, 185, 187, 188, 190, 191, 193, 194, 197, 198, 200, 205, 206, 209, 210, 215, 222, 230, 254, 258, 270, 289, 293, 296, 298, 304, 323, 327, 333, 339, 349, 387, 395, 397, 398, 400, 401, 402, 403, 404, 405, 407, 408, 409, 411, 412, 416, 417, 418, 419, 420, 421, 422, 423, 425, 426, 427, 430, 437, 440, 442, 443, 449, 451, 452, 454, 455, 456, 457, 459, 462, 463, 464, 467, 470, 471, 473, 476, 477, 478, 483, 488, 489, 492, 494, 495, 496, 497, 499, 503, 505, 507, 508, 509, 512, 513, 514, 519, 521, 524, 531, 534, 535, 541, 542, 543, 546, 551, 555, 558, 560, 562, 565, 566, 572, 584, 606, 607, 608], "point_sourc": 406, "pointer": 403, "pointing_altaz": [423, 463], "pointing_galact": 92, "pointing_info": [85, 95, 468], "pointing_posit": [167, 477, 488, 492], "pointing_radec": [83, 92, 463, 518], "pointing_t": 95, "pointing_zen": 463, "pointinginfo": [85, 455], "pointinginfometadata": [91, 106], "pointingmetadata": 423, "pointingmod": 85, "pointlik": [151, 152, 153, 154, 157, 158, 159, 161, 164, 166, 168, 169, 457, 555], "points_scal": 333, "pointskyregion": [179, 184, 205, 258, 452, 476, 488], "pointsourc": [406, 534], "pointspatialmodel": [19, 20, 72, 80, 137, 264, 419, 420, 442, 462, 478, 480, 483, 484, 487, 488, 494, 502, 503, 511, 512, 519, 529, 530, 568], "pointspreadfunct": 507, "poisson": [107, 112, 295, 298, 299, 300, 306, 309, 310, 316, 351, 407, 408, 440, 445, 472, 477, 481, 492, 517, 608, 609, 611], "poisson_stats_imag": 614, "poissonian": [298, 497, 500, 608], "poissonlikelihoodfitt": 454, "polar": [51, 54, 322, 395], "pole": [51, 320, 321, 409, 509], "poli": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 198], "polici": 399, "pollut": 410, "pollux": 415, "polygon": [198, 212, 409], "polygonis": 409, "polygonpixelregion": 409, "polygonskyregion": [212, 409], "polynomi": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 251, 509], "polynomial1d": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40], "polynomialmodel": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40], "pool": [337, 341, 342], "pool_kwarg": [341, 342], "poolmethodenum": 337, "poon": 455, "poor": [17, 19, 20, 21, 22, 24, 25, 26, 27], "poorli": [508, 513, 553], "pop": [93, 101, 204, 254], "popitem": 204, "popul": [28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 396, 416, 456, 535, 537, 584, 607], "popular": 609, "port": 456, "pos_ob": 485, "pos_on": 194, "pos_target": [485, 497], "posit": [16, 19, 20, 26, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 45, 46, 47, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 83, 84, 85, 87, 88, 91, 92, 95, 96, 97, 104, 105, 106, 107, 110, 114, 115, 126, 127, 128, 129, 130, 133, 134, 137, 155, 156, 162, 165, 167, 170, 180, 183, 185, 194, 196, 197, 198, 200, 205, 206, 207, 208, 209, 210, 211, 218, 219, 220, 221, 224, 225, 226, 227, 228, 230, 231, 232, 234, 235, 236, 240, 241, 243, 247, 248, 251, 254, 255, 256, 257, 258, 259, 260, 261, 266, 267, 268, 270, 271, 272, 273, 274, 275, 276, 278, 279, 280, 282, 283, 293, 295, 299, 317, 318, 320, 321, 323, 324, 327, 328, 383, 395, 402, 406, 408, 409, 419, 420, 421, 422, 426, 439, 441, 446, 449, 451, 464, 465, 468, 476, 477, 478, 480, 481, 483, 484, 485, 486, 487, 488, 489, 492, 496, 497, 501, 502, 503, 507, 508, 509, 510, 511, 512, 514, 518, 519, 532, 542, 543, 544, 546, 551, 552, 555, 556, 557, 559, 564, 565, 566, 568, 584, 611], "position_angl": 477, "position_error": [226, 227, 231, 240, 243, 256, 258, 267, 268, 272, 278, 282, 443], "position_lonlat": [226, 227, 231, 240, 243, 256, 258, 267, 268, 270, 272, 278, 282], "position_off": 194, "positv": 460, "posixpath": [16, 358], "possibl": [33, 82, 88, 92, 140, 160, 320, 321, 395, 396, 398, 402, 403, 406, 407, 408, 409, 410, 411, 412, 414, 415, 416, 417, 420, 423, 427, 428, 430, 440, 441, 449, 456, 458, 463, 465, 469, 474, 478, 480, 481, 486, 489, 503, 505, 507, 508, 509, 513, 519, 522, 524, 530, 532, 544, 546, 553, 558, 559, 584, 609, 610], "possibli": [88, 92, 126, 320, 321, 401, 405, 406, 408, 409, 413, 414, 416, 417, 423, 427, 449, 513, 553], "post": [52, 404, 423], "postbuild": 427, "poster": [398, 422, 428, 453], "posterior": [222, 413, 505, 515], "posteriori": 515, "postfix": 395, "postgresql": 415, "postpon": 426, "potenti": [123, 403, 411, 415, 425, 426, 486, 546], "potentiel": 422, "power": [19, 20, 26, 27, 103, 121, 126, 128, 130, 136, 144, 165, 167, 170, 196, 218, 220, 224, 225, 228, 232, 234, 235, 236, 241, 247, 248, 251, 255, 257, 259, 260, 261, 262, 266, 271, 273, 274, 275, 276, 279, 283, 286, 291, 298, 348, 406, 408, 437, 443, 455, 457, 465, 467, 469, 477, 480, 483, 487, 489, 492, 495, 496, 497, 499, 511, 512, 515, 546, 560, 573, 574, 594, 601], "power_spectrum": 298, "power_spectrum_param": 298, "powerlaw": [183, 260, 262, 298, 406, 407, 411, 455, 457, 467, 470, 480, 488, 489, 502, 512, 513, 515, 530, 560, 588, 595, 605], "powerlaw2spectralmodel": [252, 260, 261, 265, 419, 472, 480, 512, 532, 587], "powerlaw_with_paramet": 298, "powerlawnormspectralmodel": [67, 238, 259, 261, 265, 280, 418, 419, 424, 446, 464, 483, 484, 487, 488, 492, 503, 511, 512, 519, 529, 553, 567, 588, 593], "powerlawspectr": 137, "powerlawspectralmodel": [70, 72, 76, 80, 103, 111, 112, 117, 120, 125, 128, 134, 137, 219, 221, 259, 260, 265, 287, 395, 419, 420, 424, 469, 470, 472, 475, 477, 478, 485, 486, 487, 488, 489, 492, 494, 495, 496, 497, 499, 502, 503, 504, 511, 512, 513, 515, 518, 519, 529, 530, 532, 544, 563, 564, 565, 566, 568, 569, 570, 571, 574, 576, 585, 586, 596, 597, 598, 599, 600, 601, 602, 603, 604], "powerlawspectramodel": 424, "powerlawtemporalmodel": [277, 512, 601], "pp": [312, 314], "pppc": [17, 19, 20, 21, 22, 24, 25, 26, 27], "pppc4dm": 534, "pprint": [88, 92, 610], "pprint_al": [88, 92], "pprint_exclude_nam": [88, 92], "pprint_include_nam": [88, 92], "pr": [395, 396, 405, 407, 409, 419, 420, 422, 424, 425, 427, 443, 444], "practic": [408, 412, 417, 420, 421, 422, 423, 474, 503, 510, 512, 530, 542, 546, 555, 608], "pre": [16, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 84, 87, 91, 103, 106, 110, 127, 128, 395, 398, 404, 416, 422, 423, 429, 430, 434, 446, 458, 460, 475, 480, 481, 484, 486, 489, 500, 502, 504, 505, 511, 515, 542, 548], "preced": [339, 409, 411, 422, 512], "precis": [135, 137, 158, 164, 166, 168, 227, 231, 240, 243, 256, 267, 268, 272, 278, 282, 395, 413, 421, 422, 488], "precision_factor": [167, 170, 197, 198, 200, 206, 209, 210], "precomput": [26, 103, 128, 465, 503, 511], "pred": 542, "predefin": [430, 432, 451, 489, 494, 495, 529], "predic": 406, "predict": [103, 104, 107, 110, 111, 112, 125, 126, 128, 129, 130, 133, 134, 137, 144, 174, 177, 183, 190, 258, 270, 301, 312, 314, 315, 343, 391, 401, 406, 407, 408, 446, 463, 464, 469, 475, 477, 480, 481, 483, 485, 487, 489, 492, 503, 504, 508, 515, 529, 530, 544, 546, 550, 551, 553, 574, 608, 611], "prefer": [88, 92, 369, 395, 400, 402, 406, 414, 416, 422, 429, 430, 434, 489, 496, 509, 510, 515, 524, 525, 609, 611], "prefix": [202, 406], "preliminari": [404, 416, 424, 454, 456, 464, 478, 507, 519], "prepar": [82, 177, 405, 406, 415, 425, 427, 475, 484, 504, 508, 512, 519, 529, 554, 606], "prepare_input": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40], "prepare_output": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40], "prepend": [77, 88, 92, 319], "presenc": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 465, 478, 500, 509, 584, 608], "present": [15, 70, 82, 85, 92, 93, 101, 108, 112, 126, 128, 171, 199, 204, 230, 238, 254, 319, 320, 321, 395, 396, 398, 408, 411, 415, 416, 420, 423, 425, 428, 449, 470, 476, 480, 481, 494, 495, 499, 500, 501, 507, 508, 509, 511, 542, 544, 547, 559, 609, 611], "preserv": [88, 92, 107, 197, 198, 200, 202, 206, 209, 210, 412, 503, 510], "preserve_count": [197, 198, 200, 206, 209, 210, 509], "press": 518, "pretti": [409, 416, 428, 434], "prevent": [198, 232, 319, 426, 449, 483, 553], "preview": [396, 398, 521], "previou": [74, 88, 92, 222, 395, 398, 409, 416, 417, 421, 427, 440, 446, 464, 465, 476, 486, 487, 509, 512, 514, 515, 532, 541], "previous": [293, 412, 445, 457, 458, 468, 474, 483, 484, 502, 508, 510], "primari": [26, 88, 92, 197, 198, 200, 201, 209, 210, 400, 422, 445, 460, 504, 509], "primarili": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40], "primary_axi": 201, "primary_band": 509, "primaryflux": [19, 20, 501, 534], "primaryhdu": 509, "prime": 23, "primer": 413, "princip": 486, "principl": [395, 422, 424, 474, 556], "print": [11, 67, 82, 83, 85, 86, 88, 89, 92, 95, 97, 103, 104, 111, 113, 118, 125, 128, 130, 137, 152, 154, 157, 158, 164, 166, 168, 177, 180, 219, 221, 230, 245, 254, 287, 317, 318, 329, 361, 395, 396, 406, 407, 410, 415, 420, 423, 433, 434, 468, 469, 470, 472, 474, 475, 476, 477, 478, 480, 481, 483, 484, 485, 486, 487, 488, 489, 492, 494, 495, 496, 497, 499, 500, 501, 503, 504, 505, 507, 508, 509, 510, 511, 512, 513, 514, 515, 517, 518, 519, 529, 530, 532, 544, 546, 558, 559, 563, 564, 565, 566, 567, 568, 569, 570, 571, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 596, 597, 598, 599, 600, 601, 602, 603, 604, 609, 610, 611, 613], "print0": 395, "print_level": [483, 492, 505, 530], "print_stack": 395, "printout": [395, 456, 457, 503], "prior": [19, 20, 100, 103, 104, 107, 111, 112, 218, 219, 220, 221, 224, 227, 228, 231, 232, 234, 235, 236, 237, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 251, 254, 258, 259, 260, 261, 262, 266, 267, 268, 269, 271, 274, 275, 276, 281, 282, 285, 399, 404, 425, 464, 465, 467, 469, 470, 474, 475, 476, 477, 480, 483, 484, 489, 492, 495, 496, 502, 505, 506, 512, 513, 516, 524, 530, 532, 593, 606], "prior_inverse_cdf": 425, "prior_registri": 515, "prior_stat_sum": [218, 219, 220, 221, 424, 515], "priorfitstatist": 424, "priori": [420, 481, 510], "priorit": 426, "prioriti": [392, 404, 406, 407, 409, 422, 427], "priormodel": 424, "priorparamet": [239, 249, 263, 285, 424, 515], "privat": [395, 404, 419, 457, 520, 521], "pro": [395, 411], "probabl": [13, 103, 138, 147, 148, 159, 220, 239, 249, 285, 296, 398, 401, 402, 403, 405, 408, 409, 413, 416, 418, 424, 425, 426, 428, 474, 477, 492, 505, 509, 512, 513, 515, 519, 550, 551, 552, 608, 609, 611, 612], "probe": [137, 304, 425, 512, 513], "problem": [19, 20, 218, 224, 227, 228, 231, 232, 234, 235, 236, 237, 240, 241, 242, 243, 244, 245, 246, 247, 248, 251, 258, 259, 260, 261, 262, 266, 267, 268, 269, 271, 274, 275, 276, 281, 282, 313, 372, 403, 405, 409, 417, 424, 426, 433, 461, 505, 546], "problemat": [414, 420, 423, 426, 495, 546], "proce": [398, 428, 430, 432, 460, 469, 470, 474, 475, 487, 492, 495, 510, 511, 518, 519, 529, 530], "procedur": [408, 421, 427, 428, 469, 478, 483], "proceed": [416, 422, 520], "process": [11, 83, 94, 129, 130, 133, 137, 138, 147, 173, 198, 210, 340, 341, 342, 351, 395, 396, 398, 400, 401, 403, 404, 405, 407, 408, 410, 411, 415, 418, 421, 422, 423, 426, 431, 435, 441, 446, 449, 451, 457, 464, 465, 470, 474, 478, 485, 487, 488, 502, 503, 508, 513, 520, 527, 530, 536, 543, 545, 546, 607, 608, 609], "process_lots_of_data": 395, "processor": 416, "procur": 415, "prod": 438, "prod3": 416, "prod3b": 518, "prod5": [487, 488, 518], "produc": [15, 104, 107, 111, 112, 116, 126, 290, 292, 395, 396, 401, 410, 411, 415, 420, 421, 423, 425, 426, 428, 443, 469, 470, 474, 476, 478, 484, 485, 486, 487, 492, 495, 497, 501, 505, 508, 513, 515, 518, 530, 546, 549, 551, 608, 609], "product": [110, 138, 147, 197, 198, 200, 203, 206, 209, 210, 281, 401, 410, 411, 422, 423, 426, 434, 449, 463, 464, 469, 472, 478, 488, 497, 503, 505, 508, 513, 519, 521, 544, 551, 608], "prof_mak": 130, "profil": [17, 18, 21, 22, 23, 24, 25, 27, 77, 103, 104, 107, 122, 126, 128, 129, 130, 131, 132, 133, 134, 137, 138, 147, 158, 164, 166, 167, 168, 170, 194, 198, 206, 215, 242, 244, 294, 316, 334, 353, 354, 398, 407, 409, 413, 414, 422, 426, 430, 432, 437, 439, 446, 449, 454, 456, 458, 459, 464, 465, 467, 474, 475, 485, 490, 491, 494, 495, 496, 504, 505, 515, 524, 534, 544, 546, 564, 608, 611], "profile_err": 131, "profile_high": 489, "profile_new": 489, "profuma": 534, "program": [395, 411], "programmat": 483, "progress": [15, 82, 121, 133, 137, 215, 342, 401, 404, 411, 412, 428, 449, 456, 457, 458, 464, 513, 546], "progress_download": 546, "proj": [104, 107, 111, 112, 177, 196, 197, 198, 208, 209, 210, 474, 508, 509, 519, 530, 555], "project": [104, 111, 130, 174, 180, 196, 197, 198, 200, 205, 206, 208, 209, 210, 227, 230, 231, 240, 243, 254, 256, 267, 268, 272, 278, 282, 328, 354, 395, 396, 397, 398, 400, 402, 409, 411, 412, 416, 422, 441, 449, 457, 463, 475, 478, 481, 485, 489, 497, 507, 509, 510, 511, 519, 527, 529, 530, 532, 534, 555, 558, 559, 569, 570, 607, 609, 614], "projected_distance_axi": 130, "prompt": 609, "pronounc": 546, "pronunci": 546, "prop_cycl": 392, "propag": [53, 131, 303, 406, 413, 443, 463, 505], "proper": [45, 101, 320, 321, 396, 410, 422, 462, 463, 476, 483, 546], "proper_mot": [320, 321], "properli": [137, 190, 400, 410, 422, 426, 461, 462, 474, 475, 504, 505, 529, 542, 610], "properti": [16, 19, 20, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 83, 84, 87, 88, 91, 92, 97, 106, 126, 127, 174, 208, 218, 224, 227, 228, 231, 232, 234, 235, 236, 237, 240, 241, 242, 243, 244, 245, 246, 247, 248, 251, 258, 259, 260, 261, 262, 266, 267, 268, 269, 271, 274, 275, 276, 281, 282, 305, 392, 395, 396, 406, 408, 419, 420, 423, 424, 446, 449, 451, 456, 457, 459, 462, 463, 474, 476, 485, 487, 489, 502, 510, 512, 514, 532, 543, 559, 608], "propos": [320, 321, 395, 397, 399, 400, 401, 402, 404, 412, 421, 422, 424, 427, 439, 442, 443, 445, 446, 457, 463], "proprietari": 415, "protect": [426, 465], "proto": [16, 84, 87, 91, 106, 127], "proton": [286, 551, 584], "prototyp": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 400, 406, 408, 411, 412, 413, 415, 416, 426, 454, 456, 457, 464, 535], "prov": 415, "proven": [399, 411, 426], "provid": [15, 16, 26, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 77, 82, 83, 84, 85, 87, 88, 89, 91, 92, 103, 104, 106, 107, 111, 112, 116, 127, 133, 137, 138, 140, 147, 154, 155, 173, 187, 188, 193, 197, 198, 200, 202, 203, 204, 205, 206, 207, 208, 209, 210, 215, 216, 222, 245, 278, 279, 282, 298, 316, 319, 320, 321, 388, 395, 396, 405, 406, 408, 410, 411, 412, 415, 416, 417, 420, 422, 423, 424, 425, 426, 427, 428, 429, 433, 435, 439, 442, 443, 444, 446, 449, 451, 460, 463, 465, 468, 474, 476, 477, 478, 488, 492, 500, 502, 503, 504, 505, 508, 509, 510, 512, 513, 514, 519, 520, 521, 522, 524, 530, 532, 534, 536, 541, 543, 544, 545, 546, 547, 548, 549, 550, 552, 553, 556, 557, 558, 559, 560, 568, 571, 584, 593, 606, 607, 608, 609, 611, 614], "proxi": 405, "prune": [398, 427], "pset": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40], "pseudo": 296, "pseudonym": 398, "psf": [16, 82, 88, 89, 97, 104, 105, 107, 110, 111, 112, 114, 115, 116, 156, 158, 163, 164, 165, 166, 167, 168, 170, 177, 184, 193, 208, 230, 254, 270, 317, 318, 395, 401, 405, 406, 407, 408, 411, 426, 437, 439, 443, 444, 445, 446, 449, 450, 454, 455, 456, 457, 458, 459, 460, 461, 463, 465, 468, 470, 474, 475, 476, 478, 480, 481, 483, 485, 487, 488, 492, 494, 503, 508, 510, 514, 518, 520, 521, 529, 530, 542, 544, 546, 551, 554, 559, 608], "psf3d": [89, 158, 163, 166, 168, 193, 439, 457, 552], "psf68": 468, "psf_": 542, "psf_3gauss": [88, 158, 518, 552], "psf_assym": 507, "psf_file": 102, "psf_kernel": [167, 519], "psf_kernel_map": [165, 519], "psf_king": [88, 166, 552], "psf_map": [105, 110, 167, 170], "psf_map_reco": [170, 520], "psf_mean": 519, "psf_new": 507, "psf_out": [167, 170], "psf_r95": 510, "psf_tabl": [82, 88, 164, 507, 521], "psf_theta": 395, "psf_updat": [105, 110], "psf_valu": [158, 166, 168], "psfkernel": [107, 167, 170, 198, 210, 407, 417, 458, 552], "psfking": [163, 451, 552], "psfmap": [104, 105, 107, 110, 111, 112, 155, 156, 162, 163, 165, 170, 177, 184, 193, 407, 408, 417, 439, 442, 443, 445, 446, 458, 464, 465, 478, 503, 519, 546, 552], "psfnd": 507, "psr": [497, 502, 532], "pub": 398, "public": [6, 385, 386, 398, 400, 409, 414, 418, 421, 428, 453, 470, 484, 494, 495, 499, 607, 614], "publicli": [518, 520, 521], "publish": [11, 412, 428, 474, 519], "pull": [399, 400, 403, 404, 405, 406, 407, 408, 409, 416, 421, 422, 427, 428, 436], "puls": [77, 244], "pulsar": [30, 31, 32, 35, 39, 40, 42, 50, 54, 60, 64, 77, 83, 405, 416, 426, 439, 441, 460, 463, 465, 467, 481, 486, 493, 498, 512, 524, 536, 537, 546], "pulsar_analysi": [416, 467, 497, 498], "pulsat": 269, "pulse_profil": 77, "pulse_profile_best_fit": 77, "pulse_profile_radio": 77, "pulse_stat": 497, "punch": [462, 464], "pure": [395, 412, 414, 416, 555], "purpl": 559, "purpos": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 345, 369, 399, 401, 407, 410, 414, 419, 421, 422, 457, 478, 503, 511, 512, 550], "push": [395, 398, 427, 460], "put": [202, 395, 396, 398, 400, 402, 403, 406, 416, 427, 428, 434, 440, 477, 487, 510, 519, 546, 609], "pwbpl": 419, "pwd": [398, 430, 432], "pwl": [19, 20, 26, 128, 219, 221, 224, 225, 228, 232, 234, 235, 236, 241, 247, 248, 251, 255, 257, 259, 260, 261, 266, 271, 273, 274, 275, 276, 279, 283, 287, 406, 419, 424, 469, 472, 487, 504, 512, 515, 544, 563, 564, 565, 566, 568, 569, 570, 571, 574, 576], "pwl2": 512, "pwl_decai": 487, "pwl_norm": [419, 512, 588], "pwn": [43, 502, 532, 539], "pwne": 486, "py": [395, 396, 402, 409, 412, 414, 417, 427, 428, 434, 439, 441, 442, 450, 455, 459, 467, 468, 469, 470, 472, 473, 474, 475, 476, 477, 478, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 491, 492, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 523, 526, 527, 529, 530, 532, 533, 546, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 609], "py310": 398, "py35": 456, "pycharm": 440, "pydant": [16, 84, 87, 91, 106, 127, 394, 426, 443, 462, 464, 483], "pydantic_cor": [16, 84, 87, 91, 106, 127], "pydanticdeprecatedsince20": 483, "pydanticserializationerror": [16, 84, 87, 91, 106, 127], "pydanticundefin": [16, 84, 87, 91, 106, 127], "pydata": [426, 451, 465], "pydocstyl": 396, "pyfact": [437, 455], "pyflak": 451, "pyirf": [426, 464], "pyjok": 394, "pymc": 413, "pymotw": 609, "pypi": [412, 423, 427, 428, 430, 431], "pyplot": [19, 20, 26, 66, 67, 83, 132, 158, 224, 225, 228, 232, 234, 235, 236, 241, 247, 248, 251, 255, 257, 259, 260, 261, 266, 271, 273, 274, 275, 276, 279, 283, 383, 388, 434, 468, 469, 470, 472, 474, 475, 476, 477, 478, 480, 481, 483, 484, 485, 486, 487, 488, 489, 492, 494, 495, 496, 497, 499, 500, 501, 502, 503, 504, 505, 507, 508, 509, 510, 511, 512, 513, 514, 515, 517, 518, 519, 520, 521, 529, 530, 532, 538, 539, 540, 546, 548, 549, 550, 552, 555, 564, 566, 570, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 596, 597, 598, 599, 600, 601, 602, 614], "pyproject": 446, "pyregion": 409, "pytest": [395, 396, 398, 428, 457], "python": [11, 16, 84, 87, 91, 106, 127, 145, 319, 362, 394, 398, 399, 400, 404, 405, 407, 408, 409, 411, 412, 413, 414, 415, 416, 417, 422, 423, 426, 427, 428, 429, 430, 431, 432, 433, 435, 437, 438, 439, 441, 442, 449, 451, 454, 455, 456, 457, 458, 459, 460, 463, 468, 469, 470, 472, 474, 475, 476, 477, 478, 480, 481, 483, 484, 485, 486, 487, 488, 489, 492, 494, 495, 496, 497, 499, 500, 501, 502, 503, 504, 505, 507, 508, 509, 510, 511, 512, 513, 514, 515, 517, 518, 519, 520, 521, 524, 525, 527, 529, 530, 532, 534, 545, 546, 560, 563, 564, 565, 566, 567, 568, 569, 570, 571, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 596, 597, 598, 599, 600, 601, 602, 603, 604, 606, 607, 609], "python3": [358, 431, 468, 470, 474, 475, 476, 477, 478, 480, 481, 483, 484, 485, 486, 487, 488, 489, 492, 494, 495, 496, 497, 499, 501, 502, 503, 505, 508, 509, 510, 511, 512, 515, 517, 518, 519, 520, 521, 529, 530, 532, 571, 597], "python_execut": [468, 470, 474, 475, 476, 477, 478, 480, 481, 483, 484, 485, 486, 487, 488, 489, 494, 495, 496, 497, 501, 502, 503, 505, 508, 509, 510, 511, 512, 515, 517, 518, 519, 520, 521, 529, 530, 532], "python_vers": [468, 470, 474, 475, 476, 477, 478, 480, 481, 483, 484, 485, 486, 487, 488, 489, 494, 495, 496, 497, 501, 502, 503, 505, 508, 509, 510, 511, 512, 515, 517, 518, 519, 520, 521, 529, 530, 532], "pytorch": 413, "pyx": [398, 428], "pyyaml": [394, 412, 438, 442], "q": [26, 83, 88, 92, 390, 501], "qb5ia": 508, "qcsjnd92": 512, "qol": 465, "qsiu": 512, "qtabl": [88, 92, 410, 499], "quadrat": [509, 532, 612], "qualiti": [206, 416, 426, 457, 458, 463, 513, 514, 530, 546, 607, 614], "quantifi": [426, 464, 486, 499, 500, 515], "quantiti": [13, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 45, 46, 47, 50, 51, 52, 53, 54, 71, 74, 75, 80, 83, 86, 88, 89, 92, 95, 97, 101, 104, 105, 107, 108, 110, 111, 112, 114, 115, 116, 121, 123, 125, 126, 127, 128, 129, 130, 131, 133, 134, 136, 137, 138, 140, 141, 142, 143, 145, 146, 147, 150, 151, 152, 153, 154, 155, 157, 158, 159, 161, 164, 165, 166, 167, 168, 169, 170, 172, 177, 181, 182, 183, 185, 189, 190, 191, 192, 194, 195, 196, 197, 198, 200, 201, 202, 205, 206, 207, 208, 209, 210, 211, 212, 218, 220, 224, 225, 227, 228, 229, 230, 231, 232, 234, 235, 236, 237, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 251, 254, 255, 257, 258, 259, 260, 261, 262, 266, 267, 268, 269, 270, 271, 273, 274, 275, 276, 279, 280, 281, 282, 283, 284, 285, 289, 295, 298, 299, 302, 303, 304, 305, 307, 313, 318, 319, 320, 321, 323, 325, 327, 328, 333, 351, 353, 354, 365, 369, 395, 396, 401, 404, 406, 409, 410, 411, 413, 419, 420, 423, 424, 426, 440, 442, 446, 449, 450, 458, 459, 460, 468, 476, 478, 487, 488, 489, 495, 499, 500, 502, 503, 507, 508, 509, 510, 512, 518, 520, 521, 532, 538, 539, 540, 542, 546, 551, 559, 587, 597, 599, 608, 611, 613], "quantity_support": [507, 564], "quasar": 141, "quentin": [413, 418, 419, 441, 442, 443, 444, 445, 446, 449, 451, 452, 460, 461, 462, 463, 464, 465], "queri": [411, 415, 454, 502], "question": [361, 398, 400, 402, 403, 404, 406, 407, 408, 409, 412, 414, 420, 426, 433, 438, 439, 457, 458, 459, 485, 513, 532, 546, 547, 609], "questionnair": [402, 457], "quetin": 443, "quick": [83, 89, 104, 107, 111, 112, 151, 152, 154, 155, 156, 157, 158, 159, 164, 165, 166, 167, 168, 170, 395, 416, 428, 478, 480, 483, 485, 487, 496, 503, 507, 511, 518, 520, 521, 522, 524, 532, 534, 543], "quickest": 396, "quickli": [395, 396, 398, 400, 411, 412, 416, 422, 425, 428, 430, 456, 474, 483, 500, 520, 550, 609], "quicklook": 83, "quickplot": 198, "quicksort": [88, 92], "quickstart": 435, "quiescent": 574, "quit": [88, 92, 395, 424, 487], "quival": 406, "quot": [74, 287, 395, 396, 501], "r": [17, 18, 21, 22, 24, 25, 26, 27, 28, 30, 35, 36, 39, 40, 51, 53, 54, 86, 88, 92, 159, 194, 207, 322, 395, 396, 421, 426, 428, 475, 484, 488, 505, 508, 529, 536, 551, 555, 564, 565, 566, 570, 574], "r68": [83, 114, 115, 158, 167, 170], "r70": [67, 502], "r_": [17, 18, 21, 22, 24, 25, 27, 28, 35, 36, 39, 40, 50, 52, 53, 267, 268, 501, 566, 569, 570], "r_0": [30, 33, 38, 48, 231, 243, 267, 511, 564, 566, 570], "r_1": [39, 48], "r_eval": 243, "r_exp": [36, 48], "r_in": [44, 172, 182, 267, 481, 556], "r_m": 566, "r_out": 44, "r_out_max": 172, "r_out_pwn": 43, "r_sun": 38, "ra": [67, 83, 85, 88, 89, 92, 95, 145, 180, 395, 396, 408, 411, 468, 474, 476, 478, 481, 485, 488, 494, 495, 497, 499, 502, 508, 510, 517, 518, 519, 520, 530, 532, 534, 546, 550, 613], "ra_pnt": 521, "ra_tru": [395, 408], "rad": [33, 83, 89, 104, 107, 111, 112, 114, 115, 116, 155, 156, 158, 162, 164, 166, 167, 168, 169, 170, 180, 193, 269, 411, 451, 463, 476, 503, 507, 508, 519, 551, 552, 555, 602], "rad_axi": [104, 107, 111, 112, 116, 167, 170, 503, 507, 508, 546], "rad_di": [45, 536], "rad_index": 164, "rad_max": [82, 83, 88, 89, 163, 169, 186, 451, 460, 462, 463, 476], "rad_max_2d": [88, 169, 179, 184, 186, 476], "radec": [83, 95, 151, 152, 153, 154, 157, 158, 159, 160, 161, 164, 166, 168, 169, 177, 395, 396, 507, 509, 532], "radecsi": 571, "radesysa": 571, "radi": [255, 584], "radial": [28, 30, 35, 36, 39, 40, 45, 132, 194, 198, 320, 321, 347, 395, 406, 414, 420, 439, 454, 456, 464, 487, 489, 508, 518, 534, 536, 552, 555], "radial_veloc": [320, 321], "radian": [17, 18, 21, 22, 24, 25, 27, 203, 226, 227, 231, 240, 243, 256, 258, 267, 268, 270, 272, 278, 282], "radiat": [232, 546, 569, 570, 584], "radiative_model": [255, 584], "radii": [27, 501, 519, 565], "radio": [30, 31, 32, 77, 141, 409, 509], "radio_profil": 77, "radiobutton": [483, 492, 509, 529, 530], "radiu": [16, 17, 18, 21, 22, 24, 25, 27, 33, 34, 38, 43, 44, 50, 51, 52, 53, 54, 72, 82, 83, 92, 97, 104, 107, 111, 112, 125, 130, 131, 158, 164, 166, 167, 168, 170, 172, 180, 182, 198, 208, 210, 211, 230, 231, 240, 243, 254, 256, 258, 267, 268, 270, 272, 278, 280, 282, 317, 318, 353, 396, 409, 411, 419, 420, 439, 448, 449, 453, 463, 468, 470, 474, 475, 477, 478, 480, 481, 483, 485, 487, 488, 494, 495, 497, 499, 501, 503, 507, 508, 510, 511, 512, 514, 518, 529, 530, 532, 539, 540, 553, 555, 556, 559, 564, 565, 566, 569, 570], "radius_inn": [52, 53], "radius_max": [353, 489], "radius_min": 353, "radius_reverse_shock": [50, 53, 539], "radmax": [451, 452, 463, 464], "radmax2d": [83, 89, 163, 186, 449, 465, 476], "rai": [11, 19, 20, 26, 36, 37, 52, 53, 57, 59, 63, 66, 83, 94, 125, 129, 130, 133, 136, 137, 141, 173, 232, 286, 287, 304, 305, 341, 342, 395, 401, 406, 407, 409, 413, 425, 426, 428, 430, 434, 435, 440, 456, 458, 463, 464, 468, 469, 470, 474, 475, 476, 477, 478, 480, 481, 483, 484, 485, 486, 487, 488, 489, 494, 495, 496, 497, 502, 503, 505, 508, 509, 510, 511, 512, 513, 514, 515, 517, 518, 519, 520, 521, 529, 530, 532, 534, 536, 537, 541, 542, 543, 546, 549, 553, 555, 556, 574, 606, 607, 608, 609, 610, 611, 614], "rais": [16, 26, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 72, 84, 86, 87, 88, 91, 92, 93, 101, 106, 127, 130, 199, 204, 230, 232, 254, 278, 279, 280, 282, 319, 320, 321, 372, 395, 409, 419, 420, 423, 424, 443, 460, 463, 464, 465, 488], "raise_error": [16, 84, 87, 91, 106, 127], "raj2000": [502, 532], "ran": [427, 518], "random": [19, 20, 26, 33, 42, 45, 46, 47, 88, 92, 104, 105, 107, 110, 111, 112, 156, 167, 170, 197, 198, 200, 206, 209, 210, 224, 225, 228, 229, 232, 234, 235, 236, 237, 241, 242, 244, 245, 246, 247, 248, 251, 255, 257, 259, 260, 261, 262, 266, 269, 271, 273, 274, 275, 276, 279, 281, 283, 284, 298, 343, 344, 345, 346, 347, 348, 349, 350, 351, 398, 407, 408, 411, 425, 426, 441, 453, 457, 487, 512, 546, 610, 611, 613], "random_se": 407, "random_st": [19, 20, 26, 33, 42, 45, 46, 47, 104, 105, 107, 110, 111, 112, 156, 167, 170, 197, 198, 200, 206, 209, 210, 224, 225, 228, 229, 232, 234, 235, 236, 237, 241, 242, 244, 245, 246, 247, 248, 251, 255, 257, 259, 260, 261, 262, 266, 269, 271, 273, 274, 275, 276, 279, 281, 283, 284, 298, 343, 344, 345, 348, 349, 350, 351, 395, 408, 477, 487, 488], "randomli": [46, 102, 119, 395], "randomnumb": 348, "randomst": [19, 20, 26, 33, 42, 45, 46, 47, 104, 105, 107, 110, 111, 112, 156, 167, 170, 197, 198, 200, 206, 209, 210, 224, 225, 228, 229, 232, 234, 235, 236, 237, 241, 242, 244, 245, 246, 247, 248, 251, 255, 257, 259, 260, 261, 262, 266, 269, 271, 273, 274, 275, 276, 279, 281, 283, 284, 298, 343, 345, 348, 349, 350, 351, 395], "rang": [17, 18, 19, 20, 21, 22, 24, 25, 26, 27, 67, 71, 74, 75, 77, 80, 83, 88, 92, 93, 101, 102, 103, 104, 107, 111, 112, 129, 137, 154, 167, 169, 170, 183, 195, 196, 199, 201, 202, 205, 206, 208, 218, 220, 224, 225, 228, 229, 231, 232, 234, 235, 236, 237, 241, 242, 244, 245, 246, 247, 248, 251, 254, 255, 257, 259, 260, 261, 262, 266, 269, 271, 273, 274, 275, 276, 279, 280, 281, 283, 284, 289, 334, 346, 348, 349, 350, 381, 388, 395, 401, 407, 408, 410, 415, 420, 440, 445, 446, 449, 457, 458, 460, 470, 474, 476, 477, 480, 483, 484, 486, 488, 495, 496, 497, 500, 502, 503, 504, 505, 507, 509, 510, 512, 513, 514, 515, 519, 520, 529, 530, 532, 542, 544, 546, 566, 577, 607, 611], "rangl": 19, "rapid": [141, 304, 401, 404, 420, 421], "rare": [394, 395, 414, 509], "raster": [96, 198], "rate": [44, 45, 83, 89, 151, 152, 183, 190, 298, 351, 408, 434, 458, 474, 476, 497, 508, 513, 518, 519, 521, 536, 549, 608], "rather": [121, 125, 129, 133, 137, 320, 321, 400, 413, 417, 457, 460, 462, 464, 465, 470, 505, 509, 532, 542, 565, 611], "ratio": [107, 112, 172, 196, 197, 198, 299, 316, 420, 468, 497, 518, 556, 608, 610, 611, 612, 614], "rave": 415, "ravel": [196, 320, 321, 487], "raw": [126, 183, 532], "rc": [197, 198, 200, 206, 209, 210, 392, 509], "rc_context": [197, 198, 200, 206, 209, 210, 509], "rc_param": [197, 198, 200, 206, 209, 210, 509], "rcparam": 392, "rdbu": 529, "rdbu_r": [104, 107, 111, 112], "rdf": 415, "re": [88, 92, 97, 128, 129, 130, 134, 174, 197, 198, 200, 206, 209, 210, 215, 317, 318, 320, 321, 388, 395, 396, 398, 400, 402, 403, 409, 410, 411, 413, 415, 417, 418, 419, 420, 426, 433, 437, 449, 451, 458, 472, 474, 475, 481, 483, 484, 485, 496, 505, 507, 511, 514, 519, 529, 532, 544, 546, 568, 609], "reach": [53, 136, 211, 400, 405, 408, 425, 512, 513], "reactiv": 460, "reactivenestedsampl": 425, "read": [15, 16, 83, 85, 86, 88, 89, 92, 95, 101, 102, 103, 104, 107, 108, 111, 112, 117, 120, 121, 125, 126, 128, 130, 132, 134, 137, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 161, 162, 164, 165, 166, 167, 168, 169, 170, 179, 197, 198, 200, 204, 205, 206, 209, 210, 215, 230, 232, 245, 254, 281, 282, 283, 288, 290, 292, 293, 357, 360, 380, 383, 388, 390, 395, 396, 398, 400, 405, 406, 407, 408, 411, 415, 416, 418, 420, 422, 423, 424, 426, 430, 432, 443, 446, 449, 457, 458, 460, 463, 464, 465, 469, 474, 475, 476, 481, 483, 486, 487, 500, 503, 504, 505, 507, 512, 513, 515, 518, 519, 520, 524, 529, 532, 543, 544, 546, 548, 549, 550, 552, 571, 603, 604, 609, 612, 614], "read_arf": 108, "read_bkg": 108, "read_builtin": [232, 469, 574], "read_covari": [230, 254], "read_dataset": 15, "read_fil": 425, "read_lazi": 451, "read_model": 15, "read_pha": 108, "read_rmf": 108, "read_xspec_model": 283, "readabl": [375, 406, 451, 475, 529], "reader": [423, 468, 477, 480, 483, 485, 488, 492, 496, 518], "readi": [405, 423, 433, 608], "readili": [416, 425, 513], "readm": [398, 422], "readthedoc": [13, 129, 190, 205, 215, 283, 416, 426, 440, 455, 505, 507, 518, 543, 557, 559], "real": [51, 320, 321, 395, 398, 428, 477, 478, 481, 488, 505, 510, 513, 542, 551], "realis": [400, 409, 422], "realist": 424, "realiti": 469, "realiz": [401, 608], "realize_fram": [320, 321], "realli": [395, 402, 409, 412, 415, 477, 492, 505], "rearrang": 416, "reason": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 395, 400, 401, 402, 403, 406, 407, 408, 410, 412, 414, 417, 422, 425, 426, 457, 469, 487, 505, 513, 515, 520, 542, 609], "reassign": [19, 20, 26, 224, 225, 226, 227, 228, 229, 230, 231, 232, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 251, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 278, 279, 280, 281, 282, 283, 284, 285], "rebas": [395, 409], "rebin": [128, 149, 410, 451, 464, 495, 500, 503], "rebuild": [16, 84, 87, 91, 106, 127, 484], "recarrai": [88, 92, 158, 168], "receiv": [413, 416, 417, 419, 421, 513], "recent": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 88, 92, 405, 409, 410, 411, 412, 415, 416, 425, 431, 438, 452, 458, 484, 513, 518, 520], "recip": [397, 411, 427, 435, 449, 497, 546, 547, 608, 611], "recipi": 415, "reco": [104, 107, 111, 112, 154, 187, 395, 401, 410, 420, 459, 460, 468, 503, 508, 520, 608], "reco_exposur": [125, 465], "reco_psf": [104, 107, 111, 112, 116, 508, 520], "recogn": [468, 477, 480, 483, 485, 492, 496, 518], "recognis": [406, 609], "recognit": 422, "recommend": [93, 101, 102, 103, 155, 156, 162, 167, 170, 184, 230, 254, 294, 333, 334, 394, 395, 396, 398, 402, 404, 412, 415, 422, 428, 429, 431, 434, 441, 458, 474, 475, 476, 486, 503, 505, 508, 512, 513, 519, 529, 546, 553, 558, 559, 609, 610, 613], "recomput": [128, 420, 481], "recompute_ul": 128, "recon_vers": [519, 532], "reconstruct": [83, 104, 105, 107, 110, 111, 112, 114, 115, 116, 125, 136, 137, 144, 151, 152, 154, 155, 156, 159, 169, 170, 183, 190, 395, 401, 406, 408, 446, 461, 468, 470, 474, 477, 480, 481, 483, 487, 492, 496, 503, 508, 510, 515, 520, 542, 544, 550, 551, 552, 559, 608], "recopsfmap": [163, 460, 463], "record": [83, 89, 395, 400, 401, 415, 422, 518], "recov": 411, "rectangl": [227, 231, 240, 243, 256, 267, 268, 272, 278, 282, 354, 409, 489, 555], "rectangleskyregion": [208, 226, 227, 282, 353, 354, 409, 470, 501, 510, 555, 559], "rectangular": [489, 555, 559], "recurr": 410, "recurs": [361, 423], "red": [103, 230, 254, 298, 304, 385, 468, 469, 474, 477, 481, 483, 486, 501, 513, 514, 515, 564, 565], "redesign": 404, "redistribut": 550, "redo": 497, "redshift": [19, 20, 232, 419, 532, 574], "redshift_scan": 469, "reduc": [6, 11, 15, 101, 104, 107, 111, 112, 165, 167, 170, 175, 185, 197, 198, 200, 202, 206, 209, 210, 401, 402, 404, 406, 407, 411, 414, 417, 422, 423, 426, 430, 437, 442, 449, 458, 464, 467, 469, 470, 472, 475, 476, 477, 483, 484, 487, 492, 494, 495, 496, 499, 506, 510, 514, 516, 520, 524, 542, 546, 556, 559, 565, 566, 607, 608, 609], "reduce_data": 411, "reduce_over_ax": [197, 198, 200, 206, 209, 210, 480, 508, 520], "reduct": [6, 11, 173, 401, 407, 408, 411, 416, 417, 418, 423, 426, 430, 443, 445, 463, 467, 481, 485, 486, 489, 497, 503, 506, 507, 510, 511, 514, 516, 524, 525, 531, 543, 546, 551, 553, 555, 556, 607, 608], "ref": [83, 95, 104, 111, 125, 130, 137, 196, 205, 208, 230, 254, 396, 420, 478, 485, 489, 495, 502, 503, 504, 507, 509, 519, 532, 559, 597, 598, 599, 600, 601, 602, 609], "ref_templ": [16, 84, 87, 91, 106, 127], "refactor": [395, 407, 409, 410, 411, 419, 426, 439, 440, 441, 443, 444, 445, 446, 449, 451, 453, 455, 457], "refer": [16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 50, 52, 53, 57, 59, 63, 67, 69, 77, 83, 84, 85, 86, 87, 88, 89, 91, 92, 95, 103, 104, 106, 107, 108, 111, 112, 114, 115, 116, 121, 126, 127, 128, 129, 131, 135, 138, 140, 141, 147, 148, 159, 173, 174, 177, 180, 181, 184, 185, 186, 189, 190, 192, 207, 208, 209, 210, 215, 224, 225, 228, 229, 232, 234, 235, 236, 237, 241, 242, 244, 245, 246, 247, 248, 251, 255, 257, 259, 260, 261, 262, 266, 269, 271, 273, 274, 275, 276, 279, 281, 283, 284, 287, 298, 300, 304, 305, 306, 307, 312, 313, 314, 316, 320, 321, 348, 349, 375, 376, 377, 378, 395, 396, 401, 403, 406, 407, 409, 411, 413, 419, 420, 421, 422, 423, 425, 426, 428, 435, 449, 456, 457, 465, 469, 470, 472, 474, 475, 476, 477, 478, 480, 483, 484, 485, 486, 487, 488, 492, 494, 495, 496, 497, 499, 500, 502, 503, 504, 505, 508, 509, 511, 512, 513, 515, 518, 519, 520, 529, 530, 532, 535, 542, 544, 557, 558, 559, 563, 564, 565, 566, 567, 568, 569, 570, 571, 574, 576, 578, 579, 580, 582, 583, 585, 586, 588, 589, 590, 591, 592, 593, 596, 597, 598, 599, 600, 601, 602, 603, 604, 613], "referenc": [395, 608], "reference_flux": [19, 20, 26, 224, 225, 228, 232, 234, 235, 236, 241, 247, 248, 251, 255, 257, 259, 260, 261, 266, 271, 273, 274, 275, 276, 279, 283], "reference_map": 509, "reference_model": [126, 128, 138, 147, 468, 469, 478, 484, 504], "reference_model_default": [126, 128], "reference_spectral_model": [126, 128], "reference_tim": [86, 87, 89, 104, 107, 111, 112, 201, 207, 229, 237, 242, 244, 245, 246, 262, 269, 281, 284, 462, 463, 488, 496, 500, 508, 509, 604], "refit": 504, "reflect": [175, 179, 180, 181, 185, 194, 404, 409, 411, 414, 417, 430, 442, 449, 451, 454, 455, 458, 469, 470, 474, 475, 476, 485, 495, 499, 510, 517, 551, 554, 608], "reflected_bkg_mak": 508, "reflectedbgestim": 411, "reflectedregion": 469, "reflectedregionsbackgroundmak": [175, 180, 443, 465, 470, 474, 476, 485, 495, 499, 508], "reflectedregionsfind": [179, 185, 441, 555], "refpix": [208, 209, 210], "refresh": [88, 92], "refus": 395, "reg": [104, 107, 111, 112, 510, 512], "reg_dataset": 503, "regard": [420, 423, 474, 551], "regardless": [88, 92, 320, 321], "regeard": [461, 462, 463, 464, 465], "regi": [401, 406, 407, 411], "region": [27, 83, 92, 101, 104, 107, 109, 111, 112, 117, 120, 125, 126, 128, 130, 132, 136, 141, 155, 156, 162, 167, 170, 172, 173, 174, 177, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 190, 191, 194, 196, 197, 198, 200, 205, 206, 208, 209, 210, 212, 215, 226, 227, 230, 231, 240, 243, 254, 256, 258, 267, 268, 270, 272, 278, 280, 282, 283, 286, 299, 316, 352, 353, 354, 355, 356, 388, 391, 392, 394, 396, 399, 401, 402, 410, 411, 412, 414, 418, 420, 425, 426, 430, 441, 442, 443, 445, 449, 451, 452, 454, 455, 457, 458, 460, 462, 463, 465, 469, 475, 477, 478, 480, 481, 483, 484, 485, 486, 487, 488, 489, 494, 495, 496, 497, 499, 501, 502, 503, 504, 505, 509, 512, 513, 515, 517, 518, 519, 520, 521, 529, 530, 532, 541, 542, 543, 544, 546, 551, 553, 554, 556, 557, 558, 564, 565, 584, 607, 608, 610, 611, 612], "region_coord": 205, "region_ev": 497, "region_find": [179, 476], "region_io": 205, "region_map": [206, 210, 559], "region_map_1": 559, "region_map_2": 559, "region_mask": [83, 196, 208, 409, 474, 481, 485, 503, 508, 510, 530, 553, 555, 556], "region_nd_map": 206, "region_new": 355, "region_pix": 512, "region_weight": 208, "regionfind": [180, 181, 185], "regiongeom": [104, 107, 111, 112, 126, 130, 177, 184, 186, 187, 188, 190, 191, 206, 227, 231, 240, 243, 256, 267, 268, 270, 272, 278, 282, 409, 410, 418, 426, 430, 445, 446, 449, 468, 470, 474, 476, 477, 485, 489, 495, 496, 497, 499, 502, 503, 504, 508, 519, 532, 542, 555, 558], "regionmapaxi": 426, "regionndmap": [26, 77, 108, 111, 112, 136, 178, 179, 184, 186, 197, 198, 200, 205, 209, 210, 227, 231, 240, 243, 245, 256, 267, 268, 272, 278, 279, 282, 392, 409, 430, 445, 446, 449, 452, 460, 463, 488, 504, 519, 542, 558, 604], "regions_ds9": 510, "regionsfind": [179, 180, 185, 451], "regist": [415, 512], "registri": [55, 99, 122, 163, 175, 250, 252, 264, 265, 277, 417, 424, 426, 442, 445, 446, 449, 458, 502, 512], "regress": 398, "regul": 422, "regular": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 196, 204, 208, 296, 404, 424, 425, 426, 451, 463, 492, 509, 510, 520], "regulargridinterpol": [333, 395], "regularis": 424, "regularli": [424, 521], "reichardt": 453, "reimplement": 406, "rej_sampl": 408, "reject": [399, 400, 408], "rel": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 67, 82, 88, 89, 92, 107, 108, 112, 135, 137, 151, 152, 153, 154, 157, 158, 159, 161, 164, 166, 168, 169, 196, 197, 198, 200, 205, 206, 207, 208, 209, 210, 267, 287, 303, 351, 410, 422, 449, 496, 500, 513, 520, 570, 611], "rel_reduction_of_f_": 505, "relat": [11, 13, 28, 67, 83, 85, 213, 304, 401, 403, 406, 408, 409, 412, 414, 415, 416, 417, 422, 425, 428, 445, 446, 458, 464, 503, 512, 518, 536, 606, 611], "relationship": 415, "relative_variability_amplitud": 500, "relative_variability_error": 500, "relative_variability_signific": 500, "relativist": 584, "releas": [11, 51, 65, 96, 397, 399, 400, 402, 403, 409, 412, 413, 415, 423, 426, 429, 431, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 470, 474, 475, 484, 494, 495, 499, 518, 520, 521, 524, 529, 530, 534, 546, 548, 549, 550, 551, 552], "relev": [126, 295, 299, 377, 395, 401, 410, 415, 416, 420, 425, 427, 474, 475, 478, 494, 495, 496, 499, 511, 513, 514, 518, 520, 521, 529, 530, 542, 543, 613], "reli": [126, 395, 400, 401, 405, 406, 410, 414, 420, 421, 426, 441, 446, 449, 460, 472, 483, 510, 534, 611], "reliabl": [398, 431, 481, 505, 510, 610], "remain": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 88, 92, 101, 400, 401, 402, 403, 408, 412, 415, 422, 426, 439, 458, 476, 511, 552], "remaind": [222, 520], "remark": 476, "rememb": [395, 409, 505, 524, 609], "remi": [418, 419, 441, 442, 443, 444, 445, 446, 449, 460, 461, 462, 463, 464, 465], "remind": [202, 422, 478, 485, 504], "remnant": [28, 52, 470, 486, 512, 537], "remot": [398, 427], "remov": [13, 88, 92, 93, 97, 101, 167, 170, 182, 195, 196, 201, 204, 205, 208, 210, 254, 318, 320, 321, 398, 402, 403, 405, 406, 409, 410, 411, 412, 413, 414, 416, 417, 418, 419, 425, 429, 438, 439, 440, 441, 442, 443, 444, 445, 446, 449, 450, 451, 453, 454, 455, 456, 457, 458, 461, 462, 463, 464, 465, 474, 481, 483, 497, 503, 510, 514, 518, 535, 546, 555], "remove_column": [88, 92], "remove_indic": [88, 92], "remove_row": [88, 92], "renam": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 88, 92, 128, 195, 196, 197, 198, 200, 201, 202, 205, 206, 208, 209, 210, 405, 406, 414, 416, 419, 437, 440, 442, 443, 444, 445, 449, 459, 460, 463, 609], "rename_ax": [195, 196, 197, 198, 200, 201, 205, 206, 208, 209, 210, 460], "rename_column": [88, 92, 128], "rename_dupl": [88, 92], "render": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 88, 92, 372, 395, 396, 403, 457], "renorm": [481, 553], "renormalis": 182, "reoptim": [129, 130, 133, 134, 215, 439, 469, 489, 494, 504, 505, 515, 529], "reorder": 465, "reorder_ax": [197, 198, 200, 206, 209, 210, 463], "reorgan": 449, "reorganis": 416, "repar": 426, "repeat": [396, 483, 520], "repl": 395, "replac": [15, 88, 92, 101, 104, 107, 111, 112, 155, 156, 162, 167, 195, 196, 198, 201, 205, 206, 208, 210, 280, 293, 395, 405, 406, 409, 413, 415, 417, 423, 425, 431, 440, 441, 443, 445, 446, 463, 464, 465, 497], "replace_axi": [195, 196, 205, 208], "replace_column": [88, 92], "replic": [320, 321], "replica": [320, 321], "replicate_without_data": [320, 321], "repo": [396, 403, 427, 428, 437, 450], "report": [88, 398, 411, 427, 428, 435, 437, 451, 452, 457], "repositori": [88, 92, 395, 398, 400, 403, 405, 422, 426, 427, 430, 449, 458, 487, 521], "repres": [13, 16, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 47, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 70, 71, 72, 74, 75, 76, 77, 78, 79, 80, 84, 87, 88, 91, 92, 104, 106, 107, 111, 112, 127, 196, 198, 200, 202, 203, 205, 207, 270, 319, 320, 321, 329, 339, 395, 406, 407, 408, 409, 413, 417, 418, 419, 420, 426, 439, 463, 469, 488, 489, 502, 504, 505, 508, 509, 510, 512, 519, 532, 541, 542, 544, 548, 549, 550, 552, 558, 606, 607, 608, 613], "represent": [16, 19, 20, 26, 83, 84, 86, 87, 88, 91, 92, 106, 127, 224, 225, 228, 232, 234, 235, 236, 241, 247, 248, 251, 255, 257, 259, 260, 261, 266, 271, 273, 274, 275, 276, 279, 283, 320, 321, 395, 409, 423, 426, 439, 441, 463, 472, 502, 509, 512, 513, 558], "represent_a": [320, 321], "representation_component_nam": [320, 321], "representation_component_unit": [320, 321], "representation_info": [320, 321], "representation_typ": [320, 321], "reprocess": 401, "reproduc": [95, 103, 128, 396, 411, 412, 413, 415, 416, 422, 423, 429, 431, 458, 508], "reproject": [183, 197, 198, 200, 206, 209, 210, 391, 395, 401, 409, 412, 420, 426, 443, 450, 458, 460, 464, 509, 510], "reproject_by_imag": [197, 198, 200, 206, 209, 210, 464], "reproject_to_geom": [197, 198, 200, 206, 209, 210, 460], "request": [85, 126, 128, 320, 321, 399, 400, 402, 403, 404, 405, 406, 407, 409, 416, 420, 421, 422, 424, 428, 436, 487, 504, 510, 544], "requir": [16, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 43, 44, 82, 84, 85, 87, 88, 89, 91, 92, 96, 104, 106, 107, 111, 112, 113, 118, 127, 128, 131, 135, 137, 151, 152, 154, 157, 158, 159, 164, 166, 169, 174, 197, 198, 199, 200, 201, 202, 205, 206, 207, 209, 210, 211, 319, 369, 373, 374, 393, 400, 401, 402, 404, 405, 406, 407, 408, 409, 410, 411, 418, 419, 420, 421, 422, 424, 425, 426, 427, 429, 431, 437, 442, 443, 444, 445, 450, 451, 453, 454, 455, 456, 459, 460, 461, 465, 469, 470, 476, 481, 484, 495, 496, 497, 499, 500, 503, 507, 509, 510, 512, 513, 518, 530, 544, 546, 559], "require_ev": 82, "required_ax": [151, 152, 153, 154, 155, 156, 157, 158, 159, 161, 162, 164, 166, 167, 168, 169, 170, 507], "required_hdu": 452, "required_irf": [16, 82, 475, 476, 480, 481, 483, 529], "required_nam": [199, 201, 202, 207], "required_paramet": [158, 166, 168], "rerun": [410, 499], "resampl": [104, 107, 111, 112, 128, 149, 150, 155, 195, 196, 197, 198, 199, 200, 201, 205, 206, 208, 209, 210, 390, 449, 451, 500, 546], "resample_axi": [128, 195, 196, 197, 198, 200, 205, 206, 208, 209, 210, 390, 446, 495, 500], "resample_energy_axi": [104, 107, 111, 112, 155, 446, 451, 503], "resample_energy_edg": [474, 546], "resampled_energy_edg": 150, "resampled_map": [197, 198, 200, 206, 209, 210], "rescal": 508, "research": [411, 422], "reset": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 104, 107, 111, 112, 218, 220, 238, 280, 396, 446], "reset_autoscal": [218, 220], "reset_data_cach": [104, 107, 111, 112], "reset_to_default": 238, "reshap": [197, 198, 200, 206, 209, 210, 320, 321, 468, 488, 507, 509], "resid": [418, 512], "residu": [72, 103, 104, 107, 111, 112, 174, 406, 407, 411, 441, 446, 452, 459, 465, 481, 503, 505, 519, 542, 555, 608], "resolut": [52, 154, 155, 159, 196, 208, 404, 406, 408, 409, 426, 457, 463, 465, 502, 519], "resolv": [16, 84, 87, 91, 106, 127, 396, 398, 405, 409, 410, 418, 419, 433, 439, 458, 465, 467, 493, 495, 498, 524, 555], "resort": 480, "resourc": [457, 524], "respect": [15, 16, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 47, 84, 87, 88, 91, 92, 106, 108, 127, 128, 141, 196, 198, 208, 210, 294, 395, 405, 410, 422, 424, 446, 465, 478, 481, 496, 504, 509, 510, 513, 520, 544, 559, 612], "respond": 422, "respons": [6, 110, 154, 155, 156, 159, 161, 162, 180, 395, 401, 402, 404, 406, 407, 408, 410, 411, 420, 422, 430, 456, 457, 458, 459, 470, 474, 475, 476, 477, 492, 496, 507, 508, 511, 518, 520, 521, 522, 524, 529, 530, 542, 543, 548, 550, 552, 607, 608], "rest": [26, 398, 412, 414, 502, 541], "restart": 513, "restor": [19, 20, 26, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 219, 221, 224, 225, 226, 227, 228, 229, 230, 231, 232, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 251, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 278, 279, 280, 281, 282, 283, 284, 285, 511], "restore_statu": [219, 221, 230, 254, 515], "restore_valu": [219, 221, 230, 254], "restrict": [88, 92, 409, 483, 503, 510], "restructur": [396, 410, 411, 412, 414, 417, 423, 428, 443, 449, 450, 451, 452, 454, 463], "result": [16, 46, 74, 84, 86, 87, 88, 91, 92, 93, 103, 104, 106, 107, 111, 112, 121, 123, 125, 126, 127, 128, 129, 130, 132, 133, 134, 135, 137, 139, 140, 145, 147, 148, 159, 165, 167, 170, 183, 187, 188, 193, 195, 196, 197, 198, 200, 202, 205, 206, 208, 209, 210, 214, 215, 216, 217, 222, 230, 254, 282, 293, 298, 319, 320, 321, 388, 394, 395, 396, 398, 400, 402, 404, 405, 406, 407, 408, 411, 413, 414, 415, 418, 422, 424, 425, 431, 434, 441, 449, 451, 452, 457, 459, 463, 464, 465, 469, 472, 474, 476, 477, 483, 485, 487, 488, 492, 495, 496, 497, 500, 502, 503, 505, 509, 510, 514, 515, 519, 520, 521, 529, 530, 541, 544, 546, 559, 597, 608, 610, 611], "result1": 469, "result2": 511, "result_0": 513, "result_1": 513, "result_2": 513, "result_ecpl": 472, "result_joint": [470, 474, 483, 513], "result_list": 388, "result_log_parabola": 472, "result_minuit": 505, "result_pwl": 472, "result_scipi": 505, "result_stack": 474, "results_joint": 484, "results_prior": 515, "results_simplex": 505, "results_t": 486, "resum": [222, 513], "retain": [502, 559], "retriev": [88, 92, 320, 321, 420, 422, 470, 472, 474, 509, 512, 514, 520, 530, 543, 558, 559], "return": [16, 19, 20, 26, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 43, 44, 45, 46, 47, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 77, 80, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 97, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 116, 117, 118, 119, 120, 121, 123, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 161, 162, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 215, 218, 219, 220, 221, 222, 224, 225, 226, 227, 228, 229, 230, 231, 232, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 251, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 278, 279, 280, 281, 282, 283, 284, 285, 286, 288, 291, 293, 294, 295, 298, 299, 300, 302, 303, 304, 305, 306, 307, 312, 313, 314, 316, 317, 318, 319, 320, 321, 323, 325, 327, 328, 332, 334, 339, 343, 345, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 360, 361, 364, 365, 366, 375, 376, 377, 378, 379, 381, 383, 385, 386, 388, 390, 391, 401, 405, 406, 407, 408, 409, 410, 415, 419, 420, 423, 424, 425, 442, 443, 446, 449, 452, 458, 460, 465, 474, 476, 481, 485, 489, 495, 496, 499, 502, 503, 504, 505, 508, 509, 510, 512, 513, 515, 532, 536, 558, 559, 593, 611], "return_delta": 351, "return_diff": 351, "return_typ": [87, 91], "return_unit": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40], "reus": [411, 415, 446, 464], "reval": 566, "reveal": [425, 513], "revers": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 50, 53, 88, 92, 93, 101, 201, 254, 320, 321, 509, 539], "reverse_lon_radec": 160, "revert": 465, "review": [398, 403, 404, 405, 408, 409, 411, 412, 414, 416, 417, 419, 420, 422, 424, 425, 459, 460, 513, 558], "revis": [416, 513], "revisit": [39, 40, 232], "rework": [426, 444], "rewrit": [401, 404, 411, 444, 454, 455, 457, 458, 459, 609], "rewritten": [456, 459], "rf": 501, "rgb": [390, 392, 463, 468, 474], "rglob": [82, 487, 518], "rhe": 186, "rho": [17, 18, 21, 22, 23, 24, 25, 27], "rho_": [17, 21, 22, 24, 25, 27, 52, 53], "rhul": [312, 314], "rich": [395, 411, 513], "rid": [401, 426], "right": [21, 24, 25, 27, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 50, 51, 52, 53, 88, 92, 104, 111, 126, 128, 137, 157, 236, 241, 261, 274, 275, 300, 303, 306, 383, 395, 409, 419, 422, 478, 485, 487, 494, 496, 518, 564, 565, 566, 574, 575, 578, 579, 581, 582, 586, 589, 590, 591, 592, 597, 598, 599, 601, 609, 610, 611, 612], "rightarrow": [570, 612], "rigid": 400, "ring": [107, 125, 172, 175, 182, 196, 197, 198, 401, 404, 411, 414, 430, 439, 443, 445, 455, 456, 457, 458, 467, 479, 482, 486, 510, 524, 545, 551, 554, 557, 608], "ring2dkernel": [172, 182], "ring_background": [467, 481, 482], "ring_bkg_mak": 556, "ring_mak": 481, "ringbackgroundestim": [401, 457], "ringbackgroundmak": [172, 175, 443, 481, 508, 551, 556], "rint": 465, "rise": [141, 244, 500, 599], "risk": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 398, 422], "rm": [154, 155, 159, 276, 419, 476, 505, 548, 550, 551, 552, 566, 597, 598, 599, 600, 601, 602], "rmax": [17, 18, 21, 22, 24, 25, 27], "rmf": [108, 109, 112, 154, 155, 156, 455, 474], "rmf_ob": 108, "rmffile": 108, "rmin": [17, 18, 21, 22, 24, 25, 27], "rng": [19, 20, 26, 33, 42, 45, 46, 47, 104, 105, 107, 110, 111, 112, 156, 167, 170, 197, 198, 200, 206, 209, 210, 224, 225, 228, 229, 232, 234, 235, 236, 237, 241, 242, 244, 245, 246, 247, 248, 251, 255, 257, 259, 260, 261, 262, 266, 269, 271, 273, 274, 275, 276, 279, 281, 283, 284, 298, 343, 345, 348, 349, 350, 351, 395], "roadmap": [399, 402, 411, 421, 438, 459], "roberta": [457, 458], "robust": [395, 425, 458, 513], "roellinghoff": 465, "roi": [67, 411, 502, 521, 608], "roi_max": 411, "role": [415, 457, 508], "rolf": 437, "rolk": 608, "rolke2005": 608, "roll": 519, "room": [405, 415], "root": [19, 20, 26, 126, 127, 135, 137, 224, 225, 228, 232, 234, 235, 236, 241, 247, 248, 251, 255, 257, 259, 260, 261, 266, 271, 273, 274, 275, 276, 279, 283, 308, 311, 395, 413, 449, 478, 534, 544, 609, 611], "rosillo": 460, "rotang": 488, "rotat": [22, 51, 54, 177, 180, 181, 185, 190, 231, 240, 243, 488, 555, 564, 565], "rough": [72, 411], "roughli": [121, 320, 321, 398, 403, 409, 411, 414, 416, 456, 481], "round": [88, 92, 195, 196, 197, 198, 200, 202, 205, 206, 208, 209, 210, 425, 426, 474, 558], "round_to_edg": [195, 196, 205, 208], "round_trip": [16, 84, 87, 91, 106, 127], "rout": [320, 321], "routin": 437, "row": [56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 88, 92, 145, 154, 329, 365, 389, 410, 420, 423, 460, 463, 474, 477, 488, 489, 499, 502, 505, 509, 518, 520, 521, 532, 541], "row_idx": [67, 88], "row_index": [56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 502], "row_label": 389, "row_specifi": [83, 88, 92], "royalblu": 497, "rpovid": 410, "rspec": [67, 502], "rst": [398, 400, 416, 422, 427, 428, 444, 449], "rtd": 458, "rtol": [135, 137, 369, 395], "rtol_ax": [151, 152, 153, 154, 157, 158, 159, 161, 164, 166, 168, 169, 196, 197, 198, 200, 205, 206, 208, 209, 210], "rtol_wc": 208, "ruben": 457, "rub\u00e9n": 457, "ruiz": [403, 411, 415, 416, 438, 439, 440, 441, 442, 443, 444, 445, 446, 449, 451, 457, 458, 459], "rule": [88, 92, 270, 289, 320, 321, 332, 422, 509, 558], "run": [16, 82, 83, 84, 87, 89, 91, 94, 103, 105, 106, 110, 121, 123, 124, 125, 127, 129, 130, 132, 133, 134, 135, 136, 137, 145, 146, 172, 173, 174, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 195, 196, 205, 208, 215, 222, 223, 341, 342, 368, 388, 394, 395, 396, 402, 403, 405, 408, 410, 411, 412, 416, 418, 420, 424, 425, 427, 428, 429, 434, 440, 441, 444, 445, 456, 458, 459, 463, 465, 468, 469, 470, 472, 477, 478, 480, 481, 483, 484, 485, 487, 492, 495, 496, 497, 499, 500, 501, 502, 503, 504, 505, 507, 508, 509, 510, 511, 512, 514, 515, 517, 518, 519, 520, 521, 524, 525, 527, 530, 532, 542, 543, 544, 546, 551, 553, 555, 556, 563, 564, 565, 566, 567, 568, 569, 570, 571, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 596, 597, 598, 599, 600, 601, 602, 603, 604], "run0": 513, "run1": 513, "run2": 513, "run_fit": [15, 475, 480, 529], "run_id": [83, 519, 532], "run_multiprocess": 546, "run_opt": 222, "runner": [16, 358, 468, 470, 474, 475, 476, 477, 478, 480, 481, 483, 484, 485, 486, 487, 488, 489, 492, 494, 495, 496, 497, 499, 501, 502, 503, 505, 508, 509, 510, 511, 512, 515, 517, 518, 519, 520, 521, 529, 530, 532, 571, 574, 597, 603, 604], "runtim": [404, 423, 427], "runtimewarn": [476, 481, 487, 499, 521, 597], "rvyijxiv": 499, "rx": 470, "rxj": 470, "rxj1713_2016_250gev": 571, "r\u00e9gi": [401, 404, 405, 409, 410, 412, 414, 417, 418, 419, 420, 421, 423, 425, 426, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 451, 452, 453, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465], "r\u00e9my": [413, 449, 451, 452, 460], "s0167947313003204": 139, "s10052": [312, 314], "s180": 304, "s2": 281, "s3": 281, "s_0": 546, "s_1": 546, "safari": [88, 92], "safe": [100, 103, 104, 107, 111, 112, 155, 156, 162, 167, 170, 175, 183, 395, 407, 409, 422, 443, 445, 446, 460, 461, 462, 463, 465, 470, 474, 503, 510, 530, 542, 607], "safe_mask": [16, 104, 111, 475, 480, 481, 483, 529], "safe_mask_mak": [173, 470, 474, 497, 508, 520, 553, 555, 556], "safe_mask_mask": [476, 485, 495, 499, 508], "safemaskconfig": 16, "safemaskmak": [173, 175, 417, 443, 444, 449, 451, 452, 464, 470, 474, 476, 485, 492, 495, 497, 499, 508, 510, 520, 529, 530, 553, 554, 555, 556], "safer": 425, "safeti": [422, 426], "sagittariu": [33, 38], "saha": 457, "sai": [74, 400, 414, 415, 609], "said": [395, 400, 402, 520, 521, 609], "sake": [487, 505], "saldana": [232, 233, 463, 469, 574], "saldana21": 574, "samantha": 465, "same": [27, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 82, 88, 92, 96, 101, 104, 107, 108, 111, 112, 125, 137, 138, 139, 145, 146, 147, 148, 158, 159, 165, 166, 167, 168, 170, 171, 173, 194, 195, 196, 197, 198, 200, 201, 204, 205, 206, 208, 209, 210, 287, 298, 304, 312, 314, 320, 321, 388, 395, 398, 403, 405, 407, 409, 410, 414, 415, 416, 417, 418, 419, 420, 421, 422, 424, 426, 427, 428, 430, 431, 441, 442, 446, 449, 463, 472, 475, 476, 477, 483, 484, 487, 492, 494, 495, 497, 502, 503, 509, 510, 511, 512, 514, 515, 519, 520, 524, 529, 531, 542, 543, 544, 550, 558, 559, 609], "sampl": [19, 20, 26, 47, 94, 105, 110, 137, 140, 156, 158, 164, 166, 167, 168, 170, 197, 198, 200, 206, 208, 209, 210, 222, 223, 224, 225, 228, 229, 232, 234, 235, 236, 237, 241, 242, 244, 245, 246, 247, 248, 251, 255, 257, 259, 260, 261, 262, 266, 269, 271, 273, 274, 275, 276, 279, 281, 283, 284, 294, 298, 307, 334, 343, 348, 349, 350, 351, 399, 407, 409, 410, 413, 416, 430, 437, 439, 441, 442, 445, 451, 458, 460, 463, 464, 465, 467, 476, 490, 491, 500, 503, 505, 506, 516, 524, 546], "sample_axi": 343, "sample_background": [105, 110, 443], "sample_coord": [156, 167, 170, 197, 198, 200, 206, 209, 210, 443, 445, 460], "sample_edisp": [105, 110], "sample_powerlaw": 414, "sample_psf": [105, 110], "sample_sourc": [105, 110], "sample_spher": [453, 613], "sample_tim": [229, 237, 242, 244, 245, 246, 262, 269, 281, 284, 449, 460, 465], "sampler": [105, 223, 343, 404, 408, 425, 445, 449, 465, 487], "sampler_kwarg": 94, "sampler_opt": [222, 513], "sampler_result": [223, 513], "sampler_ultranest": 222, "samplerlikelihood": [222, 425], "samplerresult": [222, 513], "samreai": 513, "saniti": 457, "santiago": 465, "satisfi": [150, 174, 196, 197, 198, 319, 511, 513, 546], "save": [15, 19, 20, 26, 101, 137, 212, 215, 224, 225, 226, 227, 228, 229, 230, 231, 232, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 251, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 278, 279, 280, 281, 282, 283, 284, 285, 320, 321, 395, 403, 411, 415, 420, 424, 425, 465, 469, 483, 484, 487, 505, 510, 511, 520, 543], "savefig": [372, 434], "savez": 212, "saw": 435, "sbpl": [271, 419, 512], "sc": [88, 92], "scalar": [88, 92, 165, 196, 197, 198, 200, 206, 209, 210, 319, 414, 451, 462, 464, 509, 558], "scale": [17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 29, 52, 53, 67, 86, 89, 97, 101, 106, 107, 112, 121, 127, 129, 130, 133, 158, 174, 202, 206, 207, 208, 210, 218, 220, 224, 225, 227, 228, 231, 232, 234, 235, 236, 237, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 251, 255, 256, 257, 258, 259, 260, 261, 262, 266, 267, 268, 269, 271, 273, 274, 275, 276, 279, 281, 282, 283, 291, 294, 318, 333, 334, 335, 351, 375, 376, 377, 388, 395, 396, 404, 409, 410, 413, 415, 419, 425, 426, 444, 449, 450, 458, 461, 462, 463, 465, 475, 478, 488, 489, 494, 495, 496, 500, 501, 502, 504, 507, 508, 509, 512, 514, 515, 518, 529, 532, 534, 574, 596, 597, 598, 599, 600, 601, 602, 603, 604], "scale10": [19, 20, 218, 220, 224, 227, 228, 231, 232, 234, 235, 236, 237, 240, 241, 242, 243, 244, 245, 246, 247, 248, 251, 258, 259, 260, 261, 262, 266, 267, 268, 269, 271, 274, 275, 276, 281, 282, 424, 584], "scale_method": [19, 20, 218, 220, 224, 227, 228, 231, 232, 234, 235, 236, 237, 240, 241, 242, 243, 244, 245, 246, 247, 248, 251, 258, 259, 260, 261, 262, 266, 267, 268, 269, 271, 274, 275, 276, 281, 282, 424, 584], "scale_to_local_dens": [17, 18, 21, 22, 24, 25, 27, 501], "scale_transform": [218, 220, 584], "scaled_featur": 318, "scaled_features_irf": [317, 318, 514], "scaledregulargridinterpol": [68, 232, 283, 444, 459], "scalespectralmodel": [129, 130, 133, 265, 419, 512], "scan": [19, 20, 96, 126, 128, 129, 130, 133, 134, 215, 218, 220, 224, 227, 228, 231, 232, 234, 235, 236, 237, 240, 241, 242, 243, 244, 245, 246, 247, 248, 251, 258, 259, 260, 261, 262, 266, 267, 268, 269, 271, 274, 275, 276, 281, 282, 410, 420, 449, 489, 495, 504, 515, 544, 546], "scan_max": [19, 20, 129, 133, 137, 218, 220, 224, 227, 228, 231, 232, 234, 235, 236, 237, 240, 241, 242, 243, 244, 245, 246, 247, 248, 251, 258, 259, 260, 261, 262, 266, 267, 268, 269, 271, 274, 275, 276, 281, 282, 469, 495, 504, 505], "scan_min": [19, 20, 129, 133, 137, 218, 220, 224, 227, 228, 231, 232, 234, 235, 236, 237, 240, 241, 242, 243, 244, 245, 246, 247, 248, 251, 258, 259, 260, 261, 262, 266, 267, 268, 269, 271, 274, 275, 276, 281, 282, 469, 504, 505], "scan_n_sigma": [19, 20, 218, 220, 224, 227, 228, 231, 232, 234, 235, 236, 237, 240, 241, 242, 243, 244, 245, 246, 247, 248, 251, 258, 259, 260, 261, 262, 266, 267, 268, 269, 271, 274, 275, 276, 281, 282, 505], "scan_n_valu": [19, 20, 129, 133, 134, 218, 224, 227, 228, 231, 232, 234, 235, 236, 237, 240, 241, 242, 243, 244, 245, 246, 247, 248, 251, 258, 259, 260, 261, 262, 266, 267, 268, 269, 271, 274, 275, 276, 281, 282, 469, 505, 515], "scan_prior": 515, "scan_valu": [19, 20, 215, 218, 220, 224, 227, 228, 231, 232, 234, 235, 236, 237, 240, 241, 242, 243, 244, 245, 246, 247, 248, 251, 258, 259, 260, 261, 262, 266, 267, 268, 269, 271, 274, 275, 276, 281, 282, 489, 505], "scargl": [410, 457, 500], "scatter": [24, 230, 254, 417, 478, 485, 499, 564, 565], "sce": 551, "scenario": [88, 92, 400, 407, 418, 430, 504, 509, 512, 535, 610], "scengin": [88, 92], "schedul": 404, "schema": [15, 16, 84, 87, 91, 106, 127, 411, 414, 415], "schema_gener": [16, 84, 87, 91, 106, 127], "schema_json": [16, 84, 87, 91, 106, 127], "scheme": [16, 84, 87, 91, 103, 106, 108, 109, 127, 196, 197, 198, 207, 222, 245, 395, 401, 405, 407, 410, 418, 419, 420, 421, 423, 427, 442, 449, 460, 464, 488, 507, 509, 512, 513, 546, 551, 557, 558, 560], "schiavo": 465, "school": [422, 425, 426], "scienc": [139, 197, 198, 200, 209, 210, 402, 404, 408, 411, 412, 416, 422, 425, 435, 457, 458, 477, 484, 496, 509, 512, 514, 518, 519, 524, 534, 546, 582, 608, 609], "sciencedirect": 139, "scientif": [396, 402, 419, 422, 431], "scientist": 518, "scikit": [145, 395, 409, 412, 416, 458, 510], "scipi": [19, 20, 26, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 210, 215, 224, 225, 228, 232, 234, 235, 236, 241, 247, 248, 251, 255, 257, 259, 260, 261, 266, 271, 273, 274, 275, 276, 279, 281, 283, 317, 333, 374, 388, 394, 395, 398, 404, 409, 412, 413, 416, 422, 435, 439, 440, 441, 442, 454, 455, 456, 459, 461, 468, 470, 474, 475, 476, 477, 478, 480, 481, 483, 484, 485, 486, 487, 488, 489, 494, 495, 496, 497, 501, 502, 503, 504, 505, 508, 509, 510, 511, 512, 515, 517, 518, 519, 520, 521, 529, 530, 532, 606, 611], "scipy_mvn": 213, "scipy_opt": 505, "scitool": 587, "scope": [408, 409, 410, 411, 414, 415, 423, 535, 551], "scratch": [157, 395, 405, 409, 428, 483, 510], "screen": [88, 92, 509, 532], "script": [6, 88, 92, 128, 357, 358, 359, 360, 361, 362, 363, 396, 401, 402, 404, 406, 409, 411, 414, 415, 416, 422, 427, 428, 438, 439, 440, 441, 449, 450, 454, 457, 458, 459, 460, 464, 467, 469, 472, 474, 475, 478, 481, 483, 484, 485, 486, 487, 489, 494, 495, 496, 497, 499, 501, 502, 503, 504, 505, 508, 511, 513, 515, 519, 526, 529, 530, 545, 546, 609], "scriptabl": 423, "scroll": 396, "scutum": [33, 38], "sdc": 518, "sdist": 428, "seaborn": 546, "seamless": 415, "seamlessli": 415, "search": [88, 92, 295, 299, 358, 395, 396, 434, 457, 458, 475, 478, 485, 486, 501, 502, 514, 529, 530, 532, 534, 546, 551, 609], "season": 416, "sebastian": 449, "sec": [54, 83, 95, 101, 133, 351, 505], "second": [42, 58, 83, 86, 88, 89, 92, 140, 154, 281, 307, 351, 354, 371, 375, 378, 384, 396, 403, 405, 407, 409, 413, 420, 422, 426, 428, 443, 462, 469, 472, 474, 475, 478, 481, 483, 484, 485, 486, 487, 488, 489, 494, 495, 496, 497, 499, 501, 503, 504, 505, 508, 509, 511, 513, 515, 518, 524, 529, 530, 531, 541, 610, 613], "secpl": [274, 275, 276, 419, 512], "section": [19, 88, 92, 298, 300, 306, 395, 396, 398, 400, 409, 411, 412, 414, 415, 419, 422, 425, 426, 428, 446, 459, 477, 483, 487, 488, 492, 496, 502, 504, 505, 510, 511, 512, 532, 535, 546, 559, 607, 609, 613, 614], "secur": 510, "sed": [122, 125, 126, 127, 128, 130, 137, 206, 232, 394, 411, 413, 420, 430, 437, 456, 472, 478, 489, 495, 502, 503, 504, 529, 532, 608], "sed_fit": [467, 472, 473], "sed_fitting_gammacat_fermi": 416, "sed_typ": [19, 20, 26, 126, 127, 128, 224, 225, 228, 232, 234, 235, 236, 241, 247, 248, 251, 255, 257, 259, 260, 261, 266, 271, 273, 274, 275, 276, 279, 283, 449, 468, 469, 472, 474, 475, 476, 484, 485, 489, 494, 495, 496, 502, 504, 530, 532, 544, 546, 584, 608], "sed_type_init": [71, 74, 75, 78, 126, 127, 128], "sed_type_plot_default": [126, 128], "sedov": [52, 53], "sedov_taylor_begin": [52, 53, 540], "sedov_taylor_end": [52, 53, 540], "seds_20230803": 64, "sedtypeenum": 127, "see": [11, 13, 19, 20, 26, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 50, 66, 82, 83, 85, 88, 90, 92, 96, 100, 101, 102, 103, 104, 107, 111, 112, 121, 123, 125, 128, 129, 130, 133, 136, 137, 139, 151, 152, 153, 154, 155, 156, 157, 158, 159, 161, 162, 164, 166, 167, 168, 169, 170, 173, 180, 182, 183, 190, 195, 196, 198, 200, 202, 203, 205, 208, 210, 215, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 234, 235, 236, 237, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 251, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 266, 267, 268, 269, 270, 271, 273, 274, 275, 276, 279, 280, 281, 282, 283, 285, 288, 300, 306, 309, 310, 316, 319, 320, 321, 329, 345, 361, 385, 386, 394, 395, 396, 398, 399, 400, 402, 403, 404, 405, 408, 409, 410, 411, 412, 413, 415, 416, 417, 421, 422, 423, 424, 425, 426, 428, 430, 431, 433, 434, 436, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 454, 455, 456, 457, 458, 459, 460, 468, 469, 470, 472, 474, 475, 476, 477, 478, 480, 481, 483, 484, 485, 486, 487, 489, 492, 494, 495, 496, 499, 500, 501, 502, 503, 504, 505, 507, 508, 509, 510, 511, 512, 513, 514, 515, 517, 518, 520, 524, 529, 530, 532, 534, 542, 543, 546, 551, 556, 557, 559, 587, 591, 592, 606, 608, 609, 610, 611, 613, 614], "seed": [19, 20, 26, 33, 42, 45, 46, 47, 104, 105, 107, 110, 111, 112, 156, 167, 170, 197, 198, 200, 206, 209, 210, 224, 225, 228, 229, 232, 234, 235, 236, 237, 241, 242, 244, 245, 246, 247, 248, 251, 255, 257, 259, 260, 261, 262, 266, 269, 271, 273, 274, 275, 276, 279, 281, 283, 284, 298, 343, 344, 345, 348, 349, 350, 351, 395, 457, 487, 584], "seed_photon_field": [255, 584], "seem": [395, 402, 403, 406, 412, 417, 426, 534], "seen": [395, 409, 417, 470, 478, 484, 495, 509, 512, 519, 608], "select": [16, 82, 83, 86, 88, 89, 90, 92, 93, 97, 101, 104, 107, 111, 112, 125, 177, 184, 197, 198, 199, 200, 202, 207, 209, 210, 219, 221, 230, 254, 270, 280, 293, 391, 392, 398, 405, 407, 408, 409, 410, 411, 415, 416, 418, 420, 423, 430, 432, 434, 438, 441, 449, 453, 468, 474, 476, 477, 480, 481, 483, 484, 486, 487, 488, 492, 496, 497, 503, 504, 505, 508, 509, 510, 513, 514, 517, 518, 520, 521, 524, 531, 532, 544, 546, 550, 551, 555, 607, 609], "select_energi": [83, 543], "select_from_geom": [230, 254], "select_map_mask": 439, "select_mask": [83, 230, 254, 449, 511], "select_nested_model": [463, 465], "select_obs_id": [92, 485], "select_observ": [92, 97, 411, 495, 499, 514, 530, 546], "select_offset": [83, 487, 521, 543], "select_paramet": [83, 90, 497, 543], "select_phas": 405, "select_rad_max": 83, "select_rang": 92, "select_region": [83, 90, 230, 254, 409, 441, 449, 487, 488, 497, 511, 532, 543], "select_row_subset": 83, "select_sky_box": 409, "select_sky_circl": [92, 409], "select_tim": [83, 86, 89, 93, 101, 405, 420, 443, 488, 495, 499, 543], "select_time_rang": 92, "selected_energi": 543, "selected_ev": 83, "selected_id": 543, "selected_obs_t": [92, 514, 530], "selected_offset": 543, "selected_region": 543, "selected_tim": 543, "selection_al": [121, 137], "selection_mask": [230, 254, 511], "selection_opt": [16, 121, 123, 124, 125, 129, 130, 132, 133, 134, 136, 137, 449, 465, 469, 474, 475, 478, 480, 481, 483, 484, 485, 489, 494, 495, 496, 497, 504, 510, 520, 529], "selection_vari": 92, "selectionconfig": 16, "selectionslid": [483, 492, 509, 529, 530], "self": [16, 19, 20, 26, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 83, 84, 86, 87, 88, 91, 92, 106, 126, 127, 128, 205, 206, 224, 225, 228, 232, 234, 235, 236, 241, 247, 248, 251, 255, 257, 259, 260, 261, 266, 270, 271, 273, 274, 275, 276, 279, 283, 320, 321, 395, 396, 406, 407, 409, 412, 419, 420, 423, 424, 425, 445, 481, 509, 512], "semant": [409, 415, 421], "semi": 231, "semiaxi": [231, 240, 243, 564, 565, 566], "semilogi": [19, 20, 26, 224, 225, 228, 232, 234, 235, 236, 241, 247, 248, 251, 255, 257, 259, 260, 261, 266, 271, 273, 274, 275, 276, 279, 283, 468, 488], "semimajor": 502, "semiminor": 502, "semver": 421, "send": 427, "sens": [395, 402, 405, 409, 411, 414, 416, 417, 481], "sensibl": 514, "sensit": [122, 125, 126, 127, 128, 129, 130, 133, 134, 135, 136, 137, 287, 312, 314, 408, 416, 426, 444, 446, 456, 457, 463, 464, 467, 471, 473, 492, 518, 524, 534, 551], "sensitivity_estim": 468, "sensitivity_t": 468, "sensitivityestim": [122, 438, 444, 468], "sent": 400, "sentenc": [400, 416, 422], "sep": [205, 320, 321, 404, 412, 419, 436, 512], "separ": [17, 18, 21, 22, 24, 25, 27, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 67, 71, 72, 74, 75, 76, 78, 79, 80, 83, 92, 196, 205, 208, 313, 320, 321, 384, 395, 396, 401, 402, 403, 404, 407, 408, 409, 410, 411, 414, 416, 417, 418, 425, 426, 445, 449, 455, 457, 458, 462, 463, 477, 481, 483, 485, 492, 496, 502, 511, 512, 514, 535, 543, 551, 552, 564, 565, 569, 570, 584, 608], "separation_3d": [320, 321], "septemb": [404, 412, 414, 416, 421], "sequenc": [88, 92, 93, 101, 104, 111, 151, 152, 153, 154, 156, 157, 158, 159, 161, 164, 166, 167, 168, 169, 170, 195, 196, 197, 198, 200, 201, 202, 203, 205, 206, 207, 208, 209, 210, 219, 230, 254, 319, 415, 428], "sequenti": [401, 474, 530], "seri": [88, 92, 128, 298, 303, 351, 404, 409, 410, 449, 465, 500], "serial": [16, 84, 87, 88, 91, 92, 100, 101, 103, 104, 106, 107, 111, 112, 127, 401, 406, 410, 411, 415, 417, 420, 426, 442, 445, 449, 451, 458, 460, 461, 462, 463, 464, 509, 512, 515, 534], "serialis": [20, 104, 107, 111, 112, 219, 221, 224, 225, 228, 230, 232, 234, 235, 236, 238, 239, 241, 245, 247, 248, 249, 251, 253, 254, 255, 257, 259, 260, 261, 263, 266, 271, 273, 274, 275, 276, 278, 279, 280, 281, 282, 283, 285, 407, 409, 411, 414, 415, 417, 418, 419, 426, 441, 443, 445, 449, 454, 457, 459, 460, 462, 463, 464, 515, 529, 546, 559, 604], "serializ": [16, 84, 87, 91, 106, 127], "serialize_as_ani": [16, 84, 87, 91, 106, 127], "serialize_method": [88, 92], "serializiaton": 407, "serilis": [26, 226, 227, 229, 231, 237, 240, 242, 243, 244, 246, 256, 258, 262, 267, 268, 269, 270, 272, 279, 284], "sersic": 419, "sersic2d": 419, "sersicspatialmodel": 419, "serv": [88, 92, 395, 400, 407, 411, 420, 425, 428, 451, 501, 550], "server": [418, 430, 432, 524], "servic": [415, 457], "servillat": 415, "session": [398, 411, 415, 422, 426, 545], "set": [15, 16, 19, 20, 23, 26, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 82, 84, 87, 88, 91, 92, 96, 102, 103, 104, 105, 106, 107, 108, 110, 111, 112, 116, 123, 125, 126, 127, 128, 129, 130, 132, 133, 137, 139, 148, 154, 156, 167, 170, 173, 174, 177, 183, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 213, 215, 218, 219, 220, 221, 222, 224, 227, 228, 230, 231, 232, 234, 235, 236, 237, 240, 241, 242, 243, 244, 245, 246, 247, 248, 251, 254, 255, 256, 258, 259, 260, 261, 262, 266, 267, 268, 269, 271, 272, 274, 275, 276, 278, 281, 282, 283, 293, 307, 320, 321, 341, 343, 395, 396, 401, 404, 405, 407, 408, 410, 411, 412, 413, 415, 416, 420, 421, 422, 423, 424, 426, 428, 430, 432, 445, 451, 453, 455, 457, 460, 463, 464, 465, 468, 469, 470, 471, 474, 476, 477, 478, 480, 483, 485, 486, 487, 488, 489, 494, 495, 497, 502, 503, 504, 505, 508, 510, 512, 513, 514, 515, 518, 520, 521, 524, 530, 534, 542, 543, 546, 555, 557, 558, 559, 584, 606, 609, 612, 613], "set_by_coord": [197, 198, 200, 206, 209, 210, 509, 558], "set_by_idx": [197, 198, 200, 206, 209, 210, 509, 558], "set_by_pix": [197, 198, 200, 206, 209, 210, 558], "set_label": 499, "set_lim": [218, 220], "set_log": 16, "set_model": [15, 418, 475, 480, 494, 529], "set_models_paramet": 418, "set_parameter_factor": [219, 221], "set_parameters_bound": [230, 254], "set_prior": [254, 424], "set_prop_cycl": 468, "set_representation_cl": [320, 321], "set_slice_arg": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40], "set_subcovari": 213, "set_titl": [469, 470, 474, 478, 481, 485, 497, 501, 505, 507, 508, 511, 555, 566, 570, 574], "set_unit": [472, 504, 546], "set_xlabel": [468, 469, 470, 474, 477, 497, 499, 505, 513, 514, 515], "set_xlim": [472, 474, 475, 484, 497, 548, 574], "set_xscal": [19, 20, 26, 224, 225, 228, 232, 234, 235, 236, 241, 247, 248, 251, 255, 257, 259, 260, 261, 266, 271, 273, 274, 275, 276, 279, 283], "set_xtick": [566, 570], "set_ylabel": [468, 469, 470, 474, 489, 497, 499, 501, 505, 514, 574], "set_ylim": [468, 472, 474, 475, 476, 494, 497, 548, 574], "set_yscal": [19, 20, 26, 224, 225, 228, 232, 234, 235, 236, 241, 247, 248, 251, 255, 257, 259, 260, 261, 266, 271, 273, 274, 275, 276, 279, 283, 489, 501, 548], "set_ytick": [566, 570], "setdefault": 204, "seterr": 395, "setlevel": 485, "setter": [396, 424, 443, 449, 503], "settl": 422, "setup": [13, 397, 398, 399, 402, 407, 408, 412, 416, 424, 434, 455, 459, 524, 609], "setuptool": [450, 609], "sever": [88, 92, 179, 400, 401, 402, 409, 410, 411, 414, 415, 420, 423, 425, 426, 443, 444, 445, 449, 452, 461, 462, 463, 477, 484, 502, 513, 518, 519, 520, 546, 609, 611], "seyfert": 304, "sf": [313, 611], "sgr": 532, "shade": [198, 206, 210, 505, 513, 607], "shall": 398, "shape": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 101, 103, 104, 107, 111, 112, 113, 118, 125, 126, 130, 131, 137, 144, 145, 146, 152, 154, 157, 195, 196, 197, 198, 200, 201, 203, 205, 206, 208, 209, 210, 213, 243, 294, 319, 320, 321, 334, 350, 406, 409, 413, 426, 447, 462, 465, 472, 474, 476, 478, 480, 485, 488, 489, 495, 499, 500, 502, 503, 504, 507, 508, 509, 510, 512, 513, 518, 519, 532, 544, 558, 559, 560, 566, 570], "shape_ax": [196, 208], "share": [197, 198, 200, 204, 206, 209, 210, 395, 400, 407, 410, 414, 415, 418, 426, 431, 449, 451, 463, 483, 484, 510, 511, 546, 609], "sharp": [244, 385, 386, 564], "she": [405, 410], "shear": 409, "sheet": [433, 546, 614], "shell": [52, 53, 80, 267, 268, 406, 411, 415, 419, 430, 432, 467, 512, 560, 562, 570, 572, 609], "shell2": [267, 467, 512, 560, 562, 572], "shell2d": 52, "shell2spatialmodel": [264, 268, 512, 570], "shellspatialmodel": [80, 264, 267, 419, 449, 512, 569], "sherpa": [109, 112, 154, 201, 202, 205, 206, 215, 300, 306, 394, 395, 404, 412, 413, 416, 417, 429, 430, 432, 439, 453, 454, 455, 456, 458, 465, 468, 470, 474, 475, 476, 477, 478, 480, 481, 483, 484, 485, 486, 487, 488, 489, 494, 495, 496, 497, 501, 502, 503, 505, 508, 509, 510, 511, 512, 515, 517, 518, 519, 520, 521, 529, 530, 532, 559, 582, 610], "sherpa_opt": 505, "shift": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 282, 434, 465], "shim": 402, "shini": 379, "ship": [402, 403, 412, 438, 456, 477, 492, 497, 512, 546], "shock": [50, 52, 53, 539], "short": [395, 396, 399, 400, 404, 409, 412, 416, 419, 422, 446, 495, 500, 513, 519, 546, 547, 608, 611, 614], "short_observ": [495, 499], "shortcut": [82, 434, 451], "shorten": 449, "shorter": [304, 395, 396, 409, 416, 421, 446, 477, 495, 512, 609], "shorthand": [320, 321], "should": [16, 19, 20, 26, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 83, 84, 87, 88, 91, 92, 102, 104, 106, 107, 110, 111, 112, 115, 117, 120, 126, 127, 128, 129, 133, 137, 140, 141, 142, 143, 149, 155, 156, 159, 165, 167, 170, 182, 187, 188, 193, 195, 196, 197, 198, 200, 202, 204, 205, 206, 208, 209, 210, 218, 224, 225, 226, 227, 228, 229, 230, 231, 232, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 251, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 278, 279, 280, 281, 282, 283, 284, 285, 312, 314, 319, 320, 321, 369, 384, 385, 386, 396, 398, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 415, 416, 417, 419, 421, 422, 423, 425, 426, 427, 428, 430, 432, 433, 434, 439, 441, 463, 476, 483, 486, 487, 488, 496, 497, 503, 505, 507, 508, 509, 510, 511, 512, 513, 515, 518, 520, 542, 544, 546, 551, 553, 558, 609, 610, 612, 613], "shoulder": 286, "shouldn": [83, 395], "show": [11, 82, 88, 92, 130, 131, 132, 158, 177, 245, 392, 395, 396, 398, 407, 409, 410, 414, 416, 424, 425, 428, 438, 439, 443, 451, 456, 457, 458, 463, 464, 468, 469, 470, 472, 474, 475, 476, 477, 478, 480, 481, 483, 484, 487, 488, 489, 492, 494, 495, 496, 497, 499, 500, 501, 502, 503, 504, 505, 507, 508, 509, 510, 511, 512, 513, 515, 517, 518, 519, 520, 521, 522, 524, 525, 529, 530, 531, 532, 538, 539, 540, 546, 548, 549, 550, 552, 553, 555, 557, 564, 574, 593, 607, 609, 611, 614], "show_contour_label": 513, "show_dtyp": [88, 92], "show_in_brows": [88, 92, 485], "show_in_notebook": [88, 92], "show_nam": [88, 92], "show_progress_bar": 546, "show_row_index": [88, 92], "show_unit": [88, 92], "showcas": 515, "shower": [453, 518, 551], "shown": [19, 20, 26, 83, 165, 205, 206, 224, 225, 228, 232, 234, 235, 236, 241, 247, 248, 251, 255, 257, 259, 260, 261, 266, 271, 273, 274, 275, 276, 279, 283, 390, 395, 402, 412, 413, 414, 423, 424, 427, 428, 443, 445, 470, 474, 478, 483, 485, 486, 487, 488, 495, 496, 497, 500, 508, 511, 512, 514, 515, 518, 530, 543], "showwarn": 395, "shrink": 513, "si": [83, 196, 205, 208, 230, 254, 286, 559], "side": [16, 84, 87, 91, 106, 127, 208, 210, 295, 299, 395, 396, 409], "sider": [608, 613], "sidereal_tim": 396, "siejkowski": 458, "sig": [388, 610, 611, 612], "sight": [320, 321, 534], "sigma": [19, 20, 30, 32, 48, 49, 125, 126, 127, 128, 129, 133, 134, 137, 145, 146, 154, 155, 159, 165, 166, 167, 170, 213, 215, 218, 220, 224, 227, 228, 231, 232, 234, 235, 236, 237, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 251, 258, 259, 260, 261, 262, 266, 267, 268, 269, 271, 274, 275, 276, 281, 282, 293, 295, 299, 305, 312, 314, 419, 424, 469, 478, 485, 486, 492, 494, 500, 504, 505, 510, 512, 515, 529, 544, 550, 565, 581, 598, 611], "sigma1": 31, "sigma2": 31, "sigma_": [213, 565], "sigma_1": [31, 49, 158, 507], "sigma_10tev": [419, 512], "sigma_1tev": [419, 512], "sigma_2": [31, 49, 158, 507], "sigma_3": [158, 507], "sigma_err": 486, "sigma_gauss": 243, "sigma_laplac": 243, "sigma_m": 565, "sigma_nod": 512, "sigma_to_t": 611, "sigmav": 534, "sign": [218, 220, 295, 299, 398, 422, 445, 460, 544, 611], "signal": [83, 104, 107, 110, 111, 112, 182, 210, 269, 295, 299, 316, 420, 468, 474, 475, 481, 484, 494, 510, 517, 529, 534, 549, 553, 555, 608, 610, 611, 612], "signif_avg": 532, "signific": [77, 121, 123, 125, 126, 127, 128, 129, 135, 136, 137, 139, 148, 149, 293, 295, 299, 303, 312, 314, 385, 386, 393, 400, 401, 402, 403, 410, 411, 416, 417, 420, 422, 426, 445, 446, 454, 457, 458, 463, 464, 465, 467, 468, 474, 475, 479, 482, 483, 484, 485, 486, 494, 497, 499, 500, 502, 504, 505, 520, 524, 529, 532, 544, 546, 607, 608, 609, 614], "significance_lima": 445, "significance_map": [481, 483], "significance_map_off": 481, "significance_mask": 510, "significance_mask_inv": 510, "significancemapestim": 445, "significantli": [449, 469, 487, 518, 608], "signoff": 398, "silent": [460, 465], "silvia": 441, "simeq": 53, "similar": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 88, 92, 386, 395, 398, 407, 408, 409, 410, 411, 414, 416, 417, 420, 426, 449, 463, 476, 500, 504, 509, 513, 514, 515, 532, 542, 550, 609], "similarli": [401, 403, 420, 423, 425, 449, 502, 505, 507, 509, 510, 512, 559], "simlat": 298, "simon": [462, 463, 464], "simpifi": 404, "simpl": [50, 52, 121, 145, 222, 227, 231, 240, 243, 256, 267, 268, 272, 278, 282, 286, 395, 396, 407, 408, 409, 410, 411, 414, 415, 420, 423, 424, 439, 449, 453, 457, 458, 463, 468, 470, 472, 474, 475, 476, 477, 480, 483, 497, 499, 500, 504, 505, 509, 510, 513, 514, 521, 529, 530, 532, 536, 546, 607, 608, 609], "simple_norm": 210, "simple_rebin_lc": 410, "simplefilt": 546, "simpler": [185, 403, 408, 409, 418], "simplest": [468, 474, 500], "simplex": [215, 505], "simpli": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 86, 88, 92, 174, 215, 219, 221, 395, 409, 410, 420, 430, 431, 432, 460, 463, 468, 469, 470, 485, 503, 510, 511, 512, 532, 559, 609, 611], "simplic": [484, 487, 505, 512, 513, 515, 519], "simplif": [406, 419, 460], "simplifi": [137, 204, 402, 404, 406, 413, 420, 439, 442, 443, 444, 446, 449, 453, 460, 469, 472, 478, 551, 612], "simu": [492, 496, 515], "simul": [45, 83, 89, 94, 104, 107, 110, 111, 112, 115, 156, 167, 170, 298, 351, 405, 408, 411, 416, 423, 424, 430, 437, 441, 443, 445, 451, 454, 456, 457, 458, 463, 464, 465, 467, 471, 473, 480, 483, 485, 490, 491, 493, 497, 498, 511, 515, 518, 524, 536, 551, 607], "simulate_3d": [416, 458, 467, 491, 492], "simulate_dataset": [439, 443, 444], "simulate_observ": 94, "simulated_d": 476, "simulated_data": 94, "simulated_model": 476, "simultan": [320, 321, 424, 496, 503, 512, 515, 542], "sin": [564, 565, 566, 602], "sinc": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 51, 88, 92, 198, 208, 320, 321, 369, 395, 396, 401, 405, 409, 411, 412, 413, 414, 415, 416, 420, 422, 423, 424, 426, 428, 449, 459, 460, 461, 462, 463, 464, 465, 469, 476, 481, 483, 495, 496, 499, 503, 511, 512, 515, 518, 520, 610, 613], "sine": [269, 406, 467, 560, 595, 605], "sine_model": 602, "sinetemporalmodel": [277, 512, 602], "singl": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 67, 82, 88, 89, 90, 92, 94, 96, 125, 129, 130, 133, 137, 155, 156, 167, 169, 170, 173, 177, 179, 184, 187, 188, 193, 195, 196, 197, 198, 200, 202, 205, 206, 208, 209, 210, 230, 254, 320, 321, 395, 401, 402, 405, 407, 408, 409, 410, 411, 412, 417, 418, 423, 424, 425, 430, 437, 439, 444, 445, 457, 463, 464, 468, 474, 476, 478, 480, 481, 494, 496, 502, 503, 508, 509, 511, 513, 515, 520, 521, 529, 532, 542, 544, 556, 558, 559, 606, 608], "singleobscubemak": 401, "singleobsimagemak": 401, "singleton": 345, "sinha": [407, 410, 438, 439, 440, 441, 442, 443, 444, 445, 446, 448, 449, 451, 452, 457, 458, 459, 460, 461, 462, 463, 464, 465], "sink": 412, "sinu": [269, 512], "sinusoid": [269, 602], "sipocz": [412, 439, 441, 443, 445, 454, 455, 456, 457, 458, 459], "sip\u0151cz": [460, 465], "sit": 398, "site": [358, 428, 468, 470, 474, 475, 476, 477, 478, 480, 481, 483, 484, 485, 486, 487, 488, 489, 492, 494, 495, 496, 497, 499, 501, 502, 503, 505, 508, 509, 510, 511, 512, 515, 517, 518, 519, 520, 521, 529, 530, 532, 571, 597, 609], "situat": [409, 410, 412, 551], "six": [414, 421], "size": [19, 20, 26, 46, 47, 67, 72, 80, 88, 89, 92, 104, 105, 107, 110, 111, 112, 114, 115, 116, 117, 120, 131, 137, 140, 151, 152, 154, 155, 156, 157, 158, 159, 162, 164, 165, 166, 167, 168, 170, 172, 173, 179, 180, 181, 184, 185, 186, 194, 196, 197, 198, 200, 203, 205, 206, 208, 209, 210, 213, 224, 225, 227, 228, 231, 232, 234, 235, 236, 240, 241, 243, 247, 248, 251, 255, 256, 257, 258, 259, 260, 261, 266, 267, 268, 270, 271, 272, 273, 274, 275, 276, 278, 279, 280, 281, 282, 283, 307, 320, 321, 343, 344, 348, 349, 350, 351, 383, 395, 403, 406, 408, 409, 426, 430, 432, 462, 464, 468, 476, 481, 483, 487, 495, 497, 502, 508, 509, 510, 512, 518, 519, 520, 521, 532, 542, 557, 564, 565, 613], "skeleton": 411, "sketch": 411, "skill": [398, 425, 434, 513], "skimag": 458, "skip": [16, 82, 84, 87, 91, 106, 127, 165, 383, 396, 398, 407, 409, 416, 456, 499, 511], "skip_miss": [82, 457], "sklearn": 395, "sky": [6, 13, 41, 57, 68, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 83, 89, 97, 104, 107, 110, 111, 112, 121, 145, 155, 156, 167, 170, 190, 196, 197, 198, 200, 205, 206, 208, 209, 210, 230, 254, 270, 282, 286, 288, 320, 321, 323, 327, 328, 352, 354, 356, 382, 394, 395, 396, 408, 414, 430, 439, 441, 455, 456, 458, 469, 474, 475, 477, 478, 481, 492, 496, 497, 502, 509, 512, 518, 519, 524, 527, 529, 530, 531, 532, 534, 541, 542, 543, 546, 551, 552, 555, 557, 559, 564, 565, 569, 570, 571, 607, 608], "sky_circl": [92, 97, 495, 499, 514, 530], "sky_model": [70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 117, 120, 410, 469, 494, 495, 499, 502, 511, 512, 530, 576], "sky_model_pntpwl": 487, "sky_reg": 501, "sky_reg_rec": 501, "sky_region": 90, "skycood": 406, "skycoord": [56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 83, 85, 88, 89, 92, 95, 97, 104, 107, 111, 112, 114, 115, 126, 128, 130, 132, 155, 156, 162, 167, 170, 180, 181, 183, 185, 187, 188, 190, 191, 193, 194, 196, 197, 198, 200, 203, 205, 206, 208, 209, 210, 211, 226, 227, 230, 231, 240, 243, 254, 256, 258, 267, 268, 270, 272, 278, 280, 282, 317, 318, 320, 321, 353, 354, 370, 391, 396, 406, 409, 420, 423, 426, 468, 470, 474, 476, 477, 481, 485, 486, 487, 488, 489, 492, 494, 495, 496, 497, 499, 501, 502, 503, 507, 508, 509, 510, 511, 512, 514, 517, 518, 519, 520, 530, 532, 546, 550, 555, 557, 559, 568, 614], "skycoord_from_t": 409, "skycoord_to_pixel_scale_angl": 409, "skycoordconfig": 16, "skycub": [401, 414, 455, 456, 457, 458], "skydiffusecub": [406, 419, 440, 445, 446, 458], "skydiffusemap": [406, 440], "skydir": [16, 83, 104, 107, 111, 112, 113, 118, 156, 167, 177, 195, 196, 197, 198, 200, 205, 206, 208, 209, 210, 474, 475, 476, 480, 481, 483, 485, 486, 487, 488, 492, 494, 497, 501, 503, 507, 508, 509, 510, 512, 519, 520, 529, 530, 553, 555, 556, 557, 559, 565, 566, 567, 568, 614], "skydirfunct": 534, "skydisk": 440, "skydiskelong": 406, "skyellips": [439, 440, 441, 442], "skygaussian": 439, "skygaussianelong": 406, "skyimag": [401, 414, 455, 456, 457, 458], "skyimagelist": 455, "skymap": [197, 198, 200, 206, 209, 210, 409, 454, 455, 488], "skymap_band": [488, 604], "skymap_region": 488, "skymask": 456, "skymodel": [67, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 103, 104, 107, 111, 112, 117, 120, 126, 128, 134, 137, 138, 147, 174, 215, 230, 250, 254, 288, 293, 406, 407, 408, 410, 417, 419, 420, 426, 439, 443, 444, 445, 449, 458, 464, 469, 470, 472, 474, 475, 476, 477, 478, 480, 483, 484, 485, 486, 487, 488, 492, 494, 495, 496, 497, 499, 502, 503, 504, 505, 511, 513, 515, 519, 529, 530, 541, 542, 544, 563, 564, 565, 566, 568, 569, 570, 571, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 596, 597, 598, 599, 600, 601, 602, 603, 604, 606], "skypointsourc": 442, "skyregion": [101, 104, 107, 111, 112, 130, 155, 156, 162, 167, 170, 180, 181, 185, 200, 205, 206, 210, 230, 254, 352, 355, 409, 470, 487, 489, 510, 512, 550, 555, 559], "skyspatialmodel": [406, 458], "slack": [397, 398, 402, 419, 427, 433, 435, 438, 439, 609], "slew": 96, "slice": [83, 88, 92, 101, 102, 104, 107, 111, 112, 123, 126, 128, 151, 152, 153, 154, 155, 156, 157, 158, 159, 161, 162, 164, 165, 166, 167, 168, 169, 170, 195, 196, 197, 198, 199, 200, 201, 202, 205, 206, 207, 208, 209, 210, 215, 226, 227, 231, 240, 243, 256, 258, 267, 268, 272, 278, 280, 282, 308, 401, 426, 446, 486, 489, 495, 503, 504, 518, 558], "slice_by_coord": [126, 128, 464], "slice_by_energi": [101, 104, 107, 111, 112, 126, 128, 280, 446, 503], "slice_by_idx": [104, 107, 111, 112, 126, 128, 151, 152, 153, 154, 155, 156, 157, 158, 159, 161, 162, 164, 165, 166, 167, 168, 169, 170, 195, 196, 197, 198, 200, 201, 205, 206, 208, 209, 210, 446, 458, 460, 489, 495, 504, 509, 519], "slice_by_tim": [126, 128], "sliced_ax": 201, "sliced_geom": [195, 196, 205, 208], "sliced_lc": 495, "slicesampl": 425, "slide": [404, 478, 502], "slider": 509, "sliderstyl": [483, 492, 509, 529, 530], "slightli": [121, 202, 474], "slope": [27, 440], "slow": [88, 92, 215, 402, 411, 475, 505, 529, 530], "slower": [88, 92, 198, 222, 395, 403, 413, 513], "slowest": 428, "small": [386, 395, 401, 403, 409, 411, 412, 415, 416, 418, 423, 425, 428, 438, 439, 440, 441, 442, 443, 444, 445, 446, 448, 449, 451, 452, 454, 455, 456, 457, 458, 459, 460, 463, 464, 465, 494, 495, 509, 513, 515, 518, 519, 520, 521, 565, 569, 570, 608, 609], "smaller": [27, 156, 167, 170, 185, 196, 197, 198, 200, 206, 209, 210, 388, 398, 439, 458, 487, 495, 500, 505, 509, 515, 565], "smallest": [19, 20, 26, 224, 225, 228, 232, 234, 235, 236, 241, 247, 248, 251, 255, 257, 259, 266, 271, 273, 274, 275, 276, 279, 283, 478], "smooth": [104, 107, 111, 112, 121, 131, 132, 145, 197, 198, 200, 206, 209, 210, 230, 231, 254, 271, 387, 390, 449, 454, 455, 456, 458, 459, 467, 481, 483, 485, 489, 492, 497, 503, 508, 509, 511, 513, 519, 529, 530, 532, 560, 564, 573, 594, 614], "smooth_kernel": [104, 107], "smooth_radiu": [104, 107], "smoothbrokenpowerlawspectralmodel": [224, 265, 419, 444, 445, 512, 589], "sn": [45, 50, 52, 53], "sn_rate": [45, 536], "snippet": [396, 416, 546], "snr": [44, 50, 53, 67, 519, 539, 540], "snr_model": 540, "snrcat": [453, 502], "snrtruelovemcke": [50, 539, 540], "so": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 83, 88, 92, 96, 103, 107, 112, 129, 131, 133, 134, 137, 138, 147, 150, 155, 156, 162, 167, 170, 194, 197, 198, 200, 202, 206, 209, 210, 215, 218, 220, 243, 282, 293, 320, 321, 369, 377, 385, 386, 395, 396, 398, 400, 401, 402, 403, 406, 407, 408, 409, 410, 412, 413, 414, 416, 417, 418, 419, 420, 423, 425, 427, 429, 430, 432, 434, 439, 441, 449, 459, 461, 462, 465, 470, 474, 476, 478, 480, 485, 486, 487, 492, 494, 501, 502, 504, 505, 509, 510, 512, 513, 515, 518, 519, 520, 524, 530, 546, 553, 555, 559, 566, 570, 609, 610, 611, 612], "social": 422, "soft": 304, "softwar": [197, 198, 200, 209, 210, 409, 410, 412, 415, 422, 423, 428, 431, 509], "solar": 52, "sole": [405, 422], "solid": [195, 196, 205, 208, 227, 231, 240, 243, 256, 267, 268, 272, 278, 282, 286, 411, 437, 439, 440, 441, 458, 481, 508, 509, 518, 549, 555, 608], "solid_angl": [195, 196, 205, 208, 509, 559], "solut": [19, 20, 26, 52, 138, 147, 154, 224, 225, 228, 232, 234, 235, 236, 247, 248, 251, 255, 257, 259, 260, 261, 266, 271, 273, 274, 275, 276, 279, 281, 283, 396, 398, 400, 402, 403, 408, 409, 411, 412, 413, 415, 416, 418, 420, 424, 425, 426, 431, 504, 542, 544, 546, 612], "solv": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 403, 405, 406, 407, 408, 415, 426, 451, 546], "some": [13, 16, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 72, 77, 82, 84, 87, 88, 91, 92, 106, 127, 183, 204, 319, 320, 321, 329, 398, 400, 401, 402, 403, 404, 409, 410, 411, 412, 413, 414, 415, 416, 417, 420, 421, 422, 423, 425, 426, 428, 430, 431, 432, 433, 434, 435, 437, 439, 441, 449, 450, 452, 454, 456, 457, 458, 463, 468, 470, 472, 474, 476, 478, 480, 481, 484, 485, 487, 488, 489, 492, 494, 495, 496, 497, 499, 500, 501, 502, 503, 504, 508, 509, 511, 512, 513, 515, 518, 519, 530, 532, 534, 535, 542, 543, 546, 551, 556, 558, 608, 609, 610, 611, 613], "some_class": 395, "some_map": 165, "some_map_convolv": 165, "some_unknown_fram": [320, 321], "somehow": [403, 409, 414], "someon": [320, 321, 398, 400, 416], "someth": [88, 92, 395, 396, 397, 398, 400, 403, 409, 412, 413, 416, 426, 428, 430, 432, 477, 502, 559, 609], "sometim": [19, 20, 83, 218, 224, 227, 228, 231, 232, 234, 235, 236, 237, 240, 241, 242, 243, 244, 245, 246, 247, 248, 251, 258, 259, 260, 261, 262, 266, 267, 268, 269, 271, 274, 275, 276, 281, 282, 372, 395, 398, 402, 409, 416, 428, 430, 505, 546, 608, 613], "somewhat": [412, 518], "somewher": [412, 428], "soon": [398, 409, 415, 428], "sort": [82, 83, 88, 92, 103, 145, 357, 362, 363, 395, 412, 440, 465, 532], "sort_kei": [357, 362, 363], "sortedarrai": [88, 92], "sourc": [6, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 316, 317, 318, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 395, 396, 398, 400, 403, 406, 407, 408, 409, 410, 411, 412, 413, 414, 416, 418, 419, 420, 422, 428, 430, 435, 437, 439, 443, 444, 449, 450, 455, 456, 457, 458, 463, 464, 465, 467, 469, 471, 472, 473, 475, 476, 477, 479, 480, 481, 482, 483, 484, 489, 490, 491, 492, 493, 494, 495, 497, 498, 499, 500, 501, 503, 504, 505, 506, 507, 508, 509, 511, 512, 513, 514, 516, 517, 519, 520, 521, 524, 527, 529, 530, 531, 534, 535, 540, 542, 544, 546, 551, 554, 555, 560, 563, 564, 565, 566, 567, 568, 569, 570, 571, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 596, 597, 598, 599, 600, 601, 602, 603, 604, 606, 607, 608, 610, 611], "source1": 512, "source2": 512, "source_1": [406, 411], "source_2": 406, "source_42": 411, "source_fermi_3fgl": 472, "source_fermi_3fhl": 472, "source_gammacat": 472, "source_irf_model": 406, "source_librari": 518, "source_model": 587, "source_nam": [56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 502, 532], "source_name_alia": 56, "source_name_kei": 56, "source_po": [481, 485, 508], "source_population_model": [416, 443], "source_posit": [468, 486, 514], "sourcebackground": 406, "sourcecatalog": [57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 409, 449, 502, 510, 532, 541], "sourcecatalog1lhaaso": [55, 70, 502], "sourcecatalog2fhl": [55, 71, 502, 541], "sourcecatalog2hwc": [55, 72, 502, 541], "sourcecatalog2pc": [55, 502], "sourcecatalog3fgl": [55, 74, 472, 502, 541], "sourcecatalog3fhl": [55, 75, 230, 254, 472, 502, 511, 532, 541], "sourcecatalog3hwc": [55, 76, 502, 541], "sourcecatalog3pc": [55, 502], "sourcecatalog4fgl": [55, 78, 451, 469, 502, 541], "sourcecataloggammacat": [55, 79, 472, 502, 541], "sourcecataloghgp": [55, 80, 81, 502, 541], "sourcecataloglargescalehgp": 67, "sourcecatalogobject": [70, 79, 80, 81, 502, 541], "sourcecatalogobject1lhaaso": 57, "sourcecatalogobject2fhl": 58, "sourcecatalogobject2hwc": 59, "sourcecatalogobject2pc": 60, "sourcecatalogobject3fgl": 61, "sourcecatalogobject3fhl": 62, "sourcecatalogobject3hwc": 63, "sourcecatalogobject3pc": 64, "sourcecatalogobject4fgl": 65, "sourcecatalogobjectfermibas": [71, 74, 75, 78], "sourcecatalogobjectfermipcbas": [73, 77], "sourcecatalogobjectgammacat": 66, "sourcecatalogobjecthgp": [67, 81, 438, 502], "sourcecatalogobjecthgpscompon": 67, "sourcecatalogobjecthwcbas": [72, 76], "sourceevalu": 406, "sources_flux_map": 478, "sourcetempl": 406, "south": [487, 488, 518], "south_z20_50h": [82, 152, 156, 157, 158, 167, 468, 477, 492, 496, 507, 518], "south_z40_50h": 518, "southaz": 518, "southern": 518, "space": [88, 92, 104, 107, 111, 112, 207, 210, 278, 279, 298, 312, 314, 320, 321, 332, 350, 394, 395, 405, 411, 418, 425, 497, 503, 505, 509, 513, 551, 558, 584, 593], "span": 514, "spars": [196, 197, 198, 200, 205, 208, 209, 210, 425, 440, 449, 457, 488, 509], "sparsif": 420, "sparsifi": [197, 198, 200, 209, 210], "spatail": 137, "spatial": [1, 46, 48, 67, 70, 71, 72, 74, 75, 76, 78, 79, 80, 81, 83, 104, 107, 111, 112, 114, 115, 126, 128, 137, 151, 152, 153, 154, 155, 156, 157, 158, 159, 161, 162, 164, 165, 166, 167, 168, 169, 170, 174, 179, 195, 196, 197, 198, 200, 201, 203, 205, 206, 208, 209, 210, 219, 221, 226, 227, 230, 231, 238, 240, 243, 254, 256, 258, 264, 267, 268, 270, 272, 278, 280, 282, 293, 388, 390, 395, 401, 404, 407, 408, 409, 411, 413, 414, 420, 426, 430, 438, 439, 441, 442, 443, 444, 446, 449, 457, 458, 460, 463, 464, 465, 467, 469, 472, 475, 477, 478, 480, 483, 484, 486, 487, 488, 489, 492, 495, 496, 497, 499, 502, 503, 504, 506, 508, 511, 513, 516, 519, 522, 524, 529, 534, 535, 542, 544, 546, 547, 557, 558, 572, 606, 607, 608], "spatial_bin_s": [114, 115], "spatial_bin_size_min": [114, 115], "spatial_model": [70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 117, 120, 137, 174, 231, 238, 270, 280, 293, 410, 443, 469, 478, 483, 485, 486, 487, 488, 492, 494, 495, 499, 502, 503, 511, 512, 519, 530, 563, 564, 565, 566, 567, 568, 569, 570, 571], "spatial_model_point": 487, "spatial_model_registri": 512, "spatial_par": 419, "spatial_typ": 419, "spatial_width": [114, 115], "spatial_width_max": [114, 115], "spatialbackground": 406, "spatialcircleconfig": 16, "spatialconst": 406, "spatialgaussian": 406, "spatialmodel": [70, 71, 72, 74, 75, 76, 78, 79, 80, 174, 226, 227, 231, 238, 240, 243, 256, 258, 267, 268, 270, 278, 280, 282, 406, 419, 443, 458, 462, 502, 512, 530, 534, 541, 560, 606], "spatialtempl": 406, "spatiamodel": 165, "speak": [320, 321, 505], "spec": [80, 112, 395, 409, 454, 483, 488, 502, 518, 530], "spec_model_tru": 497, "special": [88, 92, 243, 395, 405, 407, 409, 410, 419, 422, 423, 426, 438, 465, 480, 502, 503, 504, 511, 512], "specialis": [409, 416], "specif": [15, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 77, 83, 85, 86, 88, 92, 95, 104, 107, 112, 126, 128, 151, 152, 153, 154, 155, 156, 157, 158, 159, 161, 162, 164, 166, 167, 168, 169, 170, 173, 187, 188, 193, 197, 198, 199, 200, 202, 206, 207, 208, 209, 210, 215, 245, 280, 293, 320, 321, 384, 394, 395, 396, 398, 400, 405, 407, 409, 410, 411, 412, 413, 414, 415, 417, 420, 421, 422, 423, 425, 428, 430, 431, 434, 443, 446, 449, 451, 460, 461, 463, 469, 470, 471, 474, 476, 477, 481, 483, 484, 489, 492, 496, 497, 503, 505, 506, 507, 509, 510, 513, 514, 515, 521, 524, 532, 542, 543, 544, 546, 548, 549, 550, 552, 557, 558, 559, 613], "specifi": [16, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 82, 84, 87, 88, 89, 91, 92, 93, 97, 103, 104, 106, 107, 111, 112, 121, 123, 126, 127, 128, 129, 131, 133, 134, 151, 152, 153, 154, 155, 156, 157, 158, 159, 161, 162, 164, 166, 167, 168, 169, 170, 172, 183, 195, 196, 197, 198, 200, 201, 202, 204, 205, 206, 208, 209, 210, 230, 245, 254, 293, 319, 320, 321, 323, 327, 332, 382, 405, 412, 418, 421, 425, 431, 442, 445, 449, 465, 469, 476, 480, 481, 483, 486, 489, 492, 503, 504, 505, 507, 508, 509, 511, 512, 518, 530, 542, 544, 557], "spectra": [26, 111, 112, 129, 134, 150, 215, 265, 286, 293, 401, 404, 406, 408, 410, 414, 419, 425, 426, 437, 441, 454, 458, 469, 470, 476, 477, 484, 488, 494, 496, 497, 503, 504, 505, 508, 512, 513, 515, 534, 542, 544, 546, 608], "spectral": [1, 19, 20, 26, 52, 53, 66, 67, 69, 70, 71, 72, 74, 75, 76, 78, 79, 80, 103, 104, 107, 111, 112, 121, 125, 126, 128, 129, 130, 133, 136, 137, 144, 165, 167, 170, 174, 219, 221, 224, 225, 228, 230, 232, 234, 235, 236, 238, 241, 245, 247, 248, 251, 252, 254, 255, 257, 259, 260, 261, 265, 266, 270, 271, 273, 274, 275, 276, 279, 280, 281, 283, 286, 287, 304, 348, 401, 404, 406, 407, 408, 409, 410, 411, 413, 414, 417, 418, 420, 430, 438, 440, 441, 442, 443, 444, 445, 446, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 463, 464, 465, 467, 473, 477, 478, 480, 483, 486, 487, 488, 489, 492, 494, 495, 496, 497, 499, 502, 503, 504, 505, 506, 508, 510, 511, 515, 516, 517, 518, 519, 522, 529, 530, 531, 534, 535, 541, 542, 544, 545, 546, 547, 553, 554, 555, 563, 564, 565, 566, 567, 568, 569, 570, 571, 590, 591, 592, 594, 596, 597, 598, 599, 600, 601, 602, 603, 604, 606, 607, 608, 610], "spectral_analysi": [467, 473, 474], "spectral_analysis_hli": [467, 473, 475], "spectral_analysis_rad_max": [467, 473, 476], "spectral_cub": 450, "spectral_index": [19, 20, 26, 52, 224, 225, 228, 232, 234, 235, 236, 241, 247, 248, 251, 255, 257, 259, 260, 261, 266, 271, 273, 274, 275, 276, 279, 283], "spectral_index_error": [19, 20, 26, 224, 225, 228, 232, 234, 235, 236, 241, 247, 248, 251, 255, 257, 259, 260, 261, 266, 271, 273, 274, 275, 276, 279, 283, 463], "spectral_irf_model": 406, "spectral_model": [66, 67, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 103, 111, 112, 117, 120, 121, 125, 130, 134, 136, 137, 144, 165, 167, 170, 174, 215, 230, 238, 252, 254, 270, 280, 293, 395, 410, 413, 418, 419, 420, 424, 446, 465, 468, 469, 470, 472, 474, 476, 477, 478, 483, 484, 485, 486, 487, 488, 489, 492, 494, 495, 496, 497, 499, 502, 503, 504, 505, 511, 512, 513, 515, 519, 530, 532, 544, 553, 563, 564, 565, 566, 568, 569, 570, 571, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 596, 597, 598, 599, 600, 601, 602, 603, 604], "spectral_model1": 496, "spectral_model2": 496, "spectral_model_pwl": 487, "spectral_model_registri": 512, "spectral_par": 419, "spectral_point": 411, "spectral_typ": 419, "spectralbackground": 406, "spectralbackgroundmodel": 407, "spectralcompoundmodel": 406, "spectralconst": 406, "spectralevalu": 406, "spectralexponentialcutoffpowerlaw3fgl": 414, "spectralgaussian": [406, 441], "spectralmodel": [19, 20, 71, 74, 75, 78, 79, 80, 103, 121, 125, 126, 128, 130, 136, 144, 165, 167, 170, 174, 224, 225, 228, 230, 232, 234, 235, 236, 238, 241, 247, 248, 251, 254, 255, 257, 259, 260, 261, 266, 270, 271, 274, 275, 276, 279, 280, 283, 286, 406, 407, 410, 413, 420, 446, 449, 456, 463, 465, 502, 512, 530, 532, 541, 560, 606], "spectralregion": 409, "spectraltempl": 406, "spectroscopi": [465, 467, 493, 495, 498, 524, 555], "spectrum": [19, 20, 26, 72, 76, 99, 101, 103, 104, 107, 108, 111, 112, 126, 128, 133, 136, 141, 167, 170, 175, 179, 183, 184, 197, 198, 200, 209, 210, 224, 225, 228, 232, 234, 235, 236, 241, 247, 248, 251, 255, 257, 259, 260, 261, 266, 271, 273, 274, 275, 276, 279, 283, 286, 287, 298, 304, 392, 395, 401, 406, 407, 410, 411, 414, 416, 417, 426, 430, 440, 441, 442, 443, 445, 449, 451, 454, 455, 456, 457, 458, 460, 462, 465, 467, 470, 471, 472, 473, 475, 483, 484, 487, 488, 489, 496, 501, 502, 503, 510, 512, 518, 519, 524, 529, 532, 534, 542, 546, 551, 559, 575, 578, 579, 581, 582, 586, 587, 589, 590, 591, 592, 609], "spectrum_analysi": 474, "spectrum_dataset": [150, 407, 474, 497, 503], "spectrum_dataset_1": 407, "spectrum_dataset_2": 407, "spectrum_dataset_empti": [497, 508], "spectrum_dataset_mak": [497, 508], "spectrum_dataset_on_off": 497, "spectrum_fitting_with_sherpa": 416, "spectrum_mak": 468, "spectrum_simul": [416, 467, 473, 477], "spectrumanalysisiact": [411, 442, 456], "spectrumdataset": [99, 100, 101, 104, 107, 112, 133, 136, 150, 178, 179, 183, 184, 238, 417, 440, 441, 442, 443, 444, 445, 446, 449, 452, 468, 470, 474, 476, 477, 485, 495, 496, 497, 499, 505, 508, 515, 555, 610], "spectrumdatasetmak": [175, 443, 449, 468, 470, 474, 476, 477, 485, 495, 496, 497, 499, 508, 555], "spectrumdatasetonoff": [99, 107, 108, 109, 111, 134, 136, 150, 178, 179, 215, 293, 392, 410, 440, 441, 442, 444, 445, 461, 462, 463, 468, 469, 470, 474, 475, 477, 484, 485, 494, 497, 499, 503, 504, 505, 508, 513, 515, 542, 544, 610], "spectrumdatasetonoffstack": 442, "spectrumdatasetsonoff": 407, "spectrumenergygroup": 457, "spectrumevalu": 445, "spectrumextract": [410, 440, 443, 456], "spectrumfit": [440, 456, 457, 458], "spectrumobserv": [407, 440, 456], "spectrumobservationlist": [440, 455], "spectrumobservationstack": 455, "spectrumonoffdataset": 410, "spectrumresult": 440, "spectrumsimul": [441, 455, 458], "spectrumstack": 457, "spectrumstat": 441, "specutil": 409, "speed": [137, 319, 398, 425, 431, 441, 443, 451, 457, 458, 465, 505], "spell": [400, 546], "spend": [408, 416], "spent": [402, 508], "sphere": [47, 349, 437, 439, 558, 564, 565, 568], "spherepointpick": 349, "spheric": [47, 320, 321, 395, 426, 439, 558, 607], "sphericalcircleskyregion": [414, 497, 532], "sphericalcoslat": [320, 321], "sphericalcoslatdifferenti": [320, 321], "sphinx": [398, 402, 416, 426, 428, 440, 444, 451, 457, 458, 460, 464, 465, 468, 469, 470, 472, 474, 475, 476, 477, 478, 480, 481, 483, 484, 485, 486, 487, 488, 489, 492, 494, 495, 496, 497, 499, 500, 501, 502, 503, 504, 505, 507, 508, 509, 510, 511, 512, 513, 514, 515, 517, 518, 519, 520, 521, 524, 527, 529, 530, 532, 560, 563, 564, 565, 566, 567, 568, 569, 570, 571, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 596, 597, 598, 599, 600, 601, 602, 603, 604], "sphinx_gallery_conf": 428, "sphinx_gallery_thumbnail_numb": 396, "sphinxext": 396, "spill": 508, "spin": [50, 51, 54, 441, 538], "spir": [439, 458], "spiral": [22, 33, 34, 38, 45, 453], "spiralarm": [33, 38, 45, 457, 536], "spiralarm_index": [33, 34, 38], "spirit": 422, "split": [19, 20, 88, 92, 93, 117, 120, 126, 128, 197, 198, 200, 206, 209, 210, 218, 224, 227, 228, 231, 232, 234, 235, 236, 237, 240, 241, 242, 243, 244, 245, 246, 247, 248, 251, 258, 259, 260, 261, 262, 266, 267, 268, 269, 271, 274, 275, 276, 281, 282, 401, 403, 405, 407, 409, 410, 414, 417, 419, 425, 426, 430, 446, 464, 495, 512, 535, 614], "split_by_axi": [197, 198, 200, 206, 209, 210], "split_template_model": [117, 120], "sporad": 423, "spot": 395, "spread": [82, 89, 102, 158, 167, 170, 395, 418, 446, 468, 478, 507, 551, 608], "spring": [405, 459], "sprint": [403, 404, 408, 411, 412, 413, 414, 417], "spuriou": 145, "sqlalchemi": 415, "sqlite": 415, "sqrt": [19, 20, 30, 31, 32, 67, 103, 104, 107, 111, 112, 121, 125, 126, 128, 131, 137, 197, 198, 200, 202, 206, 209, 210, 213, 218, 220, 224, 227, 228, 231, 232, 234, 235, 236, 237, 240, 241, 242, 243, 244, 245, 246, 247, 248, 251, 258, 259, 260, 261, 262, 266, 267, 268, 269, 271, 274, 275, 276, 281, 282, 294, 305, 333, 334, 335, 407, 470, 474, 478, 481, 483, 489, 492, 497, 500, 502, 505, 508, 509, 511, 519, 529, 530, 532, 544, 565, 566, 569, 570, 581, 611], "sqrt_space": [414, 443], "sqrt_t": [121, 125, 126, 128, 137, 145, 150, 295, 299, 388, 420, 434, 446, 470, 474, 475, 478, 481, 483, 485, 497, 502, 503, 504, 510, 520, 529, 532, 544, 609, 611, 614], "sqrt_ts_min": [150, 474], "sqrt_ts_threshold_ul": [71, 74, 75, 78, 125, 126, 127, 128, 130, 137, 478, 489, 494, 495, 502, 503, 504, 529, 532], "squar": [17, 18, 21, 22, 24, 25, 27, 46, 104, 107, 126, 127, 154, 155, 156, 162, 167, 170, 173, 194, 208, 210, 280, 302, 410, 413, 446, 467, 506, 510, 515, 516, 521, 524, 534, 544, 558, 609, 610, 611, 612], "squash": [156, 195, 196, 199, 201, 202, 205, 207, 208, 463, 468, 481, 503, 509], "squeez": [320, 321, 468, 507], "sr": [151, 152, 153, 164, 195, 196, 205, 208, 227, 282, 286, 468, 477, 480, 483, 485, 492, 496, 502, 503, 507, 509, 512, 518, 519, 551, 563, 571], "src": [408, 469, 486, 542], "src_above_bkg": [123, 486], "src_event": [487, 488], "src_posit": [487, 488], "srcmap": [196, 197, 198, 200, 209, 210, 509], "ssc": [58, 60, 61, 62, 64, 65, 102, 255, 416, 587], "ssc_model": 255, "ssh": 398, "st": [53, 505, 519], "stabil": [19, 20, 218, 224, 227, 228, 231, 232, 234, 235, 236, 237, 240, 241, 242, 243, 244, 245, 246, 247, 248, 251, 258, 259, 260, 261, 262, 266, 267, 268, 269, 271, 274, 275, 276, 281, 282, 421, 492], "stabl": [11, 88, 92, 205, 215, 319, 320, 321, 402, 403, 404, 411, 412, 416, 421, 426, 427, 428, 429, 431, 443, 444, 445, 451, 456, 458, 460, 505, 543], "stack": [16, 83, 86, 93, 101, 103, 104, 106, 107, 111, 112, 125, 126, 128, 138, 147, 155, 156, 162, 167, 170, 173, 197, 198, 199, 200, 205, 206, 209, 210, 213, 219, 221, 280, 364, 395, 407, 410, 411, 418, 423, 426, 439, 442, 443, 446, 449, 454, 455, 460, 461, 463, 465, 469, 470, 475, 480, 484, 485, 494, 497, 503, 505, 508, 514, 515, 529, 530, 543, 544, 553, 556, 608], "stack_dataset": [173, 497, 508], "stack_reduc": [101, 150, 215, 442, 470, 474, 476, 483, 484, 485, 497, 503, 505, 544], "stacked_dataset": [485, 486], "stacked_fit": 474, "stacked_on_off": 481, "stackedobscubemak": 401, "stackedobsimagemak": 401, "stackoverflow": 361, "stage": [398, 411, 481, 483, 496, 503, 542, 608], "stai": [407, 427, 513], "stall": [415, 426], "stamp": 415, "stand": 400, "standard": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 42, 86, 88, 92, 97, 198, 210, 215, 239, 287, 298, 318, 376, 377, 395, 396, 398, 400, 404, 406, 407, 408, 411, 413, 415, 420, 422, 423, 425, 426, 434, 441, 442, 458, 464, 468, 469, 475, 477, 481, 484, 486, 488, 492, 495, 496, 499, 501, 505, 509, 512, 513, 514, 515, 518, 521, 524, 529, 531, 542, 545, 550, 551, 558, 607, 608, 609], "standard_broadcast": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40], "standard_scal": [97, 317, 514], "standardis": [366, 367, 379, 457], "standardise_unit": [366, 380], "standpoint": 395, "stapel": [464, 465], "star": [36, 40, 232], "starmap": [337, 341, 342], "start": [16, 53, 83, 86, 89, 90, 92, 93, 95, 101, 133, 145, 190, 207, 229, 230, 237, 242, 244, 245, 246, 254, 262, 269, 281, 284, 395, 396, 398, 400, 402, 403, 404, 405, 408, 409, 411, 412, 415, 421, 422, 424, 425, 426, 427, 428, 432, 433, 434, 435, 437, 442, 451, 454, 455, 456, 457, 458, 463, 465, 467, 468, 469, 470, 472, 474, 475, 476, 478, 480, 481, 483, 485, 486, 487, 488, 489, 494, 495, 496, 497, 499, 500, 501, 502, 504, 509, 512, 513, 518, 519, 520, 524, 529, 532, 533, 546, 550, 607], "start_po": [130, 354, 489], "startswith": 395, "stat": [6, 101, 103, 126, 128, 129, 130, 133, 134, 137, 215, 216, 218, 220, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 388, 395, 407, 416, 424, 425, 428, 434, 441, 443, 444, 445, 446, 449, 455, 458, 459, 460, 464, 465, 470, 472, 474, 475, 476, 478, 481, 483, 484, 485, 486, 489, 495, 497, 499, 500, 504, 505, 515, 519, 529, 530, 544, 609, 610, 611], "stat_arrai": [100, 103, 104, 107, 111, 112, 424, 465], "stat_array_dataset": [296, 297], "stat_contour": 215, "stat_kwarg": 103, "stat_max": [295, 299], "stat_nul": [126, 128, 129, 130, 133, 134, 137, 295, 299, 464, 478, 489, 495, 504, 544], "stat_per_bin": 407, "stat_profil": [215, 469, 505, 515, 546], "stat_scan": [103, 126, 128, 129, 130, 133, 134, 137, 138, 147, 215, 294, 465, 469, 474, 495, 504, 505, 515, 544], "stat_sum": [100, 101, 103, 104, 107, 111, 112, 424, 425, 462, 463, 483, 496, 503, 511, 546], "stat_sum_dataset": [296, 297], "stat_sum_no_prior": 425, "stat_surfac": [215, 446, 546], "stat_typ": [100, 103, 104, 107, 111, 112, 444, 474, 483, 496, 503, 511], "state": [16, 45, 47, 207, 215, 395, 401, 405, 407, 411, 416, 418, 420, 425, 469, 475, 513, 529, 551, 574], "stateless": 423, "statement": [395, 398, 402, 462, 464, 535], "static": [17, 21, 22, 24, 25, 27, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 102, 105, 108, 109, 110, 121, 125, 126, 128, 129, 130, 133, 134, 137, 158, 166, 177, 183, 184, 196, 197, 198, 200, 206, 207, 209, 210, 224, 226, 227, 228, 229, 231, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 251, 252, 259, 260, 261, 262, 267, 268, 269, 271, 274, 275, 276, 281, 283, 284, 285, 392, 403, 406, 428, 440, 457], "staticmethod": [406, 419, 424, 425, 512, 515], "stationari": [425, 513], "statist": [6, 19, 20, 26, 79, 100, 101, 103, 104, 107, 111, 112, 125, 126, 128, 129, 130, 133, 134, 137, 146, 150, 177, 215, 217, 224, 225, 228, 232, 234, 235, 236, 241, 247, 248, 251, 255, 257, 259, 266, 271, 273, 274, 275, 276, 279, 283, 293, 294, 295, 296, 297, 299, 300, 301, 306, 312, 314, 315, 316, 407, 410, 413, 414, 416, 418, 424, 440, 444, 445, 446, 449, 451, 463, 464, 468, 469, 475, 477, 478, 480, 481, 483, 485, 489, 492, 494, 496, 497, 500, 503, 505, 508, 515, 529, 530, 542, 544, 546, 551, 553, 556, 607, 608], "statu": [19, 20, 26, 126, 128, 214, 216, 217, 219, 221, 224, 225, 226, 227, 228, 229, 230, 231, 232, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 251, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 278, 279, 280, 281, 282, 283, 284, 285, 395, 398, 399, 401, 402, 403, 404, 406, 407, 408, 409, 410, 411, 412, 413, 416, 417, 418, 419, 420, 422, 423, 424, 425, 426, 459, 464, 511, 512, 513], "std": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 298, 318, 477, 500, 519], "stddev": 68, "stderr": 395, "stdev": [425, 513], "stdout": [329, 395], "steadi": 469, "steep": 477, "stefan": [453, 464, 465], "step": [19, 20, 26, 125, 129, 133, 134, 137, 215, 216, 222, 224, 225, 226, 227, 228, 229, 231, 232, 234, 235, 236, 237, 240, 241, 242, 243, 244, 245, 246, 247, 248, 251, 255, 256, 257, 258, 259, 260, 261, 262, 266, 267, 268, 269, 271, 272, 273, 274, 275, 276, 278, 279, 281, 282, 283, 284, 395, 398, 401, 402, 405, 406, 407, 409, 410, 411, 413, 415, 417, 421, 424, 425, 426, 427, 428, 434, 451, 458, 459, 463, 468, 474, 476, 480, 483, 485, 486, 487, 488, 495, 496, 503, 504, 505, 508, 512, 513, 515, 529, 530, 532, 546, 554, 559], "step_sampl": 222, "stepprior": 424, "stepsampl": 425, "stepsiz": 172, "steradian": 205, "stewart": [137, 308, 478, 608], "stewart2009": [608, 611], "stick": [419, 439, 458, 505, 608], "still": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 402, 403, 405, 408, 409, 412, 414, 416, 417, 420, 421, 423, 425, 427, 428, 456, 457, 458, 512, 515, 532, 544, 569, 570, 609], "stipul": 422, "stone": [395, 416], "stop": [16, 52, 83, 86, 89, 90, 92, 93, 101, 133, 135, 137, 207, 229, 230, 237, 242, 244, 245, 246, 254, 262, 269, 281, 284, 405, 434, 463, 475, 480, 481, 483, 495, 497, 499, 505, 513, 519, 529], "storag": [82, 415, 546], "store": [11, 15, 16, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 56, 69, 77, 82, 83, 84, 85, 86, 87, 88, 91, 92, 106, 126, 127, 128, 131, 133, 165, 178, 179, 197, 198, 200, 206, 209, 210, 215, 216, 218, 220, 222, 230, 254, 320, 321, 377, 395, 396, 398, 401, 403, 404, 405, 407, 408, 411, 413, 415, 418, 420, 422, 423, 426, 428, 446, 449, 450, 465, 470, 476, 477, 487, 488, 497, 499, 500, 503, 504, 505, 507, 508, 509, 510, 513, 514, 518, 519, 520, 521, 532, 542, 543, 546, 551, 552, 553, 558, 559, 584, 606, 607, 609, 613], "store_per_ob": 411, "store_trac": [215, 505], "str": [15, 16, 19, 20, 26, 50, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 77, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 94, 95, 100, 101, 102, 103, 104, 106, 107, 108, 109, 110, 111, 112, 114, 115, 119, 123, 125, 126, 127, 128, 129, 131, 133, 134, 137, 138, 140, 141, 142, 143, 147, 149, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 164, 166, 167, 168, 169, 170, 171, 174, 177, 178, 183, 184, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 216, 218, 219, 220, 221, 222, 224, 225, 226, 227, 228, 229, 230, 231, 232, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 251, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 278, 279, 280, 281, 282, 283, 284, 285, 288, 319, 320, 321, 333, 342, 357, 358, 359, 363, 376, 377, 379, 384, 388, 389, 391, 409, 423, 474, 476, 499, 508, 512], "str3": [88, 92], "straight": [396, 415], "straightforward": [428, 612], "strang": 395, "strategi": [293, 395, 402, 409, 415, 463, 505, 513, 612], "stream": [395, 415], "streil": [424, 462, 463, 464], "strength": [51, 54, 424, 513, 584], "stretch": [197, 198, 200, 206, 209, 210, 385, 386, 390, 478, 483, 489, 492, 508, 509, 511, 519, 529, 530, 532, 614], "strict": [16, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 84, 87, 91, 104, 106, 107, 127, 155, 156, 162, 167, 170, 173, 202, 208, 210, 280, 465], "strict_bound": 202, "strictli": [16, 84, 87, 91, 106, 127, 202, 415], "strike": 542, "string": [15, 16, 26, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 56, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 87, 88, 91, 92, 94, 106, 126, 127, 128, 129, 130, 133, 137, 158, 164, 166, 168, 173, 196, 197, 198, 200, 202, 203, 205, 206, 208, 209, 210, 218, 220, 230, 254, 319, 320, 321, 339, 384, 395, 408, 409, 412, 414, 422, 423, 437, 441, 449, 451, 475, 502, 510, 512, 513, 529, 558, 559], "strip": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40], "strip_units_from_tre": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40], "strong": [52, 408, 416, 474], "stronger": 515, "strongli": [304, 410, 412, 422, 449, 480, 505, 515, 524], "structlog": 415, "structur": [17, 88, 92, 208, 313, 399, 400, 401, 404, 406, 408, 411, 415, 416, 419, 422, 423, 426, 430, 432, 436, 442, 443, 445, 449, 452, 464, 465, 467, 489, 503, 504, 508, 509, 510, 512, 524, 531, 533, 534, 541, 543, 558, 559, 609], "stuck": [415, 609], "student": 398, "studi": [46, 148, 286, 313, 408, 411, 415, 420, 426, 431, 458, 465, 470, 472, 484, 485, 486, 489, 492, 495, 496, 499, 505, 509, 512, 518, 536, 546, 551, 555, 610], "stuff": [396, 428, 546], "stuff1": 395, "stuff2": 395, "style": [88, 92, 103, 197, 198, 200, 206, 209, 210, 392, 398, 404, 422, 453, 455, 483, 492, 507, 509, 529, 530, 546, 559, 614], "sub": [11, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 104, 107, 111, 112, 117, 120, 151, 152, 153, 154, 155, 156, 157, 158, 159, 161, 162, 164, 166, 167, 168, 169, 170, 190, 197, 198, 199, 200, 202, 206, 207, 209, 210, 213, 395, 398, 402, 404, 405, 409, 414, 416, 417, 418, 423, 428, 437, 439, 443, 445, 446, 454, 456, 457, 485, 487, 504, 508, 510, 512, 520, 521, 542, 545, 546, 554, 607, 609, 613], "subact": 415, "subcategori": 425, "subclass": [16, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 84, 87, 88, 91, 92, 106, 127, 319, 320, 321, 409, 415, 455, 458, 512, 515], "subcompon": [67, 80], "subdirectori": 222, "subfold": [222, 403, 449], "subject": 551, "submit": [400, 422], "submodel": 426, "submodul": [403, 439, 440, 445, 509, 532, 544], "subok": 319, "subpackag": [417, 423, 426, 442, 449, 453], "subpart": 426, "subplot": [66, 67, 197, 198, 200, 206, 209, 210, 468, 470, 472, 474, 475, 476, 477, 478, 481, 483, 484, 485, 489, 494, 496, 497, 499, 501, 504, 505, 507, 509, 510, 511, 513, 514, 515, 530, 546, 548, 555, 566, 570, 574], "subplot_kw": [478, 481, 485, 497, 510, 555], "subplots_adjust": [495, 500, 501, 502], "subsect": [416, 509], "subsequ": [303, 404], "subset": [82, 83, 88, 92, 129, 133, 137, 255, 423, 453, 454, 485, 497, 511, 518, 520, 545, 607], "subspac": 409, "substanti": [88, 92], "substitut": 610, "substr": [230, 254], "subtract": 476, "succe": 223, "succeed": 126, "success": [16, 84, 87, 91, 103, 106, 126, 127, 128, 129, 130, 133, 134, 137, 214, 215, 216, 217, 223, 424, 425, 427, 449, 470, 472, 474, 475, 476, 478, 483, 484, 485, 489, 494, 495, 497, 499, 504, 505, 511, 513, 519, 529, 530, 571], "successfulli": [103, 415, 427, 470, 472, 474, 475, 476, 483, 484, 485, 496, 497, 499, 504, 505, 519, 529, 530], "sudo": 431, "suffer": [412, 497], "suffic": 496, "suffici": [398, 401, 408, 422, 463], "suffix": [103, 126, 396, 406, 419, 512, 558, 560], "suggest": [398, 400, 402, 405, 409, 416, 418, 420, 424, 478, 487, 488, 546, 609], "suit": [198, 395, 559], "suitabl": 198, "sum": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 86, 104, 107, 111, 112, 128, 129, 130, 132, 133, 134, 137, 138, 139, 147, 148, 151, 152, 153, 154, 155, 157, 158, 159, 161, 164, 165, 166, 167, 168, 169, 170, 197, 198, 200, 206, 209, 210, 229, 237, 242, 244, 245, 246, 262, 269, 281, 284, 286, 295, 296, 297, 299, 301, 391, 395, 405, 406, 408, 418, 420, 424, 440, 464, 478, 483, 487, 497, 501, 503, 515, 519, 529, 530, 532, 542, 552, 608, 610], "sum_": 542, "sum_band": [197, 198], "sum_i": 131, "sum_j": 542, "sum_k": 542, "sum_of_implicit_term": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40], "sum_over_ax": [197, 198, 200, 206, 209, 210, 230, 254, 383, 458, 481, 483, 489, 497, 503, 508, 510, 511, 519, 530], "sum_over_energy_group": [125, 129, 137, 478, 485, 489], "summar": [404, 534], "summari": [15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 50, 51, 52, 53, 54, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 121, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 164, 165, 166, 167, 168, 169, 170, 172, 173, 174, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 278, 279, 280, 281, 282, 283, 284, 285, 295, 296, 297, 299, 320, 321, 329, 333, 343, 368, 382, 396, 416, 436, 470, 475, 495, 496, 503, 518, 529, 546], "summaris": [395, 400, 402, 416], "summat": [295, 299, 401], "summer": 403, "sun": 41, "sunpi": [412, 416, 417], "super": [196, 198, 274, 275, 276, 467, 476, 487, 521, 560, 573, 594, 597], "superexpcutoffpowerlaw3fglspectralmodel": [265, 419, 512, 590], "superexpcutoffpowerlaw4fgldr3spectralmodel": [77, 265, 512, 591], "superexpcutoffpowerlaw4fglspectralmodel": [265, 419, 512, 592], "superflu": [405, 497], "supernova": [28, 52, 470, 486, 512, 536, 537], "superpixel": 196, "supersed": [196, 197, 198, 208, 209, 210], "supervisor": 411, "suppli": [19, 20, 26, 88, 92, 224, 225, 228, 232, 234, 235, 236, 241, 247, 248, 251, 255, 257, 259, 260, 261, 266, 271, 273, 274, 275, 276, 279, 283, 469, 495, 496], "support": [83, 85, 86, 88, 89, 90, 92, 93, 96, 101, 102, 104, 107, 111, 112, 116, 128, 149, 160, 165, 196, 197, 198, 199, 200, 202, 207, 208, 209, 210, 215, 230, 254, 394, 399, 400, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 418, 419, 420, 423, 425, 431, 435, 438, 439, 441, 442, 443, 444, 445, 446, 449, 451, 454, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 468, 475, 477, 480, 483, 485, 492, 496, 501, 502, 503, 509, 515, 518, 519, 520, 521, 529, 545, 551, 558, 559, 604, 606, 607, 609], "suppos": [245, 281, 400, 407, 608, 610], "suppress": [154, 155, 159, 546], "sure": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 222, 395, 398, 400, 411, 427, 474, 494, 509, 546, 609], "surfac": [28, 30, 35, 36, 39, 40, 45, 215, 270, 286, 347, 414, 446, 505, 512, 536], "surface_brightness_err": 502, "surprisingli": 409, "surround": [52, 339, 395], "survei": [35, 67, 129, 232, 402, 405, 416, 434, 467, 518, 524, 525, 526, 536, 541, 546, 608], "survey_map": [467, 526, 527], "suspect": 611, "suss": [404, 422], "svg": [395, 415], "swap": 196, "swapax": [320, 321], "swept": 52, "swgo": 608, "swh": 422, "swhid": 422, "switch": [105, 110, 293, 395, 398, 402, 405, 427, 451, 455], "switcher": 427, "sy": [395, 433], "syllabl": 546, "symbol": 510, "symmetr": [104, 107, 111, 112, 125, 134, 137, 185, 194, 198, 240, 297, 395, 406, 439, 451, 454, 472, 496, 508, 515, 518, 534, 544, 552, 564, 565, 611], "symmetri": [198, 439], "sync": 458, "sync_constraint": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40], "synchronis": 422, "synchrotron": [255, 445, 584], "syntact": [88, 92], "syntax": [16, 88, 92, 396, 411, 414, 415, 443, 460, 609], "synthesi": [536, 537], "synthet": 437, "system": [11, 21, 83, 88, 92, 114, 115, 152, 160, 161, 164, 168, 196, 197, 198, 200, 203, 205, 208, 209, 210, 230, 254, 320, 321, 395, 401, 406, 408, 412, 416, 417, 421, 422, 424, 426, 431, 434, 439, 457, 463, 468, 470, 474, 475, 476, 477, 478, 480, 481, 483, 484, 485, 486, 487, 488, 489, 494, 495, 496, 497, 501, 502, 503, 505, 507, 508, 509, 510, 511, 512, 515, 517, 518, 519, 520, 521, 529, 530, 532, 557, 558, 607, 609, 613], "systemat": [406, 420, 422, 423, 446, 474, 494, 508, 544, 608, 610], "t": [16, 26, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 50, 51, 52, 53, 67, 69, 83, 84, 86, 87, 88, 89, 91, 92, 106, 121, 122, 123, 125, 126, 127, 128, 129, 130, 133, 134, 135, 137, 138, 139, 147, 148, 149, 154, 194, 207, 230, 245, 249, 254, 293, 295, 298, 299, 312, 314, 317, 320, 321, 366, 370, 394, 395, 396, 398, 400, 402, 403, 405, 407, 409, 411, 412, 413, 414, 416, 419, 420, 421, 423, 425, 426, 428, 429, 430, 432, 434, 446, 450, 453, 454, 455, 458, 463, 465, 468, 469, 470, 474, 480, 483, 485, 486, 489, 492, 494, 495, 497, 499, 500, 501, 502, 504, 505, 508, 509, 510, 512, 513, 514, 515, 518, 519, 534, 538, 539, 540, 542, 544, 546, 555, 596, 597, 598, 599, 600, 601, 602, 607, 608, 609, 612, 613], "t0": [237, 262, 487, 495, 496, 499, 597, 601], "t1": [88, 92], "t2": [88, 92], "t_": [52, 53, 303, 551, 597, 598, 599, 600, 601, 602, 610], "t_0": 601, "t_b": 610, "t_decai": [244, 599], "t_delta": [105, 110, 207, 229, 237, 242, 244, 245, 246, 262, 269, 281, 284], "t_i": 303, "t_j": 542, "t_live": [83, 89], "t_max": [229, 237, 242, 244, 245, 246, 262, 269, 281, 284, 408, 420, 499], "t_min": [229, 237, 242, 244, 245, 246, 262, 269, 281, 284, 408, 420, 499], "t_observ": [83, 89], "t_r": 245, "t_ref": [237, 242, 244, 245, 246, 262, 269, 281, 462, 463, 487, 488, 496, 512, 597, 598, 599, 600, 601, 602, 603, 604], "t_rise": [244, 599], "t_start": [86, 543], "t_stop": [52, 86, 543], "ta": 298, "ta2": 298, "ta3": 298, "tab": [154, 396, 400, 483, 489, 494, 504, 515, 555], "tabl": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 503, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614], "table_arrai": [88, 92], "table_associ": 67, "table_bkg_src": 486, "table_class": [88, 92], "table_compon": [67, 502], "table_filenam": 26, "table_format": 128, "table_from_row_data": 463, "table_hdu": 86, "table_identif": 67, "table_large_scale_compon": [67, 502], "table_model": [283, 419], "table_oth": 364, "tableau": 546, "tableclass": [88, 92], "tablegroup": [88, 92], "tableid": [88, 92], "tableiloc": [88, 92], "tableindic": [88, 92], "tableloc": [88, 92], "tablelocindic": [88, 92], "tablemodel": [406, 459], "tablepsf": [417, 437, 439], "tablepsfcheck": 455, "tabul": 534, "tabular": [512, 593], "tackl": [404, 426], "tag": [19, 20, 26, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 84, 87, 88, 91, 92, 100, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 121, 123, 124, 125, 126, 127, 129, 130, 132, 133, 134, 135, 136, 137, 151, 152, 153, 154, 155, 156, 157, 158, 159, 161, 162, 164, 166, 167, 168, 169, 170, 172, 173, 174, 176, 177, 178, 179, 182, 183, 184, 197, 198, 200, 206, 209, 210, 224, 225, 226, 227, 228, 229, 230, 231, 232, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 252, 254, 255, 256, 257, 258, 259, 260, 261, 262, 266, 267, 268, 269, 270, 271, 274, 275, 276, 278, 279, 280, 281, 282, 283, 285, 421, 424, 427, 446, 460, 507, 512, 515, 566, 570], "tail": [513, 518, 609], "tak69mpx": 499, "take": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 88, 92, 104, 107, 111, 112, 125, 152, 172, 174, 206, 208, 213, 215, 220, 222, 230, 239, 249, 254, 270, 285, 320, 321, 369, 393, 395, 400, 401, 404, 405, 406, 407, 408, 409, 410, 411, 414, 415, 416, 417, 420, 425, 426, 428, 444, 445, 446, 449, 451, 459, 460, 462, 463, 464, 468, 470, 474, 476, 477, 487, 488, 489, 496, 497, 499, 504, 505, 508, 509, 510, 512, 514, 515, 518, 530, 532, 543, 546, 559, 577, 610, 611, 612], "taken": [15, 88, 92, 104, 107, 111, 112, 126, 128, 157, 165, 184, 190, 192, 206, 207, 210, 215, 306, 396, 400, 404, 408, 462, 469, 474, 483, 484, 497, 499, 504, 507, 510, 511, 517, 518, 532, 542, 544, 555, 556, 611], "talk": [398, 400, 402, 412, 422], "tan": [198, 205, 409, 441, 474, 509, 519, 555], "tandem": 534, "tangent": [180, 227, 231, 240, 243, 256, 267, 268, 272, 278, 282], "tangenti": [196, 559], "tar": [428, 518], "target": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 89, 91, 104, 107, 111, 112, 116, 121, 125, 127, 135, 137, 155, 156, 167, 170, 187, 188, 192, 193, 197, 198, 200, 202, 206, 209, 210, 222, 396, 401, 402, 408, 422, 425, 427, 455, 470, 476, 485, 495, 508, 510, 513, 530], "target_nam": 555, "target_posit": [180, 470, 474, 476, 485, 494, 495, 499, 530], "target_radec": 89, "targetmetadata": [91, 127], "task": [342, 416, 420, 422, 423, 427, 428, 459, 475, 478, 508, 509, 519, 524, 525, 529, 546, 554, 607, 609, 613], "task_nam": 342, "tast": 609, "tau": [26, 51, 54, 140, 307, 424, 501, 574], "tau_0": 51, "taul": [26, 501], "taur": [26, 501], "taylor": [52, 53], "tb00058": 139, "tbc": 425, "tbd": 249, "tbl": [88, 92], "tbw": 499, "tdelta_precis": 313, "team": [400, 404, 412, 416, 418, 422, 436, 457], "technic": [397, 398, 400, 408, 415, 416, 418, 420, 422, 425, 428, 480], "techniqu": [401, 410, 411, 413, 425, 470, 474, 483, 486, 505, 508, 510, 513, 520, 553, 556, 607, 608], "tediou": 502, "tel": [88, 92], "telescop": [82, 83, 85, 92, 96, 106, 157, 320, 408, 409, 423, 430, 434, 435, 487, 494, 497, 514, 518, 519, 521], "tell": 476, "temp": [453, 488], "temperatur": [52, 53], "templat": [16, 26, 57, 70, 84, 87, 91, 106, 107, 112, 117, 120, 127, 174, 182, 196, 197, 198, 200, 201, 202, 208, 209, 210, 216, 230, 245, 254, 278, 279, 280, 281, 282, 283, 290, 292, 308, 311, 400, 406, 407, 411, 419, 446, 460, 463, 464, 467, 477, 478, 481, 488, 509, 510, 511, 512, 534, 555, 560, 562, 572, 573, 580, 583, 588, 594, 603], "template_diffus": [511, 519], "template_extrapol": 593, "template_model": 487, "template_noextrapol": 593, "templatelightcurvetemporalmodel": 460, "templatend": [278, 279, 512], "templatendspatialmodel": [264, 512], "templatendspectralmodel": [26, 265, 451, 462, 512], "templatenpredmodel": [250, 449], "templatephasecurvetemporalmodel": [277, 460, 465, 512, 603], "templatespatialmodel": [67, 264, 418, 419, 446, 460, 461, 463, 464, 465, 487, 511, 512, 519, 571], "templatespectralmodel": [230, 254, 265, 288, 419, 512, 519, 542, 580, 583, 588, 593], "templatetemporalmodel": 460, "tempo2": [497, 546], "tempor": [219, 221, 229, 230, 237, 242, 244, 245, 246, 254, 262, 269, 270, 277, 281, 284, 303, 406, 408, 419, 420, 426, 442, 444, 445, 446, 451, 460, 462, 463, 464, 465, 467, 469, 472, 475, 477, 478, 483, 484, 485, 487, 490, 491, 492, 499, 500, 502, 503, 504, 511, 513, 519, 522, 524, 529, 546, 547, 605, 606, 608], "temporal_model": [270, 408, 487, 488, 496, 512, 596, 597, 598, 599, 600, 601, 602, 603, 604], "temporal_model1": 496, "temporal_model2": 496, "temporal_model_map": 488, "temporal_model_registri": 512, "temporal_typ": 419, "temporalbackground": 406, "temporalmodel": [229, 237, 242, 244, 245, 246, 262, 269, 270, 281, 406, 420, 445, 460, 462, 463, 465, 560], "temporari": 524, "temporarili": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 406], "ten": [401, 416], "tend": [395, 566], "tension": 500, "tensorflow": [413, 416], "tent": 427, "term": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 246, 249, 309, 316, 320, 321, 398, 400, 402, 404, 405, 409, 412, 416, 421, 423, 425, 426, 447, 451, 460, 469, 478, 505, 507, 609, 611, 612], "termin": [88, 92, 103, 398, 411, 429, 430, 431, 432, 433, 470, 472, 474, 475, 476, 483, 484, 485, 497, 499, 504, 505, 519, 529, 530, 609], "terrier": [401, 404, 405, 406, 407, 409, 410, 411, 412, 414, 417, 418, 419, 420, 421, 423, 425, 426, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 451, 452, 453, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465], "test": [16, 36, 37, 84, 87, 91, 95, 102, 103, 106, 117, 120, 123, 125, 126, 127, 128, 129, 130, 133, 134, 135, 137, 146, 148, 165, 167, 170, 197, 198, 200, 206, 209, 210, 245, 293, 294, 295, 299, 302, 312, 314, 351, 368, 369, 370, 371, 372, 373, 374, 396, 401, 402, 403, 404, 405, 407, 408, 409, 410, 411, 412, 413, 421, 424, 426, 427, 428, 438, 440, 441, 443, 445, 449, 450, 451, 454, 455, 456, 457, 458, 459, 460, 463, 465, 470, 477, 478, 488, 492, 494, 495, 496, 499, 503, 504, 507, 513, 544, 546, 550, 551, 556, 603, 604, 608, 611, 614], "test2": 496, "test_aeff3d": 507, "test_edisp": 507, "test_events_with_gti": 543, "test_gti": 543, "test_person_txt": 395, "test_plot": 395, "test_psf": 507, "test_someth": 395, "test_using_data_fil": 373, "test_using_scipi": 374, "testcod": 396, "testoutput": 396, "testpar": 424, "teststatisticnest": [463, 465], "tev": [16, 19, 20, 26, 44, 52, 53, 66, 67, 71, 75, 83, 97, 103, 104, 107, 111, 112, 113, 118, 121, 126, 128, 129, 145, 146, 151, 152, 154, 156, 157, 158, 159, 164, 165, 166, 167, 168, 170, 177, 195, 196, 197, 198, 200, 201, 205, 206, 208, 209, 210, 224, 225, 228, 232, 234, 235, 236, 241, 247, 248, 251, 255, 257, 259, 260, 261, 266, 270, 271, 273, 274, 275, 276, 279, 283, 286, 287, 317, 318, 341, 390, 396, 406, 419, 420, 423, 424, 434, 468, 469, 470, 472, 474, 475, 476, 477, 478, 480, 481, 483, 484, 485, 486, 487, 488, 489, 492, 494, 495, 496, 497, 499, 500, 501, 502, 503, 504, 505, 507, 508, 509, 510, 512, 513, 514, 515, 517, 518, 519, 520, 521, 529, 530, 532, 540, 543, 544, 550, 551, 553, 555, 556, 559, 563, 564, 565, 566, 567, 568, 569, 570, 571, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 596, 597, 598, 599, 600, 601, 602, 603, 604, 607], "tevcat": [450, 502], "tevcat_nam": 71, "tevpi": 437, "tevtevtev1": 485, "tex": 396, "texliv": 396, "text": [17, 18, 21, 22, 23, 24, 25, 27, 50, 51, 52, 53, 54, 107, 112, 126, 128, 137, 267, 268, 318, 357, 363, 384, 396, 403, 411, 415, 422, 428, 475, 497, 507, 518, 529, 532, 564, 565, 566, 569, 570, 575, 591, 599, 609, 611], "textcolor": 384, "textkw": 384, "th": 202, "than": [27, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 77, 88, 92, 136, 155, 156, 158, 159, 162, 166, 167, 168, 170, 174, 195, 196, 197, 198, 200, 201, 202, 205, 206, 208, 209, 210, 293, 304, 320, 321, 372, 388, 395, 396, 398, 400, 401, 402, 405, 408, 409, 410, 413, 414, 415, 420, 422, 423, 425, 428, 457, 460, 461, 462, 464, 468, 470, 483, 484, 487, 494, 495, 500, 505, 508, 510, 513, 514, 515, 542, 559, 565, 566, 609, 611], "thank": [420, 443, 444, 449, 451, 465, 508, 546], "thaw": 511, "thei": [16, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 84, 87, 88, 91, 92, 96, 106, 110, 114, 115, 127, 133, 141, 171, 281, 303, 320, 321, 341, 395, 396, 398, 400, 401, 402, 403, 404, 406, 409, 411, 412, 414, 415, 416, 419, 420, 421, 422, 423, 424, 425, 427, 428, 435, 446, 449, 451, 463, 464, 470, 472, 476, 501, 503, 505, 510, 511, 512, 513, 514, 515, 518, 521, 534, 543, 544, 546, 551, 558, 559, 607, 608, 609, 610, 611, 613], "them": [11, 15, 16, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 83, 84, 87, 88, 91, 92, 101, 106, 127, 129, 219, 221, 230, 254, 319, 395, 396, 398, 400, 402, 403, 409, 411, 414, 422, 423, 425, 427, 428, 434, 441, 457, 470, 472, 474, 477, 480, 483, 484, 486, 488, 494, 502, 503, 504, 505, 509, 510, 512, 513, 515, 518, 520, 524, 530, 543, 546, 555, 609, 611], "theme": [426, 451, 458, 465], "themselv": [88, 92, 411, 508, 510, 553], "theorem": [293, 312, 314, 544, 611], "theoret": 515, "theori": 426, "therefor": [107, 396, 401, 405, 408, 409, 410, 414, 417, 419, 425, 431, 449, 465, 470, 494, 497, 505, 509, 510, 513, 514, 515, 520, 532, 544, 611, 612], "thereof": 406, "thermal": [19, 584, 608], "thermal_relic_cross_sect": 19, "theta": [33, 34, 38, 52, 53, 158, 164, 166, 168, 172, 180, 194, 203, 322, 325, 395, 446, 467, 476, 506, 516, 519, 521, 524, 532, 564, 565, 569, 570], "theta2": [184, 194, 393, 457], "theta2_axi": 517, "theta2_max": 393, "theta2_min": 393, "theta2_t": 517, "theta2_table_en": 517, "theta_0": [33, 38], "theta_square_plot": [467, 516, 517], "theta_squared_axi": [194, 517], "thew": 502, "thi": [6, 15, 16, 19, 20, 26, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 46, 47, 56, 67, 68, 69, 82, 83, 84, 85, 86, 87, 88, 89, 91, 92, 101, 104, 105, 106, 107, 110, 111, 112, 116, 121, 125, 126, 127, 128, 129, 130, 132, 133, 136, 137, 138, 141, 145, 147, 148, 151, 152, 153, 154, 155, 156, 157, 158, 159, 161, 162, 164, 165, 166, 167, 168, 169, 170, 172, 174, 177, 179, 180, 181, 183, 185, 187, 188, 191, 193, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 215, 218, 222, 224, 225, 227, 228, 231, 232, 234, 235, 236, 237, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 251, 255, 256, 257, 258, 259, 260, 261, 262, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 278, 279, 281, 282, 283, 286, 293, 295, 299, 305, 312, 314, 319, 320, 321, 329, 339, 342, 345, 350, 351, 369, 372, 379, 382, 384, 385, 386, 390, 392, 394, 395, 396, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 434, 436, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 451, 452, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 468, 469, 470, 472, 474, 475, 476, 477, 478, 480, 481, 483, 484, 485, 486, 487, 488, 489, 492, 494, 495, 496, 497, 499, 500, 501, 502, 503, 504, 505, 507, 508, 509, 510, 511, 512, 513, 514, 515, 517, 518, 519, 520, 521, 522, 524, 527, 529, 530, 532, 534, 535, 542, 543, 544, 546, 548, 549, 550, 551, 552, 553, 555, 556, 557, 558, 559, 563, 564, 565, 566, 567, 568, 569, 570, 571, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 596, 597, 598, 599, 600, 601, 602, 603, 604, 606, 607, 608, 609, 610, 611, 612, 613], "thick": 392, "thin": [56, 333], "thing": [395, 398, 400, 403, 409, 410, 411, 412, 416, 420, 428, 437, 456, 476, 480, 496, 497, 510, 519], "think": [400, 412, 413, 415, 416], "third": [62, 63, 88, 92, 396, 449, 502, 505, 509, 524, 531, 532, 541], "thoma": [422, 457], "thorough": [509, 534], "those": [15, 83, 183, 197, 198, 200, 206, 209, 210, 215, 219, 221, 230, 254, 329, 384, 395, 398, 400, 402, 404, 409, 411, 414, 415, 416, 417, 418, 419, 421, 426, 428, 429, 430, 432, 433, 443, 446, 494, 499, 505, 509, 510, 511, 514, 524, 525, 532, 544, 546, 555, 613], "though": [15, 398, 403, 409, 410, 411, 413, 415, 416, 475, 512, 529], "thought": [400, 409], "three": [88, 92, 165, 298, 320, 321, 395, 404, 407, 409, 422, 427, 465, 485, 487, 494, 500, 509, 513, 515, 524, 531, 551, 558, 608], "threshold": [67, 104, 111, 121, 126, 127, 128, 135, 137, 145, 146, 154, 155, 159, 172, 183, 207, 293, 384, 385, 386, 409, 439, 445, 446, 468, 474, 476, 478, 485, 489, 494, 502, 503, 505, 508, 510, 518, 529, 542, 544], "threshold_alpha": 172, "through": [41, 83, 88, 92, 318, 319, 392, 396, 398, 400, 408, 409, 415, 416, 420, 421, 425, 431, 435, 449, 460, 469, 474, 478, 488, 500, 505, 508, 509, 510, 511, 513, 519, 520, 546, 551, 558, 608, 611], "throughout": [13, 402, 404, 405, 409, 411, 456, 502, 513], "throught": 489, "thrown": 512, "thu": [395, 402, 409, 412, 413, 416, 453, 468, 469, 480, 481, 485, 487, 504, 606, 612], "thumbnail": 449, "ti": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 198, 404, 426, 496], "tibaldo": 454, "tick": [462, 463], "tick_param": 468, "ticker": 384, "tight_layout": [495, 505, 515, 566, 570, 614], "tightli": [414, 415], "tikonov": 424, "tild": [196, 208], "tile": [196, 198], "tilt": [260, 280, 406, 418, 419, 424, 438, 444, 480, 483, 484, 487, 488, 492, 503, 512, 519, 529, 530, 553, 559, 567, 588, 593], "tilt_prior": 424, "tim": 464, "time": [19, 20, 35, 50, 51, 52, 53, 78, 82, 83, 85, 86, 87, 88, 89, 90, 92, 93, 95, 101, 103, 104, 105, 106, 107, 110, 111, 112, 114, 126, 127, 128, 133, 137, 140, 141, 149, 173, 179, 190, 192, 197, 198, 199, 200, 201, 206, 207, 209, 210, 215, 218, 220, 222, 229, 232, 237, 242, 244, 245, 246, 262, 269, 270, 281, 284, 298, 303, 307, 313, 320, 321, 351, 371, 375, 376, 377, 378, 395, 396, 398, 400, 401, 402, 403, 405, 408, 409, 411, 412, 413, 414, 415, 416, 417, 419, 420, 421, 422, 425, 426, 427, 428, 430, 434, 438, 439, 442, 443, 444, 446, 449, 453, 455, 456, 457, 458, 459, 460, 462, 463, 464, 465, 469, 471, 472, 474, 475, 476, 477, 478, 481, 483, 484, 485, 486, 488, 489, 494, 497, 501, 502, 503, 504, 505, 508, 509, 510, 511, 512, 513, 514, 515, 518, 519, 520, 529, 530, 532, 538, 539, 540, 542, 543, 544, 546, 551, 555, 559, 565, 566, 574, 596, 597, 598, 599, 600, 601, 602, 603, 604, 608, 609, 610, 611, 612], "time1": 307, "time2": 307, "time_axi": [197, 198, 200, 201, 206, 209, 210, 298, 488, 499, 509, 559], "time_bin": 410, "time_bin_end": 410, "time_bin_s": 410, "time_bin_start": 410, "time_bound": 207, "time_box": 92, "time_column": 420, "time_delta": [86, 207, 375, 378], "time_edg": [207, 500, 509], "time_filt": 90, "time_format": [128, 207, 463, 496], "time_info": 91, "time_interv": [16, 83, 86, 89, 93, 133, 475, 480, 481, 483, 488, 494, 495, 499, 529], "time_map_axi": [207, 509], "time_map_axis_contigu": 509, "time_max": [101, 126, 128, 207, 409, 410, 411, 488, 494, 499, 502, 509], "time_mid": [207, 500], "time_min": [101, 126, 128, 207, 409, 410, 411, 488, 494, 499, 502, 509], "time_rang": [92, 229, 237, 242, 244, 245, 246, 262, 269, 281, 284, 488, 596, 597, 598, 599, 600, 601, 602, 603, 604], "time_ref": [83, 85, 86, 92, 95, 201], "time_ref_default": 86, "time_ref_from_dict": 613, "time_relative_to_ref": 613, "time_resolved_spectroscopi": [467, 498, 499], "time_seri": 298, "time_start": [85, 86, 92, 190, 410], "time_step": 410, "time_stop": [85, 86, 92, 410], "time_sum": [86, 229, 237, 242, 244, 245, 246, 262, 269, 281, 284], "timeattribut": 320, "timedelta": [88, 92, 95, 207, 229, 237, 242, 244, 245, 246, 262, 269, 281, 284, 351, 375, 378, 613], "timedelta64": [88, 92], "timeinfometadata": 91, "timelin": [400, 402, 457], "timemapaxi": [128, 149, 199, 201, 449, 464, 465, 495, 496, 499, 500], "timerangeconfig": 16, "timeref": 487, "timescal": [141, 237, 304, 421, 426, 500], "timeseri": 410, "timesi": [95, 461, 463, 487], "timestamp": 395, "timeunit": 487, "timmer": [298, 465], "tini": [485, 518], "tinydb": 415, "tip": 546, "titl": [396, 400, 489, 501, 614], "title2": 396, "title_fmt": 513, "tiziani": 455, "tke": 519, "tm": [88, 92], "tmax": 410, "tmid": [89, 463, 485, 508, 514, 530], "tmin": 410, "to_2d": [152, 521], "to_3d": [151, 462, 464], "to_bands_hdu": [195, 196, 205, 208], "to_binsz": [196, 205, 208, 449], "to_binsz_wc": 205, "to_contigu": [207, 509], "to_counts_hdulist": 109, "to_cub": [195, 196, 197, 198, 200, 205, 206, 208, 209, 210, 446, 481, 559], "to_dict": [19, 20, 26, 100, 103, 104, 107, 111, 112, 214, 217, 218, 219, 220, 221, 224, 225, 226, 227, 228, 229, 230, 231, 232, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 251, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 278, 279, 280, 281, 282, 283, 284, 285, 423, 515], "to_edisp_kernel": [159, 465, 550], "to_edisp_kernel_map": [156, 449, 550], "to_energy_dependent_table_psf": 457, "to_even_npix": 208, "to_fits_head": 85, "to_fram": 203, "to_gti": [207, 464], "to_hdu": [197, 198, 209, 210], "to_hdulist": [104, 107, 111, 112, 126, 128, 151, 152, 153, 154, 155, 156, 157, 158, 159, 161, 162, 164, 166, 167, 168, 169, 170, 197, 198, 204, 205, 206, 209, 210, 509], "to_head": [84, 87, 91, 106, 127, 196, 199, 201, 202, 207, 208, 423], "to_html": 395, "to_imag": [104, 107, 111, 112, 154, 155, 165, 167, 170, 195, 196, 205, 208, 418, 443, 444, 468, 481, 485, 503, 519, 556, 559], "to_json": [16, 84, 87, 91, 106, 127], "to_map": [126, 128], "to_map_dataset": [107, 112], "to_mask": [104, 107, 111, 112, 501], "to_model": [56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 230, 254, 449, 502], "to_node_typ": 202, "to_nsid": [196, 198], "to_odd_npix": 208, "to_panda": [88, 92], "to_parameters_t": [230, 254, 469, 470, 474, 475, 476, 480, 483, 495, 505, 515, 530], "to_pixel": [409, 474, 485, 501, 508, 512, 555, 564, 565, 566], "to_polygon": 409, "to_psf3d": [158, 166, 168], "to_python": [16, 84, 87, 91, 106, 127], "to_region": [226, 227, 230, 231, 240, 243, 254, 258, 267, 268, 282, 409, 443, 512, 564, 565, 566], "to_region_map_dataset": [104, 107, 111, 112, 503], "to_region_nd_map": [155, 156, 162, 167, 170, 198, 206, 210, 446, 449, 519], "to_region_nd_map_histogram": [210, 463], "to_sed_typ": 420, "to_sherpa": [443, 457, 458], "to_spectrum": 449, "to_spectrum_dataset": [101, 104, 107, 111, 112, 418, 442, 444, 497, 503, 515], "to_st": 463, "to_str": [463, 468], "to_swap": [196, 197, 198], "to_tabl": [103, 128, 151, 152, 153, 154, 157, 158, 159, 161, 164, 166, 168, 169, 201, 202, 206, 207, 219, 221, 245, 449, 465, 469, 472, 474, 475, 485, 489, 492, 494, 496, 502, 504, 512, 532, 544], "to_table_hdu": [83, 86, 151, 152, 153, 154, 157, 158, 159, 161, 164, 166, 168, 169, 201, 202, 509], "to_table_psf": 455, "to_template_sky_model": [230, 254], "to_template_spectral_model": [230, 254, 419], "to_unit": [151, 152, 153, 154, 157, 158, 159, 161, 164, 166, 168, 169, 197, 198, 200, 206, 209, 210], "to_wc": [197, 198], "to_wcs_geom": [196, 205, 559], "to_wcs_til": [196, 198], "to_yaml": [16, 84, 87, 91, 106, 127, 230, 254, 406, 423, 512, 563, 564, 565, 566, 567, 568, 569, 570, 571, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 596, 597, 598, 599, 600, 601, 602, 603, 604], "tob": 475, "todai": 422, "todo": [13, 79, 100, 165, 283, 420, 440, 518, 536, 537, 613], "tof": 164, "togeth": [101, 104, 107, 111, 112, 129, 133, 230, 254, 392, 395, 408, 412, 415, 416, 426, 429, 441, 469, 481, 483, 484, 489, 495, 503, 505, 508, 511, 512, 513, 514, 515, 521, 530, 542, 543, 609], "tol": [293, 505], "toler": [86, 101, 133, 151, 152, 153, 154, 157, 158, 159, 161, 164, 166, 168, 169, 196, 197, 198, 200, 202, 205, 206, 208, 209, 210, 371, 505], "tolist": 505, "tomato": 469, "toml": 446, "ton": [304, 518], "too": [395, 400, 401, 425, 448, 449, 462, 463, 464, 505, 510, 513], "took": [421, 425], "tool": [6, 13, 197, 198, 200, 209, 210, 394, 395, 398, 402, 404, 406, 408, 411, 412, 415, 416, 422, 426, 435, 443, 454, 457, 458, 486, 489, 496, 503, 505, 509, 514, 518, 519, 521, 534, 546, 582, 607, 608], "toolbox": [411, 454], "top": [16, 84, 87, 91, 106, 111, 112, 123, 127, 382, 391, 395, 396, 400, 411, 415, 416, 418, 431, 457, 476, 478, 485, 489, 494, 496, 500, 502, 508, 532, 546, 559, 607, 609, 613], "top_five_ts_3fhl": 532, "tophat2dkernel": 125, "topic": [400, 404, 416, 424, 532], "total": [51, 67, 100, 103, 104, 107, 111, 112, 129, 130, 133, 134, 144, 177, 192, 196, 216, 229, 237, 242, 244, 245, 246, 262, 269, 281, 284, 316, 403, 420, 424, 430, 432, 464, 467, 469, 470, 472, 473, 474, 475, 476, 477, 478, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 491, 492, 494, 495, 496, 497, 498, 499, 501, 502, 503, 504, 505, 508, 509, 510, 511, 513, 515, 516, 519, 523, 526, 528, 529, 530, 532, 533, 536, 542, 546, 551, 561, 572, 584, 594, 605, 608], "total_jfact": 501, "total_jfact_decai": 501, "total_model": 406, "total_obstim": 508, "total_stat": [216, 217, 425, 469, 499, 505, 610], "touch": [86, 438, 524], "tour": 524, "toward": [339, 402, 409, 416, 459, 513], "tox": [358, 396, 398, 460, 468, 470, 474, 475, 476, 477, 478, 480, 481, 483, 484, 485, 486, 487, 488, 489, 492, 494, 495, 496, 497, 499, 501, 502, 503, 505, 508, 509, 510, 511, 512, 515, 517, 518, 519, 520, 521, 529, 530, 532, 571, 597], "tqdm": 546, "trace": [215, 216, 217, 415, 446, 505], "traceback": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 395], "track": [85, 95, 395, 398, 404, 410, 422, 426, 451, 511], "tracker": [398, 409, 427, 465], "traction": 513, "tradit": [425, 513], "tradition": [425, 512, 513, 610], "train": 421, "traitlet": [411, 423], "traittyp": 423, "transfer": 423, "transform": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 83, 85, 95, 165, 199, 201, 202, 207, 208, 218, 220, 222, 230, 254, 320, 321, 323, 327, 350, 355, 395, 409, 411, 420, 424, 425, 437, 439, 455, 458, 478, 485, 508, 515, 558, 564, 565, 613], "transform_to": [320, 321], "transfram": [320, 321], "transit": [27, 385, 386, 402, 438, 439, 457, 520, 608, 614], "transit_map": 520, "transit_numb": 520, "transitsmap_crab": 520, "translat": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 411, 415, 544], "transpar": 410, "transport": 509, "transpos": [320, 321, 458], "trapezoid": [151, 152, 153, 154, 157, 158, 159, 161, 164, 166, 168, 169, 289, 332], "trapz": 332, "trapz_loglog": 444, "trash": 440, "travi": [443, 445, 449], "treat": [83, 96, 320, 321, 430, 462, 463, 474, 487, 612], "treatment": [449, 474, 483, 608], "trend": 487, "tri": [77, 403, 409], "tributor": 422, "tricki": 409, "trigger": [372, 395, 427, 520], "trim": [104, 107, 155, 156, 162, 167, 170, 173, 208, 210, 280], "tripl": 158, "trivial": 402, "troubl": [430, 431, 609], "troubleshoot": [430, 431, 432], "trough": 500, "true": [15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 35, 36, 37, 39, 40, 45, 80, 82, 83, 84, 86, 87, 88, 89, 91, 92, 94, 97, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 114, 115, 116, 117, 119, 120, 125, 126, 127, 128, 129, 133, 134, 137, 138, 144, 147, 151, 152, 154, 155, 156, 157, 158, 159, 161, 162, 164, 165, 166, 167, 168, 169, 170, 173, 177, 183, 184, 187, 188, 190, 191, 193, 196, 197, 198, 200, 201, 202, 203, 204, 205, 206, 208, 209, 210, 212, 215, 216, 219, 221, 222, 224, 225, 226, 227, 228, 229, 230, 231, 232, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 251, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 278, 279, 280, 281, 282, 283, 284, 285, 312, 314, 316, 319, 320, 321, 329, 330, 333, 351, 363, 365, 383, 388, 392, 395, 401, 408, 409, 410, 411, 419, 420, 423, 425, 440, 444, 445, 456, 458, 459, 468, 469, 470, 472, 474, 475, 476, 477, 478, 480, 481, 483, 484, 485, 486, 487, 488, 489, 492, 494, 495, 496, 497, 499, 501, 502, 503, 504, 505, 507, 508, 509, 510, 511, 512, 513, 515, 519, 520, 527, 529, 530, 532, 536, 542, 544, 546, 551, 556, 558, 559, 563, 564, 565, 568, 569, 571, 593, 608, 611, 614], "truelov": 53, "truli": [320, 321], "truncat": [137, 339, 449], "truncation_valu": [300, 306], "trust": [16, 84, 87, 91, 106, 127], "trustworthi": 424, "truth": [513, 515], "try": [16, 77, 84, 87, 91, 106, 127, 197, 198, 200, 206, 209, 210, 395, 396, 405, 409, 416, 427, 428, 434, 439, 472, 474, 476, 487, 488, 494, 502, 505, 509, 532, 609], "ts2": 298, "ts3": 298, "ts_asimov": 314, "ts_image_estim": 485, "ts_scan": [126, 128], "ts_threshold": [149, 293], "ts_threshold_ul": [497, 544], "ts_to_sigma": [486, 611], "tsimageestim": 457, "tsmap": 465, "tsmap_est": 388, "tsmapestim": [122, 147, 148, 388, 417, 420, 444, 445, 447, 449, 463, 465, 478, 485, 546], "tstart": [89, 92, 408, 410, 477, 487, 492, 495, 496, 499, 518], "tstop": [89, 408, 410, 477, 487, 492, 495, 499, 518], "tt": [86, 95, 376, 377, 422, 488, 495, 499, 613], "tth_sec3": 202, "tune": 415, "tupl": [16, 19, 20, 26, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 41, 56, 83, 84, 87, 88, 89, 91, 92, 103, 104, 106, 107, 111, 112, 127, 131, 137, 151, 152, 154, 155, 156, 157, 158, 159, 162, 164, 165, 166, 167, 168, 170, 173, 178, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 208, 209, 210, 213, 224, 225, 228, 232, 234, 235, 236, 241, 247, 248, 251, 255, 257, 259, 260, 261, 266, 271, 273, 274, 275, 276, 279, 280, 283, 295, 299, 302, 333, 343, 350, 395, 509, 558], "turn": [83, 89, 320, 321, 396, 398, 409, 415, 518, 606], "tutori": [82, 100, 123, 133, 136, 161, 182, 220, 222, 223, 239, 249, 285, 395, 398, 399, 404, 407, 408, 409, 410, 411, 412, 413, 417, 425, 426, 428, 432, 433, 434, 435, 438, 439, 440, 441, 442, 443, 444, 445, 446, 448, 449, 451, 452, 455, 456, 457, 458, 459, 460, 463, 464, 465, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 480, 482, 483, 484, 485, 487, 488, 489, 491, 492, 494, 495, 496, 497, 498, 499, 500, 502, 503, 504, 505, 506, 507, 509, 511, 512, 513, 514, 515, 516, 517, 519, 521, 522, 523, 526, 528, 529, 530, 531, 532, 533, 546, 547, 549, 558, 606, 609], "tutorials_jupyt": [427, 524], "tutorials_python": 524, "tweak": [411, 449, 465, 509], "twice": [125, 558, 612], "twinx": 468, "two": [19, 20, 26, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 59, 77, 86, 88, 90, 92, 103, 104, 107, 111, 112, 121, 123, 140, 151, 152, 153, 154, 157, 158, 159, 160, 161, 164, 166, 168, 169, 173, 178, 180, 196, 197, 198, 199, 200, 202, 205, 206, 208, 209, 210, 215, 224, 225, 226, 227, 228, 229, 230, 231, 232, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 251, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 278, 279, 280, 281, 282, 283, 284, 285, 293, 312, 314, 320, 321, 351, 361, 384, 389, 392, 394, 395, 396, 398, 402, 404, 405, 406, 407, 409, 410, 411, 412, 413, 416, 417, 420, 421, 422, 424, 427, 428, 430, 451, 457, 459, 463, 465, 475, 476, 483, 484, 486, 489, 496, 502, 503, 504, 505, 507, 509, 510, 512, 514, 515, 518, 520, 529, 530, 536, 542, 543, 544, 546, 555, 558, 559, 576, 611, 612], "txt": [128, 421, 423, 426, 427, 511, 519], "tyler": 451, "type": [16, 19, 20, 26, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 69, 84, 87, 88, 90, 91, 92, 97, 100, 101, 103, 104, 106, 116, 125, 126, 127, 128, 130, 137, 171, 177, 195, 196, 197, 198, 200, 202, 205, 206, 208, 209, 210, 218, 219, 220, 221, 224, 225, 226, 227, 228, 229, 230, 231, 232, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 278, 279, 280, 281, 282, 283, 284, 285, 286, 319, 320, 321, 351, 398, 401, 404, 405, 406, 407, 409, 410, 411, 414, 419, 420, 422, 424, 428, 429, 430, 432, 434, 442, 449, 455, 456, 457, 463, 465, 469, 470, 472, 474, 475, 476, 477, 478, 480, 481, 483, 484, 485, 486, 487, 488, 489, 492, 494, 495, 496, 499, 502, 503, 504, 505, 507, 508, 509, 510, 511, 512, 513, 514, 515, 518, 519, 520, 529, 530, 532, 534, 546, 563, 564, 565, 566, 567, 568, 569, 570, 571, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 596, 597, 598, 599, 600, 601, 602, 603, 604, 608, 609], "typeerror": [16, 84, 87, 91, 106, 127, 319, 320, 321, 409, 420, 424], "typic": [126, 401, 404, 406, 413, 418, 419, 420, 421, 423, 427, 430, 431, 470, 476, 481, 489, 492, 494, 495, 502, 503, 504, 507, 510, 512, 514, 534, 541, 542, 543, 551, 555, 607, 608], "typo": [395, 435, 461, 462, 465], "u": [19, 20, 26, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 66, 83, 85, 88, 92, 97, 104, 107, 111, 112, 117, 120, 121, 126, 128, 130, 132, 137, 145, 146, 154, 156, 165, 195, 196, 197, 198, 200, 201, 205, 206, 207, 208, 209, 210, 224, 225, 228, 232, 234, 235, 236, 241, 245, 247, 248, 251, 255, 257, 259, 260, 261, 266, 271, 273, 274, 275, 276, 279, 283, 286, 287, 298, 317, 318, 319, 320, 321, 341, 390, 395, 398, 402, 403, 404, 410, 411, 412, 413, 415, 419, 420, 423, 424, 438, 439, 440, 457, 458, 459, 468, 469, 470, 472, 474, 476, 477, 478, 480, 481, 483, 484, 485, 486, 487, 488, 489, 492, 494, 495, 496, 497, 499, 501, 502, 503, 504, 505, 507, 508, 509, 510, 511, 512, 513, 514, 515, 517, 518, 519, 520, 521, 529, 530, 532, 536, 543, 544, 546, 548, 553, 555, 556, 559, 564, 566, 567, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 596, 597, 598, 599, 600, 601, 602, 603], "u03c3": 486, "u18": [33, 38], "uc": [88, 92], "ufunc": [197, 198, 200, 206, 209, 210, 476, 499], "ui": [33, 38, 50, 52, 53, 58, 60, 61, 62, 83, 89, 157, 251, 286, 287], "uk": [312, 314], "ul": [67, 125, 126, 128, 129, 130, 133, 134, 137, 294, 484, 489, 496, 502], "ultim": [395, 415], "ultranest": [222, 425, 513], "ultranest_result": 223, "un": [407, 422, 446, 511], "unambigu": 512, "unbehaun": 464, "unbin": [407, 408, 458], "unboundlocalerror": 395, "unbundl": 614, "unc_": 77, "uncertaint": 413, "uncertainti": [52, 77, 104, 107, 111, 112, 295, 299, 399, 412, 425, 426, 456, 472, 474, 497, 505, 513, 515, 530, 607, 608, 610], "unchang": [104, 107, 111, 112, 117, 120, 126, 128, 151, 152, 153, 154, 155, 156, 157, 158, 159, 161, 162, 164, 166, 167, 168, 169, 170, 195, 196, 197, 198, 200, 201, 205, 206, 208, 209, 210, 457], "unclear": [395, 405, 406, 412, 423], "uncom": [411, 513, 518], "undefin": 612, "under": [72, 92, 135, 138, 139, 147, 148, 312, 395, 398, 399, 404, 412, 422, 458, 459, 469, 475, 524, 529, 531, 542, 611, 612], "underestim": 544, "underflow": 207, "underli": [16, 84, 87, 88, 91, 92, 106, 127, 205, 320, 321, 408, 472, 502, 509, 515, 532, 534, 543, 555, 558], "underscor": 395, "understand": [411, 415, 430, 432, 435, 443, 444, 470, 474, 475, 476, 480, 487, 488, 495, 496, 500, 509, 510, 511, 518, 529, 530, 609], "undertak": 416, "undertaken": 415, "underwai": 425, "unevenli": [140, 307], "unexpect": [16, 84, 87, 91, 106, 127, 520], "unfold": 608, "unfreez": [19, 20, 26, 219, 221, 224, 225, 226, 227, 228, 229, 230, 231, 232, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 251, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 278, 279, 280, 281, 282, 283, 284, 285, 584], "unfreeze_al": [219, 221, 511], "unfrozen": 553, "unheard": 609, "uni": [424, 427], "uni_prior_stat_sum": 515, "unicod": [88, 92], "unid": 67, "unidimension": 201, "unif": 443, "unifi": [88, 92, 399, 404, 409, 438, 441, 443, 444, 445, 446, 449, 458, 459, 608], "uniform": [165, 215, 220, 222, 239, 249, 285, 350, 395, 404, 406, 407, 418, 420, 424, 425, 440, 441, 445, 449, 465, 470, 509, 513, 515, 607], "uniform_filt": [131, 210], "uniformli": [408, 544], "uniformprior": [263, 424, 465, 513, 515], "uninstal": 394, "unintuit": [320, 321], "union": [84, 86, 87, 90, 91, 104, 106, 107, 127, 205, 356, 409, 410, 422, 423, 441, 542], "uniqu": [88, 92, 101, 154, 196, 197, 198, 199, 200, 206, 208, 209, 210, 219, 221, 230, 238, 254, 270, 280, 388, 405, 406, 407, 408, 415, 419, 422, 444, 465, 475, 503, 512, 520, 559, 606], "unique_id": 512, "unique_paramet": [219, 221], "uniquifi": [88, 92], "unit": [19, 20, 26, 27, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 52, 66, 83, 85, 88, 89, 92, 97, 103, 104, 107, 109, 111, 112, 113, 117, 118, 120, 121, 126, 128, 130, 132, 137, 145, 146, 151, 152, 153, 154, 156, 157, 158, 159, 161, 164, 165, 166, 167, 168, 169, 174, 177, 180, 195, 196, 197, 198, 199, 200, 201, 202, 203, 205, 206, 207, 208, 209, 210, 218, 220, 224, 225, 227, 228, 231, 232, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 251, 255, 257, 258, 259, 260, 261, 262, 266, 267, 268, 269, 270, 271, 273, 274, 275, 276, 279, 280, 281, 282, 283, 285, 286, 287, 298, 307, 317, 318, 319, 320, 321, 351, 365, 366, 367, 369, 378, 379, 380, 381, 384, 385, 386, 390, 396, 404, 406, 409, 411, 413, 419, 420, 424, 425, 438, 439, 441, 449, 451, 457, 458, 460, 461, 462, 463, 465, 468, 469, 470, 472, 474, 475, 476, 477, 478, 480, 481, 483, 484, 485, 486, 487, 488, 489, 492, 494, 495, 496, 497, 499, 501, 502, 503, 504, 505, 507, 508, 509, 510, 511, 512, 514, 515, 517, 518, 519, 520, 521, 529, 530, 532, 536, 538, 539, 540, 543, 544, 546, 548, 550, 551, 553, 555, 556, 557, 558, 559, 563, 564, 565, 566, 567, 568, 569, 570, 571, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 596, 597, 598, 599, 600, 601, 602, 603, 604, 608], "unit_string_format": [463, 468], "unitbas": 319, "uniti": [131, 199, 282, 425, 461, 566], "unitless": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 238, 280], "unitsmap": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40], "unitswarn": [468, 477, 480, 483, 485, 492, 496, 518], "univers": [25, 197, 198, 200, 206, 209, 210, 608], "univsers": 20, "unknown": [16, 84, 87, 91, 103, 106, 127, 299, 426, 478, 505, 608, 610, 611], "unless": [87, 91, 94, 96, 130, 133, 137, 173, 319, 394, 401, 421, 423, 507], "unlik": [88, 92, 293, 402, 413, 513], "unmaintain": 439, "unmask": [88, 92], "unnam": [88, 92, 203], "unnecessari": [449, 460, 483], "unneed": 463, "unphys": 612, "unravel": [320, 321], "unrealist": 395, "unrel": 613, "unreli": 518, "unsaf": 395, "unstabl": [395, 518], "unsu": [19, 20, 26, 224, 225, 228, 232, 234, 235, 236, 241, 247, 248, 251, 255, 257, 259, 260, 261, 266, 271, 273, 274, 275, 276, 279, 283], "unsupport": 412, "untar": 518, "until": [222, 395, 402, 409, 421, 456, 513], "unus": [19, 20, 26, 224, 225, 228, 232, 234, 235, 236, 241, 247, 248, 251, 255, 257, 259, 260, 261, 266, 271, 273, 274, 275, 276, 279, 283, 411, 441, 443], "unusu": 400, "unweight": [107, 112], "unzip": 518, "up": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 52, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 74, 103, 130, 132, 137, 158, 164, 166, 168, 205, 319, 395, 396, 399, 400, 402, 403, 404, 407, 409, 411, 412, 413, 415, 416, 418, 422, 424, 425, 426, 428, 429, 430, 432, 434, 437, 439, 440, 441, 442, 443, 444, 445, 446, 449, 453, 455, 456, 457, 458, 459, 465, 474, 475, 483, 486, 487, 515, 518, 519, 559, 609], "upcast": 319, "upcom": [403, 404], "updat": [15, 16, 84, 87, 88, 91, 92, 105, 106, 110, 127, 204, 218, 219, 220, 221, 222, 223, 230, 254, 282, 293, 341, 361, 395, 398, 400, 401, 402, 403, 404, 407, 412, 418, 420, 422, 423, 425, 426, 427, 428, 430, 431, 438, 439, 440, 441, 442, 443, 444, 446, 448, 449, 450, 451, 452, 455, 456, 457, 458, 460, 463, 464, 465, 509, 512, 513, 557, 558], "update_config": 15, "update_forward_ref": [16, 84, 87, 91, 106, 127], "update_from_dict": [218, 220], "update_link_label": [219, 221, 230, 254], "update_parameters_from_t": [230, 254], "update_scal": [218, 220], "updated_model": 425, "upgrad": [196, 394, 421, 431], "upload": [396, 412, 427], "upon": [104, 107, 111, 112, 404, 480, 511, 518, 542], "upper": [17, 18, 19, 20, 21, 22, 24, 25, 26, 27, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 77, 80, 103, 125, 126, 127, 128, 129, 130, 133, 134, 137, 138, 147, 154, 202, 207, 215, 224, 225, 228, 229, 232, 234, 235, 236, 237, 241, 242, 244, 245, 246, 247, 248, 251, 255, 257, 259, 260, 261, 262, 266, 269, 271, 273, 274, 275, 276, 279, 281, 283, 284, 294, 295, 296, 299, 423, 434, 445, 449, 456, 457, 458, 464, 474, 478, 489, 494, 503, 504, 508, 529, 542, 544, 546], "upper_error": 128, "upsampl": [167, 195, 196, 197, 198, 199, 200, 201, 202, 205, 206, 207, 208, 209, 210, 440, 460], "upsample_geom": 167, "upstream": [395, 398, 427], "upward": [295, 299], "url": 403, "us": [11, 13, 16, 17, 18, 19, 20, 21, 22, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 35, 36, 37, 39, 40, 41, 46, 47, 53, 56, 57, 59, 65, 69, 70, 71, 74, 75, 80, 82, 83, 84, 85, 86, 87, 88, 89, 91, 92, 94, 95, 96, 97, 100, 102, 103, 104, 105, 106, 107, 109, 110, 111, 112, 115, 116, 119, 123, 125, 126, 127, 128, 129, 130, 131, 133, 134, 135, 137, 138, 140, 141, 142, 143, 145, 146, 147, 148, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 161, 162, 164, 165, 166, 167, 168, 169, 170, 172, 173, 174, 177, 180, 181, 182, 183, 184, 185, 186, 187, 188, 190, 193, 194, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 234, 235, 236, 237, 240, 241, 242, 243, 244, 245, 246, 247, 248, 251, 254, 255, 256, 257, 258, 259, 260, 261, 262, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 278, 279, 280, 281, 282, 283, 284, 287, 289, 294, 298, 300, 312, 313, 314, 317, 319, 320, 321, 329, 332, 333, 334, 341, 342, 345, 350, 351, 358, 361, 377, 378, 380, 382, 384, 385, 386, 388, 389, 390, 391, 392, 394, 396, 397, 398, 399, 400, 401, 402, 403, 404, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 422, 423, 427, 428, 429, 430, 432, 433, 435, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 449, 450, 451, 453, 454, 455, 456, 457, 458, 459, 460, 461, 463, 464, 465, 467, 468, 469, 470, 471, 472, 474, 476, 477, 478, 480, 481, 483, 484, 485, 488, 489, 492, 495, 496, 497, 499, 500, 501, 502, 504, 506, 508, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 524, 525, 527, 531, 532, 535, 536, 546, 548, 549, 550, 552, 556, 557, 559, 560, 563, 564, 565, 566, 567, 568, 569, 570, 571, 573, 574, 575, 576, 577, 578, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 593, 594, 596, 597, 598, 599, 600, 601, 602, 603, 604, 607, 608, 609, 610, 611, 613, 614], "usabl": [395, 426], "usag": [16, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 82, 84, 87, 91, 106, 123, 127, 133, 136, 161, 182, 195, 196, 205, 208, 220, 222, 239, 249, 285, 320, 321, 345, 396, 401, 405, 406, 408, 410, 414, 420, 442, 463, 464, 502, 508, 510, 511, 524, 609], "use_cach": 255, "use_center_as_plot_label": 202, "use_enum_valu": [16, 84, 87, 91, 106, 127], "use_evaluation_region": [230, 254], "use_fft": 210, "use_local_fil": [88, 92], "use_nullable_int": [88, 92], "use_region_cent": [177, 184, 187, 188, 190, 191, 449, 470], "useless": 518, "user": [15, 19, 20, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 77, 82, 89, 125, 129, 130, 133, 218, 224, 227, 228, 231, 232, 234, 235, 236, 237, 240, 241, 242, 243, 244, 245, 246, 247, 248, 251, 258, 259, 260, 261, 262, 266, 267, 268, 269, 271, 274, 275, 276, 281, 282, 320, 321, 395, 396, 398, 400, 401, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 418, 420, 421, 422, 423, 426, 427, 428, 429, 430, 431, 432, 435, 442, 449, 450, 456, 457, 458, 460, 475, 478, 486, 487, 488, 503, 504, 507, 509, 510, 511, 512, 514, 524, 529, 543, 544, 545, 546, 551, 555, 558, 561, 568, 572, 594, 605, 606, 609], "user_data": [320, 321], "userdataset": 407, "usernam": 398, "userwarn": [474, 476, 484, 485, 489, 519], "uses_quant": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40], "usr": 609, "usual": [29, 82, 83, 126, 145, 151, 152, 153, 165, 206, 329, 395, 396, 398, 400, 401, 402, 403, 409, 410, 416, 422, 425, 428, 463, 468, 469, 470, 472, 474, 476, 477, 480, 481, 485, 487, 488, 492, 494, 495, 496, 499, 500, 501, 503, 510, 513, 514, 517, 520, 530, 534, 542, 546, 548, 549, 550, 552, 555, 559, 565, 606, 608, 609, 610], "ut1": 613, "utc": [86, 89, 106, 127, 375, 487, 494, 495, 499, 509, 512, 596, 597, 598, 599, 600, 601, 602, 603, 604, 613], "utf": [88, 92], "utf8": [16, 84, 87, 91, 106, 127], "util": [6, 97, 106, 113, 117, 118, 119, 120, 127, 128, 130, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 156, 186, 187, 188, 189, 190, 191, 192, 193, 194, 292, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 395, 404, 406, 407, 408, 409, 415, 420, 437, 440, 441, 442, 443, 450, 451, 454, 455, 456, 457, 458, 459, 463, 464, 468, 470, 474, 475, 476, 477, 478, 480, 481, 483, 484, 485, 486, 487, 488, 489, 494, 495, 496, 497, 500, 501, 502, 503, 504, 505, 507, 508, 509, 510, 511, 512, 514, 515, 517, 518, 519, 520, 521, 529, 530, 532, 534, 535, 546, 608], "utilis": [135, 146, 293, 396, 430, 432, 434, 468, 474, 478, 486, 500, 504, 509, 514, 520, 530, 543, 546, 553], "uwucuhfi": 477, "v": [26, 31, 32, 37, 88, 92, 158, 164, 166, 167, 168, 170, 179, 186, 204, 281, 293, 320, 321, 325, 398, 403, 410, 411, 423, 424, 425, 426, 427, 428, 451, 468, 494, 501, 513, 514, 529], "v0": [96, 402, 403, 406, 407, 409, 412, 414, 415, 416, 421, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 451, 452, 458, 459, 460, 487, 488, 507, 511, 518], "v1": [13, 102, 395, 402, 404, 406, 411, 412, 413, 414, 421, 422, 426, 427, 443, 444, 445, 451, 456, 460, 461, 462, 463, 464, 465], "v15": 465, "v1wk": 499, "v2": [19, 20, 26, 224, 225, 228, 232, 234, 235, 236, 241, 247, 248, 251, 255, 257, 259, 260, 261, 266, 271, 273, 274, 275, 276, 279, 283, 422, 423, 426, 449, 457, 464, 483], "v3": [441, 483], "v4ssfhyq": 483, "v_0": [37, 49], "v_glat": 328, "v_glon": 328, "va": 564, "vagu": 400, "vain": 398, "val": [88, 92, 197, 198, 200, 206, 209, 210, 219, 221, 509, 558], "valfmt": 384, "valid": [16, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 84, 87, 88, 91, 92, 106, 108, 126, 127, 130, 139, 148, 169, 183, 195, 196, 197, 198, 199, 200, 201, 202, 203, 205, 206, 208, 209, 210, 312, 314, 319, 339, 394, 395, 404, 408, 411, 412, 415, 422, 426, 443, 451, 460, 470, 474, 499, 505, 508, 509, 512, 519, 544, 546, 551, 608], "valid_hdu_class": [82, 88], "valid_hdu_typ": 88, "valid_interv": 499, "valid_tim": 499, "validate_al": 423, "validate_assign": [16, 84, 87, 91, 106, 127, 423], "validate_default": [16, 84, 87, 91, 106, 127], "validate_earth_loc": 91, "validate_loc": 423, "validate_scalar": 91, "validate_tim": 87, "validate_zenith_angl": 423, "validationerror": [16, 84, 87, 91, 106, 127, 423], "valle": 38, "valleespir": 536, "valu": [11, 15, 16, 19, 20, 26, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 42, 52, 83, 84, 86, 87, 88, 89, 91, 92, 93, 96, 100, 101, 102, 103, 104, 106, 107, 111, 112, 114, 115, 121, 123, 125, 126, 127, 128, 129, 130, 131, 133, 134, 135, 136, 137, 138, 140, 145, 146, 147, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 164, 166, 167, 168, 169, 170, 173, 177, 183, 184, 186, 187, 188, 190, 191, 195, 196, 197, 198, 199, 200, 201, 202, 204, 205, 206, 207, 208, 209, 210, 215, 217, 218, 219, 220, 221, 224, 225, 227, 228, 229, 230, 231, 232, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 251, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 278, 279, 280, 281, 282, 283, 284, 285, 286, 293, 294, 295, 297, 299, 300, 302, 303, 304, 307, 312, 314, 319, 320, 321, 325, 333, 334, 348, 351, 361, 365, 380, 381, 384, 385, 386, 396, 398, 401, 406, 407, 409, 411, 413, 415, 416, 419, 420, 423, 425, 440, 443, 449, 460, 463, 464, 465, 468, 469, 470, 472, 474, 475, 476, 477, 478, 480, 481, 483, 484, 485, 487, 488, 489, 492, 494, 495, 496, 497, 499, 500, 501, 502, 503, 504, 505, 507, 508, 510, 511, 512, 513, 514, 518, 519, 520, 521, 524, 529, 530, 532, 534, 538, 539, 540, 544, 546, 550, 558, 559, 563, 564, 565, 566, 567, 568, 569, 570, 571, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 596, 597, 598, 599, 600, 601, 602, 603, 604, 609, 610, 611, 612], "value_rang": 92, "value_scan": 294, "valueerror": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 72, 88, 92, 93, 101, 230, 254, 320, 321, 395, 409, 423], "values_equ": [88, 92], "values_err": 497, "values_scal": [151, 152, 153, 206, 210, 245, 278, 282, 283, 333, 461, 463, 488, 507], "vanilla": [88, 92], "var": [305, 398, 430, 432], "vari": [68, 105, 110, 133, 165, 215, 333, 361, 407, 409, 410, 421, 443, 446, 467, 469, 480, 485, 486, 488, 493, 498, 499, 508, 512, 515, 519, 524], "variability_amplitud": 500, "variability_amplitude_100": 500, "variability_amplitude_error": 500, "variability_amplitude_signific": 500, "variability_estim": [467, 498, 500], "variabl": [11, 16, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 82, 84, 87, 91, 92, 106, 127, 140, 141, 210, 295, 299, 302, 303, 304, 305, 307, 313, 332, 359, 395, 396, 398, 408, 410, 411, 426, 428, 430, 432, 438, 439, 455, 456, 457, 463, 464, 465, 467, 468, 470, 474, 475, 476, 477, 478, 480, 481, 483, 484, 485, 486, 488, 489, 493, 494, 495, 496, 497, 498, 499, 501, 502, 503, 505, 508, 509, 510, 511, 512, 515, 517, 518, 519, 520, 521, 524, 529, 530, 532, 551, 609, 610, 611], "varianc": [97, 142, 143, 304, 305, 318, 410, 426, 464, 514, 553], "variant": 428, "variat": [141, 246, 304, 401, 411, 468, 500, 507, 508, 551, 556, 611], "varieti": [406, 607], "variou": [123, 129, 130, 133, 134, 137, 146, 395, 401, 405, 407, 410, 420, 423, 426, 428, 430, 449, 450, 464, 469, 472, 475, 478, 484, 486, 494, 504, 505, 529, 542, 546, 607, 613], "vasco": 465, "vast": [412, 451], "vaughan": [305, 500], "vdkn5ngo": 499, "ve": [395, 396, 398, 513, 609], "vector": [195, 196, 197, 198, 200, 205, 206, 208, 209, 210, 509, 550, 558], "vega": 458, "vel": 497, "vel_di": [45, 536], "vela": [66, 437, 472, 497, 532], "veloc": [31, 32, 37, 45, 49, 320, 321, 325, 328], "ver": 509, "verbos": [11, 82, 396, 419, 609, 611], "veri": [63, 88, 92, 145, 215, 385, 394, 395, 396, 397, 400, 401, 406, 408, 409, 410, 411, 412, 413, 414, 415, 416, 419, 420, 423, 425, 426, 428, 459, 468, 469, 477, 500, 502, 504, 505, 509, 513, 515, 519, 532, 542, 546, 559, 569, 570, 606, 608, 609, 610], "verif": [101, 230, 254, 357, 360, 474, 484, 519], "verifi": [219, 221, 243, 293, 395, 408, 502, 546], "verifywarn": 546, "verita": [98, 430, 435, 519], "versa": 196, "version": [11, 78, 85, 88, 92, 128, 185, 320, 321, 394, 396, 398, 399, 402, 403, 404, 405, 409, 412, 415, 416, 422, 423, 424, 425, 428, 429, 430, 431, 433, 434, 435, 437, 438, 439, 440, 442, 443, 448, 450, 451, 453, 456, 457, 458, 460, 461, 463, 464, 465, 468, 470, 474, 475, 476, 477, 478, 480, 481, 483, 484, 485, 486, 487, 488, 489, 494, 495, 496, 497, 501, 502, 503, 505, 508, 509, 510, 511, 512, 515, 517, 518, 519, 520, 521, 529, 530, 532, 544, 609], "versu": [151, 157, 293, 295, 299, 518, 540], "vert": 261, "vertex": 409, "vhe": [470, 534], "vi": 35, "via": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 67, 82, 83, 92, 105, 110, 198, 203, 213, 394, 396, 398, 403, 407, 409, 410, 411, 412, 413, 414, 415, 417, 419, 422, 423, 424, 425, 426, 427, 428, 430, 431, 438, 446, 454, 456, 457, 458, 462, 463, 465, 468, 469, 470, 472, 474, 475, 476, 477, 478, 480, 481, 483, 484, 485, 486, 487, 488, 489, 492, 494, 495, 496, 497, 499, 500, 501, 502, 503, 504, 505, 507, 508, 509, 510, 511, 512, 513, 514, 515, 517, 518, 519, 520, 521, 527, 529, 530, 532, 546, 550, 551, 555, 559, 563, 564, 565, 566, 567, 568, 569, 570, 571, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 596, 597, 598, 599, 600, 601, 602, 603, 604, 606, 609, 613], "viabil": [423, 426], "vice": 196, "vicin": [425, 513], "victor": 453, "video": 426, "view": [83, 88, 92, 151, 152, 153, 154, 157, 158, 159, 160, 161, 164, 166, 168, 169, 174, 197, 198, 200, 204, 206, 209, 210, 238, 320, 321, 323, 327, 382, 395, 409, 425, 439, 444, 449, 451, 458, 459, 474, 476, 481, 483, 487, 499, 503, 507, 508, 510, 513, 518, 519, 546, 548, 549, 550, 551, 552, 553, 555, 608], "vika": 449, "vila": 465, "vincenti": [320, 321], "vin\u00edciu": 456, "viridi": [476, 501], "virtual": [398, 415, 428, 430, 431, 432, 609], "visibl": [88, 92, 385, 386, 403, 449, 468, 487, 520, 530, 532, 608], "vision": 400, "visit": [425, 488], "visual": [6, 198, 210, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 409, 425, 444, 445, 463, 464, 465, 474, 476, 481, 483, 485, 488, 505, 507, 514, 517, 530, 532, 546, 555, 560, 564, 607], "visualis": [392, 407, 409, 417, 445, 460, 476, 507, 512, 513, 515, 518, 546], "vline": [540, 564, 565], "vmax": [104, 107, 111, 112, 385, 386, 480, 483, 485, 492, 503, 509, 510, 519, 520, 529, 530, 555, 614], "vmin": [104, 107, 111, 112, 385, 386, 478, 483, 492, 503, 509, 510, 519, 520, 529, 530, 555, 614], "volum": [27, 201, 205, 208, 415, 513], "vorokh": [454, 455], "voruganti": [456, 457], "vstack": [83, 86, 408], "vtransit": 614, "vuillaum": [422, 457], "vx": [325, 328, 421], "vy": [325, 328], "vz": [325, 328], "w": [26, 31, 49, 86, 194, 207, 316, 396, 421, 426, 478, 481, 489, 501, 508, 512, 515, 555, 610, 612], "w3c": 415, "wa": [16, 19, 20, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 59, 84, 85, 87, 88, 91, 92, 94, 95, 104, 106, 121, 127, 130, 133, 137, 173, 218, 224, 227, 228, 231, 232, 234, 235, 236, 237, 240, 241, 242, 243, 244, 245, 246, 247, 248, 251, 258, 259, 260, 261, 262, 266, 267, 268, 269, 271, 274, 275, 276, 281, 282, 320, 321, 388, 395, 398, 400, 401, 402, 403, 404, 405, 408, 409, 411, 412, 413, 414, 416, 417, 419, 420, 421, 422, 423, 424, 426, 428, 438, 441, 442, 443, 444, 445, 446, 453, 457, 458, 459, 460, 461, 462, 463, 469, 472, 474, 481, 483, 485, 508, 515, 518, 519, 520, 521, 532, 609], "wagner": 500, "wai": [33, 38, 83, 88, 92, 202, 298, 320, 321, 345, 351, 394, 395, 396, 398, 400, 401, 402, 403, 405, 406, 407, 409, 410, 411, 412, 415, 416, 417, 420, 422, 425, 430, 431, 432, 434, 437, 441, 457, 458, 472, 474, 476, 480, 483, 500, 502, 503, 504, 505, 508, 509, 510, 511, 513, 514, 518, 519, 520, 521, 524, 531, 536, 543, 545, 546, 550, 559, 607, 609, 611], "wait": [395, 427, 428], "wald": [312, 314], "wald1943": [312, 314], "walk": 425, "walker": [425, 513], "wall": [83, 89], "want": [16, 19, 20, 26, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 82, 83, 84, 87, 91, 106, 109, 127, 154, 180, 205, 224, 225, 228, 232, 234, 235, 236, 241, 247, 248, 251, 255, 257, 259, 260, 261, 266, 271, 273, 274, 275, 276, 279, 283, 320, 321, 395, 397, 398, 400, 401, 402, 405, 409, 410, 411, 413, 414, 416, 425, 426, 428, 429, 430, 431, 432, 434, 435, 438, 458, 470, 474, 475, 476, 477, 480, 487, 488, 492, 494, 496, 497, 499, 501, 502, 503, 505, 508, 509, 510, 511, 512, 513, 515, 518, 519, 529, 530, 532, 550, 606, 609, 610, 611, 612, 613], "ward": 317, "warmup": 425, "warn": [11, 16, 26, 82, 84, 87, 88, 91, 92, 106, 127, 198, 218, 219, 220, 221, 278, 279, 280, 282, 380, 421, 428, 440, 457, 462, 463, 464, 465, 468, 474, 477, 478, 480, 483, 484, 485, 488, 492, 496, 497, 518, 519, 546, 571, 609], "warn_miss": 88, "warn_with_traceback": 395, "wasn": [402, 458], "watch": [519, 613], "water": [430, 520, 608], "watson": 439, "wavelength": 414, "wavelet": [437, 455], "wc": [13, 16, 83, 104, 107, 111, 130, 172, 180, 181, 185, 196, 197, 198, 200, 205, 206, 208, 209, 210, 227, 230, 231, 240, 243, 254, 256, 267, 268, 272, 278, 282, 354, 390, 395, 401, 409, 414, 439, 440, 441, 443, 449, 457, 458, 462, 464, 474, 475, 478, 480, 481, 483, 485, 489, 494, 497, 501, 503, 507, 508, 510, 511, 512, 519, 529, 530, 532, 555, 558, 564, 565, 566, 571, 614], "wcd": 608, "wcda": [57, 70], "wcs_geom": [205, 230, 254, 509, 559], "wcs_geom_3d": 509, "wcs_geom_cel": 509, "wcs_map": [209, 210, 388], "wcs_tile": [196, 198], "wcsax": [104, 107, 111, 112, 198, 205, 206, 210, 230, 254, 390, 392, 483, 509, 532, 563, 567, 568, 569], "wcsconfig": 16, "wcsgeom": [23, 83, 104, 107, 111, 112, 113, 116, 118, 119, 125, 126, 137, 156, 165, 167, 177, 190, 191, 195, 196, 205, 209, 210, 226, 227, 231, 240, 243, 256, 258, 267, 268, 272, 278, 282, 396, 401, 409, 439, 442, 443, 444, 449, 462, 464, 465, 474, 478, 480, 485, 487, 488, 489, 492, 497, 501, 503, 504, 507, 508, 509, 510, 512, 519, 520, 530, 532, 542, 544, 553, 555, 556, 559, 563, 565, 566, 567, 568], "wcslib": 395, "wcsmap": [197, 198, 200, 210, 460], "wcsmapaxi": 426, "wcsndmap": [104, 107, 113, 118, 121, 137, 145, 165, 167, 170, 172, 174, 179, 180, 181, 182, 185, 190, 191, 196, 197, 198, 200, 206, 208, 209, 211, 212, 230, 254, 270, 278, 382, 388, 390, 401, 442, 443, 444, 446, 449, 451, 458, 460, 463, 464, 478, 480, 489, 501, 503, 508, 509, 519, 532, 542, 544, 552, 555], "wcsprm": 571, "wcsshape": 509, "we": [13, 19, 20, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 65, 83, 88, 89, 90, 92, 96, 103, 137, 179, 205, 208, 218, 224, 227, 228, 231, 232, 234, 235, 236, 237, 240, 241, 242, 243, 244, 245, 246, 247, 248, 251, 258, 259, 260, 261, 262, 266, 267, 268, 269, 271, 274, 275, 276, 281, 282, 287, 369, 395, 396, 398, 400, 401, 402, 404, 405, 406, 407, 408, 409, 412, 413, 414, 415, 416, 417, 418, 419, 422, 423, 425, 426, 427, 428, 429, 430, 431, 432, 434, 437, 438, 439, 440, 445, 449, 451, 456, 457, 458, 459, 468, 469, 470, 472, 474, 475, 476, 477, 478, 480, 481, 483, 484, 485, 486, 487, 488, 489, 492, 494, 495, 496, 497, 499, 500, 501, 502, 503, 504, 505, 507, 508, 509, 510, 511, 512, 513, 514, 515, 517, 518, 519, 524, 527, 529, 530, 532, 543, 550, 551, 553, 555, 558, 570, 574, 584, 606, 609, 610, 611, 612, 613], "weak": [414, 425, 504, 513, 515], "weaker": 293, "weakli": 510, "web": [88, 92, 403, 422, 428, 434, 435, 449, 457, 465, 502], "webpag": [397, 403, 416, 422, 426, 427, 457, 460], "websit": 465, "wedg": 409, "week": [398, 403, 413, 416, 421, 427], "weekli": [401, 404, 408, 409, 494], "wegen": [457, 458], "weigh": [167, 170, 515], "weight": [67, 77, 107, 112, 148, 155, 156, 162, 165, 167, 170, 196, 197, 198, 200, 205, 206, 208, 209, 210, 223, 239, 249, 263, 280, 285, 315, 424, 425, 426, 459, 463, 486, 515, 542, 558], "weighted_chi2_paramet": 486, "weighted_kernel": 165, "weighted_sampl": [425, 513], "welcom": [400, 409, 519], "well": [11, 19, 20, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 56, 67, 83, 88, 92, 107, 112, 117, 120, 125, 126, 134, 196, 200, 202, 206, 208, 218, 224, 227, 228, 230, 231, 232, 234, 235, 236, 237, 240, 241, 242, 243, 244, 245, 246, 247, 248, 251, 254, 258, 259, 260, 261, 262, 266, 267, 268, 269, 271, 274, 275, 276, 281, 282, 385, 386, 394, 395, 396, 397, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 422, 423, 425, 426, 427, 428, 429, 430, 431, 434, 435, 438, 440, 441, 442, 443, 444, 445, 446, 449, 451, 452, 457, 458, 459, 463, 464, 469, 470, 471, 477, 481, 486, 488, 494, 496, 499, 503, 504, 505, 507, 508, 509, 510, 512, 513, 517, 518, 519, 522, 524, 529, 530, 532, 542, 543, 544, 546, 555, 558, 559, 606, 607, 609, 611], "went": 438, "were": [16, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 84, 87, 91, 106, 127, 141, 303, 395, 400, 401, 402, 403, 408, 410, 411, 412, 413, 414, 416, 417, 419, 421, 424, 428, 438, 441, 442, 443, 444, 445, 446, 449, 452, 457, 458, 461, 484, 497, 499, 510, 513, 515, 518, 612], "wg": 427, "what": [13, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 46, 287, 320, 321, 351, 396, 401, 409, 412, 414, 416, 423, 425, 426, 428, 436, 489, 501, 502, 504, 505, 513, 518, 519, 524, 530, 531, 534, 542, 559, 593, 609, 610, 613], "whatev": [409, 411, 412, 609], "wheel": [412, 465], "when": [16, 19, 20, 26, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 52, 53, 83, 84, 86, 87, 88, 89, 90, 91, 92, 101, 103, 104, 105, 106, 107, 109, 110, 111, 112, 125, 126, 127, 128, 144, 155, 156, 162, 167, 169, 170, 177, 180, 183, 197, 198, 200, 202, 204, 206, 209, 210, 215, 216, 218, 220, 222, 224, 225, 228, 230, 232, 234, 235, 236, 239, 241, 245, 247, 248, 249, 251, 254, 255, 257, 259, 260, 261, 263, 266, 271, 273, 274, 275, 276, 279, 282, 283, 285, 320, 321, 333, 394, 395, 396, 398, 400, 401, 402, 405, 407, 409, 410, 412, 415, 416, 421, 422, 423, 424, 426, 427, 430, 431, 432, 443, 451, 452, 457, 459, 462, 463, 464, 469, 476, 481, 485, 488, 489, 494, 495, 497, 502, 505, 508, 509, 512, 514, 518, 519, 542, 544, 546, 551, 553, 557, 558, 608, 610, 611, 612, 613], "when_us": [87, 91], "whenev": [88, 92], "where": [11, 16, 19, 20, 26, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 52, 69, 83, 84, 87, 88, 89, 91, 92, 106, 126, 127, 128, 131, 137, 154, 155, 156, 162, 167, 170, 172, 183, 194, 195, 196, 197, 198, 200, 202, 205, 206, 208, 209, 210, 211, 222, 224, 225, 226, 227, 228, 229, 230, 231, 232, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 251, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 278, 279, 280, 281, 282, 283, 284, 285, 300, 303, 306, 308, 312, 319, 320, 321, 358, 396, 398, 400, 402, 403, 404, 405, 406, 407, 408, 409, 411, 413, 414, 415, 416, 417, 418, 419, 420, 423, 424, 426, 428, 430, 432, 434, 440, 452, 458, 468, 474, 480, 487, 488, 502, 508, 509, 510, 512, 513, 515, 518, 519, 520, 532, 534, 542, 543, 546, 551, 558, 564, 565, 566, 569, 570, 574, 608, 609, 610, 611, 612, 613], "wherea": [401, 409, 412, 415, 425, 513, 609], "whether": [16, 19, 20, 26, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 83, 84, 86, 87, 88, 89, 91, 92, 101, 104, 106, 107, 109, 111, 112, 126, 127, 128, 129, 137, 151, 152, 153, 154, 157, 158, 159, 161, 164, 166, 168, 169, 183, 195, 196, 197, 198, 199, 200, 201, 202, 205, 206, 207, 208, 209, 210, 215, 224, 225, 228, 230, 232, 234, 235, 236, 241, 245, 247, 248, 251, 254, 255, 257, 259, 260, 261, 266, 271, 273, 274, 275, 276, 279, 280, 282, 283, 298, 319, 320, 321, 330, 357, 360, 362, 363, 392, 400, 402, 409, 412, 414, 416, 423, 425, 463, 477, 492, 504, 508, 509, 532, 558, 610, 611], "which": [16, 19, 20, 26, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 41, 43, 56, 57, 59, 67, 70, 72, 77, 80, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 94, 95, 96, 97, 101, 103, 104, 106, 107, 109, 111, 112, 121, 123, 125, 126, 127, 128, 129, 130, 132, 133, 134, 135, 136, 137, 138, 141, 145, 146, 147, 151, 152, 153, 154, 157, 158, 159, 161, 164, 165, 166, 167, 168, 169, 170, 172, 173, 177, 178, 183, 184, 194, 195, 196, 197, 198, 200, 201, 202, 205, 206, 208, 209, 210, 213, 215, 218, 220, 224, 225, 226, 227, 228, 230, 231, 232, 234, 235, 236, 240, 241, 243, 247, 248, 251, 254, 255, 256, 257, 258, 259, 260, 261, 266, 267, 268, 270, 271, 272, 273, 274, 275, 276, 278, 279, 280, 282, 283, 287, 293, 295, 298, 299, 303, 304, 305, 307, 312, 313, 314, 317, 320, 321, 333, 343, 353, 354, 372, 382, 384, 389, 391, 394, 396, 398, 400, 401, 402, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 422, 423, 424, 425, 426, 427, 428, 429, 430, 432, 433, 435, 439, 440, 441, 443, 444, 445, 446, 449, 452, 458, 460, 463, 465, 468, 469, 470, 474, 477, 478, 480, 481, 483, 486, 487, 488, 489, 494, 496, 497, 499, 500, 502, 503, 504, 505, 508, 509, 510, 511, 512, 513, 514, 515, 518, 519, 520, 521, 529, 530, 532, 536, 537, 542, 543, 544, 546, 548, 549, 550, 551, 552, 553, 555, 557, 558, 559, 560, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 596, 597, 598, 599, 600, 601, 602, 606, 607, 608, 609, 610, 611, 612], "whichev": [196, 197, 198], "while": [88, 92, 107, 197, 198, 200, 202, 206, 209, 210, 395, 398, 400, 401, 402, 404, 407, 408, 410, 414, 417, 418, 420, 421, 422, 425, 427, 428, 430, 468, 474, 476, 480, 488, 496, 497, 503, 504, 507, 508, 509, 511, 512, 513, 542, 544, 546, 557, 559, 609], "whilst": [396, 514, 524, 531], "whippl": 98, "whirlwind": 524, "white": [304, 384, 385, 485, 497, 505, 511, 534, 559], "whitespac": 339, "who": [422, 501, 534], "whole": [96, 121, 174, 177, 184, 187, 188, 190, 191, 196, 197, 198, 200, 209, 210, 255, 286, 295, 299, 395, 401, 407, 410, 415, 422, 470, 474, 483, 488, 494, 497, 503, 512, 519, 521, 551, 606], "whose": [422, 428, 488, 552, 565], "why": [395, 396, 400, 402, 409, 505, 559], "wich": 425, "wide": [402, 422, 423, 426, 439, 458, 472, 484, 608], "wider": [495, 510, 553], "widget": [197, 198, 200, 206, 209, 210, 483, 492, 509, 529, 530], "width": [16, 27, 68, 83, 88, 92, 104, 107, 111, 112, 113, 114, 115, 117, 118, 120, 121, 131, 137, 154, 155, 156, 159, 162, 165, 167, 170, 172, 177, 182, 195, 196, 197, 198, 199, 200, 201, 202, 205, 206, 207, 208, 209, 210, 227, 230, 231, 240, 242, 243, 254, 256, 267, 268, 270, 272, 278, 280, 282, 385, 386, 411, 419, 459, 475, 476, 478, 480, 481, 483, 485, 486, 487, 488, 489, 492, 494, 497, 501, 502, 503, 507, 508, 509, 510, 512, 519, 520, 529, 530, 532, 553, 555, 556, 557, 558, 559, 564, 565, 566, 568, 569, 570, 614], "width_err": 502, "width_error": 68, "width_min": 205, "width_pix": [196, 197, 198], "widthconfig": 16, "wiki": [34, 83, 89, 312, 314, 320, 321, 449, 521], "wikipedia": [34, 83, 89, 312, 314, 320, 321, 350, 409, 413], "wilei": 139, "wilk": [293, 312, 314, 544, 611], "willing": 398, "wind": [50, 481, 486, 512, 537], "window": [114, 115, 394, 395, 402, 412, 428, 429, 430, 432, 438, 454, 458, 478, 502, 608, 609, 611], "wise": [19, 20, 26, 88, 92, 145, 146, 198, 224, 225, 226, 227, 228, 229, 230, 231, 232, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 251, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 278, 279, 280, 281, 282, 283, 284, 285, 424, 451, 465, 481, 483, 542], "wish": [205, 320, 321, 396, 398, 413, 486, 505], "with_bbox": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40], "with_bounding_box": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40], "with_units_from_data": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40], "withdraw": [405, 406, 407, 410, 418, 420], "withdrawn": [399, 400, 405, 406, 407, 410, 415, 418, 420, 426], "within": [129, 132, 145, 196, 210, 229, 230, 231, 237, 242, 243, 244, 245, 246, 254, 262, 267, 269, 270, 281, 284, 381, 394, 395, 396, 400, 404, 409, 411, 412, 413, 414, 416, 419, 421, 422, 424, 425, 427, 428, 429, 430, 432, 452, 455, 457, 461, 463, 465, 475, 476, 483, 486, 494, 495, 496, 499, 502, 504, 507, 508, 509, 512, 513, 514, 519, 524, 525, 532, 542, 545, 546, 608, 611], "without": [13, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 133, 134, 157, 195, 196, 201, 205, 208, 249, 320, 321, 392, 395, 398, 400, 403, 405, 409, 410, 411, 412, 414, 420, 425, 426, 428, 430, 431, 439, 440, 444, 465, 475, 478, 483, 484, 499, 501, 508, 509, 510, 513, 529, 546, 557, 558, 559, 604, 609, 611], "without_units_for_data": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40], "wl": [26, 501], "wo": 497, "wobbl": [96, 496, 518], "wobbleregionfind": 451, "wobbleregionsfind": 476, "wojmtw1p": 499, "wolfram": [348, 349], "women": 454, "won": [121, 125, 129, 133, 137, 366, 421, 483, 509, 518, 612], "wong": [441, 465], "wood": [402, 455, 457, 458], "word": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 546], "work": [11, 13, 16, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 88, 92, 101, 128, 207, 222, 320, 321, 358, 394, 395, 396, 398, 400, 402, 403, 404, 405, 406, 407, 409, 410, 411, 412, 413, 414, 415, 416, 418, 421, 422, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 437, 438, 439, 440, 441, 443, 444, 450, 453, 454, 455, 456, 457, 458, 459, 460, 465, 468, 470, 472, 474, 475, 476, 477, 478, 480, 481, 483, 484, 485, 486, 487, 488, 489, 492, 494, 495, 496, 497, 499, 501, 502, 503, 505, 507, 508, 509, 510, 511, 512, 515, 517, 518, 519, 520, 521, 529, 530, 532, 542, 546, 556, 558, 571, 574, 597, 603, 604, 609], "workaround": [412, 465], "workflow": [396, 403, 404, 411, 415, 417, 421, 428, 430, 432, 443, 465, 475, 481, 524, 529, 530, 531], "workshop": 404, "world": [83, 208, 230, 254, 395, 401, 485, 532, 558], "worst": [398, 415], "worth": [395, 426, 534], "would": [16, 84, 87, 88, 91, 92, 96, 106, 127, 197, 198, 200, 206, 209, 210, 249, 395, 398, 401, 402, 403, 406, 407, 409, 410, 411, 412, 413, 414, 415, 416, 417, 420, 422, 423, 425, 426, 440, 449, 472, 474, 477, 478, 492, 505, 509, 510, 512, 515, 519, 559], "wouldn": 409, "wrap": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 202, 266, 329, 381, 409, 442, 465], "wrap_at": 406, "wrap_coord": 202, "wrapped_v": 381, "wrapper": [56, 255, 266, 333, 409, 410, 425, 440, 443, 513, 534, 546], "write": [11, 15, 16, 26, 82, 86, 88, 89, 92, 101, 103, 104, 107, 109, 111, 112, 126, 128, 151, 152, 153, 154, 155, 156, 157, 158, 159, 161, 162, 164, 165, 166, 167, 168, 169, 170, 197, 198, 200, 204, 206, 209, 210, 216, 230, 245, 254, 278, 279, 280, 281, 282, 363, 372, 396, 398, 404, 405, 406, 407, 408, 409, 411, 412, 414, 416, 418, 419, 420, 422, 423, 424, 426, 428, 434, 437, 443, 446, 451, 453, 456, 457, 458, 459, 464, 465, 468, 474, 483, 484, 487, 489, 507, 511, 512, 518, 519, 527, 529, 530, 546, 551, 610, 612], "write_arf": 109, "write_bkg": 109, "write_covari": [15, 101, 216, 230, 254], "write_dataset": 15, "write_ds9": 512, "write_model": 15, "write_pha": 109, "write_rmf": 109, "writeabl": 424, "writer": [88, 92, 416, 423], "writeto": [86, 151, 152, 153, 157, 158, 159, 161, 164, 166, 168, 169], "written": [89, 101, 103, 104, 107, 109, 111, 112, 126, 128, 155, 156, 162, 167, 170, 197, 198, 200, 204, 206, 209, 210, 212, 395, 396, 398, 400, 404, 405, 416, 422, 424, 461, 468, 488, 511, 513, 515, 534, 542, 543, 546, 559, 608], "wrong": [395, 447, 461, 462, 463], "wrote": 422, "wrt": [83, 167, 170, 395, 413, 496, 604], "wstat": [107, 112, 309, 310, 407, 437, 455, 456, 469, 474, 475, 477, 481, 485, 497, 503, 515, 517, 542, 608], "wstatcountsstatist": [497, 611], "wt": [26, 501], "wtqc87c6": 499, "wun": 441, "wupduca4": 499, "www": [67, 88, 92, 139, 312, 314, 416, 426, 518], "wyatt": [437, 608], "x": [19, 20, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 46, 67, 68, 88, 92, 104, 111, 131, 139, 145, 152, 202, 206, 207, 215, 218, 220, 224, 227, 228, 231, 232, 234, 235, 236, 237, 240, 241, 242, 243, 244, 245, 246, 247, 248, 251, 258, 259, 260, 261, 262, 266, 267, 268, 269, 271, 274, 275, 276, 281, 282, 298, 304, 305, 308, 320, 321, 324, 325, 326, 328, 332, 334, 339, 348, 384, 387, 388, 395, 396, 400, 402, 403, 404, 409, 421, 425, 426, 427, 430, 432, 472, 477, 478, 485, 488, 497, 499, 500, 502, 505, 507, 509, 513, 515, 519, 532, 540, 546, 564, 565, 609, 611], "x27": [504, 507], "x86_64": [468, 470, 474, 475, 476, 477, 478, 480, 481, 483, 484, 485, 486, 487, 488, 489, 494, 495, 496, 497, 501, 502, 503, 505, 508, 509, 510, 511, 512, 515, 517, 518, 519, 520, 521, 529, 530, 532], "x_": 131, "x_0": [197, 198, 200, 206, 209, 210], "x_1": 333, "x_2": 333, "x_3": 333, "x_bkg": 497, "x_edg": 132, "x_high": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40], "x_i": [197, 198, 200, 206, 209, 210], "x_j": 131, "x_low": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40], "x_max": [131, 346, 348, 489], "x_min": [131, 346, 348, 489], "x_n": [197, 198, 200, 206, 209, 210], "x_r_0": 243, "x_ref": [131, 489], "x_sigma": 240, "x_stddev": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40], "x_valu": [215, 505], "xarg": 395, "xaxi": [504, 546], "xerr": [468, 499, 515], "xf": 518, "xfail": 395, "xlabel": [396, 463, 481, 496, 499, 515, 519, 538, 539, 540, 564, 603], "xlim": [382, 483, 515, 519, 540, 614], "xmax": [17, 18, 21, 22, 24, 25, 27, 206, 424], "xmin": [17, 18, 21, 22, 24, 25, 27, 206, 424], "xml": [404, 405, 406, 415, 442, 456, 458, 518, 534], "xmltodict": [450, 518], "xref": 131, "xspec": [232, 283, 316, 456, 469, 610], "xtf5mwmj": 512, "xunit": [476, 574], "xviii": 416, "xx": [406, 422], "xxx": [88, 92, 400, 422], "xxx_by_coord": 509, "xxxx": 546, "xy": [474, 485, 489, 564], "xy_posit": [33, 34, 38], "xytext": 564, "xyz": 427, "y": [19, 20, 26, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 46, 68, 88, 92, 145, 152, 202, 215, 224, 225, 228, 232, 234, 235, 236, 241, 247, 248, 251, 255, 257, 259, 260, 261, 266, 271, 273, 274, 275, 276, 279, 283, 320, 321, 324, 325, 326, 328, 332, 334, 387, 395, 409, 421, 430, 432, 463, 468, 478, 485, 488, 499, 505, 513, 515, 540, 546], "y58ma9gn": 499, "y_high": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40], "y_low": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40], "y_stddev": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40], "y_valu": [215, 505], "yaml": [11, 15, 16, 20, 26, 84, 87, 91, 100, 101, 103, 104, 106, 107, 111, 112, 126, 127, 147, 148, 224, 225, 226, 227, 228, 229, 230, 231, 232, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 251, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 278, 279, 280, 281, 282, 283, 284, 285, 293, 357, 360, 362, 363, 394, 403, 404, 406, 407, 408, 411, 412, 415, 418, 423, 424, 427, 428, 429, 441, 442, 443, 446, 451, 460, 464, 465, 468, 470, 474, 476, 477, 478, 480, 481, 483, 484, 485, 486, 487, 488, 489, 494, 495, 496, 497, 501, 502, 503, 505, 508, 509, 510, 511, 512, 515, 517, 518, 519, 520, 521, 530, 532, 545, 606, 607, 608, 609], "yaml_str": [230, 254, 475], "yaxi": [472, 504, 546], "ye": 428, "year": [45, 61, 65, 78, 395, 400, 402, 403, 405, 412, 416, 417, 421, 423, 428, 455, 457, 458, 484, 486, 502, 518, 538, 539, 540, 541], "yearli": [431, 456], "yellow": 385, "yerr": [497, 499], "yet": [90, 394, 395, 400, 402, 409, 412, 416, 417, 465, 466, 472, 475, 529, 613], "yield": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 82, 83, 89, 93, 197, 198, 200, 206, 209, 210, 358, 402, 408, 409, 414, 417, 419, 424, 510, 610, 611, 612], "yk04": [45, 48], "yk04b": 48, "ylabel": [396, 496, 499, 515, 519, 538, 539, 540, 564, 603], "ylim": [382, 469, 481, 515, 519, 538, 540, 581, 590, 591, 592, 614], "ymax": [564, 565], "ymin": [564, 565], "yml": [398, 412, 427, 428, 429, 430, 432, 457, 465], "you": [16, 19, 20, 26, 67, 82, 83, 84, 87, 88, 91, 92, 95, 103, 106, 109, 127, 128, 145, 152, 154, 157, 180, 197, 198, 200, 206, 209, 210, 215, 222, 224, 225, 228, 232, 234, 235, 236, 241, 247, 248, 251, 255, 257, 259, 260, 261, 266, 271, 273, 274, 275, 276, 279, 283, 286, 293, 320, 321, 394, 395, 396, 397, 398, 400, 402, 405, 409, 412, 413, 427, 428, 429, 430, 431, 432, 433, 434, 435, 438, 439, 440, 449, 457, 458, 459, 465, 469, 470, 472, 474, 475, 476, 477, 480, 481, 483, 485, 487, 488, 492, 495, 496, 497, 499, 502, 503, 504, 505, 508, 509, 510, 511, 512, 513, 515, 518, 519, 520, 521, 522, 524, 525, 529, 530, 532, 542, 543, 546, 549, 553, 557, 582, 606, 609, 610, 611, 612, 613], "your": [16, 19, 20, 26, 84, 87, 91, 100, 106, 127, 224, 225, 228, 232, 234, 235, 236, 241, 247, 248, 251, 255, 257, 259, 260, 261, 266, 271, 273, 274, 275, 276, 279, 283, 394, 395, 396, 398, 400, 402, 427, 428, 429, 430, 431, 432, 434, 435, 438, 439, 440, 443, 444, 449, 458, 459, 468, 469, 470, 472, 474, 476, 477, 478, 480, 481, 483, 484, 485, 486, 487, 488, 489, 492, 494, 495, 496, 497, 499, 500, 501, 502, 503, 504, 505, 507, 508, 509, 510, 511, 512, 513, 514, 515, 517, 518, 519, 520, 521, 524, 527, 529, 530, 532, 541, 546, 563, 564, 565, 566, 567, 568, 569, 570, 571, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 596, 597, 598, 599, 600, 601, 602, 603, 604, 606, 608, 611], "yourself": [609, 610], "yr": [45, 52, 53, 536, 538, 539, 540], "yscale": [481, 601], "yt": 395, "yu": [441, 465], "yunit": [474, 476, 501, 502, 519, 585], "yusifov": [39, 40], "yusifovkucuk2004": [28, 29, 30, 35, 36, 40, 48], "yusifovkucuk2004b": [28, 29, 30, 35, 36, 39, 48], "yve": 457, "yy": 422, "yyyi": 422, "z": [19, 20, 26, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 41, 46, 88, 92, 148, 320, 321, 324, 325, 328, 421, 422, 425, 430, 432, 501, 513, 536, 574], "z625bwdn": 469, "z_0": 29, "z_high": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40], "z_low": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40], "zabalza": 453, "zanin": [457, 458], "zd": 83, "zen": 514, "zen_pnt": 514, "zenith": [83, 426, 468, 484, 514, 518, 519, 520, 551], "zenith_angl": [83, 423, 519, 532], "zenodo": [422, 451, 518], "zero": [52, 53, 67, 88, 92, 101, 104, 107, 111, 112, 137, 145, 154, 155, 156, 159, 162, 167, 183, 197, 198, 200, 206, 209, 210, 258, 280, 282, 333, 339, 351, 395, 442, 445, 460, 465, 502, 508, 509, 513, 515, 612], "zhao": [27, 464], "zhen": 139, "zip": [410, 424, 427, 468, 469, 470, 472, 474, 475, 476, 477, 478, 480, 481, 483, 484, 485, 486, 487, 488, 489, 492, 494, 495, 496, 497, 499, 500, 501, 502, 503, 504, 505, 507, 508, 509, 510, 511, 512, 513, 514, 515, 517, 518, 519, 520, 521, 524, 527, 529, 530, 532, 540, 560, 563, 564, 565, 566, 567, 568, 569, 570, 571, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 596, 597, 598, 599, 600, 601, 602, 603, 604], "zl": [26, 501], "zone": 497, "zsh": 396, "zt": [26, 501], "zvcy8ydn": 508, "zwl7ig": 499, "z\u00e9": 456, "\u00e0": 455, "\u0261\u00e6m\u0259pa\u026a": 546, "\u03b3": [141, 534, 608], "\u03c3": [28, 486]}, "titles": ["analysis - High level interface", "astro - Astrophysics", "catalog - Source catalogs", "data - DL3 data and observations", "datasets - Reduced datasets", "estimators - High level estimators", "API reference", "irf - Instrument response functions", "makers - Data reduction", "maps - Sky maps", "modeling - Models and fitting", "scripts - Command line tools", "stats - Statistics", "utils - Utilities", "visualization - Plotting features", "Analysis", "AnalysisConfig", "BurkertProfile", "DMProfile", "DarkMatterAnnihilationSpectralModel", "DarkMatterDecaySpectralModel", "EinastoProfile", "IsothermalProfile", "JFactory", "MooreProfile", "NFWProfile", "PrimaryFlux", "ZhaoProfile", "CaseBattacharya1998", "Exponential", "FaucherKaspi2006", "FaucherKaspi2006VelocityBimodal", "FaucherKaspi2006VelocityMaxwellian", "FaucherSpiral", "LogSpiral", "Lorimer2006", "Paczynski1990", "Paczynski1990Velocity", "ValleeSpiral", "YusifovKucuk2004", "YusifovKucuk2004B", "add_observed_parameters", "add_pulsar_parameters", "add_pwn_parameters", "add_snr_parameters", "make_base_catalog_galactic", "make_catalog_random_positions_cube", "make_catalog_random_positions_sphere", "radial_distributions", "velocity_distributions", "PWN", "Pulsar", "SNR", "SNRTrueloveMcKee", "SimplePulsar", "CATALOG_REGISTRY", "SourceCatalog", "SourceCatalog1LHAASO", "SourceCatalog2FHL", "SourceCatalog2HWC", "SourceCatalog2PC", "SourceCatalog3FGL", "SourceCatalog3FHL", "SourceCatalog3HWC", "SourceCatalog3PC", "SourceCatalog4FGL", "SourceCatalogGammaCat", "SourceCatalogHGPS", "SourceCatalogLargeScaleHGPS", "SourceCatalogObject", "SourceCatalogObject1LHAASO", "SourceCatalogObject2FHL", "SourceCatalogObject2HWC", "SourceCatalogObject2PC", "SourceCatalogObject3FGL", "SourceCatalogObject3FHL", "SourceCatalogObject3HWC", "SourceCatalogObject3PC", "SourceCatalogObject4FGL", "SourceCatalogObjectGammaCat", "SourceCatalogObjectHGPS", "SourceCatalogObjectHGPSComponent", "DataStore", "EventList", "EventListMetaData", "FixedPointingInfo", "GTI", "GTIMetaData", "HDUIndexTable", "Observation", "ObservationFilter", "ObservationMetaData", "ObservationTable", "Observations", "ObservationsEventsSampler", "PointingInfo", "PointingMode", "get_irfs_features", "observatory_locations", "DATASET_REGISTRY", "Dataset", "Datasets", "FermipyDatasetsReader", "FluxPointsDataset", "MapDataset", "MapDatasetEventSampler", "MapDatasetMetaData", "MapDatasetOnOff", "OGIPDatasetReader", "OGIPDatasetWriter", "ObservationEventSampler", "SpectrumDataset", "SpectrumDatasetOnOff", "apply_edisp", "create_empty_map_dataset_from_irfs", "create_map_dataset_from_observation", "create_map_dataset_geoms", "split_dataset", "apply_edisp", "create_map_dataset_from_dl4", "split_dataset", "ASmoothMapEstimator", "ESTIMATOR_REGISTRY", "EnergyDependentMorphologyEstimator", "Estimator", "ExcessMapEstimator", "FluxMaps", "FluxMetaData", "FluxPoints", "FluxPointsEstimator", "FluxProfileEstimator", "ImageProfile", "ImageProfileEstimator", "LightCurveEstimator", "ParameterEstimator", "ParameterSensitivityEstimator", "SensitivityEstimator", "TSMapEstimator", "combine_flux_maps", "combine_significance_maps", "compute_lightcurve_discrete_correlation", "compute_lightcurve_doublingtime", "compute_lightcurve_fpp", "compute_lightcurve_fvar", "estimate_exposure_reco_energy", "find_peaks", "find_peaks_in_flux_map", "get_combined_flux_maps", "get_combined_significance_maps", "get_rebinned_axis", "resample_energy_edges", "Background2D", "Background3D", "BackgroundIRF", "EDispKernel", "EDispKernelMap", "EDispMap", "EffectiveAreaTable2D", "EnergyDependentMultiGaussPSF", "EnergyDispersion2D", "FoVAlignment", "IRF", "IRFMap", "IRF_REGISTRY", "PSF3D", "PSFKernel", "PSFKing", "PSFMap", "ParametricPSF", "RadMax2D", "RecoPSFMap", "load_irf_dict_from_file", "AdaptiveRingBackgroundMaker", "DatasetsMaker", "FoVBackgroundMaker", "MAKER_REGISTRY", "Maker", "MapDatasetMaker", "PhaseBackgroundMaker", "ReflectedRegionsBackgroundMaker", "ReflectedRegionsFinder", "RegionsFinder", "RingBackgroundMaker", "SafeMaskMaker", "SpectrumDatasetMaker", "WobbleRegionsFinder", "make_counts_rad_max", "make_edisp_kernel_map", "make_edisp_map", "make_effective_livetime_map", "make_map_background_irf", "make_map_exposure_true_energy", "make_observation_time_map", "make_psf_map", "make_theta_squared_table", "Geom", "HpxGeom", "HpxMap", "HpxNDMap", "LabelMapAxis", "Map", "MapAxes", "MapAxis", "MapCoord", "Maps", "RegionGeom", "RegionNDMap", "TimeMapAxis", "WcsGeom", "WcsMap", "WcsNDMap", "containment_radius", "containment_region", "Covariance", "CovarianceResult", "Fit", "FitResult", "OptimizeResult", "Parameter", "Parameters", "PriorParameter", "PriorParameters", "Sampler", "SamplerResult", "BrokenPowerLawSpectralModel", "CompoundSpectralModel", "ConstantFluxSpatialModel", "ConstantSpatialModel", "ConstantSpectralModel", "ConstantTemporalModel", "DatasetModels", "DiskSpatialModel", "EBLAbsorptionNormSpectralModel", "EBL_DATA_BUILTIN", "ExpCutoffPowerLaw3FGLSpectralModel", "ExpCutoffPowerLawNormSpectralModel", "ExpCutoffPowerLawSpectralModel", "ExpDecayTemporalModel", "FoVBackgroundModel", "GaussianPrior", "GaussianSpatialModel", "GaussianSpectralModel", "GaussianTemporalModel", "GeneralizedGaussianSpatialModel", "GeneralizedGaussianTemporalModel", "LightCurveTemplateTemporalModel", "LinearTemporalModel", "LogParabolaNormSpectralModel", "LogParabolaSpectralModel", "LogUniformPrior", "MODEL_REGISTRY", "MeyerCrabSpectralModel", "Model", "ModelBase", "Models", "NaimaSpectralModel", "PiecewiseNormSpatialModel", "PiecewiseNormSpectralModel", "PointSpatialModel", "PowerLaw2SpectralModel", "PowerLawNormSpectralModel", "PowerLawSpectralModel", "PowerLawTemporalModel", "Prior", "SPATIAL_MODEL_REGISTRY", "SPECTRAL_MODEL_REGISTRY", "ScaleSpectralModel", "Shell2SpatialModel", "ShellSpatialModel", "SineTemporalModel", "SkyModel", "SmoothBrokenPowerLawSpectralModel", "SpatialModel", "SpectralModel", "SuperExpCutoffPowerLaw3FGLSpectralModel", "SuperExpCutoffPowerLaw4FGLDR3SpectralModel", "SuperExpCutoffPowerLaw4FGLSpectralModel", "TEMPORAL_MODEL_REGISTRY", "TemplateNDSpatialModel", "TemplateNDSpectralModel", "TemplateNPredModel", "TemplatePhaseCurveTemporalModel", "TemplateSpatialModel", "TemplateSpectralModel", "TemporalModel", "UniformPrior", "create_cosmic_ray_spectral_model", "create_crab_spectral_model", "create_fermi_isotropic_diffuse_model", "integrate_spectrum", "read_hermes_cube", "scale_plot_flux", "read_hermes_cube", "select_nested_models", "stat_profile_ul_scipy", "CashCountsStatistic", "Chi2AsymmetricErrorFitStatistic", "Chi2FitStatistic", "TimmerKonig_lightcurve_simulator", "WStatCountsStatistic", "cash", "cash_sum_cython", "compute_chisq", "compute_flux_doubling", "compute_fpp", "compute_fvar", "cstat", "discrete_correlation", "f_cash_root_cython", "get_wstat_gof_terms", "get_wstat_mu_bkg", "norm_bounds_cython", "sigma_to_ts", "structure_function", "ts_to_sigma", "weighted_cash_sum_cython", "wstat", "hierarchical_clustering", "standard_scaler", "D_SUN_TO_GALACTIC_CENTER", "FoVAltAzFrame", "FoVICRSFrame", "cartesian", "fov_to_sky", "galactic", "motion_since_birth", "polar", "sky_to_fov", "velocity_glon_glat", "HDULocation", "LazyFitsData", "earth_location_from_dict", "trapz_loglog", "ScaledRegularGridInterpolator", "interpolate_profile", "interpolation_scale", "BACKEND_DEFAULT", "METHOD_DEFAULT", "METHOD_KWARGS_DEFAULT", "N_JOBS_DEFAULT", "POOL_KWARGS_DEFAULT", "multiprocessing_manager", "run_multiprocessing", "InverseCDFSampler", "draw", "get_random_state", "normalize", "pdf", "sample_powerlaw", "sample_sphere", "sample_sphere_distance", "sample_times", "compound_region_to_regions", "make_concentric_annulus_sky_regions", "make_orthogonal_rectangle_sky_regions", "region_to_frame", "regions_to_compound_region", "from_yaml", "get_images_paths", "make_path", "read_yaml", "recursive_merge_dicts", "to_yaml", "write_yaml", "hstack_columns", "table_row_to_dict", "table_standardise_units_copy", "table_standardise_units_inplace", "Checker", "assert_quantity_allclose", "assert_skycoord_allclose", "assert_time_allclose", "mpl_plot_check", "requires_data", "requires_dependency", "absolute_time", "time_ref_from_dict", "time_ref_to_dict", "time_relative_to_ref", "standardise_unit", "unit_from_fits_image_hdu", "wrap_at", "MapPanelPlotter", "add_colorbar", "annotate_heatmap", "colormap_hess", "colormap_milagro", "plot_contour_line", "plot_distribution", "plot_heatmap", "plot_map_rgb", "plot_npred_signal", "plot_spectrum_datasets_off_regions", "plot_theta_squared_table", "Dependencies", "Developer How To", "Documentation How To", "Developer guide", "How to contribute to Gammapy", "PIGs", "PIG 1 - PIG purpose and guidelines", "PIG 2 - Organization of low level analysis code", "PIG 3 - Plan for dropping Python 2.7 support", "PIG 4 - Setup for tutorial notebooks and data", "PIG 5 - Gammapy 1.0 roadmap", "PIG 6 - CTA observation handling", "PIG 7 - Models", "PIG 8 - Datasets", "PIG 9 - Event sampling", "PIG 10 - Regions", "PIG 11 - Light curves", "PIG 12 - High level interface", "PIG 13 - Gammapy dependencies and distribution", "PIG 14 - Uncertainty estimation", "PIG 16 - Gammapy package structure", "PIG 17 - Provenance capture", "PIG 18 - Documentation", "PIG 19 - Gammapy package structure follow up", "PIG 20 - Global Model API", "PIG 21 - Models improvements", "PIG 22 - Unified flux estimators API", "PIG 23 - Gammapy release cycle and version numbering", "PIG 24 - Authorship policy", "PIG 25 - Metadata container for Gammapy", "PIG 26 - Model Priors API", "PIG 27 - Bayesian Inference using Nested Sampling", "PIG 28 - Gammapy version 2.0 Roadmap", "How to make a Gammapy release", "Project setup", "Virtual Environments", "Getting started", "Installation", "Recommended Setup", "Troubleshooting", "Using Gammapy", "Gammapy", "Release notes", "0.1 (Aug 25, 2014)", "0.10 (Jan 28, 2019)", "0.11 (Mar 29, 2019)", "0.12 (May 30, 2019)", "0.13 (Jul 26, 2019)", "0.14 (Sep 30, 2019)", "0.15 (Dec 3, 2019)", "0.16 (Feb 1, 2020)", "0.17 (Apr 1, 2020)", "0.18 (Nov 4th, 2020)", "0.18.1 (Nov 6th, 2020)", "0.18.2 (Nov 19th, 2020)", "0.19 (Nov 22nd, 2021)", "0.2 (Apr 13, 2015)", "0.20 (May 12th, 2022)", "0.20.1 (June 16th, 2022)", "0.3 (Aug 13, 2015)", "0.4 (Apr 20, 2016)", "0.5 (Nov 22, 2016)", "0.6 (Apr 28, 2017)", "0.7 (Feb 28, 2018)", "0.8 (Sep 23, 2018)", "0.9 (Nov 29, 2018)", "1.0 (November 10th, 2022)", "1.0.1 (March 14th, 2023)", "1.0.2 (December 6th, 2023)", "1.1 (June 13th 2023)", "1.2 (February 29th 2024)", "1.3 (November 26th, 2024)", "2.0 (unreleased)", "Computation times", "Point source sensitivity", "Account for spectral absorption due to the EBL", "Spectral analysis of extended sources", "Data analysis", "Flux point fitting", "Computation times", "Spectral analysis", "Spectral analysis with the HLI", "Spectral analysis with energy-dependent directional cuts", "1D spectrum simulation", "Source detection and significance maps", "2D Image", "2D map fitting", "Ring background map", "Computation times", "3D detailed analysis", "Multi instrument joint 3D and 1D analysis", "Basic image exploration and fitting", "Morphological energy dependence estimation", "Event sampling", "Sample a source with energy-dependent temporal evolution", "Flux Profile Estimation", "3D Cube", "Computation times", "3D map simulation", "Time", "Light curves", "Light curves for flares", "Simulating and fitting a time varying source", "Pulsar analysis", "Computation times", "Time resolved spectroscopy estimator", "Estimation of time variability in a lightcurve", "Dark matter spatial and spectral models", "Source catalogs", "Datasets - Reduced data, IRFs, models", "Estimators", "Fitting", "Package / API", "Using Gammapy IRFs", "Makers - Data reduction", "Maps", "Mask maps", "Modelling", "Models", "Bayesian analysis with nested sampling", "Observational clustering", "Priors", "Computation times", "Make a theta-square plot", "CTAO with Gammapy", "Fermi-LAT with Gammapy", "HAWC with Gammapy", "H.E.S.S. with Gammapy", "Model Gallery", "Computation times", "Tutorials", "Scripts", "Computation times", "Survey Map Script", "Computation times", "High level interface", "Low level API", "Introduction", "Data structures", "Computation times", "Dark matter", "Astrophysics", "Astrophysical source population models", "Astrophysical source models", "Pulsar Source Models", "Pulsar Wind Nebula Source Models", "Supernova Remnant Models", "Source catalogs", "Datasets (DL4)", "Data access and selection (DL3)", "Estimators (DL4 to DL5, and DL6)", "High Level Analysis Interface", "How To", "User guide", "Effective area", "Background", "Energy Dispersion", "Instrument Response Functions (DL3)", "Point Spread Function", "FoV background", "Data reduction (DL3 to DL4)", "Reflected regions background", "Ring background", "HEALPix-based maps", "Sky maps (DL4)", "RegionGeom and RegionNDMap", "Model gallery", "Computation times", "Spatial models", "Constant spatial model", "Disk spatial model", "Gaussian spatial model", "Generalized gaussian spatial model", "Piecewise norm spatial model", "Point spatial model", "Shell spatial model", "Shell2 spatial model", "Template spatial model", "Computation times", "Spectral models", "EBL absorption spectral model", "Broken power law spectral model", "Compound spectral model", "Constant spectral model", "Exponential cutoff power law spectral model", "Exponential cutoff power law spectral model used for 3FGL", "Exponential cutoff power law norm spectral model", "Gaussian spectral model", "Log parabola spectral model", "Log parabola spectral norm model", "Naima spectral model", "Piecewise  norm spectral model", "Power law spectral model", "Power law 2 spectral model", "Power law norm spectral model", "Smooth broken power law spectral model", "Super exponential cutoff power law model used for 3FGL", "Super Exponential Cutoff Power Law Model used for 4FGL-DR3", "Super Exponential Cutoff Power Law Model used for 4FGL-DR1 (and DR2)", "Template spectral model", "Computation times", "Temporal models", "Constant temporal model", "ExpDecay temporal model", "Gaussian temporal model", "Generalized Gaussian temporal model", "Linear temporal model", "PowerLaw temporal model", "Sine temporal model", "Phase curve temporal model", "Light curve temporal model", "Computation times", "Modeling and Fitting (DL4 to DL5)", "Fundamental Concepts: Gammapy analysis workflow and package structure", "Glossary and references", "Command line tools", "Fit statistics", "Statistics in Gammapy", "Derivation of the WStat formula", "Utility functions", "Visualization"], "titleterms": {"": [438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 451, 452, 454, 455, 456, 457, 458, 459, 475, 488, 521, 529], "0": [404, 426, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 466], "1": [400, 404, 424, 425, 436, 437, 444, 445, 447, 452, 460, 461, 462, 463, 464, 465, 513, 515], "10": [409, 436, 438], "10th": 460, "11": [410, 436, 439], "12": [411, 436, 440], "12th": 451, "13": [412, 436, 441, 450, 453], "13th": 463, "14": [413, 436, 442], "14th": 461, "15": [436, 443], "16": [414, 436, 444], "16th": 452, "17": [415, 436, 445], "18": [416, 436, 446, 447, 448], "19": [417, 436, 449], "19th": 448, "1d": [471, 475, 477, 484, 494, 495, 524], "1dc": 518, "2": [401, 402, 424, 425, 426, 436, 448, 450, 462, 464, 466, 513, 515, 587], "20": [418, 436, 451, 452, 454], "2014": 437, "2015": [450, 453], "2016": [454, 455], "2017": 456, "2018": [457, 458, 459], "2019": [438, 439, 440, 441, 442, 443], "2020": [444, 445, 446, 447, 448], "2021": 449, "2022": [451, 452, 460], "2023": [461, 462, 463], "2024": [464, 465], "21": 419, "2155": 504, "22": [420, 455], "22nd": 449, "23": [421, 458], "24": 422, "25": [423, 437], "26": [424, 441], "26th": 465, "27": 425, "28": [426, 438, 456, 457], "29": [439, 459], "29th": 464, "2d": [479, 480, 524], "3": [402, 424, 425, 436, 443, 453, 465, 513], "30": [440, 442], "304": 504, "32": 395, "3955": 424, "3d": [426, 483, 484, 490, 492, 494, 524], "3fgl": [579, 590], "3fhl": 484, "4": [403, 425, 436, 454], "4122": 424, "4fgl": [591, 592], "4th": 446, "5": [404, 436, 455], "6": [405, 436, 456], "64": 395, "6th": [447, 462], "7": [402, 406, 436, 457], "8": [407, 436, 458], "9": [408, 436, 459], "A": [474, 504], "As": [548, 549, 550, 552], "In": 396, "ON": [470, 476, 484], "On": 477, "The": [401, 428, 484, 486, 504, 505, 515, 543, 555], "To": [395, 396, 416, 546], "about": 515, "abov": 486, "absolute_tim": 375, "absorpt": [419, 469, 574], "abstract": [400, 401, 402, 403, 404, 405, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426], "accept": 398, "access": [396, 478, 503, 504, 509, 520, 543], "accessor": 558, "account": 469, "action": [395, 416], "ad": 509, "adapt": 478, "adaptiveringbackgroundmak": 172, "add": [406, 511], "add_colorbar": 383, "add_observed_paramet": 41, "add_pulsar_paramet": 42, "add_pwn_paramet": 43, "add_snr_paramet": 44, "addit": [419, 424, 426, 552, 607], "aeff_2d": 548, "against": 476, "aim": 511, "aka": 425, "algorithm": 499, "alia": 419, "all": [495, 513], "along": 423, "altern": [403, 406, 408, 409, 410, 411, 412, 413, 415, 416, 417, 420, 423], "amplitud": [424, 515], "an": [395, 468, 487, 488, 503, 510], "anaconda": 431, "analysi": [0, 11, 15, 401, 404, 426, 468, 470, 471, 474, 475, 476, 477, 483, 484, 485, 494, 497, 513, 524, 529, 542, 545, 607], "analysisconfig": 16, "angl": [548, 549, 550, 552], "angular": 559, "annihil": 501, "annotate_heatmap": 384, "api": [6, 395, 396, 418, 420, 423, 424, 425, 426, 460, 463, 464, 465, 504, 506, 524, 530], "apply_edisp": [113, 118], "approach": [410, 425, 470, 472, 475, 477, 478, 480, 481, 484, 487, 488, 489, 492, 494, 495, 496, 499, 500, 505, 510, 511, 513, 514, 529, 530], "apr": [445, 450, 454, 456], "arbitrari": 423, "area": [507, 518, 548], "argument": [395, 409], "arm": 536, "asmoothmapestim": 121, "assert": 395, "assert_quantity_allclos": 369, "assert_skycoord_allclos": 370, "assert_time_allclos": 371, "assess": [483, 505], "assign": [495, 511], "astro": [1, 534, 537], "astronomi": 410, "astrophys": [1, 535, 536, 537], "astropi": [395, 421], "asymmetr": 507, "attribut": [395, 396, 406], "aug": [437, 453], "author": 422, "authorship": 422, "avail": 502, "ax": [509, 559], "axi": [395, 551], "backend_default": 336, "background": [406, 410, 414, 418, 424, 481, 486, 487, 508, 511, 518, 519, 529, 549, 551, 553, 554, 555, 556, 610], "background2d": 151, "background3d": 152, "backgroundirf": 153, "backgroundirfmodel": 406, "backgroundmodel": 406, "backport": 395, "base": [420, 423, 557], "basic": [485, 509], "bayesian": [425, 500, 513], "between": 418, "bin": [410, 468, 486, 559], "binder": 428, "bit": 395, "bkg_2d": 549, "bkg_3d": 549, "block": 500, "boundari": 510, "branch": 427, "break": 395, "broken": [396, 575, 589], "brokenpowerlawspectralmodel": 224, "bsd": 395, "bug": [451, 460, 463, 464, 465], "bugfix": 427, "build": [396, 398, 428, 494, 495], "built": 606, "bullet": 396, "bundl": 395, "burkertprofil": 17, "butterfli": 530, "call": 406, "candid": [427, 478], "caplog": 395, "captur": [395, 415], "carlo": 513, "cartesian": 322, "case": [401, 405, 424, 425, 426, 612], "casebattacharya1998": 28, "cash": [300, 610, 611], "cash_sum_cython": 301, "cashcountsstatist": 295, "catalog": [2, 502, 510, 511, 532, 541], "catalog_registri": 55, "caveat": 610, "cell": 395, "certif": 398, "cff": 422, "chain": [474, 476, 513], "chang": [395, 417, 426, 460, 463, 464, 465], "changelog": 416, "character": 500, "check": [11, 395, 396, 433, 468, 470, 474, 475, 476, 477, 478, 480, 481, 483, 484, 485, 486, 487, 488, 489, 494, 495, 496, 497, 501, 502, 503, 505, 508, 509, 510, 511, 512, 515, 517, 518, 519, 520, 521, 529, 530, 532], "checker": 368, "chi": 486, "chi2asymmetricerrorfitstatist": 296, "chi2fitstatist": 297, "choos": 396, "citat": 422, "clarifi": 426, "class": [0, 1, 2, 3, 4, 5, 7, 8, 9, 10, 12, 13, 14, 395, 396, 405, 406, 420, 423, 530, 552, 611], "clean": 414, "cli": 609, "clobber": 395, "clumpi": 534, "cluster": [13, 514], "code": [395, 396, 401, 404, 428], "codemeta": 422, "collect": 422, "colormap": 614, "colormap_hess": 385, "colormap_milagro": 386, "combin": [511, 543], "combine_flux_map": 138, "combine_significance_map": 139, "command": [11, 609], "common": 504, "compar": [476, 494, 513], "comparison": [425, 513], "compound": [512, 576], "compound_region_to_region": 352, "compoundspectralmodel": 225, "comput": [426, 467, 468, 473, 474, 475, 481, 482, 485, 491, 498, 505, 516, 523, 526, 528, 530, 533, 561, 572, 594, 605], "compute_chisq": 302, "compute_flux_doubl": 303, "compute_fpp": 304, "compute_fvar": 305, "compute_lightcurve_discrete_correl": 140, "compute_lightcurve_doublingtim": 141, "compute_lightcurve_fpp": 142, "compute_lightcurve_fvar": 143, "concept": 607, "conda": 429, "confer": 422, "confid": 505, "config": [11, 480, 481, 609], "configur": [426, 475, 483, 489, 494, 504, 529, 607], "constant": [563, 577, 596], "constantfluxspatialmodel": 226, "constantspatialmodel": 227, "constantspectralmodel": 228, "constanttemporalmodel": 229, "contain": 423, "containment_radiu": 211, "containment_region": 212, "content": [503, 559], "context": [470, 472, 474, 475, 476, 477, 478, 480, 481, 484, 486, 487, 489, 492, 494, 495, 496, 499, 500, 510, 513, 514, 515, 529, 530], "contigu": 509, "continu": 428, "contour": 505, "contribut": [398, 422, 511], "contributor": [422, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465], "conveni": 407, "convent": 395, "converg": 425, "convers": [395, 504], "convert": 395, "coordin": [13, 395, 406, 549, 559], "corner": 513, "correct": 396, "correl": 481, "count": [504, 511, 519, 542, 611], "covari": [213, 505], "covarianceresult": 214, "creat": [470, 474, 480, 481, 488, 503, 504, 507, 509, 510, 530, 559], "create_cosmic_ray_spectral_model": 286, "create_crab_spectral_model": 287, "create_empty_map_dataset_from_irf": 114, "create_fermi_isotropic_diffuse_model": 288, "create_map_dataset_from_dl4": 119, "create_map_dataset_from_observ": 115, "create_map_dataset_geom": 116, "creation": [470, 475, 495, 517], "cstat": 306, "cta": [405, 518], "ctao": 518, "cube": [401, 490, 509, 524], "cumul": 470, "current": 421, "curv": [410, 494, 495, 496, 504, 603, 604], "custom": [512, 515, 606], "cut": [472, 476], "cutoff": [578, 579, 580, 590, 591, 592], "cutout": 509, "cycl": 421, "cython": [421, 428], "d_sun_to_galactic_cent": 319, "dark": [501, 534], "darkmatt": [1, 534], "darkmatterannihilationspectralmodel": 19, "darkmatterdecayspectralmodel": 20, "data": [3, 8, 395, 401, 403, 404, 410, 423, 426, 428, 469, 470, 471, 474, 475, 476, 483, 484, 486, 489, 494, 495, 497, 499, 503, 508, 509, 517, 520, 522, 524, 529, 530, 532, 543, 554, 609, 610], "dataflow": 423, "dataset": [4, 11, 100, 101, 395, 404, 407, 417, 418, 423, 426, 468, 470, 475, 476, 480, 481, 483, 484, 488, 494, 495, 496, 503, 504, 505, 508, 510, 511, 513, 515, 520, 529, 530, 542], "dataset_registri": 99, "datasetmodel": 230, "datasetsmak": 173, "datastor": [82, 518, 530], "dco": [398, 422], "deal": 396, "dec": 443, "decai": 501, "decemb": 462, "decis": [400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426], "default": 406, "defin": [468, 470, 474, 476, 485, 487, 488, 494, 495, 510, 513, 517, 530, 559], "definit": [422, 494, 513, 554], "depend": [394, 412, 419, 451, 476, 486, 488, 512], "deprec": [395, 421], "deriv": 612, "detail": [402, 483], "detect": [417, 426, 478, 485, 517, 551], "detector": 549, "develop": [395, 397, 398, 402], "diagram": 405, "differ": [484, 509, 613], "diffus": 519, "dilat": 510, "direct": 476, "discrete_correl": 307, "discuss": 410, "disk": [475, 488, 529, 530, 564], "diskspatialmodel": 231, "dispers": [507, 518, 519, 550], "dissolv": 414, "distribut": [412, 425, 426, 513, 536], "dl3": [3, 426, 484, 521, 543, 551, 554], "dl4": [507, 542, 544, 554, 558, 606], "dl5": [544, 606], "dl6": 544, "dmprofil": 18, "do": 395, "doc": 428, "docstr": 396, "document": [396, 398, 404, 416, 426, 464, 465], "doubl": 500, "download": [11, 428], "downsampl": 559, "dr1": [521, 592], "dr2": 592, "dr3": 591, "draw": 344, "driven": 609, "drop": 402, "due": 469, "durat": 508, "e": 521, "each": 486, "earli": 398, "earth_location_from_dict": 331, "ebl": [469, 574], "ebl_data_builtin": 233, "eblabsorptionnormspectralmodel": 232, "edg": 544, "edisp": 507, "edisp_2d": 550, "edispkernel": 154, "edispkernelmap": [155, 507], "edispmap": 156, "effect": [426, 507, 508, 518, 548], "effectiveareatable2d": 157, "einastoprofil": 21, "elaps": 613, "empti": 503, "encourag": 515, "end": 395, "energi": [419, 468, 476, 486, 488, 507, 510, 512, 517, 518, 519, 544, 548, 549, 550, 552], "energydependentmorphologyestim": 123, "energydependentmultigausspsf": 158, "energydispersion2d": 159, "environ": 429, "eros": 510, "error": [505, 611], "estim": [5, 124, 413, 417, 420, 423, 425, 426, 475, 478, 486, 489, 494, 499, 500, 504, 508, 544, 554, 555, 611], "estimate_exposure_reco_energi": 144, "estimator_registri": 122, "evalu": [406, 407, 408], "event": [404, 408, 426, 487, 488, 497, 509, 518, 519, 532, 543, 551], "eventlist": 83, "eventlistmetadata": 84, "evid": 425, "evolut": 488, "exampl": [428, 515, 541, 542, 544, 545, 553, 554, 555, 563, 564, 565, 566, 567, 568, 569, 570, 571, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 596, 597, 598, 599, 600, 601, 602, 610], "excess": [420, 470, 481, 500, 611], "excessmapestim": 125, "exclus": [474, 475, 481, 510, 529], "execut": 609, "exemplari": 424, "exercis": [468, 472, 474, 477, 483, 485, 487, 488, 496, 499, 518, 519, 520, 521, 532], "exist": 401, "expcutoffpowerlaw3fglspectralmodel": 234, "expcutoffpowerlawnormspectralmodel": 235, "expcutoffpowerlawspectralmodel": 236, "expdecai": 597, "expdecaytemporalmodel": 237, "expect": 551, "explor": [470, 475, 485, 522, 524], "exponenti": [29, 472, 578, 579, 580, 590, 591, 592], "expos": 406, "exposur": [507, 519], "extend": [470, 487], "extens": [396, 469], "extern": 395, "extra": 428, "extract": [481, 494, 495, 496], "extrapol": [395, 593], "f_cash_root_cython": 308, "factor": 501, "factori": 509, "factoris": 551, "faucherkaspi2006": 30, "faucherkaspi2006velocitybimod": 31, "faucherkaspi2006velocitymaxwellian": 32, "faucherspir": 33, "favor": 424, "featur": [14, 421, 427, 460, 463, 464, 465, 504], "feb": [444, 457], "februari": 464, "fermi": [484, 519], "fermipydatasetsread": 102, "fermist": 534, "file": [396, 422, 475, 480, 481, 484, 518, 529, 543, 559], "fill": [509, 559], "filter": 495, "final": [400, 427, 475, 612], "find_peak": 145, "find_peaks_in_flux_map": 146, "finder": 555, "first": [427, 475], "fit": [10, 13, 215, 404, 410, 425, 469, 470, 472, 474, 475, 476, 480, 483, 484, 485, 492, 496, 505, 510, 515, 519, 529, 530, 559, 606, 610, 611, 612], "fitresult": 216, "fix": [395, 451, 460, 463, 464, 465], "fixedpointinginfo": 85, "fixtur": 395, "flare": 495, "flexibl": 426, "float": 395, "flux": [420, 424, 468, 469, 472, 474, 475, 484, 489, 501, 502, 504, 529, 530, 532, 544], "fluxestim": 420, "fluxmap": [126, 420, 504], "fluxmetadata": 127, "fluxpoint": [128, 504], "fluxpointscollect": 420, "fluxpointsdataset": [103, 407, 503], "fluxpointsestim": [129, 544], "fluxprofileestim": 130, "fold": 406, "folder": 428, "follow": 417, "format": [395, 396, 426, 613], "formula": 612, "forward": 406, "found": 609, "four": 551, "fov": [508, 553], "fov_to_ski": 323, "fovalign": 160, "fovaltazfram": 320, "fovbackgroundmak": [174, 553], "fovbackgroundmodel": 238, "fovicrsfram": 321, "fraction": 500, "free": 425, "freez": [421, 427, 511], "from": [395, 425, 495, 509, 510, 511, 559], "from_yaml": 357, "fulli": 504, "function": [1, 3, 4, 5, 7, 8, 9, 10, 12, 13, 14, 395, 396, 518, 548, 549, 550, 551, 552, 611, 613], "fundament": 607, "further": [410, 469, 610], "galact": [324, 519], "galactocentr": 536, "galleri": [395, 396, 522, 524, 560], "gamlik": 534, "gamma": [410, 501, 551], "gammapi": [0, 1, 2, 3, 4, 5, 7, 8, 9, 10, 11, 12, 13, 14, 395, 398, 401, 404, 412, 414, 416, 417, 421, 422, 423, 426, 427, 428, 434, 435, 507, 518, 519, 520, 521, 534, 537, 541, 542, 543, 544, 545, 551, 553, 554, 555, 558, 606, 607, 611, 613], "gaussian": [565, 566, 581, 598, 599], "gaussianprior": 239, "gaussianspatialmodel": 240, "gaussianspectralmodel": 241, "gaussiantemporalmodel": 242, "gener": [395, 401, 405, 410, 422, 423, 544, 566, 599], "generalist": 420, "generalizedgaussianspatialmodel": 243, "generalizedgaussiantemporalmodel": 244, "geom": 195, "geometri": [470, 485, 494, 495, 509, 510, 529, 530, 557, 559], "get": [398, 416, 430, 469, 480, 481, 509, 517, 535, 536, 537, 543, 558], "get_combined_flux_map": 147, "get_combined_significance_map": 148, "get_images_path": 358, "get_irfs_featur": 97, "get_random_st": 345, "get_rebinned_axi": 149, "get_wstat_gof_term": 309, "get_wstat_mu_bkg": 310, "github": 395, "given": [511, 517], "global": 418, "glossari": 608, "good": 612, "gpl": 395, "group": 514, "gti": [86, 543], "gtimetadata": 87, "guid": [397, 547], "guidelin": [396, 400, 401, 416], "h": 521, "halv": 500, "handl": [395, 404, 405, 406, 418, 422, 426, 508, 613], "have": [403, 405, 410, 411, 420], "hawc": [484, 520], "hduindext": 88, "hduloc": 329, "healpix": 557, "help": 433, "helper": 407, "hess": 484, "hgp": 502, "hierarch": 514, "hierarchi": 423, "hierarchical_clust": 317, "high": [0, 5, 404, 411, 529, 545], "hli": 475, "how": [395, 396, 398, 416, 427, 509, 546], "hpxgeom": 196, "hpxmap": 197, "hpxndmap": 198, "hstack_column": 364, "i": [395, 398, 400, 426, 489], "idea": 405, "imag": [396, 401, 409, 414, 478, 479, 485, 509, 524], "imageprofil": 131, "imageprofileestim": 132, "impact": 425, "implement": [405, 406, 416, 422, 424, 425, 512, 515], "import": [395, 492], "improv": [406, 419, 451, 460, 463, 464, 465], "inbuilt": 507, "includ": [396, 515], "index": [509, 515, 543], "individu": [513, 551], "infer": 425, "info": [11, 395], "inform": [422, 502, 515, 550], "infrastructur": [426, 465], "input": [395, 423, 478], "inspect": 530, "instal": [416, 430, 431, 433], "instrument": [7, 484, 551], "integr": [13, 428, 468], "integrate_spectrum": 289, "interact": 418, "interest": 486, "interfac": [0, 404, 406, 411, 529, 545, 558], "intern": [426, 504], "interpol": [13, 395, 509], "interpolate_profil": 334, "interpolation_scal": 335, "interv": 495, "intrins": 469, "introduc": [406, 414, 417, 419, 420, 489], "introduct": [406, 409, 410, 412, 413, 416, 420, 422, 423, 468, 474, 476, 485, 497, 501, 502, 503, 508, 509, 518, 519, 520, 521, 524, 531, 532, 534, 536, 537, 610], "inversecdfsampl": 343, "ipython": 434, "irf": [7, 161, 404, 423, 468, 503, 507, 518, 551], "irf_registri": 163, "irfmap": 162, "isothermalprofil": 22, "isotrop": 519, "issu": [425, 433, 465], "iter": 509, "j": 501, "jan": 438, "jfactori": 23, "joint": [483, 484, 542], "json": 422, "jul": 441, "june": [452, 463], "jupyt": [395, 430, 432, 434], "kei": 504, "kernel": 507, "known": 465, "labelmapaxi": [199, 509], "lat": [484, 519], "latest": 518, "law": [472, 575, 578, 579, 580, 586, 587, 588, 589, 590, 591, 592], "lazi": 407, "lazyfitsdata": 330, "lc": 494, "let": 488, "level": [0, 5, 401, 404, 411, 529, 530, 545], "li": 497, "licens": 395, "light": [410, 494, 495, 496, 504, 604], "lightcurv": [410, 487, 496, 500, 502], "lightcurveestim": [133, 544], "lightcurvetemplatetemporalmodel": 245, "like": [487, 504], "likelihood": 612, "limit": [405, 513], "line": [11, 395, 609], "linear": 600, "lineartemporalmodel": 246, "link": 396, "list": [396, 406, 407, 408, 409, 410, 411, 412, 415, 425, 487, 495, 502, 509, 510, 511, 512, 532, 543], "literatur": 476, "livetim": 508, "load": [407, 468, 469, 472, 474, 476, 502, 504, 511, 513, 520], "load_irf_dict_from_fil": 171, "locat": 395, "log": [11, 395, 472, 582, 583], "logparabolanormspectralmodel": 247, "logparabolaspectralmodel": 248, "logspir": 34, "loguniformprior": 249, "long": 422, "loop": [470, 508, 530], "lorimer2006": 35, "low": [401, 530], "lt": 421, "ma": 497, "mai": [440, 451], "main": 426, "maintain": [402, 422], "mainten": 404, "major": [426, 427], "make": [395, 398, 427, 485, 488, 497, 517, 530], "make_base_catalog_galact": 45, "make_catalog_random_positions_cub": 46, "make_catalog_random_positions_spher": 47, "make_concentric_annulus_sky_region": 353, "make_counts_rad_max": 186, "make_edisp_kernel_map": 187, "make_edisp_map": 188, "make_effective_livetime_map": 189, "make_map_background_irf": 190, "make_map_exposure_true_energi": 191, "make_observation_time_map": 192, "make_orthogonal_rectangle_sky_region": 354, "make_path": 359, "make_psf_map": 193, "make_theta_squared_t": 194, "maker": [8, 176, 417, 423, 470, 495, 508, 529, 530, 553, 554, 555], "maker_registri": 175, "mamba": 431, "manag": [404, 431], "manipul": 426, "manual": [510, 514], "map": [9, 200, 204, 401, 404, 405, 426, 478, 480, 481, 484, 485, 492, 497, 501, 507, 509, 510, 511, 527, 532, 544, 557, 558, 559], "mapax": 201, "mapaxi": 202, "mapcoord": [203, 558], "mapdataset": [104, 407, 483, 487, 503, 520, 542], "mapdataseteventsampl": [105, 408], "mapdatasetmak": [177, 554], "mapdatasetmetadata": 106, "mapdatasetonoff": [107, 407], "mappanelplott": 382, "mar": 439, "march": 461, "margin": 425, "markov": 513, "mask": [409, 474, 475, 481, 503, 510, 529], "materi": 422, "matter": [501, 534], "measur": 610, "meet": 404, "messag": 395, "met": 613, "meta": 426, "metadata": [422, 423], "method": [396, 407, 408, 424, 500, 509, 544, 558], "method_default": 337, "method_kwargs_default": 338, "meyercrabspectralmodel": 251, "miniconda": 431, "minor": [417, 426], "minuit": 425, "mission": 613, "model": [10, 252, 254, 404, 406, 414, 418, 419, 423, 424, 425, 426, 469, 470, 474, 475, 476, 480, 483, 484, 485, 487, 488, 494, 495, 496, 499, 501, 502, 503, 505, 511, 512, 513, 515, 518, 522, 524, 529, 530, 532, 536, 537, 538, 539, 540, 560, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 606, 610], "model_registri": 250, "modelbas": 253, "modif": 510, "modifi": [395, 509, 512], "modul": [4, 5, 8, 10, 13], "mont": 513, "mooreprofil": 24, "morpholog": 486, "morphologi": [426, 512], "motion_since_birth": 325, "motiv": [424, 425], "mpl_plot_check": 372, "multi": 484, "multipl": [487, 511, 515, 542], "multiprocessing_manag": 341, "n_jobs_default": 339, "naima": 584, "naimaspectralmodel": 255, "name": [395, 406, 551], "nebula": 539, "need": 551, "nest": [425, 513], "new": [395, 406, 410, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 451, 452, 454, 455, 456, 457, 458, 459, 460, 463, 464, 465, 495], "next": [472, 474, 475, 478, 485, 494, 518, 520, 521, 529, 532], "nfwprofil": 25, "night": 494, "non": [395, 509, 559], "norm": [419, 512, 567, 580, 583, 585, 588], "norm_bounds_cython": 311, "normal": [346, 529], "notat": 611, "note": [395, 436, 474, 504, 505, 610], "notebook": [11, 395, 403, 434], "nov": [446, 447, 448, 449, 455, 459], "novemb": [460, 465], "now": 410, "nuisanc": [424, 426], "number": [395, 421, 551], "numpi": 421, "o": [426, 489], "object": [395, 396, 405, 418, 480, 481, 487, 488, 502, 504, 514], "observ": [3, 89, 93, 404, 405, 469, 474, 475, 485, 487, 488, 494, 495, 508, 514, 529, 530], "observationeventsampl": 110, "observationfilt": 90, "observationmetadata": 91, "observationseventssampl": 94, "observationt": 92, "observatory_loc": 98, "obtain": [468, 486, 496, 514], "off": [472, 474, 477, 484], "offset": [548, 549, 550, 552], "ogipdatasetread": 108, "ogipdatasetwrit": 109, "old": 428, "one": 504, "onto": 509, "open": 497, "oper": [509, 510], "optimizeresult": 217, "option": [394, 412, 505, 513], "org": 428, "organ": [401, 410], "origin": [395, 398], "other": [395, 396, 405, 428, 431, 534, 558], "outlin": 424, "outlook": [407, 408, 409, 411, 412, 414, 415, 416, 417, 420], "output": [395, 425, 513], "over": 497, "overview": [416, 430, 486, 518, 520, 553, 555, 556], "overwrit": 395, "own": 609, "packag": [0, 1, 2, 3, 4, 5, 7, 8, 9, 10, 12, 13, 14, 414, 417, 428, 431, 451, 506, 524, 534, 535, 607], "paczynski1990": 36, "paczynski1990veloc": 37, "panel": 614, "paper": 404, "parabola": [472, 582, 583], "parallel": [13, 407, 425], "paramet": [218, 219, 406, 419, 424, 425, 426, 475, 486, 505, 511, 512, 529], "parameterestim": 134, "parametersensitivityestim": 135, "parametr": 406, "parametricpsf": 168, "pdf": 347, "perform": [408, 426, 470, 518, 530], "person": 422, "perspect": 402, "phase": [497, 603], "phasebackgroundmak": 178, "phasogram": 497, "piecewis": [567, 585], "piecewisenormspatialmodel": 256, "piecewisenormspectralmodel": 257, "pig": [399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426], "pip": 431, "pixel": [395, 409, 510], "pk": 504, "plan": 402, "plot": [14, 395, 469, 474, 475, 485, 486, 489, 509, 511, 513, 517, 530, 559, 563, 564, 565, 566, 567, 568, 569, 570, 571, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 596, 597, 598, 599, 600, 601, 602, 614], "plot_contour_lin": 387, "plot_distribut": 388, "plot_heatmap": 389, "plot_map_rgb": 390, "plot_npred_sign": 391, "plot_spectrum_datasets_off_region": 392, "plot_theta_squared_t": 393, "png": 396, "point": [396, 424, 468, 469, 472, 474, 475, 484, 485, 487, 500, 502, 504, 518, 529, 530, 532, 544, 552, 568], "pointinginfo": 95, "pointingmod": 96, "pointspatialmodel": 258, "poisson": 610, "polar": 326, "polici": 422, "pool_kwargs_default": 340, "popul": [1, 536], "posit": [424, 515, 517, 550], "possibl": [422, 426], "post": 427, "posterior": [425, 513], "power": [472, 575, 578, 579, 580, 586, 587, 588, 589, 590, 591, 592], "powerlaw": [472, 601], "powerlaw2spectralmodel": 259, "powerlawnormspectralmodel": 260, "powerlawspectralmodel": 261, "powerlawtemporalmodel": 262, "precis": 408, "predict": 542, "prepar": [410, 421, 468, 470, 488, 530], "prerequisit": [470, 472, 474, 475, 476, 477, 480, 484, 486, 487, 488, 489, 492, 494, 495, 496, 500, 505, 510, 511, 515, 529, 530], "pretti": 502, "primaryflux": 26, "print": 502, "prior": [263, 424, 426, 515], "priorparamet": [220, 221], "produc": 520, "product": [501, 507], "profil": [469, 489, 501, 612], "project": [404, 426, 428], "propag": 423, "propos": [403, 405, 406, 407, 408, 409, 410, 411, 413, 414, 415, 416, 417, 418, 419, 420, 423, 425, 426, 470, 472, 475, 477, 478, 480, 481, 484, 487, 488, 489, 492, 494, 495, 496, 499, 500, 505, 510, 511, 513, 514, 529, 530], "proven": 415, "psf": [507, 519, 552], "psf3d": 164, "psf_tabl": 552, "psfkernel": 165, "psfking": 166, "psfmap": [167, 507], "public": 422, "pull": [395, 396, 398, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465], "puls": 426, "pulsar": [51, 497, 538, 539], "purpos": 400, "pwn": 50, "pydant": 423, "python": [395, 396, 402, 421, 434], "qualiti": [404, 428, 474, 476, 483, 505], "quantiti": [504, 514, 544], "radial": 549, "radial_distribut": 48, "radmax2d": 169, "rai": [410, 501, 551], "random": [13, 395], "rang": [508, 517, 554], "rate": 551, "read": [478, 484, 488, 489, 509, 510, 511, 559], "read_hermes_cub": [290, 292], "read_yaml": 360, "recip": 426, "recommend": [430, 432], "reconstruct": 549, "recopsfmap": 170, "recursive_merge_dict": 361, "redshift": 469, "reduc": [4, 480, 481, 503, 529, 530], "reduct": [8, 404, 410, 470, 474, 475, 476, 483, 494, 495, 499, 508, 520, 529, 530, 554, 609], "refer": [6, 416, 608, 609, 610, 611], "reflect": [508, 555], "reflectedregionsbackgroundmak": [179, 555], "reflectedregionsfind": 180, "region": [13, 406, 409, 468, 470, 474, 476, 508, 510, 511, 555, 559], "region_to_fram": 355, "regiongeom": [205, 559], "regionndmap": [206, 559], "regions_to_compound_region": 356, "regionsfind": 181, "relat": 559, "releas": [395, 404, 421, 422, 427, 428, 436], "remark": 400, "remnant": 540, "remov": [395, 511], "renam": 395, "repositori": 428, "repr": 395, "represent": [419, 504, 563, 564, 565, 566, 567, 568, 569, 570, 571, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 596, 597, 598, 599, 600, 601, 602, 603, 604], "request": [395, 396, 398, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465], "requir": [394, 395, 412, 423], "requires_data": 373, "requires_depend": 374, "resampl": 503, "resample_energy_edg": 150, "residu": [474, 476, 483, 530, 551], "resolv": [417, 497, 499], "respons": [7, 551], "ressourc": 426, "restructur": 416, "result": [410, 420, 468, 470, 475, 478, 486, 489, 494, 499, 504, 513, 612], "return": [395, 396], "review": 400, "ring": [481, 508, 556], "ringbackgroundmak": 182, "rmf": 550, "road": 405, "roadmap": [404, 426], "rotat": 409, "rst": 396, "run": [11, 398, 474, 475, 476, 486, 488, 489, 494, 513, 529, 609], "run_multiprocess": 342, "safe": [508, 554], "safemaskmak": 183, "sampl": [408, 425, 487, 488, 513], "sample_powerlaw": 348, "sample_spher": 349, "sample_sphere_dist": 350, "sample_tim": 351, "sampler": [222, 488, 513], "samplerresult": 223, "save": [475, 529, 530], "scale": 613, "scale_plot_flux": 291, "scaledregulargridinterpol": 333, "scalespectralmodel": 266, "scenario": 405, "schedul": 421, "scheme": [406, 422], "script": [11, 13, 395, 434, 524, 525, 527], "search": 426, "section": 416, "sed": 544, "select": [426, 470, 475, 485, 494, 495, 499, 502, 511, 529, 530, 543], "select_nested_model": 293, "sensit": 468, "sensitivityestim": 136, "sep": [442, 458], "serial": [407, 423, 484], "serialis": [424, 425, 475, 489, 507, 511, 512, 519, 542], "seril": 406, "set": [398, 475, 509, 529], "setup": [403, 428, 430, 432, 433, 468, 469, 470, 472, 474, 475, 476, 477, 478, 480, 481, 483, 484, 485, 486, 487, 488, 489, 494, 495, 496, 497, 499, 500, 501, 502, 503, 504, 505, 508, 509, 510, 511, 512, 513, 515, 517, 518, 519, 520, 521, 529, 530, 532], "sever": 395, "share": 512, "shell": 569, "shell2": 570, "shell2spatialmodel": 267, "shellspatialmodel": 268, "shorter": 419, "should": 395, "show": [485, 486, 514], "sigma_to_t": 312, "signal": [426, 486], "signific": [470, 478, 481, 510, 517, 611], "simplepulsar": 54, "simplifi": 419, "simul": [404, 407, 476, 477, 487, 488, 492, 496], "sine": 602, "sinetemporalmodel": 269, "singl": [396, 477], "size": 559, "skip": 395, "sky": [9, 406, 409, 485, 487, 510, 550, 558], "sky_to_fov": 327, "skycoord": 558, "skymodel": [270, 512], "slice": 509, "small": 398, "smooth": [478, 589], "smoothbrokenpowerlawspectralmodel": 271, "snr": 52, "snrtruelovemcke": 53, "solut": 423, "some": [395, 405, 510, 517], "sourc": [1, 2, 426, 468, 470, 474, 478, 485, 486, 487, 488, 496, 502, 510, 515, 518, 532, 536, 537, 538, 539, 541], "sourcecatalog": 56, "sourcecatalog1lhaaso": 57, "sourcecatalog2fhl": 58, "sourcecatalog2hwc": 59, "sourcecatalog2pc": 60, "sourcecatalog3fgl": 61, "sourcecatalog3fhl": 62, "sourcecatalog3hwc": 63, "sourcecatalog3pc": 64, "sourcecatalog4fgl": 65, "sourcecataloggammacat": 66, "sourcecataloghgp": 67, "sourcecataloglargescalehgp": 68, "sourcecatalogobject": 69, "sourcecatalogobject1lhaaso": 70, "sourcecatalogobject2fhl": 71, "sourcecatalogobject2hwc": 72, "sourcecatalogobject2pc": 73, "sourcecatalogobject3fgl": 74, "sourcecatalogobject3fhl": 75, "sourcecatalogobject3hwc": 76, "sourcecatalogobject3pc": 77, "sourcecatalogobject4fgl": 78, "sourcecatalogobjectgammacat": 79, "sourcecatalogobjecthgp": 80, "sourcecatalogobjecthgpscompon": 81, "sourceirfmodel": 406, "sourcemodel": 406, "spatial": [406, 419, 485, 501, 509, 512, 536, 559, 560, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571], "spatial_model_registri": 264, "spatialirfmodel": 406, "spatialmodel": 272, "special": 612, "specif": [406, 416, 426, 502, 504], "spectra": 501, "spectral": [419, 424, 426, 469, 470, 471, 472, 474, 475, 476, 484, 485, 501, 512, 513, 524, 532, 560, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 593], "spectral_model_registri": 265, "spectralirfmodel": 406, "spectralmodel": 273, "spectroscopi": 499, "spectrum": [469, 474, 476, 477, 485, 497, 508, 530], "spectrumdataset": [111, 407, 503, 542], "spectrumdatasetmak": [184, 554], "spectrumdatasetonoff": [112, 407], "sphinx": [395, 396], "spiral": 536, "split_dataset": [117, 120], "spread": [518, 552], "squar": [486, 517], "stack": [474, 481, 483, 542], "standard_scal": 318, "standardise_unit": 379, "start": [416, 430, 535, 536, 537, 543, 558], "stat": [12, 469], "stat_contour": 505, "stat_profile_ul_scipi": 294, "stat_surfac": 505, "statist": [12, 426, 474, 510, 517, 610, 611], "statu": [400, 405, 414, 415, 421], "step": [475, 518, 520, 521, 607], "store": [410, 475, 550], "str": 395, "structur": [414, 417, 451, 532, 607], "structure_funct": 313, "studi": 410, "style": 401, "sub": [509, 535], "subclass": 424, "subpackag": 401, "subset": 502, "suggest": 422, "summari": [437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 483, 519], "super": [590, 591, 592], "superexpcutoffpowerlaw3fglspectralmodel": 274, "superexpcutoffpowerlaw4fgldr3spectralmodel": 275, "superexpcutoffpowerlaw4fglspectralmodel": 276, "supernova": 540, "support": [395, 402, 421, 422, 424, 426, 507, 542], "survei": [527, 614], "symmetr": 549, "systemat": [424, 426], "t": [478, 611], "tabl": [13, 486, 502, 504, 520, 543], "table_row_to_dict": 365, "table_standardise_units_copi": 366, "table_standardise_units_inplac": 367, "tag": 419, "target": 474, "task": [406, 407, 408, 409, 410, 411, 412, 415, 425], "templat": [487, 571, 593], "templatendspatialmodel": 278, "templatendspectralmodel": 279, "templatenpredmodel": 280, "templatephasecurvetemporalmodel": 281, "templatespatialmodel": 282, "templatespectralmodel": 283, "tempor": [488, 496, 512, 560, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604], "temporal_model_registri": 277, "temporalmodel": 284, "term": 422, "terminologi": 405, "test": [13, 395, 398, 425, 486, 497, 517], "text": 395, "theta": 517, "theta2": 517, "thi": 398, "through": 504, "thumbnail": 396, "time": [13, 404, 410, 467, 473, 482, 487, 491, 493, 495, 496, 498, 499, 500, 516, 523, 524, 526, 528, 533, 561, 572, 594, 605, 613], "time_ref_from_dict": 376, "time_ref_to_dict": 377, "time_relative_to_ref": 378, "timemapaxi": [207, 509], "timmerkonig_lightcurve_simul": 298, "to_yaml": 362, "tool": [11, 609], "tooltip": 396, "touch": 398, "transient": 426, "trapz_loglog": 332, "troubleshoot": [433, 609], "true": [548, 550, 552], "ts_to_sigma": 314, "tsmapestim": 137, "tune": 425, "tutori": [396, 403, 416, 430, 486, 518, 520, 524], "two": 511, "type": [395, 423, 426, 542, 544, 558], "unbin": 426, "uncertainti": 413, "underli": [495, 559], "understand": 513, "unfold": [424, 426], "unfreez": 511, "unif": 420, "unifi": [406, 420], "uniformprior": 285, "unit": [13, 395], "unit_from_fits_image_hdu": 380, "unix": 395, "unreleas": 466, "up": [398, 414, 417], "upsampl": 559, "us": [395, 405, 424, 425, 426, 431, 434, 475, 486, 487, 494, 503, 505, 507, 509, 529, 530, 534, 537, 541, 542, 543, 544, 545, 551, 553, 554, 555, 558, 579, 590, 591, 592, 606], "user": [402, 425, 547], "util": [4, 5, 8, 10, 13, 414, 607, 611, 613], "valid": 423, "valleespir": 38, "valu": [395, 424, 486, 509, 515], "vari": 496, "variabl": [1, 2, 3, 4, 5, 7, 8, 10, 13, 487, 500], "varianc": 500, "variou": 514, "veloc": 536, "velocity_distribut": 49, "velocity_glon_glat": 328, "venv": 429, "version": [395, 421, 426, 427, 436, 492], "virtual": 429, "visual": [14, 417, 509, 559, 614], "visualis": [478, 499, 504], "volum": 559, "warn": 395, "wc": [509, 559], "wcsgeom": 208, "wcsmap": 209, "wcsndmap": 210, "we": [403, 410, 411, 420, 520], "webpag": 428, "weighted_cash_sum_cython": 315, "what": [395, 398, 400, 403, 405, 410, 411, 420, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 451, 452, 454, 455, 456, 457, 458, 459, 472, 474, 475, 478, 485, 494, 529, 532], "where": 395, "which": 395, "wind": 539, "wise": 494, "without": 515, "wobbleregionsfind": 185, "work": 543, "workflow": [11, 607], "wrap_at": 381, "write": [395, 400, 475, 488, 509, 510, 543, 559, 609], "write_yaml": 363, "wstat": [316, 610, 611, 612], "wstatcountsstatist": 299, "yaml": [419, 475, 529, 563, 564, 565, 566, 567, 568, 569, 570, 571, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 596, 597, 598, 599, 600, 601, 602, 603, 604], "your": [433, 475, 609], "yusifovkucuk2004": 39, "yusifovkucuk2004b": 40, "zhaoprofil": 27}})