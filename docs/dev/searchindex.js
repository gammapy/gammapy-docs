Search.setIndex({"alltitles": {"0.1 (Aug 25, 2014)": [[427, null]], "0.10 (Jan 28, 2019)": [[428, null]], "0.11 (Mar 29, 2019)": [[429, null]], "0.12 (May 30, 2019)": [[430, null]], "0.13 (Jul 26, 2019)": [[431, null]], "0.14 (Sep 30, 2019)": [[432, null]], "0.15 (Dec 3, 2019)": [[433, null]], "0.16 (Feb 1, 2020)": [[434, null]], "0.17 (Apr 1, 2020)": [[435, null]], "0.18 (Nov 4th, 2020)": [[436, null]], "0.18.1 (Nov 6th, 2020)": [[437, null]], "0.18.2 (Nov 19th, 2020)": [[438, null]], "0.19 (Nov 22nd, 2021)": [[439, null]], "0.2 (Apr 13, 2015)": [[440, null]], "0.20 (May 12th, 2022)": [[441, null]], "0.20.1 (June 16th, 2022)": [[442, null]], "0.3 (Aug 13, 2015)": [[443, null]], "0.4 (Apr 20, 2016)": [[444, null]], "0.5 (Nov 22, 2016)": [[445, null]], "0.6 (Apr 28, 2017)": [[446, null]], "0.7 (Feb 28, 2018)": [[447, null]], "0.8 (Sep 23, 2018)": [[448, null]], "0.9 (Nov 29, 2018)": [[449, null]], "1.0 (November 10th, 2022)": [[450, null]], "1.0.1 (March 14th, 2023)": [[451, null]], "1.0.2 (December 6th, 2023)": [[452, null]], "1.1 (June 13th 2023)": [[453, null]], "1.2 (February 29th 2024)": [[454, null]], "1.3 (November 26th, 2024)": [[455, null]], "1D Spectral": [[461, "d-spectral"], [513, "d-spectral"]], "1D spectrum simulation": [[467, null]], "2.0 (unreleased)": [[456, null]], "2D Image": [[469, null], [513, "d-image"]], "2D map fitting": [[470, null]], "3D Cube": [[480, null], [513, "d-cube"]], "3D detailed analysis": [[473, null]], "3D map simulation": [[482, null]], "A fully configured Flux Points Estimation": [[494, "a-fully-configured-flux-points-estimation"]], "A note on statistics": [[464, "a-note-on-statistics"]], "A note on the internal representation": [[494, "a-note-on-the-internal-representation"]], "API Links": [[388, "api-links"]], "API changes": [[450, "api-changes"], [453, "api-changes"], [454, "api-changes"], [455, "api-changes"]], "API reference": [[6, null]], "ASmoothMapEstimator": [[120, null]], "Abstract": [[392, "abstract"], [393, "abstract"], [394, "abstract"], [395, "abstract"], [396, "abstract"], [397, "abstract"], [399, "abstract"], [400, "abstract"], [401, "abstract"], [402, "abstract"], [403, "abstract"], [404, "abstract"], [405, "abstract"], [406, "abstract"], [407, "abstract"], [408, "abstract"], [409, "abstract"], [410, "abstract"], [411, "abstract"], [412, "abstract"], [413, "abstract"], [414, "abstract"], [415, "abstract"], [416, "abstract"]], "Acceptation of the Developer Certificate of Origin (DCO)": [[390, "acceptation-of-the-developer-certificate-of-origin-dco"]], "Accessing Data": [[499, "accessing-data"]], "Accessing and visualising results": [[468, "accessing-and-visualising-results"]], "Accessing and visualising the results": [[494, "accessing-and-visualising-the-results"]], "Accessing contents of a dataset": [[493, "accessing-contents-of-a-dataset"]], "Accessor methods": [[547, "accessor-methods"]], "Account for spectral absorption due to the EBL": [[459, null]], "Adaptive smoothing": [[468, "adaptive-smoothing"]], "AdaptiveRingBackgroundMaker": [[171, null]], "Add a model on multiple datasets": [[501, "add-a-model-on-multiple-datasets"]], "Add new parametric models": [[398, "add-new-parametric-models"]], "Adding Non-Spatial Axes": [[499, "adding-non-spatial-axes"]], "Adding Non-contiguous axes": [[499, "adding-non-contiguous-axes"]], "Additional Models": [[410, "additional-models"]], "Additional PSF classes": [[541, "additional-psf-classes"]], "Additional utilities": [[596, "additional-utilities"]], "Aim": [[501, "aim"]], "Alternative": [[411, "alternative"]], "Alternatives": [[395, "alternatives"], [398, "alternatives"], [401, "alternatives"], [403, "alternatives"], [404, "alternatives"], [405, "alternatives"], [407, "alternatives"], [408, "alternatives"], [414, "alternatives"]], "Alternatives / Outlook": [[400, "alternatives-outlook"]], "Analysis": [[15, null]], "Analysis configuration": [[465, "analysis-configuration"], [473, "analysis-configuration"], [484, "analysis-configuration"], [518, "analysis-configuration"]], "Analysis steps": [[596, "analysis-steps"]], "Analysis workflow": [[596, "analysis-workflow"]], "AnalysisConfig": [[16, null]], "As a function of of true energy and offset angle (EDISP_2D)": [[539, "as-a-function-of-of-true-energy-and-offset-angle-gadf-edisp-2d"]], "As a function of of true energy and offset angle (PSF_TABLE)": [[541, "as-a-function-of-of-true-energy-and-offset-angle-gadf-psf-table"]], "As a function of reconstructed energy and detector coordinates (BKG_3D)": [[538, "as-a-function-of-reconstructed-energy-and-detector-coordinates-gadf-bkg-3d"]], "As a function of reconstructed energy and offset angle, radially symmetric (BKG_2D)": [[538, "as-a-function-of-reconstructed-energy-and-offset-angle-radially-symmetric-gadf-bkg-2d"]], "As a function of true energy (RMF)": [[539, "as-a-function-of-true-energy-gadf-ogip-rmf"]], "As a function of true energy and offset angle (AEFF_2D)": [[537, "as-a-function-of-true-energy-and-offset-angle-gadf-aeff-2d"]], "Assert convention": [[387, "assert-convention"]], "Assign to model to all datasets": [[485, "assign-to-model-to-all-datasets"]], "Assigning background models to datasets": [[501, "assigning-background-models-to-datasets"]], "Astrophysical source models": [[526, null]], "Astrophysical source population models": [[525, null]], "Astrophysics": [[524, null]], "Authorship policy": [[413, "authorship-policy"]], "BACKEND_DEFAULT": [[329, null]], "BSD or GPL license?": [[387, "bsd-or-gpl-license"]], "Background": [[507, "background"], [538, null]], "Background / What we have now": [[402, "background-what-we-have-now"]], "Background Model Handling": [[409, "background-model-handling"]], "Background estimation": [[498, "background-estimation"], [543, "background-estimation"]], "Background2D": [[150, null]], "Background3D": [[151, null]], "BackgroundIRF": [[152, null]], "BackgroundIRFModel": [[398, "backgroundirfmodel"]], "BackgroundModel": [[398, "backgroundmodel"]], "Basic image exploration and fitting": [[475, null]], "Basic operators": [[499, "basic-operators"]], "Bayesian blocks": [[490, "bayesian-blocks"]], "Bin volume and angular size": [[548, "bin-volume-and-angular-size"]], "Boundary mask": [[500, "boundary-mask"]], "Broken power law spectral model": [[564, null]], "BrokenPowerLawSpectralModel": [[221, null]], "Bug fixes and improvements": [[441, "bug-fixes-and-improvements"], [450, "bug-fixes-and-improvements"], [453, "bug-fixes-and-improvements"], [454, "bug-fixes-and-improvements"], [455, "bug-fixes-and-improvements"]], "Build": [[418, "build"]], "Building 1D datasets from the new observations": [[485, "building-1d-datasets-from-the-new-observations"]], "Building the 1D analysis configuration": [[484, "building-the-1d-analysis-configuration"]], "Building the 3D analysis configuration": [[484, "building-the-3d-analysis-configuration"]], "Built-in models": [[595, "built-in-models"]], "Bundled gammapy.extern code": [[387, "bundled-gammapy-extern-code"]], "BurkertProfile": [[17, null]], "CATALOG_REGISTRY": [[55, null]], "CITATION.cff": [[413, "citation-cff"]], "CLUMPY": [[523, "clumpy"]], "CTA 1DC": [[507, "cta-1dc"]], "CTAO with Gammapy": [[507, null]], "Caplog fixture": [[387, "caplog-fixture"]], "Case 1: Background systematics as a nuisance parameter #3955": [[415, "case-1-background-systematics-as-a-nuisance-parameter-3955"]], "Case 1: Estimate the posterior distribution with a tuning-parameter free approach": [[416, "case-1-estimate-the-posterior-distribution-with-a-tuning-parameter-free-approach"]], "Case 2: Favoring positive values for flux amplitudes": [[415, "case-2-favoring-positive-values-for-flux-amplitudes"]], "Case 2: Minuit convergence issues": [[416, "case-2-minuit-convergence-issues"]], "Case 3: Model comparison using the Bayesian evidence (aka marginal evidence)": [[416, "case-3-model-comparison-using-the-bayesian-evidence-aka-marginal-evidence"]], "Case 3: Support unfolding methods for spectral flux points #4122": [[415, "case-3-support-unfolding-methods-for-spectral-flux-points-4122"]], "Case 4: Parallelization of the \u201cfitting\u201d": [[416, "case-4-parallelization-of-the-fitting"]], "CaseBattacharya1998": [[28, null]], "Cash : Poisson data with background model": [[599, "cash-poisson-data-with-background-model"]], "Cash counts statistic": [[600, "cash-counts-statistic"]], "CashCountsStatistic": [[292, null]], "Catalog table": [[492, "catalog-table"]], "Caveat": [[599, "caveat"]], "Changelog": [[407, "changelog"]], "Check Python code": [[388, "check-python-code"]], "Check broken links": [[388, "check-broken-links"]], "Check setup": [[458, "check-setup"], [460, "check-setup"], [464, "check-setup"], [465, "check-setup"], [466, "check-setup"], [467, "check-setup"], [468, "check-setup"], [470, "check-setup"], [471, "check-setup"], [473, "check-setup"], [474, "check-setup"], [475, "check-setup"], [476, "check-setup"], [477, "check-setup"], [478, "check-setup"], [479, "check-setup"], [484, "check-setup"], [485, "check-setup"], [486, "check-setup"], [487, "check-setup"], [491, "check-setup"], [492, "check-setup"], [493, "check-setup"], [495, "check-setup"], [498, "check-setup"], [499, "check-setup"], [500, "check-setup"], [501, "check-setup"], [502, "check-setup"], [504, "check-setup"], [506, "check-setup"], [507, "check-setup"], [508, "check-setup"], [509, "check-setup"], [510, "check-setup"], [518, "check-setup"], [519, "check-setup"], [521, "check-setup"]], "Check the dataset we produced": [[509, "check-the-dataset-we-produced"]], "Check your setup": [[423, "check-your-setup"]], "Checker": [[361, null]], "Choose a thumbnail and tooltip for the tutorial gallery": [[388, "choose-a-thumbnail-and-tooltip-for-the-tutorial-gallery"]], "Citation scheme": [[413, "citation-scheme"]], "Class attributes": [[388, "class-attributes"]], "Classes": [[0, "classes"], [1, "classes"], [1, "id1"], [1, "id2"], [2, "classes"], [3, "classes"], [4, "classes"], [5, "classes"], [7, "classes"], [8, "classes"], [9, "classes"], [10, "classes"], [10, "id2"], [12, "classes"], [13, "classes"], [13, "id5"], [13, "id7"], [13, "id10"], [13, "id15"], [14, "classes"]], "Clean up gammapy.utils": [[406, "clean-up-gammapy-utils"]], "Clobber or overwrite?": [[387, "clobber-or-overwrite"]], "Code in RST files": [[388, "code-in-rst-files"]], "Code in docstrings in Python files": [[388, "code-in-docstrings-in-python-files"]], "Code quality": [[418, "code-quality"]], "Collection of the personal information of authors": [[413, "collection-of-the-personal-information-of-authors"]], "Colormaps": [[603, "colormaps"]], "Combining event lists and GTIs": [[532, "combining-event-lists-and-gtis"]], "Combining two Models": [[501, "combining-two-models"]], "Command line tools": [[598, null]], "Command not found": [[598, "command-not-found"]], "Common API": [[494, "common-api"]], "Compare against the literature": [[466, "compare-against-the-literature"]], "Compare results": [[484, "compare-results"]], "Compound Spectral Model": [[502, "compound-spectral-model"]], "Compound spectral model": [[565, null]], "CompoundSpectralModel": [[222, null]], "Computation times": [[457, null], [463, null], [472, null], [481, null], [488, null], [505, null], [512, null], [515, null], [517, null], [522, null], [550, null], [561, null], [583, null], [594, null]], "Compute Flux Points": [[464, "compute-flux-points"]], "Compute correlated significance and correlated excess maps": [[471, "compute-correlated-significance-and-correlated-excess-maps"]], "Compute images": [[475, "compute-images"]], "Compute sensitivity": [[458, "compute-sensitivity"]], "Computing contours using stat_contour": [[495, "computing-contours-using-stat-contour"]], "Computing contours using stat_surface": [[495, "computing-contours-using-stat-surface"]], "Computing flux points": [[519, "computing-flux-points"]], "Conda Environments": [[419, "conda-environments"]], "Confidence contours": [[495, "confidence-contours"]], "Configurable analysis": [[596, "configurable-analysis"]], "Configuration": [[479, "configuration"]], "Configuration for stacked and joint analysis": [[473, "configuration-for-stacked-and-joint-analysis"]], "Configuration of the analysis": [[465, "configuration-of-the-analysis"]], "Constant spatial model": [[552, null]], "Constant spectral model": [[566, null]], "Constant temporal model": [[585, null]], "ConstantFluxSpatialModel": [[223, null]], "ConstantSpatialModel": [[224, null]], "ConstantSpectralModel": [[225, null]], "ConstantTemporalModel": [[226, null]], "Context": [[460, "context"], [462, "context"], [464, "context"], [465, "context"], [466, "context"], [467, "context"], [468, "context"], [470, "context"], [471, "context"], [474, "context"], [476, "context"], [477, "context"], [479, "context"], [482, "context"], [484, "context"], [485, "context"], [486, "context"], [489, "context"], [490, "context"], [500, "context"], [503, "context"], [504, "context"], [518, "context"], [519, "context"]], "Continuous integration": [[418, "continuous-integration"]], "Contribution in conferences": [[413, "contribution-in-conferences"]], "Contributors": [[427, "contributors"], [428, "contributors"], [429, "contributors"], [430, "contributors"], [431, "contributors"], [432, "contributors"], [433, "contributors"], [434, "contributors"], [435, "contributors"], [436, "contributors"], [439, "contributors"], [440, "contributors"], [441, "contributors"], [442, "contributors"], [443, "contributors"], [444, "contributors"], [445, "contributors"], [446, "contributors"], [447, "contributors"], [448, "contributors"], [449, "contributors"], [450, "contributors"], [451, "contributors"], [452, "contributors"], [453, "contributors"], [454, "contributors"], [455, "contributors"]], "Convert a jupyter notebook to python script in the sphinx-gallery format": [[387, "convert-a-jupyter-notebook-to-python-script-in-the-sphinx-gallery-format"]], "Coordinate and axis names": [[387, "coordinate-and-axis-names"]], "Coordinates defined by the RegionGeom": [[548, "coordinates-defined-by-the-regiongeom"]], "Correct format for bullet point list": [[388, "correct-format-for-bullet-point-list"]], "Counts": [[508, "counts"]], "Counts and fit statistics": [[600, "counts-and-fit-statistics"]], "Counts statistics classes": [[600, "counts-statistics-classes"]], "Covariance": [[212, null]], "Covariance and parameters errors": [[495, "covariance-and-parameters-errors"]], "CovarianceResult": [[213, null]], "Create DL4 product - PSFMap": [[497, "create-dl4-product-psfmap"]], "Create a FluxMaps object through one of the estimators.": [[494, "create-a-fluxmaps-object-through-one-of-the-estimators"]], "Create a mask in energy": [[500, "create-a-mask-in-energy"]], "Create a stacked dataset": [[471, "create-a-stacked-dataset"]], "Create edisp kernel map": [[497, "create-edisp-kernel-map"]], "Create exclusion mask": [[464, "create-exclusion-mask"], [471, "create-exclusion-mask"]], "Create exposure map": [[497, "create-exposure-map"]], "Create the energy-dependent temporal model": [[478, "create-the-energy-dependent-temporal-model"]], "Create the maker classes to be used": [[519, "create-the-maker-classes-to-be-used"]], "Create the makers": [[460, "create-the-makers"]], "Create the mask from a catalog of sources": [[500, "create-the-mask-from-a-catalog-of-sources"]], "Create the mask from a list of regions": [[500, "create-the-mask-from-a-list-of-regions"]], "Create the mask from statistically significant pixels in a dataset": [[500, "create-the-mask-from-statistically-significant-pixels-in-a-dataset"]], "Create the mask map": [[500, "create-the-mask-map"]], "Create the temporal model and write it to disk": [[478, "create-the-temporal-model-and-write-it-to-disk"]], "Creating WCS Maps": [[499, "creating-wcs-maps"]], "Creating a RegionGeom": [[548, "creating-a-regiongeom"]], "Creating a RegionNDMap": [[548, "creating-a-regionndmap"]], "Creating a mask for fitting": [[500, "creating-a-mask-for-fitting"]], "Creating a mask manually": [[500, "creating-a-mask-manually"]], "Creating an empty dataset": [[493, "creating-an-empty-dataset"]], "Creating an exclusion mask": [[500, "creating-an-exclusion-mask"]], "Creating from a Map Geometry": [[499, "creating-from-a-map-geometry"]], "Creating the config file": [[470, "creating-the-config-file"], [471, "creating-the-config-file"]], "Creation of the Flux points": [[465, "creation-of-the-flux-points"]], "Creation of the data reduction makers": [[485, "creation-of-the-data-reduction-makers"]], "Creation of the datasets": [[485, "creation-of-the-datasets"]], "Creation of the model": [[465, "creation-of-the-model"]], "Creation of the theta2 plot": [[506, "creation-of-the-theta2-plot"]], "Cube plotting": [[499, "cube-plotting"]], "Cumulative excess and significance": [[460, "cumulative-excess-and-significance"]], "Current status": [[412, "current-status"]], "Custom models": [[595, "custom-models"]], "Cutouts": [[499, "cutouts"]], "Cython": [[418, "cython"]], "DATASET_REGISTRY": [[98, null]], "DCO implementation": [[413, "dco-implementation"]], "DL3 DR1": [[510, "dl3-dr1"]], "DMProfile": [[18, null]], "D_SUN_TO_GALACTIC_CENTER": [[314, null]], "Dark matter": [[523, null]], "Dark matter spatial and spectral models": [[491, null]], "DarkMatterAnnihilationSpectralModel": [[19, null]], "DarkMatterDecaySpectralModel": [[20, null]], "Data Fitting": [[402, "data-fitting"]], "Data access and selection (DL3)": [[532, null]], "Data analysis": [[461, null], [513, "data-analysis"]], "Data analysis subpackages in gammapy": [[393, "data-analysis-subpackages-in-gammapy"]], "Data and Observation handling": [[396, "data-and-observation-handling"]], "Data and models files": [[474, "data-and-models-files"]], "Data exploration": [[511, "data-exploration"], [513, "data-exploration"]], "Data reduction": [[402, "data-reduction"], [473, "data-reduction"], [473, "id1"], [489, "data-reduction"], [518, "data-reduction"], [519, "data-reduction"]], "Data reduction (DL3 to DL4)": [[543, null]], "Data reduction into a MapDataset": [[509, "data-reduction-into-a-mapdataset"]], "Data reduction loop": [[498, "data-reduction-loop"]], "Data selection": [[489, "data-selection"]], "Data structures": [[521, null]], "DataStore": [[82, null]], "Dataset": [[99, null], [399, "dataset"], [498, "dataset"]], "Dataset helper / convenience methods": [[399, "dataset-helper-convenience-methods"]], "Dataset serialization": [[399, "dataset-serialization"]], "Dataset simulations": [[466, "dataset-simulations"]], "Dataset specific quantities (\u201ccounts like\u201d)": [[494, "dataset-specific-quantities-counts-like"]], "DatasetModels": [[227, null]], "Datasets": [[100, null], [396, "datasets"], [399, "datasets"], [414, "datasets"], [493, "datasets"]], "Datasets (DL4)": [[531, null]], "Datasets - Reduced data, IRFs, models": [[493, null]], "Datasets serialization": [[474, "datasets-serialization"]], "DatasetsMaker": [[172, null]], "Datastore": [[507, "datastore"]], "Dealing with links": [[388, "dealing-with-links"]], "Decision": [[392, "decision"], [393, "decision"], [394, "decision"], [395, "decision"], [396, "decision"], [397, "decision"], [398, "decision"], [399, "decision"], [400, "decision"], [401, "decision"], [402, "decision"], [403, "decision"], [404, "decision"], [405, "decision"], [406, "decision"], [407, "decision"], [408, "decision"], [409, "decision"], [410, "decision"], [411, "decision"], [412, "decision"], [413, "decision"], [414, "decision"], [415, "decision"], [416, "decision"]], "Define Target Region": [[464, "define-target-region"]], "Define a test position": [[506, "define-a-test-position"]], "Define an Observation": [[477, "define-an-observation"]], "Define an observation and make a dataset": [[478, "define-an-observation-and-make-a-dataset"]], "Define analysis region and energy binning": [[458, "define-analysis-region-and-energy-binning"]], "Define map geometry": [[475, "define-map-geometry"]], "Define the MapDataset": [[477, "define-the-mapdataset"]], "Define the ON region": [[466, "define-the-on-region"]], "Define the Sky model: a point-like source": [[477, "define-the-sky-model-a-point-like-source"]], "Define the geometries": [[460, "define-the-geometries"]], "Define the geometry": [[500, "define-the-geometry"]], "Define the model": [[519, "define-the-model"]], "Define the model to be used": [[484, "define-the-model-to-be-used"], [484, "id3"]], "Define the simulation source model": [[478, "define-the-simulation-source-model"]], "Define time intervals": [[485, "define-time-intervals"]], "Define underlying model": [[485, "define-underlying-model"]], "Defining the datastore and selecting observations": [[519, "defining-the-datastore-and-selecting-observations"]], "Defining the geometry": [[485, "defining-the-geometry"]], "Definition of a Contributor": [[413, "definition-of-a-contributor"]], "Definition of the Maintainer": [[413, "definition-of-the-maintainer"]], "Definition of the data selection": [[484, "definition-of-the-data-selection"], [484, "id1"]], "Definition of the dataset geometry": [[484, "definition-of-the-dataset-geometry"], [484, "id2"]], "Dependencies": [[386, null], [404, "dependencies"]], "Deprecating a function or a class": [[387, "deprecating-a-function-or-a-class"]], "Deprecation": [[412, "deprecation"]], "Derivation of the WStat formula": [[601, null]], "Detailed plan": [[394, "detailed-plan"]], "Developer How To": [[387, null]], "Developer guide": [[389, null]], "Discussion / Alternatives": [[402, "discussion-alternatives"]], "Disk spatial model": [[553, null]], "DiskSpatialModel": [[228, null]], "Dissolve gammapy.background": [[406, "dissolve-gammapy-background"]], "Dissolve gammapy.image": [[406, "dissolve-gammapy-image"]], "Distributions": [[404, "distributions"], [404, "id1"]], "Docstring formatting": [[388, "docstring-formatting"]], "Documentation": [[396, "documentation"], [454, "documentation"]], "Documentation How To": [[388, null]], "Documentation building": [[388, "documentation-building"]], "Documentation guidelines": [[388, "documentation-guidelines"]], "Documentation improvements": [[455, "documentation-improvements"]], "Download": [[418, "download"]], "EBL absorption spectral model": [[563, null]], "EBLAbsorptionNormSpectralModel": [[229, null]], "EBL_DATA_BUILTIN": [[230, null]], "EDispKernel": [[153, null]], "EDispKernelMap": [[154, null]], "EDispMap": [[155, null]], "ESTIMATOR_REGISTRY": [[121, null]], "Effective Area": [[497, "effective-area"]], "Effective area": [[507, "effective-area"], [537, null]], "EffectiveAreaTable2D": [[156, null]], "EinastoProfile": [[21, null]], "Energy Dependent Spatial Models": [[410, "energy-dependent-spatial-models"]], "Energy Dispersion": [[497, "energy-dispersion"], [508, "energy-dispersion"], [539, null]], "Energy dispersion": [[507, "energy-dispersion"]], "Energy edges": [[533, "energy-edges"]], "EnergyDependentMorphologyEstimator": [[122, null]], "EnergyDependentMultiGaussPSF": [[157, null]], "EnergyDispersion2D": [[158, null]], "Estimating TS": [[600, "estimating-ts"]], "Estimation of time variability in a lightcurve": [[490, null]], "Estimator": [[123, null]], "Estimators": [[414, "estimators"], [494, null]], "Estimators (DL4 to DL5, and DL6)": [[533, null]], "Event Simulation": [[396, "event-simulation"]], "Event lists": [[521, "event-lists"]], "Event sampling": [[477, null]], "EventList": [[83, null]], "EventListMetaData": [[84, null]], "Events": [[507, "events"], [508, "events"]], "Example": [[599, "example"], [599, "id2"]], "Example 1: Including Prior Information about the Sources Index": [[504, "example-1-including-prior-information-about-the-sources-index"]], "Example 2: Encouraging Positive Amplitude Values": [[504, "example-2-encouraging-positive-amplitude-values"]], "Example of extrapolation": [[582, "example-of-extrapolation"]], "Example plot": [[552, "example-plot"], [553, "example-plot"], [554, "example-plot"], [555, "example-plot"], [556, "example-plot"], [557, "example-plot"], [558, "example-plot"], [559, "example-plot"], [560, "example-plot"], [563, "example-plot"], [564, "example-plot"], [565, "example-plot"], [566, "example-plot"], [567, "example-plot"], [568, "example-plot"], [569, "example-plot"], [570, "example-plot"], [571, "example-plot"], [572, "example-plot"], [573, "example-plot"], [574, "example-plot"], [575, "example-plot"], [576, "example-plot"], [577, "example-plot"], [578, "example-plot"], [579, "example-plot"], [580, "example-plot"], [581, "example-plot"], [582, "example-plot"], [585, "example-plot"], [586, "example-plot"], [587, "example-plot"], [588, "example-plot"], [589, "example-plot"], [590, "example-plot"], [591, "example-plot"]], "Examples using Analysis": [[534, "examples-using-analysis"]], "Examples using FluxPointsEstimator": [[533, "examples-using-fluxpointsestimator"]], "Examples using LightCurveEstimator": [[533, "examples-using-lightcurveestimator"]], "Examples using MapDataset": [[531, "examples-using-mapdataset"]], "Examples using MapDatasetMaker": [[543, "examples-using-mapdatasetmaker"]], "Examples using SpectrumDataset": [[531, "examples-using-spectrumdataset"]], "Examples using SpectrumDatasetMaker": [[543, "examples-using-spectrumdatasetmaker"]], "Examples using catalog": [[530, "examples-using-catalog"]], "Examples using gammapy.makers.FoVBackgroundMaker": [[542, "examples-using-gammapy-makers-fovbackgroundmaker"]], "Examples using gammapy.makers.ReflectedRegionsBackgroundMaker": [[544, "examples-using-gammapy-makers-reflectedregionsbackgroundmaker"]], "Excess and Significance": [[600, "excess-and-significance"], [600, "id2"]], "Excess errors": [[600, "excess-errors"], [600, "id4"]], "Excess estimators": [[411, "excess-estimators"]], "ExcessMapEstimator": [[124, null]], "Exclusion masks": [[500, "exclusion-masks"]], "Execution": [[598, "execution"]], "Exemplary additional prior subclasses:": [[415, "exemplary-additional-prior-subclasses"]], "Exercises": [[458, "exercises"], [462, "exercises"], [464, "exercises"], [467, "exercises"], [473, "exercises"], [475, "exercises"], [477, "exercises"], [478, "exercises"], [486, "exercises"], [489, "exercises"], [507, "exercises"], [508, "exercises"], [509, "exercises"], [510, "exercises"], [521, "exercises"], [521, "id1"], [521, "id2"], [521, "id3"]], "Existing code": [[393, "existing-code"]], "ExpCutoffPowerLaw3FGLSpectralModel": [[231, null]], "ExpCutoffPowerLawNormSpectralModel": [[232, null]], "ExpCutoffPowerLawSpectralModel": [[233, null]], "ExpDecay temporal model": [[586, null]], "ExpDecayTemporalModel": [[234, null]], "Expected number of detected events": [[540, "expected-number-of-detected-events"]], "Exploration of the fit results": [[465, "exploration-of-the-fit-results"]], "Explore the fit results": [[460, "explore-the-fit-results"]], "Explore the results": [[460, "explore-the-results"]], "Exponential": [[29, null]], "Exponential Cut-Off Powerlaw Fit": [[462, "exponential-cut-off-powerlaw-fit"]], "Exponential cutoff power law norm spectral model": [[569, null]], "Exponential cutoff power law spectral model": [[567, null]], "Exponential cutoff power law spectral model used for 3FGL": [[568, null]], "Expose model parameters as attributes": [[398, "expose-model-parameters-as-attributes"]], "Exposure": [[508, "exposure"]], "Extended source using a template": [[477, "extended-source-using-a-template"]], "Extract the light curve": [[485, "extract-the-light-curve"]], "Extract the lightcurve": [[486, "extract-the-lightcurve"]], "Extracting the light curve": [[484, "extracting-the-light-curve"]], "Extracting the ring background": [[471, "extracting-the-ring-background"]], "Factorisation of the IRFs": [[540, "factorisation-of-the-irfs"]], "FaucherKaspi2006": [[30, null]], "FaucherKaspi2006VelocityBimodal": [[31, null]], "FaucherKaspi2006VelocityMaxwellian": [[32, null]], "FaucherSpiral": [[33, null]], "Feature Freeze and Branching": [[417, "feature-freeze-and-branching"]], "Fermi-LAT 3FHL: map dataset for 3D analysis": [[474, "fermi-lat-3fhl-map-dataset-for-3d-analysis"]], "Fermi-LAT with Gammapy": [[508, null]], "FermiST": [[523, "fermist"]], "FermipyDatasetsReader": [[101, null]], "Files": [[507, "files"]], "Filling a RegionNDMap": [[548, "filling-a-regionndmap"]], "Filling maps from event lists": [[499, "filling-maps-from-event-lists"]], "Filling maps from interpolation": [[499, "filling-maps-from-interpolation"]], "Filter the observations list in time intervals": [[485, "filter-the-observations-list-in-time-intervals"]], "Final remarks": [[392, "final-remarks"]], "Final result": [[601, "final-result"]], "Fit": [[214, null], [482, "fit"], [508, "fit"]], "Fit quality and model residuals": [[464, "fit-quality-and-model-residuals"], [466, "fit-quality-and-model-residuals"]], "Fit quality assessment": [[495, "fit-quality-assessment"]], "Fit quality assessment and model residuals for a MapDataset": [[473, "fit-quality-assessment-and-model-residuals-for-a-mapdataset"]], "Fit quality assessment and model residuals for a joint Datasets": [[473, "fit-quality-assessment-and-model-residuals-for-a-joint-datasets"]], "Fit spectrum": [[464, "fit-spectrum"], [466, "fit-spectrum"]], "Fit statistics": [[599, null]], "Fit the datasets": [[486, "fit-the-datasets"]], "Fit the model": [[519, "fit-the-model"]], "FitResult": [[215, null]], "Fitting": [[396, "fitting"], [495, null]], "Fitting Multiple Datasets with and without the Prior": [[504, "fitting-multiple-datasets-with-and-without-the-prior"]], "Fitting a Dataset with and without the Prior": [[504, "fitting-a-dataset-with-and-without-the-prior"]], "Fitting options": [[495, "fitting-options"]], "Fitting temporal models": [[486, "fitting-temporal-models"]], "Fitting the obtained light curve": [[486, "fitting-the-obtained-light-curve"]], "Fix non-Unix line endings": [[387, "fix-non-unix-line-endings"]], "FixedPointingInfo": [[85, null]], "Float data type: 32 bit or 64 bit?": [[387, "float-data-type-32-bit-or-64-bit"]], "Flux Points Estimation": [[494, "flux-points-estimation"]], "Flux Profile Estimation": [[479, null]], "Flux maps": [[533, "flux-maps"]], "Flux maps for annihilation": [[491, "flux-maps-for-annihilation"]], "Flux maps for decay": [[491, "flux-maps-for-decay"]], "Flux point fitting": [[462, null]], "Flux points": [[492, "flux-points"], [518, "flux-points"], [533, "flux-points"]], "Flux quantities": [[533, "flux-quantities"]], "FluxMaps": [[125, null]], "FluxMetaData": [[126, null]], "FluxPoints": [[127, null]], "FluxPointsDataset": [[102, null], [399, "fluxpointsdataset"], [493, "fluxpointsdataset"]], "FluxPointsEstimator": [[128, null]], "FluxProfileEstimator": [[129, null]], "FoV background": [[498, "fov-background"], [542, null]], "FoVAlignment": [[159, null]], "FoVBackgroundMaker": [[173, null]], "FoVBackgroundModel": [[235, null]], "Fractional excess variance, point-to-point fractional variance and doubling/halving time": [[490, "fractional-excess-variance-point-to-point-fractional-variance-and-doubling-halving-time"]], "Freezing and unfreezing model parameters": [[501, "freezing-and-unfreezing-model-parameters"]], "Functions": [[1, "functions"], [3, "functions"], [4, "functions"], [4, "id1"], [5, "functions"], [7, "functions"], [8, "functions"], [9, "functions"], [10, "functions"], [10, "id1"], [10, "id3"], [12, "functions"], [13, "functions"], [13, "id1"], [13, "id2"], [13, "id3"], [13, "id4"], [13, "id6"], [13, "id8"], [13, "id9"], [13, "id12"], [13, "id13"], [13, "id14"], [13, "id16"], [13, "id17"], [14, "functions"]], "Functions or class methods that return a single object": [[388, "functions-or-class-methods-that-return-a-single-object"]], "Functions returning several values": [[387, "functions-returning-several-values"]], "Fundamental Concepts: Gammapy analysis workflow and package structure": [[596, null]], "Further extensions": [[459, "further-extensions"]], "Further references": [[599, "further-references"]], "GTI": [[86, null]], "Galactic diffuse background": [[508, "galactic-diffuse-background"]], "Galactocentric spatial distributions": [[525, "galactocentric-spatial-distributions"]], "Gamma-ray spectra at production": [[491, "gamma-ray-spectra-at-production"]], "Gammapy": [[425, null]], "Gammapy Binder": [[418, "id1"]], "Gammapy overview": [[407, "gammapy-overview"]], "Gammapy repository": [[418, "gammapy-repository"]], "Gammapy webpages": [[418, "gammapy-webpages"]], "Gaussian spatial model": [[554, null]], "Gaussian spectral model": [[570, null]], "Gaussian temporal model": [[587, null]], "GaussianPrior": [[236, null]], "GaussianSpatialModel": [[237, null]], "GaussianSpectralModel": [[238, null]], "GaussianTemporalModel": [[239, null]], "General Gammapy publications": [[413, "general-gammapy-publications"]], "General code style guidelines": [[393, "general-code-style-guidelines"]], "General conventions": [[387, "general-conventions"]], "General idea and class diagram": [[397, "general-idea-and-class-diagram"]], "General method": [[533, "general-method"]], "General organization of the new approach": [[402, "general-organization-of-the-new-approach"]], "Generalist estimators": [[411, "generalist-estimators"]], "Generalized Gaussian temporal model": [[588, null]], "Generalized gaussian spatial model": [[555, null]], "GeneralizedGaussianSpatialModel": [[240, null]], "GeneralizedGaussianTemporalModel": [[241, null]], "Generating log messages": [[387, "generating-log-messages"]], "Geom": [[194, null]], "Get a fit stat profile for the redshift": [[459, "get-a-fit-stat-profile-for-the-redshift"]], "Get in touch early": [[390, "get-in-touch-early"]], "Get set up": [[390, "get-set-up"]], "Get some data": [[506, "get-some-data"]], "Get the flux points": [[459, "get-the-flux-points"]], "Getting started": [[407, "getting-started"], [420, null], [524, "getting-started"], [525, "getting-started"], [526, "getting-started"]], "Getting started section restructuring": [[407, "getting-started-section-restructuring"]], "Getting started with data": [[532, "getting-started-with-data"]], "Getting started with maps": [[547, "getting-started-with-maps"]], "Getting the reduced dataset": [[470, "getting-the-reduced-dataset"], [471, "getting-the-reduced-dataset"]], "Global Model Handling": [[409, "global-model-handling"]], "Glossary": [[597, "glossary"]], "Glossary and references": [[597, null]], "Goodness of fit": [[601, "goodness-of-fit"]], "Guidelines and specific actions": [[407, "guidelines-and-specific-actions"]], "H.E.S.S. with Gammapy": [[510, null]], "HAWC data access and reduction": [[509, "hawc-data-access-and-reduction"]], "HAWC with Gammapy": [[509, null]], "HAWC: 1D dataset for flux point fitting": [[474, "hawc-1d-dataset-for-flux-point-fitting"]], "HDUIndexTable": [[87, null]], "HDULocation": [[322, null]], "HEALPix geometry": [[546, "healpix-geometry"]], "HEALPix-based maps": [[546, null]], "HESS-DL3: 1D ON/OFF dataset for spectral fitting": [[474, "hess-dl3-1d-on-off-dataset-for-spectral-fitting"]], "Handling of conference material": [[413, "handling-of-conference-material"]], "Help!?": [[423, "help"]], "Hierarchical clustering of observations": [[503, "hierarchical-clustering-of-observations"]], "Hierarchy": [[414, "hierarchy"]], "High Level Analysis Interface": [[534, null]], "High level interface": [[396, "high-level-interface"], [518, null]], "How To": [[407, "how-to"], [535, null]], "How to contribute to Gammapy": [[390, null]], "How to get data values": [[499, "how-to-get-data-values"]], "How to handle API breaking changes?": [[387, "how-to-handle-api-breaking-changes"]], "How to make a Gammapy release": [[417, null]], "How to make a pull request": [[387, "how-to-make-a-pull-request"]], "How to set data values": [[499, "how-to-set-data-values"]], "How to use logging": [[387, "how-to-use-logging"]], "How to use random numbers": [[387, "how-to-use-random-numbers"]], "How to write code": [[387, "how-to-write-code"]], "How to write tests": [[387, "how-to-write-tests"]], "HpxGeom": [[195, null]], "HpxMap": [[196, null]], "HpxNDMap": [[197, null]], "IPython": [[424, "id3"]], "IRF": [[160, null], [414, "irf"]], "IRF axis naming": [[540, "irf-axis-naming"]], "IRFMap": [[161, null]], "IRF_REGISTRY": [[162, null]], "IRFs": [[396, "irfs"], [507, "irfs"]], "Image Plotting": [[499, "image-plotting"]], "ImageProfile": [[130, null]], "ImageProfileEstimator": [[131, null]], "Images and masks": [[401, "images-and-masks"]], "Implement default parameters": [[398, "implement-default-parameters"]], "Implement evaluation region specifications": [[398, "implement-evaluation-region-specifications"]], "Implement sky coordinate handling": [[398, "implement-sky-coordinate-handling"]], "Implementation": [[407, "implementation"], [415, "implementation"]], "Implementation Outline": [[415, "implementation-outline"]], "Implementation impact": [[416, "implementation-impact"]], "Implementation road map": [[397, "implementation-road-map"]], "Implementing a custom model": [[502, "implementing-a-custom-model"]], "Implementing a custom prior": [[504, "implementing-a-custom-prior"]], "Imports and versions": [[482, "imports-and-versions"]], "Improve SourceModels class": [[398, "improve-sourcemodels-class"]], "Improve and implement model serilization": [[398, "improve-and-implement-model-serilization"]], "Improve spatial models": [[398, "improve-spatial-models"]], "In the RST files": [[388, "in-the-rst-files"]], "Inbuilt Gammapy IRFs": [[497, "inbuilt-gammapy-irfs"]], "Include png files as images": [[388, "include-png-files-as-images"]], "Indexing and Slicing Sub-Maps": [[499, "indexing-and-slicing-sub-maps"]], "Infrastructure": [[455, "infrastructure"]], "Inspect the reduced dataset": [[519, "inspect-the-reduced-dataset"]], "Inspecting residuals": [[519, "inspecting-residuals"]], "Install issues": [[423, "install-issues"]], "Installation": [[407, "installation"], [420, "installation"], [421, null]], "Instrument Response Functions (DL3)": [[540, null]], "Interaction Between Models and Dataset Objects": [[409, "interaction-between-models-and-dataset-objects"]], "Interface with MapCoord and SkyCoord": [[547, "interface-with-mapcoord-and-skycoord"]], "Interpolating onto a different geometry": [[499, "interpolating-onto-a-different-geometry"]], "Interpolation and extrapolation": [[387, "interpolation-and-extrapolation"]], "Introduce Shorter YAML Alias Tags": [[410, "introduce-shorter-yaml-alias-tags"]], "Introduce a FluxEstimate base class": [[411, "introduce-a-fluxestimate-base-class"]], "Introduce a FluxMap API": [[411, "introduce-a-fluxmap-api"]], "Introduce a FluxPointsCollection API": [[411, "introduce-a-fluxpointscollection-api"]], "Introduce gammapy.datasets": [[408, "introduce-gammapy-datasets"]], "Introduce gammapy.estimators": [[408, "introduce-gammapy-estimators"]], "Introduce gammapy.makers": [[408, "introduce-gammapy-makers"]], "Introduce gammapy.modeling": [[406, "introduce-gammapy-modeling"]], "Introduce gammapy.visualization": [[408, "introduce-gammapy-visualization"]], "Introduce naming scheme for models": [[398, "introduce-naming-scheme-for-models"]], "Introduction": [[398, "introduction"], [401, "introduction"], [402, "introduction"], [404, "introduction"], [405, "introduction"], [407, "introduction"], [411, "introduction"], [413, "introduction"], [414, "introduction"], [458, "introduction"], [464, "introduction"], [466, "introduction"], [475, "introduction"], [487, "introduction"], [491, "introduction"], [492, "introduction"], [493, "introduction"], [498, "introduction"], [499, "introduction"], [507, "introduction"], [508, "introduction"], [509, "introduction"], [510, "introduction"], [513, "introduction"], [520, null], [521, "introduction"], [523, "introduction"], [525, "introduction"], [526, "introduction"], [599, "introduction"]], "Introduction of background models": [[398, "introduction-of-background-models"]], "Introduction of model name attributes": [[398, "introduction-of-model-name-attributes"]], "Introduction of \u201cforward folded\u201d models": [[398, "introduction-of-forward-folded-models"]], "InverseCDFSampler": [[336, null]], "IsothermalProfile": [[22, null]], "Isotropic diffuse background": [[508, "isotropic-diffuse-background"]], "Iterating by image": [[499, "iterating-by-image"]], "J Factors": [[491, "j-factors"]], "JFactory": [[23, null]], "Joint Analysis": [[531, "joint-analysis"]], "Joint analysis": [[473, "joint-analysis"], [474, "joint-analysis"]], "Jupyter": [[420, "id2"], [422, "jupyter"]], "Jupyter notebooks": [[424, "jupyter-notebooks"]], "Key Features": [[494, "key-features"]], "Known issues": [[455, "known-issues"]], "LabelMapAxis": [[198, null], [499, "labelmapaxis"]], "Latest CTAO performance files": [[507, "latest-ctao-performance-files"]], "Lazy loading of Datasets": [[399, "lazy-loading-of-datasets"]], "LazyFitsData": [[323, null]], "Let\u2019s simulate the model": [[478, "let-s-simulate-the-model"]], "Light Curve Fitting": [[402, "light-curve-fitting"]], "Light Curve estimation by observation": [[484, "light-curve-estimation-by-observation"]], "Light curve temporal model": [[593, null]], "Light curves": [[484, null]], "Light curves for flares": [[485, null]], "LightCurveEstimator": [[132, null]], "LightCurveTemplateTemporalModel": [[242, null]], "Lightcurve": [[402, "lightcurve"]], "Lightcurves": [[492, "lightcurves"]], "Lightcurves in gamma-ray astronomy": [[402, "lightcurves-in-gamma-ray-astronomy"]], "Limitations": [[397, "limitations"]], "Linear temporal model": [[589, null]], "LinearTemporalModel": [[243, null]], "Links to documentation": [[388, "links-to-documentation"]], "Links to other tutorials": [[388, "links-to-other-tutorials"]], "List available catalogs": [[492, "list-available-catalogs"]], "Load Data": [[464, "load-data"]], "Load IRFs and prepare dataset": [[458, "load-irfs-and-prepare-dataset"]], "Load catalogs": [[492, "load-catalogs"]], "Load data": [[466, "load-data"]], "Load spectral points": [[462, "load-spectral-points"]], "Load the data": [[459, "load-the-data"]], "Load the light curve for the PKS 2155-304 as a FluxPoints object.": [[494, "load-the-light-curve-for-the-pks-2155-304-as-a-fluxpoints-object"]], "Load the tables": [[509, "load-the-tables"]], "Loading models from a catalog": [[501, "loading-models-from-a-catalog"]], "Locate origin of warnings": [[387, "locate-origin-of-warnings"]], "Log parabola spectral model": [[571, null]], "Log parabola spectral norm model": [[572, null]], "Log-Parabola Fit": [[462, "log-parabola-fit"]], "LogParabolaNormSpectralModel": [[244, null]], "LogParabolaSpectralModel": [[245, null]], "LogSpiral": [[34, null]], "LogUniformPrior": [[246, null]], "Long Term Support releases": [[413, "long-term-support-releases"]], "Lorimer2006": [[35, null]], "Low level API": [[519, null]], "Low level map and cube analysis": [[393, "low-level-map-and-cube-analysis"]], "MAKER_REGISTRY": [[174, null]], "METHOD_DEFAULT": [[330, null]], "METHOD_KWARGS_DEFAULT": [[331, null]], "MODEL_REGISTRY": [[247, null]], "Maintainer and developer perspective": [[394, "maintainer-and-developer-perspective"]], "Maintenance and Code Quality": [[396, "maintenance-and-code-quality"]], "Make a Bugfix release": [[417, "make-a-bugfix-release"]], "Make a Li&Ma test over the events": [[487, "make-a-li-ma-test-over-the-events"]], "Make a theta-square plot": [[506, null]], "Make sky images": [[475, "make-sky-images"]], "Make small pull requests": [[390, "make-small-pull-requests"]], "Maker": [[175, null]], "Makers": [[414, "makers"]], "Makers - Data reduction": [[498, null]], "Making a butterfly plot": [[519, "making-a-butterfly-plot"]], "Making a pull request that requires backport": [[387, "making-a-pull-request-that-requires-backport"]], "Making a pull request which skips GitHub Actions": [[387, "making-a-pull-request-which-skips-github-actions"]], "Making a pull request with new or modified datasets": [[387, "making-a-pull-request-with-new-or-modified-datasets"]], "Making a theta2 plot for a given energy range": [[506, "making-a-theta2-plot-for-a-given-energy-range"]], "Manual grouping of observations": [[503, "manual-grouping-of-observations"]], "Map": [[199, null]], "Map Analysis / Data Reduction": [[396, "map-analysis-data-reduction"]], "MapAxes": [[200, null]], "MapAxis": [[201, null]], "MapCoord": [[202, null], [547, "mapcoord"]], "MapDataset": [[103, null], [399, "mapdataset"], [493, "mapdataset"]], "MapDatasetEventSampler": [[104, null], [400, "mapdataseteventsampler"]], "MapDatasetMaker": [[176, null]], "MapDatasetMetaData": [[105, null]], "MapDatasetOnOff": [[106, null], [399, "mapdatasetonoff"]], "MapPanelPlotter": [[374, null]], "Maps": [[203, null], [396, "maps"], [499, null], [521, "maps"]], "Maps operations": [[499, "maps-operations"]], "Mask dilation and erosion": [[500, "mask-dilation-and-erosion"]], "Mask maps": [[500, null]], "Mask modifications": [[500, "mask-modifications"]], "Mask some sky regions": [[500, "mask-some-sky-regions"]], "Masks for fitting": [[500, "masks-for-fitting"]], "Masks operations": [[500, "masks-operations"]], "Meetings": [[396, "meetings"]], "Metadata API": [[414, "metadata-api"]], "Metadata files": [[413, "metadata-files"]], "Metadata generation and propagation along the dataflow": [[414, "metadata-generation-and-propagation-along-the-dataflow"]], "Methods to characterize variability": [[490, "methods-to-characterize-variability"]], "MeyerCrabSpectralModel": [[248, null]], "Minor changes": [[408, "minor-changes"]], "Mission elapsed times (MET)": [[602, "mission-elapsed-times-met"]], "Model": [[249, null]], "Model Gallery": [[511, null], [513, "model-gallery"]], "Model and dataset": [[495, "model-and-dataset"], [504, "model-and-dataset"]], "Model fit": [[475, "model-fit"]], "Model fitting": [[465, "model-fitting"], [518, "model-fitting"]], "Model gallery": [[549, null]], "Model lists and serialisation": [[502, "model-lists-and-serialisation"]], "Model the observed spectrum": [[459, "model-the-observed-spectrum"]], "ModelBase": [[250, null]], "Modeling": [[396, "modeling"], [414, "modeling"], [489, "modeling"]], "Modeling and Fitting (DL4 to DL5)": [[595, null]], "Modeling and fitting": [[473, "modeling-and-fitting"]], "Modelling": [[470, "modelling"], [501, null]], "Models": [[251, null], [502, null]], "Models with energy dependent morphology": [[502, "models-with-energy-dependent-morphology"]], "Models with shared parameter": [[502, "models-with-shared-parameter"]], "Modifying Data": [[499, "modifying-data"]], "Modifying model parameters": [[502, "modifying-model-parameters"]], "MooreProfile": [[24, null]], "Morphological energy dependence estimation": [[476, null]], "Motivation": [[415, "motivation"], [416, "motivation"]], "Multi instrument joint 3D and 1D analysis": [[474, null]], "NFWProfile": [[25, null]], "N_JOBS_DEFAULT": [[332, null]], "Naima spectral model": [[573, null]], "NaimaSpectralModel": [[252, null]], "New features": [[450, "new-features"], [453, "new-features"], [454, "new-features"], [455, "new-features"]], "Next steps": [[507, "next-steps"], [509, "next-steps"], [510, "next-steps"]], "Night-wise LC estimation": [[484, "night-wise-lc-estimation"]], "Norm Spectral Models": [[502, "norm-spectral-models"]], "Notations": [[600, "notations"]], "Notes": [[599, "notes"]], "OGIPDatasetReader": [[107, null]], "OGIPDatasetWriter": [[108, null]], "Object text repr, str and info": [[387, "object-text-repr-str-and-info"]], "Objective": [[470, "objective"], [471, "objective"], [477, "objective"], [478, "objective"], [503, "objective"]], "Objectives": [[397, "objectives"]], "Observation": [[88, null]], "Observation duration and effective livetime": [[498, "observation-duration-and-effective-livetime"]], "Observation selection": [[465, "observation-selection"], [518, "observation-selection"]], "ObservationEventSampler": [[109, null]], "ObservationFilter": [[89, null]], "ObservationMetaData": [[90, null]], "ObservationTable": [[91, null]], "Observational clustering": [[503, null]], "Observations": [[92, null]], "ObservationsEventsSampler": [[93, null]], "Obtain the data to use": [[476, "obtain-the-data-to-use"]], "Obtain the observations": [[503, "obtain-the-observations"]], "Obtaining an integral flux sensitivity": [[458, "obtaining-an-integral-flux-sensitivity"]], "Old example data": [[418, "old-example-data"]], "On-Off analysis": [[467, "on-off-analysis"]], "Opening the data": [[487, "opening-the-data"]], "OptimizeResult": [[216, null]], "Optional dependencies": [[386, "optional-dependencies"], [404, "optional-dependencies"]], "Other folders": [[418, "other-folders"]], "Other packages": [[523, "other-packages"]], "Other repositories": [[418, "other-repositories"]], "Others": [[387, "others"], [418, "others"]], "Outlook": [[399, "outlook"], [401, "outlook"], [403, "outlook"], [404, "outlook"], [406, "outlook"], [407, "outlook"], [408, "outlook"], [411, "outlook"]], "Output in Jupyter notebook cells": [[387, "output-in-jupyter-notebook-cells"]], "Outputs from the Nested Sampling": [[416, "outputs-from-the-nested-sampling"]], "Overview": [[542, "overview"], [544, "overview"], [545, "overview"]], "PIG 1 - PIG purpose and guidelines": [[392, null]], "PIG 10 - Regions": [[401, null]], "PIG 11 - Light curves": [[402, null]], "PIG 12 - High level interface": [[403, null]], "PIG 13 - Gammapy dependencies and distribution": [[404, null]], "PIG 14 - Uncertainty estimation": [[405, null]], "PIG 16 - Gammapy package structure": [[406, null]], "PIG 18 - Documentation": [[407, null]], "PIG 19 - Gammapy package structure follow up": [[408, null]], "PIG 2 - Organization of low level analysis code": [[393, null]], "PIG 20 - Global Model API": [[409, null]], "PIG 21 - Models improvements": [[410, null]], "PIG 22 - Unified flux estimators API": [[411, null]], "PIG 23 - Gammapy release cycle and version numbering": [[412, null]], "PIG 24 - Authorship policy": [[413, null]], "PIG 25 - Metadata container for Gammapy": [[414, null]], "PIG 26 - Model Priors API": [[415, null]], "PIG 27 - Bayesian Inference using Nested Sampling": [[416, null]], "PIG 3 - Plan for dropping Python 2.7 support": [[394, null]], "PIG 4 - Setup for tutorial notebooks and data": [[395, null]], "PIG 5 - Gammapy 1.0 roadmap": [[396, null]], "PIG 6 - CTA observation handling": [[397, null]], "PIG 7 - Models": [[398, null]], "PIG 8 - Datasets": [[399, null]], "PIG 9 - Event sampling": [[400, null]], "PIG review": [[392, "pig-review"]], "PIG status": [[392, "pig-status"]], "PIGs": [[391, null]], "POOL_KWARGS_DEFAULT": [[333, null]], "PSF": [[497, "psf"], [508, "psf"]], "PSF3D": [[163, null]], "PSFKernel": [[164, null]], "PSFKing": [[165, null]], "PSFMap": [[166, null]], "PWN": [[50, null]], "Package / API": [[496, null], [513, "package-api"]], "Package and docs": [[418, "package-and-docs"]], "Package structure and dependencies": [[441, "package-structure-and-dependencies"]], "Paczynski1990": [[36, null]], "Paczynski1990Velocity": [[37, null]], "Papers": [[396, "papers"]], "Parallel evaluation of datasets": [[399, "parallel-evaluation-of-datasets"]], "Parameter": [[217, null]], "ParameterEstimator": [[133, null]], "ParameterSensitivityEstimator": [[134, null]], "Parameters": [[218, null]], "ParametricPSF": [[167, null]], "Perform spectral model fitting": [[460, "perform-spectral-model-fitting"]], "Perform the data reduction loop": [[519, "perform-the-data-reduction-loop"]], "Perform the data reduction loop.": [[460, "perform-the-data-reduction-loop"]], "Performance and precision evaluation": [[400, "performance-and-precision-evaluation"]], "Phase curve temporal model": [[592, null]], "Phase-resolved map": [[487, "phase-resolved-map"]], "Phase-resolved spectrum": [[487, "phase-resolved-spectrum"]], "PhaseBackgroundMaker": [[177, null]], "Phasogram": [[487, "phasogram"]], "Piecewise  norm spectral model": [[574, null]], "Piecewise norm spatial model": [[556, null]], "PiecewiseNormSpatialModel": [[253, null]], "PiecewiseNormSpectralModel": [[254, null]], "Pixel coordinate convention": [[387, "pixel-coordinate-convention"]], "Plot": [[475, "plot"]], "Plot off regions": [[464, "plot-off-regions"]], "Plot the fitted spectrum": [[519, "plot-the-fitted-spectrum"]], "Plot the observed and intrinsic fluxes": [[459, "plot-the-observed-and-intrinsic-fluxes"]], "Plotting Results": [[479, "plotting-results"]], "Plotting a RegionGeom": [[548, "plotting-a-regiongeom"]], "Plotting models on a (counts) map": [[501, "plotting-models-on-a-counts-map"]], "Plotting the final results of the 1D Analysis": [[465, "plotting-the-final-results-of-the-1d-analysis"]], "Plotting the map content": [[548, "plotting-the-map-content"]], "Plotting the results": [[476, "plotting-the-results"]], "Plotting the underlying region": [[548, "plotting-the-underlying-region"]], "Point Spread Function": [[541, null]], "Point source sensitivity": [[458, null]], "Point spatial model": [[557, null]], "Point spread function": [[507, "point-spread-function"]], "PointSpatialModel": [[255, null]], "PointingInfo": [[94, null]], "PointingMode": [[95, null]], "Possible implementations": [[413, "possible-implementations"]], "Post release": [[417, "post-release"]], "Power Law Fit": [[462, "power-law-fit"]], "Power law 2 spectral model": [[576, null]], "Power law norm spectral model": [[577, null]], "Power law spectral model": [[575, null]], "PowerLaw temporal model": [[590, null]], "PowerLaw2SpectralModel": [[256, null]], "PowerLawNormSpectralModel": [[257, null]], "PowerLawSpectralModel": [[258, null]], "PowerLawTemporalModel": [[259, null]], "Predicted counts": [[531, "predicted-counts"]], "Prepare and run the event sampler": [[478, "prepare-and-run-the-event-sampler"]], "Prepare the datasets creation": [[460, "prepare-the-datasets-creation"]], "Preparing reduced datasets geometry": [[519, "preparing-reduced-datasets-geometry"]], "Prerequisites": [[460, "prerequisites"], [462, "prerequisites"], [464, "prerequisites"], [465, "prerequisites"], [466, "prerequisites"], [467, "prerequisites"], [470, "prerequisites"], [474, "prerequisites"], [476, "prerequisites"], [477, "prerequisites"], [478, "prerequisites"], [479, "prerequisites"], [482, "prerequisites"], [484, "prerequisites"], [485, "prerequisites"], [486, "prerequisites"], [490, "prerequisites"], [495, "prerequisites"], [500, "prerequisites"], [501, "prerequisites"], [504, "prerequisites"], [518, "prerequisites"], [519, "prerequisites"]], "Pretty-print source information": [[492, "pretty-print-source-information"]], "PrimaryFlux": [[26, null]], "Prior": [[260, null]], "PriorParameter": [[219, null]], "PriorParameters": [[220, null]], "Priors": [[504, null]], "Profile Estimation": [[479, "profile-estimation"]], "Profile Likelihood": [[601, "profile-likelihood"]], "Profiles": [[491, "profiles"]], "Project Management": [[396, "project-management"]], "Project setup": [[418, null]], "Projects": [[396, "projects"]], "Proposal": [[395, "proposal"], [397, "proposal"], [398, "proposal"], [399, "proposal"], [400, "proposal"], [401, "proposal"], [402, "proposal"], [403, "proposal"], [405, "proposal"], [406, "proposal"], [407, "proposal"], [408, "proposal"], [409, "proposal"], [410, "proposal"], [416, "proposal"]], "Proposal of API for flux estimate results": [[411, "proposal-of-api-for-flux-estimate-results"]], "Proposed Approach": [[479, "proposed-approach"]], "Proposed approach": [[460, "proposed-approach"], [462, "proposed-approach"], [465, "proposed-approach"], [467, "proposed-approach"], [468, "proposed-approach"], [470, "proposed-approach"], [471, "proposed-approach"], [474, "proposed-approach"], [477, "proposed-approach"], [478, "proposed-approach"], [482, "proposed-approach"], [484, "proposed-approach"], [485, "proposed-approach"], [486, "proposed-approach"], [489, "proposed-approach"], [490, "proposed-approach"], [495, "proposed-approach"], [500, "proposed-approach"], [501, "proposed-approach"], [503, "proposed-approach"], [518, "proposed-approach"], [519, "proposed-approach"]], "Proposed class diagram": [[397, "proposed-class-diagram"]], "Proposed metadata classes": [[414, "proposed-metadata-classes"]], "Proposed solution": [[414, "proposed-solution"]], "Pull Requests": [[441, "pull-requests"], [442, "pull-requests"], [450, "pull-requests"], [451, "pull-requests"], [452, "pull-requests"], [453, "pull-requests"], [454, "pull-requests"], [455, "pull-requests"]], "Pull requests": [[427, "pull-requests"], [428, "pull-requests"], [429, "pull-requests"], [430, "pull-requests"], [431, "pull-requests"], [432, "pull-requests"], [433, "pull-requests"], [434, "pull-requests"], [435, "pull-requests"], [436, "pull-requests"], [437, "pull-requests"], [438, "pull-requests"], [439, "pull-requests"], [440, "pull-requests"], [443, "pull-requests"], [444, "pull-requests"], [445, "pull-requests"], [446, "pull-requests"], [447, "pull-requests"], [448, "pull-requests"], [449, "pull-requests"]], "Pulsar": [[51, null]], "Pulsar Source Models": [[527, null]], "Pulsar Wind Nebula Source Models": [[528, null]], "Pulsar analysis": [[487, null]], "Python": [[424, "id2"]], "Python scripts": [[424, "python-scripts"]], "Python version support": [[387, "python-version-support"]], "RadMax2D": [[168, null]], "Read and Introduce Data": [[479, "read-and-introduce-data"]], "Read in input images": [[468, "read-in-input-images"]], "Read the datasets": [[501, "read-the-datasets"]], "Read the energy-dependent model": [[478, "read-the-energy-dependent-model"]], "Reading Maps": [[499, "reading-maps"]], "Reading and Writing": [[499, "reading-and-writing"]], "Reading and writing masks": [[500, "reading-and-writing-masks"]], "Reading different datasets": [[474, "reading-different-datasets"]], "RecoPSFMap": [[169, null]], "Recommended Setup": [[420, "recommended-setup"], [422, null]], "Reference": [[407, "reference"], [598, "reference"]], "References": [[597, "publications"]], "Reflected regions background": [[498, "reflected-regions-background"], [544, null]], "ReflectedRegionsBackgroundMaker": [[178, null]], "ReflectedRegionsFinder": [[179, null]], "Region arguments": [[401, "region-arguments"]], "RegionGeom": [[204, null], [548, "regiongeom"]], "RegionGeom and RegionNDMap": [[548, null]], "RegionGeom and coordinates": [[548, "regiongeom-and-coordinates"]], "RegionNDMap": [[205, null], [548, "regionndmap"]], "RegionsFinder": [[180, null]], "Relation to WCS geometries": [[548, "relation-to-wcs-geometries"]], "Release notes": [[387, "release-notes"], [426, null]], "Release preparation, feature freeze": [[412, "release-preparation-feature-freeze"]], "Release scheduling and LTS": [[412, "release-scheduling-and-lts"]], "Releases": [[396, "releases"], [413, "releases"], [418, "releases"]], "Releasing the final version of the major release": [[417, "releasing-the-final-version-of-the-major-release"]], "Releasing the first major release candidate": [[417, "releasing-the-first-major-release-candidate"]], "Removing a model from a dataset": [[501, "removing-a-model-from-a-dataset"]], "Removing an attribute": [[387, "removing-an-attribute"]], "Renaming an argument": [[387, "renaming-an-argument"]], "Required dependencies": [[386, "required-dependencies"], [404, "required-dependencies"]], "Requirements": [[414, "requirements"]], "Resampling datasets": [[493, "resampling-datasets"]], "Resolve gammapy.detect": [[408, "resolve-gammapy-detect"]], "Results": [[458, "results"]], "Results exploration": [[465, "results-exploration"]], "Ring background": [[498, "ring-background"], [545, null]], "Ring background map": [[471, null]], "RingBackgroundMaker": [[181, null]], "Rotated regions": [[401, "rotated-regions"]], "Run Estimation": [[479, "run-estimation"]], "Run Estimator": [[476, "run-estimator"]], "Run data reduction chain": [[464, "run-data-reduction-chain"], [466, "run-data-reduction-chain"]], "Run the 1D data reduction": [[484, "run-the-1d-data-reduction"]], "Run the 3D data reduction": [[484, "run-the-3d-data-reduction"]], "Running config driven data reduction": [[598, "running-config-driven-data-reduction"]], "Running tests & building Documentation": [[390, "running-tests-building-documentation"]], "Running the Data Reduction": [[465, "running-the-data-reduction"]], "Running the analysis": [[518, "running-the-analysis"]], "Running the estimation": [[465, "running-the-estimation"]], "Running the first step of the analysis: the Data Reduction": [[465, "running-the-first-step-of-the-analysis-the-data-reduction"]], "Running the fit": [[465, "running-the-fit"]], "Running the light curve extraction in 1D": [[484, "running-the-light-curve-extraction-in-1d"]], "SED types": [[533, "sed-types"]], "SNR": [[52, null]], "SNRTrueloveMcKee": [[53, null]], "SPATIAL_MODEL_REGISTRY": [[261, null]], "SPECTRAL_MODEL_REGISTRY": [[262, null]], "Safe data range definition": [[543, "safe-data-range-definition"]], "Safe data range handling": [[498, "safe-data-range-handling"]], "SafeMaskMaker": [[182, null]], "Sample a source with energy-dependent temporal evolution": [[478, null]], "Sampling methods": [[400, "sampling-methods"]], "Sampling the source and background events": [[477, "sampling-the-source-and-background-events"]], "Save dataset to disk": [[465, "save-dataset-to-disk"], [518, "save-dataset-to-disk"], [519, "save-dataset-to-disk"]], "ScaleSpectralModel": [[263, null]], "ScaledRegularGridInterpolator": [[326, null]], "Scripts": [[513, "scripts"], [514, null]], "Select a catalog subset": [[492, "select-a-catalog-subset"]], "Select a source": [[492, "select-a-source"]], "Select observations": [[475, "select-observations"]], "Select the ON region": [[460, "select-the-on-region"]], "Select the data": [[460, "select-the-data"], [485, "select-the-data"]], "Selecting models contributing to a given region": [[501, "selecting-models-contributing-to-a-given-region"]], "Selecting models from a list": [[501, "selecting-models-from-a-list"]], "SensitivityEstimator": [[135, null]], "Serialisation": [[415, "serialisation"], [497, "serialisation"], [497, "id1"], [497, "id2"], [508, "serialisation"]], "Serialisation and I/O": [[479, "serialisation-and-i-o"]], "Serialisation of datasets": [[531, "serialisation-of-datasets"]], "Serialisation of the fit result": [[465, "serialisation-of-the-fit-result"]], "Serialisation of the results": [[465, "serialisation-of-the-results"]], "Serialisation of the samples": [[416, "serialisation-of-the-samples"]], "Serialising models": [[501, "serialising-models"]], "Serialization": [[414, "serialization"]], "Setting fitting parameters": [[465, "setting-fitting-parameters"]], "Setting modeling and fitting parameters": [[518, "setting-modeling-and-fitting-parameters"]], "Setting the background normalization maker": [[518, "setting-the-background-normalization-maker"]], "Setting the data to use": [[518, "setting-the-data-to-use"]], "Setting the exclusion mask": [[465, "setting-the-exclusion-mask"], [518, "setting-the-exclusion-mask"]], "Setting the reduced datasets geometry": [[518, "setting-the-reduced-datasets-geometry"]], "Setup": [[458, "setup"], [459, "setup"], [460, "setup"], [462, "setup"], [464, "setup"], [465, "setup"], [466, "setup"], [467, "setup"], [468, "setup"], [470, "setup"], [471, "setup"], [475, "setup"], [476, "setup"], [477, "setup"], [478, "setup"], [479, "setup"], [484, "setup"], [485, "setup"], [486, "setup"], [489, "setup"], [490, "setup"], [491, "setup"], [493, "setup"], [498, "setup"], [499, "setup"], [500, "setup"], [501, "setup"], [502, "setup"], [506, "setup"], [507, "setup"], [508, "setup"], [518, "setup"], [519, "setup"], [521, "setup"]], "Shell spatial model": [[558, null]], "Shell2 spatial model": [[559, null]], "Shell2SpatialModel": [[264, null]], "ShellSpatialModel": [[265, null]], "Show images": [[475, "show-images"]], "Show the results tables": [[476, "show-the-results-tables"]], "Show various observation quantities": [[503, "show-various-observation-quantities"]], "SimplePulsar": [[54, null]], "Simplify YAML Parameter Representation": [[410, "simplify-yaml-parameter-representation"]], "Simplify YAML Representation": [[410, "simplify-yaml-representation"]], "Simulate multiple event lists": [[477, "simulate-multiple-event-lists"]], "Simulating a light curve": [[486, "simulating-a-light-curve"]], "Simulating and fitting a time varying source": [[486, null]], "Simulation": [[482, "simulation"]], "Simulation of MapDataset and SpectrumDataset": [[399, "simulation-of-mapdataset-and-spectrumdataset"]], "Simulation of a single spectrum": [[467, "simulation-of-a-single-spectrum"]], "Sine temporal model": [[591, null]], "SineTemporalModel": [[266, null]], "Skip unit tests for some Astropy versions": [[387, "skip-unit-tests-for-some-astropy-versions"]], "Sky and pixel regions": [[401, "sky-and-pixel-regions"]], "Sky maps (DL4)": [[547, null]], "SkyModel": [[267, null], [502, "skymodel"]], "Smooth broken power law spectral model": [[578, null]], "SmoothBrokenPowerLawSpectralModel": [[268, null]], "Some terminology": [[397, "some-terminology"]], "Source Detection": [[475, "source-detection"]], "Source candidates": [[468, "source-candidates"]], "Source catalogs": [[492, null], [521, "source-catalogs"], [530, null]], "Source detection and significance maps": [[468, null]], "Source information": [[492, "source-information"]], "Source models": [[492, "source-models"], [507, "source-models"]], "Source object": [[492, "source-object"]], "Source statistic": [[464, "source-statistic"]], "SourceCatalog": [[56, null]], "SourceCatalog1LHAASO": [[57, null]], "SourceCatalog2FHL": [[58, null]], "SourceCatalog2HWC": [[59, null]], "SourceCatalog2PC": [[60, null]], "SourceCatalog3FGL": [[61, null]], "SourceCatalog3FHL": [[62, null]], "SourceCatalog3HWC": [[63, null]], "SourceCatalog3PC": [[64, null]], "SourceCatalog4FGL": [[65, null]], "SourceCatalogGammaCat": [[66, null]], "SourceCatalogHGPS": [[67, null]], "SourceCatalogLargeScaleHGPS": [[68, null]], "SourceCatalogObject": [[69, null]], "SourceCatalogObject1LHAASO": [[70, null]], "SourceCatalogObject2FHL": [[71, null]], "SourceCatalogObject2HWC": [[72, null]], "SourceCatalogObject2PC": [[73, null]], "SourceCatalogObject3FGL": [[74, null]], "SourceCatalogObject3FHL": [[75, null]], "SourceCatalogObject3HWC": [[76, null]], "SourceCatalogObject3PC": [[77, null]], "SourceCatalogObject4FGL": [[78, null]], "SourceCatalogObjectGammaCat": [[79, null]], "SourceCatalogObjectHGPS": [[80, null]], "SourceCatalogObjectHGPSComponent": [[81, null]], "SourceIRFModel": [[398, "sourceirfmodel"]], "Spatial analysis": [[475, "spatial-analysis"]], "Spatial models": [[502, "spatial-models"], [549, "spatial-models"], [551, null]], "SpatialIRFModel": [[398, "spatialirfmodel"]], "SpatialModel": [[269, null]], "Special cases": [[601, "special-cases"]], "Specificities of the HGPS catalog": [[492, "specificities-of-the-hgps-catalog"]], "Spectral Absorption Model": [[410, "spectral-absorption-model"]], "Spectral Norm Models": [[410, "spectral-norm-models"]], "Spectral analysis": [[464, null]], "Spectral analysis of extended sources": [[460, null]], "Spectral analysis with energy-dependent directional cuts": [[466, null]], "Spectral analysis with the HLI": [[465, null]], "Spectral models": [[502, "spectral-models"], [549, "spectral-models"], [562, null]], "Spectral models and flux points": [[521, "spectral-models-and-flux-points"]], "Spectral points": [[475, "spectral-points"]], "SpectralIRFModel": [[398, "spectralirfmodel"]], "SpectralModel": [[270, null]], "Spectrum": [[475, "spectrum"]], "Spectrum dataset": [[498, "spectrum-dataset"]], "SpectrumDataset": [[110, null], [399, "spectrumdataset"], [493, "spectrumdataset"]], "SpectrumDatasetMaker": [[183, null]], "SpectrumDatasetOnOff": [[111, null], [399, "spectrumdatasetonoff"]], "Sphinx gallery extension": [[388, "sphinx-gallery-extension"]], "Spiral arm models": [[525, "spiral-arm-models"]], "Stack observations": [[464, "stack-observations"]], "Stacked analysis": [[473, "stacked-analysis"]], "Stacking Multiple Datasets": [[531, "stacking-multiple-datasets"]], "Statistical significance of a detection": [[506, "statistical-significance-of-a-detection"]], "Statistical utility functions": [[600, null]], "Status": [[397, "status"], [406, "status"]], "Storing the energy dispersion information as a function of sky position": [[539, "storing-the-energy-dispersion-information-as-a-function-of-sky-position"]], "Storing the results and further studies": [[402, "storing-the-results-and-further-studies"]], "Sub-packages": [[524, "sub-packages"]], "Suggestions": [[413, "suggestions"]], "Summary": [[427, "summary"], [428, "summary"], [429, "summary"], [430, "summary"], [431, "summary"], [432, "summary"], [433, "summary"], [434, "summary"], [435, "summary"], [436, "summary"], [437, "summary"], [438, "summary"], [439, "summary"], [440, "summary"], [441, "summary"], [442, "summary"], [443, "summary"], [444, "summary"], [445, "summary"], [446, "summary"], [447, "summary"], [448, "summary"], [449, "summary"], [450, "summary"], [451, "summary"], [452, "summary"], [453, "summary"], [454, "summary"], [455, "summary"], [473, "summary"], [508, "summary"]], "Super Exponential Cutoff Power Law Model used for 4FGL-DR1 (and DR2)": [[581, null]], "Super Exponential Cutoff Power Law Model used for 4FGL-DR3": [[580, null]], "Super exponential cutoff power law model used for 3FGL": [[579, null]], "SuperExpCutoffPowerLaw3FGLSpectralModel": [[271, null]], "SuperExpCutoffPowerLaw4FGLDR3SpectralModel": [[272, null]], "SuperExpCutoffPowerLaw4FGLSpectralModel": [[273, null]], "Supernova Remnant Models": [[529, null]], "Support for Asymmetric IRFs": [[497, "support-for-asymmetric-irfs"]], "Support of python Cython, numpy and astropy versions": [[412, "support-of-python-cython-numpy-and-astropy-versions"]], "Survey Map Script": [[516, null]], "Survey panel plots": [[603, "survey-panel-plots"]], "TEMPORAL_MODEL_REGISTRY": [[274, null]], "TS map estimation": [[468, "ts-map-estimation"]], "TSMapEstimator": [[136, null]], "Table conversion": [[494, "table-conversion"]], "Task List": [[399, "task-list"]], "Task list": [[398, "task-list"], [400, "task-list"], [401, "task-list"], [402, "task-list"], [403, "task-list"], [404, "task-list"], [416, "task-list"]], "Template spatial model": [[560, null]], "Template spectral model": [[582, null]], "TemplateNDSpatialModel": [[275, null]], "TemplateNDSpectralModel": [[276, null]], "TemplateNPredModel": [[277, null]], "TemplatePhaseCurveTemporalModel": [[278, null]], "TemplateSpatialModel": [[279, null]], "TemplateSpectralModel": [[280, null]], "Temporal models": [[502, "temporal-models"], [549, "temporal-models"], [584, null]], "TemporalModel": [[281, null]], "Testing of plotting functions": [[387, "testing-of-plotting-functions"]], "The case of image and cube analysis": [[393, "the-case-of-image-and-cube-analysis"]], "The chi-squared value for each parameter of interest": [[476, "the-chi-squared-value-for-each-parameter-of-interest"]], "The gammapy-data repository": [[418, "the-gammapy-data-repository"]], "The gammapy-extra repository": [[418, "the-gammapy-extra-repository"]], "The index tables": [[532, "the-index-tables"]], "The reflected region finder": [[544, "the-reflected-region-finder"]], "The results for testing energy dependence": [[476, "the-results-for-testing-energy-dependence"]], "The results of the source signal above the background in each energy bin": [[476, "the-results-of-the-source-signal-above-the-background-in-each-energy-bin"]], "The setup": [[474, "the-setup"], [494, "the-setup"], [495, "the-setup"], [504, "the-setup"]], "Time": [[483, null], [513, "time"]], "Time bin preparation": [[402, "time-bin-preparation"]], "Time bins": [[402, "time-bins"]], "Time differences": [[602, "time-differences"]], "Time format and scale": [[602, "time-format-and-scale"]], "Time handling in Gammapy": [[602, "time-handling-in-gammapy"]], "Time resolved spectroscopy algorithm": [[489, "time-resolved-spectroscopy-algorithm"]], "Time resolved spectroscopy estimator": [[489, null]], "Time variable source using a lightcurve": [[477, "time-variable-source-using-a-lightcurve"]], "TimeMapAxis": [[206, null], [499, "timemapaxis"]], "Timing Analysis": [[396, "timing-analysis"]], "TimmerKonig_lightcurve_simulator": [[293, null]], "Troubleshooting": [[423, null], [598, "troubleshooting"]], "Tutorial overview": [[476, "tutorial-overview"], [507, "tutorial-overview"], [509, "tutorial-overview"]], "Tutorials": [[407, "tutorials"], [513, null]], "Tutorials Overview": [[420, "tutorials-overview"]], "Type validation": [[414, "type-validation"]], "Types of supported datasets": [[531, "types-of-supported-datasets"]], "Unification of flux estimators?": [[411, "unification-of-flux-estimators"]], "UniformPrior": [[282, null]], "Unify calling interface for models": [[398, "unify-calling-interface-for-models"]], "Upsampling and downsampling non-spatial axes": [[548, "upsampling-and-downsampling-non-spatial-axes"]], "Use cases": [[415, "use-cases"], [416, "use-cases"]], "Use cases / scenarios": [[397, "use-cases-scenarios"]], "User guide": [[536, null]], "User perspective": [[394, "user-perspective"]], "User testing of the API": [[416, "user-testing-of-the-api"]], "Using Anaconda / Miniconda": [[421, "using-anaconda-miniconda"]], "Using Factory Methods": [[499, "using-factory-methods"]], "Using Gammapy": [[424, null]], "Using Gammapy IRFs": [[497, null]], "Using Mamba": [[421, "using-mamba"]], "Using YAML configuration files": [[518, "using-yaml-configuration-files"]], "Using YAML configuration files for setting/writing the Data Reduction parameters": [[465, "using-yaml-configuration-files-for-setting-writing-the-data-reduction-parameters"]], "Using data stored into your computer": [[465, "using-data-stored-into-your-computer"]], "Using gammapy.analysis": [[534, "using-gammapy-analysis"]], "Using gammapy.astro.darkmatter": [[523, "using-gammapy-astro-darkmatter"]], "Using gammapy.astro.source": [[526, "using-gammapy-astro-source"]], "Using gammapy.catalog": [[530, "using-gammapy-catalog"]], "Using gammapy.data": [[532, "using-gammapy-data"]], "Using gammapy.datasets": [[531, "using-gammapy-datasets"]], "Using gammapy.estimators": [[533, "using-gammapy-estimators"]], "Using gammapy.irf": [[540, "using-gammapy-irf"]], "Using gammapy.makers": [[543, "using-gammapy-makers"]], "Using gammapy.maps": [[547, "using-gammapy-maps"]], "Using gammapy.modeling": [[595, "using-gammapy-modeling"]], "Using masks": [[493, "using-masks"]], "Using other package managers": [[421, "using-other-package-managers"]], "Using pip": [[421, "using-pip"]], "Using regions": [[544, "using-regions"]], "Using the reflected background estimator": [[544, "using-the-reflected-background-estimator"]], "Utility functions": [[602, null]], "ValleeSpiral": [[38, null]], "Variables": [[1, "variables"], [2, "variables"], [3, "variables"], [4, "variables"], [5, "variables"], [7, "variables"], [8, "variables"], [10, "variables"], [13, "variables"], [13, "id11"]], "Velocity distributions": [[525, "velocity-distributions"]], "Venv Environments": [[419, "venv-environments"]], "Version 0.1": [[426, "version-0-1"]], "Version 0.10": [[426, "version-0-10"]], "Version 0.11": [[426, "version-0-11"]], "Version 0.12": [[426, "version-0-12"]], "Version 0.13": [[426, "version-0-13"]], "Version 0.14": [[426, "version-0-14"]], "Version 0.15": [[426, "version-0-15"]], "Version 0.16": [[426, "version-0-16"]], "Version 0.17": [[426, "version-0-17"]], "Version 0.18": [[426, "version-0-18"]], "Version 0.19": [[426, "version-0-19"]], "Version 0.2": [[426, "version-0-2"]], "Version 0.20": [[426, "version-0-20"]], "Version 0.20.1": [[426, "version-0-20-1"]], "Version 0.3": [[426, "version-0-3"]], "Version 0.4": [[426, "version-0-4"]], "Version 0.5": [[426, "version-0-5"]], "Version 0.6": [[426, "version-0-6"]], "Version 0.7": [[426, "version-0-7"]], "Version 0.8": [[426, "version-0-8"]], "Version 0.9": [[426, "version-0-9"]], "Version 1.0": [[426, "version-1-0"]], "Version 1.0.1": [[426, "version-1-0-1"]], "Version 1.0.2": [[426, "version-1-0-2"]], "Version 1.1": [[426, "version-1-1"]], "Version 1.2": [[426, "version-1-2"]], "Version 1.3": [[426, "version-1-3"]], "Version numbering": [[412, "version-numbering"]], "Virtual Environments": [[419, null]], "Visualing a RegionNDMap": [[548, "visualing-a-regionndmap"]], "Visualising the results": [[489, "visualising-the-results"]], "Visualization": [[603, null]], "Visualizing and Plotting": [[499, "visualizing-and-plotting"]], "WStat : Poisson data with background measurement": [[599, "wstat-poisson-data-with-background-measurement"]], "WStat counts statistic": [[600, "wstat-counts-statistic"]], "WStatCountsStatistic": [[294, null]], "WcsGeom": [[207, null]], "WcsMap": [[208, null]], "WcsNDMap": [[209, null]], "What checks and conversions should I do for inputs?": [[387, "what-checks-and-conversions-should-i-do-for-inputs"]], "What is a PIG?": [[392, "what-is-a-pig"]], "What is this?": [[390, "what-is-this"]], "What next?": [[462, "what-next"], [464, "what-next"], [468, "what-next"], [475, "what-next"], [484, "what-next"], [521, "what-next"]], "What others have": [[397, "what-others-have"]], "What we have": [[395, "what-we-have"], [403, "what-we-have"], [411, "what-we-have"]], "What\u2019s new?": [[428, "what-s-new"], [429, "what-s-new"], [430, "what-s-new"], [431, "what-s-new"], [432, "what-s-new"], [433, "what-s-new"], [434, "what-s-new"], [435, "what-s-new"], [436, "what-s-new"], [437, "what-s-new"], [438, "what-s-new"], [439, "what-s-new"], [441, "what-s-new"], [442, "what-s-new"], [444, "what-s-new"], [445, "what-s-new"], [446, "what-s-new"], [447, "what-s-new"], [448, "what-s-new"], [449, "what-s-new"]], "What\u2019s next": [[518, "whats-next"]], "What\u2019s next?": [[465, "whats-next"]], "Where should I import from?": [[387, "where-should-i-import-from"]], "WobbleRegionsFinder": [[184, null]], "Working with event lists": [[532, "working-with-event-lists"]], "Write your own CLI": [[598, "write-your-own-cli"]], "Writing Maps": [[499, "writing-maps"]], "Writing a PIG": [[392, "writing-a-pig"]], "Writing and reading a RegionNDMap to/from a FITS file": [[548, "writing-and-reading-a-regionndmap-to-from-a-fits-file"]], "Writing event lists and GTIs to file": [[532, "writing-event-lists-and-gtis-to-file"]], "YAML representation": [[552, "yaml-representation"], [553, "yaml-representation"], [554, "yaml-representation"], [555, "yaml-representation"], [556, "yaml-representation"], [557, "yaml-representation"], [558, "yaml-representation"], [559, "yaml-representation"], [560, "yaml-representation"], [563, "yaml-representation"], [564, "yaml-representation"], [565, "yaml-representation"], [566, "yaml-representation"], [567, "yaml-representation"], [568, "yaml-representation"], [569, "yaml-representation"], [570, "yaml-representation"], [571, "yaml-representation"], [572, "yaml-representation"], [573, "yaml-representation"], [574, "yaml-representation"], [575, "yaml-representation"], [576, "yaml-representation"], [577, "yaml-representation"], [578, "yaml-representation"], [579, "yaml-representation"], [580, "yaml-representation"], [581, "yaml-representation"], [582, "yaml-representation"], [585, "yaml-representation"], [586, "yaml-representation"], [587, "yaml-representation"], [588, "yaml-representation"], [589, "yaml-representation"], [590, "yaml-representation"], [591, "yaml-representation"], [592, "yaml-representation"], [593, "yaml-representation"]], "YusifovKucuk2004": [[39, null]], "YusifovKucuk2004B": [[40, null]], "ZhaoProfile": [[27, null]], "absolute_time": [[368, null]], "add_colorbar": [[375, null]], "add_observed_parameters": [[41, null]], "add_pulsar_parameters": [[42, null]], "add_pwn_parameters": [[43, null]], "add_snr_parameters": [[44, null]], "analysis": [[11, "gammapy-analysis"]], "analysis - High level interface": [[0, null]], "annotate_heatmap": [[376, null]], "apply_edisp": [[112, null], [117, null]], "arbitrary type input and validation": [[414, "arbitrary-type-input-and-validation"]], "assert_quantity_allclose": [[362, null]], "assert_skycoord_allclose": [[363, null]], "assert_time_allclose": [[364, null]], "astro - Astrophysics": [[1, null]], "cartesian": [[315, null]], "cash": [[295, null]], "cash_sum_cython": [[296, null]], "catalog - Source catalogs": [[2, null]], "check": [[11, "gammapy-check"]], "codemeta.json": [[413, "codemeta-json"]], "colormap_hess": [[377, null]], "colormap_milagro": [[378, null]], "combine_flux_maps": [[137, null]], "combine_significance_maps": [[138, null]], "compound_region_to_regions": [[345, null]], "compute_chisq": [[297, null]], "compute_flux_doubling": [[298, null]], "compute_fpp": [[299, null]], "compute_fvar": [[300, null]], "compute_lightcurve_discrete_correlation": [[139, null]], "compute_lightcurve_doublingtime": [[140, null]], "compute_lightcurve_fpp": [[141, null]], "compute_lightcurve_fvar": [[142, null]], "config": [[11, "gammapy-analysis-config"], [11, "gammapy-workflow-config"]], "containment_radius": [[210, null]], "containment_region": [[211, null]], "create_cosmic_ray_spectral_model": [[283, null]], "create_crab_spectral_model": [[284, null]], "create_empty_map_dataset_from_irfs": [[113, null]], "create_fermi_isotropic_diffuse_model": [[285, null]], "create_map_dataset_from_dl4": [[118, null]], "create_map_dataset_from_observation": [[114, null]], "create_map_dataset_geoms": [[115, null]], "cstat": [[301, null]], "data": [[414, "data"]], "data - DL3 data and observations": [[3, null]], "datasets": [[11, "gammapy-download-datasets"]], "datasets - Reduced datasets": [[4, null]], "discrete_correlation": [[302, null]], "docs.gammapy.org": [[418, "docs-gammapy-org"]], "download": [[11, "gammapy-download"]], "draw": [[337, null]], "earth_location_from_dict": [[324, null]], "estimate_exposure_reco_energy": [[143, null]], "estimators - High level estimators": [[5, null]], "f_cash_root_cython": [[303, null]], "find_peaks": [[144, null]], "find_peaks_in_flux_map": [[145, null]], "fov_to_sky": [[316, null]], "from_yaml": [[350, null]], "galactic": [[317, null]], "gamLike": [[523, "gamlike"]], "gammapy": [[11, "gammapy"]], "gammapy.analysis Package": [[0, "module-gammapy.analysis"]], "gammapy.astro.darkmatter Package": [[1, "module-gammapy.astro.darkmatter"]], "gammapy.astro.population Package": [[1, "module-gammapy.astro.population"]], "gammapy.astro.source Package": [[1, "module-gammapy.astro.source"]], "gammapy.catalog Package": [[2, "module-gammapy.catalog"]], "gammapy.data Package": [[3, "module-gammapy.data"]], "gammapy.datasets Package": [[4, "module-gammapy.datasets"]], "gammapy.datasets.utils Module": [[4, "module-gammapy.datasets.utils"]], "gammapy.estimators Package": [[5, "module-gammapy.estimators"]], "gammapy.estimators.utils Module": [[5, "module-gammapy.estimators.utils"]], "gammapy.irf Package": [[7, "module-gammapy.irf"]], "gammapy.makers Package": [[8, "module-gammapy.makers"]], "gammapy.makers.utils Module": [[8, "module-gammapy.makers.utils"]], "gammapy.maps Package": [[9, "module-gammapy.maps"]], "gammapy.modeling Package": [[10, "module-gammapy.modeling"]], "gammapy.modeling.models Package": [[10, "module-gammapy.modeling.models"]], "gammapy.modeling.models.utils Module": [[10, "module-gammapy.modeling.models.utils"]], "gammapy.org": [[418, "gammapy-org"]], "gammapy.stats Package": [[12, "module-gammapy.stats"]], "gammapy.utils.cluster Module": [[13, "module-gammapy.utils.cluster"]], "gammapy.utils.coordinates Package": [[13, "module-gammapy.utils.coordinates"]], "gammapy.utils.fits Module": [[13, "module-gammapy.utils.fits"]], "gammapy.utils.integrate Module": [[13, "module-gammapy.utils.integrate"]], "gammapy.utils.interpolation Module": [[13, "module-gammapy.utils.interpolation"]], "gammapy.utils.parallel Module": [[13, "module-gammapy.utils.parallel"]], "gammapy.utils.random Package": [[13, "module-gammapy.utils.random"]], "gammapy.utils.regions Module": [[13, "module-gammapy.utils.regions"]], "gammapy.utils.scripts Module": [[13, "module-gammapy.utils.scripts"]], "gammapy.utils.table Module": [[13, "module-gammapy.utils.table"]], "gammapy.utils.testing Module": [[13, "module-gammapy.utils.testing"]], "gammapy.utils.time Module": [[13, "module-gammapy.utils.time"]], "gammapy.utils.units Module": [[13, "module-gammapy.utils.units"]], "gammapy.visualization Package": [[14, "module-gammapy.visualization"]], "get_combined_flux_maps": [[146, null]], "get_combined_significance_maps": [[147, null]], "get_images_paths": [[351, null]], "get_irfs_features": [[96, null]], "get_random_state": [[338, null]], "get_rebinned_axis": [[148, null]], "get_wstat_gof_terms": [[304, null]], "get_wstat_mu_bkg": [[305, null]], "hierarchical_clustering": [[312, null]], "hstack_columns": [[357, null]], "info": [[11, "gammapy-info"]], "integrate_spectrum": [[286, null]], "interpolate_profile": [[327, null]], "interpolation_scale": [[328, null]], "irf - Instrument response functions": [[7, null]], "load_irf_dict_from_file": [[170, null]], "logging": [[11, "gammapy-check-logging"]], "make_base_catalog_galactic": [[45, null]], "make_catalog_random_positions_cube": [[46, null]], "make_catalog_random_positions_sphere": [[47, null]], "make_concentric_annulus_sky_regions": [[346, null]], "make_counts_rad_max": [[185, null]], "make_edisp_kernel_map": [[186, null]], "make_edisp_map": [[187, null]], "make_effective_livetime_map": [[188, null]], "make_map_background_irf": [[189, null]], "make_map_exposure_true_energy": [[190, null]], "make_observation_time_map": [[191, null]], "make_orthogonal_rectangle_sky_regions": [[347, null]], "make_path": [[352, null]], "make_psf_map": [[192, null]], "make_theta_squared_table": [[193, null]], "makers - Data reduction": [[8, null]], "maps - Sky maps": [[9, null]], "modeling - Models and fitting": [[10, null]], "motion_since_birth": [[318, null]], "mpl_plot_check": [[365, null]], "multiprocessing_manager": [[334, null]], "norm_bounds_cython": [[306, null]], "normalize": [[339, null]], "notebooks": [[11, "gammapy-download-notebooks"]], "observatory_locations": [[97, null]], "pdf": [[340, null]], "plot_contour_line": [[379, null]], "plot_distribution": [[380, null]], "plot_heatmap": [[381, null]], "plot_map_rgb": [[382, null]], "plot_npred_signal": [[383, null]], "plot_spectrum_datasets_off_regions": [[384, null]], "plot_theta_squared_table": [[385, null]], "polar": [[319, null]], "pydantic": [[414, "pydantic"]], "radial_distributions": [[48, null]], "read_hermes_cube": [[287, null], [289, null]], "read_yaml": [[353, null]], "recursive_merge_dicts": [[354, null]], "region_to_frame": [[348, null]], "regions_to_compound_region": [[349, null]], "requires_data": [[366, null]], "requires_dependency": [[367, null]], "resample_energy_edges": [[149, null]], "run": [[11, "gammapy-analysis-run"], [11, "gammapy-workflow-run"]], "run_multiprocessing": [[335, null]], "sample_powerlaw": [[341, null]], "sample_sphere": [[342, null]], "sample_sphere_distance": [[343, null]], "sample_times": [[344, null]], "scale_plot_flux": [[288, null]], "scripts - Command line tools": [[11, null]], "select_nested_models": [[290, null]], "sigma_to_ts": [[307, null]], "sky_to_fov": [[320, null]], "split_dataset": [[116, null], [119, null]], "standard_scaler": [[313, null]], "standardise_unit": [[372, null]], "stat_profile_ul_scipy": [[291, null]], "stats - Statistics": [[12, null]], "structure_function": [[308, null]], "table_row_to_dict": [[358, null]], "table_standardise_units_copy": [[359, null]], "table_standardise_units_inplace": [[360, null]], "the base class": [[414, "the-base-class"]], "time_ref_from_dict": [[369, null]], "time_ref_to_dict": [[370, null]], "time_relative_to_ref": [[371, null]], "to_yaml": [[355, null]], "trapz_loglog": [[325, null]], "ts_to_sigma": [[309, null]], "unit_from_fits_image_hdu": [[373, null]], "utils - Utilities": [[13, null]], "velocity_distributions": [[49, null]], "velocity_glon_glat": [[321, null]], "visualization - Plotting features": [[14, null]], "weighted_cash_sum_cython": [[310, null]], "workflow": [[11, "gammapy-workflow"]], "write_yaml": [[356, null]], "wstat": [[311, null]]}, "docnames": ["api-reference/analysis", "api-reference/astro", "api-reference/catalog", "api-reference/data", "api-reference/datasets", "api-reference/estimators", "api-reference/index", "api-reference/irf", "api-reference/makers", "api-reference/maps", "api-reference/modeling", "api-reference/scripts", "api-reference/stats", "api-reference/utils", "api-reference/visualization", "api/gammapy.analysis.Analysis", "api/gammapy.analysis.AnalysisConfig", "api/gammapy.astro.darkmatter.BurkertProfile", "api/gammapy.astro.darkmatter.DMProfile", "api/gammapy.astro.darkmatter.DarkMatterAnnihilationSpectralModel", "api/gammapy.astro.darkmatter.DarkMatterDecaySpectralModel", "api/gammapy.astro.darkmatter.EinastoProfile", "api/gammapy.astro.darkmatter.IsothermalProfile", "api/gammapy.astro.darkmatter.JFactory", "api/gammapy.astro.darkmatter.MooreProfile", "api/gammapy.astro.darkmatter.NFWProfile", "api/gammapy.astro.darkmatter.PrimaryFlux", "api/gammapy.astro.darkmatter.ZhaoProfile", "api/gammapy.astro.population.CaseBattacharya1998", "api/gammapy.astro.population.Exponential", "api/gammapy.astro.population.FaucherKaspi2006", "api/gammapy.astro.population.FaucherKaspi2006VelocityBimodal", "api/gammapy.astro.population.FaucherKaspi2006VelocityMaxwellian", "api/gammapy.astro.population.FaucherSpiral", "api/gammapy.astro.population.LogSpiral", "api/gammapy.astro.population.Lorimer2006", "api/gammapy.astro.population.Paczynski1990", "api/gammapy.astro.population.Paczynski1990Velocity", "api/gammapy.astro.population.ValleeSpiral", "api/gammapy.astro.population.YusifovKucuk2004", "api/gammapy.astro.population.YusifovKucuk2004B", "api/gammapy.astro.population.add_observed_parameters", "api/gammapy.astro.population.add_pulsar_parameters", "api/gammapy.astro.population.add_pwn_parameters", "api/gammapy.astro.population.add_snr_parameters", "api/gammapy.astro.population.make_base_catalog_galactic", "api/gammapy.astro.population.make_catalog_random_positions_cube", "api/gammapy.astro.population.make_catalog_random_positions_sphere", "api/gammapy.astro.population.radial_distributions", "api/gammapy.astro.population.velocity_distributions", "api/gammapy.astro.source.PWN", "api/gammapy.astro.source.Pulsar", "api/gammapy.astro.source.SNR", "api/gammapy.astro.source.SNRTrueloveMcKee", "api/gammapy.astro.source.SimplePulsar", "api/gammapy.catalog.CATALOG_REGISTRY", "api/gammapy.catalog.SourceCatalog", "api/gammapy.catalog.SourceCatalog1LHAASO", "api/gammapy.catalog.SourceCatalog2FHL", "api/gammapy.catalog.SourceCatalog2HWC", "api/gammapy.catalog.SourceCatalog2PC", "api/gammapy.catalog.SourceCatalog3FGL", "api/gammapy.catalog.SourceCatalog3FHL", "api/gammapy.catalog.SourceCatalog3HWC", "api/gammapy.catalog.SourceCatalog3PC", "api/gammapy.catalog.SourceCatalog4FGL", "api/gammapy.catalog.SourceCatalogGammaCat", "api/gammapy.catalog.SourceCatalogHGPS", "api/gammapy.catalog.SourceCatalogLargeScaleHGPS", "api/gammapy.catalog.SourceCatalogObject", "api/gammapy.catalog.SourceCatalogObject1LHAASO", "api/gammapy.catalog.SourceCatalogObject2FHL", "api/gammapy.catalog.SourceCatalogObject2HWC", "api/gammapy.catalog.SourceCatalogObject2PC", "api/gammapy.catalog.SourceCatalogObject3FGL", "api/gammapy.catalog.SourceCatalogObject3FHL", "api/gammapy.catalog.SourceCatalogObject3HWC", "api/gammapy.catalog.SourceCatalogObject3PC", "api/gammapy.catalog.SourceCatalogObject4FGL", "api/gammapy.catalog.SourceCatalogObjectGammaCat", "api/gammapy.catalog.SourceCatalogObjectHGPS", "api/gammapy.catalog.SourceCatalogObjectHGPSComponent", "api/gammapy.data.DataStore", "api/gammapy.data.EventList", "api/gammapy.data.EventListMetaData", "api/gammapy.data.FixedPointingInfo", "api/gammapy.data.GTI", "api/gammapy.data.HDUIndexTable", "api/gammapy.data.Observation", "api/gammapy.data.ObservationFilter", "api/gammapy.data.ObservationMetaData", "api/gammapy.data.ObservationTable", "api/gammapy.data.Observations", "api/gammapy.data.ObservationsEventsSampler", "api/gammapy.data.PointingInfo", "api/gammapy.data.PointingMode", "api/gammapy.data.get_irfs_features", "api/gammapy.data.observatory_locations", "api/gammapy.datasets.DATASET_REGISTRY", "api/gammapy.datasets.Dataset", "api/gammapy.datasets.Datasets", "api/gammapy.datasets.FermipyDatasetsReader", "api/gammapy.datasets.FluxPointsDataset", "api/gammapy.datasets.MapDataset", "api/gammapy.datasets.MapDatasetEventSampler", "api/gammapy.datasets.MapDatasetMetaData", "api/gammapy.datasets.MapDatasetOnOff", "api/gammapy.datasets.OGIPDatasetReader", "api/gammapy.datasets.OGIPDatasetWriter", "api/gammapy.datasets.ObservationEventSampler", "api/gammapy.datasets.SpectrumDataset", "api/gammapy.datasets.SpectrumDatasetOnOff", "api/gammapy.datasets.apply_edisp", "api/gammapy.datasets.create_empty_map_dataset_from_irfs", "api/gammapy.datasets.create_map_dataset_from_observation", "api/gammapy.datasets.create_map_dataset_geoms", "api/gammapy.datasets.split_dataset", "api/gammapy.datasets.utils.apply_edisp", "api/gammapy.datasets.utils.create_map_dataset_from_dl4", "api/gammapy.datasets.utils.split_dataset", "api/gammapy.estimators.ASmoothMapEstimator", "api/gammapy.estimators.ESTIMATOR_REGISTRY", "api/gammapy.estimators.EnergyDependentMorphologyEstimator", "api/gammapy.estimators.Estimator", "api/gammapy.estimators.ExcessMapEstimator", "api/gammapy.estimators.FluxMaps", "api/gammapy.estimators.FluxMetaData", "api/gammapy.estimators.FluxPoints", "api/gammapy.estimators.FluxPointsEstimator", "api/gammapy.estimators.FluxProfileEstimator", "api/gammapy.estimators.ImageProfile", "api/gammapy.estimators.ImageProfileEstimator", "api/gammapy.estimators.LightCurveEstimator", "api/gammapy.estimators.ParameterEstimator", "api/gammapy.estimators.ParameterSensitivityEstimator", "api/gammapy.estimators.SensitivityEstimator", "api/gammapy.estimators.TSMapEstimator", "api/gammapy.estimators.utils.combine_flux_maps", "api/gammapy.estimators.utils.combine_significance_maps", "api/gammapy.estimators.utils.compute_lightcurve_discrete_correlation", "api/gammapy.estimators.utils.compute_lightcurve_doublingtime", "api/gammapy.estimators.utils.compute_lightcurve_fpp", "api/gammapy.estimators.utils.compute_lightcurve_fvar", "api/gammapy.estimators.utils.estimate_exposure_reco_energy", "api/gammapy.estimators.utils.find_peaks", "api/gammapy.estimators.utils.find_peaks_in_flux_map", "api/gammapy.estimators.utils.get_combined_flux_maps", "api/gammapy.estimators.utils.get_combined_significance_maps", "api/gammapy.estimators.utils.get_rebinned_axis", "api/gammapy.estimators.utils.resample_energy_edges", "api/gammapy.irf.Background2D", "api/gammapy.irf.Background3D", "api/gammapy.irf.BackgroundIRF", "api/gammapy.irf.EDispKernel", "api/gammapy.irf.EDispKernelMap", "api/gammapy.irf.EDispMap", "api/gammapy.irf.EffectiveAreaTable2D", "api/gammapy.irf.EnergyDependentMultiGaussPSF", "api/gammapy.irf.EnergyDispersion2D", "api/gammapy.irf.FoVAlignment", "api/gammapy.irf.IRF", "api/gammapy.irf.IRFMap", "api/gammapy.irf.IRF_REGISTRY", "api/gammapy.irf.PSF3D", "api/gammapy.irf.PSFKernel", "api/gammapy.irf.PSFKing", "api/gammapy.irf.PSFMap", "api/gammapy.irf.ParametricPSF", "api/gammapy.irf.RadMax2D", "api/gammapy.irf.RecoPSFMap", "api/gammapy.irf.load_irf_dict_from_file", "api/gammapy.makers.AdaptiveRingBackgroundMaker", "api/gammapy.makers.DatasetsMaker", "api/gammapy.makers.FoVBackgroundMaker", "api/gammapy.makers.MAKER_REGISTRY", "api/gammapy.makers.Maker", "api/gammapy.makers.MapDatasetMaker", "api/gammapy.makers.PhaseBackgroundMaker", "api/gammapy.makers.ReflectedRegionsBackgroundMaker", "api/gammapy.makers.ReflectedRegionsFinder", "api/gammapy.makers.RegionsFinder", "api/gammapy.makers.RingBackgroundMaker", "api/gammapy.makers.SafeMaskMaker", "api/gammapy.makers.SpectrumDatasetMaker", "api/gammapy.makers.WobbleRegionsFinder", "api/gammapy.makers.utils.make_counts_rad_max", "api/gammapy.makers.utils.make_edisp_kernel_map", "api/gammapy.makers.utils.make_edisp_map", "api/gammapy.makers.utils.make_effective_livetime_map", "api/gammapy.makers.utils.make_map_background_irf", "api/gammapy.makers.utils.make_map_exposure_true_energy", "api/gammapy.makers.utils.make_observation_time_map", "api/gammapy.makers.utils.make_psf_map", "api/gammapy.makers.utils.make_theta_squared_table", "api/gammapy.maps.Geom", "api/gammapy.maps.HpxGeom", "api/gammapy.maps.HpxMap", "api/gammapy.maps.HpxNDMap", "api/gammapy.maps.LabelMapAxis", "api/gammapy.maps.Map", "api/gammapy.maps.MapAxes", "api/gammapy.maps.MapAxis", "api/gammapy.maps.MapCoord", "api/gammapy.maps.Maps", "api/gammapy.maps.RegionGeom", "api/gammapy.maps.RegionNDMap", "api/gammapy.maps.TimeMapAxis", "api/gammapy.maps.WcsGeom", "api/gammapy.maps.WcsMap", "api/gammapy.maps.WcsNDMap", "api/gammapy.maps.containment_radius", "api/gammapy.maps.containment_region", "api/gammapy.modeling.Covariance", "api/gammapy.modeling.CovarianceResult", "api/gammapy.modeling.Fit", "api/gammapy.modeling.FitResult", "api/gammapy.modeling.OptimizeResult", "api/gammapy.modeling.Parameter", "api/gammapy.modeling.Parameters", "api/gammapy.modeling.PriorParameter", "api/gammapy.modeling.PriorParameters", "api/gammapy.modeling.models.BrokenPowerLawSpectralModel", "api/gammapy.modeling.models.CompoundSpectralModel", "api/gammapy.modeling.models.ConstantFluxSpatialModel", "api/gammapy.modeling.models.ConstantSpatialModel", "api/gammapy.modeling.models.ConstantSpectralModel", "api/gammapy.modeling.models.ConstantTemporalModel", "api/gammapy.modeling.models.DatasetModels", "api/gammapy.modeling.models.DiskSpatialModel", "api/gammapy.modeling.models.EBLAbsorptionNormSpectralModel", "api/gammapy.modeling.models.EBL_DATA_BUILTIN", "api/gammapy.modeling.models.ExpCutoffPowerLaw3FGLSpectralModel", "api/gammapy.modeling.models.ExpCutoffPowerLawNormSpectralModel", "api/gammapy.modeling.models.ExpCutoffPowerLawSpectralModel", "api/gammapy.modeling.models.ExpDecayTemporalModel", "api/gammapy.modeling.models.FoVBackgroundModel", "api/gammapy.modeling.models.GaussianPrior", "api/gammapy.modeling.models.GaussianSpatialModel", "api/gammapy.modeling.models.GaussianSpectralModel", "api/gammapy.modeling.models.GaussianTemporalModel", "api/gammapy.modeling.models.GeneralizedGaussianSpatialModel", "api/gammapy.modeling.models.GeneralizedGaussianTemporalModel", "api/gammapy.modeling.models.LightCurveTemplateTemporalModel", "api/gammapy.modeling.models.LinearTemporalModel", "api/gammapy.modeling.models.LogParabolaNormSpectralModel", "api/gammapy.modeling.models.LogParabolaSpectralModel", "api/gammapy.modeling.models.LogUniformPrior", "api/gammapy.modeling.models.MODEL_REGISTRY", "api/gammapy.modeling.models.MeyerCrabSpectralModel", "api/gammapy.modeling.models.Model", "api/gammapy.modeling.models.ModelBase", "api/gammapy.modeling.models.Models", "api/gammapy.modeling.models.NaimaSpectralModel", "api/gammapy.modeling.models.PiecewiseNormSpatialModel", "api/gammapy.modeling.models.PiecewiseNormSpectralModel", "api/gammapy.modeling.models.PointSpatialModel", "api/gammapy.modeling.models.PowerLaw2SpectralModel", "api/gammapy.modeling.models.PowerLawNormSpectralModel", "api/gammapy.modeling.models.PowerLawSpectralModel", "api/gammapy.modeling.models.PowerLawTemporalModel", "api/gammapy.modeling.models.Prior", "api/gammapy.modeling.models.SPATIAL_MODEL_REGISTRY", "api/gammapy.modeling.models.SPECTRAL_MODEL_REGISTRY", "api/gammapy.modeling.models.ScaleSpectralModel", "api/gammapy.modeling.models.Shell2SpatialModel", "api/gammapy.modeling.models.ShellSpatialModel", "api/gammapy.modeling.models.SineTemporalModel", "api/gammapy.modeling.models.SkyModel", "api/gammapy.modeling.models.SmoothBrokenPowerLawSpectralModel", "api/gammapy.modeling.models.SpatialModel", "api/gammapy.modeling.models.SpectralModel", "api/gammapy.modeling.models.SuperExpCutoffPowerLaw3FGLSpectralModel", "api/gammapy.modeling.models.SuperExpCutoffPowerLaw4FGLDR3SpectralModel", "api/gammapy.modeling.models.SuperExpCutoffPowerLaw4FGLSpectralModel", "api/gammapy.modeling.models.TEMPORAL_MODEL_REGISTRY", "api/gammapy.modeling.models.TemplateNDSpatialModel", "api/gammapy.modeling.models.TemplateNDSpectralModel", "api/gammapy.modeling.models.TemplateNPredModel", "api/gammapy.modeling.models.TemplatePhaseCurveTemporalModel", "api/gammapy.modeling.models.TemplateSpatialModel", "api/gammapy.modeling.models.TemplateSpectralModel", "api/gammapy.modeling.models.TemporalModel", "api/gammapy.modeling.models.UniformPrior", "api/gammapy.modeling.models.create_cosmic_ray_spectral_model", "api/gammapy.modeling.models.create_crab_spectral_model", "api/gammapy.modeling.models.create_fermi_isotropic_diffuse_model", "api/gammapy.modeling.models.integrate_spectrum", "api/gammapy.modeling.models.read_hermes_cube", "api/gammapy.modeling.models.scale_plot_flux", "api/gammapy.modeling.models.utils.read_hermes_cube", "api/gammapy.modeling.select_nested_models", "api/gammapy.modeling.stat_profile_ul_scipy", "api/gammapy.stats.CashCountsStatistic", "api/gammapy.stats.TimmerKonig_lightcurve_simulator", "api/gammapy.stats.WStatCountsStatistic", "api/gammapy.stats.cash", "api/gammapy.stats.cash_sum_cython", "api/gammapy.stats.compute_chisq", "api/gammapy.stats.compute_flux_doubling", "api/gammapy.stats.compute_fpp", "api/gammapy.stats.compute_fvar", "api/gammapy.stats.cstat", "api/gammapy.stats.discrete_correlation", "api/gammapy.stats.f_cash_root_cython", "api/gammapy.stats.get_wstat_gof_terms", "api/gammapy.stats.get_wstat_mu_bkg", "api/gammapy.stats.norm_bounds_cython", "api/gammapy.stats.sigma_to_ts", "api/gammapy.stats.structure_function", "api/gammapy.stats.ts_to_sigma", "api/gammapy.stats.weighted_cash_sum_cython", "api/gammapy.stats.wstat", "api/gammapy.utils.cluster.hierarchical_clustering", "api/gammapy.utils.cluster.standard_scaler", "api/gammapy.utils.coordinates.D_SUN_TO_GALACTIC_CENTER", "api/gammapy.utils.coordinates.cartesian", "api/gammapy.utils.coordinates.fov_to_sky", "api/gammapy.utils.coordinates.galactic", "api/gammapy.utils.coordinates.motion_since_birth", "api/gammapy.utils.coordinates.polar", "api/gammapy.utils.coordinates.sky_to_fov", "api/gammapy.utils.coordinates.velocity_glon_glat", "api/gammapy.utils.fits.HDULocation", "api/gammapy.utils.fits.LazyFitsData", "api/gammapy.utils.fits.earth_location_from_dict", "api/gammapy.utils.integrate.trapz_loglog", "api/gammapy.utils.interpolation.ScaledRegularGridInterpolator", "api/gammapy.utils.interpolation.interpolate_profile", "api/gammapy.utils.interpolation.interpolation_scale", "api/gammapy.utils.parallel.BACKEND_DEFAULT", "api/gammapy.utils.parallel.METHOD_DEFAULT", "api/gammapy.utils.parallel.METHOD_KWARGS_DEFAULT", "api/gammapy.utils.parallel.N_JOBS_DEFAULT", "api/gammapy.utils.parallel.POOL_KWARGS_DEFAULT", "api/gammapy.utils.parallel.multiprocessing_manager", "api/gammapy.utils.parallel.run_multiprocessing", "api/gammapy.utils.random.InverseCDFSampler", "api/gammapy.utils.random.draw", "api/gammapy.utils.random.get_random_state", "api/gammapy.utils.random.normalize", "api/gammapy.utils.random.pdf", "api/gammapy.utils.random.sample_powerlaw", "api/gammapy.utils.random.sample_sphere", "api/gammapy.utils.random.sample_sphere_distance", "api/gammapy.utils.random.sample_times", "api/gammapy.utils.regions.compound_region_to_regions", "api/gammapy.utils.regions.make_concentric_annulus_sky_regions", "api/gammapy.utils.regions.make_orthogonal_rectangle_sky_regions", "api/gammapy.utils.regions.region_to_frame", "api/gammapy.utils.regions.regions_to_compound_region", "api/gammapy.utils.scripts.from_yaml", "api/gammapy.utils.scripts.get_images_paths", "api/gammapy.utils.scripts.make_path", "api/gammapy.utils.scripts.read_yaml", "api/gammapy.utils.scripts.recursive_merge_dicts", "api/gammapy.utils.scripts.to_yaml", "api/gammapy.utils.scripts.write_yaml", "api/gammapy.utils.table.hstack_columns", "api/gammapy.utils.table.table_row_to_dict", "api/gammapy.utils.table.table_standardise_units_copy", "api/gammapy.utils.table.table_standardise_units_inplace", "api/gammapy.utils.testing.Checker", "api/gammapy.utils.testing.assert_quantity_allclose", "api/gammapy.utils.testing.assert_skycoord_allclose", "api/gammapy.utils.testing.assert_time_allclose", "api/gammapy.utils.testing.mpl_plot_check", "api/gammapy.utils.testing.requires_data", "api/gammapy.utils.testing.requires_dependency", "api/gammapy.utils.time.absolute_time", "api/gammapy.utils.time.time_ref_from_dict", "api/gammapy.utils.time.time_ref_to_dict", "api/gammapy.utils.time.time_relative_to_ref", "api/gammapy.utils.units.standardise_unit", "api/gammapy.utils.units.unit_from_fits_image_hdu", "api/gammapy.visualization.MapPanelPlotter", "api/gammapy.visualization.add_colorbar", "api/gammapy.visualization.annotate_heatmap", "api/gammapy.visualization.colormap_hess", "api/gammapy.visualization.colormap_milagro", "api/gammapy.visualization.plot_contour_line", "api/gammapy.visualization.plot_distribution", "api/gammapy.visualization.plot_heatmap", "api/gammapy.visualization.plot_map_rgb", "api/gammapy.visualization.plot_npred_signal", "api/gammapy.visualization.plot_spectrum_datasets_off_regions", "api/gammapy.visualization.plot_theta_squared_table", "development/dependencies", "development/dev_howto", "development/doc_howto", "development/index", "development/intro", "development/pigs/index", "development/pigs/pig-001", "development/pigs/pig-002", "development/pigs/pig-003", "development/pigs/pig-004", "development/pigs/pig-005", "development/pigs/pig-006", "development/pigs/pig-007", "development/pigs/pig-008", "development/pigs/pig-009", "development/pigs/pig-010", "development/pigs/pig-011", "development/pigs/pig-012", "development/pigs/pig-013", "development/pigs/pig-014", "development/pigs/pig-016", "development/pigs/pig-018", "development/pigs/pig-019", "development/pigs/pig-020", "development/pigs/pig-021", "development/pigs/pig-022", "development/pigs/pig-023", "development/pigs/pig-024", "development/pigs/pig-025", "development/pigs/pig-026", "development/pigs/pig-027", "development/release", "development/setup", "getting-started/environments", "getting-started/index", "getting-started/install", "getting-started/quickstart", "getting-started/troubleshooting", "getting-started/usage", "index", "release-notes/index", "release-notes/v0.1", "release-notes/v0.10", "release-notes/v0.11", "release-notes/v0.12", "release-notes/v0.13", "release-notes/v0.14", "release-notes/v0.15", "release-notes/v0.16", "release-notes/v0.17", "release-notes/v0.18", "release-notes/v0.18.1", "release-notes/v0.18.2", "release-notes/v0.19", "release-notes/v0.2", "release-notes/v0.20", "release-notes/v0.20.1", "release-notes/v0.3", "release-notes/v0.4", "release-notes/v0.5", "release-notes/v0.6", "release-notes/v0.7", "release-notes/v0.8", "release-notes/v0.9", "release-notes/v1.0", "release-notes/v1.0.1", "release-notes/v1.0.2", "release-notes/v1.1", "release-notes/v1.2", "release-notes/v1.3", "release-notes/v2.0", "sg_execution_times", "tutorials/analysis-1d/cta_sensitivity", "tutorials/analysis-1d/ebl", "tutorials/analysis-1d/extended_source_spectral_analysis", "tutorials/analysis-1d/index", "tutorials/analysis-1d/sed_fitting", "tutorials/analysis-1d/sg_execution_times", "tutorials/analysis-1d/spectral_analysis", "tutorials/analysis-1d/spectral_analysis_hli", "tutorials/analysis-1d/spectral_analysis_rad_max", "tutorials/analysis-1d/spectrum_simulation", "tutorials/analysis-2d/detect", "tutorials/analysis-2d/index", "tutorials/analysis-2d/modeling_2D", "tutorials/analysis-2d/ring_background", "tutorials/analysis-2d/sg_execution_times", "tutorials/analysis-3d/analysis_3d", "tutorials/analysis-3d/analysis_mwl", "tutorials/analysis-3d/cta_data_analysis", "tutorials/analysis-3d/energy_dependent_estimation", "tutorials/analysis-3d/event_sampling", "tutorials/analysis-3d/event_sampling_nrg_depend_models", "tutorials/analysis-3d/flux_profiles", "tutorials/analysis-3d/index", "tutorials/analysis-3d/sg_execution_times", "tutorials/analysis-3d/simulate_3d", "tutorials/analysis-time/index", "tutorials/analysis-time/light_curve", "tutorials/analysis-time/light_curve_flare", "tutorials/analysis-time/light_curve_simulation", "tutorials/analysis-time/pulsar_analysis", "tutorials/analysis-time/sg_execution_times", "tutorials/analysis-time/time_resolved_spectroscopy", "tutorials/analysis-time/variability_estimation", "tutorials/api/astro_dark_matter", "tutorials/api/catalog", "tutorials/api/datasets", "tutorials/api/estimators", "tutorials/api/fitting", "tutorials/api/index", "tutorials/api/irfs", "tutorials/api/makers", "tutorials/api/maps", "tutorials/api/mask_maps", "tutorials/api/model_management", "tutorials/api/models", "tutorials/api/observation_clustering", "tutorials/api/priors", "tutorials/api/sg_execution_times", "tutorials/api/theta_square_plot", "tutorials/data/cta", "tutorials/data/fermi_lat", "tutorials/data/hawc", "tutorials/data/hess", "tutorials/data/index", "tutorials/data/sg_execution_times", "tutorials/index", "tutorials/scripts/index", "tutorials/scripts/sg_execution_times", "tutorials/scripts/survey_map", "tutorials/sg_execution_times", "tutorials/starting/analysis_1", "tutorials/starting/analysis_2", "tutorials/starting/index", "tutorials/starting/overview", "tutorials/starting/sg_execution_times", "user-guide/astro/darkmatter/index", "user-guide/astro/index", "user-guide/astro/population/index", "user-guide/astro/source/index", "user-guide/astro/source/pulsar", "user-guide/astro/source/pwn", "user-guide/astro/source/snr", "user-guide/catalog", "user-guide/datasets/index", "user-guide/dl3", "user-guide/estimators", "user-guide/hli", "user-guide/howto", "user-guide/index", "user-guide/irf/aeff", "user-guide/irf/bkg", "user-guide/irf/edisp", "user-guide/irf/index", "user-guide/irf/psf", "user-guide/makers/fov", "user-guide/makers/index", "user-guide/makers/reflected", "user-guide/makers/ring", "user-guide/maps/hpxmap", "user-guide/maps/index", "user-guide/maps/regionmap", "user-guide/model-gallery/index", "user-guide/model-gallery/sg_execution_times", "user-guide/model-gallery/spatial/index", "user-guide/model-gallery/spatial/plot_constant", "user-guide/model-gallery/spatial/plot_disk", "user-guide/model-gallery/spatial/plot_gauss", "user-guide/model-gallery/spatial/plot_gen_gauss", "user-guide/model-gallery/spatial/plot_piecewise_norm_spatial", "user-guide/model-gallery/spatial/plot_point", "user-guide/model-gallery/spatial/plot_shell", "user-guide/model-gallery/spatial/plot_shell2", "user-guide/model-gallery/spatial/plot_template", "user-guide/model-gallery/spatial/sg_execution_times", "user-guide/model-gallery/spectral/index", "user-guide/model-gallery/spectral/plot_absorbed", "user-guide/model-gallery/spectral/plot_broken_powerlaw", "user-guide/model-gallery/spectral/plot_compound", "user-guide/model-gallery/spectral/plot_constant_spectral", "user-guide/model-gallery/spectral/plot_exp_cutoff_powerlaw", "user-guide/model-gallery/spectral/plot_exp_cutoff_powerlaw_3fgl", "user-guide/model-gallery/spectral/plot_exp_cutoff_powerlaw_norm_spectral", "user-guide/model-gallery/spectral/plot_gauss_spectral", "user-guide/model-gallery/spectral/plot_logparabola", "user-guide/model-gallery/spectral/plot_logparabola_norm_spectral", "user-guide/model-gallery/spectral/plot_naima", "user-guide/model-gallery/spectral/plot_piecewise_norm_spectral", "user-guide/model-gallery/spectral/plot_powerlaw", "user-guide/model-gallery/spectral/plot_powerlaw2", "user-guide/model-gallery/spectral/plot_powerlaw_norm_spectral", "user-guide/model-gallery/spectral/plot_smooth_broken_powerlaw", "user-guide/model-gallery/spectral/plot_super_exp_cutoff_powerlaw_3fgl", "user-guide/model-gallery/spectral/plot_super_exp_cutoff_powerlaw_4fgl", "user-guide/model-gallery/spectral/plot_super_exp_cutoff_powerlaw_4fgl_dr1", "user-guide/model-gallery/spectral/plot_template_spectral", "user-guide/model-gallery/spectral/sg_execution_times", "user-guide/model-gallery/temporal/index", "user-guide/model-gallery/temporal/plot_constant_temporal", "user-guide/model-gallery/temporal/plot_expdecay_temporal", "user-guide/model-gallery/temporal/plot_gaussian_temporal", "user-guide/model-gallery/temporal/plot_generalized_gaussian_temporal", "user-guide/model-gallery/temporal/plot_linear_temporal", "user-guide/model-gallery/temporal/plot_powerlaw_temporal", "user-guide/model-gallery/temporal/plot_sine_temporal", "user-guide/model-gallery/temporal/plot_template_phase_temporal", "user-guide/model-gallery/temporal/plot_template_temporal", "user-guide/model-gallery/temporal/sg_execution_times", "user-guide/modeling", "user-guide/package", "user-guide/references", "user-guide/scripts/index", "user-guide/stats/fit_statistics", "user-guide/stats/index", "user-guide/stats/wstat_derivation", "user-guide/utils", "user-guide/visualization/index"], "envversion": {"sphinx": 62, "sphinx.domains.c": 3, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 9, "sphinx.domains.index": 1, "sphinx.domains.javascript": 3, "sphinx.domains.math": 2, "sphinx.domains.python": 4, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "sphinx.ext.intersphinx": 1, "sphinx.ext.viewcode": 1}, "filenames": ["api-reference/analysis.rst", "api-reference/astro.rst", "api-reference/catalog.rst", "api-reference/data.rst", "api-reference/datasets.rst", "api-reference/estimators.rst", "api-reference/index.rst", "api-reference/irf.rst", "api-reference/makers.rst", "api-reference/maps.rst", "api-reference/modeling.rst", "api-reference/scripts.rst", "api-reference/stats.rst", "api-reference/utils.rst", "api-reference/visualization.rst", "api/gammapy.analysis.Analysis.rst", "api/gammapy.analysis.AnalysisConfig.rst", "api/gammapy.astro.darkmatter.BurkertProfile.rst", "api/gammapy.astro.darkmatter.DMProfile.rst", "api/gammapy.astro.darkmatter.DarkMatterAnnihilationSpectralModel.rst", "api/gammapy.astro.darkmatter.DarkMatterDecaySpectralModel.rst", "api/gammapy.astro.darkmatter.EinastoProfile.rst", "api/gammapy.astro.darkmatter.IsothermalProfile.rst", "api/gammapy.astro.darkmatter.JFactory.rst", "api/gammapy.astro.darkmatter.MooreProfile.rst", "api/gammapy.astro.darkmatter.NFWProfile.rst", "api/gammapy.astro.darkmatter.PrimaryFlux.rst", "api/gammapy.astro.darkmatter.ZhaoProfile.rst", "api/gammapy.astro.population.CaseBattacharya1998.rst", "api/gammapy.astro.population.Exponential.rst", "api/gammapy.astro.population.FaucherKaspi2006.rst", "api/gammapy.astro.population.FaucherKaspi2006VelocityBimodal.rst", "api/gammapy.astro.population.FaucherKaspi2006VelocityMaxwellian.rst", "api/gammapy.astro.population.FaucherSpiral.rst", "api/gammapy.astro.population.LogSpiral.rst", "api/gammapy.astro.population.Lorimer2006.rst", "api/gammapy.astro.population.Paczynski1990.rst", "api/gammapy.astro.population.Paczynski1990Velocity.rst", "api/gammapy.astro.population.ValleeSpiral.rst", "api/gammapy.astro.population.YusifovKucuk2004.rst", "api/gammapy.astro.population.YusifovKucuk2004B.rst", "api/gammapy.astro.population.add_observed_parameters.rst", "api/gammapy.astro.population.add_pulsar_parameters.rst", "api/gammapy.astro.population.add_pwn_parameters.rst", "api/gammapy.astro.population.add_snr_parameters.rst", "api/gammapy.astro.population.make_base_catalog_galactic.rst", "api/gammapy.astro.population.make_catalog_random_positions_cube.rst", "api/gammapy.astro.population.make_catalog_random_positions_sphere.rst", "api/gammapy.astro.population.radial_distributions.rst", "api/gammapy.astro.population.velocity_distributions.rst", "api/gammapy.astro.source.PWN.rst", "api/gammapy.astro.source.Pulsar.rst", "api/gammapy.astro.source.SNR.rst", "api/gammapy.astro.source.SNRTrueloveMcKee.rst", "api/gammapy.astro.source.SimplePulsar.rst", "api/gammapy.catalog.CATALOG_REGISTRY.rst", "api/gammapy.catalog.SourceCatalog.rst", "api/gammapy.catalog.SourceCatalog1LHAASO.rst", "api/gammapy.catalog.SourceCatalog2FHL.rst", "api/gammapy.catalog.SourceCatalog2HWC.rst", "api/gammapy.catalog.SourceCatalog2PC.rst", "api/gammapy.catalog.SourceCatalog3FGL.rst", "api/gammapy.catalog.SourceCatalog3FHL.rst", "api/gammapy.catalog.SourceCatalog3HWC.rst", "api/gammapy.catalog.SourceCatalog3PC.rst", "api/gammapy.catalog.SourceCatalog4FGL.rst", "api/gammapy.catalog.SourceCatalogGammaCat.rst", "api/gammapy.catalog.SourceCatalogHGPS.rst", "api/gammapy.catalog.SourceCatalogLargeScaleHGPS.rst", "api/gammapy.catalog.SourceCatalogObject.rst", "api/gammapy.catalog.SourceCatalogObject1LHAASO.rst", "api/gammapy.catalog.SourceCatalogObject2FHL.rst", "api/gammapy.catalog.SourceCatalogObject2HWC.rst", "api/gammapy.catalog.SourceCatalogObject2PC.rst", "api/gammapy.catalog.SourceCatalogObject3FGL.rst", "api/gammapy.catalog.SourceCatalogObject3FHL.rst", "api/gammapy.catalog.SourceCatalogObject3HWC.rst", "api/gammapy.catalog.SourceCatalogObject3PC.rst", "api/gammapy.catalog.SourceCatalogObject4FGL.rst", "api/gammapy.catalog.SourceCatalogObjectGammaCat.rst", "api/gammapy.catalog.SourceCatalogObjectHGPS.rst", "api/gammapy.catalog.SourceCatalogObjectHGPSComponent.rst", "api/gammapy.data.DataStore.rst", "api/gammapy.data.EventList.rst", "api/gammapy.data.EventListMetaData.rst", "api/gammapy.data.FixedPointingInfo.rst", "api/gammapy.data.GTI.rst", "api/gammapy.data.HDUIndexTable.rst", "api/gammapy.data.Observation.rst", "api/gammapy.data.ObservationFilter.rst", "api/gammapy.data.ObservationMetaData.rst", "api/gammapy.data.ObservationTable.rst", "api/gammapy.data.Observations.rst", "api/gammapy.data.ObservationsEventsSampler.rst", "api/gammapy.data.PointingInfo.rst", "api/gammapy.data.PointingMode.rst", "api/gammapy.data.get_irfs_features.rst", "api/gammapy.data.observatory_locations.rst", "api/gammapy.datasets.DATASET_REGISTRY.rst", "api/gammapy.datasets.Dataset.rst", "api/gammapy.datasets.Datasets.rst", "api/gammapy.datasets.FermipyDatasetsReader.rst", "api/gammapy.datasets.FluxPointsDataset.rst", "api/gammapy.datasets.MapDataset.rst", "api/gammapy.datasets.MapDatasetEventSampler.rst", "api/gammapy.datasets.MapDatasetMetaData.rst", "api/gammapy.datasets.MapDatasetOnOff.rst", "api/gammapy.datasets.OGIPDatasetReader.rst", "api/gammapy.datasets.OGIPDatasetWriter.rst", "api/gammapy.datasets.ObservationEventSampler.rst", "api/gammapy.datasets.SpectrumDataset.rst", "api/gammapy.datasets.SpectrumDatasetOnOff.rst", "api/gammapy.datasets.apply_edisp.rst", "api/gammapy.datasets.create_empty_map_dataset_from_irfs.rst", "api/gammapy.datasets.create_map_dataset_from_observation.rst", "api/gammapy.datasets.create_map_dataset_geoms.rst", "api/gammapy.datasets.split_dataset.rst", "api/gammapy.datasets.utils.apply_edisp.rst", "api/gammapy.datasets.utils.create_map_dataset_from_dl4.rst", "api/gammapy.datasets.utils.split_dataset.rst", "api/gammapy.estimators.ASmoothMapEstimator.rst", "api/gammapy.estimators.ESTIMATOR_REGISTRY.rst", "api/gammapy.estimators.EnergyDependentMorphologyEstimator.rst", "api/gammapy.estimators.Estimator.rst", "api/gammapy.estimators.ExcessMapEstimator.rst", "api/gammapy.estimators.FluxMaps.rst", "api/gammapy.estimators.FluxMetaData.rst", "api/gammapy.estimators.FluxPoints.rst", "api/gammapy.estimators.FluxPointsEstimator.rst", "api/gammapy.estimators.FluxProfileEstimator.rst", "api/gammapy.estimators.ImageProfile.rst", "api/gammapy.estimators.ImageProfileEstimator.rst", "api/gammapy.estimators.LightCurveEstimator.rst", "api/gammapy.estimators.ParameterEstimator.rst", "api/gammapy.estimators.ParameterSensitivityEstimator.rst", "api/gammapy.estimators.SensitivityEstimator.rst", "api/gammapy.estimators.TSMapEstimator.rst", "api/gammapy.estimators.utils.combine_flux_maps.rst", "api/gammapy.estimators.utils.combine_significance_maps.rst", "api/gammapy.estimators.utils.compute_lightcurve_discrete_correlation.rst", "api/gammapy.estimators.utils.compute_lightcurve_doublingtime.rst", "api/gammapy.estimators.utils.compute_lightcurve_fpp.rst", "api/gammapy.estimators.utils.compute_lightcurve_fvar.rst", "api/gammapy.estimators.utils.estimate_exposure_reco_energy.rst", "api/gammapy.estimators.utils.find_peaks.rst", "api/gammapy.estimators.utils.find_peaks_in_flux_map.rst", "api/gammapy.estimators.utils.get_combined_flux_maps.rst", "api/gammapy.estimators.utils.get_combined_significance_maps.rst", "api/gammapy.estimators.utils.get_rebinned_axis.rst", "api/gammapy.estimators.utils.resample_energy_edges.rst", "api/gammapy.irf.Background2D.rst", "api/gammapy.irf.Background3D.rst", "api/gammapy.irf.BackgroundIRF.rst", "api/gammapy.irf.EDispKernel.rst", "api/gammapy.irf.EDispKernelMap.rst", "api/gammapy.irf.EDispMap.rst", "api/gammapy.irf.EffectiveAreaTable2D.rst", "api/gammapy.irf.EnergyDependentMultiGaussPSF.rst", "api/gammapy.irf.EnergyDispersion2D.rst", "api/gammapy.irf.FoVAlignment.rst", "api/gammapy.irf.IRF.rst", "api/gammapy.irf.IRFMap.rst", "api/gammapy.irf.IRF_REGISTRY.rst", "api/gammapy.irf.PSF3D.rst", "api/gammapy.irf.PSFKernel.rst", "api/gammapy.irf.PSFKing.rst", "api/gammapy.irf.PSFMap.rst", "api/gammapy.irf.ParametricPSF.rst", "api/gammapy.irf.RadMax2D.rst", "api/gammapy.irf.RecoPSFMap.rst", "api/gammapy.irf.load_irf_dict_from_file.rst", "api/gammapy.makers.AdaptiveRingBackgroundMaker.rst", "api/gammapy.makers.DatasetsMaker.rst", "api/gammapy.makers.FoVBackgroundMaker.rst", "api/gammapy.makers.MAKER_REGISTRY.rst", "api/gammapy.makers.Maker.rst", "api/gammapy.makers.MapDatasetMaker.rst", "api/gammapy.makers.PhaseBackgroundMaker.rst", "api/gammapy.makers.ReflectedRegionsBackgroundMaker.rst", "api/gammapy.makers.ReflectedRegionsFinder.rst", "api/gammapy.makers.RegionsFinder.rst", "api/gammapy.makers.RingBackgroundMaker.rst", "api/gammapy.makers.SafeMaskMaker.rst", "api/gammapy.makers.SpectrumDatasetMaker.rst", "api/gammapy.makers.WobbleRegionsFinder.rst", "api/gammapy.makers.utils.make_counts_rad_max.rst", "api/gammapy.makers.utils.make_edisp_kernel_map.rst", "api/gammapy.makers.utils.make_edisp_map.rst", "api/gammapy.makers.utils.make_effective_livetime_map.rst", "api/gammapy.makers.utils.make_map_background_irf.rst", "api/gammapy.makers.utils.make_map_exposure_true_energy.rst", "api/gammapy.makers.utils.make_observation_time_map.rst", "api/gammapy.makers.utils.make_psf_map.rst", "api/gammapy.makers.utils.make_theta_squared_table.rst", "api/gammapy.maps.Geom.rst", "api/gammapy.maps.HpxGeom.rst", "api/gammapy.maps.HpxMap.rst", "api/gammapy.maps.HpxNDMap.rst", "api/gammapy.maps.LabelMapAxis.rst", "api/gammapy.maps.Map.rst", "api/gammapy.maps.MapAxes.rst", "api/gammapy.maps.MapAxis.rst", "api/gammapy.maps.MapCoord.rst", "api/gammapy.maps.Maps.rst", "api/gammapy.maps.RegionGeom.rst", "api/gammapy.maps.RegionNDMap.rst", "api/gammapy.maps.TimeMapAxis.rst", "api/gammapy.maps.WcsGeom.rst", "api/gammapy.maps.WcsMap.rst", "api/gammapy.maps.WcsNDMap.rst", "api/gammapy.maps.containment_radius.rst", "api/gammapy.maps.containment_region.rst", "api/gammapy.modeling.Covariance.rst", "api/gammapy.modeling.CovarianceResult.rst", "api/gammapy.modeling.Fit.rst", "api/gammapy.modeling.FitResult.rst", "api/gammapy.modeling.OptimizeResult.rst", "api/gammapy.modeling.Parameter.rst", "api/gammapy.modeling.Parameters.rst", "api/gammapy.modeling.PriorParameter.rst", "api/gammapy.modeling.PriorParameters.rst", "api/gammapy.modeling.models.BrokenPowerLawSpectralModel.rst", "api/gammapy.modeling.models.CompoundSpectralModel.rst", "api/gammapy.modeling.models.ConstantFluxSpatialModel.rst", "api/gammapy.modeling.models.ConstantSpatialModel.rst", "api/gammapy.modeling.models.ConstantSpectralModel.rst", "api/gammapy.modeling.models.ConstantTemporalModel.rst", "api/gammapy.modeling.models.DatasetModels.rst", "api/gammapy.modeling.models.DiskSpatialModel.rst", "api/gammapy.modeling.models.EBLAbsorptionNormSpectralModel.rst", "api/gammapy.modeling.models.EBL_DATA_BUILTIN.rst", "api/gammapy.modeling.models.ExpCutoffPowerLaw3FGLSpectralModel.rst", "api/gammapy.modeling.models.ExpCutoffPowerLawNormSpectralModel.rst", "api/gammapy.modeling.models.ExpCutoffPowerLawSpectralModel.rst", "api/gammapy.modeling.models.ExpDecayTemporalModel.rst", "api/gammapy.modeling.models.FoVBackgroundModel.rst", "api/gammapy.modeling.models.GaussianPrior.rst", "api/gammapy.modeling.models.GaussianSpatialModel.rst", "api/gammapy.modeling.models.GaussianSpectralModel.rst", "api/gammapy.modeling.models.GaussianTemporalModel.rst", "api/gammapy.modeling.models.GeneralizedGaussianSpatialModel.rst", "api/gammapy.modeling.models.GeneralizedGaussianTemporalModel.rst", "api/gammapy.modeling.models.LightCurveTemplateTemporalModel.rst", "api/gammapy.modeling.models.LinearTemporalModel.rst", "api/gammapy.modeling.models.LogParabolaNormSpectralModel.rst", "api/gammapy.modeling.models.LogParabolaSpectralModel.rst", "api/gammapy.modeling.models.LogUniformPrior.rst", "api/gammapy.modeling.models.MODEL_REGISTRY.rst", "api/gammapy.modeling.models.MeyerCrabSpectralModel.rst", "api/gammapy.modeling.models.Model.rst", "api/gammapy.modeling.models.ModelBase.rst", "api/gammapy.modeling.models.Models.rst", "api/gammapy.modeling.models.NaimaSpectralModel.rst", "api/gammapy.modeling.models.PiecewiseNormSpatialModel.rst", "api/gammapy.modeling.models.PiecewiseNormSpectralModel.rst", "api/gammapy.modeling.models.PointSpatialModel.rst", "api/gammapy.modeling.models.PowerLaw2SpectralModel.rst", "api/gammapy.modeling.models.PowerLawNormSpectralModel.rst", "api/gammapy.modeling.models.PowerLawSpectralModel.rst", "api/gammapy.modeling.models.PowerLawTemporalModel.rst", "api/gammapy.modeling.models.Prior.rst", "api/gammapy.modeling.models.SPATIAL_MODEL_REGISTRY.rst", "api/gammapy.modeling.models.SPECTRAL_MODEL_REGISTRY.rst", "api/gammapy.modeling.models.ScaleSpectralModel.rst", "api/gammapy.modeling.models.Shell2SpatialModel.rst", "api/gammapy.modeling.models.ShellSpatialModel.rst", "api/gammapy.modeling.models.SineTemporalModel.rst", "api/gammapy.modeling.models.SkyModel.rst", "api/gammapy.modeling.models.SmoothBrokenPowerLawSpectralModel.rst", "api/gammapy.modeling.models.SpatialModel.rst", "api/gammapy.modeling.models.SpectralModel.rst", "api/gammapy.modeling.models.SuperExpCutoffPowerLaw3FGLSpectralModel.rst", "api/gammapy.modeling.models.SuperExpCutoffPowerLaw4FGLDR3SpectralModel.rst", "api/gammapy.modeling.models.SuperExpCutoffPowerLaw4FGLSpectralModel.rst", "api/gammapy.modeling.models.TEMPORAL_MODEL_REGISTRY.rst", "api/gammapy.modeling.models.TemplateNDSpatialModel.rst", "api/gammapy.modeling.models.TemplateNDSpectralModel.rst", "api/gammapy.modeling.models.TemplateNPredModel.rst", "api/gammapy.modeling.models.TemplatePhaseCurveTemporalModel.rst", "api/gammapy.modeling.models.TemplateSpatialModel.rst", "api/gammapy.modeling.models.TemplateSpectralModel.rst", "api/gammapy.modeling.models.TemporalModel.rst", "api/gammapy.modeling.models.UniformPrior.rst", "api/gammapy.modeling.models.create_cosmic_ray_spectral_model.rst", "api/gammapy.modeling.models.create_crab_spectral_model.rst", "api/gammapy.modeling.models.create_fermi_isotropic_diffuse_model.rst", "api/gammapy.modeling.models.integrate_spectrum.rst", "api/gammapy.modeling.models.read_hermes_cube.rst", "api/gammapy.modeling.models.scale_plot_flux.rst", "api/gammapy.modeling.models.utils.read_hermes_cube.rst", "api/gammapy.modeling.select_nested_models.rst", "api/gammapy.modeling.stat_profile_ul_scipy.rst", "api/gammapy.stats.CashCountsStatistic.rst", "api/gammapy.stats.TimmerKonig_lightcurve_simulator.rst", "api/gammapy.stats.WStatCountsStatistic.rst", "api/gammapy.stats.cash.rst", "api/gammapy.stats.cash_sum_cython.rst", "api/gammapy.stats.compute_chisq.rst", "api/gammapy.stats.compute_flux_doubling.rst", "api/gammapy.stats.compute_fpp.rst", "api/gammapy.stats.compute_fvar.rst", "api/gammapy.stats.cstat.rst", "api/gammapy.stats.discrete_correlation.rst", "api/gammapy.stats.f_cash_root_cython.rst", "api/gammapy.stats.get_wstat_gof_terms.rst", "api/gammapy.stats.get_wstat_mu_bkg.rst", "api/gammapy.stats.norm_bounds_cython.rst", "api/gammapy.stats.sigma_to_ts.rst", "api/gammapy.stats.structure_function.rst", "api/gammapy.stats.ts_to_sigma.rst", "api/gammapy.stats.weighted_cash_sum_cython.rst", "api/gammapy.stats.wstat.rst", "api/gammapy.utils.cluster.hierarchical_clustering.rst", "api/gammapy.utils.cluster.standard_scaler.rst", "api/gammapy.utils.coordinates.D_SUN_TO_GALACTIC_CENTER.rst", "api/gammapy.utils.coordinates.cartesian.rst", "api/gammapy.utils.coordinates.fov_to_sky.rst", "api/gammapy.utils.coordinates.galactic.rst", "api/gammapy.utils.coordinates.motion_since_birth.rst", "api/gammapy.utils.coordinates.polar.rst", "api/gammapy.utils.coordinates.sky_to_fov.rst", "api/gammapy.utils.coordinates.velocity_glon_glat.rst", "api/gammapy.utils.fits.HDULocation.rst", "api/gammapy.utils.fits.LazyFitsData.rst", "api/gammapy.utils.fits.earth_location_from_dict.rst", "api/gammapy.utils.integrate.trapz_loglog.rst", "api/gammapy.utils.interpolation.ScaledRegularGridInterpolator.rst", "api/gammapy.utils.interpolation.interpolate_profile.rst", "api/gammapy.utils.interpolation.interpolation_scale.rst", "api/gammapy.utils.parallel.BACKEND_DEFAULT.rst", "api/gammapy.utils.parallel.METHOD_DEFAULT.rst", "api/gammapy.utils.parallel.METHOD_KWARGS_DEFAULT.rst", "api/gammapy.utils.parallel.N_JOBS_DEFAULT.rst", "api/gammapy.utils.parallel.POOL_KWARGS_DEFAULT.rst", "api/gammapy.utils.parallel.multiprocessing_manager.rst", "api/gammapy.utils.parallel.run_multiprocessing.rst", "api/gammapy.utils.random.InverseCDFSampler.rst", "api/gammapy.utils.random.draw.rst", "api/gammapy.utils.random.get_random_state.rst", "api/gammapy.utils.random.normalize.rst", "api/gammapy.utils.random.pdf.rst", "api/gammapy.utils.random.sample_powerlaw.rst", "api/gammapy.utils.random.sample_sphere.rst", "api/gammapy.utils.random.sample_sphere_distance.rst", "api/gammapy.utils.random.sample_times.rst", "api/gammapy.utils.regions.compound_region_to_regions.rst", "api/gammapy.utils.regions.make_concentric_annulus_sky_regions.rst", "api/gammapy.utils.regions.make_orthogonal_rectangle_sky_regions.rst", "api/gammapy.utils.regions.region_to_frame.rst", "api/gammapy.utils.regions.regions_to_compound_region.rst", "api/gammapy.utils.scripts.from_yaml.rst", "api/gammapy.utils.scripts.get_images_paths.rst", "api/gammapy.utils.scripts.make_path.rst", "api/gammapy.utils.scripts.read_yaml.rst", "api/gammapy.utils.scripts.recursive_merge_dicts.rst", "api/gammapy.utils.scripts.to_yaml.rst", "api/gammapy.utils.scripts.write_yaml.rst", "api/gammapy.utils.table.hstack_columns.rst", "api/gammapy.utils.table.table_row_to_dict.rst", "api/gammapy.utils.table.table_standardise_units_copy.rst", "api/gammapy.utils.table.table_standardise_units_inplace.rst", "api/gammapy.utils.testing.Checker.rst", "api/gammapy.utils.testing.assert_quantity_allclose.rst", "api/gammapy.utils.testing.assert_skycoord_allclose.rst", "api/gammapy.utils.testing.assert_time_allclose.rst", "api/gammapy.utils.testing.mpl_plot_check.rst", "api/gammapy.utils.testing.requires_data.rst", "api/gammapy.utils.testing.requires_dependency.rst", "api/gammapy.utils.time.absolute_time.rst", "api/gammapy.utils.time.time_ref_from_dict.rst", "api/gammapy.utils.time.time_ref_to_dict.rst", "api/gammapy.utils.time.time_relative_to_ref.rst", "api/gammapy.utils.units.standardise_unit.rst", "api/gammapy.utils.units.unit_from_fits_image_hdu.rst", "api/gammapy.visualization.MapPanelPlotter.rst", "api/gammapy.visualization.add_colorbar.rst", "api/gammapy.visualization.annotate_heatmap.rst", "api/gammapy.visualization.colormap_hess.rst", "api/gammapy.visualization.colormap_milagro.rst", "api/gammapy.visualization.plot_contour_line.rst", "api/gammapy.visualization.plot_distribution.rst", "api/gammapy.visualization.plot_heatmap.rst", "api/gammapy.visualization.plot_map_rgb.rst", "api/gammapy.visualization.plot_npred_signal.rst", "api/gammapy.visualization.plot_spectrum_datasets_off_regions.rst", "api/gammapy.visualization.plot_theta_squared_table.rst", "development/dependencies.rst", "development/dev_howto.rst", "development/doc_howto.rst", "development/index.rst", "development/intro.rst", "development/pigs/index.rst", "development/pigs/pig-001.rst", "development/pigs/pig-002.rst", "development/pigs/pig-003.rst", "development/pigs/pig-004.rst", "development/pigs/pig-005.rst", "development/pigs/pig-006.rst", "development/pigs/pig-007.rst", "development/pigs/pig-008.rst", "development/pigs/pig-009.rst", "development/pigs/pig-010.rst", "development/pigs/pig-011.rst", "development/pigs/pig-012.rst", "development/pigs/pig-013.rst", "development/pigs/pig-014.rst", "development/pigs/pig-016.rst", "development/pigs/pig-018.rst", "development/pigs/pig-019.rst", "development/pigs/pig-020.rst", "development/pigs/pig-021.rst", "development/pigs/pig-022.rst", "development/pigs/pig-023.rst", "development/pigs/pig-024.rst", "development/pigs/pig-025.rst", "development/pigs/pig-026.rst", "development/pigs/pig-027.rst", "development/release.rst", "development/setup.rst", "getting-started/environments.rst", "getting-started/index.rst", "getting-started/install.rst", "getting-started/quickstart.rst", "getting-started/troubleshooting.rst", "getting-started/usage.rst", "index.rst", "release-notes/index.rst", "release-notes/v0.1.rst", "release-notes/v0.10.rst", "release-notes/v0.11.rst", "release-notes/v0.12.rst", "release-notes/v0.13.rst", "release-notes/v0.14.rst", "release-notes/v0.15.rst", "release-notes/v0.16.rst", "release-notes/v0.17.rst", "release-notes/v0.18.rst", "release-notes/v0.18.1.rst", "release-notes/v0.18.2.rst", "release-notes/v0.19.rst", "release-notes/v0.2.rst", "release-notes/v0.20.rst", "release-notes/v0.20.1.rst", "release-notes/v0.3.rst", "release-notes/v0.4.rst", "release-notes/v0.5.rst", "release-notes/v0.6.rst", "release-notes/v0.7.rst", "release-notes/v0.8.rst", "release-notes/v0.9.rst", "release-notes/v1.0.rst", "release-notes/v1.0.1.rst", "release-notes/v1.0.2.rst", "release-notes/v1.1.rst", "release-notes/v1.2.rst", "release-notes/v1.3.rst", "release-notes/v2.0.rst", "sg_execution_times.rst", "tutorials/analysis-1d/cta_sensitivity.rst", "tutorials/analysis-1d/ebl.rst", "tutorials/analysis-1d/extended_source_spectral_analysis.rst", "tutorials/analysis-1d/index.rst", "tutorials/analysis-1d/sed_fitting.rst", "tutorials/analysis-1d/sg_execution_times.rst", "tutorials/analysis-1d/spectral_analysis.rst", "tutorials/analysis-1d/spectral_analysis_hli.rst", "tutorials/analysis-1d/spectral_analysis_rad_max.rst", "tutorials/analysis-1d/spectrum_simulation.rst", "tutorials/analysis-2d/detect.rst", "tutorials/analysis-2d/index.rst", "tutorials/analysis-2d/modeling_2D.rst", "tutorials/analysis-2d/ring_background.rst", "tutorials/analysis-2d/sg_execution_times.rst", "tutorials/analysis-3d/analysis_3d.rst", "tutorials/analysis-3d/analysis_mwl.rst", "tutorials/analysis-3d/cta_data_analysis.rst", "tutorials/analysis-3d/energy_dependent_estimation.rst", "tutorials/analysis-3d/event_sampling.rst", "tutorials/analysis-3d/event_sampling_nrg_depend_models.rst", "tutorials/analysis-3d/flux_profiles.rst", "tutorials/analysis-3d/index.rst", "tutorials/analysis-3d/sg_execution_times.rst", "tutorials/analysis-3d/simulate_3d.rst", "tutorials/analysis-time/index.rst", "tutorials/analysis-time/light_curve.rst", "tutorials/analysis-time/light_curve_flare.rst", "tutorials/analysis-time/light_curve_simulation.rst", "tutorials/analysis-time/pulsar_analysis.rst", "tutorials/analysis-time/sg_execution_times.rst", "tutorials/analysis-time/time_resolved_spectroscopy.rst", "tutorials/analysis-time/variability_estimation.rst", "tutorials/api/astro_dark_matter.rst", "tutorials/api/catalog.rst", "tutorials/api/datasets.rst", "tutorials/api/estimators.rst", "tutorials/api/fitting.rst", "tutorials/api/index.rst", "tutorials/api/irfs.rst", "tutorials/api/makers.rst", "tutorials/api/maps.rst", "tutorials/api/mask_maps.rst", "tutorials/api/model_management.rst", "tutorials/api/models.rst", "tutorials/api/observation_clustering.rst", "tutorials/api/priors.rst", "tutorials/api/sg_execution_times.rst", "tutorials/api/theta_square_plot.rst", "tutorials/data/cta.rst", "tutorials/data/fermi_lat.rst", "tutorials/data/hawc.rst", "tutorials/data/hess.rst", "tutorials/data/index.rst", "tutorials/data/sg_execution_times.rst", "tutorials/index.rst", "tutorials/scripts/index.rst", "tutorials/scripts/sg_execution_times.rst", "tutorials/scripts/survey_map.rst", "tutorials/sg_execution_times.rst", "tutorials/starting/analysis_1.rst", "tutorials/starting/analysis_2.rst", "tutorials/starting/index.rst", "tutorials/starting/overview.rst", "tutorials/starting/sg_execution_times.rst", "user-guide/astro/darkmatter/index.rst", "user-guide/astro/index.rst", "user-guide/astro/population/index.rst", "user-guide/astro/source/index.rst", "user-guide/astro/source/pulsar.rst", "user-guide/astro/source/pwn.rst", "user-guide/astro/source/snr.rst", "user-guide/catalog.rst", "user-guide/datasets/index.rst", "user-guide/dl3.rst", "user-guide/estimators.rst", "user-guide/hli.rst", "user-guide/howto.rst", "user-guide/index.rst", "user-guide/irf/aeff.rst", "user-guide/irf/bkg.rst", "user-guide/irf/edisp.rst", "user-guide/irf/index.rst", "user-guide/irf/psf.rst", "user-guide/makers/fov.rst", "user-guide/makers/index.rst", "user-guide/makers/reflected.rst", "user-guide/makers/ring.rst", "user-guide/maps/hpxmap.rst", "user-guide/maps/index.rst", "user-guide/maps/regionmap.rst", "user-guide/model-gallery/index.rst", "user-guide/model-gallery/sg_execution_times.rst", "user-guide/model-gallery/spatial/index.rst", "user-guide/model-gallery/spatial/plot_constant.rst", "user-guide/model-gallery/spatial/plot_disk.rst", "user-guide/model-gallery/spatial/plot_gauss.rst", "user-guide/model-gallery/spatial/plot_gen_gauss.rst", "user-guide/model-gallery/spatial/plot_piecewise_norm_spatial.rst", "user-guide/model-gallery/spatial/plot_point.rst", "user-guide/model-gallery/spatial/plot_shell.rst", "user-guide/model-gallery/spatial/plot_shell2.rst", "user-guide/model-gallery/spatial/plot_template.rst", "user-guide/model-gallery/spatial/sg_execution_times.rst", "user-guide/model-gallery/spectral/index.rst", "user-guide/model-gallery/spectral/plot_absorbed.rst", "user-guide/model-gallery/spectral/plot_broken_powerlaw.rst", "user-guide/model-gallery/spectral/plot_compound.rst", "user-guide/model-gallery/spectral/plot_constant_spectral.rst", "user-guide/model-gallery/spectral/plot_exp_cutoff_powerlaw.rst", "user-guide/model-gallery/spectral/plot_exp_cutoff_powerlaw_3fgl.rst", "user-guide/model-gallery/spectral/plot_exp_cutoff_powerlaw_norm_spectral.rst", "user-guide/model-gallery/spectral/plot_gauss_spectral.rst", "user-guide/model-gallery/spectral/plot_logparabola.rst", "user-guide/model-gallery/spectral/plot_logparabola_norm_spectral.rst", "user-guide/model-gallery/spectral/plot_naima.rst", "user-guide/model-gallery/spectral/plot_piecewise_norm_spectral.rst", "user-guide/model-gallery/spectral/plot_powerlaw.rst", "user-guide/model-gallery/spectral/plot_powerlaw2.rst", "user-guide/model-gallery/spectral/plot_powerlaw_norm_spectral.rst", "user-guide/model-gallery/spectral/plot_smooth_broken_powerlaw.rst", "user-guide/model-gallery/spectral/plot_super_exp_cutoff_powerlaw_3fgl.rst", "user-guide/model-gallery/spectral/plot_super_exp_cutoff_powerlaw_4fgl.rst", "user-guide/model-gallery/spectral/plot_super_exp_cutoff_powerlaw_4fgl_dr1.rst", "user-guide/model-gallery/spectral/plot_template_spectral.rst", "user-guide/model-gallery/spectral/sg_execution_times.rst", "user-guide/model-gallery/temporal/index.rst", "user-guide/model-gallery/temporal/plot_constant_temporal.rst", "user-guide/model-gallery/temporal/plot_expdecay_temporal.rst", "user-guide/model-gallery/temporal/plot_gaussian_temporal.rst", "user-guide/model-gallery/temporal/plot_generalized_gaussian_temporal.rst", "user-guide/model-gallery/temporal/plot_linear_temporal.rst", "user-guide/model-gallery/temporal/plot_powerlaw_temporal.rst", "user-guide/model-gallery/temporal/plot_sine_temporal.rst", "user-guide/model-gallery/temporal/plot_template_phase_temporal.rst", "user-guide/model-gallery/temporal/plot_template_temporal.rst", "user-guide/model-gallery/temporal/sg_execution_times.rst", "user-guide/modeling.rst", "user-guide/package.rst", "user-guide/references.rst", "user-guide/scripts/index.rst", "user-guide/stats/fit_statistics.rst", "user-guide/stats/index.rst", "user-guide/stats/wstat_derivation.rst", "user-guide/utils.rst", "user-guide/visualization/index.rst"], "indexentries": {"--dependencies": [[11, "cmdoption-gammapy-info-dependencies", false]], "--envvar": [[11, "cmdoption-gammapy-info-envvar", false]], "--filename": [[11, "cmdoption-gammapy-analysis-config-filename", false], [11, "cmdoption-gammapy-analysis-run-filename", false], [11, "cmdoption-gammapy-workflow-config-filename", false], [11, "cmdoption-gammapy-workflow-run-filename", false]], "--ignore-warnings": [[11, "cmdoption-gammapy-ignore-warnings", false]], "--log-level": [[11, "cmdoption-gammapy-log-level", false]], "--no-dependencies": [[11, "cmdoption-gammapy-info-dependencies", false]], "--no-envvar": [[11, "cmdoption-gammapy-info-envvar", false]], "--no-system": [[11, "cmdoption-gammapy-info-system", false]], "--no-version": [[11, "cmdoption-gammapy-info-version", false]], "--out": [[11, "cmdoption-gammapy-analysis-run-out", false], [11, "cmdoption-gammapy-download-datasets-out", false], [11, "cmdoption-gammapy-download-notebooks-out", false]], "--overwrite": [[11, "cmdoption-gammapy-analysis-config-overwrite", false], [11, "cmdoption-gammapy-analysis-run-overwrite", false], [11, "cmdoption-gammapy-workflow-config-overwrite", false]], "--release": [[11, "cmdoption-gammapy-download-datasets-release", false], [11, "cmdoption-gammapy-download-notebooks-release", false]], "--system": [[11, "cmdoption-gammapy-info-system", false]], "--version": [[11, "cmdoption-gammapy-info-version", false], [11, "cmdoption-gammapy-version", false]], "1d analysis": [[597, "term-1D-Analysis", true]], "3d analysis": [[597, "term-3D-Analysis", true]], "__call__() (gammapy.astro.darkmatter.burkertprofile method)": [[17, "gammapy.astro.darkmatter.BurkertProfile.__call__", false]], "__call__() (gammapy.astro.darkmatter.darkmatterannihilationspectralmodel method)": [[19, "gammapy.astro.darkmatter.DarkMatterAnnihilationSpectralModel.__call__", false]], "__call__() (gammapy.astro.darkmatter.darkmatterdecayspectralmodel method)": [[20, "gammapy.astro.darkmatter.DarkMatterDecaySpectralModel.__call__", false]], "__call__() (gammapy.astro.darkmatter.dmprofile method)": [[18, "gammapy.astro.darkmatter.DMProfile.__call__", false]], "__call__() (gammapy.astro.darkmatter.einastoprofile method)": [[21, "gammapy.astro.darkmatter.EinastoProfile.__call__", false]], "__call__() (gammapy.astro.darkmatter.isothermalprofile method)": [[22, "gammapy.astro.darkmatter.IsothermalProfile.__call__", false]], "__call__() (gammapy.astro.darkmatter.mooreprofile method)": [[24, "gammapy.astro.darkmatter.MooreProfile.__call__", false]], "__call__() (gammapy.astro.darkmatter.nfwprofile method)": [[25, "gammapy.astro.darkmatter.NFWProfile.__call__", false]], "__call__() (gammapy.astro.darkmatter.primaryflux method)": [[26, "gammapy.astro.darkmatter.PrimaryFlux.__call__", false]], "__call__() (gammapy.astro.darkmatter.zhaoprofile method)": [[27, "gammapy.astro.darkmatter.ZhaoProfile.__call__", false]], "__call__() (gammapy.astro.population.casebattacharya1998 method)": [[28, "gammapy.astro.population.CaseBattacharya1998.__call__", false]], "__call__() (gammapy.astro.population.exponential method)": [[29, "gammapy.astro.population.Exponential.__call__", false]], "__call__() (gammapy.astro.population.faucherkaspi2006 method)": [[30, "gammapy.astro.population.FaucherKaspi2006.__call__", false]], "__call__() (gammapy.astro.population.faucherkaspi2006velocitybimodal method)": [[31, "gammapy.astro.population.FaucherKaspi2006VelocityBimodal.__call__", false]], "__call__() (gammapy.astro.population.faucherkaspi2006velocitymaxwellian method)": [[32, "gammapy.astro.population.FaucherKaspi2006VelocityMaxwellian.__call__", false]], "__call__() (gammapy.astro.population.faucherspiral method)": [[33, "gammapy.astro.population.FaucherSpiral.__call__", false]], "__call__() (gammapy.astro.population.lorimer2006 method)": [[35, "gammapy.astro.population.Lorimer2006.__call__", false]], "__call__() (gammapy.astro.population.paczynski1990 method)": [[36, "gammapy.astro.population.Paczynski1990.__call__", false]], "__call__() (gammapy.astro.population.paczynski1990velocity method)": [[37, "gammapy.astro.population.Paczynski1990Velocity.__call__", false]], "__call__() (gammapy.astro.population.yusifovkucuk2004 method)": [[39, "gammapy.astro.population.YusifovKucuk2004.__call__", false]], "__call__() (gammapy.astro.population.yusifovkucuk2004b method)": [[40, "gammapy.astro.population.YusifovKucuk2004B.__call__", false]], "__call__() (gammapy.modeling.models.brokenpowerlawspectralmodel method)": [[221, "gammapy.modeling.models.BrokenPowerLawSpectralModel.__call__", false]], "__call__() (gammapy.modeling.models.compoundspectralmodel method)": [[222, "gammapy.modeling.models.CompoundSpectralModel.__call__", false]], "__call__() (gammapy.modeling.models.constantfluxspatialmodel method)": [[223, "gammapy.modeling.models.ConstantFluxSpatialModel.__call__", false]], "__call__() (gammapy.modeling.models.constantspatialmodel method)": [[224, "gammapy.modeling.models.ConstantSpatialModel.__call__", false]], "__call__() (gammapy.modeling.models.constantspectralmodel method)": [[225, "gammapy.modeling.models.ConstantSpectralModel.__call__", false]], "__call__() (gammapy.modeling.models.constanttemporalmodel method)": [[226, "gammapy.modeling.models.ConstantTemporalModel.__call__", false]], "__call__() (gammapy.modeling.models.diskspatialmodel method)": [[228, "gammapy.modeling.models.DiskSpatialModel.__call__", false]], "__call__() (gammapy.modeling.models.eblabsorptionnormspectralmodel method)": [[229, "gammapy.modeling.models.EBLAbsorptionNormSpectralModel.__call__", false]], "__call__() (gammapy.modeling.models.expcutoffpowerlaw3fglspectralmodel method)": [[231, "gammapy.modeling.models.ExpCutoffPowerLaw3FGLSpectralModel.__call__", false]], "__call__() (gammapy.modeling.models.expcutoffpowerlawnormspectralmodel method)": [[232, "gammapy.modeling.models.ExpCutoffPowerLawNormSpectralModel.__call__", false]], "__call__() (gammapy.modeling.models.expcutoffpowerlawspectralmodel method)": [[233, "gammapy.modeling.models.ExpCutoffPowerLawSpectralModel.__call__", false]], "__call__() (gammapy.modeling.models.expdecaytemporalmodel method)": [[234, "gammapy.modeling.models.ExpDecayTemporalModel.__call__", false]], "__call__() (gammapy.modeling.models.gaussianprior method)": [[236, "gammapy.modeling.models.GaussianPrior.__call__", false]], "__call__() (gammapy.modeling.models.gaussianspatialmodel method)": [[237, "gammapy.modeling.models.GaussianSpatialModel.__call__", false]], "__call__() (gammapy.modeling.models.gaussianspectralmodel method)": [[238, "gammapy.modeling.models.GaussianSpectralModel.__call__", false]], "__call__() (gammapy.modeling.models.gaussiantemporalmodel method)": [[239, "gammapy.modeling.models.GaussianTemporalModel.__call__", false]], "__call__() (gammapy.modeling.models.generalizedgaussianspatialmodel method)": [[240, "gammapy.modeling.models.GeneralizedGaussianSpatialModel.__call__", false]], "__call__() (gammapy.modeling.models.generalizedgaussiantemporalmodel method)": [[241, "gammapy.modeling.models.GeneralizedGaussianTemporalModel.__call__", false]], "__call__() (gammapy.modeling.models.lightcurvetemplatetemporalmodel method)": [[242, "gammapy.modeling.models.LightCurveTemplateTemporalModel.__call__", false]], "__call__() (gammapy.modeling.models.lineartemporalmodel method)": [[243, "gammapy.modeling.models.LinearTemporalModel.__call__", false]], "__call__() (gammapy.modeling.models.logparabolanormspectralmodel method)": [[244, "gammapy.modeling.models.LogParabolaNormSpectralModel.__call__", false]], "__call__() (gammapy.modeling.models.logparabolaspectralmodel method)": [[245, "gammapy.modeling.models.LogParabolaSpectralModel.__call__", false]], "__call__() (gammapy.modeling.models.loguniformprior method)": [[246, "gammapy.modeling.models.LogUniformPrior.__call__", false]], "__call__() (gammapy.modeling.models.meyercrabspectralmodel method)": [[248, "gammapy.modeling.models.MeyerCrabSpectralModel.__call__", false]], "__call__() (gammapy.modeling.models.naimaspectralmodel method)": [[252, "gammapy.modeling.models.NaimaSpectralModel.__call__", false]], "__call__() (gammapy.modeling.models.piecewisenormspatialmodel method)": [[253, "gammapy.modeling.models.PiecewiseNormSpatialModel.__call__", false]], "__call__() (gammapy.modeling.models.piecewisenormspectralmodel method)": [[254, "gammapy.modeling.models.PiecewiseNormSpectralModel.__call__", false]], "__call__() (gammapy.modeling.models.pointspatialmodel method)": [[255, "gammapy.modeling.models.PointSpatialModel.__call__", false]], "__call__() (gammapy.modeling.models.powerlaw2spectralmodel method)": [[256, "gammapy.modeling.models.PowerLaw2SpectralModel.__call__", false]], "__call__() (gammapy.modeling.models.powerlawnormspectralmodel method)": [[257, "gammapy.modeling.models.PowerLawNormSpectralModel.__call__", false]], "__call__() (gammapy.modeling.models.powerlawspectralmodel method)": [[258, "gammapy.modeling.models.PowerLawSpectralModel.__call__", false]], "__call__() (gammapy.modeling.models.powerlawtemporalmodel method)": [[259, "gammapy.modeling.models.PowerLawTemporalModel.__call__", false]], "__call__() (gammapy.modeling.models.prior method)": [[260, "gammapy.modeling.models.Prior.__call__", false]], "__call__() (gammapy.modeling.models.scalespectralmodel method)": [[263, "gammapy.modeling.models.ScaleSpectralModel.__call__", false]], "__call__() (gammapy.modeling.models.shell2spatialmodel method)": [[264, "gammapy.modeling.models.Shell2SpatialModel.__call__", false]], "__call__() (gammapy.modeling.models.shellspatialmodel method)": [[265, "gammapy.modeling.models.ShellSpatialModel.__call__", false]], "__call__() (gammapy.modeling.models.sinetemporalmodel method)": [[266, "gammapy.modeling.models.SineTemporalModel.__call__", false]], "__call__() (gammapy.modeling.models.skymodel method)": [[267, "gammapy.modeling.models.SkyModel.__call__", false]], "__call__() (gammapy.modeling.models.smoothbrokenpowerlawspectralmodel method)": [[268, "gammapy.modeling.models.SmoothBrokenPowerLawSpectralModel.__call__", false]], "__call__() (gammapy.modeling.models.spatialmodel method)": [[269, "gammapy.modeling.models.SpatialModel.__call__", false]], "__call__() (gammapy.modeling.models.spectralmodel method)": [[270, "gammapy.modeling.models.SpectralModel.__call__", false]], "__call__() (gammapy.modeling.models.superexpcutoffpowerlaw3fglspectralmodel method)": [[271, "gammapy.modeling.models.SuperExpCutoffPowerLaw3FGLSpectralModel.__call__", false]], "__call__() (gammapy.modeling.models.superexpcutoffpowerlaw4fgldr3spectralmodel method)": [[272, "gammapy.modeling.models.SuperExpCutoffPowerLaw4FGLDR3SpectralModel.__call__", false]], "__call__() (gammapy.modeling.models.superexpcutoffpowerlaw4fglspectralmodel method)": [[273, "gammapy.modeling.models.SuperExpCutoffPowerLaw4FGLSpectralModel.__call__", false]], "__call__() (gammapy.modeling.models.templatendspatialmodel method)": [[275, "gammapy.modeling.models.TemplateNDSpatialModel.__call__", false]], "__call__() (gammapy.modeling.models.templatendspectralmodel method)": [[276, "gammapy.modeling.models.TemplateNDSpectralModel.__call__", false]], "__call__() (gammapy.modeling.models.templatephasecurvetemporalmodel method)": [[278, "gammapy.modeling.models.TemplatePhaseCurveTemporalModel.__call__", false]], "__call__() (gammapy.modeling.models.templatespatialmodel method)": [[279, "gammapy.modeling.models.TemplateSpatialModel.__call__", false]], "__call__() (gammapy.modeling.models.templatespectralmodel method)": [[280, "gammapy.modeling.models.TemplateSpectralModel.__call__", false]], "__call__() (gammapy.modeling.models.temporalmodel method)": [[281, "gammapy.modeling.models.TemporalModel.__call__", false]], "__call__() (gammapy.modeling.models.uniformprior method)": [[282, "gammapy.modeling.models.UniformPrior.__call__", false]], "__call__() (gammapy.utils.interpolation.scaledregulargridinterpolator method)": [[326, "gammapy.utils.interpolation.ScaledRegularGridInterpolator.__call__", false]], "a (gammapy.astro.population.yusifovkucuk2004 attribute)": [[39, "gammapy.astro.population.YusifovKucuk2004.a", false]], "a (gammapy.astro.population.yusifovkucuk2004b attribute)": [[40, "gammapy.astro.population.YusifovKucuk2004B.a", false]], "absolute_time() (in module gammapy.utils.time)": [[368, "gammapy.utils.time.absolute_time", false]], "acceptance_off (gammapy.estimators.fluxmaps attribute)": [[125, "gammapy.estimators.FluxMaps.acceptance_off", false]], "acceptance_off (gammapy.estimators.fluxpoints attribute)": [[127, "gammapy.estimators.FluxPoints.acceptance_off", false]], "acceptance_on (gammapy.estimators.fluxmaps attribute)": [[125, "gammapy.estimators.FluxMaps.acceptance_on", false]], "acceptance_on (gammapy.estimators.fluxpoints attribute)": [[127, "gammapy.estimators.FluxPoints.acceptance_on", false]], "adaptiveringbackgroundmaker (class in gammapy.makers)": [[171, "gammapy.makers.AdaptiveRingBackgroundMaker", false]], "add_colorbar() (in module gammapy.visualization)": [[375, "gammapy.visualization.add_colorbar", false]], "add_column() (gammapy.data.hduindextable method)": [[87, "gammapy.data.HDUIndexTable.add_column", false]], "add_column() (gammapy.data.observationtable method)": [[91, "gammapy.data.ObservationTable.add_column", false]], "add_columns() (gammapy.data.hduindextable method)": [[87, "gammapy.data.HDUIndexTable.add_columns", false]], "add_columns() (gammapy.data.observationtable method)": [[91, "gammapy.data.ObservationTable.add_columns", false]], "add_index() (gammapy.data.hduindextable method)": [[87, "gammapy.data.HDUIndexTable.add_index", false]], "add_index() (gammapy.data.observationtable method)": [[91, "gammapy.data.ObservationTable.add_index", false]], "add_observed_parameters() (in module gammapy.astro.population)": [[41, "gammapy.astro.population.add_observed_parameters", false]], "add_pulsar_parameters() (in module gammapy.astro.population)": [[42, "gammapy.astro.population.add_pulsar_parameters", false]], "add_pwn_parameters() (in module gammapy.astro.population)": [[43, "gammapy.astro.population.add_pwn_parameters", false]], "add_row() (gammapy.data.hduindextable method)": [[87, "gammapy.data.HDUIndexTable.add_row", false]], "add_row() (gammapy.data.observationtable method)": [[91, "gammapy.data.ObservationTable.add_row", false]], "add_snr_parameters() (in module gammapy.astro.population)": [[44, "gammapy.astro.population.add_snr_parameters", false]], "aeff": [[597, "term-Aeff", true]], "aeff (gammapy.data.observation attribute)": [[88, "gammapy.data.Observation.aeff", false]], "all_quantities() (gammapy.estimators.fluxmaps static method)": [[125, "gammapy.estimators.FluxMaps.all_quantities", false]], "all_quantities() (gammapy.estimators.fluxpoints static method)": [[127, "gammapy.estimators.FluxPoints.all_quantities", false]], "allowed_channels (gammapy.astro.darkmatter.primaryflux attribute)": [[26, "gammapy.astro.darkmatter.PrimaryFlux.allowed_channels", false]], "alpha (gammapy.astro.population.casebattacharya1998 attribute)": [[28, "gammapy.astro.population.CaseBattacharya1998.alpha", false]], "alpha (gammapy.datasets.mapdatasetonoff attribute)": [[106, "gammapy.datasets.MapDatasetOnOff.alpha", false]], "alpha (gammapy.datasets.spectrumdatasetonoff attribute)": [[111, "gammapy.datasets.SpectrumDatasetOnOff.alpha", false]], "alpha (gammapy.estimators.fluxmaps attribute)": [[125, "gammapy.estimators.FluxMaps.alpha", false]], "alpha (gammapy.estimators.fluxpoints attribute)": [[127, "gammapy.estimators.FluxPoints.alpha", false]], "alpha (gammapy.modeling.models.expcutoffpowerlawnormspectralmodel attribute)": [[232, "gammapy.modeling.models.ExpCutoffPowerLawNormSpectralModel.alpha", false]], "alpha (gammapy.modeling.models.expcutoffpowerlawspectralmodel attribute)": [[233, "gammapy.modeling.models.ExpCutoffPowerLawSpectralModel.alpha", false]], "alpha (gammapy.modeling.models.lineartemporalmodel attribute)": [[243, "gammapy.modeling.models.LinearTemporalModel.alpha", false]], "alpha (gammapy.modeling.models.logparabolanormspectralmodel attribute)": [[244, "gammapy.modeling.models.LogParabolaNormSpectralModel.alpha", false]], "alpha (gammapy.modeling.models.logparabolaspectralmodel attribute)": [[245, "gammapy.modeling.models.LogParabolaSpectralModel.alpha", false]], "alpha (gammapy.modeling.models.powerlawtemporalmodel attribute)": [[259, "gammapy.modeling.models.PowerLawTemporalModel.alpha", false]], "alpha_norm (gammapy.modeling.models.eblabsorptionnormspectralmodel attribute)": [[229, "gammapy.modeling.models.EBLAbsorptionNormSpectralModel.alpha_norm", false]], "altaz (gammapy.data.eventlist attribute)": [[83, "gammapy.data.EventList.altaz", false]], "altaz (gammapy.data.pointinginfo attribute)": [[94, "gammapy.data.PointingInfo.altaz", false]], "altaz (gammapy.irf.fovalignment attribute)": [[159, "gammapy.irf.FoVAlignment.ALTAZ", false]], "altaz_frame (gammapy.data.eventlist attribute)": [[83, "gammapy.data.EventList.altaz_frame", false]], "altaz_frame (gammapy.data.pointinginfo attribute)": [[94, "gammapy.data.PointingInfo.altaz_frame", false]], "altaz_from_table (gammapy.data.eventlist attribute)": [[83, "gammapy.data.EventList.altaz_from_table", false]], "altaz_from_table (gammapy.data.pointinginfo attribute)": [[94, "gammapy.data.PointingInfo.altaz_from_table", false]], "altaz_interpolate() (gammapy.data.pointinginfo method)": [[94, "gammapy.data.PointingInfo.altaz_interpolate", false]], "amp (gammapy.modeling.models.sinetemporalmodel attribute)": [[266, "gammapy.modeling.models.SineTemporalModel.amp", false]], "amplitude (gammapy.astro.population.casebattacharya1998 attribute)": [[28, "gammapy.astro.population.CaseBattacharya1998.amplitude", false]], "amplitude (gammapy.astro.population.exponential attribute)": [[29, "gammapy.astro.population.Exponential.amplitude", false]], "amplitude (gammapy.astro.population.faucherkaspi2006 attribute)": [[30, "gammapy.astro.population.FaucherKaspi2006.amplitude", false]], "amplitude (gammapy.astro.population.faucherkaspi2006velocitybimodal attribute)": [[31, "gammapy.astro.population.FaucherKaspi2006VelocityBimodal.amplitude", false]], "amplitude (gammapy.astro.population.faucherkaspi2006velocitymaxwellian attribute)": [[32, "gammapy.astro.population.FaucherKaspi2006VelocityMaxwellian.amplitude", false]], "amplitude (gammapy.astro.population.lorimer2006 attribute)": [[35, "gammapy.astro.population.Lorimer2006.amplitude", false]], "amplitude (gammapy.astro.population.paczynski1990 attribute)": [[36, "gammapy.astro.population.Paczynski1990.amplitude", false]], "amplitude (gammapy.astro.population.paczynski1990velocity attribute)": [[37, "gammapy.astro.population.Paczynski1990Velocity.amplitude", false]], "amplitude (gammapy.astro.population.yusifovkucuk2004 attribute)": [[39, "gammapy.astro.population.YusifovKucuk2004.amplitude", false]], "amplitude (gammapy.astro.population.yusifovkucuk2004b attribute)": [[40, "gammapy.astro.population.YusifovKucuk2004B.amplitude", false]], "amplitude (gammapy.modeling.models.brokenpowerlawspectralmodel attribute)": [[221, "gammapy.modeling.models.BrokenPowerLawSpectralModel.amplitude", false]], "amplitude (gammapy.modeling.models.expcutoffpowerlaw3fglspectralmodel attribute)": [[231, "gammapy.modeling.models.ExpCutoffPowerLaw3FGLSpectralModel.amplitude", false]], "amplitude (gammapy.modeling.models.expcutoffpowerlawspectralmodel attribute)": [[233, "gammapy.modeling.models.ExpCutoffPowerLawSpectralModel.amplitude", false]], "amplitude (gammapy.modeling.models.gaussianspectralmodel attribute)": [[238, "gammapy.modeling.models.GaussianSpectralModel.amplitude", false]], "amplitude (gammapy.modeling.models.logparabolaspectralmodel attribute)": [[245, "gammapy.modeling.models.LogParabolaSpectralModel.amplitude", false]], "amplitude (gammapy.modeling.models.powerlaw2spectralmodel attribute)": [[256, "gammapy.modeling.models.PowerLaw2SpectralModel.amplitude", false]], "amplitude (gammapy.modeling.models.powerlawspectralmodel attribute)": [[258, "gammapy.modeling.models.PowerLawSpectralModel.amplitude", false]], "amplitude (gammapy.modeling.models.smoothbrokenpowerlawspectralmodel attribute)": [[268, "gammapy.modeling.models.SmoothBrokenPowerLawSpectralModel.amplitude", false]], "amplitude (gammapy.modeling.models.superexpcutoffpowerlaw3fglspectralmodel attribute)": [[271, "gammapy.modeling.models.SuperExpCutoffPowerLaw3FGLSpectralModel.amplitude", false]], "amplitude (gammapy.modeling.models.superexpcutoffpowerlaw4fgldr3spectralmodel attribute)": [[272, "gammapy.modeling.models.SuperExpCutoffPowerLaw4FGLDR3SpectralModel.amplitude", false]], "amplitude (gammapy.modeling.models.superexpcutoffpowerlaw4fglspectralmodel attribute)": [[273, "gammapy.modeling.models.SuperExpCutoffPowerLaw4FGLSpectralModel.amplitude", false]], "analysis (class in gammapy.analysis)": [[15, "gammapy.analysis.Analysis", false]], "analysisconfig (class in gammapy.analysis)": [[16, "gammapy.analysis.AnalysisConfig", false]], "annotate_heatmap() (in module gammapy.visualization)": [[376, "gammapy.visualization.annotate_heatmap", false]], "append() (gammapy.data.observations method)": [[92, "gammapy.data.Observations.append", false]], "append() (gammapy.datasets.datasets method)": [[100, "gammapy.datasets.Datasets.append", false]], "append() (gammapy.modeling.models.models method)": [[251, "gammapy.modeling.models.Models.append", false]], "apply_edisp() (in module gammapy.datasets)": [[112, "gammapy.datasets.apply_edisp", false]], "apply_edisp() (in module gammapy.datasets.utils)": [[117, "gammapy.datasets.utils.apply_edisp", false]], "apply_mask() (gammapy.maps.mapcoord method)": [[202, "gammapy.maps.MapCoord.apply_mask", false]], "argsort() (gammapy.data.hduindextable method)": [[87, "gammapy.data.HDUIndexTable.argsort", false]], "argsort() (gammapy.data.observationtable method)": [[91, "gammapy.data.ObservationTable.argsort", false]], "as_array() (gammapy.data.hduindextable method)": [[87, "gammapy.data.HDUIndexTable.as_array", false]], "as_array() (gammapy.data.observationtable method)": [[91, "gammapy.data.ObservationTable.as_array", false]], "as_energy_true (gammapy.maps.geom attribute)": [[194, "gammapy.maps.Geom.as_energy_true", false]], "as_energy_true (gammapy.maps.hpxgeom attribute)": [[195, "gammapy.maps.HpxGeom.as_energy_true", false]], "as_energy_true (gammapy.maps.regiongeom attribute)": [[204, "gammapy.maps.RegionGeom.as_energy_true", false]], "as_energy_true (gammapy.maps.wcsgeom attribute)": [[207, "gammapy.maps.WcsGeom.as_energy_true", false]], "as_plot_center (gammapy.maps.labelmapaxis attribute)": [[198, "gammapy.maps.LabelMapAxis.as_plot_center", false]], "as_plot_center (gammapy.maps.mapaxis attribute)": [[201, "gammapy.maps.MapAxis.as_plot_center", false]], "as_plot_center (gammapy.maps.timemapaxis attribute)": [[206, "gammapy.maps.TimeMapAxis.as_plot_center", false]], "as_plot_edges (gammapy.maps.labelmapaxis attribute)": [[198, "gammapy.maps.LabelMapAxis.as_plot_edges", false]], "as_plot_edges (gammapy.maps.mapaxis attribute)": [[201, "gammapy.maps.MapAxis.as_plot_edges", false]], "as_plot_edges (gammapy.maps.timemapaxis attribute)": [[206, "gammapy.maps.TimeMapAxis.as_plot_edges", false]], "as_plot_labels (gammapy.maps.labelmapaxis attribute)": [[198, "gammapy.maps.LabelMapAxis.as_plot_labels", false]], "as_plot_labels (gammapy.maps.mapaxis attribute)": [[201, "gammapy.maps.MapAxis.as_plot_labels", false]], "as_plot_labels (gammapy.maps.timemapaxis attribute)": [[206, "gammapy.maps.TimeMapAxis.as_plot_labels", false]], "as_plot_scale (gammapy.maps.mapaxis attribute)": [[201, "gammapy.maps.MapAxis.as_plot_scale", false]], "as_plot_xerr (gammapy.maps.labelmapaxis attribute)": [[198, "gammapy.maps.LabelMapAxis.as_plot_xerr", false]], "as_plot_xerr (gammapy.maps.mapaxis attribute)": [[201, "gammapy.maps.MapAxis.as_plot_xerr", false]], "as_plot_xerr (gammapy.maps.timemapaxis attribute)": [[206, "gammapy.maps.TimeMapAxis.as_plot_xerr", false]], "asmoothmapestimator (class in gammapy.estimators)": [[120, "gammapy.estimators.ASmoothMapEstimator", false]], "assert_name() (gammapy.maps.labelmapaxis method)": [[198, "gammapy.maps.LabelMapAxis.assert_name", false]], "assert_name() (gammapy.maps.mapaxis method)": [[201, "gammapy.maps.MapAxis.assert_name", false]], "assert_name() (gammapy.maps.timemapaxis method)": [[206, "gammapy.maps.TimeMapAxis.assert_name", false]], "assert_names() (gammapy.maps.mapaxes method)": [[200, "gammapy.maps.MapAxes.assert_names", false]], "assert_quantity_allclose() (in module gammapy.utils.testing)": [[362, "gammapy.utils.testing.assert_quantity_allclose", false]], "assert_skycoord_allclose() (in module gammapy.utils.testing)": [[363, "gammapy.utils.testing.assert_skycoord_allclose", false]], "assert_time_allclose() (in module gammapy.utils.testing)": [[364, "gammapy.utils.testing.assert_time_allclose", false]], "asso (gammapy.catalog.sourcecatalogobject2fhl attribute)": [[71, "gammapy.catalog.SourceCatalogObject2FHL.asso", false]], "asso (gammapy.catalog.sourcecatalogobject3fgl attribute)": [[74, "gammapy.catalog.SourceCatalogObject3FGL.asso", false]], "asso (gammapy.catalog.sourcecatalogobject3fhl attribute)": [[75, "gammapy.catalog.SourceCatalogObject3FHL.asso", false]], "asso (gammapy.catalog.sourcecatalogobject3pc attribute)": [[77, "gammapy.catalog.SourceCatalogObject3PC.asso", false]], "asso (gammapy.catalog.sourcecatalogobject4fgl attribute)": [[78, "gammapy.catalog.SourceCatalogObject4FGL.asso", false]], "autoscale() (gammapy.modeling.parameter method)": [[217, "gammapy.modeling.Parameter.autoscale", false]], "autoscale() (gammapy.modeling.parameters method)": [[218, "gammapy.modeling.Parameters.autoscale", false]], "autoscale() (gammapy.modeling.priorparameter method)": [[219, "gammapy.modeling.PriorParameter.autoscale", false]], "autoscale() (gammapy.modeling.priorparameters method)": [[220, "gammapy.modeling.PriorParameters.autoscale", false]], "available_hdus (gammapy.data.observation attribute)": [[88, "gammapy.data.Observation.available_hdus", false]], "available_irfs (gammapy.data.observation attribute)": [[88, "gammapy.data.Observation.available_irfs", false]], "available_methods (gammapy.makers.fovbackgroundmaker attribute)": [[173, "gammapy.makers.FoVBackgroundMaker.available_methods", false]], "available_methods (gammapy.makers.safemaskmaker attribute)": [[182, "gammapy.makers.SafeMaskMaker.available_methods", false]], "available_quantities (gammapy.estimators.fluxmaps attribute)": [[125, "gammapy.estimators.FluxMaps.available_quantities", false]], "available_quantities (gammapy.estimators.fluxpoints attribute)": [[127, "gammapy.estimators.FluxPoints.available_quantities", false]], "available_selection (gammapy.makers.mapdatasetmaker attribute)": [[176, "gammapy.makers.MapDatasetMaker.available_selection", false]], "available_selection (gammapy.makers.spectrumdatasetmaker attribute)": [[183, "gammapy.makers.SpectrumDatasetMaker.available_selection", false]], "available_stat_type (gammapy.datasets.fluxpointsdataset attribute)": [[102, "gammapy.datasets.FluxPointsDataset.available_stat_type", false]], "axes (gammapy.irf.background2d attribute)": [[150, "gammapy.irf.Background2D.axes", false]], "axes (gammapy.irf.background3d attribute)": [[151, "gammapy.irf.Background3D.axes", false]], "axes (gammapy.irf.backgroundirf attribute)": [[152, "gammapy.irf.BackgroundIRF.axes", false]], "axes (gammapy.irf.edispkernel attribute)": [[153, "gammapy.irf.EDispKernel.axes", false]], "axes (gammapy.irf.effectiveareatable2d attribute)": [[156, "gammapy.irf.EffectiveAreaTable2D.axes", false]], "axes (gammapy.irf.energydependentmultigausspsf attribute)": [[157, "gammapy.irf.EnergyDependentMultiGaussPSF.axes", false]], "axes (gammapy.irf.energydispersion2d attribute)": [[158, "gammapy.irf.EnergyDispersion2D.axes", false]], "axes (gammapy.irf.irf attribute)": [[160, "gammapy.irf.IRF.axes", false]], "axes (gammapy.irf.parametricpsf attribute)": [[167, "gammapy.irf.ParametricPSF.axes", false]], "axes (gammapy.irf.psf3d attribute)": [[163, "gammapy.irf.PSF3D.axes", false]], "axes (gammapy.irf.psfking attribute)": [[165, "gammapy.irf.PSFKing.axes", false]], "axes (gammapy.irf.radmax2d attribute)": [[168, "gammapy.irf.RadMax2D.axes", false]], "axes (gammapy.maps.hpxgeom attribute)": [[195, "gammapy.maps.HpxGeom.axes", false]], "axes (gammapy.maps.regiongeom attribute)": [[204, "gammapy.maps.RegionGeom.axes", false]], "axes (gammapy.maps.wcsgeom attribute)": [[207, "gammapy.maps.WcsGeom.axes", false]], "axes_names (gammapy.maps.hpxgeom attribute)": [[195, "gammapy.maps.HpxGeom.axes_names", false]], "axes_names (gammapy.maps.regiongeom attribute)": [[204, "gammapy.maps.RegionGeom.axes_names", false]], "axes_names (gammapy.maps.wcsgeom attribute)": [[207, "gammapy.maps.WcsGeom.axes_names", false]], "axis_names (gammapy.maps.mapcoord attribute)": [[202, "gammapy.maps.MapCoord.axis_names", false]], "b (gammapy.astro.population.lorimer2006 attribute)": [[35, "gammapy.astro.population.Lorimer2006.B", false]], "b (gammapy.astro.population.yusifovkucuk2004 attribute)": [[39, "gammapy.astro.population.YusifovKucuk2004.b", false]], "b (gammapy.astro.population.yusifovkucuk2004b attribute)": [[40, "gammapy.astro.population.YusifovKucuk2004B.b", false]], "backend (gammapy.modeling.covarianceresult attribute)": [[213, "gammapy.modeling.CovarianceResult.backend", false]], "backend (gammapy.modeling.fitresult attribute)": [[215, "gammapy.modeling.FitResult.backend", false]], "backend (gammapy.modeling.optimizeresult attribute)": [[216, "gammapy.modeling.OptimizeResult.backend", false]], "backend_default (in module gammapy.utils.parallel)": [[329, "gammapy.utils.parallel.BACKEND_DEFAULT", false]], "background (gammapy.datasets.mapdataset attribute)": [[103, "gammapy.datasets.MapDataset.background", false]], "background (gammapy.datasets.mapdatasetonoff attribute)": [[106, "gammapy.datasets.MapDatasetOnOff.background", false]], "background (gammapy.datasets.spectrumdataset attribute)": [[110, "gammapy.datasets.SpectrumDataset.background", false]], "background (gammapy.datasets.spectrumdatasetonoff attribute)": [[111, "gammapy.datasets.SpectrumDatasetOnOff.background", false]], "background2d (class in gammapy.irf)": [[150, "gammapy.irf.Background2D", false]], "background3d (class in gammapy.irf)": [[151, "gammapy.irf.Background3D", false]], "background_model (gammapy.datasets.mapdataset attribute)": [[103, "gammapy.datasets.MapDataset.background_model", false]], "background_model (gammapy.datasets.mapdatasetonoff attribute)": [[106, "gammapy.datasets.MapDatasetOnOff.background_model", false]], "background_model (gammapy.datasets.spectrumdataset attribute)": [[110, "gammapy.datasets.SpectrumDataset.background_model", false]], "background_model (gammapy.datasets.spectrumdatasetonoff attribute)": [[111, "gammapy.datasets.SpectrumDatasetOnOff.background_model", false]], "background_models (gammapy.modeling.models.datasetmodels attribute)": [[227, "gammapy.modeling.models.DatasetModels.background_models", false]], "background_models (gammapy.modeling.models.models attribute)": [[251, "gammapy.modeling.models.Models.background_models", false]], "backgroundirf (class in gammapy.irf)": [[152, "gammapy.irf.BackgroundIRF", false]], "bar_radius (gammapy.astro.population.valleespiral attribute)": [[38, "gammapy.astro.population.ValleeSpiral.bar_radius", false]], "base_dir (gammapy.data.hduindextable attribute)": [[87, "gammapy.data.HDUIndexTable.base_dir", false]], "bbox_with_units (gammapy.astro.population.casebattacharya1998 attribute)": [[28, "gammapy.astro.population.CaseBattacharya1998.bbox_with_units", false]], "bbox_with_units (gammapy.astro.population.exponential attribute)": [[29, "gammapy.astro.population.Exponential.bbox_with_units", false]], "bbox_with_units (gammapy.astro.population.faucherkaspi2006 attribute)": [[30, "gammapy.astro.population.FaucherKaspi2006.bbox_with_units", false]], "bbox_with_units (gammapy.astro.population.faucherkaspi2006velocitybimodal attribute)": [[31, "gammapy.astro.population.FaucherKaspi2006VelocityBimodal.bbox_with_units", false]], "bbox_with_units (gammapy.astro.population.faucherkaspi2006velocitymaxwellian attribute)": [[32, "gammapy.astro.population.FaucherKaspi2006VelocityMaxwellian.bbox_with_units", false]], "bbox_with_units (gammapy.astro.population.lorimer2006 attribute)": [[35, "gammapy.astro.population.Lorimer2006.bbox_with_units", false]], "bbox_with_units (gammapy.astro.population.paczynski1990 attribute)": [[36, "gammapy.astro.population.Paczynski1990.bbox_with_units", false]], "bbox_with_units (gammapy.astro.population.paczynski1990velocity attribute)": [[37, "gammapy.astro.population.Paczynski1990Velocity.bbox_with_units", false]], "bbox_with_units (gammapy.astro.population.yusifovkucuk2004 attribute)": [[39, "gammapy.astro.population.YusifovKucuk2004.bbox_with_units", false]], "bbox_with_units (gammapy.astro.population.yusifovkucuk2004b attribute)": [[40, "gammapy.astro.population.YusifovKucuk2004B.bbox_with_units", false]], "beta (gammapy.astro.population.casebattacharya1998 attribute)": [[28, "gammapy.astro.population.CaseBattacharya1998.beta", false]], "beta (gammapy.modeling.models.lineartemporalmodel attribute)": [[243, "gammapy.modeling.models.LinearTemporalModel.beta", false]], "beta (gammapy.modeling.models.logparabolanormspectralmodel attribute)": [[244, "gammapy.modeling.models.LogParabolaNormSpectralModel.beta", false]], "beta (gammapy.modeling.models.logparabolaspectralmodel attribute)": [[245, "gammapy.modeling.models.LogParabolaSpectralModel.beta", false]], "beta (gammapy.modeling.models.smoothbrokenpowerlawspectralmodel attribute)": [[268, "gammapy.modeling.models.SmoothBrokenPowerLawSpectralModel.beta", false]], "bin_volume() (gammapy.maps.mapaxes method)": [[200, "gammapy.maps.MapAxes.bin_volume", false]], "bin_volume() (gammapy.maps.regiongeom method)": [[204, "gammapy.maps.RegionGeom.bin_volume", false]], "bin_volume() (gammapy.maps.wcsgeom method)": [[207, "gammapy.maps.WcsGeom.bin_volume", false]], "bin_width (gammapy.maps.labelmapaxis attribute)": [[198, "gammapy.maps.LabelMapAxis.bin_width", false]], "bin_width (gammapy.maps.mapaxis attribute)": [[201, "gammapy.maps.MapAxis.bin_width", false]], "bin_width (gammapy.maps.timemapaxis attribute)": [[206, "gammapy.maps.TimeMapAxis.bin_width", false]], "binary_dilate() (gammapy.maps.wcsndmap method)": [[209, "gammapy.maps.WcsNDMap.binary_dilate", false]], "binary_erode() (gammapy.maps.wcsndmap method)": [[209, "gammapy.maps.WcsNDMap.binary_erode", false]], "binary_structure() (gammapy.maps.wcsgeom method)": [[207, "gammapy.maps.WcsGeom.binary_structure", false]], "binsz_wcs (gammapy.maps.regiongeom attribute)": [[204, "gammapy.maps.RegionGeom.binsz_wcs", false]], "bkg": [[597, "term-Bkg", true]], "bkg (gammapy.data.observation attribute)": [[88, "gammapy.data.Observation.bkg", false]], "boundary_mask() (gammapy.maps.wcsgeom method)": [[207, "gammapy.maps.WcsGeom.boundary_mask", false]], "bounding_box (gammapy.astro.population.casebattacharya1998 attribute)": [[28, "gammapy.astro.population.CaseBattacharya1998.bounding_box", false]], "bounding_box (gammapy.astro.population.exponential attribute)": [[29, "gammapy.astro.population.Exponential.bounding_box", false]], "bounding_box (gammapy.astro.population.faucherkaspi2006 attribute)": [[30, "gammapy.astro.population.FaucherKaspi2006.bounding_box", false]], "bounding_box (gammapy.astro.population.faucherkaspi2006velocitybimodal attribute)": [[31, "gammapy.astro.population.FaucherKaspi2006VelocityBimodal.bounding_box", false]], "bounding_box (gammapy.astro.population.faucherkaspi2006velocitymaxwellian attribute)": [[32, "gammapy.astro.population.FaucherKaspi2006VelocityMaxwellian.bounding_box", false]], "bounding_box (gammapy.astro.population.lorimer2006 attribute)": [[35, "gammapy.astro.population.Lorimer2006.bounding_box", false]], "bounding_box (gammapy.astro.population.paczynski1990 attribute)": [[36, "gammapy.astro.population.Paczynski1990.bounding_box", false]], "bounding_box (gammapy.astro.population.paczynski1990velocity attribute)": [[37, "gammapy.astro.population.Paczynski1990Velocity.bounding_box", false]], "bounding_box (gammapy.astro.population.yusifovkucuk2004 attribute)": [[39, "gammapy.astro.population.YusifovKucuk2004.bounding_box", false]], "bounding_box (gammapy.astro.population.yusifovkucuk2004b attribute)": [[40, "gammapy.astro.population.YusifovKucuk2004B.bounding_box", false]], "bounds (gammapy.astro.population.casebattacharya1998 attribute)": [[28, "gammapy.astro.population.CaseBattacharya1998.bounds", false]], "bounds (gammapy.astro.population.exponential attribute)": [[29, "gammapy.astro.population.Exponential.bounds", false]], "bounds (gammapy.astro.population.faucherkaspi2006 attribute)": [[30, "gammapy.astro.population.FaucherKaspi2006.bounds", false]], "bounds (gammapy.astro.population.faucherkaspi2006velocitybimodal attribute)": [[31, "gammapy.astro.population.FaucherKaspi2006VelocityBimodal.bounds", false]], "bounds (gammapy.astro.population.faucherkaspi2006velocitymaxwellian attribute)": [[32, "gammapy.astro.population.FaucherKaspi2006VelocityMaxwellian.bounds", false]], "bounds (gammapy.astro.population.lorimer2006 attribute)": [[35, "gammapy.astro.population.Lorimer2006.bounds", false]], "bounds (gammapy.astro.population.paczynski1990 attribute)": [[36, "gammapy.astro.population.Paczynski1990.bounds", false]], "bounds (gammapy.astro.population.paczynski1990velocity attribute)": [[37, "gammapy.astro.population.Paczynski1990Velocity.bounds", false]], "bounds (gammapy.astro.population.yusifovkucuk2004 attribute)": [[39, "gammapy.astro.population.YusifovKucuk2004.bounds", false]], "bounds (gammapy.astro.population.yusifovkucuk2004b attribute)": [[40, "gammapy.astro.population.YusifovKucuk2004B.bounds", false]], "bounds (gammapy.maps.mapaxis attribute)": [[201, "gammapy.maps.MapAxis.bounds", false]], "bounds (gammapy.maps.timemapaxis attribute)": [[206, "gammapy.maps.TimeMapAxis.bounds", false]], "broadcasted (gammapy.maps.mapcoord attribute)": [[202, "gammapy.maps.MapCoord.broadcasted", false]], "brokenpowerlawspectralmodel (class in gammapy.modeling.models)": [[221, "gammapy.modeling.models.BrokenPowerLawSpectralModel", false]], "burkertprofile (class in gammapy.astro.darkmatter)": [[17, "gammapy.astro.darkmatter.BurkertProfile", false]], "c (gammapy.astro.population.lorimer2006 attribute)": [[35, "gammapy.astro.population.Lorimer2006.C", false]], "callback() (gammapy.makers.datasetsmaker method)": [[172, "gammapy.makers.DatasetsMaker.callback", false]], "cartesian() (in module gammapy.utils.coordinates)": [[315, "gammapy.utils.coordinates.cartesian", false]], "casebattacharya1998 (class in gammapy.astro.population)": [[28, "gammapy.astro.population.CaseBattacharya1998", false]], "cash": [[597, "term-Cash", true]], "cash() (in module gammapy.stats)": [[295, "gammapy.stats.cash", false]], "cash_sum_cython() (in module gammapy.stats)": [[296, "gammapy.stats.cash_sum_cython", false]], "cashcountsstatistic (class in gammapy.stats)": [[292, "gammapy.stats.CashCountsStatistic", false]], "catalog_registry (in module gammapy.catalog)": [[55, "gammapy.catalog.CATALOG_REGISTRY", false]], "center (gammapy.maps.labelmapaxis attribute)": [[198, "gammapy.maps.LabelMapAxis.center", false]], "center (gammapy.maps.mapaxis attribute)": [[201, "gammapy.maps.MapAxis.center", false]], "center (gammapy.maps.timemapaxis attribute)": [[206, "gammapy.maps.TimeMapAxis.center", false]], "center_coord (gammapy.maps.geom attribute)": [[194, "gammapy.maps.Geom.center_coord", false]], "center_coord (gammapy.maps.hpxgeom attribute)": [[195, "gammapy.maps.HpxGeom.center_coord", false]], "center_coord (gammapy.maps.mapaxes attribute)": [[200, "gammapy.maps.MapAxes.center_coord", false]], "center_coord (gammapy.maps.regiongeom attribute)": [[204, "gammapy.maps.RegionGeom.center_coord", false]], "center_coord (gammapy.maps.wcsgeom attribute)": [[207, "gammapy.maps.WcsGeom.center_coord", false]], "center_pix (gammapy.maps.geom attribute)": [[194, "gammapy.maps.Geom.center_pix", false]], "center_pix (gammapy.maps.hpxgeom attribute)": [[195, "gammapy.maps.HpxGeom.center_pix", false]], "center_pix (gammapy.maps.regiongeom attribute)": [[204, "gammapy.maps.RegionGeom.center_pix", false]], "center_pix (gammapy.maps.wcsgeom attribute)": [[207, "gammapy.maps.WcsGeom.center_pix", false]], "center_skydir (gammapy.maps.geom attribute)": [[194, "gammapy.maps.Geom.center_skydir", false]], "center_skydir (gammapy.maps.hpxgeom attribute)": [[195, "gammapy.maps.HpxGeom.center_skydir", false]], "center_skydir (gammapy.maps.regiongeom attribute)": [[204, "gammapy.maps.RegionGeom.center_skydir", false]], "center_skydir (gammapy.maps.wcsgeom attribute)": [[207, "gammapy.maps.WcsGeom.center_skydir", false]], "channel (gammapy.astro.darkmatter.primaryflux attribute)": [[26, "gammapy.astro.darkmatter.PrimaryFlux.channel", false]], "channel_registry (gammapy.astro.darkmatter.primaryflux attribute)": [[26, "gammapy.astro.darkmatter.PrimaryFlux.channel_registry", false]], "check() (gammapy.data.datastore method)": [[82, "gammapy.data.DataStore.check", false]], "check() (gammapy.data.eventlist method)": [[83, "gammapy.data.EventList.check", false]], "check() (gammapy.data.observation method)": [[88, "gammapy.data.Observation.check", false]], "check_limits() (gammapy.modeling.parameter method)": [[217, "gammapy.modeling.Parameter.check_limits", false]], "check_limits() (gammapy.modeling.parameters method)": [[218, "gammapy.modeling.Parameters.check_limits", false]], "check_limits() (gammapy.modeling.priorparameter method)": [[219, "gammapy.modeling.PriorParameter.check_limits", false]], "check_limits() (gammapy.modeling.priorparameters method)": [[220, "gammapy.modeling.PriorParameters.check_limits", false]], "checker (class in gammapy.utils.testing)": [[361, "gammapy.utils.testing.Checker", false]], "clear() (gammapy.data.observations method)": [[92, "gammapy.data.Observations.clear", false]], "clear() (gammapy.datasets.datasets method)": [[100, "gammapy.datasets.Datasets.clear", false]], "clear() (gammapy.maps.maps method)": [[203, "gammapy.maps.Maps.clear", false]], "clear() (gammapy.modeling.models.models method)": [[251, "gammapy.modeling.models.Models.clear", false]], "coadd() (gammapy.maps.hpxmap method)": [[196, "gammapy.maps.HpxMap.coadd", false]], "coadd() (gammapy.maps.hpxndmap method)": [[197, "gammapy.maps.HpxNDMap.coadd", false]], "coadd() (gammapy.maps.map method)": [[199, "gammapy.maps.Map.coadd", false]], "coadd() (gammapy.maps.regionndmap method)": [[205, "gammapy.maps.RegionNDMap.coadd", false]], "coadd() (gammapy.maps.wcsmap method)": [[208, "gammapy.maps.WcsMap.coadd", false]], "coadd() (gammapy.maps.wcsndmap method)": [[209, "gammapy.maps.WcsNDMap.coadd", false]], "coefficients (gammapy.modeling.models.meyercrabspectralmodel attribute)": [[248, "gammapy.modeling.models.MeyerCrabSpectralModel.coefficients", false]], "coerce_units() (gammapy.astro.population.casebattacharya1998 method)": [[28, "gammapy.astro.population.CaseBattacharya1998.coerce_units", false]], "coerce_units() (gammapy.astro.population.exponential method)": [[29, "gammapy.astro.population.Exponential.coerce_units", false]], "coerce_units() (gammapy.astro.population.faucherkaspi2006 method)": [[30, "gammapy.astro.population.FaucherKaspi2006.coerce_units", false]], "coerce_units() (gammapy.astro.population.faucherkaspi2006velocitybimodal method)": [[31, "gammapy.astro.population.FaucherKaspi2006VelocityBimodal.coerce_units", false]], "coerce_units() (gammapy.astro.population.faucherkaspi2006velocitymaxwellian method)": [[32, "gammapy.astro.population.FaucherKaspi2006VelocityMaxwellian.coerce_units", false]], "coerce_units() (gammapy.astro.population.lorimer2006 method)": [[35, "gammapy.astro.population.Lorimer2006.coerce_units", false]], "coerce_units() (gammapy.astro.population.paczynski1990 method)": [[36, "gammapy.astro.population.Paczynski1990.coerce_units", false]], "coerce_units() (gammapy.astro.population.paczynski1990velocity method)": [[37, "gammapy.astro.population.Paczynski1990Velocity.coerce_units", false]], "coerce_units() (gammapy.astro.population.yusifovkucuk2004 method)": [[39, "gammapy.astro.population.YusifovKucuk2004.coerce_units", false]], "coerce_units() (gammapy.astro.population.yusifovkucuk2004b method)": [[40, "gammapy.astro.population.YusifovKucuk2004B.coerce_units", false]], "col_fit_deriv (gammapy.astro.population.casebattacharya1998 attribute)": [[28, "gammapy.astro.population.CaseBattacharya1998.col_fit_deriv", false]], "col_fit_deriv (gammapy.astro.population.exponential attribute)": [[29, "gammapy.astro.population.Exponential.col_fit_deriv", false]], "col_fit_deriv (gammapy.astro.population.faucherkaspi2006 attribute)": [[30, "gammapy.astro.population.FaucherKaspi2006.col_fit_deriv", false]], "col_fit_deriv (gammapy.astro.population.faucherkaspi2006velocitybimodal attribute)": [[31, "gammapy.astro.population.FaucherKaspi2006VelocityBimodal.col_fit_deriv", false]], "col_fit_deriv (gammapy.astro.population.faucherkaspi2006velocitymaxwellian attribute)": [[32, "gammapy.astro.population.FaucherKaspi2006VelocityMaxwellian.col_fit_deriv", false]], "col_fit_deriv (gammapy.astro.population.lorimer2006 attribute)": [[35, "gammapy.astro.population.Lorimer2006.col_fit_deriv", false]], "col_fit_deriv (gammapy.astro.population.paczynski1990 attribute)": [[36, "gammapy.astro.population.Paczynski1990.col_fit_deriv", false]], "col_fit_deriv (gammapy.astro.population.paczynski1990velocity attribute)": [[37, "gammapy.astro.population.Paczynski1990Velocity.col_fit_deriv", false]], "col_fit_deriv (gammapy.astro.population.yusifovkucuk2004 attribute)": [[39, "gammapy.astro.population.YusifovKucuk2004.col_fit_deriv", false]], "col_fit_deriv (gammapy.astro.population.yusifovkucuk2004b attribute)": [[40, "gammapy.astro.population.YusifovKucuk2004B.col_fit_deriv", false]], "colnames (gammapy.data.hduindextable attribute)": [[87, "gammapy.data.HDUIndexTable.colnames", false]], "colnames (gammapy.data.observationtable attribute)": [[91, "gammapy.data.ObservationTable.colnames", false]], "colormap_hess() (in module gammapy.visualization)": [[377, "gammapy.visualization.colormap_hess", false]], "colormap_milagro() (in module gammapy.visualization)": [[378, "gammapy.visualization.colormap_milagro", false]], "columnclass (gammapy.data.hduindextable attribute)": [[87, "gammapy.data.HDUIndexTable.ColumnClass", false]], "columnclass (gammapy.data.observationtable attribute)": [[91, "gammapy.data.ObservationTable.ColumnClass", false]], "combine_flux_maps() (in module gammapy.estimators.utils)": [[137, "gammapy.estimators.utils.combine_flux_maps", false]], "combine_significance_maps() (in module gammapy.estimators.utils)": [[138, "gammapy.estimators.utils.combine_significance_maps", false]], "components_models() (gammapy.catalog.sourcecatalogobjecthgps method)": [[80, "gammapy.catalog.SourceCatalogObjectHGPS.components_models", false]], "compound_region_to_regions() (in module gammapy.utils.regions)": [[345, "gammapy.utils.regions.compound_region_to_regions", false]], "compoundspectralmodel (class in gammapy.modeling.models)": [[222, "gammapy.modeling.models.CompoundSpectralModel", false]], "compute_chisq() (in module gammapy.stats)": [[297, "gammapy.stats.compute_chisq", false]], "compute_differential_jfactor() (gammapy.astro.darkmatter.jfactory method)": [[23, "gammapy.astro.darkmatter.JFactory.compute_differential_jfactor", false]], "compute_errn() (gammapy.stats.cashcountsstatistic method)": [[292, "gammapy.stats.CashCountsStatistic.compute_errn", false]], "compute_errn() (gammapy.stats.wstatcountsstatistic method)": [[294, "gammapy.stats.WStatCountsStatistic.compute_errn", false]], "compute_errp() (gammapy.stats.cashcountsstatistic method)": [[292, "gammapy.stats.CashCountsStatistic.compute_errp", false]], "compute_errp() (gammapy.stats.wstatcountsstatistic method)": [[294, "gammapy.stats.WStatCountsStatistic.compute_errp", false]], "compute_flux_doubling() (in module gammapy.stats)": [[298, "gammapy.stats.compute_flux_doubling", false]], "compute_fpp() (in module gammapy.stats)": [[299, "gammapy.stats.compute_fpp", false]], "compute_fvar() (in module gammapy.stats)": [[300, "gammapy.stats.compute_fvar", false]], "compute_jfactor() (gammapy.astro.darkmatter.jfactory method)": [[23, "gammapy.astro.darkmatter.JFactory.compute_jfactor", false]], "compute_lightcurve_discrete_correlation() (in module gammapy.estimators.utils)": [[139, "gammapy.estimators.utils.compute_lightcurve_discrete_correlation", false]], "compute_lightcurve_doublingtime() (in module gammapy.estimators.utils)": [[140, "gammapy.estimators.utils.compute_lightcurve_doublingtime", false]], "compute_lightcurve_fpp() (in module gammapy.estimators.utils)": [[141, "gammapy.estimators.utils.compute_lightcurve_fpp", false]], "compute_lightcurve_fvar() (in module gammapy.estimators.utils)": [[142, "gammapy.estimators.utils.compute_lightcurve_fvar", false]], "compute_upper_limit() (gammapy.stats.cashcountsstatistic method)": [[292, "gammapy.stats.CashCountsStatistic.compute_upper_limit", false]], "compute_upper_limit() (gammapy.stats.wstatcountsstatistic method)": [[294, "gammapy.stats.WStatCountsStatistic.compute_upper_limit", false]], "concatenate() (gammapy.maps.labelmapaxis method)": [[198, "gammapy.maps.LabelMapAxis.concatenate", false]], "concatenate() (gammapy.maps.mapaxis method)": [[201, "gammapy.maps.MapAxis.concatenate", false]], "conf_max (gammapy.modeling.parameter attribute)": [[217, "gammapy.modeling.Parameter.conf_max", false]], "conf_max (gammapy.modeling.priorparameter attribute)": [[219, "gammapy.modeling.PriorParameter.conf_max", false]], "conf_min (gammapy.modeling.parameter attribute)": [[217, "gammapy.modeling.Parameter.conf_min", false]], "conf_min (gammapy.modeling.priorparameter attribute)": [[219, "gammapy.modeling.PriorParameter.conf_min", false]], "confidence() (gammapy.modeling.fit method)": [[214, "gammapy.modeling.Fit.confidence", false]], "config (gammapy.analysis.analysis attribute)": [[15, "gammapy.analysis.Analysis.config", false]], "config_parameters (gammapy.estimators.asmoothmapestimator attribute)": [[120, "gammapy.estimators.ASmoothMapEstimator.config_parameters", false]], "config_parameters (gammapy.estimators.energydependentmorphologyestimator attribute)": [[122, "gammapy.estimators.EnergyDependentMorphologyEstimator.config_parameters", false]], "config_parameters (gammapy.estimators.estimator attribute)": [[123, "gammapy.estimators.Estimator.config_parameters", false]], "config_parameters (gammapy.estimators.excessmapestimator attribute)": [[124, "gammapy.estimators.ExcessMapEstimator.config_parameters", false]], "config_parameters (gammapy.estimators.fluxpointsestimator attribute)": [[128, "gammapy.estimators.FluxPointsEstimator.config_parameters", false]], "config_parameters (gammapy.estimators.fluxprofileestimator attribute)": [[129, "gammapy.estimators.FluxProfileEstimator.config_parameters", false]], "config_parameters (gammapy.estimators.imageprofileestimator attribute)": [[131, "gammapy.estimators.ImageProfileEstimator.config_parameters", false]], "config_parameters (gammapy.estimators.lightcurveestimator attribute)": [[132, "gammapy.estimators.LightCurveEstimator.config_parameters", false]], "config_parameters (gammapy.estimators.parameterestimator attribute)": [[133, "gammapy.estimators.ParameterEstimator.config_parameters", false]], "config_parameters (gammapy.estimators.sensitivityestimator attribute)": [[135, "gammapy.estimators.SensitivityEstimator.config_parameters", false]], "config_parameters (gammapy.estimators.tsmapestimator attribute)": [[136, "gammapy.estimators.TSMapEstimator.config_parameters", false]], "const (gammapy.modeling.models.constantspectralmodel attribute)": [[225, "gammapy.modeling.models.ConstantSpectralModel.const", false]], "constantfluxspatialmodel (class in gammapy.modeling.models)": [[223, "gammapy.modeling.models.ConstantFluxSpatialModel", false]], "constantspatialmodel (class in gammapy.modeling.models)": [[224, "gammapy.modeling.models.ConstantSpatialModel", false]], "constantspectralmodel (class in gammapy.modeling.models)": [[225, "gammapy.modeling.models.ConstantSpectralModel", false]], "constanttemporalmodel (class in gammapy.modeling.models)": [[226, "gammapy.modeling.models.ConstantTemporalModel", false]], "construct() (gammapy.analysis.analysisconfig class method)": [[16, "gammapy.analysis.AnalysisConfig.construct", false]], "construct() (gammapy.data.eventlistmetadata class method)": [[84, "gammapy.data.EventListMetaData.construct", false]], "construct() (gammapy.data.observationmetadata class method)": [[90, "gammapy.data.ObservationMetaData.construct", false]], "construct() (gammapy.datasets.mapdatasetmetadata class method)": [[105, "gammapy.datasets.MapDatasetMetaData.construct", false]], "construct() (gammapy.estimators.fluxmetadata class method)": [[126, "gammapy.estimators.FluxMetaData.construct", false]], "containment() (gammapy.irf.energydependentmultigausspsf method)": [[157, "gammapy.irf.EnergyDependentMultiGaussPSF.containment", false]], "containment() (gammapy.irf.parametricpsf method)": [[167, "gammapy.irf.ParametricPSF.containment", false]], "containment() (gammapy.irf.psf3d method)": [[163, "gammapy.irf.PSF3D.containment", false]], "containment() (gammapy.irf.psfking method)": [[165, "gammapy.irf.PSFKing.containment", false]], "containment() (gammapy.irf.psfmap method)": [[166, "gammapy.irf.PSFMap.containment", false]], "containment() (gammapy.irf.recopsfmap method)": [[169, "gammapy.irf.RecoPSFMap.containment", false]], "containment_radius() (gammapy.irf.energydependentmultigausspsf method)": [[157, "gammapy.irf.EnergyDependentMultiGaussPSF.containment_radius", false]], "containment_radius() (gammapy.irf.parametricpsf method)": [[167, "gammapy.irf.ParametricPSF.containment_radius", false]], "containment_radius() (gammapy.irf.psf3d method)": [[163, "gammapy.irf.PSF3D.containment_radius", false]], "containment_radius() (gammapy.irf.psfking method)": [[165, "gammapy.irf.PSFKing.containment_radius", false]], "containment_radius() (gammapy.irf.psfmap method)": [[166, "gammapy.irf.PSFMap.containment_radius", false]], "containment_radius() (gammapy.irf.recopsfmap method)": [[169, "gammapy.irf.RecoPSFMap.containment_radius", false]], "containment_radius() (in module gammapy.maps)": [[210, "gammapy.maps.containment_radius", false]], "containment_radius_map() (gammapy.irf.psfmap method)": [[166, "gammapy.irf.PSFMap.containment_radius_map", false]], "containment_radius_map() (gammapy.irf.recopsfmap method)": [[169, "gammapy.irf.RecoPSFMap.containment_radius_map", false]], "containment_region() (in module gammapy.maps)": [[211, "gammapy.maps.containment_region", false]], "contains() (gammapy.maps.geom method)": [[194, "gammapy.maps.Geom.contains", false]], "contains() (gammapy.maps.hpxgeom method)": [[195, "gammapy.maps.HpxGeom.contains", false]], "contains() (gammapy.maps.regiongeom method)": [[204, "gammapy.maps.RegionGeom.contains", false]], "contains() (gammapy.maps.wcsgeom method)": [[207, "gammapy.maps.WcsGeom.contains", false]], "contains_pix() (gammapy.maps.geom method)": [[194, "gammapy.maps.Geom.contains_pix", false]], "contains_pix() (gammapy.maps.hpxgeom method)": [[195, "gammapy.maps.HpxGeom.contains_pix", false]], "contains_pix() (gammapy.maps.regiongeom method)": [[204, "gammapy.maps.RegionGeom.contains_pix", false]], "contains_pix() (gammapy.maps.wcsgeom method)": [[207, "gammapy.maps.WcsGeom.contains_pix", false]], "contains_wcs_pix() (gammapy.maps.regiongeom method)": [[204, "gammapy.maps.RegionGeom.contains_wcs_pix", false]], "contributes() (gammapy.modeling.models.fovbackgroundmodel static method)": [[235, "gammapy.modeling.models.FoVBackgroundModel.contributes", false]], "contributes() (gammapy.modeling.models.skymodel method)": [[267, "gammapy.modeling.models.SkyModel.contributes", false]], "contributes_to_stat (gammapy.datasets.datasets attribute)": [[100, "gammapy.datasets.Datasets.contributes_to_stat", false]], "convert_bytestring_to_unicode() (gammapy.data.hduindextable method)": [[87, "gammapy.data.HDUIndexTable.convert_bytestring_to_unicode", false]], "convert_bytestring_to_unicode() (gammapy.data.observationtable method)": [[91, "gammapy.data.ObservationTable.convert_bytestring_to_unicode", false]], "convert_unicode_to_bytestring() (gammapy.data.hduindextable method)": [[87, "gammapy.data.HDUIndexTable.convert_unicode_to_bytestring", false]], "convert_unicode_to_bytestring() (gammapy.data.observationtable method)": [[91, "gammapy.data.ObservationTable.convert_unicode_to_bytestring", false]], "convolve() (gammapy.maps.hpxndmap method)": [[197, "gammapy.maps.HpxNDMap.convolve", false]], "convolve() (gammapy.maps.wcsndmap method)": [[209, "gammapy.maps.WcsNDMap.convolve", false]], "convolve_full() (gammapy.maps.hpxndmap method)": [[197, "gammapy.maps.HpxNDMap.convolve_full", false]], "convolve_wcs() (gammapy.maps.hpxndmap method)": [[197, "gammapy.maps.HpxNDMap.convolve_wcs", false]], "coord_to_idx() (gammapy.maps.geom method)": [[194, "gammapy.maps.Geom.coord_to_idx", false]], "coord_to_idx() (gammapy.maps.hpxgeom method)": [[195, "gammapy.maps.HpxGeom.coord_to_idx", false]], "coord_to_idx() (gammapy.maps.labelmapaxis method)": [[198, "gammapy.maps.LabelMapAxis.coord_to_idx", false]], "coord_to_idx() (gammapy.maps.mapaxes method)": [[200, "gammapy.maps.MapAxes.coord_to_idx", false]], "coord_to_idx() (gammapy.maps.mapaxis method)": [[201, "gammapy.maps.MapAxis.coord_to_idx", false]], "coord_to_idx() (gammapy.maps.regiongeom method)": [[204, "gammapy.maps.RegionGeom.coord_to_idx", false]], "coord_to_idx() (gammapy.maps.timemapaxis method)": [[206, "gammapy.maps.TimeMapAxis.coord_to_idx", false]], "coord_to_idx() (gammapy.maps.wcsgeom method)": [[207, "gammapy.maps.WcsGeom.coord_to_idx", false]], "coord_to_pix() (gammapy.maps.geom method)": [[194, "gammapy.maps.Geom.coord_to_pix", false]], "coord_to_pix() (gammapy.maps.hpxgeom method)": [[195, "gammapy.maps.HpxGeom.coord_to_pix", false]], "coord_to_pix() (gammapy.maps.labelmapaxis method)": [[198, "gammapy.maps.LabelMapAxis.coord_to_pix", false]], "coord_to_pix() (gammapy.maps.mapaxes method)": [[200, "gammapy.maps.MapAxes.coord_to_pix", false]], "coord_to_pix() (gammapy.maps.mapaxis method)": [[201, "gammapy.maps.MapAxis.coord_to_pix", false]], "coord_to_pix() (gammapy.maps.regiongeom method)": [[204, "gammapy.maps.RegionGeom.coord_to_pix", false]], "coord_to_pix() (gammapy.maps.timemapaxis method)": [[206, "gammapy.maps.TimeMapAxis.coord_to_pix", false]], "coord_to_pix() (gammapy.maps.wcsgeom method)": [[207, "gammapy.maps.WcsGeom.coord_to_pix", false]], "coords (gammapy.modeling.models.piecewisenormspatialmodel attribute)": [[253, "gammapy.modeling.models.PiecewiseNormSpatialModel.coords", false]], "copy() (gammapy.analysis.analysisconfig method)": [[16, "gammapy.analysis.AnalysisConfig.copy", false]], "copy() (gammapy.astro.darkmatter.darkmatterannihilationspectralmodel method)": [[19, "gammapy.astro.darkmatter.DarkMatterAnnihilationSpectralModel.copy", false]], "copy() (gammapy.astro.darkmatter.darkmatterdecayspectralmodel method)": [[20, "gammapy.astro.darkmatter.DarkMatterDecaySpectralModel.copy", false]], "copy() (gammapy.astro.darkmatter.primaryflux method)": [[26, "gammapy.astro.darkmatter.PrimaryFlux.copy", false]], "copy() (gammapy.astro.population.casebattacharya1998 method)": [[28, "gammapy.astro.population.CaseBattacharya1998.copy", false]], "copy() (gammapy.astro.population.exponential method)": [[29, "gammapy.astro.population.Exponential.copy", false]], "copy() (gammapy.astro.population.faucherkaspi2006 method)": [[30, "gammapy.astro.population.FaucherKaspi2006.copy", false]], "copy() (gammapy.astro.population.faucherkaspi2006velocitybimodal method)": [[31, "gammapy.astro.population.FaucherKaspi2006VelocityBimodal.copy", false]], "copy() (gammapy.astro.population.faucherkaspi2006velocitymaxwellian method)": [[32, "gammapy.astro.population.FaucherKaspi2006VelocityMaxwellian.copy", false]], "copy() (gammapy.astro.population.lorimer2006 method)": [[35, "gammapy.astro.population.Lorimer2006.copy", false]], "copy() (gammapy.astro.population.paczynski1990 method)": [[36, "gammapy.astro.population.Paczynski1990.copy", false]], "copy() (gammapy.astro.population.paczynski1990velocity method)": [[37, "gammapy.astro.population.Paczynski1990Velocity.copy", false]], "copy() (gammapy.astro.population.yusifovkucuk2004 method)": [[39, "gammapy.astro.population.YusifovKucuk2004.copy", false]], "copy() (gammapy.astro.population.yusifovkucuk2004b method)": [[40, "gammapy.astro.population.YusifovKucuk2004B.copy", false]], "copy() (gammapy.data.eventlist method)": [[83, "gammapy.data.EventList.copy", false]], "copy() (gammapy.data.eventlistmetadata method)": [[84, "gammapy.data.EventListMetaData.copy", false]], "copy() (gammapy.data.gti method)": [[86, "gammapy.data.GTI.copy", false]], "copy() (gammapy.data.hduindextable method)": [[87, "gammapy.data.HDUIndexTable.copy", false]], "copy() (gammapy.data.observation method)": [[88, "gammapy.data.Observation.copy", false]], "copy() (gammapy.data.observationfilter method)": [[89, "gammapy.data.ObservationFilter.copy", false]], "copy() (gammapy.data.observationmetadata method)": [[90, "gammapy.data.ObservationMetaData.copy", false]], "copy() (gammapy.data.observationtable method)": [[91, "gammapy.data.ObservationTable.copy", false]], "copy() (gammapy.datasets.dataset method)": [[99, "gammapy.datasets.Dataset.copy", false]], "copy() (gammapy.datasets.datasets method)": [[100, "gammapy.datasets.Datasets.copy", false]], "copy() (gammapy.datasets.fluxpointsdataset method)": [[102, "gammapy.datasets.FluxPointsDataset.copy", false]], "copy() (gammapy.datasets.mapdataset method)": [[103, "gammapy.datasets.MapDataset.copy", false]], "copy() (gammapy.datasets.mapdatasetmetadata method)": [[105, "gammapy.datasets.MapDatasetMetaData.copy", false]], "copy() (gammapy.datasets.mapdatasetonoff method)": [[106, "gammapy.datasets.MapDatasetOnOff.copy", false]], "copy() (gammapy.datasets.spectrumdataset method)": [[110, "gammapy.datasets.SpectrumDataset.copy", false]], "copy() (gammapy.datasets.spectrumdatasetonoff method)": [[111, "gammapy.datasets.SpectrumDatasetOnOff.copy", false]], "copy() (gammapy.estimators.asmoothmapestimator method)": [[120, "gammapy.estimators.ASmoothMapEstimator.copy", false]], "copy() (gammapy.estimators.energydependentmorphologyestimator method)": [[122, "gammapy.estimators.EnergyDependentMorphologyEstimator.copy", false]], "copy() (gammapy.estimators.estimator method)": [[123, "gammapy.estimators.Estimator.copy", false]], "copy() (gammapy.estimators.excessmapestimator method)": [[124, "gammapy.estimators.ExcessMapEstimator.copy", false]], "copy() (gammapy.estimators.fluxmaps method)": [[125, "gammapy.estimators.FluxMaps.copy", false]], "copy() (gammapy.estimators.fluxmetadata method)": [[126, "gammapy.estimators.FluxMetaData.copy", false]], "copy() (gammapy.estimators.fluxpoints method)": [[127, "gammapy.estimators.FluxPoints.copy", false]], "copy() (gammapy.estimators.fluxpointsestimator method)": [[128, "gammapy.estimators.FluxPointsEstimator.copy", false]], "copy() (gammapy.estimators.fluxprofileestimator method)": [[129, "gammapy.estimators.FluxProfileEstimator.copy", false]], "copy() (gammapy.estimators.imageprofileestimator method)": [[131, "gammapy.estimators.ImageProfileEstimator.copy", false]], "copy() (gammapy.estimators.lightcurveestimator method)": [[132, "gammapy.estimators.LightCurveEstimator.copy", false]], "copy() (gammapy.estimators.parameterestimator method)": [[133, "gammapy.estimators.ParameterEstimator.copy", false]], "copy() (gammapy.estimators.sensitivityestimator method)": [[135, "gammapy.estimators.SensitivityEstimator.copy", false]], "copy() (gammapy.estimators.tsmapestimator method)": [[136, "gammapy.estimators.TSMapEstimator.copy", false]], "copy() (gammapy.irf.edispkernelmap method)": [[154, "gammapy.irf.EDispKernelMap.copy", false]], "copy() (gammapy.irf.edispmap method)": [[155, "gammapy.irf.EDispMap.copy", false]], "copy() (gammapy.irf.irfmap method)": [[161, "gammapy.irf.IRFMap.copy", false]], "copy() (gammapy.irf.psfmap method)": [[166, "gammapy.irf.PSFMap.copy", false]], "copy() (gammapy.irf.recopsfmap method)": [[169, "gammapy.irf.RecoPSFMap.copy", false]], "copy() (gammapy.maps.geom method)": [[194, "gammapy.maps.Geom.copy", false]], "copy() (gammapy.maps.hpxgeom method)": [[195, "gammapy.maps.HpxGeom.copy", false]], "copy() (gammapy.maps.hpxmap method)": [[196, "gammapy.maps.HpxMap.copy", false]], "copy() (gammapy.maps.hpxndmap method)": [[197, "gammapy.maps.HpxNDMap.copy", false]], "copy() (gammapy.maps.labelmapaxis method)": [[198, "gammapy.maps.LabelMapAxis.copy", false]], "copy() (gammapy.maps.map method)": [[199, "gammapy.maps.Map.copy", false]], "copy() (gammapy.maps.mapaxes method)": [[200, "gammapy.maps.MapAxes.copy", false]], "copy() (gammapy.maps.mapaxis method)": [[201, "gammapy.maps.MapAxis.copy", false]], "copy() (gammapy.maps.mapcoord method)": [[202, "gammapy.maps.MapCoord.copy", false]], "copy() (gammapy.maps.regiongeom method)": [[204, "gammapy.maps.RegionGeom.copy", false]], "copy() (gammapy.maps.regionndmap method)": [[205, "gammapy.maps.RegionNDMap.copy", false]], "copy() (gammapy.maps.timemapaxis method)": [[206, "gammapy.maps.TimeMapAxis.copy", false]], "copy() (gammapy.maps.wcsgeom method)": [[207, "gammapy.maps.WcsGeom.copy", false]], "copy() (gammapy.maps.wcsmap method)": [[208, "gammapy.maps.WcsMap.copy", false]], "copy() (gammapy.maps.wcsndmap method)": [[209, "gammapy.maps.WcsNDMap.copy", false]], "copy() (gammapy.modeling.models.brokenpowerlawspectralmodel method)": [[221, "gammapy.modeling.models.BrokenPowerLawSpectralModel.copy", false]], "copy() (gammapy.modeling.models.compoundspectralmodel method)": [[222, "gammapy.modeling.models.CompoundSpectralModel.copy", false]], "copy() (gammapy.modeling.models.constantfluxspatialmodel method)": [[223, "gammapy.modeling.models.ConstantFluxSpatialModel.copy", false]], "copy() (gammapy.modeling.models.constantspatialmodel method)": [[224, "gammapy.modeling.models.ConstantSpatialModel.copy", false]], "copy() (gammapy.modeling.models.constantspectralmodel method)": [[225, "gammapy.modeling.models.ConstantSpectralModel.copy", false]], "copy() (gammapy.modeling.models.constanttemporalmodel method)": [[226, "gammapy.modeling.models.ConstantTemporalModel.copy", false]], "copy() (gammapy.modeling.models.datasetmodels method)": [[227, "gammapy.modeling.models.DatasetModels.copy", false]], "copy() (gammapy.modeling.models.diskspatialmodel method)": [[228, "gammapy.modeling.models.DiskSpatialModel.copy", false]], "copy() (gammapy.modeling.models.eblabsorptionnormspectralmodel method)": [[229, "gammapy.modeling.models.EBLAbsorptionNormSpectralModel.copy", false]], "copy() (gammapy.modeling.models.expcutoffpowerlaw3fglspectralmodel method)": [[231, "gammapy.modeling.models.ExpCutoffPowerLaw3FGLSpectralModel.copy", false]], "copy() (gammapy.modeling.models.expcutoffpowerlawnormspectralmodel method)": [[232, "gammapy.modeling.models.ExpCutoffPowerLawNormSpectralModel.copy", false]], "copy() (gammapy.modeling.models.expcutoffpowerlawspectralmodel method)": [[233, "gammapy.modeling.models.ExpCutoffPowerLawSpectralModel.copy", false]], "copy() (gammapy.modeling.models.expdecaytemporalmodel method)": [[234, "gammapy.modeling.models.ExpDecayTemporalModel.copy", false]], "copy() (gammapy.modeling.models.fovbackgroundmodel method)": [[235, "gammapy.modeling.models.FoVBackgroundModel.copy", false]], "copy() (gammapy.modeling.models.gaussianprior method)": [[236, "gammapy.modeling.models.GaussianPrior.copy", false]], "copy() (gammapy.modeling.models.gaussianspatialmodel method)": [[237, "gammapy.modeling.models.GaussianSpatialModel.copy", false]], "copy() (gammapy.modeling.models.gaussianspectralmodel method)": [[238, "gammapy.modeling.models.GaussianSpectralModel.copy", false]], "copy() (gammapy.modeling.models.gaussiantemporalmodel method)": [[239, "gammapy.modeling.models.GaussianTemporalModel.copy", false]], "copy() (gammapy.modeling.models.generalizedgaussianspatialmodel method)": [[240, "gammapy.modeling.models.GeneralizedGaussianSpatialModel.copy", false]], "copy() (gammapy.modeling.models.generalizedgaussiantemporalmodel method)": [[241, "gammapy.modeling.models.GeneralizedGaussianTemporalModel.copy", false]], "copy() (gammapy.modeling.models.lightcurvetemplatetemporalmodel method)": [[242, "gammapy.modeling.models.LightCurveTemplateTemporalModel.copy", false]], "copy() (gammapy.modeling.models.lineartemporalmodel method)": [[243, "gammapy.modeling.models.LinearTemporalModel.copy", false]], "copy() (gammapy.modeling.models.logparabolanormspectralmodel method)": [[244, "gammapy.modeling.models.LogParabolaNormSpectralModel.copy", false]], "copy() (gammapy.modeling.models.logparabolaspectralmodel method)": [[245, "gammapy.modeling.models.LogParabolaSpectralModel.copy", false]], "copy() (gammapy.modeling.models.loguniformprior method)": [[246, "gammapy.modeling.models.LogUniformPrior.copy", false]], "copy() (gammapy.modeling.models.meyercrabspectralmodel method)": [[248, "gammapy.modeling.models.MeyerCrabSpectralModel.copy", false]], "copy() (gammapy.modeling.models.modelbase method)": [[250, "gammapy.modeling.models.ModelBase.copy", false]], "copy() (gammapy.modeling.models.models method)": [[251, "gammapy.modeling.models.Models.copy", false]], "copy() (gammapy.modeling.models.naimaspectralmodel method)": [[252, "gammapy.modeling.models.NaimaSpectralModel.copy", false]], "copy() (gammapy.modeling.models.piecewisenormspatialmodel method)": [[253, "gammapy.modeling.models.PiecewiseNormSpatialModel.copy", false]], "copy() (gammapy.modeling.models.piecewisenormspectralmodel method)": [[254, "gammapy.modeling.models.PiecewiseNormSpectralModel.copy", false]], "copy() (gammapy.modeling.models.pointspatialmodel method)": [[255, "gammapy.modeling.models.PointSpatialModel.copy", false]], "copy() (gammapy.modeling.models.powerlaw2spectralmodel method)": [[256, "gammapy.modeling.models.PowerLaw2SpectralModel.copy", false]], "copy() (gammapy.modeling.models.powerlawnormspectralmodel method)": [[257, "gammapy.modeling.models.PowerLawNormSpectralModel.copy", false]], "copy() (gammapy.modeling.models.powerlawspectralmodel method)": [[258, "gammapy.modeling.models.PowerLawSpectralModel.copy", false]], "copy() (gammapy.modeling.models.powerlawtemporalmodel method)": [[259, "gammapy.modeling.models.PowerLawTemporalModel.copy", false]], "copy() (gammapy.modeling.models.prior method)": [[260, "gammapy.modeling.models.Prior.copy", false]], "copy() (gammapy.modeling.models.scalespectralmodel method)": [[263, "gammapy.modeling.models.ScaleSpectralModel.copy", false]], "copy() (gammapy.modeling.models.shell2spatialmodel method)": [[264, "gammapy.modeling.models.Shell2SpatialModel.copy", false]], "copy() (gammapy.modeling.models.shellspatialmodel method)": [[265, "gammapy.modeling.models.ShellSpatialModel.copy", false]], "copy() (gammapy.modeling.models.sinetemporalmodel method)": [[266, "gammapy.modeling.models.SineTemporalModel.copy", false]], "copy() (gammapy.modeling.models.skymodel method)": [[267, "gammapy.modeling.models.SkyModel.copy", false]], "copy() (gammapy.modeling.models.smoothbrokenpowerlawspectralmodel method)": [[268, "gammapy.modeling.models.SmoothBrokenPowerLawSpectralModel.copy", false]], "copy() (gammapy.modeling.models.spatialmodel method)": [[269, "gammapy.modeling.models.SpatialModel.copy", false]], "copy() (gammapy.modeling.models.spectralmodel method)": [[270, "gammapy.modeling.models.SpectralModel.copy", false]], "copy() (gammapy.modeling.models.superexpcutoffpowerlaw3fglspectralmodel method)": [[271, "gammapy.modeling.models.SuperExpCutoffPowerLaw3FGLSpectralModel.copy", false]], "copy() (gammapy.modeling.models.superexpcutoffpowerlaw4fgldr3spectralmodel method)": [[272, "gammapy.modeling.models.SuperExpCutoffPowerLaw4FGLDR3SpectralModel.copy", false]], "copy() (gammapy.modeling.models.superexpcutoffpowerlaw4fglspectralmodel method)": [[273, "gammapy.modeling.models.SuperExpCutoffPowerLaw4FGLSpectralModel.copy", false]], "copy() (gammapy.modeling.models.templatendspatialmodel method)": [[275, "gammapy.modeling.models.TemplateNDSpatialModel.copy", false]], "copy() (gammapy.modeling.models.templatendspectralmodel method)": [[276, "gammapy.modeling.models.TemplateNDSpectralModel.copy", false]], "copy() (gammapy.modeling.models.templatenpredmodel method)": [[277, "gammapy.modeling.models.TemplateNPredModel.copy", false]], "copy() (gammapy.modeling.models.templatephasecurvetemporalmodel method)": [[278, "gammapy.modeling.models.TemplatePhaseCurveTemporalModel.copy", false]], "copy() (gammapy.modeling.models.templatespatialmodel method)": [[279, "gammapy.modeling.models.TemplateSpatialModel.copy", false]], "copy() (gammapy.modeling.models.templatespectralmodel method)": [[280, "gammapy.modeling.models.TemplateSpectralModel.copy", false]], "copy() (gammapy.modeling.models.temporalmodel method)": [[281, "gammapy.modeling.models.TemporalModel.copy", false]], "copy() (gammapy.modeling.models.uniformprior method)": [[282, "gammapy.modeling.models.UniformPrior.copy", false]], "copy() (gammapy.modeling.parameter method)": [[217, "gammapy.modeling.Parameter.copy", false]], "copy() (gammapy.modeling.parameters method)": [[218, "gammapy.modeling.Parameters.copy", false]], "copy() (gammapy.modeling.priorparameter method)": [[219, "gammapy.modeling.PriorParameter.copy", false]], "copy() (gammapy.modeling.priorparameters method)": [[220, "gammapy.modeling.PriorParameters.copy", false]], "copy_obs() (gammapy.data.datastore method)": [[82, "gammapy.data.DataStore.copy_obs", false]], "correlation (gammapy.modeling.covariance attribute)": [[212, "gammapy.modeling.Covariance.correlation", false]], "correlation_radius (gammapy.estimators.excessmapestimator attribute)": [[124, "gammapy.estimators.ExcessMapEstimator.correlation_radius", false]], "count() (gammapy.data.observations method)": [[92, "gammapy.data.Observations.count", false]], "count() (gammapy.datasets.datasets method)": [[100, "gammapy.datasets.Datasets.count", false]], "count() (gammapy.maps.mapaxes method)": [[200, "gammapy.maps.MapAxes.count", false]], "count() (gammapy.modeling.models.datasetmodels method)": [[227, "gammapy.modeling.models.DatasetModels.count", false]], "count() (gammapy.modeling.models.models method)": [[251, "gammapy.modeling.models.Models.count", false]], "count() (gammapy.modeling.parameters method)": [[218, "gammapy.modeling.Parameters.count", false]], "count() (gammapy.modeling.priorparameters method)": [[220, "gammapy.modeling.PriorParameters.count", false]], "counts (gammapy.datasets.mapdataset attribute)": [[103, "gammapy.datasets.MapDataset.counts", false]], "counts (gammapy.datasets.mapdatasetonoff attribute)": [[106, "gammapy.datasets.MapDatasetOnOff.counts", false]], "counts (gammapy.datasets.spectrumdataset attribute)": [[110, "gammapy.datasets.SpectrumDataset.counts", false]], "counts (gammapy.datasets.spectrumdatasetonoff attribute)": [[111, "gammapy.datasets.SpectrumDatasetOnOff.counts", false]], "counts (gammapy.estimators.fluxmaps attribute)": [[125, "gammapy.estimators.FluxMaps.counts", false]], "counts (gammapy.estimators.fluxpoints attribute)": [[127, "gammapy.estimators.FluxPoints.counts", false]], "cov_matrix (gammapy.astro.population.casebattacharya1998 attribute)": [[28, "gammapy.astro.population.CaseBattacharya1998.cov_matrix", false]], "cov_matrix (gammapy.astro.population.exponential attribute)": [[29, "gammapy.astro.population.Exponential.cov_matrix", false]], "cov_matrix (gammapy.astro.population.faucherkaspi2006 attribute)": [[30, "gammapy.astro.population.FaucherKaspi2006.cov_matrix", false]], "cov_matrix (gammapy.astro.population.faucherkaspi2006velocitybimodal attribute)": [[31, "gammapy.astro.population.FaucherKaspi2006VelocityBimodal.cov_matrix", false]], "cov_matrix (gammapy.astro.population.faucherkaspi2006velocitymaxwellian attribute)": [[32, "gammapy.astro.population.FaucherKaspi2006VelocityMaxwellian.cov_matrix", false]], "cov_matrix (gammapy.astro.population.lorimer2006 attribute)": [[35, "gammapy.astro.population.Lorimer2006.cov_matrix", false]], "cov_matrix (gammapy.astro.population.paczynski1990 attribute)": [[36, "gammapy.astro.population.Paczynski1990.cov_matrix", false]], "cov_matrix (gammapy.astro.population.paczynski1990velocity attribute)": [[37, "gammapy.astro.population.Paczynski1990Velocity.cov_matrix", false]], "cov_matrix (gammapy.astro.population.yusifovkucuk2004 attribute)": [[39, "gammapy.astro.population.YusifovKucuk2004.cov_matrix", false]], "cov_matrix (gammapy.astro.population.yusifovkucuk2004b attribute)": [[40, "gammapy.astro.population.YusifovKucuk2004B.cov_matrix", false]], "covariance (class in gammapy.modeling)": [[212, "gammapy.modeling.Covariance", false]], "covariance (gammapy.astro.darkmatter.darkmatterannihilationspectralmodel attribute)": [[19, "gammapy.astro.darkmatter.DarkMatterAnnihilationSpectralModel.covariance", false]], "covariance (gammapy.astro.darkmatter.darkmatterdecayspectralmodel attribute)": [[20, "gammapy.astro.darkmatter.DarkMatterDecaySpectralModel.covariance", false]], "covariance (gammapy.astro.darkmatter.primaryflux attribute)": [[26, "gammapy.astro.darkmatter.PrimaryFlux.covariance", false]], "covariance (gammapy.modeling.models.brokenpowerlawspectralmodel attribute)": [[221, "gammapy.modeling.models.BrokenPowerLawSpectralModel.covariance", false]], "covariance (gammapy.modeling.models.compoundspectralmodel attribute)": [[222, "gammapy.modeling.models.CompoundSpectralModel.covariance", false]], "covariance (gammapy.modeling.models.constantfluxspatialmodel attribute)": [[223, "gammapy.modeling.models.ConstantFluxSpatialModel.covariance", false]], "covariance (gammapy.modeling.models.constantspatialmodel attribute)": [[224, "gammapy.modeling.models.ConstantSpatialModel.covariance", false]], "covariance (gammapy.modeling.models.constantspectralmodel attribute)": [[225, "gammapy.modeling.models.ConstantSpectralModel.covariance", false]], "covariance (gammapy.modeling.models.constanttemporalmodel attribute)": [[226, "gammapy.modeling.models.ConstantTemporalModel.covariance", false]], "covariance (gammapy.modeling.models.datasetmodels attribute)": [[227, "gammapy.modeling.models.DatasetModels.covariance", false]], "covariance (gammapy.modeling.models.diskspatialmodel attribute)": [[228, "gammapy.modeling.models.DiskSpatialModel.covariance", false]], "covariance (gammapy.modeling.models.eblabsorptionnormspectralmodel attribute)": [[229, "gammapy.modeling.models.EBLAbsorptionNormSpectralModel.covariance", false]], "covariance (gammapy.modeling.models.expcutoffpowerlaw3fglspectralmodel attribute)": [[231, "gammapy.modeling.models.ExpCutoffPowerLaw3FGLSpectralModel.covariance", false]], "covariance (gammapy.modeling.models.expcutoffpowerlawnormspectralmodel attribute)": [[232, "gammapy.modeling.models.ExpCutoffPowerLawNormSpectralModel.covariance", false]], "covariance (gammapy.modeling.models.expcutoffpowerlawspectralmodel attribute)": [[233, "gammapy.modeling.models.ExpCutoffPowerLawSpectralModel.covariance", false]], "covariance (gammapy.modeling.models.expdecaytemporalmodel attribute)": [[234, "gammapy.modeling.models.ExpDecayTemporalModel.covariance", false]], "covariance (gammapy.modeling.models.fovbackgroundmodel attribute)": [[235, "gammapy.modeling.models.FoVBackgroundModel.covariance", false]], "covariance (gammapy.modeling.models.gaussianprior attribute)": [[236, "gammapy.modeling.models.GaussianPrior.covariance", false]], "covariance (gammapy.modeling.models.gaussianspatialmodel attribute)": [[237, "gammapy.modeling.models.GaussianSpatialModel.covariance", false]], "covariance (gammapy.modeling.models.gaussianspectralmodel attribute)": [[238, "gammapy.modeling.models.GaussianSpectralModel.covariance", false]], "covariance (gammapy.modeling.models.gaussiantemporalmodel attribute)": [[239, "gammapy.modeling.models.GaussianTemporalModel.covariance", false]], "covariance (gammapy.modeling.models.generalizedgaussianspatialmodel attribute)": [[240, "gammapy.modeling.models.GeneralizedGaussianSpatialModel.covariance", false]], "covariance (gammapy.modeling.models.generalizedgaussiantemporalmodel attribute)": [[241, "gammapy.modeling.models.GeneralizedGaussianTemporalModel.covariance", false]], "covariance (gammapy.modeling.models.lightcurvetemplatetemporalmodel attribute)": [[242, "gammapy.modeling.models.LightCurveTemplateTemporalModel.covariance", false]], "covariance (gammapy.modeling.models.lineartemporalmodel attribute)": [[243, "gammapy.modeling.models.LinearTemporalModel.covariance", false]], "covariance (gammapy.modeling.models.logparabolanormspectralmodel attribute)": [[244, "gammapy.modeling.models.LogParabolaNormSpectralModel.covariance", false]], "covariance (gammapy.modeling.models.logparabolaspectralmodel attribute)": [[245, "gammapy.modeling.models.LogParabolaSpectralModel.covariance", false]], "covariance (gammapy.modeling.models.loguniformprior attribute)": [[246, "gammapy.modeling.models.LogUniformPrior.covariance", false]], "covariance (gammapy.modeling.models.meyercrabspectralmodel attribute)": [[248, "gammapy.modeling.models.MeyerCrabSpectralModel.covariance", false]], "covariance (gammapy.modeling.models.modelbase attribute)": [[250, "gammapy.modeling.models.ModelBase.covariance", false]], "covariance (gammapy.modeling.models.models attribute)": [[251, "gammapy.modeling.models.Models.covariance", false]], "covariance (gammapy.modeling.models.naimaspectralmodel attribute)": [[252, "gammapy.modeling.models.NaimaSpectralModel.covariance", false]], "covariance (gammapy.modeling.models.piecewisenormspatialmodel attribute)": [[253, "gammapy.modeling.models.PiecewiseNormSpatialModel.covariance", false]], "covariance (gammapy.modeling.models.piecewisenormspectralmodel attribute)": [[254, "gammapy.modeling.models.PiecewiseNormSpectralModel.covariance", false]], "covariance (gammapy.modeling.models.pointspatialmodel attribute)": [[255, "gammapy.modeling.models.PointSpatialModel.covariance", false]], "covariance (gammapy.modeling.models.powerlaw2spectralmodel attribute)": [[256, "gammapy.modeling.models.PowerLaw2SpectralModel.covariance", false]], "covariance (gammapy.modeling.models.powerlawnormspectralmodel attribute)": [[257, "gammapy.modeling.models.PowerLawNormSpectralModel.covariance", false]], "covariance (gammapy.modeling.models.powerlawspectralmodel attribute)": [[258, "gammapy.modeling.models.PowerLawSpectralModel.covariance", false]], "covariance (gammapy.modeling.models.powerlawtemporalmodel attribute)": [[259, "gammapy.modeling.models.PowerLawTemporalModel.covariance", false]], "covariance (gammapy.modeling.models.prior attribute)": [[260, "gammapy.modeling.models.Prior.covariance", false]], "covariance (gammapy.modeling.models.scalespectralmodel attribute)": [[263, "gammapy.modeling.models.ScaleSpectralModel.covariance", false]], "covariance (gammapy.modeling.models.shell2spatialmodel attribute)": [[264, "gammapy.modeling.models.Shell2SpatialModel.covariance", false]], "covariance (gammapy.modeling.models.shellspatialmodel attribute)": [[265, "gammapy.modeling.models.ShellSpatialModel.covariance", false]], "covariance (gammapy.modeling.models.sinetemporalmodel attribute)": [[266, "gammapy.modeling.models.SineTemporalModel.covariance", false]], "covariance (gammapy.modeling.models.skymodel attribute)": [[267, "gammapy.modeling.models.SkyModel.covariance", false]], "covariance (gammapy.modeling.models.smoothbrokenpowerlawspectralmodel attribute)": [[268, "gammapy.modeling.models.SmoothBrokenPowerLawSpectralModel.covariance", false]], "covariance (gammapy.modeling.models.spatialmodel attribute)": [[269, "gammapy.modeling.models.SpatialModel.covariance", false]], "covariance (gammapy.modeling.models.spectralmodel attribute)": [[270, "gammapy.modeling.models.SpectralModel.covariance", false]], "covariance (gammapy.modeling.models.superexpcutoffpowerlaw3fglspectralmodel attribute)": [[271, "gammapy.modeling.models.SuperExpCutoffPowerLaw3FGLSpectralModel.covariance", false]], "covariance (gammapy.modeling.models.superexpcutoffpowerlaw4fgldr3spectralmodel attribute)": [[272, "gammapy.modeling.models.SuperExpCutoffPowerLaw4FGLDR3SpectralModel.covariance", false]], "covariance (gammapy.modeling.models.superexpcutoffpowerlaw4fglspectralmodel attribute)": [[273, "gammapy.modeling.models.SuperExpCutoffPowerLaw4FGLSpectralModel.covariance", false]], "covariance (gammapy.modeling.models.templatendspatialmodel attribute)": [[275, "gammapy.modeling.models.TemplateNDSpatialModel.covariance", false]], "covariance (gammapy.modeling.models.templatendspectralmodel attribute)": [[276, "gammapy.modeling.models.TemplateNDSpectralModel.covariance", false]], "covariance (gammapy.modeling.models.templatenpredmodel attribute)": [[277, "gammapy.modeling.models.TemplateNPredModel.covariance", false]], "covariance (gammapy.modeling.models.templatephasecurvetemporalmodel attribute)": [[278, "gammapy.modeling.models.TemplatePhaseCurveTemporalModel.covariance", false]], "covariance (gammapy.modeling.models.templatespatialmodel attribute)": [[279, "gammapy.modeling.models.TemplateSpatialModel.covariance", false]], "covariance (gammapy.modeling.models.templatespectralmodel attribute)": [[280, "gammapy.modeling.models.TemplateSpectralModel.covariance", false]], "covariance (gammapy.modeling.models.temporalmodel attribute)": [[281, "gammapy.modeling.models.TemporalModel.covariance", false]], "covariance (gammapy.modeling.models.uniformprior attribute)": [[282, "gammapy.modeling.models.UniformPrior.covariance", false]], "covariance() (gammapy.modeling.fit method)": [[214, "gammapy.modeling.Fit.covariance", false]], "covariance_result (gammapy.modeling.fitresult attribute)": [[215, "gammapy.modeling.FitResult.covariance_result", false]], "covarianceresult (class in gammapy.modeling)": [[213, "gammapy.modeling.CovarianceResult", false]], "create() (gammapy.data.gti class method)": [[86, "gammapy.data.GTI.create", false]], "create() (gammapy.data.observation class method)": [[88, "gammapy.data.Observation.create", false]], "create() (gammapy.datasets.mapdataset class method)": [[103, "gammapy.datasets.MapDataset.create", false]], "create() (gammapy.datasets.mapdatasetonoff class method)": [[106, "gammapy.datasets.MapDatasetOnOff.create", false]], "create() (gammapy.datasets.spectrumdataset class method)": [[110, "gammapy.datasets.SpectrumDataset.create", false]], "create() (gammapy.datasets.spectrumdatasetonoff class method)": [[111, "gammapy.datasets.SpectrumDatasetOnOff.create", false]], "create() (gammapy.maps.hpxgeom class method)": [[195, "gammapy.maps.HpxGeom.create", false]], "create() (gammapy.maps.hpxmap class method)": [[196, "gammapy.maps.HpxMap.create", false]], "create() (gammapy.maps.hpxndmap class method)": [[197, "gammapy.maps.HpxNDMap.create", false]], "create() (gammapy.maps.map static method)": [[199, "gammapy.maps.Map.create", false]], "create() (gammapy.maps.mapcoord class method)": [[202, "gammapy.maps.MapCoord.create", false]], "create() (gammapy.maps.regiongeom class method)": [[204, "gammapy.maps.RegionGeom.create", false]], "create() (gammapy.maps.regionndmap class method)": [[205, "gammapy.maps.RegionNDMap.create", false]], "create() (gammapy.maps.wcsgeom class method)": [[207, "gammapy.maps.WcsGeom.create", false]], "create() (gammapy.maps.wcsmap class method)": [[208, "gammapy.maps.WcsMap.create", false]], "create() (gammapy.maps.wcsndmap class method)": [[209, "gammapy.maps.WcsNDMap.create", false]], "create() (gammapy.modeling.models.model static method)": [[249, "gammapy.modeling.models.Model.create", false]], "create() (gammapy.modeling.models.skymodel class method)": [[267, "gammapy.modeling.models.SkyModel.create", false]], "create_cosmic_ray_spectral_model() (in module gammapy.modeling.models)": [[283, "gammapy.modeling.models.create_cosmic_ray_spectral_model", false]], "create_crab_spectral_model() (in module gammapy.modeling.models)": [[284, "gammapy.modeling.models.create_crab_spectral_model", false]], "create_dataset() (gammapy.datasets.fermipydatasetsreader static method)": [[101, "gammapy.datasets.FermipyDatasetsReader.create_dataset", false]], "create_empty_map_dataset_from_irfs() (in module gammapy.datasets)": [[113, "gammapy.datasets.create_empty_map_dataset_from_irfs", false]], "create_fermi_isotropic_diffuse_model() (in module gammapy.modeling.models)": [[285, "gammapy.modeling.models.create_fermi_isotropic_diffuse_model", false]], "create_map_dataset_from_dl4() (in module gammapy.datasets.utils)": [[118, "gammapy.datasets.utils.create_map_dataset_from_dl4", false]], "create_map_dataset_from_observation() (in module gammapy.datasets)": [[114, "gammapy.datasets.create_map_dataset_from_observation", false]], "create_map_dataset_geoms() (in module gammapy.datasets)": [[115, "gammapy.datasets.create_map_dataset_geoms", false]], "create_mask() (gammapy.maps.geom method)": [[194, "gammapy.maps.Geom.create_mask", false]], "create_mask() (gammapy.maps.hpxgeom method)": [[195, "gammapy.maps.HpxGeom.create_mask", false]], "create_mask() (gammapy.maps.regiongeom method)": [[204, "gammapy.maps.RegionGeom.create_mask", false]], "create_mask() (gammapy.maps.wcsgeom method)": [[207, "gammapy.maps.WcsGeom.create_mask", false]], "crop() (gammapy.maps.geom method)": [[194, "gammapy.maps.Geom.crop", false]], "crop() (gammapy.maps.hpxgeom method)": [[195, "gammapy.maps.HpxGeom.crop", false]], "crop() (gammapy.maps.hpxmap method)": [[196, "gammapy.maps.HpxMap.crop", false]], "crop() (gammapy.maps.hpxndmap method)": [[197, "gammapy.maps.HpxNDMap.crop", false]], "crop() (gammapy.maps.map method)": [[199, "gammapy.maps.Map.crop", false]], "crop() (gammapy.maps.regiongeom method)": [[204, "gammapy.maps.RegionGeom.crop", false]], "crop() (gammapy.maps.regionndmap method)": [[205, "gammapy.maps.RegionNDMap.crop", false]], "crop() (gammapy.maps.wcsgeom method)": [[207, "gammapy.maps.WcsGeom.crop", false]], "crop() (gammapy.maps.wcsmap method)": [[208, "gammapy.maps.WcsMap.crop", false]], "crop() (gammapy.maps.wcsndmap method)": [[209, "gammapy.maps.WcsNDMap.crop", false]], "cstat() (in module gammapy.stats)": [[301, "gammapy.stats.cstat", false]], "cumsum() (gammapy.irf.background2d method)": [[150, "gammapy.irf.Background2D.cumsum", false]], "cumsum() (gammapy.irf.background3d method)": [[151, "gammapy.irf.Background3D.cumsum", false]], "cumsum() (gammapy.irf.backgroundirf method)": [[152, "gammapy.irf.BackgroundIRF.cumsum", false]], "cumsum() (gammapy.irf.edispkernel method)": [[153, "gammapy.irf.EDispKernel.cumsum", false]], "cumsum() (gammapy.irf.effectiveareatable2d method)": [[156, "gammapy.irf.EffectiveAreaTable2D.cumsum", false]], "cumsum() (gammapy.irf.energydependentmultigausspsf method)": [[157, "gammapy.irf.EnergyDependentMultiGaussPSF.cumsum", false]], "cumsum() (gammapy.irf.energydispersion2d method)": [[158, "gammapy.irf.EnergyDispersion2D.cumsum", false]], "cumsum() (gammapy.irf.irf method)": [[160, "gammapy.irf.IRF.cumsum", false]], "cumsum() (gammapy.irf.parametricpsf method)": [[167, "gammapy.irf.ParametricPSF.cumsum", false]], "cumsum() (gammapy.irf.psf3d method)": [[163, "gammapy.irf.PSF3D.cumsum", false]], "cumsum() (gammapy.irf.psfking method)": [[165, "gammapy.irf.PSFKing.cumsum", false]], "cumsum() (gammapy.irf.radmax2d method)": [[168, "gammapy.irf.RadMax2D.cumsum", false]], "cumsum() (gammapy.maps.hpxmap method)": [[196, "gammapy.maps.HpxMap.cumsum", false]], "cumsum() (gammapy.maps.hpxndmap method)": [[197, "gammapy.maps.HpxNDMap.cumsum", false]], "cumsum() (gammapy.maps.map method)": [[199, "gammapy.maps.Map.cumsum", false]], "cumsum() (gammapy.maps.regionndmap method)": [[205, "gammapy.maps.RegionNDMap.cumsum", false]], "cumsum() (gammapy.maps.wcsmap method)": [[208, "gammapy.maps.WcsMap.cumsum", false]], "cumsum() (gammapy.maps.wcsndmap method)": [[209, "gammapy.maps.WcsNDMap.cumsum", false]], "cutout() (gammapy.datasets.mapdataset method)": [[103, "gammapy.datasets.MapDataset.cutout", false]], "cutout() (gammapy.datasets.mapdatasetonoff method)": [[106, "gammapy.datasets.MapDatasetOnOff.cutout", false]], "cutout() (gammapy.datasets.spectrumdataset method)": [[110, "gammapy.datasets.SpectrumDataset.cutout", false]], "cutout() (gammapy.datasets.spectrumdatasetonoff method)": [[111, "gammapy.datasets.SpectrumDatasetOnOff.cutout", false]], "cutout() (gammapy.irf.edispkernelmap method)": [[154, "gammapy.irf.EDispKernelMap.cutout", false]], "cutout() (gammapy.irf.edispmap method)": [[155, "gammapy.irf.EDispMap.cutout", false]], "cutout() (gammapy.irf.irfmap method)": [[161, "gammapy.irf.IRFMap.cutout", false]], "cutout() (gammapy.irf.psfmap method)": [[166, "gammapy.irf.PSFMap.cutout", false]], "cutout() (gammapy.irf.recopsfmap method)": [[169, "gammapy.irf.RecoPSFMap.cutout", false]], "cutout() (gammapy.maps.hpxgeom method)": [[195, "gammapy.maps.HpxGeom.cutout", false]], "cutout() (gammapy.maps.hpxndmap method)": [[197, "gammapy.maps.HpxNDMap.cutout", false]], "cutout() (gammapy.maps.regionndmap method)": [[205, "gammapy.maps.RegionNDMap.cutout", false]], "cutout() (gammapy.maps.wcsgeom method)": [[207, "gammapy.maps.WcsGeom.cutout", false]], "cutout() (gammapy.maps.wcsndmap method)": [[209, "gammapy.maps.WcsNDMap.cutout", false]], "cutout() (gammapy.modeling.models.templatenpredmodel method)": [[277, "gammapy.modeling.models.TemplateNPredModel.cutout", false]], "cutout_and_mask_region() (gammapy.maps.wcsndmap method)": [[209, "gammapy.maps.WcsNDMap.cutout_and_mask_region", false]], "cutout_slices() (gammapy.maps.wcsgeom method)": [[207, "gammapy.maps.WcsGeom.cutout_slices", false]], "d_sun_to_galactic_center (in module gammapy.utils.coordinates)": [[314, "gammapy.utils.coordinates.D_SUN_TO_GALACTIC_CENTER", false]], "darkmatterannihilationspectralmodel (class in gammapy.astro.darkmatter)": [[19, "gammapy.astro.darkmatter.DarkMatterAnnihilationSpectralModel", false]], "darkmatterdecayspectralmodel (class in gammapy.astro.darkmatter)": [[20, "gammapy.astro.darkmatter.DarkMatterDecaySpectralModel", false]], "data (gammapy.irf.background2d attribute)": [[150, "gammapy.irf.Background2D.data", false]], "data (gammapy.irf.background3d attribute)": [[151, "gammapy.irf.Background3D.data", false]], "data (gammapy.irf.backgroundirf attribute)": [[152, "gammapy.irf.BackgroundIRF.data", false]], "data (gammapy.irf.edispkernel attribute)": [[153, "gammapy.irf.EDispKernel.data", false]], "data (gammapy.irf.effectiveareatable2d attribute)": [[156, "gammapy.irf.EffectiveAreaTable2D.data", false]], "data (gammapy.irf.energydependentmultigausspsf attribute)": [[157, "gammapy.irf.EnergyDependentMultiGaussPSF.data", false]], "data (gammapy.irf.energydispersion2d attribute)": [[158, "gammapy.irf.EnergyDispersion2D.data", false]], "data (gammapy.irf.irf attribute)": [[160, "gammapy.irf.IRF.data", false]], "data (gammapy.irf.parametricpsf attribute)": [[167, "gammapy.irf.ParametricPSF.data", false]], "data (gammapy.irf.psf3d attribute)": [[163, "gammapy.irf.PSF3D.data", false]], "data (gammapy.irf.psfkernel attribute)": [[164, "gammapy.irf.PSFKernel.data", false]], "data (gammapy.irf.psfking attribute)": [[165, "gammapy.irf.PSFKing.data", false]], "data (gammapy.irf.radmax2d attribute)": [[168, "gammapy.irf.RadMax2D.data", false]], "data (gammapy.maps.hpxmap attribute)": [[196, "gammapy.maps.HpxMap.data", false]], "data (gammapy.maps.hpxndmap attribute)": [[197, "gammapy.maps.HpxNDMap.data", false]], "data (gammapy.maps.map attribute)": [[199, "gammapy.maps.Map.data", false]], "data (gammapy.maps.regionndmap attribute)": [[205, "gammapy.maps.RegionNDMap.data", false]], "data (gammapy.maps.wcsmap attribute)": [[208, "gammapy.maps.WcsMap.data", false]], "data (gammapy.maps.wcsndmap attribute)": [[209, "gammapy.maps.WcsNDMap.data", false]], "data (gammapy.modeling.covariance attribute)": [[212, "gammapy.modeling.Covariance.data", false]], "data_nbytes() (gammapy.maps.geom method)": [[194, "gammapy.maps.Geom.data_nbytes", false]], "data_nbytes() (gammapy.maps.hpxgeom method)": [[195, "gammapy.maps.HpxGeom.data_nbytes", false]], "data_nbytes() (gammapy.maps.regiongeom method)": [[204, "gammapy.maps.RegionGeom.data_nbytes", false]], "data_nbytes() (gammapy.maps.wcsgeom method)": [[207, "gammapy.maps.WcsGeom.data_nbytes", false]], "data_shape (gammapy.datasets.mapdataset attribute)": [[103, "gammapy.datasets.MapDataset.data_shape", false]], "data_shape (gammapy.datasets.mapdatasetonoff attribute)": [[106, "gammapy.datasets.MapDatasetOnOff.data_shape", false]], "data_shape (gammapy.datasets.spectrumdataset attribute)": [[110, "gammapy.datasets.SpectrumDataset.data_shape", false]], "data_shape (gammapy.datasets.spectrumdatasetonoff attribute)": [[111, "gammapy.datasets.SpectrumDatasetOnOff.data_shape", false]], "data_shape (gammapy.maps.geom attribute)": [[194, "gammapy.maps.Geom.data_shape", false]], "data_shape (gammapy.maps.hpxgeom attribute)": [[195, "gammapy.maps.HpxGeom.data_shape", false]], "data_shape (gammapy.maps.regiongeom attribute)": [[204, "gammapy.maps.RegionGeom.data_shape", false]], "data_shape (gammapy.maps.wcsgeom attribute)": [[207, "gammapy.maps.WcsGeom.data_shape", false]], "data_shape() (gammapy.datasets.fluxpointsdataset method)": [[102, "gammapy.datasets.FluxPointsDataset.data_shape", false]], "data_shape_axes (gammapy.maps.hpxgeom attribute)": [[195, "gammapy.maps.HpxGeom.data_shape_axes", false]], "data_shape_axes (gammapy.maps.regiongeom attribute)": [[204, "gammapy.maps.RegionGeom.data_shape_axes", false]], "data_shape_axes (gammapy.maps.wcsgeom attribute)": [[207, "gammapy.maps.WcsGeom.data_shape_axes", false]], "data_shape_image (gammapy.maps.wcsgeom attribute)": [[207, "gammapy.maps.WcsGeom.data_shape_image", false]], "dataset": [[597, "term-Dataset", true]], "dataset (class in gammapy.datasets)": [[99, "gammapy.datasets.Dataset", false]], "dataset_registry (in module gammapy.datasets)": [[98, "gammapy.datasets.DATASET_REGISTRY", false]], "datasetmodels (class in gammapy.modeling.models)": [[227, "gammapy.modeling.models.DatasetModels", false]], "datasets (class in gammapy.datasets)": [[100, "gammapy.datasets.Datasets", false]], "datasetsmaker (class in gammapy.makers)": [[172, "gammapy.makers.DatasetsMaker", false]], "datastore (class in gammapy.data)": [[82, "gammapy.data.DataStore", false]], "deepcopy() (gammapy.astro.population.casebattacharya1998 method)": [[28, "gammapy.astro.population.CaseBattacharya1998.deepcopy", false]], "deepcopy() (gammapy.astro.population.exponential method)": [[29, "gammapy.astro.population.Exponential.deepcopy", false]], "deepcopy() (gammapy.astro.population.faucherkaspi2006 method)": [[30, "gammapy.astro.population.FaucherKaspi2006.deepcopy", false]], "deepcopy() (gammapy.astro.population.faucherkaspi2006velocitybimodal method)": [[31, "gammapy.astro.population.FaucherKaspi2006VelocityBimodal.deepcopy", false]], "deepcopy() (gammapy.astro.population.faucherkaspi2006velocitymaxwellian method)": [[32, "gammapy.astro.population.FaucherKaspi2006VelocityMaxwellian.deepcopy", false]], "deepcopy() (gammapy.astro.population.lorimer2006 method)": [[35, "gammapy.astro.population.Lorimer2006.deepcopy", false]], "deepcopy() (gammapy.astro.population.paczynski1990 method)": [[36, "gammapy.astro.population.Paczynski1990.deepcopy", false]], "deepcopy() (gammapy.astro.population.paczynski1990velocity method)": [[37, "gammapy.astro.population.Paczynski1990Velocity.deepcopy", false]], "deepcopy() (gammapy.astro.population.yusifovkucuk2004 method)": [[39, "gammapy.astro.population.YusifovKucuk2004.deepcopy", false]], "deepcopy() (gammapy.astro.population.yusifovkucuk2004b method)": [[40, "gammapy.astro.population.YusifovKucuk2004B.deepcopy", false]], "default_alpha (gammapy.astro.darkmatter.einastoprofile attribute)": [[21, "gammapy.astro.darkmatter.EinastoProfile.DEFAULT_ALPHA", false]], "default_alpha (gammapy.astro.darkmatter.zhaoprofile attribute)": [[27, "gammapy.astro.darkmatter.ZhaoProfile.DEFAULT_ALPHA", false]], "default_beta (gammapy.astro.darkmatter.zhaoprofile attribute)": [[27, "gammapy.astro.darkmatter.ZhaoProfile.DEFAULT_BETA", false]], "default_gamma (gammapy.astro.darkmatter.zhaoprofile attribute)": [[27, "gammapy.astro.darkmatter.ZhaoProfile.DEFAULT_GAMMA", false]], "default_hdu_table (gammapy.data.datastore attribute)": [[82, "gammapy.data.DataStore.DEFAULT_HDU_TABLE", false]], "default_interp_kwargs (gammapy.irf.background2d attribute)": [[150, "gammapy.irf.Background2D.default_interp_kwargs", false]], "default_interp_kwargs (gammapy.irf.background3d attribute)": [[151, "gammapy.irf.Background3D.default_interp_kwargs", false]], "default_interp_kwargs (gammapy.irf.backgroundirf attribute)": [[152, "gammapy.irf.BackgroundIRF.default_interp_kwargs", false]], "default_interp_kwargs (gammapy.irf.edispkernel attribute)": [[153, "gammapy.irf.EDispKernel.default_interp_kwargs", false]], "default_interp_kwargs (gammapy.irf.effectiveareatable2d attribute)": [[156, "gammapy.irf.EffectiveAreaTable2D.default_interp_kwargs", false]], "default_interp_kwargs (gammapy.irf.energydependentmultigausspsf attribute)": [[157, "gammapy.irf.EnergyDependentMultiGaussPSF.default_interp_kwargs", false]], "default_interp_kwargs (gammapy.irf.energydispersion2d attribute)": [[158, "gammapy.irf.EnergyDispersion2D.default_interp_kwargs", false]], "default_interp_kwargs (gammapy.irf.irf attribute)": [[160, "gammapy.irf.IRF.default_interp_kwargs", false]], "default_interp_kwargs (gammapy.irf.parametricpsf attribute)": [[167, "gammapy.irf.ParametricPSF.default_interp_kwargs", false]], "default_interp_kwargs (gammapy.irf.psf3d attribute)": [[163, "gammapy.irf.PSF3D.default_interp_kwargs", false]], "default_interp_kwargs (gammapy.irf.psfking attribute)": [[165, "gammapy.irf.PSFKing.default_interp_kwargs", false]], "default_interp_kwargs (gammapy.irf.radmax2d attribute)": [[168, "gammapy.irf.RadMax2D.default_interp_kwargs", false]], "default_obs_table (gammapy.data.datastore attribute)": [[82, "gammapy.data.DataStore.DEFAULT_OBS_TABLE", false]], "default_parameters (gammapy.astro.darkmatter.darkmatterannihilationspectralmodel attribute)": [[19, "gammapy.astro.darkmatter.DarkMatterAnnihilationSpectralModel.default_parameters", false]], "default_parameters (gammapy.astro.darkmatter.darkmatterdecayspectralmodel attribute)": [[20, "gammapy.astro.darkmatter.DarkMatterDecaySpectralModel.default_parameters", false]], "default_parameters (gammapy.astro.darkmatter.primaryflux attribute)": [[26, "gammapy.astro.darkmatter.PrimaryFlux.default_parameters", false]], "default_parameters (gammapy.modeling.models.brokenpowerlawspectralmodel attribute)": [[221, "gammapy.modeling.models.BrokenPowerLawSpectralModel.default_parameters", false]], "default_parameters (gammapy.modeling.models.compoundspectralmodel attribute)": [[222, "gammapy.modeling.models.CompoundSpectralModel.default_parameters", false]], "default_parameters (gammapy.modeling.models.constantfluxspatialmodel attribute)": [[223, "gammapy.modeling.models.ConstantFluxSpatialModel.default_parameters", false]], "default_parameters (gammapy.modeling.models.constantspatialmodel attribute)": [[224, "gammapy.modeling.models.ConstantSpatialModel.default_parameters", false]], "default_parameters (gammapy.modeling.models.constantspectralmodel attribute)": [[225, "gammapy.modeling.models.ConstantSpectralModel.default_parameters", false]], "default_parameters (gammapy.modeling.models.constanttemporalmodel attribute)": [[226, "gammapy.modeling.models.ConstantTemporalModel.default_parameters", false]], "default_parameters (gammapy.modeling.models.diskspatialmodel attribute)": [[228, "gammapy.modeling.models.DiskSpatialModel.default_parameters", false]], "default_parameters (gammapy.modeling.models.eblabsorptionnormspectralmodel attribute)": [[229, "gammapy.modeling.models.EBLAbsorptionNormSpectralModel.default_parameters", false]], "default_parameters (gammapy.modeling.models.expcutoffpowerlaw3fglspectralmodel attribute)": [[231, "gammapy.modeling.models.ExpCutoffPowerLaw3FGLSpectralModel.default_parameters", false]], "default_parameters (gammapy.modeling.models.expcutoffpowerlawnormspectralmodel attribute)": [[232, "gammapy.modeling.models.ExpCutoffPowerLawNormSpectralModel.default_parameters", false]], "default_parameters (gammapy.modeling.models.expcutoffpowerlawspectralmodel attribute)": [[233, "gammapy.modeling.models.ExpCutoffPowerLawSpectralModel.default_parameters", false]], "default_parameters (gammapy.modeling.models.expdecaytemporalmodel attribute)": [[234, "gammapy.modeling.models.ExpDecayTemporalModel.default_parameters", false]], "default_parameters (gammapy.modeling.models.fovbackgroundmodel attribute)": [[235, "gammapy.modeling.models.FoVBackgroundModel.default_parameters", false]], "default_parameters (gammapy.modeling.models.gaussianprior attribute)": [[236, "gammapy.modeling.models.GaussianPrior.default_parameters", false]], "default_parameters (gammapy.modeling.models.gaussianspatialmodel attribute)": [[237, "gammapy.modeling.models.GaussianSpatialModel.default_parameters", false]], "default_parameters (gammapy.modeling.models.gaussianspectralmodel attribute)": [[238, "gammapy.modeling.models.GaussianSpectralModel.default_parameters", false]], "default_parameters (gammapy.modeling.models.gaussiantemporalmodel attribute)": [[239, "gammapy.modeling.models.GaussianTemporalModel.default_parameters", false]], "default_parameters (gammapy.modeling.models.generalizedgaussianspatialmodel attribute)": [[240, "gammapy.modeling.models.GeneralizedGaussianSpatialModel.default_parameters", false]], "default_parameters (gammapy.modeling.models.generalizedgaussiantemporalmodel attribute)": [[241, "gammapy.modeling.models.GeneralizedGaussianTemporalModel.default_parameters", false]], "default_parameters (gammapy.modeling.models.lightcurvetemplatetemporalmodel attribute)": [[242, "gammapy.modeling.models.LightCurveTemplateTemporalModel.default_parameters", false]], "default_parameters (gammapy.modeling.models.lineartemporalmodel attribute)": [[243, "gammapy.modeling.models.LinearTemporalModel.default_parameters", false]], "default_parameters (gammapy.modeling.models.logparabolanormspectralmodel attribute)": [[244, "gammapy.modeling.models.LogParabolaNormSpectralModel.default_parameters", false]], "default_parameters (gammapy.modeling.models.logparabolaspectralmodel attribute)": [[245, "gammapy.modeling.models.LogParabolaSpectralModel.default_parameters", false]], "default_parameters (gammapy.modeling.models.loguniformprior attribute)": [[246, "gammapy.modeling.models.LogUniformPrior.default_parameters", false]], "default_parameters (gammapy.modeling.models.meyercrabspectralmodel attribute)": [[248, "gammapy.modeling.models.MeyerCrabSpectralModel.default_parameters", false]], "default_parameters (gammapy.modeling.models.naimaspectralmodel attribute)": [[252, "gammapy.modeling.models.NaimaSpectralModel.default_parameters", false]], "default_parameters (gammapy.modeling.models.piecewisenormspatialmodel attribute)": [[253, "gammapy.modeling.models.PiecewiseNormSpatialModel.default_parameters", false]], "default_parameters (gammapy.modeling.models.piecewisenormspectralmodel attribute)": [[254, "gammapy.modeling.models.PiecewiseNormSpectralModel.default_parameters", false]], "default_parameters (gammapy.modeling.models.pointspatialmodel attribute)": [[255, "gammapy.modeling.models.PointSpatialModel.default_parameters", false]], "default_parameters (gammapy.modeling.models.powerlaw2spectralmodel attribute)": [[256, "gammapy.modeling.models.PowerLaw2SpectralModel.default_parameters", false]], "default_parameters (gammapy.modeling.models.powerlawnormspectralmodel attribute)": [[257, "gammapy.modeling.models.PowerLawNormSpectralModel.default_parameters", false]], "default_parameters (gammapy.modeling.models.powerlawspectralmodel attribute)": [[258, "gammapy.modeling.models.PowerLawSpectralModel.default_parameters", false]], "default_parameters (gammapy.modeling.models.powerlawtemporalmodel attribute)": [[259, "gammapy.modeling.models.PowerLawTemporalModel.default_parameters", false]], "default_parameters (gammapy.modeling.models.prior attribute)": [[260, "gammapy.modeling.models.Prior.default_parameters", false]], "default_parameters (gammapy.modeling.models.scalespectralmodel attribute)": [[263, "gammapy.modeling.models.ScaleSpectralModel.default_parameters", false]], "default_parameters (gammapy.modeling.models.shell2spatialmodel attribute)": [[264, "gammapy.modeling.models.Shell2SpatialModel.default_parameters", false]], "default_parameters (gammapy.modeling.models.shellspatialmodel attribute)": [[265, "gammapy.modeling.models.ShellSpatialModel.default_parameters", false]], "default_parameters (gammapy.modeling.models.sinetemporalmodel attribute)": [[266, "gammapy.modeling.models.SineTemporalModel.default_parameters", false]], "default_parameters (gammapy.modeling.models.skymodel attribute)": [[267, "gammapy.modeling.models.SkyModel.default_parameters", false]], "default_parameters (gammapy.modeling.models.smoothbrokenpowerlawspectralmodel attribute)": [[268, "gammapy.modeling.models.SmoothBrokenPowerLawSpectralModel.default_parameters", false]], "default_parameters (gammapy.modeling.models.spatialmodel attribute)": [[269, "gammapy.modeling.models.SpatialModel.default_parameters", false]], "default_parameters (gammapy.modeling.models.spectralmodel attribute)": [[270, "gammapy.modeling.models.SpectralModel.default_parameters", false]], "default_parameters (gammapy.modeling.models.superexpcutoffpowerlaw3fglspectralmodel attribute)": [[271, "gammapy.modeling.models.SuperExpCutoffPowerLaw3FGLSpectralModel.default_parameters", false]], "default_parameters (gammapy.modeling.models.superexpcutoffpowerlaw4fgldr3spectralmodel attribute)": [[272, "gammapy.modeling.models.SuperExpCutoffPowerLaw4FGLDR3SpectralModel.default_parameters", false]], "default_parameters (gammapy.modeling.models.superexpcutoffpowerlaw4fglspectralmodel attribute)": [[273, "gammapy.modeling.models.SuperExpCutoffPowerLaw4FGLSpectralModel.default_parameters", false]], "default_parameters (gammapy.modeling.models.templatendspatialmodel attribute)": [[275, "gammapy.modeling.models.TemplateNDSpatialModel.default_parameters", false]], "default_parameters (gammapy.modeling.models.templatendspectralmodel attribute)": [[276, "gammapy.modeling.models.TemplateNDSpectralModel.default_parameters", false]], "default_parameters (gammapy.modeling.models.templatenpredmodel attribute)": [[277, "gammapy.modeling.models.TemplateNPredModel.default_parameters", false]], "default_parameters (gammapy.modeling.models.templatephasecurvetemporalmodel attribute)": [[278, "gammapy.modeling.models.TemplatePhaseCurveTemporalModel.default_parameters", false]], "default_parameters (gammapy.modeling.models.templatespatialmodel attribute)": [[279, "gammapy.modeling.models.TemplateSpatialModel.default_parameters", false]], "default_parameters (gammapy.modeling.models.templatespectralmodel attribute)": [[280, "gammapy.modeling.models.TemplateSpectralModel.default_parameters", false]], "default_parameters (gammapy.modeling.models.temporalmodel attribute)": [[281, "gammapy.modeling.models.TemporalModel.default_parameters", false]], "default_parameters (gammapy.modeling.models.uniformprior attribute)": [[282, "gammapy.modeling.models.UniformPrior.default_parameters", false]], "default_scale_radius (gammapy.astro.darkmatter.burkertprofile attribute)": [[17, "gammapy.astro.darkmatter.BurkertProfile.DEFAULT_SCALE_RADIUS", false]], "default_scale_radius (gammapy.astro.darkmatter.einastoprofile attribute)": [[21, "gammapy.astro.darkmatter.EinastoProfile.DEFAULT_SCALE_RADIUS", false]], "default_scale_radius (gammapy.astro.darkmatter.isothermalprofile attribute)": [[22, "gammapy.astro.darkmatter.IsothermalProfile.DEFAULT_SCALE_RADIUS", false]], "default_scale_radius (gammapy.astro.darkmatter.mooreprofile attribute)": [[24, "gammapy.astro.darkmatter.MooreProfile.DEFAULT_SCALE_RADIUS", false]], "default_scale_radius (gammapy.astro.darkmatter.nfwprofile attribute)": [[25, "gammapy.astro.darkmatter.NFWProfile.DEFAULT_SCALE_RADIUS", false]], "default_scale_radius (gammapy.astro.darkmatter.zhaoprofile attribute)": [[27, "gammapy.astro.darkmatter.ZhaoProfile.DEFAULT_SCALE_RADIUS", false]], "default_unit (gammapy.irf.background2d attribute)": [[150, "gammapy.irf.Background2D.default_unit", false]], "default_unit (gammapy.irf.background3d attribute)": [[151, "gammapy.irf.Background3D.default_unit", false]], "default_unit (gammapy.irf.effectiveareatable2d attribute)": [[156, "gammapy.irf.EffectiveAreaTable2D.default_unit", false]], "default_unit (gammapy.irf.energydispersion2d attribute)": [[158, "gammapy.irf.EnergyDispersion2D.default_unit", false]], "default_unit (gammapy.irf.psf3d attribute)": [[163, "gammapy.irf.PSF3D.default_unit", false]], "default_unit (gammapy.irf.radmax2d attribute)": [[168, "gammapy.irf.RadMax2D.default_unit", false]], "delete_interval() (gammapy.data.gti method)": [[86, "gammapy.data.GTI.delete_interval", false]], "description (gammapy.catalog.sourcecatalog1lhaaso attribute)": [[57, "gammapy.catalog.SourceCatalog1LHAASO.description", false]], "description (gammapy.catalog.sourcecatalog2fhl attribute)": [[58, "gammapy.catalog.SourceCatalog2FHL.description", false]], "description (gammapy.catalog.sourcecatalog2hwc attribute)": [[59, "gammapy.catalog.SourceCatalog2HWC.description", false]], "description (gammapy.catalog.sourcecatalog2pc attribute)": [[60, "gammapy.catalog.SourceCatalog2PC.description", false]], "description (gammapy.catalog.sourcecatalog3fgl attribute)": [[61, "gammapy.catalog.SourceCatalog3FGL.description", false]], "description (gammapy.catalog.sourcecatalog3fhl attribute)": [[62, "gammapy.catalog.SourceCatalog3FHL.description", false]], "description (gammapy.catalog.sourcecatalog3hwc attribute)": [[63, "gammapy.catalog.SourceCatalog3HWC.description", false]], "description (gammapy.catalog.sourcecatalog3pc attribute)": [[64, "gammapy.catalog.SourceCatalog3PC.description", false]], "description (gammapy.catalog.sourcecatalog4fgl attribute)": [[65, "gammapy.catalog.SourceCatalog4FGL.description", false]], "description (gammapy.catalog.sourcecataloggammacat attribute)": [[66, "gammapy.catalog.SourceCatalogGammaCat.description", false]], "description (gammapy.catalog.sourcecataloghgps attribute)": [[67, "gammapy.catalog.SourceCatalogHGPS.description", false]], "description() (gammapy.catalog.sourcecatalog class method)": [[56, "gammapy.catalog.SourceCatalog.description", false]], "dict() (gammapy.analysis.analysisconfig method)": [[16, "gammapy.analysis.AnalysisConfig.dict", false]], "dict() (gammapy.data.eventlistmetadata method)": [[84, "gammapy.data.EventListMetaData.dict", false]], "dict() (gammapy.data.observationmetadata method)": [[90, "gammapy.data.ObservationMetaData.dict", false]], "dict() (gammapy.datasets.mapdatasetmetadata method)": [[105, "gammapy.datasets.MapDatasetMetaData.dict", false]], "dict() (gammapy.estimators.fluxmetadata method)": [[126, "gammapy.estimators.FluxMetaData.dict", false]], "discrete_correlation() (in module gammapy.stats)": [[302, "gammapy.stats.discrete_correlation", false]], "diskspatialmodel (class in gammapy.modeling.models)": [[228, "gammapy.modeling.models.DiskSpatialModel", false]], "distance_gc (gammapy.astro.darkmatter.burkertprofile attribute)": [[17, "gammapy.astro.darkmatter.BurkertProfile.DISTANCE_GC", false]], "distance_gc (gammapy.astro.darkmatter.dmprofile attribute)": [[18, "gammapy.astro.darkmatter.DMProfile.DISTANCE_GC", false]], "distance_gc (gammapy.astro.darkmatter.einastoprofile attribute)": [[21, "gammapy.astro.darkmatter.EinastoProfile.DISTANCE_GC", false]], "distance_gc (gammapy.astro.darkmatter.isothermalprofile attribute)": [[22, "gammapy.astro.darkmatter.IsothermalProfile.DISTANCE_GC", false]], "distance_gc (gammapy.astro.darkmatter.mooreprofile attribute)": [[24, "gammapy.astro.darkmatter.MooreProfile.DISTANCE_GC", false]], "distance_gc (gammapy.astro.darkmatter.nfwprofile attribute)": [[25, "gammapy.astro.darkmatter.NFWProfile.DISTANCE_GC", false]], "distance_gc (gammapy.astro.darkmatter.zhaoprofile attribute)": [[27, "gammapy.astro.darkmatter.ZhaoProfile.DISTANCE_GC", false]], "dl3": [[597, "term-DL3", true]], "dl4": [[597, "term-DL4", true]], "dl5": [[597, "term-DL5", true]], "dl6": [[597, "term-DL6", true]], "dmprofile (class in gammapy.astro.darkmatter)": [[18, "gammapy.astro.darkmatter.DMProfile", false]], "dnde (gammapy.estimators.fluxmaps attribute)": [[125, "gammapy.estimators.FluxMaps.dnde", false]], "dnde (gammapy.estimators.fluxpoints attribute)": [[127, "gammapy.estimators.FluxPoints.dnde", false]], "dnde_err (gammapy.estimators.fluxmaps attribute)": [[125, "gammapy.estimators.FluxMaps.dnde_err", false]], "dnde_err (gammapy.estimators.fluxpoints attribute)": [[127, "gammapy.estimators.FluxPoints.dnde_err", false]], "dnde_errn (gammapy.estimators.fluxmaps attribute)": [[125, "gammapy.estimators.FluxMaps.dnde_errn", false]], "dnde_errn (gammapy.estimators.fluxpoints attribute)": [[127, "gammapy.estimators.FluxPoints.dnde_errn", false]], "dnde_errp (gammapy.estimators.fluxmaps attribute)": [[125, "gammapy.estimators.FluxMaps.dnde_errp", false]], "dnde_errp (gammapy.estimators.fluxpoints attribute)": [[127, "gammapy.estimators.FluxPoints.dnde_errp", false]], "dnde_ref (gammapy.estimators.fluxmaps attribute)": [[125, "gammapy.estimators.FluxMaps.dnde_ref", false]], "dnde_ref (gammapy.estimators.fluxpoints attribute)": [[127, "gammapy.estimators.FluxPoints.dnde_ref", false]], "dnde_scan_values (gammapy.estimators.fluxmaps attribute)": [[125, "gammapy.estimators.FluxMaps.dnde_scan_values", false]], "dnde_scan_values (gammapy.estimators.fluxpoints attribute)": [[127, "gammapy.estimators.FluxPoints.dnde_scan_values", false]], "dnde_ul (gammapy.estimators.fluxmaps attribute)": [[125, "gammapy.estimators.FluxMaps.dnde_ul", false]], "dnde_ul (gammapy.estimators.fluxpoints attribute)": [[127, "gammapy.estimators.FluxPoints.dnde_ul", false]], "dot() (gammapy.maps.hpxmap method)": [[196, "gammapy.maps.HpxMap.dot", false]], "dot() (gammapy.maps.hpxndmap method)": [[197, "gammapy.maps.HpxNDMap.dot", false]], "dot() (gammapy.maps.map method)": [[199, "gammapy.maps.Map.dot", false]], "dot() (gammapy.maps.regionndmap method)": [[205, "gammapy.maps.RegionNDMap.dot", false]], "dot() (gammapy.maps.wcsmap method)": [[208, "gammapy.maps.WcsMap.dot", false]], "dot() (gammapy.maps.wcsndmap method)": [[209, "gammapy.maps.WcsNDMap.dot", false]], "downsample() (gammapy.datasets.mapdataset method)": [[103, "gammapy.datasets.MapDataset.downsample", false]], "downsample() (gammapy.datasets.mapdatasetonoff method)": [[106, "gammapy.datasets.MapDatasetOnOff.downsample", false]], "downsample() (gammapy.datasets.spectrumdataset method)": [[110, "gammapy.datasets.SpectrumDataset.downsample", false]], "downsample() (gammapy.datasets.spectrumdatasetonoff method)": [[111, "gammapy.datasets.SpectrumDatasetOnOff.downsample", false]], "downsample() (gammapy.irf.edispkernelmap method)": [[154, "gammapy.irf.EDispKernelMap.downsample", false]], "downsample() (gammapy.irf.edispmap method)": [[155, "gammapy.irf.EDispMap.downsample", false]], "downsample() (gammapy.irf.irfmap method)": [[161, "gammapy.irf.IRFMap.downsample", false]], "downsample() (gammapy.irf.psfmap method)": [[166, "gammapy.irf.PSFMap.downsample", false]], "downsample() (gammapy.irf.recopsfmap method)": [[169, "gammapy.irf.RecoPSFMap.downsample", false]], "downsample() (gammapy.maps.geom method)": [[194, "gammapy.maps.Geom.downsample", false]], "downsample() (gammapy.maps.hpxgeom method)": [[195, "gammapy.maps.HpxGeom.downsample", false]], "downsample() (gammapy.maps.hpxmap method)": [[196, "gammapy.maps.HpxMap.downsample", false]], "downsample() (gammapy.maps.hpxndmap method)": [[197, "gammapy.maps.HpxNDMap.downsample", false]], "downsample() (gammapy.maps.labelmapaxis method)": [[198, "gammapy.maps.LabelMapAxis.downsample", false]], "downsample() (gammapy.maps.map method)": [[199, "gammapy.maps.Map.downsample", false]], "downsample() (gammapy.maps.mapaxes method)": [[200, "gammapy.maps.MapAxes.downsample", false]], "downsample() (gammapy.maps.mapaxis method)": [[201, "gammapy.maps.MapAxis.downsample", false]], "downsample() (gammapy.maps.regiongeom method)": [[204, "gammapy.maps.RegionGeom.downsample", false]], "downsample() (gammapy.maps.regionndmap method)": [[205, "gammapy.maps.RegionNDMap.downsample", false]], "downsample() (gammapy.maps.timemapaxis method)": [[206, "gammapy.maps.TimeMapAxis.downsample", false]], "downsample() (gammapy.maps.wcsgeom method)": [[207, "gammapy.maps.WcsGeom.downsample", false]], "downsample() (gammapy.maps.wcsmap method)": [[208, "gammapy.maps.WcsMap.downsample", false]], "downsample() (gammapy.maps.wcsndmap method)": [[209, "gammapy.maps.WcsNDMap.downsample", false]], "draw() (in module gammapy.utils.random)": [[337, "gammapy.utils.random.draw", false]], "drift (gammapy.data.pointingmode attribute)": [[95, "gammapy.data.PointingMode.DRIFT", false]], "drop() (gammapy.maps.geom method)": [[194, "gammapy.maps.Geom.drop", false]], "drop() (gammapy.maps.hpxgeom method)": [[195, "gammapy.maps.HpxGeom.drop", false]], "drop() (gammapy.maps.mapaxes method)": [[200, "gammapy.maps.MapAxes.drop", false]], "drop() (gammapy.maps.regiongeom method)": [[204, "gammapy.maps.RegionGeom.drop", false]], "drop() (gammapy.maps.wcsgeom method)": [[207, "gammapy.maps.WcsGeom.drop", false]], "dtype (gammapy.data.hduindextable attribute)": [[87, "gammapy.data.HDUIndexTable.dtype", false]], "dtype (gammapy.data.observationtable attribute)": [[91, "gammapy.data.ObservationTable.dtype", false]], "duration (gammapy.data.pointinginfo attribute)": [[94, "gammapy.data.PointingInfo.duration", false]], "e (gammapy.modeling.models.diskspatialmodel attribute)": [[228, "gammapy.modeling.models.DiskSpatialModel.e", false]], "e (gammapy.modeling.models.gaussianspatialmodel attribute)": [[237, "gammapy.modeling.models.GaussianSpatialModel.e", false]], "e (gammapy.modeling.models.generalizedgaussianspatialmodel attribute)": [[240, "gammapy.modeling.models.GeneralizedGaussianSpatialModel.e", false]], "e2dnde (gammapy.estimators.fluxmaps attribute)": [[125, "gammapy.estimators.FluxMaps.e2dnde", false]], "e2dnde (gammapy.estimators.fluxpoints attribute)": [[127, "gammapy.estimators.FluxPoints.e2dnde", false]], "e2dnde_err (gammapy.estimators.fluxmaps attribute)": [[125, "gammapy.estimators.FluxMaps.e2dnde_err", false]], "e2dnde_err (gammapy.estimators.fluxpoints attribute)": [[127, "gammapy.estimators.FluxPoints.e2dnde_err", false]], "e2dnde_errn (gammapy.estimators.fluxmaps attribute)": [[125, "gammapy.estimators.FluxMaps.e2dnde_errn", false]], "e2dnde_errn (gammapy.estimators.fluxpoints attribute)": [[127, "gammapy.estimators.FluxPoints.e2dnde_errn", false]], "e2dnde_errp (gammapy.estimators.fluxmaps attribute)": [[125, "gammapy.estimators.FluxMaps.e2dnde_errp", false]], "e2dnde_errp (gammapy.estimators.fluxpoints attribute)": [[127, "gammapy.estimators.FluxPoints.e2dnde_errp", false]], "e2dnde_ref (gammapy.estimators.fluxmaps attribute)": [[125, "gammapy.estimators.FluxMaps.e2dnde_ref", false]], "e2dnde_ref (gammapy.estimators.fluxpoints attribute)": [[127, "gammapy.estimators.FluxPoints.e2dnde_ref", false]], "e2dnde_ul (gammapy.estimators.fluxmaps attribute)": [[125, "gammapy.estimators.FluxMaps.e2dnde_ul", false]], "e2dnde_ul (gammapy.estimators.fluxpoints attribute)": [[127, "gammapy.estimators.FluxPoints.e2dnde_ul", false]], "e_peak (gammapy.modeling.models.expcutoffpowerlawspectralmodel attribute)": [[233, "gammapy.modeling.models.ExpCutoffPowerLawSpectralModel.e_peak", false]], "e_peak (gammapy.modeling.models.logparabolaspectralmodel attribute)": [[245, "gammapy.modeling.models.LogParabolaSpectralModel.e_peak", false]], "e_peak (gammapy.modeling.models.superexpcutoffpowerlaw4fgldr3spectralmodel attribute)": [[272, "gammapy.modeling.models.SuperExpCutoffPowerLaw4FGLDR3SpectralModel.e_peak", false]], "earth_location_from_dict() (in module gammapy.utils.fits)": [[324, "gammapy.utils.fits.earth_location_from_dict", false]], "ebl_data_builtin (in module gammapy.modeling.models)": [[230, "gammapy.modeling.models.EBL_DATA_BUILTIN", false]], "eblabsorptionnormspectralmodel (class in gammapy.modeling.models)": [[229, "gammapy.modeling.models.EBLAbsorptionNormSpectralModel", false]], "ebreak (gammapy.modeling.models.brokenpowerlawspectralmodel attribute)": [[221, "gammapy.modeling.models.BrokenPowerLawSpectralModel.ebreak", false]], "ebreak (gammapy.modeling.models.smoothbrokenpowerlawspectralmodel attribute)": [[268, "gammapy.modeling.models.SmoothBrokenPowerLawSpectralModel.ebreak", false]], "ecut (gammapy.modeling.models.expcutoffpowerlaw3fglspectralmodel attribute)": [[231, "gammapy.modeling.models.ExpCutoffPowerLaw3FGLSpectralModel.ecut", false]], "ecut (gammapy.modeling.models.superexpcutoffpowerlaw3fglspectralmodel attribute)": [[271, "gammapy.modeling.models.SuperExpCutoffPowerLaw3FGLSpectralModel.ecut", false]], "edge_width (gammapy.modeling.models.diskspatialmodel attribute)": [[228, "gammapy.modeling.models.DiskSpatialModel.edge_width", false]], "edges (gammapy.maps.labelmapaxis attribute)": [[198, "gammapy.maps.LabelMapAxis.edges", false]], "edges (gammapy.maps.mapaxis attribute)": [[201, "gammapy.maps.MapAxis.edges", false]], "edges (gammapy.maps.timemapaxis attribute)": [[206, "gammapy.maps.TimeMapAxis.edges", false]], "edges_max (gammapy.maps.labelmapaxis attribute)": [[198, "gammapy.maps.LabelMapAxis.edges_max", false]], "edges_max (gammapy.maps.mapaxis attribute)": [[201, "gammapy.maps.MapAxis.edges_max", false]], "edges_max (gammapy.maps.timemapaxis attribute)": [[206, "gammapy.maps.TimeMapAxis.edges_max", false]], "edges_min (gammapy.maps.labelmapaxis attribute)": [[198, "gammapy.maps.LabelMapAxis.edges_min", false]], "edges_min (gammapy.maps.mapaxis attribute)": [[201, "gammapy.maps.MapAxis.edges_min", false]], "edges_min (gammapy.maps.timemapaxis attribute)": [[206, "gammapy.maps.TimeMapAxis.edges_min", false]], "edisp": [[597, "term-EDisp", true]], "edisp (gammapy.data.observation attribute)": [[88, "gammapy.data.Observation.edisp", false]], "edisp (gammapy.datasets.mapdataset attribute)": [[103, "gammapy.datasets.MapDataset.edisp", false]], "edisp (gammapy.datasets.mapdatasetonoff attribute)": [[106, "gammapy.datasets.MapDatasetOnOff.edisp", false]], "edisp (gammapy.datasets.spectrumdataset attribute)": [[110, "gammapy.datasets.SpectrumDataset.edisp", false]], "edisp (gammapy.datasets.spectrumdatasetonoff attribute)": [[111, "gammapy.datasets.SpectrumDatasetOnOff.edisp", false]], "edisp_map (gammapy.irf.edispkernelmap attribute)": [[154, "gammapy.irf.EDispKernelMap.edisp_map", false]], "edisp_map (gammapy.irf.edispmap attribute)": [[155, "gammapy.irf.EDispMap.edisp_map", false]], "edispkernel (class in gammapy.irf)": [[153, "gammapy.irf.EDispKernel", false]], "edispkernelmap (class in gammapy.irf)": [[154, "gammapy.irf.EDispKernelMap", false]], "edispmap (class in gammapy.irf)": [[155, "gammapy.irf.EDispMap", false]], "effectiveareatable2d (class in gammapy.irf)": [[156, "gammapy.irf.EffectiveAreaTable2D", false]], "eflux (gammapy.estimators.fluxmaps attribute)": [[125, "gammapy.estimators.FluxMaps.eflux", false]], "eflux (gammapy.estimators.fluxpoints attribute)": [[127, "gammapy.estimators.FluxPoints.eflux", false]], "eflux_err (gammapy.estimators.fluxmaps attribute)": [[125, "gammapy.estimators.FluxMaps.eflux_err", false]], "eflux_err (gammapy.estimators.fluxpoints attribute)": [[127, "gammapy.estimators.FluxPoints.eflux_err", false]], "eflux_errn (gammapy.estimators.fluxmaps attribute)": [[125, "gammapy.estimators.FluxMaps.eflux_errn", false]], "eflux_errn (gammapy.estimators.fluxpoints attribute)": [[127, "gammapy.estimators.FluxPoints.eflux_errn", false]], "eflux_errp (gammapy.estimators.fluxmaps attribute)": [[125, "gammapy.estimators.FluxMaps.eflux_errp", false]], "eflux_errp (gammapy.estimators.fluxpoints attribute)": [[127, "gammapy.estimators.FluxPoints.eflux_errp", false]], "eflux_ref (gammapy.estimators.fluxmaps attribute)": [[125, "gammapy.estimators.FluxMaps.eflux_ref", false]], "eflux_ref (gammapy.estimators.fluxpoints attribute)": [[127, "gammapy.estimators.FluxPoints.eflux_ref", false]], "eflux_ul (gammapy.estimators.fluxmaps attribute)": [[125, "gammapy.estimators.FluxMaps.eflux_ul", false]], "eflux_ul (gammapy.estimators.fluxpoints attribute)": [[127, "gammapy.estimators.FluxPoints.eflux_ul", false]], "einastoprofile (class in gammapy.astro.darkmatter)": [[21, "gammapy.astro.darkmatter.EinastoProfile", false]], "emax (gammapy.modeling.models.powerlaw2spectralmodel attribute)": [[256, "gammapy.modeling.models.PowerLaw2SpectralModel.emax", false]], "emin (gammapy.modeling.models.powerlaw2spectralmodel attribute)": [[256, "gammapy.modeling.models.PowerLaw2SpectralModel.emin", false]], "energy (gammapy.data.eventlist attribute)": [[83, "gammapy.data.EventList.energy", false]], "energy (gammapy.modeling.models.piecewisenormspectralmodel attribute)": [[254, "gammapy.modeling.models.PiecewiseNormSpectralModel.energy", false]], "energy_axes_are_aligned (gammapy.datasets.datasets attribute)": [[100, "gammapy.datasets.Datasets.energy_axes_are_aligned", false]], "energy_axis (gammapy.estimators.fluxmaps attribute)": [[125, "gammapy.estimators.FluxMaps.energy_axis", false]], "energy_axis (gammapy.estimators.fluxpoints attribute)": [[127, "gammapy.estimators.FluxPoints.energy_axis", false]], "energy_center (gammapy.modeling.models.templatenpredmodel attribute)": [[277, "gammapy.modeling.models.TemplateNPredModel.energy_center", false]], "energy_flux() (gammapy.astro.darkmatter.darkmatterannihilationspectralmodel method)": [[19, "gammapy.astro.darkmatter.DarkMatterAnnihilationSpectralModel.energy_flux", false]], "energy_flux() (gammapy.astro.darkmatter.darkmatterdecayspectralmodel method)": [[20, "gammapy.astro.darkmatter.DarkMatterDecaySpectralModel.energy_flux", false]], "energy_flux() (gammapy.astro.darkmatter.primaryflux method)": [[26, "gammapy.astro.darkmatter.PrimaryFlux.energy_flux", false]], "energy_flux() (gammapy.modeling.models.brokenpowerlawspectralmodel method)": [[221, "gammapy.modeling.models.BrokenPowerLawSpectralModel.energy_flux", false]], "energy_flux() (gammapy.modeling.models.compoundspectralmodel method)": [[222, "gammapy.modeling.models.CompoundSpectralModel.energy_flux", false]], "energy_flux() (gammapy.modeling.models.constantspectralmodel method)": [[225, "gammapy.modeling.models.ConstantSpectralModel.energy_flux", false]], "energy_flux() (gammapy.modeling.models.eblabsorptionnormspectralmodel method)": [[229, "gammapy.modeling.models.EBLAbsorptionNormSpectralModel.energy_flux", false]], "energy_flux() (gammapy.modeling.models.expcutoffpowerlaw3fglspectralmodel method)": [[231, "gammapy.modeling.models.ExpCutoffPowerLaw3FGLSpectralModel.energy_flux", false]], "energy_flux() (gammapy.modeling.models.expcutoffpowerlawnormspectralmodel method)": [[232, "gammapy.modeling.models.ExpCutoffPowerLawNormSpectralModel.energy_flux", false]], "energy_flux() (gammapy.modeling.models.expcutoffpowerlawspectralmodel method)": [[233, "gammapy.modeling.models.ExpCutoffPowerLawSpectralModel.energy_flux", false]], "energy_flux() (gammapy.modeling.models.gaussianspectralmodel method)": [[238, "gammapy.modeling.models.GaussianSpectralModel.energy_flux", false]], "energy_flux() (gammapy.modeling.models.logparabolanormspectralmodel method)": [[244, "gammapy.modeling.models.LogParabolaNormSpectralModel.energy_flux", false]], "energy_flux() (gammapy.modeling.models.logparabolaspectralmodel method)": [[245, "gammapy.modeling.models.LogParabolaSpectralModel.energy_flux", false]], "energy_flux() (gammapy.modeling.models.meyercrabspectralmodel method)": [[248, "gammapy.modeling.models.MeyerCrabSpectralModel.energy_flux", false]], "energy_flux() (gammapy.modeling.models.naimaspectralmodel method)": [[252, "gammapy.modeling.models.NaimaSpectralModel.energy_flux", false]], "energy_flux() (gammapy.modeling.models.piecewisenormspectralmodel method)": [[254, "gammapy.modeling.models.PiecewiseNormSpectralModel.energy_flux", false]], "energy_flux() (gammapy.modeling.models.powerlaw2spectralmodel method)": [[256, "gammapy.modeling.models.PowerLaw2SpectralModel.energy_flux", false]], "energy_flux() (gammapy.modeling.models.powerlawnormspectralmodel method)": [[257, "gammapy.modeling.models.PowerLawNormSpectralModel.energy_flux", false]], "energy_flux() (gammapy.modeling.models.powerlawspectralmodel method)": [[258, "gammapy.modeling.models.PowerLawSpectralModel.energy_flux", false]], "energy_flux() (gammapy.modeling.models.scalespectralmodel method)": [[263, "gammapy.modeling.models.ScaleSpectralModel.energy_flux", false]], "energy_flux() (gammapy.modeling.models.smoothbrokenpowerlawspectralmodel method)": [[268, "gammapy.modeling.models.SmoothBrokenPowerLawSpectralModel.energy_flux", false]], "energy_flux() (gammapy.modeling.models.spectralmodel method)": [[270, "gammapy.modeling.models.SpectralModel.energy_flux", false]], "energy_flux() (gammapy.modeling.models.superexpcutoffpowerlaw3fglspectralmodel method)": [[271, "gammapy.modeling.models.SuperExpCutoffPowerLaw3FGLSpectralModel.energy_flux", false]], "energy_flux() (gammapy.modeling.models.superexpcutoffpowerlaw4fgldr3spectralmodel method)": [[272, "gammapy.modeling.models.SuperExpCutoffPowerLaw4FGLDR3SpectralModel.energy_flux", false]], "energy_flux() (gammapy.modeling.models.superexpcutoffpowerlaw4fglspectralmodel method)": [[273, "gammapy.modeling.models.SuperExpCutoffPowerLaw4FGLSpectralModel.energy_flux", false]], "energy_flux() (gammapy.modeling.models.templatendspectralmodel method)": [[276, "gammapy.modeling.models.TemplateNDSpectralModel.energy_flux", false]], "energy_flux() (gammapy.modeling.models.templatespectralmodel method)": [[280, "gammapy.modeling.models.TemplateSpectralModel.energy_flux", false]], "energy_flux_error() (gammapy.astro.darkmatter.darkmatterannihilationspectralmodel method)": [[19, "gammapy.astro.darkmatter.DarkMatterAnnihilationSpectralModel.energy_flux_error", false]], "energy_flux_error() (gammapy.astro.darkmatter.darkmatterdecayspectralmodel method)": [[20, "gammapy.astro.darkmatter.DarkMatterDecaySpectralModel.energy_flux_error", false]], "energy_flux_error() (gammapy.astro.darkmatter.primaryflux method)": [[26, "gammapy.astro.darkmatter.PrimaryFlux.energy_flux_error", false]], "energy_flux_error() (gammapy.modeling.models.brokenpowerlawspectralmodel method)": [[221, "gammapy.modeling.models.BrokenPowerLawSpectralModel.energy_flux_error", false]], "energy_flux_error() (gammapy.modeling.models.compoundspectralmodel method)": [[222, "gammapy.modeling.models.CompoundSpectralModel.energy_flux_error", false]], "energy_flux_error() (gammapy.modeling.models.constantspectralmodel method)": [[225, "gammapy.modeling.models.ConstantSpectralModel.energy_flux_error", false]], "energy_flux_error() (gammapy.modeling.models.eblabsorptionnormspectralmodel method)": [[229, "gammapy.modeling.models.EBLAbsorptionNormSpectralModel.energy_flux_error", false]], "energy_flux_error() (gammapy.modeling.models.expcutoffpowerlaw3fglspectralmodel method)": [[231, "gammapy.modeling.models.ExpCutoffPowerLaw3FGLSpectralModel.energy_flux_error", false]], "energy_flux_error() (gammapy.modeling.models.expcutoffpowerlawnormspectralmodel method)": [[232, "gammapy.modeling.models.ExpCutoffPowerLawNormSpectralModel.energy_flux_error", false]], "energy_flux_error() (gammapy.modeling.models.expcutoffpowerlawspectralmodel method)": [[233, "gammapy.modeling.models.ExpCutoffPowerLawSpectralModel.energy_flux_error", false]], "energy_flux_error() (gammapy.modeling.models.gaussianspectralmodel method)": [[238, "gammapy.modeling.models.GaussianSpectralModel.energy_flux_error", false]], "energy_flux_error() (gammapy.modeling.models.logparabolanormspectralmodel method)": [[244, "gammapy.modeling.models.LogParabolaNormSpectralModel.energy_flux_error", false]], "energy_flux_error() (gammapy.modeling.models.logparabolaspectralmodel method)": [[245, "gammapy.modeling.models.LogParabolaSpectralModel.energy_flux_error", false]], "energy_flux_error() (gammapy.modeling.models.meyercrabspectralmodel method)": [[248, "gammapy.modeling.models.MeyerCrabSpectralModel.energy_flux_error", false]], "energy_flux_error() (gammapy.modeling.models.naimaspectralmodel method)": [[252, "gammapy.modeling.models.NaimaSpectralModel.energy_flux_error", false]], "energy_flux_error() (gammapy.modeling.models.piecewisenormspectralmodel method)": [[254, "gammapy.modeling.models.PiecewiseNormSpectralModel.energy_flux_error", false]], "energy_flux_error() (gammapy.modeling.models.powerlaw2spectralmodel method)": [[256, "gammapy.modeling.models.PowerLaw2SpectralModel.energy_flux_error", false]], "energy_flux_error() (gammapy.modeling.models.powerlawnormspectralmodel method)": [[257, "gammapy.modeling.models.PowerLawNormSpectralModel.energy_flux_error", false]], "energy_flux_error() (gammapy.modeling.models.powerlawspectralmodel method)": [[258, "gammapy.modeling.models.PowerLawSpectralModel.energy_flux_error", false]], "energy_flux_error() (gammapy.modeling.models.scalespectralmodel method)": [[263, "gammapy.modeling.models.ScaleSpectralModel.energy_flux_error", false]], "energy_flux_error() (gammapy.modeling.models.smoothbrokenpowerlawspectralmodel method)": [[268, "gammapy.modeling.models.SmoothBrokenPowerLawSpectralModel.energy_flux_error", false]], "energy_flux_error() (gammapy.modeling.models.spectralmodel method)": [[270, "gammapy.modeling.models.SpectralModel.energy_flux_error", false]], "energy_flux_error() (gammapy.modeling.models.superexpcutoffpowerlaw3fglspectralmodel method)": [[271, "gammapy.modeling.models.SuperExpCutoffPowerLaw3FGLSpectralModel.energy_flux_error", false]], "energy_flux_error() (gammapy.modeling.models.superexpcutoffpowerlaw4fgldr3spectralmodel method)": [[272, "gammapy.modeling.models.SuperExpCutoffPowerLaw4FGLDR3SpectralModel.energy_flux_error", false]], "energy_flux_error() (gammapy.modeling.models.superexpcutoffpowerlaw4fglspectralmodel method)": [[273, "gammapy.modeling.models.SuperExpCutoffPowerLaw4FGLSpectralModel.energy_flux_error", false]], "energy_flux_error() (gammapy.modeling.models.templatendspectralmodel method)": [[276, "gammapy.modeling.models.TemplateNDSpectralModel.energy_flux_error", false]], "energy_flux_error() (gammapy.modeling.models.templatespectralmodel method)": [[280, "gammapy.modeling.models.TemplateSpectralModel.energy_flux_error", false]], "energy_integrated() (gammapy.astro.source.pulsar method)": [[51, "gammapy.astro.source.Pulsar.energy_integrated", false]], "energy_mask() (gammapy.maps.geom method)": [[194, "gammapy.maps.Geom.energy_mask", false]], "energy_mask() (gammapy.maps.hpxgeom method)": [[195, "gammapy.maps.HpxGeom.energy_mask", false]], "energy_mask() (gammapy.maps.regiongeom method)": [[204, "gammapy.maps.RegionGeom.energy_mask", false]], "energy_mask() (gammapy.maps.wcsgeom method)": [[207, "gammapy.maps.WcsGeom.energy_mask", false]], "energy_max (gammapy.estimators.fluxmaps attribute)": [[125, "gammapy.estimators.FluxMaps.energy_max", false]], "energy_max (gammapy.estimators.fluxpoints attribute)": [[127, "gammapy.estimators.FluxPoints.energy_max", false]], "energy_min (gammapy.estimators.fluxmaps attribute)": [[125, "gammapy.estimators.FluxMaps.energy_min", false]], "energy_min (gammapy.estimators.fluxpoints attribute)": [[127, "gammapy.estimators.FluxPoints.energy_min", false]], "energy_name (gammapy.irf.psfmap attribute)": [[166, "gammapy.irf.PSFMap.energy_name", false]], "energy_name (gammapy.irf.recopsfmap attribute)": [[169, "gammapy.irf.RecoPSFMap.energy_name", false]], "energy_range (gammapy.catalog.sourcecatalogobject2fhl attribute)": [[71, "gammapy.catalog.SourceCatalogObject2FHL.energy_range", false]], "energy_range (gammapy.catalog.sourcecatalogobject3fgl attribute)": [[74, "gammapy.catalog.SourceCatalogObject3FGL.energy_range", false]], "energy_range (gammapy.catalog.sourcecatalogobject3fhl attribute)": [[75, "gammapy.catalog.SourceCatalogObject3FHL.energy_range", false]], "energy_range (gammapy.catalog.sourcecatalogobjecthgps attribute)": [[80, "gammapy.catalog.SourceCatalogObjectHGPS.energy_range", false]], "energy_range (gammapy.datasets.mapdataset attribute)": [[103, "gammapy.datasets.MapDataset.energy_range", false]], "energy_range (gammapy.datasets.mapdatasetonoff attribute)": [[106, "gammapy.datasets.MapDatasetOnOff.energy_range", false]], "energy_range (gammapy.datasets.spectrumdataset attribute)": [[110, "gammapy.datasets.SpectrumDataset.energy_range", false]], "energy_range (gammapy.datasets.spectrumdatasetonoff attribute)": [[111, "gammapy.datasets.SpectrumDatasetOnOff.energy_range", false]], "energy_range_fit (gammapy.datasets.mapdataset attribute)": [[103, "gammapy.datasets.MapDataset.energy_range_fit", false]], "energy_range_fit (gammapy.datasets.mapdatasetonoff attribute)": [[106, "gammapy.datasets.MapDatasetOnOff.energy_range_fit", false]], "energy_range_fit (gammapy.datasets.spectrumdataset attribute)": [[110, "gammapy.datasets.SpectrumDataset.energy_range_fit", false]], "energy_range_fit (gammapy.datasets.spectrumdatasetonoff attribute)": [[111, "gammapy.datasets.SpectrumDatasetOnOff.energy_range_fit", false]], "energy_range_safe (gammapy.datasets.mapdataset attribute)": [[103, "gammapy.datasets.MapDataset.energy_range_safe", false]], "energy_range_safe (gammapy.datasets.mapdatasetonoff attribute)": [[106, "gammapy.datasets.MapDatasetOnOff.energy_range_safe", false]], "energy_range_safe (gammapy.datasets.spectrumdataset attribute)": [[110, "gammapy.datasets.SpectrumDataset.energy_range_safe", false]], "energy_range_safe (gammapy.datasets.spectrumdatasetonoff attribute)": [[111, "gammapy.datasets.SpectrumDatasetOnOff.energy_range_safe", false]], "energy_range_total (gammapy.datasets.mapdataset attribute)": [[103, "gammapy.datasets.MapDataset.energy_range_total", false]], "energy_range_total (gammapy.datasets.mapdatasetonoff attribute)": [[106, "gammapy.datasets.MapDatasetOnOff.energy_range_total", false]], "energy_range_total (gammapy.datasets.spectrumdataset attribute)": [[110, "gammapy.datasets.SpectrumDataset.energy_range_total", false]], "energy_range_total (gammapy.datasets.spectrumdatasetonoff attribute)": [[111, "gammapy.datasets.SpectrumDatasetOnOff.energy_range_total", false]], "energy_ranges (gammapy.datasets.datasets attribute)": [[100, "gammapy.datasets.Datasets.energy_ranges", false]], "energy_ref (gammapy.estimators.fluxmaps attribute)": [[125, "gammapy.estimators.FluxMaps.energy_ref", false]], "energy_ref (gammapy.estimators.fluxpoints attribute)": [[127, "gammapy.estimators.FluxPoints.energy_ref", false]], "energydependentmorphologyestimator (class in gammapy.estimators)": [[122, "gammapy.estimators.EnergyDependentMorphologyEstimator", false]], "energydependentmultigausspsf (class in gammapy.irf)": [[157, "gammapy.irf.EnergyDependentMultiGaussPSF", false]], "energydispersion2d (class in gammapy.irf)": [[158, "gammapy.irf.EnergyDispersion2D", false]], "eqcons (gammapy.astro.population.casebattacharya1998 attribute)": [[28, "gammapy.astro.population.CaseBattacharya1998.eqcons", false]], "eqcons (gammapy.astro.population.exponential attribute)": [[29, "gammapy.astro.population.Exponential.eqcons", false]], "eqcons (gammapy.astro.population.faucherkaspi2006 attribute)": [[30, "gammapy.astro.population.FaucherKaspi2006.eqcons", false]], "eqcons (gammapy.astro.population.faucherkaspi2006velocitybimodal attribute)": [[31, "gammapy.astro.population.FaucherKaspi2006VelocityBimodal.eqcons", false]], "eqcons (gammapy.astro.population.faucherkaspi2006velocitymaxwellian attribute)": [[32, "gammapy.astro.population.FaucherKaspi2006VelocityMaxwellian.eqcons", false]], "eqcons (gammapy.astro.population.lorimer2006 attribute)": [[35, "gammapy.astro.population.Lorimer2006.eqcons", false]], "eqcons (gammapy.astro.population.paczynski1990 attribute)": [[36, "gammapy.astro.population.Paczynski1990.eqcons", false]], "eqcons (gammapy.astro.population.paczynski1990velocity attribute)": [[37, "gammapy.astro.population.Paczynski1990Velocity.eqcons", false]], "eqcons (gammapy.astro.population.yusifovkucuk2004 attribute)": [[39, "gammapy.astro.population.YusifovKucuk2004.eqcons", false]], "eqcons (gammapy.astro.population.yusifovkucuk2004b attribute)": [[40, "gammapy.astro.population.YusifovKucuk2004B.eqcons", false]], "error (gammapy.modeling.parameter attribute)": [[217, "gammapy.modeling.Parameter.error", false]], "error (gammapy.modeling.priorparameter attribute)": [[219, "gammapy.modeling.PriorParameter.error", false]], "error (gammapy.stats.cashcountsstatistic attribute)": [[292, "gammapy.stats.CashCountsStatistic.error", false]], "error (gammapy.stats.wstatcountsstatistic attribute)": [[294, "gammapy.stats.WStatCountsStatistic.error", false]], "error_callback() (gammapy.makers.datasetsmaker method)": [[172, "gammapy.makers.DatasetsMaker.error_callback", false]], "estimate_best_fit() (gammapy.estimators.fluxpointsestimator method)": [[128, "gammapy.estimators.FluxPointsEstimator.estimate_best_fit", false]], "estimate_best_fit() (gammapy.estimators.fluxprofileestimator method)": [[129, "gammapy.estimators.FluxProfileEstimator.estimate_best_fit", false]], "estimate_best_fit() (gammapy.estimators.lightcurveestimator method)": [[132, "gammapy.estimators.LightCurveEstimator.estimate_best_fit", false]], "estimate_best_fit() (gammapy.estimators.parameterestimator method)": [[133, "gammapy.estimators.ParameterEstimator.estimate_best_fit", false]], "estimate_counts() (gammapy.estimators.fluxpointsestimator static method)": [[128, "gammapy.estimators.FluxPointsEstimator.estimate_counts", false]], "estimate_counts() (gammapy.estimators.fluxprofileestimator static method)": [[129, "gammapy.estimators.FluxProfileEstimator.estimate_counts", false]], "estimate_counts() (gammapy.estimators.lightcurveestimator static method)": [[132, "gammapy.estimators.LightCurveEstimator.estimate_counts", false]], "estimate_counts() (gammapy.estimators.parameterestimator static method)": [[133, "gammapy.estimators.ParameterEstimator.estimate_counts", false]], "estimate_energy_dependence() (gammapy.estimators.energydependentmorphologyestimator method)": [[122, "gammapy.estimators.EnergyDependentMorphologyEstimator.estimate_energy_dependence", false]], "estimate_errn_errp() (gammapy.estimators.fluxpointsestimator method)": [[128, "gammapy.estimators.FluxPointsEstimator.estimate_errn_errp", false]], "estimate_errn_errp() (gammapy.estimators.fluxprofileestimator method)": [[129, "gammapy.estimators.FluxProfileEstimator.estimate_errn_errp", false]], "estimate_errn_errp() (gammapy.estimators.lightcurveestimator method)": [[132, "gammapy.estimators.LightCurveEstimator.estimate_errn_errp", false]], "estimate_errn_errp() (gammapy.estimators.parameterestimator method)": [[133, "gammapy.estimators.ParameterEstimator.estimate_errn_errp", false]], "estimate_excess_map() (gammapy.estimators.excessmapestimator method)": [[124, "gammapy.estimators.ExcessMapEstimator.estimate_excess_map", false]], "estimate_exposure_reco_energy() (gammapy.estimators.excessmapestimator method)": [[124, "gammapy.estimators.ExcessMapEstimator.estimate_exposure_reco_energy", false]], "estimate_exposure_reco_energy() (in module gammapy.estimators.utils)": [[143, "gammapy.estimators.utils.estimate_exposure_reco_energy", false]], "estimate_fit_input_maps() (gammapy.estimators.tsmapestimator method)": [[136, "gammapy.estimators.TSMapEstimator.estimate_fit_input_maps", false]], "estimate_flux_default() (gammapy.estimators.tsmapestimator method)": [[136, "gammapy.estimators.TSMapEstimator.estimate_flux_default", false]], "estimate_flux_map() (gammapy.estimators.tsmapestimator method)": [[136, "gammapy.estimators.TSMapEstimator.estimate_flux_map", false]], "estimate_flux_point() (gammapy.estimators.fluxpointsestimator method)": [[128, "gammapy.estimators.FluxPointsEstimator.estimate_flux_point", false]], "estimate_flux_point() (gammapy.estimators.fluxprofileestimator method)": [[129, "gammapy.estimators.FluxProfileEstimator.estimate_flux_point", false]], "estimate_flux_point() (gammapy.estimators.lightcurveestimator method)": [[132, "gammapy.estimators.LightCurveEstimator.estimate_flux_point", false]], "estimate_kernel() (gammapy.estimators.excessmapestimator method)": [[124, "gammapy.estimators.ExcessMapEstimator.estimate_kernel", false]], "estimate_kernel() (gammapy.estimators.tsmapestimator method)": [[136, "gammapy.estimators.TSMapEstimator.estimate_kernel", false]], "estimate_maps() (gammapy.estimators.asmoothmapestimator method)": [[120, "gammapy.estimators.ASmoothMapEstimator.estimate_maps", false]], "estimate_mask_default() (gammapy.estimators.excessmapestimator static method)": [[124, "gammapy.estimators.ExcessMapEstimator.estimate_mask_default", false]], "estimate_mask_default() (gammapy.estimators.tsmapestimator static method)": [[136, "gammapy.estimators.TSMapEstimator.estimate_mask_default", false]], "estimate_min_e2dnde() (gammapy.estimators.sensitivityestimator method)": [[135, "gammapy.estimators.SensitivityEstimator.estimate_min_e2dnde", false]], "estimate_min_excess() (gammapy.estimators.sensitivityestimator method)": [[135, "gammapy.estimators.SensitivityEstimator.estimate_min_excess", false]], "estimate_npred() (gammapy.estimators.fluxpointsestimator static method)": [[128, "gammapy.estimators.FluxPointsEstimator.estimate_npred", false]], "estimate_npred() (gammapy.estimators.fluxprofileestimator static method)": [[129, "gammapy.estimators.FluxProfileEstimator.estimate_npred", false]], "estimate_npred() (gammapy.estimators.lightcurveestimator static method)": [[132, "gammapy.estimators.LightCurveEstimator.estimate_npred", false]], "estimate_npred() (gammapy.estimators.parameterestimator static method)": [[133, "gammapy.estimators.ParameterEstimator.estimate_npred", false]], "estimate_npred_excess() (gammapy.estimators.fluxpointsestimator method)": [[128, "gammapy.estimators.FluxPointsEstimator.estimate_npred_excess", false]], "estimate_npred_excess() (gammapy.estimators.fluxprofileestimator method)": [[129, "gammapy.estimators.FluxProfileEstimator.estimate_npred_excess", false]], "estimate_npred_excess() (gammapy.estimators.lightcurveestimator method)": [[132, "gammapy.estimators.LightCurveEstimator.estimate_npred_excess", false]], "estimate_pad_width() (gammapy.estimators.tsmapestimator method)": [[136, "gammapy.estimators.TSMapEstimator.estimate_pad_width", false]], "estimate_scan() (gammapy.estimators.fluxpointsestimator method)": [[128, "gammapy.estimators.FluxPointsEstimator.estimate_scan", false]], "estimate_scan() (gammapy.estimators.fluxprofileestimator method)": [[129, "gammapy.estimators.FluxProfileEstimator.estimate_scan", false]], "estimate_scan() (gammapy.estimators.lightcurveestimator method)": [[132, "gammapy.estimators.LightCurveEstimator.estimate_scan", false]], "estimate_scan() (gammapy.estimators.parameterestimator method)": [[133, "gammapy.estimators.ParameterEstimator.estimate_scan", false]], "estimate_sensitivity() (gammapy.estimators.fluxpointsestimator method)": [[128, "gammapy.estimators.FluxPointsEstimator.estimate_sensitivity", false]], "estimate_sensitivity() (gammapy.estimators.fluxprofileestimator method)": [[129, "gammapy.estimators.FluxProfileEstimator.estimate_sensitivity", false]], "estimate_sensitivity() (gammapy.estimators.lightcurveestimator method)": [[132, "gammapy.estimators.LightCurveEstimator.estimate_sensitivity", false]], "estimate_sensitivity() (gammapy.estimators.parameterestimator method)": [[133, "gammapy.estimators.ParameterEstimator.estimate_sensitivity", false]], "estimate_time_bin_flux() (gammapy.estimators.lightcurveestimator method)": [[132, "gammapy.estimators.LightCurveEstimator.estimate_time_bin_flux", false]], "estimate_ts() (gammapy.estimators.fluxpointsestimator method)": [[128, "gammapy.estimators.FluxPointsEstimator.estimate_ts", false]], "estimate_ts() (gammapy.estimators.fluxprofileestimator method)": [[129, "gammapy.estimators.FluxProfileEstimator.estimate_ts", false]], "estimate_ts() (gammapy.estimators.lightcurveestimator method)": [[132, "gammapy.estimators.LightCurveEstimator.estimate_ts", false]], "estimate_ts() (gammapy.estimators.parameterestimator method)": [[133, "gammapy.estimators.ParameterEstimator.estimate_ts", false]], "estimate_ul() (gammapy.estimators.fluxpointsestimator method)": [[128, "gammapy.estimators.FluxPointsEstimator.estimate_ul", false]], "estimate_ul() (gammapy.estimators.fluxprofileestimator method)": [[129, "gammapy.estimators.FluxProfileEstimator.estimate_ul", false]], "estimate_ul() (gammapy.estimators.lightcurveestimator method)": [[132, "gammapy.estimators.LightCurveEstimator.estimate_ul", false]], "estimate_ul() (gammapy.estimators.parameterestimator method)": [[133, "gammapy.estimators.ParameterEstimator.estimate_ul", false]], "estimator": [[597, "term-Estimator", true]], "estimator (class in gammapy.estimators)": [[123, "gammapy.estimators.Estimator", false]], "estimator_registry (in module gammapy.estimators)": [[121, "gammapy.estimators.ESTIMATOR_REGISTRY", false]], "eta (gammapy.modeling.models.generalizedgaussianspatialmodel attribute)": [[240, "gammapy.modeling.models.GeneralizedGaussianSpatialModel.eta", false]], "eta (gammapy.modeling.models.generalizedgaussiantemporalmodel attribute)": [[241, "gammapy.modeling.models.GeneralizedGaussianTemporalModel.eta", false]], "eta (gammapy.modeling.models.shell2spatialmodel attribute)": [[264, "gammapy.modeling.models.Shell2SpatialModel.eta", false]], "evaluate() (gammapy.astro.darkmatter.burkertprofile static method)": [[17, "gammapy.astro.darkmatter.BurkertProfile.evaluate", false]], "evaluate() (gammapy.astro.darkmatter.darkmatterannihilationspectralmodel method)": [[19, "gammapy.astro.darkmatter.DarkMatterAnnihilationSpectralModel.evaluate", false]], "evaluate() (gammapy.astro.darkmatter.darkmatterdecayspectralmodel method)": [[20, "gammapy.astro.darkmatter.DarkMatterDecaySpectralModel.evaluate", false]], "evaluate() (gammapy.astro.darkmatter.einastoprofile static method)": [[21, "gammapy.astro.darkmatter.EinastoProfile.evaluate", false]], "evaluate() (gammapy.astro.darkmatter.isothermalprofile static method)": [[22, "gammapy.astro.darkmatter.IsothermalProfile.evaluate", false]], "evaluate() (gammapy.astro.darkmatter.mooreprofile static method)": [[24, "gammapy.astro.darkmatter.MooreProfile.evaluate", false]], "evaluate() (gammapy.astro.darkmatter.nfwprofile static method)": [[25, "gammapy.astro.darkmatter.NFWProfile.evaluate", false]], "evaluate() (gammapy.astro.darkmatter.primaryflux method)": [[26, "gammapy.astro.darkmatter.PrimaryFlux.evaluate", false]], "evaluate() (gammapy.astro.darkmatter.zhaoprofile static method)": [[27, "gammapy.astro.darkmatter.ZhaoProfile.evaluate", false]], "evaluate() (gammapy.astro.population.casebattacharya1998 static method)": [[28, "gammapy.astro.population.CaseBattacharya1998.evaluate", false]], "evaluate() (gammapy.astro.population.exponential static method)": [[29, "gammapy.astro.population.Exponential.evaluate", false]], "evaluate() (gammapy.astro.population.faucherkaspi2006 static method)": [[30, "gammapy.astro.population.FaucherKaspi2006.evaluate", false]], "evaluate() (gammapy.astro.population.faucherkaspi2006velocitybimodal static method)": [[31, "gammapy.astro.population.FaucherKaspi2006VelocityBimodal.evaluate", false]], "evaluate() (gammapy.astro.population.faucherkaspi2006velocitymaxwellian static method)": [[32, "gammapy.astro.population.FaucherKaspi2006VelocityMaxwellian.evaluate", false]], "evaluate() (gammapy.astro.population.lorimer2006 static method)": [[35, "gammapy.astro.population.Lorimer2006.evaluate", false]], "evaluate() (gammapy.astro.population.paczynski1990 static method)": [[36, "gammapy.astro.population.Paczynski1990.evaluate", false]], "evaluate() (gammapy.astro.population.paczynski1990velocity static method)": [[37, "gammapy.astro.population.Paczynski1990Velocity.evaluate", false]], "evaluate() (gammapy.astro.population.yusifovkucuk2004 static method)": [[39, "gammapy.astro.population.YusifovKucuk2004.evaluate", false]], "evaluate() (gammapy.astro.population.yusifovkucuk2004b static method)": [[40, "gammapy.astro.population.YusifovKucuk2004B.evaluate", false]], "evaluate() (gammapy.catalog.sourcecataloglargescalehgps method)": [[68, "gammapy.catalog.SourceCatalogLargeScaleHGPS.evaluate", false]], "evaluate() (gammapy.irf.background2d method)": [[150, "gammapy.irf.Background2D.evaluate", false]], "evaluate() (gammapy.irf.background3d method)": [[151, "gammapy.irf.Background3D.evaluate", false]], "evaluate() (gammapy.irf.backgroundirf method)": [[152, "gammapy.irf.BackgroundIRF.evaluate", false]], "evaluate() (gammapy.irf.edispkernel method)": [[153, "gammapy.irf.EDispKernel.evaluate", false]], "evaluate() (gammapy.irf.effectiveareatable2d method)": [[156, "gammapy.irf.EffectiveAreaTable2D.evaluate", false]], "evaluate() (gammapy.irf.energydependentmultigausspsf method)": [[157, "gammapy.irf.EnergyDependentMultiGaussPSF.evaluate", false]], "evaluate() (gammapy.irf.energydispersion2d method)": [[158, "gammapy.irf.EnergyDispersion2D.evaluate", false]], "evaluate() (gammapy.irf.irf method)": [[160, "gammapy.irf.IRF.evaluate", false]], "evaluate() (gammapy.irf.parametricpsf method)": [[167, "gammapy.irf.ParametricPSF.evaluate", false]], "evaluate() (gammapy.irf.psf3d method)": [[163, "gammapy.irf.PSF3D.evaluate", false]], "evaluate() (gammapy.irf.psfking method)": [[165, "gammapy.irf.PSFKing.evaluate", false]], "evaluate() (gammapy.irf.radmax2d method)": [[168, "gammapy.irf.RadMax2D.evaluate", false]], "evaluate() (gammapy.modeling.models.brokenpowerlawspectralmodel static method)": [[221, "gammapy.modeling.models.BrokenPowerLawSpectralModel.evaluate", false]], "evaluate() (gammapy.modeling.models.compoundspectralmodel method)": [[222, "gammapy.modeling.models.CompoundSpectralModel.evaluate", false]], "evaluate() (gammapy.modeling.models.constantfluxspatialmodel static method)": [[223, "gammapy.modeling.models.ConstantFluxSpatialModel.evaluate", false]], "evaluate() (gammapy.modeling.models.constantspatialmodel static method)": [[224, "gammapy.modeling.models.ConstantSpatialModel.evaluate", false]], "evaluate() (gammapy.modeling.models.constantspectralmodel static method)": [[225, "gammapy.modeling.models.ConstantSpectralModel.evaluate", false]], "evaluate() (gammapy.modeling.models.constanttemporalmodel static method)": [[226, "gammapy.modeling.models.ConstantTemporalModel.evaluate", false]], "evaluate() (gammapy.modeling.models.diskspatialmodel static method)": [[228, "gammapy.modeling.models.DiskSpatialModel.evaluate", false]], "evaluate() (gammapy.modeling.models.eblabsorptionnormspectralmodel method)": [[229, "gammapy.modeling.models.EBLAbsorptionNormSpectralModel.evaluate", false]], "evaluate() (gammapy.modeling.models.expcutoffpowerlaw3fglspectralmodel static method)": [[231, "gammapy.modeling.models.ExpCutoffPowerLaw3FGLSpectralModel.evaluate", false]], "evaluate() (gammapy.modeling.models.expcutoffpowerlawnormspectralmodel static method)": [[232, "gammapy.modeling.models.ExpCutoffPowerLawNormSpectralModel.evaluate", false]], "evaluate() (gammapy.modeling.models.expcutoffpowerlawspectralmodel static method)": [[233, "gammapy.modeling.models.ExpCutoffPowerLawSpectralModel.evaluate", false]], "evaluate() (gammapy.modeling.models.expdecaytemporalmodel static method)": [[234, "gammapy.modeling.models.ExpDecayTemporalModel.evaluate", false]], "evaluate() (gammapy.modeling.models.fovbackgroundmodel method)": [[235, "gammapy.modeling.models.FoVBackgroundModel.evaluate", false]], "evaluate() (gammapy.modeling.models.gaussianprior static method)": [[236, "gammapy.modeling.models.GaussianPrior.evaluate", false]], "evaluate() (gammapy.modeling.models.gaussianspatialmodel static method)": [[237, "gammapy.modeling.models.GaussianSpatialModel.evaluate", false]], "evaluate() (gammapy.modeling.models.gaussianspectralmodel static method)": [[238, "gammapy.modeling.models.GaussianSpectralModel.evaluate", false]], "evaluate() (gammapy.modeling.models.gaussiantemporalmodel static method)": [[239, "gammapy.modeling.models.GaussianTemporalModel.evaluate", false]], "evaluate() (gammapy.modeling.models.generalizedgaussianspatialmodel static method)": [[240, "gammapy.modeling.models.GeneralizedGaussianSpatialModel.evaluate", false]], "evaluate() (gammapy.modeling.models.generalizedgaussiantemporalmodel static method)": [[241, "gammapy.modeling.models.GeneralizedGaussianTemporalModel.evaluate", false]], "evaluate() (gammapy.modeling.models.lightcurvetemplatetemporalmodel method)": [[242, "gammapy.modeling.models.LightCurveTemplateTemporalModel.evaluate", false]], "evaluate() (gammapy.modeling.models.lineartemporalmodel static method)": [[243, "gammapy.modeling.models.LinearTemporalModel.evaluate", false]], "evaluate() (gammapy.modeling.models.logparabolanormspectralmodel static method)": [[244, "gammapy.modeling.models.LogParabolaNormSpectralModel.evaluate", false]], "evaluate() (gammapy.modeling.models.logparabolaspectralmodel static method)": [[245, "gammapy.modeling.models.LogParabolaSpectralModel.evaluate", false]], "evaluate() (gammapy.modeling.models.loguniformprior static method)": [[246, "gammapy.modeling.models.LogUniformPrior.evaluate", false]], "evaluate() (gammapy.modeling.models.meyercrabspectralmodel static method)": [[248, "gammapy.modeling.models.MeyerCrabSpectralModel.evaluate", false]], "evaluate() (gammapy.modeling.models.naimaspectralmodel method)": [[252, "gammapy.modeling.models.NaimaSpectralModel.evaluate", false]], "evaluate() (gammapy.modeling.models.piecewisenormspatialmodel method)": [[253, "gammapy.modeling.models.PiecewiseNormSpatialModel.evaluate", false]], "evaluate() (gammapy.modeling.models.piecewisenormspectralmodel method)": [[254, "gammapy.modeling.models.PiecewiseNormSpectralModel.evaluate", false]], "evaluate() (gammapy.modeling.models.powerlaw2spectralmodel static method)": [[256, "gammapy.modeling.models.PowerLaw2SpectralModel.evaluate", false]], "evaluate() (gammapy.modeling.models.powerlawnormspectralmodel static method)": [[257, "gammapy.modeling.models.PowerLawNormSpectralModel.evaluate", false]], "evaluate() (gammapy.modeling.models.powerlawspectralmodel static method)": [[258, "gammapy.modeling.models.PowerLawSpectralModel.evaluate", false]], "evaluate() (gammapy.modeling.models.powerlawtemporalmodel static method)": [[259, "gammapy.modeling.models.PowerLawTemporalModel.evaluate", false]], "evaluate() (gammapy.modeling.models.scalespectralmodel method)": [[263, "gammapy.modeling.models.ScaleSpectralModel.evaluate", false]], "evaluate() (gammapy.modeling.models.shell2spatialmodel static method)": [[264, "gammapy.modeling.models.Shell2SpatialModel.evaluate", false]], "evaluate() (gammapy.modeling.models.shellspatialmodel static method)": [[265, "gammapy.modeling.models.ShellSpatialModel.evaluate", false]], "evaluate() (gammapy.modeling.models.sinetemporalmodel static method)": [[266, "gammapy.modeling.models.SineTemporalModel.evaluate", false]], "evaluate() (gammapy.modeling.models.skymodel method)": [[267, "gammapy.modeling.models.SkyModel.evaluate", false]], "evaluate() (gammapy.modeling.models.smoothbrokenpowerlawspectralmodel static method)": [[268, "gammapy.modeling.models.SmoothBrokenPowerLawSpectralModel.evaluate", false]], "evaluate() (gammapy.modeling.models.superexpcutoffpowerlaw3fglspectralmodel static method)": [[271, "gammapy.modeling.models.SuperExpCutoffPowerLaw3FGLSpectralModel.evaluate", false]], "evaluate() (gammapy.modeling.models.superexpcutoffpowerlaw4fgldr3spectralmodel static method)": [[272, "gammapy.modeling.models.SuperExpCutoffPowerLaw4FGLDR3SpectralModel.evaluate", false]], "evaluate() (gammapy.modeling.models.superexpcutoffpowerlaw4fglspectralmodel static method)": [[273, "gammapy.modeling.models.SuperExpCutoffPowerLaw4FGLSpectralModel.evaluate", false]], "evaluate() (gammapy.modeling.models.templatendspatialmodel method)": [[275, "gammapy.modeling.models.TemplateNDSpatialModel.evaluate", false]], "evaluate() (gammapy.modeling.models.templatendspectralmodel method)": [[276, "gammapy.modeling.models.TemplateNDSpectralModel.evaluate", false]], "evaluate() (gammapy.modeling.models.templatenpredmodel method)": [[277, "gammapy.modeling.models.TemplateNPredModel.evaluate", false]], "evaluate() (gammapy.modeling.models.templatephasecurvetemporalmodel method)": [[278, "gammapy.modeling.models.TemplatePhaseCurveTemporalModel.evaluate", false]], "evaluate() (gammapy.modeling.models.templatespatialmodel method)": [[279, "gammapy.modeling.models.TemplateSpatialModel.evaluate", false]], "evaluate() (gammapy.modeling.models.templatespectralmodel method)": [[280, "gammapy.modeling.models.TemplateSpectralModel.evaluate", false]], "evaluate() (gammapy.modeling.models.uniformprior static method)": [[282, "gammapy.modeling.models.UniformPrior.evaluate", false]], "evaluate_containment() (gammapy.irf.energydependentmultigausspsf static method)": [[157, "gammapy.irf.EnergyDependentMultiGaussPSF.evaluate_containment", false]], "evaluate_containment() (gammapy.irf.parametricpsf method)": [[167, "gammapy.irf.ParametricPSF.evaluate_containment", false]], "evaluate_containment() (gammapy.irf.psfking static method)": [[165, "gammapy.irf.PSFKing.evaluate_containment", false]], "evaluate_direct() (gammapy.irf.energydependentmultigausspsf static method)": [[157, "gammapy.irf.EnergyDependentMultiGaussPSF.evaluate_direct", false]], "evaluate_direct() (gammapy.irf.parametricpsf method)": [[167, "gammapy.irf.ParametricPSF.evaluate_direct", false]], "evaluate_direct() (gammapy.irf.psfking static method)": [[165, "gammapy.irf.PSFKing.evaluate_direct", false]], "evaluate_energy_flux() (gammapy.modeling.models.powerlawnormspectralmodel static method)": [[257, "gammapy.modeling.models.PowerLawNormSpectralModel.evaluate_energy_flux", false]], "evaluate_energy_flux() (gammapy.modeling.models.powerlawspectralmodel static method)": [[258, "gammapy.modeling.models.PowerLawSpectralModel.evaluate_energy_flux", false]], "evaluate_error() (gammapy.astro.darkmatter.darkmatterannihilationspectralmodel method)": [[19, "gammapy.astro.darkmatter.DarkMatterAnnihilationSpectralModel.evaluate_error", false]], "evaluate_error() (gammapy.astro.darkmatter.darkmatterdecayspectralmodel method)": [[20, "gammapy.astro.darkmatter.DarkMatterDecaySpectralModel.evaluate_error", false]], "evaluate_error() (gammapy.astro.darkmatter.primaryflux method)": [[26, "gammapy.astro.darkmatter.PrimaryFlux.evaluate_error", false]], "evaluate_error() (gammapy.modeling.models.brokenpowerlawspectralmodel method)": [[221, "gammapy.modeling.models.BrokenPowerLawSpectralModel.evaluate_error", false]], "evaluate_error() (gammapy.modeling.models.compoundspectralmodel method)": [[222, "gammapy.modeling.models.CompoundSpectralModel.evaluate_error", false]], "evaluate_error() (gammapy.modeling.models.constantspectralmodel method)": [[225, "gammapy.modeling.models.ConstantSpectralModel.evaluate_error", false]], "evaluate_error() (gammapy.modeling.models.eblabsorptionnormspectralmodel method)": [[229, "gammapy.modeling.models.EBLAbsorptionNormSpectralModel.evaluate_error", false]], "evaluate_error() (gammapy.modeling.models.expcutoffpowerlaw3fglspectralmodel method)": [[231, "gammapy.modeling.models.ExpCutoffPowerLaw3FGLSpectralModel.evaluate_error", false]], "evaluate_error() (gammapy.modeling.models.expcutoffpowerlawnormspectralmodel method)": [[232, "gammapy.modeling.models.ExpCutoffPowerLawNormSpectralModel.evaluate_error", false]], "evaluate_error() (gammapy.modeling.models.expcutoffpowerlawspectralmodel method)": [[233, "gammapy.modeling.models.ExpCutoffPowerLawSpectralModel.evaluate_error", false]], "evaluate_error() (gammapy.modeling.models.gaussianspectralmodel method)": [[238, "gammapy.modeling.models.GaussianSpectralModel.evaluate_error", false]], "evaluate_error() (gammapy.modeling.models.logparabolanormspectralmodel method)": [[244, "gammapy.modeling.models.LogParabolaNormSpectralModel.evaluate_error", false]], "evaluate_error() (gammapy.modeling.models.logparabolaspectralmodel method)": [[245, "gammapy.modeling.models.LogParabolaSpectralModel.evaluate_error", false]], "evaluate_error() (gammapy.modeling.models.meyercrabspectralmodel method)": [[248, "gammapy.modeling.models.MeyerCrabSpectralModel.evaluate_error", false]], "evaluate_error() (gammapy.modeling.models.naimaspectralmodel method)": [[252, "gammapy.modeling.models.NaimaSpectralModel.evaluate_error", false]], "evaluate_error() (gammapy.modeling.models.piecewisenormspectralmodel method)": [[254, "gammapy.modeling.models.PiecewiseNormSpectralModel.evaluate_error", false]], "evaluate_error() (gammapy.modeling.models.powerlaw2spectralmodel method)": [[256, "gammapy.modeling.models.PowerLaw2SpectralModel.evaluate_error", false]], "evaluate_error() (gammapy.modeling.models.powerlawnormspectralmodel method)": [[257, "gammapy.modeling.models.PowerLawNormSpectralModel.evaluate_error", false]], "evaluate_error() (gammapy.modeling.models.powerlawspectralmodel method)": [[258, "gammapy.modeling.models.PowerLawSpectralModel.evaluate_error", false]], "evaluate_error() (gammapy.modeling.models.scalespectralmodel method)": [[263, "gammapy.modeling.models.ScaleSpectralModel.evaluate_error", false]], "evaluate_error() (gammapy.modeling.models.smoothbrokenpowerlawspectralmodel method)": [[268, "gammapy.modeling.models.SmoothBrokenPowerLawSpectralModel.evaluate_error", false]], "evaluate_error() (gammapy.modeling.models.spectralmodel method)": [[270, "gammapy.modeling.models.SpectralModel.evaluate_error", false]], "evaluate_error() (gammapy.modeling.models.superexpcutoffpowerlaw3fglspectralmodel method)": [[271, "gammapy.modeling.models.SuperExpCutoffPowerLaw3FGLSpectralModel.evaluate_error", false]], "evaluate_error() (gammapy.modeling.models.superexpcutoffpowerlaw4fgldr3spectralmodel method)": [[272, "gammapy.modeling.models.SuperExpCutoffPowerLaw4FGLDR3SpectralModel.evaluate_error", false]], "evaluate_error() (gammapy.modeling.models.superexpcutoffpowerlaw4fglspectralmodel method)": [[273, "gammapy.modeling.models.SuperExpCutoffPowerLaw4FGLSpectralModel.evaluate_error", false]], "evaluate_error() (gammapy.modeling.models.templatendspectralmodel method)": [[276, "gammapy.modeling.models.TemplateNDSpectralModel.evaluate_error", false]], "evaluate_error() (gammapy.modeling.models.templatespectralmodel method)": [[280, "gammapy.modeling.models.TemplateSpectralModel.evaluate_error", false]], "evaluate_geom() (gammapy.modeling.models.constantfluxspatialmodel static method)": [[223, "gammapy.modeling.models.ConstantFluxSpatialModel.evaluate_geom", false]], "evaluate_geom() (gammapy.modeling.models.constantspatialmodel method)": [[224, "gammapy.modeling.models.ConstantSpatialModel.evaluate_geom", false]], "evaluate_geom() (gammapy.modeling.models.diskspatialmodel method)": [[228, "gammapy.modeling.models.DiskSpatialModel.evaluate_geom", false]], "evaluate_geom() (gammapy.modeling.models.fovbackgroundmodel method)": [[235, "gammapy.modeling.models.FoVBackgroundModel.evaluate_geom", false]], "evaluate_geom() (gammapy.modeling.models.gaussianspatialmodel method)": [[237, "gammapy.modeling.models.GaussianSpatialModel.evaluate_geom", false]], "evaluate_geom() (gammapy.modeling.models.generalizedgaussianspatialmodel method)": [[240, "gammapy.modeling.models.GeneralizedGaussianSpatialModel.evaluate_geom", false]], "evaluate_geom() (gammapy.modeling.models.piecewisenormspatialmodel method)": [[253, "gammapy.modeling.models.PiecewiseNormSpatialModel.evaluate_geom", false]], "evaluate_geom() (gammapy.modeling.models.pointspatialmodel method)": [[255, "gammapy.modeling.models.PointSpatialModel.evaluate_geom", false]], "evaluate_geom() (gammapy.modeling.models.shell2spatialmodel method)": [[264, "gammapy.modeling.models.Shell2SpatialModel.evaluate_geom", false]], "evaluate_geom() (gammapy.modeling.models.shellspatialmodel method)": [[265, "gammapy.modeling.models.ShellSpatialModel.evaluate_geom", false]], "evaluate_geom() (gammapy.modeling.models.skymodel method)": [[267, "gammapy.modeling.models.SkyModel.evaluate_geom", false]], "evaluate_geom() (gammapy.modeling.models.spatialmodel method)": [[269, "gammapy.modeling.models.SpatialModel.evaluate_geom", false]], "evaluate_geom() (gammapy.modeling.models.templatendspatialmodel method)": [[275, "gammapy.modeling.models.TemplateNDSpatialModel.evaluate_geom", false]], "evaluate_geom() (gammapy.modeling.models.templatespatialmodel method)": [[279, "gammapy.modeling.models.TemplateSpatialModel.evaluate_geom", false]], "evaluate_integral() (gammapy.modeling.models.powerlaw2spectralmodel static method)": [[256, "gammapy.modeling.models.PowerLaw2SpectralModel.evaluate_integral", false]], "evaluate_integral() (gammapy.modeling.models.powerlawnormspectralmodel static method)": [[257, "gammapy.modeling.models.PowerLawNormSpectralModel.evaluate_integral", false]], "evaluate_integral() (gammapy.modeling.models.powerlawspectralmodel static method)": [[258, "gammapy.modeling.models.PowerLawSpectralModel.evaluate_integral", false]], "evaluate_parameters() (gammapy.irf.energydependentmultigausspsf method)": [[157, "gammapy.irf.EnergyDependentMultiGaussPSF.evaluate_parameters", false]], "evaluate_parameters() (gammapy.irf.parametricpsf method)": [[167, "gammapy.irf.ParametricPSF.evaluate_parameters", false]], "evaluate_parameters() (gammapy.irf.psfking method)": [[165, "gammapy.irf.PSFKing.evaluate_parameters", false]], "evaluation_bin_size_min (gammapy.modeling.models.constantfluxspatialmodel attribute)": [[223, "gammapy.modeling.models.ConstantFluxSpatialModel.evaluation_bin_size_min", false]], "evaluation_bin_size_min (gammapy.modeling.models.constantspatialmodel attribute)": [[224, "gammapy.modeling.models.ConstantSpatialModel.evaluation_bin_size_min", false]], "evaluation_bin_size_min (gammapy.modeling.models.diskspatialmodel attribute)": [[228, "gammapy.modeling.models.DiskSpatialModel.evaluation_bin_size_min", false]], "evaluation_bin_size_min (gammapy.modeling.models.gaussianspatialmodel attribute)": [[237, "gammapy.modeling.models.GaussianSpatialModel.evaluation_bin_size_min", false]], "evaluation_bin_size_min (gammapy.modeling.models.generalizedgaussianspatialmodel attribute)": [[240, "gammapy.modeling.models.GeneralizedGaussianSpatialModel.evaluation_bin_size_min", false]], "evaluation_bin_size_min (gammapy.modeling.models.piecewisenormspatialmodel attribute)": [[253, "gammapy.modeling.models.PiecewiseNormSpatialModel.evaluation_bin_size_min", false]], "evaluation_bin_size_min (gammapy.modeling.models.pointspatialmodel attribute)": [[255, "gammapy.modeling.models.PointSpatialModel.evaluation_bin_size_min", false]], "evaluation_bin_size_min (gammapy.modeling.models.shell2spatialmodel attribute)": [[264, "gammapy.modeling.models.Shell2SpatialModel.evaluation_bin_size_min", false]], "evaluation_bin_size_min (gammapy.modeling.models.shellspatialmodel attribute)": [[265, "gammapy.modeling.models.ShellSpatialModel.evaluation_bin_size_min", false]], "evaluation_bin_size_min (gammapy.modeling.models.skymodel attribute)": [[267, "gammapy.modeling.models.SkyModel.evaluation_bin_size_min", false]], "evaluation_bin_size_min (gammapy.modeling.models.spatialmodel attribute)": [[269, "gammapy.modeling.models.SpatialModel.evaluation_bin_size_min", false]], "evaluation_bin_size_min (gammapy.modeling.models.templatendspatialmodel attribute)": [[275, "gammapy.modeling.models.TemplateNDSpatialModel.evaluation_bin_size_min", false]], "evaluation_bin_size_min (gammapy.modeling.models.templatespatialmodel attribute)": [[279, "gammapy.modeling.models.TemplateSpatialModel.evaluation_bin_size_min", false]], "evaluation_radius (gammapy.modeling.models.constantfluxspatialmodel attribute)": [[223, "gammapy.modeling.models.ConstantFluxSpatialModel.evaluation_radius", false]], "evaluation_radius (gammapy.modeling.models.constantspatialmodel attribute)": [[224, "gammapy.modeling.models.ConstantSpatialModel.evaluation_radius", false]], "evaluation_radius (gammapy.modeling.models.diskspatialmodel attribute)": [[228, "gammapy.modeling.models.DiskSpatialModel.evaluation_radius", false]], "evaluation_radius (gammapy.modeling.models.gaussianspatialmodel attribute)": [[237, "gammapy.modeling.models.GaussianSpatialModel.evaluation_radius", false]], "evaluation_radius (gammapy.modeling.models.generalizedgaussianspatialmodel attribute)": [[240, "gammapy.modeling.models.GeneralizedGaussianSpatialModel.evaluation_radius", false]], "evaluation_radius (gammapy.modeling.models.piecewisenormspatialmodel attribute)": [[253, "gammapy.modeling.models.PiecewiseNormSpatialModel.evaluation_radius", false]], "evaluation_radius (gammapy.modeling.models.pointspatialmodel attribute)": [[255, "gammapy.modeling.models.PointSpatialModel.evaluation_radius", false]], "evaluation_radius (gammapy.modeling.models.shell2spatialmodel attribute)": [[264, "gammapy.modeling.models.Shell2SpatialModel.evaluation_radius", false]], "evaluation_radius (gammapy.modeling.models.shellspatialmodel attribute)": [[265, "gammapy.modeling.models.ShellSpatialModel.evaluation_radius", false]], "evaluation_radius (gammapy.modeling.models.skymodel attribute)": [[267, "gammapy.modeling.models.SkyModel.evaluation_radius", false]], "evaluation_radius (gammapy.modeling.models.spatialmodel attribute)": [[269, "gammapy.modeling.models.SpatialModel.evaluation_radius", false]], "evaluation_radius (gammapy.modeling.models.templatendspatialmodel attribute)": [[275, "gammapy.modeling.models.TemplateNDSpatialModel.evaluation_radius", false]], "evaluation_radius (gammapy.modeling.models.templatenpredmodel attribute)": [[277, "gammapy.modeling.models.TemplateNPredModel.evaluation_radius", false]], "evaluation_radius (gammapy.modeling.models.templatespatialmodel attribute)": [[279, "gammapy.modeling.models.TemplateSpatialModel.evaluation_radius", false]], "evaluation_region (gammapy.modeling.models.constantfluxspatialmodel attribute)": [[223, "gammapy.modeling.models.ConstantFluxSpatialModel.evaluation_region", false]], "evaluation_region (gammapy.modeling.models.constantspatialmodel attribute)": [[224, "gammapy.modeling.models.ConstantSpatialModel.evaluation_region", false]], "evaluation_region (gammapy.modeling.models.diskspatialmodel attribute)": [[228, "gammapy.modeling.models.DiskSpatialModel.evaluation_region", false]], "evaluation_region (gammapy.modeling.models.gaussianspatialmodel attribute)": [[237, "gammapy.modeling.models.GaussianSpatialModel.evaluation_region", false]], "evaluation_region (gammapy.modeling.models.generalizedgaussianspatialmodel attribute)": [[240, "gammapy.modeling.models.GeneralizedGaussianSpatialModel.evaluation_region", false]], "evaluation_region (gammapy.modeling.models.piecewisenormspatialmodel attribute)": [[253, "gammapy.modeling.models.PiecewiseNormSpatialModel.evaluation_region", false]], "evaluation_region (gammapy.modeling.models.pointspatialmodel attribute)": [[255, "gammapy.modeling.models.PointSpatialModel.evaluation_region", false]], "evaluation_region (gammapy.modeling.models.shell2spatialmodel attribute)": [[264, "gammapy.modeling.models.Shell2SpatialModel.evaluation_region", false]], "evaluation_region (gammapy.modeling.models.shellspatialmodel attribute)": [[265, "gammapy.modeling.models.ShellSpatialModel.evaluation_region", false]], "evaluation_region (gammapy.modeling.models.skymodel attribute)": [[267, "gammapy.modeling.models.SkyModel.evaluation_region", false]], "evaluation_region (gammapy.modeling.models.spatialmodel attribute)": [[269, "gammapy.modeling.models.SpatialModel.evaluation_region", false]], "evaluation_region (gammapy.modeling.models.templatendspatialmodel attribute)": [[275, "gammapy.modeling.models.TemplateNDSpatialModel.evaluation_region", false]], "evaluation_region (gammapy.modeling.models.templatespatialmodel attribute)": [[279, "gammapy.modeling.models.TemplateSpatialModel.evaluation_region", false]], "evaluators (gammapy.datasets.mapdataset attribute)": [[103, "gammapy.datasets.MapDataset.evaluators", false]], "evaluators (gammapy.datasets.mapdatasetonoff attribute)": [[106, "gammapy.datasets.MapDatasetOnOff.evaluators", false]], "evaluators (gammapy.datasets.spectrumdataset attribute)": [[110, "gammapy.datasets.SpectrumDataset.evaluators", false]], "evaluators (gammapy.datasets.spectrumdatasetonoff attribute)": [[111, "gammapy.datasets.SpectrumDatasetOnOff.evaluators", false]], "event_det_coords() (gammapy.datasets.mapdataseteventsampler static method)": [[104, "gammapy.datasets.MapDatasetEventSampler.event_det_coords", false]], "event_det_coords() (gammapy.datasets.observationeventsampler static method)": [[109, "gammapy.datasets.ObservationEventSampler.event_det_coords", false]], "event_filter_types (gammapy.data.observationfilter attribute)": [[89, "gammapy.data.ObservationFilter.EVENT_FILTER_TYPES", false]], "event_list_meta() (gammapy.datasets.mapdataseteventsampler static method)": [[104, "gammapy.datasets.MapDatasetEventSampler.event_list_meta", false]], "event_list_meta() (gammapy.datasets.observationeventsampler static method)": [[109, "gammapy.datasets.ObservationEventSampler.event_list_meta", false]], "eventlist (class in gammapy.data)": [[83, "gammapy.data.EventList", false]], "eventlistmetadata (class in gammapy.data)": [[84, "gammapy.data.EventListMetaData", false]], "events (gammapy.data.observation attribute)": [[88, "gammapy.data.Observation.events", false]], "evolved (gammapy.astro.population.casebattacharya1998 attribute)": [[28, "gammapy.astro.population.CaseBattacharya1998.evolved", false]], "evolved (gammapy.astro.population.exponential attribute)": [[29, "gammapy.astro.population.Exponential.evolved", false]], "evolved (gammapy.astro.population.faucherkaspi2006 attribute)": [[30, "gammapy.astro.population.FaucherKaspi2006.evolved", false]], "evolved (gammapy.astro.population.lorimer2006 attribute)": [[35, "gammapy.astro.population.Lorimer2006.evolved", false]], "evolved (gammapy.astro.population.paczynski1990 attribute)": [[36, "gammapy.astro.population.Paczynski1990.evolved", false]], "evolved (gammapy.astro.population.yusifovkucuk2004 attribute)": [[39, "gammapy.astro.population.YusifovKucuk2004.evolved", false]], "evolved (gammapy.astro.population.yusifovkucuk2004b attribute)": [[40, "gammapy.astro.population.YusifovKucuk2004B.evolved", false]], "excess (gammapy.datasets.mapdataset attribute)": [[103, "gammapy.datasets.MapDataset.excess", false]], "excess (gammapy.datasets.mapdatasetonoff attribute)": [[106, "gammapy.datasets.MapDatasetOnOff.excess", false]], "excess (gammapy.datasets.spectrumdataset attribute)": [[110, "gammapy.datasets.SpectrumDataset.excess", false]], "excess (gammapy.datasets.spectrumdatasetonoff attribute)": [[111, "gammapy.datasets.SpectrumDatasetOnOff.excess", false]], "excessmapestimator (class in gammapy.estimators)": [[124, "gammapy.estimators.ExcessMapEstimator", false]], "expand_map() (gammapy.estimators.lightcurveestimator static method)": [[132, "gammapy.estimators.LightCurveEstimator.expand_map", false]], "expcutoffpowerlaw3fglspectralmodel (class in gammapy.modeling.models)": [[231, "gammapy.modeling.models.ExpCutoffPowerLaw3FGLSpectralModel", false]], "expcutoffpowerlawnormspectralmodel (class in gammapy.modeling.models)": [[232, "gammapy.modeling.models.ExpCutoffPowerLawNormSpectralModel", false]], "expcutoffpowerlawspectralmodel (class in gammapy.modeling.models)": [[233, "gammapy.modeling.models.ExpCutoffPowerLawSpectralModel", false]], "expdecaytemporalmodel (class in gammapy.modeling.models)": [[234, "gammapy.modeling.models.ExpDecayTemporalModel", false]], "expfactor (gammapy.modeling.models.superexpcutoffpowerlaw4fgldr3spectralmodel attribute)": [[272, "gammapy.modeling.models.SuperExpCutoffPowerLaw4FGLDR3SpectralModel.expfactor", false]], "expfactor (gammapy.modeling.models.superexpcutoffpowerlaw4fglspectralmodel attribute)": [[273, "gammapy.modeling.models.SuperExpCutoffPowerLaw4FGLSpectralModel.expfactor", false]], "exponential (class in gammapy.astro.population)": [[29, "gammapy.astro.population.Exponential", false]], "exposure (gammapy.datasets.mapdataset attribute)": [[103, "gammapy.datasets.MapDataset.exposure", false]], "exposure (gammapy.datasets.mapdatasetonoff attribute)": [[106, "gammapy.datasets.MapDatasetOnOff.exposure", false]], "exposure (gammapy.datasets.spectrumdataset attribute)": [[110, "gammapy.datasets.SpectrumDataset.exposure", false]], "exposure (gammapy.datasets.spectrumdatasetonoff attribute)": [[111, "gammapy.datasets.SpectrumDatasetOnOff.exposure", false]], "extend() (gammapy.data.observations method)": [[92, "gammapy.data.Observations.extend", false]], "extend() (gammapy.datasets.datasets method)": [[100, "gammapy.datasets.Datasets.extend", false]], "extend() (gammapy.modeling.models.models method)": [[251, "gammapy.modeling.models.Models.extend", false]], "f0 (gammapy.modeling.models.templatephasecurvetemporalmodel attribute)": [[278, "gammapy.modeling.models.TemplatePhaseCurveTemporalModel.f0", false]], "f1 (gammapy.modeling.models.templatephasecurvetemporalmodel attribute)": [[278, "gammapy.modeling.models.TemplatePhaseCurveTemporalModel.f1", false]], "f2 (gammapy.modeling.models.templatephasecurvetemporalmodel attribute)": [[278, "gammapy.modeling.models.TemplatePhaseCurveTemporalModel.f2", false]], "f_cash_root_cython() (in module gammapy.stats)": [[303, "gammapy.stats.f_cash_root_cython", false]], "factor (gammapy.modeling.parameter attribute)": [[217, "gammapy.modeling.Parameter.factor", false]], "factor (gammapy.modeling.priorparameter attribute)": [[219, "gammapy.modeling.PriorParameter.factor", false]], "factor_max (gammapy.modeling.parameter attribute)": [[217, "gammapy.modeling.Parameter.factor_max", false]], "factor_max (gammapy.modeling.priorparameter attribute)": [[219, "gammapy.modeling.PriorParameter.factor_max", false]], "factor_min (gammapy.modeling.parameter attribute)": [[217, "gammapy.modeling.Parameter.factor_min", false]], "factor_min (gammapy.modeling.priorparameter attribute)": [[219, "gammapy.modeling.PriorParameter.factor_min", false]], "fake() (gammapy.datasets.mapdataset method)": [[103, "gammapy.datasets.MapDataset.fake", false]], "fake() (gammapy.datasets.mapdatasetonoff method)": [[106, "gammapy.datasets.MapDatasetOnOff.fake", false]], "fake() (gammapy.datasets.spectrumdataset method)": [[110, "gammapy.datasets.SpectrumDataset.fake", false]], "fake() (gammapy.datasets.spectrumdatasetonoff method)": [[111, "gammapy.datasets.SpectrumDatasetOnOff.fake", false]], "faucherkaspi2006 (class in gammapy.astro.population)": [[30, "gammapy.astro.population.FaucherKaspi2006", false]], "faucherkaspi2006velocitybimodal (class in gammapy.astro.population)": [[31, "gammapy.astro.population.FaucherKaspi2006VelocityBimodal", false]], "faucherkaspi2006velocitymaxwellian (class in gammapy.astro.population)": [[32, "gammapy.astro.population.FaucherKaspi2006VelocityMaxwellian", false]], "faucherspiral (class in gammapy.astro.population)": [[33, "gammapy.astro.population.FaucherSpiral", false]], "fermipydatasetsreader (class in gammapy.datasets)": [[101, "gammapy.datasets.FermipyDatasetsReader", false]], "field() (gammapy.data.hduindextable method)": [[87, "gammapy.data.HDUIndexTable.field", false]], "field() (gammapy.data.observationtable method)": [[91, "gammapy.data.ObservationTable.field", false]], "fill_by_coord() (gammapy.maps.hpxmap method)": [[196, "gammapy.maps.HpxMap.fill_by_coord", false]], "fill_by_coord() (gammapy.maps.hpxndmap method)": [[197, "gammapy.maps.HpxNDMap.fill_by_coord", false]], "fill_by_coord() (gammapy.maps.map method)": [[199, "gammapy.maps.Map.fill_by_coord", false]], "fill_by_coord() (gammapy.maps.regionndmap method)": [[205, "gammapy.maps.RegionNDMap.fill_by_coord", false]], "fill_by_coord() (gammapy.maps.wcsmap method)": [[208, "gammapy.maps.WcsMap.fill_by_coord", false]], "fill_by_coord() (gammapy.maps.wcsndmap method)": [[209, "gammapy.maps.WcsNDMap.fill_by_coord", false]], "fill_by_idx() (gammapy.maps.hpxmap method)": [[196, "gammapy.maps.HpxMap.fill_by_idx", false]], "fill_by_idx() (gammapy.maps.hpxndmap method)": [[197, "gammapy.maps.HpxNDMap.fill_by_idx", false]], "fill_by_idx() (gammapy.maps.map method)": [[199, "gammapy.maps.Map.fill_by_idx", false]], "fill_by_idx() (gammapy.maps.regionndmap method)": [[205, "gammapy.maps.RegionNDMap.fill_by_idx", false]], "fill_by_idx() (gammapy.maps.wcsmap method)": [[208, "gammapy.maps.WcsMap.fill_by_idx", false]], "fill_by_idx() (gammapy.maps.wcsndmap method)": [[209, "gammapy.maps.WcsNDMap.fill_by_idx", false]], "fill_by_pix() (gammapy.maps.hpxmap method)": [[196, "gammapy.maps.HpxMap.fill_by_pix", false]], "fill_by_pix() (gammapy.maps.hpxndmap method)": [[197, "gammapy.maps.HpxNDMap.fill_by_pix", false]], "fill_by_pix() (gammapy.maps.map method)": [[199, "gammapy.maps.Map.fill_by_pix", false]], "fill_by_pix() (gammapy.maps.regionndmap method)": [[205, "gammapy.maps.RegionNDMap.fill_by_pix", false]], "fill_by_pix() (gammapy.maps.wcsmap method)": [[208, "gammapy.maps.WcsMap.fill_by_pix", false]], "fill_by_pix() (gammapy.maps.wcsndmap method)": [[209, "gammapy.maps.WcsNDMap.fill_by_pix", false]], "fill_events() (gammapy.maps.hpxmap method)": [[196, "gammapy.maps.HpxMap.fill_events", false]], "fill_events() (gammapy.maps.hpxndmap method)": [[197, "gammapy.maps.HpxNDMap.fill_events", false]], "fill_events() (gammapy.maps.map method)": [[199, "gammapy.maps.Map.fill_events", false]], "fill_events() (gammapy.maps.regionndmap method)": [[205, "gammapy.maps.RegionNDMap.fill_events", false]], "fill_events() (gammapy.maps.wcsmap method)": [[208, "gammapy.maps.WcsMap.fill_events", false]], "fill_events() (gammapy.maps.wcsndmap method)": [[209, "gammapy.maps.WcsNDMap.fill_events", false]], "filled() (gammapy.data.hduindextable method)": [[87, "gammapy.data.HDUIndexTable.filled", false]], "filled() (gammapy.data.observationtable method)": [[91, "gammapy.data.ObservationTable.filled", false]], "filter_events() (gammapy.data.observationfilter method)": [[89, "gammapy.data.ObservationFilter.filter_events", false]], "filter_gti() (gammapy.data.observationfilter method)": [[89, "gammapy.data.ObservationFilter.filter_gti", false]], "filter_success_nan (gammapy.estimators.fluxmaps attribute)": [[125, "gammapy.estimators.FluxMaps.filter_success_nan", false]], "filter_success_nan (gammapy.estimators.fluxpoints attribute)": [[127, "gammapy.estimators.FluxPoints.filter_success_nan", false]], "find_peaks() (in module gammapy.estimators.utils)": [[144, "gammapy.estimators.utils.find_peaks", false]], "find_peaks_in_flux_map() (in module gammapy.estimators.utils)": [[145, "gammapy.estimators.utils.find_peaks_in_flux_map", false]], "fit (class in gammapy.modeling)": [[214, "gammapy.modeling.Fit", false]], "fit_deriv (gammapy.astro.population.casebattacharya1998 attribute)": [[28, "gammapy.astro.population.CaseBattacharya1998.fit_deriv", false]], "fit_deriv (gammapy.astro.population.exponential attribute)": [[29, "gammapy.astro.population.Exponential.fit_deriv", false]], "fit_deriv (gammapy.astro.population.faucherkaspi2006 attribute)": [[30, "gammapy.astro.population.FaucherKaspi2006.fit_deriv", false]], "fit_deriv (gammapy.astro.population.faucherkaspi2006velocitybimodal attribute)": [[31, "gammapy.astro.population.FaucherKaspi2006VelocityBimodal.fit_deriv", false]], "fit_deriv (gammapy.astro.population.faucherkaspi2006velocitymaxwellian attribute)": [[32, "gammapy.astro.population.FaucherKaspi2006VelocityMaxwellian.fit_deriv", false]], "fit_deriv (gammapy.astro.population.lorimer2006 attribute)": [[35, "gammapy.astro.population.Lorimer2006.fit_deriv", false]], "fit_deriv (gammapy.astro.population.paczynski1990 attribute)": [[36, "gammapy.astro.population.Paczynski1990.fit_deriv", false]], "fit_deriv (gammapy.astro.population.paczynski1990velocity attribute)": [[37, "gammapy.astro.population.Paczynski1990Velocity.fit_deriv", false]], "fit_deriv (gammapy.astro.population.yusifovkucuk2004 attribute)": [[39, "gammapy.astro.population.YusifovKucuk2004.fit_deriv", false]], "fit_deriv (gammapy.astro.population.yusifovkucuk2004b attribute)": [[40, "gammapy.astro.population.YusifovKucuk2004B.fit_deriv", false]], "fitresult (class in gammapy.modeling)": [[215, "gammapy.modeling.FitResult", false]], "fittable (gammapy.astro.population.casebattacharya1998 attribute)": [[28, "gammapy.astro.population.CaseBattacharya1998.fittable", false]], "fittable (gammapy.astro.population.exponential attribute)": [[29, "gammapy.astro.population.Exponential.fittable", false]], "fittable (gammapy.astro.population.faucherkaspi2006 attribute)": [[30, "gammapy.astro.population.FaucherKaspi2006.fittable", false]], "fittable (gammapy.astro.population.faucherkaspi2006velocitybimodal attribute)": [[31, "gammapy.astro.population.FaucherKaspi2006VelocityBimodal.fittable", false]], "fittable (gammapy.astro.population.faucherkaspi2006velocitymaxwellian attribute)": [[32, "gammapy.astro.population.FaucherKaspi2006VelocityMaxwellian.fittable", false]], "fittable (gammapy.astro.population.lorimer2006 attribute)": [[35, "gammapy.astro.population.Lorimer2006.fittable", false]], "fittable (gammapy.astro.population.paczynski1990 attribute)": [[36, "gammapy.astro.population.Paczynski1990.fittable", false]], "fittable (gammapy.astro.population.paczynski1990velocity attribute)": [[37, "gammapy.astro.population.Paczynski1990Velocity.fittable", false]], "fittable (gammapy.astro.population.yusifovkucuk2004 attribute)": [[39, "gammapy.astro.population.YusifovKucuk2004.fittable", false]], "fittable (gammapy.astro.population.yusifovkucuk2004b attribute)": [[40, "gammapy.astro.population.YusifovKucuk2004B.fittable", false]], "fixed (gammapy.astro.population.casebattacharya1998 attribute)": [[28, "gammapy.astro.population.CaseBattacharya1998.fixed", false]], "fixed (gammapy.astro.population.exponential attribute)": [[29, "gammapy.astro.population.Exponential.fixed", false]], "fixed (gammapy.astro.population.faucherkaspi2006 attribute)": [[30, "gammapy.astro.population.FaucherKaspi2006.fixed", false]], "fixed (gammapy.astro.population.faucherkaspi2006velocitybimodal attribute)": [[31, "gammapy.astro.population.FaucherKaspi2006VelocityBimodal.fixed", false]], "fixed (gammapy.astro.population.faucherkaspi2006velocitymaxwellian attribute)": [[32, "gammapy.astro.population.FaucherKaspi2006VelocityMaxwellian.fixed", false]], "fixed (gammapy.astro.population.lorimer2006 attribute)": [[35, "gammapy.astro.population.Lorimer2006.fixed", false]], "fixed (gammapy.astro.population.paczynski1990 attribute)": [[36, "gammapy.astro.population.Paczynski1990.fixed", false]], "fixed (gammapy.astro.population.paczynski1990velocity attribute)": [[37, "gammapy.astro.population.Paczynski1990Velocity.fixed", false]], "fixed (gammapy.astro.population.yusifovkucuk2004 attribute)": [[39, "gammapy.astro.population.YusifovKucuk2004.fixed", false]], "fixed (gammapy.astro.population.yusifovkucuk2004b attribute)": [[40, "gammapy.astro.population.YusifovKucuk2004B.fixed", false]], "fixed_altaz (gammapy.data.fixedpointinginfo attribute)": [[85, "gammapy.data.FixedPointingInfo.fixed_altaz", false]], "fixed_icrs (gammapy.data.fixedpointinginfo attribute)": [[85, "gammapy.data.FixedPointingInfo.fixed_icrs", false]], "fixedpointinginfo (class in gammapy.data)": [[85, "gammapy.data.FixedPointingInfo", false]], "flat (gammapy.maps.mapcoord attribute)": [[202, "gammapy.maps.MapCoord.flat", false]], "flux (gammapy.estimators.fluxmaps attribute)": [[125, "gammapy.estimators.FluxMaps.flux", false]], "flux (gammapy.estimators.fluxpoints attribute)": [[127, "gammapy.estimators.FluxPoints.flux", false]], "flux_err (gammapy.estimators.fluxmaps attribute)": [[125, "gammapy.estimators.FluxMaps.flux_err", false]], "flux_err (gammapy.estimators.fluxpoints attribute)": [[127, "gammapy.estimators.FluxPoints.flux_err", false]], "flux_errn (gammapy.estimators.fluxmaps attribute)": [[125, "gammapy.estimators.FluxMaps.flux_errn", false]], "flux_errn (gammapy.estimators.fluxpoints attribute)": [[127, "gammapy.estimators.FluxPoints.flux_errn", false]], "flux_errp (gammapy.estimators.fluxmaps attribute)": [[125, "gammapy.estimators.FluxMaps.flux_errp", false]], "flux_errp (gammapy.estimators.fluxpoints attribute)": [[127, "gammapy.estimators.FluxPoints.flux_errp", false]], "flux_points (gammapy.catalog.sourcecatalogobject2fhl attribute)": [[71, "gammapy.catalog.SourceCatalogObject2FHL.flux_points", false]], "flux_points (gammapy.catalog.sourcecatalogobject2pc attribute)": [[73, "gammapy.catalog.SourceCatalogObject2PC.flux_points", false]], "flux_points (gammapy.catalog.sourcecatalogobject3fgl attribute)": [[74, "gammapy.catalog.SourceCatalogObject3FGL.flux_points", false]], "flux_points (gammapy.catalog.sourcecatalogobject3fhl attribute)": [[75, "gammapy.catalog.SourceCatalogObject3FHL.flux_points", false]], "flux_points (gammapy.catalog.sourcecatalogobject3pc attribute)": [[77, "gammapy.catalog.SourceCatalogObject3PC.flux_points", false]], "flux_points (gammapy.catalog.sourcecatalogobject4fgl attribute)": [[78, "gammapy.catalog.SourceCatalogObject4FGL.flux_points", false]], "flux_points (gammapy.catalog.sourcecatalogobjectgammacat attribute)": [[79, "gammapy.catalog.SourceCatalogObjectGammaCat.flux_points", false]], "flux_points (gammapy.catalog.sourcecatalogobjecthgps attribute)": [[80, "gammapy.catalog.SourceCatalogObjectHGPS.flux_points", false]], "flux_points_meta (gammapy.catalog.sourcecatalogobject2fhl attribute)": [[71, "gammapy.catalog.SourceCatalogObject2FHL.flux_points_meta", false]], "flux_points_meta (gammapy.catalog.sourcecatalogobject3fgl attribute)": [[74, "gammapy.catalog.SourceCatalogObject3FGL.flux_points_meta", false]], "flux_points_meta (gammapy.catalog.sourcecatalogobject3fhl attribute)": [[75, "gammapy.catalog.SourceCatalogObject3FHL.flux_points_meta", false]], "flux_points_meta (gammapy.catalog.sourcecatalogobject4fgl attribute)": [[78, "gammapy.catalog.SourceCatalogObject4FGL.flux_points_meta", false]], "flux_points_table (gammapy.catalog.sourcecatalogobject2fhl attribute)": [[71, "gammapy.catalog.SourceCatalogObject2FHL.flux_points_table", false]], "flux_points_table (gammapy.catalog.sourcecatalogobject2pc attribute)": [[73, "gammapy.catalog.SourceCatalogObject2PC.flux_points_table", false]], "flux_points_table (gammapy.catalog.sourcecatalogobject3fgl attribute)": [[74, "gammapy.catalog.SourceCatalogObject3FGL.flux_points_table", false]], "flux_points_table (gammapy.catalog.sourcecatalogobject3fhl attribute)": [[75, "gammapy.catalog.SourceCatalogObject3FHL.flux_points_table", false]], "flux_points_table (gammapy.catalog.sourcecatalogobject3pc attribute)": [[77, "gammapy.catalog.SourceCatalogObject3PC.flux_points_table", false]], "flux_points_table (gammapy.catalog.sourcecatalogobject4fgl attribute)": [[78, "gammapy.catalog.SourceCatalogObject4FGL.flux_points_table", false]], "flux_points_table (gammapy.catalog.sourcecatalogobjectgammacat attribute)": [[79, "gammapy.catalog.SourceCatalogObjectGammaCat.flux_points_table", false]], "flux_points_table (gammapy.catalog.sourcecatalogobjecthgps attribute)": [[80, "gammapy.catalog.SourceCatalogObjectHGPS.flux_points_table", false]], "flux_pred() (gammapy.datasets.fluxpointsdataset method)": [[102, "gammapy.datasets.FluxPointsDataset.flux_pred", false]], "flux_ref (gammapy.estimators.fluxmaps attribute)": [[125, "gammapy.estimators.FluxMaps.flux_ref", false]], "flux_ref (gammapy.estimators.fluxpoints attribute)": [[127, "gammapy.estimators.FluxPoints.flux_ref", false]], "flux_sensitivity (gammapy.estimators.fluxmaps attribute)": [[125, "gammapy.estimators.FluxMaps.flux_sensitivity", false]], "flux_sensitivity (gammapy.estimators.fluxpoints attribute)": [[127, "gammapy.estimators.FluxPoints.flux_sensitivity", false]], "flux_ul (gammapy.estimators.fluxmaps attribute)": [[125, "gammapy.estimators.FluxMaps.flux_ul", false]], "flux_ul (gammapy.estimators.fluxpoints attribute)": [[127, "gammapy.estimators.FluxPoints.flux_ul", false]], "fluxmaps (class in gammapy.estimators)": [[125, "gammapy.estimators.FluxMaps", false]], "fluxmetadata (class in gammapy.estimators)": [[126, "gammapy.estimators.FluxMetaData", false]], "fluxpoints (class in gammapy.estimators)": [[127, "gammapy.estimators.FluxPoints", false]], "fluxpointsdataset (class in gammapy.datasets)": [[102, "gammapy.datasets.FluxPointsDataset", false]], "fluxpointsestimator (class in gammapy.estimators)": [[128, "gammapy.estimators.FluxPointsEstimator", false]], "fluxprofileestimator (class in gammapy.estimators)": [[129, "gammapy.estimators.FluxProfileEstimator", false]], "footprint (gammapy.maps.wcsgeom attribute)": [[207, "gammapy.maps.WcsGeom.footprint", false]], "footprint_rectangle_sky_region (gammapy.maps.wcsgeom attribute)": [[207, "gammapy.maps.WcsGeom.footprint_rectangle_sky_region", false]], "format_plot_xaxis() (gammapy.maps.labelmapaxis method)": [[198, "gammapy.maps.LabelMapAxis.format_plot_xaxis", false]], "format_plot_xaxis() (gammapy.maps.mapaxis method)": [[201, "gammapy.maps.MapAxis.format_plot_xaxis", false]], "format_plot_xaxis() (gammapy.maps.timemapaxis method)": [[206, "gammapy.maps.TimeMapAxis.format_plot_xaxis", false]], "format_plot_yaxis() (gammapy.maps.mapaxis method)": [[201, "gammapy.maps.MapAxis.format_plot_yaxis", false]], "fov": [[597, "term-FoV", true]], "fov background": [[597, "term-FoV-Background", true]], "fov_alignment (gammapy.irf.background2d attribute)": [[150, "gammapy.irf.Background2D.fov_alignment", false]], "fov_alignment (gammapy.irf.background3d attribute)": [[151, "gammapy.irf.Background3D.fov_alignment", false]], "fov_alignment (gammapy.irf.backgroundirf attribute)": [[152, "gammapy.irf.BackgroundIRF.fov_alignment", false]], "fov_alignment (gammapy.irf.edispkernel attribute)": [[153, "gammapy.irf.EDispKernel.fov_alignment", false]], "fov_alignment (gammapy.irf.effectiveareatable2d attribute)": [[156, "gammapy.irf.EffectiveAreaTable2D.fov_alignment", false]], "fov_alignment (gammapy.irf.energydependentmultigausspsf attribute)": [[157, "gammapy.irf.EnergyDependentMultiGaussPSF.fov_alignment", false]], "fov_alignment (gammapy.irf.energydispersion2d attribute)": [[158, "gammapy.irf.EnergyDispersion2D.fov_alignment", false]], "fov_alignment (gammapy.irf.irf attribute)": [[160, "gammapy.irf.IRF.fov_alignment", false]], "fov_alignment (gammapy.irf.parametricpsf attribute)": [[167, "gammapy.irf.ParametricPSF.fov_alignment", false]], "fov_alignment (gammapy.irf.psf3d attribute)": [[163, "gammapy.irf.PSF3D.fov_alignment", false]], "fov_alignment (gammapy.irf.psfking attribute)": [[165, "gammapy.irf.PSFKing.fov_alignment", false]], "fov_alignment (gammapy.irf.radmax2d attribute)": [[168, "gammapy.irf.RadMax2D.fov_alignment", false]], "fov_to_sky() (in module gammapy.utils.coordinates)": [[316, "gammapy.utils.coordinates.fov_to_sky", false]], "fovalignment (class in gammapy.irf)": [[159, "gammapy.irf.FoVAlignment", false]], "fovbackgroundmaker (class in gammapy.makers)": [[173, "gammapy.makers.FoVBackgroundMaker", false]], "fovbackgroundmodel (class in gammapy.modeling.models)": [[235, "gammapy.modeling.models.FoVBackgroundModel", false]], "frame (gammapy.maps.hpxgeom attribute)": [[195, "gammapy.maps.HpxGeom.frame", false]], "frame (gammapy.maps.mapcoord attribute)": [[202, "gammapy.maps.MapCoord.frame", false]], "frame (gammapy.maps.regiongeom attribute)": [[204, "gammapy.maps.RegionGeom.frame", false]], "frame (gammapy.maps.wcsgeom attribute)": [[207, "gammapy.maps.WcsGeom.frame", false]], "frame (gammapy.modeling.models.constantfluxspatialmodel attribute)": [[223, "gammapy.modeling.models.ConstantFluxSpatialModel.frame", false]], "frame (gammapy.modeling.models.constantspatialmodel attribute)": [[224, "gammapy.modeling.models.ConstantSpatialModel.frame", false]], "frame (gammapy.modeling.models.skymodel attribute)": [[267, "gammapy.modeling.models.SkyModel.frame", false]], "free_parameters (gammapy.modeling.parameters attribute)": [[218, "gammapy.modeling.Parameters.free_parameters", false]], "free_parameters (gammapy.modeling.priorparameters attribute)": [[220, "gammapy.modeling.PriorParameters.free_parameters", false]], "freeze() (gammapy.astro.darkmatter.darkmatterannihilationspectralmodel method)": [[19, "gammapy.astro.darkmatter.DarkMatterAnnihilationSpectralModel.freeze", false]], "freeze() (gammapy.astro.darkmatter.darkmatterdecayspectralmodel method)": [[20, "gammapy.astro.darkmatter.DarkMatterDecaySpectralModel.freeze", false]], "freeze() (gammapy.astro.darkmatter.primaryflux method)": [[26, "gammapy.astro.darkmatter.PrimaryFlux.freeze", false]], "freeze() (gammapy.modeling.models.brokenpowerlawspectralmodel method)": [[221, "gammapy.modeling.models.BrokenPowerLawSpectralModel.freeze", false]], "freeze() (gammapy.modeling.models.compoundspectralmodel method)": [[222, "gammapy.modeling.models.CompoundSpectralModel.freeze", false]], "freeze() (gammapy.modeling.models.constantfluxspatialmodel method)": [[223, "gammapy.modeling.models.ConstantFluxSpatialModel.freeze", false]], "freeze() (gammapy.modeling.models.constantspatialmodel method)": [[224, "gammapy.modeling.models.ConstantSpatialModel.freeze", false]], "freeze() (gammapy.modeling.models.constantspectralmodel method)": [[225, "gammapy.modeling.models.ConstantSpectralModel.freeze", false]], "freeze() (gammapy.modeling.models.constanttemporalmodel method)": [[226, "gammapy.modeling.models.ConstantTemporalModel.freeze", false]], "freeze() (gammapy.modeling.models.datasetmodels method)": [[227, "gammapy.modeling.models.DatasetModels.freeze", false]], "freeze() (gammapy.modeling.models.diskspatialmodel method)": [[228, "gammapy.modeling.models.DiskSpatialModel.freeze", false]], "freeze() (gammapy.modeling.models.eblabsorptionnormspectralmodel method)": [[229, "gammapy.modeling.models.EBLAbsorptionNormSpectralModel.freeze", false]], "freeze() (gammapy.modeling.models.expcutoffpowerlaw3fglspectralmodel method)": [[231, "gammapy.modeling.models.ExpCutoffPowerLaw3FGLSpectralModel.freeze", false]], "freeze() (gammapy.modeling.models.expcutoffpowerlawnormspectralmodel method)": [[232, "gammapy.modeling.models.ExpCutoffPowerLawNormSpectralModel.freeze", false]], "freeze() (gammapy.modeling.models.expcutoffpowerlawspectralmodel method)": [[233, "gammapy.modeling.models.ExpCutoffPowerLawSpectralModel.freeze", false]], "freeze() (gammapy.modeling.models.expdecaytemporalmodel method)": [[234, "gammapy.modeling.models.ExpDecayTemporalModel.freeze", false]], "freeze() (gammapy.modeling.models.fovbackgroundmodel method)": [[235, "gammapy.modeling.models.FoVBackgroundModel.freeze", false]], "freeze() (gammapy.modeling.models.gaussianprior method)": [[236, "gammapy.modeling.models.GaussianPrior.freeze", false]], "freeze() (gammapy.modeling.models.gaussianspatialmodel method)": [[237, "gammapy.modeling.models.GaussianSpatialModel.freeze", false]], "freeze() (gammapy.modeling.models.gaussianspectralmodel method)": [[238, "gammapy.modeling.models.GaussianSpectralModel.freeze", false]], "freeze() (gammapy.modeling.models.gaussiantemporalmodel method)": [[239, "gammapy.modeling.models.GaussianTemporalModel.freeze", false]], "freeze() (gammapy.modeling.models.generalizedgaussianspatialmodel method)": [[240, "gammapy.modeling.models.GeneralizedGaussianSpatialModel.freeze", false]], "freeze() (gammapy.modeling.models.generalizedgaussiantemporalmodel method)": [[241, "gammapy.modeling.models.GeneralizedGaussianTemporalModel.freeze", false]], "freeze() (gammapy.modeling.models.lightcurvetemplatetemporalmodel method)": [[242, "gammapy.modeling.models.LightCurveTemplateTemporalModel.freeze", false]], "freeze() (gammapy.modeling.models.lineartemporalmodel method)": [[243, "gammapy.modeling.models.LinearTemporalModel.freeze", false]], "freeze() (gammapy.modeling.models.logparabolanormspectralmodel method)": [[244, "gammapy.modeling.models.LogParabolaNormSpectralModel.freeze", false]], "freeze() (gammapy.modeling.models.logparabolaspectralmodel method)": [[245, "gammapy.modeling.models.LogParabolaSpectralModel.freeze", false]], "freeze() (gammapy.modeling.models.loguniformprior method)": [[246, "gammapy.modeling.models.LogUniformPrior.freeze", false]], "freeze() (gammapy.modeling.models.meyercrabspectralmodel method)": [[248, "gammapy.modeling.models.MeyerCrabSpectralModel.freeze", false]], "freeze() (gammapy.modeling.models.modelbase method)": [[250, "gammapy.modeling.models.ModelBase.freeze", false]], "freeze() (gammapy.modeling.models.models method)": [[251, "gammapy.modeling.models.Models.freeze", false]], "freeze() (gammapy.modeling.models.naimaspectralmodel method)": [[252, "gammapy.modeling.models.NaimaSpectralModel.freeze", false]], "freeze() (gammapy.modeling.models.piecewisenormspatialmodel method)": [[253, "gammapy.modeling.models.PiecewiseNormSpatialModel.freeze", false]], "freeze() (gammapy.modeling.models.piecewisenormspectralmodel method)": [[254, "gammapy.modeling.models.PiecewiseNormSpectralModel.freeze", false]], "freeze() (gammapy.modeling.models.pointspatialmodel method)": [[255, "gammapy.modeling.models.PointSpatialModel.freeze", false]], "freeze() (gammapy.modeling.models.powerlaw2spectralmodel method)": [[256, "gammapy.modeling.models.PowerLaw2SpectralModel.freeze", false]], "freeze() (gammapy.modeling.models.powerlawnormspectralmodel method)": [[257, "gammapy.modeling.models.PowerLawNormSpectralModel.freeze", false]], "freeze() (gammapy.modeling.models.powerlawspectralmodel method)": [[258, "gammapy.modeling.models.PowerLawSpectralModel.freeze", false]], "freeze() (gammapy.modeling.models.powerlawtemporalmodel method)": [[259, "gammapy.modeling.models.PowerLawTemporalModel.freeze", false]], "freeze() (gammapy.modeling.models.prior method)": [[260, "gammapy.modeling.models.Prior.freeze", false]], "freeze() (gammapy.modeling.models.scalespectralmodel method)": [[263, "gammapy.modeling.models.ScaleSpectralModel.freeze", false]], "freeze() (gammapy.modeling.models.shell2spatialmodel method)": [[264, "gammapy.modeling.models.Shell2SpatialModel.freeze", false]], "freeze() (gammapy.modeling.models.shellspatialmodel method)": [[265, "gammapy.modeling.models.ShellSpatialModel.freeze", false]], "freeze() (gammapy.modeling.models.sinetemporalmodel method)": [[266, "gammapy.modeling.models.SineTemporalModel.freeze", false]], "freeze() (gammapy.modeling.models.skymodel method)": [[267, "gammapy.modeling.models.SkyModel.freeze", false]], "freeze() (gammapy.modeling.models.smoothbrokenpowerlawspectralmodel method)": [[268, "gammapy.modeling.models.SmoothBrokenPowerLawSpectralModel.freeze", false]], "freeze() (gammapy.modeling.models.spatialmodel method)": [[269, "gammapy.modeling.models.SpatialModel.freeze", false]], "freeze() (gammapy.modeling.models.spectralmodel method)": [[270, "gammapy.modeling.models.SpectralModel.freeze", false]], "freeze() (gammapy.modeling.models.superexpcutoffpowerlaw3fglspectralmodel method)": [[271, "gammapy.modeling.models.SuperExpCutoffPowerLaw3FGLSpectralModel.freeze", false]], "freeze() (gammapy.modeling.models.superexpcutoffpowerlaw4fgldr3spectralmodel method)": [[272, "gammapy.modeling.models.SuperExpCutoffPowerLaw4FGLDR3SpectralModel.freeze", false]], "freeze() (gammapy.modeling.models.superexpcutoffpowerlaw4fglspectralmodel method)": [[273, "gammapy.modeling.models.SuperExpCutoffPowerLaw4FGLSpectralModel.freeze", false]], "freeze() (gammapy.modeling.models.templatendspatialmodel method)": [[275, "gammapy.modeling.models.TemplateNDSpatialModel.freeze", false]], "freeze() (gammapy.modeling.models.templatendspectralmodel method)": [[276, "gammapy.modeling.models.TemplateNDSpectralModel.freeze", false]], "freeze() (gammapy.modeling.models.templatenpredmodel method)": [[277, "gammapy.modeling.models.TemplateNPredModel.freeze", false]], "freeze() (gammapy.modeling.models.templatephasecurvetemporalmodel method)": [[278, "gammapy.modeling.models.TemplatePhaseCurveTemporalModel.freeze", false]], "freeze() (gammapy.modeling.models.templatespatialmodel method)": [[279, "gammapy.modeling.models.TemplateSpatialModel.freeze", false]], "freeze() (gammapy.modeling.models.templatespectralmodel method)": [[280, "gammapy.modeling.models.TemplateSpectralModel.freeze", false]], "freeze() (gammapy.modeling.models.temporalmodel method)": [[281, "gammapy.modeling.models.TemporalModel.freeze", false]], "freeze() (gammapy.modeling.models.uniformprior method)": [[282, "gammapy.modeling.models.UniformPrior.freeze", false]], "freeze_all() (gammapy.modeling.parameters method)": [[218, "gammapy.modeling.Parameters.freeze_all", false]], "freeze_all() (gammapy.modeling.priorparameters method)": [[220, "gammapy.modeling.PriorParameters.freeze_all", false]], "from_aligned() (gammapy.maps.wcsgeom class method)": [[207, "gammapy.maps.WcsGeom.from_aligned", false]], "from_bounds() (gammapy.maps.mapaxis class method)": [[201, "gammapy.maps.MapAxis.from_bounds", false]], "from_default() (gammapy.maps.mapaxes class method)": [[200, "gammapy.maps.MapAxes.from_default", false]], "from_diagonal_response() (gammapy.irf.edispkernel class method)": [[153, "gammapy.irf.EDispKernel.from_diagonal_response", false]], "from_diagonal_response() (gammapy.irf.edispkernelmap class method)": [[154, "gammapy.irf.EDispKernelMap.from_diagonal_response", false]], "from_diagonal_response() (gammapy.irf.edispmap class method)": [[155, "gammapy.irf.EDispMap.from_diagonal_response", false]], "from_dict() (gammapy.astro.darkmatter.darkmatterannihilationspectralmodel class method)": [[19, "gammapy.astro.darkmatter.DarkMatterAnnihilationSpectralModel.from_dict", false]], "from_dict() (gammapy.astro.darkmatter.darkmatterdecayspectralmodel class method)": [[20, "gammapy.astro.darkmatter.DarkMatterDecaySpectralModel.from_dict", false]], "from_dict() (gammapy.astro.darkmatter.primaryflux class method)": [[26, "gammapy.astro.darkmatter.PrimaryFlux.from_dict", false]], "from_dict() (gammapy.datasets.fluxpointsdataset class method)": [[102, "gammapy.datasets.FluxPointsDataset.from_dict", false]], "from_dict() (gammapy.datasets.mapdataset class method)": [[103, "gammapy.datasets.MapDataset.from_dict", false]], "from_dict() (gammapy.datasets.mapdatasetonoff class method)": [[106, "gammapy.datasets.MapDatasetOnOff.from_dict", false]], "from_dict() (gammapy.datasets.spectrumdataset class method)": [[110, "gammapy.datasets.SpectrumDataset.from_dict", false]], "from_dict() (gammapy.datasets.spectrumdatasetonoff class method)": [[111, "gammapy.datasets.SpectrumDatasetOnOff.from_dict", false]], "from_dict() (gammapy.modeling.models.brokenpowerlawspectralmodel class method)": [[221, "gammapy.modeling.models.BrokenPowerLawSpectralModel.from_dict", false]], "from_dict() (gammapy.modeling.models.compoundspectralmodel class method)": [[222, "gammapy.modeling.models.CompoundSpectralModel.from_dict", false]], "from_dict() (gammapy.modeling.models.constantfluxspatialmodel class method)": [[223, "gammapy.modeling.models.ConstantFluxSpatialModel.from_dict", false]], "from_dict() (gammapy.modeling.models.constantspatialmodel class method)": [[224, "gammapy.modeling.models.ConstantSpatialModel.from_dict", false]], "from_dict() (gammapy.modeling.models.constantspectralmodel class method)": [[225, "gammapy.modeling.models.ConstantSpectralModel.from_dict", false]], "from_dict() (gammapy.modeling.models.constanttemporalmodel class method)": [[226, "gammapy.modeling.models.ConstantTemporalModel.from_dict", false]], "from_dict() (gammapy.modeling.models.datasetmodels class method)": [[227, "gammapy.modeling.models.DatasetModels.from_dict", false]], "from_dict() (gammapy.modeling.models.diskspatialmodel class method)": [[228, "gammapy.modeling.models.DiskSpatialModel.from_dict", false]], "from_dict() (gammapy.modeling.models.eblabsorptionnormspectralmodel class method)": [[229, "gammapy.modeling.models.EBLAbsorptionNormSpectralModel.from_dict", false]], "from_dict() (gammapy.modeling.models.expcutoffpowerlaw3fglspectralmodel class method)": [[231, "gammapy.modeling.models.ExpCutoffPowerLaw3FGLSpectralModel.from_dict", false]], "from_dict() (gammapy.modeling.models.expcutoffpowerlawnormspectralmodel class method)": [[232, "gammapy.modeling.models.ExpCutoffPowerLawNormSpectralModel.from_dict", false]], "from_dict() (gammapy.modeling.models.expcutoffpowerlawspectralmodel class method)": [[233, "gammapy.modeling.models.ExpCutoffPowerLawSpectralModel.from_dict", false]], "from_dict() (gammapy.modeling.models.expdecaytemporalmodel class method)": [[234, "gammapy.modeling.models.ExpDecayTemporalModel.from_dict", false]], "from_dict() (gammapy.modeling.models.fovbackgroundmodel class method)": [[235, "gammapy.modeling.models.FoVBackgroundModel.from_dict", false]], "from_dict() (gammapy.modeling.models.gaussianprior class method)": [[236, "gammapy.modeling.models.GaussianPrior.from_dict", false]], "from_dict() (gammapy.modeling.models.gaussianspatialmodel class method)": [[237, "gammapy.modeling.models.GaussianSpatialModel.from_dict", false]], "from_dict() (gammapy.modeling.models.gaussianspectralmodel class method)": [[238, "gammapy.modeling.models.GaussianSpectralModel.from_dict", false]], "from_dict() (gammapy.modeling.models.gaussiantemporalmodel class method)": [[239, "gammapy.modeling.models.GaussianTemporalModel.from_dict", false]], "from_dict() (gammapy.modeling.models.generalizedgaussianspatialmodel class method)": [[240, "gammapy.modeling.models.GeneralizedGaussianSpatialModel.from_dict", false]], "from_dict() (gammapy.modeling.models.generalizedgaussiantemporalmodel class method)": [[241, "gammapy.modeling.models.GeneralizedGaussianTemporalModel.from_dict", false]], "from_dict() (gammapy.modeling.models.lightcurvetemplatetemporalmodel class method)": [[242, "gammapy.modeling.models.LightCurveTemplateTemporalModel.from_dict", false]], "from_dict() (gammapy.modeling.models.lineartemporalmodel class method)": [[243, "gammapy.modeling.models.LinearTemporalModel.from_dict", false]], "from_dict() (gammapy.modeling.models.logparabolanormspectralmodel class method)": [[244, "gammapy.modeling.models.LogParabolaNormSpectralModel.from_dict", false]], "from_dict() (gammapy.modeling.models.logparabolaspectralmodel class method)": [[245, "gammapy.modeling.models.LogParabolaSpectralModel.from_dict", false]], "from_dict() (gammapy.modeling.models.loguniformprior class method)": [[246, "gammapy.modeling.models.LogUniformPrior.from_dict", false]], "from_dict() (gammapy.modeling.models.meyercrabspectralmodel class method)": [[248, "gammapy.modeling.models.MeyerCrabSpectralModel.from_dict", false]], "from_dict() (gammapy.modeling.models.model static method)": [[249, "gammapy.modeling.models.Model.from_dict", false]], "from_dict() (gammapy.modeling.models.modelbase class method)": [[250, "gammapy.modeling.models.ModelBase.from_dict", false]], "from_dict() (gammapy.modeling.models.models class method)": [[251, "gammapy.modeling.models.Models.from_dict", false]], "from_dict() (gammapy.modeling.models.naimaspectralmodel class method)": [[252, "gammapy.modeling.models.NaimaSpectralModel.from_dict", false]], "from_dict() (gammapy.modeling.models.piecewisenormspatialmodel class method)": [[253, "gammapy.modeling.models.PiecewiseNormSpatialModel.from_dict", false]], "from_dict() (gammapy.modeling.models.piecewisenormspectralmodel class method)": [[254, "gammapy.modeling.models.PiecewiseNormSpectralModel.from_dict", false]], "from_dict() (gammapy.modeling.models.pointspatialmodel class method)": [[255, "gammapy.modeling.models.PointSpatialModel.from_dict", false]], "from_dict() (gammapy.modeling.models.powerlaw2spectralmodel class method)": [[256, "gammapy.modeling.models.PowerLaw2SpectralModel.from_dict", false]], "from_dict() (gammapy.modeling.models.powerlawnormspectralmodel class method)": [[257, "gammapy.modeling.models.PowerLawNormSpectralModel.from_dict", false]], "from_dict() (gammapy.modeling.models.powerlawspectralmodel class method)": [[258, "gammapy.modeling.models.PowerLawSpectralModel.from_dict", false]], "from_dict() (gammapy.modeling.models.powerlawtemporalmodel class method)": [[259, "gammapy.modeling.models.PowerLawTemporalModel.from_dict", false]], "from_dict() (gammapy.modeling.models.prior class method)": [[260, "gammapy.modeling.models.Prior.from_dict", false]], "from_dict() (gammapy.modeling.models.scalespectralmodel class method)": [[263, "gammapy.modeling.models.ScaleSpectralModel.from_dict", false]], "from_dict() (gammapy.modeling.models.shell2spatialmodel class method)": [[264, "gammapy.modeling.models.Shell2SpatialModel.from_dict", false]], "from_dict() (gammapy.modeling.models.shellspatialmodel class method)": [[265, "gammapy.modeling.models.ShellSpatialModel.from_dict", false]], "from_dict() (gammapy.modeling.models.sinetemporalmodel class method)": [[266, "gammapy.modeling.models.SineTemporalModel.from_dict", false]], "from_dict() (gammapy.modeling.models.skymodel class method)": [[267, "gammapy.modeling.models.SkyModel.from_dict", false]], "from_dict() (gammapy.modeling.models.smoothbrokenpowerlawspectralmodel class method)": [[268, "gammapy.modeling.models.SmoothBrokenPowerLawSpectralModel.from_dict", false]], "from_dict() (gammapy.modeling.models.spatialmodel class method)": [[269, "gammapy.modeling.models.SpatialModel.from_dict", false]], "from_dict() (gammapy.modeling.models.spectralmodel class method)": [[270, "gammapy.modeling.models.SpectralModel.from_dict", false]], "from_dict() (gammapy.modeling.models.superexpcutoffpowerlaw3fglspectralmodel class method)": [[271, "gammapy.modeling.models.SuperExpCutoffPowerLaw3FGLSpectralModel.from_dict", false]], "from_dict() (gammapy.modeling.models.superexpcutoffpowerlaw4fgldr3spectralmodel class method)": [[272, "gammapy.modeling.models.SuperExpCutoffPowerLaw4FGLDR3SpectralModel.from_dict", false]], "from_dict() (gammapy.modeling.models.superexpcutoffpowerlaw4fglspectralmodel class method)": [[273, "gammapy.modeling.models.SuperExpCutoffPowerLaw4FGLSpectralModel.from_dict", false]], "from_dict() (gammapy.modeling.models.templatendspatialmodel class method)": [[275, "gammapy.modeling.models.TemplateNDSpatialModel.from_dict", false]], "from_dict() (gammapy.modeling.models.templatendspectralmodel class method)": [[276, "gammapy.modeling.models.TemplateNDSpectralModel.from_dict", false]], "from_dict() (gammapy.modeling.models.templatenpredmodel class method)": [[277, "gammapy.modeling.models.TemplateNPredModel.from_dict", false]], "from_dict() (gammapy.modeling.models.templatephasecurvetemporalmodel class method)": [[278, "gammapy.modeling.models.TemplatePhaseCurveTemporalModel.from_dict", false]], "from_dict() (gammapy.modeling.models.templatespatialmodel class method)": [[279, "gammapy.modeling.models.TemplateSpatialModel.from_dict", false]], "from_dict() (gammapy.modeling.models.templatespectralmodel class method)": [[280, "gammapy.modeling.models.TemplateSpectralModel.from_dict", false]], "from_dict() (gammapy.modeling.models.temporalmodel class method)": [[281, "gammapy.modeling.models.TemporalModel.from_dict", false]], "from_dict() (gammapy.modeling.models.uniformprior class method)": [[282, "gammapy.modeling.models.UniformPrior.from_dict", false]], "from_dict() (gammapy.modeling.parameters class method)": [[218, "gammapy.modeling.Parameters.from_dict", false]], "from_dict() (gammapy.modeling.priorparameters class method)": [[220, "gammapy.modeling.PriorParameters.from_dict", false]], "from_dir() (gammapy.data.datastore class method)": [[82, "gammapy.data.DataStore.from_dir", false]], "from_edges() (gammapy.maps.mapaxis class method)": [[201, "gammapy.maps.MapAxis.from_edges", false]], "from_edisp_kernel() (gammapy.irf.edispkernelmap class method)": [[154, "gammapy.irf.EDispKernelMap.from_edisp_kernel", false]], "from_energy_bounds() (gammapy.maps.mapaxis class method)": [[201, "gammapy.maps.MapAxis.from_energy_bounds", false]], "from_energy_edges() (gammapy.maps.mapaxis class method)": [[201, "gammapy.maps.MapAxis.from_energy_edges", false]], "from_events_files() (gammapy.data.datastore class method)": [[82, "gammapy.data.DataStore.from_events_files", false]], "from_factor_matrix() (gammapy.modeling.covariance class method)": [[212, "gammapy.modeling.Covariance.from_factor_matrix", false]], "from_file() (gammapy.data.datastore class method)": [[82, "gammapy.data.DataStore.from_file", false]], "from_fits_header() (gammapy.data.fixedpointinginfo class method)": [[85, "gammapy.data.FixedPointingInfo.from_fits_header", false]], "from_gauss() (gammapy.irf.edispkernel class method)": [[153, "gammapy.irf.EDispKernel.from_gauss", false]], "from_gauss() (gammapy.irf.edispkernelmap class method)": [[154, "gammapy.irf.EDispKernelMap.from_gauss", false]], "from_gauss() (gammapy.irf.energydispersion2d class method)": [[158, "gammapy.irf.EnergyDispersion2D.from_gauss", false]], "from_gauss() (gammapy.irf.psfkernel class method)": [[164, "gammapy.irf.PSFKernel.from_gauss", false]], "from_gauss() (gammapy.irf.psfmap class method)": [[166, "gammapy.irf.PSFMap.from_gauss", false]], "from_gauss() (gammapy.irf.recopsfmap class method)": [[169, "gammapy.irf.RecoPSFMap.from_gauss", false]], "from_geom() (gammapy.irf.edispkernelmap class method)": [[154, "gammapy.irf.EDispKernelMap.from_geom", false]], "from_geom() (gammapy.irf.edispmap class method)": [[155, "gammapy.irf.EDispMap.from_geom", false]], "from_geom() (gammapy.irf.psfmap class method)": [[166, "gammapy.irf.PSFMap.from_geom", false]], "from_geom() (gammapy.irf.recopsfmap class method)": [[169, "gammapy.irf.RecoPSFMap.from_geom", false]], "from_geom() (gammapy.maps.hpxmap static method)": [[196, "gammapy.maps.HpxMap.from_geom", false]], "from_geom() (gammapy.maps.hpxndmap static method)": [[197, "gammapy.maps.HpxNDMap.from_geom", false]], "from_geom() (gammapy.maps.map static method)": [[199, "gammapy.maps.Map.from_geom", false]], "from_geom() (gammapy.maps.maps class method)": [[203, "gammapy.maps.Maps.from_geom", false]], "from_geom() (gammapy.maps.regionndmap static method)": [[205, "gammapy.maps.RegionNDMap.from_geom", false]], "from_geom() (gammapy.maps.wcsmap static method)": [[208, "gammapy.maps.WcsMap.from_geom", false]], "from_geom() (gammapy.maps.wcsndmap static method)": [[209, "gammapy.maps.WcsNDMap.from_geom", false]], "from_geoms() (gammapy.datasets.mapdataset class method)": [[103, "gammapy.datasets.MapDataset.from_geoms", false]], "from_geoms() (gammapy.datasets.mapdatasetonoff class method)": [[106, "gammapy.datasets.MapDatasetOnOff.from_geoms", false]], "from_geoms() (gammapy.datasets.spectrumdataset class method)": [[110, "gammapy.datasets.SpectrumDataset.from_geoms", false]], "from_geoms() (gammapy.datasets.spectrumdatasetonoff class method)": [[111, "gammapy.datasets.SpectrumDatasetOnOff.from_geoms", false]], "from_gti() (gammapy.maps.timemapaxis class method)": [[206, "gammapy.maps.TimeMapAxis.from_gti", false]], "from_gti_bounds() (gammapy.maps.timemapaxis class method)": [[206, "gammapy.maps.TimeMapAxis.from_gti_bounds", false]], "from_hdu() (gammapy.maps.hpxgeom class method)": [[195, "gammapy.maps.HpxGeom.from_hdu", false]], "from_hdu() (gammapy.maps.hpxndmap class method)": [[197, "gammapy.maps.HpxNDMap.from_hdu", false]], "from_hdu() (gammapy.maps.wcsndmap class method)": [[209, "gammapy.maps.WcsNDMap.from_hdu", false]], "from_hdulist() (gammapy.datasets.mapdataset class method)": [[103, "gammapy.datasets.MapDataset.from_hdulist", false]], "from_hdulist() (gammapy.datasets.mapdatasetonoff class method)": [[106, "gammapy.datasets.MapDatasetOnOff.from_hdulist", false]], "from_hdulist() (gammapy.datasets.spectrumdataset class method)": [[110, "gammapy.datasets.SpectrumDataset.from_hdulist", false]], "from_hdulist() (gammapy.datasets.spectrumdatasetonoff class method)": [[111, "gammapy.datasets.SpectrumDatasetOnOff.from_hdulist", false]], "from_hdulist() (gammapy.estimators.fluxmaps class method)": [[125, "gammapy.estimators.FluxMaps.from_hdulist", false]], "from_hdulist() (gammapy.estimators.fluxpoints class method)": [[127, "gammapy.estimators.FluxPoints.from_hdulist", false]], "from_hdulist() (gammapy.irf.background2d class method)": [[150, "gammapy.irf.Background2D.from_hdulist", false]], "from_hdulist() (gammapy.irf.background3d class method)": [[151, "gammapy.irf.Background3D.from_hdulist", false]], "from_hdulist() (gammapy.irf.backgroundirf class method)": [[152, "gammapy.irf.BackgroundIRF.from_hdulist", false]], "from_hdulist() (gammapy.irf.edispkernel class method)": [[153, "gammapy.irf.EDispKernel.from_hdulist", false]], "from_hdulist() (gammapy.irf.edispkernelmap class method)": [[154, "gammapy.irf.EDispKernelMap.from_hdulist", false]], "from_hdulist() (gammapy.irf.edispmap class method)": [[155, "gammapy.irf.EDispMap.from_hdulist", false]], "from_hdulist() (gammapy.irf.effectiveareatable2d class method)": [[156, "gammapy.irf.EffectiveAreaTable2D.from_hdulist", false]], "from_hdulist() (gammapy.irf.energydependentmultigausspsf class method)": [[157, "gammapy.irf.EnergyDependentMultiGaussPSF.from_hdulist", false]], "from_hdulist() (gammapy.irf.energydispersion2d class method)": [[158, "gammapy.irf.EnergyDispersion2D.from_hdulist", false]], "from_hdulist() (gammapy.irf.irf class method)": [[160, "gammapy.irf.IRF.from_hdulist", false]], "from_hdulist() (gammapy.irf.irfmap class method)": [[161, "gammapy.irf.IRFMap.from_hdulist", false]], "from_hdulist() (gammapy.irf.parametricpsf class method)": [[167, "gammapy.irf.ParametricPSF.from_hdulist", false]], "from_hdulist() (gammapy.irf.psf3d class method)": [[163, "gammapy.irf.PSF3D.from_hdulist", false]], "from_hdulist() (gammapy.irf.psfking class method)": [[165, "gammapy.irf.PSFKing.from_hdulist", false]], "from_hdulist() (gammapy.irf.psfmap class method)": [[166, "gammapy.irf.PSFMap.from_hdulist", false]], "from_hdulist() (gammapy.irf.radmax2d class method)": [[168, "gammapy.irf.RadMax2D.from_hdulist", false]], "from_hdulist() (gammapy.irf.recopsfmap class method)": [[169, "gammapy.irf.RecoPSFMap.from_hdulist", false]], "from_hdulist() (gammapy.maps.geom class method)": [[194, "gammapy.maps.Geom.from_hdulist", false]], "from_hdulist() (gammapy.maps.hpxgeom class method)": [[195, "gammapy.maps.HpxGeom.from_hdulist", false]], "from_hdulist() (gammapy.maps.hpxmap class method)": [[196, "gammapy.maps.HpxMap.from_hdulist", false]], "from_hdulist() (gammapy.maps.hpxndmap class method)": [[197, "gammapy.maps.HpxNDMap.from_hdulist", false]], "from_hdulist() (gammapy.maps.map static method)": [[199, "gammapy.maps.Map.from_hdulist", false]], "from_hdulist() (gammapy.maps.maps class method)": [[203, "gammapy.maps.Maps.from_hdulist", false]], "from_hdulist() (gammapy.maps.regiongeom class method)": [[204, "gammapy.maps.RegionGeom.from_hdulist", false]], "from_hdulist() (gammapy.maps.regionndmap class method)": [[205, "gammapy.maps.RegionNDMap.from_hdulist", false]], "from_hdulist() (gammapy.maps.wcsgeom class method)": [[207, "gammapy.maps.WcsGeom.from_hdulist", false]], "from_hdulist() (gammapy.maps.wcsmap class method)": [[208, "gammapy.maps.WcsMap.from_hdulist", false]], "from_hdulist() (gammapy.maps.wcsndmap class method)": [[209, "gammapy.maps.WcsNDMap.from_hdulist", false]], "from_header() (gammapy.data.eventlistmetadata class method)": [[84, "gammapy.data.EventListMetaData.from_header", false]], "from_header() (gammapy.data.observationmetadata class method)": [[90, "gammapy.data.ObservationMetaData.from_header", false]], "from_header() (gammapy.datasets.mapdatasetmetadata class method)": [[105, "gammapy.datasets.MapDatasetMetaData.from_header", false]], "from_header() (gammapy.estimators.fluxmetadata class method)": [[126, "gammapy.estimators.FluxMetaData.from_header", false]], "from_header() (gammapy.maps.hpxgeom class method)": [[195, "gammapy.maps.HpxGeom.from_header", false]], "from_header() (gammapy.maps.wcsgeom class method)": [[207, "gammapy.maps.WcsGeom.from_header", false]], "from_irf() (gammapy.irf.radmax2d class method)": [[168, "gammapy.irf.RadMax2D.from_irf", false]], "from_log10() (gammapy.modeling.models.logparabolanormspectralmodel class method)": [[244, "gammapy.modeling.models.LogParabolaNormSpectralModel.from_log10", false]], "from_log10() (gammapy.modeling.models.logparabolaspectralmodel class method)": [[245, "gammapy.modeling.models.LogParabolaSpectralModel.from_log10", false]], "from_map_dataset() (gammapy.datasets.mapdatasetonoff class method)": [[106, "gammapy.datasets.MapDatasetOnOff.from_map_dataset", false]], "from_map_dataset() (gammapy.datasets.spectrumdatasetonoff class method)": [[111, "gammapy.datasets.SpectrumDatasetOnOff.from_map_dataset", false]], "from_maps() (gammapy.estimators.fluxmaps class method)": [[125, "gammapy.estimators.FluxMaps.from_maps", false]], "from_maps() (gammapy.estimators.fluxpoints class method)": [[127, "gammapy.estimators.FluxPoints.from_maps", false]], "from_nodes() (gammapy.maps.mapaxis class method)": [[201, "gammapy.maps.MapAxis.from_nodes", false]], "from_orm() (gammapy.analysis.analysisconfig class method)": [[16, "gammapy.analysis.AnalysisConfig.from_orm", false]], "from_orm() (gammapy.data.eventlistmetadata class method)": [[84, "gammapy.data.EventListMetaData.from_orm", false]], "from_orm() (gammapy.data.observationmetadata class method)": [[90, "gammapy.data.ObservationMetaData.from_orm", false]], "from_orm() (gammapy.datasets.mapdatasetmetadata class method)": [[105, "gammapy.datasets.MapDatasetMetaData.from_orm", false]], "from_orm() (gammapy.estimators.fluxmetadata class method)": [[126, "gammapy.estimators.FluxMetaData.from_orm", false]], "from_pandas() (gammapy.data.hduindextable class method)": [[87, "gammapy.data.HDUIndexTable.from_pandas", false]], "from_pandas() (gammapy.data.observationtable class method)": [[91, "gammapy.data.ObservationTable.from_pandas", false]], "from_parameters() (gammapy.astro.darkmatter.darkmatterannihilationspectralmodel class method)": [[19, "gammapy.astro.darkmatter.DarkMatterAnnihilationSpectralModel.from_parameters", false]], "from_parameters() (gammapy.astro.darkmatter.darkmatterdecayspectralmodel class method)": [[20, "gammapy.astro.darkmatter.DarkMatterDecaySpectralModel.from_parameters", false]], "from_parameters() (gammapy.astro.darkmatter.primaryflux class method)": [[26, "gammapy.astro.darkmatter.PrimaryFlux.from_parameters", false]], "from_parameters() (gammapy.modeling.models.brokenpowerlawspectralmodel class method)": [[221, "gammapy.modeling.models.BrokenPowerLawSpectralModel.from_parameters", false]], "from_parameters() (gammapy.modeling.models.compoundspectralmodel class method)": [[222, "gammapy.modeling.models.CompoundSpectralModel.from_parameters", false]], "from_parameters() (gammapy.modeling.models.constantfluxspatialmodel class method)": [[223, "gammapy.modeling.models.ConstantFluxSpatialModel.from_parameters", false]], "from_parameters() (gammapy.modeling.models.constantspatialmodel class method)": [[224, "gammapy.modeling.models.ConstantSpatialModel.from_parameters", false]], "from_parameters() (gammapy.modeling.models.constantspectralmodel class method)": [[225, "gammapy.modeling.models.ConstantSpectralModel.from_parameters", false]], "from_parameters() (gammapy.modeling.models.constanttemporalmodel class method)": [[226, "gammapy.modeling.models.ConstantTemporalModel.from_parameters", false]], "from_parameters() (gammapy.modeling.models.diskspatialmodel class method)": [[228, "gammapy.modeling.models.DiskSpatialModel.from_parameters", false]], "from_parameters() (gammapy.modeling.models.eblabsorptionnormspectralmodel class method)": [[229, "gammapy.modeling.models.EBLAbsorptionNormSpectralModel.from_parameters", false]], "from_parameters() (gammapy.modeling.models.expcutoffpowerlaw3fglspectralmodel class method)": [[231, "gammapy.modeling.models.ExpCutoffPowerLaw3FGLSpectralModel.from_parameters", false]], "from_parameters() (gammapy.modeling.models.expcutoffpowerlawnormspectralmodel class method)": [[232, "gammapy.modeling.models.ExpCutoffPowerLawNormSpectralModel.from_parameters", false]], "from_parameters() (gammapy.modeling.models.expcutoffpowerlawspectralmodel class method)": [[233, "gammapy.modeling.models.ExpCutoffPowerLawSpectralModel.from_parameters", false]], "from_parameters() (gammapy.modeling.models.expdecaytemporalmodel class method)": [[234, "gammapy.modeling.models.ExpDecayTemporalModel.from_parameters", false]], "from_parameters() (gammapy.modeling.models.fovbackgroundmodel class method)": [[235, "gammapy.modeling.models.FoVBackgroundModel.from_parameters", false]], "from_parameters() (gammapy.modeling.models.gaussianprior class method)": [[236, "gammapy.modeling.models.GaussianPrior.from_parameters", false]], "from_parameters() (gammapy.modeling.models.gaussianspatialmodel class method)": [[237, "gammapy.modeling.models.GaussianSpatialModel.from_parameters", false]], "from_parameters() (gammapy.modeling.models.gaussianspectralmodel class method)": [[238, "gammapy.modeling.models.GaussianSpectralModel.from_parameters", false]], "from_parameters() (gammapy.modeling.models.gaussiantemporalmodel class method)": [[239, "gammapy.modeling.models.GaussianTemporalModel.from_parameters", false]], "from_parameters() (gammapy.modeling.models.generalizedgaussianspatialmodel class method)": [[240, "gammapy.modeling.models.GeneralizedGaussianSpatialModel.from_parameters", false]], "from_parameters() (gammapy.modeling.models.generalizedgaussiantemporalmodel class method)": [[241, "gammapy.modeling.models.GeneralizedGaussianTemporalModel.from_parameters", false]], "from_parameters() (gammapy.modeling.models.lightcurvetemplatetemporalmodel class method)": [[242, "gammapy.modeling.models.LightCurveTemplateTemporalModel.from_parameters", false]], "from_parameters() (gammapy.modeling.models.lineartemporalmodel class method)": [[243, "gammapy.modeling.models.LinearTemporalModel.from_parameters", false]], "from_parameters() (gammapy.modeling.models.logparabolanormspectralmodel class method)": [[244, "gammapy.modeling.models.LogParabolaNormSpectralModel.from_parameters", false]], "from_parameters() (gammapy.modeling.models.logparabolaspectralmodel class method)": [[245, "gammapy.modeling.models.LogParabolaSpectralModel.from_parameters", false]], "from_parameters() (gammapy.modeling.models.loguniformprior class method)": [[246, "gammapy.modeling.models.LogUniformPrior.from_parameters", false]], "from_parameters() (gammapy.modeling.models.meyercrabspectralmodel class method)": [[248, "gammapy.modeling.models.MeyerCrabSpectralModel.from_parameters", false]], "from_parameters() (gammapy.modeling.models.modelbase class method)": [[250, "gammapy.modeling.models.ModelBase.from_parameters", false]], "from_parameters() (gammapy.modeling.models.naimaspectralmodel class method)": [[252, "gammapy.modeling.models.NaimaSpectralModel.from_parameters", false]], "from_parameters() (gammapy.modeling.models.piecewisenormspatialmodel class method)": [[253, "gammapy.modeling.models.PiecewiseNormSpatialModel.from_parameters", false]], "from_parameters() (gammapy.modeling.models.piecewisenormspectralmodel class method)": [[254, "gammapy.modeling.models.PiecewiseNormSpectralModel.from_parameters", false]], "from_parameters() (gammapy.modeling.models.pointspatialmodel class method)": [[255, "gammapy.modeling.models.PointSpatialModel.from_parameters", false]], "from_parameters() (gammapy.modeling.models.powerlaw2spectralmodel class method)": [[256, "gammapy.modeling.models.PowerLaw2SpectralModel.from_parameters", false]], "from_parameters() (gammapy.modeling.models.powerlawnormspectralmodel class method)": [[257, "gammapy.modeling.models.PowerLawNormSpectralModel.from_parameters", false]], "from_parameters() (gammapy.modeling.models.powerlawspectralmodel class method)": [[258, "gammapy.modeling.models.PowerLawSpectralModel.from_parameters", false]], "from_parameters() (gammapy.modeling.models.powerlawtemporalmodel class method)": [[259, "gammapy.modeling.models.PowerLawTemporalModel.from_parameters", false]], "from_parameters() (gammapy.modeling.models.prior class method)": [[260, "gammapy.modeling.models.Prior.from_parameters", false]], "from_parameters() (gammapy.modeling.models.scalespectralmodel class method)": [[263, "gammapy.modeling.models.ScaleSpectralModel.from_parameters", false]], "from_parameters() (gammapy.modeling.models.shell2spatialmodel class method)": [[264, "gammapy.modeling.models.Shell2SpatialModel.from_parameters", false]], "from_parameters() (gammapy.modeling.models.shellspatialmodel class method)": [[265, "gammapy.modeling.models.ShellSpatialModel.from_parameters", false]], "from_parameters() (gammapy.modeling.models.sinetemporalmodel class method)": [[266, "gammapy.modeling.models.SineTemporalModel.from_parameters", false]], "from_parameters() (gammapy.modeling.models.skymodel class method)": [[267, "gammapy.modeling.models.SkyModel.from_parameters", false]], "from_parameters() (gammapy.modeling.models.smoothbrokenpowerlawspectralmodel class method)": [[268, "gammapy.modeling.models.SmoothBrokenPowerLawSpectralModel.from_parameters", false]], "from_parameters() (gammapy.modeling.models.spatialmodel class method)": [[269, "gammapy.modeling.models.SpatialModel.from_parameters", false]], "from_parameters() (gammapy.modeling.models.spectralmodel class method)": [[270, "gammapy.modeling.models.SpectralModel.from_parameters", false]], "from_parameters() (gammapy.modeling.models.superexpcutoffpowerlaw3fglspectralmodel class method)": [[271, "gammapy.modeling.models.SuperExpCutoffPowerLaw3FGLSpectralModel.from_parameters", false]], "from_parameters() (gammapy.modeling.models.superexpcutoffpowerlaw4fgldr3spectralmodel class method)": [[272, "gammapy.modeling.models.SuperExpCutoffPowerLaw4FGLDR3SpectralModel.from_parameters", false]], "from_parameters() (gammapy.modeling.models.superexpcutoffpowerlaw4fglspectralmodel class method)": [[273, "gammapy.modeling.models.SuperExpCutoffPowerLaw4FGLSpectralModel.from_parameters", false]], "from_parameters() (gammapy.modeling.models.templatendspatialmodel class method)": [[275, "gammapy.modeling.models.TemplateNDSpatialModel.from_parameters", false]], "from_parameters() (gammapy.modeling.models.templatendspectralmodel class method)": [[276, "gammapy.modeling.models.TemplateNDSpectralModel.from_parameters", false]], "from_parameters() (gammapy.modeling.models.templatenpredmodel class method)": [[277, "gammapy.modeling.models.TemplateNPredModel.from_parameters", false]], "from_parameters() (gammapy.modeling.models.templatephasecurvetemporalmodel class method)": [[278, "gammapy.modeling.models.TemplatePhaseCurveTemporalModel.from_parameters", false]], "from_parameters() (gammapy.modeling.models.templatespatialmodel class method)": [[279, "gammapy.modeling.models.TemplateSpatialModel.from_parameters", false]], "from_parameters() (gammapy.modeling.models.templatespectralmodel class method)": [[280, "gammapy.modeling.models.TemplateSpectralModel.from_parameters", false]], "from_parameters() (gammapy.modeling.models.temporalmodel class method)": [[281, "gammapy.modeling.models.TemporalModel.from_parameters", false]], "from_parameters() (gammapy.modeling.models.uniformprior class method)": [[282, "gammapy.modeling.models.UniformPrior.from_parameters", false]], "from_parametrization() (gammapy.irf.effectiveareatable2d class method)": [[156, "gammapy.irf.EffectiveAreaTable2D.from_parametrization", false]], "from_position() (gammapy.modeling.models.constantfluxspatialmodel class method)": [[223, "gammapy.modeling.models.ConstantFluxSpatialModel.from_position", false]], "from_position() (gammapy.modeling.models.constantspatialmodel class method)": [[224, "gammapy.modeling.models.ConstantSpatialModel.from_position", false]], "from_position() (gammapy.modeling.models.diskspatialmodel class method)": [[228, "gammapy.modeling.models.DiskSpatialModel.from_position", false]], "from_position() (gammapy.modeling.models.gaussianspatialmodel class method)": [[237, "gammapy.modeling.models.GaussianSpatialModel.from_position", false]], "from_position() (gammapy.modeling.models.generalizedgaussianspatialmodel class method)": [[240, "gammapy.modeling.models.GeneralizedGaussianSpatialModel.from_position", false]], "from_position() (gammapy.modeling.models.piecewisenormspatialmodel class method)": [[253, "gammapy.modeling.models.PiecewiseNormSpatialModel.from_position", false]], "from_position() (gammapy.modeling.models.pointspatialmodel class method)": [[255, "gammapy.modeling.models.PointSpatialModel.from_position", false]], "from_position() (gammapy.modeling.models.shell2spatialmodel class method)": [[264, "gammapy.modeling.models.Shell2SpatialModel.from_position", false]], "from_position() (gammapy.modeling.models.shellspatialmodel class method)": [[265, "gammapy.modeling.models.ShellSpatialModel.from_position", false]], "from_position() (gammapy.modeling.models.spatialmodel class method)": [[269, "gammapy.modeling.models.SpatialModel.from_position", false]], "from_position() (gammapy.modeling.models.templatendspatialmodel class method)": [[275, "gammapy.modeling.models.TemplateNDSpatialModel.from_position", false]], "from_position() (gammapy.modeling.models.templatespatialmodel class method)": [[279, "gammapy.modeling.models.TemplateSpatialModel.from_position", false]], "from_region() (gammapy.modeling.models.diskspatialmodel class method)": [[228, "gammapy.modeling.models.DiskSpatialModel.from_region", false]], "from_region_map() (gammapy.modeling.models.templatespectralmodel class method)": [[280, "gammapy.modeling.models.TemplateSpectralModel.from_region_map", false]], "from_regions() (gammapy.maps.regiongeom class method)": [[204, "gammapy.maps.RegionGeom.from_regions", false]], "from_spatial_model() (gammapy.irf.psfkernel class method)": [[164, "gammapy.irf.PSFKernel.from_spatial_model", false]], "from_spectrum_dataset() (gammapy.datasets.spectrumdatasetonoff class method)": [[111, "gammapy.datasets.SpectrumDatasetOnOff.from_spectrum_dataset", false]], "from_stack() (gammapy.data.eventlist class method)": [[83, "gammapy.data.EventList.from_stack", false]], "from_stack() (gammapy.data.gti class method)": [[86, "gammapy.data.GTI.from_stack", false]], "from_stack() (gammapy.data.observations class method)": [[92, "gammapy.data.Observations.from_stack", false]], "from_stack() (gammapy.estimators.fluxmaps class method)": [[125, "gammapy.estimators.FluxMaps.from_stack", false]], "from_stack() (gammapy.estimators.fluxpoints class method)": [[127, "gammapy.estimators.FluxPoints.from_stack", false]], "from_stack() (gammapy.maps.hpxmap class method)": [[196, "gammapy.maps.HpxMap.from_stack", false]], "from_stack() (gammapy.maps.hpxndmap class method)": [[197, "gammapy.maps.HpxNDMap.from_stack", false]], "from_stack() (gammapy.maps.labelmapaxis class method)": [[198, "gammapy.maps.LabelMapAxis.from_stack", false]], "from_stack() (gammapy.maps.map class method)": [[199, "gammapy.maps.Map.from_stack", false]], "from_stack() (gammapy.maps.mapaxis class method)": [[201, "gammapy.maps.MapAxis.from_stack", false]], "from_stack() (gammapy.maps.regionndmap class method)": [[205, "gammapy.maps.RegionNDMap.from_stack", false]], "from_stack() (gammapy.maps.wcsmap class method)": [[208, "gammapy.maps.WcsMap.from_stack", false]], "from_stack() (gammapy.maps.wcsndmap class method)": [[209, "gammapy.maps.WcsNDMap.from_stack", false]], "from_stack() (gammapy.modeling.covariance class method)": [[212, "gammapy.modeling.Covariance.from_stack", false]], "from_stack() (gammapy.modeling.parameters class method)": [[218, "gammapy.modeling.Parameters.from_stack", false]], "from_stack() (gammapy.modeling.priorparameters class method)": [[220, "gammapy.modeling.PriorParameters.from_stack", false]], "from_table() (gammapy.estimators.fluxpoints class method)": [[127, "gammapy.estimators.FluxPoints.from_table", false]], "from_table() (gammapy.irf.background2d class method)": [[150, "gammapy.irf.Background2D.from_table", false]], "from_table() (gammapy.irf.background3d class method)": [[151, "gammapy.irf.Background3D.from_table", false]], "from_table() (gammapy.irf.backgroundirf class method)": [[152, "gammapy.irf.BackgroundIRF.from_table", false]], "from_table() (gammapy.irf.edispkernel class method)": [[153, "gammapy.irf.EDispKernel.from_table", false]], "from_table() (gammapy.irf.effectiveareatable2d class method)": [[156, "gammapy.irf.EffectiveAreaTable2D.from_table", false]], "from_table() (gammapy.irf.energydependentmultigausspsf class method)": [[157, "gammapy.irf.EnergyDependentMultiGaussPSF.from_table", false]], "from_table() (gammapy.irf.energydispersion2d class method)": [[158, "gammapy.irf.EnergyDispersion2D.from_table", false]], "from_table() (gammapy.irf.irf class method)": [[160, "gammapy.irf.IRF.from_table", false]], "from_table() (gammapy.irf.parametricpsf class method)": [[167, "gammapy.irf.ParametricPSF.from_table", false]], "from_table() (gammapy.irf.psf3d class method)": [[163, "gammapy.irf.PSF3D.from_table", false]], "from_table() (gammapy.irf.psfking class method)": [[165, "gammapy.irf.PSFKing.from_table", false]], "from_table() (gammapy.irf.radmax2d class method)": [[168, "gammapy.irf.RadMax2D.from_table", false]], "from_table() (gammapy.maps.labelmapaxis class method)": [[198, "gammapy.maps.LabelMapAxis.from_table", false]], "from_table() (gammapy.maps.mapaxes class method)": [[200, "gammapy.maps.MapAxes.from_table", false]], "from_table() (gammapy.maps.mapaxis class method)": [[201, "gammapy.maps.MapAxis.from_table", false]], "from_table() (gammapy.maps.regionndmap class method)": [[205, "gammapy.maps.RegionNDMap.from_table", false]], "from_table() (gammapy.maps.timemapaxis class method)": [[206, "gammapy.maps.TimeMapAxis.from_table", false]], "from_table() (gammapy.modeling.models.lightcurvetemplatetemporalmodel class method)": [[242, "gammapy.modeling.models.LightCurveTemplateTemporalModel.from_table", false]], "from_table_hdu() (gammapy.data.gti class method)": [[86, "gammapy.data.GTI.from_table_hdu", false]], "from_table_hdu() (gammapy.maps.mapaxes class method)": [[200, "gammapy.maps.MapAxes.from_table_hdu", false]], "from_table_hdu() (gammapy.maps.mapaxis class method)": [[201, "gammapy.maps.MapAxis.from_table_hdu", false]], "from_time_bounds() (gammapy.maps.timemapaxis class method)": [[206, "gammapy.maps.TimeMapAxis.from_time_bounds", false]], "from_time_edges() (gammapy.maps.timemapaxis class method)": [[206, "gammapy.maps.TimeMapAxis.from_time_edges", false]], "from_time_intervals() (gammapy.data.gti class method)": [[86, "gammapy.data.GTI.from_time_intervals", false]], "from_wcs_tiles() (gammapy.maps.hpxndmap class method)": [[197, "gammapy.maps.HpxNDMap.from_wcs_tiles", false]], "from_yaml() (gammapy.analysis.analysisconfig class method)": [[16, "gammapy.analysis.AnalysisConfig.from_yaml", false]], "from_yaml() (gammapy.modeling.models.datasetmodels class method)": [[227, "gammapy.modeling.models.DatasetModels.from_yaml", false]], "from_yaml() (gammapy.modeling.models.models class method)": [[251, "gammapy.modeling.models.Models.from_yaml", false]], "from_yaml() (in module gammapy.utils.scripts)": [[350, "gammapy.utils.scripts.from_yaml", false]], "frozen (gammapy.astro.darkmatter.darkmatterannihilationspectralmodel attribute)": [[19, "gammapy.astro.darkmatter.DarkMatterAnnihilationSpectralModel.frozen", false]], "frozen (gammapy.astro.darkmatter.darkmatterdecayspectralmodel attribute)": [[20, "gammapy.astro.darkmatter.DarkMatterDecaySpectralModel.frozen", false]], "frozen (gammapy.astro.darkmatter.primaryflux attribute)": [[26, "gammapy.astro.darkmatter.PrimaryFlux.frozen", false]], "frozen (gammapy.modeling.models.brokenpowerlawspectralmodel attribute)": [[221, "gammapy.modeling.models.BrokenPowerLawSpectralModel.frozen", false]], "frozen (gammapy.modeling.models.compoundspectralmodel attribute)": [[222, "gammapy.modeling.models.CompoundSpectralModel.frozen", false]], "frozen (gammapy.modeling.models.constantfluxspatialmodel attribute)": [[223, "gammapy.modeling.models.ConstantFluxSpatialModel.frozen", false]], "frozen (gammapy.modeling.models.constantspatialmodel attribute)": [[224, "gammapy.modeling.models.ConstantSpatialModel.frozen", false]], "frozen (gammapy.modeling.models.constantspectralmodel attribute)": [[225, "gammapy.modeling.models.ConstantSpectralModel.frozen", false]], "frozen (gammapy.modeling.models.constanttemporalmodel attribute)": [[226, "gammapy.modeling.models.ConstantTemporalModel.frozen", false]], "frozen (gammapy.modeling.models.datasetmodels attribute)": [[227, "gammapy.modeling.models.DatasetModels.frozen", false]], "frozen (gammapy.modeling.models.diskspatialmodel attribute)": [[228, "gammapy.modeling.models.DiskSpatialModel.frozen", false]], "frozen (gammapy.modeling.models.eblabsorptionnormspectralmodel attribute)": [[229, "gammapy.modeling.models.EBLAbsorptionNormSpectralModel.frozen", false]], "frozen (gammapy.modeling.models.expcutoffpowerlaw3fglspectralmodel attribute)": [[231, "gammapy.modeling.models.ExpCutoffPowerLaw3FGLSpectralModel.frozen", false]], "frozen (gammapy.modeling.models.expcutoffpowerlawnormspectralmodel attribute)": [[232, "gammapy.modeling.models.ExpCutoffPowerLawNormSpectralModel.frozen", false]], "frozen (gammapy.modeling.models.expcutoffpowerlawspectralmodel attribute)": [[233, "gammapy.modeling.models.ExpCutoffPowerLawSpectralModel.frozen", false]], "frozen (gammapy.modeling.models.expdecaytemporalmodel attribute)": [[234, "gammapy.modeling.models.ExpDecayTemporalModel.frozen", false]], "frozen (gammapy.modeling.models.fovbackgroundmodel attribute)": [[235, "gammapy.modeling.models.FoVBackgroundModel.frozen", false]], "frozen (gammapy.modeling.models.gaussianprior attribute)": [[236, "gammapy.modeling.models.GaussianPrior.frozen", false]], "frozen (gammapy.modeling.models.gaussianspatialmodel attribute)": [[237, "gammapy.modeling.models.GaussianSpatialModel.frozen", false]], "frozen (gammapy.modeling.models.gaussianspectralmodel attribute)": [[238, "gammapy.modeling.models.GaussianSpectralModel.frozen", false]], "frozen (gammapy.modeling.models.gaussiantemporalmodel attribute)": [[239, "gammapy.modeling.models.GaussianTemporalModel.frozen", false]], "frozen (gammapy.modeling.models.generalizedgaussianspatialmodel attribute)": [[240, "gammapy.modeling.models.GeneralizedGaussianSpatialModel.frozen", false]], "frozen (gammapy.modeling.models.generalizedgaussiantemporalmodel attribute)": [[241, "gammapy.modeling.models.GeneralizedGaussianTemporalModel.frozen", false]], "frozen (gammapy.modeling.models.lightcurvetemplatetemporalmodel attribute)": [[242, "gammapy.modeling.models.LightCurveTemplateTemporalModel.frozen", false]], "frozen (gammapy.modeling.models.lineartemporalmodel attribute)": [[243, "gammapy.modeling.models.LinearTemporalModel.frozen", false]], "frozen (gammapy.modeling.models.logparabolanormspectralmodel attribute)": [[244, "gammapy.modeling.models.LogParabolaNormSpectralModel.frozen", false]], "frozen (gammapy.modeling.models.logparabolaspectralmodel attribute)": [[245, "gammapy.modeling.models.LogParabolaSpectralModel.frozen", false]], "frozen (gammapy.modeling.models.loguniformprior attribute)": [[246, "gammapy.modeling.models.LogUniformPrior.frozen", false]], "frozen (gammapy.modeling.models.meyercrabspectralmodel attribute)": [[248, "gammapy.modeling.models.MeyerCrabSpectralModel.frozen", false]], "frozen (gammapy.modeling.models.modelbase attribute)": [[250, "gammapy.modeling.models.ModelBase.frozen", false]], "frozen (gammapy.modeling.models.models attribute)": [[251, "gammapy.modeling.models.Models.frozen", false]], "frozen (gammapy.modeling.models.naimaspectralmodel attribute)": [[252, "gammapy.modeling.models.NaimaSpectralModel.frozen", false]], "frozen (gammapy.modeling.models.piecewisenormspatialmodel attribute)": [[253, "gammapy.modeling.models.PiecewiseNormSpatialModel.frozen", false]], "frozen (gammapy.modeling.models.piecewisenormspectralmodel attribute)": [[254, "gammapy.modeling.models.PiecewiseNormSpectralModel.frozen", false]], "frozen (gammapy.modeling.models.pointspatialmodel attribute)": [[255, "gammapy.modeling.models.PointSpatialModel.frozen", false]], "frozen (gammapy.modeling.models.powerlaw2spectralmodel attribute)": [[256, "gammapy.modeling.models.PowerLaw2SpectralModel.frozen", false]], "frozen (gammapy.modeling.models.powerlawnormspectralmodel attribute)": [[257, "gammapy.modeling.models.PowerLawNormSpectralModel.frozen", false]], "frozen (gammapy.modeling.models.powerlawspectralmodel attribute)": [[258, "gammapy.modeling.models.PowerLawSpectralModel.frozen", false]], "frozen (gammapy.modeling.models.powerlawtemporalmodel attribute)": [[259, "gammapy.modeling.models.PowerLawTemporalModel.frozen", false]], "frozen (gammapy.modeling.models.prior attribute)": [[260, "gammapy.modeling.models.Prior.frozen", false]], "frozen (gammapy.modeling.models.scalespectralmodel attribute)": [[263, "gammapy.modeling.models.ScaleSpectralModel.frozen", false]], "frozen (gammapy.modeling.models.shell2spatialmodel attribute)": [[264, "gammapy.modeling.models.Shell2SpatialModel.frozen", false]], "frozen (gammapy.modeling.models.shellspatialmodel attribute)": [[265, "gammapy.modeling.models.ShellSpatialModel.frozen", false]], "frozen (gammapy.modeling.models.sinetemporalmodel attribute)": [[266, "gammapy.modeling.models.SineTemporalModel.frozen", false]], "frozen (gammapy.modeling.models.skymodel attribute)": [[267, "gammapy.modeling.models.SkyModel.frozen", false]], "frozen (gammapy.modeling.models.smoothbrokenpowerlawspectralmodel attribute)": [[268, "gammapy.modeling.models.SmoothBrokenPowerLawSpectralModel.frozen", false]], "frozen (gammapy.modeling.models.spatialmodel attribute)": [[269, "gammapy.modeling.models.SpatialModel.frozen", false]], "frozen (gammapy.modeling.models.spectralmodel attribute)": [[270, "gammapy.modeling.models.SpectralModel.frozen", false]], "frozen (gammapy.modeling.models.superexpcutoffpowerlaw3fglspectralmodel attribute)": [[271, "gammapy.modeling.models.SuperExpCutoffPowerLaw3FGLSpectralModel.frozen", false]], "frozen (gammapy.modeling.models.superexpcutoffpowerlaw4fgldr3spectralmodel attribute)": [[272, "gammapy.modeling.models.SuperExpCutoffPowerLaw4FGLDR3SpectralModel.frozen", false]], "frozen (gammapy.modeling.models.superexpcutoffpowerlaw4fglspectralmodel attribute)": [[273, "gammapy.modeling.models.SuperExpCutoffPowerLaw4FGLSpectralModel.frozen", false]], "frozen (gammapy.modeling.models.templatendspatialmodel attribute)": [[275, "gammapy.modeling.models.TemplateNDSpatialModel.frozen", false]], "frozen (gammapy.modeling.models.templatendspectralmodel attribute)": [[276, "gammapy.modeling.models.TemplateNDSpectralModel.frozen", false]], "frozen (gammapy.modeling.models.templatenpredmodel attribute)": [[277, "gammapy.modeling.models.TemplateNPredModel.frozen", false]], "frozen (gammapy.modeling.models.templatephasecurvetemporalmodel attribute)": [[278, "gammapy.modeling.models.TemplatePhaseCurveTemporalModel.frozen", false]], "frozen (gammapy.modeling.models.templatespatialmodel attribute)": [[279, "gammapy.modeling.models.TemplateSpatialModel.frozen", false]], "frozen (gammapy.modeling.models.templatespectralmodel attribute)": [[280, "gammapy.modeling.models.TemplateSpectralModel.frozen", false]], "frozen (gammapy.modeling.models.temporalmodel attribute)": [[281, "gammapy.modeling.models.TemporalModel.frozen", false]], "frozen (gammapy.modeling.models.uniformprior attribute)": [[282, "gammapy.modeling.models.UniformPrior.frozen", false]], "frozen (gammapy.modeling.parameter attribute)": [[217, "gammapy.modeling.Parameter.frozen", false]], "frozen (gammapy.modeling.priorparameter attribute)": [[219, "gammapy.modeling.PriorParameter.frozen", false]], "gadf": [[597, "term-GADF", true]], "galactic (gammapy.data.eventlist attribute)": [[83, "gammapy.data.EventList.galactic", false]], "galactic() (in module gammapy.utils.coordinates)": [[317, "gammapy.utils.coordinates.galactic", false]], "galactic_median (gammapy.data.eventlist attribute)": [[83, "gammapy.data.EventList.galactic_median", false]], "gammapy command line option": [[11, "cmdoption-gammapy-ignore-warnings", false], [11, "cmdoption-gammapy-log-level", false], [11, "cmdoption-gammapy-version", false]], "gammapy-analysis-config command line option": [[11, "cmdoption-gammapy-analysis-config-filename", false], [11, "cmdoption-gammapy-analysis-config-overwrite", false]], "gammapy-analysis-run command line option": [[11, "cmdoption-gammapy-analysis-run-filename", false], [11, "cmdoption-gammapy-analysis-run-out", false], [11, "cmdoption-gammapy-analysis-run-overwrite", false]], "gammapy-download-datasets command line option": [[11, "cmdoption-gammapy-download-datasets-out", false], [11, "cmdoption-gammapy-download-datasets-release", false]], "gammapy-download-notebooks command line option": [[11, "cmdoption-gammapy-download-notebooks-out", false], [11, "cmdoption-gammapy-download-notebooks-release", false]], "gammapy-info command line option": [[11, "cmdoption-gammapy-info-dependencies", false], [11, "cmdoption-gammapy-info-envvar", false], [11, "cmdoption-gammapy-info-system", false], [11, "cmdoption-gammapy-info-version", false]], "gammapy-workflow-config command line option": [[11, "cmdoption-gammapy-workflow-config-filename", false], [11, "cmdoption-gammapy-workflow-config-overwrite", false]], "gammapy-workflow-run command line option": [[11, "cmdoption-gammapy-workflow-run-filename", false]], "gammapy.analysis": [[0, "module-gammapy.analysis", false]], "gammapy.astro.darkmatter": [[1, "module-gammapy.astro.darkmatter", false]], "gammapy.astro.population": [[1, "module-gammapy.astro.population", false]], "gammapy.astro.source": [[1, "module-gammapy.astro.source", false]], "gammapy.catalog": [[2, "module-gammapy.catalog", false]], "gammapy.data": [[3, "module-gammapy.data", false]], "gammapy.datasets": [[4, "module-gammapy.datasets", false]], "gammapy.datasets.utils": [[4, "module-gammapy.datasets.utils", false]], "gammapy.estimators": [[5, "module-gammapy.estimators", false]], "gammapy.estimators.utils": [[5, "module-gammapy.estimators.utils", false]], "gammapy.irf": [[7, "module-gammapy.irf", false]], "gammapy.makers": [[8, "module-gammapy.makers", false]], "gammapy.makers.utils": [[8, "module-gammapy.makers.utils", false]], "gammapy.maps": [[9, "module-gammapy.maps", false]], "gammapy.modeling": [[10, "module-gammapy.modeling", false]], "gammapy.modeling.models": [[10, "module-gammapy.modeling.models", false]], "gammapy.modeling.models.utils": [[10, "module-gammapy.modeling.models.utils", false]], "gammapy.stats": [[12, "module-gammapy.stats", false]], "gammapy.utils.cluster": [[13, "module-gammapy.utils.cluster", false]], "gammapy.utils.coordinates": [[13, "module-gammapy.utils.coordinates", false]], "gammapy.utils.fits": [[13, "module-gammapy.utils.fits", false]], "gammapy.utils.integrate": [[13, "module-gammapy.utils.integrate", false]], "gammapy.utils.interpolation": [[13, "module-gammapy.utils.interpolation", false]], "gammapy.utils.parallel": [[13, "module-gammapy.utils.parallel", false]], "gammapy.utils.random": [[13, "module-gammapy.utils.random", false]], "gammapy.utils.regions": [[13, "module-gammapy.utils.regions", false]], "gammapy.utils.scripts": [[13, "module-gammapy.utils.scripts", false]], "gammapy.utils.table": [[13, "module-gammapy.utils.table", false]], "gammapy.utils.testing": [[13, "module-gammapy.utils.testing", false]], "gammapy.utils.time": [[13, "module-gammapy.utils.time", false]], "gammapy.utils.units": [[13, "module-gammapy.utils.units", false]], "gammapy.visualization": [[14, "module-gammapy.visualization", false]], "gaussian_component() (gammapy.catalog.sourcecataloghgps method)": [[67, "gammapy.catalog.SourceCatalogHGPS.gaussian_component", false]], "gaussianprior (class in gammapy.modeling.models)": [[236, "gammapy.modeling.models.GaussianPrior", false]], "gaussianspatialmodel (class in gammapy.modeling.models)": [[237, "gammapy.modeling.models.GaussianSpatialModel", false]], "gaussianspectralmodel (class in gammapy.modeling.models)": [[238, "gammapy.modeling.models.GaussianSpectralModel", false]], "gaussiantemporalmodel (class in gammapy.modeling.models)": [[239, "gammapy.modeling.models.GaussianTemporalModel", false]], "generalizedgaussianspatialmodel (class in gammapy.modeling.models)": [[240, "gammapy.modeling.models.GeneralizedGaussianSpatialModel", false]], "generalizedgaussiantemporalmodel (class in gammapy.modeling.models)": [[241, "gammapy.modeling.models.GeneralizedGaussianTemporalModel", false]], "geom (class in gammapy.maps)": [[194, "gammapy.maps.Geom", false]], "geom (gammapy.estimators.fluxmaps attribute)": [[125, "gammapy.estimators.FluxMaps.geom", false]], "geom (gammapy.estimators.fluxpoints attribute)": [[127, "gammapy.estimators.FluxPoints.geom", false]], "geom (gammapy.maps.hpxmap attribute)": [[196, "gammapy.maps.HpxMap.geom", false]], "geom (gammapy.maps.hpxndmap attribute)": [[197, "gammapy.maps.HpxNDMap.geom", false]], "geom (gammapy.maps.map attribute)": [[199, "gammapy.maps.Map.geom", false]], "geom (gammapy.maps.maps attribute)": [[203, "gammapy.maps.Maps.geom", false]], "geom (gammapy.maps.regionndmap attribute)": [[205, "gammapy.maps.RegionNDMap.geom", false]], "geom (gammapy.maps.wcsmap attribute)": [[208, "gammapy.maps.WcsMap.geom", false]], "geom (gammapy.maps.wcsndmap attribute)": [[209, "gammapy.maps.WcsNDMap.geom", false]], "geoms (gammapy.datasets.mapdataset attribute)": [[103, "gammapy.datasets.MapDataset.geoms", false]], "geoms (gammapy.datasets.mapdatasetonoff attribute)": [[106, "gammapy.datasets.MapDatasetOnOff.geoms", false]], "geoms (gammapy.datasets.spectrumdataset attribute)": [[110, "gammapy.datasets.SpectrumDataset.geoms", false]], "geoms (gammapy.datasets.spectrumdatasetonoff attribute)": [[111, "gammapy.datasets.SpectrumDatasetOnOff.geoms", false]], "get() (gammapy.maps.maps method)": [[203, "gammapy.maps.Maps.get", false]], "get_altaz() (gammapy.data.fixedpointinginfo method)": [[85, "gammapy.data.FixedPointingInfo.get_altaz", false]], "get_altaz() (gammapy.data.pointinginfo method)": [[94, "gammapy.data.PointingInfo.get_altaz", false]], "get_bias() (gammapy.irf.edispkernel method)": [[153, "gammapy.irf.EDispKernel.get_bias", false]], "get_bias_energy() (gammapy.irf.edispkernel method)": [[153, "gammapy.irf.EDispKernel.get_bias_energy", false]], "get_bounding_box() (gammapy.astro.population.casebattacharya1998 method)": [[28, "gammapy.astro.population.CaseBattacharya1998.get_bounding_box", false]], "get_bounding_box() (gammapy.astro.population.exponential method)": [[29, "gammapy.astro.population.Exponential.get_bounding_box", false]], "get_bounding_box() (gammapy.astro.population.faucherkaspi2006 method)": [[30, "gammapy.astro.population.FaucherKaspi2006.get_bounding_box", false]], "get_bounding_box() (gammapy.astro.population.faucherkaspi2006velocitybimodal method)": [[31, "gammapy.astro.population.FaucherKaspi2006VelocityBimodal.get_bounding_box", false]], "get_bounding_box() (gammapy.astro.population.faucherkaspi2006velocitymaxwellian method)": [[32, "gammapy.astro.population.FaucherKaspi2006VelocityMaxwellian.get_bounding_box", false]], "get_bounding_box() (gammapy.astro.population.lorimer2006 method)": [[35, "gammapy.astro.population.Lorimer2006.get_bounding_box", false]], "get_bounding_box() (gammapy.astro.population.paczynski1990 method)": [[36, "gammapy.astro.population.Paczynski1990.get_bounding_box", false]], "get_bounding_box() (gammapy.astro.population.paczynski1990velocity method)": [[37, "gammapy.astro.population.Paczynski1990Velocity.get_bounding_box", false]], "get_bounding_box() (gammapy.astro.population.yusifovkucuk2004 method)": [[39, "gammapy.astro.population.YusifovKucuk2004.get_bounding_box", false]], "get_bounding_box() (gammapy.astro.population.yusifovkucuk2004b method)": [[40, "gammapy.astro.population.YusifovKucuk2004B.get_bounding_box", false]], "get_by_coord() (gammapy.maps.hpxmap method)": [[196, "gammapy.maps.HpxMap.get_by_coord", false]], "get_by_coord() (gammapy.maps.hpxndmap method)": [[197, "gammapy.maps.HpxNDMap.get_by_coord", false]], "get_by_coord() (gammapy.maps.map method)": [[199, "gammapy.maps.Map.get_by_coord", false]], "get_by_coord() (gammapy.maps.regionndmap method)": [[205, "gammapy.maps.RegionNDMap.get_by_coord", false]], "get_by_coord() (gammapy.maps.wcsmap method)": [[208, "gammapy.maps.WcsMap.get_by_coord", false]], "get_by_coord() (gammapy.maps.wcsndmap method)": [[209, "gammapy.maps.WcsNDMap.get_by_coord", false]], "get_by_idx() (gammapy.maps.hpxmap method)": [[196, "gammapy.maps.HpxMap.get_by_idx", false]], "get_by_idx() (gammapy.maps.hpxndmap method)": [[197, "gammapy.maps.HpxNDMap.get_by_idx", false]], "get_by_idx() (gammapy.maps.map method)": [[199, "gammapy.maps.Map.get_by_idx", false]], "get_by_idx() (gammapy.maps.regionndmap method)": [[205, "gammapy.maps.RegionNDMap.get_by_idx", false]], "get_by_idx() (gammapy.maps.wcsmap method)": [[208, "gammapy.maps.WcsMap.get_by_idx", false]], "get_by_idx() (gammapy.maps.wcsndmap method)": [[209, "gammapy.maps.WcsNDMap.get_by_idx", false]], "get_by_pix() (gammapy.maps.hpxmap method)": [[196, "gammapy.maps.HpxMap.get_by_pix", false]], "get_by_pix() (gammapy.maps.hpxndmap method)": [[197, "gammapy.maps.HpxNDMap.get_by_pix", false]], "get_by_pix() (gammapy.maps.map method)": [[199, "gammapy.maps.Map.get_by_pix", false]], "get_by_pix() (gammapy.maps.regionndmap method)": [[205, "gammapy.maps.RegionNDMap.get_by_pix", false]], "get_by_pix() (gammapy.maps.wcsmap method)": [[208, "gammapy.maps.WcsMap.get_by_pix", false]], "get_by_pix() (gammapy.maps.wcsndmap method)": [[209, "gammapy.maps.WcsNDMap.get_by_pix", false]], "get_combined_flux_maps() (in module gammapy.estimators.utils)": [[146, "gammapy.estimators.utils.get_combined_flux_maps", false]], "get_combined_significance_maps() (in module gammapy.estimators.utils)": [[147, "gammapy.estimators.utils.get_combined_significance_maps", false]], "get_coord() (gammapy.maps.geom method)": [[194, "gammapy.maps.Geom.get_coord", false]], "get_coord() (gammapy.maps.hpxgeom method)": [[195, "gammapy.maps.HpxGeom.get_coord", false]], "get_coord() (gammapy.maps.mapaxes method)": [[200, "gammapy.maps.MapAxes.get_coord", false]], "get_coord() (gammapy.maps.regiongeom method)": [[204, "gammapy.maps.RegionGeom.get_coord", false]], "get_coord() (gammapy.maps.wcsgeom method)": [[207, "gammapy.maps.WcsGeom.get_coord", false]], "get_datasets() (gammapy.analysis.analysis method)": [[15, "gammapy.analysis.Analysis.get_datasets", false]], "get_edisp_kernel() (gammapy.irf.edispkernelmap method)": [[154, "gammapy.irf.EDispKernelMap.get_edisp_kernel", false]], "get_edisp_kernel() (gammapy.irf.edispmap method)": [[155, "gammapy.irf.EDispMap.get_edisp_kernel", false]], "get_excess_map() (gammapy.analysis.analysis method)": [[15, "gammapy.analysis.Analysis.get_excess_map", false]], "get_filenames() (gammapy.datasets.ogipdatasetreader method)": [[107, "gammapy.datasets.OGIPDatasetReader.get_filenames", false]], "get_filenames() (gammapy.datasets.ogipdatasetwriter static method)": [[108, "gammapy.datasets.OGIPDatasetWriter.get_filenames", false]], "get_flux_points() (gammapy.analysis.analysis method)": [[15, "gammapy.analysis.Analysis.get_flux_points", false]], "get_flux_points() (gammapy.estimators.fluxmaps method)": [[125, "gammapy.estimators.FluxMaps.get_flux_points", false]], "get_flux_points() (gammapy.estimators.fluxpoints method)": [[127, "gammapy.estimators.FluxPoints.get_flux_points", false]], "get_hdu() (gammapy.utils.fits.hdulocation method)": [[322, "gammapy.utils.fits.HDULocation.get_hdu", false]], "get_icrs() (gammapy.data.fixedpointinginfo method)": [[85, "gammapy.data.FixedPointingInfo.get_icrs", false]], "get_icrs() (gammapy.data.pointinginfo method)": [[94, "gammapy.data.PointingInfo.get_icrs", false]], "get_idx() (gammapy.maps.geom method)": [[194, "gammapy.maps.Geom.get_idx", false]], "get_idx() (gammapy.maps.hpxgeom method)": [[195, "gammapy.maps.HpxGeom.get_idx", false]], "get_idx() (gammapy.maps.regiongeom method)": [[204, "gammapy.maps.RegionGeom.get_idx", false]], "get_idx() (gammapy.maps.wcsgeom method)": [[207, "gammapy.maps.WcsGeom.get_idx", false]], "get_image_by_coord() (gammapy.maps.hpxmap method)": [[196, "gammapy.maps.HpxMap.get_image_by_coord", false]], "get_image_by_coord() (gammapy.maps.hpxndmap method)": [[197, "gammapy.maps.HpxNDMap.get_image_by_coord", false]], "get_image_by_coord() (gammapy.maps.map method)": [[199, "gammapy.maps.Map.get_image_by_coord", false]], "get_image_by_coord() (gammapy.maps.regionndmap method)": [[205, "gammapy.maps.RegionNDMap.get_image_by_coord", false]], "get_image_by_coord() (gammapy.maps.wcsmap method)": [[208, "gammapy.maps.WcsMap.get_image_by_coord", false]], "get_image_by_coord() (gammapy.maps.wcsndmap method)": [[209, "gammapy.maps.WcsNDMap.get_image_by_coord", false]], "get_image_by_idx() (gammapy.maps.hpxmap method)": [[196, "gammapy.maps.HpxMap.get_image_by_idx", false]], "get_image_by_idx() (gammapy.maps.hpxndmap method)": [[197, "gammapy.maps.HpxNDMap.get_image_by_idx", false]], "get_image_by_idx() (gammapy.maps.map method)": [[199, "gammapy.maps.Map.get_image_by_idx", false]], "get_image_by_idx() (gammapy.maps.regionndmap method)": [[205, "gammapy.maps.RegionNDMap.get_image_by_idx", false]], "get_image_by_idx() (gammapy.maps.wcsmap method)": [[208, "gammapy.maps.WcsMap.get_image_by_idx", false]], "get_image_by_idx() (gammapy.maps.wcsndmap method)": [[209, "gammapy.maps.WcsNDMap.get_image_by_idx", false]], "get_image_by_pix() (gammapy.maps.hpxmap method)": [[196, "gammapy.maps.HpxMap.get_image_by_pix", false]], "get_image_by_pix() (gammapy.maps.hpxndmap method)": [[197, "gammapy.maps.HpxNDMap.get_image_by_pix", false]], "get_image_by_pix() (gammapy.maps.map method)": [[199, "gammapy.maps.Map.get_image_by_pix", false]], "get_image_by_pix() (gammapy.maps.regionndmap method)": [[205, "gammapy.maps.RegionNDMap.get_image_by_pix", false]], "get_image_by_pix() (gammapy.maps.wcsmap method)": [[208, "gammapy.maps.WcsMap.get_image_by_pix", false]], "get_image_by_pix() (gammapy.maps.wcsndmap method)": [[209, "gammapy.maps.WcsNDMap.get_image_by_pix", false]], "get_images_paths() (in module gammapy.utils.scripts)": [[351, "gammapy.utils.scripts.get_images_paths", false]], "get_index_list() (gammapy.maps.hpxgeom static method)": [[195, "gammapy.maps.HpxGeom.get_index_list", false]], "get_irfs_features() (in module gammapy.data)": [[96, "gammapy.data.get_irfs_features", false]], "get_kernels() (gammapy.estimators.asmoothmapestimator method)": [[120, "gammapy.estimators.ASmoothMapEstimator.get_kernels", false]], "get_light_curve() (gammapy.analysis.analysis method)": [[15, "gammapy.analysis.Analysis.get_light_curve", false]], "get_mean() (gammapy.irf.edispkernel method)": [[153, "gammapy.irf.EDispKernel.get_mean", false]], "get_observations() (gammapy.analysis.analysis method)": [[15, "gammapy.analysis.Analysis.get_observations", false]], "get_observations() (gammapy.data.datastore method)": [[82, "gammapy.data.DataStore.get_observations", false]], "get_ogip_meta() (gammapy.datasets.ogipdatasetwriter method)": [[108, "gammapy.datasets.OGIPDatasetWriter.get_ogip_meta", false]], "get_pix() (gammapy.maps.wcsgeom method)": [[207, "gammapy.maps.WcsGeom.get_pix", false]], "get_pointing_altaz() (gammapy.data.observation method)": [[88, "gammapy.data.Observation.get_pointing_altaz", false]], "get_pointing_icrs() (gammapy.data.observation method)": [[88, "gammapy.data.Observation.get_pointing_icrs", false]], "get_psf_kernel() (gammapy.irf.psfmap method)": [[166, "gammapy.irf.PSFMap.get_psf_kernel", false]], "get_psf_kernel() (gammapy.irf.recopsfmap method)": [[169, "gammapy.irf.RecoPSFMap.get_psf_kernel", false]], "get_random_state() (in module gammapy.utils.random)": [[338, "gammapy.utils.random.get_random_state", false]], "get_rebinned_axis() (in module gammapy.estimators.utils)": [[148, "gammapy.estimators.utils.get_rebinned_axis", false]], "get_resolution() (gammapy.irf.edispkernel method)": [[153, "gammapy.irf.EDispKernel.get_resolution", false]], "get_scale_model() (gammapy.estimators.fluxpointsestimator method)": [[128, "gammapy.estimators.FluxPointsEstimator.get_scale_model", false]], "get_scale_model() (gammapy.estimators.fluxprofileestimator method)": [[129, "gammapy.estimators.FluxProfileEstimator.get_scale_model", false]], "get_scale_model() (gammapy.estimators.lightcurveestimator method)": [[132, "gammapy.estimators.LightCurveEstimator.get_scale_model", false]], "get_scales() (gammapy.estimators.asmoothmapestimator static method)": [[120, "gammapy.estimators.ASmoothMapEstimator.get_scales", false]], "get_spectrum() (gammapy.maps.hpxmap method)": [[196, "gammapy.maps.HpxMap.get_spectrum", false]], "get_spectrum() (gammapy.maps.hpxndmap method)": [[197, "gammapy.maps.HpxNDMap.get_spectrum", false]], "get_spectrum() (gammapy.maps.map method)": [[199, "gammapy.maps.Map.get_spectrum", false]], "get_spectrum() (gammapy.maps.regionndmap method)": [[205, "gammapy.maps.RegionNDMap.get_spectrum", false]], "get_spectrum() (gammapy.maps.wcsmap method)": [[208, "gammapy.maps.WcsMap.get_spectrum", false]], "get_spectrum() (gammapy.maps.wcsndmap method)": [[209, "gammapy.maps.WcsNDMap.get_spectrum", false]], "get_subcovariance() (gammapy.modeling.covariance method)": [[212, "gammapy.modeling.Covariance.get_subcovariance", false]], "get_valid_path() (gammapy.datasets.ogipdatasetreader method)": [[107, "gammapy.datasets.OGIPDatasetReader.get_valid_path", false]], "get_wcs_coord_and_weights() (gammapy.maps.regiongeom method)": [[204, "gammapy.maps.RegionGeom.get_wcs_coord_and_weights", false]], "get_wstat_gof_terms() (in module gammapy.stats)": [[304, "gammapy.stats.get_wstat_gof_terms", false]], "get_wstat_mu_bkg() (in module gammapy.stats)": [[305, "gammapy.stats.get_wstat_mu_bkg", false]], "global_to_local() (gammapy.maps.hpxgeom method)": [[195, "gammapy.maps.HpxGeom.global_to_local", false]], "group_by() (gammapy.data.hduindextable method)": [[87, "gammapy.data.HDUIndexTable.group_by", false]], "group_by() (gammapy.data.observationtable method)": [[91, "gammapy.data.ObservationTable.group_by", false]], "group_by_label() (gammapy.data.observations method)": [[92, "gammapy.data.Observations.group_by_label", false]], "group_table() (gammapy.data.gti method)": [[86, "gammapy.data.GTI.group_table", false]], "group_table() (gammapy.maps.mapaxis method)": [[201, "gammapy.maps.MapAxis.group_table", false]], "group_table() (gammapy.maps.timemapaxis method)": [[206, "gammapy.maps.TimeMapAxis.group_table", false]], "groups (gammapy.data.hduindextable attribute)": [[87, "gammapy.data.HDUIndexTable.groups", false]], "groups (gammapy.data.observationtable attribute)": [[91, "gammapy.data.ObservationTable.groups", false]], "gti": [[597, "term-GTI", true]], "gti (class in gammapy.data)": [[86, "gammapy.data.GTI", false]], "gti (gammapy.data.observation attribute)": [[88, "gammapy.data.Observation.gti", false]], "gti (gammapy.datasets.datasets attribute)": [[100, "gammapy.datasets.Datasets.gti", false]], "gti (gammapy.datasets.fluxpointsdataset attribute)": [[102, "gammapy.datasets.FluxPointsDataset.gti", false]], "gti (gammapy.datasets.mapdataset attribute)": [[103, "gammapy.datasets.MapDataset.gti", false]], "gti (gammapy.datasets.mapdatasetonoff attribute)": [[106, "gammapy.datasets.MapDatasetOnOff.gti", false]], "gti (gammapy.datasets.spectrumdataset attribute)": [[110, "gammapy.datasets.SpectrumDataset.gti", false]], "gti (gammapy.datasets.spectrumdatasetonoff attribute)": [[111, "gammapy.datasets.SpectrumDatasetOnOff.gti", false]], "has_any_ts (gammapy.estimators.fluxmaps attribute)": [[125, "gammapy.estimators.FluxMaps.has_any_ts", false]], "has_any_ts (gammapy.estimators.fluxpoints attribute)": [[127, "gammapy.estimators.FluxPoints.has_any_ts", false]], "has_energy_axis (gammapy.maps.geom attribute)": [[194, "gammapy.maps.Geom.has_energy_axis", false]], "has_energy_axis (gammapy.maps.hpxgeom attribute)": [[195, "gammapy.maps.HpxGeom.has_energy_axis", false]], "has_energy_axis (gammapy.maps.regiongeom attribute)": [[204, "gammapy.maps.RegionGeom.has_energy_axis", false]], "has_energy_axis (gammapy.maps.wcsgeom attribute)": [[207, "gammapy.maps.WcsGeom.has_energy_axis", false]], "has_inverse() (gammapy.astro.population.casebattacharya1998 method)": [[28, "gammapy.astro.population.CaseBattacharya1998.has_inverse", false]], "has_inverse() (gammapy.astro.population.exponential method)": [[29, "gammapy.astro.population.Exponential.has_inverse", false]], "has_inverse() (gammapy.astro.population.faucherkaspi2006 method)": [[30, "gammapy.astro.population.FaucherKaspi2006.has_inverse", false]], "has_inverse() (gammapy.astro.population.faucherkaspi2006velocitybimodal method)": [[31, "gammapy.astro.population.FaucherKaspi2006VelocityBimodal.has_inverse", false]], "has_inverse() (gammapy.astro.population.faucherkaspi2006velocitymaxwellian method)": [[32, "gammapy.astro.population.FaucherKaspi2006VelocityMaxwellian.has_inverse", false]], "has_inverse() (gammapy.astro.population.lorimer2006 method)": [[35, "gammapy.astro.population.Lorimer2006.has_inverse", false]], "has_inverse() (gammapy.astro.population.paczynski1990 method)": [[36, "gammapy.astro.population.Paczynski1990.has_inverse", false]], "has_inverse() (gammapy.astro.population.paczynski1990velocity method)": [[37, "gammapy.astro.population.Paczynski1990Velocity.has_inverse", false]], "has_inverse() (gammapy.astro.population.yusifovkucuk2004 method)": [[39, "gammapy.astro.population.YusifovKucuk2004.has_inverse", false]], "has_inverse() (gammapy.astro.population.yusifovkucuk2004b method)": [[40, "gammapy.astro.population.YusifovKucuk2004B.has_inverse", false]], "has_masked_columns (gammapy.data.hduindextable attribute)": [[87, "gammapy.data.HDUIndexTable.has_masked_columns", false]], "has_masked_columns (gammapy.data.observationtable attribute)": [[91, "gammapy.data.ObservationTable.has_masked_columns", false]], "has_masked_values (gammapy.data.hduindextable attribute)": [[87, "gammapy.data.HDUIndexTable.has_masked_values", false]], "has_masked_values (gammapy.data.observationtable attribute)": [[91, "gammapy.data.ObservationTable.has_masked_values", false]], "has_mixin_columns (gammapy.data.hduindextable attribute)": [[87, "gammapy.data.HDUIndexTable.has_mixin_columns", false]], "has_mixin_columns (gammapy.data.observationtable attribute)": [[91, "gammapy.data.ObservationTable.has_mixin_columns", false]], "has_offset_axis (gammapy.irf.background2d attribute)": [[150, "gammapy.irf.Background2D.has_offset_axis", false]], "has_offset_axis (gammapy.irf.background3d attribute)": [[151, "gammapy.irf.Background3D.has_offset_axis", false]], "has_offset_axis (gammapy.irf.backgroundirf attribute)": [[152, "gammapy.irf.BackgroundIRF.has_offset_axis", false]], "has_offset_axis (gammapy.irf.edispkernel attribute)": [[153, "gammapy.irf.EDispKernel.has_offset_axis", false]], "has_offset_axis (gammapy.irf.effectiveareatable2d attribute)": [[156, "gammapy.irf.EffectiveAreaTable2D.has_offset_axis", false]], "has_offset_axis (gammapy.irf.energydependentmultigausspsf attribute)": [[157, "gammapy.irf.EnergyDependentMultiGaussPSF.has_offset_axis", false]], "has_offset_axis (gammapy.irf.energydispersion2d attribute)": [[158, "gammapy.irf.EnergyDispersion2D.has_offset_axis", false]], "has_offset_axis (gammapy.irf.irf attribute)": [[160, "gammapy.irf.IRF.has_offset_axis", false]], "has_offset_axis (gammapy.irf.parametricpsf attribute)": [[167, "gammapy.irf.ParametricPSF.has_offset_axis", false]], "has_offset_axis (gammapy.irf.psf3d attribute)": [[163, "gammapy.irf.PSF3D.has_offset_axis", false]], "has_offset_axis (gammapy.irf.psfking attribute)": [[165, "gammapy.irf.PSFKing.has_offset_axis", false]], "has_offset_axis (gammapy.irf.radmax2d attribute)": [[168, "gammapy.irf.RadMax2D.has_offset_axis", false]], "has_single_spatial_bin (gammapy.irf.edispkernelmap attribute)": [[154, "gammapy.irf.EDispKernelMap.has_single_spatial_bin", false]], "has_single_spatial_bin (gammapy.irf.edispmap attribute)": [[155, "gammapy.irf.EDispMap.has_single_spatial_bin", false]], "has_single_spatial_bin (gammapy.irf.irfmap attribute)": [[161, "gammapy.irf.IRFMap.has_single_spatial_bin", false]], "has_single_spatial_bin (gammapy.irf.psfmap attribute)": [[166, "gammapy.irf.PSFMap.has_single_spatial_bin", false]], "has_single_spatial_bin (gammapy.irf.recopsfmap attribute)": [[169, "gammapy.irf.RecoPSFMap.has_single_spatial_bin", false]], "has_stat_profiles (gammapy.estimators.fluxmaps attribute)": [[125, "gammapy.estimators.FluxMaps.has_stat_profiles", false]], "has_stat_profiles (gammapy.estimators.fluxpoints attribute)": [[127, "gammapy.estimators.FluxPoints.has_stat_profiles", false]], "has_success (gammapy.estimators.fluxmaps attribute)": [[125, "gammapy.estimators.FluxMaps.has_success", false]], "has_success (gammapy.estimators.fluxpoints attribute)": [[127, "gammapy.estimators.FluxPoints.has_success", false]], "has_ul (gammapy.estimators.fluxmaps attribute)": [[125, "gammapy.estimators.FluxMaps.has_ul", false]], "has_ul (gammapy.estimators.fluxpoints attribute)": [[127, "gammapy.estimators.FluxPoints.has_ul", false]], "has_user_bounding_box (gammapy.astro.population.casebattacharya1998 attribute)": [[28, "gammapy.astro.population.CaseBattacharya1998.has_user_bounding_box", false]], "has_user_bounding_box (gammapy.astro.population.exponential attribute)": [[29, "gammapy.astro.population.Exponential.has_user_bounding_box", false]], "has_user_bounding_box (gammapy.astro.population.faucherkaspi2006 attribute)": [[30, "gammapy.astro.population.FaucherKaspi2006.has_user_bounding_box", false]], "has_user_bounding_box (gammapy.astro.population.faucherkaspi2006velocitybimodal attribute)": [[31, "gammapy.astro.population.FaucherKaspi2006VelocityBimodal.has_user_bounding_box", false]], "has_user_bounding_box (gammapy.astro.population.faucherkaspi2006velocitymaxwellian attribute)": [[32, "gammapy.astro.population.FaucherKaspi2006VelocityMaxwellian.has_user_bounding_box", false]], "has_user_bounding_box (gammapy.astro.population.lorimer2006 attribute)": [[35, "gammapy.astro.population.Lorimer2006.has_user_bounding_box", false]], "has_user_bounding_box (gammapy.astro.population.paczynski1990 attribute)": [[36, "gammapy.astro.population.Paczynski1990.has_user_bounding_box", false]], "has_user_bounding_box (gammapy.astro.population.paczynski1990velocity attribute)": [[37, "gammapy.astro.population.Paczynski1990Velocity.has_user_bounding_box", false]], "has_user_bounding_box (gammapy.astro.population.yusifovkucuk2004 attribute)": [[39, "gammapy.astro.population.YusifovKucuk2004.has_user_bounding_box", false]], "has_user_bounding_box (gammapy.astro.population.yusifovkucuk2004b attribute)": [[40, "gammapy.astro.population.YusifovKucuk2004B.has_user_bounding_box", false]], "has_user_inverse (gammapy.astro.population.casebattacharya1998 attribute)": [[28, "gammapy.astro.population.CaseBattacharya1998.has_user_inverse", false]], "has_user_inverse (gammapy.astro.population.exponential attribute)": [[29, "gammapy.astro.population.Exponential.has_user_inverse", false]], "has_user_inverse (gammapy.astro.population.faucherkaspi2006 attribute)": [[30, "gammapy.astro.population.FaucherKaspi2006.has_user_inverse", false]], "has_user_inverse (gammapy.astro.population.faucherkaspi2006velocitybimodal attribute)": [[31, "gammapy.astro.population.FaucherKaspi2006VelocityBimodal.has_user_inverse", false]], "has_user_inverse (gammapy.astro.population.faucherkaspi2006velocitymaxwellian attribute)": [[32, "gammapy.astro.population.FaucherKaspi2006VelocityMaxwellian.has_user_inverse", false]], "has_user_inverse (gammapy.astro.population.lorimer2006 attribute)": [[35, "gammapy.astro.population.Lorimer2006.has_user_inverse", false]], "has_user_inverse (gammapy.astro.population.paczynski1990 attribute)": [[36, "gammapy.astro.population.Paczynski1990.has_user_inverse", false]], "has_user_inverse (gammapy.astro.population.paczynski1990velocity attribute)": [[37, "gammapy.astro.population.Paczynski1990Velocity.has_user_inverse", false]], "has_user_inverse (gammapy.astro.population.yusifovkucuk2004 attribute)": [[39, "gammapy.astro.population.YusifovKucuk2004.has_user_inverse", false]], "has_user_inverse (gammapy.astro.population.yusifovkucuk2004b attribute)": [[40, "gammapy.astro.population.YusifovKucuk2004B.has_user_inverse", false]], "hdu_class_unique (gammapy.data.hduindextable attribute)": [[87, "gammapy.data.HDUIndexTable.hdu_class_unique", false]], "hdu_location() (gammapy.data.hduindextable method)": [[87, "gammapy.data.HDUIndexTable.hdu_location", false]], "hdu_type_unique (gammapy.data.hduindextable attribute)": [[87, "gammapy.data.HDUIndexTable.hdu_type_unique", false]], "hduindextable (class in gammapy.data)": [[87, "gammapy.data.HDUIndexTable", false]], "hdulocation (class in gammapy.utils.fits)": [[322, "gammapy.utils.fits.HDULocation", false]], "hierarchical_clustering() (in module gammapy.utils.cluster)": [[312, "gammapy.utils.cluster.hierarchical_clustering", false]], "hli": [[597, "term-HLI", true]], "hpxgeom (class in gammapy.maps)": [[195, "gammapy.maps.HpxGeom", false]], "hpxmap (class in gammapy.maps)": [[196, "gammapy.maps.HpxMap", false]], "hpxndmap (class in gammapy.maps)": [[197, "gammapy.maps.HpxNDMap", false]], "hstack_columns() (in module gammapy.utils.table)": [[357, "gammapy.utils.table.hstack_columns", false]], "ids (gammapy.data.observations attribute)": [[92, "gammapy.data.Observations.ids", false]], "iloc (gammapy.data.hduindextable attribute)": [[87, "gammapy.data.HDUIndexTable.iloc", false]], "iloc (gammapy.data.observationtable attribute)": [[91, "gammapy.data.ObservationTable.iloc", false]], "imageprofile (class in gammapy.estimators)": [[130, "gammapy.estimators.ImageProfile", false]], "imageprofileestimator (class in gammapy.estimators)": [[131, "gammapy.estimators.ImageProfileEstimator", false]], "in_memory_generator() (gammapy.data.observations method)": [[92, "gammapy.data.Observations.in_memory_generator", false]], "include_ssc (gammapy.modeling.models.naimaspectralmodel attribute)": [[252, "gammapy.modeling.models.NaimaSpectralModel.include_ssc", false]], "index (gammapy.modeling.models.expcutoffpowerlaw3fglspectralmodel attribute)": [[231, "gammapy.modeling.models.ExpCutoffPowerLaw3FGLSpectralModel.index", false]], "index (gammapy.modeling.models.expcutoffpowerlawnormspectralmodel attribute)": [[232, "gammapy.modeling.models.ExpCutoffPowerLawNormSpectralModel.index", false]], "index (gammapy.modeling.models.expcutoffpowerlawspectralmodel attribute)": [[233, "gammapy.modeling.models.ExpCutoffPowerLawSpectralModel.index", false]], "index (gammapy.modeling.models.powerlaw2spectralmodel attribute)": [[256, "gammapy.modeling.models.PowerLaw2SpectralModel.index", false]], "index (gammapy.modeling.models.powerlawspectralmodel attribute)": [[258, "gammapy.modeling.models.PowerLawSpectralModel.index", false]], "index() (gammapy.data.observations method)": [[92, "gammapy.data.Observations.index", false]], "index() (gammapy.datasets.datasets method)": [[100, "gammapy.datasets.Datasets.index", false]], "index() (gammapy.maps.mapaxes method)": [[200, "gammapy.maps.MapAxes.index", false]], "index() (gammapy.modeling.models.datasetmodels method)": [[227, "gammapy.modeling.models.DatasetModels.index", false]], "index() (gammapy.modeling.models.models method)": [[251, "gammapy.modeling.models.Models.index", false]], "index() (gammapy.modeling.parameters method)": [[218, "gammapy.modeling.Parameters.index", false]], "index() (gammapy.modeling.priorparameters method)": [[220, "gammapy.modeling.PriorParameters.index", false]], "index1 (gammapy.modeling.models.brokenpowerlawspectralmodel attribute)": [[221, "gammapy.modeling.models.BrokenPowerLawSpectralModel.index1", false]], "index1 (gammapy.modeling.models.smoothbrokenpowerlawspectralmodel attribute)": [[268, "gammapy.modeling.models.SmoothBrokenPowerLawSpectralModel.index1", false]], "index2 (gammapy.modeling.models.brokenpowerlawspectralmodel attribute)": [[221, "gammapy.modeling.models.BrokenPowerLawSpectralModel.index2", false]], "index2 (gammapy.modeling.models.smoothbrokenpowerlawspectralmodel attribute)": [[268, "gammapy.modeling.models.SmoothBrokenPowerLawSpectralModel.index2", false]], "index_1 (gammapy.modeling.models.superexpcutoffpowerlaw3fglspectralmodel attribute)": [[271, "gammapy.modeling.models.SuperExpCutoffPowerLaw3FGLSpectralModel.index_1", false]], "index_1 (gammapy.modeling.models.superexpcutoffpowerlaw4fgldr3spectralmodel attribute)": [[272, "gammapy.modeling.models.SuperExpCutoffPowerLaw4FGLDR3SpectralModel.index_1", false]], "index_1 (gammapy.modeling.models.superexpcutoffpowerlaw4fglspectralmodel attribute)": [[273, "gammapy.modeling.models.SuperExpCutoffPowerLaw4FGLSpectralModel.index_1", false]], "index_2 (gammapy.modeling.models.superexpcutoffpowerlaw3fglspectralmodel attribute)": [[271, "gammapy.modeling.models.SuperExpCutoffPowerLaw3FGLSpectralModel.index_2", false]], "index_2 (gammapy.modeling.models.superexpcutoffpowerlaw4fgldr3spectralmodel attribute)": [[272, "gammapy.modeling.models.SuperExpCutoffPowerLaw4FGLDR3SpectralModel.index_2", false]], "index_2 (gammapy.modeling.models.superexpcutoffpowerlaw4fglspectralmodel attribute)": [[273, "gammapy.modeling.models.SuperExpCutoffPowerLaw4FGLSpectralModel.index_2", false]], "index_column() (gammapy.data.hduindextable method)": [[87, "gammapy.data.HDUIndexTable.index_column", false]], "index_column() (gammapy.data.observationtable method)": [[91, "gammapy.data.ObservationTable.index_column", false]], "index_data() (gammapy.maps.mapaxes method)": [[200, "gammapy.maps.MapAxes.index_data", false]], "index_mode() (gammapy.data.hduindextable method)": [[87, "gammapy.data.HDUIndexTable.index_mode", false]], "index_mode() (gammapy.data.observationtable method)": [[91, "gammapy.data.ObservationTable.index_mode", false]], "indices (gammapy.data.hduindextable attribute)": [[87, "gammapy.data.HDUIndexTable.indices", false]], "indices (gammapy.data.observationtable attribute)": [[91, "gammapy.data.ObservationTable.indices", false]], "ineqcons (gammapy.astro.population.casebattacharya1998 attribute)": [[28, "gammapy.astro.population.CaseBattacharya1998.ineqcons", false]], "ineqcons (gammapy.astro.population.exponential attribute)": [[29, "gammapy.astro.population.Exponential.ineqcons", false]], "ineqcons (gammapy.astro.population.faucherkaspi2006 attribute)": [[30, "gammapy.astro.population.FaucherKaspi2006.ineqcons", false]], "ineqcons (gammapy.astro.population.faucherkaspi2006velocitybimodal attribute)": [[31, "gammapy.astro.population.FaucherKaspi2006VelocityBimodal.ineqcons", false]], "ineqcons (gammapy.astro.population.faucherkaspi2006velocitymaxwellian attribute)": [[32, "gammapy.astro.population.FaucherKaspi2006VelocityMaxwellian.ineqcons", false]], "ineqcons (gammapy.astro.population.lorimer2006 attribute)": [[35, "gammapy.astro.population.Lorimer2006.ineqcons", false]], "ineqcons (gammapy.astro.population.paczynski1990 attribute)": [[36, "gammapy.astro.population.Paczynski1990.ineqcons", false]], "ineqcons (gammapy.astro.population.paczynski1990velocity attribute)": [[37, "gammapy.astro.population.Paczynski1990Velocity.ineqcons", false]], "ineqcons (gammapy.astro.population.yusifovkucuk2004 attribute)": [[39, "gammapy.astro.population.YusifovKucuk2004.ineqcons", false]], "ineqcons (gammapy.astro.population.yusifovkucuk2004b attribute)": [[40, "gammapy.astro.population.YusifovKucuk2004B.ineqcons", false]], "info (gammapy.data.hduindextable attribute)": [[87, "gammapy.data.HDUIndexTable.info", false]], "info (gammapy.data.observationtable attribute)": [[91, "gammapy.data.ObservationTable.info", false]], "info() (gammapy.catalog.sourcecatalogobject2fhl method)": [[71, "gammapy.catalog.SourceCatalogObject2FHL.info", false]], "info() (gammapy.catalog.sourcecatalogobject2hwc method)": [[72, "gammapy.catalog.SourceCatalogObject2HWC.info", false]], "info() (gammapy.catalog.sourcecatalogobject2pc method)": [[73, "gammapy.catalog.SourceCatalogObject2PC.info", false]], "info() (gammapy.catalog.sourcecatalogobject3fgl method)": [[74, "gammapy.catalog.SourceCatalogObject3FGL.info", false]], "info() (gammapy.catalog.sourcecatalogobject3fhl method)": [[75, "gammapy.catalog.SourceCatalogObject3FHL.info", false]], "info() (gammapy.catalog.sourcecatalogobject3hwc method)": [[76, "gammapy.catalog.SourceCatalogObject3HWC.info", false]], "info() (gammapy.catalog.sourcecatalogobject3pc method)": [[77, "gammapy.catalog.SourceCatalogObject3PC.info", false]], "info() (gammapy.catalog.sourcecatalogobject4fgl method)": [[78, "gammapy.catalog.SourceCatalogObject4FGL.info", false]], "info() (gammapy.catalog.sourcecatalogobjectgammacat method)": [[79, "gammapy.catalog.SourceCatalogObjectGammaCat.info", false]], "info() (gammapy.catalog.sourcecatalogobjecthgps method)": [[80, "gammapy.catalog.SourceCatalogObjectHGPS.info", false]], "info() (gammapy.data.datastore method)": [[82, "gammapy.data.DataStore.info", false]], "info() (gammapy.irf.energydependentmultigausspsf method)": [[157, "gammapy.irf.EnergyDependentMultiGaussPSF.info", false]], "info() (gammapy.irf.parametricpsf method)": [[167, "gammapy.irf.ParametricPSF.info", false]], "info() (gammapy.irf.psf3d method)": [[163, "gammapy.irf.PSF3D.info", false]], "info() (gammapy.irf.psfking method)": [[165, "gammapy.irf.PSFKing.info", false]], "info() (gammapy.utils.fits.hdulocation method)": [[322, "gammapy.utils.fits.HDULocation.info", false]], "info_dict() (gammapy.datasets.mapdataset method)": [[103, "gammapy.datasets.MapDataset.info_dict", false]], "info_dict() (gammapy.datasets.mapdatasetonoff method)": [[106, "gammapy.datasets.MapDatasetOnOff.info_dict", false]], "info_dict() (gammapy.datasets.spectrumdataset method)": [[110, "gammapy.datasets.SpectrumDataset.info_dict", false]], "info_dict() (gammapy.datasets.spectrumdatasetonoff method)": [[111, "gammapy.datasets.SpectrumDatasetOnOff.info_dict", false]], "info_dict() (gammapy.stats.cashcountsstatistic method)": [[292, "gammapy.stats.CashCountsStatistic.info_dict", false]], "info_dict() (gammapy.stats.wstatcountsstatistic method)": [[294, "gammapy.stats.WStatCountsStatistic.info_dict", false]], "info_table() (gammapy.datasets.datasets method)": [[100, "gammapy.datasets.Datasets.info_table", false]], "input_shape() (gammapy.astro.population.casebattacharya1998 method)": [[28, "gammapy.astro.population.CaseBattacharya1998.input_shape", false]], "input_shape() (gammapy.astro.population.exponential method)": [[29, "gammapy.astro.population.Exponential.input_shape", false]], "input_shape() (gammapy.astro.population.faucherkaspi2006 method)": [[30, "gammapy.astro.population.FaucherKaspi2006.input_shape", false]], "input_shape() (gammapy.astro.population.faucherkaspi2006velocitybimodal method)": [[31, "gammapy.astro.population.FaucherKaspi2006VelocityBimodal.input_shape", false]], "input_shape() (gammapy.astro.population.faucherkaspi2006velocitymaxwellian method)": [[32, "gammapy.astro.population.FaucherKaspi2006VelocityMaxwellian.input_shape", false]], "input_shape() (gammapy.astro.population.lorimer2006 method)": [[35, "gammapy.astro.population.Lorimer2006.input_shape", false]], "input_shape() (gammapy.astro.population.paczynski1990 method)": [[36, "gammapy.astro.population.Paczynski1990.input_shape", false]], "input_shape() (gammapy.astro.population.paczynski1990velocity method)": [[37, "gammapy.astro.population.Paczynski1990Velocity.input_shape", false]], "input_shape() (gammapy.astro.population.yusifovkucuk2004 method)": [[39, "gammapy.astro.population.YusifovKucuk2004.input_shape", false]], "input_shape() (gammapy.astro.population.yusifovkucuk2004b method)": [[40, "gammapy.astro.population.YusifovKucuk2004B.input_shape", false]], "input_units (gammapy.astro.population.casebattacharya1998 attribute)": [[28, "gammapy.astro.population.CaseBattacharya1998.input_units", false]], "input_units (gammapy.astro.population.exponential attribute)": [[29, "gammapy.astro.population.Exponential.input_units", false]], "input_units (gammapy.astro.population.faucherkaspi2006 attribute)": [[30, "gammapy.astro.population.FaucherKaspi2006.input_units", false]], "input_units (gammapy.astro.population.faucherkaspi2006velocitybimodal attribute)": [[31, "gammapy.astro.population.FaucherKaspi2006VelocityBimodal.input_units", false]], "input_units (gammapy.astro.population.faucherkaspi2006velocitymaxwellian attribute)": [[32, "gammapy.astro.population.FaucherKaspi2006VelocityMaxwellian.input_units", false]], "input_units (gammapy.astro.population.lorimer2006 attribute)": [[35, "gammapy.astro.population.Lorimer2006.input_units", false]], "input_units (gammapy.astro.population.paczynski1990 attribute)": [[36, "gammapy.astro.population.Paczynski1990.input_units", false]], "input_units (gammapy.astro.population.paczynski1990velocity attribute)": [[37, "gammapy.astro.population.Paczynski1990Velocity.input_units", false]], "input_units (gammapy.astro.population.yusifovkucuk2004 attribute)": [[39, "gammapy.astro.population.YusifovKucuk2004.input_units", false]], "input_units (gammapy.astro.population.yusifovkucuk2004b attribute)": [[40, "gammapy.astro.population.YusifovKucuk2004B.input_units", false]], "input_units_allow_dimensionless (gammapy.astro.population.casebattacharya1998 attribute)": [[28, "gammapy.astro.population.CaseBattacharya1998.input_units_allow_dimensionless", false]], "input_units_allow_dimensionless (gammapy.astro.population.exponential attribute)": [[29, "gammapy.astro.population.Exponential.input_units_allow_dimensionless", false]], "input_units_allow_dimensionless (gammapy.astro.population.faucherkaspi2006 attribute)": [[30, "gammapy.astro.population.FaucherKaspi2006.input_units_allow_dimensionless", false]], "input_units_allow_dimensionless (gammapy.astro.population.faucherkaspi2006velocitybimodal attribute)": [[31, "gammapy.astro.population.FaucherKaspi2006VelocityBimodal.input_units_allow_dimensionless", false]], "input_units_allow_dimensionless (gammapy.astro.population.faucherkaspi2006velocitymaxwellian attribute)": [[32, "gammapy.astro.population.FaucherKaspi2006VelocityMaxwellian.input_units_allow_dimensionless", false]], "input_units_allow_dimensionless (gammapy.astro.population.lorimer2006 attribute)": [[35, "gammapy.astro.population.Lorimer2006.input_units_allow_dimensionless", false]], "input_units_allow_dimensionless (gammapy.astro.population.paczynski1990 attribute)": [[36, "gammapy.astro.population.Paczynski1990.input_units_allow_dimensionless", false]], "input_units_allow_dimensionless (gammapy.astro.population.paczynski1990velocity attribute)": [[37, "gammapy.astro.population.Paczynski1990Velocity.input_units_allow_dimensionless", false]], "input_units_allow_dimensionless (gammapy.astro.population.yusifovkucuk2004 attribute)": [[39, "gammapy.astro.population.YusifovKucuk2004.input_units_allow_dimensionless", false]], "input_units_allow_dimensionless (gammapy.astro.population.yusifovkucuk2004b attribute)": [[40, "gammapy.astro.population.YusifovKucuk2004B.input_units_allow_dimensionless", false]], "input_units_equivalencies (gammapy.astro.population.casebattacharya1998 attribute)": [[28, "gammapy.astro.population.CaseBattacharya1998.input_units_equivalencies", false]], "input_units_equivalencies (gammapy.astro.population.exponential attribute)": [[29, "gammapy.astro.population.Exponential.input_units_equivalencies", false]], "input_units_equivalencies (gammapy.astro.population.faucherkaspi2006 attribute)": [[30, "gammapy.astro.population.FaucherKaspi2006.input_units_equivalencies", false]], "input_units_equivalencies (gammapy.astro.population.faucherkaspi2006velocitybimodal attribute)": [[31, "gammapy.astro.population.FaucherKaspi2006VelocityBimodal.input_units_equivalencies", false]], "input_units_equivalencies (gammapy.astro.population.faucherkaspi2006velocitymaxwellian attribute)": [[32, "gammapy.astro.population.FaucherKaspi2006VelocityMaxwellian.input_units_equivalencies", false]], "input_units_equivalencies (gammapy.astro.population.lorimer2006 attribute)": [[35, "gammapy.astro.population.Lorimer2006.input_units_equivalencies", false]], "input_units_equivalencies (gammapy.astro.population.paczynski1990 attribute)": [[36, "gammapy.astro.population.Paczynski1990.input_units_equivalencies", false]], "input_units_equivalencies (gammapy.astro.population.paczynski1990velocity attribute)": [[37, "gammapy.astro.population.Paczynski1990Velocity.input_units_equivalencies", false]], "input_units_equivalencies (gammapy.astro.population.yusifovkucuk2004 attribute)": [[39, "gammapy.astro.population.YusifovKucuk2004.input_units_equivalencies", false]], "input_units_equivalencies (gammapy.astro.population.yusifovkucuk2004b attribute)": [[40, "gammapy.astro.population.YusifovKucuk2004B.input_units_equivalencies", false]], "input_units_strict (gammapy.astro.population.casebattacharya1998 attribute)": [[28, "gammapy.astro.population.CaseBattacharya1998.input_units_strict", false]], "input_units_strict (gammapy.astro.population.exponential attribute)": [[29, "gammapy.astro.population.Exponential.input_units_strict", false]], "input_units_strict (gammapy.astro.population.faucherkaspi2006 attribute)": [[30, "gammapy.astro.population.FaucherKaspi2006.input_units_strict", false]], "input_units_strict (gammapy.astro.population.faucherkaspi2006velocitybimodal attribute)": [[31, "gammapy.astro.population.FaucherKaspi2006VelocityBimodal.input_units_strict", false]], "input_units_strict (gammapy.astro.population.faucherkaspi2006velocitymaxwellian attribute)": [[32, "gammapy.astro.population.FaucherKaspi2006VelocityMaxwellian.input_units_strict", false]], "input_units_strict (gammapy.astro.population.lorimer2006 attribute)": [[35, "gammapy.astro.population.Lorimer2006.input_units_strict", false]], "input_units_strict (gammapy.astro.population.paczynski1990 attribute)": [[36, "gammapy.astro.population.Paczynski1990.input_units_strict", false]], "input_units_strict (gammapy.astro.population.paczynski1990velocity attribute)": [[37, "gammapy.astro.population.Paczynski1990Velocity.input_units_strict", false]], "input_units_strict (gammapy.astro.population.yusifovkucuk2004 attribute)": [[39, "gammapy.astro.population.YusifovKucuk2004.input_units_strict", false]], "input_units_strict (gammapy.astro.population.yusifovkucuk2004b attribute)": [[40, "gammapy.astro.population.YusifovKucuk2004B.input_units_strict", false]], "inputs (gammapy.astro.population.casebattacharya1998 attribute)": [[28, "gammapy.astro.population.CaseBattacharya1998.inputs", false]], "inputs (gammapy.astro.population.exponential attribute)": [[29, "gammapy.astro.population.Exponential.inputs", false]], "inputs (gammapy.astro.population.faucherkaspi2006 attribute)": [[30, "gammapy.astro.population.FaucherKaspi2006.inputs", false]], "inputs (gammapy.astro.population.faucherkaspi2006velocitybimodal attribute)": [[31, "gammapy.astro.population.FaucherKaspi2006VelocityBimodal.inputs", false]], "inputs (gammapy.astro.population.faucherkaspi2006velocitymaxwellian attribute)": [[32, "gammapy.astro.population.FaucherKaspi2006VelocityMaxwellian.inputs", false]], "inputs (gammapy.astro.population.lorimer2006 attribute)": [[35, "gammapy.astro.population.Lorimer2006.inputs", false]], "inputs (gammapy.astro.population.paczynski1990 attribute)": [[36, "gammapy.astro.population.Paczynski1990.inputs", false]], "inputs (gammapy.astro.population.paczynski1990velocity attribute)": [[37, "gammapy.astro.population.Paczynski1990Velocity.inputs", false]], "inputs (gammapy.astro.population.yusifovkucuk2004 attribute)": [[39, "gammapy.astro.population.YusifovKucuk2004.inputs", false]], "inputs (gammapy.astro.population.yusifovkucuk2004b attribute)": [[40, "gammapy.astro.population.YusifovKucuk2004B.inputs", false]], "insert() (gammapy.data.observations method)": [[92, "gammapy.data.Observations.insert", false]], "insert() (gammapy.datasets.datasets method)": [[100, "gammapy.datasets.Datasets.insert", false]], "insert() (gammapy.modeling.models.models method)": [[251, "gammapy.modeling.models.Models.insert", false]], "insert_row() (gammapy.data.hduindextable method)": [[87, "gammapy.data.HDUIndexTable.insert_row", false]], "insert_row() (gammapy.data.observationtable method)": [[91, "gammapy.data.ObservationTable.insert_row", false]], "integral() (gammapy.astro.darkmatter.burkertprofile method)": [[17, "gammapy.astro.darkmatter.BurkertProfile.integral", false]], "integral() (gammapy.astro.darkmatter.darkmatterannihilationspectralmodel method)": [[19, "gammapy.astro.darkmatter.DarkMatterAnnihilationSpectralModel.integral", false]], "integral() (gammapy.astro.darkmatter.darkmatterdecayspectralmodel method)": [[20, "gammapy.astro.darkmatter.DarkMatterDecaySpectralModel.integral", false]], "integral() (gammapy.astro.darkmatter.dmprofile method)": [[18, "gammapy.astro.darkmatter.DMProfile.integral", false]], "integral() (gammapy.astro.darkmatter.einastoprofile method)": [[21, "gammapy.astro.darkmatter.EinastoProfile.integral", false]], "integral() (gammapy.astro.darkmatter.isothermalprofile method)": [[22, "gammapy.astro.darkmatter.IsothermalProfile.integral", false]], "integral() (gammapy.astro.darkmatter.mooreprofile method)": [[24, "gammapy.astro.darkmatter.MooreProfile.integral", false]], "integral() (gammapy.astro.darkmatter.nfwprofile method)": [[25, "gammapy.astro.darkmatter.NFWProfile.integral", false]], "integral() (gammapy.astro.darkmatter.primaryflux method)": [[26, "gammapy.astro.darkmatter.PrimaryFlux.integral", false]], "integral() (gammapy.astro.darkmatter.zhaoprofile method)": [[27, "gammapy.astro.darkmatter.ZhaoProfile.integral", false]], "integral() (gammapy.irf.background2d method)": [[150, "gammapy.irf.Background2D.integral", false]], "integral() (gammapy.irf.background3d method)": [[151, "gammapy.irf.Background3D.integral", false]], "integral() (gammapy.irf.backgroundirf method)": [[152, "gammapy.irf.BackgroundIRF.integral", false]], "integral() (gammapy.irf.edispkernel method)": [[153, "gammapy.irf.EDispKernel.integral", false]], "integral() (gammapy.irf.effectiveareatable2d method)": [[156, "gammapy.irf.EffectiveAreaTable2D.integral", false]], "integral() (gammapy.irf.energydependentmultigausspsf method)": [[157, "gammapy.irf.EnergyDependentMultiGaussPSF.integral", false]], "integral() (gammapy.irf.energydispersion2d method)": [[158, "gammapy.irf.EnergyDispersion2D.integral", false]], "integral() (gammapy.irf.irf method)": [[160, "gammapy.irf.IRF.integral", false]], "integral() (gammapy.irf.parametricpsf method)": [[167, "gammapy.irf.ParametricPSF.integral", false]], "integral() (gammapy.irf.psf3d method)": [[163, "gammapy.irf.PSF3D.integral", false]], "integral() (gammapy.irf.psfking method)": [[165, "gammapy.irf.PSFKing.integral", false]], "integral() (gammapy.irf.radmax2d method)": [[168, "gammapy.irf.RadMax2D.integral", false]], "integral() (gammapy.maps.hpxmap method)": [[196, "gammapy.maps.HpxMap.integral", false]], "integral() (gammapy.maps.hpxndmap method)": [[197, "gammapy.maps.HpxNDMap.integral", false]], "integral() (gammapy.maps.map method)": [[199, "gammapy.maps.Map.integral", false]], "integral() (gammapy.maps.regionndmap method)": [[205, "gammapy.maps.RegionNDMap.integral", false]], "integral() (gammapy.maps.wcsmap method)": [[208, "gammapy.maps.WcsMap.integral", false]], "integral() (gammapy.maps.wcsndmap method)": [[209, "gammapy.maps.WcsNDMap.integral", false]], "integral() (gammapy.modeling.models.brokenpowerlawspectralmodel method)": [[221, "gammapy.modeling.models.BrokenPowerLawSpectralModel.integral", false]], "integral() (gammapy.modeling.models.compoundspectralmodel method)": [[222, "gammapy.modeling.models.CompoundSpectralModel.integral", false]], "integral() (gammapy.modeling.models.constantspectralmodel method)": [[225, "gammapy.modeling.models.ConstantSpectralModel.integral", false]], "integral() (gammapy.modeling.models.constanttemporalmodel method)": [[226, "gammapy.modeling.models.ConstantTemporalModel.integral", false]], "integral() (gammapy.modeling.models.eblabsorptionnormspectralmodel method)": [[229, "gammapy.modeling.models.EBLAbsorptionNormSpectralModel.integral", false]], "integral() (gammapy.modeling.models.expcutoffpowerlaw3fglspectralmodel method)": [[231, "gammapy.modeling.models.ExpCutoffPowerLaw3FGLSpectralModel.integral", false]], "integral() (gammapy.modeling.models.expcutoffpowerlawnormspectralmodel method)": [[232, "gammapy.modeling.models.ExpCutoffPowerLawNormSpectralModel.integral", false]], "integral() (gammapy.modeling.models.expcutoffpowerlawspectralmodel method)": [[233, "gammapy.modeling.models.ExpCutoffPowerLawSpectralModel.integral", false]], "integral() (gammapy.modeling.models.expdecaytemporalmodel method)": [[234, "gammapy.modeling.models.ExpDecayTemporalModel.integral", false]], "integral() (gammapy.modeling.models.gaussianspectralmodel method)": [[238, "gammapy.modeling.models.GaussianSpectralModel.integral", false]], "integral() (gammapy.modeling.models.gaussiantemporalmodel method)": [[239, "gammapy.modeling.models.GaussianTemporalModel.integral", false]], "integral() (gammapy.modeling.models.generalizedgaussiantemporalmodel method)": [[241, "gammapy.modeling.models.GeneralizedGaussianTemporalModel.integral", false]], "integral() (gammapy.modeling.models.lightcurvetemplatetemporalmodel method)": [[242, "gammapy.modeling.models.LightCurveTemplateTemporalModel.integral", false]], "integral() (gammapy.modeling.models.lineartemporalmodel method)": [[243, "gammapy.modeling.models.LinearTemporalModel.integral", false]], "integral() (gammapy.modeling.models.logparabolanormspectralmodel method)": [[244, "gammapy.modeling.models.LogParabolaNormSpectralModel.integral", false]], "integral() (gammapy.modeling.models.logparabolaspectralmodel method)": [[245, "gammapy.modeling.models.LogParabolaSpectralModel.integral", false]], "integral() (gammapy.modeling.models.meyercrabspectralmodel method)": [[248, "gammapy.modeling.models.MeyerCrabSpectralModel.integral", false]], "integral() (gammapy.modeling.models.naimaspectralmodel method)": [[252, "gammapy.modeling.models.NaimaSpectralModel.integral", false]], "integral() (gammapy.modeling.models.piecewisenormspectralmodel method)": [[254, "gammapy.modeling.models.PiecewiseNormSpectralModel.integral", false]], "integral() (gammapy.modeling.models.powerlaw2spectralmodel method)": [[256, "gammapy.modeling.models.PowerLaw2SpectralModel.integral", false]], "integral() (gammapy.modeling.models.powerlawnormspectralmodel method)": [[257, "gammapy.modeling.models.PowerLawNormSpectralModel.integral", false]], "integral() (gammapy.modeling.models.powerlawspectralmodel method)": [[258, "gammapy.modeling.models.PowerLawSpectralModel.integral", false]], "integral() (gammapy.modeling.models.powerlawtemporalmodel method)": [[259, "gammapy.modeling.models.PowerLawTemporalModel.integral", false]], "integral() (gammapy.modeling.models.scalespectralmodel method)": [[263, "gammapy.modeling.models.ScaleSpectralModel.integral", false]], "integral() (gammapy.modeling.models.sinetemporalmodel method)": [[266, "gammapy.modeling.models.SineTemporalModel.integral", false]], "integral() (gammapy.modeling.models.smoothbrokenpowerlawspectralmodel method)": [[268, "gammapy.modeling.models.SmoothBrokenPowerLawSpectralModel.integral", false]], "integral() (gammapy.modeling.models.spectralmodel method)": [[270, "gammapy.modeling.models.SpectralModel.integral", false]], "integral() (gammapy.modeling.models.superexpcutoffpowerlaw3fglspectralmodel method)": [[271, "gammapy.modeling.models.SuperExpCutoffPowerLaw3FGLSpectralModel.integral", false]], "integral() (gammapy.modeling.models.superexpcutoffpowerlaw4fgldr3spectralmodel method)": [[272, "gammapy.modeling.models.SuperExpCutoffPowerLaw4FGLDR3SpectralModel.integral", false]], "integral() (gammapy.modeling.models.superexpcutoffpowerlaw4fglspectralmodel method)": [[273, "gammapy.modeling.models.SuperExpCutoffPowerLaw4FGLSpectralModel.integral", false]], "integral() (gammapy.modeling.models.templatendspectralmodel method)": [[276, "gammapy.modeling.models.TemplateNDSpectralModel.integral", false]], "integral() (gammapy.modeling.models.templatephasecurvetemporalmodel method)": [[278, "gammapy.modeling.models.TemplatePhaseCurveTemporalModel.integral", false]], "integral() (gammapy.modeling.models.templatespectralmodel method)": [[280, "gammapy.modeling.models.TemplateSpectralModel.integral", false]], "integral() (gammapy.modeling.models.temporalmodel method)": [[281, "gammapy.modeling.models.TemporalModel.integral", false]], "integral_error() (gammapy.astro.darkmatter.darkmatterannihilationspectralmodel method)": [[19, "gammapy.astro.darkmatter.DarkMatterAnnihilationSpectralModel.integral_error", false]], "integral_error() (gammapy.astro.darkmatter.darkmatterdecayspectralmodel method)": [[20, "gammapy.astro.darkmatter.DarkMatterDecaySpectralModel.integral_error", false]], "integral_error() (gammapy.astro.darkmatter.primaryflux method)": [[26, "gammapy.astro.darkmatter.PrimaryFlux.integral_error", false]], "integral_error() (gammapy.modeling.models.brokenpowerlawspectralmodel method)": [[221, "gammapy.modeling.models.BrokenPowerLawSpectralModel.integral_error", false]], "integral_error() (gammapy.modeling.models.compoundspectralmodel method)": [[222, "gammapy.modeling.models.CompoundSpectralModel.integral_error", false]], "integral_error() (gammapy.modeling.models.constantspectralmodel method)": [[225, "gammapy.modeling.models.ConstantSpectralModel.integral_error", false]], "integral_error() (gammapy.modeling.models.eblabsorptionnormspectralmodel method)": [[229, "gammapy.modeling.models.EBLAbsorptionNormSpectralModel.integral_error", false]], "integral_error() (gammapy.modeling.models.expcutoffpowerlaw3fglspectralmodel method)": [[231, "gammapy.modeling.models.ExpCutoffPowerLaw3FGLSpectralModel.integral_error", false]], "integral_error() (gammapy.modeling.models.expcutoffpowerlawnormspectralmodel method)": [[232, "gammapy.modeling.models.ExpCutoffPowerLawNormSpectralModel.integral_error", false]], "integral_error() (gammapy.modeling.models.expcutoffpowerlawspectralmodel method)": [[233, "gammapy.modeling.models.ExpCutoffPowerLawSpectralModel.integral_error", false]], "integral_error() (gammapy.modeling.models.gaussianspectralmodel method)": [[238, "gammapy.modeling.models.GaussianSpectralModel.integral_error", false]], "integral_error() (gammapy.modeling.models.logparabolanormspectralmodel method)": [[244, "gammapy.modeling.models.LogParabolaNormSpectralModel.integral_error", false]], "integral_error() (gammapy.modeling.models.logparabolaspectralmodel method)": [[245, "gammapy.modeling.models.LogParabolaSpectralModel.integral_error", false]], "integral_error() (gammapy.modeling.models.meyercrabspectralmodel method)": [[248, "gammapy.modeling.models.MeyerCrabSpectralModel.integral_error", false]], "integral_error() (gammapy.modeling.models.naimaspectralmodel method)": [[252, "gammapy.modeling.models.NaimaSpectralModel.integral_error", false]], "integral_error() (gammapy.modeling.models.piecewisenormspectralmodel method)": [[254, "gammapy.modeling.models.PiecewiseNormSpectralModel.integral_error", false]], "integral_error() (gammapy.modeling.models.powerlaw2spectralmodel method)": [[256, "gammapy.modeling.models.PowerLaw2SpectralModel.integral_error", false]], "integral_error() (gammapy.modeling.models.powerlawnormspectralmodel method)": [[257, "gammapy.modeling.models.PowerLawNormSpectralModel.integral_error", false]], "integral_error() (gammapy.modeling.models.powerlawspectralmodel method)": [[258, "gammapy.modeling.models.PowerLawSpectralModel.integral_error", false]], "integral_error() (gammapy.modeling.models.scalespectralmodel method)": [[263, "gammapy.modeling.models.ScaleSpectralModel.integral_error", false]], "integral_error() (gammapy.modeling.models.smoothbrokenpowerlawspectralmodel method)": [[268, "gammapy.modeling.models.SmoothBrokenPowerLawSpectralModel.integral_error", false]], "integral_error() (gammapy.modeling.models.spectralmodel method)": [[270, "gammapy.modeling.models.SpectralModel.integral_error", false]], "integral_error() (gammapy.modeling.models.superexpcutoffpowerlaw3fglspectralmodel method)": [[271, "gammapy.modeling.models.SuperExpCutoffPowerLaw3FGLSpectralModel.integral_error", false]], "integral_error() (gammapy.modeling.models.superexpcutoffpowerlaw4fgldr3spectralmodel method)": [[272, "gammapy.modeling.models.SuperExpCutoffPowerLaw4FGLDR3SpectralModel.integral_error", false]], "integral_error() (gammapy.modeling.models.superexpcutoffpowerlaw4fglspectralmodel method)": [[273, "gammapy.modeling.models.SuperExpCutoffPowerLaw4FGLSpectralModel.integral_error", false]], "integral_error() (gammapy.modeling.models.templatendspectralmodel method)": [[276, "gammapy.modeling.models.TemplateNDSpectralModel.integral_error", false]], "integral_error() (gammapy.modeling.models.templatespectralmodel method)": [[280, "gammapy.modeling.models.TemplateSpectralModel.integral_error", false]], "integrate_geom() (gammapy.modeling.models.constantfluxspatialmodel static method)": [[223, "gammapy.modeling.models.ConstantFluxSpatialModel.integrate_geom", false]], "integrate_geom() (gammapy.modeling.models.constantspatialmodel method)": [[224, "gammapy.modeling.models.ConstantSpatialModel.integrate_geom", false]], "integrate_geom() (gammapy.modeling.models.diskspatialmodel method)": [[228, "gammapy.modeling.models.DiskSpatialModel.integrate_geom", false]], "integrate_geom() (gammapy.modeling.models.gaussianspatialmodel method)": [[237, "gammapy.modeling.models.GaussianSpatialModel.integrate_geom", false]], "integrate_geom() (gammapy.modeling.models.generalizedgaussianspatialmodel method)": [[240, "gammapy.modeling.models.GeneralizedGaussianSpatialModel.integrate_geom", false]], "integrate_geom() (gammapy.modeling.models.piecewisenormspatialmodel method)": [[253, "gammapy.modeling.models.PiecewiseNormSpatialModel.integrate_geom", false]], "integrate_geom() (gammapy.modeling.models.pointspatialmodel method)": [[255, "gammapy.modeling.models.PointSpatialModel.integrate_geom", false]], "integrate_geom() (gammapy.modeling.models.shell2spatialmodel method)": [[264, "gammapy.modeling.models.Shell2SpatialModel.integrate_geom", false]], "integrate_geom() (gammapy.modeling.models.shellspatialmodel method)": [[265, "gammapy.modeling.models.ShellSpatialModel.integrate_geom", false]], "integrate_geom() (gammapy.modeling.models.skymodel method)": [[267, "gammapy.modeling.models.SkyModel.integrate_geom", false]], "integrate_geom() (gammapy.modeling.models.spatialmodel method)": [[269, "gammapy.modeling.models.SpatialModel.integrate_geom", false]], "integrate_geom() (gammapy.modeling.models.templatendspatialmodel method)": [[275, "gammapy.modeling.models.TemplateNDSpatialModel.integrate_geom", false]], "integrate_geom() (gammapy.modeling.models.templatespatialmodel method)": [[279, "gammapy.modeling.models.TemplateSpatialModel.integrate_geom", false]], "integrate_log_log() (gammapy.irf.background2d method)": [[150, "gammapy.irf.Background2D.integrate_log_log", false]], "integrate_log_log() (gammapy.irf.background3d method)": [[151, "gammapy.irf.Background3D.integrate_log_log", false]], "integrate_log_log() (gammapy.irf.backgroundirf method)": [[152, "gammapy.irf.BackgroundIRF.integrate_log_log", false]], "integrate_log_log() (gammapy.irf.edispkernel method)": [[153, "gammapy.irf.EDispKernel.integrate_log_log", false]], "integrate_log_log() (gammapy.irf.effectiveareatable2d method)": [[156, "gammapy.irf.EffectiveAreaTable2D.integrate_log_log", false]], "integrate_log_log() (gammapy.irf.energydependentmultigausspsf method)": [[157, "gammapy.irf.EnergyDependentMultiGaussPSF.integrate_log_log", false]], "integrate_log_log() (gammapy.irf.energydispersion2d method)": [[158, "gammapy.irf.EnergyDispersion2D.integrate_log_log", false]], "integrate_log_log() (gammapy.irf.irf method)": [[160, "gammapy.irf.IRF.integrate_log_log", false]], "integrate_log_log() (gammapy.irf.parametricpsf method)": [[167, "gammapy.irf.ParametricPSF.integrate_log_log", false]], "integrate_log_log() (gammapy.irf.psf3d method)": [[163, "gammapy.irf.PSF3D.integrate_log_log", false]], "integrate_log_log() (gammapy.irf.psfking method)": [[165, "gammapy.irf.PSFKing.integrate_log_log", false]], "integrate_log_log() (gammapy.irf.radmax2d method)": [[168, "gammapy.irf.RadMax2D.integrate_log_log", false]], "integrate_spectrum() (in module gammapy.modeling.models)": [[286, "gammapy.modeling.models.integrate_spectrum", false]], "integrate_spectrum_separation() (gammapy.astro.darkmatter.burkertprofile method)": [[17, "gammapy.astro.darkmatter.BurkertProfile.integrate_spectrum_separation", false]], "integrate_spectrum_separation() (gammapy.astro.darkmatter.dmprofile method)": [[18, "gammapy.astro.darkmatter.DMProfile.integrate_spectrum_separation", false]], "integrate_spectrum_separation() (gammapy.astro.darkmatter.einastoprofile method)": [[21, "gammapy.astro.darkmatter.EinastoProfile.integrate_spectrum_separation", false]], "integrate_spectrum_separation() (gammapy.astro.darkmatter.isothermalprofile method)": [[22, "gammapy.astro.darkmatter.IsothermalProfile.integrate_spectrum_separation", false]], "integrate_spectrum_separation() (gammapy.astro.darkmatter.mooreprofile method)": [[24, "gammapy.astro.darkmatter.MooreProfile.integrate_spectrum_separation", false]], "integrate_spectrum_separation() (gammapy.astro.darkmatter.nfwprofile method)": [[25, "gammapy.astro.darkmatter.NFWProfile.integrate_spectrum_separation", false]], "integrate_spectrum_separation() (gammapy.astro.darkmatter.zhaoprofile method)": [[27, "gammapy.astro.darkmatter.ZhaoProfile.integrate_spectrum_separation", false]], "interp (gammapy.maps.mapaxis attribute)": [[201, "gammapy.maps.MapAxis.interp", false]], "interp (gammapy.maps.timemapaxis attribute)": [[206, "gammapy.maps.TimeMapAxis.interp", false]], "interp_by_coord() (gammapy.maps.hpxmap method)": [[196, "gammapy.maps.HpxMap.interp_by_coord", false]], "interp_by_coord() (gammapy.maps.hpxndmap method)": [[197, "gammapy.maps.HpxNDMap.interp_by_coord", false]], "interp_by_coord() (gammapy.maps.map method)": [[199, "gammapy.maps.Map.interp_by_coord", false]], "interp_by_coord() (gammapy.maps.regionndmap method)": [[205, "gammapy.maps.RegionNDMap.interp_by_coord", false]], "interp_by_coord() (gammapy.maps.wcsmap method)": [[208, "gammapy.maps.WcsMap.interp_by_coord", false]], "interp_by_coord() (gammapy.maps.wcsndmap method)": [[209, "gammapy.maps.WcsNDMap.interp_by_coord", false]], "interp_by_pix() (gammapy.maps.hpxmap method)": [[196, "gammapy.maps.HpxMap.interp_by_pix", false]], "interp_by_pix() (gammapy.maps.hpxndmap method)": [[197, "gammapy.maps.HpxNDMap.interp_by_pix", false]], "interp_by_pix() (gammapy.maps.map method)": [[199, "gammapy.maps.Map.interp_by_pix", false]], "interp_by_pix() (gammapy.maps.regionndmap method)": [[205, "gammapy.maps.RegionNDMap.interp_by_pix", false]], "interp_by_pix() (gammapy.maps.wcsmap method)": [[208, "gammapy.maps.WcsMap.interp_by_pix", false]], "interp_by_pix() (gammapy.maps.wcsndmap method)": [[209, "gammapy.maps.WcsNDMap.interp_by_pix", false]], "interp_missing_data() (gammapy.irf.background2d method)": [[150, "gammapy.irf.Background2D.interp_missing_data", false]], "interp_missing_data() (gammapy.irf.background3d method)": [[151, "gammapy.irf.Background3D.interp_missing_data", false]], "interp_missing_data() (gammapy.irf.backgroundirf method)": [[152, "gammapy.irf.BackgroundIRF.interp_missing_data", false]], "interp_missing_data() (gammapy.irf.edispkernel method)": [[153, "gammapy.irf.EDispKernel.interp_missing_data", false]], "interp_missing_data() (gammapy.irf.effectiveareatable2d method)": [[156, "gammapy.irf.EffectiveAreaTable2D.interp_missing_data", false]], "interp_missing_data() (gammapy.irf.energydependentmultigausspsf method)": [[157, "gammapy.irf.EnergyDependentMultiGaussPSF.interp_missing_data", false]], "interp_missing_data() (gammapy.irf.energydispersion2d method)": [[158, "gammapy.irf.EnergyDispersion2D.interp_missing_data", false]], "interp_missing_data() (gammapy.irf.irf method)": [[160, "gammapy.irf.IRF.interp_missing_data", false]], "interp_missing_data() (gammapy.irf.parametricpsf method)": [[167, "gammapy.irf.ParametricPSF.interp_missing_data", false]], "interp_missing_data() (gammapy.irf.psf3d method)": [[163, "gammapy.irf.PSF3D.interp_missing_data", false]], "interp_missing_data() (gammapy.irf.psfking method)": [[165, "gammapy.irf.PSFKing.interp_missing_data", false]], "interp_missing_data() (gammapy.irf.radmax2d method)": [[168, "gammapy.irf.RadMax2D.interp_missing_data", false]], "interp_to_geom() (gammapy.maps.hpxmap method)": [[196, "gammapy.maps.HpxMap.interp_to_geom", false]], "interp_to_geom() (gammapy.maps.hpxndmap method)": [[197, "gammapy.maps.HpxNDMap.interp_to_geom", false]], "interp_to_geom() (gammapy.maps.map method)": [[199, "gammapy.maps.Map.interp_to_geom", false]], "interp_to_geom() (gammapy.maps.regionndmap method)": [[205, "gammapy.maps.RegionNDMap.interp_to_geom", false]], "interp_to_geom() (gammapy.maps.wcsmap method)": [[208, "gammapy.maps.WcsMap.interp_to_geom", false]], "interp_to_geom() (gammapy.maps.wcsndmap method)": [[209, "gammapy.maps.WcsNDMap.interp_to_geom", false]], "interp_weights() (gammapy.maps.hpxgeom method)": [[195, "gammapy.maps.HpxGeom.interp_weights", false]], "interpolate_profile() (in module gammapy.utils.interpolation)": [[327, "gammapy.utils.interpolation.interpolate_profile", false]], "interpolation_scale() (in module gammapy.utils.interpolation)": [[328, "gammapy.utils.interpolation.interpolation_scale", false]], "inverse (gammapy.astro.population.casebattacharya1998 attribute)": [[28, "gammapy.astro.population.CaseBattacharya1998.inverse", false]], "inverse (gammapy.astro.population.exponential attribute)": [[29, "gammapy.astro.population.Exponential.inverse", false]], "inverse (gammapy.astro.population.faucherkaspi2006 attribute)": [[30, "gammapy.astro.population.FaucherKaspi2006.inverse", false]], "inverse (gammapy.astro.population.faucherkaspi2006velocitybimodal attribute)": [[31, "gammapy.astro.population.FaucherKaspi2006VelocityBimodal.inverse", false]], "inverse (gammapy.astro.population.faucherkaspi2006velocitymaxwellian attribute)": [[32, "gammapy.astro.population.FaucherKaspi2006VelocityMaxwellian.inverse", false]], "inverse (gammapy.astro.population.lorimer2006 attribute)": [[35, "gammapy.astro.population.Lorimer2006.inverse", false]], "inverse (gammapy.astro.population.paczynski1990 attribute)": [[36, "gammapy.astro.population.Paczynski1990.inverse", false]], "inverse (gammapy.astro.population.paczynski1990velocity attribute)": [[37, "gammapy.astro.population.Paczynski1990Velocity.inverse", false]], "inverse (gammapy.astro.population.yusifovkucuk2004 attribute)": [[39, "gammapy.astro.population.YusifovKucuk2004.inverse", false]], "inverse (gammapy.astro.population.yusifovkucuk2004b attribute)": [[40, "gammapy.astro.population.YusifovKucuk2004B.inverse", false]], "inverse() (gammapy.astro.darkmatter.darkmatterannihilationspectralmodel method)": [[19, "gammapy.astro.darkmatter.DarkMatterAnnihilationSpectralModel.inverse", false]], "inverse() (gammapy.astro.darkmatter.darkmatterdecayspectralmodel method)": [[20, "gammapy.astro.darkmatter.DarkMatterDecaySpectralModel.inverse", false]], "inverse() (gammapy.astro.darkmatter.primaryflux method)": [[26, "gammapy.astro.darkmatter.PrimaryFlux.inverse", false]], "inverse() (gammapy.modeling.models.brokenpowerlawspectralmodel method)": [[221, "gammapy.modeling.models.BrokenPowerLawSpectralModel.inverse", false]], "inverse() (gammapy.modeling.models.compoundspectralmodel method)": [[222, "gammapy.modeling.models.CompoundSpectralModel.inverse", false]], "inverse() (gammapy.modeling.models.constantspectralmodel method)": [[225, "gammapy.modeling.models.ConstantSpectralModel.inverse", false]], "inverse() (gammapy.modeling.models.eblabsorptionnormspectralmodel method)": [[229, "gammapy.modeling.models.EBLAbsorptionNormSpectralModel.inverse", false]], "inverse() (gammapy.modeling.models.expcutoffpowerlaw3fglspectralmodel method)": [[231, "gammapy.modeling.models.ExpCutoffPowerLaw3FGLSpectralModel.inverse", false]], "inverse() (gammapy.modeling.models.expcutoffpowerlawnormspectralmodel method)": [[232, "gammapy.modeling.models.ExpCutoffPowerLawNormSpectralModel.inverse", false]], "inverse() (gammapy.modeling.models.expcutoffpowerlawspectralmodel method)": [[233, "gammapy.modeling.models.ExpCutoffPowerLawSpectralModel.inverse", false]], "inverse() (gammapy.modeling.models.gaussianspectralmodel method)": [[238, "gammapy.modeling.models.GaussianSpectralModel.inverse", false]], "inverse() (gammapy.modeling.models.logparabolanormspectralmodel method)": [[244, "gammapy.modeling.models.LogParabolaNormSpectralModel.inverse", false]], "inverse() (gammapy.modeling.models.logparabolaspectralmodel method)": [[245, "gammapy.modeling.models.LogParabolaSpectralModel.inverse", false]], "inverse() (gammapy.modeling.models.meyercrabspectralmodel method)": [[248, "gammapy.modeling.models.MeyerCrabSpectralModel.inverse", false]], "inverse() (gammapy.modeling.models.naimaspectralmodel method)": [[252, "gammapy.modeling.models.NaimaSpectralModel.inverse", false]], "inverse() (gammapy.modeling.models.piecewisenormspectralmodel method)": [[254, "gammapy.modeling.models.PiecewiseNormSpectralModel.inverse", false]], "inverse() (gammapy.modeling.models.powerlaw2spectralmodel method)": [[256, "gammapy.modeling.models.PowerLaw2SpectralModel.inverse", false]], "inverse() (gammapy.modeling.models.powerlawnormspectralmodel method)": [[257, "gammapy.modeling.models.PowerLawNormSpectralModel.inverse", false]], "inverse() (gammapy.modeling.models.powerlawspectralmodel method)": [[258, "gammapy.modeling.models.PowerLawSpectralModel.inverse", false]], "inverse() (gammapy.modeling.models.scalespectralmodel method)": [[263, "gammapy.modeling.models.ScaleSpectralModel.inverse", false]], "inverse() (gammapy.modeling.models.smoothbrokenpowerlawspectralmodel method)": [[268, "gammapy.modeling.models.SmoothBrokenPowerLawSpectralModel.inverse", false]], "inverse() (gammapy.modeling.models.spectralmodel method)": [[270, "gammapy.modeling.models.SpectralModel.inverse", false]], "inverse() (gammapy.modeling.models.superexpcutoffpowerlaw3fglspectralmodel method)": [[271, "gammapy.modeling.models.SuperExpCutoffPowerLaw3FGLSpectralModel.inverse", false]], "inverse() (gammapy.modeling.models.superexpcutoffpowerlaw4fgldr3spectralmodel method)": [[272, "gammapy.modeling.models.SuperExpCutoffPowerLaw4FGLDR3SpectralModel.inverse", false]], "inverse() (gammapy.modeling.models.superexpcutoffpowerlaw4fglspectralmodel method)": [[273, "gammapy.modeling.models.SuperExpCutoffPowerLaw4FGLSpectralModel.inverse", false]], "inverse() (gammapy.modeling.models.templatendspectralmodel method)": [[276, "gammapy.modeling.models.TemplateNDSpectralModel.inverse", false]], "inverse() (gammapy.modeling.models.templatespectralmodel method)": [[280, "gammapy.modeling.models.TemplateSpectralModel.inverse", false]], "inverse_all() (gammapy.astro.darkmatter.darkmatterannihilationspectralmodel method)": [[19, "gammapy.astro.darkmatter.DarkMatterAnnihilationSpectralModel.inverse_all", false]], "inverse_all() (gammapy.astro.darkmatter.darkmatterdecayspectralmodel method)": [[20, "gammapy.astro.darkmatter.DarkMatterDecaySpectralModel.inverse_all", false]], "inverse_all() (gammapy.astro.darkmatter.primaryflux method)": [[26, "gammapy.astro.darkmatter.PrimaryFlux.inverse_all", false]], "inverse_all() (gammapy.modeling.models.brokenpowerlawspectralmodel method)": [[221, "gammapy.modeling.models.BrokenPowerLawSpectralModel.inverse_all", false]], "inverse_all() (gammapy.modeling.models.compoundspectralmodel method)": [[222, "gammapy.modeling.models.CompoundSpectralModel.inverse_all", false]], "inverse_all() (gammapy.modeling.models.constantspectralmodel method)": [[225, "gammapy.modeling.models.ConstantSpectralModel.inverse_all", false]], "inverse_all() (gammapy.modeling.models.eblabsorptionnormspectralmodel method)": [[229, "gammapy.modeling.models.EBLAbsorptionNormSpectralModel.inverse_all", false]], "inverse_all() (gammapy.modeling.models.expcutoffpowerlaw3fglspectralmodel method)": [[231, "gammapy.modeling.models.ExpCutoffPowerLaw3FGLSpectralModel.inverse_all", false]], "inverse_all() (gammapy.modeling.models.expcutoffpowerlawnormspectralmodel method)": [[232, "gammapy.modeling.models.ExpCutoffPowerLawNormSpectralModel.inverse_all", false]], "inverse_all() (gammapy.modeling.models.expcutoffpowerlawspectralmodel method)": [[233, "gammapy.modeling.models.ExpCutoffPowerLawSpectralModel.inverse_all", false]], "inverse_all() (gammapy.modeling.models.gaussianspectralmodel method)": [[238, "gammapy.modeling.models.GaussianSpectralModel.inverse_all", false]], "inverse_all() (gammapy.modeling.models.logparabolanormspectralmodel method)": [[244, "gammapy.modeling.models.LogParabolaNormSpectralModel.inverse_all", false]], "inverse_all() (gammapy.modeling.models.logparabolaspectralmodel method)": [[245, "gammapy.modeling.models.LogParabolaSpectralModel.inverse_all", false]], "inverse_all() (gammapy.modeling.models.meyercrabspectralmodel method)": [[248, "gammapy.modeling.models.MeyerCrabSpectralModel.inverse_all", false]], "inverse_all() (gammapy.modeling.models.naimaspectralmodel method)": [[252, "gammapy.modeling.models.NaimaSpectralModel.inverse_all", false]], "inverse_all() (gammapy.modeling.models.piecewisenormspectralmodel method)": [[254, "gammapy.modeling.models.PiecewiseNormSpectralModel.inverse_all", false]], "inverse_all() (gammapy.modeling.models.powerlaw2spectralmodel method)": [[256, "gammapy.modeling.models.PowerLaw2SpectralModel.inverse_all", false]], "inverse_all() (gammapy.modeling.models.powerlawnormspectralmodel method)": [[257, "gammapy.modeling.models.PowerLawNormSpectralModel.inverse_all", false]], "inverse_all() (gammapy.modeling.models.powerlawspectralmodel method)": [[258, "gammapy.modeling.models.PowerLawSpectralModel.inverse_all", false]], "inverse_all() (gammapy.modeling.models.scalespectralmodel method)": [[263, "gammapy.modeling.models.ScaleSpectralModel.inverse_all", false]], "inverse_all() (gammapy.modeling.models.smoothbrokenpowerlawspectralmodel method)": [[268, "gammapy.modeling.models.SmoothBrokenPowerLawSpectralModel.inverse_all", false]], "inverse_all() (gammapy.modeling.models.spectralmodel method)": [[270, "gammapy.modeling.models.SpectralModel.inverse_all", false]], "inverse_all() (gammapy.modeling.models.superexpcutoffpowerlaw3fglspectralmodel method)": [[271, "gammapy.modeling.models.SuperExpCutoffPowerLaw3FGLSpectralModel.inverse_all", false]], "inverse_all() (gammapy.modeling.models.superexpcutoffpowerlaw4fgldr3spectralmodel method)": [[272, "gammapy.modeling.models.SuperExpCutoffPowerLaw4FGLDR3SpectralModel.inverse_all", false]], "inverse_all() (gammapy.modeling.models.superexpcutoffpowerlaw4fglspectralmodel method)": [[273, "gammapy.modeling.models.SuperExpCutoffPowerLaw4FGLSpectralModel.inverse_all", false]], "inverse_all() (gammapy.modeling.models.templatendspectralmodel method)": [[276, "gammapy.modeling.models.TemplateNDSpectralModel.inverse_all", false]], "inverse_all() (gammapy.modeling.models.templatespectralmodel method)": [[280, "gammapy.modeling.models.TemplateSpectralModel.inverse_all", false]], "inversecdfsampler (class in gammapy.utils.random)": [[336, "gammapy.utils.random.InverseCDFSampler", false]], "ipix (gammapy.maps.hpxgeom attribute)": [[195, "gammapy.maps.HpxGeom.ipix", false]], "irf": [[597, "term-IRF", true]], "irf (class in gammapy.irf)": [[160, "gammapy.irf.IRF", false]], "irf_registry (in module gammapy.irf)": [[162, "gammapy.irf.IRF_REGISTRY", false]], "irfmap (class in gammapy.irf)": [[161, "gammapy.irf.IRFMap", false]], "is_aligned() (gammapy.maps.hpxgeom method)": [[195, "gammapy.maps.HpxGeom.is_aligned", false]], "is_aligned() (gammapy.maps.mapaxis method)": [[201, "gammapy.maps.MapAxis.is_aligned", false]], "is_aligned() (gammapy.maps.timemapaxis method)": [[206, "gammapy.maps.TimeMapAxis.is_aligned", false]], "is_aligned() (gammapy.maps.wcsgeom method)": [[207, "gammapy.maps.WcsGeom.is_aligned", false]], "is_all_point_sky_regions (gammapy.maps.regiongeom attribute)": [[204, "gammapy.maps.RegionGeom.is_all_point_sky_regions", false]], "is_all_same_energy_shape (gammapy.datasets.datasets attribute)": [[100, "gammapy.datasets.Datasets.is_all_same_energy_shape", false]], "is_all_same_shape (gammapy.datasets.datasets attribute)": [[100, "gammapy.datasets.Datasets.is_all_same_shape", false]], "is_all_same_type (gammapy.datasets.datasets attribute)": [[100, "gammapy.datasets.Datasets.is_all_same_type", false]], "is_allclose() (gammapy.irf.background2d method)": [[150, "gammapy.irf.Background2D.is_allclose", false]], "is_allclose() (gammapy.irf.background3d method)": [[151, "gammapy.irf.Background3D.is_allclose", false]], "is_allclose() (gammapy.irf.backgroundirf method)": [[152, "gammapy.irf.BackgroundIRF.is_allclose", false]], "is_allclose() (gammapy.irf.edispkernel method)": [[153, "gammapy.irf.EDispKernel.is_allclose", false]], "is_allclose() (gammapy.irf.effectiveareatable2d method)": [[156, "gammapy.irf.EffectiveAreaTable2D.is_allclose", false]], "is_allclose() (gammapy.irf.energydependentmultigausspsf method)": [[157, "gammapy.irf.EnergyDependentMultiGaussPSF.is_allclose", false]], "is_allclose() (gammapy.irf.energydispersion2d method)": [[158, "gammapy.irf.EnergyDispersion2D.is_allclose", false]], "is_allclose() (gammapy.irf.irf method)": [[160, "gammapy.irf.IRF.is_allclose", false]], "is_allclose() (gammapy.irf.parametricpsf method)": [[167, "gammapy.irf.ParametricPSF.is_allclose", false]], "is_allclose() (gammapy.irf.psf3d method)": [[163, "gammapy.irf.PSF3D.is_allclose", false]], "is_allclose() (gammapy.irf.psfking method)": [[165, "gammapy.irf.PSFKing.is_allclose", false]], "is_allclose() (gammapy.irf.radmax2d method)": [[168, "gammapy.irf.RadMax2D.is_allclose", false]], "is_allclose() (gammapy.maps.hpxgeom method)": [[195, "gammapy.maps.HpxGeom.is_allclose", false]], "is_allclose() (gammapy.maps.hpxmap method)": [[196, "gammapy.maps.HpxMap.is_allclose", false]], "is_allclose() (gammapy.maps.hpxndmap method)": [[197, "gammapy.maps.HpxNDMap.is_allclose", false]], "is_allclose() (gammapy.maps.labelmapaxis method)": [[198, "gammapy.maps.LabelMapAxis.is_allclose", false]], "is_allclose() (gammapy.maps.map method)": [[199, "gammapy.maps.Map.is_allclose", false]], "is_allclose() (gammapy.maps.mapaxes method)": [[200, "gammapy.maps.MapAxes.is_allclose", false]], "is_allclose() (gammapy.maps.mapaxis method)": [[201, "gammapy.maps.MapAxis.is_allclose", false]], "is_allclose() (gammapy.maps.regiongeom method)": [[204, "gammapy.maps.RegionGeom.is_allclose", false]], "is_allclose() (gammapy.maps.regionndmap method)": [[205, "gammapy.maps.RegionNDMap.is_allclose", false]], "is_allclose() (gammapy.maps.timemapaxis method)": [[206, "gammapy.maps.TimeMapAxis.is_allclose", false]], "is_allclose() (gammapy.maps.wcsgeom method)": [[207, "gammapy.maps.WcsGeom.is_allclose", false]], "is_allclose() (gammapy.maps.wcsmap method)": [[208, "gammapy.maps.WcsMap.is_allclose", false]], "is_allclose() (gammapy.maps.wcsndmap method)": [[209, "gammapy.maps.WcsNDMap.is_allclose", false]], "is_allsky (gammapy.maps.geom attribute)": [[194, "gammapy.maps.Geom.is_allsky", false]], "is_allsky (gammapy.maps.hpxgeom attribute)": [[195, "gammapy.maps.HpxGeom.is_allsky", false]], "is_allsky (gammapy.maps.regiongeom attribute)": [[204, "gammapy.maps.RegionGeom.is_allsky", false]], "is_allsky (gammapy.maps.wcsgeom attribute)": [[207, "gammapy.maps.WcsGeom.is_allsky", false]], "is_contiguous (gammapy.maps.timemapaxis attribute)": [[206, "gammapy.maps.TimeMapAxis.is_contiguous", false]], "is_convertible_to_flux_sed_type (gammapy.estimators.fluxmaps attribute)": [[125, "gammapy.estimators.FluxMaps.is_convertible_to_flux_sed_type", false]], "is_convertible_to_flux_sed_type (gammapy.estimators.fluxpoints attribute)": [[127, "gammapy.estimators.FluxPoints.is_convertible_to_flux_sed_type", false]], "is_energy_axis (gammapy.maps.mapaxis attribute)": [[201, "gammapy.maps.MapAxis.is_energy_axis", false]], "is_energy_dependent (gammapy.modeling.models.constantfluxspatialmodel attribute)": [[223, "gammapy.modeling.models.ConstantFluxSpatialModel.is_energy_dependent", false]], "is_energy_dependent (gammapy.modeling.models.constantspatialmodel attribute)": [[224, "gammapy.modeling.models.ConstantSpatialModel.is_energy_dependent", false]], "is_energy_dependent (gammapy.modeling.models.constanttemporalmodel attribute)": [[226, "gammapy.modeling.models.ConstantTemporalModel.is_energy_dependent", false]], "is_energy_dependent (gammapy.modeling.models.diskspatialmodel attribute)": [[228, "gammapy.modeling.models.DiskSpatialModel.is_energy_dependent", false]], "is_energy_dependent (gammapy.modeling.models.expdecaytemporalmodel attribute)": [[234, "gammapy.modeling.models.ExpDecayTemporalModel.is_energy_dependent", false]], "is_energy_dependent (gammapy.modeling.models.gaussianspatialmodel attribute)": [[237, "gammapy.modeling.models.GaussianSpatialModel.is_energy_dependent", false]], "is_energy_dependent (gammapy.modeling.models.gaussiantemporalmodel attribute)": [[239, "gammapy.modeling.models.GaussianTemporalModel.is_energy_dependent", false]], "is_energy_dependent (gammapy.modeling.models.generalizedgaussianspatialmodel attribute)": [[240, "gammapy.modeling.models.GeneralizedGaussianSpatialModel.is_energy_dependent", false]], "is_energy_dependent (gammapy.modeling.models.generalizedgaussiantemporalmodel attribute)": [[241, "gammapy.modeling.models.GeneralizedGaussianTemporalModel.is_energy_dependent", false]], "is_energy_dependent (gammapy.modeling.models.lightcurvetemplatetemporalmodel attribute)": [[242, "gammapy.modeling.models.LightCurveTemplateTemporalModel.is_energy_dependent", false]], "is_energy_dependent (gammapy.modeling.models.lineartemporalmodel attribute)": [[243, "gammapy.modeling.models.LinearTemporalModel.is_energy_dependent", false]], "is_energy_dependent (gammapy.modeling.models.piecewisenormspatialmodel attribute)": [[253, "gammapy.modeling.models.PiecewiseNormSpatialModel.is_energy_dependent", false]], "is_energy_dependent (gammapy.modeling.models.pointspatialmodel attribute)": [[255, "gammapy.modeling.models.PointSpatialModel.is_energy_dependent", false]], "is_energy_dependent (gammapy.modeling.models.powerlawtemporalmodel attribute)": [[259, "gammapy.modeling.models.PowerLawTemporalModel.is_energy_dependent", false]], "is_energy_dependent (gammapy.modeling.models.shell2spatialmodel attribute)": [[264, "gammapy.modeling.models.Shell2SpatialModel.is_energy_dependent", false]], "is_energy_dependent (gammapy.modeling.models.shellspatialmodel attribute)": [[265, "gammapy.modeling.models.ShellSpatialModel.is_energy_dependent", false]], "is_energy_dependent (gammapy.modeling.models.sinetemporalmodel attribute)": [[266, "gammapy.modeling.models.SineTemporalModel.is_energy_dependent", false]], "is_energy_dependent (gammapy.modeling.models.spatialmodel attribute)": [[269, "gammapy.modeling.models.SpatialModel.is_energy_dependent", false]], "is_energy_dependent (gammapy.modeling.models.templatendspatialmodel attribute)": [[275, "gammapy.modeling.models.TemplateNDSpatialModel.is_energy_dependent", false]], "is_energy_dependent (gammapy.modeling.models.templatephasecurvetemporalmodel attribute)": [[278, "gammapy.modeling.models.TemplatePhaseCurveTemporalModel.is_energy_dependent", false]], "is_energy_dependent (gammapy.modeling.models.templatespatialmodel attribute)": [[279, "gammapy.modeling.models.TemplateSpatialModel.is_energy_dependent", false]], "is_energy_dependent (gammapy.modeling.models.temporalmodel attribute)": [[281, "gammapy.modeling.models.TemporalModel.is_energy_dependent", false]], "is_fixed_rad_max (gammapy.irf.radmax2d attribute)": [[168, "gammapy.irf.RadMax2D.is_fixed_rad_max", false]], "is_flat (gammapy.maps.geom attribute)": [[194, "gammapy.maps.Geom.is_flat", false]], "is_flat (gammapy.maps.hpxgeom attribute)": [[195, "gammapy.maps.HpxGeom.is_flat", false]], "is_flat (gammapy.maps.mapaxes attribute)": [[200, "gammapy.maps.MapAxes.is_flat", false]], "is_flat (gammapy.maps.regiongeom attribute)": [[204, "gammapy.maps.RegionGeom.is_flat", false]], "is_flat (gammapy.maps.wcsgeom attribute)": [[207, "gammapy.maps.WcsGeom.is_flat", false]], "is_hpx (gammapy.maps.hpxgeom attribute)": [[195, "gammapy.maps.HpxGeom.is_hpx", false]], "is_hpx (gammapy.maps.regiongeom attribute)": [[204, "gammapy.maps.RegionGeom.is_hpx", false]], "is_hpx (gammapy.maps.wcsgeom attribute)": [[207, "gammapy.maps.WcsGeom.is_hpx", false]], "is_image (gammapy.maps.geom attribute)": [[194, "gammapy.maps.Geom.is_image", false]], "is_image (gammapy.maps.hpxgeom attribute)": [[195, "gammapy.maps.HpxGeom.is_image", false]], "is_image (gammapy.maps.regiongeom attribute)": [[204, "gammapy.maps.RegionGeom.is_image", false]], "is_image (gammapy.maps.wcsgeom attribute)": [[207, "gammapy.maps.WcsGeom.is_image", false]], "is_mask (gammapy.maps.hpxmap attribute)": [[196, "gammapy.maps.HpxMap.is_mask", false]], "is_mask (gammapy.maps.hpxndmap attribute)": [[197, "gammapy.maps.HpxNDMap.is_mask", false]], "is_mask (gammapy.maps.map attribute)": [[199, "gammapy.maps.Map.is_mask", false]], "is_mask (gammapy.maps.regionndmap attribute)": [[205, "gammapy.maps.RegionNDMap.is_mask", false]], "is_mask (gammapy.maps.wcsmap attribute)": [[208, "gammapy.maps.WcsMap.is_mask", false]], "is_mask (gammapy.maps.wcsndmap attribute)": [[209, "gammapy.maps.WcsNDMap.is_mask", false]], "is_norm_spectral_model (gammapy.astro.darkmatter.darkmatterannihilationspectralmodel attribute)": [[19, "gammapy.astro.darkmatter.DarkMatterAnnihilationSpectralModel.is_norm_spectral_model", false]], "is_norm_spectral_model (gammapy.astro.darkmatter.darkmatterdecayspectralmodel attribute)": [[20, "gammapy.astro.darkmatter.DarkMatterDecaySpectralModel.is_norm_spectral_model", false]], "is_norm_spectral_model (gammapy.astro.darkmatter.primaryflux attribute)": [[26, "gammapy.astro.darkmatter.PrimaryFlux.is_norm_spectral_model", false]], "is_norm_spectral_model (gammapy.modeling.models.brokenpowerlawspectralmodel attribute)": [[221, "gammapy.modeling.models.BrokenPowerLawSpectralModel.is_norm_spectral_model", false]], "is_norm_spectral_model (gammapy.modeling.models.compoundspectralmodel attribute)": [[222, "gammapy.modeling.models.CompoundSpectralModel.is_norm_spectral_model", false]], "is_norm_spectral_model (gammapy.modeling.models.constantspectralmodel attribute)": [[225, "gammapy.modeling.models.ConstantSpectralModel.is_norm_spectral_model", false]], "is_norm_spectral_model (gammapy.modeling.models.eblabsorptionnormspectralmodel attribute)": [[229, "gammapy.modeling.models.EBLAbsorptionNormSpectralModel.is_norm_spectral_model", false]], "is_norm_spectral_model (gammapy.modeling.models.expcutoffpowerlaw3fglspectralmodel attribute)": [[231, "gammapy.modeling.models.ExpCutoffPowerLaw3FGLSpectralModel.is_norm_spectral_model", false]], "is_norm_spectral_model (gammapy.modeling.models.expcutoffpowerlawnormspectralmodel attribute)": [[232, "gammapy.modeling.models.ExpCutoffPowerLawNormSpectralModel.is_norm_spectral_model", false]], "is_norm_spectral_model (gammapy.modeling.models.expcutoffpowerlawspectralmodel attribute)": [[233, "gammapy.modeling.models.ExpCutoffPowerLawSpectralModel.is_norm_spectral_model", false]], "is_norm_spectral_model (gammapy.modeling.models.gaussianspectralmodel attribute)": [[238, "gammapy.modeling.models.GaussianSpectralModel.is_norm_spectral_model", false]], "is_norm_spectral_model (gammapy.modeling.models.logparabolanormspectralmodel attribute)": [[244, "gammapy.modeling.models.LogParabolaNormSpectralModel.is_norm_spectral_model", false]], "is_norm_spectral_model (gammapy.modeling.models.logparabolaspectralmodel attribute)": [[245, "gammapy.modeling.models.LogParabolaSpectralModel.is_norm_spectral_model", false]], "is_norm_spectral_model (gammapy.modeling.models.meyercrabspectralmodel attribute)": [[248, "gammapy.modeling.models.MeyerCrabSpectralModel.is_norm_spectral_model", false]], "is_norm_spectral_model (gammapy.modeling.models.naimaspectralmodel attribute)": [[252, "gammapy.modeling.models.NaimaSpectralModel.is_norm_spectral_model", false]], "is_norm_spectral_model (gammapy.modeling.models.piecewisenormspectralmodel attribute)": [[254, "gammapy.modeling.models.PiecewiseNormSpectralModel.is_norm_spectral_model", false]], "is_norm_spectral_model (gammapy.modeling.models.powerlaw2spectralmodel attribute)": [[256, "gammapy.modeling.models.PowerLaw2SpectralModel.is_norm_spectral_model", false]], "is_norm_spectral_model (gammapy.modeling.models.powerlawnormspectralmodel attribute)": [[257, "gammapy.modeling.models.PowerLawNormSpectralModel.is_norm_spectral_model", false]], "is_norm_spectral_model (gammapy.modeling.models.powerlawspectralmodel attribute)": [[258, "gammapy.modeling.models.PowerLawSpectralModel.is_norm_spectral_model", false]], "is_norm_spectral_model (gammapy.modeling.models.scalespectralmodel attribute)": [[263, "gammapy.modeling.models.ScaleSpectralModel.is_norm_spectral_model", false]], "is_norm_spectral_model (gammapy.modeling.models.smoothbrokenpowerlawspectralmodel attribute)": [[268, "gammapy.modeling.models.SmoothBrokenPowerLawSpectralModel.is_norm_spectral_model", false]], "is_norm_spectral_model (gammapy.modeling.models.spectralmodel attribute)": [[270, "gammapy.modeling.models.SpectralModel.is_norm_spectral_model", false]], "is_norm_spectral_model (gammapy.modeling.models.superexpcutoffpowerlaw3fglspectralmodel attribute)": [[271, "gammapy.modeling.models.SuperExpCutoffPowerLaw3FGLSpectralModel.is_norm_spectral_model", false]], "is_norm_spectral_model (gammapy.modeling.models.superexpcutoffpowerlaw4fgldr3spectralmodel attribute)": [[272, "gammapy.modeling.models.SuperExpCutoffPowerLaw4FGLDR3SpectralModel.is_norm_spectral_model", false]], "is_norm_spectral_model (gammapy.modeling.models.superexpcutoffpowerlaw4fglspectralmodel attribute)": [[273, "gammapy.modeling.models.SuperExpCutoffPowerLaw4FGLSpectralModel.is_norm_spectral_model", false]], "is_norm_spectral_model (gammapy.modeling.models.templatendspectralmodel attribute)": [[276, "gammapy.modeling.models.TemplateNDSpectralModel.is_norm_spectral_model", false]], "is_norm_spectral_model (gammapy.modeling.models.templatespectralmodel attribute)": [[280, "gammapy.modeling.models.TemplateSpectralModel.is_norm_spectral_model", false]], "is_pointed_observation (gammapy.data.eventlist attribute)": [[83, "gammapy.data.EventList.is_pointed_observation", false]], "is_pointlike (gammapy.catalog.sourcecatalogobject2fhl attribute)": [[71, "gammapy.catalog.SourceCatalogObject2FHL.is_pointlike", false]], "is_pointlike (gammapy.catalog.sourcecatalogobject3fgl attribute)": [[74, "gammapy.catalog.SourceCatalogObject3FGL.is_pointlike", false]], "is_pointlike (gammapy.catalog.sourcecatalogobject3fhl attribute)": [[75, "gammapy.catalog.SourceCatalogObject3FHL.is_pointlike", false]], "is_pointlike (gammapy.catalog.sourcecatalogobject3hwc attribute)": [[76, "gammapy.catalog.SourceCatalogObject3HWC.is_pointlike", false]], "is_pointlike (gammapy.catalog.sourcecatalogobject4fgl attribute)": [[78, "gammapy.catalog.SourceCatalogObject4FGL.is_pointlike", false]], "is_pointlike (gammapy.irf.background2d attribute)": [[150, "gammapy.irf.Background2D.is_pointlike", false]], "is_pointlike (gammapy.irf.background3d attribute)": [[151, "gammapy.irf.Background3D.is_pointlike", false]], "is_pointlike (gammapy.irf.backgroundirf attribute)": [[152, "gammapy.irf.BackgroundIRF.is_pointlike", false]], "is_pointlike (gammapy.irf.edispkernel attribute)": [[153, "gammapy.irf.EDispKernel.is_pointlike", false]], "is_pointlike (gammapy.irf.effectiveareatable2d attribute)": [[156, "gammapy.irf.EffectiveAreaTable2D.is_pointlike", false]], "is_pointlike (gammapy.irf.energydependentmultigausspsf attribute)": [[157, "gammapy.irf.EnergyDependentMultiGaussPSF.is_pointlike", false]], "is_pointlike (gammapy.irf.energydispersion2d attribute)": [[158, "gammapy.irf.EnergyDispersion2D.is_pointlike", false]], "is_pointlike (gammapy.irf.irf attribute)": [[160, "gammapy.irf.IRF.is_pointlike", false]], "is_pointlike (gammapy.irf.parametricpsf attribute)": [[167, "gammapy.irf.ParametricPSF.is_pointlike", false]], "is_pointlike (gammapy.irf.psf3d attribute)": [[163, "gammapy.irf.PSF3D.is_pointlike", false]], "is_pointlike (gammapy.irf.psfking attribute)": [[165, "gammapy.irf.PSFKing.is_pointlike", false]], "is_pointlike (gammapy.irf.radmax2d attribute)": [[168, "gammapy.irf.RadMax2D.is_pointlike", false]], "is_region (gammapy.maps.hpxgeom attribute)": [[195, "gammapy.maps.HpxGeom.is_region", false]], "is_region (gammapy.maps.regiongeom attribute)": [[204, "gammapy.maps.RegionGeom.is_region", false]], "is_region (gammapy.maps.wcsgeom attribute)": [[207, "gammapy.maps.WcsGeom.is_region", false]], "is_regular (gammapy.maps.hpxgeom attribute)": [[195, "gammapy.maps.HpxGeom.is_regular", false]], "is_regular (gammapy.maps.regiongeom attribute)": [[204, "gammapy.maps.RegionGeom.is_regular", false]], "is_regular (gammapy.maps.wcsgeom attribute)": [[207, "gammapy.maps.WcsGeom.is_regular", false]], "is_ul (gammapy.estimators.fluxmaps attribute)": [[125, "gammapy.estimators.FluxMaps.is_ul", false]], "is_ul (gammapy.estimators.fluxpoints attribute)": [[127, "gammapy.estimators.FluxPoints.is_ul", false]], "is_unidimensional (gammapy.maps.mapaxes attribute)": [[200, "gammapy.maps.MapAxes.is_unidimensional", false]], "isothermalprofile (class in gammapy.astro.darkmatter)": [[22, "gammapy.astro.darkmatter.IsothermalProfile", false]], "items() (gammapy.data.hduindextable method)": [[87, "gammapy.data.HDUIndexTable.items", false]], "items() (gammapy.data.observationtable method)": [[91, "gammapy.data.ObservationTable.items", false]], "items() (gammapy.maps.maps method)": [[203, "gammapy.maps.Maps.items", false]], "iter_by_axis() (gammapy.estimators.fluxmaps method)": [[125, "gammapy.estimators.FluxMaps.iter_by_axis", false]], "iter_by_axis() (gammapy.estimators.fluxpoints method)": [[127, "gammapy.estimators.FluxPoints.iter_by_axis", false]], "iter_by_axis() (gammapy.maps.hpxmap method)": [[196, "gammapy.maps.HpxMap.iter_by_axis", false]], "iter_by_axis() (gammapy.maps.hpxndmap method)": [[197, "gammapy.maps.HpxNDMap.iter_by_axis", false]], "iter_by_axis() (gammapy.maps.map method)": [[199, "gammapy.maps.Map.iter_by_axis", false]], "iter_by_axis() (gammapy.maps.regionndmap method)": [[205, "gammapy.maps.RegionNDMap.iter_by_axis", false]], "iter_by_axis() (gammapy.maps.wcsmap method)": [[208, "gammapy.maps.WcsMap.iter_by_axis", false]], "iter_by_axis() (gammapy.maps.wcsndmap method)": [[209, "gammapy.maps.WcsNDMap.iter_by_axis", false]], "iter_by_axis_data() (gammapy.maps.regionndmap method)": [[205, "gammapy.maps.RegionNDMap.iter_by_axis_data", false]], "iter_by_edges (gammapy.maps.mapaxis attribute)": [[201, "gammapy.maps.MapAxis.iter_by_edges", false]], "iter_by_edges (gammapy.maps.timemapaxis attribute)": [[206, "gammapy.maps.TimeMapAxis.iter_by_edges", false]], "iter_by_image() (gammapy.maps.hpxmap method)": [[196, "gammapy.maps.HpxMap.iter_by_image", false]], "iter_by_image() (gammapy.maps.hpxndmap method)": [[197, "gammapy.maps.HpxNDMap.iter_by_image", false]], "iter_by_image() (gammapy.maps.map method)": [[199, "gammapy.maps.Map.iter_by_image", false]], "iter_by_image() (gammapy.maps.regionndmap method)": [[205, "gammapy.maps.RegionNDMap.iter_by_image", false]], "iter_by_image() (gammapy.maps.wcsmap method)": [[208, "gammapy.maps.WcsMap.iter_by_image", false]], "iter_by_image() (gammapy.maps.wcsndmap method)": [[209, "gammapy.maps.WcsNDMap.iter_by_image", false]], "iter_by_image_data() (gammapy.maps.hpxmap method)": [[196, "gammapy.maps.HpxMap.iter_by_image_data", false]], "iter_by_image_data() (gammapy.maps.hpxndmap method)": [[197, "gammapy.maps.HpxNDMap.iter_by_image_data", false]], "iter_by_image_data() (gammapy.maps.map method)": [[199, "gammapy.maps.Map.iter_by_image_data", false]], "iter_by_image_data() (gammapy.maps.regionndmap method)": [[205, "gammapy.maps.RegionNDMap.iter_by_image_data", false]], "iter_by_image_data() (gammapy.maps.wcsmap method)": [[208, "gammapy.maps.WcsMap.iter_by_image_data", false]], "iter_by_image_data() (gammapy.maps.wcsndmap method)": [[209, "gammapy.maps.WcsNDMap.iter_by_image_data", false]], "iter_by_image_index() (gammapy.maps.hpxmap method)": [[196, "gammapy.maps.HpxMap.iter_by_image_index", false]], "iter_by_image_index() (gammapy.maps.hpxndmap method)": [[197, "gammapy.maps.HpxNDMap.iter_by_image_index", false]], "iter_by_image_index() (gammapy.maps.map method)": [[199, "gammapy.maps.Map.iter_by_image_index", false]], "iter_by_image_index() (gammapy.maps.regionndmap method)": [[205, "gammapy.maps.RegionNDMap.iter_by_image_index", false]], "iter_by_image_index() (gammapy.maps.wcsmap method)": [[208, "gammapy.maps.WcsMap.iter_by_image_index", false]], "iter_by_image_index() (gammapy.maps.wcsndmap method)": [[209, "gammapy.maps.WcsNDMap.iter_by_image_index", false]], "iter_with_reshape (gammapy.maps.mapaxes attribute)": [[200, "gammapy.maps.MapAxes.iter_with_reshape", false]], "itercols() (gammapy.data.hduindextable method)": [[87, "gammapy.data.HDUIndexTable.itercols", false]], "itercols() (gammapy.data.observationtable method)": [[91, "gammapy.data.ObservationTable.itercols", false]], "iterrows() (gammapy.data.hduindextable method)": [[87, "gammapy.data.HDUIndexTable.iterrows", false]], "iterrows() (gammapy.data.observationtable method)": [[91, "gammapy.data.ObservationTable.iterrows", false]], "jfactory (class in gammapy.astro.darkmatter)": [[23, "gammapy.astro.darkmatter.JFactory", false]], "joint analysis": [[597, "term-Joint-Analysis", true]], "json() (gammapy.analysis.analysisconfig method)": [[16, "gammapy.analysis.AnalysisConfig.json", false]], "json() (gammapy.data.eventlistmetadata method)": [[84, "gammapy.data.EventListMetaData.json", false]], "json() (gammapy.data.observationmetadata method)": [[90, "gammapy.data.ObservationMetaData.json", false]], "json() (gammapy.datasets.mapdatasetmetadata method)": [[105, "gammapy.datasets.MapDatasetMetaData.json", false]], "json() (gammapy.estimators.fluxmetadata method)": [[126, "gammapy.estimators.FluxMetaData.json", false]], "k (gammapy.astro.population.faucherspiral attribute)": [[33, "gammapy.astro.population.FaucherSpiral.k", false]], "keep_columns() (gammapy.data.hduindextable method)": [[87, "gammapy.data.HDUIndexTable.keep_columns", false]], "keep_columns() (gammapy.data.observationtable method)": [[91, "gammapy.data.ObservationTable.keep_columns", false]], "kernel() (gammapy.makers.ringbackgroundmaker method)": [[181, "gammapy.makers.RingBackgroundMaker.kernel", false]], "kernels() (gammapy.makers.adaptiveringbackgroundmaker method)": [[171, "gammapy.makers.AdaptiveRingBackgroundMaker.kernels", false]], "keys() (gammapy.data.hduindextable method)": [[87, "gammapy.data.HDUIndexTable.keys", false]], "keys() (gammapy.data.observationtable method)": [[91, "gammapy.data.ObservationTable.keys", false]], "keys() (gammapy.maps.maps method)": [[203, "gammapy.maps.Maps.keys", false]], "labelmapaxis (class in gammapy.maps)": [[198, "gammapy.maps.LabelMapAxis", false]], "lambda_ (gammapy.modeling.models.expcutoffpowerlawnormspectralmodel attribute)": [[232, "gammapy.modeling.models.ExpCutoffPowerLawNormSpectralModel.lambda_", false]], "lambda_ (gammapy.modeling.models.expcutoffpowerlawspectralmodel attribute)": [[233, "gammapy.modeling.models.ExpCutoffPowerLawSpectralModel.lambda_", false]], "large_scale_component (gammapy.catalog.sourcecataloghgps attribute)": [[67, "gammapy.catalog.SourceCatalogHGPS.large_scale_component", false]], "lat (gammapy.maps.mapcoord attribute)": [[202, "gammapy.maps.MapCoord.lat", false]], "lat_0 (gammapy.modeling.models.diskspatialmodel attribute)": [[228, "gammapy.modeling.models.DiskSpatialModel.lat_0", false]], "lat_0 (gammapy.modeling.models.gaussianspatialmodel attribute)": [[237, "gammapy.modeling.models.GaussianSpatialModel.lat_0", false]], "lat_0 (gammapy.modeling.models.generalizedgaussianspatialmodel attribute)": [[240, "gammapy.modeling.models.GeneralizedGaussianSpatialModel.lat_0", false]], "lat_0 (gammapy.modeling.models.pointspatialmodel attribute)": [[255, "gammapy.modeling.models.PointSpatialModel.lat_0", false]], "lat_0 (gammapy.modeling.models.shell2spatialmodel attribute)": [[264, "gammapy.modeling.models.Shell2SpatialModel.lat_0", false]], "lat_0 (gammapy.modeling.models.shellspatialmodel attribute)": [[265, "gammapy.modeling.models.ShellSpatialModel.lat_0", false]], "lat_0 (gammapy.modeling.models.templatespatialmodel attribute)": [[279, "gammapy.modeling.models.TemplateSpatialModel.lat_0", false]], "lazyfitsdata (class in gammapy.utils.fits)": [[323, "gammapy.utils.fits.LazyFitsData", false]], "lifetime_age_of_universe (gammapy.astro.darkmatter.darkmatterdecayspectralmodel attribute)": [[20, "gammapy.astro.darkmatter.DarkMatterDecaySpectralModel.LIFETIME_AGE_OF_UNIVERSE", false]], "lightcurve (gammapy.catalog.sourcecatalogobject2pc attribute)": [[73, "gammapy.catalog.SourceCatalogObject2PC.lightcurve", false]], "lightcurve (gammapy.catalog.sourcecatalogobject3pc attribute)": [[77, "gammapy.catalog.SourceCatalogObject3PC.lightcurve", false]], "lightcurve() (gammapy.catalog.sourcecatalogobject3fgl method)": [[74, "gammapy.catalog.SourceCatalogObject3FGL.lightcurve", false]], "lightcurve() (gammapy.catalog.sourcecatalogobject4fgl method)": [[78, "gammapy.catalog.SourceCatalogObject4FGL.lightcurve", false]], "lightcurveestimator (class in gammapy.estimators)": [[132, "gammapy.estimators.LightCurveEstimator", false]], "lightcurvetemplatetemporalmodel (class in gammapy.modeling.models)": [[242, "gammapy.modeling.models.LightCurveTemplateTemporalModel", false]], "linear (gammapy.astro.population.casebattacharya1998 attribute)": [[28, "gammapy.astro.population.CaseBattacharya1998.linear", false]], "linear (gammapy.astro.population.exponential attribute)": [[29, "gammapy.astro.population.Exponential.linear", false]], "linear (gammapy.astro.population.faucherkaspi2006 attribute)": [[30, "gammapy.astro.population.FaucherKaspi2006.linear", false]], "linear (gammapy.astro.population.faucherkaspi2006velocitybimodal attribute)": [[31, "gammapy.astro.population.FaucherKaspi2006VelocityBimodal.linear", false]], "linear (gammapy.astro.population.faucherkaspi2006velocitymaxwellian attribute)": [[32, "gammapy.astro.population.FaucherKaspi2006VelocityMaxwellian.linear", false]], "linear (gammapy.astro.population.lorimer2006 attribute)": [[35, "gammapy.astro.population.Lorimer2006.linear", false]], "linear (gammapy.astro.population.paczynski1990 attribute)": [[36, "gammapy.astro.population.Paczynski1990.linear", false]], "linear (gammapy.astro.population.paczynski1990velocity attribute)": [[37, "gammapy.astro.population.Paczynski1990Velocity.linear", false]], "linear (gammapy.astro.population.yusifovkucuk2004 attribute)": [[39, "gammapy.astro.population.YusifovKucuk2004.linear", false]], "linear (gammapy.astro.population.yusifovkucuk2004b attribute)": [[40, "gammapy.astro.population.YusifovKucuk2004B.linear", false]], "lineartemporalmodel (class in gammapy.modeling.models)": [[243, "gammapy.modeling.models.LinearTemporalModel", false]], "livetime_fraction (gammapy.data.observationfilter attribute)": [[89, "gammapy.data.ObservationFilter.livetime_fraction", false]], "load() (gammapy.utils.fits.hdulocation method)": [[322, "gammapy.utils.fits.HDULocation.load", false]], "load_irf_dict_from_file() (in module gammapy.irf)": [[170, "gammapy.irf.load_irf_dict_from_file", false]], "loc (gammapy.data.hduindextable attribute)": [[87, "gammapy.data.HDUIndexTable.loc", false]], "loc (gammapy.data.observationtable attribute)": [[91, "gammapy.data.ObservationTable.loc", false]], "loc_indices (gammapy.data.hduindextable attribute)": [[87, "gammapy.data.HDUIndexTable.loc_indices", false]], "loc_indices (gammapy.data.observationtable attribute)": [[91, "gammapy.data.ObservationTable.loc_indices", false]], "local_density (gammapy.astro.darkmatter.burkertprofile attribute)": [[17, "gammapy.astro.darkmatter.BurkertProfile.LOCAL_DENSITY", false]], "local_density (gammapy.astro.darkmatter.dmprofile attribute)": [[18, "gammapy.astro.darkmatter.DMProfile.LOCAL_DENSITY", false]], "local_density (gammapy.astro.darkmatter.einastoprofile attribute)": [[21, "gammapy.astro.darkmatter.EinastoProfile.LOCAL_DENSITY", false]], "local_density (gammapy.astro.darkmatter.isothermalprofile attribute)": [[22, "gammapy.astro.darkmatter.IsothermalProfile.LOCAL_DENSITY", false]], "local_density (gammapy.astro.darkmatter.mooreprofile attribute)": [[24, "gammapy.astro.darkmatter.MooreProfile.LOCAL_DENSITY", false]], "local_density (gammapy.astro.darkmatter.nfwprofile attribute)": [[25, "gammapy.astro.darkmatter.NFWProfile.LOCAL_DENSITY", false]], "local_density (gammapy.astro.darkmatter.zhaoprofile attribute)": [[27, "gammapy.astro.darkmatter.ZhaoProfile.LOCAL_DENSITY", false]], "local_to_global() (gammapy.maps.hpxgeom method)": [[195, "gammapy.maps.HpxGeom.local_to_global", false]], "location (gammapy.data.pointinginfo attribute)": [[94, "gammapy.data.PointingInfo.location", false]], "location_info() (gammapy.data.hduindextable method)": [[87, "gammapy.data.HDUIndexTable.location_info", false]], "logparabolanormspectralmodel (class in gammapy.modeling.models)": [[244, "gammapy.modeling.models.LogParabolaNormSpectralModel", false]], "logparabolaspectralmodel (class in gammapy.modeling.models)": [[245, "gammapy.modeling.models.LogParabolaSpectralModel", false]], "logspiral (class in gammapy.astro.population)": [[34, "gammapy.astro.population.LogSpiral", false]], "loguniformprior (class in gammapy.modeling.models)": [[246, "gammapy.modeling.models.LogUniformPrior", false]], "lon (gammapy.maps.mapcoord attribute)": [[202, "gammapy.maps.MapCoord.lon", false]], "lon_0 (gammapy.modeling.models.diskspatialmodel attribute)": [[228, "gammapy.modeling.models.DiskSpatialModel.lon_0", false]], "lon_0 (gammapy.modeling.models.gaussianspatialmodel attribute)": [[237, "gammapy.modeling.models.GaussianSpatialModel.lon_0", false]], "lon_0 (gammapy.modeling.models.generalizedgaussianspatialmodel attribute)": [[240, "gammapy.modeling.models.GeneralizedGaussianSpatialModel.lon_0", false]], "lon_0 (gammapy.modeling.models.pointspatialmodel attribute)": [[255, "gammapy.modeling.models.PointSpatialModel.lon_0", false]], "lon_0 (gammapy.modeling.models.shell2spatialmodel attribute)": [[264, "gammapy.modeling.models.Shell2SpatialModel.lon_0", false]], "lon_0 (gammapy.modeling.models.shellspatialmodel attribute)": [[265, "gammapy.modeling.models.ShellSpatialModel.lon_0", false]], "lon_0 (gammapy.modeling.models.templatespatialmodel attribute)": [[279, "gammapy.modeling.models.TemplateSpatialModel.lon_0", false]], "lorimer2006 (class in gammapy.astro.population)": [[35, "gammapy.astro.population.Lorimer2006", false]], "luminosity_spindown (gammapy.astro.source.simplepulsar attribute)": [[54, "gammapy.astro.source.SimplePulsar.luminosity_spindown", false]], "luminosity_spindown() (gammapy.astro.source.pulsar method)": [[51, "gammapy.astro.source.Pulsar.luminosity_spindown", false]], "luminosity_tev() (gammapy.astro.source.snr method)": [[52, "gammapy.astro.source.SNR.luminosity_tev", false]], "luminosity_tev() (gammapy.astro.source.snrtruelovemckee method)": [[53, "gammapy.astro.source.SNRTrueloveMcKee.luminosity_tev", false]], "m (gammapy.astro.population.valleespiral attribute)": [[38, "gammapy.astro.population.ValleeSpiral.m", false]], "magnetic_field (gammapy.astro.source.simplepulsar attribute)": [[54, "gammapy.astro.source.SimplePulsar.magnetic_field", false]], "magnetic_field() (gammapy.astro.source.pulsar method)": [[51, "gammapy.astro.source.Pulsar.magnetic_field", false]], "magnetic_field() (gammapy.astro.source.pwn method)": [[50, "gammapy.astro.source.PWN.magnetic_field", false]], "make_background() (gammapy.makers.mapdatasetmaker method)": [[176, "gammapy.makers.MapDatasetMaker.make_background", false]], "make_background() (gammapy.makers.spectrumdatasetmaker method)": [[183, "gammapy.makers.SpectrumDatasetMaker.make_background", false]], "make_background_fit() (gammapy.makers.fovbackgroundmaker method)": [[173, "gammapy.makers.FoVBackgroundMaker.make_background_fit", false]], "make_background_scale() (gammapy.makers.fovbackgroundmaker method)": [[173, "gammapy.makers.FoVBackgroundMaker.make_background_scale", false]], "make_base_catalog_galactic() (in module gammapy.astro.population)": [[45, "gammapy.astro.population.make_base_catalog_galactic", false]], "make_catalog_random_positions_cube() (in module gammapy.astro.population)": [[46, "gammapy.astro.population.make_catalog_random_positions_cube", false]], "make_catalog_random_positions_sphere() (in module gammapy.astro.population)": [[47, "gammapy.astro.population.make_catalog_random_positions_sphere", false]], "make_concentric_annulus_sky_regions() (in module gammapy.utils.regions)": [[346, "gammapy.utils.regions.make_concentric_annulus_sky_regions", false]], "make_counts() (gammapy.makers.mapdatasetmaker static method)": [[176, "gammapy.makers.MapDatasetMaker.make_counts", false]], "make_counts() (gammapy.makers.phasebackgroundmaker method)": [[177, "gammapy.makers.PhaseBackgroundMaker.make_counts", false]], "make_counts() (gammapy.makers.spectrumdatasetmaker static method)": [[183, "gammapy.makers.SpectrumDatasetMaker.make_counts", false]], "make_counts_off() (gammapy.makers.phasebackgroundmaker method)": [[177, "gammapy.makers.PhaseBackgroundMaker.make_counts_off", false]], "make_counts_off() (gammapy.makers.reflectedregionsbackgroundmaker method)": [[178, "gammapy.makers.ReflectedRegionsBackgroundMaker.make_counts_off", false]], "make_counts_rad_max() (in module gammapy.makers.utils)": [[185, "gammapy.makers.utils.make_counts_rad_max", false]], "make_cubes() (gammapy.makers.adaptiveringbackgroundmaker method)": [[171, "gammapy.makers.AdaptiveRingBackgroundMaker.make_cubes", false]], "make_dataset() (gammapy.makers.datasetsmaker method)": [[172, "gammapy.makers.DatasetsMaker.make_dataset", false]], "make_default_fov_background_model() (gammapy.makers.fovbackgroundmaker method)": [[173, "gammapy.makers.FoVBackgroundMaker.make_default_fov_background_model", false]], "make_edisp() (gammapy.makers.mapdatasetmaker method)": [[176, "gammapy.makers.MapDatasetMaker.make_edisp", false]], "make_edisp() (gammapy.makers.spectrumdatasetmaker method)": [[183, "gammapy.makers.SpectrumDatasetMaker.make_edisp", false]], "make_edisp_kernel() (gammapy.makers.mapdatasetmaker method)": [[176, "gammapy.makers.MapDatasetMaker.make_edisp_kernel", false]], "make_edisp_kernel() (gammapy.makers.spectrumdatasetmaker method)": [[183, "gammapy.makers.SpectrumDatasetMaker.make_edisp_kernel", false]], "make_edisp_kernel_map() (in module gammapy.makers.utils)": [[186, "gammapy.makers.utils.make_edisp_kernel_map", false]], "make_edisp_map() (in module gammapy.makers.utils)": [[187, "gammapy.makers.utils.make_edisp_map", false]], "make_effective_livetime_map() (in module gammapy.makers.utils)": [[188, "gammapy.makers.utils.make_effective_livetime_map", false]], "make_exclusion_mask() (gammapy.makers.fovbackgroundmaker method)": [[173, "gammapy.makers.FoVBackgroundMaker.make_exclusion_mask", false]], "make_exposure() (gammapy.makers.mapdatasetmaker static method)": [[176, "gammapy.makers.MapDatasetMaker.make_exposure", false]], "make_exposure() (gammapy.makers.spectrumdatasetmaker method)": [[183, "gammapy.makers.SpectrumDatasetMaker.make_exposure", false]], "make_exposure_irf() (gammapy.makers.mapdatasetmaker static method)": [[176, "gammapy.makers.MapDatasetMaker.make_exposure_irf", false]], "make_exposure_irf() (gammapy.makers.spectrumdatasetmaker static method)": [[183, "gammapy.makers.SpectrumDatasetMaker.make_exposure_irf", false]], "make_map_background_irf() (in module gammapy.makers.utils)": [[189, "gammapy.makers.utils.make_map_background_irf", false]], "make_map_exposure_true_energy() (in module gammapy.makers.utils)": [[190, "gammapy.makers.utils.make_map_exposure_true_energy", false]], "make_maps_off() (gammapy.makers.ringbackgroundmaker method)": [[181, "gammapy.makers.RingBackgroundMaker.make_maps_off", false]], "make_mask_bkg_invalid() (gammapy.makers.safemaskmaker static method)": [[182, "gammapy.makers.SafeMaskMaker.make_mask_bkg_invalid", false]], "make_mask_energy_aeff_default() (gammapy.makers.safemaskmaker static method)": [[182, "gammapy.makers.SafeMaskMaker.make_mask_energy_aeff_default", false]], "make_mask_energy_aeff_max() (gammapy.makers.safemaskmaker method)": [[182, "gammapy.makers.SafeMaskMaker.make_mask_energy_aeff_max", false]], "make_mask_energy_bkg_peak() (gammapy.makers.safemaskmaker method)": [[182, "gammapy.makers.SafeMaskMaker.make_mask_energy_bkg_peak", false]], "make_mask_energy_edisp_bias() (gammapy.makers.safemaskmaker method)": [[182, "gammapy.makers.SafeMaskMaker.make_mask_energy_edisp_bias", false]], "make_mask_offset_max() (gammapy.makers.safemaskmaker method)": [[182, "gammapy.makers.SafeMaskMaker.make_mask_offset_max", false]], "make_meta_table() (gammapy.makers.mapdatasetmaker static method)": [[176, "gammapy.makers.MapDatasetMaker.make_meta_table", false]], "make_meta_table() (gammapy.makers.spectrumdatasetmaker static method)": [[183, "gammapy.makers.SpectrumDatasetMaker.make_meta_table", false]], "make_observation_time_map() (in module gammapy.makers.utils)": [[191, "gammapy.makers.utils.make_observation_time_map", false]], "make_orthogonal_rectangle_sky_regions() (in module gammapy.utils.regions)": [[347, "gammapy.utils.regions.make_orthogonal_rectangle_sky_regions", false]], "make_path() (in module gammapy.utils.scripts)": [[352, "gammapy.utils.scripts.make_path", false]], "make_psf() (gammapy.makers.mapdatasetmaker method)": [[176, "gammapy.makers.MapDatasetMaker.make_psf", false]], "make_psf() (gammapy.makers.spectrumdatasetmaker method)": [[183, "gammapy.makers.SpectrumDatasetMaker.make_psf", false]], "make_psf_map() (in module gammapy.makers.utils)": [[192, "gammapy.makers.utils.make_psf_map", false]], "make_theta_squared_table() (in module gammapy.makers.utils)": [[193, "gammapy.makers.utils.make_theta_squared_table", false]], "maker": [[597, "term-Maker", true]], "maker (class in gammapy.makers)": [[175, "gammapy.makers.Maker", false]], "maker_registry (in module gammapy.makers)": [[174, "gammapy.makers.MAKER_REGISTRY", false]], "map (class in gammapy.maps)": [[199, "gammapy.maps.Map", false]], "map (gammapy.astro.darkmatter.primaryflux attribute)": [[26, "gammapy.astro.darkmatter.PrimaryFlux.map", false]], "map (gammapy.modeling.models.templatendspatialmodel attribute)": [[275, "gammapy.modeling.models.TemplateNDSpatialModel.map", false]], "map (gammapy.modeling.models.templatendspectralmodel attribute)": [[276, "gammapy.modeling.models.TemplateNDSpectralModel.map", false]], "map (gammapy.modeling.models.templatenpredmodel attribute)": [[277, "gammapy.modeling.models.TemplateNPredModel.map", false]], "map (gammapy.modeling.models.templatespatialmodel attribute)": [[279, "gammapy.modeling.models.TemplateSpatialModel.map", false]], "map_center (gammapy.modeling.models.templatespatialmodel attribute)": [[279, "gammapy.modeling.models.TemplateSpatialModel.map_center", false]], "map_coord() (gammapy.data.eventlist method)": [[83, "gammapy.data.EventList.map_coord", false]], "mapaxes (class in gammapy.maps)": [[200, "gammapy.maps.MapAxes", false]], "mapaxis (class in gammapy.maps)": [[201, "gammapy.maps.MapAxis", false]], "mapcoord (class in gammapy.maps)": [[202, "gammapy.maps.MapCoord", false]], "mapdataset (class in gammapy.datasets)": [[103, "gammapy.datasets.MapDataset", false]], "mapdataseteventsampler (class in gammapy.datasets)": [[104, "gammapy.datasets.MapDatasetEventSampler", false]], "mapdatasetmaker (class in gammapy.makers)": [[176, "gammapy.makers.MapDatasetMaker", false]], "mapdatasetmetadata (class in gammapy.datasets)": [[105, "gammapy.datasets.MapDatasetMetaData", false]], "mapdatasetonoff (class in gammapy.datasets)": [[106, "gammapy.datasets.MapDatasetOnOff", false]], "mappanelplotter (class in gammapy.visualization)": [[374, "gammapy.visualization.MapPanelPlotter", false]], "maps (class in gammapy.maps)": [[203, "gammapy.maps.Maps", false]], "mask (gammapy.data.hduindextable attribute)": [[87, "gammapy.data.HDUIndexTable.mask", false]], "mask (gammapy.data.observationtable attribute)": [[91, "gammapy.data.ObservationTable.mask", false]], "mask (gammapy.datasets.dataset attribute)": [[99, "gammapy.datasets.Dataset.mask", false]], "mask (gammapy.datasets.fluxpointsdataset attribute)": [[102, "gammapy.datasets.FluxPointsDataset.mask", false]], "mask (gammapy.datasets.mapdataset attribute)": [[103, "gammapy.datasets.MapDataset.mask", false]], "mask (gammapy.datasets.mapdatasetonoff attribute)": [[106, "gammapy.datasets.MapDatasetOnOff.mask", false]], "mask (gammapy.datasets.spectrumdataset attribute)": [[110, "gammapy.datasets.SpectrumDataset.mask", false]], "mask (gammapy.datasets.spectrumdatasetonoff attribute)": [[111, "gammapy.datasets.SpectrumDatasetOnOff.mask", false]], "mask_contains_region() (gammapy.maps.wcsndmap method)": [[209, "gammapy.maps.WcsNDMap.mask_contains_region", false]], "mask_fit (gammapy.datasets.mapdataset attribute)": [[103, "gammapy.datasets.MapDataset.mask_fit", false]], "mask_fit (gammapy.datasets.mapdatasetonoff attribute)": [[106, "gammapy.datasets.MapDatasetOnOff.mask_fit", false]], "mask_fit (gammapy.datasets.spectrumdataset attribute)": [[110, "gammapy.datasets.SpectrumDataset.mask_fit", false]], "mask_fit (gammapy.datasets.spectrumdatasetonoff attribute)": [[111, "gammapy.datasets.SpectrumDatasetOnOff.mask_fit", false]], "mask_fit_image (gammapy.datasets.mapdataset attribute)": [[103, "gammapy.datasets.MapDataset.mask_fit_image", false]], "mask_fit_image (gammapy.datasets.mapdatasetonoff attribute)": [[106, "gammapy.datasets.MapDatasetOnOff.mask_fit_image", false]], "mask_fit_image (gammapy.datasets.spectrumdataset attribute)": [[110, "gammapy.datasets.SpectrumDataset.mask_fit_image", false]], "mask_fit_image (gammapy.datasets.spectrumdatasetonoff attribute)": [[111, "gammapy.datasets.SpectrumDatasetOnOff.mask_fit_image", false]], "mask_image (gammapy.datasets.mapdataset attribute)": [[103, "gammapy.datasets.MapDataset.mask_image", false]], "mask_image (gammapy.datasets.mapdatasetonoff attribute)": [[106, "gammapy.datasets.MapDatasetOnOff.mask_image", false]], "mask_image (gammapy.datasets.spectrumdataset attribute)": [[110, "gammapy.datasets.SpectrumDataset.mask_image", false]], "mask_image (gammapy.datasets.spectrumdatasetonoff attribute)": [[111, "gammapy.datasets.SpectrumDatasetOnOff.mask_image", false]], "mask_nearest_position() (gammapy.maps.hpxmap method)": [[196, "gammapy.maps.HpxMap.mask_nearest_position", false]], "mask_nearest_position() (gammapy.maps.hpxndmap method)": [[197, "gammapy.maps.HpxNDMap.mask_nearest_position", false]], "mask_nearest_position() (gammapy.maps.map method)": [[199, "gammapy.maps.Map.mask_nearest_position", false]], "mask_nearest_position() (gammapy.maps.regionndmap method)": [[205, "gammapy.maps.RegionNDMap.mask_nearest_position", false]], "mask_nearest_position() (gammapy.maps.wcsmap method)": [[208, "gammapy.maps.WcsMap.mask_nearest_position", false]], "mask_nearest_position() (gammapy.maps.wcsndmap method)": [[209, "gammapy.maps.WcsNDMap.mask_nearest_position", false]], "mask_safe (gammapy.datasets.fluxpointsdataset attribute)": [[102, "gammapy.datasets.FluxPointsDataset.mask_safe", false]], "mask_safe (gammapy.datasets.mapdataset attribute)": [[103, "gammapy.datasets.MapDataset.mask_safe", false]], "mask_safe (gammapy.datasets.mapdatasetonoff attribute)": [[106, "gammapy.datasets.MapDatasetOnOff.mask_safe", false]], "mask_safe (gammapy.datasets.spectrumdataset attribute)": [[110, "gammapy.datasets.SpectrumDataset.mask_safe", false]], "mask_safe (gammapy.datasets.spectrumdatasetonoff attribute)": [[111, "gammapy.datasets.SpectrumDatasetOnOff.mask_safe", false]], "mask_safe_edisp (gammapy.datasets.mapdataset attribute)": [[103, "gammapy.datasets.MapDataset.mask_safe_edisp", false]], "mask_safe_edisp (gammapy.datasets.mapdatasetonoff attribute)": [[106, "gammapy.datasets.MapDatasetOnOff.mask_safe_edisp", false]], "mask_safe_edisp (gammapy.datasets.spectrumdataset attribute)": [[110, "gammapy.datasets.SpectrumDataset.mask_safe_edisp", false]], "mask_safe_edisp (gammapy.datasets.spectrumdatasetonoff attribute)": [[111, "gammapy.datasets.SpectrumDatasetOnOff.mask_safe_edisp", false]], "mask_safe_image (gammapy.datasets.mapdataset attribute)": [[103, "gammapy.datasets.MapDataset.mask_safe_image", false]], "mask_safe_image (gammapy.datasets.mapdatasetonoff attribute)": [[106, "gammapy.datasets.MapDatasetOnOff.mask_safe_image", false]], "mask_safe_image (gammapy.datasets.spectrumdataset attribute)": [[110, "gammapy.datasets.SpectrumDataset.mask_safe_image", false]], "mask_safe_image (gammapy.datasets.spectrumdatasetonoff attribute)": [[111, "gammapy.datasets.SpectrumDatasetOnOff.mask_safe_image", false]], "mask_safe_image (gammapy.irf.edispkernelmap attribute)": [[154, "gammapy.irf.EDispKernelMap.mask_safe_image", false]], "mask_safe_image (gammapy.irf.edispmap attribute)": [[155, "gammapy.irf.EDispMap.mask_safe_image", false]], "mask_safe_image (gammapy.irf.irfmap attribute)": [[161, "gammapy.irf.IRFMap.mask_safe_image", false]], "mask_safe_image (gammapy.irf.psfmap attribute)": [[166, "gammapy.irf.PSFMap.mask_safe_image", false]], "mask_safe_image (gammapy.irf.recopsfmap attribute)": [[169, "gammapy.irf.RecoPSFMap.mask_safe_image", false]], "mask_safe_psf (gammapy.datasets.mapdataset attribute)": [[103, "gammapy.datasets.MapDataset.mask_safe_psf", false]], "mask_safe_psf (gammapy.datasets.mapdatasetonoff attribute)": [[106, "gammapy.datasets.MapDatasetOnOff.mask_safe_psf", false]], "mask_safe_psf (gammapy.datasets.spectrumdataset attribute)": [[110, "gammapy.datasets.SpectrumDataset.mask_safe_psf", false]], "mask_safe_psf (gammapy.datasets.spectrumdatasetonoff attribute)": [[111, "gammapy.datasets.SpectrumDatasetOnOff.mask_safe_psf", false]], "mask_valid (gammapy.datasets.fluxpointsdataset attribute)": [[102, "gammapy.datasets.FluxPointsDataset.mask_valid", false]], "masked (gammapy.data.hduindextable attribute)": [[87, "gammapy.data.HDUIndexTable.masked", false]], "masked (gammapy.data.observationtable attribute)": [[91, "gammapy.data.ObservationTable.masked", false]], "match_by_name (gammapy.maps.mapcoord attribute)": [[202, "gammapy.maps.MapCoord.match_by_name", false]], "matrix (gammapy.modeling.covarianceresult attribute)": [[213, "gammapy.modeling.CovarianceResult.matrix", false]], "max (gammapy.modeling.models.loguniformprior attribute)": [[246, "gammapy.modeling.models.LogUniformPrior.max", false]], "max (gammapy.modeling.models.uniformprior attribute)": [[282, "gammapy.modeling.models.UniformPrior.max", false]], "max (gammapy.modeling.parameter attribute)": [[217, "gammapy.modeling.Parameter.max", false]], "max (gammapy.modeling.parameters attribute)": [[218, "gammapy.modeling.Parameters.max", false]], "max (gammapy.modeling.priorparameter attribute)": [[219, "gammapy.modeling.PriorParameter.max", false]], "max (gammapy.modeling.priorparameters attribute)": [[220, "gammapy.modeling.PriorParameters.max", false]], "mcmc": [[597, "term-MCMC", true]], "mdm (gammapy.astro.darkmatter.primaryflux attribute)": [[26, "gammapy.astro.darkmatter.PrimaryFlux.mDM", false]], "mean (gammapy.modeling.models.gaussianspectralmodel attribute)": [[238, "gammapy.modeling.models.GaussianSpectralModel.mean", false]], "message (gammapy.modeling.covarianceresult attribute)": [[213, "gammapy.modeling.CovarianceResult.message", false]], "message (gammapy.modeling.fitresult attribute)": [[215, "gammapy.modeling.FitResult.message", false]], "message (gammapy.modeling.optimizeresult attribute)": [[216, "gammapy.modeling.OptimizeResult.message", false]], "met": [[597, "term-MET", true]], "met_start (gammapy.data.gti attribute)": [[86, "gammapy.data.GTI.met_start", false]], "met_stop (gammapy.data.gti attribute)": [[86, "gammapy.data.GTI.met_stop", false]], "meta (gammapy.astro.population.casebattacharya1998 attribute)": [[28, "gammapy.astro.population.CaseBattacharya1998.meta", false]], "meta (gammapy.astro.population.exponential attribute)": [[29, "gammapy.astro.population.Exponential.meta", false]], "meta (gammapy.astro.population.faucherkaspi2006 attribute)": [[30, "gammapy.astro.population.FaucherKaspi2006.meta", false]], "meta (gammapy.astro.population.faucherkaspi2006velocitybimodal attribute)": [[31, "gammapy.astro.population.FaucherKaspi2006VelocityBimodal.meta", false]], "meta (gammapy.astro.population.faucherkaspi2006velocitymaxwellian attribute)": [[32, "gammapy.astro.population.FaucherKaspi2006VelocityMaxwellian.meta", false]], "meta (gammapy.astro.population.lorimer2006 attribute)": [[35, "gammapy.astro.population.Lorimer2006.meta", false]], "meta (gammapy.astro.population.paczynski1990 attribute)": [[36, "gammapy.astro.population.Paczynski1990.meta", false]], "meta (gammapy.astro.population.paczynski1990velocity attribute)": [[37, "gammapy.astro.population.Paczynski1990Velocity.meta", false]], "meta (gammapy.astro.population.yusifovkucuk2004 attribute)": [[39, "gammapy.astro.population.YusifovKucuk2004.meta", false]], "meta (gammapy.astro.population.yusifovkucuk2004b attribute)": [[40, "gammapy.astro.population.YusifovKucuk2004B.meta", false]], "meta (gammapy.data.hduindextable attribute)": [[87, "gammapy.data.HDUIndexTable.meta", false]], "meta (gammapy.data.observation attribute)": [[88, "gammapy.data.Observation.meta", false]], "meta (gammapy.data.observationtable attribute)": [[91, "gammapy.data.ObservationTable.meta", false]], "meta (gammapy.datasets.mapdataset attribute)": [[103, "gammapy.datasets.MapDataset.meta", false]], "meta (gammapy.datasets.mapdatasetonoff attribute)": [[106, "gammapy.datasets.MapDatasetOnOff.meta", false]], "meta (gammapy.datasets.spectrumdataset attribute)": [[110, "gammapy.datasets.SpectrumDataset.meta", false]], "meta (gammapy.datasets.spectrumdatasetonoff attribute)": [[111, "gammapy.datasets.SpectrumDatasetOnOff.meta", false]], "meta (gammapy.maps.hpxmap attribute)": [[196, "gammapy.maps.HpxMap.meta", false]], "meta (gammapy.maps.hpxndmap attribute)": [[197, "gammapy.maps.HpxNDMap.meta", false]], "meta (gammapy.maps.map attribute)": [[199, "gammapy.maps.Map.meta", false]], "meta (gammapy.maps.regionndmap attribute)": [[205, "gammapy.maps.RegionNDMap.meta", false]], "meta (gammapy.maps.wcsmap attribute)": [[208, "gammapy.maps.WcsMap.meta", false]], "meta (gammapy.maps.wcsndmap attribute)": [[209, "gammapy.maps.WcsNDMap.meta", false]], "meta_table (gammapy.datasets.datasets attribute)": [[100, "gammapy.datasets.Datasets.meta_table", false]], "meta_table (gammapy.datasets.mapdataset attribute)": [[103, "gammapy.datasets.MapDataset.meta_table", false]], "meta_table (gammapy.datasets.mapdatasetonoff attribute)": [[106, "gammapy.datasets.MapDatasetOnOff.meta_table", false]], "meta_table (gammapy.datasets.spectrumdataset attribute)": [[110, "gammapy.datasets.SpectrumDataset.meta_table", false]], "meta_table (gammapy.datasets.spectrumdatasetonoff attribute)": [[111, "gammapy.datasets.SpectrumDatasetOnOff.meta_table", false]], "method (gammapy.makers.fovbackgroundmaker attribute)": [[173, "gammapy.makers.FoVBackgroundMaker.method", false]], "method (gammapy.modeling.covarianceresult attribute)": [[213, "gammapy.modeling.CovarianceResult.method", false]], "method (gammapy.modeling.fitresult attribute)": [[215, "gammapy.modeling.FitResult.method", false]], "method (gammapy.modeling.optimizeresult attribute)": [[216, "gammapy.modeling.OptimizeResult.method", false]], "method_default (in module gammapy.utils.parallel)": [[330, "gammapy.utils.parallel.METHOD_DEFAULT", false]], "method_kwargs_default (in module gammapy.utils.parallel)": [[331, "gammapy.utils.parallel.METHOD_KWARGS_DEFAULT", false]], "meyercrabspectralmodel (class in gammapy.modeling.models)": [[248, "gammapy.modeling.models.MeyerCrabSpectralModel", false]], "min (gammapy.modeling.models.loguniformprior attribute)": [[246, "gammapy.modeling.models.LogUniformPrior.min", false]], "min (gammapy.modeling.models.uniformprior attribute)": [[282, "gammapy.modeling.models.UniformPrior.min", false]], "min (gammapy.modeling.parameter attribute)": [[217, "gammapy.modeling.Parameter.min", false]], "min (gammapy.modeling.parameters attribute)": [[218, "gammapy.modeling.Parameters.min", false]], "min (gammapy.modeling.priorparameter attribute)": [[219, "gammapy.modeling.PriorParameter.min", false]], "min (gammapy.modeling.priorparameters attribute)": [[220, "gammapy.modeling.PriorParameters.min", false]], "minuit (gammapy.modeling.fitresult attribute)": [[215, "gammapy.modeling.FitResult.minuit", false]], "minuit (gammapy.modeling.optimizeresult attribute)": [[216, "gammapy.modeling.OptimizeResult.minuit", false]], "mode (gammapy.data.fixedpointinginfo attribute)": [[85, "gammapy.data.FixedPointingInfo.mode", false]], "model (class in gammapy.modeling.models)": [[249, "gammapy.modeling.models.Model", false]], "model_computed_fields (gammapy.analysis.analysisconfig attribute)": [[16, "gammapy.analysis.AnalysisConfig.model_computed_fields", false]], "model_computed_fields (gammapy.data.eventlistmetadata attribute)": [[84, "gammapy.data.EventListMetaData.model_computed_fields", false]], "model_computed_fields (gammapy.data.observationmetadata attribute)": [[90, "gammapy.data.ObservationMetaData.model_computed_fields", false]], "model_computed_fields (gammapy.datasets.mapdatasetmetadata attribute)": [[105, "gammapy.datasets.MapDatasetMetaData.model_computed_fields", false]], "model_computed_fields (gammapy.estimators.fluxmetadata attribute)": [[126, "gammapy.estimators.FluxMetaData.model_computed_fields", false]], "model_config (gammapy.analysis.analysisconfig attribute)": [[16, "gammapy.analysis.AnalysisConfig.model_config", false]], "model_config (gammapy.data.eventlistmetadata attribute)": [[84, "gammapy.data.EventListMetaData.model_config", false]], "model_config (gammapy.data.observationmetadata attribute)": [[90, "gammapy.data.ObservationMetaData.model_config", false]], "model_config (gammapy.datasets.mapdatasetmetadata attribute)": [[105, "gammapy.datasets.MapDatasetMetaData.model_config", false]], "model_config (gammapy.estimators.fluxmetadata attribute)": [[126, "gammapy.estimators.FluxMetaData.model_config", false]], "model_constraints (gammapy.astro.population.casebattacharya1998 attribute)": [[28, "gammapy.astro.population.CaseBattacharya1998.model_constraints", false]], "model_constraints (gammapy.astro.population.exponential attribute)": [[29, "gammapy.astro.population.Exponential.model_constraints", false]], "model_constraints (gammapy.astro.population.faucherkaspi2006 attribute)": [[30, "gammapy.astro.population.FaucherKaspi2006.model_constraints", false]], "model_constraints (gammapy.astro.population.faucherkaspi2006velocitybimodal attribute)": [[31, "gammapy.astro.population.FaucherKaspi2006VelocityBimodal.model_constraints", false]], "model_constraints (gammapy.astro.population.faucherkaspi2006velocitymaxwellian attribute)": [[32, "gammapy.astro.population.FaucherKaspi2006VelocityMaxwellian.model_constraints", false]], "model_constraints (gammapy.astro.population.lorimer2006 attribute)": [[35, "gammapy.astro.population.Lorimer2006.model_constraints", false]], "model_constraints (gammapy.astro.population.paczynski1990 attribute)": [[36, "gammapy.astro.population.Paczynski1990.model_constraints", false]], "model_constraints (gammapy.astro.population.paczynski1990velocity attribute)": [[37, "gammapy.astro.population.Paczynski1990Velocity.model_constraints", false]], "model_constraints (gammapy.astro.population.yusifovkucuk2004 attribute)": [[39, "gammapy.astro.population.YusifovKucuk2004.model_constraints", false]], "model_constraints (gammapy.astro.population.yusifovkucuk2004b attribute)": [[40, "gammapy.astro.population.YusifovKucuk2004B.model_constraints", false]], "model_construct() (gammapy.analysis.analysisconfig class method)": [[16, "gammapy.analysis.AnalysisConfig.model_construct", false]], "model_construct() (gammapy.data.eventlistmetadata class method)": [[84, "gammapy.data.EventListMetaData.model_construct", false]], "model_construct() (gammapy.data.observationmetadata class method)": [[90, "gammapy.data.ObservationMetaData.model_construct", false]], "model_construct() (gammapy.datasets.mapdatasetmetadata class method)": [[105, "gammapy.datasets.MapDatasetMetaData.model_construct", false]], "model_construct() (gammapy.estimators.fluxmetadata class method)": [[126, "gammapy.estimators.FluxMetaData.model_construct", false]], "model_copy() (gammapy.analysis.analysisconfig method)": [[16, "gammapy.analysis.AnalysisConfig.model_copy", false]], "model_copy() (gammapy.data.eventlistmetadata method)": [[84, "gammapy.data.EventListMetaData.model_copy", false]], "model_copy() (gammapy.data.observationmetadata method)": [[90, "gammapy.data.ObservationMetaData.model_copy", false]], "model_copy() (gammapy.datasets.mapdatasetmetadata method)": [[105, "gammapy.datasets.MapDatasetMetaData.model_copy", false]], "model_copy() (gammapy.estimators.fluxmetadata method)": [[126, "gammapy.estimators.FluxMetaData.model_copy", false]], "model_dump() (gammapy.analysis.analysisconfig method)": [[16, "gammapy.analysis.AnalysisConfig.model_dump", false]], "model_dump() (gammapy.data.eventlistmetadata method)": [[84, "gammapy.data.EventListMetaData.model_dump", false]], "model_dump() (gammapy.data.observationmetadata method)": [[90, "gammapy.data.ObservationMetaData.model_dump", false]], "model_dump() (gammapy.datasets.mapdatasetmetadata method)": [[105, "gammapy.datasets.MapDatasetMetaData.model_dump", false]], "model_dump() (gammapy.estimators.fluxmetadata method)": [[126, "gammapy.estimators.FluxMetaData.model_dump", false]], "model_dump_json() (gammapy.analysis.analysisconfig method)": [[16, "gammapy.analysis.AnalysisConfig.model_dump_json", false]], "model_dump_json() (gammapy.data.eventlistmetadata method)": [[84, "gammapy.data.EventListMetaData.model_dump_json", false]], "model_dump_json() (gammapy.data.observationmetadata method)": [[90, "gammapy.data.ObservationMetaData.model_dump_json", false]], "model_dump_json() (gammapy.datasets.mapdatasetmetadata method)": [[105, "gammapy.datasets.MapDatasetMetaData.model_dump_json", false]], "model_dump_json() (gammapy.estimators.fluxmetadata method)": [[126, "gammapy.estimators.FluxMetaData.model_dump_json", false]], "model_extra (gammapy.analysis.analysisconfig attribute)": [[16, "gammapy.analysis.AnalysisConfig.model_extra", false]], "model_extra (gammapy.data.eventlistmetadata attribute)": [[84, "gammapy.data.EventListMetaData.model_extra", false]], "model_extra (gammapy.data.observationmetadata attribute)": [[90, "gammapy.data.ObservationMetaData.model_extra", false]], "model_extra (gammapy.datasets.mapdatasetmetadata attribute)": [[105, "gammapy.datasets.MapDatasetMetaData.model_extra", false]], "model_extra (gammapy.estimators.fluxmetadata attribute)": [[126, "gammapy.estimators.FluxMetaData.model_extra", false]], "model_fields (gammapy.analysis.analysisconfig attribute)": [[16, "gammapy.analysis.AnalysisConfig.model_fields", false]], "model_fields (gammapy.data.eventlistmetadata attribute)": [[84, "gammapy.data.EventListMetaData.model_fields", false]], "model_fields (gammapy.data.observationmetadata attribute)": [[90, "gammapy.data.ObservationMetaData.model_fields", false]], "model_fields (gammapy.datasets.mapdatasetmetadata attribute)": [[105, "gammapy.datasets.MapDatasetMetaData.model_fields", false]], "model_fields (gammapy.estimators.fluxmetadata attribute)": [[126, "gammapy.estimators.FluxMetaData.model_fields", false]], "model_fields_set (gammapy.analysis.analysisconfig attribute)": [[16, "gammapy.analysis.AnalysisConfig.model_fields_set", false]], "model_fields_set (gammapy.data.eventlistmetadata attribute)": [[84, "gammapy.data.EventListMetaData.model_fields_set", false]], "model_fields_set (gammapy.data.observationmetadata attribute)": [[90, "gammapy.data.ObservationMetaData.model_fields_set", false]], "model_fields_set (gammapy.datasets.mapdatasetmetadata attribute)": [[105, "gammapy.datasets.MapDatasetMetaData.model_fields_set", false]], "model_fields_set (gammapy.estimators.fluxmetadata attribute)": [[126, "gammapy.estimators.FluxMetaData.model_fields_set", false]], "model_json_schema() (gammapy.analysis.analysisconfig class method)": [[16, "gammapy.analysis.AnalysisConfig.model_json_schema", false]], "model_json_schema() (gammapy.data.eventlistmetadata class method)": [[84, "gammapy.data.EventListMetaData.model_json_schema", false]], "model_json_schema() (gammapy.data.observationmetadata class method)": [[90, "gammapy.data.ObservationMetaData.model_json_schema", false]], "model_json_schema() (gammapy.datasets.mapdatasetmetadata class method)": [[105, "gammapy.datasets.MapDatasetMetaData.model_json_schema", false]], "model_json_schema() (gammapy.estimators.fluxmetadata class method)": [[126, "gammapy.estimators.FluxMetaData.model_json_schema", false]], "model_parametrized_name() (gammapy.analysis.analysisconfig class method)": [[16, "gammapy.analysis.AnalysisConfig.model_parametrized_name", false]], "model_parametrized_name() (gammapy.data.eventlistmetadata class method)": [[84, "gammapy.data.EventListMetaData.model_parametrized_name", false]], "model_parametrized_name() (gammapy.data.observationmetadata class method)": [[90, "gammapy.data.ObservationMetaData.model_parametrized_name", false]], "model_parametrized_name() (gammapy.datasets.mapdatasetmetadata class method)": [[105, "gammapy.datasets.MapDatasetMetaData.model_parametrized_name", false]], "model_parametrized_name() (gammapy.estimators.fluxmetadata class method)": [[126, "gammapy.estimators.FluxMetaData.model_parametrized_name", false]], "model_post_init() (gammapy.analysis.analysisconfig method)": [[16, "gammapy.analysis.AnalysisConfig.model_post_init", false]], "model_post_init() (gammapy.data.eventlistmetadata method)": [[84, "gammapy.data.EventListMetaData.model_post_init", false]], "model_post_init() (gammapy.data.observationmetadata method)": [[90, "gammapy.data.ObservationMetaData.model_post_init", false]], "model_post_init() (gammapy.datasets.mapdatasetmetadata method)": [[105, "gammapy.datasets.MapDatasetMetaData.model_post_init", false]], "model_post_init() (gammapy.estimators.fluxmetadata method)": [[126, "gammapy.estimators.FluxMetaData.model_post_init", false]], "model_rebuild() (gammapy.analysis.analysisconfig class method)": [[16, "gammapy.analysis.AnalysisConfig.model_rebuild", false]], "model_rebuild() (gammapy.data.eventlistmetadata class method)": [[84, "gammapy.data.EventListMetaData.model_rebuild", false]], "model_rebuild() (gammapy.data.observationmetadata class method)": [[90, "gammapy.data.ObservationMetaData.model_rebuild", false]], "model_rebuild() (gammapy.datasets.mapdatasetmetadata class method)": [[105, "gammapy.datasets.MapDatasetMetaData.model_rebuild", false]], "model_rebuild() (gammapy.estimators.fluxmetadata class method)": [[126, "gammapy.estimators.FluxMetaData.model_rebuild", false]], "model_registry (in module gammapy.modeling.models)": [[247, "gammapy.modeling.models.MODEL_REGISTRY", false]], "model_set_axis (gammapy.astro.population.casebattacharya1998 attribute)": [[28, "gammapy.astro.population.CaseBattacharya1998.model_set_axis", false]], "model_set_axis (gammapy.astro.population.exponential attribute)": [[29, "gammapy.astro.population.Exponential.model_set_axis", false]], "model_set_axis (gammapy.astro.population.faucherkaspi2006 attribute)": [[30, "gammapy.astro.population.FaucherKaspi2006.model_set_axis", false]], "model_set_axis (gammapy.astro.population.faucherkaspi2006velocitybimodal attribute)": [[31, "gammapy.astro.population.FaucherKaspi2006VelocityBimodal.model_set_axis", false]], "model_set_axis (gammapy.astro.population.faucherkaspi2006velocitymaxwellian attribute)": [[32, "gammapy.astro.population.FaucherKaspi2006VelocityMaxwellian.model_set_axis", false]], "model_set_axis (gammapy.astro.population.lorimer2006 attribute)": [[35, "gammapy.astro.population.Lorimer2006.model_set_axis", false]], "model_set_axis (gammapy.astro.population.paczynski1990 attribute)": [[36, "gammapy.astro.population.Paczynski1990.model_set_axis", false]], "model_set_axis (gammapy.astro.population.paczynski1990velocity attribute)": [[37, "gammapy.astro.population.Paczynski1990Velocity.model_set_axis", false]], "model_set_axis (gammapy.astro.population.yusifovkucuk2004 attribute)": [[39, "gammapy.astro.population.YusifovKucuk2004.model_set_axis", false]], "model_set_axis (gammapy.astro.population.yusifovkucuk2004b attribute)": [[40, "gammapy.astro.population.YusifovKucuk2004B.model_set_axis", false]], "model_validate() (gammapy.analysis.analysisconfig class method)": [[16, "gammapy.analysis.AnalysisConfig.model_validate", false]], "model_validate() (gammapy.data.eventlistmetadata class method)": [[84, "gammapy.data.EventListMetaData.model_validate", false]], "model_validate() (gammapy.data.observationmetadata class method)": [[90, "gammapy.data.ObservationMetaData.model_validate", false]], "model_validate() (gammapy.datasets.mapdatasetmetadata class method)": [[105, "gammapy.datasets.MapDatasetMetaData.model_validate", false]], "model_validate() (gammapy.estimators.fluxmetadata class method)": [[126, "gammapy.estimators.FluxMetaData.model_validate", false]], "model_validate_json() (gammapy.analysis.analysisconfig class method)": [[16, "gammapy.analysis.AnalysisConfig.model_validate_json", false]], "model_validate_json() (gammapy.data.eventlistmetadata class method)": [[84, "gammapy.data.EventListMetaData.model_validate_json", false]], "model_validate_json() (gammapy.data.observationmetadata class method)": [[90, "gammapy.data.ObservationMetaData.model_validate_json", false]], "model_validate_json() (gammapy.datasets.mapdatasetmetadata class method)": [[105, "gammapy.datasets.MapDatasetMetaData.model_validate_json", false]], "model_validate_json() (gammapy.estimators.fluxmetadata class method)": [[126, "gammapy.estimators.FluxMetaData.model_validate_json", false]], "model_validate_strings() (gammapy.analysis.analysisconfig class method)": [[16, "gammapy.analysis.AnalysisConfig.model_validate_strings", false]], "model_validate_strings() (gammapy.data.eventlistmetadata class method)": [[84, "gammapy.data.EventListMetaData.model_validate_strings", false]], "model_validate_strings() (gammapy.data.observationmetadata class method)": [[90, "gammapy.data.ObservationMetaData.model_validate_strings", false]], "model_validate_strings() (gammapy.datasets.mapdatasetmetadata class method)": [[105, "gammapy.datasets.MapDatasetMetaData.model_validate_strings", false]], "model_validate_strings() (gammapy.estimators.fluxmetadata class method)": [[126, "gammapy.estimators.FluxMetaData.model_validate_strings", false]], "modelbase (class in gammapy.modeling.models)": [[250, "gammapy.modeling.models.ModelBase", false]], "models (class in gammapy.modeling.models)": [[251, "gammapy.modeling.models.Models", false]], "models (gammapy.analysis.analysis attribute)": [[15, "gammapy.analysis.Analysis.models", false]], "models (gammapy.datasets.datasets attribute)": [[100, "gammapy.datasets.Datasets.models", false]], "models (gammapy.datasets.fluxpointsdataset attribute)": [[102, "gammapy.datasets.FluxPointsDataset.models", false]], "models (gammapy.datasets.mapdataset attribute)": [[103, "gammapy.datasets.MapDataset.models", false]], "models (gammapy.datasets.mapdatasetonoff attribute)": [[106, "gammapy.datasets.MapDatasetOnOff.models", false]], "models (gammapy.datasets.spectrumdataset attribute)": [[110, "gammapy.datasets.SpectrumDataset.models", false]], "models (gammapy.datasets.spectrumdatasetonoff attribute)": [[111, "gammapy.datasets.SpectrumDatasetOnOff.models", false]], "models (gammapy.modeling.fitresult attribute)": [[215, "gammapy.modeling.FitResult.models", false]], "models (gammapy.modeling.optimizeresult attribute)": [[216, "gammapy.modeling.OptimizeResult.models", false]], "module": [[0, "module-gammapy.analysis", false], [1, "module-gammapy.astro.darkmatter", false], [1, "module-gammapy.astro.population", false], [1, "module-gammapy.astro.source", false], [2, "module-gammapy.catalog", false], [3, "module-gammapy.data", false], [4, "module-gammapy.datasets", false], [4, "module-gammapy.datasets.utils", false], [5, "module-gammapy.estimators", false], [5, "module-gammapy.estimators.utils", false], [7, "module-gammapy.irf", false], [8, "module-gammapy.makers", false], [8, "module-gammapy.makers.utils", false], [9, "module-gammapy.maps", false], [10, "module-gammapy.modeling", false], [10, "module-gammapy.modeling.models", false], [10, "module-gammapy.modeling.models.utils", false], [12, "module-gammapy.stats", false], [13, "module-gammapy.utils.cluster", false], [13, "module-gammapy.utils.coordinates", false], [13, "module-gammapy.utils.fits", false], [13, "module-gammapy.utils.integrate", false], [13, "module-gammapy.utils.interpolation", false], [13, "module-gammapy.utils.parallel", false], [13, "module-gammapy.utils.random", false], [13, "module-gammapy.utils.regions", false], [13, "module-gammapy.utils.scripts", false], [13, "module-gammapy.utils.table", false], [13, "module-gammapy.utils.testing", false], [13, "module-gammapy.utils.time", false], [13, "module-gammapy.utils.units", false], [14, "module-gammapy.visualization", false]], "mooreprofile (class in gammapy.astro.darkmatter)": [[24, "gammapy.astro.darkmatter.MooreProfile", false]], "more() (gammapy.data.hduindextable method)": [[87, "gammapy.data.HDUIndexTable.more", false]], "more() (gammapy.data.observationtable method)": [[91, "gammapy.data.ObservationTable.more", false]], "motion_since_birth() (in module gammapy.utils.coordinates)": [[318, "gammapy.utils.coordinates.motion_since_birth", false]], "mpl_plot_check() (in module gammapy.utils.testing)": [[365, "gammapy.utils.testing.mpl_plot_check", false]], "mu (gammapy.modeling.models.gaussianprior attribute)": [[236, "gammapy.modeling.models.GaussianPrior.mu", false]], "multiprocessing_manager (class in gammapy.utils.parallel)": [[334, "gammapy.utils.parallel.multiprocessing_manager", false]], "n_bkg (gammapy.stats.cashcountsstatistic attribute)": [[292, "gammapy.stats.CashCountsStatistic.n_bkg", false]], "n_bkg (gammapy.stats.wstatcountsstatistic attribute)": [[294, "gammapy.stats.WStatCountsStatistic.n_bkg", false]], "n_dof (gammapy.estimators.fluxmaps attribute)": [[125, "gammapy.estimators.FluxMaps.n_dof", false]], "n_dof (gammapy.estimators.fluxpoints attribute)": [[127, "gammapy.estimators.FluxPoints.n_dof", false]], "n_inputs (gammapy.astro.population.casebattacharya1998 attribute)": [[28, "gammapy.astro.population.CaseBattacharya1998.n_inputs", false]], "n_inputs (gammapy.astro.population.exponential attribute)": [[29, "gammapy.astro.population.Exponential.n_inputs", false]], "n_inputs (gammapy.astro.population.faucherkaspi2006 attribute)": [[30, "gammapy.astro.population.FaucherKaspi2006.n_inputs", false]], "n_inputs (gammapy.astro.population.faucherkaspi2006velocitybimodal attribute)": [[31, "gammapy.astro.population.FaucherKaspi2006VelocityBimodal.n_inputs", false]], "n_inputs (gammapy.astro.population.faucherkaspi2006velocitymaxwellian attribute)": [[32, "gammapy.astro.population.FaucherKaspi2006VelocityMaxwellian.n_inputs", false]], "n_inputs (gammapy.astro.population.lorimer2006 attribute)": [[35, "gammapy.astro.population.Lorimer2006.n_inputs", false]], "n_inputs (gammapy.astro.population.paczynski1990 attribute)": [[36, "gammapy.astro.population.Paczynski1990.n_inputs", false]], "n_inputs (gammapy.astro.population.paczynski1990velocity attribute)": [[37, "gammapy.astro.population.Paczynski1990Velocity.n_inputs", false]], "n_inputs (gammapy.astro.population.yusifovkucuk2004 attribute)": [[39, "gammapy.astro.population.YusifovKucuk2004.n_inputs", false]], "n_inputs (gammapy.astro.population.yusifovkucuk2004b attribute)": [[40, "gammapy.astro.population.YusifovKucuk2004B.n_inputs", false]], "n_jobs (gammapy.data.observationseventssampler attribute)": [[93, "gammapy.data.ObservationsEventsSampler.n_jobs", false]], "n_jobs (gammapy.estimators.fluxpointsestimator attribute)": [[128, "gammapy.estimators.FluxPointsEstimator.n_jobs", false]], "n_jobs (gammapy.estimators.fluxprofileestimator attribute)": [[129, "gammapy.estimators.FluxProfileEstimator.n_jobs", false]], "n_jobs (gammapy.estimators.lightcurveestimator attribute)": [[132, "gammapy.estimators.LightCurveEstimator.n_jobs", false]], "n_jobs (gammapy.estimators.tsmapestimator attribute)": [[136, "gammapy.estimators.TSMapEstimator.n_jobs", false]], "n_jobs (gammapy.makers.datasetsmaker attribute)": [[172, "gammapy.makers.DatasetsMaker.n_jobs", false]], "n_jobs_default (in module gammapy.utils.parallel)": [[332, "gammapy.utils.parallel.N_JOBS_DEFAULT", false]], "n_models (gammapy.catalog.sourcecatalogobject2hwc attribute)": [[72, "gammapy.catalog.SourceCatalogObject2HWC.n_models", false]], "n_models (gammapy.catalog.sourcecatalogobject3hwc attribute)": [[76, "gammapy.catalog.SourceCatalogObject3HWC.n_models", false]], "n_outputs (gammapy.astro.population.casebattacharya1998 attribute)": [[28, "gammapy.astro.population.CaseBattacharya1998.n_outputs", false]], "n_outputs (gammapy.astro.population.exponential attribute)": [[29, "gammapy.astro.population.Exponential.n_outputs", false]], "n_outputs (gammapy.astro.population.faucherkaspi2006 attribute)": [[30, "gammapy.astro.population.FaucherKaspi2006.n_outputs", false]], "n_outputs (gammapy.astro.population.faucherkaspi2006velocitybimodal attribute)": [[31, "gammapy.astro.population.FaucherKaspi2006VelocityBimodal.n_outputs", false]], "n_outputs (gammapy.astro.population.faucherkaspi2006velocitymaxwellian attribute)": [[32, "gammapy.astro.population.FaucherKaspi2006VelocityMaxwellian.n_outputs", false]], "n_outputs (gammapy.astro.population.lorimer2006 attribute)": [[35, "gammapy.astro.population.Lorimer2006.n_outputs", false]], "n_outputs (gammapy.astro.population.paczynski1990 attribute)": [[36, "gammapy.astro.population.Paczynski1990.n_outputs", false]], "n_outputs (gammapy.astro.population.paczynski1990velocity attribute)": [[37, "gammapy.astro.population.Paczynski1990Velocity.n_outputs", false]], "n_outputs (gammapy.astro.population.yusifovkucuk2004 attribute)": [[39, "gammapy.astro.population.YusifovKucuk2004.n_outputs", false]], "n_outputs (gammapy.astro.population.yusifovkucuk2004b attribute)": [[40, "gammapy.astro.population.YusifovKucuk2004B.n_outputs", false]], "n_sig (gammapy.stats.cashcountsstatistic attribute)": [[292, "gammapy.stats.CashCountsStatistic.n_sig", false]], "n_sig (gammapy.stats.wstatcountsstatistic attribute)": [[294, "gammapy.stats.WStatCountsStatistic.n_sig", false]], "n_sig_matching_significance() (gammapy.stats.cashcountsstatistic method)": [[292, "gammapy.stats.CashCountsStatistic.n_sig_matching_significance", false]], "n_sig_matching_significance() (gammapy.stats.wstatcountsstatistic method)": [[294, "gammapy.stats.WStatCountsStatistic.n_sig_matching_significance", false]], "n_sigma (gammapy.estimators.fluxmaps attribute)": [[125, "gammapy.estimators.FluxMaps.n_sigma", false]], "n_sigma (gammapy.estimators.fluxpoints attribute)": [[127, "gammapy.estimators.FluxPoints.n_sigma", false]], "n_sigma_ul (gammapy.estimators.fluxmaps attribute)": [[125, "gammapy.estimators.FluxMaps.n_sigma_ul", false]], "n_sigma_ul (gammapy.estimators.fluxpoints attribute)": [[127, "gammapy.estimators.FluxPoints.n_sigma_ul", false]], "n_submodels (gammapy.astro.population.casebattacharya1998 attribute)": [[28, "gammapy.astro.population.CaseBattacharya1998.n_submodels", false]], "n_submodels (gammapy.astro.population.exponential attribute)": [[29, "gammapy.astro.population.Exponential.n_submodels", false]], "n_submodels (gammapy.astro.population.faucherkaspi2006 attribute)": [[30, "gammapy.astro.population.FaucherKaspi2006.n_submodels", false]], "n_submodels (gammapy.astro.population.faucherkaspi2006velocitybimodal attribute)": [[31, "gammapy.astro.population.FaucherKaspi2006VelocityBimodal.n_submodels", false]], "n_submodels (gammapy.astro.population.faucherkaspi2006velocitymaxwellian attribute)": [[32, "gammapy.astro.population.FaucherKaspi2006VelocityMaxwellian.n_submodels", false]], "n_submodels (gammapy.astro.population.lorimer2006 attribute)": [[35, "gammapy.astro.population.Lorimer2006.n_submodels", false]], "n_submodels (gammapy.astro.population.paczynski1990 attribute)": [[36, "gammapy.astro.population.Paczynski1990.n_submodels", false]], "n_submodels (gammapy.astro.population.paczynski1990velocity attribute)": [[37, "gammapy.astro.population.Paczynski1990Velocity.n_submodels", false]], "n_submodels (gammapy.astro.population.yusifovkucuk2004 attribute)": [[39, "gammapy.astro.population.YusifovKucuk2004.n_submodels", false]], "n_submodels (gammapy.astro.population.yusifovkucuk2004b attribute)": [[40, "gammapy.astro.population.YusifovKucuk2004B.n_submodels", false]], "naimaspectralmodel (class in gammapy.modeling.models)": [[252, "gammapy.modeling.models.NaimaSpectralModel", false]], "name (gammapy.astro.population.casebattacharya1998 attribute)": [[28, "gammapy.astro.population.CaseBattacharya1998.name", false]], "name (gammapy.astro.population.exponential attribute)": [[29, "gammapy.astro.population.Exponential.name", false]], "name (gammapy.astro.population.faucherkaspi2006 attribute)": [[30, "gammapy.astro.population.FaucherKaspi2006.name", false]], "name (gammapy.astro.population.faucherkaspi2006velocitybimodal attribute)": [[31, "gammapy.astro.population.FaucherKaspi2006VelocityBimodal.name", false]], "name (gammapy.astro.population.faucherkaspi2006velocitymaxwellian attribute)": [[32, "gammapy.astro.population.FaucherKaspi2006VelocityMaxwellian.name", false]], "name (gammapy.astro.population.lorimer2006 attribute)": [[35, "gammapy.astro.population.Lorimer2006.name", false]], "name (gammapy.astro.population.paczynski1990 attribute)": [[36, "gammapy.astro.population.Paczynski1990.name", false]], "name (gammapy.astro.population.paczynski1990velocity attribute)": [[37, "gammapy.astro.population.Paczynski1990Velocity.name", false]], "name (gammapy.astro.population.yusifovkucuk2004 attribute)": [[39, "gammapy.astro.population.YusifovKucuk2004.name", false]], "name (gammapy.astro.population.yusifovkucuk2004b attribute)": [[40, "gammapy.astro.population.YusifovKucuk2004B.name", false]], "name (gammapy.catalog.sourcecatalogobject attribute)": [[69, "gammapy.catalog.SourceCatalogObject.name", false]], "name (gammapy.catalog.sourcecatalogobject1lhaaso attribute)": [[70, "gammapy.catalog.SourceCatalogObject1LHAASO.name", false]], "name (gammapy.catalog.sourcecatalogobject2fhl attribute)": [[71, "gammapy.catalog.SourceCatalogObject2FHL.name", false]], "name (gammapy.catalog.sourcecatalogobject2hwc attribute)": [[72, "gammapy.catalog.SourceCatalogObject2HWC.name", false]], "name (gammapy.catalog.sourcecatalogobject2pc attribute)": [[73, "gammapy.catalog.SourceCatalogObject2PC.name", false]], "name (gammapy.catalog.sourcecatalogobject3fgl attribute)": [[74, "gammapy.catalog.SourceCatalogObject3FGL.name", false]], "name (gammapy.catalog.sourcecatalogobject3fhl attribute)": [[75, "gammapy.catalog.SourceCatalogObject3FHL.name", false]], "name (gammapy.catalog.sourcecatalogobject3hwc attribute)": [[76, "gammapy.catalog.SourceCatalogObject3HWC.name", false]], "name (gammapy.catalog.sourcecatalogobject3pc attribute)": [[77, "gammapy.catalog.SourceCatalogObject3PC.name", false]], "name (gammapy.catalog.sourcecatalogobject4fgl attribute)": [[78, "gammapy.catalog.SourceCatalogObject4FGL.name", false]], "name (gammapy.catalog.sourcecatalogobjectgammacat attribute)": [[79, "gammapy.catalog.SourceCatalogObjectGammaCat.name", false]], "name (gammapy.catalog.sourcecatalogobjecthgps attribute)": [[80, "gammapy.catalog.SourceCatalogObjectHGPS.name", false]], "name (gammapy.catalog.sourcecatalogobjecthgpscomponent attribute)": [[81, "gammapy.catalog.SourceCatalogObjectHGPSComponent.name", false]], "name (gammapy.datasets.dataset attribute)": [[99, "gammapy.datasets.Dataset.name", false]], "name (gammapy.datasets.fluxpointsdataset attribute)": [[102, "gammapy.datasets.FluxPointsDataset.name", false]], "name (gammapy.datasets.mapdataset attribute)": [[103, "gammapy.datasets.MapDataset.name", false]], "name (gammapy.datasets.mapdatasetonoff attribute)": [[106, "gammapy.datasets.MapDatasetOnOff.name", false]], "name (gammapy.datasets.spectrumdataset attribute)": [[110, "gammapy.datasets.SpectrumDataset.name", false]], "name (gammapy.datasets.spectrumdatasetonoff attribute)": [[111, "gammapy.datasets.SpectrumDatasetOnOff.name", false]], "name (gammapy.maps.labelmapaxis attribute)": [[198, "gammapy.maps.LabelMapAxis.name", false]], "name (gammapy.maps.mapaxis attribute)": [[201, "gammapy.maps.MapAxis.name", false]], "name (gammapy.maps.timemapaxis attribute)": [[206, "gammapy.maps.TimeMapAxis.name", false]], "name (gammapy.modeling.models.fovbackgroundmodel attribute)": [[235, "gammapy.modeling.models.FoVBackgroundModel.name", false]], "name (gammapy.modeling.models.skymodel attribute)": [[267, "gammapy.modeling.models.SkyModel.name", false]], "name (gammapy.modeling.models.templatenpredmodel attribute)": [[277, "gammapy.modeling.models.TemplateNPredModel.name", false]], "name (gammapy.modeling.parameter attribute)": [[217, "gammapy.modeling.Parameter.name", false]], "name (gammapy.modeling.priorparameter attribute)": [[219, "gammapy.modeling.PriorParameter.name", false]], "names (gammapy.datasets.datasets attribute)": [[100, "gammapy.datasets.Datasets.names", false]], "names (gammapy.maps.mapaxes attribute)": [[200, "gammapy.maps.MapAxes.names", false]], "names (gammapy.modeling.models.datasetmodels attribute)": [[227, "gammapy.modeling.models.DatasetModels.names", false]], "names (gammapy.modeling.models.models attribute)": [[251, "gammapy.modeling.models.Models.names", false]], "names (gammapy.modeling.parameters attribute)": [[218, "gammapy.modeling.Parameters.names", false]], "names (gammapy.modeling.priorparameters attribute)": [[220, "gammapy.modeling.PriorParameters.names", false]], "nbin (gammapy.maps.labelmapaxis attribute)": [[198, "gammapy.maps.LabelMapAxis.nbin", false]], "nbin (gammapy.maps.mapaxis attribute)": [[201, "gammapy.maps.MapAxis.nbin", false]], "nbin (gammapy.maps.timemapaxis attribute)": [[206, "gammapy.maps.TimeMapAxis.nbin", false]], "nbin_per_decade (gammapy.maps.mapaxis attribute)": [[201, "gammapy.maps.MapAxis.nbin_per_decade", false]], "ndim (gammapy.maps.hpxgeom attribute)": [[195, "gammapy.maps.HpxGeom.ndim", false]], "ndim (gammapy.maps.mapcoord attribute)": [[202, "gammapy.maps.MapCoord.ndim", false]], "ndim (gammapy.maps.wcsgeom attribute)": [[207, "gammapy.maps.WcsGeom.ndim", false]], "nest (gammapy.maps.hpxgeom attribute)": [[195, "gammapy.maps.HpxGeom.nest", false]], "nfev (gammapy.modeling.fitresult attribute)": [[215, "gammapy.modeling.FitResult.nfev", false]], "nfev (gammapy.modeling.optimizeresult attribute)": [[216, "gammapy.modeling.OptimizeResult.nfev", false]], "nfwprofile (class in gammapy.astro.darkmatter)": [[25, "gammapy.astro.darkmatter.NFWProfile", false]], "niter (gammapy.estimators.fluxmaps attribute)": [[125, "gammapy.estimators.FluxMaps.niter", false]], "niter (gammapy.estimators.fluxpoints attribute)": [[127, "gammapy.estimators.FluxPoints.niter", false]], "node_type (gammapy.maps.labelmapaxis attribute)": [[198, "gammapy.maps.LabelMapAxis.node_type", false]], "node_type (gammapy.maps.mapaxis attribute)": [[201, "gammapy.maps.MapAxis.node_type", false]], "node_type (gammapy.maps.timemapaxis attribute)": [[206, "gammapy.maps.TimeMapAxis.node_type", false]], "norm (gammapy.estimators.fluxmaps attribute)": [[125, "gammapy.estimators.FluxMaps.norm", false]], "norm (gammapy.estimators.fluxpoints attribute)": [[127, "gammapy.estimators.FluxPoints.norm", false]], "norm (gammapy.modeling.models.expcutoffpowerlawnormspectralmodel attribute)": [[232, "gammapy.modeling.models.ExpCutoffPowerLawNormSpectralModel.norm", false]], "norm (gammapy.modeling.models.logparabolanormspectralmodel attribute)": [[244, "gammapy.modeling.models.LogParabolaNormSpectralModel.norm", false]], "norm (gammapy.modeling.models.meyercrabspectralmodel attribute)": [[248, "gammapy.modeling.models.MeyerCrabSpectralModel.norm", false]], "norm (gammapy.modeling.models.powerlawnormspectralmodel attribute)": [[257, "gammapy.modeling.models.PowerLawNormSpectralModel.norm", false]], "norm (gammapy.modeling.models.scalespectralmodel attribute)": [[263, "gammapy.modeling.models.ScaleSpectralModel.norm", false]], "norm_bounds_cython() (in module gammapy.stats)": [[306, "gammapy.stats.norm_bounds_cython", false]], "norm_err (gammapy.estimators.fluxmaps attribute)": [[125, "gammapy.estimators.FluxMaps.norm_err", false]], "norm_err (gammapy.estimators.fluxpoints attribute)": [[127, "gammapy.estimators.FluxPoints.norm_err", false]], "norm_errn (gammapy.estimators.fluxmaps attribute)": [[125, "gammapy.estimators.FluxMaps.norm_errn", false]], "norm_errn (gammapy.estimators.fluxpoints attribute)": [[127, "gammapy.estimators.FluxPoints.norm_errn", false]], "norm_errp (gammapy.estimators.fluxmaps attribute)": [[125, "gammapy.estimators.FluxMaps.norm_errp", false]], "norm_errp (gammapy.estimators.fluxpoints attribute)": [[127, "gammapy.estimators.FluxPoints.norm_errp", false]], "norm_sensitivity (gammapy.estimators.fluxmaps attribute)": [[125, "gammapy.estimators.FluxMaps.norm_sensitivity", false]], "norm_sensitivity (gammapy.estimators.fluxpoints attribute)": [[127, "gammapy.estimators.FluxPoints.norm_sensitivity", false]], "norm_ul (gammapy.estimators.fluxmaps attribute)": [[125, "gammapy.estimators.FluxMaps.norm_ul", false]], "norm_ul (gammapy.estimators.fluxpoints attribute)": [[127, "gammapy.estimators.FluxPoints.norm_ul", false]], "normalize() (gammapy.estimators.imageprofile method)": [[130, "gammapy.estimators.ImageProfile.normalize", false]], "normalize() (gammapy.irf.background2d method)": [[150, "gammapy.irf.Background2D.normalize", false]], "normalize() (gammapy.irf.background3d method)": [[151, "gammapy.irf.Background3D.normalize", false]], "normalize() (gammapy.irf.backgroundirf method)": [[152, "gammapy.irf.BackgroundIRF.normalize", false]], "normalize() (gammapy.irf.edispkernel method)": [[153, "gammapy.irf.EDispKernel.normalize", false]], "normalize() (gammapy.irf.edispmap method)": [[155, "gammapy.irf.EDispMap.normalize", false]], "normalize() (gammapy.irf.effectiveareatable2d method)": [[156, "gammapy.irf.EffectiveAreaTable2D.normalize", false]], "normalize() (gammapy.irf.energydependentmultigausspsf method)": [[157, "gammapy.irf.EnergyDependentMultiGaussPSF.normalize", false]], "normalize() (gammapy.irf.energydispersion2d method)": [[158, "gammapy.irf.EnergyDispersion2D.normalize", false]], "normalize() (gammapy.irf.irf method)": [[160, "gammapy.irf.IRF.normalize", false]], "normalize() (gammapy.irf.parametricpsf method)": [[167, "gammapy.irf.ParametricPSF.normalize", false]], "normalize() (gammapy.irf.psf3d method)": [[163, "gammapy.irf.PSF3D.normalize", false]], "normalize() (gammapy.irf.psfkernel method)": [[164, "gammapy.irf.PSFKernel.normalize", false]], "normalize() (gammapy.irf.psfking method)": [[165, "gammapy.irf.PSFKing.normalize", false]], "normalize() (gammapy.irf.psfmap method)": [[166, "gammapy.irf.PSFMap.normalize", false]], "normalize() (gammapy.irf.radmax2d method)": [[168, "gammapy.irf.RadMax2D.normalize", false]], "normalize() (gammapy.irf.recopsfmap method)": [[169, "gammapy.irf.RecoPSFMap.normalize", false]], "normalize() (gammapy.maps.hpxmap method)": [[196, "gammapy.maps.HpxMap.normalize", false]], "normalize() (gammapy.maps.hpxndmap method)": [[197, "gammapy.maps.HpxNDMap.normalize", false]], "normalize() (gammapy.maps.map method)": [[199, "gammapy.maps.Map.normalize", false]], "normalize() (gammapy.maps.regionndmap method)": [[205, "gammapy.maps.RegionNDMap.normalize", false]], "normalize() (gammapy.maps.wcsmap method)": [[208, "gammapy.maps.WcsMap.normalize", false]], "normalize() (gammapy.maps.wcsndmap method)": [[209, "gammapy.maps.WcsNDMap.normalize", false]], "normalize() (in module gammapy.utils.random)": [[339, "gammapy.utils.random.normalize", false]], "norms (gammapy.modeling.models.piecewisenormspatialmodel attribute)": [[253, "gammapy.modeling.models.PiecewiseNormSpatialModel.norms", false]], "norms (gammapy.modeling.models.piecewisenormspectralmodel attribute)": [[254, "gammapy.modeling.models.PiecewiseNormSpectralModel.norms", false]], "npix (gammapy.maps.hpxgeom attribute)": [[195, "gammapy.maps.HpxGeom.npix", false]], "npix (gammapy.maps.regiongeom attribute)": [[204, "gammapy.maps.RegionGeom.npix", false]], "npix (gammapy.maps.wcsgeom attribute)": [[207, "gammapy.maps.WcsGeom.npix", false]], "npix_max (gammapy.maps.hpxgeom attribute)": [[195, "gammapy.maps.HpxGeom.npix_max", false]], "npred (gammapy.estimators.fluxmaps attribute)": [[125, "gammapy.estimators.FluxMaps.npred", false]], "npred (gammapy.estimators.fluxpoints attribute)": [[127, "gammapy.estimators.FluxPoints.npred", false]], "npred() (gammapy.datasets.mapdataset method)": [[103, "gammapy.datasets.MapDataset.npred", false]], "npred() (gammapy.datasets.mapdatasetonoff method)": [[106, "gammapy.datasets.MapDatasetOnOff.npred", false]], "npred() (gammapy.datasets.spectrumdataset method)": [[110, "gammapy.datasets.SpectrumDataset.npred", false]], "npred() (gammapy.datasets.spectrumdatasetonoff method)": [[111, "gammapy.datasets.SpectrumDatasetOnOff.npred", false]], "npred_background (gammapy.estimators.fluxmaps attribute)": [[125, "gammapy.estimators.FluxMaps.npred_background", false]], "npred_background (gammapy.estimators.fluxpoints attribute)": [[127, "gammapy.estimators.FluxPoints.npred_background", false]], "npred_background() (gammapy.datasets.mapdataset method)": [[103, "gammapy.datasets.MapDataset.npred_background", false]], "npred_background() (gammapy.datasets.mapdatasetonoff method)": [[106, "gammapy.datasets.MapDatasetOnOff.npred_background", false]], "npred_background() (gammapy.datasets.spectrumdataset method)": [[110, "gammapy.datasets.SpectrumDataset.npred_background", false]], "npred_background() (gammapy.datasets.spectrumdatasetonoff method)": [[111, "gammapy.datasets.SpectrumDatasetOnOff.npred_background", false]], "npred_excess (gammapy.estimators.fluxmaps attribute)": [[125, "gammapy.estimators.FluxMaps.npred_excess", false]], "npred_excess (gammapy.estimators.fluxpoints attribute)": [[127, "gammapy.estimators.FluxPoints.npred_excess", false]], "npred_excess_err (gammapy.estimators.fluxmaps attribute)": [[125, "gammapy.estimators.FluxMaps.npred_excess_err", false]], "npred_excess_err (gammapy.estimators.fluxpoints attribute)": [[127, "gammapy.estimators.FluxPoints.npred_excess_err", false]], "npred_excess_errn (gammapy.estimators.fluxmaps attribute)": [[125, "gammapy.estimators.FluxMaps.npred_excess_errn", false]], "npred_excess_errn (gammapy.estimators.fluxpoints attribute)": [[127, "gammapy.estimators.FluxPoints.npred_excess_errn", false]], "npred_excess_errp (gammapy.estimators.fluxmaps attribute)": [[125, "gammapy.estimators.FluxMaps.npred_excess_errp", false]], "npred_excess_errp (gammapy.estimators.fluxpoints attribute)": [[127, "gammapy.estimators.FluxPoints.npred_excess_errp", false]], "npred_excess_ref (gammapy.estimators.fluxmaps attribute)": [[125, "gammapy.estimators.FluxMaps.npred_excess_ref", false]], "npred_excess_ref (gammapy.estimators.fluxpoints attribute)": [[127, "gammapy.estimators.FluxPoints.npred_excess_ref", false]], "npred_excess_ul (gammapy.estimators.fluxmaps attribute)": [[125, "gammapy.estimators.FluxMaps.npred_excess_ul", false]], "npred_excess_ul (gammapy.estimators.fluxpoints attribute)": [[127, "gammapy.estimators.FluxPoints.npred_excess_ul", false]], "npred_off() (gammapy.datasets.mapdatasetonoff method)": [[106, "gammapy.datasets.MapDatasetOnOff.npred_off", false]], "npred_off() (gammapy.datasets.spectrumdatasetonoff method)": [[111, "gammapy.datasets.SpectrumDatasetOnOff.npred_off", false]], "npred_signal() (gammapy.datasets.mapdataset method)": [[103, "gammapy.datasets.MapDataset.npred_signal", false]], "npred_signal() (gammapy.datasets.mapdatasetonoff method)": [[106, "gammapy.datasets.MapDatasetOnOff.npred_signal", false]], "npred_signal() (gammapy.datasets.spectrumdataset method)": [[110, "gammapy.datasets.SpectrumDataset.npred_signal", false]], "npred_signal() (gammapy.datasets.spectrumdatasetonoff method)": [[111, "gammapy.datasets.SpectrumDatasetOnOff.npred_signal", false]], "nside (gammapy.maps.hpxgeom attribute)": [[195, "gammapy.maps.HpxGeom.nside", false]], "obs() (gammapy.data.datastore method)": [[82, "gammapy.data.DataStore.obs", false]], "obs_id_unique (gammapy.data.hduindextable attribute)": [[87, "gammapy.data.HDUIndexTable.obs_id_unique", false]], "obs_ids (gammapy.data.datastore attribute)": [[82, "gammapy.data.DataStore.obs_ids", false]], "observation (class in gammapy.data)": [[88, "gammapy.data.Observation", false]], "observation_dead_time_fraction (gammapy.data.eventlist attribute)": [[83, "gammapy.data.EventList.observation_dead_time_fraction", false]], "observation_dead_time_fraction (gammapy.data.observation attribute)": [[88, "gammapy.data.Observation.observation_dead_time_fraction", false]], "observation_live_time_duration (gammapy.data.eventlist attribute)": [[83, "gammapy.data.EventList.observation_live_time_duration", false]], "observation_live_time_duration (gammapy.data.observation attribute)": [[88, "gammapy.data.Observation.observation_live_time_duration", false]], "observation_time_duration (gammapy.data.eventlist attribute)": [[83, "gammapy.data.EventList.observation_time_duration", false]], "observation_time_duration (gammapy.data.observation attribute)": [[88, "gammapy.data.Observation.observation_time_duration", false]], "observation_time_start (gammapy.data.eventlist attribute)": [[83, "gammapy.data.EventList.observation_time_start", false]], "observation_time_stop (gammapy.data.eventlist attribute)": [[83, "gammapy.data.EventList.observation_time_stop", false]], "observationeventsampler (class in gammapy.datasets)": [[109, "gammapy.datasets.ObservationEventSampler", false]], "observationfilter (class in gammapy.data)": [[89, "gammapy.data.ObservationFilter", false]], "observationmetadata (class in gammapy.data)": [[90, "gammapy.data.ObservationMetaData", false]], "observations (class in gammapy.data)": [[92, "gammapy.data.Observations", false]], "observationseventssampler (class in gammapy.data)": [[93, "gammapy.data.ObservationsEventsSampler", false]], "observationtable (class in gammapy.data)": [[91, "gammapy.data.ObservationTable", false]], "observatory_earth_location (gammapy.data.eventlist attribute)": [[83, "gammapy.data.EventList.observatory_earth_location", false]], "observatory_earth_location (gammapy.data.observation attribute)": [[88, "gammapy.data.Observation.observatory_earth_location", false]], "observatory_locations (in module gammapy.data)": [[97, "gammapy.data.observatory_locations", false]], "offset (gammapy.data.eventlist attribute)": [[83, "gammapy.data.EventList.offset", false]], "offset_from_median (gammapy.data.eventlist attribute)": [[83, "gammapy.data.EventList.offset_from_median", false]], "offset_max (gammapy.makers.datasetsmaker attribute)": [[172, "gammapy.makers.DatasetsMaker.offset_max", false]], "ogipdatasetreader (class in gammapy.datasets)": [[107, "gammapy.datasets.OGIPDatasetReader", false]], "ogipdatasetwriter (class in gammapy.datasets)": [[108, "gammapy.datasets.OGIPDatasetWriter", false]], "omega (gammapy.modeling.models.sinetemporalmodel attribute)": [[266, "gammapy.modeling.models.SineTemporalModel.omega", false]], "optimize() (gammapy.modeling.fit method)": [[214, "gammapy.modeling.Fit.optimize", false]], "optimize_result (gammapy.modeling.fitresult attribute)": [[215, "gammapy.modeling.FitResult.optimize_result", false]], "optimizeresult (class in gammapy.modeling)": [[216, "gammapy.modeling.OptimizeResult", false]], "order (gammapy.maps.hpxgeom attribute)": [[195, "gammapy.maps.HpxGeom.order", false]], "ordering (gammapy.maps.hpxgeom attribute)": [[195, "gammapy.maps.HpxGeom.ordering", false]], "output_units() (gammapy.astro.population.casebattacharya1998 method)": [[28, "gammapy.astro.population.CaseBattacharya1998.output_units", false]], "output_units() (gammapy.astro.population.exponential method)": [[29, "gammapy.astro.population.Exponential.output_units", false]], "output_units() (gammapy.astro.population.faucherkaspi2006 method)": [[30, "gammapy.astro.population.FaucherKaspi2006.output_units", false]], "output_units() (gammapy.astro.population.faucherkaspi2006velocitybimodal method)": [[31, "gammapy.astro.population.FaucherKaspi2006VelocityBimodal.output_units", false]], "output_units() (gammapy.astro.population.faucherkaspi2006velocitymaxwellian method)": [[32, "gammapy.astro.population.FaucherKaspi2006VelocityMaxwellian.output_units", false]], "output_units() (gammapy.astro.population.lorimer2006 method)": [[35, "gammapy.astro.population.Lorimer2006.output_units", false]], "output_units() (gammapy.astro.population.paczynski1990 method)": [[36, "gammapy.astro.population.Paczynski1990.output_units", false]], "output_units() (gammapy.astro.population.paczynski1990velocity method)": [[37, "gammapy.astro.population.Paczynski1990Velocity.output_units", false]], "output_units() (gammapy.astro.population.yusifovkucuk2004 method)": [[39, "gammapy.astro.population.YusifovKucuk2004.output_units", false]], "output_units() (gammapy.astro.population.yusifovkucuk2004b method)": [[40, "gammapy.astro.population.YusifovKucuk2004B.output_units", false]], "outputs (gammapy.astro.population.casebattacharya1998 attribute)": [[28, "gammapy.astro.population.CaseBattacharya1998.outputs", false]], "outputs (gammapy.astro.population.exponential attribute)": [[29, "gammapy.astro.population.Exponential.outputs", false]], "outputs (gammapy.astro.population.faucherkaspi2006 attribute)": [[30, "gammapy.astro.population.FaucherKaspi2006.outputs", false]], "outputs (gammapy.astro.population.faucherkaspi2006velocitybimodal attribute)": [[31, "gammapy.astro.population.FaucherKaspi2006VelocityBimodal.outputs", false]], "outputs (gammapy.astro.population.faucherkaspi2006velocitymaxwellian attribute)": [[32, "gammapy.astro.population.FaucherKaspi2006VelocityMaxwellian.outputs", false]], "outputs (gammapy.astro.population.lorimer2006 attribute)": [[35, "gammapy.astro.population.Lorimer2006.outputs", false]], "outputs (gammapy.astro.population.paczynski1990 attribute)": [[36, "gammapy.astro.population.Paczynski1990.outputs", false]], "outputs (gammapy.astro.population.paczynski1990velocity attribute)": [[37, "gammapy.astro.population.Paczynski1990Velocity.outputs", false]], "outputs (gammapy.astro.population.yusifovkucuk2004 attribute)": [[39, "gammapy.astro.population.YusifovKucuk2004.outputs", false]], "outputs (gammapy.astro.population.yusifovkucuk2004b attribute)": [[40, "gammapy.astro.population.YusifovKucuk2004B.outputs", false]], "p (gammapy.astro.population.valleespiral attribute)": [[38, "gammapy.astro.population.ValleeSpiral.p", false]], "p_value (gammapy.stats.cashcountsstatistic attribute)": [[292, "gammapy.stats.CashCountsStatistic.p_value", false]], "p_value (gammapy.stats.wstatcountsstatistic attribute)": [[294, "gammapy.stats.WStatCountsStatistic.p_value", false]], "paczynski1990 (class in gammapy.astro.population)": [[36, "gammapy.astro.population.Paczynski1990", false]], "paczynski1990velocity (class in gammapy.astro.population)": [[37, "gammapy.astro.population.Paczynski1990Velocity", false]], "pad() (gammapy.datasets.mapdataset method)": [[103, "gammapy.datasets.MapDataset.pad", false]], "pad() (gammapy.datasets.mapdatasetonoff method)": [[106, "gammapy.datasets.MapDatasetOnOff.pad", false]], "pad() (gammapy.datasets.spectrumdataset method)": [[110, "gammapy.datasets.SpectrumDataset.pad", false]], "pad() (gammapy.datasets.spectrumdatasetonoff method)": [[111, "gammapy.datasets.SpectrumDatasetOnOff.pad", false]], "pad() (gammapy.irf.background2d method)": [[150, "gammapy.irf.Background2D.pad", false]], "pad() (gammapy.irf.background3d method)": [[151, "gammapy.irf.Background3D.pad", false]], "pad() (gammapy.irf.backgroundirf method)": [[152, "gammapy.irf.BackgroundIRF.pad", false]], "pad() (gammapy.irf.edispkernel method)": [[153, "gammapy.irf.EDispKernel.pad", false]], "pad() (gammapy.irf.effectiveareatable2d method)": [[156, "gammapy.irf.EffectiveAreaTable2D.pad", false]], "pad() (gammapy.irf.energydependentmultigausspsf method)": [[157, "gammapy.irf.EnergyDependentMultiGaussPSF.pad", false]], "pad() (gammapy.irf.energydispersion2d method)": [[158, "gammapy.irf.EnergyDispersion2D.pad", false]], "pad() (gammapy.irf.irf method)": [[160, "gammapy.irf.IRF.pad", false]], "pad() (gammapy.irf.parametricpsf method)": [[167, "gammapy.irf.ParametricPSF.pad", false]], "pad() (gammapy.irf.psf3d method)": [[163, "gammapy.irf.PSF3D.pad", false]], "pad() (gammapy.irf.psfking method)": [[165, "gammapy.irf.PSFKing.pad", false]], "pad() (gammapy.irf.radmax2d method)": [[168, "gammapy.irf.RadMax2D.pad", false]], "pad() (gammapy.maps.geom method)": [[194, "gammapy.maps.Geom.pad", false]], "pad() (gammapy.maps.hpxgeom method)": [[195, "gammapy.maps.HpxGeom.pad", false]], "pad() (gammapy.maps.hpxmap method)": [[196, "gammapy.maps.HpxMap.pad", false]], "pad() (gammapy.maps.hpxndmap method)": [[197, "gammapy.maps.HpxNDMap.pad", false]], "pad() (gammapy.maps.labelmapaxis method)": [[198, "gammapy.maps.LabelMapAxis.pad", false]], "pad() (gammapy.maps.map method)": [[199, "gammapy.maps.Map.pad", false]], "pad() (gammapy.maps.mapaxes method)": [[200, "gammapy.maps.MapAxes.pad", false]], "pad() (gammapy.maps.mapaxis method)": [[201, "gammapy.maps.MapAxis.pad", false]], "pad() (gammapy.maps.regiongeom method)": [[204, "gammapy.maps.RegionGeom.pad", false]], "pad() (gammapy.maps.regionndmap method)": [[205, "gammapy.maps.RegionNDMap.pad", false]], "pad() (gammapy.maps.wcsgeom method)": [[207, "gammapy.maps.WcsGeom.pad", false]], "pad() (gammapy.maps.wcsmap method)": [[208, "gammapy.maps.WcsMap.pad", false]], "pad() (gammapy.maps.wcsndmap method)": [[209, "gammapy.maps.WcsNDMap.pad", false]], "parallel_backend (gammapy.data.observationseventssampler attribute)": [[93, "gammapy.data.ObservationsEventsSampler.parallel_backend", false]], "parallel_backend (gammapy.estimators.fluxpointsestimator attribute)": [[128, "gammapy.estimators.FluxPointsEstimator.parallel_backend", false]], "parallel_backend (gammapy.estimators.fluxprofileestimator attribute)": [[129, "gammapy.estimators.FluxProfileEstimator.parallel_backend", false]], "parallel_backend (gammapy.estimators.lightcurveestimator attribute)": [[132, "gammapy.estimators.LightCurveEstimator.parallel_backend", false]], "parallel_backend (gammapy.estimators.tsmapestimator attribute)": [[136, "gammapy.estimators.TSMapEstimator.parallel_backend", false]], "parallel_backend (gammapy.makers.datasetsmaker attribute)": [[172, "gammapy.makers.DatasetsMaker.parallel_backend", false]], "param_names (gammapy.astro.population.casebattacharya1998 attribute)": [[28, "gammapy.astro.population.CaseBattacharya1998.param_names", false]], "param_names (gammapy.astro.population.exponential attribute)": [[29, "gammapy.astro.population.Exponential.param_names", false]], "param_names (gammapy.astro.population.faucherkaspi2006 attribute)": [[30, "gammapy.astro.population.FaucherKaspi2006.param_names", false]], "param_names (gammapy.astro.population.faucherkaspi2006velocitybimodal attribute)": [[31, "gammapy.astro.population.FaucherKaspi2006VelocityBimodal.param_names", false]], "param_names (gammapy.astro.population.faucherkaspi2006velocitymaxwellian attribute)": [[32, "gammapy.astro.population.FaucherKaspi2006VelocityMaxwellian.param_names", false]], "param_names (gammapy.astro.population.lorimer2006 attribute)": [[35, "gammapy.astro.population.Lorimer2006.param_names", false]], "param_names (gammapy.astro.population.paczynski1990 attribute)": [[36, "gammapy.astro.population.Paczynski1990.param_names", false]], "param_names (gammapy.astro.population.paczynski1990velocity attribute)": [[37, "gammapy.astro.population.Paczynski1990Velocity.param_names", false]], "param_names (gammapy.astro.population.yusifovkucuk2004 attribute)": [[39, "gammapy.astro.population.YusifovKucuk2004.param_names", false]], "param_names (gammapy.astro.population.yusifovkucuk2004b attribute)": [[40, "gammapy.astro.population.YusifovKucuk2004B.param_names", false]], "param_sets (gammapy.astro.population.casebattacharya1998 attribute)": [[28, "gammapy.astro.population.CaseBattacharya1998.param_sets", false]], "param_sets (gammapy.astro.population.exponential attribute)": [[29, "gammapy.astro.population.Exponential.param_sets", false]], "param_sets (gammapy.astro.population.faucherkaspi2006 attribute)": [[30, "gammapy.astro.population.FaucherKaspi2006.param_sets", false]], "param_sets (gammapy.astro.population.faucherkaspi2006velocitybimodal attribute)": [[31, "gammapy.astro.population.FaucherKaspi2006VelocityBimodal.param_sets", false]], "param_sets (gammapy.astro.population.faucherkaspi2006velocitymaxwellian attribute)": [[32, "gammapy.astro.population.FaucherKaspi2006VelocityMaxwellian.param_sets", false]], "param_sets (gammapy.astro.population.lorimer2006 attribute)": [[35, "gammapy.astro.population.Lorimer2006.param_sets", false]], "param_sets (gammapy.astro.population.paczynski1990 attribute)": [[36, "gammapy.astro.population.Paczynski1990.param_sets", false]], "param_sets (gammapy.astro.population.paczynski1990velocity attribute)": [[37, "gammapy.astro.population.Paczynski1990Velocity.param_sets", false]], "param_sets (gammapy.astro.population.yusifovkucuk2004 attribute)": [[39, "gammapy.astro.population.YusifovKucuk2004.param_sets", false]], "param_sets (gammapy.astro.population.yusifovkucuk2004b attribute)": [[40, "gammapy.astro.population.YusifovKucuk2004B.param_sets", false]], "parameter (class in gammapy.modeling)": [[217, "gammapy.modeling.Parameter", false]], "parameter_constraints (gammapy.astro.population.casebattacharya1998 attribute)": [[28, "gammapy.astro.population.CaseBattacharya1998.parameter_constraints", false]], "parameter_constraints (gammapy.astro.population.exponential attribute)": [[29, "gammapy.astro.population.Exponential.parameter_constraints", false]], "parameter_constraints (gammapy.astro.population.faucherkaspi2006 attribute)": [[30, "gammapy.astro.population.FaucherKaspi2006.parameter_constraints", false]], "parameter_constraints (gammapy.astro.population.faucherkaspi2006velocitybimodal attribute)": [[31, "gammapy.astro.population.FaucherKaspi2006VelocityBimodal.parameter_constraints", false]], "parameter_constraints (gammapy.astro.population.faucherkaspi2006velocitymaxwellian attribute)": [[32, "gammapy.astro.population.FaucherKaspi2006VelocityMaxwellian.parameter_constraints", false]], "parameter_constraints (gammapy.astro.population.lorimer2006 attribute)": [[35, "gammapy.astro.population.Lorimer2006.parameter_constraints", false]], "parameter_constraints (gammapy.astro.population.paczynski1990 attribute)": [[36, "gammapy.astro.population.Paczynski1990.parameter_constraints", false]], "parameter_constraints (gammapy.astro.population.paczynski1990velocity attribute)": [[37, "gammapy.astro.population.Paczynski1990Velocity.parameter_constraints", false]], "parameter_constraints (gammapy.astro.population.yusifovkucuk2004 attribute)": [[39, "gammapy.astro.population.YusifovKucuk2004.parameter_constraints", false]], "parameter_constraints (gammapy.astro.population.yusifovkucuk2004b attribute)": [[40, "gammapy.astro.population.YusifovKucuk2004B.parameter_constraints", false]], "parameter_matching_significance() (gammapy.estimators.parametersensitivityestimator method)": [[134, "gammapy.estimators.ParameterSensitivityEstimator.parameter_matching_significance", false]], "parameterestimator (class in gammapy.estimators)": [[133, "gammapy.estimators.ParameterEstimator", false]], "parameters (class in gammapy.modeling)": [[218, "gammapy.modeling.Parameters", false]], "parameters (gammapy.astro.darkmatter.darkmatterannihilationspectralmodel attribute)": [[19, "gammapy.astro.darkmatter.DarkMatterAnnihilationSpectralModel.parameters", false]], "parameters (gammapy.astro.darkmatter.darkmatterdecayspectralmodel attribute)": [[20, "gammapy.astro.darkmatter.DarkMatterDecaySpectralModel.parameters", false]], "parameters (gammapy.astro.darkmatter.primaryflux attribute)": [[26, "gammapy.astro.darkmatter.PrimaryFlux.parameters", false]], "parameters (gammapy.astro.population.casebattacharya1998 attribute)": [[28, "gammapy.astro.population.CaseBattacharya1998.parameters", false]], "parameters (gammapy.astro.population.exponential attribute)": [[29, "gammapy.astro.population.Exponential.parameters", false]], "parameters (gammapy.astro.population.faucherkaspi2006 attribute)": [[30, "gammapy.astro.population.FaucherKaspi2006.parameters", false]], "parameters (gammapy.astro.population.faucherkaspi2006velocitybimodal attribute)": [[31, "gammapy.astro.population.FaucherKaspi2006VelocityBimodal.parameters", false]], "parameters (gammapy.astro.population.faucherkaspi2006velocitymaxwellian attribute)": [[32, "gammapy.astro.population.FaucherKaspi2006VelocityMaxwellian.parameters", false]], "parameters (gammapy.astro.population.lorimer2006 attribute)": [[35, "gammapy.astro.population.Lorimer2006.parameters", false]], "parameters (gammapy.astro.population.paczynski1990 attribute)": [[36, "gammapy.astro.population.Paczynski1990.parameters", false]], "parameters (gammapy.astro.population.paczynski1990velocity attribute)": [[37, "gammapy.astro.population.Paczynski1990Velocity.parameters", false]], "parameters (gammapy.astro.population.yusifovkucuk2004 attribute)": [[39, "gammapy.astro.population.YusifovKucuk2004.parameters", false]], "parameters (gammapy.astro.population.yusifovkucuk2004b attribute)": [[40, "gammapy.astro.population.YusifovKucuk2004B.parameters", false]], "parameters (gammapy.datasets.datasets attribute)": [[100, "gammapy.datasets.Datasets.parameters", false]], "parameters (gammapy.modeling.fitresult attribute)": [[215, "gammapy.modeling.FitResult.parameters", false]], "parameters (gammapy.modeling.models.brokenpowerlawspectralmodel attribute)": [[221, "gammapy.modeling.models.BrokenPowerLawSpectralModel.parameters", false]], "parameters (gammapy.modeling.models.compoundspectralmodel attribute)": [[222, "gammapy.modeling.models.CompoundSpectralModel.parameters", false]], "parameters (gammapy.modeling.models.constantfluxspatialmodel attribute)": [[223, "gammapy.modeling.models.ConstantFluxSpatialModel.parameters", false]], "parameters (gammapy.modeling.models.constantspatialmodel attribute)": [[224, "gammapy.modeling.models.ConstantSpatialModel.parameters", false]], "parameters (gammapy.modeling.models.constantspectralmodel attribute)": [[225, "gammapy.modeling.models.ConstantSpectralModel.parameters", false]], "parameters (gammapy.modeling.models.constanttemporalmodel attribute)": [[226, "gammapy.modeling.models.ConstantTemporalModel.parameters", false]], "parameters (gammapy.modeling.models.datasetmodels attribute)": [[227, "gammapy.modeling.models.DatasetModels.parameters", false]], "parameters (gammapy.modeling.models.diskspatialmodel attribute)": [[228, "gammapy.modeling.models.DiskSpatialModel.parameters", false]], "parameters (gammapy.modeling.models.eblabsorptionnormspectralmodel attribute)": [[229, "gammapy.modeling.models.EBLAbsorptionNormSpectralModel.parameters", false]], "parameters (gammapy.modeling.models.expcutoffpowerlaw3fglspectralmodel attribute)": [[231, "gammapy.modeling.models.ExpCutoffPowerLaw3FGLSpectralModel.parameters", false]], "parameters (gammapy.modeling.models.expcutoffpowerlawnormspectralmodel attribute)": [[232, "gammapy.modeling.models.ExpCutoffPowerLawNormSpectralModel.parameters", false]], "parameters (gammapy.modeling.models.expcutoffpowerlawspectralmodel attribute)": [[233, "gammapy.modeling.models.ExpCutoffPowerLawSpectralModel.parameters", false]], "parameters (gammapy.modeling.models.expdecaytemporalmodel attribute)": [[234, "gammapy.modeling.models.ExpDecayTemporalModel.parameters", false]], "parameters (gammapy.modeling.models.fovbackgroundmodel attribute)": [[235, "gammapy.modeling.models.FoVBackgroundModel.parameters", false]], "parameters (gammapy.modeling.models.gaussianprior attribute)": [[236, "gammapy.modeling.models.GaussianPrior.parameters", false]], "parameters (gammapy.modeling.models.gaussianspatialmodel attribute)": [[237, "gammapy.modeling.models.GaussianSpatialModel.parameters", false]], "parameters (gammapy.modeling.models.gaussianspectralmodel attribute)": [[238, "gammapy.modeling.models.GaussianSpectralModel.parameters", false]], "parameters (gammapy.modeling.models.gaussiantemporalmodel attribute)": [[239, "gammapy.modeling.models.GaussianTemporalModel.parameters", false]], "parameters (gammapy.modeling.models.generalizedgaussianspatialmodel attribute)": [[240, "gammapy.modeling.models.GeneralizedGaussianSpatialModel.parameters", false]], "parameters (gammapy.modeling.models.generalizedgaussiantemporalmodel attribute)": [[241, "gammapy.modeling.models.GeneralizedGaussianTemporalModel.parameters", false]], "parameters (gammapy.modeling.models.lightcurvetemplatetemporalmodel attribute)": [[242, "gammapy.modeling.models.LightCurveTemplateTemporalModel.parameters", false]], "parameters (gammapy.modeling.models.lineartemporalmodel attribute)": [[243, "gammapy.modeling.models.LinearTemporalModel.parameters", false]], "parameters (gammapy.modeling.models.logparabolanormspectralmodel attribute)": [[244, "gammapy.modeling.models.LogParabolaNormSpectralModel.parameters", false]], "parameters (gammapy.modeling.models.logparabolaspectralmodel attribute)": [[245, "gammapy.modeling.models.LogParabolaSpectralModel.parameters", false]], "parameters (gammapy.modeling.models.loguniformprior attribute)": [[246, "gammapy.modeling.models.LogUniformPrior.parameters", false]], "parameters (gammapy.modeling.models.meyercrabspectralmodel attribute)": [[248, "gammapy.modeling.models.MeyerCrabSpectralModel.parameters", false]], "parameters (gammapy.modeling.models.modelbase attribute)": [[250, "gammapy.modeling.models.ModelBase.parameters", false]], "parameters (gammapy.modeling.models.models attribute)": [[251, "gammapy.modeling.models.Models.parameters", false]], "parameters (gammapy.modeling.models.naimaspectralmodel attribute)": [[252, "gammapy.modeling.models.NaimaSpectralModel.parameters", false]], "parameters (gammapy.modeling.models.piecewisenormspatialmodel attribute)": [[253, "gammapy.modeling.models.PiecewiseNormSpatialModel.parameters", false]], "parameters (gammapy.modeling.models.piecewisenormspectralmodel attribute)": [[254, "gammapy.modeling.models.PiecewiseNormSpectralModel.parameters", false]], "parameters (gammapy.modeling.models.pointspatialmodel attribute)": [[255, "gammapy.modeling.models.PointSpatialModel.parameters", false]], "parameters (gammapy.modeling.models.powerlaw2spectralmodel attribute)": [[256, "gammapy.modeling.models.PowerLaw2SpectralModel.parameters", false]], "parameters (gammapy.modeling.models.powerlawnormspectralmodel attribute)": [[257, "gammapy.modeling.models.PowerLawNormSpectralModel.parameters", false]], "parameters (gammapy.modeling.models.powerlawspectralmodel attribute)": [[258, "gammapy.modeling.models.PowerLawSpectralModel.parameters", false]], "parameters (gammapy.modeling.models.powerlawtemporalmodel attribute)": [[259, "gammapy.modeling.models.PowerLawTemporalModel.parameters", false]], "parameters (gammapy.modeling.models.prior attribute)": [[260, "gammapy.modeling.models.Prior.parameters", false]], "parameters (gammapy.modeling.models.scalespectralmodel attribute)": [[263, "gammapy.modeling.models.ScaleSpectralModel.parameters", false]], "parameters (gammapy.modeling.models.shell2spatialmodel attribute)": [[264, "gammapy.modeling.models.Shell2SpatialModel.parameters", false]], "parameters (gammapy.modeling.models.shellspatialmodel attribute)": [[265, "gammapy.modeling.models.ShellSpatialModel.parameters", false]], "parameters (gammapy.modeling.models.sinetemporalmodel attribute)": [[266, "gammapy.modeling.models.SineTemporalModel.parameters", false]], "parameters (gammapy.modeling.models.skymodel attribute)": [[267, "gammapy.modeling.models.SkyModel.parameters", false]], "parameters (gammapy.modeling.models.smoothbrokenpowerlawspectralmodel attribute)": [[268, "gammapy.modeling.models.SmoothBrokenPowerLawSpectralModel.parameters", false]], "parameters (gammapy.modeling.models.spatialmodel attribute)": [[269, "gammapy.modeling.models.SpatialModel.parameters", false]], "parameters (gammapy.modeling.models.spectralmodel attribute)": [[270, "gammapy.modeling.models.SpectralModel.parameters", false]], "parameters (gammapy.modeling.models.superexpcutoffpowerlaw3fglspectralmodel attribute)": [[271, "gammapy.modeling.models.SuperExpCutoffPowerLaw3FGLSpectralModel.parameters", false]], "parameters (gammapy.modeling.models.superexpcutoffpowerlaw4fgldr3spectralmodel attribute)": [[272, "gammapy.modeling.models.SuperExpCutoffPowerLaw4FGLDR3SpectralModel.parameters", false]], "parameters (gammapy.modeling.models.superexpcutoffpowerlaw4fglspectralmodel attribute)": [[273, "gammapy.modeling.models.SuperExpCutoffPowerLaw4FGLSpectralModel.parameters", false]], "parameters (gammapy.modeling.models.templatendspatialmodel attribute)": [[275, "gammapy.modeling.models.TemplateNDSpatialModel.parameters", false]], "parameters (gammapy.modeling.models.templatendspectralmodel attribute)": [[276, "gammapy.modeling.models.TemplateNDSpectralModel.parameters", false]], "parameters (gammapy.modeling.models.templatenpredmodel attribute)": [[277, "gammapy.modeling.models.TemplateNPredModel.parameters", false]], "parameters (gammapy.modeling.models.templatephasecurvetemporalmodel attribute)": [[278, "gammapy.modeling.models.TemplatePhaseCurveTemporalModel.parameters", false]], "parameters (gammapy.modeling.models.templatespatialmodel attribute)": [[279, "gammapy.modeling.models.TemplateSpatialModel.parameters", false]], "parameters (gammapy.modeling.models.templatespectralmodel attribute)": [[280, "gammapy.modeling.models.TemplateSpectralModel.parameters", false]], "parameters (gammapy.modeling.models.temporalmodel attribute)": [[281, "gammapy.modeling.models.TemporalModel.parameters", false]], "parameters (gammapy.modeling.models.uniformprior attribute)": [[282, "gammapy.modeling.models.UniformPrior.parameters", false]], "parameters (gammapy.modeling.optimizeresult attribute)": [[216, "gammapy.modeling.OptimizeResult.parameters", false]], "parameters_unique_names (gammapy.astro.darkmatter.darkmatterannihilationspectralmodel attribute)": [[19, "gammapy.astro.darkmatter.DarkMatterAnnihilationSpectralModel.parameters_unique_names", false]], "parameters_unique_names (gammapy.astro.darkmatter.darkmatterdecayspectralmodel attribute)": [[20, "gammapy.astro.darkmatter.DarkMatterDecaySpectralModel.parameters_unique_names", false]], "parameters_unique_names (gammapy.astro.darkmatter.primaryflux attribute)": [[26, "gammapy.astro.darkmatter.PrimaryFlux.parameters_unique_names", false]], "parameters_unique_names (gammapy.modeling.models.brokenpowerlawspectralmodel attribute)": [[221, "gammapy.modeling.models.BrokenPowerLawSpectralModel.parameters_unique_names", false]], "parameters_unique_names (gammapy.modeling.models.compoundspectralmodel attribute)": [[222, "gammapy.modeling.models.CompoundSpectralModel.parameters_unique_names", false]], "parameters_unique_names (gammapy.modeling.models.constantfluxspatialmodel attribute)": [[223, "gammapy.modeling.models.ConstantFluxSpatialModel.parameters_unique_names", false]], "parameters_unique_names (gammapy.modeling.models.constantspatialmodel attribute)": [[224, "gammapy.modeling.models.ConstantSpatialModel.parameters_unique_names", false]], "parameters_unique_names (gammapy.modeling.models.constantspectralmodel attribute)": [[225, "gammapy.modeling.models.ConstantSpectralModel.parameters_unique_names", false]], "parameters_unique_names (gammapy.modeling.models.constanttemporalmodel attribute)": [[226, "gammapy.modeling.models.ConstantTemporalModel.parameters_unique_names", false]], "parameters_unique_names (gammapy.modeling.models.datasetmodels attribute)": [[227, "gammapy.modeling.models.DatasetModels.parameters_unique_names", false]], "parameters_unique_names (gammapy.modeling.models.diskspatialmodel attribute)": [[228, "gammapy.modeling.models.DiskSpatialModel.parameters_unique_names", false]], "parameters_unique_names (gammapy.modeling.models.eblabsorptionnormspectralmodel attribute)": [[229, "gammapy.modeling.models.EBLAbsorptionNormSpectralModel.parameters_unique_names", false]], "parameters_unique_names (gammapy.modeling.models.expcutoffpowerlaw3fglspectralmodel attribute)": [[231, "gammapy.modeling.models.ExpCutoffPowerLaw3FGLSpectralModel.parameters_unique_names", false]], "parameters_unique_names (gammapy.modeling.models.expcutoffpowerlawnormspectralmodel attribute)": [[232, "gammapy.modeling.models.ExpCutoffPowerLawNormSpectralModel.parameters_unique_names", false]], "parameters_unique_names (gammapy.modeling.models.expcutoffpowerlawspectralmodel attribute)": [[233, "gammapy.modeling.models.ExpCutoffPowerLawSpectralModel.parameters_unique_names", false]], "parameters_unique_names (gammapy.modeling.models.expdecaytemporalmodel attribute)": [[234, "gammapy.modeling.models.ExpDecayTemporalModel.parameters_unique_names", false]], "parameters_unique_names (gammapy.modeling.models.fovbackgroundmodel attribute)": [[235, "gammapy.modeling.models.FoVBackgroundModel.parameters_unique_names", false]], "parameters_unique_names (gammapy.modeling.models.gaussianprior attribute)": [[236, "gammapy.modeling.models.GaussianPrior.parameters_unique_names", false]], "parameters_unique_names (gammapy.modeling.models.gaussianspatialmodel attribute)": [[237, "gammapy.modeling.models.GaussianSpatialModel.parameters_unique_names", false]], "parameters_unique_names (gammapy.modeling.models.gaussianspectralmodel attribute)": [[238, "gammapy.modeling.models.GaussianSpectralModel.parameters_unique_names", false]], "parameters_unique_names (gammapy.modeling.models.gaussiantemporalmodel attribute)": [[239, "gammapy.modeling.models.GaussianTemporalModel.parameters_unique_names", false]], "parameters_unique_names (gammapy.modeling.models.generalizedgaussianspatialmodel attribute)": [[240, "gammapy.modeling.models.GeneralizedGaussianSpatialModel.parameters_unique_names", false]], "parameters_unique_names (gammapy.modeling.models.generalizedgaussiantemporalmodel attribute)": [[241, "gammapy.modeling.models.GeneralizedGaussianTemporalModel.parameters_unique_names", false]], "parameters_unique_names (gammapy.modeling.models.lightcurvetemplatetemporalmodel attribute)": [[242, "gammapy.modeling.models.LightCurveTemplateTemporalModel.parameters_unique_names", false]], "parameters_unique_names (gammapy.modeling.models.lineartemporalmodel attribute)": [[243, "gammapy.modeling.models.LinearTemporalModel.parameters_unique_names", false]], "parameters_unique_names (gammapy.modeling.models.logparabolanormspectralmodel attribute)": [[244, "gammapy.modeling.models.LogParabolaNormSpectralModel.parameters_unique_names", false]], "parameters_unique_names (gammapy.modeling.models.logparabolaspectralmodel attribute)": [[245, "gammapy.modeling.models.LogParabolaSpectralModel.parameters_unique_names", false]], "parameters_unique_names (gammapy.modeling.models.loguniformprior attribute)": [[246, "gammapy.modeling.models.LogUniformPrior.parameters_unique_names", false]], "parameters_unique_names (gammapy.modeling.models.meyercrabspectralmodel attribute)": [[248, "gammapy.modeling.models.MeyerCrabSpectralModel.parameters_unique_names", false]], "parameters_unique_names (gammapy.modeling.models.modelbase attribute)": [[250, "gammapy.modeling.models.ModelBase.parameters_unique_names", false]], "parameters_unique_names (gammapy.modeling.models.models attribute)": [[251, "gammapy.modeling.models.Models.parameters_unique_names", false]], "parameters_unique_names (gammapy.modeling.models.naimaspectralmodel attribute)": [[252, "gammapy.modeling.models.NaimaSpectralModel.parameters_unique_names", false]], "parameters_unique_names (gammapy.modeling.models.piecewisenormspatialmodel attribute)": [[253, "gammapy.modeling.models.PiecewiseNormSpatialModel.parameters_unique_names", false]], "parameters_unique_names (gammapy.modeling.models.piecewisenormspectralmodel attribute)": [[254, "gammapy.modeling.models.PiecewiseNormSpectralModel.parameters_unique_names", false]], "parameters_unique_names (gammapy.modeling.models.pointspatialmodel attribute)": [[255, "gammapy.modeling.models.PointSpatialModel.parameters_unique_names", false]], "parameters_unique_names (gammapy.modeling.models.powerlaw2spectralmodel attribute)": [[256, "gammapy.modeling.models.PowerLaw2SpectralModel.parameters_unique_names", false]], "parameters_unique_names (gammapy.modeling.models.powerlawnormspectralmodel attribute)": [[257, "gammapy.modeling.models.PowerLawNormSpectralModel.parameters_unique_names", false]], "parameters_unique_names (gammapy.modeling.models.powerlawspectralmodel attribute)": [[258, "gammapy.modeling.models.PowerLawSpectralModel.parameters_unique_names", false]], "parameters_unique_names (gammapy.modeling.models.powerlawtemporalmodel attribute)": [[259, "gammapy.modeling.models.PowerLawTemporalModel.parameters_unique_names", false]], "parameters_unique_names (gammapy.modeling.models.prior attribute)": [[260, "gammapy.modeling.models.Prior.parameters_unique_names", false]], "parameters_unique_names (gammapy.modeling.models.scalespectralmodel attribute)": [[263, "gammapy.modeling.models.ScaleSpectralModel.parameters_unique_names", false]], "parameters_unique_names (gammapy.modeling.models.shell2spatialmodel attribute)": [[264, "gammapy.modeling.models.Shell2SpatialModel.parameters_unique_names", false]], "parameters_unique_names (gammapy.modeling.models.shellspatialmodel attribute)": [[265, "gammapy.modeling.models.ShellSpatialModel.parameters_unique_names", false]], "parameters_unique_names (gammapy.modeling.models.sinetemporalmodel attribute)": [[266, "gammapy.modeling.models.SineTemporalModel.parameters_unique_names", false]], "parameters_unique_names (gammapy.modeling.models.skymodel attribute)": [[267, "gammapy.modeling.models.SkyModel.parameters_unique_names", false]], "parameters_unique_names (gammapy.modeling.models.smoothbrokenpowerlawspectralmodel attribute)": [[268, "gammapy.modeling.models.SmoothBrokenPowerLawSpectralModel.parameters_unique_names", false]], "parameters_unique_names (gammapy.modeling.models.spatialmodel attribute)": [[269, "gammapy.modeling.models.SpatialModel.parameters_unique_names", false]], "parameters_unique_names (gammapy.modeling.models.spectralmodel attribute)": [[270, "gammapy.modeling.models.SpectralModel.parameters_unique_names", false]], "parameters_unique_names (gammapy.modeling.models.superexpcutoffpowerlaw3fglspectralmodel attribute)": [[271, "gammapy.modeling.models.SuperExpCutoffPowerLaw3FGLSpectralModel.parameters_unique_names", false]], "parameters_unique_names (gammapy.modeling.models.superexpcutoffpowerlaw4fgldr3spectralmodel attribute)": [[272, "gammapy.modeling.models.SuperExpCutoffPowerLaw4FGLDR3SpectralModel.parameters_unique_names", false]], "parameters_unique_names (gammapy.modeling.models.superexpcutoffpowerlaw4fglspectralmodel attribute)": [[273, "gammapy.modeling.models.SuperExpCutoffPowerLaw4FGLSpectralModel.parameters_unique_names", false]], "parameters_unique_names (gammapy.modeling.models.templatendspatialmodel attribute)": [[275, "gammapy.modeling.models.TemplateNDSpatialModel.parameters_unique_names", false]], "parameters_unique_names (gammapy.modeling.models.templatendspectralmodel attribute)": [[276, "gammapy.modeling.models.TemplateNDSpectralModel.parameters_unique_names", false]], "parameters_unique_names (gammapy.modeling.models.templatenpredmodel attribute)": [[277, "gammapy.modeling.models.TemplateNPredModel.parameters_unique_names", false]], "parameters_unique_names (gammapy.modeling.models.templatephasecurvetemporalmodel attribute)": [[278, "gammapy.modeling.models.TemplatePhaseCurveTemporalModel.parameters_unique_names", false]], "parameters_unique_names (gammapy.modeling.models.templatespatialmodel attribute)": [[279, "gammapy.modeling.models.TemplateSpatialModel.parameters_unique_names", false]], "parameters_unique_names (gammapy.modeling.models.templatespectralmodel attribute)": [[280, "gammapy.modeling.models.TemplateSpectralModel.parameters_unique_names", false]], "parameters_unique_names (gammapy.modeling.models.temporalmodel attribute)": [[281, "gammapy.modeling.models.TemporalModel.parameters_unique_names", false]], "parameters_unique_names (gammapy.modeling.models.uniformprior attribute)": [[282, "gammapy.modeling.models.UniformPrior.parameters_unique_names", false]], "parametersensitivityestimator (class in gammapy.estimators)": [[134, "gammapy.estimators.ParameterSensitivityEstimator", false]], "parametricpsf (class in gammapy.irf)": [[167, "gammapy.irf.ParametricPSF", false]], "parse_file() (gammapy.analysis.analysisconfig class method)": [[16, "gammapy.analysis.AnalysisConfig.parse_file", false]], "parse_file() (gammapy.data.eventlistmetadata class method)": [[84, "gammapy.data.EventListMetaData.parse_file", false]], "parse_file() (gammapy.data.observationmetadata class method)": [[90, "gammapy.data.ObservationMetaData.parse_file", false]], "parse_file() (gammapy.datasets.mapdatasetmetadata class method)": [[105, "gammapy.datasets.MapDatasetMetaData.parse_file", false]], "parse_file() (gammapy.estimators.fluxmetadata class method)": [[126, "gammapy.estimators.FluxMetaData.parse_file", false]], "parse_obj() (gammapy.analysis.analysisconfig class method)": [[16, "gammapy.analysis.AnalysisConfig.parse_obj", false]], "parse_obj() (gammapy.data.eventlistmetadata class method)": [[84, "gammapy.data.EventListMetaData.parse_obj", false]], "parse_obj() (gammapy.data.observationmetadata class method)": [[90, "gammapy.data.ObservationMetaData.parse_obj", false]], "parse_obj() (gammapy.datasets.mapdatasetmetadata class method)": [[105, "gammapy.datasets.MapDatasetMetaData.parse_obj", false]], "parse_obj() (gammapy.estimators.fluxmetadata class method)": [[126, "gammapy.estimators.FluxMetaData.parse_obj", false]], "parse_raw() (gammapy.analysis.analysisconfig class method)": [[16, "gammapy.analysis.AnalysisConfig.parse_raw", false]], "parse_raw() (gammapy.data.eventlistmetadata class method)": [[84, "gammapy.data.EventListMetaData.parse_raw", false]], "parse_raw() (gammapy.data.observationmetadata class method)": [[90, "gammapy.data.ObservationMetaData.parse_raw", false]], "parse_raw() (gammapy.datasets.mapdatasetmetadata class method)": [[105, "gammapy.datasets.MapDatasetMetaData.parse_raw", false]], "parse_raw() (gammapy.estimators.fluxmetadata class method)": [[126, "gammapy.estimators.FluxMetaData.parse_raw", false]], "particle_distribution (gammapy.modeling.models.naimaspectralmodel attribute)": [[252, "gammapy.modeling.models.NaimaSpectralModel.particle_distribution", false]], "path() (gammapy.utils.fits.hdulocation method)": [[322, "gammapy.utils.fits.HDULocation.path", false]], "pdf() (in module gammapy.utils.random)": [[340, "gammapy.utils.random.pdf", false]], "pdf_in_safe_range() (gammapy.irf.edispkernel method)": [[153, "gammapy.irf.EDispKernel.pdf_in_safe_range", false]], "pdf_matrix (gammapy.irf.edispkernel attribute)": [[153, "gammapy.irf.EDispKernel.pdf_matrix", false]], "peak_brightness() (gammapy.catalog.sourcecataloglargescalehgps method)": [[68, "gammapy.catalog.SourceCatalogLargeScaleHGPS.peak_brightness", false]], "peak_brightness_error() (gammapy.catalog.sourcecataloglargescalehgps method)": [[68, "gammapy.catalog.SourceCatalogLargeScaleHGPS.peak_brightness_error", false]], "peak_latitude() (gammapy.catalog.sourcecataloglargescalehgps method)": [[68, "gammapy.catalog.SourceCatalogLargeScaleHGPS.peak_latitude", false]], "peak_latitude_error() (gammapy.catalog.sourcecataloglargescalehgps method)": [[68, "gammapy.catalog.SourceCatalogLargeScaleHGPS.peak_latitude_error", false]], "peek() (gammapy.data.eventlist method)": [[83, "gammapy.data.EventList.peek", false]], "peek() (gammapy.data.observation method)": [[88, "gammapy.data.Observation.peek", false]], "peek() (gammapy.datasets.mapdataset method)": [[103, "gammapy.datasets.MapDataset.peek", false]], "peek() (gammapy.datasets.mapdatasetonoff method)": [[106, "gammapy.datasets.MapDatasetOnOff.peek", false]], "peek() (gammapy.datasets.spectrumdataset method)": [[110, "gammapy.datasets.SpectrumDataset.peek", false]], "peek() (gammapy.datasets.spectrumdatasetonoff method)": [[111, "gammapy.datasets.SpectrumDatasetOnOff.peek", false]], "peek() (gammapy.estimators.imageprofile method)": [[130, "gammapy.estimators.ImageProfile.peek", false]], "peek() (gammapy.irf.background2d method)": [[150, "gammapy.irf.Background2D.peek", false]], "peek() (gammapy.irf.background3d method)": [[151, "gammapy.irf.Background3D.peek", false]], "peek() (gammapy.irf.edispkernel method)": [[153, "gammapy.irf.EDispKernel.peek", false]], "peek() (gammapy.irf.edispkernelmap method)": [[154, "gammapy.irf.EDispKernelMap.peek", false]], "peek() (gammapy.irf.edispmap method)": [[155, "gammapy.irf.EDispMap.peek", false]], "peek() (gammapy.irf.effectiveareatable2d method)": [[156, "gammapy.irf.EffectiveAreaTable2D.peek", false]], "peek() (gammapy.irf.energydependentmultigausspsf method)": [[157, "gammapy.irf.EnergyDependentMultiGaussPSF.peek", false]], "peek() (gammapy.irf.energydispersion2d method)": [[158, "gammapy.irf.EnergyDispersion2D.peek", false]], "peek() (gammapy.irf.parametricpsf method)": [[167, "gammapy.irf.ParametricPSF.peek", false]], "peek() (gammapy.irf.psf3d method)": [[163, "gammapy.irf.PSF3D.peek", false]], "peek() (gammapy.irf.psfkernel method)": [[164, "gammapy.irf.PSFKernel.peek", false]], "peek() (gammapy.irf.psfking method)": [[165, "gammapy.irf.PSFKing.peek", false]], "peek() (gammapy.irf.psfmap method)": [[166, "gammapy.irf.PSFMap.peek", false]], "peek() (gammapy.irf.recopsfmap method)": [[169, "gammapy.irf.RecoPSFMap.peek", false]], "period() (gammapy.astro.source.pulsar method)": [[51, "gammapy.astro.source.Pulsar.period", false]], "period_dot() (gammapy.astro.source.pulsar method)": [[51, "gammapy.astro.source.Pulsar.period_dot", false]], "pformat() (gammapy.data.hduindextable method)": [[87, "gammapy.data.HDUIndexTable.pformat", false]], "pformat() (gammapy.data.observationtable method)": [[91, "gammapy.data.ObservationTable.pformat", false]], "pformat_all() (gammapy.data.hduindextable method)": [[87, "gammapy.data.HDUIndexTable.pformat_all", false]], "pformat_all() (gammapy.data.observationtable method)": [[91, "gammapy.data.ObservationTable.pformat_all", false]], "phasebackgroundmaker (class in gammapy.makers)": [[177, "gammapy.makers.PhaseBackgroundMaker", false]], "phi (gammapy.maps.mapcoord attribute)": [[202, "gammapy.maps.MapCoord.phi", false]], "phi (gammapy.modeling.models.diskspatialmodel attribute)": [[228, "gammapy.modeling.models.DiskSpatialModel.phi", false]], "phi (gammapy.modeling.models.gaussianspatialmodel attribute)": [[237, "gammapy.modeling.models.GaussianSpatialModel.phi", false]], "phi (gammapy.modeling.models.generalizedgaussianspatialmodel attribute)": [[240, "gammapy.modeling.models.GeneralizedGaussianSpatialModel.phi", false]], "phi_0 (gammapy.modeling.models.constantfluxspatialmodel attribute)": [[223, "gammapy.modeling.models.ConstantFluxSpatialModel.phi_0", false]], "phi_0 (gammapy.modeling.models.constantspatialmodel attribute)": [[224, "gammapy.modeling.models.ConstantSpatialModel.phi_0", false]], "phi_0 (gammapy.modeling.models.diskspatialmodel attribute)": [[228, "gammapy.modeling.models.DiskSpatialModel.phi_0", false]], "phi_0 (gammapy.modeling.models.gaussianspatialmodel attribute)": [[237, "gammapy.modeling.models.GaussianSpatialModel.phi_0", false]], "phi_0 (gammapy.modeling.models.generalizedgaussianspatialmodel attribute)": [[240, "gammapy.modeling.models.GeneralizedGaussianSpatialModel.phi_0", false]], "phi_0 (gammapy.modeling.models.piecewisenormspatialmodel attribute)": [[253, "gammapy.modeling.models.PiecewiseNormSpatialModel.phi_0", false]], "phi_0 (gammapy.modeling.models.pointspatialmodel attribute)": [[255, "gammapy.modeling.models.PointSpatialModel.phi_0", false]], "phi_0 (gammapy.modeling.models.shell2spatialmodel attribute)": [[264, "gammapy.modeling.models.Shell2SpatialModel.phi_0", false]], "phi_0 (gammapy.modeling.models.shellspatialmodel attribute)": [[265, "gammapy.modeling.models.ShellSpatialModel.phi_0", false]], "phi_0 (gammapy.modeling.models.spatialmodel attribute)": [[269, "gammapy.modeling.models.SpatialModel.phi_0", false]], "phi_0 (gammapy.modeling.models.templatendspatialmodel attribute)": [[275, "gammapy.modeling.models.TemplateNDSpatialModel.phi_0", false]], "phi_0 (gammapy.modeling.models.templatespatialmodel attribute)": [[279, "gammapy.modeling.models.TemplateSpatialModel.phi_0", false]], "phi_ref (gammapy.modeling.models.templatephasecurvetemporalmodel attribute)": [[278, "gammapy.modeling.models.TemplatePhaseCurveTemporalModel.phi_ref", false]], "piecewisenormspatialmodel (class in gammapy.modeling.models)": [[253, "gammapy.modeling.models.PiecewiseNormSpatialModel", false]], "piecewisenormspectralmodel (class in gammapy.modeling.models)": [[254, "gammapy.modeling.models.PiecewiseNormSpectralModel", false]], "pivot_energy (gammapy.astro.darkmatter.darkmatterannihilationspectralmodel attribute)": [[19, "gammapy.astro.darkmatter.DarkMatterAnnihilationSpectralModel.pivot_energy", false]], "pivot_energy (gammapy.astro.darkmatter.darkmatterdecayspectralmodel attribute)": [[20, "gammapy.astro.darkmatter.DarkMatterDecaySpectralModel.pivot_energy", false]], "pivot_energy (gammapy.astro.darkmatter.primaryflux attribute)": [[26, "gammapy.astro.darkmatter.PrimaryFlux.pivot_energy", false]], "pivot_energy (gammapy.modeling.models.brokenpowerlawspectralmodel attribute)": [[221, "gammapy.modeling.models.BrokenPowerLawSpectralModel.pivot_energy", false]], "pivot_energy (gammapy.modeling.models.compoundspectralmodel attribute)": [[222, "gammapy.modeling.models.CompoundSpectralModel.pivot_energy", false]], "pivot_energy (gammapy.modeling.models.constantspectralmodel attribute)": [[225, "gammapy.modeling.models.ConstantSpectralModel.pivot_energy", false]], "pivot_energy (gammapy.modeling.models.eblabsorptionnormspectralmodel attribute)": [[229, "gammapy.modeling.models.EBLAbsorptionNormSpectralModel.pivot_energy", false]], "pivot_energy (gammapy.modeling.models.expcutoffpowerlaw3fglspectralmodel attribute)": [[231, "gammapy.modeling.models.ExpCutoffPowerLaw3FGLSpectralModel.pivot_energy", false]], "pivot_energy (gammapy.modeling.models.expcutoffpowerlawnormspectralmodel attribute)": [[232, "gammapy.modeling.models.ExpCutoffPowerLawNormSpectralModel.pivot_energy", false]], "pivot_energy (gammapy.modeling.models.expcutoffpowerlawspectralmodel attribute)": [[233, "gammapy.modeling.models.ExpCutoffPowerLawSpectralModel.pivot_energy", false]], "pivot_energy (gammapy.modeling.models.gaussianspectralmodel attribute)": [[238, "gammapy.modeling.models.GaussianSpectralModel.pivot_energy", false]], "pivot_energy (gammapy.modeling.models.logparabolanormspectralmodel attribute)": [[244, "gammapy.modeling.models.LogParabolaNormSpectralModel.pivot_energy", false]], "pivot_energy (gammapy.modeling.models.logparabolaspectralmodel attribute)": [[245, "gammapy.modeling.models.LogParabolaSpectralModel.pivot_energy", false]], "pivot_energy (gammapy.modeling.models.meyercrabspectralmodel attribute)": [[248, "gammapy.modeling.models.MeyerCrabSpectralModel.pivot_energy", false]], "pivot_energy (gammapy.modeling.models.naimaspectralmodel attribute)": [[252, "gammapy.modeling.models.NaimaSpectralModel.pivot_energy", false]], "pivot_energy (gammapy.modeling.models.piecewisenormspectralmodel attribute)": [[254, "gammapy.modeling.models.PiecewiseNormSpectralModel.pivot_energy", false]], "pivot_energy (gammapy.modeling.models.powerlaw2spectralmodel attribute)": [[256, "gammapy.modeling.models.PowerLaw2SpectralModel.pivot_energy", false]], "pivot_energy (gammapy.modeling.models.powerlawnormspectralmodel attribute)": [[257, "gammapy.modeling.models.PowerLawNormSpectralModel.pivot_energy", false]], "pivot_energy (gammapy.modeling.models.powerlawspectralmodel attribute)": [[258, "gammapy.modeling.models.PowerLawSpectralModel.pivot_energy", false]], "pivot_energy (gammapy.modeling.models.scalespectralmodel attribute)": [[263, "gammapy.modeling.models.ScaleSpectralModel.pivot_energy", false]], "pivot_energy (gammapy.modeling.models.smoothbrokenpowerlawspectralmodel attribute)": [[268, "gammapy.modeling.models.SmoothBrokenPowerLawSpectralModel.pivot_energy", false]], "pivot_energy (gammapy.modeling.models.spectralmodel attribute)": [[270, "gammapy.modeling.models.SpectralModel.pivot_energy", false]], "pivot_energy (gammapy.modeling.models.superexpcutoffpowerlaw3fglspectralmodel attribute)": [[271, "gammapy.modeling.models.SuperExpCutoffPowerLaw3FGLSpectralModel.pivot_energy", false]], "pivot_energy (gammapy.modeling.models.superexpcutoffpowerlaw4fgldr3spectralmodel attribute)": [[272, "gammapy.modeling.models.SuperExpCutoffPowerLaw4FGLDR3SpectralModel.pivot_energy", false]], "pivot_energy (gammapy.modeling.models.superexpcutoffpowerlaw4fglspectralmodel attribute)": [[273, "gammapy.modeling.models.SuperExpCutoffPowerLaw4FGLSpectralModel.pivot_energy", false]], "pivot_energy (gammapy.modeling.models.templatendspectralmodel attribute)": [[276, "gammapy.modeling.models.TemplateNDSpectralModel.pivot_energy", false]], "pivot_energy (gammapy.modeling.models.templatespectralmodel attribute)": [[280, "gammapy.modeling.models.TemplateSpectralModel.pivot_energy", false]], "pix_to_coord() (gammapy.maps.geom method)": [[194, "gammapy.maps.Geom.pix_to_coord", false]], "pix_to_coord() (gammapy.maps.hpxgeom method)": [[195, "gammapy.maps.HpxGeom.pix_to_coord", false]], "pix_to_coord() (gammapy.maps.labelmapaxis method)": [[198, "gammapy.maps.LabelMapAxis.pix_to_coord", false]], "pix_to_coord() (gammapy.maps.mapaxes method)": [[200, "gammapy.maps.MapAxes.pix_to_coord", false]], "pix_to_coord() (gammapy.maps.mapaxis method)": [[201, "gammapy.maps.MapAxis.pix_to_coord", false]], "pix_to_coord() (gammapy.maps.regiongeom method)": [[204, "gammapy.maps.RegionGeom.pix_to_coord", false]], "pix_to_coord() (gammapy.maps.timemapaxis method)": [[206, "gammapy.maps.TimeMapAxis.pix_to_coord", false]], "pix_to_coord() (gammapy.maps.wcsgeom method)": [[207, "gammapy.maps.WcsGeom.pix_to_coord", false]], "pix_to_idx() (gammapy.maps.geom method)": [[194, "gammapy.maps.Geom.pix_to_idx", false]], "pix_to_idx() (gammapy.maps.hpxgeom method)": [[195, "gammapy.maps.HpxGeom.pix_to_idx", false]], "pix_to_idx() (gammapy.maps.labelmapaxis method)": [[198, "gammapy.maps.LabelMapAxis.pix_to_idx", false]], "pix_to_idx() (gammapy.maps.mapaxes method)": [[200, "gammapy.maps.MapAxes.pix_to_idx", false]], "pix_to_idx() (gammapy.maps.mapaxis method)": [[201, "gammapy.maps.MapAxis.pix_to_idx", false]], "pix_to_idx() (gammapy.maps.regiongeom method)": [[204, "gammapy.maps.RegionGeom.pix_to_idx", false]], "pix_to_idx() (gammapy.maps.timemapaxis static method)": [[206, "gammapy.maps.TimeMapAxis.pix_to_idx", false]], "pix_to_idx() (gammapy.maps.wcsgeom method)": [[207, "gammapy.maps.WcsGeom.pix_to_idx", false]], "pixel_area (gammapy.maps.wcsgeom attribute)": [[207, "gammapy.maps.WcsGeom.pixel_area", false]], "pixel_scales (gammapy.maps.hpxgeom attribute)": [[195, "gammapy.maps.HpxGeom.pixel_scales", false]], "pixel_scales (gammapy.maps.wcsgeom attribute)": [[207, "gammapy.maps.WcsGeom.pixel_scales", false]], "plot() (gammapy.astro.darkmatter.darkmatterannihilationspectralmodel method)": [[19, "gammapy.astro.darkmatter.DarkMatterAnnihilationSpectralModel.plot", false]], "plot() (gammapy.astro.darkmatter.darkmatterdecayspectralmodel method)": [[20, "gammapy.astro.darkmatter.DarkMatterDecaySpectralModel.plot", false]], "plot() (gammapy.astro.darkmatter.primaryflux method)": [[26, "gammapy.astro.darkmatter.PrimaryFlux.plot", false]], "plot() (gammapy.estimators.fluxpoints method)": [[127, "gammapy.estimators.FluxPoints.plot", false]], "plot() (gammapy.estimators.imageprofile method)": [[130, "gammapy.estimators.ImageProfile.plot", false]], "plot() (gammapy.irf.background2d method)": [[150, "gammapy.irf.Background2D.plot", false]], "plot() (gammapy.irf.effectiveareatable2d method)": [[156, "gammapy.irf.EffectiveAreaTable2D.plot", false]], "plot() (gammapy.maps.hpxndmap method)": [[197, "gammapy.maps.HpxNDMap.plot", false]], "plot() (gammapy.maps.regionndmap method)": [[205, "gammapy.maps.RegionNDMap.plot", false]], "plot() (gammapy.maps.wcsndmap method)": [[209, "gammapy.maps.WcsNDMap.plot", false]], "plot() (gammapy.modeling.models.brokenpowerlawspectralmodel method)": [[221, "gammapy.modeling.models.BrokenPowerLawSpectralModel.plot", false]], "plot() (gammapy.modeling.models.compoundspectralmodel method)": [[222, "gammapy.modeling.models.CompoundSpectralModel.plot", false]], "plot() (gammapy.modeling.models.constantfluxspatialmodel method)": [[223, "gammapy.modeling.models.ConstantFluxSpatialModel.plot", false]], "plot() (gammapy.modeling.models.constantspatialmodel method)": [[224, "gammapy.modeling.models.ConstantSpatialModel.plot", false]], "plot() (gammapy.modeling.models.constantspectralmodel method)": [[225, "gammapy.modeling.models.ConstantSpectralModel.plot", false]], "plot() (gammapy.modeling.models.constanttemporalmodel method)": [[226, "gammapy.modeling.models.ConstantTemporalModel.plot", false]], "plot() (gammapy.modeling.models.diskspatialmodel method)": [[228, "gammapy.modeling.models.DiskSpatialModel.plot", false]], "plot() (gammapy.modeling.models.eblabsorptionnormspectralmodel method)": [[229, "gammapy.modeling.models.EBLAbsorptionNormSpectralModel.plot", false]], "plot() (gammapy.modeling.models.expcutoffpowerlaw3fglspectralmodel method)": [[231, "gammapy.modeling.models.ExpCutoffPowerLaw3FGLSpectralModel.plot", false]], "plot() (gammapy.modeling.models.expcutoffpowerlawnormspectralmodel method)": [[232, "gammapy.modeling.models.ExpCutoffPowerLawNormSpectralModel.plot", false]], "plot() (gammapy.modeling.models.expcutoffpowerlawspectralmodel method)": [[233, "gammapy.modeling.models.ExpCutoffPowerLawSpectralModel.plot", false]], "plot() (gammapy.modeling.models.expdecaytemporalmodel method)": [[234, "gammapy.modeling.models.ExpDecayTemporalModel.plot", false]], "plot() (gammapy.modeling.models.gaussianspatialmodel method)": [[237, "gammapy.modeling.models.GaussianSpatialModel.plot", false]], "plot() (gammapy.modeling.models.gaussianspectralmodel method)": [[238, "gammapy.modeling.models.GaussianSpectralModel.plot", false]], "plot() (gammapy.modeling.models.gaussiantemporalmodel method)": [[239, "gammapy.modeling.models.GaussianTemporalModel.plot", false]], "plot() (gammapy.modeling.models.generalizedgaussianspatialmodel method)": [[240, "gammapy.modeling.models.GeneralizedGaussianSpatialModel.plot", false]], "plot() (gammapy.modeling.models.generalizedgaussiantemporalmodel method)": [[241, "gammapy.modeling.models.GeneralizedGaussianTemporalModel.plot", false]], "plot() (gammapy.modeling.models.lightcurvetemplatetemporalmodel method)": [[242, "gammapy.modeling.models.LightCurveTemplateTemporalModel.plot", false]], "plot() (gammapy.modeling.models.lineartemporalmodel method)": [[243, "gammapy.modeling.models.LinearTemporalModel.plot", false]], "plot() (gammapy.modeling.models.logparabolanormspectralmodel method)": [[244, "gammapy.modeling.models.LogParabolaNormSpectralModel.plot", false]], "plot() (gammapy.modeling.models.logparabolaspectralmodel method)": [[245, "gammapy.modeling.models.LogParabolaSpectralModel.plot", false]], "plot() (gammapy.modeling.models.meyercrabspectralmodel method)": [[248, "gammapy.modeling.models.MeyerCrabSpectralModel.plot", false]], "plot() (gammapy.modeling.models.naimaspectralmodel method)": [[252, "gammapy.modeling.models.NaimaSpectralModel.plot", false]], "plot() (gammapy.modeling.models.piecewisenormspatialmodel method)": [[253, "gammapy.modeling.models.PiecewiseNormSpatialModel.plot", false]], "plot() (gammapy.modeling.models.piecewisenormspectralmodel method)": [[254, "gammapy.modeling.models.PiecewiseNormSpectralModel.plot", false]], "plot() (gammapy.modeling.models.pointspatialmodel method)": [[255, "gammapy.modeling.models.PointSpatialModel.plot", false]], "plot() (gammapy.modeling.models.powerlaw2spectralmodel method)": [[256, "gammapy.modeling.models.PowerLaw2SpectralModel.plot", false]], "plot() (gammapy.modeling.models.powerlawnormspectralmodel method)": [[257, "gammapy.modeling.models.PowerLawNormSpectralModel.plot", false]], "plot() (gammapy.modeling.models.powerlawspectralmodel method)": [[258, "gammapy.modeling.models.PowerLawSpectralModel.plot", false]], "plot() (gammapy.modeling.models.powerlawtemporalmodel method)": [[259, "gammapy.modeling.models.PowerLawTemporalModel.plot", false]], "plot() (gammapy.modeling.models.scalespectralmodel method)": [[263, "gammapy.modeling.models.ScaleSpectralModel.plot", false]], "plot() (gammapy.modeling.models.shell2spatialmodel method)": [[264, "gammapy.modeling.models.Shell2SpatialModel.plot", false]], "plot() (gammapy.modeling.models.shellspatialmodel method)": [[265, "gammapy.modeling.models.ShellSpatialModel.plot", false]], "plot() (gammapy.modeling.models.sinetemporalmodel method)": [[266, "gammapy.modeling.models.SineTemporalModel.plot", false]], "plot() (gammapy.modeling.models.smoothbrokenpowerlawspectralmodel method)": [[268, "gammapy.modeling.models.SmoothBrokenPowerLawSpectralModel.plot", false]], "plot() (gammapy.modeling.models.spatialmodel method)": [[269, "gammapy.modeling.models.SpatialModel.plot", false]], "plot() (gammapy.modeling.models.spectralmodel method)": [[270, "gammapy.modeling.models.SpectralModel.plot", false]], "plot() (gammapy.modeling.models.superexpcutoffpowerlaw3fglspectralmodel method)": [[271, "gammapy.modeling.models.SuperExpCutoffPowerLaw3FGLSpectralModel.plot", false]], "plot() (gammapy.modeling.models.superexpcutoffpowerlaw4fgldr3spectralmodel method)": [[272, "gammapy.modeling.models.SuperExpCutoffPowerLaw4FGLDR3SpectralModel.plot", false]], "plot() (gammapy.modeling.models.superexpcutoffpowerlaw4fglspectralmodel method)": [[273, "gammapy.modeling.models.SuperExpCutoffPowerLaw4FGLSpectralModel.plot", false]], "plot() (gammapy.modeling.models.templatendspatialmodel method)": [[275, "gammapy.modeling.models.TemplateNDSpatialModel.plot", false]], "plot() (gammapy.modeling.models.templatendspectralmodel method)": [[276, "gammapy.modeling.models.TemplateNDSpectralModel.plot", false]], "plot() (gammapy.modeling.models.templatephasecurvetemporalmodel method)": [[278, "gammapy.modeling.models.TemplatePhaseCurveTemporalModel.plot", false]], "plot() (gammapy.modeling.models.templatespatialmodel method)": [[279, "gammapy.modeling.models.TemplateSpatialModel.plot", false]], "plot() (gammapy.modeling.models.templatespectralmodel method)": [[280, "gammapy.modeling.models.TemplateSpectralModel.plot", false]], "plot() (gammapy.modeling.models.temporalmodel method)": [[281, "gammapy.modeling.models.TemporalModel.plot", false]], "plot() (gammapy.visualization.mappanelplotter method)": [[374, "gammapy.visualization.MapPanelPlotter.plot", false]], "plot_at_energy() (gammapy.irf.background2d method)": [[150, "gammapy.irf.Background2D.plot_at_energy", false]], "plot_at_energy() (gammapy.irf.background3d method)": [[151, "gammapy.irf.Background3D.plot_at_energy", false]], "plot_bias() (gammapy.irf.edispkernel method)": [[153, "gammapy.irf.EDispKernel.plot_bias", false]], "plot_bias() (gammapy.irf.energydispersion2d method)": [[158, "gammapy.irf.EnergyDispersion2D.plot_bias", false]], "plot_containment_radius() (gammapy.irf.energydependentmultigausspsf method)": [[157, "gammapy.irf.EnergyDependentMultiGaussPSF.plot_containment_radius", false]], "plot_containment_radius() (gammapy.irf.parametricpsf method)": [[167, "gammapy.irf.ParametricPSF.plot_containment_radius", false]], "plot_containment_radius() (gammapy.irf.psf3d method)": [[163, "gammapy.irf.PSF3D.plot_containment_radius", false]], "plot_containment_radius() (gammapy.irf.psfking method)": [[165, "gammapy.irf.PSFKing.plot_containment_radius", false]], "plot_containment_radius_vs_energy() (gammapy.irf.energydependentmultigausspsf method)": [[157, "gammapy.irf.EnergyDependentMultiGaussPSF.plot_containment_radius_vs_energy", false]], "plot_containment_radius_vs_energy() (gammapy.irf.parametricpsf method)": [[167, "gammapy.irf.ParametricPSF.plot_containment_radius_vs_energy", false]], "plot_containment_radius_vs_energy() (gammapy.irf.psf3d method)": [[163, "gammapy.irf.PSF3D.plot_containment_radius_vs_energy", false]], "plot_containment_radius_vs_energy() (gammapy.irf.psfking method)": [[165, "gammapy.irf.PSFKing.plot_containment_radius_vs_energy", false]], "plot_containment_radius_vs_energy() (gammapy.irf.psfmap method)": [[166, "gammapy.irf.PSFMap.plot_containment_radius_vs_energy", false]], "plot_containment_radius_vs_energy() (gammapy.irf.recopsfmap method)": [[169, "gammapy.irf.RecoPSFMap.plot_containment_radius_vs_energy", false]], "plot_contour_line() (in module gammapy.visualization)": [[379, "gammapy.visualization.plot_contour_line", false]], "plot_correlation() (gammapy.modeling.covariance method)": [[212, "gammapy.modeling.Covariance.plot_correlation", false]], "plot_counts() (gammapy.datasets.spectrumdataset method)": [[110, "gammapy.datasets.SpectrumDataset.plot_counts", false]], "plot_counts() (gammapy.datasets.spectrumdatasetonoff method)": [[111, "gammapy.datasets.SpectrumDatasetOnOff.plot_counts", false]], "plot_distribution() (in module gammapy.visualization)": [[380, "gammapy.visualization.plot_distribution", false]], "plot_energy() (gammapy.data.eventlist method)": [[83, "gammapy.data.EventList.plot_energy", false]], "plot_energy_dependence() (gammapy.irf.background2d method)": [[150, "gammapy.irf.Background2D.plot_energy_dependence", false]], "plot_energy_dependence() (gammapy.irf.effectiveareatable2d method)": [[156, "gammapy.irf.EffectiveAreaTable2D.plot_energy_dependence", false]], "plot_energy_offset() (gammapy.data.eventlist method)": [[83, "gammapy.data.EventList.plot_energy_offset", false]], "plot_err() (gammapy.estimators.imageprofile method)": [[130, "gammapy.estimators.ImageProfile.plot_err", false]], "plot_error() (gammapy.astro.darkmatter.darkmatterannihilationspectralmodel method)": [[19, "gammapy.astro.darkmatter.DarkMatterAnnihilationSpectralModel.plot_error", false]], "plot_error() (gammapy.astro.darkmatter.darkmatterdecayspectralmodel method)": [[20, "gammapy.astro.darkmatter.DarkMatterDecaySpectralModel.plot_error", false]], "plot_error() (gammapy.astro.darkmatter.primaryflux method)": [[26, "gammapy.astro.darkmatter.PrimaryFlux.plot_error", false]], "plot_error() (gammapy.modeling.models.brokenpowerlawspectralmodel method)": [[221, "gammapy.modeling.models.BrokenPowerLawSpectralModel.plot_error", false]], "plot_error() (gammapy.modeling.models.compoundspectralmodel method)": [[222, "gammapy.modeling.models.CompoundSpectralModel.plot_error", false]], "plot_error() (gammapy.modeling.models.constantfluxspatialmodel method)": [[223, "gammapy.modeling.models.ConstantFluxSpatialModel.plot_error", false]], "plot_error() (gammapy.modeling.models.constantspatialmodel method)": [[224, "gammapy.modeling.models.ConstantSpatialModel.plot_error", false]], "plot_error() (gammapy.modeling.models.constantspectralmodel method)": [[225, "gammapy.modeling.models.ConstantSpectralModel.plot_error", false]], "plot_error() (gammapy.modeling.models.diskspatialmodel method)": [[228, "gammapy.modeling.models.DiskSpatialModel.plot_error", false]], "plot_error() (gammapy.modeling.models.eblabsorptionnormspectralmodel method)": [[229, "gammapy.modeling.models.EBLAbsorptionNormSpectralModel.plot_error", false]], "plot_error() (gammapy.modeling.models.expcutoffpowerlaw3fglspectralmodel method)": [[231, "gammapy.modeling.models.ExpCutoffPowerLaw3FGLSpectralModel.plot_error", false]], "plot_error() (gammapy.modeling.models.expcutoffpowerlawnormspectralmodel method)": [[232, "gammapy.modeling.models.ExpCutoffPowerLawNormSpectralModel.plot_error", false]], "plot_error() (gammapy.modeling.models.expcutoffpowerlawspectralmodel method)": [[233, "gammapy.modeling.models.ExpCutoffPowerLawSpectralModel.plot_error", false]], "plot_error() (gammapy.modeling.models.gaussianspatialmodel method)": [[237, "gammapy.modeling.models.GaussianSpatialModel.plot_error", false]], "plot_error() (gammapy.modeling.models.gaussianspectralmodel method)": [[238, "gammapy.modeling.models.GaussianSpectralModel.plot_error", false]], "plot_error() (gammapy.modeling.models.generalizedgaussianspatialmodel method)": [[240, "gammapy.modeling.models.GeneralizedGaussianSpatialModel.plot_error", false]], "plot_error() (gammapy.modeling.models.logparabolanormspectralmodel method)": [[244, "gammapy.modeling.models.LogParabolaNormSpectralModel.plot_error", false]], "plot_error() (gammapy.modeling.models.logparabolaspectralmodel method)": [[245, "gammapy.modeling.models.LogParabolaSpectralModel.plot_error", false]], "plot_error() (gammapy.modeling.models.meyercrabspectralmodel method)": [[248, "gammapy.modeling.models.MeyerCrabSpectralModel.plot_error", false]], "plot_error() (gammapy.modeling.models.naimaspectralmodel method)": [[252, "gammapy.modeling.models.NaimaSpectralModel.plot_error", false]], "plot_error() (gammapy.modeling.models.piecewisenormspatialmodel method)": [[253, "gammapy.modeling.models.PiecewiseNormSpatialModel.plot_error", false]], "plot_error() (gammapy.modeling.models.piecewisenormspectralmodel method)": [[254, "gammapy.modeling.models.PiecewiseNormSpectralModel.plot_error", false]], "plot_error() (gammapy.modeling.models.pointspatialmodel method)": [[255, "gammapy.modeling.models.PointSpatialModel.plot_error", false]], "plot_error() (gammapy.modeling.models.powerlaw2spectralmodel method)": [[256, "gammapy.modeling.models.PowerLaw2SpectralModel.plot_error", false]], "plot_error() (gammapy.modeling.models.powerlawnormspectralmodel method)": [[257, "gammapy.modeling.models.PowerLawNormSpectralModel.plot_error", false]], "plot_error() (gammapy.modeling.models.powerlawspectralmodel method)": [[258, "gammapy.modeling.models.PowerLawSpectralModel.plot_error", false]], "plot_error() (gammapy.modeling.models.scalespectralmodel method)": [[263, "gammapy.modeling.models.ScaleSpectralModel.plot_error", false]], "plot_error() (gammapy.modeling.models.shell2spatialmodel method)": [[264, "gammapy.modeling.models.Shell2SpatialModel.plot_error", false]], "plot_error() (gammapy.modeling.models.shellspatialmodel method)": [[265, "gammapy.modeling.models.ShellSpatialModel.plot_error", false]], "plot_error() (gammapy.modeling.models.smoothbrokenpowerlawspectralmodel method)": [[268, "gammapy.modeling.models.SmoothBrokenPowerLawSpectralModel.plot_error", false]], "plot_error() (gammapy.modeling.models.spatialmodel method)": [[269, "gammapy.modeling.models.SpatialModel.plot_error", false]], "plot_error() (gammapy.modeling.models.spectralmodel method)": [[270, "gammapy.modeling.models.SpectralModel.plot_error", false]], "plot_error() (gammapy.modeling.models.superexpcutoffpowerlaw3fglspectralmodel method)": [[271, "gammapy.modeling.models.SuperExpCutoffPowerLaw3FGLSpectralModel.plot_error", false]], "plot_error() (gammapy.modeling.models.superexpcutoffpowerlaw4fgldr3spectralmodel method)": [[272, "gammapy.modeling.models.SuperExpCutoffPowerLaw4FGLDR3SpectralModel.plot_error", false]], "plot_error() (gammapy.modeling.models.superexpcutoffpowerlaw4fglspectralmodel method)": [[273, "gammapy.modeling.models.SuperExpCutoffPowerLaw4FGLSpectralModel.plot_error", false]], "plot_error() (gammapy.modeling.models.templatendspatialmodel method)": [[275, "gammapy.modeling.models.TemplateNDSpatialModel.plot_error", false]], "plot_error() (gammapy.modeling.models.templatendspectralmodel method)": [[276, "gammapy.modeling.models.TemplateNDSpectralModel.plot_error", false]], "plot_error() (gammapy.modeling.models.templatespatialmodel method)": [[279, "gammapy.modeling.models.TemplateSpatialModel.plot_error", false]], "plot_error() (gammapy.modeling.models.templatespectralmodel method)": [[280, "gammapy.modeling.models.TemplateSpectralModel.plot_error", false]], "plot_excess() (gammapy.datasets.spectrumdataset method)": [[110, "gammapy.datasets.SpectrumDataset.plot_excess", false]], "plot_excess() (gammapy.datasets.spectrumdatasetonoff method)": [[111, "gammapy.datasets.SpectrumDatasetOnOff.plot_excess", false]], "plot_fit() (gammapy.datasets.fluxpointsdataset method)": [[102, "gammapy.datasets.FluxPointsDataset.plot_fit", false]], "plot_fit() (gammapy.datasets.spectrumdataset method)": [[110, "gammapy.datasets.SpectrumDataset.plot_fit", false]], "plot_fit() (gammapy.datasets.spectrumdatasetonoff method)": [[111, "gammapy.datasets.SpectrumDatasetOnOff.plot_fit", false]], "plot_grid() (gammapy.maps.hpxmap method)": [[196, "gammapy.maps.HpxMap.plot_grid", false]], "plot_grid() (gammapy.maps.hpxndmap method)": [[197, "gammapy.maps.HpxNDMap.plot_grid", false]], "plot_grid() (gammapy.maps.map method)": [[199, "gammapy.maps.Map.plot_grid", false]], "plot_grid() (gammapy.maps.regionndmap method)": [[205, "gammapy.maps.RegionNDMap.plot_grid", false]], "plot_grid() (gammapy.maps.wcsmap method)": [[208, "gammapy.maps.WcsMap.plot_grid", false]], "plot_grid() (gammapy.maps.wcsndmap method)": [[209, "gammapy.maps.WcsNDMap.plot_grid", false]], "plot_grid() (gammapy.modeling.models.constantfluxspatialmodel method)": [[223, "gammapy.modeling.models.ConstantFluxSpatialModel.plot_grid", false]], "plot_grid() (gammapy.modeling.models.constantspatialmodel method)": [[224, "gammapy.modeling.models.ConstantSpatialModel.plot_grid", false]], "plot_grid() (gammapy.modeling.models.diskspatialmodel method)": [[228, "gammapy.modeling.models.DiskSpatialModel.plot_grid", false]], "plot_grid() (gammapy.modeling.models.gaussianspatialmodel method)": [[237, "gammapy.modeling.models.GaussianSpatialModel.plot_grid", false]], "plot_grid() (gammapy.modeling.models.generalizedgaussianspatialmodel method)": [[240, "gammapy.modeling.models.GeneralizedGaussianSpatialModel.plot_grid", false]], "plot_grid() (gammapy.modeling.models.piecewisenormspatialmodel method)": [[253, "gammapy.modeling.models.PiecewiseNormSpatialModel.plot_grid", false]], "plot_grid() (gammapy.modeling.models.pointspatialmodel method)": [[255, "gammapy.modeling.models.PointSpatialModel.plot_grid", false]], "plot_grid() (gammapy.modeling.models.shell2spatialmodel method)": [[264, "gammapy.modeling.models.Shell2SpatialModel.plot_grid", false]], "plot_grid() (gammapy.modeling.models.shellspatialmodel method)": [[265, "gammapy.modeling.models.ShellSpatialModel.plot_grid", false]], "plot_grid() (gammapy.modeling.models.spatialmodel method)": [[269, "gammapy.modeling.models.SpatialModel.plot_grid", false]], "plot_grid() (gammapy.modeling.models.templatendspatialmodel method)": [[275, "gammapy.modeling.models.TemplateNDSpatialModel.plot_grid", false]], "plot_grid() (gammapy.modeling.models.templatespatialmodel method)": [[279, "gammapy.modeling.models.TemplateSpatialModel.plot_grid", false]], "plot_heatmap() (in module gammapy.visualization)": [[381, "gammapy.visualization.plot_heatmap", false]], "plot_hist() (gammapy.maps.regionndmap method)": [[205, "gammapy.maps.RegionNDMap.plot_hist", false]], "plot_image() (gammapy.data.eventlist method)": [[83, "gammapy.data.EventList.plot_image", false]], "plot_interactive() (gammapy.maps.hpxmap method)": [[196, "gammapy.maps.HpxMap.plot_interactive", false]], "plot_interactive() (gammapy.maps.hpxndmap method)": [[197, "gammapy.maps.HpxNDMap.plot_interactive", false]], "plot_interactive() (gammapy.maps.map method)": [[199, "gammapy.maps.Map.plot_interactive", false]], "plot_interactive() (gammapy.maps.regionndmap method)": [[205, "gammapy.maps.RegionNDMap.plot_interactive", false]], "plot_interactive() (gammapy.maps.wcsmap method)": [[208, "gammapy.maps.WcsMap.plot_interactive", false]], "plot_interactive() (gammapy.maps.wcsndmap method)": [[209, "gammapy.maps.WcsNDMap.plot_interactive", false]], "plot_interactive() (gammapy.modeling.models.constantfluxspatialmodel method)": [[223, "gammapy.modeling.models.ConstantFluxSpatialModel.plot_interactive", false]], "plot_interactive() (gammapy.modeling.models.constantspatialmodel method)": [[224, "gammapy.modeling.models.ConstantSpatialModel.plot_interactive", false]], "plot_interactive() (gammapy.modeling.models.diskspatialmodel method)": [[228, "gammapy.modeling.models.DiskSpatialModel.plot_interactive", false]], "plot_interactive() (gammapy.modeling.models.gaussianspatialmodel method)": [[237, "gammapy.modeling.models.GaussianSpatialModel.plot_interactive", false]], "plot_interactive() (gammapy.modeling.models.generalizedgaussianspatialmodel method)": [[240, "gammapy.modeling.models.GeneralizedGaussianSpatialModel.plot_interactive", false]], "plot_interactive() (gammapy.modeling.models.piecewisenormspatialmodel method)": [[253, "gammapy.modeling.models.PiecewiseNormSpatialModel.plot_interactive", false]], "plot_interactive() (gammapy.modeling.models.pointspatialmodel method)": [[255, "gammapy.modeling.models.PointSpatialModel.plot_interactive", false]], "plot_interactive() (gammapy.modeling.models.shell2spatialmodel method)": [[264, "gammapy.modeling.models.Shell2SpatialModel.plot_interactive", false]], "plot_interactive() (gammapy.modeling.models.shellspatialmodel method)": [[265, "gammapy.modeling.models.ShellSpatialModel.plot_interactive", false]], "plot_interactive() (gammapy.modeling.models.spatialmodel method)": [[269, "gammapy.modeling.models.SpatialModel.plot_interactive", false]], "plot_interactive() (gammapy.modeling.models.templatendspatialmodel method)": [[275, "gammapy.modeling.models.TemplateNDSpatialModel.plot_interactive", false]], "plot_interactive() (gammapy.modeling.models.templatespatialmodel method)": [[279, "gammapy.modeling.models.TemplateSpatialModel.plot_interactive", false]], "plot_kernel() (gammapy.irf.psfkernel method)": [[164, "gammapy.irf.PSFKernel.plot_kernel", false]], "plot_map_rgb() (in module gammapy.visualization)": [[382, "gammapy.visualization.plot_map_rgb", false]], "plot_mask() (gammapy.maps.hpxndmap method)": [[197, "gammapy.maps.HpxNDMap.plot_mask", false]], "plot_mask() (gammapy.maps.regionndmap method)": [[205, "gammapy.maps.RegionNDMap.plot_mask", false]], "plot_mask() (gammapy.maps.wcsndmap method)": [[209, "gammapy.maps.WcsNDMap.plot_mask", false]], "plot_masks() (gammapy.datasets.spectrumdataset method)": [[110, "gammapy.datasets.SpectrumDataset.plot_masks", false]], "plot_masks() (gammapy.datasets.spectrumdatasetonoff method)": [[111, "gammapy.datasets.SpectrumDatasetOnOff.plot_masks", false]], "plot_matrix() (gammapy.irf.edispkernel method)": [[153, "gammapy.irf.EDispKernel.plot_matrix", false]], "plot_migration() (gammapy.irf.energydispersion2d method)": [[158, "gammapy.irf.EnergyDispersion2D.plot_migration", false]], "plot_npred_signal() (in module gammapy.visualization)": [[383, "gammapy.visualization.plot_npred_signal", false]], "plot_offset2_distribution() (gammapy.data.eventlist method)": [[83, "gammapy.data.EventList.plot_offset2_distribution", false]], "plot_offset_dependence() (gammapy.irf.background2d method)": [[150, "gammapy.irf.Background2D.plot_offset_dependence", false]], "plot_offset_dependence() (gammapy.irf.effectiveareatable2d method)": [[156, "gammapy.irf.EffectiveAreaTable2D.plot_offset_dependence", false]], "plot_panel() (gammapy.visualization.mappanelplotter method)": [[374, "gammapy.visualization.MapPanelPlotter.plot_panel", false]], "plot_phasogram() (gammapy.modeling.models.templatephasecurvetemporalmodel method)": [[278, "gammapy.modeling.models.TemplatePhaseCurveTemporalModel.plot_phasogram", false]], "plot_position_error() (gammapy.modeling.models.constantfluxspatialmodel method)": [[223, "gammapy.modeling.models.ConstantFluxSpatialModel.plot_position_error", false]], "plot_position_error() (gammapy.modeling.models.constantspatialmodel method)": [[224, "gammapy.modeling.models.ConstantSpatialModel.plot_position_error", false]], "plot_position_error() (gammapy.modeling.models.diskspatialmodel method)": [[228, "gammapy.modeling.models.DiskSpatialModel.plot_position_error", false]], "plot_position_error() (gammapy.modeling.models.gaussianspatialmodel method)": [[237, "gammapy.modeling.models.GaussianSpatialModel.plot_position_error", false]], "plot_position_error() (gammapy.modeling.models.generalizedgaussianspatialmodel method)": [[240, "gammapy.modeling.models.GeneralizedGaussianSpatialModel.plot_position_error", false]], "plot_position_error() (gammapy.modeling.models.piecewisenormspatialmodel method)": [[253, "gammapy.modeling.models.PiecewiseNormSpatialModel.plot_position_error", false]], "plot_position_error() (gammapy.modeling.models.pointspatialmodel method)": [[255, "gammapy.modeling.models.PointSpatialModel.plot_position_error", false]], "plot_position_error() (gammapy.modeling.models.shell2spatialmodel method)": [[264, "gammapy.modeling.models.Shell2SpatialModel.plot_position_error", false]], "plot_position_error() (gammapy.modeling.models.shellspatialmodel method)": [[265, "gammapy.modeling.models.ShellSpatialModel.plot_position_error", false]], "plot_position_error() (gammapy.modeling.models.spatialmodel method)": [[269, "gammapy.modeling.models.SpatialModel.plot_position_error", false]], "plot_position_error() (gammapy.modeling.models.templatendspatialmodel method)": [[275, "gammapy.modeling.models.TemplateNDSpatialModel.plot_position_error", false]], "plot_position_error() (gammapy.modeling.models.templatespatialmodel method)": [[279, "gammapy.modeling.models.TemplateSpatialModel.plot_position_error", false]], "plot_positions() (gammapy.modeling.models.datasetmodels method)": [[227, "gammapy.modeling.models.DatasetModels.plot_positions", false]], "plot_positions() (gammapy.modeling.models.models method)": [[251, "gammapy.modeling.models.Models.plot_positions", false]], "plot_psf_vs_rad() (gammapy.irf.energydependentmultigausspsf method)": [[157, "gammapy.irf.EnergyDependentMultiGaussPSF.plot_psf_vs_rad", false]], "plot_psf_vs_rad() (gammapy.irf.parametricpsf method)": [[167, "gammapy.irf.ParametricPSF.plot_psf_vs_rad", false]], "plot_psf_vs_rad() (gammapy.irf.psf3d method)": [[163, "gammapy.irf.PSF3D.plot_psf_vs_rad", false]], "plot_psf_vs_rad() (gammapy.irf.psfking method)": [[165, "gammapy.irf.PSFKing.plot_psf_vs_rad", false]], "plot_psf_vs_rad() (gammapy.irf.psfmap method)": [[166, "gammapy.irf.PSFMap.plot_psf_vs_rad", false]], "plot_psf_vs_rad() (gammapy.irf.recopsfmap method)": [[169, "gammapy.irf.RecoPSFMap.plot_psf_vs_rad", false]], "plot_rad_max_vs_energy() (gammapy.irf.radmax2d method)": [[168, "gammapy.irf.RadMax2D.plot_rad_max_vs_energy", false]], "plot_region() (gammapy.maps.regiongeom method)": [[204, "gammapy.maps.RegionGeom.plot_region", false]], "plot_region() (gammapy.maps.regionndmap method)": [[205, "gammapy.maps.RegionNDMap.plot_region", false]], "plot_regions() (gammapy.modeling.models.datasetmodels method)": [[227, "gammapy.modeling.models.DatasetModels.plot_regions", false]], "plot_regions() (gammapy.modeling.models.models method)": [[251, "gammapy.modeling.models.Models.plot_regions", false]], "plot_residuals() (gammapy.datasets.fluxpointsdataset method)": [[102, "gammapy.datasets.FluxPointsDataset.plot_residuals", false]], "plot_residuals() (gammapy.datasets.mapdataset method)": [[103, "gammapy.datasets.MapDataset.plot_residuals", false]], "plot_residuals() (gammapy.datasets.mapdatasetonoff method)": [[106, "gammapy.datasets.MapDatasetOnOff.plot_residuals", false]], "plot_residuals() (gammapy.datasets.spectrumdataset method)": [[110, "gammapy.datasets.SpectrumDataset.plot_residuals", false]], "plot_residuals() (gammapy.datasets.spectrumdatasetonoff method)": [[111, "gammapy.datasets.SpectrumDatasetOnOff.plot_residuals", false]], "plot_residuals_spatial() (gammapy.datasets.mapdataset method)": [[103, "gammapy.datasets.MapDataset.plot_residuals_spatial", false]], "plot_residuals_spatial() (gammapy.datasets.mapdatasetonoff method)": [[106, "gammapy.datasets.MapDatasetOnOff.plot_residuals_spatial", false]], "plot_residuals_spatial() (gammapy.datasets.spectrumdataset method)": [[110, "gammapy.datasets.SpectrumDataset.plot_residuals_spatial", false]], "plot_residuals_spatial() (gammapy.datasets.spectrumdatasetonoff method)": [[111, "gammapy.datasets.SpectrumDatasetOnOff.plot_residuals_spatial", false]], "plot_residuals_spectral() (gammapy.datasets.mapdataset method)": [[103, "gammapy.datasets.MapDataset.plot_residuals_spectral", false]], "plot_residuals_spectral() (gammapy.datasets.mapdatasetonoff method)": [[106, "gammapy.datasets.MapDatasetOnOff.plot_residuals_spectral", false]], "plot_residuals_spectral() (gammapy.datasets.spectrumdataset method)": [[110, "gammapy.datasets.SpectrumDataset.plot_residuals_spectral", false]], "plot_residuals_spectral() (gammapy.datasets.spectrumdatasetonoff method)": [[111, "gammapy.datasets.SpectrumDatasetOnOff.plot_residuals_spectral", false]], "plot_spectrum() (gammapy.datasets.fluxpointsdataset method)": [[102, "gammapy.datasets.FluxPointsDataset.plot_spectrum", false]], "plot_spectrum() (gammapy.irf.background2d method)": [[150, "gammapy.irf.Background2D.plot_spectrum", false]], "plot_spectrum_datasets_off_regions() (in module gammapy.visualization)": [[384, "gammapy.visualization.plot_spectrum_datasets_off_regions", false]], "plot_theta_squared_table() (in module gammapy.visualization)": [[385, "gammapy.visualization.plot_theta_squared_table", false]], "plot_time() (gammapy.data.eventlist method)": [[83, "gammapy.data.EventList.plot_time", false]], "plot_ts_profiles() (gammapy.estimators.fluxpoints method)": [[127, "gammapy.estimators.FluxPoints.plot_ts_profiles", false]], "pointing (gammapy.data.observation attribute)": [[88, "gammapy.data.Observation.pointing", false]], "pointing (gammapy.data.pointingmode attribute)": [[95, "gammapy.data.PointingMode.POINTING", false]], "pointing_galactic (gammapy.data.observationtable attribute)": [[91, "gammapy.data.ObservationTable.pointing_galactic", false]], "pointing_radec (gammapy.data.eventlist attribute)": [[83, "gammapy.data.EventList.pointing_radec", false]], "pointing_radec (gammapy.data.observationtable attribute)": [[91, "gammapy.data.ObservationTable.pointing_radec", false]], "pointinginfo (class in gammapy.data)": [[94, "gammapy.data.PointingInfo", false]], "pointingmode (class in gammapy.data)": [[95, "gammapy.data.PointingMode", false]], "pointspatialmodel (class in gammapy.modeling.models)": [[255, "gammapy.modeling.models.PointSpatialModel", false]], "polar() (in module gammapy.utils.coordinates)": [[319, "gammapy.utils.coordinates.polar", false]], "pool_kwargs_default (in module gammapy.utils.parallel)": [[333, "gammapy.utils.parallel.POOL_KWARGS_DEFAULT", false]], "pop() (gammapy.data.observations method)": [[92, "gammapy.data.Observations.pop", false]], "pop() (gammapy.datasets.datasets method)": [[100, "gammapy.datasets.Datasets.pop", false]], "pop() (gammapy.maps.maps method)": [[203, "gammapy.maps.Maps.pop", false]], "pop() (gammapy.modeling.models.models method)": [[251, "gammapy.modeling.models.Models.pop", false]], "popitem() (gammapy.maps.maps method)": [[203, "gammapy.maps.Maps.popitem", false]], "position (gammapy.catalog.sourcecatalogobject attribute)": [[69, "gammapy.catalog.SourceCatalogObject.position", false]], "position (gammapy.catalog.sourcecatalogobject1lhaaso attribute)": [[70, "gammapy.catalog.SourceCatalogObject1LHAASO.position", false]], "position (gammapy.catalog.sourcecatalogobject2fhl attribute)": [[71, "gammapy.catalog.SourceCatalogObject2FHL.position", false]], "position (gammapy.catalog.sourcecatalogobject2hwc attribute)": [[72, "gammapy.catalog.SourceCatalogObject2HWC.position", false]], "position (gammapy.catalog.sourcecatalogobject2pc attribute)": [[73, "gammapy.catalog.SourceCatalogObject2PC.position", false]], "position (gammapy.catalog.sourcecatalogobject3fgl attribute)": [[74, "gammapy.catalog.SourceCatalogObject3FGL.position", false]], "position (gammapy.catalog.sourcecatalogobject3fhl attribute)": [[75, "gammapy.catalog.SourceCatalogObject3FHL.position", false]], "position (gammapy.catalog.sourcecatalogobject3hwc attribute)": [[76, "gammapy.catalog.SourceCatalogObject3HWC.position", false]], "position (gammapy.catalog.sourcecatalogobject3pc attribute)": [[77, "gammapy.catalog.SourceCatalogObject3PC.position", false]], "position (gammapy.catalog.sourcecatalogobject4fgl attribute)": [[78, "gammapy.catalog.SourceCatalogObject4FGL.position", false]], "position (gammapy.catalog.sourcecatalogobjectgammacat attribute)": [[79, "gammapy.catalog.SourceCatalogObjectGammaCat.position", false]], "position (gammapy.catalog.sourcecatalogobjecthgps attribute)": [[80, "gammapy.catalog.SourceCatalogObjectHGPS.position", false]], "position (gammapy.catalog.sourcecatalogobjecthgpscomponent attribute)": [[81, "gammapy.catalog.SourceCatalogObjectHGPSComponent.position", false]], "position (gammapy.modeling.models.constantfluxspatialmodel attribute)": [[223, "gammapy.modeling.models.ConstantFluxSpatialModel.position", false]], "position (gammapy.modeling.models.constantspatialmodel attribute)": [[224, "gammapy.modeling.models.ConstantSpatialModel.position", false]], "position (gammapy.modeling.models.diskspatialmodel attribute)": [[228, "gammapy.modeling.models.DiskSpatialModel.position", false]], "position (gammapy.modeling.models.gaussianspatialmodel attribute)": [[237, "gammapy.modeling.models.GaussianSpatialModel.position", false]], "position (gammapy.modeling.models.generalizedgaussianspatialmodel attribute)": [[240, "gammapy.modeling.models.GeneralizedGaussianSpatialModel.position", false]], "position (gammapy.modeling.models.piecewisenormspatialmodel attribute)": [[253, "gammapy.modeling.models.PiecewiseNormSpatialModel.position", false]], "position (gammapy.modeling.models.pointspatialmodel attribute)": [[255, "gammapy.modeling.models.PointSpatialModel.position", false]], "position (gammapy.modeling.models.shell2spatialmodel attribute)": [[264, "gammapy.modeling.models.Shell2SpatialModel.position", false]], "position (gammapy.modeling.models.shellspatialmodel attribute)": [[265, "gammapy.modeling.models.ShellSpatialModel.position", false]], "position (gammapy.modeling.models.skymodel attribute)": [[267, "gammapy.modeling.models.SkyModel.position", false]], "position (gammapy.modeling.models.spatialmodel attribute)": [[269, "gammapy.modeling.models.SpatialModel.position", false]], "position (gammapy.modeling.models.templatendspatialmodel attribute)": [[275, "gammapy.modeling.models.TemplateNDSpatialModel.position", false]], "position (gammapy.modeling.models.templatenpredmodel attribute)": [[277, "gammapy.modeling.models.TemplateNPredModel.position", false]], "position (gammapy.modeling.models.templatespatialmodel attribute)": [[279, "gammapy.modeling.models.TemplateSpatialModel.position", false]], "position_error (gammapy.modeling.models.constantfluxspatialmodel attribute)": [[223, "gammapy.modeling.models.ConstantFluxSpatialModel.position_error", false]], "position_error (gammapy.modeling.models.constantspatialmodel attribute)": [[224, "gammapy.modeling.models.ConstantSpatialModel.position_error", false]], "position_error (gammapy.modeling.models.diskspatialmodel attribute)": [[228, "gammapy.modeling.models.DiskSpatialModel.position_error", false]], "position_error (gammapy.modeling.models.gaussianspatialmodel attribute)": [[237, "gammapy.modeling.models.GaussianSpatialModel.position_error", false]], "position_error (gammapy.modeling.models.generalizedgaussianspatialmodel attribute)": [[240, "gammapy.modeling.models.GeneralizedGaussianSpatialModel.position_error", false]], "position_error (gammapy.modeling.models.piecewisenormspatialmodel attribute)": [[253, "gammapy.modeling.models.PiecewiseNormSpatialModel.position_error", false]], "position_error (gammapy.modeling.models.pointspatialmodel attribute)": [[255, "gammapy.modeling.models.PointSpatialModel.position_error", false]], "position_error (gammapy.modeling.models.shell2spatialmodel attribute)": [[264, "gammapy.modeling.models.Shell2SpatialModel.position_error", false]], "position_error (gammapy.modeling.models.shellspatialmodel attribute)": [[265, "gammapy.modeling.models.ShellSpatialModel.position_error", false]], "position_error (gammapy.modeling.models.spatialmodel attribute)": [[269, "gammapy.modeling.models.SpatialModel.position_error", false]], "position_error (gammapy.modeling.models.templatendspatialmodel attribute)": [[275, "gammapy.modeling.models.TemplateNDSpatialModel.position_error", false]], "position_error (gammapy.modeling.models.templatespatialmodel attribute)": [[279, "gammapy.modeling.models.TemplateSpatialModel.position_error", false]], "position_lonlat (gammapy.modeling.models.constantfluxspatialmodel attribute)": [[223, "gammapy.modeling.models.ConstantFluxSpatialModel.position_lonlat", false]], "position_lonlat (gammapy.modeling.models.constantspatialmodel attribute)": [[224, "gammapy.modeling.models.ConstantSpatialModel.position_lonlat", false]], "position_lonlat (gammapy.modeling.models.diskspatialmodel attribute)": [[228, "gammapy.modeling.models.DiskSpatialModel.position_lonlat", false]], "position_lonlat (gammapy.modeling.models.gaussianspatialmodel attribute)": [[237, "gammapy.modeling.models.GaussianSpatialModel.position_lonlat", false]], "position_lonlat (gammapy.modeling.models.generalizedgaussianspatialmodel attribute)": [[240, "gammapy.modeling.models.GeneralizedGaussianSpatialModel.position_lonlat", false]], "position_lonlat (gammapy.modeling.models.piecewisenormspatialmodel attribute)": [[253, "gammapy.modeling.models.PiecewiseNormSpatialModel.position_lonlat", false]], "position_lonlat (gammapy.modeling.models.pointspatialmodel attribute)": [[255, "gammapy.modeling.models.PointSpatialModel.position_lonlat", false]], "position_lonlat (gammapy.modeling.models.shell2spatialmodel attribute)": [[264, "gammapy.modeling.models.Shell2SpatialModel.position_lonlat", false]], "position_lonlat (gammapy.modeling.models.shellspatialmodel attribute)": [[265, "gammapy.modeling.models.ShellSpatialModel.position_lonlat", false]], "position_lonlat (gammapy.modeling.models.skymodel attribute)": [[267, "gammapy.modeling.models.SkyModel.position_lonlat", false]], "position_lonlat (gammapy.modeling.models.spatialmodel attribute)": [[269, "gammapy.modeling.models.SpatialModel.position_lonlat", false]], "position_lonlat (gammapy.modeling.models.templatendspatialmodel attribute)": [[275, "gammapy.modeling.models.TemplateNDSpatialModel.position_lonlat", false]], "position_lonlat (gammapy.modeling.models.templatespatialmodel attribute)": [[279, "gammapy.modeling.models.TemplateSpatialModel.position_lonlat", false]], "positions (gammapy.catalog.sourcecatalog attribute)": [[56, "gammapy.catalog.SourceCatalog.positions", false]], "positions (gammapy.catalog.sourcecatalog1lhaaso attribute)": [[57, "gammapy.catalog.SourceCatalog1LHAASO.positions", false]], "positions (gammapy.catalog.sourcecatalog2fhl attribute)": [[58, "gammapy.catalog.SourceCatalog2FHL.positions", false]], "positions (gammapy.catalog.sourcecatalog2hwc attribute)": [[59, "gammapy.catalog.SourceCatalog2HWC.positions", false]], "positions (gammapy.catalog.sourcecatalog2pc attribute)": [[60, "gammapy.catalog.SourceCatalog2PC.positions", false]], "positions (gammapy.catalog.sourcecatalog3fgl attribute)": [[61, "gammapy.catalog.SourceCatalog3FGL.positions", false]], "positions (gammapy.catalog.sourcecatalog3fhl attribute)": [[62, "gammapy.catalog.SourceCatalog3FHL.positions", false]], "positions (gammapy.catalog.sourcecatalog3hwc attribute)": [[63, "gammapy.catalog.SourceCatalog3HWC.positions", false]], "positions (gammapy.catalog.sourcecatalog3pc attribute)": [[64, "gammapy.catalog.SourceCatalog3PC.positions", false]], "positions (gammapy.catalog.sourcecatalog4fgl attribute)": [[65, "gammapy.catalog.SourceCatalog4FGL.positions", false]], "positions (gammapy.catalog.sourcecataloggammacat attribute)": [[66, "gammapy.catalog.SourceCatalogGammaCat.positions", false]], "positions (gammapy.catalog.sourcecataloghgps attribute)": [[67, "gammapy.catalog.SourceCatalogHGPS.positions", false]], "positions (gammapy.modeling.models.datasetmodels attribute)": [[227, "gammapy.modeling.models.DatasetModels.positions", false]], "positions (gammapy.modeling.models.models attribute)": [[251, "gammapy.modeling.models.Models.positions", false]], "powerlaw2spectralmodel (class in gammapy.modeling.models)": [[256, "gammapy.modeling.models.PowerLaw2SpectralModel", false]], "powerlawnormspectralmodel (class in gammapy.modeling.models)": [[257, "gammapy.modeling.models.PowerLawNormSpectralModel", false]], "powerlawspectralmodel (class in gammapy.modeling.models)": [[258, "gammapy.modeling.models.PowerLawSpectralModel", false]], "powerlawtemporalmodel (class in gammapy.modeling.models)": [[259, "gammapy.modeling.models.PowerLawTemporalModel", false]], "pprint() (gammapy.data.hduindextable method)": [[87, "gammapy.data.HDUIndexTable.pprint", false]], "pprint() (gammapy.data.observationtable method)": [[91, "gammapy.data.ObservationTable.pprint", false]], "pprint_all() (gammapy.data.hduindextable method)": [[87, "gammapy.data.HDUIndexTable.pprint_all", false]], "pprint_all() (gammapy.data.observationtable method)": [[91, "gammapy.data.ObservationTable.pprint_all", false]], "pprint_exclude_names (gammapy.data.hduindextable attribute)": [[87, "gammapy.data.HDUIndexTable.pprint_exclude_names", false]], "pprint_exclude_names (gammapy.data.observationtable attribute)": [[91, "gammapy.data.ObservationTable.pprint_exclude_names", false]], "pprint_include_names (gammapy.data.hduindextable attribute)": [[87, "gammapy.data.HDUIndexTable.pprint_include_names", false]], "pprint_include_names (gammapy.data.observationtable attribute)": [[91, "gammapy.data.ObservationTable.pprint_include_names", false]], "prepare_inputs() (gammapy.astro.population.casebattacharya1998 method)": [[28, "gammapy.astro.population.CaseBattacharya1998.prepare_inputs", false]], "prepare_inputs() (gammapy.astro.population.exponential method)": [[29, "gammapy.astro.population.Exponential.prepare_inputs", false]], "prepare_inputs() (gammapy.astro.population.faucherkaspi2006 method)": [[30, "gammapy.astro.population.FaucherKaspi2006.prepare_inputs", false]], "prepare_inputs() (gammapy.astro.population.faucherkaspi2006velocitybimodal method)": [[31, "gammapy.astro.population.FaucherKaspi2006VelocityBimodal.prepare_inputs", false]], "prepare_inputs() (gammapy.astro.population.faucherkaspi2006velocitymaxwellian method)": [[32, "gammapy.astro.population.FaucherKaspi2006VelocityMaxwellian.prepare_inputs", false]], "prepare_inputs() (gammapy.astro.population.lorimer2006 method)": [[35, "gammapy.astro.population.Lorimer2006.prepare_inputs", false]], "prepare_inputs() (gammapy.astro.population.paczynski1990 method)": [[36, "gammapy.astro.population.Paczynski1990.prepare_inputs", false]], "prepare_inputs() (gammapy.astro.population.paczynski1990velocity method)": [[37, "gammapy.astro.population.Paczynski1990Velocity.prepare_inputs", false]], "prepare_inputs() (gammapy.astro.population.yusifovkucuk2004 method)": [[39, "gammapy.astro.population.YusifovKucuk2004.prepare_inputs", false]], "prepare_inputs() (gammapy.astro.population.yusifovkucuk2004b method)": [[40, "gammapy.astro.population.YusifovKucuk2004B.prepare_inputs", false]], "prepare_outputs() (gammapy.astro.population.casebattacharya1998 method)": [[28, "gammapy.astro.population.CaseBattacharya1998.prepare_outputs", false]], "prepare_outputs() (gammapy.astro.population.exponential method)": [[29, "gammapy.astro.population.Exponential.prepare_outputs", false]], "prepare_outputs() (gammapy.astro.population.faucherkaspi2006 method)": [[30, "gammapy.astro.population.FaucherKaspi2006.prepare_outputs", false]], "prepare_outputs() (gammapy.astro.population.faucherkaspi2006velocitybimodal method)": [[31, "gammapy.astro.population.FaucherKaspi2006VelocityBimodal.prepare_outputs", false]], "prepare_outputs() (gammapy.astro.population.faucherkaspi2006velocitymaxwellian method)": [[32, "gammapy.astro.population.FaucherKaspi2006VelocityMaxwellian.prepare_outputs", false]], "prepare_outputs() (gammapy.astro.population.lorimer2006 method)": [[35, "gammapy.astro.population.Lorimer2006.prepare_outputs", false]], "prepare_outputs() (gammapy.astro.population.paczynski1990 method)": [[36, "gammapy.astro.population.Paczynski1990.prepare_outputs", false]], "prepare_outputs() (gammapy.astro.population.paczynski1990velocity method)": [[37, "gammapy.astro.population.Paczynski1990Velocity.prepare_outputs", false]], "prepare_outputs() (gammapy.astro.population.yusifovkucuk2004 method)": [[39, "gammapy.astro.population.YusifovKucuk2004.prepare_outputs", false]], "prepare_outputs() (gammapy.astro.population.yusifovkucuk2004b method)": [[40, "gammapy.astro.population.YusifovKucuk2004B.prepare_outputs", false]], "primary_axis (gammapy.maps.mapaxes attribute)": [[200, "gammapy.maps.MapAxes.primary_axis", false]], "primaryflux (class in gammapy.astro.darkmatter)": [[26, "gammapy.astro.darkmatter.PrimaryFlux", false]], "prior (class in gammapy.modeling.models)": [[260, "gammapy.modeling.models.Prior", false]], "prior (gammapy.modeling.parameter attribute)": [[217, "gammapy.modeling.Parameter.prior", false]], "prior (gammapy.modeling.parameters attribute)": [[218, "gammapy.modeling.Parameters.prior", false]], "prior (gammapy.modeling.priorparameter attribute)": [[219, "gammapy.modeling.PriorParameter.prior", false]], "prior (gammapy.modeling.priorparameters attribute)": [[220, "gammapy.modeling.PriorParameters.prior", false]], "prior_stat_sum() (gammapy.modeling.parameter method)": [[217, "gammapy.modeling.Parameter.prior_stat_sum", false]], "prior_stat_sum() (gammapy.modeling.parameters method)": [[218, "gammapy.modeling.Parameters.prior_stat_sum", false]], "prior_stat_sum() (gammapy.modeling.priorparameter method)": [[219, "gammapy.modeling.PriorParameter.prior_stat_sum", false]], "prior_stat_sum() (gammapy.modeling.priorparameters method)": [[220, "gammapy.modeling.PriorParameters.prior_stat_sum", false]], "priorparameter (class in gammapy.modeling)": [[219, "gammapy.modeling.PriorParameter", false]], "priorparameters (class in gammapy.modeling)": [[220, "gammapy.modeling.PriorParameters", false]], "profile (gammapy.estimators.imageprofile attribute)": [[130, "gammapy.estimators.ImageProfile.profile", false]], "profile_err (gammapy.estimators.imageprofile attribute)": [[130, "gammapy.estimators.ImageProfile.profile_err", false]], "projected_distance_axis (gammapy.estimators.fluxprofileestimator attribute)": [[129, "gammapy.estimators.FluxProfileEstimator.projected_distance_axis", false]], "projection (gammapy.maps.hpxgeom attribute)": [[195, "gammapy.maps.HpxGeom.projection", false]], "projection (gammapy.maps.regiongeom attribute)": [[204, "gammapy.maps.RegionGeom.projection", false]], "projection (gammapy.maps.wcsgeom attribute)": [[207, "gammapy.maps.WcsGeom.projection", false]], "psf": [[597, "term-PSF", true]], "psf (gammapy.data.observation attribute)": [[88, "gammapy.data.Observation.psf", false]], "psf (gammapy.datasets.mapdataset attribute)": [[103, "gammapy.datasets.MapDataset.psf", false]], "psf (gammapy.datasets.mapdatasetonoff attribute)": [[106, "gammapy.datasets.MapDatasetOnOff.psf", false]], "psf (gammapy.datasets.spectrumdataset attribute)": [[110, "gammapy.datasets.SpectrumDataset.psf", false]], "psf (gammapy.datasets.spectrumdatasetonoff attribute)": [[111, "gammapy.datasets.SpectrumDatasetOnOff.psf", false]], "psf3d (class in gammapy.irf)": [[163, "gammapy.irf.PSF3D", false]], "psf_kernel_map (gammapy.irf.psfkernel attribute)": [[164, "gammapy.irf.PSFKernel.psf_kernel_map", false]], "psf_map (gammapy.irf.psfmap attribute)": [[166, "gammapy.irf.PSFMap.psf_map", false]], "psf_map (gammapy.irf.recopsfmap attribute)": [[169, "gammapy.irf.RecoPSFMap.psf_map", false]], "psfkernel (class in gammapy.irf)": [[164, "gammapy.irf.PSFKernel", false]], "psfking (class in gammapy.irf)": [[165, "gammapy.irf.PSFKing", false]], "psfmap (class in gammapy.irf)": [[166, "gammapy.irf.PSFMap", false]], "pulsar (class in gammapy.astro.source)": [[51, "gammapy.astro.source.Pulsar", false]], "pulse_profile_best_fit (gammapy.catalog.sourcecatalogobject3pc attribute)": [[77, "gammapy.catalog.SourceCatalogObject3PC.pulse_profile_best_fit", false]], "pulse_profile_radio (gammapy.catalog.sourcecatalogobject3pc attribute)": [[77, "gammapy.catalog.SourceCatalogObject3PC.pulse_profile_radio", false]], "pulse_profiles (gammapy.catalog.sourcecatalogobject3pc attribute)": [[77, "gammapy.catalog.SourceCatalogObject3PC.pulse_profiles", false]], "pwn (class in gammapy.astro.source)": [[50, "gammapy.astro.source.PWN", false]], "quantity (gammapy.irf.background2d attribute)": [[150, "gammapy.irf.Background2D.quantity", false]], "quantity (gammapy.irf.background3d attribute)": [[151, "gammapy.irf.Background3D.quantity", false]], "quantity (gammapy.irf.backgroundirf attribute)": [[152, "gammapy.irf.BackgroundIRF.quantity", false]], "quantity (gammapy.irf.edispkernel attribute)": [[153, "gammapy.irf.EDispKernel.quantity", false]], "quantity (gammapy.irf.effectiveareatable2d attribute)": [[156, "gammapy.irf.EffectiveAreaTable2D.quantity", false]], "quantity (gammapy.irf.energydependentmultigausspsf attribute)": [[157, "gammapy.irf.EnergyDependentMultiGaussPSF.quantity", false]], "quantity (gammapy.irf.energydispersion2d attribute)": [[158, "gammapy.irf.EnergyDispersion2D.quantity", false]], "quantity (gammapy.irf.irf attribute)": [[160, "gammapy.irf.IRF.quantity", false]], "quantity (gammapy.irf.parametricpsf attribute)": [[167, "gammapy.irf.ParametricPSF.quantity", false]], "quantity (gammapy.irf.psf3d attribute)": [[163, "gammapy.irf.PSF3D.quantity", false]], "quantity (gammapy.irf.psfking attribute)": [[165, "gammapy.irf.PSFKing.quantity", false]], "quantity (gammapy.irf.radmax2d attribute)": [[168, "gammapy.irf.RadMax2D.quantity", false]], "quantity (gammapy.maps.hpxmap attribute)": [[196, "gammapy.maps.HpxMap.quantity", false]], "quantity (gammapy.maps.hpxndmap attribute)": [[197, "gammapy.maps.HpxNDMap.quantity", false]], "quantity (gammapy.maps.map attribute)": [[199, "gammapy.maps.Map.quantity", false]], "quantity (gammapy.maps.regionndmap attribute)": [[205, "gammapy.maps.RegionNDMap.quantity", false]], "quantity (gammapy.maps.wcsmap attribute)": [[208, "gammapy.maps.WcsMap.quantity", false]], "quantity (gammapy.maps.wcsndmap attribute)": [[209, "gammapy.maps.WcsNDMap.quantity", false]], "quantity (gammapy.modeling.parameter attribute)": [[217, "gammapy.modeling.Parameter.quantity", false]], "quantity (gammapy.modeling.priorparameter attribute)": [[219, "gammapy.modeling.PriorParameter.quantity", false]], "r_0 (gammapy.astro.population.faucherkaspi2006 attribute)": [[30, "gammapy.astro.population.FaucherKaspi2006.r_0", false]], "r_0 (gammapy.astro.population.faucherspiral attribute)": [[33, "gammapy.astro.population.FaucherSpiral.r_0", false]], "r_0 (gammapy.astro.population.valleespiral attribute)": [[38, "gammapy.astro.population.ValleeSpiral.r_0", false]], "r_0 (gammapy.modeling.models.diskspatialmodel attribute)": [[228, "gammapy.modeling.models.DiskSpatialModel.r_0", false]], "r_0 (gammapy.modeling.models.generalizedgaussianspatialmodel attribute)": [[240, "gammapy.modeling.models.GeneralizedGaussianSpatialModel.r_0", false]], "r_0 (gammapy.modeling.models.shell2spatialmodel attribute)": [[264, "gammapy.modeling.models.Shell2SpatialModel.r_0", false]], "r_1 (gammapy.astro.population.yusifovkucuk2004 attribute)": [[39, "gammapy.astro.population.YusifovKucuk2004.r_1", false]], "r_exp (gammapy.astro.population.paczynski1990 attribute)": [[36, "gammapy.astro.population.Paczynski1990.r_exp", false]], "r_in (gammapy.modeling.models.shell2spatialmodel attribute)": [[264, "gammapy.modeling.models.Shell2SpatialModel.r_in", false]], "r_sun (gammapy.astro.population.valleespiral attribute)": [[38, "gammapy.astro.population.ValleeSpiral.r_sun", false]], "rad_max (gammapy.data.observation attribute)": [[88, "gammapy.data.Observation.rad_max", false]], "radec (gammapy.data.eventlist attribute)": [[83, "gammapy.data.EventList.radec", false]], "radec (gammapy.data.pointinginfo attribute)": [[94, "gammapy.data.PointingInfo.radec", false]], "radec (gammapy.irf.fovalignment attribute)": [[159, "gammapy.irf.FoVAlignment.RADEC", false]], "radial_distributions (in module gammapy.astro.population)": [[48, "gammapy.astro.population.radial_distributions", false]], "radius (gammapy.modeling.models.shellspatialmodel attribute)": [[265, "gammapy.modeling.models.ShellSpatialModel.radius", false]], "radius() (gammapy.astro.population.faucherspiral method)": [[33, "gammapy.astro.population.FaucherSpiral.radius", false]], "radius() (gammapy.astro.population.logspiral method)": [[34, "gammapy.astro.population.LogSpiral.radius", false]], "radius() (gammapy.astro.population.valleespiral method)": [[38, "gammapy.astro.population.ValleeSpiral.radius", false]], "radius() (gammapy.astro.source.pwn method)": [[50, "gammapy.astro.source.PWN.radius", false]], "radius() (gammapy.astro.source.snr method)": [[52, "gammapy.astro.source.SNR.radius", false]], "radius() (gammapy.astro.source.snrtruelovemckee method)": [[53, "gammapy.astro.source.SNRTrueloveMcKee.radius", false]], "radius_inner() (gammapy.astro.source.snr method)": [[52, "gammapy.astro.source.SNR.radius_inner", false]], "radius_inner() (gammapy.astro.source.snrtruelovemckee method)": [[53, "gammapy.astro.source.SNRTrueloveMcKee.radius_inner", false]], "radius_reverse_shock() (gammapy.astro.source.snrtruelovemckee method)": [[53, "gammapy.astro.source.SNRTrueloveMcKee.radius_reverse_shock", false]], "radmax2d (class in gammapy.irf)": [[168, "gammapy.irf.RadMax2D", false]], "read() (gammapy.analysis.analysisconfig class method)": [[16, "gammapy.analysis.AnalysisConfig.read", false]], "read() (gammapy.data.eventlist class method)": [[83, "gammapy.data.EventList.read", false]], "read() (gammapy.data.fixedpointinginfo class method)": [[85, "gammapy.data.FixedPointingInfo.read", false]], "read() (gammapy.data.gti class method)": [[86, "gammapy.data.GTI.read", false]], "read() (gammapy.data.hduindextable class method)": [[87, "gammapy.data.HDUIndexTable.read", false]], "read() (gammapy.data.observation class method)": [[88, "gammapy.data.Observation.read", false]], "read() (gammapy.data.observationtable class method)": [[91, "gammapy.data.ObservationTable.read", false]], "read() (gammapy.data.pointinginfo class method)": [[94, "gammapy.data.PointingInfo.read", false]], "read() (gammapy.datasets.datasets class method)": [[100, "gammapy.datasets.Datasets.read", false]], "read() (gammapy.datasets.fermipydatasetsreader method)": [[101, "gammapy.datasets.FermipyDatasetsReader.read", false]], "read() (gammapy.datasets.fluxpointsdataset class method)": [[102, "gammapy.datasets.FluxPointsDataset.read", false]], "read() (gammapy.datasets.mapdataset class method)": [[103, "gammapy.datasets.MapDataset.read", false]], "read() (gammapy.datasets.mapdatasetonoff class method)": [[106, "gammapy.datasets.MapDatasetOnOff.read", false]], "read() (gammapy.datasets.ogipdatasetreader method)": [[107, "gammapy.datasets.OGIPDatasetReader.read", false]], "read() (gammapy.datasets.spectrumdataset class method)": [[110, "gammapy.datasets.SpectrumDataset.read", false]], "read() (gammapy.datasets.spectrumdatasetonoff class method)": [[111, "gammapy.datasets.SpectrumDatasetOnOff.read", false]], "read() (gammapy.estimators.fluxmaps class method)": [[125, "gammapy.estimators.FluxMaps.read", false]], "read() (gammapy.estimators.fluxpoints class method)": [[127, "gammapy.estimators.FluxPoints.read", false]], "read() (gammapy.irf.background2d class method)": [[150, "gammapy.irf.Background2D.read", false]], "read() (gammapy.irf.background3d class method)": [[151, "gammapy.irf.Background3D.read", false]], "read() (gammapy.irf.backgroundirf class method)": [[152, "gammapy.irf.BackgroundIRF.read", false]], "read() (gammapy.irf.edispkernel class method)": [[153, "gammapy.irf.EDispKernel.read", false]], "read() (gammapy.irf.edispkernelmap class method)": [[154, "gammapy.irf.EDispKernelMap.read", false]], "read() (gammapy.irf.edispmap class method)": [[155, "gammapy.irf.EDispMap.read", false]], "read() (gammapy.irf.effectiveareatable2d class method)": [[156, "gammapy.irf.EffectiveAreaTable2D.read", false]], "read() (gammapy.irf.energydependentmultigausspsf class method)": [[157, "gammapy.irf.EnergyDependentMultiGaussPSF.read", false]], "read() (gammapy.irf.energydispersion2d class method)": [[158, "gammapy.irf.EnergyDispersion2D.read", false]], "read() (gammapy.irf.irf class method)": [[160, "gammapy.irf.IRF.read", false]], "read() (gammapy.irf.irfmap class method)": [[161, "gammapy.irf.IRFMap.read", false]], "read() (gammapy.irf.parametricpsf class method)": [[167, "gammapy.irf.ParametricPSF.read", false]], "read() (gammapy.irf.psf3d class method)": [[163, "gammapy.irf.PSF3D.read", false]], "read() (gammapy.irf.psfkernel class method)": [[164, "gammapy.irf.PSFKernel.read", false]], "read() (gammapy.irf.psfking class method)": [[165, "gammapy.irf.PSFKing.read", false]], "read() (gammapy.irf.psfmap class method)": [[166, "gammapy.irf.PSFMap.read", false]], "read() (gammapy.irf.radmax2d class method)": [[168, "gammapy.irf.RadMax2D.read", false]], "read() (gammapy.irf.recopsfmap class method)": [[169, "gammapy.irf.RecoPSFMap.read", false]], "read() (gammapy.maps.hpxmap static method)": [[196, "gammapy.maps.HpxMap.read", false]], "read() (gammapy.maps.hpxndmap static method)": [[197, "gammapy.maps.HpxNDMap.read", false]], "read() (gammapy.maps.map static method)": [[199, "gammapy.maps.Map.read", false]], "read() (gammapy.maps.maps class method)": [[203, "gammapy.maps.Maps.read", false]], "read() (gammapy.maps.regionndmap class method)": [[205, "gammapy.maps.RegionNDMap.read", false]], "read() (gammapy.maps.wcsmap static method)": [[208, "gammapy.maps.WcsMap.read", false]], "read() (gammapy.maps.wcsndmap static method)": [[209, "gammapy.maps.WcsNDMap.read", false]], "read() (gammapy.modeling.models.datasetmodels class method)": [[227, "gammapy.modeling.models.DatasetModels.read", false]], "read() (gammapy.modeling.models.eblabsorptionnormspectralmodel class method)": [[229, "gammapy.modeling.models.EBLAbsorptionNormSpectralModel.read", false]], "read() (gammapy.modeling.models.lightcurvetemplatetemporalmodel class method)": [[242, "gammapy.modeling.models.LightCurveTemplateTemporalModel.read", false]], "read() (gammapy.modeling.models.models class method)": [[251, "gammapy.modeling.models.Models.read", false]], "read() (gammapy.modeling.models.templatephasecurvetemporalmodel class method)": [[278, "gammapy.modeling.models.TemplatePhaseCurveTemporalModel.read", false]], "read() (gammapy.modeling.models.templatespatialmodel class method)": [[279, "gammapy.modeling.models.TemplateSpatialModel.read", false]], "read_arf() (gammapy.datasets.ogipdatasetreader static method)": [[107, "gammapy.datasets.OGIPDatasetReader.read_arf", false]], "read_bkg() (gammapy.datasets.ogipdatasetreader static method)": [[107, "gammapy.datasets.OGIPDatasetReader.read_bkg", false]], "read_builtin() (gammapy.modeling.models.eblabsorptionnormspectralmodel class method)": [[229, "gammapy.modeling.models.EBLAbsorptionNormSpectralModel.read_builtin", false]], "read_covariance() (gammapy.modeling.models.datasetmodels method)": [[227, "gammapy.modeling.models.DatasetModels.read_covariance", false]], "read_covariance() (gammapy.modeling.models.models method)": [[251, "gammapy.modeling.models.Models.read_covariance", false]], "read_datasets() (gammapy.analysis.analysis method)": [[15, "gammapy.analysis.Analysis.read_datasets", false]], "read_hermes_cube() (in module gammapy.modeling.models)": [[287, "gammapy.modeling.models.read_hermes_cube", false]], "read_hermes_cube() (in module gammapy.modeling.models.utils)": [[289, "gammapy.modeling.models.utils.read_hermes_cube", false]], "read_models() (gammapy.analysis.analysis method)": [[15, "gammapy.analysis.Analysis.read_models", false]], "read_pha() (gammapy.datasets.ogipdatasetreader static method)": [[107, "gammapy.datasets.OGIPDatasetReader.read_pha", false]], "read_rmf() (gammapy.datasets.ogipdatasetreader static method)": [[107, "gammapy.datasets.OGIPDatasetReader.read_rmf", false]], "read_xspec_model() (gammapy.modeling.models.templatespectralmodel class method)": [[280, "gammapy.modeling.models.TemplateSpectralModel.read_xspec_model", false]], "read_yaml() (in module gammapy.utils.scripts)": [[353, "gammapy.utils.scripts.read_yaml", false]], "reassign() (gammapy.astro.darkmatter.darkmatterannihilationspectralmodel method)": [[19, "gammapy.astro.darkmatter.DarkMatterAnnihilationSpectralModel.reassign", false]], "reassign() (gammapy.astro.darkmatter.darkmatterdecayspectralmodel method)": [[20, "gammapy.astro.darkmatter.DarkMatterDecaySpectralModel.reassign", false]], "reassign() (gammapy.astro.darkmatter.primaryflux method)": [[26, "gammapy.astro.darkmatter.PrimaryFlux.reassign", false]], "reassign() (gammapy.modeling.models.brokenpowerlawspectralmodel method)": [[221, "gammapy.modeling.models.BrokenPowerLawSpectralModel.reassign", false]], "reassign() (gammapy.modeling.models.compoundspectralmodel method)": [[222, "gammapy.modeling.models.CompoundSpectralModel.reassign", false]], "reassign() (gammapy.modeling.models.constantfluxspatialmodel method)": [[223, "gammapy.modeling.models.ConstantFluxSpatialModel.reassign", false]], "reassign() (gammapy.modeling.models.constantspatialmodel method)": [[224, "gammapy.modeling.models.ConstantSpatialModel.reassign", false]], "reassign() (gammapy.modeling.models.constantspectralmodel method)": [[225, "gammapy.modeling.models.ConstantSpectralModel.reassign", false]], "reassign() (gammapy.modeling.models.constanttemporalmodel method)": [[226, "gammapy.modeling.models.ConstantTemporalModel.reassign", false]], "reassign() (gammapy.modeling.models.datasetmodels method)": [[227, "gammapy.modeling.models.DatasetModels.reassign", false]], "reassign() (gammapy.modeling.models.diskspatialmodel method)": [[228, "gammapy.modeling.models.DiskSpatialModel.reassign", false]], "reassign() (gammapy.modeling.models.eblabsorptionnormspectralmodel method)": [[229, "gammapy.modeling.models.EBLAbsorptionNormSpectralModel.reassign", false]], "reassign() (gammapy.modeling.models.expcutoffpowerlaw3fglspectralmodel method)": [[231, "gammapy.modeling.models.ExpCutoffPowerLaw3FGLSpectralModel.reassign", false]], "reassign() (gammapy.modeling.models.expcutoffpowerlawnormspectralmodel method)": [[232, "gammapy.modeling.models.ExpCutoffPowerLawNormSpectralModel.reassign", false]], "reassign() (gammapy.modeling.models.expcutoffpowerlawspectralmodel method)": [[233, "gammapy.modeling.models.ExpCutoffPowerLawSpectralModel.reassign", false]], "reassign() (gammapy.modeling.models.expdecaytemporalmodel method)": [[234, "gammapy.modeling.models.ExpDecayTemporalModel.reassign", false]], "reassign() (gammapy.modeling.models.fovbackgroundmodel method)": [[235, "gammapy.modeling.models.FoVBackgroundModel.reassign", false]], "reassign() (gammapy.modeling.models.gaussianprior method)": [[236, "gammapy.modeling.models.GaussianPrior.reassign", false]], "reassign() (gammapy.modeling.models.gaussianspatialmodel method)": [[237, "gammapy.modeling.models.GaussianSpatialModel.reassign", false]], "reassign() (gammapy.modeling.models.gaussianspectralmodel method)": [[238, "gammapy.modeling.models.GaussianSpectralModel.reassign", false]], "reassign() (gammapy.modeling.models.gaussiantemporalmodel method)": [[239, "gammapy.modeling.models.GaussianTemporalModel.reassign", false]], "reassign() (gammapy.modeling.models.generalizedgaussianspatialmodel method)": [[240, "gammapy.modeling.models.GeneralizedGaussianSpatialModel.reassign", false]], "reassign() (gammapy.modeling.models.generalizedgaussiantemporalmodel method)": [[241, "gammapy.modeling.models.GeneralizedGaussianTemporalModel.reassign", false]], "reassign() (gammapy.modeling.models.lightcurvetemplatetemporalmodel method)": [[242, "gammapy.modeling.models.LightCurveTemplateTemporalModel.reassign", false]], "reassign() (gammapy.modeling.models.lineartemporalmodel method)": [[243, "gammapy.modeling.models.LinearTemporalModel.reassign", false]], "reassign() (gammapy.modeling.models.logparabolanormspectralmodel method)": [[244, "gammapy.modeling.models.LogParabolaNormSpectralModel.reassign", false]], "reassign() (gammapy.modeling.models.logparabolaspectralmodel method)": [[245, "gammapy.modeling.models.LogParabolaSpectralModel.reassign", false]], "reassign() (gammapy.modeling.models.loguniformprior method)": [[246, "gammapy.modeling.models.LogUniformPrior.reassign", false]], "reassign() (gammapy.modeling.models.meyercrabspectralmodel method)": [[248, "gammapy.modeling.models.MeyerCrabSpectralModel.reassign", false]], "reassign() (gammapy.modeling.models.modelbase method)": [[250, "gammapy.modeling.models.ModelBase.reassign", false]], "reassign() (gammapy.modeling.models.models method)": [[251, "gammapy.modeling.models.Models.reassign", false]], "reassign() (gammapy.modeling.models.naimaspectralmodel method)": [[252, "gammapy.modeling.models.NaimaSpectralModel.reassign", false]], "reassign() (gammapy.modeling.models.piecewisenormspatialmodel method)": [[253, "gammapy.modeling.models.PiecewiseNormSpatialModel.reassign", false]], "reassign() (gammapy.modeling.models.piecewisenormspectralmodel method)": [[254, "gammapy.modeling.models.PiecewiseNormSpectralModel.reassign", false]], "reassign() (gammapy.modeling.models.pointspatialmodel method)": [[255, "gammapy.modeling.models.PointSpatialModel.reassign", false]], "reassign() (gammapy.modeling.models.powerlaw2spectralmodel method)": [[256, "gammapy.modeling.models.PowerLaw2SpectralModel.reassign", false]], "reassign() (gammapy.modeling.models.powerlawnormspectralmodel method)": [[257, "gammapy.modeling.models.PowerLawNormSpectralModel.reassign", false]], "reassign() (gammapy.modeling.models.powerlawspectralmodel method)": [[258, "gammapy.modeling.models.PowerLawSpectralModel.reassign", false]], "reassign() (gammapy.modeling.models.powerlawtemporalmodel method)": [[259, "gammapy.modeling.models.PowerLawTemporalModel.reassign", false]], "reassign() (gammapy.modeling.models.prior method)": [[260, "gammapy.modeling.models.Prior.reassign", false]], "reassign() (gammapy.modeling.models.scalespectralmodel method)": [[263, "gammapy.modeling.models.ScaleSpectralModel.reassign", false]], "reassign() (gammapy.modeling.models.shell2spatialmodel method)": [[264, "gammapy.modeling.models.Shell2SpatialModel.reassign", false]], "reassign() (gammapy.modeling.models.shellspatialmodel method)": [[265, "gammapy.modeling.models.ShellSpatialModel.reassign", false]], "reassign() (gammapy.modeling.models.sinetemporalmodel method)": [[266, "gammapy.modeling.models.SineTemporalModel.reassign", false]], "reassign() (gammapy.modeling.models.skymodel method)": [[267, "gammapy.modeling.models.SkyModel.reassign", false]], "reassign() (gammapy.modeling.models.smoothbrokenpowerlawspectralmodel method)": [[268, "gammapy.modeling.models.SmoothBrokenPowerLawSpectralModel.reassign", false]], "reassign() (gammapy.modeling.models.spatialmodel method)": [[269, "gammapy.modeling.models.SpatialModel.reassign", false]], "reassign() (gammapy.modeling.models.spectralmodel method)": [[270, "gammapy.modeling.models.SpectralModel.reassign", false]], "reassign() (gammapy.modeling.models.superexpcutoffpowerlaw3fglspectralmodel method)": [[271, "gammapy.modeling.models.SuperExpCutoffPowerLaw3FGLSpectralModel.reassign", false]], "reassign() (gammapy.modeling.models.superexpcutoffpowerlaw4fgldr3spectralmodel method)": [[272, "gammapy.modeling.models.SuperExpCutoffPowerLaw4FGLDR3SpectralModel.reassign", false]], "reassign() (gammapy.modeling.models.superexpcutoffpowerlaw4fglspectralmodel method)": [[273, "gammapy.modeling.models.SuperExpCutoffPowerLaw4FGLSpectralModel.reassign", false]], "reassign() (gammapy.modeling.models.templatendspatialmodel method)": [[275, "gammapy.modeling.models.TemplateNDSpatialModel.reassign", false]], "reassign() (gammapy.modeling.models.templatendspectralmodel method)": [[276, "gammapy.modeling.models.TemplateNDSpectralModel.reassign", false]], "reassign() (gammapy.modeling.models.templatenpredmodel method)": [[277, "gammapy.modeling.models.TemplateNPredModel.reassign", false]], "reassign() (gammapy.modeling.models.templatephasecurvetemporalmodel method)": [[278, "gammapy.modeling.models.TemplatePhaseCurveTemporalModel.reassign", false]], "reassign() (gammapy.modeling.models.templatespatialmodel method)": [[279, "gammapy.modeling.models.TemplateSpatialModel.reassign", false]], "reassign() (gammapy.modeling.models.templatespectralmodel method)": [[280, "gammapy.modeling.models.TemplateSpectralModel.reassign", false]], "reassign() (gammapy.modeling.models.temporalmodel method)": [[281, "gammapy.modeling.models.TemporalModel.reassign", false]], "reassign() (gammapy.modeling.models.uniformprior method)": [[282, "gammapy.modeling.models.UniformPrior.reassign", false]], "reco energy": [[597, "term-Reco-Energy", true]], "recompute_ul() (gammapy.estimators.fluxpoints method)": [[127, "gammapy.estimators.FluxPoints.recompute_ul", false]], "recopsfmap (class in gammapy.irf)": [[169, "gammapy.irf.RecoPSFMap", false]], "recursive_merge_dicts() (in module gammapy.utils.scripts)": [[354, "gammapy.utils.scripts.recursive_merge_dicts", false]], "redshift (gammapy.modeling.models.eblabsorptionnormspectralmodel attribute)": [[229, "gammapy.modeling.models.EBLAbsorptionNormSpectralModel.redshift", false]], "reduce() (gammapy.maps.hpxmap method)": [[196, "gammapy.maps.HpxMap.reduce", false]], "reduce() (gammapy.maps.hpxndmap method)": [[197, "gammapy.maps.HpxNDMap.reduce", false]], "reduce() (gammapy.maps.map method)": [[199, "gammapy.maps.Map.reduce", false]], "reduce() (gammapy.maps.regionndmap method)": [[205, "gammapy.maps.RegionNDMap.reduce", false]], "reduce() (gammapy.maps.wcsmap method)": [[208, "gammapy.maps.WcsMap.reduce", false]], "reduce() (gammapy.maps.wcsndmap method)": [[209, "gammapy.maps.WcsNDMap.reduce", false]], "reduce_over_axes() (gammapy.maps.hpxmap method)": [[196, "gammapy.maps.HpxMap.reduce_over_axes", false]], "reduce_over_axes() (gammapy.maps.hpxndmap method)": [[197, "gammapy.maps.HpxNDMap.reduce_over_axes", false]], "reduce_over_axes() (gammapy.maps.map method)": [[199, "gammapy.maps.Map.reduce_over_axes", false]], "reduce_over_axes() (gammapy.maps.regionndmap method)": [[205, "gammapy.maps.RegionNDMap.reduce_over_axes", false]], "reduce_over_axes() (gammapy.maps.wcsmap method)": [[208, "gammapy.maps.WcsMap.reduce_over_axes", false]], "reduce_over_axes() (gammapy.maps.wcsndmap method)": [[209, "gammapy.maps.WcsNDMap.reduce_over_axes", false]], "reference (gammapy.modeling.models.expcutoffpowerlaw3fglspectralmodel attribute)": [[231, "gammapy.modeling.models.ExpCutoffPowerLaw3FGLSpectralModel.reference", false]], "reference (gammapy.modeling.models.expcutoffpowerlawnormspectralmodel attribute)": [[232, "gammapy.modeling.models.ExpCutoffPowerLawNormSpectralModel.reference", false]], "reference (gammapy.modeling.models.expcutoffpowerlawspectralmodel attribute)": [[233, "gammapy.modeling.models.ExpCutoffPowerLawSpectralModel.reference", false]], "reference (gammapy.modeling.models.logparabolanormspectralmodel attribute)": [[244, "gammapy.modeling.models.LogParabolaNormSpectralModel.reference", false]], "reference (gammapy.modeling.models.logparabolaspectralmodel attribute)": [[245, "gammapy.modeling.models.LogParabolaSpectralModel.reference", false]], "reference (gammapy.modeling.models.powerlawnormspectralmodel attribute)": [[257, "gammapy.modeling.models.PowerLawNormSpectralModel.reference", false]], "reference (gammapy.modeling.models.powerlawspectralmodel attribute)": [[258, "gammapy.modeling.models.PowerLawSpectralModel.reference", false]], "reference (gammapy.modeling.models.smoothbrokenpowerlawspectralmodel attribute)": [[268, "gammapy.modeling.models.SmoothBrokenPowerLawSpectralModel.reference", false]], "reference (gammapy.modeling.models.superexpcutoffpowerlaw3fglspectralmodel attribute)": [[271, "gammapy.modeling.models.SuperExpCutoffPowerLaw3FGLSpectralModel.reference", false]], "reference (gammapy.modeling.models.superexpcutoffpowerlaw4fgldr3spectralmodel attribute)": [[272, "gammapy.modeling.models.SuperExpCutoffPowerLaw4FGLDR3SpectralModel.reference", false]], "reference (gammapy.modeling.models.superexpcutoffpowerlaw4fglspectralmodel attribute)": [[273, "gammapy.modeling.models.SuperExpCutoffPowerLaw4FGLSpectralModel.reference", false]], "reference_fluxes() (gammapy.astro.darkmatter.darkmatterannihilationspectralmodel method)": [[19, "gammapy.astro.darkmatter.DarkMatterAnnihilationSpectralModel.reference_fluxes", false]], "reference_fluxes() (gammapy.astro.darkmatter.darkmatterdecayspectralmodel method)": [[20, "gammapy.astro.darkmatter.DarkMatterDecaySpectralModel.reference_fluxes", false]], "reference_fluxes() (gammapy.astro.darkmatter.primaryflux method)": [[26, "gammapy.astro.darkmatter.PrimaryFlux.reference_fluxes", false]], "reference_fluxes() (gammapy.modeling.models.brokenpowerlawspectralmodel method)": [[221, "gammapy.modeling.models.BrokenPowerLawSpectralModel.reference_fluxes", false]], "reference_fluxes() (gammapy.modeling.models.compoundspectralmodel method)": [[222, "gammapy.modeling.models.CompoundSpectralModel.reference_fluxes", false]], "reference_fluxes() (gammapy.modeling.models.constantspectralmodel method)": [[225, "gammapy.modeling.models.ConstantSpectralModel.reference_fluxes", false]], "reference_fluxes() (gammapy.modeling.models.eblabsorptionnormspectralmodel method)": [[229, "gammapy.modeling.models.EBLAbsorptionNormSpectralModel.reference_fluxes", false]], "reference_fluxes() (gammapy.modeling.models.expcutoffpowerlaw3fglspectralmodel method)": [[231, "gammapy.modeling.models.ExpCutoffPowerLaw3FGLSpectralModel.reference_fluxes", false]], "reference_fluxes() (gammapy.modeling.models.expcutoffpowerlawnormspectralmodel method)": [[232, "gammapy.modeling.models.ExpCutoffPowerLawNormSpectralModel.reference_fluxes", false]], "reference_fluxes() (gammapy.modeling.models.expcutoffpowerlawspectralmodel method)": [[233, "gammapy.modeling.models.ExpCutoffPowerLawSpectralModel.reference_fluxes", false]], "reference_fluxes() (gammapy.modeling.models.gaussianspectralmodel method)": [[238, "gammapy.modeling.models.GaussianSpectralModel.reference_fluxes", false]], "reference_fluxes() (gammapy.modeling.models.logparabolanormspectralmodel method)": [[244, "gammapy.modeling.models.LogParabolaNormSpectralModel.reference_fluxes", false]], "reference_fluxes() (gammapy.modeling.models.logparabolaspectralmodel method)": [[245, "gammapy.modeling.models.LogParabolaSpectralModel.reference_fluxes", false]], "reference_fluxes() (gammapy.modeling.models.meyercrabspectralmodel method)": [[248, "gammapy.modeling.models.MeyerCrabSpectralModel.reference_fluxes", false]], "reference_fluxes() (gammapy.modeling.models.naimaspectralmodel method)": [[252, "gammapy.modeling.models.NaimaSpectralModel.reference_fluxes", false]], "reference_fluxes() (gammapy.modeling.models.piecewisenormspectralmodel method)": [[254, "gammapy.modeling.models.PiecewiseNormSpectralModel.reference_fluxes", false]], "reference_fluxes() (gammapy.modeling.models.powerlaw2spectralmodel method)": [[256, "gammapy.modeling.models.PowerLaw2SpectralModel.reference_fluxes", false]], "reference_fluxes() (gammapy.modeling.models.powerlawnormspectralmodel method)": [[257, "gammapy.modeling.models.PowerLawNormSpectralModel.reference_fluxes", false]], "reference_fluxes() (gammapy.modeling.models.powerlawspectralmodel method)": [[258, "gammapy.modeling.models.PowerLawSpectralModel.reference_fluxes", false]], "reference_fluxes() (gammapy.modeling.models.scalespectralmodel method)": [[263, "gammapy.modeling.models.ScaleSpectralModel.reference_fluxes", false]], "reference_fluxes() (gammapy.modeling.models.smoothbrokenpowerlawspectralmodel method)": [[268, "gammapy.modeling.models.SmoothBrokenPowerLawSpectralModel.reference_fluxes", false]], "reference_fluxes() (gammapy.modeling.models.spectralmodel method)": [[270, "gammapy.modeling.models.SpectralModel.reference_fluxes", false]], "reference_fluxes() (gammapy.modeling.models.superexpcutoffpowerlaw3fglspectralmodel method)": [[271, "gammapy.modeling.models.SuperExpCutoffPowerLaw3FGLSpectralModel.reference_fluxes", false]], "reference_fluxes() (gammapy.modeling.models.superexpcutoffpowerlaw4fgldr3spectralmodel method)": [[272, "gammapy.modeling.models.SuperExpCutoffPowerLaw4FGLDR3SpectralModel.reference_fluxes", false]], "reference_fluxes() (gammapy.modeling.models.superexpcutoffpowerlaw4fglspectralmodel method)": [[273, "gammapy.modeling.models.SuperExpCutoffPowerLaw4FGLSpectralModel.reference_fluxes", false]], "reference_fluxes() (gammapy.modeling.models.templatendspectralmodel method)": [[276, "gammapy.modeling.models.TemplateNDSpectralModel.reference_fluxes", false]], "reference_fluxes() (gammapy.modeling.models.templatespectralmodel method)": [[280, "gammapy.modeling.models.TemplateSpectralModel.reference_fluxes", false]], "reference_model (gammapy.estimators.fluxmaps attribute)": [[125, "gammapy.estimators.FluxMaps.reference_model", false]], "reference_model (gammapy.estimators.fluxpoints attribute)": [[127, "gammapy.estimators.FluxPoints.reference_model", false]], "reference_model_default (gammapy.estimators.fluxmaps attribute)": [[125, "gammapy.estimators.FluxMaps.reference_model_default", false]], "reference_model_default (gammapy.estimators.fluxpoints attribute)": [[127, "gammapy.estimators.FluxPoints.reference_model_default", false]], "reference_spectral_model (gammapy.estimators.fluxmaps attribute)": [[125, "gammapy.estimators.FluxMaps.reference_spectral_model", false]], "reference_spectral_model (gammapy.estimators.fluxpoints attribute)": [[127, "gammapy.estimators.FluxPoints.reference_spectral_model", false]], "reference_time (gammapy.maps.timemapaxis attribute)": [[206, "gammapy.maps.TimeMapAxis.reference_time", false]], "reference_time (gammapy.modeling.models.constanttemporalmodel attribute)": [[226, "gammapy.modeling.models.ConstantTemporalModel.reference_time", false]], "reference_time (gammapy.modeling.models.expdecaytemporalmodel attribute)": [[234, "gammapy.modeling.models.ExpDecayTemporalModel.reference_time", false]], "reference_time (gammapy.modeling.models.gaussiantemporalmodel attribute)": [[239, "gammapy.modeling.models.GaussianTemporalModel.reference_time", false]], "reference_time (gammapy.modeling.models.generalizedgaussiantemporalmodel attribute)": [[241, "gammapy.modeling.models.GeneralizedGaussianTemporalModel.reference_time", false]], "reference_time (gammapy.modeling.models.lightcurvetemplatetemporalmodel attribute)": [[242, "gammapy.modeling.models.LightCurveTemplateTemporalModel.reference_time", false]], "reference_time (gammapy.modeling.models.lineartemporalmodel attribute)": [[243, "gammapy.modeling.models.LinearTemporalModel.reference_time", false]], "reference_time (gammapy.modeling.models.powerlawtemporalmodel attribute)": [[259, "gammapy.modeling.models.PowerLawTemporalModel.reference_time", false]], "reference_time (gammapy.modeling.models.sinetemporalmodel attribute)": [[266, "gammapy.modeling.models.SineTemporalModel.reference_time", false]], "reference_time (gammapy.modeling.models.templatephasecurvetemporalmodel attribute)": [[278, "gammapy.modeling.models.TemplatePhaseCurveTemporalModel.reference_time", false]], "reference_time (gammapy.modeling.models.temporalmodel attribute)": [[281, "gammapy.modeling.models.TemporalModel.reference_time", false]], "reflected background": [[597, "term-Reflected-Background", true]], "reflectedregionsbackgroundmaker (class in gammapy.makers)": [[178, "gammapy.makers.ReflectedRegionsBackgroundMaker", false]], "reflectedregionsfinder (class in gammapy.makers)": [[179, "gammapy.makers.ReflectedRegionsFinder", false]], "region (gammapy.maps.hpxgeom attribute)": [[195, "gammapy.maps.HpxGeom.region", false]], "region (gammapy.maps.regiongeom attribute)": [[204, "gammapy.maps.RegionGeom.region", false]], "region_mask() (gammapy.maps.hpxgeom method)": [[195, "gammapy.maps.HpxGeom.region_mask", false]], "region_mask() (gammapy.maps.wcsgeom method)": [[207, "gammapy.maps.WcsGeom.region_mask", false]], "region_to_frame() (in module gammapy.utils.regions)": [[348, "gammapy.utils.regions.region_to_frame", false]], "region_weights() (gammapy.maps.wcsgeom method)": [[207, "gammapy.maps.WcsGeom.region_weights", false]], "regiongeom (class in gammapy.maps)": [[204, "gammapy.maps.RegionGeom", false]], "regionndmap (class in gammapy.maps)": [[205, "gammapy.maps.RegionNDMap", false]], "regions_to_compound_region() (in module gammapy.utils.regions)": [[349, "gammapy.utils.regions.regions_to_compound_region", false]], "regionsfinder (class in gammapy.makers)": [[180, "gammapy.makers.RegionsFinder", false]], "remove() (gammapy.data.observations method)": [[92, "gammapy.data.Observations.remove", false]], "remove() (gammapy.datasets.datasets method)": [[100, "gammapy.datasets.Datasets.remove", false]], "remove() (gammapy.modeling.models.models method)": [[251, "gammapy.modeling.models.Models.remove", false]], "remove_column() (gammapy.data.hduindextable method)": [[87, "gammapy.data.HDUIndexTable.remove_column", false]], "remove_column() (gammapy.data.observationtable method)": [[91, "gammapy.data.ObservationTable.remove_column", false]], "remove_columns() (gammapy.data.hduindextable method)": [[87, "gammapy.data.HDUIndexTable.remove_columns", false]], "remove_columns() (gammapy.data.observationtable method)": [[91, "gammapy.data.ObservationTable.remove_columns", false]], "remove_indices() (gammapy.data.hduindextable method)": [[87, "gammapy.data.HDUIndexTable.remove_indices", false]], "remove_indices() (gammapy.data.observationtable method)": [[91, "gammapy.data.ObservationTable.remove_indices", false]], "remove_row() (gammapy.data.hduindextable method)": [[87, "gammapy.data.HDUIndexTable.remove_row", false]], "remove_row() (gammapy.data.observationtable method)": [[91, "gammapy.data.ObservationTable.remove_row", false]], "remove_rows() (gammapy.data.hduindextable method)": [[87, "gammapy.data.HDUIndexTable.remove_rows", false]], "remove_rows() (gammapy.data.observationtable method)": [[91, "gammapy.data.ObservationTable.remove_rows", false]], "rename() (gammapy.astro.population.casebattacharya1998 class method)": [[28, "gammapy.astro.population.CaseBattacharya1998.rename", false]], "rename() (gammapy.astro.population.exponential class method)": [[29, "gammapy.astro.population.Exponential.rename", false]], "rename() (gammapy.astro.population.faucherkaspi2006 class method)": [[30, "gammapy.astro.population.FaucherKaspi2006.rename", false]], "rename() (gammapy.astro.population.faucherkaspi2006velocitybimodal class method)": [[31, "gammapy.astro.population.FaucherKaspi2006VelocityBimodal.rename", false]], "rename() (gammapy.astro.population.faucherkaspi2006velocitymaxwellian class method)": [[32, "gammapy.astro.population.FaucherKaspi2006VelocityMaxwellian.rename", false]], "rename() (gammapy.astro.population.lorimer2006 class method)": [[35, "gammapy.astro.population.Lorimer2006.rename", false]], "rename() (gammapy.astro.population.paczynski1990 class method)": [[36, "gammapy.astro.population.Paczynski1990.rename", false]], "rename() (gammapy.astro.population.paczynski1990velocity class method)": [[37, "gammapy.astro.population.Paczynski1990Velocity.rename", false]], "rename() (gammapy.astro.population.yusifovkucuk2004 class method)": [[39, "gammapy.astro.population.YusifovKucuk2004.rename", false]], "rename() (gammapy.astro.population.yusifovkucuk2004b class method)": [[40, "gammapy.astro.population.YusifovKucuk2004B.rename", false]], "rename() (gammapy.maps.mapaxis method)": [[201, "gammapy.maps.MapAxis.rename", false]], "rename_axes() (gammapy.maps.geom method)": [[194, "gammapy.maps.Geom.rename_axes", false]], "rename_axes() (gammapy.maps.hpxgeom method)": [[195, "gammapy.maps.HpxGeom.rename_axes", false]], "rename_axes() (gammapy.maps.hpxmap method)": [[196, "gammapy.maps.HpxMap.rename_axes", false]], "rename_axes() (gammapy.maps.hpxndmap method)": [[197, "gammapy.maps.HpxNDMap.rename_axes", false]], "rename_axes() (gammapy.maps.map method)": [[199, "gammapy.maps.Map.rename_axes", false]], "rename_axes() (gammapy.maps.mapaxes method)": [[200, "gammapy.maps.MapAxes.rename_axes", false]], "rename_axes() (gammapy.maps.regiongeom method)": [[204, "gammapy.maps.RegionGeom.rename_axes", false]], "rename_axes() (gammapy.maps.regionndmap method)": [[205, "gammapy.maps.RegionNDMap.rename_axes", false]], "rename_axes() (gammapy.maps.wcsgeom method)": [[207, "gammapy.maps.WcsGeom.rename_axes", false]], "rename_axes() (gammapy.maps.wcsmap method)": [[208, "gammapy.maps.WcsMap.rename_axes", false]], "rename_axes() (gammapy.maps.wcsndmap method)": [[209, "gammapy.maps.WcsNDMap.rename_axes", false]], "rename_column() (gammapy.data.hduindextable method)": [[87, "gammapy.data.HDUIndexTable.rename_column", false]], "rename_column() (gammapy.data.observationtable method)": [[91, "gammapy.data.ObservationTable.rename_column", false]], "rename_columns() (gammapy.data.hduindextable method)": [[87, "gammapy.data.HDUIndexTable.rename_columns", false]], "rename_columns() (gammapy.data.observationtable method)": [[91, "gammapy.data.ObservationTable.rename_columns", false]], "render() (gammapy.astro.population.casebattacharya1998 method)": [[28, "gammapy.astro.population.CaseBattacharya1998.render", false]], "render() (gammapy.astro.population.exponential method)": [[29, "gammapy.astro.population.Exponential.render", false]], "render() (gammapy.astro.population.faucherkaspi2006 method)": [[30, "gammapy.astro.population.FaucherKaspi2006.render", false]], "render() (gammapy.astro.population.faucherkaspi2006velocitybimodal method)": [[31, "gammapy.astro.population.FaucherKaspi2006VelocityBimodal.render", false]], "render() (gammapy.astro.population.faucherkaspi2006velocitymaxwellian method)": [[32, "gammapy.astro.population.FaucherKaspi2006VelocityMaxwellian.render", false]], "render() (gammapy.astro.population.lorimer2006 method)": [[35, "gammapy.astro.population.Lorimer2006.render", false]], "render() (gammapy.astro.population.paczynski1990 method)": [[36, "gammapy.astro.population.Paczynski1990.render", false]], "render() (gammapy.astro.population.paczynski1990velocity method)": [[37, "gammapy.astro.population.Paczynski1990Velocity.render", false]], "render() (gammapy.astro.population.yusifovkucuk2004 method)": [[39, "gammapy.astro.population.YusifovKucuk2004.render", false]], "render() (gammapy.astro.population.yusifovkucuk2004b method)": [[40, "gammapy.astro.population.YusifovKucuk2004B.render", false]], "reorder_axes() (gammapy.maps.hpxmap method)": [[196, "gammapy.maps.HpxMap.reorder_axes", false]], "reorder_axes() (gammapy.maps.hpxndmap method)": [[197, "gammapy.maps.HpxNDMap.reorder_axes", false]], "reorder_axes() (gammapy.maps.map method)": [[199, "gammapy.maps.Map.reorder_axes", false]], "reorder_axes() (gammapy.maps.regionndmap method)": [[205, "gammapy.maps.RegionNDMap.reorder_axes", false]], "reorder_axes() (gammapy.maps.wcsmap method)": [[208, "gammapy.maps.WcsMap.reorder_axes", false]], "reorder_axes() (gammapy.maps.wcsndmap method)": [[209, "gammapy.maps.WcsNDMap.reorder_axes", false]], "replace() (gammapy.maps.mapaxes method)": [[200, "gammapy.maps.MapAxes.replace", false]], "replace_axis() (gammapy.maps.geom method)": [[194, "gammapy.maps.Geom.replace_axis", false]], "replace_axis() (gammapy.maps.hpxgeom method)": [[195, "gammapy.maps.HpxGeom.replace_axis", false]], "replace_axis() (gammapy.maps.regiongeom method)": [[204, "gammapy.maps.RegionGeom.replace_axis", false]], "replace_axis() (gammapy.maps.wcsgeom method)": [[207, "gammapy.maps.WcsGeom.replace_axis", false]], "replace_column() (gammapy.data.hduindextable method)": [[87, "gammapy.data.HDUIndexTable.replace_column", false]], "replace_column() (gammapy.data.observationtable method)": [[91, "gammapy.data.ObservationTable.replace_column", false]], "reproject_by_image() (gammapy.maps.hpxmap method)": [[196, "gammapy.maps.HpxMap.reproject_by_image", false]], "reproject_by_image() (gammapy.maps.hpxndmap method)": [[197, "gammapy.maps.HpxNDMap.reproject_by_image", false]], "reproject_by_image() (gammapy.maps.map method)": [[199, "gammapy.maps.Map.reproject_by_image", false]], "reproject_by_image() (gammapy.maps.regionndmap method)": [[205, "gammapy.maps.RegionNDMap.reproject_by_image", false]], "reproject_by_image() (gammapy.maps.wcsmap method)": [[208, "gammapy.maps.WcsMap.reproject_by_image", false]], "reproject_by_image() (gammapy.maps.wcsndmap method)": [[209, "gammapy.maps.WcsNDMap.reproject_by_image", false]], "reproject_to_geom() (gammapy.maps.hpxmap method)": [[196, "gammapy.maps.HpxMap.reproject_to_geom", false]], "reproject_to_geom() (gammapy.maps.hpxndmap method)": [[197, "gammapy.maps.HpxNDMap.reproject_to_geom", false]], "reproject_to_geom() (gammapy.maps.map method)": [[199, "gammapy.maps.Map.reproject_to_geom", false]], "reproject_to_geom() (gammapy.maps.regionndmap method)": [[205, "gammapy.maps.RegionNDMap.reproject_to_geom", false]], "reproject_to_geom() (gammapy.maps.wcsmap method)": [[208, "gammapy.maps.WcsMap.reproject_to_geom", false]], "reproject_to_geom() (gammapy.maps.wcsndmap method)": [[209, "gammapy.maps.WcsNDMap.reproject_to_geom", false]], "required_axes (gammapy.irf.background2d attribute)": [[150, "gammapy.irf.Background2D.required_axes", false]], "required_axes (gammapy.irf.background3d attribute)": [[151, "gammapy.irf.Background3D.required_axes", false]], "required_axes (gammapy.irf.backgroundirf attribute)": [[152, "gammapy.irf.BackgroundIRF.required_axes", false]], "required_axes (gammapy.irf.edispkernel attribute)": [[153, "gammapy.irf.EDispKernel.required_axes", false]], "required_axes (gammapy.irf.edispkernelmap attribute)": [[154, "gammapy.irf.EDispKernelMap.required_axes", false]], "required_axes (gammapy.irf.edispmap attribute)": [[155, "gammapy.irf.EDispMap.required_axes", false]], "required_axes (gammapy.irf.effectiveareatable2d attribute)": [[156, "gammapy.irf.EffectiveAreaTable2D.required_axes", false]], "required_axes (gammapy.irf.energydependentmultigausspsf attribute)": [[157, "gammapy.irf.EnergyDependentMultiGaussPSF.required_axes", false]], "required_axes (gammapy.irf.energydispersion2d attribute)": [[158, "gammapy.irf.EnergyDispersion2D.required_axes", false]], "required_axes (gammapy.irf.irf attribute)": [[160, "gammapy.irf.IRF.required_axes", false]], "required_axes (gammapy.irf.irfmap attribute)": [[161, "gammapy.irf.IRFMap.required_axes", false]], "required_axes (gammapy.irf.parametricpsf attribute)": [[167, "gammapy.irf.ParametricPSF.required_axes", false]], "required_axes (gammapy.irf.psf3d attribute)": [[163, "gammapy.irf.PSF3D.required_axes", false]], "required_axes (gammapy.irf.psfking attribute)": [[165, "gammapy.irf.PSFKing.required_axes", false]], "required_axes (gammapy.irf.psfmap attribute)": [[166, "gammapy.irf.PSFMap.required_axes", false]], "required_axes (gammapy.irf.radmax2d attribute)": [[168, "gammapy.irf.RadMax2D.required_axes", false]], "required_axes (gammapy.irf.recopsfmap attribute)": [[169, "gammapy.irf.RecoPSFMap.required_axes", false]], "required_parameters (gammapy.irf.energydependentmultigausspsf attribute)": [[157, "gammapy.irf.EnergyDependentMultiGaussPSF.required_parameters", false]], "required_parameters (gammapy.irf.parametricpsf attribute)": [[167, "gammapy.irf.ParametricPSF.required_parameters", false]], "required_parameters (gammapy.irf.psfking attribute)": [[165, "gammapy.irf.PSFKing.required_parameters", false]], "requires_data() (in module gammapy.utils.testing)": [[366, "gammapy.utils.testing.requires_data", false]], "requires_dependency() (in module gammapy.utils.testing)": [[367, "gammapy.utils.testing.requires_dependency", false]], "resample() (gammapy.maps.hpxmap method)": [[196, "gammapy.maps.HpxMap.resample", false]], "resample() (gammapy.maps.hpxndmap method)": [[197, "gammapy.maps.HpxNDMap.resample", false]], "resample() (gammapy.maps.labelmapaxis method)": [[198, "gammapy.maps.LabelMapAxis.resample", false]], "resample() (gammapy.maps.map method)": [[199, "gammapy.maps.Map.resample", false]], "resample() (gammapy.maps.mapaxes method)": [[200, "gammapy.maps.MapAxes.resample", false]], "resample() (gammapy.maps.regionndmap method)": [[205, "gammapy.maps.RegionNDMap.resample", false]], "resample() (gammapy.maps.wcsmap method)": [[208, "gammapy.maps.WcsMap.resample", false]], "resample() (gammapy.maps.wcsndmap method)": [[209, "gammapy.maps.WcsNDMap.resample", false]], "resample_axis() (gammapy.estimators.fluxpoints method)": [[127, "gammapy.estimators.FluxPoints.resample_axis", false]], "resample_axis() (gammapy.maps.geom method)": [[194, "gammapy.maps.Geom.resample_axis", false]], "resample_axis() (gammapy.maps.hpxgeom method)": [[195, "gammapy.maps.HpxGeom.resample_axis", false]], "resample_axis() (gammapy.maps.hpxmap method)": [[196, "gammapy.maps.HpxMap.resample_axis", false]], "resample_axis() (gammapy.maps.hpxndmap method)": [[197, "gammapy.maps.HpxNDMap.resample_axis", false]], "resample_axis() (gammapy.maps.map method)": [[199, "gammapy.maps.Map.resample_axis", false]], "resample_axis() (gammapy.maps.regiongeom method)": [[204, "gammapy.maps.RegionGeom.resample_axis", false]], "resample_axis() (gammapy.maps.regionndmap method)": [[205, "gammapy.maps.RegionNDMap.resample_axis", false]], "resample_axis() (gammapy.maps.wcsgeom method)": [[207, "gammapy.maps.WcsGeom.resample_axis", false]], "resample_axis() (gammapy.maps.wcsmap method)": [[208, "gammapy.maps.WcsMap.resample_axis", false]], "resample_axis() (gammapy.maps.wcsndmap method)": [[209, "gammapy.maps.WcsNDMap.resample_axis", false]], "resample_energy_axis() (gammapy.datasets.mapdataset method)": [[103, "gammapy.datasets.MapDataset.resample_energy_axis", false]], "resample_energy_axis() (gammapy.datasets.mapdatasetonoff method)": [[106, "gammapy.datasets.MapDatasetOnOff.resample_energy_axis", false]], "resample_energy_axis() (gammapy.datasets.spectrumdataset method)": [[110, "gammapy.datasets.SpectrumDataset.resample_energy_axis", false]], "resample_energy_axis() (gammapy.datasets.spectrumdatasetonoff method)": [[111, "gammapy.datasets.SpectrumDatasetOnOff.resample_energy_axis", false]], "resample_energy_axis() (gammapy.irf.edispkernelmap method)": [[154, "gammapy.irf.EDispKernelMap.resample_energy_axis", false]], "resample_energy_edges() (in module gammapy.estimators.utils)": [[149, "gammapy.estimators.utils.resample_energy_edges", false]], "reset_data_cache() (gammapy.datasets.mapdataset method)": [[103, "gammapy.datasets.MapDataset.reset_data_cache", false]], "reset_data_cache() (gammapy.datasets.mapdatasetonoff method)": [[106, "gammapy.datasets.MapDatasetOnOff.reset_data_cache", false]], "reset_data_cache() (gammapy.datasets.spectrumdataset method)": [[110, "gammapy.datasets.SpectrumDataset.reset_data_cache", false]], "reset_data_cache() (gammapy.datasets.spectrumdatasetonoff method)": [[111, "gammapy.datasets.SpectrumDatasetOnOff.reset_data_cache", false]], "reset_to_default() (gammapy.modeling.models.fovbackgroundmodel method)": [[235, "gammapy.modeling.models.FoVBackgroundModel.reset_to_default", false]], "residuals() (gammapy.datasets.fluxpointsdataset method)": [[102, "gammapy.datasets.FluxPointsDataset.residuals", false]], "residuals() (gammapy.datasets.mapdataset method)": [[103, "gammapy.datasets.MapDataset.residuals", false]], "residuals() (gammapy.datasets.mapdatasetonoff method)": [[106, "gammapy.datasets.MapDatasetOnOff.residuals", false]], "residuals() (gammapy.datasets.spectrumdataset method)": [[110, "gammapy.datasets.SpectrumDataset.residuals", false]], "residuals() (gammapy.datasets.spectrumdatasetonoff method)": [[111, "gammapy.datasets.SpectrumDatasetOnOff.residuals", false]], "restore_status() (gammapy.modeling.models.datasetmodels method)": [[227, "gammapy.modeling.models.DatasetModels.restore_status", false]], "restore_status() (gammapy.modeling.models.models method)": [[251, "gammapy.modeling.models.Models.restore_status", false]], "restore_status() (gammapy.modeling.parameters method)": [[218, "gammapy.modeling.Parameters.restore_status", false]], "restore_status() (gammapy.modeling.priorparameters method)": [[220, "gammapy.modeling.PriorParameters.restore_status", false]], "return_units (gammapy.astro.population.casebattacharya1998 attribute)": [[28, "gammapy.astro.population.CaseBattacharya1998.return_units", false]], "return_units (gammapy.astro.population.exponential attribute)": [[29, "gammapy.astro.population.Exponential.return_units", false]], "return_units (gammapy.astro.population.faucherkaspi2006 attribute)": [[30, "gammapy.astro.population.FaucherKaspi2006.return_units", false]], "return_units (gammapy.astro.population.faucherkaspi2006velocitybimodal attribute)": [[31, "gammapy.astro.population.FaucherKaspi2006VelocityBimodal.return_units", false]], "return_units (gammapy.astro.population.faucherkaspi2006velocitymaxwellian attribute)": [[32, "gammapy.astro.population.FaucherKaspi2006VelocityMaxwellian.return_units", false]], "return_units (gammapy.astro.population.lorimer2006 attribute)": [[35, "gammapy.astro.population.Lorimer2006.return_units", false]], "return_units (gammapy.astro.population.paczynski1990 attribute)": [[36, "gammapy.astro.population.Paczynski1990.return_units", false]], "return_units (gammapy.astro.population.paczynski1990velocity attribute)": [[37, "gammapy.astro.population.Paczynski1990Velocity.return_units", false]], "return_units (gammapy.astro.population.yusifovkucuk2004 attribute)": [[39, "gammapy.astro.population.YusifovKucuk2004.return_units", false]], "return_units (gammapy.astro.population.yusifovkucuk2004b attribute)": [[40, "gammapy.astro.population.YusifovKucuk2004B.return_units", false]], "reverse (gammapy.maps.mapaxes attribute)": [[200, "gammapy.maps.MapAxes.reverse", false]], "reverse() (gammapy.data.hduindextable method)": [[87, "gammapy.data.HDUIndexTable.reverse", false]], "reverse() (gammapy.data.observations method)": [[92, "gammapy.data.Observations.reverse", false]], "reverse() (gammapy.data.observationtable method)": [[91, "gammapy.data.ObservationTable.reverse", false]], "reverse() (gammapy.datasets.datasets method)": [[100, "gammapy.datasets.Datasets.reverse", false]], "reverse() (gammapy.modeling.models.models method)": [[251, "gammapy.modeling.models.Models.reverse", false]], "reverse_lon_radec (gammapy.irf.fovalignment attribute)": [[159, "gammapy.irf.FoVAlignment.REVERSE_LON_RADEC", false]], "ring background": [[597, "term-Ring-Background", true]], "ringbackgroundmaker (class in gammapy.makers)": [[181, "gammapy.makers.RingBackgroundMaker", false]], "roi": [[597, "term-RoI", true]], "round() (gammapy.data.hduindextable method)": [[87, "gammapy.data.HDUIndexTable.round", false]], "round() (gammapy.data.observationtable method)": [[91, "gammapy.data.ObservationTable.round", false]], "round() (gammapy.maps.mapaxis method)": [[201, "gammapy.maps.MapAxis.round", false]], "row_idx() (gammapy.data.hduindextable method)": [[87, "gammapy.data.HDUIndexTable.row_idx", false]], "row_index (gammapy.catalog.sourcecatalogobject attribute)": [[69, "gammapy.catalog.SourceCatalogObject.row_index", false]], "row_index (gammapy.catalog.sourcecatalogobject1lhaaso attribute)": [[70, "gammapy.catalog.SourceCatalogObject1LHAASO.row_index", false]], "row_index (gammapy.catalog.sourcecatalogobject2fhl attribute)": [[71, "gammapy.catalog.SourceCatalogObject2FHL.row_index", false]], "row_index (gammapy.catalog.sourcecatalogobject2hwc attribute)": [[72, "gammapy.catalog.SourceCatalogObject2HWC.row_index", false]], "row_index (gammapy.catalog.sourcecatalogobject2pc attribute)": [[73, "gammapy.catalog.SourceCatalogObject2PC.row_index", false]], "row_index (gammapy.catalog.sourcecatalogobject3fgl attribute)": [[74, "gammapy.catalog.SourceCatalogObject3FGL.row_index", false]], "row_index (gammapy.catalog.sourcecatalogobject3fhl attribute)": [[75, "gammapy.catalog.SourceCatalogObject3FHL.row_index", false]], "row_index (gammapy.catalog.sourcecatalogobject3hwc attribute)": [[76, "gammapy.catalog.SourceCatalogObject3HWC.row_index", false]], "row_index (gammapy.catalog.sourcecatalogobject3pc attribute)": [[77, "gammapy.catalog.SourceCatalogObject3PC.row_index", false]], "row_index (gammapy.catalog.sourcecatalogobject4fgl attribute)": [[78, "gammapy.catalog.SourceCatalogObject4FGL.row_index", false]], "row_index (gammapy.catalog.sourcecatalogobjectgammacat attribute)": [[79, "gammapy.catalog.SourceCatalogObjectGammaCat.row_index", false]], "row_index (gammapy.catalog.sourcecatalogobjecthgps attribute)": [[80, "gammapy.catalog.SourceCatalogObjectHGPS.row_index", false]], "row_index (gammapy.catalog.sourcecatalogobjecthgpscomponent attribute)": [[81, "gammapy.catalog.SourceCatalogObjectHGPSComponent.row_index", false]], "row_index() (gammapy.catalog.sourcecatalog method)": [[56, "gammapy.catalog.SourceCatalog.row_index", false]], "row_index() (gammapy.catalog.sourcecatalog1lhaaso method)": [[57, "gammapy.catalog.SourceCatalog1LHAASO.row_index", false]], "row_index() (gammapy.catalog.sourcecatalog2fhl method)": [[58, "gammapy.catalog.SourceCatalog2FHL.row_index", false]], "row_index() (gammapy.catalog.sourcecatalog2hwc method)": [[59, "gammapy.catalog.SourceCatalog2HWC.row_index", false]], "row_index() (gammapy.catalog.sourcecatalog2pc method)": [[60, "gammapy.catalog.SourceCatalog2PC.row_index", false]], "row_index() (gammapy.catalog.sourcecatalog3fgl method)": [[61, "gammapy.catalog.SourceCatalog3FGL.row_index", false]], "row_index() (gammapy.catalog.sourcecatalog3fhl method)": [[62, "gammapy.catalog.SourceCatalog3FHL.row_index", false]], "row_index() (gammapy.catalog.sourcecatalog3hwc method)": [[63, "gammapy.catalog.SourceCatalog3HWC.row_index", false]], "row_index() (gammapy.catalog.sourcecatalog3pc method)": [[64, "gammapy.catalog.SourceCatalog3PC.row_index", false]], "row_index() (gammapy.catalog.sourcecatalog4fgl method)": [[65, "gammapy.catalog.SourceCatalog4FGL.row_index", false]], "row_index() (gammapy.catalog.sourcecataloggammacat method)": [[66, "gammapy.catalog.SourceCatalogGammaCat.row_index", false]], "row_index() (gammapy.catalog.sourcecataloghgps method)": [[67, "gammapy.catalog.SourceCatalogHGPS.row_index", false]], "run() (gammapy.data.observationseventssampler method)": [[93, "gammapy.data.ObservationsEventsSampler.run", false]], "run() (gammapy.datasets.mapdataseteventsampler method)": [[104, "gammapy.datasets.MapDatasetEventSampler.run", false]], "run() (gammapy.datasets.observationeventsampler method)": [[109, "gammapy.datasets.ObservationEventSampler.run", false]], "run() (gammapy.estimators.asmoothmapestimator method)": [[120, "gammapy.estimators.ASmoothMapEstimator.run", false]], "run() (gammapy.estimators.energydependentmorphologyestimator method)": [[122, "gammapy.estimators.EnergyDependentMorphologyEstimator.run", false]], "run() (gammapy.estimators.estimator method)": [[123, "gammapy.estimators.Estimator.run", false]], "run() (gammapy.estimators.excessmapestimator method)": [[124, "gammapy.estimators.ExcessMapEstimator.run", false]], "run() (gammapy.estimators.fluxpointsestimator method)": [[128, "gammapy.estimators.FluxPointsEstimator.run", false]], "run() (gammapy.estimators.fluxprofileestimator method)": [[129, "gammapy.estimators.FluxProfileEstimator.run", false]], "run() (gammapy.estimators.imageprofileestimator method)": [[131, "gammapy.estimators.ImageProfileEstimator.run", false]], "run() (gammapy.estimators.lightcurveestimator method)": [[132, "gammapy.estimators.LightCurveEstimator.run", false]], "run() (gammapy.estimators.parameterestimator method)": [[133, "gammapy.estimators.ParameterEstimator.run", false]], "run() (gammapy.estimators.parametersensitivityestimator method)": [[134, "gammapy.estimators.ParameterSensitivityEstimator.run", false]], "run() (gammapy.estimators.sensitivityestimator method)": [[135, "gammapy.estimators.SensitivityEstimator.run", false]], "run() (gammapy.estimators.tsmapestimator method)": [[136, "gammapy.estimators.TSMapEstimator.run", false]], "run() (gammapy.makers.adaptiveringbackgroundmaker method)": [[171, "gammapy.makers.AdaptiveRingBackgroundMaker.run", false]], "run() (gammapy.makers.datasetsmaker method)": [[172, "gammapy.makers.DatasetsMaker.run", false]], "run() (gammapy.makers.fovbackgroundmaker method)": [[173, "gammapy.makers.FoVBackgroundMaker.run", false]], "run() (gammapy.makers.maker method)": [[175, "gammapy.makers.Maker.run", false]], "run() (gammapy.makers.mapdatasetmaker method)": [[176, "gammapy.makers.MapDatasetMaker.run", false]], "run() (gammapy.makers.phasebackgroundmaker method)": [[177, "gammapy.makers.PhaseBackgroundMaker.run", false]], "run() (gammapy.makers.reflectedregionsbackgroundmaker method)": [[178, "gammapy.makers.ReflectedRegionsBackgroundMaker.run", false]], "run() (gammapy.makers.reflectedregionsfinder method)": [[179, "gammapy.makers.ReflectedRegionsFinder.run", false]], "run() (gammapy.makers.regionsfinder method)": [[180, "gammapy.makers.RegionsFinder.run", false]], "run() (gammapy.makers.ringbackgroundmaker method)": [[181, "gammapy.makers.RingBackgroundMaker.run", false]], "run() (gammapy.makers.safemaskmaker method)": [[182, "gammapy.makers.SafeMaskMaker.run", false]], "run() (gammapy.makers.spectrumdatasetmaker method)": [[183, "gammapy.makers.SpectrumDatasetMaker.run", false]], "run() (gammapy.makers.wobbleregionsfinder method)": [[184, "gammapy.makers.WobbleRegionsFinder.run", false]], "run() (gammapy.modeling.fit method)": [[214, "gammapy.modeling.Fit.run", false]], "run() (gammapy.utils.testing.checker method)": [[361, "gammapy.utils.testing.Checker.run", false]], "run_fit() (gammapy.analysis.analysis method)": [[15, "gammapy.analysis.Analysis.run_fit", false]], "run_multiprocessing() (in module gammapy.utils.parallel)": [[335, "gammapy.utils.parallel.run_multiprocessing", false]], "safe_mask_maker (gammapy.makers.datasetsmaker attribute)": [[172, "gammapy.makers.DatasetsMaker.safe_mask_maker", false]], "safemaskmaker (class in gammapy.makers)": [[182, "gammapy.makers.SafeMaskMaker", false]], "sample() (gammapy.utils.random.inversecdfsampler method)": [[336, "gammapy.utils.random.InverseCDFSampler.sample", false]], "sample_axis() (gammapy.utils.random.inversecdfsampler method)": [[336, "gammapy.utils.random.InverseCDFSampler.sample_axis", false]], "sample_background() (gammapy.datasets.mapdataseteventsampler method)": [[104, "gammapy.datasets.MapDatasetEventSampler.sample_background", false]], "sample_background() (gammapy.datasets.observationeventsampler method)": [[109, "gammapy.datasets.ObservationEventSampler.sample_background", false]], "sample_coord() (gammapy.irf.edispmap method)": [[155, "gammapy.irf.EDispMap.sample_coord", false]], "sample_coord() (gammapy.irf.psfmap method)": [[166, "gammapy.irf.PSFMap.sample_coord", false]], "sample_coord() (gammapy.irf.recopsfmap method)": [[169, "gammapy.irf.RecoPSFMap.sample_coord", false]], "sample_coord() (gammapy.maps.hpxmap method)": [[196, "gammapy.maps.HpxMap.sample_coord", false]], "sample_coord() (gammapy.maps.hpxndmap method)": [[197, "gammapy.maps.HpxNDMap.sample_coord", false]], "sample_coord() (gammapy.maps.map method)": [[199, "gammapy.maps.Map.sample_coord", false]], "sample_coord() (gammapy.maps.regionndmap method)": [[205, "gammapy.maps.RegionNDMap.sample_coord", false]], "sample_coord() (gammapy.maps.wcsmap method)": [[208, "gammapy.maps.WcsMap.sample_coord", false]], "sample_coord() (gammapy.maps.wcsndmap method)": [[209, "gammapy.maps.WcsNDMap.sample_coord", false]], "sample_edisp() (gammapy.datasets.mapdataseteventsampler method)": [[104, "gammapy.datasets.MapDatasetEventSampler.sample_edisp", false]], "sample_edisp() (gammapy.datasets.observationeventsampler method)": [[109, "gammapy.datasets.ObservationEventSampler.sample_edisp", false]], "sample_powerlaw() (in module gammapy.utils.random)": [[341, "gammapy.utils.random.sample_powerlaw", false]], "sample_psf() (gammapy.datasets.mapdataseteventsampler method)": [[104, "gammapy.datasets.MapDatasetEventSampler.sample_psf", false]], "sample_psf() (gammapy.datasets.observationeventsampler method)": [[109, "gammapy.datasets.ObservationEventSampler.sample_psf", false]], "sample_sources() (gammapy.datasets.mapdataseteventsampler method)": [[104, "gammapy.datasets.MapDatasetEventSampler.sample_sources", false]], "sample_sources() (gammapy.datasets.observationeventsampler method)": [[109, "gammapy.datasets.ObservationEventSampler.sample_sources", false]], "sample_sphere() (in module gammapy.utils.random)": [[342, "gammapy.utils.random.sample_sphere", false]], "sample_sphere_distance() (in module gammapy.utils.random)": [[343, "gammapy.utils.random.sample_sphere_distance", false]], "sample_time() (gammapy.modeling.models.constanttemporalmodel method)": [[226, "gammapy.modeling.models.ConstantTemporalModel.sample_time", false]], "sample_time() (gammapy.modeling.models.expdecaytemporalmodel method)": [[234, "gammapy.modeling.models.ExpDecayTemporalModel.sample_time", false]], "sample_time() (gammapy.modeling.models.gaussiantemporalmodel method)": [[239, "gammapy.modeling.models.GaussianTemporalModel.sample_time", false]], "sample_time() (gammapy.modeling.models.generalizedgaussiantemporalmodel method)": [[241, "gammapy.modeling.models.GeneralizedGaussianTemporalModel.sample_time", false]], "sample_time() (gammapy.modeling.models.lightcurvetemplatetemporalmodel method)": [[242, "gammapy.modeling.models.LightCurveTemplateTemporalModel.sample_time", false]], "sample_time() (gammapy.modeling.models.lineartemporalmodel method)": [[243, "gammapy.modeling.models.LinearTemporalModel.sample_time", false]], "sample_time() (gammapy.modeling.models.powerlawtemporalmodel method)": [[259, "gammapy.modeling.models.PowerLawTemporalModel.sample_time", false]], "sample_time() (gammapy.modeling.models.sinetemporalmodel method)": [[266, "gammapy.modeling.models.SineTemporalModel.sample_time", false]], "sample_time() (gammapy.modeling.models.templatephasecurvetemporalmodel method)": [[278, "gammapy.modeling.models.TemplatePhaseCurveTemporalModel.sample_time", false]], "sample_time() (gammapy.modeling.models.temporalmodel method)": [[281, "gammapy.modeling.models.TemporalModel.sample_time", false]], "sample_times() (in module gammapy.utils.random)": [[344, "gammapy.utils.random.sample_times", false]], "scale (gammapy.astro.darkmatter.darkmatterannihilationspectralmodel attribute)": [[19, "gammapy.astro.darkmatter.DarkMatterAnnihilationSpectralModel.scale", false]], "scale (gammapy.astro.darkmatter.darkmatterdecayspectralmodel attribute)": [[20, "gammapy.astro.darkmatter.DarkMatterDecaySpectralModel.scale", false]], "scale (gammapy.modeling.parameter attribute)": [[217, "gammapy.modeling.Parameter.scale", false]], "scale (gammapy.modeling.priorparameter attribute)": [[219, "gammapy.modeling.PriorParameter.scale", false]], "scale_method (gammapy.modeling.parameter attribute)": [[217, "gammapy.modeling.Parameter.scale_method", false]], "scale_method (gammapy.modeling.priorparameter attribute)": [[219, "gammapy.modeling.PriorParameter.scale_method", false]], "scale_plot_flux() (in module gammapy.modeling.models)": [[288, "gammapy.modeling.models.scale_plot_flux", false]], "scale_to_local_density() (gammapy.astro.darkmatter.burkertprofile method)": [[17, "gammapy.astro.darkmatter.BurkertProfile.scale_to_local_density", false]], "scale_to_local_density() (gammapy.astro.darkmatter.dmprofile method)": [[18, "gammapy.astro.darkmatter.DMProfile.scale_to_local_density", false]], "scale_to_local_density() (gammapy.astro.darkmatter.einastoprofile method)": [[21, "gammapy.astro.darkmatter.EinastoProfile.scale_to_local_density", false]], "scale_to_local_density() (gammapy.astro.darkmatter.isothermalprofile method)": [[22, "gammapy.astro.darkmatter.IsothermalProfile.scale_to_local_density", false]], "scale_to_local_density() (gammapy.astro.darkmatter.mooreprofile method)": [[24, "gammapy.astro.darkmatter.MooreProfile.scale_to_local_density", false]], "scale_to_local_density() (gammapy.astro.darkmatter.nfwprofile method)": [[25, "gammapy.astro.darkmatter.NFWProfile.scale_to_local_density", false]], "scale_to_local_density() (gammapy.astro.darkmatter.zhaoprofile method)": [[27, "gammapy.astro.darkmatter.ZhaoProfile.scale_to_local_density", false]], "scaledregulargridinterpolator (class in gammapy.utils.interpolation)": [[326, "gammapy.utils.interpolation.ScaledRegularGridInterpolator", false]], "scalespectralmodel (class in gammapy.modeling.models)": [[263, "gammapy.modeling.models.ScaleSpectralModel", false]], "scan_max (gammapy.modeling.parameter attribute)": [[217, "gammapy.modeling.Parameter.scan_max", false]], "scan_max (gammapy.modeling.priorparameter attribute)": [[219, "gammapy.modeling.PriorParameter.scan_max", false]], "scan_min (gammapy.modeling.parameter attribute)": [[217, "gammapy.modeling.Parameter.scan_min", false]], "scan_min (gammapy.modeling.priorparameter attribute)": [[219, "gammapy.modeling.PriorParameter.scan_min", false]], "scan_n_sigma (gammapy.modeling.parameter attribute)": [[217, "gammapy.modeling.Parameter.scan_n_sigma", false]], "scan_n_sigma (gammapy.modeling.priorparameter attribute)": [[219, "gammapy.modeling.PriorParameter.scan_n_sigma", false]], "scan_values (gammapy.modeling.parameter attribute)": [[217, "gammapy.modeling.Parameter.scan_values", false]], "scan_values (gammapy.modeling.priorparameter attribute)": [[219, "gammapy.modeling.PriorParameter.scan_values", false]], "schema() (gammapy.analysis.analysisconfig class method)": [[16, "gammapy.analysis.AnalysisConfig.schema", false]], "schema() (gammapy.data.eventlistmetadata class method)": [[84, "gammapy.data.EventListMetaData.schema", false]], "schema() (gammapy.data.observationmetadata class method)": [[90, "gammapy.data.ObservationMetaData.schema", false]], "schema() (gammapy.datasets.mapdatasetmetadata class method)": [[105, "gammapy.datasets.MapDatasetMetaData.schema", false]], "schema() (gammapy.estimators.fluxmetadata class method)": [[126, "gammapy.estimators.FluxMetaData.schema", false]], "schema_json() (gammapy.analysis.analysisconfig class method)": [[16, "gammapy.analysis.AnalysisConfig.schema_json", false]], "schema_json() (gammapy.data.eventlistmetadata class method)": [[84, "gammapy.data.EventListMetaData.schema_json", false]], "schema_json() (gammapy.data.observationmetadata class method)": [[90, "gammapy.data.ObservationMetaData.schema_json", false]], "schema_json() (gammapy.datasets.mapdatasetmetadata class method)": [[105, "gammapy.datasets.MapDatasetMetaData.schema_json", false]], "schema_json() (gammapy.estimators.fluxmetadata class method)": [[126, "gammapy.estimators.FluxMetaData.schema_json", false]], "scipy_mvn (gammapy.modeling.covariance attribute)": [[212, "gammapy.modeling.Covariance.scipy_mvn", false]], "sed": [[597, "term-SED", true]], "sed_type_init (gammapy.estimators.fluxmaps attribute)": [[125, "gammapy.estimators.FluxMaps.sed_type_init", false]], "sed_type_init (gammapy.estimators.fluxpoints attribute)": [[127, "gammapy.estimators.FluxPoints.sed_type_init", false]], "sed_type_plot_default (gammapy.estimators.fluxmaps attribute)": [[125, "gammapy.estimators.FluxMaps.sed_type_plot_default", false]], "sed_type_plot_default (gammapy.estimators.fluxpoints attribute)": [[127, "gammapy.estimators.FluxPoints.sed_type_plot_default", false]], "sedov_taylor_begin (gammapy.astro.source.snr attribute)": [[52, "gammapy.astro.source.SNR.sedov_taylor_begin", false]], "sedov_taylor_begin (gammapy.astro.source.snrtruelovemckee attribute)": [[53, "gammapy.astro.source.SNRTrueloveMcKee.sedov_taylor_begin", false]], "sedov_taylor_end (gammapy.astro.source.snr attribute)": [[52, "gammapy.astro.source.SNR.sedov_taylor_end", false]], "sedov_taylor_end (gammapy.astro.source.snrtruelovemckee attribute)": [[53, "gammapy.astro.source.SNRTrueloveMcKee.sedov_taylor_end", false]], "select() (gammapy.modeling.models.datasetmodels method)": [[227, "gammapy.modeling.models.DatasetModels.select", false]], "select() (gammapy.modeling.models.models method)": [[251, "gammapy.modeling.models.Models.select", false]], "select() (gammapy.modeling.parameters method)": [[218, "gammapy.modeling.Parameters.select", false]], "select() (gammapy.modeling.priorparameters method)": [[220, "gammapy.modeling.PriorParameters.select", false]], "select_energy() (gammapy.data.eventlist method)": [[83, "gammapy.data.EventList.select_energy", false]], "select_from_geom() (gammapy.modeling.models.datasetmodels method)": [[227, "gammapy.modeling.models.DatasetModels.select_from_geom", false]], "select_from_geom() (gammapy.modeling.models.models method)": [[251, "gammapy.modeling.models.Models.select_from_geom", false]], "select_mask() (gammapy.data.eventlist method)": [[83, "gammapy.data.EventList.select_mask", false]], "select_mask() (gammapy.modeling.models.datasetmodels method)": [[227, "gammapy.modeling.models.DatasetModels.select_mask", false]], "select_mask() (gammapy.modeling.models.models method)": [[251, "gammapy.modeling.models.Models.select_mask", false]], "select_nested_models() (in module gammapy.modeling)": [[290, "gammapy.modeling.select_nested_models", false]], "select_obs_id() (gammapy.data.observationtable method)": [[91, "gammapy.data.ObservationTable.select_obs_id", false]], "select_observations() (gammapy.data.observationtable method)": [[91, "gammapy.data.ObservationTable.select_observations", false]], "select_offset() (gammapy.data.eventlist method)": [[83, "gammapy.data.EventList.select_offset", false]], "select_parameter() (gammapy.data.eventlist method)": [[83, "gammapy.data.EventList.select_parameter", false]], "select_rad_max() (gammapy.data.eventlist method)": [[83, "gammapy.data.EventList.select_rad_max", false]], "select_range() (gammapy.data.observationtable method)": [[91, "gammapy.data.ObservationTable.select_range", false]], "select_region() (gammapy.data.eventlist method)": [[83, "gammapy.data.EventList.select_region", false]], "select_region() (gammapy.modeling.models.datasetmodels method)": [[227, "gammapy.modeling.models.DatasetModels.select_region", false]], "select_region() (gammapy.modeling.models.models method)": [[251, "gammapy.modeling.models.Models.select_region", false]], "select_row_subset() (gammapy.data.eventlist method)": [[83, "gammapy.data.EventList.select_row_subset", false]], "select_sky_circle() (gammapy.data.observationtable method)": [[91, "gammapy.data.ObservationTable.select_sky_circle", false]], "select_time() (gammapy.data.eventlist method)": [[83, "gammapy.data.EventList.select_time", false]], "select_time() (gammapy.data.gti method)": [[86, "gammapy.data.GTI.select_time", false]], "select_time() (gammapy.data.observation method)": [[88, "gammapy.data.Observation.select_time", false]], "select_time() (gammapy.data.observations method)": [[92, "gammapy.data.Observations.select_time", false]], "select_time() (gammapy.datasets.datasets method)": [[100, "gammapy.datasets.Datasets.select_time", false]], "select_time_range() (gammapy.data.observationtable method)": [[91, "gammapy.data.ObservationTable.select_time_range", false]], "selection_all (gammapy.estimators.tsmapestimator attribute)": [[136, "gammapy.estimators.TSMapEstimator.selection_all", false]], "selection_all() (gammapy.estimators.asmoothmapestimator method)": [[120, "gammapy.estimators.ASmoothMapEstimator.selection_all", false]], "selection_mask() (gammapy.modeling.models.datasetmodels method)": [[227, "gammapy.modeling.models.DatasetModels.selection_mask", false]], "selection_mask() (gammapy.modeling.models.models method)": [[251, "gammapy.modeling.models.Models.selection_mask", false]], "selection_optional (gammapy.estimators.asmoothmapestimator attribute)": [[120, "gammapy.estimators.ASmoothMapEstimator.selection_optional", false]], "selection_optional (gammapy.estimators.energydependentmorphologyestimator attribute)": [[122, "gammapy.estimators.EnergyDependentMorphologyEstimator.selection_optional", false]], "selection_optional (gammapy.estimators.estimator attribute)": [[123, "gammapy.estimators.Estimator.selection_optional", false]], "selection_optional (gammapy.estimators.excessmapestimator attribute)": [[124, "gammapy.estimators.ExcessMapEstimator.selection_optional", false]], "selection_optional (gammapy.estimators.fluxpointsestimator attribute)": [[128, "gammapy.estimators.FluxPointsEstimator.selection_optional", false]], "selection_optional (gammapy.estimators.fluxprofileestimator attribute)": [[129, "gammapy.estimators.FluxProfileEstimator.selection_optional", false]], "selection_optional (gammapy.estimators.imageprofileestimator attribute)": [[131, "gammapy.estimators.ImageProfileEstimator.selection_optional", false]], "selection_optional (gammapy.estimators.lightcurveestimator attribute)": [[132, "gammapy.estimators.LightCurveEstimator.selection_optional", false]], "selection_optional (gammapy.estimators.parameterestimator attribute)": [[133, "gammapy.estimators.ParameterEstimator.selection_optional", false]], "selection_optional (gammapy.estimators.sensitivityestimator attribute)": [[135, "gammapy.estimators.SensitivityEstimator.selection_optional", false]], "selection_optional (gammapy.estimators.tsmapestimator attribute)": [[136, "gammapy.estimators.TSMapEstimator.selection_optional", false]], "sensitivityestimator (class in gammapy.estimators)": [[135, "gammapy.estimators.SensitivityEstimator", false]], "separable (gammapy.astro.population.casebattacharya1998 attribute)": [[28, "gammapy.astro.population.CaseBattacharya1998.separable", false]], "separable (gammapy.astro.population.exponential attribute)": [[29, "gammapy.astro.population.Exponential.separable", false]], "separable (gammapy.astro.population.faucherkaspi2006 attribute)": [[30, "gammapy.astro.population.FaucherKaspi2006.separable", false]], "separable (gammapy.astro.population.faucherkaspi2006velocitybimodal attribute)": [[31, "gammapy.astro.population.FaucherKaspi2006VelocityBimodal.separable", false]], "separable (gammapy.astro.population.faucherkaspi2006velocitymaxwellian attribute)": [[32, "gammapy.astro.population.FaucherKaspi2006VelocityMaxwellian.separable", false]], "separable (gammapy.astro.population.lorimer2006 attribute)": [[35, "gammapy.astro.population.Lorimer2006.separable", false]], "separable (gammapy.astro.population.paczynski1990 attribute)": [[36, "gammapy.astro.population.Paczynski1990.separable", false]], "separable (gammapy.astro.population.paczynski1990velocity attribute)": [[37, "gammapy.astro.population.Paczynski1990Velocity.separable", false]], "separable (gammapy.astro.population.yusifovkucuk2004 attribute)": [[39, "gammapy.astro.population.YusifovKucuk2004.separable", false]], "separable (gammapy.astro.population.yusifovkucuk2004b attribute)": [[40, "gammapy.astro.population.YusifovKucuk2004B.separable", false]], "separation() (gammapy.maps.hpxgeom method)": [[195, "gammapy.maps.HpxGeom.separation", false]], "separation() (gammapy.maps.regiongeom method)": [[204, "gammapy.maps.RegionGeom.separation", false]], "separation() (gammapy.maps.wcsgeom method)": [[207, "gammapy.maps.WcsGeom.separation", false]], "set_by_coord() (gammapy.maps.hpxmap method)": [[196, "gammapy.maps.HpxMap.set_by_coord", false]], "set_by_coord() (gammapy.maps.hpxndmap method)": [[197, "gammapy.maps.HpxNDMap.set_by_coord", false]], "set_by_coord() (gammapy.maps.map method)": [[199, "gammapy.maps.Map.set_by_coord", false]], "set_by_coord() (gammapy.maps.regionndmap method)": [[205, "gammapy.maps.RegionNDMap.set_by_coord", false]], "set_by_coord() (gammapy.maps.wcsmap method)": [[208, "gammapy.maps.WcsMap.set_by_coord", false]], "set_by_coord() (gammapy.maps.wcsndmap method)": [[209, "gammapy.maps.WcsNDMap.set_by_coord", false]], "set_by_idx() (gammapy.maps.hpxmap method)": [[196, "gammapy.maps.HpxMap.set_by_idx", false]], "set_by_idx() (gammapy.maps.hpxndmap method)": [[197, "gammapy.maps.HpxNDMap.set_by_idx", false]], "set_by_idx() (gammapy.maps.map method)": [[199, "gammapy.maps.Map.set_by_idx", false]], "set_by_idx() (gammapy.maps.regionndmap method)": [[205, "gammapy.maps.RegionNDMap.set_by_idx", false]], "set_by_idx() (gammapy.maps.wcsmap method)": [[208, "gammapy.maps.WcsMap.set_by_idx", false]], "set_by_idx() (gammapy.maps.wcsndmap method)": [[209, "gammapy.maps.WcsNDMap.set_by_idx", false]], "set_by_pix() (gammapy.maps.hpxmap method)": [[196, "gammapy.maps.HpxMap.set_by_pix", false]], "set_by_pix() (gammapy.maps.hpxndmap method)": [[197, "gammapy.maps.HpxNDMap.set_by_pix", false]], "set_by_pix() (gammapy.maps.map method)": [[199, "gammapy.maps.Map.set_by_pix", false]], "set_by_pix() (gammapy.maps.regionndmap method)": [[205, "gammapy.maps.RegionNDMap.set_by_pix", false]], "set_by_pix() (gammapy.maps.wcsmap method)": [[208, "gammapy.maps.WcsMap.set_by_pix", false]], "set_by_pix() (gammapy.maps.wcsndmap method)": [[209, "gammapy.maps.WcsNDMap.set_by_pix", false]], "set_lim() (gammapy.modeling.parameter method)": [[217, "gammapy.modeling.Parameter.set_lim", false]], "set_lim() (gammapy.modeling.priorparameter method)": [[219, "gammapy.modeling.PriorParameter.set_lim", false]], "set_logging() (gammapy.analysis.analysisconfig method)": [[16, "gammapy.analysis.AnalysisConfig.set_logging", false]], "set_models() (gammapy.analysis.analysis method)": [[15, "gammapy.analysis.Analysis.set_models", false]], "set_parameter_factors() (gammapy.modeling.parameters method)": [[218, "gammapy.modeling.Parameters.set_parameter_factors", false]], "set_parameter_factors() (gammapy.modeling.priorparameters method)": [[220, "gammapy.modeling.PriorParameters.set_parameter_factors", false]], "set_parameters_bounds() (gammapy.modeling.models.datasetmodels method)": [[227, "gammapy.modeling.models.DatasetModels.set_parameters_bounds", false]], "set_parameters_bounds() (gammapy.modeling.models.models method)": [[251, "gammapy.modeling.models.Models.set_parameters_bounds", false]], "set_prior() (gammapy.modeling.models.models method)": [[251, "gammapy.modeling.models.Models.set_prior", false]], "set_slice_args() (gammapy.astro.population.casebattacharya1998 method)": [[28, "gammapy.astro.population.CaseBattacharya1998.set_slice_args", false]], "set_slice_args() (gammapy.astro.population.exponential method)": [[29, "gammapy.astro.population.Exponential.set_slice_args", false]], "set_slice_args() (gammapy.astro.population.faucherkaspi2006 method)": [[30, "gammapy.astro.population.FaucherKaspi2006.set_slice_args", false]], "set_slice_args() (gammapy.astro.population.faucherkaspi2006velocitybimodal method)": [[31, "gammapy.astro.population.FaucherKaspi2006VelocityBimodal.set_slice_args", false]], "set_slice_args() (gammapy.astro.population.faucherkaspi2006velocitymaxwellian method)": [[32, "gammapy.astro.population.FaucherKaspi2006VelocityMaxwellian.set_slice_args", false]], "set_slice_args() (gammapy.astro.population.lorimer2006 method)": [[35, "gammapy.astro.population.Lorimer2006.set_slice_args", false]], "set_slice_args() (gammapy.astro.population.paczynski1990 method)": [[36, "gammapy.astro.population.Paczynski1990.set_slice_args", false]], "set_slice_args() (gammapy.astro.population.paczynski1990velocity method)": [[37, "gammapy.astro.population.Paczynski1990Velocity.set_slice_args", false]], "set_slice_args() (gammapy.astro.population.yusifovkucuk2004 method)": [[39, "gammapy.astro.population.YusifovKucuk2004.set_slice_args", false]], "set_slice_args() (gammapy.astro.population.yusifovkucuk2004b method)": [[40, "gammapy.astro.population.YusifovKucuk2004B.set_slice_args", false]], "set_subcovariance() (gammapy.modeling.covariance method)": [[212, "gammapy.modeling.Covariance.set_subcovariance", false]], "setdefault() (gammapy.maps.maps method)": [[203, "gammapy.maps.Maps.setdefault", false]], "shape (gammapy.maps.mapaxes attribute)": [[200, "gammapy.maps.MapAxes.shape", false]], "shape (gammapy.maps.mapcoord attribute)": [[202, "gammapy.maps.MapCoord.shape", false]], "shape (gammapy.modeling.covariance attribute)": [[212, "gammapy.modeling.Covariance.shape", false]], "shape_axes (gammapy.maps.hpxgeom attribute)": [[195, "gammapy.maps.HpxGeom.shape_axes", false]], "shape_axes (gammapy.maps.wcsgeom attribute)": [[207, "gammapy.maps.WcsGeom.shape_axes", false]], "shell2spatialmodel (class in gammapy.modeling.models)": [[264, "gammapy.modeling.models.Shell2SpatialModel", false]], "shellspatialmodel (class in gammapy.modeling.models)": [[265, "gammapy.modeling.models.ShellSpatialModel", false]], "show_in_browser() (gammapy.data.hduindextable method)": [[87, "gammapy.data.HDUIndexTable.show_in_browser", false]], "show_in_browser() (gammapy.data.observationtable method)": [[91, "gammapy.data.ObservationTable.show_in_browser", false]], "show_in_notebook() (gammapy.data.hduindextable method)": [[87, "gammapy.data.HDUIndexTable.show_in_notebook", false]], "show_in_notebook() (gammapy.data.observationtable method)": [[91, "gammapy.data.ObservationTable.show_in_notebook", false]], "sigma (gammapy.astro.population.faucherkaspi2006 attribute)": [[30, "gammapy.astro.population.FaucherKaspi2006.sigma", false]], "sigma (gammapy.astro.population.faucherkaspi2006velocitymaxwellian attribute)": [[32, "gammapy.astro.population.FaucherKaspi2006VelocityMaxwellian.sigma", false]], "sigma (gammapy.modeling.models.gaussianprior attribute)": [[236, "gammapy.modeling.models.GaussianPrior.sigma", false]], "sigma (gammapy.modeling.models.gaussianspatialmodel attribute)": [[237, "gammapy.modeling.models.GaussianSpatialModel.sigma", false]], "sigma (gammapy.modeling.models.gaussianspectralmodel attribute)": [[238, "gammapy.modeling.models.GaussianSpectralModel.sigma", false]], "sigma (gammapy.modeling.models.gaussiantemporalmodel attribute)": [[239, "gammapy.modeling.models.GaussianTemporalModel.sigma", false]], "sigma_1 (gammapy.astro.population.faucherkaspi2006velocitybimodal attribute)": [[31, "gammapy.astro.population.FaucherKaspi2006VelocityBimodal.sigma_1", false]], "sigma_2 (gammapy.astro.population.faucherkaspi2006velocitybimodal attribute)": [[31, "gammapy.astro.population.FaucherKaspi2006VelocityBimodal.sigma_2", false]], "sigma_to_ts() (in module gammapy.stats)": [[307, "gammapy.stats.sigma_to_ts", false]], "simplepulsar (class in gammapy.astro.source)": [[54, "gammapy.astro.source.SimplePulsar", false]], "simulate_observation() (gammapy.data.observationseventssampler method)": [[93, "gammapy.data.ObservationsEventsSampler.simulate_observation", false]], "sinetemporalmodel (class in gammapy.modeling.models)": [[266, "gammapy.modeling.models.SineTemporalModel", false]], "size (gammapy.maps.mapcoord attribute)": [[202, "gammapy.maps.MapCoord.size", false]], "sky_model() (gammapy.catalog.sourcecatalogobject1lhaaso method)": [[70, "gammapy.catalog.SourceCatalogObject1LHAASO.sky_model", false]], "sky_model() (gammapy.catalog.sourcecatalogobject2fhl method)": [[71, "gammapy.catalog.SourceCatalogObject2FHL.sky_model", false]], "sky_model() (gammapy.catalog.sourcecatalogobject2hwc method)": [[72, "gammapy.catalog.SourceCatalogObject2HWC.sky_model", false]], "sky_model() (gammapy.catalog.sourcecatalogobject2pc method)": [[73, "gammapy.catalog.SourceCatalogObject2PC.sky_model", false]], "sky_model() (gammapy.catalog.sourcecatalogobject3fgl method)": [[74, "gammapy.catalog.SourceCatalogObject3FGL.sky_model", false]], "sky_model() (gammapy.catalog.sourcecatalogobject3fhl method)": [[75, "gammapy.catalog.SourceCatalogObject3FHL.sky_model", false]], "sky_model() (gammapy.catalog.sourcecatalogobject3hwc method)": [[76, "gammapy.catalog.SourceCatalogObject3HWC.sky_model", false]], "sky_model() (gammapy.catalog.sourcecatalogobject3pc method)": [[77, "gammapy.catalog.SourceCatalogObject3PC.sky_model", false]], "sky_model() (gammapy.catalog.sourcecatalogobject4fgl method)": [[78, "gammapy.catalog.SourceCatalogObject4FGL.sky_model", false]], "sky_model() (gammapy.catalog.sourcecatalogobjectgammacat method)": [[79, "gammapy.catalog.SourceCatalogObjectGammaCat.sky_model", false]], "sky_model() (gammapy.catalog.sourcecatalogobjecthgps method)": [[80, "gammapy.catalog.SourceCatalogObjectHGPS.sky_model", false]], "sky_to_fov() (in module gammapy.utils.coordinates)": [[320, "gammapy.utils.coordinates.sky_to_fov", false]], "skycoord (gammapy.maps.mapcoord attribute)": [[202, "gammapy.maps.MapCoord.skycoord", false]], "skymodel (class in gammapy.modeling.models)": [[267, "gammapy.modeling.models.SkyModel", false]], "slice() (gammapy.maps.labelmapaxis method)": [[198, "gammapy.maps.LabelMapAxis.slice", false]], "slice() (gammapy.maps.mapaxis method)": [[201, "gammapy.maps.MapAxis.slice", false]], "slice() (gammapy.maps.timemapaxis method)": [[206, "gammapy.maps.TimeMapAxis.slice", false]], "slice_by_coord() (gammapy.estimators.fluxmaps method)": [[125, "gammapy.estimators.FluxMaps.slice_by_coord", false]], "slice_by_coord() (gammapy.estimators.fluxpoints method)": [[127, "gammapy.estimators.FluxPoints.slice_by_coord", false]], "slice_by_energy() (gammapy.datasets.datasets method)": [[100, "gammapy.datasets.Datasets.slice_by_energy", false]], "slice_by_energy() (gammapy.datasets.mapdataset method)": [[103, "gammapy.datasets.MapDataset.slice_by_energy", false]], "slice_by_energy() (gammapy.datasets.mapdatasetonoff method)": [[106, "gammapy.datasets.MapDatasetOnOff.slice_by_energy", false]], "slice_by_energy() (gammapy.datasets.spectrumdataset method)": [[110, "gammapy.datasets.SpectrumDataset.slice_by_energy", false]], "slice_by_energy() (gammapy.datasets.spectrumdatasetonoff method)": [[111, "gammapy.datasets.SpectrumDatasetOnOff.slice_by_energy", false]], "slice_by_energy() (gammapy.estimators.fluxmaps method)": [[125, "gammapy.estimators.FluxMaps.slice_by_energy", false]], "slice_by_energy() (gammapy.estimators.fluxpoints method)": [[127, "gammapy.estimators.FluxPoints.slice_by_energy", false]], "slice_by_energy() (gammapy.modeling.models.templatenpredmodel method)": [[277, "gammapy.modeling.models.TemplateNPredModel.slice_by_energy", false]], "slice_by_idx() (gammapy.datasets.mapdataset method)": [[103, "gammapy.datasets.MapDataset.slice_by_idx", false]], "slice_by_idx() (gammapy.datasets.mapdatasetonoff method)": [[106, "gammapy.datasets.MapDatasetOnOff.slice_by_idx", false]], "slice_by_idx() (gammapy.datasets.spectrumdataset method)": [[110, "gammapy.datasets.SpectrumDataset.slice_by_idx", false]], "slice_by_idx() (gammapy.datasets.spectrumdatasetonoff method)": [[111, "gammapy.datasets.SpectrumDatasetOnOff.slice_by_idx", false]], "slice_by_idx() (gammapy.estimators.fluxmaps method)": [[125, "gammapy.estimators.FluxMaps.slice_by_idx", false]], "slice_by_idx() (gammapy.estimators.fluxpoints method)": [[127, "gammapy.estimators.FluxPoints.slice_by_idx", false]], "slice_by_idx() (gammapy.irf.background2d method)": [[150, "gammapy.irf.Background2D.slice_by_idx", false]], "slice_by_idx() (gammapy.irf.background3d method)": [[151, "gammapy.irf.Background3D.slice_by_idx", false]], "slice_by_idx() (gammapy.irf.backgroundirf method)": [[152, "gammapy.irf.BackgroundIRF.slice_by_idx", false]], "slice_by_idx() (gammapy.irf.edispkernel method)": [[153, "gammapy.irf.EDispKernel.slice_by_idx", false]], "slice_by_idx() (gammapy.irf.edispkernelmap method)": [[154, "gammapy.irf.EDispKernelMap.slice_by_idx", false]], "slice_by_idx() (gammapy.irf.edispmap method)": [[155, "gammapy.irf.EDispMap.slice_by_idx", false]], "slice_by_idx() (gammapy.irf.effectiveareatable2d method)": [[156, "gammapy.irf.EffectiveAreaTable2D.slice_by_idx", false]], "slice_by_idx() (gammapy.irf.energydependentmultigausspsf method)": [[157, "gammapy.irf.EnergyDependentMultiGaussPSF.slice_by_idx", false]], "slice_by_idx() (gammapy.irf.energydispersion2d method)": [[158, "gammapy.irf.EnergyDispersion2D.slice_by_idx", false]], "slice_by_idx() (gammapy.irf.irf method)": [[160, "gammapy.irf.IRF.slice_by_idx", false]], "slice_by_idx() (gammapy.irf.irfmap method)": [[161, "gammapy.irf.IRFMap.slice_by_idx", false]], "slice_by_idx() (gammapy.irf.parametricpsf method)": [[167, "gammapy.irf.ParametricPSF.slice_by_idx", false]], "slice_by_idx() (gammapy.irf.psf3d method)": [[163, "gammapy.irf.PSF3D.slice_by_idx", false]], "slice_by_idx() (gammapy.irf.psfkernel method)": [[164, "gammapy.irf.PSFKernel.slice_by_idx", false]], "slice_by_idx() (gammapy.irf.psfking method)": [[165, "gammapy.irf.PSFKing.slice_by_idx", false]], "slice_by_idx() (gammapy.irf.psfmap method)": [[166, "gammapy.irf.PSFMap.slice_by_idx", false]], "slice_by_idx() (gammapy.irf.radmax2d method)": [[168, "gammapy.irf.RadMax2D.slice_by_idx", false]], "slice_by_idx() (gammapy.irf.recopsfmap method)": [[169, "gammapy.irf.RecoPSFMap.slice_by_idx", false]], "slice_by_idx() (gammapy.maps.geom method)": [[194, "gammapy.maps.Geom.slice_by_idx", false]], "slice_by_idx() (gammapy.maps.hpxgeom method)": [[195, "gammapy.maps.HpxGeom.slice_by_idx", false]], "slice_by_idx() (gammapy.maps.hpxmap method)": [[196, "gammapy.maps.HpxMap.slice_by_idx", false]], "slice_by_idx() (gammapy.maps.hpxndmap method)": [[197, "gammapy.maps.HpxNDMap.slice_by_idx", false]], "slice_by_idx() (gammapy.maps.map method)": [[199, "gammapy.maps.Map.slice_by_idx", false]], "slice_by_idx() (gammapy.maps.mapaxes method)": [[200, "gammapy.maps.MapAxes.slice_by_idx", false]], "slice_by_idx() (gammapy.maps.regiongeom method)": [[204, "gammapy.maps.RegionGeom.slice_by_idx", false]], "slice_by_idx() (gammapy.maps.regionndmap method)": [[205, "gammapy.maps.RegionNDMap.slice_by_idx", false]], "slice_by_idx() (gammapy.maps.wcsgeom method)": [[207, "gammapy.maps.WcsGeom.slice_by_idx", false]], "slice_by_idx() (gammapy.maps.wcsmap method)": [[208, "gammapy.maps.WcsMap.slice_by_idx", false]], "slice_by_idx() (gammapy.maps.wcsndmap method)": [[209, "gammapy.maps.WcsNDMap.slice_by_idx", false]], "slice_by_time() (gammapy.estimators.fluxmaps method)": [[125, "gammapy.estimators.FluxMaps.slice_by_time", false]], "slice_by_time() (gammapy.estimators.fluxpoints method)": [[127, "gammapy.estimators.FluxPoints.slice_by_time", false]], "smooth() (gammapy.estimators.imageprofile method)": [[130, "gammapy.estimators.ImageProfile.smooth", false]], "smooth() (gammapy.maps.hpxndmap method)": [[197, "gammapy.maps.HpxNDMap.smooth", false]], "smooth() (gammapy.maps.wcsndmap method)": [[209, "gammapy.maps.WcsNDMap.smooth", false]], "smoothbrokenpowerlawspectralmodel (class in gammapy.modeling.models)": [[268, "gammapy.modeling.models.SmoothBrokenPowerLawSpectralModel", false]], "snr (class in gammapy.astro.source)": [[52, "gammapy.astro.source.SNR", false]], "snrtruelovemckee (class in gammapy.astro.source)": [[53, "gammapy.astro.source.SNRTrueloveMcKee", false]], "solid_angle() (gammapy.maps.geom method)": [[194, "gammapy.maps.Geom.solid_angle", false]], "solid_angle() (gammapy.maps.hpxgeom method)": [[195, "gammapy.maps.HpxGeom.solid_angle", false]], "solid_angle() (gammapy.maps.regiongeom method)": [[204, "gammapy.maps.RegionGeom.solid_angle", false]], "solid_angle() (gammapy.maps.wcsgeom method)": [[207, "gammapy.maps.WcsGeom.solid_angle", false]], "sort() (gammapy.data.hduindextable method)": [[87, "gammapy.data.HDUIndexTable.sort", false]], "sort() (gammapy.data.observationtable method)": [[91, "gammapy.data.ObservationTable.sort", false]], "source_name() (gammapy.catalog.sourcecatalog method)": [[56, "gammapy.catalog.SourceCatalog.source_name", false]], "source_name() (gammapy.catalog.sourcecatalog1lhaaso method)": [[57, "gammapy.catalog.SourceCatalog1LHAASO.source_name", false]], "source_name() (gammapy.catalog.sourcecatalog2fhl method)": [[58, "gammapy.catalog.SourceCatalog2FHL.source_name", false]], "source_name() (gammapy.catalog.sourcecatalog2hwc method)": [[59, "gammapy.catalog.SourceCatalog2HWC.source_name", false]], "source_name() (gammapy.catalog.sourcecatalog2pc method)": [[60, "gammapy.catalog.SourceCatalog2PC.source_name", false]], "source_name() (gammapy.catalog.sourcecatalog3fgl method)": [[61, "gammapy.catalog.SourceCatalog3FGL.source_name", false]], "source_name() (gammapy.catalog.sourcecatalog3fhl method)": [[62, "gammapy.catalog.SourceCatalog3FHL.source_name", false]], "source_name() (gammapy.catalog.sourcecatalog3hwc method)": [[63, "gammapy.catalog.SourceCatalog3HWC.source_name", false]], "source_name() (gammapy.catalog.sourcecatalog3pc method)": [[64, "gammapy.catalog.SourceCatalog3PC.source_name", false]], "source_name() (gammapy.catalog.sourcecatalog4fgl method)": [[65, "gammapy.catalog.SourceCatalog4FGL.source_name", false]], "source_name() (gammapy.catalog.sourcecataloggammacat method)": [[66, "gammapy.catalog.SourceCatalogGammaCat.source_name", false]], "source_name() (gammapy.catalog.sourcecataloghgps method)": [[67, "gammapy.catalog.SourceCatalogHGPS.source_name", false]], "sourcecatalog (class in gammapy.catalog)": [[56, "gammapy.catalog.SourceCatalog", false]], "sourcecatalog1lhaaso (class in gammapy.catalog)": [[57, "gammapy.catalog.SourceCatalog1LHAASO", false]], "sourcecatalog2fhl (class in gammapy.catalog)": [[58, "gammapy.catalog.SourceCatalog2FHL", false]], "sourcecatalog2hwc (class in gammapy.catalog)": [[59, "gammapy.catalog.SourceCatalog2HWC", false]], "sourcecatalog2pc (class in gammapy.catalog)": [[60, "gammapy.catalog.SourceCatalog2PC", false]], "sourcecatalog3fgl (class in gammapy.catalog)": [[61, "gammapy.catalog.SourceCatalog3FGL", false]], "sourcecatalog3fhl (class in gammapy.catalog)": [[62, "gammapy.catalog.SourceCatalog3FHL", false]], "sourcecatalog3hwc (class in gammapy.catalog)": [[63, "gammapy.catalog.SourceCatalog3HWC", false]], "sourcecatalog3pc (class in gammapy.catalog)": [[64, "gammapy.catalog.SourceCatalog3PC", false]], "sourcecatalog4fgl (class in gammapy.catalog)": [[65, "gammapy.catalog.SourceCatalog4FGL", false]], "sourcecataloggammacat (class in gammapy.catalog)": [[66, "gammapy.catalog.SourceCatalogGammaCat", false]], "sourcecataloghgps (class in gammapy.catalog)": [[67, "gammapy.catalog.SourceCatalogHGPS", false]], "sourcecataloglargescalehgps (class in gammapy.catalog)": [[68, "gammapy.catalog.SourceCatalogLargeScaleHGPS", false]], "sourcecatalogobject (class in gammapy.catalog)": [[69, "gammapy.catalog.SourceCatalogObject", false]], "sourcecatalogobject1lhaaso (class in gammapy.catalog)": [[70, "gammapy.catalog.SourceCatalogObject1LHAASO", false]], "sourcecatalogobject2fhl (class in gammapy.catalog)": [[71, "gammapy.catalog.SourceCatalogObject2FHL", false]], "sourcecatalogobject2hwc (class in gammapy.catalog)": [[72, "gammapy.catalog.SourceCatalogObject2HWC", false]], "sourcecatalogobject2pc (class in gammapy.catalog)": [[73, "gammapy.catalog.SourceCatalogObject2PC", false]], "sourcecatalogobject3fgl (class in gammapy.catalog)": [[74, "gammapy.catalog.SourceCatalogObject3FGL", false]], "sourcecatalogobject3fhl (class in gammapy.catalog)": [[75, "gammapy.catalog.SourceCatalogObject3FHL", false]], "sourcecatalogobject3hwc (class in gammapy.catalog)": [[76, "gammapy.catalog.SourceCatalogObject3HWC", false]], "sourcecatalogobject3pc (class in gammapy.catalog)": [[77, "gammapy.catalog.SourceCatalogObject3PC", false]], "sourcecatalogobject4fgl (class in gammapy.catalog)": [[78, "gammapy.catalog.SourceCatalogObject4FGL", false]], "sourcecatalogobjectgammacat (class in gammapy.catalog)": [[79, "gammapy.catalog.SourceCatalogObjectGammaCat", false]], "sourcecatalogobjecthgps (class in gammapy.catalog)": [[80, "gammapy.catalog.SourceCatalogObjectHGPS", false]], "sourcecatalogobjecthgpscomponent (class in gammapy.catalog)": [[81, "gammapy.catalog.SourceCatalogObjectHGPSComponent", false]], "spatial_model (gammapy.modeling.models.fovbackgroundmodel attribute)": [[235, "gammapy.modeling.models.FoVBackgroundModel.spatial_model", false]], "spatial_model (gammapy.modeling.models.skymodel attribute)": [[267, "gammapy.modeling.models.SkyModel.spatial_model", false]], "spatial_model() (gammapy.catalog.sourcecatalogobject1lhaaso method)": [[70, "gammapy.catalog.SourceCatalogObject1LHAASO.spatial_model", false]], "spatial_model() (gammapy.catalog.sourcecatalogobject2fhl method)": [[71, "gammapy.catalog.SourceCatalogObject2FHL.spatial_model", false]], "spatial_model() (gammapy.catalog.sourcecatalogobject2hwc method)": [[72, "gammapy.catalog.SourceCatalogObject2HWC.spatial_model", false]], "spatial_model() (gammapy.catalog.sourcecatalogobject2pc method)": [[73, "gammapy.catalog.SourceCatalogObject2PC.spatial_model", false]], "spatial_model() (gammapy.catalog.sourcecatalogobject3fgl method)": [[74, "gammapy.catalog.SourceCatalogObject3FGL.spatial_model", false]], "spatial_model() (gammapy.catalog.sourcecatalogobject3fhl method)": [[75, "gammapy.catalog.SourceCatalogObject3FHL.spatial_model", false]], "spatial_model() (gammapy.catalog.sourcecatalogobject3hwc method)": [[76, "gammapy.catalog.SourceCatalogObject3HWC.spatial_model", false]], "spatial_model() (gammapy.catalog.sourcecatalogobject3pc method)": [[77, "gammapy.catalog.SourceCatalogObject3PC.spatial_model", false]], "spatial_model() (gammapy.catalog.sourcecatalogobject4fgl method)": [[78, "gammapy.catalog.SourceCatalogObject4FGL.spatial_model", false]], "spatial_model() (gammapy.catalog.sourcecatalogobjectgammacat method)": [[79, "gammapy.catalog.SourceCatalogObjectGammaCat.spatial_model", false]], "spatial_model() (gammapy.catalog.sourcecatalogobjecthgps method)": [[80, "gammapy.catalog.SourceCatalogObjectHGPS.spatial_model", false]], "spatial_model() (gammapy.catalog.sourcecatalogobjecthgpscomponent method)": [[81, "gammapy.catalog.SourceCatalogObjectHGPSComponent.spatial_model", false]], "spatial_model_registry (in module gammapy.modeling.models)": [[261, "gammapy.modeling.models.SPATIAL_MODEL_REGISTRY", false]], "spatialmodel (class in gammapy.modeling.models)": [[269, "gammapy.modeling.models.SpatialModel", false]], "spectral_index() (gammapy.astro.darkmatter.darkmatterannihilationspectralmodel method)": [[19, "gammapy.astro.darkmatter.DarkMatterAnnihilationSpectralModel.spectral_index", false]], "spectral_index() (gammapy.astro.darkmatter.darkmatterdecayspectralmodel method)": [[20, "gammapy.astro.darkmatter.DarkMatterDecaySpectralModel.spectral_index", false]], "spectral_index() (gammapy.astro.darkmatter.primaryflux method)": [[26, "gammapy.astro.darkmatter.PrimaryFlux.spectral_index", false]], "spectral_index() (gammapy.modeling.models.brokenpowerlawspectralmodel method)": [[221, "gammapy.modeling.models.BrokenPowerLawSpectralModel.spectral_index", false]], "spectral_index() (gammapy.modeling.models.compoundspectralmodel method)": [[222, "gammapy.modeling.models.CompoundSpectralModel.spectral_index", false]], "spectral_index() (gammapy.modeling.models.constantspectralmodel method)": [[225, "gammapy.modeling.models.ConstantSpectralModel.spectral_index", false]], "spectral_index() (gammapy.modeling.models.eblabsorptionnormspectralmodel method)": [[229, "gammapy.modeling.models.EBLAbsorptionNormSpectralModel.spectral_index", false]], "spectral_index() (gammapy.modeling.models.expcutoffpowerlaw3fglspectralmodel method)": [[231, "gammapy.modeling.models.ExpCutoffPowerLaw3FGLSpectralModel.spectral_index", false]], "spectral_index() (gammapy.modeling.models.expcutoffpowerlawnormspectralmodel method)": [[232, "gammapy.modeling.models.ExpCutoffPowerLawNormSpectralModel.spectral_index", false]], "spectral_index() (gammapy.modeling.models.expcutoffpowerlawspectralmodel method)": [[233, "gammapy.modeling.models.ExpCutoffPowerLawSpectralModel.spectral_index", false]], "spectral_index() (gammapy.modeling.models.gaussianspectralmodel method)": [[238, "gammapy.modeling.models.GaussianSpectralModel.spectral_index", false]], "spectral_index() (gammapy.modeling.models.logparabolanormspectralmodel method)": [[244, "gammapy.modeling.models.LogParabolaNormSpectralModel.spectral_index", false]], "spectral_index() (gammapy.modeling.models.logparabolaspectralmodel method)": [[245, "gammapy.modeling.models.LogParabolaSpectralModel.spectral_index", false]], "spectral_index() (gammapy.modeling.models.meyercrabspectralmodel method)": [[248, "gammapy.modeling.models.MeyerCrabSpectralModel.spectral_index", false]], "spectral_index() (gammapy.modeling.models.naimaspectralmodel method)": [[252, "gammapy.modeling.models.NaimaSpectralModel.spectral_index", false]], "spectral_index() (gammapy.modeling.models.piecewisenormspectralmodel method)": [[254, "gammapy.modeling.models.PiecewiseNormSpectralModel.spectral_index", false]], "spectral_index() (gammapy.modeling.models.powerlaw2spectralmodel method)": [[256, "gammapy.modeling.models.PowerLaw2SpectralModel.spectral_index", false]], "spectral_index() (gammapy.modeling.models.powerlawnormspectralmodel method)": [[257, "gammapy.modeling.models.PowerLawNormSpectralModel.spectral_index", false]], "spectral_index() (gammapy.modeling.models.powerlawspectralmodel method)": [[258, "gammapy.modeling.models.PowerLawSpectralModel.spectral_index", false]], "spectral_index() (gammapy.modeling.models.scalespectralmodel method)": [[263, "gammapy.modeling.models.ScaleSpectralModel.spectral_index", false]], "spectral_index() (gammapy.modeling.models.smoothbrokenpowerlawspectralmodel method)": [[268, "gammapy.modeling.models.SmoothBrokenPowerLawSpectralModel.spectral_index", false]], "spectral_index() (gammapy.modeling.models.spectralmodel method)": [[270, "gammapy.modeling.models.SpectralModel.spectral_index", false]], "spectral_index() (gammapy.modeling.models.superexpcutoffpowerlaw3fglspectralmodel method)": [[271, "gammapy.modeling.models.SuperExpCutoffPowerLaw3FGLSpectralModel.spectral_index", false]], "spectral_index() (gammapy.modeling.models.superexpcutoffpowerlaw4fgldr3spectralmodel method)": [[272, "gammapy.modeling.models.SuperExpCutoffPowerLaw4FGLDR3SpectralModel.spectral_index", false]], "spectral_index() (gammapy.modeling.models.superexpcutoffpowerlaw4fglspectralmodel method)": [[273, "gammapy.modeling.models.SuperExpCutoffPowerLaw4FGLSpectralModel.spectral_index", false]], "spectral_index() (gammapy.modeling.models.templatendspectralmodel method)": [[276, "gammapy.modeling.models.TemplateNDSpectralModel.spectral_index", false]], "spectral_index() (gammapy.modeling.models.templatespectralmodel method)": [[280, "gammapy.modeling.models.TemplateSpectralModel.spectral_index", false]], "spectral_index_error() (gammapy.astro.darkmatter.darkmatterannihilationspectralmodel method)": [[19, "gammapy.astro.darkmatter.DarkMatterAnnihilationSpectralModel.spectral_index_error", false]], "spectral_index_error() (gammapy.astro.darkmatter.darkmatterdecayspectralmodel method)": [[20, "gammapy.astro.darkmatter.DarkMatterDecaySpectralModel.spectral_index_error", false]], "spectral_index_error() (gammapy.astro.darkmatter.primaryflux method)": [[26, "gammapy.astro.darkmatter.PrimaryFlux.spectral_index_error", false]], "spectral_index_error() (gammapy.modeling.models.brokenpowerlawspectralmodel method)": [[221, "gammapy.modeling.models.BrokenPowerLawSpectralModel.spectral_index_error", false]], "spectral_index_error() (gammapy.modeling.models.compoundspectralmodel method)": [[222, "gammapy.modeling.models.CompoundSpectralModel.spectral_index_error", false]], "spectral_index_error() (gammapy.modeling.models.constantspectralmodel method)": [[225, "gammapy.modeling.models.ConstantSpectralModel.spectral_index_error", false]], "spectral_index_error() (gammapy.modeling.models.eblabsorptionnormspectralmodel method)": [[229, "gammapy.modeling.models.EBLAbsorptionNormSpectralModel.spectral_index_error", false]], "spectral_index_error() (gammapy.modeling.models.expcutoffpowerlaw3fglspectralmodel method)": [[231, "gammapy.modeling.models.ExpCutoffPowerLaw3FGLSpectralModel.spectral_index_error", false]], "spectral_index_error() (gammapy.modeling.models.expcutoffpowerlawnormspectralmodel method)": [[232, "gammapy.modeling.models.ExpCutoffPowerLawNormSpectralModel.spectral_index_error", false]], "spectral_index_error() (gammapy.modeling.models.expcutoffpowerlawspectralmodel method)": [[233, "gammapy.modeling.models.ExpCutoffPowerLawSpectralModel.spectral_index_error", false]], "spectral_index_error() (gammapy.modeling.models.gaussianspectralmodel method)": [[238, "gammapy.modeling.models.GaussianSpectralModel.spectral_index_error", false]], "spectral_index_error() (gammapy.modeling.models.logparabolanormspectralmodel method)": [[244, "gammapy.modeling.models.LogParabolaNormSpectralModel.spectral_index_error", false]], "spectral_index_error() (gammapy.modeling.models.logparabolaspectralmodel method)": [[245, "gammapy.modeling.models.LogParabolaSpectralModel.spectral_index_error", false]], "spectral_index_error() (gammapy.modeling.models.meyercrabspectralmodel method)": [[248, "gammapy.modeling.models.MeyerCrabSpectralModel.spectral_index_error", false]], "spectral_index_error() (gammapy.modeling.models.naimaspectralmodel method)": [[252, "gammapy.modeling.models.NaimaSpectralModel.spectral_index_error", false]], "spectral_index_error() (gammapy.modeling.models.piecewisenormspectralmodel method)": [[254, "gammapy.modeling.models.PiecewiseNormSpectralModel.spectral_index_error", false]], "spectral_index_error() (gammapy.modeling.models.powerlaw2spectralmodel method)": [[256, "gammapy.modeling.models.PowerLaw2SpectralModel.spectral_index_error", false]], "spectral_index_error() (gammapy.modeling.models.powerlawnormspectralmodel method)": [[257, "gammapy.modeling.models.PowerLawNormSpectralModel.spectral_index_error", false]], "spectral_index_error() (gammapy.modeling.models.powerlawspectralmodel method)": [[258, "gammapy.modeling.models.PowerLawSpectralModel.spectral_index_error", false]], "spectral_index_error() (gammapy.modeling.models.scalespectralmodel method)": [[263, "gammapy.modeling.models.ScaleSpectralModel.spectral_index_error", false]], "spectral_index_error() (gammapy.modeling.models.smoothbrokenpowerlawspectralmodel method)": [[268, "gammapy.modeling.models.SmoothBrokenPowerLawSpectralModel.spectral_index_error", false]], "spectral_index_error() (gammapy.modeling.models.spectralmodel method)": [[270, "gammapy.modeling.models.SpectralModel.spectral_index_error", false]], "spectral_index_error() (gammapy.modeling.models.superexpcutoffpowerlaw3fglspectralmodel method)": [[271, "gammapy.modeling.models.SuperExpCutoffPowerLaw3FGLSpectralModel.spectral_index_error", false]], "spectral_index_error() (gammapy.modeling.models.superexpcutoffpowerlaw4fgldr3spectralmodel method)": [[272, "gammapy.modeling.models.SuperExpCutoffPowerLaw4FGLDR3SpectralModel.spectral_index_error", false]], "spectral_index_error() (gammapy.modeling.models.superexpcutoffpowerlaw4fglspectralmodel method)": [[273, "gammapy.modeling.models.SuperExpCutoffPowerLaw4FGLSpectralModel.spectral_index_error", false]], "spectral_index_error() (gammapy.modeling.models.templatendspectralmodel method)": [[276, "gammapy.modeling.models.TemplateNDSpectralModel.spectral_index_error", false]], "spectral_index_error() (gammapy.modeling.models.templatespectralmodel method)": [[280, "gammapy.modeling.models.TemplateSpectralModel.spectral_index_error", false]], "spectral_model (gammapy.modeling.models.fovbackgroundmodel attribute)": [[235, "gammapy.modeling.models.FoVBackgroundModel.spectral_model", false]], "spectral_model (gammapy.modeling.models.skymodel attribute)": [[267, "gammapy.modeling.models.SkyModel.spectral_model", false]], "spectral_model (gammapy.modeling.models.templatenpredmodel attribute)": [[277, "gammapy.modeling.models.TemplateNPredModel.spectral_model", false]], "spectral_model() (gammapy.catalog.sourcecatalogobject1lhaaso method)": [[70, "gammapy.catalog.SourceCatalogObject1LHAASO.spectral_model", false]], "spectral_model() (gammapy.catalog.sourcecatalogobject2fhl method)": [[71, "gammapy.catalog.SourceCatalogObject2FHL.spectral_model", false]], "spectral_model() (gammapy.catalog.sourcecatalogobject2hwc method)": [[72, "gammapy.catalog.SourceCatalogObject2HWC.spectral_model", false]], "spectral_model() (gammapy.catalog.sourcecatalogobject2pc method)": [[73, "gammapy.catalog.SourceCatalogObject2PC.spectral_model", false]], "spectral_model() (gammapy.catalog.sourcecatalogobject3fgl method)": [[74, "gammapy.catalog.SourceCatalogObject3FGL.spectral_model", false]], "spectral_model() (gammapy.catalog.sourcecatalogobject3fhl method)": [[75, "gammapy.catalog.SourceCatalogObject3FHL.spectral_model", false]], "spectral_model() (gammapy.catalog.sourcecatalogobject3hwc method)": [[76, "gammapy.catalog.SourceCatalogObject3HWC.spectral_model", false]], "spectral_model() (gammapy.catalog.sourcecatalogobject3pc method)": [[77, "gammapy.catalog.SourceCatalogObject3PC.spectral_model", false]], "spectral_model() (gammapy.catalog.sourcecatalogobject4fgl method)": [[78, "gammapy.catalog.SourceCatalogObject4FGL.spectral_model", false]], "spectral_model() (gammapy.catalog.sourcecatalogobjectgammacat method)": [[79, "gammapy.catalog.SourceCatalogObjectGammaCat.spectral_model", false]], "spectral_model() (gammapy.catalog.sourcecatalogobjecthgps method)": [[80, "gammapy.catalog.SourceCatalogObjectHGPS.spectral_model", false]], "spectral_model_registry (in module gammapy.modeling.models)": [[262, "gammapy.modeling.models.SPECTRAL_MODEL_REGISTRY", false]], "spectralmodel (class in gammapy.modeling.models)": [[270, "gammapy.modeling.models.SpectralModel", false]], "spectrumdataset (class in gammapy.datasets)": [[110, "gammapy.datasets.SpectrumDataset", false]], "spectrumdatasetmaker (class in gammapy.makers)": [[183, "gammapy.makers.SpectrumDatasetMaker", false]], "spectrumdatasetonoff (class in gammapy.datasets)": [[111, "gammapy.datasets.SpectrumDatasetOnOff", false]], "spiralarms (gammapy.astro.population.faucherspiral attribute)": [[33, "gammapy.astro.population.FaucherSpiral.spiralarms", false]], "spiralarms (gammapy.astro.population.valleespiral attribute)": [[38, "gammapy.astro.population.ValleeSpiral.spiralarms", false]], "split_by_axis() (gammapy.maps.hpxmap method)": [[196, "gammapy.maps.HpxMap.split_by_axis", false]], "split_by_axis() (gammapy.maps.hpxndmap method)": [[197, "gammapy.maps.HpxNDMap.split_by_axis", false]], "split_by_axis() (gammapy.maps.map method)": [[199, "gammapy.maps.Map.split_by_axis", false]], "split_by_axis() (gammapy.maps.regionndmap method)": [[205, "gammapy.maps.RegionNDMap.split_by_axis", false]], "split_by_axis() (gammapy.maps.wcsmap method)": [[208, "gammapy.maps.WcsMap.split_by_axis", false]], "split_by_axis() (gammapy.maps.wcsndmap method)": [[209, "gammapy.maps.WcsNDMap.split_by_axis", false]], "split_dataset() (in module gammapy.datasets)": [[116, "gammapy.datasets.split_dataset", false]], "split_dataset() (in module gammapy.datasets.utils)": [[119, "gammapy.datasets.utils.split_dataset", false]], "sqrt_ts (gammapy.estimators.fluxmaps attribute)": [[125, "gammapy.estimators.FluxMaps.sqrt_ts", false]], "sqrt_ts (gammapy.estimators.fluxpoints attribute)": [[127, "gammapy.estimators.FluxPoints.sqrt_ts", false]], "sqrt_ts (gammapy.stats.cashcountsstatistic attribute)": [[292, "gammapy.stats.CashCountsStatistic.sqrt_ts", false]], "sqrt_ts (gammapy.stats.wstatcountsstatistic attribute)": [[294, "gammapy.stats.WStatCountsStatistic.sqrt_ts", false]], "sqrt_ts_threshold_ul (gammapy.estimators.fluxmaps attribute)": [[125, "gammapy.estimators.FluxMaps.sqrt_ts_threshold_ul", false]], "sqrt_ts_threshold_ul (gammapy.estimators.fluxpoints attribute)": [[127, "gammapy.estimators.FluxPoints.sqrt_ts_threshold_ul", false]], "squash() (gammapy.maps.geom method)": [[194, "gammapy.maps.Geom.squash", false]], "squash() (gammapy.maps.hpxgeom method)": [[195, "gammapy.maps.HpxGeom.squash", false]], "squash() (gammapy.maps.labelmapaxis method)": [[198, "gammapy.maps.LabelMapAxis.squash", false]], "squash() (gammapy.maps.mapaxes method)": [[200, "gammapy.maps.MapAxes.squash", false]], "squash() (gammapy.maps.mapaxis method)": [[201, "gammapy.maps.MapAxis.squash", false]], "squash() (gammapy.maps.regiongeom method)": [[204, "gammapy.maps.RegionGeom.squash", false]], "squash() (gammapy.maps.timemapaxis method)": [[206, "gammapy.maps.TimeMapAxis.squash", false]], "squash() (gammapy.maps.wcsgeom method)": [[207, "gammapy.maps.WcsGeom.squash", false]], "ssc_model (gammapy.modeling.models.naimaspectralmodel attribute)": [[252, "gammapy.modeling.models.NaimaSpectralModel.ssc_model", false]], "stack() (gammapy.data.eventlist method)": [[83, "gammapy.data.EventList.stack", false]], "stack() (gammapy.data.gti method)": [[86, "gammapy.data.GTI.stack", false]], "stack() (gammapy.datasets.mapdataset method)": [[103, "gammapy.datasets.MapDataset.stack", false]], "stack() (gammapy.datasets.mapdatasetmetadata method)": [[105, "gammapy.datasets.MapDatasetMetaData.stack", false]], "stack() (gammapy.datasets.mapdatasetonoff method)": [[106, "gammapy.datasets.MapDatasetOnOff.stack", false]], "stack() (gammapy.datasets.spectrumdataset method)": [[110, "gammapy.datasets.SpectrumDataset.stack", false]], "stack() (gammapy.datasets.spectrumdatasetonoff method)": [[111, "gammapy.datasets.SpectrumDatasetOnOff.stack", false]], "stack() (gammapy.irf.edispkernelmap method)": [[154, "gammapy.irf.EDispKernelMap.stack", false]], "stack() (gammapy.irf.edispmap method)": [[155, "gammapy.irf.EDispMap.stack", false]], "stack() (gammapy.irf.irfmap method)": [[161, "gammapy.irf.IRFMap.stack", false]], "stack() (gammapy.irf.psfmap method)": [[166, "gammapy.irf.PSFMap.stack", false]], "stack() (gammapy.irf.recopsfmap method)": [[169, "gammapy.irf.RecoPSFMap.stack", false]], "stack() (gammapy.maps.hpxndmap method)": [[197, "gammapy.maps.HpxNDMap.stack", false]], "stack() (gammapy.maps.regionndmap method)": [[205, "gammapy.maps.RegionNDMap.stack", false]], "stack() (gammapy.maps.wcsndmap method)": [[209, "gammapy.maps.WcsNDMap.stack", false]], "stack() (gammapy.modeling.models.templatenpredmodel method)": [[277, "gammapy.modeling.models.TemplateNPredModel.stack", false]], "stack_reduce() (gammapy.datasets.datasets method)": [[100, "gammapy.datasets.Datasets.stack_reduce", false]], "stacked analysis": [[597, "term-Stacked-Analysis", true]], "standard_broadcasting (gammapy.astro.population.casebattacharya1998 attribute)": [[28, "gammapy.astro.population.CaseBattacharya1998.standard_broadcasting", false]], "standard_broadcasting (gammapy.astro.population.exponential attribute)": [[29, "gammapy.astro.population.Exponential.standard_broadcasting", false]], "standard_broadcasting (gammapy.astro.population.faucherkaspi2006 attribute)": [[30, "gammapy.astro.population.FaucherKaspi2006.standard_broadcasting", false]], "standard_broadcasting (gammapy.astro.population.faucherkaspi2006velocitybimodal attribute)": [[31, "gammapy.astro.population.FaucherKaspi2006VelocityBimodal.standard_broadcasting", false]], "standard_broadcasting (gammapy.astro.population.faucherkaspi2006velocitymaxwellian attribute)": [[32, "gammapy.astro.population.FaucherKaspi2006VelocityMaxwellian.standard_broadcasting", false]], "standard_broadcasting (gammapy.astro.population.lorimer2006 attribute)": [[35, "gammapy.astro.population.Lorimer2006.standard_broadcasting", false]], "standard_broadcasting (gammapy.astro.population.paczynski1990 attribute)": [[36, "gammapy.astro.population.Paczynski1990.standard_broadcasting", false]], "standard_broadcasting (gammapy.astro.population.paczynski1990velocity attribute)": [[37, "gammapy.astro.population.Paczynski1990Velocity.standard_broadcasting", false]], "standard_broadcasting (gammapy.astro.population.yusifovkucuk2004 attribute)": [[39, "gammapy.astro.population.YusifovKucuk2004.standard_broadcasting", false]], "standard_broadcasting (gammapy.astro.population.yusifovkucuk2004b attribute)": [[40, "gammapy.astro.population.YusifovKucuk2004B.standard_broadcasting", false]], "standard_scaler() (in module gammapy.utils.cluster)": [[313, "gammapy.utils.cluster.standard_scaler", false]], "standardise_unit() (in module gammapy.utils.units)": [[372, "gammapy.utils.units.standardise_unit", false]], "stat (gammapy.estimators.fluxmaps attribute)": [[125, "gammapy.estimators.FluxMaps.stat", false]], "stat (gammapy.estimators.fluxpoints attribute)": [[127, "gammapy.estimators.FluxPoints.stat", false]], "stat_array() (gammapy.datasets.dataset method)": [[99, "gammapy.datasets.Dataset.stat_array", false]], "stat_array() (gammapy.datasets.fluxpointsdataset method)": [[102, "gammapy.datasets.FluxPointsDataset.stat_array", false]], "stat_array() (gammapy.datasets.mapdataset method)": [[103, "gammapy.datasets.MapDataset.stat_array", false]], "stat_array() (gammapy.datasets.mapdatasetonoff method)": [[106, "gammapy.datasets.MapDatasetOnOff.stat_array", false]], "stat_array() (gammapy.datasets.spectrumdataset method)": [[110, "gammapy.datasets.SpectrumDataset.stat_array", false]], "stat_array() (gammapy.datasets.spectrumdatasetonoff method)": [[111, "gammapy.datasets.SpectrumDatasetOnOff.stat_array", false]], "stat_contour() (gammapy.modeling.fit method)": [[214, "gammapy.modeling.Fit.stat_contour", false]], "stat_max (gammapy.stats.cashcountsstatistic attribute)": [[292, "gammapy.stats.CashCountsStatistic.stat_max", false]], "stat_max (gammapy.stats.wstatcountsstatistic attribute)": [[294, "gammapy.stats.WStatCountsStatistic.stat_max", false]], "stat_null (gammapy.estimators.fluxmaps attribute)": [[125, "gammapy.estimators.FluxMaps.stat_null", false]], "stat_null (gammapy.estimators.fluxpoints attribute)": [[127, "gammapy.estimators.FluxPoints.stat_null", false]], "stat_null (gammapy.stats.cashcountsstatistic attribute)": [[292, "gammapy.stats.CashCountsStatistic.stat_null", false]], "stat_null (gammapy.stats.wstatcountsstatistic attribute)": [[294, "gammapy.stats.WStatCountsStatistic.stat_null", false]], "stat_profile() (gammapy.modeling.fit method)": [[214, "gammapy.modeling.Fit.stat_profile", false]], "stat_profile_ul_scipy() (in module gammapy.modeling)": [[291, "gammapy.modeling.stat_profile_ul_scipy", false]], "stat_scan (gammapy.estimators.fluxmaps attribute)": [[125, "gammapy.estimators.FluxMaps.stat_scan", false]], "stat_scan (gammapy.estimators.fluxpoints attribute)": [[127, "gammapy.estimators.FluxPoints.stat_scan", false]], "stat_sum() (gammapy.datasets.dataset method)": [[99, "gammapy.datasets.Dataset.stat_sum", false]], "stat_sum() (gammapy.datasets.datasets method)": [[100, "gammapy.datasets.Datasets.stat_sum", false]], "stat_sum() (gammapy.datasets.fluxpointsdataset method)": [[102, "gammapy.datasets.FluxPointsDataset.stat_sum", false]], "stat_sum() (gammapy.datasets.mapdataset method)": [[103, "gammapy.datasets.MapDataset.stat_sum", false]], "stat_sum() (gammapy.datasets.mapdatasetonoff method)": [[106, "gammapy.datasets.MapDatasetOnOff.stat_sum", false]], "stat_sum() (gammapy.datasets.spectrumdataset method)": [[110, "gammapy.datasets.SpectrumDataset.stat_sum", false]], "stat_sum() (gammapy.datasets.spectrumdatasetonoff method)": [[111, "gammapy.datasets.SpectrumDatasetOnOff.stat_sum", false]], "stat_surface() (gammapy.modeling.fit method)": [[214, "gammapy.modeling.Fit.stat_surface", false]], "stat_type (gammapy.datasets.dataset attribute)": [[99, "gammapy.datasets.Dataset.stat_type", false]], "stat_type (gammapy.datasets.fluxpointsdataset attribute)": [[102, "gammapy.datasets.FluxPointsDataset.stat_type", false]], "stat_type (gammapy.datasets.mapdataset attribute)": [[103, "gammapy.datasets.MapDataset.stat_type", false]], "stat_type (gammapy.datasets.mapdatasetonoff attribute)": [[106, "gammapy.datasets.MapDatasetOnOff.stat_type", false]], "stat_type (gammapy.datasets.spectrumdataset attribute)": [[110, "gammapy.datasets.SpectrumDataset.stat_type", false]], "stat_type (gammapy.datasets.spectrumdatasetonoff attribute)": [[111, "gammapy.datasets.SpectrumDatasetOnOff.stat_type", false]], "stds (gammapy.astro.population.casebattacharya1998 attribute)": [[28, "gammapy.astro.population.CaseBattacharya1998.stds", false]], "stds (gammapy.astro.population.exponential attribute)": [[29, "gammapy.astro.population.Exponential.stds", false]], "stds (gammapy.astro.population.faucherkaspi2006 attribute)": [[30, "gammapy.astro.population.FaucherKaspi2006.stds", false]], "stds (gammapy.astro.population.faucherkaspi2006velocitybimodal attribute)": [[31, "gammapy.astro.population.FaucherKaspi2006VelocityBimodal.stds", false]], "stds (gammapy.astro.population.faucherkaspi2006velocitymaxwellian attribute)": [[32, "gammapy.astro.population.FaucherKaspi2006VelocityMaxwellian.stds", false]], "stds (gammapy.astro.population.lorimer2006 attribute)": [[35, "gammapy.astro.population.Lorimer2006.stds", false]], "stds (gammapy.astro.population.paczynski1990 attribute)": [[36, "gammapy.astro.population.Paczynski1990.stds", false]], "stds (gammapy.astro.population.paczynski1990velocity attribute)": [[37, "gammapy.astro.population.Paczynski1990Velocity.stds", false]], "stds (gammapy.astro.population.yusifovkucuk2004 attribute)": [[39, "gammapy.astro.population.YusifovKucuk2004.stds", false]], "stds (gammapy.astro.population.yusifovkucuk2004b attribute)": [[40, "gammapy.astro.population.YusifovKucuk2004B.stds", false]], "strip_units_from_tree() (gammapy.astro.population.casebattacharya1998 method)": [[28, "gammapy.astro.population.CaseBattacharya1998.strip_units_from_tree", false]], "strip_units_from_tree() (gammapy.astro.population.exponential method)": [[29, "gammapy.astro.population.Exponential.strip_units_from_tree", false]], "strip_units_from_tree() (gammapy.astro.population.faucherkaspi2006 method)": [[30, "gammapy.astro.population.FaucherKaspi2006.strip_units_from_tree", false]], "strip_units_from_tree() (gammapy.astro.population.faucherkaspi2006velocitybimodal method)": [[31, "gammapy.astro.population.FaucherKaspi2006VelocityBimodal.strip_units_from_tree", false]], "strip_units_from_tree() (gammapy.astro.population.faucherkaspi2006velocitymaxwellian method)": [[32, "gammapy.astro.population.FaucherKaspi2006VelocityMaxwellian.strip_units_from_tree", false]], "strip_units_from_tree() (gammapy.astro.population.lorimer2006 method)": [[35, "gammapy.astro.population.Lorimer2006.strip_units_from_tree", false]], "strip_units_from_tree() (gammapy.astro.population.paczynski1990 method)": [[36, "gammapy.astro.population.Paczynski1990.strip_units_from_tree", false]], "strip_units_from_tree() (gammapy.astro.population.paczynski1990velocity method)": [[37, "gammapy.astro.population.Paczynski1990Velocity.strip_units_from_tree", false]], "strip_units_from_tree() (gammapy.astro.population.yusifovkucuk2004 method)": [[39, "gammapy.astro.population.YusifovKucuk2004.strip_units_from_tree", false]], "strip_units_from_tree() (gammapy.astro.population.yusifovkucuk2004b method)": [[40, "gammapy.astro.population.YusifovKucuk2004B.strip_units_from_tree", false]], "structure_function() (in module gammapy.stats)": [[308, "gammapy.stats.structure_function", false]], "success (gammapy.estimators.fluxmaps attribute)": [[125, "gammapy.estimators.FluxMaps.success", false]], "success (gammapy.estimators.fluxpoints attribute)": [[127, "gammapy.estimators.FluxPoints.success", false]], "success (gammapy.modeling.covarianceresult attribute)": [[213, "gammapy.modeling.CovarianceResult.success", false]], "success (gammapy.modeling.fitresult attribute)": [[215, "gammapy.modeling.FitResult.success", false]], "success (gammapy.modeling.optimizeresult attribute)": [[216, "gammapy.modeling.OptimizeResult.success", false]], "sum() (gammapy.stats.cashcountsstatistic method)": [[292, "gammapy.stats.CashCountsStatistic.sum", false]], "sum() (gammapy.stats.wstatcountsstatistic method)": [[294, "gammapy.stats.WStatCountsStatistic.sum", false]], "sum_of_implicit_terms() (gammapy.astro.population.casebattacharya1998 method)": [[28, "gammapy.astro.population.CaseBattacharya1998.sum_of_implicit_terms", false]], "sum_of_implicit_terms() (gammapy.astro.population.exponential method)": [[29, "gammapy.astro.population.Exponential.sum_of_implicit_terms", false]], "sum_of_implicit_terms() (gammapy.astro.population.faucherkaspi2006 method)": [[30, "gammapy.astro.population.FaucherKaspi2006.sum_of_implicit_terms", false]], "sum_of_implicit_terms() (gammapy.astro.population.faucherkaspi2006velocitybimodal method)": [[31, "gammapy.astro.population.FaucherKaspi2006VelocityBimodal.sum_of_implicit_terms", false]], "sum_of_implicit_terms() (gammapy.astro.population.faucherkaspi2006velocitymaxwellian method)": [[32, "gammapy.astro.population.FaucherKaspi2006VelocityMaxwellian.sum_of_implicit_terms", false]], "sum_of_implicit_terms() (gammapy.astro.population.lorimer2006 method)": [[35, "gammapy.astro.population.Lorimer2006.sum_of_implicit_terms", false]], "sum_of_implicit_terms() (gammapy.astro.population.paczynski1990 method)": [[36, "gammapy.astro.population.Paczynski1990.sum_of_implicit_terms", false]], "sum_of_implicit_terms() (gammapy.astro.population.paczynski1990velocity method)": [[37, "gammapy.astro.population.Paczynski1990Velocity.sum_of_implicit_terms", false]], "sum_of_implicit_terms() (gammapy.astro.population.yusifovkucuk2004 method)": [[39, "gammapy.astro.population.YusifovKucuk2004.sum_of_implicit_terms", false]], "sum_of_implicit_terms() (gammapy.astro.population.yusifovkucuk2004b method)": [[40, "gammapy.astro.population.YusifovKucuk2004B.sum_of_implicit_terms", false]], "sum_over_axes() (gammapy.maps.hpxmap method)": [[196, "gammapy.maps.HpxMap.sum_over_axes", false]], "sum_over_axes() (gammapy.maps.hpxndmap method)": [[197, "gammapy.maps.HpxNDMap.sum_over_axes", false]], "sum_over_axes() (gammapy.maps.map method)": [[199, "gammapy.maps.Map.sum_over_axes", false]], "sum_over_axes() (gammapy.maps.regionndmap method)": [[205, "gammapy.maps.RegionNDMap.sum_over_axes", false]], "sum_over_axes() (gammapy.maps.wcsmap method)": [[208, "gammapy.maps.WcsMap.sum_over_axes", false]], "sum_over_axes() (gammapy.maps.wcsndmap method)": [[209, "gammapy.maps.WcsNDMap.sum_over_axes", false]], "summary() (gammapy.data.hduindextable method)": [[87, "gammapy.data.HDUIndexTable.summary", false]], "summary() (gammapy.data.observationtable method)": [[91, "gammapy.data.ObservationTable.summary", false]], "superexpcutoffpowerlaw3fglspectralmodel (class in gammapy.modeling.models)": [[271, "gammapy.modeling.models.SuperExpCutoffPowerLaw3FGLSpectralModel", false]], "superexpcutoffpowerlaw4fgldr3spectralmodel (class in gammapy.modeling.models)": [[272, "gammapy.modeling.models.SuperExpCutoffPowerLaw4FGLDR3SpectralModel", false]], "superexpcutoffpowerlaw4fglspectralmodel (class in gammapy.modeling.models)": [[273, "gammapy.modeling.models.SuperExpCutoffPowerLaw4FGLSpectralModel", false]], "sync_constraints (gammapy.astro.population.casebattacharya1998 attribute)": [[28, "gammapy.astro.population.CaseBattacharya1998.sync_constraints", false]], "sync_constraints (gammapy.astro.population.exponential attribute)": [[29, "gammapy.astro.population.Exponential.sync_constraints", false]], "sync_constraints (gammapy.astro.population.faucherkaspi2006 attribute)": [[30, "gammapy.astro.population.FaucherKaspi2006.sync_constraints", false]], "sync_constraints (gammapy.astro.population.faucherkaspi2006velocitybimodal attribute)": [[31, "gammapy.astro.population.FaucherKaspi2006VelocityBimodal.sync_constraints", false]], "sync_constraints (gammapy.astro.population.faucherkaspi2006velocitymaxwellian attribute)": [[32, "gammapy.astro.population.FaucherKaspi2006VelocityMaxwellian.sync_constraints", false]], "sync_constraints (gammapy.astro.population.lorimer2006 attribute)": [[35, "gammapy.astro.population.Lorimer2006.sync_constraints", false]], "sync_constraints (gammapy.astro.population.paczynski1990 attribute)": [[36, "gammapy.astro.population.Paczynski1990.sync_constraints", false]], "sync_constraints (gammapy.astro.population.paczynski1990velocity attribute)": [[37, "gammapy.astro.population.Paczynski1990Velocity.sync_constraints", false]], "sync_constraints (gammapy.astro.population.yusifovkucuk2004 attribute)": [[39, "gammapy.astro.population.YusifovKucuk2004.sync_constraints", false]], "sync_constraints (gammapy.astro.population.yusifovkucuk2004b attribute)": [[40, "gammapy.astro.population.YusifovKucuk2004B.sync_constraints", false]], "t0 (gammapy.modeling.models.expdecaytemporalmodel attribute)": [[234, "gammapy.modeling.models.ExpDecayTemporalModel.t0", false]], "t0 (gammapy.modeling.models.powerlawtemporalmodel attribute)": [[259, "gammapy.modeling.models.PowerLawTemporalModel.t0", false]], "t_decay (gammapy.modeling.models.generalizedgaussiantemporalmodel attribute)": [[241, "gammapy.modeling.models.GeneralizedGaussianTemporalModel.t_decay", false]], "t_ref (gammapy.modeling.models.expdecaytemporalmodel attribute)": [[234, "gammapy.modeling.models.ExpDecayTemporalModel.t_ref", false]], "t_ref (gammapy.modeling.models.gaussiantemporalmodel attribute)": [[239, "gammapy.modeling.models.GaussianTemporalModel.t_ref", false]], "t_ref (gammapy.modeling.models.generalizedgaussiantemporalmodel attribute)": [[241, "gammapy.modeling.models.GeneralizedGaussianTemporalModel.t_ref", false]], "t_ref (gammapy.modeling.models.lightcurvetemplatetemporalmodel attribute)": [[242, "gammapy.modeling.models.LightCurveTemplateTemporalModel.t_ref", false]], "t_ref (gammapy.modeling.models.lineartemporalmodel attribute)": [[243, "gammapy.modeling.models.LinearTemporalModel.t_ref", false]], "t_ref (gammapy.modeling.models.powerlawtemporalmodel attribute)": [[259, "gammapy.modeling.models.PowerLawTemporalModel.t_ref", false]], "t_ref (gammapy.modeling.models.sinetemporalmodel attribute)": [[266, "gammapy.modeling.models.SineTemporalModel.t_ref", false]], "t_ref (gammapy.modeling.models.templatephasecurvetemporalmodel attribute)": [[278, "gammapy.modeling.models.TemplatePhaseCurveTemporalModel.t_ref", false]], "t_rise (gammapy.modeling.models.generalizedgaussiantemporalmodel attribute)": [[241, "gammapy.modeling.models.GeneralizedGaussianTemporalModel.t_rise", false]], "table_associations (gammapy.catalog.sourcecataloghgps attribute)": [[67, "gammapy.catalog.SourceCatalogHGPS.table_associations", false]], "table_components (gammapy.catalog.sourcecataloghgps attribute)": [[67, "gammapy.catalog.SourceCatalogHGPS.table_components", false]], "table_filename (gammapy.astro.darkmatter.primaryflux attribute)": [[26, "gammapy.astro.darkmatter.PrimaryFlux.table_filename", false]], "table_identifications (gammapy.catalog.sourcecataloghgps attribute)": [[67, "gammapy.catalog.SourceCatalogHGPS.table_identifications", false]], "table_large_scale_component (gammapy.catalog.sourcecataloghgps attribute)": [[67, "gammapy.catalog.SourceCatalogHGPS.table_large_scale_component", false]], "table_row_to_dict() (in module gammapy.utils.table)": [[358, "gammapy.utils.table.table_row_to_dict", false]], "table_standardise_units_copy() (in module gammapy.utils.table)": [[359, "gammapy.utils.table.table_standardise_units_copy", false]], "table_standardise_units_inplace() (in module gammapy.utils.table)": [[360, "gammapy.utils.table.table_standardise_units_inplace", false]], "tag (gammapy.astro.darkmatter.darkmatterannihilationspectralmodel attribute)": [[19, "gammapy.astro.darkmatter.DarkMatterAnnihilationSpectralModel.tag", false]], "tag (gammapy.astro.darkmatter.darkmatterdecayspectralmodel attribute)": [[20, "gammapy.astro.darkmatter.DarkMatterDecaySpectralModel.tag", false]], "tag (gammapy.astro.darkmatter.primaryflux attribute)": [[26, "gammapy.astro.darkmatter.PrimaryFlux.tag", false]], "tag (gammapy.catalog.sourcecatalog attribute)": [[56, "gammapy.catalog.SourceCatalog.tag", false]], "tag (gammapy.catalog.sourcecatalog1lhaaso attribute)": [[57, "gammapy.catalog.SourceCatalog1LHAASO.tag", false]], "tag (gammapy.catalog.sourcecatalog2fhl attribute)": [[58, "gammapy.catalog.SourceCatalog2FHL.tag", false]], "tag (gammapy.catalog.sourcecatalog2hwc attribute)": [[59, "gammapy.catalog.SourceCatalog2HWC.tag", false]], "tag (gammapy.catalog.sourcecatalog2pc attribute)": [[60, "gammapy.catalog.SourceCatalog2PC.tag", false]], "tag (gammapy.catalog.sourcecatalog3fgl attribute)": [[61, "gammapy.catalog.SourceCatalog3FGL.tag", false]], "tag (gammapy.catalog.sourcecatalog3fhl attribute)": [[62, "gammapy.catalog.SourceCatalog3FHL.tag", false]], "tag (gammapy.catalog.sourcecatalog3hwc attribute)": [[63, "gammapy.catalog.SourceCatalog3HWC.tag", false]], "tag (gammapy.catalog.sourcecatalog3pc attribute)": [[64, "gammapy.catalog.SourceCatalog3PC.tag", false]], "tag (gammapy.catalog.sourcecatalog4fgl attribute)": [[65, "gammapy.catalog.SourceCatalog4FGL.tag", false]], "tag (gammapy.catalog.sourcecataloggammacat attribute)": [[66, "gammapy.catalog.SourceCatalogGammaCat.tag", false]], "tag (gammapy.catalog.sourcecataloghgps attribute)": [[67, "gammapy.catalog.SourceCatalogHGPS.tag", false]], "tag (gammapy.data.eventlistmetadata attribute)": [[84, "gammapy.data.EventListMetaData.tag", false]], "tag (gammapy.data.observationmetadata attribute)": [[90, "gammapy.data.ObservationMetaData.tag", false]], "tag (gammapy.datasets.dataset attribute)": [[99, "gammapy.datasets.Dataset.tag", false]], "tag (gammapy.datasets.fermipydatasetsreader attribute)": [[101, "gammapy.datasets.FermipyDatasetsReader.tag", false]], "tag (gammapy.datasets.fluxpointsdataset attribute)": [[102, "gammapy.datasets.FluxPointsDataset.tag", false]], "tag (gammapy.datasets.mapdataset attribute)": [[103, "gammapy.datasets.MapDataset.tag", false]], "tag (gammapy.datasets.mapdatasetmetadata attribute)": [[105, "gammapy.datasets.MapDatasetMetaData.tag", false]], "tag (gammapy.datasets.mapdatasetonoff attribute)": [[106, "gammapy.datasets.MapDatasetOnOff.tag", false]], "tag (gammapy.datasets.ogipdatasetreader attribute)": [[107, "gammapy.datasets.OGIPDatasetReader.tag", false]], "tag (gammapy.datasets.ogipdatasetwriter attribute)": [[108, "gammapy.datasets.OGIPDatasetWriter.tag", false]], "tag (gammapy.datasets.spectrumdataset attribute)": [[110, "gammapy.datasets.SpectrumDataset.tag", false]], "tag (gammapy.datasets.spectrumdatasetonoff attribute)": [[111, "gammapy.datasets.SpectrumDatasetOnOff.tag", false]], "tag (gammapy.estimators.asmoothmapestimator attribute)": [[120, "gammapy.estimators.ASmoothMapEstimator.tag", false]], "tag (gammapy.estimators.energydependentmorphologyestimator attribute)": [[122, "gammapy.estimators.EnergyDependentMorphologyEstimator.tag", false]], "tag (gammapy.estimators.estimator attribute)": [[123, "gammapy.estimators.Estimator.tag", false]], "tag (gammapy.estimators.excessmapestimator attribute)": [[124, "gammapy.estimators.ExcessMapEstimator.tag", false]], "tag (gammapy.estimators.fluxmetadata attribute)": [[126, "gammapy.estimators.FluxMetaData.tag", false]], "tag (gammapy.estimators.fluxpointsestimator attribute)": [[128, "gammapy.estimators.FluxPointsEstimator.tag", false]], "tag (gammapy.estimators.fluxprofileestimator attribute)": [[129, "gammapy.estimators.FluxProfileEstimator.tag", false]], "tag (gammapy.estimators.imageprofileestimator attribute)": [[131, "gammapy.estimators.ImageProfileEstimator.tag", false]], "tag (gammapy.estimators.lightcurveestimator attribute)": [[132, "gammapy.estimators.LightCurveEstimator.tag", false]], "tag (gammapy.estimators.parameterestimator attribute)": [[133, "gammapy.estimators.ParameterEstimator.tag", false]], "tag (gammapy.estimators.parametersensitivityestimator attribute)": [[134, "gammapy.estimators.ParameterSensitivityEstimator.tag", false]], "tag (gammapy.estimators.sensitivityestimator attribute)": [[135, "gammapy.estimators.SensitivityEstimator.tag", false]], "tag (gammapy.estimators.tsmapestimator attribute)": [[136, "gammapy.estimators.TSMapEstimator.tag", false]], "tag (gammapy.irf.background2d attribute)": [[150, "gammapy.irf.Background2D.tag", false]], "tag (gammapy.irf.background3d attribute)": [[151, "gammapy.irf.Background3D.tag", false]], "tag (gammapy.irf.backgroundirf attribute)": [[152, "gammapy.irf.BackgroundIRF.tag", false]], "tag (gammapy.irf.edispkernel attribute)": [[153, "gammapy.irf.EDispKernel.tag", false]], "tag (gammapy.irf.edispkernelmap attribute)": [[154, "gammapy.irf.EDispKernelMap.tag", false]], "tag (gammapy.irf.edispmap attribute)": [[155, "gammapy.irf.EDispMap.tag", false]], "tag (gammapy.irf.effectiveareatable2d attribute)": [[156, "gammapy.irf.EffectiveAreaTable2D.tag", false]], "tag (gammapy.irf.energydependentmultigausspsf attribute)": [[157, "gammapy.irf.EnergyDependentMultiGaussPSF.tag", false]], "tag (gammapy.irf.energydispersion2d attribute)": [[158, "gammapy.irf.EnergyDispersion2D.tag", false]], "tag (gammapy.irf.irf attribute)": [[160, "gammapy.irf.IRF.tag", false]], "tag (gammapy.irf.irfmap attribute)": [[161, "gammapy.irf.IRFMap.tag", false]], "tag (gammapy.irf.parametricpsf attribute)": [[167, "gammapy.irf.ParametricPSF.tag", false]], "tag (gammapy.irf.psf3d attribute)": [[163, "gammapy.irf.PSF3D.tag", false]], "tag (gammapy.irf.psfking attribute)": [[165, "gammapy.irf.PSFKing.tag", false]], "tag (gammapy.irf.psfmap attribute)": [[166, "gammapy.irf.PSFMap.tag", false]], "tag (gammapy.irf.radmax2d attribute)": [[168, "gammapy.irf.RadMax2D.tag", false]], "tag (gammapy.irf.recopsfmap attribute)": [[169, "gammapy.irf.RecoPSFMap.tag", false]], "tag (gammapy.makers.adaptiveringbackgroundmaker attribute)": [[171, "gammapy.makers.AdaptiveRingBackgroundMaker.tag", false]], "tag (gammapy.makers.datasetsmaker attribute)": [[172, "gammapy.makers.DatasetsMaker.tag", false]], "tag (gammapy.makers.fovbackgroundmaker attribute)": [[173, "gammapy.makers.FoVBackgroundMaker.tag", false]], "tag (gammapy.makers.maker attribute)": [[175, "gammapy.makers.Maker.tag", false]], "tag (gammapy.makers.mapdatasetmaker attribute)": [[176, "gammapy.makers.MapDatasetMaker.tag", false]], "tag (gammapy.makers.phasebackgroundmaker attribute)": [[177, "gammapy.makers.PhaseBackgroundMaker.tag", false]], "tag (gammapy.makers.reflectedregionsbackgroundmaker attribute)": [[178, "gammapy.makers.ReflectedRegionsBackgroundMaker.tag", false]], "tag (gammapy.makers.ringbackgroundmaker attribute)": [[181, "gammapy.makers.RingBackgroundMaker.tag", false]], "tag (gammapy.makers.safemaskmaker attribute)": [[182, "gammapy.makers.SafeMaskMaker.tag", false]], "tag (gammapy.makers.spectrumdatasetmaker attribute)": [[183, "gammapy.makers.SpectrumDatasetMaker.tag", false]], "tag (gammapy.maps.hpxmap attribute)": [[196, "gammapy.maps.HpxMap.tag", false]], "tag (gammapy.maps.hpxndmap attribute)": [[197, "gammapy.maps.HpxNDMap.tag", false]], "tag (gammapy.maps.map attribute)": [[199, "gammapy.maps.Map.tag", false]], "tag (gammapy.maps.regionndmap attribute)": [[205, "gammapy.maps.RegionNDMap.tag", false]], "tag (gammapy.maps.wcsmap attribute)": [[208, "gammapy.maps.WcsMap.tag", false]], "tag (gammapy.maps.wcsndmap attribute)": [[209, "gammapy.maps.WcsNDMap.tag", false]], "tag (gammapy.modeling.models.brokenpowerlawspectralmodel attribute)": [[221, "gammapy.modeling.models.BrokenPowerLawSpectralModel.tag", false]], "tag (gammapy.modeling.models.compoundspectralmodel attribute)": [[222, "gammapy.modeling.models.CompoundSpectralModel.tag", false]], "tag (gammapy.modeling.models.constantfluxspatialmodel attribute)": [[223, "gammapy.modeling.models.ConstantFluxSpatialModel.tag", false]], "tag (gammapy.modeling.models.constantspatialmodel attribute)": [[224, "gammapy.modeling.models.ConstantSpatialModel.tag", false]], "tag (gammapy.modeling.models.constantspectralmodel attribute)": [[225, "gammapy.modeling.models.ConstantSpectralModel.tag", false]], "tag (gammapy.modeling.models.constanttemporalmodel attribute)": [[226, "gammapy.modeling.models.ConstantTemporalModel.tag", false]], "tag (gammapy.modeling.models.diskspatialmodel attribute)": [[228, "gammapy.modeling.models.DiskSpatialModel.tag", false]], "tag (gammapy.modeling.models.eblabsorptionnormspectralmodel attribute)": [[229, "gammapy.modeling.models.EBLAbsorptionNormSpectralModel.tag", false]], "tag (gammapy.modeling.models.expcutoffpowerlaw3fglspectralmodel attribute)": [[231, "gammapy.modeling.models.ExpCutoffPowerLaw3FGLSpectralModel.tag", false]], "tag (gammapy.modeling.models.expcutoffpowerlawnormspectralmodel attribute)": [[232, "gammapy.modeling.models.ExpCutoffPowerLawNormSpectralModel.tag", false]], "tag (gammapy.modeling.models.expcutoffpowerlawspectralmodel attribute)": [[233, "gammapy.modeling.models.ExpCutoffPowerLawSpectralModel.tag", false]], "tag (gammapy.modeling.models.expdecaytemporalmodel attribute)": [[234, "gammapy.modeling.models.ExpDecayTemporalModel.tag", false]], "tag (gammapy.modeling.models.fovbackgroundmodel attribute)": [[235, "gammapy.modeling.models.FoVBackgroundModel.tag", false]], "tag (gammapy.modeling.models.gaussianprior attribute)": [[236, "gammapy.modeling.models.GaussianPrior.tag", false]], "tag (gammapy.modeling.models.gaussianspatialmodel attribute)": [[237, "gammapy.modeling.models.GaussianSpatialModel.tag", false]], "tag (gammapy.modeling.models.gaussianspectralmodel attribute)": [[238, "gammapy.modeling.models.GaussianSpectralModel.tag", false]], "tag (gammapy.modeling.models.gaussiantemporalmodel attribute)": [[239, "gammapy.modeling.models.GaussianTemporalModel.tag", false]], "tag (gammapy.modeling.models.generalizedgaussianspatialmodel attribute)": [[240, "gammapy.modeling.models.GeneralizedGaussianSpatialModel.tag", false]], "tag (gammapy.modeling.models.generalizedgaussiantemporalmodel attribute)": [[241, "gammapy.modeling.models.GeneralizedGaussianTemporalModel.tag", false]], "tag (gammapy.modeling.models.lightcurvetemplatetemporalmodel attribute)": [[242, "gammapy.modeling.models.LightCurveTemplateTemporalModel.tag", false]], "tag (gammapy.modeling.models.lineartemporalmodel attribute)": [[243, "gammapy.modeling.models.LinearTemporalModel.tag", false]], "tag (gammapy.modeling.models.logparabolanormspectralmodel attribute)": [[244, "gammapy.modeling.models.LogParabolaNormSpectralModel.tag", false]], "tag (gammapy.modeling.models.logparabolaspectralmodel attribute)": [[245, "gammapy.modeling.models.LogParabolaSpectralModel.tag", false]], "tag (gammapy.modeling.models.loguniformprior attribute)": [[246, "gammapy.modeling.models.LogUniformPrior.tag", false]], "tag (gammapy.modeling.models.naimaspectralmodel attribute)": [[252, "gammapy.modeling.models.NaimaSpectralModel.tag", false]], "tag (gammapy.modeling.models.piecewisenormspatialmodel attribute)": [[253, "gammapy.modeling.models.PiecewiseNormSpatialModel.tag", false]], "tag (gammapy.modeling.models.piecewisenormspectralmodel attribute)": [[254, "gammapy.modeling.models.PiecewiseNormSpectralModel.tag", false]], "tag (gammapy.modeling.models.pointspatialmodel attribute)": [[255, "gammapy.modeling.models.PointSpatialModel.tag", false]], "tag (gammapy.modeling.models.powerlaw2spectralmodel attribute)": [[256, "gammapy.modeling.models.PowerLaw2SpectralModel.tag", false]], "tag (gammapy.modeling.models.powerlawnormspectralmodel attribute)": [[257, "gammapy.modeling.models.PowerLawNormSpectralModel.tag", false]], "tag (gammapy.modeling.models.powerlawspectralmodel attribute)": [[258, "gammapy.modeling.models.PowerLawSpectralModel.tag", false]], "tag (gammapy.modeling.models.powerlawtemporalmodel attribute)": [[259, "gammapy.modeling.models.PowerLawTemporalModel.tag", false]], "tag (gammapy.modeling.models.scalespectralmodel attribute)": [[263, "gammapy.modeling.models.ScaleSpectralModel.tag", false]], "tag (gammapy.modeling.models.shell2spatialmodel attribute)": [[264, "gammapy.modeling.models.Shell2SpatialModel.tag", false]], "tag (gammapy.modeling.models.shellspatialmodel attribute)": [[265, "gammapy.modeling.models.ShellSpatialModel.tag", false]], "tag (gammapy.modeling.models.sinetemporalmodel attribute)": [[266, "gammapy.modeling.models.SineTemporalModel.tag", false]], "tag (gammapy.modeling.models.skymodel attribute)": [[267, "gammapy.modeling.models.SkyModel.tag", false]], "tag (gammapy.modeling.models.smoothbrokenpowerlawspectralmodel attribute)": [[268, "gammapy.modeling.models.SmoothBrokenPowerLawSpectralModel.tag", false]], "tag (gammapy.modeling.models.superexpcutoffpowerlaw3fglspectralmodel attribute)": [[271, "gammapy.modeling.models.SuperExpCutoffPowerLaw3FGLSpectralModel.tag", false]], "tag (gammapy.modeling.models.superexpcutoffpowerlaw4fgldr3spectralmodel attribute)": [[272, "gammapy.modeling.models.SuperExpCutoffPowerLaw4FGLDR3SpectralModel.tag", false]], "tag (gammapy.modeling.models.superexpcutoffpowerlaw4fglspectralmodel attribute)": [[273, "gammapy.modeling.models.SuperExpCutoffPowerLaw4FGLSpectralModel.tag", false]], "tag (gammapy.modeling.models.templatendspatialmodel attribute)": [[275, "gammapy.modeling.models.TemplateNDSpatialModel.tag", false]], "tag (gammapy.modeling.models.templatendspectralmodel attribute)": [[276, "gammapy.modeling.models.TemplateNDSpectralModel.tag", false]], "tag (gammapy.modeling.models.templatenpredmodel attribute)": [[277, "gammapy.modeling.models.TemplateNPredModel.tag", false]], "tag (gammapy.modeling.models.templatephasecurvetemporalmodel attribute)": [[278, "gammapy.modeling.models.TemplatePhaseCurveTemporalModel.tag", false]], "tag (gammapy.modeling.models.templatespatialmodel attribute)": [[279, "gammapy.modeling.models.TemplateSpatialModel.tag", false]], "tag (gammapy.modeling.models.templatespectralmodel attribute)": [[280, "gammapy.modeling.models.TemplateSpectralModel.tag", false]], "tag (gammapy.modeling.models.uniformprior attribute)": [[282, "gammapy.modeling.models.UniformPrior.tag", false]], "target_radec (gammapy.data.observation attribute)": [[88, "gammapy.data.Observation.target_radec", false]], "tau (gammapy.astro.source.simplepulsar attribute)": [[54, "gammapy.astro.source.SimplePulsar.tau", false]], "tau() (gammapy.astro.source.pulsar method)": [[51, "gammapy.astro.source.Pulsar.tau", false]], "templatendspatialmodel (class in gammapy.modeling.models)": [[275, "gammapy.modeling.models.TemplateNDSpatialModel", false]], "templatendspectralmodel (class in gammapy.modeling.models)": [[276, "gammapy.modeling.models.TemplateNDSpectralModel", false]], "templatenpredmodel (class in gammapy.modeling.models)": [[277, "gammapy.modeling.models.TemplateNPredModel", false]], "templatephasecurvetemporalmodel (class in gammapy.modeling.models)": [[278, "gammapy.modeling.models.TemplatePhaseCurveTemporalModel", false]], "templatespatialmodel (class in gammapy.modeling.models)": [[279, "gammapy.modeling.models.TemplateSpatialModel", false]], "templatespectralmodel (class in gammapy.modeling.models)": [[280, "gammapy.modeling.models.TemplateSpectralModel", false]], "temporal_model (gammapy.modeling.models.skymodel attribute)": [[267, "gammapy.modeling.models.SkyModel.temporal_model", false]], "temporal_model_registry (in module gammapy.modeling.models)": [[274, "gammapy.modeling.models.TEMPORAL_MODEL_REGISTRY", false]], "temporalmodel (class in gammapy.modeling.models)": [[281, "gammapy.modeling.models.TemporalModel", false]], "thermal_relic_cross_section (gammapy.astro.darkmatter.darkmatterannihilationspectralmodel attribute)": [[19, "gammapy.astro.darkmatter.DarkMatterAnnihilationSpectralModel.THERMAL_RELIC_CROSS_SECTION", false]], "theta (gammapy.maps.mapcoord attribute)": [[202, "gammapy.maps.MapCoord.theta", false]], "theta() (gammapy.astro.population.faucherspiral method)": [[33, "gammapy.astro.population.FaucherSpiral.theta", false]], "theta() (gammapy.astro.population.logspiral method)": [[34, "gammapy.astro.population.LogSpiral.theta", false]], "theta() (gammapy.astro.population.valleespiral method)": [[38, "gammapy.astro.population.ValleeSpiral.theta", false]], "theta_0 (gammapy.astro.population.faucherspiral attribute)": [[33, "gammapy.astro.population.FaucherSpiral.theta_0", false]], "theta_0 (gammapy.astro.population.valleespiral attribute)": [[38, "gammapy.astro.population.ValleeSpiral.theta_0", false]], "tied (gammapy.astro.population.casebattacharya1998 attribute)": [[28, "gammapy.astro.population.CaseBattacharya1998.tied", false]], "tied (gammapy.astro.population.exponential attribute)": [[29, "gammapy.astro.population.Exponential.tied", false]], "tied (gammapy.astro.population.faucherkaspi2006 attribute)": [[30, "gammapy.astro.population.FaucherKaspi2006.tied", false]], "tied (gammapy.astro.population.faucherkaspi2006velocitybimodal attribute)": [[31, "gammapy.astro.population.FaucherKaspi2006VelocityBimodal.tied", false]], "tied (gammapy.astro.population.faucherkaspi2006velocitymaxwellian attribute)": [[32, "gammapy.astro.population.FaucherKaspi2006VelocityMaxwellian.tied", false]], "tied (gammapy.astro.population.lorimer2006 attribute)": [[35, "gammapy.astro.population.Lorimer2006.tied", false]], "tied (gammapy.astro.population.paczynski1990 attribute)": [[36, "gammapy.astro.population.Paczynski1990.tied", false]], "tied (gammapy.astro.population.paczynski1990velocity attribute)": [[37, "gammapy.astro.population.Paczynski1990Velocity.tied", false]], "tied (gammapy.astro.population.yusifovkucuk2004 attribute)": [[39, "gammapy.astro.population.YusifovKucuk2004.tied", false]], "tied (gammapy.astro.population.yusifovkucuk2004b attribute)": [[40, "gammapy.astro.population.YusifovKucuk2004B.tied", false]], "tilt (gammapy.modeling.models.powerlawnormspectralmodel attribute)": [[257, "gammapy.modeling.models.PowerLawNormSpectralModel.tilt", false]], "time (gammapy.data.eventlist attribute)": [[83, "gammapy.data.EventList.time", false]], "time (gammapy.data.pointinginfo attribute)": [[94, "gammapy.data.PointingInfo.time", false]], "time_bounds (gammapy.maps.timemapaxis attribute)": [[206, "gammapy.maps.TimeMapAxis.time_bounds", false]], "time_delta (gammapy.data.gti attribute)": [[86, "gammapy.data.GTI.time_delta", false]], "time_delta (gammapy.maps.timemapaxis attribute)": [[206, "gammapy.maps.TimeMapAxis.time_delta", false]], "time_edges (gammapy.maps.timemapaxis attribute)": [[206, "gammapy.maps.TimeMapAxis.time_edges", false]], "time_format (gammapy.maps.timemapaxis attribute)": [[206, "gammapy.maps.TimeMapAxis.time_format", false]], "time_intervals (gammapy.data.gti attribute)": [[86, "gammapy.data.GTI.time_intervals", false]], "time_max (gammapy.maps.timemapaxis attribute)": [[206, "gammapy.maps.TimeMapAxis.time_max", false]], "time_mid (gammapy.maps.timemapaxis attribute)": [[206, "gammapy.maps.TimeMapAxis.time_mid", false]], "time_min (gammapy.maps.timemapaxis attribute)": [[206, "gammapy.maps.TimeMapAxis.time_min", false]], "time_ref (gammapy.data.eventlist attribute)": [[83, "gammapy.data.EventList.time_ref", false]], "time_ref (gammapy.data.gti attribute)": [[86, "gammapy.data.GTI.time_ref", false]], "time_ref (gammapy.data.observationtable attribute)": [[91, "gammapy.data.ObservationTable.time_ref", false]], "time_ref (gammapy.data.pointinginfo attribute)": [[94, "gammapy.data.PointingInfo.time_ref", false]], "time_ref_from_dict() (in module gammapy.utils.time)": [[369, "gammapy.utils.time.time_ref_from_dict", false]], "time_ref_to_dict() (in module gammapy.utils.time)": [[370, "gammapy.utils.time.time_ref_to_dict", false]], "time_relative_to_ref() (in module gammapy.utils.time)": [[371, "gammapy.utils.time.time_relative_to_ref", false]], "time_start (gammapy.data.gti attribute)": [[86, "gammapy.data.GTI.time_start", false]], "time_start (gammapy.data.observationtable attribute)": [[91, "gammapy.data.ObservationTable.time_start", false]], "time_stop (gammapy.data.gti attribute)": [[86, "gammapy.data.GTI.time_stop", false]], "time_stop (gammapy.data.observationtable attribute)": [[91, "gammapy.data.ObservationTable.time_stop", false]], "time_sum (gammapy.data.gti attribute)": [[86, "gammapy.data.GTI.time_sum", false]], "time_sum() (gammapy.modeling.models.constanttemporalmodel static method)": [[226, "gammapy.modeling.models.ConstantTemporalModel.time_sum", false]], "time_sum() (gammapy.modeling.models.expdecaytemporalmodel static method)": [[234, "gammapy.modeling.models.ExpDecayTemporalModel.time_sum", false]], "time_sum() (gammapy.modeling.models.gaussiantemporalmodel static method)": [[239, "gammapy.modeling.models.GaussianTemporalModel.time_sum", false]], "time_sum() (gammapy.modeling.models.generalizedgaussiantemporalmodel static method)": [[241, "gammapy.modeling.models.GeneralizedGaussianTemporalModel.time_sum", false]], "time_sum() (gammapy.modeling.models.lightcurvetemplatetemporalmodel static method)": [[242, "gammapy.modeling.models.LightCurveTemplateTemporalModel.time_sum", false]], "time_sum() (gammapy.modeling.models.lineartemporalmodel static method)": [[243, "gammapy.modeling.models.LinearTemporalModel.time_sum", false]], "time_sum() (gammapy.modeling.models.powerlawtemporalmodel static method)": [[259, "gammapy.modeling.models.PowerLawTemporalModel.time_sum", false]], "time_sum() (gammapy.modeling.models.sinetemporalmodel static method)": [[266, "gammapy.modeling.models.SineTemporalModel.time_sum", false]], "time_sum() (gammapy.modeling.models.templatephasecurvetemporalmodel static method)": [[278, "gammapy.modeling.models.TemplatePhaseCurveTemporalModel.time_sum", false]], "time_sum() (gammapy.modeling.models.temporalmodel static method)": [[281, "gammapy.modeling.models.TemporalModel.time_sum", false]], "timemapaxis (class in gammapy.maps)": [[206, "gammapy.maps.TimeMapAxis", false]], "timmerkonig_lightcurve_simulator() (in module gammapy.stats)": [[293, "gammapy.stats.TimmerKonig_lightcurve_simulator", false]], "tmid (gammapy.data.observation attribute)": [[88, "gammapy.data.Observation.tmid", false]], "to_2d() (gammapy.irf.background3d method)": [[151, "gammapy.irf.Background3D.to_2d", false]], "to_3d() (gammapy.irf.background2d method)": [[150, "gammapy.irf.Background2D.to_3d", false]], "to_bands_hdu() (gammapy.maps.geom method)": [[194, "gammapy.maps.Geom.to_bands_hdu", false]], "to_bands_hdu() (gammapy.maps.hpxgeom method)": [[195, "gammapy.maps.HpxGeom.to_bands_hdu", false]], "to_bands_hdu() (gammapy.maps.regiongeom method)": [[204, "gammapy.maps.RegionGeom.to_bands_hdu", false]], "to_bands_hdu() (gammapy.maps.wcsgeom method)": [[207, "gammapy.maps.WcsGeom.to_bands_hdu", false]], "to_binsz() (gammapy.maps.hpxgeom method)": [[195, "gammapy.maps.HpxGeom.to_binsz", false]], "to_binsz() (gammapy.maps.regiongeom method)": [[204, "gammapy.maps.RegionGeom.to_binsz", false]], "to_binsz() (gammapy.maps.wcsgeom method)": [[207, "gammapy.maps.WcsGeom.to_binsz", false]], "to_binsz_wcs() (gammapy.maps.regiongeom method)": [[204, "gammapy.maps.RegionGeom.to_binsz_wcs", false]], "to_contiguous() (gammapy.maps.timemapaxis method)": [[206, "gammapy.maps.TimeMapAxis.to_contiguous", false]], "to_counts_hdulist() (gammapy.datasets.ogipdatasetwriter method)": [[108, "gammapy.datasets.OGIPDatasetWriter.to_counts_hdulist", false]], "to_cube() (gammapy.maps.geom method)": [[194, "gammapy.maps.Geom.to_cube", false]], "to_cube() (gammapy.maps.hpxgeom method)": [[195, "gammapy.maps.HpxGeom.to_cube", false]], "to_cube() (gammapy.maps.hpxmap method)": [[196, "gammapy.maps.HpxMap.to_cube", false]], "to_cube() (gammapy.maps.hpxndmap method)": [[197, "gammapy.maps.HpxNDMap.to_cube", false]], "to_cube() (gammapy.maps.map method)": [[199, "gammapy.maps.Map.to_cube", false]], "to_cube() (gammapy.maps.regiongeom method)": [[204, "gammapy.maps.RegionGeom.to_cube", false]], "to_cube() (gammapy.maps.regionndmap method)": [[205, "gammapy.maps.RegionNDMap.to_cube", false]], "to_cube() (gammapy.maps.wcsgeom method)": [[207, "gammapy.maps.WcsGeom.to_cube", false]], "to_cube() (gammapy.maps.wcsmap method)": [[208, "gammapy.maps.WcsMap.to_cube", false]], "to_cube() (gammapy.maps.wcsndmap method)": [[209, "gammapy.maps.WcsNDMap.to_cube", false]], "to_dict() (gammapy.astro.darkmatter.darkmatterannihilationspectralmodel method)": [[19, "gammapy.astro.darkmatter.DarkMatterAnnihilationSpectralModel.to_dict", false]], "to_dict() (gammapy.astro.darkmatter.darkmatterdecayspectralmodel method)": [[20, "gammapy.astro.darkmatter.DarkMatterDecaySpectralModel.to_dict", false]], "to_dict() (gammapy.astro.darkmatter.primaryflux method)": [[26, "gammapy.astro.darkmatter.PrimaryFlux.to_dict", false]], "to_dict() (gammapy.datasets.dataset method)": [[99, "gammapy.datasets.Dataset.to_dict", false]], "to_dict() (gammapy.datasets.fluxpointsdataset method)": [[102, "gammapy.datasets.FluxPointsDataset.to_dict", false]], "to_dict() (gammapy.datasets.mapdataset method)": [[103, "gammapy.datasets.MapDataset.to_dict", false]], "to_dict() (gammapy.datasets.mapdatasetonoff method)": [[106, "gammapy.datasets.MapDatasetOnOff.to_dict", false]], "to_dict() (gammapy.datasets.spectrumdataset method)": [[110, "gammapy.datasets.SpectrumDataset.to_dict", false]], "to_dict() (gammapy.datasets.spectrumdatasetonoff method)": [[111, "gammapy.datasets.SpectrumDatasetOnOff.to_dict", false]], "to_dict() (gammapy.modeling.covarianceresult method)": [[213, "gammapy.modeling.CovarianceResult.to_dict", false]], "to_dict() (gammapy.modeling.models.brokenpowerlawspectralmodel method)": [[221, "gammapy.modeling.models.BrokenPowerLawSpectralModel.to_dict", false]], "to_dict() (gammapy.modeling.models.compoundspectralmodel method)": [[222, "gammapy.modeling.models.CompoundSpectralModel.to_dict", false]], "to_dict() (gammapy.modeling.models.constantfluxspatialmodel method)": [[223, "gammapy.modeling.models.ConstantFluxSpatialModel.to_dict", false]], "to_dict() (gammapy.modeling.models.constantspatialmodel method)": [[224, "gammapy.modeling.models.ConstantSpatialModel.to_dict", false]], "to_dict() (gammapy.modeling.models.constantspectralmodel method)": [[225, "gammapy.modeling.models.ConstantSpectralModel.to_dict", false]], "to_dict() (gammapy.modeling.models.constanttemporalmodel method)": [[226, "gammapy.modeling.models.ConstantTemporalModel.to_dict", false]], "to_dict() (gammapy.modeling.models.datasetmodels method)": [[227, "gammapy.modeling.models.DatasetModels.to_dict", false]], "to_dict() (gammapy.modeling.models.diskspatialmodel method)": [[228, "gammapy.modeling.models.DiskSpatialModel.to_dict", false]], "to_dict() (gammapy.modeling.models.eblabsorptionnormspectralmodel method)": [[229, "gammapy.modeling.models.EBLAbsorptionNormSpectralModel.to_dict", false]], "to_dict() (gammapy.modeling.models.expcutoffpowerlaw3fglspectralmodel method)": [[231, "gammapy.modeling.models.ExpCutoffPowerLaw3FGLSpectralModel.to_dict", false]], "to_dict() (gammapy.modeling.models.expcutoffpowerlawnormspectralmodel method)": [[232, "gammapy.modeling.models.ExpCutoffPowerLawNormSpectralModel.to_dict", false]], "to_dict() (gammapy.modeling.models.expcutoffpowerlawspectralmodel method)": [[233, "gammapy.modeling.models.ExpCutoffPowerLawSpectralModel.to_dict", false]], "to_dict() (gammapy.modeling.models.expdecaytemporalmodel method)": [[234, "gammapy.modeling.models.ExpDecayTemporalModel.to_dict", false]], "to_dict() (gammapy.modeling.models.fovbackgroundmodel method)": [[235, "gammapy.modeling.models.FoVBackgroundModel.to_dict", false]], "to_dict() (gammapy.modeling.models.gaussianprior method)": [[236, "gammapy.modeling.models.GaussianPrior.to_dict", false]], "to_dict() (gammapy.modeling.models.gaussianspatialmodel method)": [[237, "gammapy.modeling.models.GaussianSpatialModel.to_dict", false]], "to_dict() (gammapy.modeling.models.gaussianspectralmodel method)": [[238, "gammapy.modeling.models.GaussianSpectralModel.to_dict", false]], "to_dict() (gammapy.modeling.models.gaussiantemporalmodel method)": [[239, "gammapy.modeling.models.GaussianTemporalModel.to_dict", false]], "to_dict() (gammapy.modeling.models.generalizedgaussianspatialmodel method)": [[240, "gammapy.modeling.models.GeneralizedGaussianSpatialModel.to_dict", false]], "to_dict() (gammapy.modeling.models.generalizedgaussiantemporalmodel method)": [[241, "gammapy.modeling.models.GeneralizedGaussianTemporalModel.to_dict", false]], "to_dict() (gammapy.modeling.models.lightcurvetemplatetemporalmodel method)": [[242, "gammapy.modeling.models.LightCurveTemplateTemporalModel.to_dict", false]], "to_dict() (gammapy.modeling.models.lineartemporalmodel method)": [[243, "gammapy.modeling.models.LinearTemporalModel.to_dict", false]], "to_dict() (gammapy.modeling.models.logparabolanormspectralmodel method)": [[244, "gammapy.modeling.models.LogParabolaNormSpectralModel.to_dict", false]], "to_dict() (gammapy.modeling.models.logparabolaspectralmodel method)": [[245, "gammapy.modeling.models.LogParabolaSpectralModel.to_dict", false]], "to_dict() (gammapy.modeling.models.loguniformprior method)": [[246, "gammapy.modeling.models.LogUniformPrior.to_dict", false]], "to_dict() (gammapy.modeling.models.meyercrabspectralmodel method)": [[248, "gammapy.modeling.models.MeyerCrabSpectralModel.to_dict", false]], "to_dict() (gammapy.modeling.models.modelbase method)": [[250, "gammapy.modeling.models.ModelBase.to_dict", false]], "to_dict() (gammapy.modeling.models.models method)": [[251, "gammapy.modeling.models.Models.to_dict", false]], "to_dict() (gammapy.modeling.models.naimaspectralmodel method)": [[252, "gammapy.modeling.models.NaimaSpectralModel.to_dict", false]], "to_dict() (gammapy.modeling.models.piecewisenormspatialmodel method)": [[253, "gammapy.modeling.models.PiecewiseNormSpatialModel.to_dict", false]], "to_dict() (gammapy.modeling.models.piecewisenormspectralmodel method)": [[254, "gammapy.modeling.models.PiecewiseNormSpectralModel.to_dict", false]], "to_dict() (gammapy.modeling.models.pointspatialmodel method)": [[255, "gammapy.modeling.models.PointSpatialModel.to_dict", false]], "to_dict() (gammapy.modeling.models.powerlaw2spectralmodel method)": [[256, "gammapy.modeling.models.PowerLaw2SpectralModel.to_dict", false]], "to_dict() (gammapy.modeling.models.powerlawnormspectralmodel method)": [[257, "gammapy.modeling.models.PowerLawNormSpectralModel.to_dict", false]], "to_dict() (gammapy.modeling.models.powerlawspectralmodel method)": [[258, "gammapy.modeling.models.PowerLawSpectralModel.to_dict", false]], "to_dict() (gammapy.modeling.models.powerlawtemporalmodel method)": [[259, "gammapy.modeling.models.PowerLawTemporalModel.to_dict", false]], "to_dict() (gammapy.modeling.models.prior method)": [[260, "gammapy.modeling.models.Prior.to_dict", false]], "to_dict() (gammapy.modeling.models.scalespectralmodel method)": [[263, "gammapy.modeling.models.ScaleSpectralModel.to_dict", false]], "to_dict() (gammapy.modeling.models.shell2spatialmodel method)": [[264, "gammapy.modeling.models.Shell2SpatialModel.to_dict", false]], "to_dict() (gammapy.modeling.models.shellspatialmodel method)": [[265, "gammapy.modeling.models.ShellSpatialModel.to_dict", false]], "to_dict() (gammapy.modeling.models.sinetemporalmodel method)": [[266, "gammapy.modeling.models.SineTemporalModel.to_dict", false]], "to_dict() (gammapy.modeling.models.skymodel method)": [[267, "gammapy.modeling.models.SkyModel.to_dict", false]], "to_dict() (gammapy.modeling.models.smoothbrokenpowerlawspectralmodel method)": [[268, "gammapy.modeling.models.SmoothBrokenPowerLawSpectralModel.to_dict", false]], "to_dict() (gammapy.modeling.models.spatialmodel method)": [[269, "gammapy.modeling.models.SpatialModel.to_dict", false]], "to_dict() (gammapy.modeling.models.spectralmodel method)": [[270, "gammapy.modeling.models.SpectralModel.to_dict", false]], "to_dict() (gammapy.modeling.models.superexpcutoffpowerlaw3fglspectralmodel method)": [[271, "gammapy.modeling.models.SuperExpCutoffPowerLaw3FGLSpectralModel.to_dict", false]], "to_dict() (gammapy.modeling.models.superexpcutoffpowerlaw4fgldr3spectralmodel method)": [[272, "gammapy.modeling.models.SuperExpCutoffPowerLaw4FGLDR3SpectralModel.to_dict", false]], "to_dict() (gammapy.modeling.models.superexpcutoffpowerlaw4fglspectralmodel method)": [[273, "gammapy.modeling.models.SuperExpCutoffPowerLaw4FGLSpectralModel.to_dict", false]], "to_dict() (gammapy.modeling.models.templatendspatialmodel method)": [[275, "gammapy.modeling.models.TemplateNDSpatialModel.to_dict", false]], "to_dict() (gammapy.modeling.models.templatendspectralmodel method)": [[276, "gammapy.modeling.models.TemplateNDSpectralModel.to_dict", false]], "to_dict() (gammapy.modeling.models.templatenpredmodel method)": [[277, "gammapy.modeling.models.TemplateNPredModel.to_dict", false]], "to_dict() (gammapy.modeling.models.templatephasecurvetemporalmodel method)": [[278, "gammapy.modeling.models.TemplatePhaseCurveTemporalModel.to_dict", false]], "to_dict() (gammapy.modeling.models.templatespatialmodel method)": [[279, "gammapy.modeling.models.TemplateSpatialModel.to_dict", false]], "to_dict() (gammapy.modeling.models.templatespectralmodel method)": [[280, "gammapy.modeling.models.TemplateSpectralModel.to_dict", false]], "to_dict() (gammapy.modeling.models.temporalmodel method)": [[281, "gammapy.modeling.models.TemporalModel.to_dict", false]], "to_dict() (gammapy.modeling.models.uniformprior method)": [[282, "gammapy.modeling.models.UniformPrior.to_dict", false]], "to_dict() (gammapy.modeling.optimizeresult method)": [[216, "gammapy.modeling.OptimizeResult.to_dict", false]], "to_dict() (gammapy.modeling.parameter method)": [[217, "gammapy.modeling.Parameter.to_dict", false]], "to_dict() (gammapy.modeling.parameters method)": [[218, "gammapy.modeling.Parameters.to_dict", false]], "to_dict() (gammapy.modeling.priorparameter method)": [[219, "gammapy.modeling.PriorParameter.to_dict", false]], "to_dict() (gammapy.modeling.priorparameters method)": [[220, "gammapy.modeling.PriorParameters.to_dict", false]], "to_edisp_kernel() (gammapy.irf.energydispersion2d method)": [[158, "gammapy.irf.EnergyDispersion2D.to_edisp_kernel", false]], "to_edisp_kernel_map() (gammapy.irf.edispmap method)": [[155, "gammapy.irf.EDispMap.to_edisp_kernel_map", false]], "to_even_npix() (gammapy.maps.wcsgeom method)": [[207, "gammapy.maps.WcsGeom.to_even_npix", false]], "to_fits_header() (gammapy.data.fixedpointinginfo method)": [[85, "gammapy.data.FixedPointingInfo.to_fits_header", false]], "to_frame() (gammapy.maps.mapcoord method)": [[202, "gammapy.maps.MapCoord.to_frame", false]], "to_gti() (gammapy.maps.timemapaxis method)": [[206, "gammapy.maps.TimeMapAxis.to_gti", false]], "to_hdu() (gammapy.maps.hpxmap method)": [[196, "gammapy.maps.HpxMap.to_hdu", false]], "to_hdu() (gammapy.maps.hpxndmap method)": [[197, "gammapy.maps.HpxNDMap.to_hdu", false]], "to_hdu() (gammapy.maps.wcsmap method)": [[208, "gammapy.maps.WcsMap.to_hdu", false]], "to_hdu() (gammapy.maps.wcsndmap method)": [[209, "gammapy.maps.WcsNDMap.to_hdu", false]], "to_hdulist() (gammapy.datasets.mapdataset method)": [[103, "gammapy.datasets.MapDataset.to_hdulist", false]], "to_hdulist() (gammapy.datasets.mapdatasetonoff method)": [[106, "gammapy.datasets.MapDatasetOnOff.to_hdulist", false]], "to_hdulist() (gammapy.datasets.spectrumdataset method)": [[110, "gammapy.datasets.SpectrumDataset.to_hdulist", false]], "to_hdulist() (gammapy.datasets.spectrumdatasetonoff method)": [[111, "gammapy.datasets.SpectrumDatasetOnOff.to_hdulist", false]], "to_hdulist() (gammapy.estimators.fluxmaps method)": [[125, "gammapy.estimators.FluxMaps.to_hdulist", false]], "to_hdulist() (gammapy.estimators.fluxpoints method)": [[127, "gammapy.estimators.FluxPoints.to_hdulist", false]], "to_hdulist() (gammapy.irf.background2d method)": [[150, "gammapy.irf.Background2D.to_hdulist", false]], "to_hdulist() (gammapy.irf.background3d method)": [[151, "gammapy.irf.Background3D.to_hdulist", false]], "to_hdulist() (gammapy.irf.backgroundirf method)": [[152, "gammapy.irf.BackgroundIRF.to_hdulist", false]], "to_hdulist() (gammapy.irf.edispkernel method)": [[153, "gammapy.irf.EDispKernel.to_hdulist", false]], "to_hdulist() (gammapy.irf.edispkernelmap method)": [[154, "gammapy.irf.EDispKernelMap.to_hdulist", false]], "to_hdulist() (gammapy.irf.edispmap method)": [[155, "gammapy.irf.EDispMap.to_hdulist", false]], "to_hdulist() (gammapy.irf.effectiveareatable2d method)": [[156, "gammapy.irf.EffectiveAreaTable2D.to_hdulist", false]], "to_hdulist() (gammapy.irf.energydependentmultigausspsf method)": [[157, "gammapy.irf.EnergyDependentMultiGaussPSF.to_hdulist", false]], "to_hdulist() (gammapy.irf.energydispersion2d method)": [[158, "gammapy.irf.EnergyDispersion2D.to_hdulist", false]], "to_hdulist() (gammapy.irf.irf method)": [[160, "gammapy.irf.IRF.to_hdulist", false]], "to_hdulist() (gammapy.irf.irfmap method)": [[161, "gammapy.irf.IRFMap.to_hdulist", false]], "to_hdulist() (gammapy.irf.parametricpsf method)": [[167, "gammapy.irf.ParametricPSF.to_hdulist", false]], "to_hdulist() (gammapy.irf.psf3d method)": [[163, "gammapy.irf.PSF3D.to_hdulist", false]], "to_hdulist() (gammapy.irf.psfking method)": [[165, "gammapy.irf.PSFKing.to_hdulist", false]], "to_hdulist() (gammapy.irf.psfmap method)": [[166, "gammapy.irf.PSFMap.to_hdulist", false]], "to_hdulist() (gammapy.irf.radmax2d method)": [[168, "gammapy.irf.RadMax2D.to_hdulist", false]], "to_hdulist() (gammapy.irf.recopsfmap method)": [[169, "gammapy.irf.RecoPSFMap.to_hdulist", false]], "to_hdulist() (gammapy.maps.hpxmap method)": [[196, "gammapy.maps.HpxMap.to_hdulist", false]], "to_hdulist() (gammapy.maps.hpxndmap method)": [[197, "gammapy.maps.HpxNDMap.to_hdulist", false]], "to_hdulist() (gammapy.maps.maps method)": [[203, "gammapy.maps.Maps.to_hdulist", false]], "to_hdulist() (gammapy.maps.regiongeom method)": [[204, "gammapy.maps.RegionGeom.to_hdulist", false]], "to_hdulist() (gammapy.maps.regionndmap method)": [[205, "gammapy.maps.RegionNDMap.to_hdulist", false]], "to_hdulist() (gammapy.maps.wcsmap method)": [[208, "gammapy.maps.WcsMap.to_hdulist", false]], "to_hdulist() (gammapy.maps.wcsndmap method)": [[209, "gammapy.maps.WcsNDMap.to_hdulist", false]], "to_header() (gammapy.data.eventlistmetadata method)": [[84, "gammapy.data.EventListMetaData.to_header", false]], "to_header() (gammapy.data.observationmetadata method)": [[90, "gammapy.data.ObservationMetaData.to_header", false]], "to_header() (gammapy.datasets.mapdatasetmetadata method)": [[105, "gammapy.datasets.MapDatasetMetaData.to_header", false]], "to_header() (gammapy.estimators.fluxmetadata method)": [[126, "gammapy.estimators.FluxMetaData.to_header", false]], "to_header() (gammapy.maps.hpxgeom method)": [[195, "gammapy.maps.HpxGeom.to_header", false]], "to_header() (gammapy.maps.labelmapaxis method)": [[198, "gammapy.maps.LabelMapAxis.to_header", false]], "to_header() (gammapy.maps.mapaxes method)": [[200, "gammapy.maps.MapAxes.to_header", false]], "to_header() (gammapy.maps.mapaxis method)": [[201, "gammapy.maps.MapAxis.to_header", false]], "to_header() (gammapy.maps.timemapaxis method)": [[206, "gammapy.maps.TimeMapAxis.to_header", false]], "to_header() (gammapy.maps.wcsgeom method)": [[207, "gammapy.maps.WcsGeom.to_header", false]], "to_image() (gammapy.datasets.mapdataset method)": [[103, "gammapy.datasets.MapDataset.to_image", false]], "to_image() (gammapy.datasets.mapdatasetonoff method)": [[106, "gammapy.datasets.MapDatasetOnOff.to_image", false]], "to_image() (gammapy.datasets.spectrumdataset method)": [[110, "gammapy.datasets.SpectrumDataset.to_image", false]], "to_image() (gammapy.datasets.spectrumdatasetonoff method)": [[111, "gammapy.datasets.SpectrumDatasetOnOff.to_image", false]], "to_image() (gammapy.irf.edispkernel method)": [[153, "gammapy.irf.EDispKernel.to_image", false]], "to_image() (gammapy.irf.edispkernelmap method)": [[154, "gammapy.irf.EDispKernelMap.to_image", false]], "to_image() (gammapy.irf.psfkernel method)": [[164, "gammapy.irf.PSFKernel.to_image", false]], "to_image() (gammapy.irf.psfmap method)": [[166, "gammapy.irf.PSFMap.to_image", false]], "to_image() (gammapy.irf.recopsfmap method)": [[169, "gammapy.irf.RecoPSFMap.to_image", false]], "to_image() (gammapy.maps.geom method)": [[194, "gammapy.maps.Geom.to_image", false]], "to_image() (gammapy.maps.hpxgeom method)": [[195, "gammapy.maps.HpxGeom.to_image", false]], "to_image() (gammapy.maps.regiongeom method)": [[204, "gammapy.maps.RegionGeom.to_image", false]], "to_image() (gammapy.maps.wcsgeom method)": [[207, "gammapy.maps.WcsGeom.to_image", false]], "to_map_dataset() (gammapy.datasets.mapdatasetonoff method)": [[106, "gammapy.datasets.MapDatasetOnOff.to_map_dataset", false]], "to_map_dataset() (gammapy.datasets.spectrumdatasetonoff method)": [[111, "gammapy.datasets.SpectrumDatasetOnOff.to_map_dataset", false]], "to_maps() (gammapy.estimators.fluxmaps method)": [[125, "gammapy.estimators.FluxMaps.to_maps", false]], "to_maps() (gammapy.estimators.fluxpoints method)": [[127, "gammapy.estimators.FluxPoints.to_maps", false]], "to_masked() (gammapy.datasets.mapdataset method)": [[103, "gammapy.datasets.MapDataset.to_masked", false]], "to_masked() (gammapy.datasets.mapdatasetonoff method)": [[106, "gammapy.datasets.MapDatasetOnOff.to_masked", false]], "to_masked() (gammapy.datasets.spectrumdataset method)": [[110, "gammapy.datasets.SpectrumDataset.to_masked", false]], "to_masked() (gammapy.datasets.spectrumdatasetonoff method)": [[111, "gammapy.datasets.SpectrumDatasetOnOff.to_masked", false]], "to_models() (gammapy.catalog.sourcecatalog method)": [[56, "gammapy.catalog.SourceCatalog.to_models", false]], "to_models() (gammapy.catalog.sourcecatalog1lhaaso method)": [[57, "gammapy.catalog.SourceCatalog1LHAASO.to_models", false]], "to_models() (gammapy.catalog.sourcecatalog2fhl method)": [[58, "gammapy.catalog.SourceCatalog2FHL.to_models", false]], "to_models() (gammapy.catalog.sourcecatalog2hwc method)": [[59, "gammapy.catalog.SourceCatalog2HWC.to_models", false]], "to_models() (gammapy.catalog.sourcecatalog2pc method)": [[60, "gammapy.catalog.SourceCatalog2PC.to_models", false]], "to_models() (gammapy.catalog.sourcecatalog3fgl method)": [[61, "gammapy.catalog.SourceCatalog3FGL.to_models", false]], "to_models() (gammapy.catalog.sourcecatalog3fhl method)": [[62, "gammapy.catalog.SourceCatalog3FHL.to_models", false]], "to_models() (gammapy.catalog.sourcecatalog3hwc method)": [[63, "gammapy.catalog.SourceCatalog3HWC.to_models", false]], "to_models() (gammapy.catalog.sourcecatalog3pc method)": [[64, "gammapy.catalog.SourceCatalog3PC.to_models", false]], "to_models() (gammapy.catalog.sourcecatalog4fgl method)": [[65, "gammapy.catalog.SourceCatalog4FGL.to_models", false]], "to_models() (gammapy.catalog.sourcecataloggammacat method)": [[66, "gammapy.catalog.SourceCatalogGammaCat.to_models", false]], "to_models() (gammapy.catalog.sourcecataloghgps method)": [[67, "gammapy.catalog.SourceCatalogHGPS.to_models", false]], "to_node_type() (gammapy.maps.mapaxis method)": [[201, "gammapy.maps.MapAxis.to_node_type", false]], "to_nside() (gammapy.maps.hpxgeom method)": [[195, "gammapy.maps.HpxGeom.to_nside", false]], "to_nside() (gammapy.maps.hpxndmap method)": [[197, "gammapy.maps.HpxNDMap.to_nside", false]], "to_odd_npix() (gammapy.maps.wcsgeom method)": [[207, "gammapy.maps.WcsGeom.to_odd_npix", false]], "to_pandas() (gammapy.data.hduindextable method)": [[87, "gammapy.data.HDUIndexTable.to_pandas", false]], "to_pandas() (gammapy.data.observationtable method)": [[91, "gammapy.data.ObservationTable.to_pandas", false]], "to_parameters_table() (gammapy.modeling.models.datasetmodels method)": [[227, "gammapy.modeling.models.DatasetModels.to_parameters_table", false]], "to_parameters_table() (gammapy.modeling.models.models method)": [[251, "gammapy.modeling.models.Models.to_parameters_table", false]], "to_psf3d() (gammapy.irf.energydependentmultigausspsf method)": [[157, "gammapy.irf.EnergyDependentMultiGaussPSF.to_psf3d", false]], "to_psf3d() (gammapy.irf.parametricpsf method)": [[167, "gammapy.irf.ParametricPSF.to_psf3d", false]], "to_psf3d() (gammapy.irf.psfking method)": [[165, "gammapy.irf.PSFKing.to_psf3d", false]], "to_region() (gammapy.modeling.models.constantfluxspatialmodel method)": [[223, "gammapy.modeling.models.ConstantFluxSpatialModel.to_region", false]], "to_region() (gammapy.modeling.models.constantspatialmodel method)": [[224, "gammapy.modeling.models.ConstantSpatialModel.to_region", false]], "to_region() (gammapy.modeling.models.diskspatialmodel method)": [[228, "gammapy.modeling.models.DiskSpatialModel.to_region", false]], "to_region() (gammapy.modeling.models.gaussianspatialmodel method)": [[237, "gammapy.modeling.models.GaussianSpatialModel.to_region", false]], "to_region() (gammapy.modeling.models.generalizedgaussianspatialmodel method)": [[240, "gammapy.modeling.models.GeneralizedGaussianSpatialModel.to_region", false]], "to_region() (gammapy.modeling.models.pointspatialmodel method)": [[255, "gammapy.modeling.models.PointSpatialModel.to_region", false]], "to_region() (gammapy.modeling.models.shell2spatialmodel method)": [[264, "gammapy.modeling.models.Shell2SpatialModel.to_region", false]], "to_region() (gammapy.modeling.models.shellspatialmodel method)": [[265, "gammapy.modeling.models.ShellSpatialModel.to_region", false]], "to_region() (gammapy.modeling.models.templatespatialmodel method)": [[279, "gammapy.modeling.models.TemplateSpatialModel.to_region", false]], "to_region_map_dataset() (gammapy.datasets.mapdataset method)": [[103, "gammapy.datasets.MapDataset.to_region_map_dataset", false]], "to_region_map_dataset() (gammapy.datasets.mapdatasetonoff method)": [[106, "gammapy.datasets.MapDatasetOnOff.to_region_map_dataset", false]], "to_region_map_dataset() (gammapy.datasets.spectrumdataset method)": [[110, "gammapy.datasets.SpectrumDataset.to_region_map_dataset", false]], "to_region_map_dataset() (gammapy.datasets.spectrumdatasetonoff method)": [[111, "gammapy.datasets.SpectrumDatasetOnOff.to_region_map_dataset", false]], "to_region_nd_map() (gammapy.irf.edispkernelmap method)": [[154, "gammapy.irf.EDispKernelMap.to_region_nd_map", false]], "to_region_nd_map() (gammapy.irf.edispmap method)": [[155, "gammapy.irf.EDispMap.to_region_nd_map", false]], "to_region_nd_map() (gammapy.irf.irfmap method)": [[161, "gammapy.irf.IRFMap.to_region_nd_map", false]], "to_region_nd_map() (gammapy.irf.psfmap method)": [[166, "gammapy.irf.PSFMap.to_region_nd_map", false]], "to_region_nd_map() (gammapy.irf.recopsfmap method)": [[169, "gammapy.irf.RecoPSFMap.to_region_nd_map", false]], "to_region_nd_map() (gammapy.maps.hpxndmap method)": [[197, "gammapy.maps.HpxNDMap.to_region_nd_map", false]], "to_region_nd_map() (gammapy.maps.regionndmap method)": [[205, "gammapy.maps.RegionNDMap.to_region_nd_map", false]], "to_region_nd_map() (gammapy.maps.wcsndmap method)": [[209, "gammapy.maps.WcsNDMap.to_region_nd_map", false]], "to_region_nd_map_histogram() (gammapy.maps.wcsndmap method)": [[209, "gammapy.maps.WcsNDMap.to_region_nd_map_histogram", false]], "to_regions() (gammapy.modeling.models.datasetmodels method)": [[227, "gammapy.modeling.models.DatasetModels.to_regions", false]], "to_regions() (gammapy.modeling.models.models method)": [[251, "gammapy.modeling.models.Models.to_regions", false]], "to_spectrum_dataset() (gammapy.datasets.mapdataset method)": [[103, "gammapy.datasets.MapDataset.to_spectrum_dataset", false]], "to_spectrum_dataset() (gammapy.datasets.mapdatasetonoff method)": [[106, "gammapy.datasets.MapDatasetOnOff.to_spectrum_dataset", false]], "to_spectrum_dataset() (gammapy.datasets.spectrumdataset method)": [[110, "gammapy.datasets.SpectrumDataset.to_spectrum_dataset", false]], "to_spectrum_dataset() (gammapy.datasets.spectrumdatasetonoff method)": [[111, "gammapy.datasets.SpectrumDatasetOnOff.to_spectrum_dataset", false]], "to_spectrum_datasets() (gammapy.datasets.datasets method)": [[100, "gammapy.datasets.Datasets.to_spectrum_datasets", false]], "to_swapped() (gammapy.maps.hpxgeom method)": [[195, "gammapy.maps.HpxGeom.to_swapped", false]], "to_swapped() (gammapy.maps.hpxmap method)": [[196, "gammapy.maps.HpxMap.to_swapped", false]], "to_swapped() (gammapy.maps.hpxndmap method)": [[197, "gammapy.maps.HpxNDMap.to_swapped", false]], "to_table() (gammapy.estimators.fluxpoints method)": [[127, "gammapy.estimators.FluxPoints.to_table", false]], "to_table() (gammapy.irf.background2d method)": [[150, "gammapy.irf.Background2D.to_table", false]], "to_table() (gammapy.irf.background3d method)": [[151, "gammapy.irf.Background3D.to_table", false]], "to_table() (gammapy.irf.backgroundirf method)": [[152, "gammapy.irf.BackgroundIRF.to_table", false]], "to_table() (gammapy.irf.edispkernel method)": [[153, "gammapy.irf.EDispKernel.to_table", false]], "to_table() (gammapy.irf.effectiveareatable2d method)": [[156, "gammapy.irf.EffectiveAreaTable2D.to_table", false]], "to_table() (gammapy.irf.energydependentmultigausspsf method)": [[157, "gammapy.irf.EnergyDependentMultiGaussPSF.to_table", false]], "to_table() (gammapy.irf.energydispersion2d method)": [[158, "gammapy.irf.EnergyDispersion2D.to_table", false]], "to_table() (gammapy.irf.irf method)": [[160, "gammapy.irf.IRF.to_table", false]], "to_table() (gammapy.irf.parametricpsf method)": [[167, "gammapy.irf.ParametricPSF.to_table", false]], "to_table() (gammapy.irf.psf3d method)": [[163, "gammapy.irf.PSF3D.to_table", false]], "to_table() (gammapy.irf.psfking method)": [[165, "gammapy.irf.PSFKing.to_table", false]], "to_table() (gammapy.irf.radmax2d method)": [[168, "gammapy.irf.RadMax2D.to_table", false]], "to_table() (gammapy.maps.mapaxes method)": [[200, "gammapy.maps.MapAxes.to_table", false]], "to_table() (gammapy.maps.mapaxis method)": [[201, "gammapy.maps.MapAxis.to_table", false]], "to_table() (gammapy.maps.regionndmap method)": [[205, "gammapy.maps.RegionNDMap.to_table", false]], "to_table() (gammapy.maps.timemapaxis method)": [[206, "gammapy.maps.TimeMapAxis.to_table", false]], "to_table() (gammapy.modeling.models.lightcurvetemplatetemporalmodel method)": [[242, "gammapy.modeling.models.LightCurveTemplateTemporalModel.to_table", false]], "to_table() (gammapy.modeling.parameters method)": [[218, "gammapy.modeling.Parameters.to_table", false]], "to_table() (gammapy.modeling.priorparameters method)": [[220, "gammapy.modeling.PriorParameters.to_table", false]], "to_table_hdu() (gammapy.data.eventlist method)": [[83, "gammapy.data.EventList.to_table_hdu", false]], "to_table_hdu() (gammapy.data.gti method)": [[86, "gammapy.data.GTI.to_table_hdu", false]], "to_table_hdu() (gammapy.irf.background2d method)": [[150, "gammapy.irf.Background2D.to_table_hdu", false]], "to_table_hdu() (gammapy.irf.background3d method)": [[151, "gammapy.irf.Background3D.to_table_hdu", false]], "to_table_hdu() (gammapy.irf.backgroundirf method)": [[152, "gammapy.irf.BackgroundIRF.to_table_hdu", false]], "to_table_hdu() (gammapy.irf.edispkernel method)": [[153, "gammapy.irf.EDispKernel.to_table_hdu", false]], "to_table_hdu() (gammapy.irf.effectiveareatable2d method)": [[156, "gammapy.irf.EffectiveAreaTable2D.to_table_hdu", false]], "to_table_hdu() (gammapy.irf.energydependentmultigausspsf method)": [[157, "gammapy.irf.EnergyDependentMultiGaussPSF.to_table_hdu", false]], "to_table_hdu() (gammapy.irf.energydispersion2d method)": [[158, "gammapy.irf.EnergyDispersion2D.to_table_hdu", false]], "to_table_hdu() (gammapy.irf.irf method)": [[160, "gammapy.irf.IRF.to_table_hdu", false]], "to_table_hdu() (gammapy.irf.parametricpsf method)": [[167, "gammapy.irf.ParametricPSF.to_table_hdu", false]], "to_table_hdu() (gammapy.irf.psf3d method)": [[163, "gammapy.irf.PSF3D.to_table_hdu", false]], "to_table_hdu() (gammapy.irf.psfking method)": [[165, "gammapy.irf.PSFKing.to_table_hdu", false]], "to_table_hdu() (gammapy.irf.radmax2d method)": [[168, "gammapy.irf.RadMax2D.to_table_hdu", false]], "to_table_hdu() (gammapy.maps.mapaxes method)": [[200, "gammapy.maps.MapAxes.to_table_hdu", false]], "to_table_hdu() (gammapy.maps.mapaxis method)": [[201, "gammapy.maps.MapAxis.to_table_hdu", false]], "to_template_sky_model() (gammapy.modeling.models.datasetmodels method)": [[227, "gammapy.modeling.models.DatasetModels.to_template_sky_model", false]], "to_template_sky_model() (gammapy.modeling.models.models method)": [[251, "gammapy.modeling.models.Models.to_template_sky_model", false]], "to_template_spectral_model() (gammapy.modeling.models.datasetmodels method)": [[227, "gammapy.modeling.models.DatasetModels.to_template_spectral_model", false]], "to_template_spectral_model() (gammapy.modeling.models.models method)": [[251, "gammapy.modeling.models.Models.to_template_spectral_model", false]], "to_unit() (gammapy.irf.background2d method)": [[150, "gammapy.irf.Background2D.to_unit", false]], "to_unit() (gammapy.irf.background3d method)": [[151, "gammapy.irf.Background3D.to_unit", false]], "to_unit() (gammapy.irf.backgroundirf method)": [[152, "gammapy.irf.BackgroundIRF.to_unit", false]], "to_unit() (gammapy.irf.edispkernel method)": [[153, "gammapy.irf.EDispKernel.to_unit", false]], "to_unit() (gammapy.irf.effectiveareatable2d method)": [[156, "gammapy.irf.EffectiveAreaTable2D.to_unit", false]], "to_unit() (gammapy.irf.energydependentmultigausspsf method)": [[157, "gammapy.irf.EnergyDependentMultiGaussPSF.to_unit", false]], "to_unit() (gammapy.irf.energydispersion2d method)": [[158, "gammapy.irf.EnergyDispersion2D.to_unit", false]], "to_unit() (gammapy.irf.irf method)": [[160, "gammapy.irf.IRF.to_unit", false]], "to_unit() (gammapy.irf.parametricpsf method)": [[167, "gammapy.irf.ParametricPSF.to_unit", false]], "to_unit() (gammapy.irf.psf3d method)": [[163, "gammapy.irf.PSF3D.to_unit", false]], "to_unit() (gammapy.irf.psfking method)": [[165, "gammapy.irf.PSFKing.to_unit", false]], "to_unit() (gammapy.irf.radmax2d method)": [[168, "gammapy.irf.RadMax2D.to_unit", false]], "to_unit() (gammapy.maps.hpxmap method)": [[196, "gammapy.maps.HpxMap.to_unit", false]], "to_unit() (gammapy.maps.hpxndmap method)": [[197, "gammapy.maps.HpxNDMap.to_unit", false]], "to_unit() (gammapy.maps.map method)": [[199, "gammapy.maps.Map.to_unit", false]], "to_unit() (gammapy.maps.regionndmap method)": [[205, "gammapy.maps.RegionNDMap.to_unit", false]], "to_unit() (gammapy.maps.wcsmap method)": [[208, "gammapy.maps.WcsMap.to_unit", false]], "to_unit() (gammapy.maps.wcsndmap method)": [[209, "gammapy.maps.WcsNDMap.to_unit", false]], "to_wcs() (gammapy.maps.hpxmap method)": [[196, "gammapy.maps.HpxMap.to_wcs", false]], "to_wcs() (gammapy.maps.hpxndmap method)": [[197, "gammapy.maps.HpxNDMap.to_wcs", false]], "to_wcs_geom() (gammapy.maps.hpxgeom method)": [[195, "gammapy.maps.HpxGeom.to_wcs_geom", false]], "to_wcs_geom() (gammapy.maps.regiongeom method)": [[204, "gammapy.maps.RegionGeom.to_wcs_geom", false]], "to_wcs_tiles() (gammapy.maps.hpxgeom method)": [[195, "gammapy.maps.HpxGeom.to_wcs_tiles", false]], "to_wcs_tiles() (gammapy.maps.hpxndmap method)": [[197, "gammapy.maps.HpxNDMap.to_wcs_tiles", false]], "to_yaml() (gammapy.analysis.analysisconfig method)": [[16, "gammapy.analysis.AnalysisConfig.to_yaml", false]], "to_yaml() (gammapy.data.eventlistmetadata method)": [[84, "gammapy.data.EventListMetaData.to_yaml", false]], "to_yaml() (gammapy.data.observationmetadata method)": [[90, "gammapy.data.ObservationMetaData.to_yaml", false]], "to_yaml() (gammapy.datasets.mapdatasetmetadata method)": [[105, "gammapy.datasets.MapDatasetMetaData.to_yaml", false]], "to_yaml() (gammapy.estimators.fluxmetadata method)": [[126, "gammapy.estimators.FluxMetaData.to_yaml", false]], "to_yaml() (gammapy.modeling.models.datasetmodels method)": [[227, "gammapy.modeling.models.DatasetModels.to_yaml", false]], "to_yaml() (gammapy.modeling.models.models method)": [[251, "gammapy.modeling.models.Models.to_yaml", false]], "to_yaml() (in module gammapy.utils.scripts)": [[355, "gammapy.utils.scripts.to_yaml", false]], "total_stat (gammapy.modeling.fitresult attribute)": [[215, "gammapy.modeling.FitResult.total_stat", false]], "total_stat (gammapy.modeling.optimizeresult attribute)": [[216, "gammapy.modeling.OptimizeResult.total_stat", false]], "trace (gammapy.modeling.fitresult attribute)": [[215, "gammapy.modeling.FitResult.trace", false]], "trace (gammapy.modeling.optimizeresult attribute)": [[216, "gammapy.modeling.OptimizeResult.trace", false]], "transit": [[597, "term-Transit", true]], "trapz_loglog() (in module gammapy.utils.integrate)": [[325, "gammapy.utils.integrate.trapz_loglog", false]], "true energy": [[597, "term-True-Energy", true]], "ts": [[597, "term-TS", true]], "ts (gammapy.estimators.fluxmaps attribute)": [[125, "gammapy.estimators.FluxMaps.ts", false]], "ts (gammapy.estimators.fluxpoints attribute)": [[127, "gammapy.estimators.FluxPoints.ts", false]], "ts (gammapy.stats.cashcountsstatistic attribute)": [[292, "gammapy.stats.CashCountsStatistic.ts", false]], "ts (gammapy.stats.wstatcountsstatistic attribute)": [[294, "gammapy.stats.WStatCountsStatistic.ts", false]], "ts_scan (gammapy.estimators.fluxmaps attribute)": [[125, "gammapy.estimators.FluxMaps.ts_scan", false]], "ts_scan (gammapy.estimators.fluxpoints attribute)": [[127, "gammapy.estimators.FluxPoints.ts_scan", false]], "ts_to_sigma() (in module gammapy.stats)": [[309, "gammapy.stats.ts_to_sigma", false]], "tsmapestimator (class in gammapy.estimators)": [[136, "gammapy.estimators.TSMapEstimator", false]], "tstart (gammapy.data.observation attribute)": [[88, "gammapy.data.Observation.tstart", false]], "tstop (gammapy.data.observation attribute)": [[88, "gammapy.data.Observation.tstop", false]], "type (gammapy.astro.darkmatter.darkmatterannihilationspectralmodel attribute)": [[19, "gammapy.astro.darkmatter.DarkMatterAnnihilationSpectralModel.type", false]], "type (gammapy.astro.darkmatter.darkmatterdecayspectralmodel attribute)": [[20, "gammapy.astro.darkmatter.DarkMatterDecaySpectralModel.type", false]], "type (gammapy.astro.darkmatter.primaryflux attribute)": [[26, "gammapy.astro.darkmatter.PrimaryFlux.type", false]], "type (gammapy.modeling.models.brokenpowerlawspectralmodel attribute)": [[221, "gammapy.modeling.models.BrokenPowerLawSpectralModel.type", false]], "type (gammapy.modeling.models.compoundspectralmodel attribute)": [[222, "gammapy.modeling.models.CompoundSpectralModel.type", false]], "type (gammapy.modeling.models.constantfluxspatialmodel attribute)": [[223, "gammapy.modeling.models.ConstantFluxSpatialModel.type", false]], "type (gammapy.modeling.models.constantspatialmodel attribute)": [[224, "gammapy.modeling.models.ConstantSpatialModel.type", false]], "type (gammapy.modeling.models.constantspectralmodel attribute)": [[225, "gammapy.modeling.models.ConstantSpectralModel.type", false]], "type (gammapy.modeling.models.constanttemporalmodel attribute)": [[226, "gammapy.modeling.models.ConstantTemporalModel.type", false]], "type (gammapy.modeling.models.diskspatialmodel attribute)": [[228, "gammapy.modeling.models.DiskSpatialModel.type", false]], "type (gammapy.modeling.models.eblabsorptionnormspectralmodel attribute)": [[229, "gammapy.modeling.models.EBLAbsorptionNormSpectralModel.type", false]], "type (gammapy.modeling.models.expcutoffpowerlaw3fglspectralmodel attribute)": [[231, "gammapy.modeling.models.ExpCutoffPowerLaw3FGLSpectralModel.type", false]], "type (gammapy.modeling.models.expcutoffpowerlawnormspectralmodel attribute)": [[232, "gammapy.modeling.models.ExpCutoffPowerLawNormSpectralModel.type", false]], "type (gammapy.modeling.models.expcutoffpowerlawspectralmodel attribute)": [[233, "gammapy.modeling.models.ExpCutoffPowerLawSpectralModel.type", false]], "type (gammapy.modeling.models.expdecaytemporalmodel attribute)": [[234, "gammapy.modeling.models.ExpDecayTemporalModel.type", false]], "type (gammapy.modeling.models.fovbackgroundmodel attribute)": [[235, "gammapy.modeling.models.FoVBackgroundModel.type", false]], "type (gammapy.modeling.models.gaussianprior attribute)": [[236, "gammapy.modeling.models.GaussianPrior.type", false]], "type (gammapy.modeling.models.gaussianspatialmodel attribute)": [[237, "gammapy.modeling.models.GaussianSpatialModel.type", false]], "type (gammapy.modeling.models.gaussianspectralmodel attribute)": [[238, "gammapy.modeling.models.GaussianSpectralModel.type", false]], "type (gammapy.modeling.models.gaussiantemporalmodel attribute)": [[239, "gammapy.modeling.models.GaussianTemporalModel.type", false]], "type (gammapy.modeling.models.generalizedgaussianspatialmodel attribute)": [[240, "gammapy.modeling.models.GeneralizedGaussianSpatialModel.type", false]], "type (gammapy.modeling.models.generalizedgaussiantemporalmodel attribute)": [[241, "gammapy.modeling.models.GeneralizedGaussianTemporalModel.type", false]], "type (gammapy.modeling.models.lightcurvetemplatetemporalmodel attribute)": [[242, "gammapy.modeling.models.LightCurveTemplateTemporalModel.type", false]], "type (gammapy.modeling.models.lineartemporalmodel attribute)": [[243, "gammapy.modeling.models.LinearTemporalModel.type", false]], "type (gammapy.modeling.models.logparabolanormspectralmodel attribute)": [[244, "gammapy.modeling.models.LogParabolaNormSpectralModel.type", false]], "type (gammapy.modeling.models.logparabolaspectralmodel attribute)": [[245, "gammapy.modeling.models.LogParabolaSpectralModel.type", false]], "type (gammapy.modeling.models.loguniformprior attribute)": [[246, "gammapy.modeling.models.LogUniformPrior.type", false]], "type (gammapy.modeling.models.meyercrabspectralmodel attribute)": [[248, "gammapy.modeling.models.MeyerCrabSpectralModel.type", false]], "type (gammapy.modeling.models.modelbase attribute)": [[250, "gammapy.modeling.models.ModelBase.type", false]], "type (gammapy.modeling.models.naimaspectralmodel attribute)": [[252, "gammapy.modeling.models.NaimaSpectralModel.type", false]], "type (gammapy.modeling.models.piecewisenormspatialmodel attribute)": [[253, "gammapy.modeling.models.PiecewiseNormSpatialModel.type", false]], "type (gammapy.modeling.models.piecewisenormspectralmodel attribute)": [[254, "gammapy.modeling.models.PiecewiseNormSpectralModel.type", false]], "type (gammapy.modeling.models.pointspatialmodel attribute)": [[255, "gammapy.modeling.models.PointSpatialModel.type", false]], "type (gammapy.modeling.models.powerlaw2spectralmodel attribute)": [[256, "gammapy.modeling.models.PowerLaw2SpectralModel.type", false]], "type (gammapy.modeling.models.powerlawnormspectralmodel attribute)": [[257, "gammapy.modeling.models.PowerLawNormSpectralModel.type", false]], "type (gammapy.modeling.models.powerlawspectralmodel attribute)": [[258, "gammapy.modeling.models.PowerLawSpectralModel.type", false]], "type (gammapy.modeling.models.powerlawtemporalmodel attribute)": [[259, "gammapy.modeling.models.PowerLawTemporalModel.type", false]], "type (gammapy.modeling.models.prior attribute)": [[260, "gammapy.modeling.models.Prior.type", false]], "type (gammapy.modeling.models.scalespectralmodel attribute)": [[263, "gammapy.modeling.models.ScaleSpectralModel.type", false]], "type (gammapy.modeling.models.shell2spatialmodel attribute)": [[264, "gammapy.modeling.models.Shell2SpatialModel.type", false]], "type (gammapy.modeling.models.shellspatialmodel attribute)": [[265, "gammapy.modeling.models.ShellSpatialModel.type", false]], "type (gammapy.modeling.models.sinetemporalmodel attribute)": [[266, "gammapy.modeling.models.SineTemporalModel.type", false]], "type (gammapy.modeling.models.skymodel attribute)": [[267, "gammapy.modeling.models.SkyModel.type", false]], "type (gammapy.modeling.models.smoothbrokenpowerlawspectralmodel attribute)": [[268, "gammapy.modeling.models.SmoothBrokenPowerLawSpectralModel.type", false]], "type (gammapy.modeling.models.spatialmodel attribute)": [[269, "gammapy.modeling.models.SpatialModel.type", false]], "type (gammapy.modeling.models.spectralmodel attribute)": [[270, "gammapy.modeling.models.SpectralModel.type", false]], "type (gammapy.modeling.models.superexpcutoffpowerlaw3fglspectralmodel attribute)": [[271, "gammapy.modeling.models.SuperExpCutoffPowerLaw3FGLSpectralModel.type", false]], "type (gammapy.modeling.models.superexpcutoffpowerlaw4fgldr3spectralmodel attribute)": [[272, "gammapy.modeling.models.SuperExpCutoffPowerLaw4FGLDR3SpectralModel.type", false]], "type (gammapy.modeling.models.superexpcutoffpowerlaw4fglspectralmodel attribute)": [[273, "gammapy.modeling.models.SuperExpCutoffPowerLaw4FGLSpectralModel.type", false]], "type (gammapy.modeling.models.templatendspatialmodel attribute)": [[275, "gammapy.modeling.models.TemplateNDSpatialModel.type", false]], "type (gammapy.modeling.models.templatendspectralmodel attribute)": [[276, "gammapy.modeling.models.TemplateNDSpectralModel.type", false]], "type (gammapy.modeling.models.templatenpredmodel attribute)": [[277, "gammapy.modeling.models.TemplateNPredModel.type", false]], "type (gammapy.modeling.models.templatephasecurvetemporalmodel attribute)": [[278, "gammapy.modeling.models.TemplatePhaseCurveTemporalModel.type", false]], "type (gammapy.modeling.models.templatespatialmodel attribute)": [[279, "gammapy.modeling.models.TemplateSpatialModel.type", false]], "type (gammapy.modeling.models.templatespectralmodel attribute)": [[280, "gammapy.modeling.models.TemplateSpectralModel.type", false]], "type (gammapy.modeling.models.temporalmodel attribute)": [[281, "gammapy.modeling.models.TemporalModel.type", false]], "type (gammapy.modeling.models.uniformprior attribute)": [[282, "gammapy.modeling.models.UniformPrior.type", false]], "type (gammapy.modeling.parameter attribute)": [[217, "gammapy.modeling.Parameter.type", false]], "type (gammapy.modeling.priorparameter attribute)": [[219, "gammapy.modeling.PriorParameter.type", false]], "types (gammapy.modeling.parameters attribute)": [[218, "gammapy.modeling.Parameters.types", false]], "types (gammapy.modeling.priorparameters attribute)": [[220, "gammapy.modeling.PriorParameters.types", false]], "unfreeze() (gammapy.astro.darkmatter.darkmatterannihilationspectralmodel method)": [[19, "gammapy.astro.darkmatter.DarkMatterAnnihilationSpectralModel.unfreeze", false]], "unfreeze() (gammapy.astro.darkmatter.darkmatterdecayspectralmodel method)": [[20, "gammapy.astro.darkmatter.DarkMatterDecaySpectralModel.unfreeze", false]], "unfreeze() (gammapy.astro.darkmatter.primaryflux method)": [[26, "gammapy.astro.darkmatter.PrimaryFlux.unfreeze", false]], "unfreeze() (gammapy.modeling.models.brokenpowerlawspectralmodel method)": [[221, "gammapy.modeling.models.BrokenPowerLawSpectralModel.unfreeze", false]], "unfreeze() (gammapy.modeling.models.compoundspectralmodel method)": [[222, "gammapy.modeling.models.CompoundSpectralModel.unfreeze", false]], "unfreeze() (gammapy.modeling.models.constantfluxspatialmodel method)": [[223, "gammapy.modeling.models.ConstantFluxSpatialModel.unfreeze", false]], "unfreeze() (gammapy.modeling.models.constantspatialmodel method)": [[224, "gammapy.modeling.models.ConstantSpatialModel.unfreeze", false]], "unfreeze() (gammapy.modeling.models.constantspectralmodel method)": [[225, "gammapy.modeling.models.ConstantSpectralModel.unfreeze", false]], "unfreeze() (gammapy.modeling.models.constanttemporalmodel method)": [[226, "gammapy.modeling.models.ConstantTemporalModel.unfreeze", false]], "unfreeze() (gammapy.modeling.models.datasetmodels method)": [[227, "gammapy.modeling.models.DatasetModels.unfreeze", false]], "unfreeze() (gammapy.modeling.models.diskspatialmodel method)": [[228, "gammapy.modeling.models.DiskSpatialModel.unfreeze", false]], "unfreeze() (gammapy.modeling.models.eblabsorptionnormspectralmodel method)": [[229, "gammapy.modeling.models.EBLAbsorptionNormSpectralModel.unfreeze", false]], "unfreeze() (gammapy.modeling.models.expcutoffpowerlaw3fglspectralmodel method)": [[231, "gammapy.modeling.models.ExpCutoffPowerLaw3FGLSpectralModel.unfreeze", false]], "unfreeze() (gammapy.modeling.models.expcutoffpowerlawnormspectralmodel method)": [[232, "gammapy.modeling.models.ExpCutoffPowerLawNormSpectralModel.unfreeze", false]], "unfreeze() (gammapy.modeling.models.expcutoffpowerlawspectralmodel method)": [[233, "gammapy.modeling.models.ExpCutoffPowerLawSpectralModel.unfreeze", false]], "unfreeze() (gammapy.modeling.models.expdecaytemporalmodel method)": [[234, "gammapy.modeling.models.ExpDecayTemporalModel.unfreeze", false]], "unfreeze() (gammapy.modeling.models.fovbackgroundmodel method)": [[235, "gammapy.modeling.models.FoVBackgroundModel.unfreeze", false]], "unfreeze() (gammapy.modeling.models.gaussianprior method)": [[236, "gammapy.modeling.models.GaussianPrior.unfreeze", false]], "unfreeze() (gammapy.modeling.models.gaussianspatialmodel method)": [[237, "gammapy.modeling.models.GaussianSpatialModel.unfreeze", false]], "unfreeze() (gammapy.modeling.models.gaussianspectralmodel method)": [[238, "gammapy.modeling.models.GaussianSpectralModel.unfreeze", false]], "unfreeze() (gammapy.modeling.models.gaussiantemporalmodel method)": [[239, "gammapy.modeling.models.GaussianTemporalModel.unfreeze", false]], "unfreeze() (gammapy.modeling.models.generalizedgaussianspatialmodel method)": [[240, "gammapy.modeling.models.GeneralizedGaussianSpatialModel.unfreeze", false]], "unfreeze() (gammapy.modeling.models.generalizedgaussiantemporalmodel method)": [[241, "gammapy.modeling.models.GeneralizedGaussianTemporalModel.unfreeze", false]], "unfreeze() (gammapy.modeling.models.lightcurvetemplatetemporalmodel method)": [[242, "gammapy.modeling.models.LightCurveTemplateTemporalModel.unfreeze", false]], "unfreeze() (gammapy.modeling.models.lineartemporalmodel method)": [[243, "gammapy.modeling.models.LinearTemporalModel.unfreeze", false]], "unfreeze() (gammapy.modeling.models.logparabolanormspectralmodel method)": [[244, "gammapy.modeling.models.LogParabolaNormSpectralModel.unfreeze", false]], "unfreeze() (gammapy.modeling.models.logparabolaspectralmodel method)": [[245, "gammapy.modeling.models.LogParabolaSpectralModel.unfreeze", false]], "unfreeze() (gammapy.modeling.models.loguniformprior method)": [[246, "gammapy.modeling.models.LogUniformPrior.unfreeze", false]], "unfreeze() (gammapy.modeling.models.meyercrabspectralmodel method)": [[248, "gammapy.modeling.models.MeyerCrabSpectralModel.unfreeze", false]], "unfreeze() (gammapy.modeling.models.modelbase method)": [[250, "gammapy.modeling.models.ModelBase.unfreeze", false]], "unfreeze() (gammapy.modeling.models.models method)": [[251, "gammapy.modeling.models.Models.unfreeze", false]], "unfreeze() (gammapy.modeling.models.naimaspectralmodel method)": [[252, "gammapy.modeling.models.NaimaSpectralModel.unfreeze", false]], "unfreeze() (gammapy.modeling.models.piecewisenormspatialmodel method)": [[253, "gammapy.modeling.models.PiecewiseNormSpatialModel.unfreeze", false]], "unfreeze() (gammapy.modeling.models.piecewisenormspectralmodel method)": [[254, "gammapy.modeling.models.PiecewiseNormSpectralModel.unfreeze", false]], "unfreeze() (gammapy.modeling.models.pointspatialmodel method)": [[255, "gammapy.modeling.models.PointSpatialModel.unfreeze", false]], "unfreeze() (gammapy.modeling.models.powerlaw2spectralmodel method)": [[256, "gammapy.modeling.models.PowerLaw2SpectralModel.unfreeze", false]], "unfreeze() (gammapy.modeling.models.powerlawnormspectralmodel method)": [[257, "gammapy.modeling.models.PowerLawNormSpectralModel.unfreeze", false]], "unfreeze() (gammapy.modeling.models.powerlawspectralmodel method)": [[258, "gammapy.modeling.models.PowerLawSpectralModel.unfreeze", false]], "unfreeze() (gammapy.modeling.models.powerlawtemporalmodel method)": [[259, "gammapy.modeling.models.PowerLawTemporalModel.unfreeze", false]], "unfreeze() (gammapy.modeling.models.prior method)": [[260, "gammapy.modeling.models.Prior.unfreeze", false]], "unfreeze() (gammapy.modeling.models.scalespectralmodel method)": [[263, "gammapy.modeling.models.ScaleSpectralModel.unfreeze", false]], "unfreeze() (gammapy.modeling.models.shell2spatialmodel method)": [[264, "gammapy.modeling.models.Shell2SpatialModel.unfreeze", false]], "unfreeze() (gammapy.modeling.models.shellspatialmodel method)": [[265, "gammapy.modeling.models.ShellSpatialModel.unfreeze", false]], "unfreeze() (gammapy.modeling.models.sinetemporalmodel method)": [[266, "gammapy.modeling.models.SineTemporalModel.unfreeze", false]], "unfreeze() (gammapy.modeling.models.skymodel method)": [[267, "gammapy.modeling.models.SkyModel.unfreeze", false]], "unfreeze() (gammapy.modeling.models.smoothbrokenpowerlawspectralmodel method)": [[268, "gammapy.modeling.models.SmoothBrokenPowerLawSpectralModel.unfreeze", false]], "unfreeze() (gammapy.modeling.models.spatialmodel method)": [[269, "gammapy.modeling.models.SpatialModel.unfreeze", false]], "unfreeze() (gammapy.modeling.models.spectralmodel method)": [[270, "gammapy.modeling.models.SpectralModel.unfreeze", false]], "unfreeze() (gammapy.modeling.models.superexpcutoffpowerlaw3fglspectralmodel method)": [[271, "gammapy.modeling.models.SuperExpCutoffPowerLaw3FGLSpectralModel.unfreeze", false]], "unfreeze() (gammapy.modeling.models.superexpcutoffpowerlaw4fgldr3spectralmodel method)": [[272, "gammapy.modeling.models.SuperExpCutoffPowerLaw4FGLDR3SpectralModel.unfreeze", false]], "unfreeze() (gammapy.modeling.models.superexpcutoffpowerlaw4fglspectralmodel method)": [[273, "gammapy.modeling.models.SuperExpCutoffPowerLaw4FGLSpectralModel.unfreeze", false]], "unfreeze() (gammapy.modeling.models.templatendspatialmodel method)": [[275, "gammapy.modeling.models.TemplateNDSpatialModel.unfreeze", false]], "unfreeze() (gammapy.modeling.models.templatendspectralmodel method)": [[276, "gammapy.modeling.models.TemplateNDSpectralModel.unfreeze", false]], "unfreeze() (gammapy.modeling.models.templatenpredmodel method)": [[277, "gammapy.modeling.models.TemplateNPredModel.unfreeze", false]], "unfreeze() (gammapy.modeling.models.templatephasecurvetemporalmodel method)": [[278, "gammapy.modeling.models.TemplatePhaseCurveTemporalModel.unfreeze", false]], "unfreeze() (gammapy.modeling.models.templatespatialmodel method)": [[279, "gammapy.modeling.models.TemplateSpatialModel.unfreeze", false]], "unfreeze() (gammapy.modeling.models.templatespectralmodel method)": [[280, "gammapy.modeling.models.TemplateSpectralModel.unfreeze", false]], "unfreeze() (gammapy.modeling.models.temporalmodel method)": [[281, "gammapy.modeling.models.TemporalModel.unfreeze", false]], "unfreeze() (gammapy.modeling.models.uniformprior method)": [[282, "gammapy.modeling.models.UniformPrior.unfreeze", false]], "unfreeze_all() (gammapy.modeling.parameters method)": [[218, "gammapy.modeling.Parameters.unfreeze_all", false]], "unfreeze_all() (gammapy.modeling.priorparameters method)": [[220, "gammapy.modeling.PriorParameters.unfreeze_all", false]], "uniformprior (class in gammapy.modeling.models)": [[282, "gammapy.modeling.models.UniformPrior", false]], "union() (gammapy.data.gti method)": [[86, "gammapy.data.GTI.union", false]], "union() (gammapy.maps.regiongeom method)": [[204, "gammapy.maps.RegionGeom.union", false]], "unique_parameters (gammapy.modeling.parameters attribute)": [[218, "gammapy.modeling.Parameters.unique_parameters", false]], "unique_parameters (gammapy.modeling.priorparameters attribute)": [[220, "gammapy.modeling.PriorParameters.unique_parameters", false]], "unit (gammapy.irf.background2d attribute)": [[150, "gammapy.irf.Background2D.unit", false]], "unit (gammapy.irf.background3d attribute)": [[151, "gammapy.irf.Background3D.unit", false]], "unit (gammapy.irf.backgroundirf attribute)": [[152, "gammapy.irf.BackgroundIRF.unit", false]], "unit (gammapy.irf.edispkernel attribute)": [[153, "gammapy.irf.EDispKernel.unit", false]], "unit (gammapy.irf.effectiveareatable2d attribute)": [[156, "gammapy.irf.EffectiveAreaTable2D.unit", false]], "unit (gammapy.irf.energydependentmultigausspsf attribute)": [[157, "gammapy.irf.EnergyDependentMultiGaussPSF.unit", false]], "unit (gammapy.irf.energydispersion2d attribute)": [[158, "gammapy.irf.EnergyDispersion2D.unit", false]], "unit (gammapy.irf.irf attribute)": [[160, "gammapy.irf.IRF.unit", false]], "unit (gammapy.irf.parametricpsf attribute)": [[167, "gammapy.irf.ParametricPSF.unit", false]], "unit (gammapy.irf.psf3d attribute)": [[163, "gammapy.irf.PSF3D.unit", false]], "unit (gammapy.irf.psfking attribute)": [[165, "gammapy.irf.PSFKing.unit", false]], "unit (gammapy.irf.radmax2d attribute)": [[168, "gammapy.irf.RadMax2D.unit", false]], "unit (gammapy.maps.hpxmap attribute)": [[196, "gammapy.maps.HpxMap.unit", false]], "unit (gammapy.maps.hpxndmap attribute)": [[197, "gammapy.maps.HpxNDMap.unit", false]], "unit (gammapy.maps.labelmapaxis attribute)": [[198, "gammapy.maps.LabelMapAxis.unit", false]], "unit (gammapy.maps.map attribute)": [[199, "gammapy.maps.Map.unit", false]], "unit (gammapy.maps.mapaxis attribute)": [[201, "gammapy.maps.MapAxis.unit", false]], "unit (gammapy.maps.regionndmap attribute)": [[205, "gammapy.maps.RegionNDMap.unit", false]], "unit (gammapy.maps.timemapaxis attribute)": [[206, "gammapy.maps.TimeMapAxis.unit", false]], "unit (gammapy.maps.wcsmap attribute)": [[208, "gammapy.maps.WcsMap.unit", false]], "unit (gammapy.maps.wcsndmap attribute)": [[209, "gammapy.maps.WcsNDMap.unit", false]], "unit (gammapy.modeling.parameter attribute)": [[217, "gammapy.modeling.Parameter.unit", false]], "unit (gammapy.modeling.priorparameter attribute)": [[219, "gammapy.modeling.PriorParameter.unit", false]], "unit_from_fits_image_hdu() (in module gammapy.utils.units)": [[373, "gammapy.utils.units.unit_from_fits_image_hdu", false]], "update() (gammapy.analysis.analysisconfig method)": [[16, "gammapy.analysis.AnalysisConfig.update", false]], "update() (gammapy.data.hduindextable method)": [[87, "gammapy.data.HDUIndexTable.update", false]], "update() (gammapy.data.observationtable method)": [[91, "gammapy.data.ObservationTable.update", false]], "update() (gammapy.maps.maps method)": [[203, "gammapy.maps.Maps.update", false]], "update_config() (gammapy.analysis.analysis method)": [[15, "gammapy.analysis.Analysis.update_config", false]], "update_forward_refs() (gammapy.analysis.analysisconfig class method)": [[16, "gammapy.analysis.AnalysisConfig.update_forward_refs", false]], "update_forward_refs() (gammapy.data.eventlistmetadata class method)": [[84, "gammapy.data.EventListMetaData.update_forward_refs", false]], "update_forward_refs() (gammapy.data.observationmetadata class method)": [[90, "gammapy.data.ObservationMetaData.update_forward_refs", false]], "update_forward_refs() (gammapy.datasets.mapdatasetmetadata class method)": [[105, "gammapy.datasets.MapDatasetMetaData.update_forward_refs", false]], "update_forward_refs() (gammapy.estimators.fluxmetadata class method)": [[126, "gammapy.estimators.FluxMetaData.update_forward_refs", false]], "update_from_dict() (gammapy.modeling.parameter method)": [[217, "gammapy.modeling.Parameter.update_from_dict", false]], "update_from_dict() (gammapy.modeling.priorparameter method)": [[219, "gammapy.modeling.PriorParameter.update_from_dict", false]], "update_link_label() (gammapy.modeling.models.datasetmodels method)": [[227, "gammapy.modeling.models.DatasetModels.update_link_label", false]], "update_link_label() (gammapy.modeling.models.models method)": [[251, "gammapy.modeling.models.Models.update_link_label", false]], "update_parameters_from_table() (gammapy.modeling.models.datasetmodels method)": [[227, "gammapy.modeling.models.DatasetModels.update_parameters_from_table", false]], "update_parameters_from_table() (gammapy.modeling.models.models method)": [[251, "gammapy.modeling.models.Models.update_parameters_from_table", false]], "upsample() (gammapy.maps.geom method)": [[194, "gammapy.maps.Geom.upsample", false]], "upsample() (gammapy.maps.hpxgeom method)": [[195, "gammapy.maps.HpxGeom.upsample", false]], "upsample() (gammapy.maps.hpxmap method)": [[196, "gammapy.maps.HpxMap.upsample", false]], "upsample() (gammapy.maps.hpxndmap method)": [[197, "gammapy.maps.HpxNDMap.upsample", false]], "upsample() (gammapy.maps.labelmapaxis method)": [[198, "gammapy.maps.LabelMapAxis.upsample", false]], "upsample() (gammapy.maps.map method)": [[199, "gammapy.maps.Map.upsample", false]], "upsample() (gammapy.maps.mapaxes method)": [[200, "gammapy.maps.MapAxes.upsample", false]], "upsample() (gammapy.maps.mapaxis method)": [[201, "gammapy.maps.MapAxis.upsample", false]], "upsample() (gammapy.maps.regiongeom method)": [[204, "gammapy.maps.RegionGeom.upsample", false]], "upsample() (gammapy.maps.regionndmap method)": [[205, "gammapy.maps.RegionNDMap.upsample", false]], "upsample() (gammapy.maps.timemapaxis method)": [[206, "gammapy.maps.TimeMapAxis.upsample", false]], "upsample() (gammapy.maps.wcsgeom method)": [[207, "gammapy.maps.WcsGeom.upsample", false]], "upsample() (gammapy.maps.wcsmap method)": [[208, "gammapy.maps.WcsMap.upsample", false]], "upsample() (gammapy.maps.wcsndmap method)": [[209, "gammapy.maps.WcsNDMap.upsample", false]], "use_center_as_plot_labels (gammapy.maps.mapaxis attribute)": [[201, "gammapy.maps.MapAxis.use_center_as_plot_labels", false]], "uses_quantity (gammapy.astro.population.casebattacharya1998 attribute)": [[28, "gammapy.astro.population.CaseBattacharya1998.uses_quantity", false]], "uses_quantity (gammapy.astro.population.exponential attribute)": [[29, "gammapy.astro.population.Exponential.uses_quantity", false]], "uses_quantity (gammapy.astro.population.faucherkaspi2006 attribute)": [[30, "gammapy.astro.population.FaucherKaspi2006.uses_quantity", false]], "uses_quantity (gammapy.astro.population.faucherkaspi2006velocitybimodal attribute)": [[31, "gammapy.astro.population.FaucherKaspi2006VelocityBimodal.uses_quantity", false]], "uses_quantity (gammapy.astro.population.faucherkaspi2006velocitymaxwellian attribute)": [[32, "gammapy.astro.population.FaucherKaspi2006VelocityMaxwellian.uses_quantity", false]], "uses_quantity (gammapy.astro.population.lorimer2006 attribute)": [[35, "gammapy.astro.population.Lorimer2006.uses_quantity", false]], "uses_quantity (gammapy.astro.population.paczynski1990 attribute)": [[36, "gammapy.astro.population.Paczynski1990.uses_quantity", false]], "uses_quantity (gammapy.astro.population.paczynski1990velocity attribute)": [[37, "gammapy.astro.population.Paczynski1990Velocity.uses_quantity", false]], "uses_quantity (gammapy.astro.population.yusifovkucuk2004 attribute)": [[39, "gammapy.astro.population.YusifovKucuk2004.uses_quantity", false]], "uses_quantity (gammapy.astro.population.yusifovkucuk2004b attribute)": [[40, "gammapy.astro.population.YusifovKucuk2004B.uses_quantity", false]], "v_0 (gammapy.astro.population.paczynski1990velocity attribute)": [[37, "gammapy.astro.population.Paczynski1990Velocity.v_0", false]], "valid_hdu_class (gammapy.data.hduindextable attribute)": [[87, "gammapy.data.HDUIndexTable.VALID_HDU_CLASS", false]], "valid_hdu_type (gammapy.data.hduindextable attribute)": [[87, "gammapy.data.HDUIndexTable.VALID_HDU_TYPE", false]], "validate() (gammapy.analysis.analysisconfig class method)": [[16, "gammapy.analysis.AnalysisConfig.validate", false]], "validate() (gammapy.data.eventlistmetadata class method)": [[84, "gammapy.data.EventListMetaData.validate", false]], "validate() (gammapy.data.observationmetadata class method)": [[90, "gammapy.data.ObservationMetaData.validate", false]], "validate() (gammapy.datasets.mapdatasetmetadata class method)": [[105, "gammapy.datasets.MapDatasetMetaData.validate", false]], "validate() (gammapy.estimators.fluxmetadata class method)": [[126, "gammapy.estimators.FluxMetaData.validate", false]], "valleespiral (class in gammapy.astro.population)": [[38, "gammapy.astro.population.ValleeSpiral", false]], "value (gammapy.modeling.models.constantspatialmodel attribute)": [[224, "gammapy.modeling.models.ConstantSpatialModel.value", false]], "value (gammapy.modeling.parameter attribute)": [[217, "gammapy.modeling.Parameter.value", false]], "value (gammapy.modeling.parameters attribute)": [[218, "gammapy.modeling.Parameters.value", false]], "value (gammapy.modeling.priorparameter attribute)": [[219, "gammapy.modeling.PriorParameter.value", false]], "value (gammapy.modeling.priorparameters attribute)": [[220, "gammapy.modeling.PriorParameters.value", false]], "values() (gammapy.data.hduindextable method)": [[87, "gammapy.data.HDUIndexTable.values", false]], "values() (gammapy.data.observationtable method)": [[91, "gammapy.data.ObservationTable.values", false]], "values() (gammapy.maps.maps method)": [[203, "gammapy.maps.Maps.values", false]], "values_equal() (gammapy.data.hduindextable method)": [[87, "gammapy.data.HDUIndexTable.values_equal", false]], "values_equal() (gammapy.data.observationtable method)": [[91, "gammapy.data.ObservationTable.values_equal", false]], "velocity_distributions (in module gammapy.astro.population)": [[49, "gammapy.astro.population.velocity_distributions", false]], "velocity_glon_glat() (in module gammapy.utils.coordinates)": [[321, "gammapy.utils.coordinates.velocity_glon_glat", false]], "w (gammapy.astro.population.faucherkaspi2006velocitybimodal attribute)": [[31, "gammapy.astro.population.FaucherKaspi2006VelocityBimodal.w", false]], "wcs (gammapy.maps.regiongeom attribute)": [[204, "gammapy.maps.RegionGeom.wcs", false]], "wcs (gammapy.maps.wcsgeom attribute)": [[207, "gammapy.maps.WcsGeom.wcs", false]], "wcs_geom (gammapy.modeling.models.datasetmodels attribute)": [[227, "gammapy.modeling.models.DatasetModels.wcs_geom", false]], "wcs_geom (gammapy.modeling.models.models attribute)": [[251, "gammapy.modeling.models.Models.wcs_geom", false]], "wcsgeom (class in gammapy.maps)": [[207, "gammapy.maps.WcsGeom", false]], "wcsmap (class in gammapy.maps)": [[208, "gammapy.maps.WcsMap", false]], "wcsndmap (class in gammapy.maps)": [[209, "gammapy.maps.WcsNDMap", false]], "weight (gammapy.modeling.models.gaussianprior attribute)": [[236, "gammapy.modeling.models.GaussianPrior.weight", false]], "weight (gammapy.modeling.models.loguniformprior attribute)": [[246, "gammapy.modeling.models.LogUniformPrior.weight", false]], "weight (gammapy.modeling.models.prior attribute)": [[260, "gammapy.modeling.models.Prior.weight", false]], "weight (gammapy.modeling.models.uniformprior attribute)": [[282, "gammapy.modeling.models.UniformPrior.weight", false]], "weighted_cash_sum_cython() (in module gammapy.stats)": [[310, "gammapy.stats.weighted_cash_sum_cython", false]], "width (gammapy.maps.hpxgeom attribute)": [[195, "gammapy.maps.HpxGeom.width", false]], "width (gammapy.maps.regiongeom attribute)": [[204, "gammapy.maps.RegionGeom.width", false]], "width (gammapy.maps.wcsgeom attribute)": [[207, "gammapy.maps.WcsGeom.width", false]], "width (gammapy.modeling.models.shellspatialmodel attribute)": [[265, "gammapy.modeling.models.ShellSpatialModel.width", false]], "width() (gammapy.catalog.sourcecataloglargescalehgps method)": [[68, "gammapy.catalog.SourceCatalogLargeScaleHGPS.width", false]], "width_error() (gammapy.catalog.sourcecataloglargescalehgps method)": [[68, "gammapy.catalog.SourceCatalogLargeScaleHGPS.width_error", false]], "with_units_from_data() (gammapy.astro.population.casebattacharya1998 method)": [[28, "gammapy.astro.population.CaseBattacharya1998.with_units_from_data", false]], "with_units_from_data() (gammapy.astro.population.exponential method)": [[29, "gammapy.astro.population.Exponential.with_units_from_data", false]], "with_units_from_data() (gammapy.astro.population.faucherkaspi2006 method)": [[30, "gammapy.astro.population.FaucherKaspi2006.with_units_from_data", false]], "with_units_from_data() (gammapy.astro.population.faucherkaspi2006velocitybimodal method)": [[31, "gammapy.astro.population.FaucherKaspi2006VelocityBimodal.with_units_from_data", false]], "with_units_from_data() (gammapy.astro.population.faucherkaspi2006velocitymaxwellian method)": [[32, "gammapy.astro.population.FaucherKaspi2006VelocityMaxwellian.with_units_from_data", false]], "with_units_from_data() (gammapy.astro.population.lorimer2006 method)": [[35, "gammapy.astro.population.Lorimer2006.with_units_from_data", false]], "with_units_from_data() (gammapy.astro.population.paczynski1990 method)": [[36, "gammapy.astro.population.Paczynski1990.with_units_from_data", false]], "with_units_from_data() (gammapy.astro.population.paczynski1990velocity method)": [[37, "gammapy.astro.population.Paczynski1990Velocity.with_units_from_data", false]], "with_units_from_data() (gammapy.astro.population.yusifovkucuk2004 method)": [[39, "gammapy.astro.population.YusifovKucuk2004.with_units_from_data", false]], "with_units_from_data() (gammapy.astro.population.yusifovkucuk2004b method)": [[40, "gammapy.astro.population.YusifovKucuk2004B.with_units_from_data", false]], "without_units_for_data() (gammapy.astro.population.casebattacharya1998 method)": [[28, "gammapy.astro.population.CaseBattacharya1998.without_units_for_data", false]], "without_units_for_data() (gammapy.astro.population.exponential method)": [[29, "gammapy.astro.population.Exponential.without_units_for_data", false]], "without_units_for_data() (gammapy.astro.population.faucherkaspi2006 method)": [[30, "gammapy.astro.population.FaucherKaspi2006.without_units_for_data", false]], "without_units_for_data() (gammapy.astro.population.faucherkaspi2006velocitybimodal method)": [[31, "gammapy.astro.population.FaucherKaspi2006VelocityBimodal.without_units_for_data", false]], "without_units_for_data() (gammapy.astro.population.faucherkaspi2006velocitymaxwellian method)": [[32, "gammapy.astro.population.FaucherKaspi2006VelocityMaxwellian.without_units_for_data", false]], "without_units_for_data() (gammapy.astro.population.lorimer2006 method)": [[35, "gammapy.astro.population.Lorimer2006.without_units_for_data", false]], "without_units_for_data() (gammapy.astro.population.paczynski1990 method)": [[36, "gammapy.astro.population.Paczynski1990.without_units_for_data", false]], "without_units_for_data() (gammapy.astro.population.paczynski1990velocity method)": [[37, "gammapy.astro.population.Paczynski1990Velocity.without_units_for_data", false]], "without_units_for_data() (gammapy.astro.population.yusifovkucuk2004 method)": [[39, "gammapy.astro.population.YusifovKucuk2004.without_units_for_data", false]], "without_units_for_data() (gammapy.astro.population.yusifovkucuk2004b method)": [[40, "gammapy.astro.population.YusifovKucuk2004B.without_units_for_data", false]], "wobbleregionsfinder (class in gammapy.makers)": [[184, "gammapy.makers.WobbleRegionsFinder", false]], "wrap_coord() (gammapy.maps.mapaxis method)": [[201, "gammapy.maps.MapAxis.wrap_coord", false]], "write (gammapy.data.hduindextable attribute)": [[87, "gammapy.data.HDUIndexTable.write", false]], "write (gammapy.data.observationtable attribute)": [[91, "gammapy.data.ObservationTable.write", false]], "write() (gammapy.analysis.analysisconfig method)": [[16, "gammapy.analysis.AnalysisConfig.write", false]], "write() (gammapy.astro.darkmatter.primaryflux method)": [[26, "gammapy.astro.darkmatter.PrimaryFlux.write", false]], "write() (gammapy.data.gti method)": [[86, "gammapy.data.GTI.write", false]], "write() (gammapy.data.observation method)": [[88, "gammapy.data.Observation.write", false]], "write() (gammapy.datasets.datasets method)": [[100, "gammapy.datasets.Datasets.write", false]], "write() (gammapy.datasets.fluxpointsdataset method)": [[102, "gammapy.datasets.FluxPointsDataset.write", false]], "write() (gammapy.datasets.mapdataset method)": [[103, "gammapy.datasets.MapDataset.write", false]], "write() (gammapy.datasets.mapdatasetonoff method)": [[106, "gammapy.datasets.MapDatasetOnOff.write", false]], "write() (gammapy.datasets.ogipdatasetwriter method)": [[108, "gammapy.datasets.OGIPDatasetWriter.write", false]], "write() (gammapy.datasets.spectrumdataset method)": [[110, "gammapy.datasets.SpectrumDataset.write", false]], "write() (gammapy.datasets.spectrumdatasetonoff method)": [[111, "gammapy.datasets.SpectrumDatasetOnOff.write", false]], "write() (gammapy.estimators.fluxmaps method)": [[125, "gammapy.estimators.FluxMaps.write", false]], "write() (gammapy.estimators.fluxpoints method)": [[127, "gammapy.estimators.FluxPoints.write", false]], "write() (gammapy.irf.background2d method)": [[150, "gammapy.irf.Background2D.write", false]], "write() (gammapy.irf.background3d method)": [[151, "gammapy.irf.Background3D.write", false]], "write() (gammapy.irf.backgroundirf method)": [[152, "gammapy.irf.BackgroundIRF.write", false]], "write() (gammapy.irf.edispkernel method)": [[153, "gammapy.irf.EDispKernel.write", false]], "write() (gammapy.irf.edispkernelmap method)": [[154, "gammapy.irf.EDispKernelMap.write", false]], "write() (gammapy.irf.edispmap method)": [[155, "gammapy.irf.EDispMap.write", false]], "write() (gammapy.irf.effectiveareatable2d method)": [[156, "gammapy.irf.EffectiveAreaTable2D.write", false]], "write() (gammapy.irf.energydependentmultigausspsf method)": [[157, "gammapy.irf.EnergyDependentMultiGaussPSF.write", false]], "write() (gammapy.irf.energydispersion2d method)": [[158, "gammapy.irf.EnergyDispersion2D.write", false]], "write() (gammapy.irf.irf method)": [[160, "gammapy.irf.IRF.write", false]], "write() (gammapy.irf.irfmap method)": [[161, "gammapy.irf.IRFMap.write", false]], "write() (gammapy.irf.parametricpsf method)": [[167, "gammapy.irf.ParametricPSF.write", false]], "write() (gammapy.irf.psf3d method)": [[163, "gammapy.irf.PSF3D.write", false]], "write() (gammapy.irf.psfkernel method)": [[164, "gammapy.irf.PSFKernel.write", false]], "write() (gammapy.irf.psfking method)": [[165, "gammapy.irf.PSFKing.write", false]], "write() (gammapy.irf.psfmap method)": [[166, "gammapy.irf.PSFMap.write", false]], "write() (gammapy.irf.radmax2d method)": [[168, "gammapy.irf.RadMax2D.write", false]], "write() (gammapy.irf.recopsfmap method)": [[169, "gammapy.irf.RecoPSFMap.write", false]], "write() (gammapy.maps.hpxmap method)": [[196, "gammapy.maps.HpxMap.write", false]], "write() (gammapy.maps.hpxndmap method)": [[197, "gammapy.maps.HpxNDMap.write", false]], "write() (gammapy.maps.map method)": [[199, "gammapy.maps.Map.write", false]], "write() (gammapy.maps.maps method)": [[203, "gammapy.maps.Maps.write", false]], "write() (gammapy.maps.regionndmap method)": [[205, "gammapy.maps.RegionNDMap.write", false]], "write() (gammapy.maps.wcsmap method)": [[208, "gammapy.maps.WcsMap.write", false]], "write() (gammapy.maps.wcsndmap method)": [[209, "gammapy.maps.WcsNDMap.write", false]], "write() (gammapy.modeling.fitresult method)": [[215, "gammapy.modeling.FitResult.write", false]], "write() (gammapy.modeling.models.datasetmodels method)": [[227, "gammapy.modeling.models.DatasetModels.write", false]], "write() (gammapy.modeling.models.lightcurvetemplatetemporalmodel method)": [[242, "gammapy.modeling.models.LightCurveTemplateTemporalModel.write", false]], "write() (gammapy.modeling.models.models method)": [[251, "gammapy.modeling.models.Models.write", false]], "write() (gammapy.modeling.models.templatendspatialmodel method)": [[275, "gammapy.modeling.models.TemplateNDSpatialModel.write", false]], "write() (gammapy.modeling.models.templatendspectralmodel method)": [[276, "gammapy.modeling.models.TemplateNDSpectralModel.write", false]], "write() (gammapy.modeling.models.templatenpredmodel method)": [[277, "gammapy.modeling.models.TemplateNPredModel.write", false]], "write() (gammapy.modeling.models.templatephasecurvetemporalmodel method)": [[278, "gammapy.modeling.models.TemplatePhaseCurveTemporalModel.write", false]], "write() (gammapy.modeling.models.templatespatialmodel method)": [[279, "gammapy.modeling.models.TemplateSpatialModel.write", false]], "write_arf() (gammapy.datasets.ogipdatasetwriter method)": [[108, "gammapy.datasets.OGIPDatasetWriter.write_arf", false]], "write_bkg() (gammapy.datasets.ogipdatasetwriter method)": [[108, "gammapy.datasets.OGIPDatasetWriter.write_bkg", false]], "write_covariance() (gammapy.modeling.models.datasetmodels method)": [[227, "gammapy.modeling.models.DatasetModels.write_covariance", false]], "write_covariance() (gammapy.modeling.models.models method)": [[251, "gammapy.modeling.models.Models.write_covariance", false]], "write_datasets() (gammapy.analysis.analysis method)": [[15, "gammapy.analysis.Analysis.write_datasets", false]], "write_models() (gammapy.analysis.analysis method)": [[15, "gammapy.analysis.Analysis.write_models", false]], "write_pha() (gammapy.datasets.ogipdatasetwriter method)": [[108, "gammapy.datasets.OGIPDatasetWriter.write_pha", false]], "write_rmf() (gammapy.datasets.ogipdatasetwriter method)": [[108, "gammapy.datasets.OGIPDatasetWriter.write_rmf", false]], "write_yaml() (in module gammapy.utils.scripts)": [[356, "gammapy.utils.scripts.write_yaml", false]], "wstat": [[597, "term-WStat", true]], "wstat() (in module gammapy.stats)": [[311, "gammapy.stats.wstat", false]], "wstatcountsstatistic (class in gammapy.stats)": [[294, "gammapy.stats.WStatCountsStatistic", false]], "x_max (gammapy.estimators.imageprofile attribute)": [[130, "gammapy.estimators.ImageProfile.x_max", false]], "x_min (gammapy.estimators.imageprofile attribute)": [[130, "gammapy.estimators.ImageProfile.x_min", false]], "x_ref (gammapy.estimators.imageprofile attribute)": [[130, "gammapy.estimators.ImageProfile.x_ref", false]], "xy_position() (gammapy.astro.population.faucherspiral method)": [[33, "gammapy.astro.population.FaucherSpiral.xy_position", false]], "xy_position() (gammapy.astro.population.logspiral method)": [[34, "gammapy.astro.population.LogSpiral.xy_position", false]], "xy_position() (gammapy.astro.population.valleespiral method)": [[38, "gammapy.astro.population.ValleeSpiral.xy_position", false]], "yusifovkucuk2004 (class in gammapy.astro.population)": [[39, "gammapy.astro.population.YusifovKucuk2004", false]], "yusifovkucuk2004b (class in gammapy.astro.population)": [[40, "gammapy.astro.population.YusifovKucuk2004B", false]], "z_0 (gammapy.astro.population.exponential attribute)": [[29, "gammapy.astro.population.Exponential.z_0", false]], "zhaoprofile (class in gammapy.astro.darkmatter)": [[27, "gammapy.astro.darkmatter.ZhaoProfile", false]]}, "objects": {"gammapy": [[0, 0, 0, "-", "analysis"], [2, 0, 0, "-", "catalog"], [3, 0, 0, "-", "data"], [4, 0, 0, "-", "datasets"], [5, 0, 0, "-", "estimators"], [7, 0, 0, "-", "irf"], [8, 0, 0, "-", "makers"], [9, 0, 0, "-", "maps"], [10, 0, 0, "-", "modeling"], [12, 0, 0, "-", "stats"], [14, 0, 0, "-", "visualization"], [11, 6, 1, "cmdoption-gammapy-ignore-warnings", "--ignore-warnings"], [11, 6, 1, "cmdoption-gammapy-log-level", "--log-level"], [11, 6, 1, "cmdoption-gammapy-version", "--version"]], "gammapy-analysis-config": [[11, 6, 1, "cmdoption-gammapy-analysis-config-filename", "--filename"], [11, 6, 1, "cmdoption-gammapy-analysis-config-overwrite", "--overwrite"]], "gammapy-analysis-run": [[11, 6, 1, "cmdoption-gammapy-analysis-run-filename", "--filename"], [11, 6, 1, "cmdoption-gammapy-analysis-run-out", "--out"], [11, 6, 1, "cmdoption-gammapy-analysis-run-overwrite", "--overwrite"]], "gammapy-download-datasets": [[11, 6, 1, "cmdoption-gammapy-download-datasets-out", "--out"], [11, 6, 1, "cmdoption-gammapy-download-datasets-release", "--release"]], "gammapy-download-notebooks": [[11, 6, 1, "cmdoption-gammapy-download-notebooks-out", "--out"], [11, 6, 1, "cmdoption-gammapy-download-notebooks-release", "--release"]], "gammapy-info": [[11, 6, 1, "cmdoption-gammapy-info-dependencies", "--dependencies"], [11, 6, 1, "cmdoption-gammapy-info-envvar", "--envvar"], [11, 6, 1, "cmdoption-gammapy-info-dependencies", "--no-dependencies"], [11, 6, 1, "cmdoption-gammapy-info-envvar", "--no-envvar"], [11, 6, 1, "cmdoption-gammapy-info-system", "--no-system"], [11, 6, 1, "cmdoption-gammapy-info-version", "--no-version"], [11, 6, 1, "cmdoption-gammapy-info-system", "--system"], [11, 6, 1, "cmdoption-gammapy-info-version", "--version"]], "gammapy-workflow-config": [[11, 6, 1, "cmdoption-gammapy-workflow-config-filename", "--filename"], [11, 6, 1, "cmdoption-gammapy-workflow-config-overwrite", "--overwrite"]], "gammapy-workflow-run": [[11, 6, 1, "cmdoption-gammapy-workflow-run-filename", "--filename"]], "gammapy.analysis": [[15, 1, 1, "", "Analysis"], [16, 1, 1, "", "AnalysisConfig"]], "gammapy.analysis.Analysis": [[15, 2, 1, "", "config"], [15, 3, 1, "", "get_datasets"], [15, 3, 1, "", "get_excess_map"], [15, 3, 1, "", "get_flux_points"], [15, 3, 1, "", "get_light_curve"], [15, 3, 1, "", "get_observations"], [15, 2, 1, "", "models"], [15, 3, 1, "", "read_datasets"], [15, 3, 1, "", "read_models"], [15, 3, 1, "", "run_fit"], [15, 3, 1, "", "set_models"], [15, 3, 1, "", "update_config"], [15, 3, 1, "", "write_datasets"], [15, 3, 1, "", "write_models"]], "gammapy.analysis.AnalysisConfig": [[16, 3, 1, "", "construct"], [16, 3, 1, "", "copy"], [16, 3, 1, "", "dict"], [16, 3, 1, "", "from_orm"], [16, 3, 1, "", "from_yaml"], [16, 3, 1, "", "json"], [16, 2, 1, "", "model_computed_fields"], [16, 2, 1, "", "model_config"], [16, 3, 1, "", "model_construct"], [16, 3, 1, "", "model_copy"], [16, 3, 1, "", "model_dump"], [16, 3, 1, "", "model_dump_json"], [16, 2, 1, "", "model_extra"], [16, 2, 1, "", "model_fields"], [16, 2, 1, "", "model_fields_set"], [16, 3, 1, "", "model_json_schema"], [16, 3, 1, "", "model_parametrized_name"], [16, 3, 1, "", "model_post_init"], [16, 3, 1, "", "model_rebuild"], [16, 3, 1, "", "model_validate"], [16, 3, 1, "", "model_validate_json"], [16, 3, 1, "", "model_validate_strings"], [16, 3, 1, "", "parse_file"], [16, 3, 1, "", "parse_obj"], [16, 3, 1, "", "parse_raw"], [16, 3, 1, "", "read"], [16, 3, 1, "", "schema"], [16, 3, 1, "", "schema_json"], [16, 3, 1, "", "set_logging"], [16, 3, 1, "", "to_yaml"], [16, 3, 1, "", "update"], [16, 3, 1, "", "update_forward_refs"], [16, 3, 1, "", "validate"], [16, 3, 1, "", "write"]], "gammapy.astro": [[1, 0, 0, "-", "darkmatter"], [1, 0, 0, "-", "population"], [1, 0, 0, "-", "source"]], "gammapy.astro.darkmatter": [[17, 1, 1, "", "BurkertProfile"], [18, 1, 1, "", "DMProfile"], [19, 1, 1, "", "DarkMatterAnnihilationSpectralModel"], [20, 1, 1, "", "DarkMatterDecaySpectralModel"], [21, 1, 1, "", "EinastoProfile"], [22, 1, 1, "", "IsothermalProfile"], [23, 1, 1, "", "JFactory"], [24, 1, 1, "", "MooreProfile"], [25, 1, 1, "", "NFWProfile"], [26, 1, 1, "", "PrimaryFlux"], [27, 1, 1, "", "ZhaoProfile"]], "gammapy.astro.darkmatter.BurkertProfile": [[17, 2, 1, "", "DEFAULT_SCALE_RADIUS"], [17, 2, 1, "", "DISTANCE_GC"], [17, 2, 1, "", "LOCAL_DENSITY"], [17, 3, 1, "", "__call__"], [17, 3, 1, "", "evaluate"], [17, 3, 1, "", "integral"], [17, 3, 1, "", "integrate_spectrum_separation"], [17, 3, 1, "", "scale_to_local_density"]], "gammapy.astro.darkmatter.DMProfile": [[18, 2, 1, "", "DISTANCE_GC"], [18, 2, 1, "", "LOCAL_DENSITY"], [18, 3, 1, "", "__call__"], [18, 3, 1, "", "integral"], [18, 3, 1, "", "integrate_spectrum_separation"], [18, 3, 1, "", "scale_to_local_density"]], "gammapy.astro.darkmatter.DarkMatterAnnihilationSpectralModel": [[19, 2, 1, "", "THERMAL_RELIC_CROSS_SECTION"], [19, 3, 1, "", "__call__"], [19, 3, 1, "", "copy"], [19, 2, 1, "", "covariance"], [19, 2, 1, "", "default_parameters"], [19, 3, 1, "", "energy_flux"], [19, 3, 1, "", "energy_flux_error"], [19, 3, 1, "", "evaluate"], [19, 3, 1, "", "evaluate_error"], [19, 3, 1, "", "freeze"], [19, 3, 1, "", "from_dict"], [19, 3, 1, "", "from_parameters"], [19, 2, 1, "", "frozen"], [19, 3, 1, "", "integral"], [19, 3, 1, "", "integral_error"], [19, 3, 1, "", "inverse"], [19, 3, 1, "", "inverse_all"], [19, 2, 1, "", "is_norm_spectral_model"], [19, 2, 1, "", "parameters"], [19, 2, 1, "", "parameters_unique_names"], [19, 2, 1, "", "pivot_energy"], [19, 3, 1, "", "plot"], [19, 3, 1, "", "plot_error"], [19, 3, 1, "", "reassign"], [19, 3, 1, "", "reference_fluxes"], [19, 2, 1, "", "scale"], [19, 3, 1, "", "spectral_index"], [19, 3, 1, "", "spectral_index_error"], [19, 2, 1, "", "tag"], [19, 3, 1, "", "to_dict"], [19, 2, 1, "", "type"], [19, 3, 1, "", "unfreeze"]], "gammapy.astro.darkmatter.DarkMatterDecaySpectralModel": [[20, 2, 1, "", "LIFETIME_AGE_OF_UNIVERSE"], [20, 3, 1, "", "__call__"], [20, 3, 1, "", "copy"], [20, 2, 1, "", "covariance"], [20, 2, 1, "", "default_parameters"], [20, 3, 1, "", "energy_flux"], [20, 3, 1, "", "energy_flux_error"], [20, 3, 1, "", "evaluate"], [20, 3, 1, "", "evaluate_error"], [20, 3, 1, "", "freeze"], [20, 3, 1, "", "from_dict"], [20, 3, 1, "", "from_parameters"], [20, 2, 1, "", "frozen"], [20, 3, 1, "", "integral"], [20, 3, 1, "", "integral_error"], [20, 3, 1, "", "inverse"], [20, 3, 1, "", "inverse_all"], [20, 2, 1, "", "is_norm_spectral_model"], [20, 2, 1, "", "parameters"], [20, 2, 1, "", "parameters_unique_names"], [20, 2, 1, "", "pivot_energy"], [20, 3, 1, "", "plot"], [20, 3, 1, "", "plot_error"], [20, 3, 1, "", "reassign"], [20, 3, 1, "", "reference_fluxes"], [20, 2, 1, "", "scale"], [20, 3, 1, "", "spectral_index"], [20, 3, 1, "", "spectral_index_error"], [20, 2, 1, "", "tag"], [20, 3, 1, "", "to_dict"], [20, 2, 1, "", "type"], [20, 3, 1, "", "unfreeze"]], "gammapy.astro.darkmatter.EinastoProfile": [[21, 2, 1, "", "DEFAULT_ALPHA"], [21, 2, 1, "", "DEFAULT_SCALE_RADIUS"], [21, 2, 1, "", "DISTANCE_GC"], [21, 2, 1, "", "LOCAL_DENSITY"], [21, 3, 1, "", "__call__"], [21, 3, 1, "", "evaluate"], [21, 3, 1, "", "integral"], [21, 3, 1, "", "integrate_spectrum_separation"], [21, 3, 1, "", "scale_to_local_density"]], "gammapy.astro.darkmatter.IsothermalProfile": [[22, 2, 1, "", "DEFAULT_SCALE_RADIUS"], [22, 2, 1, "", "DISTANCE_GC"], [22, 2, 1, "", "LOCAL_DENSITY"], [22, 3, 1, "", "__call__"], [22, 3, 1, "", "evaluate"], [22, 3, 1, "", "integral"], [22, 3, 1, "", "integrate_spectrum_separation"], [22, 3, 1, "", "scale_to_local_density"]], "gammapy.astro.darkmatter.JFactory": [[23, 3, 1, "", "compute_differential_jfactor"], [23, 3, 1, "", "compute_jfactor"]], "gammapy.astro.darkmatter.MooreProfile": [[24, 2, 1, "", "DEFAULT_SCALE_RADIUS"], [24, 2, 1, "", "DISTANCE_GC"], [24, 2, 1, "", "LOCAL_DENSITY"], [24, 3, 1, "", "__call__"], [24, 3, 1, "", "evaluate"], [24, 3, 1, "", "integral"], [24, 3, 1, "", "integrate_spectrum_separation"], [24, 3, 1, "", "scale_to_local_density"]], "gammapy.astro.darkmatter.NFWProfile": [[25, 2, 1, "", "DEFAULT_SCALE_RADIUS"], [25, 2, 1, "", "DISTANCE_GC"], [25, 2, 1, "", "LOCAL_DENSITY"], [25, 3, 1, "", "__call__"], [25, 3, 1, "", "evaluate"], [25, 3, 1, "", "integral"], [25, 3, 1, "", "integrate_spectrum_separation"], [25, 3, 1, "", "scale_to_local_density"]], "gammapy.astro.darkmatter.PrimaryFlux": [[26, 3, 1, "", "__call__"], [26, 2, 1, "", "allowed_channels"], [26, 2, 1, "", "channel"], [26, 2, 1, "", "channel_registry"], [26, 3, 1, "", "copy"], [26, 2, 1, "", "covariance"], [26, 2, 1, "", "default_parameters"], [26, 3, 1, "", "energy_flux"], [26, 3, 1, "", "energy_flux_error"], [26, 3, 1, "", "evaluate"], [26, 3, 1, "", "evaluate_error"], [26, 3, 1, "", "freeze"], [26, 3, 1, "", "from_dict"], [26, 3, 1, "", "from_parameters"], [26, 2, 1, "", "frozen"], [26, 3, 1, "", "integral"], [26, 3, 1, "", "integral_error"], [26, 3, 1, "", "inverse"], [26, 3, 1, "", "inverse_all"], [26, 2, 1, "", "is_norm_spectral_model"], [26, 2, 1, "", "mDM"], [26, 2, 1, "", "map"], [26, 2, 1, "", "parameters"], [26, 2, 1, "", "parameters_unique_names"], [26, 2, 1, "", "pivot_energy"], [26, 3, 1, "", "plot"], [26, 3, 1, "", "plot_error"], [26, 3, 1, "", "reassign"], [26, 3, 1, "", "reference_fluxes"], [26, 3, 1, "", "spectral_index"], [26, 3, 1, "", "spectral_index_error"], [26, 2, 1, "", "table_filename"], [26, 2, 1, "", "tag"], [26, 3, 1, "", "to_dict"], [26, 2, 1, "", "type"], [26, 3, 1, "", "unfreeze"], [26, 3, 1, "", "write"]], "gammapy.astro.darkmatter.ZhaoProfile": [[27, 2, 1, "", "DEFAULT_ALPHA"], [27, 2, 1, "", "DEFAULT_BETA"], [27, 2, 1, "", "DEFAULT_GAMMA"], [27, 2, 1, "", "DEFAULT_SCALE_RADIUS"], [27, 2, 1, "", "DISTANCE_GC"], [27, 2, 1, "", "LOCAL_DENSITY"], [27, 3, 1, "", "__call__"], [27, 3, 1, "", "evaluate"], [27, 3, 1, "", "integral"], [27, 3, 1, "", "integrate_spectrum_separation"], [27, 3, 1, "", "scale_to_local_density"]], "gammapy.astro.population": [[28, 1, 1, "", "CaseBattacharya1998"], [29, 1, 1, "", "Exponential"], [30, 1, 1, "", "FaucherKaspi2006"], [31, 1, 1, "", "FaucherKaspi2006VelocityBimodal"], [32, 1, 1, "", "FaucherKaspi2006VelocityMaxwellian"], [33, 1, 1, "", "FaucherSpiral"], [34, 1, 1, "", "LogSpiral"], [35, 1, 1, "", "Lorimer2006"], [36, 1, 1, "", "Paczynski1990"], [37, 1, 1, "", "Paczynski1990Velocity"], [38, 1, 1, "", "ValleeSpiral"], [39, 1, 1, "", "YusifovKucuk2004"], [40, 1, 1, "", "YusifovKucuk2004B"], [41, 4, 1, "", "add_observed_parameters"], [42, 4, 1, "", "add_pulsar_parameters"], [43, 4, 1, "", "add_pwn_parameters"], [44, 4, 1, "", "add_snr_parameters"], [45, 4, 1, "", "make_base_catalog_galactic"], [46, 4, 1, "", "make_catalog_random_positions_cube"], [47, 4, 1, "", "make_catalog_random_positions_sphere"], [48, 5, 1, "", "radial_distributions"], [49, 5, 1, "", "velocity_distributions"]], "gammapy.astro.population.CaseBattacharya1998": [[28, 3, 1, "", "__call__"], [28, 2, 1, "", "alpha"], [28, 2, 1, "", "amplitude"], [28, 2, 1, "", "bbox_with_units"], [28, 2, 1, "", "beta"], [28, 2, 1, "", "bounding_box"], [28, 2, 1, "", "bounds"], [28, 3, 1, "", "coerce_units"], [28, 2, 1, "", "col_fit_deriv"], [28, 3, 1, "", "copy"], [28, 2, 1, "", "cov_matrix"], [28, 3, 1, "", "deepcopy"], [28, 2, 1, "", "eqcons"], [28, 3, 1, "", "evaluate"], [28, 2, 1, "", "evolved"], [28, 2, 1, "", "fit_deriv"], [28, 2, 1, "", "fittable"], [28, 2, 1, "", "fixed"], [28, 3, 1, "", "get_bounding_box"], [28, 3, 1, "", "has_inverse"], [28, 2, 1, "", "has_user_bounding_box"], [28, 2, 1, "", "has_user_inverse"], [28, 2, 1, "", "ineqcons"], [28, 3, 1, "", "input_shape"], [28, 2, 1, "", "input_units"], [28, 2, 1, "", "input_units_allow_dimensionless"], [28, 2, 1, "", "input_units_equivalencies"], [28, 2, 1, "", "input_units_strict"], [28, 2, 1, "", "inputs"], [28, 2, 1, "", "inverse"], [28, 2, 1, "", "linear"], [28, 2, 1, "", "meta"], [28, 2, 1, "", "model_constraints"], [28, 2, 1, "", "model_set_axis"], [28, 2, 1, "", "n_inputs"], [28, 2, 1, "", "n_outputs"], [28, 2, 1, "", "n_submodels"], [28, 2, 1, "", "name"], [28, 3, 1, "", "output_units"], [28, 2, 1, "", "outputs"], [28, 2, 1, "", "param_names"], [28, 2, 1, "", "param_sets"], [28, 2, 1, "", "parameter_constraints"], [28, 2, 1, "", "parameters"], [28, 3, 1, "", "prepare_inputs"], [28, 3, 1, "", "prepare_outputs"], [28, 3, 1, "", "rename"], [28, 3, 1, "", "render"], [28, 2, 1, "", "return_units"], [28, 2, 1, "", "separable"], [28, 3, 1, "", "set_slice_args"], [28, 2, 1, "", "standard_broadcasting"], [28, 2, 1, "", "stds"], [28, 3, 1, "", "strip_units_from_tree"], [28, 3, 1, "", "sum_of_implicit_terms"], [28, 2, 1, "", "sync_constraints"], [28, 2, 1, "", "tied"], [28, 2, 1, "", "uses_quantity"], [28, 3, 1, "", "with_units_from_data"], [28, 3, 1, "", "without_units_for_data"]], "gammapy.astro.population.Exponential": [[29, 3, 1, "", "__call__"], [29, 2, 1, "", "amplitude"], [29, 2, 1, "", "bbox_with_units"], [29, 2, 1, "", "bounding_box"], [29, 2, 1, "", "bounds"], [29, 3, 1, "", "coerce_units"], [29, 2, 1, "", "col_fit_deriv"], [29, 3, 1, "", "copy"], [29, 2, 1, "", "cov_matrix"], [29, 3, 1, "", "deepcopy"], [29, 2, 1, "", "eqcons"], [29, 3, 1, "", "evaluate"], [29, 2, 1, "", "evolved"], [29, 2, 1, "", "fit_deriv"], [29, 2, 1, "", "fittable"], [29, 2, 1, "", "fixed"], [29, 3, 1, "", "get_bounding_box"], [29, 3, 1, "", "has_inverse"], [29, 2, 1, "", "has_user_bounding_box"], [29, 2, 1, "", "has_user_inverse"], [29, 2, 1, "", "ineqcons"], [29, 3, 1, "", "input_shape"], [29, 2, 1, "", "input_units"], [29, 2, 1, "", "input_units_allow_dimensionless"], [29, 2, 1, "", "input_units_equivalencies"], [29, 2, 1, "", "input_units_strict"], [29, 2, 1, "", "inputs"], [29, 2, 1, "", "inverse"], [29, 2, 1, "", "linear"], [29, 2, 1, "", "meta"], [29, 2, 1, "", "model_constraints"], [29, 2, 1, "", "model_set_axis"], [29, 2, 1, "", "n_inputs"], [29, 2, 1, "", "n_outputs"], [29, 2, 1, "", "n_submodels"], [29, 2, 1, "", "name"], [29, 3, 1, "", "output_units"], [29, 2, 1, "", "outputs"], [29, 2, 1, "", "param_names"], [29, 2, 1, "", "param_sets"], [29, 2, 1, "", "parameter_constraints"], [29, 2, 1, "", "parameters"], [29, 3, 1, "", "prepare_inputs"], [29, 3, 1, "", "prepare_outputs"], [29, 3, 1, "", "rename"], [29, 3, 1, "", "render"], [29, 2, 1, "", "return_units"], [29, 2, 1, "", "separable"], [29, 3, 1, "", "set_slice_args"], [29, 2, 1, "", "standard_broadcasting"], [29, 2, 1, "", "stds"], [29, 3, 1, "", "strip_units_from_tree"], [29, 3, 1, "", "sum_of_implicit_terms"], [29, 2, 1, "", "sync_constraints"], [29, 2, 1, "", "tied"], [29, 2, 1, "", "uses_quantity"], [29, 3, 1, "", "with_units_from_data"], [29, 3, 1, "", "without_units_for_data"], [29, 2, 1, "", "z_0"]], "gammapy.astro.population.FaucherKaspi2006": [[30, 3, 1, "", "__call__"], [30, 2, 1, "", "amplitude"], [30, 2, 1, "", "bbox_with_units"], [30, 2, 1, "", "bounding_box"], [30, 2, 1, "", "bounds"], [30, 3, 1, "", "coerce_units"], [30, 2, 1, "", "col_fit_deriv"], [30, 3, 1, "", "copy"], [30, 2, 1, "", "cov_matrix"], [30, 3, 1, "", "deepcopy"], [30, 2, 1, "", "eqcons"], [30, 3, 1, "", "evaluate"], [30, 2, 1, "", "evolved"], [30, 2, 1, "", "fit_deriv"], [30, 2, 1, "", "fittable"], [30, 2, 1, "", "fixed"], [30, 3, 1, "", "get_bounding_box"], [30, 3, 1, "", "has_inverse"], [30, 2, 1, "", "has_user_bounding_box"], [30, 2, 1, "", "has_user_inverse"], [30, 2, 1, "", "ineqcons"], [30, 3, 1, "", "input_shape"], [30, 2, 1, "", "input_units"], [30, 2, 1, "", "input_units_allow_dimensionless"], [30, 2, 1, "", "input_units_equivalencies"], [30, 2, 1, "", "input_units_strict"], [30, 2, 1, "", "inputs"], [30, 2, 1, "", "inverse"], [30, 2, 1, "", "linear"], [30, 2, 1, "", "meta"], [30, 2, 1, "", "model_constraints"], [30, 2, 1, "", "model_set_axis"], [30, 2, 1, "", "n_inputs"], [30, 2, 1, "", "n_outputs"], [30, 2, 1, "", "n_submodels"], [30, 2, 1, "", "name"], [30, 3, 1, "", "output_units"], [30, 2, 1, "", "outputs"], [30, 2, 1, "", "param_names"], [30, 2, 1, "", "param_sets"], [30, 2, 1, "", "parameter_constraints"], [30, 2, 1, "", "parameters"], [30, 3, 1, "", "prepare_inputs"], [30, 3, 1, "", "prepare_outputs"], [30, 2, 1, "", "r_0"], [30, 3, 1, "", "rename"], [30, 3, 1, "", "render"], [30, 2, 1, "", "return_units"], [30, 2, 1, "", "separable"], [30, 3, 1, "", "set_slice_args"], [30, 2, 1, "", "sigma"], [30, 2, 1, "", "standard_broadcasting"], [30, 2, 1, "", "stds"], [30, 3, 1, "", "strip_units_from_tree"], [30, 3, 1, "", "sum_of_implicit_terms"], [30, 2, 1, "", "sync_constraints"], [30, 2, 1, "", "tied"], [30, 2, 1, "", "uses_quantity"], [30, 3, 1, "", "with_units_from_data"], [30, 3, 1, "", "without_units_for_data"]], "gammapy.astro.population.FaucherKaspi2006VelocityBimodal": [[31, 3, 1, "", "__call__"], [31, 2, 1, "", "amplitude"], [31, 2, 1, "", "bbox_with_units"], [31, 2, 1, "", "bounding_box"], [31, 2, 1, "", "bounds"], [31, 3, 1, "", "coerce_units"], [31, 2, 1, "", "col_fit_deriv"], [31, 3, 1, "", "copy"], [31, 2, 1, "", "cov_matrix"], [31, 3, 1, "", "deepcopy"], [31, 2, 1, "", "eqcons"], [31, 3, 1, "", "evaluate"], [31, 2, 1, "", "fit_deriv"], [31, 2, 1, "", "fittable"], [31, 2, 1, "", "fixed"], [31, 3, 1, "", "get_bounding_box"], [31, 3, 1, "", "has_inverse"], [31, 2, 1, "", "has_user_bounding_box"], [31, 2, 1, "", "has_user_inverse"], [31, 2, 1, "", "ineqcons"], [31, 3, 1, "", "input_shape"], [31, 2, 1, "", "input_units"], [31, 2, 1, "", "input_units_allow_dimensionless"], [31, 2, 1, "", "input_units_equivalencies"], [31, 2, 1, "", "input_units_strict"], [31, 2, 1, "", "inputs"], [31, 2, 1, "", "inverse"], [31, 2, 1, "", "linear"], [31, 2, 1, "", "meta"], [31, 2, 1, "", "model_constraints"], [31, 2, 1, "", "model_set_axis"], [31, 2, 1, "", "n_inputs"], [31, 2, 1, "", "n_outputs"], [31, 2, 1, "", "n_submodels"], [31, 2, 1, "", "name"], [31, 3, 1, "", "output_units"], [31, 2, 1, "", "outputs"], [31, 2, 1, "", "param_names"], [31, 2, 1, "", "param_sets"], [31, 2, 1, "", "parameter_constraints"], [31, 2, 1, "", "parameters"], [31, 3, 1, "", "prepare_inputs"], [31, 3, 1, "", "prepare_outputs"], [31, 3, 1, "", "rename"], [31, 3, 1, "", "render"], [31, 2, 1, "", "return_units"], [31, 2, 1, "", "separable"], [31, 3, 1, "", "set_slice_args"], [31, 2, 1, "", "sigma_1"], [31, 2, 1, "", "sigma_2"], [31, 2, 1, "", "standard_broadcasting"], [31, 2, 1, "", "stds"], [31, 3, 1, "", "strip_units_from_tree"], [31, 3, 1, "", "sum_of_implicit_terms"], [31, 2, 1, "", "sync_constraints"], [31, 2, 1, "", "tied"], [31, 2, 1, "", "uses_quantity"], [31, 2, 1, "", "w"], [31, 3, 1, "", "with_units_from_data"], [31, 3, 1, "", "without_units_for_data"]], "gammapy.astro.population.FaucherKaspi2006VelocityMaxwellian": [[32, 3, 1, "", "__call__"], [32, 2, 1, "", "amplitude"], [32, 2, 1, "", "bbox_with_units"], [32, 2, 1, "", "bounding_box"], [32, 2, 1, "", "bounds"], [32, 3, 1, "", "coerce_units"], [32, 2, 1, "", "col_fit_deriv"], [32, 3, 1, "", "copy"], [32, 2, 1, "", "cov_matrix"], [32, 3, 1, "", "deepcopy"], [32, 2, 1, "", "eqcons"], [32, 3, 1, "", "evaluate"], [32, 2, 1, "", "fit_deriv"], [32, 2, 1, "", "fittable"], [32, 2, 1, "", "fixed"], [32, 3, 1, "", "get_bounding_box"], [32, 3, 1, "", "has_inverse"], [32, 2, 1, "", "has_user_bounding_box"], [32, 2, 1, "", "has_user_inverse"], [32, 2, 1, "", "ineqcons"], [32, 3, 1, "", "input_shape"], [32, 2, 1, "", "input_units"], [32, 2, 1, "", "input_units_allow_dimensionless"], [32, 2, 1, "", "input_units_equivalencies"], [32, 2, 1, "", "input_units_strict"], [32, 2, 1, "", "inputs"], [32, 2, 1, "", "inverse"], [32, 2, 1, "", "linear"], [32, 2, 1, "", "meta"], [32, 2, 1, "", "model_constraints"], [32, 2, 1, "", "model_set_axis"], [32, 2, 1, "", "n_inputs"], [32, 2, 1, "", "n_outputs"], [32, 2, 1, "", "n_submodels"], [32, 2, 1, "", "name"], [32, 3, 1, "", "output_units"], [32, 2, 1, "", "outputs"], [32, 2, 1, "", "param_names"], [32, 2, 1, "", "param_sets"], [32, 2, 1, "", "parameter_constraints"], [32, 2, 1, "", "parameters"], [32, 3, 1, "", "prepare_inputs"], [32, 3, 1, "", "prepare_outputs"], [32, 3, 1, "", "rename"], [32, 3, 1, "", "render"], [32, 2, 1, "", "return_units"], [32, 2, 1, "", "separable"], [32, 3, 1, "", "set_slice_args"], [32, 2, 1, "", "sigma"], [32, 2, 1, "", "standard_broadcasting"], [32, 2, 1, "", "stds"], [32, 3, 1, "", "strip_units_from_tree"], [32, 3, 1, "", "sum_of_implicit_terms"], [32, 2, 1, "", "sync_constraints"], [32, 2, 1, "", "tied"], [32, 2, 1, "", "uses_quantity"], [32, 3, 1, "", "with_units_from_data"], [32, 3, 1, "", "without_units_for_data"]], "gammapy.astro.population.FaucherSpiral": [[33, 3, 1, "", "__call__"], [33, 2, 1, "", "k"], [33, 2, 1, "", "r_0"], [33, 3, 1, "", "radius"], [33, 2, 1, "", "spiralarms"], [33, 3, 1, "", "theta"], [33, 2, 1, "", "theta_0"], [33, 3, 1, "", "xy_position"]], "gammapy.astro.population.LogSpiral": [[34, 3, 1, "", "radius"], [34, 3, 1, "", "theta"], [34, 3, 1, "", "xy_position"]], "gammapy.astro.population.Lorimer2006": [[35, 2, 1, "", "B"], [35, 2, 1, "", "C"], [35, 3, 1, "", "__call__"], [35, 2, 1, "", "amplitude"], [35, 2, 1, "", "bbox_with_units"], [35, 2, 1, "", "bounding_box"], [35, 2, 1, "", "bounds"], [35, 3, 1, "", "coerce_units"], [35, 2, 1, "", "col_fit_deriv"], [35, 3, 1, "", "copy"], [35, 2, 1, "", "cov_matrix"], [35, 3, 1, "", "deepcopy"], [35, 2, 1, "", "eqcons"], [35, 3, 1, "", "evaluate"], [35, 2, 1, "", "evolved"], [35, 2, 1, "", "fit_deriv"], [35, 2, 1, "", "fittable"], [35, 2, 1, "", "fixed"], [35, 3, 1, "", "get_bounding_box"], [35, 3, 1, "", "has_inverse"], [35, 2, 1, "", "has_user_bounding_box"], [35, 2, 1, "", "has_user_inverse"], [35, 2, 1, "", "ineqcons"], [35, 3, 1, "", "input_shape"], [35, 2, 1, "", "input_units"], [35, 2, 1, "", "input_units_allow_dimensionless"], [35, 2, 1, "", "input_units_equivalencies"], [35, 2, 1, "", "input_units_strict"], [35, 2, 1, "", "inputs"], [35, 2, 1, "", "inverse"], [35, 2, 1, "", "linear"], [35, 2, 1, "", "meta"], [35, 2, 1, "", "model_constraints"], [35, 2, 1, "", "model_set_axis"], [35, 2, 1, "", "n_inputs"], [35, 2, 1, "", "n_outputs"], [35, 2, 1, "", "n_submodels"], [35, 2, 1, "", "name"], [35, 3, 1, "", "output_units"], [35, 2, 1, "", "outputs"], [35, 2, 1, "", "param_names"], [35, 2, 1, "", "param_sets"], [35, 2, 1, "", "parameter_constraints"], [35, 2, 1, "", "parameters"], [35, 3, 1, "", "prepare_inputs"], [35, 3, 1, "", "prepare_outputs"], [35, 3, 1, "", "rename"], [35, 3, 1, "", "render"], [35, 2, 1, "", "return_units"], [35, 2, 1, "", "separable"], [35, 3, 1, "", "set_slice_args"], [35, 2, 1, "", "standard_broadcasting"], [35, 2, 1, "", "stds"], [35, 3, 1, "", "strip_units_from_tree"], [35, 3, 1, "", "sum_of_implicit_terms"], [35, 2, 1, "", "sync_constraints"], [35, 2, 1, "", "tied"], [35, 2, 1, "", "uses_quantity"], [35, 3, 1, "", "with_units_from_data"], [35, 3, 1, "", "without_units_for_data"]], "gammapy.astro.population.Paczynski1990": [[36, 3, 1, "", "__call__"], [36, 2, 1, "", "amplitude"], [36, 2, 1, "", "bbox_with_units"], [36, 2, 1, "", "bounding_box"], [36, 2, 1, "", "bounds"], [36, 3, 1, "", "coerce_units"], [36, 2, 1, "", "col_fit_deriv"], [36, 3, 1, "", "copy"], [36, 2, 1, "", "cov_matrix"], [36, 3, 1, "", "deepcopy"], [36, 2, 1, "", "eqcons"], [36, 3, 1, "", "evaluate"], [36, 2, 1, "", "evolved"], [36, 2, 1, "", "fit_deriv"], [36, 2, 1, "", "fittable"], [36, 2, 1, "", "fixed"], [36, 3, 1, "", "get_bounding_box"], [36, 3, 1, "", "has_inverse"], [36, 2, 1, "", "has_user_bounding_box"], [36, 2, 1, "", "has_user_inverse"], [36, 2, 1, "", "ineqcons"], [36, 3, 1, "", "input_shape"], [36, 2, 1, "", "input_units"], [36, 2, 1, "", "input_units_allow_dimensionless"], [36, 2, 1, "", "input_units_equivalencies"], [36, 2, 1, "", "input_units_strict"], [36, 2, 1, "", "inputs"], [36, 2, 1, "", "inverse"], [36, 2, 1, "", "linear"], [36, 2, 1, "", "meta"], [36, 2, 1, "", "model_constraints"], [36, 2, 1, "", "model_set_axis"], [36, 2, 1, "", "n_inputs"], [36, 2, 1, "", "n_outputs"], [36, 2, 1, "", "n_submodels"], [36, 2, 1, "", "name"], [36, 3, 1, "", "output_units"], [36, 2, 1, "", "outputs"], [36, 2, 1, "", "param_names"], [36, 2, 1, "", "param_sets"], [36, 2, 1, "", "parameter_constraints"], [36, 2, 1, "", "parameters"], [36, 3, 1, "", "prepare_inputs"], [36, 3, 1, "", "prepare_outputs"], [36, 2, 1, "", "r_exp"], [36, 3, 1, "", "rename"], [36, 3, 1, "", "render"], [36, 2, 1, "", "return_units"], [36, 2, 1, "", "separable"], [36, 3, 1, "", "set_slice_args"], [36, 2, 1, "", "standard_broadcasting"], [36, 2, 1, "", "stds"], [36, 3, 1, "", "strip_units_from_tree"], [36, 3, 1, "", "sum_of_implicit_terms"], [36, 2, 1, "", "sync_constraints"], [36, 2, 1, "", "tied"], [36, 2, 1, "", "uses_quantity"], [36, 3, 1, "", "with_units_from_data"], [36, 3, 1, "", "without_units_for_data"]], "gammapy.astro.population.Paczynski1990Velocity": [[37, 3, 1, "", "__call__"], [37, 2, 1, "", "amplitude"], [37, 2, 1, "", "bbox_with_units"], [37, 2, 1, "", "bounding_box"], [37, 2, 1, "", "bounds"], [37, 3, 1, "", "coerce_units"], [37, 2, 1, "", "col_fit_deriv"], [37, 3, 1, "", "copy"], [37, 2, 1, "", "cov_matrix"], [37, 3, 1, "", "deepcopy"], [37, 2, 1, "", "eqcons"], [37, 3, 1, "", "evaluate"], [37, 2, 1, "", "fit_deriv"], [37, 2, 1, "", "fittable"], [37, 2, 1, "", "fixed"], [37, 3, 1, "", "get_bounding_box"], [37, 3, 1, "", "has_inverse"], [37, 2, 1, "", "has_user_bounding_box"], [37, 2, 1, "", "has_user_inverse"], [37, 2, 1, "", "ineqcons"], [37, 3, 1, "", "input_shape"], [37, 2, 1, "", "input_units"], [37, 2, 1, "", "input_units_allow_dimensionless"], [37, 2, 1, "", "input_units_equivalencies"], [37, 2, 1, "", "input_units_strict"], [37, 2, 1, "", "inputs"], [37, 2, 1, "", "inverse"], [37, 2, 1, "", "linear"], [37, 2, 1, "", "meta"], [37, 2, 1, "", "model_constraints"], [37, 2, 1, "", "model_set_axis"], [37, 2, 1, "", "n_inputs"], [37, 2, 1, "", "n_outputs"], [37, 2, 1, "", "n_submodels"], [37, 2, 1, "", "name"], [37, 3, 1, "", "output_units"], [37, 2, 1, "", "outputs"], [37, 2, 1, "", "param_names"], [37, 2, 1, "", "param_sets"], [37, 2, 1, "", "parameter_constraints"], [37, 2, 1, "", "parameters"], [37, 3, 1, "", "prepare_inputs"], [37, 3, 1, "", "prepare_outputs"], [37, 3, 1, "", "rename"], [37, 3, 1, "", "render"], [37, 2, 1, "", "return_units"], [37, 2, 1, "", "separable"], [37, 3, 1, "", "set_slice_args"], [37, 2, 1, "", "standard_broadcasting"], [37, 2, 1, "", "stds"], [37, 3, 1, "", "strip_units_from_tree"], [37, 3, 1, "", "sum_of_implicit_terms"], [37, 2, 1, "", "sync_constraints"], [37, 2, 1, "", "tied"], [37, 2, 1, "", "uses_quantity"], [37, 2, 1, "", "v_0"], [37, 3, 1, "", "with_units_from_data"], [37, 3, 1, "", "without_units_for_data"]], "gammapy.astro.population.ValleeSpiral": [[38, 2, 1, "", "bar_radius"], [38, 2, 1, "", "m"], [38, 2, 1, "", "p"], [38, 2, 1, "", "r_0"], [38, 2, 1, "", "r_sun"], [38, 3, 1, "", "radius"], [38, 2, 1, "", "spiralarms"], [38, 3, 1, "", "theta"], [38, 2, 1, "", "theta_0"], [38, 3, 1, "", "xy_position"]], "gammapy.astro.population.YusifovKucuk2004": [[39, 3, 1, "", "__call__"], [39, 2, 1, "", "a"], [39, 2, 1, "", "amplitude"], [39, 2, 1, "", "b"], [39, 2, 1, "", "bbox_with_units"], [39, 2, 1, "", "bounding_box"], [39, 2, 1, "", "bounds"], [39, 3, 1, "", "coerce_units"], [39, 2, 1, "", "col_fit_deriv"], [39, 3, 1, "", "copy"], [39, 2, 1, "", "cov_matrix"], [39, 3, 1, "", "deepcopy"], [39, 2, 1, "", "eqcons"], [39, 3, 1, "", "evaluate"], [39, 2, 1, "", "evolved"], [39, 2, 1, "", "fit_deriv"], [39, 2, 1, "", "fittable"], [39, 2, 1, "", "fixed"], [39, 3, 1, "", "get_bounding_box"], [39, 3, 1, "", "has_inverse"], [39, 2, 1, "", "has_user_bounding_box"], [39, 2, 1, "", "has_user_inverse"], [39, 2, 1, "", "ineqcons"], [39, 3, 1, "", "input_shape"], [39, 2, 1, "", "input_units"], [39, 2, 1, "", "input_units_allow_dimensionless"], [39, 2, 1, "", "input_units_equivalencies"], [39, 2, 1, "", "input_units_strict"], [39, 2, 1, "", "inputs"], [39, 2, 1, "", "inverse"], [39, 2, 1, "", "linear"], [39, 2, 1, "", "meta"], [39, 2, 1, "", "model_constraints"], [39, 2, 1, "", "model_set_axis"], [39, 2, 1, "", "n_inputs"], [39, 2, 1, "", "n_outputs"], [39, 2, 1, "", "n_submodels"], [39, 2, 1, "", "name"], [39, 3, 1, "", "output_units"], [39, 2, 1, "", "outputs"], [39, 2, 1, "", "param_names"], [39, 2, 1, "", "param_sets"], [39, 2, 1, "", "parameter_constraints"], [39, 2, 1, "", "parameters"], [39, 3, 1, "", "prepare_inputs"], [39, 3, 1, "", "prepare_outputs"], [39, 2, 1, "", "r_1"], [39, 3, 1, "", "rename"], [39, 3, 1, "", "render"], [39, 2, 1, "", "return_units"], [39, 2, 1, "", "separable"], [39, 3, 1, "", "set_slice_args"], [39, 2, 1, "", "standard_broadcasting"], [39, 2, 1, "", "stds"], [39, 3, 1, "", "strip_units_from_tree"], [39, 3, 1, "", "sum_of_implicit_terms"], [39, 2, 1, "", "sync_constraints"], [39, 2, 1, "", "tied"], [39, 2, 1, "", "uses_quantity"], [39, 3, 1, "", "with_units_from_data"], [39, 3, 1, "", "without_units_for_data"]], "gammapy.astro.population.YusifovKucuk2004B": [[40, 3, 1, "", "__call__"], [40, 2, 1, "", "a"], [40, 2, 1, "", "amplitude"], [40, 2, 1, "", "b"], [40, 2, 1, "", "bbox_with_units"], [40, 2, 1, "", "bounding_box"], [40, 2, 1, "", "bounds"], [40, 3, 1, "", "coerce_units"], [40, 2, 1, "", "col_fit_deriv"], [40, 3, 1, "", "copy"], [40, 2, 1, "", "cov_matrix"], [40, 3, 1, "", "deepcopy"], [40, 2, 1, "", "eqcons"], [40, 3, 1, "", "evaluate"], [40, 2, 1, "", "evolved"], [40, 2, 1, "", "fit_deriv"], [40, 2, 1, "", "fittable"], [40, 2, 1, "", "fixed"], [40, 3, 1, "", "get_bounding_box"], [40, 3, 1, "", "has_inverse"], [40, 2, 1, "", "has_user_bounding_box"], [40, 2, 1, "", "has_user_inverse"], [40, 2, 1, "", "ineqcons"], [40, 3, 1, "", "input_shape"], [40, 2, 1, "", "input_units"], [40, 2, 1, "", "input_units_allow_dimensionless"], [40, 2, 1, "", "input_units_equivalencies"], [40, 2, 1, "", "input_units_strict"], [40, 2, 1, "", "inputs"], [40, 2, 1, "", "inverse"], [40, 2, 1, "", "linear"], [40, 2, 1, "", "meta"], [40, 2, 1, "", "model_constraints"], [40, 2, 1, "", "model_set_axis"], [40, 2, 1, "", "n_inputs"], [40, 2, 1, "", "n_outputs"], [40, 2, 1, "", "n_submodels"], [40, 2, 1, "", "name"], [40, 3, 1, "", "output_units"], [40, 2, 1, "", "outputs"], [40, 2, 1, "", "param_names"], [40, 2, 1, "", "param_sets"], [40, 2, 1, "", "parameter_constraints"], [40, 2, 1, "", "parameters"], [40, 3, 1, "", "prepare_inputs"], [40, 3, 1, "", "prepare_outputs"], [40, 3, 1, "", "rename"], [40, 3, 1, "", "render"], [40, 2, 1, "", "return_units"], [40, 2, 1, "", "separable"], [40, 3, 1, "", "set_slice_args"], [40, 2, 1, "", "standard_broadcasting"], [40, 2, 1, "", "stds"], [40, 3, 1, "", "strip_units_from_tree"], [40, 3, 1, "", "sum_of_implicit_terms"], [40, 2, 1, "", "sync_constraints"], [40, 2, 1, "", "tied"], [40, 2, 1, "", "uses_quantity"], [40, 3, 1, "", "with_units_from_data"], [40, 3, 1, "", "without_units_for_data"]], "gammapy.astro.source": [[50, 1, 1, "", "PWN"], [51, 1, 1, "", "Pulsar"], [52, 1, 1, "", "SNR"], [53, 1, 1, "", "SNRTrueloveMcKee"], [54, 1, 1, "", "SimplePulsar"]], "gammapy.astro.source.PWN": [[50, 3, 1, "", "magnetic_field"], [50, 3, 1, "", "radius"]], "gammapy.astro.source.Pulsar": [[51, 3, 1, "", "energy_integrated"], [51, 3, 1, "", "luminosity_spindown"], [51, 3, 1, "", "magnetic_field"], [51, 3, 1, "", "period"], [51, 3, 1, "", "period_dot"], [51, 3, 1, "", "tau"]], "gammapy.astro.source.SNR": [[52, 3, 1, "", "luminosity_tev"], [52, 3, 1, "", "radius"], [52, 3, 1, "", "radius_inner"], [52, 2, 1, "", "sedov_taylor_begin"], [52, 2, 1, "", "sedov_taylor_end"]], "gammapy.astro.source.SNRTrueloveMcKee": [[53, 3, 1, "", "luminosity_tev"], [53, 3, 1, "", "radius"], [53, 3, 1, "", "radius_inner"], [53, 3, 1, "", "radius_reverse_shock"], [53, 2, 1, "", "sedov_taylor_begin"], [53, 2, 1, "", "sedov_taylor_end"]], "gammapy.astro.source.SimplePulsar": [[54, 2, 1, "", "luminosity_spindown"], [54, 2, 1, "", "magnetic_field"], [54, 2, 1, "", "tau"]], "gammapy.catalog": [[55, 5, 1, "", "CATALOG_REGISTRY"], [56, 1, 1, "", "SourceCatalog"], [57, 1, 1, "", "SourceCatalog1LHAASO"], [58, 1, 1, "", "SourceCatalog2FHL"], [59, 1, 1, "", "SourceCatalog2HWC"], [60, 1, 1, "", "SourceCatalog2PC"], [61, 1, 1, "", "SourceCatalog3FGL"], [62, 1, 1, "", "SourceCatalog3FHL"], [63, 1, 1, "", "SourceCatalog3HWC"], [64, 1, 1, "", "SourceCatalog3PC"], [65, 1, 1, "", "SourceCatalog4FGL"], [66, 1, 1, "", "SourceCatalogGammaCat"], [67, 1, 1, "", "SourceCatalogHGPS"], [68, 1, 1, "", "SourceCatalogLargeScaleHGPS"], [69, 1, 1, "", "SourceCatalogObject"], [70, 1, 1, "", "SourceCatalogObject1LHAASO"], [71, 1, 1, "", "SourceCatalogObject2FHL"], [72, 1, 1, "", "SourceCatalogObject2HWC"], [73, 1, 1, "", "SourceCatalogObject2PC"], [74, 1, 1, "", "SourceCatalogObject3FGL"], [75, 1, 1, "", "SourceCatalogObject3FHL"], [76, 1, 1, "", "SourceCatalogObject3HWC"], [77, 1, 1, "", "SourceCatalogObject3PC"], [78, 1, 1, "", "SourceCatalogObject4FGL"], [79, 1, 1, "", "SourceCatalogObjectGammaCat"], [80, 1, 1, "", "SourceCatalogObjectHGPS"], [81, 1, 1, "", "SourceCatalogObjectHGPSComponent"]], "gammapy.catalog.SourceCatalog": [[56, 3, 1, "", "description"], [56, 2, 1, "", "positions"], [56, 3, 1, "", "row_index"], [56, 3, 1, "", "source_name"], [56, 2, 1, "", "tag"], [56, 3, 1, "", "to_models"]], "gammapy.catalog.SourceCatalog1LHAASO": [[57, 2, 1, "", "description"], [57, 2, 1, "", "positions"], [57, 3, 1, "", "row_index"], [57, 3, 1, "", "source_name"], [57, 2, 1, "", "tag"], [57, 3, 1, "", "to_models"]], "gammapy.catalog.SourceCatalog2FHL": [[58, 2, 1, "", "description"], [58, 2, 1, "", "positions"], [58, 3, 1, "", "row_index"], [58, 3, 1, "", "source_name"], [58, 2, 1, "", "tag"], [58, 3, 1, "", "to_models"]], "gammapy.catalog.SourceCatalog2HWC": [[59, 2, 1, "", "description"], [59, 2, 1, "", "positions"], [59, 3, 1, "", "row_index"], [59, 3, 1, "", "source_name"], [59, 2, 1, "", "tag"], [59, 3, 1, "", "to_models"]], "gammapy.catalog.SourceCatalog2PC": [[60, 2, 1, "", "description"], [60, 2, 1, "", "positions"], [60, 3, 1, "", "row_index"], [60, 3, 1, "", "source_name"], [60, 2, 1, "", "tag"], [60, 3, 1, "", "to_models"]], "gammapy.catalog.SourceCatalog3FGL": [[61, 2, 1, "", "description"], [61, 2, 1, "", "positions"], [61, 3, 1, "", "row_index"], [61, 3, 1, "", "source_name"], [61, 2, 1, "", "tag"], [61, 3, 1, "", "to_models"]], "gammapy.catalog.SourceCatalog3FHL": [[62, 2, 1, "", "description"], [62, 2, 1, "", "positions"], [62, 3, 1, "", "row_index"], [62, 3, 1, "", "source_name"], [62, 2, 1, "", "tag"], [62, 3, 1, "", "to_models"]], "gammapy.catalog.SourceCatalog3HWC": [[63, 2, 1, "", "description"], [63, 2, 1, "", "positions"], [63, 3, 1, "", "row_index"], [63, 3, 1, "", "source_name"], [63, 2, 1, "", "tag"], [63, 3, 1, "", "to_models"]], "gammapy.catalog.SourceCatalog3PC": [[64, 2, 1, "", "description"], [64, 2, 1, "", "positions"], [64, 3, 1, "", "row_index"], [64, 3, 1, "", "source_name"], [64, 2, 1, "", "tag"], [64, 3, 1, "", "to_models"]], "gammapy.catalog.SourceCatalog4FGL": [[65, 2, 1, "", "description"], [65, 2, 1, "", "positions"], [65, 3, 1, "", "row_index"], [65, 3, 1, "", "source_name"], [65, 2, 1, "", "tag"], [65, 3, 1, "", "to_models"]], "gammapy.catalog.SourceCatalogGammaCat": [[66, 2, 1, "", "description"], [66, 2, 1, "", "positions"], [66, 3, 1, "", "row_index"], [66, 3, 1, "", "source_name"], [66, 2, 1, "", "tag"], [66, 3, 1, "", "to_models"]], "gammapy.catalog.SourceCatalogHGPS": [[67, 2, 1, "", "description"], [67, 3, 1, "", "gaussian_component"], [67, 2, 1, "", "large_scale_component"], [67, 2, 1, "", "positions"], [67, 3, 1, "", "row_index"], [67, 3, 1, "", "source_name"], [67, 2, 1, "", "table_associations"], [67, 2, 1, "", "table_components"], [67, 2, 1, "", "table_identifications"], [67, 2, 1, "", "table_large_scale_component"], [67, 2, 1, "", "tag"], [67, 3, 1, "", "to_models"]], "gammapy.catalog.SourceCatalogLargeScaleHGPS": [[68, 3, 1, "", "evaluate"], [68, 3, 1, "", "peak_brightness"], [68, 3, 1, "", "peak_brightness_error"], [68, 3, 1, "", "peak_latitude"], [68, 3, 1, "", "peak_latitude_error"], [68, 3, 1, "", "width"], [68, 3, 1, "", "width_error"]], "gammapy.catalog.SourceCatalogObject": [[69, 2, 1, "", "name"], [69, 2, 1, "", "position"], [69, 2, 1, "", "row_index"]], "gammapy.catalog.SourceCatalogObject1LHAASO": [[70, 2, 1, "", "name"], [70, 2, 1, "", "position"], [70, 2, 1, "", "row_index"], [70, 3, 1, "", "sky_model"], [70, 3, 1, "", "spatial_model"], [70, 3, 1, "", "spectral_model"]], "gammapy.catalog.SourceCatalogObject2FHL": [[71, 2, 1, "", "asso"], [71, 2, 1, "", "energy_range"], [71, 2, 1, "", "flux_points"], [71, 2, 1, "", "flux_points_meta"], [71, 2, 1, "", "flux_points_table"], [71, 3, 1, "", "info"], [71, 2, 1, "", "is_pointlike"], [71, 2, 1, "", "name"], [71, 2, 1, "", "position"], [71, 2, 1, "", "row_index"], [71, 3, 1, "", "sky_model"], [71, 3, 1, "", "spatial_model"], [71, 3, 1, "", "spectral_model"]], "gammapy.catalog.SourceCatalogObject2HWC": [[72, 3, 1, "", "info"], [72, 2, 1, "", "n_models"], [72, 2, 1, "", "name"], [72, 2, 1, "", "position"], [72, 2, 1, "", "row_index"], [72, 3, 1, "", "sky_model"], [72, 3, 1, "", "spatial_model"], [72, 3, 1, "", "spectral_model"]], "gammapy.catalog.SourceCatalogObject2PC": [[73, 2, 1, "", "flux_points"], [73, 2, 1, "", "flux_points_table"], [73, 3, 1, "", "info"], [73, 2, 1, "", "lightcurve"], [73, 2, 1, "", "name"], [73, 2, 1, "", "position"], [73, 2, 1, "", "row_index"], [73, 3, 1, "", "sky_model"], [73, 3, 1, "", "spatial_model"], [73, 3, 1, "", "spectral_model"]], "gammapy.catalog.SourceCatalogObject3FGL": [[74, 2, 1, "", "asso"], [74, 2, 1, "", "energy_range"], [74, 2, 1, "", "flux_points"], [74, 2, 1, "", "flux_points_meta"], [74, 2, 1, "", "flux_points_table"], [74, 3, 1, "", "info"], [74, 2, 1, "", "is_pointlike"], [74, 3, 1, "", "lightcurve"], [74, 2, 1, "", "name"], [74, 2, 1, "", "position"], [74, 2, 1, "", "row_index"], [74, 3, 1, "", "sky_model"], [74, 3, 1, "", "spatial_model"], [74, 3, 1, "", "spectral_model"]], "gammapy.catalog.SourceCatalogObject3FHL": [[75, 2, 1, "", "asso"], [75, 2, 1, "", "energy_range"], [75, 2, 1, "", "flux_points"], [75, 2, 1, "", "flux_points_meta"], [75, 2, 1, "", "flux_points_table"], [75, 3, 1, "", "info"], [75, 2, 1, "", "is_pointlike"], [75, 2, 1, "", "name"], [75, 2, 1, "", "position"], [75, 2, 1, "", "row_index"], [75, 3, 1, "", "sky_model"], [75, 3, 1, "", "spatial_model"], [75, 3, 1, "", "spectral_model"]], "gammapy.catalog.SourceCatalogObject3HWC": [[76, 3, 1, "", "info"], [76, 2, 1, "", "is_pointlike"], [76, 2, 1, "", "n_models"], [76, 2, 1, "", "name"], [76, 2, 1, "", "position"], [76, 2, 1, "", "row_index"], [76, 3, 1, "", "sky_model"], [76, 3, 1, "", "spatial_model"], [76, 3, 1, "", "spectral_model"]], "gammapy.catalog.SourceCatalogObject3PC": [[77, 2, 1, "", "asso"], [77, 2, 1, "", "flux_points"], [77, 2, 1, "", "flux_points_table"], [77, 3, 1, "", "info"], [77, 2, 1, "", "lightcurve"], [77, 2, 1, "", "name"], [77, 2, 1, "", "position"], [77, 2, 1, "", "pulse_profile_best_fit"], [77, 2, 1, "", "pulse_profile_radio"], [77, 2, 1, "", "pulse_profiles"], [77, 2, 1, "", "row_index"], [77, 3, 1, "", "sky_model"], [77, 3, 1, "", "spatial_model"], [77, 3, 1, "", "spectral_model"]], "gammapy.catalog.SourceCatalogObject4FGL": [[78, 2, 1, "", "asso"], [78, 2, 1, "", "flux_points"], [78, 2, 1, "", "flux_points_meta"], [78, 2, 1, "", "flux_points_table"], [78, 3, 1, "", "info"], [78, 2, 1, "", "is_pointlike"], [78, 3, 1, "", "lightcurve"], [78, 2, 1, "", "name"], [78, 2, 1, "", "position"], [78, 2, 1, "", "row_index"], [78, 3, 1, "", "sky_model"], [78, 3, 1, "", "spatial_model"], [78, 3, 1, "", "spectral_model"]], "gammapy.catalog.SourceCatalogObjectGammaCat": [[79, 2, 1, "", "flux_points"], [79, 2, 1, "", "flux_points_table"], [79, 3, 1, "", "info"], [79, 2, 1, "", "name"], [79, 2, 1, "", "position"], [79, 2, 1, "", "row_index"], [79, 3, 1, "", "sky_model"], [79, 3, 1, "", "spatial_model"], [79, 3, 1, "", "spectral_model"]], "gammapy.catalog.SourceCatalogObjectHGPS": [[80, 3, 1, "", "components_models"], [80, 2, 1, "", "energy_range"], [80, 2, 1, "", "flux_points"], [80, 2, 1, "", "flux_points_table"], [80, 3, 1, "", "info"], [80, 2, 1, "", "name"], [80, 2, 1, "", "position"], [80, 2, 1, "", "row_index"], [80, 3, 1, "", "sky_model"], [80, 3, 1, "", "spatial_model"], [80, 3, 1, "", "spectral_model"]], "gammapy.catalog.SourceCatalogObjectHGPSComponent": [[81, 2, 1, "", "name"], [81, 2, 1, "", "position"], [81, 2, 1, "", "row_index"], [81, 3, 1, "", "spatial_model"]], "gammapy.data": [[82, 1, 1, "", "DataStore"], [83, 1, 1, "", "EventList"], [84, 1, 1, "", "EventListMetaData"], [85, 1, 1, "", "FixedPointingInfo"], [86, 1, 1, "", "GTI"], [87, 1, 1, "", "HDUIndexTable"], [88, 1, 1, "", "Observation"], [89, 1, 1, "", "ObservationFilter"], [90, 1, 1, "", "ObservationMetaData"], [91, 1, 1, "", "ObservationTable"], [92, 1, 1, "", "Observations"], [93, 1, 1, "", "ObservationsEventsSampler"], [94, 1, 1, "", "PointingInfo"], [95, 1, 1, "", "PointingMode"], [96, 4, 1, "", "get_irfs_features"], [97, 5, 1, "", "observatory_locations"]], "gammapy.data.DataStore": [[82, 2, 1, "", "DEFAULT_HDU_TABLE"], [82, 2, 1, "", "DEFAULT_OBS_TABLE"], [82, 3, 1, "", "check"], [82, 3, 1, "", "copy_obs"], [82, 3, 1, "", "from_dir"], [82, 3, 1, "", "from_events_files"], [82, 3, 1, "", "from_file"], [82, 3, 1, "", "get_observations"], [82, 3, 1, "", "info"], [82, 3, 1, "", "obs"], [82, 2, 1, "", "obs_ids"]], "gammapy.data.EventList": [[83, 2, 1, "", "altaz"], [83, 2, 1, "", "altaz_frame"], [83, 2, 1, "", "altaz_from_table"], [83, 3, 1, "", "check"], [83, 3, 1, "", "copy"], [83, 2, 1, "", "energy"], [83, 3, 1, "", "from_stack"], [83, 2, 1, "", "galactic"], [83, 2, 1, "", "galactic_median"], [83, 2, 1, "", "is_pointed_observation"], [83, 3, 1, "", "map_coord"], [83, 2, 1, "", "observation_dead_time_fraction"], [83, 2, 1, "", "observation_live_time_duration"], [83, 2, 1, "", "observation_time_duration"], [83, 2, 1, "", "observation_time_start"], [83, 2, 1, "", "observation_time_stop"], [83, 2, 1, "", "observatory_earth_location"], [83, 2, 1, "", "offset"], [83, 2, 1, "", "offset_from_median"], [83, 3, 1, "", "peek"], [83, 3, 1, "", "plot_energy"], [83, 3, 1, "", "plot_energy_offset"], [83, 3, 1, "", "plot_image"], [83, 3, 1, "", "plot_offset2_distribution"], [83, 3, 1, "", "plot_time"], [83, 2, 1, "", "pointing_radec"], [83, 2, 1, "", "radec"], [83, 3, 1, "", "read"], [83, 3, 1, "", "select_energy"], [83, 3, 1, "", "select_mask"], [83, 3, 1, "", "select_offset"], [83, 3, 1, "", "select_parameter"], [83, 3, 1, "", "select_rad_max"], [83, 3, 1, "", "select_region"], [83, 3, 1, "", "select_row_subset"], [83, 3, 1, "", "select_time"], [83, 3, 1, "", "stack"], [83, 2, 1, "", "time"], [83, 2, 1, "", "time_ref"], [83, 3, 1, "", "to_table_hdu"]], "gammapy.data.EventListMetaData": [[84, 3, 1, "", "construct"], [84, 3, 1, "", "copy"], [84, 3, 1, "", "dict"], [84, 3, 1, "", "from_header"], [84, 3, 1, "", "from_orm"], [84, 3, 1, "", "json"], [84, 2, 1, "", "model_computed_fields"], [84, 2, 1, "", "model_config"], [84, 3, 1, "", "model_construct"], [84, 3, 1, "", "model_copy"], [84, 3, 1, "", "model_dump"], [84, 3, 1, "", "model_dump_json"], [84, 2, 1, "", "model_extra"], [84, 2, 1, "", "model_fields"], [84, 2, 1, "", "model_fields_set"], [84, 3, 1, "", "model_json_schema"], [84, 3, 1, "", "model_parametrized_name"], [84, 3, 1, "", "model_post_init"], [84, 3, 1, "", "model_rebuild"], [84, 3, 1, "", "model_validate"], [84, 3, 1, "", "model_validate_json"], [84, 3, 1, "", "model_validate_strings"], [84, 3, 1, "", "parse_file"], [84, 3, 1, "", "parse_obj"], [84, 3, 1, "", "parse_raw"], [84, 3, 1, "", "schema"], [84, 3, 1, "", "schema_json"], [84, 2, 1, "", "tag"], [84, 3, 1, "", "to_header"], [84, 3, 1, "", "to_yaml"], [84, 3, 1, "", "update_forward_refs"], [84, 3, 1, "", "validate"]], "gammapy.data.FixedPointingInfo": [[85, 2, 1, "", "fixed_altaz"], [85, 2, 1, "", "fixed_icrs"], [85, 3, 1, "", "from_fits_header"], [85, 3, 1, "", "get_altaz"], [85, 3, 1, "", "get_icrs"], [85, 2, 1, "", "mode"], [85, 3, 1, "", "read"], [85, 3, 1, "", "to_fits_header"]], "gammapy.data.GTI": [[86, 3, 1, "", "copy"], [86, 3, 1, "", "create"], [86, 3, 1, "", "delete_interval"], [86, 3, 1, "", "from_stack"], [86, 3, 1, "", "from_table_hdu"], [86, 3, 1, "", "from_time_intervals"], [86, 3, 1, "", "group_table"], [86, 2, 1, "", "met_start"], [86, 2, 1, "", "met_stop"], [86, 3, 1, "", "read"], [86, 3, 1, "", "select_time"], [86, 3, 1, "", "stack"], [86, 2, 1, "", "time_delta"], [86, 2, 1, "", "time_intervals"], [86, 2, 1, "", "time_ref"], [86, 2, 1, "", "time_start"], [86, 2, 1, "", "time_stop"], [86, 2, 1, "", "time_sum"], [86, 3, 1, "", "to_table_hdu"], [86, 3, 1, "", "union"], [86, 3, 1, "", "write"]], "gammapy.data.HDUIndexTable": [[87, 2, 1, "", "ColumnClass"], [87, 2, 1, "", "VALID_HDU_CLASS"], [87, 2, 1, "", "VALID_HDU_TYPE"], [87, 3, 1, "", "add_column"], [87, 3, 1, "", "add_columns"], [87, 3, 1, "", "add_index"], [87, 3, 1, "", "add_row"], [87, 3, 1, "", "argsort"], [87, 3, 1, "", "as_array"], [87, 2, 1, "", "base_dir"], [87, 2, 1, "", "colnames"], [87, 3, 1, "", "convert_bytestring_to_unicode"], [87, 3, 1, "", "convert_unicode_to_bytestring"], [87, 3, 1, "", "copy"], [87, 2, 1, "", "dtype"], [87, 3, 1, "", "field"], [87, 3, 1, "", "filled"], [87, 3, 1, "", "from_pandas"], [87, 3, 1, "", "group_by"], [87, 2, 1, "", "groups"], [87, 2, 1, "", "has_masked_columns"], [87, 2, 1, "", "has_masked_values"], [87, 2, 1, "", "has_mixin_columns"], [87, 2, 1, "", "hdu_class_unique"], [87, 3, 1, "", "hdu_location"], [87, 2, 1, "", "hdu_type_unique"], [87, 2, 1, "", "iloc"], [87, 3, 1, "", "index_column"], [87, 3, 1, "", "index_mode"], [87, 2, 1, "", "indices"], [87, 2, 1, "", "info"], [87, 3, 1, "", "insert_row"], [87, 3, 1, "", "items"], [87, 3, 1, "", "itercols"], [87, 3, 1, "", "iterrows"], [87, 3, 1, "", "keep_columns"], [87, 3, 1, "", "keys"], [87, 2, 1, "", "loc"], [87, 2, 1, "", "loc_indices"], [87, 3, 1, "", "location_info"], [87, 2, 1, "", "mask"], [87, 2, 1, "", "masked"], [87, 2, 1, "", "meta"], [87, 3, 1, "", "more"], [87, 2, 1, "", "obs_id_unique"], [87, 3, 1, "", "pformat"], [87, 3, 1, "", "pformat_all"], [87, 3, 1, "", "pprint"], [87, 3, 1, "", "pprint_all"], [87, 2, 1, "", "pprint_exclude_names"], [87, 2, 1, "", "pprint_include_names"], [87, 3, 1, "", "read"], [87, 3, 1, "", "remove_column"], [87, 3, 1, "", "remove_columns"], [87, 3, 1, "", "remove_indices"], [87, 3, 1, "", "remove_row"], [87, 3, 1, "", "remove_rows"], [87, 3, 1, "", "rename_column"], [87, 3, 1, "", "rename_columns"], [87, 3, 1, "", "replace_column"], [87, 3, 1, "", "reverse"], [87, 3, 1, "", "round"], [87, 3, 1, "", "row_idx"], [87, 3, 1, "", "show_in_browser"], [87, 3, 1, "", "show_in_notebook"], [87, 3, 1, "", "sort"], [87, 3, 1, "", "summary"], [87, 3, 1, "", "to_pandas"], [87, 3, 1, "", "update"], [87, 3, 1, "", "values"], [87, 3, 1, "", "values_equal"], [87, 2, 1, "", "write"]], "gammapy.data.Observation": [[88, 2, 1, "", "aeff"], [88, 2, 1, "", "available_hdus"], [88, 2, 1, "", "available_irfs"], [88, 2, 1, "", "bkg"], [88, 3, 1, "", "check"], [88, 3, 1, "", "copy"], [88, 3, 1, "", "create"], [88, 2, 1, "", "edisp"], [88, 2, 1, "", "events"], [88, 3, 1, "", "get_pointing_altaz"], [88, 3, 1, "", "get_pointing_icrs"], [88, 2, 1, "", "gti"], [88, 2, 1, "", "meta"], [88, 2, 1, "", "observation_dead_time_fraction"], [88, 2, 1, "", "observation_live_time_duration"], [88, 2, 1, "", "observation_time_duration"], [88, 2, 1, "", "observatory_earth_location"], [88, 3, 1, "", "peek"], [88, 2, 1, "", "pointing"], [88, 2, 1, "", "psf"], [88, 2, 1, "", "rad_max"], [88, 3, 1, "", "read"], [88, 3, 1, "", "select_time"], [88, 2, 1, "", "target_radec"], [88, 2, 1, "", "tmid"], [88, 2, 1, "", "tstart"], [88, 2, 1, "", "tstop"], [88, 3, 1, "", "write"]], "gammapy.data.ObservationFilter": [[89, 2, 1, "", "EVENT_FILTER_TYPES"], [89, 3, 1, "", "copy"], [89, 3, 1, "", "filter_events"], [89, 3, 1, "", "filter_gti"], [89, 2, 1, "", "livetime_fraction"]], "gammapy.data.ObservationMetaData": [[90, 3, 1, "", "construct"], [90, 3, 1, "", "copy"], [90, 3, 1, "", "dict"], [90, 3, 1, "", "from_header"], [90, 3, 1, "", "from_orm"], [90, 3, 1, "", "json"], [90, 2, 1, "", "model_computed_fields"], [90, 2, 1, "", "model_config"], [90, 3, 1, "", "model_construct"], [90, 3, 1, "", "model_copy"], [90, 3, 1, "", "model_dump"], [90, 3, 1, "", "model_dump_json"], [90, 2, 1, "", "model_extra"], [90, 2, 1, "", "model_fields"], [90, 2, 1, "", "model_fields_set"], [90, 3, 1, "", "model_json_schema"], [90, 3, 1, "", "model_parametrized_name"], [90, 3, 1, "", "model_post_init"], [90, 3, 1, "", "model_rebuild"], [90, 3, 1, "", "model_validate"], [90, 3, 1, "", "model_validate_json"], [90, 3, 1, "", "model_validate_strings"], [90, 3, 1, "", "parse_file"], [90, 3, 1, "", "parse_obj"], [90, 3, 1, "", "parse_raw"], [90, 3, 1, "", "schema"], [90, 3, 1, "", "schema_json"], [90, 2, 1, "", "tag"], [90, 3, 1, "", "to_header"], [90, 3, 1, "", "to_yaml"], [90, 3, 1, "", "update_forward_refs"], [90, 3, 1, "", "validate"]], "gammapy.data.ObservationTable": [[91, 2, 1, "", "ColumnClass"], [91, 3, 1, "", "add_column"], [91, 3, 1, "", "add_columns"], [91, 3, 1, "", "add_index"], [91, 3, 1, "", "add_row"], [91, 3, 1, "", "argsort"], [91, 3, 1, "", "as_array"], [91, 2, 1, "", "colnames"], [91, 3, 1, "", "convert_bytestring_to_unicode"], [91, 3, 1, "", "convert_unicode_to_bytestring"], [91, 3, 1, "", "copy"], [91, 2, 1, "", "dtype"], [91, 3, 1, "", "field"], [91, 3, 1, "", "filled"], [91, 3, 1, "", "from_pandas"], [91, 3, 1, "", "group_by"], [91, 2, 1, "", "groups"], [91, 2, 1, "", "has_masked_columns"], [91, 2, 1, "", "has_masked_values"], [91, 2, 1, "", "has_mixin_columns"], [91, 2, 1, "", "iloc"], [91, 3, 1, "", "index_column"], [91, 3, 1, "", "index_mode"], [91, 2, 1, "", "indices"], [91, 2, 1, "", "info"], [91, 3, 1, "", "insert_row"], [91, 3, 1, "", "items"], [91, 3, 1, "", "itercols"], [91, 3, 1, "", "iterrows"], [91, 3, 1, "", "keep_columns"], [91, 3, 1, "", "keys"], [91, 2, 1, "", "loc"], [91, 2, 1, "", "loc_indices"], [91, 2, 1, "", "mask"], [91, 2, 1, "", "masked"], [91, 2, 1, "", "meta"], [91, 3, 1, "", "more"], [91, 3, 1, "", "pformat"], [91, 3, 1, "", "pformat_all"], [91, 2, 1, "", "pointing_galactic"], [91, 2, 1, "", "pointing_radec"], [91, 3, 1, "", "pprint"], [91, 3, 1, "", "pprint_all"], [91, 2, 1, "", "pprint_exclude_names"], [91, 2, 1, "", "pprint_include_names"], [91, 3, 1, "", "read"], [91, 3, 1, "", "remove_column"], [91, 3, 1, "", "remove_columns"], [91, 3, 1, "", "remove_indices"], [91, 3, 1, "", "remove_row"], [91, 3, 1, "", "remove_rows"], [91, 3, 1, "", "rename_column"], [91, 3, 1, "", "rename_columns"], [91, 3, 1, "", "replace_column"], [91, 3, 1, "", "reverse"], [91, 3, 1, "", "round"], [91, 3, 1, "", "select_obs_id"], [91, 3, 1, "", "select_observations"], [91, 3, 1, "", "select_range"], [91, 3, 1, "", "select_sky_circle"], [91, 3, 1, "", "select_time_range"], [91, 3, 1, "", "show_in_browser"], [91, 3, 1, "", "show_in_notebook"], [91, 3, 1, "", "sort"], [91, 3, 1, "", "summary"], [91, 2, 1, "", "time_ref"], [91, 2, 1, "", "time_start"], [91, 2, 1, "", "time_stop"], [91, 3, 1, "", "to_pandas"], [91, 3, 1, "", "update"], [91, 3, 1, "", "values"], [91, 3, 1, "", "values_equal"], [91, 2, 1, "", "write"]], "gammapy.data.Observations": [[92, 3, 1, "", "append"], [92, 3, 1, "", "clear"], [92, 3, 1, "", "count"], [92, 3, 1, "", "extend"], [92, 3, 1, "", "from_stack"], [92, 3, 1, "", "group_by_label"], [92, 2, 1, "", "ids"], [92, 3, 1, "", "in_memory_generator"], [92, 3, 1, "", "index"], [92, 3, 1, "", "insert"], [92, 3, 1, "", "pop"], [92, 3, 1, "", "remove"], [92, 3, 1, "", "reverse"], [92, 3, 1, "", "select_time"]], "gammapy.data.ObservationsEventsSampler": [[93, 2, 1, "", "n_jobs"], [93, 2, 1, "", "parallel_backend"], [93, 3, 1, "", "run"], [93, 3, 1, "", "simulate_observation"]], "gammapy.data.PointingInfo": [[94, 2, 1, "", "altaz"], [94, 2, 1, "", "altaz_frame"], [94, 2, 1, "", "altaz_from_table"], [94, 3, 1, "", "altaz_interpolate"], [94, 2, 1, "", "duration"], [94, 3, 1, "", "get_altaz"], [94, 3, 1, "", "get_icrs"], [94, 2, 1, "", "location"], [94, 2, 1, "", "radec"], [94, 3, 1, "", "read"], [94, 2, 1, "", "time"], [94, 2, 1, "", "time_ref"]], "gammapy.data.PointingMode": [[95, 2, 1, "", "DRIFT"], [95, 2, 1, "", "POINTING"]], "gammapy.datasets": [[98, 5, 1, "", "DATASET_REGISTRY"], [99, 1, 1, "", "Dataset"], [100, 1, 1, "", "Datasets"], [101, 1, 1, "", "FermipyDatasetsReader"], [102, 1, 1, "", "FluxPointsDataset"], [103, 1, 1, "", "MapDataset"], [104, 1, 1, "", "MapDatasetEventSampler"], [105, 1, 1, "", "MapDatasetMetaData"], [106, 1, 1, "", "MapDatasetOnOff"], [107, 1, 1, "", "OGIPDatasetReader"], [108, 1, 1, "", "OGIPDatasetWriter"], [109, 1, 1, "", "ObservationEventSampler"], [110, 1, 1, "", "SpectrumDataset"], [111, 1, 1, "", "SpectrumDatasetOnOff"], [112, 4, 1, "", "apply_edisp"], [113, 4, 1, "", "create_empty_map_dataset_from_irfs"], [114, 4, 1, "", "create_map_dataset_from_observation"], [115, 4, 1, "", "create_map_dataset_geoms"], [116, 4, 1, "", "split_dataset"], [4, 0, 0, "-", "utils"]], "gammapy.datasets.Dataset": [[99, 3, 1, "", "copy"], [99, 2, 1, "", "mask"], [99, 2, 1, "", "name"], [99, 3, 1, "", "stat_array"], [99, 3, 1, "", "stat_sum"], [99, 2, 1, "", "stat_type"], [99, 2, 1, "", "tag"], [99, 3, 1, "", "to_dict"]], "gammapy.datasets.Datasets": [[100, 3, 1, "", "append"], [100, 3, 1, "", "clear"], [100, 2, 1, "", "contributes_to_stat"], [100, 3, 1, "", "copy"], [100, 3, 1, "", "count"], [100, 2, 1, "", "energy_axes_are_aligned"], [100, 2, 1, "", "energy_ranges"], [100, 3, 1, "", "extend"], [100, 2, 1, "", "gti"], [100, 3, 1, "", "index"], [100, 3, 1, "", "info_table"], [100, 3, 1, "", "insert"], [100, 2, 1, "", "is_all_same_energy_shape"], [100, 2, 1, "", "is_all_same_shape"], [100, 2, 1, "", "is_all_same_type"], [100, 2, 1, "", "meta_table"], [100, 2, 1, "", "models"], [100, 2, 1, "", "names"], [100, 2, 1, "", "parameters"], [100, 3, 1, "", "pop"], [100, 3, 1, "", "read"], [100, 3, 1, "", "remove"], [100, 3, 1, "", "reverse"], [100, 3, 1, "", "select_time"], [100, 3, 1, "", "slice_by_energy"], [100, 3, 1, "", "stack_reduce"], [100, 3, 1, "", "stat_sum"], [100, 3, 1, "", "to_spectrum_datasets"], [100, 3, 1, "", "write"]], "gammapy.datasets.FermipyDatasetsReader": [[101, 3, 1, "", "create_dataset"], [101, 3, 1, "", "read"], [101, 2, 1, "", "tag"]], "gammapy.datasets.FluxPointsDataset": [[102, 2, 1, "", "available_stat_type"], [102, 3, 1, "", "copy"], [102, 3, 1, "", "data_shape"], [102, 3, 1, "", "flux_pred"], [102, 3, 1, "", "from_dict"], [102, 2, 1, "", "gti"], [102, 2, 1, "", "mask"], [102, 2, 1, "", "mask_safe"], [102, 2, 1, "", "mask_valid"], [102, 2, 1, "", "models"], [102, 2, 1, "", "name"], [102, 3, 1, "", "plot_fit"], [102, 3, 1, "", "plot_residuals"], [102, 3, 1, "", "plot_spectrum"], [102, 3, 1, "", "read"], [102, 3, 1, "", "residuals"], [102, 3, 1, "", "stat_array"], [102, 3, 1, "", "stat_sum"], [102, 2, 1, "", "stat_type"], [102, 2, 1, "", "tag"], [102, 3, 1, "", "to_dict"], [102, 3, 1, "", "write"]], "gammapy.datasets.MapDataset": [[103, 2, 1, "", "background"], [103, 2, 1, "", "background_model"], [103, 3, 1, "", "copy"], [103, 2, 1, "", "counts"], [103, 3, 1, "", "create"], [103, 3, 1, "", "cutout"], [103, 2, 1, "", "data_shape"], [103, 3, 1, "", "downsample"], [103, 2, 1, "", "edisp"], [103, 2, 1, "", "energy_range"], [103, 2, 1, "", "energy_range_fit"], [103, 2, 1, "", "energy_range_safe"], [103, 2, 1, "", "energy_range_total"], [103, 2, 1, "", "evaluators"], [103, 2, 1, "", "excess"], [103, 2, 1, "", "exposure"], [103, 3, 1, "", "fake"], [103, 3, 1, "", "from_dict"], [103, 3, 1, "", "from_geoms"], [103, 3, 1, "", "from_hdulist"], [103, 2, 1, "", "geoms"], [103, 2, 1, "", "gti"], [103, 3, 1, "", "info_dict"], [103, 2, 1, "", "mask"], [103, 2, 1, "", "mask_fit"], [103, 2, 1, "", "mask_fit_image"], [103, 2, 1, "", "mask_image"], [103, 2, 1, "", "mask_safe"], [103, 2, 1, "", "mask_safe_edisp"], [103, 2, 1, "", "mask_safe_image"], [103, 2, 1, "", "mask_safe_psf"], [103, 2, 1, "", "meta"], [103, 2, 1, "", "meta_table"], [103, 2, 1, "", "models"], [103, 2, 1, "", "name"], [103, 3, 1, "", "npred"], [103, 3, 1, "", "npred_background"], [103, 3, 1, "", "npred_signal"], [103, 3, 1, "", "pad"], [103, 3, 1, "", "peek"], [103, 3, 1, "", "plot_residuals"], [103, 3, 1, "", "plot_residuals_spatial"], [103, 3, 1, "", "plot_residuals_spectral"], [103, 2, 1, "", "psf"], [103, 3, 1, "", "read"], [103, 3, 1, "", "resample_energy_axis"], [103, 3, 1, "", "reset_data_cache"], [103, 3, 1, "", "residuals"], [103, 3, 1, "", "slice_by_energy"], [103, 3, 1, "", "slice_by_idx"], [103, 3, 1, "", "stack"], [103, 3, 1, "", "stat_array"], [103, 3, 1, "", "stat_sum"], [103, 2, 1, "", "stat_type"], [103, 2, 1, "", "tag"], [103, 3, 1, "", "to_dict"], [103, 3, 1, "", "to_hdulist"], [103, 3, 1, "", "to_image"], [103, 3, 1, "", "to_masked"], [103, 3, 1, "", "to_region_map_dataset"], [103, 3, 1, "", "to_spectrum_dataset"], [103, 3, 1, "", "write"]], "gammapy.datasets.MapDatasetEventSampler": [[104, 3, 1, "", "event_det_coords"], [104, 3, 1, "", "event_list_meta"], [104, 3, 1, "", "run"], [104, 3, 1, "", "sample_background"], [104, 3, 1, "", "sample_edisp"], [104, 3, 1, "", "sample_psf"], [104, 3, 1, "", "sample_sources"]], "gammapy.datasets.MapDatasetMetaData": [[105, 3, 1, "", "construct"], [105, 3, 1, "", "copy"], [105, 3, 1, "", "dict"], [105, 3, 1, "", "from_header"], [105, 3, 1, "", "from_orm"], [105, 3, 1, "", "json"], [105, 2, 1, "", "model_computed_fields"], [105, 2, 1, "", "model_config"], [105, 3, 1, "", "model_construct"], [105, 3, 1, "", "model_copy"], [105, 3, 1, "", "model_dump"], [105, 3, 1, "", "model_dump_json"], [105, 2, 1, "", "model_extra"], [105, 2, 1, "", "model_fields"], [105, 2, 1, "", "model_fields_set"], [105, 3, 1, "", "model_json_schema"], [105, 3, 1, "", "model_parametrized_name"], [105, 3, 1, "", "model_post_init"], [105, 3, 1, "", "model_rebuild"], [105, 3, 1, "", "model_validate"], [105, 3, 1, "", "model_validate_json"], [105, 3, 1, "", "model_validate_strings"], [105, 3, 1, "", "parse_file"], [105, 3, 1, "", "parse_obj"], [105, 3, 1, "", "parse_raw"], [105, 3, 1, "", "schema"], [105, 3, 1, "", "schema_json"], [105, 3, 1, "", "stack"], [105, 2, 1, "", "tag"], [105, 3, 1, "", "to_header"], [105, 3, 1, "", "to_yaml"], [105, 3, 1, "", "update_forward_refs"], [105, 3, 1, "", "validate"]], "gammapy.datasets.MapDatasetOnOff": [[106, 2, 1, "", "alpha"], [106, 2, 1, "", "background"], [106, 2, 1, "", "background_model"], [106, 3, 1, "", "copy"], [106, 2, 1, "", "counts"], [106, 3, 1, "", "create"], [106, 3, 1, "", "cutout"], [106, 2, 1, "", "data_shape"], [106, 3, 1, "", "downsample"], [106, 2, 1, "", "edisp"], [106, 2, 1, "", "energy_range"], [106, 2, 1, "", "energy_range_fit"], [106, 2, 1, "", "energy_range_safe"], [106, 2, 1, "", "energy_range_total"], [106, 2, 1, "", "evaluators"], [106, 2, 1, "", "excess"], [106, 2, 1, "", "exposure"], [106, 3, 1, "", "fake"], [106, 3, 1, "", "from_dict"], [106, 3, 1, "", "from_geoms"], [106, 3, 1, "", "from_hdulist"], [106, 3, 1, "", "from_map_dataset"], [106, 2, 1, "", "geoms"], [106, 2, 1, "", "gti"], [106, 3, 1, "", "info_dict"], [106, 2, 1, "", "mask"], [106, 2, 1, "", "mask_fit"], [106, 2, 1, "", "mask_fit_image"], [106, 2, 1, "", "mask_image"], [106, 2, 1, "", "mask_safe"], [106, 2, 1, "", "mask_safe_edisp"], [106, 2, 1, "", "mask_safe_image"], [106, 2, 1, "", "mask_safe_psf"], [106, 2, 1, "", "meta"], [106, 2, 1, "", "meta_table"], [106, 2, 1, "", "models"], [106, 2, 1, "", "name"], [106, 3, 1, "", "npred"], [106, 3, 1, "", "npred_background"], [106, 3, 1, "", "npred_off"], [106, 3, 1, "", "npred_signal"], [106, 3, 1, "", "pad"], [106, 3, 1, "", "peek"], [106, 3, 1, "", "plot_residuals"], [106, 3, 1, "", "plot_residuals_spatial"], [106, 3, 1, "", "plot_residuals_spectral"], [106, 2, 1, "", "psf"], [106, 3, 1, "", "read"], [106, 3, 1, "", "resample_energy_axis"], [106, 3, 1, "", "reset_data_cache"], [106, 3, 1, "", "residuals"], [106, 3, 1, "", "slice_by_energy"], [106, 3, 1, "", "slice_by_idx"], [106, 3, 1, "", "stack"], [106, 3, 1, "", "stat_array"], [106, 3, 1, "", "stat_sum"], [106, 2, 1, "", "stat_type"], [106, 2, 1, "", "tag"], [106, 3, 1, "", "to_dict"], [106, 3, 1, "", "to_hdulist"], [106, 3, 1, "", "to_image"], [106, 3, 1, "", "to_map_dataset"], [106, 3, 1, "", "to_masked"], [106, 3, 1, "", "to_region_map_dataset"], [106, 3, 1, "", "to_spectrum_dataset"], [106, 3, 1, "", "write"]], "gammapy.datasets.OGIPDatasetReader": [[107, 3, 1, "", "get_filenames"], [107, 3, 1, "", "get_valid_path"], [107, 3, 1, "", "read"], [107, 3, 1, "", "read_arf"], [107, 3, 1, "", "read_bkg"], [107, 3, 1, "", "read_pha"], [107, 3, 1, "", "read_rmf"], [107, 2, 1, "", "tag"]], "gammapy.datasets.OGIPDatasetWriter": [[108, 3, 1, "", "get_filenames"], [108, 3, 1, "", "get_ogip_meta"], [108, 2, 1, "", "tag"], [108, 3, 1, "", "to_counts_hdulist"], [108, 3, 1, "", "write"], [108, 3, 1, "", "write_arf"], [108, 3, 1, "", "write_bkg"], [108, 3, 1, "", "write_pha"], [108, 3, 1, "", "write_rmf"]], "gammapy.datasets.ObservationEventSampler": [[109, 3, 1, "", "event_det_coords"], [109, 3, 1, "", "event_list_meta"], [109, 3, 1, "", "run"], [109, 3, 1, "", "sample_background"], [109, 3, 1, "", "sample_edisp"], [109, 3, 1, "", "sample_psf"], [109, 3, 1, "", "sample_sources"]], "gammapy.datasets.SpectrumDataset": [[110, 2, 1, "", "background"], [110, 2, 1, "", "background_model"], [110, 3, 1, "", "copy"], [110, 2, 1, "", "counts"], [110, 3, 1, "", "create"], [110, 3, 1, "", "cutout"], [110, 2, 1, "", "data_shape"], [110, 3, 1, "", "downsample"], [110, 2, 1, "", "edisp"], [110, 2, 1, "", "energy_range"], [110, 2, 1, "", "energy_range_fit"], [110, 2, 1, "", "energy_range_safe"], [110, 2, 1, "", "energy_range_total"], [110, 2, 1, "", "evaluators"], [110, 2, 1, "", "excess"], [110, 2, 1, "", "exposure"], [110, 3, 1, "", "fake"], [110, 3, 1, "", "from_dict"], [110, 3, 1, "", "from_geoms"], [110, 3, 1, "", "from_hdulist"], [110, 2, 1, "", "geoms"], [110, 2, 1, "", "gti"], [110, 3, 1, "", "info_dict"], [110, 2, 1, "", "mask"], [110, 2, 1, "", "mask_fit"], [110, 2, 1, "", "mask_fit_image"], [110, 2, 1, "", "mask_image"], [110, 2, 1, "", "mask_safe"], [110, 2, 1, "", "mask_safe_edisp"], [110, 2, 1, "", "mask_safe_image"], [110, 2, 1, "", "mask_safe_psf"], [110, 2, 1, "", "meta"], [110, 2, 1, "", "meta_table"], [110, 2, 1, "", "models"], [110, 2, 1, "", "name"], [110, 3, 1, "", "npred"], [110, 3, 1, "", "npred_background"], [110, 3, 1, "", "npred_signal"], [110, 3, 1, "", "pad"], [110, 3, 1, "", "peek"], [110, 3, 1, "", "plot_counts"], [110, 3, 1, "", "plot_excess"], [110, 3, 1, "", "plot_fit"], [110, 3, 1, "", "plot_masks"], [110, 3, 1, "", "plot_residuals"], [110, 3, 1, "", "plot_residuals_spatial"], [110, 3, 1, "", "plot_residuals_spectral"], [110, 2, 1, "", "psf"], [110, 3, 1, "", "read"], [110, 3, 1, "", "resample_energy_axis"], [110, 3, 1, "", "reset_data_cache"], [110, 3, 1, "", "residuals"], [110, 3, 1, "", "slice_by_energy"], [110, 3, 1, "", "slice_by_idx"], [110, 3, 1, "", "stack"], [110, 3, 1, "", "stat_array"], [110, 3, 1, "", "stat_sum"], [110, 2, 1, "", "stat_type"], [110, 2, 1, "", "tag"], [110, 3, 1, "", "to_dict"], [110, 3, 1, "", "to_hdulist"], [110, 3, 1, "", "to_image"], [110, 3, 1, "", "to_masked"], [110, 3, 1, "", "to_region_map_dataset"], [110, 3, 1, "", "to_spectrum_dataset"], [110, 3, 1, "", "write"]], "gammapy.datasets.SpectrumDatasetOnOff": [[111, 2, 1, "", "alpha"], [111, 2, 1, "", "background"], [111, 2, 1, "", "background_model"], [111, 3, 1, "", "copy"], [111, 2, 1, "", "counts"], [111, 3, 1, "", "create"], [111, 3, 1, "", "cutout"], [111, 2, 1, "", "data_shape"], [111, 3, 1, "", "downsample"], [111, 2, 1, "", "edisp"], [111, 2, 1, "", "energy_range"], [111, 2, 1, "", "energy_range_fit"], [111, 2, 1, "", "energy_range_safe"], [111, 2, 1, "", "energy_range_total"], [111, 2, 1, "", "evaluators"], [111, 2, 1, "", "excess"], [111, 2, 1, "", "exposure"], [111, 3, 1, "", "fake"], [111, 3, 1, "", "from_dict"], [111, 3, 1, "", "from_geoms"], [111, 3, 1, "", "from_hdulist"], [111, 3, 1, "", "from_map_dataset"], [111, 3, 1, "", "from_spectrum_dataset"], [111, 2, 1, "", "geoms"], [111, 2, 1, "", "gti"], [111, 3, 1, "", "info_dict"], [111, 2, 1, "", "mask"], [111, 2, 1, "", "mask_fit"], [111, 2, 1, "", "mask_fit_image"], [111, 2, 1, "", "mask_image"], [111, 2, 1, "", "mask_safe"], [111, 2, 1, "", "mask_safe_edisp"], [111, 2, 1, "", "mask_safe_image"], [111, 2, 1, "", "mask_safe_psf"], [111, 2, 1, "", "meta"], [111, 2, 1, "", "meta_table"], [111, 2, 1, "", "models"], [111, 2, 1, "", "name"], [111, 3, 1, "", "npred"], [111, 3, 1, "", "npred_background"], [111, 3, 1, "", "npred_off"], [111, 3, 1, "", "npred_signal"], [111, 3, 1, "", "pad"], [111, 3, 1, "", "peek"], [111, 3, 1, "", "plot_counts"], [111, 3, 1, "", "plot_excess"], [111, 3, 1, "", "plot_fit"], [111, 3, 1, "", "plot_masks"], [111, 3, 1, "", "plot_residuals"], [111, 3, 1, "", "plot_residuals_spatial"], [111, 3, 1, "", "plot_residuals_spectral"], [111, 2, 1, "", "psf"], [111, 3, 1, "", "read"], [111, 3, 1, "", "resample_energy_axis"], [111, 3, 1, "", "reset_data_cache"], [111, 3, 1, "", "residuals"], [111, 3, 1, "", "slice_by_energy"], [111, 3, 1, "", "slice_by_idx"], [111, 3, 1, "", "stack"], [111, 3, 1, "", "stat_array"], [111, 3, 1, "", "stat_sum"], [111, 2, 1, "", "stat_type"], [111, 2, 1, "", "tag"], [111, 3, 1, "", "to_dict"], [111, 3, 1, "", "to_hdulist"], [111, 3, 1, "", "to_image"], [111, 3, 1, "", "to_map_dataset"], [111, 3, 1, "", "to_masked"], [111, 3, 1, "", "to_region_map_dataset"], [111, 3, 1, "", "to_spectrum_dataset"], [111, 3, 1, "", "write"]], "gammapy.datasets.utils": [[117, 4, 1, "", "apply_edisp"], [118, 4, 1, "", "create_map_dataset_from_dl4"], [119, 4, 1, "", "split_dataset"]], "gammapy.estimators": [[120, 1, 1, "", "ASmoothMapEstimator"], [121, 5, 1, "", "ESTIMATOR_REGISTRY"], [122, 1, 1, "", "EnergyDependentMorphologyEstimator"], [123, 1, 1, "", "Estimator"], [124, 1, 1, "", "ExcessMapEstimator"], [125, 1, 1, "", "FluxMaps"], [126, 1, 1, "", "FluxMetaData"], [127, 1, 1, "", "FluxPoints"], [128, 1, 1, "", "FluxPointsEstimator"], [129, 1, 1, "", "FluxProfileEstimator"], [130, 1, 1, "", "ImageProfile"], [131, 1, 1, "", "ImageProfileEstimator"], [132, 1, 1, "", "LightCurveEstimator"], [133, 1, 1, "", "ParameterEstimator"], [134, 1, 1, "", "ParameterSensitivityEstimator"], [135, 1, 1, "", "SensitivityEstimator"], [136, 1, 1, "", "TSMapEstimator"], [5, 0, 0, "-", "utils"]], "gammapy.estimators.ASmoothMapEstimator": [[120, 2, 1, "", "config_parameters"], [120, 3, 1, "", "copy"], [120, 3, 1, "", "estimate_maps"], [120, 3, 1, "", "get_kernels"], [120, 3, 1, "", "get_scales"], [120, 3, 1, "", "run"], [120, 3, 1, "", "selection_all"], [120, 2, 1, "", "selection_optional"], [120, 2, 1, "", "tag"]], "gammapy.estimators.EnergyDependentMorphologyEstimator": [[122, 2, 1, "", "config_parameters"], [122, 3, 1, "", "copy"], [122, 3, 1, "", "estimate_energy_dependence"], [122, 3, 1, "", "run"], [122, 2, 1, "", "selection_optional"], [122, 2, 1, "", "tag"]], "gammapy.estimators.Estimator": [[123, 2, 1, "", "config_parameters"], [123, 3, 1, "", "copy"], [123, 3, 1, "", "run"], [123, 2, 1, "", "selection_optional"], [123, 2, 1, "", "tag"]], "gammapy.estimators.ExcessMapEstimator": [[124, 2, 1, "", "config_parameters"], [124, 3, 1, "", "copy"], [124, 2, 1, "", "correlation_radius"], [124, 3, 1, "", "estimate_excess_map"], [124, 3, 1, "", "estimate_exposure_reco_energy"], [124, 3, 1, "", "estimate_kernel"], [124, 3, 1, "", "estimate_mask_default"], [124, 3, 1, "", "run"], [124, 2, 1, "", "selection_optional"], [124, 2, 1, "", "tag"]], "gammapy.estimators.FluxMaps": [[125, 2, 1, "", "acceptance_off"], [125, 2, 1, "", "acceptance_on"], [125, 3, 1, "", "all_quantities"], [125, 2, 1, "", "alpha"], [125, 2, 1, "", "available_quantities"], [125, 3, 1, "", "copy"], [125, 2, 1, "", "counts"], [125, 2, 1, "", "dnde"], [125, 2, 1, "", "dnde_err"], [125, 2, 1, "", "dnde_errn"], [125, 2, 1, "", "dnde_errp"], [125, 2, 1, "", "dnde_ref"], [125, 2, 1, "", "dnde_scan_values"], [125, 2, 1, "", "dnde_ul"], [125, 2, 1, "", "e2dnde"], [125, 2, 1, "", "e2dnde_err"], [125, 2, 1, "", "e2dnde_errn"], [125, 2, 1, "", "e2dnde_errp"], [125, 2, 1, "", "e2dnde_ref"], [125, 2, 1, "", "e2dnde_ul"], [125, 2, 1, "", "eflux"], [125, 2, 1, "", "eflux_err"], [125, 2, 1, "", "eflux_errn"], [125, 2, 1, "", "eflux_errp"], [125, 2, 1, "", "eflux_ref"], [125, 2, 1, "", "eflux_ul"], [125, 2, 1, "", "energy_axis"], [125, 2, 1, "", "energy_max"], [125, 2, 1, "", "energy_min"], [125, 2, 1, "", "energy_ref"], [125, 2, 1, "", "filter_success_nan"], [125, 2, 1, "", "flux"], [125, 2, 1, "", "flux_err"], [125, 2, 1, "", "flux_errn"], [125, 2, 1, "", "flux_errp"], [125, 2, 1, "", "flux_ref"], [125, 2, 1, "", "flux_sensitivity"], [125, 2, 1, "", "flux_ul"], [125, 3, 1, "", "from_hdulist"], [125, 3, 1, "", "from_maps"], [125, 3, 1, "", "from_stack"], [125, 2, 1, "", "geom"], [125, 3, 1, "", "get_flux_points"], [125, 2, 1, "", "has_any_ts"], [125, 2, 1, "", "has_stat_profiles"], [125, 2, 1, "", "has_success"], [125, 2, 1, "", "has_ul"], [125, 2, 1, "", "is_convertible_to_flux_sed_type"], [125, 2, 1, "", "is_ul"], [125, 3, 1, "", "iter_by_axis"], [125, 2, 1, "", "n_dof"], [125, 2, 1, "", "n_sigma"], [125, 2, 1, "", "n_sigma_ul"], [125, 2, 1, "", "niter"], [125, 2, 1, "", "norm"], [125, 2, 1, "", "norm_err"], [125, 2, 1, "", "norm_errn"], [125, 2, 1, "", "norm_errp"], [125, 2, 1, "", "norm_sensitivity"], [125, 2, 1, "", "norm_ul"], [125, 2, 1, "", "npred"], [125, 2, 1, "", "npred_background"], [125, 2, 1, "", "npred_excess"], [125, 2, 1, "", "npred_excess_err"], [125, 2, 1, "", "npred_excess_errn"], [125, 2, 1, "", "npred_excess_errp"], [125, 2, 1, "", "npred_excess_ref"], [125, 2, 1, "", "npred_excess_ul"], [125, 3, 1, "", "read"], [125, 2, 1, "", "reference_model"], [125, 2, 1, "", "reference_model_default"], [125, 2, 1, "", "reference_spectral_model"], [125, 2, 1, "", "sed_type_init"], [125, 2, 1, "", "sed_type_plot_default"], [125, 3, 1, "", "slice_by_coord"], [125, 3, 1, "", "slice_by_energy"], [125, 3, 1, "", "slice_by_idx"], [125, 3, 1, "", "slice_by_time"], [125, 2, 1, "", "sqrt_ts"], [125, 2, 1, "", "sqrt_ts_threshold_ul"], [125, 2, 1, "", "stat"], [125, 2, 1, "", "stat_null"], [125, 2, 1, "", "stat_scan"], [125, 2, 1, "", "success"], [125, 3, 1, "", "to_hdulist"], [125, 3, 1, "", "to_maps"], [125, 2, 1, "", "ts"], [125, 2, 1, "", "ts_scan"], [125, 3, 1, "", "write"]], "gammapy.estimators.FluxMetaData": [[126, 3, 1, "", "construct"], [126, 3, 1, "", "copy"], [126, 3, 1, "", "dict"], [126, 3, 1, "", "from_header"], [126, 3, 1, "", "from_orm"], [126, 3, 1, "", "json"], [126, 2, 1, "", "model_computed_fields"], [126, 2, 1, "", "model_config"], [126, 3, 1, "", "model_construct"], [126, 3, 1, "", "model_copy"], [126, 3, 1, "", "model_dump"], [126, 3, 1, "", "model_dump_json"], [126, 2, 1, "", "model_extra"], [126, 2, 1, "", "model_fields"], [126, 2, 1, "", "model_fields_set"], [126, 3, 1, "", "model_json_schema"], [126, 3, 1, "", "model_parametrized_name"], [126, 3, 1, "", "model_post_init"], [126, 3, 1, "", "model_rebuild"], [126, 3, 1, "", "model_validate"], [126, 3, 1, "", "model_validate_json"], [126, 3, 1, "", "model_validate_strings"], [126, 3, 1, "", "parse_file"], [126, 3, 1, "", "parse_obj"], [126, 3, 1, "", "parse_raw"], [126, 3, 1, "", "schema"], [126, 3, 1, "", "schema_json"], [126, 2, 1, "", "tag"], [126, 3, 1, "", "to_header"], [126, 3, 1, "", "to_yaml"], [126, 3, 1, "", "update_forward_refs"], [126, 3, 1, "", "validate"]], "gammapy.estimators.FluxPoints": [[127, 2, 1, "", "acceptance_off"], [127, 2, 1, "", "acceptance_on"], [127, 3, 1, "", "all_quantities"], [127, 2, 1, "", "alpha"], [127, 2, 1, "", "available_quantities"], [127, 3, 1, "", "copy"], [127, 2, 1, "", "counts"], [127, 2, 1, "", "dnde"], [127, 2, 1, "", "dnde_err"], [127, 2, 1, "", "dnde_errn"], [127, 2, 1, "", "dnde_errp"], [127, 2, 1, "", "dnde_ref"], [127, 2, 1, "", "dnde_scan_values"], [127, 2, 1, "", "dnde_ul"], [127, 2, 1, "", "e2dnde"], [127, 2, 1, "", "e2dnde_err"], [127, 2, 1, "", "e2dnde_errn"], [127, 2, 1, "", "e2dnde_errp"], [127, 2, 1, "", "e2dnde_ref"], [127, 2, 1, "", "e2dnde_ul"], [127, 2, 1, "", "eflux"], [127, 2, 1, "", "eflux_err"], [127, 2, 1, "", "eflux_errn"], [127, 2, 1, "", "eflux_errp"], [127, 2, 1, "", "eflux_ref"], [127, 2, 1, "", "eflux_ul"], [127, 2, 1, "", "energy_axis"], [127, 2, 1, "", "energy_max"], [127, 2, 1, "", "energy_min"], [127, 2, 1, "", "energy_ref"], [127, 2, 1, "", "filter_success_nan"], [127, 2, 1, "", "flux"], [127, 2, 1, "", "flux_err"], [127, 2, 1, "", "flux_errn"], [127, 2, 1, "", "flux_errp"], [127, 2, 1, "", "flux_ref"], [127, 2, 1, "", "flux_sensitivity"], [127, 2, 1, "", "flux_ul"], [127, 3, 1, "", "from_hdulist"], [127, 3, 1, "", "from_maps"], [127, 3, 1, "", "from_stack"], [127, 3, 1, "", "from_table"], [127, 2, 1, "", "geom"], [127, 3, 1, "", "get_flux_points"], [127, 2, 1, "", "has_any_ts"], [127, 2, 1, "", "has_stat_profiles"], [127, 2, 1, "", "has_success"], [127, 2, 1, "", "has_ul"], [127, 2, 1, "", "is_convertible_to_flux_sed_type"], [127, 2, 1, "", "is_ul"], [127, 3, 1, "", "iter_by_axis"], [127, 2, 1, "", "n_dof"], [127, 2, 1, "", "n_sigma"], [127, 2, 1, "", "n_sigma_ul"], [127, 2, 1, "", "niter"], [127, 2, 1, "", "norm"], [127, 2, 1, "", "norm_err"], [127, 2, 1, "", "norm_errn"], [127, 2, 1, "", "norm_errp"], [127, 2, 1, "", "norm_sensitivity"], [127, 2, 1, "", "norm_ul"], [127, 2, 1, "", "npred"], [127, 2, 1, "", "npred_background"], [127, 2, 1, "", "npred_excess"], [127, 2, 1, "", "npred_excess_err"], [127, 2, 1, "", "npred_excess_errn"], [127, 2, 1, "", "npred_excess_errp"], [127, 2, 1, "", "npred_excess_ref"], [127, 2, 1, "", "npred_excess_ul"], [127, 3, 1, "", "plot"], [127, 3, 1, "", "plot_ts_profiles"], [127, 3, 1, "", "read"], [127, 3, 1, "", "recompute_ul"], [127, 2, 1, "", "reference_model"], [127, 2, 1, "", "reference_model_default"], [127, 2, 1, "", "reference_spectral_model"], [127, 3, 1, "", "resample_axis"], [127, 2, 1, "", "sed_type_init"], [127, 2, 1, "", "sed_type_plot_default"], [127, 3, 1, "", "slice_by_coord"], [127, 3, 1, "", "slice_by_energy"], [127, 3, 1, "", "slice_by_idx"], [127, 3, 1, "", "slice_by_time"], [127, 2, 1, "", "sqrt_ts"], [127, 2, 1, "", "sqrt_ts_threshold_ul"], [127, 2, 1, "", "stat"], [127, 2, 1, "", "stat_null"], [127, 2, 1, "", "stat_scan"], [127, 2, 1, "", "success"], [127, 3, 1, "", "to_hdulist"], [127, 3, 1, "", "to_maps"], [127, 3, 1, "", "to_table"], [127, 2, 1, "", "ts"], [127, 2, 1, "", "ts_scan"], [127, 3, 1, "", "write"]], "gammapy.estimators.FluxPointsEstimator": [[128, 2, 1, "", "config_parameters"], [128, 3, 1, "", "copy"], [128, 3, 1, "", "estimate_best_fit"], [128, 3, 1, "", "estimate_counts"], [128, 3, 1, "", "estimate_errn_errp"], [128, 3, 1, "", "estimate_flux_point"], [128, 3, 1, "", "estimate_npred"], [128, 3, 1, "", "estimate_npred_excess"], [128, 3, 1, "", "estimate_scan"], [128, 3, 1, "", "estimate_sensitivity"], [128, 3, 1, "", "estimate_ts"], [128, 3, 1, "", "estimate_ul"], [128, 3, 1, "", "get_scale_model"], [128, 2, 1, "", "n_jobs"], [128, 2, 1, "", "parallel_backend"], [128, 3, 1, "", "run"], [128, 2, 1, "", "selection_optional"], [128, 2, 1, "", "tag"]], "gammapy.estimators.FluxProfileEstimator": [[129, 2, 1, "", "config_parameters"], [129, 3, 1, "", "copy"], [129, 3, 1, "", "estimate_best_fit"], [129, 3, 1, "", "estimate_counts"], [129, 3, 1, "", "estimate_errn_errp"], [129, 3, 1, "", "estimate_flux_point"], [129, 3, 1, "", "estimate_npred"], [129, 3, 1, "", "estimate_npred_excess"], [129, 3, 1, "", "estimate_scan"], [129, 3, 1, "", "estimate_sensitivity"], [129, 3, 1, "", "estimate_ts"], [129, 3, 1, "", "estimate_ul"], [129, 3, 1, "", "get_scale_model"], [129, 2, 1, "", "n_jobs"], [129, 2, 1, "", "parallel_backend"], [129, 2, 1, "", "projected_distance_axis"], [129, 3, 1, "", "run"], [129, 2, 1, "", "selection_optional"], [129, 2, 1, "", "tag"]], "gammapy.estimators.ImageProfile": [[130, 3, 1, "", "normalize"], [130, 3, 1, "", "peek"], [130, 3, 1, "", "plot"], [130, 3, 1, "", "plot_err"], [130, 2, 1, "", "profile"], [130, 2, 1, "", "profile_err"], [130, 3, 1, "", "smooth"], [130, 2, 1, "", "x_max"], [130, 2, 1, "", "x_min"], [130, 2, 1, "", "x_ref"]], "gammapy.estimators.ImageProfileEstimator": [[131, 2, 1, "", "config_parameters"], [131, 3, 1, "", "copy"], [131, 3, 1, "", "run"], [131, 2, 1, "", "selection_optional"], [131, 2, 1, "", "tag"]], "gammapy.estimators.LightCurveEstimator": [[132, 2, 1, "", "config_parameters"], [132, 3, 1, "", "copy"], [132, 3, 1, "", "estimate_best_fit"], [132, 3, 1, "", "estimate_counts"], [132, 3, 1, "", "estimate_errn_errp"], [132, 3, 1, "", "estimate_flux_point"], [132, 3, 1, "", "estimate_npred"], [132, 3, 1, "", "estimate_npred_excess"], [132, 3, 1, "", "estimate_scan"], [132, 3, 1, "", "estimate_sensitivity"], [132, 3, 1, "", "estimate_time_bin_flux"], [132, 3, 1, "", "estimate_ts"], [132, 3, 1, "", "estimate_ul"], [132, 3, 1, "", "expand_map"], [132, 3, 1, "", "get_scale_model"], [132, 2, 1, "", "n_jobs"], [132, 2, 1, "", "parallel_backend"], [132, 3, 1, "", "run"], [132, 2, 1, "", "selection_optional"], [132, 2, 1, "", "tag"]], "gammapy.estimators.ParameterEstimator": [[133, 2, 1, "", "config_parameters"], [133, 3, 1, "", "copy"], [133, 3, 1, "", "estimate_best_fit"], [133, 3, 1, "", "estimate_counts"], [133, 3, 1, "", "estimate_errn_errp"], [133, 3, 1, "", "estimate_npred"], [133, 3, 1, "", "estimate_scan"], [133, 3, 1, "", "estimate_sensitivity"], [133, 3, 1, "", "estimate_ts"], [133, 3, 1, "", "estimate_ul"], [133, 3, 1, "", "run"], [133, 2, 1, "", "selection_optional"], [133, 2, 1, "", "tag"]], "gammapy.estimators.ParameterSensitivityEstimator": [[134, 3, 1, "", "parameter_matching_significance"], [134, 3, 1, "", "run"], [134, 2, 1, "", "tag"]], "gammapy.estimators.SensitivityEstimator": [[135, 2, 1, "", "config_parameters"], [135, 3, 1, "", "copy"], [135, 3, 1, "", "estimate_min_e2dnde"], [135, 3, 1, "", "estimate_min_excess"], [135, 3, 1, "", "run"], [135, 2, 1, "", "selection_optional"], [135, 2, 1, "", "tag"]], "gammapy.estimators.TSMapEstimator": [[136, 2, 1, "", "config_parameters"], [136, 3, 1, "", "copy"], [136, 3, 1, "", "estimate_fit_input_maps"], [136, 3, 1, "", "estimate_flux_default"], [136, 3, 1, "", "estimate_flux_map"], [136, 3, 1, "", "estimate_kernel"], [136, 3, 1, "", "estimate_mask_default"], [136, 3, 1, "", "estimate_pad_width"], [136, 2, 1, "", "n_jobs"], [136, 2, 1, "", "parallel_backend"], [136, 3, 1, "", "run"], [136, 2, 1, "", "selection_all"], [136, 2, 1, "", "selection_optional"], [136, 2, 1, "", "tag"]], "gammapy.estimators.utils": [[137, 4, 1, "", "combine_flux_maps"], [138, 4, 1, "", "combine_significance_maps"], [139, 4, 1, "", "compute_lightcurve_discrete_correlation"], [140, 4, 1, "", "compute_lightcurve_doublingtime"], [141, 4, 1, "", "compute_lightcurve_fpp"], [142, 4, 1, "", "compute_lightcurve_fvar"], [143, 4, 1, "", "estimate_exposure_reco_energy"], [144, 4, 1, "", "find_peaks"], [145, 4, 1, "", "find_peaks_in_flux_map"], [146, 4, 1, "", "get_combined_flux_maps"], [147, 4, 1, "", "get_combined_significance_maps"], [148, 4, 1, "", "get_rebinned_axis"], [149, 4, 1, "", "resample_energy_edges"]], "gammapy.irf": [[150, 1, 1, "", "Background2D"], [151, 1, 1, "", "Background3D"], [152, 1, 1, "", "BackgroundIRF"], [153, 1, 1, "", "EDispKernel"], [154, 1, 1, "", "EDispKernelMap"], [155, 1, 1, "", "EDispMap"], [156, 1, 1, "", "EffectiveAreaTable2D"], [157, 1, 1, "", "EnergyDependentMultiGaussPSF"], [158, 1, 1, "", "EnergyDispersion2D"], [159, 1, 1, "", "FoVAlignment"], [160, 1, 1, "", "IRF"], [161, 1, 1, "", "IRFMap"], [162, 5, 1, "", "IRF_REGISTRY"], [163, 1, 1, "", "PSF3D"], [164, 1, 1, "", "PSFKernel"], [165, 1, 1, "", "PSFKing"], [166, 1, 1, "", "PSFMap"], [167, 1, 1, "", "ParametricPSF"], [168, 1, 1, "", "RadMax2D"], [169, 1, 1, "", "RecoPSFMap"], [170, 4, 1, "", "load_irf_dict_from_file"]], "gammapy.irf.Background2D": [[150, 2, 1, "", "axes"], [150, 3, 1, "", "cumsum"], [150, 2, 1, "", "data"], [150, 2, 1, "", "default_interp_kwargs"], [150, 2, 1, "", "default_unit"], [150, 3, 1, "", "evaluate"], [150, 2, 1, "", "fov_alignment"], [150, 3, 1, "", "from_hdulist"], [150, 3, 1, "", "from_table"], [150, 2, 1, "", "has_offset_axis"], [150, 3, 1, "", "integral"], [150, 3, 1, "", "integrate_log_log"], [150, 3, 1, "", "interp_missing_data"], [150, 3, 1, "", "is_allclose"], [150, 2, 1, "", "is_pointlike"], [150, 3, 1, "", "normalize"], [150, 3, 1, "", "pad"], [150, 3, 1, "", "peek"], [150, 3, 1, "", "plot"], [150, 3, 1, "", "plot_at_energy"], [150, 3, 1, "", "plot_energy_dependence"], [150, 3, 1, "", "plot_offset_dependence"], [150, 3, 1, "", "plot_spectrum"], [150, 2, 1, "", "quantity"], [150, 3, 1, "", "read"], [150, 2, 1, "", "required_axes"], [150, 3, 1, "", "slice_by_idx"], [150, 2, 1, "", "tag"], [150, 3, 1, "", "to_3d"], [150, 3, 1, "", "to_hdulist"], [150, 3, 1, "", "to_table"], [150, 3, 1, "", "to_table_hdu"], [150, 3, 1, "", "to_unit"], [150, 2, 1, "", "unit"], [150, 3, 1, "", "write"]], "gammapy.irf.Background3D": [[151, 2, 1, "", "axes"], [151, 3, 1, "", "cumsum"], [151, 2, 1, "", "data"], [151, 2, 1, "", "default_interp_kwargs"], [151, 2, 1, "", "default_unit"], [151, 3, 1, "", "evaluate"], [151, 2, 1, "", "fov_alignment"], [151, 3, 1, "", "from_hdulist"], [151, 3, 1, "", "from_table"], [151, 2, 1, "", "has_offset_axis"], [151, 3, 1, "", "integral"], [151, 3, 1, "", "integrate_log_log"], [151, 3, 1, "", "interp_missing_data"], [151, 3, 1, "", "is_allclose"], [151, 2, 1, "", "is_pointlike"], [151, 3, 1, "", "normalize"], [151, 3, 1, "", "pad"], [151, 3, 1, "", "peek"], [151, 3, 1, "", "plot_at_energy"], [151, 2, 1, "", "quantity"], [151, 3, 1, "", "read"], [151, 2, 1, "", "required_axes"], [151, 3, 1, "", "slice_by_idx"], [151, 2, 1, "", "tag"], [151, 3, 1, "", "to_2d"], [151, 3, 1, "", "to_hdulist"], [151, 3, 1, "", "to_table"], [151, 3, 1, "", "to_table_hdu"], [151, 3, 1, "", "to_unit"], [151, 2, 1, "", "unit"], [151, 3, 1, "", "write"]], "gammapy.irf.BackgroundIRF": [[152, 2, 1, "", "axes"], [152, 3, 1, "", "cumsum"], [152, 2, 1, "", "data"], [152, 2, 1, "", "default_interp_kwargs"], [152, 3, 1, "", "evaluate"], [152, 2, 1, "", "fov_alignment"], [152, 3, 1, "", "from_hdulist"], [152, 3, 1, "", "from_table"], [152, 2, 1, "", "has_offset_axis"], [152, 3, 1, "", "integral"], [152, 3, 1, "", "integrate_log_log"], [152, 3, 1, "", "interp_missing_data"], [152, 3, 1, "", "is_allclose"], [152, 2, 1, "", "is_pointlike"], [152, 3, 1, "", "normalize"], [152, 3, 1, "", "pad"], [152, 2, 1, "", "quantity"], [152, 3, 1, "", "read"], [152, 2, 1, "", "required_axes"], [152, 3, 1, "", "slice_by_idx"], [152, 2, 1, "", "tag"], [152, 3, 1, "", "to_hdulist"], [152, 3, 1, "", "to_table"], [152, 3, 1, "", "to_table_hdu"], [152, 3, 1, "", "to_unit"], [152, 2, 1, "", "unit"], [152, 3, 1, "", "write"]], "gammapy.irf.EDispKernel": [[153, 2, 1, "", "axes"], [153, 3, 1, "", "cumsum"], [153, 2, 1, "", "data"], [153, 2, 1, "", "default_interp_kwargs"], [153, 3, 1, "", "evaluate"], [153, 2, 1, "", "fov_alignment"], [153, 3, 1, "", "from_diagonal_response"], [153, 3, 1, "", "from_gauss"], [153, 3, 1, "", "from_hdulist"], [153, 3, 1, "", "from_table"], [153, 3, 1, "", "get_bias"], [153, 3, 1, "", "get_bias_energy"], [153, 3, 1, "", "get_mean"], [153, 3, 1, "", "get_resolution"], [153, 2, 1, "", "has_offset_axis"], [153, 3, 1, "", "integral"], [153, 3, 1, "", "integrate_log_log"], [153, 3, 1, "", "interp_missing_data"], [153, 3, 1, "", "is_allclose"], [153, 2, 1, "", "is_pointlike"], [153, 3, 1, "", "normalize"], [153, 3, 1, "", "pad"], [153, 3, 1, "", "pdf_in_safe_range"], [153, 2, 1, "", "pdf_matrix"], [153, 3, 1, "", "peek"], [153, 3, 1, "", "plot_bias"], [153, 3, 1, "", "plot_matrix"], [153, 2, 1, "", "quantity"], [153, 3, 1, "", "read"], [153, 2, 1, "", "required_axes"], [153, 3, 1, "", "slice_by_idx"], [153, 2, 1, "", "tag"], [153, 3, 1, "", "to_hdulist"], [153, 3, 1, "", "to_image"], [153, 3, 1, "", "to_table"], [153, 3, 1, "", "to_table_hdu"], [153, 3, 1, "", "to_unit"], [153, 2, 1, "", "unit"], [153, 3, 1, "", "write"]], "gammapy.irf.EDispKernelMap": [[154, 3, 1, "", "copy"], [154, 3, 1, "", "cutout"], [154, 3, 1, "", "downsample"], [154, 2, 1, "", "edisp_map"], [154, 3, 1, "", "from_diagonal_response"], [154, 3, 1, "", "from_edisp_kernel"], [154, 3, 1, "", "from_gauss"], [154, 3, 1, "", "from_geom"], [154, 3, 1, "", "from_hdulist"], [154, 3, 1, "", "get_edisp_kernel"], [154, 2, 1, "", "has_single_spatial_bin"], [154, 2, 1, "", "mask_safe_image"], [154, 3, 1, "", "peek"], [154, 3, 1, "", "read"], [154, 2, 1, "", "required_axes"], [154, 3, 1, "", "resample_energy_axis"], [154, 3, 1, "", "slice_by_idx"], [154, 3, 1, "", "stack"], [154, 2, 1, "", "tag"], [154, 3, 1, "", "to_hdulist"], [154, 3, 1, "", "to_image"], [154, 3, 1, "", "to_region_nd_map"], [154, 3, 1, "", "write"]], "gammapy.irf.EDispMap": [[155, 3, 1, "", "copy"], [155, 3, 1, "", "cutout"], [155, 3, 1, "", "downsample"], [155, 2, 1, "", "edisp_map"], [155, 3, 1, "", "from_diagonal_response"], [155, 3, 1, "", "from_geom"], [155, 3, 1, "", "from_hdulist"], [155, 3, 1, "", "get_edisp_kernel"], [155, 2, 1, "", "has_single_spatial_bin"], [155, 2, 1, "", "mask_safe_image"], [155, 3, 1, "", "normalize"], [155, 3, 1, "", "peek"], [155, 3, 1, "", "read"], [155, 2, 1, "", "required_axes"], [155, 3, 1, "", "sample_coord"], [155, 3, 1, "", "slice_by_idx"], [155, 3, 1, "", "stack"], [155, 2, 1, "", "tag"], [155, 3, 1, "", "to_edisp_kernel_map"], [155, 3, 1, "", "to_hdulist"], [155, 3, 1, "", "to_region_nd_map"], [155, 3, 1, "", "write"]], "gammapy.irf.EffectiveAreaTable2D": [[156, 2, 1, "", "axes"], [156, 3, 1, "", "cumsum"], [156, 2, 1, "", "data"], [156, 2, 1, "", "default_interp_kwargs"], [156, 2, 1, "", "default_unit"], [156, 3, 1, "", "evaluate"], [156, 2, 1, "", "fov_alignment"], [156, 3, 1, "", "from_hdulist"], [156, 3, 1, "", "from_parametrization"], [156, 3, 1, "", "from_table"], [156, 2, 1, "", "has_offset_axis"], [156, 3, 1, "", "integral"], [156, 3, 1, "", "integrate_log_log"], [156, 3, 1, "", "interp_missing_data"], [156, 3, 1, "", "is_allclose"], [156, 2, 1, "", "is_pointlike"], [156, 3, 1, "", "normalize"], [156, 3, 1, "", "pad"], [156, 3, 1, "", "peek"], [156, 3, 1, "", "plot"], [156, 3, 1, "", "plot_energy_dependence"], [156, 3, 1, "", "plot_offset_dependence"], [156, 2, 1, "", "quantity"], [156, 3, 1, "", "read"], [156, 2, 1, "", "required_axes"], [156, 3, 1, "", "slice_by_idx"], [156, 2, 1, "", "tag"], [156, 3, 1, "", "to_hdulist"], [156, 3, 1, "", "to_table"], [156, 3, 1, "", "to_table_hdu"], [156, 3, 1, "", "to_unit"], [156, 2, 1, "", "unit"], [156, 3, 1, "", "write"]], "gammapy.irf.EnergyDependentMultiGaussPSF": [[157, 2, 1, "", "axes"], [157, 3, 1, "", "containment"], [157, 3, 1, "", "containment_radius"], [157, 3, 1, "", "cumsum"], [157, 2, 1, "", "data"], [157, 2, 1, "", "default_interp_kwargs"], [157, 3, 1, "", "evaluate"], [157, 3, 1, "", "evaluate_containment"], [157, 3, 1, "", "evaluate_direct"], [157, 3, 1, "", "evaluate_parameters"], [157, 2, 1, "", "fov_alignment"], [157, 3, 1, "", "from_hdulist"], [157, 3, 1, "", "from_table"], [157, 2, 1, "", "has_offset_axis"], [157, 3, 1, "", "info"], [157, 3, 1, "", "integral"], [157, 3, 1, "", "integrate_log_log"], [157, 3, 1, "", "interp_missing_data"], [157, 3, 1, "", "is_allclose"], [157, 2, 1, "", "is_pointlike"], [157, 3, 1, "", "normalize"], [157, 3, 1, "", "pad"], [157, 3, 1, "", "peek"], [157, 3, 1, "", "plot_containment_radius"], [157, 3, 1, "", "plot_containment_radius_vs_energy"], [157, 3, 1, "", "plot_psf_vs_rad"], [157, 2, 1, "", "quantity"], [157, 3, 1, "", "read"], [157, 2, 1, "", "required_axes"], [157, 2, 1, "", "required_parameters"], [157, 3, 1, "", "slice_by_idx"], [157, 2, 1, "", "tag"], [157, 3, 1, "", "to_hdulist"], [157, 3, 1, "", "to_psf3d"], [157, 3, 1, "", "to_table"], [157, 3, 1, "", "to_table_hdu"], [157, 3, 1, "", "to_unit"], [157, 2, 1, "", "unit"], [157, 3, 1, "", "write"]], "gammapy.irf.EnergyDispersion2D": [[158, 2, 1, "", "axes"], [158, 3, 1, "", "cumsum"], [158, 2, 1, "", "data"], [158, 2, 1, "", "default_interp_kwargs"], [158, 2, 1, "", "default_unit"], [158, 3, 1, "", "evaluate"], [158, 2, 1, "", "fov_alignment"], [158, 3, 1, "", "from_gauss"], [158, 3, 1, "", "from_hdulist"], [158, 3, 1, "", "from_table"], [158, 2, 1, "", "has_offset_axis"], [158, 3, 1, "", "integral"], [158, 3, 1, "", "integrate_log_log"], [158, 3, 1, "", "interp_missing_data"], [158, 3, 1, "", "is_allclose"], [158, 2, 1, "", "is_pointlike"], [158, 3, 1, "", "normalize"], [158, 3, 1, "", "pad"], [158, 3, 1, "", "peek"], [158, 3, 1, "", "plot_bias"], [158, 3, 1, "", "plot_migration"], [158, 2, 1, "", "quantity"], [158, 3, 1, "", "read"], [158, 2, 1, "", "required_axes"], [158, 3, 1, "", "slice_by_idx"], [158, 2, 1, "", "tag"], [158, 3, 1, "", "to_edisp_kernel"], [158, 3, 1, "", "to_hdulist"], [158, 3, 1, "", "to_table"], [158, 3, 1, "", "to_table_hdu"], [158, 3, 1, "", "to_unit"], [158, 2, 1, "", "unit"], [158, 3, 1, "", "write"]], "gammapy.irf.FoVAlignment": [[159, 2, 1, "", "ALTAZ"], [159, 2, 1, "", "RADEC"], [159, 2, 1, "", "REVERSE_LON_RADEC"]], "gammapy.irf.IRF": [[160, 2, 1, "", "axes"], [160, 3, 1, "", "cumsum"], [160, 2, 1, "", "data"], [160, 2, 1, "", "default_interp_kwargs"], [160, 3, 1, "", "evaluate"], [160, 2, 1, "", "fov_alignment"], [160, 3, 1, "", "from_hdulist"], [160, 3, 1, "", "from_table"], [160, 2, 1, "", "has_offset_axis"], [160, 3, 1, "", "integral"], [160, 3, 1, "", "integrate_log_log"], [160, 3, 1, "", "interp_missing_data"], [160, 3, 1, "", "is_allclose"], [160, 2, 1, "", "is_pointlike"], [160, 3, 1, "", "normalize"], [160, 3, 1, "", "pad"], [160, 2, 1, "", "quantity"], [160, 3, 1, "", "read"], [160, 2, 1, "", "required_axes"], [160, 3, 1, "", "slice_by_idx"], [160, 2, 1, "", "tag"], [160, 3, 1, "", "to_hdulist"], [160, 3, 1, "", "to_table"], [160, 3, 1, "", "to_table_hdu"], [160, 3, 1, "", "to_unit"], [160, 2, 1, "", "unit"], [160, 3, 1, "", "write"]], "gammapy.irf.IRFMap": [[161, 3, 1, "", "copy"], [161, 3, 1, "", "cutout"], [161, 3, 1, "", "downsample"], [161, 3, 1, "", "from_hdulist"], [161, 2, 1, "", "has_single_spatial_bin"], [161, 2, 1, "", "mask_safe_image"], [161, 3, 1, "", "read"], [161, 2, 1, "", "required_axes"], [161, 3, 1, "", "slice_by_idx"], [161, 3, 1, "", "stack"], [161, 2, 1, "", "tag"], [161, 3, 1, "", "to_hdulist"], [161, 3, 1, "", "to_region_nd_map"], [161, 3, 1, "", "write"]], "gammapy.irf.PSF3D": [[163, 2, 1, "", "axes"], [163, 3, 1, "", "containment"], [163, 3, 1, "", "containment_radius"], [163, 3, 1, "", "cumsum"], [163, 2, 1, "", "data"], [163, 2, 1, "", "default_interp_kwargs"], [163, 2, 1, "", "default_unit"], [163, 3, 1, "", "evaluate"], [163, 2, 1, "", "fov_alignment"], [163, 3, 1, "", "from_hdulist"], [163, 3, 1, "", "from_table"], [163, 2, 1, "", "has_offset_axis"], [163, 3, 1, "", "info"], [163, 3, 1, "", "integral"], [163, 3, 1, "", "integrate_log_log"], [163, 3, 1, "", "interp_missing_data"], [163, 3, 1, "", "is_allclose"], [163, 2, 1, "", "is_pointlike"], [163, 3, 1, "", "normalize"], [163, 3, 1, "", "pad"], [163, 3, 1, "", "peek"], [163, 3, 1, "", "plot_containment_radius"], [163, 3, 1, "", "plot_containment_radius_vs_energy"], [163, 3, 1, "", "plot_psf_vs_rad"], [163, 2, 1, "", "quantity"], [163, 3, 1, "", "read"], [163, 2, 1, "", "required_axes"], [163, 3, 1, "", "slice_by_idx"], [163, 2, 1, "", "tag"], [163, 3, 1, "", "to_hdulist"], [163, 3, 1, "", "to_table"], [163, 3, 1, "", "to_table_hdu"], [163, 3, 1, "", "to_unit"], [163, 2, 1, "", "unit"], [163, 3, 1, "", "write"]], "gammapy.irf.PSFKernel": [[164, 2, 1, "", "data"], [164, 3, 1, "", "from_gauss"], [164, 3, 1, "", "from_spatial_model"], [164, 3, 1, "", "normalize"], [164, 3, 1, "", "peek"], [164, 3, 1, "", "plot_kernel"], [164, 2, 1, "", "psf_kernel_map"], [164, 3, 1, "", "read"], [164, 3, 1, "", "slice_by_idx"], [164, 3, 1, "", "to_image"], [164, 3, 1, "", "write"]], "gammapy.irf.PSFKing": [[165, 2, 1, "", "axes"], [165, 3, 1, "", "containment"], [165, 3, 1, "", "containment_radius"], [165, 3, 1, "", "cumsum"], [165, 2, 1, "", "data"], [165, 2, 1, "", "default_interp_kwargs"], [165, 3, 1, "", "evaluate"], [165, 3, 1, "", "evaluate_containment"], [165, 3, 1, "", "evaluate_direct"], [165, 3, 1, "", "evaluate_parameters"], [165, 2, 1, "", "fov_alignment"], [165, 3, 1, "", "from_hdulist"], [165, 3, 1, "", "from_table"], [165, 2, 1, "", "has_offset_axis"], [165, 3, 1, "", "info"], [165, 3, 1, "", "integral"], [165, 3, 1, "", "integrate_log_log"], [165, 3, 1, "", "interp_missing_data"], [165, 3, 1, "", "is_allclose"], [165, 2, 1, "", "is_pointlike"], [165, 3, 1, "", "normalize"], [165, 3, 1, "", "pad"], [165, 3, 1, "", "peek"], [165, 3, 1, "", "plot_containment_radius"], [165, 3, 1, "", "plot_containment_radius_vs_energy"], [165, 3, 1, "", "plot_psf_vs_rad"], [165, 2, 1, "", "quantity"], [165, 3, 1, "", "read"], [165, 2, 1, "", "required_axes"], [165, 2, 1, "", "required_parameters"], [165, 3, 1, "", "slice_by_idx"], [165, 2, 1, "", "tag"], [165, 3, 1, "", "to_hdulist"], [165, 3, 1, "", "to_psf3d"], [165, 3, 1, "", "to_table"], [165, 3, 1, "", "to_table_hdu"], [165, 3, 1, "", "to_unit"], [165, 2, 1, "", "unit"], [165, 3, 1, "", "write"]], "gammapy.irf.PSFMap": [[166, 3, 1, "", "containment"], [166, 3, 1, "", "containment_radius"], [166, 3, 1, "", "containment_radius_map"], [166, 3, 1, "", "copy"], [166, 3, 1, "", "cutout"], [166, 3, 1, "", "downsample"], [166, 2, 1, "", "energy_name"], [166, 3, 1, "", "from_gauss"], [166, 3, 1, "", "from_geom"], [166, 3, 1, "", "from_hdulist"], [166, 3, 1, "", "get_psf_kernel"], [166, 2, 1, "", "has_single_spatial_bin"], [166, 2, 1, "", "mask_safe_image"], [166, 3, 1, "", "normalize"], [166, 3, 1, "", "peek"], [166, 3, 1, "", "plot_containment_radius_vs_energy"], [166, 3, 1, "", "plot_psf_vs_rad"], [166, 2, 1, "", "psf_map"], [166, 3, 1, "", "read"], [166, 2, 1, "", "required_axes"], [166, 3, 1, "", "sample_coord"], [166, 3, 1, "", "slice_by_idx"], [166, 3, 1, "", "stack"], [166, 2, 1, "", "tag"], [166, 3, 1, "", "to_hdulist"], [166, 3, 1, "", "to_image"], [166, 3, 1, "", "to_region_nd_map"], [166, 3, 1, "", "write"]], "gammapy.irf.ParametricPSF": [[167, 2, 1, "", "axes"], [167, 3, 1, "", "containment"], [167, 3, 1, "", "containment_radius"], [167, 3, 1, "", "cumsum"], [167, 2, 1, "", "data"], [167, 2, 1, "", "default_interp_kwargs"], [167, 3, 1, "", "evaluate"], [167, 3, 1, "", "evaluate_containment"], [167, 3, 1, "", "evaluate_direct"], [167, 3, 1, "", "evaluate_parameters"], [167, 2, 1, "", "fov_alignment"], [167, 3, 1, "", "from_hdulist"], [167, 3, 1, "", "from_table"], [167, 2, 1, "", "has_offset_axis"], [167, 3, 1, "", "info"], [167, 3, 1, "", "integral"], [167, 3, 1, "", "integrate_log_log"], [167, 3, 1, "", "interp_missing_data"], [167, 3, 1, "", "is_allclose"], [167, 2, 1, "", "is_pointlike"], [167, 3, 1, "", "normalize"], [167, 3, 1, "", "pad"], [167, 3, 1, "", "peek"], [167, 3, 1, "", "plot_containment_radius"], [167, 3, 1, "", "plot_containment_radius_vs_energy"], [167, 3, 1, "", "plot_psf_vs_rad"], [167, 2, 1, "", "quantity"], [167, 3, 1, "", "read"], [167, 2, 1, "", "required_axes"], [167, 2, 1, "", "required_parameters"], [167, 3, 1, "", "slice_by_idx"], [167, 2, 1, "", "tag"], [167, 3, 1, "", "to_hdulist"], [167, 3, 1, "", "to_psf3d"], [167, 3, 1, "", "to_table"], [167, 3, 1, "", "to_table_hdu"], [167, 3, 1, "", "to_unit"], [167, 2, 1, "", "unit"], [167, 3, 1, "", "write"]], "gammapy.irf.RadMax2D": [[168, 2, 1, "", "axes"], [168, 3, 1, "", "cumsum"], [168, 2, 1, "", "data"], [168, 2, 1, "", "default_interp_kwargs"], [168, 2, 1, "", "default_unit"], [168, 3, 1, "", "evaluate"], [168, 2, 1, "", "fov_alignment"], [168, 3, 1, "", "from_hdulist"], [168, 3, 1, "", "from_irf"], [168, 3, 1, "", "from_table"], [168, 2, 1, "", "has_offset_axis"], [168, 3, 1, "", "integral"], [168, 3, 1, "", "integrate_log_log"], [168, 3, 1, "", "interp_missing_data"], [168, 3, 1, "", "is_allclose"], [168, 2, 1, "", "is_fixed_rad_max"], [168, 2, 1, "", "is_pointlike"], [168, 3, 1, "", "normalize"], [168, 3, 1, "", "pad"], [168, 3, 1, "", "plot_rad_max_vs_energy"], [168, 2, 1, "", "quantity"], [168, 3, 1, "", "read"], [168, 2, 1, "", "required_axes"], [168, 3, 1, "", "slice_by_idx"], [168, 2, 1, "", "tag"], [168, 3, 1, "", "to_hdulist"], [168, 3, 1, "", "to_table"], [168, 3, 1, "", "to_table_hdu"], [168, 3, 1, "", "to_unit"], [168, 2, 1, "", "unit"], [168, 3, 1, "", "write"]], "gammapy.irf.RecoPSFMap": [[169, 3, 1, "", "containment"], [169, 3, 1, "", "containment_radius"], [169, 3, 1, "", "containment_radius_map"], [169, 3, 1, "", "copy"], [169, 3, 1, "", "cutout"], [169, 3, 1, "", "downsample"], [169, 2, 1, "", "energy_name"], [169, 3, 1, "", "from_gauss"], [169, 3, 1, "", "from_geom"], [169, 3, 1, "", "from_hdulist"], [169, 3, 1, "", "get_psf_kernel"], [169, 2, 1, "", "has_single_spatial_bin"], [169, 2, 1, "", "mask_safe_image"], [169, 3, 1, "", "normalize"], [169, 3, 1, "", "peek"], [169, 3, 1, "", "plot_containment_radius_vs_energy"], [169, 3, 1, "", "plot_psf_vs_rad"], [169, 2, 1, "", "psf_map"], [169, 3, 1, "", "read"], [169, 2, 1, "", "required_axes"], [169, 3, 1, "", "sample_coord"], [169, 3, 1, "", "slice_by_idx"], [169, 3, 1, "", "stack"], [169, 2, 1, "", "tag"], [169, 3, 1, "", "to_hdulist"], [169, 3, 1, "", "to_image"], [169, 3, 1, "", "to_region_nd_map"], [169, 3, 1, "", "write"]], "gammapy.makers": [[171, 1, 1, "", "AdaptiveRingBackgroundMaker"], [172, 1, 1, "", "DatasetsMaker"], [173, 1, 1, "", "FoVBackgroundMaker"], [174, 5, 1, "", "MAKER_REGISTRY"], [175, 1, 1, "", "Maker"], [176, 1, 1, "", "MapDatasetMaker"], [177, 1, 1, "", "PhaseBackgroundMaker"], [178, 1, 1, "", "ReflectedRegionsBackgroundMaker"], [179, 1, 1, "", "ReflectedRegionsFinder"], [180, 1, 1, "", "RegionsFinder"], [181, 1, 1, "", "RingBackgroundMaker"], [182, 1, 1, "", "SafeMaskMaker"], [183, 1, 1, "", "SpectrumDatasetMaker"], [184, 1, 1, "", "WobbleRegionsFinder"], [8, 0, 0, "-", "utils"]], "gammapy.makers.AdaptiveRingBackgroundMaker": [[171, 3, 1, "", "kernels"], [171, 3, 1, "", "make_cubes"], [171, 3, 1, "", "run"], [171, 2, 1, "", "tag"]], "gammapy.makers.DatasetsMaker": [[172, 3, 1, "", "callback"], [172, 3, 1, "", "error_callback"], [172, 3, 1, "", "make_dataset"], [172, 2, 1, "", "n_jobs"], [172, 2, 1, "", "offset_max"], [172, 2, 1, "", "parallel_backend"], [172, 3, 1, "", "run"], [172, 2, 1, "", "safe_mask_maker"], [172, 2, 1, "", "tag"]], "gammapy.makers.FoVBackgroundMaker": [[173, 2, 1, "", "available_methods"], [173, 3, 1, "", "make_background_fit"], [173, 3, 1, "", "make_background_scale"], [173, 3, 1, "", "make_default_fov_background_model"], [173, 3, 1, "", "make_exclusion_mask"], [173, 2, 1, "", "method"], [173, 3, 1, "", "run"], [173, 2, 1, "", "tag"]], "gammapy.makers.Maker": [[175, 3, 1, "", "run"], [175, 2, 1, "", "tag"]], "gammapy.makers.MapDatasetMaker": [[176, 2, 1, "", "available_selection"], [176, 3, 1, "", "make_background"], [176, 3, 1, "", "make_counts"], [176, 3, 1, "", "make_edisp"], [176, 3, 1, "", "make_edisp_kernel"], [176, 3, 1, "", "make_exposure"], [176, 3, 1, "", "make_exposure_irf"], [176, 3, 1, "", "make_meta_table"], [176, 3, 1, "", "make_psf"], [176, 3, 1, "", "run"], [176, 2, 1, "", "tag"]], "gammapy.makers.PhaseBackgroundMaker": [[177, 3, 1, "", "make_counts"], [177, 3, 1, "", "make_counts_off"], [177, 3, 1, "", "run"], [177, 2, 1, "", "tag"]], "gammapy.makers.ReflectedRegionsBackgroundMaker": [[178, 3, 1, "", "make_counts_off"], [178, 3, 1, "", "run"], [178, 2, 1, "", "tag"]], "gammapy.makers.ReflectedRegionsFinder": [[179, 3, 1, "", "run"]], "gammapy.makers.RegionsFinder": [[180, 3, 1, "", "run"]], "gammapy.makers.RingBackgroundMaker": [[181, 3, 1, "", "kernel"], [181, 3, 1, "", "make_maps_off"], [181, 3, 1, "", "run"], [181, 2, 1, "", "tag"]], "gammapy.makers.SafeMaskMaker": [[182, 2, 1, "", "available_methods"], [182, 3, 1, "", "make_mask_bkg_invalid"], [182, 3, 1, "", "make_mask_energy_aeff_default"], [182, 3, 1, "", "make_mask_energy_aeff_max"], [182, 3, 1, "", "make_mask_energy_bkg_peak"], [182, 3, 1, "", "make_mask_energy_edisp_bias"], [182, 3, 1, "", "make_mask_offset_max"], [182, 3, 1, "", "run"], [182, 2, 1, "", "tag"]], "gammapy.makers.SpectrumDatasetMaker": [[183, 2, 1, "", "available_selection"], [183, 3, 1, "", "make_background"], [183, 3, 1, "", "make_counts"], [183, 3, 1, "", "make_edisp"], [183, 3, 1, "", "make_edisp_kernel"], [183, 3, 1, "", "make_exposure"], [183, 3, 1, "", "make_exposure_irf"], [183, 3, 1, "", "make_meta_table"], [183, 3, 1, "", "make_psf"], [183, 3, 1, "", "run"], [183, 2, 1, "", "tag"]], "gammapy.makers.WobbleRegionsFinder": [[184, 3, 1, "", "run"]], "gammapy.makers.utils": [[185, 4, 1, "", "make_counts_rad_max"], [186, 4, 1, "", "make_edisp_kernel_map"], [187, 4, 1, "", "make_edisp_map"], [188, 4, 1, "", "make_effective_livetime_map"], [189, 4, 1, "", "make_map_background_irf"], [190, 4, 1, "", "make_map_exposure_true_energy"], [191, 4, 1, "", "make_observation_time_map"], [192, 4, 1, "", "make_psf_map"], [193, 4, 1, "", "make_theta_squared_table"]], "gammapy.maps": [[194, 1, 1, "", "Geom"], [195, 1, 1, "", "HpxGeom"], [196, 1, 1, "", "HpxMap"], [197, 1, 1, "", "HpxNDMap"], [198, 1, 1, "", "LabelMapAxis"], [199, 1, 1, "", "Map"], [200, 1, 1, "", "MapAxes"], [201, 1, 1, "", "MapAxis"], [202, 1, 1, "", "MapCoord"], [203, 1, 1, "", "Maps"], [204, 1, 1, "", "RegionGeom"], [205, 1, 1, "", "RegionNDMap"], [206, 1, 1, "", "TimeMapAxis"], [207, 1, 1, "", "WcsGeom"], [208, 1, 1, "", "WcsMap"], [209, 1, 1, "", "WcsNDMap"], [210, 4, 1, "", "containment_radius"], [211, 4, 1, "", "containment_region"]], "gammapy.maps.Geom": [[194, 2, 1, "", "as_energy_true"], [194, 2, 1, "", "center_coord"], [194, 2, 1, "", "center_pix"], [194, 2, 1, "", "center_skydir"], [194, 3, 1, "", "contains"], [194, 3, 1, "", "contains_pix"], [194, 3, 1, "", "coord_to_idx"], [194, 3, 1, "", "coord_to_pix"], [194, 3, 1, "", "copy"], [194, 3, 1, "", "create_mask"], [194, 3, 1, "", "crop"], [194, 3, 1, "", "data_nbytes"], [194, 2, 1, "", "data_shape"], [194, 3, 1, "", "downsample"], [194, 3, 1, "", "drop"], [194, 3, 1, "", "energy_mask"], [194, 3, 1, "", "from_hdulist"], [194, 3, 1, "", "get_coord"], [194, 3, 1, "", "get_idx"], [194, 2, 1, "", "has_energy_axis"], [194, 2, 1, "", "is_allsky"], [194, 2, 1, "", "is_flat"], [194, 2, 1, "", "is_image"], [194, 3, 1, "", "pad"], [194, 3, 1, "", "pix_to_coord"], [194, 3, 1, "", "pix_to_idx"], [194, 3, 1, "", "rename_axes"], [194, 3, 1, "", "replace_axis"], [194, 3, 1, "", "resample_axis"], [194, 3, 1, "", "slice_by_idx"], [194, 3, 1, "", "solid_angle"], [194, 3, 1, "", "squash"], [194, 3, 1, "", "to_bands_hdu"], [194, 3, 1, "", "to_cube"], [194, 3, 1, "", "to_image"], [194, 3, 1, "", "upsample"]], "gammapy.maps.HpxGeom": [[195, 2, 1, "", "as_energy_true"], [195, 2, 1, "", "axes"], [195, 2, 1, "", "axes_names"], [195, 2, 1, "", "center_coord"], [195, 2, 1, "", "center_pix"], [195, 2, 1, "", "center_skydir"], [195, 3, 1, "", "contains"], [195, 3, 1, "", "contains_pix"], [195, 3, 1, "", "coord_to_idx"], [195, 3, 1, "", "coord_to_pix"], [195, 3, 1, "", "copy"], [195, 3, 1, "", "create"], [195, 3, 1, "", "create_mask"], [195, 3, 1, "", "crop"], [195, 3, 1, "", "cutout"], [195, 3, 1, "", "data_nbytes"], [195, 2, 1, "", "data_shape"], [195, 2, 1, "", "data_shape_axes"], [195, 3, 1, "", "downsample"], [195, 3, 1, "", "drop"], [195, 3, 1, "", "energy_mask"], [195, 2, 1, "", "frame"], [195, 3, 1, "", "from_hdu"], [195, 3, 1, "", "from_hdulist"], [195, 3, 1, "", "from_header"], [195, 3, 1, "", "get_coord"], [195, 3, 1, "", "get_idx"], [195, 3, 1, "", "get_index_list"], [195, 3, 1, "", "global_to_local"], [195, 2, 1, "", "has_energy_axis"], [195, 3, 1, "", "interp_weights"], [195, 2, 1, "", "ipix"], [195, 3, 1, "", "is_aligned"], [195, 3, 1, "", "is_allclose"], [195, 2, 1, "", "is_allsky"], [195, 2, 1, "", "is_flat"], [195, 2, 1, "", "is_hpx"], [195, 2, 1, "", "is_image"], [195, 2, 1, "", "is_region"], [195, 2, 1, "", "is_regular"], [195, 3, 1, "", "local_to_global"], [195, 2, 1, "", "ndim"], [195, 2, 1, "", "nest"], [195, 2, 1, "", "npix"], [195, 2, 1, "", "npix_max"], [195, 2, 1, "", "nside"], [195, 2, 1, "", "order"], [195, 2, 1, "", "ordering"], [195, 3, 1, "", "pad"], [195, 3, 1, "", "pix_to_coord"], [195, 3, 1, "", "pix_to_idx"], [195, 2, 1, "", "pixel_scales"], [195, 2, 1, "", "projection"], [195, 2, 1, "", "region"], [195, 3, 1, "", "region_mask"], [195, 3, 1, "", "rename_axes"], [195, 3, 1, "", "replace_axis"], [195, 3, 1, "", "resample_axis"], [195, 3, 1, "", "separation"], [195, 2, 1, "", "shape_axes"], [195, 3, 1, "", "slice_by_idx"], [195, 3, 1, "", "solid_angle"], [195, 3, 1, "", "squash"], [195, 3, 1, "", "to_bands_hdu"], [195, 3, 1, "", "to_binsz"], [195, 3, 1, "", "to_cube"], [195, 3, 1, "", "to_header"], [195, 3, 1, "", "to_image"], [195, 3, 1, "", "to_nside"], [195, 3, 1, "", "to_swapped"], [195, 3, 1, "", "to_wcs_geom"], [195, 3, 1, "", "to_wcs_tiles"], [195, 3, 1, "", "upsample"], [195, 2, 1, "", "width"]], "gammapy.maps.HpxMap": [[196, 3, 1, "", "coadd"], [196, 3, 1, "", "copy"], [196, 3, 1, "", "create"], [196, 3, 1, "", "crop"], [196, 3, 1, "", "cumsum"], [196, 2, 1, "", "data"], [196, 3, 1, "", "dot"], [196, 3, 1, "", "downsample"], [196, 3, 1, "", "fill_by_coord"], [196, 3, 1, "", "fill_by_idx"], [196, 3, 1, "", "fill_by_pix"], [196, 3, 1, "", "fill_events"], [196, 3, 1, "", "from_geom"], [196, 3, 1, "", "from_hdulist"], [196, 3, 1, "", "from_stack"], [196, 2, 1, "", "geom"], [196, 3, 1, "", "get_by_coord"], [196, 3, 1, "", "get_by_idx"], [196, 3, 1, "", "get_by_pix"], [196, 3, 1, "", "get_image_by_coord"], [196, 3, 1, "", "get_image_by_idx"], [196, 3, 1, "", "get_image_by_pix"], [196, 3, 1, "", "get_spectrum"], [196, 3, 1, "", "integral"], [196, 3, 1, "", "interp_by_coord"], [196, 3, 1, "", "interp_by_pix"], [196, 3, 1, "", "interp_to_geom"], [196, 3, 1, "", "is_allclose"], [196, 2, 1, "", "is_mask"], [196, 3, 1, "", "iter_by_axis"], [196, 3, 1, "", "iter_by_image"], [196, 3, 1, "", "iter_by_image_data"], [196, 3, 1, "", "iter_by_image_index"], [196, 3, 1, "", "mask_nearest_position"], [196, 2, 1, "", "meta"], [196, 3, 1, "", "normalize"], [196, 3, 1, "", "pad"], [196, 3, 1, "", "plot_grid"], [196, 3, 1, "", "plot_interactive"], [196, 2, 1, "", "quantity"], [196, 3, 1, "", "read"], [196, 3, 1, "", "reduce"], [196, 3, 1, "", "reduce_over_axes"], [196, 3, 1, "", "rename_axes"], [196, 3, 1, "", "reorder_axes"], [196, 3, 1, "", "reproject_by_image"], [196, 3, 1, "", "reproject_to_geom"], [196, 3, 1, "", "resample"], [196, 3, 1, "", "resample_axis"], [196, 3, 1, "", "sample_coord"], [196, 3, 1, "", "set_by_coord"], [196, 3, 1, "", "set_by_idx"], [196, 3, 1, "", "set_by_pix"], [196, 3, 1, "", "slice_by_idx"], [196, 3, 1, "", "split_by_axis"], [196, 3, 1, "", "sum_over_axes"], [196, 2, 1, "", "tag"], [196, 3, 1, "", "to_cube"], [196, 3, 1, "", "to_hdu"], [196, 3, 1, "", "to_hdulist"], [196, 3, 1, "", "to_swapped"], [196, 3, 1, "", "to_unit"], [196, 3, 1, "", "to_wcs"], [196, 2, 1, "", "unit"], [196, 3, 1, "", "upsample"], [196, 3, 1, "", "write"]], "gammapy.maps.HpxNDMap": [[197, 3, 1, "", "coadd"], [197, 3, 1, "", "convolve"], [197, 3, 1, "", "convolve_full"], [197, 3, 1, "", "convolve_wcs"], [197, 3, 1, "", "copy"], [197, 3, 1, "", "create"], [197, 3, 1, "", "crop"], [197, 3, 1, "", "cumsum"], [197, 3, 1, "", "cutout"], [197, 2, 1, "", "data"], [197, 3, 1, "", "dot"], [197, 3, 1, "", "downsample"], [197, 3, 1, "", "fill_by_coord"], [197, 3, 1, "", "fill_by_idx"], [197, 3, 1, "", "fill_by_pix"], [197, 3, 1, "", "fill_events"], [197, 3, 1, "", "from_geom"], [197, 3, 1, "", "from_hdu"], [197, 3, 1, "", "from_hdulist"], [197, 3, 1, "", "from_stack"], [197, 3, 1, "", "from_wcs_tiles"], [197, 2, 1, "", "geom"], [197, 3, 1, "", "get_by_coord"], [197, 3, 1, "", "get_by_idx"], [197, 3, 1, "", "get_by_pix"], [197, 3, 1, "", "get_image_by_coord"], [197, 3, 1, "", "get_image_by_idx"], [197, 3, 1, "", "get_image_by_pix"], [197, 3, 1, "", "get_spectrum"], [197, 3, 1, "", "integral"], [197, 3, 1, "", "interp_by_coord"], [197, 3, 1, "", "interp_by_pix"], [197, 3, 1, "", "interp_to_geom"], [197, 3, 1, "", "is_allclose"], [197, 2, 1, "", "is_mask"], [197, 3, 1, "", "iter_by_axis"], [197, 3, 1, "", "iter_by_image"], [197, 3, 1, "", "iter_by_image_data"], [197, 3, 1, "", "iter_by_image_index"], [197, 3, 1, "", "mask_nearest_position"], [197, 2, 1, "", "meta"], [197, 3, 1, "", "normalize"], [197, 3, 1, "", "pad"], [197, 3, 1, "", "plot"], [197, 3, 1, "", "plot_grid"], [197, 3, 1, "", "plot_interactive"], [197, 3, 1, "", "plot_mask"], [197, 2, 1, "", "quantity"], [197, 3, 1, "", "read"], [197, 3, 1, "", "reduce"], [197, 3, 1, "", "reduce_over_axes"], [197, 3, 1, "", "rename_axes"], [197, 3, 1, "", "reorder_axes"], [197, 3, 1, "", "reproject_by_image"], [197, 3, 1, "", "reproject_to_geom"], [197, 3, 1, "", "resample"], [197, 3, 1, "", "resample_axis"], [197, 3, 1, "", "sample_coord"], [197, 3, 1, "", "set_by_coord"], [197, 3, 1, "", "set_by_idx"], [197, 3, 1, "", "set_by_pix"], [197, 3, 1, "", "slice_by_idx"], [197, 3, 1, "", "smooth"], [197, 3, 1, "", "split_by_axis"], [197, 3, 1, "", "stack"], [197, 3, 1, "", "sum_over_axes"], [197, 2, 1, "", "tag"], [197, 3, 1, "", "to_cube"], [197, 3, 1, "", "to_hdu"], [197, 3, 1, "", "to_hdulist"], [197, 3, 1, "", "to_nside"], [197, 3, 1, "", "to_region_nd_map"], [197, 3, 1, "", "to_swapped"], [197, 3, 1, "", "to_unit"], [197, 3, 1, "", "to_wcs"], [197, 3, 1, "", "to_wcs_tiles"], [197, 2, 1, "", "unit"], [197, 3, 1, "", "upsample"], [197, 3, 1, "", "write"]], "gammapy.maps.LabelMapAxis": [[198, 2, 1, "", "as_plot_center"], [198, 2, 1, "", "as_plot_edges"], [198, 2, 1, "", "as_plot_labels"], [198, 2, 1, "", "as_plot_xerr"], [198, 3, 1, "", "assert_name"], [198, 2, 1, "", "bin_width"], [198, 2, 1, "", "center"], [198, 3, 1, "", "concatenate"], [198, 3, 1, "", "coord_to_idx"], [198, 3, 1, "", "coord_to_pix"], [198, 3, 1, "", "copy"], [198, 3, 1, "", "downsample"], [198, 2, 1, "", "edges"], [198, 2, 1, "", "edges_max"], [198, 2, 1, "", "edges_min"], [198, 3, 1, "", "format_plot_xaxis"], [198, 3, 1, "", "from_stack"], [198, 3, 1, "", "from_table"], [198, 3, 1, "", "is_allclose"], [198, 2, 1, "", "name"], [198, 2, 1, "", "nbin"], [198, 2, 1, "", "node_type"], [198, 3, 1, "", "pad"], [198, 3, 1, "", "pix_to_coord"], [198, 3, 1, "", "pix_to_idx"], [198, 3, 1, "", "resample"], [198, 3, 1, "", "slice"], [198, 3, 1, "", "squash"], [198, 3, 1, "", "to_header"], [198, 2, 1, "", "unit"], [198, 3, 1, "", "upsample"]], "gammapy.maps.Map": [[199, 3, 1, "", "coadd"], [199, 3, 1, "", "copy"], [199, 3, 1, "", "create"], [199, 3, 1, "", "crop"], [199, 3, 1, "", "cumsum"], [199, 2, 1, "", "data"], [199, 3, 1, "", "dot"], [199, 3, 1, "", "downsample"], [199, 3, 1, "", "fill_by_coord"], [199, 3, 1, "", "fill_by_idx"], [199, 3, 1, "", "fill_by_pix"], [199, 3, 1, "", "fill_events"], [199, 3, 1, "", "from_geom"], [199, 3, 1, "", "from_hdulist"], [199, 3, 1, "", "from_stack"], [199, 2, 1, "", "geom"], [199, 3, 1, "", "get_by_coord"], [199, 3, 1, "", "get_by_idx"], [199, 3, 1, "", "get_by_pix"], [199, 3, 1, "", "get_image_by_coord"], [199, 3, 1, "", "get_image_by_idx"], [199, 3, 1, "", "get_image_by_pix"], [199, 3, 1, "", "get_spectrum"], [199, 3, 1, "", "integral"], [199, 3, 1, "", "interp_by_coord"], [199, 3, 1, "", "interp_by_pix"], [199, 3, 1, "", "interp_to_geom"], [199, 3, 1, "", "is_allclose"], [199, 2, 1, "", "is_mask"], [199, 3, 1, "", "iter_by_axis"], [199, 3, 1, "", "iter_by_image"], [199, 3, 1, "", "iter_by_image_data"], [199, 3, 1, "", "iter_by_image_index"], [199, 3, 1, "", "mask_nearest_position"], [199, 2, 1, "", "meta"], [199, 3, 1, "", "normalize"], [199, 3, 1, "", "pad"], [199, 3, 1, "", "plot_grid"], [199, 3, 1, "", "plot_interactive"], [199, 2, 1, "", "quantity"], [199, 3, 1, "", "read"], [199, 3, 1, "", "reduce"], [199, 3, 1, "", "reduce_over_axes"], [199, 3, 1, "", "rename_axes"], [199, 3, 1, "", "reorder_axes"], [199, 3, 1, "", "reproject_by_image"], [199, 3, 1, "", "reproject_to_geom"], [199, 3, 1, "", "resample"], [199, 3, 1, "", "resample_axis"], [199, 3, 1, "", "sample_coord"], [199, 3, 1, "", "set_by_coord"], [199, 3, 1, "", "set_by_idx"], [199, 3, 1, "", "set_by_pix"], [199, 3, 1, "", "slice_by_idx"], [199, 3, 1, "", "split_by_axis"], [199, 3, 1, "", "sum_over_axes"], [199, 2, 1, "", "tag"], [199, 3, 1, "", "to_cube"], [199, 3, 1, "", "to_unit"], [199, 2, 1, "", "unit"], [199, 3, 1, "", "upsample"], [199, 3, 1, "", "write"]], "gammapy.maps.MapAxes": [[200, 3, 1, "", "assert_names"], [200, 3, 1, "", "bin_volume"], [200, 2, 1, "", "center_coord"], [200, 3, 1, "", "coord_to_idx"], [200, 3, 1, "", "coord_to_pix"], [200, 3, 1, "", "copy"], [200, 3, 1, "", "count"], [200, 3, 1, "", "downsample"], [200, 3, 1, "", "drop"], [200, 3, 1, "", "from_default"], [200, 3, 1, "", "from_table"], [200, 3, 1, "", "from_table_hdu"], [200, 3, 1, "", "get_coord"], [200, 3, 1, "", "index"], [200, 3, 1, "", "index_data"], [200, 3, 1, "", "is_allclose"], [200, 2, 1, "", "is_flat"], [200, 2, 1, "", "is_unidimensional"], [200, 2, 1, "", "iter_with_reshape"], [200, 2, 1, "", "names"], [200, 3, 1, "", "pad"], [200, 3, 1, "", "pix_to_coord"], [200, 3, 1, "", "pix_to_idx"], [200, 2, 1, "", "primary_axis"], [200, 3, 1, "", "rename_axes"], [200, 3, 1, "", "replace"], [200, 3, 1, "", "resample"], [200, 2, 1, "", "reverse"], [200, 2, 1, "", "shape"], [200, 3, 1, "", "slice_by_idx"], [200, 3, 1, "", "squash"], [200, 3, 1, "", "to_header"], [200, 3, 1, "", "to_table"], [200, 3, 1, "", "to_table_hdu"], [200, 3, 1, "", "upsample"]], "gammapy.maps.MapAxis": [[201, 2, 1, "", "as_plot_center"], [201, 2, 1, "", "as_plot_edges"], [201, 2, 1, "", "as_plot_labels"], [201, 2, 1, "", "as_plot_scale"], [201, 2, 1, "", "as_plot_xerr"], [201, 3, 1, "", "assert_name"], [201, 2, 1, "", "bin_width"], [201, 2, 1, "", "bounds"], [201, 2, 1, "", "center"], [201, 3, 1, "", "concatenate"], [201, 3, 1, "", "coord_to_idx"], [201, 3, 1, "", "coord_to_pix"], [201, 3, 1, "", "copy"], [201, 3, 1, "", "downsample"], [201, 2, 1, "", "edges"], [201, 2, 1, "", "edges_max"], [201, 2, 1, "", "edges_min"], [201, 3, 1, "", "format_plot_xaxis"], [201, 3, 1, "", "format_plot_yaxis"], [201, 3, 1, "", "from_bounds"], [201, 3, 1, "", "from_edges"], [201, 3, 1, "", "from_energy_bounds"], [201, 3, 1, "", "from_energy_edges"], [201, 3, 1, "", "from_nodes"], [201, 3, 1, "", "from_stack"], [201, 3, 1, "", "from_table"], [201, 3, 1, "", "from_table_hdu"], [201, 3, 1, "", "group_table"], [201, 2, 1, "", "interp"], [201, 3, 1, "", "is_aligned"], [201, 3, 1, "", "is_allclose"], [201, 2, 1, "", "is_energy_axis"], [201, 2, 1, "", "iter_by_edges"], [201, 2, 1, "", "name"], [201, 2, 1, "", "nbin"], [201, 2, 1, "", "nbin_per_decade"], [201, 2, 1, "", "node_type"], [201, 3, 1, "", "pad"], [201, 3, 1, "", "pix_to_coord"], [201, 3, 1, "", "pix_to_idx"], [201, 3, 1, "", "rename"], [201, 3, 1, "", "round"], [201, 3, 1, "", "slice"], [201, 3, 1, "", "squash"], [201, 3, 1, "", "to_header"], [201, 3, 1, "", "to_node_type"], [201, 3, 1, "", "to_table"], [201, 3, 1, "", "to_table_hdu"], [201, 2, 1, "", "unit"], [201, 3, 1, "", "upsample"], [201, 2, 1, "", "use_center_as_plot_labels"], [201, 3, 1, "", "wrap_coord"]], "gammapy.maps.MapCoord": [[202, 3, 1, "", "apply_mask"], [202, 2, 1, "", "axis_names"], [202, 2, 1, "", "broadcasted"], [202, 3, 1, "", "copy"], [202, 3, 1, "", "create"], [202, 2, 1, "", "flat"], [202, 2, 1, "", "frame"], [202, 2, 1, "", "lat"], [202, 2, 1, "", "lon"], [202, 2, 1, "", "match_by_name"], [202, 2, 1, "", "ndim"], [202, 2, 1, "", "phi"], [202, 2, 1, "", "shape"], [202, 2, 1, "", "size"], [202, 2, 1, "", "skycoord"], [202, 2, 1, "", "theta"], [202, 3, 1, "", "to_frame"]], "gammapy.maps.Maps": [[203, 3, 1, "", "clear"], [203, 3, 1, "", "from_geom"], [203, 3, 1, "", "from_hdulist"], [203, 2, 1, "", "geom"], [203, 3, 1, "", "get"], [203, 3, 1, "", "items"], [203, 3, 1, "", "keys"], [203, 3, 1, "", "pop"], [203, 3, 1, "", "popitem"], [203, 3, 1, "", "read"], [203, 3, 1, "", "setdefault"], [203, 3, 1, "", "to_hdulist"], [203, 3, 1, "", "update"], [203, 3, 1, "", "values"], [203, 3, 1, "", "write"]], "gammapy.maps.RegionGeom": [[204, 2, 1, "", "as_energy_true"], [204, 2, 1, "", "axes"], [204, 2, 1, "", "axes_names"], [204, 3, 1, "", "bin_volume"], [204, 2, 1, "", "binsz_wcs"], [204, 2, 1, "", "center_coord"], [204, 2, 1, "", "center_pix"], [204, 2, 1, "", "center_skydir"], [204, 3, 1, "", "contains"], [204, 3, 1, "", "contains_pix"], [204, 3, 1, "", "contains_wcs_pix"], [204, 3, 1, "", "coord_to_idx"], [204, 3, 1, "", "coord_to_pix"], [204, 3, 1, "", "copy"], [204, 3, 1, "", "create"], [204, 3, 1, "", "create_mask"], [204, 3, 1, "", "crop"], [204, 3, 1, "", "data_nbytes"], [204, 2, 1, "", "data_shape"], [204, 2, 1, "", "data_shape_axes"], [204, 3, 1, "", "downsample"], [204, 3, 1, "", "drop"], [204, 3, 1, "", "energy_mask"], [204, 2, 1, "", "frame"], [204, 3, 1, "", "from_hdulist"], [204, 3, 1, "", "from_regions"], [204, 3, 1, "", "get_coord"], [204, 3, 1, "", "get_idx"], [204, 3, 1, "", "get_wcs_coord_and_weights"], [204, 2, 1, "", "has_energy_axis"], [204, 2, 1, "", "is_all_point_sky_regions"], [204, 3, 1, "", "is_allclose"], [204, 2, 1, "", "is_allsky"], [204, 2, 1, "", "is_flat"], [204, 2, 1, "", "is_hpx"], [204, 2, 1, "", "is_image"], [204, 2, 1, "", "is_region"], [204, 2, 1, "", "is_regular"], [204, 2, 1, "", "npix"], [204, 3, 1, "", "pad"], [204, 3, 1, "", "pix_to_coord"], [204, 3, 1, "", "pix_to_idx"], [204, 3, 1, "", "plot_region"], [204, 2, 1, "", "projection"], [204, 2, 1, "", "region"], [204, 3, 1, "", "rename_axes"], [204, 3, 1, "", "replace_axis"], [204, 3, 1, "", "resample_axis"], [204, 3, 1, "", "separation"], [204, 3, 1, "", "slice_by_idx"], [204, 3, 1, "", "solid_angle"], [204, 3, 1, "", "squash"], [204, 3, 1, "", "to_bands_hdu"], [204, 3, 1, "", "to_binsz"], [204, 3, 1, "", "to_binsz_wcs"], [204, 3, 1, "", "to_cube"], [204, 3, 1, "", "to_hdulist"], [204, 3, 1, "", "to_image"], [204, 3, 1, "", "to_wcs_geom"], [204, 3, 1, "", "union"], [204, 3, 1, "", "upsample"], [204, 2, 1, "", "wcs"], [204, 2, 1, "", "width"]], "gammapy.maps.RegionNDMap": [[205, 3, 1, "", "coadd"], [205, 3, 1, "", "copy"], [205, 3, 1, "", "create"], [205, 3, 1, "", "crop"], [205, 3, 1, "", "cumsum"], [205, 3, 1, "", "cutout"], [205, 2, 1, "", "data"], [205, 3, 1, "", "dot"], [205, 3, 1, "", "downsample"], [205, 3, 1, "", "fill_by_coord"], [205, 3, 1, "", "fill_by_idx"], [205, 3, 1, "", "fill_by_pix"], [205, 3, 1, "", "fill_events"], [205, 3, 1, "", "from_geom"], [205, 3, 1, "", "from_hdulist"], [205, 3, 1, "", "from_stack"], [205, 3, 1, "", "from_table"], [205, 2, 1, "", "geom"], [205, 3, 1, "", "get_by_coord"], [205, 3, 1, "", "get_by_idx"], [205, 3, 1, "", "get_by_pix"], [205, 3, 1, "", "get_image_by_coord"], [205, 3, 1, "", "get_image_by_idx"], [205, 3, 1, "", "get_image_by_pix"], [205, 3, 1, "", "get_spectrum"], [205, 3, 1, "", "integral"], [205, 3, 1, "", "interp_by_coord"], [205, 3, 1, "", "interp_by_pix"], [205, 3, 1, "", "interp_to_geom"], [205, 3, 1, "", "is_allclose"], [205, 2, 1, "", "is_mask"], [205, 3, 1, "", "iter_by_axis"], [205, 3, 1, "", "iter_by_axis_data"], [205, 3, 1, "", "iter_by_image"], [205, 3, 1, "", "iter_by_image_data"], [205, 3, 1, "", "iter_by_image_index"], [205, 3, 1, "", "mask_nearest_position"], [205, 2, 1, "", "meta"], [205, 3, 1, "", "normalize"], [205, 3, 1, "", "pad"], [205, 3, 1, "", "plot"], [205, 3, 1, "", "plot_grid"], [205, 3, 1, "", "plot_hist"], [205, 3, 1, "", "plot_interactive"], [205, 3, 1, "", "plot_mask"], [205, 3, 1, "", "plot_region"], [205, 2, 1, "", "quantity"], [205, 3, 1, "", "read"], [205, 3, 1, "", "reduce"], [205, 3, 1, "", "reduce_over_axes"], [205, 3, 1, "", "rename_axes"], [205, 3, 1, "", "reorder_axes"], [205, 3, 1, "", "reproject_by_image"], [205, 3, 1, "", "reproject_to_geom"], [205, 3, 1, "", "resample"], [205, 3, 1, "", "resample_axis"], [205, 3, 1, "", "sample_coord"], [205, 3, 1, "", "set_by_coord"], [205, 3, 1, "", "set_by_idx"], [205, 3, 1, "", "set_by_pix"], [205, 3, 1, "", "slice_by_idx"], [205, 3, 1, "", "split_by_axis"], [205, 3, 1, "", "stack"], [205, 3, 1, "", "sum_over_axes"], [205, 2, 1, "", "tag"], [205, 3, 1, "", "to_cube"], [205, 3, 1, "", "to_hdulist"], [205, 3, 1, "", "to_region_nd_map"], [205, 3, 1, "", "to_table"], [205, 3, 1, "", "to_unit"], [205, 2, 1, "", "unit"], [205, 3, 1, "", "upsample"], [205, 3, 1, "", "write"]], "gammapy.maps.TimeMapAxis": [[206, 2, 1, "", "as_plot_center"], [206, 2, 1, "", "as_plot_edges"], [206, 2, 1, "", "as_plot_labels"], [206, 2, 1, "", "as_plot_xerr"], [206, 3, 1, "", "assert_name"], [206, 2, 1, "", "bin_width"], [206, 2, 1, "", "bounds"], [206, 2, 1, "", "center"], [206, 3, 1, "", "coord_to_idx"], [206, 3, 1, "", "coord_to_pix"], [206, 3, 1, "", "copy"], [206, 3, 1, "", "downsample"], [206, 2, 1, "", "edges"], [206, 2, 1, "", "edges_max"], [206, 2, 1, "", "edges_min"], [206, 3, 1, "", "format_plot_xaxis"], [206, 3, 1, "", "from_gti"], [206, 3, 1, "", "from_gti_bounds"], [206, 3, 1, "", "from_table"], [206, 3, 1, "", "from_time_bounds"], [206, 3, 1, "", "from_time_edges"], [206, 3, 1, "", "group_table"], [206, 2, 1, "", "interp"], [206, 3, 1, "", "is_aligned"], [206, 3, 1, "", "is_allclose"], [206, 2, 1, "", "is_contiguous"], [206, 2, 1, "", "iter_by_edges"], [206, 2, 1, "", "name"], [206, 2, 1, "", "nbin"], [206, 2, 1, "", "node_type"], [206, 3, 1, "", "pix_to_coord"], [206, 3, 1, "", "pix_to_idx"], [206, 2, 1, "", "reference_time"], [206, 3, 1, "", "slice"], [206, 3, 1, "", "squash"], [206, 2, 1, "", "time_bounds"], [206, 2, 1, "", "time_delta"], [206, 2, 1, "", "time_edges"], [206, 2, 1, "", "time_format"], [206, 2, 1, "", "time_max"], [206, 2, 1, "", "time_mid"], [206, 2, 1, "", "time_min"], [206, 3, 1, "", "to_contiguous"], [206, 3, 1, "", "to_gti"], [206, 3, 1, "", "to_header"], [206, 3, 1, "", "to_table"], [206, 2, 1, "", "unit"], [206, 3, 1, "", "upsample"]], "gammapy.maps.WcsGeom": [[207, 2, 1, "", "as_energy_true"], [207, 2, 1, "", "axes"], [207, 2, 1, "", "axes_names"], [207, 3, 1, "", "bin_volume"], [207, 3, 1, "", "binary_structure"], [207, 3, 1, "", "boundary_mask"], [207, 2, 1, "", "center_coord"], [207, 2, 1, "", "center_pix"], [207, 2, 1, "", "center_skydir"], [207, 3, 1, "", "contains"], [207, 3, 1, "", "contains_pix"], [207, 3, 1, "", "coord_to_idx"], [207, 3, 1, "", "coord_to_pix"], [207, 3, 1, "", "copy"], [207, 3, 1, "", "create"], [207, 3, 1, "", "create_mask"], [207, 3, 1, "", "crop"], [207, 3, 1, "", "cutout"], [207, 3, 1, "", "cutout_slices"], [207, 3, 1, "", "data_nbytes"], [207, 2, 1, "", "data_shape"], [207, 2, 1, "", "data_shape_axes"], [207, 2, 1, "", "data_shape_image"], [207, 3, 1, "", "downsample"], [207, 3, 1, "", "drop"], [207, 3, 1, "", "energy_mask"], [207, 2, 1, "", "footprint"], [207, 2, 1, "", "footprint_rectangle_sky_region"], [207, 2, 1, "", "frame"], [207, 3, 1, "", "from_aligned"], [207, 3, 1, "", "from_hdulist"], [207, 3, 1, "", "from_header"], [207, 3, 1, "", "get_coord"], [207, 3, 1, "", "get_idx"], [207, 3, 1, "", "get_pix"], [207, 2, 1, "", "has_energy_axis"], [207, 3, 1, "", "is_aligned"], [207, 3, 1, "", "is_allclose"], [207, 2, 1, "", "is_allsky"], [207, 2, 1, "", "is_flat"], [207, 2, 1, "", "is_hpx"], [207, 2, 1, "", "is_image"], [207, 2, 1, "", "is_region"], [207, 2, 1, "", "is_regular"], [207, 2, 1, "", "ndim"], [207, 2, 1, "", "npix"], [207, 3, 1, "", "pad"], [207, 3, 1, "", "pix_to_coord"], [207, 3, 1, "", "pix_to_idx"], [207, 2, 1, "", "pixel_area"], [207, 2, 1, "", "pixel_scales"], [207, 2, 1, "", "projection"], [207, 3, 1, "", "region_mask"], [207, 3, 1, "", "region_weights"], [207, 3, 1, "", "rename_axes"], [207, 3, 1, "", "replace_axis"], [207, 3, 1, "", "resample_axis"], [207, 3, 1, "", "separation"], [207, 2, 1, "", "shape_axes"], [207, 3, 1, "", "slice_by_idx"], [207, 3, 1, "", "solid_angle"], [207, 3, 1, "", "squash"], [207, 3, 1, "", "to_bands_hdu"], [207, 3, 1, "", "to_binsz"], [207, 3, 1, "", "to_cube"], [207, 3, 1, "", "to_even_npix"], [207, 3, 1, "", "to_header"], [207, 3, 1, "", "to_image"], [207, 3, 1, "", "to_odd_npix"], [207, 3, 1, "", "upsample"], [207, 2, 1, "", "wcs"], [207, 2, 1, "", "width"]], "gammapy.maps.WcsMap": [[208, 3, 1, "", "coadd"], [208, 3, 1, "", "copy"], [208, 3, 1, "", "create"], [208, 3, 1, "", "crop"], [208, 3, 1, "", "cumsum"], [208, 2, 1, "", "data"], [208, 3, 1, "", "dot"], [208, 3, 1, "", "downsample"], [208, 3, 1, "", "fill_by_coord"], [208, 3, 1, "", "fill_by_idx"], [208, 3, 1, "", "fill_by_pix"], [208, 3, 1, "", "fill_events"], [208, 3, 1, "", "from_geom"], [208, 3, 1, "", "from_hdulist"], [208, 3, 1, "", "from_stack"], [208, 2, 1, "", "geom"], [208, 3, 1, "", "get_by_coord"], [208, 3, 1, "", "get_by_idx"], [208, 3, 1, "", "get_by_pix"], [208, 3, 1, "", "get_image_by_coord"], [208, 3, 1, "", "get_image_by_idx"], [208, 3, 1, "", "get_image_by_pix"], [208, 3, 1, "", "get_spectrum"], [208, 3, 1, "", "integral"], [208, 3, 1, "", "interp_by_coord"], [208, 3, 1, "", "interp_by_pix"], [208, 3, 1, "", "interp_to_geom"], [208, 3, 1, "", "is_allclose"], [208, 2, 1, "", "is_mask"], [208, 3, 1, "", "iter_by_axis"], [208, 3, 1, "", "iter_by_image"], [208, 3, 1, "", "iter_by_image_data"], [208, 3, 1, "", "iter_by_image_index"], [208, 3, 1, "", "mask_nearest_position"], [208, 2, 1, "", "meta"], [208, 3, 1, "", "normalize"], [208, 3, 1, "", "pad"], [208, 3, 1, "", "plot_grid"], [208, 3, 1, "", "plot_interactive"], [208, 2, 1, "", "quantity"], [208, 3, 1, "", "read"], [208, 3, 1, "", "reduce"], [208, 3, 1, "", "reduce_over_axes"], [208, 3, 1, "", "rename_axes"], [208, 3, 1, "", "reorder_axes"], [208, 3, 1, "", "reproject_by_image"], [208, 3, 1, "", "reproject_to_geom"], [208, 3, 1, "", "resample"], [208, 3, 1, "", "resample_axis"], [208, 3, 1, "", "sample_coord"], [208, 3, 1, "", "set_by_coord"], [208, 3, 1, "", "set_by_idx"], [208, 3, 1, "", "set_by_pix"], [208, 3, 1, "", "slice_by_idx"], [208, 3, 1, "", "split_by_axis"], [208, 3, 1, "", "sum_over_axes"], [208, 2, 1, "", "tag"], [208, 3, 1, "", "to_cube"], [208, 3, 1, "", "to_hdu"], [208, 3, 1, "", "to_hdulist"], [208, 3, 1, "", "to_unit"], [208, 2, 1, "", "unit"], [208, 3, 1, "", "upsample"], [208, 3, 1, "", "write"]], "gammapy.maps.WcsNDMap": [[209, 3, 1, "", "binary_dilate"], [209, 3, 1, "", "binary_erode"], [209, 3, 1, "", "coadd"], [209, 3, 1, "", "convolve"], [209, 3, 1, "", "copy"], [209, 3, 1, "", "create"], [209, 3, 1, "", "crop"], [209, 3, 1, "", "cumsum"], [209, 3, 1, "", "cutout"], [209, 3, 1, "", "cutout_and_mask_region"], [209, 2, 1, "", "data"], [209, 3, 1, "", "dot"], [209, 3, 1, "", "downsample"], [209, 3, 1, "", "fill_by_coord"], [209, 3, 1, "", "fill_by_idx"], [209, 3, 1, "", "fill_by_pix"], [209, 3, 1, "", "fill_events"], [209, 3, 1, "", "from_geom"], [209, 3, 1, "", "from_hdu"], [209, 3, 1, "", "from_hdulist"], [209, 3, 1, "", "from_stack"], [209, 2, 1, "", "geom"], [209, 3, 1, "", "get_by_coord"], [209, 3, 1, "", "get_by_idx"], [209, 3, 1, "", "get_by_pix"], [209, 3, 1, "", "get_image_by_coord"], [209, 3, 1, "", "get_image_by_idx"], [209, 3, 1, "", "get_image_by_pix"], [209, 3, 1, "", "get_spectrum"], [209, 3, 1, "", "integral"], [209, 3, 1, "", "interp_by_coord"], [209, 3, 1, "", "interp_by_pix"], [209, 3, 1, "", "interp_to_geom"], [209, 3, 1, "", "is_allclose"], [209, 2, 1, "", "is_mask"], [209, 3, 1, "", "iter_by_axis"], [209, 3, 1, "", "iter_by_image"], [209, 3, 1, "", "iter_by_image_data"], [209, 3, 1, "", "iter_by_image_index"], [209, 3, 1, "", "mask_contains_region"], [209, 3, 1, "", "mask_nearest_position"], [209, 2, 1, "", "meta"], [209, 3, 1, "", "normalize"], [209, 3, 1, "", "pad"], [209, 3, 1, "", "plot"], [209, 3, 1, "", "plot_grid"], [209, 3, 1, "", "plot_interactive"], [209, 3, 1, "", "plot_mask"], [209, 2, 1, "", "quantity"], [209, 3, 1, "", "read"], [209, 3, 1, "", "reduce"], [209, 3, 1, "", "reduce_over_axes"], [209, 3, 1, "", "rename_axes"], [209, 3, 1, "", "reorder_axes"], [209, 3, 1, "", "reproject_by_image"], [209, 3, 1, "", "reproject_to_geom"], [209, 3, 1, "", "resample"], [209, 3, 1, "", "resample_axis"], [209, 3, 1, "", "sample_coord"], [209, 3, 1, "", "set_by_coord"], [209, 3, 1, "", "set_by_idx"], [209, 3, 1, "", "set_by_pix"], [209, 3, 1, "", "slice_by_idx"], [209, 3, 1, "", "smooth"], [209, 3, 1, "", "split_by_axis"], [209, 3, 1, "", "stack"], [209, 3, 1, "", "sum_over_axes"], [209, 2, 1, "", "tag"], [209, 3, 1, "", "to_cube"], [209, 3, 1, "", "to_hdu"], [209, 3, 1, "", "to_hdulist"], [209, 3, 1, "", "to_region_nd_map"], [209, 3, 1, "", "to_region_nd_map_histogram"], [209, 3, 1, "", "to_unit"], [209, 2, 1, "", "unit"], [209, 3, 1, "", "upsample"], [209, 3, 1, "", "write"]], "gammapy.modeling": [[212, 1, 1, "", "Covariance"], [213, 1, 1, "", "CovarianceResult"], [214, 1, 1, "", "Fit"], [215, 1, 1, "", "FitResult"], [216, 1, 1, "", "OptimizeResult"], [217, 1, 1, "", "Parameter"], [218, 1, 1, "", "Parameters"], [219, 1, 1, "", "PriorParameter"], [220, 1, 1, "", "PriorParameters"], [10, 0, 0, "-", "models"], [290, 4, 1, "", "select_nested_models"], [291, 4, 1, "", "stat_profile_ul_scipy"]], "gammapy.modeling.Covariance": [[212, 2, 1, "", "correlation"], [212, 2, 1, "", "data"], [212, 3, 1, "", "from_factor_matrix"], [212, 3, 1, "", "from_stack"], [212, 3, 1, "", "get_subcovariance"], [212, 3, 1, "", "plot_correlation"], [212, 2, 1, "", "scipy_mvn"], [212, 3, 1, "", "set_subcovariance"], [212, 2, 1, "", "shape"]], "gammapy.modeling.CovarianceResult": [[213, 2, 1, "", "backend"], [213, 2, 1, "", "matrix"], [213, 2, 1, "", "message"], [213, 2, 1, "", "method"], [213, 2, 1, "", "success"], [213, 3, 1, "", "to_dict"]], "gammapy.modeling.Fit": [[214, 3, 1, "", "confidence"], [214, 3, 1, "", "covariance"], [214, 3, 1, "", "optimize"], [214, 3, 1, "", "run"], [214, 3, 1, "", "stat_contour"], [214, 3, 1, "", "stat_profile"], [214, 3, 1, "", "stat_surface"]], "gammapy.modeling.FitResult": [[215, 2, 1, "", "backend"], [215, 2, 1, "", "covariance_result"], [215, 2, 1, "", "message"], [215, 2, 1, "", "method"], [215, 2, 1, "", "minuit"], [215, 2, 1, "", "models"], [215, 2, 1, "", "nfev"], [215, 2, 1, "", "optimize_result"], [215, 2, 1, "", "parameters"], [215, 2, 1, "", "success"], [215, 2, 1, "", "total_stat"], [215, 2, 1, "", "trace"], [215, 3, 1, "", "write"]], "gammapy.modeling.OptimizeResult": [[216, 2, 1, "", "backend"], [216, 2, 1, "", "message"], [216, 2, 1, "", "method"], [216, 2, 1, "", "minuit"], [216, 2, 1, "", "models"], [216, 2, 1, "", "nfev"], [216, 2, 1, "", "parameters"], [216, 2, 1, "", "success"], [216, 3, 1, "", "to_dict"], [216, 2, 1, "", "total_stat"], [216, 2, 1, "", "trace"]], "gammapy.modeling.Parameter": [[217, 3, 1, "", "autoscale"], [217, 3, 1, "", "check_limits"], [217, 2, 1, "", "conf_max"], [217, 2, 1, "", "conf_min"], [217, 3, 1, "", "copy"], [217, 2, 1, "", "error"], [217, 2, 1, "", "factor"], [217, 2, 1, "", "factor_max"], [217, 2, 1, "", "factor_min"], [217, 2, 1, "", "frozen"], [217, 2, 1, "", "max"], [217, 2, 1, "", "min"], [217, 2, 1, "", "name"], [217, 2, 1, "", "prior"], [217, 3, 1, "", "prior_stat_sum"], [217, 2, 1, "", "quantity"], [217, 2, 1, "", "scale"], [217, 2, 1, "", "scale_method"], [217, 2, 1, "", "scan_max"], [217, 2, 1, "", "scan_min"], [217, 2, 1, "", "scan_n_sigma"], [217, 2, 1, "", "scan_values"], [217, 3, 1, "", "set_lim"], [217, 3, 1, "", "to_dict"], [217, 2, 1, "", "type"], [217, 2, 1, "", "unit"], [217, 3, 1, "", "update_from_dict"], [217, 2, 1, "", "value"]], "gammapy.modeling.Parameters": [[218, 3, 1, "", "autoscale"], [218, 3, 1, "", "check_limits"], [218, 3, 1, "", "copy"], [218, 3, 1, "", "count"], [218, 2, 1, "", "free_parameters"], [218, 3, 1, "", "freeze_all"], [218, 3, 1, "", "from_dict"], [218, 3, 1, "", "from_stack"], [218, 3, 1, "", "index"], [218, 2, 1, "", "max"], [218, 2, 1, "", "min"], [218, 2, 1, "", "names"], [218, 2, 1, "", "prior"], [218, 3, 1, "", "prior_stat_sum"], [218, 3, 1, "", "restore_status"], [218, 3, 1, "", "select"], [218, 3, 1, "", "set_parameter_factors"], [218, 3, 1, "", "to_dict"], [218, 3, 1, "", "to_table"], [218, 2, 1, "", "types"], [218, 3, 1, "", "unfreeze_all"], [218, 2, 1, "", "unique_parameters"], [218, 2, 1, "", "value"]], "gammapy.modeling.PriorParameter": [[219, 3, 1, "", "autoscale"], [219, 3, 1, "", "check_limits"], [219, 2, 1, "", "conf_max"], [219, 2, 1, "", "conf_min"], [219, 3, 1, "", "copy"], [219, 2, 1, "", "error"], [219, 2, 1, "", "factor"], [219, 2, 1, "", "factor_max"], [219, 2, 1, "", "factor_min"], [219, 2, 1, "", "frozen"], [219, 2, 1, "", "max"], [219, 2, 1, "", "min"], [219, 2, 1, "", "name"], [219, 2, 1, "", "prior"], [219, 3, 1, "", "prior_stat_sum"], [219, 2, 1, "", "quantity"], [219, 2, 1, "", "scale"], [219, 2, 1, "", "scale_method"], [219, 2, 1, "", "scan_max"], [219, 2, 1, "", "scan_min"], [219, 2, 1, "", "scan_n_sigma"], [219, 2, 1, "", "scan_values"], [219, 3, 1, "", "set_lim"], [219, 3, 1, "", "to_dict"], [219, 2, 1, "", "type"], [219, 2, 1, "", "unit"], [219, 3, 1, "", "update_from_dict"], [219, 2, 1, "", "value"]], "gammapy.modeling.PriorParameters": [[220, 3, 1, "", "autoscale"], [220, 3, 1, "", "check_limits"], [220, 3, 1, "", "copy"], [220, 3, 1, "", "count"], [220, 2, 1, "", "free_parameters"], [220, 3, 1, "", "freeze_all"], [220, 3, 1, "", "from_dict"], [220, 3, 1, "", "from_stack"], [220, 3, 1, "", "index"], [220, 2, 1, "", "max"], [220, 2, 1, "", "min"], [220, 2, 1, "", "names"], [220, 2, 1, "", "prior"], [220, 3, 1, "", "prior_stat_sum"], [220, 3, 1, "", "restore_status"], [220, 3, 1, "", "select"], [220, 3, 1, "", "set_parameter_factors"], [220, 3, 1, "", "to_dict"], [220, 3, 1, "", "to_table"], [220, 2, 1, "", "types"], [220, 3, 1, "", "unfreeze_all"], [220, 2, 1, "", "unique_parameters"], [220, 2, 1, "", "value"]], "gammapy.modeling.models": [[221, 1, 1, "", "BrokenPowerLawSpectralModel"], [222, 1, 1, "", "CompoundSpectralModel"], [223, 1, 1, "", "ConstantFluxSpatialModel"], [224, 1, 1, "", "ConstantSpatialModel"], [225, 1, 1, "", "ConstantSpectralModel"], [226, 1, 1, "", "ConstantTemporalModel"], [227, 1, 1, "", "DatasetModels"], [228, 1, 1, "", "DiskSpatialModel"], [229, 1, 1, "", "EBLAbsorptionNormSpectralModel"], [230, 5, 1, "", "EBL_DATA_BUILTIN"], [231, 1, 1, "", "ExpCutoffPowerLaw3FGLSpectralModel"], [232, 1, 1, "", "ExpCutoffPowerLawNormSpectralModel"], [233, 1, 1, "", "ExpCutoffPowerLawSpectralModel"], [234, 1, 1, "", "ExpDecayTemporalModel"], [235, 1, 1, "", "FoVBackgroundModel"], [236, 1, 1, "", "GaussianPrior"], [237, 1, 1, "", "GaussianSpatialModel"], [238, 1, 1, "", "GaussianSpectralModel"], [239, 1, 1, "", "GaussianTemporalModel"], [240, 1, 1, "", "GeneralizedGaussianSpatialModel"], [241, 1, 1, "", "GeneralizedGaussianTemporalModel"], [242, 1, 1, "", "LightCurveTemplateTemporalModel"], [243, 1, 1, "", "LinearTemporalModel"], [244, 1, 1, "", "LogParabolaNormSpectralModel"], [245, 1, 1, "", "LogParabolaSpectralModel"], [246, 1, 1, "", "LogUniformPrior"], [247, 5, 1, "", "MODEL_REGISTRY"], [248, 1, 1, "", "MeyerCrabSpectralModel"], [249, 1, 1, "", "Model"], [250, 1, 1, "", "ModelBase"], [251, 1, 1, "", "Models"], [252, 1, 1, "", "NaimaSpectralModel"], [253, 1, 1, "", "PiecewiseNormSpatialModel"], [254, 1, 1, "", "PiecewiseNormSpectralModel"], [255, 1, 1, "", "PointSpatialModel"], [256, 1, 1, "", "PowerLaw2SpectralModel"], [257, 1, 1, "", "PowerLawNormSpectralModel"], [258, 1, 1, "", "PowerLawSpectralModel"], [259, 1, 1, "", "PowerLawTemporalModel"], [260, 1, 1, "", "Prior"], [261, 5, 1, "", "SPATIAL_MODEL_REGISTRY"], [262, 5, 1, "", "SPECTRAL_MODEL_REGISTRY"], [263, 1, 1, "", "ScaleSpectralModel"], [264, 1, 1, "", "Shell2SpatialModel"], [265, 1, 1, "", "ShellSpatialModel"], [266, 1, 1, "", "SineTemporalModel"], [267, 1, 1, "", "SkyModel"], [268, 1, 1, "", "SmoothBrokenPowerLawSpectralModel"], [269, 1, 1, "", "SpatialModel"], [270, 1, 1, "", "SpectralModel"], [271, 1, 1, "", "SuperExpCutoffPowerLaw3FGLSpectralModel"], [272, 1, 1, "", "SuperExpCutoffPowerLaw4FGLDR3SpectralModel"], [273, 1, 1, "", "SuperExpCutoffPowerLaw4FGLSpectralModel"], [274, 5, 1, "", "TEMPORAL_MODEL_REGISTRY"], [275, 1, 1, "", "TemplateNDSpatialModel"], [276, 1, 1, "", "TemplateNDSpectralModel"], [277, 1, 1, "", "TemplateNPredModel"], [278, 1, 1, "", "TemplatePhaseCurveTemporalModel"], [279, 1, 1, "", "TemplateSpatialModel"], [280, 1, 1, "", "TemplateSpectralModel"], [281, 1, 1, "", "TemporalModel"], [282, 1, 1, "", "UniformPrior"], [283, 4, 1, "", "create_cosmic_ray_spectral_model"], [284, 4, 1, "", "create_crab_spectral_model"], [285, 4, 1, "", "create_fermi_isotropic_diffuse_model"], [286, 4, 1, "", "integrate_spectrum"], [287, 4, 1, "", "read_hermes_cube"], [288, 4, 1, "", "scale_plot_flux"], [10, 0, 0, "-", "utils"]], "gammapy.modeling.models.BrokenPowerLawSpectralModel": [[221, 3, 1, "", "__call__"], [221, 2, 1, "", "amplitude"], [221, 3, 1, "", "copy"], [221, 2, 1, "", "covariance"], [221, 2, 1, "", "default_parameters"], [221, 2, 1, "", "ebreak"], [221, 3, 1, "", "energy_flux"], [221, 3, 1, "", "energy_flux_error"], [221, 3, 1, "", "evaluate"], [221, 3, 1, "", "evaluate_error"], [221, 3, 1, "", "freeze"], [221, 3, 1, "", "from_dict"], [221, 3, 1, "", "from_parameters"], [221, 2, 1, "", "frozen"], [221, 2, 1, "", "index1"], [221, 2, 1, "", "index2"], [221, 3, 1, "", "integral"], [221, 3, 1, "", "integral_error"], [221, 3, 1, "", "inverse"], [221, 3, 1, "", "inverse_all"], [221, 2, 1, "", "is_norm_spectral_model"], [221, 2, 1, "", "parameters"], [221, 2, 1, "", "parameters_unique_names"], [221, 2, 1, "", "pivot_energy"], [221, 3, 1, "", "plot"], [221, 3, 1, "", "plot_error"], [221, 3, 1, "", "reassign"], [221, 3, 1, "", "reference_fluxes"], [221, 3, 1, "", "spectral_index"], [221, 3, 1, "", "spectral_index_error"], [221, 2, 1, "", "tag"], [221, 3, 1, "", "to_dict"], [221, 2, 1, "", "type"], [221, 3, 1, "", "unfreeze"]], "gammapy.modeling.models.CompoundSpectralModel": [[222, 3, 1, "", "__call__"], [222, 3, 1, "", "copy"], [222, 2, 1, "", "covariance"], [222, 2, 1, "", "default_parameters"], [222, 3, 1, "", "energy_flux"], [222, 3, 1, "", "energy_flux_error"], [222, 3, 1, "", "evaluate"], [222, 3, 1, "", "evaluate_error"], [222, 3, 1, "", "freeze"], [222, 3, 1, "", "from_dict"], [222, 3, 1, "", "from_parameters"], [222, 2, 1, "", "frozen"], [222, 3, 1, "", "integral"], [222, 3, 1, "", "integral_error"], [222, 3, 1, "", "inverse"], [222, 3, 1, "", "inverse_all"], [222, 2, 1, "", "is_norm_spectral_model"], [222, 2, 1, "", "parameters"], [222, 2, 1, "", "parameters_unique_names"], [222, 2, 1, "", "pivot_energy"], [222, 3, 1, "", "plot"], [222, 3, 1, "", "plot_error"], [222, 3, 1, "", "reassign"], [222, 3, 1, "", "reference_fluxes"], [222, 3, 1, "", "spectral_index"], [222, 3, 1, "", "spectral_index_error"], [222, 2, 1, "", "tag"], [222, 3, 1, "", "to_dict"], [222, 2, 1, "", "type"], [222, 3, 1, "", "unfreeze"]], "gammapy.modeling.models.ConstantFluxSpatialModel": [[223, 3, 1, "", "__call__"], [223, 3, 1, "", "copy"], [223, 2, 1, "", "covariance"], [223, 2, 1, "", "default_parameters"], [223, 3, 1, "", "evaluate"], [223, 3, 1, "", "evaluate_geom"], [223, 2, 1, "", "evaluation_bin_size_min"], [223, 2, 1, "", "evaluation_radius"], [223, 2, 1, "", "evaluation_region"], [223, 2, 1, "", "frame"], [223, 3, 1, "", "freeze"], [223, 3, 1, "", "from_dict"], [223, 3, 1, "", "from_parameters"], [223, 3, 1, "", "from_position"], [223, 2, 1, "", "frozen"], [223, 3, 1, "", "integrate_geom"], [223, 2, 1, "", "is_energy_dependent"], [223, 2, 1, "", "parameters"], [223, 2, 1, "", "parameters_unique_names"], [223, 2, 1, "", "phi_0"], [223, 3, 1, "", "plot"], [223, 3, 1, "", "plot_error"], [223, 3, 1, "", "plot_grid"], [223, 3, 1, "", "plot_interactive"], [223, 3, 1, "", "plot_position_error"], [223, 2, 1, "", "position"], [223, 2, 1, "", "position_error"], [223, 2, 1, "", "position_lonlat"], [223, 3, 1, "", "reassign"], [223, 2, 1, "", "tag"], [223, 3, 1, "", "to_dict"], [223, 3, 1, "", "to_region"], [223, 2, 1, "", "type"], [223, 3, 1, "", "unfreeze"]], "gammapy.modeling.models.ConstantSpatialModel": [[224, 3, 1, "", "__call__"], [224, 3, 1, "", "copy"], [224, 2, 1, "", "covariance"], [224, 2, 1, "", "default_parameters"], [224, 3, 1, "", "evaluate"], [224, 3, 1, "", "evaluate_geom"], [224, 2, 1, "", "evaluation_bin_size_min"], [224, 2, 1, "", "evaluation_radius"], [224, 2, 1, "", "evaluation_region"], [224, 2, 1, "", "frame"], [224, 3, 1, "", "freeze"], [224, 3, 1, "", "from_dict"], [224, 3, 1, "", "from_parameters"], [224, 3, 1, "", "from_position"], [224, 2, 1, "", "frozen"], [224, 3, 1, "", "integrate_geom"], [224, 2, 1, "", "is_energy_dependent"], [224, 2, 1, "", "parameters"], [224, 2, 1, "", "parameters_unique_names"], [224, 2, 1, "", "phi_0"], [224, 3, 1, "", "plot"], [224, 3, 1, "", "plot_error"], [224, 3, 1, "", "plot_grid"], [224, 3, 1, "", "plot_interactive"], [224, 3, 1, "", "plot_position_error"], [224, 2, 1, "", "position"], [224, 2, 1, "", "position_error"], [224, 2, 1, "", "position_lonlat"], [224, 3, 1, "", "reassign"], [224, 2, 1, "", "tag"], [224, 3, 1, "", "to_dict"], [224, 3, 1, "", "to_region"], [224, 2, 1, "", "type"], [224, 3, 1, "", "unfreeze"], [224, 2, 1, "", "value"]], "gammapy.modeling.models.ConstantSpectralModel": [[225, 3, 1, "", "__call__"], [225, 2, 1, "", "const"], [225, 3, 1, "", "copy"], [225, 2, 1, "", "covariance"], [225, 2, 1, "", "default_parameters"], [225, 3, 1, "", "energy_flux"], [225, 3, 1, "", "energy_flux_error"], [225, 3, 1, "", "evaluate"], [225, 3, 1, "", "evaluate_error"], [225, 3, 1, "", "freeze"], [225, 3, 1, "", "from_dict"], [225, 3, 1, "", "from_parameters"], [225, 2, 1, "", "frozen"], [225, 3, 1, "", "integral"], [225, 3, 1, "", "integral_error"], [225, 3, 1, "", "inverse"], [225, 3, 1, "", "inverse_all"], [225, 2, 1, "", "is_norm_spectral_model"], [225, 2, 1, "", "parameters"], [225, 2, 1, "", "parameters_unique_names"], [225, 2, 1, "", "pivot_energy"], [225, 3, 1, "", "plot"], [225, 3, 1, "", "plot_error"], [225, 3, 1, "", "reassign"], [225, 3, 1, "", "reference_fluxes"], [225, 3, 1, "", "spectral_index"], [225, 3, 1, "", "spectral_index_error"], [225, 2, 1, "", "tag"], [225, 3, 1, "", "to_dict"], [225, 2, 1, "", "type"], [225, 3, 1, "", "unfreeze"]], "gammapy.modeling.models.ConstantTemporalModel": [[226, 3, 1, "", "__call__"], [226, 3, 1, "", "copy"], [226, 2, 1, "", "covariance"], [226, 2, 1, "", "default_parameters"], [226, 3, 1, "", "evaluate"], [226, 3, 1, "", "freeze"], [226, 3, 1, "", "from_dict"], [226, 3, 1, "", "from_parameters"], [226, 2, 1, "", "frozen"], [226, 3, 1, "", "integral"], [226, 2, 1, "", "is_energy_dependent"], [226, 2, 1, "", "parameters"], [226, 2, 1, "", "parameters_unique_names"], [226, 3, 1, "", "plot"], [226, 3, 1, "", "reassign"], [226, 2, 1, "", "reference_time"], [226, 3, 1, "", "sample_time"], [226, 2, 1, "", "tag"], [226, 3, 1, "", "time_sum"], [226, 3, 1, "", "to_dict"], [226, 2, 1, "", "type"], [226, 3, 1, "", "unfreeze"]], "gammapy.modeling.models.DatasetModels": [[227, 2, 1, "", "background_models"], [227, 3, 1, "", "copy"], [227, 3, 1, "", "count"], [227, 2, 1, "", "covariance"], [227, 3, 1, "", "freeze"], [227, 3, 1, "", "from_dict"], [227, 3, 1, "", "from_yaml"], [227, 2, 1, "", "frozen"], [227, 3, 1, "", "index"], [227, 2, 1, "", "names"], [227, 2, 1, "", "parameters"], [227, 2, 1, "", "parameters_unique_names"], [227, 3, 1, "", "plot_positions"], [227, 3, 1, "", "plot_regions"], [227, 2, 1, "", "positions"], [227, 3, 1, "", "read"], [227, 3, 1, "", "read_covariance"], [227, 3, 1, "", "reassign"], [227, 3, 1, "", "restore_status"], [227, 3, 1, "", "select"], [227, 3, 1, "", "select_from_geom"], [227, 3, 1, "", "select_mask"], [227, 3, 1, "", "select_region"], [227, 3, 1, "", "selection_mask"], [227, 3, 1, "", "set_parameters_bounds"], [227, 3, 1, "", "to_dict"], [227, 3, 1, "", "to_parameters_table"], [227, 3, 1, "", "to_regions"], [227, 3, 1, "", "to_template_sky_model"], [227, 3, 1, "", "to_template_spectral_model"], [227, 3, 1, "", "to_yaml"], [227, 3, 1, "", "unfreeze"], [227, 3, 1, "", "update_link_label"], [227, 3, 1, "", "update_parameters_from_table"], [227, 2, 1, "", "wcs_geom"], [227, 3, 1, "", "write"], [227, 3, 1, "", "write_covariance"]], "gammapy.modeling.models.DiskSpatialModel": [[228, 3, 1, "", "__call__"], [228, 3, 1, "", "copy"], [228, 2, 1, "", "covariance"], [228, 2, 1, "", "default_parameters"], [228, 2, 1, "", "e"], [228, 2, 1, "", "edge_width"], [228, 3, 1, "", "evaluate"], [228, 3, 1, "", "evaluate_geom"], [228, 2, 1, "", "evaluation_bin_size_min"], [228, 2, 1, "", "evaluation_radius"], [228, 2, 1, "", "evaluation_region"], [228, 3, 1, "", "freeze"], [228, 3, 1, "", "from_dict"], [228, 3, 1, "", "from_parameters"], [228, 3, 1, "", "from_position"], [228, 3, 1, "", "from_region"], [228, 2, 1, "", "frozen"], [228, 3, 1, "", "integrate_geom"], [228, 2, 1, "", "is_energy_dependent"], [228, 2, 1, "", "lat_0"], [228, 2, 1, "", "lon_0"], [228, 2, 1, "", "parameters"], [228, 2, 1, "", "parameters_unique_names"], [228, 2, 1, "", "phi"], [228, 2, 1, "", "phi_0"], [228, 3, 1, "", "plot"], [228, 3, 1, "", "plot_error"], [228, 3, 1, "", "plot_grid"], [228, 3, 1, "", "plot_interactive"], [228, 3, 1, "", "plot_position_error"], [228, 2, 1, "", "position"], [228, 2, 1, "", "position_error"], [228, 2, 1, "", "position_lonlat"], [228, 2, 1, "", "r_0"], [228, 3, 1, "", "reassign"], [228, 2, 1, "", "tag"], [228, 3, 1, "", "to_dict"], [228, 3, 1, "", "to_region"], [228, 2, 1, "", "type"], [228, 3, 1, "", "unfreeze"]], "gammapy.modeling.models.EBLAbsorptionNormSpectralModel": [[229, 3, 1, "", "__call__"], [229, 2, 1, "", "alpha_norm"], [229, 3, 1, "", "copy"], [229, 2, 1, "", "covariance"], [229, 2, 1, "", "default_parameters"], [229, 3, 1, "", "energy_flux"], [229, 3, 1, "", "energy_flux_error"], [229, 3, 1, "", "evaluate"], [229, 3, 1, "", "evaluate_error"], [229, 3, 1, "", "freeze"], [229, 3, 1, "", "from_dict"], [229, 3, 1, "", "from_parameters"], [229, 2, 1, "", "frozen"], [229, 3, 1, "", "integral"], [229, 3, 1, "", "integral_error"], [229, 3, 1, "", "inverse"], [229, 3, 1, "", "inverse_all"], [229, 2, 1, "", "is_norm_spectral_model"], [229, 2, 1, "", "parameters"], [229, 2, 1, "", "parameters_unique_names"], [229, 2, 1, "", "pivot_energy"], [229, 3, 1, "", "plot"], [229, 3, 1, "", "plot_error"], [229, 3, 1, "", "read"], [229, 3, 1, "", "read_builtin"], [229, 3, 1, "", "reassign"], [229, 2, 1, "", "redshift"], [229, 3, 1, "", "reference_fluxes"], [229, 3, 1, "", "spectral_index"], [229, 3, 1, "", "spectral_index_error"], [229, 2, 1, "", "tag"], [229, 3, 1, "", "to_dict"], [229, 2, 1, "", "type"], [229, 3, 1, "", "unfreeze"]], "gammapy.modeling.models.ExpCutoffPowerLaw3FGLSpectralModel": [[231, 3, 1, "", "__call__"], [231, 2, 1, "", "amplitude"], [231, 3, 1, "", "copy"], [231, 2, 1, "", "covariance"], [231, 2, 1, "", "default_parameters"], [231, 2, 1, "", "ecut"], [231, 3, 1, "", "energy_flux"], [231, 3, 1, "", "energy_flux_error"], [231, 3, 1, "", "evaluate"], [231, 3, 1, "", "evaluate_error"], [231, 3, 1, "", "freeze"], [231, 3, 1, "", "from_dict"], [231, 3, 1, "", "from_parameters"], [231, 2, 1, "", "frozen"], [231, 2, 1, "", "index"], [231, 3, 1, "", "integral"], [231, 3, 1, "", "integral_error"], [231, 3, 1, "", "inverse"], [231, 3, 1, "", "inverse_all"], [231, 2, 1, "", "is_norm_spectral_model"], [231, 2, 1, "", "parameters"], [231, 2, 1, "", "parameters_unique_names"], [231, 2, 1, "", "pivot_energy"], [231, 3, 1, "", "plot"], [231, 3, 1, "", "plot_error"], [231, 3, 1, "", "reassign"], [231, 2, 1, "", "reference"], [231, 3, 1, "", "reference_fluxes"], [231, 3, 1, "", "spectral_index"], [231, 3, 1, "", "spectral_index_error"], [231, 2, 1, "", "tag"], [231, 3, 1, "", "to_dict"], [231, 2, 1, "", "type"], [231, 3, 1, "", "unfreeze"]], "gammapy.modeling.models.ExpCutoffPowerLawNormSpectralModel": [[232, 3, 1, "", "__call__"], [232, 2, 1, "", "alpha"], [232, 3, 1, "", "copy"], [232, 2, 1, "", "covariance"], [232, 2, 1, "", "default_parameters"], [232, 3, 1, "", "energy_flux"], [232, 3, 1, "", "energy_flux_error"], [232, 3, 1, "", "evaluate"], [232, 3, 1, "", "evaluate_error"], [232, 3, 1, "", "freeze"], [232, 3, 1, "", "from_dict"], [232, 3, 1, "", "from_parameters"], [232, 2, 1, "", "frozen"], [232, 2, 1, "", "index"], [232, 3, 1, "", "integral"], [232, 3, 1, "", "integral_error"], [232, 3, 1, "", "inverse"], [232, 3, 1, "", "inverse_all"], [232, 2, 1, "", "is_norm_spectral_model"], [232, 2, 1, "", "lambda_"], [232, 2, 1, "", "norm"], [232, 2, 1, "", "parameters"], [232, 2, 1, "", "parameters_unique_names"], [232, 2, 1, "", "pivot_energy"], [232, 3, 1, "", "plot"], [232, 3, 1, "", "plot_error"], [232, 3, 1, "", "reassign"], [232, 2, 1, "", "reference"], [232, 3, 1, "", "reference_fluxes"], [232, 3, 1, "", "spectral_index"], [232, 3, 1, "", "spectral_index_error"], [232, 2, 1, "", "tag"], [232, 3, 1, "", "to_dict"], [232, 2, 1, "", "type"], [232, 3, 1, "", "unfreeze"]], "gammapy.modeling.models.ExpCutoffPowerLawSpectralModel": [[233, 3, 1, "", "__call__"], [233, 2, 1, "", "alpha"], [233, 2, 1, "", "amplitude"], [233, 3, 1, "", "copy"], [233, 2, 1, "", "covariance"], [233, 2, 1, "", "default_parameters"], [233, 2, 1, "", "e_peak"], [233, 3, 1, "", "energy_flux"], [233, 3, 1, "", "energy_flux_error"], [233, 3, 1, "", "evaluate"], [233, 3, 1, "", "evaluate_error"], [233, 3, 1, "", "freeze"], [233, 3, 1, "", "from_dict"], [233, 3, 1, "", "from_parameters"], [233, 2, 1, "", "frozen"], [233, 2, 1, "", "index"], [233, 3, 1, "", "integral"], [233, 3, 1, "", "integral_error"], [233, 3, 1, "", "inverse"], [233, 3, 1, "", "inverse_all"], [233, 2, 1, "", "is_norm_spectral_model"], [233, 2, 1, "", "lambda_"], [233, 2, 1, "", "parameters"], [233, 2, 1, "", "parameters_unique_names"], [233, 2, 1, "", "pivot_energy"], [233, 3, 1, "", "plot"], [233, 3, 1, "", "plot_error"], [233, 3, 1, "", "reassign"], [233, 2, 1, "", "reference"], [233, 3, 1, "", "reference_fluxes"], [233, 3, 1, "", "spectral_index"], [233, 3, 1, "", "spectral_index_error"], [233, 2, 1, "", "tag"], [233, 3, 1, "", "to_dict"], [233, 2, 1, "", "type"], [233, 3, 1, "", "unfreeze"]], "gammapy.modeling.models.ExpDecayTemporalModel": [[234, 3, 1, "", "__call__"], [234, 3, 1, "", "copy"], [234, 2, 1, "", "covariance"], [234, 2, 1, "", "default_parameters"], [234, 3, 1, "", "evaluate"], [234, 3, 1, "", "freeze"], [234, 3, 1, "", "from_dict"], [234, 3, 1, "", "from_parameters"], [234, 2, 1, "", "frozen"], [234, 3, 1, "", "integral"], [234, 2, 1, "", "is_energy_dependent"], [234, 2, 1, "", "parameters"], [234, 2, 1, "", "parameters_unique_names"], [234, 3, 1, "", "plot"], [234, 3, 1, "", "reassign"], [234, 2, 1, "", "reference_time"], [234, 3, 1, "", "sample_time"], [234, 2, 1, "", "t0"], [234, 2, 1, "", "t_ref"], [234, 2, 1, "", "tag"], [234, 3, 1, "", "time_sum"], [234, 3, 1, "", "to_dict"], [234, 2, 1, "", "type"], [234, 3, 1, "", "unfreeze"]], "gammapy.modeling.models.FoVBackgroundModel": [[235, 3, 1, "", "contributes"], [235, 3, 1, "", "copy"], [235, 2, 1, "", "covariance"], [235, 2, 1, "", "default_parameters"], [235, 3, 1, "", "evaluate"], [235, 3, 1, "", "evaluate_geom"], [235, 3, 1, "", "freeze"], [235, 3, 1, "", "from_dict"], [235, 3, 1, "", "from_parameters"], [235, 2, 1, "", "frozen"], [235, 2, 1, "", "name"], [235, 2, 1, "", "parameters"], [235, 2, 1, "", "parameters_unique_names"], [235, 3, 1, "", "reassign"], [235, 3, 1, "", "reset_to_default"], [235, 2, 1, "", "spatial_model"], [235, 2, 1, "", "spectral_model"], [235, 2, 1, "", "tag"], [235, 3, 1, "", "to_dict"], [235, 2, 1, "", "type"], [235, 3, 1, "", "unfreeze"]], "gammapy.modeling.models.GaussianPrior": [[236, 3, 1, "", "__call__"], [236, 3, 1, "", "copy"], [236, 2, 1, "", "covariance"], [236, 2, 1, "", "default_parameters"], [236, 3, 1, "", "evaluate"], [236, 3, 1, "", "freeze"], [236, 3, 1, "", "from_dict"], [236, 3, 1, "", "from_parameters"], [236, 2, 1, "", "frozen"], [236, 2, 1, "", "mu"], [236, 2, 1, "", "parameters"], [236, 2, 1, "", "parameters_unique_names"], [236, 3, 1, "", "reassign"], [236, 2, 1, "", "sigma"], [236, 2, 1, "", "tag"], [236, 3, 1, "", "to_dict"], [236, 2, 1, "", "type"], [236, 3, 1, "", "unfreeze"], [236, 2, 1, "", "weight"]], "gammapy.modeling.models.GaussianSpatialModel": [[237, 3, 1, "", "__call__"], [237, 3, 1, "", "copy"], [237, 2, 1, "", "covariance"], [237, 2, 1, "", "default_parameters"], [237, 2, 1, "", "e"], [237, 3, 1, "", "evaluate"], [237, 3, 1, "", "evaluate_geom"], [237, 2, 1, "", "evaluation_bin_size_min"], [237, 2, 1, "", "evaluation_radius"], [237, 2, 1, "", "evaluation_region"], [237, 3, 1, "", "freeze"], [237, 3, 1, "", "from_dict"], [237, 3, 1, "", "from_parameters"], [237, 3, 1, "", "from_position"], [237, 2, 1, "", "frozen"], [237, 3, 1, "", "integrate_geom"], [237, 2, 1, "", "is_energy_dependent"], [237, 2, 1, "", "lat_0"], [237, 2, 1, "", "lon_0"], [237, 2, 1, "", "parameters"], [237, 2, 1, "", "parameters_unique_names"], [237, 2, 1, "", "phi"], [237, 2, 1, "", "phi_0"], [237, 3, 1, "", "plot"], [237, 3, 1, "", "plot_error"], [237, 3, 1, "", "plot_grid"], [237, 3, 1, "", "plot_interactive"], [237, 3, 1, "", "plot_position_error"], [237, 2, 1, "", "position"], [237, 2, 1, "", "position_error"], [237, 2, 1, "", "position_lonlat"], [237, 3, 1, "", "reassign"], [237, 2, 1, "", "sigma"], [237, 2, 1, "", "tag"], [237, 3, 1, "", "to_dict"], [237, 3, 1, "", "to_region"], [237, 2, 1, "", "type"], [237, 3, 1, "", "unfreeze"]], "gammapy.modeling.models.GaussianSpectralModel": [[238, 3, 1, "", "__call__"], [238, 2, 1, "", "amplitude"], [238, 3, 1, "", "copy"], [238, 2, 1, "", "covariance"], [238, 2, 1, "", "default_parameters"], [238, 3, 1, "", "energy_flux"], [238, 3, 1, "", "energy_flux_error"], [238, 3, 1, "", "evaluate"], [238, 3, 1, "", "evaluate_error"], [238, 3, 1, "", "freeze"], [238, 3, 1, "", "from_dict"], [238, 3, 1, "", "from_parameters"], [238, 2, 1, "", "frozen"], [238, 3, 1, "", "integral"], [238, 3, 1, "", "integral_error"], [238, 3, 1, "", "inverse"], [238, 3, 1, "", "inverse_all"], [238, 2, 1, "", "is_norm_spectral_model"], [238, 2, 1, "", "mean"], [238, 2, 1, "", "parameters"], [238, 2, 1, "", "parameters_unique_names"], [238, 2, 1, "", "pivot_energy"], [238, 3, 1, "", "plot"], [238, 3, 1, "", "plot_error"], [238, 3, 1, "", "reassign"], [238, 3, 1, "", "reference_fluxes"], [238, 2, 1, "", "sigma"], [238, 3, 1, "", "spectral_index"], [238, 3, 1, "", "spectral_index_error"], [238, 2, 1, "", "tag"], [238, 3, 1, "", "to_dict"], [238, 2, 1, "", "type"], [238, 3, 1, "", "unfreeze"]], "gammapy.modeling.models.GaussianTemporalModel": [[239, 3, 1, "", "__call__"], [239, 3, 1, "", "copy"], [239, 2, 1, "", "covariance"], [239, 2, 1, "", "default_parameters"], [239, 3, 1, "", "evaluate"], [239, 3, 1, "", "freeze"], [239, 3, 1, "", "from_dict"], [239, 3, 1, "", "from_parameters"], [239, 2, 1, "", "frozen"], [239, 3, 1, "", "integral"], [239, 2, 1, "", "is_energy_dependent"], [239, 2, 1, "", "parameters"], [239, 2, 1, "", "parameters_unique_names"], [239, 3, 1, "", "plot"], [239, 3, 1, "", "reassign"], [239, 2, 1, "", "reference_time"], [239, 3, 1, "", "sample_time"], [239, 2, 1, "", "sigma"], [239, 2, 1, "", "t_ref"], [239, 2, 1, "", "tag"], [239, 3, 1, "", "time_sum"], [239, 3, 1, "", "to_dict"], [239, 2, 1, "", "type"], [239, 3, 1, "", "unfreeze"]], "gammapy.modeling.models.GeneralizedGaussianSpatialModel": [[240, 3, 1, "", "__call__"], [240, 3, 1, "", "copy"], [240, 2, 1, "", "covariance"], [240, 2, 1, "", "default_parameters"], [240, 2, 1, "", "e"], [240, 2, 1, "", "eta"], [240, 3, 1, "", "evaluate"], [240, 3, 1, "", "evaluate_geom"], [240, 2, 1, "", "evaluation_bin_size_min"], [240, 2, 1, "", "evaluation_radius"], [240, 2, 1, "", "evaluation_region"], [240, 3, 1, "", "freeze"], [240, 3, 1, "", "from_dict"], [240, 3, 1, "", "from_parameters"], [240, 3, 1, "", "from_position"], [240, 2, 1, "", "frozen"], [240, 3, 1, "", "integrate_geom"], [240, 2, 1, "", "is_energy_dependent"], [240, 2, 1, "", "lat_0"], [240, 2, 1, "", "lon_0"], [240, 2, 1, "", "parameters"], [240, 2, 1, "", "parameters_unique_names"], [240, 2, 1, "", "phi"], [240, 2, 1, "", "phi_0"], [240, 3, 1, "", "plot"], [240, 3, 1, "", "plot_error"], [240, 3, 1, "", "plot_grid"], [240, 3, 1, "", "plot_interactive"], [240, 3, 1, "", "plot_position_error"], [240, 2, 1, "", "position"], [240, 2, 1, "", "position_error"], [240, 2, 1, "", "position_lonlat"], [240, 2, 1, "", "r_0"], [240, 3, 1, "", "reassign"], [240, 2, 1, "", "tag"], [240, 3, 1, "", "to_dict"], [240, 3, 1, "", "to_region"], [240, 2, 1, "", "type"], [240, 3, 1, "", "unfreeze"]], "gammapy.modeling.models.GeneralizedGaussianTemporalModel": [[241, 3, 1, "", "__call__"], [241, 3, 1, "", "copy"], [241, 2, 1, "", "covariance"], [241, 2, 1, "", "default_parameters"], [241, 2, 1, "", "eta"], [241, 3, 1, "", "evaluate"], [241, 3, 1, "", "freeze"], [241, 3, 1, "", "from_dict"], [241, 3, 1, "", "from_parameters"], [241, 2, 1, "", "frozen"], [241, 3, 1, "", "integral"], [241, 2, 1, "", "is_energy_dependent"], [241, 2, 1, "", "parameters"], [241, 2, 1, "", "parameters_unique_names"], [241, 3, 1, "", "plot"], [241, 3, 1, "", "reassign"], [241, 2, 1, "", "reference_time"], [241, 3, 1, "", "sample_time"], [241, 2, 1, "", "t_decay"], [241, 2, 1, "", "t_ref"], [241, 2, 1, "", "t_rise"], [241, 2, 1, "", "tag"], [241, 3, 1, "", "time_sum"], [241, 3, 1, "", "to_dict"], [241, 2, 1, "", "type"], [241, 3, 1, "", "unfreeze"]], "gammapy.modeling.models.LightCurveTemplateTemporalModel": [[242, 3, 1, "", "__call__"], [242, 3, 1, "", "copy"], [242, 2, 1, "", "covariance"], [242, 2, 1, "", "default_parameters"], [242, 3, 1, "", "evaluate"], [242, 3, 1, "", "freeze"], [242, 3, 1, "", "from_dict"], [242, 3, 1, "", "from_parameters"], [242, 3, 1, "", "from_table"], [242, 2, 1, "", "frozen"], [242, 3, 1, "", "integral"], [242, 2, 1, "", "is_energy_dependent"], [242, 2, 1, "", "parameters"], [242, 2, 1, "", "parameters_unique_names"], [242, 3, 1, "", "plot"], [242, 3, 1, "", "read"], [242, 3, 1, "", "reassign"], [242, 2, 1, "", "reference_time"], [242, 3, 1, "", "sample_time"], [242, 2, 1, "", "t_ref"], [242, 2, 1, "", "tag"], [242, 3, 1, "", "time_sum"], [242, 3, 1, "", "to_dict"], [242, 3, 1, "", "to_table"], [242, 2, 1, "", "type"], [242, 3, 1, "", "unfreeze"], [242, 3, 1, "", "write"]], "gammapy.modeling.models.LinearTemporalModel": [[243, 3, 1, "", "__call__"], [243, 2, 1, "", "alpha"], [243, 2, 1, "", "beta"], [243, 3, 1, "", "copy"], [243, 2, 1, "", "covariance"], [243, 2, 1, "", "default_parameters"], [243, 3, 1, "", "evaluate"], [243, 3, 1, "", "freeze"], [243, 3, 1, "", "from_dict"], [243, 3, 1, "", "from_parameters"], [243, 2, 1, "", "frozen"], [243, 3, 1, "", "integral"], [243, 2, 1, "", "is_energy_dependent"], [243, 2, 1, "", "parameters"], [243, 2, 1, "", "parameters_unique_names"], [243, 3, 1, "", "plot"], [243, 3, 1, "", "reassign"], [243, 2, 1, "", "reference_time"], [243, 3, 1, "", "sample_time"], [243, 2, 1, "", "t_ref"], [243, 2, 1, "", "tag"], [243, 3, 1, "", "time_sum"], [243, 3, 1, "", "to_dict"], [243, 2, 1, "", "type"], [243, 3, 1, "", "unfreeze"]], "gammapy.modeling.models.LogParabolaNormSpectralModel": [[244, 3, 1, "", "__call__"], [244, 2, 1, "", "alpha"], [244, 2, 1, "", "beta"], [244, 3, 1, "", "copy"], [244, 2, 1, "", "covariance"], [244, 2, 1, "", "default_parameters"], [244, 3, 1, "", "energy_flux"], [244, 3, 1, "", "energy_flux_error"], [244, 3, 1, "", "evaluate"], [244, 3, 1, "", "evaluate_error"], [244, 3, 1, "", "freeze"], [244, 3, 1, "", "from_dict"], [244, 3, 1, "", "from_log10"], [244, 3, 1, "", "from_parameters"], [244, 2, 1, "", "frozen"], [244, 3, 1, "", "integral"], [244, 3, 1, "", "integral_error"], [244, 3, 1, "", "inverse"], [244, 3, 1, "", "inverse_all"], [244, 2, 1, "", "is_norm_spectral_model"], [244, 2, 1, "", "norm"], [244, 2, 1, "", "parameters"], [244, 2, 1, "", "parameters_unique_names"], [244, 2, 1, "", "pivot_energy"], [244, 3, 1, "", "plot"], [244, 3, 1, "", "plot_error"], [244, 3, 1, "", "reassign"], [244, 2, 1, "", "reference"], [244, 3, 1, "", "reference_fluxes"], [244, 3, 1, "", "spectral_index"], [244, 3, 1, "", "spectral_index_error"], [244, 2, 1, "", "tag"], [244, 3, 1, "", "to_dict"], [244, 2, 1, "", "type"], [244, 3, 1, "", "unfreeze"]], "gammapy.modeling.models.LogParabolaSpectralModel": [[245, 3, 1, "", "__call__"], [245, 2, 1, "", "alpha"], [245, 2, 1, "", "amplitude"], [245, 2, 1, "", "beta"], [245, 3, 1, "", "copy"], [245, 2, 1, "", "covariance"], [245, 2, 1, "", "default_parameters"], [245, 2, 1, "", "e_peak"], [245, 3, 1, "", "energy_flux"], [245, 3, 1, "", "energy_flux_error"], [245, 3, 1, "", "evaluate"], [245, 3, 1, "", "evaluate_error"], [245, 3, 1, "", "freeze"], [245, 3, 1, "", "from_dict"], [245, 3, 1, "", "from_log10"], [245, 3, 1, "", "from_parameters"], [245, 2, 1, "", "frozen"], [245, 3, 1, "", "integral"], [245, 3, 1, "", "integral_error"], [245, 3, 1, "", "inverse"], [245, 3, 1, "", "inverse_all"], [245, 2, 1, "", "is_norm_spectral_model"], [245, 2, 1, "", "parameters"], [245, 2, 1, "", "parameters_unique_names"], [245, 2, 1, "", "pivot_energy"], [245, 3, 1, "", "plot"], [245, 3, 1, "", "plot_error"], [245, 3, 1, "", "reassign"], [245, 2, 1, "", "reference"], [245, 3, 1, "", "reference_fluxes"], [245, 3, 1, "", "spectral_index"], [245, 3, 1, "", "spectral_index_error"], [245, 2, 1, "", "tag"], [245, 3, 1, "", "to_dict"], [245, 2, 1, "", "type"], [245, 3, 1, "", "unfreeze"]], "gammapy.modeling.models.LogUniformPrior": [[246, 3, 1, "", "__call__"], [246, 3, 1, "", "copy"], [246, 2, 1, "", "covariance"], [246, 2, 1, "", "default_parameters"], [246, 3, 1, "", "evaluate"], [246, 3, 1, "", "freeze"], [246, 3, 1, "", "from_dict"], [246, 3, 1, "", "from_parameters"], [246, 2, 1, "", "frozen"], [246, 2, 1, "", "max"], [246, 2, 1, "", "min"], [246, 2, 1, "", "parameters"], [246, 2, 1, "", "parameters_unique_names"], [246, 3, 1, "", "reassign"], [246, 2, 1, "", "tag"], [246, 3, 1, "", "to_dict"], [246, 2, 1, "", "type"], [246, 3, 1, "", "unfreeze"], [246, 2, 1, "", "weight"]], "gammapy.modeling.models.MeyerCrabSpectralModel": [[248, 3, 1, "", "__call__"], [248, 2, 1, "", "coefficients"], [248, 3, 1, "", "copy"], [248, 2, 1, "", "covariance"], [248, 2, 1, "", "default_parameters"], [248, 3, 1, "", "energy_flux"], [248, 3, 1, "", "energy_flux_error"], [248, 3, 1, "", "evaluate"], [248, 3, 1, "", "evaluate_error"], [248, 3, 1, "", "freeze"], [248, 3, 1, "", "from_dict"], [248, 3, 1, "", "from_parameters"], [248, 2, 1, "", "frozen"], [248, 3, 1, "", "integral"], [248, 3, 1, "", "integral_error"], [248, 3, 1, "", "inverse"], [248, 3, 1, "", "inverse_all"], [248, 2, 1, "", "is_norm_spectral_model"], [248, 2, 1, "", "norm"], [248, 2, 1, "", "parameters"], [248, 2, 1, "", "parameters_unique_names"], [248, 2, 1, "", "pivot_energy"], [248, 3, 1, "", "plot"], [248, 3, 1, "", "plot_error"], [248, 3, 1, "", "reassign"], [248, 3, 1, "", "reference_fluxes"], [248, 3, 1, "", "spectral_index"], [248, 3, 1, "", "spectral_index_error"], [248, 3, 1, "", "to_dict"], [248, 2, 1, "", "type"], [248, 3, 1, "", "unfreeze"]], "gammapy.modeling.models.Model": [[249, 3, 1, "", "create"], [249, 3, 1, "", "from_dict"]], "gammapy.modeling.models.ModelBase": [[250, 3, 1, "", "copy"], [250, 2, 1, "", "covariance"], [250, 3, 1, "", "freeze"], [250, 3, 1, "", "from_dict"], [250, 3, 1, "", "from_parameters"], [250, 2, 1, "", "frozen"], [250, 2, 1, "", "parameters"], [250, 2, 1, "", "parameters_unique_names"], [250, 3, 1, "", "reassign"], [250, 3, 1, "", "to_dict"], [250, 2, 1, "", "type"], [250, 3, 1, "", "unfreeze"]], "gammapy.modeling.models.Models": [[251, 3, 1, "", "append"], [251, 2, 1, "", "background_models"], [251, 3, 1, "", "clear"], [251, 3, 1, "", "copy"], [251, 3, 1, "", "count"], [251, 2, 1, "", "covariance"], [251, 3, 1, "", "extend"], [251, 3, 1, "", "freeze"], [251, 3, 1, "", "from_dict"], [251, 3, 1, "", "from_yaml"], [251, 2, 1, "", "frozen"], [251, 3, 1, "", "index"], [251, 3, 1, "", "insert"], [251, 2, 1, "", "names"], [251, 2, 1, "", "parameters"], [251, 2, 1, "", "parameters_unique_names"], [251, 3, 1, "", "plot_positions"], [251, 3, 1, "", "plot_regions"], [251, 3, 1, "", "pop"], [251, 2, 1, "", "positions"], [251, 3, 1, "", "read"], [251, 3, 1, "", "read_covariance"], [251, 3, 1, "", "reassign"], [251, 3, 1, "", "remove"], [251, 3, 1, "", "restore_status"], [251, 3, 1, "", "reverse"], [251, 3, 1, "", "select"], [251, 3, 1, "", "select_from_geom"], [251, 3, 1, "", "select_mask"], [251, 3, 1, "", "select_region"], [251, 3, 1, "", "selection_mask"], [251, 3, 1, "", "set_parameters_bounds"], [251, 3, 1, "", "set_prior"], [251, 3, 1, "", "to_dict"], [251, 3, 1, "", "to_parameters_table"], [251, 3, 1, "", "to_regions"], [251, 3, 1, "", "to_template_sky_model"], [251, 3, 1, "", "to_template_spectral_model"], [251, 3, 1, "", "to_yaml"], [251, 3, 1, "", "unfreeze"], [251, 3, 1, "", "update_link_label"], [251, 3, 1, "", "update_parameters_from_table"], [251, 2, 1, "", "wcs_geom"], [251, 3, 1, "", "write"], [251, 3, 1, "", "write_covariance"]], "gammapy.modeling.models.NaimaSpectralModel": [[252, 3, 1, "", "__call__"], [252, 3, 1, "", "copy"], [252, 2, 1, "", "covariance"], [252, 2, 1, "", "default_parameters"], [252, 3, 1, "", "energy_flux"], [252, 3, 1, "", "energy_flux_error"], [252, 3, 1, "", "evaluate"], [252, 3, 1, "", "evaluate_error"], [252, 3, 1, "", "freeze"], [252, 3, 1, "", "from_dict"], [252, 3, 1, "", "from_parameters"], [252, 2, 1, "", "frozen"], [252, 2, 1, "", "include_ssc"], [252, 3, 1, "", "integral"], [252, 3, 1, "", "integral_error"], [252, 3, 1, "", "inverse"], [252, 3, 1, "", "inverse_all"], [252, 2, 1, "", "is_norm_spectral_model"], [252, 2, 1, "", "parameters"], [252, 2, 1, "", "parameters_unique_names"], [252, 2, 1, "", "particle_distribution"], [252, 2, 1, "", "pivot_energy"], [252, 3, 1, "", "plot"], [252, 3, 1, "", "plot_error"], [252, 3, 1, "", "reassign"], [252, 3, 1, "", "reference_fluxes"], [252, 3, 1, "", "spectral_index"], [252, 3, 1, "", "spectral_index_error"], [252, 2, 1, "", "ssc_model"], [252, 2, 1, "", "tag"], [252, 3, 1, "", "to_dict"], [252, 2, 1, "", "type"], [252, 3, 1, "", "unfreeze"]], "gammapy.modeling.models.PiecewiseNormSpatialModel": [[253, 3, 1, "", "__call__"], [253, 2, 1, "", "coords"], [253, 3, 1, "", "copy"], [253, 2, 1, "", "covariance"], [253, 2, 1, "", "default_parameters"], [253, 3, 1, "", "evaluate"], [253, 3, 1, "", "evaluate_geom"], [253, 2, 1, "", "evaluation_bin_size_min"], [253, 2, 1, "", "evaluation_radius"], [253, 2, 1, "", "evaluation_region"], [253, 3, 1, "", "freeze"], [253, 3, 1, "", "from_dict"], [253, 3, 1, "", "from_parameters"], [253, 3, 1, "", "from_position"], [253, 2, 1, "", "frozen"], [253, 3, 1, "", "integrate_geom"], [253, 2, 1, "", "is_energy_dependent"], [253, 2, 1, "", "norms"], [253, 2, 1, "", "parameters"], [253, 2, 1, "", "parameters_unique_names"], [253, 2, 1, "", "phi_0"], [253, 3, 1, "", "plot"], [253, 3, 1, "", "plot_error"], [253, 3, 1, "", "plot_grid"], [253, 3, 1, "", "plot_interactive"], [253, 3, 1, "", "plot_position_error"], [253, 2, 1, "", "position"], [253, 2, 1, "", "position_error"], [253, 2, 1, "", "position_lonlat"], [253, 3, 1, "", "reassign"], [253, 2, 1, "", "tag"], [253, 3, 1, "", "to_dict"], [253, 2, 1, "", "type"], [253, 3, 1, "", "unfreeze"]], "gammapy.modeling.models.PiecewiseNormSpectralModel": [[254, 3, 1, "", "__call__"], [254, 3, 1, "", "copy"], [254, 2, 1, "", "covariance"], [254, 2, 1, "", "default_parameters"], [254, 2, 1, "", "energy"], [254, 3, 1, "", "energy_flux"], [254, 3, 1, "", "energy_flux_error"], [254, 3, 1, "", "evaluate"], [254, 3, 1, "", "evaluate_error"], [254, 3, 1, "", "freeze"], [254, 3, 1, "", "from_dict"], [254, 3, 1, "", "from_parameters"], [254, 2, 1, "", "frozen"], [254, 3, 1, "", "integral"], [254, 3, 1, "", "integral_error"], [254, 3, 1, "", "inverse"], [254, 3, 1, "", "inverse_all"], [254, 2, 1, "", "is_norm_spectral_model"], [254, 2, 1, "", "norms"], [254, 2, 1, "", "parameters"], [254, 2, 1, "", "parameters_unique_names"], [254, 2, 1, "", "pivot_energy"], [254, 3, 1, "", "plot"], [254, 3, 1, "", "plot_error"], [254, 3, 1, "", "reassign"], [254, 3, 1, "", "reference_fluxes"], [254, 3, 1, "", "spectral_index"], [254, 3, 1, "", "spectral_index_error"], [254, 2, 1, "", "tag"], [254, 3, 1, "", "to_dict"], [254, 2, 1, "", "type"], [254, 3, 1, "", "unfreeze"]], "gammapy.modeling.models.PointSpatialModel": [[255, 3, 1, "", "__call__"], [255, 3, 1, "", "copy"], [255, 2, 1, "", "covariance"], [255, 2, 1, "", "default_parameters"], [255, 3, 1, "", "evaluate_geom"], [255, 2, 1, "", "evaluation_bin_size_min"], [255, 2, 1, "", "evaluation_radius"], [255, 2, 1, "", "evaluation_region"], [255, 3, 1, "", "freeze"], [255, 3, 1, "", "from_dict"], [255, 3, 1, "", "from_parameters"], [255, 3, 1, "", "from_position"], [255, 2, 1, "", "frozen"], [255, 3, 1, "", "integrate_geom"], [255, 2, 1, "", "is_energy_dependent"], [255, 2, 1, "", "lat_0"], [255, 2, 1, "", "lon_0"], [255, 2, 1, "", "parameters"], [255, 2, 1, "", "parameters_unique_names"], [255, 2, 1, "", "phi_0"], [255, 3, 1, "", "plot"], [255, 3, 1, "", "plot_error"], [255, 3, 1, "", "plot_grid"], [255, 3, 1, "", "plot_interactive"], [255, 3, 1, "", "plot_position_error"], [255, 2, 1, "", "position"], [255, 2, 1, "", "position_error"], [255, 2, 1, "", "position_lonlat"], [255, 3, 1, "", "reassign"], [255, 2, 1, "", "tag"], [255, 3, 1, "", "to_dict"], [255, 3, 1, "", "to_region"], [255, 2, 1, "", "type"], [255, 3, 1, "", "unfreeze"]], "gammapy.modeling.models.PowerLaw2SpectralModel": [[256, 3, 1, "", "__call__"], [256, 2, 1, "", "amplitude"], [256, 3, 1, "", "copy"], [256, 2, 1, "", "covariance"], [256, 2, 1, "", "default_parameters"], [256, 2, 1, "", "emax"], [256, 2, 1, "", "emin"], [256, 3, 1, "", "energy_flux"], [256, 3, 1, "", "energy_flux_error"], [256, 3, 1, "", "evaluate"], [256, 3, 1, "", "evaluate_error"], [256, 3, 1, "", "evaluate_integral"], [256, 3, 1, "", "freeze"], [256, 3, 1, "", "from_dict"], [256, 3, 1, "", "from_parameters"], [256, 2, 1, "", "frozen"], [256, 2, 1, "", "index"], [256, 3, 1, "", "integral"], [256, 3, 1, "", "integral_error"], [256, 3, 1, "", "inverse"], [256, 3, 1, "", "inverse_all"], [256, 2, 1, "", "is_norm_spectral_model"], [256, 2, 1, "", "parameters"], [256, 2, 1, "", "parameters_unique_names"], [256, 2, 1, "", "pivot_energy"], [256, 3, 1, "", "plot"], [256, 3, 1, "", "plot_error"], [256, 3, 1, "", "reassign"], [256, 3, 1, "", "reference_fluxes"], [256, 3, 1, "", "spectral_index"], [256, 3, 1, "", "spectral_index_error"], [256, 2, 1, "", "tag"], [256, 3, 1, "", "to_dict"], [256, 2, 1, "", "type"], [256, 3, 1, "", "unfreeze"]], "gammapy.modeling.models.PowerLawNormSpectralModel": [[257, 3, 1, "", "__call__"], [257, 3, 1, "", "copy"], [257, 2, 1, "", "covariance"], [257, 2, 1, "", "default_parameters"], [257, 3, 1, "", "energy_flux"], [257, 3, 1, "", "energy_flux_error"], [257, 3, 1, "", "evaluate"], [257, 3, 1, "", "evaluate_energy_flux"], [257, 3, 1, "", "evaluate_error"], [257, 3, 1, "", "evaluate_integral"], [257, 3, 1, "", "freeze"], [257, 3, 1, "", "from_dict"], [257, 3, 1, "", "from_parameters"], [257, 2, 1, "", "frozen"], [257, 3, 1, "", "integral"], [257, 3, 1, "", "integral_error"], [257, 3, 1, "", "inverse"], [257, 3, 1, "", "inverse_all"], [257, 2, 1, "", "is_norm_spectral_model"], [257, 2, 1, "", "norm"], [257, 2, 1, "", "parameters"], [257, 2, 1, "", "parameters_unique_names"], [257, 2, 1, "", "pivot_energy"], [257, 3, 1, "", "plot"], [257, 3, 1, "", "plot_error"], [257, 3, 1, "", "reassign"], [257, 2, 1, "", "reference"], [257, 3, 1, "", "reference_fluxes"], [257, 3, 1, "", "spectral_index"], [257, 3, 1, "", "spectral_index_error"], [257, 2, 1, "", "tag"], [257, 2, 1, "", "tilt"], [257, 3, 1, "", "to_dict"], [257, 2, 1, "", "type"], [257, 3, 1, "", "unfreeze"]], "gammapy.modeling.models.PowerLawSpectralModel": [[258, 3, 1, "", "__call__"], [258, 2, 1, "", "amplitude"], [258, 3, 1, "", "copy"], [258, 2, 1, "", "covariance"], [258, 2, 1, "", "default_parameters"], [258, 3, 1, "", "energy_flux"], [258, 3, 1, "", "energy_flux_error"], [258, 3, 1, "", "evaluate"], [258, 3, 1, "", "evaluate_energy_flux"], [258, 3, 1, "", "evaluate_error"], [258, 3, 1, "", "evaluate_integral"], [258, 3, 1, "", "freeze"], [258, 3, 1, "", "from_dict"], [258, 3, 1, "", "from_parameters"], [258, 2, 1, "", "frozen"], [258, 2, 1, "", "index"], [258, 3, 1, "", "integral"], [258, 3, 1, "", "integral_error"], [258, 3, 1, "", "inverse"], [258, 3, 1, "", "inverse_all"], [258, 2, 1, "", "is_norm_spectral_model"], [258, 2, 1, "", "parameters"], [258, 2, 1, "", "parameters_unique_names"], [258, 2, 1, "", "pivot_energy"], [258, 3, 1, "", "plot"], [258, 3, 1, "", "plot_error"], [258, 3, 1, "", "reassign"], [258, 2, 1, "", "reference"], [258, 3, 1, "", "reference_fluxes"], [258, 3, 1, "", "spectral_index"], [258, 3, 1, "", "spectral_index_error"], [258, 2, 1, "", "tag"], [258, 3, 1, "", "to_dict"], [258, 2, 1, "", "type"], [258, 3, 1, "", "unfreeze"]], "gammapy.modeling.models.PowerLawTemporalModel": [[259, 3, 1, "", "__call__"], [259, 2, 1, "", "alpha"], [259, 3, 1, "", "copy"], [259, 2, 1, "", "covariance"], [259, 2, 1, "", "default_parameters"], [259, 3, 1, "", "evaluate"], [259, 3, 1, "", "freeze"], [259, 3, 1, "", "from_dict"], [259, 3, 1, "", "from_parameters"], [259, 2, 1, "", "frozen"], [259, 3, 1, "", "integral"], [259, 2, 1, "", "is_energy_dependent"], [259, 2, 1, "", "parameters"], [259, 2, 1, "", "parameters_unique_names"], [259, 3, 1, "", "plot"], [259, 3, 1, "", "reassign"], [259, 2, 1, "", "reference_time"], [259, 3, 1, "", "sample_time"], [259, 2, 1, "", "t0"], [259, 2, 1, "", "t_ref"], [259, 2, 1, "", "tag"], [259, 3, 1, "", "time_sum"], [259, 3, 1, "", "to_dict"], [259, 2, 1, "", "type"], [259, 3, 1, "", "unfreeze"]], "gammapy.modeling.models.Prior": [[260, 3, 1, "", "__call__"], [260, 3, 1, "", "copy"], [260, 2, 1, "", "covariance"], [260, 2, 1, "", "default_parameters"], [260, 3, 1, "", "freeze"], [260, 3, 1, "", "from_dict"], [260, 3, 1, "", "from_parameters"], [260, 2, 1, "", "frozen"], [260, 2, 1, "", "parameters"], [260, 2, 1, "", "parameters_unique_names"], [260, 3, 1, "", "reassign"], [260, 3, 1, "", "to_dict"], [260, 2, 1, "", "type"], [260, 3, 1, "", "unfreeze"], [260, 2, 1, "", "weight"]], "gammapy.modeling.models.ScaleSpectralModel": [[263, 3, 1, "", "__call__"], [263, 3, 1, "", "copy"], [263, 2, 1, "", "covariance"], [263, 2, 1, "", "default_parameters"], [263, 3, 1, "", "energy_flux"], [263, 3, 1, "", "energy_flux_error"], [263, 3, 1, "", "evaluate"], [263, 3, 1, "", "evaluate_error"], [263, 3, 1, "", "freeze"], [263, 3, 1, "", "from_dict"], [263, 3, 1, "", "from_parameters"], [263, 2, 1, "", "frozen"], [263, 3, 1, "", "integral"], [263, 3, 1, "", "integral_error"], [263, 3, 1, "", "inverse"], [263, 3, 1, "", "inverse_all"], [263, 2, 1, "", "is_norm_spectral_model"], [263, 2, 1, "", "norm"], [263, 2, 1, "", "parameters"], [263, 2, 1, "", "parameters_unique_names"], [263, 2, 1, "", "pivot_energy"], [263, 3, 1, "", "plot"], [263, 3, 1, "", "plot_error"], [263, 3, 1, "", "reassign"], [263, 3, 1, "", "reference_fluxes"], [263, 3, 1, "", "spectral_index"], [263, 3, 1, "", "spectral_index_error"], [263, 2, 1, "", "tag"], [263, 3, 1, "", "to_dict"], [263, 2, 1, "", "type"], [263, 3, 1, "", "unfreeze"]], "gammapy.modeling.models.Shell2SpatialModel": [[264, 3, 1, "", "__call__"], [264, 3, 1, "", "copy"], [264, 2, 1, "", "covariance"], [264, 2, 1, "", "default_parameters"], [264, 2, 1, "", "eta"], [264, 3, 1, "", "evaluate"], [264, 3, 1, "", "evaluate_geom"], [264, 2, 1, "", "evaluation_bin_size_min"], [264, 2, 1, "", "evaluation_radius"], [264, 2, 1, "", "evaluation_region"], [264, 3, 1, "", "freeze"], [264, 3, 1, "", "from_dict"], [264, 3, 1, "", "from_parameters"], [264, 3, 1, "", "from_position"], [264, 2, 1, "", "frozen"], [264, 3, 1, "", "integrate_geom"], [264, 2, 1, "", "is_energy_dependent"], [264, 2, 1, "", "lat_0"], [264, 2, 1, "", "lon_0"], [264, 2, 1, "", "parameters"], [264, 2, 1, "", "parameters_unique_names"], [264, 2, 1, "", "phi_0"], [264, 3, 1, "", "plot"], [264, 3, 1, "", "plot_error"], [264, 3, 1, "", "plot_grid"], [264, 3, 1, "", "plot_interactive"], [264, 3, 1, "", "plot_position_error"], [264, 2, 1, "", "position"], [264, 2, 1, "", "position_error"], [264, 2, 1, "", "position_lonlat"], [264, 2, 1, "", "r_0"], [264, 2, 1, "", "r_in"], [264, 3, 1, "", "reassign"], [264, 2, 1, "", "tag"], [264, 3, 1, "", "to_dict"], [264, 3, 1, "", "to_region"], [264, 2, 1, "", "type"], [264, 3, 1, "", "unfreeze"]], "gammapy.modeling.models.ShellSpatialModel": [[265, 3, 1, "", "__call__"], [265, 3, 1, "", "copy"], [265, 2, 1, "", "covariance"], [265, 2, 1, "", "default_parameters"], [265, 3, 1, "", "evaluate"], [265, 3, 1, "", "evaluate_geom"], [265, 2, 1, "", "evaluation_bin_size_min"], [265, 2, 1, "", "evaluation_radius"], [265, 2, 1, "", "evaluation_region"], [265, 3, 1, "", "freeze"], [265, 3, 1, "", "from_dict"], [265, 3, 1, "", "from_parameters"], [265, 3, 1, "", "from_position"], [265, 2, 1, "", "frozen"], [265, 3, 1, "", "integrate_geom"], [265, 2, 1, "", "is_energy_dependent"], [265, 2, 1, "", "lat_0"], [265, 2, 1, "", "lon_0"], [265, 2, 1, "", "parameters"], [265, 2, 1, "", "parameters_unique_names"], [265, 2, 1, "", "phi_0"], [265, 3, 1, "", "plot"], [265, 3, 1, "", "plot_error"], [265, 3, 1, "", "plot_grid"], [265, 3, 1, "", "plot_interactive"], [265, 3, 1, "", "plot_position_error"], [265, 2, 1, "", "position"], [265, 2, 1, "", "position_error"], [265, 2, 1, "", "position_lonlat"], [265, 2, 1, "", "radius"], [265, 3, 1, "", "reassign"], [265, 2, 1, "", "tag"], [265, 3, 1, "", "to_dict"], [265, 3, 1, "", "to_region"], [265, 2, 1, "", "type"], [265, 3, 1, "", "unfreeze"], [265, 2, 1, "", "width"]], "gammapy.modeling.models.SineTemporalModel": [[266, 3, 1, "", "__call__"], [266, 2, 1, "", "amp"], [266, 3, 1, "", "copy"], [266, 2, 1, "", "covariance"], [266, 2, 1, "", "default_parameters"], [266, 3, 1, "", "evaluate"], [266, 3, 1, "", "freeze"], [266, 3, 1, "", "from_dict"], [266, 3, 1, "", "from_parameters"], [266, 2, 1, "", "frozen"], [266, 3, 1, "", "integral"], [266, 2, 1, "", "is_energy_dependent"], [266, 2, 1, "", "omega"], [266, 2, 1, "", "parameters"], [266, 2, 1, "", "parameters_unique_names"], [266, 3, 1, "", "plot"], [266, 3, 1, "", "reassign"], [266, 2, 1, "", "reference_time"], [266, 3, 1, "", "sample_time"], [266, 2, 1, "", "t_ref"], [266, 2, 1, "", "tag"], [266, 3, 1, "", "time_sum"], [266, 3, 1, "", "to_dict"], [266, 2, 1, "", "type"], [266, 3, 1, "", "unfreeze"]], "gammapy.modeling.models.SkyModel": [[267, 3, 1, "", "__call__"], [267, 3, 1, "", "contributes"], [267, 3, 1, "", "copy"], [267, 2, 1, "", "covariance"], [267, 3, 1, "", "create"], [267, 2, 1, "", "default_parameters"], [267, 3, 1, "", "evaluate"], [267, 3, 1, "", "evaluate_geom"], [267, 2, 1, "", "evaluation_bin_size_min"], [267, 2, 1, "", "evaluation_radius"], [267, 2, 1, "", "evaluation_region"], [267, 2, 1, "", "frame"], [267, 3, 1, "", "freeze"], [267, 3, 1, "", "from_dict"], [267, 3, 1, "", "from_parameters"], [267, 2, 1, "", "frozen"], [267, 3, 1, "", "integrate_geom"], [267, 2, 1, "", "name"], [267, 2, 1, "", "parameters"], [267, 2, 1, "", "parameters_unique_names"], [267, 2, 1, "", "position"], [267, 2, 1, "", "position_lonlat"], [267, 3, 1, "", "reassign"], [267, 2, 1, "", "spatial_model"], [267, 2, 1, "", "spectral_model"], [267, 2, 1, "", "tag"], [267, 2, 1, "", "temporal_model"], [267, 3, 1, "", "to_dict"], [267, 2, 1, "", "type"], [267, 3, 1, "", "unfreeze"]], "gammapy.modeling.models.SmoothBrokenPowerLawSpectralModel": [[268, 3, 1, "", "__call__"], [268, 2, 1, "", "amplitude"], [268, 2, 1, "", "beta"], [268, 3, 1, "", "copy"], [268, 2, 1, "", "covariance"], [268, 2, 1, "", "default_parameters"], [268, 2, 1, "", "ebreak"], [268, 3, 1, "", "energy_flux"], [268, 3, 1, "", "energy_flux_error"], [268, 3, 1, "", "evaluate"], [268, 3, 1, "", "evaluate_error"], [268, 3, 1, "", "freeze"], [268, 3, 1, "", "from_dict"], [268, 3, 1, "", "from_parameters"], [268, 2, 1, "", "frozen"], [268, 2, 1, "", "index1"], [268, 2, 1, "", "index2"], [268, 3, 1, "", "integral"], [268, 3, 1, "", "integral_error"], [268, 3, 1, "", "inverse"], [268, 3, 1, "", "inverse_all"], [268, 2, 1, "", "is_norm_spectral_model"], [268, 2, 1, "", "parameters"], [268, 2, 1, "", "parameters_unique_names"], [268, 2, 1, "", "pivot_energy"], [268, 3, 1, "", "plot"], [268, 3, 1, "", "plot_error"], [268, 3, 1, "", "reassign"], [268, 2, 1, "", "reference"], [268, 3, 1, "", "reference_fluxes"], [268, 3, 1, "", "spectral_index"], [268, 3, 1, "", "spectral_index_error"], [268, 2, 1, "", "tag"], [268, 3, 1, "", "to_dict"], [268, 2, 1, "", "type"], [268, 3, 1, "", "unfreeze"]], "gammapy.modeling.models.SpatialModel": [[269, 3, 1, "", "__call__"], [269, 3, 1, "", "copy"], [269, 2, 1, "", "covariance"], [269, 2, 1, "", "default_parameters"], [269, 3, 1, "", "evaluate_geom"], [269, 2, 1, "", "evaluation_bin_size_min"], [269, 2, 1, "", "evaluation_radius"], [269, 2, 1, "", "evaluation_region"], [269, 3, 1, "", "freeze"], [269, 3, 1, "", "from_dict"], [269, 3, 1, "", "from_parameters"], [269, 3, 1, "", "from_position"], [269, 2, 1, "", "frozen"], [269, 3, 1, "", "integrate_geom"], [269, 2, 1, "", "is_energy_dependent"], [269, 2, 1, "", "parameters"], [269, 2, 1, "", "parameters_unique_names"], [269, 2, 1, "", "phi_0"], [269, 3, 1, "", "plot"], [269, 3, 1, "", "plot_error"], [269, 3, 1, "", "plot_grid"], [269, 3, 1, "", "plot_interactive"], [269, 3, 1, "", "plot_position_error"], [269, 2, 1, "", "position"], [269, 2, 1, "", "position_error"], [269, 2, 1, "", "position_lonlat"], [269, 3, 1, "", "reassign"], [269, 3, 1, "", "to_dict"], [269, 2, 1, "", "type"], [269, 3, 1, "", "unfreeze"]], "gammapy.modeling.models.SpectralModel": [[270, 3, 1, "", "__call__"], [270, 3, 1, "", "copy"], [270, 2, 1, "", "covariance"], [270, 2, 1, "", "default_parameters"], [270, 3, 1, "", "energy_flux"], [270, 3, 1, "", "energy_flux_error"], [270, 3, 1, "", "evaluate_error"], [270, 3, 1, "", "freeze"], [270, 3, 1, "", "from_dict"], [270, 3, 1, "", "from_parameters"], [270, 2, 1, "", "frozen"], [270, 3, 1, "", "integral"], [270, 3, 1, "", "integral_error"], [270, 3, 1, "", "inverse"], [270, 3, 1, "", "inverse_all"], [270, 2, 1, "", "is_norm_spectral_model"], [270, 2, 1, "", "parameters"], [270, 2, 1, "", "parameters_unique_names"], [270, 2, 1, "", "pivot_energy"], [270, 3, 1, "", "plot"], [270, 3, 1, "", "plot_error"], [270, 3, 1, "", "reassign"], [270, 3, 1, "", "reference_fluxes"], [270, 3, 1, "", "spectral_index"], [270, 3, 1, "", "spectral_index_error"], [270, 3, 1, "", "to_dict"], [270, 2, 1, "", "type"], [270, 3, 1, "", "unfreeze"]], "gammapy.modeling.models.SuperExpCutoffPowerLaw3FGLSpectralModel": [[271, 3, 1, "", "__call__"], [271, 2, 1, "", "amplitude"], [271, 3, 1, "", "copy"], [271, 2, 1, "", "covariance"], [271, 2, 1, "", "default_parameters"], [271, 2, 1, "", "ecut"], [271, 3, 1, "", "energy_flux"], [271, 3, 1, "", "energy_flux_error"], [271, 3, 1, "", "evaluate"], [271, 3, 1, "", "evaluate_error"], [271, 3, 1, "", "freeze"], [271, 3, 1, "", "from_dict"], [271, 3, 1, "", "from_parameters"], [271, 2, 1, "", "frozen"], [271, 2, 1, "", "index_1"], [271, 2, 1, "", "index_2"], [271, 3, 1, "", "integral"], [271, 3, 1, "", "integral_error"], [271, 3, 1, "", "inverse"], [271, 3, 1, "", "inverse_all"], [271, 2, 1, "", "is_norm_spectral_model"], [271, 2, 1, "", "parameters"], [271, 2, 1, "", "parameters_unique_names"], [271, 2, 1, "", "pivot_energy"], [271, 3, 1, "", "plot"], [271, 3, 1, "", "plot_error"], [271, 3, 1, "", "reassign"], [271, 2, 1, "", "reference"], [271, 3, 1, "", "reference_fluxes"], [271, 3, 1, "", "spectral_index"], [271, 3, 1, "", "spectral_index_error"], [271, 2, 1, "", "tag"], [271, 3, 1, "", "to_dict"], [271, 2, 1, "", "type"], [271, 3, 1, "", "unfreeze"]], "gammapy.modeling.models.SuperExpCutoffPowerLaw4FGLDR3SpectralModel": [[272, 3, 1, "", "__call__"], [272, 2, 1, "", "amplitude"], [272, 3, 1, "", "copy"], [272, 2, 1, "", "covariance"], [272, 2, 1, "", "default_parameters"], [272, 2, 1, "", "e_peak"], [272, 3, 1, "", "energy_flux"], [272, 3, 1, "", "energy_flux_error"], [272, 3, 1, "", "evaluate"], [272, 3, 1, "", "evaluate_error"], [272, 2, 1, "", "expfactor"], [272, 3, 1, "", "freeze"], [272, 3, 1, "", "from_dict"], [272, 3, 1, "", "from_parameters"], [272, 2, 1, "", "frozen"], [272, 2, 1, "", "index_1"], [272, 2, 1, "", "index_2"], [272, 3, 1, "", "integral"], [272, 3, 1, "", "integral_error"], [272, 3, 1, "", "inverse"], [272, 3, 1, "", "inverse_all"], [272, 2, 1, "", "is_norm_spectral_model"], [272, 2, 1, "", "parameters"], [272, 2, 1, "", "parameters_unique_names"], [272, 2, 1, "", "pivot_energy"], [272, 3, 1, "", "plot"], [272, 3, 1, "", "plot_error"], [272, 3, 1, "", "reassign"], [272, 2, 1, "", "reference"], [272, 3, 1, "", "reference_fluxes"], [272, 3, 1, "", "spectral_index"], [272, 3, 1, "", "spectral_index_error"], [272, 2, 1, "", "tag"], [272, 3, 1, "", "to_dict"], [272, 2, 1, "", "type"], [272, 3, 1, "", "unfreeze"]], "gammapy.modeling.models.SuperExpCutoffPowerLaw4FGLSpectralModel": [[273, 3, 1, "", "__call__"], [273, 2, 1, "", "amplitude"], [273, 3, 1, "", "copy"], [273, 2, 1, "", "covariance"], [273, 2, 1, "", "default_parameters"], [273, 3, 1, "", "energy_flux"], [273, 3, 1, "", "energy_flux_error"], [273, 3, 1, "", "evaluate"], [273, 3, 1, "", "evaluate_error"], [273, 2, 1, "", "expfactor"], [273, 3, 1, "", "freeze"], [273, 3, 1, "", "from_dict"], [273, 3, 1, "", "from_parameters"], [273, 2, 1, "", "frozen"], [273, 2, 1, "", "index_1"], [273, 2, 1, "", "index_2"], [273, 3, 1, "", "integral"], [273, 3, 1, "", "integral_error"], [273, 3, 1, "", "inverse"], [273, 3, 1, "", "inverse_all"], [273, 2, 1, "", "is_norm_spectral_model"], [273, 2, 1, "", "parameters"], [273, 2, 1, "", "parameters_unique_names"], [273, 2, 1, "", "pivot_energy"], [273, 3, 1, "", "plot"], [273, 3, 1, "", "plot_error"], [273, 3, 1, "", "reassign"], [273, 2, 1, "", "reference"], [273, 3, 1, "", "reference_fluxes"], [273, 3, 1, "", "spectral_index"], [273, 3, 1, "", "spectral_index_error"], [273, 2, 1, "", "tag"], [273, 3, 1, "", "to_dict"], [273, 2, 1, "", "type"], [273, 3, 1, "", "unfreeze"]], "gammapy.modeling.models.TemplateNDSpatialModel": [[275, 3, 1, "", "__call__"], [275, 3, 1, "", "copy"], [275, 2, 1, "", "covariance"], [275, 2, 1, "", "default_parameters"], [275, 3, 1, "", "evaluate"], [275, 3, 1, "", "evaluate_geom"], [275, 2, 1, "", "evaluation_bin_size_min"], [275, 2, 1, "", "evaluation_radius"], [275, 2, 1, "", "evaluation_region"], [275, 3, 1, "", "freeze"], [275, 3, 1, "", "from_dict"], [275, 3, 1, "", "from_parameters"], [275, 3, 1, "", "from_position"], [275, 2, 1, "", "frozen"], [275, 3, 1, "", "integrate_geom"], [275, 2, 1, "", "is_energy_dependent"], [275, 2, 1, "", "map"], [275, 2, 1, "", "parameters"], [275, 2, 1, "", "parameters_unique_names"], [275, 2, 1, "", "phi_0"], [275, 3, 1, "", "plot"], [275, 3, 1, "", "plot_error"], [275, 3, 1, "", "plot_grid"], [275, 3, 1, "", "plot_interactive"], [275, 3, 1, "", "plot_position_error"], [275, 2, 1, "", "position"], [275, 2, 1, "", "position_error"], [275, 2, 1, "", "position_lonlat"], [275, 3, 1, "", "reassign"], [275, 2, 1, "", "tag"], [275, 3, 1, "", "to_dict"], [275, 2, 1, "", "type"], [275, 3, 1, "", "unfreeze"], [275, 3, 1, "", "write"]], "gammapy.modeling.models.TemplateNDSpectralModel": [[276, 3, 1, "", "__call__"], [276, 3, 1, "", "copy"], [276, 2, 1, "", "covariance"], [276, 2, 1, "", "default_parameters"], [276, 3, 1, "", "energy_flux"], [276, 3, 1, "", "energy_flux_error"], [276, 3, 1, "", "evaluate"], [276, 3, 1, "", "evaluate_error"], [276, 3, 1, "", "freeze"], [276, 3, 1, "", "from_dict"], [276, 3, 1, "", "from_parameters"], [276, 2, 1, "", "frozen"], [276, 3, 1, "", "integral"], [276, 3, 1, "", "integral_error"], [276, 3, 1, "", "inverse"], [276, 3, 1, "", "inverse_all"], [276, 2, 1, "", "is_norm_spectral_model"], [276, 2, 1, "", "map"], [276, 2, 1, "", "parameters"], [276, 2, 1, "", "parameters_unique_names"], [276, 2, 1, "", "pivot_energy"], [276, 3, 1, "", "plot"], [276, 3, 1, "", "plot_error"], [276, 3, 1, "", "reassign"], [276, 3, 1, "", "reference_fluxes"], [276, 3, 1, "", "spectral_index"], [276, 3, 1, "", "spectral_index_error"], [276, 2, 1, "", "tag"], [276, 3, 1, "", "to_dict"], [276, 2, 1, "", "type"], [276, 3, 1, "", "unfreeze"], [276, 3, 1, "", "write"]], "gammapy.modeling.models.TemplateNPredModel": [[277, 3, 1, "", "copy"], [277, 2, 1, "", "covariance"], [277, 3, 1, "", "cutout"], [277, 2, 1, "", "default_parameters"], [277, 2, 1, "", "energy_center"], [277, 3, 1, "", "evaluate"], [277, 2, 1, "", "evaluation_radius"], [277, 3, 1, "", "freeze"], [277, 3, 1, "", "from_dict"], [277, 3, 1, "", "from_parameters"], [277, 2, 1, "", "frozen"], [277, 2, 1, "", "map"], [277, 2, 1, "", "name"], [277, 2, 1, "", "parameters"], [277, 2, 1, "", "parameters_unique_names"], [277, 2, 1, "", "position"], [277, 3, 1, "", "reassign"], [277, 3, 1, "", "slice_by_energy"], [277, 2, 1, "", "spectral_model"], [277, 3, 1, "", "stack"], [277, 2, 1, "", "tag"], [277, 3, 1, "", "to_dict"], [277, 2, 1, "", "type"], [277, 3, 1, "", "unfreeze"], [277, 3, 1, "", "write"]], "gammapy.modeling.models.TemplatePhaseCurveTemporalModel": [[278, 3, 1, "", "__call__"], [278, 3, 1, "", "copy"], [278, 2, 1, "", "covariance"], [278, 2, 1, "", "default_parameters"], [278, 3, 1, "", "evaluate"], [278, 2, 1, "", "f0"], [278, 2, 1, "", "f1"], [278, 2, 1, "", "f2"], [278, 3, 1, "", "freeze"], [278, 3, 1, "", "from_dict"], [278, 3, 1, "", "from_parameters"], [278, 2, 1, "", "frozen"], [278, 3, 1, "", "integral"], [278, 2, 1, "", "is_energy_dependent"], [278, 2, 1, "", "parameters"], [278, 2, 1, "", "parameters_unique_names"], [278, 2, 1, "", "phi_ref"], [278, 3, 1, "", "plot"], [278, 3, 1, "", "plot_phasogram"], [278, 3, 1, "", "read"], [278, 3, 1, "", "reassign"], [278, 2, 1, "", "reference_time"], [278, 3, 1, "", "sample_time"], [278, 2, 1, "", "t_ref"], [278, 2, 1, "", "tag"], [278, 3, 1, "", "time_sum"], [278, 3, 1, "", "to_dict"], [278, 2, 1, "", "type"], [278, 3, 1, "", "unfreeze"], [278, 3, 1, "", "write"]], "gammapy.modeling.models.TemplateSpatialModel": [[279, 3, 1, "", "__call__"], [279, 3, 1, "", "copy"], [279, 2, 1, "", "covariance"], [279, 2, 1, "", "default_parameters"], [279, 3, 1, "", "evaluate"], [279, 3, 1, "", "evaluate_geom"], [279, 2, 1, "", "evaluation_bin_size_min"], [279, 2, 1, "", "evaluation_radius"], [279, 2, 1, "", "evaluation_region"], [279, 3, 1, "", "freeze"], [279, 3, 1, "", "from_dict"], [279, 3, 1, "", "from_parameters"], [279, 3, 1, "", "from_position"], [279, 2, 1, "", "frozen"], [279, 3, 1, "", "integrate_geom"], [279, 2, 1, "", "is_energy_dependent"], [279, 2, 1, "", "lat_0"], [279, 2, 1, "", "lon_0"], [279, 2, 1, "", "map"], [279, 2, 1, "", "map_center"], [279, 2, 1, "", "parameters"], [279, 2, 1, "", "parameters_unique_names"], [279, 2, 1, "", "phi_0"], [279, 3, 1, "", "plot"], [279, 3, 1, "", "plot_error"], [279, 3, 1, "", "plot_grid"], [279, 3, 1, "", "plot_interactive"], [279, 3, 1, "", "plot_position_error"], [279, 2, 1, "", "position"], [279, 2, 1, "", "position_error"], [279, 2, 1, "", "position_lonlat"], [279, 3, 1, "", "read"], [279, 3, 1, "", "reassign"], [279, 2, 1, "", "tag"], [279, 3, 1, "", "to_dict"], [279, 3, 1, "", "to_region"], [279, 2, 1, "", "type"], [279, 3, 1, "", "unfreeze"], [279, 3, 1, "", "write"]], "gammapy.modeling.models.TemplateSpectralModel": [[280, 3, 1, "", "__call__"], [280, 3, 1, "", "copy"], [280, 2, 1, "", "covariance"], [280, 2, 1, "", "default_parameters"], [280, 3, 1, "", "energy_flux"], [280, 3, 1, "", "energy_flux_error"], [280, 3, 1, "", "evaluate"], [280, 3, 1, "", "evaluate_error"], [280, 3, 1, "", "freeze"], [280, 3, 1, "", "from_dict"], [280, 3, 1, "", "from_parameters"], [280, 3, 1, "", "from_region_map"], [280, 2, 1, "", "frozen"], [280, 3, 1, "", "integral"], [280, 3, 1, "", "integral_error"], [280, 3, 1, "", "inverse"], [280, 3, 1, "", "inverse_all"], [280, 2, 1, "", "is_norm_spectral_model"], [280, 2, 1, "", "parameters"], [280, 2, 1, "", "parameters_unique_names"], [280, 2, 1, "", "pivot_energy"], [280, 3, 1, "", "plot"], [280, 3, 1, "", "plot_error"], [280, 3, 1, "", "read_xspec_model"], [280, 3, 1, "", "reassign"], [280, 3, 1, "", "reference_fluxes"], [280, 3, 1, "", "spectral_index"], [280, 3, 1, "", "spectral_index_error"], [280, 2, 1, "", "tag"], [280, 3, 1, "", "to_dict"], [280, 2, 1, "", "type"], [280, 3, 1, "", "unfreeze"]], "gammapy.modeling.models.TemporalModel": [[281, 3, 1, "", "__call__"], [281, 3, 1, "", "copy"], [281, 2, 1, "", "covariance"], [281, 2, 1, "", "default_parameters"], [281, 3, 1, "", "freeze"], [281, 3, 1, "", "from_dict"], [281, 3, 1, "", "from_parameters"], [281, 2, 1, "", "frozen"], [281, 3, 1, "", "integral"], [281, 2, 1, "", "is_energy_dependent"], [281, 2, 1, "", "parameters"], [281, 2, 1, "", "parameters_unique_names"], [281, 3, 1, "", "plot"], [281, 3, 1, "", "reassign"], [281, 2, 1, "", "reference_time"], [281, 3, 1, "", "sample_time"], [281, 3, 1, "", "time_sum"], [281, 3, 1, "", "to_dict"], [281, 2, 1, "", "type"], [281, 3, 1, "", "unfreeze"]], "gammapy.modeling.models.UniformPrior": [[282, 3, 1, "", "__call__"], [282, 3, 1, "", "copy"], [282, 2, 1, "", "covariance"], [282, 2, 1, "", "default_parameters"], [282, 3, 1, "", "evaluate"], [282, 3, 1, "", "freeze"], [282, 3, 1, "", "from_dict"], [282, 3, 1, "", "from_parameters"], [282, 2, 1, "", "frozen"], [282, 2, 1, "", "max"], [282, 2, 1, "", "min"], [282, 2, 1, "", "parameters"], [282, 2, 1, "", "parameters_unique_names"], [282, 3, 1, "", "reassign"], [282, 2, 1, "", "tag"], [282, 3, 1, "", "to_dict"], [282, 2, 1, "", "type"], [282, 3, 1, "", "unfreeze"], [282, 2, 1, "", "weight"]], "gammapy.modeling.models.utils": [[289, 4, 1, "", "read_hermes_cube"]], "gammapy.stats": [[292, 1, 1, "", "CashCountsStatistic"], [293, 4, 1, "", "TimmerKonig_lightcurve_simulator"], [294, 1, 1, "", "WStatCountsStatistic"], [295, 4, 1, "", "cash"], [296, 4, 1, "", "cash_sum_cython"], [297, 4, 1, "", "compute_chisq"], [298, 4, 1, "", "compute_flux_doubling"], [299, 4, 1, "", "compute_fpp"], [300, 4, 1, "", "compute_fvar"], [301, 4, 1, "", "cstat"], [302, 4, 1, "", "discrete_correlation"], [303, 4, 1, "", "f_cash_root_cython"], [304, 4, 1, "", "get_wstat_gof_terms"], [305, 4, 1, "", "get_wstat_mu_bkg"], [306, 4, 1, "", "norm_bounds_cython"], [307, 4, 1, "", "sigma_to_ts"], [308, 4, 1, "", "structure_function"], [309, 4, 1, "", "ts_to_sigma"], [310, 4, 1, "", "weighted_cash_sum_cython"], [311, 4, 1, "", "wstat"]], "gammapy.stats.CashCountsStatistic": [[292, 3, 1, "", "compute_errn"], [292, 3, 1, "", "compute_errp"], [292, 3, 1, "", "compute_upper_limit"], [292, 2, 1, "", "error"], [292, 3, 1, "", "info_dict"], [292, 2, 1, "", "n_bkg"], [292, 2, 1, "", "n_sig"], [292, 3, 1, "", "n_sig_matching_significance"], [292, 2, 1, "", "p_value"], [292, 2, 1, "", "sqrt_ts"], [292, 2, 1, "", "stat_max"], [292, 2, 1, "", "stat_null"], [292, 3, 1, "", "sum"], [292, 2, 1, "", "ts"]], "gammapy.stats.WStatCountsStatistic": [[294, 3, 1, "", "compute_errn"], [294, 3, 1, "", "compute_errp"], [294, 3, 1, "", "compute_upper_limit"], [294, 2, 1, "", "error"], [294, 3, 1, "", "info_dict"], [294, 2, 1, "", "n_bkg"], [294, 2, 1, "", "n_sig"], [294, 3, 1, "", "n_sig_matching_significance"], [294, 2, 1, "", "p_value"], [294, 2, 1, "", "sqrt_ts"], [294, 2, 1, "", "stat_max"], [294, 2, 1, "", "stat_null"], [294, 3, 1, "", "sum"], [294, 2, 1, "", "ts"]], "gammapy.utils": [[13, 0, 0, "-", "cluster"], [13, 0, 0, "-", "coordinates"], [13, 0, 0, "-", "fits"], [13, 0, 0, "-", "integrate"], [13, 0, 0, "-", "interpolation"], [13, 0, 0, "-", "parallel"], [13, 0, 0, "-", "random"], [13, 0, 0, "-", "regions"], [13, 0, 0, "-", "scripts"], [13, 0, 0, "-", "table"], [13, 0, 0, "-", "testing"], [13, 0, 0, "-", "time"], [13, 0, 0, "-", "units"]], "gammapy.utils.cluster": [[312, 4, 1, "", "hierarchical_clustering"], [313, 4, 1, "", "standard_scaler"]], "gammapy.utils.coordinates": [[314, 5, 1, "", "D_SUN_TO_GALACTIC_CENTER"], [315, 4, 1, "", "cartesian"], [316, 4, 1, "", "fov_to_sky"], [317, 4, 1, "", "galactic"], [318, 4, 1, "", "motion_since_birth"], [319, 4, 1, "", "polar"], [320, 4, 1, "", "sky_to_fov"], [321, 4, 1, "", "velocity_glon_glat"]], "gammapy.utils.fits": [[322, 1, 1, "", "HDULocation"], [323, 1, 1, "", "LazyFitsData"], [324, 4, 1, "", "earth_location_from_dict"]], "gammapy.utils.fits.HDULocation": [[322, 3, 1, "", "get_hdu"], [322, 3, 1, "", "info"], [322, 3, 1, "", "load"], [322, 3, 1, "", "path"]], "gammapy.utils.integrate": [[325, 4, 1, "", "trapz_loglog"]], "gammapy.utils.interpolation": [[326, 1, 1, "", "ScaledRegularGridInterpolator"], [327, 4, 1, "", "interpolate_profile"], [328, 4, 1, "", "interpolation_scale"]], "gammapy.utils.interpolation.ScaledRegularGridInterpolator": [[326, 3, 1, "", "__call__"]], "gammapy.utils.parallel": [[329, 5, 1, "", "BACKEND_DEFAULT"], [330, 5, 1, "", "METHOD_DEFAULT"], [331, 5, 1, "", "METHOD_KWARGS_DEFAULT"], [332, 5, 1, "", "N_JOBS_DEFAULT"], [333, 5, 1, "", "POOL_KWARGS_DEFAULT"], [334, 1, 1, "", "multiprocessing_manager"], [335, 4, 1, "", "run_multiprocessing"]], "gammapy.utils.random": [[336, 1, 1, "", "InverseCDFSampler"], [337, 4, 1, "", "draw"], [338, 4, 1, "", "get_random_state"], [339, 4, 1, "", "normalize"], [340, 4, 1, "", "pdf"], [341, 4, 1, "", "sample_powerlaw"], [342, 4, 1, "", "sample_sphere"], [343, 4, 1, "", "sample_sphere_distance"], [344, 4, 1, "", "sample_times"]], "gammapy.utils.random.InverseCDFSampler": [[336, 3, 1, "", "sample"], [336, 3, 1, "", "sample_axis"]], "gammapy.utils.regions": [[345, 4, 1, "", "compound_region_to_regions"], [346, 4, 1, "", "make_concentric_annulus_sky_regions"], [347, 4, 1, "", "make_orthogonal_rectangle_sky_regions"], [348, 4, 1, "", "region_to_frame"], [349, 4, 1, "", "regions_to_compound_region"]], "gammapy.utils.scripts": [[350, 4, 1, "", "from_yaml"], [351, 4, 1, "", "get_images_paths"], [352, 4, 1, "", "make_path"], [353, 4, 1, "", "read_yaml"], [354, 4, 1, "", "recursive_merge_dicts"], [355, 4, 1, "", "to_yaml"], [356, 4, 1, "", "write_yaml"]], "gammapy.utils.table": [[357, 4, 1, "", "hstack_columns"], [358, 4, 1, "", "table_row_to_dict"], [359, 4, 1, "", "table_standardise_units_copy"], [360, 4, 1, "", "table_standardise_units_inplace"]], "gammapy.utils.testing": [[361, 1, 1, "", "Checker"], [362, 4, 1, "", "assert_quantity_allclose"], [363, 4, 1, "", "assert_skycoord_allclose"], [364, 4, 1, "", "assert_time_allclose"], [365, 4, 1, "", "mpl_plot_check"], [366, 4, 1, "", "requires_data"], [367, 4, 1, "", "requires_dependency"]], "gammapy.utils.testing.Checker": [[361, 3, 1, "", "run"]], "gammapy.utils.time": [[368, 4, 1, "", "absolute_time"], [369, 4, 1, "", "time_ref_from_dict"], [370, 4, 1, "", "time_ref_to_dict"], [371, 4, 1, "", "time_relative_to_ref"]], "gammapy.utils.units": [[372, 4, 1, "", "standardise_unit"], [373, 4, 1, "", "unit_from_fits_image_hdu"]], "gammapy.visualization": [[374, 1, 1, "", "MapPanelPlotter"], [375, 4, 1, "", "add_colorbar"], [376, 4, 1, "", "annotate_heatmap"], [377, 4, 1, "", "colormap_hess"], [378, 4, 1, "", "colormap_milagro"], [379, 4, 1, "", "plot_contour_line"], [380, 4, 1, "", "plot_distribution"], [381, 4, 1, "", "plot_heatmap"], [382, 4, 1, "", "plot_map_rgb"], [383, 4, 1, "", "plot_npred_signal"], [384, 4, 1, "", "plot_spectrum_datasets_off_regions"], [385, 4, 1, "", "plot_theta_squared_table"]], "gammapy.visualization.MapPanelPlotter": [[374, 3, 1, "", "plot"], [374, 3, 1, "", "plot_panel"]]}, "objnames": {"0": ["py", "module", "Python module"], "1": ["py", "class", "Python class"], "2": ["py", "attribute", "Python attribute"], "3": ["py", "method", "Python method"], "4": ["py", "function", "Python function"], "5": ["py", "data", "Python data"], "6": ["std", "cmdoption", "program option"]}, "objtypes": {"0": "py:module", "1": "py:class", "2": "py:attribute", "3": "py:method", "4": "py:function", "5": "py:data", "6": "std:cmdoption"}, "terms": {"": [16, 19, 20, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 41, 51, 52, 53, 67, 82, 83, 84, 86, 87, 90, 91, 92, 95, 100, 102, 103, 104, 105, 106, 109, 110, 111, 126, 127, 128, 132, 136, 144, 150, 151, 152, 156, 176, 182, 203, 209, 221, 225, 226, 231, 233, 234, 238, 239, 241, 242, 243, 245, 249, 251, 252, 256, 258, 259, 266, 267, 268, 271, 272, 273, 278, 281, 283, 284, 290, 300, 322, 372, 376, 377, 384, 387, 388, 390, 392, 397, 398, 399, 401, 403, 404, 405, 406, 407, 410, 413, 417, 418, 420, 421, 423, 424, 425, 426, 454, 455, 457, 458, 459, 460, 462, 464, 466, 467, 468, 470, 471, 473, 474, 475, 476, 477, 479, 482, 484, 485, 486, 487, 489, 490, 491, 492, 493, 494, 495, 497, 498, 499, 500, 501, 502, 503, 504, 506, 507, 508, 509, 511, 512, 513, 516, 519, 521, 527, 528, 529, 530, 533, 535, 540, 552, 553, 554, 555, 557, 558, 559, 560, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 585, 586, 587, 588, 589, 590, 591, 592, 593, 597, 598, 599, 600, 602], "0": [11, 13, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 31, 33, 34, 35, 38, 39, 42, 47, 50, 51, 52, 53, 67, 71, 75, 77, 83, 85, 87, 88, 89, 90, 91, 94, 96, 101, 103, 104, 105, 106, 109, 110, 111, 112, 113, 114, 115, 117, 120, 122, 124, 125, 126, 127, 128, 129, 130, 132, 134, 135, 136, 144, 145, 147, 150, 151, 152, 153, 155, 156, 157, 158, 160, 163, 164, 165, 166, 167, 168, 169, 171, 173, 176, 179, 180, 184, 194, 195, 196, 197, 198, 199, 200, 201, 204, 205, 206, 207, 208, 209, 210, 211, 212, 214, 217, 219, 221, 222, 225, 226, 227, 228, 229, 231, 232, 233, 234, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 248, 251, 252, 254, 255, 256, 257, 258, 259, 263, 264, 265, 266, 267, 268, 270, 271, 272, 273, 275, 276, 278, 279, 280, 281, 282, 288, 290, 292, 293, 294, 295, 298, 299, 300, 301, 302, 307, 309, 312, 313, 332, 336, 343, 344, 364, 375, 377, 378, 382, 384, 387, 388, 391, 394, 398, 399, 401, 402, 403, 404, 405, 406, 407, 409, 410, 411, 412, 413, 414, 415, 416, 417, 421, 424, 425, 453, 454, 455, 457, 458, 459, 460, 462, 463, 464, 465, 466, 467, 468, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 481, 482, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 512, 515, 517, 518, 519, 521, 522, 523, 527, 529, 533, 537, 539, 542, 544, 545, 546, 547, 548, 550, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 598, 599, 600, 601, 603], "00": [67, 87, 88, 89, 91, 102, 200, 388, 402, 457, 458, 459, 460, 463, 464, 465, 466, 467, 468, 470, 472, 473, 474, 477, 478, 481, 482, 485, 486, 488, 489, 492, 493, 494, 495, 497, 498, 499, 501, 502, 504, 505, 507, 508, 509, 512, 515, 517, 518, 519, 521, 522, 550, 554, 556, 560, 561, 582, 583, 594, 602], "000": [67, 87, 88, 91, 127, 402, 459, 462, 464, 465, 467, 468, 473, 474, 475, 477, 478, 482, 485, 486, 489, 492, 493, 494, 499, 501, 502, 508, 517, 518, 521, 550, 603], "0000": 413, "000000": 492, "000000000000002": 499, "00000000000001": 467, "00000000000003": 487, "00000000000004": 492, "0000000000016": 86, "0000000000018": 94, "000000000002": 477, "0000000000064": 477, "000000000007": 492, "00000000001": 492, "00000000e": [495, 497], "00000001": 86, "0000000e": 497, "00000143": [388, 602], "0000e": [102, 459, 460, 464, 465, 466, 467, 470, 473, 482, 485, 486, 495, 502, 504, 519, 582], "0001": [19, 20, 26, 221, 222, 225, 229, 231, 232, 233, 238, 244, 245, 248, 252, 254, 256, 257, 258, 263, 268, 270, 271, 272, 273, 276, 280, 378, 475], "00010298": 493, "00015": 494, "000150": 462, "0002": [462, 521], "00020": 462, "0002000": 462, "0003": 475, "00050": 462, "000500": 462, "0006": 462, "00074287037": [94, 478], "000742870370370241": 94, "0008": 492, "0009": 462, "000e": [459, 464, 467, 470, 473, 474, 482, 486, 492, 495, 502, 504, 519, 521, 582], "000true": 462, "001": [50, 150, 151, 152, 153, 156, 157, 158, 160, 163, 165, 167, 168, 196, 197, 199, 205, 208, 209, 364, 477, 495, 559], "0016288e": 497, "001e": 67, "002018": 508, "0025508e": 497, "0028272e": 497, "0029": 412, "002924909437196891": 518, "002e": [67, 465], "003": [487, 501, 508], "003026327991562108": 474, "003105928246293051": 518, "0033": 600, "0033685231218733e": 489, "0036925550396303": 467, "00375698": 242, "0037e": 486, "004": 67, "00422666667": 490, "004260": 554, "00449161": 248, "00472179200096": 416, "00490": 475, "00490483": 475, "0049409": 507, "005": 492, "00521472221220211": 474, "005911103564621736": 476, "006421": 576, "0064830e": 497, "00688029": 242, "007": 492, "0076540e": 497, "008": [492, 599], "008166963876141447": 476, "00889194478934663": 476, "00894": 521, "009": [489, 492], "00931e": 458, "009428253484623464": 476, "00e": [83, 458, 465, 468, 477, 482, 486, 487, 489, 493, 497, 498, 508, 518], "01": [39, 52, 75, 83, 87, 88, 91, 94, 103, 106, 110, 111, 113, 114, 129, 134, 136, 179, 180, 184, 194, 195, 200, 204, 207, 228, 234, 239, 241, 243, 259, 266, 388, 416, 424, 457, 458, 459, 463, 464, 466, 468, 470, 473, 474, 477, 482, 486, 487, 488, 491, 492, 493, 495, 497, 498, 499, 500, 501, 502, 504, 505, 508, 509, 518, 519, 521, 527, 532, 542, 544, 545, 548, 553, 555, 557, 570, 573, 580, 586, 587, 588, 594, 599, 602], "010": 501, "010066705375548107": 416, "010e": 67, "011": [307, 309, 501], "011872336272724": 518, "012": 501, "0122385e": 497, "01235137e": 497, "012733796525585": 503, "0139252e": 497, "014": [85, 103, 106, 110, 111, 176, 457, 465, 473, 492, 498, 512, 518, 519, 544], "0143724": 242, "0143764": 507, "01449": 83, "0145": 500, "01450": [484, 519], "0148015517529894": 416, "014811633859834": 416, "0149044e": 497, "015": 492, "01551196351647377": 242, "0163": 475, "01648855015875024": 598, "01700709977114979": 490, "0174": 506, "017442925431194484": 490, "018": 67, "018182745349064267": 474, "0183519e": 497, "0185836435996": 486, "019672": 494, "019899368286133": 474, "01e": [176, 424, 458, 492], "01t00": [87, 91, 94, 200, 388, 468, 477, 602], "01t01": 91, "01t02": 91, "02": [16, 67, 83, 94, 103, 106, 110, 111, 112, 117, 164, 171, 176, 194, 195, 196, 197, 199, 201, 204, 205, 206, 207, 208, 209, 424, 457, 458, 459, 462, 463, 464, 465, 470, 471, 473, 474, 475, 476, 477, 478, 481, 482, 484, 485, 486, 487, 488, 492, 495, 497, 498, 499, 500, 501, 502, 505, 508, 515, 518, 519, 521, 522, 542, 544, 545, 553, 554, 555, 561, 569, 576, 579], "020": [474, 492, 494], "0204081632653064": 479, "020420144596410953": 503, "021": [67, 492], "0225e": 492, "02288737": 242, "023": 492, "023472813526874605": 518, "024": 492, "02432": 492, "02471554675416": 518, "024897178551308": 416, "024e": 521, "025": [492, 508], "025119120535663": 475, "026": [53, 67, 492], "02653": [468, 475], "026891": 492, "026914": 492, "027": 67, "028": [457, 463, 464], "028549898215494e": 416, "028854": 500, "029e": [459, 492], "02e": [83, 489], "02t23": 86, "03": [67, 87, 89, 91, 206, 400, 415, 457, 458, 459, 462, 474, 475, 477, 482, 486, 492, 497, 499, 501, 503, 504, 505, 510, 512, 519, 556, 565, 568, 571], "03034567e": 494, "031": [457, 487, 488], "031847": 590, "032": 492, "0322": 67, "0322775e": 497, "033": [67, 492], "033176650892097": 96, "03383": 507, "034": 599, "0344": 67, "03447394e": 494, "03493": 494, "034e": 462, "035": 494, "0354700e": 497, "0356": 458, "0356551": 458, "036": 67, "036e": 492, "037": [457, 468, 472, 501], "03745318352059925": 592, "0375512e": 497, "0376213e": 497, "0383e": 482, "03893": 494, "039": [473, 474, 494], "03921700077803329": 474, "0395135e": 497, "03978226e": 502, "0397e": 486, "04": [30, 67, 94, 105, 126, 457, 463, 465, 467, 468, 470, 471, 473, 474, 477, 486, 487, 492, 497, 499, 502, 508, 518, 552, 553, 554, 555, 556, 557, 558, 559, 560, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 585, 586, 587, 588, 589, 590, 591, 592, 593], "040": 464, "040999": 588, "040e": 468, "041": 508, "0414": 468, "0415": 521, "041882": 492, "042": 492, "0423761": 458, "042e": 492, "043": 67, "04357249662280083": 464, "04454": 508, "0454683": 507, "046": 67, "0462798e": 497, "046649": 471, "047": 67, "0473174": 248, "0474750e": 497, "048": [473, 508], "0482342e": 497, "04897634344908595": 96, "048e": 67, "049": [462, 473], "0492e": 482, "04939e": 458, "049676": 492, "04d": 477, "04e": [482, 498], "04t15": 86, "04t22": 86, "05": [19, 20, 26, 29, 42, 67, 71, 77, 87, 91, 124, 125, 127, 135, 207, 214, 221, 222, 225, 229, 231, 232, 233, 238, 244, 245, 248, 252, 254, 256, 257, 258, 263, 268, 270, 271, 272, 273, 276, 280, 346, 415, 457, 458, 459, 460, 462, 463, 464, 468, 473, 474, 475, 478, 482, 485, 491, 492, 493, 495, 497, 498, 501, 504, 505, 507, 509, 512, 518, 519, 547, 553, 570, 572], "050": 501, "0503641": 458, "0503e": 486, "0505949e": 497, "05075": 497, "0508075688763": 492, "05088486522436142": 464, "050e": 468, "051": 501, "052": 492, "0520119e": 497, "0521468441366": 476, "05227": 492, "053": 473, "053212009682775": 503, "054833602905273e": 474, "0548e": 474, "054e": 67, "055": 492, "055e": 462, "0560": 521, "056130": 492, "05628243": 521, "05637e": 458, "05673": 521, "057": 492, "05762513693893088": 474, "058": 67, "058201": 492, "058386": 578, "05853": 468, "059": 67, "05901956e": 497, "0598579": 458, "05deg": 207, "06": [150, 151, 152, 153, 154, 156, 157, 158, 160, 163, 165, 167, 168, 195, 196, 197, 199, 204, 205, 207, 208, 209, 457, 463, 472, 473, 474, 475, 492, 493, 495, 497, 498, 499, 508, 512, 566, 567, 578, 583], "061": 521, "061224489795904": 479, "062": [477, 501, 502, 508], "0625": 502, "0628": 521, "063": 67, "0631757e": 497, "06334488877417636": 503, "064108e": 492, "06430": 475, "0643032": 475, "065071": 492, "065119": 521, "066": 464, "066442": 492, "067": 468, "068245": 492, "0689": 495, "068e": 462, "069": 67, "07": [103, 176, 362, 402, 424, 457, 462, 463, 465, 473, 475, 485, 487, 489, 492, 493, 497, 499, 501, 502, 508, 522, 574, 580, 582], "070483": 492, "0711412": 458, "072": 67, "073": [67, 594], "0739282e": 497, "074": [492, 508], "07454639": 475, "07455": 475, "0746": 521, "0748": [492, 521], "075": 67, "07512322002655547": 474, "0756e": 458, "076": [457, 491, 505, 521], "077": [458, 561], "078": 462, "07871368968": 493, "07943648658692837": 503, "07944657408": 492, "079464e": 521, "0799109224230051": 503, "07e": 487, "08": [86, 382, 424, 457, 466, 467, 470, 471, 473, 474, 482, 492, 493, 495, 498, 508, 512, 518, 519, 563], "0800792e": 497, "08075": 497, "08081469527497996": 467, "08088": 182, "080e": 468, "0811551760882139": 503, "08142": 491, "081632653061217": 479, "08191603310406206": 503, "08192": 475, "08192101": 475, "082": 492, "082691868487906": 490, "08269984": 521, "082759": 574, "082e": 127, "083": [67, 457, 479, 481, 492], "08328557573258877": 503, "0833333358168602": 464, "0833333432674408": 464, "08388624433428049": 503, "084": 67, "08447355125099419": 503, "0845515": 458, "085": [457, 481, 492], "08529426": 97, "0855013383552432": 503, "0859123667444603e": 489, "08675": 493, "086e": 492, "087": 521, "08795162606984375": 503, "087e": 492, "088742": 492, "08880368117243051": 503, "08894569035619496": 503, "089": [140, 457, 505], "0894640e": 497, "0897868126630783": 503, "089881": 492, "08e": [482, 501], "09": [33, 127, 176, 457, 459, 465, 468, 471, 473, 481, 492, 493, 497, 498, 518, 519, 521, 577, 591, 592, 600], "0902437e": 497, "0907128e": 497, "090e": 464, "0910": [257, 258], "0914": [52, 53], "093477": 475, "09348": 475, "09375": 489, "09426693227142095": 503, "094834": 492, "095": [457, 463], "095232": 492, "09562941": 521, "095707": 521, "096": 465, "0960": 521, "09607": 521, "09610314778983592": 503, "09623312838375568": 503, "09740295372903346": 503, "097e": 67, "098": [457, 594], "098903": 492, "09907043184188653": 503, "09e": 498, "0b100": 332, "0d": [129, 479, 493, 557, 603], "0e": [410, 465, 467, 468, 470, 474, 477, 482, 486, 489, 493, 494, 497, 499, 501, 502, 508, 518, 552, 553, 554, 555, 557, 558, 559, 560, 564, 565, 567, 571, 573, 574, 575, 576, 578, 579, 580, 581, 582, 585, 586, 587, 588, 589, 590, 591, 592, 593], "0f": [495, 508, 521], "0jf8tybu": 498, "0rc": 417, "0rc1": 417, "0true": 475, "0x105fd0cf8": 387, "0x105fe3b70": 387, "0x129602550": 387, "0x7f6baca842e0": 503, "0x7f6baca84d00": 503, "0x7f6baca96a00": 493, "0x7f6bad759ca0": 493, "0x7f6bad7b9220": 479, "0x7f6bad7b9bb0": 479, "0x7f6bae503550": 507, "0x7f6bae59ae20": 507, "0x7f6bae8297f0": 507, "0x7f6bae830190": 493, "0x7f6bae83b400": 507, "0x7f6bae8d2220": 504, "0x7f6baecb84f0": 493, "0x7f6baed92310": 503, "0x7f6baed92b20": 503, "0x7f6bb02da820": 502, "0x7f6bc28b7460": 582, "0x7f6bd1430a90": 490, "1": [16, 17, 18, 19, 20, 21, 22, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 35, 36, 37, 38, 39, 40, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 57, 59, 63, 66, 67, 71, 72, 74, 75, 77, 78, 83, 86, 87, 88, 90, 91, 95, 96, 101, 102, 103, 106, 110, 111, 112, 116, 117, 119, 120, 124, 127, 128, 129, 130, 132, 133, 136, 144, 145, 150, 151, 152, 153, 155, 156, 157, 158, 163, 164, 165, 166, 167, 169, 171, 176, 179, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 204, 205, 206, 207, 208, 209, 214, 217, 219, 221, 222, 224, 225, 226, 227, 228, 229, 231, 232, 233, 234, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 248, 249, 251, 252, 254, 256, 257, 258, 259, 263, 264, 265, 266, 267, 268, 270, 271, 272, 273, 276, 278, 279, 280, 281, 282, 283, 284, 290, 292, 293, 294, 298, 299, 307, 309, 312, 313, 325, 326, 332, 333, 334, 343, 344, 346, 347, 372, 374, 377, 378, 382, 384, 387, 388, 390, 391, 394, 395, 397, 398, 399, 401, 402, 404, 407, 409, 410, 411, 412, 413, 414, 417, 418, 421, 424, 428, 429, 431, 432, 436, 438, 439, 440, 443, 444, 445, 446, 447, 448, 449, 458, 459, 460, 462, 464, 465, 466, 467, 468, 470, 471, 473, 474, 475, 476, 477, 478, 479, 482, 484, 485, 486, 487, 489, 490, 491, 492, 493, 494, 495, 497, 498, 499, 500, 501, 502, 503, 506, 507, 508, 509, 510, 515, 518, 519, 521, 523, 527, 528, 529, 532, 533, 535, 537, 538, 539, 540, 541, 544, 545, 546, 547, 548, 552, 553, 554, 555, 556, 557, 558, 559, 560, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 585, 586, 587, 588, 589, 590, 591, 592, 593, 596, 597, 599, 600, 601, 603], "10": [13, 16, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 50, 51, 52, 53, 54, 66, 67, 77, 86, 87, 88, 89, 91, 101, 103, 104, 106, 109, 110, 111, 112, 117, 120, 124, 125, 127, 128, 129, 133, 135, 136, 138, 144, 145, 150, 151, 153, 155, 157, 158, 163, 164, 165, 166, 167, 169, 176, 182, 195, 196, 197, 199, 201, 204, 205, 206, 207, 208, 209, 214, 217, 219, 228, 231, 244, 245, 248, 249, 271, 272, 284, 293, 307, 309, 332, 334, 344, 375, 380, 382, 384, 387, 388, 390, 391, 392, 393, 394, 395, 396, 397, 398, 403, 404, 409, 410, 411, 415, 416, 418, 424, 429, 431, 442, 444, 447, 451, 453, 457, 458, 459, 460, 464, 465, 466, 467, 468, 470, 471, 473, 474, 475, 476, 477, 478, 479, 482, 484, 485, 486, 487, 489, 491, 492, 493, 494, 495, 497, 498, 499, 500, 501, 502, 504, 505, 506, 507, 508, 509, 510, 518, 519, 521, 523, 529, 533, 539, 542, 544, 545, 546, 547, 558, 559, 563, 565, 568, 569, 571, 572, 573, 574, 576, 577, 579, 580, 581, 582, 586, 587, 588, 593, 598, 599, 602, 603], "100": [19, 20, 26, 46, 47, 74, 77, 94, 127, 134, 136, 155, 156, 166, 207, 209, 221, 222, 225, 226, 229, 231, 232, 233, 234, 238, 239, 241, 242, 243, 244, 245, 248, 252, 254, 256, 257, 258, 259, 263, 266, 268, 270, 271, 272, 273, 276, 278, 280, 281, 284, 286, 344, 387, 388, 390, 395, 406, 416, 427, 458, 460, 464, 467, 473, 474, 475, 477, 478, 479, 482, 487, 490, 491, 492, 493, 494, 497, 498, 499, 502, 504, 507, 508, 509, 521, 525, 527, 528, 529, 533, 544, 547, 548, 552, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 599], "1000": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 77, 197, 202, 387, 390, 462, 472, 492, 493, 497, 504, 508, 521, 547], "10000": [17, 18, 21, 22, 23, 24, 25, 27, 104, 109, 155, 166, 169, 179, 492, 508], "100000": [74, 492, 518], "1000000": [51, 52, 54, 492, 582], "10000000": 582, "100000000000": 494, "10000_100000_wtct": 77, "1000_3000_wtct": 77, "1000e": 504, "1001": [446, 477, 478], "1002": 446, "10045": [65, 273, 581], "10049": 458, "1006": 446, "100_300_wtct": 77, "101": [432, 473, 487, 492], "1012": 491, "1013": 447, "1014": 447, "101430": 487, "10172": 502, "102": [176, 457, 465, 468, 594, 599, 600], "102040816326531": 479, "1021": 447, "1025": 447, "1026": 447, "10262943822890519": [96, 503], "1027": 447, "102877228833871": 503, "1029": 447, "10295505": 521, "102e": 492, "103": [427, 450], "103000133": 509, "1031": 447, "1032": 447, "10325325433327517": 518, "1034": 521, "1035": 447, "10350020170706745": 465, "1036": 468, "1038": 447, "104": [473, 475], "1040": 447, "10409": 475, "10409446": 475, "10416667": 489, "1043": 447, "104317": [103, 493, 501], "1044": 468, "1045": 447, "1046": 405, "10470702368766069": 503, "10477": 521, "105": [82, 482, 510], "1051": 447, "1052": 492, "1053": 447, "1054": 447, "1057": 447, "10592": 602, "105953": 521, "105e": 468, "106": 467, "1061971e": 497, "106217": 83, "1062535e": 497, "1064": 492, "1065": 447, "1067": 447, "1069": 447, "107": [457, 458, 499, 594], "1070": [447, 521], "1072542e": 497, "1073": 447, "10752883769757363": 503, "1076": 447, "1078": 447, "107e": [468, 492], "108": 444, "108034597491956e": 502, "108043": 473, "1082": 447, "1083": 447, "1084": 447, "1085": 447, "1085000": 473, "1087": 447, "1088": 447, "1089": 447, "109": [427, 457, 459, 499, 594], "1090": 447, "1092": [447, 468], "1093": [447, 468], "1098": 447, "1099306e": 497, "109e": 475, "10e": [176, 492, 497], "10k": 197, "10th": [414, 426], "11": [67, 87, 91, 94, 127, 128, 132, 133, 217, 346, 391, 394, 396, 404, 411, 415, 427, 428, 449, 457, 458, 459, 460, 462, 464, 465, 466, 467, 468, 470, 471, 472, 473, 475, 477, 478, 479, 482, 484, 485, 486, 487, 489, 492, 493, 494, 495, 498, 500, 501, 504, 506, 508, 518, 519, 521, 544, 546, 585, 589, 590, 600], "110": [492, 508], "1100": [447, 464], "110000": [493, 498], "1102": 447, "1102e": 460, "1103": 447, "110380": [83, 403, 470, 473, 475, 507], "1104": 447, "1105": 447, "1107": 447, "1108": 447, "111": [375, 394, 447, 473, 492], "1110": 447, "1111": [138, 492, 521], "111140": [403, 470, 473, 475], "111159": [403, 470, 473, 475, 507], "11132": 64, "1115": 447, "111507416": 487, "111630": [89, 487, 507], "111797": 492, "11184": [65, 272, 580], "112": [458, 464], "11208": 65, "11220184543": 494, "1127": 447, "11291820875721864": 503, "113": [457, 521, 594], "1131": [395, 471], "1133": 447, "1134": 447, "1136": 447, "1140": [307, 309], "114416978060044": 486, "115": [67, 457, 505], "1150": 447, "11517": 521, "11553325504064559": [96, 503], "11587179071752986": 96, "116": [427, 459, 460], "1160": 492, "11610": 521, "1162": 447, "1162290917256776e": 484, "1166": 447, "1167": [394, 401], "1169": 447, "116e": 67, "117": [427, 563], "1170": 447, "1172": 401, "1173775": 492, "1176": 447, "117877e": 492, "1179": 447, "118": 473, "1183": 447, "118355": 492, "119": [459, 468, 473], "1190": 447, "119432": 458, "1195": 447, "119e": 464, "11af4c": 427, "11e": 492, "12": [17, 38, 42, 67, 86, 87, 91, 113, 114, 127, 166, 169, 195, 196, 197, 199, 205, 208, 209, 221, 225, 231, 233, 238, 245, 256, 258, 268, 271, 272, 273, 284, 391, 393, 394, 395, 396, 398, 399, 404, 407, 410, 416, 427, 431, 432, 433, 445, 450, 457, 458, 459, 462, 464, 465, 466, 467, 468, 470, 473, 475, 476, 477, 484, 485, 486, 489, 490, 492, 493, 494, 495, 499, 501, 502, 504, 508, 518, 521, 533, 544, 547, 548, 552, 553, 554, 555, 557, 558, 559, 560, 563, 564, 565, 567, 571, 574, 575, 576, 578, 579, 580, 581, 585, 586, 587, 588, 589, 590, 591, 592, 593, 603], "120": [53, 402, 466, 508, 556], "120000": 470, "120154": 492, "1204": 447, "1207": 447, "120e": [67, 521], "121": [67, 475, 501, 603], "1210": 447, "1211": [447, 492], "121241": 473, "12148": 468, "1215": 447, "1216": 460, "12186": 521, "1219": 492, "122": [67, 427, 457, 462, 501, 594, 603], "1220": 447, "1224489795918373": 479, "1226": 447, "1227": 447, "12276676166802643": 503, "122e": 474, "123": [87, 91, 399, 457, 468, 594], "1231": 448, "1234": 88, "123456789": [200, 388, 602], "1235": 447, "1237": 395, "1238": 447, "123890826": 86, "123892513": 86, "1239": 392, "123944": 83, "123e": 468, "124": [399, 468, 492, 501], "1240": 447, "12423250e": 497, "1243": 521, "1244969200533408": 313, "1246": 447, "12493874": 497, "124e": 67, "125": [67, 127, 464, 475, 499, 508, 521, 599], "12518": 474, "12525306": 490, "12546": 65, "1258925411": 494, "126": [67, 462, 492, 495, 519], "1264500e": 497, "126585": 458, "1266": 447, "1268": 447, "12688": 83, "1269263e": 497, "12697": 474, "127": 468, "12751": 458, "1277": 393, "1278": 394, "12794487": 502, "128": [427, 487, 523], "12809": [103, 493, 501], "1281": 447, "12816": 521, "12856": 508, "1287": 447, "1289": 447, "128e": 462, "129": 453, "1290": 447, "1291": 447, "1292e": 504, "1294": 447, "1299": 492, "12nan5": 462, "12r_": 53, "12th": [412, 426], "12wqoajg": 489, "13": [67, 102, 103, 106, 127, 206, 312, 391, 392, 396, 401, 406, 415, 432, 457, 458, 459, 460, 462, 463, 464, 465, 466, 467, 468, 470, 471, 473, 474, 475, 476, 477, 478, 479, 481, 482, 484, 485, 486, 487, 489, 491, 492, 493, 494, 495, 498, 499, 500, 501, 502, 504, 506, 507, 508, 509, 510, 518, 519, 521, 529, 600], "130": [457, 484, 488, 544], "1300": 447, "1301v": 38, "13030": 521, "1305": 447, "13061": 502, "131": 462, "1310": 521, "1312": 447, "13133": 521, "13152": 475, "1316": 447, "1317": 448, "1318": 447, "1319": [94, 447], "13197": 473, "132": 468, "13226": 521, "1323e": 474, "132472": 475, "132e": 464, "1331": 448, "1334": 448, "1337": 448, "1339": 448, "133e": 462, "134": [465, 468, 475], "1341": 448, "1342a": 156, "1343": 448, "1344": 492, "1345": 448, "1346": 448, "1347": 448, "13499879586502125": 476, "135": [38, 102, 462, 492, 495], "13500212963": 492, "1351e": 492, "1354": 448, "135498046875": 464, "1357": 448, "1359316": 521, "135e": 127, "136": 492, "1360": 448, "1361": 492, "1362": 448, "1367": 448, "1369": [395, 448], "137": [457, 468, 476, 505], "1372": 448, "1373": 448, "1374": 448, "13752123871171e": 518, "1376": 448, "1376407390895865e": 484, "1377": 448, "1378": 448, "1379190199428797": 313, "137990": 492, "138": [427, 462, 477, 521], "1381": 448, "1386": 448, "1387": 448, "138e": 475, "139": [464, 468, 508], "13911": 521, "139388186431198e": 489, "1394": 569, "13944023e": 494, "1395": 448, "1396": [387, 465], "13960": 521, "1397": 448, "1397412321592923": 503, "13e": 493, "13nan6": 462, "13th": 426, "14": [28, 65, 67, 86, 105, 126, 273, 388, 391, 396, 399, 404, 406, 407, 416, 446, 457, 458, 462, 464, 465, 468, 473, 479, 487, 488, 489, 492, 493, 494, 495, 498, 500, 501, 502, 505, 518, 519, 521, 552, 553, 555, 557, 558, 559, 581, 599], "140": 509, "1401": 448, "1406": 448, "1408": [448, 521], "141": [311, 475, 492], "1411180": 473, "1412": 448, "14121": 475, "1412536400000000": 521, "14149953611195087": [96, 503], "14150": 475, "1419": [395, 449], "141945": 458, "142": [35, 67, 427, 462, 492, 521], "1421": 448, "14210": 462, "1426": 448, "142857142857132": 479, "142e": 492, "1432": 448, "1433": 448, "1435": 448, "1438": 179, "1438465e": 497, "1439110308062257": 503, "144": [462, 501, 521], "14419991": 97, "1442739329466746e": 502, "1443": 448, "1444": 448, "1445": 401, "14457": 521, "1446": 448, "1447": 448, "145": 492, "1451": 402, "1453105388336073": 475, "1456": 448, "1456479e": 497, "146": [457, 521, 561], "14610": 602, "146472": 492, "1467": 138, "147": [446, 492, 499], "1470": [448, 521], "1474": 448, "1475": 448, "1476": 448, "14773": 508, "147e": 492, "148": 468, "1482": 492, "1484": 486, "1485314": 97, "1486415e": 497, "1489": [448, 475], "149": [464, 498, 501], "1492": 448, "1494": 475, "1495": 448, "1499472780781963": 313, "149e": 492, "14e": [470, 491], "14msts37sst": [477, 478, 507], "14nan3": 462, "14nan5": 462, "14th": [411, 414, 426], "14yr_catalog": 65, "15": [39, 42, 67, 87, 88, 91, 153, 154, 155, 156, 157, 158, 163, 164, 165, 167, 206, 377, 378, 382, 396, 404, 427, 431, 436, 441, 444, 445, 446, 448, 457, 458, 464, 468, 471, 473, 474, 475, 477, 478, 479, 482, 484, 487, 488, 489, 490, 492, 493, 494, 495, 498, 499, 501, 502, 508, 518, 521, 544, 553, 554, 556, 560, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 585, 586, 587, 588, 589, 590, 591, 592, 593, 603], "150": [133, 427, 462, 464, 477, 478, 499, 521], "1505": 448, "15076259": 97, "151": [427, 501], "1510": 140, "1510240e": 497, "15140": 468, "1515": 448, "15154854": 97, "1517": 448, "151955134028793": 476, "152": [468, 475], "1521": 475, "1523": 477, "15246": 477, "152477": 508, "1527": 448, "153": 492, "1530": 493, "15319": 477, "153600": 493, "1538": 272, "154": [427, 458, 492], "1543": 448, "154e": 475, "155": 427, "15518": 521, "1552": 471, "1553": [492, 521], "1554": [307, 309, 448], "1554106e": 497, "1556": [448, 492, 521], "1556008e": 497, "1558": 448, "156": [427, 464, 465, 468, 475, 494, 501], "1562": 448, "15621": 521, "1564": 448, "156525": 492, "1567629e": 497, "1568": 448, "157": [427, 521], "1573": 448, "1576": 448, "158": [458, 465, 473], "1582": 448, "15848931924": 494, "1586": 94, "15899": 468, "1594": 448, "1597317": 97, "159t": 52, "15e": 471, "15h14m00": 492, "15nan8": 462, "16": [16, 24, 53, 67, 94, 110, 111, 195, 391, 395, 404, 407, 408, 416, 432, 447, 452, 454, 455, 457, 458, 460, 464, 465, 466, 467, 468, 470, 471, 473, 474, 475, 476, 477, 478, 479, 481, 484, 485, 486, 487, 489, 491, 492, 493, 494, 495, 498, 499, 500, 501, 502, 504, 506, 507, 508, 509, 510, 518, 519, 521, 546, 591, 599, 600], "160": [31, 127, 427, 436, 479, 501], "1600": 478, "1600e": 459, "1605": 448, "16056": 468, "1606": 448, "1607": 491, "160e": 67, "161": [395, 464, 475, 492], "1610e": [459, 492], "161250": 482, "1613279491744304": 503, "1616": 448, "1618850e": 497, "1619e": 102, "162": [67, 486], "16227766": 499, "1622776601683795": [498, 499, 518], "16240": 519, "1625e": 470, "16287": 521, "1629219e": 497, "163": 599, "1630": [448, 521], "16303": 475, "16303044": 475, "163265306122433": 479, "1634": 448, "164": [486, 492], "1642": 458, "165": 501, "1650": 521, "16506": 458, "16511": 475, "16511148": 475, "1658": 448, "1659e": 504, "165e": 468, "166": [427, 475, 492], "1660": 448, "166015625": 460, "1661919226690953e": 489, "1665478": 97, "166871893872855e": 489, "167": [427, 475, 482], "167219": 492, "1675": 448, "168": [492, 493, 521], "1681": 448, "1685": 448, "1686": 492, "1687": 86, "168702": 458, "169": 475, "1691": 458, "1695": 448, "1696": 448, "1697": 448, "1698": 464, "169871": 482, "16th": 426, "17": [20, 21, 40, 67, 86, 398, 401, 404, 436, 453, 457, 458, 460, 463, 464, 465, 466, 467, 468, 470, 471, 473, 474, 475, 476, 477, 478, 479, 481, 484, 485, 486, 487, 489, 491, 492, 493, 495, 497, 498, 499, 500, 501, 502, 504, 505, 506, 507, 508, 509, 510, 518, 519, 521, 600], "170": 460, "17016467e": 495, "1702": 448, "17020": 468, "170262": 482, "171": [457, 463, 488], "1710": 449, "1711": 448, "1713": 460, "1715": 401, "1717": 521, "171749": 521, "1719502": 97, "1719610": 97, "1719670": 97, "171b": 283, "17229679": 97, "173": 492, "1731": [448, 501], "1732": 492, "17320": 492, "1736": 468, "1737799900000000": 521, "174": 464, "1742": 67, "17445": 521, "1746": [448, 521], "1748": [448, 501], "1750": 448, "1751": 448, "1753": 521, "1755": 448, "1756": 465, "1759": 448, "175e": 492, "176": [427, 457, 487, 492, 561, 583], "1760": 448, "1761": 448, "1762": 523, "1763": [449, 492], "1764": [448, 475], "1766": 449, "1768896e": 497, "177": [427, 508, 509], "17776": 458, "1778279410": 494, "177e": 492, "178": 447, "178442": 67, "1785": [448, 458], "179": 486, "1791": 448, "179475": 248, "1799": 448, "17a": [60, 492], "17e": 501, "17g": 50, "17th": 442, "18": [11, 87, 91, 206, 391, 406, 412, 433, 439, 458, 460, 464, 465, 466, 467, 468, 470, 471, 473, 474, 475, 476, 477, 478, 479, 484, 485, 486, 487, 489, 491, 492, 493, 495, 498, 499, 500, 501, 502, 504, 506, 507, 508, 509, 510, 518, 519, 521], "180": [401, 420, 422, 427, 492, 499, 603], "1800": [448, 478, 499, 507], "180000": [477, 478, 507], "1804": 492, "180458": 473, "18046952655570045": 313, "1805": 401, "1807": 449, "1808": [448, 492, 521], "181": [468, 486], "1811": 467, "1812": 448, "181248": 518, "1813": 492, "1818": 448, "1821": 448, "1822": 448, "1825": 492, "18257": 468, "183": 464, "1830e": 464, "183139597": 86, "1834": 460, "1835": 94, "1836": 449, "1836544903987521": 503, "18367346938775508": 479, "1837": 449, "18385658": 475, "18386": 475, "18392464": 535, "184": [86, 94, 441, 445, 468, 473, 477, 485, 489, 500, 501], "18400002": 485, "1841": 396, "1845": 449, "1846": 449, "18465": 521, "1849": 449, "184989894219835": 490, "185": 500, "1854": [449, 492], "1855": 449, "1857": 449, "1859": 449, "186": [440, 475, 492], "1861": 449, "1862": 449, "186484131475074": 344, "1866": 498, "186643": 521, "187": [433, 440, 475], "1871": 449, "1876": 486, "1877": 397, "188": [440, 458, 492], "1883": 449, "1884": 449, "18842984749180410": 475, "1887": 486, "1888": 449, "188e": 462, "189": [464, 497], "1890": 449, "1891": 449, "18921591": 497, "1893": 449, "1893e": [459, 492], "1894": 449, "1895": 449, "1896e": 459, "1898": 449, "18988": 521, "1899070e": 497, "18a": 62, "18h43m48": 67, "19": [51, 53, 54, 67, 206, 391, 403, 405, 407, 427, 435, 436, 438, 450, 457, 465, 468, 470, 471, 473, 476, 481, 487, 488, 489, 490, 492, 493, 499, 501, 505], "190": 492, "1902": [65, 273, 581], "1903": 449, "1904": 449, "1905": 474, "1908": 449, "1909": 449, "190e": 464, "191": [440, 463], "1910": 182, "1912": 449, "1917": 521, "1918": 449, "1919": 449, "192": [457, 505, 583], "1920": 521, "1921": 449, "19214093": 97, "1922": 449, "1926": 449, "1926520e": 497, "1927": 449, "1928": 492, "1929": 449, "193": [457, 468, 594], "1930": 449, "1933": 449, "1934": 449, "19354": 475, "1936925": 97, "1937": [449, 492], "193e": 465, "194": [440, 468], "1943": [307, 309], "1943186": 97, "1947565": 97, "1949": 449, "195": [242, 464, 482], "1950rspsa": 52, "1951": 428, "1953": 416, "1953830": 97, "1955810e": 497, "1958e": 495, "196": [67, 458, 501], "1961": [138, 147], "1962": 428, "1963": 492, "19644": 508, "1965": 21, "1966": 428, "1969": 428, "196991563774588": 284, "197": [67, 475, 508], "1971": 398, "19736017641361556": 476, "1975": 428, "1976572e": 497, "1978": 492, "1979": [295, 301, 428, 597], "1979892": 475, "1980": 492, "1982": 37, "1983": 597, "1986": 399, "1986027": 521, "1987": 475, "19879005": 179, "1988": [139, 302, 428], "1989": 428, "199": [457, 475, 501, 583], "1990": [36, 37, 428], "1991": [22, 428], "19932878": 497, "1994": [428, 597], "1994a": [52, 53], "1995": [17, 293, 427, 428], "1996": [27, 468, 490, 597], "1997": [25, 518], "1998": [28, 87, 91, 428, 597], "1999": [53, 200, 388, 602], "19991": 518, "199999809265137": 492, "19999999999999998": 467, "1999apj": 53, "19e": 498, "19th": 426, "1d": [16, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 91, 110, 111, 129, 154, 155, 164, 178, 195, 197, 339, 380, 393, 397, 398, 400, 401, 402, 403, 406, 407, 408, 420, 430, 432, 433, 434, 435, 439, 441, 444, 448, 450, 451, 454, 457, 458, 460, 462, 463, 464, 466, 468, 473, 480, 481, 486, 489, 493, 495, 498, 500, 502, 503, 504, 507, 508, 518, 531, 533, 535, 548, 597], "1dc": [82, 83, 89, 103, 106, 110, 111, 116, 119, 120, 124, 144, 145, 151, 155, 156, 157, 166, 375, 380, 382, 395, 397, 403, 407, 429, 458, 467, 470, 473, 475, 482, 486, 487, 493, 494, 497, 501, 533], "1deg": 207, "1e": [19, 20, 26, 86, 100, 132, 133, 136, 150, 151, 152, 153, 154, 156, 157, 158, 160, 163, 165, 167, 168, 195, 196, 197, 199, 204, 205, 207, 208, 209, 221, 222, 225, 229, 231, 232, 233, 238, 244, 245, 248, 249, 252, 254, 256, 257, 258, 263, 268, 270, 271, 272, 273, 276, 280, 284, 295, 301, 346, 362, 364, 387, 398, 459, 462, 464, 466, 468, 471, 473, 475, 477, 478, 482, 484, 485, 486, 487, 492, 495, 502, 504, 508, 509, 529, 533, 537, 563, 564, 565, 567, 570, 571, 575, 576, 578, 579, 580, 581], "1e0": 527, "1e10": [51, 156], "1e12": [527, 537], "1e2": [462, 527, 529], "1e3": [508, 537], "1e30": 573, "1e4": [495, 508, 509], "1e40": 528, "1e5": [466, 508, 529, 547, 548], "1e51": 52, "1e6": [45, 508, 525, 582], "1e7": [129, 582], "1f": 465, "1fhl": [433, 446], "1fhl_name": 71, "1h": 166, "1k": [103, 110], "1kpc": 529, "1lhaaso": [57, 70, 454, 492], "1lhaaso_catalog": 57, "1rc1": 417, "1tev": [52, 53, 133, 478], "2": [11, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 27, 28, 29, 30, 31, 32, 33, 35, 36, 37, 38, 39, 40, 46, 50, 51, 52, 53, 54, 59, 63, 67, 68, 71, 72, 74, 75, 77, 78, 80, 83, 84, 85, 86, 87, 89, 90, 91, 95, 96, 101, 102, 103, 105, 106, 110, 111, 115, 120, 124, 125, 126, 127, 128, 129, 130, 132, 133, 135, 136, 143, 147, 148, 149, 153, 154, 155, 156, 158, 164, 166, 169, 176, 179, 193, 194, 195, 196, 197, 198, 199, 201, 202, 203, 204, 206, 207, 209, 214, 217, 218, 220, 221, 225, 227, 231, 233, 238, 240, 241, 245, 246, 249, 251, 256, 257, 258, 264, 265, 267, 268, 271, 272, 273, 278, 283, 284, 290, 292, 293, 294, 295, 300, 301, 307, 309, 312, 332, 334, 372, 375, 380, 382, 384, 387, 388, 391, 392, 396, 398, 399, 401, 402, 403, 404, 407, 410, 411, 412, 413, 414, 417, 424, 425, 427, 428, 429, 430, 431, 432, 439, 444, 445, 446, 447, 448, 449, 455, 457, 458, 459, 460, 462, 464, 465, 466, 467, 468, 470, 471, 473, 474, 475, 476, 477, 478, 479, 482, 484, 485, 486, 487, 489, 490, 491, 492, 493, 494, 495, 497, 498, 499, 500, 501, 502, 503, 506, 507, 508, 509, 510, 518, 519, 521, 529, 532, 533, 535, 540, 541, 542, 544, 545, 547, 548, 549, 552, 553, 554, 555, 556, 557, 558, 559, 560, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 577, 578, 579, 580, 581, 582, 583, 585, 586, 587, 588, 589, 590, 591, 592, 593, 597, 598, 599, 600, 601], "20": [16, 38, 83, 87, 89, 91, 103, 106, 110, 111, 157, 158, 163, 165, 167, 176, 196, 197, 199, 205, 208, 209, 214, 293, 312, 388, 391, 392, 393, 395, 400, 402, 405, 407, 412, 450, 458, 459, 464, 465, 466, 467, 468, 470, 471, 473, 475, 476, 477, 484, 485, 486, 487, 489, 490, 491, 492, 495, 498, 499, 501, 502, 504, 506, 507, 518, 519, 521, 523, 542, 544, 545, 546, 553, 554, 555, 558, 559, 569, 572, 577, 582, 583, 599], "200": [52, 87, 91, 136, 207, 411, 440, 457, 464, 465, 468, 475, 479, 482, 492, 499, 502, 521, 561, 599], "2000": [88, 103, 106, 110, 111, 129, 234, 239, 241, 243, 259, 266, 428, 477, 478, 479, 498, 508, 521, 597], "2000000": 473, "20000000000000004": 467, "20009124": 497, "2000apj": 284, "2000e": 502, "2001": [94, 428, 468, 597], "20016392130233e": 489, "2002": [87, 91, 299, 490], "2003": [300, 490], "2004": [24, 39, 40, 86, 94, 416, 490, 510], "2004aph": [83, 88], "2005": [65, 597], "200503": 458, "2005a": 492, "2006": [30, 31, 32, 33, 35, 120, 402, 468, 476, 485, 489], "200638": 521, "2006a": 284, "2006apj": 33, "2006ara": 50, "2007": [405, 597], "20072608": 497, "2008": [38, 86, 229, 280, 459, 508, 523, 563], "2008aj": 38, "2009": [136, 303, 429, 468, 597], "20097159": 497, "2009851": 497, "20099855": 497, "201": [52, 499, 522], "2010": [129, 156, 229, 248, 308, 388, 455, 563, 597, 602], "2010a": [248, 284], "2010mnra": 156, "2011": [17, 19, 20, 21, 22, 24, 25, 26, 27, 134, 229, 307, 309, 459, 523, 563], "2012": [91, 429, 597], "2013": [102, 140, 407, 413, 418, 427, 490], "20136": [82, 313, 510], "20137": [313, 510], "2013aph": 283, "2013apj": 60, "2014": [138, 147, 426, 523], "2015": [52, 86, 401, 404, 426, 508], "20151": 313, "2015apj": 61, "2015jheap": 284, "2016": [26, 401, 404, 426, 429, 490, 498, 507], "2016apj": 58, "2017": [59, 229, 392, 394, 404, 407, 424, 426, 429, 475, 507, 563], "2017apj": 62, "2017icrc": 507, "2018": [52, 392, 393, 394, 395, 396, 397, 398, 402, 404, 406, 407, 426, 453, 507, 510, 597], "2019": [394, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 426, 448, 449, 476, 597], "202": [457, 475, 561], "2020": [206, 396, 407, 408, 409, 410, 411, 426, 476, 477, 486, 499, 586, 587, 588], "2021": [63, 89, 229, 409, 411, 426, 453, 502, 507, 563], "2021345e": 497, "2022": [388, 412, 413, 416, 426, 429, 509], "2023": [57, 388, 399, 414, 415, 416, 426, 429], "2024": [416, 426, 507], "2024e": 519, "2025": [105, 126, 416, 425, 465, 470, 471, 473, 502, 518, 552, 553, 554, 555, 556, 557, 558, 559, 560, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 585, 586, 587, 588, 589, 590, 591, 592, 593], "2026": [399, 429], "2028": 429, "2030": [399, 429], "2031": 429, "20326": [312, 460], "20327": [312, 460], "2033": 429, "20339": 312, "2034": 429, "20343": 312, "20344": 312, "20345": 312, "20346": 312, "20349": 460, "2035": [125, 127, 429], "20350": 460, "2036": [125, 127], "2037": 429, "20372": 507, "2038": 429, "2039": 429, "20396": 460, "20397": 460, "2040469e": 497, "204081632653062": 479, "2041222e": 497, "20421": 460, "20422": 460, "2044": 486, "2045": 399, "2046": 429, "2049": [429, 492, 521], "205": [440, 475, 499], "2050": 429, "20508075688775": 492, "2051": 429, "20517": 460, "20518": 460, "20519": 460, "205192": 492, "20521": 460, "2053315944536949e": 507, "205357": 492, "2054": 429, "20559": 521, "2058705e": 497, "206": 492, "2061": 492, "2062580e": 497, "2064": 429, "2064335": 97, "2065": 429, "2066": 429, "2068682e": 497, "2069": 429, "207": [457, 475, 479, 501, 583], "2071": [399, 429], "2075": 415, "207520865": 485, "207521165": 489, "207521465": 485, "207521627": 489, "2076": 429, "2077": 429, "2079930e": 497, "207e": 468, "208": 60, "208331": 518, "2085": 429, "2089": [401, 431], "20898": 460, "20899": 460, "209": 475, "20900": 460, "2093": 429, "2095": 475, "2097": 429, "2097e": 464, "2098": 429, "20deg": [477, 478], "20e": 497, "20th": 413, "21": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 102, 129, 151, 272, 390, 391, 436, 442, 451, 457, 458, 459, 467, 468, 472, 475, 485, 486, 488, 489, 491, 492, 494, 497, 499, 505, 521, 548, 599], "210": [440, 492], "2103": 492, "2104": 430, "2104353e": 497, "2106": 430, "2108": 430, "211": [492, 493], "2111": 430, "2112": [430, 519], "21134890398": 494, "2114": 430, "2115": 430, "211770556360534": 487, "2118": 430, "2119": 430, "211e": 492, "212": [67, 440, 455, 464, 492], "2121": 430, "2121164e": 497, "2123": 430, "21236e": 458, "2124": 430, "2126": [430, 458, 467, 470, 473, 475, 482, 486, 507], "2128": 430, "2129": [401, 431], "213": 466, "2130": 430, "2131": [430, 492], "2132": 430, "21325": 508, "2133": 430, "2136": [400, 432], "2139": 430, "214": [462, 468], "2140": 430, "2141": 430, "2142": 430, "2145": 430, "2146": 430, "21464892": 521, "214e": 464, "215": [67, 440, 454, 492], "21500000000003": 556, "2151": 430, "2152": 430, "21525839967018867": 476, "2153": [430, 492], "2154": [430, 492], "2155": [434, 459, 485, 486, 489, 490, 492, 503, 521, 563], "2157": 430, "2159e": 102, "215e": 492, "216": [242, 464, 499, 501, 593], "2160": 430, "2162670e": 497, "2163": 430, "2164425e": 497, "2166": 430, "2169": 430, "217": [464, 492], "2171": 430, "21731921e": 499, "21733761e": 499, "21735587e": 499, "218": 61, "2190": 405, "2192": 431, "2197": 475, "21t19": 94, "21t20": 94, "22": [67, 83, 85, 88, 103, 106, 110, 111, 136, 171, 176, 179, 194, 195, 204, 207, 391, 426, 439, 458, 460, 464, 465, 466, 467, 468, 470, 471, 473, 474, 475, 476, 477, 478, 479, 484, 485, 486, 487, 489, 491, 492, 493, 495, 498, 499, 500, 501, 502, 504, 506, 507, 508, 509, 510, 518, 519, 521, 532, 539, 542, 544, 545, 548], "220": [457, 472, 492, 501, 599, 600], "2200": 431, "2201": [65, 272, 492, 521, 580], "2202e": 521, "2204": 431, "2206": 431, "220e": 492, "221": [401, 440, 457, 561], "22149": 468, "2217": 431, "2217412e": 497, "2218": [404, 432], "2219": [403, 432], "222": [58, 457, 492, 501, 583], "2221": 492, "22245374e": 127, "2227134679628": 486, "22271346796282": 486, "222713467962826": 486, "2229": [400, 431], "223": [457, 501, 561], "2230": 431, "2230e": 466, "2231": 492, "2235": 431, "2237": [431, 521], "2238": 431, "2239": 431, "2240": 431, "2243": 431, "2244": 431, "224436": 521, "225": [96, 312, 313, 411, 440, 457, 471, 492, 583], "2250": 431, "22500": 471, "2254": 431, "2255": [405, 503], "225575051666": 492, "2255890": [485, 489, 503], "2257": 431, "2259": 431, "226": [471, 475, 508], "22608": 493, "2262": 431, "22635141851205703": 495, "2264": [399, 431], "22646134620907912": 495, "2264827221149211": 495, "22648882813333465": 495, "22651631005759018": 495, "22662623775461227": 495, "227": [457, 583], "2270": 404, "2272": 431, "2274": [406, 432, 458], "2276": 431, "2277": 431, "2278": 431, "22788666362099286": 495, "2279": [404, 432], "227e": 492, "228": [295, 301, 395, 401, 465, 471, 492, 498, 510], "2287": 431, "2289": 431, "229": [67, 492], "2290": 406, "2292": 432, "2294": 431, "2296": 431, "2297": 431, "22974080e": 508, "2298": 431, "22e": 498, "22nd": 426, "23": [77, 94, 179, 387, 391, 413, 426, 450, 460, 464, 466, 468, 474, 486, 489, 492, 495, 499, 501, 503, 512, 518, 521, 544], "230": [440, 468], "2300": 431, "2304": 405, "2305": 431, "230542e": 492, "2307": [64, 65], "2308": 432, "231": 440, "2310": 431, "2313": 432, "2314": 432, "232": 62, "2320": [432, 492, 493], "2321": 432, "2323": 432, "2326": 432, "2327": [492, 501], "23273": 508, "232e": 486, "233": 465, "2330": 432, "23306": 468, "2332": 501, "2334": 432, "2335": 432, "2338": 432, "2339": [460, 492, 521], "234": [440, 487], "234132519034915": 499, "23413252": 499, "2342": 432, "2343": 432, "234359264373779": 498, "2343e": 501, "2344": 432, "2345": 432, "2346": 432, "2347": 432, "235": 440, "2350": 433, "2351": 432, "23523": [149, 176, 214, 424, 464, 465, 474, 484, 493, 495, 498, 506, 510, 518, 519, 532, 535, 598], "23526": [149, 214, 464, 465, 474, 484, 493, 495, 498, 506, 518, 519, 598], "2354": 432, "23559": [464, 465, 484, 493, 498, 518, 519, 542, 544, 545, 598], "2356": 432, "2357": 501, "2358": 432, "2359": 432, "23592": [464, 465, 484, 493, 498, 518, 519, 542, 544, 545, 598], "236": [440, 492], "2360": 432, "2362506e": 497, "23628": 508, "2365": 432, "2366": 432, "2367": 432, "2368": 432, "237": 458, "23734": 521, "2375": 432, "2377": 432, "2378": 432, "2379": 432, "238": 473, "2381": 432, "238298": 458, "2384": 458, "2385": 432, "239": [67, 475], "23905561": 497, "239439": 521, "239557414": 83, "239557417": 86, "239559565": 83, "2399": 492, "239e": 492, "23a": 61, "24": [25, 27, 52, 53, 86, 87, 91, 94, 390, 391, 404, 408, 443, 448, 457, 458, 465, 468, 471, 486, 489, 492, 493, 495, 499, 501, 505, 507, 508, 518, 544, 563, 570, 579, 580, 581], "240": [103, 106, 110, 111, 124, 492, 493, 494, 533], "2400": 432, "2401": 432, "2404": 432, "2405": 433, "240e": 464, "241": 492, "2412": 432, "2414": 492, "2419": 458, "2428255": 494, "242835": 67, "243": [464, 494], "243084": 589, "2431": 492, "2432": 468, "2433": 433, "2435": 433, "243745080459878e": 489, "244": [67, 440, 464], "2440": 492, "2441": 433, "244140625": 501, "2443672e": 497, "2444": 433, "2446": [433, 501], "2448": 433, "244897959183646": 479, "2449": 433, "245": 440, "2450": [433, 501], "245152": 475, "2454": 433, "2455": 433, "24579": 494, "2459": 433, "246": [440, 494], "2461": 433, "24611324074": 492, "2463": [407, 433], "2464": 433, "2465055e": 497, "2468": 433, "24685677e": 497, "247": [67, 440, 457, 583], "2470": 433, "2471938975366008": 312, "2472": 433, "2475": 433, "2476": 433, "2477": 433, "2478": 433, "2479": [433, 519], "248": 440, "2481": 433, "248122": 492, "2483": 433, "2485": 518, "2486": 433, "249": 440, "2490": 433, "2491": 433, "2492": 433, "2493": 433, "2496": 433, "24968": 458, "2497": 433, "2498": 433, "2499": 433, "249965667724609": 498, "24e": [492, 501], "25": [33, 52, 87, 91, 102, 144, 155, 166, 179, 295, 301, 391, 404, 411, 426, 447, 454, 455, 457, 458, 459, 464, 465, 468, 471, 475, 486, 487, 488, 489, 492, 497, 499, 501, 502, 518, 521, 522, 554, 559], "250": [499, 597], "2501": 433, "250185": 498, "2502": [433, 475], "2505": 433, "2505121": 97, "2505703": 487, "2509": 492, "251": [468, 473], "2510": 433, "251185": 521, "2511884200000000": 521, "2511886431": 494, "25162e": 458, "2518": 492, "251932": 492, "252": [440, 475, 492], "2520": 433, "2521": 433, "2523": 433, "2525": 433, "2528": 433, "253": [467, 501], "2535": 433, "2536": [433, 501], "2537": 501, "2538": 433, "254": 440, "2540": 433, "2546": 433, "25496": 521, "2551": 433, "2552": [433, 492], "2553": 433, "2555": 408, "2557": 433, "255750516626": 492, "2558": 433, "2559": 433, "256": [67, 443], "2560538e": 497, "2561": 433, "2562": 433, "2563": 433, "2564": 433, "2567": 433, "2568710837134529": 476, "257": 467, "2574": 433, "25743552e": 495, "25763": 468, "257642": 492, "2579999": 507, "258": [467, 560], "2580": 433, "25823909e": 494, "2585": 433, "2587": 433, "2589254117941673": 518, "259": [467, 521], "2591e": [459, 492], "2594": 433, "2595": 433, "2595e": 473, "259898": 565, "259e": 468, "25e": 501, "25t_": 53, "25th": 413, "26": [19, 87, 91, 391, 426, 454, 457, 458, 460, 464, 465, 466, 467, 468, 470, 471, 473, 474, 475, 476, 477, 478, 479, 481, 484, 485, 486, 487, 489, 491, 492, 493, 495, 498, 499, 500, 501, 502, 504, 506, 507, 508, 509, 510, 518, 519, 521, 523, 573, 592], "260": [443, 521], "2604": 433, "2609": 501, "261": [443, 457, 521, 583], "2616": 433, "26173": 468, "2619": 433, "262": [443, 457, 468, 501, 521, 561], "2620": 433, "26255414786544": 518, "26258181596485647": 495, "2627": 433, "262728": 507, "26272868097919794": 503, "2628525e": 497, "263": [468, 501], "2633e": 474, "2635": 433, "2635108e": 497, "263650": 586, "2637": 433, "2639554729438709": 503, "264": [443, 475], "2645": 433, "26475": 471, "2648150": 97, "2649e": 495, "265": [32, 401, 458, 468, 475, 501, 521], "2651": 433, "265306122448973": 479, "2654": 433, "266": [401, 467, 468, 475, 477, 482, 499, 501, 518, 521], "2660": 433, "266192": 458, "26665050077722524": 503, "2667": 434, "267": [67, 467, 468, 475, 479, 501, 507], "2672": 434, "2673": 434, "26739753": 97, "2674": 434, "268": [413, 468, 475, 492, 501, 521], "2681": 434, "2684": 434, "2685": 434, "268663733018811": 503, "2687": 434, "26883694": 521, "26887783978974283": 503, "2689": 475, "269": [479, 521], "2692": 434, "269385": 492, "269627": 507, "2697": 434, "2699878e": 497, "26a": [50, 52, 53, 248, 284, 492], "26e": [492, 501], "26th": [409, 426], "27": [391, 393, 454, 464, 468, 475, 489, 493, 521, 599], "270": [460, 468, 492, 501, 521], "2703": 434, "2705": 434, "27057337686547633": 503, "2707": 434, "2708": 248, "2709": 434, "27093776e": 497, "270d": 603, "271": [457, 464, 467, 468, 473, 521, 561], "2711": 434, "271197": 577, "2712": 434, "2713": 434, "2715": 434, "271777777777796": 460, "27177778": 94, "2718": 434, "2719": 434, "272": [467, 468, 492, 501], "2720": [408, 435], "27209": 521, "272149": 575, "2723": 434, "2725": 434, "2726": 434, "2726e": 521, "2727": 434, "2727693": 507, "2727e": 464, "2728": 434, "2729": 434, "273": [83, 443, 462, 468, 521], "2730": 434, "2731": 434, "2733": 434, "2734": 127, "2735": 434, "2737": 434, "2738": 434, "2739": 434, "274": 499, "27409496735322464": 503, "2741": 434, "2742": 434, "2743": 434, "2746": 434, "2747": 434, "27473": 475, "275": [467, 492, 592], "2750": 434, "2751": 434, "2752": 434, "2753": 434, "2755": 434, "2756": 434, "2759": 435, "276": [443, 457, 583], "2761": 435, "2762": 435, "2764": 435, "2765": 435, "2767": 435, "2768": 435, "277": 467, "2771": 435, "2772": 435, "27727": 501, "2775": 435, "277522361013748": 476, "2776": 435, "2777": 435, "2777074437073429": 503, "2778": 435, "2779": 435, "278": [443, 467, 482, 492, 501], "2781": 435, "2782": 435, "2783": 435, "2784": 435, "2785": 435, "2785e": 464, "2787": 435, "2788": 435, "2789": 435, "278e": [468, 486], "279": [443, 467], "2790": 435, "2791": 435, "2792": 435, "2793": 435, "2794": 435, "2796": 435, "2797": 435, "2798": 435, "2799": 435, "27_theorem": [307, 309], "27e": 492, "27t20": 89, "28": [21, 24, 67, 94, 396, 426, 457, 462, 464, 466, 467, 468, 475, 477, 482, 489, 491, 492, 494, 498, 499, 501, 505, 507, 521], "280": [67, 443, 464, 467, 499], "2800": [477, 501, 521], "2801": 435, "2802": 435, "2803": 435, "2804": 435, "2805": 435, "2808": 435, "2809": 435, "281": [467, 492], "2810": 435, "2811": 435, "28118133544922": 492, "2812": 435, "28120079": 492, "2815": 435, "2816": [435, 501], "2817": 435, "2818": 435, "2818047723094509": 503, "28183829312": 494, "2820": 435, "2822": [435, 501], "2823": 435, "2825456e": 497, "2827": 435, "28275990e": 494, "2827988e": 497, "2828": 435, "2829": 435, "282952714500289e": 489, "282e": 492, "283": [443, 467], "2832": 435, "283218": 458, "283451": 465, "283487": 492, "2837": 435, "28382603": 497, "2838398": 507, "28385358839966657": 503, "2839": 435, "284": [467, 492, 602], "2841": 435, "2842": 435, "28429": 475, "2845": 435, "2846": [435, 475], "285": [443, 467], "2852": 501, "285714285714286": 479, "2859229": 494, "285f": [83, 88], "286": [443, 467, 494], "2861432787940619": 503, "286e": [468, 492], "287": [52, 53], "2872": 436, "28720322": 97, "2874": [436, 521], "28755283551095173": 503, "2878662980210884": 313, "288": 127, "2880470e": 497, "2885": 436, "288e": 462, "289": [443, 467], "28905": 508, "2891": 436, "28958": 468, "2896": 436, "2897": 436, "28e": [103, 462, 473, 475, 493, 508], "29": [67, 278, 402, 412, 416, 426, 454, 458, 462, 465, 467, 468, 475, 482, 485, 486, 489, 492, 499, 501, 502, 507, 521], "290": [444, 467, 476, 494], "2900": 501, "290098": 494, "2903": [436, 501], "2903e": 466, "2907": 436, "291": [443, 479], "2912": 436, "29170324": 493, "291e": 521, "2922477": 97, "2923273215208544e": 489, "2924": 436, "2927": 436, "2929": 436, "293": [457, 467, 512], "2930": 492, "2931": 436, "2932": 436, "293352": 570, "29355238360800506": 503, "2938": 436, "2939": 436, "294": [457, 498, 505], "2942": 409, "2943": 436, "2944": [410, 436], "2945": 436, "2947": 436, "2948": 436, "295": [443, 482], "2950": 436, "2951": 436, "2953": 475, "2956": 436, "29585273e": 508, "2959": 501, "295e": 492, "296": [443, 457, 486, 583], "2965": 436, "2966": 436, "2967": 436, "297": 458, "2971e": 492, "2974": 436, "2976": 436, "2978e": 459, "298": [467, 475, 492], "2981": 436, "2984": 436, "29882214027996945": 503, "299": [443, 457, 467, 492, 583], "2990": 436, "2991": 436, "2992": 436, "2993": 436, "2995484265169": 490, "2996": 521, "2998": 436, "2999": [436, 492], "299940468335294": 475, "299995937905366": 475, "299e": 492, "299t": 53, "29t20": [485, 489], "29t21": 489, "29t22": 489, "29t23": 489, "29th": 426, "2_": 19, "2d": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 144, 145, 150, 151, 152, 153, 154, 156, 157, 158, 160, 163, 164, 165, 166, 167, 168, 169, 176, 186, 187, 194, 195, 196, 197, 199, 204, 205, 207, 208, 209, 214, 237, 380, 393, 398, 403, 406, 407, 408, 420, 428, 434, 447, 448, 449, 457, 468, 471, 472, 475, 499, 500, 521, 531, 534, 545, 546, 547, 560], "2degx2deg": 477, "2e": [201, 458, 460, 462, 477, 478, 489, 492, 495, 501], "2e3": [201, 499], "2e6": 508, "2f": [376, 458, 465, 503, 519, 600], "2fhl": [58, 71, 433, 445, 446, 492, 521, 530], "2hwc": [59, 72, 433, 439, 447, 492, 530], "2k": [103, 110], "2m": [248, 284], "2nd": [60, 412], "2nd_psr_catalog": 60, "2pc": [60, 69, 73, 455, 492], "2pc_catalog_v04": 60, "3": [19, 20, 27, 28, 31, 32, 33, 37, 38, 42, 45, 46, 50, 51, 52, 53, 54, 59, 63, 67, 77, 80, 83, 85, 86, 87, 91, 94, 96, 101, 103, 106, 110, 111, 112, 117, 120, 127, 150, 151, 152, 153, 154, 155, 156, 157, 158, 160, 161, 163, 164, 165, 166, 167, 168, 169, 179, 182, 194, 195, 196, 197, 198, 199, 200, 201, 202, 204, 205, 206, 207, 208, 209, 218, 220, 237, 240, 249, 272, 278, 280, 283, 284, 292, 293, 294, 299, 307, 309, 312, 313, 334, 343, 364, 375, 380, 382, 384, 387, 388, 390, 391, 393, 398, 399, 401, 402, 403, 404, 406, 411, 412, 413, 417, 419, 424, 427, 428, 429, 431, 432, 437, 439, 441, 444, 445, 446, 447, 448, 449, 450, 452, 453, 458, 459, 460, 462, 464, 465, 466, 467, 468, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 482, 484, 485, 486, 487, 489, 491, 492, 493, 494, 495, 497, 498, 499, 500, 501, 502, 503, 504, 506, 507, 508, 509, 510, 518, 519, 521, 522, 523, 525, 528, 529, 532, 533, 537, 539, 541, 542, 544, 545, 548, 553, 555, 556, 558, 559, 563, 568, 569, 571, 572, 573, 574, 576, 577, 580, 582, 587, 588, 592, 596, 597, 599, 600, 603], "30": [24, 52, 67, 83, 96, 103, 105, 113, 114, 126, 156, 195, 312, 313, 394, 395, 400, 407, 414, 425, 426, 428, 458, 459, 460, 464, 465, 468, 470, 475, 478, 482, 485, 486, 487, 489, 492, 493, 495, 499, 501, 502, 503, 504, 507, 508, 521, 533, 539, 544, 545, 553, 554, 569, 572, 573, 574, 577, 582], "300": [74, 87, 91, 457, 467, 470, 474, 477, 478, 482, 486, 492, 508, 583], "3000": [397, 492, 547], "30000": 492, "3000000": 582, "30000000": 582, "3000020211954284": 475, "3000_100000_wtct": 77, "3000e": 459, "3001": 436, "30015e": 458, "3002": 436, "3003": 501, "3004625872247901": 474, "3005": 436, "3006": 521, "3006942": 97, "3007": 436, "300_1000_wtct": 77, "301": [443, 467], "3011061699260256": 503, "3012": 436, "3013": 492, "301668796295": 492, "302": [467, 486], "3020791585772495": 312, "30287": 468, "3028e": 501, "302e": 492, "303": [464, 467, 492], "3030": 436, "3032": 436, "3034": 492, "3035": 436, "3037": 436, "3037632e": 497, "3038": [436, 521], "3039": 436, "304": [459, 485, 486, 489, 490, 492, 503, 521, 563], "3041": 436, "3042": 436, "3043": 501, "3045": 436, "3046875": [493, 501], "3049664466089965": 313, "304_steadi": 459, "305": [67, 467], "3051": 436, "3051827": 97, "3051852": 97, "3051856": 97, "3052": 436, "3053": 436, "30535345877453707": 503, "3054": 436, "3055487448271073": 476, "3058": 436, "3058422e": 497, "305e": 492, "306": [443, 599], "3060": 436, "3061224489795924": 479, "306196370000000": 521, "3063": 436, "3069": 436, "306e": 492, "307": 467, "3070": 436, "3071": 492, "3072": 436, "3074": 436, "3075": 411, "3076": 436, "307e": 492, "308": [467, 475, 556], "3080": 436, "3081": 436, "3083": 436, "3085": 436, "308500": 465, "3086": 436, "3088": 436, "3089": 436, "3091": 436, "3092": 436, "30997": 521, "30a": 284, "30d00m00": 414, "30e": [459, 497, 501], "30t00": 489, "30t01": 489, "30t02": 489, "30t14": [465, 470, 471, 473, 502, 518, 552, 553, 554, 555, 556, 557, 558, 559, 560, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 585, 586, 587, 588, 589, 590, 591, 592, 593], "30th": 399, "31": [396, 397, 410, 411, 424, 451, 457, 458, 459, 460, 462, 464, 465, 466, 467, 468, 470, 471, 473, 474, 475, 476, 477, 478, 479, 484, 485, 486, 487, 489, 491, 492, 493, 494, 495, 498, 499, 500, 501, 502, 504, 506, 507, 508, 509, 510, 518, 519, 521], "3100": 436, "3106": 436, "31067517": 492, "3107": [492, 521], "311": [479, 486, 556, 600], "3110": 437, "3111": 437, "3112": 437, "3113": 437, "31139055e": 495, "3114": 437, "311489174710791e": 521, "3116": 437, "3117988e": 497, "31186857659616535": 503, "3119611261122878": 503, "312": [443, 486], "3122": 438, "3123": 438, "3124": 438, "3125": 438, "3126": 438, "3127": 438, "3129": 438, "313": [467, 474], "3130": 438, "3131": [439, 501], "3135914081482271": 503, "3136": 439, "313714614138": 493, "3138": 439, "314": 448, "3140": 439, "3141": 439, "3145": 439, "3148": 439, "315": [486, 492], "3152": 439, "3153": 439, "3155": 439, "315767532000283": 518, "3158": 439, "316": [467, 508, 509], "3162": 439, "316227": 492, "316227766016838": 498, "3165": 439, "3168": 439, "3169": 439, "317": [443, 467], "3173": 439, "3178": 439, "317a": 284, "317e": [459, 492], "318": 443, "3180": 439, "3182": 439, "3185": 439, "3189697265625": 464, "319": [444, 479, 508], "3191": 439, "3195": 521, "3197": 439, "319725": 507, "3199": 439, "32": [83, 195, 457, 464, 468, 471, 473, 481, 489, 498, 499, 521], "320": [103, 106, 110, 111, 124, 492, 493, 494, 501, 533], "3202": 439, "3207": 439, "3208": 439, "32095": 521, "321": 479, "3211": 439, "3216": 439, "3217": 439, "3219": 439, "322": [467, 479], "3222": 439, "3228": 439, "3229": 475, "323": 467, "3230": 439, "3232943": 354, "3233356": 354, "32377509405904137": 96, "3237948931463171": 503, "3238": 439, "3241": 439, "3243": 439, "3246": 439, "32465247": 502, "324857": 473, "325": 486, "3254": 439, "3257": 439, "3258": 439, "325e": 465, "326": [443, 583], "3262": 439, "326530612244888": 479, "32684": 521, "32684833": 507, "327": [457, 475, 504, 505, 583], "3272": 439, "3276": 439, "3277": 439, "3278": 439, "3279": 439, "3279955e": 497, "328": [475, 479], "3281": 439, "3283": 439, "3284": 439, "32843": 521, "32847": 458, "3285": 439, "329": [96, 312, 313, 485, 489, 492, 503, 535], "3293": 439, "3299": 492, "329e": [464, 492], "33": [489, 490, 491, 495, 499, 521, 535], "330": [444, 467, 501], "3301": 439, "33013e": 458, "3302": 439, "3302565e": 497, "3303": 439, "330376": 67, "3304": 439, "3305": 439, "330505": 507, "33055e": 458, "3306": 439, "3307": 439, "3308": 439, "3309": 439, "3310": 439, "3314": 439, "33164865722698683": 503, "3319": 439, "3319831545301117": 312, "332": [67, 444, 508], "3320": 439, "3323": [439, 493], "332525": 492, "3328": 439, "332e": [468, 475], "332f": 33, "333026": 473, "3330487": 97, "3331": 521, "3331761": 97, "3333": 439, "33333333": 387, "3335": 439, "33368e": 458, "3337": 439, "3338": 439, "334": [127, 508], "3342": 439, "3343": 439, "3346": 439, "3347": 439, "33484": 458, "3349": 439, "3349654391": 494, "334e": 492, "335": 444, "3353": 439, "3357": 439, "3358": 439, "335e": 462, "336": [457, 492, 583], "3363": 439, "3364130e": 497, "336444e": 492, "336606": 458, "3368855e": 497, "3369": 439, "337": [444, 467], "3374": 439, "3377": 439, "33787": [96, 503], "33788": [96, 503], "33789": [96, 503], "3379": 439, "33790": 503, "33791": 503, "33792": 503, "33793": 503, "33794": 503, "33795": 503, "33796": 503, "33797": 503, "33798": 503, "33799": 503, "338": [444, 492], "33800": 503, "33800122": 97, "33801": 503, "3380311e": 497, "3381": 439, "339": [444, 464], "3390": 439, "3392": 439, "3393": 439, "3395": 439, "3397": 439, "339835555384604": 503, "3398360": 497, "33983991887701287": 96, "3399": 439, "33e": [471, 487], "34": [52, 53, 67, 427, 458, 475, 485, 489, 493, 499, 501, 521], "34005": 458, "3402": 439, "3403": 439, "340391": 521, "3404": 439, "34047": 458, "3406": 439, "3409": [94, 439], "341": 458, "3413": 439, "3416": 439, "3418": 439, "342": 444, "3420": 439, "3423": 439, "3426": 439, "3428": 439, "3434": 439, "3438": 439, "3439": 439, "343e": 462, "344": [479, 492], "344238": 521, "3443842": 507, "3445": 439, "3446": 439, "3447": 439, "3449": 439, "344e": 67, "345": [458, 501], "3453": 439, "3454": 439, "345692": 521, "3458": 439, "346": [457, 501, 583], "34613054105945": 476, "346488e": 492, "3466": 439, "3468": 439, "346873": 560, "34693877551019": 479, "347": [444, 460], "3471": 439, "3474": 439, "348": [444, 464], "3480": 439, "3481e": 473, "3488": 439, "348e": [67, 492], "3491": [439, 468], "349530550364513": 495, "349530725238324": 495, "349530739434762": 495, "34953075814257": 495, "349530774637106": 495, "349530793294022": 495, "349530807499818": 495, "349535814771492": 495, "349536722980144": 495, "34953715852974": 495, "349537804335895": 495, "34953807800248": 495, "349538946234787": 495, "349539326364486": 495, "349541972204694": 495, "349559366767238": 495, "349655": 494, "349711555166778": 495, "349724385715966": 495, "3499075e": 497, "349e": 468, "34e": [492, 501], "35": [67, 404, 411, 424, 464, 485, 489, 492, 495, 504, 507, 522], "350": [479, 487, 494], "350105": 475, "3502": 492, "350292033852874": 495, "3503706026275275": 503, "3504": 521, "35050396342807": 495, "35053891085894": 495, "351": [444, 492, 521], "3513e": 519, "3515": 439, "351d": 479, "352": [444, 492], "3521": 460, "3523": 439, "3529": 439, "353": [444, 521], "3535": 441, "3535924566679284e": 518, "3536": 458, "353e": 475, "3544": 439, "35569283": 497, "355711": 579, "355804": 521, "3559": 439, "356": 521, "3561": 439, "3568": 439, "357": [479, 492, 521], "35722435185": 492, "3576e": 460, "358": [475, 492, 521], "3583": 475, "3584": 439, "359": [444, 457, 475, 492, 518, 521, 522], "3590188e": 497, "3592": 439, "3599": 477, "359e": 521, "36": [67, 86, 151, 332, 460, 470, 475, 477, 492, 493, 497, 521], "360": [401, 499, 523], "3600": [467, 477, 478, 499], "36014": 473, "36073833513766157": 503, "361": [67, 444, 479], "3619e": 519, "36228879": 521, "36273": 521, "363472509034498": 503, "3639946": 487, "364": 444, "3659253e": 497, "366": [494, 519], "366486": 494, "36669663417038234": 503, "3669": 441, "367": [444, 501], "36734693877551017": 479, "3674884": 492, "368": 479, "36834038301420274": 503, "368346217294295": 96, "3684": 441, "3689322e": 497, "369": 444, "3690": 521, "3699": 441, "36e": [491, 492], "37": [458, 459, 465, 467, 471, 486, 494, 495, 508, 600], "370": [492, 501], "370944": 552, "371": [444, 457, 495, 505], "3710784e": 497, "3712": 441, "3713": 441, "3715810e": 497, "3718745": 97, "372": [127, 521], "3720": 441, "3722": 441, "3728": 441, "373": 475, "3733": 441, "373907718050568e": 489, "3739292e": 497, "374": 479, "3740": 441, "37455141": 521, "3748": 441, "375": [444, 499], "3750": 475, "37506": 521, "37517": 468, "3752": 441, "3759377929871826": 503, "376": 67, "3760": 441, "3761": 441, "3765": 458, "377": [457, 561], "3777": 441, "37773": 468, "3779": 521, "3783": 441, "379": [444, 464], "3792": 501, "3796": 441, "3797": 441, "38": [22, 67, 83, 458, 460, 472, 492, 499, 501, 521, 582], "380": [457, 522], "3802": 441, "3804": 441, "3806": 441, "381": 501, "3810": 441, "3812": [492, 521], "3812120e": 497, "3812160e": 497, "38143003": 97, "3817": 441, "38208917e": 494, "3829": 521, "382e": 464, "383": [67, 444, 492, 499], "3833": 441, "3837": 441, "383e": 67, "384": 494, "3841385": 494, "3842": 441, "3846": 441, "3847": 272, "3848912826152664e": 521, "385": [457, 477, 479, 481], "3856": 441, "386": 479, "3860": 441, "3862": 450, "387": [444, 457, 501, 505, 521], "3872": 492, "3873": 441, "3874": 441, "3876": 441, "387755102040817": 479, "387834": 521, "388": 560, "388405": 521, "3885947175689592": 503, "3886270e": 497, "3887": 441, "389": 392, "3892": 441, "3895": 441, "3898": 441, "389e": 521, "39": [17, 18, 21, 22, 24, 25, 27, 59, 491, 492, 499, 508, 560, 582], "390": [439, 479], "3904": 441, "39042": 86, "3905": 441, "3906": 441, "391": 492, "3915": 441, "3918": 441, "392": [444, 465], "39200283e": 489, "39224": 468, "3925": 450, "393": [210, 211], "3933": 441, "3935": 460, "3936": 441, "394": 444, "3941": 441, "3945": [460, 492], "3947637541758": 486, "394767169890468": 518, "3948": 442, "395": 444, "3950": [412, 450], "395004": 521, "3956": 450, "3959": 442, "396": 444, "3962942e": 497, "3966": 442, "397": 464, "3970": 413, "397035530476818e": 489, "39728": 521, "3975": 442, "3979": [442, 598], "397918129147546": [424, 598], "39791813": [424, 598], "398": [444, 471, 473], "3981": 521, "39810717055": 494, "3981075200000000": 521, "3983": 442, "3986": 442, "3987": 442, "3988": 442, "398e": 492, "3990": 442, "39e": 492, "3d": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 46, 47, 151, 157, 164, 165, 167, 176, 287, 289, 393, 396, 397, 398, 402, 403, 406, 407, 408, 420, 428, 429, 430, 432, 433, 434, 435, 446, 447, 448, 455, 457, 458, 459, 462, 464, 465, 468, 470, 471, 475, 476, 477, 478, 479, 481, 485, 486, 489, 493, 495, 497, 498, 499, 500, 501, 502, 503, 507, 508, 509, 518, 519, 531, 533, 534, 535, 542, 547, 595, 597], "3d33m15": 67, "3dataset": 474, "3e": [20, 127, 133, 475, 478, 482, 484, 487, 489, 492, 501], "3e4": 508, "3e5": 508, "3e6": 582, "3e7": 582, "3f": [127, 476, 599, 600], "3fgl": [61, 67, 74, 231, 271, 410, 440, 443, 445, 446, 447, 457, 462, 492, 502, 521, 530, 549, 562, 583], "3fgl_name": 71, "3fhl": [62, 75, 86, 129, 131, 136, 227, 251, 290, 407, 446, 447, 462, 468, 477, 479, 492, 499, 500, 501, 502, 508, 521, 530, 532], "3fhl_data_fermi": 474, "3fhl_dataset": [290, 474, 500], "3fhl_model": [290, 474, 501], "3g": [491, 492], "3hwc": [63, 76, 439, 450, 492, 530], "3ml": [405, 508], "3pc": [64, 69, 77, 455, 492], "3pc_catalog": 64, "3rd": 64, "3rd_psr_catalog": 64, "4": [17, 19, 20, 21, 22, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 35, 36, 37, 38, 39, 40, 52, 54, 61, 67, 83, 87, 91, 102, 103, 106, 110, 111, 116, 119, 130, 136, 148, 153, 156, 164, 176, 179, 195, 196, 197, 198, 199, 200, 205, 208, 209, 221, 222, 225, 229, 231, 232, 233, 238, 242, 244, 245, 248, 252, 254, 256, 257, 258, 263, 268, 270, 271, 272, 273, 276, 280, 283, 290, 291, 332, 374, 387, 388, 390, 391, 399, 401, 404, 407, 411, 412, 424, 427, 436, 438, 439, 440, 443, 445, 446, 449, 455, 458, 459, 460, 462, 464, 465, 466, 467, 468, 470, 471, 473, 474, 475, 476, 477, 478, 479, 482, 484, 485, 486, 487, 489, 490, 491, 492, 493, 494, 495, 497, 498, 499, 500, 501, 502, 504, 506, 507, 508, 509, 510, 512, 518, 519, 521, 523, 528, 529, 530, 544, 547, 548, 553, 554, 557, 563, 568, 581, 582, 591, 597, 598, 599, 600, 601], "40": [59, 110, 111, 394, 440, 460, 462, 464, 465, 473, 475, 485, 486, 489, 499, 502, 507, 521, 544, 569, 572, 577, 582, 599], "400": [136, 468, 470, 475, 479, 492, 499, 521, 592], "4000": 450, "40000": [176, 519], "400056": 458, "40050506591797": 492, "40051035": 492, "40071076": 97, "400x200": 479, "401": 465, "40112": 521, "4013": 450, "4014": 450, "4015": 450, "4017": 450, "4018": 450, "401e": 468, "402": 156, "4022": 450, "40235": 473, "4024": 450, "4025": 450, "4026": 450, "402712": 492, "403": [444, 475, 501], "4035": 521, "4037": 450, "403820": 553, "4043": 450, "4044": 450, "40481": 473, "405": [395, 479], "4051": 450, "40525": 473, "4054": 450, "4058": 450, "406": 521, "40611": 521, "4067": 450, "40671": 471, "40672": 471, "407": [457, 476, 481, 492], "4071": 450, "4073": 450, "4073799600000000": 521, "4075": 450, "4076": 450, "4079": 450, "408": [464, 499], "4080": 450, "4080942e": 497, "40822469e": 502, "4083": 450, "4084": 450, "4088": 450, "4089": 450, "40919": 468, "4093": 450, "409416": 521, "4095": 450, "4098": 450, "40deg": 507, "41": [67, 86, 94, 401, 492, 493, 499, 508, 521], "41009347393684": 493, "4103": 450, "4105": 450, "4106": 450, "4107": 450, "4108": 450, "411": 521, "4110e": 492, "4112": [127, 450], "4113": 450, "4115": 450, "4119": 450, "411e": 462, "4120719e": 497, "412165": 475, "412779907405": 492, "413": 475, "414": 444, "414054187946": 476, "41415047": 97, "4142135623730951": 120, "41449": 468, "414e": 468, "415": [444, 573], "4151e": 473, "4155": [492, 521], "41584196": 490, "416": [67, 473, 492, 498], "4161e": 473, "417": 492, "418007850646973": 424, "41803": 471, "41866": 508, "419": 501, "4191": 453, "4198250e": 497, "41995": 468, "419e": 492, "41e19": [19, 20], "42": [25, 27, 94, 156, 354, 401, 467, 475, 492, 497, 498, 499, 503, 507, 548, 552], "42050348": 493, "4208": 453, "4209": [453, 468], "421": [444, 521, 597], "4210": 453, "4212": 453, "4212028e": 497, "4213": 453, "4215": 453, "4216": 453, "4217": 454, "4219": 453, "422": [457, 463], "4220": 473, "4221": 451, "4225498e": 497, "4225631e": 497, "42267": 475, "4226731": 475, "423": 464, "4231": [451, 453], "42361": 468, "42399798": 475, "423e": 127, "42400": 475, "4242": 453, "4243": 453, "4245": 453, "42463": 508, "424650": 493, "42474": 521, "425": 521, "4252": 453, "426": 492, "4264": 453, "4268": 451, "427": 465, "4275": [451, 453], "4277": 453, "4280": 453, "4281": 492, "4282": 453, "428571428571404": 479, "4288": 453, "429": 464, "4294": 453, "42e": [495, 501], "43": [283, 354, 401, 465, 473, 475, 486, 493, 499, 521, 548], "430": 492, "43000": [52, 53], "4301": [451, 453], "4303606e": 497, "4305": 453, "431": [395, 493], "431024101062279e": 518, "43113": 458, "4313847458879893": 503, "4319": 521, "43197": 468, "432": [457, 475, 481], "4324": [451, 453], "4326": 453, "432878": 492, "432e": 492, "433": 468, "4336": [451, 453], "43366": 592, "4338e": 459, "434": 492, "43416595": 487, "4344": 451, "4346": 453, "435": 444, "4350": 453, "4351637481047363": 503, "4352": 453, "4357": 272, "4359": [451, 453], "435e": 464, "435l": 492, "436": 444, "4360750e": 497, "4369": 453, "437": [492, 501], "4370": 453, "4373240195300975": 503, "438": 501, "4380": [452, 453], "4381": [415, 454], "4382": 452, "439": 464, "4393": [452, 453], "4394": 452, "4395": 453, "4397": [452, 453], "439e": 492, "43e": 501, "44": [21, 50, 86, 354, 459, 467, 485, 487, 499], "4402": 453, "44055555555555603": 94, "4406": 453, "4408": 454, "4409": 453, "4412": [452, 453], "4417": 453, "4418": 453, "4420073e": 497, "4420222e": 497, "4428": 453, "4428634e": 497, "443": 464, "4430": 453, "44319": 493, "4432": 454, "4433": 455, "443351": 566, "4435": [452, 453], "4444": 453, "444e": 474, "445": [468, 512], "4450": 521, "44528685": 521, "4453": [452, 453], "44573": 94, "4458": 453, "4459": 453, "446": [501, 600], "4466": [453, 473], "4466832000000000": 521, "4466835921": 494, "447": 444, "44742": 521, "44749e": 458, "44755": 471, "447552": 458, "447e": [475, 492], "4480056e": 497, "44802852": 521, "4481": 492, "4485": 454, "4486": [452, 453], "44897959183673": 479, "4491": [414, 454], "4495": 453, "4497": 493, "44e": 424, "45": [51, 54, 458, 460, 464, 465, 466, 467, 468, 470, 471, 473, 474, 475, 476, 477, 478, 479, 484, 485, 486, 487, 489, 491, 492, 493, 495, 498, 499, 500, 501, 502, 504, 506, 507, 508, 509, 510, 518, 519, 521, 523, 548, 554, 555], "450": [457, 501, 583], "4500": [452, 453], "4501": 454, "4502e": 466, "4504": 453, "4506": 453, "4508": 453, "4510": [453, 473, 521], "4515": 491, "4517490659800822": 484, "4520": 452, "4521": 453, "4524": 452, "453": [459, 501], "454": 464, "4540": 454, "4545": 453, "4546": 454, "455": [444, 462], "45515263080596924": 460, "45517415e": 494, "455870": 475, "455e": 67, "456": 444, "4561": 454, "45646095": 487, "4567": 454, "457": [284, 444, 501], "457251": 521, "4574": [452, 454], "4575": 94, "4578": 452, "4579e": 458, "458": 492, "4584": 454, "45856": 521, "4586649826004114": 312, "459": [444, 457, 493, 501, 515], "4593": 452, "45935": 521, "4595": 454, "4599": 454, "459941302": 83, "45\u00ba": 509, "46": [53, 67, 110, 111, 401, 467, 492, 499], "460206": 585, "460249999": 86, "4608": 454, "461": [444, 489], "4615": 454, "46186956763267517": 460, "4619": 452, "462": [444, 457, 464, 522], "4620": [415, 454], "4620e": 492, "46225": 468, "4628": 454, "463": 521, "4631": 452, "4635": 454, "4638": 454, "4639e": 470, "464": 482, "4642048e": 497, "4647544e": 497, "465": [464, 492, 501], "4653": 452, "4657": [452, 454], "465784": 521, "4660": 454, "4664": 454, "4668": 454, "4669": 454, "4671": 454, "46711": 468, "4675e": 485, "4677": [452, 454], "468": [487, 492], "4681": 452, "4684": 460, "468805426856864e": 52, "468e": 67, "469387755102041": 479, "4697": 454, "46e": [83, 470, 475], "47": [67, 486, 489, 492, 499, 521], "4703": 454, "4711": 521, "4712": 468, "4714": 454, "4721": 452, "4726": 454, "4728": 452, "4729": 454, "473": [444, 464], "4738": 454, "474": 444, "4740": 454, "4741": 454, "474e": [486, 492], "475": [444, 501], "4750": 454, "4753": [452, 454], "475468": 458, "4755": 452, "4759": 454, "4770": 454, "4772": 452, "47797": 468, "477e": 492, "478": 444, "47802": 503, "47803": 503, "47804": 503, "47827": 503, "47828": 503, "47829": [82, 503, 510], "4783": 454, "4785": 454, "47e": 492, "48": [33, 176, 427, 473, 474, 486, 499, 501, 508], "480": [460, 492, 501], "4802": 454, "4805": 454, "480554966154": 473, "48068": 468, "4808": 454, "480e": 492, "481": [392, 444], "4810": 454, "4814": [454, 521], "4817": 454, "48180953439317e": 518, "4819444e": 497, "482": 458, "48215685": 97, "4822": 454, "48248": 492, "4825": [492, 521], "4828": 454, "4829": 454, "4834": 454, "4834488e": 497, "4835": 454, "4837": 454, "484": [444, 479], "48442": 278, "4845": 454, "4847": 454, "4848653": 492, "4849": [454, 492, 521], "485": 444, "4850": 454, "4851": 454, "4854": 454, "486224": 587, "487": [444, 479, 518], "4875723e": 497, "4876": 452, "4879": 454, "4881": [257, 258], "4886": 454, "48871": 458, "4897959183673475": 479, "489e": 492, "48e": [492, 501, 519], "49": [53, 468, 473, 479, 492, 501, 508, 518, 547], "4902": 454, "4904": 454, "4904078e": 497, "49078e": 458, "4913": 452, "49152": 508, "4917": 454, "493043594026": 473, "4933657e": 497, "4936": [452, 454], "4937": [452, 454], "493859471564": 591, "49387546705": 590, "49387897563": 589, "4940": 454, "49417615": 86, "4942": 454, "494e": 464, "4958277": 97, "496021": 507, "4963": 521, "4966": 521, "4968236e": 497, "4970": 454, "4971": 454, "49716789e": 494, "4971704e": 497, "4973": 454, "4975": 454, "4978": 454, "498": 521, "4983": 455, "498784": 492, "4989": 454, "498e": [492, 521], "499": [67, 492], "49919925926": [242, 593], "4992": 454, "4994": 454, "4996": 455, "49972277488662115": 503, "4999833830074": 475, "4d": 406, "4e": [487, 492, 501, 582], "4f": [598, 599, 600], "4fgl": [65, 78, 272, 273, 410, 431, 433, 439, 441, 454, 457, 459, 474, 492, 500, 502, 530, 549, 562, 583], "4th": [399, 426], "4xndnf_n": 489, "4yr_catalog": 61, "5": [16, 17, 18, 19, 20, 21, 22, 24, 25, 26, 27, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 50, 52, 53, 67, 83, 87, 91, 103, 104, 106, 109, 110, 111, 120, 124, 127, 128, 130, 132, 133, 134, 135, 136, 144, 145, 153, 154, 155, 156, 157, 158, 163, 164, 165, 166, 167, 176, 179, 194, 195, 196, 197, 199, 200, 201, 204, 205, 206, 207, 208, 209, 221, 222, 225, 227, 228, 229, 231, 232, 233, 237, 238, 240, 242, 244, 245, 248, 251, 252, 254, 256, 257, 258, 263, 268, 270, 271, 272, 273, 276, 278, 280, 284, 308, 314, 346, 377, 378, 382, 384, 387, 388, 391, 392, 394, 398, 399, 401, 402, 403, 404, 406, 410, 411, 412, 416, 419, 424, 427, 429, 431, 432, 439, 441, 443, 444, 446, 447, 448, 452, 458, 459, 460, 462, 464, 465, 466, 467, 468, 470, 471, 473, 474, 475, 476, 477, 478, 479, 482, 484, 485, 486, 487, 489, 491, 492, 493, 494, 495, 497, 498, 499, 500, 501, 502, 503, 504, 506, 507, 508, 509, 510, 518, 519, 521, 523, 528, 529, 532, 539, 542, 544, 545, 546, 547, 548, 553, 554, 555, 556, 558, 563, 564, 569, 571, 572, 573, 577, 578, 582, 586, 587, 588, 589, 591, 597, 599, 600, 603], "50": [87, 91, 94, 105, 112, 117, 126, 134, 354, 394, 414, 458, 463, 465, 466, 471, 473, 482, 485, 486, 487, 492, 493, 497, 499, 501, 502, 503, 507, 508, 510, 518, 519, 521, 544, 547, 556, 600], "500": [196, 197, 199, 205, 208, 209, 468, 475, 477, 478, 499, 507, 508, 521, 547, 553], "5000": [19, 20, 87, 91, 523, 547], "5000056568267741": 475, "5000e": 467, "500153": 502, "50022222": 94, "500249": 492, "5004": 475, "5015": 454, "502": 444, "5029747": 466, "503": 444, "5030": 521, "5040": 454, "5044": 454, "5049": 521, "505": [67, 492, 493], "505523195905": 473, "5057": 455, "5058": 455, "506": 444, "5066": 492, "507": 444, "5074834": 97, "5078068": 97, "50807568877": 492, "509587": 494, "509632": 494, "509e": 492, "50_100_wtct": 77, "50e": [467, 501], "51": [52, 53, 67, 471, 473, 518], "510": [444, 494], "510204081632645": 479, "5106": 521, "51095676": 487, "511": [67, 444], "5115": 455, "51179": [388, 602], "5118": 455, "512": 464, "5125": 455, "5126": 67, "5129": 455, "513": [424, 499], "51312": 475, "5135": 455, "5144": [94, 458], "5145": 455, "514854": 507, "515": [457, 493, 505], "51544": [467, 477, 478, 482], "5156": 455, "5160": 455, "5161": 455, "5162628e": 497, "5163273": 507, "5169": 455, "5176": 455, "518": [444, 501], "5180": 455, "5184": 455, "5186": 455, "5188": 455, "5188338e": 497, "51910": 94, "5192420e": 497, "5194769e": 497, "51948705e": 502, "51958055e": 494, "52": [53, 127, 176, 458, 460, 468, 471, 473, 486, 492, 507, 510, 521], "5200": 455, "5205": [455, 508], "5206": 455, "5207": 455, "52074074074": 83, "521": 445, "5222": 455, "5223693250599": 486, "523": [445, 499], "5230376e": 497, "52318414": 97, "523681640625": 464, "5237647004325865": 503, "52389101852": 492, "523a": [248, 284], "523e": 465, "524": [445, 492, 501], "5248": 521, "524807800000000": 521, "5254": 455, "5255": 455, "5258": 455, "52587": 468, "526": 445, "52607": 521, "5269": 455, "527": [445, 508], "5270": 455, "5271": 455, "5275": 455, "5279": 455, "527e": 465, "528": [464, 501], "5280": 455, "52826166": 492, "5283": [492, 521], "52839183495354": 486, "5285": 455, "5289": 455, "529": 445, "5292": 493, "5297": 455, "5297030e": 497, "5298": 455, "52e": [487, 518], "53": [28, 475, 489, 504, 553, 563], "530": 445, "5300": 455, "53025": 94, "5303": 455, "5304": 455, "530612244897945": 479, "531": 445, "5312": 455, "5314": 455, "5316": 455, "5320": 455, "53213": 475, "5324402": 97, "5326744": 97, "5326841": 97, "5326859": 97, "533": 492, "53343": [424, 484], "53344": 484, "53345": 484, "53346": 484, "53347": 484, "53348": 484, "533564": 573, "5342": 455, "5345275e": 497, "5346": 455, "53482e": 458, "535": [445, 492], "5350": 455, "535058216604496": 284, "5353": 455, "5356": 455, "53566": 458, "53616": 248, "5366": 455, "537": 479, "5370": 455, "5378": 455, "5380": 455, "5381": 455, "5382": 455, "538491845944134e": 489, "5385": 455, "5389": 455, "539": [284, 501, 560], "5390": 455, "5390438": 97, "5392e": 485, "539397": 492, "53945": 485, "53946": [489, 490], "539e": 492, "53e": [424, 467], "54": [67, 457, 460, 463, 464, 492, 497], "5400": 493, "5405": 455, "5407": 455, "5407363826067": 532, "5407363826070": 532, "5408": 455, "5409": 455, "541": 445, "5411": 458, "5423": 455, "5427": 455, "5427520e": 497, "54282": 468, "5433": 455, "5437": 455, "5438": 455, "5438860e": 497, "544": [445, 492, 508], "5445": 455, "5448": 455, "5449": 455, "545": 445, "5453": 455, "54549984606362": 486, "54566271": 599, "546": 445, "5461745": 97, "5462": 455, "5466": 455, "54676809e": 495, "54682": [468, 492, 508, 521], "547": [445, 458, 492], "5472": 455, "54721e": 458, "5477": 492, "54772": 492, "54892": 468, "548e": 492, "549": 445, "5490039491683206e": 518, "5499840": 507, "54e": 501, "55": [39, 42, 87, 91, 214, 486, 487, 495, 500, 504], "550": 464, "55045": 492, "551": 492, "5510204081632653": 479, "55197": [388, 602], "552": 492, "5525": 455, "55275": 508, "553": [459, 492], "5531e": 459, "553337": 521, "5538": 521, "5538942e": 497, "553e": 468, "554": 67, "55410": 492, "5545": 455, "5545130e": 497, "55461982e": 494, "554e": 462, "556": [445, 464, 600], "5561760e": 497, "557": [445, 501], "55775": 492, "558": 445, "5583371740851524": 518, "559": 445, "5594": 83, "56": [458, 465, 487, 499, 509], "560": [37, 492], "5606985": 487, "5607778e": 497, "56093766": 97, "56141": 492, "562": 492, "5622482": 97, "56234132519": 494, "563292": 482, "56353481": 599, "563e": [464, 475], "564": [299, 445, 464, 501], "564139576922415": 476, "5644": 493, "565": 445, "56506": 492, "565095": 458, "566": [457, 512], "566e": 464, "56711": 521, "56871": 492, "568868": 591, "569": 445, "56922612": 599, "5692809e": 497, "56973": 521, "569e": 486, "57": [33, 468, 475, 487, 499, 558], "570": [457, 488, 489], "57011": 475, "571": 492, "571428571428572": 479, "57185": 532, "5719922e": 497, "571e": 492, "572": [457, 465, 512], "57233": 521, "57236": [468, 492, 508, 521], "572e": [462, 468], "573": [67, 464, 521], "57300957": 179, "5754970e": 497, "576": 501, "5760": 521, "57602": 492, "5763635e": 497, "5768262e": 497, "576e": 468, "577398": 508, "5779092e": 497, "578": [492, 494, 599], "5782814": 494, "579": 492, "579175481848329e": 489, "57944657408": 492, "57967": 492, "579889": 568, "57e": 492, "58": [424, 427, 467, 473, 476, 492, 498, 499, 501, 510, 518, 553, 557, 559], "580": 600, "580375459169": 486, "581": 465, "5819e": 466, "582": 445, "58332": 492, "5833e": 492, "5835918e": 497, "583e": 468, "584": [457, 505], "5842497e": 497, "585": 492, "58540702": 97, "5867488e": 497, "58693695": 487, "58698": 492, "588e": 492, "58909": 486, "58926": 468, "5892966e": 497, "5895": 460, "58999": 242, "58e": [482, 492, 494], "59": [83, 471, 482, 484, 492, 498, 510, 521, 552, 555], "590": 464, "59000": [242, 593], "59001": 242, "59063": 492, "5908": 492, "590835686434463": 503, "591": [445, 492], "59100": [592, 593], "59123": [586, 587, 588], "5915030546513255": 490, "5915e": 492, "59200": 592, "5921e": 519, "59233": 502, "59235": [83, 507], "59240": 502, "59250": 502, "59254e": 458, "59265": 458, "593": 445, "59300": 487, "59344": 521, "59348": 521, "59365": 593, "594": 445, "59400008": 97, "59428": 492, "59451": 468, "59497734e": 489, "5951631e": 497, "5956621435": 494, "596": 501, "59696": 468, "596e": 492, "597195622266303e": 489, "597774": 497, "59793": 492, "598": 521, "5985": 521, "5987726": 97, "599": [445, 485, 501], "599625": 507, "59976": 492, "599999904632568": 492, "59d09m41": 492, "59e": [492, 501, 508], "5a": 58, "5c1": 473, "5d": 603, "5e": [467, 478, 492, 494, 501], "6": [28, 29, 30, 31, 32, 35, 36, 37, 38, 39, 40, 50, 52, 53, 67, 86, 87, 91, 100, 103, 110, 112, 117, 127, 132, 150, 151, 152, 153, 154, 156, 157, 158, 160, 163, 165, 167, 168, 194, 195, 196, 197, 199, 200, 201, 204, 205, 207, 208, 209, 242, 284, 375, 378, 391, 394, 399, 403, 404, 407, 412, 421, 424, 437, 439, 441, 447, 448, 452, 454, 458, 459, 460, 462, 464, 465, 466, 467, 468, 470, 471, 473, 474, 475, 476, 477, 478, 479, 482, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 497, 498, 499, 500, 501, 502, 504, 506, 507, 508, 509, 510, 518, 519, 521, 527, 544, 548, 555, 559, 580, 597, 599, 603], "60": [67, 91, 158, 452, 465, 468, 492, 495, 508], "600": [465, 468, 474], "6000": 547, "6000000000000001": 502, "600661": 497, "60075": 497, "60090769e": 502, "600e": 464, "6018166e": 497, "601e": 492, "6024e": 519, "603": [501, 521], "6033": 458, "60350": 462, "603625": 497, "604": 464, "6046689e": 497, "60603928": 502, "607": 479, "607314": 556, "60795": [589, 590, 591], "60e": 492, "61": [67, 434, 473, 492, 501, 508, 600], "610": 501, "61051": 508, "6105760e": 497, "611": [468, 494, 599], "611168": 494, "6116853": 492, "611e": 492, "612244897959162": 479, "6125": 510, "612e": 468, "613114": 490, "61422433": 97, "61489": 497, "615316": 521, "617835": 497, "6181862e": 497, "61862": 242, "619": 492, "6194453e": 497, "61975474351522": 518, "62": [492, 509, 519], "620": 492, "620398": 497, "6205": 521, "62111": 468, "621191": 105, "621499": 521, "6218742e": 497, "6219": 462, "622": [445, 462], "62258": 492, "6227766": 499, "62277660168379": 499, "6228e": 462, "623": [492, 521], "62320": 462, "623397": 497, "62341325": 499, "623413251903492": 499, "624": 501, "624122": 475, "62503": 492, "62514628": 497, "6253652e": 497, "6259962e": 497, "6266": 521, "6267247": 521, "628": 445, "62842028": 493, "63": [194, 195, 204, 207, 458, 464, 466, 493, 498, 509, 518, 519, 542, 544, 545, 548], "630": [82, 457, 463, 501, 510, 518], "6309576500000000": 521, "630e": 67, "631": [445, 473], "631155605": 477, "631159205": 477, "631170005": 477, "631173605": 477, "631177205": 477, "631180805": 477, "6318811e": 497, "6324": 506, "632627": 521, "632653061224474": 479, "633": [85, 103, 106, 110, 111, 176, 465, 474, 498, 518, 519, 544], "63307": 83, "63308": [484, 519], "633083": 500, "63310241699219": 474, "63326": 468, "6333": 94, "63342": 521, "633600": 501, "635": 445, "63500212963": 492, "6354": 521, "63541": 507, "63668832485633": 486, "638": 501, "639": 492, "6390": 458, "63902": 458, "6394e": 470, "6397": 521, "63e": 493, "64": [39, 67, 83, 127, 195, 427, 482, 492, 508], "640": 445, "6402822e": 497, "641": [445, 521], "64103": 507, "6413": 475, "6417": 475, "6419578e": 497, "642": 521, "6424216679053606": 476, "6429005895278312": 503, "642e": 464, "643": 33, "64323": 468, "643446": 582, "64438": 508, "6444": 458, "644527": 494, "645": [493, 494], "6451": 475, "6464": 458, "646685": 572, "647": 445, "6471115e": 497, "64794383e": 502, "648": 445, "648e": 67, "649": 445, "64987376": 97, "64e": 465, "65": [63, 411, 427, 429, 493], "650": [457, 493, 505], "6509": 458, "651": 492, "651058": 521, "6514": 521, "652": 474, "6522806": 521, "652368617859867": 474, "652446": 126, "653": [445, 460], "6530612244897958": 479, "65357608e": 497, "654": [458, 492], "65412": 475, "654e": 492, "655": 468, "655283": 468, "6554088e": 497, "6556248e": 497, "6557": 468, "655e": [67, 465], "656": 599, "65603222222": 508, "65603794185": 492, "6561e": 473, "6577182894355391": 503, "658": 501, "658909145253801e": 521, "6589622747787678": 503, "659": [464, 468], "66": [52, 53, 427, 430, 464, 467, 474, 493, 495, 501, 504, 508, 518], "660": 445, "6604475": 475, "660e": 521, "660fals": 462, "661": 445, "6610048102039": 476, "66104": 458, "6616238654842": 486, "662": 492, "663": [464, 599], "663742400000000": 521, "664502403": 507, "664502405": 507, "664502408": 507, "664502409": 507, "664502414": 507, "664e": 468, "6652219e": 497, "6656873021399436": 476, "66650390625": 460, "6666666666583865": 485, "6666666666666666": 588, "6678": 468, "66813": 475, "66984341": 497, "669e": 468, "66e": [473, 493], "67": [17, 427, 492, 521], "670": [457, 488, 492], "6705024680435898": 312, "671": [466, 477, 510, 586], "671543894356": 486, "671616": 458, "6728": [492, 521], "67304": 97, "67375": 458, "67457342435522e": 521, "675": 464, "6768369882203884": 465, "6768e": 465, "677": 445, "6772235e": 497, "67759236e": 497, "678": [86, 476], "67824": 493, "6784": 599, "67861": 497, "6786834721261165e": 465, "6787": 486, "6788e": 486, "679": 445, "679478008101006e": 465, "6795e": 465, "67992517": 97, "67e21": 491, "68": [67, 83, 96, 157, 163, 165, 166, 167, 169, 237, 427, 458, 492, 495, 497, 499, 507, 521, 600], "680": 501, "6803": 521, "6812310184489": 486, "68125": 497, "6823": 458, "683531458783184e": 489, "684": 176, "68542112": 97, "685848": 502, "685880899226832e": 489, "68628538586": 493, "687": 501, "687214": 498, "687500": 498, "687685": 492, "68e": [459, 473, 492], "69": [103, 454, 468, 482, 492, 493], "690": 67, "690088": 564, "690557685186": 492, "6909290e": 497, "691": 492, "69138": 468, "691492300600544": 476, "691680": [103, 493, 501], "692": 468, "692e": 465, "69314486": 500, "693877551020403": 479, "693940": 473, "6953125": 493, "69543812": 97, "6959369197218669": 503, "695e": 468, "697317": 508, "69735": 497, "6976e": 466, "697e": 462, "697fals": 462, "6985": 460, "698995": 555, "6992": 475, "6e": [462, 492, 501], "6h": 509, "6jbabgcd": 498, "6th": 426, "7": [30, 31, 38, 52, 53, 67, 87, 91, 103, 106, 127, 133, 176, 179, 206, 212, 214, 240, 377, 378, 387, 391, 392, 399, 403, 404, 407, 424, 428, 429, 431, 432, 438, 439, 444, 445, 446, 448, 449, 458, 464, 465, 467, 468, 474, 476, 477, 484, 485, 486, 487, 489, 490, 492, 494, 495, 497, 498, 499, 501, 502, 503, 504, 507, 508, 518, 521, 548, 553, 554, 592, 599, 600], "70": [67, 91, 103, 465, 475, 492, 493, 599], "700": [395, 478, 494, 500], "70000000e": 502, "7000e": 502, "70016": 475, "7007": 475, "701": 544, "702": [484, 492, 508, 519], "702e": 468, "703": 424, "70358483e": 502, "704": 501, "70428": 521, "70437": 497, "705": 521, "70546": 468, "70634e": 458, "706e": [474, 492], "707945784": 494, "708": [464, 465], "709": 445, "7097381e": 497, "70e": 502, "71": [33, 307, 309, 465, 467, 501, 600], "710": 445, "71067811865478": 492, "711541686998153e": 489, "7116851": 502, "711e": 468, "712": 476, "71220672": 493, "7123895e": 497, "712589": 557, "712e": [484, 519], "713": [445, 492], "7132e": 521, "71359513e": 494, "714": 492, "714285714285705": 479, "715": 521, "716": [96, 312, 313, 499], "716062": 507, "71693826": [485, 489, 503, 535], "717": 492, "71795506": 521, "7184": 521, "719": [445, 501], "7190994e": 497, "71944e": 458, "7195": 492, "719e": 492, "72": [431, 460, 486, 492, 498, 521], "720": [478, 492], "7200": 482, "722": 501, "72217": 521, "722557505166": 492, "722649": 593, "723": 468, "723e": 492, "7240965e": 497, "72411791e": 494, "725": 492, "727": 501, "72775": 521, "728": [457, 481], "7284447e": 497, "729e": 468, "73": [458, 521], "7303": 521, "731": 445, "731586963481223e": 518, "732e": [67, 492], "733": [67, 445], "734": 521, "7346938775510206": 479, "7350250533013533": 503, "7350380e": 497, "7351418e": 497, "735e": 492, "736": [464, 599, 600], "737": 464, "738": [445, 492], "7385727e": 497, "739": 445, "7395744e": 497, "739770898783367e": 416, "739e": 67, "73e": [492, 518], "74": [458, 521], "740": 445, "742": [457, 471, 472, 501], "743e": [459, 492], "74427": 475, "74465974e": 497, "74479": 468, "74542e": 458, "746": 445, "7471700e": 497, "7479085e": 497, "748": 492, "748259": 473, "7482e": 486, "74989420933": 494, "75": [67, 380, 455, 459, 464, 521], "750": 600, "751418": 567, "751647922374016": 518, "75267735": 521, "753": [445, 465], "7537086e": 497, "754": [445, 508], "75408483": 521, "755102040816327": 479, "7555": 498, "7559": 521, "756": 492, "7567": 458, "7580410e": 497, "759": 445, "7596682e": 497, "75e": [492, 519], "76": [476, 489, 499], "7613": 424, "762": [445, 457, 505], "762199399999986": 560, "763": 445, "7637308880733709": 503, "7638": 468, "763e": 468, "76419591747674": 486, "7647": 521, "76473": 468, "7652512e": 497, "766": [445, 468], "7660168382": 492, "766d": 507, "767": 445, "76739": 492, "768": [457, 583], "768000": [103, 493], "768048": 97, "7681656e": 497, "76837444": 487, "7684028": 521, "7692170e": 497, "76e": 501, "770": 67, "771667": 510, "77174": 468, "7718272408581743": 312, "771e": 492, "772": [445, 458], "77206": 521, "77218": 468, "773": 492, "7733e": [459, 492], "77351": 468, "774": [445, 482], "7743568599274": 486, "7743835449219": 464, "774e": 492, "775": [67, 501], "7752246952377783": 475, "7755386e": 497, "7760": 521, "7763307219821931": 312, "7765957e": 497, "77678": 458, "7769775": 507, "777": 445, "7771617763704126": 312, "77751797": 97, "777e": [67, 462], "778": [445, 464, 492], "77827941": 499, "778279410038923": 499, "779": [465, 492], "7796942": 521, "77986234839364": 486, "779e": 464, "77e": [467, 492], "78": [499, 500, 509, 519], "780": [31, 127, 457, 583], "7800e": 464, "7804888e": 497, "780e": 127, "78188": 468, "78188096": 97, "782": 508, "7827941": 499, "78279410038923": 499, "783": [445, 492, 521], "78332719": 475, "78333": 475, "783587001383003": 507, "783e": 475, "784": [446, 465], "78499999999997": 556, "785": 556, "7853981633974483": 591, "787": [67, 176], "7871694602003052e": 484, "7875405607868806": 503, "7876233e": 497, "788": 492, "7887840e": 497, "788e": 492, "789": 445, "78910994": 97, "7894": 475, "78952750835169": 486, "78e": 501, "79": [460, 492], "790": 445, "791": 446, "7913e": 464, "7922": 458, "793": [446, 468], "794": 494, "7941697": 494, "79432823": 502, "7943282347": 494, "79469899": 475, "79470": 475, "794e": 468, "79591836734692": 479, "796": [446, 501], "797": 446, "7972": 498, "798": 446, "798218": 458, "799": 464, "7990194e": 497, "7997221e": 497, "799999952316284": 492, "7c": 499, "7d": 492, "7e": [492, 501, 502], "7e955f": 427, "8": [17, 18, 21, 22, 24, 25, 27, 38, 40, 50, 67, 87, 89, 91, 101, 103, 106, 110, 111, 112, 117, 130, 150, 151, 200, 207, 240, 242, 314, 387, 391, 394, 395, 404, 428, 429, 432, 434, 435, 439, 440, 441, 444, 445, 446, 449, 458, 459, 460, 462, 463, 464, 465, 466, 467, 468, 470, 471, 473, 474, 475, 476, 477, 478, 479, 481, 484, 485, 486, 487, 489, 490, 491, 492, 493, 494, 495, 497, 498, 499, 500, 501, 502, 504, 506, 507, 508, 509, 510, 518, 519, 521, 528, 530, 539, 544, 548, 553, 563, 574, 582, 599], "80": [179, 466, 467, 468, 493, 499, 508, 544, 573, 582], "800932": 492, "801": [521, 544], "801668796295": 492, "802": [501, 521], "803": 464, "8031431e": 497, "8037638e": 497, "804": 501, "804492": 482, "80530460334911": 486, "8062607e": 497, "80683246": 497, "807": [468, 560], "8071": 468, "807201": 521, "8075": [492, 521], "8075185": 492, "8084e": 473, "808693108304212e": 495, "80871364": 97, "809": 486, "8090746": 507, "809505": 492, "80982039": 497, "80e": 459, "81": [435, 459, 484, 563], "810": [446, 492], "810000": 482, "8100e": 459, "810e": 492, "811": [446, 481], "811533729700176e": 495, "812": 446, "8120751984899354e": 495, "81221696315049e": 495, "8122425528751894e": 495, "8122e": 495, "8123587278110435e": 495, "81292578645326e": 495, "812951376050203e": 495, "813": 446, "813359": 592, "814": 446, "8150": 521, "815536": 569, "815791997446166e": 495, "816": 446, "8160964882165554": 312, "81632653061222": 479, "81699e": 458, "816e": 492, "818388e": 521, "81847286": 487, "818e": 462, "819": 492, "81e": 563, "82": [67, 427, 473, 492, 519, 548], "820": 446, "8205513": 507, "820562952023891": 312, "82073484337354e": 489, "8222980e": 497, "823": 464, "824": [446, 501], "8241471833009617": 503, "825": [446, 458, 476, 492], "8256": 521, "826": 446, "826414166666": 94, "827": [446, 457, 481], "8272": 523, "82739": 468, "8290458e": 497, "8293": 521, "82946153": 521, "82e": 474, "83": [30, 67, 83, 85, 94, 103, 106, 110, 111, 176, 179, 194, 195, 204, 207, 464, 465, 466, 468, 474, 484, 493, 498, 499, 500, 506, 509, 518, 519, 539, 542, 544, 545, 548], "830": [446, 486], "8300": 521, "831": [446, 457, 486, 488], "832": 446, "83242471": 497, "833": [446, 465, 468], "833333333336": 487, "834": 446, "8341884287660133": 503, "8349780e": 497, "835": 446, "835e": [465, 475], "835fals": 462, "836": [446, 487, 492], "836731": 492, "836734693877551": 479, "8369650e": 497, "837": [446, 501], "8377268e": 497, "838": 468, "8383396349722769": 312, "84": [24, 427, 464, 466, 475, 492, 501, 548], "840": [446, 468], "841": 492, "84196311": 97, "842": [446, 492], "84233": 468, "842x": 138, "843": [458, 487], "843864549579762e": 518, "843e": 67, "8441040e": 497, "844770648146": 94, "8449575657133206": 312, "845": 447, "84529": 492, "8455480e": 497, "845693": 458, "846": [468, 492, 599], "847": 446, "8475576e": 497, "8475650e": 497, "84e": 473, "85": [87, 91, 453, 457, 475, 553, 554], "851": 446, "85157506": 521, "8515948e": 497, "85188496e": 497, "85202": 521, "85287": 508, "852e": 492, "854": 446, "854166666664": 487, "85416667": 485, "85469291": 97, "855": 446, "85527": 475, "85527359": 475, "8555500e": 497, "85624": 470, "85625": 470, "8568": 521, "856e": 492, "8570719e": 497, "85722435185": 492, "858": 446, "858e": 492, "859": [446, 464], "85900": 475, "85900392": 475, "85925": 521, "8593054": 492, "859e": 468, "85e": 492, "86": [462, 464, 465, 468, 486, 499, 521, 532], "860": 492, "861": 521, "86111111": 485, "861150": 462, "8613613e": 497, "8620": 482, "8623": [19, 20, 26, 221, 222, 225, 229, 231, 232, 233, 238, 244, 245, 248, 252, 254, 256, 257, 258, 263, 268, 270, 271, 272, 273, 276, 280], "863": [457, 473, 481], "864": [446, 521], "865": [446, 468], "86676": 508, "8669": 458, "8672": 475, "86793518066406": 460, "868": [446, 492], "86826123833093": 486, "86831929": 97, "869534": 563, "8699": 458, "8699165e": 497, "87": [67, 475, 499], "870": [67, 446], "8704": 468, "870627": 571, "871": 446, "871719011827246e": 489, "872": [446, 468], "873": 465, "8733348": 507, "87358893e": 494, "8736082200157": 476, "873659477745188": 503, "874": 460, "875": 446, "876": 501, "87621184": 471, "8769240e": 497, "876e": 468, "87710186": 97, "877551020408161": 479, "877563": 492, "878": [492, 501], "87897": 475, "87897418": 475, "8799800e": 497, "88": [427, 449, 466, 475, 476, 489, 492, 499, 521], "880e": 468, "881": [446, 458, 468], "8815212313941426": 503, "882": 67, "883": 446, "8834862e": 497, "883e": 67, "884": 446, "88470839": 502, "885": 446, "886": 492, "8865": 521, "88781": 468, "888": 446, "8885138e": 497, "889": 492, "8893600e": 497, "88e": [462, 492], "89": [33, 467, 499], "8908866e": 497, "8909e": 486, "890e": 67, "892": 501, "89243456": 521, "8926": 521, "89287": 458, "893": 446, "893e": 486, "894": 462, "8943121e": 497, "894627": 465, "89492101e": 495, "895": 487, "8954039e": 497, "89595846": 502, "89709472": 521, "89795918367346": 479, "898": 446, "8986348363207728": 503, "89873": 475, "8989213": 475, "898e": [468, 492], "899": 67, "8999": 475, "899a": 284, "89e": 493, "8e": [462, 473, 476, 478, 501, 508, 582], "9": [31, 33, 35, 67, 83, 87, 91, 200, 212, 240, 242, 344, 351, 384, 391, 392, 396, 404, 424, 430, 432, 443, 446, 448, 451, 453, 458, 460, 462, 464, 465, 466, 467, 468, 470, 471, 473, 474, 475, 476, 477, 478, 479, 482, 484, 485, 486, 487, 489, 491, 492, 493, 494, 495, 497, 498, 499, 500, 501, 502, 504, 506, 507, 508, 509, 510, 518, 519, 521, 547, 555, 559, 560, 561, 569, 586, 594, 599], "90": [57, 67, 410, 467, 471, 474, 475, 492, 499, 502, 523], "900": 492, "9002269877996247": 487, "900269": 497, "9011": 482, "902": 486, "9023670e": 497, "90242058e": 493, "9032163": 86, "904": 521, "905": [457, 463, 492], "9053655e": 497, "9053906e": 497, "906": [446, 492], "90605275e": 508, "90677811e": 494, "90685": 468, "907": 492, "9074812e": 497, "9077294": 507, "908e": 464, "909007": 518, "90d": 603, "90e": [103, 465, 473, 493], "91": [467, 499, 504, 548], "911": 446, "911378": 558, "9115524547124256e": 484, "912": 492, "912525e": 521, "912779907405": 492, "913196574074": 484, "913e": 468, "914": 67, "915": 492, "91507": [103, 493], "91612243652344": 460, "9163195e": 497, "91719": 493, "918": 67, "918365": 492, "9183673469387759": 479, "918660": 470, "919": 446, "919e": 492, "91e": 501, "92": [467, 468, 499, 507], "920": 464, "92052435e": 494, "9205875e": 497, "921": 465, "9215375e": 497, "92234009259": [424, 484], "924": 465, "9240e": 502, "92490": 468, "925106": 475, "9269494e": 497, "9277492e": 497, "928": 492, "9280475e": 497, "929": [458, 465], "929597172179024": 518, "93": [67, 125, 127, 467, 468, 499, 507], "93026": 492, "9303": [492, 521], "931": [457, 505], "93128e": 458, "932": 446, "93271046296": 484, "933": 446, "9332549000000": 521, "9343": 458, "935": 486, "935826709880043": 490, "93702": 508, "9382336444241555": 503, "9387755102040822": 479, "938e": [475, 492], "939": [295, 301, 457, 485, 488], "9391360e": 497, "93988308": 97, "93e": 492, "94": [467, 492, 499, 507, 518, 521], "940e": 492, "940fals": 462, "94111838": 97, "94186555556": [424, 484], "943282347242818": 518, "944060876": 494, "9441e": 470, "9453950989269149": 503, "9462": 475, "946923": 278, "947": [457, 463, 465], "94722599": 475, "94723": 475, "947e": 468, "9483e": 482, "948683": 458, "9489822e": 497, "949": 501, "9499210e": 497, "94e": [475, 492], "95": [33, 67, 157, 163, 165, 166, 167, 169, 223, 224, 228, 237, 240, 253, 255, 264, 265, 269, 275, 279, 467, 468, 475, 482, 492, 493, 495, 499, 500, 507, 553, 600], "950": 446, "9500979841335693": 312, "95024536e": 495, "950e": 464, "952": 67, "9529719e": 497, "953": 501, "9537056583888585e": 416, "954": [457, 494, 505], "95421509259": 484, "9544e": 482, "95451985e": 127, "9546285068162436": 503, "95615": 458, "957": 67, "9580e": 466, "95883": 521, "959198": 492, "959d": [52, 53], "96": [427, 459, 467, 493, 499, 563], "9606540e": 497, "9608912e": 497, "9619812963": 484, "96374320": 471, "966": 446, "96602": 470, "966e": 486, "967546": 468, "9677107409819438": 312, "968": [464, 475], "96814": 521, "96833546296": [492, 508], "969": 492, "9692e": 459, "96e": 462, "96r": 499, "97": [467, 492, 497, 503, 519], "97003": 521, "97054": 468, "970e": 492, "97116": 475, "972194607053449e": 489, "973": 492, "9730e": 474, "97369425926": 484, "974e": 492, "975": 446, "97596": 468, "976": 446, "9768e": 486, "97749": 475, "97749371": 475, "9776920e": 497, "979": [67, 446, 499], "97934": 468, "979591836734677": 479, "97978": 83, "97e": 492, "98": [83, 354, 460, 466, 467, 468, 473, 484, 486, 497, 518], "980": 67, "980286": 580, "98049": 468, "98149518519": 484, "9816452e": 497, "982075849517389e": 502, "98258": 468, "983": 482, "9832e": 482, "9833462074166": 492, "9834338e": 497, "98359211280635647": 475, "98429": 468, "9845": 458, "9847406e": 497, "984e": 468, "985": [446, 462], "985502122122975": 503, "9868439189392118": 518, "9876": 458, "988": [446, 492, 501], "988409870698051e": 52, "988413141629203e": 416, "9890": 521, "989191": 471, "989779066475214e": 416, "98e": 492, "99": [354, 467, 468, 470, 482, 494, 519, 521], "991": 492, "9910796e": 497, "9912648e": 497, "9912712e": 497, "992905": 559, "993": [457, 459, 460, 463], "9931": 521, "994": 446, "994e": 492, "995": 501, "9952623149688797": 518, "995263": 581, "9969731e": 497, "997": 446, "9977859e": 497, "9978": 521, "998": 476, "99848e": 508, "99878762e": 494, "999": [50, 166, 169, 492], "99919925926": 242, "99993896484375": 464, "9999912037958": 475, "999999": 492, "99999994": 86, "9999999995": 492, "9999999997835": 460, "99999999999545": 489, "999999999997": 477, "9999999999977": 492, "9999999999978": 485, "9999999999998": 492, "99999999999994": 492, "99999999999999": [467, 492], "99e": 492, "9d": 479, "9e": [459, 462, 492, 582], "A": [16, 19, 20, 25, 26, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 82, 83, 84, 87, 88, 89, 90, 91, 92, 99, 100, 102, 103, 105, 106, 109, 110, 111, 125, 126, 127, 136, 139, 144, 145, 194, 195, 196, 197, 199, 201, 202, 203, 204, 205, 206, 207, 208, 209, 217, 218, 220, 221, 224, 225, 227, 228, 229, 231, 232, 233, 234, 237, 238, 239, 240, 241, 242, 243, 244, 245, 248, 251, 252, 255, 256, 257, 258, 259, 263, 264, 265, 266, 268, 271, 272, 273, 275, 276, 277, 278, 279, 280, 292, 294, 302, 303, 314, 323, 376, 377, 378, 380, 381, 388, 390, 392, 393, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 408, 410, 411, 412, 413, 414, 415, 416, 417, 426, 428, 432, 433, 434, 435, 436, 439, 441, 442, 445, 446, 447, 448, 450, 452, 453, 454, 455, 458, 460, 466, 468, 473, 475, 476, 479, 484, 485, 486, 487, 490, 491, 492, 493, 495, 498, 499, 500, 501, 502, 503, 504, 507, 508, 509, 510, 511, 513, 517, 519, 521, 523, 531, 532, 533, 535, 536, 544, 545, 547, 548, 550, 553, 592, 593, 596, 597, 600], "AND": [500, 501], "AS": 417, "And": [284, 387, 390, 405, 407, 413, 419, 460, 462, 464, 465, 473, 477, 479, 486, 493, 495, 499, 500, 502, 507, 518, 519, 521], "As": [83, 314, 344, 387, 388, 390, 395, 399, 400, 401, 403, 405, 413, 414, 417, 424, 429, 448, 458, 459, 460, 464, 465, 466, 468, 470, 471, 475, 477, 478, 484, 485, 486, 489, 490, 491, 492, 493, 495, 498, 499, 502, 504, 508, 518, 521, 535, 544, 600], "At": [267, 401, 404, 413, 414, 416, 418, 432, 477, 499, 507, 540, 596], "But": [387, 392, 395, 401, 406, 414, 418, 424, 448, 464, 465, 495, 504, 507, 518, 598], "By": [19, 20, 26, 50, 65, 87, 91, 102, 103, 106, 110, 111, 124, 128, 132, 150, 151, 152, 153, 154, 155, 156, 157, 158, 160, 163, 165, 166, 167, 168, 169, 176, 183, 193, 195, 196, 197, 199, 205, 208, 209, 221, 222, 224, 225, 228, 229, 231, 232, 233, 237, 238, 240, 242, 244, 245, 248, 252, 253, 254, 256, 257, 258, 263, 264, 265, 268, 269, 270, 271, 272, 273, 275, 276, 279, 280, 384, 387, 413, 414, 415, 433, 434, 436, 477, 478, 485, 490, 495, 499, 504, 519, 542, 546, 553, 554, 555, 601], "FOR": [139, 302], "For": [11, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 42, 77, 82, 87, 88, 91, 95, 99, 100, 101, 102, 103, 106, 110, 111, 120, 122, 124, 125, 127, 128, 129, 132, 133, 135, 136, 153, 154, 155, 161, 166, 169, 176, 181, 182, 183, 186, 187, 189, 190, 193, 194, 195, 196, 197, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 214, 221, 222, 223, 224, 225, 226, 227, 228, 229, 231, 233, 234, 237, 238, 239, 240, 241, 242, 243, 245, 251, 252, 253, 254, 255, 256, 258, 259, 264, 265, 266, 268, 269, 271, 272, 273, 275, 279, 280, 293, 295, 299, 301, 311, 317, 332, 386, 387, 388, 390, 392, 393, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 406, 407, 408, 410, 412, 413, 414, 415, 418, 419, 423, 424, 426, 429, 430, 431, 433, 434, 435, 436, 439, 446, 450, 453, 458, 459, 460, 462, 464, 465, 466, 467, 468, 470, 471, 473, 474, 475, 477, 479, 482, 484, 485, 486, 489, 490, 491, 492, 493, 494, 495, 497, 498, 499, 500, 501, 502, 503, 504, 507, 508, 509, 513, 514, 518, 519, 521, 523, 530, 531, 533, 535, 545, 547, 548, 554, 559, 593, 597, 598, 600, 601, 602], "IN": [92, 100, 251], "If": [16, 19, 20, 26, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 45, 80, 82, 83, 84, 85, 86, 87, 88, 90, 91, 93, 94, 96, 100, 103, 104, 105, 106, 107, 108, 109, 110, 111, 113, 114, 115, 122, 124, 125, 126, 127, 128, 129, 130, 132, 136, 139, 143, 144, 146, 148, 153, 154, 155, 161, 164, 166, 169, 170, 172, 173, 176, 178, 179, 182, 183, 186, 187, 189, 190, 191, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 207, 208, 209, 214, 217, 219, 221, 222, 223, 224, 225, 226, 227, 228, 229, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 248, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 275, 276, 277, 278, 279, 280, 281, 282, 290, 291, 311, 314, 326, 327, 332, 373, 376, 380, 381, 382, 383, 387, 388, 389, 390, 392, 394, 395, 400, 401, 403, 404, 405, 408, 409, 410, 412, 413, 417, 418, 419, 420, 421, 422, 423, 424, 428, 429, 430, 447, 448, 449, 458, 460, 462, 464, 466, 467, 470, 473, 475, 478, 482, 484, 485, 486, 487, 489, 492, 493, 495, 498, 499, 500, 501, 502, 504, 507, 508, 509, 521, 533, 535, 546, 548, 555, 557, 571, 598, 599, 600, 601], "In": [15, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 67, 77, 83, 87, 88, 91, 94, 102, 104, 109, 124, 127, 136, 153, 172, 195, 197, 200, 203, 209, 217, 219, 279, 291, 307, 309, 327, 387, 390, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 420, 421, 424, 429, 430, 431, 432, 433, 434, 435, 436, 439, 450, 453, 458, 459, 460, 462, 464, 465, 466, 467, 468, 471, 473, 474, 476, 477, 478, 479, 482, 484, 485, 486, 487, 489, 490, 491, 492, 493, 494, 495, 498, 499, 500, 501, 502, 503, 504, 508, 509, 513, 518, 519, 521, 531, 533, 535, 540, 543, 544, 545, 547, 548, 549, 553, 554, 559, 573, 593, 596, 597, 598, 599, 600, 601, 602], "It": [15, 19, 20, 26, 27, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 91, 103, 106, 110, 111, 112, 115, 117, 125, 144, 153, 154, 155, 157, 161, 164, 165, 166, 167, 169, 179, 182, 186, 187, 192, 196, 197, 199, 201, 204, 205, 208, 209, 211, 221, 222, 225, 228, 229, 231, 232, 233, 238, 242, 244, 245, 248, 252, 254, 256, 263, 267, 268, 270, 271, 272, 273, 276, 280, 293, 297, 299, 300, 322, 336, 341, 387, 388, 390, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 411, 412, 413, 414, 415, 418, 419, 423, 425, 429, 430, 431, 432, 436, 439, 441, 442, 443, 448, 450, 452, 453, 454, 455, 458, 465, 471, 474, 476, 478, 482, 487, 490, 492, 493, 494, 495, 498, 499, 500, 502, 504, 507, 508, 509, 510, 513, 518, 519, 521, 523, 524, 531, 532, 534, 535, 539, 540, 542, 544, 548, 564, 567, 568, 570, 571, 575, 576, 578, 579, 580, 581, 595, 596, 597, 598, 599, 600, 602], "Its": [28, 399, 413, 414, 439, 441, 479, 485, 504, 519, 537, 538, 539, 541], "NOT": 500, "No": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 86, 398, 408, 411, 412, 447, 449, 456, 479, 489, 492, 495, 498, 499, 521], "Not": [106, 110, 111, 198, 204, 206, 395, 582], "ON": [103, 106, 135, 183, 184, 185, 193, 385, 393, 441, 455, 458, 459, 464, 467, 471, 475, 484, 485, 487, 495, 498, 504, 506, 535, 544, 597, 599, 601], "OR": [103, 110, 493, 500, 501], "Of": [387, 390, 424, 473, 493, 499, 508, 598, 601], "On": [21, 147, 171, 177, 178, 181, 293, 300, 308, 387, 388, 393, 395, 402, 403, 417, 419, 420, 421, 422, 443, 473, 474, 495, 513, 600], "One": [31, 32, 37, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 102, 103, 106, 110, 111, 227, 236, 251, 340, 387, 388, 393, 395, 396, 397, 398, 401, 403, 404, 405, 413, 416, 453, 460, 465, 471, 484, 498, 499, 500, 518, 521, 544, 548, 573, 598, 600], "Ones": 314, "Or": [19, 20, 26, 221, 222, 225, 229, 231, 232, 233, 238, 244, 245, 248, 252, 254, 256, 257, 258, 263, 268, 270, 271, 272, 273, 276, 280, 388, 406, 407, 465, 473, 489, 493, 494, 499, 507, 508, 533], "Such": [399, 497, 539], "THE": [139, 302], "That": [16, 19, 20, 84, 90, 105, 126, 214, 217, 221, 224, 225, 228, 229, 231, 232, 233, 234, 237, 238, 239, 240, 241, 242, 243, 244, 245, 248, 255, 256, 257, 258, 259, 263, 264, 265, 266, 268, 271, 272, 273, 278, 279, 387, 388, 392, 401, 404, 407, 495, 521, 598], "The": [11, 15, 16, 17, 19, 20, 23, 26, 27, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 42, 52, 53, 57, 59, 63, 69, 77, 80, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 94, 95, 99, 100, 101, 102, 103, 105, 106, 107, 108, 109, 110, 111, 112, 116, 117, 118, 119, 120, 124, 125, 126, 127, 128, 129, 130, 132, 133, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 160, 161, 163, 164, 165, 166, 167, 168, 169, 173, 177, 178, 182, 183, 186, 187, 188, 191, 192, 193, 194, 195, 196, 197, 198, 199, 201, 203, 204, 205, 206, 207, 208, 209, 213, 214, 215, 218, 220, 221, 222, 223, 224, 225, 228, 229, 231, 232, 233, 234, 235, 237, 238, 239, 240, 241, 242, 243, 244, 245, 248, 252, 253, 254, 255, 256, 257, 258, 259, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 275, 276, 278, 279, 280, 283, 284, 290, 292, 293, 294, 295, 297, 298, 299, 300, 301, 302, 308, 314, 326, 332, 334, 335, 338, 354, 370, 371, 373, 375, 376, 377, 378, 380, 381, 382, 383, 384, 386, 387, 388, 389, 390, 391, 392, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 420, 421, 422, 425, 428, 429, 431, 432, 433, 434, 435, 436, 439, 441, 442, 443, 447, 448, 449, 450, 451, 452, 453, 454, 455, 458, 459, 460, 461, 462, 464, 465, 466, 467, 468, 470, 471, 473, 475, 477, 478, 479, 482, 484, 485, 486, 487, 489, 490, 491, 492, 493, 496, 497, 498, 499, 500, 501, 502, 503, 506, 507, 508, 509, 510, 513, 514, 518, 519, 520, 521, 523, 524, 525, 526, 530, 531, 533, 534, 535, 537, 538, 539, 540, 541, 542, 543, 545, 546, 547, 548, 549, 553, 555, 557, 558, 559, 563, 569, 571, 573, 582, 593, 595, 596, 597, 598, 599, 600, 601, 602, 603], "Their": 500, "Then": [67, 103, 108, 110, 390, 392, 397, 400, 402, 403, 404, 405, 411, 421, 460, 464, 473, 474, 477, 482, 484, 495, 500, 502, 504, 519], "There": [87, 91, 144, 387, 388, 392, 393, 394, 396, 401, 402, 403, 404, 405, 406, 407, 408, 411, 414, 416, 418, 420, 421, 447, 455, 475, 479, 490, 491, 492, 493, 495, 497, 498, 500, 501, 509, 523, 531, 532, 535, 548], "These": [77, 95, 201, 283, 387, 388, 392, 393, 398, 400, 401, 402, 403, 407, 408, 413, 416, 431, 433, 434, 435, 439, 447, 453, 458, 474, 476, 477, 486, 490, 491, 493, 497, 499, 502, 503, 509, 511, 513, 523, 540, 545, 547, 548, 599, 600, 601], "To": [16, 19, 20, 26, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 84, 87, 90, 91, 100, 105, 109, 124, 126, 128, 132, 195, 207, 221, 222, 225, 229, 231, 232, 233, 238, 244, 245, 248, 252, 254, 256, 257, 258, 263, 268, 270, 271, 272, 273, 276, 278, 280, 283, 293, 377, 378, 389, 390, 394, 395, 398, 399, 400, 402, 403, 408, 409, 410, 411, 412, 413, 416, 418, 419, 420, 421, 422, 423, 424, 425, 429, 430, 431, 434, 435, 439, 441, 447, 448, 450, 453, 458, 459, 460, 462, 464, 465, 466, 467, 470, 471, 473, 475, 476, 477, 478, 479, 482, 484, 485, 486, 489, 490, 492, 493, 494, 495, 497, 498, 499, 500, 501, 502, 503, 504, 506, 507, 508, 513, 518, 521, 531, 532, 533, 536, 540, 542, 544, 545, 553, 596, 598, 599, 600, 603], "With": [83, 101, 246, 387, 396, 397, 413, 435, 448, 504, 531, 600], "_": [103, 110, 130, 238, 258, 387, 388, 401, 411, 413, 464, 467, 471, 491, 492, 495, 501, 504, 531, 544], "_0": [50, 51], "_1": [106, 111, 532], "_2": [106, 111], "__all__": 387, "__array__": 314, "__array_ufunc__": [466, 477, 510, 586], "__attributes__": [87, 91], "__call__": [17, 18, 19, 20, 21, 22, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 35, 36, 37, 39, 40, 221, 222, 223, 224, 225, 226, 228, 229, 231, 232, 233, 234, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 248, 252, 253, 254, 255, 256, 257, 258, 259, 260, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 275, 276, 278, 279, 280, 281, 282, 326, 393, 398, 415, 435], "__class__": [387, 411, 491, 529], "__dict__": [16, 84, 90, 105, 126, 387], "__enter__": 365, "__eq__": 441, "__exit__": 365, "__fields__": 414, "__getitem__": [397, 398, 399, 455], "__init__": [16, 84, 90, 105, 126, 204, 279, 387, 393, 399, 411, 416, 450], "__int__": 332, "__len__": 397, "__main__": [262, 387, 504, 516, 598], "__name__": [387, 471, 484, 485, 486, 489, 491, 516, 529, 598], "__neq__": 441, "__pydantic_extra__": [16, 84, 90, 105, 126], "__pydantic_fields_set__": [16, 84, 90, 105, 126], "__repr__": [387, 434, 448], "__str__": [387, 399, 414, 431], "__subclasses__": 491, "__version__": 423, "_build": [388, 418], "_check_interv": 453, "_compute_flux_spati": 439, "_covari": [227, 251], "_data": 411, "_dataset": 388, "_dom_class": [473, 482, 499, 518, 519], "_energy_t": 411, "_err": 489, "_errn": [128, 129, 132, 133], "_errp": [128, 129, 132, 133], "_evaluate_timevar_sourc": 453, "_f_cash_root_cython": 306, "_factr": 495, "_fields_set": [16, 84, 90, 105, 126], "_i": 130, "_k": [103, 110, 531], "_l": 531, "_lat": 387, "_lon": 387, "_map": 380, "_model": 125, "_new_attribut": 387, "_old_attribut": 387, "_parameter_units_for_data_unit": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40], "_parent_namespace_depth": [16, 84, 90, 105, 126], "_parse_dataset": 416, "_phi": 387, "_prior": 415, "_propagate_error": 438, "_reco": 387, "_repr_html_": 387, "_row_index": 69, "_sampl": 416, "_sample_coord_time_energi": 453, "_sampler": 416, "_scan": 495, "_time_group": 411, "_time_t": 411, "_true": 387, "_type": [415, 504], "_types_namespac": [16, 84, 90, 105, 126], "_update_model": 416, "_was_": [16, 84, 90, 105, 126], "_wc": 560, "_weight": 415, "a_": [106, 111, 156, 537, 540, 600], "a_off": 600, "a_on": 600, "a_scan": 504, "aa": [87, 91, 314, 413], "aaguasca": 450, "ab": [33, 38, 50, 52, 53, 58, 60, 61, 62, 64, 65, 83, 88, 138, 156, 209, 217, 219, 248, 283, 284, 491, 492], "abc": [18, 56, 99, 123, 175, 194, 199, 498], "abcmeta": 498, "abdalla2018": [544, 545, 597], "abeysekara": 59, "abil": [411, 416, 504], "abl": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 397, 402, 405, 416, 460, 482, 484, 485, 504, 511, 513, 598], "about": [11, 13, 84, 90, 105, 126, 151, 156, 237, 242, 344, 387, 390, 392, 396, 403, 404, 406, 407, 408, 412, 413, 415, 417, 418, 423, 424, 443, 444, 448, 449, 450, 459, 462, 468, 470, 471, 473, 474, 475, 477, 492, 497, 499, 502, 508, 519, 521, 531, 532, 598, 601], "abov": [29, 44, 52, 53, 83, 124, 126, 127, 130, 134, 135, 136, 144, 145, 171, 206, 376, 378, 387, 388, 390, 393, 396, 397, 399, 401, 403, 404, 405, 406, 407, 411, 416, 420, 421, 424, 458, 468, 475, 477, 478, 479, 484, 487, 489, 494, 495, 498, 499, 500, 502, 503, 504, 507, 508, 509, 518, 529, 531, 532, 539, 542, 548, 597, 598, 599, 600, 601], "abramowski": 156, "abruptli": [387, 412], "abs_path": 322, "absenc": [402, 471, 498, 500, 544, 599], "absolut": [82, 91, 107, 150, 151, 152, 153, 156, 158, 160, 163, 168, 196, 197, 199, 201, 205, 208, 209, 318, 344, 364, 368, 533], "absolute_tim": 602, "absopt": 405, "absorb": [280, 397, 410, 446, 563], "absorbedspectralmodel": [433, 446], "absorbt": 410, "absorpt": [229, 405, 436, 446, 455, 457, 461, 463, 513, 549, 562, 583], "abstract": [16, 56, 59, 84, 90, 99, 105, 123, 126, 167, 175, 180, 194, 196, 199, 208, 398, 435, 547], "abstractsetintstr": [16, 84, 90, 105, 126], "ac": [307, 309], "acada": 413, "accept": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 83, 87, 91, 106, 107, 111, 124, 125, 127, 129, 171, 188, 193, 195, 196, 197, 199, 207, 208, 209, 227, 251, 294, 385, 391, 392, 393, 394, 395, 396, 399, 400, 401, 403, 404, 405, 406, 407, 408, 410, 412, 413, 414, 415, 416, 440, 444, 453, 455, 458, 459, 465, 466, 467, 471, 475, 478, 493, 498, 499, 508, 531, 547, 554, 573, 599, 600], "acceptance_off": [106, 107, 111, 124, 125, 127, 171, 181, 399, 458, 460, 464, 467, 471, 531, 600], "acceptance_on": [124, 125, 127], "acceptang": 124, "access": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 56, 58, 60, 61, 62, 64, 65, 66, 67, 77, 82, 83, 87, 91, 103, 124, 136, 164, 194, 195, 204, 207, 300, 322, 387, 395, 396, 397, 398, 400, 403, 411, 418, 420, 423, 428, 429, 436, 443, 444, 446, 447, 453, 454, 462, 464, 465, 466, 473, 489, 492, 495, 497, 501, 502, 507, 510, 518, 519, 521, 530, 535, 546, 547, 548, 596], "accessor": [499, 596], "accident": [508, 598], "accomplish": 494, "accord": [15, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 53, 72, 83, 87, 91, 103, 106, 110, 111, 120, 125, 148, 154, 164, 171, 195, 201, 217, 219, 307, 309, 311, 376, 397, 398, 401, 402, 405, 411, 413, 433, 442, 454, 461, 471, 484, 493, 498, 502, 503, 511, 513, 531, 532, 535], "accordingli": [399, 413, 430, 436, 500], "account": [103, 106, 110, 111, 124, 125, 139, 173, 189, 227, 251, 267, 292, 294, 300, 362, 395, 400, 403, 411, 413, 435, 452, 454, 457, 458, 460, 461, 463, 464, 466, 471, 473, 479, 486, 487, 494, 495, 498, 500, 513, 519, 531, 533, 599, 600], "accur": [137, 146, 405, 416, 449, 473, 495, 542], "accuraci": [401, 495, 535], "acee67": 272, "aceptance_off": 399, "acero": [405, 416, 429, 431, 433, 436, 439, 441, 446, 448, 454, 455], "achiev": [16, 84, 90, 105, 120, 126, 171, 377, 378, 387, 396, 397, 398, 399, 400, 401, 403, 410, 413, 436, 499, 502, 503, 545, 603], "acknowledg": [390, 413, 425], "acquir": 424, "acquisit": 597, "across": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 100, 120, 387, 396, 399, 418, 476, 486, 501, 508, 531, 547, 557, 597], "act": [91, 403, 501, 559], "action": [171, 392, 397, 403, 413, 417, 418, 439, 486], "activ": [91, 300, 390, 404, 419, 420, 422, 423, 424, 433, 450, 490, 535], "actual": [184, 362, 363, 364, 386, 387, 388, 392, 396, 398, 400, 402, 403, 411, 412, 414, 417, 467, 478, 482, 485, 493, 494, 495, 498, 499, 500, 504, 508, 509, 519, 521, 542, 544, 597, 598, 600], "ad": [16, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 41, 82, 83, 84, 87, 90, 91, 103, 105, 106, 110, 111, 115, 116, 119, 126, 127, 196, 197, 199, 204, 205, 208, 209, 387, 388, 390, 392, 393, 395, 396, 397, 399, 400, 401, 402, 403, 404, 406, 407, 411, 413, 428, 429, 430, 432, 433, 434, 436, 439, 441, 443, 444, 445, 446, 447, 448, 449, 450, 452, 453, 454, 455, 466, 471, 473, 474, 497, 498, 501, 502, 503, 504, 509, 531, 548, 601], "adapt": [120, 171, 214, 396, 397, 400, 401, 406, 407, 409, 410, 413, 417, 424, 429, 430, 432, 433, 434, 436, 437, 439, 442, 445, 446, 448, 450, 452, 453, 454, 455, 493, 497, 499, 500, 542, 545], "adaptiveringbackgroundestim": [181, 393], "adaptiveringbackgroundmak": [174, 433, 545], "adass": 407, "add": [13, 15, 16, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 41, 42, 43, 44, 79, 84, 87, 88, 90, 91, 99, 100, 102, 103, 104, 105, 106, 108, 109, 110, 111, 125, 126, 127, 150, 151, 153, 154, 155, 156, 157, 158, 161, 163, 164, 165, 166, 167, 169, 173, 196, 197, 199, 203, 205, 208, 209, 215, 227, 251, 267, 311, 356, 375, 384, 386, 387, 388, 390, 392, 395, 396, 397, 399, 400, 401, 402, 403, 404, 405, 406, 407, 410, 411, 413, 415, 416, 417, 420, 422, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 439, 440, 441, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 458, 459, 460, 467, 473, 474, 477, 482, 484, 487, 493, 497, 498, 499, 500, 502, 504, 507, 521, 525, 526, 535, 548, 565, 598, 601], "add_artist": [502, 553, 554], "add_cbar": [103, 106, 110, 111, 127, 150, 151, 153, 156, 157, 158, 163, 164, 165, 167, 196, 197, 199, 205, 208, 209, 227, 251, 375, 468, 470, 471, 473, 475, 482, 487, 491, 493, 497, 498, 499, 501, 502, 508, 509, 518, 519, 548, 552, 553, 554, 557, 558, 560, 603], "add_column": [87, 91], "add_enabled_unit": [458, 467, 470, 473, 475, 482, 486, 507], "add_index": [87, 91], "add_loc": 387, "add_row": [87, 91], "add_subplot": [375, 603], "addit": [16, 19, 20, 26, 43, 84, 87, 90, 91, 103, 105, 106, 110, 111, 115, 124, 126, 128, 133, 168, 196, 197, 199, 202, 205, 208, 209, 221, 222, 225, 229, 231, 232, 233, 238, 244, 245, 248, 252, 254, 256, 257, 258, 263, 268, 270, 271, 272, 273, 276, 280, 387, 390, 391, 392, 396, 397, 398, 399, 401, 402, 403, 404, 406, 407, 408, 411, 412, 413, 414, 416, 418, 419, 420, 421, 430, 431, 433, 435, 436, 439, 440, 447, 448, 450, 453, 454, 455, 462, 466, 479, 487, 492, 493, 494, 495, 499, 501, 502, 504, 507, 508, 519, 521, 531, 533, 535, 542, 547, 548, 595, 601], "addition": [133, 399, 493, 495, 499, 501, 502], "address": [396, 399, 400, 401, 403, 413, 504, 534], "adequ": 204, "adher": 390, "adjac": [148, 201, 439, 485, 499, 544], "adjust": [16, 67, 196, 197, 199, 205, 208, 209, 396, 398, 410, 455, 465, 490, 493, 494, 502, 503, 518, 535, 542, 597], "admit": 407, "adonath": 393, "adopt": [37, 400, 403, 408, 466, 477, 478, 491], "adress": 416, "adsab": [33, 38, 50, 52, 53, 58, 60, 61, 62, 83, 88, 156, 248, 283, 284], "adult": 387, "advanc": [399, 403, 404, 407, 415, 420, 497, 499, 535, 597, 598], "advantag": [395, 401, 404, 411, 416, 439, 499, 504, 573, 598], "advanteg": 399, "advertis": 417, "advic": [387, 413], "advis": [388, 413, 495, 504, 513], "advoc": 387, "aeff": [16, 82, 87, 88, 106, 111, 156, 182, 190, 397, 399, 400, 435, 436, 460, 464, 465, 466, 470, 471, 473, 475, 485, 489, 497, 498, 507, 509, 510, 518, 519, 537, 542, 544, 545, 597], "aeff2d": 155, "aeff_2d": [82, 87, 156, 507, 510], "aeff_3d": 497, "aeff_ev": 497, "aeff_new": 497, "aeff_perc": [182, 460, 464, 465, 475, 485, 489, 498, 509, 544], "aegi": 229, "af": 383, "affect": [139, 387, 395, 399, 401, 412, 430, 431, 442, 451, 459, 504], "affili": [401, 413, 450], "afmhot": [501, 521], "aforement": 413, "after": [16, 45, 50, 51, 52, 53, 84, 90, 91, 100, 103, 105, 106, 110, 126, 166, 169, 300, 326, 344, 368, 371, 387, 390, 392, 395, 396, 398, 400, 401, 402, 403, 405, 406, 407, 409, 410, 411, 412, 413, 414, 416, 417, 418, 419, 424, 428, 435, 437, 438, 439, 441, 447, 449, 450, 451, 462, 471, 473, 485, 489, 490, 495, 499, 501, 507, 509, 510, 535, 598, 602], "aftervalid": 90, "ag": [20, 43, 44, 45, 50, 51, 52, 53, 54, 318, 387, 525], "again": [166, 390, 397, 399, 401, 403, 408, 414, 419, 434, 435, 438, 445, 450, 462, 464, 465, 473, 478, 479, 499, 502, 504, 508, 518, 521, 548, 598], "against": [16, 84, 90, 105, 126, 150, 151, 152, 153, 156, 157, 158, 160, 163, 165, 167, 168, 195, 196, 197, 199, 204, 205, 207, 208, 209, 388, 390, 404, 410, 418, 492, 494, 508, 518, 530, 533], "agent": 403, "agglom": 13, "aggreg": 414, "agil": 400, "agn": [140, 298, 401, 464, 484, 486, 490, 507], "agnost": 495, "ago": 394, "agre": [198, 201, 390, 392, 401, 413], "agreement": [387, 390, 408, 487], "aguasca": [441, 450, 451, 452, 453, 455], "aharonian": 476, "ahead": [401, 428], "ahelp": 214, "aic": 416, "aim": [387, 396, 397, 413, 416, 473, 477, 491, 503, 523, 597], "air": 507, "ait": [195, 196, 197, 516], "aitoff": 401, "aka": 521, "akmwgtxu": 489, "al": [17, 19, 20, 21, 22, 24, 25, 26, 27, 28, 33, 35, 39, 40, 57, 59, 63, 102, 120, 134, 139, 140, 156, 229, 299, 300, 302, 307, 308, 309, 388, 397, 416, 455, 468, 476, 490, 523, 597], "alamo": 416, "albert": [63, 597], "albert2007": 597, "alexi": [436, 439], "algorithm": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 59, 87, 91, 120, 134, 136, 171, 214, 293, 387, 393, 399, 400, 401, 406, 414, 416, 431, 436, 444, 445, 446, 455, 468, 490, 494, 495, 509, 533, 547, 596, 600], "alia": [16, 56, 84, 90, 105, 126, 390, 521], "alias": [16, 56, 84, 90, 105, 126], "align": [87, 91, 100, 150, 151, 152, 153, 156, 157, 158, 159, 160, 163, 165, 167, 168, 195, 196, 197, 199, 201, 205, 207, 208, 209, 387, 455, 497, 500, 502], "alisha": 441, "all": [6, 16, 19, 20, 26, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 82, 83, 84, 87, 88, 89, 90, 91, 92, 95, 96, 100, 103, 104, 105, 106, 108, 109, 110, 111, 124, 125, 126, 127, 128, 132, 133, 136, 150, 151, 152, 153, 154, 155, 156, 157, 158, 160, 163, 165, 166, 167, 168, 169, 170, 176, 183, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 214, 217, 218, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 248, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 275, 276, 277, 278, 279, 280, 281, 282, 283, 290, 359, 360, 361, 362, 363, 364, 374, 383, 386, 387, 388, 390, 392, 393, 394, 395, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 423, 428, 429, 430, 431, 432, 433, 434, 435, 436, 439, 441, 442, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 457, 459, 460, 464, 465, 466, 470, 471, 473, 475, 476, 477, 482, 484, 486, 487, 489, 492, 493, 494, 495, 497, 499, 500, 501, 502, 504, 507, 508, 509, 510, 511, 513, 516, 518, 519, 521, 525, 531, 533, 535, 544, 546, 547, 548, 549, 573, 595, 598, 599, 600], "all_quant": [125, 127], "allclos": [150, 151, 152, 153, 156, 157, 158, 160, 163, 165, 167, 168, 196, 197, 198, 199, 201, 205, 206, 208, 209, 362], "alloc": [197, 205, 209], "allow": [16, 26, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 56, 84, 87, 90, 91, 105, 120, 125, 126, 127, 135, 136, 166, 169, 195, 200, 202, 337, 387, 388, 390, 392, 393, 394, 397, 398, 399, 400, 401, 403, 404, 405, 406, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 420, 422, 430, 432, 433, 434, 435, 436, 439, 441, 448, 449, 450, 453, 455, 458, 464, 476, 486, 493, 494, 495, 497, 498, 499, 500, 519, 531, 533, 535, 542, 547, 548, 595, 596, 598, 603], "allow_extra": 200, "allow_pickl": [16, 84, 90, 105, 126], "allowed_channel": [26, 491], "allski": [83, 499], "alma": 406, "almeida": 436, "almost": [386, 388, 390, 401, 508, 521], "alogrithm": 416, "alon": 392, "along": [68, 102, 125, 127, 131, 148, 150, 151, 152, 153, 156, 157, 158, 160, 163, 164, 165, 167, 168, 196, 197, 199, 205, 207, 208, 209, 298, 299, 300, 302, 325, 326, 336, 346, 347, 396, 397, 411, 416, 450, 453, 455, 470, 479, 492, 493, 497, 498, 501, 502, 532, 547, 548, 566, 597], "alpha": [21, 27, 28, 48, 103, 106, 110, 111, 124, 125, 127, 171, 193, 214, 232, 233, 243, 244, 245, 259, 294, 305, 311, 384, 385, 399, 410, 412, 439, 446, 455, 458, 459, 460, 462, 464, 466, 467, 471, 473, 474, 478, 487, 492, 495, 504, 507, 553, 563, 565, 567, 569, 571, 572, 573, 582, 589, 590, 599, 600, 601], "alpha_": [106, 111], "alpha_1": [106, 111], "alpha_2": [106, 111], "alpha_norm": [229, 410, 459, 563], "alphabet": [404, 413, 429, 430, 431, 432, 433, 434, 435, 436, 439], "alreadi": [15, 16, 26, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 84, 87, 90, 91, 105, 126, 214, 275, 276, 277, 279, 387, 390, 393, 394, 395, 398, 399, 400, 401, 402, 404, 407, 408, 409, 411, 414, 416, 417, 418, 448, 459, 462, 466, 468, 471, 478, 487, 491, 492, 493, 499, 500, 501, 502, 507, 508, 509, 521, 523, 548, 560], "also": [15, 19, 20, 26, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 87, 91, 95, 120, 124, 125, 127, 128, 137, 138, 144, 146, 147, 168, 173, 179, 194, 201, 203, 204, 214, 221, 222, 225, 229, 231, 232, 233, 238, 244, 245, 248, 252, 254, 256, 257, 258, 263, 268, 270, 271, 272, 273, 276, 278, 280, 291, 314, 322, 327, 387, 388, 390, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 407, 408, 409, 410, 411, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 429, 430, 431, 432, 433, 434, 435, 436, 439, 447, 448, 449, 453, 458, 459, 460, 464, 465, 466, 467, 468, 471, 473, 475, 476, 477, 478, 479, 487, 490, 491, 492, 493, 494, 495, 497, 498, 499, 500, 501, 502, 504, 506, 507, 508, 518, 519, 523, 531, 532, 533, 534, 535, 542, 544, 547, 548, 573, 576, 595, 597, 598, 599, 600, 602], "alt": [83, 85, 88, 94, 95, 387, 602], "alt_pnt": 91, "altaz": [83, 85, 94, 159, 387, 497, 602], "altaz_fram": [83, 94], "altaz_from_t": [83, 94], "altaz_interpol": 94, "altern": [82, 87, 91, 290, 386, 387, 390, 392, 396, 421, 439, 459, 464, 466, 468, 476, 492, 495, 497, 499, 501, 507, 531, 532, 598], "although": [387, 400, 401, 402, 404, 407, 411, 495, 507, 558, 559, 595, 602], "altitud": 460, "alwai": [77, 83, 87, 91, 153, 201, 204, 211, 217, 219, 235, 387, 388, 390, 393, 394, 395, 397, 398, 399, 401, 404, 412, 413, 416, 421, 428, 435, 450, 451, 453, 467, 468, 473, 482, 491, 495, 498, 499, 501, 503, 504, 513, 533, 547, 548], "am": 396, "ambigu": [401, 447], "amend": 390, "among": [82, 87, 91, 103, 106, 110, 111, 137, 146, 403, 407, 408, 410, 415, 436, 495, 597], "amount": [394, 401, 415, 535], "amp": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 266, 591], "ampl_2": [157, 497], "ampl_3": [157, 497], "amplitud": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 48, 49, 68, 102, 128, 133, 136, 196, 197, 199, 208, 209, 214, 221, 228, 231, 233, 238, 245, 249, 256, 257, 258, 266, 268, 271, 272, 273, 284, 290, 303, 398, 399, 402, 410, 416, 459, 460, 462, 464, 465, 466, 467, 468, 470, 473, 474, 475, 476, 477, 478, 482, 484, 485, 486, 487, 489, 490, 492, 493, 494, 495, 501, 502, 507, 508, 518, 519, 521, 533, 552, 553, 554, 555, 557, 558, 559, 560, 563, 564, 565, 567, 568, 570, 571, 573, 574, 575, 576, 578, 579, 580, 581, 585, 586, 587, 588, 589, 590, 591, 592, 593, 600], "amplitude_err": 489, "amplitude_maximum_signific": 490, "amplitude_maximum_vari": 490, "amplitude_ref": 487, "an": [6, 15, 16, 19, 20, 26, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 47, 50, 66, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 86, 87, 88, 89, 90, 91, 92, 93, 94, 102, 103, 104, 105, 106, 109, 110, 111, 112, 115, 117, 118, 125, 126, 127, 128, 129, 130, 132, 133, 136, 143, 144, 145, 147, 151, 153, 154, 155, 156, 158, 161, 164, 166, 168, 169, 172, 176, 179, 181, 184, 186, 187, 190, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 214, 217, 221, 222, 224, 225, 227, 228, 229, 231, 232, 233, 234, 237, 238, 239, 240, 241, 242, 243, 244, 245, 248, 251, 252, 253, 254, 255, 256, 257, 258, 259, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 275, 276, 278, 279, 280, 286, 293, 298, 300, 312, 314, 318, 332, 343, 347, 365, 371, 377, 378, 380, 383, 386, 388, 390, 392, 393, 394, 395, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 416, 417, 418, 419, 420, 421, 424, 425, 428, 429, 432, 433, 434, 435, 436, 439, 441, 442, 443, 446, 447, 448, 450, 451, 453, 454, 455, 459, 460, 462, 464, 465, 466, 467, 468, 470, 471, 473, 474, 475, 476, 479, 482, 484, 485, 486, 487, 489, 490, 492, 494, 495, 498, 499, 501, 502, 503, 504, 506, 507, 508, 509, 510, 511, 513, 516, 518, 519, 520, 521, 523, 525, 530, 531, 532, 533, 535, 536, 537, 538, 539, 540, 541, 542, 544, 546, 547, 548, 552, 553, 554, 555, 556, 557, 558, 559, 560, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 585, 586, 587, 588, 589, 590, 591, 592, 593, 595, 597, 598, 599, 600, 601], "anaconda": [404, 419, 420], "analog": [87, 91, 196, 197, 199, 205, 208, 209, 548], "analogi": 408, "analys": [82, 386, 387, 396, 397, 398, 399, 401, 405, 407, 409, 410, 415, 424, 425, 431, 432, 433, 435, 436, 446, 448, 451, 464, 465, 473, 485, 486, 491, 492, 500, 502, 507, 508, 509, 518, 519, 523, 531, 598], "analysi": [6, 16, 35, 57, 67, 70, 72, 74, 83, 101, 103, 105, 106, 110, 111, 116, 119, 154, 155, 161, 166, 169, 178, 182, 386, 387, 388, 391, 397, 398, 399, 400, 401, 402, 403, 405, 406, 407, 408, 409, 410, 414, 416, 418, 419, 420, 421, 422, 424, 425, 428, 429, 430, 432, 433, 434, 439, 441, 443, 444, 445, 446, 447, 448, 449, 450, 453, 454, 455, 457, 459, 462, 463, 468, 470, 471, 472, 476, 477, 479, 480, 481, 482, 483, 485, 486, 488, 489, 491, 492, 493, 495, 498, 499, 500, 501, 502, 503, 504, 506, 507, 508, 509, 510, 519, 520, 521, 523, 533, 535, 540, 542, 543, 544, 545, 548, 576, 595, 597, 598, 600], "analysis3d": 449, "analysis_1": [457, 518, 522], "analysis_1d": 484, "analysis_2": [388, 457, 519, 522], "analysis_3d": [448, 457, 473, 481, 484], "analysis_joint": 473, "analysis_mwl": [457, 474, 481], "analysis_stack": 473, "analysisconfig": [15, 388, 465, 470, 471, 473, 484, 518], "analyt": [19, 20, 26, 27, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 156, 157, 165, 167, 221, 222, 225, 229, 231, 232, 233, 238, 244, 245, 248, 252, 254, 256, 257, 258, 263, 268, 270, 271, 272, 273, 276, 280, 400, 405, 454, 455, 494, 497, 502, 533, 555, 601], "analyz": [139, 302, 397, 597], "andrea": 400, "andrew": 448, "angl": [16, 17, 18, 21, 22, 24, 25, 27, 33, 34, 38, 68, 83, 89, 91, 96, 103, 106, 116, 119, 120, 124, 131, 136, 150, 154, 155, 156, 157, 158, 161, 163, 164, 165, 166, 167, 169, 172, 179, 180, 182, 184, 194, 195, 197, 202, 204, 207, 209, 210, 224, 228, 237, 240, 253, 255, 264, 265, 267, 269, 275, 277, 279, 283, 342, 374, 387, 393, 401, 403, 410, 414, 427, 429, 430, 431, 448, 455, 458, 460, 464, 467, 474, 477, 478, 485, 489, 492, 499, 500, 502, 503, 507, 508, 535, 540, 544, 547, 548, 553, 554, 555, 558, 559, 597, 603], "angle_incr": 179, "angular": [23, 103, 106, 116, 119, 130, 154, 155, 161, 166, 169, 172, 197, 204, 207, 209, 228, 237, 240, 277, 318, 321, 387, 403, 452, 466, 478, 487, 506, 540, 541, 597], "angular_extens": 41, "angular_s": 548, "angular_separ": [410, 452, 454, 502], "ani": [16, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 82, 83, 84, 87, 90, 91, 105, 122, 126, 132, 155, 178, 196, 197, 199, 204, 205, 207, 208, 209, 314, 337, 372, 386, 387, 388, 390, 392, 393, 394, 395, 398, 399, 400, 401, 402, 403, 404, 405, 406, 408, 410, 413, 414, 416, 417, 420, 421, 422, 423, 424, 428, 429, 447, 448, 449, 454, 465, 475, 476, 479, 484, 485, 487, 489, 493, 498, 499, 501, 502, 504, 507, 508, 509, 510, 518, 519, 521, 523, 532, 533, 545, 547, 548, 565, 598, 602], "ann": [23, 447], "anna": 387, "annihil": [17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 450, 502, 523], "annoi": [387, 598], "annot": [16, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 84, 90, 105, 126, 376, 414, 553], "announc": [387, 392, 394, 401, 403, 406, 408, 410, 412, 413, 417, 418], "annuli": [479, 548], "annulu": [129, 346, 548], "anonym": 390, "anoth": [19, 20, 26, 83, 86, 87, 91, 103, 106, 110, 111, 154, 155, 156, 161, 166, 168, 169, 198, 201, 221, 222, 223, 224, 225, 226, 227, 228, 229, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 248, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 275, 276, 277, 278, 279, 280, 281, 282, 290, 387, 388, 401, 402, 403, 405, 407, 408, 411, 414, 416, 419, 420, 422, 424, 433, 448, 487, 493, 499, 500, 502, 548, 598], "another_posit": 544, "answer": [495, 535], "anti": [499, 500], "anticip": 396, "anymor": 450, "anyon": [392, 394, 507], "anyth": [16, 84, 90, 105, 126, 153, 403, 598], "anytim": [390, 430], "anywai": [390, 401], "anywher": [401, 404, 406, 531], "ap": [392, 404, 412], "apart": 402, "apertur": 597, "api": [235, 391, 393, 396, 397, 398, 399, 400, 401, 403, 406, 407, 408, 412, 413, 425, 426, 428, 429, 430, 431, 433, 434, 435, 436, 439, 443, 447, 448, 457, 460, 464, 465, 468, 475, 477, 485, 493, 499, 500, 501, 502, 505, 507, 508, 518, 520, 521, 522, 533, 534, 542, 595, 596, 597, 598], "apj": [295, 301], "aplpi": 448, "apologis": [428, 429, 448], "app": [87, 91, 418, 424, 447], "appar": 416, "appear": [87, 91, 387, 388, 395, 401, 414, 442, 453, 455, 492], "append": [87, 91, 92, 100, 149, 194, 195, 196, 197, 199, 204, 205, 207, 208, 209, 214, 251, 399, 400, 402, 434, 453, 460, 464, 466, 467, 473, 474, 475, 477, 485, 486, 487, 489, 493, 494, 495, 498, 501, 502, 503, 504, 544], "append_ax": [150, 151, 153, 156, 157, 158, 163, 165, 167, 209, 375], "appendix": [30, 136, 156, 248, 284, 303, 468], "appl": 424, "appli": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 83, 86, 87, 89, 91, 101, 102, 103, 104, 106, 110, 111, 112, 116, 117, 119, 120, 124, 127, 128, 132, 136, 153, 154, 155, 161, 166, 168, 169, 173, 179, 182, 183, 196, 197, 199, 200, 204, 205, 207, 208, 209, 217, 219, 227, 235, 251, 267, 280, 291, 292, 293, 294, 307, 309, 326, 327, 372, 376, 384, 387, 393, 394, 397, 398, 400, 402, 405, 411, 412, 413, 436, 441, 446, 447, 448, 449, 453, 455, 458, 464, 466, 477, 485, 486, 487, 489, 493, 494, 498, 499, 500, 501, 502, 504, 507, 510, 519, 521, 533, 535, 542, 582, 596, 599], "applic": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 68, 87, 91, 147, 387, 398, 413, 415, 435, 490, 495, 547, 597], "apply_async": [334, 335], "apply_edisp": 454, "apply_hysteresis_threshold": 500, "apply_irf": [267, 435], "apply_mask": 202, "apply_psf": [398, 432], "apply_standard_scal": 96, "apply_threshold_sensit": 124, "apply_union": 211, "approach": [87, 91, 136, 387, 393, 395, 399, 403, 408, 411, 412, 414, 453, 458, 464, 498, 513, 520, 597, 600], "appropri": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 83, 87, 91, 195, 196, 197, 199, 208, 209, 314, 322, 388, 466, 471, 473, 489, 499, 598], "approv": [393, 394, 395], "approx": [52, 53], "approxim": [102, 136, 137, 146, 182, 183, 195, 196, 197, 224, 228, 237, 240, 253, 264, 265, 269, 275, 279, 292, 294, 325, 398, 401, 416, 430, 455, 458, 464, 495, 507, 533, 544, 554, 555, 558, 559, 597], "appveyor": 444, "apr": [409, 425, 426], "april": [407, 414, 435], "apt": 421, "ar": [6, 11, 15, 16, 19, 20, 23, 26, 27, 28, 29, 30, 31, 32, 33, 35, 36, 37, 39, 40, 46, 57, 67, 70, 74, 77, 79, 80, 82, 83, 84, 85, 86, 87, 88, 90, 91, 96, 100, 101, 102, 103, 105, 106, 109, 110, 111, 113, 114, 116, 119, 120, 122, 124, 125, 126, 127, 128, 129, 130, 132, 133, 136, 137, 139, 140, 144, 145, 146, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 163, 164, 165, 166, 167, 168, 169, 170, 172, 173, 176, 177, 182, 183, 184, 189, 193, 194, 195, 196, 197, 199, 200, 201, 203, 204, 205, 206, 207, 208, 209, 213, 214, 216, 218, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 248, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 290, 293, 298, 302, 307, 308, 314, 326, 332, 334, 346, 347, 362, 376, 378, 383, 386, 387, 388, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 428, 429, 430, 431, 432, 433, 434, 435, 436, 439, 441, 442, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 458, 459, 460, 461, 462, 464, 465, 466, 467, 468, 470, 471, 473, 474, 475, 476, 477, 478, 479, 482, 484, 485, 486, 487, 489, 490, 491, 492, 493, 494, 495, 497, 498, 499, 500, 501, 502, 503, 504, 506, 507, 508, 509, 510, 513, 514, 518, 519, 521, 523, 524, 525, 526, 530, 531, 532, 533, 535, 537, 538, 539, 540, 541, 542, 545, 546, 547, 548, 549, 553, 554, 563, 573, 593, 595, 596, 597, 598, 599, 600, 601, 602, 603], "arakelian": 299, "arang": [120, 402, 468, 485, 489, 547], "arb": 504, "arbitrari": [202, 204, 205, 398, 410, 434, 447, 477, 493, 499, 504, 547, 548], "arbitrary_types_allow": [16, 84, 90, 105, 126, 414], "arbitrarytypemetadata": 414, "archiv": [413, 510, 519], "arcsec": 179, "arctan": 401, "area": [82, 88, 106, 108, 155, 156, 171, 182, 183, 190, 197, 205, 207, 209, 387, 388, 398, 443, 445, 458, 464, 477, 487, 498, 509, 510, 540, 547, 548, 597], "areasc": [446, 448], "aren": [363, 387, 401, 406, 407, 419, 420, 422], "arf": [107, 108, 111, 200, 201, 204, 205, 464, 548], "arf_ob": 107, "arffil": 107, "arg": [11, 16, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 53, 84, 87, 90, 91, 105, 110, 111, 126, 150, 151, 152, 156, 157, 158, 160, 163, 164, 165, 167, 168, 197, 198, 205, 222, 235, 249, 256, 257, 258, 337, 598], "arg_in_kwarg": 387, "argmax": 490, "argmin": 490, "argpars": [392, 598], "argsort": [87, 91], "argument": [11, 16, 19, 20, 23, 26, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 68, 83, 84, 86, 87, 88, 90, 91, 92, 93, 100, 102, 103, 105, 106, 109, 110, 111, 126, 127, 128, 130, 132, 136, 149, 150, 151, 152, 153, 156, 157, 158, 160, 163, 164, 165, 166, 167, 168, 169, 172, 182, 194, 195, 196, 197, 199, 200, 201, 203, 204, 205, 206, 207, 208, 209, 212, 214, 221, 222, 223, 224, 225, 226, 227, 228, 229, 231, 232, 233, 234, 235, 237, 238, 239, 240, 241, 242, 243, 244, 245, 248, 251, 252, 253, 254, 255, 256, 257, 258, 259, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 275, 276, 277, 278, 279, 280, 281, 285, 291, 312, 314, 326, 332, 334, 335, 374, 375, 376, 380, 381, 382, 383, 384, 390, 393, 399, 402, 435, 436, 439, 441, 447, 453, 454, 455, 468, 473, 478, 479, 495, 498, 499, 502, 503, 508, 519, 533, 535, 546, 547, 548, 573, 598], "aris": [392, 403, 535], "arithmet": [222, 398, 449, 499, 500, 502, 565], "arjun": [446, 447], "arm": [33, 34, 38, 45, 443], "armstrong": 447, "arnau": [441, 450, 451, 452, 453, 455], "around": [56, 144, 172, 195, 197, 207, 209, 326, 401, 402, 466, 487, 491, 495, 500, 509, 521, 535, 544, 547, 548], "arpit": 446, "arr": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40], "arrai": [19, 20, 28, 29, 30, 31, 32, 33, 35, 36, 37, 38, 39, 40, 82, 83, 85, 87, 91, 92, 94, 99, 100, 102, 103, 106, 110, 111, 120, 125, 127, 128, 129, 132, 133, 136, 139, 144, 145, 150, 151, 152, 153, 156, 157, 158, 160, 163, 164, 165, 166, 167, 168, 169, 194, 195, 196, 197, 198, 199, 200, 201, 202, 204, 205, 206, 207, 208, 209, 212, 217, 221, 224, 225, 226, 227, 228, 229, 231, 232, 233, 234, 235, 237, 238, 239, 240, 241, 242, 243, 244, 245, 248, 251, 253, 254, 255, 256, 257, 258, 259, 263, 264, 265, 266, 267, 268, 271, 272, 273, 277, 278, 279, 280, 281, 291, 292, 294, 296, 302, 308, 310, 314, 325, 326, 327, 341, 342, 343, 347, 380, 381, 386, 387, 400, 401, 405, 411, 414, 424, 434, 447, 450, 452, 454, 466, 467, 477, 478, 487, 489, 492, 493, 495, 497, 499, 501, 502, 504, 507, 509, 510, 521, 547, 548, 556, 582, 586, 599, 600], "array_lik": [103, 110, 150, 151, 152, 153, 156, 157, 158, 160, 163, 165, 167, 168, 194, 195, 196, 197, 199, 204, 205, 207, 208, 209, 295, 301, 311], "array_shap": [452, 454], "arriba": [440, 443, 444], "arriv": [226, 234, 239, 241, 242, 243, 259, 266, 278, 281, 392, 400, 433, 434, 435, 477, 597, 601], "arrow": 596, "arrowprop": 553, "arrowstyl": 553, "artefact": [19, 20, 26, 221, 222, 225, 229, 231, 232, 233, 238, 244, 245, 248, 252, 254, 256, 257, 258, 263, 268, 270, 271, 272, 273, 276, 280], "arthmet": 398, "articl": [138, 272, 392, 460, 485], "artifact": [124, 197], "artifici": 477, "artist": [204, 227, 251, 553, 554], "arxiv": [64, 65, 182, 257, 258, 272, 273, 474, 491, 492, 580, 581], "as_arrai": [87, 91], "as_artist": [204, 205, 502, 548, 553, 554], "as_energy_tru": [194, 195, 204, 207], "as_plot_cent": [198, 201, 206, 489], "as_plot_edg": [198, 201, 206], "as_plot_label": [198, 201, 206], "as_plot_scal": 201, "as_plot_xerr": [198, 201, 206], "asanyarrai": 387, "ascii": [87, 91, 127, 387], "ashton": 416, "ashton2022": 416, "asid": 494, "asimov": [134, 307, 309, 504], "asinh": 468, "asinha": 82, "ask": [388, 390, 392, 394, 401, 403, 404, 407, 413, 423, 484, 521, 535, 536, 598], "asmooth": [120, 121, 406, 434, 445, 448], "asmoothestim": 408, "asmoothmapestim": [121, 408, 434, 436, 439, 468, 535], "aspect": [390, 413, 536, 598, 603], "assert": [198, 200, 201, 206, 362, 363, 364, 390, 398, 410, 499], "assert_allclos": 387, "assert_equ": 387, "assert_nam": [198, 200, 201, 206], "assert_quantity_allclos": [387, 443], "assess": [464, 466, 490], "assign": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 103, 104, 109, 110, 195, 217, 219, 267, 277, 383, 387, 396, 399, 402, 414, 417, 460, 482, 484, 493, 499, 502, 504, 519, 521, 547], "assist": 403, "asso": [71, 74, 75, 77, 78], "assoc": 71, "assoc1": [74, 75, 78, 492, 521], "assoc2": [74, 75, 78, 521], "assoc_fgl": 78, "assoc_fhl": 78, "assoc_gam": 75, "assoc_gam1": [74, 78], "assoc_gam2": [74, 78], "assoc_gam3": [74, 78], "assoc_new": 77, "assoc_prob_bai": 492, "assoc_prob_lr": 492, "assoc_tev": [74, 75, 78], "associ": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 67, 77, 80, 87, 91, 100, 103, 106, 124, 125, 135, 136, 139, 140, 141, 142, 154, 155, 166, 169, 186, 187, 192, 205, 227, 251, 278, 302, 314, 387, 393, 403, 411, 412, 413, 414, 415, 453, 454, 459, 460, 462, 464, 468, 474, 492, 493, 494, 498, 499, 501, 502, 504, 509, 521, 532, 533, 535, 548, 600], "association_catalog": [67, 492], "association_nam": [67, 492], "assum": [23, 50, 51, 52, 53, 67, 82, 83, 85, 95, 102, 124, 125, 127, 136, 137, 138, 143, 146, 147, 156, 168, 179, 193, 195, 196, 197, 199, 202, 206, 208, 209, 214, 273, 279, 283, 290, 307, 309, 341, 344, 387, 390, 399, 400, 402, 410, 411, 415, 424, 425, 458, 459, 460, 464, 466, 467, 471, 477, 478, 479, 482, 491, 497, 499, 502, 504, 508, 525, 531, 533, 540, 595, 600], "assumpt": [72, 95, 103, 106, 110, 111, 120, 135, 138, 147, 307, 401, 411, 459, 540, 544, 599], "astri": 97, "astrisim": 400, "astro": [6, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 128, 189, 196, 197, 199, 208, 209, 262, 280, 387, 388, 399, 406, 407, 411, 431, 440, 444, 448, 450, 454, 466, 491, 497, 499, 507, 524, 525, 527, 528, 529, 532, 596, 597], "astro_dark_matt": [407, 457, 491, 505], "astromodel": 523, "astronom": [13, 401, 408, 447, 597], "astronomi": [11, 284, 386, 397, 401, 405, 416, 418, 425, 446, 460, 464, 471, 475, 498, 507, 535, 544, 545, 595, 596, 597, 598, 599, 600, 602, 603], "astrophys": [6, 23, 318, 402, 535, 596, 597], "astropi": [13, 19, 20, 26, 27, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 52, 66, 83, 85, 86, 87, 88, 89, 90, 91, 92, 94, 96, 103, 106, 110, 111, 116, 119, 120, 125, 127, 129, 131, 132, 136, 144, 145, 153, 155, 164, 166, 179, 193, 194, 195, 196, 197, 199, 200, 202, 204, 205, 206, 207, 208, 209, 217, 219, 221, 222, 225, 229, 231, 232, 233, 238, 241, 242, 244, 245, 248, 252, 254, 256, 257, 258, 259, 263, 266, 267, 268, 270, 271, 272, 273, 276, 278, 280, 281, 284, 293, 302, 312, 313, 314, 344, 363, 364, 373, 377, 378, 382, 386, 388, 389, 390, 392, 393, 394, 398, 400, 401, 402, 404, 405, 406, 407, 408, 410, 411, 413, 414, 415, 417, 424, 425, 427, 431, 432, 433, 434, 438, 440, 441, 443, 444, 445, 446, 447, 448, 449, 450, 452, 454, 458, 459, 460, 462, 464, 465, 466, 467, 468, 470, 471, 473, 474, 475, 476, 477, 478, 479, 482, 484, 485, 486, 487, 489, 490, 491, 492, 493, 494, 495, 497, 498, 499, 500, 501, 502, 503, 504, 506, 507, 508, 509, 510, 513, 518, 519, 521, 525, 527, 528, 529, 531, 532, 533, 535, 537, 539, 542, 544, 545, 546, 547, 548, 553, 554, 555, 556, 557, 560, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 585, 586, 587, 588, 589, 590, 591, 592, 593, 599, 602, 603], "astropy_healpix": 396, "astropy_help": [387, 429, 430, 431], "astropy_introduct": 430, "astropy_timeseri": 402, "astropy_vers": 387, "astyp": [87, 91], "asymetr": 102, "asymmetr": [124, 128, 129, 132, 133, 136, 137, 146, 405, 429, 435, 454, 464, 504, 518, 533, 554], "asymmetri": 497, "asymptot": [134, 600, 601], "atmospher": [402, 420, 425, 507], "atnf": 447, "atol": [86, 100, 132, 201, 206, 362, 364, 387], "atol_ax": [150, 151, 152, 153, 156, 157, 158, 160, 163, 165, 167, 168, 195, 196, 197, 199, 204, 205, 207, 208, 209], "atom": 403, "atproduction_gamma": 26, "atreye": [399, 402, 428, 429, 430, 431, 432, 433, 434, 435, 436, 438, 439, 441, 442, 447, 448, 449, 450, 451, 452, 453, 454, 455], "attach": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 85, 94, 227, 235, 251, 267, 277, 398, 408, 416, 452, 486, 495, 501, 502, 598], "attempt": [16, 84, 90, 105, 126, 390, 401, 404], "attenu": 459, "attr": 387, "attract": 407, "attribut": [15, 16, 17, 18, 19, 20, 21, 22, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 35, 36, 37, 38, 39, 40, 52, 53, 54, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 99, 100, 101, 102, 103, 105, 106, 107, 108, 110, 111, 120, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 163, 164, 165, 166, 167, 168, 169, 171, 172, 173, 175, 176, 177, 178, 181, 182, 183, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 212, 213, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 248, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 275, 276, 277, 278, 279, 280, 281, 282, 292, 294, 314, 397, 399, 409, 414, 415, 416, 429, 430, 433, 434, 435, 436, 439, 441, 443, 445, 447, 452, 453, 454, 462, 466, 495, 498, 499, 500, 502, 521, 531, 547, 548, 600], "attributeerror": 387, "attrribut": 499, "aug": [400, 403, 404, 406, 426], "august": [394, 400, 403, 406, 475], "authent": 390, "author": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 388, 390, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 414, 415, 416, 417], "author2": 388, "authoris": 413, "authorship": 391, "auto": [77, 196, 197, 199, 208, 209, 388, 390, 398, 407, 434, 448, 495, 598], "autocorrel": 139, "autodiff": 405, "autogener": 407, "autograd": [398, 405], "autom": [11, 395, 403, 413, 416, 417, 418, 441, 495, 598], "automat": [16, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 83, 84, 90, 105, 113, 114, 126, 128, 132, 136, 224, 228, 235, 237, 240, 253, 264, 265, 269, 275, 279, 386, 387, 388, 390, 394, 395, 397, 398, 404, 407, 409, 413, 417, 428, 429, 435, 466, 475, 495, 499, 598, 602], "automatis": 534, "autopep8": 387, "autoscal": [217, 218, 219, 220], "auxiliari": 77, "avail": [11, 13, 26, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 57, 67, 70, 72, 77, 78, 83, 87, 88, 91, 102, 103, 106, 110, 111, 124, 125, 127, 128, 129, 132, 133, 136, 137, 146, 149, 170, 176, 182, 183, 201, 214, 217, 219, 223, 224, 228, 229, 237, 240, 253, 255, 264, 265, 269, 275, 277, 279, 284, 338, 375, 387, 390, 393, 394, 395, 396, 398, 399, 400, 401, 404, 405, 407, 414, 418, 419, 420, 421, 422, 423, 429, 433, 434, 435, 439, 442, 446, 448, 450, 453, 455, 459, 464, 465, 468, 489, 494, 495, 498, 500, 502, 507, 508, 513, 518, 521, 523, 525, 526, 532, 534, 535, 537, 538, 539, 541, 549, 563, 596, 598, 600], "available_hdu": 88, "available_irf": 88, "available_method": [173, 182], "available_quant": [124, 125, 127, 136, 468, 494], "available_select": [176, 183], "available_stat_typ": 102, "averag": [19, 103, 106, 110, 111, 176, 183, 186, 187, 189, 190, 439, 459, 460, 464, 531, 597], "averageaz": [477, 478], "avoid": [19, 20, 26, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 87, 91, 124, 176, 221, 222, 225, 229, 231, 232, 233, 238, 244, 245, 248, 252, 254, 256, 257, 258, 263, 268, 270, 271, 272, 273, 276, 280, 293, 387, 388, 393, 394, 395, 397, 401, 405, 406, 409, 410, 412, 413, 415, 420, 422, 439, 441, 450, 452, 453, 455, 464, 471, 500, 504, 532, 535, 544, 598], "awai": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 292, 294], "awar": [387, 392, 399, 407, 413], "ax": [16, 19, 20, 26, 66, 67, 83, 102, 103, 106, 110, 111, 112, 113, 114, 115, 117, 124, 125, 127, 129, 130, 136, 150, 151, 152, 153, 154, 155, 156, 157, 158, 160, 161, 163, 164, 165, 166, 167, 168, 169, 176, 183, 186, 187, 192, 194, 195, 196, 197, 198, 199, 200, 201, 202, 204, 205, 206, 207, 208, 209, 212, 221, 222, 223, 224, 225, 226, 227, 228, 229, 231, 232, 233, 234, 237, 238, 239, 240, 241, 242, 243, 244, 245, 248, 251, 252, 253, 254, 255, 256, 257, 258, 259, 263, 264, 265, 266, 268, 269, 270, 271, 272, 273, 275, 276, 278, 279, 280, 281, 292, 294, 374, 375, 379, 380, 381, 382, 383, 384, 387, 396, 406, 430, 434, 439, 445, 446, 447, 450, 453, 455, 458, 459, 460, 462, 464, 465, 466, 467, 468, 470, 471, 473, 474, 475, 476, 477, 478, 479, 482, 484, 485, 486, 487, 489, 490, 491, 492, 493, 494, 495, 497, 498, 500, 501, 502, 503, 504, 507, 508, 509, 518, 519, 521, 531, 533, 535, 537, 542, 544, 545, 546, 547, 553, 554, 555, 559, 563, 592, 593, 597, 603], "ax1": [458, 468, 471, 475, 487, 500, 501], "ax2": [458, 468, 471, 475, 487, 500, 501], "ax3": [468, 475], "ax_crab_3fhl": 521, "ax_ebl": 563, "ax_excess": [460, 464], "ax_model": 563, "ax_residu": [102, 110, 111, 460, 464, 465, 466, 487, 518], "ax_s": [465, 518], "ax_spati": [103, 106, 110, 111], "ax_spectr": [103, 106, 110, 111], "ax_spectrum": [102, 110, 111, 460, 464, 465, 466, 487], "ax_sqrt_t": [460, 464], "axcols1": 499, "axcols2": 499, "axel": [396, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455], "axes0": [196, 197, 199, 205, 208, 209], "axes_loc": [150, 151, 153, 156, 157, 158, 163, 165, 167, 209, 375], "axes_nam": [195, 196, 197, 199, 204, 205, 207, 208, 209], "axesimag": [375, 376], "axesn": [196, 197, 199, 205, 208, 209], "axi": [19, 20, 26, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 41, 83, 100, 102, 103, 106, 110, 111, 112, 113, 114, 115, 117, 118, 120, 124, 125, 127, 128, 129, 131, 132, 136, 137, 140, 146, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 160, 161, 163, 164, 165, 166, 167, 168, 169, 190, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 204, 205, 206, 207, 208, 209, 221, 222, 225, 226, 227, 228, 229, 231, 232, 233, 234, 238, 239, 241, 242, 243, 244, 245, 248, 251, 252, 254, 256, 257, 258, 259, 263, 266, 268, 270, 271, 272, 273, 276, 277, 278, 280, 281, 288, 292, 293, 294, 298, 299, 300, 302, 325, 326, 336, 375, 380, 381, 382, 383, 393, 396, 409, 411, 431, 434, 435, 436, 439, 441, 446, 448, 449, 450, 453, 458, 460, 464, 465, 466, 467, 470, 471, 473, 475, 477, 478, 479, 482, 485, 486, 489, 490, 492, 493, 497, 498, 499, 507, 508, 509, 518, 519, 521, 531, 533, 535, 539, 544, 547, 548, 593, 596, 597], "axis0": 547, "axis1": 499, "axis2": 499, "axis_edg": 380, "axis_nam": [102, 103, 106, 110, 111, 125, 127, 140, 148, 150, 151, 152, 153, 154, 155, 156, 157, 158, 160, 161, 163, 165, 166, 167, 168, 169, 194, 195, 196, 197, 199, 200, 202, 204, 205, 207, 208, 209, 479, 484, 485, 486, 493, 494], "axis_new": [127, 148, 485, 490], "axis_origin": 490, "axis_rgb": 382, "axis_tru": 475, "axisymmetr": 454, "axvlin": [467, 491, 503, 504], "axvspan": [205, 487], "az": [83, 85, 88, 94, 95, 387, 602], "azimuth": 508, "azur": 435, "b": [16, 19, 20, 26, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 48, 51, 52, 54, 77, 84, 87, 90, 91, 105, 126, 156, 214, 354, 387, 388, 390, 401, 410, 413, 417, 464, 476, 491, 492, 495, 499, 500, 502, 508, 521, 527, 531, 548], "b1509": 492, "b_0": [553, 554], "b_1": [87, 91], "b_mean": 42, "b_psr": 43, "b_stdv": 42, "back": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 69, 77, 87, 91, 197, 326, 390, 397, 398, 401, 407, 416, 417, 464, 465, 467, 499, 502, 518, 598], "backend": [93, 102, 122, 128, 129, 132, 133, 136, 172, 213, 214, 215, 216, 290, 329, 334, 335, 386, 396, 398, 429, 448, 449, 453, 460, 462, 464, 465, 466, 473, 474, 475, 487, 489, 494, 495, 508, 518, 519, 535, 595, 596], "backend_default": [129, 132, 136], "background": [16, 67, 82, 83, 88, 93, 103, 104, 106, 107, 109, 110, 111, 114, 115, 120, 124, 125, 127, 135, 150, 151, 152, 162, 171, 173, 174, 176, 177, 178, 179, 181, 182, 183, 189, 229, 235, 277, 285, 292, 294, 303, 304, 305, 306, 311, 383, 387, 393, 396, 399, 400, 401, 403, 407, 408, 411, 420, 425, 428, 429, 430, 432, 433, 434, 435, 436, 439, 440, 441, 443, 444, 445, 446, 447, 448, 449, 451, 453, 454, 455, 457, 458, 459, 460, 464, 465, 466, 467, 468, 469, 470, 472, 473, 475, 478, 479, 482, 484, 485, 486, 487, 489, 492, 493, 495, 497, 499, 500, 504, 506, 509, 510, 513, 519, 531, 533, 534, 540, 596, 597, 598, 600, 601], "background2d": [151, 152, 162, 435, 442, 450, 452, 454, 538], "background3d": [88, 150, 162, 189, 393, 435, 439, 447, 448, 449, 455, 497, 507, 538], "background_estim": 406, "background_interp_missing_data": 176, "background_map": [277, 398], "background_min": 149, "background_model": [103, 106, 110, 111, 136, 227, 251, 399, 400, 407, 409, 435, 470, 519], "background_oversampl": [176, 183, 498], "background_pad_offset": 176, "background_r": [406, 493], "backgroundconfig": 16, "backgroundestim": [402, 433], "backgroundevalu": 398, "backgroundirf": [150, 151], "backgroundirfmodel": 409, "backgroundmodel": [399, 409, 410, 432, 434, 435, 436, 439], "backgroundtempl": 398, "backport": [394, 412, 417], "backround": 396, "backscal": 205, "backward": [129, 392, 401, 410, 411, 412, 431, 494, 533], "bad": [86, 387, 401], "badli": 418, "balanc": 531, "band": [19, 20, 26, 68, 83, 89, 122, 125, 127, 130, 154, 155, 158, 161, 166, 169, 194, 195, 196, 197, 199, 200, 203, 204, 205, 207, 208, 209, 221, 222, 225, 229, 231, 232, 233, 238, 244, 245, 248, 252, 254, 256, 257, 258, 263, 268, 270, 271, 272, 273, 276, 280, 393, 405, 406, 410, 411, 420, 428, 462, 464, 465, 474, 475, 476, 487, 491, 492, 502, 508, 510, 530, 531, 533, 596], "bandshdu": 499, "banner": 418, "bar": [15, 82, 87, 91, 103, 106, 110, 111, 120, 132, 136, 150, 151, 209, 214, 238, 300, 335, 381, 404, 439, 442, 443, 449, 454, 487, 504, 535, 570], "bar_radiu": 38, "base": [15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 50, 51, 52, 53, 54, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 120, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 163, 164, 165, 166, 167, 168, 169, 171, 172, 173, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 275, 276, 277, 278, 279, 280, 281, 282, 292, 294, 313, 322, 323, 326, 332, 334, 336, 361, 374, 382, 387, 388, 390, 393, 394, 396, 397, 398, 399, 400, 401, 402, 403, 405, 406, 408, 410, 415, 416, 418, 420, 421, 428, 430, 431, 433, 435, 436, 439, 441, 444, 445, 446, 447, 448, 454, 455, 459, 464, 466, 467, 470, 473, 474, 475, 476, 477, 479, 487, 490, 492, 494, 497, 499, 500, 502, 503, 504, 507, 508, 519, 521, 523, 532, 533, 535, 545, 547, 560, 571, 596, 597, 599, 600], "base_dir": [82, 87, 322, 507, 509, 510, 523], "baselin": [82, 83, 243, 507], "basement": 430, "basemodel": [16, 84, 90, 105, 126, 414, 473], "baseradi": 252, "bash": [420, 422, 598], "bash_profil": 390, "bashrc": 390, "basi": [392, 393, 403, 406, 417, 441, 443, 487, 491], "basic": [45, 46, 67, 71, 72, 74, 75, 76, 78, 79, 80, 106, 111, 127, 242, 390, 393, 397, 398, 399, 400, 401, 403, 407, 411, 414, 424, 436, 446, 448, 457, 460, 464, 466, 480, 481, 484, 490, 491, 492, 500, 513, 520, 521, 523, 525, 526, 533, 544, 547, 597, 598], "basicconfig": [16, 475, 516], "bayesian": [391, 405], "bayesian_block": 490, "bayesian_edg": 490, "bayesianfit": 416, "bayesianinfer": 416, "baysian": 396, "bb": [87, 91, 413], "bbar": [19, 20], "bbox_with_unit": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40], "bcf": [151, 155, 156, 157, 166, 458, 467, 482, 486, 497, 507], "becam": 394, "becaus": [16, 84, 90, 105, 126, 196, 197, 199, 203, 205, 208, 209, 387, 388, 390, 392, 394, 398, 399, 401, 402, 406, 410, 411, 414, 418, 439, 441, 455, 460, 462, 465, 479, 485, 487, 498, 499, 500, 501, 507, 508, 509, 518, 519, 521, 531, 535, 598, 601], "becom": [387, 395, 397, 398, 401, 406, 414, 416, 477, 485, 502, 535, 598, 601], "been": [16, 19, 20, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 84, 90, 100, 105, 124, 125, 126, 127, 168, 217, 221, 224, 225, 228, 229, 231, 232, 233, 234, 237, 238, 239, 240, 241, 242, 243, 244, 245, 248, 255, 256, 257, 258, 259, 263, 264, 265, 266, 268, 271, 272, 273, 278, 279, 314, 392, 393, 394, 395, 396, 398, 401, 402, 403, 404, 405, 406, 408, 409, 410, 411, 412, 414, 415, 416, 419, 421, 435, 436, 439, 441, 442, 448, 449, 450, 451, 452, 453, 454, 455, 459, 465, 476, 485, 486, 487, 489, 494, 499, 502, 503, 507, 509, 518, 532, 547, 582], "befor": [13, 16, 17, 18, 19, 20, 21, 22, 24, 25, 27, 52, 53, 84, 87, 90, 91, 92, 100, 105, 125, 126, 196, 197, 217, 221, 224, 225, 228, 229, 231, 232, 233, 234, 237, 238, 239, 240, 241, 242, 243, 244, 245, 248, 251, 255, 256, 257, 258, 259, 263, 264, 265, 266, 268, 271, 272, 273, 278, 279, 326, 382, 387, 388, 390, 392, 394, 395, 396, 397, 401, 402, 403, 405, 406, 412, 417, 418, 424, 442, 448, 459, 465, 467, 484, 485, 494, 495, 499, 502, 509, 513, 518, 573, 598], "beforevalid": 90, "begeman": 22, "begin": [52, 87, 91, 103, 110, 125, 127, 136, 407, 410, 413, 464, 466, 499, 502, 553, 558, 559, 564, 580, 600], "behav": [387, 397, 453, 470, 601], "behavior": [16, 84, 87, 90, 91, 95, 105, 126, 411, 438, 442, 453, 455], "behaviour": [362, 387, 409, 410, 436, 441, 447, 454, 485, 500, 508, 509, 531, 599], "behind": 489, "being": [124, 135, 197, 387, 392, 395, 401, 408, 411, 418, 466, 476, 490, 500, 524, 535, 548, 598], "belief": 504, "believ": [423, 504], "belong": [86, 411, 435], "below": [52, 53, 87, 91, 124, 136, 195, 199, 206, 207, 376, 377, 378, 382, 384, 388, 390, 391, 396, 397, 401, 403, 404, 407, 410, 411, 413, 414, 415, 416, 418, 419, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 441, 442, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 458, 464, 468, 487, 492, 495, 498, 500, 502, 503, 504, 507, 508, 532, 535, 554, 600], "benchmark": [403, 413, 418], "benefit": 404, "benn": 403, "berg": 597, "berge2007": [401, 544, 545, 597], "bernet": 454, "besancon": 525, "besid": [124, 136, 401, 402, 411, 416, 465, 466, 499, 508, 518, 519, 548], "best": [67, 71, 74, 75, 77, 78, 80, 102, 125, 127, 128, 129, 132, 133, 144, 215, 216, 290, 292, 294, 380, 387, 390, 397, 400, 405, 413, 416, 420, 422, 459, 462, 464, 465, 466, 470, 473, 476, 487, 492, 494, 495, 504, 513, 518, 533, 535, 537, 563, 569, 572, 573, 577, 600, 601, 602], "best_fit_model": 466, "best_fit_profil": 77, "beta": [27, 28, 48, 214, 243, 244, 245, 268, 410, 412, 435, 459, 462, 466, 474, 492, 495, 565, 571, 572, 573, 578, 589], "better": [387, 390, 392, 393, 394, 395, 396, 400, 401, 406, 407, 408, 411, 416, 429, 446, 447, 473, 474, 477, 487, 489, 495, 499, 500, 508, 531], "between": [19, 20, 26, 67, 77, 87, 88, 91, 94, 106, 111, 122, 124, 125, 127, 129, 130, 132, 134, 144, 145, 157, 163, 165, 166, 167, 169, 179, 193, 195, 196, 197, 198, 199, 201, 204, 205, 206, 207, 208, 209, 221, 222, 225, 226, 229, 231, 232, 233, 234, 238, 239, 241, 242, 243, 244, 245, 248, 252, 254, 256, 257, 258, 259, 263, 266, 268, 270, 271, 272, 273, 276, 278, 280, 281, 284, 290, 311, 344, 377, 378, 385, 387, 388, 390, 395, 397, 398, 399, 400, 401, 403, 404, 406, 407, 408, 411, 412, 414, 415, 416, 417, 426, 436, 439, 442, 453, 458, 466, 468, 474, 476, 479, 486, 487, 490, 494, 495, 498, 499, 500, 501, 504, 508, 509, 521, 531, 533, 540, 541, 544, 554, 555, 597, 600, 602], "bewar": [278, 460, 485], "bexcub": 200, "bexpcub": [195, 196, 197, 199, 208, 209, 499], "beyond": [200, 401, 411, 414, 435, 498, 523], "bfg": 495, "bgstat": 445, "bi": [446, 449], "bia": [96, 153, 154, 158, 182, 447, 453, 498, 504, 539], "bias": [466, 599], "bias_energi": 153, "bias_perc": 182, "bibliographi": 597, "bic": 416, "biederbeck": [415, 454], "big": [394, 397, 404, 417, 449, 508, 599, 601], "bigger": 197, "biggest": 406, "billion": 387, "bimod": 31, "bin": [19, 20, 26, 77, 83, 86, 88, 101, 103, 106, 109, 110, 111, 113, 114, 120, 122, 124, 125, 127, 128, 130, 131, 132, 135, 136, 138, 139, 140, 141, 142, 147, 148, 149, 153, 154, 155, 156, 158, 161, 164, 166, 168, 169, 176, 178, 179, 180, 182, 184, 193, 194, 195, 196, 197, 198, 199, 200, 201, 204, 205, 206, 207, 208, 209, 221, 222, 224, 225, 226, 227, 228, 229, 231, 232, 233, 234, 237, 238, 239, 240, 241, 242, 243, 244, 245, 248, 251, 252, 253, 254, 255, 256, 257, 258, 259, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 275, 276, 277, 278, 279, 280, 281, 286, 295, 301, 302, 311, 380, 382, 385, 393, 398, 399, 400, 401, 403, 406, 407, 411, 419, 420, 430, 431, 433, 434, 436, 438, 439, 441, 444, 445, 446, 447, 448, 453, 454, 455, 459, 460, 464, 465, 466, 467, 468, 470, 471, 473, 474, 475, 477, 478, 479, 482, 484, 485, 486, 487, 489, 490, 491, 492, 493, 494, 495, 497, 498, 499, 500, 501, 502, 504, 506, 507, 508, 509, 510, 518, 519, 521, 531, 533, 535, 539, 542, 543, 596, 597, 598, 599, 601], "bin_cent": 487, "bin_edg": 487, "bin_volum": [200, 204, 207, 548], "bin_width": [198, 201, 206, 487], "binari": [207, 209, 395, 401, 404, 413, 418, 439], "binary_dil": [209, 500], "binary_erod": [209, 500], "binary_eros": [209, 439], "binary_structur": 207, "bincent": 302, "bind": 390, "binder": [395, 417, 447, 450, 458, 459, 460, 462, 464, 465, 466, 467, 468, 470, 471, 473, 474, 475, 476, 477, 478, 479, 482, 484, 485, 486, 487, 489, 490, 491, 492, 493, 494, 495, 497, 498, 499, 500, 501, 502, 503, 504, 506, 507, 508, 509, 510, 513, 516, 518, 519, 521, 552, 553, 554, 555, 556, 557, 558, 559, 560, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 585, 586, 587, 588, 589, 590, 591, 592, 593], "binlik": 127, "binned_likelihood": 128, "binneddataaxi": [430, 446], "binnedtimeseri": [127, 402], "bins_axi": 209, "binsiz": [16, 465, 470, 471, 473, 484, 518, 519], "binsize_irf": [16, 465, 470, 471, 473, 484, 518], "binsz": [103, 106, 110, 111, 112, 117, 155, 164, 166, 176, 179, 180, 184, 194, 195, 196, 197, 199, 204, 205, 207, 208, 209, 403, 464, 475, 476, 477, 478, 482, 487, 491, 493, 497, 498, 499, 500, 502, 508, 509, 519, 542, 544, 545, 547, 548, 552, 554, 555, 556, 557], "binsz_irf": [103, 106, 110, 111, 115, 493, 498, 535], "binsz_irf_default": [103, 106, 110, 111, 498], "binsz_wc": [204, 205], "bintabl": [195, 196, 197, 199, 208, 209], "bintablehdu": [83, 86, 150, 151, 152, 153, 156, 157, 158, 160, 163, 165, 167, 168, 195, 196, 197, 200, 201, 207, 208, 209, 477, 499, 531], "birth": [29, 30, 31, 32, 36, 50, 51, 52, 53], "bit": [83, 144, 388, 390, 394, 395, 401, 405, 406, 414, 455, 487, 499, 548], "bitbucket": 510, "bitpix": 499, "bkg": [16, 82, 87, 88, 103, 107, 108, 110, 111, 150, 151, 152, 182, 189, 235, 409, 434, 436, 441, 455, 458, 464, 465, 470, 471, 473, 474, 477, 478, 482, 487, 493, 497, 498, 501, 507, 509, 510, 518, 519, 531, 538, 597, 599, 600, 601], "bkg_": [103, 110], "bkg_2d": [87, 150], "bkg_3d": [82, 87, 151, 507, 510], "bkg_err": 487, "bkg_maker": [409, 460, 464, 466, 475, 485, 489, 544], "bkg_model": [399, 409, 415, 473, 477, 478, 482, 501, 519, 556], "bkg_ob": 107, "bkg_sy": 135, "bkg_syst_fract": [135, 458], "bkg_syst_fraction_sensit": 124, "bkgfile": 107, "black": [110, 111, 376, 377, 384, 405, 448, 450, 458, 487, 491, 498, 503, 544, 582], "blanch": [447, 448], "blanklin": [242, 424, 533, 548], "blazar": [308, 459, 489], "blind": [450, 535, 603], "bll": 521, "blob": 427, "block": [388, 390, 393, 400, 407, 418, 427, 447], "block_reduc": 448, "blue": [102, 103, 106, 110, 111, 227, 251, 377, 459, 464, 471, 473, 476, 503, 544, 582], "blur": 33, "board": [396, 407], "bodi": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40], "boilerpl": 387, "boller": 490, "boni": [439, 442], "bool": [15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 45, 80, 82, 83, 84, 86, 87, 88, 90, 91, 93, 96, 100, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 115, 116, 119, 124, 125, 126, 127, 128, 132, 133, 136, 143, 150, 151, 152, 153, 154, 155, 156, 157, 158, 160, 161, 163, 164, 165, 166, 167, 168, 169, 172, 176, 183, 186, 187, 189, 190, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 211, 214, 215, 217, 218, 219, 220, 221, 224, 225, 227, 228, 229, 231, 232, 233, 234, 235, 237, 238, 239, 240, 241, 242, 243, 244, 245, 248, 251, 255, 256, 257, 258, 259, 263, 264, 265, 266, 267, 268, 271, 272, 273, 275, 276, 277, 278, 279, 293, 311, 314, 323, 326, 327, 344, 350, 353, 355, 356, 358, 384, 387, 401, 475, 492, 498, 499], "boolean": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 83, 87, 91, 125, 128, 129, 132, 133, 195, 196, 197, 199, 202, 204, 205, 207, 208, 209, 214, 227, 251, 267, 403, 436, 473, 492, 499, 500, 501], "boost": 477, "bootstrap": [87, 91, 416], "border": 91, "bose": 430, "bot": 393, "both": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 57, 70, 77, 82, 83, 86, 87, 88, 91, 100, 102, 103, 106, 107, 108, 110, 111, 125, 127, 153, 154, 155, 161, 166, 169, 193, 196, 197, 199, 201, 203, 204, 205, 207, 208, 209, 217, 219, 387, 390, 392, 393, 398, 399, 400, 401, 402, 407, 412, 417, 429, 433, 435, 436, 439, 442, 464, 465, 466, 477, 482, 493, 494, 499, 500, 501, 503, 504, 532, 533, 535, 547, 548, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 585, 586, 587, 588, 589, 590, 591, 600], "bother": 470, "bottom": [407, 409, 459, 477, 484, 485, 486, 490, 492], "bound": [17, 18, 19, 20, 21, 22, 24, 25, 26, 27, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 100, 103, 106, 110, 111, 125, 127, 128, 129, 132, 194, 195, 201, 204, 206, 207, 214, 221, 222, 225, 226, 227, 229, 231, 232, 233, 234, 238, 239, 241, 242, 243, 244, 245, 248, 251, 252, 254, 256, 257, 258, 259, 263, 266, 268, 270, 271, 272, 273, 276, 277, 278, 280, 281, 306, 396, 499, 504], "boundari": [201, 207, 279, 307, 309, 415, 416, 444, 455, 495, 502, 547], "boundary_mask": [207, 500], "boundary_typ": 201, "bounding_box": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40], "bounds_error": [150, 151, 152, 153, 156, 157, 158, 160, 163, 165, 167, 168, 387, 497], "box": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 91, 103, 106, 129, 130, 204, 207, 209, 346, 347, 396, 401, 405, 411, 416, 446, 500, 502, 548], "bpl": [221, 410, 502], "bpwl_norm": 410, "bracket": [153, 214, 451, 453], "brake": 51, "branch": [387, 390, 394, 401, 412, 418, 427], "branchnam": 387, "bratio": 523, "break": [221, 268, 393, 401, 403, 412, 433, 434, 435, 455, 564, 578], "brent": 468, "brentq": [19, 20, 26, 127, 214, 221, 222, 225, 229, 231, 232, 233, 238, 244, 245, 248, 252, 254, 256, 257, 258, 263, 268, 270, 271, 272, 273, 276, 280, 291], "breviti": [473, 535], "brief": 602, "briefli": [509, 510], "bright": [68, 129, 267, 283, 471, 484, 485, 500, 502, 529, 544], "brighter": 477, "brightest": 492, "brigitta": [404, 429, 431, 433, 435, 444, 445, 446, 447, 448, 449, 450, 455], "bring": 392, "broadcast": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 87, 91, 196, 197, 199, 202, 205, 208, 209, 267, 326, 455, 478, 497, 499, 547], "broadcasted_shap": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40], "broken": [221, 268, 413, 417, 457, 489, 549, 562, 583], "brokenpowerlaw": 410, "brokenpowerlawspectralmodel": [262, 268, 410, 436, 502, 564], "brought": 455, "brown": [140, 490], "brows": [87, 91, 388, 424, 521], "browser": [87, 91, 390, 418, 424, 444, 447, 458, 459, 460, 462, 464, 465, 466, 467, 468, 470, 471, 473, 474, 475, 476, 477, 478, 479, 482, 484, 485, 486, 487, 489, 490, 491, 492, 493, 494, 495, 497, 498, 499, 500, 501, 502, 503, 504, 506, 507, 508, 509, 510, 516, 518, 519, 521, 552, 553, 554, 555, 556, 557, 558, 559, 560, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 585, 586, 587, 588, 589, 590, 591, 592, 593], "bruno": [413, 416, 431, 433, 436, 439, 442, 446, 447, 448, 450, 451, 452, 453, 454, 455], "br\u00fcgge": [447, 448], "bsd": 413, "bst": [87, 91], "buchner": [416, 439], "buchner2023": 416, "budget": 535, "buffer": 365, "bug": [387, 390, 393, 394, 412, 413, 417, 426, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 442, 444, 445, 446, 447, 448, 449, 451, 452], "bugfix": [394, 396, 412, 446, 447], "build": [16, 84, 90, 105, 126, 195, 229, 387, 393, 394, 395, 400, 401, 403, 407, 411, 412, 413, 414, 417, 435, 441, 450, 455, 468, 473, 487, 498, 500, 532, 535, 598], "build_doc": [351, 388, 390, 458, 460, 464, 465, 466, 467, 468, 470, 471, 473, 474, 475, 476, 477, 478, 479, 482, 484, 485, 486, 487, 489, 491, 492, 493, 495, 498, 499, 500, 501, 502, 504, 506, 507, 508, 509, 510, 518, 519, 521, 560, 569, 586], "built": [10, 183, 229, 354, 371, 386, 387, 388, 398, 399, 401, 403, 404, 406, 414, 418, 425, 448, 453, 492, 501, 508, 513, 531, 596], "builtin": 521, "bullet": 392, "bump": [401, 446], "bunch": [104, 109, 388, 598], "bundl": [102, 103, 106, 110, 111, 396, 399, 418, 440, 448, 475, 493, 498, 531, 548, 596, 597], "bunit": [373, 448, 499], "bureaucrat": 392, "burkert": [17, 523], "burn": 416, "burst": [36, 37, 490], "butterfli": [447, 495, 521], "button": [450, 499], "bvzqk": 498, "bx": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40], "by_alia": [16, 84, 90, 105, 126], "by_nam": [16, 84, 90, 105, 126], "byte": [16, 84, 87, 90, 91, 105, 126, 332, 365, 387], "bytearrai": [16, 84, 90, 105, 126, 332], "bytestr": [87, 91], "bzahtnhx": 489, "b\u00fchler": 427, "c": [26, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 48, 87, 91, 202, 212, 231, 271, 295, 301, 307, 309, 314, 354, 386, 387, 404, 420, 421, 423, 440, 447, 464, 471, 487, 489, 491, 495, 504, 507, 508, 523, 547, 568, 579, 598, 599, 601], "c0": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40], "c1": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40], "c7": 102, "c_": 212, "c_0": [194, 195, 204, 207], "c_i": [194, 195, 204, 207], "c_n": [194, 195, 204, 207], "cabot": 455, "cach": [16, 84, 87, 88, 90, 91, 100, 103, 105, 106, 110, 111, 126, 277, 322, 323, 396, 397, 399, 406, 409, 418, 432, 436, 439, 454], "cached_properti": [16, 84, 90, 105, 126], "cahil": 441, "cal_gen_92_002": [153, 201], "cal_gen_92_002_summari": 153, "calcul": [13, 15, 19, 20, 26, 96, 139, 140, 141, 142, 182, 221, 222, 225, 229, 231, 232, 233, 238, 244, 245, 248, 252, 254, 256, 263, 268, 270, 271, 272, 273, 276, 279, 280, 297, 299, 300, 311, 313, 336, 369, 377, 378, 397, 400, 429, 435, 439, 440, 441, 447, 452, 454, 458, 487, 490, 491, 494, 504, 518, 519, 523, 535, 597, 601], "caldb": [82, 151, 153, 155, 156, 157, 166, 201, 441, 458, 467, 477, 478, 482, 486, 497, 507], "calendar": [412, 417], "calib_vers": [508, 521], "call": [16, 17, 18, 19, 20, 21, 22, 24, 25, 26, 27, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 83, 84, 86, 87, 90, 91, 102, 103, 105, 106, 110, 111, 126, 139, 140, 141, 142, 150, 151, 152, 153, 156, 157, 158, 160, 163, 165, 167, 168, 178, 194, 195, 204, 207, 214, 221, 222, 223, 224, 225, 228, 229, 231, 232, 233, 236, 237, 238, 240, 244, 245, 246, 248, 252, 253, 254, 255, 256, 257, 258, 260, 263, 264, 265, 267, 268, 269, 270, 271, 272, 273, 275, 276, 279, 280, 282, 326, 338, 359, 365, 373, 376, 384, 387, 388, 390, 392, 393, 396, 399, 400, 401, 402, 403, 405, 407, 409, 411, 413, 415, 416, 418, 420, 424, 435, 439, 453, 464, 465, 475, 492, 493, 494, 495, 498, 499, 502, 508, 510, 518, 519, 521, 531, 535, 544, 545, 546, 547, 548, 598, 599, 600, 601], "callabl": [16, 45, 84, 90, 105, 126, 286, 416], "callback": [172, 598], "caller": [387, 398], "camera": [486, 497, 498], "can": [15, 16, 19, 20, 26, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 46, 47, 50, 56, 67, 68, 69, 77, 82, 83, 84, 87, 90, 91, 93, 103, 105, 106, 109, 110, 111, 115, 120, 124, 125, 126, 127, 129, 132, 133, 134, 136, 137, 144, 146, 151, 156, 164, 166, 169, 173, 179, 182, 194, 195, 196, 197, 199, 201, 202, 204, 205, 206, 207, 208, 209, 211, 214, 218, 220, 221, 222, 224, 225, 227, 228, 229, 231, 232, 233, 237, 238, 240, 242, 244, 245, 248, 251, 252, 253, 254, 256, 257, 258, 263, 264, 265, 268, 269, 270, 271, 272, 273, 275, 276, 279, 280, 291, 293, 298, 307, 309, 314, 326, 327, 332, 335, 344, 363, 365, 380, 384, 386, 387, 388, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 427, 429, 431, 433, 435, 436, 439, 441, 442, 446, 447, 448, 449, 450, 453, 454, 455, 458, 459, 460, 462, 464, 465, 466, 467, 468, 470, 471, 473, 474, 475, 476, 477, 478, 479, 482, 484, 485, 486, 487, 489, 490, 491, 492, 493, 494, 495, 497, 498, 499, 500, 501, 502, 503, 504, 506, 507, 508, 509, 510, 511, 513, 518, 519, 521, 523, 525, 526, 531, 532, 533, 535, 538, 539, 540, 541, 542, 544, 545, 546, 547, 548, 571, 573, 582, 593, 595, 596, 597, 598, 599, 600, 601, 603], "candel": 229, "candid": [412, 441, 492], "candl": [284, 597], "cannot": [16, 67, 84, 87, 90, 91, 95, 105, 113, 114, 125, 126, 127, 211, 301, 354, 384, 390, 400, 401, 453, 497, 501, 502, 533, 548], "cao": 57, "cap": [51, 54], "capabl": [397, 508, 523], "capsiz": 504, "captur": [387, 403], "car": [103, 106, 110, 111, 176, 207, 208, 209, 227, 251, 401, 431, 475, 497, 498, 499, 519, 521], "card": [83, 86, 88, 100, 102, 103, 106, 107, 108, 110, 111, 125, 127, 153, 154, 155, 161, 166, 169, 196, 197, 199, 203, 205, 208, 209, 499], "care": [125, 127, 314, 387, 396, 403, 412, 460, 466, 473, 499, 598], "carefulli": [413, 477, 478, 504], "carina": [33, 38], "carlo": [405, 416, 540, 597], "carri": [402, 410, 412, 414, 439, 462, 519], "carr\u00e9": 207, "cartesian": [41, 46, 197, 208, 209, 317, 319, 452, 521, 547], "case": [15, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 67, 69, 77, 83, 87, 91, 101, 102, 153, 172, 184, 195, 197, 203, 204, 207, 209, 214, 217, 219, 240, 252, 275, 277, 279, 291, 301, 307, 309, 327, 344, 382, 387, 388, 390, 392, 395, 396, 398, 399, 400, 401, 402, 403, 404, 406, 407, 408, 409, 410, 411, 413, 414, 417, 418, 420, 428, 429, 432, 435, 441, 442, 447, 453, 454, 458, 460, 461, 464, 465, 466, 467, 470, 471, 473, 477, 478, 482, 484, 486, 487, 490, 492, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 508, 510, 513, 518, 520, 521, 530, 533, 534, 535, 545, 548, 553, 554, 555, 558, 559, 564, 573, 580, 596, 598, 600], "casebattacharya1998": [29, 30, 35, 36, 39, 40, 48], "cash": [103, 106, 110, 111, 176, 296, 301, 310, 387, 399, 439, 467, 470, 473, 482, 486, 493, 498, 501, 504, 518, 519, 531, 596, 597], "cash1979": [597, 600], "cashcountsstatist": [424, 454, 598, 600], "cast": 91, "cat": [66, 67, 79, 395, 418, 446, 447, 462, 492, 502, 530, 597, 598], "catalof": 69, "catalog": [6, 45, 46, 47, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 124, 128, 227, 251, 401, 407, 427, 431, 433, 435, 439, 440, 441, 444, 445, 446, 447, 448, 450, 454, 455, 457, 459, 462, 468, 474, 493, 496, 502, 505, 508, 513, 520, 525, 560, 596, 597], "catalog_3fgl": 462, "catalog_3fhl": [462, 492], "catalog_3fhl_bright": 492, "catalog_4fgl": 492, "catalog_4fgl_roi": 492, "catalog_gammacat": [462, 492], "catalog_hgp": 492, "catalog_registri": [462, 492, 500], "catalogimageestim": 448, "catalogu": [78, 439, 446], "catch_warn": 535, "categori": [387, 398, 411, 439, 455, 500, 502, 549], "caus": [394, 401, 448, 451, 535], "cautious": 476, "caveat": [214, 308, 454, 554], "cax": 497, "cb98": 48, "cbar": 375, "cbar_kw": 381, "cbarlabel": 381, "cc": [396, 401, 403, 406, 408, 410, 413, 415], "ccube": [195, 196, 197, 199, 200, 201, 207, 208, 209, 499], "cd": [387, 388, 390, 403, 420, 421, 422], "cdelt": [207, 209], "cdelt1": 499, "cdelt2": 499, "cdf": [336, 400, 416, 477, 495], "cdot": [51, 52, 53, 54, 103, 110, 256, 271, 410, 502, 531, 553, 558, 559, 564, 567, 568, 575, 576, 578, 579, 580, 581, 587, 588, 589, 591, 599], "celesti": [499, 547, 553, 557, 602], "celfix": 560, "cell": [395, 424, 450, 474, 487, 499, 507, 508, 521], "center": [17, 18, 21, 22, 23, 24, 25, 27, 41, 83, 87, 91, 96, 103, 106, 110, 111, 113, 114, 125, 127, 129, 130, 131, 136, 153, 154, 155, 156, 157, 158, 161, 165, 166, 167, 169, 176, 179, 180, 182, 183, 184, 186, 187, 189, 190, 195, 196, 197, 198, 199, 200, 201, 204, 205, 206, 207, 208, 209, 210, 223, 224, 227, 228, 237, 240, 251, 253, 255, 264, 265, 267, 269, 275, 277, 279, 316, 320, 346, 387, 388, 401, 403, 410, 411, 429, 430, 439, 441, 454, 458, 460, 464, 466, 467, 468, 470, 471, 473, 475, 477, 478, 479, 485, 486, 487, 489, 491, 497, 498, 499, 500, 501, 502, 507, 508, 519, 521, 537, 538, 539, 540, 541, 542, 544, 545, 547, 548, 553, 554, 557], "center_coord": [194, 195, 200, 204, 207], "center_pix": [194, 195, 204, 207], "center_ski": 548, "center_skydir": [194, 195, 204, 207, 498, 499, 508, 509, 542, 544, 545], "centr": [491, 500, 523], "central": [134, 307, 309, 399, 408, 462, 521], "cern": 523, "certain": [50, 83, 87, 91, 214, 298, 386, 401, 403, 405, 411, 458, 491, 498, 499, 508, 530, 548], "certainli": 390, "certif": 413, "certifi": 413, "cfa": [214, 495], "cff": 417, "cg": 527, "ch": 53, "chain": [172, 400, 403, 416, 433, 498, 535, 545, 597], "chainer": 405, "chakraborti": [445, 446], "challeng": [394, 396, 400, 446, 471, 473, 475, 507], "chanc": 392, "chang": [16, 19, 20, 26, 84, 86, 87, 90, 91, 105, 125, 126, 127, 195, 204, 207, 221, 222, 225, 229, 231, 232, 233, 238, 242, 244, 245, 248, 252, 254, 256, 257, 258, 263, 268, 270, 271, 272, 273, 276, 280, 362, 372, 388, 390, 391, 392, 394, 395, 396, 397, 398, 399, 400, 401, 402, 404, 405, 406, 407, 409, 411, 412, 413, 417, 418, 426, 428, 429, 430, 431, 432, 433, 434, 435, 436, 439, 441, 445, 446, 447, 448, 449, 451, 456, 466, 467, 468, 475, 477, 478, 484, 489, 490, 493, 494, 495, 500, 502, 504, 507, 518, 531, 535, 542, 544, 548, 560, 569, 598], "changelog": [387, 417, 440, 448], "channel": [19, 20, 26, 386, 389, 390, 404, 447, 478, 491, 499, 510, 523], "channel0": 523, "channel1": 523, "channel_registri": [19, 20, 26], "chapter": 491, "charact": [87, 91, 387, 501], "character": [300, 411, 477], "characterist": [21, 25, 27, 51, 52, 53, 54, 140, 298, 398, 453, 490, 597], "charg": [413, 417, 573], "chat": 425, "chatti": [387, 475], "cheat": 423, "check": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 82, 83, 86, 87, 88, 91, 103, 106, 107, 110, 111, 125, 127, 153, 154, 155, 161, 166, 169, 194, 195, 196, 197, 198, 199, 200, 201, 204, 205, 206, 207, 208, 209, 218, 220, 227, 251, 267, 308, 361, 363, 390, 403, 409, 413, 417, 418, 420, 421, 422, 425, 434, 439, 447, 455, 462, 482, 489, 497, 513, 523, 535, 539, 548, 595, 598, 599], "check_limit": [217, 218, 219, 220], "check_random_st": 387, "check_tutorials_setup": [458, 460, 464, 465, 466, 467, 468, 470, 471, 473, 474, 475, 476, 477, 478, 479, 484, 485, 486, 487, 491, 492, 493, 495, 498, 499, 500, 501, 502, 504, 506, 507, 508, 509, 510, 518, 519, 521], "checker": [445, 448], "checklist": 418, "checkout": [387, 390, 417, 430, 473, 477, 502], "checksum": [83, 86, 88, 100, 102, 103, 106, 107, 108, 110, 111, 125, 127, 153, 154, 155, 161, 166, 169, 196, 197, 199, 203, 205, 208, 209, 215, 227, 251, 350, 353, 356, 454, 464, 474, 508], "chen": [147, 448], "cherenkov": [156, 400, 420, 425, 460, 464, 471, 484, 498, 507, 509, 544, 545, 597], "cherri": [387, 394, 401, 412], "chi": [297, 402, 599, 600, 601], "chi2": [102, 134, 138, 147, 307, 309, 399, 430, 464, 476, 486, 495, 531, 600], "chi2assym": 433, "child": 397, "children": [473, 482, 499, 518, 519], "chime": 390, "chisq": 297, "chisquar": 297, "chmod": 598, "choic": [139, 400, 404, 406, 413, 416, 464, 465, 467, 470, 495, 509, 518, 536, 595, 598], "choos": [45, 77, 194, 195, 198, 200, 201, 204, 207, 280, 328, 390, 399, 401, 403, 407, 416, 420, 422, 439, 462, 464, 468, 473, 475, 486, 493, 495, 498, 499, 501, 502, 503, 508, 519, 535, 598], "chose": [388, 477, 508, 509, 600, 602], "chosen": [26, 153, 166, 169, 195, 196, 197, 205, 208, 209, 227, 237, 251, 387, 402, 403, 406, 465, 485, 498, 499, 503, 504, 509, 518, 533, 543, 544, 548], "christoph": [392, 393, 394, 395, 396, 397, 398, 399, 401, 403, 404, 405, 406, 407, 427, 428, 429, 430, 431, 432, 433, 434, 440, 443, 444, 445, 446, 447, 448, 449], "chrome": [87, 91], "chromei": 441, "chunk": [155, 166, 169], "chunk_siz": [155, 166, 169], "ci": [387, 390, 394, 413, 418, 433, 439, 441, 444, 450], "circl": [83, 184, 384, 388, 401, 441, 464, 475, 486, 491, 498, 500, 503, 507, 519, 521, 532, 542, 544, 545, 548], "circle_area": 388, "circleannulusskyregion": [264, 265, 544], "circledast": 531, "circlepixelregion": 401, "circleskyregion": [103, 106, 110, 111, 178, 179, 183, 207, 228, 388, 401, 458, 460, 464, 466, 467, 471, 473, 475, 477, 478, 485, 489, 491, 493, 498, 500, 501, 519, 542, 544, 545, 548], "circular": [91, 103, 106, 183, 195, 197, 207, 398, 406, 408, 460, 466, 493, 503, 544, 548], "circumv": [19, 20, 26, 221, 222, 225, 229, 231, 232, 233, 238, 244, 245, 248, 252, 254, 256, 257, 258, 263, 268, 270, 271, 272, 273, 276, 280], "cirelli": [26, 523], "citat": 417, "cite": [390, 413], "cl": [16, 84, 90, 103, 105, 110, 126, 414], "clabel": 495, "claim": 416, "clang": 424, "clarif": 392, "clarifi": [411, 453], "class": [6, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 292, 294, 322, 323, 326, 334, 336, 361, 374, 390, 393, 396, 399, 400, 401, 402, 403, 405, 406, 407, 408, 409, 410, 415, 416, 420, 424, 427, 429, 430, 431, 432, 433, 434, 435, 436, 439, 440, 441, 443, 444, 445, 446, 447, 448, 449, 450, 452, 453, 454, 455, 458, 462, 464, 465, 466, 467, 468, 470, 471, 475, 477, 478, 482, 484, 487, 492, 493, 494, 495, 497, 498, 499, 502, 504, 507, 508, 509, 513, 518, 521, 526, 530, 531, 532, 533, 534, 535, 537, 538, 539, 540, 543, 545, 546, 547, 548, 549, 573, 582, 595, 596, 597, 598, 603], "class1": 492, "class2": 492, "classic": [396, 405, 416, 420, 429, 460, 464, 471, 475, 493, 498, 533, 535, 544, 545, 597, 600], "classifi": 509, "classmethod": [16, 19, 20, 26, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 56, 82, 83, 84, 85, 86, 87, 88, 90, 91, 92, 94, 100, 102, 103, 105, 106, 110, 111, 125, 126, 127, 150, 151, 152, 153, 154, 155, 156, 157, 158, 160, 161, 163, 164, 165, 166, 167, 168, 169, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 212, 218, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 248, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 275, 276, 277, 278, 279, 280, 281, 282, 414], "classproperti": 439, "classvar": [16, 84, 90, 105, 126], "claudio": [452, 454, 455], "claus": [387, 413], "clean": [387, 388, 390, 395, 396, 401, 403, 405, 427, 429, 430, 431, 432, 433, 434, 435, 436, 439, 446, 447, 448, 449], "cleaner": 450, "cleanup": [394, 406, 418, 427, 432, 433, 438, 439, 440, 444, 445, 447, 455], "clear": [92, 100, 203, 251, 387, 392, 394, 398, 401, 402, 406, 407, 408, 447, 476, 602], "clearer": 432, "clearli": [140, 387, 392, 393, 401, 404, 412], "cli": [11, 403, 449, 596], "click": [386, 403, 404, 424, 432, 447, 458, 460, 464, 465, 466, 467, 468, 470, 471, 473, 474, 475, 476, 477, 478, 479, 484, 485, 486, 487, 491, 492, 493, 495, 498, 499, 500, 501, 502, 504, 506, 507, 508, 509, 510, 518, 519, 521, 598], "clip": [19, 20, 26, 194, 195, 198, 200, 201, 204, 206, 207, 221, 222, 225, 229, 231, 232, 233, 238, 244, 245, 248, 252, 254, 256, 257, 258, 263, 268, 270, 271, 272, 273, 276, 279, 280, 326, 432, 433, 468], "clockwis": [228, 237, 240, 553], "clone": [390, 421, 448], "close": [150, 151, 152, 153, 156, 157, 158, 160, 163, 165, 167, 168, 195, 196, 197, 198, 199, 200, 201, 204, 205, 206, 207, 208, 209, 279, 362, 363, 364, 396, 401, 417, 442, 453, 454, 455, 495, 582], "closer": 521, "closest": [120, 124, 128, 132, 136, 194, 195, 196, 197, 199, 204, 205, 207, 208, 209, 494, 500, 533], "cloud": [418, 513], "cluster": [6, 24, 25, 96, 312, 313, 400, 416, 453, 454, 457, 496, 505, 513, 532, 535], "clutter": [473, 535], "cm": [19, 20, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 45, 51, 52, 53, 54, 67, 102, 127, 133, 136, 221, 225, 231, 233, 238, 245, 249, 256, 258, 267, 268, 271, 272, 273, 283, 372, 398, 410, 459, 460, 462, 464, 465, 466, 467, 468, 470, 473, 474, 475, 476, 477, 478, 482, 485, 486, 487, 491, 492, 494, 495, 502, 504, 507, 508, 518, 521, 528, 529, 533, 535, 552, 553, 554, 555, 557, 558, 559, 560, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 585, 586, 587, 588, 589, 590, 591, 592, 593, 597], "cm2": [51, 54, 67, 108, 127, 156, 209, 284, 372, 458, 459, 462, 464, 465, 467, 468, 473, 474, 475, 477, 478, 482, 484, 485, 486, 487, 489, 491, 492, 493, 494, 499, 501, 502, 504, 508, 518, 519, 521, 533, 548, 566, 569, 572, 577, 582], "cm3": [17, 18, 19, 21, 22, 24, 25, 27, 52, 491], "cm5": 491, "cmap": [103, 106, 110, 111, 227, 251, 377, 378, 466, 473, 491, 499, 501, 508, 509, 518, 519, 544, 603], "cmb": 573, "co": [53, 202, 412, 413, 458, 553, 554, 555], "coadd": [196, 197, 199, 205, 208, 209], "coars": 493, "coarser": [201, 206, 493], "codaci": 418, "codata": 52, "code": [19, 20, 26, 82, 83, 87, 91, 153, 221, 222, 225, 229, 231, 232, 233, 238, 244, 245, 248, 252, 254, 256, 257, 258, 263, 268, 270, 271, 272, 273, 276, 280, 382, 390, 391, 392, 394, 395, 397, 400, 401, 402, 403, 404, 405, 406, 407, 408, 410, 411, 412, 413, 414, 416, 421, 424, 427, 430, 431, 433, 434, 435, 436, 439, 441, 444, 445, 446, 447, 448, 450, 453, 455, 458, 459, 460, 462, 464, 465, 466, 467, 468, 470, 471, 473, 474, 475, 476, 477, 478, 479, 482, 484, 485, 486, 487, 489, 490, 491, 492, 493, 494, 495, 497, 498, 499, 500, 501, 502, 503, 504, 506, 507, 508, 509, 510, 513, 516, 518, 519, 521, 523, 535, 542, 549, 552, 553, 554, 555, 556, 557, 558, 559, 560, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 585, 586, 587, 588, 589, 590, 591, 592, 593, 595, 598], "codebas": [388, 404, 416, 427, 446, 448], "codemeta": 441, "codespel": 439, "codestyl": 390, "coeffici": [130, 243, 248, 563], "coerce_numbers_to_str": 105, "coerce_unit": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40], "coher": 455, "coincid": 490, "col": [87, 91, 439], "col0": [87, 91], "col1": [87, 91], "col2": [87, 91], "col_b": [87, 91], "col_c": [87, 91], "col_d": [87, 91], "col_fit_deriv": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40], "col_label": 381, "collabor": [77, 377, 378, 392, 394, 396, 400, 441, 476, 508, 597], "colleagu": [390, 416, 598], "collect": [203, 251, 387, 389, 414, 416, 418, 446, 447, 465, 493, 501, 523, 532, 536, 540, 597, 602], "collis": 50, "colnam": [87, 91, 196, 197, 199, 205, 208, 209, 508, 521], "color": [102, 110, 111, 150, 151, 209, 227, 251, 376, 377, 378, 381, 384, 388, 458, 459, 462, 464, 465, 466, 467, 468, 471, 473, 475, 476, 479, 484, 487, 491, 494, 495, 498, 501, 503, 504, 535, 544, 548, 553, 554, 573, 582, 603], "colorbar": [127, 150, 151, 153, 156, 157, 158, 163, 164, 165, 167, 209, 375, 381, 489, 495, 499], "colorblind": 535, "colorblind10": 535, "colormap": [376, 377, 378, 427, 440, 521, 596], "colormap_hess": [408, 603], "colormap_milagro": 603, "colour": 450, "column": [41, 43, 44, 46, 47, 56, 83, 87, 91, 104, 109, 125, 127, 130, 144, 150, 151, 153, 177, 196, 197, 198, 199, 200, 201, 205, 206, 208, 209, 278, 300, 312, 357, 358, 359, 360, 380, 381, 384, 385, 387, 400, 402, 411, 450, 453, 454, 458, 478, 487, 492, 499, 502, 507, 532, 535], "column_nam": 497, "column_prefix": 201, "columnclass": [87, 91], "columnspac": 384, "com": [138, 341, 342, 354, 390, 407, 417, 418, 421], "combin": [99, 102, 103, 106, 110, 111, 137, 146, 147, 148, 182, 190, 196, 197, 199, 204, 205, 208, 209, 222, 267, 387, 393, 397, 398, 399, 400, 401, 402, 407, 410, 420, 432, 447, 453, 455, 462, 467, 473, 474, 482, 486, 493, 495, 497, 498, 499, 500, 502, 509, 519, 521, 523, 525, 535, 542, 547, 565, 596, 597], "combine_flux_map": [146, 455], "combine_significance_map": 147, "combined_ev": 532, "combining_and_defin": [458, 467, 470, 473, 475, 482, 486, 507], "come": [69, 390, 393, 394, 395, 396, 397, 401, 402, 403, 404, 406, 407, 412, 414, 417, 418, 435, 436, 439, 448, 449, 453, 464, 473, 482, 502, 507, 518, 598], "comma": [71, 72, 74, 75, 76, 78, 79, 80, 492], "command": [6, 13, 94, 102, 127, 157, 163, 165, 167, 386, 387, 388, 390, 395, 396, 398, 403, 404, 418, 419, 420, 421, 422, 423, 429, 433, 444, 447, 448, 450, 477, 534, 596], "commensur": 209, "comment": [127, 387, 388, 392, 396, 400, 401, 403, 404, 406, 408, 410, 412, 413, 416], "commit": [387, 390, 395, 401, 412, 413, 417, 426, 427, 450], "committe": [392, 394, 412, 413], "commod": 413, "common": [95, 386, 387, 388, 390, 392, 393, 401, 403, 407, 408, 410, 411, 413, 421, 423, 424, 439, 441, 465, 466, 479, 492, 497, 500, 502, 518, 519, 523, 530, 533, 534, 548, 554, 598], "common_irf_head": 497, "commonli": [29, 83, 401, 405, 416, 448, 479, 523, 595, 596, 598, 600, 603], "commun": [387, 403, 409, 413, 417, 419, 425, 510], "comp": 492, "compact": [16, 84, 87, 90, 91, 105, 126], "compar": [87, 91, 128, 129, 132, 133, 150, 151, 152, 153, 156, 157, 158, 160, 163, 165, 167, 168, 195, 196, 197, 199, 204, 205, 207, 208, 209, 214, 290, 387, 401, 404, 407, 416, 436, 452, 453, 458, 459, 460, 464, 468, 473, 476, 479, 482, 485, 489, 492, 495, 498, 504, 508, 518, 530, 597, 599], "comparison": [86, 87, 91, 100, 132, 150, 151, 152, 153, 156, 157, 158, 160, 163, 165, 167, 168, 195, 196, 197, 199, 201, 204, 205, 207, 208, 209, 344, 444, 525], "compat": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 87, 91, 196, 197, 199, 208, 209, 235, 392, 394, 398, 401, 410, 412, 414, 415, 424, 427, 429, 431, 448, 454, 455, 499, 547], "compil": [390, 440], "complain": 390, "complaint": 405, "complement": 407, "complementari": [102, 137, 146, 464], "complet": [13, 16, 84, 90, 105, 124, 126, 136, 344, 387, 393, 397, 398, 399, 400, 401, 404, 405, 407, 411, 412, 413, 416, 417, 421, 426, 428, 429, 430, 431, 432, 433, 434, 435, 436, 439, 441, 444, 445, 446, 447, 448, 449, 473, 478, 495, 503, 513, 520, 535, 540], "complex": [387, 388, 393, 397, 401, 402, 403, 409, 411, 416, 424, 455, 460, 464, 475, 478, 486, 490, 493, 499, 500, 502, 503, 508, 544], "complianc": [413, 450], "compliant": [196, 197, 199, 208, 209, 454, 597], "complic": [401, 548], "compon": [15, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 67, 80, 81, 88, 103, 104, 106, 109, 110, 111, 132, 140, 168, 170, 204, 227, 251, 252, 267, 283, 398, 399, 400, 403, 409, 410, 429, 433, 435, 439, 447, 448, 459, 465, 466, 467, 470, 473, 474, 475, 476, 477, 478, 482, 484, 485, 486, 489, 492, 493, 494, 501, 502, 507, 508, 518, 519, 523, 531, 533, 535, 548, 552, 553, 554, 555, 556, 557, 558, 559, 560, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 585, 586, 587, 588, 589, 590, 591, 592, 593, 595, 597], "component_1": 398, "component_2": 398, "component_class": 492, "components_model": 80, "components_statu": 67, "compos": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 393, 413], "composit": [21, 57, 70, 80, 325, 413, 446], "compound": [204, 211, 222, 345, 349, 401, 410, 457, 459, 479, 549, 562, 583], "compoundmodel": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 441], "compoundpixelregion": 349, "compoundskymodel": 398, "compoundskyregion": [211, 345, 349], "compoundsourcemodel": 398, "compoundspectralmodel": [262, 410, 453, 459, 502, 508, 563, 565, 569, 572, 574, 577, 582], "compress": 395, "compris": 509, "compromis": [387, 392, 400, 504], "compton": [252, 435, 573], "compulsori": 502, "comput": [16, 19, 20, 23, 26, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 83, 84, 86, 88, 90, 94, 96, 100, 102, 103, 105, 106, 110, 111, 120, 122, 124, 125, 126, 127, 128, 129, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 144, 146, 147, 150, 151, 152, 153, 154, 155, 156, 157, 158, 160, 161, 163, 164, 165, 166, 167, 168, 169, 171, 182, 183, 185, 188, 189, 190, 191, 193, 195, 196, 197, 199, 201, 204, 205, 206, 207, 208, 209, 210, 214, 221, 222, 225, 227, 229, 231, 232, 233, 238, 242, 244, 245, 248, 251, 252, 254, 256, 257, 258, 263, 268, 270, 271, 272, 273, 276, 278, 280, 283, 284, 290, 291, 292, 294, 297, 298, 299, 300, 302, 306, 307, 308, 309, 313, 317, 318, 321, 387, 396, 397, 398, 399, 400, 401, 402, 405, 407, 408, 409, 410, 411, 415, 416, 418, 420, 421, 425, 427, 429, 430, 431, 432, 435, 436, 438, 439, 440, 442, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 460, 466, 468, 473, 474, 478, 479, 484, 485, 487, 490, 491, 493, 494, 498, 501, 502, 503, 504, 506, 508, 509, 510, 518, 521, 523, 531, 533, 535, 540, 544, 573, 596, 597, 598, 599, 600, 601, 602], "computation": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 214, 400, 401, 531], "compute_chisq": 446, "compute_differential_jfactor": 23, "compute_errn": [292, 294, 450, 600], "compute_errp": [292, 294, 600], "compute_flux_doubl": 140, "compute_fpp": 141, "compute_fvar": [142, 299], "compute_jfactor": [23, 491], "compute_lightcurve_doublingtim": 490, "compute_lightcurve_fpp": 490, "compute_lightcurve_fvar": 490, "compute_lima_map": 435, "compute_npr": 400, "compute_upper_limit": [292, 294], "con": [387, 403], "concaten": [83, 86, 92, 198, 201, 399, 403, 409, 453, 499], "concentr": 346, "concept": [16, 84, 90, 105, 126, 407, 408, 414, 416, 420, 422, 425, 491, 499, 513, 536], "conception": [400, 409], "conceptu": 416, "concern": [390, 392, 401, 403, 404, 406, 408, 410, 413, 439, 449, 509, 600], "conclud": 396, "concret": [16, 84, 90, 105, 126, 404, 407], "conda": [386, 390, 394, 395, 404, 407, 412, 417, 418, 420, 421, 422, 423, 424, 429, 431, 447, 448, 598], "condit": [52, 53, 149, 201, 218, 220, 227, 251, 411, 415, 436, 455, 458, 464, 467, 478, 492, 500, 501, 503, 509, 531, 540], "conduct": [450, 486], "cone": [91, 401, 465, 503, 518, 519, 535], "conesearch": 403, "conf": [87, 91, 387, 388, 418, 430, 445], "conf_1d": 484, "conf_3d": 484, "conf_max": [217, 219], "conf_min": [217, 219], "confid": [124, 214, 217, 219, 292, 294, 398, 405, 430, 435, 449, 597, 600], "confidence_opt": [214, 494], "config": [15, 16, 84, 90, 105, 126, 386, 388, 390, 393, 395, 396, 403, 404, 407, 414, 420, 422, 432, 433, 434, 439, 447, 465, 473, 518, 595, 596], "config_dict": 518, "config_joint": 473, "config_paramet": [120, 122, 123, 124, 128, 129, 131, 132, 133, 135, 136], "config_stack": 473, "config_str": 16, "configdict": [16, 84, 90, 105, 126], "configpars": 445, "configur": [11, 15, 16, 46, 84, 87, 90, 91, 101, 102, 105, 110, 111, 120, 122, 123, 124, 126, 128, 129, 131, 132, 133, 135, 136, 334, 387, 388, 390, 396, 398, 402, 403, 407, 408, 414, 417, 418, 424, 432, 434, 435, 439, 441, 450, 453, 454, 464, 466, 468, 475, 477, 478, 489, 507, 513, 520, 534, 535, 540, 597, 598], "confirm": [390, 417], "conflict": [87, 91, 387, 390, 413], "confluenc": 510, "conform": [16, 84, 90, 105, 126, 499], "confus": [387, 388, 393, 406], "connect": [397, 425, 464, 479, 482, 500, 519, 595], "consant": [196, 197, 199, 205, 208, 209], "consciou": 392, "consecut": [179, 344, 387, 412], "consensu": [392, 413], "consent": 387, "consequ": [413, 478, 513, 548], "conserv": [531, 557], "consid": [19, 20, 59, 96, 176, 183, 186, 187, 189, 190, 197, 209, 217, 221, 224, 225, 228, 229, 231, 232, 233, 234, 237, 238, 239, 240, 241, 242, 243, 244, 245, 248, 252, 255, 256, 257, 258, 259, 263, 264, 265, 266, 268, 271, 272, 273, 278, 279, 290, 383, 392, 393, 398, 399, 401, 402, 403, 404, 405, 406, 407, 409, 413, 415, 460, 464, 466, 473, 477, 478, 490, 497, 500, 532, 535, 540, 601], "consider": [403, 429, 439, 447, 473], "consist": [74, 91, 95, 125, 127, 154, 155, 166, 169, 194, 195, 196, 197, 199, 204, 207, 208, 209, 237, 240, 387, 397, 398, 400, 401, 402, 407, 414, 432, 433, 434, 435, 436, 443, 447, 448, 450, 452, 453, 454, 465, 466, 467, 468, 476, 482, 486, 495, 498, 499, 502, 504, 506, 518, 571, 573, 599], "consol": [387, 598], "consortium": [414, 507], "const": [223, 224, 225, 226, 410, 478, 502, 566], "const3d": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40], "const_norm": 410, "constant": [50, 51, 52, 53, 103, 110, 120, 156, 196, 197, 199, 205, 207, 208, 209, 223, 224, 225, 226, 228, 241, 243, 343, 400, 401, 406, 447, 457, 484, 508, 528, 531, 549, 551, 561, 562, 583, 584, 594, 597, 601], "constant_model": 585, "constantmodel": 449, "constantnormspectralmodel": 410, "constantspatialmodel": [261, 410, 502, 508, 552], "constantspectralmodel": [262, 410, 478, 502, 566], "constanttemporalmodel": [274, 410, 432, 502, 585], "constitu": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40], "constitut": 493, "constrain": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 413, 459, 470, 474, 498, 504, 542], "constraint": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 535], "construct": [16, 21, 84, 90, 105, 126, 201, 244, 245, 352, 548, 597], "constructor": [194, 195, 196, 197, 199, 201, 204, 205, 206, 207, 208, 209, 453, 519, 546], "consult": 423, "consum": [416, 495, 535], "contact": [389, 394, 396, 413, 423, 425, 428, 429, 430, 444, 447], "contain": [13, 16, 19, 20, 26, 57, 59, 63, 67, 69, 77, 82, 83, 84, 86, 87, 88, 90, 91, 92, 95, 96, 100, 102, 103, 105, 106, 109, 110, 111, 113, 114, 118, 124, 125, 126, 127, 136, 137, 138, 139, 144, 146, 147, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 160, 161, 163, 164, 165, 166, 167, 168, 169, 170, 171, 176, 178, 181, 183, 188, 191, 193, 194, 195, 196, 197, 199, 200, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 214, 218, 221, 222, 223, 224, 225, 226, 227, 228, 229, 231, 232, 233, 234, 237, 238, 239, 240, 241, 242, 243, 244, 245, 248, 249, 251, 252, 253, 254, 255, 256, 257, 258, 259, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 275, 276, 278, 279, 280, 281, 298, 312, 313, 380, 382, 384, 385, 387, 390, 391, 393, 395, 396, 397, 400, 401, 402, 403, 404, 406, 407, 408, 409, 411, 413, 416, 417, 418, 425, 429, 433, 434, 435, 436, 438, 439, 441, 442, 445, 446, 447, 448, 449, 453, 454, 455, 458, 462, 464, 465, 466, 470, 473, 474, 477, 478, 482, 484, 485, 487, 492, 493, 494, 495, 497, 498, 499, 500, 501, 502, 503, 504, 507, 508, 509, 510, 518, 519, 521, 523, 524, 526, 531, 532, 533, 535, 539, 543, 544, 547, 548, 549, 595, 597, 599, 600, 601], "containment_correct": [16, 103, 106, 183, 458, 464, 465, 466, 470, 471, 473, 475, 484, 485, 487, 489, 493, 498, 518], "containment_fract": 96, "containment_radiu": [157, 163, 165, 166, 167, 169, 458, 493, 497, 500], "containment_radius_map": [166, 169], "contains_pix": [194, 195, 204, 207], "contains_wcs_pix": 204, "contamin": [67, 471, 492, 500, 544], "content": [84, 90, 105, 126, 127, 196, 197, 199, 205, 208, 209, 350, 353, 387, 390, 392, 396, 402, 407, 414, 418, 433, 442, 447, 460, 499, 500, 507, 509, 532, 535, 546, 547], "content_typ": [16, 84, 90, 105, 126], "context": [16, 84, 87, 90, 91, 105, 126, 218, 220, 227, 251, 334, 365, 387, 402, 413, 418, 454, 499, 525], "contigu": [201, 206, 439], "continu": [201, 394, 396, 397, 400, 401, 403, 404, 406, 407, 412, 424, 427, 428, 431, 439, 444, 445, 446, 448, 464, 478, 489, 500, 547, 597], "continuous_upd": [473, 482, 499, 518, 519], "contour": [211, 214, 379, 396, 416, 449], "contour_": 495, "contourf": 209, "contract": 413, "contrari": [388, 395], "contrast": [407, 597], "contrera": 449, "contribut": [100, 116, 119, 227, 235, 251, 267, 383, 387, 389, 396, 401, 409, 411, 418, 425, 428, 439, 441, 443, 498, 536, 573, 595, 598, 599], "contributes_to_stat": 100, "contributor": [387, 390, 407, 418, 426, 437, 438], "control": [83, 87, 91, 103, 106, 110, 111, 387, 400, 419, 421, 458, 491, 499, 504, 535, 600], "controversi": [387, 392, 393, 407], "conveni": [13, 125, 386, 387, 397, 401, 409, 411, 419, 429, 431, 436, 439, 441, 446, 475, 489, 491, 492, 493, 499, 500, 501, 502, 507, 509, 521, 530, 534, 596], "convent": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 153, 195, 196, 197, 199, 207, 208, 209, 388, 409, 411, 431, 432, 435, 436, 450, 455, 493, 498, 499, 502, 531, 533, 540, 547, 600], "converg": [24, 415, 430, 451, 464, 466, 473, 489, 495, 531, 535, 542, 553], "convers": [84, 87, 90, 91, 105, 125, 126, 127, 137, 146, 392, 411, 414, 420, 422, 439, 452, 453, 454, 458, 548], "conversion_typ": [508, 521], "convert": [16, 19, 23, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 50, 83, 85, 86, 87, 91, 99, 102, 103, 106, 108, 110, 111, 125, 127, 130, 150, 151, 152, 153, 154, 155, 156, 157, 158, 160, 161, 163, 165, 166, 167, 168, 169, 179, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 213, 216, 217, 218, 219, 220, 227, 242, 251, 290, 307, 309, 311, 314, 315, 319, 332, 348, 368, 370, 371, 388, 393, 401, 402, 411, 414, 418, 440, 452, 453, 454, 455, 458, 468, 476, 485, 486, 489, 493, 494, 495, 500, 501, 507, 521, 533, 539, 544, 547, 600, 602], "convert_bytestring_to_unicod": [87, 91], "convert_unicode_to_bytestr": [87, 91], "convinc": 521, "convolut": [120, 124, 130, 136, 164, 197, 209, 386, 399, 405, 427, 434, 436, 445, 447, 448, 454, 455, 471, 499, 531, 548], "convolution_method": 197, "convolv": [106, 112, 117, 136, 164, 197, 209, 398, 427, 436, 439, 448, 467, 468, 471, 499, 541, 573], "convolve_ful": 197, "convolve_wc": 197, "cookbook": [17, 19, 20, 21, 22, 24, 25, 26, 27], "cookiecutt": 403, "coolwarm": [473, 508, 509, 519], "coord": [13, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 83, 194, 195, 196, 197, 198, 199, 200, 201, 202, 204, 205, 206, 207, 208, 209, 253, 298, 398, 432, 478, 499, 500, 544, 547, 548, 556], "coord_to_idx": [194, 195, 198, 200, 201, 204, 206, 207, 499], "coord_to_pix": [194, 195, 198, 200, 201, 204, 206, 207, 499], "coordiant": 497, "coordin": [6, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 41, 46, 47, 83, 85, 87, 88, 89, 90, 91, 94, 95, 96, 103, 104, 106, 109, 110, 111, 113, 114, 125, 127, 129, 130, 131, 140, 144, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 163, 165, 166, 167, 168, 169, 179, 189, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 204, 205, 206, 207, 208, 209, 227, 228, 237, 240, 242, 251, 253, 255, 264, 265, 267, 279, 298, 302, 308, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 326, 336, 342, 346, 347, 363, 388, 392, 393, 394, 396, 400, 401, 406, 407, 410, 412, 413, 427, 429, 432, 434, 445, 447, 448, 450, 458, 460, 464, 466, 467, 471, 475, 476, 477, 478, 479, 482, 484, 485, 486, 487, 489, 491, 493, 497, 498, 499, 500, 501, 502, 503, 506, 507, 508, 509, 519, 521, 531, 539, 544, 546, 547, 553, 554, 557, 596, 597, 602, 603], "coordsi": 434, "copi": [11, 16, 19, 20, 26, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 82, 83, 84, 86, 87, 88, 89, 90, 91, 92, 99, 100, 102, 103, 105, 106, 109, 110, 111, 120, 122, 123, 124, 125, 126, 127, 128, 129, 131, 132, 133, 135, 136, 154, 155, 158, 161, 166, 169, 194, 195, 196, 197, 198, 199, 200, 201, 202, 204, 205, 206, 207, 208, 209, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 248, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 275, 276, 277, 278, 279, 280, 281, 282, 314, 359, 387, 390, 392, 395, 397, 401, 403, 409, 416, 417, 418, 424, 439, 441, 448, 449, 450, 453, 455, 459, 460, 464, 466, 467, 473, 475, 482, 485, 486, 489, 492, 495, 498, 502, 504, 508, 535, 544, 548, 560, 598], "copy_data": [87, 91, 227, 235, 251, 267, 275, 277, 279], "copy_indic": [87, 91], "copy_ob": [82, 535], "copy_on_getitem": [87, 91], "copyright": 424, "core": [16, 53, 84, 90, 105, 126, 162, 386, 387, 394, 400, 401, 408, 412, 413, 416, 417, 425, 428, 445, 449, 453, 458, 466, 467, 470, 473, 475, 477, 479, 482, 486, 489, 501, 507, 523, 533, 598], "corner": [401, 404, 416, 458, 460, 464, 465, 466, 467, 468, 470, 471, 473, 474, 475, 476, 477, 478, 479, 484, 485, 486, 487, 491, 492, 493, 495, 498, 499, 500, 501, 502, 504, 506, 507, 508, 509, 510, 518, 519, 521], "corr_coord": [166, 169], "correct": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 67, 83, 88, 103, 104, 106, 155, 166, 169, 183, 188, 189, 202, 235, 253, 254, 279, 387, 399, 400, 412, 413, 414, 416, 417, 431, 434, 436, 437, 438, 439, 442, 445, 446, 448, 450, 451, 452, 453, 454, 455, 458, 459, 464, 465, 466, 467, 477, 482, 484, 492, 493, 495, 498, 500, 501, 502, 504, 509, 518, 521, 532, 533, 542, 556, 569, 572, 574, 577, 582], "correctli": [19, 20, 26, 77, 101, 154, 155, 161, 166, 169, 221, 222, 225, 229, 231, 232, 233, 238, 244, 245, 248, 252, 254, 256, 257, 258, 263, 268, 270, 271, 272, 273, 276, 280, 388, 390, 413, 414, 429, 431, 436, 441, 442, 451, 497, 498, 499, 500, 501, 504, 547, 554], "correl": [19, 20, 26, 124, 130, 139, 212, 221, 222, 225, 229, 231, 232, 233, 238, 244, 245, 248, 252, 254, 256, 263, 268, 270, 271, 272, 273, 276, 280, 302, 405, 410, 411, 416, 439, 449, 455, 476, 479, 495, 500, 502, 504, 518, 533, 595], "correlate_off": [124, 471], "correlation_radiu": [16, 124, 144, 145, 147, 465, 470, 471, 473, 487, 494, 509, 518, 533], "correspond": [19, 20, 26, 28, 29, 30, 31, 32, 33, 35, 36, 37, 39, 40, 45, 77, 87, 89, 91, 100, 101, 103, 106, 110, 111, 125, 127, 128, 129, 130, 132, 133, 136, 137, 146, 153, 154, 155, 161, 164, 166, 168, 169, 170, 194, 195, 196, 197, 199, 200, 201, 203, 204, 205, 206, 207, 208, 209, 211, 221, 222, 225, 229, 231, 232, 233, 237, 238, 244, 245, 248, 252, 254, 256, 257, 258, 263, 268, 270, 271, 272, 273, 276, 278, 280, 312, 380, 390, 397, 398, 399, 400, 407, 408, 411, 413, 415, 433, 436, 460, 462, 464, 465, 466, 473, 477, 478, 484, 492, 495, 498, 499, 502, 503, 504, 507, 508, 509, 518, 521, 531, 532, 533, 535, 547, 548, 559, 563, 596, 597, 602], "cosimo": [436, 439, 441, 447, 448, 450, 453], "cosmic": [52, 229, 283, 405, 507], "cosmologi": 416, "cost": 597, "coto": 447, "could": [16, 84, 90, 105, 126, 388, 390, 392, 393, 396, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 411, 413, 414, 416, 418, 460, 464, 473, 475, 492, 494, 504, 507, 508, 518, 534], "count": [16, 77, 83, 92, 100, 101, 103, 106, 107, 108, 109, 110, 111, 115, 120, 124, 125, 127, 128, 129, 131, 132, 133, 134, 135, 136, 143, 171, 173, 176, 177, 178, 183, 185, 189, 193, 196, 197, 199, 200, 201, 205, 208, 209, 218, 220, 227, 251, 292, 294, 295, 296, 301, 303, 306, 307, 309, 310, 311, 336, 372, 374, 383, 385, 393, 395, 398, 399, 400, 402, 403, 407, 411, 430, 431, 434, 436, 439, 441, 442, 448, 449, 453, 454, 458, 459, 460, 464, 465, 466, 467, 468, 470, 471, 473, 475, 477, 479, 482, 484, 485, 486, 487, 489, 493, 495, 498, 499, 500, 504, 506, 509, 516, 518, 519, 521, 533, 535, 539, 542, 543, 544, 545, 548, 596, 597, 598, 599, 601, 603], "count_bkg": 487, "count_statist": 600, "counter": [228, 237, 240, 553], "counts_3d": 499, "counts_fil": 101, "counts_imag": [479, 493], "counts_min": 149, "counts_off": [103, 106, 107, 110, 111, 171, 177, 178, 181, 385, 399, 441, 452, 453, 459, 465, 466, 467, 471, 475, 487, 493, 531, 600], "counts_on": 430, "counts_rat": 493, "counts_statist": 471, "countspredictor": 398, "countsspectrum": [399, 402, 430, 431, 433, 435, 444], "countsstatist": [292, 294, 411, 435, 436, 439, 450], "coupl": [395, 401, 406, 418, 436, 448, 499], "cours": [387, 390, 394, 397, 404, 424, 465, 473, 493, 499, 508, 518, 597, 598, 601], "cousin": [430, 436, 444, 446, 597], "cousins2007": [597, 600], "coutinho": [436, 439], "cov": [257, 258, 416, 418], "cov_matrix": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40], "covar": [212, 380, 449], "covar_list": 212, "covari": [15, 19, 20, 26, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 100, 128, 129, 132, 133, 213, 214, 215, 218, 221, 222, 223, 224, 225, 226, 227, 228, 229, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 248, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 275, 276, 277, 278, 279, 280, 281, 282, 292, 294, 380, 405, 415, 416, 435, 441, 449, 450, 453, 455, 465, 518, 600], "covariance_data": [227, 235, 251, 267, 277], "covariance_opt": 214, "covariance_result": 215, "covariance_typ": 415, "covariancegaussianprior": 415, "covariancemixin": [222, 227, 267, 455], "covarianceresult": [102, 214, 215, 460, 462, 464, 465, 466, 473, 474, 475, 487, 489, 495, 508, 518, 519], "cover": [278, 387, 389, 401, 402, 403, 411, 416, 460, 461, 484, 485, 493, 499, 513, 521, 536], "coverag": [396, 402, 418, 427, 431, 439, 445, 448, 485, 495], "coveral": [418, 427], "cowan": [134, 307, 309], "cpu": [128, 129, 132, 136, 334, 335, 400, 416], "cpython": 392, "crab": [67, 83, 110, 111, 133, 149, 214, 248, 284, 290, 395, 399, 407, 416, 427, 433, 445, 447, 464, 465, 466, 474, 475, 484, 492, 493, 494, 495, 500, 504, 506, 508, 509, 510, 518, 519, 521, 533, 544, 548, 597], "crab_10gev_100tev_dataset": 474, "crab_3fhl": 521, "crab_3fhl_spec": 521, "crab_events_pass4": 509, "crab_fp": 465, "crab_fp_tabl": 465, "crab_hess_ecpl": 284, "crab_hess_fp": [125, 127, 148], "crab_magic_lp": 466, "crab_model": 495, "crab_posit": 544, "crab_spec": 474, "crab_spectrum": 495, "crabnebula": 484, "crabspectrum": 431, "creat": [11, 13, 16, 19, 20, 26, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 70, 82, 83, 84, 86, 87, 88, 90, 91, 92, 93, 99, 101, 102, 103, 105, 106, 110, 111, 112, 113, 114, 115, 117, 118, 120, 125, 126, 127, 128, 129, 132, 136, 137, 146, 150, 151, 152, 153, 154, 155, 156, 157, 158, 160, 161, 163, 164, 165, 166, 167, 168, 169, 176, 178, 179, 180, 184, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 218, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 275, 276, 277, 278, 279, 280, 281, 282, 284, 290, 314, 324, 345, 349, 365, 374, 376, 381, 387, 388, 390, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 422, 424, 431, 432, 433, 436, 439, 441, 447, 448, 450, 451, 452, 453, 454, 455, 458, 459, 462, 465, 466, 467, 473, 475, 476, 477, 479, 482, 484, 485, 486, 487, 489, 490, 491, 492, 495, 498, 501, 502, 503, 504, 507, 508, 509, 510, 516, 518, 521, 523, 530, 531, 532, 535, 539, 542, 544, 545, 546, 547, 552, 554, 555, 556, 557, 563, 573, 582, 595, 596, 598, 603], "create_crab_spectral_model": [464, 466, 474], "create_dataset": 101, "create_fermi_isotropic_diffuse_model": [501, 508], "create_map_dataset_from_observ": [93, 109], "create_mask": [194, 195, 204, 207], "create_t": 489, "creation": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 84, 90, 105, 126, 129, 207, 396, 397, 401, 410, 413, 433, 439, 455, 490, 502, 510], "creator": [105, 126, 390, 414, 465, 470, 471, 473, 502, 518, 552, 553, 554, 555, 556, 557, 558, 559, 560, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 585, 586, 587, 588, 589, 590, 591, 592, 593], "creatormedadata": 414, "creatormetadata": [84, 90, 105, 126, 414], "credit": 424, "crimson": 466, "criteria": [15, 91, 416, 441, 498, 503, 511, 513], "criterion": [91, 134, 136, 312, 458, 535], "critic": [416, 504], "criticis": 378, "crop": [86, 194, 195, 196, 197, 199, 204, 205, 207, 208, 209], "crop_width": [194, 195, 196, 197, 199, 204, 205, 207, 208, 209], "cross": [19, 393, 407, 455, 523], "crowd": 492, "crpix": 207, "crpix1": 499, "crpix2": 499, "crucial": [414, 416, 477, 478, 493], "cruft": 418, "crux": [33, 38, 489], "crval1": 499, "crval2": 499, "cryptic": 398, "cs7": 489, "csh": 598, "csobsselect": 397, "css": [87, 91, 418, 455], "cstat": [399, 416, 433], "csv": 127, "ct": [372, 448], "cta": [82, 83, 89, 103, 106, 110, 111, 116, 119, 120, 124, 144, 145, 151, 155, 156, 157, 166, 229, 375, 380, 382, 391, 394, 395, 396, 400, 403, 406, 407, 417, 428, 429, 439, 445, 446, 447, 448, 455, 457, 458, 467, 470, 473, 475, 477, 478, 482, 486, 487, 493, 494, 497, 501, 511, 512, 513, 518, 533, 537, 597], "cta_data_analysi": [407, 457, 475, 481], "cta_dataset": 501, "cta_north": 97, "cta_sensist": 407, "cta_sensit": [457, 458, 463], "cta_simul": 428, "cta_south": [97, 458, 467, 477, 478, 482, 486], "cta_util": 448, "ctadata": 507, "ctao": [82, 155, 156, 176, 283, 387, 390, 407, 413, 417, 420, 425, 455, 457, 458, 465, 467, 470, 475, 477, 478, 487, 503, 509, 510, 511, 512, 513, 523, 535, 596], "ctapip": [390, 394, 396, 403, 404, 406, 407, 408], "ctaspectrumobserv": 448, "ctobssim": 400, "ctool": [397, 400, 403, 407, 571], "cts_sigma": 495, "ctselect": 397, "ctype1": 499, "ctype2": 499, "cube": [46, 103, 106, 136, 171, 189, 196, 197, 199, 205, 208, 209, 247, 267, 387, 398, 399, 400, 406, 407, 408, 410, 416, 420, 427, 431, 432, 435, 440, 443, 444, 445, 446, 447, 448, 461, 468, 470, 475, 479, 508, 521, 531, 540, 542, 547, 548, 597], "cubic": 499, "cumbersom": [397, 405], "cumsum": [150, 151, 152, 153, 156, 157, 158, 160, 163, 165, 167, 168, 196, 197, 199, 205, 208, 209], "cumul": [100, 150, 151, 152, 153, 156, 157, 158, 160, 163, 165, 167, 168, 196, 197, 199, 205, 208, 209, 336, 400, 416, 464, 477, 501, 535], "cunit1": 499, "cunit2": 499, "curat": [418, 428], "curl": [67, 404, 419, 420, 422, 507], "current": [11, 15, 19, 20, 26, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 83, 85, 86, 87, 88, 89, 91, 99, 100, 102, 103, 106, 110, 111, 127, 128, 132, 159, 182, 194, 195, 196, 197, 199, 205, 206, 207, 208, 209, 214, 221, 222, 223, 224, 225, 226, 227, 228, 229, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 248, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 275, 276, 277, 278, 279, 280, 281, 282, 365, 381, 387, 388, 390, 393, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 413, 414, 415, 416, 419, 420, 421, 422, 431, 449, 465, 491, 494, 497, 498, 499, 501, 507, 509, 510, 518, 519, 524, 531, 532, 533, 548, 595, 597, 598], "curv": [15, 19, 20, 22, 26, 73, 77, 83, 132, 140, 221, 222, 225, 229, 231, 232, 233, 238, 242, 244, 245, 248, 252, 254, 256, 257, 258, 263, 268, 270, 271, 272, 273, 276, 278, 280, 300, 379, 391, 398, 400, 403, 407, 411, 420, 429, 433, 435, 436, 440, 443, 444, 446, 448, 450, 453, 454, 457, 458, 461, 483, 488, 489, 490, 513, 533, 534, 544, 549, 584, 594, 596], "curve_fit": 380, "cuspi": 523, "custom": [16, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 82, 84, 89, 90, 105, 126, 131, 396, 397, 398, 403, 405, 410, 414, 419, 433, 434, 436, 448, 458, 467, 470, 473, 475, 482, 486, 493, 497, 499, 507, 535, 582, 596], "custom_model": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40], "customari": 502, "customis": [407, 497], "customprior": 504, "cut": [91, 124, 168, 182, 183, 397, 447, 453, 457, 458, 461, 463, 467, 487, 493, 498, 499, 503, 507, 513, 519, 521, 543, 544], "cutoff": [231, 232, 233, 271, 272, 273, 290, 433, 453, 457, 467, 473, 549, 562, 583], "cutout": [103, 106, 110, 111, 116, 119, 154, 155, 161, 166, 169, 172, 195, 197, 205, 207, 209, 277, 393, 399, 429, 434, 439, 445, 448, 455, 470, 471, 473, 475, 479, 493, 498, 508, 519, 521, 531], "cutout2d": [103, 106, 154, 155, 161, 166, 169, 172, 207, 209, 277, 393], "cutout_and_mask_region": [209, 453], "cutout_info": 433, "cutout_mod": 172, "cutout_slic": 207, "cutout_template_model": 455, "cutout_width": 172, "cval": [196, 197, 199, 205, 208, 209], "cwd": 395, "cwt": [407, 433, 445, 448], "cxc": [214, 407, 495], "cyan": 384, "cycl": [384, 390, 391, 392, 404, 406, 421, 446, 450], "cycler": [384, 458], "cython": [390, 430, 440], "d": [19, 20, 23, 28, 87, 89, 91, 200, 203, 206, 242, 248, 259, 278, 284, 354, 390, 405, 407, 441, 450, 462, 471, 477, 478, 486, 499, 502, 503, 540, 547, 553, 585, 586, 587, 588, 589, 590, 591, 592, 593, 598, 601], "d9w6zj4o": 489, "dai": [87, 91, 125, 127, 206, 234, 239, 241, 259, 266, 390, 401, 407, 417, 418, 499, 591, 597, 598], "daniel": [449, 452, 454, 455], "dark": [1, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 407, 415, 448, 453, 454, 457, 496, 505, 513, 524, 596], "dark_matter_spectra": 26, "darkbit": 523, "darkblu": 504, "darkgreen": 504, "darkmatt": [6, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 262, 388, 407, 448, 491, 524], "darkmatterannihilationspectralmodel": [20, 262, 450, 491, 502], "darkmatterdecayspectralmodel": [262, 454, 491, 502], "darkorang": [464, 465], "darksusi": 523, "darwin": 424, "dash": [487, 491, 504], "dashboard": 418, "dat": [26, 87, 91, 227, 251, 465, 518, 523], "data": [6, 11, 15, 16, 19, 20, 26, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 115, 118, 120, 125, 126, 127, 128, 129, 130, 131, 139, 144, 145, 150, 151, 152, 153, 154, 155, 156, 157, 158, 160, 161, 163, 164, 165, 166, 167, 168, 169, 172, 173, 176, 177, 178, 182, 189, 193, 194, 195, 196, 197, 199, 200, 201, 202, 204, 205, 206, 207, 208, 209, 212, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 275, 276, 277, 278, 279, 280, 281, 282, 295, 300, 301, 302, 304, 305, 311, 312, 313, 322, 323, 326, 344, 350, 353, 357, 358, 366, 375, 376, 377, 378, 380, 381, 386, 388, 390, 391, 394, 397, 398, 399, 400, 401, 403, 406, 407, 408, 409, 410, 411, 413, 415, 416, 417, 420, 424, 425, 427, 428, 429, 430, 431, 433, 434, 435, 436, 439, 440, 441, 442, 444, 445, 446, 447, 448, 449, 450, 453, 454, 457, 458, 462, 467, 468, 470, 471, 475, 477, 478, 482, 486, 491, 492, 494, 495, 496, 497, 500, 501, 502, 503, 504, 505, 507, 508, 510, 512, 514, 516, 520, 522, 523, 530, 531, 533, 535, 537, 538, 539, 540, 541, 542, 544, 545, 547, 548, 555, 556, 569, 572, 574, 576, 577, 582, 595, 596, 597, 600, 601, 602, 603], "data_extend": [69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80], "data_nbyt": [194, 195, 204, 207], "data_path": 509, "data_reduct": 403, "data_shap": [102, 103, 106, 110, 111, 194, 195, 204, 207, 493, 548], "data_shape_ax": [195, 204, 207], "data_shape_imag": 207, "data_spectr": [69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80], "data_stor": [82, 96, 176, 312, 313, 403, 424, 466, 475, 477, 485, 487, 489, 498, 503, 506, 507, 509, 510, 516, 519, 532, 542, 544, 545], "data_storag": 532, "data_summari": 445, "dataaxi": 430, "databas": [393, 535], "dataclass": 387, "datafram": [87, 91], "dataset": [6, 15, 16, 19, 20, 26, 94, 98, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 122, 123, 124, 125, 127, 128, 129, 132, 133, 134, 135, 136, 138, 143, 144, 145, 146, 147, 149, 154, 155, 161, 166, 169, 171, 172, 173, 176, 177, 178, 181, 182, 183, 198, 203, 214, 221, 222, 223, 224, 225, 226, 227, 228, 229, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 248, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 275, 276, 277, 278, 279, 280, 281, 282, 290, 307, 309, 334, 380, 383, 384, 388, 390, 391, 393, 395, 400, 402, 403, 404, 406, 407, 411, 415, 416, 417, 418, 420, 422, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 439, 440, 441, 442, 443, 446, 448, 449, 450, 451, 452, 453, 454, 455, 457, 459, 462, 464, 467, 468, 475, 476, 477, 479, 482, 487, 489, 491, 492, 496, 499, 502, 503, 505, 506, 507, 508, 510, 513, 516, 521, 532, 533, 535, 540, 542, 543, 544, 545, 556, 560, 563, 592, 593, 595, 596, 597, 598, 599, 600], "dataset1": [504, 531], "dataset1_prior": 504, "dataset2": [504, 531], "dataset2_prior": 504, "dataset_1": 533, "dataset_2": 533, "dataset_3fgl": 462, "dataset_3fhl": 462, "dataset_cta": 493, "dataset_empti": [460, 464, 466, 467, 475, 485, 489, 493, 498, 509, 544], "dataset_energy_depend": 476, "dataset_fak": 467, "dataset_fp": 486, "dataset_gammacat": 462, "dataset_hawc": 474, "dataset_hess": [474, 495], "dataset_imag": [475, 493], "dataset_kwarg": [93, 109], "dataset_lc": 486, "dataset_mak": [464, 466, 475, 485, 489, 498, 544], "dataset_nam": [109, 113, 114, 132, 227, 235, 251, 409, 415, 455, 473, 477, 478, 482, 493, 501, 519, 556], "dataset_on_off": [171, 177, 178, 181, 458, 464, 466, 467, 471, 475, 485, 489, 498, 544, 545], "dataset_on_off1": 458, "dataset_onoff": 399, "dataset_simul": 466, "dataset_stack": [464, 473], "datasetmodel": [216, 251, 267, 409, 436, 477, 478, 482, 489], "datasetread": [101, 107], "datasets1": 384, "datasets2": 384, "datasets3": 384, "datasets_fil": [16, 465, 470, 471, 473, 518], "datasets_hess": 474, "datasets_in_phase_bin_3": 411, "datasets_mak": 498, "datasets_nam": [19, 20, 26, 221, 222, 223, 224, 225, 226, 227, 228, 229, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 248, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 275, 276, 277, 278, 279, 280, 281, 282, 285, 435, 474, 501, 518, 556], "datasets_read": [501, 508], "datasets_sl": 493, "datasets_to_fit": 489, "datasetsconfig": 16, "datasetsmak": [174, 441, 453, 464, 498, 503, 535], "datasetsmetadata": 414, "datasetwrit": 108, "datastor": [16, 89, 96, 176, 312, 313, 393, 397, 402, 420, 424, 430, 441, 442, 444, 445, 447, 453, 454, 460, 464, 465, 466, 470, 471, 473, 475, 477, 482, 485, 487, 489, 498, 503, 506, 509, 510, 516, 518, 532, 535, 542, 544, 545, 598], "datastorecheck": 448, "datastoreindex": 397, "datastoreinmemori": 397, "datastoremak": [430, 441], "datastoremetadata": 414, "datastoreobserv": [177, 393, 397, 434, 447], "datastorexml": 397, "datasum": [83, 86, 88, 100, 102, 103, 106, 107, 108, 110, 111, 125, 127, 153, 154, 155, 161, 166, 169, 196, 197, 199, 203, 205, 208, 209], "datat": [87, 91], "date": [87, 91, 105, 126, 368, 404, 412, 413, 414, 416, 417, 425, 447, 465, 468, 470, 471, 473, 502, 510, 518, 552, 553, 554, 555, 556, 557, 558, 559, 560, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 585, 586, 587, 588, 589, 590, 591, 592, 593, 602], "datefmt": [16, 465, 470, 471, 473, 518, 598], "dateref": 468, "datetim": [105, 126, 414], "datetime64": [87, 91], "datfix": 468, "daughter": 414, "david": [397, 402, 428, 448, 449], "dc": 473, "dc1": [396, 407, 449, 477, 487, 497, 501, 507], "dc2": 396, "ddof": 490, "de": [19, 20, 26, 67, 100, 221, 222, 225, 229, 231, 232, 233, 244, 245, 248, 252, 254, 256, 257, 258, 263, 268, 270, 271, 272, 273, 276, 280, 311, 413, 417, 436, 439, 442, 491, 597], "deabsorb": 459, "deactiv": 419, "dead": [83, 86, 88, 344, 397, 416], "dead_tim": [83, 88, 344], "deadc": 397, "deadlin": [396, 400], "deadtim": [88, 90, 189, 467, 477, 482, 507], "deadtime_fract": [88, 90], "deal": [86, 387, 393, 402, 403, 467, 477, 485, 513, 520, 535], "debanjan": 430, "debian": [404, 421, 443], "debug": [11, 387, 393, 398, 403, 450, 464, 494, 499, 535, 598], "dec": [67, 83, 85, 87, 88, 91, 94, 144, 179, 387, 388, 392, 396, 398, 400, 403, 404, 407, 426, 452, 458, 464, 466, 468, 471, 475, 478, 484, 485, 487, 489, 492, 498, 500, 506, 507, 508, 509, 519, 521, 523, 535, 539, 544, 602], "dec_pnt": 510, "dec_tru": 400, "decad": [17, 18, 21, 22, 24, 25, 27, 101, 113, 114, 201, 286, 454, 477], "decai": [17, 18, 20, 21, 22, 23, 24, 25, 27, 234, 241, 259, 410, 477, 486, 490, 502, 523, 588], "decemb": 426, "decid": [387, 393, 396, 397, 398, 399, 401, 402, 406, 409, 410, 411, 417, 465, 503, 518], "decim": [87, 91, 308], "decis": [387, 388], "declar": [15, 87, 91, 267, 366, 367, 394, 395, 398, 403, 404, 410, 418, 435, 534], "decor": [366, 367, 387, 414, 598], "decorrel": [19, 20, 26, 221, 222, 225, 229, 231, 232, 233, 238, 244, 245, 248, 252, 254, 256, 257, 258, 263, 268, 270, 271, 272, 273, 276, 280], "decoupl": 69, "dedic": [390, 401, 402, 411, 413, 414, 418, 434, 435, 436, 454, 464, 465, 466, 473, 487, 495, 518, 519, 532], "deduc": [411, 454], "deep": [16, 19, 20, 26, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 84, 86, 87, 90, 91, 99, 100, 102, 103, 105, 106, 110, 111, 125, 126, 127, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 231, 232, 233, 234, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 248, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 263, 264, 265, 266, 268, 269, 270, 271, 272, 273, 275, 276, 278, 280, 281, 282, 473], "deepcopi": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 87, 91, 275, 277, 279], "def": [16, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 84, 90, 105, 126, 293, 366, 367, 387, 388, 398, 399, 400, 401, 410, 411, 414, 415, 416, 464, 473, 489, 495, 502, 504, 516, 544, 598, 600], "def_unit": [458, 467, 470, 473, 475, 482, 486, 507], "defalut": [114, 153], "default": [11, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 45, 46, 47, 65, 67, 77, 78, 80, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 96, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 113, 114, 115, 116, 118, 119, 120, 122, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 139, 140, 141, 142, 143, 144, 145, 146, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 160, 161, 163, 164, 165, 166, 167, 168, 169, 171, 172, 173, 176, 177, 179, 180, 182, 183, 184, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 248, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 286, 288, 290, 291, 292, 293, 294, 295, 299, 300, 301, 302, 307, 308, 309, 311, 312, 314, 325, 326, 327, 332, 334, 335, 341, 342, 343, 344, 346, 347, 350, 353, 355, 356, 358, 364, 369, 370, 374, 376, 377, 378, 380, 381, 383, 384, 387, 388, 393, 399, 403, 404, 410, 413, 418, 424, 430, 432, 433, 434, 436, 439, 441, 447, 448, 450, 451, 452, 453, 454, 464, 465, 466, 468, 471, 473, 477, 478, 485, 486, 492, 493, 494, 495, 497, 498, 499, 500, 501, 502, 504, 508, 513, 518, 519, 521, 531, 533, 535, 542, 545, 546, 547, 548, 553, 554, 555, 563, 569, 573, 598, 602], "default_alpha": [21, 27], "default_beta": 27, "default_css": [87, 91], "default_css_nb": [87, 91], "default_epoch": 370, "default_gamma": 27, "default_hdu_t": 82, "default_interp_kwarg": [150, 151, 152, 153, 156, 157, 158, 160, 163, 165, 167, 168, 446], "default_nam": [87, 91], "default_notebook_table_class": [87, 91], "default_obs_t": 82, "default_paramet": [19, 20, 26, 221, 222, 223, 224, 225, 226, 228, 229, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 248, 252, 253, 254, 255, 256, 257, 258, 259, 260, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 275, 276, 277, 278, 279, 280, 281, 282, 415], "default_scale_radiu": [17, 21, 22, 24, 25, 27], "default_unit": [150, 151, 156, 158, 163, 168, 497], "defer": [106, 111], "defin": [15, 16, 19, 20, 26, 28, 29, 30, 31, 32, 33, 35, 36, 37, 39, 40, 42, 43, 44, 45, 46, 47, 52, 53, 83, 84, 87, 88, 90, 91, 95, 102, 103, 104, 105, 106, 109, 110, 111, 116, 119, 124, 125, 126, 127, 128, 129, 131, 132, 136, 153, 154, 155, 157, 161, 164, 165, 166, 167, 169, 172, 173, 177, 182, 194, 195, 196, 197, 199, 200, 201, 204, 205, 206, 207, 208, 209, 214, 217, 219, 221, 222, 223, 224, 225, 226, 227, 228, 229, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 248, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 275, 276, 277, 278, 279, 280, 281, 282, 293, 295, 301, 303, 307, 309, 326, 336, 341, 342, 343, 344, 347, 377, 378, 380, 387, 388, 390, 392, 393, 396, 398, 399, 400, 401, 402, 403, 404, 408, 409, 411, 412, 413, 414, 415, 416, 419, 420, 421, 422, 429, 430, 433, 436, 439, 442, 446, 447, 452, 453, 454, 459, 465, 467, 468, 470, 471, 473, 474, 476, 479, 482, 486, 487, 489, 490, 492, 493, 494, 495, 497, 498, 499, 501, 502, 503, 504, 507, 508, 509, 513, 518, 521, 531, 532, 533, 535, 537, 540, 544, 545, 547, 553, 555, 557, 558, 559, 563, 564, 567, 568, 570, 571, 573, 575, 576, 578, 579, 580, 581, 582, 593, 595, 596, 597, 598, 599, 600, 601], "definit": [83, 84, 86, 88, 90, 100, 103, 105, 106, 110, 111, 126, 173, 204, 293, 311, 325, 387, 396, 397, 401, 408, 409, 410, 411, 414, 431, 435, 436, 452, 454, 455, 464, 466, 470, 479, 485, 497, 498, 518, 531, 533, 540, 541, 546, 548, 553, 554, 596, 600], "deform": 548, "deg": [16, 33, 34, 38, 47, 67, 83, 85, 87, 91, 94, 96, 103, 106, 110, 111, 113, 114, 115, 116, 119, 120, 124, 129, 130, 136, 144, 145, 147, 155, 157, 158, 163, 164, 165, 166, 167, 168, 169, 171, 179, 180, 182, 184, 195, 196, 197, 199, 202, 204, 205, 207, 208, 209, 227, 228, 237, 240, 251, 255, 264, 265, 267, 312, 313, 346, 382, 387, 388, 398, 401, 403, 410, 411, 414, 424, 458, 460, 464, 465, 466, 467, 468, 470, 471, 473, 474, 475, 476, 477, 478, 479, 482, 484, 485, 486, 487, 489, 491, 492, 493, 494, 497, 498, 499, 500, 501, 502, 503, 506, 507, 508, 509, 510, 518, 519, 521, 532, 533, 535, 537, 539, 542, 544, 545, 546, 547, 548, 553, 554, 555, 556, 557, 558, 559, 560, 603], "deg2": 506, "degre": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 103, 106, 110, 111, 113, 114, 115, 122, 125, 127, 138, 147, 195, 196, 197, 199, 202, 207, 208, 209, 227, 251, 255, 267, 278, 307, 309, 454, 458, 460, 465, 471, 476, 485, 489, 492, 498, 499, 500, 507, 518, 533, 547, 548, 600, 601], "deil": [392, 393, 394, 395, 396, 397, 398, 399, 401, 403, 404, 405, 406, 407, 427, 428, 429, 430, 431, 432, 433, 434, 440, 443, 444, 445, 446, 447, 448, 449], "deiml": 447, "dej2000": [492, 521], "del": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 87, 91, 398], "delai": [408, 412], "deleg": 403, "delet": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 86, 387, 398, 418, 419, 420, 422, 454, 501], "delete_interv": 86, "delimit": 127, "deliv": 403, "delta": [19, 20, 23, 87, 91, 124, 125, 130, 133, 136, 158, 206, 257, 258, 291, 307, 308, 309, 453, 459, 468, 495, 504, 533, 540, 541, 554, 555, 557, 600], "delta_t": [122, 291, 476], "deltacstat": 416, "demonstr": [403, 429, 432, 433, 434, 435, 436, 441, 453, 454, 484, 490, 496, 499, 501, 513, 547], "denot": [103, 110, 411, 531], "densiti": [17, 18, 21, 22, 24, 25, 27, 28, 30, 35, 36, 39, 40, 45, 52, 102, 127, 158, 209, 340, 343, 380, 400, 471, 473, 491, 492, 504, 523, 525, 529, 539, 540, 541, 597], "dep": 453, "depend": [11, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 83, 88, 100, 103, 104, 109, 110, 122, 125, 127, 150, 151, 152, 153, 156, 157, 158, 160, 163, 165, 166, 167, 168, 169, 183, 194, 195, 204, 207, 209, 227, 242, 251, 267, 314, 367, 387, 389, 390, 391, 393, 398, 399, 400, 401, 402, 405, 406, 411, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 426, 428, 432, 433, 436, 443, 445, 448, 449, 451, 453, 454, 455, 457, 458, 461, 463, 467, 470, 471, 480, 481, 485, 492, 495, 497, 498, 499, 500, 501, 503, 504, 507, 508, 513, 531, 535, 539, 543, 544, 547, 563], "deploy": 413, "deposit": 413, "deprec": [16, 84, 85, 90, 105, 126, 430, 439, 452, 453, 454, 455, 473, 479, 508, 560], "deprecated_argument_funct": 387, "deprecated_argument_function_kwarg": 387, "deprecated_attribut": 387, "deprecated_funct": 387, "deprecated_renamed_argu": 387, "deprecatedparseprotocol": [16, 84, 90, 105, 126], "deprecation_polici": 412, "depriv": 542, "depth": [16, 84, 90, 105, 126, 354, 420, 425, 459, 490, 563], "deriv": [17, 18, 21, 22, 24, 25, 27, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 50, 51, 54, 100, 118, 124, 128, 132, 136, 137, 146, 278, 387, 399, 400, 405, 408, 411, 468, 494, 507, 509, 533, 547, 599, 600], "descent": 416, "describ": [27, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 82, 95, 127, 128, 130, 136, 165, 205, 214, 280, 303, 307, 309, 388, 390, 392, 393, 396, 397, 399, 400, 401, 403, 404, 406, 407, 410, 411, 412, 413, 416, 425, 431, 439, 447, 448, 464, 465, 468, 477, 478, 490, 494, 495, 502, 504, 507, 509, 510, 513, 518, 531, 535, 539, 548, 549, 597, 598, 599, 600], "descript": [56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 87, 91, 124, 129, 136, 214, 388, 392, 393, 401, 407, 412, 413, 425, 450, 454, 473, 482, 492, 495, 499, 507, 509, 518, 519, 535], "description1": 388, "description2": 388, "description3": 388, "description_width": [473, 482, 499, 518, 519], "descriptionstyl": [473, 482, 499, 518, 519], "descriptor": [87, 88, 91, 103, 106, 110, 111, 277, 323, 388, 435], "design": [392, 393, 396, 397, 400, 401, 403, 407, 409, 411, 412, 416, 427, 447, 454], "desir": [16, 84, 87, 90, 91, 105, 126, 164, 194, 195, 204, 207, 293, 362, 363, 364, 499, 521, 548], "desktop": 425, "destin": 11, "detail": [19, 20, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 83, 87, 91, 100, 103, 106, 110, 111, 127, 128, 154, 155, 161, 166, 169, 172, 195, 207, 209, 214, 217, 221, 224, 225, 227, 228, 229, 231, 232, 233, 234, 237, 238, 239, 240, 241, 242, 243, 244, 245, 248, 251, 255, 256, 257, 258, 259, 263, 264, 265, 266, 268, 271, 272, 273, 277, 278, 279, 387, 388, 390, 392, 395, 396, 397, 400, 401, 402, 406, 407, 408, 412, 413, 416, 419, 423, 425, 426, 433, 437, 438, 457, 458, 459, 464, 466, 467, 468, 470, 475, 476, 477, 480, 481, 482, 486, 489, 493, 494, 495, 498, 499, 500, 501, 502, 504, 507, 509, 510, 513, 519, 521, 531, 532, 534, 540, 544, 545, 547, 595, 596, 597, 598, 602], "detect": [17, 19, 20, 21, 22, 24, 25, 26, 27, 59, 144, 145, 290, 377, 378, 388, 403, 406, 407, 409, 427, 433, 434, 435, 445, 447, 448, 454, 457, 469, 472, 492, 507, 509, 513, 596, 597, 600], "detect_t": 407, "detector": [83, 88, 104, 109, 158, 500, 509, 540, 597], "determin": [19, 20, 21, 26, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 87, 91, 113, 114, 135, 157, 163, 165, 167, 179, 180, 182, 184, 221, 222, 225, 229, 231, 232, 233, 238, 244, 245, 248, 252, 254, 256, 257, 258, 263, 268, 270, 271, 272, 273, 276, 278, 280, 314, 336, 398, 402, 405, 413, 441, 453, 454, 458, 466, 470, 471, 476, 484, 498, 500, 525, 596], "determinist": 387, "deti": [83, 104, 109, 400, 507], "detx": [83, 104, 109, 400, 507], "dev": [11, 16, 82, 387, 389, 390, 403, 413, 416, 417, 418, 455, 458, 460, 464, 465, 466, 467, 468, 470, 471, 473, 474, 475, 476, 477, 478, 479, 484, 485, 486, 487, 491, 492, 493, 495, 498, 499, 500, 501, 502, 504, 506, 507, 508, 509, 510, 518, 519, 521, 560, 563, 592, 593], "dev949": [105, 126, 425, 458, 460, 464, 465, 466, 467, 468, 470, 471, 473, 474, 475, 476, 477, 478, 479, 484, 485, 486, 487, 491, 492, 493, 495, 498, 499, 500, 501, 502, 504, 506, 507, 508, 509, 510, 518, 519, 521, 552, 553, 554, 555, 556, 557, 558, 559, 560, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 585, 586, 587, 588, 589, 590, 591, 592, 593], "develop": [388, 392, 393, 395, 396, 397, 398, 400, 401, 403, 404, 406, 407, 408, 409, 410, 412, 413, 415, 417, 418, 421, 425, 427, 440, 447, 448, 449, 507], "deviat": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 42, 128, 197, 209, 214, 236, 293, 297, 495, 504], "devoid": [464, 538], "devop": 413, "devot": [461, 513], "dex": 314, "df": [87, 91, 122, 138, 147, 307, 309, 476, 495, 600], "diagnosi": 396, "diagnost": 403, "diagon": [153, 154, 155, 405, 415, 508], "diagram": 602, "dialog": [420, 422], "diamet": [195, 196, 197, 460], "diamond": 503, "dict": [15, 16, 19, 20, 26, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 68, 69, 82, 83, 84, 86, 87, 88, 89, 90, 91, 92, 93, 96, 99, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 115, 120, 122, 125, 126, 127, 128, 129, 130, 132, 133, 136, 138, 139, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 160, 161, 163, 164, 165, 166, 167, 168, 169, 170, 171, 181, 194, 195, 196, 197, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 212, 213, 214, 216, 221, 222, 223, 224, 225, 226, 227, 228, 229, 231, 232, 233, 234, 235, 237, 238, 239, 240, 241, 242, 243, 244, 245, 248, 251, 252, 253, 254, 255, 256, 257, 258, 259, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 275, 276, 277, 278, 279, 280, 281, 285, 290, 291, 292, 293, 294, 298, 312, 326, 334, 335, 350, 353, 354, 355, 358, 368, 369, 370, 371, 374, 375, 376, 380, 381, 382, 383, 384, 387, 402, 404, 408, 411, 414, 432, 436, 439, 447, 465, 473, 484, 485, 489, 492, 495, 499, 503, 518, 519, 547, 553, 563], "dict_kei": [459, 563], "dictionari": [15, 16, 19, 20, 26, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 69, 84, 87, 88, 89, 90, 91, 92, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 115, 122, 125, 126, 127, 128, 129, 132, 133, 136, 138, 139, 146, 147, 150, 151, 152, 153, 154, 155, 156, 157, 158, 160, 161, 163, 165, 166, 167, 168, 169, 170, 171, 181, 194, 195, 196, 197, 199, 200, 202, 203, 204, 205, 207, 208, 209, 213, 214, 216, 217, 219, 221, 222, 223, 224, 225, 226, 227, 228, 229, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 275, 276, 277, 278, 279, 280, 281, 282, 290, 292, 293, 294, 298, 324, 350, 353, 354, 355, 358, 368, 371, 381, 388, 404, 406, 411, 414, 415, 464, 466, 473, 495, 497, 503, 504, 593], "dictionnari": [227, 251, 380, 416], "did": [77, 394, 401, 406, 407, 408, 410, 413, 430, 458, 467, 470, 473, 475, 482, 486, 495, 504, 507], "didn": [83, 88, 394, 397, 401, 404, 523], "diemand": 24, "diff": [102, 103, 106, 110, 111, 387, 390, 395, 399, 473, 482, 519], "diff_flux": 491, "diff_flux_point": [102, 493], "differ": [26, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 46, 59, 67, 77, 80, 86, 87, 91, 94, 100, 102, 122, 124, 125, 127, 128, 129, 132, 133, 134, 136, 144, 150, 151, 152, 153, 156, 158, 160, 163, 168, 178, 196, 197, 199, 202, 203, 204, 205, 207, 208, 209, 246, 290, 291, 292, 294, 344, 348, 362, 363, 378, 387, 388, 390, 392, 393, 395, 397, 398, 399, 400, 401, 403, 404, 405, 407, 408, 409, 410, 411, 413, 415, 416, 418, 420, 422, 431, 434, 436, 446, 449, 450, 451, 453, 455, 458, 464, 465, 466, 468, 470, 473, 476, 477, 478, 479, 484, 486, 489, 490, 492, 493, 494, 495, 496, 498, 500, 501, 502, 503, 504, 507, 508, 509, 511, 513, 518, 520, 521, 523, 531, 533, 535, 540, 547, 548, 554, 555, 596, 598, 599, 600], "different": 395, "differenti": [23, 79, 125, 127, 135, 196, 197, 199, 201, 205, 208, 209, 252, 267, 283, 284, 341, 393, 398, 405, 411, 446, 499, 502, 508, 521, 533, 597], "differential_flux": 127, "difficult": [398, 401, 418], "diffus": [68, 196, 197, 199, 205, 208, 209, 285, 387, 403, 406, 448, 449, 473, 477, 492, 499, 501, 502, 507, 595], "diffuse_cub": 502, "diffuse_galactic_fermi": 501, "diffuse_iem": [501, 508], "diffuse_iso": [501, 508], "diffuse_model": 285, "difrsp0": [508, 521], "difrsp1": [508, 521], "difrsp2": [508, 521], "difrsp3": [508, 521], "difrsp4": [508, 521], "digit": 387, "dilat": [209, 439], "dim": [163, 343, 444, 445, 475, 597], "dimens": [46, 53, 103, 106, 110, 111, 125, 127, 150, 151, 152, 153, 154, 155, 156, 157, 158, 160, 161, 163, 165, 166, 167, 168, 169, 178, 194, 195, 196, 197, 199, 200, 202, 204, 205, 207, 208, 209, 275, 276, 279, 314, 326, 380, 403, 416, 436, 447, 449, 453, 455, 495, 496, 497, 499, 502, 513, 531, 547, 548, 554], "dimension": [31, 32, 37, 68, 87, 91, 120, 194, 195, 196, 197, 199, 202, 204, 205, 207, 208, 209, 236, 237, 240, 286, 327, 340, 393, 401, 415, 420, 445, 468, 494, 495, 497, 499, 502, 521, 539, 541, 547, 548, 596, 597], "dimensionless": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 158, 272, 273, 313, 479, 502], "dimitri": [439, 441], "dipol": [51, 54], "dirac": 19, "direct": [91, 105, 168, 186, 187, 190, 192, 201, 228, 237, 240, 318, 321, 388, 393, 399, 401, 406, 408, 411, 414, 439, 457, 461, 463, 467, 498, 513, 532, 540, 541, 543, 544, 553, 596, 597], "directional_offset_bi": [458, 467], "directli": [13, 16, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 56, 69, 83, 84, 87, 90, 91, 105, 126, 137, 143, 146, 147, 168, 183, 196, 197, 199, 205, 208, 209, 275, 277, 279, 387, 389, 390, 392, 394, 395, 398, 399, 400, 401, 405, 407, 414, 416, 420, 422, 423, 427, 429, 430, 431, 433, 447, 454, 462, 464, 465, 467, 473, 474, 475, 478, 479, 482, 485, 486, 490, 492, 493, 494, 495, 497, 499, 500, 501, 502, 503, 507, 508, 518, 519, 521, 523, 531, 535, 540, 544, 547, 573, 600], "directori": [11, 82, 87, 387, 403, 465, 476, 510, 518, 521, 532, 535, 598], "dirk": [430, 444, 446], "disabl": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 439], "disadvantag": 598, "disagr": 392, "disambigu": 392, "disc": [470, 471, 473, 478], "discard": [414, 489, 492], "discard_on_copi": [87, 91], "discarded_ind": 492, "discarded_spati": 492, "discarded_t": 492, "disccus": 396, "discourag": 387, "discov": 598, "discoveri": 35, "discrep": 464, "discret": [91, 139, 302, 308, 400, 455, 495, 547], "discrete_correl": 139, "discrete_correlation_dict": 139, "discrete_correlation_err": [139, 302], "discuss": [13, 59, 280, 387, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 418, 425, 447, 504, 510, 524, 602], "disjoint": 401, "disk": [82, 111, 155, 158, 197, 207, 209, 228, 240, 242, 365, 386, 387, 397, 398, 399, 403, 410, 411, 416, 455, 457, 458, 464, 473, 474, 499, 500, 501, 502, 546, 549, 551, 555, 559, 561], "disk_inc": 401, "diskspatialmodel": [72, 261, 410, 432, 453, 501, 502, 553], "dismiss": 100, "disp": [539, 540], "dispatch": 398, "dispers": [82, 88, 101, 103, 104, 106, 108, 109, 110, 111, 112, 115, 117, 153, 154, 155, 158, 176, 182, 183, 186, 187, 190, 387, 393, 398, 399, 400, 433, 435, 445, 446, 447, 449, 458, 460, 464, 465, 473, 477, 498, 509, 510, 518, 519, 531, 540, 543, 597], "displac": 318, "displai": [11, 15, 82, 87, 91, 120, 132, 136, 214, 298, 335, 380, 384, 387, 388, 418, 420, 422, 439, 442, 453, 454, 458, 460, 464, 465, 466, 467, 468, 470, 473, 474, 475, 476, 477, 479, 482, 484, 486, 487, 492, 493, 494, 495, 499, 501, 502, 507, 508, 510, 535, 598], "display_length": [87, 91], "disrupt": [428, 429], "dissolv": 432, "dist": [337, 418], "distanc": [17, 18, 21, 22, 23, 24, 25, 27, 41, 46, 47, 129, 144, 145, 204, 252, 279, 308, 317, 343, 401, 445, 452, 466, 468, 479, 491, 492, 495, 506, 529, 544, 573], "distance_gc": [17, 18, 21, 22, 24, 25, 27, 491], "distance_max": [46, 47, 343, 492], "distance_min": [47, 343, 492], "distance_refer": 492, "distibut": [137, 146], "distinct": [402, 403, 408, 509, 601], "distinguish": [292, 294, 411, 414, 458, 499], "distort": [401, 431], "distrib": [102, 137, 146, 464], "distribut": [13, 28, 29, 30, 31, 32, 33, 35, 36, 37, 39, 40, 42, 45, 46, 83, 102, 109, 134, 137, 138, 146, 147, 158, 193, 233, 236, 245, 252, 272, 292, 294, 307, 309, 336, 337, 341, 380, 383, 385, 386, 387, 391, 392, 395, 400, 405, 406, 409, 412, 413, 417, 418, 421, 432, 441, 447, 453, 454, 458, 464, 466, 467, 471, 473, 477, 479, 482, 484, 495, 501, 504, 506, 507, 521, 523, 535, 539, 540, 542, 548, 557, 573, 596, 597, 599, 600], "divers": 411, "divid": [195, 201, 206, 408, 411, 466, 477, 503, 509, 510], "divis": 201, "djangoproject": 407, "djuvsland": 454, "dl3": [6, 16, 82, 83, 86, 88, 91, 96, 150, 151, 152, 153, 156, 157, 158, 160, 163, 165, 167, 168, 176, 182, 200, 201, 312, 313, 388, 393, 395, 396, 398, 407, 414, 420, 424, 430, 433, 435, 441, 450, 454, 460, 464, 465, 466, 470, 471, 473, 484, 485, 489, 498, 500, 503, 506, 516, 518, 519, 531, 535, 537, 538, 539, 541, 542, 544, 545, 596, 597], "dl4": [99, 102, 103, 106, 110, 111, 118, 120, 124, 128, 132, 136, 146, 147, 161, 182, 388, 393, 414, 420, 435, 486, 493, 494, 495, 535, 596, 597], "dl5": [120, 124, 128, 132, 136, 414, 454, 486, 494, 495, 596, 597], "dl6": [120, 124, 128, 132, 136, 494, 596, 597], "dm": [17, 19, 20, 21, 22, 24, 25, 26, 27, 435, 450, 491, 502], "dm_exampl": 523, "dmfitfunct": 523, "dmpipe": 523, "dmprofil": [17, 21, 22, 23, 24, 25, 27, 491, 523], "dmsky": 523, "dn": [233, 245, 272, 491, 597], "dnde": [19, 20, 26, 67, 125, 126, 127, 135, 137, 139, 140, 141, 142, 146, 221, 222, 225, 229, 231, 232, 233, 238, 244, 245, 248, 252, 254, 256, 257, 258, 263, 268, 270, 271, 272, 273, 276, 280, 283, 411, 439, 462, 464, 465, 475, 479, 492, 493, 494, 502, 508, 518, 521, 533], "dnde_cu": 284, "dnde_err": [125, 127, 137, 146, 533], "dnde_errn": [67, 125, 127, 137, 146, 492], "dnde_error": [19, 20, 26, 221, 222, 225, 229, 231, 232, 233, 238, 244, 245, 248, 252, 254, 256, 257, 258, 263, 268, 270, 271, 272, 273, 276, 280], "dnde_errp": [67, 125, 127, 137, 146, 492], "dnde_ref": [125, 127, 411], "dnde_scan_axi": [137, 146], "dnde_scan_valu": [125, 127], "dnde_ul": [67, 125, 127, 137, 146, 492, 521], "do": [13, 16, 19, 20, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 83, 84, 90, 95, 100, 105, 126, 153, 164, 217, 221, 224, 225, 228, 229, 231, 232, 233, 234, 237, 238, 239, 240, 241, 242, 243, 244, 245, 248, 255, 256, 257, 258, 259, 263, 264, 265, 266, 268, 271, 272, 273, 278, 279, 338, 380, 388, 390, 392, 393, 394, 397, 401, 402, 403, 404, 405, 406, 407, 410, 411, 414, 416, 417, 418, 420, 422, 433, 459, 462, 464, 465, 467, 468, 470, 471, 473, 475, 476, 477, 482, 485, 486, 487, 489, 491, 492, 493, 495, 498, 499, 500, 501, 502, 507, 508, 518, 519, 521, 531, 535, 542, 547, 595, 598, 601, 602], "do_someth": 387, "doc": [11, 13, 16, 83, 87, 91, 153, 195, 201, 204, 207, 214, 227, 251, 314, 351, 387, 388, 390, 392, 395, 401, 403, 404, 406, 407, 416, 417, 424, 425, 427, 433, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 458, 460, 464, 465, 466, 467, 468, 470, 471, 473, 474, 475, 476, 477, 478, 479, 482, 484, 485, 486, 487, 489, 491, 492, 493, 495, 498, 499, 500, 501, 502, 504, 506, 507, 508, 509, 510, 518, 519, 521, 548, 560, 563, 569, 586, 592, 593, 597, 598, 602], "docker": [404, 418], "dockerfil": [395, 417, 418], "docstr": [387, 407, 413, 439, 440, 441, 443, 446, 452, 453, 454, 455, 473, 502], "doctest": [164, 375, 388], "document": [11, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 50, 51, 52, 53, 54, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 120, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 163, 164, 165, 166, 167, 168, 169, 171, 172, 173, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 275, 276, 277, 278, 279, 280, 281, 282, 292, 294, 322, 326, 336, 361, 374, 387, 389, 391, 392, 394, 395, 397, 401, 403, 404, 406, 408, 410, 412, 413, 416, 418, 419, 424, 425, 426, 433, 435, 436, 439, 441, 442, 443, 445, 446, 447, 448, 449, 450, 451, 452, 453, 499, 501, 507, 509, 510, 535, 546, 547, 548, 598], "doe": [16, 84, 87, 90, 91, 105, 126, 128, 132, 139, 156, 166, 169, 203, 242, 278, 290, 387, 388, 394, 395, 397, 399, 401, 402, 404, 406, 407, 410, 411, 413, 414, 416, 430, 439, 450, 458, 459, 464, 467, 470, 473, 475, 476, 492, 495, 497, 498, 499, 500, 509, 523, 535, 544, 598], "doesn": [69, 387, 388, 392, 394, 395, 401, 404, 405, 407, 455, 507, 508, 598], "dof": 600, "doi": [138, 307, 309, 413], "domain": [196, 197, 199, 205, 208, 209, 387, 401, 490], "domenico": 445, "dominguez": [229, 230, 410, 459, 563], "dominquez": 229, "don": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 87, 91, 153, 386, 387, 390, 392, 394, 395, 404, 414, 418, 460, 464, 470, 475, 484, 500, 502, 596, 598, 601, 602], "donath": [396, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455], "done": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 87, 91, 125, 128, 154, 155, 161, 166, 169, 380, 387, 388, 390, 392, 393, 394, 398, 400, 401, 402, 403, 405, 406, 407, 410, 411, 413, 417, 420, 424, 448, 453, 460, 467, 473, 474, 478, 479, 482, 486, 487, 493, 494, 498, 499, 502, 503, 531, 535, 543, 544, 548, 582, 600, 602], "dos2unix": 387, "dot": [50, 51, 54, 110, 111, 196, 197, 199, 205, 208, 209, 453], "doubl": [27, 124, 139, 140, 298, 413, 446, 454], "doubling_dict": 298, "down": [50, 51, 54, 136, 392, 394, 397, 401, 406, 417, 431, 493, 508, 601], "downgrad": [195, 386], "download": [67, 94, 102, 127, 390, 395, 403, 404, 407, 414, 417, 419, 420, 422, 424, 428, 429, 431, 432, 439, 448, 449, 450, 458, 459, 460, 462, 464, 465, 466, 467, 468, 470, 471, 473, 474, 475, 476, 477, 478, 479, 482, 484, 485, 486, 487, 489, 490, 491, 492, 493, 494, 495, 497, 498, 499, 500, 501, 502, 503, 504, 506, 507, 508, 509, 510, 513, 516, 518, 519, 521, 549, 552, 553, 554, 555, 556, 557, 558, 559, 560, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 585, 586, 587, 588, 589, 590, 591, 592, 593, 598], "downsampl": [103, 106, 110, 111, 136, 150, 151, 152, 153, 154, 155, 156, 157, 158, 160, 161, 163, 165, 166, 167, 168, 169, 194, 195, 196, 197, 198, 199, 200, 201, 204, 205, 206, 207, 208, 209, 430, 436, 445, 455, 493, 494], "downsampled_energi": 493, "downsampling_factor": [136, 475], "downward": [292, 294], "dozen": 387, "dpp": 413, "dr": [17, 18, 21, 22, 24, 25, 27, 555], "dr1": [16, 65, 82, 83, 86, 88, 91, 96, 158, 176, 273, 312, 313, 388, 395, 407, 424, 457, 460, 464, 465, 471, 473, 485, 489, 498, 503, 506, 516, 518, 519, 532, 535, 537, 538, 539, 541, 542, 544, 545, 549, 562, 583], "dr2": [65, 273, 439, 457, 549, 562, 583], "dr3": [65, 272, 457, 502, 549, 562, 583], "dr4": [65, 454], "draft": [387, 391, 392, 415, 448], "drag": 390, "draw": [33, 197, 336, 400, 504], "drawback": [402, 406], "drawn": [336, 400, 416], "drift": [85, 94, 95, 450, 597], "drive": 403, "driven": [11, 15, 393, 403, 405, 407, 447, 513, 520, 534, 596], "drop": [52, 53, 103, 106, 110, 111, 125, 127, 132, 154, 155, 161, 166, 169, 173, 194, 195, 196, 197, 199, 200, 204, 205, 207, 208, 209, 228, 235, 277, 372, 391, 392, 403, 404, 409, 429, 432, 433, 436, 439, 446, 449, 499, 531], "ds9": [83, 195, 204, 207, 211, 227, 251, 387, 388, 401, 431, 500, 502, 548], "ds9parser": 401, "dss": 397, "dt": [87, 91], "dtime_t": 490, "dtype": [33, 38, 87, 91, 112, 117, 151, 153, 156, 194, 195, 196, 197, 199, 204, 205, 207, 208, 209, 227, 251, 314, 387, 415, 466, 470, 479, 489, 492, 493, 494, 497, 498, 499, 507, 508, 521, 533], "duck": [16, 84, 90, 105, 126], "due": [59, 87, 91, 387, 415, 416, 442, 457, 461, 463, 464, 499, 504, 507, 513, 573, 598], "dummi": [110, 111, 401, 470, 535], "dump": [16, 84, 90, 105, 126, 403], "dumps_kwarg": [16, 84, 90, 105, 126], "duplic": [87, 91, 100, 154, 387, 388, 393, 407, 408, 411, 436, 439, 455], "durat": [83, 86, 88, 94, 467, 477, 482, 485, 489, 507, 532, 535], "dure": [16, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 50, 52, 53, 83, 84, 85, 88, 90, 95, 103, 105, 106, 110, 111, 126, 173, 290, 388, 395, 399, 403, 406, 407, 409, 412, 413, 414, 415, 417, 418, 433, 436, 453, 454, 465, 466, 477, 484, 485, 489, 493, 498, 500, 504, 519, 531, 532, 597, 601], "dust": 229, "duti": 413, "dwarf": [17, 523], "dx": [33, 318], "dy": [33, 318], "dynam": [22, 384, 532], "dynesti": 416, "dz": 318, "e": [13, 16, 19, 20, 26, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 46, 47, 50, 51, 54, 59, 67, 68, 82, 83, 84, 85, 86, 87, 90, 91, 95, 105, 115, 126, 127, 128, 134, 144, 153, 154, 155, 156, 158, 182, 189, 195, 196, 197, 199, 201, 203, 205, 207, 208, 209, 214, 217, 219, 221, 222, 224, 225, 228, 229, 231, 232, 233, 234, 237, 238, 239, 240, 241, 242, 243, 244, 245, 248, 252, 254, 255, 256, 257, 258, 259, 263, 264, 265, 266, 268, 270, 271, 272, 273, 276, 278, 279, 280, 292, 294, 298, 314, 316, 320, 346, 354, 365, 376, 377, 382, 386, 387, 388, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 409, 410, 411, 412, 413, 414, 416, 417, 418, 420, 421, 422, 424, 425, 427, 428, 429, 433, 439, 440, 441, 445, 447, 448, 449, 453, 455, 457, 459, 460, 462, 464, 465, 466, 467, 471, 474, 475, 476, 477, 478, 479, 482, 484, 485, 487, 489, 490, 491, 492, 493, 495, 498, 499, 500, 501, 502, 503, 504, 506, 507, 508, 509, 511, 512, 513, 516, 518, 519, 521, 523, 530, 531, 532, 533, 535, 539, 540, 545, 546, 547, 553, 554, 555, 563, 564, 566, 567, 568, 570, 571, 575, 576, 578, 579, 580, 581, 592, 595, 597, 598, 599, 600, 601, 602, 603], "e2dnd": [19, 20, 26, 125, 126, 127, 135, 139, 140, 141, 142, 221, 222, 225, 229, 231, 232, 233, 238, 244, 245, 248, 252, 254, 256, 257, 258, 263, 268, 270, 271, 272, 273, 276, 280, 411, 439, 446, 458, 459, 462, 464, 465, 466, 474, 492, 494, 519, 521, 533, 535, 573], "e2dnde_err": [125, 127], "e2dnde_errn": [125, 127, 492], "e2dnde_errp": [125, 127, 492], "e2dnde_ref": [125, 127], "e2dnde_ul": [125, 127, 492], "e501": [19, 20, 153, 189, 200, 201, 207, 384], "e_": [19, 20, 26, 50, 52, 53, 153, 221, 222, 225, 229, 231, 232, 233, 238, 244, 245, 248, 252, 254, 256, 257, 258, 263, 268, 270, 271, 272, 273, 276, 280, 531, 537, 539, 540, 541, 564, 568, 576, 578, 579], "e_0": [231, 232, 233, 244, 245, 257, 258, 268, 271, 272, 273, 567, 568, 571, 573, 575, 578, 579, 580, 581], "e_b": 410, "e_cut": [67, 492], "e_cutoff": 573, "e_d": [257, 258], "e_edg": 436, "e_max": [67, 127, 411, 458, 464, 465, 466, 478, 484, 492, 493, 494, 495, 499, 504, 521, 533], "e_min": [67, 127, 411, 458, 464, 465, 466, 478, 484, 492, 493, 494, 495, 499, 504, 508, 521, 533], "e_peak": [233, 245, 272], "e_reco": [112, 117, 153, 158, 487, 597], "e_ref": [67, 127, 411, 458, 464, 465, 484, 492, 494, 518, 521, 533], "e_refe_mine_maxdndednde_errpdnde_errndnde_ulsqrt_tsis_ul": 462, "e_refe_mine_maxdndednde_errtssqrt_tsnprednpred_excessstatstat_nullcountssuccess": 475, "e_sn": [43, 44, 52], "e_tru": [112, 117, 158, 487, 508, 597], "each": [11, 19, 20, 26, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 67, 77, 80, 86, 87, 91, 92, 100, 103, 106, 109, 110, 111, 116, 119, 120, 122, 124, 125, 127, 128, 132, 135, 136, 138, 140, 141, 142, 144, 146, 147, 150, 151, 152, 153, 154, 155, 156, 157, 158, 160, 161, 163, 164, 165, 166, 167, 168, 169, 172, 177, 178, 193, 194, 195, 196, 197, 199, 200, 201, 203, 204, 205, 206, 207, 208, 209, 214, 221, 222, 224, 225, 227, 228, 229, 231, 232, 233, 237, 238, 240, 244, 245, 248, 251, 252, 253, 254, 256, 257, 258, 263, 264, 265, 268, 269, 270, 271, 272, 273, 275, 276, 279, 280, 302, 312, 351, 376, 385, 387, 390, 392, 393, 395, 396, 397, 399, 400, 401, 402, 403, 404, 407, 408, 411, 413, 416, 418, 419, 426, 433, 436, 447, 450, 453, 455, 460, 467, 468, 471, 473, 474, 475, 477, 478, 484, 485, 486, 487, 489, 491, 492, 493, 495, 497, 498, 499, 501, 502, 503, 504, 509, 510, 513, 519, 524, 530, 531, 532, 535, 539, 540, 541, 547, 548, 556, 573, 574, 597, 598, 601, 602], "eager": 403, "earli": [401, 406, 407, 507], "earlier": [394, 413], "earth": [41, 88, 90, 283, 508], "earth_azimuth_angl": [508, 521], "earthloc": [83, 85, 88, 90, 94, 97, 324, 414], "easi": [387, 388, 393, 398, 401, 402, 403, 406, 407, 411, 414, 433, 439, 447, 499, 500, 508, 532, 595, 596, 598, 602], "easier": [387, 393, 398, 406, 411, 447, 450, 507], "easiest": 421, "easili": [87, 91, 127, 393, 398, 399, 403, 414, 416, 420, 421, 484, 485, 495, 497, 499, 508, 521, 598], "ebel": [120, 468], "ebl": [229, 230, 280, 405, 410, 433, 436, 446, 453, 455, 457, 461, 463, 502, 513, 549, 562, 583], "ebl_data_builtin": [459, 563], "ebl_dominguez11": [230, 563], "ebl_franceschini": [230, 280], "ebl_franceschini_2017": 230, "ebl_saldana": 230, "eblabsorbtionnormspectralmodel": 410, "eblabsorptionnormspectralmodel": [262, 410, 436, 459, 502, 563], "ebltabl": 459, "ebound": [153, 201, 548], "ebreak": [221, 268, 564, 578], "ec": [487, 502, 548], "eccentr": [228, 237, 240, 553, 554, 555], "echo": 598, "eco": 413, "ecosystem": 414, "ecpl": [67, 80, 231, 232, 233, 290, 410, 445, 462, 492, 502], "ecpl_norm": 569, "ecsv": [59, 63, 127, 399], "ecut": [231, 271, 568, 579], "edelson": [139, 299, 302, 490], "edg": [103, 106, 110, 111, 120, 122, 124, 128, 131, 132, 136, 149, 150, 151, 152, 153, 154, 156, 157, 158, 160, 163, 165, 167, 168, 176, 177, 182, 193, 194, 195, 196, 197, 198, 199, 200, 201, 204, 205, 206, 207, 208, 209, 228, 380, 401, 411, 430, 436, 439, 458, 459, 464, 474, 475, 476, 477, 478, 490, 494, 497, 498, 499, 500, 508, 509, 518, 542, 553, 596], "edge_max": [194, 195, 204, 207, 553], "edge_min": [194, 195, 204, 207, 553], "edge_width": [228, 501, 553], "edgecolor": [384, 464, 466, 468, 475, 476, 479, 487, 491, 544, 553, 554, 555], "edges_max": [198, 200, 201, 206, 499], "edges_min": [198, 200, 201, 206, 499], "edisp": [16, 82, 87, 88, 96, 103, 106, 107, 110, 111, 112, 117, 153, 154, 155, 158, 162, 176, 182, 183, 186, 187, 267, 312, 313, 388, 397, 398, 399, 400, 403, 434, 436, 439, 445, 446, 447, 455, 458, 460, 464, 465, 466, 467, 468, 470, 471, 473, 475, 477, 478, 482, 485, 486, 489, 493, 498, 503, 507, 508, 509, 510, 518, 531, 539, 540, 597], "edisp2d": [155, 158, 388], "edisp2d_ax": 158, "edisp3d": 497, "edisp_": 531, "edisp_2d": [82, 87, 158, 507, 510], "edisp_3d": 497, "edisp_bin": 101, "edisp_ev": 497, "edisp_fil": 101, "edisp_kernel": [153, 493, 539], "edisp_kernel_map": [154, 509], "edisp_map": [104, 109, 154, 155, 497, 539], "edisp_new": 497, "edispkernel": [106, 112, 117, 154, 158, 186, 434, 539], "edispkernelmap": [103, 106, 107, 110, 111, 115, 155, 161, 162, 166, 169, 176, 183, 186, 435, 436, 468, 498, 508, 535, 539], "edispmap": [103, 104, 106, 109, 110, 111, 161, 162, 166, 169, 176, 183, 186, 187, 399, 400, 408, 429, 432, 433, 434, 436, 439, 497, 531, 539], "edit": [388, 390, 392, 394, 395, 396, 403, 407, 417, 418, 421, 518, 598], "editor": [388, 413, 465, 518, 598], "editori": 413, "edm": 495, "edu": [33, 38, 50, 52, 53, 58, 60, 61, 62, 83, 88, 156, 195, 204, 207, 214, 227, 248, 251, 283, 284, 407, 495, 548], "eemin": 573, "eff": [156, 537, 540, 554, 555], "eff_area": 497, "effarea": 497, "effect": [16, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 45, 46, 82, 84, 87, 88, 90, 91, 105, 106, 108, 126, 155, 156, 182, 183, 188, 190, 191, 204, 227, 251, 377, 378, 387, 392, 397, 398, 400, 401, 411, 443, 445, 464, 477, 479, 484, 490, 504, 509, 510, 513, 518, 540, 548, 554, 555, 597], "effective_area": [162, 400, 507], "effective_livetim": 498, "effective_times_src": 498, "effectivearea3d": 497, "effectiveareat": [399, 427, 439, 443], "effectiveareatable2d": [88, 155, 162, 168, 190, 393, 443, 497, 507, 537], "effici": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 106, 111, 120, 392, 398, 399, 400, 401, 402, 409, 462, 503, 540, 545, 600], "effort": [394, 396, 403, 404, 406, 407, 410, 430, 531], "eflux": [19, 20, 26, 125, 126, 127, 139, 140, 141, 142, 221, 222, 225, 229, 231, 232, 233, 238, 244, 245, 248, 252, 254, 256, 257, 258, 263, 268, 270, 271, 272, 273, 276, 280, 411, 439, 479, 502, 533], "eflux_err": [125, 127, 411], "eflux_errn": [125, 127], "eflux_errp": [125, 127], "eflux_ref": [125, 127], "eflux_ul": [125, 127], "eg": [387, 455, 459, 473, 482, 486, 489, 493, 497, 501, 502, 504], "egal": 507, "egg": 421, "einasto": [21, 523], "either": [67, 82, 83, 87, 88, 91, 95, 111, 125, 127, 158, 173, 194, 195, 196, 197, 199, 201, 202, 203, 204, 205, 207, 208, 209, 242, 293, 314, 344, 376, 388, 390, 392, 394, 401, 403, 406, 409, 413, 420, 439, 453, 465, 473, 479, 486, 493, 495, 502, 504, 518, 531, 533, 535, 546, 548, 595, 598], "ej": [50, 52, 53], "eject": 52, "ejecta": 52, "el": [26, 491], "elabor": [413, 468], "elaps": [83, 396, 597], "electron": [50, 283, 507, 573], "element": [19, 20, 26, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 87, 91, 92, 100, 103, 106, 110, 111, 125, 127, 150, 151, 152, 153, 154, 155, 156, 157, 158, 160, 161, 163, 165, 166, 167, 168, 169, 194, 195, 196, 197, 199, 200, 202, 204, 205, 207, 208, 209, 221, 222, 223, 224, 225, 226, 227, 228, 229, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 248, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 275, 276, 277, 278, 279, 280, 281, 282, 380, 405, 416, 453, 455, 492, 499, 547], "elementtre": 507, "elev": 402, "elif": [387, 401, 414], "elli": [427, 440], "ellips": [228, 401, 548, 553], "ellipseannulusskyregion": [544, 548], "ellipseskyregion": [223, 224, 228, 237, 240, 253, 255, 264, 265, 269, 275, 279, 460, 502, 544], "ellipsoid": 495, "ellipt": [548, 555], "elong": [429, 432, 433, 553, 554], "elpas": 453, "els": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 125, 127, 136, 203, 387, 390, 401, 404, 411, 414, 415, 418, 420, 422, 503, 598, 600], "elsewher": [116, 119], "email": [388, 390, 413, 418], "emax": [101, 132, 256, 284, 470, 476, 576], "emax_fit": 487, "embryon": 403, "emce": [396, 404, 429, 458, 460, 464, 465, 466, 467, 468, 470, 471, 473, 474, 475, 476, 477, 478, 479, 484, 485, 486, 487, 491, 492, 493, 495, 498, 499, 500, 501, 502, 504, 506, 507, 508, 509, 510, 518, 519, 521], "emerg": 397, "emeri": 448, "emin": [101, 132, 256, 284, 470, 476, 576], "emin_fit": 487, "emiss": [52, 68, 140, 393, 398, 402, 464, 471, 473, 474, 477, 501, 507, 508, 531, 545, 573, 595], "emit": [82, 217, 218, 219, 220, 373, 387, 429, 447, 459, 540], "emitt": 464, "emmanoulopoulo": [308, 455], "emphas": 494, "emphasi": 495, "empir": 40, "emploi": 466, "empti": [92, 100, 103, 106, 110, 111, 144, 176, 196, 197, 199, 203, 205, 208, 209, 214, 251, 373, 395, 397, 430, 442, 473, 477, 478, 482, 486, 498, 499, 509, 524, 531, 544, 545, 548], "empty_dataset": 458, "empty_i": 486, "empty_map": [103, 106, 110, 111, 476, 498, 544], "emsembl": 93, "en": [34, 83, 87, 88, 91, 128, 189, 204, 214, 280, 307, 309, 314, 407, 458, 467, 470, 473, 475, 482, 486, 495, 497, 498, 500, 507, 532, 546, 548], "enabl": [396, 399, 421, 430, 439, 448, 458, 467, 470, 473, 475, 482, 486, 507, 542], "encapsul": [207, 411, 546], "enclos": [209, 388, 460, 466, 495, 500], "enclosur": [82, 160, 455, 466, 497], "encod": [16, 84, 87, 90, 91, 105, 126], "encompass": [195, 546, 548], "encount": [16, 84, 90, 105, 126, 170, 420, 421, 422, 423, 466, 471, 477, 486, 489, 510, 586, 598], "encourag": [387, 392, 413, 417, 447], "end": [52, 53, 86, 87, 91, 92, 94, 100, 103, 110, 125, 127, 136, 201, 242, 251, 392, 394, 396, 398, 399, 401, 402, 403, 404, 406, 407, 410, 416, 440, 450, 458, 459, 460, 462, 464, 465, 466, 467, 468, 470, 471, 473, 474, 475, 476, 477, 478, 479, 482, 484, 485, 486, 487, 489, 490, 491, 492, 493, 494, 495, 497, 498, 499, 500, 501, 502, 503, 504, 506, 507, 508, 509, 510, 516, 518, 519, 521, 552, 553, 554, 555, 556, 557, 558, 559, 560, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 585, 586, 587, 588, 589, 590, 591, 592, 593, 600], "end_po": [129, 347, 479], "endswith": 387, "energet": 477, "energi": [16, 19, 20, 26, 44, 50, 51, 52, 53, 58, 62, 63, 67, 71, 74, 75, 77, 80, 82, 83, 88, 96, 100, 101, 102, 103, 104, 106, 108, 109, 110, 111, 112, 113, 114, 115, 117, 118, 120, 122, 124, 125, 127, 128, 129, 132, 135, 136, 138, 140, 141, 142, 143, 147, 148, 149, 150, 151, 153, 154, 155, 156, 157, 158, 163, 164, 165, 166, 167, 168, 169, 176, 178, 182, 183, 185, 186, 187, 189, 190, 192, 193, 194, 195, 196, 197, 199, 200, 201, 202, 204, 205, 207, 208, 209, 221, 222, 223, 224, 225, 226, 227, 228, 229, 231, 232, 233, 234, 235, 237, 238, 239, 240, 241, 242, 243, 244, 245, 248, 251, 252, 253, 254, 255, 256, 257, 258, 259, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 275, 276, 277, 278, 279, 280, 281, 284, 286, 288, 382, 383, 387, 393, 396, 398, 399, 400, 401, 402, 403, 405, 406, 409, 411, 415, 420, 424, 428, 429, 430, 431, 433, 434, 435, 436, 438, 439, 441, 444, 445, 446, 447, 448, 449, 450, 451, 453, 454, 455, 457, 459, 460, 461, 463, 464, 465, 467, 468, 470, 471, 473, 474, 475, 477, 479, 480, 481, 482, 484, 485, 486, 487, 489, 492, 493, 494, 498, 499, 509, 510, 513, 518, 519, 521, 530, 531, 532, 535, 540, 542, 543, 544, 546, 547, 548, 556, 563, 569, 572, 574, 577, 582, 593, 596, 597, 599], "energy_axes_are_align": 100, "energy_axi": [19, 20, 26, 103, 106, 110, 111, 112, 113, 114, 117, 125, 127, 153, 154, 155, 158, 166, 169, 176, 194, 195, 196, 197, 199, 200, 204, 205, 207, 208, 209, 221, 222, 225, 229, 231, 232, 233, 238, 244, 245, 248, 252, 254, 256, 257, 258, 263, 268, 270, 271, 272, 273, 276, 280, 411, 458, 460, 464, 466, 467, 468, 471, 475, 477, 478, 485, 486, 489, 493, 497, 498, 499, 502, 508, 509, 519, 539, 542, 544, 545, 547, 548], "energy_axis_new": 493, "energy_axis_tru": [103, 106, 110, 111, 112, 113, 114, 115, 117, 118, 153, 154, 155, 156, 158, 164, 166, 176, 388, 433, 458, 460, 464, 466, 467, 468, 471, 475, 477, 478, 482, 485, 486, 487, 489, 493, 497, 498, 508, 509, 519, 539, 542, 544, 545], "energy_bin": 403, "energy_bin_per_decade_max": [113, 114], "energy_bound": [19, 20, 26, 221, 222, 225, 229, 231, 232, 233, 238, 244, 245, 248, 252, 254, 256, 257, 258, 263, 268, 270, 271, 272, 273, 276, 280, 401, 439, 459, 462, 464, 466, 473, 474, 487, 491, 492, 495, 502, 508, 519, 521, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 582], "energy_cent": 277, "energy_column": 411, "energy_depend": 476, "energy_dependent_estim": [457, 476, 481], "energy_edg": [16, 120, 122, 124, 128, 129, 132, 136, 144, 145, 149, 193, 201, 334, 411, 459, 464, 465, 468, 470, 471, 473, 474, 475, 476, 479, 484, 485, 486, 487, 494, 506, 509, 518, 519, 533], "energy_estim": 509, "energy_flux": [19, 20, 26, 221, 222, 225, 229, 231, 232, 233, 238, 244, 245, 248, 252, 254, 256, 257, 258, 263, 268, 270, 271, 272, 273, 276, 280, 502, 521], "energy_flux_err": [19, 20, 26, 221, 222, 225, 229, 231, 232, 233, 238, 244, 245, 248, 252, 254, 256, 257, 258, 263, 268, 270, 271, 272, 273, 276, 280], "energy_flux_error": [19, 20, 26, 221, 222, 225, 229, 231, 232, 233, 238, 244, 245, 248, 252, 254, 256, 257, 258, 263, 268, 270, 271, 272, 273, 276, 280], "energy_index": 163, "energy_integr": 51, "energy_logspac": 406, "energy_mask": [194, 195, 204, 207, 435, 466, 473, 487, 493, 495, 500, 504], "energy_max": [19, 20, 26, 83, 100, 103, 106, 110, 111, 125, 127, 128, 129, 132, 153, 194, 195, 201, 204, 207, 221, 222, 225, 229, 231, 232, 233, 238, 244, 245, 248, 252, 254, 256, 257, 258, 263, 268, 270, 271, 272, 273, 276, 277, 280, 286, 401, 403, 473, 478, 487, 489, 491, 493, 498, 502, 521], "energy_min": [19, 20, 26, 52, 53, 83, 100, 103, 106, 110, 111, 125, 127, 128, 129, 132, 153, 194, 195, 201, 204, 207, 221, 222, 225, 229, 231, 232, 233, 238, 244, 245, 248, 252, 254, 256, 257, 258, 263, 268, 270, 271, 272, 273, 276, 277, 280, 286, 401, 403, 473, 478, 487, 489, 491, 493, 498, 502, 521], "energy_nam": [166, 169], "energy_nod": [410, 502], "energy_pow": [19, 20, 26, 127, 221, 222, 225, 229, 231, 232, 233, 238, 244, 245, 248, 252, 254, 256, 257, 258, 263, 268, 270, 271, 272, 273, 276, 280, 288, 464, 473, 487, 495, 521], "energy_rang": [66, 67, 71, 74, 75, 80, 83, 100, 103, 106, 110, 111, 439, 493, 500, 580, 581], "energy_range_fit": [103, 106, 110, 111, 493], "energy_range_saf": [103, 106, 110, 111, 493], "energy_range_tot": [103, 106, 110, 111, 500], "energy_reco": [387, 482], "energy_ref": [125, 127], "energy_resolut": 447, "energy_saf": 403, "energy_tru": [16, 96, 103, 106, 110, 111, 112, 117, 153, 154, 155, 156, 157, 158, 163, 164, 165, 166, 167, 176, 183, 186, 194, 195, 201, 204, 207, 312, 313, 387, 388, 400, 453, 458, 460, 464, 465, 466, 467, 468, 470, 471, 473, 475, 477, 478, 482, 484, 485, 486, 487, 489, 493, 497, 498, 499, 500, 502, 503, 507, 508, 509, 518, 519, 539, 540, 542, 544, 545, 547, 548], "energy_true_axi": 153, "energyaxesconfig": 16, "energyaxisconfig": 16, "energybound": 431, "energydependentmorphologi": 476, "energydependentmorphologyestim": [454, 476], "energydependentmultigausspsf": [162, 427, 497, 507, 541], "energydependenttablepsf": [393, 408, 428, 439], "energydispers": [153, 154, 155, 158, 399, 434, 444, 447, 448], "energydispersion2d": [88, 153, 155, 162, 168, 186, 187, 388, 393, 439, 441, 446, 497, 507, 539], "energydispersion3d": 497, "energyoffsetarrai": 444, "energyrangeconfig": 16, "enforc": [16, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 84, 90, 105, 126, 390, 414], "engin": [87, 91], "english": 535, "enhanc": [392, 396, 424], "enlarg": 545, "enough": [400, 402, 403, 416, 464, 467, 471, 482, 484, 500, 542], "enrico": 403, "enrico_config": 403, "enrico_xml": 403, "enriqu": [395, 403, 407, 428, 429, 430, 431, 432, 433, 434, 435, 436, 439, 441, 447, 448, 449], "ensembl": [93, 416], "ensur": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 182, 202, 290, 387, 393, 398, 399, 410, 414, 421, 441, 455, 458, 464, 485, 494, 500, 542, 547, 557], "enter": [218, 220, 227, 251, 424], "entir": [16, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 84, 87, 90, 91, 103, 105, 106, 110, 111, 126, 183, 416, 460, 473, 476, 490], "entri": [43, 44, 87, 91, 94, 122, 125, 128, 129, 132, 133, 136, 138, 139, 146, 147, 214, 215, 227, 251, 290, 354, 387, 388, 399, 407, 411, 414, 417, 439, 450, 455, 460, 465, 492, 495, 499, 502, 503, 535, 536, 548], "entry_point": 440, "enum": [95, 159, 329, 330], "enumer": [416, 464, 477, 492, 495, 501, 504], "env": [390, 404, 417, 419, 420, 422, 423, 448, 598], "envelop": [400, 495, 519], "environ": [11, 82, 352, 386, 387, 390, 394, 395, 399, 404, 407, 417, 418, 420, 421, 422, 423, 424, 428, 429, 431, 447, 448, 455, 458, 460, 464, 465, 466, 467, 468, 470, 471, 473, 474, 475, 476, 477, 478, 479, 484, 485, 486, 487, 491, 492, 493, 495, 498, 499, 500, 501, 502, 504, 506, 507, 508, 509, 510, 518, 519, 521, 598], "envis": 396, "envvar": 11, "eolnvsgd": 489, "eosc": 413, "episod": 140, "epjc": [307, 309], "epoch": 370, "epsilon": [19, 20, 26, 221, 222, 225, 229, 231, 232, 233, 238, 244, 245, 248, 252, 254, 256, 257, 258, 263, 268, 270, 271, 272, 273, 276, 280], "epsilon_": [103, 110, 531], "epsilon_k": [103, 110, 531], "epsmch": 495, "eq": [102, 272], "eqcon": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40], "eqnarrai": 410, "equal": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 52, 120, 124, 128, 132, 136, 153, 201, 307, 309, 387, 397, 400, 449, 464, 484, 485, 500, 504, 531, 547, 601], "equat": [27, 272, 273, 299, 388, 558, 559, 564, 567, 568, 570, 571, 575, 576, 578, 579, 580, 581, 600, 601], "equatori": [95, 159, 195, 196, 197, 199, 202, 204, 207, 208, 209, 497], "equival": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 87, 91, 125, 150, 151, 152, 153, 156, 157, 158, 160, 163, 165, 167, 168, 194, 195, 196, 197, 199, 201, 204, 205, 207, 208, 209, 246, 380, 388, 399, 400, 401, 410, 411, 453, 454, 464, 492, 498, 499, 500, 502, 507, 518, 531, 533, 535, 546, 547, 548, 598, 599, 600], "er": [26, 491], "era": 229, "ereco": [153, 497], "erf": [238, 553], "erg": [52, 53, 67, 458, 464, 492, 521, 528, 535], "erlangen": 406, "erod": 209, "eros": [207, 209], "err": 495, "err4pfqd": 489, "errat": 387, "errlo": 416, "errn": [124, 128, 132, 133, 136, 214, 450, 600], "errn_2sigma": 600, "error": [11, 16, 19, 20, 26, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 67, 68, 79, 84, 86, 90, 102, 103, 105, 106, 110, 111, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 136, 137, 139, 140, 141, 142, 146, 172, 198, 201, 206, 217, 219, 221, 222, 223, 224, 225, 228, 229, 231, 232, 233, 234, 237, 238, 239, 240, 241, 242, 243, 244, 245, 248, 252, 253, 254, 255, 256, 257, 258, 259, 263, 264, 265, 266, 268, 269, 270, 271, 272, 273, 275, 276, 278, 279, 280, 292, 294, 298, 299, 300, 302, 308, 365, 387, 388, 401, 402, 403, 405, 410, 411, 414, 415, 416, 429, 433, 435, 437, 439, 440, 442, 446, 447, 450, 452, 453, 454, 455, 459, 460, 462, 464, 465, 467, 468, 470, 473, 474, 475, 476, 478, 482, 484, 486, 487, 489, 490, 492, 494, 502, 503, 504, 507, 518, 519, 521, 523, 531, 533, 535, 554, 573, 582, 595, 598], "error_callback": 172, "errorbar": [83, 102, 103, 106, 110, 111, 201, 205, 226, 234, 239, 241, 242, 243, 259, 266, 278, 281, 458, 489, 504], "errp": [124, 128, 132, 133, 136, 214, 450, 600], "errp_2sigma": 600, "errup": 416, "escap": [387, 413, 416], "especi": [87, 91, 140, 390, 394, 397, 401, 407, 408, 418, 439, 445, 460, 475, 485, 492, 499, 504, 507, 508], "ess": 416, "essenti": [397, 399, 402, 433, 434, 435, 479, 499], "establish": [387, 400], "estim": [6, 19, 20, 26, 50, 72, 102, 106, 111, 113, 114, 120, 121, 122, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 171, 177, 178, 179, 185, 194, 195, 204, 207, 209, 214, 217, 221, 222, 224, 225, 228, 229, 231, 232, 233, 234, 237, 238, 239, 240, 241, 242, 243, 244, 245, 248, 252, 253, 254, 255, 256, 257, 258, 259, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 275, 276, 278, 279, 280, 290, 297, 300, 305, 334, 380, 391, 393, 396, 400, 401, 402, 403, 406, 409, 415, 420, 429, 430, 433, 434, 435, 436, 439, 440, 441, 445, 446, 447, 448, 450, 453, 454, 455, 457, 458, 459, 464, 466, 471, 473, 474, 475, 478, 480, 481, 483, 485, 486, 487, 488, 493, 495, 496, 500, 504, 505, 509, 513, 518, 519, 531, 535, 545, 595, 596, 597, 599, 601], "estimate_best_fit": [128, 129, 132, 133], "estimate_count": [128, 129, 132, 133], "estimate_energy_depend": 122, "estimate_errn_errp": [128, 129, 132, 133], "estimate_excess_map": 124, "estimate_exposure_reco_energi": 124, "estimate_fit_input_map": 136, "estimate_flux_default": 136, "estimate_flux_map": 136, "estimate_flux_point": [128, 129, 132], "estimate_kernel": [124, 136], "estimate_map": 120, "estimate_mask_default": [124, 136], "estimate_min_e2dnd": 135, "estimate_min_excess": 135, "estimate_npr": [128, 129, 132, 133], "estimate_npred_excess": [128, 129, 132], "estimate_pad_width": 136, "estimate_scan": [128, 129, 132, 133], "estimate_sensit": [128, 129, 132, 133], "estimate_t": [128, 129, 132, 133], "estimate_time_bin_flux": 132, "estimate_ul": [128, 129, 132, 133], "estimator_result": [138, 146, 147, 487], "et": [17, 19, 20, 21, 22, 24, 25, 26, 27, 28, 33, 35, 39, 40, 57, 59, 63, 102, 120, 134, 139, 140, 156, 229, 299, 300, 302, 307, 308, 309, 388, 397, 416, 455, 468, 476, 490, 523, 597], "eta": [240, 241, 264, 555, 559, 588], "eta_": 50, "eta_b": 50, "eta_rang": [555, 559], "etc": [106, 111, 125, 387, 392, 393, 397, 398, 399, 402, 403, 407, 408, 411, 413, 414, 416, 436, 465, 467, 473, 482, 484, 486, 487, 489, 493, 499, 502, 504, 508, 518, 531, 544, 597], "etru": 497, "eu": 407, "euclidean": 312, "europ": 413, "european": [307, 309], "ev": [494, 497, 535, 573], "ev2": 497, "evalu": [17, 18, 19, 20, 21, 22, 24, 25, 26, 27, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 68, 87, 91, 103, 106, 109, 110, 111, 150, 151, 152, 153, 156, 157, 158, 160, 163, 165, 167, 168, 176, 183, 189, 193, 204, 215, 216, 221, 222, 223, 224, 225, 226, 227, 228, 229, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 248, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 275, 276, 277, 278, 279, 280, 281, 282, 327, 387, 392, 396, 402, 405, 406, 409, 410, 411, 415, 428, 429, 430, 432, 435, 439, 444, 445, 447, 448, 449, 450, 451, 452, 453, 454, 455, 477, 478, 487, 497, 502, 504, 507, 508, 531, 554, 555, 563, 597, 600], "evaluate_contain": [157, 165, 167, 441], "evaluate_direct": [157, 165, 167], "evaluate_energy_flux": [257, 258], "evaluate_error": [19, 20, 26, 127, 221, 222, 225, 229, 231, 232, 233, 238, 244, 245, 248, 252, 254, 256, 257, 258, 263, 268, 270, 271, 272, 273, 276, 280, 405], "evaluate_geom": [223, 224, 228, 235, 237, 240, 253, 255, 264, 265, 267, 269, 275, 279, 454, 502, 555], "evaluate_integr": [256, 257, 258], "evaluate_paramet": [157, 165, 167], "evaluation_bin_size_min": [223, 224, 228, 237, 240, 253, 255, 264, 265, 267, 269, 275, 279], "evaluation_radiu": [223, 224, 228, 237, 240, 253, 255, 264, 265, 267, 269, 275, 277, 279, 398, 399, 410, 502], "evaluation_region": [223, 224, 228, 237, 240, 253, 255, 264, 265, 267, 269, 275, 279], "even": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 87, 91, 137, 146, 207, 218, 220, 387, 390, 392, 394, 395, 401, 404, 405, 413, 414, 416, 431, 484, 487, 494, 495, 498, 499, 500, 501, 502, 518, 531, 533, 558, 559, 598], "event": [82, 83, 84, 85, 86, 87, 88, 89, 90, 93, 104, 105, 109, 115, 124, 135, 155, 166, 169, 170, 177, 185, 196, 197, 199, 205, 208, 209, 226, 234, 239, 241, 242, 243, 259, 266, 278, 281, 344, 387, 388, 391, 393, 397, 399, 401, 402, 403, 414, 420, 424, 431, 432, 433, 435, 439, 440, 441, 446, 447, 448, 449, 450, 453, 454, 455, 457, 460, 464, 465, 466, 471, 473, 474, 480, 481, 486, 498, 506, 509, 510, 511, 513, 516, 518, 519, 520, 535, 543, 544, 545, 596, 597, 600, 603], "event_3fhl": 521, "event_class": [84, 508, 521], "event_det_coord": [104, 109], "event_fil": 88, "event_filt": 89, "event_filter_typ": 89, "event_id": [400, 507, 508, 521, 532], "event_list": [83, 387, 388, 400], "event_list_id": 83, "event_list_meta": [104, 109, 434], "event_list_zd": 83, "event_sampl": [457, 477, 481], "event_sampling_nrg_depend_model": [457, 478, 481], "event_typ": [105, 508, 521], "eventlist": [84, 88, 104, 109, 185, 196, 197, 199, 205, 208, 209, 387, 388, 393, 400, 401, 402, 414, 424, 429, 436, 441, 443, 444, 445, 447, 448, 477, 478, 487, 499, 507, 508, 521, 532, 535, 544, 603], "eventlistbas": 89, "eventlistdataset": 448, "eventlistmetadata": [83, 414], "events2": 83, "events_": 477, "events_0001": 477, "events_1": 532, "events_2": 532, "events_3fhl": 521, "events_bkg": 400, "events_gc_3fhl": 521, "events_list": 400, "events_path": [82, 477], "events_src": 400, "events_tot": 400, "events_vela": 487, "eventu": [387, 392, 403, 406, 407, 424, 502], "ever": [416, 601], "everi": [195, 197, 209, 279, 387, 390, 395, 396, 397, 399, 403, 412, 414, 418, 460, 464, 499, 519, 598], "everyon": 392, "everyth": [387, 405, 406, 535], "everywher": [387, 401, 406, 407, 428], "evid": [140, 492], "evolut": [30, 31, 32, 50, 52, 53, 229, 393, 407, 457, 480, 481, 513, 528, 529, 549], "evolv": [28, 29, 30, 35, 36, 39, 40, 50, 52, 53, 229, 404, 407, 414, 416, 478, 497], "evt_sampl": 477, "ex": [11, 499, 501, 502], "exact": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 83, 91, 405, 485, 499, 508], "exactli": [120, 124, 128, 132, 136, 201, 382, 416, 464, 466, 485, 487, 500, 504, 508, 531, 548], "exagger": 378, "examin": [413, 539], "exampl": [11, 19, 20, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 66, 67, 80, 82, 83, 85, 86, 87, 88, 89, 91, 94, 96, 99, 102, 103, 106, 110, 111, 112, 116, 117, 119, 120, 122, 124, 125, 127, 129, 131, 132, 133, 135, 136, 140, 144, 145, 146, 147, 148, 149, 151, 153, 155, 156, 157, 158, 164, 166, 169, 176, 179, 181, 194, 195, 196, 197, 198, 199, 200, 201, 202, 204, 205, 206, 207, 208, 209, 214, 218, 220, 227, 242, 249, 251, 280, 284, 290, 293, 312, 313, 334, 338, 344, 354, 366, 367, 372, 375, 377, 378, 380, 382, 384, 387, 388, 390, 392, 395, 397, 398, 399, 400, 401, 402, 403, 404, 405, 407, 410, 413, 414, 415, 416, 420, 421, 422, 424, 428, 430, 433, 436, 439, 440, 441, 444, 446, 447, 448, 454, 455, 457, 458, 459, 460, 462, 463, 464, 465, 466, 467, 468, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 481, 482, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 497, 498, 499, 500, 501, 502, 503, 505, 506, 507, 508, 509, 510, 512, 513, 514, 515, 516, 517, 518, 519, 521, 522, 523, 525, 526, 532, 535, 537, 538, 539, 541, 546, 548, 549, 550, 561, 583, 592, 593, 594, 595, 598, 600, 602, 603], "example_cub": 499, "example_cube_fgst": 499, "exce": [113, 114], "except": [67, 69, 80, 87, 91, 103, 106, 110, 111, 172, 196, 197, 199, 205, 208, 209, 314, 384, 387, 398, 402, 406, 497, 501, 548], "excerpt": 510, "excess": [15, 67, 72, 103, 106, 110, 111, 121, 124, 125, 127, 128, 129, 132, 135, 136, 138, 141, 142, 146, 147, 176, 227, 251, 292, 294, 299, 300, 385, 399, 402, 435, 436, 442, 447, 454, 455, 458, 459, 464, 465, 467, 468, 470, 473, 475, 479, 482, 486, 487, 492, 493, 494, 498, 500, 501, 506, 509, 518, 519, 533, 535], "excess_estim": 509, "excess_estimator_integr": 509, "excess_integr": 509, "excess_map": [16, 465, 470, 471, 473, 518], "excess_map_estim": 487, "excess_matching_signific": [438, 448], "excess_min": 149, "excess_r": 493, "excessestim": 411, "excessmapconfig": 16, "excessmapestim": [121, 144, 145, 146, 147, 411, 435, 436, 437, 439, 442, 452, 454, 455, 471, 473, 487, 494, 500, 509, 533], "excesspointsestim": 411, "excessprofileestim": [411, 436], "exchang": 401, "exclud": [16, 84, 90, 102, 103, 105, 106, 110, 111, 126, 131, 177, 179, 218, 220, 227, 251, 393, 451, 473, 498, 500, 544, 545], "exclude_default": [16, 84, 90, 105, 126], "exclude_non": [16, 84, 90, 105, 126], "exclude_unset": [16, 84, 90, 105, 126], "exclus": [16, 83, 171, 173, 178, 179, 180, 181, 184, 195, 207, 393, 401, 403, 435, 437, 455, 460, 470, 473, 498, 542, 544], "exclusion_mask": [171, 173, 178, 179, 180, 181, 184, 464, 471, 475, 498, 500, 519, 542, 544, 545], "exclusion_mask_2d": 498, "exclusion_mask_crab": [465, 518], "exclusion_radiu": 500, "exclusion_region": 464, "exclusionmask": 445, "execut": [11, 124, 128, 132, 133, 136, 387, 388, 390, 392, 394, 395, 396, 402, 403, 407, 418, 419, 420, 421, 422, 423, 424, 433, 441, 447, 457, 463, 472, 481, 488, 498, 499, 505, 508, 512, 513, 515, 517, 521, 522, 550, 561, 583, 594, 596], "exercis": [390, 403, 407, 413], "exhibit": 476, "exist": [11, 15, 16, 26, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 87, 88, 91, 99, 100, 102, 103, 106, 108, 110, 111, 125, 127, 154, 155, 161, 166, 169, 181, 194, 195, 196, 197, 199, 200, 203, 204, 205, 207, 208, 209, 215, 227, 242, 251, 275, 276, 277, 279, 356, 371, 387, 390, 392, 395, 396, 398, 399, 400, 401, 403, 404, 406, 407, 408, 410, 411, 413, 414, 416, 420, 421, 424, 425, 428, 432, 433, 447, 448, 450, 453, 468, 471, 493, 499, 500, 502, 503, 508, 532, 547, 548, 599], "exist_ok": [464, 465, 473, 474, 477, 518, 519], "exit": [11, 15, 87, 91, 218, 220, 227, 251, 429, 560, 598], "exot": 404, "exp": [21, 28, 29, 30, 31, 32, 35, 36, 39, 40, 156, 234, 238, 245, 257, 258, 271, 388, 410, 486, 502, 554, 555, 563, 567, 568, 569, 570, 579, 580, 581, 586, 587, 588, 601], "expand": [132, 352, 397, 439], "expand_map": 132, "expans": [50, 52, 53], "expcutoffpowerlaw": 569, "expcutoffpowerlaw3fglspectralmodel": [262, 410, 462, 502, 568], "expcutoffpowerlawnormspectralmodel": [233, 262, 454, 502, 569], "expcutoffpowerlawspectralmodel": [19, 20, 26, 80, 221, 222, 225, 229, 231, 232, 238, 244, 245, 248, 252, 254, 256, 257, 258, 262, 263, 268, 270, 271, 272, 273, 276, 280, 410, 462, 464, 473, 502, 567, 573], "expdecai": [234, 457, 549, 584, 594], "expdecay_model": [477, 586], "expdecaytemporalmodel": [274, 410, 435, 439, 477, 486, 502, 586], "expect": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 106, 109, 111, 125, 181, 186, 187, 192, 207, 292, 293, 294, 295, 297, 301, 311, 344, 387, 392, 400, 402, 403, 404, 407, 412, 414, 458, 460, 466, 467, 468, 471, 477, 478, 484, 490, 491, 495, 499, 500, 504, 508, 510, 531, 533, 596, 599, 600, 601], "expected_ts_0": 603, "expens": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 464, 478], "experi": [387, 390, 392, 396, 398, 402, 415, 416, 418, 447, 523, 597, 602], "experienc": [396, 423], "experiment": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 403, 598], "expert": [407, 513], "expertis": 404, "expfactor": [272, 273, 580, 581], "expir": 400, "explain": [87, 91, 387, 390, 392, 401, 404, 406, 407, 413, 418, 420, 422, 433, 439, 458, 464, 466, 491, 495, 500, 502, 506, 507, 535, 596, 598], "explan": [120, 124, 128, 132, 136, 388, 392, 425, 490, 602], "explicit": [87, 91, 195, 197, 387, 388, 403, 405, 411, 547, 602], "explicitli": [16, 19, 20, 26, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 84, 90, 105, 126, 150, 151, 152, 153, 156, 157, 158, 160, 163, 165, 167, 168, 221, 222, 225, 229, 231, 232, 233, 238, 244, 245, 248, 252, 254, 256, 257, 258, 263, 268, 270, 271, 272, 273, 276, 280, 314, 397, 409, 419, 429, 478, 501, 533, 547, 602], "explor": [196, 197, 199, 205, 208, 209, 395, 403, 416, 424, 457, 464, 470, 473, 476, 479, 480, 481, 484, 485, 489, 490, 492, 493, 501, 509, 510, 518, 521, 535, 544], "explos": 52, "expomap": 400, "expon": [410, 502], "exponenti": [28, 30, 36, 39, 40, 77, 231, 232, 233, 234, 271, 272, 273, 388, 398, 433, 457, 473, 477, 486, 549, 562, 583], "exponentialcutoffpowerlaw": 573, "export": [84, 87, 90, 91, 103, 105, 106, 125, 126, 127, 390, 411, 414, 420, 422, 433, 443, 450, 451, 454, 465, 502, 509, 510, 518], "expos": [6, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 396, 401, 402, 403, 406, 407, 452, 454, 455, 496, 499, 513, 533, 534, 596], "exposur": [16, 83, 88, 101, 103, 106, 107, 109, 110, 111, 124, 136, 143, 154, 155, 161, 164, 166, 169, 171, 176, 183, 186, 187, 188, 190, 191, 192, 267, 303, 306, 311, 393, 396, 397, 398, 399, 400, 411, 431, 436, 444, 446, 447, 448, 450, 458, 459, 460, 464, 465, 466, 467, 468, 470, 471, 473, 475, 477, 478, 482, 485, 486, 489, 493, 498, 499, 500, 509, 518, 519, 531, 540, 543, 548, 600], "exposure_fil": 101, "exposure_geom": 155, "exposure_hdu": [154, 155, 161, 166, 169], "exposure_hdu_band": [154, 155, 161, 166, 169], "exposure_hpx": 508, "exposure_map": [154, 155, 161, 166, 169, 186, 187, 192, 497], "exposure_max": 493, "exposure_min": 493, "exposure_tim": 400, "express": [124, 140, 292, 294, 398, 410, 411, 454, 471, 495, 497, 502, 504, 531, 547, 555, 599, 600, 601], "exptest": 445, "extend": [15, 19, 20, 22, 26, 69, 72, 87, 91, 92, 100, 171, 198, 201, 209, 221, 222, 225, 229, 231, 232, 233, 238, 244, 245, 248, 251, 252, 254, 256, 257, 258, 263, 268, 270, 271, 272, 273, 276, 280, 293, 394, 398, 399, 400, 401, 407, 409, 410, 411, 414, 420, 432, 434, 439, 457, 461, 463, 464, 468, 478, 484, 492, 499, 500, 501, 502, 506, 508, 513, 543, 544], "extended_archive_v18": 560, "extended_source_spectral_analysi": [457, 460, 463], "extens": [41, 153, 196, 197, 199, 201, 208, 209, 223, 224, 227, 228, 237, 240, 251, 253, 255, 264, 265, 269, 275, 279, 389, 392, 393, 394, 395, 396, 398, 400, 402, 403, 404, 405, 406, 407, 417, 418, 442, 476, 477, 478, 502, 598], "extent": [207, 227, 251, 401, 468, 502], "extern": [115, 388, 413, 440, 444, 445, 448, 507, 535], "extnam": 497, "extra": [16, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 47, 83, 84, 90, 102, 105, 126, 194, 195, 200, 204, 205, 207, 213, 214, 216, 275, 276, 312, 386, 388, 394, 395, 401, 403, 404, 407, 413, 414, 444, 447, 448, 459, 499, 500, 513, 535, 548], "extra_term": 311, "extract": [16, 84, 90, 100, 103, 105, 106, 110, 111, 125, 126, 127, 132, 154, 155, 161, 166, 169, 172, 177, 178, 183, 185, 193, 196, 197, 198, 199, 201, 206, 207, 208, 209, 277, 387, 397, 402, 411, 413, 414, 441, 442, 453, 454, 458, 460, 464, 465, 466, 467, 473, 474, 477, 478, 479, 482, 489, 493, 494, 499, 518, 531, 539, 544], "extragalact": [229, 459, 507], "extrapol": [102, 150, 151, 152, 176, 196, 197, 199, 205, 208, 209, 229, 280, 326, 327, 439, 444, 446, 447, 455, 497, 499, 507, 508, 547], "extras_requir": 404, "extrem": [387, 414, 499, 555], "ey": 416, "f": [17, 18, 19, 20, 21, 22, 24, 25, 26, 27, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 87, 91, 136, 149, 203, 214, 221, 222, 225, 229, 231, 232, 233, 238, 244, 245, 248, 252, 254, 256, 257, 258, 263, 268, 270, 271, 272, 273, 276, 280, 313, 314, 341, 387, 390, 404, 409, 410, 415, 419, 420, 422, 441, 450, 458, 460, 465, 467, 474, 475, 476, 477, 478, 485, 486, 487, 489, 491, 492, 495, 498, 500, 502, 503, 504, 508, 509, 516, 518, 519, 521, 529, 544, 563, 573, 585, 586, 587, 588, 589, 590, 591, 598, 599, 600], "f0": [278, 592], "f06": 48, "f06b": [49, 525], "f06p": 49, "f1": [278, 592], "f2": [278, 592], "f4": [151, 156, 466, 493, 497, 499, 507, 508], "f8": [497, 508], "f_": [298, 300, 313, 531], "f_0": [256, 576], "f_dead": [83, 88], "f_i": 298, "f_max": 490, "f_max_err": 490, "f_mean": 490, "f_mean_err": 490, "f_min": 490, "f_min_err": 490, "f_pp": 299, "f_var": 299, "fabio": [400, 405, 416, 429, 431, 432, 433, 434, 435, 436, 438, 439, 441, 442, 446, 448, 450, 452, 453, 454, 455], "face": [392, 395], "facecolor": [384, 459, 464, 466, 475, 476, 479, 487, 491, 553, 554, 555], "facil": 412, "fact": [19, 20, 97, 217, 221, 224, 225, 228, 229, 231, 232, 233, 234, 237, 238, 239, 240, 241, 242, 243, 244, 245, 248, 255, 256, 257, 258, 259, 263, 264, 265, 266, 268, 271, 272, 273, 278, 279, 413, 460, 548], "facto": 413, "factor": [19, 20, 23, 103, 104, 106, 109, 110, 111, 120, 124, 125, 154, 155, 157, 161, 163, 164, 165, 166, 167, 169, 176, 183, 189, 193, 194, 195, 196, 197, 199, 200, 201, 204, 205, 207, 208, 209, 212, 217, 218, 219, 220, 221, 224, 225, 228, 229, 231, 232, 233, 234, 237, 238, 239, 240, 241, 242, 243, 244, 245, 248, 253, 255, 256, 257, 258, 259, 263, 264, 265, 266, 267, 268, 269, 271, 272, 273, 275, 278, 279, 281, 293, 387, 400, 402, 416, 435, 455, 458, 467, 468, 470, 473, 475, 479, 482, 486, 493, 494, 498, 502, 507, 531, 548, 563], "factor1": [19, 20, 217, 219, 221, 224, 225, 228, 229, 231, 232, 233, 234, 237, 238, 239, 240, 241, 242, 243, 244, 245, 248, 255, 256, 257, 258, 259, 263, 264, 265, 266, 268, 271, 272, 273, 278, 279], "factor_max": [19, 20, 217, 219, 221, 224, 225, 228, 229, 231, 232, 233, 234, 237, 238, 239, 240, 241, 242, 243, 244, 245, 248, 255, 256, 257, 258, 259, 263, 264, 265, 266, 268, 271, 272, 273, 278, 279], "factor_min": [19, 20, 217, 219, 221, 224, 225, 228, 229, 231, 232, 233, 234, 237, 238, 239, 240, 241, 242, 243, 244, 245, 248, 255, 256, 257, 258, 259, 263, 264, 265, 266, 268, 271, 272, 273, 278, 279], "factori": [196, 197, 208, 209, 401, 406, 410, 546, 548], "factoris": [267, 410, 502, 595, 596], "fail": [16, 84, 90, 105, 126, 214, 388, 390, 401, 416, 417, 418, 442, 455, 464, 474, 508], "failur": [450, 453], "faint": 599, "fair": [387, 413], "fair4r": [387, 413], "fake": [103, 106, 110, 111, 399, 400, 431, 466, 467, 482, 486, 504], "fall": [77, 140, 179, 206, 227, 251, 387, 394, 396, 397, 404, 416, 448, 449, 490], "fallback": [16, 84, 90, 105, 126, 387], "fals": [16, 19, 20, 23, 26, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 67, 80, 82, 83, 84, 86, 87, 88, 90, 91, 96, 100, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 115, 116, 119, 124, 125, 126, 127, 128, 129, 132, 150, 151, 152, 153, 154, 155, 156, 157, 158, 160, 161, 163, 164, 165, 166, 167, 168, 169, 176, 183, 186, 187, 189, 190, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 214, 215, 217, 218, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 248, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 275, 276, 277, 278, 279, 280, 281, 282, 293, 314, 327, 344, 350, 353, 355, 356, 384, 387, 401, 403, 410, 415, 416, 447, 448, 454, 458, 459, 460, 464, 465, 466, 467, 470, 471, 473, 474, 475, 476, 477, 479, 482, 484, 485, 486, 489, 491, 492, 493, 495, 497, 498, 499, 500, 501, 502, 504, 508, 518, 519, 521, 532, 535, 542, 544, 545, 560, 573, 582], "falsifi": 504, "famili": 413, "familiar": [404, 405, 499, 500, 521], "fanci": [387, 487], "far": [395, 400, 402, 404, 408, 411, 414, 416, 424, 439, 477, 523], "fashion": [402, 407], "fast": [387, 401, 405, 495], "faster": [87, 91, 137, 146, 196, 197, 199, 205, 208, 209, 365, 454, 468], "faucher": [30, 31, 32, 33, 37, 39, 45], "faucherkaspi2006": [28, 29, 35, 36, 39, 40, 48], "faucherkaspi2006velocitybimod": 49, "faucherkaspi2006velocitymaxwellian": 49, "faucherspir": 525, "favour": [392, 400, 415, 504], "favourit": 475, "fc": [502, 548], "fcluster": [312, 503], "fcluster_kwarg": [312, 503], "fcn": [416, 495], "fdx": 387, "fe": 283, "feasibl": [401, 406, 467, 482, 493], "featur": [6, 13, 87, 91, 96, 120, 144, 312, 313, 377, 378, 387, 390, 394, 396, 397, 398, 399, 401, 403, 404, 409, 410, 411, 413, 414, 415, 421, 426, 429, 430, 431, 432, 433, 435, 436, 439, 443, 446, 447, 448, 449, 490, 499, 500, 502, 503, 533, 573], "feature_irf": 503, "features_irf": [96, 312, 313, 503], "feb": [393, 394, 404, 408, 424, 426], "februari": 426, "fed": 466, "feedback": [390, 392, 396, 401, 403, 404, 407, 408, 410, 416, 417, 447, 497, 535], "feedstock": [417, 418], "feel": [397, 598], "feijen": [452, 453, 454, 455], "feldman": [430, 436, 444, 446, 597], "feldman1998": [597, 600], "fellowship": 413, "felt": 387, "fermi": [55, 58, 60, 61, 62, 64, 65, 69, 71, 74, 75, 77, 78, 83, 86, 101, 128, 129, 131, 136, 196, 197, 199, 205, 206, 208, 209, 227, 229, 251, 283, 285, 290, 394, 395, 396, 397, 399, 400, 403, 404, 407, 418, 420, 425, 427, 428, 431, 433, 436, 440, 443, 444, 445, 446, 447, 448, 455, 457, 459, 462, 468, 477, 479, 492, 499, 500, 501, 502, 511, 512, 513, 521, 523, 532, 535, 540, 560, 571, 576, 595, 602], "fermi_3fhl": [83, 196, 197, 199, 205, 208, 209, 501, 508, 521, 603], "fermi_3fhl_events_select": [83, 508, 603], "fermi_3fhl_exposure_cube_hpx": 508, "fermi_3fhl_psf_gc": 508, "fermi_bkg_model": 501, "fermi_ct": 131, "fermi_dataset": [227, 251, 290, 501, 508], "fermi_lat": [407, 448, 457, 508, 512], "fermi_model": 508, "fermi_prof": 129, "fermi_ts_imag": 388, "fermilat": 459, "fermipi": [101, 394, 396, 399, 403, 407, 411, 445, 447, 508, 523], "fermitool": 403, "fetch": [15, 387, 390, 395, 417, 427, 440, 518, 598], "few": [82, 83, 87, 88, 91, 386, 387, 388, 390, 392, 393, 394, 395, 397, 399, 401, 405, 407, 412, 416, 417, 418, 424, 438, 449, 451, 454, 455, 460, 465, 471, 473, 475, 492, 494, 495, 499, 507, 518, 519, 544, 548, 603], "fewer": [401, 407], "ff": 413, "fft": 209, "fftconvolv": 209, "fgl": [206, 500], "fgst": [195, 196, 197, 199, 200, 201, 207, 208, 209, 499], "fhit": 509, "fidalgo": [397, 402, 428, 448, 449], "fiduci": 499, "field": [16, 42, 50, 51, 54, 83, 84, 87, 90, 91, 105, 126, 150, 151, 152, 153, 156, 157, 158, 159, 160, 163, 165, 167, 168, 173, 235, 252, 316, 320, 374, 387, 401, 413, 414, 424, 429, 434, 441, 448, 464, 466, 471, 473, 475, 477, 497, 498, 500, 507, 508, 535, 537, 538, 539, 540, 541, 542, 544, 573, 597], "fieldinfo": [16, 84, 90, 105, 126], "fig": [209, 375, 458, 460, 464, 465, 466, 467, 468, 471, 473, 474, 475, 476, 479, 484, 486, 487, 491, 495, 500, 504, 519, 544, 545, 555, 559, 563, 596, 603], "figsiz": [88, 103, 106, 110, 111, 130, 150, 151, 153, 154, 155, 156, 157, 158, 163, 164, 165, 166, 167, 169, 196, 197, 199, 205, 208, 209, 212, 375, 460, 464, 467, 468, 471, 473, 474, 475, 476, 484, 485, 486, 487, 489, 490, 491, 492, 495, 497, 498, 499, 500, 501, 502, 503, 504, 506, 507, 508, 519, 544, 555, 559, 563, 603], "figur": [88, 103, 106, 110, 111, 130, 150, 151, 153, 154, 155, 156, 157, 163, 164, 165, 166, 167, 169, 196, 197, 199, 205, 208, 209, 212, 365, 374, 375, 381, 387, 388, 392, 407, 418, 459, 464, 468, 473, 475, 476, 477, 479, 484, 485, 490, 491, 492, 493, 495, 498, 499, 501, 502, 506, 507, 508, 509, 598, 603], "file": [11, 15, 16, 26, 65, 66, 67, 77, 82, 83, 85, 86, 87, 88, 91, 93, 94, 100, 101, 102, 103, 106, 107, 108, 110, 111, 125, 127, 150, 151, 152, 153, 154, 155, 156, 157, 158, 160, 161, 163, 164, 165, 166, 167, 168, 169, 170, 177, 182, 196, 197, 199, 203, 205, 208, 209, 215, 227, 229, 242, 251, 275, 276, 277, 278, 279, 280, 322, 350, 353, 356, 386, 387, 390, 392, 393, 394, 395, 396, 397, 398, 399, 400, 403, 404, 406, 407, 408, 410, 411, 414, 415, 417, 418, 419, 420, 422, 424, 432, 433, 439, 441, 443, 445, 446, 447, 448, 450, 451, 453, 454, 455, 457, 458, 463, 466, 467, 472, 473, 475, 477, 478, 481, 482, 486, 488, 492, 493, 498, 499, 500, 501, 502, 505, 509, 510, 511, 512, 513, 515, 517, 521, 522, 523, 534, 535, 550, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 602], "file_dir": 322, "file_model": 477, "file_nam": 322, "filemod": [16, 465, 470, 471, 473, 518, 598], "filenam": [11, 16, 26, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 82, 83, 85, 86, 87, 91, 94, 100, 101, 102, 103, 106, 107, 108, 110, 111, 125, 127, 129, 131, 133, 150, 151, 152, 153, 154, 155, 156, 157, 158, 160, 161, 163, 165, 166, 167, 168, 169, 170, 196, 197, 199, 203, 205, 208, 209, 227, 229, 242, 251, 275, 276, 277, 278, 279, 280, 285, 287, 289, 290, 322, 353, 356, 366, 387, 388, 392, 436, 455, 464, 465, 470, 471, 473, 474, 478, 479, 492, 493, 494, 499, 500, 501, 502, 507, 508, 518, 519, 521, 532, 535, 537, 538, 539, 541, 560, 563, 592, 593, 598, 603], "filename_1": 532, "filename_2": 532, "filename_arf": 108, "filename_bkg": 108, "filename_model": [100, 125, 290, 501, 508], "filename_rmf": 108, "filepath": 16, "fill": [16, 84, 85, 87, 90, 91, 103, 105, 106, 109, 110, 111, 126, 153, 164, 195, 196, 197, 199, 205, 207, 208, 209, 280, 387, 395, 396, 400, 403, 407, 413, 417, 418, 433, 440, 447, 450, 460, 477, 478, 492, 497, 498, 500, 508, 519, 547], "fill_between": [19, 20, 26, 130, 221, 222, 225, 229, 231, 232, 233, 238, 244, 245, 248, 252, 254, 256, 257, 258, 263, 268, 270, 271, 272, 273, 276, 280, 487], "fill_by_coord": [164, 196, 197, 199, 205, 208, 209, 499, 508, 547], "fill_by_idx": [196, 197, 199, 205, 208, 209, 547], "fill_by_pix": [196, 197, 199, 205, 208, 209, 547], "fill_ev": [196, 197, 199, 205, 208, 209, 442, 453, 466, 499, 508, 516, 603], "fill_nan": 197, "fill_valu": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 87, 91, 150, 151, 152, 153, 156, 157, 158, 160, 163, 165, 167, 168, 196, 197, 199, 205, 208, 209, 275, 276, 279, 387, 497, 499], "filled_t": [87, 91], "filter": [83, 88, 89, 393, 397, 399, 401, 402, 448, 449, 452, 489, 500, 503, 511, 513, 519, 521], "filter_ev": 89, "filter_gti": 89, "filter_success_nan": [125, 127], "filtered_ev": 89, "filtered_gti": 89, "filterwarn": [486, 487], "final": [132, 293, 387, 388, 394, 395, 397, 400, 401, 403, 404, 406, 408, 410, 412, 413, 418, 433, 434, 435, 458, 459, 460, 462, 464, 473, 475, 477, 478, 484, 485, 487, 491, 493, 495, 498, 500, 503, 508, 509, 513, 518, 519, 520, 521, 531, 532, 533], "finalis": 391, "find": [19, 20, 26, 134, 136, 144, 145, 153, 179, 180, 184, 211, 221, 222, 225, 229, 231, 232, 233, 238, 244, 245, 248, 252, 254, 256, 257, 258, 263, 268, 270, 271, 272, 273, 276, 280, 303, 387, 392, 398, 400, 406, 417, 418, 419, 439, 441, 447, 448, 453, 454, 462, 464, 468, 492, 493, 499, 502, 507, 510, 521, 598, 600, 601], "find_peak": [145, 448, 468, 475], "find_peaks_in_flux_map": 468, "find_root": 439, "finder": [144, 179, 180, 439, 448, 468], "fine": [291, 327, 400, 471, 493, 508, 548, 598], "finer": [477, 493, 548], "fingertip": 386, "finish": [390, 394, 396, 417, 445, 447], "finit": [100, 103, 106, 110, 111, 154, 155, 161, 166, 182, 197, 205, 209, 277, 405], "fink": [229, 230, 459, 563], "fir": 573, "firefox": [87, 91], "first": [57, 77, 87, 91, 92, 94, 100, 103, 106, 110, 111, 125, 127, 129, 137, 139, 144, 146, 153, 170, 179, 196, 197, 198, 201, 205, 206, 227, 251, 284, 302, 347, 376, 387, 388, 390, 392, 394, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 407, 408, 411, 412, 413, 416, 418, 419, 424, 428, 429, 430, 431, 432, 433, 434, 435, 436, 439, 441, 446, 448, 449, 450, 451, 453, 455, 458, 460, 462, 464, 468, 470, 471, 473, 474, 475, 476, 477, 478, 479, 484, 485, 486, 487, 489, 490, 492, 493, 494, 495, 498, 499, 500, 501, 502, 503, 504, 507, 508, 509, 513, 518, 519, 520, 521, 532, 544, 547, 598], "firstli": [388, 390, 476, 477, 494], "firstnam": [87, 91], "fit": [6, 15, 16, 19, 20, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 57, 58, 60, 61, 62, 64, 65, 66, 67, 71, 74, 75, 77, 78, 82, 83, 84, 85, 86, 87, 88, 90, 91, 94, 99, 100, 102, 103, 105, 106, 107, 108, 110, 111, 116, 119, 120, 122, 124, 125, 126, 127, 128, 129, 131, 132, 133, 136, 144, 145, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 160, 161, 163, 165, 166, 167, 168, 169, 173, 176, 194, 195, 196, 197, 198, 199, 200, 201, 203, 205, 206, 207, 208, 209, 213, 215, 216, 217, 219, 221, 224, 225, 227, 228, 229, 230, 231, 232, 233, 234, 237, 238, 239, 240, 241, 242, 243, 244, 245, 248, 251, 255, 256, 257, 258, 259, 263, 264, 265, 266, 268, 271, 272, 273, 277, 278, 279, 280, 290, 291, 292, 294, 295, 296, 301, 304, 310, 311, 322, 323, 324, 369, 370, 373, 375, 380, 382, 386, 387, 388, 393, 397, 398, 399, 400, 403, 405, 406, 407, 408, 409, 410, 411, 414, 415, 420, 428, 429, 430, 431, 432, 433, 434, 435, 436, 439, 441, 444, 446, 447, 448, 449, 451, 453, 454, 455, 457, 458, 461, 463, 467, 468, 469, 471, 472, 476, 477, 478, 479, 480, 481, 483, 484, 485, 487, 488, 489, 490, 492, 493, 494, 496, 497, 498, 499, 501, 502, 503, 505, 506, 507, 509, 510, 513, 516, 520, 521, 531, 532, 533, 534, 535, 537, 538, 539, 541, 542, 543, 544, 553, 560, 563, 573, 592, 593, 596, 597, 602, 603], "fit2": 501, "fit_covari": [465, 518], "fit_deriv": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40], "fit_joint": [460, 464, 473, 474], "fit_prior": 504, "fit_rang": [16, 465, 470, 471, 473, 518], "fit_result": [214, 290, 465, 489, 494, 518], "fit_results_nul": 290, "fit_scipi": 495, "fit_sherpa": 495, "fit_stat_scan": 402, "fit_statist": [387, 471], "fit_statistics_cython": 418, "fitconfig": 16, "fitmc": 405, "fitresult": [214, 441, 453, 455, 495, 519], "fitsfixedwarn": [468, 560], "fitsonli": 507, "fitspectrum": 443, "fitstepresult": [213, 216], "fittabl": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 48, 49], "fittable1dmodel": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40], "fitter": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 446, 447, 462], "five": 521, "fix": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 77, 85, 88, 94, 95, 107, 108, 136, 148, 166, 168, 183, 214, 253, 254, 259, 279, 390, 392, 393, 394, 398, 399, 402, 404, 409, 411, 412, 413, 417, 418, 420, 426, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 442, 443, 444, 445, 446, 447, 448, 449, 451, 452, 458, 466, 467, 470, 471, 473, 474, 477, 482, 485, 486, 489, 495, 497, 498, 501, 502, 503, 506, 518, 545, 547, 556, 574], "fixed_altaz": 85, "fixed_bin": 148, "fixed_icr": [85, 166, 458, 467, 477, 478, 482, 486], "fixed_offset": [96, 182, 439], "fixed_r_in": 171, "fixed_width": 171, "fixedpointinginfo": [88, 166, 189, 453, 454, 458, 467, 477, 478, 482, 486], "fk5": [548, 560], "flag": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 91, 104, 109, 125, 127, 128, 129, 132, 133, 194, 195, 196, 197, 199, 201, 202, 204, 205, 207, 208, 209, 213, 214, 215, 216, 388, 460, 473, 477, 492, 502], "flake8": 390, "flare": [140, 298, 420, 433, 434, 457, 483, 484, 486, 488, 489, 490, 513, 533, 544], "flask": 447, "flat": [127, 140, 158, 168, 194, 195, 200, 202, 204, 207, 210, 211, 253, 398, 411], "flatten": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 194, 195, 202, 204, 207, 490], "fledg": 415, "flexibl": [82, 338, 387, 392, 396, 397, 398, 401, 403, 407, 408, 414, 499, 535, 595], "float": [19, 20, 26, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 42, 50, 51, 83, 87, 88, 90, 91, 96, 103, 106, 110, 111, 115, 120, 124, 126, 127, 130, 133, 134, 135, 136, 144, 145, 150, 151, 152, 153, 154, 156, 157, 158, 160, 163, 165, 166, 167, 168, 169, 171, 173, 182, 194, 195, 196, 197, 199, 201, 204, 205, 207, 208, 209, 210, 211, 214, 216, 217, 219, 221, 222, 224, 225, 227, 228, 229, 231, 232, 233, 234, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 248, 251, 252, 254, 255, 256, 257, 258, 259, 263, 264, 265, 266, 268, 270, 271, 272, 273, 276, 277, 278, 279, 280, 281, 282, 290, 291, 292, 293, 294, 297, 301, 303, 307, 309, 314, 325, 332, 341, 343, 376, 377, 378, 498, 504, 507, 508, 598, 602], "float32": [194, 195, 196, 197, 199, 204, 205, 207, 208, 209, 470, 475, 499], "float64": [87, 91, 112, 117, 153, 156, 387, 415, 424, 494, 497, 499, 533, 598], "float64float64float64": 475, "float64float64float64float64float64float64float64float32bool": 462, "float64float64float64float64float64float64float64float64": 475, "float_a": [87, 91], "flow": [414, 596, 597], "fluctuat": [292, 294, 411, 467, 482, 504, 600], "flux": [15, 19, 20, 26, 41, 46, 67, 71, 73, 74, 75, 77, 78, 79, 80, 83, 88, 100, 102, 103, 106, 110, 111, 120, 124, 125, 126, 127, 128, 129, 132, 133, 135, 136, 137, 138, 139, 140, 141, 142, 143, 145, 146, 147, 148, 221, 222, 223, 225, 226, 229, 231, 232, 233, 234, 238, 239, 241, 242, 243, 244, 245, 248, 252, 254, 255, 256, 257, 258, 259, 263, 266, 267, 268, 270, 271, 272, 273, 276, 278, 280, 281, 283, 284, 288, 297, 298, 299, 300, 302, 308, 391, 399, 400, 402, 403, 405, 407, 408, 410, 420, 427, 430, 432, 433, 435, 439, 441, 445, 446, 447, 449, 454, 455, 457, 461, 463, 466, 468, 473, 475, 477, 478, 480, 481, 484, 485, 486, 487, 489, 490, 493, 499, 502, 508, 513, 520, 529, 531, 535, 540, 549, 557, 573, 595, 596, 597, 600], "flux1": 302, "flux2": 302, "flux_err": [19, 20, 26, 124, 125, 127, 136, 221, 222, 225, 229, 231, 232, 233, 238, 244, 245, 248, 252, 254, 256, 257, 258, 263, 268, 270, 271, 272, 273, 276, 280, 298, 299, 300, 308, 468, 484, 490], "flux_err1": 302, "flux_err2": 302, "flux_errn": [125, 127, 492], "flux_errp": [125, 127, 492], "flux_int_cu": 284, "flux_map": [125, 127, 137, 146, 411, 491], "flux_metadata_fits_kei": 126, "flux_per_omega": 502, "flux_point": [16, 66, 67, 71, 73, 74, 75, 77, 78, 79, 80, 98, 102, 125, 127, 128, 399, 458, 462, 464, 465, 470, 471, 473, 475, 487, 492, 493, 518, 519, 521], "flux_point_dataset": 399, "flux_points_at_tim": 411, "flux_points_ctb_37b": 127, "flux_points_dataset": [464, 475, 487], "flux_points_dataset_no_ul": 464, "flux_points_fermi": 474, "flux_points_hawc": 474, "flux_points_hess": 474, "flux_points_intrins": 459, "flux_points_meta": [71, 74, 75, 78], "flux_points_no_ul": 464, "flux_points_ob": 459, "flux_points_recomput": 127, "flux_points_t": [71, 73, 74, 75, 77, 78, 79, 80], "flux_pr": 102, "flux_profil": [457, 479, 481], "flux_profile_estim": 479, "flux_profile_fermi": 479, "flux_quant": [139, 140, 141, 142, 490], "flux_ref": [125, 127, 411], "flux_sensit": [124, 125, 127, 136], "flux_ul": [124, 125, 127, 136, 492], "fluxestim": [125, 127, 128, 408, 435, 437, 438, 439, 441, 454], "fluxmap": [124, 126, 127, 136, 137, 138, 145, 146, 439, 454, 455, 468, 533], "fluxmapestim": 411, "fluxmapsmetadata": 414, "fluxpoint": [71, 73, 74, 75, 77, 78, 79, 80, 102, 125, 126, 128, 129, 132, 139, 140, 141, 142, 148, 399, 402, 411, 414, 439, 446, 447, 453, 454, 455, 458, 462, 474, 479, 484, 485, 490, 492, 493, 521, 530, 531, 533, 535], "fluxpointdataset": 433, "fluxpointestim": [402, 430, 436, 449], "fluxpointfit": 399, "fluxpointfitt": 448, "fluxpointprofil": 449, "fluxpointsconfig": 16, "fluxpointsdataset": [98, 99, 103, 106, 408, 411, 414, 429, 433, 454, 455, 462, 464, 474, 475, 486, 487, 531], "fluxpointsdatasetmetadata": 414, "fluxpointsestim": [121, 129, 132, 334, 408, 409, 411, 420, 430, 435, 436, 439, 453, 454, 459, 464, 474, 475, 487, 494, 518, 519, 535], "fluxpointsetim": 411, "fluxpointsmetadata": 414, "fluxprofileestim": [121, 439, 452, 454, 479], "fly": 397, "fmt": [489, 495, 504], "focu": [397, 407, 433, 446, 466, 598], "focus": [397, 413, 416], "fold": [109, 129, 411, 462, 474, 485, 494, 531, 533], "folder": [11, 82, 94, 102, 107, 111, 127, 351, 387, 388, 392, 395, 417, 419, 424, 429, 439, 442, 465, 473, 477, 507, 518, 519, 596, 598], "follow": [15, 19, 20, 43, 44, 77, 80, 82, 83, 84, 90, 91, 103, 105, 107, 108, 110, 111, 124, 125, 126, 127, 130, 136, 138, 144, 147, 195, 196, 197, 199, 203, 208, 209, 214, 267, 284, 290, 307, 309, 377, 378, 380, 387, 388, 390, 391, 392, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 406, 407, 409, 410, 411, 412, 413, 414, 415, 416, 417, 419, 420, 421, 422, 423, 424, 431, 432, 433, 435, 436, 439, 441, 442, 448, 449, 453, 454, 455, 458, 459, 460, 461, 462, 464, 465, 467, 468, 470, 473, 474, 477, 478, 484, 485, 486, 487, 489, 491, 492, 494, 495, 496, 498, 499, 500, 501, 502, 506, 507, 513, 514, 518, 520, 521, 523, 525, 526, 531, 533, 535, 537, 539, 540, 544, 546, 547, 548, 549, 558, 559, 564, 567, 568, 570, 571, 575, 576, 578, 579, 580, 581, 582, 596, 597, 599, 600, 601, 603], "font": [196, 197, 199, 205, 208, 209, 388, 499], "fontsiz": [384, 487, 495], "foo": [87, 91], "footprint": [196, 197, 199, 205, 207, 208, 209, 556], "footprint_rectangle_sky_region": 207, "forbid": [16, 84, 90, 105, 126], "forbidden": 501, "forc": [16, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 84, 90, 105, 126, 154, 155, 161, 164, 166, 169, 207, 209, 314, 392, 402, 429], "forecom": [387, 412], "foremost": 598, "forens": 403, "foreseen": [397, 412], "forev": 429, "forg": [386, 404, 417, 418, 420, 421, 424, 447], "forget": [465, 476, 518], "forgot": 387, "forgotten": 387, "fork": [390, 417], "form": [16, 84, 87, 90, 91, 103, 105, 126, 166, 169, 204, 326, 387, 393, 397, 402, 410, 412, 414, 416, 425, 447, 455, 500, 504, 532, 540, 554, 565, 596], "formal": [392, 415, 468], "format": [16, 83, 84, 85, 86, 87, 88, 90, 91, 94, 103, 105, 106, 108, 110, 111, 125, 126, 127, 128, 148, 150, 151, 152, 153, 154, 155, 156, 157, 158, 160, 161, 163, 165, 166, 167, 168, 169, 189, 194, 195, 196, 197, 198, 199, 200, 201, 204, 205, 206, 207, 208, 209, 211, 227, 235, 242, 251, 267, 277, 280, 322, 344, 368, 369, 376, 386, 395, 396, 397, 398, 399, 401, 403, 411, 413, 414, 418, 427, 439, 441, 444, 448, 450, 451, 453, 454, 455, 459, 462, 464, 465, 466, 468, 470, 471, 473, 475, 477, 478, 479, 484, 486, 490, 492, 494, 497, 499, 500, 502, 507, 508, 509, 510, 518, 521, 523, 529, 531, 532, 533, 534, 537, 538, 539, 540, 541, 548, 592, 593, 596, 597, 598, 599], "format_plot_xaxi": [198, 201, 206, 497], "format_plot_yaxi": [201, 497], "formatt": [376, 499], "formatwarn": 387, "former": [413, 430, 435, 460, 501, 596, 599], "formula": [28, 29, 30, 31, 35, 36, 37, 39, 40, 50, 52, 53, 134, 165, 257, 258, 311, 458, 599], "forthcom": 494, "forum": 417, "forward": [19, 20, 26, 83, 87, 91, 103, 106, 110, 111, 129, 150, 151, 152, 153, 156, 157, 158, 160, 163, 165, 167, 168, 178, 200, 204, 205, 206, 214, 221, 222, 225, 226, 229, 231, 232, 233, 234, 235, 238, 239, 241, 242, 243, 244, 245, 248, 252, 254, 256, 257, 258, 259, 263, 266, 267, 268, 270, 271, 272, 273, 276, 277, 278, 279, 280, 281, 285, 312, 376, 381, 388, 394, 397, 411, 462, 474, 485, 494, 531, 533, 548], "forwardref": [16, 84, 90, 105, 126], "found": [19, 20, 26, 82, 86, 87, 91, 140, 179, 184, 203, 221, 222, 225, 229, 231, 232, 233, 238, 244, 245, 248, 252, 254, 256, 257, 258, 263, 268, 270, 271, 272, 273, 276, 280, 298, 390, 391, 395, 402, 412, 413, 433, 436, 437, 438, 442, 471, 477, 490, 502, 504, 510, 511, 513, 532, 533, 544, 545, 596], "four": [390, 398, 411, 417, 484, 507, 508, 539, 541, 547, 597], "fov": [124, 150, 151, 173, 174, 188, 189, 191, 193, 235, 387, 393, 401, 444, 447, 448, 455, 470, 489, 497, 500, 501, 507, 519, 543, 597], "fov_": 387, "fov_align": [150, 151, 152, 153, 156, 157, 158, 160, 163, 165, 167, 168, 497], "fov_background": [470, 518], "fov_bkg_mak": [498, 542], "fov_lat": [151, 497, 507, 540], "fov_lat_axi": 497, "fov_lon": [151, 497, 507, 540], "fov_lon_axi": 497, "fov_theta": 387, "fovalign": [150, 151, 152, 153, 156, 157, 158, 160, 163, 165, 167, 168, 497], "fovbackground": [415, 435], "fovbackgroundmak": [174, 434, 439, 498, 518, 519], "fovbackgroundmodel": [15, 103, 109, 110, 114, 173, 227, 247, 251, 415, 436, 453, 454, 455, 473, 474, 477, 478, 482, 493, 501, 518, 519, 542, 556], "fp": [125, 127, 148, 411, 518, 533, 535], "fp_dataset": [464, 493], "fp_dnde": 411, "fp_energy_flux": 411, "fp_estim": 494, "fp_result": 494, "fpe": [334, 409, 411, 459, 464, 475, 487, 519], "fpe_no_ul": 464, "fpp": 299, "fpp_err": [299, 490], "fpp_tabl": 490, "fr": 413, "frac": [17, 19, 20, 21, 22, 23, 24, 25, 27, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 50, 51, 52, 53, 54, 106, 111, 153, 156, 212, 233, 238, 256, 258, 271, 272, 298, 300, 313, 410, 531, 539, 540, 553, 554, 555, 558, 559, 564, 567, 568, 570, 571, 575, 576, 578, 579, 580, 581, 586, 587, 588, 590, 600, 601], "frac_remain": 416, "fraction": [19, 20, 26, 50, 52, 53, 83, 88, 89, 90, 124, 135, 142, 157, 163, 165, 166, 167, 169, 204, 210, 211, 221, 222, 225, 228, 229, 231, 232, 233, 238, 244, 245, 248, 252, 254, 256, 257, 258, 263, 268, 270, 271, 272, 273, 276, 280, 299, 300, 397, 402, 416, 446, 454, 458, 467, 477, 482, 493, 497, 500, 507, 508, 509], "frame": [16, 83, 85, 91, 94, 95, 96, 103, 106, 110, 111, 112, 113, 114, 117, 129, 144, 166, 176, 179, 189, 195, 196, 197, 199, 202, 204, 205, 207, 208, 209, 223, 224, 228, 237, 240, 253, 255, 264, 265, 267, 269, 275, 279, 312, 313, 348, 363, 387, 388, 396, 398, 401, 411, 429, 430, 432, 433, 434, 460, 464, 465, 466, 467, 470, 471, 473, 474, 475, 476, 477, 478, 479, 482, 484, 485, 486, 487, 489, 491, 493, 497, 498, 499, 500, 501, 502, 503, 508, 509, 518, 519, 521, 539, 544, 546, 547, 548, 553, 554, 555, 556, 557, 558, 559, 560, 603], "framework": [398, 400, 401, 403, 405, 406, 410, 416, 429, 430, 436, 448, 487, 502, 525, 535], "franceschini": [229, 230, 280, 453, 459, 563], "franceschini17": [230, 459, 563], "franceschni": 563, "frd_ab": 230, "free": [50, 52, 53, 77, 103, 106, 110, 111, 128, 132, 133, 176, 214, 218, 220, 253, 254, 290, 392, 402, 429, 455, 459, 465, 467, 470, 471, 473, 475, 476, 482, 484, 486, 489, 493, 495, 498, 501, 502, 504, 508, 513, 518, 519, 523, 533, 542, 556, 573, 574, 598, 600, 601], "free_paramet": [218, 220, 290, 416, 489, 495, 501], "freedom": [122, 125, 127, 138, 147, 307, 309, 413, 454, 476, 533, 600, 601], "freez": [19, 20, 26, 87, 91, 218, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 248, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 275, 276, 277, 278, 279, 280, 281, 282, 290, 402, 413, 429, 439, 454, 470, 482, 489, 495, 502, 573], "freeze_al": [218, 220], "frenk": 523, "frequenc": [278, 293, 527], "frequent": [201, 387, 396, 405, 413, 416, 485, 486, 490, 500, 513, 535, 536, 598], "frequentist": 405, "fridai": 396, "friendli": [387, 392, 414, 450, 465, 518, 535, 603], "from": [13, 15, 16, 19, 20, 25, 26, 27, 28, 29, 30, 31, 32, 33, 35, 36, 37, 38, 39, 40, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 94, 96, 100, 101, 102, 103, 104, 105, 106, 107, 109, 110, 111, 112, 113, 114, 116, 117, 118, 119, 120, 124, 125, 126, 127, 128, 129, 131, 132, 133, 135, 136, 137, 138, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 160, 161, 163, 164, 165, 166, 167, 168, 169, 170, 171, 176, 177, 178, 179, 182, 183, 185, 189, 191, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 275, 276, 277, 278, 279, 280, 281, 282, 284, 290, 291, 292, 293, 294, 297, 300, 312, 313, 314, 324, 332, 334, 336, 337, 341, 344, 345, 349, 354, 366, 367, 369, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 388, 390, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 417, 418, 420, 422, 424, 425, 427, 428, 429, 431, 432, 433, 434, 435, 436, 439, 440, 441, 443, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 457, 458, 459, 460, 462, 463, 464, 465, 466, 467, 468, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 481, 482, 484, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 497, 498, 502, 503, 504, 505, 506, 507, 508, 509, 510, 512, 513, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 527, 528, 529, 530, 531, 532, 533, 535, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 550, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 602, 603], "from_align": [207, 439], "from_attribut": [16, 84, 90, 105, 126], "from_bound": [156, 158, 166, 195, 201, 207, 411, 474, 477, 478, 493, 497, 498, 499, 506, 547, 548], "from_covariance_matrix": 415, "from_default": 200, "from_diagonal_respons": [112, 117, 153, 154, 155, 468, 508], "from_dict": [19, 20, 26, 102, 103, 106, 110, 111, 218, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 275, 276, 277, 278, 279, 280, 281, 282, 432, 439, 504], "from_dir": [82, 89, 96, 176, 312, 313, 424, 460, 464, 466, 475, 485, 487, 489, 498, 503, 506, 507, 510, 516, 519, 532, 535, 542, 544, 545], "from_edg": [155, 196, 197, 199, 201, 205, 208, 209, 467, 482, 486, 497, 508, 509], "from_edisp_kernel": 154, "from_energy_bound": [103, 106, 110, 111, 112, 117, 153, 155, 156, 158, 164, 166, 176, 194, 195, 200, 201, 204, 207, 209, 388, 458, 460, 464, 466, 474, 475, 477, 478, 485, 487, 489, 493, 497, 498, 502, 508, 509, 519, 539, 542, 544, 545, 548], "from_energy_edg": [153, 201, 382, 493, 497], "from_events_fil": [82, 477, 507], "from_factor_matrix": 212, "from_fil": [82, 532], "from_fits_head": 85, "from_gauss": [153, 154, 158, 164, 166, 169, 539], "from_gaussian": 436, "from_geom": [103, 106, 110, 111, 154, 155, 164, 166, 169, 196, 197, 199, 203, 205, 208, 209, 433, 452, 493, 499, 500, 548, 555], "from_gti": 206, "from_gti_bound": 206, "from_hdu": [195, 197, 209], "from_hdulist": [103, 106, 110, 111, 125, 127, 150, 151, 152, 153, 154, 155, 156, 157, 158, 160, 161, 163, 165, 166, 167, 168, 169, 194, 195, 196, 197, 199, 203, 204, 205, 207, 208, 209, 499], "from_head": [84, 90, 105, 126, 195, 207, 414], "from_irf": 168, "from_log10": [244, 245, 571], "from_map": [125, 127], "from_map_dataset": [106, 111], "from_nam": [471, 475, 506], "from_nod": 201, "from_orm": [16, 84, 90, 105, 126], "from_panda": [87, 91], "from_paramet": [19, 20, 26, 221, 222, 223, 224, 225, 226, 228, 229, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 248, 250, 252, 253, 254, 255, 256, 257, 258, 259, 260, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 275, 276, 277, 278, 279, 280, 281, 282], "from_parametr": [156, 537], "from_posit": [223, 224, 228, 237, 240, 253, 255, 264, 265, 269, 275, 279, 478], "from_refer": 410, "from_region": [204, 228, 453, 544], "from_region_map": 280, "from_spatial_model": 164, "from_spectrum_dataset": [111, 458, 467], "from_stack": [83, 86, 92, 125, 127, 196, 197, 198, 199, 201, 205, 208, 209, 212, 218, 220, 453, 454, 532], "from_tabl": [127, 150, 151, 152, 153, 156, 157, 158, 160, 163, 165, 167, 168, 198, 200, 201, 205, 206, 242, 450, 458], "from_table_hdu": [86, 200, 201], "from_time_bound": 206, "from_time_edg": [206, 489, 490], "from_time_interv": 86, "from_wcs_til": 197, "from_yaml": [16, 227, 251, 398, 465], "fromnumer": [466, 489], "front": [396, 416, 417, 446], "frozen": [19, 20, 26, 102, 128, 132, 173, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 248, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 275, 276, 277, 278, 279, 280, 281, 282, 290, 402, 410, 415, 431, 454, 459, 460, 462, 464, 465, 466, 467, 468, 470, 473, 474, 475, 476, 477, 478, 479, 482, 485, 486, 489, 492, 493, 494, 495, 500, 501, 502, 504, 508, 518, 519, 521, 533, 542, 573, 582], "fr\u00f6se": [454, 455], "fthxzdq9": 498, "ftol": 495, "ftool": 402, "fulfil": [414, 499], "full": [82, 128, 136, 150, 151, 152, 153, 156, 157, 158, 160, 163, 165, 167, 168, 197, 215, 227, 251, 322, 383, 386, 387, 392, 396, 397, 400, 402, 403, 407, 413, 415, 416, 419, 426, 429, 439, 441, 455, 458, 459, 460, 462, 464, 465, 466, 467, 468, 470, 471, 473, 474, 475, 476, 477, 478, 479, 482, 484, 485, 486, 487, 489, 490, 491, 492, 493, 494, 495, 497, 498, 499, 500, 501, 502, 503, 504, 506, 507, 508, 509, 510, 516, 518, 519, 521, 535, 546, 552, 553, 554, 555, 556, 557, 558, 559, 560, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 585, 586, 587, 588, 589, 590, 591, 592, 593, 596, 597], "full_enclosur": [189, 497], "full_output": [19, 20, 26, 215, 221, 222, 223, 224, 225, 226, 227, 228, 229, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 248, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 275, 276, 277, 278, 279, 280, 281, 282], "fulli": [132, 194, 195, 204, 207, 278, 396, 397, 404, 408, 413, 418, 421, 431, 433, 441, 460, 490, 502, 507, 509, 510], "fun": [387, 390], "func": [17, 18, 21, 22, 24, 25, 27, 90, 196, 197, 199, 205, 208, 209, 286, 335, 339, 340, 380, 471, 473], "function": [6, 15, 16, 19, 20, 26, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 46, 82, 83, 84, 85, 87, 88, 90, 91, 100, 101, 102, 103, 104, 105, 109, 110, 120, 124, 125, 126, 132, 136, 137, 139, 140, 141, 142, 145, 146, 147, 154, 155, 156, 157, 158, 160, 161, 163, 165, 166, 167, 169, 196, 197, 199, 201, 205, 208, 209, 214, 215, 216, 221, 222, 225, 229, 231, 232, 233, 238, 244, 245, 248, 252, 254, 256, 257, 258, 263, 266, 267, 268, 270, 271, 272, 273, 276, 280, 286, 292, 293, 294, 302, 303, 307, 308, 309, 327, 335, 336, 338, 339, 343, 344, 354, 372, 375, 376, 380, 382, 384, 386, 390, 393, 397, 398, 399, 400, 401, 402, 405, 406, 407, 408, 410, 411, 412, 414, 415, 416, 420, 422, 424, 425, 427, 429, 430, 431, 432, 433, 435, 436, 439, 440, 441, 443, 444, 445, 446, 447, 448, 449, 452, 453, 454, 455, 458, 459, 464, 465, 466, 467, 468, 473, 475, 476, 477, 478, 479, 489, 493, 494, 495, 497, 498, 499, 500, 501, 502, 504, 506, 509, 510, 511, 513, 518, 519, 521, 523, 524, 525, 530, 531, 532, 534, 535, 544, 546, 548, 554, 555, 557, 586, 595, 596, 597, 598, 599, 601, 603], "functional_model": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40], "functool": [16, 84, 90, 105, 126], "fundament": [400, 409, 414, 416, 420, 422, 513, 536], "further": [11, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 82, 120, 124, 128, 129, 132, 136, 202, 338, 390, 391, 393, 396, 397, 400, 401, 404, 406, 407, 408, 409, 410, 434, 435, 436, 439, 441, 471, 477, 491, 492, 493, 494, 499, 519, 521, 524, 525, 540, 598], "furthermor": 507, "futur": [104, 109, 387, 392, 397, 400, 401, 403, 404, 405, 406, 407, 408, 409, 411, 412, 413, 415, 416, 447, 473, 479, 499, 508, 524, 533, 595], "fvar": [142, 300, 402, 446], "fvar_err": [300, 490], "fvar_tabl": 490, "g": [13, 16, 19, 20, 26, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 46, 47, 51, 52, 53, 54, 59, 67, 83, 84, 85, 86, 87, 90, 91, 95, 105, 115, 126, 144, 195, 196, 197, 199, 201, 205, 207, 208, 209, 214, 221, 222, 225, 229, 231, 232, 233, 238, 244, 245, 248, 252, 254, 256, 257, 258, 263, 268, 270, 271, 272, 273, 276, 280, 298, 314, 354, 376, 382, 386, 387, 388, 390, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 410, 411, 413, 414, 416, 417, 418, 420, 421, 422, 439, 441, 445, 447, 448, 449, 450, 453, 460, 462, 464, 465, 467, 475, 477, 479, 491, 492, 493, 495, 499, 500, 501, 502, 507, 508, 513, 521, 523, 527, 530, 531, 532, 533, 535, 540, 545, 546, 547, 555, 595, 597, 598, 600, 602, 603], "g0": [473, 508], "g0jb4nq4": 489, "g28": 67, "g320": 492, "g_1": 156, "g_2": 156, "g_3": 156, "ga": 479, "gabriel": 448, "gadf": [83, 84, 85, 86, 88, 90, 95, 103, 105, 106, 110, 111, 126, 127, 150, 151, 152, 153, 154, 155, 156, 157, 158, 160, 161, 163, 165, 166, 167, 168, 169, 194, 195, 196, 197, 198, 199, 200, 201, 204, 205, 206, 207, 208, 209, 397, 400, 411, 414, 439, 441, 450, 453, 455, 494, 497, 499, 518, 531, 535, 548, 597], "gain": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 392, 404, 447], "gal_diffus": 403, "galact": [17, 18, 21, 22, 24, 25, 27, 28, 29, 35, 36, 37, 45, 47, 67, 68, 83, 91, 103, 106, 110, 111, 112, 117, 128, 129, 131, 166, 195, 196, 197, 199, 202, 204, 205, 207, 208, 209, 228, 237, 240, 255, 264, 265, 321, 348, 387, 388, 398, 401, 407, 427, 429, 446, 459, 460, 464, 467, 468, 470, 473, 475, 476, 477, 479, 482, 486, 491, 492, 493, 499, 500, 501, 502, 507, 521, 523, 526, 530, 545, 546, 547, 548, 553, 554, 555, 556, 557, 558, 559, 597, 603], "galactic_median": 83, "galactocentr": 41, "galaxi": [17, 21, 22, 28, 30, 35, 39, 40, 41, 229, 299, 300, 427, 460], "galelli": [452, 454, 455], "gallant": 447, "galleri": [418, 434, 436, 439, 450, 454, 457, 458, 459, 460, 462, 464, 465, 466, 467, 468, 470, 471, 473, 474, 475, 476, 477, 478, 479, 482, 484, 485, 486, 487, 489, 490, 491, 492, 493, 494, 495, 497, 498, 499, 500, 501, 502, 503, 504, 506, 507, 508, 509, 510, 516, 518, 519, 521, 536, 550, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595], "gallery_jupyt": 549, "gallery_python": 549, "galprop": [195, 196, 197, 199, 208, 209], "galprop2": [195, 196, 197, 199, 208, 209], "gambit": 523, "gamma": [11, 17, 18, 19, 20, 21, 22, 24, 25, 26, 27, 36, 37, 52, 53, 57, 59, 63, 66, 67, 79, 83, 124, 128, 135, 165, 189, 196, 197, 199, 208, 209, 229, 231, 232, 233, 256, 257, 258, 280, 284, 341, 387, 393, 395, 398, 399, 400, 401, 411, 418, 420, 424, 425, 430, 444, 445, 446, 447, 448, 458, 459, 462, 464, 465, 466, 471, 474, 475, 476, 477, 479, 492, 497, 499, 500, 503, 507, 509, 510, 518, 521, 523, 525, 526, 530, 531, 532, 535, 538, 540, 542, 544, 545, 555, 563, 567, 568, 575, 576, 595, 596, 597, 598, 599, 600, 603], "gamma1": [221, 564, 578], "gamma2": [221, 564, 578], "gamma_1": [268, 271, 272, 273, 410, 579, 580, 581], "gamma_2": [268, 271, 272, 273, 410, 579, 580, 581], "gamma_min": [135, 458], "gamma_min_sensit": 124, "gammacat": [55, 66, 446, 462], "gammalib": [387, 400], "gammamc_dif": 523, "gammapi": [6, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 388, 389, 391, 392, 394, 395, 397, 398, 399, 400, 401, 402, 403, 405, 409, 410, 411, 415, 416, 419, 420, 421, 422, 423, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 439, 440, 441, 443, 444, 445, 446, 447, 448, 449, 450, 451, 453, 454, 455, 457, 458, 459, 460, 462, 464, 465, 466, 467, 468, 470, 471, 473, 474, 475, 476, 477, 478, 479, 482, 484, 485, 486, 487, 489, 490, 491, 492, 493, 494, 495, 496, 498, 499, 500, 501, 502, 503, 504, 505, 506, 511, 512, 513, 514, 516, 518, 519, 520, 521, 524, 525, 527, 528, 529, 535, 536, 537, 538, 539, 541, 545, 546, 548, 549, 552, 553, 554, 555, 556, 557, 558, 559, 560, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 585, 586, 587, 588, 589, 590, 591, 592, 593, 597, 598, 599, 600, 603], "gammapy_analysis_config": 403, "gammapy_data": [26, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 82, 83, 86, 88, 89, 91, 94, 96, 102, 103, 106, 110, 111, 116, 119, 120, 124, 125, 127, 129, 131, 133, 136, 144, 145, 146, 147, 148, 149, 151, 155, 156, 157, 158, 166, 176, 196, 197, 199, 205, 208, 209, 214, 227, 230, 242, 251, 280, 290, 312, 313, 366, 375, 380, 382, 387, 388, 390, 403, 416, 420, 422, 424, 428, 429, 430, 439, 448, 458, 459, 460, 464, 465, 466, 467, 468, 470, 471, 473, 474, 475, 476, 477, 478, 479, 482, 484, 485, 486, 487, 489, 490, 491, 492, 493, 494, 495, 497, 498, 499, 500, 501, 502, 503, 504, 506, 507, 508, 509, 510, 516, 518, 519, 521, 532, 533, 535, 537, 538, 539, 541, 542, 544, 545, 560, 592, 593, 603], "gammapy_extra": 428, "gammapybaseconfig": 16, "gammapydeprecationwarn": [387, 479, 508, 569], "gammmapi": [397, 404], "gap": 139, "garcia": 448, "gather": [401, 407, 417], "gauss": [42, 51, 54, 103, 106, 130, 131, 157, 197, 209, 237, 238, 239, 240, 410, 445, 487, 499, 502, 521, 553, 554], "gauss_elong": 502, "gauss_temp": 502, "gaussian": [67, 68, 80, 81, 102, 120, 130, 137, 146, 153, 154, 158, 164, 166, 169, 197, 209, 236, 237, 238, 239, 240, 241, 246, 299, 300, 398, 406, 410, 415, 416, 432, 436, 455, 457, 459, 462, 464, 475, 477, 482, 486, 490, 492, 495, 497, 502, 504, 507, 521, 539, 541, 549, 551, 561, 562, 583, 584, 594], "gaussian1d": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40], "gaussian2d": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 50], "gaussian2dkernel": 120, "gaussian_compon": [67, 492], "gaussian_error": [137, 146], "gaussian_filt": [130, 209], "gaussian_model": 587, "gaussian_sigma": 495, "gaussianband2d": 447, "gaussianprior": [415, 459, 504], "gaussianspatialmodel": [80, 81, 116, 119, 261, 410, 432, 475, 476, 482, 502, 554], "gaussianspectralmodel": [262, 410, 502, 570], "gaussiantemporalmod": 439, "gaussiantemporalmodel": [274, 410, 435, 502, 587], "gb": [395, 397, 507, 509], "gc": [86, 103, 106, 110, 111, 116, 119, 120, 124, 129, 131, 136, 144, 145, 227, 251, 375, 380, 382, 390, 468, 470, 473, 475, 477, 479, 491, 493, 494, 499, 501, 502, 507, 508, 521, 523, 532, 533], "gc_3fhl": 521, "gc_3fhl_cutout": 521, "gc_3fhl_smooth": 521, "gc_imag": 479, "gc_po": 508, "gc_sep": 501, "gca": 459, "gcc": 424, "gcwzo6co": 489, "ge": 90, "geminga": 59, "gen_gaussian_model": 588, "gener": [16, 27, 33, 42, 45, 46, 47, 56, 82, 83, 84, 87, 88, 90, 91, 92, 101, 103, 104, 105, 106, 109, 110, 111, 118, 126, 155, 166, 169, 196, 197, 199, 200, 201, 205, 208, 209, 214, 226, 234, 235, 239, 240, 241, 242, 243, 259, 266, 275, 276, 278, 280, 281, 293, 336, 338, 341, 342, 343, 344, 351, 388, 390, 396, 398, 399, 400, 401, 403, 405, 406, 407, 408, 409, 410, 411, 412, 416, 417, 418, 421, 424, 430, 434, 435, 436, 439, 441, 446, 450, 453, 454, 455, 457, 458, 459, 460, 462, 464, 465, 466, 467, 468, 470, 471, 473, 474, 475, 476, 477, 478, 479, 482, 484, 485, 486, 487, 489, 490, 491, 492, 493, 494, 495, 497, 498, 499, 500, 501, 502, 503, 504, 506, 507, 508, 509, 510, 513, 516, 518, 519, 521, 531, 535, 540, 546, 548, 549, 551, 552, 553, 554, 556, 557, 558, 559, 560, 561, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 584, 585, 586, 587, 589, 590, 591, 592, 593, 594, 596, 598, 600, 601], "generalconfig": 16, "generalis": [127, 406, 433, 497], "generalized_gaussian_model": 588, "generalizedgaussianspatialmodel": [261, 436, 502, 555], "generalizedgaussiantemporalmodel": [274, 441, 502, 588], "generalrandom": 431, "generatejsonschema": [16, 84, 90, 105, 126], "gengauss": [241, 502, 555], "geodeticloc": 94, "geolat": 460, "geom": [16, 23, 83, 103, 106, 110, 111, 112, 115, 117, 118, 124, 125, 127, 129, 136, 154, 155, 164, 166, 169, 176, 183, 185, 186, 187, 188, 189, 190, 191, 192, 195, 196, 197, 199, 203, 204, 205, 207, 208, 209, 223, 224, 227, 228, 235, 237, 240, 251, 253, 255, 264, 265, 267, 269, 275, 279, 398, 400, 402, 436, 439, 448, 454, 458, 459, 460, 464, 465, 466, 467, 468, 470, 471, 473, 475, 477, 478, 479, 482, 484, 485, 486, 487, 489, 490, 491, 492, 493, 494, 495, 497, 498, 499, 500, 501, 502, 504, 508, 509, 518, 519, 521, 533, 542, 544, 545, 546, 547, 548, 552, 554, 555, 556, 557, 603], "geom_24_energy_bin": 548, "geom_6_energy_bin": 548, "geom_edisp": [103, 106, 110, 111, 493], "geom_energi": 548, "geom_exposur": [103, 106, 110, 111, 452, 493], "geom_imag": [471, 475, 548], "geom_irf": 400, "geom_psf": [103, 106, 110, 111, 493], "geom_tru": 433, "geomconfig": 16, "geometri": [23, 83, 100, 103, 106, 110, 111, 113, 114, 115, 118, 125, 127, 136, 137, 138, 146, 154, 155, 161, 164, 166, 169, 173, 176, 178, 183, 185, 186, 187, 188, 189, 190, 191, 192, 194, 195, 196, 197, 199, 200, 202, 203, 204, 205, 207, 208, 209, 210, 211, 223, 224, 227, 228, 237, 240, 251, 253, 255, 264, 265, 267, 269, 275, 279, 383, 393, 399, 402, 403, 433, 439, 450, 455, 464, 465, 466, 467, 470, 471, 473, 477, 478, 482, 493, 494, 498, 508, 509, 531, 533, 535, 543, 547, 596, 597], "geomspac": [127, 415, 494], "geq": [52, 53], "gerrit": 455, "get": [16, 19, 20, 26, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 82, 84, 85, 87, 88, 90, 91, 94, 96, 100, 103, 105, 107, 108, 110, 120, 124, 126, 128, 129, 132, 133, 136, 144, 148, 153, 154, 155, 161, 166, 169, 194, 195, 196, 197, 199, 200, 203, 204, 205, 207, 208, 209, 212, 218, 220, 221, 222, 223, 224, 225, 228, 229, 231, 232, 233, 236, 237, 238, 240, 244, 245, 246, 248, 252, 253, 254, 255, 256, 257, 258, 260, 263, 264, 265, 268, 269, 270, 271, 272, 273, 275, 276, 278, 279, 280, 282, 283, 322, 338, 387, 388, 392, 393, 394, 395, 396, 397, 401, 402, 404, 411, 413, 414, 415, 418, 419, 421, 422, 424, 425, 428, 430, 445, 446, 447, 448, 455, 458, 465, 467, 468, 473, 474, 475, 482, 485, 489, 492, 493, 495, 497, 498, 500, 501, 502, 504, 507, 508, 509, 510, 511, 513, 518, 519, 521, 523, 531, 535, 548, 596, 597, 601], "get_altaz": [85, 94, 453], "get_bia": 153, "get_bias_energi": 153, "get_bounding_box": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40], "get_by_coord": [196, 197, 199, 205, 208, 209, 498, 499, 508, 509, 547], "get_by_idx": [196, 197, 199, 205, 208, 209, 499, 547], "get_by_pix": [196, 197, 199, 205, 208, 209, 547], "get_cl": [462, 492, 500], "get_combined_flux_map": 137, "get_combined_significance_map": 138, "get_coord": [194, 195, 200, 204, 207, 432, 439, 448, 478, 499, 500, 544, 548], "get_dataset": [15, 465, 470, 471, 473, 484, 518], "get_edges_fixed_bin": 148, "get_edges_min_t": 148, "get_edisp_kernel": [154, 155, 434, 439, 493, 508, 539], "get_events_meta_data": 400, "get_excess_map": [15, 518], "get_filenam": [107, 108], "get_flux_point": [15, 125, 127, 411, 434, 465, 518], "get_group_by_idx": 411, "get_hdu": 322, "get_icr": [85, 94, 453], "get_idx": [194, 195, 204, 207, 548], "get_image_by_coord": [196, 197, 199, 205, 208, 209, 499], "get_image_by_idx": [196, 197, 199, 205, 208, 209], "get_image_by_pix": [196, 197, 199, 205, 208, 209], "get_index_list": 195, "get_irfs_featur": [312, 313, 453, 503], "get_kernel": 120, "get_light_curv": 15, "get_mean": 153, "get_observ": [15, 82, 96, 312, 313, 430, 441, 460, 464, 465, 466, 470, 471, 473, 475, 477, 484, 485, 487, 489, 498, 503, 506, 509, 516, 518, 519, 535, 542, 544, 545], "get_ogip_meta": 108, "get_pix": 207, "get_pointing_altaz": [88, 503], "get_pointing_icr": [88, 453, 475, 498, 519], "get_psf_kernel": [164, 166, 169, 454, 455, 508], "get_random_st": [33, 42, 45, 46, 47, 103, 104, 106, 109, 110, 111, 155, 166, 169, 196, 197, 199, 205, 208, 209, 226, 234, 239, 241, 242, 243, 259, 266, 278, 281, 293, 336, 341, 342, 343, 344, 387], "get_rebinned_axi": 485, "get_resolut": 153, "get_respons": 446, "get_scal": 120, "get_scale_model": [128, 129, 132], "get_spectrum": [196, 197, 199, 205, 208, 209], "get_subcovari": 212, "get_transform": [468, 475, 553, 554], "get_valid_path": 107, "get_wcs_coord_and_weight": 204, "getattr": 415, "getitem": 446, "getlogg": [387, 471, 475, 484, 485, 486, 489, 516], "getter": 388, "getting_start": 407, "gev": [17, 18, 19, 20, 21, 22, 24, 25, 27, 74, 77, 129, 136, 196, 197, 199, 201, 205, 208, 209, 462, 466, 468, 473, 474, 479, 482, 486, 487, 491, 492, 498, 499, 500, 501, 507, 508, 509, 521, 548, 573, 596, 597], "gev2": [19, 491], "gevgevgev1": 462, "gf87708c9b": [105, 126, 425, 458, 460, 464, 465, 466, 467, 468, 470, 471, 473, 474, 475, 476, 477, 478, 479, 484, 485, 486, 487, 491, 492, 493, 495, 498, 499, 500, 501, 502, 504, 506, 507, 508, 509, 510, 518, 519, 521, 552, 553, 554, 555, 556, 557, 558, 559, 560, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 585, 586, 587, 588, 589, 590, 591, 592, 593], "gh": [387, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 418], "gigu\u00e8r": [30, 31, 32, 39], "git": [86, 267, 387, 388, 390, 392, 394, 395, 413, 417, 421, 450], "github": [388, 390, 391, 392, 393, 395, 396, 405, 407, 413, 416, 417, 418, 421, 423, 428, 429, 430, 431, 432, 433, 434, 435, 436, 439, 444, 445, 446, 447, 448, 449], "giuliani": 400, "giunti": [429, 430, 431, 432, 433, 434, 435, 436, 439, 441, 442, 450, 453], "give": [6, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 87, 91, 102, 143, 298, 299, 387, 392, 396, 397, 401, 402, 403, 404, 407, 408, 413, 418, 429, 431, 433, 441, 454, 464, 465, 468, 476, 478, 485, 489, 490, 492, 495, 497, 498, 499, 502, 507, 508, 518, 535, 540, 598, 599, 601, 602], "given": [16, 17, 18, 19, 20, 21, 22, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 42, 46, 51, 52, 53, 67, 68, 69, 80, 82, 83, 84, 85, 87, 88, 90, 91, 94, 96, 99, 100, 102, 103, 104, 105, 106, 109, 110, 111, 113, 114, 122, 124, 125, 126, 127, 128, 130, 132, 133, 134, 135, 136, 137, 144, 145, 146, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 160, 161, 163, 164, 165, 166, 167, 168, 169, 170, 178, 179, 182, 184, 186, 187, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 214, 218, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 248, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 275, 276, 277, 278, 279, 280, 281, 282, 283, 290, 292, 294, 300, 312, 314, 317, 318, 325, 332, 336, 339, 340, 348, 374, 375, 380, 384, 387, 394, 395, 396, 397, 398, 399, 400, 401, 402, 404, 406, 410, 411, 413, 415, 428, 433, 439, 447, 448, 453, 458, 459, 460, 462, 465, 468, 477, 478, 479, 482, 484, 485, 486, 491, 492, 493, 494, 497, 498, 499, 500, 502, 507, 508, 513, 518, 521, 531, 532, 533, 535, 539, 540, 544, 545, 547, 548, 555, 559, 563, 595, 597, 598, 599, 600], "glast": 508, "glat": [41, 67, 68, 83, 387, 464, 492, 499, 508], "glat_err": 492, "glat_pnt": [475, 507], "glimps": [509, 513, 520], "gll_iem_v06_cutout": [196, 197, 199, 205, 208, 209], "gll_iem_v06_gc": [477, 499, 501, 502, 508], "gll_psc_v16": 61, "gll_psc_v20": 492, "gll_psc_v32": 65, "gll_psch_v09": 58, "gll_psch_v13": 62, "glob": [82, 388, 493, 494], "global": [16, 33, 42, 45, 46, 47, 100, 103, 104, 106, 109, 110, 111, 155, 166, 169, 194, 195, 196, 197, 199, 204, 205, 207, 208, 209, 214, 226, 234, 239, 241, 242, 243, 259, 266, 278, 281, 293, 336, 338, 341, 342, 343, 344, 387, 391, 393, 416, 436, 453, 464, 475, 476, 487, 501, 504, 533, 596], "global_dataset": 498, "global_to_loc": 195, "glon": [41, 67, 68, 83, 387, 464, 492, 499, 508], "glon_pnt": [475, 507], "glossari": [407, 450, 531, 548], "glue": 535, "glueviz": 404, "go": [50, 87, 91, 390, 397, 407, 412, 416, 450, 458, 459, 460, 462, 464, 465, 466, 467, 468, 470, 471, 473, 474, 475, 476, 477, 478, 479, 482, 484, 485, 486, 487, 489, 490, 491, 492, 493, 494, 495, 497, 498, 499, 500, 501, 502, 503, 504, 506, 507, 508, 509, 510, 516, 518, 519, 521, 523, 552, 553, 554, 555, 556, 557, 558, 559, 560, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 585, 586, 587, 588, 589, 590, 591, 592, 593, 598], "goal": [392, 401, 415, 495], "goe": [41, 52, 377, 387, 406, 418, 479, 504], "gogia": 446, "good": [82, 86, 102, 127, 304, 311, 387, 392, 394, 395, 396, 397, 398, 401, 403, 404, 405, 407, 416, 459, 464, 466, 467, 471, 482, 485, 486, 490, 491, 493, 495, 498, 500, 502, 508, 509, 513, 558, 559, 597, 602], "googl": [87, 91, 407, 417, 455], "got": 507, "gov": [58, 60, 61, 62, 64, 65, 101, 153, 201, 407, 576], "gp": [82, 83, 89, 388, 397, 403, 470, 473, 475, 487, 507, 509], "gpg": 390, "gpl3": 387, "gps_baseline_110380": [82, 83, 507], "gradient": [19, 20, 26, 221, 222, 225, 229, 231, 232, 233, 238, 244, 245, 248, 252, 254, 256, 257, 258, 263, 268, 270, 271, 272, 273, 276, 280, 416], "grai": [378, 544, 573], "grand": 387, "grant": [390, 413], "granular": 490, "grayify_colormap": 406, "grb": [486, 490], "great": [392, 401, 406, 445, 513, 514], "greater": [173, 380], "green": [102, 110, 111, 447, 476, 503, 504], "grei": 487, "grep": 423, "grid": [17, 18, 21, 22, 24, 25, 27, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 128, 131, 157, 165, 167, 196, 197, 199, 201, 205, 208, 209, 223, 224, 228, 237, 240, 253, 255, 264, 265, 269, 275, 279, 286, 380, 387, 398, 403, 416, 431, 433, 495, 547, 548, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 585, 586, 587, 588, 589, 590, 591], "gridsearch": [214, 495], "gridspec": 374, "gridspec_kw": [468, 475, 484, 486, 563], "ground": [95, 402, 507, 599], "group": [86, 87, 91, 92, 128, 129, 132, 133, 136, 154, 194, 195, 196, 197, 199, 200, 201, 204, 205, 206, 207, 208, 209, 312, 393, 402, 406, 407, 408, 411, 417, 420, 430, 433, 435, 439, 445, 448, 461, 468, 484, 486, 513, 533, 535, 549, 598], "group_1": 503, "group_2": 503, "group_bi": [87, 91, 411], "group_by_axi": 411, "group_by_label": [92, 503], "group_high_zenith": 503, "group_low_zenith": 503, "group_siz": [148, 485], "group_tabl": [86, 201, 206], "grouped_observ": 503, "grow": [395, 406, 447], "grown": 407, "gr\u00e9aux": 453, "gsfc": [58, 60, 61, 62, 64, 65, 101, 153, 201, 407, 576], "gt": 497, "gt100_wtcnt": 77, "gtdrm": [153, 154], "gtexpcube2": 508, "gti": [82, 87, 88, 89, 100, 102, 103, 106, 110, 111, 125, 127, 129, 132, 137, 146, 170, 206, 267, 393, 396, 397, 400, 401, 402, 411, 431, 433, 434, 436, 449, 453, 454, 477, 485, 486, 489, 493, 498, 507, 509, 510, 531, 596, 597], "gti_1": 532, "gti_2": 532, "gti_t0": 486, "gtimetadata": 414, "gtmktime": [397, 508], "gtobsim": 400, "gtol": 495, "gtpsf": [154, 155, 161, 166, 169, 201, 468, 508], "gtselect": [397, 508], "guarante": [395, 410, 412, 416], "guess": [127, 195, 197, 454], "guid": [390, 403, 405, 420, 421, 422, 425, 448, 473, 513, 535, 550, 561, 583, 594], "guidelin": [387, 391, 425, 447], "guiger": 31, "gz": [58, 60, 61, 62, 64, 65, 66, 67, 82, 83, 86, 88, 91, 94, 103, 106, 110, 111, 116, 119, 120, 124, 129, 131, 136, 144, 145, 158, 227, 230, 251, 280, 375, 380, 382, 388, 409, 448, 459, 465, 468, 476, 477, 478, 479, 492, 493, 494, 497, 499, 501, 502, 507, 508, 509, 516, 518, 519, 521, 532, 533, 535, 537, 538, 539, 541, 563, 603], "h": [26, 67, 82, 86, 87, 91, 95, 128, 130, 155, 182, 196, 197, 199, 205, 208, 209, 293, 377, 407, 410, 416, 420, 424, 425, 433, 448, 455, 457, 458, 459, 460, 464, 465, 467, 471, 474, 476, 484, 485, 486, 489, 491, 495, 497, 498, 499, 502, 503, 504, 506, 507, 508, 509, 511, 512, 513, 516, 518, 519, 530, 535, 548, 586, 587, 597, 598], "h0": [307, 476], "h01g": 498, "h05": [45, 49], "h1": [307, 476], "h38qk1j8": 489, "h_0": [476, 600], "h_1": [476, 600], "h_i": 130, "ha": [19, 20, 26, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 77, 80, 87, 91, 102, 103, 106, 110, 111, 124, 125, 127, 168, 190, 194, 195, 196, 197, 199, 203, 204, 205, 207, 208, 209, 217, 221, 222, 224, 225, 228, 229, 231, 232, 233, 234, 237, 238, 239, 240, 241, 242, 243, 244, 245, 248, 252, 254, 255, 256, 257, 258, 259, 263, 264, 265, 266, 267, 268, 270, 271, 272, 273, 276, 278, 279, 280, 380, 382, 384, 387, 388, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 418, 419, 421, 435, 436, 439, 441, 442, 448, 449, 450, 452, 453, 454, 455, 459, 460, 464, 465, 466, 471, 476, 478, 484, 485, 487, 491, 492, 493, 495, 498, 499, 500, 502, 503, 504, 507, 509, 510, 518, 519, 531, 532, 535, 540, 544, 545, 547, 548, 553, 554, 582, 595, 598, 600], "habilit": 311, "hack": 444, "had": [387, 393, 395, 413, 436, 442, 446, 447], "hadron": [283, 393, 398, 471, 493, 507, 531, 544], "hajlaoui": [436, 439], "hal": 413, "half": [166, 169, 201, 207, 279], "halo": [17, 22, 523], "halv": [140, 298, 454], "halving_coord": 490, "halving_err": 490, "hand": [178, 387, 390, 395, 398, 407, 413, 415, 451, 495, 513, 535], "handbook": [407, 513], "handi": 473, "handl": [3, 16, 84, 90, 105, 125, 126, 127, 182, 203, 301, 386, 388, 391, 399, 400, 401, 403, 408, 410, 411, 414, 417, 420, 422, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 441, 442, 443, 444, 445, 446, 447, 449, 450, 452, 453, 464, 466, 473, 474, 475, 477, 493, 497, 499, 501, 502, 508, 509, 513, 519, 520, 521, 531, 532, 535, 596, 597], "handler_map": 384, "hanna": [454, 455], "hap": 403, "happen": [82, 390, 392, 394, 395, 401, 405, 418, 465, 501, 513, 518, 519, 520, 531, 535, 600], "happi": [390, 394, 407, 428, 429, 448], "hard": [387, 388, 410, 415, 434, 504], "harder": [394, 598], "hardli": 414, "harri": [443, 444], "harvard": [33, 38, 50, 52, 53, 58, 60, 61, 62, 83, 88, 156, 214, 248, 283, 284, 407, 495], "has_any_t": [125, 127], "has_energy_axi": [194, 195, 204, 207], "has_invers": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40], "has_masked_column": [87, 91], "has_masked_valu": [87, 91], "has_mixin_column": [87, 91], "has_offset_axi": [150, 151, 152, 153, 156, 157, 158, 160, 163, 165, 167, 168], "has_single_spatial_bin": [154, 155, 161, 166, 169], "has_stat_profil": [125, 127], "has_success": [125, 127], "has_ul": [125, 127], "has_user_bounding_box": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40], "has_user_invers": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40], "hasattr": 387, "hasn": 392, "hatch": 487, "have": [16, 19, 20, 26, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 67, 82, 84, 87, 90, 91, 95, 100, 105, 108, 112, 117, 125, 126, 127, 128, 132, 134, 144, 145, 153, 154, 155, 164, 166, 169, 176, 178, 190, 194, 195, 196, 197, 199, 203, 204, 205, 207, 208, 209, 221, 222, 223, 224, 225, 226, 227, 228, 229, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 248, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 275, 276, 277, 278, 279, 280, 281, 282, 314, 338, 344, 384, 386, 387, 388, 389, 390, 392, 393, 394, 396, 398, 400, 401, 404, 405, 406, 407, 408, 409, 410, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 428, 429, 430, 433, 436, 439, 441, 442, 445, 447, 448, 449, 450, 451, 453, 454, 455, 458, 459, 460, 464, 465, 466, 467, 468, 470, 471, 473, 474, 475, 476, 477, 478, 479, 482, 485, 486, 487, 489, 492, 493, 494, 495, 497, 499, 500, 501, 502, 503, 504, 507, 508, 509, 513, 518, 519, 521, 523, 531, 532, 533, 535, 542, 546, 547, 548, 559, 571, 595, 598, 601, 602], "haven": 424, "hawc": [55, 59, 63, 72, 76, 97, 146, 147, 425, 433, 439, 447, 450, 451, 453, 457, 511, 512, 513, 530, 543, 597], "hawc19_flux_point": [127, 474, 535], "hawc_crab": [127, 474, 535], "hawc_pass4_public_crab": [146, 147], "hd": 67, "hdr": 414, "hdr_dict": 414, "hdu": [67, 82, 83, 85, 86, 87, 88, 94, 103, 106, 110, 111, 125, 127, 150, 151, 152, 153, 154, 155, 156, 157, 158, 160, 161, 163, 165, 166, 167, 168, 169, 170, 194, 195, 196, 197, 198, 199, 200, 201, 203, 204, 205, 206, 207, 208, 209, 322, 373, 388, 397, 427, 442, 444, 447, 450, 451, 497, 499, 507, 509, 510, 531, 532, 535, 537, 538, 539, 541, 548, 593, 603], "hdu1": 153, "hdu2": 153, "hdu_al": 477, "hdu_band": [125, 127, 154, 155, 161, 166, 169, 194, 195, 196, 197, 199, 200, 203, 204, 205, 207, 208, 209], "hdu_class": [82, 87, 322, 507, 509, 510], "hdu_class_uniqu": 87, "hdu_evt": 477, "hdu_filenam": 509, "hdu_gti": 477, "hdu_hdu": 82, "hdu_index": 82, "hdu_list": [154, 155, 157, 161, 165, 166, 167, 169, 196, 197, 208, 209], "hdu_loc": 87, "hdu_nam": 322, "hdu_ob": 82, "hdu_out": [196, 197], "hdu_region": [204, 205], "hdu_tabl": [82, 509], "hdu_table_filenam": 82, "hdu_typ": [82, 87, 507, 509, 510], "hdu_type_uniqu": 87, "hduclas2": 497, "hduclas3": 497, "hduclas4": 497, "hduclasn": 497, "hduindext": [82, 322, 509], "hdulist": [103, 106, 108, 110, 111, 125, 127, 150, 151, 152, 153, 154, 155, 156, 157, 158, 160, 161, 163, 165, 166, 167, 168, 169, 194, 195, 196, 197, 199, 203, 204, 205, 207, 208, 209, 477, 499, 531], "hduloc": [87, 103], "he": [283, 397, 402], "hea": 402, "head": 388, "header": [82, 83, 84, 85, 86, 87, 88, 90, 91, 94, 100, 102, 103, 105, 106, 107, 108, 110, 111, 125, 126, 127, 153, 154, 155, 161, 166, 169, 194, 195, 196, 197, 198, 199, 200, 201, 203, 205, 206, 207, 208, 209, 279, 324, 369, 370, 373, 392, 397, 400, 414, 433, 441, 443, 448, 450, 453, 466, 478, 499, 507, 602], "healpi": [195, 386, 394, 396, 404, 419, 420, 422, 431, 439, 458, 460, 464, 465, 466, 467, 468, 470, 471, 473, 474, 475, 476, 477, 478, 479, 484, 485, 486, 487, 491, 492, 493, 495, 498, 499, 500, 501, 502, 504, 506, 507, 508, 509, 510, 518, 519, 521, 546], "healpix": [13, 195, 196, 197, 199, 205, 208, 209, 386, 394, 396, 401, 439, 447, 499, 508, 547], "healpix_to_imag": 440, "heapsort": [87, 91], "hear": 416, "heart": 600, "heasarc": [153, 201], "heatmap": [376, 381], "heavi": [448, 449], "heavier": 473, "heavili": 439, "hegra": [97, 284], "heidelberg": [387, 417], "heidt": 490, "height": [16, 29, 87, 91, 94, 129, 347, 465, 470, 471, 473, 479, 484, 487, 491, 499, 500, 502, 518, 544, 548], "heighten": 490, "helen": 445, "hello": [424, 475], "help": [11, 87, 91, 295, 301, 387, 390, 392, 394, 401, 402, 403, 407, 413, 417, 418, 419, 424, 425, 428, 429, 430, 447, 448, 450, 492, 498, 499, 501, 508, 521, 535, 598], "helper": [13, 322, 327, 394, 396, 401, 402, 403, 406, 418, 424, 430, 431, 432, 433, 439, 441, 444, 446, 447, 453, 454, 479, 492, 500, 501, 544, 596, 603], "henc": [87, 91, 246, 403, 470, 471, 533, 548, 600], "here": [13, 82, 83, 87, 91, 101, 103, 110, 127, 138, 147, 151, 156, 165, 214, 292, 294, 297, 375, 386, 387, 388, 389, 390, 393, 394, 399, 400, 401, 402, 403, 404, 405, 406, 407, 413, 414, 415, 416, 417, 418, 420, 422, 424, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 439, 441, 442, 444, 445, 446, 447, 448, 449, 450, 453, 454, 455, 458, 459, 460, 462, 464, 465, 466, 467, 468, 470, 471, 473, 475, 476, 477, 478, 482, 484, 485, 486, 487, 489, 490, 492, 493, 494, 495, 497, 498, 499, 500, 503, 504, 507, 508, 509, 513, 518, 519, 521, 525, 531, 535, 540, 542, 552, 553, 554, 555, 556, 557, 558, 559, 560, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 585, 586, 587, 588, 589, 590, 591, 592, 593, 598, 599, 600, 602, 603], "hereaft": 477, "herebi": 504, "heritag": 413, "herm": [287, 289, 454], "herr": 416, "hess": [16, 55, 67, 82, 83, 86, 88, 91, 96, 97, 102, 110, 111, 133, 148, 149, 156, 158, 176, 214, 290, 312, 313, 388, 395, 396, 401, 403, 407, 416, 417, 420, 424, 427, 429, 432, 443, 444, 447, 448, 457, 460, 462, 464, 465, 466, 471, 473, 475, 476, 485, 487, 489, 492, 493, 494, 495, 498, 503, 504, 506, 508, 510, 512, 516, 518, 519, 523, 532, 533, 535, 537, 538, 539, 541, 542, 544, 545, 603], "hess2": [156, 537], "hess_dl3_dr1_obs_id_020136": [88, 158, 388, 537, 538, 539, 541], "hess_dl3_dr1_obs_id_023523": [83, 86, 532], "hess_dl3_dr1_obs_id_023526": 532, "hess_ecpl": [284, 464], "hess_pl": 284, "hessian": 533, "heterogen": [414, 462, 474], "hfm": 67, "hgp": [67, 80, 81, 124, 407, 433, 445, 447, 448, 530], "hgps_catalog_v1": 67, "hgps_sourc": 67, "hgpsc": [67, 492], "hi": [387, 446], "hi_bnd": 201, "hi_threshold": 153, "hidden": 398, "hide": [13, 392, 409], "hierarch": [13, 25, 312, 354, 396, 398, 414, 454, 535, 547], "hierarchi": [312, 398, 432], "hierarchical_clust": [453, 503], "high": [6, 15, 58, 62, 63, 83, 153, 201, 337, 387, 391, 392, 393, 400, 401, 402, 407, 414, 416, 431, 432, 433, 434, 435, 439, 447, 448, 457, 458, 462, 465, 468, 470, 473, 479, 482, 484, 491, 492, 493, 494, 498, 500, 507, 508, 509, 510, 513, 519, 520, 521, 522, 530, 531, 532, 533, 540, 543, 596, 597, 598, 599], "high_zenith": 503, "higher": [194, 195, 196, 197, 199, 204, 205, 207, 208, 209, 241, 390, 393, 398, 403, 406, 408, 421, 462, 478, 490, 497, 499, 542, 548], "highest": [144, 182, 490, 498, 507, 521], "highli": 502, "highlight": 598, "hint": [414, 468, 533], "hire": [157, 407, 525, 527, 528, 529, 531, 532, 537, 538, 539, 541, 544, 548, 600, 603], "hist": [83, 110, 111, 205, 209, 380, 467, 504], "histogram": [83, 110, 111, 201, 205, 209, 380, 453, 487, 548, 597], "histori": [401, 413, 450], "hit": 416, "hli": [400, 434, 435, 439, 450, 457, 461, 463, 513, 531, 534, 597], "hli_spectrum_analysi": 465, "hline": 553, "hoc": 401, "hold": [69, 82, 89, 92, 96, 100, 164, 235, 314, 396, 397, 399, 402, 598, 600], "home": [16, 351, 390, 458, 460, 464, 465, 466, 467, 468, 470, 471, 473, 474, 475, 476, 477, 478, 479, 482, 484, 485, 486, 487, 489, 491, 492, 493, 495, 498, 499, 500, 501, 502, 504, 506, 507, 508, 509, 510, 518, 519, 521, 560, 563, 569, 586, 592, 593], "homebrew": 404, "homework": 430, "homogen": [87, 91, 436], "honk": 392, "hood": [465, 513, 518, 520], "hook": [390, 450], "hope": 392, "hopefulli": 394, "horizont": [85, 95, 159, 357, 497, 602], "host": [387, 416], "hour": [67, 94, 390, 403, 417, 418, 458, 492, 498, 499, 535], "hover": 388, "how": [16, 19, 20, 82, 83, 84, 85, 90, 99, 105, 126, 127, 129, 131, 176, 197, 207, 209, 338, 344, 389, 392, 395, 399, 401, 403, 404, 406, 409, 410, 413, 414, 416, 418, 419, 420, 424, 425, 428, 429, 430, 433, 434, 441, 443, 446, 447, 448, 453, 454, 458, 459, 462, 464, 465, 466, 467, 468, 470, 471, 473, 474, 475, 476, 477, 478, 479, 482, 484, 485, 486, 487, 489, 490, 492, 493, 494, 495, 496, 500, 501, 502, 503, 504, 506, 507, 508, 509, 510, 511, 513, 514, 518, 520, 521, 525, 531, 533, 536, 540, 544, 546, 547, 563, 582, 596, 598, 599, 600, 602, 603], "howev": [77, 87, 91, 102, 124, 129, 299, 386, 387, 388, 390, 394, 397, 400, 401, 405, 413, 415, 416, 421, 460, 471, 479, 487, 489, 491, 492, 493, 495, 504, 509, 510, 513, 514, 531, 535, 547, 548, 554, 571, 598], "howto": [407, 450, 451], "hpx": [195, 196, 197, 199, 208, 209, 401, 439, 499, 508], "hpx2wc": [196, 197], "hpx_map": [196, 197], "hpx_pixel": 401, "hpx_reg": 195, "hpxgeom": [125, 194, 196, 197, 434, 439, 450, 508, 546], "hpxmap": [197, 199, 546], "hpxndmap": [275, 439, 546], "hpxsparsemap": 433, "hpxtowcsmap": [196, 197], "hr": [477, 478, 482, 486], "hspace": 491, "hspec": [443, 444, 445], "hst": 229, "hstack": [87, 91, 400], "htlgdnov": 489, "html": [83, 87, 91, 101, 128, 153, 189, 195, 201, 204, 207, 214, 227, 251, 280, 314, 341, 342, 387, 388, 395, 407, 412, 413, 417, 418, 426, 447, 458, 467, 470, 473, 475, 482, 486, 495, 497, 507, 532, 546, 548, 576], "htmlcov": 418, "http": [11, 13, 33, 34, 38, 50, 52, 53, 58, 60, 61, 62, 64, 65, 67, 83, 87, 88, 91, 101, 128, 138, 153, 156, 182, 189, 195, 201, 204, 207, 214, 227, 248, 251, 257, 258, 272, 273, 280, 283, 284, 307, 309, 314, 341, 342, 354, 404, 407, 412, 413, 416, 417, 418, 419, 420, 421, 422, 426, 430, 447, 458, 464, 467, 470, 473, 474, 475, 482, 486, 491, 492, 495, 497, 507, 532, 546, 548, 576, 580, 581, 598], "hubert": 448, "hue": 378, "huestart": 378, "huge": [418, 554], "hugovk": 429, "human": [368, 398, 416, 418, 441, 465, 518], "hundr": 509, "hypercub": [499, 547, 548], "hypothes": [290, 307, 309, 453, 535, 600], "hypothesi": [125, 127, 128, 129, 132, 133, 134, 290, 292, 294, 455, 462, 468, 476, 494, 533, 535, 597, 600], "hysteresi": 489, "hz": [344, 521], "i": [11, 13, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 45, 46, 47, 50, 51, 52, 53, 54, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 74, 75, 76, 77, 78, 79, 80, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 113, 114, 115, 116, 118, 119, 120, 122, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 160, 161, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 176, 177, 178, 179, 180, 182, 183, 184, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 248, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 286, 288, 290, 291, 292, 293, 294, 295, 297, 298, 299, 300, 301, 302, 303, 307, 308, 309, 311, 312, 314, 316, 320, 322, 325, 326, 327, 332, 334, 335, 338, 341, 342, 343, 344, 346, 347, 350, 353, 355, 356, 358, 362, 364, 365, 369, 370, 371, 373, 374, 375, 376, 377, 378, 380, 381, 382, 383, 384, 386, 388, 389, 391, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 458, 459, 460, 462, 464, 465, 466, 467, 468, 470, 471, 473, 474, 475, 476, 477, 478, 482, 484, 485, 486, 487, 489, 490, 491, 492, 493, 494, 495, 497, 498, 499, 500, 501, 502, 503, 504, 506, 507, 508, 509, 510, 513, 518, 519, 520, 521, 523, 524, 525, 530, 531, 532, 533, 534, 535, 537, 538, 539, 540, 541, 542, 543, 544, 545, 547, 548, 552, 553, 554, 555, 556, 557, 558, 559, 560, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 585, 586, 587, 588, 589, 590, 591, 592, 593, 595, 596, 597, 598, 599, 600, 601, 602, 603], "i0": [87, 91], "i1": [87, 91], "i4": 479, "i8": [499, 521], "i_0": [196, 197, 199, 205, 208, 209], "i_hpx": [196, 197, 199, 205, 208, 209], "i_lat": [196, 197, 199, 205, 208, 209], "i_lon": [196, 197, 199, 205, 208, 209], "i_n": [196, 197, 199, 205, 208, 209], "i_scan": 504, "iact": [82, 83, 85, 94, 176, 179, 183, 393, 396, 397, 398, 399, 401, 403, 407, 425, 430, 444, 446, 448, 462, 468, 471, 498, 499, 501, 507, 508, 510, 532, 537, 538, 539, 541, 595, 597], "iactbasicimageestim": [393, 447], "iau": [52, 427, 431], "iau2015": 52, "ic": 573, "ic8wbpii": 489, "icon": 596, "icr": [83, 85, 88, 91, 94, 95, 96, 103, 106, 110, 111, 113, 114, 144, 166, 176, 179, 195, 196, 197, 199, 202, 204, 207, 208, 209, 223, 224, 228, 237, 240, 255, 264, 265, 312, 313, 348, 387, 388, 411, 432, 464, 465, 466, 467, 468, 471, 474, 475, 477, 478, 482, 484, 485, 486, 487, 489, 492, 493, 497, 498, 499, 500, 502, 503, 506, 507, 508, 509, 518, 519, 532, 535, 539, 544, 548, 553, 554, 555, 557, 558, 559], "icrc": 443, "id": [17, 19, 20, 21, 22, 24, 25, 26, 27, 67, 80, 82, 83, 87, 88, 91, 92, 113, 114, 400, 403, 424, 465, 467, 477, 479, 482, 487, 492, 502, 507, 508, 509, 510, 518, 532], "id_obs_vela": 487, "idea": [392, 395, 402, 406, 407, 408, 465, 489, 497, 503, 508, 518], "ideal": [389, 390, 397, 401, 402, 411, 415, 417, 462, 508], "idempot": [16, 84, 90, 105, 126], "ident": [362, 402, 450, 464, 466], "identif": [67, 393, 492], "identifi": [67, 88, 104, 109, 195, 267, 387, 397, 398, 400, 403, 412, 413, 418, 434, 468, 477, 490, 492, 493, 502, 507, 509, 534], "identified_object": 492, "idx": [83, 87, 91, 92, 100, 194, 195, 196, 197, 198, 199, 200, 201, 204, 205, 206, 207, 208, 209, 251, 467, 477, 486, 492, 495, 499, 547], "idx1": 495, "idx2": 495, "idx_glob": 195, "idx_loc": 195, "ie": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 124, 136, 413, 459, 489, 501, 502, 531, 597], "iem": [501, 508], "iem_minus_iem": 499, "iem_plus_iem": 499, "iem_times_two": 499, "ignacio": 449, "ignasi": 443, "ignor": [11, 16, 84, 87, 90, 91, 102, 105, 126, 139, 160, 170, 199, 217, 219, 235, 314, 326, 388, 441, 455, 464, 479, 486, 487, 493, 500, 518, 535, 598], "ii": [212, 445], "ij": 212, "ijiele8u": 489, "ilist": 195, "illustr": [110, 111, 388, 397, 399, 400, 401, 403, 406, 416, 466, 468, 474, 479, 493, 498, 499, 501, 502, 508, 513, 525, 531, 544, 545, 553, 554, 563, 596], "illustrate_colormap": 406, "iloc": [87, 91], "im": [376, 495], "imag": [103, 106, 110, 111, 120, 130, 131, 144, 155, 156, 157, 163, 165, 166, 167, 169, 171, 181, 194, 195, 196, 197, 199, 204, 205, 207, 208, 209, 279, 303, 306, 351, 373, 375, 376, 377, 378, 382, 387, 395, 396, 398, 403, 404, 407, 408, 418, 420, 425, 427, 428, 429, 432, 433, 434, 440, 444, 445, 446, 447, 448, 455, 457, 461, 470, 473, 479, 480, 481, 498, 500, 502, 507, 519, 521, 531, 540, 544, 545, 546, 547, 548, 596, 597, 603], "image_analysi": [407, 428], "image_err": 131, "image_fitting_with_sherpa": [407, 449], "image_pip": 447, "image_profil": 446, "imagehdu": [196, 197, 208, 209], "imagenorm": [377, 378, 603], "imageprofil": 131, "images_t": 475, "imagin": 598, "img": [375, 499], "iminuit": [214, 386, 404, 413, 416, 439, 441, 448, 452, 453, 458, 460, 464, 465, 466, 467, 468, 470, 471, 473, 474, 475, 476, 477, 478, 479, 484, 485, 486, 487, 491, 492, 493, 495, 498, 499, 500, 501, 502, 504, 506, 507, 508, 509, 510, 518, 519, 521, 595], "immut": 227, "impact": [394, 400, 404, 509], "imperfect": 498, "implement": [19, 20, 103, 106, 110, 111, 138, 147, 217, 221, 224, 225, 228, 229, 231, 232, 233, 234, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 248, 255, 256, 257, 258, 259, 263, 264, 265, 266, 268, 271, 272, 273, 278, 279, 293, 299, 387, 388, 392, 393, 395, 396, 399, 400, 401, 402, 403, 404, 405, 408, 409, 410, 411, 412, 414, 429, 430, 431, 432, 433, 434, 435, 436, 439, 440, 441, 446, 447, 449, 450, 453, 454, 455, 460, 470, 485, 490, 491, 492, 498, 499, 500, 523, 531, 533, 535, 540, 541, 542, 582, 595, 596, 597, 598, 599, 602], "implent": 387, "impli": [241, 387, 406, 416, 531, 597], "implic": 409, "implicit": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 540], "implicitli": 498, "import": [19, 20, 26, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 66, 67, 82, 83, 84, 85, 86, 87, 88, 89, 91, 94, 96, 102, 103, 105, 106, 110, 111, 112, 116, 117, 119, 120, 124, 125, 126, 127, 129, 131, 133, 136, 144, 145, 146, 147, 148, 149, 151, 153, 155, 156, 157, 158, 164, 166, 176, 179, 194, 195, 196, 197, 198, 199, 200, 201, 202, 204, 205, 206, 207, 208, 209, 214, 218, 220, 221, 222, 225, 227, 229, 231, 232, 233, 238, 242, 244, 245, 248, 249, 251, 252, 254, 256, 257, 258, 263, 268, 270, 271, 272, 273, 276, 280, 284, 290, 293, 299, 300, 312, 313, 334, 344, 354, 366, 367, 372, 375, 377, 378, 380, 382, 388, 390, 392, 393, 394, 396, 397, 398, 399, 400, 401, 402, 403, 406, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 423, 424, 435, 445, 447, 452, 454, 455, 458, 459, 460, 462, 464, 465, 466, 467, 468, 470, 471, 473, 474, 475, 476, 477, 478, 479, 484, 485, 486, 487, 489, 490, 491, 492, 493, 494, 495, 497, 498, 499, 500, 501, 502, 503, 504, 506, 507, 508, 509, 510, 516, 518, 519, 521, 524, 525, 527, 528, 529, 531, 532, 533, 535, 537, 538, 539, 541, 542, 544, 545, 546, 547, 548, 552, 553, 554, 555, 556, 557, 558, 559, 560, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 585, 586, 587, 588, 589, 590, 591, 592, 593, 596, 598, 599, 600, 602, 603], "importantli": [411, 448, 460, 598], "importerror": [87, 91], "impos": [452, 458, 544], "imposs": 416, "improv": [109, 290, 389, 391, 392, 393, 395, 396, 397, 401, 402, 403, 404, 405, 406, 407, 412, 418, 419, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 439, 440, 442, 443, 444, 445, 446, 447, 448, 449, 451, 499, 507, 535, 545, 553], "imshow": [103, 106, 164, 197, 209, 375, 381, 446, 499, 521], "in2p3": 413, "in_memori": [88, 535], "in_memory_gener": 92, "in_safe_data_rang": [103, 106, 110, 111], "inaccur": 387, "incex": [16, 84, 90, 105, 126], "incid": [393, 597], "includ": [16, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 45, 82, 83, 84, 87, 88, 90, 91, 105, 126, 132, 154, 164, 170, 172, 173, 179, 180, 184, 194, 195, 204, 207, 252, 322, 386, 387, 390, 393, 395, 398, 399, 400, 401, 403, 404, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 420, 429, 431, 436, 447, 452, 453, 454, 455, 458, 473, 474, 476, 477, 479, 486, 491, 492, 494, 495, 498, 500, 501, 502, 507, 509, 523, 525, 531, 533, 534, 545, 547, 595, 599, 602], "include_irf": [88, 532, 535], "include_ssc": 252, "inclus": [83, 204, 401], "incompat": [412, 441], "incomplet": [387, 418, 428, 429, 430, 431, 432, 433, 434, 435, 436, 439, 441, 442, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455], "inconsist": [436, 442, 452, 453], "inconveni": [406, 448], "incorpor": [403, 407, 415, 597], "incorrect": [83, 387, 414, 423, 432, 450, 451, 498, 504], "incorrectli": [450, 500], "increas": [144, 171, 201, 206, 228, 237, 240, 387, 396, 414, 485, 494, 498, 531, 535, 553], "increment": [19, 20, 26, 120, 221, 222, 225, 229, 231, 232, 233, 238, 244, 245, 248, 252, 254, 256, 257, 258, 263, 268, 270, 271, 272, 273, 276, 280, 401, 499, 547], "ind": [195, 207, 227, 251], "inde": [477, 554], "indefinit": 394, "indent": [16, 84, 90, 105, 126], "independ": [67, 128, 132, 137, 138, 146, 147, 311, 325, 387, 390, 393, 397, 398, 399, 400, 401, 402, 405, 408, 409, 410, 411, 413, 420, 429, 439, 458, 465, 484, 492, 499, 500, 501, 502, 509, 518, 519, 530, 535, 540, 597, 601], "index": [19, 20, 26, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 51, 52, 53, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 87, 89, 91, 92, 100, 102, 103, 106, 110, 111, 120, 124, 125, 127, 128, 129, 133, 135, 136, 143, 153, 154, 155, 161, 164, 166, 169, 189, 194, 195, 196, 197, 198, 199, 200, 201, 202, 204, 205, 206, 207, 208, 209, 214, 218, 220, 221, 222, 225, 227, 229, 231, 232, 233, 238, 244, 245, 248, 249, 251, 252, 254, 256, 257, 258, 263, 268, 270, 271, 272, 273, 276, 280, 284, 293, 322, 336, 341, 393, 396, 397, 398, 399, 402, 403, 410, 411, 412, 417, 420, 430, 444, 446, 447, 453, 454, 459, 460, 462, 464, 465, 467, 468, 470, 473, 475, 476, 477, 478, 479, 482, 484, 485, 486, 487, 489, 492, 493, 494, 495, 497, 501, 502, 507, 508, 509, 510, 518, 519, 521, 533, 546, 547, 548, 552, 553, 554, 555, 557, 558, 559, 560, 563, 565, 567, 568, 569, 574, 575, 576, 585, 586, 587, 588, 589, 590, 591, 592, 593, 596], "index1": [221, 268, 564, 578], "index2": [221, 268, 564, 578], "index_1": [271, 272, 273, 579, 580, 581], "index_2": [77, 271, 272, 273, 579, 580, 581], "index_arrai": [87, 91], "index_column": [87, 91], "index_data": 200, "index_err": 489, "index_error": [19, 20, 26, 221, 222, 225, 229, 231, 232, 233, 238, 244, 245, 248, 252, 254, 256, 257, 258, 263, 268, 270, 271, 272, 273, 276, 280], "index_mod": [87, 91], "index_scan": 504, "indexerror": [92, 100, 251], "indic": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 87, 91, 100, 194, 195, 196, 197, 198, 199, 200, 201, 204, 205, 206, 207, 208, 209, 387, 450, 467, 478, 490, 498, 499, 503, 504, 509, 510, 535, 547, 548, 597], "indico": 396, "indirect": [17, 19, 20, 21, 22, 24, 25, 26, 27, 491, 523], "individu": [87, 91, 109, 122, 130, 383, 393, 399, 400, 402, 407, 410, 411, 415, 460, 464, 467, 476, 479, 485, 492, 493, 495, 498, 501, 502, 521, 531, 535, 540, 597], "indiviud": 409, "indxschm": [196, 197, 208, 209], "ineffici": [87, 91, 390], "ineqcon": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40], "inequ": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40], "inertia": [51, 54], "inf": [67, 240, 282, 415, 504], "infer": [125, 127, 194, 195, 196, 197, 199, 207, 208, 209, 229, 388, 391, 518, 547], "inferno": 499, "infil": 387, "infin": 504, "influenc": 504, "info": [16, 67, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 82, 85, 86, 87, 91, 94, 100, 102, 103, 104, 105, 106, 108, 109, 110, 111, 157, 163, 165, 167, 292, 294, 322, 388, 402, 403, 407, 417, 423, 433, 434, 436, 443, 444, 447, 465, 470, 471, 473, 477, 485, 489, 491, 492, 493, 499, 508, 509, 510, 513, 516, 518, 598], "info_dict": [103, 106, 110, 111, 292, 294, 380, 436, 454, 493], "info_t": [100, 460, 464, 465, 467, 473, 486, 493, 501, 535], "infodict": 380, "inform": [11, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 56, 67, 69, 71, 72, 74, 75, 76, 78, 79, 80, 84, 85, 88, 90, 91, 94, 99, 100, 102, 103, 105, 106, 110, 111, 125, 126, 127, 153, 157, 163, 165, 167, 168, 171, 176, 177, 182, 183, 202, 214, 221, 222, 223, 224, 225, 226, 228, 229, 231, 233, 234, 237, 238, 239, 240, 241, 242, 243, 245, 252, 253, 254, 255, 256, 258, 259, 264, 265, 266, 268, 271, 272, 273, 275, 276, 279, 280, 295, 301, 322, 338, 369, 370, 387, 391, 392, 397, 399, 400, 401, 402, 403, 410, 411, 414, 415, 416, 418, 423, 424, 425, 433, 435, 436, 439, 441, 447, 453, 454, 459, 462, 465, 466, 474, 477, 478, 482, 489, 490, 493, 494, 495, 498, 499, 502, 507, 508, 509, 510, 518, 519, 521, 530, 531, 532, 533, 535, 548, 597, 598, 601], "infrar": 229, "infrastructur": [418, 426, 439, 450, 453], "ingredi": [411, 491], "inherit": [87, 91, 293, 387, 397, 399, 402, 411, 414, 415, 434, 439, 446, 493, 497, 546, 547], "init": [19, 20, 26, 87, 91, 124, 129, 136, 173, 221, 222, 223, 224, 225, 226, 228, 229, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 248, 250, 252, 255, 256, 257, 258, 259, 260, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 275, 276, 277, 278, 279, 280, 281, 282, 326, 338, 399, 436, 451, 453, 454, 455, 468, 479, 485, 492, 493, 494, 521], "initi": [15, 16, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 42, 53, 65, 84, 87, 90, 91, 105, 125, 126, 127, 136, 194, 195, 197, 200, 201, 204, 207, 227, 251, 253, 254, 314, 387, 392, 397, 398, 399, 403, 416, 441, 458, 467, 471, 473, 474, 476, 477, 478, 482, 487, 492, 493, 499, 502, 518, 519, 521, 530, 532, 582, 597], "initialis": [33, 42, 45, 46, 47, 103, 104, 106, 109, 110, 111, 155, 166, 169, 196, 197, 199, 205, 208, 209, 226, 234, 239, 241, 242, 243, 259, 266, 278, 281, 293, 336, 338, 341, 342, 343, 344, 387, 409, 504], "initiliaz": 416, "inject": [467, 482], "inlin": [392, 458, 460, 462, 464, 465, 466, 467, 468, 470, 471, 473, 479, 482, 484, 485, 486, 487, 489, 491, 492, 493, 495, 499, 500, 501, 502, 506, 507, 508, 510, 518, 519, 521], "inner": [44, 52, 53, 129, 171, 181, 265, 471, 521, 559], "inner_height": [544, 548], "inner_width": [544, 548], "input": [16, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 41, 84, 86, 87, 90, 91, 103, 105, 106, 109, 120, 122, 124, 125, 126, 127, 128, 131, 132, 136, 140, 141, 142, 143, 145, 149, 154, 155, 157, 164, 165, 166, 167, 168, 169, 171, 173, 177, 179, 181, 195, 196, 197, 199, 201, 202, 203, 204, 205, 206, 207, 208, 209, 218, 220, 227, 242, 251, 278, 279, 280, 293, 314, 325, 335, 338, 357, 359, 380, 382, 393, 395, 397, 398, 399, 400, 401, 402, 403, 408, 424, 434, 439, 442, 449, 453, 455, 464, 467, 477, 478, 487, 494, 499, 504, 533, 547, 548, 599], "input_map": [112, 117], "input_shap": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40], "input_unit": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40], "input_units_allow_dimensionless": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40], "input_units_equival": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40], "input_units_strict": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40], "inputs_map": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40], "ins": 453, "insensit": 203, "insert": [87, 91, 92, 100, 251, 413, 434, 601], "insert_row": [87, 91], "insertion_order_mww_test": 416, "inset": 440, "insid": [50, 83, 103, 110, 116, 119, 153, 179, 195, 196, 197, 199, 204, 207, 208, 209, 227, 251, 267, 376, 380, 387, 388, 390, 401, 403, 411, 439, 458, 464, 467, 470, 473, 475, 482, 486, 493, 498, 500, 501, 502, 507, 509, 532, 542, 544, 545, 548], "inside_geom": 500, "insight": 423, "inspect": [399, 403, 424, 464, 466, 473, 477, 478, 495, 499, 501, 507, 508], "inspir": [387, 411, 417], "instal": [87, 91, 386, 387, 390, 394, 395, 396, 404, 417, 418, 419, 422, 424, 425, 428, 429, 439, 443, 446, 447, 448, 455, 458, 460, 464, 465, 466, 467, 468, 470, 471, 473, 474, 475, 476, 477, 478, 479, 484, 485, 486, 487, 491, 492, 493, 495, 498, 499, 500, 501, 502, 504, 506, 507, 508, 509, 510, 513, 518, 519, 521, 535, 598], "instanc": [16, 19, 20, 26, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 50, 84, 85, 86, 87, 88, 90, 91, 92, 105, 122, 126, 127, 128, 130, 132, 133, 168, 170, 178, 194, 195, 196, 197, 198, 199, 200, 201, 204, 205, 206, 207, 208, 209, 221, 222, 223, 224, 225, 226, 228, 229, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 248, 249, 250, 252, 255, 256, 257, 258, 259, 260, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 275, 276, 277, 278, 279, 280, 281, 282, 290, 332, 338, 374, 376, 377, 378, 381, 383, 387, 393, 398, 399, 402, 403, 409, 411, 414, 439, 462, 464, 467, 479, 492, 494, 495, 498, 500, 501, 502, 521, 525, 535, 547, 548, 573], "instanti": [15, 16, 19, 20, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 84, 90, 105, 126, 196, 197, 199, 201, 208, 209, 398, 403, 460, 465, 492, 493, 499, 502, 504, 518], "instead": [16, 19, 20, 26, 84, 85, 87, 90, 91, 103, 105, 106, 110, 111, 115, 126, 183, 221, 222, 223, 224, 225, 226, 227, 228, 229, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 248, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 275, 276, 277, 278, 279, 280, 281, 282, 387, 388, 390, 392, 394, 395, 397, 398, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 415, 419, 420, 422, 429, 432, 435, 436, 449, 453, 455, 459, 466, 473, 477, 479, 482, 484, 486, 487, 492, 493, 497, 498, 499, 502, 504, 508, 532, 539, 540, 547, 548, 598], "instruct": [387, 390, 396, 404, 417, 419, 420, 428, 439, 443, 447, 477, 507], "instrument": [6, 83, 95, 109, 156, 160, 161, 235, 387, 397, 398, 399, 400, 402, 407, 411, 420, 424, 433, 436, 448, 449, 450, 457, 460, 462, 464, 465, 468, 473, 480, 481, 487, 489, 493, 495, 497, 498, 501, 502, 503, 504, 507, 508, 509, 510, 511, 513, 518, 519, 531, 532, 533, 537, 539, 541, 596, 597], "int": [16, 17, 18, 19, 20, 21, 22, 24, 25, 26, 27, 33, 34, 38, 42, 45, 46, 47, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 69, 82, 83, 84, 85, 87, 88, 90, 91, 93, 94, 101, 103, 104, 105, 106, 109, 110, 111, 113, 114, 120, 122, 126, 127, 128, 129, 132, 133, 134, 136, 144, 145, 150, 151, 152, 153, 154, 155, 156, 157, 158, 160, 161, 163, 164, 165, 166, 167, 168, 169, 172, 173, 176, 179, 183, 184, 189, 194, 195, 196, 197, 198, 199, 200, 201, 204, 205, 206, 207, 208, 209, 214, 216, 217, 218, 220, 221, 222, 224, 225, 226, 228, 229, 231, 232, 233, 234, 237, 238, 239, 240, 241, 242, 243, 244, 245, 248, 252, 253, 254, 255, 256, 257, 258, 259, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 275, 276, 278, 279, 280, 281, 286, 288, 290, 292, 293, 294, 298, 299, 300, 302, 307, 308, 309, 314, 325, 326, 332, 336, 338, 341, 342, 343, 344, 346, 347, 374, 380, 387, 401, 446, 495, 525], "int64": [103, 106, 110, 111, 112, 117, 124, 136, 533], "int_": [17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 221, 222, 225, 229, 231, 232, 233, 244, 245, 248, 252, 254, 256, 257, 258, 263, 268, 270, 271, 272, 273, 276, 280, 540, 553], "int_flux": 491, "integ": [69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 87, 91, 92, 93, 100, 103, 106, 110, 111, 125, 127, 128, 129, 132, 136, 144, 145, 154, 155, 161, 166, 169, 172, 194, 195, 196, 197, 199, 200, 201, 204, 205, 207, 208, 209, 218, 220, 227, 251, 314, 332, 338, 387, 393, 401, 547], "integr": [6, 17, 18, 19, 20, 21, 22, 24, 25, 26, 27, 31, 32, 37, 51, 102, 103, 106, 110, 111, 125, 127, 130, 132, 143, 150, 151, 152, 153, 156, 157, 158, 160, 163, 165, 167, 168, 171, 196, 197, 199, 201, 205, 208, 209, 210, 211, 221, 222, 224, 225, 226, 227, 228, 229, 231, 232, 233, 234, 237, 238, 239, 240, 241, 242, 243, 244, 245, 248, 251, 252, 253, 254, 255, 256, 257, 258, 259, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 275, 276, 278, 279, 280, 281, 283, 284, 286, 325, 386, 394, 396, 398, 400, 401, 402, 404, 405, 407, 411, 413, 416, 427, 429, 430, 434, 435, 439, 444, 445, 446, 447, 448, 449, 450, 453, 464, 466, 467, 470, 486, 489, 491, 492, 493, 499, 500, 502, 521, 523, 531, 533, 539, 555, 576], "integral_error": [19, 20, 26, 221, 222, 225, 229, 231, 232, 233, 238, 244, 245, 248, 252, 254, 256, 257, 258, 263, 268, 270, 271, 272, 273, 276, 280, 405, 436, 489], "integral_flux": 489, "integral_flux_imag": 440, "integrate_geom": [223, 224, 228, 237, 240, 253, 255, 264, 265, 267, 269, 275, 279, 439, 452, 454], "integrate_log_log": [150, 151, 152, 153, 156, 157, 158, 160, 163, 165, 167, 168], "integrate_spectrum": [19, 20, 26, 221, 222, 225, 229, 231, 232, 233, 244, 245, 248, 252, 254, 256, 257, 258, 263, 268, 270, 271, 272, 273, 276, 280, 430, 436], "integrate_spectrum_separ": [17, 18, 21, 22, 24, 25, 27], "intend": [87, 91, 314, 397, 415, 416, 497], "intens": [196, 197, 199, 205, 208, 209, 214, 241, 397, 499, 531], "intent": 392, "interact": [19, 20, 87, 91, 166, 169, 196, 197, 199, 205, 208, 209, 217, 221, 224, 225, 228, 229, 231, 232, 233, 234, 237, 238, 239, 240, 241, 242, 243, 244, 245, 248, 255, 256, 257, 258, 259, 263, 264, 265, 266, 268, 271, 272, 273, 278, 279, 386, 387, 388, 396, 397, 398, 399, 403, 407, 410, 424, 433, 459, 473, 482, 495, 499, 501, 502, 513, 514, 518, 519, 544, 547, 573, 598], "interchang": 547, "interest": [116, 119, 128, 132, 214, 290, 392, 400, 401, 405, 407, 418, 462, 473, 477, 479, 489, 492, 493, 495, 498, 500, 503, 507, 508, 521, 532, 533, 573, 597, 600, 601], "interfac": [6, 11, 15, 19, 20, 87, 91, 212, 214, 217, 218, 219, 220, 221, 224, 225, 228, 229, 231, 232, 233, 234, 237, 238, 239, 240, 241, 242, 243, 244, 245, 248, 255, 256, 257, 258, 259, 263, 264, 265, 266, 268, 271, 272, 273, 278, 279, 387, 391, 392, 393, 397, 399, 400, 402, 404, 405, 406, 407, 416, 429, 432, 434, 435, 436, 439, 443, 446, 447, 453, 457, 459, 465, 468, 470, 473, 482, 484, 495, 502, 507, 513, 519, 520, 521, 522, 531, 532, 535, 543, 546, 573, 595, 596, 597, 598], "interfer": 417, "intermedi": [207, 396, 403, 413, 424, 460, 485], "intern": [15, 19, 20, 26, 87, 91, 125, 127, 129, 139, 140, 141, 142, 173, 179, 204, 221, 222, 225, 229, 231, 232, 233, 238, 244, 245, 248, 252, 254, 256, 257, 258, 263, 268, 270, 271, 272, 273, 276, 280, 286, 314, 326, 387, 399, 401, 403, 406, 411, 439, 441, 450, 453, 458, 465, 473, 484, 490, 493, 497, 499, 510, 518, 531, 535, 593], "interp": [19, 20, 158, 196, 197, 199, 201, 205, 206, 208, 209, 217, 221, 224, 225, 228, 229, 231, 232, 233, 234, 237, 238, 239, 240, 241, 242, 243, 244, 245, 248, 253, 254, 255, 256, 257, 258, 259, 263, 264, 265, 266, 268, 271, 272, 273, 278, 279, 327, 382, 410, 415, 452, 454, 467, 474, 478, 482, 486, 497, 498, 499, 502, 506, 508, 509, 547, 548, 573, 574], "interp1": 499, "interp1d": 327, "interp2": 499, "interp_by_coord": [196, 197, 199, 205, 208, 209, 279, 450, 499], "interp_by_pix": [196, 197, 199, 205, 208, 209, 275, 276, 499], "interp_kwarg": [68, 150, 151, 152, 153, 156, 157, 158, 160, 163, 165, 167, 168, 229, 275, 276, 279, 280, 387, 497, 508, 582], "interp_map": [196, 197, 199, 205, 208, 209], "interp_missing_data": [150, 151, 152, 153, 156, 157, 158, 160, 163, 165, 167, 168], "interp_param": 387, "interp_scal": [102, 291, 327], "interp_to_geom": [196, 197, 199, 205, 208, 209, 436, 452, 499, 508, 535], "interp_weight": 195, "interpol": [6, 26, 94, 102, 150, 151, 152, 153, 154, 155, 156, 157, 158, 160, 161, 163, 165, 166, 167, 168, 169, 176, 195, 196, 197, 199, 201, 205, 206, 208, 209, 229, 242, 253, 254, 275, 276, 278, 279, 280, 291, 326, 327, 328, 386, 398, 399, 400, 429, 434, 439, 441, 444, 447, 449, 450, 451, 452, 453, 454, 464, 478, 497, 498, 502, 508, 509, 535, 543, 547, 582], "interpolatedunivariatesplin": 278, "interpret": [91, 103, 106, 130, 144, 145, 197, 201, 207, 208, 209, 332, 405, 415, 499, 533, 548], "intersect": [89, 179, 180, 184, 204, 401, 485], "interspers": 392, "interstellar": [45, 477], "interv": [52, 53, 78, 82, 83, 86, 88, 89, 91, 92, 100, 102, 104, 109, 127, 132, 177, 193, 201, 206, 214, 226, 234, 239, 241, 242, 243, 259, 266, 278, 281, 396, 397, 401, 402, 405, 411, 420, 433, 435, 436, 439, 448, 449, 454, 455, 484, 486, 489, 495, 499, 509, 519, 532, 547, 597, 600], "interval_edg": 206, "intervent": 416, "intrins": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 252, 300, 398, 402], "intrinsic_model": 459, "intro": 416, "intro_map": 448, "introduc": [19, 20, 196, 197, 199, 201, 205, 208, 209, 217, 221, 224, 225, 228, 229, 231, 232, 233, 234, 237, 238, 239, 240, 241, 242, 243, 244, 245, 248, 255, 256, 257, 258, 259, 263, 264, 265, 266, 268, 271, 272, 273, 278, 279, 387, 394, 395, 397, 399, 400, 401, 402, 404, 407, 409, 412, 415, 416, 430, 432, 433, 435, 436, 439, 441, 442, 446, 447, 448, 450, 453, 454, 455, 476, 490, 498, 502, 548, 554, 598, 601], "introduct": [390, 408, 409, 410, 416, 429, 433, 434, 435, 436, 455, 462, 465, 502, 511, 518, 519, 524], "introductori": 490, "introspect": 314, "intuit": [408, 601], "invalid": [373, 387, 401, 414, 415, 439, 455, 466, 471, 477, 510], "invalid_pixel": 500, "invers": [19, 20, 26, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 207, 221, 222, 225, 229, 231, 232, 233, 238, 241, 244, 245, 248, 252, 254, 256, 257, 258, 263, 268, 270, 271, 272, 273, 276, 280, 292, 293, 294, 336, 343, 400, 416, 477, 500, 502, 504, 573], "inverse_al": [19, 20, 26, 221, 222, 225, 229, 231, 232, 233, 238, 244, 245, 248, 252, 254, 256, 257, 258, 263, 268, 270, 271, 272, 273, 276, 280], "inverse_cdf": [416, 477], "inversecdf": 400, "inversecdfsampl": [400, 431], "inversecompton": [252, 573], "invert": [91, 195, 207, 521], "invest": 390, "investig": [476, 485, 489], "involv": [87, 91, 103, 106, 110, 111, 387, 392, 401, 403, 405, 409, 468, 598], "io": [13, 83, 86, 87, 91, 128, 189, 199, 204, 214, 280, 396, 407, 416, 418, 430, 433, 445, 449, 453, 477, 495, 497, 499, 507, 532, 535, 546, 548], "iop": 272, "iopscienc": 272, "ipix": 195, "ipykernel": [420, 422], "ipynb": [395, 407, 430, 433, 458, 459, 460, 462, 464, 465, 466, 467, 468, 470, 471, 473, 474, 475, 476, 477, 478, 479, 482, 484, 485, 486, 487, 489, 490, 491, 492, 493, 494, 495, 497, 498, 499, 500, 501, 502, 503, 504, 506, 507, 508, 509, 510, 516, 518, 519, 521, 552, 553, 554, 555, 556, 557, 558, 559, 560, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 585, 586, 587, 588, 589, 590, 591, 592, 593], "ipynb_to_galleri": 387, "ipython": [87, 91, 386, 387, 403, 404, 419, 423, 431, 458, 460, 462, 464, 465, 466, 467, 468, 470, 471, 473, 474, 475, 476, 477, 478, 479, 482, 484, 485, 486, 487, 491, 492, 493, 494, 495, 498, 499, 500, 501, 502, 504, 506, 507, 508, 509, 510, 513, 514, 518, 519, 521, 534, 598], "ipython3": 421, "ipywidget": 499, "irap": 407, "irf": [6, 82, 88, 96, 103, 104, 106, 109, 110, 111, 112, 113, 114, 115, 117, 118, 136, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 176, 182, 183, 185, 186, 187, 189, 191, 192, 195, 204, 207, 267, 313, 387, 388, 393, 397, 398, 399, 400, 403, 406, 407, 408, 409, 415, 420, 428, 430, 433, 435, 436, 439, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 452, 453, 454, 455, 457, 459, 460, 462, 464, 465, 466, 467, 468, 470, 473, 477, 478, 482, 484, 486, 496, 498, 500, 503, 504, 505, 508, 509, 510, 511, 513, 518, 519, 531, 532, 535, 537, 538, 539, 541, 542, 596, 597], "irf_dict": 170, "irf_dl3_hdu_specif": 497, "irf_fil": [88, 151, 155, 156, 157, 166, 458, 467, 482, 486, 497, 507], "irf_filenam": [477, 478, 497, 507], "irf_map": [154, 155, 161, 166, 169], "irf_path": 477, "irfmap": [154, 155, 166, 169, 420, 436, 535], "irfmetadata": 414, "irfmodel": 398, "irfs1": 507, "irfs2": 507, "irfs_path": 82, "irfstack": [436, 445], "irregular": [195, 207, 547], "irrespect": [400, 473, 499, 547], "is_align": [195, 201, 206, 207], "is_all_point_sky_region": 204, "is_all_same_energy_shap": 100, "is_all_same_shap": 100, "is_all_same_typ": 100, "is_allclos": [150, 151, 152, 153, 156, 157, 158, 160, 163, 165, 167, 168, 195, 196, 197, 198, 199, 200, 201, 204, 205, 206, 207, 208, 209], "is_allski": [194, 195, 204, 207], "is_bkg": 108, "is_contigu": [206, 499], "is_convertible_to_flux_sed_typ": [125, 127], "is_energy_axi": 201, "is_energy_depend": [223, 224, 226, 228, 234, 237, 239, 240, 241, 242, 243, 253, 255, 259, 264, 265, 266, 269, 275, 278, 279, 281, 452, 502], "is_fixed_rad_max": 168, "is_flat": [194, 195, 200, 204, 207], "is_hpx": [195, 204, 207], "is_imag": [194, 195, 204, 207], "is_mask": [196, 197, 199, 205, 208, 209], "is_norm": [415, 441, 454], "is_norm_spectral_model": [19, 20, 26, 221, 222, 225, 229, 231, 232, 233, 238, 244, 245, 248, 252, 254, 256, 257, 258, 263, 268, 270, 271, 272, 273, 276, 280, 439, 502], "is_nul": 499, "is_pointed_observ": 83, "is_pointlik": [71, 74, 75, 76, 78, 150, 151, 152, 153, 156, 157, 158, 160, 163, 165, 167, 168, 439], "is_rang": 83, "is_region": [195, 204, 207], "is_regular": [195, 204, 207], "is_ul": [67, 125, 127, 439, 454, 465, 492, 494, 521], "is_unidimension": 200, "isf": [495, 600], "isinst": [387, 398, 401, 410, 414, 415, 416], "ism": [52, 53, 573], "isn": [394, 401, 403, 406, 418, 475, 598], "isnan": [499, 500], "iso": [88, 127, 206, 211, 453, 486, 501, 508, 547, 592], "iso_p8r2_source_v6_v06": [501, 508], "isol": [30, 31, 32, 401, 419, 500], "isot": [368, 602], "isotherm": [22, 523], "isotrop": [47, 101, 224, 285, 501], "isotropic_fil": 101, "issu": [19, 20, 26, 87, 91, 221, 222, 225, 229, 231, 232, 233, 238, 244, 245, 248, 252, 254, 256, 257, 258, 263, 268, 270, 271, 272, 273, 276, 280, 387, 388, 390, 395, 396, 398, 399, 401, 404, 407, 412, 413, 414, 415, 417, 420, 421, 422, 425, 426, 429, 441, 442, 444, 445, 446, 447, 448, 450, 451, 452, 453, 454, 475, 500, 507, 531, 535, 598, 599], "item": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 87, 91, 92, 100, 203, 251, 407, 414], "iter": [87, 91, 92, 100, 125, 127, 134, 136, 196, 197, 199, 200, 201, 203, 205, 206, 208, 209, 251, 390, 393, 395, 403, 440, 468, 486], "iter_by_axi": [125, 127, 196, 197, 199, 205, 208, 209], "iter_by_axis_data": 205, "iter_by_coord": 431, "iter_by_edg": [201, 206], "iter_by_imag": [196, 197, 199, 205, 208, 209, 448], "iter_by_image_data": [196, 197, 199, 205, 208, 209, 499], "iter_by_image_index": [196, 197, 199, 205, 208, 209], "iter_by_pix": 431, "iter_with_reshap": 200, "itercol": [87, 91], "iterrow": [87, 91], "itertool": 495, "its": [19, 20, 26, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 77, 103, 106, 110, 111, 125, 127, 172, 173, 182, 195, 201, 203, 221, 222, 225, 228, 229, 231, 232, 233, 238, 244, 245, 248, 252, 254, 256, 257, 258, 263, 268, 270, 271, 272, 273, 276, 280, 290, 387, 390, 393, 396, 397, 399, 402, 403, 404, 406, 411, 413, 414, 418, 421, 439, 453, 454, 455, 460, 465, 466, 470, 477, 478, 484, 485, 490, 492, 494, 495, 498, 499, 500, 501, 502, 504, 518, 521, 524, 540, 542, 544, 546, 547, 548, 597, 600], "itself": [87, 91, 386, 387, 402, 413, 460, 484, 485, 487, 504, 598], "ivoa": [387, 454], "iz8iew6d": 489, "j": [19, 20, 23, 103, 110, 130, 138, 388, 390, 531], "j0001": [492, 521], "j0002": [492, 521], "j0003": [492, 521], "j0006": 492, "j0007": 521, "j0008": [492, 521], "j0009": 521, "j0010": 492, "j0013": 492, "j0021": 492, "j0022": 492, "j0025": 492, "j0031": 492, "j0349": 492, "j0521": 464, "j0534": [492, 521], "j0633": 521, "j0835": [462, 521], "j0851": 492, "j1036": 492, "j1104": [492, 521], "j1506": 462, "j1507": 462, "j1513": 492, "j1514": 492, "j1555": 521, "j1653": 492, "j1713": 460, "j1731": 501, "j1732": 501, "j1741": 501, "j1744": 501, "j1745": 501, "j1746": 501, "j1747": 501, "j1748": 501, "j1753": 501, "j1800": 501, "j1801": 501, "j1802": 501, "j1809": 501, "j1811": 501, "j1824": 492, "j1825": 476, "j1843": 67, "j1844": 67, "j2028": 492, "j2158": 492, "j2347": 521, "j2350": 521, "j2351": 521, "j2352": 521, "j2356": 521, "j2357": [492, 521], "j2358": [492, 521], "j2359": [492, 521], "j_": 23, "jackson": [87, 91], "jacob": [429, 448], "jacobian": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 435], "jalel": [436, 439], "jan": [392, 393, 396, 399, 404, 408, 426], "jana": 454, "januari": [394, 396, 412], "jargon": 420, "jason": 429, "javascript": [87, 91], "jax": 405, "jbernet": 454, "jean": [447, 448], "jeffrei": 504, "jeltema": 523, "jep": 392, "jet": 378, "jfact": 491, "jfact_decai": 491, "jfact_map": 491, "jfactor": [19, 20, 453], "jfactori": 491, "jj": 212, "jk": [103, 110, 531], "jkl": 531, "jl": 531, "jlzrtlu": 498, "jo": [87, 91], "job": [93, 128, 129, 132, 136, 172, 441], "johann": [432, 439, 443, 444, 445, 446, 447, 448], "johannesbuchn": 416, "john": [87, 91, 416], "join": [389, 398, 399, 425, 507], "joint": [100, 110, 111, 122, 133, 137, 138, 147, 149, 214, 290, 395, 396, 399, 403, 407, 409, 416, 420, 429, 430, 432, 433, 448, 449, 455, 457, 460, 462, 464, 465, 466, 468, 476, 480, 481, 486, 493, 494, 495, 498, 502, 503, 504, 508, 513, 518, 533, 535, 595, 596, 597], "joint_fit": 487, "joint_result": 487, "jointli": [503, 509], "jonathan": [443, 444], "jose": [439, 441, 447], "joshi": 439, "jos\u00e9": [395, 403, 407, 428, 429, 430, 431, 432, 433, 434, 435, 436, 439, 447, 448, 449], "journal": [307, 309, 413], "jouvin": [429, 431, 432, 433, 436, 444, 445, 446, 447, 448], "jqueri": [87, 91], "jskwarg": [87, 91], "json": [16, 84, 90, 105, 126, 417, 441, 443, 447], "json_data": [16, 84, 90, 105, 126], "json_encode_earth_loc": 90, "json_schema": [16, 84, 90, 105, 126], "json_schema_input_typ": 90, "jsonschema": [404, 432, 433], "jsviewer": [87, 91, 475], "juan": 454, "jul": [393, 402, 404, 406, 426], "juli": [393, 396, 401, 403, 404, 406, 410, 412, 414, 485, 489], "julia": 454, "julian": 602, "julien": [445, 446, 447], "jun": [401, 403, 404, 409, 410], "june": [401, 405, 426], "junior": [66, 407], "jupyt": [386, 394, 403, 404, 407, 419, 423, 425, 430, 445, 446, 447, 449, 458, 459, 460, 462, 464, 465, 466, 467, 468, 470, 471, 473, 474, 475, 476, 477, 478, 479, 482, 484, 485, 486, 487, 489, 490, 491, 492, 493, 494, 495, 497, 498, 499, 500, 501, 502, 503, 504, 506, 507, 508, 509, 510, 513, 514, 516, 518, 519, 521, 549, 552, 553, 554, 555, 556, 557, 558, 559, 560, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 585, 586, 587, 588, 589, 590, 591, 592, 593, 598], "jupyterlab": [386, 404, 407, 424, 458, 460, 464, 465, 466, 467, 468, 470, 471, 473, 474, 475, 476, 477, 478, 479, 484, 485, 486, 487, 491, 492, 493, 495, 498, 499, 500, 501, 502, 504, 506, 507, 508, 509, 510, 518, 519, 521], "jupytext": 407, "just": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 83, 86, 156, 362, 387, 388, 389, 390, 392, 395, 397, 401, 403, 404, 405, 407, 418, 419, 421, 447, 449, 459, 464, 465, 467, 473, 475, 477, 484, 485, 487, 490, 493, 499, 508, 509, 513, 518, 521, 532, 548, 598], "juypter": 403, "jv07jx8z": 489, "jyear": [87, 91], "k": [19, 33, 52, 53, 103, 110, 203, 225, 278, 338, 462, 464, 466, 492, 495, 499, 501, 508, 531, 548, 553, 566, 573], "k9qa6loq": 459, "kai": [447, 448], "kaori": 431, "kaspi": [30, 31, 32, 39, 45], "katrin": [415, 452, 453, 454], "kb": 395, "keep": [13, 87, 91, 100, 125, 164, 196, 197, 199, 205, 208, 209, 214, 387, 388, 390, 392, 393, 394, 395, 401, 404, 405, 406, 407, 410, 411, 416, 437, 447, 470, 471, 476, 482, 489, 495, 501, 508], "keep_byteord": [87, 91], "keep_column": [87, 91], "keep_mc_id": [104, 109], "keepdim": [164, 166, 169, 196, 197, 199, 205, 208, 209, 428, 433, 498], "kei": [16, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 69, 77, 82, 84, 87, 89, 90, 91, 103, 105, 106, 110, 111, 120, 126, 203, 214, 350, 355, 356, 373, 390, 395, 397, 404, 409, 411, 414, 416, 425, 448, 459, 493, 502, 563], "kept": [89, 103, 106, 110, 111, 125, 127, 128, 132, 150, 151, 152, 153, 154, 155, 156, 157, 158, 160, 161, 163, 165, 166, 167, 168, 169, 194, 195, 196, 197, 199, 200, 204, 205, 207, 208, 209, 387, 393, 407, 411, 459, 489, 533], "kernel": [103, 106, 110, 111, 120, 124, 130, 131, 136, 153, 154, 155, 164, 166, 169, 171, 176, 181, 183, 186, 197, 207, 209, 393, 414, 420, 422, 434, 435, 440, 445, 449, 450, 455, 468, 471, 487, 498, 499, 500, 508, 521, 531, 535, 539], "kernel_width": [136, 468, 475], "kernelbackgroundestim": 435, "kernelbackgroundmapestim": 408, "kev": [108, 136, 201, 468, 493, 494, 548], "keyboard": 424, "keyerror": [91, 203, 411], "keyword": [16, 19, 20, 26, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 68, 82, 83, 84, 86, 87, 88, 90, 91, 95, 102, 103, 105, 106, 110, 111, 126, 127, 129, 130, 148, 149, 150, 151, 152, 153, 156, 157, 158, 160, 163, 164, 165, 166, 167, 168, 169, 194, 195, 196, 197, 199, 200, 201, 203, 204, 205, 206, 207, 208, 209, 212, 214, 217, 221, 222, 223, 224, 225, 226, 227, 228, 229, 231, 232, 233, 234, 235, 237, 238, 239, 240, 241, 242, 243, 244, 245, 248, 251, 252, 253, 254, 255, 256, 257, 258, 259, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 275, 276, 277, 278, 279, 280, 281, 285, 291, 293, 326, 334, 335, 356, 368, 370, 371, 374, 375, 376, 380, 381, 382, 383, 384, 414, 435, 439, 442, 450, 451, 466, 477, 478, 493, 499, 509, 533, 548, 560], "kg": 52, "khelifi": [416, 431, 433, 436, 439, 442, 446, 447, 448, 450, 451], "kh\u00e9lifi": [413, 450, 452, 453, 454, 455], "kill": 417, "kind": [87, 91, 362, 398, 399, 400, 405, 406, 410, 413, 448], "kinet": 44, "king": [165, 432, 443, 444, 445, 446, 447, 448, 497, 541], "kirsti": [452, 453, 454, 455], "kl": 531, "klepser": 443, "km": [32, 37], "km2": 507, "km2a": [57, 70], "know": [388, 390, 392, 396, 401, 403, 404, 411, 416, 418, 430, 447, 448, 449, 475, 478, 491, 497, 498, 499, 507, 509, 510, 598], "knowledg": [415, 416, 424, 462, 467, 474, 476, 479, 482, 484, 495, 498, 499, 501, 504], "known": [134, 292, 294, 314, 400, 426, 464, 468, 471, 476, 484, 498, 499, 500, 506, 521, 535, 545, 598, 599, 600], "koenig": [293, 455], "konig": [293, 455], "konrad": 454, "kornecki": 454, "kovalev": 490, "kpc": [17, 18, 21, 22, 24, 25, 27, 29, 33, 34, 38, 252, 314, 317, 491, 492, 529, 573], "ks3kj": 489, "ktfjmoic": 489, "kurt": 454, "kwarg": [19, 20, 26, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 53, 56, 58, 59, 60, 61, 62, 63, 64, 65, 66, 83, 86, 87, 88, 91, 102, 103, 106, 110, 111, 127, 128, 129, 130, 132, 148, 150, 151, 152, 153, 156, 157, 158, 160, 163, 164, 165, 166, 167, 168, 169, 178, 194, 195, 196, 197, 198, 199, 200, 201, 203, 204, 205, 206, 207, 208, 209, 212, 213, 214, 216, 221, 222, 223, 224, 225, 226, 227, 228, 229, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 275, 276, 277, 278, 279, 280, 281, 282, 285, 291, 326, 337, 362, 374, 375, 376, 379, 381, 382, 383, 384, 387, 398, 414, 415, 452, 462, 466, 477, 487, 498, 510, 586], "kwargs_ax": [380, 471, 473], "kwargs_background": [110, 111], "kwargs_colorbar": [150, 151, 153, 156, 157, 158, 163, 165, 167, 209, 375], "kwargs_count": [110, 111], "kwargs_excess": [110, 111], "kwargs_extens": [223, 224, 228, 237, 240, 253, 255, 264, 265, 269, 275, 279, 476], "kwargs_fit": [110, 111, 380], "kwargs_fp": 102, "kwargs_hist": [380, 471, 473], "kwargs_list": 203, "kwargs_model": 102, "kwargs_npred_sign": [110, 111], "kwargs_point": [204, 227, 251, 466], "kwargs_posit": [223, 224, 228, 237, 240, 253, 255, 264, 265, 269, 275, 279, 476], "kwargs_residu": [102, 110, 111], "kwargs_saf": [110, 111], "kwargs_spati": [103, 106, 110, 111, 473, 519], "kwargs_spectr": [103, 106, 110, 111, 473, 519], "kwargs_spectrum": [102, 110, 111], "kwmq2kxc": 489, "l": [23, 26, 51, 54, 102, 103, 110, 111, 176, 384, 388, 401, 410, 413, 459, 460, 464, 465, 466, 467, 468, 470, 471, 473, 475, 476, 482, 486, 487, 492, 493, 495, 498, 499, 500, 502, 503, 504, 507, 508, 518, 519, 521, 531, 535, 548, 573, 582, 597, 599, 600, 601], "l06": [48, 525], "l_": [52, 53], "l_0": [51, 528, 553, 554], "l_snr": 44, "la": 445, "lab": [413, 420, 422, 424, 447], "label": [92, 198, 201, 206, 227, 251, 312, 375, 376, 381, 384, 387, 388, 391, 396, 400, 401, 417, 418, 439, 441, 450, 451, 453, 455, 458, 459, 462, 464, 466, 471, 473, 474, 478, 479, 484, 485, 487, 490, 491, 495, 499, 502, 503, 504, 521, 528, 529, 537, 563, 569, 572, 573, 577, 582], "label_axi": [198, 499], "label_axis2": 499, "labelcolor": 458, "labelmapaxi": [439, 453, 455], "lack": [203, 402, 487], "lafferti": [427, 597], "lafferty1994": 597, "lai": 500, "lambda": [67, 232, 233, 293, 380, 492, 507, 567, 600], "lambda_": [232, 233, 290, 462, 464, 473, 567, 569], "lancast": [138, 147], "land": 418, "landscap": 416, "langl": 19, "languag": [394, 406], "laplac": [240, 555], "laptop": 416, "lar": [403, 428, 429, 430, 446, 447, 448, 451, 453, 455], "larg": [67, 87, 91, 196, 197, 199, 205, 208, 209, 275, 277, 279, 387, 390, 392, 393, 401, 407, 408, 416, 429, 439, 448, 449, 454, 458, 464, 471, 485, 492, 500, 507, 508, 509, 521, 531, 533, 535, 536, 542, 548, 555, 595, 598, 603], "large_scale_compon": [67, 492], "larger": [27, 135, 154, 155, 161, 166, 169, 290, 299, 388, 395, 406, 453, 455, 458, 460, 464, 493, 498, 499, 500, 504, 532, 548, 555, 599, 600], "largest": [103, 106, 110, 111, 209, 387], "last": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 92, 94, 100, 196, 197, 198, 199, 201, 205, 208, 209, 251, 344, 384, 394, 397, 399, 409, 413, 417, 418, 420, 422, 428, 429, 490, 542, 544], "lat": [16, 47, 58, 60, 61, 62, 64, 65, 69, 71, 74, 75, 77, 78, 83, 86, 91, 94, 96, 101, 103, 106, 110, 112, 117, 124, 128, 129, 131, 136, 154, 155, 161, 166, 169, 172, 196, 197, 199, 202, 205, 207, 208, 209, 223, 224, 228, 235, 237, 240, 253, 255, 264, 265, 267, 269, 275, 277, 279, 285, 290, 316, 317, 320, 342, 387, 388, 395, 396, 397, 398, 399, 400, 406, 407, 410, 418, 420, 425, 428, 433, 446, 447, 448, 455, 457, 462, 465, 468, 470, 471, 473, 475, 479, 484, 485, 489, 492, 493, 494, 497, 498, 499, 500, 501, 502, 503, 511, 512, 513, 518, 519, 521, 523, 530, 532, 533, 535, 540, 547, 548, 553, 554, 555, 556, 557, 558, 559, 595, 602], "lat_0": [228, 237, 240, 255, 264, 265, 279, 402, 410, 468, 470, 473, 474, 476, 477, 478, 482, 484, 492, 493, 501, 502, 508, 518, 519, 553, 554, 555, 557, 558, 559, 560], "lat_0_err": 476, "lat_pnt": [316, 320], "lat_rang": 342, "lat_t": [316, 320], "later": [387, 392, 393, 394, 398, 399, 400, 403, 404, 405, 406, 407, 408, 416, 427, 429, 439, 440, 442, 443, 449, 459, 464, 466, 473, 474, 493, 498, 499, 502, 508, 521, 531], "latest": [128, 189, 280, 314, 390, 394, 407, 412, 413, 417, 421, 450, 458, 467, 470, 473, 474, 475, 482, 486, 495, 532, 548], "latex": [387, 388], "latex_inlin": 453, "latitud": [94, 151, 194, 195, 196, 197, 202, 204, 207, 208, 209, 342, 374, 432, 479, 499, 502, 540, 547, 556], "latpol": 499, "latter": [183, 214, 398, 400, 402, 408, 411, 414, 416, 433, 466, 467, 477, 478, 482, 500, 501, 542, 544, 597, 599], "launch": [420, 422, 447, 598], "laura": [436, 439, 441, 442, 448, 450, 452, 453, 454, 455], "law": [27, 102, 120, 125, 127, 129, 135, 143, 164, 166, 169, 221, 231, 232, 233, 256, 257, 258, 259, 268, 271, 272, 273, 283, 293, 341, 400, 427, 433, 447, 457, 459, 467, 470, 473, 477, 479, 482, 485, 486, 487, 489, 501, 502, 504, 535, 549, 562, 563, 583, 590], "law2": 576, "layer": [87, 91, 399, 406], "layout": [439, 473, 482, 499, 507, 518, 519], "lazi": [88, 100, 103, 106, 110, 111, 277, 323, 447], "lazili": 103, "lazyfitsdata": 435, "lc": [86, 132, 206, 400, 402], "lc_1d": [125, 127, 148, 484, 485, 486, 490], "lc_3d": 484, "lc_estim": 402, "lc_maker_1d": [484, 485, 486], "lc_maker_3d": 484, "lc_new": 485, "le": 90, "lea": 436, "lead": [124, 387, 396, 401, 406, 408, 410, 412, 413, 416, 432, 455, 504, 507, 509, 523, 598], "leak": [466, 544], "leakag": [293, 455, 484], "learn": [151, 156, 387, 404, 407, 417, 420, 422, 424, 448, 462, 464, 468, 475, 476, 477, 479, 490, 492, 493, 495, 499, 502, 504, 507, 513, 521, 598], "least": [43, 44, 137, 146, 387, 390, 392, 396, 477, 490, 547], "leav": [392, 399, 401, 402, 404, 407, 419, 501], "lefaucheur": [445, 446, 447], "left": [21, 24, 25, 27, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 50, 51, 52, 53, 87, 91, 103, 110, 125, 127, 132, 136, 154, 156, 196, 197, 199, 205, 208, 209, 233, 238, 258, 271, 272, 295, 298, 301, 387, 395, 397, 401, 403, 406, 410, 424, 468, 475, 484, 486, 490, 492, 501, 533, 542, 545, 554, 555, 563, 564, 567, 568, 570, 571, 573, 575, 578, 579, 580, 581, 586, 587, 588, 590, 599, 600, 601], "legaci": [387, 447, 448], "legacy_altaz": 85, "legal": [87, 91], "legend": [384, 458, 459, 462, 464, 466, 473, 474, 478, 479, 484, 485, 487, 490, 491, 495, 502, 503, 504, 508, 528, 529, 537, 563, 569, 572, 573, 577, 582], "legend_kwarg": 384, "lemi\u00e8r": 447, "len": [83, 290, 384, 468, 476, 477, 478, 485, 487, 489, 490, 492, 498, 501, 521, 535], "lenain": [447, 448], "length": [19, 20, 26, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 80, 82, 87, 91, 94, 172, 194, 195, 196, 197, 199, 200, 204, 205, 207, 208, 209, 221, 222, 223, 224, 225, 226, 227, 228, 229, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 248, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 275, 276, 277, 278, 279, 280, 281, 282, 293, 326, 380, 413, 416, 462, 464, 467, 475, 479, 489, 492, 495, 499, 508, 521, 553], "lengthi": 499, "lennarz": [430, 444, 446], "leq": [553, 558, 559], "less": [77, 195, 197, 201, 242, 278, 301, 387, 392, 394, 405, 416, 418, 447, 495, 502, 503, 504], "let": [67, 284, 387, 390, 392, 396, 401, 404, 420, 423, 447, 448, 449, 462, 465, 466, 467, 468, 473, 474, 475, 476, 477, 479, 486, 487, 492, 493, 495, 499, 500, 502, 504, 508, 518, 521, 598], "level": [6, 11, 15, 16, 83, 84, 90, 105, 124, 126, 134, 214, 292, 294, 387, 388, 390, 391, 392, 398, 400, 402, 406, 407, 408, 411, 414, 420, 424, 431, 432, 433, 434, 435, 439, 447, 454, 457, 460, 462, 464, 465, 468, 470, 471, 473, 475, 477, 482, 484, 485, 486, 487, 490, 491, 494, 495, 501, 503, 507, 508, 509, 510, 513, 516, 520, 521, 522, 531, 532, 533, 540, 542, 543, 596, 597, 598, 602], "levelnam": 387, "levmar": [214, 495], "lf": 418, "lgpl": 387, "lgtm": 418, "lhaaso": [55, 57], "li": [120, 124, 179, 393, 416, 458, 468, 471, 477, 494, 506, 597, 600], "lib": [351, 458, 460, 464, 465, 466, 467, 468, 470, 471, 473, 474, 475, 476, 477, 478, 479, 482, 484, 485, 486, 487, 489, 491, 492, 493, 495, 498, 499, 500, 501, 502, 504, 506, 507, 508, 509, 510, 518, 519, 521, 560, 569, 586], "librari": [87, 91, 387, 392, 393, 397, 407, 413, 425, 460, 464, 477, 502, 507, 513, 519, 523, 532, 535, 596, 598], "licenc": 413, "licens": [413, 424], "lie": [194, 195, 201, 204, 207, 494], "life": [394, 495], "lifetim": [20, 454], "lifetime_age_of_univers": 20, "light": [15, 73, 77, 132, 140, 229, 242, 300, 391, 398, 400, 403, 407, 411, 420, 433, 435, 436, 443, 446, 448, 453, 454, 457, 459, 461, 483, 488, 489, 490, 513, 533, 534, 544, 549, 584, 594, 596], "light_curv": [16, 242, 407, 448, 457, 465, 470, 471, 473, 484, 488, 518, 593], "light_curve_flar": [457, 485, 488], "light_curve_model": 593, "light_curve_simul": [457, 486, 488], "lightcrv_pksb1222": [242, 593], "lightcurv": [71, 73, 74, 75, 77, 78, 121, 127, 132, 139, 140, 141, 142, 148, 205, 206, 242, 297, 298, 300, 396, 398, 403, 406, 408, 411, 420, 431, 433, 434, 435, 439, 445, 446, 447, 448, 450, 451, 453, 454, 457, 483, 484, 485, 488, 494, 513, 530, 535, 593], "lightcurve1": 139, "lightcurve2": 139, "lightcurve_at_energi": 411, "lightcurveconfig": 16, "lightcurveestim": [121, 402, 403, 408, 411, 420, 431, 433, 435, 436, 439, 447, 448, 453, 484, 485, 486, 489, 535], "lightcurvetablemodel": [398, 400], "lightcurvetempl": 398, "lightcurvetemplatemodel": [452, 453], "lightcurvetemplatetemporalmodel": [274, 410, 450, 453, 455, 478, 502, 593], "like": [19, 20, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 46, 50, 52, 53, 67, 80, 82, 87, 88, 91, 144, 145, 160, 168, 196, 197, 199, 203, 205, 208, 209, 217, 221, 224, 225, 228, 229, 231, 232, 233, 234, 237, 238, 239, 240, 241, 242, 243, 244, 245, 248, 255, 256, 257, 258, 259, 263, 264, 265, 266, 268, 271, 272, 273, 278, 279, 314, 334, 344, 386, 387, 388, 390, 392, 393, 394, 395, 397, 398, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 413, 415, 416, 417, 419, 420, 424, 430, 439, 441, 442, 446, 447, 449, 450, 452, 453, 458, 459, 462, 464, 465, 466, 467, 471, 478, 479, 487, 490, 491, 493, 495, 497, 499, 503, 504, 507, 508, 513, 514, 518, 520, 521, 523, 524, 531, 535, 540, 548, 559, 596, 597, 598, 599, 600, 601], "likelhood": 399, "likelihood": [100, 102, 103, 106, 111, 124, 125, 126, 127, 129, 134, 136, 137, 146, 246, 291, 310, 311, 387, 393, 396, 399, 400, 403, 405, 407, 408, 409, 411, 416, 420, 427, 429, 430, 433, 440, 443, 446, 448, 449, 454, 455, 462, 464, 465, 466, 468, 475, 479, 484, 485, 487, 493, 494, 495, 498, 504, 508, 518, 519, 523, 531, 533, 535, 573, 596, 597, 599, 600], "likelihood_profil": [398, 429], "likelihood_typ": 434, "likewis": [197, 209], "lima": 120, "lima1983": [506, 533, 597, 600], "lima_map": 471, "lima_maps2": 471, "limamapestim": [408, 435], "limit": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 52, 53, 77, 80, 87, 91, 102, 113, 114, 124, 125, 126, 127, 128, 129, 132, 133, 136, 137, 146, 153, 168, 171, 201, 218, 220, 256, 291, 292, 294, 334, 335, 374, 393, 395, 396, 398, 399, 400, 401, 402, 404, 405, 407, 408, 410, 411, 415, 416, 429, 435, 439, 446, 447, 448, 449, 454, 458, 464, 468, 473, 476, 479, 484, 493, 494, 495, 499, 500, 503, 508, 518, 531, 533, 535, 544, 554, 573, 582, 596, 597, 601], "lin": [19, 20, 201, 205, 206, 209, 217, 221, 224, 225, 228, 229, 231, 232, 233, 234, 237, 238, 239, 240, 241, 242, 243, 244, 245, 248, 253, 254, 255, 256, 257, 258, 259, 263, 264, 265, 266, 268, 271, 272, 273, 278, 279, 291, 326, 327, 328, 415, 478, 497, 499, 506, 548, 573], "line": [6, 13, 46, 82, 83, 87, 91, 102, 103, 106, 110, 111, 157, 163, 165, 167, 204, 205, 227, 251, 346, 347, 384, 386, 388, 390, 393, 396, 398, 401, 403, 404, 411, 418, 419, 420, 422, 424, 433, 444, 447, 455, 473, 495, 498, 502, 523, 535, 548, 596], "line2d": [204, 227, 251], "linear": [19, 20, 26, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 150, 151, 152, 153, 156, 158, 160, 163, 168, 196, 197, 199, 205, 206, 208, 209, 221, 222, 225, 229, 231, 232, 233, 238, 242, 243, 244, 245, 248, 252, 254, 256, 257, 258, 263, 268, 270, 271, 272, 273, 275, 276, 278, 279, 280, 326, 387, 450, 457, 473, 478, 479, 482, 499, 502, 508, 518, 519, 549, 584, 594], "linear_model": 589, "linearli": [206, 209, 499, 531], "linearsegmentedcolormap": [377, 378], "linearstretch": [377, 378, 603], "lineartemporalmodel": [274, 502, 589], "lineno": 387, "liner": [278, 401], "linestyl": [458, 487, 489, 491, 504, 529, 548, 553, 554], "linewidth": [227, 251, 384, 388, 489], "linhoff": [451, 452, 453, 454, 455], "link": [67, 69, 80, 102, 227, 251, 290, 392, 395, 396, 399, 407, 413, 417, 418, 424, 425, 436, 439, 441, 445, 446, 447, 459, 460, 464, 465, 466, 467, 470, 473, 474, 482, 485, 486, 492, 495, 502, 504, 507, 519, 521, 535, 582, 595], "link_to_nasaad": 388, "linkag": 312, "linkage_kwarg": 312, "linkcheck": 388, "linspac": [83, 155, 196, 197, 199, 205, 208, 209, 214, 477, 479, 487, 495, 497, 499, 504, 547, 553], "lint": [16, 84, 90, 105, 126], "linux": [394, 404, 418, 421, 448, 458, 460, 464, 465, 466, 467, 468, 470, 471, 473, 474, 475, 476, 477, 478, 479, 484, 485, 486, 487, 491, 492, 493, 495, 498, 499, 500, 501, 502, 504, 506, 507, 508, 509, 510, 518, 519, 521, 598], "list": [19, 20, 26, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 71, 72, 74, 75, 76, 78, 79, 80, 82, 83, 86, 87, 88, 89, 90, 91, 92, 93, 96, 100, 102, 103, 104, 105, 106, 109, 110, 111, 120, 122, 124, 125, 127, 128, 129, 132, 133, 136, 137, 138, 146, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 160, 161, 163, 165, 166, 167, 168, 169, 171, 172, 176, 177, 179, 180, 182, 183, 184, 185, 188, 191, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 211, 212, 214, 218, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 275, 276, 277, 278, 279, 280, 281, 282, 290, 335, 345, 346, 347, 349, 376, 380, 381, 383, 384, 386, 387, 389, 390, 391, 392, 393, 394, 395, 396, 397, 406, 407, 408, 409, 410, 411, 413, 414, 417, 418, 419, 420, 421, 422, 423, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 459, 460, 464, 467, 468, 474, 478, 479, 482, 484, 486, 489, 490, 493, 494, 495, 497, 498, 503, 504, 507, 508, 509, 510, 511, 513, 519, 520, 531, 535, 538, 547, 548, 595, 596, 597, 598], "list_format": [87, 91], "listen": 535, "listenv": 390, "liter": [16, 84, 90, 105, 126, 332], "literatur": [416, 523, 525, 597], "littl": [87, 91, 406, 408, 414, 499, 508, 540, 544, 598], "live": [83, 86, 88, 387, 392, 395, 397, 408, 416, 449, 452, 494], "live_point": 416, "livetim": [67, 88, 89, 106, 107, 111, 166, 188, 190, 191, 393, 458, 460, 464, 465, 467, 475, 477, 478, 482, 486, 492, 493, 497, 499, 508, 509, 521, 531, 535], "livetime_fract": 89, "ljouvin": 393, "ll": [125, 127, 136, 390, 392, 404, 421, 458, 459, 460, 464, 466, 470, 471, 475, 484, 485, 486, 487, 489, 490, 598, 600], "llvm": 424, "ln": [53, 495, 580], "lo": [23, 416, 446], "lo_bnd": 201, "lo_threshold": 153, "load": [66, 67, 83, 86, 87, 91, 100, 102, 103, 106, 110, 129, 131, 170, 176, 194, 195, 196, 197, 207, 322, 387, 442, 445, 447, 453, 465, 467, 470, 471, 477, 478, 482, 486, 487, 490, 500, 507, 508, 510, 518, 521, 532], "load_cta_irf": [449, 453], "load_irf_dict_from_fil": [166, 453, 458, 467, 477, 478, 482, 486, 507], "loc": [87, 91, 209, 380, 487, 528, 529, 537, 563, 569, 572, 573, 577], "loc_indic": [87, 91], "local": [17, 18, 21, 22, 24, 25, 27, 87, 91, 144, 145, 181, 194, 195, 204, 205, 207, 387, 388, 390, 395, 401, 416, 417, 418, 421, 425, 429, 439, 465, 468, 470, 471, 476, 477, 491, 498, 513, 518, 535], "local_dataset": 498, "local_dens": [17, 18, 21, 22, 24, 25, 27, 491], "local_to_glob": 195, "localfold": 11, "localis": 322, "localn": [16, 84, 90, 105, 126], "locat": [47, 82, 83, 85, 87, 88, 90, 94, 140, 154, 155, 161, 166, 169, 207, 343, 390, 395, 401, 405, 408, 413, 414, 420, 422, 453, 455, 458, 467, 477, 478, 482, 486, 492, 509, 510, 532, 548, 598], "location_info": 87, "log": [16, 19, 20, 26, 42, 84, 90, 103, 105, 125, 126, 127, 134, 150, 151, 152, 153, 156, 157, 158, 160, 163, 165, 167, 168, 176, 201, 205, 209, 217, 221, 222, 224, 225, 228, 229, 231, 232, 233, 234, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 248, 252, 253, 254, 255, 256, 257, 258, 259, 263, 264, 265, 266, 268, 270, 271, 272, 273, 275, 276, 278, 279, 280, 283, 286, 295, 301, 325, 326, 328, 373, 382, 399, 403, 416, 426, 443, 450, 454, 457, 459, 465, 467, 468, 470, 471, 473, 474, 475, 478, 482, 484, 485, 486, 489, 491, 493, 495, 497, 498, 499, 502, 504, 508, 509, 516, 518, 519, 535, 537, 547, 548, 549, 562, 574, 582, 583, 590, 597, 598, 599, 600, 601], "log10": 487, "log_": [244, 245, 502, 571], "log_2": 298, "log_en": 502, "log_level": 11, "log_parabola": 462, "log_parabola_norm": 410, "logarithm": [34, 499, 504, 571], "logarithmic_spir": 34, "logb": 42, "logconfig": 16, "logenergyaxi": 446, "loggaussian": 398, "logger": [353, 356, 387, 475], "logic": [16, 84, 86, 90, 105, 126, 182, 411, 455, 499, 500], "logical_and": [196, 197, 199, 205, 208, 209], "logical_or": [196, 197, 199, 205, 208, 209, 498], "loglog": [19, 20, 26, 221, 222, 225, 229, 231, 232, 233, 238, 244, 245, 248, 252, 254, 256, 257, 258, 263, 268, 270, 271, 272, 273, 276, 280, 325, 458, 491, 527, 528, 529], "lognorm": 491, "logo": 418, "logparabola": [398, 572], "logparabolanormspectralmodel": [245, 262, 410, 436, 502, 572], "logparabolaspectralmodel": [214, 244, 262, 410, 459, 462, 464, 466, 474, 492, 495, 502, 565, 571], "logscal": 433, "logspac": [155, 196, 197, 199, 205, 208, 209, 467, 482, 486, 487, 491, 499, 527, 528, 529, 548], "logspir": [33, 38], "loguniform": [246, 416], "logz": 416, "logz_b": 416, "logz_singl": 416, "logzerr": 416, "logzerr_b": 416, "logzerr_singl": 416, "logzerr_tail": 416, "lomb": [402, 447], "lon": [16, 47, 91, 94, 96, 103, 106, 110, 112, 117, 124, 129, 131, 136, 154, 155, 161, 166, 169, 172, 196, 197, 199, 202, 205, 207, 208, 209, 223, 224, 228, 235, 237, 240, 253, 255, 264, 265, 267, 269, 275, 277, 279, 316, 317, 320, 342, 387, 388, 398, 401, 406, 410, 432, 455, 465, 468, 470, 471, 473, 475, 479, 484, 485, 489, 492, 493, 494, 497, 498, 499, 502, 503, 508, 518, 519, 521, 533, 547, 548, 553, 554, 555, 556, 557, 558, 559], "lon_0": [228, 237, 240, 255, 264, 265, 279, 402, 410, 468, 470, 473, 474, 476, 477, 478, 482, 484, 492, 493, 501, 502, 508, 518, 519, 553, 554, 555, 557, 558, 559, 560], "lon_0_err": 476, "lon_pnt": [316, 320], "lon_rang": 342, "lon_t": [316, 320], "long": [387, 390, 392, 394, 401, 403, 406, 407, 409, 412, 414, 416, 441, 450, 459, 492, 513, 514, 547], "longer": [299, 387, 393, 394, 401, 402, 404, 407, 421, 439, 442, 447, 448, 450, 453, 460, 467, 484], "longest": 200, "longitud": [68, 94, 151, 194, 195, 196, 197, 202, 204, 207, 208, 209, 342, 374, 401, 479, 499, 502, 540, 547, 556], "lonpol": 499, "look": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 46, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 83, 88, 103, 106, 110, 111, 127, 150, 151, 153, 154, 155, 156, 157, 158, 163, 164, 165, 166, 167, 169, 344, 387, 389, 390, 392, 399, 401, 402, 404, 406, 407, 410, 416, 424, 447, 460, 464, 465, 467, 468, 470, 471, 473, 475, 477, 479, 482, 484, 486, 487, 493, 497, 499, 502, 507, 508, 511, 513, 518, 521, 523, 532, 535, 598], "look_up": 445, "lookup": 202, "loop": [87, 91, 335, 400, 453, 464, 492, 499, 509, 518, 535], "lopez": [229, 447, 453, 563], "lopez21": [230, 459, 563], "lopez_2021": 230, "lorim": 35, "lorimer2006": [28, 29, 30, 36, 39, 40, 48], "lose": 387, "loss": [52, 597], "lost": [100, 103, 106, 110, 111, 535, 548], "lot": [82, 387, 390, 392, 393, 394, 395, 398, 400, 401, 403, 407, 418, 428, 430, 431, 439, 447, 448, 465, 475, 508, 518, 519, 545], "low": [87, 91, 153, 201, 337, 387, 388, 390, 391, 396, 417, 445, 447, 457, 460, 464, 468, 475, 477, 493, 500, 501, 507, 508, 513, 518, 520, 522, 542, 599], "low_zenith": 503, "lower": [17, 18, 19, 20, 21, 22, 24, 25, 26, 27, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 52, 53, 125, 127, 153, 182, 201, 203, 206, 221, 222, 225, 226, 229, 231, 232, 233, 234, 238, 239, 241, 242, 243, 244, 245, 248, 252, 254, 256, 257, 258, 259, 263, 266, 268, 270, 271, 272, 273, 276, 278, 280, 281, 387, 401, 406, 407, 414, 479, 498, 519], "lower_error": 127, "lowest": [406, 490], "lp": [244, 245, 410, 462, 492, 502, 565], "lp_norm": 572, "lss": 464, "lst": [394, 507], "lsw": 417, "lt": [387, 413, 441, 450, 558, 559], "ltcube": [195, 196, 197, 199, 208, 209, 499], "lts_author": 413, "luca": [429, 430, 431, 432, 433, 434, 435, 436, 439, 441, 442, 450, 453], "lui": 449, "luigi": 444, "luminos": [41, 46, 51, 52, 53, 54, 252], "luminosity_spindown": [51, 54], "luminosity_tev": [52, 53, 529], "lvtm": 486, "lw": [464, 466, 468, 475, 487, 495, 548, 553, 555], "ly": [439, 501], "lyne": 37, "l\u00e9a": [429, 431, 432, 433, 436, 444, 445, 446, 447, 448], "l\u00f3pez": 447, "m": [19, 28, 29, 30, 31, 32, 35, 36, 37, 38, 39, 40, 52, 53, 87, 91, 94, 97, 112, 117, 132, 194, 195, 196, 197, 199, 205, 207, 208, 209, 311, 387, 388, 390, 401, 417, 419, 420, 421, 422, 478, 491, 495, 497, 499, 502, 516, 540, 544, 546, 547, 548, 560, 598, 601], "m2": [103, 156, 176, 459, 465, 467, 470, 471, 473, 475, 482, 493, 497, 498, 507, 518, 519], "m2ri2ola": 489, "m_": [20, 50, 52, 53], "m_3fhl_gc": 499, "m_4d": 499, "m_allski": 499, "m_b": 599, "m_cube": 499, "m_ejecta": [52, 528], "m_gc": 499, "m_hpx": 499, "m_i": 599, "m_iem_10gev": 499, "m_iem_cutout": 499, "m_iem_gc": 499, "m_iem_interp": 499, "m_sub": 499, "m_sun": 528, "m_wc": [196, 197, 199, 205, 208, 209, 499], "ma": [87, 91, 120, 124, 458, 468, 471, 494, 506, 597, 600], "mac": [87, 91, 387, 394, 418, 446, 598], "machin": [390, 394, 395, 400, 404, 418, 458, 460, 464, 465, 466, 467, 468, 470, 471, 473, 474, 475, 476, 477, 478, 479, 484, 485, 486, 487, 491, 492, 493, 495, 498, 499, 500, 501, 502, 504, 506, 507, 508, 509, 510, 518, 519, 521], "machineri": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 473], "maco": [404, 448], "macport": [404, 446, 448], "made": [176, 183, 204, 207, 218, 220, 227, 251, 314, 346, 347, 387, 390, 392, 403, 406, 408, 411, 412, 413, 439, 450, 451, 455, 464, 468, 473, 474, 498, 507, 548, 560, 597], "madrid": 397, "magenta": [384, 476, 503], "magic": [97, 420, 425, 441, 447, 450, 466, 508, 597], "magic_ecpl": 284, "magic_lp": [284, 466], "magnet": [42, 50, 51, 54, 573], "magnetic_field": [50, 51, 54], "magnitud": [326, 477], "mai": [16, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 82, 84, 87, 90, 91, 94, 102, 105, 126, 127, 387, 388, 390, 395, 396, 400, 401, 403, 404, 412, 413, 418, 419, 421, 426, 427, 459, 470, 471, 477, 494, 507, 534, 535, 547, 555, 573, 595, 598, 602], "mail": [388, 390, 392, 394, 401, 403, 406, 408, 410, 413, 417, 423, 428, 429, 521, 598], "mailmap": [439, 450], "main": [91, 103, 110, 124, 136, 387, 390, 392, 393, 395, 399, 402, 403, 404, 407, 411, 413, 417, 418, 429, 435, 439, 442, 447, 453, 465, 476, 477, 479, 482, 489, 492, 497, 499, 500, 501, 516, 518, 519, 530, 532, 536, 598], "mainli": [387, 397, 398, 401, 408, 499], "maint": 455, "maintain": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 87, 91, 387, 389, 404, 406, 407, 408, 412, 418, 448, 498], "mainten": [387, 394, 413, 418, 430, 452], "major": [204, 228, 237, 240, 387, 391, 392, 396, 404, 412, 441, 447, 448, 553, 554, 555], "majorana": 19, "make": [16, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 45, 46, 59, 82, 84, 87, 90, 91, 95, 102, 105, 126, 171, 172, 176, 177, 178, 179, 181, 182, 183, 186, 187, 192, 193, 195, 196, 197, 200, 201, 204, 206, 207, 208, 209, 278, 344, 346, 347, 358, 386, 388, 389, 392, 393, 394, 397, 399, 401, 403, 404, 405, 406, 407, 408, 411, 413, 414, 418, 420, 422, 424, 427, 428, 430, 433, 434, 439, 441, 444, 445, 446, 447, 450, 452, 455, 457, 459, 460, 464, 466, 467, 471, 473, 477, 482, 484, 496, 497, 498, 499, 502, 505, 507, 508, 513, 516, 521, 532, 535, 598, 599], "make_background": [176, 183], "make_background_fit": 173, "make_background_scal": 173, "make_base_catalog_galact": [447, 525], "make_concentric_annulus_sky_region": 479, "make_contour": 495, "make_count": [176, 177, 178, 183], "make_counts_off": [177, 178], "make_cub": 171, "make_dataset": 172, "make_default_fov_background_model": 173, "make_edisp": [176, 183], "make_edisp_kernel": [176, 183], "make_edisp_kernel_map": 497, "make_edisp_map": 155, "make_effective_livetime_map": [455, 498], "make_exclusion_mask": 173, "make_exposur": [176, 183], "make_exposure_irf": [176, 183], "make_imag": 448, "make_lupton_rgb": 382, "make_map_background_irf": 442, "make_map_count": 393, "make_map_cutout": 393, "make_map_exposure_reco_energi": 393, "make_map_exposure_true_energi": [155, 393, 497], "make_map_fov_background": 393, "make_map_hadron_accept": 393, "make_map_ring_background": 393, "make_map_xxx": 393, "make_maps_off": 181, "make_mask_bkg_invalid": 182, "make_mask_energy_aeff_default": 182, "make_mask_energy_aeff_max": 182, "make_mask_energy_bkg_peak": 182, "make_mask_energy_edisp_bia": 182, "make_mask_offset_max": 182, "make_mean_edisp": 449, "make_mean_psf": 449, "make_meta_t": [176, 183], "make_model": 406, "make_more_random_stuff": 387, "make_observation_time_map": 498, "make_orthogonal_rectangle_sky_region": [129, 479], "make_path": [127, 474, 493, 494], "make_pixel_region": 401, "make_psf": [166, 176, 183, 449], "make_psf_map": 497, "make_quant": 358, "make_random_stuff": 387, "make_region": 401, "make_sky_coord": 401, "make_some_random_stuff": 387, "make_theta_squared_t": [439, 506], "makefil": [418, 443], "maker": [6, 155, 166, 171, 172, 173, 174, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 393, 400, 402, 413, 433, 435, 436, 441, 450, 453, 454, 457, 458, 464, 466, 467, 471, 475, 477, 478, 482, 486, 487, 489, 493, 496, 497, 500, 505, 506, 509, 513, 545, 596, 597], "maker_fov": 519, "maker_safe_mask": [475, 482, 519], "mamba": [390, 419, 420, 441], "manag": [87, 91, 218, 220, 227, 251, 334, 365, 386, 387, 390, 395, 403, 404, 406, 409, 413, 414, 417, 439, 444, 446, 450, 454, 499, 501, 598], "manconi": 431, "mandatori": [182, 390, 400, 413, 478, 502], "mandatory_keyword": 497, "mani": [87, 91, 326, 387, 388, 390, 392, 394, 396, 399, 401, 402, 403, 404, 407, 408, 413, 416, 418, 424, 430, 431, 436, 439, 445, 446, 447, 448, 449, 452, 453, 460, 464, 467, 476, 482, 490, 494, 499, 510, 513, 523, 531, 533, 545, 548, 595, 596, 597, 598, 602], "manifest": 397, "manipul": [87, 91, 411, 414, 441, 504, 547], "manner": [452, 453], "manpow": [392, 404], "manual": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 87, 91, 394, 399, 409, 417, 535, 543, 598, 599], "manuel": [440, 443, 444], "map": [6, 15, 16, 23, 26, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 67, 77, 80, 83, 84, 87, 90, 91, 96, 98, 101, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 115, 117, 118, 120, 121, 122, 124, 125, 126, 127, 129, 131, 132, 136, 137, 138, 143, 144, 145, 146, 147, 150, 151, 152, 153, 154, 155, 156, 157, 158, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 171, 173, 174, 176, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 194, 195, 196, 197, 198, 200, 201, 202, 204, 205, 206, 207, 208, 209, 210, 211, 224, 227, 228, 235, 237, 240, 242, 251, 253, 255, 264, 265, 267, 269, 275, 276, 277, 279, 280, 288, 293, 336, 374, 375, 380, 382, 384, 386, 387, 388, 390, 394, 398, 399, 400, 401, 402, 403, 406, 407, 408, 409, 410, 411, 414, 416, 420, 424, 428, 429, 431, 432, 433, 434, 435, 436, 439, 440, 441, 443, 444, 445, 447, 448, 449, 450, 453, 454, 455, 457, 458, 460, 464, 465, 466, 467, 469, 472, 473, 476, 477, 478, 479, 480, 481, 484, 485, 486, 489, 490, 492, 493, 494, 496, 498, 502, 505, 506, 507, 508, 509, 513, 514, 515, 518, 519, 520, 523, 530, 531, 534, 535, 539, 541, 542, 543, 544, 545, 552, 554, 555, 556, 557, 560, 593, 596, 597, 603], "map_": [210, 211, 375, 382], "map_4d": 499, "map_analysi": 406, "map_cent": 279, "map_coord": [83, 155, 166, 169], "map_dataset": [399, 487], "map_dataset_empti": 487, "map_dataset_mak": 487, "map_dataset_on_off": 487, "map_edisp": [112, 117], "map_in": [196, 197, 199, 205, 208, 209], "map_out": [106, 111, 154, 155, 161, 166, 169, 196, 197, 199, 205, 208, 209], "map_result": 468, "map_select": [16, 465, 470, 471, 473, 518], "map_typ": [196, 197, 199, 205, 208, 209, 499, 547], "mapax": [150, 151, 152, 153, 156, 157, 158, 160, 163, 165, 167, 168, 436, 439, 441, 499], "mapaxi": [19, 20, 26, 103, 106, 110, 111, 112, 113, 114, 115, 117, 118, 125, 127, 129, 137, 146, 148, 150, 151, 152, 153, 154, 155, 156, 157, 158, 160, 163, 164, 165, 166, 167, 168, 169, 176, 186, 187, 192, 193, 194, 195, 196, 197, 199, 200, 204, 205, 207, 208, 209, 221, 222, 225, 229, 231, 232, 233, 238, 244, 245, 248, 252, 254, 256, 257, 258, 263, 268, 270, 271, 272, 273, 276, 280, 382, 388, 402, 411, 430, 431, 433, 436, 439, 449, 453, 455, 458, 460, 464, 466, 467, 474, 475, 477, 478, 482, 485, 486, 487, 489, 493, 497, 498, 499, 502, 506, 508, 509, 519, 539, 542, 544, 545, 547, 548], "mapcoord": [83, 155, 166, 169, 194, 195, 196, 197, 199, 200, 204, 205, 207, 208, 209, 253, 447, 448, 499, 548, 556, 596], "mapdataset": [98, 99, 101, 104, 106, 109, 110, 111, 113, 114, 115, 116, 118, 119, 120, 124, 129, 132, 136, 143, 144, 145, 146, 147, 171, 172, 173, 176, 177, 181, 182, 227, 235, 251, 380, 383, 400, 402, 408, 409, 429, 430, 431, 432, 433, 434, 435, 436, 439, 453, 454, 455, 468, 470, 474, 475, 476, 478, 479, 482, 484, 486, 487, 494, 495, 498, 500, 501, 508, 518, 519, 533, 535, 542, 545, 597, 599, 600], "mapdataseteventsampl": [93, 109, 433, 434, 435, 442, 453, 455, 477, 478], "mapdatasetmak": [166, 174, 183, 400, 433, 436, 439, 442, 450, 475, 477, 478, 482, 487, 497, 498, 509, 518, 519, 535, 542, 545], "mapdatasetmetadata": [103, 106, 414], "mapdatasetoff": 441, "mapdatasetonoff": [98, 103, 110, 111, 120, 124, 143, 171, 177, 181, 433, 434, 436, 439, 452, 453, 471, 487, 498, 531, 545, 599], "mapdatasetsampl": 400, "mapevalu": [398, 399, 432, 433, 436, 439, 450, 451, 452, 454], "mapeventsampl": [431, 432], "mapfit": [398, 399, 429, 448, 449], "mapgeom": [393, 449, 450], "mapmak": [176, 403, 429, 433, 448], "mapmakerob": [432, 433], "mappabl": 411, "mappanelplott": [408, 603], "mapper": 322, "mappingintstrani": [16, 84, 90, 105, 126], "mappingnamespac": [16, 84, 90, 105, 126], "maps_off": 181, "mar": [404, 426, 451], "march": [394, 396, 426, 428, 449], "marco": [17, 19, 20, 21, 22, 24, 25, 26, 27], "margin": [101, 102, 106, 111, 116, 119, 195, 197, 207, 209, 227, 251, 267, 398, 500, 553, 597, 599], "marion": [429, 448], "mark": [91, 387, 398, 417], "marker": [102, 103, 106, 110, 111, 227, 251, 458, 460, 464, 466, 468, 475, 484, 485, 486, 490, 521], "markerfacecolor": [103, 106, 110, 111], "markers": [102, 103, 106, 110, 111, 227, 251, 504], "markov": [416, 597], "mask": [83, 87, 91, 99, 102, 103, 106, 110, 111, 124, 128, 129, 131, 132, 133, 136, 154, 155, 161, 166, 169, 171, 173, 178, 179, 180, 181, 182, 184, 194, 195, 196, 197, 199, 202, 204, 205, 207, 208, 209, 218, 220, 227, 251, 267, 380, 399, 415, 433, 435, 436, 437, 439, 442, 448, 450, 451, 452, 453, 455, 457, 458, 460, 473, 475, 496, 498, 501, 505, 509, 513, 531, 542, 544, 547, 597], "mask_1": 503, "mask_2": 503, "mask_bright": 492, "mask_contains_region": 209, "mask_data": 500, "mask_energi": [493, 500], "mask_fit": [102, 103, 106, 110, 111, 116, 119, 399, 433, 450, 466, 471, 473, 487, 493, 495, 500, 504, 531], "mask_fit_imag": [103, 106, 110, 111], "mask_imag": [103, 106, 110, 111], "mask_map": [195, 207, 457, 500, 505], "mask_map_catalog": 500, "mask_nearest_posit": [196, 197, 199, 205, 208, 209], "mask_off": 487, "mask_roi": 492, "mask_saf": [102, 103, 106, 107, 110, 111, 182, 399, 433, 493, 498, 500, 531], "mask_safe_edisp": [103, 106, 110, 111, 455], "mask_safe_imag": [103, 106, 110, 111, 154, 155, 161, 166, 169], "mask_safe_psf": [103, 106, 110, 111], "mask_spac": 493, "mask_valid": 102, "masked_ev": 83, "maskedarrai": [87, 91], "maskedcolumn": [87, 91], "mass": [19, 20, 26, 52, 400, 435, 454, 491, 523, 557], "massdm": [19, 20, 491], "master": [393, 394, 401, 417, 418, 427], "match": [83, 87, 91, 109, 114, 134, 194, 195, 197, 200, 201, 202, 204, 207, 209, 211, 292, 294, 387, 395, 447, 449, 454, 464, 467, 486, 494, 508, 530, 547], "match_by_nam": 202, "materi": 416, "math": [237, 386], "mathcal": [495, 531], "mathemat": [502, 504], "mathieu": [439, 442], "mathrm": [19, 20, 23, 103, 110, 156, 491, 495, 531, 599, 601], "mathworld": [341, 342], "matomo": 455, "matplotlib": [19, 20, 26, 66, 67, 83, 131, 150, 153, 156, 157, 158, 163, 164, 165, 166, 167, 168, 169, 196, 197, 199, 205, 208, 209, 212, 221, 222, 223, 224, 225, 226, 228, 229, 231, 232, 233, 234, 237, 238, 239, 240, 241, 242, 243, 244, 245, 248, 252, 253, 254, 255, 256, 257, 258, 259, 263, 264, 265, 266, 268, 269, 270, 271, 272, 273, 275, 276, 278, 279, 280, 281, 365, 375, 376, 377, 380, 381, 382, 384, 386, 387, 388, 401, 404, 413, 421, 424, 431, 439, 441, 458, 459, 460, 462, 464, 465, 466, 467, 468, 470, 471, 473, 474, 475, 476, 477, 478, 479, 482, 484, 485, 486, 487, 489, 490, 491, 492, 493, 494, 495, 497, 498, 499, 500, 501, 502, 503, 504, 506, 507, 508, 509, 510, 518, 519, 521, 527, 528, 529, 535, 537, 538, 539, 541, 544, 553, 555, 559, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 585, 586, 587, 588, 589, 590, 591, 602, 603], "matric": 212, "matrix": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 103, 106, 112, 117, 153, 154, 155, 158, 212, 213, 214, 218, 227, 251, 292, 294, 380, 404, 405, 415, 449, 450, 453, 455, 495, 497, 531, 533, 539], "matter": [1, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 401, 407, 415, 448, 453, 454, 457, 496, 498, 505, 508, 513, 524, 596, 598], "matthew": [394, 445, 447, 448], "matthia": [447, 448], "mattox": 468, "max": [16, 17, 18, 19, 20, 21, 22, 24, 25, 26, 27, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 83, 87, 88, 91, 103, 113, 114, 128, 130, 132, 168, 172, 176, 178, 182, 209, 217, 218, 219, 220, 221, 222, 224, 225, 227, 228, 229, 231, 232, 233, 234, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 248, 251, 252, 254, 255, 256, 257, 258, 259, 263, 264, 265, 266, 268, 270, 271, 272, 273, 276, 278, 279, 280, 282, 342, 395, 403, 410, 415, 424, 435, 436, 437, 439, 441, 453, 455, 459, 460, 464, 465, 466, 467, 470, 471, 473, 474, 475, 476, 479, 482, 484, 485, 486, 487, 489, 490, 492, 493, 495, 497, 498, 499, 500, 502, 503, 504, 508, 509, 518, 519, 521, 523, 542, 544, 545, 553, 573, 576, 582, 600], "max_ag": [45, 525], "max_column": [87, 91], "max_energi": 490, "max_lin": [87, 91], "max_nit": [134, 136, 455], "max_offset": 403, "max_percentil": 83, "max_radiu": [164, 166, 169, 207, 508], "max_region_numb": [179, 544], "max_width": [87, 91], "maxcal": 214, "maxclust": 312, "maxfev": 495, "maxim": [45, 82, 91, 113, 114, 134, 136, 182, 224, 228, 237, 240, 253, 264, 265, 269, 275, 279, 416, 451, 452, 453, 454, 455, 544], "maxima": [144, 218, 220], "maximilian": [439, 441, 442, 451, 452, 453, 454, 455], "maximum": [19, 20, 45, 46, 47, 83, 87, 91, 100, 125, 127, 130, 166, 169, 171, 179, 182, 188, 191, 195, 201, 206, 207, 217, 219, 221, 224, 225, 227, 228, 229, 231, 232, 233, 234, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 248, 251, 255, 256, 257, 258, 259, 263, 264, 265, 266, 268, 271, 272, 273, 278, 279, 292, 294, 341, 343, 346, 384, 390, 393, 401, 441, 462, 468, 490, 494, 498, 499, 504, 509, 519, 525, 533, 544, 573, 596, 597, 600], "maximum_likelihood": 416, "maxmimum": 282, "maxwellian": 32, "mayb": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 387, 395, 397, 398, 409], "mb": [194, 195, 204, 207, 395, 420, 422, 457, 463, 472, 481, 488, 505, 507, 508, 510, 512, 515, 517, 522, 550, 561, 583, 594], "mbox": [103, 110], "mc": 405, "mc_id": [83, 397, 400, 441, 477, 507], "mcerp": 405, "mckee": [53, 454], "mcmc": [405, 407, 416, 429, 434, 436, 573, 597], "mcmc_sampl": [407, 431], "md": [16, 84, 90, 105, 126, 390, 407, 413], "mdm": [26, 491], "mean": [42, 68, 87, 91, 96, 102, 103, 129, 131, 153, 154, 155, 158, 161, 166, 169, 236, 238, 242, 278, 293, 297, 313, 332, 387, 388, 390, 392, 394, 400, 401, 403, 404, 410, 415, 416, 421, 424, 436, 445, 464, 467, 468, 478, 490, 494, 495, 498, 502, 503, 504, 508, 509, 521, 554, 570, 598, 599], "meaning": 502, "meant": [393, 453, 458, 467, 470, 473, 475, 482, 486, 507], "measur": [27, 67, 102, 106, 111, 131, 134, 137, 146, 201, 284, 292, 294, 297, 298, 299, 300, 302, 304, 305, 308, 311, 393, 401, 406, 411, 418, 427, 432, 440, 446, 448, 459, 460, 464, 466, 467, 471, 474, 476, 479, 482, 484, 485, 490, 492, 506, 508, 519, 521, 533, 540, 542, 545, 596, 597, 600, 601], "mechan": [395, 405, 411, 414], "media": 413, "median": [83, 166, 169, 416, 424, 487, 503, 508], "median_zenith": 503, "medium": [45, 52, 387, 396], "meeseeksdev": 387, "meeseeksmachin": 387, "meet": [227, 251, 314, 393, 395, 407, 412, 418], "megabyt": [194, 195, 204, 207], "mem": [457, 463, 472, 481, 488, 505, 512, 515, 517, 522, 550, 561, 583, 594], "member": [83, 388, 392, 401, 413, 414, 447, 453, 494, 507, 510], "memo": [153, 201], "memori": [87, 88, 91, 92, 100, 103, 104, 106, 109, 110, 111, 194, 195, 204, 207, 275, 277, 279, 365, 387, 397, 399, 400, 403, 409, 411, 433, 439, 454, 467, 482, 535, 597], "memoryobserv": 88, "mender": [452, 453, 454], "mention": [59, 148, 387, 388, 390, 394, 395, 399, 401, 404, 406, 407, 412, 413, 417, 418, 497, 501, 502, 504, 523, 597], "mentor": [390, 407], "mere": 397, "merg": [67, 86, 87, 91, 198, 201, 227, 251, 354, 387, 390, 391, 392, 393, 400, 401, 402, 406, 407, 412, 413, 417, 418, 428, 429, 430, 431, 432, 433, 434, 435, 436, 444, 445, 446, 447, 448, 449], "merge_equ": 86, "mergesort": [87, 91], "mess": 388, "messag": [102, 213, 215, 216, 390, 401, 403, 410, 416, 437, 452, 460, 462, 464, 465, 466, 473, 474, 475, 486, 487, 489, 494, 495, 508, 518, 519, 535, 598], "met": [86, 368, 453, 485, 489, 597], "met_start": 86, "met_stop": 86, "meta": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 83, 85, 87, 88, 91, 94, 100, 103, 104, 106, 108, 109, 110, 111, 125, 127, 150, 151, 152, 153, 156, 157, 158, 160, 163, 165, 167, 168, 176, 183, 196, 197, 199, 205, 208, 209, 275, 276, 279, 280, 324, 368, 369, 370, 371, 397, 400, 401, 402, 411, 414, 417, 435, 436, 447, 451, 453, 454, 477, 487, 499, 503, 507, 509, 532, 533, 593], "meta_t": [100, 102, 103, 106, 110, 111, 176, 183, 411, 414, 436, 460, 467, 498, 531], "metaattribut": [87, 91], "metadata": [83, 84, 85, 87, 88, 90, 91, 105, 107, 125, 126, 127, 150, 151, 152, 156, 157, 160, 163, 165, 167, 168, 196, 197, 199, 205, 208, 209, 369, 391, 393, 404, 454, 465, 470, 471, 473, 477, 502, 518, 552, 553, 554, 555, 556, 557, 558, 559, 560, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 585, 586, 587, 588, 589, 590, 591, 592, 593], "metadata_fits_export_kei": [84, 90, 105, 126], "metadatabas": 414, "metadatabasemodel": 414, "metapackag": 404, "method": [6, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 50, 51, 52, 53, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 120, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 144, 146, 147, 148, 150, 151, 152, 153, 154, 155, 156, 157, 158, 160, 161, 163, 164, 165, 166, 167, 168, 169, 171, 172, 173, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 275, 276, 277, 278, 279, 280, 281, 282, 292, 294, 300, 302, 312, 322, 326, 330, 334, 335, 336, 361, 374, 376, 386, 387, 390, 393, 396, 397, 398, 401, 402, 403, 405, 406, 407, 409, 411, 413, 414, 416, 420, 424, 425, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 439, 441, 442, 444, 445, 446, 447, 448, 449, 450, 453, 454, 455, 458, 460, 462, 464, 465, 466, 468, 470, 471, 473, 474, 475, 476, 477, 478, 482, 485, 487, 489, 491, 492, 493, 494, 495, 497, 498, 500, 501, 502, 503, 504, 506, 507, 508, 509, 510, 513, 518, 519, 521, 530, 532, 534, 535, 539, 542, 544, 545, 546, 548, 571, 586, 595, 596, 597, 598, 600], "method_kwarg": [334, 335], "methoda": 431, "metric": 312, "metropoli": 416, "mev": [74, 77, 83, 150, 151, 152, 156, 273, 458, 459, 467, 470, 473, 475, 482, 486, 487, 492, 497, 499, 502, 507, 508, 521, 582], "meval": 555, "mexico": 509, "meyer": [248, 284, 474, 597], "meyer2010": 597, "mgtime": 402, "michael": [452, 454], "michel": 455, "mid": [113, 442, 453, 507], "middl": [376, 403], "midpoint": 88, "might": [13, 16, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 84, 90, 105, 126, 184, 201, 214, 387, 392, 398, 399, 401, 404, 406, 411, 413, 414, 416, 417, 420, 422, 429, 464, 485, 487, 493, 498, 500, 508, 509, 513, 514, 521, 523, 531, 535, 542, 548, 598, 600], "migra": [103, 106, 110, 111, 155, 158, 163, 187, 403, 477, 478, 497, 540], "migra_axi": [103, 106, 110, 111, 115, 155, 157, 158, 477, 478, 497, 498], "migrad": [102, 214, 460, 462, 464, 465, 466, 473, 474, 475, 487, 489, 494, 495, 508, 518, 519], "migrad_opt": [214, 495], "migrat": [103, 106, 110, 111, 115, 157, 158, 163, 396, 432, 439, 448, 473, 477, 498, 539, 540], "milagro": [97, 378, 603], "mileston": [396, 417], "milki": [33, 38, 427, 525], "miller": [87, 91], "million": [387, 414], "min": [16, 17, 18, 19, 20, 21, 22, 24, 25, 26, 27, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 83, 91, 103, 128, 130, 132, 148, 176, 217, 218, 219, 220, 221, 222, 224, 225, 227, 228, 229, 231, 232, 233, 234, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 248, 251, 252, 254, 255, 256, 257, 258, 259, 263, 264, 265, 266, 268, 270, 271, 272, 273, 276, 278, 279, 280, 282, 298, 342, 402, 403, 410, 415, 424, 439, 447, 455, 459, 460, 464, 465, 466, 467, 470, 471, 473, 474, 475, 476, 479, 482, 484, 485, 486, 487, 489, 490, 492, 493, 495, 497, 498, 499, 502, 503, 504, 508, 518, 519, 521, 523, 544, 573, 576, 582], "min_count": 173, "min_dist": [144, 145, 179, 468, 475, 544], "min_distance_input": [179, 544], "min_energi": 490, "min_npix": [154, 155, 161, 166, 169, 207, 209], "min_npred_background": 173, "min_num_live_point": 416, "min_pix": 455, "min_signific": 402, "min_significance_lc": 402, "minaya": 449, "mind": [390, 407, 482, 495], "mini": 407, "miniconda": 419, "minim": [19, 20, 26, 113, 114, 135, 196, 197, 199, 204, 205, 208, 209, 210, 214, 221, 222, 224, 225, 228, 229, 231, 232, 233, 237, 238, 240, 244, 245, 248, 252, 253, 254, 255, 256, 263, 264, 265, 267, 268, 269, 270, 271, 272, 273, 275, 276, 279, 280, 290, 399, 402, 410, 414, 416, 441, 451, 453, 458, 477, 493, 495, 504, 519, 535, 544, 545, 548, 596, 601], "minima": [218, 220, 416, 504], "minimis": [486, 503], "minimmum": [154, 155, 161, 166, 169, 207, 209], "minimum": [19, 20, 26, 47, 100, 124, 125, 127, 130, 135, 140, 144, 145, 148, 149, 171, 173, 179, 201, 204, 206, 216, 217, 219, 221, 222, 224, 225, 227, 228, 229, 231, 232, 233, 234, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 248, 251, 252, 254, 255, 256, 257, 258, 259, 263, 264, 265, 266, 268, 270, 271, 272, 273, 276, 278, 279, 280, 282, 286, 291, 295, 298, 314, 341, 343, 346, 382, 404, 416, 441, 447, 464, 468, 477, 494, 495, 499, 504, 508, 533, 535, 544, 573, 601], "mino": [214, 495], "minor": [387, 392, 407, 410, 412, 438, 451, 554, 555], "minos_contour": [431, 449], "minu": [158, 487], "minuit": [102, 122, 214, 215, 216, 290, 398, 405, 433, 448, 449, 453, 460, 462, 464, 465, 466, 473, 474, 475, 487, 489, 494, 495, 508, 518, 519], "minuit_opt": 495, "minut": [407, 418, 447, 459, 464, 465, 468, 471, 473, 475, 476, 477, 479, 484, 485, 486, 487, 489, 491, 493, 494, 495, 498, 501, 504, 518], "mireia": [450, 455], "mirror": 193, "misc": [427, 440, 444, 445, 446], "miss": [82, 87, 91, 150, 151, 152, 153, 156, 157, 158, 160, 163, 165, 167, 168, 176, 387, 390, 395, 396, 397, 398, 401, 407, 408, 411, 437, 439, 441, 447, 452, 455, 499], "mission": [83, 453, 597], "mistak": [392, 412], "mix": [386, 387, 403, 493, 499], "mixin": [87, 91], "mjd": [86, 94, 127, 226, 234, 239, 241, 242, 243, 259, 266, 278, 281, 369, 371, 388, 452, 453, 468, 477, 478, 484, 485, 486, 489, 490, 499, 502, 532, 586, 587, 588, 589, 590, 591, 592, 593, 602], "mjdref": [468, 499], "mjdreff": [94, 368, 371, 478], "mjdrefi": [94, 368, 371, 478], "mkdir": [403, 464, 465, 473, 474, 477, 518, 519], "mkn": [521, 597], "mkn_421_3fhl": 521, "mncontour": 214, "mnt": 450, "mock": 476, "mock_dl4": 476, "mode": [16, 84, 85, 87, 90, 91, 94, 103, 105, 106, 110, 126, 130, 154, 155, 161, 166, 169, 172, 195, 196, 197, 199, 200, 201, 204, 205, 207, 208, 209, 277, 414, 416, 434, 447, 450, 454, 486], "model": [1, 6, 15, 16, 18, 19, 20, 21, 26, 27, 28, 29, 30, 31, 32, 35, 36, 37, 38, 39, 40, 45, 50, 51, 52, 53, 54, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 84, 88, 90, 93, 99, 100, 102, 103, 104, 105, 106, 109, 110, 111, 114, 116, 119, 120, 122, 124, 125, 126, 127, 128, 129, 132, 133, 135, 136, 137, 138, 143, 146, 147, 150, 156, 157, 164, 165, 166, 167, 169, 173, 176, 189, 196, 197, 199, 205, 208, 209, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 250, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 303, 306, 311, 383, 386, 387, 388, 391, 392, 393, 399, 400, 402, 403, 405, 407, 408, 411, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 439, 440, 441, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 457, 458, 461, 462, 467, 468, 471, 476, 479, 482, 487, 494, 496, 497, 498, 499, 500, 505, 508, 509, 520, 523, 524, 530, 531, 533, 535, 536, 540, 542, 543, 550, 561, 583, 594, 596, 597, 600, 601], "model1": [222, 563, 565, 569, 572, 574, 577], "model2": [222, 459, 486, 563, 565, 569, 572, 574, 577], "model_1d": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 465], "model_2d": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40], "model_3d": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40], "model_add": [502, 565], "model_best": 459, "model_best_joint": 464, "model_best_stack": 464, "model_bin_": 489, "model_bin_0": 489, "model_bkg": 493, "model_computed_field": [16, 84, 90, 105, 126], "model_config": [16, 84, 90, 105, 126, 470, 518], "model_constraint": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40], "model_construct": [16, 84, 90, 105, 126], "model_copi": [16, 84, 90, 105, 126, 473, 502], "model_dump": [16, 84, 90, 105, 126], "model_dump_json": [16, 84, 90, 105, 126], "model_extra": [16, 84, 90, 105, 126], "model_field": [16, 84, 90, 105, 126], "model_fields_set": [16, 84, 90, 105, 126], "model_fit": 486, "model_in_bin": 489, "model_joint": 473, "model_json_schema": [16, 84, 90, 105, 126], "model_manag": [457, 501, 505], "model_nam": [103, 106, 110, 111, 227, 251, 383, 493], "model_parametrized_nam": [16, 84, 90, 105, 126], "model_plot": 476, "model_post_init": [16, 84, 90, 105, 126], "model_prior": 504, "model_read": 504, "model_rebuild": [16, 84, 90, 105, 126], "model_set_axi": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40], "model_simu": [467, 482, 486], "model_spectrum": 502, "model_str": 465, "model_typ": [227, 235, 249, 251, 267, 277, 290, 410, 501], "model_valid": [16, 84, 90, 105, 126], "model_validate_json": [16, 84, 90, 105, 126], "model_validate_str": [16, 84, 90, 105, 126], "model_weak": 504, "model_weak_prior": 504, "model_without_nam": 502, "modelbas": [235, 260, 267, 269, 270, 277, 281, 415], "modeldm": [19, 20], "modelevalu": 398, "modeling_2d": [457, 470, 472], "modelmetadata": 414, "modelmodel_dump": [16, 84, 90, 105, 126], "modelmodel_dump_json": [16, 84, 90, 105, 126], "models_3fhl": 501, "models_4fgl_roi": 492, "models_as_dict": [16, 84, 90, 105, 126], "models_diffus": 477, "models_fil": [16, 465, 470, 471, 473, 518], "models_fit": 482, "models_gc": 501, "models_gp": 507, "models_joint": 473, "models_or": 501, "models_read": 502, "models_select": 501, "models_stack": 473, "models_yaml": 502, "modelsmetadata": 414, "modern": [87, 91, 405], "modernis": [404, 433], "modest": [387, 554], "modif": [16, 84, 87, 90, 91, 105, 126, 387, 390, 409, 416, 417, 450], "modifi": [22, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 41, 87, 91, 93, 103, 110, 127, 128, 129, 132, 136, 172, 214, 334, 359, 384, 397, 399, 403, 409, 413, 414, 416, 434, 436, 437, 439, 441, 449, 452, 453, 455, 459, 465, 478, 498, 500, 504, 509, 518, 533, 548, 602], "modul": [6, 266, 387, 388, 392, 396, 403, 408, 427, 429, 435, 447, 486, 492, 494, 498, 501, 523, 524, 525, 526, 573, 591, 602], "modular": 393, "mohanti": 102, "mohrmann": [403, 428, 429, 430, 446, 447, 448, 451, 453, 455, 597], "mohrmann2019": 597, "moment": [15, 51, 54, 86, 95, 267, 363, 393, 401, 403, 404, 407, 412, 413, 497, 499, 540], "moncar": [214, 495], "monitor": [400, 507, 535], "monkei": 387, "mono": 395, "monoton": 201, "mont": [405, 416, 540, 597], "montecarlo": [104, 109, 214], "month": [78, 390, 396, 401, 404, 406, 407, 412, 417, 421, 427, 428, 429, 430, 431, 440, 443, 444, 445, 446, 447, 448, 449], "monthli": [396, 414, 420, 449], "moor": 24, "morcuend": [449, 452, 454, 455], "more": [19, 20, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 71, 74, 75, 78, 87, 91, 99, 100, 102, 103, 106, 110, 111, 137, 144, 146, 153, 182, 196, 197, 199, 208, 209, 221, 222, 223, 224, 225, 226, 228, 229, 231, 233, 234, 237, 238, 239, 240, 241, 242, 243, 245, 252, 253, 254, 255, 256, 258, 259, 264, 265, 266, 268, 271, 272, 273, 279, 280, 295, 301, 322, 362, 387, 388, 390, 392, 393, 394, 396, 397, 398, 399, 400, 401, 402, 403, 404, 406, 407, 408, 411, 412, 413, 414, 415, 416, 418, 419, 420, 421, 424, 433, 434, 435, 436, 439, 446, 448, 449, 453, 455, 459, 460, 464, 466, 468, 471, 473, 477, 478, 486, 489, 490, 491, 493, 495, 496, 498, 499, 500, 501, 502, 503, 504, 509, 510, 513, 521, 531, 532, 533, 535, 544, 545, 547, 548, 554, 595, 596, 598, 600, 602], "moreov": [403, 492, 498, 531], "morpholog": [122, 400, 457, 480, 481, 513], "morphologi": [50, 52, 122, 398, 400, 410, 427, 444, 446, 460, 470, 476, 477, 478, 482, 492, 498, 549], "mosaic": 393, "most": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 77, 83, 87, 91, 95, 120, 127, 386, 387, 388, 390, 392, 393, 394, 395, 398, 399, 400, 401, 403, 404, 405, 406, 407, 409, 410, 411, 412, 413, 414, 416, 418, 420, 421, 439, 446, 447, 449, 450, 453, 454, 470, 471, 479, 484, 486, 492, 494, 495, 497, 498, 499, 500, 507, 508, 513, 514, 521, 523, 533, 534, 535, 540, 542, 548, 595, 597, 598, 601], "mostli": [56, 69, 314, 387, 388, 393, 394, 395, 396, 401, 403, 406, 407, 408, 411, 412, 414, 418, 439, 447, 492, 498, 510, 521, 600, 602], "motion": [45, 318], "motiv": [182, 392, 394, 395, 401, 404, 406, 417, 502, 535], "move": [290, 392, 393, 394, 395, 398, 401, 406, 407, 408, 411, 417, 423, 429, 430, 432, 433, 434, 435, 439, 440, 444, 445, 447, 448, 449, 450, 467], "move_axi": 453, "movement": 413, "mpatch": 479, "mpg": 67, "mpi": [67, 416], "mpl": 387, "mpl_check_plot": 387, "mpl_kwarg": [464, 475, 479], "mpl_normal": [377, 378, 603], "mpl_plot_check": 387, "mpl_style": 447, "msg": [458, 467, 470, 473, 475, 482, 486, 507], "msh": [471, 492, 498], "msh15": 510, "mst": 507, "mu": [26, 236, 292, 294, 295, 380, 415, 459, 491, 504, 539, 540, 600], "mu_": [295, 301, 599, 600, 601], "mu_background": 598, "mu_bkg": [106, 111, 292, 305, 311, 424, 598, 600], "mu_off": 600, "mu_on": [295, 301, 600], "mu_sig": [294, 305, 311, 471, 599, 600], "mu_x": 600, "much": [197, 387, 393, 398, 401, 403, 406, 407, 416, 432, 439, 467, 473, 479, 487, 504, 508, 521, 555], "mul": [26, 459, 491, 502, 563, 569, 572, 574, 577, 582], "mulitpli": [236, 246, 260, 282], "multi": [87, 91, 195, 207, 396, 401, 415, 433, 436, 440, 447, 457, 462, 468, 480, 481, 493, 495, 497, 502, 503, 508, 513, 533, 535, 547, 596, 597], "multibeam": 35, "multicompon": 455, "multidimension": [393, 403, 415, 454, 494, 511, 513, 540, 596], "multinorm": 405, "multipl": [19, 20, 26, 82, 87, 91, 92, 100, 102, 103, 106, 109, 110, 111, 114, 116, 119, 136, 144, 170, 196, 197, 199, 205, 208, 209, 214, 221, 222, 223, 224, 225, 226, 227, 228, 229, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 248, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 275, 276, 277, 278, 279, 280, 281, 282, 387, 388, 393, 396, 399, 400, 401, 403, 405, 408, 409, 411, 415, 416, 420, 429, 436, 437, 439, 447, 453, 454, 455, 466, 473, 485, 492, 493, 494, 498, 499, 500, 502, 508, 533, 547, 573, 582, 595, 596, 597, 598, 603], "multipli": [19, 20, 26, 127, 221, 222, 224, 225, 227, 228, 229, 231, 232, 233, 237, 238, 240, 242, 244, 245, 248, 251, 252, 253, 254, 256, 257, 258, 263, 264, 265, 268, 269, 270, 271, 272, 273, 275, 276, 278, 279, 280, 288, 293, 303, 306, 314, 459, 468, 471, 487, 491, 502, 563, 600], "multiprocess": [13, 93, 128, 129, 132, 136, 172, 329, 334, 335, 433, 453, 454], "multithread": 13, "multivari": 405, "multivariategaussianprior": 415, "multiwavelength": 229, "muon": 503, "muoneff": 503, "mur": [26, 491], "must": [19, 20, 26, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 82, 87, 88, 91, 102, 103, 106, 107, 111, 112, 117, 127, 132, 136, 137, 144, 145, 146, 164, 172, 176, 178, 183, 190, 194, 195, 196, 197, 198, 199, 200, 201, 204, 205, 206, 207, 208, 209, 221, 222, 223, 224, 225, 226, 227, 228, 229, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 248, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 275, 276, 277, 278, 279, 280, 281, 282, 299, 300, 314, 332, 382, 387, 388, 392, 398, 399, 402, 411, 412, 413, 414, 416, 458, 464, 470, 485, 493, 494, 498, 500, 501, 502, 507, 508, 519, 521, 535, 547, 597], "mutablemap": 203, "mutablesequ": [92, 100, 251], "mutipl": 420, "mutltipl": 390, "my": [387, 409, 410, 416, 419, 477, 478, 493, 502], "my_custom_model": 502, "my_flux_map": 411, "my_ob": 89, "my_obs_filt": 89, "my_sourc": 409, "mybind": [418, 447], "myconfig": [11, 598], "mycustomgaussianmodel": [410, 502], "mycustomprior": 504, "mycustomspectralmodel": [262, 502], "n": [19, 20, 51, 82, 87, 91, 125, 127, 194, 195, 196, 197, 199, 201, 202, 205, 207, 208, 209, 217, 219, 283, 290, 387, 390, 401, 404, 416, 419, 421, 445, 482, 485, 489, 491, 492, 494, 495, 499, 501, 504, 507, 508, 509, 510, 517, 540, 547, 548, 550, 554, 555, 597, 599, 601], "n_": [103, 110, 295, 301, 531, 599, 600, 601], "n_0": [238, 570], "n_bad": 508, "n_bin": 493, "n_bkg": [292, 294, 600], "n_dof": [125, 127, 533], "n_event": [196, 197, 199, 205, 208, 209, 226, 234, 239, 241, 242, 243, 259, 266, 278, 281, 400], "n_event_bunch": [104, 109], "n_events_bkg": 400, "n_fit_bin": [473, 486, 493, 501], "n_free_paramet": [134, 290], "n_input": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 48, 49], "n_ism": [43, 44, 45, 52, 528, 529], "n_job": [16, 93, 128, 129, 132, 136, 172, 334, 453, 465, 468, 470, 471, 473, 479, 485, 498, 518], "n_jobs_default": [93, 128, 129, 132, 136, 172], "n_model": [72, 76], "n_ob": [467, 477, 486], "n_observ": 598, "n_off": [106, 111, 294, 304, 305, 311, 471, 599, 600], "n_off_posit": 466, "n_off_region": [184, 466], "n_on": [292, 294, 295, 301, 304, 305, 311, 424, 471, 598, 599, 600], "n_output": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 48, 49], "n_point": [19, 20, 26, 221, 222, 225, 226, 229, 231, 232, 233, 234, 238, 239, 241, 242, 243, 244, 245, 248, 252, 254, 256, 257, 258, 259, 263, 266, 268, 270, 271, 272, 273, 276, 278, 280, 281, 415, 592], "n_scale": 120, "n_sig": [292, 294, 487, 600], "n_sig_matching_signific": [292, 294], "n_sigma": [71, 74, 75, 78, 124, 125, 126, 127, 128, 129, 132, 133, 134, 135, 136, 290, 292, 294, 307, 309, 458, 468, 479, 485, 492, 493, 494, 518, 521, 533], "n_sigma_asimov": 307, "n_sigma_sensit": [124, 125, 126, 127, 128, 133, 136, 479], "n_sigma_ul": [71, 74, 75, 78, 124, 125, 126, 127, 128, 129, 132, 133, 136, 468, 479, 484, 485, 492, 493, 494, 518, 521, 533], "n_sourc": [45, 525], "n_spatial_ax": 200, "n_submodel": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40], "n_tel": 91, "n_time_bin": [485, 489], "nachiketa": [445, 446], "nadarajah": 147, "naima": [252, 386, 404, 405, 406, 407, 410, 430, 457, 458, 460, 464, 465, 466, 467, 468, 470, 471, 473, 474, 475, 476, 477, 478, 479, 484, 485, 486, 487, 491, 492, 493, 495, 498, 499, 500, 501, 502, 504, 506, 507, 508, 509, 510, 518, 519, 521, 535, 549, 562, 582, 583], "naimamodel": [430, 433, 435], "naimaspectralmodel": [262, 410, 439, 502, 535, 573], "nakashima": 431, "name": [15, 16, 19, 20, 26, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 48, 49, 52, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 90, 91, 94, 96, 99, 100, 101, 102, 103, 105, 106, 107, 108, 110, 111, 112, 116, 117, 118, 119, 125, 126, 127, 128, 129, 132, 133, 136, 140, 148, 150, 151, 152, 153, 154, 155, 156, 157, 158, 160, 161, 163, 164, 165, 166, 167, 168, 169, 176, 177, 186, 187, 192, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 214, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 248, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 275, 276, 277, 278, 279, 280, 281, 282, 290, 312, 313, 335, 366, 367, 382, 388, 390, 393, 396, 397, 399, 400, 401, 402, 405, 406, 409, 410, 411, 413, 414, 415, 416, 417, 420, 422, 429, 430, 431, 432, 433, 434, 435, 436, 439, 448, 450, 451, 453, 455, 458, 459, 460, 462, 464, 465, 466, 467, 468, 470, 471, 473, 474, 475, 476, 477, 478, 479, 482, 484, 485, 486, 487, 489, 492, 493, 494, 495, 497, 498, 499, 501, 502, 503, 504, 507, 508, 509, 510, 518, 519, 521, 523, 533, 535, 539, 542, 544, 545, 547, 548, 549, 552, 553, 554, 555, 556, 557, 558, 559, 560, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 585, 586, 587, 588, 589, 590, 591, 592, 593, 596, 600], "name1": 495, "name2": 495, "name_err": [128, 129, 132, 133], "name_scan": [128, 129, 132, 133], "name_substr": [227, 251, 501], "name_ul": [128, 129, 132, 133], "namedtupl": 387, "nameerror": 387, "namespac": [6, 16, 84, 90, 105, 126, 387, 406, 408, 432, 435, 445, 502, 524, 602], "namibia": 510, "nan": [19, 20, 26, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 67, 87, 91, 103, 125, 127, 139, 176, 194, 195, 196, 197, 199, 205, 208, 209, 217, 219, 221, 222, 224, 225, 228, 229, 231, 232, 233, 234, 237, 238, 239, 240, 241, 242, 243, 244, 245, 248, 252, 254, 255, 256, 257, 258, 259, 263, 264, 265, 266, 268, 270, 271, 272, 273, 276, 278, 279, 280, 387, 410, 415, 455, 459, 460, 464, 465, 466, 467, 470, 471, 473, 474, 479, 482, 484, 485, 486, 492, 493, 494, 495, 497, 498, 499, 500, 501, 502, 504, 518, 519, 521, 535, 573, 582], "nan_to_num": [100, 103, 106, 110, 111, 154, 155, 161, 166, 169, 197, 205, 209, 277], "nansum": [196, 197, 199, 208, 209], "nasa": [58, 60, 61, 62, 64, 65, 101, 153, 201, 407, 576], "nativ": [87, 91, 202, 399, 404, 439, 499], "natur": [87, 91, 387, 393, 410, 413, 502, 571], "nauroi": [311, 597], "naurois2012": 597, "navarro": [25, 523], "navi": 459, "navig": [447, 449], "naxi": 499, "naxis1": 499, "naxis2": 499, "naxis3": 499, "naxis4": 499, "nbin": [16, 112, 117, 129, 156, 158, 164, 166, 198, 201, 206, 209, 346, 347, 403, 458, 464, 465, 466, 470, 471, 473, 474, 475, 477, 478, 479, 484, 485, 487, 489, 493, 497, 498, 499, 502, 506, 508, 509, 518, 539, 542, 544, 545, 548], "nbin_per_decad": 201, "nbstripout": 395, "nbvh_kem": 489, "ncall": 416, "nchunk": 293, "ncol": [150, 151, 196, 197, 199, 205, 208, 209, 380, 384, 460, 464, 468, 471, 473, 475, 487, 493, 495, 499, 500, 544, 563], "ncp": 490, "nd": [196, 197, 199, 205, 208, 209, 275, 276, 408, 499, 548], "ndarrai": [17, 18, 21, 22, 24, 25, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 83, 87, 91, 92, 102, 120, 150, 151, 152, 153, 154, 157, 158, 160, 163, 164, 165, 166, 167, 169, 182, 194, 195, 196, 197, 198, 199, 200, 201, 202, 204, 205, 206, 207, 208, 209, 212, 213, 217, 218, 219, 220, 227, 235, 253, 254, 280, 291, 292, 293, 294, 295, 296, 297, 299, 300, 301, 302, 303, 306, 308, 310, 311, 314, 325, 326, 327, 336, 341, 343, 376, 380, 381, 387, 493, 499, 521, 547, 548], "nddata": [430, 433], "nddataarrai": [431, 445, 446], "ndecad": [17, 18, 21, 22, 23, 24, 25, 27, 286], "ndim": [103, 110, 112, 117, 151, 153, 156, 195, 202, 207, 466, 470, 475, 479, 493, 494, 497, 498, 499, 507, 508, 521, 533, 548], "ndimag": [209, 401], "ndmap": 494, "ndmin": 314, "ne": 399, "nearest": [26, 136, 150, 151, 152, 153, 156, 157, 158, 160, 163, 165, 167, 168, 176, 196, 197, 199, 201, 205, 208, 209, 326, 441, 448, 450, 499, 533, 535, 547], "nearli": [387, 439, 460], "nebula": [50, 284, 290, 433, 464, 465, 466, 471, 474, 475, 476, 484, 495, 500, 502, 504, 508, 509, 510, 518, 519, 521, 526, 548, 597], "necess": [411, 504], "necessari": [16, 84, 90, 102, 105, 126, 390, 397, 402, 413, 417, 441, 460, 464, 466, 467, 471, 477, 478, 482, 485, 486, 494, 498, 499, 501, 502, 519, 531, 532, 535], "necessarili": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 82, 402, 470], "need": [11, 16, 19, 20, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 84, 85, 87, 89, 90, 91, 94, 102, 103, 105, 106, 110, 111, 124, 126, 127, 154, 155, 166, 168, 169, 204, 283, 284, 314, 386, 387, 388, 392, 393, 394, 395, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 409, 411, 412, 413, 414, 416, 418, 419, 424, 425, 428, 429, 430, 447, 449, 454, 459, 460, 465, 467, 468, 470, 471, 475, 477, 478, 485, 486, 489, 490, 495, 497, 499, 500, 501, 502, 503, 507, 509, 518, 521, 531, 544, 546, 547, 598, 602], "need_upd": 439, "neg": [19, 20, 26, 87, 91, 125, 127, 128, 129, 132, 133, 136, 221, 222, 225, 229, 231, 232, 233, 238, 244, 245, 248, 252, 254, 256, 257, 258, 263, 268, 270, 271, 272, 273, 276, 279, 280, 292, 294, 388, 436, 454, 455, 504, 533, 600, 601], "neglect": [130, 182, 458, 498, 533, 601], "neighbor": [157, 165, 167, 441, 448], "neighbour": [326, 557], "neither": [96, 182, 404, 412], "neldermead": 214, "nep": [392, 412], "neraest": 197, "nest": [15, 195, 196, 197, 252, 290, 314, 354, 391, 453, 508, 546, 600], "nested_model": 252, "nestedsampl": 416, "net": [87, 91, 464], "neutrino": [52, 387], "neutron": 36, "never": [384, 386, 387, 390, 393, 397, 401, 409, 416, 509], "nevertheless": [420, 422], "new": [16, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 82, 83, 84, 86, 87, 88, 90, 91, 92, 102, 103, 105, 106, 110, 111, 125, 126, 127, 128, 132, 134, 136, 139, 148, 150, 151, 152, 153, 156, 158, 160, 163, 168, 179, 180, 184, 194, 195, 196, 197, 198, 199, 200, 201, 202, 204, 205, 206, 207, 208, 209, 227, 251, 267, 277, 302, 314, 338, 365, 372, 390, 392, 393, 394, 395, 396, 397, 399, 400, 401, 404, 405, 406, 407, 408, 409, 410, 412, 413, 414, 416, 417, 418, 419, 420, 422, 423, 424, 425, 426, 427, 440, 443, 473, 489, 490, 492, 493, 499, 501, 502, 532, 533, 535, 582, 597], "new_attribut": 387, "new_axi": 148, "new_dataset_nam": [227, 251], "new_datasets_nam": [19, 20, 26, 221, 222, 223, 224, 225, 226, 228, 229, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 248, 250, 252, 253, 254, 255, 256, 257, 258, 259, 260, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 275, 276, 277, 278, 279, 280, 281, 282], "new_ev": 535, "new_flux_map": 411, "new_funct": 387, "new_input": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40], "new_model": 582, "new_nam": [87, 91, 194, 195, 196, 197, 199, 200, 201, 204, 205, 207, 208, 209], "new_ob": [88, 535], "new_observ": 92, "newaxi": 547, "newer": [404, 418, 429, 448], "newli": [433, 434, 435], "next": [87, 91, 103, 387, 388, 392, 403, 407, 408, 412, 415, 417, 445, 446, 458, 473, 476, 477, 479, 482, 492, 493, 494, 498, 499, 502, 503, 504, 508], "nfcn": 495, "nfev": [102, 214, 215, 216, 460, 462, 464, 465, 466, 473, 474, 475, 487, 489, 494, 495, 508, 518, 519], "nfw": [25, 27, 523], "nfwprofil": 491, "ni": 387, "nice": [387, 392, 398, 404, 406, 414, 431, 439, 468, 473, 492, 598], "nicer": [387, 424, 521], "nieto": [436, 439, 441, 442, 450, 452, 453, 454, 455], "nieva": [450, 455], "night": [402, 485], "nightli": [420, 484], "nightwise_lc": 484, "nigro": [436, 439, 441, 447, 448, 450, 453], "niter": [125, 127, 136, 416, 468], "nmcid": 442, "nn": 509, "noah": [415, 454], "node": [19, 20, 26, 166, 169, 198, 201, 221, 222, 225, 229, 231, 232, 233, 238, 244, 245, 248, 252, 253, 254, 256, 257, 258, 263, 268, 270, 271, 272, 273, 276, 280, 430, 495, 497, 499, 507, 508, 556, 574], "node_typ": [158, 198, 201, 206, 477, 478, 497, 508], "noeth": [436, 437], "nois": [293, 299, 405, 597], "noisi": 507, "non": [16, 84, 87, 90, 91, 100, 103, 105, 106, 110, 111, 116, 119, 125, 126, 127, 134, 136, 150, 151, 152, 153, 154, 155, 156, 157, 158, 160, 161, 163, 165, 166, 167, 168, 169, 178, 182, 194, 195, 196, 197, 199, 200, 201, 202, 204, 205, 206, 207, 208, 209, 277, 307, 309, 314, 377, 378, 380, 382, 393, 398, 401, 405, 407, 408, 414, 416, 429, 433, 434, 435, 439, 447, 450, 451, 453, 454, 455, 460, 489, 508, 513, 514, 531, 535, 546, 547, 573, 597], "none": [16, 17, 19, 20, 21, 22, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 50, 51, 52, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 96, 99, 100, 101, 102, 103, 104, 105, 106, 107, 109, 110, 111, 113, 114, 115, 118, 120, 122, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 139, 143, 146, 148, 150, 151, 152, 153, 154, 155, 156, 157, 158, 160, 161, 163, 164, 165, 166, 167, 168, 169, 171, 172, 173, 176, 178, 179, 180, 181, 182, 183, 184, 186, 187, 188, 189, 191, 192, 193, 194, 195, 196, 197, 199, 200, 201, 202, 203, 204, 205, 207, 208, 209, 210, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 231, 232, 233, 234, 235, 237, 238, 239, 240, 241, 242, 243, 244, 245, 248, 249, 251, 252, 253, 254, 255, 256, 257, 258, 259, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 275, 276, 277, 278, 279, 280, 281, 285, 290, 292, 293, 294, 311, 312, 314, 317, 322, 326, 334, 335, 336, 338, 341, 342, 343, 344, 353, 356, 362, 370, 374, 375, 376, 380, 381, 382, 383, 384, 387, 399, 401, 404, 411, 414, 415, 416, 441, 452, 453, 455, 459, 460, 462, 464, 465, 467, 468, 473, 474, 475, 477, 478, 479, 482, 485, 486, 487, 489, 491, 492, 493, 494, 498, 499, 501, 502, 504, 508, 518, 523, 531, 547, 553, 554, 555, 598], "nonetyp": [84, 90, 105, 126], "nonposit": [19, 20, 26, 221, 222, 225, 229, 231, 232, 233, 238, 244, 245, 248, 252, 254, 256, 257, 258, 263, 268, 270, 271, 272, 273, 276, 280], "nonposx": [19, 20, 26, 221, 222, 225, 229, 231, 232, 233, 238, 244, 245, 248, 252, 254, 256, 257, 258, 263, 268, 270, 271, 272, 273, 276, 280, 439], "nonstopmod": 388, "nonzero": 39, "nooverlaperror": 452, "noqa": [19, 20, 153, 189, 200, 201, 207, 384], "nor": [96, 182, 397, 408, 412, 417], "norm": [19, 20, 26, 124, 125, 127, 128, 129, 132, 133, 136, 138, 147, 173, 221, 222, 225, 226, 229, 231, 232, 233, 234, 235, 238, 239, 241, 242, 243, 244, 245, 248, 252, 253, 254, 256, 257, 258, 259, 263, 266, 268, 270, 271, 272, 273, 276, 278, 280, 281, 380, 398, 409, 411, 415, 433, 434, 436, 439, 454, 455, 457, 464, 468, 470, 471, 473, 474, 476, 477, 478, 479, 482, 485, 486, 487, 491, 492, 493, 494, 495, 508, 518, 519, 521, 523, 533, 535, 542, 549, 551, 555, 561, 562, 563, 582, 583, 592, 600, 603], "norm_0": [556, 574], "norm_1": [556, 574], "norm_2": [556, 574], "norm_3": [556, 574], "norm_4": 574, "norm_5": 574, "norm_err": [124, 125, 127, 129, 136, 411, 468, 479, 485, 493, 494, 533], "norm_errn": [125, 127, 485, 492, 494, 521, 533], "norm_errp": [125, 127, 485, 492, 494, 521, 533], "norm_only_chang": 451, "norm_prior": 415, "norm_scan": [125, 411, 464, 465, 494, 533], "norm_sensit": [125, 127, 485, 494], "norm_ul": [125, 127, 411, 479, 485, 492, 493, 494, 521, 533], "norma": [33, 38], "normal": [42, 102, 103, 106, 110, 111, 128, 129, 130, 132, 143, 150, 151, 152, 153, 155, 156, 157, 158, 160, 163, 164, 165, 166, 167, 168, 169, 173, 196, 197, 199, 205, 206, 208, 209, 235, 253, 254, 257, 277, 279, 283, 314, 377, 378, 387, 388, 390, 392, 393, 397, 398, 401, 405, 411, 428, 432, 441, 455, 459, 471, 477, 484, 485, 487, 498, 499, 500, 501, 502, 508, 519, 521, 547, 553, 554, 555, 558, 559, 560, 582, 597, 599, 600, 603], "normalis": [67, 80, 124, 125, 127, 132, 150, 151, 152, 153, 156, 158, 160, 163, 164, 168, 173, 193, 196, 197, 199, 205, 208, 209, 253, 254, 267, 385, 465, 468, 470, 471, 486, 494, 500, 501, 502, 508, 518], "normed_templ": 502, "normspectralmodel": [227, 251, 410, 436, 452, 454, 502, 542], "north": [228, 237, 240, 553], "notat": [436, 537, 539, 545, 596, 601], "note": [15, 16, 19, 20, 26, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 78, 82, 83, 84, 86, 87, 90, 91, 94, 102, 103, 104, 105, 106, 109, 110, 111, 120, 124, 126, 127, 129, 132, 136, 153, 158, 166, 168, 178, 189, 207, 211, 214, 217, 221, 222, 224, 225, 228, 229, 231, 232, 233, 234, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 248, 252, 254, 255, 256, 257, 258, 259, 263, 264, 265, 266, 268, 270, 271, 272, 273, 276, 278, 279, 280, 299, 300, 314, 335, 362, 378, 384, 386, 389, 390, 392, 395, 400, 401, 404, 407, 411, 412, 413, 415, 416, 417, 418, 421, 427, 429, 449, 451, 453, 455, 458, 459, 460, 465, 466, 468, 470, 473, 476, 478, 485, 486, 487, 489, 490, 491, 492, 493, 495, 497, 498, 499, 500, 501, 502, 504, 507, 508, 509, 531, 533, 535, 542, 547, 548, 558, 559, 571, 600, 601, 602], "notebook": [87, 91, 351, 390, 391, 396, 397, 401, 402, 403, 404, 405, 407, 417, 418, 420, 421, 422, 425, 428, 429, 430, 431, 433, 434, 435, 437, 439, 441, 445, 446, 447, 448, 449, 454, 455, 458, 459, 460, 462, 464, 465, 466, 467, 468, 470, 471, 473, 474, 475, 476, 477, 478, 479, 482, 484, 485, 486, 487, 489, 490, 491, 492, 493, 494, 495, 497, 498, 499, 500, 501, 502, 503, 504, 506, 507, 508, 509, 510, 513, 516, 518, 519, 521, 534, 535, 536, 549, 552, 553, 554, 555, 556, 557, 558, 559, 560, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 585, 586, 587, 588, 589, 590, 591, 592, 593, 598], "noth": [338, 404, 504], "notic": [393, 495], "notimplementederror": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40], "notion": 416, "nov": [394, 399, 404, 405, 407, 411, 426, 450], "novemb": [396, 426, 436, 437, 438, 439], "now": [16, 82, 84, 88, 90, 99, 101, 105, 125, 126, 127, 193, 206, 252, 387, 390, 392, 393, 394, 397, 399, 400, 401, 403, 404, 405, 406, 407, 408, 411, 413, 414, 415, 423, 428, 429, 430, 431, 432, 433, 434, 435, 436, 439, 440, 441, 442, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 458, 459, 460, 464, 465, 466, 467, 470, 471, 473, 474, 476, 477, 478, 479, 482, 484, 485, 486, 487, 489, 493, 495, 499, 500, 501, 502, 503, 504, 507, 508, 509, 510, 518, 519, 521, 532, 533, 544, 585, 589, 590, 591, 598, 600, 601, 602], "np": [19, 20, 83, 87, 91, 103, 106, 110, 111, 112, 117, 120, 124, 127, 136, 155, 196, 197, 199, 205, 208, 209, 214, 217, 219, 221, 224, 225, 228, 229, 231, 232, 233, 234, 237, 238, 239, 240, 241, 242, 243, 244, 245, 248, 255, 256, 257, 258, 259, 263, 264, 265, 266, 268, 271, 272, 273, 278, 279, 283, 387, 388, 398, 399, 402, 410, 411, 415, 416, 424, 450, 455, 458, 467, 468, 471, 477, 479, 482, 485, 486, 487, 489, 490, 491, 492, 494, 495, 497, 498, 499, 500, 502, 503, 504, 527, 528, 529, 533, 535, 542, 547, 548, 553, 554, 556, 582, 591, 598], "npanel": [374, 603], "npix": [195, 204, 207, 208, 209, 464, 475, 497, 508, 544, 548, 552, 556], "npix_max": 195, "npoint": [293, 495], "npred": [103, 106, 110, 111, 124, 125, 127, 128, 129, 132, 133, 134, 136, 277, 296, 310, 398, 399, 400, 409, 411, 427, 429, 436, 439, 445, 447, 455, 468, 477, 479, 485, 492, 493, 494, 504, 508, 531, 533, 600], "npred_background": [103, 106, 110, 111, 125, 127, 436, 466, 467, 479, 493, 533, 600], "npred_background_min": 149, "npred_excess": [124, 125, 127, 129, 136, 138, 147, 468, 471, 479, 485, 487, 494, 533], "npred_excess_err": [125, 127], "npred_excess_errn": [125, 127], "npred_excess_errp": [125, 127], "npred_excess_ref": [125, 127], "npred_excess_ul": [125, 127], "npred_min": 149, "npred_off": [106, 111, 600], "npred_sig": [103, 106, 110, 111, 399], "npred_sign": [103, 106, 110, 111, 383, 439, 453, 493, 600], "npred_signal_min": 149, "npred_sourc": 493, "nrow": [460, 464, 495, 563], "nside": [195, 196, 197, 450, 508, 546], "nside2resol": 197, "nside_til": [195, 197], "nsou": 468, "nstep": 402, "nu": [19, 26], "nu_e": [26, 491], "nu_mu": [26, 491], "nu_tau": [26, 491], "nuclei": 27, "nuisanc": [464, 495, 597, 601], "null": [125, 127, 128, 129, 132, 133, 134, 290, 292, 294, 455, 465, 470, 471, 473, 476, 494, 502, 518, 533, 552, 553, 554, 555, 556, 557, 558, 559, 560, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 585, 586, 587, 588, 589, 590, 591, 592, 593, 600], "null_valu": [133, 134, 290, 479], "nullabl": [87, 91], "num": 83, "numba": 404, "number": [11, 17, 18, 19, 20, 21, 22, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 35, 36, 37, 39, 40, 42, 45, 46, 47, 67, 72, 76, 82, 83, 85, 86, 87, 91, 92, 93, 94, 100, 101, 103, 104, 106, 109, 110, 111, 113, 114, 120, 124, 125, 126, 127, 128, 129, 132, 133, 134, 135, 136, 150, 151, 152, 153, 154, 155, 156, 157, 158, 160, 161, 163, 165, 166, 167, 168, 169, 172, 173, 176, 179, 184, 194, 195, 196, 197, 198, 199, 200, 201, 202, 204, 205, 206, 207, 208, 209, 214, 215, 216, 217, 218, 220, 221, 222, 224, 225, 226, 227, 228, 229, 231, 232, 233, 234, 237, 238, 239, 240, 241, 242, 243, 244, 245, 248, 251, 252, 254, 255, 256, 257, 258, 259, 263, 264, 265, 266, 268, 270, 271, 272, 273, 276, 278, 279, 280, 281, 286, 290, 292, 293, 294, 307, 308, 309, 314, 332, 334, 335, 336, 337, 338, 341, 342, 343, 344, 346, 347, 374, 380, 388, 391, 392, 393, 396, 398, 399, 400, 401, 402, 406, 408, 411, 413, 414, 416, 417, 424, 429, 439, 441, 442, 443, 448, 449, 450, 453, 454, 455, 458, 459, 460, 464, 465, 466, 467, 468, 470, 471, 473, 475, 476, 477, 478, 482, 484, 485, 486, 487, 489, 490, 491, 492, 493, 494, 498, 499, 500, 502, 503, 507, 508, 509, 510, 518, 519, 521, 525, 531, 533, 535, 542, 544, 547, 548, 596, 597, 598, 599, 600, 601], "number_of_column": [87, 91], "number_param": 212, "numer": [17, 18, 19, 20, 21, 22, 24, 25, 26, 27, 83, 87, 91, 127, 201, 217, 221, 222, 224, 225, 228, 229, 231, 232, 233, 234, 237, 238, 239, 240, 241, 242, 243, 244, 245, 248, 252, 254, 255, 256, 257, 258, 259, 263, 264, 265, 266, 268, 270, 271, 272, 273, 276, 278, 279, 280, 281, 314, 386, 387, 400, 405, 421, 439, 458, 467, 470, 473, 475, 482, 486, 499, 507], "numpi": [19, 20, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 83, 87, 91, 92, 102, 112, 117, 120, 127, 150, 151, 152, 153, 155, 156, 157, 158, 160, 163, 164, 165, 167, 168, 194, 195, 196, 197, 199, 204, 205, 207, 208, 209, 211, 212, 214, 217, 218, 220, 221, 224, 225, 227, 228, 229, 231, 232, 233, 234, 237, 238, 239, 240, 241, 242, 243, 244, 245, 248, 251, 255, 256, 257, 258, 259, 263, 264, 265, 266, 267, 268, 271, 272, 273, 278, 279, 292, 294, 314, 338, 343, 381, 386, 387, 388, 390, 394, 398, 400, 404, 405, 406, 413, 415, 424, 425, 432, 433, 436, 444, 445, 446, 448, 450, 451, 452, 454, 455, 458, 460, 464, 465, 466, 467, 468, 470, 471, 473, 474, 475, 476, 477, 478, 479, 482, 484, 485, 486, 487, 489, 490, 491, 492, 493, 494, 495, 497, 498, 499, 500, 501, 502, 503, 504, 506, 507, 508, 509, 510, 513, 518, 519, 521, 527, 528, 529, 533, 535, 547, 548, 553, 554, 556, 582, 591], "numpoint": [214, 495], "numpy121": 390, "nupeak_ob": 521, "nutshel": 602, "nzmaxca0": 498, "n\u00f6the": [439, 441, 442], "o": [67, 82, 87, 91, 102, 203, 227, 251, 387, 396, 401, 404, 408, 411, 419, 420, 422, 431, 439, 442, 445, 446, 447, 453, 458, 460, 464, 468, 475, 484, 485, 486, 489, 490, 499, 503, 504, 507, 597, 598], "ob": [40, 82, 83, 88, 89, 91, 92, 96, 166, 176, 312, 313, 399, 400, 403, 404, 409, 424, 442, 443, 452, 458, 460, 464, 467, 468, 475, 477, 482, 485, 486, 487, 489, 498, 503, 507, 508, 509, 510, 516, 519, 532, 535, 540, 542, 544, 545], "obei": 547, "obj": [16, 84, 90, 105, 126, 466, 489], "object": [6, 15, 16, 19, 20, 23, 26, 28, 29, 30, 31, 32, 34, 35, 36, 37, 39, 40, 50, 51, 52, 54, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 94, 100, 102, 103, 104, 105, 106, 110, 111, 124, 125, 126, 127, 130, 131, 132, 134, 136, 139, 140, 141, 142, 145, 148, 150, 151, 152, 153, 154, 155, 156, 157, 158, 160, 161, 163, 164, 165, 166, 167, 168, 169, 170, 172, 180, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 275, 276, 277, 278, 279, 280, 281, 282, 290, 292, 294, 314, 318, 322, 323, 326, 334, 336, 338, 344, 347, 361, 362, 363, 364, 369, 374, 380, 382, 383, 384, 393, 398, 399, 400, 401, 402, 403, 405, 406, 407, 408, 411, 413, 414, 416, 420, 424, 430, 431, 433, 434, 435, 436, 439, 441, 446, 447, 448, 450, 453, 454, 455, 458, 459, 460, 462, 464, 465, 466, 467, 468, 474, 476, 479, 482, 484, 485, 486, 489, 490, 493, 495, 498, 499, 500, 501, 502, 504, 507, 508, 509, 510, 518, 519, 521, 525, 530, 531, 532, 533, 541, 544, 546, 547, 548, 582, 595, 597, 598, 602], "obs2": 535, "obs_clust": [92, 503], "obs_col": 475, "obs_con": [16, 465, 470, 471, 473, 518], "obs_copi": 88, "obs_fil": [16, 465, 470, 471, 473, 518], "obs_filenam": 509, "obs_filt": [88, 89], "obs_id": [16, 82, 87, 88, 89, 91, 96, 149, 214, 312, 313, 397, 399, 409, 414, 424, 460, 464, 465, 466, 467, 470, 471, 473, 474, 475, 477, 478, 484, 485, 486, 489, 495, 498, 503, 507, 509, 510, 516, 518, 519, 544], "obs_id_uniqu": 87, "obs_index": 82, "obs_info": [90, 105, 414], "obs_list": [447, 449], "obs_list_vela": 487, "obs_mod": 95, "obs_model": 459, "obs_muoneff": 503, "obs_po": [41, 317], "obs_tabl": [82, 91, 96, 312, 313, 441, 475, 477, 485, 489, 498, 503, 507, 509, 510, 516, 519, 544], "obs_table_filenam": 82, "obs_tim": [16, 465, 470, 471, 473, 518], "obs_time_src": 498, "obs_zenith": 503, "obscor": 454, "observ": [6, 15, 16, 41, 82, 83, 85, 86, 87, 89, 90, 91, 93, 94, 95, 96, 102, 103, 104, 105, 106, 109, 110, 111, 113, 114, 118, 166, 171, 172, 173, 176, 177, 178, 179, 181, 182, 183, 186, 187, 188, 189, 191, 192, 193, 226, 229, 234, 239, 241, 242, 243, 259, 266, 278, 281, 295, 301, 311, 313, 322, 343, 391, 393, 399, 400, 401, 402, 403, 407, 409, 411, 414, 420, 429, 433, 434, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 453, 454, 455, 457, 458, 460, 466, 467, 470, 471, 473, 474, 482, 486, 487, 489, 490, 495, 496, 504, 505, 506, 507, 509, 510, 513, 516, 523, 531, 532, 535, 538, 540, 542, 544, 545, 573, 597, 598, 599, 600], "observation_clust": [457, 503, 505], "observation_dead_time_fract": [83, 88], "observation_list": 92, "observation_live_time_dur": [83, 88], "observation_time_dur": [83, 88], "observation_time_start": 83, "observation_time_stop": 83, "observationcheck": 448, "observationcta": 397, "observationeventsampl": 454, "observationfilt": [88, 397, 402, 428, 449], "observationlist": [397, 449], "observationmetadata": 414, "observations_list": 92, "observationsconfig": 16, "observationseventsampl": 454, "observationseventssampl": 455, "observationssummari": 433, "observationstat": [428, 433], "observationt": [82, 400, 401, 450, 503, 509, 519], "observationtablecheck": 448, "observationtablesummari": 445, "observatori": [57, 59, 63, 82, 83, 85, 88, 90, 94, 400, 414, 417, 420, 440, 507, 509, 510, 513, 530, 535], "observatory_earth_loc": [83, 88, 455], "observatory_loc": [414, 441, 458, 467, 477, 478, 482, 486], "obsinfometadata": [90, 105], "obstim": [85, 94, 189, 602], "obtain": [85, 103, 106, 109, 111, 125, 127, 140, 298, 397, 402, 404, 405, 411, 449, 455, 464, 465, 466, 468, 471, 477, 478, 485, 489, 490, 495, 499, 500, 504, 518, 521, 531, 535, 539, 540, 597, 599, 600], "obviou": [399, 406, 407, 408, 414], "obvious": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 523], "occur": [196, 197, 199, 208, 209, 344, 387, 407, 408, 412, 508], "occurr": [92, 100, 200, 218, 220, 227, 251], "oct": [395, 397, 398, 402, 404, 407, 413], "octob": 396, "odd": [207, 209], "odd_npix": [207, 209], "odot": [28, 35, 39, 40, 52], "off": [103, 104, 106, 108, 109, 110, 111, 124, 125, 127, 171, 177, 178, 181, 184, 193, 294, 311, 384, 385, 390, 393, 399, 401, 402, 403, 433, 439, 441, 443, 453, 455, 458, 459, 460, 465, 466, 471, 475, 484, 485, 487, 489, 493, 495, 498, 504, 506, 531, 544, 545, 597, 599, 600, 601], "off_2": [106, 111], "off_ev": 487, "off_patch": 487, "off_phas": [177, 487], "off_phase_rang": 487, "offdatabackgroundmak": 444, "offer": [125, 390, 398, 413, 414, 420, 421, 448, 466, 494, 495, 498, 502, 535], "offici": [413, 536, 598], "offlin": [87, 91], "offset": [83, 96, 113, 114, 150, 151, 152, 153, 156, 157, 158, 160, 163, 165, 166, 167, 168, 169, 172, 176, 182, 183, 188, 191, 196, 197, 199, 201, 205, 208, 209, 387, 393, 401, 424, 433, 443, 445, 447, 452, 453, 454, 455, 458, 466, 467, 470, 473, 474, 475, 482, 487, 497, 498, 503, 507, 519, 532, 540, 542, 545], "offset2": 83, "offset_axi": [156, 157, 158], "offset_band": 83, "offset_from_median": 83, "offset_index": 163, "offset_max": [16, 83, 172, 182, 188, 191, 465, 470, 471, 473, 475, 482, 487, 498, 518, 519, 542, 545], "offset_min": 83, "often": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 140, 284, 377, 378, 387, 392, 401, 402, 403, 405, 446, 458, 460, 465, 470, 471, 474, 475, 482, 489, 493, 495, 498, 500, 518, 519, 531, 535, 597], "ogip": [95, 107, 108, 111, 153, 198, 200, 201, 204, 205, 206, 399, 402, 446, 459, 464, 474, 531, 539, 548], "ogip_column": 205, "ogipdatasetread": 111, "ogipdatasetwrit": [111, 452, 454], "ok": [387, 401, 495], "old": [200, 372, 387, 392, 395, 399, 403, 404, 430, 431, 446, 447, 448, 490], "old_attribut": 387, "older": [394, 404, 421, 446, 492], "oldest": 407, "olga": [444, 445], "olivera": [436, 439, 441, 442, 450, 452, 453, 454, 455], "omega": [19, 20, 23, 266, 283, 507, 553, 591], "omit": [136, 388, 473, 507, 598], "omp": 407, "on_circl": 544, "on_ellipse_annulu": 544, "on_ev": 487, "on_patch": 487, "on_phas": [177, 487], "on_phase_rang": 487, "on_posit": 193, "on_radii": 458, "on_radiu": [475, 487], "on_rectangl": 544, "on_region": [16, 103, 106, 179, 458, 460, 464, 465, 466, 467, 470, 471, 473, 475, 477, 478, 484, 485, 487, 489, 493, 518, 544], "on_region_radiu": [458, 464, 467, 477, 478, 485, 489], "onc": [87, 91, 103, 134, 207, 387, 390, 392, 397, 398, 401, 402, 403, 407, 408, 409, 411, 412, 416, 417, 418, 419, 420, 422, 466, 485, 487, 498, 501, 509, 513, 532, 535, 598], "one": [16, 19, 20, 26, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 59, 70, 77, 84, 87, 89, 90, 91, 92, 93, 95, 99, 102, 103, 105, 106, 109, 110, 111, 114, 120, 124, 125, 126, 127, 128, 129, 130, 132, 133, 134, 136, 138, 139, 144, 147, 150, 151, 152, 153, 154, 155, 156, 157, 158, 160, 161, 163, 164, 165, 166, 167, 168, 169, 172, 176, 178, 193, 194, 195, 196, 197, 198, 199, 200, 201, 204, 205, 206, 207, 208, 209, 214, 221, 222, 223, 224, 225, 226, 227, 228, 229, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 248, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 275, 276, 277, 278, 279, 280, 281, 282, 286, 290, 292, 293, 294, 322, 327, 343, 358, 374, 380, 381, 387, 388, 389, 390, 392, 393, 394, 395, 396, 398, 399, 400, 401, 403, 404, 405, 406, 407, 409, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 447, 450, 451, 453, 455, 458, 460, 464, 465, 466, 470, 473, 477, 484, 486, 487, 490, 492, 493, 495, 497, 498, 499, 500, 501, 502, 504, 506, 507, 508, 509, 518, 519, 521, 530, 531, 532, 533, 535, 540, 542, 544, 547, 548, 555, 595, 596, 597, 598, 599, 600, 601, 602], "ones": [87, 91, 120, 124, 128, 132, 136, 153, 200, 391, 395, 399, 401, 404, 407, 415, 421, 424, 486, 490, 497, 499, 523, 542, 597, 598], "ones_lik": [487, 542], "ongo": [390, 393, 394, 418], "onli": [16, 19, 20, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 70, 72, 74, 79, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 93, 95, 100, 101, 102, 103, 104, 105, 106, 109, 110, 111, 124, 126, 127, 128, 129, 132, 136, 137, 139, 146, 147, 154, 155, 159, 161, 166, 169, 172, 178, 183, 193, 194, 195, 196, 197, 199, 201, 204, 205, 206, 207, 208, 209, 217, 218, 220, 221, 224, 225, 227, 228, 229, 231, 232, 233, 234, 237, 238, 239, 240, 241, 242, 243, 244, 245, 248, 249, 251, 252, 255, 256, 257, 258, 259, 263, 264, 265, 266, 267, 268, 271, 272, 273, 277, 278, 279, 292, 294, 307, 309, 314, 334, 362, 384, 387, 388, 390, 392, 393, 394, 395, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 413, 414, 416, 421, 429, 431, 435, 439, 441, 442, 447, 451, 453, 454, 455, 460, 462, 464, 465, 466, 470, 471, 473, 474, 476, 477, 478, 479, 484, 485, 486, 487, 489, 492, 493, 495, 497, 498, 499, 500, 501, 502, 503, 504, 507, 508, 509, 519, 523, 531, 533, 539, 542, 545, 548, 593, 597, 598, 599, 600], "onlin": [87, 91, 388, 392, 395, 407, 424], "onlinelibrari": 138, "onoff": [442, 531], "onserv": 93, "ontim": [189, 397, 477, 493], "onto": [106, 111, 196, 197, 199, 205, 207, 208, 209, 374, 393, 519, 531, 535, 547, 596], "oo": 413, "op": 403, "opac": 229, "open": [66, 87, 91, 387, 388, 390, 392, 398, 401, 404, 406, 407, 411, 412, 413, 417, 419, 420, 422, 424, 425, 446, 465, 474, 499, 507, 509, 510, 518, 530, 597, 598], "openastronomi": 447, "oper": [87, 91, 195, 207, 222, 387, 393, 398, 401, 434, 436, 439, 448, 449, 453, 459, 493, 501, 502, 547, 548, 563, 565, 569, 572, 574, 577, 582], "opinion": [392, 598], "oppos": [490, 573, 598], "opposit": [196, 197, 416], "opt": [89, 388, 492, 563, 573], "opt_method": 495, "optic": [229, 401, 459, 563], "optim": [19, 20, 26, 102, 129, 133, 136, 147, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 225, 229, 231, 232, 233, 238, 244, 245, 248, 252, 254, 256, 257, 258, 263, 268, 270, 271, 272, 273, 276, 280, 380, 386, 387, 396, 399, 400, 409, 411, 460, 462, 464, 465, 466, 467, 468, 473, 474, 475, 487, 489, 490, 494, 495, 504, 508, 518, 519], "optimis": [19, 20, 214, 215, 216, 217, 221, 224, 225, 228, 229, 231, 232, 233, 234, 237, 238, 239, 240, 241, 242, 243, 244, 245, 248, 255, 256, 257, 258, 259, 263, 264, 265, 266, 268, 271, 272, 273, 278, 279, 401, 403, 405, 448, 455, 533, 595], "optimize_opt": [214, 473, 482, 494, 495, 519], "optimize_result": [214, 215, 453], "optimizeresult": [102, 214, 215, 460, 462, 464, 465, 466, 473, 474, 475, 487, 489, 494, 495, 508, 518, 519], "optin": 413, "optinon": [110, 111], "option": [11, 13, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 45, 46, 47, 67, 71, 72, 74, 75, 76, 77, 78, 79, 80, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 113, 114, 116, 118, 119, 120, 122, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 139, 143, 146, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 160, 161, 163, 164, 165, 166, 167, 168, 169, 172, 173, 176, 177, 178, 179, 180, 183, 184, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 211, 212, 213, 214, 215, 216, 217, 218, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 231, 232, 233, 234, 235, 237, 238, 239, 240, 241, 242, 243, 244, 245, 248, 251, 252, 253, 254, 255, 256, 257, 258, 259, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 275, 276, 277, 278, 279, 280, 281, 283, 284, 286, 288, 290, 291, 292, 293, 294, 298, 299, 300, 302, 307, 308, 309, 311, 312, 314, 325, 335, 338, 341, 342, 343, 344, 346, 347, 350, 355, 356, 358, 369, 370, 374, 375, 376, 380, 381, 382, 383, 384, 387, 388, 390, 392, 393, 395, 396, 398, 399, 401, 403, 405, 407, 410, 414, 416, 418, 419, 420, 421, 422, 428, 429, 430, 433, 435, 436, 439, 441, 445, 447, 448, 449, 450, 452, 453, 454, 455, 468, 473, 482, 484, 486, 492, 493, 498, 499, 500, 502, 503, 507, 508, 518, 519, 531, 533, 535, 547, 548, 593, 597, 598], "option1": 388, "option2": 388, "option3": 388, "option_context": [87, 91], "optionali": 556, "optout": 413, "optpars": 392, "oral": 413, "orang": [388, 464, 473, 479, 484, 487, 491, 494, 504, 544], "orchestr": [393, 397, 399, 403, 465, 518, 519], "orcid": 413, "order": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 82, 87, 91, 94, 100, 101, 102, 103, 106, 127, 139, 150, 151, 153, 154, 155, 156, 157, 158, 161, 163, 166, 168, 169, 172, 176, 183, 186, 187, 192, 194, 195, 196, 197, 199, 200, 204, 205, 206, 207, 208, 209, 277, 290, 314, 384, 387, 388, 393, 398, 399, 401, 402, 403, 404, 411, 412, 413, 415, 416, 429, 430, 431, 432, 433, 434, 435, 436, 439, 455, 464, 465, 466, 468, 473, 474, 477, 487, 492, 495, 497, 498, 499, 502, 509, 518, 519, 521, 546, 547, 548, 598, 601], "ordereddict": [393, 404, 432], "ordinari": 521, "org": [11, 34, 64, 65, 83, 87, 88, 91, 182, 214, 257, 258, 272, 273, 307, 309, 314, 390, 395, 404, 407, 412, 413, 417, 419, 420, 422, 426, 445, 447, 458, 467, 470, 473, 474, 475, 482, 486, 491, 492, 495, 507, 580, 581, 598], "organ": [391, 407, 412, 413, 439, 509, 510, 532, 547], "organis": [394, 403, 406, 413, 447], "orient": [151, 159, 160, 387, 398], "origin": [16, 36, 37, 41, 84, 87, 90, 91, 103, 105, 110, 125, 126, 127, 197, 209, 275, 277, 279, 397, 401, 413, 414, 417, 445, 465, 470, 471, 473, 485, 490, 499, 502, 508, 518, 552, 553, 554, 555, 556, 557, 558, 559, 560, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 585, 586, 587, 588, 589, 590, 591, 592, 593, 601, 602], "orthogon": 347, "orthonorm": 147, "oscar": [447, 448], "osx": 435, "other": [13, 16, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 56, 67, 69, 83, 84, 86, 87, 90, 91, 103, 105, 106, 110, 111, 125, 126, 128, 132, 133, 150, 151, 152, 153, 154, 155, 156, 157, 158, 160, 161, 163, 165, 166, 167, 168, 169, 178, 195, 196, 197, 198, 199, 200, 201, 204, 205, 206, 207, 208, 209, 214, 218, 220, 277, 291, 314, 327, 357, 376, 381, 386, 390, 392, 394, 395, 396, 398, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 411, 413, 414, 419, 425, 447, 458, 459, 460, 464, 465, 466, 467, 468, 470, 471, 473, 474, 475, 476, 477, 478, 479, 482, 484, 485, 486, 487, 490, 491, 492, 493, 494, 495, 497, 498, 499, 500, 501, 502, 504, 506, 507, 508, 509, 510, 518, 519, 521, 531, 532, 533, 535, 540, 542, 544, 548, 565, 595, 596, 598, 602], "other_id": 460, "otherwis": [16, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 82, 84, 87, 90, 91, 103, 105, 110, 126, 164, 203, 207, 209, 211, 217, 218, 219, 220, 227, 251, 282, 314, 380, 400, 410, 413, 455, 501, 502, 508, 564], "our": [387, 390, 396, 401, 403, 404, 406, 409, 410, 411, 413, 429, 430, 446, 455, 458, 460, 464, 465, 466, 470, 471, 473, 474, 475, 478, 485, 486, 487, 489, 499, 500, 504, 509, 518, 519, 598], "ourself": 521, "out": [11, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 87, 91, 92, 94, 100, 102, 127, 196, 197, 199, 205, 208, 209, 251, 264, 265, 386, 387, 388, 390, 392, 395, 397, 399, 401, 403, 405, 406, 407, 412, 416, 417, 424, 425, 427, 433, 447, 462, 466, 470, 471, 489, 499, 500, 507, 508, 518, 521, 523, 524, 544, 558, 559, 595, 598, 602], "out_fold": 403, "outcom": [392, 401], "outdat": [404, 407], "outdir": [16, 82, 93, 465, 470, 471, 473, 518], "outer": [43, 44, 52, 53, 129, 171, 264, 559], "outer_height": [544, 548], "outer_width": [544, 548], "outfil": 387, "outflow": 206, "outlin": [103, 106, 110, 111, 223, 224, 228, 237, 240, 255, 264, 265, 279, 390, 392, 395, 396, 397, 398, 401, 407, 410], "output": [11, 16, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 41, 83, 84, 86, 87, 88, 90, 91, 93, 105, 118, 124, 126, 136, 144, 145, 153, 158, 196, 197, 199, 205, 208, 209, 215, 227, 242, 251, 293, 343, 388, 395, 397, 400, 403, 404, 408, 411, 414, 428, 443, 449, 452, 453, 455, 473, 477, 478, 482, 486, 494, 498, 499, 518, 519, 533, 535, 598, 599], "output_map": [196, 197, 199, 205, 208, 209], "output_unit": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40], "outsid": [87, 91, 103, 106, 110, 111, 116, 119, 153, 173, 194, 195, 196, 197, 198, 199, 200, 201, 204, 205, 206, 207, 208, 209, 217, 219, 229, 280, 327, 375, 387, 401, 402, 403, 439, 471, 494, 495, 498, 499, 500, 535, 542, 555, 582, 597], "over": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 67, 83, 87, 88, 91, 92, 95, 102, 103, 106, 110, 111, 128, 136, 140, 153, 154, 164, 166, 169, 176, 183, 186, 187, 189, 190, 194, 195, 196, 197, 199, 200, 201, 204, 205, 207, 208, 209, 227, 251, 283, 292, 294, 298, 325, 326, 339, 378, 387, 388, 392, 395, 396, 397, 400, 401, 402, 407, 410, 414, 416, 419, 421, 439, 460, 464, 468, 471, 473, 476, 477, 486, 492, 493, 494, 498, 499, 502, 519, 521, 533, 535, 539, 597, 599, 600], "overal": [395, 401, 455, 464], "overcom": [416, 500], "overestim": [533, 600], "overflow": [206, 466, 486, 489, 586], "overkil": 486, "overlai": [465, 494], "overlaid": [103, 106, 110, 111, 464, 465], "overlap": [86, 91, 116, 119, 132, 184, 201, 206, 384, 402, 464], "overlap_ok": 86, "overlin": [103, 110, 531], "overload": 439, "overplot": [492, 530], "overrid": [16, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 84, 90, 105, 126, 354, 398, 464, 466, 475, 479], "overridden": [16, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 84, 87, 90, 91, 105, 126, 204, 384], "oversampl": [104, 109, 164, 166, 169, 176, 183, 189, 195, 196, 197, 199, 204, 205, 208, 209, 224, 228, 237, 240, 241, 242, 253, 264, 265, 267, 269, 275, 279, 281, 286, 430, 498], "oversample_energy_factor": [104, 109, 478], "oversampling_factor": [197, 207, 223, 224, 228, 237, 240, 241, 242, 253, 255, 264, 265, 267, 269, 275, 279, 281], "overview": [6, 390, 416, 418, 433, 434, 436, 439, 457, 487, 494, 499, 502, 513, 520, 521, 522, 535, 536, 549, 599], "overwrit": [11, 15, 16, 19, 20, 26, 82, 88, 93, 100, 102, 103, 106, 108, 110, 111, 125, 127, 154, 155, 161, 166, 169, 194, 195, 196, 197, 199, 201, 203, 204, 205, 206, 207, 208, 209, 215, 217, 221, 224, 225, 227, 228, 229, 231, 232, 233, 234, 237, 238, 239, 240, 241, 242, 243, 244, 245, 248, 251, 255, 256, 257, 258, 259, 263, 264, 265, 266, 268, 271, 272, 273, 275, 276, 277, 278, 279, 334, 356, 411, 448, 450, 455, 464, 465, 473, 474, 477, 478, 479, 497, 499, 500, 501, 502, 507, 508, 516, 518, 519, 531, 548, 560, 598], "overwrite_templ": [215, 227, 251], "overwritten": [166, 169, 326], "owen": [427, 440], "own": [87, 91, 99, 125, 127, 203, 205, 393, 403, 409, 413, 439, 458, 477, 502, 508, 519, 535, 547, 548, 596], "p": [38, 51, 54, 87, 91, 110, 111, 131, 297, 311, 387, 439, 465, 476, 491, 495, 518, 535, 540, 541, 600], "p0_birth": 43, "p6xck0pa": 459, "p90": 48, "p_": [537, 539, 540, 541], "p_0": [51, 196, 199, 205, 208, 209, 527], "p_dot": [51, 54], "p_i": [196, 199, 205, 208, 209], "p_lat": [196, 199, 205, 208, 209], "p_lon": [196, 199, 205, 208, 209], "p_mean": 42, "p_n": [196, 199, 205, 208, 209], "p_stdv": 42, "p_valu": [292, 294, 495, 598, 600], "pace": [395, 396], "packag": [6, 11, 144, 314, 351, 386, 387, 388, 390, 391, 392, 393, 394, 395, 396, 401, 404, 405, 407, 412, 413, 414, 416, 417, 419, 420, 422, 423, 424, 425, 426, 427, 429, 432, 433, 435, 436, 439, 442, 443, 444, 445, 446, 447, 448, 450, 458, 459, 460, 464, 465, 466, 467, 468, 470, 471, 473, 474, 475, 476, 477, 478, 479, 482, 484, 485, 486, 487, 489, 491, 492, 493, 495, 498, 499, 500, 501, 502, 504, 506, 507, 508, 509, 510, 518, 519, 521, 531, 534, 535, 536, 543, 548, 560, 569, 571, 586, 598, 602], "pacman": 444, "paczynski": [36, 37], "paczynski1990": [28, 29, 30, 35, 39, 40, 48], "paczynski1990veloc": 49, "pad": [87, 91, 103, 106, 110, 111, 136, 150, 151, 152, 153, 156, 157, 158, 160, 163, 165, 167, 168, 176, 194, 195, 196, 197, 198, 199, 200, 201, 204, 205, 207, 208, 209, 375, 436, 439], "pad_width": [103, 110, 136, 150, 151, 152, 153, 156, 157, 158, 160, 163, 165, 167, 168, 194, 195, 196, 197, 199, 200, 201, 204, 205, 207, 208, 209], "pad_with": [196, 197, 199, 205, 208, 209], "page": [6, 87, 91, 214, 295, 301, 311, 388, 390, 392, 399, 401, 404, 407, 413, 416, 417, 418, 420, 421, 425, 433, 434, 439, 442, 443, 446, 447, 448, 449, 455, 495, 499, 510, 511, 513, 533, 535, 546, 548, 599, 602], "pain": [387, 390, 394], "pair": [16, 84, 90, 103, 105, 106, 110, 111, 125, 126, 127, 140, 150, 151, 152, 153, 154, 155, 156, 157, 158, 160, 161, 163, 165, 166, 167, 168, 169, 194, 195, 196, 197, 199, 200, 203, 204, 205, 207, 208, 209, 403, 459], "panda": [87, 91, 386, 404, 448, 458, 460, 464, 465, 466, 467, 468, 470, 471, 473, 474, 475, 476, 477, 478, 479, 484, 485, 486, 487, 491, 492, 493, 495, 498, 499, 500, 501, 502, 504, 506, 507, 508, 509, 510, 518, 519, 521], "panel": [88, 102, 103, 106, 110, 111, 374, 442, 477, 495, 596], "panel_fov": 374, "panni": 439, "papadopoulo": [439, 441], "paper": [57, 59, 63, 72, 74, 128, 182, 407, 413, 416, 448, 485, 490, 492, 498, 509, 523], "papermil": 403, "par": [398, 410, 415, 416, 459, 489, 495, 504, 507], "par_000_amplitud": 495, "par_001_alpha": 495, "par_002_beta": 495, "par_00x_": 398, "par_1": [214, 495], "par_2": [214, 495], "par_alpha": [214, 495], "par_beta": [214, 495], "par_box": 91, "par_nam": [227, 235, 251, 267, 277], "par_to_v": 507, "par_typ": [227, 235, 251, 267, 277], "parabol": [291, 327, 495], "parabola": [244, 245, 457, 474, 495, 549, 562, 583], "paragraph": 392, "parallel": [6, 93, 128, 129, 132, 136, 172, 329, 330, 331, 332, 333, 334, 335, 390, 404, 418, 441, 453, 454, 455, 468, 493], "parallel_backend": [93, 128, 129, 132, 136, 172, 334, 479], "parallelbackendenum": 329, "parallelis": 416, "parallelmixin": [93, 128, 136, 172], "param": [16, 84, 90, 105, 126, 229, 280, 380, 403, 434, 495], "param_nam": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40], "param_pair": 495, "param_set": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40], "paramet": [15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 71, 72, 74, 75, 76, 77, 78, 79, 80, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 96, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 160, 161, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 248, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 288, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 306, 307, 308, 309, 310, 311, 312, 313, 314, 316, 318, 320, 321, 323, 325, 326, 327, 328, 334, 335, 336, 338, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 368, 369, 370, 371, 372, 374, 375, 376, 377, 378, 380, 381, 382, 383, 384, 385, 387, 388, 396, 399, 400, 402, 403, 405, 406, 409, 411, 413, 425, 428, 429, 430, 431, 432, 433, 435, 436, 439, 441, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 459, 460, 462, 464, 466, 467, 468, 470, 471, 473, 474, 475, 477, 478, 479, 482, 484, 486, 487, 489, 491, 492, 493, 494, 497, 498, 503, 504, 507, 508, 519, 521, 523, 531, 533, 534, 535, 542, 548, 552, 553, 554, 555, 556, 557, 558, 559, 560, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 585, 586, 587, 588, 589, 590, 591, 592, 593, 595, 596, 597, 598, 599, 600, 601], "parameter": 502, "parameter_constraint": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40], "parameter_matching_signific": 134, "parameter_nam": 388, "parameter_name_scan": 214, "parameter_typ": 388, "parameterestim": [121, 435, 454], "parameteris": [537, 539], "parameters_list": [218, 220], "parameters_nam": [227, 251], "parameters_stat_sum": 415, "parameters_unique_nam": [19, 20, 26, 221, 222, 223, 224, 225, 226, 227, 228, 229, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 248, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 275, 276, 277, 278, 279, 280, 281, 282, 495], "parametersensitivityestim": 121, "parametr": [16, 27, 84, 90, 102, 105, 126, 156, 157, 162, 165, 167, 244, 245, 264, 399, 403, 410, 429, 436, 439, 466, 468, 502, 507, 558, 559, 571], "parametricpsf": [157, 165, 439, 441], "parametris": [165, 410, 433, 539, 541, 553, 554, 555, 556, 564, 567, 568, 569, 570, 571, 572, 574, 575, 576, 577, 578, 579, 580, 581, 585, 586, 587, 588, 589, 590, 591, 592, 593], "paramnam": 416, "parent": [16, 84, 90, 105, 120, 124, 126, 128, 132, 136, 207, 387, 397, 414, 485, 494, 533, 573], "parenthes": [398, 404, 451, 453], "parfiv": [404, 432], "park": 35, "parnam": 504, "pars": [16, 84, 85, 90, 105, 126, 195, 204, 388, 401, 455, 458, 467, 470, 473, 475, 482, 486, 500, 507, 598], "parse_arg": 598, "parse_fil": [16, 84, 90, 105, 126], "parse_obj": [16, 84, 90, 105, 126], "parse_raw": [16, 84, 90, 105, 126], "parseabl": 314, "parser": 598, "part": [102, 387, 390, 393, 396, 398, 400, 401, 402, 403, 405, 406, 407, 412, 413, 416, 420, 422, 429, 433, 434, 435, 443, 448, 453, 454, 458, 460, 464, 473, 482, 492, 493, 499, 500, 519, 521, 535, 540, 544], "parti": 392, "partial": [91, 103, 106, 154, 155, 161, 166, 169, 172, 195, 207, 209, 277, 401, 405, 434, 448, 546], "partial_overlap": 91, "particip": [392, 396, 407], "particl": [17, 19, 20, 21, 22, 24, 25, 26, 27, 252, 283, 435, 523, 573], "particle_distribut": [252, 573], "particular": [87, 91, 124, 136, 387, 393, 400, 402, 409, 411, 412, 414, 416, 436, 439, 450, 451, 460, 464, 465, 466, 467, 470, 474, 477, 485, 486, 490, 495, 498, 501, 507, 509, 510, 518, 519, 532, 535, 542, 544, 548, 600], "particularli": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40], "partli": [390, 396, 397, 401, 407, 408], "pass": [15, 16, 19, 20, 26, 28, 29, 30, 31, 32, 33, 35, 36, 37, 39, 40, 42, 45, 46, 47, 68, 83, 84, 85, 86, 87, 88, 89, 90, 91, 93, 102, 103, 105, 106, 109, 110, 111, 126, 127, 130, 148, 150, 151, 152, 153, 154, 155, 156, 157, 158, 160, 161, 163, 164, 165, 166, 167, 168, 169, 172, 173, 181, 189, 194, 195, 196, 197, 199, 201, 203, 204, 205, 207, 208, 209, 212, 213, 214, 216, 218, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 231, 232, 233, 234, 237, 239, 240, 241, 242, 243, 244, 245, 248, 251, 252, 253, 254, 255, 256, 257, 258, 259, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 275, 276, 277, 278, 279, 280, 281, 291, 293, 314, 326, 334, 335, 336, 341, 342, 343, 344, 374, 375, 380, 382, 383, 387, 390, 397, 399, 400, 401, 402, 414, 435, 439, 441, 453, 454, 455, 460, 462, 464, 465, 473, 474, 478, 484, 485, 490, 492, 493, 495, 497, 498, 499, 500, 502, 503, 507, 518, 519, 521, 535, 546, 547, 548, 553, 554, 598, 602], "pass4": 509, "pass8_edisp_usag": 101, "passkwarg": [466, 489], "past": [387, 392, 395, 403, 404, 407, 408, 410, 413, 415, 424, 445, 447, 448, 499, 598], "patch": [384, 387, 394, 413, 442, 451, 464, 466, 475, 479, 487], "path": [11, 15, 16, 66, 82, 83, 84, 86, 87, 88, 90, 91, 93, 100, 101, 105, 107, 108, 111, 126, 150, 151, 152, 153, 154, 155, 156, 157, 158, 160, 161, 163, 165, 166, 167, 168, 169, 170, 196, 197, 199, 204, 205, 208, 209, 215, 227, 242, 251, 278, 322, 351, 352, 353, 356, 387, 390, 416, 423, 458, 460, 464, 465, 466, 467, 468, 470, 471, 473, 474, 475, 476, 477, 478, 479, 484, 485, 486, 487, 491, 492, 493, 494, 495, 498, 499, 500, 501, 502, 504, 506, 507, 508, 509, 510, 518, 519, 521, 533, 592, 593, 597, 598], "path_effect": [204, 227, 251], "path_to_notebook": 387, "path_to_script": 387, "patheffect": [204, 227, 251], "pathlib": [16, 82, 83, 86, 87, 91, 153, 205, 215, 227, 251, 352, 464, 465, 473, 474, 477, 478, 507, 518, 519], "pathpatch": 479, "pattern": [387, 393, 401], "paula": 454, "paulakx": 454, "paz": [440, 443, 444], "pbar": 535, "pc": [46, 47, 50, 52, 528, 529], "pcolormesh": [83, 127, 150, 151, 153, 156, 157, 158, 163, 165, 167, 168, 446, 452, 495, 497], "pd": [87, 91], "pdf": [153, 157, 182, 257, 258, 272, 273, 307, 309, 336, 380, 388, 474, 477, 491, 525, 527, 528, 529, 531, 532, 537, 538, 539, 541, 544, 548, 580, 581, 600, 603], "pdf_in_safe_rang": 153, "pdf_matrix": 153, "pdf_threshold": [153, 154, 158], "pdflatex": 388, "peak": [68, 130, 144, 145, 153, 182, 233, 239, 241, 245, 272, 441, 447, 454, 468, 490, 492, 498, 559], "peak_bright": 68, "peak_brightness_error": 68, "peak_latitud": 68, "peak_latitude_error": 68, "pedant": 387, "peek": [83, 88, 103, 106, 110, 111, 130, 131, 150, 151, 153, 154, 155, 156, 157, 158, 163, 164, 165, 166, 167, 169, 387, 399, 424, 436, 442, 446, 450, 460, 466, 473, 477, 478, 487, 493, 497, 507, 509, 510, 532, 535, 537, 538, 539, 541], "pei": 455, "penal": 246, "penalti": [416, 504], "peopl": [392, 394, 407, 413, 417, 418, 491, 523, 535, 598], "pep": 392, "pep257": 388, "pep8": 390, "per": [17, 18, 21, 22, 24, 25, 27, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 77, 99, 101, 102, 103, 106, 110, 111, 113, 114, 124, 125, 127, 128, 129, 132, 133, 138, 144, 147, 148, 149, 166, 169, 201, 234, 242, 243, 286, 295, 301, 311, 387, 393, 399, 400, 403, 411, 413, 414, 427, 435, 439, 441, 454, 458, 467, 477, 482, 484, 486, 491, 498, 499, 503, 504, 509, 510, 513, 531, 535, 538, 542, 597, 599], "per_decad": [201, 464, 466, 477, 478, 487, 493, 508, 539, 545], "percent": 135, "percentag": [153, 182, 498], "percentil": 83, "peresano": 455, "perfect": 153, "perfectli": [554, 598], "perform": [11, 16, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 84, 85, 87, 90, 91, 94, 100, 105, 109, 126, 173, 181, 195, 207, 209, 224, 227, 228, 237, 240, 251, 253, 264, 265, 269, 275, 279, 292, 294, 350, 353, 380, 387, 388, 393, 396, 397, 398, 402, 403, 411, 414, 416, 417, 418, 420, 429, 436, 439, 441, 444, 448, 451, 453, 454, 455, 458, 462, 464, 465, 466, 467, 468, 470, 471, 473, 474, 476, 478, 482, 484, 485, 486, 489, 493, 495, 496, 498, 499, 500, 501, 503, 509, 511, 513, 518, 520, 531, 535, 543, 544, 547, 554, 573, 596, 597, 598, 599], "perhap": 548, "period": [42, 51, 54, 201, 278, 394, 413, 416, 447, 455, 503, 527], "period_dot": 51, "periodicmapaxi": 455, "periodogram": [293, 402, 448, 455], "permit": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 413, 513], "perseu": [33, 38], "person": [387, 390, 392, 394, 395, 396, 400, 405, 408], "perspect": [87, 91], "pertain": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40], "peter": 447, "pf": 26, "pformat": [87, 91], "pformat_al": [87, 91], "pg": 521, "ph": 372, "pha": [107, 108, 111, 205, 399, 445, 448, 464, 474], "pha_": 493, "pha_meta": 107, "pha_ob": [107, 149, 214, 474, 494, 495], "pha_obs23523": [110, 111, 133, 290, 416, 504, 533], "pha_obs23592": 533, "phacountsspectrum": 431, "phacountsspectrumlist": 430, "phase": [50, 52, 53, 89, 174, 177, 278, 392, 397, 398, 401, 402, 404, 406, 411, 424, 429, 448, 450, 453, 455, 457, 502, 524, 535, 549, 584, 594], "phase_axi": 411, "phase_bkg_mak": 487, "phase_column_nam": [177, 487], "phase_curve_model": 592, "phase_filt": 89, "phase_max": 487, "phase_min": 487, "phase_model": 592, "phasebackgroundestim": 433, "phasebackgroundmak": [174, 433, 453, 455, 487], "phasecurv": [278, 447, 592], "phasecurve_lsi_dc": 592, "phasecurvemodel": 410, "phasecurvetablemodel": [398, 400], "phasecurvetempl": 398, "phasogram": [278, 592], "phi": [19, 20, 26, 202, 221, 222, 225, 228, 229, 231, 232, 233, 237, 240, 244, 245, 248, 252, 254, 256, 257, 258, 263, 268, 270, 271, 272, 273, 276, 280, 318, 410, 482, 501, 502, 508, 521, 540, 553, 554, 555, 557, 558, 559, 564, 566, 567, 568, 570, 571, 575, 576, 578, 579, 580, 581], "phi_0": [221, 223, 224, 228, 231, 232, 233, 237, 240, 244, 245, 253, 255, 257, 258, 264, 265, 268, 269, 271, 272, 273, 275, 279, 410, 495, 564, 567, 568, 571, 575, 578, 579, 580, 581], "phi_ref": [278, 592], "philipp": [447, 448], "phone": 407, "photon": [44, 229, 252, 372, 402, 459, 467, 477, 482, 500, 502, 521, 540, 573, 597], "photutil": [144, 387, 401, 448], "physic": [128, 129, 132, 134, 136, 307, 309, 334, 335, 386, 411, 415, 430, 465, 474, 499, 502, 504, 507, 518, 533, 535, 573, 597, 600, 601], "physicist": [17, 19, 20, 21, 22, 24, 25, 26, 27], "pi": [19, 20, 30, 31, 32, 37, 54, 238, 283, 410, 502, 529, 553, 554, 555, 558, 559, 570, 591], "pick": [387, 394, 401, 412, 429, 521], "pictur": 388, "pie": 535, "piec": [387, 393, 401, 406, 415], "piecewis": [253, 254, 457, 502, 549, 551, 561, 562, 583], "piecewisebrokenpowerlawnormspectralmodel": 410, "piecewisebrokenpowerlawnormspectramodel": 410, "piecewisenormsectralmodel": 436, "piecewisenormspatialmodel": [261, 453, 455, 502, 556], "piecewisenormspectralmodel": [262, 415, 436, 439, 452, 454, 502, 542, 574], "pig": [13, 387, 389, 390, 428, 429, 431, 432, 433, 435, 436, 447, 449, 450, 454], "pii": 138, "pillar": 403, "pin": 448, "pink": [110, 111], "pint": [487, 535], "pintor": [400, 431, 432, 433, 434, 435, 436, 438, 439, 441, 442, 450, 452, 453, 454, 455], "pip": [386, 390, 394, 404, 419, 420, 422, 429, 448, 507, 598], "pipe": [444, 445, 446], "pipelin": [390, 400, 402, 416, 435], "piron": 597, "piron2001": 597, "pivot": [19, 20, 26, 67, 221, 222, 225, 229, 231, 232, 233, 238, 244, 245, 248, 252, 254, 256, 257, 258, 263, 268, 270, 271, 272, 273, 276, 280, 454, 492], "pivot_energi": [19, 20, 26, 221, 222, 225, 229, 231, 232, 233, 238, 244, 245, 248, 252, 254, 256, 257, 258, 263, 268, 270, 271, 272, 273, 276, 280], "pix": [194, 195, 196, 197, 198, 199, 200, 201, 204, 205, 206, 207, 208, 209, 547], "pix_reg": 491, "pix_reg_rec": 491, "pix_to_coord": [194, 195, 198, 200, 201, 204, 206, 207, 454], "pix_to_idx": [194, 195, 198, 200, 201, 204, 206, 207], "pix_tuple_to_idx": 455, "pixcoord": 401, "pixel": [13, 83, 103, 106, 110, 111, 113, 114, 115, 120, 130, 144, 145, 150, 151, 152, 153, 154, 155, 156, 157, 158, 160, 161, 163, 164, 165, 166, 167, 168, 169, 179, 194, 195, 196, 197, 198, 199, 200, 201, 204, 205, 206, 207, 208, 209, 224, 227, 228, 237, 240, 251, 253, 264, 265, 269, 275, 279, 398, 427, 431, 445, 448, 468, 477, 479, 493, 498, 499, 508, 521, 531, 533, 545, 546, 547, 557], "pixel_area": 207, "pixel_scal": [120, 195, 207], "pixelis": 547, "pixelregion": [401, 544], "pixilis": 499, "pixreg": 555, "pixregion": 209, "pk": [140, 434, 459, 485, 486, 489, 490, 492, 503, 521, 563], "pks2155": [459, 485, 489], "pks2155_hess_lc": [125, 127, 148, 490, 494], "pl": [67, 80, 124, 129, 136, 173, 249, 256, 257, 258, 410, 462, 468, 479, 485, 492, 493, 494, 502, 521], "pl_model": 590, "pl_spectrum": 504, "place": [83, 86, 87, 91, 92, 100, 103, 106, 110, 111, 144, 150, 151, 152, 153, 154, 155, 156, 160, 161, 166, 168, 169, 179, 184, 196, 197, 199, 205, 208, 209, 251, 277, 308, 360, 387, 388, 394, 395, 398, 399, 400, 401, 403, 406, 407, 408, 409, 412, 418, 432, 434, 464, 484, 499, 500, 502, 521, 531, 532, 596, 602], "placehold": 392, "plai": [407, 475], "plain": [404, 499], "plainseri": 90, "plan": [391, 392, 396, 397, 401, 403, 404, 407, 412, 417, 428, 445, 447, 448, 449, 595], "planar": [279, 398], "plane": [29, 67, 68, 128, 194, 195, 196, 197, 199, 204, 205, 207, 208, 209, 407, 491, 492, 499, 507, 530, 545, 548, 554, 597, 603], "plate": [207, 499], "platform": [404, 413, 439], "plausibl": [414, 476], "pleas": [104, 109, 388, 390, 392, 394, 396, 423, 428, 429, 430, 439, 447, 449, 455, 462, 464, 465, 466, 467, 470, 473, 477, 478, 485, 486, 490, 493, 494, 518, 524, 535], "pleasant": 390, "plot": [6, 19, 20, 26, 66, 67, 83, 88, 102, 103, 106, 110, 111, 127, 130, 131, 150, 151, 153, 154, 155, 156, 157, 158, 163, 164, 165, 166, 167, 168, 169, 196, 197, 198, 199, 201, 204, 205, 206, 208, 209, 212, 221, 222, 223, 224, 225, 226, 227, 228, 229, 231, 232, 233, 234, 237, 238, 239, 240, 241, 242, 243, 244, 245, 248, 251, 252, 253, 254, 255, 256, 257, 258, 259, 263, 264, 265, 266, 268, 269, 270, 271, 272, 273, 275, 276, 278, 279, 280, 281, 284, 288, 365, 374, 375, 379, 380, 381, 382, 383, 384, 385, 386, 388, 401, 402, 403, 405, 406, 408, 411, 416, 424, 427, 430, 433, 435, 436, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 452, 453, 454, 455, 457, 458, 460, 462, 466, 468, 470, 471, 473, 474, 478, 482, 484, 485, 486, 487, 489, 490, 491, 492, 493, 494, 495, 496, 498, 500, 502, 503, 504, 505, 507, 508, 509, 510, 513, 518, 521, 525, 527, 528, 529, 531, 535, 537, 538, 539, 541, 544, 592, 593, 596, 597, 600, 602], "plot_absorb": [457, 563, 583], "plot_at_energi": [150, 151, 507], "plot_bia": [153, 158], "plot_broken_powerlaw": [457, 564, 583], "plot_compound": [457, 565, 583], "plot_const": [457, 552, 561], "plot_constant_spectr": [457, 566, 583], "plot_constant_tempor": [457, 585, 594], "plot_containment_radiu": [157, 163, 165, 167], "plot_containment_radius_vs_energi": [157, 163, 165, 166, 167, 169, 507, 508], "plot_contour_lin": 495, "plot_correl": [212, 495], "plot_count": [110, 111], "plot_dat": 602, "plot_disk": [457, 553, 561], "plot_distribut": [455, 471, 473], "plot_energi": [83, 478], "plot_energy_depend": [150, 156, 507, 537], "plot_energy_offset": 83, "plot_err": 130, "plot_error": [19, 20, 26, 66, 67, 102, 221, 222, 223, 224, 225, 228, 229, 231, 232, 233, 237, 238, 240, 244, 245, 248, 252, 253, 254, 255, 256, 257, 258, 263, 264, 265, 268, 269, 270, 271, 272, 273, 275, 276, 279, 280, 405, 459, 462, 464, 466, 473, 474, 476, 492, 495, 519], "plot_excess": [110, 111, 442], "plot_exp_cutoff_powerlaw": [457, 567, 583], "plot_exp_cutoff_powerlaw_3fgl": [457, 568, 583], "plot_exp_cutoff_powerlaw_norm_spectr": [457, 569, 583], "plot_expdecay_tempor": [457, 586, 594], "plot_extension_error": [223, 224, 228, 237, 240, 253, 255, 264, 265, 269, 275, 279], "plot_fit": [102, 110, 111, 460, 464, 465, 466, 475, 487, 518], "plot_gauss": [457, 554, 561], "plot_gauss_spectr": [457, 570, 583], "plot_gaussian_tempor": [457, 587, 594], "plot_gen_gauss": [457, 555, 561], "plot_generalized_gaussian_tempor": [457, 588, 594], "plot_grid": [164, 196, 197, 199, 205, 208, 209, 223, 224, 228, 237, 240, 253, 255, 264, 265, 269, 275, 279, 411, 441, 452, 473, 493, 497, 498, 499, 500, 502, 509], "plot_heatmap": 212, "plot_hist": [205, 548], "plot_imag": 83, "plot_interact": [196, 197, 199, 205, 208, 209, 223, 224, 228, 237, 240, 253, 255, 264, 265, 269, 275, 279, 441, 448, 473, 482, 499, 518, 519], "plot_kernel": 164, "plot_kwarg": [464, 466, 475], "plot_linear_tempor": [457, 589, 594], "plot_logparabola": [457, 571, 583], "plot_logparabola_norm_spectr": [457, 572, 583], "plot_map_rgb": 453, "plot_mask": [110, 111, 197, 205, 209, 544], "plot_matrix": [153, 493, 508], "plot_migr": 158, "plot_naima": [457, 573, 583], "plot_npred_sign": [453, 473, 475, 519], "plot_offset2_distribut": 83, "plot_offset_depend": [150, 156], "plot_panel": 374, "plot_phasogram": 278, "plot_piecewise_norm_spati": [457, 556, 561], "plot_piecewise_norm_spectr": [457, 574, 583], "plot_point": [457, 557, 561], "plot_posit": [227, 251, 501], "plot_position_error": [223, 224, 228, 237, 240, 253, 255, 264, 265, 269, 275, 279], "plot_powerlaw": [457, 575, 583], "plot_powerlaw2": [457, 576, 583], "plot_powerlaw_norm_spectr": [457, 577, 583], "plot_powerlaw_tempor": [457, 590, 594], "plot_profil": 130, "plot_psf_vs_rad": [157, 163, 165, 166, 167, 169, 508], "plot_rad_max_vs_energi": [168, 455, 466], "plot_region": [204, 205, 227, 251, 384, 466, 479, 501, 544, 548], "plot_residu": [102, 103, 106, 110, 111, 437, 439, 473, 519], "plot_residuals_spati": [103, 106, 110, 111, 473, 482, 519], "plot_residuals_spectr": [103, 106, 110, 111], "plot_rgb": 453, "plot_shel": [457, 558, 561], "plot_shell2": [457, 559, 561], "plot_sine_tempor": [457, 591, 594], "plot_smooth_broken_powerlaw": [457, 578, 583], "plot_spati": 439, "plot_spectrum": [102, 150, 473, 486, 493], "plot_spectrum_datasets_off_region": [436, 452, 453, 464, 466, 475, 544], "plot_stat": 464, "plot_super_exp_cutoff_powerlaw_3fgl": [457, 579, 583], "plot_super_exp_cutoff_powerlaw_4fgl": [457, 580, 583], "plot_super_exp_cutoff_powerlaw_4fgl_dr1": [457, 581, 583], "plot_templ": [457, 560, 561], "plot_template_phase_tempor": [457, 592, 594], "plot_template_spectr": [457, 582, 583], "plot_template_tempor": [457, 593, 594], "plot_theta_squared_t": 506, "plot_tim": 83, "plot_ts_profil": [127, 464, 465, 479, 484, 494], "plotmixin": [110, 111], "plotter": [374, 603], "plsuperexpcutoff3fgl": 446, "plsuperexpcutoff4fgl": 431, "plt": [19, 20, 26, 66, 67, 131, 150, 156, 157, 221, 222, 225, 229, 231, 232, 233, 238, 244, 245, 248, 252, 254, 256, 257, 258, 263, 268, 270, 271, 272, 273, 276, 280, 375, 384, 387, 388, 424, 458, 459, 460, 462, 464, 465, 466, 467, 468, 470, 471, 473, 474, 475, 476, 477, 478, 479, 482, 484, 485, 486, 487, 489, 490, 491, 492, 493, 494, 495, 497, 498, 499, 500, 501, 502, 503, 504, 506, 507, 508, 509, 510, 518, 519, 521, 527, 528, 529, 535, 537, 538, 539, 541, 544, 553, 555, 559, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 585, 586, 587, 588, 589, 590, 591, 603], "plu": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 228, 407, 413, 502], "plug": 416, "pmf": 400, "png": [157, 395, 424, 525, 527, 528, 529, 531, 532, 537, 538, 539, 541, 544, 548, 600, 603], "po": [155, 207, 544], "point": [15, 17, 18, 21, 22, 24, 25, 27, 61, 65, 67, 71, 72, 73, 74, 75, 77, 78, 79, 80, 82, 83, 85, 87, 88, 90, 91, 94, 95, 96, 99, 100, 101, 102, 103, 105, 106, 110, 111, 113, 114, 121, 125, 127, 128, 129, 132, 133, 135, 136, 137, 141, 146, 148, 155, 157, 160, 166, 168, 169, 179, 180, 182, 183, 184, 186, 187, 189, 190, 192, 193, 196, 197, 199, 204, 205, 208, 209, 214, 227, 251, 255, 267, 286, 290, 293, 299, 316, 320, 326, 332, 342, 379, 387, 389, 390, 392, 393, 394, 395, 396, 397, 399, 400, 401, 403, 404, 407, 408, 409, 410, 411, 412, 413, 414, 416, 417, 420, 427, 430, 432, 433, 439, 441, 442, 444, 445, 446, 447, 449, 452, 453, 454, 457, 460, 461, 463, 466, 467, 468, 473, 478, 479, 482, 484, 485, 486, 487, 489, 493, 495, 497, 498, 499, 502, 503, 508, 510, 513, 520, 523, 524, 530, 531, 532, 535, 540, 544, 547, 549, 551, 554, 555, 561, 573, 595, 596, 597], "point_sourc": 398, "pointer": 395, "pointing_altaz": [414, 453], "pointing_galact": 91, "pointing_info": [85, 94, 458], "pointing_posit": [166, 467, 478, 482], "pointing_radec": [83, 91, 453, 507], "pointing_t": 94, "pointing_zen": 453, "pointinginfo": [85, 445], "pointinginfometadata": [90, 105], "pointingmetadata": 414, "pointingmod": 85, "pointlik": [150, 151, 152, 153, 156, 157, 158, 160, 163, 165, 167, 168, 447, 544], "points_scal": 326, "pointskyregion": [178, 183, 204, 255, 442, 466, 478], "pointsourc": [398, 523], "pointspatialmodel": [19, 20, 72, 80, 136, 261, 410, 411, 432, 452, 468, 470, 473, 474, 477, 478, 484, 492, 493, 501, 502, 508, 518, 519, 557], "pointspreadfunct": 497, "poisson": [106, 111, 292, 293, 294, 295, 301, 304, 305, 311, 344, 399, 400, 430, 435, 462, 467, 471, 482, 506, 597, 598, 600], "poisson_stats_imag": 603, "poissonian": [293, 487, 490, 597], "poissonlikelihoodfitt": 444, "polar": [51, 54, 315, 387], "pole": [51, 401, 499], "poli": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 197], "polici": 391, "pollut": 402, "polygon": [197, 211, 401], "polygonis": 401, "polygonpixelregion": 401, "polygonskyregion": [211, 401], "polynomi": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 248, 499], "polynomial1d": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40], "polynomialmodel": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40], "pool": [330, 334, 335], "pool_kwarg": [334, 335], "poolmethodenum": 330, "poon": 445, "poor": [17, 19, 20, 21, 22, 24, 25, 26, 27], "poorli": [498, 542], "pop": [92, 100, 203, 251], "popitem": 203, "popul": [6, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 388, 407, 446, 524, 526, 573, 596], "popular": 598, "port": 446, "pos_ob": 475, "pos_on": 193, "pos_target": [475, 487], "posit": [16, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 45, 46, 47, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 83, 84, 85, 87, 90, 91, 94, 95, 96, 103, 104, 105, 106, 109, 113, 114, 125, 126, 127, 128, 129, 132, 133, 136, 154, 155, 161, 164, 166, 169, 179, 182, 184, 193, 195, 196, 197, 199, 204, 205, 206, 207, 208, 209, 210, 217, 218, 219, 220, 223, 224, 227, 228, 237, 240, 251, 253, 255, 264, 265, 267, 269, 275, 277, 279, 290, 292, 294, 312, 313, 316, 317, 320, 321, 375, 387, 394, 398, 400, 401, 410, 411, 412, 413, 429, 431, 436, 439, 441, 454, 455, 458, 466, 467, 468, 470, 471, 473, 474, 475, 476, 477, 478, 479, 482, 486, 487, 491, 492, 493, 497, 498, 499, 500, 501, 502, 503, 507, 508, 521, 531, 532, 533, 535, 540, 541, 544, 545, 546, 548, 553, 554, 555, 557, 573, 600], "position_angl": 467, "position_error": [223, 224, 228, 237, 240, 253, 255, 264, 265, 269, 275, 279, 433], "position_lonlat": [223, 224, 228, 237, 240, 253, 255, 264, 265, 267, 269, 275, 279], "position_off": 193, "positv": 450, "posixpath": [16, 351], "possibl": [33, 82, 87, 91, 139, 159, 387, 388, 390, 394, 395, 398, 399, 400, 401, 402, 403, 404, 406, 407, 408, 411, 414, 417, 418, 420, 430, 431, 439, 446, 448, 453, 455, 459, 464, 468, 470, 471, 476, 479, 493, 495, 497, 498, 499, 508, 511, 513, 519, 521, 533, 535, 542, 547, 548, 573, 598, 599], "possibli": [87, 91, 125, 393, 397, 398, 400, 401, 405, 406, 407, 408, 414, 417, 439, 542], "post": [52, 396, 414], "postbuild": 417, "poster": [390, 413, 418, 443], "posterior": [405, 504], "posteriori": 504, "postfix": 387, "potenti": [122, 395, 403, 416, 476, 535], "potentiel": 413, "power": [19, 20, 26, 27, 102, 120, 125, 127, 129, 135, 143, 164, 166, 169, 195, 217, 219, 221, 222, 225, 229, 231, 232, 233, 238, 244, 245, 248, 252, 254, 256, 257, 258, 259, 263, 268, 270, 271, 272, 273, 276, 280, 283, 288, 293, 341, 398, 400, 427, 433, 445, 447, 455, 457, 459, 467, 470, 473, 477, 479, 482, 485, 486, 487, 489, 501, 502, 504, 535, 549, 562, 563, 583, 590], "power_spectrum": 293, "power_spectrum_param": 293, "powerlaw": [182, 257, 259, 293, 398, 399, 403, 445, 447, 457, 460, 470, 478, 479, 492, 502, 504, 519, 549, 577, 584, 594], "powerlaw2spectralmodel": [249, 257, 258, 262, 410, 462, 470, 502, 521, 576], "powerlaw_with_paramet": 293, "powerlawnormspectralmodel": [67, 235, 256, 258, 262, 277, 409, 410, 415, 436, 454, 473, 474, 477, 478, 482, 493, 501, 502, 508, 518, 542, 556, 577, 582], "powerlawspectr": 136, "powerlawspectralmodel": [70, 72, 76, 80, 102, 110, 111, 116, 119, 124, 127, 133, 136, 218, 220, 256, 257, 262, 284, 410, 411, 415, 459, 460, 462, 465, 467, 468, 475, 476, 477, 478, 479, 482, 484, 485, 486, 487, 489, 492, 493, 494, 501, 502, 504, 507, 508, 518, 519, 521, 533, 552, 553, 554, 555, 557, 558, 559, 560, 563, 565, 574, 575, 585, 586, 587, 588, 589, 590, 591, 592, 593], "powerlawspectramodel": 415, "powerlawtemporalmodel": [274, 502, 590], "pp": [307, 309], "pppc": [17, 19, 20, 21, 22, 24, 25, 26, 27], "pppc4dm": 523, "pprint": [87, 91, 599], "pprint_al": [87, 91], "pprint_exclude_nam": [87, 91], "pprint_include_nam": [87, 91], "pr": [387, 397, 399, 401, 410, 411, 413, 415, 416, 417, 433, 434], "practic": [400, 404, 408, 411, 412, 413, 414, 464, 493, 500, 502, 519, 531, 535, 544, 597], "pre": [16, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 84, 90, 102, 105, 109, 126, 127, 387, 390, 396, 407, 413, 414, 419, 420, 436, 448, 450, 465, 470, 471, 474, 476, 479, 490, 492, 494, 495, 501, 504, 531, 537], "preced": [332, 401, 403, 413, 502], "precis": [134, 136, 157, 163, 165, 167, 224, 228, 237, 240, 253, 264, 265, 269, 275, 279, 387, 405, 412, 413, 478], "precision_factor": [166, 169, 196, 197, 199, 205, 208, 209], "precomput": [26, 102, 127, 455, 493, 501], "pred": 531, "predefin": [420, 422, 441, 479, 484, 485, 518], "predic": 398, "predict": [102, 103, 106, 109, 110, 111, 124, 125, 127, 128, 129, 132, 133, 136, 143, 173, 176, 182, 189, 255, 267, 296, 307, 309, 310, 336, 383, 393, 398, 399, 400, 436, 453, 454, 459, 465, 467, 470, 471, 473, 475, 477, 479, 482, 493, 494, 498, 504, 518, 519, 533, 535, 539, 542, 563, 596, 597, 600], "prefer": [87, 91, 362, 387, 392, 394, 398, 406, 407, 413, 419, 420, 424, 479, 486, 499, 500, 504, 513, 514, 598, 600], "prefix": [201, 398], "preliminari": [396, 407, 415, 444, 446, 454, 468, 497, 508], "prepar": [82, 176, 397, 398, 416, 417, 465, 474, 494, 498, 502, 508, 518, 543, 595], "prepare_input": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40], "prepare_output": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40], "prepend": [77, 87, 91, 314], "presenc": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 455, 468, 490, 499, 573, 597], "present": [15, 70, 82, 85, 91, 92, 100, 107, 111, 125, 127, 170, 198, 203, 227, 235, 251, 314, 387, 388, 390, 400, 403, 407, 411, 414, 416, 418, 439, 460, 466, 470, 471, 484, 485, 489, 490, 491, 497, 498, 499, 501, 531, 533, 536, 548, 598, 600], "preserv": [87, 91, 106, 196, 197, 199, 201, 205, 208, 209, 404, 493, 500], "preserve_count": [196, 197, 199, 205, 208, 209, 499], "press": 507, "pretti": [401, 407, 418, 424], "prevent": [197, 229, 314, 439, 473, 542], "preview": [390, 510], "previou": [74, 87, 91, 387, 390, 401, 407, 408, 412, 417, 430, 436, 454, 455, 466, 476, 477, 499, 502, 503, 504, 521, 530], "previous": [290, 404, 435, 447, 448, 458, 464, 473, 474, 492, 498, 500], "primari": [26, 87, 91, 196, 197, 199, 200, 208, 209, 392, 413, 435, 450, 494, 499], "primarili": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40], "primary_axi": 200, "primary_band": 499, "primary_hdu": 477, "primaryflux": [19, 20, 491, 523], "primaryhdu": [477, 499], "prime": 23, "primer": 405, "princip": 476, "principl": [387, 413, 415, 464, 545], "print": [11, 67, 82, 83, 85, 86, 87, 88, 91, 94, 96, 102, 103, 110, 112, 117, 124, 127, 129, 136, 151, 153, 156, 157, 163, 165, 167, 176, 179, 218, 220, 227, 242, 251, 284, 312, 313, 322, 354, 387, 388, 398, 399, 402, 411, 414, 423, 424, 458, 459, 460, 462, 464, 465, 466, 467, 468, 470, 471, 473, 474, 475, 476, 477, 478, 479, 482, 484, 485, 486, 487, 489, 490, 491, 493, 494, 495, 497, 498, 499, 500, 501, 502, 503, 504, 506, 507, 508, 518, 519, 521, 533, 535, 547, 548, 552, 553, 554, 555, 556, 557, 558, 559, 560, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 585, 586, 587, 588, 589, 590, 591, 592, 593, 598, 599, 600, 602], "print0": 387, "print_level": [473, 482, 495, 519], "print_stack": 387, "printout": [387, 446, 447, 493], "prior": [19, 20, 99, 102, 103, 106, 110, 111, 217, 218, 219, 220, 221, 224, 225, 228, 229, 231, 232, 233, 234, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 248, 251, 255, 256, 257, 258, 259, 263, 264, 265, 266, 268, 271, 272, 273, 278, 279, 282, 391, 396, 416, 454, 455, 457, 459, 460, 464, 465, 466, 467, 470, 473, 474, 479, 482, 485, 486, 492, 495, 496, 502, 505, 513, 519, 521, 582, 595], "prior_inverse_cdf": 416, "prior_registri": 504, "prior_stat_sum": [217, 218, 219, 220, 415, 504], "priorfitstatist": 415, "priori": [411, 471, 500], "prioriti": [384, 396, 398, 399, 401, 413, 417], "priormodel": 415, "priorparamet": [236, 246, 260, 282, 415, 504], "privat": [387, 396, 410, 447, 509, 510], "pro": [387, 403], "probabl": [13, 102, 137, 146, 147, 158, 390, 393, 394, 395, 397, 400, 401, 405, 407, 409, 415, 416, 418, 464, 467, 482, 495, 499, 502, 504, 508, 539, 540, 541, 597, 598, 600, 601], "probe": [136, 299, 416, 502], "problem": [19, 20, 217, 221, 224, 225, 228, 229, 231, 232, 233, 234, 237, 238, 239, 240, 241, 242, 243, 244, 245, 248, 255, 256, 257, 258, 259, 263, 264, 265, 266, 268, 271, 272, 273, 278, 279, 308, 365, 395, 397, 401, 408, 415, 423, 451, 495, 535], "problemat": [406, 411, 414, 485, 535], "proce": [390, 418, 420, 422, 450, 459, 460, 464, 465, 477, 482, 485, 500, 501, 507, 508, 518, 519], "procedur": [400, 412, 417, 418, 459, 468, 473], "proceed": [407, 413, 509], "process": [11, 83, 93, 128, 129, 132, 136, 137, 146, 172, 197, 209, 333, 334, 335, 344, 387, 388, 390, 392, 393, 395, 396, 397, 399, 400, 402, 403, 409, 412, 413, 414, 421, 425, 431, 436, 439, 441, 447, 454, 455, 460, 464, 468, 475, 477, 478, 492, 493, 498, 509, 516, 519, 525, 532, 534, 535, 596, 597, 598], "process_lots_of_data": 387, "processor": 407, "prod": 428, "prod3": 407, "prod3b": 507, "prod5": [477, 478, 507], "produc": [15, 103, 106, 110, 111, 115, 125, 287, 289, 387, 388, 393, 402, 403, 411, 412, 414, 416, 418, 433, 459, 460, 464, 466, 468, 474, 475, 476, 477, 482, 485, 487, 491, 495, 498, 504, 507, 519, 535, 538, 540, 597, 598], "product": [109, 137, 146, 196, 197, 199, 202, 205, 208, 209, 278, 393, 402, 403, 413, 414, 424, 439, 453, 454, 459, 462, 468, 478, 487, 493, 495, 498, 508, 510, 533, 540, 597], "prof_mak": 129, "profil": [17, 18, 21, 22, 23, 24, 25, 27, 77, 102, 103, 106, 121, 125, 127, 128, 129, 130, 131, 132, 133, 136, 137, 146, 157, 163, 165, 166, 167, 169, 193, 197, 205, 214, 239, 241, 291, 311, 327, 346, 347, 390, 399, 401, 405, 406, 413, 420, 422, 427, 429, 436, 439, 444, 446, 448, 449, 454, 455, 457, 464, 465, 475, 480, 481, 484, 485, 486, 494, 495, 504, 513, 523, 533, 535, 553, 597, 600], "profile_err": 130, "profile_high": 479, "profile_new": 479, "profuma": 523, "program": [387, 403], "programmat": 473, "progress": [15, 82, 120, 132, 136, 214, 335, 393, 396, 403, 404, 418, 439, 446, 447, 448, 454, 535], "progress_download": 535, "proj": [103, 106, 110, 111, 176, 195, 196, 197, 207, 208, 209, 464, 498, 499, 508, 519, 544], "project": [103, 110, 129, 173, 179, 195, 196, 197, 199, 204, 205, 207, 208, 209, 224, 227, 228, 237, 240, 251, 253, 264, 265, 269, 275, 279, 321, 347, 387, 388, 389, 390, 392, 394, 401, 403, 404, 407, 413, 431, 439, 447, 453, 465, 468, 471, 475, 479, 487, 497, 499, 500, 501, 508, 516, 518, 519, 521, 523, 544, 547, 548, 558, 559, 596, 598, 603], "projected_distance_axi": 129, "prompt": 598, "pronounc": 535, "pronunci": 535, "prop_cycl": 384, "propag": [19, 20, 26, 53, 130, 221, 222, 225, 229, 231, 232, 233, 238, 244, 245, 248, 252, 254, 256, 257, 258, 263, 268, 270, 271, 272, 273, 276, 280, 298, 398, 405, 433, 453, 495], "proper": [45, 100, 388, 402, 413, 452, 453, 466, 473, 535], "properli": [136, 189, 392, 402, 413, 451, 452, 464, 465, 494, 495, 518, 531, 599], "properti": [16, 19, 20, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 83, 84, 87, 90, 91, 96, 105, 125, 126, 173, 207, 217, 221, 224, 225, 228, 229, 231, 232, 233, 234, 237, 238, 239, 240, 241, 242, 243, 244, 245, 248, 255, 256, 257, 258, 259, 263, 264, 265, 266, 268, 271, 272, 273, 278, 279, 300, 384, 387, 388, 398, 400, 410, 411, 414, 415, 436, 439, 441, 446, 447, 449, 452, 453, 464, 466, 475, 477, 479, 492, 500, 502, 503, 521, 532, 548, 597], "propos": [387, 389, 391, 392, 393, 394, 396, 404, 412, 413, 415, 417, 429, 432, 433, 435, 436, 447, 453], "protect": 455, "proto": [16, 84, 90, 105, 126], "proton": [283, 573], "prototyp": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 392, 398, 400, 403, 404, 405, 407, 444, 446, 447, 454, 524], "proven": 403, "provid": [15, 16, 26, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 77, 82, 83, 84, 85, 87, 88, 90, 91, 102, 103, 105, 106, 110, 111, 115, 126, 132, 136, 137, 139, 146, 153, 154, 172, 186, 187, 192, 196, 197, 199, 201, 202, 203, 204, 205, 206, 207, 208, 209, 214, 215, 242, 275, 276, 279, 293, 311, 314, 380, 387, 388, 397, 398, 400, 402, 403, 404, 407, 408, 411, 413, 414, 415, 416, 417, 418, 419, 420, 422, 423, 425, 429, 432, 433, 434, 436, 439, 441, 450, 453, 455, 458, 464, 466, 467, 468, 478, 482, 490, 492, 493, 494, 495, 498, 499, 500, 502, 503, 508, 509, 510, 511, 513, 519, 521, 523, 525, 530, 532, 533, 534, 535, 536, 537, 538, 539, 541, 542, 545, 546, 547, 548, 549, 557, 560, 573, 582, 595, 596, 597, 598, 600, 603], "proxi": 397, "prune": [390, 417], "pset": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40], "pseudonym": 390, "psf": [16, 82, 87, 88, 96, 103, 104, 106, 109, 110, 111, 113, 114, 115, 155, 157, 162, 163, 164, 165, 166, 167, 169, 176, 183, 192, 207, 227, 251, 267, 312, 313, 387, 393, 397, 398, 399, 400, 403, 427, 429, 433, 434, 435, 436, 439, 440, 444, 445, 446, 447, 448, 449, 450, 451, 453, 455, 458, 460, 464, 465, 466, 468, 470, 471, 473, 475, 477, 478, 482, 484, 493, 498, 500, 503, 507, 509, 510, 518, 519, 531, 533, 535, 540, 543, 548, 597], "psf3d": [88, 157, 162, 165, 167, 192, 429, 447, 541], "psf68": 458, "psf_": 531, "psf_3gauss": [87, 157, 507, 541], "psf_assym": 497, "psf_file": 101, "psf_kernel": [166, 508], "psf_kernel_map": [164, 508], "psf_king": [87, 165, 541], "psf_map": [104, 109, 166, 169], "psf_map_reco": [169, 509], "psf_mean": 508, "psf_new": 497, "psf_out": [166, 169], "psf_r95": 500, "psf_tabl": [82, 87, 163, 497, 510], "psf_theta": 387, "psf_updat": [104, 109], "psf_valu": [157, 165, 167], "psfkernel": [106, 166, 169, 197, 209, 399, 408, 448, 541], "psfking": [162, 441, 541], "psfmap": [103, 104, 106, 109, 110, 111, 154, 155, 161, 162, 164, 169, 176, 183, 192, 399, 400, 408, 429, 432, 433, 435, 436, 448, 454, 455, 468, 493, 508, 535, 541], "psfnd": 497, "psr": [487, 492, 521], "pub": 390, "public": [6, 377, 378, 390, 392, 401, 406, 409, 412, 418, 443, 460, 474, 484, 485, 489, 596, 603], "publicli": [507, 509, 510], "publish": [11, 404, 418, 464, 508], "pull": [388, 391, 392, 395, 396, 397, 398, 399, 400, 401, 407, 412, 413, 417, 418, 426], "puls": [77, 241], "pulsar": [30, 31, 32, 35, 39, 40, 42, 50, 54, 60, 64, 77, 83, 397, 407, 429, 431, 450, 453, 455, 457, 471, 476, 483, 488, 502, 513, 525, 526, 535], "pulsar_analysi": [407, 457, 487, 488], "pulsat": 266, "pulse_profil": 77, "pulse_profile_best_fit": 77, "pulse_profile_radio": 77, "pulse_stat": 487, "punch": [452, 454], "pure": [387, 404, 406, 407, 544], "purpl": 548, "purpos": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 338, 362, 391, 393, 399, 402, 406, 410, 412, 413, 447, 468, 493, 501, 502, 539], "push": [387, 390, 417, 450], "put": [201, 387, 388, 390, 392, 394, 395, 398, 407, 417, 418, 424, 430, 467, 477, 500, 508, 535, 598], "pwbpl": 410, "pwd": [390, 420, 422], "pwl": [19, 20, 26, 127, 218, 220, 221, 222, 225, 229, 231, 232, 233, 238, 244, 245, 248, 252, 254, 256, 257, 258, 263, 268, 270, 271, 272, 273, 276, 280, 284, 398, 410, 415, 459, 462, 477, 494, 502, 504, 533, 552, 553, 554, 555, 557, 558, 559, 560, 563, 565], "pwl2": 502, "pwl_decai": 477, "pwl_norm": [410, 502, 577], "pwn": [43, 492, 521, 528], "pwne": 476, "py": [387, 388, 394, 401, 404, 406, 408, 417, 418, 424, 429, 431, 432, 440, 445, 449, 457, 458, 459, 460, 462, 463, 464, 465, 466, 467, 468, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 481, 482, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 512, 515, 516, 518, 519, 521, 522, 535, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 598], "py310": 390, "py35": 446, "pycharm": 430, "pydant": [16, 84, 90, 105, 126, 386, 433, 452, 454, 473], "pydantic_cor": [16, 84, 90, 105, 126], "pydanticdeprecatedsince20": 473, "pydanticserializationerror": [16, 84, 90, 105, 126], "pydanticundefin": [16, 84, 90, 105, 126], "pydata": [441, 455], "pydocstyl": 388, "pyfact": [427, 445], "pyflak": 441, "pyirf": 454, "pyjok": 386, "pymc": 405, "pymotw": 598, "pypi": [404, 414, 417, 418, 420, 421], "pyplot": [19, 20, 26, 66, 67, 83, 131, 157, 221, 222, 225, 229, 231, 232, 233, 238, 244, 245, 248, 252, 254, 256, 257, 258, 263, 268, 270, 271, 272, 273, 276, 280, 375, 380, 424, 458, 459, 460, 462, 464, 465, 466, 467, 468, 470, 471, 473, 474, 475, 476, 477, 478, 479, 482, 484, 485, 486, 487, 489, 490, 491, 492, 493, 494, 495, 497, 498, 499, 500, 501, 502, 503, 504, 506, 507, 508, 509, 510, 518, 519, 521, 527, 528, 529, 535, 537, 538, 539, 541, 544, 553, 555, 559, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 585, 586, 587, 588, 589, 590, 591, 603], "pyproject": 436, "pyregion": 401, "pytest": [387, 388, 390, 418, 447], "python": [11, 16, 84, 90, 105, 126, 144, 314, 355, 386, 390, 391, 392, 396, 397, 399, 400, 401, 403, 404, 405, 406, 407, 408, 413, 414, 417, 418, 419, 420, 421, 422, 423, 425, 427, 428, 429, 431, 432, 439, 441, 444, 445, 446, 447, 448, 449, 450, 453, 458, 459, 460, 462, 464, 465, 466, 467, 468, 470, 471, 473, 474, 475, 476, 477, 478, 479, 482, 484, 485, 486, 487, 489, 490, 491, 492, 493, 494, 495, 497, 498, 499, 500, 501, 502, 503, 504, 506, 507, 508, 509, 510, 513, 514, 516, 518, 519, 521, 523, 534, 535, 549, 552, 553, 554, 555, 556, 557, 558, 559, 560, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 585, 586, 587, 588, 589, 590, 591, 592, 593, 595, 596, 598], "python3": [351, 421, 458, 460, 464, 465, 466, 467, 468, 470, 471, 473, 474, 475, 476, 477, 478, 479, 482, 484, 485, 486, 487, 489, 491, 492, 493, 495, 498, 499, 500, 501, 502, 504, 506, 507, 508, 509, 510, 518, 519, 521, 560, 569, 586], "python_execut": [458, 460, 464, 465, 466, 467, 468, 470, 471, 473, 474, 475, 476, 477, 478, 479, 484, 485, 486, 487, 491, 492, 493, 495, 498, 499, 500, 501, 502, 504, 506, 507, 508, 509, 510, 518, 519, 521], "python_vers": [458, 460, 464, 465, 466, 467, 468, 470, 471, 473, 474, 475, 476, 477, 478, 479, 484, 485, 486, 487, 491, 492, 493, 495, 498, 499, 500, 501, 502, 504, 506, 507, 508, 509, 510, 518, 519, 521], "pytorch": 405, "pyx": [390, 418], "pyyaml": [386, 404, 428, 432], "q": [26, 83, 87, 91, 382, 491], "qol": 455, "qtabl": [87, 91, 402, 489], "quadrat": [499, 521, 601], "qualiti": [205, 407, 447, 448, 453, 503, 519, 535, 596, 603], "quantifi": [454, 476, 489, 490, 504], "quantiti": [13, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 45, 46, 47, 50, 51, 52, 53, 54, 71, 74, 75, 80, 83, 86, 87, 88, 91, 94, 96, 100, 103, 104, 106, 107, 109, 110, 111, 113, 114, 115, 120, 122, 124, 125, 126, 127, 128, 129, 130, 132, 133, 135, 136, 137, 139, 140, 141, 142, 144, 145, 146, 149, 150, 151, 152, 153, 154, 156, 157, 158, 160, 163, 164, 165, 166, 167, 168, 169, 171, 180, 181, 182, 184, 188, 189, 190, 191, 193, 194, 195, 196, 197, 199, 200, 201, 204, 205, 206, 207, 208, 209, 210, 211, 217, 219, 221, 222, 224, 225, 226, 227, 228, 229, 231, 232, 233, 234, 237, 238, 239, 240, 241, 242, 243, 244, 245, 248, 251, 252, 254, 255, 256, 257, 258, 259, 263, 264, 265, 266, 267, 268, 270, 271, 272, 273, 276, 277, 278, 279, 280, 281, 286, 292, 293, 294, 297, 298, 299, 300, 302, 308, 313, 314, 316, 318, 320, 321, 326, 344, 346, 347, 358, 362, 387, 388, 393, 396, 398, 401, 402, 403, 405, 410, 411, 414, 415, 430, 432, 436, 439, 440, 448, 449, 450, 458, 466, 468, 477, 478, 479, 485, 489, 490, 492, 493, 497, 498, 499, 500, 502, 507, 509, 510, 521, 527, 528, 529, 531, 535, 548, 576, 586, 588, 596, 597, 600, 602], "quantity_support": [497, 553], "quasar": 140, "quentin": [405, 409, 410, 431, 432, 433, 434, 435, 436, 439, 441, 442, 450, 451, 452, 453, 454, 455], "queri": [403, 444, 492], "question": [354, 390, 392, 394, 395, 396, 398, 399, 400, 401, 404, 406, 411, 423, 428, 429, 447, 448, 449, 475, 521, 535, 536, 598], "questionnair": [394, 447], "quetin": 433, "quick": [83, 88, 103, 106, 110, 111, 150, 151, 153, 154, 155, 156, 157, 158, 163, 164, 165, 166, 167, 169, 387, 407, 418, 468, 470, 473, 475, 477, 486, 493, 497, 501, 507, 509, 510, 511, 513, 521, 523, 532], "quickest": 388, "quickli": [387, 388, 390, 392, 403, 404, 407, 413, 416, 418, 420, 446, 464, 473, 490, 509, 539, 598], "quicklook": 83, "quickplot": 197, "quicksort": [87, 91], "quickstart": 425, "quiescent": 563, "quit": [87, 91, 387, 415, 477], "quival": 398, "quot": [74, 284, 387, 388, 491], "r": [17, 18, 21, 22, 24, 25, 26, 27, 28, 30, 35, 36, 39, 40, 51, 53, 54, 86, 87, 91, 158, 193, 206, 315, 387, 388, 412, 418, 465, 474, 478, 495, 498, 518, 525, 540, 544, 553, 554, 555, 559, 563], "r68": [83, 113, 114, 157, 166, 169], "r70": [67, 492], "r_": [17, 18, 21, 22, 24, 25, 27, 28, 35, 36, 39, 40, 50, 52, 53, 264, 265, 491, 555, 558, 559], "r_0": [30, 33, 38, 48, 228, 240, 264, 501, 553, 555, 559], "r_1": [39, 48], "r_eval": 240, "r_exp": [36, 48], "r_in": [44, 171, 181, 264, 471, 545], "r_m": 555, "r_out": 44, "r_out_max": 171, "r_out_pwn": 43, "r_sun": 38, "ra": [67, 83, 85, 87, 88, 91, 94, 144, 179, 387, 388, 400, 403, 458, 464, 466, 468, 471, 475, 478, 484, 485, 487, 489, 492, 498, 500, 506, 507, 508, 509, 519, 521, 523, 535, 539, 602], "ra_pnt": 510, "ra_tru": [387, 400], "rad": [33, 83, 88, 103, 106, 110, 111, 113, 114, 115, 154, 155, 157, 161, 163, 165, 166, 167, 168, 169, 179, 192, 266, 403, 441, 453, 466, 493, 497, 498, 508, 540, 541, 544, 591], "rad_axi": [103, 106, 110, 111, 115, 166, 169, 493, 497, 498, 535], "rad_di": [45, 525], "rad_index": 163, "rad_max": [82, 83, 87, 88, 162, 168, 185, 441, 450, 452, 453, 466], "rad_max_2d": [87, 168, 178, 183, 185, 466], "radec": [83, 94, 150, 151, 152, 153, 156, 157, 158, 159, 160, 163, 165, 167, 168, 387, 388, 497, 499, 521], "radecsi": 560, "radesysa": 560, "radi": [252, 573], "radial": [28, 30, 35, 36, 39, 40, 45, 131, 193, 197, 340, 387, 398, 406, 411, 429, 444, 446, 454, 477, 479, 498, 507, 523, 525, 541, 544], "radian": [17, 18, 21, 22, 24, 25, 27, 202, 223, 224, 228, 237, 240, 253, 255, 264, 265, 267, 269, 275, 279], "radiat": [229, 535, 558, 559, 573], "radiative_model": [252, 573], "radii": [27, 491, 508, 554], "radio": [30, 31, 32, 77, 140, 401, 499], "radio_profil": 77, "radiobutton": [473, 482, 499, 518, 519], "radiu": [16, 17, 18, 21, 22, 24, 25, 27, 33, 34, 38, 43, 44, 50, 51, 52, 53, 54, 72, 82, 83, 91, 96, 103, 106, 110, 111, 124, 129, 130, 157, 163, 165, 166, 167, 169, 171, 179, 181, 197, 207, 209, 210, 227, 228, 237, 240, 251, 253, 255, 264, 265, 267, 269, 275, 277, 279, 312, 313, 346, 388, 401, 403, 410, 411, 429, 438, 439, 443, 453, 458, 460, 464, 465, 467, 468, 470, 471, 473, 475, 477, 478, 484, 485, 487, 489, 491, 493, 497, 498, 500, 501, 502, 503, 507, 518, 519, 521, 528, 529, 542, 544, 545, 548, 553, 554, 555, 558, 559], "radius_inn": [52, 53], "radius_max": [346, 479], "radius_min": 346, "radius_reverse_shock": [50, 53, 528], "radmax": [441, 442, 453, 454], "radmax2d": [83, 88, 162, 185, 439, 455, 466], "rai": [11, 19, 20, 26, 36, 37, 52, 53, 57, 59, 63, 66, 83, 93, 124, 128, 129, 132, 135, 136, 140, 172, 229, 283, 284, 299, 300, 334, 335, 387, 393, 398, 399, 401, 405, 416, 418, 420, 424, 425, 430, 446, 448, 453, 454, 458, 459, 460, 464, 465, 466, 467, 468, 470, 471, 473, 474, 475, 476, 477, 478, 479, 484, 485, 486, 487, 492, 493, 495, 498, 499, 500, 501, 502, 503, 504, 506, 507, 508, 509, 510, 518, 519, 521, 523, 525, 526, 530, 531, 532, 535, 538, 540, 542, 544, 545, 563, 595, 596, 597, 598, 599, 600, 603], "rais": [16, 26, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 72, 84, 86, 87, 90, 91, 92, 100, 105, 126, 129, 198, 203, 227, 229, 251, 275, 276, 277, 279, 314, 365, 387, 401, 410, 411, 414, 415, 433, 450, 453, 454, 455, 478], "raise_error": [16, 84, 90, 105, 126], "raj2000": [492, 521], "ran": [417, 507], "random": [6, 33, 42, 45, 46, 47, 87, 91, 103, 104, 106, 109, 110, 111, 155, 166, 169, 196, 197, 199, 205, 208, 209, 226, 234, 239, 241, 242, 243, 259, 266, 278, 281, 293, 336, 337, 338, 339, 340, 341, 342, 343, 344, 390, 399, 400, 403, 416, 431, 443, 447, 477, 502, 535, 599, 600, 602], "random_se": 399, "random_st": [33, 42, 45, 46, 47, 103, 104, 106, 109, 110, 111, 155, 166, 169, 196, 197, 199, 205, 208, 209, 226, 234, 239, 241, 242, 243, 259, 266, 278, 281, 293, 336, 337, 338, 341, 342, 343, 344, 387, 400, 467, 477, 478], "randomli": [46, 101, 118, 387], "randomnumb": 341, "randomst": [33, 42, 45, 46, 47, 103, 104, 106, 109, 110, 111, 155, 166, 169, 196, 197, 199, 205, 208, 209, 226, 234, 239, 241, 242, 243, 259, 266, 278, 281, 293, 336, 338, 341, 342, 343, 344, 387], "rang": [17, 18, 19, 20, 21, 22, 24, 25, 26, 27, 67, 71, 74, 75, 77, 80, 83, 87, 91, 92, 100, 101, 102, 103, 106, 110, 111, 128, 136, 153, 166, 168, 169, 182, 194, 195, 198, 200, 201, 204, 205, 207, 217, 219, 221, 222, 225, 226, 228, 229, 231, 232, 233, 234, 238, 239, 241, 242, 243, 244, 245, 248, 251, 252, 254, 256, 257, 258, 259, 263, 266, 268, 270, 271, 272, 273, 276, 277, 278, 280, 281, 286, 327, 339, 341, 342, 343, 380, 387, 393, 399, 400, 402, 411, 430, 435, 436, 439, 447, 448, 450, 460, 464, 466, 467, 470, 473, 474, 476, 478, 485, 486, 487, 490, 492, 493, 494, 495, 497, 499, 500, 502, 503, 504, 508, 509, 518, 519, 521, 531, 533, 535, 555, 566, 596, 600], "rangl": 19, "rapid": [140, 299, 393, 396, 411, 412], "rare": [386, 387, 406, 499], "raster": [95, 197], "rate": [44, 45, 83, 88, 150, 151, 182, 189, 293, 344, 400, 424, 448, 464, 466, 487, 498, 507, 508, 510, 525, 538, 597], "rather": [120, 124, 128, 132, 136, 392, 405, 408, 447, 450, 452, 454, 455, 460, 495, 499, 521, 531, 554, 600], "ratio": [106, 111, 171, 195, 196, 197, 294, 311, 411, 458, 487, 507, 545, 597, 599, 600, 601, 603], "ravel": [195, 477], "raw": [125, 182, 521], "rc": [196, 197, 199, 205, 208, 209, 384, 499], "rc_context": [196, 197, 199, 205, 208, 209, 499], "rc_param": [196, 197, 199, 205, 208, 209, 499], "rcparam": 384, "rdbu": 518, "rdbu_r": [103, 106, 110, 111], "rdz7axz": 489, "re": [87, 91, 96, 127, 128, 129, 133, 173, 196, 197, 199, 205, 208, 209, 214, 312, 313, 380, 387, 388, 390, 392, 394, 395, 401, 402, 403, 405, 408, 409, 410, 411, 423, 427, 439, 441, 448, 462, 464, 465, 471, 473, 474, 475, 486, 495, 497, 501, 503, 508, 518, 521, 533, 535, 557, 598], "reach": [53, 135, 210, 392, 397, 400, 416, 502], "reactiv": 450, "reactivenestedsampl": 416, "read": [15, 16, 83, 85, 86, 87, 88, 91, 94, 100, 101, 102, 103, 106, 107, 110, 111, 116, 119, 120, 124, 125, 127, 129, 131, 133, 136, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 160, 161, 163, 164, 165, 166, 167, 168, 169, 178, 196, 197, 199, 203, 204, 205, 208, 209, 214, 227, 229, 242, 251, 278, 279, 280, 285, 287, 289, 290, 350, 353, 373, 375, 380, 382, 387, 388, 390, 392, 397, 398, 399, 400, 403, 407, 409, 411, 413, 414, 415, 420, 422, 433, 436, 439, 447, 448, 450, 453, 454, 455, 459, 464, 465, 466, 471, 473, 476, 477, 490, 493, 494, 495, 497, 502, 504, 507, 508, 509, 513, 518, 521, 532, 533, 535, 537, 538, 539, 541, 560, 592, 593, 598, 601, 603], "read_arf": 107, "read_bkg": 107, "read_builtin": [229, 459, 563], "read_covari": [227, 251], "read_dataset": 15, "read_fil": 416, "read_lazi": 441, "read_model": 15, "read_pha": 107, "read_rmf": 107, "read_xspec_model": 280, "readabl": [368, 398, 441, 465, 518], "reader": [414, 458, 467, 470, 473, 475, 478, 482, 486, 507], "readi": [397, 414, 423, 597], "readili": [407, 416], "readm": [390, 413], "readthedoc": [13, 128, 189, 204, 214, 280, 407, 430, 445, 495, 497, 507, 532, 546, 548], "real": [51, 387, 390, 418, 467, 468, 471, 478, 495, 500, 531], "realis": [392, 401, 413], "realist": 415, "realiti": 459, "realiz": [393, 597], "realli": [387, 394, 401, 404, 467, 482, 495], "rearrang": 407, "reason": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 387, 392, 393, 394, 395, 398, 399, 400, 402, 404, 406, 408, 413, 416, 447, 459, 477, 495, 504, 509, 531, 598], "reassign": [19, 20, 26, 221, 222, 223, 224, 225, 226, 227, 228, 229, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 248, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 275, 276, 277, 278, 279, 280, 281, 282], "rebas": [387, 401], "rebin": [127, 148, 402, 441, 454, 485, 490, 493], "rebuild": [16, 84, 90, 105, 126, 474], "recarrai": [87, 91, 157, 167], "receiv": [405, 407, 408, 410, 412], "recent": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 87, 91, 397, 401, 402, 403, 404, 407, 416, 421, 428, 442, 448, 474, 507, 509], "recip": [389, 403, 417, 425, 439, 487, 535, 536, 597, 600], "reco": [103, 106, 110, 111, 153, 186, 387, 393, 402, 411, 449, 450, 458, 493, 498, 509, 597], "reco_exposur": [124, 455], "reco_psf": [103, 106, 110, 111, 115, 498, 509], "recogn": [458, 467, 470, 473, 475, 482, 486, 507], "recognis": [398, 598], "recognit": 413, "recommend": [92, 100, 101, 102, 154, 155, 161, 166, 169, 183, 227, 251, 291, 326, 327, 386, 387, 388, 390, 394, 396, 404, 413, 418, 419, 421, 424, 431, 448, 464, 465, 466, 476, 493, 495, 498, 502, 508, 518, 535, 542, 547, 548, 598, 599, 602], "recomput": [127, 411, 471], "recompute_ul": 127, "recon_vers": [508, 521], "reconstruct": [83, 103, 104, 106, 109, 110, 111, 113, 114, 115, 124, 135, 136, 143, 150, 151, 153, 154, 155, 158, 168, 169, 182, 189, 387, 393, 398, 400, 436, 451, 458, 460, 464, 467, 470, 471, 473, 477, 482, 486, 493, 498, 500, 504, 509, 531, 533, 539, 540, 541, 548, 597], "recopsfmap": [162, 450, 453], "record": [83, 88, 387, 392, 393, 413, 507], "recov": 403, "rectangl": [224, 228, 237, 240, 253, 264, 265, 269, 275, 279, 347, 401, 479, 544], "rectangleskyregion": [207, 223, 224, 279, 346, 347, 401, 460, 491, 500, 544, 548], "rectangular": [479, 544, 548], "recurr": 402, "recurs": [354, 414], "red": [102, 227, 251, 293, 299, 377, 458, 459, 464, 467, 471, 473, 476, 491, 503, 504, 553, 554], "redesign": 396, "redistribut": 539, "redo": 487, "redshift": [19, 20, 229, 410, 521, 563], "redshift_scan": 459, "reduc": [6, 11, 15, 100, 103, 106, 110, 111, 164, 166, 169, 174, 184, 196, 197, 199, 201, 205, 208, 209, 393, 394, 396, 398, 399, 403, 406, 408, 413, 414, 420, 427, 432, 439, 448, 454, 457, 459, 460, 462, 465, 466, 467, 473, 474, 477, 482, 484, 485, 486, 489, 496, 500, 503, 505, 509, 513, 531, 535, 545, 548, 554, 555, 596, 597, 598], "reduce_data": 403, "reduce_over_ax": [196, 197, 199, 205, 208, 209, 470, 498, 509], "reduct": [6, 11, 172, 393, 399, 400, 403, 407, 408, 409, 414, 420, 433, 435, 453, 457, 471, 475, 476, 479, 487, 493, 496, 497, 500, 501, 503, 505, 513, 514, 520, 532, 535, 542, 544, 545, 596, 597], "ref": [83, 94, 103, 110, 124, 129, 136, 195, 204, 207, 227, 251, 388, 411, 468, 475, 479, 485, 492, 493, 494, 497, 499, 508, 521, 548, 586, 587, 588, 589, 590, 591, 598], "ref_templ": [16, 84, 90, 105, 126], "refactor": [387, 399, 401, 402, 403, 410, 429, 430, 431, 433, 434, 435, 436, 439, 441, 443, 445, 447], "refer": [16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 50, 52, 53, 57, 59, 63, 67, 69, 77, 83, 84, 85, 86, 87, 88, 90, 91, 94, 102, 103, 105, 106, 107, 110, 111, 113, 114, 115, 120, 125, 126, 127, 128, 130, 134, 137, 139, 140, 146, 147, 158, 172, 173, 176, 179, 180, 183, 184, 185, 188, 189, 191, 206, 207, 208, 209, 214, 221, 222, 225, 226, 229, 231, 232, 233, 234, 238, 239, 241, 242, 243, 244, 245, 248, 252, 254, 256, 257, 258, 259, 263, 266, 268, 270, 271, 272, 273, 276, 278, 280, 281, 284, 293, 295, 299, 300, 301, 302, 307, 308, 309, 311, 341, 342, 368, 369, 370, 371, 387, 388, 393, 395, 398, 399, 401, 403, 405, 410, 411, 412, 413, 414, 416, 418, 425, 439, 446, 447, 455, 459, 460, 462, 464, 465, 466, 467, 468, 470, 473, 474, 475, 476, 477, 478, 482, 484, 485, 486, 487, 489, 490, 492, 493, 494, 495, 498, 499, 501, 502, 504, 507, 508, 509, 518, 519, 521, 524, 531, 533, 546, 547, 548, 552, 553, 554, 555, 556, 557, 558, 559, 560, 563, 565, 567, 568, 569, 571, 572, 574, 575, 577, 578, 579, 580, 581, 582, 585, 586, 587, 588, 589, 590, 591, 592, 593, 596, 600, 602], "referenc": [387, 597], "reference_flux": [19, 20, 26, 221, 222, 225, 229, 231, 232, 233, 238, 244, 245, 248, 252, 254, 256, 257, 258, 263, 268, 270, 271, 272, 273, 276, 280], "reference_map": 499, "reference_model": [125, 127, 137, 146, 458, 459, 468, 474, 494], "reference_model_default": [125, 127], "reference_spectral_model": [125, 127], "reference_tim": [86, 88, 103, 106, 110, 111, 200, 206, 226, 234, 239, 241, 242, 243, 259, 266, 278, 281, 452, 453, 478, 486, 490, 498, 499, 593], "refit": 494, "reflect": [174, 178, 179, 180, 184, 193, 396, 401, 403, 406, 408, 420, 432, 439, 441, 444, 445, 448, 459, 460, 464, 465, 466, 475, 485, 489, 500, 506, 543, 597], "reflected_bkg_mak": 498, "reflectedbgestim": 403, "reflectedregion": 459, "reflectedregionsbackgroundmak": [174, 179, 433, 455, 460, 464, 466, 475, 485, 489, 498], "reflectedregionsfind": [178, 184, 431, 544], "refpix": [207, 208, 209], "refresh": [87, 91], "refus": 387, "reg": [103, 106, 110, 111, 500, 502], "reg_dataset": 493, "regard": [411, 414, 464], "regardless": [87, 91], "regeard": [451, 452, 453, 454, 455], "regi": [393, 398, 399, 403], "region": [6, 27, 83, 91, 100, 103, 106, 108, 110, 111, 116, 119, 124, 125, 127, 129, 131, 135, 140, 154, 155, 161, 166, 169, 171, 172, 173, 176, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 189, 190, 193, 195, 196, 197, 199, 204, 205, 207, 208, 209, 211, 214, 223, 224, 227, 228, 237, 240, 251, 253, 255, 264, 265, 267, 269, 275, 277, 279, 280, 283, 294, 311, 345, 346, 347, 348, 349, 380, 383, 384, 386, 388, 391, 393, 394, 402, 403, 404, 406, 409, 411, 416, 420, 431, 432, 433, 435, 439, 441, 442, 444, 445, 447, 448, 450, 452, 453, 455, 459, 465, 467, 468, 470, 471, 473, 474, 475, 476, 477, 478, 479, 484, 485, 486, 487, 489, 491, 492, 493, 494, 495, 499, 502, 504, 506, 507, 508, 509, 510, 518, 519, 521, 530, 531, 532, 533, 535, 542, 543, 545, 546, 547, 553, 554, 573, 596, 597, 599, 600, 601], "region_coord": 204, "region_ev": 487, "region_find": [178, 466], "region_io": 204, "region_map": [205, 209, 548], "region_map_1": 548, "region_map_2": 548, "region_mask": [83, 195, 207, 401, 464, 471, 475, 493, 498, 500, 519, 542, 544, 545], "region_nd_map": 205, "region_new": 348, "region_pix": 502, "region_weight": 207, "regionfind": [179, 180, 184], "regiongeom": [103, 106, 110, 111, 125, 129, 176, 183, 185, 186, 187, 189, 190, 205, 224, 228, 237, 240, 253, 264, 265, 267, 269, 275, 279, 401, 402, 409, 420, 435, 436, 439, 458, 460, 464, 466, 467, 475, 479, 485, 486, 487, 489, 492, 493, 494, 498, 508, 521, 531, 544, 547], "regionndmap": [26, 77, 107, 110, 111, 135, 177, 178, 183, 185, 196, 197, 199, 204, 208, 209, 224, 228, 237, 240, 242, 253, 264, 265, 269, 275, 276, 279, 384, 401, 420, 435, 436, 439, 442, 450, 453, 478, 494, 508, 531, 547, 593], "regions_ds9": 500, "regionsfind": [178, 179, 184, 441], "regist": 502, "registri": [55, 98, 121, 162, 174, 247, 249, 261, 262, 274, 408, 415, 432, 435, 436, 439, 448, 492, 502], "regress": 390, "regul": 413, "regular": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 195, 203, 207, 396, 415, 416, 441, 453, 482, 499, 500, 509], "regulargridinterpol": [326, 387], "regularis": 415, "regularli": [415, 510], "reichardt": 443, "reimplement": 398, "rej_sampl": 400, "reject": [391, 392, 400], "rel": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 67, 82, 87, 88, 91, 106, 107, 111, 134, 136, 150, 151, 152, 153, 156, 157, 158, 160, 163, 165, 167, 168, 195, 196, 197, 199, 204, 205, 206, 207, 208, 209, 264, 284, 298, 344, 402, 413, 439, 486, 490, 509, 559, 600], "rel_reduction_of_f_": 495, "relat": [11, 13, 28, 67, 83, 85, 212, 299, 393, 395, 398, 400, 401, 404, 406, 407, 408, 413, 416, 418, 435, 436, 448, 454, 493, 502, 507, 525, 595, 600], "relative_variability_amplitud": 490, "relative_variability_error": 490, "relative_variability_signific": 490, "relativist": 573, "releas": [11, 51, 65, 95, 389, 391, 392, 394, 395, 401, 404, 405, 414, 419, 421, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 460, 464, 465, 474, 484, 485, 489, 507, 509, 510, 513, 518, 519, 523, 535, 537, 538, 539, 541], "relev": [125, 292, 294, 370, 387, 393, 402, 407, 411, 416, 417, 464, 465, 468, 484, 485, 486, 489, 501, 503, 507, 509, 510, 518, 519, 531, 532, 602], "reli": [125, 387, 392, 393, 397, 398, 402, 406, 411, 412, 431, 436, 439, 450, 462, 473, 500, 523, 600], "reliabl": [390, 421, 471, 495, 500, 599], "remain": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 87, 91, 100, 392, 393, 394, 395, 400, 404, 413, 429, 448, 466, 501, 541], "remaind": 509, "remark": 466, "rememb": [387, 401, 495, 513, 598], "remi": [409, 410, 431, 432, 433, 434, 435, 436, 439, 450, 451, 452, 453, 454, 455], "remind": [201, 413, 468, 475, 494], "remnant": [28, 52, 460, 476, 502, 526], "remot": [390, 417], "remov": [13, 87, 91, 92, 96, 100, 166, 169, 181, 194, 195, 200, 203, 204, 207, 209, 251, 313, 390, 394, 395, 397, 398, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 416, 419, 428, 429, 430, 431, 432, 433, 434, 435, 436, 439, 440, 441, 443, 444, 445, 446, 447, 448, 451, 452, 453, 454, 455, 464, 471, 473, 479, 487, 493, 500, 503, 507, 508, 524, 535, 544], "remove_column": [87, 91], "remove_indic": [87, 91], "remove_row": [87, 91], "renam": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 87, 91, 127, 194, 195, 196, 197, 199, 200, 201, 204, 205, 207, 208, 209, 397, 398, 406, 407, 410, 427, 430, 432, 433, 434, 435, 439, 449, 450, 453, 598], "rename_ax": [194, 195, 196, 197, 199, 200, 204, 205, 207, 208, 209, 450], "rename_column": [87, 91, 127], "rename_dupl": [87, 91], "render": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 87, 91, 365, 387, 388, 395, 447], "renorm": [471, 542], "renormalis": 181, "reoptim": [128, 129, 132, 133, 214, 429, 459, 479, 484, 494, 495, 504, 518], "reorder": 455, "reorder_ax": [196, 197, 199, 205, 208, 209, 453], "reorgan": 439, "reorganis": 407, "repeat": [388, 473, 509], "repl": 387, "replac": [15, 87, 91, 100, 103, 106, 110, 111, 154, 155, 161, 166, 194, 195, 197, 200, 204, 205, 207, 209, 277, 290, 387, 397, 398, 401, 405, 408, 414, 416, 421, 430, 431, 433, 435, 436, 453, 454, 455, 487], "replace_axi": [194, 195, 204, 207], "replace_column": [87, 91], "repo": [388, 395, 417, 418, 427, 440], "report": [87, 390, 403, 417, 418, 425, 427, 441, 442, 447], "repositori": [87, 91, 387, 390, 392, 395, 397, 413, 417, 439, 448, 477, 510], "repres": [13, 16, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 47, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 70, 71, 72, 74, 75, 76, 77, 78, 79, 80, 84, 87, 90, 91, 103, 105, 106, 110, 111, 126, 195, 197, 199, 201, 202, 204, 206, 267, 314, 322, 332, 387, 398, 399, 400, 401, 405, 408, 409, 410, 411, 429, 453, 459, 478, 479, 492, 494, 495, 498, 499, 500, 502, 508, 521, 530, 531, 533, 537, 538, 539, 541, 547, 595, 596, 597, 602], "represent": [16, 19, 20, 26, 83, 84, 86, 87, 90, 91, 105, 126, 221, 222, 225, 229, 231, 232, 233, 238, 244, 245, 248, 252, 254, 256, 257, 258, 263, 268, 270, 271, 272, 273, 276, 280, 387, 401, 414, 429, 431, 453, 462, 492, 499, 502, 547], "reprocess": 393, "reproduc": [94, 102, 127, 388, 403, 404, 405, 407, 413, 414, 419, 421, 448, 498], "reproject": [182, 196, 197, 199, 205, 208, 209, 383, 387, 393, 401, 404, 411, 433, 440, 448, 450, 454, 499, 500], "reproject_by_imag": [196, 197, 199, 205, 208, 209, 454], "reproject_to_geom": [196, 197, 199, 205, 208, 209, 450], "request": [85, 125, 127, 388, 391, 392, 394, 395, 396, 397, 398, 399, 401, 407, 411, 412, 413, 415, 418, 426, 477, 494, 500, 533], "requir": [16, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 43, 44, 82, 84, 85, 87, 88, 90, 91, 95, 103, 105, 106, 110, 111, 112, 117, 126, 127, 130, 134, 136, 150, 151, 153, 156, 157, 158, 163, 165, 168, 173, 196, 197, 198, 199, 200, 201, 204, 205, 206, 208, 209, 210, 314, 362, 366, 367, 385, 392, 393, 394, 396, 397, 398, 399, 400, 401, 402, 403, 409, 410, 411, 412, 413, 415, 416, 417, 419, 421, 427, 432, 433, 434, 435, 440, 441, 443, 444, 445, 446, 449, 450, 451, 455, 459, 460, 466, 471, 474, 485, 486, 487, 489, 490, 493, 497, 499, 500, 502, 507, 519, 533, 535, 548], "require_ev": 82, "required_ax": [150, 151, 152, 153, 154, 155, 156, 157, 158, 160, 161, 163, 165, 166, 167, 168, 169, 497], "required_hdu": 442, "required_irf": [16, 82, 465, 466, 470, 471, 473, 518], "required_nam": [198, 200, 201, 206], "required_paramet": [157, 165, 167], "rerun": [402, 489], "resampl": [103, 106, 110, 111, 127, 148, 149, 154, 194, 195, 196, 197, 198, 199, 200, 204, 205, 207, 208, 209, 382, 439, 441, 490, 535], "resample_axi": [127, 194, 195, 196, 197, 199, 204, 205, 207, 208, 209, 382, 436, 485, 490], "resample_energy_axi": [103, 106, 110, 111, 154, 436, 441, 493], "resample_energy_edg": [464, 535], "resampled_energy_edg": 149, "resampled_map": [196, 197, 199, 205, 208, 209], "rescal": 498, "research": [403, 413], "reset": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 103, 106, 110, 111, 235, 277, 388, 436], "reset_data_cach": [103, 106, 110, 111], "reset_to_default": 235, "reshap": [196, 197, 199, 205, 208, 209, 458, 478, 497, 499], "resid": [409, 502], "residu": [72, 102, 103, 106, 110, 111, 173, 398, 399, 403, 431, 436, 442, 449, 455, 471, 493, 495, 508, 531, 544, 597], "resolut": [52, 153, 154, 158, 195, 207, 396, 398, 400, 401, 447, 453, 455, 492, 508], "resolv": [16, 84, 90, 105, 126, 388, 390, 397, 401, 402, 409, 410, 423, 429, 448, 455, 457, 483, 485, 488, 513, 544], "resort": 470, "resourc": [447, 513], "respect": [15, 16, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 47, 84, 87, 90, 91, 105, 107, 126, 127, 140, 195, 197, 207, 209, 291, 387, 397, 402, 413, 415, 436, 455, 468, 471, 486, 494, 499, 500, 509, 533, 548, 601], "respond": 413, "respons": [6, 109, 153, 154, 155, 158, 160, 161, 179, 387, 393, 394, 396, 398, 399, 400, 402, 403, 411, 413, 420, 446, 447, 448, 449, 460, 464, 465, 466, 467, 482, 486, 497, 498, 501, 507, 509, 510, 511, 513, 518, 519, 531, 532, 537, 539, 541, 596, 597], "rest": [26, 390, 404, 406, 492, 530], "restor": [19, 20, 26, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 218, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 248, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 275, 276, 277, 278, 279, 280, 281, 282, 501], "restore_statu": [218, 220, 227, 251, 504], "restore_valu": [218, 220, 227, 251], "restrict": [87, 91, 401, 473, 493, 500], "restructur": [388, 402, 403, 404, 406, 408, 414, 418, 433, 439, 440, 441, 442, 444, 453], "result": [16, 46, 74, 84, 86, 87, 90, 91, 92, 102, 103, 105, 106, 110, 111, 120, 122, 124, 125, 126, 127, 128, 129, 131, 132, 133, 136, 138, 139, 144, 146, 147, 158, 164, 166, 169, 182, 186, 187, 192, 194, 195, 196, 197, 199, 201, 204, 205, 207, 208, 209, 213, 214, 215, 216, 227, 251, 279, 290, 293, 314, 380, 386, 387, 388, 390, 392, 394, 396, 397, 398, 399, 400, 403, 405, 406, 409, 413, 415, 416, 421, 424, 431, 439, 441, 442, 447, 449, 453, 454, 455, 459, 462, 464, 466, 467, 473, 475, 477, 478, 482, 485, 486, 487, 490, 492, 493, 495, 499, 500, 503, 504, 508, 509, 510, 518, 519, 530, 533, 535, 548, 586, 597, 599, 600], "result1": 459, "result2": 501, "result_ecpl": 462, "result_joint": [460, 464, 473], "result_list": 380, "result_log_parabola": 462, "result_minuit": 495, "result_pwl": 462, "result_scipi": 495, "result_stack": 464, "results_joint": 474, "results_prior": 504, "results_simplex": 495, "results_t": 476, "retain": [492, 548], "retriev": [87, 91, 411, 413, 460, 462, 464, 499, 502, 503, 509, 519, 532, 547, 548], "return": [16, 19, 20, 26, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 43, 44, 45, 46, 47, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 77, 80, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 96, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 115, 116, 117, 118, 119, 120, 122, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 160, 161, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 214, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 248, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 275, 276, 277, 278, 279, 280, 281, 282, 283, 285, 288, 290, 291, 292, 293, 294, 295, 297, 298, 299, 300, 301, 302, 307, 308, 309, 311, 312, 313, 314, 316, 318, 320, 321, 325, 327, 332, 336, 338, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 353, 354, 357, 358, 359, 368, 369, 370, 371, 372, 375, 377, 378, 380, 382, 383, 393, 397, 398, 399, 400, 401, 402, 410, 411, 414, 415, 416, 432, 433, 436, 439, 442, 448, 450, 455, 464, 466, 471, 475, 479, 485, 486, 489, 492, 493, 494, 495, 498, 499, 500, 502, 504, 521, 525, 547, 548, 582, 600], "return_delta": 344, "return_diff": 344, "return_typ": 90, "return_unit": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40], "reus": [403, 436, 454], "reval": 555, "reveal": 416, "revers": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 50, 53, 87, 91, 92, 100, 200, 251, 499, 528], "reverse_lon_radec": 159, "revert": 455, "review": [390, 395, 396, 397, 400, 401, 403, 404, 406, 407, 408, 410, 411, 413, 415, 416, 449, 450, 547], "revis": 407, "revisit": [39, 40, 229], "rework": 434, "rewrit": [393, 396, 403, 434, 444, 445, 447, 448, 449, 598], "rewritten": [446, 449], "rf": 491, "rgb": [382, 384, 453, 458, 464], "rglob": [82, 477, 507], "rh0y1uyv": 502, "rhe": 185, "rho": [17, 18, 21, 22, 23, 24, 25, 27], "rho_": [17, 21, 22, 24, 25, 27, 52, 53], "rhul": [307, 309], "rich": [387, 403], "rid": 393, "right": [21, 24, 25, 27, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 50, 51, 52, 53, 87, 91, 103, 110, 125, 127, 136, 156, 233, 238, 258, 271, 272, 295, 298, 301, 375, 387, 401, 410, 413, 468, 475, 477, 484, 486, 507, 553, 554, 555, 563, 564, 567, 568, 570, 571, 575, 578, 579, 580, 581, 586, 587, 588, 590, 598, 599, 600, 601], "rightarrow": [559, 601], "rigid": 392, "ring": [106, 124, 171, 174, 181, 195, 196, 197, 393, 396, 403, 406, 420, 429, 433, 435, 445, 446, 447, 448, 457, 469, 472, 476, 500, 513, 534, 543, 546, 597], "ring2dkernel": [171, 181], "ring_background": [457, 471, 472], "ring_bkg_mak": 545, "ring_mak": 471, "ringbackgroundestim": [393, 447], "ringbackgroundmak": [171, 174, 433, 471, 498, 545], "rint": 455, "rise": [140, 241, 490, 588], "risk": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 390, 413], "rm": [153, 154, 158, 273, 410, 466, 495, 537, 539, 540, 541, 555, 586, 587, 588, 589, 590, 591], "rmax": [17, 18, 21, 22, 24, 25, 27], "rmf": [107, 108, 111, 153, 154, 155, 445, 464], "rmf_ob": 107, "rmffile": 107, "rmin": [17, 18, 21, 22, 24, 25, 27], "rng": [33, 42, 45, 46, 47, 103, 104, 106, 109, 110, 111, 155, 166, 169, 196, 197, 199, 205, 208, 209, 226, 234, 239, 241, 242, 243, 259, 266, 278, 281, 293, 336, 338, 341, 342, 343, 344, 387], "roadmap": [391, 394, 403, 412, 428, 449], "roberta": [447, 448], "robust": [387, 416, 448], "roellinghoff": 455, "roi": [67, 403, 492, 510, 597], "roi_max": 403, "role": [447, 498], "rolf": 427, "rolk": 597, "rolke2005": [597, 600], "roll": 508, "room": 397, "root": [19, 20, 26, 125, 126, 134, 136, 221, 222, 225, 229, 231, 232, 233, 238, 244, 245, 248, 252, 254, 256, 257, 258, 263, 268, 270, 271, 272, 273, 276, 280, 303, 306, 387, 405, 439, 468, 523, 533, 598, 600], "rosillo": 450, "rotang": 478, "rotat": [22, 51, 54, 179, 180, 184, 189, 228, 237, 240, 478, 544, 553, 554], "rough": [72, 403], "roughli": [120, 390, 395, 401, 403, 406, 407, 446, 471], "round": [87, 91, 194, 195, 196, 197, 199, 201, 204, 205, 207, 208, 209, 416, 464, 547], "round_to_edg": [194, 195, 204, 207], "round_trip": [16, 84, 90, 105, 126], "routin": 427, "row": [56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 87, 91, 144, 153, 322, 358, 381, 402, 411, 414, 450, 453, 464, 467, 478, 479, 489, 492, 495, 499, 507, 509, 510, 521, 530], "row_idx": [67, 87], "row_index": [56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 492], "row_label": 381, "row_specifi": [83, 87, 91], "royalblu": 487, "rpovid": 402, "rspec": [67, 492], "rst": [390, 392, 407, 413, 417, 418, 434, 439], "rtd": 448, "rtol": [134, 136, 362, 387], "rtol_ax": [150, 151, 152, 153, 156, 157, 158, 160, 163, 165, 167, 168, 195, 196, 197, 199, 204, 205, 207, 208, 209], "rtol_wc": 207, "ruben": 447, "rub\u00e9n": 447, "ruiz": [395, 403, 407, 428, 429, 430, 431, 432, 433, 434, 435, 436, 439, 441, 447, 448, 449], "rule": [87, 91, 267, 286, 325, 413, 499, 547], "run": [16, 82, 83, 84, 88, 90, 93, 102, 104, 105, 109, 120, 122, 123, 124, 126, 128, 129, 131, 132, 133, 134, 135, 136, 144, 145, 171, 172, 173, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 194, 195, 204, 207, 214, 334, 335, 361, 380, 386, 387, 388, 394, 395, 397, 400, 402, 403, 404, 407, 409, 411, 415, 416, 417, 418, 419, 424, 430, 431, 434, 435, 446, 448, 449, 453, 455, 458, 459, 460, 462, 467, 468, 470, 471, 473, 474, 475, 477, 482, 485, 486, 487, 489, 490, 491, 492, 493, 494, 495, 497, 498, 499, 500, 501, 502, 503, 504, 506, 507, 508, 509, 510, 513, 514, 516, 519, 521, 531, 532, 533, 535, 540, 542, 544, 545, 552, 553, 554, 555, 556, 557, 558, 559, 560, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 585, 586, 587, 588, 589, 590, 591, 592, 593, 596], "run_fit": [15, 465, 470, 518], "run_id": [83, 508, 521], "run_multiprocess": 535, "runner": [16, 351, 458, 460, 464, 465, 466, 467, 468, 470, 471, 473, 474, 475, 476, 477, 478, 479, 482, 484, 485, 486, 487, 489, 491, 492, 493, 495, 498, 499, 500, 501, 502, 504, 506, 507, 508, 509, 510, 518, 519, 521, 560, 563, 569, 586, 592, 593], "runtim": [396, 414, 417], "runtimewarn": [466, 471, 477, 489, 510, 586], "rx": 460, "rxj": 460, "rxj1713_2016_250gev": 560, "rzjf2ixi": 489, "r\u00e9gi": [393, 396, 397, 401, 402, 404, 406, 408, 409, 410, 411, 412, 414, 416, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 441, 442, 443, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455], "r\u00e9my": [405, 439, 441, 442, 450], "s0167947313003204": 138, "s10052": [307, 309], "s180": 299, "s2": 278, "s3": 278, "s_0": 535, "s_1": 535, "sad": 489, "safari": [87, 91], "safe": [99, 102, 103, 106, 110, 111, 154, 155, 161, 166, 169, 174, 182, 387, 399, 401, 413, 433, 435, 436, 450, 451, 452, 453, 455, 460, 464, 493, 500, 519, 531, 596], "safe_mask": [16, 103, 110, 465, 470, 471, 473, 518], "safe_mask_mak": [172, 460, 464, 487, 498, 509, 542, 544, 545], "safe_mask_mask": [466, 475, 485, 489, 498], "safemaskconfig": 16, "safemaskmak": [172, 174, 408, 433, 434, 439, 441, 442, 454, 460, 464, 466, 475, 482, 485, 487, 489, 498, 500, 509, 518, 519, 542, 543, 544, 545], "safer": 416, "safeti": 413, "sagittariu": [33, 38], "saha": 447, "sai": [74, 392, 406, 598], "said": [387, 392, 394, 509, 510, 598], "sake": [477, 495], "saldana": [229, 230, 453, 459, 563], "saldana21": 563, "samantha": 455, "same": [27, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 82, 87, 91, 95, 100, 103, 106, 107, 110, 111, 124, 136, 137, 138, 144, 145, 146, 147, 157, 158, 164, 165, 166, 167, 169, 170, 172, 193, 194, 195, 196, 197, 199, 200, 203, 204, 205, 207, 208, 209, 284, 293, 299, 307, 309, 380, 387, 390, 395, 397, 399, 401, 402, 406, 407, 408, 409, 410, 411, 412, 413, 415, 417, 418, 420, 421, 431, 432, 436, 439, 453, 462, 465, 466, 467, 473, 474, 477, 482, 484, 485, 487, 492, 493, 499, 500, 501, 502, 503, 504, 508, 509, 513, 518, 520, 531, 532, 533, 539, 547, 548, 598], "sampl": [47, 93, 104, 109, 136, 139, 155, 157, 163, 165, 166, 167, 169, 196, 197, 199, 205, 207, 208, 209, 226, 234, 239, 241, 242, 243, 259, 266, 278, 281, 291, 293, 302, 327, 336, 341, 342, 343, 344, 391, 399, 401, 402, 405, 407, 420, 427, 429, 431, 432, 435, 441, 448, 450, 453, 454, 455, 457, 466, 480, 481, 490, 493, 495, 513, 535], "sample_axi": 336, "sample_background": [104, 109, 433], "sample_coord": [155, 166, 169, 196, 197, 199, 205, 208, 209, 433, 435, 450], "sample_edisp": [104, 109], "sample_powerlaw": 406, "sample_psf": [104, 109], "sample_sourc": [104, 109], "sample_spher": [443, 602], "sample_tim": [226, 234, 239, 241, 242, 243, 259, 266, 278, 281, 439, 450, 455], "sampler": [104, 336, 396, 400, 416, 435, 439, 455, 477], "sampler_kwarg": 93, "samplerlikelihood": 416, "saniti": 447, "santiago": 455, "satisfi": [149, 173, 195, 196, 197, 314, 501, 535], "save": [15, 19, 20, 26, 100, 136, 211, 214, 221, 222, 223, 224, 225, 226, 227, 228, 229, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 248, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 275, 276, 277, 278, 279, 280, 281, 282, 387, 395, 403, 411, 415, 416, 455, 459, 473, 474, 477, 495, 500, 501, 509, 532], "savefig": [365, 424], "savez": 211, "saw": 425, "sbpl": [268, 410, 502], "sc": [87, 91], "scalar": [87, 91, 164, 195, 196, 197, 199, 205, 208, 209, 314, 406, 441, 452, 454, 499, 547], "scale": [17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 29, 52, 53, 67, 86, 88, 96, 100, 105, 106, 111, 120, 126, 128, 129, 132, 157, 173, 201, 205, 206, 207, 209, 217, 219, 221, 222, 224, 225, 228, 229, 231, 232, 233, 234, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 248, 252, 253, 254, 255, 256, 257, 258, 259, 263, 264, 265, 266, 268, 270, 271, 272, 273, 276, 278, 279, 280, 288, 291, 313, 326, 327, 328, 344, 368, 369, 370, 380, 388, 396, 401, 402, 405, 410, 416, 434, 439, 440, 448, 451, 452, 453, 455, 465, 468, 478, 479, 484, 485, 486, 490, 491, 492, 494, 497, 498, 499, 502, 503, 504, 507, 518, 521, 523, 563, 585, 586, 587, 588, 589, 590, 591, 592, 593], "scale10": [19, 20, 217, 219, 221, 224, 225, 228, 229, 231, 232, 233, 234, 237, 238, 239, 240, 241, 242, 243, 244, 245, 248, 255, 256, 257, 258, 259, 263, 264, 265, 266, 268, 271, 272, 273, 278, 279, 415, 573], "scale_method": [19, 20, 217, 219, 221, 224, 225, 228, 229, 231, 232, 233, 234, 237, 238, 239, 240, 241, 242, 243, 244, 245, 248, 255, 256, 257, 258, 259, 263, 264, 265, 266, 268, 271, 272, 273, 278, 279, 415, 573], "scale_to_local_dens": [17, 18, 21, 22, 24, 25, 27, 491], "scaled_featur": 313, "scaled_features_irf": [312, 313, 503], "scaledregulargridinterpol": [68, 229, 280, 434, 449], "scalespectralmodel": [128, 129, 132, 262, 410, 502], "scan": [19, 20, 95, 125, 127, 128, 129, 132, 133, 214, 217, 219, 221, 224, 225, 228, 229, 231, 232, 233, 234, 237, 238, 239, 240, 241, 242, 243, 244, 245, 248, 255, 256, 257, 258, 259, 263, 264, 265, 266, 268, 271, 272, 273, 278, 279, 402, 411, 439, 479, 485, 494, 504, 533, 535], "scan_max": [19, 20, 128, 132, 136, 217, 219, 221, 224, 225, 228, 229, 231, 232, 233, 234, 237, 238, 239, 240, 241, 242, 243, 244, 245, 248, 255, 256, 257, 258, 259, 263, 264, 265, 266, 268, 271, 272, 273, 278, 279, 459, 485, 494, 495], "scan_min": [19, 20, 128, 132, 136, 217, 219, 221, 224, 225, 228, 229, 231, 232, 233, 234, 237, 238, 239, 240, 241, 242, 243, 244, 245, 248, 255, 256, 257, 258, 259, 263, 264, 265, 266, 268, 271, 272, 273, 278, 279, 459, 494, 495], "scan_n_sigma": [19, 20, 217, 219, 221, 224, 225, 228, 229, 231, 232, 233, 234, 237, 238, 239, 240, 241, 242, 243, 244, 245, 248, 255, 256, 257, 258, 259, 263, 264, 265, 266, 268, 271, 272, 273, 278, 279, 495], "scan_n_valu": [19, 20, 128, 132, 133, 217, 221, 224, 225, 228, 229, 231, 232, 233, 234, 237, 238, 239, 240, 241, 242, 243, 244, 245, 248, 255, 256, 257, 258, 259, 263, 264, 265, 266, 268, 271, 272, 273, 278, 279, 459, 495, 504], "scan_prior": 504, "scan_valu": [19, 20, 214, 217, 219, 221, 224, 225, 228, 229, 231, 232, 233, 234, 237, 238, 239, 240, 241, 242, 243, 244, 245, 248, 255, 256, 257, 258, 259, 263, 264, 265, 266, 268, 271, 272, 273, 278, 279, 479, 495], "scargl": [402, 447, 490], "scatter": [24, 227, 251, 408, 468, 475, 489, 553, 554], "scenario": [87, 91, 392, 399, 409, 420, 494, 499, 502, 524, 599], "scengin": [87, 91], "schedul": 396, "schema": [15, 16, 84, 90, 105, 126, 403, 406], "schema_gener": [16, 84, 90, 105, 126], "schema_json": [16, 84, 90, 105, 126], "scheme": [16, 84, 90, 102, 105, 107, 108, 126, 195, 196, 197, 206, 242, 387, 393, 397, 399, 402, 409, 410, 411, 412, 414, 417, 432, 439, 450, 454, 478, 497, 499, 502, 535, 540, 546, 547, 549], "schiavo": 455, "school": [413, 416], "scienc": [138, 196, 197, 199, 208, 209, 394, 396, 400, 403, 404, 407, 413, 416, 425, 447, 448, 467, 474, 486, 499, 502, 503, 507, 508, 513, 523, 535, 571, 597, 598], "sciencedirect": 138, "scientif": [388, 394, 410, 413, 421], "scientist": 507, "scikit": [144, 387, 401, 404, 407, 448, 500], "scipi": [19, 20, 26, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 209, 214, 221, 222, 225, 229, 231, 232, 233, 238, 244, 245, 248, 252, 254, 256, 257, 258, 263, 268, 270, 271, 272, 273, 276, 278, 280, 312, 326, 367, 380, 386, 387, 390, 396, 401, 404, 405, 407, 413, 425, 429, 430, 431, 432, 444, 445, 446, 449, 451, 458, 460, 464, 465, 466, 467, 468, 470, 471, 473, 474, 475, 476, 477, 478, 479, 484, 485, 486, 487, 491, 492, 493, 494, 495, 498, 499, 500, 501, 502, 504, 506, 507, 508, 509, 510, 518, 519, 521, 595, 600], "scipy_mvn": 212, "scipy_opt": 495, "scitool": 576, "sclgf5mu": 489, "scope": [400, 401, 402, 403, 406, 414, 524], "scratch": [156, 387, 397, 401, 418, 473, 500], "screen": [87, 91, 499, 521], "script": [6, 87, 91, 127, 350, 351, 352, 353, 354, 355, 356, 388, 393, 394, 396, 398, 401, 403, 406, 407, 413, 417, 418, 428, 429, 430, 431, 439, 440, 444, 447, 448, 449, 450, 454, 457, 459, 464, 465, 468, 471, 473, 474, 475, 476, 477, 479, 484, 485, 486, 487, 489, 491, 492, 493, 494, 495, 498, 501, 504, 508, 515, 518, 534, 535, 598], "scriptabl": 414, "scutum": [33, 38], "sdc": 507, "sdist": 418, "seaborn": 535, "search": [87, 91, 292, 294, 351, 387, 388, 424, 447, 448, 465, 468, 475, 476, 491, 492, 503, 518, 519, 521, 523, 535, 598], "season": 407, "sebastian": 439, "sec": [54, 83, 94, 100, 132, 344, 495], "second": [42, 58, 83, 86, 87, 88, 91, 139, 153, 278, 302, 344, 347, 364, 368, 371, 376, 388, 395, 397, 399, 401, 405, 411, 413, 418, 433, 452, 459, 464, 465, 468, 471, 473, 475, 476, 477, 478, 479, 484, 485, 486, 487, 489, 491, 493, 494, 495, 498, 499, 501, 504, 507, 513, 518, 520, 530, 599, 602], "secpl": [271, 272, 273, 410, 502], "section": [19, 87, 91, 293, 295, 301, 387, 388, 390, 392, 401, 403, 404, 406, 410, 413, 416, 418, 436, 449, 467, 473, 477, 478, 482, 486, 492, 494, 495, 500, 501, 502, 521, 524, 535, 548, 596, 598, 602, 603], "secur": 500, "sed": [121, 124, 125, 126, 127, 129, 136, 205, 229, 386, 403, 405, 411, 420, 427, 446, 462, 468, 479, 485, 492, 493, 494, 518, 521, 597], "sed_fit": [457, 462, 463], "sed_fitting_gammacat_fermi": 407, "sed_typ": [19, 20, 26, 125, 126, 127, 221, 222, 225, 229, 231, 232, 233, 238, 244, 245, 248, 252, 254, 256, 257, 258, 263, 268, 270, 271, 272, 273, 276, 280, 439, 458, 459, 462, 464, 465, 466, 474, 475, 479, 484, 485, 486, 492, 494, 519, 521, 533, 535, 573, 597], "sed_type_init": [71, 74, 75, 78, 125, 126, 127], "sed_type_plot_default": [125, 127], "sedov": [52, 53], "sedov_taylor_begin": [52, 53, 529], "sedov_taylor_end": [52, 53, 529], "seds_20230803": 64, "sedtypeenum": 126, "see": [11, 13, 19, 20, 26, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 50, 66, 82, 83, 85, 87, 89, 91, 95, 99, 100, 101, 102, 103, 106, 110, 111, 120, 122, 124, 127, 128, 129, 132, 135, 136, 138, 150, 151, 152, 153, 154, 155, 156, 157, 158, 160, 161, 163, 165, 166, 167, 168, 169, 172, 179, 181, 182, 189, 194, 195, 197, 199, 201, 202, 204, 207, 209, 214, 217, 218, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 231, 232, 233, 234, 237, 238, 239, 240, 241, 242, 243, 244, 245, 248, 251, 252, 253, 254, 255, 256, 257, 258, 259, 263, 264, 265, 266, 267, 268, 270, 271, 272, 273, 276, 277, 278, 279, 280, 285, 295, 301, 304, 305, 311, 314, 322, 338, 354, 377, 378, 386, 387, 388, 390, 391, 392, 394, 395, 396, 397, 400, 401, 402, 403, 404, 405, 407, 408, 412, 413, 414, 415, 416, 418, 420, 421, 423, 424, 426, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 444, 445, 446, 447, 448, 449, 450, 458, 459, 460, 462, 464, 465, 466, 467, 468, 470, 471, 473, 474, 475, 476, 477, 479, 482, 484, 485, 486, 489, 490, 491, 492, 493, 494, 495, 497, 498, 499, 500, 501, 502, 503, 504, 506, 507, 509, 513, 518, 519, 521, 523, 531, 532, 535, 545, 546, 548, 576, 580, 581, 595, 597, 598, 599, 600, 602, 603], "seed": [33, 42, 45, 46, 47, 103, 104, 106, 109, 110, 111, 155, 166, 169, 196, 197, 199, 205, 208, 209, 226, 234, 239, 241, 242, 243, 252, 259, 266, 278, 281, 293, 336, 337, 338, 341, 342, 343, 344, 387, 447, 477, 573], "seed_photon_field": [252, 573], "seem": [387, 394, 395, 398, 404, 408, 523], "seen": [387, 401, 408, 460, 468, 474, 485, 499, 502, 508, 597], "select": [16, 82, 83, 86, 87, 88, 89, 91, 92, 96, 100, 103, 106, 110, 111, 124, 176, 183, 196, 197, 198, 199, 201, 206, 208, 209, 218, 220, 227, 251, 267, 277, 290, 383, 384, 390, 397, 399, 400, 401, 402, 403, 407, 409, 411, 414, 420, 422, 428, 431, 439, 443, 458, 464, 466, 467, 470, 471, 473, 474, 476, 477, 478, 482, 486, 487, 493, 494, 495, 498, 499, 500, 503, 506, 507, 509, 510, 513, 520, 521, 533, 535, 539, 540, 544, 596, 598], "select_energi": [83, 532], "select_from_geom": [227, 251], "select_map_mask": 429, "select_mask": [83, 227, 251, 439, 501], "select_nested_model": [453, 455], "select_obs_id": [91, 475], "select_observ": [91, 96, 403, 485, 489, 503, 519, 535], "select_offset": [83, 477, 510, 532], "select_paramet": [83, 89, 487, 532], "select_phas": 397, "select_rad_max": 83, "select_rang": 91, "select_region": [83, 89, 227, 251, 401, 431, 439, 477, 478, 487, 501, 521, 532], "select_row_subset": 83, "select_sky_box": 401, "select_sky_circl": [91, 401], "select_tim": [83, 86, 88, 92, 100, 397, 411, 433, 478, 485, 489, 532], "select_time_rang": 91, "selected_energi": 532, "selected_ev": 83, "selected_id": 532, "selected_obs_t": [91, 503, 519], "selected_offset": 532, "selected_region": 532, "selected_tim": 532, "selection_al": [120, 136], "selection_mask": [227, 251, 501], "selection_opt": [16, 120, 122, 123, 124, 128, 129, 131, 132, 133, 135, 136, 439, 455, 459, 464, 465, 468, 470, 471, 473, 474, 475, 479, 484, 485, 486, 487, 494, 500, 509, 518], "selection_vari": 91, "selectionconfig": 16, "selectionslid": [473, 482, 499, 518, 519], "self": [16, 19, 20, 26, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 83, 84, 86, 87, 90, 91, 105, 125, 126, 127, 204, 205, 221, 222, 225, 229, 231, 232, 233, 238, 244, 245, 248, 252, 254, 256, 257, 258, 263, 267, 268, 270, 271, 272, 273, 276, 280, 387, 388, 398, 399, 401, 404, 410, 411, 414, 415, 416, 435, 471, 499, 502], "semant": [401, 412], "semi": 228, "semiaxi": [228, 237, 240, 553, 554, 555], "semilogi": [19, 20, 26, 221, 222, 225, 229, 231, 232, 233, 238, 244, 245, 248, 252, 254, 256, 257, 258, 263, 268, 270, 271, 272, 273, 276, 280, 458, 478], "semimajor": 492, "semiminor": 492, "semver": 412, "send": 417, "sens": [387, 394, 397, 401, 403, 406, 407, 408, 471], "sensibl": 503, "sensit": [121, 124, 125, 126, 127, 128, 129, 132, 133, 134, 135, 136, 284, 307, 309, 400, 407, 434, 436, 446, 447, 453, 454, 457, 461, 463, 482, 507, 513, 523, 540], "sensitivity_estim": 458, "sensitivity_t": 458, "sensitivityestim": [121, 428, 434, 458], "sent": 392, "sentenc": [392, 407, 413], "sep": [204, 396, 404, 410, 426, 502], "separ": [17, 18, 21, 22, 24, 25, 27, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 67, 71, 72, 74, 75, 76, 78, 79, 80, 83, 91, 195, 204, 207, 308, 376, 387, 388, 393, 394, 395, 396, 399, 400, 401, 402, 403, 406, 407, 408, 409, 416, 435, 439, 445, 447, 448, 452, 453, 467, 471, 473, 475, 482, 486, 492, 501, 502, 503, 524, 532, 540, 541, 553, 554, 558, 559, 573, 597], "septemb": [396, 404, 406, 407, 412], "sequenc": [87, 91, 92, 100, 103, 110, 150, 151, 152, 153, 155, 156, 157, 158, 160, 163, 165, 166, 167, 168, 169, 194, 195, 196, 197, 199, 200, 201, 202, 204, 205, 206, 207, 208, 209, 218, 227, 251, 314, 418], "sequenti": [393, 464, 519], "seri": [87, 91, 127, 293, 298, 344, 396, 401, 402, 439, 455, 490], "serial": [16, 84, 87, 90, 91, 99, 100, 102, 103, 105, 106, 110, 111, 126, 393, 398, 402, 403, 408, 411, 432, 435, 439, 441, 448, 450, 451, 452, 453, 454, 499, 502, 504, 523], "serialis": [20, 103, 106, 110, 111, 221, 222, 225, 227, 229, 231, 232, 233, 235, 236, 238, 242, 244, 245, 246, 248, 250, 251, 252, 254, 256, 257, 258, 260, 263, 268, 270, 271, 272, 273, 275, 276, 277, 278, 279, 280, 282, 399, 401, 403, 406, 408, 409, 410, 431, 433, 435, 439, 444, 447, 449, 450, 452, 453, 454, 504, 518, 535, 548, 593, 596], "serializ": [16, 84, 90, 105, 126], "serialize_as_ani": [16, 84, 90, 105, 126], "serialize_method": [87, 91], "serializiaton": 399, "serilis": [26, 223, 224, 226, 228, 234, 237, 239, 240, 241, 243, 253, 255, 259, 264, 265, 266, 267, 269, 276, 281], "sersic": 410, "sersic2d": 410, "sersicspatialmodel": 410, "serv": [87, 91, 387, 392, 399, 403, 411, 416, 418, 441, 491, 539], "server": [409, 420, 422, 513], "servic": 447, "session": [390, 403, 413, 534], "set": [15, 16, 19, 20, 23, 26, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 82, 84, 87, 90, 91, 95, 101, 102, 103, 104, 105, 106, 107, 109, 110, 111, 115, 122, 124, 125, 126, 127, 128, 129, 131, 132, 136, 138, 147, 153, 155, 166, 169, 172, 173, 176, 182, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 212, 214, 217, 218, 219, 220, 221, 224, 225, 227, 228, 229, 231, 232, 233, 234, 237, 238, 239, 240, 241, 242, 243, 244, 245, 248, 251, 252, 253, 255, 256, 257, 258, 259, 263, 264, 265, 266, 268, 269, 271, 272, 273, 275, 278, 279, 280, 290, 302, 334, 336, 387, 388, 393, 396, 397, 399, 400, 402, 403, 404, 405, 407, 411, 412, 413, 414, 415, 418, 420, 422, 435, 441, 443, 445, 447, 450, 453, 454, 455, 458, 459, 460, 461, 464, 466, 467, 468, 470, 473, 475, 476, 477, 478, 479, 484, 485, 487, 492, 493, 494, 495, 498, 500, 502, 503, 504, 507, 509, 510, 513, 519, 523, 531, 532, 535, 544, 546, 547, 548, 573, 595, 598, 601, 602], "set_by_coord": [196, 197, 199, 205, 208, 209, 499, 547], "set_by_idx": [196, 197, 199, 205, 208, 209, 499, 547], "set_by_pix": [196, 197, 199, 205, 208, 209, 547], "set_label": 489, "set_lim": [217, 219], "set_log": 16, "set_model": [15, 409, 465, 470, 484, 518], "set_models_paramet": 409, "set_parameter_factor": [218, 220], "set_parameters_bound": [227, 251], "set_prior": [251, 415], "set_prop_cycl": 458, "set_slice_arg": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40], "set_subcovari": 212, "set_titl": [459, 460, 464, 468, 471, 475, 487, 491, 495, 497, 498, 501, 544, 555, 559, 563], "set_unit": [462, 494, 535], "set_xlabel": [458, 459, 460, 464, 467, 487, 489, 495, 503, 504], "set_xlim": [462, 464, 465, 474, 487, 537, 563], "set_xscal": [19, 20, 26, 221, 222, 225, 229, 231, 232, 233, 238, 244, 245, 248, 252, 254, 256, 257, 258, 263, 268, 270, 271, 272, 273, 276, 280], "set_xtick": [555, 559], "set_ylabel": [458, 459, 460, 464, 479, 487, 489, 491, 495, 503, 563], "set_ylim": [458, 462, 464, 465, 466, 484, 487, 537, 563], "set_yscal": [19, 20, 26, 221, 222, 225, 229, 231, 232, 233, 238, 244, 245, 248, 252, 254, 256, 257, 258, 263, 268, 270, 271, 272, 273, 276, 280, 479, 491, 537], "set_ytick": [555, 559], "setdefault": 203, "seterr": 387, "setlevel": 475, "setter": [388, 415, 433, 439, 493], "settl": 413, "setup": [13, 389, 390, 391, 394, 399, 400, 404, 407, 415, 445, 449, 513, 598], "setuptool": [440, 598], "sever": [87, 91, 178, 392, 393, 394, 401, 402, 403, 406, 411, 414, 416, 433, 434, 435, 439, 442, 451, 452, 453, 467, 474, 492, 507, 508, 509, 535, 598, 600], "seyfert": 299, "sf": [308, 600], "sgr": 521, "shade": [197, 205, 209, 495, 596], "shall": 390, "shape": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 100, 102, 103, 106, 110, 111, 112, 117, 124, 125, 129, 130, 136, 143, 144, 145, 151, 153, 156, 194, 195, 196, 197, 199, 200, 202, 204, 205, 207, 208, 209, 212, 240, 291, 314, 327, 343, 398, 401, 405, 437, 452, 455, 462, 464, 466, 468, 470, 475, 478, 479, 485, 489, 490, 492, 493, 494, 497, 498, 499, 500, 502, 507, 508, 521, 533, 547, 548, 549, 555, 559], "shape_ax": [195, 207], "share": [196, 197, 199, 203, 205, 208, 209, 387, 392, 399, 402, 406, 409, 421, 439, 441, 453, 473, 474, 500, 501, 535, 598], "sharp": [241, 377, 378, 553], "she": [397, 402], "shear": 401, "sheet": [423, 535, 603], "shell": [52, 53, 80, 264, 265, 398, 403, 410, 420, 422, 457, 502, 549, 551, 559, 561, 598], "shell2": [264, 457, 502, 549, 551, 561], "shell2d": 52, "shell2spatialmodel": [261, 265, 502, 559], "shellspatialmodel": [80, 261, 264, 410, 439, 502, 558], "sherpa": [108, 111, 153, 200, 201, 204, 205, 214, 295, 301, 386, 387, 396, 404, 405, 407, 408, 419, 420, 422, 429, 443, 444, 445, 446, 448, 455, 458, 460, 464, 465, 466, 467, 468, 470, 471, 473, 474, 475, 476, 477, 478, 479, 484, 485, 486, 487, 491, 492, 493, 495, 498, 499, 500, 501, 502, 504, 506, 507, 508, 509, 510, 518, 519, 521, 548, 571, 599], "sherpa_opt": 495, "shift": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 279, 424, 455], "shim": 394, "shini": 372, "ship": [394, 395, 404, 428, 446, 467, 482, 487, 502, 535], "shock": [50, 52, 53, 528], "short": [387, 388, 391, 392, 396, 401, 404, 407, 410, 413, 436, 485, 490, 508, 535, 536, 597, 600, 603], "short_observ": [485, 489], "shortcut": [82, 424, 441], "shorten": 439, "shorter": [299, 387, 388, 401, 407, 412, 436, 467, 485, 502, 598], "should": [16, 19, 20, 26, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 83, 84, 87, 90, 91, 101, 103, 105, 106, 109, 110, 111, 114, 116, 119, 125, 126, 127, 128, 132, 136, 139, 140, 141, 142, 148, 154, 155, 158, 164, 166, 169, 181, 186, 187, 192, 194, 195, 196, 197, 199, 201, 203, 204, 205, 207, 208, 209, 217, 221, 222, 223, 224, 225, 226, 227, 228, 229, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 248, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 275, 276, 277, 278, 279, 280, 281, 282, 307, 309, 314, 362, 376, 377, 378, 388, 390, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 407, 408, 410, 412, 413, 414, 416, 417, 418, 420, 422, 423, 424, 429, 431, 453, 466, 473, 476, 477, 478, 486, 487, 493, 495, 497, 498, 499, 500, 501, 502, 504, 507, 509, 531, 533, 535, 540, 542, 547, 598, 599, 601, 602], "shoulder": 283, "shouldn": [83, 387], "show": [11, 82, 87, 91, 129, 130, 131, 157, 176, 242, 384, 387, 388, 390, 399, 401, 402, 406, 407, 415, 416, 418, 428, 429, 433, 441, 446, 447, 448, 453, 454, 458, 459, 460, 462, 464, 465, 466, 467, 468, 470, 471, 473, 474, 477, 478, 479, 482, 484, 485, 486, 487, 489, 490, 491, 492, 493, 494, 495, 497, 498, 499, 500, 501, 502, 504, 506, 507, 508, 509, 510, 511, 513, 514, 518, 519, 520, 521, 527, 528, 529, 535, 537, 538, 539, 541, 542, 544, 546, 553, 563, 582, 596, 598, 600, 603], "show_dtyp": [87, 91], "show_in_brows": [87, 91, 475], "show_in_notebook": [87, 91], "show_nam": [87, 91], "show_progress_bar": 535, "show_row_index": [87, 91], "show_unit": [87, 91], "showcas": 504, "shower": [443, 507, 540], "shown": [19, 20, 26, 83, 164, 204, 205, 221, 222, 225, 229, 231, 232, 233, 238, 244, 245, 248, 252, 254, 256, 257, 258, 263, 268, 270, 271, 272, 273, 276, 280, 382, 387, 394, 404, 405, 406, 414, 415, 417, 418, 433, 435, 460, 464, 468, 473, 475, 476, 477, 478, 485, 486, 487, 490, 498, 501, 502, 503, 504, 507, 519, 532], "showwarn": 387, "si": [83, 195, 204, 207, 227, 251, 283, 548], "side": [16, 84, 90, 105, 126, 207, 209, 292, 294, 387, 401], "sider": [597, 602], "sidereal_tim": 388, "siejkowski": 448, "sig": [380, 599, 600, 601], "sight": 523, "sigma": [19, 20, 30, 32, 48, 49, 124, 125, 126, 127, 128, 132, 133, 136, 144, 145, 153, 154, 158, 164, 165, 166, 169, 212, 214, 217, 219, 221, 224, 225, 228, 229, 231, 232, 233, 234, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 248, 255, 256, 257, 258, 259, 263, 264, 265, 266, 268, 271, 272, 273, 278, 279, 290, 292, 294, 300, 307, 309, 410, 415, 459, 468, 475, 476, 482, 484, 490, 494, 495, 500, 502, 504, 518, 533, 539, 554, 570, 587, 600], "sigma1": 31, "sigma2": 31, "sigma_": [212, 554], "sigma_1": [31, 49, 157, 497], "sigma_10tev": [410, 502], "sigma_1tev": [410, 502], "sigma_2": [31, 49, 157, 497], "sigma_3": [157, 497], "sigma_err": 476, "sigma_gauss": 240, "sigma_laplac": 240, "sigma_m": 554, "sigma_nod": 502, "sigma_to_t": 600, "sigmav": 523, "sign": [217, 219, 292, 294, 390, 413, 435, 450, 533, 600], "signal": [83, 103, 106, 109, 110, 111, 181, 209, 266, 292, 294, 311, 411, 458, 464, 465, 471, 474, 484, 500, 506, 518, 523, 538, 542, 544, 597, 599, 600, 601], "signif_avg": 521, "signific": [77, 120, 124, 125, 126, 127, 128, 134, 135, 136, 138, 147, 148, 290, 292, 294, 298, 307, 309, 377, 378, 385, 392, 393, 394, 395, 402, 403, 407, 408, 411, 413, 435, 436, 444, 447, 448, 453, 454, 455, 457, 458, 464, 465, 469, 472, 473, 474, 475, 476, 484, 487, 489, 490, 492, 494, 495, 509, 513, 518, 521, 533, 535, 596, 597, 598, 603], "significance_lima": 435, "significance_map": [471, 473], "significance_map_off": 471, "significance_mask": 500, "significance_mask_inv": 500, "significancemapestim": 435, "significantli": [439, 459, 477, 507, 597], "signoff": 390, "silent": [450, 455], "silvia": 431, "simeq": 53, "similar": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 87, 91, 378, 387, 390, 399, 400, 401, 402, 403, 406, 407, 408, 411, 439, 453, 466, 490, 494, 499, 503, 504, 521, 531, 539, 598], "similarli": [393, 395, 411, 414, 416, 439, 492, 495, 497, 499, 500, 502, 548], "simlat": 293, "simon": [452, 453, 454], "simpifi": 396, "simpl": [50, 52, 120, 144, 224, 228, 237, 240, 253, 264, 265, 269, 275, 279, 283, 387, 388, 399, 400, 401, 402, 403, 406, 411, 414, 415, 429, 439, 443, 447, 448, 453, 458, 460, 462, 464, 465, 466, 467, 470, 473, 487, 489, 490, 494, 495, 499, 500, 503, 510, 518, 519, 521, 525, 535, 596, 597, 598], "simple_norm": 209, "simple_rebin_lc": 402, "simplefilt": 535, "simpler": [184, 395, 400, 401, 409], "simplest": [458, 464, 490], "simplex": [214, 495], "simpli": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 86, 87, 91, 173, 214, 218, 220, 387, 401, 402, 411, 420, 421, 422, 450, 453, 458, 459, 460, 475, 493, 500, 501, 502, 521, 548, 598, 600], "simplic": [474, 477, 495, 502, 504, 508], "simplif": [398, 410, 450], "simplifi": [136, 203, 394, 396, 398, 405, 411, 429, 432, 433, 434, 436, 439, 443, 450, 459, 462, 468, 540, 601], "simu": [482, 486, 504], "simul": [45, 83, 88, 93, 103, 106, 109, 110, 111, 114, 155, 166, 169, 293, 344, 397, 400, 403, 407, 414, 415, 420, 427, 431, 433, 435, 441, 444, 446, 447, 448, 453, 454, 455, 457, 461, 463, 470, 473, 475, 480, 481, 483, 487, 488, 501, 504, 507, 513, 525, 540, 596], "simulate_3d": [407, 448, 457, 481, 482], "simulate_dataset": [429, 433, 434], "simulate_observ": 93, "simulated_d": 466, "simulated_data": 93, "simulated_model": 466, "simultan": [415, 486, 493, 502, 504, 531], "sin": [553, 554, 555, 591], "sinc": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 51, 87, 91, 197, 207, 362, 387, 388, 393, 397, 401, 403, 404, 405, 406, 407, 411, 413, 414, 415, 418, 439, 449, 450, 451, 452, 453, 454, 455, 459, 466, 471, 473, 485, 486, 489, 493, 501, 502, 504, 507, 509, 569, 599, 602], "sine": [266, 398, 457, 549, 584, 594], "sine_model": 591, "sinetemporalmodel": [274, 502, 591], "singl": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 67, 82, 87, 88, 89, 91, 93, 95, 124, 128, 129, 132, 136, 154, 155, 166, 168, 169, 172, 176, 178, 183, 186, 187, 192, 194, 195, 196, 197, 199, 201, 204, 205, 207, 208, 209, 227, 251, 387, 393, 394, 397, 399, 400, 401, 402, 403, 404, 408, 409, 414, 415, 416, 420, 427, 429, 434, 435, 447, 453, 454, 458, 464, 466, 468, 470, 471, 484, 486, 492, 493, 498, 499, 501, 504, 509, 510, 518, 521, 531, 533, 545, 547, 548, 595, 597], "singleobscubemak": 393, "singleobsimagemak": 393, "singleton": 338, "sinha": [399, 402, 428, 429, 430, 431, 432, 433, 434, 435, 436, 438, 439, 441, 442, 447, 448, 449, 450, 451, 452, 453, 454, 455], "sink": 404, "sinu": [266, 502], "sinusoid": [266, 591], "sipocz": [404, 429, 431, 433, 435, 444, 445, 446, 447, 448, 449], "sip\u0151cz": [450, 455], "sit": 390, "site": [351, 418, 458, 460, 464, 465, 466, 467, 468, 470, 471, 473, 474, 475, 476, 477, 478, 479, 482, 484, 485, 486, 487, 489, 491, 492, 493, 495, 498, 499, 500, 501, 502, 504, 506, 507, 508, 509, 510, 518, 519, 521, 560, 569, 586, 598], "situat": [401, 402, 404, 540], "six": [406, 412], "size": [19, 20, 26, 46, 47, 67, 72, 80, 87, 88, 91, 103, 104, 106, 109, 110, 111, 113, 114, 115, 116, 119, 130, 136, 139, 150, 151, 153, 154, 155, 156, 157, 158, 161, 163, 164, 165, 166, 167, 169, 171, 172, 178, 179, 180, 183, 184, 185, 193, 195, 196, 197, 199, 202, 204, 205, 207, 208, 209, 212, 221, 222, 224, 225, 228, 229, 231, 232, 233, 237, 238, 240, 244, 245, 248, 252, 253, 254, 255, 256, 257, 258, 263, 264, 265, 267, 268, 269, 270, 271, 272, 273, 275, 276, 277, 278, 279, 280, 302, 336, 337, 341, 342, 343, 344, 375, 387, 395, 398, 400, 401, 420, 422, 452, 454, 458, 466, 471, 473, 477, 485, 487, 492, 498, 499, 500, 502, 507, 508, 509, 510, 521, 531, 546, 553, 554, 602], "skeleton": 403, "sketch": 403, "skill": [390, 416, 424], "skimag": 448, "skip": [16, 82, 84, 90, 105, 126, 164, 375, 388, 390, 399, 401, 407, 446, 489, 501], "skip_miss": [82, 447], "sklearn": 387, "sky": [6, 13, 41, 57, 68, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 83, 88, 96, 103, 106, 109, 110, 111, 120, 144, 154, 155, 166, 169, 189, 195, 196, 197, 199, 204, 205, 207, 208, 209, 227, 251, 267, 279, 283, 285, 316, 320, 321, 345, 347, 349, 374, 386, 387, 388, 400, 406, 420, 429, 431, 445, 446, 448, 459, 464, 465, 467, 468, 471, 482, 486, 487, 492, 499, 502, 507, 508, 513, 516, 518, 519, 520, 521, 523, 530, 531, 532, 535, 540, 541, 544, 546, 548, 553, 554, 558, 559, 560, 596, 597], "sky_circl": [91, 96, 485, 489, 503, 519], "sky_model": [70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 116, 119, 402, 459, 484, 485, 489, 492, 501, 502, 519, 565], "sky_model_pntpwl": 477, "sky_reg": 491, "sky_reg_rec": 491, "sky_region": 89, "skycood": 398, "skycoord": [56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 83, 85, 87, 88, 91, 94, 96, 103, 106, 110, 111, 113, 114, 125, 127, 129, 131, 154, 155, 161, 166, 169, 179, 180, 182, 184, 186, 187, 189, 190, 192, 193, 195, 196, 197, 199, 202, 204, 205, 207, 208, 209, 210, 223, 224, 227, 228, 237, 240, 251, 253, 255, 264, 265, 267, 269, 275, 277, 279, 312, 313, 346, 347, 363, 383, 388, 398, 401, 411, 414, 458, 460, 464, 466, 467, 471, 475, 476, 477, 478, 479, 482, 484, 485, 486, 487, 489, 491, 492, 493, 497, 498, 499, 500, 501, 502, 503, 506, 507, 508, 509, 519, 521, 535, 539, 544, 546, 548, 557, 596, 603], "skycoord_from_t": 401, "skycoord_to_pixel_scale_angl": 401, "skycoordconfig": 16, "skycub": [393, 406, 445, 446, 447, 448], "skydiffusecub": [398, 410, 430, 435, 436, 448], "skydiffusemap": [398, 430], "skydir": [16, 83, 103, 106, 110, 111, 112, 117, 155, 166, 176, 194, 195, 196, 197, 199, 204, 205, 207, 208, 209, 464, 465, 466, 470, 471, 473, 475, 476, 477, 478, 482, 484, 487, 491, 493, 497, 498, 499, 500, 502, 508, 509, 518, 519, 542, 544, 545, 546, 548, 554, 555, 556, 557, 603], "skydirfunct": 523, "skydisk": 430, "skydiskelong": 398, "skyellips": [429, 430, 431, 432], "skygaussian": 429, "skygaussianelong": 398, "skyimag": [393, 406, 445, 446, 447, 448], "skyimagelist": 445, "skymap": [196, 197, 199, 205, 208, 209, 401, 444, 445, 478], "skymap_band": [478, 593], "skymap_region": 478, "skymask": 446, "skymodel": [67, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 102, 103, 106, 110, 111, 116, 119, 125, 127, 133, 136, 137, 146, 173, 214, 227, 247, 251, 285, 290, 398, 399, 400, 402, 408, 410, 411, 429, 433, 434, 435, 439, 448, 454, 459, 460, 462, 464, 465, 466, 467, 468, 470, 473, 474, 475, 476, 477, 478, 482, 484, 485, 486, 487, 489, 492, 493, 494, 495, 501, 504, 508, 518, 519, 530, 531, 533, 552, 553, 554, 555, 557, 558, 559, 560, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 585, 586, 587, 588, 589, 590, 591, 592, 593, 595], "skypointsourc": 432, "skyregion": [100, 103, 106, 110, 111, 129, 154, 155, 161, 166, 169, 179, 180, 184, 199, 204, 205, 209, 227, 251, 345, 348, 401, 460, 477, 479, 500, 502, 539, 544, 548], "skyspatialmodel": [398, 448], "slack": [389, 390, 394, 410, 417, 423, 425, 428, 429, 598], "slew": 95, "slice": [83, 87, 91, 100, 101, 103, 106, 110, 111, 122, 125, 127, 150, 151, 152, 153, 154, 155, 156, 157, 158, 160, 161, 163, 164, 165, 166, 167, 168, 169, 194, 195, 196, 197, 198, 199, 200, 201, 204, 205, 206, 207, 208, 209, 214, 223, 224, 228, 237, 240, 253, 255, 264, 265, 269, 275, 277, 279, 303, 393, 436, 476, 479, 485, 493, 494, 507, 547], "slice_by_coord": [125, 127, 454], "slice_by_energi": [100, 103, 106, 110, 111, 125, 127, 277, 436, 493], "slice_by_idx": [103, 106, 110, 111, 125, 127, 150, 151, 152, 153, 154, 155, 156, 157, 158, 160, 161, 163, 164, 165, 166, 167, 168, 169, 194, 195, 196, 197, 199, 200, 204, 205, 207, 208, 209, 436, 448, 450, 479, 485, 494, 499, 508], "slice_by_tim": [125, 127], "sliced_ax": 200, "sliced_geom": [194, 195, 204, 207], "sliced_lc": 485, "slicesampl": 416, "slide": [396, 468, 492], "slider": 499, "sliderstyl": [473, 482, 499, 518, 519], "slightli": [120, 201, 464], "slope": [27, 430], "slow": [87, 91, 214, 394, 403, 465, 495, 518, 519], "slower": [87, 91, 197, 387, 395, 405], "slowest": 418, "small": [378, 387, 393, 395, 401, 403, 404, 407, 409, 414, 416, 418, 428, 429, 430, 431, 432, 433, 434, 435, 436, 438, 439, 441, 442, 444, 445, 446, 447, 448, 449, 450, 453, 454, 455, 484, 485, 499, 504, 507, 508, 509, 510, 554, 558, 559, 597, 598], "smaller": [27, 155, 166, 169, 184, 195, 196, 197, 199, 205, 208, 209, 380, 390, 429, 448, 477, 485, 490, 495, 499, 504, 554], "smallest": [19, 20, 26, 221, 222, 225, 229, 231, 232, 233, 238, 244, 245, 248, 252, 254, 256, 263, 268, 270, 271, 272, 273, 276, 280, 468], "smooth": [103, 106, 110, 111, 120, 130, 131, 144, 196, 197, 199, 205, 208, 209, 227, 228, 251, 268, 379, 382, 439, 444, 445, 446, 448, 449, 457, 471, 473, 475, 479, 482, 487, 493, 498, 499, 501, 508, 518, 519, 521, 549, 553, 562, 583, 603], "smooth_kernel": [103, 106], "smooth_radiu": [103, 106], "smoothbrokenpowerlawspectralmodel": [221, 262, 410, 434, 435, 502, 578], "sn": [45, 50, 52, 53], "sn_rate": [45, 525], "snippet": [388, 407, 535], "snr": [44, 50, 53, 67, 508, 528, 529], "snr_model": 529, "snrcat": [443, 492], "snrtruelovemcke": [50, 528, 529], "so": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 83, 87, 91, 95, 102, 106, 111, 128, 130, 132, 133, 137, 146, 149, 154, 155, 161, 166, 169, 193, 196, 197, 199, 201, 205, 208, 209, 214, 217, 219, 240, 279, 290, 362, 370, 377, 378, 387, 388, 390, 392, 393, 394, 395, 398, 399, 400, 401, 402, 404, 405, 406, 407, 408, 409, 410, 411, 414, 416, 417, 419, 420, 422, 424, 429, 431, 439, 449, 451, 452, 455, 460, 464, 466, 468, 470, 475, 476, 477, 482, 484, 491, 492, 494, 495, 499, 500, 502, 504, 507, 508, 509, 513, 519, 535, 542, 544, 548, 555, 559, 598, 599, 600, 601], "social": 413, "soft": 299, "softwar": [196, 197, 199, 208, 209, 401, 402, 404, 413, 414, 418, 499], "solar": 52, "sole": [397, 413], "solid": [194, 195, 204, 207, 224, 228, 237, 240, 253, 264, 265, 269, 275, 279, 283, 403, 427, 429, 430, 431, 448, 471, 498, 499, 507, 538, 544, 597], "solid_angl": [194, 195, 204, 207, 499, 548], "solut": [19, 20, 26, 52, 137, 146, 153, 221, 222, 225, 229, 231, 232, 233, 244, 245, 248, 252, 254, 256, 257, 258, 263, 268, 270, 271, 272, 273, 276, 278, 280, 388, 390, 392, 394, 395, 400, 401, 403, 404, 405, 407, 409, 411, 415, 416, 421, 494, 531, 533, 535, 601], "solv": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 395, 397, 398, 399, 400, 441, 535], "some": [13, 16, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 72, 77, 82, 84, 87, 90, 91, 105, 126, 182, 203, 314, 322, 390, 392, 393, 394, 395, 396, 401, 402, 403, 404, 405, 406, 407, 408, 411, 412, 413, 414, 416, 418, 420, 421, 422, 423, 424, 425, 427, 429, 431, 439, 440, 442, 444, 446, 447, 448, 453, 458, 460, 462, 464, 466, 468, 470, 471, 474, 475, 477, 478, 479, 482, 484, 485, 486, 487, 489, 490, 491, 492, 493, 494, 498, 499, 501, 502, 504, 507, 508, 519, 521, 523, 524, 531, 532, 535, 540, 545, 547, 597, 598, 599, 600, 602], "some_class": 387, "some_map": 164, "some_map_convolv": 164, "somehow": [395, 401, 406], "someon": [390, 392, 407], "someth": [87, 91, 387, 388, 389, 390, 392, 395, 401, 404, 405, 407, 418, 420, 422, 467, 492, 548, 598], "sometim": [19, 20, 83, 217, 221, 224, 225, 228, 229, 231, 232, 233, 234, 237, 238, 239, 240, 241, 242, 243, 244, 245, 248, 255, 256, 257, 258, 259, 263, 264, 265, 266, 268, 271, 272, 273, 278, 279, 365, 387, 390, 394, 401, 407, 418, 420, 495, 535, 597, 602], "somewhat": [404, 507], "somewher": [404, 418], "soon": [390, 401, 418], "sort": [82, 83, 87, 91, 102, 144, 350, 355, 356, 387, 404, 430, 455, 521], "sort_kei": [350, 355, 356], "sortedarrai": [87, 91], "sourc": [6, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 311, 312, 313, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 387, 388, 390, 392, 395, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 409, 410, 411, 413, 418, 420, 425, 427, 429, 433, 434, 439, 440, 445, 446, 447, 448, 453, 454, 455, 457, 459, 461, 462, 463, 465, 466, 467, 469, 470, 471, 472, 473, 474, 479, 480, 481, 482, 483, 484, 485, 487, 488, 489, 490, 491, 493, 494, 495, 496, 497, 498, 499, 501, 502, 503, 505, 506, 508, 509, 510, 513, 516, 518, 519, 520, 523, 524, 529, 531, 533, 535, 540, 543, 544, 549, 552, 553, 554, 555, 556, 557, 558, 559, 560, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 585, 586, 587, 588, 589, 590, 591, 592, 593, 595, 596, 597, 599, 600], "source1": 502, "source2": 502, "source_1": [398, 403], "source_2": 398, "source_42": 403, "source_fermi_3fgl": 462, "source_fermi_3fhl": 462, "source_gammacat": 462, "source_irf_model": 398, "source_librari": 507, "source_model": 576, "source_nam": [56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 492, 521], "source_name_alia": 56, "source_name_kei": 56, "source_po": [471, 475, 498], "source_population_model": [407, 433], "source_posit": [458, 476, 503], "sourcebackground": 398, "sourcecatalog": [57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 401, 439, 492, 500, 521, 530], "sourcecatalog1lhaaso": [55, 70, 492], "sourcecatalog2fhl": [55, 71, 492, 530], "sourcecatalog2hwc": [55, 72, 492, 530], "sourcecatalog2pc": [55, 492], "sourcecatalog3fgl": [55, 74, 462, 492, 530], "sourcecatalog3fhl": [55, 75, 227, 251, 462, 492, 501, 521, 530], "sourcecatalog3hwc": [55, 76, 492, 530], "sourcecatalog3pc": [55, 492], "sourcecatalog4fgl": [55, 78, 441, 459, 492, 530], "sourcecataloggammacat": [55, 79, 462, 492, 530], "sourcecataloghgp": [55, 80, 81, 492, 530], "sourcecataloglargescalehgp": 67, "sourcecatalogobject": [70, 79, 80, 81, 492, 530], "sourcecatalogobject1lhaaso": 57, "sourcecatalogobject2fhl": 58, "sourcecatalogobject2hwc": 59, "sourcecatalogobject2pc": 60, "sourcecatalogobject3fgl": 61, "sourcecatalogobject3fhl": 62, "sourcecatalogobject3hwc": 63, "sourcecatalogobject3pc": 64, "sourcecatalogobject4fgl": 65, "sourcecatalogobjectfermibas": [71, 74, 75, 78], "sourcecatalogobjectfermipcbas": [73, 77], "sourcecatalogobjectgammacat": 66, "sourcecatalogobjecthgp": [67, 81, 428, 492], "sourcecatalogobjecthgpscompon": 67, "sourcecatalogobjecthwcbas": [72, 76], "sourceevalu": 398, "sources_flux_map": 468, "sourcetempl": 398, "south": [477, 478, 507], "south_z20_50h": [82, 151, 155, 156, 157, 166, 458, 467, 482, 486, 497, 507], "south_z40_50h": 507, "southaz": 507, "southern": 507, "space": [87, 91, 103, 106, 110, 111, 206, 209, 275, 276, 293, 307, 309, 325, 343, 386, 387, 397, 403, 409, 416, 487, 493, 495, 499, 547, 573, 582], "span": 503, "spars": [195, 196, 197, 199, 204, 207, 208, 209, 416, 430, 439, 447, 478, 499], "sparsif": 411, "sparsifi": [196, 197, 199, 208, 209], "spatail": 136, "spatial": [1, 46, 48, 67, 70, 71, 72, 74, 75, 76, 78, 79, 80, 81, 83, 103, 106, 110, 111, 113, 114, 125, 127, 136, 150, 151, 152, 153, 154, 155, 156, 157, 158, 160, 161, 163, 164, 165, 166, 167, 168, 169, 173, 178, 194, 195, 196, 197, 199, 200, 202, 204, 205, 207, 208, 209, 218, 220, 223, 224, 227, 228, 235, 237, 240, 251, 253, 255, 261, 264, 265, 267, 269, 275, 277, 279, 290, 380, 382, 387, 393, 396, 399, 400, 401, 403, 405, 406, 411, 420, 428, 429, 431, 432, 433, 434, 436, 439, 447, 448, 450, 453, 454, 455, 457, 459, 462, 465, 467, 468, 470, 473, 474, 476, 477, 478, 479, 482, 485, 486, 487, 489, 492, 493, 494, 496, 498, 501, 505, 508, 511, 513, 518, 523, 524, 531, 533, 535, 536, 546, 547, 561, 595, 596, 597], "spatial_bin_s": [113, 114], "spatial_bin_size_min": [113, 114], "spatial_model": [70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 116, 119, 136, 173, 228, 235, 267, 277, 290, 402, 433, 459, 468, 473, 475, 476, 477, 478, 482, 484, 485, 489, 492, 493, 501, 502, 508, 519, 552, 553, 554, 555, 556, 557, 558, 559, 560], "spatial_model_point": 477, "spatial_model_registri": 502, "spatial_par": 410, "spatial_typ": 410, "spatial_width": [113, 114], "spatial_width_max": [113, 114], "spatialbackground": 398, "spatialcircleconfig": 16, "spatialconst": 398, "spatialgaussian": 398, "spatialmodel": [70, 71, 72, 74, 75, 76, 78, 79, 80, 173, 223, 224, 228, 235, 237, 240, 253, 255, 264, 265, 267, 275, 277, 279, 398, 410, 433, 448, 452, 492, 502, 519, 523, 530, 549, 595], "spatialtempl": 398, "spatiamodel": 164, "speak": 495, "spec": [80, 111, 387, 401, 444, 473, 478, 492, 507, 519], "spec_model_tru": 487, "special": [87, 91, 240, 387, 397, 399, 401, 402, 410, 413, 414, 428, 455, 470, 492, 493, 494, 501, 502], "specialis": [401, 407], "specif": [15, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 77, 83, 85, 86, 87, 91, 94, 103, 106, 111, 125, 127, 150, 151, 152, 153, 154, 155, 156, 157, 158, 160, 161, 163, 165, 166, 167, 168, 169, 172, 186, 187, 192, 196, 197, 198, 199, 201, 205, 206, 207, 208, 209, 214, 242, 277, 290, 376, 386, 387, 388, 390, 392, 397, 399, 401, 402, 403, 404, 405, 406, 408, 411, 412, 413, 414, 416, 418, 420, 421, 433, 436, 439, 441, 450, 451, 453, 459, 460, 461, 464, 466, 467, 471, 473, 474, 479, 482, 486, 487, 493, 495, 496, 497, 499, 500, 503, 504, 510, 513, 521, 531, 532, 533, 535, 537, 538, 539, 541, 546, 547, 548, 602], "specifi": [16, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 82, 84, 87, 88, 90, 91, 92, 96, 102, 103, 105, 106, 110, 111, 120, 122, 125, 126, 127, 128, 130, 132, 133, 150, 151, 152, 153, 154, 155, 156, 157, 158, 160, 161, 163, 165, 166, 167, 168, 169, 171, 182, 194, 195, 196, 197, 199, 200, 201, 203, 204, 205, 207, 208, 209, 227, 242, 251, 290, 314, 316, 320, 325, 374, 397, 404, 409, 412, 416, 421, 432, 435, 439, 455, 459, 466, 470, 471, 473, 476, 479, 482, 493, 494, 495, 497, 498, 499, 501, 502, 507, 519, 531, 533, 546], "spectra": [26, 110, 111, 128, 133, 149, 214, 262, 283, 290, 393, 396, 398, 400, 402, 406, 410, 416, 427, 431, 444, 448, 459, 460, 466, 467, 474, 478, 484, 486, 487, 493, 494, 495, 498, 502, 504, 523, 531, 533, 535, 597], "spectral": [1, 19, 20, 26, 52, 53, 66, 67, 69, 70, 71, 72, 74, 75, 76, 78, 79, 80, 102, 103, 106, 110, 111, 120, 124, 125, 127, 128, 129, 132, 135, 136, 143, 164, 166, 169, 173, 218, 220, 221, 222, 225, 227, 229, 231, 232, 233, 235, 238, 242, 244, 245, 248, 249, 251, 252, 254, 256, 257, 258, 262, 263, 267, 268, 270, 271, 272, 273, 276, 277, 278, 280, 283, 284, 299, 341, 393, 396, 398, 399, 400, 401, 402, 403, 405, 406, 408, 409, 411, 420, 428, 430, 431, 432, 433, 434, 435, 436, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 453, 454, 455, 457, 463, 467, 468, 470, 473, 476, 477, 478, 479, 482, 484, 485, 486, 487, 489, 492, 493, 494, 495, 496, 498, 500, 501, 504, 505, 506, 507, 508, 511, 518, 519, 520, 523, 524, 530, 531, 533, 534, 535, 536, 542, 543, 544, 552, 553, 554, 555, 556, 557, 558, 559, 560, 579, 580, 581, 583, 585, 586, 587, 588, 589, 590, 591, 592, 593, 595, 596, 597, 599], "spectral_analysi": [457, 463, 464], "spectral_analysis_hli": [457, 463, 465], "spectral_analysis_rad_max": [457, 463, 466], "spectral_cub": 440, "spectral_index": [19, 20, 26, 52, 221, 222, 225, 229, 231, 232, 233, 238, 244, 245, 248, 252, 254, 256, 257, 258, 263, 268, 270, 271, 272, 273, 276, 280], "spectral_index_error": [19, 20, 26, 221, 222, 225, 229, 231, 232, 233, 238, 244, 245, 248, 252, 254, 256, 257, 258, 263, 268, 270, 271, 272, 273, 276, 280, 453], "spectral_irf_model": 398, "spectral_model": [66, 67, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 102, 110, 111, 116, 119, 120, 124, 129, 133, 135, 136, 143, 164, 166, 169, 173, 214, 227, 235, 249, 251, 267, 277, 290, 402, 405, 409, 410, 411, 415, 436, 455, 458, 459, 460, 462, 464, 466, 467, 468, 473, 474, 475, 476, 477, 478, 479, 482, 484, 485, 486, 487, 489, 492, 493, 494, 495, 501, 502, 504, 508, 519, 521, 533, 542, 552, 553, 554, 555, 557, 558, 559, 560, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 585, 586, 587, 588, 589, 590, 591, 592, 593], "spectral_model1": 486, "spectral_model2": 486, "spectral_model_pwl": 477, "spectral_model_registri": 502, "spectral_par": 410, "spectral_point": 403, "spectral_typ": 410, "spectralbackground": 398, "spectralbackgroundmodel": 399, "spectralcompoundmodel": 398, "spectralconst": 398, "spectralevalu": 398, "spectralexponentialcutoffpowerlaw3fgl": 406, "spectralgaussian": [398, 431], "spectralmodel": [19, 20, 71, 74, 75, 78, 79, 80, 102, 120, 124, 125, 127, 129, 135, 143, 164, 166, 169, 173, 221, 222, 225, 227, 229, 231, 232, 233, 235, 238, 244, 245, 248, 251, 252, 254, 256, 257, 258, 263, 267, 268, 271, 272, 273, 276, 277, 280, 283, 398, 399, 402, 405, 411, 436, 439, 446, 453, 455, 492, 502, 519, 521, 530, 549, 595], "spectralregion": 401, "spectraltempl": 398, "spectroscopi": [455, 457, 483, 485, 488, 513, 544], "spectrum": [19, 20, 26, 72, 76, 98, 100, 102, 103, 106, 107, 110, 111, 125, 127, 132, 135, 140, 166, 169, 174, 178, 182, 183, 196, 197, 199, 208, 209, 221, 222, 225, 229, 231, 232, 233, 238, 244, 245, 248, 252, 254, 256, 257, 258, 263, 268, 270, 271, 272, 273, 276, 280, 283, 284, 293, 299, 384, 393, 398, 399, 402, 403, 406, 407, 408, 420, 430, 431, 432, 433, 435, 439, 441, 444, 445, 446, 447, 448, 450, 452, 455, 457, 460, 461, 462, 463, 465, 473, 474, 477, 478, 479, 486, 491, 492, 493, 500, 502, 507, 508, 513, 518, 521, 523, 531, 535, 540, 548, 564, 567, 568, 570, 571, 575, 576, 578, 579, 580, 581, 598], "spectrum_analysi": 464, "spectrum_dataset": [149, 399, 464, 487, 493], "spectrum_dataset_1": 399, "spectrum_dataset_2": 399, "spectrum_dataset_empti": [487, 498], "spectrum_dataset_mak": [487, 498], "spectrum_dataset_on_off": 487, "spectrum_fitting_with_sherpa": 407, "spectrum_mak": 458, "spectrum_simul": [407, 457, 463, 467], "spectrumanalysisiact": [403, 432, 446], "spectrumdataset": [98, 99, 100, 103, 106, 111, 132, 135, 149, 177, 178, 182, 183, 235, 408, 430, 431, 432, 433, 434, 435, 436, 439, 442, 458, 460, 464, 466, 467, 475, 485, 486, 487, 489, 495, 498, 504, 544, 599], "spectrumdatasetmak": [174, 433, 439, 458, 460, 464, 466, 467, 475, 485, 486, 487, 489, 498, 544], "spectrumdatasetonoff": [98, 106, 107, 108, 110, 133, 135, 149, 177, 178, 214, 290, 384, 402, 430, 431, 432, 434, 435, 451, 452, 453, 458, 459, 460, 464, 465, 467, 474, 475, 484, 487, 489, 493, 494, 495, 498, 504, 531, 533, 599], "spectrumdatasetonoffstack": 432, "spectrumdatasetsonoff": 399, "spectrumenergygroup": 447, "spectrumevalu": 435, "spectrumextract": [402, 430, 433, 446], "spectrumfit": [430, 446, 447, 448], "spectrumobserv": [399, 430, 446], "spectrumobservationlist": [430, 445], "spectrumobservationstack": 445, "spectrumonoffdataset": 402, "spectrumresult": 430, "spectrumsimul": [431, 445, 448], "spectrumstack": 447, "spectrumstat": 431, "specutil": 401, "speed": [136, 314, 390, 416, 421, 431, 433, 441, 447, 448, 455, 495], "spell": [392, 535], "spend": [400, 407], "spent": [394, 498], "sphere": [47, 342, 427, 429, 547, 553, 554, 557], "spherepointpick": 342, "spheric": [47, 387, 429, 547, 596], "sphericalcircleskyregion": [406, 487, 521], "sphinx": [390, 394, 407, 418, 430, 434, 441, 447, 448, 450, 454, 455, 458, 459, 460, 462, 464, 465, 466, 467, 468, 470, 471, 473, 474, 475, 476, 477, 478, 479, 482, 484, 485, 486, 487, 489, 490, 491, 492, 493, 494, 495, 497, 498, 499, 500, 501, 502, 503, 504, 506, 507, 508, 509, 510, 513, 516, 518, 519, 521, 549, 552, 553, 554, 555, 556, 557, 558, 559, 560, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 585, 586, 587, 588, 589, 590, 591, 592, 593], "sphinx_gallery_conf": 418, "sphinx_gallery_thumbnail_numb": 388, "sphinxext": 388, "spill": 498, "spin": [50, 51, 54, 431, 527], "spir": [429, 448], "spiral": [22, 33, 34, 38, 45, 443], "spiralarm": [33, 38, 45, 447, 525], "spiralarm_index": [33, 34, 38], "spirit": 413, "split": [19, 20, 87, 91, 92, 116, 119, 125, 127, 196, 197, 199, 205, 208, 209, 217, 221, 224, 225, 228, 229, 231, 232, 233, 234, 237, 238, 239, 240, 241, 242, 243, 244, 245, 248, 255, 256, 257, 258, 259, 263, 264, 265, 266, 268, 271, 272, 273, 278, 279, 393, 395, 397, 399, 401, 402, 406, 408, 410, 416, 420, 436, 454, 485, 502, 524, 603], "split_by_axi": [196, 197, 199, 205, 208, 209], "split_template_model": [116, 119], "sporad": 414, "spot": 387, "spread": [82, 88, 101, 157, 166, 169, 387, 409, 436, 458, 468, 497, 540, 597], "spring": [397, 449], "sprint": [395, 396, 400, 403, 404, 405, 406, 408], "spuriou": 144, "sqrt": [19, 20, 30, 31, 32, 67, 102, 103, 106, 110, 111, 120, 124, 125, 127, 130, 136, 196, 197, 199, 201, 205, 208, 209, 212, 217, 221, 224, 225, 228, 229, 231, 232, 233, 234, 237, 238, 239, 240, 241, 242, 243, 244, 245, 248, 255, 256, 257, 258, 259, 263, 264, 265, 266, 268, 271, 272, 273, 278, 279, 291, 300, 326, 327, 328, 399, 460, 464, 468, 471, 473, 479, 482, 487, 490, 492, 495, 498, 499, 501, 508, 518, 519, 521, 533, 554, 555, 558, 559, 570, 600], "sqrt_space": [406, 433], "sqrt_t": [120, 124, 125, 127, 136, 144, 149, 292, 294, 380, 411, 424, 436, 460, 464, 465, 468, 471, 473, 475, 487, 492, 493, 494, 500, 509, 518, 521, 533, 598, 600, 603], "sqrt_ts_min": [149, 464], "sqrt_ts_threshold_ul": [71, 74, 75, 78, 124, 125, 126, 127, 129, 136, 468, 479, 484, 485, 492, 493, 494, 518, 521], "squar": [17, 18, 21, 22, 24, 25, 27, 46, 103, 106, 125, 126, 153, 154, 155, 161, 166, 169, 172, 193, 207, 209, 277, 297, 402, 405, 436, 457, 496, 500, 504, 505, 510, 513, 523, 533, 547, 598, 599, 600, 601], "squash": [155, 194, 195, 198, 200, 201, 204, 206, 207, 453, 458, 471, 493, 499], "squeez": [458, 497], "sr": [150, 151, 152, 163, 194, 195, 204, 207, 224, 279, 283, 458, 467, 470, 473, 475, 482, 486, 492, 493, 497, 499, 502, 507, 508, 540, 552, 560], "src": [400, 459, 476, 531], "src_above_bkg": 476, "src_event": [477, 478], "src_posit": [477, 478], "srcmap": [195, 196, 197, 199, 208, 209, 499], "ssc": [58, 60, 61, 62, 64, 65, 101, 252, 407, 576], "ssc_model": 252, "ssh": 390, "st": [53, 495, 508], "st3s6sox": 468, "stabil": [19, 20, 217, 221, 224, 225, 228, 229, 231, 232, 233, 234, 237, 238, 239, 240, 241, 242, 243, 244, 245, 248, 255, 256, 257, 258, 259, 263, 264, 265, 266, 268, 271, 272, 273, 278, 279, 412, 482], "stabl": [11, 87, 91, 204, 214, 314, 394, 395, 396, 403, 404, 407, 412, 417, 418, 419, 421, 433, 434, 435, 441, 446, 448, 450, 495, 532], "stack": [16, 83, 86, 92, 100, 102, 103, 105, 106, 110, 111, 124, 125, 127, 137, 146, 154, 155, 161, 166, 169, 172, 196, 197, 198, 199, 204, 205, 208, 209, 212, 218, 220, 277, 357, 387, 399, 402, 403, 409, 414, 429, 432, 433, 436, 439, 444, 445, 450, 451, 453, 455, 459, 460, 465, 470, 474, 475, 484, 487, 493, 495, 498, 503, 504, 518, 519, 532, 533, 542, 545, 596, 597], "stack_dataset": [172, 487, 498], "stack_reduc": [100, 149, 214, 432, 460, 464, 466, 473, 474, 475, 487, 493, 495, 533], "stacked_dataset": [475, 476], "stacked_fit": 464, "stacked_on_off": 471, "stackedobscubemak": 393, "stackedobsimagemak": 393, "stackoverflow": 354, "stage": [390, 403, 471, 473, 486, 493, 531, 597], "stai": [399, 417], "stand": 392, "standard": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 42, 86, 87, 91, 96, 197, 209, 214, 236, 284, 293, 313, 369, 370, 387, 388, 390, 392, 396, 398, 399, 400, 403, 405, 411, 413, 414, 416, 424, 431, 432, 448, 454, 458, 459, 465, 467, 471, 474, 476, 478, 482, 485, 486, 489, 491, 495, 499, 502, 503, 504, 507, 510, 513, 518, 520, 531, 534, 539, 547, 596, 597, 598], "standard_broadcast": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40], "standard_scal": [96, 312, 503], "standardis": [359, 360, 372, 447], "standardise_unit": [359, 373], "standpoint": 387, "stapel": [454, 455], "star": [36, 40, 229], "starmap": [330, 334, 335], "start": [16, 53, 83, 86, 88, 89, 91, 92, 94, 100, 132, 144, 206, 226, 227, 234, 239, 241, 242, 243, 251, 259, 266, 278, 281, 387, 388, 390, 392, 394, 395, 396, 397, 400, 401, 403, 404, 412, 413, 415, 416, 417, 418, 422, 423, 424, 425, 427, 432, 441, 444, 445, 446, 447, 448, 453, 455, 457, 458, 459, 460, 462, 464, 465, 466, 468, 470, 471, 473, 475, 476, 477, 478, 479, 484, 485, 486, 487, 489, 490, 491, 492, 494, 499, 502, 507, 508, 509, 513, 518, 521, 522, 535, 539, 596], "start_po": [129, 347, 479], "startswith": 387, "stat": [6, 100, 102, 125, 127, 128, 129, 132, 133, 136, 214, 215, 217, 219, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 380, 387, 399, 407, 415, 416, 418, 424, 431, 433, 434, 435, 436, 439, 445, 448, 449, 450, 454, 455, 460, 462, 464, 465, 466, 468, 471, 473, 474, 475, 476, 479, 485, 487, 489, 490, 494, 495, 504, 508, 518, 519, 533, 598, 599, 600], "stat_arrai": [99, 102, 103, 106, 110, 111, 415, 455], "stat_contour": 214, "stat_kwarg": 102, "stat_max": [292, 294], "stat_nul": [125, 127, 128, 129, 132, 133, 136, 292, 294, 454, 468, 479, 485, 494, 533], "stat_per_bin": 399, "stat_profil": [214, 459, 495, 504, 535], "stat_scan": [102, 125, 127, 128, 129, 132, 133, 136, 137, 146, 214, 291, 455, 459, 464, 485, 494, 495, 504, 533], "stat_sum": [99, 100, 102, 103, 106, 110, 111, 415, 416, 452, 453, 473, 486, 493, 501, 535], "stat_sum_no_prior": 416, "stat_surfac": [214, 436, 535], "stat_typ": [99, 102, 103, 106, 110, 111, 434, 464, 473, 486, 493, 501], "state": [16, 45, 47, 206, 214, 387, 393, 397, 399, 403, 407, 409, 411, 416, 459, 465, 518, 540, 563], "stateless": 414, "statement": [387, 390, 394, 452, 454, 524], "static": [17, 21, 22, 24, 25, 27, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 101, 104, 107, 108, 109, 120, 124, 125, 127, 128, 129, 132, 133, 136, 157, 165, 176, 182, 183, 195, 196, 197, 199, 205, 206, 208, 209, 221, 223, 224, 225, 226, 228, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 248, 249, 256, 257, 258, 259, 264, 265, 266, 268, 271, 272, 273, 278, 280, 281, 282, 384, 395, 398, 418, 430, 447], "staticmethod": [398, 410, 415, 416, 502, 504], "stationari": 416, "statist": [6, 19, 20, 26, 79, 99, 100, 102, 103, 106, 110, 111, 124, 125, 127, 128, 129, 132, 133, 136, 145, 149, 176, 214, 216, 221, 222, 225, 229, 231, 232, 233, 238, 244, 245, 248, 252, 254, 256, 263, 268, 270, 271, 272, 273, 276, 280, 290, 291, 292, 294, 295, 296, 301, 307, 309, 310, 311, 399, 402, 405, 406, 407, 409, 415, 430, 434, 435, 436, 439, 441, 453, 454, 458, 459, 465, 467, 468, 470, 471, 473, 475, 479, 482, 484, 486, 487, 490, 493, 495, 498, 504, 518, 519, 531, 533, 535, 542, 545, 596, 597], "statu": [19, 20, 26, 125, 127, 213, 215, 216, 218, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 248, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 275, 276, 277, 278, 279, 280, 281, 282, 387, 390, 391, 393, 394, 395, 396, 398, 399, 400, 401, 402, 403, 404, 405, 407, 408, 409, 410, 411, 413, 414, 415, 416, 449, 454, 501, 502], "std": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 293, 313, 467, 490, 508], "stddev": 68, "stderr": 387, "stdev": 416, "stdout": [322, 387], "steadi": 459, "steep": 467, "stefan": [443, 454, 455], "step": [19, 20, 26, 124, 128, 132, 133, 136, 214, 215, 221, 222, 223, 224, 225, 226, 228, 229, 231, 232, 233, 234, 237, 238, 239, 240, 241, 242, 243, 244, 245, 248, 252, 253, 254, 255, 256, 257, 258, 259, 263, 264, 265, 266, 268, 269, 270, 271, 272, 273, 275, 276, 278, 279, 280, 281, 387, 390, 393, 394, 397, 398, 399, 401, 402, 403, 405, 408, 412, 415, 416, 417, 418, 424, 441, 448, 449, 453, 458, 464, 466, 470, 473, 475, 476, 477, 478, 485, 486, 493, 494, 495, 498, 502, 504, 518, 519, 521, 535, 543, 548], "stepprior": 415, "stepsampl": 416, "stepsiz": 171, "steradian": 204, "stewart": [136, 303, 468, 597], "stewart2009": [597, 600], "stick": [410, 429, 448, 495, 597], "still": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 394, 395, 397, 400, 401, 404, 406, 407, 408, 411, 412, 414, 416, 417, 418, 446, 447, 448, 502, 504, 521, 533, 558, 559, 598], "stipul": 413, "stone": [387, 407], "stop": [16, 52, 83, 86, 88, 89, 91, 92, 100, 132, 134, 136, 206, 226, 227, 234, 239, 241, 242, 243, 251, 259, 266, 278, 281, 397, 424, 453, 465, 470, 471, 473, 485, 487, 489, 495, 508, 518], "storag": [82, 535], "store": [11, 15, 16, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 56, 69, 77, 82, 83, 84, 85, 86, 87, 90, 91, 105, 125, 126, 127, 130, 132, 164, 177, 178, 196, 197, 199, 205, 208, 209, 214, 215, 217, 219, 227, 251, 370, 387, 388, 390, 393, 395, 396, 397, 399, 400, 403, 405, 409, 411, 413, 414, 418, 436, 439, 440, 455, 460, 466, 467, 477, 478, 487, 489, 490, 493, 494, 495, 497, 498, 499, 500, 503, 507, 508, 509, 510, 521, 531, 532, 535, 540, 541, 542, 547, 548, 573, 595, 596, 598, 602], "store_per_ob": 403, "store_trac": [214, 495], "str": [15, 16, 19, 20, 26, 50, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 77, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 93, 94, 99, 100, 101, 102, 103, 105, 106, 107, 108, 109, 110, 111, 113, 114, 118, 122, 124, 125, 126, 127, 128, 130, 132, 133, 136, 137, 139, 140, 141, 142, 146, 148, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 163, 165, 166, 167, 168, 169, 170, 173, 176, 177, 182, 183, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 215, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 248, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 275, 276, 277, 278, 279, 280, 281, 282, 285, 314, 326, 335, 350, 351, 352, 356, 369, 370, 372, 376, 380, 381, 383, 401, 414, 464, 466, 489, 498, 502], "str3": [87, 91], "straight": 388, "straightforward": [418, 601], "strang": 387, "strategi": [290, 387, 394, 401, 453, 495, 601], "stream": 387, "streil": [415, 452, 453, 454], "strength": [51, 54, 415, 573], "stretch": [196, 197, 199, 205, 208, 209, 377, 378, 382, 468, 473, 479, 482, 498, 499, 501, 508, 518, 519, 521, 603], "strict": [16, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 84, 90, 103, 105, 106, 126, 154, 155, 161, 166, 169, 172, 201, 207, 209, 277, 455], "strict_bound": 201, "strictli": [16, 84, 90, 105, 126, 201], "strike": 531, "string": [15, 16, 26, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 56, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 87, 90, 91, 93, 105, 125, 126, 127, 128, 129, 132, 136, 157, 163, 165, 167, 172, 195, 196, 197, 199, 201, 202, 204, 205, 207, 208, 209, 217, 219, 227, 251, 314, 332, 376, 387, 400, 401, 404, 406, 413, 414, 427, 431, 439, 441, 465, 492, 500, 502, 518, 547, 548], "strip": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40], "strip_units_from_tre": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40], "strong": [52, 400, 407, 464], "stronger": 504, "strongli": [299, 402, 404, 413, 439, 470, 495, 504, 513], "structur": [17, 87, 91, 207, 308, 391, 392, 393, 396, 398, 400, 403, 407, 410, 413, 414, 420, 422, 426, 432, 433, 435, 439, 442, 454, 455, 457, 479, 493, 494, 498, 499, 500, 502, 513, 520, 522, 523, 530, 532, 547, 548, 598], "stuck": 598, "student": 390, "studi": [46, 147, 283, 308, 400, 403, 411, 421, 448, 455, 460, 462, 474, 475, 476, 479, 482, 485, 486, 489, 495, 499, 502, 507, 525, 535, 544, 599], "stuff": [388, 418, 535], "stuff1": 387, "stuff2": 387, "style": [87, 91, 102, 196, 197, 199, 205, 208, 209, 384, 390, 396, 413, 443, 445, 473, 482, 497, 499, 518, 519, 535, 548, 603], "sub": [11, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 103, 106, 110, 111, 116, 119, 150, 151, 152, 153, 154, 155, 156, 157, 158, 160, 161, 163, 165, 166, 167, 168, 169, 196, 197, 198, 199, 201, 205, 206, 208, 209, 212, 387, 390, 394, 396, 397, 401, 406, 407, 408, 409, 414, 418, 427, 429, 433, 435, 436, 444, 446, 447, 475, 477, 494, 498, 500, 502, 509, 510, 531, 534, 535, 543, 596, 598, 602], "subcategori": 416, "subclass": [16, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 84, 87, 90, 91, 105, 126, 314, 401, 445, 448, 502, 504], "subcompon": [67, 80], "subfold": [395, 439], "submit": [392, 413], "submodul": [395, 429, 430, 435, 499, 521, 533], "subok": 314, "subpackag": [408, 414, 432, 439, 443], "subplot": [66, 67, 196, 197, 199, 205, 208, 209, 458, 460, 462, 464, 465, 466, 467, 468, 471, 473, 474, 475, 479, 484, 486, 487, 489, 491, 494, 495, 497, 499, 500, 501, 503, 504, 519, 535, 537, 544, 555, 559, 563], "subplot_kw": [468, 471, 475, 487, 500, 544], "subplots_adjust": [485, 490, 491, 492], "subsect": [407, 499], "subsequ": [298, 396], "subset": [82, 83, 87, 91, 128, 132, 136, 252, 414, 443, 444, 475, 487, 501, 507, 509, 534, 596], "subspac": 401, "substanti": [87, 91], "substitut": 599, "substr": [227, 251], "subtract": 466, "succeed": 125, "success": [16, 84, 90, 102, 105, 125, 126, 127, 128, 129, 132, 133, 136, 213, 214, 215, 216, 415, 416, 417, 439, 460, 462, 464, 465, 466, 468, 473, 474, 475, 479, 484, 485, 487, 489, 494, 495, 501, 508, 518, 519, 560], "successfulli": [102, 417, 460, 462, 464, 465, 466, 473, 474, 475, 486, 487, 489, 494, 495, 508, 518, 519], "sudo": 421, "suffer": [404, 487], "suffic": 486, "suffici": [390, 393, 400, 413, 453, 535], "suffix": [102, 125, 388, 398, 410, 502, 547, 549], "suggest": [390, 392, 394, 397, 401, 407, 409, 411, 415, 468, 477, 478, 535, 598], "suit": [197, 387, 548], "suitabl": 197, "sum": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 86, 103, 106, 110, 111, 127, 128, 129, 131, 132, 133, 136, 137, 138, 146, 147, 150, 151, 152, 153, 154, 156, 157, 158, 160, 163, 164, 165, 166, 167, 168, 169, 196, 197, 199, 205, 208, 209, 226, 234, 239, 241, 242, 243, 259, 266, 278, 281, 283, 292, 294, 296, 383, 387, 397, 398, 400, 409, 411, 415, 430, 454, 468, 473, 477, 487, 491, 493, 504, 508, 518, 519, 521, 531, 541, 597, 599], "sum_": 531, "sum_band": [196, 197], "sum_i": 130, "sum_j": 531, "sum_k": 531, "sum_of_implicit_term": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40], "sum_over_ax": [196, 197, 199, 205, 208, 209, 227, 251, 375, 448, 471, 473, 479, 487, 493, 498, 500, 501, 508, 519], "sum_over_energy_group": [124, 128, 136, 468, 475, 479], "summar": [396, 523], "summari": [15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 50, 51, 52, 53, 54, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 120, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 163, 164, 165, 166, 167, 168, 169, 171, 172, 173, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 275, 276, 277, 278, 279, 280, 281, 282, 292, 294, 322, 326, 336, 361, 374, 388, 407, 426, 460, 465, 485, 486, 493, 507, 518, 535], "summaris": [387, 392, 394, 407], "summat": [292, 294, 393], "summer": 395, "sun": 41, "sunpi": [404, 407, 408], "super": [195, 197, 271, 272, 273, 457, 466, 477, 510, 549, 562, 583, 586], "superexpcutoffpowerlaw3fglspectralmodel": [262, 410, 502, 579], "superexpcutoffpowerlaw4fgldr3spectralmodel": [77, 262, 502, 580], "superexpcutoffpowerlaw4fglspectralmodel": [262, 410, 502, 581], "superflu": [397, 487], "supernova": [28, 52, 460, 476, 502, 525, 526], "superpixel": 195, "supersed": [195, 196, 197, 207, 208, 209], "supervisor": 403, "suppli": [19, 20, 26, 87, 91, 221, 222, 225, 229, 231, 232, 233, 238, 244, 245, 248, 252, 254, 256, 257, 258, 263, 268, 270, 271, 272, 273, 276, 280, 459, 485, 486], "support": [83, 85, 86, 87, 88, 89, 91, 92, 95, 100, 101, 103, 106, 110, 111, 115, 127, 148, 159, 164, 195, 196, 197, 198, 199, 201, 206, 207, 208, 209, 214, 227, 251, 386, 391, 392, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 409, 410, 411, 414, 416, 421, 425, 428, 429, 431, 432, 433, 434, 435, 436, 439, 441, 444, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 458, 465, 467, 470, 473, 475, 482, 486, 491, 492, 493, 499, 504, 507, 508, 509, 510, 518, 534, 540, 547, 548, 593, 595, 596, 598], "suppos": [242, 278, 392, 399, 597, 599], "suppress": [153, 154, 158, 535], "sure": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 387, 390, 392, 403, 417, 464, 484, 499, 535, 598], "surfac": [28, 30, 35, 36, 39, 40, 45, 214, 267, 283, 340, 406, 436, 495, 502, 525], "surface_brightness_err": 492, "surprisingli": 401, "surround": [52, 332, 387], "survei": [35, 67, 128, 229, 394, 397, 407, 424, 457, 507, 513, 514, 515, 525, 530, 535, 596, 597], "survey_map": [457, 515, 516], "suspect": 600, "suss": [396, 413], "svg": 387, "swap": 195, "swept": 52, "swgo": 597, "swh": 413, "swhid": 413, "switch": [104, 109, 290, 387, 390, 394, 397, 417, 441, 445], "switcher": 417, "sy": [387, 423], "syllabl": 535, "symbol": 500, "symmetr": [103, 106, 110, 111, 124, 133, 136, 184, 193, 197, 237, 387, 398, 429, 441, 444, 462, 486, 498, 504, 507, 523, 533, 541, 553, 554, 600], "symmetri": [197, 429], "sync": 448, "sync_constraint": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40], "synchronis": 413, "synchrotron": [252, 435, 573], "syntact": [87, 91], "syntax": [16, 87, 91, 388, 403, 406, 433, 450, 598], "synthesi": [525, 526], "synthet": 427, "system": [11, 21, 83, 87, 91, 113, 114, 151, 159, 160, 195, 196, 197, 199, 202, 204, 207, 208, 209, 227, 251, 387, 393, 398, 400, 404, 407, 408, 412, 413, 415, 421, 429, 447, 453, 458, 460, 464, 465, 466, 467, 468, 470, 471, 473, 474, 475, 476, 477, 478, 479, 484, 485, 486, 487, 491, 492, 493, 495, 497, 498, 499, 500, 501, 502, 504, 506, 507, 508, 509, 510, 518, 519, 521, 546, 547, 596, 598, 602], "systemat": [398, 411, 413, 414, 436, 464, 484, 498, 533, 597, 599], "t": [16, 26, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 50, 51, 52, 53, 67, 69, 83, 84, 86, 87, 88, 90, 91, 105, 120, 121, 122, 124, 125, 126, 127, 128, 129, 132, 133, 134, 136, 137, 138, 146, 147, 148, 153, 193, 206, 227, 242, 246, 251, 290, 292, 293, 294, 307, 309, 312, 359, 363, 386, 387, 388, 390, 392, 394, 395, 397, 399, 401, 403, 404, 405, 406, 407, 410, 411, 412, 414, 416, 418, 419, 420, 422, 424, 436, 440, 443, 444, 445, 448, 453, 455, 458, 459, 460, 464, 470, 473, 475, 476, 479, 482, 484, 485, 487, 489, 490, 491, 492, 494, 495, 498, 499, 500, 502, 503, 504, 507, 508, 523, 527, 528, 529, 531, 533, 535, 544, 585, 586, 587, 588, 589, 590, 591, 596, 597, 598, 601, 602], "t0": [234, 259, 477, 485, 486, 489, 586, 590], "t1": [87, 91], "t2": [87, 91], "t_": [52, 53, 298, 540, 586, 587, 588, 589, 590, 591, 599], "t_0": 590, "t_b": 599, "t_decai": [241, 588], "t_delta": [104, 109, 206, 226, 234, 239, 241, 242, 243, 259, 266, 278, 281], "t_i": 298, "t_j": 531, "t_live": [83, 88], "t_max": [226, 234, 239, 241, 242, 243, 259, 266, 278, 281, 400, 411, 489], "t_min": [226, 234, 239, 241, 242, 243, 259, 266, 278, 281, 400, 411, 489], "t_observ": [83, 88], "t_r": 242, "t_ref": [234, 239, 241, 242, 243, 259, 266, 278, 452, 453, 477, 478, 486, 502, 586, 587, 588, 589, 590, 591, 592, 593], "t_rise": [241, 588], "t_start": [86, 532], "t_stop": [52, 86, 532], "ta": 293, "ta2": 293, "ta3": 293, "tab": [153, 392, 473, 479, 484, 494, 504, 544], "tabl": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 493, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603], "table_arrai": [87, 91], "table_associ": 67, "table_bkg_src": 476, "table_class": [87, 91], "table_compon": [67, 492], "table_filenam": 26, "table_format": 127, "table_from_row_data": 453, "table_hdu": 86, "table_identif": 67, "table_large_scale_compon": [67, 492], "table_model": [280, 410], "table_oth": 357, "tableau": 535, "tableclass": [87, 91], "tablegroup": [87, 91], "tableid": [87, 91], "tableiloc": [87, 91], "tableindic": [87, 91], "tableloc": [87, 91], "tablelocindic": [87, 91], "tablemodel": [398, 449], "tablepsf": [408, 427, 429], "tablepsfcheck": 445, "tabul": 523, "tabular": [502, 582], "tackl": 396, "tag": [19, 20, 26, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 84, 87, 90, 91, 99, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 120, 122, 123, 124, 125, 126, 128, 129, 131, 132, 133, 134, 135, 136, 150, 151, 152, 153, 154, 155, 156, 157, 158, 160, 161, 163, 165, 166, 167, 168, 169, 171, 172, 173, 175, 176, 177, 178, 181, 182, 183, 196, 197, 199, 205, 208, 209, 221, 222, 223, 224, 225, 226, 227, 228, 229, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 249, 251, 252, 253, 254, 255, 256, 257, 258, 259, 263, 264, 265, 266, 267, 268, 271, 272, 273, 275, 276, 277, 278, 279, 280, 282, 412, 415, 417, 436, 450, 497, 502, 504, 555, 559], "tail": [507, 598], "take": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 87, 91, 103, 106, 110, 111, 124, 151, 171, 173, 205, 207, 212, 214, 227, 251, 267, 362, 385, 387, 392, 393, 396, 397, 398, 399, 400, 401, 402, 403, 406, 407, 408, 411, 416, 418, 434, 435, 436, 439, 441, 449, 450, 452, 453, 454, 458, 460, 464, 466, 467, 477, 478, 479, 486, 487, 489, 494, 495, 498, 499, 500, 502, 503, 504, 507, 519, 521, 532, 535, 548, 566, 599, 600, 601], "taken": [15, 87, 91, 103, 106, 110, 111, 125, 127, 156, 164, 183, 189, 191, 205, 206, 209, 214, 301, 388, 392, 396, 400, 452, 459, 464, 473, 474, 487, 489, 494, 497, 500, 501, 506, 507, 521, 531, 533, 544, 545, 600], "talk": [390, 392, 394, 404, 413], "tan": [197, 204, 401, 431, 464, 499, 508, 544], "tandem": 523, "tangent": [179, 224, 228, 237, 240, 253, 264, 265, 269, 275, 279], "tangenti": [195, 548], "tar": [418, 507], "target": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 88, 90, 103, 106, 110, 111, 115, 120, 124, 126, 134, 136, 154, 155, 166, 169, 186, 187, 191, 192, 196, 197, 199, 201, 205, 208, 209, 388, 393, 394, 400, 413, 416, 417, 445, 460, 466, 475, 485, 498, 500, 519], "target_nam": 544, "target_posit": [179, 460, 464, 466, 475, 484, 485, 489, 519], "target_radec": 88, "targetmetadata": [90, 126], "task": [335, 407, 411, 413, 414, 417, 418, 449, 465, 468, 498, 499, 508, 513, 514, 518, 535, 543, 596, 598, 602], "task_nam": 335, "tast": 598, "tau": [26, 51, 54, 139, 302, 415, 491, 563], "tau_0": 51, "taul": [26, 491], "taur": [26, 491], "taylor": [52, 53], "tb00058": 138, "tbc": 416, "tbd": 246, "tbl": [87, 91], "tccb": 473, "tdelta_precis": 308, "team": [392, 396, 404, 407, 409, 413, 426, 447], "technic": [389, 390, 392, 400, 407, 409, 411, 413, 416, 418, 470], "techniqu": [393, 402, 403, 405, 416, 460, 464, 473, 476, 498, 500, 509, 542, 545, 596], "tediou": 492, "tel": [87, 91], "telescop": [82, 83, 85, 91, 95, 105, 156, 400, 401, 414, 420, 424, 425, 477, 484, 487, 503, 507, 508, 510], "tell": 466, "temp": [443, 478], "temperatur": [52, 53], "templat": [16, 26, 57, 70, 84, 90, 105, 106, 111, 116, 119, 126, 173, 181, 195, 196, 197, 199, 200, 201, 207, 208, 209, 215, 227, 242, 251, 275, 276, 277, 278, 279, 280, 287, 289, 303, 306, 392, 398, 399, 403, 410, 436, 450, 453, 454, 457, 467, 468, 471, 478, 499, 500, 501, 502, 523, 544, 549, 551, 561, 562, 569, 572, 577, 583, 592], "template_diffus": [501, 508], "template_extrapol": 582, "template_model": 477, "template_noextrapol": 582, "templatelightcurvetemporalmodel": 450, "templatend": [275, 276, 502], "templatendspatialmodel": [261, 502], "templatendspectralmodel": [26, 262, 441, 452, 502], "templatenpredmodel": [247, 439], "templatephasecurvetemporalmodel": [274, 450, 455, 502, 592], "templatespatialmodel": [67, 261, 409, 410, 436, 450, 451, 453, 454, 455, 477, 501, 502, 508, 560], "templatespectralmodel": [227, 251, 262, 285, 410, 502, 508, 531, 569, 572, 577, 582], "templatetemporalmodel": 450, "tempo2": [487, 535], "tempor": [218, 220, 226, 227, 234, 239, 241, 242, 243, 251, 259, 266, 267, 274, 278, 281, 298, 398, 400, 410, 411, 432, 434, 435, 436, 441, 450, 452, 453, 454, 455, 457, 459, 462, 465, 467, 468, 473, 474, 475, 477, 480, 481, 482, 489, 490, 492, 493, 494, 501, 508, 511, 513, 518, 535, 536, 594, 595, 597], "temporal_model": [267, 400, 477, 478, 486, 502, 585, 586, 587, 588, 589, 590, 591, 592, 593], "temporal_model1": 486, "temporal_model2": 486, "temporal_model_map": 478, "temporal_model_registri": 502, "temporal_typ": 410, "temporalbackground": 398, "temporalmodel": [226, 234, 239, 241, 242, 243, 259, 266, 267, 278, 398, 411, 435, 450, 452, 453, 455, 549], "temporari": 513, "temporarili": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 398], "ten": [393, 407], "tend": [387, 555], "tension": 490, "tensorflow": [405, 407], "tent": 417, "term": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 243, 246, 304, 311, 390, 392, 394, 396, 397, 401, 404, 407, 412, 414, 416, 437, 441, 450, 459, 468, 495, 497, 598, 600, 601], "termin": [87, 91, 102, 390, 403, 419, 420, 421, 422, 423, 460, 462, 464, 465, 466, 473, 474, 475, 487, 489, 494, 495, 508, 518, 519, 598], "terrier": [393, 396, 397, 398, 399, 401, 402, 403, 404, 406, 408, 409, 410, 411, 412, 414, 416, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 441, 442, 443, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455], "test": [6, 16, 36, 37, 84, 90, 94, 101, 102, 105, 116, 119, 122, 124, 125, 126, 127, 128, 129, 132, 133, 134, 136, 145, 147, 164, 166, 169, 196, 197, 199, 205, 208, 209, 242, 290, 291, 292, 294, 297, 307, 309, 344, 361, 362, 363, 364, 365, 366, 367, 388, 393, 394, 395, 396, 397, 399, 400, 401, 402, 403, 404, 405, 412, 415, 417, 418, 428, 430, 431, 433, 435, 439, 440, 441, 444, 445, 446, 447, 448, 449, 450, 453, 455, 460, 467, 468, 478, 482, 484, 485, 486, 489, 493, 494, 497, 533, 535, 539, 545, 592, 593, 597, 600, 603], "test2": 486, "test_aeff3d": 497, "test_edisp": 497, "test_events_with_gti": 532, "test_gti": 532, "test_person_txt": 387, "test_plot": 387, "test_psf": 497, "test_someth": 387, "test_using_data_fil": 366, "test_using_scipi": 367, "testcod": 388, "testoutput": 388, "testpar": 415, "teststatisticnest": [453, 455], "tev": [16, 19, 20, 26, 44, 52, 53, 66, 67, 71, 75, 83, 96, 102, 103, 106, 110, 111, 112, 117, 120, 125, 127, 128, 144, 145, 150, 151, 153, 155, 156, 157, 158, 163, 164, 165, 166, 167, 169, 176, 194, 195, 196, 197, 199, 200, 204, 205, 207, 208, 209, 221, 222, 225, 229, 231, 232, 233, 238, 244, 245, 248, 252, 254, 256, 257, 258, 263, 267, 268, 270, 271, 272, 273, 276, 280, 283, 284, 312, 313, 334, 382, 388, 398, 410, 411, 414, 415, 424, 458, 459, 460, 462, 464, 465, 466, 467, 468, 470, 471, 473, 474, 475, 476, 477, 478, 479, 482, 484, 485, 486, 487, 489, 490, 491, 492, 493, 494, 495, 497, 498, 499, 500, 502, 503, 504, 506, 507, 508, 509, 510, 518, 519, 521, 529, 532, 533, 539, 540, 542, 544, 545, 548, 552, 553, 554, 555, 556, 557, 558, 559, 560, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 585, 586, 587, 588, 589, 590, 591, 592, 593, 596], "tevcat": [440, 492], "tevcat_nam": 71, "tevpi": 427, "tevtevtev1": 475, "tex": 388, "texliv": 388, "text": [17, 18, 21, 22, 23, 24, 25, 27, 50, 51, 52, 53, 54, 106, 111, 125, 127, 136, 264, 265, 313, 350, 356, 376, 388, 395, 403, 413, 418, 465, 487, 497, 507, 518, 521, 553, 554, 555, 558, 559, 564, 580, 588, 598, 600], "textcolor": 376, "textkw": 376, "tf28zhjv": 489, "th": 201, "than": [27, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 77, 87, 91, 135, 154, 155, 157, 158, 161, 165, 166, 167, 169, 173, 194, 195, 196, 197, 199, 200, 201, 204, 205, 207, 208, 209, 290, 299, 365, 380, 387, 388, 390, 392, 393, 394, 397, 400, 401, 402, 405, 406, 411, 413, 414, 416, 418, 447, 450, 451, 452, 454, 458, 460, 473, 474, 477, 484, 485, 490, 495, 498, 500, 503, 504, 531, 548, 554, 555, 598, 600], "thank": [411, 433, 434, 439, 441, 455, 498, 535], "thaw": 501, "thei": [16, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 84, 87, 90, 91, 95, 105, 109, 113, 114, 126, 132, 140, 170, 278, 298, 334, 387, 388, 390, 392, 393, 394, 395, 396, 398, 401, 403, 404, 406, 407, 410, 411, 412, 413, 414, 415, 416, 417, 418, 425, 436, 439, 441, 453, 454, 460, 462, 466, 491, 493, 495, 500, 501, 502, 503, 504, 507, 510, 523, 532, 533, 535, 540, 547, 548, 596, 597, 598, 599, 600, 602], "them": [11, 15, 16, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 83, 84, 87, 90, 91, 100, 105, 126, 218, 220, 227, 251, 314, 387, 388, 390, 392, 394, 395, 401, 403, 406, 413, 414, 416, 417, 418, 424, 431, 447, 460, 462, 464, 467, 470, 473, 474, 476, 478, 484, 492, 493, 494, 495, 499, 500, 502, 504, 507, 509, 513, 519, 532, 535, 544, 598, 600], "theme": [441, 448, 455], "themselv": [87, 91, 403, 498, 500, 542], "theorem": [290, 307, 309, 533, 600], "theoret": 504, "therefor": [106, 388, 393, 397, 400, 401, 402, 406, 408, 410, 416, 421, 439, 455, 460, 484, 487, 495, 499, 500, 503, 504, 509, 521, 533, 600, 601], "thereof": 398, "thermal": [19, 573, 597], "thermal_relic_cross_sect": 19, "theta": [33, 34, 38, 52, 53, 157, 163, 165, 167, 171, 179, 193, 202, 315, 318, 387, 436, 457, 466, 496, 505, 508, 510, 513, 521, 553, 554, 558, 559], "theta2": [183, 193, 385, 447], "theta2_axi": 506, "theta2_max": 385, "theta2_min": 385, "theta2_t": 506, "theta2_table_en": 506, "theta_0": [33, 38], "theta_square_plot": [457, 505, 506], "theta_squared_axi": [193, 506], "thew": 492, "thi": [6, 15, 16, 19, 20, 26, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 46, 47, 56, 67, 68, 69, 82, 83, 84, 85, 86, 87, 88, 90, 91, 100, 103, 104, 105, 106, 109, 110, 111, 115, 120, 124, 125, 126, 127, 128, 129, 131, 132, 135, 136, 137, 140, 144, 146, 147, 150, 151, 152, 153, 154, 155, 156, 157, 158, 160, 161, 163, 164, 165, 166, 167, 168, 169, 171, 173, 176, 178, 179, 180, 182, 184, 186, 187, 190, 192, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 214, 217, 219, 221, 222, 224, 225, 228, 229, 231, 232, 233, 234, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 248, 252, 253, 254, 255, 256, 257, 258, 259, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 275, 276, 278, 279, 280, 283, 290, 292, 294, 300, 307, 309, 314, 322, 332, 335, 338, 343, 344, 362, 365, 372, 374, 376, 377, 378, 382, 384, 386, 387, 388, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 424, 426, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 441, 442, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 458, 459, 460, 462, 464, 465, 466, 467, 468, 470, 471, 473, 474, 475, 476, 477, 478, 479, 482, 484, 485, 486, 487, 489, 490, 491, 492, 493, 494, 495, 497, 498, 499, 500, 501, 502, 503, 504, 506, 507, 508, 509, 510, 511, 513, 516, 518, 519, 521, 523, 524, 531, 532, 533, 535, 537, 538, 539, 540, 541, 542, 544, 545, 546, 547, 548, 552, 553, 554, 555, 556, 557, 558, 559, 560, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 585, 586, 587, 588, 589, 590, 591, 592, 593, 595, 596, 597, 598, 599, 600, 601, 602], "thick": 384, "thin": [56, 326], "thing": [387, 390, 392, 395, 401, 402, 403, 404, 407, 411, 418, 427, 446, 466, 470, 486, 487, 500, 508], "think": [392, 404, 405, 407], "third": [62, 63, 87, 91, 388, 439, 492, 495, 499, 513, 520, 521, 530], "thoma": [413, 447], "thorough": [499, 523], "those": [15, 83, 182, 196, 197, 199, 205, 208, 209, 214, 218, 220, 227, 251, 322, 376, 387, 390, 392, 394, 396, 401, 403, 406, 407, 408, 409, 410, 412, 418, 419, 420, 422, 423, 433, 436, 484, 489, 495, 499, 500, 501, 503, 513, 514, 521, 533, 535, 544, 602], "though": [15, 390, 395, 401, 402, 403, 405, 407, 465, 502, 518], "thought": [392, 401], "three": [87, 91, 164, 293, 387, 396, 399, 401, 413, 417, 455, 475, 477, 484, 490, 499, 504, 513, 520, 540, 547, 597], "threshold": [67, 103, 110, 120, 125, 126, 127, 134, 136, 144, 145, 153, 154, 158, 171, 182, 206, 290, 376, 377, 378, 401, 429, 435, 436, 458, 464, 466, 468, 475, 479, 484, 492, 493, 495, 498, 500, 507, 518, 531, 533], "threshold_alpha": 171, "through": [41, 83, 87, 91, 313, 314, 384, 390, 392, 400, 401, 407, 411, 412, 416, 421, 425, 439, 450, 459, 464, 468, 478, 490, 495, 498, 499, 500, 501, 508, 509, 535, 540, 547, 597, 600], "throughout": [13, 394, 396, 397, 401, 403, 446, 492], "throught": 479, "thrown": 502, "thu": [387, 394, 401, 404, 405, 407, 443, 458, 459, 470, 471, 475, 477, 494, 595, 601], "thumbnail": 439, "ti": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 197, 396, 486], "tibaldo": 444, "tick": [452, 453], "tick_param": 458, "ticker": 376, "tight_layout": [485, 495, 504, 555, 559, 603], "tightli": 406, "tikonov": 415, "tild": [195, 207], "tile": [195, 197], "tilt": [257, 277, 398, 409, 410, 415, 428, 434, 470, 473, 474, 477, 478, 482, 493, 502, 508, 518, 519, 542, 548, 556, 577, 582], "tilt_prior": 415, "tim": 454, "time": [6, 19, 20, 35, 50, 51, 52, 53, 78, 82, 83, 85, 86, 87, 88, 89, 91, 92, 94, 100, 102, 103, 104, 105, 106, 109, 110, 111, 113, 125, 126, 127, 132, 136, 139, 140, 148, 172, 178, 189, 191, 196, 197, 198, 199, 200, 205, 206, 208, 209, 214, 217, 219, 226, 229, 234, 239, 241, 242, 243, 259, 266, 267, 278, 281, 293, 298, 302, 308, 344, 364, 368, 369, 370, 371, 387, 388, 390, 392, 393, 394, 395, 397, 400, 401, 403, 404, 405, 406, 407, 408, 410, 411, 412, 413, 416, 417, 418, 420, 424, 428, 429, 432, 433, 434, 436, 439, 443, 445, 446, 447, 448, 449, 450, 452, 453, 454, 455, 459, 461, 464, 465, 466, 467, 468, 471, 473, 475, 476, 478, 479, 484, 487, 491, 492, 493, 494, 495, 498, 499, 500, 501, 502, 503, 504, 507, 508, 509, 518, 519, 521, 527, 528, 529, 531, 532, 533, 535, 540, 544, 548, 554, 555, 563, 585, 586, 587, 588, 589, 590, 591, 592, 593, 596, 597, 598, 599, 600, 601], "time1": 302, "time2": 302, "time_axi": [196, 197, 199, 200, 205, 208, 209, 293, 478, 489, 499, 548], "time_bin": 402, "time_bin_end": 402, "time_bin_s": 402, "time_bin_start": 402, "time_bound": 206, "time_box": 91, "time_column": 411, "time_delta": [86, 206, 368, 371], "time_edg": [206, 490, 499], "time_filt": 89, "time_format": [127, 206, 453, 486], "time_info": 90, "time_interv": [16, 83, 86, 88, 92, 132, 465, 470, 471, 473, 478, 484, 485, 489, 518], "time_map_axi": [206, 499], "time_map_axis_contigu": 499, "time_max": [100, 125, 127, 206, 401, 402, 403, 478, 484, 489, 492, 499], "time_mid": [206, 490], "time_min": [100, 125, 127, 206, 401, 402, 403, 478, 484, 489, 492, 499], "time_rang": [91, 226, 234, 239, 241, 242, 243, 259, 266, 278, 281, 478, 585, 586, 587, 588, 589, 590, 591, 592, 593], "time_ref": [83, 85, 86, 91, 94, 200], "time_ref_default": 86, "time_ref_from_dict": 602, "time_relative_to_ref": 602, "time_resolved_spectroscopi": [457, 488, 489], "time_seri": 293, "time_start": [85, 86, 91, 402], "time_step": 402, "time_stop": [85, 86, 91, 402], "time_sum": [86, 226, 234, 239, 241, 242, 243, 259, 266, 278, 281], "timedelta": [87, 91, 94, 206, 226, 234, 239, 241, 242, 243, 259, 266, 278, 281, 344, 368, 371, 602], "timedelta64": [87, 91], "timeinfometadata": 90, "timelin": [392, 394, 447], "timemapaxi": [127, 148, 198, 200, 439, 454, 455, 485, 486, 489, 490], "timerangeconfig": 16, "timeref": 477, "timescal": [140, 234, 299, 412, 490], "timeseri": 402, "timesi": [94, 451, 453, 477], "timestamp": 387, "timeunit": 477, "timmer": [293, 455], "tini": [475, 507], "tip": 535, "titl": [388, 392, 479, 491, 603], "title2": 388, "tiziani": 445, "tke": 508, "tm": [87, 91], "tmax": 402, "tmid": [88, 453, 475, 498, 503, 519], "tmin": 402, "to_2d": [151, 510], "to_3d": [150, 452, 454], "to_bands_hdu": [194, 195, 204, 207], "to_binsz": [195, 204, 207, 439], "to_binsz_wc": 204, "to_contigu": [206, 499], "to_counts_hdulist": 108, "to_cub": [194, 195, 196, 197, 199, 204, 205, 207, 208, 209, 436, 471, 548], "to_dict": [19, 20, 26, 99, 102, 103, 106, 110, 111, 213, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 248, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 275, 276, 277, 278, 279, 280, 281, 282, 414, 504], "to_edisp_kernel": [158, 455, 539], "to_edisp_kernel_map": [155, 439, 539], "to_energy_dependent_table_psf": 447, "to_even_npix": 207, "to_fits_head": 85, "to_fram": 202, "to_gti": [206, 454], "to_hdu": [196, 197, 208, 209], "to_hdulist": [103, 106, 110, 111, 125, 127, 150, 151, 152, 153, 154, 155, 156, 157, 158, 160, 161, 163, 165, 166, 167, 168, 169, 196, 197, 203, 204, 205, 208, 209, 499], "to_head": [84, 90, 105, 126, 195, 198, 200, 201, 206, 207, 414], "to_html": 387, "to_imag": [103, 106, 110, 111, 153, 154, 164, 166, 169, 194, 195, 204, 207, 409, 433, 434, 458, 471, 475, 493, 508, 545, 548], "to_json": [16, 84, 90, 105, 126], "to_map": [125, 127], "to_map_dataset": [106, 111], "to_mask": [103, 106, 110, 111, 491], "to_model": [56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 227, 251, 439, 492], "to_node_typ": 201, "to_nsid": [195, 197], "to_odd_npix": 207, "to_panda": [87, 91], "to_parameters_t": [227, 251, 459, 460, 464, 465, 466, 470, 473, 485, 495, 504, 519], "to_pixel": [401, 464, 475, 491, 498, 502, 544, 553, 554, 555], "to_polygon": 401, "to_psf3d": [157, 165, 167], "to_python": [16, 84, 90, 105, 126], "to_region": [223, 224, 227, 228, 237, 240, 251, 255, 264, 265, 279, 401, 433, 502, 553, 554, 555], "to_region_map_dataset": [103, 106, 110, 111, 493], "to_region_nd_map": [154, 155, 161, 166, 169, 197, 205, 209, 436, 439, 508], "to_region_nd_map_histogram": [209, 453], "to_sed_typ": 411, "to_sherpa": [433, 447, 448], "to_spectrum": 439, "to_spectrum_dataset": [100, 103, 106, 110, 111, 409, 432, 434, 487, 493, 504], "to_st": 453, "to_str": [453, 458], "to_swap": [195, 196, 197], "to_tabl": [102, 127, 150, 151, 152, 153, 156, 157, 158, 160, 163, 165, 167, 168, 200, 201, 205, 206, 218, 220, 242, 439, 455, 459, 462, 464, 465, 475, 479, 482, 484, 486, 492, 494, 502, 521, 533], "to_table_hdu": [83, 86, 150, 151, 152, 153, 156, 157, 158, 160, 163, 165, 167, 168, 200, 201, 499], "to_table_psf": 445, "to_template_sky_model": [227, 251], "to_template_spectral_model": [227, 251, 410], "to_unit": [150, 151, 152, 153, 156, 157, 158, 160, 163, 165, 167, 168, 196, 197, 199, 205, 208, 209], "to_wc": [196, 197], "to_wcs_geom": [195, 204, 548], "to_wcs_til": [195, 197], "to_yaml": [16, 84, 90, 105, 126, 227, 251, 398, 414, 502, 552, 553, 554, 555, 556, 557, 558, 559, 560, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 585, 586, 587, 588, 589, 590, 591, 592, 593], "tob": 465, "todai": 413, "todo": [13, 79, 99, 164, 280, 388, 411, 430, 507, 525, 526, 602], "tof": 163, "togeth": [100, 103, 106, 110, 111, 128, 132, 227, 251, 384, 387, 400, 404, 407, 419, 431, 459, 471, 473, 474, 479, 485, 493, 495, 498, 501, 502, 503, 504, 510, 519, 531, 532, 598], "tol": [290, 495], "toler": [86, 100, 132, 150, 151, 152, 153, 156, 157, 158, 160, 163, 165, 167, 168, 195, 196, 197, 199, 201, 204, 205, 207, 208, 209, 364, 495], "tolist": 495, "tomato": 459, "toml": 436, "ton": [299, 507], "too": [387, 392, 393, 416, 438, 439, 452, 453, 454, 495, 500], "took": [412, 416], "tool": [6, 13, 196, 197, 199, 208, 209, 386, 387, 390, 394, 396, 398, 400, 403, 404, 407, 413, 425, 433, 444, 447, 448, 476, 479, 486, 493, 495, 499, 503, 507, 508, 510, 523, 535, 571, 596, 597], "toolbox": [403, 444], "top": [16, 84, 90, 105, 110, 111, 126, 374, 383, 387, 392, 403, 407, 409, 421, 447, 466, 468, 475, 479, 484, 486, 490, 492, 498, 521, 535, 548, 596, 598, 602], "top_five_ts_3fhl": 521, "tophat2dkernel": 124, "topic": [392, 396, 407, 415, 521], "total": [51, 67, 99, 102, 103, 106, 110, 111, 128, 129, 132, 133, 143, 176, 191, 195, 215, 226, 234, 239, 241, 242, 243, 259, 266, 278, 281, 311, 395, 411, 415, 420, 422, 454, 457, 459, 460, 462, 463, 464, 465, 466, 467, 468, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 481, 482, 484, 485, 486, 487, 488, 489, 491, 492, 493, 494, 495, 498, 499, 500, 501, 504, 505, 508, 512, 515, 517, 518, 519, 521, 522, 525, 531, 535, 540, 550, 561, 573, 583, 594, 597], "total_jfact": 491, "total_jfact_decai": 491, "total_model": 398, "total_obstim": 498, "total_stat": [215, 216, 416, 459, 489, 495, 599], "touch": [86, 428, 513], "tour": 513, "toward": [332, 394, 401, 407, 449], "tox": [351, 388, 390, 450, 458, 460, 464, 465, 466, 467, 468, 470, 471, 473, 474, 475, 476, 477, 478, 479, 482, 484, 485, 486, 487, 489, 491, 492, 493, 495, 498, 499, 500, 501, 502, 504, 506, 507, 508, 509, 510, 518, 519, 521, 560, 569, 586], "tqdm": 535, "trace": [214, 215, 216, 436, 495], "traceback": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 387], "track": [85, 94, 387, 390, 396, 402, 413, 441, 501], "tracker": [390, 401, 417, 455], "tradit": 416, "tradition": [416, 502, 599], "train": 412, "traitlet": [403, 414], "traittyp": 414, "transfer": 414, "transform": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 83, 85, 94, 164, 198, 200, 201, 206, 207, 227, 251, 316, 320, 343, 348, 387, 401, 403, 411, 415, 416, 427, 429, 445, 448, 468, 475, 498, 504, 547, 553, 554, 602], "transit": [27, 377, 378, 394, 428, 429, 447, 509, 597, 603], "transit_map": 509, "transit_numb": 509, "transitsmap_crab": 509, "translat": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 403, 533], "transpar": 402, "transport": 499, "transpos": 448, "trapezoid": [150, 151, 152, 153, 156, 157, 158, 160, 163, 165, 167, 168, 286, 325], "trapz": 325, "trapz_loglog": 434, "trash": 430, "travi": [433, 435, 439], "treat": [83, 95, 420, 452, 453, 464, 477, 601], "treatment": [439, 464, 473, 597], "trend": 477, "tri": [77, 395, 401], "tributor": 413, "tricki": 401, "trigger": [365, 387, 417, 509], "trim": [103, 106, 154, 155, 161, 166, 169, 172, 207, 209, 277], "tripl": 157, "trivial": 394, "troubl": 598, "troubleshoot": [420, 421, 422, 596], "trough": 490, "true": [15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 35, 36, 37, 39, 40, 45, 80, 82, 83, 84, 86, 87, 88, 90, 91, 93, 96, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 113, 114, 115, 116, 118, 119, 124, 125, 126, 127, 128, 132, 133, 136, 137, 143, 146, 150, 151, 153, 154, 155, 156, 157, 158, 160, 161, 163, 164, 165, 166, 167, 168, 169, 172, 176, 182, 183, 186, 187, 189, 190, 192, 195, 196, 197, 199, 200, 201, 202, 203, 204, 205, 207, 208, 209, 211, 214, 215, 218, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 248, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 275, 276, 277, 278, 279, 280, 281, 282, 307, 309, 311, 314, 322, 323, 326, 344, 356, 358, 375, 380, 384, 387, 393, 400, 401, 402, 403, 410, 411, 414, 416, 430, 434, 435, 446, 448, 449, 458, 459, 460, 462, 464, 465, 466, 467, 468, 470, 471, 473, 474, 475, 476, 477, 478, 479, 482, 484, 485, 486, 487, 489, 491, 492, 493, 494, 495, 497, 498, 499, 500, 501, 502, 504, 508, 509, 516, 518, 519, 521, 525, 531, 533, 535, 540, 545, 547, 548, 552, 553, 554, 557, 558, 560, 582, 597, 600, 603], "truelov": 53, "truncat": [136, 332, 439], "truncation_valu": [295, 301], "trust": [16, 84, 90, 105, 126], "trustworthi": 415, "truth": 504, "try": [16, 77, 84, 90, 105, 126, 196, 197, 199, 205, 208, 209, 387, 388, 397, 401, 407, 417, 418, 424, 429, 462, 464, 466, 477, 478, 484, 492, 495, 499, 521, 598], "ts2": 293, "ts3": 293, "ts_asimov": 309, "ts_image_estim": 475, "ts_scan": [125, 127], "ts_threshold": [148, 290], "ts_threshold_ul": [487, 533], "ts_to_sigma": [476, 600], "tsimageestim": 447, "tsmap": 455, "tsmap_est": 380, "tsmapestim": [121, 146, 147, 380, 408, 411, 434, 435, 437, 439, 453, 455, 468, 475, 535], "tstart": [88, 91, 400, 402, 467, 477, 482, 485, 486, 489, 507], "tstop": [88, 400, 402, 467, 477, 482, 485, 489, 507], "tt": [86, 94, 369, 370, 413, 478, 485, 489, 602], "tth_sec3": 201, "tupl": [16, 19, 20, 26, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 41, 56, 83, 84, 87, 88, 90, 91, 102, 103, 105, 106, 110, 111, 126, 130, 136, 150, 151, 153, 154, 155, 156, 157, 158, 161, 163, 164, 165, 166, 167, 169, 172, 177, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 207, 208, 209, 212, 221, 222, 225, 229, 231, 232, 233, 238, 244, 245, 248, 252, 254, 256, 257, 258, 263, 268, 270, 271, 272, 273, 276, 277, 280, 292, 294, 297, 326, 336, 343, 387, 499, 547], "turn": [83, 88, 388, 390, 401, 507, 595], "tutori": [82, 99, 122, 132, 135, 181, 387, 390, 391, 396, 399, 400, 401, 402, 403, 404, 405, 408, 416, 418, 422, 423, 424, 425, 428, 429, 430, 431, 432, 433, 434, 435, 436, 438, 439, 441, 442, 445, 446, 447, 448, 449, 450, 453, 454, 455, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 470, 472, 473, 474, 475, 477, 478, 479, 481, 482, 484, 485, 486, 487, 488, 489, 490, 492, 493, 494, 495, 496, 497, 499, 501, 502, 503, 504, 505, 506, 508, 510, 511, 512, 515, 517, 518, 519, 520, 521, 522, 535, 536, 538, 547, 595, 598], "tutorials_jupyt": [417, 513], "tutorials_python": 513, "tweak": [403, 439, 455, 499], "twice": [124, 547, 601], "twinx": 458, "two": [19, 20, 26, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 59, 77, 86, 87, 89, 91, 102, 103, 106, 110, 111, 120, 139, 150, 151, 152, 153, 156, 157, 158, 159, 160, 163, 165, 167, 168, 172, 177, 179, 195, 196, 197, 198, 199, 201, 204, 205, 207, 208, 209, 214, 221, 222, 223, 224, 225, 226, 227, 228, 229, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 248, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 275, 276, 277, 278, 279, 280, 281, 282, 290, 307, 309, 344, 354, 376, 381, 384, 386, 387, 388, 390, 394, 396, 397, 398, 399, 401, 402, 403, 404, 405, 407, 408, 411, 412, 413, 415, 417, 418, 420, 441, 447, 449, 453, 455, 465, 466, 473, 474, 476, 479, 486, 492, 493, 494, 495, 497, 499, 500, 502, 503, 504, 507, 509, 518, 519, 525, 531, 532, 533, 535, 544, 547, 548, 565, 600, 601], "txt": [127, 412, 414, 417, 501, 508], "tyler": 441, "tynhefci": 489, "type": [16, 19, 20, 26, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 69, 84, 87, 89, 90, 91, 96, 99, 100, 102, 103, 105, 115, 124, 125, 126, 127, 129, 136, 170, 176, 194, 195, 196, 197, 199, 201, 204, 205, 207, 208, 209, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 275, 276, 277, 278, 279, 280, 281, 282, 283, 314, 344, 390, 393, 396, 397, 398, 399, 401, 402, 403, 406, 410, 411, 413, 415, 418, 419, 424, 432, 439, 445, 446, 447, 453, 455, 459, 460, 462, 464, 465, 466, 467, 468, 470, 471, 473, 474, 475, 476, 477, 478, 479, 482, 484, 485, 486, 489, 492, 493, 494, 495, 497, 498, 499, 500, 501, 502, 503, 504, 507, 508, 509, 518, 519, 521, 523, 535, 547, 552, 553, 554, 555, 556, 557, 558, 559, 560, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 585, 586, 587, 588, 589, 590, 591, 592, 593, 596, 597, 598], "typeerror": [16, 84, 90, 105, 126, 314, 401, 411, 415], "typic": [125, 393, 396, 398, 405, 409, 410, 411, 412, 414, 417, 420, 421, 460, 466, 471, 479, 482, 484, 485, 492, 493, 494, 497, 500, 502, 503, 523, 530, 531, 532, 540, 544, 596, 597], "typo": [387, 425, 451, 452, 455], "u": [19, 20, 26, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 66, 83, 85, 87, 91, 96, 103, 106, 110, 111, 116, 119, 120, 125, 127, 129, 131, 136, 144, 145, 153, 155, 164, 194, 195, 196, 197, 199, 200, 204, 205, 206, 207, 208, 209, 221, 222, 225, 229, 231, 232, 233, 238, 242, 244, 245, 248, 252, 254, 256, 257, 258, 263, 268, 270, 271, 272, 273, 276, 280, 283, 284, 293, 312, 313, 314, 334, 382, 387, 390, 394, 395, 396, 402, 403, 404, 405, 410, 411, 414, 415, 428, 429, 430, 447, 448, 449, 458, 459, 460, 462, 464, 466, 467, 468, 470, 471, 473, 474, 475, 476, 477, 478, 479, 482, 484, 485, 486, 487, 489, 491, 492, 493, 494, 495, 497, 498, 499, 500, 501, 502, 503, 504, 506, 507, 508, 509, 510, 518, 519, 521, 525, 532, 533, 535, 537, 542, 544, 545, 548, 553, 555, 556, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 585, 586, 587, 588, 589, 590, 591, 592], "u03c3": 476, "u18": [33, 38], "ua": 489, "uc": [87, 91], "ufunc": [196, 197, 199, 205, 208, 209, 466, 489], "ui": [33, 38, 50, 52, 53, 58, 60, 61, 62, 83, 88, 156, 248, 283, 284], "uk": [307, 309], "ul": [67, 124, 125, 127, 128, 129, 132, 133, 136, 291, 474, 479, 486, 492], "ultim": 387, "ultranest": 416, "un": [399, 413, 436, 501], "un2hz4ac": 494, "unambigu": 502, "unbehaun": 454, "unbin": [399, 400, 448], "unboundlocalerror": 387, "unbundl": 603, "unc_": 77, "uncertaint": 405, "uncertainti": [52, 77, 103, 106, 110, 111, 292, 294, 391, 404, 416, 446, 462, 464, 487, 495, 504, 519, 596, 597, 599], "unchang": [103, 106, 110, 111, 116, 119, 125, 127, 150, 151, 152, 153, 154, 155, 156, 157, 158, 160, 161, 163, 165, 166, 167, 168, 169, 194, 195, 196, 197, 199, 200, 204, 205, 207, 208, 209, 447], "unclear": [387, 397, 398, 404, 414], "uncom": [403, 507], "undefin": 601, "under": [72, 91, 134, 137, 138, 146, 147, 307, 387, 390, 391, 396, 404, 413, 448, 449, 459, 465, 513, 518, 520, 531, 600, 601], "underestim": 533, "underflow": 206, "underli": [16, 84, 87, 90, 91, 105, 126, 204, 400, 462, 492, 499, 504, 521, 523, 532, 544, 547], "underscor": 387, "understand": [403, 420, 422, 425, 433, 434, 460, 464, 465, 466, 470, 477, 478, 485, 486, 490, 499, 500, 501, 507, 518, 519, 598], "undertak": 407, "underwai": 416, "unevenli": [139, 302], "unexpect": [16, 84, 90, 105, 126, 509], "unfold": 597, "unfreez": [19, 20, 26, 218, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 248, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 275, 276, 277, 278, 279, 280, 281, 282, 573], "unfreeze_al": [218, 220, 501], "unfrozen": 542, "unheard": 598, "uni": [415, 417], "uni_prior_stat_sum": 504, "unicod": [87, 91], "unid": 67, "unidimension": 200, "unif": 433, "unifi": [87, 91, 391, 396, 401, 428, 431, 433, 434, 435, 436, 439, 448, 449, 597], "uniform": [164, 214, 246, 282, 343, 387, 396, 398, 399, 409, 411, 415, 416, 430, 431, 435, 439, 455, 460, 499, 504, 596], "uniform_filt": [130, 209], "uniformli": [400, 533], "uniformprior": [415, 455, 504], "uninstal": 386, "union": [84, 86, 89, 90, 103, 105, 106, 126, 204, 349, 401, 402, 413, 414, 431, 531], "uniqu": [87, 91, 100, 153, 195, 196, 197, 198, 199, 205, 207, 208, 209, 218, 220, 227, 235, 251, 267, 277, 380, 397, 398, 399, 400, 410, 413, 434, 455, 465, 493, 502, 509, 548, 595], "unique_id": 502, "unique_paramet": [218, 220], "uniquifi": [87, 91], "unit": [6, 19, 20, 26, 27, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 52, 66, 83, 85, 87, 88, 91, 96, 102, 103, 106, 108, 110, 111, 112, 116, 117, 119, 120, 125, 127, 129, 131, 136, 144, 145, 150, 151, 152, 153, 155, 156, 157, 158, 160, 163, 164, 165, 166, 167, 168, 173, 176, 179, 194, 195, 196, 197, 198, 199, 200, 201, 202, 204, 205, 206, 207, 208, 209, 217, 219, 221, 222, 224, 225, 228, 229, 231, 232, 233, 234, 235, 237, 238, 239, 240, 241, 242, 243, 244, 245, 248, 252, 254, 255, 256, 257, 258, 259, 263, 264, 265, 266, 267, 268, 270, 271, 272, 273, 276, 277, 278, 279, 280, 283, 284, 293, 302, 312, 313, 314, 344, 358, 359, 360, 362, 371, 372, 373, 376, 377, 378, 382, 388, 396, 398, 401, 403, 405, 410, 411, 415, 416, 428, 429, 431, 439, 441, 447, 448, 450, 451, 452, 453, 455, 458, 459, 460, 462, 464, 465, 466, 467, 468, 470, 471, 473, 474, 475, 476, 477, 478, 479, 482, 484, 485, 486, 487, 489, 491, 492, 493, 494, 495, 497, 498, 499, 500, 501, 502, 503, 504, 506, 507, 508, 509, 510, 518, 519, 521, 525, 527, 528, 529, 532, 533, 535, 537, 539, 540, 542, 544, 545, 546, 547, 548, 552, 553, 554, 555, 556, 557, 558, 559, 560, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 585, 586, 587, 588, 589, 590, 591, 592, 593, 597], "unit_string_format": [453, 458], "unitbas": 314, "uniti": [130, 198, 279, 416, 451, 555], "unitless": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 235, 277], "unitsmap": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40], "unitswarn": [458, 467, 470, 473, 475, 482, 486, 507], "univers": [25, 196, 197, 199, 205, 208, 209, 597], "univsers": 20, "unknown": [16, 84, 90, 102, 105, 126, 294, 468, 495, 597, 599, 600], "unless": [90, 93, 95, 128, 129, 132, 136, 172, 314, 386, 393, 412, 414, 497], "unlik": [87, 91, 290, 394, 405], "unmaintain": 429, "unmask": [87, 91], "unnam": [87, 91, 202], "unnecessari": [439, 450, 473], "unneed": 453, "unphys": 601, "unrealist": 387, "unrel": 602, "unreli": 507, "unsaf": 387, "unstabl": [387, 507], "unsupport": 404, "untar": 507, "until": [387, 394, 401, 412, 446], "unus": [403, 431, 433], "unusu": 392, "unweight": [106, 111], "unzip": 507, "up": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 52, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 74, 102, 129, 131, 136, 157, 163, 165, 167, 204, 314, 387, 388, 391, 392, 394, 395, 396, 399, 401, 403, 404, 405, 407, 409, 413, 415, 416, 418, 419, 420, 422, 424, 427, 429, 430, 431, 432, 433, 434, 435, 436, 439, 443, 445, 446, 447, 448, 449, 455, 464, 465, 473, 476, 477, 504, 507, 508, 548, 598], "upcast": 314, "upcom": [395, 396], "updat": [15, 16, 84, 87, 90, 91, 104, 105, 109, 126, 203, 217, 219, 227, 251, 279, 290, 334, 354, 387, 390, 392, 393, 394, 395, 396, 399, 404, 409, 411, 413, 414, 416, 417, 418, 420, 421, 428, 429, 430, 431, 432, 433, 434, 436, 438, 439, 440, 441, 442, 445, 446, 447, 448, 450, 453, 454, 455, 499, 502, 546, 547], "update_config": 15, "update_forward_ref": [16, 84, 90, 105, 126], "update_from_dict": [217, 219], "update_link_label": [227, 251], "update_parameters_from_t": [227, 251], "updated_model": 416, "upgrad": [195, 386, 412, 421], "upload": [404, 417], "upon": [103, 106, 110, 111, 396, 470, 501, 507, 531], "upper": [17, 18, 19, 20, 21, 22, 24, 25, 26, 27, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 77, 80, 102, 124, 125, 126, 127, 128, 129, 132, 133, 136, 137, 146, 153, 201, 206, 214, 221, 222, 225, 226, 229, 231, 232, 233, 234, 238, 239, 241, 242, 243, 244, 245, 248, 252, 254, 256, 257, 258, 259, 263, 266, 268, 270, 271, 272, 273, 276, 278, 280, 281, 291, 292, 294, 414, 424, 435, 439, 446, 447, 448, 454, 464, 468, 479, 484, 493, 494, 498, 518, 531, 533, 535], "upper_error": 127, "upsampl": [166, 194, 195, 196, 197, 198, 199, 200, 201, 204, 205, 206, 207, 208, 209, 430, 450], "upsample_geom": 166, "upstream": [387, 390, 417], "upward": [292, 294], "url": 395, "us": [11, 13, 16, 17, 18, 19, 20, 21, 22, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 35, 36, 37, 39, 40, 41, 46, 47, 53, 56, 57, 59, 65, 69, 70, 71, 74, 75, 80, 82, 83, 84, 85, 86, 87, 88, 90, 91, 93, 94, 95, 96, 99, 101, 102, 103, 104, 105, 106, 108, 109, 110, 111, 114, 115, 118, 122, 124, 125, 126, 127, 128, 129, 130, 132, 133, 134, 136, 137, 139, 140, 141, 142, 144, 145, 146, 147, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 160, 161, 163, 164, 165, 166, 167, 168, 169, 171, 172, 173, 176, 179, 180, 181, 182, 183, 184, 185, 186, 187, 189, 192, 193, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 231, 232, 233, 234, 237, 238, 239, 240, 241, 242, 243, 244, 245, 248, 251, 252, 253, 254, 255, 256, 257, 258, 259, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 275, 276, 277, 278, 279, 280, 281, 284, 286, 291, 293, 295, 307, 308, 309, 312, 314, 322, 325, 326, 327, 334, 335, 338, 343, 344, 351, 354, 370, 371, 373, 374, 376, 377, 378, 380, 381, 382, 383, 384, 386, 388, 389, 390, 391, 392, 393, 394, 395, 396, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 413, 414, 417, 418, 419, 420, 422, 423, 425, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 439, 440, 441, 443, 444, 445, 446, 447, 448, 449, 450, 451, 453, 454, 455, 457, 458, 459, 460, 461, 462, 464, 466, 467, 468, 470, 471, 473, 474, 475, 478, 479, 482, 485, 486, 487, 489, 490, 491, 492, 494, 496, 498, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 513, 514, 516, 520, 521, 524, 525, 535, 537, 538, 539, 541, 545, 546, 548, 549, 552, 553, 554, 555, 556, 557, 558, 559, 560, 562, 563, 564, 565, 566, 567, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 582, 583, 585, 586, 587, 588, 589, 590, 591, 592, 593, 596, 597, 598, 599, 600, 602, 603], "usabl": 387, "usag": [16, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 82, 84, 90, 105, 122, 126, 132, 135, 181, 194, 195, 204, 207, 338, 388, 393, 397, 398, 400, 402, 406, 411, 432, 453, 454, 492, 498, 500, 501, 513, 598], "use_cach": 252, "use_center_as_plot_label": 201, "use_enum_valu": [16, 84, 90, 105, 126], "use_evaluation_region": [227, 251], "use_fft": 209, "use_local_fil": [87, 91], "use_nullable_int": [87, 91], "use_region_cent": [176, 183, 186, 187, 189, 190, 439, 460], "useless": 507, "user": [15, 19, 20, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 77, 82, 88, 124, 129, 217, 221, 224, 225, 228, 229, 231, 232, 233, 234, 237, 238, 239, 240, 241, 242, 243, 244, 245, 248, 255, 256, 257, 258, 259, 263, 264, 265, 266, 268, 271, 272, 273, 278, 279, 387, 388, 390, 392, 393, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 409, 411, 412, 413, 414, 417, 418, 419, 420, 421, 422, 425, 432, 439, 440, 446, 447, 448, 450, 465, 468, 476, 477, 478, 493, 494, 497, 499, 500, 501, 502, 503, 513, 518, 532, 533, 534, 535, 540, 544, 547, 550, 557, 561, 583, 594, 595, 598], "userdataset": 399, "usernam": 390, "userwarn": [464, 466, 474, 475, 479, 508], "uses_quant": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40], "usr": 598, "usual": [29, 82, 83, 125, 144, 150, 151, 152, 164, 205, 322, 387, 388, 390, 392, 393, 394, 395, 401, 402, 407, 413, 416, 418, 453, 458, 459, 460, 462, 464, 466, 467, 470, 471, 475, 477, 478, 482, 484, 485, 486, 489, 490, 491, 493, 500, 503, 506, 509, 519, 523, 531, 535, 537, 538, 539, 541, 544, 548, 554, 595, 597, 598, 599], "ut1": 602, "utc": [86, 88, 105, 126, 368, 477, 484, 485, 489, 499, 502, 585, 586, 587, 588, 589, 590, 591, 592, 593, 602], "utf": [87, 91], "utf8": [16, 84, 90, 105, 126], "util": [6, 96, 105, 112, 116, 117, 118, 119, 126, 127, 129, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 155, 185, 186, 187, 188, 189, 190, 191, 192, 193, 289, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 387, 396, 398, 399, 400, 401, 411, 427, 430, 431, 432, 433, 440, 441, 444, 445, 446, 447, 448, 449, 453, 454, 458, 460, 464, 465, 466, 467, 468, 470, 471, 473, 474, 475, 476, 477, 478, 479, 484, 485, 486, 487, 490, 491, 492, 493, 494, 495, 497, 498, 499, 500, 501, 502, 503, 504, 506, 507, 508, 509, 510, 518, 519, 521, 523, 524, 535, 597], "utilis": [145, 290, 388, 420, 422, 458, 464, 468, 476, 490, 494, 499, 503, 509, 519, 532, 535, 542], "v": [26, 31, 32, 37, 87, 91, 157, 163, 165, 166, 167, 169, 178, 185, 203, 278, 290, 318, 390, 395, 402, 403, 414, 415, 416, 417, 418, 441, 458, 484, 491, 503, 518], "v0": [95, 394, 395, 398, 399, 401, 404, 406, 407, 412, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 441, 442, 448, 449, 450, 477, 478, 497, 501, 507], "v1": [13, 101, 387, 394, 396, 398, 403, 404, 405, 406, 412, 413, 417, 433, 434, 435, 441, 446, 450, 451, 452, 453, 454, 455, 479, 508, 569], "v15": 455, "v2": [413, 414, 439, 447, 454, 473], "v3": [431, 473], "v5rg2uat": 489, "v_0": [37, 49], "v_glat": 321, "v_glon": 321, "va": 553, "vagu": 392, "vain": 390, "val": [87, 91, 196, 197, 199, 205, 208, 209, 218, 220, 499, 547], "valfmt": 376, "valid": [16, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 84, 87, 90, 91, 105, 107, 125, 126, 129, 138, 147, 168, 182, 194, 195, 196, 197, 198, 199, 200, 201, 202, 204, 205, 207, 208, 209, 307, 309, 314, 332, 386, 387, 396, 400, 403, 404, 413, 433, 441, 450, 460, 464, 489, 495, 498, 499, 502, 508, 533, 535, 540, 597], "valid_hdu_class": [82, 87], "valid_hdu_typ": 87, "valid_interv": 489, "valid_tim": 489, "validate_al": 414, "validate_assign": [16, 84, 90, 105, 126, 414], "validate_default": [16, 84, 90, 105, 126], "validate_earth_loc": 90, "validate_loc": 414, "validate_scalar": 90, "validate_zenith_angl": 414, "validationerror": [16, 84, 90, 105, 126, 414], "valle": 38, "valleespir": 525, "valu": [11, 15, 16, 19, 20, 26, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 42, 52, 83, 84, 86, 87, 88, 90, 91, 92, 95, 99, 100, 101, 102, 103, 105, 106, 110, 111, 113, 114, 120, 122, 124, 125, 126, 127, 128, 129, 130, 132, 133, 134, 136, 137, 139, 144, 145, 146, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 163, 165, 166, 167, 168, 169, 172, 176, 182, 183, 185, 186, 187, 189, 190, 194, 195, 196, 197, 198, 199, 200, 201, 203, 204, 205, 206, 207, 208, 209, 214, 216, 217, 218, 219, 220, 221, 222, 224, 225, 226, 227, 228, 229, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 248, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 275, 276, 277, 278, 279, 280, 281, 282, 283, 290, 291, 292, 294, 295, 297, 298, 299, 302, 307, 309, 314, 318, 326, 327, 341, 344, 354, 358, 373, 376, 377, 378, 388, 390, 393, 398, 399, 401, 403, 405, 407, 410, 411, 414, 416, 430, 433, 439, 450, 453, 454, 455, 458, 459, 460, 462, 464, 465, 466, 467, 468, 470, 471, 473, 474, 475, 477, 478, 479, 482, 484, 485, 486, 487, 489, 490, 491, 492, 493, 494, 495, 497, 498, 500, 501, 502, 503, 507, 508, 509, 510, 513, 518, 519, 521, 523, 527, 528, 529, 533, 535, 539, 547, 548, 552, 553, 554, 555, 556, 557, 558, 559, 560, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 585, 586, 587, 588, 589, 590, 591, 592, 593, 598, 599, 600, 601], "value_rang": 91, "value_scan": 291, "valueerror": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 72, 87, 91, 92, 100, 227, 251, 387, 401, 414], "values_equ": [87, 91], "values_err": 487, "values_scal": [150, 151, 152, 205, 209, 242, 275, 279, 280, 326, 451, 453, 478, 497], "vanilla": [87, 91], "var": [300, 390, 420, 422], "vari": [68, 104, 109, 132, 164, 214, 326, 354, 399, 401, 402, 412, 433, 436, 457, 459, 470, 475, 476, 478, 483, 488, 489, 498, 502, 504, 508, 513], "variability_amplitud": 490, "variability_amplitude_100": 490, "variability_amplitude_error": 490, "variability_amplitude_signific": 490, "variability_estim": [457, 485, 488, 490], "variabl": [11, 16, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 82, 84, 90, 91, 105, 126, 139, 140, 209, 292, 294, 297, 298, 299, 300, 302, 308, 325, 352, 387, 388, 390, 400, 402, 403, 418, 420, 422, 428, 429, 445, 446, 447, 453, 454, 455, 457, 458, 460, 464, 465, 466, 467, 468, 470, 471, 473, 474, 475, 476, 478, 479, 483, 484, 485, 486, 487, 488, 489, 491, 492, 493, 495, 498, 499, 500, 501, 502, 504, 506, 507, 508, 509, 510, 513, 518, 519, 521, 540, 598, 599, 600], "varianc": [96, 141, 142, 299, 300, 313, 402, 454, 503, 542], "variant": 418, "variat": [140, 243, 299, 393, 403, 458, 490, 497, 498, 545, 600], "varieti": [398, 596], "variou": [122, 128, 129, 132, 133, 136, 145, 387, 393, 397, 399, 402, 411, 414, 418, 420, 439, 440, 454, 459, 462, 465, 468, 474, 476, 484, 494, 495, 518, 531, 535, 596, 602], "vasco": 455, "vast": [404, 441], "vaughan": [300, 490], "ve": [387, 388, 390, 598], "veaqnbex": 489, "vector": [194, 195, 196, 197, 199, 204, 205, 207, 208, 209, 499, 539, 547], "vega": 448, "vel": 487, "vel_di": [45, 525], "vela": [66, 427, 462, 487, 521], "veloc": [31, 32, 37, 45, 49, 318, 321], "ver": 499, "verbos": [11, 82, 388, 410, 598, 600], "veri": [63, 87, 91, 144, 214, 377, 386, 387, 388, 389, 392, 393, 398, 400, 401, 402, 403, 404, 405, 406, 407, 410, 411, 414, 416, 418, 449, 458, 459, 467, 490, 492, 494, 495, 499, 504, 508, 521, 531, 535, 548, 558, 559, 595, 597, 598, 599], "verif": [100, 227, 251, 350, 353, 464, 474, 508], "verifi": [218, 220, 240, 290, 387, 400, 492, 535], "verifywarn": 535, "verita": [97, 420, 425, 508], "versa": 195, "version": [11, 78, 85, 87, 91, 127, 184, 386, 388, 390, 391, 394, 395, 396, 397, 401, 404, 407, 413, 414, 415, 416, 418, 419, 420, 421, 423, 425, 427, 428, 429, 430, 432, 433, 438, 440, 441, 443, 446, 447, 448, 450, 451, 453, 454, 455, 458, 460, 464, 465, 466, 467, 468, 470, 471, 473, 474, 475, 476, 477, 478, 479, 484, 485, 486, 487, 491, 492, 493, 495, 498, 499, 500, 501, 502, 504, 506, 507, 508, 509, 510, 518, 519, 521, 533, 598], "versu": [150, 156, 290, 292, 294, 507, 529], "vert": 258, "vertex": 401, "vhe": [460, 523], "vi": 35, "via": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 67, 82, 83, 91, 104, 109, 197, 202, 212, 386, 388, 390, 395, 399, 401, 402, 403, 404, 405, 406, 408, 410, 413, 414, 415, 416, 417, 418, 420, 421, 428, 436, 444, 446, 447, 448, 452, 453, 455, 458, 459, 460, 462, 464, 465, 466, 467, 468, 470, 471, 473, 474, 475, 476, 477, 478, 479, 482, 484, 485, 486, 487, 489, 490, 491, 492, 493, 494, 495, 497, 498, 499, 500, 501, 502, 503, 504, 506, 507, 508, 509, 510, 516, 518, 519, 521, 535, 539, 544, 548, 552, 553, 554, 555, 556, 557, 558, 559, 560, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 585, 586, 587, 588, 589, 590, 591, 592, 593, 595, 598, 602], "viabil": 414, "vice": 195, "vicin": 416, "victor": 443, "view": [83, 87, 91, 150, 151, 152, 153, 156, 157, 158, 159, 160, 163, 165, 167, 168, 173, 196, 197, 199, 203, 205, 208, 209, 235, 316, 320, 374, 387, 401, 416, 429, 434, 439, 441, 448, 449, 464, 466, 471, 473, 477, 489, 493, 497, 498, 500, 507, 508, 535, 537, 538, 539, 540, 541, 542, 544, 597], "vika": 439, "vila": 455, "vin\u00edciu": 446, "viridi": [466, 491], "virtual": [390, 418, 420, 421, 422, 598], "visibl": [87, 91, 377, 378, 395, 439, 458, 477, 509, 519, 521, 597], "vision": 392, "visit": [416, 478], "visual": [6, 197, 209, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 401, 416, 434, 435, 453, 454, 455, 464, 466, 471, 473, 475, 478, 495, 497, 503, 506, 519, 521, 535, 544, 549, 553, 596], "visualis": [384, 399, 401, 408, 435, 450, 466, 497, 502, 504, 507, 535], "vline": [529, 553, 554], "vm1iqiqc": 467, "vmax": [103, 106, 110, 111, 377, 378, 470, 473, 475, 482, 493, 499, 500, 508, 509, 518, 519, 544, 603], "vmin": [103, 106, 110, 111, 377, 378, 468, 473, 482, 493, 499, 500, 508, 509, 518, 519, 544, 603], "volum": [27, 200, 204, 207], "vorokh": [444, 445], "voruganti": [446, 447], "vstack": [83, 86, 400], "vtransit": 603, "vuillaum": [413, 447], "vwc6pqhm": 502, "vx": [318, 321, 412], "vy": [318, 321], "vyoxk1km": 489, "vyvhxada": 489, "vz": [318, 321], "w": [26, 31, 49, 86, 193, 206, 311, 388, 412, 468, 471, 479, 491, 498, 502, 504, 544, 599, 601], "wa": [16, 19, 20, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 59, 84, 85, 87, 90, 91, 93, 94, 103, 105, 120, 126, 128, 129, 132, 136, 172, 217, 221, 224, 225, 228, 229, 231, 232, 233, 234, 237, 238, 239, 240, 241, 242, 243, 244, 245, 248, 255, 256, 257, 258, 259, 263, 264, 265, 266, 268, 271, 272, 273, 278, 279, 380, 387, 390, 392, 393, 394, 395, 396, 397, 400, 401, 403, 404, 405, 406, 407, 408, 410, 411, 412, 413, 414, 415, 418, 428, 431, 432, 433, 434, 435, 436, 443, 447, 448, 449, 450, 451, 452, 453, 459, 462, 464, 471, 473, 475, 479, 498, 504, 507, 508, 509, 510, 521, 598], "wagner": 490, "wai": [33, 38, 83, 87, 91, 201, 293, 338, 344, 386, 387, 388, 390, 392, 393, 394, 395, 397, 398, 399, 401, 402, 403, 404, 407, 408, 411, 413, 416, 420, 421, 422, 424, 427, 431, 447, 448, 462, 464, 466, 470, 473, 490, 492, 493, 494, 495, 498, 499, 500, 501, 503, 507, 508, 509, 510, 513, 520, 525, 532, 534, 535, 539, 548, 596, 598, 600], "wait": [387, 417, 418], "wald": [307, 309], "wald1943": [307, 309], "walk": 416, "walker": 416, "wall": [83, 88], "want": [16, 19, 20, 26, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 82, 83, 84, 90, 105, 108, 126, 153, 179, 204, 221, 222, 225, 229, 231, 232, 233, 238, 244, 245, 248, 252, 254, 256, 257, 258, 263, 268, 270, 271, 272, 273, 276, 280, 387, 389, 390, 392, 393, 394, 397, 401, 402, 403, 405, 406, 407, 416, 418, 419, 420, 421, 422, 424, 425, 428, 448, 460, 464, 465, 466, 467, 470, 477, 478, 482, 484, 486, 487, 489, 491, 492, 493, 495, 498, 499, 500, 501, 502, 504, 507, 508, 518, 519, 521, 539, 595, 598, 599, 600, 601, 602], "ward": 312, "warmup": 416, "warn": [11, 16, 26, 82, 84, 87, 90, 91, 105, 126, 197, 217, 218, 219, 220, 275, 276, 277, 279, 373, 412, 418, 430, 447, 452, 453, 454, 455, 458, 464, 467, 468, 470, 473, 474, 475, 478, 482, 486, 487, 507, 508, 535, 560, 569, 598], "warn_miss": 87, "warn_with_traceback": 387, "wasn": [394, 448], "watch": [508, 602], "water": [420, 509], "watson": 429, "wavelength": 406, "wavelet": [427, 445], "wc": [13, 16, 83, 103, 106, 110, 129, 171, 179, 180, 184, 195, 196, 197, 199, 204, 205, 207, 208, 209, 224, 227, 228, 237, 240, 251, 253, 264, 265, 269, 275, 279, 347, 382, 387, 393, 401, 406, 429, 430, 431, 433, 439, 447, 448, 452, 454, 464, 465, 468, 470, 471, 473, 475, 479, 484, 487, 491, 493, 497, 498, 500, 501, 502, 508, 518, 519, 521, 544, 547, 553, 554, 555, 560, 603], "wcda": [57, 70], "wcs_geom": [204, 227, 251, 499, 548], "wcs_geom_3d": 499, "wcs_geom_cel": 499, "wcs_map": [208, 209, 380], "wcs_tile": [195, 197], "wcsax": [103, 106, 110, 111, 197, 204, 205, 209, 227, 251, 382, 384, 473, 499, 521, 552, 556, 557, 558], "wcsconfig": 16, "wcsgeom": [23, 83, 103, 106, 110, 111, 112, 115, 117, 118, 124, 125, 136, 155, 164, 166, 176, 189, 190, 194, 195, 204, 208, 209, 223, 224, 228, 237, 240, 253, 255, 264, 265, 269, 275, 279, 388, 393, 401, 429, 432, 433, 434, 439, 452, 454, 455, 464, 468, 470, 475, 477, 478, 479, 482, 487, 491, 493, 494, 497, 498, 499, 500, 502, 508, 509, 519, 521, 531, 533, 542, 544, 545, 548, 552, 554, 555, 556, 557], "wcslib": 387, "wcsmap": [196, 197, 199, 209, 450], "wcsndmap": [103, 106, 112, 117, 120, 136, 144, 164, 166, 169, 171, 173, 178, 179, 180, 181, 184, 189, 190, 195, 196, 197, 199, 205, 207, 208, 210, 211, 227, 251, 267, 275, 374, 380, 382, 393, 432, 433, 434, 436, 439, 441, 448, 450, 453, 454, 468, 470, 479, 491, 493, 498, 499, 508, 521, 531, 533, 541, 544], "wcsprm": 560, "wcsshape": 499, "we": [13, 19, 20, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 65, 83, 87, 88, 89, 91, 95, 102, 136, 178, 204, 207, 217, 221, 224, 225, 228, 229, 231, 232, 233, 234, 237, 238, 239, 240, 241, 242, 243, 244, 245, 248, 255, 256, 257, 258, 259, 263, 264, 265, 266, 268, 271, 272, 273, 278, 279, 284, 362, 387, 388, 390, 392, 393, 394, 396, 397, 398, 399, 400, 401, 404, 405, 406, 407, 408, 409, 410, 413, 414, 416, 417, 418, 419, 420, 421, 422, 424, 427, 428, 429, 430, 435, 439, 441, 446, 447, 448, 449, 458, 459, 460, 462, 464, 465, 466, 467, 468, 470, 471, 473, 474, 475, 476, 477, 478, 479, 482, 484, 485, 486, 487, 489, 490, 491, 492, 493, 494, 495, 497, 498, 499, 500, 501, 502, 503, 504, 507, 508, 513, 516, 518, 519, 521, 532, 539, 540, 542, 544, 547, 559, 563, 573, 595, 598, 599, 600, 601, 602], "weak": [406, 416, 494, 504], "weaker": 290, "weakli": 500, "web": [87, 91, 395, 413, 418, 424, 425, 439, 447, 455, 492], "webpag": [389, 395, 407, 413, 417, 447, 450], "websit": 455, "wedg": 401, "week": [390, 395, 405, 407, 412, 417], "weekli": [393, 396, 400, 401, 484], "wegen": [447, 448], "weigh": [166, 169, 504], "weight": [67, 77, 106, 111, 147, 154, 155, 161, 164, 166, 169, 195, 196, 197, 199, 204, 205, 207, 208, 209, 236, 246, 260, 277, 282, 310, 415, 416, 449, 453, 476, 504, 531, 547], "weighted_chi2_paramet": 476, "weighted_kernel": 164, "weighted_sampl": 416, "welcom": [392, 401, 508], "well": [11, 19, 20, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 56, 67, 83, 87, 91, 106, 111, 116, 119, 124, 125, 133, 195, 199, 201, 205, 207, 217, 221, 224, 225, 227, 228, 229, 231, 232, 233, 234, 237, 238, 239, 240, 241, 242, 243, 244, 245, 248, 251, 255, 256, 257, 258, 259, 263, 264, 265, 266, 268, 271, 272, 273, 278, 279, 377, 378, 386, 387, 388, 389, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 413, 414, 416, 417, 418, 419, 420, 421, 424, 425, 428, 430, 431, 432, 433, 434, 435, 436, 439, 441, 442, 447, 448, 449, 453, 454, 459, 460, 461, 467, 471, 476, 478, 484, 486, 489, 493, 494, 495, 497, 498, 499, 500, 502, 506, 507, 508, 511, 513, 518, 519, 521, 531, 532, 533, 544, 547, 548, 595, 596, 598, 600], "went": 428, "were": [16, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 84, 90, 105, 126, 140, 298, 387, 392, 393, 394, 395, 400, 402, 403, 404, 405, 406, 407, 408, 410, 412, 415, 418, 428, 431, 432, 433, 434, 435, 436, 439, 442, 447, 448, 451, 474, 487, 489, 500, 504, 507, 601], "wg": 417, "what": [13, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 46, 284, 344, 388, 393, 401, 404, 406, 407, 414, 416, 418, 426, 479, 491, 492, 494, 495, 507, 508, 513, 519, 520, 523, 531, 548, 582, 598, 599, 602], "whatev": [401, 403, 404, 598], "wheel": [404, 455], "when": [16, 19, 20, 26, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 52, 53, 83, 84, 86, 87, 88, 89, 90, 91, 100, 102, 103, 104, 105, 106, 108, 109, 110, 111, 124, 125, 126, 127, 143, 154, 155, 161, 166, 168, 169, 179, 182, 196, 197, 199, 201, 203, 205, 208, 209, 214, 215, 221, 222, 225, 227, 229, 231, 232, 233, 236, 238, 242, 244, 245, 246, 248, 251, 252, 254, 256, 257, 258, 260, 263, 268, 270, 271, 272, 273, 276, 279, 280, 282, 326, 386, 387, 388, 390, 392, 393, 394, 397, 399, 401, 402, 404, 407, 412, 413, 414, 415, 417, 420, 421, 422, 433, 441, 442, 447, 449, 452, 453, 454, 459, 466, 471, 475, 478, 479, 484, 485, 487, 492, 495, 498, 499, 502, 503, 507, 508, 531, 533, 535, 540, 542, 546, 547, 597, 599, 600, 601, 602], "when_us": 90, "whenev": [87, 91], "where": [11, 16, 19, 20, 26, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 52, 69, 83, 84, 87, 88, 90, 91, 105, 125, 126, 127, 130, 136, 153, 154, 155, 161, 166, 169, 171, 182, 193, 194, 195, 196, 197, 199, 201, 204, 205, 207, 208, 209, 210, 221, 222, 223, 224, 225, 226, 227, 228, 229, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 248, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 275, 276, 277, 278, 279, 280, 281, 282, 295, 298, 301, 303, 307, 314, 351, 388, 390, 392, 394, 395, 396, 397, 398, 399, 400, 401, 403, 405, 406, 407, 408, 409, 410, 411, 414, 415, 418, 420, 422, 424, 430, 442, 448, 458, 464, 470, 477, 478, 492, 498, 499, 500, 502, 504, 507, 508, 509, 521, 523, 531, 532, 535, 540, 547, 553, 554, 555, 558, 559, 563, 597, 598, 599, 600, 601, 602], "wherea": [393, 401, 404, 416, 598], "whether": [16, 19, 20, 26, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 83, 84, 86, 87, 88, 90, 91, 100, 103, 105, 106, 108, 110, 111, 125, 126, 127, 128, 136, 150, 151, 152, 153, 156, 157, 158, 160, 163, 165, 167, 168, 182, 194, 195, 196, 197, 198, 199, 200, 201, 204, 205, 206, 207, 208, 209, 214, 221, 222, 225, 227, 229, 231, 232, 233, 238, 242, 244, 245, 248, 251, 252, 254, 256, 257, 258, 263, 268, 270, 271, 272, 273, 276, 277, 279, 280, 293, 314, 323, 350, 353, 355, 356, 384, 392, 394, 401, 404, 406, 407, 414, 416, 453, 467, 482, 494, 498, 499, 521, 547, 599, 600], "which": [16, 19, 20, 26, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 41, 43, 56, 57, 59, 67, 70, 72, 77, 80, 83, 84, 85, 86, 87, 88, 89, 90, 91, 93, 94, 95, 96, 100, 102, 103, 105, 106, 108, 110, 111, 120, 122, 124, 125, 126, 127, 128, 129, 131, 132, 133, 135, 136, 137, 140, 144, 145, 146, 150, 151, 152, 153, 156, 157, 158, 160, 163, 164, 165, 166, 167, 168, 169, 171, 172, 176, 177, 182, 183, 193, 194, 195, 196, 197, 199, 200, 201, 204, 205, 207, 208, 209, 212, 214, 217, 219, 221, 222, 223, 224, 225, 227, 228, 229, 231, 232, 233, 234, 237, 238, 239, 240, 241, 242, 243, 244, 245, 248, 251, 252, 253, 254, 255, 256, 257, 258, 259, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 275, 276, 277, 278, 279, 280, 284, 290, 292, 293, 294, 298, 299, 300, 302, 307, 308, 309, 312, 326, 336, 346, 347, 365, 374, 376, 381, 383, 386, 388, 390, 392, 393, 394, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 413, 414, 415, 416, 417, 418, 419, 420, 422, 423, 425, 429, 430, 431, 433, 434, 435, 436, 439, 442, 448, 450, 453, 455, 458, 459, 460, 464, 467, 468, 470, 471, 473, 476, 477, 478, 479, 484, 486, 487, 489, 490, 492, 493, 494, 495, 498, 499, 500, 501, 502, 503, 504, 507, 508, 509, 510, 518, 519, 521, 525, 526, 531, 532, 533, 535, 537, 538, 539, 541, 542, 544, 546, 547, 548, 549, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 585, 586, 587, 588, 589, 590, 591, 595, 596, 597, 598, 599, 600, 601], "whichev": [195, 196, 197], "while": [87, 91, 106, 196, 197, 199, 201, 205, 208, 209, 387, 390, 392, 393, 394, 396, 399, 400, 402, 406, 408, 409, 411, 412, 413, 416, 417, 418, 420, 458, 464, 466, 470, 478, 486, 487, 493, 494, 497, 498, 499, 501, 502, 531, 533, 535, 546, 548, 598], "whilst": [388, 503, 513, 520], "whippl": 97, "whirlwind": 513, "white": [299, 376, 377, 475, 487, 495, 501, 523, 548], "whitespac": 332, "who": [413, 491, 523], "whole": [95, 120, 173, 176, 183, 186, 187, 189, 190, 195, 196, 197, 199, 208, 209, 252, 283, 292, 294, 387, 393, 399, 402, 413, 460, 464, 473, 478, 484, 487, 493, 502, 508, 510, 595], "whose": [413, 418, 478, 541, 554], "why": [387, 388, 392, 394, 401, 495, 548], "wi6z41j": 473, "wich": 416, "wide": [394, 413, 414, 429, 448, 462, 474, 597], "wider": [485, 500, 542], "widget": [196, 197, 199, 205, 208, 209, 473, 482, 499, 518, 519], "width": [16, 27, 68, 83, 87, 91, 103, 106, 110, 111, 112, 113, 114, 116, 117, 119, 120, 130, 136, 153, 154, 155, 158, 161, 164, 166, 169, 171, 176, 181, 194, 195, 196, 197, 198, 199, 200, 201, 204, 205, 206, 207, 208, 209, 224, 227, 228, 237, 239, 240, 251, 253, 264, 265, 267, 269, 275, 277, 279, 377, 378, 403, 410, 449, 465, 466, 468, 470, 471, 473, 475, 476, 477, 478, 479, 482, 484, 487, 491, 492, 493, 497, 498, 499, 500, 502, 508, 509, 518, 519, 521, 542, 544, 545, 546, 547, 548, 553, 554, 555, 557, 558, 559, 603], "width_err": 492, "width_error": 68, "width_min": 204, "width_pix": [195, 196, 197], "widthconfig": 16, "wiki": [34, 83, 88, 307, 309, 439, 510], "wikipedia": [34, 83, 88, 307, 309, 343, 401, 405], "wilei": 138, "wilk": [290, 307, 309, 533, 600], "willing": 390, "wind": [50, 471, 476, 502, 526], "window": [113, 114, 386, 387, 394, 404, 418, 419, 420, 422, 428, 444, 448, 468, 492, 597, 598, 600], "wise": [19, 20, 26, 87, 91, 144, 145, 197, 221, 222, 223, 224, 225, 226, 227, 228, 229, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 248, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 275, 276, 277, 278, 279, 280, 281, 282, 415, 441, 455, 471, 473, 531], "wish": [204, 390, 405, 476, 495], "with_bbox": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40], "with_bounding_box": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40], "with_units_from_data": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40], "withdraw": [397, 398, 399, 402, 409, 411], "withdrawn": [391, 392, 397, 398, 399, 402, 409, 411], "within": [128, 131, 144, 195, 209, 226, 227, 228, 234, 239, 240, 241, 242, 243, 251, 259, 264, 266, 267, 278, 281, 386, 387, 388, 392, 396, 401, 403, 404, 405, 406, 407, 410, 412, 413, 415, 416, 417, 418, 419, 420, 422, 442, 445, 447, 451, 453, 455, 465, 466, 473, 476, 484, 485, 486, 489, 492, 494, 497, 498, 499, 502, 503, 508, 513, 514, 521, 531, 534, 535, 597], "without": [13, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 132, 156, 194, 195, 200, 204, 207, 246, 384, 387, 390, 392, 395, 397, 401, 402, 403, 404, 406, 411, 416, 418, 429, 430, 434, 455, 465, 468, 473, 474, 489, 491, 498, 499, 500, 518, 535, 546, 547, 548, 593, 598, 600], "without_units_for_data": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40], "wjfylh18": 489, "wl": [26, 491], "wlh": 498, "wo": 487, "wobbl": [95, 486, 507], "wobbleregionfind": 441, "wobbleregionsfind": 466, "wolfram": [341, 342], "women": 444, "won": [120, 124, 128, 132, 136, 359, 412, 473, 499, 507, 601], "wong": [431, 455], "wood": [394, 445, 447, 448], "word": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 535], "work": [11, 13, 16, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 87, 91, 100, 127, 206, 351, 386, 387, 388, 390, 392, 394, 395, 396, 397, 398, 399, 401, 402, 403, 404, 405, 406, 407, 409, 412, 413, 416, 417, 418, 419, 420, 421, 423, 424, 425, 427, 428, 429, 430, 431, 433, 434, 440, 443, 444, 445, 446, 447, 448, 449, 450, 455, 458, 460, 462, 464, 465, 466, 467, 468, 470, 471, 473, 474, 475, 476, 477, 478, 479, 482, 484, 485, 486, 487, 489, 491, 492, 493, 495, 497, 498, 499, 500, 501, 502, 504, 506, 507, 508, 509, 510, 518, 519, 521, 531, 535, 545, 547, 560, 563, 569, 586, 592, 593, 596, 598], "workaround": [404, 455], "workflow": [395, 396, 403, 408, 412, 418, 420, 422, 433, 455, 465, 471, 513, 518, 519, 520], "workshop": 396, "world": [83, 207, 227, 251, 387, 393, 475, 521, 547], "worst": 390, "worth": [387, 523], "would": [16, 84, 87, 90, 91, 95, 105, 126, 196, 197, 199, 205, 208, 209, 246, 387, 390, 393, 394, 395, 398, 399, 401, 402, 403, 404, 405, 406, 407, 408, 411, 413, 414, 416, 430, 439, 462, 464, 467, 468, 482, 495, 499, 500, 502, 504, 508, 548], "wouldn": 401, "wrap": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 201, 263, 322, 401, 432, 455], "wrap_at": 398, "wrap_coord": 201, "wrapper": [56, 252, 263, 326, 401, 402, 416, 430, 433, 523, 535], "write": [11, 15, 16, 26, 82, 86, 87, 88, 91, 100, 102, 103, 106, 108, 110, 111, 125, 127, 150, 151, 152, 153, 154, 155, 156, 157, 158, 160, 161, 163, 164, 165, 166, 167, 168, 169, 196, 197, 199, 203, 205, 208, 209, 215, 227, 242, 251, 275, 276, 277, 278, 279, 356, 365, 388, 390, 396, 397, 398, 399, 400, 401, 403, 404, 406, 407, 409, 410, 411, 413, 414, 415, 418, 424, 427, 433, 436, 441, 443, 446, 447, 448, 449, 454, 455, 458, 464, 473, 474, 477, 479, 497, 501, 502, 507, 508, 516, 518, 519, 535, 540, 596, 599, 601], "write_arf": 108, "write_bkg": 108, "write_covari": [15, 100, 215, 227, 251], "write_dataset": 15, "write_ds9": 502, "write_model": 15, "write_pha": 108, "write_rmf": 108, "writeabl": 415, "writer": [87, 91, 407, 414], "writeto": [86, 150, 151, 152, 156, 157, 158, 160, 163, 165, 167, 168, 477], "written": [88, 100, 102, 103, 106, 108, 110, 111, 125, 127, 154, 155, 161, 166, 169, 196, 197, 199, 203, 205, 208, 209, 211, 387, 388, 390, 392, 396, 397, 407, 413, 415, 451, 458, 478, 501, 504, 523, 531, 532, 535, 548, 597], "wrong": [387, 437, 451, 452, 453], "wrote": 413, "wrt": [83, 166, 169, 387, 405, 486, 593], "wstat": [106, 111, 304, 305, 399, 427, 445, 446, 459, 464, 465, 467, 471, 475, 487, 493, 504, 506, 531, 596, 597], "wstatcountsstatist": [487, 600], "wt": [26, 491], "wun": 431, "www": [67, 87, 91, 138, 307, 309, 407, 507], "wyatt": [427, 597], "x": [19, 20, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 46, 67, 68, 87, 91, 103, 110, 130, 138, 144, 151, 201, 205, 206, 214, 217, 219, 221, 224, 225, 228, 229, 231, 232, 233, 234, 237, 238, 239, 240, 241, 242, 243, 244, 245, 248, 255, 256, 257, 258, 259, 263, 264, 265, 266, 268, 271, 272, 273, 278, 279, 293, 299, 300, 303, 317, 318, 319, 321, 325, 327, 332, 341, 376, 379, 380, 387, 388, 392, 394, 395, 396, 401, 412, 416, 417, 420, 422, 462, 467, 468, 475, 478, 487, 489, 490, 492, 495, 497, 499, 504, 508, 521, 529, 535, 553, 554, 598, 600], "x27": [494, 497], "x86_64": [458, 460, 464, 465, 466, 467, 468, 470, 471, 473, 474, 475, 476, 477, 478, 479, 484, 485, 486, 487, 491, 492, 493, 495, 498, 499, 500, 501, 502, 504, 506, 507, 508, 509, 510, 518, 519, 521], "x_": 130, "x_0": [196, 197, 199, 205, 208, 209], "x_1": 326, "x_2": 326, "x_3": 326, "x_bkg": 487, "x_edg": 131, "x_high": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40], "x_i": [196, 197, 199, 205, 208, 209], "x_j": 130, "x_low": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40], "x_max": [130, 339, 341, 479], "x_min": [130, 339, 341, 479], "x_n": [196, 197, 199, 205, 208, 209], "x_r_0": 240, "x_ref": [130, 479], "x_sigma": 237, "x_stddev": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40], "x_valu": [214, 495], "xarg": 387, "xaxi": [494, 535], "xerr": [458, 489, 504], "xf": 507, "xfail": 387, "xlabel": [388, 453, 471, 486, 489, 504, 508, 527, 528, 529, 553, 592], "xlim": [374, 473, 504, 508, 529, 603], "xmax": [17, 18, 21, 22, 24, 25, 27, 205, 415], "xmin": [17, 18, 21, 22, 24, 25, 27, 205, 415], "xml": [396, 397, 398, 432, 446, 448, 507, 523], "xmltodict": [440, 507], "xref": 130, "xspec": [229, 280, 311, 446, 459, 599], "xunit": [466, 563], "xviii": 407, "xx": [398, 413], "xxx": [87, 91, 392, 413], "xxx_by_coord": 499, "xxxx": 535, "xxy1x_k": 473, "xy": [464, 475, 479, 553], "xy_posit": [33, 34, 38], "xytext": 553, "xyz": 417, "xzsidhjk": 489, "y": [19, 20, 26, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 46, 68, 87, 91, 144, 151, 201, 214, 221, 222, 225, 229, 231, 232, 233, 238, 244, 245, 248, 252, 254, 256, 257, 258, 263, 268, 270, 271, 272, 273, 276, 280, 317, 318, 319, 321, 325, 327, 379, 387, 401, 412, 420, 422, 453, 458, 468, 475, 478, 489, 495, 504, 529, 535], "y_high": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40], "y_low": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40], "y_stddev": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40], "y_valu": [214, 495], "yaml": [11, 15, 16, 20, 26, 84, 90, 99, 100, 102, 103, 105, 106, 110, 111, 125, 126, 146, 147, 221, 222, 223, 224, 225, 226, 227, 228, 229, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 248, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 275, 276, 277, 278, 279, 280, 281, 282, 290, 350, 353, 355, 356, 386, 395, 396, 398, 399, 400, 403, 404, 409, 414, 415, 417, 418, 419, 431, 432, 433, 436, 441, 450, 454, 455, 458, 460, 464, 466, 467, 468, 470, 471, 473, 474, 475, 476, 477, 478, 479, 484, 485, 486, 487, 491, 492, 493, 495, 498, 499, 500, 501, 502, 504, 506, 507, 508, 509, 510, 519, 521, 534, 595, 596, 597, 598], "yaml_str": [227, 251, 465], "yaxi": [462, 494, 535], "yccq6gti": 489, "ye": 418, "year": [45, 61, 65, 78, 387, 392, 394, 395, 397, 404, 407, 408, 412, 414, 418, 445, 447, 448, 474, 476, 492, 507, 527, 528, 529, 530], "yearli": [421, 446], "yellow": 377, "yerr": [487, 489], "yet": [89, 386, 387, 392, 394, 401, 404, 407, 408, 455, 456, 462, 465, 518, 602], "yhbv4yfu": 489, "yield": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 82, 83, 88, 92, 196, 197, 199, 205, 208, 209, 351, 394, 400, 401, 406, 408, 410, 415, 500, 599, 600, 601], "yk04": [45, 48], "yk04b": 48, "ylabel": [388, 486, 489, 504, 508, 527, 528, 529, 553, 592], "ylim": [374, 459, 471, 504, 508, 527, 529, 570, 579, 580, 581, 603], "ymax": [553, 554], "ymin": [553, 554], "yml": [390, 404, 417, 418, 419, 420, 422, 447, 455], "you": [16, 19, 20, 26, 67, 82, 83, 84, 87, 90, 91, 94, 102, 105, 108, 126, 127, 144, 151, 153, 156, 179, 196, 197, 199, 205, 208, 209, 214, 221, 222, 225, 229, 231, 232, 233, 238, 244, 245, 248, 252, 254, 256, 257, 258, 263, 268, 270, 271, 272, 273, 276, 280, 283, 290, 386, 387, 388, 389, 390, 392, 394, 397, 401, 404, 405, 417, 418, 419, 420, 421, 422, 423, 424, 425, 428, 429, 430, 439, 447, 448, 449, 455, 459, 460, 462, 464, 465, 466, 467, 470, 471, 473, 475, 477, 478, 482, 485, 486, 487, 489, 492, 493, 494, 495, 498, 499, 500, 501, 502, 504, 507, 508, 509, 510, 511, 513, 514, 518, 519, 521, 531, 532, 535, 538, 542, 546, 571, 595, 598, 599, 600, 601, 602], "your": [16, 19, 20, 26, 84, 90, 99, 105, 126, 221, 222, 225, 229, 231, 232, 233, 238, 244, 245, 248, 252, 254, 256, 257, 258, 263, 268, 270, 271, 272, 273, 276, 280, 386, 387, 388, 390, 392, 394, 417, 418, 419, 420, 421, 422, 424, 425, 428, 429, 430, 433, 434, 439, 448, 449, 458, 459, 460, 462, 464, 466, 467, 468, 470, 471, 473, 474, 475, 476, 477, 478, 479, 482, 484, 485, 486, 487, 489, 490, 491, 492, 493, 494, 495, 497, 498, 499, 500, 501, 502, 503, 504, 506, 507, 508, 509, 510, 513, 516, 518, 519, 521, 530, 535, 552, 553, 554, 555, 556, 557, 558, 559, 560, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 585, 586, 587, 588, 589, 590, 591, 592, 593, 595, 596, 597, 600], "yourself": [598, 599], "yr": [45, 52, 53, 525, 527, 528, 529], "yscale": [471, 590], "yt": 387, "yu": [431, 455], "yunit": [464, 466, 491, 492, 508, 574], "yusifov": [39, 40], "yusifovkucuk2004": [28, 29, 30, 35, 36, 40, 48], "yusifovkucuk2004b": [28, 29, 30, 35, 36, 39, 48], "yve": 447, "yy": 413, "yyyi": 413, "z": [19, 20, 26, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 41, 46, 87, 91, 147, 317, 318, 321, 412, 413, 416, 420, 422, 491, 525, 563], "z_0": 29, "z_high": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40], "z_low": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40], "zabalza": 443, "zanin": [447, 448], "zbewlaci": 502, "zd": 83, "zen": 503, "zen_pnt": 503, "zenith": [83, 458, 474, 503, 507, 508, 509, 540], "zenith_angl": [83, 414, 508, 521], "zenodo": [413, 441, 507], "zero": [52, 53, 67, 87, 91, 100, 103, 106, 110, 111, 136, 144, 153, 154, 155, 158, 161, 166, 182, 196, 197, 199, 205, 208, 209, 255, 277, 279, 326, 332, 344, 387, 432, 435, 450, 455, 492, 498, 499, 504, 601], "zhao": [27, 454], "zhen": 138, "zip": [402, 415, 417, 458, 459, 460, 462, 464, 465, 466, 467, 468, 470, 471, 473, 474, 475, 476, 477, 478, 479, 482, 484, 485, 486, 487, 489, 490, 491, 492, 493, 494, 495, 497, 498, 499, 500, 501, 502, 503, 504, 506, 507, 508, 509, 510, 513, 516, 518, 519, 521, 529, 549, 552, 553, 554, 555, 556, 557, 558, 559, 560, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 585, 586, 587, 588, 589, 590, 591, 592, 593], "zl": [26, 491], "zone": 487, "zsh": 388, "zt": [26, 491], "z\u00e9": 446, "\u00e0": 445, "\u0261\u00e6m\u0259pa\u026a": 535, "\u03b3": [140, 523, 597], "\u03c3": [28, 476]}, "titles": ["analysis - High level interface", "astro - Astrophysics", "catalog - Source catalogs", "data - DL3 data and observations", "datasets - Reduced datasets", "estimators - High level estimators", "API reference", "irf - Instrument response functions", "makers - Data reduction", "maps - Sky maps", "modeling - Models and fitting", "scripts - Command line tools", "stats - Statistics", "utils - Utilities", "visualization - Plotting features", "Analysis", "AnalysisConfig", "BurkertProfile", "DMProfile", "DarkMatterAnnihilationSpectralModel", "DarkMatterDecaySpectralModel", "EinastoProfile", "IsothermalProfile", "JFactory", "MooreProfile", "NFWProfile", "PrimaryFlux", "ZhaoProfile", "CaseBattacharya1998", "Exponential", "FaucherKaspi2006", "FaucherKaspi2006VelocityBimodal", "FaucherKaspi2006VelocityMaxwellian", "FaucherSpiral", "LogSpiral", "Lorimer2006", "Paczynski1990", "Paczynski1990Velocity", "ValleeSpiral", "YusifovKucuk2004", "YusifovKucuk2004B", "add_observed_parameters", "add_pulsar_parameters", "add_pwn_parameters", "add_snr_parameters", "make_base_catalog_galactic", "make_catalog_random_positions_cube", "make_catalog_random_positions_sphere", "radial_distributions", "velocity_distributions", "PWN", "Pulsar", "SNR", "SNRTrueloveMcKee", "SimplePulsar", "CATALOG_REGISTRY", "SourceCatalog", "SourceCatalog1LHAASO", "SourceCatalog2FHL", "SourceCatalog2HWC", "SourceCatalog2PC", "SourceCatalog3FGL", "SourceCatalog3FHL", "SourceCatalog3HWC", "SourceCatalog3PC", "SourceCatalog4FGL", "SourceCatalogGammaCat", "SourceCatalogHGPS", "SourceCatalogLargeScaleHGPS", "SourceCatalogObject", "SourceCatalogObject1LHAASO", "SourceCatalogObject2FHL", "SourceCatalogObject2HWC", "SourceCatalogObject2PC", "SourceCatalogObject3FGL", "SourceCatalogObject3FHL", "SourceCatalogObject3HWC", "SourceCatalogObject3PC", "SourceCatalogObject4FGL", "SourceCatalogObjectGammaCat", "SourceCatalogObjectHGPS", "SourceCatalogObjectHGPSComponent", "DataStore", "EventList", "EventListMetaData", "FixedPointingInfo", "GTI", "HDUIndexTable", "Observation", "ObservationFilter", "ObservationMetaData", "ObservationTable", "Observations", "ObservationsEventsSampler", "PointingInfo", "PointingMode", "get_irfs_features", "observatory_locations", "DATASET_REGISTRY", "Dataset", "Datasets", "FermipyDatasetsReader", "FluxPointsDataset", "MapDataset", "MapDatasetEventSampler", "MapDatasetMetaData", "MapDatasetOnOff", "OGIPDatasetReader", "OGIPDatasetWriter", "ObservationEventSampler", "SpectrumDataset", "SpectrumDatasetOnOff", "apply_edisp", "create_empty_map_dataset_from_irfs", "create_map_dataset_from_observation", "create_map_dataset_geoms", "split_dataset", "apply_edisp", "create_map_dataset_from_dl4", "split_dataset", "ASmoothMapEstimator", "ESTIMATOR_REGISTRY", "EnergyDependentMorphologyEstimator", "Estimator", "ExcessMapEstimator", "FluxMaps", "FluxMetaData", "FluxPoints", "FluxPointsEstimator", "FluxProfileEstimator", "ImageProfile", "ImageProfileEstimator", "LightCurveEstimator", "ParameterEstimator", "ParameterSensitivityEstimator", "SensitivityEstimator", "TSMapEstimator", "combine_flux_maps", "combine_significance_maps", "compute_lightcurve_discrete_correlation", "compute_lightcurve_doublingtime", "compute_lightcurve_fpp", "compute_lightcurve_fvar", "estimate_exposure_reco_energy", "find_peaks", "find_peaks_in_flux_map", "get_combined_flux_maps", "get_combined_significance_maps", "get_rebinned_axis", "resample_energy_edges", "Background2D", "Background3D", "BackgroundIRF", "EDispKernel", "EDispKernelMap", "EDispMap", "EffectiveAreaTable2D", "EnergyDependentMultiGaussPSF", "EnergyDispersion2D", "FoVAlignment", "IRF", "IRFMap", "IRF_REGISTRY", "PSF3D", "PSFKernel", "PSFKing", "PSFMap", "ParametricPSF", "RadMax2D", "RecoPSFMap", "load_irf_dict_from_file", "AdaptiveRingBackgroundMaker", "DatasetsMaker", "FoVBackgroundMaker", "MAKER_REGISTRY", "Maker", "MapDatasetMaker", "PhaseBackgroundMaker", "ReflectedRegionsBackgroundMaker", "ReflectedRegionsFinder", "RegionsFinder", "RingBackgroundMaker", "SafeMaskMaker", "SpectrumDatasetMaker", "WobbleRegionsFinder", "make_counts_rad_max", "make_edisp_kernel_map", "make_edisp_map", "make_effective_livetime_map", "make_map_background_irf", "make_map_exposure_true_energy", "make_observation_time_map", "make_psf_map", "make_theta_squared_table", "Geom", "HpxGeom", "HpxMap", "HpxNDMap", "LabelMapAxis", "Map", "MapAxes", "MapAxis", "MapCoord", "Maps", "RegionGeom", "RegionNDMap", "TimeMapAxis", "WcsGeom", "WcsMap", "WcsNDMap", "containment_radius", "containment_region", "Covariance", "CovarianceResult", "Fit", "FitResult", "OptimizeResult", "Parameter", "Parameters", "PriorParameter", "PriorParameters", "BrokenPowerLawSpectralModel", "CompoundSpectralModel", "ConstantFluxSpatialModel", "ConstantSpatialModel", "ConstantSpectralModel", "ConstantTemporalModel", "DatasetModels", "DiskSpatialModel", "EBLAbsorptionNormSpectralModel", "EBL_DATA_BUILTIN", "ExpCutoffPowerLaw3FGLSpectralModel", "ExpCutoffPowerLawNormSpectralModel", "ExpCutoffPowerLawSpectralModel", "ExpDecayTemporalModel", "FoVBackgroundModel", "GaussianPrior", "GaussianSpatialModel", "GaussianSpectralModel", "GaussianTemporalModel", "GeneralizedGaussianSpatialModel", "GeneralizedGaussianTemporalModel", "LightCurveTemplateTemporalModel", "LinearTemporalModel", "LogParabolaNormSpectralModel", "LogParabolaSpectralModel", "LogUniformPrior", "MODEL_REGISTRY", "MeyerCrabSpectralModel", "Model", "ModelBase", "Models", "NaimaSpectralModel", "PiecewiseNormSpatialModel", "PiecewiseNormSpectralModel", "PointSpatialModel", "PowerLaw2SpectralModel", "PowerLawNormSpectralModel", "PowerLawSpectralModel", "PowerLawTemporalModel", "Prior", "SPATIAL_MODEL_REGISTRY", "SPECTRAL_MODEL_REGISTRY", "ScaleSpectralModel", "Shell2SpatialModel", "ShellSpatialModel", "SineTemporalModel", "SkyModel", "SmoothBrokenPowerLawSpectralModel", "SpatialModel", "SpectralModel", "SuperExpCutoffPowerLaw3FGLSpectralModel", "SuperExpCutoffPowerLaw4FGLDR3SpectralModel", "SuperExpCutoffPowerLaw4FGLSpectralModel", "TEMPORAL_MODEL_REGISTRY", "TemplateNDSpatialModel", "TemplateNDSpectralModel", "TemplateNPredModel", "TemplatePhaseCurveTemporalModel", "TemplateSpatialModel", "TemplateSpectralModel", "TemporalModel", "UniformPrior", "create_cosmic_ray_spectral_model", "create_crab_spectral_model", "create_fermi_isotropic_diffuse_model", "integrate_spectrum", "read_hermes_cube", "scale_plot_flux", "read_hermes_cube", "select_nested_models", "stat_profile_ul_scipy", "CashCountsStatistic", "TimmerKonig_lightcurve_simulator", "WStatCountsStatistic", "cash", "cash_sum_cython", "compute_chisq", "compute_flux_doubling", "compute_fpp", "compute_fvar", "cstat", "discrete_correlation", "f_cash_root_cython", "get_wstat_gof_terms", "get_wstat_mu_bkg", "norm_bounds_cython", "sigma_to_ts", "structure_function", "ts_to_sigma", "weighted_cash_sum_cython", "wstat", "hierarchical_clustering", "standard_scaler", "D_SUN_TO_GALACTIC_CENTER", "cartesian", "fov_to_sky", "galactic", "motion_since_birth", "polar", "sky_to_fov", "velocity_glon_glat", "HDULocation", "LazyFitsData", "earth_location_from_dict", "trapz_loglog", "ScaledRegularGridInterpolator", "interpolate_profile", "interpolation_scale", "BACKEND_DEFAULT", "METHOD_DEFAULT", "METHOD_KWARGS_DEFAULT", "N_JOBS_DEFAULT", "POOL_KWARGS_DEFAULT", "multiprocessing_manager", "run_multiprocessing", "InverseCDFSampler", "draw", "get_random_state", "normalize", "pdf", "sample_powerlaw", "sample_sphere", "sample_sphere_distance", "sample_times", "compound_region_to_regions", "make_concentric_annulus_sky_regions", "make_orthogonal_rectangle_sky_regions", "region_to_frame", "regions_to_compound_region", "from_yaml", "get_images_paths", "make_path", "read_yaml", "recursive_merge_dicts", "to_yaml", "write_yaml", "hstack_columns", "table_row_to_dict", "table_standardise_units_copy", "table_standardise_units_inplace", "Checker", "assert_quantity_allclose", "assert_skycoord_allclose", "assert_time_allclose", "mpl_plot_check", "requires_data", "requires_dependency", "absolute_time", "time_ref_from_dict", "time_ref_to_dict", "time_relative_to_ref", "standardise_unit", "unit_from_fits_image_hdu", "MapPanelPlotter", "add_colorbar", "annotate_heatmap", "colormap_hess", "colormap_milagro", "plot_contour_line", "plot_distribution", "plot_heatmap", "plot_map_rgb", "plot_npred_signal", "plot_spectrum_datasets_off_regions", "plot_theta_squared_table", "Dependencies", "Developer How To", "Documentation How To", "Developer guide", "How to contribute to Gammapy", "PIGs", "PIG 1 - PIG purpose and guidelines", "PIG 2 - Organization of low level analysis code", "PIG 3 - Plan for dropping Python 2.7 support", "PIG 4 - Setup for tutorial notebooks and data", "PIG 5 - Gammapy 1.0 roadmap", "PIG 6 - CTA observation handling", "PIG 7 - Models", "PIG 8 - Datasets", "PIG 9 - Event sampling", "PIG 10 - Regions", "PIG 11 - Light curves", "PIG 12 - High level interface", "PIG 13 - Gammapy dependencies and distribution", "PIG 14 - Uncertainty estimation", "PIG 16 - Gammapy package structure", "PIG 18 - Documentation", "PIG 19 - Gammapy package structure follow up", "PIG 20 - Global Model API", "PIG 21 - Models improvements", "PIG 22 - Unified flux estimators API", "PIG 23 - Gammapy release cycle and version numbering", "PIG 24 - Authorship policy", "PIG 25 - Metadata container for Gammapy", "PIG 26 - Model Priors API", "PIG 27 - Bayesian Inference using Nested Sampling", "How to make a Gammapy release", "Project setup", "Virtual Environments", "Getting started", "Installation", "Recommended Setup", "Troubleshooting", "Using Gammapy", "Gammapy", "Release notes", "0.1 (Aug 25, 2014)", "0.10 (Jan 28, 2019)", "0.11 (Mar 29, 2019)", "0.12 (May 30, 2019)", "0.13 (Jul 26, 2019)", "0.14 (Sep 30, 2019)", "0.15 (Dec 3, 2019)", "0.16 (Feb 1, 2020)", "0.17 (Apr 1, 2020)", "0.18 (Nov 4th, 2020)", "0.18.1 (Nov 6th, 2020)", "0.18.2 (Nov 19th, 2020)", "0.19 (Nov 22nd, 2021)", "0.2 (Apr 13, 2015)", "0.20 (May 12th, 2022)", "0.20.1 (June 16th, 2022)", "0.3 (Aug 13, 2015)", "0.4 (Apr 20, 2016)", "0.5 (Nov 22, 2016)", "0.6 (Apr 28, 2017)", "0.7 (Feb 28, 2018)", "0.8 (Sep 23, 2018)", "0.9 (Nov 29, 2018)", "1.0 (November 10th, 2022)", "1.0.1 (March 14th, 2023)", "1.0.2 (December 6th, 2023)", "1.1 (June 13th 2023)", "1.2 (February 29th 2024)", "1.3 (November 26th, 2024)", "2.0 (unreleased)", "Computation times", "Point source sensitivity", "Account for spectral absorption due to the EBL", "Spectral analysis of extended sources", "Data analysis", "Flux point fitting", "Computation times", "Spectral analysis", "Spectral analysis with the HLI", "Spectral analysis with energy-dependent directional cuts", "1D spectrum simulation", "Source detection and significance maps", "2D Image", "2D map fitting", "Ring background map", "Computation times", "3D detailed analysis", "Multi instrument joint 3D and 1D analysis", "Basic image exploration and fitting", "Morphological energy dependence estimation", "Event sampling", "Sample a source with energy-dependent temporal evolution", "Flux Profile Estimation", "3D Cube", "Computation times", "3D map simulation", "Time", "Light curves", "Light curves for flares", "Simulating and fitting a time varying source", "Pulsar analysis", "Computation times", "Time resolved spectroscopy estimator", "Estimation of time variability in a lightcurve", "Dark matter spatial and spectral models", "Source catalogs", "Datasets - Reduced data, IRFs, models", "Estimators", "Fitting", "Package / API", "Using Gammapy IRFs", "Makers - Data reduction", "Maps", "Mask maps", "Modelling", "Models", "Observational clustering", "Priors", "Computation times", "Make a theta-square plot", "CTAO with Gammapy", "Fermi-LAT with Gammapy", "HAWC with Gammapy", "H.E.S.S. with Gammapy", "Model Gallery", "Computation times", "Tutorials", "Scripts", "Computation times", "Survey Map Script", "Computation times", "High level interface", "Low level API", "Introduction", "Data structures", "Computation times", "Dark matter", "Astrophysics", "Astrophysical source population models", "Astrophysical source models", "Pulsar Source Models", "Pulsar Wind Nebula Source Models", "Supernova Remnant Models", "Source catalogs", "Datasets (DL4)", "Data access and selection (DL3)", "Estimators (DL4 to DL5, and DL6)", "High Level Analysis Interface", "How To", "User guide", "Effective area", "Background", "Energy Dispersion", "Instrument Response Functions (DL3)", "Point Spread Function", "FoV background", "Data reduction (DL3 to DL4)", "Reflected regions background", "Ring background", "HEALPix-based maps", "Sky maps (DL4)", "RegionGeom and RegionNDMap", "Model gallery", "Computation times", "Spatial models", "Constant spatial model", "Disk spatial model", "Gaussian spatial model", "Generalized gaussian spatial model", "Piecewise norm spatial model", "Point spatial model", "Shell spatial model", "Shell2 spatial model", "Template spatial model", "Computation times", "Spectral models", "EBL absorption spectral model", "Broken power law spectral model", "Compound spectral model", "Constant spectral model", "Exponential cutoff power law spectral model", "Exponential cutoff power law spectral model used for 3FGL", "Exponential cutoff power law norm spectral model", "Gaussian spectral model", "Log parabola spectral model", "Log parabola spectral norm model", "Naima spectral model", "Piecewise  norm spectral model", "Power law spectral model", "Power law 2 spectral model", "Power law norm spectral model", "Smooth broken power law spectral model", "Super exponential cutoff power law model used for 3FGL", "Super Exponential Cutoff Power Law Model used for 4FGL-DR3", "Super Exponential Cutoff Power Law Model used for 4FGL-DR1 (and DR2)", "Template spectral model", "Computation times", "Temporal models", "Constant temporal model", "ExpDecay temporal model", "Gaussian temporal model", "Generalized Gaussian temporal model", "Linear temporal model", "PowerLaw temporal model", "Sine temporal model", "Phase curve temporal model", "Light curve temporal model", "Computation times", "Modeling and Fitting (DL4 to DL5)", "Fundamental Concepts: Gammapy analysis workflow and package structure", "Glossary and references", "Command line tools", "Fit statistics", "Statistical utility functions", "Derivation of the WStat formula", "Utility functions", "Visualization"], "titleterms": {"": [428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 441, 442, 444, 445, 446, 447, 448, 449, 465, 478, 510, 518], "0": [396, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 456], "1": [392, 396, 415, 416, 426, 427, 434, 435, 437, 442, 450, 451, 452, 453, 454, 455, 504], "10": [401, 426, 428], "10th": 450, "11": [402, 426, 429], "12": [403, 426, 430], "12th": 441, "13": [404, 426, 431, 440, 443], "13th": 453, "14": [405, 426, 432], "14th": 451, "15": [426, 433], "16": [406, 426, 434], "16th": 442, "17": [426, 435], "18": [407, 426, 436, 437, 438], "19": [408, 426, 439], "19th": 438, "1d": [461, 465, 467, 474, 484, 485, 513], "1dc": 507, "2": [393, 394, 415, 416, 426, 438, 440, 452, 454, 456, 504, 576], "20": [409, 426, 441, 442, 444], "2014": 427, "2015": [440, 443], "2016": [444, 445], "2017": 446, "2018": [447, 448, 449], "2019": [428, 429, 430, 431, 432, 433], "2020": [434, 435, 436, 437, 438], "2021": 439, "2022": [441, 442, 450], "2023": [451, 452, 453], "2024": [454, 455], "21": 410, "2155": 494, "22": [411, 445], "22nd": 439, "23": [412, 448], "24": 413, "25": [414, 427], "26": [415, 431], "26th": 455, "27": 416, "28": [428, 446, 447], "29": [429, 449], "29th": 454, "2d": [469, 470, 513], "3": [394, 415, 416, 426, 433, 443, 455], "30": [430, 432], "304": 494, "32": 387, "3955": 415, "3d": [473, 474, 480, 482, 484, 513], "3fgl": [568, 579], "3fhl": 474, "4": [395, 416, 426, 444], "4122": 415, "4fgl": [580, 581], "4th": 436, "5": [396, 426, 445], "6": [397, 426, 446], "64": 387, "6th": [437, 452], "7": [394, 398, 426, 447], "8": [399, 426, 448], "9": [400, 426, 449], "A": [464, 494], "As": [537, 538, 539, 541], "In": 388, "ON": [460, 466, 474], "On": 467, "The": [393, 418, 474, 476, 494, 495, 504, 532, 544], "To": [387, 388, 407, 535], "about": 504, "abov": 476, "absolute_tim": 368, "absorpt": [410, 459, 563], "abstract": [392, 393, 394, 395, 396, 397, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416], "accept": 390, "access": [468, 493, 494, 499, 509, 532], "accessor": 547, "account": 459, "action": [387, 407], "ad": 499, "adapt": 468, "adaptiveringbackgroundmak": 171, "add": [398, 501], "add_colorbar": 375, "add_observed_paramet": 41, "add_pulsar_paramet": 42, "add_pwn_paramet": 43, "add_snr_paramet": 44, "addit": [410, 415, 541, 596], "aeff_2d": 537, "against": 466, "aim": 501, "aka": 416, "algorithm": 489, "alia": 410, "all": 485, "along": 414, "altern": [395, 398, 400, 401, 402, 403, 404, 405, 407, 408, 411, 414], "amplitud": [415, 504], "an": [387, 458, 477, 478, 493, 500], "anaconda": 421, "analysi": [0, 11, 15, 393, 396, 458, 460, 461, 464, 465, 466, 467, 473, 474, 475, 484, 487, 513, 518, 531, 534, 596], "analysisconfig": 16, "angl": [537, 538, 539, 541], "angular": 548, "annihil": 491, "annotate_heatmap": 376, "api": [6, 387, 388, 409, 411, 414, 415, 416, 450, 453, 454, 455, 494, 496, 513, 519], "apply_edisp": [112, 117], "approach": [402, 416, 460, 462, 465, 467, 468, 470, 471, 474, 477, 478, 479, 482, 484, 485, 486, 489, 490, 495, 500, 501, 503, 518, 519], "apr": [435, 440, 444, 446], "arbitrari": 414, "area": [497, 507, 537], "argument": [387, 401], "arm": 525, "asmoothmapestim": 120, "assert": 387, "assert_quantity_allclos": 362, "assert_skycoord_allclos": 363, "assert_time_allclos": 364, "assess": [473, 495], "assign": [485, 501], "astro": [1, 523, 526], "astronomi": 402, "astrophys": [1, 524, 525, 526], "astropi": [387, 412], "asymmetr": 497, "attribut": [387, 388, 398], "aug": [427, 443], "author": 413, "authorship": 413, "avail": 492, "ax": [499, 548], "axi": [387, 540], "backend_default": 329, "background": [398, 402, 406, 409, 415, 471, 476, 477, 498, 501, 507, 508, 518, 538, 542, 543, 544, 545, 599], "background2d": 150, "background3d": 151, "backgroundirf": 152, "backgroundirfmodel": 398, "backgroundmodel": 398, "backport": 387, "base": [411, 414, 546], "basic": [475, 499], "bayesian": [416, 490], "between": 409, "bin": [402, 458, 476, 548], "binder": 418, "bit": 387, "bkg_2d": 538, "bkg_3d": 538, "block": 490, "boundari": 500, "branch": 417, "break": 387, "broken": [388, 564, 578], "brokenpowerlawspectralmodel": 221, "bsd": 387, "bug": [441, 450, 453, 454, 455], "bugfix": 417, "build": [388, 390, 418, 484, 485], "built": 595, "bullet": 388, "bundl": 387, "burkertprofil": 17, "butterfli": 519, "call": 398, "candid": [417, 468], "caplog": 387, "cartesian": 315, "case": [393, 397, 415, 416, 601], "casebattacharya1998": 28, "cash": [295, 599, 600], "cash_sum_cython": 296, "cashcountsstatist": 292, "catalog": [2, 492, 500, 501, 521, 530], "catalog_registri": 55, "caveat": 599, "cell": 387, "certif": 390, "cff": 413, "chain": [464, 466], "chang": [387, 408, 450, 453, 454, 455], "changelog": 407, "character": 490, "check": [11, 387, 388, 423, 458, 460, 464, 465, 466, 467, 468, 470, 471, 473, 474, 475, 476, 477, 478, 479, 484, 485, 486, 487, 491, 492, 493, 495, 498, 499, 500, 501, 502, 504, 506, 507, 508, 509, 510, 518, 519, 521], "checker": 361, "chi": 476, "choos": 388, "citat": 413, "class": [0, 1, 2, 3, 4, 5, 7, 8, 9, 10, 12, 13, 14, 387, 388, 397, 398, 411, 414, 519, 541, 600], "clean": 406, "cli": 598, "clobber": 387, "clumpi": 523, "cluster": [13, 503], "code": [387, 388, 393, 396, 418], "codemeta": 413, "collect": 413, "colormap": 603, "colormap_hess": 377, "colormap_milagro": 378, "combin": [501, 532], "combine_flux_map": 137, "combine_significance_map": 138, "command": [11, 598], "common": 494, "compar": [466, 484], "comparison": 416, "compound": [502, 565], "compound_region_to_region": 345, "compoundspectralmodel": 222, "comput": [457, 458, 463, 464, 465, 471, 472, 475, 481, 488, 495, 505, 512, 515, 517, 519, 522, 550, 561, 583, 594], "compute_chisq": 297, "compute_flux_doubl": 298, "compute_fpp": 299, "compute_fvar": 300, "compute_lightcurve_discrete_correl": 139, "compute_lightcurve_doublingtim": 140, "compute_lightcurve_fpp": 141, "compute_lightcurve_fvar": 142, "concept": 596, "conda": 419, "confer": 413, "confid": 495, "config": [11, 470, 471, 598], "configur": [465, 473, 479, 484, 494, 518, 596], "constant": [552, 566, 585], "constantfluxspatialmodel": 223, "constantspatialmodel": 224, "constantspectralmodel": 225, "constanttemporalmodel": 226, "contain": 414, "containment_radiu": 210, "containment_region": 211, "content": [493, 548], "context": [460, 462, 464, 465, 466, 467, 468, 470, 471, 474, 476, 477, 479, 482, 484, 485, 486, 489, 490, 500, 503, 504, 518, 519], "contigu": 499, "continu": 418, "contour": 495, "contribut": [390, 413, 501], "contributor": [413, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455], "conveni": 399, "convent": 387, "converg": 416, "convers": [387, 494], "convert": 387, "coordin": [13, 387, 398, 538, 548], "correct": 388, "correl": 471, "count": [494, 501, 508, 531, 600], "covari": [212, 495], "covarianceresult": 213, "creat": [460, 464, 470, 471, 478, 493, 494, 497, 499, 500, 519, 548], "create_cosmic_ray_spectral_model": 283, "create_crab_spectral_model": 284, "create_empty_map_dataset_from_irf": 113, "create_fermi_isotropic_diffuse_model": 285, "create_map_dataset_from_dl4": 118, "create_map_dataset_from_observ": 114, "create_map_dataset_geom": 115, "creation": [460, 465, 485, 506], "cstat": 301, "cta": [397, 507], "ctao": 507, "cube": [393, 480, 499, 513], "cumul": 460, "current": 412, "curv": [402, 484, 485, 486, 494, 592, 593], "custom": [502, 504, 595], "cut": [462, 466], "cutoff": [567, 568, 569, 579, 580, 581], "cutout": 499, "cycl": 412, "cython": [412, 418], "d_sun_to_galactic_cent": 314, "dark": [491, 523], "darkmatt": [1, 523], "darkmatterannihilationspectralmodel": 19, "darkmatterdecayspectralmodel": 20, "data": [3, 8, 387, 393, 395, 396, 402, 414, 418, 459, 460, 461, 464, 465, 466, 473, 474, 476, 479, 484, 485, 487, 489, 493, 498, 499, 506, 509, 511, 513, 518, 519, 521, 532, 543, 598, 599], "dataflow": 414, "dataset": [4, 11, 99, 100, 387, 396, 399, 408, 409, 414, 458, 460, 465, 466, 470, 471, 473, 474, 478, 484, 485, 486, 493, 494, 495, 498, 500, 501, 504, 509, 518, 519, 531], "dataset_registri": 98, "datasetmodel": 227, "datasetsmak": 172, "datastor": [82, 507, 519], "dco": [390, 413], "deal": 388, "dec": 433, "decai": 491, "decemb": 452, "decis": [392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416], "default": 398, "defin": [458, 460, 464, 466, 475, 477, 478, 484, 485, 500, 506, 519, 548], "definit": [413, 484, 543], "depend": [386, 404, 410, 441, 466, 476, 478, 502], "deprec": [387, 412], "deriv": 601, "detail": [394, 473], "detect": [408, 468, 475, 506, 540], "detector": 538, "develop": [387, 389, 390, 394], "diagram": 397, "differ": [474, 499, 602], "diffus": 508, "dilat": 500, "direct": 466, "discrete_correl": 302, "discuss": 402, "disk": [465, 478, 518, 519, 553], "diskspatialmodel": 228, "dispers": [497, 507, 508, 539], "dissolv": 406, "distribut": [404, 416, 525], "dl3": [3, 474, 510, 532, 540, 543], "dl4": [497, 531, 533, 543, 547, 595], "dl5": [533, 595], "dl6": 533, "dmprofil": 18, "do": 387, "doc": 418, "docstr": 388, "document": [388, 390, 396, 407, 454, 455], "doubl": 490, "download": [11, 418], "downsampl": 548, "dr1": [510, 581], "dr2": 581, "dr3": 580, "draw": 337, "driven": 598, "drop": 394, "due": 459, "durat": 498, "e": 510, "each": 476, "earli": 390, "earth_location_from_dict": 324, "ebl": [459, 563], "ebl_data_builtin": 230, "eblabsorptionnormspectralmodel": 229, "edg": 533, "edisp": 497, "edisp_2d": 539, "edispkernel": 153, "edispkernelmap": 154, "edispmap": 155, "effect": [497, 498, 507, 537], "effectiveareatable2d": 156, "einastoprofil": 21, "elaps": 602, "empti": 493, "encourag": 504, "end": 387, "energi": [410, 458, 466, 476, 478, 497, 500, 502, 506, 507, 508, 533, 537, 538, 539, 541], "energydependentmorphologyestim": 122, "energydependentmultigausspsf": 157, "energydispersion2d": 158, "environ": 419, "eros": 500, "error": [495, 600], "estim": [5, 123, 405, 408, 411, 414, 416, 465, 468, 476, 479, 484, 489, 490, 494, 498, 533, 543, 544, 600], "estimate_exposure_reco_energi": 143, "estimator_registri": 121, "evalu": [398, 399, 400], "event": [396, 400, 477, 478, 487, 499, 507, 508, 521, 532, 540], "eventlist": 83, "eventlistmetadata": 84, "evid": 416, "evolut": 478, "exampl": [418, 504, 530, 531, 533, 534, 542, 543, 544, 552, 553, 554, 555, 556, 557, 558, 559, 560, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 585, 586, 587, 588, 589, 590, 591, 599], "excess": [411, 460, 471, 490, 600], "excessmapestim": 124, "exclus": [464, 465, 471, 500, 518], "execut": 598, "exemplari": 415, "exercis": [458, 462, 464, 467, 473, 475, 477, 478, 486, 489, 507, 508, 509, 510, 521], "exist": 393, "expcutoffpowerlaw3fglspectralmodel": 231, "expcutoffpowerlawnormspectralmodel": 232, "expcutoffpowerlawspectralmodel": 233, "expdecai": 586, "expdecaytemporalmodel": 234, "expect": 540, "explor": [460, 465, 475, 511, 513], "exponenti": [29, 462, 567, 568, 569, 579, 580, 581], "expos": 398, "exposur": [497, 508], "extend": [460, 477], "extens": [388, 459], "extern": 387, "extra": 418, "extract": [471, 484, 485, 486], "extrapol": [387, 582], "f_cash_root_cython": 303, "factor": 491, "factori": 499, "factoris": 540, "faucherkaspi2006": 30, "faucherkaspi2006velocitybimod": 31, "faucherkaspi2006velocitymaxwellian": 32, "faucherspir": 33, "favor": 415, "featur": [14, 412, 417, 450, 453, 454, 455, 494], "feb": [434, 447], "februari": 454, "fermi": [474, 508], "fermipydatasetsread": 101, "fermist": 523, "file": [388, 413, 465, 470, 471, 474, 507, 518, 532, 548], "fill": [499, 548], "filter": 485, "final": [392, 417, 465, 601], "find_peak": 144, "find_peaks_in_flux_map": 145, "finder": 544, "first": [417, 465], "fit": [10, 13, 214, 396, 402, 416, 459, 460, 462, 464, 465, 466, 470, 473, 474, 475, 482, 486, 495, 500, 504, 508, 518, 519, 548, 595, 599, 600, 601], "fitresult": 215, "fix": [387, 441, 450, 453, 454, 455], "fixedpointinginfo": 85, "fixtur": 387, "flare": 485, "float": 387, "flux": [411, 415, 458, 459, 462, 464, 465, 474, 479, 491, 492, 494, 518, 519, 521, 533], "fluxestim": 411, "fluxmap": [125, 411, 494], "fluxmetadata": 126, "fluxpoint": [127, 494], "fluxpointscollect": 411, "fluxpointsdataset": [102, 399, 493], "fluxpointsestim": [128, 533], "fluxprofileestim": 129, "fold": 398, "folder": 418, "follow": 408, "format": [387, 388, 602], "formula": 601, "forward": 398, "found": 598, "fov": [498, 542], "fov_to_ski": 316, "fovalign": 159, "fovbackgroundmak": [173, 542], "fovbackgroundmodel": 235, "fraction": 490, "free": 416, "freez": [412, 417, 501], "from": [387, 416, 485, 499, 500, 501, 548], "from_yaml": 350, "fulli": 494, "function": [1, 3, 4, 5, 7, 8, 9, 10, 12, 13, 14, 387, 388, 507, 537, 538, 539, 540, 541, 600, 602], "fundament": 596, "further": [402, 459, 599], "galact": [317, 508], "galactocentr": 525, "galleri": [387, 388, 511, 513, 549], "gamlik": 523, "gamma": [402, 491], "gammapi": [0, 1, 2, 3, 4, 5, 7, 8, 9, 10, 11, 12, 13, 14, 387, 390, 393, 396, 404, 406, 407, 408, 412, 413, 414, 417, 418, 424, 425, 497, 507, 508, 509, 510, 523, 526, 530, 531, 532, 533, 534, 540, 542, 543, 544, 547, 595, 596, 602], "gaussian": [554, 555, 570, 587, 588], "gaussianprior": 236, "gaussianspatialmodel": 237, "gaussianspectralmodel": 238, "gaussiantemporalmodel": 239, "gener": [387, 393, 397, 402, 413, 414, 533, 555, 588], "generalist": 411, "generalizedgaussianspatialmodel": 240, "generalizedgaussiantemporalmodel": 241, "geom": 194, "geometri": [460, 475, 484, 485, 499, 500, 518, 519, 546, 548], "get": [390, 407, 420, 459, 470, 471, 499, 506, 524, 525, 526, 532, 547], "get_combined_flux_map": 146, "get_combined_significance_map": 147, "get_images_path": 351, "get_irfs_featur": 96, "get_random_st": 338, "get_rebinned_axi": 148, "get_wstat_gof_term": 304, "get_wstat_mu_bkg": 305, "github": 387, "given": [501, 506], "global": 409, "glossari": 597, "good": 601, "gpl": 387, "group": 503, "gti": [86, 532], "guid": [389, 536], "guidelin": [388, 392, 393, 407], "h": 510, "halv": 490, "handl": [387, 396, 397, 398, 409, 413, 498, 602], "have": [395, 397, 402, 403, 411], "hawc": [474, 509], "hduindext": 87, "hduloc": 322, "healpix": 546, "help": 423, "helper": 399, "hess": 474, "hgp": 492, "hierarch": 503, "hierarchi": 414, "hierarchical_clust": 312, "high": [0, 5, 396, 403, 518, 534], "hli": 465, "how": [387, 388, 390, 407, 417, 499, 535], "hpxgeom": 195, "hpxmap": 196, "hpxndmap": 197, "hstack_column": 357, "i": [387, 390, 392, 479], "idea": 397, "imag": [388, 393, 401, 406, 468, 469, 475, 499, 513], "imageprofil": 130, "imageprofileestim": 131, "impact": 416, "implement": [397, 398, 407, 413, 415, 416, 502, 504], "import": [387, 482], "improv": [398, 410, 441, 450, 453, 454, 455], "inbuilt": 497, "includ": [388, 504], "index": [499, 504, 532], "infer": 416, "info": [11, 387], "inform": [413, 492, 504, 539], "infrastructur": 455, "input": [387, 414, 468], "inspect": 519, "instal": [407, 420, 421, 423], "instrument": [7, 474, 540], "integr": [13, 418, 458], "integrate_spectrum": 286, "interact": 409, "interest": 476, "interfac": [0, 396, 398, 403, 518, 534, 547], "intern": 494, "interpol": [13, 387, 499], "interpolate_profil": 327, "interpolation_scal": 328, "interv": 485, "intrins": 459, "introduc": [398, 406, 408, 410, 411, 479], "introduct": [398, 401, 402, 404, 405, 407, 411, 413, 414, 458, 464, 466, 475, 487, 491, 492, 493, 498, 499, 507, 508, 509, 510, 513, 520, 521, 523, 525, 526, 599], "inversecdfsampl": 336, "ipython": 424, "irf": [7, 160, 396, 414, 458, 493, 497, 507, 540], "irf_registri": 162, "irfmap": 161, "isothermalprofil": 22, "isotrop": 508, "issu": [416, 423, 455], "iter": 499, "j": 491, "jan": 428, "jfactori": 23, "joint": [473, 474, 531], "json": 413, "jul": 431, "june": [442, 453], "jupyt": [387, 420, 422, 424], "kei": 494, "kernel": 497, "known": 455, "labelmapaxi": [198, 499], "lat": [474, 508], "latest": 507, "law": [462, 564, 567, 568, 569, 575, 576, 577, 578, 579, 580, 581], "lazi": 399, "lazyfitsdata": 323, "lc": 484, "let": 478, "level": [0, 5, 393, 396, 403, 518, 519, 534], "li": 487, "licens": 387, "light": [402, 484, 485, 486, 494, 593], "lightcurv": [402, 477, 486, 490, 492], "lightcurveestim": [132, 533], "lightcurvetemplatetemporalmodel": 242, "like": [477, 494], "likelihood": 601, "limit": 397, "line": [11, 387, 598], "linear": 589, "lineartemporalmodel": 243, "link": 388, "list": [388, 398, 399, 400, 401, 402, 403, 404, 416, 477, 485, 492, 499, 500, 501, 502, 521, 532], "literatur": 466, "livetim": 498, "load": [399, 458, 459, 462, 464, 466, 492, 494, 501, 509], "load_irf_dict_from_fil": 170, "locat": 387, "log": [11, 387, 462, 571, 572], "logparabolanormspectralmodel": 244, "logparabolaspectralmodel": 245, "logspir": 34, "loguniformprior": 246, "long": 413, "loop": [460, 498, 519], "lorimer2006": 35, "low": [393, 519], "lt": 412, "ma": 487, "mai": [430, 441], "maintain": [394, 413], "mainten": 396, "major": 417, "make": [387, 390, 417, 475, 478, 487, 506, 519], "make_base_catalog_galact": 45, "make_catalog_random_positions_cub": 46, "make_catalog_random_positions_spher": 47, "make_concentric_annulus_sky_region": 346, "make_counts_rad_max": 185, "make_edisp_kernel_map": 186, "make_edisp_map": 187, "make_effective_livetime_map": 188, "make_map_background_irf": 189, "make_map_exposure_true_energi": 190, "make_observation_time_map": 191, "make_orthogonal_rectangle_sky_region": 347, "make_path": 352, "make_psf_map": 192, "make_theta_squared_t": 193, "maker": [8, 175, 408, 414, 460, 485, 498, 518, 519, 542, 543, 544], "maker_registri": 174, "mamba": 421, "manag": [396, 421], "manual": [500, 503], "map": [9, 199, 203, 393, 396, 397, 468, 470, 471, 474, 475, 482, 487, 491, 497, 499, 500, 501, 516, 521, 533, 546, 547, 548], "mapax": 200, "mapaxi": 201, "mapcoord": [202, 547], "mapdataset": [103, 399, 473, 477, 493, 509, 531], "mapdataseteventsampl": [104, 400], "mapdatasetmak": [176, 543], "mapdatasetmetadata": 105, "mapdatasetonoff": [106, 399], "mappanelplott": 374, "mar": 429, "march": 451, "margin": 416, "mask": [401, 464, 465, 471, 493, 500, 518], "materi": 413, "matter": [491, 523], "measur": 599, "meet": 396, "messag": 387, "met": 602, "metadata": [413, 414], "method": [388, 399, 400, 415, 490, 499, 533, 547], "method_default": 330, "method_kwargs_default": 331, "meyercrabspectralmodel": 248, "miniconda": 421, "minor": 408, "minuit": 416, "mission": 602, "model": [10, 249, 251, 396, 398, 406, 409, 410, 414, 415, 416, 459, 460, 464, 465, 466, 470, 473, 474, 475, 477, 478, 484, 485, 486, 489, 491, 492, 493, 495, 501, 502, 504, 507, 511, 513, 518, 519, 521, 525, 526, 527, 528, 529, 549, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 595, 599], "model_registri": 247, "modelbas": 250, "modif": 500, "modifi": [387, 499, 502], "modul": [4, 5, 8, 10, 13], "mooreprofil": 24, "morpholog": 476, "morphologi": 502, "motion_since_birth": 318, "motiv": [415, 416], "mpl_plot_check": 365, "multi": 474, "multipl": [477, 501, 504, 531], "multiprocessing_manag": 334, "n_jobs_default": 332, "naima": 573, "naimaspectralmodel": 252, "name": [387, 398, 540], "nebula": 528, "nest": 416, "new": [387, 398, 402, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 441, 442, 444, 445, 446, 447, 448, 449, 450, 453, 454, 455, 485], "next": [462, 464, 465, 468, 475, 484, 507, 509, 510, 518, 521], "nfwprofil": 25, "night": 484, "non": [387, 499, 548], "norm": [410, 502, 556, 569, 572, 574, 577], "norm_bounds_cython": 306, "normal": [339, 518], "notat": 600, "note": [387, 426, 464, 494, 599], "notebook": [11, 387, 395, 424], "nov": [436, 437, 438, 439, 445, 449], "novemb": [450, 455], "now": 402, "nuisanc": 415, "number": [387, 412, 540], "numpi": 412, "o": 479, "object": [387, 388, 397, 409, 470, 471, 477, 478, 492, 494, 503], "observ": [3, 88, 92, 396, 397, 459, 464, 465, 475, 477, 478, 484, 485, 498, 503, 518, 519], "observationeventsampl": 109, "observationfilt": 89, "observationmetadata": 90, "observationseventssampl": 93, "observationt": 91, "observatory_loc": 97, "obtain": [458, 476, 486, 503], "off": [462, 464, 467, 474], "offset": [537, 538, 539, 541], "ogipdatasetread": 107, "ogipdatasetwrit": 108, "old": 418, "one": 494, "onto": 499, "open": 487, "oper": [499, 500], "optimizeresult": 216, "option": [386, 404, 495], "org": 418, "organ": [393, 402], "origin": [387, 390], "other": [387, 388, 397, 418, 421, 523], "outlin": 415, "outlook": [399, 400, 401, 403, 404, 406, 407, 408, 411], "output": [387, 416], "over": 487, "overview": [407, 420, 476, 507, 509, 542, 544, 545], "overwrit": 387, "own": 598, "packag": [0, 1, 2, 3, 4, 5, 7, 8, 9, 10, 12, 13, 14, 406, 408, 418, 421, 441, 496, 513, 523, 524, 596], "paczynski1990": 36, "paczynski1990veloc": 37, "panel": 603, "paper": 396, "parabola": [462, 571, 572], "parallel": [13, 399, 416], "paramet": [217, 218, 398, 410, 415, 416, 465, 476, 495, 501, 502, 518], "parameterestim": 133, "parametersensitivityestim": 134, "parametr": 398, "parametricpsf": 167, "pdf": 340, "perform": [400, 460, 507, 519], "person": 413, "perspect": 394, "phase": [487, 592], "phasebackgroundmak": 177, "phasogram": 487, "piecewis": [556, 574], "piecewisenormspatialmodel": 253, "piecewisenormspectralmodel": 254, "pig": [391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416], "pip": 421, "pixel": [387, 401, 500], "pk": 494, "plan": 394, "plot": [14, 387, 459, 464, 465, 475, 476, 479, 499, 501, 506, 519, 548, 552, 553, 554, 555, 556, 557, 558, 559, 560, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 585, 586, 587, 588, 589, 590, 591, 603], "plot_contour_lin": 379, "plot_distribut": 380, "plot_heatmap": 381, "plot_map_rgb": 382, "plot_npred_sign": 383, "plot_spectrum_datasets_off_region": 384, "plot_theta_squared_t": 385, "png": 388, "point": [388, 415, 458, 459, 462, 464, 465, 474, 475, 477, 490, 492, 494, 507, 518, 519, 521, 533, 541, 557], "pointinginfo": 94, "pointingmod": 95, "pointspatialmodel": 255, "poisson": 599, "polar": 319, "polici": 413, "pool_kwargs_default": 333, "popul": [1, 525], "posit": [415, 504, 506, 539], "possibl": 413, "post": 417, "posterior": 416, "power": [462, 564, 567, 568, 569, 575, 576, 577, 578, 579, 580, 581], "powerlaw": [462, 590], "powerlaw2spectralmodel": 256, "powerlawnormspectralmodel": 257, "powerlawspectralmodel": 258, "powerlawtemporalmodel": 259, "precis": 400, "predict": 531, "prepar": [402, 412, 458, 460, 478, 519], "prerequisit": [460, 462, 464, 465, 466, 467, 470, 474, 476, 477, 478, 479, 482, 484, 485, 486, 490, 495, 500, 501, 504, 518, 519], "pretti": 492, "primaryflux": 26, "print": 492, "prior": [260, 415, 504], "priorparamet": [219, 220], "produc": 509, "product": [491, 497], "profil": [459, 479, 491, 601], "project": [396, 418], "propag": 414, "propos": [395, 397, 398, 399, 400, 401, 402, 403, 405, 406, 407, 408, 409, 410, 411, 414, 416, 460, 462, 465, 467, 468, 470, 471, 474, 477, 478, 479, 482, 484, 485, 486, 489, 490, 495, 500, 501, 503, 518, 519], "psf": [497, 508, 541], "psf3d": 163, "psf_tabl": 541, "psfkernel": 164, "psfking": 165, "psfmap": [166, 497], "public": 413, "pull": [387, 390, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455], "pulsar": [51, 487, 527, 528], "purpos": 392, "pwn": 50, "pydant": 414, "python": [387, 388, 394, 412, 424], "qualiti": [396, 418, 464, 466, 473, 495], "quantiti": [494, 503, 533], "radial": 538, "radial_distribut": 48, "radmax2d": 168, "rai": [402, 491], "random": [13, 387], "rang": [498, 506, 543], "read": [468, 474, 478, 479, 499, 500, 501, 548], "read_hermes_cub": [287, 289], "read_yaml": 353, "recommend": [420, 422], "reconstruct": 538, "recopsfmap": 169, "recursive_merge_dict": 354, "redshift": 459, "reduc": [4, 470, 471, 493, 518, 519], "reduct": [8, 396, 402, 460, 464, 465, 466, 473, 484, 485, 489, 498, 509, 518, 519, 543, 598], "refer": [6, 407, 597, 598, 599], "reflect": [498, 544], "reflectedregionsbackgroundmak": [178, 544], "reflectedregionsfind": 179, "region": [13, 398, 401, 458, 460, 464, 466, 498, 500, 501, 544, 548], "region_to_fram": 348, "regiongeom": [204, 548], "regionndmap": [205, 548], "regions_to_compound_region": 349, "regionsfind": 180, "relat": 548, "releas": [387, 396, 412, 413, 417, 418, 426], "remark": 392, "remnant": 529, "remov": [387, 501], "renam": 387, "repositori": 418, "repr": 387, "represent": [410, 494, 552, 553, 554, 555, 556, 557, 558, 559, 560, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 585, 586, 587, 588, 589, 590, 591, 592, 593], "request": [387, 390, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455], "requir": [386, 387, 404, 414], "requires_data": 366, "requires_depend": 367, "resampl": 493, "resample_energy_edg": 149, "residu": [464, 466, 473, 519], "resolv": [408, 487, 489], "respons": [7, 540], "restructur": 407, "result": [402, 411, 458, 460, 465, 468, 476, 479, 484, 489, 494, 601], "return": [387, 388], "review": 392, "ring": [471, 498, 545], "ringbackgroundmak": 181, "rmf": 539, "road": 397, "roadmap": 396, "rotat": 401, "rst": 388, "run": [11, 390, 464, 465, 466, 476, 478, 479, 484, 518, 598], "run_multiprocess": 335, "safe": [498, 543], "safemaskmak": 182, "sampl": [400, 416, 477, 478], "sample_powerlaw": 341, "sample_spher": 342, "sample_sphere_dist": 343, "sample_tim": 344, "sampler": 478, "save": [465, 518, 519], "scale": 602, "scale_plot_flux": 288, "scaledregulargridinterpol": 326, "scalespectralmodel": 263, "scenario": 397, "schedul": 412, "scheme": [398, 413], "script": [11, 13, 387, 424, 513, 514, 516], "section": 407, "sed": 533, "select": [460, 465, 475, 484, 485, 489, 492, 501, 518, 519, 532], "select_nested_model": 290, "sensit": 458, "sensitivityestim": 135, "sep": [432, 448], "serial": [399, 414, 474], "serialis": [415, 416, 465, 479, 497, 501, 502, 508, 531], "seril": 398, "set": [390, 465, 499, 518], "setup": [395, 418, 420, 422, 423, 458, 459, 460, 462, 464, 465, 466, 467, 468, 470, 471, 473, 474, 475, 476, 477, 478, 479, 484, 485, 486, 487, 489, 490, 491, 492, 493, 494, 495, 498, 499, 500, 501, 502, 504, 506, 507, 508, 509, 510, 518, 519, 521], "sever": 387, "share": 502, "shell": 558, "shell2": 559, "shell2spatialmodel": 264, "shellspatialmodel": 265, "shorter": 410, "should": 387, "show": [475, 476, 503], "sigma_to_t": 307, "signal": 476, "signific": [460, 468, 471, 500, 506, 600], "simplepulsar": 54, "simplifi": 410, "simul": [396, 399, 466, 467, 477, 478, 482, 486], "sine": 591, "sinetemporalmodel": 266, "singl": [388, 467], "size": 548, "skip": 387, "sky": [9, 398, 401, 475, 477, 500, 539, 547], "sky_to_fov": 320, "skycoord": 547, "skymodel": [267, 502], "slice": 499, "small": 390, "smooth": [468, 578], "smoothbrokenpowerlawspectralmodel": 268, "snr": 52, "snrtruelovemcke": 53, "solut": 414, "some": [387, 397, 500, 506], "sourc": [1, 2, 458, 460, 464, 468, 475, 476, 477, 478, 486, 492, 500, 504, 507, 521, 525, 526, 527, 528, 530], "sourcecatalog": 56, "sourcecatalog1lhaaso": 57, "sourcecatalog2fhl": 58, "sourcecatalog2hwc": 59, "sourcecatalog2pc": 60, "sourcecatalog3fgl": 61, "sourcecatalog3fhl": 62, "sourcecatalog3hwc": 63, "sourcecatalog3pc": 64, "sourcecatalog4fgl": 65, "sourcecataloggammacat": 66, "sourcecataloghgp": 67, "sourcecataloglargescalehgp": 68, "sourcecatalogobject": 69, "sourcecatalogobject1lhaaso": 70, "sourcecatalogobject2fhl": 71, "sourcecatalogobject2hwc": 72, "sourcecatalogobject2pc": 73, "sourcecatalogobject3fgl": 74, "sourcecatalogobject3fhl": 75, "sourcecatalogobject3hwc": 76, "sourcecatalogobject3pc": 77, "sourcecatalogobject4fgl": 78, "sourcecatalogobjectgammacat": 79, "sourcecatalogobjecthgp": 80, "sourcecatalogobjecthgpscompon": 81, "sourceirfmodel": 398, "sourcemodel": 398, "spatial": [398, 410, 475, 491, 499, 502, 525, 548, 549, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560], "spatial_model_registri": 261, "spatialirfmodel": 398, "spatialmodel": 269, "special": 601, "specif": [398, 407, 492, 494], "spectra": 491, "spectral": [410, 415, 459, 460, 461, 462, 464, 465, 466, 474, 475, 491, 502, 513, 521, 549, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 582], "spectral_model_registri": 262, "spectralirfmodel": 398, "spectralmodel": 270, "spectroscopi": 489, "spectrum": [459, 464, 466, 467, 475, 487, 498, 519], "spectrumdataset": [110, 399, 493, 531], "spectrumdatasetmak": [183, 543], "spectrumdatasetonoff": [111, 399], "sphinx": [387, 388], "spiral": 525, "split_dataset": [116, 119], "spread": [507, 541], "squar": [476, 506], "stack": [464, 471, 473, 531], "standard_scal": 313, "standardise_unit": 372, "start": [407, 420, 524, 525, 526, 532, 547], "stat": [12, 459], "stat_contour": 495, "stat_profile_ul_scipi": 291, "stat_surfac": 495, "statist": [12, 464, 500, 506, 599, 600], "statu": [392, 397, 406, 412], "step": [465, 507, 509, 510, 596], "store": [402, 465, 539], "str": 387, "structur": [406, 408, 441, 521, 596], "structure_funct": 308, "studi": 402, "style": 393, "sub": [499, 524], "subclass": 415, "subpackag": 393, "subset": 492, "suggest": 413, "summari": [427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 473, 508], "super": [579, 580, 581], "superexpcutoffpowerlaw3fglspectralmodel": 271, "superexpcutoffpowerlaw4fgldr3spectralmodel": 272, "superexpcutoffpowerlaw4fglspectralmodel": 273, "supernova": 529, "support": [387, 394, 412, 413, 415, 497, 531], "survei": [516, 603], "symmetr": 538, "systemat": 415, "t": [468, 600], "tabl": [13, 476, 492, 494, 509, 532], "table_row_to_dict": 358, "table_standardise_units_copi": 359, "table_standardise_units_inplac": 360, "tag": 410, "target": 464, "task": [398, 399, 400, 401, 402, 403, 404, 416], "templat": [477, 560, 582], "templatendspatialmodel": 275, "templatendspectralmodel": 276, "templatenpredmodel": 277, "templatephasecurvetemporalmodel": 278, "templatespatialmodel": 279, "templatespectralmodel": 280, "tempor": [478, 486, 502, 549, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593], "temporal_model_registri": 274, "temporalmodel": 281, "term": 413, "terminologi": 397, "test": [13, 387, 390, 416, 476, 487, 506], "text": 387, "theta": 506, "theta2": 506, "thi": 390, "through": 494, "thumbnail": 388, "time": [13, 396, 402, 457, 463, 472, 477, 481, 483, 485, 486, 488, 489, 490, 505, 512, 513, 515, 517, 522, 550, 561, 583, 594, 602], "time_ref_from_dict": 369, "time_ref_to_dict": 370, "time_relative_to_ref": 371, "timemapaxi": [206, 499], "timmerkonig_lightcurve_simul": 293, "to_yaml": 355, "tool": [11, 598], "tooltip": 388, "touch": 390, "trapz_loglog": 325, "troubleshoot": [423, 598], "true": [537, 539, 541], "ts_to_sigma": 309, "tsmapestim": 136, "tune": 416, "tutori": [388, 395, 407, 420, 476, 507, 509, 513], "two": 501, "type": [387, 414, 531, 533], "uncertainti": 405, "underli": [485, 548], "unfold": 415, "unfreez": 501, "unif": 411, "unifi": [398, 411], "uniformprior": 282, "unit": [13, 387], "unit_from_fits_image_hdu": 373, "unix": 387, "unreleas": 456, "up": [390, 406, 408], "upsampl": 548, "us": [387, 397, 415, 416, 421, 424, 465, 476, 477, 484, 493, 495, 497, 499, 518, 519, 523, 526, 530, 531, 532, 533, 534, 540, 542, 543, 544, 547, 568, 579, 580, 581, 595], "user": [394, 416, 536], "util": [4, 5, 8, 10, 13, 406, 596, 600, 602], "valid": 414, "valleespir": 38, "valu": [387, 415, 476, 499, 504], "vari": 486, "variabl": [1, 2, 3, 4, 5, 7, 8, 10, 13, 477, 490], "varianc": 490, "variou": 503, "veloc": 525, "velocity_distribut": 49, "velocity_glon_glat": 321, "venv": 419, "version": [387, 412, 417, 426, 482], "virtual": 419, "visual": [14, 408, 499, 548, 603], "visualis": [468, 489, 494], "volum": 548, "warn": 387, "wc": [499, 548], "wcsgeom": 207, "wcsmap": 208, "wcsndmap": 209, "we": [395, 402, 403, 411, 509], "webpag": 418, "weighted_cash_sum_cython": 310, "what": [387, 390, 392, 395, 397, 402, 403, 411, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 441, 442, 444, 445, 446, 447, 448, 449, 462, 464, 465, 468, 475, 484, 518, 521], "where": 387, "which": 387, "wind": 528, "wise": 484, "without": 504, "wobbleregionsfind": 184, "work": 532, "workflow": [11, 596], "write": [387, 392, 465, 478, 499, 500, 532, 548, 598], "write_yaml": 356, "wstat": [311, 599, 600, 601], "wstatcountsstatist": 294, "yaml": [410, 465, 518, 552, 553, 554, 555, 556, 557, 558, 559, 560, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 585, 586, 587, 588, 589, 590, 591, 592, 593], "your": [423, 465, 598], "yusifovkucuk2004": 39, "yusifovkucuk2004b": 40, "zhaoprofil": 27}})