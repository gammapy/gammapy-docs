Search.setIndex({"alltitles": {"0.1 (Aug 25, 2014)": [[423, null]], "0.10 (Jan 28, 2019)": [[424, null]], "0.11 (Mar 29, 2019)": [[425, null]], "0.12 (May 30, 2019)": [[426, null]], "0.13 (Jul 26, 2019)": [[427, null]], "0.14 (Sep 30, 2019)": [[428, null]], "0.15 (Dec 3, 2019)": [[429, null]], "0.16 (Feb 1, 2020)": [[430, null]], "0.17 (Apr 1, 2020)": [[431, null]], "0.18 (Nov 4th, 2020)": [[432, null]], "0.18.1 (Nov 6th, 2020)": [[433, null]], "0.18.2 (Nov 19th, 2020)": [[434, null]], "0.19 (Nov 22nd, 2021)": [[435, null]], "0.2 (Apr 13, 2015)": [[436, null]], "0.20 (May 12th, 2022)": [[437, null]], "0.20.1 (June 16th, 2022)": [[438, null]], "0.3 (Aug 13, 2015)": [[439, null]], "0.4 (Apr 20, 2016)": [[440, null]], "0.5 (Nov 22, 2016)": [[441, null]], "0.6 (Apr 28, 2017)": [[442, null]], "0.7 (Feb 28, 2018)": [[443, null]], "0.8 (Sep 23, 2018)": [[444, null]], "0.9 (Nov 29, 2018)": [[445, null]], "1.0 (November 10th, 2022)": [[446, null]], "1.0.1 (March 14th, 2023)": [[447, null]], "1.0.2 (December 6th, 2023)": [[448, null]], "1.1 (June 13th 2023)": [[449, null]], "1.2 (February 29th 2024)": [[450, null]], "1.3 (November 26th, 2024)": [[451, null]], "1D Spectral": [[502, "d-spectral"]], "1D spectrum simulation": [[462, null]], "2.0 (unreleased)": [[452, null]], "2D Image": [[502, "d-image"]], "2D map fitting": [[464, null]], "3D Cube": [[502, "d-cube"]], "3D detailed analysis": [[467, null]], "3D map simulation": [[475, null]], "A fully configured Flux Points Estimation": [[486, "a-fully-configured-flux-points-estimation"]], "A note on statistics": [[459, "a-note-on-statistics"]], "A note on the internal representation": [[486, "a-note-on-the-internal-representation"]], "API Links": [[384, "api-links"]], "API changes": [[446, "api-changes"], [449, "api-changes"], [450, "api-changes"], [451, "api-changes"]], "API reference": [[6, null]], "ASmoothMapEstimator": [[120, null]], "Abstract": [[388, "abstract"], [389, "abstract"], [390, "abstract"], [391, "abstract"], [392, "abstract"], [393, "abstract"], [395, "abstract"], [396, "abstract"], [397, "abstract"], [398, "abstract"], [399, "abstract"], [400, "abstract"], [401, "abstract"], [402, "abstract"], [403, "abstract"], [404, "abstract"], [405, "abstract"], [406, "abstract"], [407, "abstract"], [408, "abstract"], [409, "abstract"], [410, "abstract"], [411, "abstract"], [412, "abstract"]], "Acceptation of the Developer Certificate of Origin (DCO)": [[386, "acceptation-of-the-developer-certificate-of-origin-dco"]], "Accessing Data": [[490, "accessing-data"]], "Accessing and visualising results": [[463, "accessing-and-visualising-results"]], "Accessing and visualising the results": [[486, "accessing-and-visualising-the-results"]], "Accessing contents of a dataset": [[485, "accessing-contents-of-a-dataset"]], "Accessor methods": [[534, "accessor-methods"]], "Account for spectral absorption due to the EBL": [[455, null]], "Adaptive smoothing": [[463, "adaptive-smoothing"]], "AdaptiveRingBackgroundMaker": [[170, null]], "Add a model on multiple datasets": [[492, "add-a-model-on-multiple-datasets"]], "Add new parametric models": [[394, "add-new-parametric-models"]], "Adding Non-Spatial Axes": [[490, "adding-non-spatial-axes"]], "Adding Non-contiguous axes": [[490, "adding-non-contiguous-axes"]], "Additional Models": [[406, "additional-models"]], "Additional PSF classes": [[528, "additional-psf-classes"]], "Additional utilities": [[580, "additional-utilities"]], "Aim": [[492, "aim"]], "Alternative": [[407, "alternative"]], "Alternatives": [[391, "alternatives"], [394, "alternatives"], [397, "alternatives"], [399, "alternatives"], [400, "alternatives"], [401, "alternatives"], [403, "alternatives"], [404, "alternatives"], [410, "alternatives"]], "Alternatives / Outlook": [[396, "alternatives-outlook"]], "Analysis": [[15, null]], "Analysis configuration": [[460, "analysis-configuration"], [467, "analysis-configuration"], [476, "analysis-configuration"], [506, "analysis-configuration"]], "Analysis steps": [[580, "analysis-steps"]], "Analysis workflow": [[580, "analysis-workflow"]], "AnalysisConfig": [[16, null]], "As a function of of true energy and offset angle (PSF_TABLE)": [[528, "as-a-function-of-of-true-energy-and-offset-angle-gadf-psf-table"]], "Assert convention": [[383, "assert-convention"]], "Assign to model to all datasets": [[477, "assign-to-model-to-all-datasets"]], "Assigning background models to datasets": [[492, "assigning-background-models-to-datasets"]], "Astrophysical source models": [[513, null]], "Astrophysical source population models": [[512, null]], "Astrophysics": [[511, null]], "Authorship policy": [[409, "authorship-policy"]], "BACKEND_DEFAULT": [[325, null]], "BSD or GPL license?": [[383, "bsd-or-gpl-license"]], "Background": [[497, "background"], [525, null]], "Background / What we have now": [[398, "background-what-we-have-now"]], "Background Model Handling": [[405, "background-model-handling"]], "Background estimation": [[489, "background-estimation"], [530, "background-estimation"]], "Background2D": [[149, null]], "Background3D": [[150, null]], "BackgroundIRF": [[151, null]], "BackgroundIRFModel": [[394, "backgroundirfmodel"]], "BackgroundModel": [[394, "backgroundmodel"]], "Basic image exploration and fitting": [[469, null]], "Basic operators": [[490, "basic-operators"]], "Bayesian blocks": [[482, "bayesian-blocks"]], "Bin volume and angular size": [[535, "bin-volume-and-angular-size"]], "Boundary mask": [[491, "boundary-mask"]], "Broken power law spectral model": [[549, null]], "BrokenPowerLawSpectralModel": [[220, null]], "Bug fixes and improvements": [[437, "bug-fixes-and-improvements"], [446, "bug-fixes-and-improvements"], [449, "bug-fixes-and-improvements"], [450, "bug-fixes-and-improvements"], [451, "bug-fixes-and-improvements"]], "Build": [[414, "build"]], "Building 1D datasets from the new observations": [[477, "building-1d-datasets-from-the-new-observations"]], "Building the 1D analysis configuration": [[476, "building-the-1d-analysis-configuration"]], "Building the 3D analysis configuration": [[476, "building-the-3d-analysis-configuration"]], "Built-in models": [[579, "built-in-models"]], "Bundled gammapy.extern code": [[383, "bundled-gammapy-extern-code"]], "BurkertProfile": [[17, null]], "CATALOG_REGISTRY": [[55, null]], "CITATION.cff": [[409, "citation-cff"]], "CLUMPY": [[510, "clumpy"]], "CTA 1DC": [[497, "cta-1dc"]], "CTAO with Gammapy": [[497, null]], "Caplog fixture": [[383, "caplog-fixture"]], "Case 1: Background systematics as a nuisance parameter #3955": [[411, "case-1-background-systematics-as-a-nuisance-parameter-3955"]], "Case 1: Estimate the posterior distribution with a tuning-parameter free approach": [[412, "case-1-estimate-the-posterior-distribution-with-a-tuning-parameter-free-approach"]], "Case 2: Favoring positive values for flux amplitudes": [[411, "case-2-favoring-positive-values-for-flux-amplitudes"]], "Case 2: Minuit convergence issues": [[412, "case-2-minuit-convergence-issues"]], "Case 3: Model comparison using the Bayesian evidence (aka marginal evidence)": [[412, "case-3-model-comparison-using-the-bayesian-evidence-aka-marginal-evidence"]], "Case 3: Support unfolding methods for spectral flux points #4122": [[411, "case-3-support-unfolding-methods-for-spectral-flux-points-4122"]], "Case 4: Parallelization of the \u201cfitting\u201d": [[412, "case-4-parallelization-of-the-fitting"]], "CaseBattacharya1998": [[28, null]], "Cash : Poisson data with background model": [[583, "cash-poisson-data-with-background-model"]], "Cash counts statistic": [[584, "cash-counts-statistic"]], "CashCountsStatistic": [[291, null]], "Catalog table": [[484, "catalog-table"]], "Caveat": [[583, "caveat"]], "Changelog": [[403, "changelog"]], "Check Python code": [[384, "check-python-code"]], "Check broken links": [[384, "check-broken-links"]], "Check setup": [[454, "check-setup"], [456, "check-setup"], [459, "check-setup"], [460, "check-setup"], [461, "check-setup"], [462, "check-setup"], [463, "check-setup"], [464, "check-setup"], [465, "check-setup"], [467, "check-setup"], [468, "check-setup"], [469, "check-setup"], [470, "check-setup"], [471, "check-setup"], [472, "check-setup"], [473, "check-setup"], [476, "check-setup"], [477, "check-setup"], [478, "check-setup"], [479, "check-setup"], [483, "check-setup"], [484, "check-setup"], [485, "check-setup"], [487, "check-setup"], [489, "check-setup"], [490, "check-setup"], [491, "check-setup"], [492, "check-setup"], [493, "check-setup"], [495, "check-setup"], [497, "check-setup"], [498, "check-setup"], [499, "check-setup"], [500, "check-setup"], [506, "check-setup"], [507, "check-setup"], [508, "check-setup"]], "Check the dataset we produced": [[499, "check-the-dataset-we-produced"]], "Check your setup": [[419, "check-your-setup"]], "Checker": [[357, null]], "Choose a thumbnail and tooltip for the tutorial gallery": [[384, "choose-a-thumbnail-and-tooltip-for-the-tutorial-gallery"]], "Citation scheme": [[409, "citation-scheme"]], "Class attributes": [[384, "class-attributes"]], "Classes": [[0, "classes"], [1, "classes"], [1, "id1"], [1, "id2"], [2, "classes"], [3, "classes"], [4, "classes"], [5, "classes"], [7, "classes"], [8, "classes"], [9, "classes"], [10, "classes"], [10, "id2"], [12, "classes"], [13, "classes"], [13, "id5"], [13, "id7"], [13, "id10"], [13, "id15"], [14, "classes"]], "Clean up gammapy.utils": [[402, "clean-up-gammapy-utils"]], "Clobber or overwrite?": [[383, "clobber-or-overwrite"]], "Code in RST files": [[384, "code-in-rst-files"]], "Code in docstrings in Python files": [[384, "code-in-docstrings-in-python-files"]], "Code quality": [[414, "code-quality"]], "Collection of the personal information of authors": [[409, "collection-of-the-personal-information-of-authors"]], "Colormaps": [[587, "colormaps"]], "Combining event lists and GTIs": [[519, "combining-event-lists-and-gtis"]], "Combining two Models": [[492, "combining-two-models"]], "Command line tools": [[582, null]], "Command line tools using click": [[383, "command-line-tools-using-click"]], "Command not found": [[582, "command-not-found"]], "Common API": [[486, "common-api"]], "Compare against the literature": [[461, "compare-against-the-literature"]], "Compare results": [[476, "compare-results"]], "Compound Spectral Model": [[493, "compound-spectral-model"]], "Compound spectral model": [[550, null]], "CompoundSpectralModel": [[221, null]], "Computation times": [[453, null], [458, null], [466, null], [474, null], [480, null], [496, null], [501, null], [503, null], [505, null], [509, null], [537, null], [547, null], [568, null], [578, null]], "Compute Flux Points": [[459, "compute-flux-points"]], "Compute correlated significance and correlated excess maps": [[465, "compute-correlated-significance-and-correlated-excess-maps"]], "Compute images": [[469, "compute-images"]], "Compute sensitivity": [[454, "compute-sensitivity"]], "Computing contours using stat_contour": [[487, "computing-contours-using-stat-contour"]], "Computing contours using stat_surface": [[487, "computing-contours-using-stat-surface"]], "Computing flux points": [[507, "computing-flux-points"]], "Conda Environments": [[415, "conda-environments"]], "Confidence contours": [[487, "confidence-contours"]], "Configurable analysis": [[580, "configurable-analysis"]], "Configuration": [[473, "configuration"]], "Configuration for stacked and joint analysis": [[467, "configuration-for-stacked-and-joint-analysis"]], "Configuration of the analysis": [[460, "configuration-of-the-analysis"]], "Constant spatial model": [[538, null]], "Constant spectral model": [[551, null]], "Constant temporal model": [[569, null]], "ConstantFluxSpatialModel": [[222, null]], "ConstantSpatialModel": [[223, null]], "ConstantSpectralModel": [[224, null]], "ConstantTemporalModel": [[225, null]], "Context": [[456, "context"], [457, "context"], [459, "context"], [460, "context"], [461, "context"], [462, "context"], [463, "context"], [464, "context"], [465, "context"], [468, "context"], [470, "context"], [471, "context"], [473, "context"], [475, "context"], [476, "context"], [477, "context"], [478, "context"], [481, "context"], [482, "context"], [491, "context"], [494, "context"], [495, "context"], [506, "context"], [507, "context"]], "Continuous integration": [[414, "continuous-integration"]], "Contribution in conferences": [[409, "contribution-in-conferences"]], "Contributors": [[423, "contributors"], [424, "contributors"], [425, "contributors"], [426, "contributors"], [427, "contributors"], [428, "contributors"], [429, "contributors"], [430, "contributors"], [431, "contributors"], [432, "contributors"], [435, "contributors"], [436, "contributors"], [437, "contributors"], [438, "contributors"], [439, "contributors"], [440, "contributors"], [441, "contributors"], [442, "contributors"], [443, "contributors"], [444, "contributors"], [445, "contributors"], [446, "contributors"], [447, "contributors"], [448, "contributors"], [449, "contributors"], [450, "contributors"], [451, "contributors"]], "Convert a jupyter notebook to python script in the sphinx-gallery format": [[383, "convert-a-jupyter-notebook-to-python-script-in-the-sphinx-gallery-format"]], "Coordinate and axis names": [[383, "coordinate-and-axis-names"]], "Coordinates defined by the RegionGeom": [[535, "coordinates-defined-by-the-regiongeom"]], "Correct format for bullet point list": [[384, "correct-format-for-bullet-point-list"]], "Counts": [[498, "counts"]], "Counts and fit statistics": [[584, "counts-and-fit-statistics"]], "Counts statistics classes": [[584, "counts-statistics-classes"]], "Covariance": [[211, null]], "Covariance and parameters errors": [[487, "covariance-and-parameters-errors"]], "CovarianceResult": [[212, null]], "Create DL4 product - PSFMap": [[488, "create-dl4-product-psfmap"]], "Create a FluxMaps object through one of the estimators.": [[486, "create-a-fluxmaps-object-through-one-of-the-estimators"]], "Create a mask in energy": [[491, "create-a-mask-in-energy"]], "Create a stacked dataset": [[465, "create-a-stacked-dataset"]], "Create edisp kernel map": [[488, "create-edisp-kernel-map"]], "Create exclusion mask": [[459, "create-exclusion-mask"], [465, "create-exclusion-mask"]], "Create exposure map": [[488, "create-exposure-map"]], "Create the energy-dependent temporal model": [[472, "create-the-energy-dependent-temporal-model"]], "Create the maker classes to be used": [[507, "create-the-maker-classes-to-be-used"]], "Create the makers": [[456, "create-the-makers"]], "Create the mask from a catalog of sources": [[491, "create-the-mask-from-a-catalog-of-sources"]], "Create the mask from a list of regions": [[491, "create-the-mask-from-a-list-of-regions"]], "Create the mask from statistically significant pixels in a dataset": [[491, "create-the-mask-from-statistically-significant-pixels-in-a-dataset"]], "Create the mask map": [[491, "create-the-mask-map"]], "Create the temporal model and write it to disk": [[472, "create-the-temporal-model-and-write-it-to-disk"]], "Creating WCS Maps": [[490, "creating-wcs-maps"]], "Creating a RegionGeom": [[535, "creating-a-regiongeom"]], "Creating a RegionNDMap": [[535, "creating-a-regionndmap"]], "Creating a mask for fitting": [[491, "creating-a-mask-for-fitting"]], "Creating a mask manually": [[491, "creating-a-mask-manually"]], "Creating an empty dataset": [[485, "creating-an-empty-dataset"]], "Creating an exclusion mask": [[491, "creating-an-exclusion-mask"]], "Creating from a Map Geometry": [[490, "creating-from-a-map-geometry"]], "Creating the config file": [[464, "creating-the-config-file"], [465, "creating-the-config-file"]], "Creation of the Flux points": [[460, "creation-of-the-flux-points"]], "Creation of the data reduction makers": [[477, "creation-of-the-data-reduction-makers"]], "Creation of the datasets": [[477, "creation-of-the-datasets"]], "Creation of the model": [[460, "creation-of-the-model"]], "Cube plotting": [[490, "cube-plotting"]], "Cumulative excess and significance": [[456, "cumulative-excess-and-significance"]], "Current status": [[408, "current-status"]], "Custom models": [[579, "custom-models"]], "Cutouts": [[490, "cutouts"]], "Cython": [[414, "cython"]], "DATASET_REGISTRY": [[98, null]], "DCO implementation": [[409, "dco-implementation"]], "DL3 DR1": [[500, "dl3-dr1"]], "DMProfile": [[18, null]], "D_SUN_TO_GALACTIC_CENTER": [[310, null]], "Dark matter": [[510, null]], "Dark matter spatial and spectral models": [[483, null]], "DarkMatterAnnihilationSpectralModel": [[19, null]], "DarkMatterDecaySpectralModel": [[20, null]], "Data Fitting": [[398, "data-fitting"]], "Data access and selection (DL3)": [[519, null]], "Data analysis": [[502, "data-analysis"]], "Data analysis subpackages in gammapy": [[389, "data-analysis-subpackages-in-gammapy"]], "Data and Observation handling": [[392, "data-and-observation-handling"]], "Data and models files": [[468, "data-and-models-files"]], "Data exploration": [[502, "data-exploration"]], "Data reduction": [[398, "data-reduction"], [467, "data-reduction"], [467, "id1"], [481, "data-reduction"], [506, "data-reduction"], [507, "data-reduction"]], "Data reduction (DL3 to DL4)": [[530, null]], "Data reduction into a MapDataset": [[499, "data-reduction-into-a-mapdataset"]], "Data reduction loop": [[489, "data-reduction-loop"]], "Data selection": [[481, "data-selection"]], "Data structures": [[508, null]], "DataStore": [[82, null]], "Dataset": [[99, null], [395, "dataset"], [489, "dataset"]], "Dataset helper / convenience methods": [[395, "dataset-helper-convenience-methods"]], "Dataset serialization": [[395, "dataset-serialization"]], "Dataset simulations": [[461, "dataset-simulations"]], "Dataset specific quantities (\u201ccounts like\u201d)": [[486, "dataset-specific-quantities-counts-like"]], "DatasetModels": [[226, null]], "Datasets": [[100, null], [392, "datasets"], [395, "datasets"], [410, "datasets"], [485, "datasets"]], "Datasets (DL4)": [[518, null]], "Datasets - Reduced data, IRFs, models": [[485, null]], "Datasets serialization": [[468, "datasets-serialization"]], "DatasetsMaker": [[171, null]], "Datastore": [[497, "datastore"]], "Dealing with links": [[384, "dealing-with-links"]], "Decision": [[388, "decision"], [389, "decision"], [390, "decision"], [391, "decision"], [392, "decision"], [393, "decision"], [394, "decision"], [395, "decision"], [396, "decision"], [397, "decision"], [398, "decision"], [399, "decision"], [400, "decision"], [401, "decision"], [402, "decision"], [403, "decision"], [404, "decision"], [405, "decision"], [406, "decision"], [407, "decision"], [408, "decision"], [409, "decision"], [410, "decision"], [411, "decision"], [412, "decision"]], "Define Target Region": [[459, "define-target-region"]], "Define an Observation": [[471, "define-an-observation"]], "Define an observation and make a dataset": [[472, "define-an-observation-and-make-a-dataset"]], "Define analysis region and energy binning": [[454, "define-analysis-region-and-energy-binning"]], "Define map geometry": [[469, "define-map-geometry"]], "Define the MapDataset": [[471, "define-the-mapdataset"]], "Define the ON region": [[461, "define-the-on-region"]], "Define the Sky model: a point-like source": [[471, "define-the-sky-model-a-point-like-source"]], "Define the geometries": [[456, "define-the-geometries"]], "Define the geometry": [[491, "define-the-geometry"]], "Define the model": [[507, "define-the-model"]], "Define the model to be used": [[476, "define-the-model-to-be-used"], [476, "id3"]], "Define the simulation source model": [[472, "define-the-simulation-source-model"]], "Define time intervals": [[477, "define-time-intervals"]], "Define underlying model": [[477, "define-underlying-model"]], "Defining the datastore and selecting observations": [[507, "defining-the-datastore-and-selecting-observations"]], "Defining the geometry": [[477, "defining-the-geometry"]], "Definition of a Contributor": [[409, "definition-of-a-contributor"]], "Definition of the Maintainer": [[409, "definition-of-the-maintainer"]], "Definition of the data selection": [[476, "definition-of-the-data-selection"], [476, "id1"]], "Definition of the dataset geometry": [[476, "definition-of-the-dataset-geometry"], [476, "id2"]], "Dependencies": [[382, null], [400, "dependencies"]], "Deprecating a function or a class": [[383, "deprecating-a-function-or-a-class"]], "Deprecation": [[408, "deprecation"]], "Derivation of the WStat formula": [[585, null]], "Detailed plan": [[390, "detailed-plan"]], "Developer How To": [[383, null]], "Developer guide": [[385, null]], "Discussion / Alternatives": [[398, "discussion-alternatives"]], "Disk spatial model": [[539, null]], "DiskSpatialModel": [[227, null]], "Dissolve gammapy.background": [[402, "dissolve-gammapy-background"]], "Dissolve gammapy.image": [[402, "dissolve-gammapy-image"]], "Distributions": [[400, "distributions"], [400, "id1"]], "Documentation": [[392, "documentation"], [450, "documentation"]], "Documentation How To": [[384, null]], "Documentation building": [[384, "documentation-building"]], "Documentation guidelines": [[384, "documentation-guidelines"]], "Documentation improvements": [[451, "documentation-improvements"]], "Download": [[414, "download"]], "EBL absorption spectral model": [[548, null]], "EBLAbsorptionNormSpectralModel": [[228, null]], "EBL_DATA_BUILTIN": [[229, null]], "EDispKernel": [[152, null]], "EDispKernelMap": [[153, null]], "EDispMap": [[154, null]], "ESTIMATOR_REGISTRY": [[121, null]], "Effective Area": [[488, "effective-area"]], "Effective area": [[497, "effective-area"], [524, null]], "EffectiveAreaTable2D": [[155, null]], "EinastoProfile": [[21, null]], "Energy Dependent Spatial Models": [[406, "energy-dependent-spatial-models"]], "Energy Dispersion": [[488, "energy-dispersion"], [498, "energy-dispersion"], [526, null]], "Energy dispersion": [[497, "energy-dispersion"]], "Energy edges": [[520, "energy-edges"]], "EnergyDependentMorphologyEstimator": [[122, null]], "EnergyDependentMultiGaussPSF": [[156, null]], "EnergyDispersion2D": [[157, null]], "Estimating TS": [[584, "estimating-ts"]], "Estimation of time variability in a lightcurve": [[482, null]], "Estimator": [[123, null]], "Estimators": [[410, "estimators"], [486, null]], "Estimators (DL4 to DL5, and DL6)": [[520, null]], "Event Simulation": [[392, "event-simulation"]], "Event lists": [[508, "event-lists"]], "Event sampling": [[471, null]], "EventList": [[83, null]], "EventListMetaData": [[84, null]], "Events": [[497, "events"], [498, "events"]], "Example": [[583, "example"], [583, "id2"]], "Example 1: Including Prior Information about the Sources Index": [[495, "example-1-including-prior-information-about-the-sources-index"]], "Example 2: Encouraging Positive Amplitude Values": [[495, "example-2-encouraging-positive-amplitude-values"]], "Example of extrapolation": [[567, "example-of-extrapolation"]], "Example plot": [[538, "example-plot"], [539, "example-plot"], [540, "example-plot"], [541, "example-plot"], [542, "example-plot"], [543, "example-plot"], [544, "example-plot"], [545, "example-plot"], [546, "example-plot"], [548, "example-plot"], [549, "example-plot"], [550, "example-plot"], [551, "example-plot"], [552, "example-plot"], [553, "example-plot"], [554, "example-plot"], [555, "example-plot"], [556, "example-plot"], [557, "example-plot"], [558, "example-plot"], [559, "example-plot"], [560, "example-plot"], [561, "example-plot"], [562, "example-plot"], [563, "example-plot"], [564, "example-plot"], [565, "example-plot"], [566, "example-plot"], [567, "example-plot"], [569, "example-plot"], [570, "example-plot"], [571, "example-plot"], [572, "example-plot"], [573, "example-plot"], [574, "example-plot"], [575, "example-plot"]], "Examples using FluxPointsEstimator": [[520, "examples-using-fluxpointsestimator"]], "Examples using LightCurveEstimator": [[520, "examples-using-lightcurveestimator"]], "Examples using MapDataset": [[518, "examples-using-mapdataset"]], "Examples using MapDatasetMaker": [[530, "examples-using-mapdatasetmaker"]], "Examples using SpectrumDataset": [[518, "examples-using-spectrumdataset"]], "Examples using SpectrumDatasetMaker": [[530, "examples-using-spectrumdatasetmaker"]], "Examples using gammapy.analysis.Analysis": [[521, "examples-using-gammapy-analysis-analysis"]], "Examples using gammapy.makers.FoVBackgroundMaker": [[529, "examples-using-gammapy-makers-fovbackgroundmaker"]], "Examples using gammapy.makers.ReflectedRegionsBackgroundMaker": [[531, "examples-using-gammapy-makers-reflectedregionsbackgroundmaker"]], "Excess and Significance": [[584, "excess-and-significance"], [584, "id2"]], "Excess errors": [[584, "excess-errors"], [584, "id4"]], "Excess estimators": [[407, "excess-estimators"]], "ExcessMapEstimator": [[124, null]], "Exclusion masks": [[491, "exclusion-masks"]], "Execution": [[582, "execution"]], "Exemplary additional prior subclasses:": [[411, "exemplary-additional-prior-subclasses"]], "Exercises": [[454, "exercises"], [457, "exercises"], [459, "exercises"], [462, "exercises"], [467, "exercises"], [469, "exercises"], [471, "exercises"], [472, "exercises"], [478, "exercises"], [481, "exercises"], [497, "exercises"], [498, "exercises"], [499, "exercises"], [500, "exercises"], [508, "exercises"], [508, "id1"], [508, "id2"], [508, "id3"]], "Existing code": [[389, "existing-code"]], "ExpCutoffPowerLaw3FGLSpectralModel": [[230, null]], "ExpCutoffPowerLawNormSpectralModel": [[231, null]], "ExpCutoffPowerLawSpectralModel": [[232, null]], "ExpDecay temporal model": [[570, null]], "ExpDecayTemporalModel": [[233, null]], "Expected number of detected events": [[527, "expected-number-of-detected-events"]], "Exploration of the fit results": [[460, "exploration-of-the-fit-results"]], "Explore the fit results": [[456, "explore-the-fit-results"]], "Explore the results": [[456, "explore-the-results"]], "Exponential": [[29, null]], "Exponential Cut-Off Powerlaw Fit": [[457, "exponential-cut-off-powerlaw-fit"]], "Exponential cutoff power law norm spectral model": [[554, null]], "Exponential cutoff power law spectral model": [[552, null]], "Exponential cutoff power law spectral model used for 3FGL": [[553, null]], "Expose model parameters as attributes": [[394, "expose-model-parameters-as-attributes"]], "Exposure": [[498, "exposure"]], "Extended source using a template": [[471, "extended-source-using-a-template"]], "Extract the light curve": [[477, "extract-the-light-curve"]], "Extract the lightcurve": [[478, "extract-the-lightcurve"]], "Extracting the light curve": [[476, "extracting-the-light-curve"]], "Extracting the ring background": [[465, "extracting-the-ring-background"]], "Factorisation of the IRFs": [[527, "factorisation-of-the-irfs"]], "FaucherKaspi2006": [[30, null]], "FaucherKaspi2006VelocityBimodal": [[31, null]], "FaucherKaspi2006VelocityMaxwellian": [[32, null]], "FaucherSpiral": [[33, null]], "Feature Freeze and Branching": [[413, "feature-freeze-and-branching"]], "Fermi-LAT 3FHL: map dataset for 3D analysis": [[468, "fermi-lat-3fhl-map-dataset-for-3d-analysis"]], "Fermi-LAT with Gammapy": [[498, null]], "FermiST": [[510, "fermist"]], "FermipyDatasetsReader": [[101, null]], "Files": [[497, "files"]], "Filling a RegionNDMap": [[535, "filling-a-regionndmap"]], "Filling maps from event lists": [[490, "filling-maps-from-event-lists"]], "Filling maps from interpolation": [[490, "filling-maps-from-interpolation"]], "Filter the observations list in time intervals": [[477, "filter-the-observations-list-in-time-intervals"]], "Final remarks": [[388, "final-remarks"]], "Final result": [[585, "final-result"]], "Fit": [[213, null], [475, "fit"], [498, "fit"]], "Fit quality and model residuals": [[459, "fit-quality-and-model-residuals"], [461, "fit-quality-and-model-residuals"]], "Fit quality assessment": [[487, "fit-quality-assessment"]], "Fit quality assessment and model residuals for a MapDataset": [[467, "fit-quality-assessment-and-model-residuals-for-a-mapdataset"]], "Fit quality assessment and model residuals for a joint Datasets": [[467, "fit-quality-assessment-and-model-residuals-for-a-joint-datasets"]], "Fit spectrum": [[459, "fit-spectrum"], [461, "fit-spectrum"]], "Fit statistics": [[583, null]], "Fit the datasets": [[478, "fit-the-datasets"]], "Fit the model": [[507, "fit-the-model"]], "FitResult": [[214, null]], "Fitting": [[392, "fitting"], [487, null]], "Fitting Multiple Datasets with and without the Prior": [[495, "fitting-multiple-datasets-with-and-without-the-prior"]], "Fitting a Dataset with and without the Prior": [[495, "fitting-a-dataset-with-and-without-the-prior"]], "Fitting options": [[487, "fitting-options"]], "Fitting temporal models": [[478, "fitting-temporal-models"]], "Fitting the obtained light curve": [[478, "fitting-the-obtained-light-curve"]], "Fix non-Unix line endings": [[383, "fix-non-unix-line-endings"]], "FixedPointingInfo": [[85, null]], "Float data type: 32 bit or 64 bit?": [[383, "float-data-type-32-bit-or-64-bit"]], "Flux Points Estimation": [[486, "flux-points-estimation"]], "Flux Profile Estimation": [[473, null]], "Flux maps": [[520, "flux-maps"]], "Flux maps for annihilation": [[483, "flux-maps-for-annihilation"]], "Flux maps for decay": [[483, "flux-maps-for-decay"]], "Flux point fitting": [[457, null]], "Flux points": [[484, "flux-points"], [506, "flux-points"], [520, "flux-points"]], "Flux quantities": [[520, "flux-quantities"]], "FluxMaps": [[125, null]], "FluxMetaData": [[126, null]], "FluxPoints": [[127, null]], "FluxPointsDataset": [[102, null], [395, "fluxpointsdataset"], [485, "fluxpointsdataset"]], "FluxPointsEstimator": [[128, null]], "FluxProfileEstimator": [[129, null]], "FoV background": [[489, "fov-background"], [529, null]], "FoVAlignment": [[158, null]], "FoVBackgroundMaker": [[172, null]], "FoVBackgroundModel": [[234, null]], "Fractional excess variance, point-to-point fractional variance and doubling/halving time": [[482, "fractional-excess-variance-point-to-point-fractional-variance-and-doubling-halving-time"]], "Freezing and unfreezing model parameters": [[492, "freezing-and-unfreezing-model-parameters"]], "Functions": [[1, "functions"], [3, "functions"], [4, "functions"], [4, "id1"], [5, "functions"], [7, "functions"], [8, "functions"], [9, "functions"], [10, "functions"], [10, "id1"], [10, "id3"], [12, "functions"], [13, "functions"], [13, "id1"], [13, "id2"], [13, "id3"], [13, "id4"], [13, "id6"], [13, "id8"], [13, "id9"], [13, "id12"], [13, "id13"], [13, "id14"], [13, "id16"], [13, "id17"], [14, "functions"]], "Functions or class methods that return a single object": [[384, "functions-or-class-methods-that-return-a-single-object"]], "Functions returning several values": [[383, "functions-returning-several-values"]], "Further extensions": [[455, "further-extensions"]], "Further references": [[583, "further-references"]], "GTI": [[86, null]], "Galactic diffuse background": [[498, "galactic-diffuse-background"]], "Galactocentric spatial distributions": [[512, "galactocentric-spatial-distributions"]], "Gamma-ray spectra at production": [[483, "gamma-ray-spectra-at-production"]], "Gammapy": [[421, null]], "Gammapy Binder": [[414, "id1"]], "Gammapy analysis workflow and package structure": [[580, null]], "Gammapy overview": [[403, "gammapy-overview"]], "Gammapy repository": [[414, "gammapy-repository"]], "Gammapy webpages": [[414, "gammapy-webpages"]], "Gaussian spatial model": [[540, null]], "Gaussian spectral model": [[555, null]], "Gaussian temporal model": [[571, null]], "GaussianPrior": [[235, null]], "GaussianSpatialModel": [[236, null]], "GaussianSpectralModel": [[237, null]], "GaussianTemporalModel": [[238, null]], "General Gammapy publications": [[409, "general-gammapy-publications"]], "General code style guidelines": [[389, "general-code-style-guidelines"]], "General conventions": [[383, "general-conventions"]], "General idea and class diagram": [[393, "general-idea-and-class-diagram"]], "General method": [[520, "general-method"]], "General organization of the new approach": [[398, "general-organization-of-the-new-approach"]], "Generalist estimators": [[407, "generalist-estimators"]], "Generalized Gaussian temporal model": [[572, null]], "Generalized gaussian spatial model": [[541, null]], "GeneralizedGaussianSpatialModel": [[239, null]], "GeneralizedGaussianTemporalModel": [[240, null]], "Generating log messages": [[383, "generating-log-messages"]], "Geom": [[193, null]], "Get a fit stat profile for the redshift": [[455, "get-a-fit-stat-profile-for-the-redshift"]], "Get in touch early": [[386, "get-in-touch-early"]], "Get set up": [[386, "get-set-up"]], "Get the flux points": [[455, "get-the-flux-points"]], "Getting started": [[403, "getting-started"], [416, null], [511, "getting-started"], [512, "getting-started"], [513, "getting-started"]], "Getting started section restructuring": [[403, "getting-started-section-restructuring"]], "Getting started with data": [[519, "getting-started-with-data"]], "Getting started with maps": [[534, "getting-started-with-maps"]], "Getting the reduced dataset": [[464, "getting-the-reduced-dataset"], [465, "getting-the-reduced-dataset"]], "Global Model Handling": [[405, "global-model-handling"]], "Glossary": [[581, "glossary"]], "Glossary and references": [[581, null]], "Goodness of fit": [[585, "goodness-of-fit"]], "Guidelines and specific actions": [[403, "guidelines-and-specific-actions"]], "H.E.S.S. with Gammapy": [[500, null]], "HAWC data access and reduction": [[499, "hawc-data-access-and-reduction"]], "HAWC with Gammapy": [[499, null]], "HAWC: 1D dataset for flux point fitting": [[468, "hawc-1d-dataset-for-flux-point-fitting"]], "HDUIndexTable": [[87, null]], "HDULocation": [[318, null]], "HEALPix geometry": [[533, "healpix-geometry"]], "HEALPix-based maps": [[533, null]], "HESS-DL3: 1D ON/OFF dataset for spectral fitting": [[468, "hess-dl3-1d-on-off-dataset-for-spectral-fitting"]], "Handling of conference material": [[409, "handling-of-conference-material"]], "Help!?": [[419, "help"]], "Hierarchical clustering of observations": [[494, "hierarchical-clustering-of-observations"]], "Hierarchy": [[410, "hierarchy"]], "High Level Analysis Interface": [[521, null]], "High level interface": [[392, "high-level-interface"], [506, null]], "How To": [[403, "how-to"], [522, null]], "How to contribute to Gammapy": [[386, null]], "How to get data values": [[490, "how-to-get-data-values"]], "How to handle API breaking changes?": [[383, "how-to-handle-api-breaking-changes"]], "How to make a Gammapy release": [[413, null]], "How to make a pull request": [[383, "how-to-make-a-pull-request"]], "How to set data values": [[490, "how-to-set-data-values"]], "How to use logging": [[383, "how-to-use-logging"]], "How to use random numbers": [[383, "how-to-use-random-numbers"]], "How to write code": [[383, "how-to-write-code"]], "How to write tests": [[383, "how-to-write-tests"]], "HpxGeom": [[194, null]], "HpxMap": [[195, null]], "HpxNDMap": [[196, null]], "IPython": [[420, "id3"]], "IRF": [[159, null], [410, "irf"]], "IRF axis naming": [[527, "irf-axis-naming"]], "IRFMap": [[160, null]], "IRF_REGISTRY": [[161, null]], "IRFs": [[392, "irfs"], [497, "irfs"]], "Image Plotting": [[490, "image-plotting"]], "ImageProfile": [[130, null]], "ImageProfileEstimator": [[131, null]], "Images and masks": [[397, "images-and-masks"]], "Implement default parameters": [[394, "implement-default-parameters"]], "Implement evaluation region specifications": [[394, "implement-evaluation-region-specifications"]], "Implement sky coordinate handling": [[394, "implement-sky-coordinate-handling"]], "Implementation": [[403, "implementation"], [411, "implementation"]], "Implementation Outline": [[411, "implementation-outline"]], "Implementation impact": [[412, "implementation-impact"]], "Implementation road map": [[393, "implementation-road-map"]], "Implementing a custom model": [[493, "implementing-a-custom-model"]], "Implementing a custom prior": [[495, "implementing-a-custom-prior"]], "Imports and versions": [[475, "imports-and-versions"]], "Improve SourceModels class": [[394, "improve-sourcemodels-class"]], "Improve and implement model serilization": [[394, "improve-and-implement-model-serilization"]], "Improve spatial models": [[394, "improve-spatial-models"]], "In the RST files": [[384, "in-the-rst-files"]], "Inbuilt Gammapy IRFs": [[488, "inbuilt-gammapy-irfs"]], "Include png files as images": [[384, "include-png-files-as-images"]], "Indexing and Slicing Sub-Maps": [[490, "indexing-and-slicing-sub-maps"]], "Infrastructure": [[451, "infrastructure"]], "Inspect the reduced dataset": [[507, "inspect-the-reduced-dataset"]], "Inspecting residuals": [[507, "inspecting-residuals"]], "Install issues": [[419, "install-issues"]], "Installation": [[403, "installation"], [416, "installation"], [417, null]], "Instrument Response Functions (DL3)": [[527, null]], "Interaction Between Models and Dataset Objects": [[405, "interaction-between-models-and-dataset-objects"]], "Interface with MapCoord and SkyCoord": [[534, "interface-with-mapcoord-and-skycoord"]], "Interpolating onto a different geometry": [[490, "interpolating-onto-a-different-geometry"]], "Interpolation and extrapolation": [[383, "interpolation-and-extrapolation"]], "Introduce Shorter YAML Alias Tags": [[406, "introduce-shorter-yaml-alias-tags"]], "Introduce a FluxEstimate base class": [[407, "introduce-a-fluxestimate-base-class"]], "Introduce a FluxMap API": [[407, "introduce-a-fluxmap-api"]], "Introduce a FluxPointsCollection API": [[407, "introduce-a-fluxpointscollection-api"]], "Introduce gammapy.datasets": [[404, "introduce-gammapy-datasets"]], "Introduce gammapy.estimators": [[404, "introduce-gammapy-estimators"]], "Introduce gammapy.makers": [[404, "introduce-gammapy-makers"]], "Introduce gammapy.modeling": [[402, "introduce-gammapy-modeling"]], "Introduce gammapy.visualization": [[404, "introduce-gammapy-visualization"]], "Introduce naming scheme for models": [[394, "introduce-naming-scheme-for-models"]], "Introduction": [[394, "introduction"], [397, "introduction"], [398, "introduction"], [400, "introduction"], [401, "introduction"], [403, "introduction"], [407, "introduction"], [409, "introduction"], [410, "introduction"], [454, "introduction"], [459, "introduction"], [461, "introduction"], [469, "introduction"], [479, "introduction"], [483, "introduction"], [484, "introduction"], [485, "introduction"], [489, "introduction"], [490, "introduction"], [497, "introduction"], [498, "introduction"], [499, "introduction"], [500, "introduction"], [502, "introduction"], [508, "introduction"], [510, "introduction"], [512, "introduction"], [513, "introduction"], [583, "introduction"]], "Introduction of background models": [[394, "introduction-of-background-models"]], "Introduction of model name attributes": [[394, "introduction-of-model-name-attributes"]], "Introduction of \u201cforward folded\u201d models": [[394, "introduction-of-forward-folded-models"]], "InverseCDFSampler": [[332, null]], "IsothermalProfile": [[22, null]], "Isotropic diffuse background": [[498, "isotropic-diffuse-background"]], "Iterating by image": [[490, "iterating-by-image"]], "J Factors": [[483, "j-factors"]], "JFactory": [[23, null]], "Joint Analysis": [[518, "joint-analysis"]], "Joint analysis": [[467, "joint-analysis"], [468, "joint-analysis"]], "Jupyter": [[416, "id2"], [418, "jupyter"]], "Jupyter notebooks": [[420, "jupyter-notebooks"]], "Key Features": [[486, "key-features"]], "Known issues": [[451, "known-issues"]], "LabelMapAxis": [[197, null], [490, "labelmapaxis"]], "Latest CTAO performance files": [[497, "latest-ctao-performance-files"]], "Lazy loading of Datasets": [[395, "lazy-loading-of-datasets"]], "LazyFitsData": [[319, null]], "Let\u2019s simulate the model": [[472, "let-s-simulate-the-model"]], "Light Curve Fitting": [[398, "light-curve-fitting"]], "Light Curve estimation by observation": [[476, "light-curve-estimation-by-observation"]], "Light curve temporal model": [[577, null]], "Light curves": [[476, null]], "Light curves for flares": [[477, null]], "LightCurveEstimator": [[132, null]], "LightCurveTemplateTemporalModel": [[241, null]], "Lightcurve": [[398, "lightcurve"]], "Lightcurves": [[484, "lightcurves"]], "Lightcurves in gamma-ray astronomy": [[398, "lightcurves-in-gamma-ray-astronomy"]], "Limitations": [[393, "limitations"]], "Linear temporal model": [[573, null]], "LinearTemporalModel": [[242, null]], "Links to documentation": [[384, "links-to-documentation"]], "Links to other tutorials": [[384, "links-to-other-tutorials"]], "List available catalogs": [[484, "list-available-catalogs"]], "Load Data": [[459, "load-data"]], "Load IRFs and prepare dataset": [[454, "load-irfs-and-prepare-dataset"]], "Load catalogs": [[484, "load-catalogs"]], "Load data": [[461, "load-data"]], "Load spectral points": [[457, "load-spectral-points"]], "Load the data": [[455, "load-the-data"]], "Load the light curve for the PKS 2155-304 as a FluxPoints object.": [[486, "load-the-light-curve-for-the-pks-2155-304-as-a-fluxpoints-object"]], "Load the tables": [[499, "load-the-tables"]], "Loading models from a catalog": [[492, "loading-models-from-a-catalog"]], "Locate origin of warnings": [[383, "locate-origin-of-warnings"]], "Log parabola spectral model": [[556, null]], "Log parabola spectral norm model": [[557, null]], "Log-Parabola Fit": [[457, "log-parabola-fit"]], "LogParabolaNormSpectralModel": [[243, null]], "LogParabolaSpectralModel": [[244, null]], "LogSpiral": [[34, null]], "LogUniformPrior": [[245, null]], "Long Term Support releases": [[409, "long-term-support-releases"]], "Lorimer2006": [[35, null]], "Low level API": [[507, null]], "Low level map and cube analysis": [[389, "low-level-map-and-cube-analysis"]], "MAKER_REGISTRY": [[173, null]], "METHOD_DEFAULT": [[326, null]], "METHOD_KWARGS_DEFAULT": [[327, null]], "MODEL_REGISTRY": [[246, null]], "Maintainer and developer perspective": [[390, "maintainer-and-developer-perspective"]], "Maintenance and Code Quality": [[392, "maintenance-and-code-quality"]], "Make a Bugfix release": [[413, "make-a-bugfix-release"]], "Make a Li&Ma test over the events": [[479, "make-a-li-ma-test-over-the-events"]], "Make sky images": [[469, "make-sky-images"]], "Make small pull requests": [[386, "make-small-pull-requests"]], "Maker": [[174, null]], "Makers": [[410, "makers"]], "Makers - Data reduction": [[489, null]], "Making a butterfly plot": [[507, "making-a-butterfly-plot"]], "Making a pull request that requires backport": [[383, "making-a-pull-request-that-requires-backport"]], "Making a pull request which skips GitHub Actions": [[383, "making-a-pull-request-which-skips-github-actions"]], "Making a pull request with new or modified datasets": [[383, "making-a-pull-request-with-new-or-modified-datasets"]], "Manual grouping of observations": [[494, "manual-grouping-of-observations"]], "Map": [[198, null]], "Map Analysis / Data Reduction": [[392, "map-analysis-data-reduction"]], "MapAxes": [[199, null]], "MapAxis": [[200, null]], "MapCoord": [[201, null], [534, "mapcoord"]], "MapDataset": [[103, null], [395, "mapdataset"], [485, "mapdataset"]], "MapDatasetEventSampler": [[104, null], [396, "mapdataseteventsampler"]], "MapDatasetMaker": [[175, null]], "MapDatasetMetaData": [[105, null]], "MapDatasetOnOff": [[106, null], [395, "mapdatasetonoff"]], "MapPanelPlotter": [[370, null]], "Maps": [[202, null], [392, "maps"], [490, null], [508, "maps"]], "Maps operations": [[490, "maps-operations"]], "Mask dilation and erosion": [[491, "mask-dilation-and-erosion"]], "Mask maps": [[491, null]], "Mask modifications": [[491, "mask-modifications"]], "Mask some sky regions": [[491, "mask-some-sky-regions"]], "Masks for fitting": [[491, "masks-for-fitting"]], "Masks operations": [[491, "masks-operations"]], "Meetings": [[392, "meetings"]], "Metadata API": [[410, "metadata-api"]], "Metadata files": [[409, "metadata-files"]], "Metadata generation and propagation along the dataflow": [[410, "metadata-generation-and-propagation-along-the-dataflow"]], "Methods to characterize variability": [[482, "methods-to-characterize-variability"]], "MeyerCrabSpectralModel": [[247, null]], "Minor changes": [[404, "minor-changes"]], "Mission elapsed times (MET)": [[586, "mission-elapsed-times-met"]], "Model": [[248, null]], "Model and dataset": [[487, "model-and-dataset"], [495, "model-and-dataset"]], "Model fit": [[469, "model-fit"]], "Model fitting": [[460, "model-fitting"], [506, "model-fitting"]], "Model gallery": [[536, null]], "Model lists and serialisation": [[493, "model-lists-and-serialisation"]], "Model the observed spectrum": [[455, "model-the-observed-spectrum"]], "ModelBase": [[249, null]], "Modeling": [[392, "modeling"], [410, "modeling"], [481, "modeling"]], "Modeling and Fitting (DL4 to DL5)": [[579, null]], "Modeling and fitting": [[467, "modeling-and-fitting"]], "Modelling": [[464, "modelling"], [492, null]], "Models": [[250, null], [493, null]], "Models with energy dependent morphology": [[493, "models-with-energy-dependent-morphology"]], "Models with shared parameter": [[493, "models-with-shared-parameter"]], "Modifying Data": [[490, "modifying-data"]], "Modifying model parameters": [[493, "modifying-model-parameters"]], "MooreProfile": [[24, null]], "Morphological energy dependence estimation": [[470, null]], "Motivation": [[411, "motivation"], [412, "motivation"]], "Multi instrument joint 3D and 1D analysis": [[468, null]], "NFWProfile": [[25, null]], "N_JOBS_DEFAULT": [[328, null]], "Naima spectral model": [[558, null]], "NaimaSpectralModel": [[251, null]], "New features": [[446, "new-features"], [449, "new-features"], [450, "new-features"], [451, "new-features"]], "Next steps": [[497, "next-steps"], [499, "next-steps"], [500, "next-steps"]], "Night-wise LC estimation": [[476, "night-wise-lc-estimation"]], "Norm Spectral Models": [[493, "norm-spectral-models"]], "Notations": [[584, "notations"]], "Notes": [[583, "notes"]], "OGIPDatasetReader": [[107, null]], "OGIPDatasetWriter": [[108, null]], "Object text repr, str and info": [[383, "object-text-repr-str-and-info"]], "Objective": [[464, "objective"], [465, "objective"], [471, "objective"], [472, "objective"], [494, "objective"]], "Objectives": [[393, "objectives"]], "Observation": [[88, null]], "Observation duration and effective livetime": [[489, "observation-duration-and-effective-livetime"]], "Observation selection": [[460, "observation-selection"], [506, "observation-selection"]], "ObservationEventSampler": [[109, null]], "ObservationFilter": [[89, null]], "ObservationMetaData": [[90, null]], "ObservationTable": [[91, null]], "Observational clustering": [[494, null]], "Observations": [[92, null]], "ObservationsEventsSampler": [[93, null]], "Obtain the data to use": [[470, "obtain-the-data-to-use"]], "Obtain the observations": [[494, "obtain-the-observations"]], "Obtaining an integral flux sensitivity": [[454, "obtaining-an-integral-flux-sensitivity"]], "Old example data": [[414, "old-example-data"]], "On-Off analysis": [[462, "on-off-analysis"]], "Opening the data": [[479, "opening-the-data"]], "OptimizeResult": [[215, null]], "Optional dependencies": [[382, "optional-dependencies"], [400, "optional-dependencies"]], "Other folders": [[414, "other-folders"]], "Other packages": [[510, "other-packages"]], "Other repositories": [[414, "other-repositories"]], "Others": [[383, "others"], [414, "others"]], "Outlook": [[395, "outlook"], [397, "outlook"], [399, "outlook"], [400, "outlook"], [402, "outlook"], [403, "outlook"], [404, "outlook"], [407, "outlook"]], "Output in Jupyter notebook cells": [[383, "output-in-jupyter-notebook-cells"]], "Outputs from the Nested Sampling": [[412, "outputs-from-the-nested-sampling"]], "Overview": [[529, "overview"], [531, "overview"], [532, "overview"]], "PIG 1 - PIG purpose and guidelines": [[388, null]], "PIG 10 - Regions": [[397, null]], "PIG 11 - Light curves": [[398, null]], "PIG 12 - High level interface": [[399, null]], "PIG 13 - Gammapy dependencies and distribution": [[400, null]], "PIG 14 - Uncertainty estimation": [[401, null]], "PIG 16 - Gammapy package structure": [[402, null]], "PIG 18 - Documentation": [[403, null]], "PIG 19 - Gammapy package structure follow up": [[404, null]], "PIG 2 - Organization of low level analysis code": [[389, null]], "PIG 20 - Global Model API": [[405, null]], "PIG 21 - Models improvements": [[406, null]], "PIG 22 - Unified flux estimators API": [[407, null]], "PIG 23 - Gammapy release cycle and version numbering": [[408, null]], "PIG 24 - Authorship policy": [[409, null]], "PIG 25 - Metadata container for Gammapy": [[410, null]], "PIG 26 - Model Priors API": [[411, null]], "PIG 27 - Bayesian Inference using Nested Sampling": [[412, null]], "PIG 3 - Plan for dropping Python 2.7 support": [[390, null]], "PIG 4 - Setup for tutorial notebooks and data": [[391, null]], "PIG 5 - Gammapy 1.0 roadmap": [[392, null]], "PIG 6 - CTA observation handling": [[393, null]], "PIG 7 - Models": [[394, null]], "PIG 8 - Datasets": [[395, null]], "PIG 9 - Event sampling": [[396, null]], "PIG review": [[388, "pig-review"]], "PIG status": [[388, "pig-status"]], "PIGs": [[387, null]], "POOL_KWARGS_DEFAULT": [[329, null]], "PSF": [[488, "psf"], [498, "psf"]], "PSF3D": [[162, null]], "PSFKernel": [[163, null]], "PSFKing": [[164, null]], "PSFMap": [[165, null]], "PWN": [[50, null]], "Package / API": [[502, "package-api"]], "Package and docs": [[414, "package-and-docs"]], "Package structure and dependencies": [[437, "package-structure-and-dependencies"]], "Paczynski1990": [[36, null]], "Paczynski1990Velocity": [[37, null]], "Papers": [[392, "papers"]], "Parallel evaluation of datasets": [[395, "parallel-evaluation-of-datasets"]], "Parameter": [[216, null]], "ParameterEstimator": [[133, null]], "Parameters": [[217, null]], "ParametricPSF": [[166, null]], "Perform spectral model fitting": [[456, "perform-spectral-model-fitting"]], "Perform the data reduction loop": [[507, "perform-the-data-reduction-loop"]], "Perform the data reduction loop.": [[456, "perform-the-data-reduction-loop"]], "Performance and precision evaluation": [[396, "performance-and-precision-evaluation"]], "Phase curve temporal model": [[576, null]], "Phase-resolved map": [[479, "phase-resolved-map"]], "Phase-resolved spectrum": [[479, "phase-resolved-spectrum"]], "PhaseBackgroundMaker": [[176, null]], "Phasogram": [[479, "phasogram"]], "Piecewise  norm spectral model": [[559, null]], "Piecewise norm spatial model": [[542, null]], "PiecewiseNormSpatialModel": [[252, null]], "PiecewiseNormSpectralModel": [[253, null]], "Pixel coordinate convention": [[383, "pixel-coordinate-convention"]], "Plot": [[469, "plot"]], "Plot off regions": [[459, "plot-off-regions"]], "Plot the fitted spectrum": [[507, "plot-the-fitted-spectrum"]], "Plot the observed and intrinsic fluxes": [[455, "plot-the-observed-and-intrinsic-fluxes"]], "Plotting Results": [[473, "plotting-results"]], "Plotting a RegionGeom": [[535, "plotting-a-regiongeom"]], "Plotting models on a (counts) map": [[492, "plotting-models-on-a-counts-map"]], "Plotting the final results of the 1D Analysis": [[460, "plotting-the-final-results-of-the-1d-analysis"]], "Plotting the map content": [[535, "plotting-the-map-content"]], "Plotting the results": [[470, "plotting-the-results"]], "Plotting the underlying region": [[535, "plotting-the-underlying-region"]], "Point Spread Function": [[528, null]], "Point source sensitivity": [[454, null]], "Point spatial model": [[543, null]], "Point spread function": [[497, "point-spread-function"]], "PointSpatialModel": [[254, null]], "PointingInfo": [[94, null]], "PointingMode": [[95, null]], "Possible implementations": [[409, "possible-implementations"]], "Post release": [[413, "post-release"]], "Power Law Fit": [[457, "power-law-fit"]], "Power law 2 spectral model": [[561, null]], "Power law norm spectral model": [[562, null]], "Power law spectral model": [[560, null]], "PowerLaw temporal model": [[574, null]], "PowerLaw2SpectralModel": [[255, null]], "PowerLawNormSpectralModel": [[256, null]], "PowerLawSpectralModel": [[257, null]], "PowerLawTemporalModel": [[258, null]], "Predicted counts": [[518, "predicted-counts"]], "Prepare and run the event sampler": [[472, "prepare-and-run-the-event-sampler"]], "Prepare the datasets creation": [[456, "prepare-the-datasets-creation"]], "Preparing reduced datasets geometry": [[507, "preparing-reduced-datasets-geometry"]], "Prerequisites": [[456, "prerequisites"], [457, "prerequisites"], [459, "prerequisites"], [460, "prerequisites"], [461, "prerequisites"], [462, "prerequisites"], [464, "prerequisites"], [468, "prerequisites"], [470, "prerequisites"], [471, "prerequisites"], [472, "prerequisites"], [473, "prerequisites"], [475, "prerequisites"], [476, "prerequisites"], [477, "prerequisites"], [478, "prerequisites"], [482, "prerequisites"], [487, "prerequisites"], [491, "prerequisites"], [492, "prerequisites"], [495, "prerequisites"], [506, "prerequisites"], [507, "prerequisites"]], "Pretty-print source information": [[484, "pretty-print-source-information"]], "PrimaryFlux": [[26, null]], "Prior": [[259, null]], "PriorParameter": [[218, null]], "PriorParameters": [[219, null]], "Priors": [[495, null]], "Profile Estimation": [[473, "profile-estimation"]], "Profile Likelihood": [[585, "profile-likelihood"]], "Profiles": [[483, "profiles"]], "Project Management": [[392, "project-management"]], "Project setup": [[414, null]], "Projects": [[392, "projects"]], "Proposal": [[391, "proposal"], [393, "proposal"], [394, "proposal"], [395, "proposal"], [396, "proposal"], [397, "proposal"], [398, "proposal"], [399, "proposal"], [401, "proposal"], [402, "proposal"], [403, "proposal"], [404, "proposal"], [405, "proposal"], [406, "proposal"], [412, "proposal"]], "Proposal of API for flux estimate results": [[407, "proposal-of-api-for-flux-estimate-results"]], "Proposed Approach": [[473, "proposed-approach"]], "Proposed approach": [[456, "proposed-approach"], [457, "proposed-approach"], [460, "proposed-approach"], [462, "proposed-approach"], [463, "proposed-approach"], [464, "proposed-approach"], [465, "proposed-approach"], [468, "proposed-approach"], [471, "proposed-approach"], [472, "proposed-approach"], [475, "proposed-approach"], [476, "proposed-approach"], [477, "proposed-approach"], [478, "proposed-approach"], [481, "proposed-approach"], [482, "proposed-approach"], [487, "proposed-approach"], [491, "proposed-approach"], [492, "proposed-approach"], [494, "proposed-approach"], [506, "proposed-approach"], [507, "proposed-approach"]], "Proposed class diagram": [[393, "proposed-class-diagram"]], "Proposed metadata classes": [[410, "proposed-metadata-classes"]], "Proposed solution": [[410, "proposed-solution"]], "Pull Requests": [[437, "pull-requests"], [438, "pull-requests"], [446, "pull-requests"], [447, "pull-requests"], [448, "pull-requests"], [449, "pull-requests"], [450, "pull-requests"], [451, "pull-requests"]], "Pull requests": [[423, "pull-requests"], [424, "pull-requests"], [425, "pull-requests"], [426, "pull-requests"], [427, "pull-requests"], [428, "pull-requests"], [429, "pull-requests"], [430, "pull-requests"], [431, "pull-requests"], [432, "pull-requests"], [433, "pull-requests"], [434, "pull-requests"], [435, "pull-requests"], [436, "pull-requests"], [439, "pull-requests"], [440, "pull-requests"], [441, "pull-requests"], [442, "pull-requests"], [443, "pull-requests"], [444, "pull-requests"], [445, "pull-requests"]], "Pulsar": [[51, null]], "Pulsar Source Models": [[514, null]], "Pulsar Wind Nebula Source Models": [[515, null]], "Pulsar analysis": [[479, null]], "Python": [[420, "id2"]], "Python scripts": [[420, "python-scripts"]], "Python version support": [[383, "python-version-support"]], "RadMax2D": [[167, null]], "Read and Introduce Data": [[473, "read-and-introduce-data"]], "Read in input images": [[463, "read-in-input-images"]], "Read the datasets": [[492, "read-the-datasets"]], "Read the energy-dependent model": [[472, "read-the-energy-dependent-model"]], "Reading Maps": [[490, "reading-maps"]], "Reading and Writing": [[490, "reading-and-writing"]], "Reading and writing masks": [[491, "reading-and-writing-masks"]], "Reading different datasets": [[468, "reading-different-datasets"]], "RecoPSFMap": [[168, null]], "Recommended Setup": [[416, "recommended-setup"], [418, null]], "Reference": [[403, "reference"], [582, "reference"]], "References": [[581, "publications"]], "Reflected regions background": [[489, "reflected-regions-background"], [531, null]], "ReflectedRegionsBackgroundMaker": [[177, null]], "ReflectedRegionsFinder": [[178, null]], "Region arguments": [[397, "region-arguments"]], "RegionGeom": [[203, null], [535, "regiongeom"]], "RegionGeom and RegionNDMap": [[535, null]], "RegionGeom and coordinates": [[535, "regiongeom-and-coordinates"]], "RegionNDMap": [[204, null], [535, "regionndmap"]], "RegionsFinder": [[179, null]], "Relation to WCS geometries": [[535, "relation-to-wcs-geometries"]], "Release notes": [[383, "release-notes"], [422, null]], "Release preparation, feature freeze": [[408, "release-preparation-feature-freeze"]], "Release scheduling and LTS": [[408, "release-scheduling-and-lts"]], "Releases": [[392, "releases"], [409, "releases"], [414, "releases"]], "Releasing the final version of the major release": [[413, "releasing-the-final-version-of-the-major-release"]], "Releasing the first major release candidate": [[413, "releasing-the-first-major-release-candidate"]], "Removing a model from a dataset": [[492, "removing-a-model-from-a-dataset"]], "Removing an attribute": [[383, "removing-an-attribute"]], "Renaming an argument": [[383, "renaming-an-argument"]], "Required dependencies": [[382, "required-dependencies"], [400, "required-dependencies"]], "Requirements": [[410, "requirements"]], "Resampling datasets": [[485, "resampling-datasets"]], "Resolve gammapy.detect": [[404, "resolve-gammapy-detect"]], "Results": [[454, "results"]], "Results exploration": [[460, "results-exploration"]], "Ring background": [[489, "ring-background"], [532, null]], "Ring background map": [[465, null]], "RingBackgroundMaker": [[180, null]], "Rotated regions": [[397, "rotated-regions"]], "Run Estimation": [[473, "run-estimation"]], "Run Estimator": [[470, "run-estimator"]], "Run data reduction chain": [[459, "run-data-reduction-chain"], [461, "run-data-reduction-chain"]], "Run the 1D data reduction": [[476, "run-the-1d-data-reduction"]], "Run the 3D data reduction": [[476, "run-the-3d-data-reduction"]], "Running config driven data reduction": [[582, "running-config-driven-data-reduction"]], "Running tests & building Documentation": [[386, "running-tests-building-documentation"]], "Running the Data Reduction": [[460, "running-the-data-reduction"]], "Running the analysis": [[506, "running-the-analysis"]], "Running the estimation": [[460, "running-the-estimation"]], "Running the first step of the analysis: the Data Reduction": [[460, "running-the-first-step-of-the-analysis-the-data-reduction"]], "Running the fit": [[460, "running-the-fit"]], "Running the light curve extraction in 1D": [[476, "running-the-light-curve-extraction-in-1d"]], "SED types": [[520, "sed-types"]], "SNR": [[52, null]], "SNRTrueloveMcKee": [[53, null]], "SPATIAL_MODEL_REGISTRY": [[260, null]], "SPECTRAL_MODEL_REGISTRY": [[261, null]], "Safe data range definition": [[530, "safe-data-range-definition"]], "Safe data range handling": [[489, "safe-data-range-handling"]], "SafeMaskMaker": [[181, null]], "Sample a source with energy-dependent temporal evolution": [[472, null]], "Sampling methods": [[396, "sampling-methods"]], "Sampling the source and background events": [[471, "sampling-the-source-and-background-events"]], "Save dataset to disk": [[460, "save-dataset-to-disk"], [506, "save-dataset-to-disk"], [507, "save-dataset-to-disk"]], "ScaleSpectralModel": [[262, null]], "ScaledRegularGridInterpolator": [[322, null]], "Scripts": [[502, "scripts"]], "Select a catalog subset": [[484, "select-a-catalog-subset"]], "Select a source": [[484, "select-a-source"]], "Select observations": [[469, "select-observations"]], "Select the ON region": [[456, "select-the-on-region"]], "Select the data": [[456, "select-the-data"], [477, "select-the-data"]], "Selecting models contributing to a given region": [[492, "selecting-models-contributing-to-a-given-region"]], "Selecting models from a list": [[492, "selecting-models-from-a-list"]], "SensitivityEstimator": [[134, null]], "Serialisation": [[411, "serialisation"], [488, "serialisation"], [488, "id1"], [488, "id2"], [498, "serialisation"]], "Serialisation and I/O": [[473, "serialisation-and-i-o"]], "Serialisation of datasets": [[518, "serialisation-of-datasets"]], "Serialisation of the fit result": [[460, "serialisation-of-the-fit-result"]], "Serialisation of the results": [[460, "serialisation-of-the-results"]], "Serialisation of the samples": [[412, "serialisation-of-the-samples"]], "Serialising models": [[492, "serialising-models"]], "Serialization": [[410, "serialization"]], "Setting fitting parameters": [[460, "setting-fitting-parameters"]], "Setting modeling and fitting parameters": [[506, "setting-modeling-and-fitting-parameters"]], "Setting the background normalization maker": [[506, "setting-the-background-normalization-maker"]], "Setting the data to use": [[506, "setting-the-data-to-use"]], "Setting the exclusion mask": [[460, "setting-the-exclusion-mask"], [506, "setting-the-exclusion-mask"]], "Setting the reduced datasets geometry": [[506, "setting-the-reduced-datasets-geometry"]], "Setup": [[454, "setup"], [455, "setup"], [456, "setup"], [457, "setup"], [459, "setup"], [460, "setup"], [461, "setup"], [462, "setup"], [463, "setup"], [464, "setup"], [465, "setup"], [469, "setup"], [470, "setup"], [471, "setup"], [472, "setup"], [473, "setup"], [476, "setup"], [477, "setup"], [478, "setup"], [481, "setup"], [482, "setup"], [483, "setup"], [485, "setup"], [489, "setup"], [490, "setup"], [491, "setup"], [492, "setup"], [493, "setup"], [497, "setup"], [498, "setup"], [506, "setup"], [507, "setup"], [508, "setup"]], "Shell spatial model": [[544, null]], "Shell2 spatial model": [[545, null]], "Shell2SpatialModel": [[263, null]], "ShellSpatialModel": [[264, null]], "Show images": [[469, "show-images"]], "Show the results tables": [[470, "show-the-results-tables"]], "Show various observation quantities": [[494, "show-various-observation-quantities"]], "SimplePulsar": [[54, null]], "Simplify YAML Parameter Representation": [[406, "simplify-yaml-parameter-representation"]], "Simplify YAML Representation": [[406, "simplify-yaml-representation"]], "Simulate multiple event lists": [[471, "simulate-multiple-event-lists"]], "Simulating a light curve": [[478, "simulating-a-light-curve"]], "Simulating and fitting a time varying source": [[478, null]], "Simulation": [[475, "simulation"]], "Simulation of MapDataset and SpectrumDataset": [[395, "simulation-of-mapdataset-and-spectrumdataset"]], "Simulation of a single spectrum": [[462, "simulation-of-a-single-spectrum"]], "Sine temporal model": [[575, null]], "SineTemporalModel": [[265, null]], "Skip unit tests for some Astropy versions": [[383, "skip-unit-tests-for-some-astropy-versions"]], "Sky and pixel regions": [[397, "sky-and-pixel-regions"]], "Sky maps (DL4)": [[534, null]], "SkyModel": [[266, null], [493, "skymodel"]], "Smooth broken power law spectral model": [[563, null]], "SmoothBrokenPowerLawSpectralModel": [[267, null]], "Some terminology": [[393, "some-terminology"]], "Source Detection": [[469, "source-detection"]], "Source candidates": [[463, "source-candidates"]], "Source catalogs": [[484, null], [508, "source-catalogs"], [517, null]], "Source detection and significance maps": [[463, null]], "Source information": [[484, "source-information"]], "Source models": [[484, "source-models"], [497, "source-models"]], "Source object": [[484, "source-object"]], "Source statistic": [[459, "source-statistic"]], "SourceCatalog": [[56, null]], "SourceCatalog1LHAASO": [[57, null]], "SourceCatalog2FHL": [[58, null]], "SourceCatalog2HWC": [[59, null]], "SourceCatalog2PC": [[60, null]], "SourceCatalog3FGL": [[61, null]], "SourceCatalog3FHL": [[62, null]], "SourceCatalog3HWC": [[63, null]], "SourceCatalog3PC": [[64, null]], "SourceCatalog4FGL": [[65, null]], "SourceCatalogGammaCat": [[66, null]], "SourceCatalogHGPS": [[67, null]], "SourceCatalogLargeScaleHGPS": [[68, null]], "SourceCatalogObject": [[69, null]], "SourceCatalogObject1LHAASO": [[70, null]], "SourceCatalogObject2FHL": [[71, null]], "SourceCatalogObject2HWC": [[72, null]], "SourceCatalogObject2PC": [[73, null]], "SourceCatalogObject3FGL": [[74, null]], "SourceCatalogObject3FHL": [[75, null]], "SourceCatalogObject3HWC": [[76, null]], "SourceCatalogObject3PC": [[77, null]], "SourceCatalogObject4FGL": [[78, null]], "SourceCatalogObjectGammaCat": [[79, null]], "SourceCatalogObjectHGPS": [[80, null]], "SourceCatalogObjectHGPSComponent": [[81, null]], "SourceIRFModel": [[394, "sourceirfmodel"]], "Spatial analysis": [[469, "spatial-analysis"]], "Spatial models": [[493, "spatial-models"], [536, "spatial-models"]], "SpatialIRFModel": [[394, "spatialirfmodel"]], "SpatialModel": [[268, null]], "Special cases": [[585, "special-cases"]], "Specificities of the HGPS catalog": [[484, "specificities-of-the-hgps-catalog"]], "Spectral Absorption Model": [[406, "spectral-absorption-model"]], "Spectral Norm Models": [[406, "spectral-norm-models"]], "Spectral analysis": [[459, null]], "Spectral analysis of extended sources": [[456, null]], "Spectral analysis with energy-dependent directional cuts": [[461, null]], "Spectral analysis with the HLI": [[460, null]], "Spectral models": [[493, "spectral-models"], [536, "spectral-models"]], "Spectral models and flux points": [[508, "spectral-models-and-flux-points"]], "Spectral points": [[469, "spectral-points"]], "SpectralIRFModel": [[394, "spectralirfmodel"]], "SpectralModel": [[269, null]], "Spectrum": [[469, "spectrum"]], "Spectrum dataset": [[489, "spectrum-dataset"]], "SpectrumDataset": [[110, null], [395, "spectrumdataset"], [485, "spectrumdataset"]], "SpectrumDatasetMaker": [[182, null]], "SpectrumDatasetOnOff": [[111, null], [395, "spectrumdatasetonoff"]], "Sphinx gallery extension": [[384, "sphinx-gallery-extension"]], "Spiral arm models": [[512, "spiral-arm-models"]], "Stack observations": [[459, "stack-observations"]], "Stacked analysis": [[467, "stacked-analysis"]], "Stacking Multiple Datasets": [[518, "stacking-multiple-datasets"]], "Statistical utility functions": [[584, null]], "Status": [[393, "status"], [402, "status"]], "Storing the energy dispersion information as a function of sky position": [[526, "storing-the-energy-dispersion-information-as-a-function-of-sky-position"]], "Storing the results and further studies": [[398, "storing-the-results-and-further-studies"]], "Sub-packages": [[511, "sub-packages"]], "Suggestions": [[409, "suggestions"]], "Summary": [[423, "summary"], [424, "summary"], [425, "summary"], [426, "summary"], [427, "summary"], [428, "summary"], [429, "summary"], [430, "summary"], [431, "summary"], [432, "summary"], [433, "summary"], [434, "summary"], [435, "summary"], [436, "summary"], [437, "summary"], [438, "summary"], [439, "summary"], [440, "summary"], [441, "summary"], [442, "summary"], [443, "summary"], [444, "summary"], [445, "summary"], [446, "summary"], [447, "summary"], [448, "summary"], [449, "summary"], [450, "summary"], [451, "summary"], [467, "summary"], [498, "summary"]], "Super Exponential Cutoff Power Law Model used for 4FGL-DR1 (and DR2)": [[566, null]], "Super Exponential Cutoff Power Law Model used for 4FGL-DR3": [[565, null]], "Super exponential cutoff power law model used for 3FGL": [[564, null]], "SuperExpCutoffPowerLaw3FGLSpectralModel": [[270, null]], "SuperExpCutoffPowerLaw4FGLDR3SpectralModel": [[271, null]], "SuperExpCutoffPowerLaw4FGLSpectralModel": [[272, null]], "Supernova Remnant Models": [[516, null]], "Support for Asymmetric IRFs": [[488, "support-for-asymmetric-irfs"]], "Support of python Cython, numpy and astropy versions": [[408, "support-of-python-cython-numpy-and-astropy-versions"]], "Survey Map Script": [[504, null]], "Survey panel plots": [[587, "survey-panel-plots"]], "TEMPORAL_MODEL_REGISTRY": [[273, null]], "TS map estimation": [[463, "ts-map-estimation"]], "TSMapEstimator": [[135, null]], "Table conversion": [[486, "table-conversion"]], "Task List": [[395, "task-list"]], "Task list": [[394, "task-list"], [396, "task-list"], [397, "task-list"], [398, "task-list"], [399, "task-list"], [400, "task-list"], [412, "task-list"]], "Template spatial model": [[546, null]], "Template spectral model": [[567, null]], "TemplateNDSpatialModel": [[274, null]], "TemplateNDSpectralModel": [[275, null]], "TemplateNPredModel": [[276, null]], "TemplatePhaseCurveTemporalModel": [[277, null]], "TemplateSpatialModel": [[278, null]], "TemplateSpectralModel": [[279, null]], "Temporal models": [[493, "temporal-models"], [536, "temporal-models"]], "TemporalModel": [[280, null]], "Testing of plotting functions": [[383, "testing-of-plotting-functions"]], "The case of image and cube analysis": [[389, "the-case-of-image-and-cube-analysis"]], "The chi-squared value for each parameter of interest": [[470, "the-chi-squared-value-for-each-parameter-of-interest"]], "The gammapy-data repository": [[414, "the-gammapy-data-repository"]], "The gammapy-extra repository": [[414, "the-gammapy-extra-repository"]], "The index tables": [[519, "the-index-tables"]], "The reflected region finder": [[531, "the-reflected-region-finder"]], "The results for testing energy dependence": [[470, "the-results-for-testing-energy-dependence"]], "The results of the source signal above the background in each energy bin": [[470, "the-results-of-the-source-signal-above-the-background-in-each-energy-bin"]], "The setup": [[468, "the-setup"], [486, "the-setup"], [487, "the-setup"], [495, "the-setup"]], "Theta squared event distribution": [[500, "theta-squared-event-distribution"]], "Time": [[502, "time"]], "Time bin preparation": [[398, "time-bin-preparation"]], "Time bins": [[398, "time-bins"]], "Time differences": [[586, "time-differences"]], "Time format and scale": [[586, "time-format-and-scale"]], "Time handling in Gammapy": [[586, "time-handling-in-gammapy"]], "Time resolved spectroscopy algorithm": [[481, "time-resolved-spectroscopy-algorithm"]], "Time resolved spectroscopy estimator": [[481, null]], "Time variable source using a lightcurve": [[471, "time-variable-source-using-a-lightcurve"]], "TimeMapAxis": [[205, null], [490, "timemapaxis"]], "Timing Analysis": [[392, "timing-analysis"]], "TimmerKonig_lightcurve_simulator": [[292, null]], "Troubleshooting": [[419, null], [582, "troubleshooting"]], "Tutorial overview": [[470, "tutorial-overview"], [497, "tutorial-overview"], [499, "tutorial-overview"]], "Tutorials": [[403, "tutorials"], [502, null]], "Tutorials Overview": [[416, "tutorials-overview"]], "Type validation": [[410, "type-validation"]], "Types of supported datasets": [[518, "types-of-supported-datasets"]], "Unification of flux estimators?": [[407, "unification-of-flux-estimators"]], "UniformPrior": [[281, null]], "Unify calling interface for models": [[394, "unify-calling-interface-for-models"]], "Upsampling and downsampling non-spatial axes": [[535, "upsampling-and-downsampling-non-spatial-axes"]], "Use cases": [[411, "use-cases"], [412, "use-cases"]], "Use cases / scenarios": [[393, "use-cases-scenarios"]], "User guide": [[523, null]], "User perspective": [[390, "user-perspective"]], "User testing of the API": [[412, "user-testing-of-the-api"]], "Using Anaconda / Miniconda": [[417, "using-anaconda-miniconda"]], "Using Factory Methods": [[490, "using-factory-methods"]], "Using Gammapy": [[420, null]], "Using Gammapy IRFs": [[488, null]], "Using Mamba": [[417, "using-mamba"]], "Using YAML configuration files": [[506, "using-yaml-configuration-files"]], "Using YAML configuration files for setting/writing the Data Reduction parameters": [[460, "using-yaml-configuration-files-for-setting-writing-the-data-reduction-parameters"]], "Using data stored into your computer": [[460, "using-data-stored-into-your-computer"]], "Using gammapy.analysis": [[521, "using-gammapy-analysis"]], "Using gammapy.astro.darkmatter": [[510, "using-gammapy-astro-darkmatter"]], "Using gammapy.astro.source": [[513, "using-gammapy-astro-source"]], "Using gammapy.catalog": [[517, "using-gammapy-catalog"]], "Using gammapy.data": [[519, "using-gammapy-data"]], "Using gammapy.datasets": [[518, "using-gammapy-datasets"]], "Using gammapy.estimators": [[520, "using-gammapy-estimators"]], "Using gammapy.irf": [[527, "using-gammapy-irf"]], "Using gammapy.makers": [[530, "using-gammapy-makers"]], "Using gammapy.maps": [[534, "using-gammapy-maps"]], "Using gammapy.modeling": [[579, "using-gammapy-modeling"]], "Using masks": [[485, "using-masks"]], "Using other package managers": [[417, "using-other-package-managers"]], "Using pip": [[417, "using-pip"]], "Using regions": [[531, "using-regions"]], "Using the reflected background estimator": [[531, "using-the-reflected-background-estimator"]], "Utility functions": [[586, null]], "ValleeSpiral": [[38, null]], "Variables": [[1, "variables"], [2, "variables"], [3, "variables"], [4, "variables"], [5, "variables"], [7, "variables"], [8, "variables"], [10, "variables"], [13, "variables"], [13, "id11"]], "Velocity distributions": [[512, "velocity-distributions"]], "Venv Environments": [[415, "venv-environments"]], "Version 0.1": [[422, "version-0-1"]], "Version 0.10": [[422, "version-0-10"]], "Version 0.11": [[422, "version-0-11"]], "Version 0.12": [[422, "version-0-12"]], "Version 0.13": [[422, "version-0-13"]], "Version 0.14": [[422, "version-0-14"]], "Version 0.15": [[422, "version-0-15"]], "Version 0.16": [[422, "version-0-16"]], "Version 0.17": [[422, "version-0-17"]], "Version 0.18": [[422, "version-0-18"]], "Version 0.19": [[422, "version-0-19"]], "Version 0.2": [[422, "version-0-2"]], "Version 0.20": [[422, "version-0-20"]], "Version 0.20.1": [[422, "version-0-20-1"]], "Version 0.3": [[422, "version-0-3"]], "Version 0.4": [[422, "version-0-4"]], "Version 0.5": [[422, "version-0-5"]], "Version 0.6": [[422, "version-0-6"]], "Version 0.7": [[422, "version-0-7"]], "Version 0.8": [[422, "version-0-8"]], "Version 0.9": [[422, "version-0-9"]], "Version 1.0": [[422, "version-1-0"]], "Version 1.0.1": [[422, "version-1-0-1"]], "Version 1.0.2": [[422, "version-1-0-2"]], "Version 1.1": [[422, "version-1-1"]], "Version 1.2": [[422, "version-1-2"]], "Version 1.3": [[422, "version-1-3"]], "Version numbering": [[408, "version-numbering"]], "Virtual Environments": [[415, null]], "Visualing a RegionNDMap": [[535, "visualing-a-regionndmap"]], "Visualising the results": [[481, "visualising-the-results"]], "Visualization": [[587, null]], "Visualizing and Plotting": [[490, "visualizing-and-plotting"]], "WStat : Poisson data with background measurement": [[583, "wstat-poisson-data-with-background-measurement"]], "WStat counts statistic": [[584, "wstat-counts-statistic"]], "WStatCountsStatistic": [[293, null]], "WcsGeom": [[206, null]], "WcsMap": [[207, null]], "WcsNDMap": [[208, null]], "What checks and conversions should I do for inputs?": [[383, "what-checks-and-conversions-should-i-do-for-inputs"]], "What is a PIG?": [[388, "what-is-a-pig"]], "What is this?": [[386, "what-is-this"]], "What next?": [[457, "what-next"], [459, "what-next"], [463, "what-next"], [469, "what-next"], [476, "what-next"], [508, "what-next"]], "What others have": [[393, "what-others-have"]], "What we have": [[391, "what-we-have"], [399, "what-we-have"], [407, "what-we-have"]], "What\u2019s new?": [[424, "what-s-new"], [425, "what-s-new"], [426, "what-s-new"], [427, "what-s-new"], [428, "what-s-new"], [429, "what-s-new"], [430, "what-s-new"], [431, "what-s-new"], [432, "what-s-new"], [433, "what-s-new"], [434, "what-s-new"], [435, "what-s-new"], [437, "what-s-new"], [438, "what-s-new"], [440, "what-s-new"], [441, "what-s-new"], [442, "what-s-new"], [443, "what-s-new"], [444, "what-s-new"], [445, "what-s-new"]], "What\u2019s next": [[506, "whats-next"]], "What\u2019s next?": [[460, "whats-next"]], "Where should I import from?": [[383, "where-should-i-import-from"]], "WobbleRegionsFinder": [[183, null]], "Working with event lists": [[519, "working-with-event-lists"]], "Write your own CLI": [[582, "write-your-own-cli"]], "Writing Maps": [[490, "writing-maps"]], "Writing a PIG": [[388, "writing-a-pig"]], "Writing and reading a RegionNDMap to/from a FITS file": [[535, "writing-and-reading-a-regionndmap-to-from-a-fits-file"]], "Writing event lists and GTIs to file": [[519, "writing-event-lists-and-gtis-to-file"]], "YAML representation": [[538, "yaml-representation"], [539, "yaml-representation"], [540, "yaml-representation"], [541, "yaml-representation"], [542, "yaml-representation"], [543, "yaml-representation"], [544, "yaml-representation"], [545, "yaml-representation"], [546, "yaml-representation"], [548, "yaml-representation"], [549, "yaml-representation"], [550, "yaml-representation"], [551, "yaml-representation"], [552, "yaml-representation"], [553, "yaml-representation"], [554, "yaml-representation"], [555, "yaml-representation"], [556, "yaml-representation"], [557, "yaml-representation"], [558, "yaml-representation"], [559, "yaml-representation"], [560, "yaml-representation"], [561, "yaml-representation"], [562, "yaml-representation"], [563, "yaml-representation"], [564, "yaml-representation"], [565, "yaml-representation"], [566, "yaml-representation"], [567, "yaml-representation"], [569, "yaml-representation"], [570, "yaml-representation"], [571, "yaml-representation"], [572, "yaml-representation"], [573, "yaml-representation"], [574, "yaml-representation"], [575, "yaml-representation"], [576, "yaml-representation"], [577, "yaml-representation"]], "YusifovKucuk2004": [[39, null]], "YusifovKucuk2004B": [[40, null]], "ZhaoProfile": [[27, null]], "absolute_time": [[364, null]], "add_colorbar": [[371, null]], "add_observed_parameters": [[41, null]], "add_pulsar_parameters": [[42, null]], "add_pwn_parameters": [[43, null]], "add_snr_parameters": [[44, null]], "analysis": [[11, "gammapy-analysis"]], "analysis - High level interface": [[0, null]], "annotate_heatmap": [[372, null]], "apply_edisp": [[112, null], [117, null]], "arbitrary type input and validation": [[410, "arbitrary-type-input-and-validation"]], "as a function of of true energy and offset angle (EDISP_2D)": [[526, "as-a-function-of-of-true-energy-and-offset-angle-gadf-edisp-2d"]], "as a function of reconstructed energy and detector coordinates (BKG_3D)": [[525, "as-a-function-of-reconstructed-energy-and-detector-coordinates-gadf-bkg-3d"]], "as a function of reconstructed energy and offset angle, radially symmetric (BKG_2D)": [[525, "as-a-function-of-reconstructed-energy-and-offset-angle-radially-symmetric-gadf-bkg-2d"]], "as a function of true energy (RMF)": [[526, "as-a-function-of-true-energy-gadf-ogip-rmf"]], "as a function of true energy and offset angle (AEFF_2D)": [[524, "as-a-function-of-true-energy-and-offset-angle-gadf-aeff-2d"]], "assert_quantity_allclose": [[358, null]], "assert_skycoord_allclose": [[359, null]], "assert_time_allclose": [[360, null]], "astro - Astrophysics": [[1, null]], "cartesian": [[311, null]], "cash": [[294, null]], "cash_sum_cython": [[295, null]], "catalog - Source catalogs": [[2, null]], "check": [[11, "gammapy-check"]], "codemeta.json": [[409, "codemeta-json"]], "colormap_hess": [[373, null]], "colormap_milagro": [[374, null]], "combine_flux_maps": [[136, null]], "combine_significance_maps": [[137, null]], "compound_region_to_regions": [[341, null]], "compute_chisq": [[296, null]], "compute_flux_doubling": [[297, null]], "compute_fpp": [[298, null]], "compute_fvar": [[299, null]], "compute_lightcurve_discrete_correlation": [[138, null]], "compute_lightcurve_doublingtime": [[139, null]], "compute_lightcurve_fpp": [[140, null]], "compute_lightcurve_fvar": [[141, null]], "config": [[11, "gammapy-analysis-config"], [11, "gammapy-workflow-config"]], "containment_radius": [[209, null]], "containment_region": [[210, null]], "create_cosmic_ray_spectral_model": [[282, null]], "create_crab_spectral_model": [[283, null]], "create_empty_map_dataset_from_irfs": [[113, null]], "create_fermi_isotropic_diffuse_model": [[284, null]], "create_map_dataset_from_dl4": [[118, null]], "create_map_dataset_from_observation": [[114, null]], "create_map_dataset_geoms": [[115, null]], "cstat": [[300, null]], "data": [[410, "data"]], "data - DL3 data and observations": [[3, null]], "datasets": [[11, "gammapy-download-datasets"]], "datasets - Reduced datasets": [[4, null]], "discrete_correlation": [[301, null]], "docs.gammapy.org": [[414, "docs-gammapy-org"]], "download": [[11, "gammapy-download"]], "draw": [[333, null]], "earth_location_from_dict": [[320, null]], "estimate_exposure_reco_energy": [[142, null]], "estimators - High level estimators": [[5, null]], "f_cash_root_cython": [[302, null]], "find_peaks": [[143, null]], "find_peaks_in_flux_map": [[144, null]], "fov_to_sky": [[312, null]], "from_yaml": [[346, null]], "galactic": [[313, null]], "gamLike": [[510, "gamlike"]], "gammapy": [[11, "gammapy"]], "gammapy.analysis Package": [[0, "module-gammapy.analysis"]], "gammapy.astro.darkmatter Package": [[1, "module-gammapy.astro.darkmatter"]], "gammapy.astro.population Package": [[1, "module-gammapy.astro.population"]], "gammapy.astro.source Package": [[1, "module-gammapy.astro.source"]], "gammapy.catalog Package": [[2, "module-gammapy.catalog"]], "gammapy.data Package": [[3, "module-gammapy.data"]], "gammapy.datasets Package": [[4, "module-gammapy.datasets"]], "gammapy.datasets.utils Module": [[4, "module-gammapy.datasets.utils"]], "gammapy.estimators Package": [[5, "module-gammapy.estimators"]], "gammapy.estimators.utils Module": [[5, "module-gammapy.estimators.utils"]], "gammapy.irf Package": [[7, "module-gammapy.irf"]], "gammapy.makers Package": [[8, "module-gammapy.makers"]], "gammapy.makers.utils Module": [[8, "module-gammapy.makers.utils"]], "gammapy.maps Package": [[9, "module-gammapy.maps"]], "gammapy.modeling Package": [[10, "module-gammapy.modeling"]], "gammapy.modeling.models Package": [[10, "module-gammapy.modeling.models"]], "gammapy.modeling.models.utils Module": [[10, "module-gammapy.modeling.models.utils"]], "gammapy.org": [[414, "gammapy-org"]], "gammapy.stats Package": [[12, "module-gammapy.stats"]], "gammapy.utils.cluster Module": [[13, "module-gammapy.utils.cluster"]], "gammapy.utils.coordinates Package": [[13, "module-gammapy.utils.coordinates"]], "gammapy.utils.fits Module": [[13, "module-gammapy.utils.fits"]], "gammapy.utils.integrate Module": [[13, "module-gammapy.utils.integrate"]], "gammapy.utils.interpolation Module": [[13, "module-gammapy.utils.interpolation"]], "gammapy.utils.parallel Module": [[13, "module-gammapy.utils.parallel"]], "gammapy.utils.random Package": [[13, "module-gammapy.utils.random"]], "gammapy.utils.regions Module": [[13, "module-gammapy.utils.regions"]], "gammapy.utils.scripts Module": [[13, "module-gammapy.utils.scripts"]], "gammapy.utils.table Module": [[13, "module-gammapy.utils.table"]], "gammapy.utils.testing Module": [[13, "module-gammapy.utils.testing"]], "gammapy.utils.time Module": [[13, "module-gammapy.utils.time"]], "gammapy.utils.units Module": [[13, "module-gammapy.utils.units"]], "gammapy.visualization Package": [[14, "module-gammapy.visualization"]], "get_combined_flux_maps": [[145, null]], "get_combined_significance_maps": [[146, null]], "get_images_paths": [[347, null]], "get_irfs_features": [[96, null]], "get_random_state": [[334, null]], "get_rebinned_axis": [[147, null]], "get_wstat_gof_terms": [[303, null]], "get_wstat_mu_bkg": [[304, null]], "hierarchical_clustering": [[308, null]], "hstack_columns": [[353, null]], "info": [[11, "gammapy-info"]], "integrate_spectrum": [[285, null]], "interpolate_profile": [[323, null]], "interpolation_scale": [[324, null]], "irf - Instrument response functions": [[7, null]], "load_irf_dict_from_file": [[169, null]], "logging": [[11, "gammapy-check-logging"]], "make_base_catalog_galactic": [[45, null]], "make_catalog_random_positions_cube": [[46, null]], "make_catalog_random_positions_sphere": [[47, null]], "make_concentric_annulus_sky_regions": [[342, null]], "make_counts_rad_max": [[184, null]], "make_edisp_kernel_map": [[185, null]], "make_edisp_map": [[186, null]], "make_effective_livetime_map": [[187, null]], "make_map_background_irf": [[188, null]], "make_map_exposure_true_energy": [[189, null]], "make_observation_time_map": [[190, null]], "make_orthogonal_rectangle_sky_regions": [[343, null]], "make_path": [[348, null]], "make_psf_map": [[191, null]], "make_theta_squared_table": [[192, null]], "makers - Data reduction": [[8, null]], "maps - Sky maps": [[9, null]], "modeling - Models and fitting": [[10, null]], "motion_since_birth": [[314, null]], "mpl_plot_check": [[361, null]], "multiprocessing_manager": [[330, null]], "norm_bounds_cython": [[305, null]], "normalize": [[335, null]], "notebooks": [[11, "gammapy-download-notebooks"]], "observatory_locations": [[97, null]], "pdf": [[336, null]], "plot_contour_line": [[375, null]], "plot_distribution": [[376, null]], "plot_heatmap": [[377, null]], "plot_map_rgb": [[378, null]], "plot_npred_signal": [[379, null]], "plot_spectrum_datasets_off_regions": [[380, null]], "plot_theta_squared_table": [[381, null]], "polar": [[315, null]], "pydantic": [[410, "pydantic"]], "radial_distributions": [[48, null]], "read_hermes_cube": [[286, null], [288, null]], "read_yaml": [[349, null]], "recursive_merge_dicts": [[350, null]], "region_to_frame": [[344, null]], "regions_to_compound_region": [[345, null]], "requires_data": [[362, null]], "requires_dependency": [[363, null]], "resample_energy_edges": [[148, null]], "run": [[11, "gammapy-analysis-run"], [11, "gammapy-workflow-run"]], "run_multiprocessing": [[331, null]], "sample_powerlaw": [[337, null]], "sample_sphere": [[338, null]], "sample_sphere_distance": [[339, null]], "sample_times": [[340, null]], "scale_plot_flux": [[287, null]], "scripts - Command line tools": [[11, null]], "select_nested_models": [[289, null]], "sky_to_fov": [[316, null]], "split_dataset": [[116, null], [119, null]], "standard_scaler": [[309, null]], "standardise_unit": [[368, null]], "stat_profile_ul_scipy": [[290, null]], "stats - Statistics": [[12, null]], "structure_function": [[306, null]], "table_row_to_dict": [[354, null]], "table_standardise_units_copy": [[355, null]], "table_standardise_units_inplace": [[356, null]], "the base class": [[410, "the-base-class"]], "time_ref_from_dict": [[365, null]], "time_ref_to_dict": [[366, null]], "time_relative_to_ref": [[367, null]], "to_yaml": [[351, null]], "trapz_loglog": [[321, null]], "unit_from_fits_image_hdu": [[369, null]], "utils - Utilities": [[13, null]], "velocity_distributions": [[49, null]], "velocity_glon_glat": [[317, null]], "visualization - Plotting features": [[14, null]], "workflow": [[11, "gammapy-workflow"]], "write_yaml": [[352, null]], "wstat": [[307, null]]}, "docnames": ["api-reference/analysis", "api-reference/astro", "api-reference/catalog", "api-reference/data", "api-reference/datasets", "api-reference/estimators", "api-reference/index", "api-reference/irf", "api-reference/makers", "api-reference/maps", "api-reference/modeling", "api-reference/scripts", "api-reference/stats", "api-reference/utils", "api-reference/visualization", "api/gammapy.analysis.Analysis", "api/gammapy.analysis.AnalysisConfig", "api/gammapy.astro.darkmatter.BurkertProfile", "api/gammapy.astro.darkmatter.DMProfile", "api/gammapy.astro.darkmatter.DarkMatterAnnihilationSpectralModel", "api/gammapy.astro.darkmatter.DarkMatterDecaySpectralModel", "api/gammapy.astro.darkmatter.EinastoProfile", "api/gammapy.astro.darkmatter.IsothermalProfile", "api/gammapy.astro.darkmatter.JFactory", "api/gammapy.astro.darkmatter.MooreProfile", "api/gammapy.astro.darkmatter.NFWProfile", "api/gammapy.astro.darkmatter.PrimaryFlux", "api/gammapy.astro.darkmatter.ZhaoProfile", "api/gammapy.astro.population.CaseBattacharya1998", "api/gammapy.astro.population.Exponential", "api/gammapy.astro.population.FaucherKaspi2006", "api/gammapy.astro.population.FaucherKaspi2006VelocityBimodal", "api/gammapy.astro.population.FaucherKaspi2006VelocityMaxwellian", "api/gammapy.astro.population.FaucherSpiral", "api/gammapy.astro.population.LogSpiral", "api/gammapy.astro.population.Lorimer2006", "api/gammapy.astro.population.Paczynski1990", "api/gammapy.astro.population.Paczynski1990Velocity", "api/gammapy.astro.population.ValleeSpiral", "api/gammapy.astro.population.YusifovKucuk2004", "api/gammapy.astro.population.YusifovKucuk2004B", "api/gammapy.astro.population.add_observed_parameters", "api/gammapy.astro.population.add_pulsar_parameters", "api/gammapy.astro.population.add_pwn_parameters", "api/gammapy.astro.population.add_snr_parameters", "api/gammapy.astro.population.make_base_catalog_galactic", "api/gammapy.astro.population.make_catalog_random_positions_cube", "api/gammapy.astro.population.make_catalog_random_positions_sphere", "api/gammapy.astro.population.radial_distributions", "api/gammapy.astro.population.velocity_distributions", "api/gammapy.astro.source.PWN", "api/gammapy.astro.source.Pulsar", "api/gammapy.astro.source.SNR", "api/gammapy.astro.source.SNRTrueloveMcKee", "api/gammapy.astro.source.SimplePulsar", "api/gammapy.catalog.CATALOG_REGISTRY", "api/gammapy.catalog.SourceCatalog", "api/gammapy.catalog.SourceCatalog1LHAASO", "api/gammapy.catalog.SourceCatalog2FHL", "api/gammapy.catalog.SourceCatalog2HWC", "api/gammapy.catalog.SourceCatalog2PC", "api/gammapy.catalog.SourceCatalog3FGL", "api/gammapy.catalog.SourceCatalog3FHL", "api/gammapy.catalog.SourceCatalog3HWC", "api/gammapy.catalog.SourceCatalog3PC", "api/gammapy.catalog.SourceCatalog4FGL", "api/gammapy.catalog.SourceCatalogGammaCat", "api/gammapy.catalog.SourceCatalogHGPS", "api/gammapy.catalog.SourceCatalogLargeScaleHGPS", "api/gammapy.catalog.SourceCatalogObject", "api/gammapy.catalog.SourceCatalogObject1LHAASO", "api/gammapy.catalog.SourceCatalogObject2FHL", "api/gammapy.catalog.SourceCatalogObject2HWC", "api/gammapy.catalog.SourceCatalogObject2PC", "api/gammapy.catalog.SourceCatalogObject3FGL", "api/gammapy.catalog.SourceCatalogObject3FHL", "api/gammapy.catalog.SourceCatalogObject3HWC", "api/gammapy.catalog.SourceCatalogObject3PC", "api/gammapy.catalog.SourceCatalogObject4FGL", "api/gammapy.catalog.SourceCatalogObjectGammaCat", "api/gammapy.catalog.SourceCatalogObjectHGPS", "api/gammapy.catalog.SourceCatalogObjectHGPSComponent", "api/gammapy.data.DataStore", "api/gammapy.data.EventList", "api/gammapy.data.EventListMetaData", "api/gammapy.data.FixedPointingInfo", "api/gammapy.data.GTI", "api/gammapy.data.HDUIndexTable", "api/gammapy.data.Observation", "api/gammapy.data.ObservationFilter", "api/gammapy.data.ObservationMetaData", "api/gammapy.data.ObservationTable", "api/gammapy.data.Observations", "api/gammapy.data.ObservationsEventsSampler", "api/gammapy.data.PointingInfo", "api/gammapy.data.PointingMode", "api/gammapy.data.get_irfs_features", "api/gammapy.data.observatory_locations", "api/gammapy.datasets.DATASET_REGISTRY", "api/gammapy.datasets.Dataset", "api/gammapy.datasets.Datasets", "api/gammapy.datasets.FermipyDatasetsReader", "api/gammapy.datasets.FluxPointsDataset", "api/gammapy.datasets.MapDataset", "api/gammapy.datasets.MapDatasetEventSampler", "api/gammapy.datasets.MapDatasetMetaData", "api/gammapy.datasets.MapDatasetOnOff", "api/gammapy.datasets.OGIPDatasetReader", "api/gammapy.datasets.OGIPDatasetWriter", "api/gammapy.datasets.ObservationEventSampler", "api/gammapy.datasets.SpectrumDataset", "api/gammapy.datasets.SpectrumDatasetOnOff", "api/gammapy.datasets.apply_edisp", "api/gammapy.datasets.create_empty_map_dataset_from_irfs", "api/gammapy.datasets.create_map_dataset_from_observation", "api/gammapy.datasets.create_map_dataset_geoms", "api/gammapy.datasets.split_dataset", "api/gammapy.datasets.utils.apply_edisp", "api/gammapy.datasets.utils.create_map_dataset_from_dl4", "api/gammapy.datasets.utils.split_dataset", "api/gammapy.estimators.ASmoothMapEstimator", "api/gammapy.estimators.ESTIMATOR_REGISTRY", "api/gammapy.estimators.EnergyDependentMorphologyEstimator", "api/gammapy.estimators.Estimator", "api/gammapy.estimators.ExcessMapEstimator", "api/gammapy.estimators.FluxMaps", "api/gammapy.estimators.FluxMetaData", "api/gammapy.estimators.FluxPoints", "api/gammapy.estimators.FluxPointsEstimator", "api/gammapy.estimators.FluxProfileEstimator", "api/gammapy.estimators.ImageProfile", "api/gammapy.estimators.ImageProfileEstimator", "api/gammapy.estimators.LightCurveEstimator", "api/gammapy.estimators.ParameterEstimator", "api/gammapy.estimators.SensitivityEstimator", "api/gammapy.estimators.TSMapEstimator", "api/gammapy.estimators.utils.combine_flux_maps", "api/gammapy.estimators.utils.combine_significance_maps", "api/gammapy.estimators.utils.compute_lightcurve_discrete_correlation", "api/gammapy.estimators.utils.compute_lightcurve_doublingtime", "api/gammapy.estimators.utils.compute_lightcurve_fpp", "api/gammapy.estimators.utils.compute_lightcurve_fvar", "api/gammapy.estimators.utils.estimate_exposure_reco_energy", "api/gammapy.estimators.utils.find_peaks", "api/gammapy.estimators.utils.find_peaks_in_flux_map", "api/gammapy.estimators.utils.get_combined_flux_maps", "api/gammapy.estimators.utils.get_combined_significance_maps", "api/gammapy.estimators.utils.get_rebinned_axis", "api/gammapy.estimators.utils.resample_energy_edges", "api/gammapy.irf.Background2D", "api/gammapy.irf.Background3D", "api/gammapy.irf.BackgroundIRF", "api/gammapy.irf.EDispKernel", "api/gammapy.irf.EDispKernelMap", "api/gammapy.irf.EDispMap", "api/gammapy.irf.EffectiveAreaTable2D", "api/gammapy.irf.EnergyDependentMultiGaussPSF", "api/gammapy.irf.EnergyDispersion2D", "api/gammapy.irf.FoVAlignment", "api/gammapy.irf.IRF", "api/gammapy.irf.IRFMap", "api/gammapy.irf.IRF_REGISTRY", "api/gammapy.irf.PSF3D", "api/gammapy.irf.PSFKernel", "api/gammapy.irf.PSFKing", "api/gammapy.irf.PSFMap", "api/gammapy.irf.ParametricPSF", "api/gammapy.irf.RadMax2D", "api/gammapy.irf.RecoPSFMap", "api/gammapy.irf.load_irf_dict_from_file", "api/gammapy.makers.AdaptiveRingBackgroundMaker", "api/gammapy.makers.DatasetsMaker", "api/gammapy.makers.FoVBackgroundMaker", "api/gammapy.makers.MAKER_REGISTRY", "api/gammapy.makers.Maker", "api/gammapy.makers.MapDatasetMaker", "api/gammapy.makers.PhaseBackgroundMaker", "api/gammapy.makers.ReflectedRegionsBackgroundMaker", "api/gammapy.makers.ReflectedRegionsFinder", "api/gammapy.makers.RegionsFinder", "api/gammapy.makers.RingBackgroundMaker", "api/gammapy.makers.SafeMaskMaker", "api/gammapy.makers.SpectrumDatasetMaker", "api/gammapy.makers.WobbleRegionsFinder", "api/gammapy.makers.utils.make_counts_rad_max", "api/gammapy.makers.utils.make_edisp_kernel_map", "api/gammapy.makers.utils.make_edisp_map", "api/gammapy.makers.utils.make_effective_livetime_map", "api/gammapy.makers.utils.make_map_background_irf", "api/gammapy.makers.utils.make_map_exposure_true_energy", "api/gammapy.makers.utils.make_observation_time_map", "api/gammapy.makers.utils.make_psf_map", "api/gammapy.makers.utils.make_theta_squared_table", "api/gammapy.maps.Geom", "api/gammapy.maps.HpxGeom", "api/gammapy.maps.HpxMap", "api/gammapy.maps.HpxNDMap", "api/gammapy.maps.LabelMapAxis", "api/gammapy.maps.Map", "api/gammapy.maps.MapAxes", "api/gammapy.maps.MapAxis", "api/gammapy.maps.MapCoord", "api/gammapy.maps.Maps", "api/gammapy.maps.RegionGeom", "api/gammapy.maps.RegionNDMap", "api/gammapy.maps.TimeMapAxis", "api/gammapy.maps.WcsGeom", "api/gammapy.maps.WcsMap", "api/gammapy.maps.WcsNDMap", "api/gammapy.maps.containment_radius", "api/gammapy.maps.containment_region", "api/gammapy.modeling.Covariance", "api/gammapy.modeling.CovarianceResult", "api/gammapy.modeling.Fit", "api/gammapy.modeling.FitResult", "api/gammapy.modeling.OptimizeResult", "api/gammapy.modeling.Parameter", "api/gammapy.modeling.Parameters", "api/gammapy.modeling.PriorParameter", "api/gammapy.modeling.PriorParameters", "api/gammapy.modeling.models.BrokenPowerLawSpectralModel", "api/gammapy.modeling.models.CompoundSpectralModel", "api/gammapy.modeling.models.ConstantFluxSpatialModel", "api/gammapy.modeling.models.ConstantSpatialModel", "api/gammapy.modeling.models.ConstantSpectralModel", "api/gammapy.modeling.models.ConstantTemporalModel", "api/gammapy.modeling.models.DatasetModels", "api/gammapy.modeling.models.DiskSpatialModel", "api/gammapy.modeling.models.EBLAbsorptionNormSpectralModel", "api/gammapy.modeling.models.EBL_DATA_BUILTIN", "api/gammapy.modeling.models.ExpCutoffPowerLaw3FGLSpectralModel", "api/gammapy.modeling.models.ExpCutoffPowerLawNormSpectralModel", "api/gammapy.modeling.models.ExpCutoffPowerLawSpectralModel", "api/gammapy.modeling.models.ExpDecayTemporalModel", "api/gammapy.modeling.models.FoVBackgroundModel", "api/gammapy.modeling.models.GaussianPrior", "api/gammapy.modeling.models.GaussianSpatialModel", "api/gammapy.modeling.models.GaussianSpectralModel", "api/gammapy.modeling.models.GaussianTemporalModel", "api/gammapy.modeling.models.GeneralizedGaussianSpatialModel", "api/gammapy.modeling.models.GeneralizedGaussianTemporalModel", "api/gammapy.modeling.models.LightCurveTemplateTemporalModel", "api/gammapy.modeling.models.LinearTemporalModel", "api/gammapy.modeling.models.LogParabolaNormSpectralModel", "api/gammapy.modeling.models.LogParabolaSpectralModel", "api/gammapy.modeling.models.LogUniformPrior", "api/gammapy.modeling.models.MODEL_REGISTRY", "api/gammapy.modeling.models.MeyerCrabSpectralModel", "api/gammapy.modeling.models.Model", "api/gammapy.modeling.models.ModelBase", "api/gammapy.modeling.models.Models", "api/gammapy.modeling.models.NaimaSpectralModel", "api/gammapy.modeling.models.PiecewiseNormSpatialModel", "api/gammapy.modeling.models.PiecewiseNormSpectralModel", "api/gammapy.modeling.models.PointSpatialModel", "api/gammapy.modeling.models.PowerLaw2SpectralModel", "api/gammapy.modeling.models.PowerLawNormSpectralModel", "api/gammapy.modeling.models.PowerLawSpectralModel", "api/gammapy.modeling.models.PowerLawTemporalModel", "api/gammapy.modeling.models.Prior", "api/gammapy.modeling.models.SPATIAL_MODEL_REGISTRY", "api/gammapy.modeling.models.SPECTRAL_MODEL_REGISTRY", "api/gammapy.modeling.models.ScaleSpectralModel", "api/gammapy.modeling.models.Shell2SpatialModel", "api/gammapy.modeling.models.ShellSpatialModel", "api/gammapy.modeling.models.SineTemporalModel", "api/gammapy.modeling.models.SkyModel", "api/gammapy.modeling.models.SmoothBrokenPowerLawSpectralModel", "api/gammapy.modeling.models.SpatialModel", "api/gammapy.modeling.models.SpectralModel", "api/gammapy.modeling.models.SuperExpCutoffPowerLaw3FGLSpectralModel", "api/gammapy.modeling.models.SuperExpCutoffPowerLaw4FGLDR3SpectralModel", "api/gammapy.modeling.models.SuperExpCutoffPowerLaw4FGLSpectralModel", "api/gammapy.modeling.models.TEMPORAL_MODEL_REGISTRY", "api/gammapy.modeling.models.TemplateNDSpatialModel", "api/gammapy.modeling.models.TemplateNDSpectralModel", "api/gammapy.modeling.models.TemplateNPredModel", "api/gammapy.modeling.models.TemplatePhaseCurveTemporalModel", "api/gammapy.modeling.models.TemplateSpatialModel", "api/gammapy.modeling.models.TemplateSpectralModel", "api/gammapy.modeling.models.TemporalModel", "api/gammapy.modeling.models.UniformPrior", "api/gammapy.modeling.models.create_cosmic_ray_spectral_model", "api/gammapy.modeling.models.create_crab_spectral_model", "api/gammapy.modeling.models.create_fermi_isotropic_diffuse_model", "api/gammapy.modeling.models.integrate_spectrum", "api/gammapy.modeling.models.read_hermes_cube", "api/gammapy.modeling.models.scale_plot_flux", "api/gammapy.modeling.models.utils.read_hermes_cube", "api/gammapy.modeling.select_nested_models", "api/gammapy.modeling.stat_profile_ul_scipy", "api/gammapy.stats.CashCountsStatistic", "api/gammapy.stats.TimmerKonig_lightcurve_simulator", "api/gammapy.stats.WStatCountsStatistic", "api/gammapy.stats.cash", "api/gammapy.stats.cash_sum_cython", "api/gammapy.stats.compute_chisq", "api/gammapy.stats.compute_flux_doubling", "api/gammapy.stats.compute_fpp", "api/gammapy.stats.compute_fvar", "api/gammapy.stats.cstat", "api/gammapy.stats.discrete_correlation", "api/gammapy.stats.f_cash_root_cython", "api/gammapy.stats.get_wstat_gof_terms", "api/gammapy.stats.get_wstat_mu_bkg", "api/gammapy.stats.norm_bounds_cython", "api/gammapy.stats.structure_function", "api/gammapy.stats.wstat", "api/gammapy.utils.cluster.hierarchical_clustering", "api/gammapy.utils.cluster.standard_scaler", "api/gammapy.utils.coordinates.D_SUN_TO_GALACTIC_CENTER", "api/gammapy.utils.coordinates.cartesian", "api/gammapy.utils.coordinates.fov_to_sky", "api/gammapy.utils.coordinates.galactic", "api/gammapy.utils.coordinates.motion_since_birth", "api/gammapy.utils.coordinates.polar", "api/gammapy.utils.coordinates.sky_to_fov", "api/gammapy.utils.coordinates.velocity_glon_glat", "api/gammapy.utils.fits.HDULocation", "api/gammapy.utils.fits.LazyFitsData", "api/gammapy.utils.fits.earth_location_from_dict", "api/gammapy.utils.integrate.trapz_loglog", "api/gammapy.utils.interpolation.ScaledRegularGridInterpolator", "api/gammapy.utils.interpolation.interpolate_profile", "api/gammapy.utils.interpolation.interpolation_scale", "api/gammapy.utils.parallel.BACKEND_DEFAULT", "api/gammapy.utils.parallel.METHOD_DEFAULT", "api/gammapy.utils.parallel.METHOD_KWARGS_DEFAULT", "api/gammapy.utils.parallel.N_JOBS_DEFAULT", "api/gammapy.utils.parallel.POOL_KWARGS_DEFAULT", "api/gammapy.utils.parallel.multiprocessing_manager", "api/gammapy.utils.parallel.run_multiprocessing", "api/gammapy.utils.random.InverseCDFSampler", "api/gammapy.utils.random.draw", "api/gammapy.utils.random.get_random_state", "api/gammapy.utils.random.normalize", "api/gammapy.utils.random.pdf", "api/gammapy.utils.random.sample_powerlaw", "api/gammapy.utils.random.sample_sphere", "api/gammapy.utils.random.sample_sphere_distance", "api/gammapy.utils.random.sample_times", "api/gammapy.utils.regions.compound_region_to_regions", "api/gammapy.utils.regions.make_concentric_annulus_sky_regions", "api/gammapy.utils.regions.make_orthogonal_rectangle_sky_regions", "api/gammapy.utils.regions.region_to_frame", "api/gammapy.utils.regions.regions_to_compound_region", "api/gammapy.utils.scripts.from_yaml", "api/gammapy.utils.scripts.get_images_paths", "api/gammapy.utils.scripts.make_path", "api/gammapy.utils.scripts.read_yaml", "api/gammapy.utils.scripts.recursive_merge_dicts", "api/gammapy.utils.scripts.to_yaml", "api/gammapy.utils.scripts.write_yaml", "api/gammapy.utils.table.hstack_columns", "api/gammapy.utils.table.table_row_to_dict", "api/gammapy.utils.table.table_standardise_units_copy", "api/gammapy.utils.table.table_standardise_units_inplace", "api/gammapy.utils.testing.Checker", "api/gammapy.utils.testing.assert_quantity_allclose", "api/gammapy.utils.testing.assert_skycoord_allclose", "api/gammapy.utils.testing.assert_time_allclose", "api/gammapy.utils.testing.mpl_plot_check", "api/gammapy.utils.testing.requires_data", "api/gammapy.utils.testing.requires_dependency", "api/gammapy.utils.time.absolute_time", "api/gammapy.utils.time.time_ref_from_dict", "api/gammapy.utils.time.time_ref_to_dict", "api/gammapy.utils.time.time_relative_to_ref", "api/gammapy.utils.units.standardise_unit", "api/gammapy.utils.units.unit_from_fits_image_hdu", "api/gammapy.visualization.MapPanelPlotter", "api/gammapy.visualization.add_colorbar", "api/gammapy.visualization.annotate_heatmap", "api/gammapy.visualization.colormap_hess", "api/gammapy.visualization.colormap_milagro", "api/gammapy.visualization.plot_contour_line", "api/gammapy.visualization.plot_distribution", "api/gammapy.visualization.plot_heatmap", "api/gammapy.visualization.plot_map_rgb", "api/gammapy.visualization.plot_npred_signal", "api/gammapy.visualization.plot_spectrum_datasets_off_regions", "api/gammapy.visualization.plot_theta_squared_table", "development/dependencies", "development/dev_howto", "development/doc_howto", "development/index", "development/intro", "development/pigs/index", "development/pigs/pig-001", "development/pigs/pig-002", "development/pigs/pig-003", "development/pigs/pig-004", "development/pigs/pig-005", "development/pigs/pig-006", "development/pigs/pig-007", "development/pigs/pig-008", "development/pigs/pig-009", "development/pigs/pig-010", "development/pigs/pig-011", "development/pigs/pig-012", "development/pigs/pig-013", "development/pigs/pig-014", "development/pigs/pig-016", "development/pigs/pig-018", "development/pigs/pig-019", "development/pigs/pig-020", "development/pigs/pig-021", "development/pigs/pig-022", "development/pigs/pig-023", "development/pigs/pig-024", "development/pigs/pig-025", "development/pigs/pig-026", "development/pigs/pig-027", "development/release", "development/setup", "getting-started/environments", "getting-started/index", "getting-started/install", "getting-started/quickstart", "getting-started/troubleshooting", "getting-started/usage", "index", "release-notes/index", "release-notes/v0.1", "release-notes/v0.10", "release-notes/v0.11", "release-notes/v0.12", "release-notes/v0.13", "release-notes/v0.14", "release-notes/v0.15", "release-notes/v0.16", "release-notes/v0.17", "release-notes/v0.18", "release-notes/v0.18.1", "release-notes/v0.18.2", "release-notes/v0.19", "release-notes/v0.2", "release-notes/v0.20", "release-notes/v0.20.1", "release-notes/v0.3", "release-notes/v0.4", "release-notes/v0.5", "release-notes/v0.6", "release-notes/v0.7", "release-notes/v0.8", "release-notes/v0.9", "release-notes/v1.0", "release-notes/v1.0.1", "release-notes/v1.0.2", "release-notes/v1.1", "release-notes/v1.2", "release-notes/v1.3", "release-notes/v2.0", "sg_execution_times", "tutorials/analysis-1d/cta_sensitivity", "tutorials/analysis-1d/ebl", "tutorials/analysis-1d/extended_source_spectral_analysis", "tutorials/analysis-1d/sed_fitting", "tutorials/analysis-1d/sg_execution_times", "tutorials/analysis-1d/spectral_analysis", "tutorials/analysis-1d/spectral_analysis_hli", "tutorials/analysis-1d/spectral_analysis_rad_max", "tutorials/analysis-1d/spectrum_simulation", "tutorials/analysis-2d/detect", "tutorials/analysis-2d/modeling_2D", "tutorials/analysis-2d/ring_background", "tutorials/analysis-2d/sg_execution_times", "tutorials/analysis-3d/analysis_3d", "tutorials/analysis-3d/analysis_mwl", "tutorials/analysis-3d/cta_data_analysis", "tutorials/analysis-3d/energy_dependent_estimation", "tutorials/analysis-3d/event_sampling", "tutorials/analysis-3d/event_sampling_nrg_depend_models", "tutorials/analysis-3d/flux_profiles", "tutorials/analysis-3d/sg_execution_times", "tutorials/analysis-3d/simulate_3d", "tutorials/analysis-time/light_curve", "tutorials/analysis-time/light_curve_flare", "tutorials/analysis-time/light_curve_simulation", "tutorials/analysis-time/pulsar_analysis", "tutorials/analysis-time/sg_execution_times", "tutorials/analysis-time/time_resolved_spectroscopy", "tutorials/analysis-time/variability_estimation", "tutorials/api/astro_dark_matter", "tutorials/api/catalog", "tutorials/api/datasets", "tutorials/api/estimators", "tutorials/api/fitting", "tutorials/api/irfs", "tutorials/api/makers", "tutorials/api/maps", "tutorials/api/mask_maps", "tutorials/api/model_management", "tutorials/api/models", "tutorials/api/observation_clustering", "tutorials/api/priors", "tutorials/api/sg_execution_times", "tutorials/data/cta", "tutorials/data/fermi_lat", "tutorials/data/hawc", "tutorials/data/hess", "tutorials/data/sg_execution_times", "tutorials/index", "tutorials/scripts/sg_execution_times", "tutorials/scripts/survey_map", "tutorials/sg_execution_times", "tutorials/starting/analysis_1", "tutorials/starting/analysis_2", "tutorials/starting/overview", "tutorials/starting/sg_execution_times", "user-guide/astro/darkmatter/index", "user-guide/astro/index", "user-guide/astro/population/index", "user-guide/astro/source/index", "user-guide/astro/source/pulsar", "user-guide/astro/source/pwn", "user-guide/astro/source/snr", "user-guide/catalog", "user-guide/datasets/index", "user-guide/dl3", "user-guide/estimators", "user-guide/hli", "user-guide/howto", "user-guide/index", "user-guide/irf/aeff", "user-guide/irf/bkg", "user-guide/irf/edisp", "user-guide/irf/index", "user-guide/irf/psf", "user-guide/makers/fov", "user-guide/makers/index", "user-guide/makers/reflected", "user-guide/makers/ring", "user-guide/maps/hpxmap", "user-guide/maps/index", "user-guide/maps/regionmap", "user-guide/model-gallery/index", "user-guide/model-gallery/sg_execution_times", "user-guide/model-gallery/spatial/plot_constant", "user-guide/model-gallery/spatial/plot_disk", "user-guide/model-gallery/spatial/plot_gauss", "user-guide/model-gallery/spatial/plot_gen_gauss", "user-guide/model-gallery/spatial/plot_piecewise_norm_spatial", "user-guide/model-gallery/spatial/plot_point", "user-guide/model-gallery/spatial/plot_shell", "user-guide/model-gallery/spatial/plot_shell2", "user-guide/model-gallery/spatial/plot_template", "user-guide/model-gallery/spatial/sg_execution_times", "user-guide/model-gallery/spectral/plot_absorbed", "user-guide/model-gallery/spectral/plot_broken_powerlaw", "user-guide/model-gallery/spectral/plot_compound", "user-guide/model-gallery/spectral/plot_constant_spectral", "user-guide/model-gallery/spectral/plot_exp_cutoff_powerlaw", "user-guide/model-gallery/spectral/plot_exp_cutoff_powerlaw_3fgl", "user-guide/model-gallery/spectral/plot_exp_cutoff_powerlaw_norm_spectral", "user-guide/model-gallery/spectral/plot_gauss_spectral", "user-guide/model-gallery/spectral/plot_logparabola", "user-guide/model-gallery/spectral/plot_logparabola_norm_spectral", "user-guide/model-gallery/spectral/plot_naima", "user-guide/model-gallery/spectral/plot_piecewise_norm_spectral", "user-guide/model-gallery/spectral/plot_powerlaw", "user-guide/model-gallery/spectral/plot_powerlaw2", "user-guide/model-gallery/spectral/plot_powerlaw_norm_spectral", "user-guide/model-gallery/spectral/plot_smooth_broken_powerlaw", "user-guide/model-gallery/spectral/plot_super_exp_cutoff_powerlaw_3fgl", "user-guide/model-gallery/spectral/plot_super_exp_cutoff_powerlaw_4fgl", "user-guide/model-gallery/spectral/plot_super_exp_cutoff_powerlaw_4fgl_dr1", "user-guide/model-gallery/spectral/plot_template_spectral", "user-guide/model-gallery/spectral/sg_execution_times", "user-guide/model-gallery/temporal/plot_constant_temporal", "user-guide/model-gallery/temporal/plot_expdecay_temporal", "user-guide/model-gallery/temporal/plot_gaussian_temporal", "user-guide/model-gallery/temporal/plot_generalized_gaussian_temporal", "user-guide/model-gallery/temporal/plot_linear_temporal", "user-guide/model-gallery/temporal/plot_powerlaw_temporal", "user-guide/model-gallery/temporal/plot_sine_temporal", "user-guide/model-gallery/temporal/plot_template_phase_temporal", "user-guide/model-gallery/temporal/plot_template_temporal", "user-guide/model-gallery/temporal/sg_execution_times", "user-guide/modeling", "user-guide/package", "user-guide/references", "user-guide/scripts/index", "user-guide/stats/fit_statistics", "user-guide/stats/index", "user-guide/stats/wstat_derivation", "user-guide/utils", "user-guide/visualization/index"], "envversion": {"sphinx": 62, "sphinx.domains.c": 3, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 9, "sphinx.domains.index": 1, "sphinx.domains.javascript": 3, "sphinx.domains.math": 2, "sphinx.domains.python": 4, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "sphinx.ext.intersphinx": 1, "sphinx.ext.viewcode": 1}, "filenames": ["api-reference/analysis.rst", "api-reference/astro.rst", "api-reference/catalog.rst", "api-reference/data.rst", "api-reference/datasets.rst", "api-reference/estimators.rst", "api-reference/index.rst", "api-reference/irf.rst", "api-reference/makers.rst", "api-reference/maps.rst", "api-reference/modeling.rst", "api-reference/scripts.rst", "api-reference/stats.rst", "api-reference/utils.rst", "api-reference/visualization.rst", "api/gammapy.analysis.Analysis.rst", "api/gammapy.analysis.AnalysisConfig.rst", "api/gammapy.astro.darkmatter.BurkertProfile.rst", "api/gammapy.astro.darkmatter.DMProfile.rst", "api/gammapy.astro.darkmatter.DarkMatterAnnihilationSpectralModel.rst", "api/gammapy.astro.darkmatter.DarkMatterDecaySpectralModel.rst", "api/gammapy.astro.darkmatter.EinastoProfile.rst", "api/gammapy.astro.darkmatter.IsothermalProfile.rst", "api/gammapy.astro.darkmatter.JFactory.rst", "api/gammapy.astro.darkmatter.MooreProfile.rst", "api/gammapy.astro.darkmatter.NFWProfile.rst", "api/gammapy.astro.darkmatter.PrimaryFlux.rst", "api/gammapy.astro.darkmatter.ZhaoProfile.rst", "api/gammapy.astro.population.CaseBattacharya1998.rst", "api/gammapy.astro.population.Exponential.rst", "api/gammapy.astro.population.FaucherKaspi2006.rst", "api/gammapy.astro.population.FaucherKaspi2006VelocityBimodal.rst", "api/gammapy.astro.population.FaucherKaspi2006VelocityMaxwellian.rst", "api/gammapy.astro.population.FaucherSpiral.rst", "api/gammapy.astro.population.LogSpiral.rst", "api/gammapy.astro.population.Lorimer2006.rst", "api/gammapy.astro.population.Paczynski1990.rst", "api/gammapy.astro.population.Paczynski1990Velocity.rst", "api/gammapy.astro.population.ValleeSpiral.rst", "api/gammapy.astro.population.YusifovKucuk2004.rst", "api/gammapy.astro.population.YusifovKucuk2004B.rst", "api/gammapy.astro.population.add_observed_parameters.rst", "api/gammapy.astro.population.add_pulsar_parameters.rst", "api/gammapy.astro.population.add_pwn_parameters.rst", "api/gammapy.astro.population.add_snr_parameters.rst", "api/gammapy.astro.population.make_base_catalog_galactic.rst", "api/gammapy.astro.population.make_catalog_random_positions_cube.rst", "api/gammapy.astro.population.make_catalog_random_positions_sphere.rst", "api/gammapy.astro.population.radial_distributions.rst", "api/gammapy.astro.population.velocity_distributions.rst", "api/gammapy.astro.source.PWN.rst", "api/gammapy.astro.source.Pulsar.rst", "api/gammapy.astro.source.SNR.rst", "api/gammapy.astro.source.SNRTrueloveMcKee.rst", "api/gammapy.astro.source.SimplePulsar.rst", "api/gammapy.catalog.CATALOG_REGISTRY.rst", "api/gammapy.catalog.SourceCatalog.rst", "api/gammapy.catalog.SourceCatalog1LHAASO.rst", "api/gammapy.catalog.SourceCatalog2FHL.rst", "api/gammapy.catalog.SourceCatalog2HWC.rst", "api/gammapy.catalog.SourceCatalog2PC.rst", "api/gammapy.catalog.SourceCatalog3FGL.rst", "api/gammapy.catalog.SourceCatalog3FHL.rst", "api/gammapy.catalog.SourceCatalog3HWC.rst", "api/gammapy.catalog.SourceCatalog3PC.rst", "api/gammapy.catalog.SourceCatalog4FGL.rst", "api/gammapy.catalog.SourceCatalogGammaCat.rst", "api/gammapy.catalog.SourceCatalogHGPS.rst", "api/gammapy.catalog.SourceCatalogLargeScaleHGPS.rst", "api/gammapy.catalog.SourceCatalogObject.rst", "api/gammapy.catalog.SourceCatalogObject1LHAASO.rst", "api/gammapy.catalog.SourceCatalogObject2FHL.rst", "api/gammapy.catalog.SourceCatalogObject2HWC.rst", "api/gammapy.catalog.SourceCatalogObject2PC.rst", "api/gammapy.catalog.SourceCatalogObject3FGL.rst", "api/gammapy.catalog.SourceCatalogObject3FHL.rst", "api/gammapy.catalog.SourceCatalogObject3HWC.rst", "api/gammapy.catalog.SourceCatalogObject3PC.rst", "api/gammapy.catalog.SourceCatalogObject4FGL.rst", "api/gammapy.catalog.SourceCatalogObjectGammaCat.rst", "api/gammapy.catalog.SourceCatalogObjectHGPS.rst", "api/gammapy.catalog.SourceCatalogObjectHGPSComponent.rst", "api/gammapy.data.DataStore.rst", "api/gammapy.data.EventList.rst", "api/gammapy.data.EventListMetaData.rst", "api/gammapy.data.FixedPointingInfo.rst", "api/gammapy.data.GTI.rst", "api/gammapy.data.HDUIndexTable.rst", "api/gammapy.data.Observation.rst", "api/gammapy.data.ObservationFilter.rst", "api/gammapy.data.ObservationMetaData.rst", "api/gammapy.data.ObservationTable.rst", "api/gammapy.data.Observations.rst", "api/gammapy.data.ObservationsEventsSampler.rst", "api/gammapy.data.PointingInfo.rst", "api/gammapy.data.PointingMode.rst", "api/gammapy.data.get_irfs_features.rst", "api/gammapy.data.observatory_locations.rst", "api/gammapy.datasets.DATASET_REGISTRY.rst", "api/gammapy.datasets.Dataset.rst", "api/gammapy.datasets.Datasets.rst", "api/gammapy.datasets.FermipyDatasetsReader.rst", "api/gammapy.datasets.FluxPointsDataset.rst", "api/gammapy.datasets.MapDataset.rst", "api/gammapy.datasets.MapDatasetEventSampler.rst", "api/gammapy.datasets.MapDatasetMetaData.rst", "api/gammapy.datasets.MapDatasetOnOff.rst", "api/gammapy.datasets.OGIPDatasetReader.rst", "api/gammapy.datasets.OGIPDatasetWriter.rst", "api/gammapy.datasets.ObservationEventSampler.rst", "api/gammapy.datasets.SpectrumDataset.rst", "api/gammapy.datasets.SpectrumDatasetOnOff.rst", "api/gammapy.datasets.apply_edisp.rst", "api/gammapy.datasets.create_empty_map_dataset_from_irfs.rst", "api/gammapy.datasets.create_map_dataset_from_observation.rst", "api/gammapy.datasets.create_map_dataset_geoms.rst", "api/gammapy.datasets.split_dataset.rst", "api/gammapy.datasets.utils.apply_edisp.rst", "api/gammapy.datasets.utils.create_map_dataset_from_dl4.rst", "api/gammapy.datasets.utils.split_dataset.rst", "api/gammapy.estimators.ASmoothMapEstimator.rst", "api/gammapy.estimators.ESTIMATOR_REGISTRY.rst", "api/gammapy.estimators.EnergyDependentMorphologyEstimator.rst", "api/gammapy.estimators.Estimator.rst", "api/gammapy.estimators.ExcessMapEstimator.rst", "api/gammapy.estimators.FluxMaps.rst", "api/gammapy.estimators.FluxMetaData.rst", "api/gammapy.estimators.FluxPoints.rst", "api/gammapy.estimators.FluxPointsEstimator.rst", "api/gammapy.estimators.FluxProfileEstimator.rst", "api/gammapy.estimators.ImageProfile.rst", "api/gammapy.estimators.ImageProfileEstimator.rst", "api/gammapy.estimators.LightCurveEstimator.rst", "api/gammapy.estimators.ParameterEstimator.rst", "api/gammapy.estimators.SensitivityEstimator.rst", "api/gammapy.estimators.TSMapEstimator.rst", "api/gammapy.estimators.utils.combine_flux_maps.rst", "api/gammapy.estimators.utils.combine_significance_maps.rst", "api/gammapy.estimators.utils.compute_lightcurve_discrete_correlation.rst", "api/gammapy.estimators.utils.compute_lightcurve_doublingtime.rst", "api/gammapy.estimators.utils.compute_lightcurve_fpp.rst", "api/gammapy.estimators.utils.compute_lightcurve_fvar.rst", "api/gammapy.estimators.utils.estimate_exposure_reco_energy.rst", "api/gammapy.estimators.utils.find_peaks.rst", "api/gammapy.estimators.utils.find_peaks_in_flux_map.rst", "api/gammapy.estimators.utils.get_combined_flux_maps.rst", "api/gammapy.estimators.utils.get_combined_significance_maps.rst", "api/gammapy.estimators.utils.get_rebinned_axis.rst", "api/gammapy.estimators.utils.resample_energy_edges.rst", "api/gammapy.irf.Background2D.rst", "api/gammapy.irf.Background3D.rst", "api/gammapy.irf.BackgroundIRF.rst", "api/gammapy.irf.EDispKernel.rst", "api/gammapy.irf.EDispKernelMap.rst", "api/gammapy.irf.EDispMap.rst", "api/gammapy.irf.EffectiveAreaTable2D.rst", "api/gammapy.irf.EnergyDependentMultiGaussPSF.rst", "api/gammapy.irf.EnergyDispersion2D.rst", "api/gammapy.irf.FoVAlignment.rst", "api/gammapy.irf.IRF.rst", "api/gammapy.irf.IRFMap.rst", "api/gammapy.irf.IRF_REGISTRY.rst", "api/gammapy.irf.PSF3D.rst", "api/gammapy.irf.PSFKernel.rst", "api/gammapy.irf.PSFKing.rst", "api/gammapy.irf.PSFMap.rst", "api/gammapy.irf.ParametricPSF.rst", "api/gammapy.irf.RadMax2D.rst", "api/gammapy.irf.RecoPSFMap.rst", "api/gammapy.irf.load_irf_dict_from_file.rst", "api/gammapy.makers.AdaptiveRingBackgroundMaker.rst", "api/gammapy.makers.DatasetsMaker.rst", "api/gammapy.makers.FoVBackgroundMaker.rst", "api/gammapy.makers.MAKER_REGISTRY.rst", "api/gammapy.makers.Maker.rst", "api/gammapy.makers.MapDatasetMaker.rst", "api/gammapy.makers.PhaseBackgroundMaker.rst", "api/gammapy.makers.ReflectedRegionsBackgroundMaker.rst", "api/gammapy.makers.ReflectedRegionsFinder.rst", "api/gammapy.makers.RegionsFinder.rst", "api/gammapy.makers.RingBackgroundMaker.rst", "api/gammapy.makers.SafeMaskMaker.rst", "api/gammapy.makers.SpectrumDatasetMaker.rst", "api/gammapy.makers.WobbleRegionsFinder.rst", "api/gammapy.makers.utils.make_counts_rad_max.rst", "api/gammapy.makers.utils.make_edisp_kernel_map.rst", "api/gammapy.makers.utils.make_edisp_map.rst", "api/gammapy.makers.utils.make_effective_livetime_map.rst", "api/gammapy.makers.utils.make_map_background_irf.rst", "api/gammapy.makers.utils.make_map_exposure_true_energy.rst", "api/gammapy.makers.utils.make_observation_time_map.rst", "api/gammapy.makers.utils.make_psf_map.rst", "api/gammapy.makers.utils.make_theta_squared_table.rst", "api/gammapy.maps.Geom.rst", "api/gammapy.maps.HpxGeom.rst", "api/gammapy.maps.HpxMap.rst", "api/gammapy.maps.HpxNDMap.rst", "api/gammapy.maps.LabelMapAxis.rst", "api/gammapy.maps.Map.rst", "api/gammapy.maps.MapAxes.rst", "api/gammapy.maps.MapAxis.rst", "api/gammapy.maps.MapCoord.rst", "api/gammapy.maps.Maps.rst", "api/gammapy.maps.RegionGeom.rst", "api/gammapy.maps.RegionNDMap.rst", "api/gammapy.maps.TimeMapAxis.rst", "api/gammapy.maps.WcsGeom.rst", "api/gammapy.maps.WcsMap.rst", "api/gammapy.maps.WcsNDMap.rst", "api/gammapy.maps.containment_radius.rst", "api/gammapy.maps.containment_region.rst", "api/gammapy.modeling.Covariance.rst", "api/gammapy.modeling.CovarianceResult.rst", "api/gammapy.modeling.Fit.rst", "api/gammapy.modeling.FitResult.rst", "api/gammapy.modeling.OptimizeResult.rst", "api/gammapy.modeling.Parameter.rst", "api/gammapy.modeling.Parameters.rst", "api/gammapy.modeling.PriorParameter.rst", "api/gammapy.modeling.PriorParameters.rst", "api/gammapy.modeling.models.BrokenPowerLawSpectralModel.rst", "api/gammapy.modeling.models.CompoundSpectralModel.rst", "api/gammapy.modeling.models.ConstantFluxSpatialModel.rst", "api/gammapy.modeling.models.ConstantSpatialModel.rst", "api/gammapy.modeling.models.ConstantSpectralModel.rst", "api/gammapy.modeling.models.ConstantTemporalModel.rst", "api/gammapy.modeling.models.DatasetModels.rst", "api/gammapy.modeling.models.DiskSpatialModel.rst", "api/gammapy.modeling.models.EBLAbsorptionNormSpectralModel.rst", "api/gammapy.modeling.models.EBL_DATA_BUILTIN.rst", "api/gammapy.modeling.models.ExpCutoffPowerLaw3FGLSpectralModel.rst", "api/gammapy.modeling.models.ExpCutoffPowerLawNormSpectralModel.rst", "api/gammapy.modeling.models.ExpCutoffPowerLawSpectralModel.rst", "api/gammapy.modeling.models.ExpDecayTemporalModel.rst", "api/gammapy.modeling.models.FoVBackgroundModel.rst", "api/gammapy.modeling.models.GaussianPrior.rst", "api/gammapy.modeling.models.GaussianSpatialModel.rst", "api/gammapy.modeling.models.GaussianSpectralModel.rst", "api/gammapy.modeling.models.GaussianTemporalModel.rst", "api/gammapy.modeling.models.GeneralizedGaussianSpatialModel.rst", "api/gammapy.modeling.models.GeneralizedGaussianTemporalModel.rst", "api/gammapy.modeling.models.LightCurveTemplateTemporalModel.rst", "api/gammapy.modeling.models.LinearTemporalModel.rst", "api/gammapy.modeling.models.LogParabolaNormSpectralModel.rst", "api/gammapy.modeling.models.LogParabolaSpectralModel.rst", "api/gammapy.modeling.models.LogUniformPrior.rst", "api/gammapy.modeling.models.MODEL_REGISTRY.rst", "api/gammapy.modeling.models.MeyerCrabSpectralModel.rst", "api/gammapy.modeling.models.Model.rst", "api/gammapy.modeling.models.ModelBase.rst", "api/gammapy.modeling.models.Models.rst", "api/gammapy.modeling.models.NaimaSpectralModel.rst", "api/gammapy.modeling.models.PiecewiseNormSpatialModel.rst", "api/gammapy.modeling.models.PiecewiseNormSpectralModel.rst", "api/gammapy.modeling.models.PointSpatialModel.rst", "api/gammapy.modeling.models.PowerLaw2SpectralModel.rst", "api/gammapy.modeling.models.PowerLawNormSpectralModel.rst", "api/gammapy.modeling.models.PowerLawSpectralModel.rst", "api/gammapy.modeling.models.PowerLawTemporalModel.rst", "api/gammapy.modeling.models.Prior.rst", "api/gammapy.modeling.models.SPATIAL_MODEL_REGISTRY.rst", "api/gammapy.modeling.models.SPECTRAL_MODEL_REGISTRY.rst", "api/gammapy.modeling.models.ScaleSpectralModel.rst", "api/gammapy.modeling.models.Shell2SpatialModel.rst", "api/gammapy.modeling.models.ShellSpatialModel.rst", "api/gammapy.modeling.models.SineTemporalModel.rst", "api/gammapy.modeling.models.SkyModel.rst", "api/gammapy.modeling.models.SmoothBrokenPowerLawSpectralModel.rst", "api/gammapy.modeling.models.SpatialModel.rst", "api/gammapy.modeling.models.SpectralModel.rst", "api/gammapy.modeling.models.SuperExpCutoffPowerLaw3FGLSpectralModel.rst", "api/gammapy.modeling.models.SuperExpCutoffPowerLaw4FGLDR3SpectralModel.rst", "api/gammapy.modeling.models.SuperExpCutoffPowerLaw4FGLSpectralModel.rst", "api/gammapy.modeling.models.TEMPORAL_MODEL_REGISTRY.rst", "api/gammapy.modeling.models.TemplateNDSpatialModel.rst", "api/gammapy.modeling.models.TemplateNDSpectralModel.rst", "api/gammapy.modeling.models.TemplateNPredModel.rst", "api/gammapy.modeling.models.TemplatePhaseCurveTemporalModel.rst", "api/gammapy.modeling.models.TemplateSpatialModel.rst", "api/gammapy.modeling.models.TemplateSpectralModel.rst", "api/gammapy.modeling.models.TemporalModel.rst", "api/gammapy.modeling.models.UniformPrior.rst", "api/gammapy.modeling.models.create_cosmic_ray_spectral_model.rst", "api/gammapy.modeling.models.create_crab_spectral_model.rst", "api/gammapy.modeling.models.create_fermi_isotropic_diffuse_model.rst", "api/gammapy.modeling.models.integrate_spectrum.rst", "api/gammapy.modeling.models.read_hermes_cube.rst", "api/gammapy.modeling.models.scale_plot_flux.rst", "api/gammapy.modeling.models.utils.read_hermes_cube.rst", "api/gammapy.modeling.select_nested_models.rst", "api/gammapy.modeling.stat_profile_ul_scipy.rst", "api/gammapy.stats.CashCountsStatistic.rst", "api/gammapy.stats.TimmerKonig_lightcurve_simulator.rst", "api/gammapy.stats.WStatCountsStatistic.rst", "api/gammapy.stats.cash.rst", "api/gammapy.stats.cash_sum_cython.rst", "api/gammapy.stats.compute_chisq.rst", "api/gammapy.stats.compute_flux_doubling.rst", "api/gammapy.stats.compute_fpp.rst", "api/gammapy.stats.compute_fvar.rst", "api/gammapy.stats.cstat.rst", "api/gammapy.stats.discrete_correlation.rst", "api/gammapy.stats.f_cash_root_cython.rst", "api/gammapy.stats.get_wstat_gof_terms.rst", "api/gammapy.stats.get_wstat_mu_bkg.rst", "api/gammapy.stats.norm_bounds_cython.rst", "api/gammapy.stats.structure_function.rst", "api/gammapy.stats.wstat.rst", "api/gammapy.utils.cluster.hierarchical_clustering.rst", "api/gammapy.utils.cluster.standard_scaler.rst", "api/gammapy.utils.coordinates.D_SUN_TO_GALACTIC_CENTER.rst", "api/gammapy.utils.coordinates.cartesian.rst", "api/gammapy.utils.coordinates.fov_to_sky.rst", "api/gammapy.utils.coordinates.galactic.rst", "api/gammapy.utils.coordinates.motion_since_birth.rst", "api/gammapy.utils.coordinates.polar.rst", "api/gammapy.utils.coordinates.sky_to_fov.rst", "api/gammapy.utils.coordinates.velocity_glon_glat.rst", "api/gammapy.utils.fits.HDULocation.rst", "api/gammapy.utils.fits.LazyFitsData.rst", "api/gammapy.utils.fits.earth_location_from_dict.rst", "api/gammapy.utils.integrate.trapz_loglog.rst", "api/gammapy.utils.interpolation.ScaledRegularGridInterpolator.rst", "api/gammapy.utils.interpolation.interpolate_profile.rst", "api/gammapy.utils.interpolation.interpolation_scale.rst", "api/gammapy.utils.parallel.BACKEND_DEFAULT.rst", "api/gammapy.utils.parallel.METHOD_DEFAULT.rst", "api/gammapy.utils.parallel.METHOD_KWARGS_DEFAULT.rst", "api/gammapy.utils.parallel.N_JOBS_DEFAULT.rst", "api/gammapy.utils.parallel.POOL_KWARGS_DEFAULT.rst", "api/gammapy.utils.parallel.multiprocessing_manager.rst", "api/gammapy.utils.parallel.run_multiprocessing.rst", "api/gammapy.utils.random.InverseCDFSampler.rst", "api/gammapy.utils.random.draw.rst", "api/gammapy.utils.random.get_random_state.rst", "api/gammapy.utils.random.normalize.rst", "api/gammapy.utils.random.pdf.rst", "api/gammapy.utils.random.sample_powerlaw.rst", "api/gammapy.utils.random.sample_sphere.rst", "api/gammapy.utils.random.sample_sphere_distance.rst", "api/gammapy.utils.random.sample_times.rst", "api/gammapy.utils.regions.compound_region_to_regions.rst", "api/gammapy.utils.regions.make_concentric_annulus_sky_regions.rst", "api/gammapy.utils.regions.make_orthogonal_rectangle_sky_regions.rst", "api/gammapy.utils.regions.region_to_frame.rst", "api/gammapy.utils.regions.regions_to_compound_region.rst", "api/gammapy.utils.scripts.from_yaml.rst", "api/gammapy.utils.scripts.get_images_paths.rst", "api/gammapy.utils.scripts.make_path.rst", "api/gammapy.utils.scripts.read_yaml.rst", "api/gammapy.utils.scripts.recursive_merge_dicts.rst", "api/gammapy.utils.scripts.to_yaml.rst", "api/gammapy.utils.scripts.write_yaml.rst", "api/gammapy.utils.table.hstack_columns.rst", "api/gammapy.utils.table.table_row_to_dict.rst", "api/gammapy.utils.table.table_standardise_units_copy.rst", "api/gammapy.utils.table.table_standardise_units_inplace.rst", "api/gammapy.utils.testing.Checker.rst", "api/gammapy.utils.testing.assert_quantity_allclose.rst", "api/gammapy.utils.testing.assert_skycoord_allclose.rst", "api/gammapy.utils.testing.assert_time_allclose.rst", "api/gammapy.utils.testing.mpl_plot_check.rst", "api/gammapy.utils.testing.requires_data.rst", "api/gammapy.utils.testing.requires_dependency.rst", "api/gammapy.utils.time.absolute_time.rst", "api/gammapy.utils.time.time_ref_from_dict.rst", "api/gammapy.utils.time.time_ref_to_dict.rst", "api/gammapy.utils.time.time_relative_to_ref.rst", "api/gammapy.utils.units.standardise_unit.rst", "api/gammapy.utils.units.unit_from_fits_image_hdu.rst", "api/gammapy.visualization.MapPanelPlotter.rst", "api/gammapy.visualization.add_colorbar.rst", "api/gammapy.visualization.annotate_heatmap.rst", "api/gammapy.visualization.colormap_hess.rst", "api/gammapy.visualization.colormap_milagro.rst", "api/gammapy.visualization.plot_contour_line.rst", "api/gammapy.visualization.plot_distribution.rst", "api/gammapy.visualization.plot_heatmap.rst", "api/gammapy.visualization.plot_map_rgb.rst", "api/gammapy.visualization.plot_npred_signal.rst", "api/gammapy.visualization.plot_spectrum_datasets_off_regions.rst", "api/gammapy.visualization.plot_theta_squared_table.rst", "development/dependencies.rst", "development/dev_howto.rst", "development/doc_howto.rst", "development/index.rst", "development/intro.rst", "development/pigs/index.rst", "development/pigs/pig-001.rst", "development/pigs/pig-002.rst", "development/pigs/pig-003.rst", "development/pigs/pig-004.rst", "development/pigs/pig-005.rst", "development/pigs/pig-006.rst", "development/pigs/pig-007.rst", "development/pigs/pig-008.rst", "development/pigs/pig-009.rst", "development/pigs/pig-010.rst", "development/pigs/pig-011.rst", "development/pigs/pig-012.rst", "development/pigs/pig-013.rst", "development/pigs/pig-014.rst", "development/pigs/pig-016.rst", "development/pigs/pig-018.rst", "development/pigs/pig-019.rst", "development/pigs/pig-020.rst", "development/pigs/pig-021.rst", "development/pigs/pig-022.rst", "development/pigs/pig-023.rst", "development/pigs/pig-024.rst", "development/pigs/pig-025.rst", "development/pigs/pig-026.rst", "development/pigs/pig-027.rst", "development/release.rst", "development/setup.rst", "getting-started/environments.rst", "getting-started/index.rst", "getting-started/install.rst", "getting-started/quickstart.rst", "getting-started/troubleshooting.rst", "getting-started/usage.rst", "index.rst", "release-notes/index.rst", "release-notes/v0.1.rst", "release-notes/v0.10.rst", "release-notes/v0.11.rst", "release-notes/v0.12.rst", "release-notes/v0.13.rst", "release-notes/v0.14.rst", "release-notes/v0.15.rst", "release-notes/v0.16.rst", "release-notes/v0.17.rst", "release-notes/v0.18.rst", "release-notes/v0.18.1.rst", "release-notes/v0.18.2.rst", "release-notes/v0.19.rst", "release-notes/v0.2.rst", "release-notes/v0.20.rst", "release-notes/v0.20.1.rst", "release-notes/v0.3.rst", "release-notes/v0.4.rst", "release-notes/v0.5.rst", "release-notes/v0.6.rst", "release-notes/v0.7.rst", "release-notes/v0.8.rst", "release-notes/v0.9.rst", "release-notes/v1.0.rst", "release-notes/v1.0.1.rst", "release-notes/v1.0.2.rst", "release-notes/v1.1.rst", "release-notes/v1.2.rst", "release-notes/v1.3.rst", "release-notes/v2.0.rst", "sg_execution_times.rst", "tutorials/analysis-1d/cta_sensitivity.rst", "tutorials/analysis-1d/ebl.rst", "tutorials/analysis-1d/extended_source_spectral_analysis.rst", "tutorials/analysis-1d/sed_fitting.rst", "tutorials/analysis-1d/sg_execution_times.rst", "tutorials/analysis-1d/spectral_analysis.rst", "tutorials/analysis-1d/spectral_analysis_hli.rst", "tutorials/analysis-1d/spectral_analysis_rad_max.rst", "tutorials/analysis-1d/spectrum_simulation.rst", "tutorials/analysis-2d/detect.rst", "tutorials/analysis-2d/modeling_2D.rst", "tutorials/analysis-2d/ring_background.rst", "tutorials/analysis-2d/sg_execution_times.rst", "tutorials/analysis-3d/analysis_3d.rst", "tutorials/analysis-3d/analysis_mwl.rst", "tutorials/analysis-3d/cta_data_analysis.rst", "tutorials/analysis-3d/energy_dependent_estimation.rst", "tutorials/analysis-3d/event_sampling.rst", "tutorials/analysis-3d/event_sampling_nrg_depend_models.rst", "tutorials/analysis-3d/flux_profiles.rst", "tutorials/analysis-3d/sg_execution_times.rst", "tutorials/analysis-3d/simulate_3d.rst", "tutorials/analysis-time/light_curve.rst", "tutorials/analysis-time/light_curve_flare.rst", "tutorials/analysis-time/light_curve_simulation.rst", "tutorials/analysis-time/pulsar_analysis.rst", "tutorials/analysis-time/sg_execution_times.rst", "tutorials/analysis-time/time_resolved_spectroscopy.rst", "tutorials/analysis-time/variability_estimation.rst", "tutorials/api/astro_dark_matter.rst", "tutorials/api/catalog.rst", "tutorials/api/datasets.rst", "tutorials/api/estimators.rst", "tutorials/api/fitting.rst", "tutorials/api/irfs.rst", "tutorials/api/makers.rst", "tutorials/api/maps.rst", "tutorials/api/mask_maps.rst", "tutorials/api/model_management.rst", "tutorials/api/models.rst", "tutorials/api/observation_clustering.rst", "tutorials/api/priors.rst", "tutorials/api/sg_execution_times.rst", "tutorials/data/cta.rst", "tutorials/data/fermi_lat.rst", "tutorials/data/hawc.rst", "tutorials/data/hess.rst", "tutorials/data/sg_execution_times.rst", "tutorials/index.rst", "tutorials/scripts/sg_execution_times.rst", "tutorials/scripts/survey_map.rst", "tutorials/sg_execution_times.rst", "tutorials/starting/analysis_1.rst", "tutorials/starting/analysis_2.rst", "tutorials/starting/overview.rst", "tutorials/starting/sg_execution_times.rst", "user-guide/astro/darkmatter/index.rst", "user-guide/astro/index.rst", "user-guide/astro/population/index.rst", "user-guide/astro/source/index.rst", "user-guide/astro/source/pulsar.rst", "user-guide/astro/source/pwn.rst", "user-guide/astro/source/snr.rst", "user-guide/catalog.rst", "user-guide/datasets/index.rst", "user-guide/dl3.rst", "user-guide/estimators.rst", "user-guide/hli.rst", "user-guide/howto.rst", "user-guide/index.rst", "user-guide/irf/aeff.rst", "user-guide/irf/bkg.rst", "user-guide/irf/edisp.rst", "user-guide/irf/index.rst", "user-guide/irf/psf.rst", "user-guide/makers/fov.rst", "user-guide/makers/index.rst", "user-guide/makers/reflected.rst", "user-guide/makers/ring.rst", "user-guide/maps/hpxmap.rst", "user-guide/maps/index.rst", "user-guide/maps/regionmap.rst", "user-guide/model-gallery/index.rst", "user-guide/model-gallery/sg_execution_times.rst", "user-guide/model-gallery/spatial/plot_constant.rst", "user-guide/model-gallery/spatial/plot_disk.rst", "user-guide/model-gallery/spatial/plot_gauss.rst", "user-guide/model-gallery/spatial/plot_gen_gauss.rst", "user-guide/model-gallery/spatial/plot_piecewise_norm_spatial.rst", "user-guide/model-gallery/spatial/plot_point.rst", "user-guide/model-gallery/spatial/plot_shell.rst", "user-guide/model-gallery/spatial/plot_shell2.rst", "user-guide/model-gallery/spatial/plot_template.rst", "user-guide/model-gallery/spatial/sg_execution_times.rst", "user-guide/model-gallery/spectral/plot_absorbed.rst", "user-guide/model-gallery/spectral/plot_broken_powerlaw.rst", "user-guide/model-gallery/spectral/plot_compound.rst", "user-guide/model-gallery/spectral/plot_constant_spectral.rst", "user-guide/model-gallery/spectral/plot_exp_cutoff_powerlaw.rst", "user-guide/model-gallery/spectral/plot_exp_cutoff_powerlaw_3fgl.rst", "user-guide/model-gallery/spectral/plot_exp_cutoff_powerlaw_norm_spectral.rst", "user-guide/model-gallery/spectral/plot_gauss_spectral.rst", "user-guide/model-gallery/spectral/plot_logparabola.rst", "user-guide/model-gallery/spectral/plot_logparabola_norm_spectral.rst", "user-guide/model-gallery/spectral/plot_naima.rst", "user-guide/model-gallery/spectral/plot_piecewise_norm_spectral.rst", "user-guide/model-gallery/spectral/plot_powerlaw.rst", "user-guide/model-gallery/spectral/plot_powerlaw2.rst", "user-guide/model-gallery/spectral/plot_powerlaw_norm_spectral.rst", "user-guide/model-gallery/spectral/plot_smooth_broken_powerlaw.rst", "user-guide/model-gallery/spectral/plot_super_exp_cutoff_powerlaw_3fgl.rst", "user-guide/model-gallery/spectral/plot_super_exp_cutoff_powerlaw_4fgl.rst", "user-guide/model-gallery/spectral/plot_super_exp_cutoff_powerlaw_4fgl_dr1.rst", "user-guide/model-gallery/spectral/plot_template_spectral.rst", "user-guide/model-gallery/spectral/sg_execution_times.rst", "user-guide/model-gallery/temporal/plot_constant_temporal.rst", "user-guide/model-gallery/temporal/plot_expdecay_temporal.rst", "user-guide/model-gallery/temporal/plot_gaussian_temporal.rst", "user-guide/model-gallery/temporal/plot_generalized_gaussian_temporal.rst", "user-guide/model-gallery/temporal/plot_linear_temporal.rst", "user-guide/model-gallery/temporal/plot_powerlaw_temporal.rst", "user-guide/model-gallery/temporal/plot_sine_temporal.rst", "user-guide/model-gallery/temporal/plot_template_phase_temporal.rst", "user-guide/model-gallery/temporal/plot_template_temporal.rst", "user-guide/model-gallery/temporal/sg_execution_times.rst", "user-guide/modeling.rst", "user-guide/package.rst", "user-guide/references.rst", "user-guide/scripts/index.rst", "user-guide/stats/fit_statistics.rst", "user-guide/stats/index.rst", "user-guide/stats/wstat_derivation.rst", "user-guide/utils.rst", "user-guide/visualization/index.rst"], "indexentries": {"--dependencies": [[11, "cmdoption-gammapy-info-dependencies", false]], "--envvar": [[11, "cmdoption-gammapy-info-envvar", false]], "--filename": [[11, "cmdoption-gammapy-analysis-config-filename", false], [11, "cmdoption-gammapy-analysis-run-filename", false], [11, "cmdoption-gammapy-workflow-config-filename", false], [11, "cmdoption-gammapy-workflow-run-filename", false]], "--ignore-warnings": [[11, "cmdoption-gammapy-ignore-warnings", false]], "--log-level": [[11, "cmdoption-gammapy-log-level", false]], "--no-dependencies": [[11, "cmdoption-gammapy-info-dependencies", false]], "--no-envvar": [[11, "cmdoption-gammapy-info-envvar", false]], "--no-system": [[11, "cmdoption-gammapy-info-system", false]], "--no-version": [[11, "cmdoption-gammapy-info-version", false]], "--out": [[11, "cmdoption-gammapy-analysis-run-out", false], [11, "cmdoption-gammapy-download-datasets-out", false], [11, "cmdoption-gammapy-download-notebooks-out", false]], "--overwrite": [[11, "cmdoption-gammapy-analysis-config-overwrite", false], [11, "cmdoption-gammapy-analysis-run-overwrite", false], [11, "cmdoption-gammapy-workflow-config-overwrite", false]], "--release": [[11, "cmdoption-gammapy-download-datasets-release", false], [11, "cmdoption-gammapy-download-notebooks-release", false]], "--system": [[11, "cmdoption-gammapy-info-system", false]], "--version": [[11, "cmdoption-gammapy-info-version", false], [11, "cmdoption-gammapy-version", false]], "1d analysis": [[581, "term-1D-Analysis", true]], "3d analysis": [[581, "term-3D-Analysis", true]], "__call__() (gammapy.astro.darkmatter.burkertprofile method)": [[17, "gammapy.astro.darkmatter.BurkertProfile.__call__", false]], "__call__() (gammapy.astro.darkmatter.darkmatterannihilationspectralmodel method)": [[19, "gammapy.astro.darkmatter.DarkMatterAnnihilationSpectralModel.__call__", false]], "__call__() (gammapy.astro.darkmatter.darkmatterdecayspectralmodel method)": [[20, "gammapy.astro.darkmatter.DarkMatterDecaySpectralModel.__call__", false]], "__call__() (gammapy.astro.darkmatter.dmprofile method)": [[18, "gammapy.astro.darkmatter.DMProfile.__call__", false]], "__call__() (gammapy.astro.darkmatter.einastoprofile method)": [[21, "gammapy.astro.darkmatter.EinastoProfile.__call__", false]], "__call__() (gammapy.astro.darkmatter.isothermalprofile method)": [[22, "gammapy.astro.darkmatter.IsothermalProfile.__call__", false]], "__call__() (gammapy.astro.darkmatter.mooreprofile method)": [[24, "gammapy.astro.darkmatter.MooreProfile.__call__", false]], "__call__() (gammapy.astro.darkmatter.nfwprofile method)": [[25, "gammapy.astro.darkmatter.NFWProfile.__call__", false]], "__call__() (gammapy.astro.darkmatter.primaryflux method)": [[26, "gammapy.astro.darkmatter.PrimaryFlux.__call__", false]], "__call__() (gammapy.astro.darkmatter.zhaoprofile method)": [[27, "gammapy.astro.darkmatter.ZhaoProfile.__call__", false]], "__call__() (gammapy.astro.population.casebattacharya1998 method)": [[28, "gammapy.astro.population.CaseBattacharya1998.__call__", false]], "__call__() (gammapy.astro.population.exponential method)": [[29, "gammapy.astro.population.Exponential.__call__", false]], "__call__() (gammapy.astro.population.faucherkaspi2006 method)": [[30, "gammapy.astro.population.FaucherKaspi2006.__call__", false]], "__call__() (gammapy.astro.population.faucherkaspi2006velocitybimodal method)": [[31, "gammapy.astro.population.FaucherKaspi2006VelocityBimodal.__call__", false]], "__call__() (gammapy.astro.population.faucherkaspi2006velocitymaxwellian method)": [[32, "gammapy.astro.population.FaucherKaspi2006VelocityMaxwellian.__call__", false]], "__call__() (gammapy.astro.population.faucherspiral method)": [[33, "gammapy.astro.population.FaucherSpiral.__call__", false]], "__call__() (gammapy.astro.population.lorimer2006 method)": [[35, "gammapy.astro.population.Lorimer2006.__call__", false]], "__call__() (gammapy.astro.population.paczynski1990 method)": [[36, "gammapy.astro.population.Paczynski1990.__call__", false]], "__call__() (gammapy.astro.population.paczynski1990velocity method)": [[37, "gammapy.astro.population.Paczynski1990Velocity.__call__", false]], "__call__() (gammapy.astro.population.yusifovkucuk2004 method)": [[39, "gammapy.astro.population.YusifovKucuk2004.__call__", false]], "__call__() (gammapy.astro.population.yusifovkucuk2004b method)": [[40, "gammapy.astro.population.YusifovKucuk2004B.__call__", false]], "__call__() (gammapy.modeling.models.brokenpowerlawspectralmodel method)": [[220, "gammapy.modeling.models.BrokenPowerLawSpectralModel.__call__", false]], "__call__() (gammapy.modeling.models.compoundspectralmodel method)": [[221, "gammapy.modeling.models.CompoundSpectralModel.__call__", false]], "__call__() (gammapy.modeling.models.constantfluxspatialmodel method)": [[222, "gammapy.modeling.models.ConstantFluxSpatialModel.__call__", false]], "__call__() (gammapy.modeling.models.constantspatialmodel method)": [[223, "gammapy.modeling.models.ConstantSpatialModel.__call__", false]], "__call__() (gammapy.modeling.models.constantspectralmodel method)": [[224, "gammapy.modeling.models.ConstantSpectralModel.__call__", false]], "__call__() (gammapy.modeling.models.constanttemporalmodel method)": [[225, "gammapy.modeling.models.ConstantTemporalModel.__call__", false]], "__call__() (gammapy.modeling.models.diskspatialmodel method)": [[227, "gammapy.modeling.models.DiskSpatialModel.__call__", false]], "__call__() (gammapy.modeling.models.eblabsorptionnormspectralmodel method)": [[228, "gammapy.modeling.models.EBLAbsorptionNormSpectralModel.__call__", false]], "__call__() (gammapy.modeling.models.expcutoffpowerlaw3fglspectralmodel method)": [[230, "gammapy.modeling.models.ExpCutoffPowerLaw3FGLSpectralModel.__call__", false]], "__call__() (gammapy.modeling.models.expcutoffpowerlawnormspectralmodel method)": [[231, "gammapy.modeling.models.ExpCutoffPowerLawNormSpectralModel.__call__", false]], "__call__() (gammapy.modeling.models.expcutoffpowerlawspectralmodel method)": [[232, "gammapy.modeling.models.ExpCutoffPowerLawSpectralModel.__call__", false]], "__call__() (gammapy.modeling.models.expdecaytemporalmodel method)": [[233, "gammapy.modeling.models.ExpDecayTemporalModel.__call__", false]], "__call__() (gammapy.modeling.models.gaussianprior method)": [[235, "gammapy.modeling.models.GaussianPrior.__call__", false]], "__call__() (gammapy.modeling.models.gaussianspatialmodel method)": [[236, "gammapy.modeling.models.GaussianSpatialModel.__call__", false]], "__call__() (gammapy.modeling.models.gaussianspectralmodel method)": [[237, "gammapy.modeling.models.GaussianSpectralModel.__call__", false]], "__call__() (gammapy.modeling.models.gaussiantemporalmodel method)": [[238, "gammapy.modeling.models.GaussianTemporalModel.__call__", false]], "__call__() (gammapy.modeling.models.generalizedgaussianspatialmodel method)": [[239, "gammapy.modeling.models.GeneralizedGaussianSpatialModel.__call__", false]], "__call__() (gammapy.modeling.models.generalizedgaussiantemporalmodel method)": [[240, "gammapy.modeling.models.GeneralizedGaussianTemporalModel.__call__", false]], "__call__() (gammapy.modeling.models.lightcurvetemplatetemporalmodel method)": [[241, "gammapy.modeling.models.LightCurveTemplateTemporalModel.__call__", false]], "__call__() (gammapy.modeling.models.lineartemporalmodel method)": [[242, "gammapy.modeling.models.LinearTemporalModel.__call__", false]], "__call__() (gammapy.modeling.models.logparabolanormspectralmodel method)": [[243, "gammapy.modeling.models.LogParabolaNormSpectralModel.__call__", false]], "__call__() (gammapy.modeling.models.logparabolaspectralmodel method)": [[244, "gammapy.modeling.models.LogParabolaSpectralModel.__call__", false]], "__call__() (gammapy.modeling.models.loguniformprior method)": [[245, "gammapy.modeling.models.LogUniformPrior.__call__", false]], "__call__() (gammapy.modeling.models.meyercrabspectralmodel method)": [[247, "gammapy.modeling.models.MeyerCrabSpectralModel.__call__", false]], "__call__() (gammapy.modeling.models.naimaspectralmodel method)": [[251, "gammapy.modeling.models.NaimaSpectralModel.__call__", false]], "__call__() (gammapy.modeling.models.piecewisenormspatialmodel method)": [[252, "gammapy.modeling.models.PiecewiseNormSpatialModel.__call__", false]], "__call__() (gammapy.modeling.models.piecewisenormspectralmodel method)": [[253, "gammapy.modeling.models.PiecewiseNormSpectralModel.__call__", false]], "__call__() (gammapy.modeling.models.pointspatialmodel method)": [[254, "gammapy.modeling.models.PointSpatialModel.__call__", false]], "__call__() (gammapy.modeling.models.powerlaw2spectralmodel method)": [[255, "gammapy.modeling.models.PowerLaw2SpectralModel.__call__", false]], "__call__() (gammapy.modeling.models.powerlawnormspectralmodel method)": [[256, "gammapy.modeling.models.PowerLawNormSpectralModel.__call__", false]], "__call__() (gammapy.modeling.models.powerlawspectralmodel method)": [[257, "gammapy.modeling.models.PowerLawSpectralModel.__call__", false]], "__call__() (gammapy.modeling.models.powerlawtemporalmodel method)": [[258, "gammapy.modeling.models.PowerLawTemporalModel.__call__", false]], "__call__() (gammapy.modeling.models.prior method)": [[259, "gammapy.modeling.models.Prior.__call__", false]], "__call__() (gammapy.modeling.models.scalespectralmodel method)": [[262, "gammapy.modeling.models.ScaleSpectralModel.__call__", false]], "__call__() (gammapy.modeling.models.shell2spatialmodel method)": [[263, "gammapy.modeling.models.Shell2SpatialModel.__call__", false]], "__call__() (gammapy.modeling.models.shellspatialmodel method)": [[264, "gammapy.modeling.models.ShellSpatialModel.__call__", false]], "__call__() (gammapy.modeling.models.sinetemporalmodel method)": [[265, "gammapy.modeling.models.SineTemporalModel.__call__", false]], "__call__() (gammapy.modeling.models.skymodel method)": [[266, "gammapy.modeling.models.SkyModel.__call__", false]], "__call__() (gammapy.modeling.models.smoothbrokenpowerlawspectralmodel method)": [[267, "gammapy.modeling.models.SmoothBrokenPowerLawSpectralModel.__call__", false]], "__call__() (gammapy.modeling.models.spatialmodel method)": [[268, "gammapy.modeling.models.SpatialModel.__call__", false]], "__call__() (gammapy.modeling.models.spectralmodel method)": [[269, "gammapy.modeling.models.SpectralModel.__call__", false]], "__call__() (gammapy.modeling.models.superexpcutoffpowerlaw3fglspectralmodel method)": [[270, "gammapy.modeling.models.SuperExpCutoffPowerLaw3FGLSpectralModel.__call__", false]], "__call__() (gammapy.modeling.models.superexpcutoffpowerlaw4fgldr3spectralmodel method)": [[271, "gammapy.modeling.models.SuperExpCutoffPowerLaw4FGLDR3SpectralModel.__call__", false]], "__call__() (gammapy.modeling.models.superexpcutoffpowerlaw4fglspectralmodel method)": [[272, "gammapy.modeling.models.SuperExpCutoffPowerLaw4FGLSpectralModel.__call__", false]], "__call__() (gammapy.modeling.models.templatendspatialmodel method)": [[274, "gammapy.modeling.models.TemplateNDSpatialModel.__call__", false]], "__call__() (gammapy.modeling.models.templatendspectralmodel method)": [[275, "gammapy.modeling.models.TemplateNDSpectralModel.__call__", false]], "__call__() (gammapy.modeling.models.templatephasecurvetemporalmodel method)": [[277, "gammapy.modeling.models.TemplatePhaseCurveTemporalModel.__call__", false]], "__call__() (gammapy.modeling.models.templatespatialmodel method)": [[278, "gammapy.modeling.models.TemplateSpatialModel.__call__", false]], "__call__() (gammapy.modeling.models.templatespectralmodel method)": [[279, "gammapy.modeling.models.TemplateSpectralModel.__call__", false]], "__call__() (gammapy.modeling.models.temporalmodel method)": [[280, "gammapy.modeling.models.TemporalModel.__call__", false]], "__call__() (gammapy.modeling.models.uniformprior method)": [[281, "gammapy.modeling.models.UniformPrior.__call__", false]], "__call__() (gammapy.utils.interpolation.scaledregulargridinterpolator method)": [[322, "gammapy.utils.interpolation.ScaledRegularGridInterpolator.__call__", false]], "a (gammapy.astro.population.yusifovkucuk2004 attribute)": [[39, "gammapy.astro.population.YusifovKucuk2004.a", false]], "a (gammapy.astro.population.yusifovkucuk2004b attribute)": [[40, "gammapy.astro.population.YusifovKucuk2004B.a", false]], "absolute_time() (in module gammapy.utils.time)": [[364, "gammapy.utils.time.absolute_time", false]], "acceptance_off (gammapy.estimators.fluxmaps attribute)": [[125, "gammapy.estimators.FluxMaps.acceptance_off", false]], "acceptance_off (gammapy.estimators.fluxpoints attribute)": [[127, "gammapy.estimators.FluxPoints.acceptance_off", false]], "acceptance_on (gammapy.estimators.fluxmaps attribute)": [[125, "gammapy.estimators.FluxMaps.acceptance_on", false]], "acceptance_on (gammapy.estimators.fluxpoints attribute)": [[127, "gammapy.estimators.FluxPoints.acceptance_on", false]], "adaptiveringbackgroundmaker (class in gammapy.makers)": [[170, "gammapy.makers.AdaptiveRingBackgroundMaker", false]], "add_colorbar() (in module gammapy.visualization)": [[371, "gammapy.visualization.add_colorbar", false]], "add_column() (gammapy.data.hduindextable method)": [[87, "gammapy.data.HDUIndexTable.add_column", false]], "add_column() (gammapy.data.observationtable method)": [[91, "gammapy.data.ObservationTable.add_column", false]], "add_columns() (gammapy.data.hduindextable method)": [[87, "gammapy.data.HDUIndexTable.add_columns", false]], "add_columns() (gammapy.data.observationtable method)": [[91, "gammapy.data.ObservationTable.add_columns", false]], "add_index() (gammapy.data.hduindextable method)": [[87, "gammapy.data.HDUIndexTable.add_index", false]], "add_index() (gammapy.data.observationtable method)": [[91, "gammapy.data.ObservationTable.add_index", false]], "add_observed_parameters() (in module gammapy.astro.population)": [[41, "gammapy.astro.population.add_observed_parameters", false]], "add_pulsar_parameters() (in module gammapy.astro.population)": [[42, "gammapy.astro.population.add_pulsar_parameters", false]], "add_pwn_parameters() (in module gammapy.astro.population)": [[43, "gammapy.astro.population.add_pwn_parameters", false]], "add_row() (gammapy.data.hduindextable method)": [[87, "gammapy.data.HDUIndexTable.add_row", false]], "add_row() (gammapy.data.observationtable method)": [[91, "gammapy.data.ObservationTable.add_row", false]], "add_snr_parameters() (in module gammapy.astro.population)": [[44, "gammapy.astro.population.add_snr_parameters", false]], "aeff": [[581, "term-Aeff", true]], "aeff (gammapy.data.observation attribute)": [[88, "gammapy.data.Observation.aeff", false]], "all_quantities() (gammapy.estimators.fluxmaps static method)": [[125, "gammapy.estimators.FluxMaps.all_quantities", false]], "all_quantities() (gammapy.estimators.fluxpoints static method)": [[127, "gammapy.estimators.FluxPoints.all_quantities", false]], "allowed_channels (gammapy.astro.darkmatter.primaryflux attribute)": [[26, "gammapy.astro.darkmatter.PrimaryFlux.allowed_channels", false]], "alpha (gammapy.astro.population.casebattacharya1998 attribute)": [[28, "gammapy.astro.population.CaseBattacharya1998.alpha", false]], "alpha (gammapy.datasets.mapdatasetonoff attribute)": [[106, "gammapy.datasets.MapDatasetOnOff.alpha", false]], "alpha (gammapy.datasets.spectrumdatasetonoff attribute)": [[111, "gammapy.datasets.SpectrumDatasetOnOff.alpha", false]], "alpha (gammapy.estimators.fluxmaps attribute)": [[125, "gammapy.estimators.FluxMaps.alpha", false]], "alpha (gammapy.estimators.fluxpoints attribute)": [[127, "gammapy.estimators.FluxPoints.alpha", false]], "alpha (gammapy.modeling.models.expcutoffpowerlawnormspectralmodel attribute)": [[231, "gammapy.modeling.models.ExpCutoffPowerLawNormSpectralModel.alpha", false]], "alpha (gammapy.modeling.models.expcutoffpowerlawspectralmodel attribute)": [[232, "gammapy.modeling.models.ExpCutoffPowerLawSpectralModel.alpha", false]], "alpha (gammapy.modeling.models.lineartemporalmodel attribute)": [[242, "gammapy.modeling.models.LinearTemporalModel.alpha", false]], "alpha (gammapy.modeling.models.logparabolanormspectralmodel attribute)": [[243, "gammapy.modeling.models.LogParabolaNormSpectralModel.alpha", false]], "alpha (gammapy.modeling.models.logparabolaspectralmodel attribute)": [[244, "gammapy.modeling.models.LogParabolaSpectralModel.alpha", false]], "alpha (gammapy.modeling.models.powerlawtemporalmodel attribute)": [[258, "gammapy.modeling.models.PowerLawTemporalModel.alpha", false]], "alpha_norm (gammapy.modeling.models.eblabsorptionnormspectralmodel attribute)": [[228, "gammapy.modeling.models.EBLAbsorptionNormSpectralModel.alpha_norm", false]], "altaz (gammapy.data.eventlist attribute)": [[83, "gammapy.data.EventList.altaz", false]], "altaz (gammapy.data.pointinginfo attribute)": [[94, "gammapy.data.PointingInfo.altaz", false]], "altaz (gammapy.irf.fovalignment attribute)": [[158, "gammapy.irf.FoVAlignment.ALTAZ", false]], "altaz_frame (gammapy.data.eventlist attribute)": [[83, "gammapy.data.EventList.altaz_frame", false]], "altaz_frame (gammapy.data.pointinginfo attribute)": [[94, "gammapy.data.PointingInfo.altaz_frame", false]], "altaz_from_table (gammapy.data.eventlist attribute)": [[83, "gammapy.data.EventList.altaz_from_table", false]], "altaz_from_table (gammapy.data.pointinginfo attribute)": [[94, "gammapy.data.PointingInfo.altaz_from_table", false]], "altaz_interpolate() (gammapy.data.pointinginfo method)": [[94, "gammapy.data.PointingInfo.altaz_interpolate", false]], "amp (gammapy.modeling.models.sinetemporalmodel attribute)": [[265, "gammapy.modeling.models.SineTemporalModel.amp", false]], "amplitude (gammapy.astro.population.casebattacharya1998 attribute)": [[28, "gammapy.astro.population.CaseBattacharya1998.amplitude", false]], "amplitude (gammapy.astro.population.exponential attribute)": [[29, "gammapy.astro.population.Exponential.amplitude", false]], "amplitude (gammapy.astro.population.faucherkaspi2006 attribute)": [[30, "gammapy.astro.population.FaucherKaspi2006.amplitude", false]], "amplitude (gammapy.astro.population.faucherkaspi2006velocitybimodal attribute)": [[31, "gammapy.astro.population.FaucherKaspi2006VelocityBimodal.amplitude", false]], "amplitude (gammapy.astro.population.faucherkaspi2006velocitymaxwellian attribute)": [[32, "gammapy.astro.population.FaucherKaspi2006VelocityMaxwellian.amplitude", false]], "amplitude (gammapy.astro.population.lorimer2006 attribute)": [[35, "gammapy.astro.population.Lorimer2006.amplitude", false]], "amplitude (gammapy.astro.population.paczynski1990 attribute)": [[36, "gammapy.astro.population.Paczynski1990.amplitude", false]], "amplitude (gammapy.astro.population.paczynski1990velocity attribute)": [[37, "gammapy.astro.population.Paczynski1990Velocity.amplitude", false]], "amplitude (gammapy.astro.population.yusifovkucuk2004 attribute)": [[39, "gammapy.astro.population.YusifovKucuk2004.amplitude", false]], "amplitude (gammapy.astro.population.yusifovkucuk2004b attribute)": [[40, "gammapy.astro.population.YusifovKucuk2004B.amplitude", false]], "amplitude (gammapy.modeling.models.brokenpowerlawspectralmodel attribute)": [[220, "gammapy.modeling.models.BrokenPowerLawSpectralModel.amplitude", false]], "amplitude (gammapy.modeling.models.expcutoffpowerlaw3fglspectralmodel attribute)": [[230, "gammapy.modeling.models.ExpCutoffPowerLaw3FGLSpectralModel.amplitude", false]], "amplitude (gammapy.modeling.models.expcutoffpowerlawspectralmodel attribute)": [[232, "gammapy.modeling.models.ExpCutoffPowerLawSpectralModel.amplitude", false]], "amplitude (gammapy.modeling.models.gaussianspectralmodel attribute)": [[237, "gammapy.modeling.models.GaussianSpectralModel.amplitude", false]], "amplitude (gammapy.modeling.models.logparabolaspectralmodel attribute)": [[244, "gammapy.modeling.models.LogParabolaSpectralModel.amplitude", false]], "amplitude (gammapy.modeling.models.powerlaw2spectralmodel attribute)": [[255, "gammapy.modeling.models.PowerLaw2SpectralModel.amplitude", false]], "amplitude (gammapy.modeling.models.powerlawspectralmodel attribute)": [[257, "gammapy.modeling.models.PowerLawSpectralModel.amplitude", false]], "amplitude (gammapy.modeling.models.smoothbrokenpowerlawspectralmodel attribute)": [[267, "gammapy.modeling.models.SmoothBrokenPowerLawSpectralModel.amplitude", false]], "amplitude (gammapy.modeling.models.superexpcutoffpowerlaw3fglspectralmodel attribute)": [[270, "gammapy.modeling.models.SuperExpCutoffPowerLaw3FGLSpectralModel.amplitude", false]], "amplitude (gammapy.modeling.models.superexpcutoffpowerlaw4fgldr3spectralmodel attribute)": [[271, "gammapy.modeling.models.SuperExpCutoffPowerLaw4FGLDR3SpectralModel.amplitude", false]], "amplitude (gammapy.modeling.models.superexpcutoffpowerlaw4fglspectralmodel attribute)": [[272, "gammapy.modeling.models.SuperExpCutoffPowerLaw4FGLSpectralModel.amplitude", false]], "analysis (class in gammapy.analysis)": [[15, "gammapy.analysis.Analysis", false]], "analysisconfig (class in gammapy.analysis)": [[16, "gammapy.analysis.AnalysisConfig", false]], "annotate_heatmap() (in module gammapy.visualization)": [[372, "gammapy.visualization.annotate_heatmap", false]], "append() (gammapy.data.observations method)": [[92, "gammapy.data.Observations.append", false]], "append() (gammapy.datasets.datasets method)": [[100, "gammapy.datasets.Datasets.append", false]], "append() (gammapy.modeling.models.models method)": [[250, "gammapy.modeling.models.Models.append", false]], "apply_edisp() (in module gammapy.datasets)": [[112, "gammapy.datasets.apply_edisp", false]], "apply_edisp() (in module gammapy.datasets.utils)": [[117, "gammapy.datasets.utils.apply_edisp", false]], "apply_mask() (gammapy.maps.mapcoord method)": [[201, "gammapy.maps.MapCoord.apply_mask", false]], "argsort() (gammapy.data.hduindextable method)": [[87, "gammapy.data.HDUIndexTable.argsort", false]], "argsort() (gammapy.data.observationtable method)": [[91, "gammapy.data.ObservationTable.argsort", false]], "as_array() (gammapy.data.hduindextable method)": [[87, "gammapy.data.HDUIndexTable.as_array", false]], "as_array() (gammapy.data.observationtable method)": [[91, "gammapy.data.ObservationTable.as_array", false]], "as_energy_true (gammapy.maps.geom attribute)": [[193, "gammapy.maps.Geom.as_energy_true", false]], "as_energy_true (gammapy.maps.hpxgeom attribute)": [[194, "gammapy.maps.HpxGeom.as_energy_true", false]], "as_energy_true (gammapy.maps.regiongeom attribute)": [[203, "gammapy.maps.RegionGeom.as_energy_true", false]], "as_energy_true (gammapy.maps.wcsgeom attribute)": [[206, "gammapy.maps.WcsGeom.as_energy_true", false]], "as_plot_center (gammapy.maps.labelmapaxis attribute)": [[197, "gammapy.maps.LabelMapAxis.as_plot_center", false]], "as_plot_center (gammapy.maps.mapaxis attribute)": [[200, "gammapy.maps.MapAxis.as_plot_center", false]], "as_plot_center (gammapy.maps.timemapaxis attribute)": [[205, "gammapy.maps.TimeMapAxis.as_plot_center", false]], "as_plot_edges (gammapy.maps.labelmapaxis attribute)": [[197, "gammapy.maps.LabelMapAxis.as_plot_edges", false]], "as_plot_edges (gammapy.maps.mapaxis attribute)": [[200, "gammapy.maps.MapAxis.as_plot_edges", false]], "as_plot_edges (gammapy.maps.timemapaxis attribute)": [[205, "gammapy.maps.TimeMapAxis.as_plot_edges", false]], "as_plot_labels (gammapy.maps.labelmapaxis attribute)": [[197, "gammapy.maps.LabelMapAxis.as_plot_labels", false]], "as_plot_labels (gammapy.maps.mapaxis attribute)": [[200, "gammapy.maps.MapAxis.as_plot_labels", false]], "as_plot_labels (gammapy.maps.timemapaxis attribute)": [[205, "gammapy.maps.TimeMapAxis.as_plot_labels", false]], "as_plot_scale (gammapy.maps.mapaxis attribute)": [[200, "gammapy.maps.MapAxis.as_plot_scale", false]], "as_plot_xerr (gammapy.maps.labelmapaxis attribute)": [[197, "gammapy.maps.LabelMapAxis.as_plot_xerr", false]], "as_plot_xerr (gammapy.maps.mapaxis attribute)": [[200, "gammapy.maps.MapAxis.as_plot_xerr", false]], "as_plot_xerr (gammapy.maps.timemapaxis attribute)": [[205, "gammapy.maps.TimeMapAxis.as_plot_xerr", false]], "asmoothmapestimator (class in gammapy.estimators)": [[120, "gammapy.estimators.ASmoothMapEstimator", false]], "assert_name() (gammapy.maps.labelmapaxis method)": [[197, "gammapy.maps.LabelMapAxis.assert_name", false]], "assert_name() (gammapy.maps.mapaxis method)": [[200, "gammapy.maps.MapAxis.assert_name", false]], "assert_name() (gammapy.maps.timemapaxis method)": [[205, "gammapy.maps.TimeMapAxis.assert_name", false]], "assert_names() (gammapy.maps.mapaxes method)": [[199, "gammapy.maps.MapAxes.assert_names", false]], "assert_quantity_allclose() (in module gammapy.utils.testing)": [[358, "gammapy.utils.testing.assert_quantity_allclose", false]], "assert_skycoord_allclose() (in module gammapy.utils.testing)": [[359, "gammapy.utils.testing.assert_skycoord_allclose", false]], "assert_time_allclose() (in module gammapy.utils.testing)": [[360, "gammapy.utils.testing.assert_time_allclose", false]], "asso (gammapy.catalog.sourcecatalogobject2fhl attribute)": [[71, "gammapy.catalog.SourceCatalogObject2FHL.asso", false]], "asso (gammapy.catalog.sourcecatalogobject3fgl attribute)": [[74, "gammapy.catalog.SourceCatalogObject3FGL.asso", false]], "asso (gammapy.catalog.sourcecatalogobject3fhl attribute)": [[75, "gammapy.catalog.SourceCatalogObject3FHL.asso", false]], "asso (gammapy.catalog.sourcecatalogobject3pc attribute)": [[77, "gammapy.catalog.SourceCatalogObject3PC.asso", false]], "asso (gammapy.catalog.sourcecatalogobject4fgl attribute)": [[78, "gammapy.catalog.SourceCatalogObject4FGL.asso", false]], "autoscale() (gammapy.modeling.parameter method)": [[216, "gammapy.modeling.Parameter.autoscale", false]], "autoscale() (gammapy.modeling.parameters method)": [[217, "gammapy.modeling.Parameters.autoscale", false]], "autoscale() (gammapy.modeling.priorparameter method)": [[218, "gammapy.modeling.PriorParameter.autoscale", false]], "autoscale() (gammapy.modeling.priorparameters method)": [[219, "gammapy.modeling.PriorParameters.autoscale", false]], "available_hdus (gammapy.data.observation attribute)": [[88, "gammapy.data.Observation.available_hdus", false]], "available_irfs (gammapy.data.observation attribute)": [[88, "gammapy.data.Observation.available_irfs", false]], "available_methods (gammapy.makers.fovbackgroundmaker attribute)": [[172, "gammapy.makers.FoVBackgroundMaker.available_methods", false]], "available_methods (gammapy.makers.safemaskmaker attribute)": [[181, "gammapy.makers.SafeMaskMaker.available_methods", false]], "available_quantities (gammapy.estimators.fluxmaps attribute)": [[125, "gammapy.estimators.FluxMaps.available_quantities", false]], "available_quantities (gammapy.estimators.fluxpoints attribute)": [[127, "gammapy.estimators.FluxPoints.available_quantities", false]], "available_selection (gammapy.makers.mapdatasetmaker attribute)": [[175, "gammapy.makers.MapDatasetMaker.available_selection", false]], "available_selection (gammapy.makers.spectrumdatasetmaker attribute)": [[182, "gammapy.makers.SpectrumDatasetMaker.available_selection", false]], "available_stat_type (gammapy.datasets.fluxpointsdataset attribute)": [[102, "gammapy.datasets.FluxPointsDataset.available_stat_type", false]], "axes (gammapy.irf.background2d attribute)": [[149, "gammapy.irf.Background2D.axes", false]], "axes (gammapy.irf.background3d attribute)": [[150, "gammapy.irf.Background3D.axes", false]], "axes (gammapy.irf.backgroundirf attribute)": [[151, "gammapy.irf.BackgroundIRF.axes", false]], "axes (gammapy.irf.edispkernel attribute)": [[152, "gammapy.irf.EDispKernel.axes", false]], "axes (gammapy.irf.effectiveareatable2d attribute)": [[155, "gammapy.irf.EffectiveAreaTable2D.axes", false]], "axes (gammapy.irf.energydependentmultigausspsf attribute)": [[156, "gammapy.irf.EnergyDependentMultiGaussPSF.axes", false]], "axes (gammapy.irf.energydispersion2d attribute)": [[157, "gammapy.irf.EnergyDispersion2D.axes", false]], "axes (gammapy.irf.irf attribute)": [[159, "gammapy.irf.IRF.axes", false]], "axes (gammapy.irf.parametricpsf attribute)": [[166, "gammapy.irf.ParametricPSF.axes", false]], "axes (gammapy.irf.psf3d attribute)": [[162, "gammapy.irf.PSF3D.axes", false]], "axes (gammapy.irf.psfking attribute)": [[164, "gammapy.irf.PSFKing.axes", false]], "axes (gammapy.irf.radmax2d attribute)": [[167, "gammapy.irf.RadMax2D.axes", false]], "axes (gammapy.maps.hpxgeom attribute)": [[194, "gammapy.maps.HpxGeom.axes", false]], "axes (gammapy.maps.regiongeom attribute)": [[203, "gammapy.maps.RegionGeom.axes", false]], "axes (gammapy.maps.wcsgeom attribute)": [[206, "gammapy.maps.WcsGeom.axes", false]], "axes_names (gammapy.maps.hpxgeom attribute)": [[194, "gammapy.maps.HpxGeom.axes_names", false]], "axes_names (gammapy.maps.regiongeom attribute)": [[203, "gammapy.maps.RegionGeom.axes_names", false]], "axes_names (gammapy.maps.wcsgeom attribute)": [[206, "gammapy.maps.WcsGeom.axes_names", false]], "axis_names (gammapy.maps.mapcoord attribute)": [[201, "gammapy.maps.MapCoord.axis_names", false]], "b (gammapy.astro.population.lorimer2006 attribute)": [[35, "gammapy.astro.population.Lorimer2006.B", false]], "b (gammapy.astro.population.yusifovkucuk2004 attribute)": [[39, "gammapy.astro.population.YusifovKucuk2004.b", false]], "b (gammapy.astro.population.yusifovkucuk2004b attribute)": [[40, "gammapy.astro.population.YusifovKucuk2004B.b", false]], "backend (gammapy.modeling.covarianceresult attribute)": [[212, "gammapy.modeling.CovarianceResult.backend", false]], "backend (gammapy.modeling.fitresult attribute)": [[214, "gammapy.modeling.FitResult.backend", false]], "backend (gammapy.modeling.optimizeresult attribute)": [[215, "gammapy.modeling.OptimizeResult.backend", false]], "backend_default (in module gammapy.utils.parallel)": [[325, "gammapy.utils.parallel.BACKEND_DEFAULT", false]], "background (gammapy.datasets.mapdataset attribute)": [[103, "gammapy.datasets.MapDataset.background", false]], "background (gammapy.datasets.mapdatasetonoff attribute)": [[106, "gammapy.datasets.MapDatasetOnOff.background", false]], "background (gammapy.datasets.spectrumdataset attribute)": [[110, "gammapy.datasets.SpectrumDataset.background", false]], "background (gammapy.datasets.spectrumdatasetonoff attribute)": [[111, "gammapy.datasets.SpectrumDatasetOnOff.background", false]], "background2d (class in gammapy.irf)": [[149, "gammapy.irf.Background2D", false]], "background3d (class in gammapy.irf)": [[150, "gammapy.irf.Background3D", false]], "background_model (gammapy.datasets.mapdataset attribute)": [[103, "gammapy.datasets.MapDataset.background_model", false]], "background_model (gammapy.datasets.mapdatasetonoff attribute)": [[106, "gammapy.datasets.MapDatasetOnOff.background_model", false]], "background_model (gammapy.datasets.spectrumdataset attribute)": [[110, "gammapy.datasets.SpectrumDataset.background_model", false]], "background_model (gammapy.datasets.spectrumdatasetonoff attribute)": [[111, "gammapy.datasets.SpectrumDatasetOnOff.background_model", false]], "backgroundirf (class in gammapy.irf)": [[151, "gammapy.irf.BackgroundIRF", false]], "bar_radius (gammapy.astro.population.valleespiral attribute)": [[38, "gammapy.astro.population.ValleeSpiral.bar_radius", false]], "base_dir (gammapy.data.hduindextable attribute)": [[87, "gammapy.data.HDUIndexTable.base_dir", false]], "bbox_with_units (gammapy.astro.population.casebattacharya1998 attribute)": [[28, "gammapy.astro.population.CaseBattacharya1998.bbox_with_units", false]], "bbox_with_units (gammapy.astro.population.exponential attribute)": [[29, "gammapy.astro.population.Exponential.bbox_with_units", false]], "bbox_with_units (gammapy.astro.population.faucherkaspi2006 attribute)": [[30, "gammapy.astro.population.FaucherKaspi2006.bbox_with_units", false]], "bbox_with_units (gammapy.astro.population.faucherkaspi2006velocitybimodal attribute)": [[31, "gammapy.astro.population.FaucherKaspi2006VelocityBimodal.bbox_with_units", false]], "bbox_with_units (gammapy.astro.population.faucherkaspi2006velocitymaxwellian attribute)": [[32, "gammapy.astro.population.FaucherKaspi2006VelocityMaxwellian.bbox_with_units", false]], "bbox_with_units (gammapy.astro.population.lorimer2006 attribute)": [[35, "gammapy.astro.population.Lorimer2006.bbox_with_units", false]], "bbox_with_units (gammapy.astro.population.paczynski1990 attribute)": [[36, "gammapy.astro.population.Paczynski1990.bbox_with_units", false]], "bbox_with_units (gammapy.astro.population.paczynski1990velocity attribute)": [[37, "gammapy.astro.population.Paczynski1990Velocity.bbox_with_units", false]], "bbox_with_units (gammapy.astro.population.yusifovkucuk2004 attribute)": [[39, "gammapy.astro.population.YusifovKucuk2004.bbox_with_units", false]], "bbox_with_units (gammapy.astro.population.yusifovkucuk2004b attribute)": [[40, "gammapy.astro.population.YusifovKucuk2004B.bbox_with_units", false]], "beta (gammapy.astro.population.casebattacharya1998 attribute)": [[28, "gammapy.astro.population.CaseBattacharya1998.beta", false]], "beta (gammapy.modeling.models.lineartemporalmodel attribute)": [[242, "gammapy.modeling.models.LinearTemporalModel.beta", false]], "beta (gammapy.modeling.models.logparabolanormspectralmodel attribute)": [[243, "gammapy.modeling.models.LogParabolaNormSpectralModel.beta", false]], "beta (gammapy.modeling.models.logparabolaspectralmodel attribute)": [[244, "gammapy.modeling.models.LogParabolaSpectralModel.beta", false]], "beta (gammapy.modeling.models.smoothbrokenpowerlawspectralmodel attribute)": [[267, "gammapy.modeling.models.SmoothBrokenPowerLawSpectralModel.beta", false]], "bin_volume() (gammapy.maps.mapaxes method)": [[199, "gammapy.maps.MapAxes.bin_volume", false]], "bin_volume() (gammapy.maps.regiongeom method)": [[203, "gammapy.maps.RegionGeom.bin_volume", false]], "bin_volume() (gammapy.maps.wcsgeom method)": [[206, "gammapy.maps.WcsGeom.bin_volume", false]], "bin_width (gammapy.maps.labelmapaxis attribute)": [[197, "gammapy.maps.LabelMapAxis.bin_width", false]], "bin_width (gammapy.maps.mapaxis attribute)": [[200, "gammapy.maps.MapAxis.bin_width", false]], "bin_width (gammapy.maps.timemapaxis attribute)": [[205, "gammapy.maps.TimeMapAxis.bin_width", false]], "binary_dilate() (gammapy.maps.wcsndmap method)": [[208, "gammapy.maps.WcsNDMap.binary_dilate", false]], "binary_erode() (gammapy.maps.wcsndmap method)": [[208, "gammapy.maps.WcsNDMap.binary_erode", false]], "binary_structure() (gammapy.maps.wcsgeom method)": [[206, "gammapy.maps.WcsGeom.binary_structure", false]], "binsz_wcs (gammapy.maps.regiongeom attribute)": [[203, "gammapy.maps.RegionGeom.binsz_wcs", false]], "bkg": [[581, "term-Bkg", true]], "bkg (gammapy.data.observation attribute)": [[88, "gammapy.data.Observation.bkg", false]], "boundary_mask() (gammapy.maps.wcsgeom method)": [[206, "gammapy.maps.WcsGeom.boundary_mask", false]], "bounding_box (gammapy.astro.population.casebattacharya1998 attribute)": [[28, "gammapy.astro.population.CaseBattacharya1998.bounding_box", false]], "bounding_box (gammapy.astro.population.exponential attribute)": [[29, "gammapy.astro.population.Exponential.bounding_box", false]], "bounding_box (gammapy.astro.population.faucherkaspi2006 attribute)": [[30, "gammapy.astro.population.FaucherKaspi2006.bounding_box", false]], "bounding_box (gammapy.astro.population.faucherkaspi2006velocitybimodal attribute)": [[31, "gammapy.astro.population.FaucherKaspi2006VelocityBimodal.bounding_box", false]], "bounding_box (gammapy.astro.population.faucherkaspi2006velocitymaxwellian attribute)": [[32, "gammapy.astro.population.FaucherKaspi2006VelocityMaxwellian.bounding_box", false]], "bounding_box (gammapy.astro.population.lorimer2006 attribute)": [[35, "gammapy.astro.population.Lorimer2006.bounding_box", false]], "bounding_box (gammapy.astro.population.paczynski1990 attribute)": [[36, "gammapy.astro.population.Paczynski1990.bounding_box", false]], "bounding_box (gammapy.astro.population.paczynski1990velocity attribute)": [[37, "gammapy.astro.population.Paczynski1990Velocity.bounding_box", false]], "bounding_box (gammapy.astro.population.yusifovkucuk2004 attribute)": [[39, "gammapy.astro.population.YusifovKucuk2004.bounding_box", false]], "bounding_box (gammapy.astro.population.yusifovkucuk2004b attribute)": [[40, "gammapy.astro.population.YusifovKucuk2004B.bounding_box", false]], "bounds (gammapy.astro.population.casebattacharya1998 attribute)": [[28, "gammapy.astro.population.CaseBattacharya1998.bounds", false]], "bounds (gammapy.astro.population.exponential attribute)": [[29, "gammapy.astro.population.Exponential.bounds", false]], "bounds (gammapy.astro.population.faucherkaspi2006 attribute)": [[30, "gammapy.astro.population.FaucherKaspi2006.bounds", false]], "bounds (gammapy.astro.population.faucherkaspi2006velocitybimodal attribute)": [[31, "gammapy.astro.population.FaucherKaspi2006VelocityBimodal.bounds", false]], "bounds (gammapy.astro.population.faucherkaspi2006velocitymaxwellian attribute)": [[32, "gammapy.astro.population.FaucherKaspi2006VelocityMaxwellian.bounds", false]], "bounds (gammapy.astro.population.lorimer2006 attribute)": [[35, "gammapy.astro.population.Lorimer2006.bounds", false]], "bounds (gammapy.astro.population.paczynski1990 attribute)": [[36, "gammapy.astro.population.Paczynski1990.bounds", false]], "bounds (gammapy.astro.population.paczynski1990velocity attribute)": [[37, "gammapy.astro.population.Paczynski1990Velocity.bounds", false]], "bounds (gammapy.astro.population.yusifovkucuk2004 attribute)": [[39, "gammapy.astro.population.YusifovKucuk2004.bounds", false]], "bounds (gammapy.astro.population.yusifovkucuk2004b attribute)": [[40, "gammapy.astro.population.YusifovKucuk2004B.bounds", false]], "bounds (gammapy.maps.mapaxis attribute)": [[200, "gammapy.maps.MapAxis.bounds", false]], "bounds (gammapy.maps.timemapaxis attribute)": [[205, "gammapy.maps.TimeMapAxis.bounds", false]], "broadcasted (gammapy.maps.mapcoord attribute)": [[201, "gammapy.maps.MapCoord.broadcasted", false]], "brokenpowerlawspectralmodel (class in gammapy.modeling.models)": [[220, "gammapy.modeling.models.BrokenPowerLawSpectralModel", false]], "burkertprofile (class in gammapy.astro.darkmatter)": [[17, "gammapy.astro.darkmatter.BurkertProfile", false]], "c (gammapy.astro.population.lorimer2006 attribute)": [[35, "gammapy.astro.population.Lorimer2006.C", false]], "callback() (gammapy.makers.datasetsmaker method)": [[171, "gammapy.makers.DatasetsMaker.callback", false]], "cartesian() (in module gammapy.utils.coordinates)": [[311, "gammapy.utils.coordinates.cartesian", false]], "casebattacharya1998 (class in gammapy.astro.population)": [[28, "gammapy.astro.population.CaseBattacharya1998", false]], "cash": [[581, "term-Cash", true]], "cash() (in module gammapy.stats)": [[294, "gammapy.stats.cash", false]], "cash_sum_cython() (in module gammapy.stats)": [[295, "gammapy.stats.cash_sum_cython", false]], "cashcountsstatistic (class in gammapy.stats)": [[291, "gammapy.stats.CashCountsStatistic", false]], "catalog_registry (in module gammapy.catalog)": [[55, "gammapy.catalog.CATALOG_REGISTRY", false]], "center (gammapy.maps.labelmapaxis attribute)": [[197, "gammapy.maps.LabelMapAxis.center", false]], "center (gammapy.maps.mapaxis attribute)": [[200, "gammapy.maps.MapAxis.center", false]], "center (gammapy.maps.timemapaxis attribute)": [[205, "gammapy.maps.TimeMapAxis.center", false]], "center_coord (gammapy.maps.geom attribute)": [[193, "gammapy.maps.Geom.center_coord", false]], "center_coord (gammapy.maps.hpxgeom attribute)": [[194, "gammapy.maps.HpxGeom.center_coord", false]], "center_coord (gammapy.maps.mapaxes attribute)": [[199, "gammapy.maps.MapAxes.center_coord", false]], "center_coord (gammapy.maps.regiongeom attribute)": [[203, "gammapy.maps.RegionGeom.center_coord", false]], "center_coord (gammapy.maps.wcsgeom attribute)": [[206, "gammapy.maps.WcsGeom.center_coord", false]], "center_pix (gammapy.maps.geom attribute)": [[193, "gammapy.maps.Geom.center_pix", false]], "center_pix (gammapy.maps.hpxgeom attribute)": [[194, "gammapy.maps.HpxGeom.center_pix", false]], "center_pix (gammapy.maps.regiongeom attribute)": [[203, "gammapy.maps.RegionGeom.center_pix", false]], "center_pix (gammapy.maps.wcsgeom attribute)": [[206, "gammapy.maps.WcsGeom.center_pix", false]], "center_skydir (gammapy.maps.geom attribute)": [[193, "gammapy.maps.Geom.center_skydir", false]], "center_skydir (gammapy.maps.hpxgeom attribute)": [[194, "gammapy.maps.HpxGeom.center_skydir", false]], "center_skydir (gammapy.maps.regiongeom attribute)": [[203, "gammapy.maps.RegionGeom.center_skydir", false]], "center_skydir (gammapy.maps.wcsgeom attribute)": [[206, "gammapy.maps.WcsGeom.center_skydir", false]], "channel (gammapy.astro.darkmatter.primaryflux attribute)": [[26, "gammapy.astro.darkmatter.PrimaryFlux.channel", false]], "channel_registry (gammapy.astro.darkmatter.primaryflux attribute)": [[26, "gammapy.astro.darkmatter.PrimaryFlux.channel_registry", false]], "check() (gammapy.data.datastore method)": [[82, "gammapy.data.DataStore.check", false]], "check() (gammapy.data.eventlist method)": [[83, "gammapy.data.EventList.check", false]], "check() (gammapy.data.observation method)": [[88, "gammapy.data.Observation.check", false]], "check_limits() (gammapy.modeling.parameter method)": [[216, "gammapy.modeling.Parameter.check_limits", false]], "check_limits() (gammapy.modeling.parameters method)": [[217, "gammapy.modeling.Parameters.check_limits", false]], "check_limits() (gammapy.modeling.priorparameter method)": [[218, "gammapy.modeling.PriorParameter.check_limits", false]], "check_limits() (gammapy.modeling.priorparameters method)": [[219, "gammapy.modeling.PriorParameters.check_limits", false]], "checker (class in gammapy.utils.testing)": [[357, "gammapy.utils.testing.Checker", false]], "clear() (gammapy.data.observations method)": [[92, "gammapy.data.Observations.clear", false]], "clear() (gammapy.datasets.datasets method)": [[100, "gammapy.datasets.Datasets.clear", false]], "clear() (gammapy.maps.maps method)": [[202, "gammapy.maps.Maps.clear", false]], "clear() (gammapy.modeling.models.models method)": [[250, "gammapy.modeling.models.Models.clear", false]], "coadd() (gammapy.maps.hpxmap method)": [[195, "gammapy.maps.HpxMap.coadd", false]], "coadd() (gammapy.maps.hpxndmap method)": [[196, "gammapy.maps.HpxNDMap.coadd", false]], "coadd() (gammapy.maps.map method)": [[198, "gammapy.maps.Map.coadd", false]], "coadd() (gammapy.maps.regionndmap method)": [[204, "gammapy.maps.RegionNDMap.coadd", false]], "coadd() (gammapy.maps.wcsmap method)": [[207, "gammapy.maps.WcsMap.coadd", false]], "coadd() (gammapy.maps.wcsndmap method)": [[208, "gammapy.maps.WcsNDMap.coadd", false]], "coefficients (gammapy.modeling.models.meyercrabspectralmodel attribute)": [[247, "gammapy.modeling.models.MeyerCrabSpectralModel.coefficients", false]], "coerce_units() (gammapy.astro.population.casebattacharya1998 method)": [[28, "gammapy.astro.population.CaseBattacharya1998.coerce_units", false]], "coerce_units() (gammapy.astro.population.exponential method)": [[29, "gammapy.astro.population.Exponential.coerce_units", false]], "coerce_units() (gammapy.astro.population.faucherkaspi2006 method)": [[30, "gammapy.astro.population.FaucherKaspi2006.coerce_units", false]], "coerce_units() (gammapy.astro.population.faucherkaspi2006velocitybimodal method)": [[31, "gammapy.astro.population.FaucherKaspi2006VelocityBimodal.coerce_units", false]], "coerce_units() (gammapy.astro.population.faucherkaspi2006velocitymaxwellian method)": [[32, "gammapy.astro.population.FaucherKaspi2006VelocityMaxwellian.coerce_units", false]], "coerce_units() (gammapy.astro.population.lorimer2006 method)": [[35, "gammapy.astro.population.Lorimer2006.coerce_units", false]], "coerce_units() (gammapy.astro.population.paczynski1990 method)": [[36, "gammapy.astro.population.Paczynski1990.coerce_units", false]], "coerce_units() (gammapy.astro.population.paczynski1990velocity method)": [[37, "gammapy.astro.population.Paczynski1990Velocity.coerce_units", false]], "coerce_units() (gammapy.astro.population.yusifovkucuk2004 method)": [[39, "gammapy.astro.population.YusifovKucuk2004.coerce_units", false]], "coerce_units() (gammapy.astro.population.yusifovkucuk2004b method)": [[40, "gammapy.astro.population.YusifovKucuk2004B.coerce_units", false]], "col_fit_deriv (gammapy.astro.population.casebattacharya1998 attribute)": [[28, "gammapy.astro.population.CaseBattacharya1998.col_fit_deriv", false]], "col_fit_deriv (gammapy.astro.population.exponential attribute)": [[29, "gammapy.astro.population.Exponential.col_fit_deriv", false]], "col_fit_deriv (gammapy.astro.population.faucherkaspi2006 attribute)": [[30, "gammapy.astro.population.FaucherKaspi2006.col_fit_deriv", false]], "col_fit_deriv (gammapy.astro.population.faucherkaspi2006velocitybimodal attribute)": [[31, "gammapy.astro.population.FaucherKaspi2006VelocityBimodal.col_fit_deriv", false]], "col_fit_deriv (gammapy.astro.population.faucherkaspi2006velocitymaxwellian attribute)": [[32, "gammapy.astro.population.FaucherKaspi2006VelocityMaxwellian.col_fit_deriv", false]], "col_fit_deriv (gammapy.astro.population.lorimer2006 attribute)": [[35, "gammapy.astro.population.Lorimer2006.col_fit_deriv", false]], "col_fit_deriv (gammapy.astro.population.paczynski1990 attribute)": [[36, "gammapy.astro.population.Paczynski1990.col_fit_deriv", false]], "col_fit_deriv (gammapy.astro.population.paczynski1990velocity attribute)": [[37, "gammapy.astro.population.Paczynski1990Velocity.col_fit_deriv", false]], "col_fit_deriv (gammapy.astro.population.yusifovkucuk2004 attribute)": [[39, "gammapy.astro.population.YusifovKucuk2004.col_fit_deriv", false]], "col_fit_deriv (gammapy.astro.population.yusifovkucuk2004b attribute)": [[40, "gammapy.astro.population.YusifovKucuk2004B.col_fit_deriv", false]], "colnames (gammapy.data.hduindextable attribute)": [[87, "gammapy.data.HDUIndexTable.colnames", false]], "colnames (gammapy.data.observationtable attribute)": [[91, "gammapy.data.ObservationTable.colnames", false]], "colormap_hess() (in module gammapy.visualization)": [[373, "gammapy.visualization.colormap_hess", false]], "colormap_milagro() (in module gammapy.visualization)": [[374, "gammapy.visualization.colormap_milagro", false]], "columnclass (gammapy.data.hduindextable attribute)": [[87, "gammapy.data.HDUIndexTable.ColumnClass", false]], "columnclass (gammapy.data.observationtable attribute)": [[91, "gammapy.data.ObservationTable.ColumnClass", false]], "combine_flux_maps() (in module gammapy.estimators.utils)": [[136, "gammapy.estimators.utils.combine_flux_maps", false]], "combine_significance_maps() (in module gammapy.estimators.utils)": [[137, "gammapy.estimators.utils.combine_significance_maps", false]], "components_models() (gammapy.catalog.sourcecatalogobjecthgps method)": [[80, "gammapy.catalog.SourceCatalogObjectHGPS.components_models", false]], "compound_region_to_regions() (in module gammapy.utils.regions)": [[341, "gammapy.utils.regions.compound_region_to_regions", false]], "compoundspectralmodel (class in gammapy.modeling.models)": [[221, "gammapy.modeling.models.CompoundSpectralModel", false]], "compute_chisq() (in module gammapy.stats)": [[296, "gammapy.stats.compute_chisq", false]], "compute_differential_jfactor() (gammapy.astro.darkmatter.jfactory method)": [[23, "gammapy.astro.darkmatter.JFactory.compute_differential_jfactor", false]], "compute_errn() (gammapy.stats.cashcountsstatistic method)": [[291, "gammapy.stats.CashCountsStatistic.compute_errn", false]], "compute_errn() (gammapy.stats.wstatcountsstatistic method)": [[293, "gammapy.stats.WStatCountsStatistic.compute_errn", false]], "compute_errp() (gammapy.stats.cashcountsstatistic method)": [[291, "gammapy.stats.CashCountsStatistic.compute_errp", false]], "compute_errp() (gammapy.stats.wstatcountsstatistic method)": [[293, "gammapy.stats.WStatCountsStatistic.compute_errp", false]], "compute_flux_doubling() (in module gammapy.stats)": [[297, "gammapy.stats.compute_flux_doubling", false]], "compute_fpp() (in module gammapy.stats)": [[298, "gammapy.stats.compute_fpp", false]], "compute_fvar() (in module gammapy.stats)": [[299, "gammapy.stats.compute_fvar", false]], "compute_jfactor() (gammapy.astro.darkmatter.jfactory method)": [[23, "gammapy.astro.darkmatter.JFactory.compute_jfactor", false]], "compute_lightcurve_discrete_correlation() (in module gammapy.estimators.utils)": [[138, "gammapy.estimators.utils.compute_lightcurve_discrete_correlation", false]], "compute_lightcurve_doublingtime() (in module gammapy.estimators.utils)": [[139, "gammapy.estimators.utils.compute_lightcurve_doublingtime", false]], "compute_lightcurve_fpp() (in module gammapy.estimators.utils)": [[140, "gammapy.estimators.utils.compute_lightcurve_fpp", false]], "compute_lightcurve_fvar() (in module gammapy.estimators.utils)": [[141, "gammapy.estimators.utils.compute_lightcurve_fvar", false]], "compute_upper_limit() (gammapy.stats.cashcountsstatistic method)": [[291, "gammapy.stats.CashCountsStatistic.compute_upper_limit", false]], "compute_upper_limit() (gammapy.stats.wstatcountsstatistic method)": [[293, "gammapy.stats.WStatCountsStatistic.compute_upper_limit", false]], "concatenate() (gammapy.maps.labelmapaxis method)": [[197, "gammapy.maps.LabelMapAxis.concatenate", false]], "concatenate() (gammapy.maps.mapaxis method)": [[200, "gammapy.maps.MapAxis.concatenate", false]], "conf_max (gammapy.modeling.parameter attribute)": [[216, "gammapy.modeling.Parameter.conf_max", false]], "conf_max (gammapy.modeling.priorparameter attribute)": [[218, "gammapy.modeling.PriorParameter.conf_max", false]], "conf_min (gammapy.modeling.parameter attribute)": [[216, "gammapy.modeling.Parameter.conf_min", false]], "conf_min (gammapy.modeling.priorparameter attribute)": [[218, "gammapy.modeling.PriorParameter.conf_min", false]], "confidence() (gammapy.modeling.fit method)": [[213, "gammapy.modeling.Fit.confidence", false]], "config (gammapy.analysis.analysis attribute)": [[15, "gammapy.analysis.Analysis.config", false]], "config_parameters (gammapy.estimators.asmoothmapestimator attribute)": [[120, "gammapy.estimators.ASmoothMapEstimator.config_parameters", false]], "config_parameters (gammapy.estimators.energydependentmorphologyestimator attribute)": [[122, "gammapy.estimators.EnergyDependentMorphologyEstimator.config_parameters", false]], "config_parameters (gammapy.estimators.estimator attribute)": [[123, "gammapy.estimators.Estimator.config_parameters", false]], "config_parameters (gammapy.estimators.excessmapestimator attribute)": [[124, "gammapy.estimators.ExcessMapEstimator.config_parameters", false]], "config_parameters (gammapy.estimators.fluxpointsestimator attribute)": [[128, "gammapy.estimators.FluxPointsEstimator.config_parameters", false]], "config_parameters (gammapy.estimators.fluxprofileestimator attribute)": [[129, "gammapy.estimators.FluxProfileEstimator.config_parameters", false]], "config_parameters (gammapy.estimators.imageprofileestimator attribute)": [[131, "gammapy.estimators.ImageProfileEstimator.config_parameters", false]], "config_parameters (gammapy.estimators.lightcurveestimator attribute)": [[132, "gammapy.estimators.LightCurveEstimator.config_parameters", false]], "config_parameters (gammapy.estimators.parameterestimator attribute)": [[133, "gammapy.estimators.ParameterEstimator.config_parameters", false]], "config_parameters (gammapy.estimators.sensitivityestimator attribute)": [[134, "gammapy.estimators.SensitivityEstimator.config_parameters", false]], "config_parameters (gammapy.estimators.tsmapestimator attribute)": [[135, "gammapy.estimators.TSMapEstimator.config_parameters", false]], "const (gammapy.modeling.models.constantspectralmodel attribute)": [[224, "gammapy.modeling.models.ConstantSpectralModel.const", false]], "constantfluxspatialmodel (class in gammapy.modeling.models)": [[222, "gammapy.modeling.models.ConstantFluxSpatialModel", false]], "constantspatialmodel (class in gammapy.modeling.models)": [[223, "gammapy.modeling.models.ConstantSpatialModel", false]], "constantspectralmodel (class in gammapy.modeling.models)": [[224, "gammapy.modeling.models.ConstantSpectralModel", false]], "constanttemporalmodel (class in gammapy.modeling.models)": [[225, "gammapy.modeling.models.ConstantTemporalModel", false]], "construct() (gammapy.analysis.analysisconfig class method)": [[16, "gammapy.analysis.AnalysisConfig.construct", false]], "construct() (gammapy.data.eventlistmetadata class method)": [[84, "gammapy.data.EventListMetaData.construct", false]], "construct() (gammapy.data.observationmetadata class method)": [[90, "gammapy.data.ObservationMetaData.construct", false]], "construct() (gammapy.datasets.mapdatasetmetadata class method)": [[105, "gammapy.datasets.MapDatasetMetaData.construct", false]], "construct() (gammapy.estimators.fluxmetadata class method)": [[126, "gammapy.estimators.FluxMetaData.construct", false]], "containment() (gammapy.irf.energydependentmultigausspsf method)": [[156, "gammapy.irf.EnergyDependentMultiGaussPSF.containment", false]], "containment() (gammapy.irf.parametricpsf method)": [[166, "gammapy.irf.ParametricPSF.containment", false]], "containment() (gammapy.irf.psf3d method)": [[162, "gammapy.irf.PSF3D.containment", false]], "containment() (gammapy.irf.psfking method)": [[164, "gammapy.irf.PSFKing.containment", false]], "containment() (gammapy.irf.psfmap method)": [[165, "gammapy.irf.PSFMap.containment", false]], "containment() (gammapy.irf.recopsfmap method)": [[168, "gammapy.irf.RecoPSFMap.containment", false]], "containment_radius() (gammapy.irf.energydependentmultigausspsf method)": [[156, "gammapy.irf.EnergyDependentMultiGaussPSF.containment_radius", false]], "containment_radius() (gammapy.irf.parametricpsf method)": [[166, "gammapy.irf.ParametricPSF.containment_radius", false]], "containment_radius() (gammapy.irf.psf3d method)": [[162, "gammapy.irf.PSF3D.containment_radius", false]], "containment_radius() (gammapy.irf.psfking method)": [[164, "gammapy.irf.PSFKing.containment_radius", false]], "containment_radius() (gammapy.irf.psfmap method)": [[165, "gammapy.irf.PSFMap.containment_radius", false]], "containment_radius() (gammapy.irf.recopsfmap method)": [[168, "gammapy.irf.RecoPSFMap.containment_radius", false]], "containment_radius() (in module gammapy.maps)": [[209, "gammapy.maps.containment_radius", false]], "containment_radius_map() (gammapy.irf.psfmap method)": [[165, "gammapy.irf.PSFMap.containment_radius_map", false]], "containment_radius_map() (gammapy.irf.recopsfmap method)": [[168, "gammapy.irf.RecoPSFMap.containment_radius_map", false]], "containment_region() (in module gammapy.maps)": [[210, "gammapy.maps.containment_region", false]], "contains() (gammapy.maps.geom method)": [[193, "gammapy.maps.Geom.contains", false]], "contains() (gammapy.maps.hpxgeom method)": [[194, "gammapy.maps.HpxGeom.contains", false]], "contains() (gammapy.maps.regiongeom method)": [[203, "gammapy.maps.RegionGeom.contains", false]], "contains() (gammapy.maps.wcsgeom method)": [[206, "gammapy.maps.WcsGeom.contains", false]], "contains_pix() (gammapy.maps.geom method)": [[193, "gammapy.maps.Geom.contains_pix", false]], "contains_pix() (gammapy.maps.hpxgeom method)": [[194, "gammapy.maps.HpxGeom.contains_pix", false]], "contains_pix() (gammapy.maps.regiongeom method)": [[203, "gammapy.maps.RegionGeom.contains_pix", false]], "contains_pix() (gammapy.maps.wcsgeom method)": [[206, "gammapy.maps.WcsGeom.contains_pix", false]], "contains_wcs_pix() (gammapy.maps.regiongeom method)": [[203, "gammapy.maps.RegionGeom.contains_wcs_pix", false]], "contributes() (gammapy.modeling.models.fovbackgroundmodel static method)": [[234, "gammapy.modeling.models.FoVBackgroundModel.contributes", false]], "contributes() (gammapy.modeling.models.skymodel method)": [[266, "gammapy.modeling.models.SkyModel.contributes", false]], "contributes_to_stat (gammapy.datasets.datasets attribute)": [[100, "gammapy.datasets.Datasets.contributes_to_stat", false]], "convert_bytestring_to_unicode() (gammapy.data.hduindextable method)": [[87, "gammapy.data.HDUIndexTable.convert_bytestring_to_unicode", false]], "convert_bytestring_to_unicode() (gammapy.data.observationtable method)": [[91, "gammapy.data.ObservationTable.convert_bytestring_to_unicode", false]], "convert_unicode_to_bytestring() (gammapy.data.hduindextable method)": [[87, "gammapy.data.HDUIndexTable.convert_unicode_to_bytestring", false]], "convert_unicode_to_bytestring() (gammapy.data.observationtable method)": [[91, "gammapy.data.ObservationTable.convert_unicode_to_bytestring", false]], "convolve() (gammapy.maps.hpxndmap method)": [[196, "gammapy.maps.HpxNDMap.convolve", false]], "convolve() (gammapy.maps.wcsndmap method)": [[208, "gammapy.maps.WcsNDMap.convolve", false]], "convolve_full() (gammapy.maps.hpxndmap method)": [[196, "gammapy.maps.HpxNDMap.convolve_full", false]], "convolve_wcs() (gammapy.maps.hpxndmap method)": [[196, "gammapy.maps.HpxNDMap.convolve_wcs", false]], "coord_to_idx() (gammapy.maps.geom method)": [[193, "gammapy.maps.Geom.coord_to_idx", false]], "coord_to_idx() (gammapy.maps.hpxgeom method)": [[194, "gammapy.maps.HpxGeom.coord_to_idx", false]], "coord_to_idx() (gammapy.maps.labelmapaxis method)": [[197, "gammapy.maps.LabelMapAxis.coord_to_idx", false]], "coord_to_idx() (gammapy.maps.mapaxes method)": [[199, "gammapy.maps.MapAxes.coord_to_idx", false]], "coord_to_idx() (gammapy.maps.mapaxis method)": [[200, "gammapy.maps.MapAxis.coord_to_idx", false]], "coord_to_idx() (gammapy.maps.regiongeom method)": [[203, "gammapy.maps.RegionGeom.coord_to_idx", false]], "coord_to_idx() (gammapy.maps.timemapaxis method)": [[205, "gammapy.maps.TimeMapAxis.coord_to_idx", false]], "coord_to_idx() (gammapy.maps.wcsgeom method)": [[206, "gammapy.maps.WcsGeom.coord_to_idx", false]], "coord_to_pix() (gammapy.maps.geom method)": [[193, "gammapy.maps.Geom.coord_to_pix", false]], "coord_to_pix() (gammapy.maps.hpxgeom method)": [[194, "gammapy.maps.HpxGeom.coord_to_pix", false]], "coord_to_pix() (gammapy.maps.labelmapaxis method)": [[197, "gammapy.maps.LabelMapAxis.coord_to_pix", false]], "coord_to_pix() (gammapy.maps.mapaxes method)": [[199, "gammapy.maps.MapAxes.coord_to_pix", false]], "coord_to_pix() (gammapy.maps.mapaxis method)": [[200, "gammapy.maps.MapAxis.coord_to_pix", false]], "coord_to_pix() (gammapy.maps.regiongeom method)": [[203, "gammapy.maps.RegionGeom.coord_to_pix", false]], "coord_to_pix() (gammapy.maps.timemapaxis method)": [[205, "gammapy.maps.TimeMapAxis.coord_to_pix", false]], "coord_to_pix() (gammapy.maps.wcsgeom method)": [[206, "gammapy.maps.WcsGeom.coord_to_pix", false]], "coords (gammapy.modeling.models.piecewisenormspatialmodel attribute)": [[252, "gammapy.modeling.models.PiecewiseNormSpatialModel.coords", false]], "copy() (gammapy.analysis.analysisconfig method)": [[16, "gammapy.analysis.AnalysisConfig.copy", false]], "copy() (gammapy.astro.darkmatter.darkmatterannihilationspectralmodel method)": [[19, "gammapy.astro.darkmatter.DarkMatterAnnihilationSpectralModel.copy", false]], "copy() (gammapy.astro.darkmatter.darkmatterdecayspectralmodel method)": [[20, "gammapy.astro.darkmatter.DarkMatterDecaySpectralModel.copy", false]], "copy() (gammapy.astro.darkmatter.primaryflux method)": [[26, "gammapy.astro.darkmatter.PrimaryFlux.copy", false]], "copy() (gammapy.astro.population.casebattacharya1998 method)": [[28, "gammapy.astro.population.CaseBattacharya1998.copy", false]], "copy() (gammapy.astro.population.exponential method)": [[29, "gammapy.astro.population.Exponential.copy", false]], "copy() (gammapy.astro.population.faucherkaspi2006 method)": [[30, "gammapy.astro.population.FaucherKaspi2006.copy", false]], "copy() (gammapy.astro.population.faucherkaspi2006velocitybimodal method)": [[31, "gammapy.astro.population.FaucherKaspi2006VelocityBimodal.copy", false]], "copy() (gammapy.astro.population.faucherkaspi2006velocitymaxwellian method)": [[32, "gammapy.astro.population.FaucherKaspi2006VelocityMaxwellian.copy", false]], "copy() (gammapy.astro.population.lorimer2006 method)": [[35, "gammapy.astro.population.Lorimer2006.copy", false]], "copy() (gammapy.astro.population.paczynski1990 method)": [[36, "gammapy.astro.population.Paczynski1990.copy", false]], "copy() (gammapy.astro.population.paczynski1990velocity method)": [[37, "gammapy.astro.population.Paczynski1990Velocity.copy", false]], "copy() (gammapy.astro.population.yusifovkucuk2004 method)": [[39, "gammapy.astro.population.YusifovKucuk2004.copy", false]], "copy() (gammapy.astro.population.yusifovkucuk2004b method)": [[40, "gammapy.astro.population.YusifovKucuk2004B.copy", false]], "copy() (gammapy.data.eventlist method)": [[83, "gammapy.data.EventList.copy", false]], "copy() (gammapy.data.eventlistmetadata method)": [[84, "gammapy.data.EventListMetaData.copy", false]], "copy() (gammapy.data.gti method)": [[86, "gammapy.data.GTI.copy", false]], "copy() (gammapy.data.hduindextable method)": [[87, "gammapy.data.HDUIndexTable.copy", false]], "copy() (gammapy.data.observation method)": [[88, "gammapy.data.Observation.copy", false]], "copy() (gammapy.data.observationfilter method)": [[89, "gammapy.data.ObservationFilter.copy", false]], "copy() (gammapy.data.observationmetadata method)": [[90, "gammapy.data.ObservationMetaData.copy", false]], "copy() (gammapy.data.observationtable method)": [[91, "gammapy.data.ObservationTable.copy", false]], "copy() (gammapy.datasets.dataset method)": [[99, "gammapy.datasets.Dataset.copy", false]], "copy() (gammapy.datasets.datasets method)": [[100, "gammapy.datasets.Datasets.copy", false]], "copy() (gammapy.datasets.fluxpointsdataset method)": [[102, "gammapy.datasets.FluxPointsDataset.copy", false]], "copy() (gammapy.datasets.mapdataset method)": [[103, "gammapy.datasets.MapDataset.copy", false]], "copy() (gammapy.datasets.mapdatasetmetadata method)": [[105, "gammapy.datasets.MapDatasetMetaData.copy", false]], "copy() (gammapy.datasets.mapdatasetonoff method)": [[106, "gammapy.datasets.MapDatasetOnOff.copy", false]], "copy() (gammapy.datasets.spectrumdataset method)": [[110, "gammapy.datasets.SpectrumDataset.copy", false]], "copy() (gammapy.datasets.spectrumdatasetonoff method)": [[111, "gammapy.datasets.SpectrumDatasetOnOff.copy", false]], "copy() (gammapy.estimators.asmoothmapestimator method)": [[120, "gammapy.estimators.ASmoothMapEstimator.copy", false]], "copy() (gammapy.estimators.energydependentmorphologyestimator method)": [[122, "gammapy.estimators.EnergyDependentMorphologyEstimator.copy", false]], "copy() (gammapy.estimators.estimator method)": [[123, "gammapy.estimators.Estimator.copy", false]], "copy() (gammapy.estimators.excessmapestimator method)": [[124, "gammapy.estimators.ExcessMapEstimator.copy", false]], "copy() (gammapy.estimators.fluxmaps method)": [[125, "gammapy.estimators.FluxMaps.copy", false]], "copy() (gammapy.estimators.fluxmetadata method)": [[126, "gammapy.estimators.FluxMetaData.copy", false]], "copy() (gammapy.estimators.fluxpoints method)": [[127, "gammapy.estimators.FluxPoints.copy", false]], "copy() (gammapy.estimators.fluxpointsestimator method)": [[128, "gammapy.estimators.FluxPointsEstimator.copy", false]], "copy() (gammapy.estimators.fluxprofileestimator method)": [[129, "gammapy.estimators.FluxProfileEstimator.copy", false]], "copy() (gammapy.estimators.imageprofileestimator method)": [[131, "gammapy.estimators.ImageProfileEstimator.copy", false]], "copy() (gammapy.estimators.lightcurveestimator method)": [[132, "gammapy.estimators.LightCurveEstimator.copy", false]], "copy() (gammapy.estimators.parameterestimator method)": [[133, "gammapy.estimators.ParameterEstimator.copy", false]], "copy() (gammapy.estimators.sensitivityestimator method)": [[134, "gammapy.estimators.SensitivityEstimator.copy", false]], "copy() (gammapy.estimators.tsmapestimator method)": [[135, "gammapy.estimators.TSMapEstimator.copy", false]], "copy() (gammapy.irf.edispkernelmap method)": [[153, "gammapy.irf.EDispKernelMap.copy", false]], "copy() (gammapy.irf.edispmap method)": [[154, "gammapy.irf.EDispMap.copy", false]], "copy() (gammapy.irf.irfmap method)": [[160, "gammapy.irf.IRFMap.copy", false]], "copy() (gammapy.irf.psfmap method)": [[165, "gammapy.irf.PSFMap.copy", false]], "copy() (gammapy.irf.recopsfmap method)": [[168, "gammapy.irf.RecoPSFMap.copy", false]], "copy() (gammapy.maps.geom method)": [[193, "gammapy.maps.Geom.copy", false]], "copy() (gammapy.maps.hpxgeom method)": [[194, "gammapy.maps.HpxGeom.copy", false]], "copy() (gammapy.maps.hpxmap method)": [[195, "gammapy.maps.HpxMap.copy", false]], "copy() (gammapy.maps.hpxndmap method)": [[196, "gammapy.maps.HpxNDMap.copy", false]], "copy() (gammapy.maps.labelmapaxis method)": [[197, "gammapy.maps.LabelMapAxis.copy", false]], "copy() (gammapy.maps.map method)": [[198, "gammapy.maps.Map.copy", false]], "copy() (gammapy.maps.mapaxes method)": [[199, "gammapy.maps.MapAxes.copy", false]], "copy() (gammapy.maps.mapaxis method)": [[200, "gammapy.maps.MapAxis.copy", false]], "copy() (gammapy.maps.mapcoord method)": [[201, "gammapy.maps.MapCoord.copy", false]], "copy() (gammapy.maps.regiongeom method)": [[203, "gammapy.maps.RegionGeom.copy", false]], "copy() (gammapy.maps.regionndmap method)": [[204, "gammapy.maps.RegionNDMap.copy", false]], "copy() (gammapy.maps.timemapaxis method)": [[205, "gammapy.maps.TimeMapAxis.copy", false]], "copy() (gammapy.maps.wcsgeom method)": [[206, "gammapy.maps.WcsGeom.copy", false]], "copy() (gammapy.maps.wcsmap method)": [[207, "gammapy.maps.WcsMap.copy", false]], "copy() (gammapy.maps.wcsndmap method)": [[208, "gammapy.maps.WcsNDMap.copy", false]], "copy() (gammapy.modeling.models.brokenpowerlawspectralmodel method)": [[220, "gammapy.modeling.models.BrokenPowerLawSpectralModel.copy", false]], "copy() (gammapy.modeling.models.compoundspectralmodel method)": [[221, "gammapy.modeling.models.CompoundSpectralModel.copy", false]], "copy() (gammapy.modeling.models.constantfluxspatialmodel method)": [[222, "gammapy.modeling.models.ConstantFluxSpatialModel.copy", false]], "copy() (gammapy.modeling.models.constantspatialmodel method)": [[223, "gammapy.modeling.models.ConstantSpatialModel.copy", false]], "copy() (gammapy.modeling.models.constantspectralmodel method)": [[224, "gammapy.modeling.models.ConstantSpectralModel.copy", false]], "copy() (gammapy.modeling.models.constanttemporalmodel method)": [[225, "gammapy.modeling.models.ConstantTemporalModel.copy", false]], "copy() (gammapy.modeling.models.datasetmodels method)": [[226, "gammapy.modeling.models.DatasetModels.copy", false]], "copy() (gammapy.modeling.models.diskspatialmodel method)": [[227, "gammapy.modeling.models.DiskSpatialModel.copy", false]], "copy() (gammapy.modeling.models.eblabsorptionnormspectralmodel method)": [[228, "gammapy.modeling.models.EBLAbsorptionNormSpectralModel.copy", false]], "copy() (gammapy.modeling.models.expcutoffpowerlaw3fglspectralmodel method)": [[230, "gammapy.modeling.models.ExpCutoffPowerLaw3FGLSpectralModel.copy", false]], "copy() (gammapy.modeling.models.expcutoffpowerlawnormspectralmodel method)": [[231, "gammapy.modeling.models.ExpCutoffPowerLawNormSpectralModel.copy", false]], "copy() (gammapy.modeling.models.expcutoffpowerlawspectralmodel method)": [[232, "gammapy.modeling.models.ExpCutoffPowerLawSpectralModel.copy", false]], "copy() (gammapy.modeling.models.expdecaytemporalmodel method)": [[233, "gammapy.modeling.models.ExpDecayTemporalModel.copy", false]], "copy() (gammapy.modeling.models.fovbackgroundmodel method)": [[234, "gammapy.modeling.models.FoVBackgroundModel.copy", false]], "copy() (gammapy.modeling.models.gaussianprior method)": [[235, "gammapy.modeling.models.GaussianPrior.copy", false]], "copy() (gammapy.modeling.models.gaussianspatialmodel method)": [[236, "gammapy.modeling.models.GaussianSpatialModel.copy", false]], "copy() (gammapy.modeling.models.gaussianspectralmodel method)": [[237, "gammapy.modeling.models.GaussianSpectralModel.copy", false]], "copy() (gammapy.modeling.models.gaussiantemporalmodel method)": [[238, "gammapy.modeling.models.GaussianTemporalModel.copy", false]], "copy() (gammapy.modeling.models.generalizedgaussianspatialmodel method)": [[239, "gammapy.modeling.models.GeneralizedGaussianSpatialModel.copy", false]], "copy() (gammapy.modeling.models.generalizedgaussiantemporalmodel method)": [[240, "gammapy.modeling.models.GeneralizedGaussianTemporalModel.copy", false]], "copy() (gammapy.modeling.models.lightcurvetemplatetemporalmodel method)": [[241, "gammapy.modeling.models.LightCurveTemplateTemporalModel.copy", false]], "copy() (gammapy.modeling.models.lineartemporalmodel method)": [[242, "gammapy.modeling.models.LinearTemporalModel.copy", false]], "copy() (gammapy.modeling.models.logparabolanormspectralmodel method)": [[243, "gammapy.modeling.models.LogParabolaNormSpectralModel.copy", false]], "copy() (gammapy.modeling.models.logparabolaspectralmodel method)": [[244, "gammapy.modeling.models.LogParabolaSpectralModel.copy", false]], "copy() (gammapy.modeling.models.loguniformprior method)": [[245, "gammapy.modeling.models.LogUniformPrior.copy", false]], "copy() (gammapy.modeling.models.meyercrabspectralmodel method)": [[247, "gammapy.modeling.models.MeyerCrabSpectralModel.copy", false]], "copy() (gammapy.modeling.models.modelbase method)": [[249, "gammapy.modeling.models.ModelBase.copy", false]], "copy() (gammapy.modeling.models.models method)": [[250, "gammapy.modeling.models.Models.copy", false]], "copy() (gammapy.modeling.models.naimaspectralmodel method)": [[251, "gammapy.modeling.models.NaimaSpectralModel.copy", false]], "copy() (gammapy.modeling.models.piecewisenormspatialmodel method)": [[252, "gammapy.modeling.models.PiecewiseNormSpatialModel.copy", false]], "copy() (gammapy.modeling.models.piecewisenormspectralmodel method)": [[253, "gammapy.modeling.models.PiecewiseNormSpectralModel.copy", false]], "copy() (gammapy.modeling.models.pointspatialmodel method)": [[254, "gammapy.modeling.models.PointSpatialModel.copy", false]], "copy() (gammapy.modeling.models.powerlaw2spectralmodel method)": [[255, "gammapy.modeling.models.PowerLaw2SpectralModel.copy", false]], "copy() (gammapy.modeling.models.powerlawnormspectralmodel method)": [[256, "gammapy.modeling.models.PowerLawNormSpectralModel.copy", false]], "copy() (gammapy.modeling.models.powerlawspectralmodel method)": [[257, "gammapy.modeling.models.PowerLawSpectralModel.copy", false]], "copy() (gammapy.modeling.models.powerlawtemporalmodel method)": [[258, "gammapy.modeling.models.PowerLawTemporalModel.copy", false]], "copy() (gammapy.modeling.models.prior method)": [[259, "gammapy.modeling.models.Prior.copy", false]], "copy() (gammapy.modeling.models.scalespectralmodel method)": [[262, "gammapy.modeling.models.ScaleSpectralModel.copy", false]], "copy() (gammapy.modeling.models.shell2spatialmodel method)": [[263, "gammapy.modeling.models.Shell2SpatialModel.copy", false]], "copy() (gammapy.modeling.models.shellspatialmodel method)": [[264, "gammapy.modeling.models.ShellSpatialModel.copy", false]], "copy() (gammapy.modeling.models.sinetemporalmodel method)": [[265, "gammapy.modeling.models.SineTemporalModel.copy", false]], "copy() (gammapy.modeling.models.skymodel method)": [[266, "gammapy.modeling.models.SkyModel.copy", false]], "copy() (gammapy.modeling.models.smoothbrokenpowerlawspectralmodel method)": [[267, "gammapy.modeling.models.SmoothBrokenPowerLawSpectralModel.copy", false]], "copy() (gammapy.modeling.models.spatialmodel method)": [[268, "gammapy.modeling.models.SpatialModel.copy", false]], "copy() (gammapy.modeling.models.spectralmodel method)": [[269, "gammapy.modeling.models.SpectralModel.copy", false]], "copy() (gammapy.modeling.models.superexpcutoffpowerlaw3fglspectralmodel method)": [[270, "gammapy.modeling.models.SuperExpCutoffPowerLaw3FGLSpectralModel.copy", false]], "copy() (gammapy.modeling.models.superexpcutoffpowerlaw4fgldr3spectralmodel method)": [[271, "gammapy.modeling.models.SuperExpCutoffPowerLaw4FGLDR3SpectralModel.copy", false]], "copy() (gammapy.modeling.models.superexpcutoffpowerlaw4fglspectralmodel method)": [[272, "gammapy.modeling.models.SuperExpCutoffPowerLaw4FGLSpectralModel.copy", false]], "copy() (gammapy.modeling.models.templatendspatialmodel method)": [[274, "gammapy.modeling.models.TemplateNDSpatialModel.copy", false]], "copy() (gammapy.modeling.models.templatendspectralmodel method)": [[275, "gammapy.modeling.models.TemplateNDSpectralModel.copy", false]], "copy() (gammapy.modeling.models.templatenpredmodel method)": [[276, "gammapy.modeling.models.TemplateNPredModel.copy", false]], "copy() (gammapy.modeling.models.templatephasecurvetemporalmodel method)": [[277, "gammapy.modeling.models.TemplatePhaseCurveTemporalModel.copy", false]], "copy() (gammapy.modeling.models.templatespatialmodel method)": [[278, "gammapy.modeling.models.TemplateSpatialModel.copy", false]], "copy() (gammapy.modeling.models.templatespectralmodel method)": [[279, "gammapy.modeling.models.TemplateSpectralModel.copy", false]], "copy() (gammapy.modeling.models.temporalmodel method)": [[280, "gammapy.modeling.models.TemporalModel.copy", false]], "copy() (gammapy.modeling.models.uniformprior method)": [[281, "gammapy.modeling.models.UniformPrior.copy", false]], "copy() (gammapy.modeling.parameter method)": [[216, "gammapy.modeling.Parameter.copy", false]], "copy() (gammapy.modeling.parameters method)": [[217, "gammapy.modeling.Parameters.copy", false]], "copy() (gammapy.modeling.priorparameter method)": [[218, "gammapy.modeling.PriorParameter.copy", false]], "copy() (gammapy.modeling.priorparameters method)": [[219, "gammapy.modeling.PriorParameters.copy", false]], "copy_obs() (gammapy.data.datastore method)": [[82, "gammapy.data.DataStore.copy_obs", false]], "correlation (gammapy.modeling.covariance attribute)": [[211, "gammapy.modeling.Covariance.correlation", false]], "correlation_radius (gammapy.estimators.excessmapestimator attribute)": [[124, "gammapy.estimators.ExcessMapEstimator.correlation_radius", false]], "count() (gammapy.data.observations method)": [[92, "gammapy.data.Observations.count", false]], "count() (gammapy.datasets.datasets method)": [[100, "gammapy.datasets.Datasets.count", false]], "count() (gammapy.maps.mapaxes method)": [[199, "gammapy.maps.MapAxes.count", false]], "count() (gammapy.modeling.models.datasetmodels method)": [[226, "gammapy.modeling.models.DatasetModels.count", false]], "count() (gammapy.modeling.models.models method)": [[250, "gammapy.modeling.models.Models.count", false]], "count() (gammapy.modeling.parameters method)": [[217, "gammapy.modeling.Parameters.count", false]], "count() (gammapy.modeling.priorparameters method)": [[219, "gammapy.modeling.PriorParameters.count", false]], "counts (gammapy.datasets.mapdataset attribute)": [[103, "gammapy.datasets.MapDataset.counts", false]], "counts (gammapy.datasets.mapdatasetonoff attribute)": [[106, "gammapy.datasets.MapDatasetOnOff.counts", false]], "counts (gammapy.datasets.spectrumdataset attribute)": [[110, "gammapy.datasets.SpectrumDataset.counts", false]], "counts (gammapy.datasets.spectrumdatasetonoff attribute)": [[111, "gammapy.datasets.SpectrumDatasetOnOff.counts", false]], "counts (gammapy.estimators.fluxmaps attribute)": [[125, "gammapy.estimators.FluxMaps.counts", false]], "counts (gammapy.estimators.fluxpoints attribute)": [[127, "gammapy.estimators.FluxPoints.counts", false]], "cov_matrix (gammapy.astro.population.casebattacharya1998 attribute)": [[28, "gammapy.astro.population.CaseBattacharya1998.cov_matrix", false]], "cov_matrix (gammapy.astro.population.exponential attribute)": [[29, "gammapy.astro.population.Exponential.cov_matrix", false]], "cov_matrix (gammapy.astro.population.faucherkaspi2006 attribute)": [[30, "gammapy.astro.population.FaucherKaspi2006.cov_matrix", false]], "cov_matrix (gammapy.astro.population.faucherkaspi2006velocitybimodal attribute)": [[31, "gammapy.astro.population.FaucherKaspi2006VelocityBimodal.cov_matrix", false]], "cov_matrix (gammapy.astro.population.faucherkaspi2006velocitymaxwellian attribute)": [[32, "gammapy.astro.population.FaucherKaspi2006VelocityMaxwellian.cov_matrix", false]], "cov_matrix (gammapy.astro.population.lorimer2006 attribute)": [[35, "gammapy.astro.population.Lorimer2006.cov_matrix", false]], "cov_matrix (gammapy.astro.population.paczynski1990 attribute)": [[36, "gammapy.astro.population.Paczynski1990.cov_matrix", false]], "cov_matrix (gammapy.astro.population.paczynski1990velocity attribute)": [[37, "gammapy.astro.population.Paczynski1990Velocity.cov_matrix", false]], "cov_matrix (gammapy.astro.population.yusifovkucuk2004 attribute)": [[39, "gammapy.astro.population.YusifovKucuk2004.cov_matrix", false]], "cov_matrix (gammapy.astro.population.yusifovkucuk2004b attribute)": [[40, "gammapy.astro.population.YusifovKucuk2004B.cov_matrix", false]], "covariance (class in gammapy.modeling)": [[211, "gammapy.modeling.Covariance", false]], "covariance (gammapy.astro.darkmatter.darkmatterannihilationspectralmodel attribute)": [[19, "gammapy.astro.darkmatter.DarkMatterAnnihilationSpectralModel.covariance", false]], "covariance (gammapy.astro.darkmatter.darkmatterdecayspectralmodel attribute)": [[20, "gammapy.astro.darkmatter.DarkMatterDecaySpectralModel.covariance", false]], "covariance (gammapy.astro.darkmatter.primaryflux attribute)": [[26, "gammapy.astro.darkmatter.PrimaryFlux.covariance", false]], "covariance (gammapy.modeling.models.brokenpowerlawspectralmodel attribute)": [[220, "gammapy.modeling.models.BrokenPowerLawSpectralModel.covariance", false]], "covariance (gammapy.modeling.models.compoundspectralmodel attribute)": [[221, "gammapy.modeling.models.CompoundSpectralModel.covariance", false]], "covariance (gammapy.modeling.models.constantfluxspatialmodel attribute)": [[222, "gammapy.modeling.models.ConstantFluxSpatialModel.covariance", false]], "covariance (gammapy.modeling.models.constantspatialmodel attribute)": [[223, "gammapy.modeling.models.ConstantSpatialModel.covariance", false]], "covariance (gammapy.modeling.models.constantspectralmodel attribute)": [[224, "gammapy.modeling.models.ConstantSpectralModel.covariance", false]], "covariance (gammapy.modeling.models.constanttemporalmodel attribute)": [[225, "gammapy.modeling.models.ConstantTemporalModel.covariance", false]], "covariance (gammapy.modeling.models.datasetmodels attribute)": [[226, "gammapy.modeling.models.DatasetModels.covariance", false]], "covariance (gammapy.modeling.models.diskspatialmodel attribute)": [[227, "gammapy.modeling.models.DiskSpatialModel.covariance", false]], "covariance (gammapy.modeling.models.eblabsorptionnormspectralmodel attribute)": [[228, "gammapy.modeling.models.EBLAbsorptionNormSpectralModel.covariance", false]], "covariance (gammapy.modeling.models.expcutoffpowerlaw3fglspectralmodel attribute)": [[230, "gammapy.modeling.models.ExpCutoffPowerLaw3FGLSpectralModel.covariance", false]], "covariance (gammapy.modeling.models.expcutoffpowerlawnormspectralmodel attribute)": [[231, "gammapy.modeling.models.ExpCutoffPowerLawNormSpectralModel.covariance", false]], "covariance (gammapy.modeling.models.expcutoffpowerlawspectralmodel attribute)": [[232, "gammapy.modeling.models.ExpCutoffPowerLawSpectralModel.covariance", false]], "covariance (gammapy.modeling.models.expdecaytemporalmodel attribute)": [[233, "gammapy.modeling.models.ExpDecayTemporalModel.covariance", false]], "covariance (gammapy.modeling.models.fovbackgroundmodel attribute)": [[234, "gammapy.modeling.models.FoVBackgroundModel.covariance", false]], "covariance (gammapy.modeling.models.gaussianprior attribute)": [[235, "gammapy.modeling.models.GaussianPrior.covariance", false]], "covariance (gammapy.modeling.models.gaussianspatialmodel attribute)": [[236, "gammapy.modeling.models.GaussianSpatialModel.covariance", false]], "covariance (gammapy.modeling.models.gaussianspectralmodel attribute)": [[237, "gammapy.modeling.models.GaussianSpectralModel.covariance", false]], "covariance (gammapy.modeling.models.gaussiantemporalmodel attribute)": [[238, "gammapy.modeling.models.GaussianTemporalModel.covariance", false]], "covariance (gammapy.modeling.models.generalizedgaussianspatialmodel attribute)": [[239, "gammapy.modeling.models.GeneralizedGaussianSpatialModel.covariance", false]], "covariance (gammapy.modeling.models.generalizedgaussiantemporalmodel attribute)": [[240, "gammapy.modeling.models.GeneralizedGaussianTemporalModel.covariance", false]], "covariance (gammapy.modeling.models.lightcurvetemplatetemporalmodel attribute)": [[241, "gammapy.modeling.models.LightCurveTemplateTemporalModel.covariance", false]], "covariance (gammapy.modeling.models.lineartemporalmodel attribute)": [[242, "gammapy.modeling.models.LinearTemporalModel.covariance", false]], "covariance (gammapy.modeling.models.logparabolanormspectralmodel attribute)": [[243, "gammapy.modeling.models.LogParabolaNormSpectralModel.covariance", false]], "covariance (gammapy.modeling.models.logparabolaspectralmodel attribute)": [[244, "gammapy.modeling.models.LogParabolaSpectralModel.covariance", false]], "covariance (gammapy.modeling.models.loguniformprior attribute)": [[245, "gammapy.modeling.models.LogUniformPrior.covariance", false]], "covariance (gammapy.modeling.models.meyercrabspectralmodel attribute)": [[247, "gammapy.modeling.models.MeyerCrabSpectralModel.covariance", false]], "covariance (gammapy.modeling.models.modelbase attribute)": [[249, "gammapy.modeling.models.ModelBase.covariance", false]], "covariance (gammapy.modeling.models.models attribute)": [[250, "gammapy.modeling.models.Models.covariance", false]], "covariance (gammapy.modeling.models.naimaspectralmodel attribute)": [[251, "gammapy.modeling.models.NaimaSpectralModel.covariance", false]], "covariance (gammapy.modeling.models.piecewisenormspatialmodel attribute)": [[252, "gammapy.modeling.models.PiecewiseNormSpatialModel.covariance", false]], "covariance (gammapy.modeling.models.piecewisenormspectralmodel attribute)": [[253, "gammapy.modeling.models.PiecewiseNormSpectralModel.covariance", false]], "covariance (gammapy.modeling.models.pointspatialmodel attribute)": [[254, "gammapy.modeling.models.PointSpatialModel.covariance", false]], "covariance (gammapy.modeling.models.powerlaw2spectralmodel attribute)": [[255, "gammapy.modeling.models.PowerLaw2SpectralModel.covariance", false]], "covariance (gammapy.modeling.models.powerlawnormspectralmodel attribute)": [[256, "gammapy.modeling.models.PowerLawNormSpectralModel.covariance", false]], "covariance (gammapy.modeling.models.powerlawspectralmodel attribute)": [[257, "gammapy.modeling.models.PowerLawSpectralModel.covariance", false]], "covariance (gammapy.modeling.models.powerlawtemporalmodel attribute)": [[258, "gammapy.modeling.models.PowerLawTemporalModel.covariance", false]], "covariance (gammapy.modeling.models.prior attribute)": [[259, "gammapy.modeling.models.Prior.covariance", false]], "covariance (gammapy.modeling.models.scalespectralmodel attribute)": [[262, "gammapy.modeling.models.ScaleSpectralModel.covariance", false]], "covariance (gammapy.modeling.models.shell2spatialmodel attribute)": [[263, "gammapy.modeling.models.Shell2SpatialModel.covariance", false]], "covariance (gammapy.modeling.models.shellspatialmodel attribute)": [[264, "gammapy.modeling.models.ShellSpatialModel.covariance", false]], "covariance (gammapy.modeling.models.sinetemporalmodel attribute)": [[265, "gammapy.modeling.models.SineTemporalModel.covariance", false]], "covariance (gammapy.modeling.models.skymodel attribute)": [[266, "gammapy.modeling.models.SkyModel.covariance", false]], "covariance (gammapy.modeling.models.smoothbrokenpowerlawspectralmodel attribute)": [[267, "gammapy.modeling.models.SmoothBrokenPowerLawSpectralModel.covariance", false]], "covariance (gammapy.modeling.models.spatialmodel attribute)": [[268, "gammapy.modeling.models.SpatialModel.covariance", false]], "covariance (gammapy.modeling.models.spectralmodel attribute)": [[269, "gammapy.modeling.models.SpectralModel.covariance", false]], "covariance (gammapy.modeling.models.superexpcutoffpowerlaw3fglspectralmodel attribute)": [[270, "gammapy.modeling.models.SuperExpCutoffPowerLaw3FGLSpectralModel.covariance", false]], "covariance (gammapy.modeling.models.superexpcutoffpowerlaw4fgldr3spectralmodel attribute)": [[271, "gammapy.modeling.models.SuperExpCutoffPowerLaw4FGLDR3SpectralModel.covariance", false]], "covariance (gammapy.modeling.models.superexpcutoffpowerlaw4fglspectralmodel attribute)": [[272, "gammapy.modeling.models.SuperExpCutoffPowerLaw4FGLSpectralModel.covariance", false]], "covariance (gammapy.modeling.models.templatendspatialmodel attribute)": [[274, "gammapy.modeling.models.TemplateNDSpatialModel.covariance", false]], "covariance (gammapy.modeling.models.templatendspectralmodel attribute)": [[275, "gammapy.modeling.models.TemplateNDSpectralModel.covariance", false]], "covariance (gammapy.modeling.models.templatenpredmodel attribute)": [[276, "gammapy.modeling.models.TemplateNPredModel.covariance", false]], "covariance (gammapy.modeling.models.templatephasecurvetemporalmodel attribute)": [[277, "gammapy.modeling.models.TemplatePhaseCurveTemporalModel.covariance", false]], "covariance (gammapy.modeling.models.templatespatialmodel attribute)": [[278, "gammapy.modeling.models.TemplateSpatialModel.covariance", false]], "covariance (gammapy.modeling.models.templatespectralmodel attribute)": [[279, "gammapy.modeling.models.TemplateSpectralModel.covariance", false]], "covariance (gammapy.modeling.models.temporalmodel attribute)": [[280, "gammapy.modeling.models.TemporalModel.covariance", false]], "covariance (gammapy.modeling.models.uniformprior attribute)": [[281, "gammapy.modeling.models.UniformPrior.covariance", false]], "covariance() (gammapy.modeling.fit method)": [[213, "gammapy.modeling.Fit.covariance", false]], "covariance_result (gammapy.modeling.fitresult attribute)": [[214, "gammapy.modeling.FitResult.covariance_result", false]], "covarianceresult (class in gammapy.modeling)": [[212, "gammapy.modeling.CovarianceResult", false]], "create() (gammapy.data.gti class method)": [[86, "gammapy.data.GTI.create", false]], "create() (gammapy.data.observation class method)": [[88, "gammapy.data.Observation.create", false]], "create() (gammapy.datasets.mapdataset class method)": [[103, "gammapy.datasets.MapDataset.create", false]], "create() (gammapy.datasets.mapdatasetonoff class method)": [[106, "gammapy.datasets.MapDatasetOnOff.create", false]], "create() (gammapy.datasets.spectrumdataset class method)": [[110, "gammapy.datasets.SpectrumDataset.create", false]], "create() (gammapy.datasets.spectrumdatasetonoff class method)": [[111, "gammapy.datasets.SpectrumDatasetOnOff.create", false]], "create() (gammapy.maps.hpxgeom class method)": [[194, "gammapy.maps.HpxGeom.create", false]], "create() (gammapy.maps.hpxmap class method)": [[195, "gammapy.maps.HpxMap.create", false]], "create() (gammapy.maps.hpxndmap class method)": [[196, "gammapy.maps.HpxNDMap.create", false]], "create() (gammapy.maps.map static method)": [[198, "gammapy.maps.Map.create", false]], "create() (gammapy.maps.mapcoord class method)": [[201, "gammapy.maps.MapCoord.create", false]], "create() (gammapy.maps.regiongeom class method)": [[203, "gammapy.maps.RegionGeom.create", false]], "create() (gammapy.maps.regionndmap class method)": [[204, "gammapy.maps.RegionNDMap.create", false]], "create() (gammapy.maps.wcsgeom class method)": [[206, "gammapy.maps.WcsGeom.create", false]], "create() (gammapy.maps.wcsmap class method)": [[207, "gammapy.maps.WcsMap.create", false]], "create() (gammapy.maps.wcsndmap class method)": [[208, "gammapy.maps.WcsNDMap.create", false]], "create() (gammapy.modeling.models.model static method)": [[248, "gammapy.modeling.models.Model.create", false]], "create() (gammapy.modeling.models.skymodel class method)": [[266, "gammapy.modeling.models.SkyModel.create", false]], "create_cosmic_ray_spectral_model() (in module gammapy.modeling.models)": [[282, "gammapy.modeling.models.create_cosmic_ray_spectral_model", false]], "create_crab_spectral_model() (in module gammapy.modeling.models)": [[283, "gammapy.modeling.models.create_crab_spectral_model", false]], "create_dataset() (gammapy.datasets.fermipydatasetsreader static method)": [[101, "gammapy.datasets.FermipyDatasetsReader.create_dataset", false]], "create_empty_map_dataset_from_irfs() (in module gammapy.datasets)": [[113, "gammapy.datasets.create_empty_map_dataset_from_irfs", false]], "create_fermi_isotropic_diffuse_model() (in module gammapy.modeling.models)": [[284, "gammapy.modeling.models.create_fermi_isotropic_diffuse_model", false]], "create_map_dataset_from_dl4() (in module gammapy.datasets.utils)": [[118, "gammapy.datasets.utils.create_map_dataset_from_dl4", false]], "create_map_dataset_from_observation() (in module gammapy.datasets)": [[114, "gammapy.datasets.create_map_dataset_from_observation", false]], "create_map_dataset_geoms() (in module gammapy.datasets)": [[115, "gammapy.datasets.create_map_dataset_geoms", false]], "create_mask() (gammapy.maps.geom method)": [[193, "gammapy.maps.Geom.create_mask", false]], "create_mask() (gammapy.maps.hpxgeom method)": [[194, "gammapy.maps.HpxGeom.create_mask", false]], "create_mask() (gammapy.maps.regiongeom method)": [[203, "gammapy.maps.RegionGeom.create_mask", false]], "create_mask() (gammapy.maps.wcsgeom method)": [[206, "gammapy.maps.WcsGeom.create_mask", false]], "crop() (gammapy.maps.geom method)": [[193, "gammapy.maps.Geom.crop", false]], "crop() (gammapy.maps.hpxgeom method)": [[194, "gammapy.maps.HpxGeom.crop", false]], "crop() (gammapy.maps.hpxmap method)": [[195, "gammapy.maps.HpxMap.crop", false]], "crop() (gammapy.maps.hpxndmap method)": [[196, "gammapy.maps.HpxNDMap.crop", false]], "crop() (gammapy.maps.map method)": [[198, "gammapy.maps.Map.crop", false]], "crop() (gammapy.maps.regiongeom method)": [[203, "gammapy.maps.RegionGeom.crop", false]], "crop() (gammapy.maps.regionndmap method)": [[204, "gammapy.maps.RegionNDMap.crop", false]], "crop() (gammapy.maps.wcsgeom method)": [[206, "gammapy.maps.WcsGeom.crop", false]], "crop() (gammapy.maps.wcsmap method)": [[207, "gammapy.maps.WcsMap.crop", false]], "crop() (gammapy.maps.wcsndmap method)": [[208, "gammapy.maps.WcsNDMap.crop", false]], "cstat() (in module gammapy.stats)": [[300, "gammapy.stats.cstat", false]], "cumsum() (gammapy.irf.background2d method)": [[149, "gammapy.irf.Background2D.cumsum", false]], "cumsum() (gammapy.irf.background3d method)": [[150, "gammapy.irf.Background3D.cumsum", false]], "cumsum() (gammapy.irf.backgroundirf method)": [[151, "gammapy.irf.BackgroundIRF.cumsum", false]], "cumsum() (gammapy.irf.edispkernel method)": [[152, "gammapy.irf.EDispKernel.cumsum", false]], "cumsum() (gammapy.irf.effectiveareatable2d method)": [[155, "gammapy.irf.EffectiveAreaTable2D.cumsum", false]], "cumsum() (gammapy.irf.energydependentmultigausspsf method)": [[156, "gammapy.irf.EnergyDependentMultiGaussPSF.cumsum", false]], "cumsum() (gammapy.irf.energydispersion2d method)": [[157, "gammapy.irf.EnergyDispersion2D.cumsum", false]], "cumsum() (gammapy.irf.irf method)": [[159, "gammapy.irf.IRF.cumsum", false]], "cumsum() (gammapy.irf.parametricpsf method)": [[166, "gammapy.irf.ParametricPSF.cumsum", false]], "cumsum() (gammapy.irf.psf3d method)": [[162, "gammapy.irf.PSF3D.cumsum", false]], "cumsum() (gammapy.irf.psfking method)": [[164, "gammapy.irf.PSFKing.cumsum", false]], "cumsum() (gammapy.irf.radmax2d method)": [[167, "gammapy.irf.RadMax2D.cumsum", false]], "cumsum() (gammapy.maps.hpxmap method)": [[195, "gammapy.maps.HpxMap.cumsum", false]], "cumsum() (gammapy.maps.hpxndmap method)": [[196, "gammapy.maps.HpxNDMap.cumsum", false]], "cumsum() (gammapy.maps.map method)": [[198, "gammapy.maps.Map.cumsum", false]], "cumsum() (gammapy.maps.regionndmap method)": [[204, "gammapy.maps.RegionNDMap.cumsum", false]], "cumsum() (gammapy.maps.wcsmap method)": [[207, "gammapy.maps.WcsMap.cumsum", false]], "cumsum() (gammapy.maps.wcsndmap method)": [[208, "gammapy.maps.WcsNDMap.cumsum", false]], "cutout() (gammapy.datasets.mapdataset method)": [[103, "gammapy.datasets.MapDataset.cutout", false]], "cutout() (gammapy.datasets.mapdatasetonoff method)": [[106, "gammapy.datasets.MapDatasetOnOff.cutout", false]], "cutout() (gammapy.datasets.spectrumdataset method)": [[110, "gammapy.datasets.SpectrumDataset.cutout", false]], "cutout() (gammapy.datasets.spectrumdatasetonoff method)": [[111, "gammapy.datasets.SpectrumDatasetOnOff.cutout", false]], "cutout() (gammapy.irf.edispkernelmap method)": [[153, "gammapy.irf.EDispKernelMap.cutout", false]], "cutout() (gammapy.irf.edispmap method)": [[154, "gammapy.irf.EDispMap.cutout", false]], "cutout() (gammapy.irf.irfmap method)": [[160, "gammapy.irf.IRFMap.cutout", false]], "cutout() (gammapy.irf.psfmap method)": [[165, "gammapy.irf.PSFMap.cutout", false]], "cutout() (gammapy.irf.recopsfmap method)": [[168, "gammapy.irf.RecoPSFMap.cutout", false]], "cutout() (gammapy.maps.hpxgeom method)": [[194, "gammapy.maps.HpxGeom.cutout", false]], "cutout() (gammapy.maps.hpxndmap method)": [[196, "gammapy.maps.HpxNDMap.cutout", false]], "cutout() (gammapy.maps.regionndmap method)": [[204, "gammapy.maps.RegionNDMap.cutout", false]], "cutout() (gammapy.maps.wcsgeom method)": [[206, "gammapy.maps.WcsGeom.cutout", false]], "cutout() (gammapy.maps.wcsndmap method)": [[208, "gammapy.maps.WcsNDMap.cutout", false]], "cutout() (gammapy.modeling.models.templatenpredmodel method)": [[276, "gammapy.modeling.models.TemplateNPredModel.cutout", false]], "cutout_and_mask_region() (gammapy.maps.wcsndmap method)": [[208, "gammapy.maps.WcsNDMap.cutout_and_mask_region", false]], "cutout_slices() (gammapy.maps.wcsgeom method)": [[206, "gammapy.maps.WcsGeom.cutout_slices", false]], "d_sun_to_galactic_center (in module gammapy.utils.coordinates)": [[310, "gammapy.utils.coordinates.D_SUN_TO_GALACTIC_CENTER", false]], "darkmatterannihilationspectralmodel (class in gammapy.astro.darkmatter)": [[19, "gammapy.astro.darkmatter.DarkMatterAnnihilationSpectralModel", false]], "darkmatterdecayspectralmodel (class in gammapy.astro.darkmatter)": [[20, "gammapy.astro.darkmatter.DarkMatterDecaySpectralModel", false]], "data (gammapy.irf.background2d attribute)": [[149, "gammapy.irf.Background2D.data", false]], "data (gammapy.irf.background3d attribute)": [[150, "gammapy.irf.Background3D.data", false]], "data (gammapy.irf.backgroundirf attribute)": [[151, "gammapy.irf.BackgroundIRF.data", false]], "data (gammapy.irf.edispkernel attribute)": [[152, "gammapy.irf.EDispKernel.data", false]], "data (gammapy.irf.effectiveareatable2d attribute)": [[155, "gammapy.irf.EffectiveAreaTable2D.data", false]], "data (gammapy.irf.energydependentmultigausspsf attribute)": [[156, "gammapy.irf.EnergyDependentMultiGaussPSF.data", false]], "data (gammapy.irf.energydispersion2d attribute)": [[157, "gammapy.irf.EnergyDispersion2D.data", false]], "data (gammapy.irf.irf attribute)": [[159, "gammapy.irf.IRF.data", false]], "data (gammapy.irf.parametricpsf attribute)": [[166, "gammapy.irf.ParametricPSF.data", false]], "data (gammapy.irf.psf3d attribute)": [[162, "gammapy.irf.PSF3D.data", false]], "data (gammapy.irf.psfkernel attribute)": [[163, "gammapy.irf.PSFKernel.data", false]], "data (gammapy.irf.psfking attribute)": [[164, "gammapy.irf.PSFKing.data", false]], "data (gammapy.irf.radmax2d attribute)": [[167, "gammapy.irf.RadMax2D.data", false]], "data (gammapy.maps.hpxmap attribute)": [[195, "gammapy.maps.HpxMap.data", false]], "data (gammapy.maps.hpxndmap attribute)": [[196, "gammapy.maps.HpxNDMap.data", false]], "data (gammapy.maps.map attribute)": [[198, "gammapy.maps.Map.data", false]], "data (gammapy.maps.regionndmap attribute)": [[204, "gammapy.maps.RegionNDMap.data", false]], "data (gammapy.maps.wcsmap attribute)": [[207, "gammapy.maps.WcsMap.data", false]], "data (gammapy.maps.wcsndmap attribute)": [[208, "gammapy.maps.WcsNDMap.data", false]], "data (gammapy.modeling.covariance attribute)": [[211, "gammapy.modeling.Covariance.data", false]], "data_nbytes() (gammapy.maps.geom method)": [[193, "gammapy.maps.Geom.data_nbytes", false]], "data_nbytes() (gammapy.maps.hpxgeom method)": [[194, "gammapy.maps.HpxGeom.data_nbytes", false]], "data_nbytes() (gammapy.maps.regiongeom method)": [[203, "gammapy.maps.RegionGeom.data_nbytes", false]], "data_nbytes() (gammapy.maps.wcsgeom method)": [[206, "gammapy.maps.WcsGeom.data_nbytes", false]], "data_shape (gammapy.datasets.mapdataset attribute)": [[103, "gammapy.datasets.MapDataset.data_shape", false]], "data_shape (gammapy.datasets.mapdatasetonoff attribute)": [[106, "gammapy.datasets.MapDatasetOnOff.data_shape", false]], "data_shape (gammapy.datasets.spectrumdataset attribute)": [[110, "gammapy.datasets.SpectrumDataset.data_shape", false]], "data_shape (gammapy.datasets.spectrumdatasetonoff attribute)": [[111, "gammapy.datasets.SpectrumDatasetOnOff.data_shape", false]], "data_shape (gammapy.maps.geom attribute)": [[193, "gammapy.maps.Geom.data_shape", false]], "data_shape (gammapy.maps.hpxgeom attribute)": [[194, "gammapy.maps.HpxGeom.data_shape", false]], "data_shape (gammapy.maps.regiongeom attribute)": [[203, "gammapy.maps.RegionGeom.data_shape", false]], "data_shape (gammapy.maps.wcsgeom attribute)": [[206, "gammapy.maps.WcsGeom.data_shape", false]], "data_shape() (gammapy.datasets.fluxpointsdataset method)": [[102, "gammapy.datasets.FluxPointsDataset.data_shape", false]], "data_shape_axes (gammapy.maps.hpxgeom attribute)": [[194, "gammapy.maps.HpxGeom.data_shape_axes", false]], "data_shape_axes (gammapy.maps.regiongeom attribute)": [[203, "gammapy.maps.RegionGeom.data_shape_axes", false]], "data_shape_axes (gammapy.maps.wcsgeom attribute)": [[206, "gammapy.maps.WcsGeom.data_shape_axes", false]], "data_shape_image (gammapy.maps.wcsgeom attribute)": [[206, "gammapy.maps.WcsGeom.data_shape_image", false]], "dataset": [[581, "term-Dataset", true]], "dataset (class in gammapy.datasets)": [[99, "gammapy.datasets.Dataset", false]], "dataset_registry (in module gammapy.datasets)": [[98, "gammapy.datasets.DATASET_REGISTRY", false]], "datasetmodels (class in gammapy.modeling.models)": [[226, "gammapy.modeling.models.DatasetModels", false]], "datasets (class in gammapy.datasets)": [[100, "gammapy.datasets.Datasets", false]], "datasetsmaker (class in gammapy.makers)": [[171, "gammapy.makers.DatasetsMaker", false]], "datastore (class in gammapy.data)": [[82, "gammapy.data.DataStore", false]], "deepcopy() (gammapy.astro.population.casebattacharya1998 method)": [[28, "gammapy.astro.population.CaseBattacharya1998.deepcopy", false]], "deepcopy() (gammapy.astro.population.exponential method)": [[29, "gammapy.astro.population.Exponential.deepcopy", false]], "deepcopy() (gammapy.astro.population.faucherkaspi2006 method)": [[30, "gammapy.astro.population.FaucherKaspi2006.deepcopy", false]], "deepcopy() (gammapy.astro.population.faucherkaspi2006velocitybimodal method)": [[31, "gammapy.astro.population.FaucherKaspi2006VelocityBimodal.deepcopy", false]], "deepcopy() (gammapy.astro.population.faucherkaspi2006velocitymaxwellian method)": [[32, "gammapy.astro.population.FaucherKaspi2006VelocityMaxwellian.deepcopy", false]], "deepcopy() (gammapy.astro.population.lorimer2006 method)": [[35, "gammapy.astro.population.Lorimer2006.deepcopy", false]], "deepcopy() (gammapy.astro.population.paczynski1990 method)": [[36, "gammapy.astro.population.Paczynski1990.deepcopy", false]], "deepcopy() (gammapy.astro.population.paczynski1990velocity method)": [[37, "gammapy.astro.population.Paczynski1990Velocity.deepcopy", false]], "deepcopy() (gammapy.astro.population.yusifovkucuk2004 method)": [[39, "gammapy.astro.population.YusifovKucuk2004.deepcopy", false]], "deepcopy() (gammapy.astro.population.yusifovkucuk2004b method)": [[40, "gammapy.astro.population.YusifovKucuk2004B.deepcopy", false]], "default_alpha (gammapy.astro.darkmatter.einastoprofile attribute)": [[21, "gammapy.astro.darkmatter.EinastoProfile.DEFAULT_ALPHA", false]], "default_alpha (gammapy.astro.darkmatter.zhaoprofile attribute)": [[27, "gammapy.astro.darkmatter.ZhaoProfile.DEFAULT_ALPHA", false]], "default_beta (gammapy.astro.darkmatter.zhaoprofile attribute)": [[27, "gammapy.astro.darkmatter.ZhaoProfile.DEFAULT_BETA", false]], "default_gamma (gammapy.astro.darkmatter.zhaoprofile attribute)": [[27, "gammapy.astro.darkmatter.ZhaoProfile.DEFAULT_GAMMA", false]], "default_hdu_table (gammapy.data.datastore attribute)": [[82, "gammapy.data.DataStore.DEFAULT_HDU_TABLE", false]], "default_interp_kwargs (gammapy.irf.background2d attribute)": [[149, "gammapy.irf.Background2D.default_interp_kwargs", false]], "default_interp_kwargs (gammapy.irf.background3d attribute)": [[150, "gammapy.irf.Background3D.default_interp_kwargs", false]], "default_interp_kwargs (gammapy.irf.backgroundirf attribute)": [[151, "gammapy.irf.BackgroundIRF.default_interp_kwargs", false]], "default_interp_kwargs (gammapy.irf.edispkernel attribute)": [[152, "gammapy.irf.EDispKernel.default_interp_kwargs", false]], "default_interp_kwargs (gammapy.irf.effectiveareatable2d attribute)": [[155, "gammapy.irf.EffectiveAreaTable2D.default_interp_kwargs", false]], "default_interp_kwargs (gammapy.irf.energydependentmultigausspsf attribute)": [[156, "gammapy.irf.EnergyDependentMultiGaussPSF.default_interp_kwargs", false]], "default_interp_kwargs (gammapy.irf.energydispersion2d attribute)": [[157, "gammapy.irf.EnergyDispersion2D.default_interp_kwargs", false]], "default_interp_kwargs (gammapy.irf.irf attribute)": [[159, "gammapy.irf.IRF.default_interp_kwargs", false]], "default_interp_kwargs (gammapy.irf.parametricpsf attribute)": [[166, "gammapy.irf.ParametricPSF.default_interp_kwargs", false]], "default_interp_kwargs (gammapy.irf.psf3d attribute)": [[162, "gammapy.irf.PSF3D.default_interp_kwargs", false]], "default_interp_kwargs (gammapy.irf.psfking attribute)": [[164, "gammapy.irf.PSFKing.default_interp_kwargs", false]], "default_interp_kwargs (gammapy.irf.radmax2d attribute)": [[167, "gammapy.irf.RadMax2D.default_interp_kwargs", false]], "default_obs_table (gammapy.data.datastore attribute)": [[82, "gammapy.data.DataStore.DEFAULT_OBS_TABLE", false]], "default_parameters (gammapy.astro.darkmatter.darkmatterannihilationspectralmodel attribute)": [[19, "gammapy.astro.darkmatter.DarkMatterAnnihilationSpectralModel.default_parameters", false]], "default_parameters (gammapy.astro.darkmatter.darkmatterdecayspectralmodel attribute)": [[20, "gammapy.astro.darkmatter.DarkMatterDecaySpectralModel.default_parameters", false]], "default_parameters (gammapy.astro.darkmatter.primaryflux attribute)": [[26, "gammapy.astro.darkmatter.PrimaryFlux.default_parameters", false]], "default_parameters (gammapy.modeling.models.brokenpowerlawspectralmodel attribute)": [[220, "gammapy.modeling.models.BrokenPowerLawSpectralModel.default_parameters", false]], "default_parameters (gammapy.modeling.models.compoundspectralmodel attribute)": [[221, "gammapy.modeling.models.CompoundSpectralModel.default_parameters", false]], "default_parameters (gammapy.modeling.models.constantfluxspatialmodel attribute)": [[222, "gammapy.modeling.models.ConstantFluxSpatialModel.default_parameters", false]], "default_parameters (gammapy.modeling.models.constantspatialmodel attribute)": [[223, "gammapy.modeling.models.ConstantSpatialModel.default_parameters", false]], "default_parameters (gammapy.modeling.models.constantspectralmodel attribute)": [[224, "gammapy.modeling.models.ConstantSpectralModel.default_parameters", false]], "default_parameters (gammapy.modeling.models.constanttemporalmodel attribute)": [[225, "gammapy.modeling.models.ConstantTemporalModel.default_parameters", false]], "default_parameters (gammapy.modeling.models.diskspatialmodel attribute)": [[227, "gammapy.modeling.models.DiskSpatialModel.default_parameters", false]], "default_parameters (gammapy.modeling.models.eblabsorptionnormspectralmodel attribute)": [[228, "gammapy.modeling.models.EBLAbsorptionNormSpectralModel.default_parameters", false]], "default_parameters (gammapy.modeling.models.expcutoffpowerlaw3fglspectralmodel attribute)": [[230, "gammapy.modeling.models.ExpCutoffPowerLaw3FGLSpectralModel.default_parameters", false]], "default_parameters (gammapy.modeling.models.expcutoffpowerlawnormspectralmodel attribute)": [[231, "gammapy.modeling.models.ExpCutoffPowerLawNormSpectralModel.default_parameters", false]], "default_parameters (gammapy.modeling.models.expcutoffpowerlawspectralmodel attribute)": [[232, "gammapy.modeling.models.ExpCutoffPowerLawSpectralModel.default_parameters", false]], "default_parameters (gammapy.modeling.models.expdecaytemporalmodel attribute)": [[233, "gammapy.modeling.models.ExpDecayTemporalModel.default_parameters", false]], "default_parameters (gammapy.modeling.models.fovbackgroundmodel attribute)": [[234, "gammapy.modeling.models.FoVBackgroundModel.default_parameters", false]], "default_parameters (gammapy.modeling.models.gaussianprior attribute)": [[235, "gammapy.modeling.models.GaussianPrior.default_parameters", false]], "default_parameters (gammapy.modeling.models.gaussianspatialmodel attribute)": [[236, "gammapy.modeling.models.GaussianSpatialModel.default_parameters", false]], "default_parameters (gammapy.modeling.models.gaussianspectralmodel attribute)": [[237, "gammapy.modeling.models.GaussianSpectralModel.default_parameters", false]], "default_parameters (gammapy.modeling.models.gaussiantemporalmodel attribute)": [[238, "gammapy.modeling.models.GaussianTemporalModel.default_parameters", false]], "default_parameters (gammapy.modeling.models.generalizedgaussianspatialmodel attribute)": [[239, "gammapy.modeling.models.GeneralizedGaussianSpatialModel.default_parameters", false]], "default_parameters (gammapy.modeling.models.generalizedgaussiantemporalmodel attribute)": [[240, "gammapy.modeling.models.GeneralizedGaussianTemporalModel.default_parameters", false]], "default_parameters (gammapy.modeling.models.lightcurvetemplatetemporalmodel attribute)": [[241, "gammapy.modeling.models.LightCurveTemplateTemporalModel.default_parameters", false]], "default_parameters (gammapy.modeling.models.lineartemporalmodel attribute)": [[242, "gammapy.modeling.models.LinearTemporalModel.default_parameters", false]], "default_parameters (gammapy.modeling.models.logparabolanormspectralmodel attribute)": [[243, "gammapy.modeling.models.LogParabolaNormSpectralModel.default_parameters", false]], "default_parameters (gammapy.modeling.models.logparabolaspectralmodel attribute)": [[244, "gammapy.modeling.models.LogParabolaSpectralModel.default_parameters", false]], "default_parameters (gammapy.modeling.models.loguniformprior attribute)": [[245, "gammapy.modeling.models.LogUniformPrior.default_parameters", false]], "default_parameters (gammapy.modeling.models.meyercrabspectralmodel attribute)": [[247, "gammapy.modeling.models.MeyerCrabSpectralModel.default_parameters", false]], "default_parameters (gammapy.modeling.models.naimaspectralmodel attribute)": [[251, "gammapy.modeling.models.NaimaSpectralModel.default_parameters", false]], "default_parameters (gammapy.modeling.models.piecewisenormspatialmodel attribute)": [[252, "gammapy.modeling.models.PiecewiseNormSpatialModel.default_parameters", false]], "default_parameters (gammapy.modeling.models.piecewisenormspectralmodel attribute)": [[253, "gammapy.modeling.models.PiecewiseNormSpectralModel.default_parameters", false]], "default_parameters (gammapy.modeling.models.pointspatialmodel attribute)": [[254, "gammapy.modeling.models.PointSpatialModel.default_parameters", false]], "default_parameters (gammapy.modeling.models.powerlaw2spectralmodel attribute)": [[255, "gammapy.modeling.models.PowerLaw2SpectralModel.default_parameters", false]], "default_parameters (gammapy.modeling.models.powerlawnormspectralmodel attribute)": [[256, "gammapy.modeling.models.PowerLawNormSpectralModel.default_parameters", false]], "default_parameters (gammapy.modeling.models.powerlawspectralmodel attribute)": [[257, "gammapy.modeling.models.PowerLawSpectralModel.default_parameters", false]], "default_parameters (gammapy.modeling.models.powerlawtemporalmodel attribute)": [[258, "gammapy.modeling.models.PowerLawTemporalModel.default_parameters", false]], "default_parameters (gammapy.modeling.models.prior attribute)": [[259, "gammapy.modeling.models.Prior.default_parameters", false]], "default_parameters (gammapy.modeling.models.scalespectralmodel attribute)": [[262, "gammapy.modeling.models.ScaleSpectralModel.default_parameters", false]], "default_parameters (gammapy.modeling.models.shell2spatialmodel attribute)": [[263, "gammapy.modeling.models.Shell2SpatialModel.default_parameters", false]], "default_parameters (gammapy.modeling.models.shellspatialmodel attribute)": [[264, "gammapy.modeling.models.ShellSpatialModel.default_parameters", false]], "default_parameters (gammapy.modeling.models.sinetemporalmodel attribute)": [[265, "gammapy.modeling.models.SineTemporalModel.default_parameters", false]], "default_parameters (gammapy.modeling.models.skymodel attribute)": [[266, "gammapy.modeling.models.SkyModel.default_parameters", false]], "default_parameters (gammapy.modeling.models.smoothbrokenpowerlawspectralmodel attribute)": [[267, "gammapy.modeling.models.SmoothBrokenPowerLawSpectralModel.default_parameters", false]], "default_parameters (gammapy.modeling.models.spatialmodel attribute)": [[268, "gammapy.modeling.models.SpatialModel.default_parameters", false]], "default_parameters (gammapy.modeling.models.spectralmodel attribute)": [[269, "gammapy.modeling.models.SpectralModel.default_parameters", false]], "default_parameters (gammapy.modeling.models.superexpcutoffpowerlaw3fglspectralmodel attribute)": [[270, "gammapy.modeling.models.SuperExpCutoffPowerLaw3FGLSpectralModel.default_parameters", false]], "default_parameters (gammapy.modeling.models.superexpcutoffpowerlaw4fgldr3spectralmodel attribute)": [[271, "gammapy.modeling.models.SuperExpCutoffPowerLaw4FGLDR3SpectralModel.default_parameters", false]], "default_parameters (gammapy.modeling.models.superexpcutoffpowerlaw4fglspectralmodel attribute)": [[272, "gammapy.modeling.models.SuperExpCutoffPowerLaw4FGLSpectralModel.default_parameters", false]], "default_parameters (gammapy.modeling.models.templatendspatialmodel attribute)": [[274, "gammapy.modeling.models.TemplateNDSpatialModel.default_parameters", false]], "default_parameters (gammapy.modeling.models.templatendspectralmodel attribute)": [[275, "gammapy.modeling.models.TemplateNDSpectralModel.default_parameters", false]], "default_parameters (gammapy.modeling.models.templatenpredmodel attribute)": [[276, "gammapy.modeling.models.TemplateNPredModel.default_parameters", false]], "default_parameters (gammapy.modeling.models.templatephasecurvetemporalmodel attribute)": [[277, "gammapy.modeling.models.TemplatePhaseCurveTemporalModel.default_parameters", false]], "default_parameters (gammapy.modeling.models.templatespatialmodel attribute)": [[278, "gammapy.modeling.models.TemplateSpatialModel.default_parameters", false]], "default_parameters (gammapy.modeling.models.templatespectralmodel attribute)": [[279, "gammapy.modeling.models.TemplateSpectralModel.default_parameters", false]], "default_parameters (gammapy.modeling.models.temporalmodel attribute)": [[280, "gammapy.modeling.models.TemporalModel.default_parameters", false]], "default_parameters (gammapy.modeling.models.uniformprior attribute)": [[281, "gammapy.modeling.models.UniformPrior.default_parameters", false]], "default_scale_radius (gammapy.astro.darkmatter.burkertprofile attribute)": [[17, "gammapy.astro.darkmatter.BurkertProfile.DEFAULT_SCALE_RADIUS", false]], "default_scale_radius (gammapy.astro.darkmatter.einastoprofile attribute)": [[21, "gammapy.astro.darkmatter.EinastoProfile.DEFAULT_SCALE_RADIUS", false]], "default_scale_radius (gammapy.astro.darkmatter.isothermalprofile attribute)": [[22, "gammapy.astro.darkmatter.IsothermalProfile.DEFAULT_SCALE_RADIUS", false]], "default_scale_radius (gammapy.astro.darkmatter.mooreprofile attribute)": [[24, "gammapy.astro.darkmatter.MooreProfile.DEFAULT_SCALE_RADIUS", false]], "default_scale_radius (gammapy.astro.darkmatter.nfwprofile attribute)": [[25, "gammapy.astro.darkmatter.NFWProfile.DEFAULT_SCALE_RADIUS", false]], "default_scale_radius (gammapy.astro.darkmatter.zhaoprofile attribute)": [[27, "gammapy.astro.darkmatter.ZhaoProfile.DEFAULT_SCALE_RADIUS", false]], "default_unit (gammapy.irf.background2d attribute)": [[149, "gammapy.irf.Background2D.default_unit", false]], "default_unit (gammapy.irf.background3d attribute)": [[150, "gammapy.irf.Background3D.default_unit", false]], "default_unit (gammapy.irf.effectiveareatable2d attribute)": [[155, "gammapy.irf.EffectiveAreaTable2D.default_unit", false]], "default_unit (gammapy.irf.energydispersion2d attribute)": [[157, "gammapy.irf.EnergyDispersion2D.default_unit", false]], "default_unit (gammapy.irf.psf3d attribute)": [[162, "gammapy.irf.PSF3D.default_unit", false]], "default_unit (gammapy.irf.radmax2d attribute)": [[167, "gammapy.irf.RadMax2D.default_unit", false]], "delete_interval() (gammapy.data.gti method)": [[86, "gammapy.data.GTI.delete_interval", false]], "description (gammapy.catalog.sourcecatalog1lhaaso attribute)": [[57, "gammapy.catalog.SourceCatalog1LHAASO.description", false]], "description (gammapy.catalog.sourcecatalog2fhl attribute)": [[58, "gammapy.catalog.SourceCatalog2FHL.description", false]], "description (gammapy.catalog.sourcecatalog2hwc attribute)": [[59, "gammapy.catalog.SourceCatalog2HWC.description", false]], "description (gammapy.catalog.sourcecatalog2pc attribute)": [[60, "gammapy.catalog.SourceCatalog2PC.description", false]], "description (gammapy.catalog.sourcecatalog3fgl attribute)": [[61, "gammapy.catalog.SourceCatalog3FGL.description", false]], "description (gammapy.catalog.sourcecatalog3fhl attribute)": [[62, "gammapy.catalog.SourceCatalog3FHL.description", false]], "description (gammapy.catalog.sourcecatalog3hwc attribute)": [[63, "gammapy.catalog.SourceCatalog3HWC.description", false]], "description (gammapy.catalog.sourcecatalog3pc attribute)": [[64, "gammapy.catalog.SourceCatalog3PC.description", false]], "description (gammapy.catalog.sourcecatalog4fgl attribute)": [[65, "gammapy.catalog.SourceCatalog4FGL.description", false]], "description (gammapy.catalog.sourcecataloggammacat attribute)": [[66, "gammapy.catalog.SourceCatalogGammaCat.description", false]], "description (gammapy.catalog.sourcecataloghgps attribute)": [[67, "gammapy.catalog.SourceCatalogHGPS.description", false]], "description() (gammapy.catalog.sourcecatalog class method)": [[56, "gammapy.catalog.SourceCatalog.description", false]], "dict() (gammapy.analysis.analysisconfig method)": [[16, "gammapy.analysis.AnalysisConfig.dict", false]], "dict() (gammapy.data.eventlistmetadata method)": [[84, "gammapy.data.EventListMetaData.dict", false]], "dict() (gammapy.data.observationmetadata method)": [[90, "gammapy.data.ObservationMetaData.dict", false]], "dict() (gammapy.datasets.mapdatasetmetadata method)": [[105, "gammapy.datasets.MapDatasetMetaData.dict", false]], "dict() (gammapy.estimators.fluxmetadata method)": [[126, "gammapy.estimators.FluxMetaData.dict", false]], "discrete_correlation() (in module gammapy.stats)": [[301, "gammapy.stats.discrete_correlation", false]], "diskspatialmodel (class in gammapy.modeling.models)": [[227, "gammapy.modeling.models.DiskSpatialModel", false]], "distance_gc (gammapy.astro.darkmatter.burkertprofile attribute)": [[17, "gammapy.astro.darkmatter.BurkertProfile.DISTANCE_GC", false]], "distance_gc (gammapy.astro.darkmatter.dmprofile attribute)": [[18, "gammapy.astro.darkmatter.DMProfile.DISTANCE_GC", false]], "distance_gc (gammapy.astro.darkmatter.einastoprofile attribute)": [[21, "gammapy.astro.darkmatter.EinastoProfile.DISTANCE_GC", false]], "distance_gc (gammapy.astro.darkmatter.isothermalprofile attribute)": [[22, "gammapy.astro.darkmatter.IsothermalProfile.DISTANCE_GC", false]], "distance_gc (gammapy.astro.darkmatter.mooreprofile attribute)": [[24, "gammapy.astro.darkmatter.MooreProfile.DISTANCE_GC", false]], "distance_gc (gammapy.astro.darkmatter.nfwprofile attribute)": [[25, "gammapy.astro.darkmatter.NFWProfile.DISTANCE_GC", false]], "distance_gc (gammapy.astro.darkmatter.zhaoprofile attribute)": [[27, "gammapy.astro.darkmatter.ZhaoProfile.DISTANCE_GC", false]], "dl3": [[581, "term-DL3", true]], "dl4": [[581, "term-DL4", true]], "dl5": [[581, "term-DL5", true]], "dl6": [[581, "term-DL6", true]], "dmprofile (class in gammapy.astro.darkmatter)": [[18, "gammapy.astro.darkmatter.DMProfile", false]], "dnde (gammapy.estimators.fluxmaps attribute)": [[125, "gammapy.estimators.FluxMaps.dnde", false]], "dnde (gammapy.estimators.fluxpoints attribute)": [[127, "gammapy.estimators.FluxPoints.dnde", false]], "dnde_err (gammapy.estimators.fluxmaps attribute)": [[125, "gammapy.estimators.FluxMaps.dnde_err", false]], "dnde_err (gammapy.estimators.fluxpoints attribute)": [[127, "gammapy.estimators.FluxPoints.dnde_err", false]], "dnde_errn (gammapy.estimators.fluxmaps attribute)": [[125, "gammapy.estimators.FluxMaps.dnde_errn", false]], "dnde_errn (gammapy.estimators.fluxpoints attribute)": [[127, "gammapy.estimators.FluxPoints.dnde_errn", false]], "dnde_errp (gammapy.estimators.fluxmaps attribute)": [[125, "gammapy.estimators.FluxMaps.dnde_errp", false]], "dnde_errp (gammapy.estimators.fluxpoints attribute)": [[127, "gammapy.estimators.FluxPoints.dnde_errp", false]], "dnde_ref (gammapy.estimators.fluxmaps attribute)": [[125, "gammapy.estimators.FluxMaps.dnde_ref", false]], "dnde_ref (gammapy.estimators.fluxpoints attribute)": [[127, "gammapy.estimators.FluxPoints.dnde_ref", false]], "dnde_scan_values (gammapy.estimators.fluxmaps attribute)": [[125, "gammapy.estimators.FluxMaps.dnde_scan_values", false]], "dnde_scan_values (gammapy.estimators.fluxpoints attribute)": [[127, "gammapy.estimators.FluxPoints.dnde_scan_values", false]], "dnde_ul (gammapy.estimators.fluxmaps attribute)": [[125, "gammapy.estimators.FluxMaps.dnde_ul", false]], "dnde_ul (gammapy.estimators.fluxpoints attribute)": [[127, "gammapy.estimators.FluxPoints.dnde_ul", false]], "dot() (gammapy.maps.hpxmap method)": [[195, "gammapy.maps.HpxMap.dot", false]], "dot() (gammapy.maps.hpxndmap method)": [[196, "gammapy.maps.HpxNDMap.dot", false]], "dot() (gammapy.maps.map method)": [[198, "gammapy.maps.Map.dot", false]], "dot() (gammapy.maps.regionndmap method)": [[204, "gammapy.maps.RegionNDMap.dot", false]], "dot() (gammapy.maps.wcsmap method)": [[207, "gammapy.maps.WcsMap.dot", false]], "dot() (gammapy.maps.wcsndmap method)": [[208, "gammapy.maps.WcsNDMap.dot", false]], "downsample() (gammapy.datasets.mapdataset method)": [[103, "gammapy.datasets.MapDataset.downsample", false]], "downsample() (gammapy.datasets.mapdatasetonoff method)": [[106, "gammapy.datasets.MapDatasetOnOff.downsample", false]], "downsample() (gammapy.datasets.spectrumdataset method)": [[110, "gammapy.datasets.SpectrumDataset.downsample", false]], "downsample() (gammapy.datasets.spectrumdatasetonoff method)": [[111, "gammapy.datasets.SpectrumDatasetOnOff.downsample", false]], "downsample() (gammapy.irf.edispkernelmap method)": [[153, "gammapy.irf.EDispKernelMap.downsample", false]], "downsample() (gammapy.irf.edispmap method)": [[154, "gammapy.irf.EDispMap.downsample", false]], "downsample() (gammapy.irf.irfmap method)": [[160, "gammapy.irf.IRFMap.downsample", false]], "downsample() (gammapy.irf.psfmap method)": [[165, "gammapy.irf.PSFMap.downsample", false]], "downsample() (gammapy.irf.recopsfmap method)": [[168, "gammapy.irf.RecoPSFMap.downsample", false]], "downsample() (gammapy.maps.geom method)": [[193, "gammapy.maps.Geom.downsample", false]], "downsample() (gammapy.maps.hpxgeom method)": [[194, "gammapy.maps.HpxGeom.downsample", false]], "downsample() (gammapy.maps.hpxmap method)": [[195, "gammapy.maps.HpxMap.downsample", false]], "downsample() (gammapy.maps.hpxndmap method)": [[196, "gammapy.maps.HpxNDMap.downsample", false]], "downsample() (gammapy.maps.labelmapaxis method)": [[197, "gammapy.maps.LabelMapAxis.downsample", false]], "downsample() (gammapy.maps.map method)": [[198, "gammapy.maps.Map.downsample", false]], "downsample() (gammapy.maps.mapaxes method)": [[199, "gammapy.maps.MapAxes.downsample", false]], "downsample() (gammapy.maps.mapaxis method)": [[200, "gammapy.maps.MapAxis.downsample", false]], "downsample() (gammapy.maps.regiongeom method)": [[203, "gammapy.maps.RegionGeom.downsample", false]], "downsample() (gammapy.maps.regionndmap method)": [[204, "gammapy.maps.RegionNDMap.downsample", false]], "downsample() (gammapy.maps.timemapaxis method)": [[205, "gammapy.maps.TimeMapAxis.downsample", false]], "downsample() (gammapy.maps.wcsgeom method)": [[206, "gammapy.maps.WcsGeom.downsample", false]], "downsample() (gammapy.maps.wcsmap method)": [[207, "gammapy.maps.WcsMap.downsample", false]], "downsample() (gammapy.maps.wcsndmap method)": [[208, "gammapy.maps.WcsNDMap.downsample", false]], "draw() (in module gammapy.utils.random)": [[333, "gammapy.utils.random.draw", false]], "drift (gammapy.data.pointingmode attribute)": [[95, "gammapy.data.PointingMode.DRIFT", false]], "drop() (gammapy.maps.geom method)": [[193, "gammapy.maps.Geom.drop", false]], "drop() (gammapy.maps.hpxgeom method)": [[194, "gammapy.maps.HpxGeom.drop", false]], "drop() (gammapy.maps.mapaxes method)": [[199, "gammapy.maps.MapAxes.drop", false]], "drop() (gammapy.maps.regiongeom method)": [[203, "gammapy.maps.RegionGeom.drop", false]], "drop() (gammapy.maps.wcsgeom method)": [[206, "gammapy.maps.WcsGeom.drop", false]], "dtype (gammapy.data.hduindextable attribute)": [[87, "gammapy.data.HDUIndexTable.dtype", false]], "dtype (gammapy.data.observationtable attribute)": [[91, "gammapy.data.ObservationTable.dtype", false]], "duration (gammapy.data.pointinginfo attribute)": [[94, "gammapy.data.PointingInfo.duration", false]], "e (gammapy.modeling.models.diskspatialmodel attribute)": [[227, "gammapy.modeling.models.DiskSpatialModel.e", false]], "e (gammapy.modeling.models.gaussianspatialmodel attribute)": [[236, "gammapy.modeling.models.GaussianSpatialModel.e", false]], "e (gammapy.modeling.models.generalizedgaussianspatialmodel attribute)": [[239, "gammapy.modeling.models.GeneralizedGaussianSpatialModel.e", false]], "e2dnde (gammapy.estimators.fluxmaps attribute)": [[125, "gammapy.estimators.FluxMaps.e2dnde", false]], "e2dnde (gammapy.estimators.fluxpoints attribute)": [[127, "gammapy.estimators.FluxPoints.e2dnde", false]], "e2dnde_err (gammapy.estimators.fluxmaps attribute)": [[125, "gammapy.estimators.FluxMaps.e2dnde_err", false]], "e2dnde_err (gammapy.estimators.fluxpoints attribute)": [[127, "gammapy.estimators.FluxPoints.e2dnde_err", false]], "e2dnde_errn (gammapy.estimators.fluxmaps attribute)": [[125, "gammapy.estimators.FluxMaps.e2dnde_errn", false]], "e2dnde_errn (gammapy.estimators.fluxpoints attribute)": [[127, "gammapy.estimators.FluxPoints.e2dnde_errn", false]], "e2dnde_errp (gammapy.estimators.fluxmaps attribute)": [[125, "gammapy.estimators.FluxMaps.e2dnde_errp", false]], "e2dnde_errp (gammapy.estimators.fluxpoints attribute)": [[127, "gammapy.estimators.FluxPoints.e2dnde_errp", false]], "e2dnde_ref (gammapy.estimators.fluxmaps attribute)": [[125, "gammapy.estimators.FluxMaps.e2dnde_ref", false]], "e2dnde_ref (gammapy.estimators.fluxpoints attribute)": [[127, "gammapy.estimators.FluxPoints.e2dnde_ref", false]], "e2dnde_ul (gammapy.estimators.fluxmaps attribute)": [[125, "gammapy.estimators.FluxMaps.e2dnde_ul", false]], "e2dnde_ul (gammapy.estimators.fluxpoints attribute)": [[127, "gammapy.estimators.FluxPoints.e2dnde_ul", false]], "e_peak (gammapy.modeling.models.expcutoffpowerlawspectralmodel attribute)": [[232, "gammapy.modeling.models.ExpCutoffPowerLawSpectralModel.e_peak", false]], "e_peak (gammapy.modeling.models.logparabolaspectralmodel attribute)": [[244, "gammapy.modeling.models.LogParabolaSpectralModel.e_peak", false]], "earth_location_from_dict() (in module gammapy.utils.fits)": [[320, "gammapy.utils.fits.earth_location_from_dict", false]], "ebl_data_builtin (in module gammapy.modeling.models)": [[229, "gammapy.modeling.models.EBL_DATA_BUILTIN", false]], "eblabsorptionnormspectralmodel (class in gammapy.modeling.models)": [[228, "gammapy.modeling.models.EBLAbsorptionNormSpectralModel", false]], "ebreak (gammapy.modeling.models.brokenpowerlawspectralmodel attribute)": [[220, "gammapy.modeling.models.BrokenPowerLawSpectralModel.ebreak", false]], "ebreak (gammapy.modeling.models.smoothbrokenpowerlawspectralmodel attribute)": [[267, "gammapy.modeling.models.SmoothBrokenPowerLawSpectralModel.ebreak", false]], "ecut (gammapy.modeling.models.expcutoffpowerlaw3fglspectralmodel attribute)": [[230, "gammapy.modeling.models.ExpCutoffPowerLaw3FGLSpectralModel.ecut", false]], "ecut (gammapy.modeling.models.superexpcutoffpowerlaw3fglspectralmodel attribute)": [[270, "gammapy.modeling.models.SuperExpCutoffPowerLaw3FGLSpectralModel.ecut", false]], "edge_width (gammapy.modeling.models.diskspatialmodel attribute)": [[227, "gammapy.modeling.models.DiskSpatialModel.edge_width", false]], "edges (gammapy.maps.labelmapaxis attribute)": [[197, "gammapy.maps.LabelMapAxis.edges", false]], "edges (gammapy.maps.mapaxis attribute)": [[200, "gammapy.maps.MapAxis.edges", false]], "edges (gammapy.maps.timemapaxis attribute)": [[205, "gammapy.maps.TimeMapAxis.edges", false]], "edges_max (gammapy.maps.labelmapaxis attribute)": [[197, "gammapy.maps.LabelMapAxis.edges_max", false]], "edges_max (gammapy.maps.mapaxis attribute)": [[200, "gammapy.maps.MapAxis.edges_max", false]], "edges_max (gammapy.maps.timemapaxis attribute)": [[205, "gammapy.maps.TimeMapAxis.edges_max", false]], "edges_min (gammapy.maps.labelmapaxis attribute)": [[197, "gammapy.maps.LabelMapAxis.edges_min", false]], "edges_min (gammapy.maps.mapaxis attribute)": [[200, "gammapy.maps.MapAxis.edges_min", false]], "edges_min (gammapy.maps.timemapaxis attribute)": [[205, "gammapy.maps.TimeMapAxis.edges_min", false]], "edisp": [[581, "term-EDisp", true]], "edisp (gammapy.data.observation attribute)": [[88, "gammapy.data.Observation.edisp", false]], "edisp (gammapy.datasets.mapdataset attribute)": [[103, "gammapy.datasets.MapDataset.edisp", false]], "edisp (gammapy.datasets.mapdatasetonoff attribute)": [[106, "gammapy.datasets.MapDatasetOnOff.edisp", false]], "edisp (gammapy.datasets.spectrumdataset attribute)": [[110, "gammapy.datasets.SpectrumDataset.edisp", false]], "edisp (gammapy.datasets.spectrumdatasetonoff attribute)": [[111, "gammapy.datasets.SpectrumDatasetOnOff.edisp", false]], "edisp_map (gammapy.irf.edispkernelmap attribute)": [[153, "gammapy.irf.EDispKernelMap.edisp_map", false]], "edisp_map (gammapy.irf.edispmap attribute)": [[154, "gammapy.irf.EDispMap.edisp_map", false]], "edispkernel (class in gammapy.irf)": [[152, "gammapy.irf.EDispKernel", false]], "edispkernelmap (class in gammapy.irf)": [[153, "gammapy.irf.EDispKernelMap", false]], "edispmap (class in gammapy.irf)": [[154, "gammapy.irf.EDispMap", false]], "effectiveareatable2d (class in gammapy.irf)": [[155, "gammapy.irf.EffectiveAreaTable2D", false]], "eflux (gammapy.estimators.fluxmaps attribute)": [[125, "gammapy.estimators.FluxMaps.eflux", false]], "eflux (gammapy.estimators.fluxpoints attribute)": [[127, "gammapy.estimators.FluxPoints.eflux", false]], "eflux_err (gammapy.estimators.fluxmaps attribute)": [[125, "gammapy.estimators.FluxMaps.eflux_err", false]], "eflux_err (gammapy.estimators.fluxpoints attribute)": [[127, "gammapy.estimators.FluxPoints.eflux_err", false]], "eflux_errn (gammapy.estimators.fluxmaps attribute)": [[125, "gammapy.estimators.FluxMaps.eflux_errn", false]], "eflux_errn (gammapy.estimators.fluxpoints attribute)": [[127, "gammapy.estimators.FluxPoints.eflux_errn", false]], "eflux_errp (gammapy.estimators.fluxmaps attribute)": [[125, "gammapy.estimators.FluxMaps.eflux_errp", false]], "eflux_errp (gammapy.estimators.fluxpoints attribute)": [[127, "gammapy.estimators.FluxPoints.eflux_errp", false]], "eflux_ref (gammapy.estimators.fluxmaps attribute)": [[125, "gammapy.estimators.FluxMaps.eflux_ref", false]], "eflux_ref (gammapy.estimators.fluxpoints attribute)": [[127, "gammapy.estimators.FluxPoints.eflux_ref", false]], "eflux_ul (gammapy.estimators.fluxmaps attribute)": [[125, "gammapy.estimators.FluxMaps.eflux_ul", false]], "eflux_ul (gammapy.estimators.fluxpoints attribute)": [[127, "gammapy.estimators.FluxPoints.eflux_ul", false]], "einastoprofile (class in gammapy.astro.darkmatter)": [[21, "gammapy.astro.darkmatter.EinastoProfile", false]], "emax (gammapy.modeling.models.powerlaw2spectralmodel attribute)": [[255, "gammapy.modeling.models.PowerLaw2SpectralModel.emax", false]], "emin (gammapy.modeling.models.powerlaw2spectralmodel attribute)": [[255, "gammapy.modeling.models.PowerLaw2SpectralModel.emin", false]], "energy (gammapy.data.eventlist attribute)": [[83, "gammapy.data.EventList.energy", false]], "energy (gammapy.modeling.models.piecewisenormspectralmodel attribute)": [[253, "gammapy.modeling.models.PiecewiseNormSpectralModel.energy", false]], "energy_axes_are_aligned (gammapy.datasets.datasets attribute)": [[100, "gammapy.datasets.Datasets.energy_axes_are_aligned", false]], "energy_axis (gammapy.estimators.fluxmaps attribute)": [[125, "gammapy.estimators.FluxMaps.energy_axis", false]], "energy_axis (gammapy.estimators.fluxpoints attribute)": [[127, "gammapy.estimators.FluxPoints.energy_axis", false]], "energy_center (gammapy.modeling.models.templatenpredmodel attribute)": [[276, "gammapy.modeling.models.TemplateNPredModel.energy_center", false]], "energy_flux() (gammapy.astro.darkmatter.darkmatterannihilationspectralmodel method)": [[19, "gammapy.astro.darkmatter.DarkMatterAnnihilationSpectralModel.energy_flux", false]], "energy_flux() (gammapy.astro.darkmatter.darkmatterdecayspectralmodel method)": [[20, "gammapy.astro.darkmatter.DarkMatterDecaySpectralModel.energy_flux", false]], "energy_flux() (gammapy.astro.darkmatter.primaryflux method)": [[26, "gammapy.astro.darkmatter.PrimaryFlux.energy_flux", false]], "energy_flux() (gammapy.modeling.models.brokenpowerlawspectralmodel method)": [[220, "gammapy.modeling.models.BrokenPowerLawSpectralModel.energy_flux", false]], "energy_flux() (gammapy.modeling.models.compoundspectralmodel method)": [[221, "gammapy.modeling.models.CompoundSpectralModel.energy_flux", false]], "energy_flux() (gammapy.modeling.models.constantspectralmodel method)": [[224, "gammapy.modeling.models.ConstantSpectralModel.energy_flux", false]], "energy_flux() (gammapy.modeling.models.eblabsorptionnormspectralmodel method)": [[228, "gammapy.modeling.models.EBLAbsorptionNormSpectralModel.energy_flux", false]], "energy_flux() (gammapy.modeling.models.expcutoffpowerlaw3fglspectralmodel method)": [[230, "gammapy.modeling.models.ExpCutoffPowerLaw3FGLSpectralModel.energy_flux", false]], "energy_flux() (gammapy.modeling.models.expcutoffpowerlawnormspectralmodel method)": [[231, "gammapy.modeling.models.ExpCutoffPowerLawNormSpectralModel.energy_flux", false]], "energy_flux() (gammapy.modeling.models.expcutoffpowerlawspectralmodel method)": [[232, "gammapy.modeling.models.ExpCutoffPowerLawSpectralModel.energy_flux", false]], "energy_flux() (gammapy.modeling.models.gaussianspectralmodel method)": [[237, "gammapy.modeling.models.GaussianSpectralModel.energy_flux", false]], "energy_flux() (gammapy.modeling.models.logparabolanormspectralmodel method)": [[243, "gammapy.modeling.models.LogParabolaNormSpectralModel.energy_flux", false]], "energy_flux() (gammapy.modeling.models.logparabolaspectralmodel method)": [[244, "gammapy.modeling.models.LogParabolaSpectralModel.energy_flux", false]], "energy_flux() (gammapy.modeling.models.meyercrabspectralmodel method)": [[247, "gammapy.modeling.models.MeyerCrabSpectralModel.energy_flux", false]], "energy_flux() (gammapy.modeling.models.naimaspectralmodel method)": [[251, "gammapy.modeling.models.NaimaSpectralModel.energy_flux", false]], "energy_flux() (gammapy.modeling.models.piecewisenormspectralmodel method)": [[253, "gammapy.modeling.models.PiecewiseNormSpectralModel.energy_flux", false]], "energy_flux() (gammapy.modeling.models.powerlaw2spectralmodel method)": [[255, "gammapy.modeling.models.PowerLaw2SpectralModel.energy_flux", false]], "energy_flux() (gammapy.modeling.models.powerlawnormspectralmodel method)": [[256, "gammapy.modeling.models.PowerLawNormSpectralModel.energy_flux", false]], "energy_flux() (gammapy.modeling.models.powerlawspectralmodel method)": [[257, "gammapy.modeling.models.PowerLawSpectralModel.energy_flux", false]], "energy_flux() (gammapy.modeling.models.scalespectralmodel method)": [[262, "gammapy.modeling.models.ScaleSpectralModel.energy_flux", false]], "energy_flux() (gammapy.modeling.models.smoothbrokenpowerlawspectralmodel method)": [[267, "gammapy.modeling.models.SmoothBrokenPowerLawSpectralModel.energy_flux", false]], "energy_flux() (gammapy.modeling.models.spectralmodel method)": [[269, "gammapy.modeling.models.SpectralModel.energy_flux", false]], "energy_flux() (gammapy.modeling.models.superexpcutoffpowerlaw3fglspectralmodel method)": [[270, "gammapy.modeling.models.SuperExpCutoffPowerLaw3FGLSpectralModel.energy_flux", false]], "energy_flux() (gammapy.modeling.models.superexpcutoffpowerlaw4fgldr3spectralmodel method)": [[271, "gammapy.modeling.models.SuperExpCutoffPowerLaw4FGLDR3SpectralModel.energy_flux", false]], "energy_flux() (gammapy.modeling.models.superexpcutoffpowerlaw4fglspectralmodel method)": [[272, "gammapy.modeling.models.SuperExpCutoffPowerLaw4FGLSpectralModel.energy_flux", false]], "energy_flux() (gammapy.modeling.models.templatendspectralmodel method)": [[275, "gammapy.modeling.models.TemplateNDSpectralModel.energy_flux", false]], "energy_flux() (gammapy.modeling.models.templatespectralmodel method)": [[279, "gammapy.modeling.models.TemplateSpectralModel.energy_flux", false]], "energy_flux_error() (gammapy.astro.darkmatter.darkmatterannihilationspectralmodel method)": [[19, "gammapy.astro.darkmatter.DarkMatterAnnihilationSpectralModel.energy_flux_error", false]], "energy_flux_error() (gammapy.astro.darkmatter.darkmatterdecayspectralmodel method)": [[20, "gammapy.astro.darkmatter.DarkMatterDecaySpectralModel.energy_flux_error", false]], "energy_flux_error() (gammapy.astro.darkmatter.primaryflux method)": [[26, "gammapy.astro.darkmatter.PrimaryFlux.energy_flux_error", false]], "energy_flux_error() (gammapy.modeling.models.brokenpowerlawspectralmodel method)": [[220, "gammapy.modeling.models.BrokenPowerLawSpectralModel.energy_flux_error", false]], "energy_flux_error() (gammapy.modeling.models.compoundspectralmodel method)": [[221, "gammapy.modeling.models.CompoundSpectralModel.energy_flux_error", false]], "energy_flux_error() (gammapy.modeling.models.constantspectralmodel method)": [[224, "gammapy.modeling.models.ConstantSpectralModel.energy_flux_error", false]], "energy_flux_error() (gammapy.modeling.models.eblabsorptionnormspectralmodel method)": [[228, "gammapy.modeling.models.EBLAbsorptionNormSpectralModel.energy_flux_error", false]], "energy_flux_error() (gammapy.modeling.models.expcutoffpowerlaw3fglspectralmodel method)": [[230, "gammapy.modeling.models.ExpCutoffPowerLaw3FGLSpectralModel.energy_flux_error", false]], "energy_flux_error() (gammapy.modeling.models.expcutoffpowerlawnormspectralmodel method)": [[231, "gammapy.modeling.models.ExpCutoffPowerLawNormSpectralModel.energy_flux_error", false]], "energy_flux_error() (gammapy.modeling.models.expcutoffpowerlawspectralmodel method)": [[232, "gammapy.modeling.models.ExpCutoffPowerLawSpectralModel.energy_flux_error", false]], "energy_flux_error() (gammapy.modeling.models.gaussianspectralmodel method)": [[237, "gammapy.modeling.models.GaussianSpectralModel.energy_flux_error", false]], "energy_flux_error() (gammapy.modeling.models.logparabolanormspectralmodel method)": [[243, "gammapy.modeling.models.LogParabolaNormSpectralModel.energy_flux_error", false]], "energy_flux_error() (gammapy.modeling.models.logparabolaspectralmodel method)": [[244, "gammapy.modeling.models.LogParabolaSpectralModel.energy_flux_error", false]], "energy_flux_error() (gammapy.modeling.models.meyercrabspectralmodel method)": [[247, "gammapy.modeling.models.MeyerCrabSpectralModel.energy_flux_error", false]], "energy_flux_error() (gammapy.modeling.models.naimaspectralmodel method)": [[251, "gammapy.modeling.models.NaimaSpectralModel.energy_flux_error", false]], "energy_flux_error() (gammapy.modeling.models.piecewisenormspectralmodel method)": [[253, "gammapy.modeling.models.PiecewiseNormSpectralModel.energy_flux_error", false]], "energy_flux_error() (gammapy.modeling.models.powerlaw2spectralmodel method)": [[255, "gammapy.modeling.models.PowerLaw2SpectralModel.energy_flux_error", false]], "energy_flux_error() (gammapy.modeling.models.powerlawnormspectralmodel method)": [[256, "gammapy.modeling.models.PowerLawNormSpectralModel.energy_flux_error", false]], "energy_flux_error() (gammapy.modeling.models.powerlawspectralmodel method)": [[257, "gammapy.modeling.models.PowerLawSpectralModel.energy_flux_error", false]], "energy_flux_error() (gammapy.modeling.models.scalespectralmodel method)": [[262, "gammapy.modeling.models.ScaleSpectralModel.energy_flux_error", false]], "energy_flux_error() (gammapy.modeling.models.smoothbrokenpowerlawspectralmodel method)": [[267, "gammapy.modeling.models.SmoothBrokenPowerLawSpectralModel.energy_flux_error", false]], "energy_flux_error() (gammapy.modeling.models.spectralmodel method)": [[269, "gammapy.modeling.models.SpectralModel.energy_flux_error", false]], "energy_flux_error() (gammapy.modeling.models.superexpcutoffpowerlaw3fglspectralmodel method)": [[270, "gammapy.modeling.models.SuperExpCutoffPowerLaw3FGLSpectralModel.energy_flux_error", false]], "energy_flux_error() (gammapy.modeling.models.superexpcutoffpowerlaw4fgldr3spectralmodel method)": [[271, "gammapy.modeling.models.SuperExpCutoffPowerLaw4FGLDR3SpectralModel.energy_flux_error", false]], "energy_flux_error() (gammapy.modeling.models.superexpcutoffpowerlaw4fglspectralmodel method)": [[272, "gammapy.modeling.models.SuperExpCutoffPowerLaw4FGLSpectralModel.energy_flux_error", false]], "energy_flux_error() (gammapy.modeling.models.templatendspectralmodel method)": [[275, "gammapy.modeling.models.TemplateNDSpectralModel.energy_flux_error", false]], "energy_flux_error() (gammapy.modeling.models.templatespectralmodel method)": [[279, "gammapy.modeling.models.TemplateSpectralModel.energy_flux_error", false]], "energy_integrated() (gammapy.astro.source.pulsar method)": [[51, "gammapy.astro.source.Pulsar.energy_integrated", false]], "energy_mask() (gammapy.maps.geom method)": [[193, "gammapy.maps.Geom.energy_mask", false]], "energy_mask() (gammapy.maps.hpxgeom method)": [[194, "gammapy.maps.HpxGeom.energy_mask", false]], "energy_mask() (gammapy.maps.regiongeom method)": [[203, "gammapy.maps.RegionGeom.energy_mask", false]], "energy_mask() (gammapy.maps.wcsgeom method)": [[206, "gammapy.maps.WcsGeom.energy_mask", false]], "energy_max (gammapy.estimators.fluxmaps attribute)": [[125, "gammapy.estimators.FluxMaps.energy_max", false]], "energy_max (gammapy.estimators.fluxpoints attribute)": [[127, "gammapy.estimators.FluxPoints.energy_max", false]], "energy_min (gammapy.estimators.fluxmaps attribute)": [[125, "gammapy.estimators.FluxMaps.energy_min", false]], "energy_min (gammapy.estimators.fluxpoints attribute)": [[127, "gammapy.estimators.FluxPoints.energy_min", false]], "energy_name (gammapy.irf.psfmap attribute)": [[165, "gammapy.irf.PSFMap.energy_name", false]], "energy_name (gammapy.irf.recopsfmap attribute)": [[168, "gammapy.irf.RecoPSFMap.energy_name", false]], "energy_range (gammapy.catalog.sourcecatalogobject2fhl attribute)": [[71, "gammapy.catalog.SourceCatalogObject2FHL.energy_range", false]], "energy_range (gammapy.catalog.sourcecatalogobject3fgl attribute)": [[74, "gammapy.catalog.SourceCatalogObject3FGL.energy_range", false]], "energy_range (gammapy.catalog.sourcecatalogobject3fhl attribute)": [[75, "gammapy.catalog.SourceCatalogObject3FHL.energy_range", false]], "energy_range (gammapy.catalog.sourcecatalogobjecthgps attribute)": [[80, "gammapy.catalog.SourceCatalogObjectHGPS.energy_range", false]], "energy_range (gammapy.datasets.mapdataset attribute)": [[103, "gammapy.datasets.MapDataset.energy_range", false]], "energy_range (gammapy.datasets.mapdatasetonoff attribute)": [[106, "gammapy.datasets.MapDatasetOnOff.energy_range", false]], "energy_range (gammapy.datasets.spectrumdataset attribute)": [[110, "gammapy.datasets.SpectrumDataset.energy_range", false]], "energy_range (gammapy.datasets.spectrumdatasetonoff attribute)": [[111, "gammapy.datasets.SpectrumDatasetOnOff.energy_range", false]], "energy_range_fit (gammapy.datasets.mapdataset attribute)": [[103, "gammapy.datasets.MapDataset.energy_range_fit", false]], "energy_range_fit (gammapy.datasets.mapdatasetonoff attribute)": [[106, "gammapy.datasets.MapDatasetOnOff.energy_range_fit", false]], "energy_range_fit (gammapy.datasets.spectrumdataset attribute)": [[110, "gammapy.datasets.SpectrumDataset.energy_range_fit", false]], "energy_range_fit (gammapy.datasets.spectrumdatasetonoff attribute)": [[111, "gammapy.datasets.SpectrumDatasetOnOff.energy_range_fit", false]], "energy_range_safe (gammapy.datasets.mapdataset attribute)": [[103, "gammapy.datasets.MapDataset.energy_range_safe", false]], "energy_range_safe (gammapy.datasets.mapdatasetonoff attribute)": [[106, "gammapy.datasets.MapDatasetOnOff.energy_range_safe", false]], "energy_range_safe (gammapy.datasets.spectrumdataset attribute)": [[110, "gammapy.datasets.SpectrumDataset.energy_range_safe", false]], "energy_range_safe (gammapy.datasets.spectrumdatasetonoff attribute)": [[111, "gammapy.datasets.SpectrumDatasetOnOff.energy_range_safe", false]], "energy_range_total (gammapy.datasets.mapdataset attribute)": [[103, "gammapy.datasets.MapDataset.energy_range_total", false]], "energy_range_total (gammapy.datasets.mapdatasetonoff attribute)": [[106, "gammapy.datasets.MapDatasetOnOff.energy_range_total", false]], "energy_range_total (gammapy.datasets.spectrumdataset attribute)": [[110, "gammapy.datasets.SpectrumDataset.energy_range_total", false]], "energy_range_total (gammapy.datasets.spectrumdatasetonoff attribute)": [[111, "gammapy.datasets.SpectrumDatasetOnOff.energy_range_total", false]], "energy_ranges (gammapy.datasets.datasets attribute)": [[100, "gammapy.datasets.Datasets.energy_ranges", false]], "energy_ref (gammapy.estimators.fluxmaps attribute)": [[125, "gammapy.estimators.FluxMaps.energy_ref", false]], "energy_ref (gammapy.estimators.fluxpoints attribute)": [[127, "gammapy.estimators.FluxPoints.energy_ref", false]], "energydependentmorphologyestimator (class in gammapy.estimators)": [[122, "gammapy.estimators.EnergyDependentMorphologyEstimator", false]], "energydependentmultigausspsf (class in gammapy.irf)": [[156, "gammapy.irf.EnergyDependentMultiGaussPSF", false]], "energydispersion2d (class in gammapy.irf)": [[157, "gammapy.irf.EnergyDispersion2D", false]], "eqcons (gammapy.astro.population.casebattacharya1998 attribute)": [[28, "gammapy.astro.population.CaseBattacharya1998.eqcons", false]], "eqcons (gammapy.astro.population.exponential attribute)": [[29, "gammapy.astro.population.Exponential.eqcons", false]], "eqcons (gammapy.astro.population.faucherkaspi2006 attribute)": [[30, "gammapy.astro.population.FaucherKaspi2006.eqcons", false]], "eqcons (gammapy.astro.population.faucherkaspi2006velocitybimodal attribute)": [[31, "gammapy.astro.population.FaucherKaspi2006VelocityBimodal.eqcons", false]], "eqcons (gammapy.astro.population.faucherkaspi2006velocitymaxwellian attribute)": [[32, "gammapy.astro.population.FaucherKaspi2006VelocityMaxwellian.eqcons", false]], "eqcons (gammapy.astro.population.lorimer2006 attribute)": [[35, "gammapy.astro.population.Lorimer2006.eqcons", false]], "eqcons (gammapy.astro.population.paczynski1990 attribute)": [[36, "gammapy.astro.population.Paczynski1990.eqcons", false]], "eqcons (gammapy.astro.population.paczynski1990velocity attribute)": [[37, "gammapy.astro.population.Paczynski1990Velocity.eqcons", false]], "eqcons (gammapy.astro.population.yusifovkucuk2004 attribute)": [[39, "gammapy.astro.population.YusifovKucuk2004.eqcons", false]], "eqcons (gammapy.astro.population.yusifovkucuk2004b attribute)": [[40, "gammapy.astro.population.YusifovKucuk2004B.eqcons", false]], "error (gammapy.modeling.parameter attribute)": [[216, "gammapy.modeling.Parameter.error", false]], "error (gammapy.modeling.priorparameter attribute)": [[218, "gammapy.modeling.PriorParameter.error", false]], "error (gammapy.stats.cashcountsstatistic attribute)": [[291, "gammapy.stats.CashCountsStatistic.error", false]], "error (gammapy.stats.wstatcountsstatistic attribute)": [[293, "gammapy.stats.WStatCountsStatistic.error", false]], "error_callback() (gammapy.makers.datasetsmaker method)": [[171, "gammapy.makers.DatasetsMaker.error_callback", false]], "estimate_best_fit() (gammapy.estimators.fluxpointsestimator method)": [[128, "gammapy.estimators.FluxPointsEstimator.estimate_best_fit", false]], "estimate_best_fit() (gammapy.estimators.fluxprofileestimator method)": [[129, "gammapy.estimators.FluxProfileEstimator.estimate_best_fit", false]], "estimate_best_fit() (gammapy.estimators.lightcurveestimator method)": [[132, "gammapy.estimators.LightCurveEstimator.estimate_best_fit", false]], "estimate_best_fit() (gammapy.estimators.parameterestimator method)": [[133, "gammapy.estimators.ParameterEstimator.estimate_best_fit", false]], "estimate_counts() (gammapy.estimators.fluxpointsestimator static method)": [[128, "gammapy.estimators.FluxPointsEstimator.estimate_counts", false]], "estimate_counts() (gammapy.estimators.fluxprofileestimator static method)": [[129, "gammapy.estimators.FluxProfileEstimator.estimate_counts", false]], "estimate_counts() (gammapy.estimators.lightcurveestimator static method)": [[132, "gammapy.estimators.LightCurveEstimator.estimate_counts", false]], "estimate_counts() (gammapy.estimators.parameterestimator static method)": [[133, "gammapy.estimators.ParameterEstimator.estimate_counts", false]], "estimate_energy_dependence() (gammapy.estimators.energydependentmorphologyestimator method)": [[122, "gammapy.estimators.EnergyDependentMorphologyEstimator.estimate_energy_dependence", false]], "estimate_errn_errp() (gammapy.estimators.fluxpointsestimator method)": [[128, "gammapy.estimators.FluxPointsEstimator.estimate_errn_errp", false]], "estimate_errn_errp() (gammapy.estimators.fluxprofileestimator method)": [[129, "gammapy.estimators.FluxProfileEstimator.estimate_errn_errp", false]], "estimate_errn_errp() (gammapy.estimators.lightcurveestimator method)": [[132, "gammapy.estimators.LightCurveEstimator.estimate_errn_errp", false]], "estimate_errn_errp() (gammapy.estimators.parameterestimator method)": [[133, "gammapy.estimators.ParameterEstimator.estimate_errn_errp", false]], "estimate_excess_map() (gammapy.estimators.excessmapestimator method)": [[124, "gammapy.estimators.ExcessMapEstimator.estimate_excess_map", false]], "estimate_exposure_reco_energy() (gammapy.estimators.excessmapestimator method)": [[124, "gammapy.estimators.ExcessMapEstimator.estimate_exposure_reco_energy", false]], "estimate_exposure_reco_energy() (in module gammapy.estimators.utils)": [[142, "gammapy.estimators.utils.estimate_exposure_reco_energy", false]], "estimate_fit_input_maps() (gammapy.estimators.tsmapestimator method)": [[135, "gammapy.estimators.TSMapEstimator.estimate_fit_input_maps", false]], "estimate_flux_default() (gammapy.estimators.tsmapestimator method)": [[135, "gammapy.estimators.TSMapEstimator.estimate_flux_default", false]], "estimate_flux_map() (gammapy.estimators.tsmapestimator method)": [[135, "gammapy.estimators.TSMapEstimator.estimate_flux_map", false]], "estimate_flux_point() (gammapy.estimators.fluxpointsestimator method)": [[128, "gammapy.estimators.FluxPointsEstimator.estimate_flux_point", false]], "estimate_flux_point() (gammapy.estimators.fluxprofileestimator method)": [[129, "gammapy.estimators.FluxProfileEstimator.estimate_flux_point", false]], "estimate_flux_point() (gammapy.estimators.lightcurveestimator method)": [[132, "gammapy.estimators.LightCurveEstimator.estimate_flux_point", false]], "estimate_kernel() (gammapy.estimators.excessmapestimator method)": [[124, "gammapy.estimators.ExcessMapEstimator.estimate_kernel", false]], "estimate_kernel() (gammapy.estimators.tsmapestimator method)": [[135, "gammapy.estimators.TSMapEstimator.estimate_kernel", false]], "estimate_maps() (gammapy.estimators.asmoothmapestimator method)": [[120, "gammapy.estimators.ASmoothMapEstimator.estimate_maps", false]], "estimate_mask_default() (gammapy.estimators.excessmapestimator static method)": [[124, "gammapy.estimators.ExcessMapEstimator.estimate_mask_default", false]], "estimate_mask_default() (gammapy.estimators.tsmapestimator static method)": [[135, "gammapy.estimators.TSMapEstimator.estimate_mask_default", false]], "estimate_min_e2dnde() (gammapy.estimators.sensitivityestimator method)": [[134, "gammapy.estimators.SensitivityEstimator.estimate_min_e2dnde", false]], "estimate_min_excess() (gammapy.estimators.sensitivityestimator method)": [[134, "gammapy.estimators.SensitivityEstimator.estimate_min_excess", false]], "estimate_npred() (gammapy.estimators.fluxpointsestimator static method)": [[128, "gammapy.estimators.FluxPointsEstimator.estimate_npred", false]], "estimate_npred() (gammapy.estimators.fluxprofileestimator static method)": [[129, "gammapy.estimators.FluxProfileEstimator.estimate_npred", false]], "estimate_npred() (gammapy.estimators.lightcurveestimator static method)": [[132, "gammapy.estimators.LightCurveEstimator.estimate_npred", false]], "estimate_npred() (gammapy.estimators.parameterestimator static method)": [[133, "gammapy.estimators.ParameterEstimator.estimate_npred", false]], "estimate_npred_excess() (gammapy.estimators.fluxpointsestimator method)": [[128, "gammapy.estimators.FluxPointsEstimator.estimate_npred_excess", false]], "estimate_npred_excess() (gammapy.estimators.fluxprofileestimator method)": [[129, "gammapy.estimators.FluxProfileEstimator.estimate_npred_excess", false]], "estimate_npred_excess() (gammapy.estimators.lightcurveestimator method)": [[132, "gammapy.estimators.LightCurveEstimator.estimate_npred_excess", false]], "estimate_pad_width() (gammapy.estimators.tsmapestimator method)": [[135, "gammapy.estimators.TSMapEstimator.estimate_pad_width", false]], "estimate_scan() (gammapy.estimators.fluxpointsestimator method)": [[128, "gammapy.estimators.FluxPointsEstimator.estimate_scan", false]], "estimate_scan() (gammapy.estimators.fluxprofileestimator method)": [[129, "gammapy.estimators.FluxProfileEstimator.estimate_scan", false]], "estimate_scan() (gammapy.estimators.lightcurveestimator method)": [[132, "gammapy.estimators.LightCurveEstimator.estimate_scan", false]], "estimate_scan() (gammapy.estimators.parameterestimator method)": [[133, "gammapy.estimators.ParameterEstimator.estimate_scan", false]], "estimate_time_bin_flux() (gammapy.estimators.lightcurveestimator method)": [[132, "gammapy.estimators.LightCurveEstimator.estimate_time_bin_flux", false]], "estimate_ts() (gammapy.estimators.fluxpointsestimator method)": [[128, "gammapy.estimators.FluxPointsEstimator.estimate_ts", false]], "estimate_ts() (gammapy.estimators.fluxprofileestimator method)": [[129, "gammapy.estimators.FluxProfileEstimator.estimate_ts", false]], "estimate_ts() (gammapy.estimators.lightcurveestimator method)": [[132, "gammapy.estimators.LightCurveEstimator.estimate_ts", false]], "estimate_ts() (gammapy.estimators.parameterestimator method)": [[133, "gammapy.estimators.ParameterEstimator.estimate_ts", false]], "estimate_ul() (gammapy.estimators.fluxpointsestimator method)": [[128, "gammapy.estimators.FluxPointsEstimator.estimate_ul", false]], "estimate_ul() (gammapy.estimators.fluxprofileestimator method)": [[129, "gammapy.estimators.FluxProfileEstimator.estimate_ul", false]], "estimate_ul() (gammapy.estimators.lightcurveestimator method)": [[132, "gammapy.estimators.LightCurveEstimator.estimate_ul", false]], "estimate_ul() (gammapy.estimators.parameterestimator method)": [[133, "gammapy.estimators.ParameterEstimator.estimate_ul", false]], "estimator": [[581, "term-Estimator", true]], "estimator (class in gammapy.estimators)": [[123, "gammapy.estimators.Estimator", false]], "estimator_registry (in module gammapy.estimators)": [[121, "gammapy.estimators.ESTIMATOR_REGISTRY", false]], "eta (gammapy.modeling.models.generalizedgaussianspatialmodel attribute)": [[239, "gammapy.modeling.models.GeneralizedGaussianSpatialModel.eta", false]], "eta (gammapy.modeling.models.generalizedgaussiantemporalmodel attribute)": [[240, "gammapy.modeling.models.GeneralizedGaussianTemporalModel.eta", false]], "eta (gammapy.modeling.models.shell2spatialmodel attribute)": [[263, "gammapy.modeling.models.Shell2SpatialModel.eta", false]], "evaluate() (gammapy.astro.darkmatter.burkertprofile static method)": [[17, "gammapy.astro.darkmatter.BurkertProfile.evaluate", false]], "evaluate() (gammapy.astro.darkmatter.darkmatterannihilationspectralmodel method)": [[19, "gammapy.astro.darkmatter.DarkMatterAnnihilationSpectralModel.evaluate", false]], "evaluate() (gammapy.astro.darkmatter.darkmatterdecayspectralmodel method)": [[20, "gammapy.astro.darkmatter.DarkMatterDecaySpectralModel.evaluate", false]], "evaluate() (gammapy.astro.darkmatter.einastoprofile static method)": [[21, "gammapy.astro.darkmatter.EinastoProfile.evaluate", false]], "evaluate() (gammapy.astro.darkmatter.isothermalprofile static method)": [[22, "gammapy.astro.darkmatter.IsothermalProfile.evaluate", false]], "evaluate() (gammapy.astro.darkmatter.mooreprofile static method)": [[24, "gammapy.astro.darkmatter.MooreProfile.evaluate", false]], "evaluate() (gammapy.astro.darkmatter.nfwprofile static method)": [[25, "gammapy.astro.darkmatter.NFWProfile.evaluate", false]], "evaluate() (gammapy.astro.darkmatter.primaryflux method)": [[26, "gammapy.astro.darkmatter.PrimaryFlux.evaluate", false]], "evaluate() (gammapy.astro.darkmatter.zhaoprofile static method)": [[27, "gammapy.astro.darkmatter.ZhaoProfile.evaluate", false]], "evaluate() (gammapy.astro.population.casebattacharya1998 static method)": [[28, "gammapy.astro.population.CaseBattacharya1998.evaluate", false]], "evaluate() (gammapy.astro.population.exponential static method)": [[29, "gammapy.astro.population.Exponential.evaluate", false]], "evaluate() (gammapy.astro.population.faucherkaspi2006 static method)": [[30, "gammapy.astro.population.FaucherKaspi2006.evaluate", false]], "evaluate() (gammapy.astro.population.faucherkaspi2006velocitybimodal static method)": [[31, "gammapy.astro.population.FaucherKaspi2006VelocityBimodal.evaluate", false]], "evaluate() (gammapy.astro.population.faucherkaspi2006velocitymaxwellian static method)": [[32, "gammapy.astro.population.FaucherKaspi2006VelocityMaxwellian.evaluate", false]], "evaluate() (gammapy.astro.population.lorimer2006 static method)": [[35, "gammapy.astro.population.Lorimer2006.evaluate", false]], "evaluate() (gammapy.astro.population.paczynski1990 static method)": [[36, "gammapy.astro.population.Paczynski1990.evaluate", false]], "evaluate() (gammapy.astro.population.paczynski1990velocity static method)": [[37, "gammapy.astro.population.Paczynski1990Velocity.evaluate", false]], "evaluate() (gammapy.astro.population.yusifovkucuk2004 static method)": [[39, "gammapy.astro.population.YusifovKucuk2004.evaluate", false]], "evaluate() (gammapy.astro.population.yusifovkucuk2004b static method)": [[40, "gammapy.astro.population.YusifovKucuk2004B.evaluate", false]], "evaluate() (gammapy.catalog.sourcecataloglargescalehgps method)": [[68, "gammapy.catalog.SourceCatalogLargeScaleHGPS.evaluate", false]], "evaluate() (gammapy.irf.background2d method)": [[149, "gammapy.irf.Background2D.evaluate", false]], "evaluate() (gammapy.irf.background3d method)": [[150, "gammapy.irf.Background3D.evaluate", false]], "evaluate() (gammapy.irf.backgroundirf method)": [[151, "gammapy.irf.BackgroundIRF.evaluate", false]], "evaluate() (gammapy.irf.edispkernel method)": [[152, "gammapy.irf.EDispKernel.evaluate", false]], "evaluate() (gammapy.irf.effectiveareatable2d method)": [[155, "gammapy.irf.EffectiveAreaTable2D.evaluate", false]], "evaluate() (gammapy.irf.energydependentmultigausspsf method)": [[156, "gammapy.irf.EnergyDependentMultiGaussPSF.evaluate", false]], "evaluate() (gammapy.irf.energydispersion2d method)": [[157, "gammapy.irf.EnergyDispersion2D.evaluate", false]], "evaluate() (gammapy.irf.irf method)": [[159, "gammapy.irf.IRF.evaluate", false]], "evaluate() (gammapy.irf.parametricpsf method)": [[166, "gammapy.irf.ParametricPSF.evaluate", false]], "evaluate() (gammapy.irf.psf3d method)": [[162, "gammapy.irf.PSF3D.evaluate", false]], "evaluate() (gammapy.irf.psfking method)": [[164, "gammapy.irf.PSFKing.evaluate", false]], "evaluate() (gammapy.irf.radmax2d method)": [[167, "gammapy.irf.RadMax2D.evaluate", false]], "evaluate() (gammapy.modeling.models.brokenpowerlawspectralmodel static method)": [[220, "gammapy.modeling.models.BrokenPowerLawSpectralModel.evaluate", false]], "evaluate() (gammapy.modeling.models.compoundspectralmodel method)": [[221, "gammapy.modeling.models.CompoundSpectralModel.evaluate", false]], "evaluate() (gammapy.modeling.models.constantfluxspatialmodel static method)": [[222, "gammapy.modeling.models.ConstantFluxSpatialModel.evaluate", false]], "evaluate() (gammapy.modeling.models.constantspatialmodel static method)": [[223, "gammapy.modeling.models.ConstantSpatialModel.evaluate", false]], "evaluate() (gammapy.modeling.models.constantspectralmodel static method)": [[224, "gammapy.modeling.models.ConstantSpectralModel.evaluate", false]], "evaluate() (gammapy.modeling.models.constanttemporalmodel static method)": [[225, "gammapy.modeling.models.ConstantTemporalModel.evaluate", false]], "evaluate() (gammapy.modeling.models.diskspatialmodel static method)": [[227, "gammapy.modeling.models.DiskSpatialModel.evaluate", false]], "evaluate() (gammapy.modeling.models.eblabsorptionnormspectralmodel method)": [[228, "gammapy.modeling.models.EBLAbsorptionNormSpectralModel.evaluate", false]], "evaluate() (gammapy.modeling.models.expcutoffpowerlaw3fglspectralmodel static method)": [[230, "gammapy.modeling.models.ExpCutoffPowerLaw3FGLSpectralModel.evaluate", false]], "evaluate() (gammapy.modeling.models.expcutoffpowerlawnormspectralmodel static method)": [[231, "gammapy.modeling.models.ExpCutoffPowerLawNormSpectralModel.evaluate", false]], "evaluate() (gammapy.modeling.models.expcutoffpowerlawspectralmodel static method)": [[232, "gammapy.modeling.models.ExpCutoffPowerLawSpectralModel.evaluate", false]], "evaluate() (gammapy.modeling.models.expdecaytemporalmodel static method)": [[233, "gammapy.modeling.models.ExpDecayTemporalModel.evaluate", false]], "evaluate() (gammapy.modeling.models.fovbackgroundmodel method)": [[234, "gammapy.modeling.models.FoVBackgroundModel.evaluate", false]], "evaluate() (gammapy.modeling.models.gaussianprior static method)": [[235, "gammapy.modeling.models.GaussianPrior.evaluate", false]], "evaluate() (gammapy.modeling.models.gaussianspatialmodel static method)": [[236, "gammapy.modeling.models.GaussianSpatialModel.evaluate", false]], "evaluate() (gammapy.modeling.models.gaussianspectralmodel static method)": [[237, "gammapy.modeling.models.GaussianSpectralModel.evaluate", false]], "evaluate() (gammapy.modeling.models.gaussiantemporalmodel static method)": [[238, "gammapy.modeling.models.GaussianTemporalModel.evaluate", false]], "evaluate() (gammapy.modeling.models.generalizedgaussianspatialmodel static method)": [[239, "gammapy.modeling.models.GeneralizedGaussianSpatialModel.evaluate", false]], "evaluate() (gammapy.modeling.models.generalizedgaussiantemporalmodel static method)": [[240, "gammapy.modeling.models.GeneralizedGaussianTemporalModel.evaluate", false]], "evaluate() (gammapy.modeling.models.lightcurvetemplatetemporalmodel method)": [[241, "gammapy.modeling.models.LightCurveTemplateTemporalModel.evaluate", false]], "evaluate() (gammapy.modeling.models.lineartemporalmodel static method)": [[242, "gammapy.modeling.models.LinearTemporalModel.evaluate", false]], "evaluate() (gammapy.modeling.models.logparabolanormspectralmodel static method)": [[243, "gammapy.modeling.models.LogParabolaNormSpectralModel.evaluate", false]], "evaluate() (gammapy.modeling.models.logparabolaspectralmodel static method)": [[244, "gammapy.modeling.models.LogParabolaSpectralModel.evaluate", false]], "evaluate() (gammapy.modeling.models.loguniformprior static method)": [[245, "gammapy.modeling.models.LogUniformPrior.evaluate", false]], "evaluate() (gammapy.modeling.models.meyercrabspectralmodel static method)": [[247, "gammapy.modeling.models.MeyerCrabSpectralModel.evaluate", false]], "evaluate() (gammapy.modeling.models.naimaspectralmodel method)": [[251, "gammapy.modeling.models.NaimaSpectralModel.evaluate", false]], "evaluate() (gammapy.modeling.models.piecewisenormspatialmodel method)": [[252, "gammapy.modeling.models.PiecewiseNormSpatialModel.evaluate", false]], "evaluate() (gammapy.modeling.models.piecewisenormspectralmodel method)": [[253, "gammapy.modeling.models.PiecewiseNormSpectralModel.evaluate", false]], "evaluate() (gammapy.modeling.models.powerlaw2spectralmodel static method)": [[255, "gammapy.modeling.models.PowerLaw2SpectralModel.evaluate", false]], "evaluate() (gammapy.modeling.models.powerlawnormspectralmodel static method)": [[256, "gammapy.modeling.models.PowerLawNormSpectralModel.evaluate", false]], "evaluate() (gammapy.modeling.models.powerlawspectralmodel static method)": [[257, "gammapy.modeling.models.PowerLawSpectralModel.evaluate", false]], "evaluate() (gammapy.modeling.models.powerlawtemporalmodel static method)": [[258, "gammapy.modeling.models.PowerLawTemporalModel.evaluate", false]], "evaluate() (gammapy.modeling.models.scalespectralmodel method)": [[262, "gammapy.modeling.models.ScaleSpectralModel.evaluate", false]], "evaluate() (gammapy.modeling.models.shell2spatialmodel static method)": [[263, "gammapy.modeling.models.Shell2SpatialModel.evaluate", false]], "evaluate() (gammapy.modeling.models.shellspatialmodel static method)": [[264, "gammapy.modeling.models.ShellSpatialModel.evaluate", false]], "evaluate() (gammapy.modeling.models.sinetemporalmodel static method)": [[265, "gammapy.modeling.models.SineTemporalModel.evaluate", false]], "evaluate() (gammapy.modeling.models.skymodel method)": [[266, "gammapy.modeling.models.SkyModel.evaluate", false]], "evaluate() (gammapy.modeling.models.smoothbrokenpowerlawspectralmodel static method)": [[267, "gammapy.modeling.models.SmoothBrokenPowerLawSpectralModel.evaluate", false]], "evaluate() (gammapy.modeling.models.superexpcutoffpowerlaw3fglspectralmodel static method)": [[270, "gammapy.modeling.models.SuperExpCutoffPowerLaw3FGLSpectralModel.evaluate", false]], "evaluate() (gammapy.modeling.models.superexpcutoffpowerlaw4fgldr3spectralmodel static method)": [[271, "gammapy.modeling.models.SuperExpCutoffPowerLaw4FGLDR3SpectralModel.evaluate", false]], "evaluate() (gammapy.modeling.models.superexpcutoffpowerlaw4fglspectralmodel static method)": [[272, "gammapy.modeling.models.SuperExpCutoffPowerLaw4FGLSpectralModel.evaluate", false]], "evaluate() (gammapy.modeling.models.templatendspatialmodel method)": [[274, "gammapy.modeling.models.TemplateNDSpatialModel.evaluate", false]], "evaluate() (gammapy.modeling.models.templatendspectralmodel method)": [[275, "gammapy.modeling.models.TemplateNDSpectralModel.evaluate", false]], "evaluate() (gammapy.modeling.models.templatenpredmodel method)": [[276, "gammapy.modeling.models.TemplateNPredModel.evaluate", false]], "evaluate() (gammapy.modeling.models.templatephasecurvetemporalmodel method)": [[277, "gammapy.modeling.models.TemplatePhaseCurveTemporalModel.evaluate", false]], "evaluate() (gammapy.modeling.models.templatespatialmodel method)": [[278, "gammapy.modeling.models.TemplateSpatialModel.evaluate", false]], "evaluate() (gammapy.modeling.models.templatespectralmodel method)": [[279, "gammapy.modeling.models.TemplateSpectralModel.evaluate", false]], "evaluate() (gammapy.modeling.models.uniformprior static method)": [[281, "gammapy.modeling.models.UniformPrior.evaluate", false]], "evaluate_containment() (gammapy.irf.energydependentmultigausspsf static method)": [[156, "gammapy.irf.EnergyDependentMultiGaussPSF.evaluate_containment", false]], "evaluate_containment() (gammapy.irf.parametricpsf method)": [[166, "gammapy.irf.ParametricPSF.evaluate_containment", false]], "evaluate_containment() (gammapy.irf.psfking static method)": [[164, "gammapy.irf.PSFKing.evaluate_containment", false]], "evaluate_direct() (gammapy.irf.energydependentmultigausspsf static method)": [[156, "gammapy.irf.EnergyDependentMultiGaussPSF.evaluate_direct", false]], "evaluate_direct() (gammapy.irf.parametricpsf method)": [[166, "gammapy.irf.ParametricPSF.evaluate_direct", false]], "evaluate_direct() (gammapy.irf.psfking static method)": [[164, "gammapy.irf.PSFKing.evaluate_direct", false]], "evaluate_energy_flux() (gammapy.modeling.models.powerlawnormspectralmodel static method)": [[256, "gammapy.modeling.models.PowerLawNormSpectralModel.evaluate_energy_flux", false]], "evaluate_energy_flux() (gammapy.modeling.models.powerlawspectralmodel static method)": [[257, "gammapy.modeling.models.PowerLawSpectralModel.evaluate_energy_flux", false]], "evaluate_error() (gammapy.astro.darkmatter.darkmatterannihilationspectralmodel method)": [[19, "gammapy.astro.darkmatter.DarkMatterAnnihilationSpectralModel.evaluate_error", false]], "evaluate_error() (gammapy.astro.darkmatter.darkmatterdecayspectralmodel method)": [[20, "gammapy.astro.darkmatter.DarkMatterDecaySpectralModel.evaluate_error", false]], "evaluate_error() (gammapy.astro.darkmatter.primaryflux method)": [[26, "gammapy.astro.darkmatter.PrimaryFlux.evaluate_error", false]], "evaluate_error() (gammapy.modeling.models.brokenpowerlawspectralmodel method)": [[220, "gammapy.modeling.models.BrokenPowerLawSpectralModel.evaluate_error", false]], "evaluate_error() (gammapy.modeling.models.compoundspectralmodel method)": [[221, "gammapy.modeling.models.CompoundSpectralModel.evaluate_error", false]], "evaluate_error() (gammapy.modeling.models.constantspectralmodel method)": [[224, "gammapy.modeling.models.ConstantSpectralModel.evaluate_error", false]], "evaluate_error() (gammapy.modeling.models.eblabsorptionnormspectralmodel method)": [[228, "gammapy.modeling.models.EBLAbsorptionNormSpectralModel.evaluate_error", false]], "evaluate_error() (gammapy.modeling.models.expcutoffpowerlaw3fglspectralmodel method)": [[230, "gammapy.modeling.models.ExpCutoffPowerLaw3FGLSpectralModel.evaluate_error", false]], "evaluate_error() (gammapy.modeling.models.expcutoffpowerlawnormspectralmodel method)": [[231, "gammapy.modeling.models.ExpCutoffPowerLawNormSpectralModel.evaluate_error", false]], "evaluate_error() (gammapy.modeling.models.expcutoffpowerlawspectralmodel method)": [[232, "gammapy.modeling.models.ExpCutoffPowerLawSpectralModel.evaluate_error", false]], "evaluate_error() (gammapy.modeling.models.gaussianspectralmodel method)": [[237, "gammapy.modeling.models.GaussianSpectralModel.evaluate_error", false]], "evaluate_error() (gammapy.modeling.models.logparabolanormspectralmodel method)": [[243, "gammapy.modeling.models.LogParabolaNormSpectralModel.evaluate_error", false]], "evaluate_error() (gammapy.modeling.models.logparabolaspectralmodel method)": [[244, "gammapy.modeling.models.LogParabolaSpectralModel.evaluate_error", false]], "evaluate_error() (gammapy.modeling.models.meyercrabspectralmodel method)": [[247, "gammapy.modeling.models.MeyerCrabSpectralModel.evaluate_error", false]], "evaluate_error() (gammapy.modeling.models.naimaspectralmodel method)": [[251, "gammapy.modeling.models.NaimaSpectralModel.evaluate_error", false]], "evaluate_error() (gammapy.modeling.models.piecewisenormspectralmodel method)": [[253, "gammapy.modeling.models.PiecewiseNormSpectralModel.evaluate_error", false]], "evaluate_error() (gammapy.modeling.models.powerlaw2spectralmodel method)": [[255, "gammapy.modeling.models.PowerLaw2SpectralModel.evaluate_error", false]], "evaluate_error() (gammapy.modeling.models.powerlawnormspectralmodel method)": [[256, "gammapy.modeling.models.PowerLawNormSpectralModel.evaluate_error", false]], "evaluate_error() (gammapy.modeling.models.powerlawspectralmodel method)": [[257, "gammapy.modeling.models.PowerLawSpectralModel.evaluate_error", false]], "evaluate_error() (gammapy.modeling.models.scalespectralmodel method)": [[262, "gammapy.modeling.models.ScaleSpectralModel.evaluate_error", false]], "evaluate_error() (gammapy.modeling.models.smoothbrokenpowerlawspectralmodel method)": [[267, "gammapy.modeling.models.SmoothBrokenPowerLawSpectralModel.evaluate_error", false]], "evaluate_error() (gammapy.modeling.models.spectralmodel method)": [[269, "gammapy.modeling.models.SpectralModel.evaluate_error", false]], "evaluate_error() (gammapy.modeling.models.superexpcutoffpowerlaw3fglspectralmodel method)": [[270, "gammapy.modeling.models.SuperExpCutoffPowerLaw3FGLSpectralModel.evaluate_error", false]], "evaluate_error() (gammapy.modeling.models.superexpcutoffpowerlaw4fgldr3spectralmodel method)": [[271, "gammapy.modeling.models.SuperExpCutoffPowerLaw4FGLDR3SpectralModel.evaluate_error", false]], "evaluate_error() (gammapy.modeling.models.superexpcutoffpowerlaw4fglspectralmodel method)": [[272, "gammapy.modeling.models.SuperExpCutoffPowerLaw4FGLSpectralModel.evaluate_error", false]], "evaluate_error() (gammapy.modeling.models.templatendspectralmodel method)": [[275, "gammapy.modeling.models.TemplateNDSpectralModel.evaluate_error", false]], "evaluate_error() (gammapy.modeling.models.templatespectralmodel method)": [[279, "gammapy.modeling.models.TemplateSpectralModel.evaluate_error", false]], "evaluate_geom() (gammapy.modeling.models.constantfluxspatialmodel static method)": [[222, "gammapy.modeling.models.ConstantFluxSpatialModel.evaluate_geom", false]], "evaluate_geom() (gammapy.modeling.models.constantspatialmodel method)": [[223, "gammapy.modeling.models.ConstantSpatialModel.evaluate_geom", false]], "evaluate_geom() (gammapy.modeling.models.diskspatialmodel method)": [[227, "gammapy.modeling.models.DiskSpatialModel.evaluate_geom", false]], "evaluate_geom() (gammapy.modeling.models.fovbackgroundmodel method)": [[234, "gammapy.modeling.models.FoVBackgroundModel.evaluate_geom", false]], "evaluate_geom() (gammapy.modeling.models.gaussianspatialmodel method)": [[236, "gammapy.modeling.models.GaussianSpatialModel.evaluate_geom", false]], "evaluate_geom() (gammapy.modeling.models.generalizedgaussianspatialmodel method)": [[239, "gammapy.modeling.models.GeneralizedGaussianSpatialModel.evaluate_geom", false]], "evaluate_geom() (gammapy.modeling.models.piecewisenormspatialmodel method)": [[252, "gammapy.modeling.models.PiecewiseNormSpatialModel.evaluate_geom", false]], "evaluate_geom() (gammapy.modeling.models.pointspatialmodel method)": [[254, "gammapy.modeling.models.PointSpatialModel.evaluate_geom", false]], "evaluate_geom() (gammapy.modeling.models.shell2spatialmodel method)": [[263, "gammapy.modeling.models.Shell2SpatialModel.evaluate_geom", false]], "evaluate_geom() (gammapy.modeling.models.shellspatialmodel method)": [[264, "gammapy.modeling.models.ShellSpatialModel.evaluate_geom", false]], "evaluate_geom() (gammapy.modeling.models.skymodel method)": [[266, "gammapy.modeling.models.SkyModel.evaluate_geom", false]], "evaluate_geom() (gammapy.modeling.models.spatialmodel method)": [[268, "gammapy.modeling.models.SpatialModel.evaluate_geom", false]], "evaluate_geom() (gammapy.modeling.models.templatendspatialmodel method)": [[274, "gammapy.modeling.models.TemplateNDSpatialModel.evaluate_geom", false]], "evaluate_geom() (gammapy.modeling.models.templatespatialmodel method)": [[278, "gammapy.modeling.models.TemplateSpatialModel.evaluate_geom", false]], "evaluate_integral() (gammapy.modeling.models.powerlaw2spectralmodel static method)": [[255, "gammapy.modeling.models.PowerLaw2SpectralModel.evaluate_integral", false]], "evaluate_integral() (gammapy.modeling.models.powerlawnormspectralmodel static method)": [[256, "gammapy.modeling.models.PowerLawNormSpectralModel.evaluate_integral", false]], "evaluate_integral() (gammapy.modeling.models.powerlawspectralmodel static method)": [[257, "gammapy.modeling.models.PowerLawSpectralModel.evaluate_integral", false]], "evaluate_parameters() (gammapy.irf.energydependentmultigausspsf method)": [[156, "gammapy.irf.EnergyDependentMultiGaussPSF.evaluate_parameters", false]], "evaluate_parameters() (gammapy.irf.parametricpsf method)": [[166, "gammapy.irf.ParametricPSF.evaluate_parameters", false]], "evaluate_parameters() (gammapy.irf.psfking method)": [[164, "gammapy.irf.PSFKing.evaluate_parameters", false]], "evaluation_bin_size_min (gammapy.modeling.models.constantfluxspatialmodel attribute)": [[222, "gammapy.modeling.models.ConstantFluxSpatialModel.evaluation_bin_size_min", false]], "evaluation_bin_size_min (gammapy.modeling.models.constantspatialmodel attribute)": [[223, "gammapy.modeling.models.ConstantSpatialModel.evaluation_bin_size_min", false]], "evaluation_bin_size_min (gammapy.modeling.models.diskspatialmodel attribute)": [[227, "gammapy.modeling.models.DiskSpatialModel.evaluation_bin_size_min", false]], "evaluation_bin_size_min (gammapy.modeling.models.gaussianspatialmodel attribute)": [[236, "gammapy.modeling.models.GaussianSpatialModel.evaluation_bin_size_min", false]], "evaluation_bin_size_min (gammapy.modeling.models.generalizedgaussianspatialmodel attribute)": [[239, "gammapy.modeling.models.GeneralizedGaussianSpatialModel.evaluation_bin_size_min", false]], "evaluation_bin_size_min (gammapy.modeling.models.piecewisenormspatialmodel attribute)": [[252, "gammapy.modeling.models.PiecewiseNormSpatialModel.evaluation_bin_size_min", false]], "evaluation_bin_size_min (gammapy.modeling.models.pointspatialmodel attribute)": [[254, "gammapy.modeling.models.PointSpatialModel.evaluation_bin_size_min", false]], "evaluation_bin_size_min (gammapy.modeling.models.shell2spatialmodel attribute)": [[263, "gammapy.modeling.models.Shell2SpatialModel.evaluation_bin_size_min", false]], "evaluation_bin_size_min (gammapy.modeling.models.shellspatialmodel attribute)": [[264, "gammapy.modeling.models.ShellSpatialModel.evaluation_bin_size_min", false]], "evaluation_bin_size_min (gammapy.modeling.models.skymodel attribute)": [[266, "gammapy.modeling.models.SkyModel.evaluation_bin_size_min", false]], "evaluation_bin_size_min (gammapy.modeling.models.spatialmodel attribute)": [[268, "gammapy.modeling.models.SpatialModel.evaluation_bin_size_min", false]], "evaluation_bin_size_min (gammapy.modeling.models.templatendspatialmodel attribute)": [[274, "gammapy.modeling.models.TemplateNDSpatialModel.evaluation_bin_size_min", false]], "evaluation_bin_size_min (gammapy.modeling.models.templatespatialmodel attribute)": [[278, "gammapy.modeling.models.TemplateSpatialModel.evaluation_bin_size_min", false]], "evaluation_radius (gammapy.modeling.models.constantfluxspatialmodel attribute)": [[222, "gammapy.modeling.models.ConstantFluxSpatialModel.evaluation_radius", false]], "evaluation_radius (gammapy.modeling.models.constantspatialmodel attribute)": [[223, "gammapy.modeling.models.ConstantSpatialModel.evaluation_radius", false]], "evaluation_radius (gammapy.modeling.models.diskspatialmodel attribute)": [[227, "gammapy.modeling.models.DiskSpatialModel.evaluation_radius", false]], "evaluation_radius (gammapy.modeling.models.gaussianspatialmodel attribute)": [[236, "gammapy.modeling.models.GaussianSpatialModel.evaluation_radius", false]], "evaluation_radius (gammapy.modeling.models.generalizedgaussianspatialmodel attribute)": [[239, "gammapy.modeling.models.GeneralizedGaussianSpatialModel.evaluation_radius", false]], "evaluation_radius (gammapy.modeling.models.piecewisenormspatialmodel attribute)": [[252, "gammapy.modeling.models.PiecewiseNormSpatialModel.evaluation_radius", false]], "evaluation_radius (gammapy.modeling.models.pointspatialmodel attribute)": [[254, "gammapy.modeling.models.PointSpatialModel.evaluation_radius", false]], "evaluation_radius (gammapy.modeling.models.shell2spatialmodel attribute)": [[263, "gammapy.modeling.models.Shell2SpatialModel.evaluation_radius", false]], "evaluation_radius (gammapy.modeling.models.shellspatialmodel attribute)": [[264, "gammapy.modeling.models.ShellSpatialModel.evaluation_radius", false]], "evaluation_radius (gammapy.modeling.models.skymodel attribute)": [[266, "gammapy.modeling.models.SkyModel.evaluation_radius", false]], "evaluation_radius (gammapy.modeling.models.spatialmodel attribute)": [[268, "gammapy.modeling.models.SpatialModel.evaluation_radius", false]], "evaluation_radius (gammapy.modeling.models.templatendspatialmodel attribute)": [[274, "gammapy.modeling.models.TemplateNDSpatialModel.evaluation_radius", false]], "evaluation_radius (gammapy.modeling.models.templatenpredmodel attribute)": [[276, "gammapy.modeling.models.TemplateNPredModel.evaluation_radius", false]], "evaluation_radius (gammapy.modeling.models.templatespatialmodel attribute)": [[278, "gammapy.modeling.models.TemplateSpatialModel.evaluation_radius", false]], "evaluation_region (gammapy.modeling.models.constantfluxspatialmodel attribute)": [[222, "gammapy.modeling.models.ConstantFluxSpatialModel.evaluation_region", false]], "evaluation_region (gammapy.modeling.models.constantspatialmodel attribute)": [[223, "gammapy.modeling.models.ConstantSpatialModel.evaluation_region", false]], "evaluation_region (gammapy.modeling.models.diskspatialmodel attribute)": [[227, "gammapy.modeling.models.DiskSpatialModel.evaluation_region", false]], "evaluation_region (gammapy.modeling.models.gaussianspatialmodel attribute)": [[236, "gammapy.modeling.models.GaussianSpatialModel.evaluation_region", false]], "evaluation_region (gammapy.modeling.models.generalizedgaussianspatialmodel attribute)": [[239, "gammapy.modeling.models.GeneralizedGaussianSpatialModel.evaluation_region", false]], "evaluation_region (gammapy.modeling.models.piecewisenormspatialmodel attribute)": [[252, "gammapy.modeling.models.PiecewiseNormSpatialModel.evaluation_region", false]], "evaluation_region (gammapy.modeling.models.pointspatialmodel attribute)": [[254, "gammapy.modeling.models.PointSpatialModel.evaluation_region", false]], "evaluation_region (gammapy.modeling.models.shell2spatialmodel attribute)": [[263, "gammapy.modeling.models.Shell2SpatialModel.evaluation_region", false]], "evaluation_region (gammapy.modeling.models.shellspatialmodel attribute)": [[264, "gammapy.modeling.models.ShellSpatialModel.evaluation_region", false]], "evaluation_region (gammapy.modeling.models.skymodel attribute)": [[266, "gammapy.modeling.models.SkyModel.evaluation_region", false]], "evaluation_region (gammapy.modeling.models.spatialmodel attribute)": [[268, "gammapy.modeling.models.SpatialModel.evaluation_region", false]], "evaluation_region (gammapy.modeling.models.templatendspatialmodel attribute)": [[274, "gammapy.modeling.models.TemplateNDSpatialModel.evaluation_region", false]], "evaluation_region (gammapy.modeling.models.templatespatialmodel attribute)": [[278, "gammapy.modeling.models.TemplateSpatialModel.evaluation_region", false]], "evaluators (gammapy.datasets.mapdataset attribute)": [[103, "gammapy.datasets.MapDataset.evaluators", false]], "evaluators (gammapy.datasets.mapdatasetonoff attribute)": [[106, "gammapy.datasets.MapDatasetOnOff.evaluators", false]], "evaluators (gammapy.datasets.spectrumdataset attribute)": [[110, "gammapy.datasets.SpectrumDataset.evaluators", false]], "evaluators (gammapy.datasets.spectrumdatasetonoff attribute)": [[111, "gammapy.datasets.SpectrumDatasetOnOff.evaluators", false]], "event_det_coords() (gammapy.datasets.mapdataseteventsampler static method)": [[104, "gammapy.datasets.MapDatasetEventSampler.event_det_coords", false]], "event_det_coords() (gammapy.datasets.observationeventsampler static method)": [[109, "gammapy.datasets.ObservationEventSampler.event_det_coords", false]], "event_filter_types (gammapy.data.observationfilter attribute)": [[89, "gammapy.data.ObservationFilter.EVENT_FILTER_TYPES", false]], "event_list_meta() (gammapy.datasets.mapdataseteventsampler static method)": [[104, "gammapy.datasets.MapDatasetEventSampler.event_list_meta", false]], "event_list_meta() (gammapy.datasets.observationeventsampler static method)": [[109, "gammapy.datasets.ObservationEventSampler.event_list_meta", false]], "eventlist (class in gammapy.data)": [[83, "gammapy.data.EventList", false]], "eventlistmetadata (class in gammapy.data)": [[84, "gammapy.data.EventListMetaData", false]], "events (gammapy.data.observation attribute)": [[88, "gammapy.data.Observation.events", false]], "evolved (gammapy.astro.population.casebattacharya1998 attribute)": [[28, "gammapy.astro.population.CaseBattacharya1998.evolved", false]], "evolved (gammapy.astro.population.exponential attribute)": [[29, "gammapy.astro.population.Exponential.evolved", false]], "evolved (gammapy.astro.population.faucherkaspi2006 attribute)": [[30, "gammapy.astro.population.FaucherKaspi2006.evolved", false]], "evolved (gammapy.astro.population.lorimer2006 attribute)": [[35, "gammapy.astro.population.Lorimer2006.evolved", false]], "evolved (gammapy.astro.population.paczynski1990 attribute)": [[36, "gammapy.astro.population.Paczynski1990.evolved", false]], "evolved (gammapy.astro.population.yusifovkucuk2004 attribute)": [[39, "gammapy.astro.population.YusifovKucuk2004.evolved", false]], "evolved (gammapy.astro.population.yusifovkucuk2004b attribute)": [[40, "gammapy.astro.population.YusifovKucuk2004B.evolved", false]], "excess (gammapy.datasets.mapdataset attribute)": [[103, "gammapy.datasets.MapDataset.excess", false]], "excess (gammapy.datasets.mapdatasetonoff attribute)": [[106, "gammapy.datasets.MapDatasetOnOff.excess", false]], "excess (gammapy.datasets.spectrumdataset attribute)": [[110, "gammapy.datasets.SpectrumDataset.excess", false]], "excess (gammapy.datasets.spectrumdatasetonoff attribute)": [[111, "gammapy.datasets.SpectrumDatasetOnOff.excess", false]], "excessmapestimator (class in gammapy.estimators)": [[124, "gammapy.estimators.ExcessMapEstimator", false]], "expand_map() (gammapy.estimators.lightcurveestimator static method)": [[132, "gammapy.estimators.LightCurveEstimator.expand_map", false]], "expcutoffpowerlaw3fglspectralmodel (class in gammapy.modeling.models)": [[230, "gammapy.modeling.models.ExpCutoffPowerLaw3FGLSpectralModel", false]], "expcutoffpowerlawnormspectralmodel (class in gammapy.modeling.models)": [[231, "gammapy.modeling.models.ExpCutoffPowerLawNormSpectralModel", false]], "expcutoffpowerlawspectralmodel (class in gammapy.modeling.models)": [[232, "gammapy.modeling.models.ExpCutoffPowerLawSpectralModel", false]], "expdecaytemporalmodel (class in gammapy.modeling.models)": [[233, "gammapy.modeling.models.ExpDecayTemporalModel", false]], "expfactor (gammapy.modeling.models.superexpcutoffpowerlaw4fgldr3spectralmodel attribute)": [[271, "gammapy.modeling.models.SuperExpCutoffPowerLaw4FGLDR3SpectralModel.expfactor", false]], "expfactor (gammapy.modeling.models.superexpcutoffpowerlaw4fglspectralmodel attribute)": [[272, "gammapy.modeling.models.SuperExpCutoffPowerLaw4FGLSpectralModel.expfactor", false]], "exponential (class in gammapy.astro.population)": [[29, "gammapy.astro.population.Exponential", false]], "exposure (gammapy.datasets.mapdataset attribute)": [[103, "gammapy.datasets.MapDataset.exposure", false]], "exposure (gammapy.datasets.mapdatasetonoff attribute)": [[106, "gammapy.datasets.MapDatasetOnOff.exposure", false]], "exposure (gammapy.datasets.spectrumdataset attribute)": [[110, "gammapy.datasets.SpectrumDataset.exposure", false]], "exposure (gammapy.datasets.spectrumdatasetonoff attribute)": [[111, "gammapy.datasets.SpectrumDatasetOnOff.exposure", false]], "extend() (gammapy.data.observations method)": [[92, "gammapy.data.Observations.extend", false]], "extend() (gammapy.datasets.datasets method)": [[100, "gammapy.datasets.Datasets.extend", false]], "extend() (gammapy.modeling.models.models method)": [[250, "gammapy.modeling.models.Models.extend", false]], "f0 (gammapy.modeling.models.templatephasecurvetemporalmodel attribute)": [[277, "gammapy.modeling.models.TemplatePhaseCurveTemporalModel.f0", false]], "f1 (gammapy.modeling.models.templatephasecurvetemporalmodel attribute)": [[277, "gammapy.modeling.models.TemplatePhaseCurveTemporalModel.f1", false]], "f2 (gammapy.modeling.models.templatephasecurvetemporalmodel attribute)": [[277, "gammapy.modeling.models.TemplatePhaseCurveTemporalModel.f2", false]], "f_cash_root_cython() (in module gammapy.stats)": [[302, "gammapy.stats.f_cash_root_cython", false]], "factor (gammapy.modeling.parameter attribute)": [[216, "gammapy.modeling.Parameter.factor", false]], "factor (gammapy.modeling.priorparameter attribute)": [[218, "gammapy.modeling.PriorParameter.factor", false]], "factor_max (gammapy.modeling.parameter attribute)": [[216, "gammapy.modeling.Parameter.factor_max", false]], "factor_max (gammapy.modeling.priorparameter attribute)": [[218, "gammapy.modeling.PriorParameter.factor_max", false]], "factor_min (gammapy.modeling.parameter attribute)": [[216, "gammapy.modeling.Parameter.factor_min", false]], "factor_min (gammapy.modeling.priorparameter attribute)": [[218, "gammapy.modeling.PriorParameter.factor_min", false]], "fake() (gammapy.datasets.mapdataset method)": [[103, "gammapy.datasets.MapDataset.fake", false]], "fake() (gammapy.datasets.mapdatasetonoff method)": [[106, "gammapy.datasets.MapDatasetOnOff.fake", false]], "fake() (gammapy.datasets.spectrumdataset method)": [[110, "gammapy.datasets.SpectrumDataset.fake", false]], "fake() (gammapy.datasets.spectrumdatasetonoff method)": [[111, "gammapy.datasets.SpectrumDatasetOnOff.fake", false]], "faucherkaspi2006 (class in gammapy.astro.population)": [[30, "gammapy.astro.population.FaucherKaspi2006", false]], "faucherkaspi2006velocitybimodal (class in gammapy.astro.population)": [[31, "gammapy.astro.population.FaucherKaspi2006VelocityBimodal", false]], "faucherkaspi2006velocitymaxwellian (class in gammapy.astro.population)": [[32, "gammapy.astro.population.FaucherKaspi2006VelocityMaxwellian", false]], "faucherspiral (class in gammapy.astro.population)": [[33, "gammapy.astro.population.FaucherSpiral", false]], "fermipydatasetsreader (class in gammapy.datasets)": [[101, "gammapy.datasets.FermipyDatasetsReader", false]], "field() (gammapy.data.hduindextable method)": [[87, "gammapy.data.HDUIndexTable.field", false]], "field() (gammapy.data.observationtable method)": [[91, "gammapy.data.ObservationTable.field", false]], "fill_by_coord() (gammapy.maps.hpxmap method)": [[195, "gammapy.maps.HpxMap.fill_by_coord", false]], "fill_by_coord() (gammapy.maps.hpxndmap method)": [[196, "gammapy.maps.HpxNDMap.fill_by_coord", false]], "fill_by_coord() (gammapy.maps.map method)": [[198, "gammapy.maps.Map.fill_by_coord", false]], "fill_by_coord() (gammapy.maps.regionndmap method)": [[204, "gammapy.maps.RegionNDMap.fill_by_coord", false]], "fill_by_coord() (gammapy.maps.wcsmap method)": [[207, "gammapy.maps.WcsMap.fill_by_coord", false]], "fill_by_coord() (gammapy.maps.wcsndmap method)": [[208, "gammapy.maps.WcsNDMap.fill_by_coord", false]], "fill_by_idx() (gammapy.maps.hpxmap method)": [[195, "gammapy.maps.HpxMap.fill_by_idx", false]], "fill_by_idx() (gammapy.maps.hpxndmap method)": [[196, "gammapy.maps.HpxNDMap.fill_by_idx", false]], "fill_by_idx() (gammapy.maps.map method)": [[198, "gammapy.maps.Map.fill_by_idx", false]], "fill_by_idx() (gammapy.maps.regionndmap method)": [[204, "gammapy.maps.RegionNDMap.fill_by_idx", false]], "fill_by_idx() (gammapy.maps.wcsmap method)": [[207, "gammapy.maps.WcsMap.fill_by_idx", false]], "fill_by_idx() (gammapy.maps.wcsndmap method)": [[208, "gammapy.maps.WcsNDMap.fill_by_idx", false]], "fill_by_pix() (gammapy.maps.hpxmap method)": [[195, "gammapy.maps.HpxMap.fill_by_pix", false]], "fill_by_pix() (gammapy.maps.hpxndmap method)": [[196, "gammapy.maps.HpxNDMap.fill_by_pix", false]], "fill_by_pix() (gammapy.maps.map method)": [[198, "gammapy.maps.Map.fill_by_pix", false]], "fill_by_pix() (gammapy.maps.regionndmap method)": [[204, "gammapy.maps.RegionNDMap.fill_by_pix", false]], "fill_by_pix() (gammapy.maps.wcsmap method)": [[207, "gammapy.maps.WcsMap.fill_by_pix", false]], "fill_by_pix() (gammapy.maps.wcsndmap method)": [[208, "gammapy.maps.WcsNDMap.fill_by_pix", false]], "fill_events() (gammapy.maps.hpxmap method)": [[195, "gammapy.maps.HpxMap.fill_events", false]], "fill_events() (gammapy.maps.hpxndmap method)": [[196, "gammapy.maps.HpxNDMap.fill_events", false]], "fill_events() (gammapy.maps.map method)": [[198, "gammapy.maps.Map.fill_events", false]], "fill_events() (gammapy.maps.regionndmap method)": [[204, "gammapy.maps.RegionNDMap.fill_events", false]], "fill_events() (gammapy.maps.wcsmap method)": [[207, "gammapy.maps.WcsMap.fill_events", false]], "fill_events() (gammapy.maps.wcsndmap method)": [[208, "gammapy.maps.WcsNDMap.fill_events", false]], "filled() (gammapy.data.hduindextable method)": [[87, "gammapy.data.HDUIndexTable.filled", false]], "filled() (gammapy.data.observationtable method)": [[91, "gammapy.data.ObservationTable.filled", false]], "filter_events() (gammapy.data.observationfilter method)": [[89, "gammapy.data.ObservationFilter.filter_events", false]], "filter_gti() (gammapy.data.observationfilter method)": [[89, "gammapy.data.ObservationFilter.filter_gti", false]], "filter_success_nan (gammapy.estimators.fluxmaps attribute)": [[125, "gammapy.estimators.FluxMaps.filter_success_nan", false]], "filter_success_nan (gammapy.estimators.fluxpoints attribute)": [[127, "gammapy.estimators.FluxPoints.filter_success_nan", false]], "find_peaks() (in module gammapy.estimators.utils)": [[143, "gammapy.estimators.utils.find_peaks", false]], "find_peaks_in_flux_map() (in module gammapy.estimators.utils)": [[144, "gammapy.estimators.utils.find_peaks_in_flux_map", false]], "fit (class in gammapy.modeling)": [[213, "gammapy.modeling.Fit", false]], "fit_deriv (gammapy.astro.population.casebattacharya1998 attribute)": [[28, "gammapy.astro.population.CaseBattacharya1998.fit_deriv", false]], "fit_deriv (gammapy.astro.population.exponential attribute)": [[29, "gammapy.astro.population.Exponential.fit_deriv", false]], "fit_deriv (gammapy.astro.population.faucherkaspi2006 attribute)": [[30, "gammapy.astro.population.FaucherKaspi2006.fit_deriv", false]], "fit_deriv (gammapy.astro.population.faucherkaspi2006velocitybimodal attribute)": [[31, "gammapy.astro.population.FaucherKaspi2006VelocityBimodal.fit_deriv", false]], "fit_deriv (gammapy.astro.population.faucherkaspi2006velocitymaxwellian attribute)": [[32, "gammapy.astro.population.FaucherKaspi2006VelocityMaxwellian.fit_deriv", false]], "fit_deriv (gammapy.astro.population.lorimer2006 attribute)": [[35, "gammapy.astro.population.Lorimer2006.fit_deriv", false]], "fit_deriv (gammapy.astro.population.paczynski1990 attribute)": [[36, "gammapy.astro.population.Paczynski1990.fit_deriv", false]], "fit_deriv (gammapy.astro.population.paczynski1990velocity attribute)": [[37, "gammapy.astro.population.Paczynski1990Velocity.fit_deriv", false]], "fit_deriv (gammapy.astro.population.yusifovkucuk2004 attribute)": [[39, "gammapy.astro.population.YusifovKucuk2004.fit_deriv", false]], "fit_deriv (gammapy.astro.population.yusifovkucuk2004b attribute)": [[40, "gammapy.astro.population.YusifovKucuk2004B.fit_deriv", false]], "fitresult (class in gammapy.modeling)": [[214, "gammapy.modeling.FitResult", false]], "fittable (gammapy.astro.population.casebattacharya1998 attribute)": [[28, "gammapy.astro.population.CaseBattacharya1998.fittable", false]], "fittable (gammapy.astro.population.exponential attribute)": [[29, "gammapy.astro.population.Exponential.fittable", false]], "fittable (gammapy.astro.population.faucherkaspi2006 attribute)": [[30, "gammapy.astro.population.FaucherKaspi2006.fittable", false]], "fittable (gammapy.astro.population.faucherkaspi2006velocitybimodal attribute)": [[31, "gammapy.astro.population.FaucherKaspi2006VelocityBimodal.fittable", false]], "fittable (gammapy.astro.population.faucherkaspi2006velocitymaxwellian attribute)": [[32, "gammapy.astro.population.FaucherKaspi2006VelocityMaxwellian.fittable", false]], "fittable (gammapy.astro.population.lorimer2006 attribute)": [[35, "gammapy.astro.population.Lorimer2006.fittable", false]], "fittable (gammapy.astro.population.paczynski1990 attribute)": [[36, "gammapy.astro.population.Paczynski1990.fittable", false]], "fittable (gammapy.astro.population.paczynski1990velocity attribute)": [[37, "gammapy.astro.population.Paczynski1990Velocity.fittable", false]], "fittable (gammapy.astro.population.yusifovkucuk2004 attribute)": [[39, "gammapy.astro.population.YusifovKucuk2004.fittable", false]], "fittable (gammapy.astro.population.yusifovkucuk2004b attribute)": [[40, "gammapy.astro.population.YusifovKucuk2004B.fittable", false]], "fixed (gammapy.astro.population.casebattacharya1998 attribute)": [[28, "gammapy.astro.population.CaseBattacharya1998.fixed", false]], "fixed (gammapy.astro.population.exponential attribute)": [[29, "gammapy.astro.population.Exponential.fixed", false]], "fixed (gammapy.astro.population.faucherkaspi2006 attribute)": [[30, "gammapy.astro.population.FaucherKaspi2006.fixed", false]], "fixed (gammapy.astro.population.faucherkaspi2006velocitybimodal attribute)": [[31, "gammapy.astro.population.FaucherKaspi2006VelocityBimodal.fixed", false]], "fixed (gammapy.astro.population.faucherkaspi2006velocitymaxwellian attribute)": [[32, "gammapy.astro.population.FaucherKaspi2006VelocityMaxwellian.fixed", false]], "fixed (gammapy.astro.population.lorimer2006 attribute)": [[35, "gammapy.astro.population.Lorimer2006.fixed", false]], "fixed (gammapy.astro.population.paczynski1990 attribute)": [[36, "gammapy.astro.population.Paczynski1990.fixed", false]], "fixed (gammapy.astro.population.paczynski1990velocity attribute)": [[37, "gammapy.astro.population.Paczynski1990Velocity.fixed", false]], "fixed (gammapy.astro.population.yusifovkucuk2004 attribute)": [[39, "gammapy.astro.population.YusifovKucuk2004.fixed", false]], "fixed (gammapy.astro.population.yusifovkucuk2004b attribute)": [[40, "gammapy.astro.population.YusifovKucuk2004B.fixed", false]], "fixed_altaz (gammapy.data.fixedpointinginfo attribute)": [[85, "gammapy.data.FixedPointingInfo.fixed_altaz", false]], "fixed_icrs (gammapy.data.fixedpointinginfo attribute)": [[85, "gammapy.data.FixedPointingInfo.fixed_icrs", false]], "fixedpointinginfo (class in gammapy.data)": [[85, "gammapy.data.FixedPointingInfo", false]], "flat (gammapy.maps.mapcoord attribute)": [[201, "gammapy.maps.MapCoord.flat", false]], "flux (gammapy.estimators.fluxmaps attribute)": [[125, "gammapy.estimators.FluxMaps.flux", false]], "flux (gammapy.estimators.fluxpoints attribute)": [[127, "gammapy.estimators.FluxPoints.flux", false]], "flux_err (gammapy.estimators.fluxmaps attribute)": [[125, "gammapy.estimators.FluxMaps.flux_err", false]], "flux_err (gammapy.estimators.fluxpoints attribute)": [[127, "gammapy.estimators.FluxPoints.flux_err", false]], "flux_errn (gammapy.estimators.fluxmaps attribute)": [[125, "gammapy.estimators.FluxMaps.flux_errn", false]], "flux_errn (gammapy.estimators.fluxpoints attribute)": [[127, "gammapy.estimators.FluxPoints.flux_errn", false]], "flux_errp (gammapy.estimators.fluxmaps attribute)": [[125, "gammapy.estimators.FluxMaps.flux_errp", false]], "flux_errp (gammapy.estimators.fluxpoints attribute)": [[127, "gammapy.estimators.FluxPoints.flux_errp", false]], "flux_points (gammapy.catalog.sourcecatalogobject2fhl attribute)": [[71, "gammapy.catalog.SourceCatalogObject2FHL.flux_points", false]], "flux_points (gammapy.catalog.sourcecatalogobject2pc attribute)": [[73, "gammapy.catalog.SourceCatalogObject2PC.flux_points", false]], "flux_points (gammapy.catalog.sourcecatalogobject3fgl attribute)": [[74, "gammapy.catalog.SourceCatalogObject3FGL.flux_points", false]], "flux_points (gammapy.catalog.sourcecatalogobject3fhl attribute)": [[75, "gammapy.catalog.SourceCatalogObject3FHL.flux_points", false]], "flux_points (gammapy.catalog.sourcecatalogobject3pc attribute)": [[77, "gammapy.catalog.SourceCatalogObject3PC.flux_points", false]], "flux_points (gammapy.catalog.sourcecatalogobject4fgl attribute)": [[78, "gammapy.catalog.SourceCatalogObject4FGL.flux_points", false]], "flux_points (gammapy.catalog.sourcecatalogobjectgammacat attribute)": [[79, "gammapy.catalog.SourceCatalogObjectGammaCat.flux_points", false]], "flux_points (gammapy.catalog.sourcecatalogobjecthgps attribute)": [[80, "gammapy.catalog.SourceCatalogObjectHGPS.flux_points", false]], "flux_points_meta (gammapy.catalog.sourcecatalogobject2fhl attribute)": [[71, "gammapy.catalog.SourceCatalogObject2FHL.flux_points_meta", false]], "flux_points_meta (gammapy.catalog.sourcecatalogobject3fgl attribute)": [[74, "gammapy.catalog.SourceCatalogObject3FGL.flux_points_meta", false]], "flux_points_meta (gammapy.catalog.sourcecatalogobject3fhl attribute)": [[75, "gammapy.catalog.SourceCatalogObject3FHL.flux_points_meta", false]], "flux_points_meta (gammapy.catalog.sourcecatalogobject4fgl attribute)": [[78, "gammapy.catalog.SourceCatalogObject4FGL.flux_points_meta", false]], "flux_points_table (gammapy.catalog.sourcecatalogobject2fhl attribute)": [[71, "gammapy.catalog.SourceCatalogObject2FHL.flux_points_table", false]], "flux_points_table (gammapy.catalog.sourcecatalogobject2pc attribute)": [[73, "gammapy.catalog.SourceCatalogObject2PC.flux_points_table", false]], "flux_points_table (gammapy.catalog.sourcecatalogobject3fgl attribute)": [[74, "gammapy.catalog.SourceCatalogObject3FGL.flux_points_table", false]], "flux_points_table (gammapy.catalog.sourcecatalogobject3fhl attribute)": [[75, "gammapy.catalog.SourceCatalogObject3FHL.flux_points_table", false]], "flux_points_table (gammapy.catalog.sourcecatalogobject3pc attribute)": [[77, "gammapy.catalog.SourceCatalogObject3PC.flux_points_table", false]], "flux_points_table (gammapy.catalog.sourcecatalogobject4fgl attribute)": [[78, "gammapy.catalog.SourceCatalogObject4FGL.flux_points_table", false]], "flux_points_table (gammapy.catalog.sourcecatalogobjectgammacat attribute)": [[79, "gammapy.catalog.SourceCatalogObjectGammaCat.flux_points_table", false]], "flux_points_table (gammapy.catalog.sourcecatalogobjecthgps attribute)": [[80, "gammapy.catalog.SourceCatalogObjectHGPS.flux_points_table", false]], "flux_pred() (gammapy.datasets.fluxpointsdataset method)": [[102, "gammapy.datasets.FluxPointsDataset.flux_pred", false]], "flux_ref (gammapy.estimators.fluxmaps attribute)": [[125, "gammapy.estimators.FluxMaps.flux_ref", false]], "flux_ref (gammapy.estimators.fluxpoints attribute)": [[127, "gammapy.estimators.FluxPoints.flux_ref", false]], "flux_sensitivity (gammapy.estimators.fluxmaps attribute)": [[125, "gammapy.estimators.FluxMaps.flux_sensitivity", false]], "flux_sensitivity (gammapy.estimators.fluxpoints attribute)": [[127, "gammapy.estimators.FluxPoints.flux_sensitivity", false]], "flux_ul (gammapy.estimators.fluxmaps attribute)": [[125, "gammapy.estimators.FluxMaps.flux_ul", false]], "flux_ul (gammapy.estimators.fluxpoints attribute)": [[127, "gammapy.estimators.FluxPoints.flux_ul", false]], "fluxmaps (class in gammapy.estimators)": [[125, "gammapy.estimators.FluxMaps", false]], "fluxmetadata (class in gammapy.estimators)": [[126, "gammapy.estimators.FluxMetaData", false]], "fluxpoints (class in gammapy.estimators)": [[127, "gammapy.estimators.FluxPoints", false]], "fluxpointsdataset (class in gammapy.datasets)": [[102, "gammapy.datasets.FluxPointsDataset", false]], "fluxpointsestimator (class in gammapy.estimators)": [[128, "gammapy.estimators.FluxPointsEstimator", false]], "fluxprofileestimator (class in gammapy.estimators)": [[129, "gammapy.estimators.FluxProfileEstimator", false]], "footprint (gammapy.maps.wcsgeom attribute)": [[206, "gammapy.maps.WcsGeom.footprint", false]], "footprint_rectangle_sky_region (gammapy.maps.wcsgeom attribute)": [[206, "gammapy.maps.WcsGeom.footprint_rectangle_sky_region", false]], "format_plot_xaxis() (gammapy.maps.labelmapaxis method)": [[197, "gammapy.maps.LabelMapAxis.format_plot_xaxis", false]], "format_plot_xaxis() (gammapy.maps.mapaxis method)": [[200, "gammapy.maps.MapAxis.format_plot_xaxis", false]], "format_plot_xaxis() (gammapy.maps.timemapaxis method)": [[205, "gammapy.maps.TimeMapAxis.format_plot_xaxis", false]], "format_plot_yaxis() (gammapy.maps.mapaxis method)": [[200, "gammapy.maps.MapAxis.format_plot_yaxis", false]], "fov": [[581, "term-FoV", true]], "fov background": [[581, "term-FoV-Background", true]], "fov_alignment (gammapy.irf.background2d attribute)": [[149, "gammapy.irf.Background2D.fov_alignment", false]], "fov_alignment (gammapy.irf.background3d attribute)": [[150, "gammapy.irf.Background3D.fov_alignment", false]], "fov_alignment (gammapy.irf.backgroundirf attribute)": [[151, "gammapy.irf.BackgroundIRF.fov_alignment", false]], "fov_alignment (gammapy.irf.edispkernel attribute)": [[152, "gammapy.irf.EDispKernel.fov_alignment", false]], "fov_alignment (gammapy.irf.effectiveareatable2d attribute)": [[155, "gammapy.irf.EffectiveAreaTable2D.fov_alignment", false]], "fov_alignment (gammapy.irf.energydependentmultigausspsf attribute)": [[156, "gammapy.irf.EnergyDependentMultiGaussPSF.fov_alignment", false]], "fov_alignment (gammapy.irf.energydispersion2d attribute)": [[157, "gammapy.irf.EnergyDispersion2D.fov_alignment", false]], "fov_alignment (gammapy.irf.irf attribute)": [[159, "gammapy.irf.IRF.fov_alignment", false]], "fov_alignment (gammapy.irf.parametricpsf attribute)": [[166, "gammapy.irf.ParametricPSF.fov_alignment", false]], "fov_alignment (gammapy.irf.psf3d attribute)": [[162, "gammapy.irf.PSF3D.fov_alignment", false]], "fov_alignment (gammapy.irf.psfking attribute)": [[164, "gammapy.irf.PSFKing.fov_alignment", false]], "fov_alignment (gammapy.irf.radmax2d attribute)": [[167, "gammapy.irf.RadMax2D.fov_alignment", false]], "fov_to_sky() (in module gammapy.utils.coordinates)": [[312, "gammapy.utils.coordinates.fov_to_sky", false]], "fovalignment (class in gammapy.irf)": [[158, "gammapy.irf.FoVAlignment", false]], "fovbackgroundmaker (class in gammapy.makers)": [[172, "gammapy.makers.FoVBackgroundMaker", false]], "fovbackgroundmodel (class in gammapy.modeling.models)": [[234, "gammapy.modeling.models.FoVBackgroundModel", false]], "frame (gammapy.maps.hpxgeom attribute)": [[194, "gammapy.maps.HpxGeom.frame", false]], "frame (gammapy.maps.mapcoord attribute)": [[201, "gammapy.maps.MapCoord.frame", false]], "frame (gammapy.maps.regiongeom attribute)": [[203, "gammapy.maps.RegionGeom.frame", false]], "frame (gammapy.maps.wcsgeom attribute)": [[206, "gammapy.maps.WcsGeom.frame", false]], "frame (gammapy.modeling.models.constantfluxspatialmodel attribute)": [[222, "gammapy.modeling.models.ConstantFluxSpatialModel.frame", false]], "frame (gammapy.modeling.models.constantspatialmodel attribute)": [[223, "gammapy.modeling.models.ConstantSpatialModel.frame", false]], "frame (gammapy.modeling.models.skymodel attribute)": [[266, "gammapy.modeling.models.SkyModel.frame", false]], "free_parameters (gammapy.modeling.parameters attribute)": [[217, "gammapy.modeling.Parameters.free_parameters", false]], "free_parameters (gammapy.modeling.priorparameters attribute)": [[219, "gammapy.modeling.PriorParameters.free_parameters", false]], "freeze() (gammapy.astro.darkmatter.darkmatterannihilationspectralmodel method)": [[19, "gammapy.astro.darkmatter.DarkMatterAnnihilationSpectralModel.freeze", false]], "freeze() (gammapy.astro.darkmatter.darkmatterdecayspectralmodel method)": [[20, "gammapy.astro.darkmatter.DarkMatterDecaySpectralModel.freeze", false]], "freeze() (gammapy.astro.darkmatter.primaryflux method)": [[26, "gammapy.astro.darkmatter.PrimaryFlux.freeze", false]], "freeze() (gammapy.modeling.models.brokenpowerlawspectralmodel method)": [[220, "gammapy.modeling.models.BrokenPowerLawSpectralModel.freeze", false]], "freeze() (gammapy.modeling.models.compoundspectralmodel method)": [[221, "gammapy.modeling.models.CompoundSpectralModel.freeze", false]], "freeze() (gammapy.modeling.models.constantfluxspatialmodel method)": [[222, "gammapy.modeling.models.ConstantFluxSpatialModel.freeze", false]], "freeze() (gammapy.modeling.models.constantspatialmodel method)": [[223, "gammapy.modeling.models.ConstantSpatialModel.freeze", false]], "freeze() (gammapy.modeling.models.constantspectralmodel method)": [[224, "gammapy.modeling.models.ConstantSpectralModel.freeze", false]], "freeze() (gammapy.modeling.models.constanttemporalmodel method)": [[225, "gammapy.modeling.models.ConstantTemporalModel.freeze", false]], "freeze() (gammapy.modeling.models.datasetmodels method)": [[226, "gammapy.modeling.models.DatasetModels.freeze", false]], "freeze() (gammapy.modeling.models.diskspatialmodel method)": [[227, "gammapy.modeling.models.DiskSpatialModel.freeze", false]], "freeze() (gammapy.modeling.models.eblabsorptionnormspectralmodel method)": [[228, "gammapy.modeling.models.EBLAbsorptionNormSpectralModel.freeze", false]], "freeze() (gammapy.modeling.models.expcutoffpowerlaw3fglspectralmodel method)": [[230, "gammapy.modeling.models.ExpCutoffPowerLaw3FGLSpectralModel.freeze", false]], "freeze() (gammapy.modeling.models.expcutoffpowerlawnormspectralmodel method)": [[231, "gammapy.modeling.models.ExpCutoffPowerLawNormSpectralModel.freeze", false]], "freeze() (gammapy.modeling.models.expcutoffpowerlawspectralmodel method)": [[232, "gammapy.modeling.models.ExpCutoffPowerLawSpectralModel.freeze", false]], "freeze() (gammapy.modeling.models.expdecaytemporalmodel method)": [[233, "gammapy.modeling.models.ExpDecayTemporalModel.freeze", false]], "freeze() (gammapy.modeling.models.fovbackgroundmodel method)": [[234, "gammapy.modeling.models.FoVBackgroundModel.freeze", false]], "freeze() (gammapy.modeling.models.gaussianprior method)": [[235, "gammapy.modeling.models.GaussianPrior.freeze", false]], "freeze() (gammapy.modeling.models.gaussianspatialmodel method)": [[236, "gammapy.modeling.models.GaussianSpatialModel.freeze", false]], "freeze() (gammapy.modeling.models.gaussianspectralmodel method)": [[237, "gammapy.modeling.models.GaussianSpectralModel.freeze", false]], "freeze() (gammapy.modeling.models.gaussiantemporalmodel method)": [[238, "gammapy.modeling.models.GaussianTemporalModel.freeze", false]], "freeze() (gammapy.modeling.models.generalizedgaussianspatialmodel method)": [[239, "gammapy.modeling.models.GeneralizedGaussianSpatialModel.freeze", false]], "freeze() (gammapy.modeling.models.generalizedgaussiantemporalmodel method)": [[240, "gammapy.modeling.models.GeneralizedGaussianTemporalModel.freeze", false]], "freeze() (gammapy.modeling.models.lightcurvetemplatetemporalmodel method)": [[241, "gammapy.modeling.models.LightCurveTemplateTemporalModel.freeze", false]], "freeze() (gammapy.modeling.models.lineartemporalmodel method)": [[242, "gammapy.modeling.models.LinearTemporalModel.freeze", false]], "freeze() (gammapy.modeling.models.logparabolanormspectralmodel method)": [[243, "gammapy.modeling.models.LogParabolaNormSpectralModel.freeze", false]], "freeze() (gammapy.modeling.models.logparabolaspectralmodel method)": [[244, "gammapy.modeling.models.LogParabolaSpectralModel.freeze", false]], "freeze() (gammapy.modeling.models.loguniformprior method)": [[245, "gammapy.modeling.models.LogUniformPrior.freeze", false]], "freeze() (gammapy.modeling.models.meyercrabspectralmodel method)": [[247, "gammapy.modeling.models.MeyerCrabSpectralModel.freeze", false]], "freeze() (gammapy.modeling.models.modelbase method)": [[249, "gammapy.modeling.models.ModelBase.freeze", false]], "freeze() (gammapy.modeling.models.models method)": [[250, "gammapy.modeling.models.Models.freeze", false]], "freeze() (gammapy.modeling.models.naimaspectralmodel method)": [[251, "gammapy.modeling.models.NaimaSpectralModel.freeze", false]], "freeze() (gammapy.modeling.models.piecewisenormspatialmodel method)": [[252, "gammapy.modeling.models.PiecewiseNormSpatialModel.freeze", false]], "freeze() (gammapy.modeling.models.piecewisenormspectralmodel method)": [[253, "gammapy.modeling.models.PiecewiseNormSpectralModel.freeze", false]], "freeze() (gammapy.modeling.models.pointspatialmodel method)": [[254, "gammapy.modeling.models.PointSpatialModel.freeze", false]], "freeze() (gammapy.modeling.models.powerlaw2spectralmodel method)": [[255, "gammapy.modeling.models.PowerLaw2SpectralModel.freeze", false]], "freeze() (gammapy.modeling.models.powerlawnormspectralmodel method)": [[256, "gammapy.modeling.models.PowerLawNormSpectralModel.freeze", false]], "freeze() (gammapy.modeling.models.powerlawspectralmodel method)": [[257, "gammapy.modeling.models.PowerLawSpectralModel.freeze", false]], "freeze() (gammapy.modeling.models.powerlawtemporalmodel method)": [[258, "gammapy.modeling.models.PowerLawTemporalModel.freeze", false]], "freeze() (gammapy.modeling.models.prior method)": [[259, "gammapy.modeling.models.Prior.freeze", false]], "freeze() (gammapy.modeling.models.scalespectralmodel method)": [[262, "gammapy.modeling.models.ScaleSpectralModel.freeze", false]], "freeze() (gammapy.modeling.models.shell2spatialmodel method)": [[263, "gammapy.modeling.models.Shell2SpatialModel.freeze", false]], "freeze() (gammapy.modeling.models.shellspatialmodel method)": [[264, "gammapy.modeling.models.ShellSpatialModel.freeze", false]], "freeze() (gammapy.modeling.models.sinetemporalmodel method)": [[265, "gammapy.modeling.models.SineTemporalModel.freeze", false]], "freeze() (gammapy.modeling.models.skymodel method)": [[266, "gammapy.modeling.models.SkyModel.freeze", false]], "freeze() (gammapy.modeling.models.smoothbrokenpowerlawspectralmodel method)": [[267, "gammapy.modeling.models.SmoothBrokenPowerLawSpectralModel.freeze", false]], "freeze() (gammapy.modeling.models.spatialmodel method)": [[268, "gammapy.modeling.models.SpatialModel.freeze", false]], "freeze() (gammapy.modeling.models.spectralmodel method)": [[269, "gammapy.modeling.models.SpectralModel.freeze", false]], "freeze() (gammapy.modeling.models.superexpcutoffpowerlaw3fglspectralmodel method)": [[270, "gammapy.modeling.models.SuperExpCutoffPowerLaw3FGLSpectralModel.freeze", false]], "freeze() (gammapy.modeling.models.superexpcutoffpowerlaw4fgldr3spectralmodel method)": [[271, "gammapy.modeling.models.SuperExpCutoffPowerLaw4FGLDR3SpectralModel.freeze", false]], "freeze() (gammapy.modeling.models.superexpcutoffpowerlaw4fglspectralmodel method)": [[272, "gammapy.modeling.models.SuperExpCutoffPowerLaw4FGLSpectralModel.freeze", false]], "freeze() (gammapy.modeling.models.templatendspatialmodel method)": [[274, "gammapy.modeling.models.TemplateNDSpatialModel.freeze", false]], "freeze() (gammapy.modeling.models.templatendspectralmodel method)": [[275, "gammapy.modeling.models.TemplateNDSpectralModel.freeze", false]], "freeze() (gammapy.modeling.models.templatenpredmodel method)": [[276, "gammapy.modeling.models.TemplateNPredModel.freeze", false]], "freeze() (gammapy.modeling.models.templatephasecurvetemporalmodel method)": [[277, "gammapy.modeling.models.TemplatePhaseCurveTemporalModel.freeze", false]], "freeze() (gammapy.modeling.models.templatespatialmodel method)": [[278, "gammapy.modeling.models.TemplateSpatialModel.freeze", false]], "freeze() (gammapy.modeling.models.templatespectralmodel method)": [[279, "gammapy.modeling.models.TemplateSpectralModel.freeze", false]], "freeze() (gammapy.modeling.models.temporalmodel method)": [[280, "gammapy.modeling.models.TemporalModel.freeze", false]], "freeze() (gammapy.modeling.models.uniformprior method)": [[281, "gammapy.modeling.models.UniformPrior.freeze", false]], "freeze_all() (gammapy.modeling.parameters method)": [[217, "gammapy.modeling.Parameters.freeze_all", false]], "freeze_all() (gammapy.modeling.priorparameters method)": [[219, "gammapy.modeling.PriorParameters.freeze_all", false]], "from_aligned() (gammapy.maps.wcsgeom class method)": [[206, "gammapy.maps.WcsGeom.from_aligned", false]], "from_bounds() (gammapy.maps.mapaxis class method)": [[200, "gammapy.maps.MapAxis.from_bounds", false]], "from_default() (gammapy.maps.mapaxes class method)": [[199, "gammapy.maps.MapAxes.from_default", false]], "from_diagonal_response() (gammapy.irf.edispkernel class method)": [[152, "gammapy.irf.EDispKernel.from_diagonal_response", false]], "from_diagonal_response() (gammapy.irf.edispkernelmap class method)": [[153, "gammapy.irf.EDispKernelMap.from_diagonal_response", false]], "from_diagonal_response() (gammapy.irf.edispmap class method)": [[154, "gammapy.irf.EDispMap.from_diagonal_response", false]], "from_dict() (gammapy.astro.darkmatter.darkmatterannihilationspectralmodel class method)": [[19, "gammapy.astro.darkmatter.DarkMatterAnnihilationSpectralModel.from_dict", false]], "from_dict() (gammapy.astro.darkmatter.darkmatterdecayspectralmodel class method)": [[20, "gammapy.astro.darkmatter.DarkMatterDecaySpectralModel.from_dict", false]], "from_dict() (gammapy.astro.darkmatter.primaryflux class method)": [[26, "gammapy.astro.darkmatter.PrimaryFlux.from_dict", false]], "from_dict() (gammapy.datasets.fluxpointsdataset class method)": [[102, "gammapy.datasets.FluxPointsDataset.from_dict", false]], "from_dict() (gammapy.datasets.mapdataset class method)": [[103, "gammapy.datasets.MapDataset.from_dict", false]], "from_dict() (gammapy.datasets.mapdatasetonoff class method)": [[106, "gammapy.datasets.MapDatasetOnOff.from_dict", false]], "from_dict() (gammapy.datasets.spectrumdataset class method)": [[110, "gammapy.datasets.SpectrumDataset.from_dict", false]], "from_dict() (gammapy.datasets.spectrumdatasetonoff class method)": [[111, "gammapy.datasets.SpectrumDatasetOnOff.from_dict", false]], "from_dict() (gammapy.modeling.models.brokenpowerlawspectralmodel class method)": [[220, "gammapy.modeling.models.BrokenPowerLawSpectralModel.from_dict", false]], "from_dict() (gammapy.modeling.models.compoundspectralmodel class method)": [[221, "gammapy.modeling.models.CompoundSpectralModel.from_dict", false]], "from_dict() (gammapy.modeling.models.constantfluxspatialmodel class method)": [[222, "gammapy.modeling.models.ConstantFluxSpatialModel.from_dict", false]], "from_dict() (gammapy.modeling.models.constantspatialmodel class method)": [[223, "gammapy.modeling.models.ConstantSpatialModel.from_dict", false]], "from_dict() (gammapy.modeling.models.constantspectralmodel class method)": [[224, "gammapy.modeling.models.ConstantSpectralModel.from_dict", false]], "from_dict() (gammapy.modeling.models.constanttemporalmodel class method)": [[225, "gammapy.modeling.models.ConstantTemporalModel.from_dict", false]], "from_dict() (gammapy.modeling.models.datasetmodels class method)": [[226, "gammapy.modeling.models.DatasetModels.from_dict", false]], "from_dict() (gammapy.modeling.models.diskspatialmodel class method)": [[227, "gammapy.modeling.models.DiskSpatialModel.from_dict", false]], "from_dict() (gammapy.modeling.models.eblabsorptionnormspectralmodel class method)": [[228, "gammapy.modeling.models.EBLAbsorptionNormSpectralModel.from_dict", false]], "from_dict() (gammapy.modeling.models.expcutoffpowerlaw3fglspectralmodel class method)": [[230, "gammapy.modeling.models.ExpCutoffPowerLaw3FGLSpectralModel.from_dict", false]], "from_dict() (gammapy.modeling.models.expcutoffpowerlawnormspectralmodel class method)": [[231, "gammapy.modeling.models.ExpCutoffPowerLawNormSpectralModel.from_dict", false]], "from_dict() (gammapy.modeling.models.expcutoffpowerlawspectralmodel class method)": [[232, "gammapy.modeling.models.ExpCutoffPowerLawSpectralModel.from_dict", false]], "from_dict() (gammapy.modeling.models.expdecaytemporalmodel class method)": [[233, "gammapy.modeling.models.ExpDecayTemporalModel.from_dict", false]], "from_dict() (gammapy.modeling.models.fovbackgroundmodel class method)": [[234, "gammapy.modeling.models.FoVBackgroundModel.from_dict", false]], "from_dict() (gammapy.modeling.models.gaussianprior class method)": [[235, "gammapy.modeling.models.GaussianPrior.from_dict", false]], "from_dict() (gammapy.modeling.models.gaussianspatialmodel class method)": [[236, "gammapy.modeling.models.GaussianSpatialModel.from_dict", false]], "from_dict() (gammapy.modeling.models.gaussianspectralmodel class method)": [[237, "gammapy.modeling.models.GaussianSpectralModel.from_dict", false]], "from_dict() (gammapy.modeling.models.gaussiantemporalmodel class method)": [[238, "gammapy.modeling.models.GaussianTemporalModel.from_dict", false]], "from_dict() (gammapy.modeling.models.generalizedgaussianspatialmodel class method)": [[239, "gammapy.modeling.models.GeneralizedGaussianSpatialModel.from_dict", false]], "from_dict() (gammapy.modeling.models.generalizedgaussiantemporalmodel class method)": [[240, "gammapy.modeling.models.GeneralizedGaussianTemporalModel.from_dict", false]], "from_dict() (gammapy.modeling.models.lightcurvetemplatetemporalmodel class method)": [[241, "gammapy.modeling.models.LightCurveTemplateTemporalModel.from_dict", false]], "from_dict() (gammapy.modeling.models.lineartemporalmodel class method)": [[242, "gammapy.modeling.models.LinearTemporalModel.from_dict", false]], "from_dict() (gammapy.modeling.models.logparabolanormspectralmodel class method)": [[243, "gammapy.modeling.models.LogParabolaNormSpectralModel.from_dict", false]], "from_dict() (gammapy.modeling.models.logparabolaspectralmodel class method)": [[244, "gammapy.modeling.models.LogParabolaSpectralModel.from_dict", false]], "from_dict() (gammapy.modeling.models.loguniformprior class method)": [[245, "gammapy.modeling.models.LogUniformPrior.from_dict", false]], "from_dict() (gammapy.modeling.models.meyercrabspectralmodel class method)": [[247, "gammapy.modeling.models.MeyerCrabSpectralModel.from_dict", false]], "from_dict() (gammapy.modeling.models.model static method)": [[248, "gammapy.modeling.models.Model.from_dict", false]], "from_dict() (gammapy.modeling.models.modelbase class method)": [[249, "gammapy.modeling.models.ModelBase.from_dict", false]], "from_dict() (gammapy.modeling.models.models class method)": [[250, "gammapy.modeling.models.Models.from_dict", false]], "from_dict() (gammapy.modeling.models.naimaspectralmodel class method)": [[251, "gammapy.modeling.models.NaimaSpectralModel.from_dict", false]], "from_dict() (gammapy.modeling.models.piecewisenormspatialmodel class method)": [[252, "gammapy.modeling.models.PiecewiseNormSpatialModel.from_dict", false]], "from_dict() (gammapy.modeling.models.piecewisenormspectralmodel class method)": [[253, "gammapy.modeling.models.PiecewiseNormSpectralModel.from_dict", false]], "from_dict() (gammapy.modeling.models.pointspatialmodel class method)": [[254, "gammapy.modeling.models.PointSpatialModel.from_dict", false]], "from_dict() (gammapy.modeling.models.powerlaw2spectralmodel class method)": [[255, "gammapy.modeling.models.PowerLaw2SpectralModel.from_dict", false]], "from_dict() (gammapy.modeling.models.powerlawnormspectralmodel class method)": [[256, "gammapy.modeling.models.PowerLawNormSpectralModel.from_dict", false]], "from_dict() (gammapy.modeling.models.powerlawspectralmodel class method)": [[257, "gammapy.modeling.models.PowerLawSpectralModel.from_dict", false]], "from_dict() (gammapy.modeling.models.powerlawtemporalmodel class method)": [[258, "gammapy.modeling.models.PowerLawTemporalModel.from_dict", false]], "from_dict() (gammapy.modeling.models.prior class method)": [[259, "gammapy.modeling.models.Prior.from_dict", false]], "from_dict() (gammapy.modeling.models.scalespectralmodel class method)": [[262, "gammapy.modeling.models.ScaleSpectralModel.from_dict", false]], "from_dict() (gammapy.modeling.models.shell2spatialmodel class method)": [[263, "gammapy.modeling.models.Shell2SpatialModel.from_dict", false]], "from_dict() (gammapy.modeling.models.shellspatialmodel class method)": [[264, "gammapy.modeling.models.ShellSpatialModel.from_dict", false]], "from_dict() (gammapy.modeling.models.sinetemporalmodel class method)": [[265, "gammapy.modeling.models.SineTemporalModel.from_dict", false]], "from_dict() (gammapy.modeling.models.skymodel class method)": [[266, "gammapy.modeling.models.SkyModel.from_dict", false]], "from_dict() (gammapy.modeling.models.smoothbrokenpowerlawspectralmodel class method)": [[267, "gammapy.modeling.models.SmoothBrokenPowerLawSpectralModel.from_dict", false]], "from_dict() (gammapy.modeling.models.spatialmodel class method)": [[268, "gammapy.modeling.models.SpatialModel.from_dict", false]], "from_dict() (gammapy.modeling.models.spectralmodel class method)": [[269, "gammapy.modeling.models.SpectralModel.from_dict", false]], "from_dict() (gammapy.modeling.models.superexpcutoffpowerlaw3fglspectralmodel class method)": [[270, "gammapy.modeling.models.SuperExpCutoffPowerLaw3FGLSpectralModel.from_dict", false]], "from_dict() (gammapy.modeling.models.superexpcutoffpowerlaw4fgldr3spectralmodel class method)": [[271, "gammapy.modeling.models.SuperExpCutoffPowerLaw4FGLDR3SpectralModel.from_dict", false]], "from_dict() (gammapy.modeling.models.superexpcutoffpowerlaw4fglspectralmodel class method)": [[272, "gammapy.modeling.models.SuperExpCutoffPowerLaw4FGLSpectralModel.from_dict", false]], "from_dict() (gammapy.modeling.models.templatendspatialmodel class method)": [[274, "gammapy.modeling.models.TemplateNDSpatialModel.from_dict", false]], "from_dict() (gammapy.modeling.models.templatendspectralmodel class method)": [[275, "gammapy.modeling.models.TemplateNDSpectralModel.from_dict", false]], "from_dict() (gammapy.modeling.models.templatenpredmodel class method)": [[276, "gammapy.modeling.models.TemplateNPredModel.from_dict", false]], "from_dict() (gammapy.modeling.models.templatephasecurvetemporalmodel class method)": [[277, "gammapy.modeling.models.TemplatePhaseCurveTemporalModel.from_dict", false]], "from_dict() (gammapy.modeling.models.templatespatialmodel class method)": [[278, "gammapy.modeling.models.TemplateSpatialModel.from_dict", false]], "from_dict() (gammapy.modeling.models.templatespectralmodel class method)": [[279, "gammapy.modeling.models.TemplateSpectralModel.from_dict", false]], "from_dict() (gammapy.modeling.models.temporalmodel class method)": [[280, "gammapy.modeling.models.TemporalModel.from_dict", false]], "from_dict() (gammapy.modeling.models.uniformprior class method)": [[281, "gammapy.modeling.models.UniformPrior.from_dict", false]], "from_dict() (gammapy.modeling.parameters class method)": [[217, "gammapy.modeling.Parameters.from_dict", false]], "from_dict() (gammapy.modeling.priorparameters class method)": [[219, "gammapy.modeling.PriorParameters.from_dict", false]], "from_dir() (gammapy.data.datastore class method)": [[82, "gammapy.data.DataStore.from_dir", false]], "from_edges() (gammapy.maps.mapaxis class method)": [[200, "gammapy.maps.MapAxis.from_edges", false]], "from_edisp_kernel() (gammapy.irf.edispkernelmap class method)": [[153, "gammapy.irf.EDispKernelMap.from_edisp_kernel", false]], "from_energy_bounds() (gammapy.maps.mapaxis class method)": [[200, "gammapy.maps.MapAxis.from_energy_bounds", false]], "from_energy_edges() (gammapy.maps.mapaxis class method)": [[200, "gammapy.maps.MapAxis.from_energy_edges", false]], "from_events_files() (gammapy.data.datastore class method)": [[82, "gammapy.data.DataStore.from_events_files", false]], "from_factor_matrix() (gammapy.modeling.covariance class method)": [[211, "gammapy.modeling.Covariance.from_factor_matrix", false]], "from_file() (gammapy.data.datastore class method)": [[82, "gammapy.data.DataStore.from_file", false]], "from_fits_header() (gammapy.data.fixedpointinginfo class method)": [[85, "gammapy.data.FixedPointingInfo.from_fits_header", false]], "from_gauss() (gammapy.irf.edispkernel class method)": [[152, "gammapy.irf.EDispKernel.from_gauss", false]], "from_gauss() (gammapy.irf.edispkernelmap class method)": [[153, "gammapy.irf.EDispKernelMap.from_gauss", false]], "from_gauss() (gammapy.irf.energydispersion2d class method)": [[157, "gammapy.irf.EnergyDispersion2D.from_gauss", false]], "from_gauss() (gammapy.irf.psfkernel class method)": [[163, "gammapy.irf.PSFKernel.from_gauss", false]], "from_gauss() (gammapy.irf.psfmap class method)": [[165, "gammapy.irf.PSFMap.from_gauss", false]], "from_gauss() (gammapy.irf.recopsfmap class method)": [[168, "gammapy.irf.RecoPSFMap.from_gauss", false]], "from_geom() (gammapy.irf.edispkernelmap class method)": [[153, "gammapy.irf.EDispKernelMap.from_geom", false]], "from_geom() (gammapy.irf.edispmap class method)": [[154, "gammapy.irf.EDispMap.from_geom", false]], "from_geom() (gammapy.irf.psfmap class method)": [[165, "gammapy.irf.PSFMap.from_geom", false]], "from_geom() (gammapy.irf.recopsfmap class method)": [[168, "gammapy.irf.RecoPSFMap.from_geom", false]], "from_geom() (gammapy.maps.hpxmap static method)": [[195, "gammapy.maps.HpxMap.from_geom", false]], "from_geom() (gammapy.maps.hpxndmap static method)": [[196, "gammapy.maps.HpxNDMap.from_geom", false]], "from_geom() (gammapy.maps.map static method)": [[198, "gammapy.maps.Map.from_geom", false]], "from_geom() (gammapy.maps.maps class method)": [[202, "gammapy.maps.Maps.from_geom", false]], "from_geom() (gammapy.maps.regionndmap static method)": [[204, "gammapy.maps.RegionNDMap.from_geom", false]], "from_geom() (gammapy.maps.wcsmap static method)": [[207, "gammapy.maps.WcsMap.from_geom", false]], "from_geom() (gammapy.maps.wcsndmap static method)": [[208, "gammapy.maps.WcsNDMap.from_geom", false]], "from_geoms() (gammapy.datasets.mapdataset class method)": [[103, "gammapy.datasets.MapDataset.from_geoms", false]], "from_geoms() (gammapy.datasets.mapdatasetonoff class method)": [[106, "gammapy.datasets.MapDatasetOnOff.from_geoms", false]], "from_geoms() (gammapy.datasets.spectrumdataset class method)": [[110, "gammapy.datasets.SpectrumDataset.from_geoms", false]], "from_geoms() (gammapy.datasets.spectrumdatasetonoff class method)": [[111, "gammapy.datasets.SpectrumDatasetOnOff.from_geoms", false]], "from_gti() (gammapy.maps.timemapaxis class method)": [[205, "gammapy.maps.TimeMapAxis.from_gti", false]], "from_gti_bounds() (gammapy.maps.timemapaxis class method)": [[205, "gammapy.maps.TimeMapAxis.from_gti_bounds", false]], "from_hdu() (gammapy.maps.hpxgeom class method)": [[194, "gammapy.maps.HpxGeom.from_hdu", false]], "from_hdu() (gammapy.maps.hpxndmap class method)": [[196, "gammapy.maps.HpxNDMap.from_hdu", false]], "from_hdu() (gammapy.maps.wcsndmap class method)": [[208, "gammapy.maps.WcsNDMap.from_hdu", false]], "from_hdulist() (gammapy.datasets.mapdataset class method)": [[103, "gammapy.datasets.MapDataset.from_hdulist", false]], "from_hdulist() (gammapy.datasets.mapdatasetonoff class method)": [[106, "gammapy.datasets.MapDatasetOnOff.from_hdulist", false]], "from_hdulist() (gammapy.datasets.spectrumdataset class method)": [[110, "gammapy.datasets.SpectrumDataset.from_hdulist", false]], "from_hdulist() (gammapy.datasets.spectrumdatasetonoff class method)": [[111, "gammapy.datasets.SpectrumDatasetOnOff.from_hdulist", false]], "from_hdulist() (gammapy.estimators.fluxmaps class method)": [[125, "gammapy.estimators.FluxMaps.from_hdulist", false]], "from_hdulist() (gammapy.estimators.fluxpoints class method)": [[127, "gammapy.estimators.FluxPoints.from_hdulist", false]], "from_hdulist() (gammapy.irf.background2d class method)": [[149, "gammapy.irf.Background2D.from_hdulist", false]], "from_hdulist() (gammapy.irf.background3d class method)": [[150, "gammapy.irf.Background3D.from_hdulist", false]], "from_hdulist() (gammapy.irf.backgroundirf class method)": [[151, "gammapy.irf.BackgroundIRF.from_hdulist", false]], "from_hdulist() (gammapy.irf.edispkernel class method)": [[152, "gammapy.irf.EDispKernel.from_hdulist", false]], "from_hdulist() (gammapy.irf.edispkernelmap class method)": [[153, "gammapy.irf.EDispKernelMap.from_hdulist", false]], "from_hdulist() (gammapy.irf.edispmap class method)": [[154, "gammapy.irf.EDispMap.from_hdulist", false]], "from_hdulist() (gammapy.irf.effectiveareatable2d class method)": [[155, "gammapy.irf.EffectiveAreaTable2D.from_hdulist", false]], "from_hdulist() (gammapy.irf.energydependentmultigausspsf class method)": [[156, "gammapy.irf.EnergyDependentMultiGaussPSF.from_hdulist", false]], "from_hdulist() (gammapy.irf.energydispersion2d class method)": [[157, "gammapy.irf.EnergyDispersion2D.from_hdulist", false]], "from_hdulist() (gammapy.irf.irf class method)": [[159, "gammapy.irf.IRF.from_hdulist", false]], "from_hdulist() (gammapy.irf.irfmap class method)": [[160, "gammapy.irf.IRFMap.from_hdulist", false]], "from_hdulist() (gammapy.irf.parametricpsf class method)": [[166, "gammapy.irf.ParametricPSF.from_hdulist", false]], "from_hdulist() (gammapy.irf.psf3d class method)": [[162, "gammapy.irf.PSF3D.from_hdulist", false]], "from_hdulist() (gammapy.irf.psfking class method)": [[164, "gammapy.irf.PSFKing.from_hdulist", false]], "from_hdulist() (gammapy.irf.psfmap class method)": [[165, "gammapy.irf.PSFMap.from_hdulist", false]], "from_hdulist() (gammapy.irf.radmax2d class method)": [[167, "gammapy.irf.RadMax2D.from_hdulist", false]], "from_hdulist() (gammapy.irf.recopsfmap class method)": [[168, "gammapy.irf.RecoPSFMap.from_hdulist", false]], "from_hdulist() (gammapy.maps.geom class method)": [[193, "gammapy.maps.Geom.from_hdulist", false]], "from_hdulist() (gammapy.maps.hpxgeom class method)": [[194, "gammapy.maps.HpxGeom.from_hdulist", false]], "from_hdulist() (gammapy.maps.hpxmap class method)": [[195, "gammapy.maps.HpxMap.from_hdulist", false]], "from_hdulist() (gammapy.maps.hpxndmap class method)": [[196, "gammapy.maps.HpxNDMap.from_hdulist", false]], "from_hdulist() (gammapy.maps.map static method)": [[198, "gammapy.maps.Map.from_hdulist", false]], "from_hdulist() (gammapy.maps.maps class method)": [[202, "gammapy.maps.Maps.from_hdulist", false]], "from_hdulist() (gammapy.maps.regiongeom class method)": [[203, "gammapy.maps.RegionGeom.from_hdulist", false]], "from_hdulist() (gammapy.maps.regionndmap class method)": [[204, "gammapy.maps.RegionNDMap.from_hdulist", false]], "from_hdulist() (gammapy.maps.wcsgeom class method)": [[206, "gammapy.maps.WcsGeom.from_hdulist", false]], "from_hdulist() (gammapy.maps.wcsmap class method)": [[207, "gammapy.maps.WcsMap.from_hdulist", false]], "from_hdulist() (gammapy.maps.wcsndmap class method)": [[208, "gammapy.maps.WcsNDMap.from_hdulist", false]], "from_header() (gammapy.data.eventlistmetadata class method)": [[84, "gammapy.data.EventListMetaData.from_header", false]], "from_header() (gammapy.data.observationmetadata class method)": [[90, "gammapy.data.ObservationMetaData.from_header", false]], "from_header() (gammapy.datasets.mapdatasetmetadata class method)": [[105, "gammapy.datasets.MapDatasetMetaData.from_header", false]], "from_header() (gammapy.estimators.fluxmetadata class method)": [[126, "gammapy.estimators.FluxMetaData.from_header", false]], "from_header() (gammapy.maps.hpxgeom class method)": [[194, "gammapy.maps.HpxGeom.from_header", false]], "from_header() (gammapy.maps.wcsgeom class method)": [[206, "gammapy.maps.WcsGeom.from_header", false]], "from_irf() (gammapy.irf.radmax2d class method)": [[167, "gammapy.irf.RadMax2D.from_irf", false]], "from_log10() (gammapy.modeling.models.logparabolanormspectralmodel class method)": [[243, "gammapy.modeling.models.LogParabolaNormSpectralModel.from_log10", false]], "from_log10() (gammapy.modeling.models.logparabolaspectralmodel class method)": [[244, "gammapy.modeling.models.LogParabolaSpectralModel.from_log10", false]], "from_map_dataset() (gammapy.datasets.mapdatasetonoff class method)": [[106, "gammapy.datasets.MapDatasetOnOff.from_map_dataset", false]], "from_map_dataset() (gammapy.datasets.spectrumdatasetonoff class method)": [[111, "gammapy.datasets.SpectrumDatasetOnOff.from_map_dataset", false]], "from_maps() (gammapy.estimators.fluxmaps class method)": [[125, "gammapy.estimators.FluxMaps.from_maps", false]], "from_maps() (gammapy.estimators.fluxpoints class method)": [[127, "gammapy.estimators.FluxPoints.from_maps", false]], "from_nodes() (gammapy.maps.mapaxis class method)": [[200, "gammapy.maps.MapAxis.from_nodes", false]], "from_orm() (gammapy.analysis.analysisconfig class method)": [[16, "gammapy.analysis.AnalysisConfig.from_orm", false]], "from_orm() (gammapy.data.eventlistmetadata class method)": [[84, "gammapy.data.EventListMetaData.from_orm", false]], "from_orm() (gammapy.data.observationmetadata class method)": [[90, "gammapy.data.ObservationMetaData.from_orm", false]], "from_orm() (gammapy.datasets.mapdatasetmetadata class method)": [[105, "gammapy.datasets.MapDatasetMetaData.from_orm", false]], "from_orm() (gammapy.estimators.fluxmetadata class method)": [[126, "gammapy.estimators.FluxMetaData.from_orm", false]], "from_pandas() (gammapy.data.hduindextable class method)": [[87, "gammapy.data.HDUIndexTable.from_pandas", false]], "from_pandas() (gammapy.data.observationtable class method)": [[91, "gammapy.data.ObservationTable.from_pandas", false]], "from_parameters() (gammapy.astro.darkmatter.darkmatterannihilationspectralmodel class method)": [[19, "gammapy.astro.darkmatter.DarkMatterAnnihilationSpectralModel.from_parameters", false]], "from_parameters() (gammapy.astro.darkmatter.darkmatterdecayspectralmodel class method)": [[20, "gammapy.astro.darkmatter.DarkMatterDecaySpectralModel.from_parameters", false]], "from_parameters() (gammapy.astro.darkmatter.primaryflux class method)": [[26, "gammapy.astro.darkmatter.PrimaryFlux.from_parameters", false]], "from_parameters() (gammapy.modeling.models.brokenpowerlawspectralmodel class method)": [[220, "gammapy.modeling.models.BrokenPowerLawSpectralModel.from_parameters", false]], "from_parameters() (gammapy.modeling.models.compoundspectralmodel class method)": [[221, "gammapy.modeling.models.CompoundSpectralModel.from_parameters", false]], "from_parameters() (gammapy.modeling.models.constantfluxspatialmodel class method)": [[222, "gammapy.modeling.models.ConstantFluxSpatialModel.from_parameters", false]], "from_parameters() (gammapy.modeling.models.constantspatialmodel class method)": [[223, "gammapy.modeling.models.ConstantSpatialModel.from_parameters", false]], "from_parameters() (gammapy.modeling.models.constantspectralmodel class method)": [[224, "gammapy.modeling.models.ConstantSpectralModel.from_parameters", false]], "from_parameters() (gammapy.modeling.models.constanttemporalmodel class method)": [[225, "gammapy.modeling.models.ConstantTemporalModel.from_parameters", false]], "from_parameters() (gammapy.modeling.models.diskspatialmodel class method)": [[227, "gammapy.modeling.models.DiskSpatialModel.from_parameters", false]], "from_parameters() (gammapy.modeling.models.eblabsorptionnormspectralmodel class method)": [[228, "gammapy.modeling.models.EBLAbsorptionNormSpectralModel.from_parameters", false]], "from_parameters() (gammapy.modeling.models.expcutoffpowerlaw3fglspectralmodel class method)": [[230, "gammapy.modeling.models.ExpCutoffPowerLaw3FGLSpectralModel.from_parameters", false]], "from_parameters() (gammapy.modeling.models.expcutoffpowerlawnormspectralmodel class method)": [[231, "gammapy.modeling.models.ExpCutoffPowerLawNormSpectralModel.from_parameters", false]], "from_parameters() (gammapy.modeling.models.expcutoffpowerlawspectralmodel class method)": [[232, "gammapy.modeling.models.ExpCutoffPowerLawSpectralModel.from_parameters", false]], "from_parameters() (gammapy.modeling.models.expdecaytemporalmodel class method)": [[233, "gammapy.modeling.models.ExpDecayTemporalModel.from_parameters", false]], "from_parameters() (gammapy.modeling.models.fovbackgroundmodel class method)": [[234, "gammapy.modeling.models.FoVBackgroundModel.from_parameters", false]], "from_parameters() (gammapy.modeling.models.gaussianprior class method)": [[235, "gammapy.modeling.models.GaussianPrior.from_parameters", false]], "from_parameters() (gammapy.modeling.models.gaussianspatialmodel class method)": [[236, "gammapy.modeling.models.GaussianSpatialModel.from_parameters", false]], "from_parameters() (gammapy.modeling.models.gaussianspectralmodel class method)": [[237, "gammapy.modeling.models.GaussianSpectralModel.from_parameters", false]], "from_parameters() (gammapy.modeling.models.gaussiantemporalmodel class method)": [[238, "gammapy.modeling.models.GaussianTemporalModel.from_parameters", false]], "from_parameters() (gammapy.modeling.models.generalizedgaussianspatialmodel class method)": [[239, "gammapy.modeling.models.GeneralizedGaussianSpatialModel.from_parameters", false]], "from_parameters() (gammapy.modeling.models.generalizedgaussiantemporalmodel class method)": [[240, "gammapy.modeling.models.GeneralizedGaussianTemporalModel.from_parameters", false]], "from_parameters() (gammapy.modeling.models.lightcurvetemplatetemporalmodel class method)": [[241, "gammapy.modeling.models.LightCurveTemplateTemporalModel.from_parameters", false]], "from_parameters() (gammapy.modeling.models.lineartemporalmodel class method)": [[242, "gammapy.modeling.models.LinearTemporalModel.from_parameters", false]], "from_parameters() (gammapy.modeling.models.logparabolanormspectralmodel class method)": [[243, "gammapy.modeling.models.LogParabolaNormSpectralModel.from_parameters", false]], "from_parameters() (gammapy.modeling.models.logparabolaspectralmodel class method)": [[244, "gammapy.modeling.models.LogParabolaSpectralModel.from_parameters", false]], "from_parameters() (gammapy.modeling.models.loguniformprior class method)": [[245, "gammapy.modeling.models.LogUniformPrior.from_parameters", false]], "from_parameters() (gammapy.modeling.models.meyercrabspectralmodel class method)": [[247, "gammapy.modeling.models.MeyerCrabSpectralModel.from_parameters", false]], "from_parameters() (gammapy.modeling.models.modelbase class method)": [[249, "gammapy.modeling.models.ModelBase.from_parameters", false]], "from_parameters() (gammapy.modeling.models.naimaspectralmodel class method)": [[251, "gammapy.modeling.models.NaimaSpectralModel.from_parameters", false]], "from_parameters() (gammapy.modeling.models.piecewisenormspatialmodel class method)": [[252, "gammapy.modeling.models.PiecewiseNormSpatialModel.from_parameters", false]], "from_parameters() (gammapy.modeling.models.piecewisenormspectralmodel class method)": [[253, "gammapy.modeling.models.PiecewiseNormSpectralModel.from_parameters", false]], "from_parameters() (gammapy.modeling.models.pointspatialmodel class method)": [[254, "gammapy.modeling.models.PointSpatialModel.from_parameters", false]], "from_parameters() (gammapy.modeling.models.powerlaw2spectralmodel class method)": [[255, "gammapy.modeling.models.PowerLaw2SpectralModel.from_parameters", false]], "from_parameters() (gammapy.modeling.models.powerlawnormspectralmodel class method)": [[256, "gammapy.modeling.models.PowerLawNormSpectralModel.from_parameters", false]], "from_parameters() (gammapy.modeling.models.powerlawspectralmodel class method)": [[257, "gammapy.modeling.models.PowerLawSpectralModel.from_parameters", false]], "from_parameters() (gammapy.modeling.models.powerlawtemporalmodel class method)": [[258, "gammapy.modeling.models.PowerLawTemporalModel.from_parameters", false]], "from_parameters() (gammapy.modeling.models.prior class method)": [[259, "gammapy.modeling.models.Prior.from_parameters", false]], "from_parameters() (gammapy.modeling.models.scalespectralmodel class method)": [[262, "gammapy.modeling.models.ScaleSpectralModel.from_parameters", false]], "from_parameters() (gammapy.modeling.models.shell2spatialmodel class method)": [[263, "gammapy.modeling.models.Shell2SpatialModel.from_parameters", false]], "from_parameters() (gammapy.modeling.models.shellspatialmodel class method)": [[264, "gammapy.modeling.models.ShellSpatialModel.from_parameters", false]], "from_parameters() (gammapy.modeling.models.sinetemporalmodel class method)": [[265, "gammapy.modeling.models.SineTemporalModel.from_parameters", false]], "from_parameters() (gammapy.modeling.models.skymodel class method)": [[266, "gammapy.modeling.models.SkyModel.from_parameters", false]], "from_parameters() (gammapy.modeling.models.smoothbrokenpowerlawspectralmodel class method)": [[267, "gammapy.modeling.models.SmoothBrokenPowerLawSpectralModel.from_parameters", false]], "from_parameters() (gammapy.modeling.models.spatialmodel class method)": [[268, "gammapy.modeling.models.SpatialModel.from_parameters", false]], "from_parameters() (gammapy.modeling.models.spectralmodel class method)": [[269, "gammapy.modeling.models.SpectralModel.from_parameters", false]], "from_parameters() (gammapy.modeling.models.superexpcutoffpowerlaw3fglspectralmodel class method)": [[270, "gammapy.modeling.models.SuperExpCutoffPowerLaw3FGLSpectralModel.from_parameters", false]], "from_parameters() (gammapy.modeling.models.superexpcutoffpowerlaw4fgldr3spectralmodel class method)": [[271, "gammapy.modeling.models.SuperExpCutoffPowerLaw4FGLDR3SpectralModel.from_parameters", false]], "from_parameters() (gammapy.modeling.models.superexpcutoffpowerlaw4fglspectralmodel class method)": [[272, "gammapy.modeling.models.SuperExpCutoffPowerLaw4FGLSpectralModel.from_parameters", false]], "from_parameters() (gammapy.modeling.models.templatendspatialmodel class method)": [[274, "gammapy.modeling.models.TemplateNDSpatialModel.from_parameters", false]], "from_parameters() (gammapy.modeling.models.templatendspectralmodel class method)": [[275, "gammapy.modeling.models.TemplateNDSpectralModel.from_parameters", false]], "from_parameters() (gammapy.modeling.models.templatenpredmodel class method)": [[276, "gammapy.modeling.models.TemplateNPredModel.from_parameters", false]], "from_parameters() (gammapy.modeling.models.templatephasecurvetemporalmodel class method)": [[277, "gammapy.modeling.models.TemplatePhaseCurveTemporalModel.from_parameters", false]], "from_parameters() (gammapy.modeling.models.templatespatialmodel class method)": [[278, "gammapy.modeling.models.TemplateSpatialModel.from_parameters", false]], "from_parameters() (gammapy.modeling.models.templatespectralmodel class method)": [[279, "gammapy.modeling.models.TemplateSpectralModel.from_parameters", false]], "from_parameters() (gammapy.modeling.models.temporalmodel class method)": [[280, "gammapy.modeling.models.TemporalModel.from_parameters", false]], "from_parameters() (gammapy.modeling.models.uniformprior class method)": [[281, "gammapy.modeling.models.UniformPrior.from_parameters", false]], "from_parametrization() (gammapy.irf.effectiveareatable2d class method)": [[155, "gammapy.irf.EffectiveAreaTable2D.from_parametrization", false]], "from_position() (gammapy.modeling.models.constantfluxspatialmodel class method)": [[222, "gammapy.modeling.models.ConstantFluxSpatialModel.from_position", false]], "from_position() (gammapy.modeling.models.constantspatialmodel class method)": [[223, "gammapy.modeling.models.ConstantSpatialModel.from_position", false]], "from_position() (gammapy.modeling.models.diskspatialmodel class method)": [[227, "gammapy.modeling.models.DiskSpatialModel.from_position", false]], "from_position() (gammapy.modeling.models.gaussianspatialmodel class method)": [[236, "gammapy.modeling.models.GaussianSpatialModel.from_position", false]], "from_position() (gammapy.modeling.models.generalizedgaussianspatialmodel class method)": [[239, "gammapy.modeling.models.GeneralizedGaussianSpatialModel.from_position", false]], "from_position() (gammapy.modeling.models.piecewisenormspatialmodel class method)": [[252, "gammapy.modeling.models.PiecewiseNormSpatialModel.from_position", false]], "from_position() (gammapy.modeling.models.pointspatialmodel class method)": [[254, "gammapy.modeling.models.PointSpatialModel.from_position", false]], "from_position() (gammapy.modeling.models.shell2spatialmodel class method)": [[263, "gammapy.modeling.models.Shell2SpatialModel.from_position", false]], "from_position() (gammapy.modeling.models.shellspatialmodel class method)": [[264, "gammapy.modeling.models.ShellSpatialModel.from_position", false]], "from_position() (gammapy.modeling.models.spatialmodel class method)": [[268, "gammapy.modeling.models.SpatialModel.from_position", false]], "from_position() (gammapy.modeling.models.templatendspatialmodel class method)": [[274, "gammapy.modeling.models.TemplateNDSpatialModel.from_position", false]], "from_position() (gammapy.modeling.models.templatespatialmodel class method)": [[278, "gammapy.modeling.models.TemplateSpatialModel.from_position", false]], "from_region() (gammapy.modeling.models.diskspatialmodel class method)": [[227, "gammapy.modeling.models.DiskSpatialModel.from_region", false]], "from_region_map() (gammapy.modeling.models.templatespectralmodel class method)": [[279, "gammapy.modeling.models.TemplateSpectralModel.from_region_map", false]], "from_regions() (gammapy.maps.regiongeom class method)": [[203, "gammapy.maps.RegionGeom.from_regions", false]], "from_spatial_model() (gammapy.irf.psfkernel class method)": [[163, "gammapy.irf.PSFKernel.from_spatial_model", false]], "from_spectrum_dataset() (gammapy.datasets.spectrumdatasetonoff class method)": [[111, "gammapy.datasets.SpectrumDatasetOnOff.from_spectrum_dataset", false]], "from_stack() (gammapy.data.eventlist class method)": [[83, "gammapy.data.EventList.from_stack", false]], "from_stack() (gammapy.data.gti class method)": [[86, "gammapy.data.GTI.from_stack", false]], "from_stack() (gammapy.data.observations class method)": [[92, "gammapy.data.Observations.from_stack", false]], "from_stack() (gammapy.estimators.fluxmaps class method)": [[125, "gammapy.estimators.FluxMaps.from_stack", false]], "from_stack() (gammapy.estimators.fluxpoints class method)": [[127, "gammapy.estimators.FluxPoints.from_stack", false]], "from_stack() (gammapy.maps.hpxmap class method)": [[195, "gammapy.maps.HpxMap.from_stack", false]], "from_stack() (gammapy.maps.hpxndmap class method)": [[196, "gammapy.maps.HpxNDMap.from_stack", false]], "from_stack() (gammapy.maps.labelmapaxis class method)": [[197, "gammapy.maps.LabelMapAxis.from_stack", false]], "from_stack() (gammapy.maps.map class method)": [[198, "gammapy.maps.Map.from_stack", false]], "from_stack() (gammapy.maps.mapaxis class method)": [[200, "gammapy.maps.MapAxis.from_stack", false]], "from_stack() (gammapy.maps.regionndmap class method)": [[204, "gammapy.maps.RegionNDMap.from_stack", false]], "from_stack() (gammapy.maps.wcsmap class method)": [[207, "gammapy.maps.WcsMap.from_stack", false]], "from_stack() (gammapy.maps.wcsndmap class method)": [[208, "gammapy.maps.WcsNDMap.from_stack", false]], "from_stack() (gammapy.modeling.covariance class method)": [[211, "gammapy.modeling.Covariance.from_stack", false]], "from_stack() (gammapy.modeling.parameters class method)": [[217, "gammapy.modeling.Parameters.from_stack", false]], "from_stack() (gammapy.modeling.priorparameters class method)": [[219, "gammapy.modeling.PriorParameters.from_stack", false]], "from_table() (gammapy.estimators.fluxpoints class method)": [[127, "gammapy.estimators.FluxPoints.from_table", false]], "from_table() (gammapy.irf.background2d class method)": [[149, "gammapy.irf.Background2D.from_table", false]], "from_table() (gammapy.irf.background3d class method)": [[150, "gammapy.irf.Background3D.from_table", false]], "from_table() (gammapy.irf.backgroundirf class method)": [[151, "gammapy.irf.BackgroundIRF.from_table", false]], "from_table() (gammapy.irf.edispkernel class method)": [[152, "gammapy.irf.EDispKernel.from_table", false]], "from_table() (gammapy.irf.effectiveareatable2d class method)": [[155, "gammapy.irf.EffectiveAreaTable2D.from_table", false]], "from_table() (gammapy.irf.energydependentmultigausspsf class method)": [[156, "gammapy.irf.EnergyDependentMultiGaussPSF.from_table", false]], "from_table() (gammapy.irf.energydispersion2d class method)": [[157, "gammapy.irf.EnergyDispersion2D.from_table", false]], "from_table() (gammapy.irf.irf class method)": [[159, "gammapy.irf.IRF.from_table", false]], "from_table() (gammapy.irf.parametricpsf class method)": [[166, "gammapy.irf.ParametricPSF.from_table", false]], "from_table() (gammapy.irf.psf3d class method)": [[162, "gammapy.irf.PSF3D.from_table", false]], "from_table() (gammapy.irf.psfking class method)": [[164, "gammapy.irf.PSFKing.from_table", false]], "from_table() (gammapy.irf.radmax2d class method)": [[167, "gammapy.irf.RadMax2D.from_table", false]], "from_table() (gammapy.maps.labelmapaxis class method)": [[197, "gammapy.maps.LabelMapAxis.from_table", false]], "from_table() (gammapy.maps.mapaxes class method)": [[199, "gammapy.maps.MapAxes.from_table", false]], "from_table() (gammapy.maps.mapaxis class method)": [[200, "gammapy.maps.MapAxis.from_table", false]], "from_table() (gammapy.maps.regionndmap class method)": [[204, "gammapy.maps.RegionNDMap.from_table", false]], "from_table() (gammapy.maps.timemapaxis class method)": [[205, "gammapy.maps.TimeMapAxis.from_table", false]], "from_table() (gammapy.modeling.models.lightcurvetemplatetemporalmodel class method)": [[241, "gammapy.modeling.models.LightCurveTemplateTemporalModel.from_table", false]], "from_table_hdu() (gammapy.data.gti class method)": [[86, "gammapy.data.GTI.from_table_hdu", false]], "from_table_hdu() (gammapy.maps.mapaxes class method)": [[199, "gammapy.maps.MapAxes.from_table_hdu", false]], "from_table_hdu() (gammapy.maps.mapaxis class method)": [[200, "gammapy.maps.MapAxis.from_table_hdu", false]], "from_time_bounds() (gammapy.maps.timemapaxis class method)": [[205, "gammapy.maps.TimeMapAxis.from_time_bounds", false]], "from_time_edges() (gammapy.maps.timemapaxis class method)": [[205, "gammapy.maps.TimeMapAxis.from_time_edges", false]], "from_time_intervals() (gammapy.data.gti class method)": [[86, "gammapy.data.GTI.from_time_intervals", false]], "from_wcs_tiles() (gammapy.maps.hpxndmap class method)": [[196, "gammapy.maps.HpxNDMap.from_wcs_tiles", false]], "from_yaml() (gammapy.analysis.analysisconfig class method)": [[16, "gammapy.analysis.AnalysisConfig.from_yaml", false]], "from_yaml() (gammapy.modeling.models.datasetmodels class method)": [[226, "gammapy.modeling.models.DatasetModels.from_yaml", false]], "from_yaml() (gammapy.modeling.models.models class method)": [[250, "gammapy.modeling.models.Models.from_yaml", false]], "from_yaml() (in module gammapy.utils.scripts)": [[346, "gammapy.utils.scripts.from_yaml", false]], "frozen (gammapy.astro.darkmatter.darkmatterannihilationspectralmodel attribute)": [[19, "gammapy.astro.darkmatter.DarkMatterAnnihilationSpectralModel.frozen", false]], "frozen (gammapy.astro.darkmatter.darkmatterdecayspectralmodel attribute)": [[20, "gammapy.astro.darkmatter.DarkMatterDecaySpectralModel.frozen", false]], "frozen (gammapy.astro.darkmatter.primaryflux attribute)": [[26, "gammapy.astro.darkmatter.PrimaryFlux.frozen", false]], "frozen (gammapy.modeling.models.brokenpowerlawspectralmodel attribute)": [[220, "gammapy.modeling.models.BrokenPowerLawSpectralModel.frozen", false]], "frozen (gammapy.modeling.models.compoundspectralmodel attribute)": [[221, "gammapy.modeling.models.CompoundSpectralModel.frozen", false]], "frozen (gammapy.modeling.models.constantfluxspatialmodel attribute)": [[222, "gammapy.modeling.models.ConstantFluxSpatialModel.frozen", false]], "frozen (gammapy.modeling.models.constantspatialmodel attribute)": [[223, "gammapy.modeling.models.ConstantSpatialModel.frozen", false]], "frozen (gammapy.modeling.models.constantspectralmodel attribute)": [[224, "gammapy.modeling.models.ConstantSpectralModel.frozen", false]], "frozen (gammapy.modeling.models.constanttemporalmodel attribute)": [[225, "gammapy.modeling.models.ConstantTemporalModel.frozen", false]], "frozen (gammapy.modeling.models.datasetmodels attribute)": [[226, "gammapy.modeling.models.DatasetModels.frozen", false]], "frozen (gammapy.modeling.models.diskspatialmodel attribute)": [[227, "gammapy.modeling.models.DiskSpatialModel.frozen", false]], "frozen (gammapy.modeling.models.eblabsorptionnormspectralmodel attribute)": [[228, "gammapy.modeling.models.EBLAbsorptionNormSpectralModel.frozen", false]], "frozen (gammapy.modeling.models.expcutoffpowerlaw3fglspectralmodel attribute)": [[230, "gammapy.modeling.models.ExpCutoffPowerLaw3FGLSpectralModel.frozen", false]], "frozen (gammapy.modeling.models.expcutoffpowerlawnormspectralmodel attribute)": [[231, "gammapy.modeling.models.ExpCutoffPowerLawNormSpectralModel.frozen", false]], "frozen (gammapy.modeling.models.expcutoffpowerlawspectralmodel attribute)": [[232, "gammapy.modeling.models.ExpCutoffPowerLawSpectralModel.frozen", false]], "frozen (gammapy.modeling.models.expdecaytemporalmodel attribute)": [[233, "gammapy.modeling.models.ExpDecayTemporalModel.frozen", false]], "frozen (gammapy.modeling.models.fovbackgroundmodel attribute)": [[234, "gammapy.modeling.models.FoVBackgroundModel.frozen", false]], "frozen (gammapy.modeling.models.gaussianprior attribute)": [[235, "gammapy.modeling.models.GaussianPrior.frozen", false]], "frozen (gammapy.modeling.models.gaussianspatialmodel attribute)": [[236, "gammapy.modeling.models.GaussianSpatialModel.frozen", false]], "frozen (gammapy.modeling.models.gaussianspectralmodel attribute)": [[237, "gammapy.modeling.models.GaussianSpectralModel.frozen", false]], "frozen (gammapy.modeling.models.gaussiantemporalmodel attribute)": [[238, "gammapy.modeling.models.GaussianTemporalModel.frozen", false]], "frozen (gammapy.modeling.models.generalizedgaussianspatialmodel attribute)": [[239, "gammapy.modeling.models.GeneralizedGaussianSpatialModel.frozen", false]], "frozen (gammapy.modeling.models.generalizedgaussiantemporalmodel attribute)": [[240, "gammapy.modeling.models.GeneralizedGaussianTemporalModel.frozen", false]], "frozen (gammapy.modeling.models.lightcurvetemplatetemporalmodel attribute)": [[241, "gammapy.modeling.models.LightCurveTemplateTemporalModel.frozen", false]], "frozen (gammapy.modeling.models.lineartemporalmodel attribute)": [[242, "gammapy.modeling.models.LinearTemporalModel.frozen", false]], "frozen (gammapy.modeling.models.logparabolanormspectralmodel attribute)": [[243, "gammapy.modeling.models.LogParabolaNormSpectralModel.frozen", false]], "frozen (gammapy.modeling.models.logparabolaspectralmodel attribute)": [[244, "gammapy.modeling.models.LogParabolaSpectralModel.frozen", false]], "frozen (gammapy.modeling.models.loguniformprior attribute)": [[245, "gammapy.modeling.models.LogUniformPrior.frozen", false]], "frozen (gammapy.modeling.models.meyercrabspectralmodel attribute)": [[247, "gammapy.modeling.models.MeyerCrabSpectralModel.frozen", false]], "frozen (gammapy.modeling.models.modelbase attribute)": [[249, "gammapy.modeling.models.ModelBase.frozen", false]], "frozen (gammapy.modeling.models.models attribute)": [[250, "gammapy.modeling.models.Models.frozen", false]], "frozen (gammapy.modeling.models.naimaspectralmodel attribute)": [[251, "gammapy.modeling.models.NaimaSpectralModel.frozen", false]], "frozen (gammapy.modeling.models.piecewisenormspatialmodel attribute)": [[252, "gammapy.modeling.models.PiecewiseNormSpatialModel.frozen", false]], "frozen (gammapy.modeling.models.piecewisenormspectralmodel attribute)": [[253, "gammapy.modeling.models.PiecewiseNormSpectralModel.frozen", false]], "frozen (gammapy.modeling.models.pointspatialmodel attribute)": [[254, "gammapy.modeling.models.PointSpatialModel.frozen", false]], "frozen (gammapy.modeling.models.powerlaw2spectralmodel attribute)": [[255, "gammapy.modeling.models.PowerLaw2SpectralModel.frozen", false]], "frozen (gammapy.modeling.models.powerlawnormspectralmodel attribute)": [[256, "gammapy.modeling.models.PowerLawNormSpectralModel.frozen", false]], "frozen (gammapy.modeling.models.powerlawspectralmodel attribute)": [[257, "gammapy.modeling.models.PowerLawSpectralModel.frozen", false]], "frozen (gammapy.modeling.models.powerlawtemporalmodel attribute)": [[258, "gammapy.modeling.models.PowerLawTemporalModel.frozen", false]], "frozen (gammapy.modeling.models.prior attribute)": [[259, "gammapy.modeling.models.Prior.frozen", false]], "frozen (gammapy.modeling.models.scalespectralmodel attribute)": [[262, "gammapy.modeling.models.ScaleSpectralModel.frozen", false]], "frozen (gammapy.modeling.models.shell2spatialmodel attribute)": [[263, "gammapy.modeling.models.Shell2SpatialModel.frozen", false]], "frozen (gammapy.modeling.models.shellspatialmodel attribute)": [[264, "gammapy.modeling.models.ShellSpatialModel.frozen", false]], "frozen (gammapy.modeling.models.sinetemporalmodel attribute)": [[265, "gammapy.modeling.models.SineTemporalModel.frozen", false]], "frozen (gammapy.modeling.models.skymodel attribute)": [[266, "gammapy.modeling.models.SkyModel.frozen", false]], "frozen (gammapy.modeling.models.smoothbrokenpowerlawspectralmodel attribute)": [[267, "gammapy.modeling.models.SmoothBrokenPowerLawSpectralModel.frozen", false]], "frozen (gammapy.modeling.models.spatialmodel attribute)": [[268, "gammapy.modeling.models.SpatialModel.frozen", false]], "frozen (gammapy.modeling.models.spectralmodel attribute)": [[269, "gammapy.modeling.models.SpectralModel.frozen", false]], "frozen (gammapy.modeling.models.superexpcutoffpowerlaw3fglspectralmodel attribute)": [[270, "gammapy.modeling.models.SuperExpCutoffPowerLaw3FGLSpectralModel.frozen", false]], "frozen (gammapy.modeling.models.superexpcutoffpowerlaw4fgldr3spectralmodel attribute)": [[271, "gammapy.modeling.models.SuperExpCutoffPowerLaw4FGLDR3SpectralModel.frozen", false]], "frozen (gammapy.modeling.models.superexpcutoffpowerlaw4fglspectralmodel attribute)": [[272, "gammapy.modeling.models.SuperExpCutoffPowerLaw4FGLSpectralModel.frozen", false]], "frozen (gammapy.modeling.models.templatendspatialmodel attribute)": [[274, "gammapy.modeling.models.TemplateNDSpatialModel.frozen", false]], "frozen (gammapy.modeling.models.templatendspectralmodel attribute)": [[275, "gammapy.modeling.models.TemplateNDSpectralModel.frozen", false]], "frozen (gammapy.modeling.models.templatenpredmodel attribute)": [[276, "gammapy.modeling.models.TemplateNPredModel.frozen", false]], "frozen (gammapy.modeling.models.templatephasecurvetemporalmodel attribute)": [[277, "gammapy.modeling.models.TemplatePhaseCurveTemporalModel.frozen", false]], "frozen (gammapy.modeling.models.templatespatialmodel attribute)": [[278, "gammapy.modeling.models.TemplateSpatialModel.frozen", false]], "frozen (gammapy.modeling.models.templatespectralmodel attribute)": [[279, "gammapy.modeling.models.TemplateSpectralModel.frozen", false]], "frozen (gammapy.modeling.models.temporalmodel attribute)": [[280, "gammapy.modeling.models.TemporalModel.frozen", false]], "frozen (gammapy.modeling.models.uniformprior attribute)": [[281, "gammapy.modeling.models.UniformPrior.frozen", false]], "frozen (gammapy.modeling.parameter attribute)": [[216, "gammapy.modeling.Parameter.frozen", false]], "frozen (gammapy.modeling.priorparameter attribute)": [[218, "gammapy.modeling.PriorParameter.frozen", false]], "gadf": [[581, "term-GADF", true]], "galactic (gammapy.data.eventlist attribute)": [[83, "gammapy.data.EventList.galactic", false]], "galactic() (in module gammapy.utils.coordinates)": [[313, "gammapy.utils.coordinates.galactic", false]], "galactic_median (gammapy.data.eventlist attribute)": [[83, "gammapy.data.EventList.galactic_median", false]], "gammapy command line option": [[11, "cmdoption-gammapy-ignore-warnings", false], [11, "cmdoption-gammapy-log-level", false], [11, "cmdoption-gammapy-version", false]], "gammapy-analysis-config command line option": [[11, "cmdoption-gammapy-analysis-config-filename", false], [11, "cmdoption-gammapy-analysis-config-overwrite", false]], "gammapy-analysis-run command line option": [[11, "cmdoption-gammapy-analysis-run-filename", false], [11, "cmdoption-gammapy-analysis-run-out", false], [11, "cmdoption-gammapy-analysis-run-overwrite", false]], "gammapy-download-datasets command line option": [[11, "cmdoption-gammapy-download-datasets-out", false], [11, "cmdoption-gammapy-download-datasets-release", false]], "gammapy-download-notebooks command line option": [[11, "cmdoption-gammapy-download-notebooks-out", false], [11, "cmdoption-gammapy-download-notebooks-release", false]], "gammapy-info command line option": [[11, "cmdoption-gammapy-info-dependencies", false], [11, "cmdoption-gammapy-info-envvar", false], [11, "cmdoption-gammapy-info-system", false], [11, "cmdoption-gammapy-info-version", false]], "gammapy-workflow-config command line option": [[11, "cmdoption-gammapy-workflow-config-filename", false], [11, "cmdoption-gammapy-workflow-config-overwrite", false]], "gammapy-workflow-run command line option": [[11, "cmdoption-gammapy-workflow-run-filename", false]], "gammapy.analysis": [[0, "module-gammapy.analysis", false]], "gammapy.astro.darkmatter": [[1, "module-gammapy.astro.darkmatter", false]], "gammapy.astro.population": [[1, "module-gammapy.astro.population", false]], "gammapy.astro.source": [[1, "module-gammapy.astro.source", false]], "gammapy.catalog": [[2, "module-gammapy.catalog", false]], "gammapy.data": [[3, "module-gammapy.data", false]], "gammapy.datasets": [[4, "module-gammapy.datasets", false]], "gammapy.datasets.utils": [[4, "module-gammapy.datasets.utils", false]], "gammapy.estimators": [[5, "module-gammapy.estimators", false]], "gammapy.estimators.utils": [[5, "module-gammapy.estimators.utils", false]], "gammapy.irf": [[7, "module-gammapy.irf", false]], "gammapy.makers": [[8, "module-gammapy.makers", false]], "gammapy.makers.utils": [[8, "module-gammapy.makers.utils", false]], "gammapy.maps": [[9, "module-gammapy.maps", false]], "gammapy.modeling": [[10, "module-gammapy.modeling", false]], "gammapy.modeling.models": [[10, "module-gammapy.modeling.models", false]], "gammapy.modeling.models.utils": [[10, "module-gammapy.modeling.models.utils", false]], "gammapy.stats": [[12, "module-gammapy.stats", false]], "gammapy.utils.cluster": [[13, "module-gammapy.utils.cluster", false]], "gammapy.utils.coordinates": [[13, "module-gammapy.utils.coordinates", false]], "gammapy.utils.fits": [[13, "module-gammapy.utils.fits", false]], "gammapy.utils.integrate": [[13, "module-gammapy.utils.integrate", false]], "gammapy.utils.interpolation": [[13, "module-gammapy.utils.interpolation", false]], "gammapy.utils.parallel": [[13, "module-gammapy.utils.parallel", false]], "gammapy.utils.random": [[13, "module-gammapy.utils.random", false]], "gammapy.utils.regions": [[13, "module-gammapy.utils.regions", false]], "gammapy.utils.scripts": [[13, "module-gammapy.utils.scripts", false]], "gammapy.utils.table": [[13, "module-gammapy.utils.table", false]], "gammapy.utils.testing": [[13, "module-gammapy.utils.testing", false]], "gammapy.utils.time": [[13, "module-gammapy.utils.time", false]], "gammapy.utils.units": [[13, "module-gammapy.utils.units", false]], "gammapy.visualization": [[14, "module-gammapy.visualization", false]], "gaussian_component() (gammapy.catalog.sourcecataloghgps method)": [[67, "gammapy.catalog.SourceCatalogHGPS.gaussian_component", false]], "gaussianprior (class in gammapy.modeling.models)": [[235, "gammapy.modeling.models.GaussianPrior", false]], "gaussianspatialmodel (class in gammapy.modeling.models)": [[236, "gammapy.modeling.models.GaussianSpatialModel", false]], "gaussianspectralmodel (class in gammapy.modeling.models)": [[237, "gammapy.modeling.models.GaussianSpectralModel", false]], "gaussiantemporalmodel (class in gammapy.modeling.models)": [[238, "gammapy.modeling.models.GaussianTemporalModel", false]], "generalizedgaussianspatialmodel (class in gammapy.modeling.models)": [[239, "gammapy.modeling.models.GeneralizedGaussianSpatialModel", false]], "generalizedgaussiantemporalmodel (class in gammapy.modeling.models)": [[240, "gammapy.modeling.models.GeneralizedGaussianTemporalModel", false]], "geom (class in gammapy.maps)": [[193, "gammapy.maps.Geom", false]], "geom (gammapy.estimators.fluxmaps attribute)": [[125, "gammapy.estimators.FluxMaps.geom", false]], "geom (gammapy.estimators.fluxpoints attribute)": [[127, "gammapy.estimators.FluxPoints.geom", false]], "geom (gammapy.maps.hpxmap attribute)": [[195, "gammapy.maps.HpxMap.geom", false]], "geom (gammapy.maps.hpxndmap attribute)": [[196, "gammapy.maps.HpxNDMap.geom", false]], "geom (gammapy.maps.map attribute)": [[198, "gammapy.maps.Map.geom", false]], "geom (gammapy.maps.maps attribute)": [[202, "gammapy.maps.Maps.geom", false]], "geom (gammapy.maps.regionndmap attribute)": [[204, "gammapy.maps.RegionNDMap.geom", false]], "geom (gammapy.maps.wcsmap attribute)": [[207, "gammapy.maps.WcsMap.geom", false]], "geom (gammapy.maps.wcsndmap attribute)": [[208, "gammapy.maps.WcsNDMap.geom", false]], "geoms (gammapy.datasets.mapdataset attribute)": [[103, "gammapy.datasets.MapDataset.geoms", false]], "geoms (gammapy.datasets.mapdatasetonoff attribute)": [[106, "gammapy.datasets.MapDatasetOnOff.geoms", false]], "geoms (gammapy.datasets.spectrumdataset attribute)": [[110, "gammapy.datasets.SpectrumDataset.geoms", false]], "geoms (gammapy.datasets.spectrumdatasetonoff attribute)": [[111, "gammapy.datasets.SpectrumDatasetOnOff.geoms", false]], "get() (gammapy.maps.maps method)": [[202, "gammapy.maps.Maps.get", false]], "get_altaz() (gammapy.data.fixedpointinginfo method)": [[85, "gammapy.data.FixedPointingInfo.get_altaz", false]], "get_altaz() (gammapy.data.pointinginfo method)": [[94, "gammapy.data.PointingInfo.get_altaz", false]], "get_bias() (gammapy.irf.edispkernel method)": [[152, "gammapy.irf.EDispKernel.get_bias", false]], "get_bias_energy() (gammapy.irf.edispkernel method)": [[152, "gammapy.irf.EDispKernel.get_bias_energy", false]], "get_bounding_box() (gammapy.astro.population.casebattacharya1998 method)": [[28, "gammapy.astro.population.CaseBattacharya1998.get_bounding_box", false]], "get_bounding_box() (gammapy.astro.population.exponential method)": [[29, "gammapy.astro.population.Exponential.get_bounding_box", false]], "get_bounding_box() (gammapy.astro.population.faucherkaspi2006 method)": [[30, "gammapy.astro.population.FaucherKaspi2006.get_bounding_box", false]], "get_bounding_box() (gammapy.astro.population.faucherkaspi2006velocitybimodal method)": [[31, "gammapy.astro.population.FaucherKaspi2006VelocityBimodal.get_bounding_box", false]], "get_bounding_box() (gammapy.astro.population.faucherkaspi2006velocitymaxwellian method)": [[32, "gammapy.astro.population.FaucherKaspi2006VelocityMaxwellian.get_bounding_box", false]], "get_bounding_box() (gammapy.astro.population.lorimer2006 method)": [[35, "gammapy.astro.population.Lorimer2006.get_bounding_box", false]], "get_bounding_box() (gammapy.astro.population.paczynski1990 method)": [[36, "gammapy.astro.population.Paczynski1990.get_bounding_box", false]], "get_bounding_box() (gammapy.astro.population.paczynski1990velocity method)": [[37, "gammapy.astro.population.Paczynski1990Velocity.get_bounding_box", false]], "get_bounding_box() (gammapy.astro.population.yusifovkucuk2004 method)": [[39, "gammapy.astro.population.YusifovKucuk2004.get_bounding_box", false]], "get_bounding_box() (gammapy.astro.population.yusifovkucuk2004b method)": [[40, "gammapy.astro.population.YusifovKucuk2004B.get_bounding_box", false]], "get_by_coord() (gammapy.maps.hpxmap method)": [[195, "gammapy.maps.HpxMap.get_by_coord", false]], "get_by_coord() (gammapy.maps.hpxndmap method)": [[196, "gammapy.maps.HpxNDMap.get_by_coord", false]], "get_by_coord() (gammapy.maps.map method)": [[198, "gammapy.maps.Map.get_by_coord", false]], "get_by_coord() (gammapy.maps.regionndmap method)": [[204, "gammapy.maps.RegionNDMap.get_by_coord", false]], "get_by_coord() (gammapy.maps.wcsmap method)": [[207, "gammapy.maps.WcsMap.get_by_coord", false]], "get_by_coord() (gammapy.maps.wcsndmap method)": [[208, "gammapy.maps.WcsNDMap.get_by_coord", false]], "get_by_idx() (gammapy.maps.hpxmap method)": [[195, "gammapy.maps.HpxMap.get_by_idx", false]], "get_by_idx() (gammapy.maps.hpxndmap method)": [[196, "gammapy.maps.HpxNDMap.get_by_idx", false]], "get_by_idx() (gammapy.maps.map method)": [[198, "gammapy.maps.Map.get_by_idx", false]], "get_by_idx() (gammapy.maps.regionndmap method)": [[204, "gammapy.maps.RegionNDMap.get_by_idx", false]], "get_by_idx() (gammapy.maps.wcsmap method)": [[207, "gammapy.maps.WcsMap.get_by_idx", false]], "get_by_idx() (gammapy.maps.wcsndmap method)": [[208, "gammapy.maps.WcsNDMap.get_by_idx", false]], "get_by_pix() (gammapy.maps.hpxmap method)": [[195, "gammapy.maps.HpxMap.get_by_pix", false]], "get_by_pix() (gammapy.maps.hpxndmap method)": [[196, "gammapy.maps.HpxNDMap.get_by_pix", false]], "get_by_pix() (gammapy.maps.map method)": [[198, "gammapy.maps.Map.get_by_pix", false]], "get_by_pix() (gammapy.maps.regionndmap method)": [[204, "gammapy.maps.RegionNDMap.get_by_pix", false]], "get_by_pix() (gammapy.maps.wcsmap method)": [[207, "gammapy.maps.WcsMap.get_by_pix", false]], "get_by_pix() (gammapy.maps.wcsndmap method)": [[208, "gammapy.maps.WcsNDMap.get_by_pix", false]], "get_combined_flux_maps() (in module gammapy.estimators.utils)": [[145, "gammapy.estimators.utils.get_combined_flux_maps", false]], "get_combined_significance_maps() (in module gammapy.estimators.utils)": [[146, "gammapy.estimators.utils.get_combined_significance_maps", false]], "get_coord() (gammapy.maps.geom method)": [[193, "gammapy.maps.Geom.get_coord", false]], "get_coord() (gammapy.maps.hpxgeom method)": [[194, "gammapy.maps.HpxGeom.get_coord", false]], "get_coord() (gammapy.maps.mapaxes method)": [[199, "gammapy.maps.MapAxes.get_coord", false]], "get_coord() (gammapy.maps.regiongeom method)": [[203, "gammapy.maps.RegionGeom.get_coord", false]], "get_coord() (gammapy.maps.wcsgeom method)": [[206, "gammapy.maps.WcsGeom.get_coord", false]], "get_datasets() (gammapy.analysis.analysis method)": [[15, "gammapy.analysis.Analysis.get_datasets", false]], "get_edisp_kernel() (gammapy.irf.edispkernelmap method)": [[153, "gammapy.irf.EDispKernelMap.get_edisp_kernel", false]], "get_edisp_kernel() (gammapy.irf.edispmap method)": [[154, "gammapy.irf.EDispMap.get_edisp_kernel", false]], "get_excess_map() (gammapy.analysis.analysis method)": [[15, "gammapy.analysis.Analysis.get_excess_map", false]], "get_filenames() (gammapy.datasets.ogipdatasetreader method)": [[107, "gammapy.datasets.OGIPDatasetReader.get_filenames", false]], "get_filenames() (gammapy.datasets.ogipdatasetwriter static method)": [[108, "gammapy.datasets.OGIPDatasetWriter.get_filenames", false]], "get_flux_points() (gammapy.analysis.analysis method)": [[15, "gammapy.analysis.Analysis.get_flux_points", false]], "get_flux_points() (gammapy.estimators.fluxmaps method)": [[125, "gammapy.estimators.FluxMaps.get_flux_points", false]], "get_flux_points() (gammapy.estimators.fluxpoints method)": [[127, "gammapy.estimators.FluxPoints.get_flux_points", false]], "get_hdu() (gammapy.utils.fits.hdulocation method)": [[318, "gammapy.utils.fits.HDULocation.get_hdu", false]], "get_icrs() (gammapy.data.fixedpointinginfo method)": [[85, "gammapy.data.FixedPointingInfo.get_icrs", false]], "get_icrs() (gammapy.data.pointinginfo method)": [[94, "gammapy.data.PointingInfo.get_icrs", false]], "get_idx() (gammapy.maps.geom method)": [[193, "gammapy.maps.Geom.get_idx", false]], "get_idx() (gammapy.maps.hpxgeom method)": [[194, "gammapy.maps.HpxGeom.get_idx", false]], "get_idx() (gammapy.maps.regiongeom method)": [[203, "gammapy.maps.RegionGeom.get_idx", false]], "get_idx() (gammapy.maps.wcsgeom method)": [[206, "gammapy.maps.WcsGeom.get_idx", false]], "get_image_by_coord() (gammapy.maps.hpxmap method)": [[195, "gammapy.maps.HpxMap.get_image_by_coord", false]], "get_image_by_coord() (gammapy.maps.hpxndmap method)": [[196, "gammapy.maps.HpxNDMap.get_image_by_coord", false]], "get_image_by_coord() (gammapy.maps.map method)": [[198, "gammapy.maps.Map.get_image_by_coord", false]], "get_image_by_coord() (gammapy.maps.regionndmap method)": [[204, "gammapy.maps.RegionNDMap.get_image_by_coord", false]], "get_image_by_coord() (gammapy.maps.wcsmap method)": [[207, "gammapy.maps.WcsMap.get_image_by_coord", false]], "get_image_by_coord() (gammapy.maps.wcsndmap method)": [[208, "gammapy.maps.WcsNDMap.get_image_by_coord", false]], "get_image_by_idx() (gammapy.maps.hpxmap method)": [[195, "gammapy.maps.HpxMap.get_image_by_idx", false]], "get_image_by_idx() (gammapy.maps.hpxndmap method)": [[196, "gammapy.maps.HpxNDMap.get_image_by_idx", false]], "get_image_by_idx() (gammapy.maps.map method)": [[198, "gammapy.maps.Map.get_image_by_idx", false]], "get_image_by_idx() (gammapy.maps.regionndmap method)": [[204, "gammapy.maps.RegionNDMap.get_image_by_idx", false]], "get_image_by_idx() (gammapy.maps.wcsmap method)": [[207, "gammapy.maps.WcsMap.get_image_by_idx", false]], "get_image_by_idx() (gammapy.maps.wcsndmap method)": [[208, "gammapy.maps.WcsNDMap.get_image_by_idx", false]], "get_image_by_pix() (gammapy.maps.hpxmap method)": [[195, "gammapy.maps.HpxMap.get_image_by_pix", false]], "get_image_by_pix() (gammapy.maps.hpxndmap method)": [[196, "gammapy.maps.HpxNDMap.get_image_by_pix", false]], "get_image_by_pix() (gammapy.maps.map method)": [[198, "gammapy.maps.Map.get_image_by_pix", false]], "get_image_by_pix() (gammapy.maps.regionndmap method)": [[204, "gammapy.maps.RegionNDMap.get_image_by_pix", false]], "get_image_by_pix() (gammapy.maps.wcsmap method)": [[207, "gammapy.maps.WcsMap.get_image_by_pix", false]], "get_image_by_pix() (gammapy.maps.wcsndmap method)": [[208, "gammapy.maps.WcsNDMap.get_image_by_pix", false]], "get_images_paths() (in module gammapy.utils.scripts)": [[347, "gammapy.utils.scripts.get_images_paths", false]], "get_index_list() (gammapy.maps.hpxgeom static method)": [[194, "gammapy.maps.HpxGeom.get_index_list", false]], "get_irfs_features() (in module gammapy.data)": [[96, "gammapy.data.get_irfs_features", false]], "get_kernels() (gammapy.estimators.asmoothmapestimator method)": [[120, "gammapy.estimators.ASmoothMapEstimator.get_kernels", false]], "get_light_curve() (gammapy.analysis.analysis method)": [[15, "gammapy.analysis.Analysis.get_light_curve", false]], "get_mean() (gammapy.irf.edispkernel method)": [[152, "gammapy.irf.EDispKernel.get_mean", false]], "get_observations() (gammapy.analysis.analysis method)": [[15, "gammapy.analysis.Analysis.get_observations", false]], "get_observations() (gammapy.data.datastore method)": [[82, "gammapy.data.DataStore.get_observations", false]], "get_ogip_meta() (gammapy.datasets.ogipdatasetwriter method)": [[108, "gammapy.datasets.OGIPDatasetWriter.get_ogip_meta", false]], "get_pix() (gammapy.maps.wcsgeom method)": [[206, "gammapy.maps.WcsGeom.get_pix", false]], "get_pointing_altaz() (gammapy.data.observation method)": [[88, "gammapy.data.Observation.get_pointing_altaz", false]], "get_pointing_icrs() (gammapy.data.observation method)": [[88, "gammapy.data.Observation.get_pointing_icrs", false]], "get_psf_kernel() (gammapy.irf.psfmap method)": [[165, "gammapy.irf.PSFMap.get_psf_kernel", false]], "get_psf_kernel() (gammapy.irf.recopsfmap method)": [[168, "gammapy.irf.RecoPSFMap.get_psf_kernel", false]], "get_random_state() (in module gammapy.utils.random)": [[334, "gammapy.utils.random.get_random_state", false]], "get_rebinned_axis() (in module gammapy.estimators.utils)": [[147, "gammapy.estimators.utils.get_rebinned_axis", false]], "get_resolution() (gammapy.irf.edispkernel method)": [[152, "gammapy.irf.EDispKernel.get_resolution", false]], "get_scale_model() (gammapy.estimators.fluxpointsestimator method)": [[128, "gammapy.estimators.FluxPointsEstimator.get_scale_model", false]], "get_scale_model() (gammapy.estimators.fluxprofileestimator method)": [[129, "gammapy.estimators.FluxProfileEstimator.get_scale_model", false]], "get_scale_model() (gammapy.estimators.lightcurveestimator method)": [[132, "gammapy.estimators.LightCurveEstimator.get_scale_model", false]], "get_scales() (gammapy.estimators.asmoothmapestimator static method)": [[120, "gammapy.estimators.ASmoothMapEstimator.get_scales", false]], "get_spectrum() (gammapy.maps.hpxmap method)": [[195, "gammapy.maps.HpxMap.get_spectrum", false]], "get_spectrum() (gammapy.maps.hpxndmap method)": [[196, "gammapy.maps.HpxNDMap.get_spectrum", false]], "get_spectrum() (gammapy.maps.map method)": [[198, "gammapy.maps.Map.get_spectrum", false]], "get_spectrum() (gammapy.maps.regionndmap method)": [[204, "gammapy.maps.RegionNDMap.get_spectrum", false]], "get_spectrum() (gammapy.maps.wcsmap method)": [[207, "gammapy.maps.WcsMap.get_spectrum", false]], "get_spectrum() (gammapy.maps.wcsndmap method)": [[208, "gammapy.maps.WcsNDMap.get_spectrum", false]], "get_subcovariance() (gammapy.modeling.covariance method)": [[211, "gammapy.modeling.Covariance.get_subcovariance", false]], "get_valid_path() (gammapy.datasets.ogipdatasetreader method)": [[107, "gammapy.datasets.OGIPDatasetReader.get_valid_path", false]], "get_wcs_coord_and_weights() (gammapy.maps.regiongeom method)": [[203, "gammapy.maps.RegionGeom.get_wcs_coord_and_weights", false]], "get_wstat_gof_terms() (in module gammapy.stats)": [[303, "gammapy.stats.get_wstat_gof_terms", false]], "get_wstat_mu_bkg() (in module gammapy.stats)": [[304, "gammapy.stats.get_wstat_mu_bkg", false]], "global_to_local() (gammapy.maps.hpxgeom method)": [[194, "gammapy.maps.HpxGeom.global_to_local", false]], "group_by() (gammapy.data.hduindextable method)": [[87, "gammapy.data.HDUIndexTable.group_by", false]], "group_by() (gammapy.data.observationtable method)": [[91, "gammapy.data.ObservationTable.group_by", false]], "group_by_label() (gammapy.data.observations method)": [[92, "gammapy.data.Observations.group_by_label", false]], "group_table() (gammapy.data.gti method)": [[86, "gammapy.data.GTI.group_table", false]], "group_table() (gammapy.maps.mapaxis method)": [[200, "gammapy.maps.MapAxis.group_table", false]], "group_table() (gammapy.maps.timemapaxis method)": [[205, "gammapy.maps.TimeMapAxis.group_table", false]], "groups (gammapy.data.hduindextable attribute)": [[87, "gammapy.data.HDUIndexTable.groups", false]], "groups (gammapy.data.observationtable attribute)": [[91, "gammapy.data.ObservationTable.groups", false]], "gti": [[581, "term-GTI", true]], "gti (class in gammapy.data)": [[86, "gammapy.data.GTI", false]], "gti (gammapy.data.observation attribute)": [[88, "gammapy.data.Observation.gti", false]], "gti (gammapy.datasets.datasets attribute)": [[100, "gammapy.datasets.Datasets.gti", false]], "gti (gammapy.datasets.fluxpointsdataset attribute)": [[102, "gammapy.datasets.FluxPointsDataset.gti", false]], "gti (gammapy.datasets.mapdataset attribute)": [[103, "gammapy.datasets.MapDataset.gti", false]], "gti (gammapy.datasets.mapdatasetonoff attribute)": [[106, "gammapy.datasets.MapDatasetOnOff.gti", false]], "gti (gammapy.datasets.spectrumdataset attribute)": [[110, "gammapy.datasets.SpectrumDataset.gti", false]], "gti (gammapy.datasets.spectrumdatasetonoff attribute)": [[111, "gammapy.datasets.SpectrumDatasetOnOff.gti", false]], "has_any_ts (gammapy.estimators.fluxmaps attribute)": [[125, "gammapy.estimators.FluxMaps.has_any_ts", false]], "has_any_ts (gammapy.estimators.fluxpoints attribute)": [[127, "gammapy.estimators.FluxPoints.has_any_ts", false]], "has_energy_axis (gammapy.maps.geom attribute)": [[193, "gammapy.maps.Geom.has_energy_axis", false]], "has_energy_axis (gammapy.maps.hpxgeom attribute)": [[194, "gammapy.maps.HpxGeom.has_energy_axis", false]], "has_energy_axis (gammapy.maps.regiongeom attribute)": [[203, "gammapy.maps.RegionGeom.has_energy_axis", false]], "has_energy_axis (gammapy.maps.wcsgeom attribute)": [[206, "gammapy.maps.WcsGeom.has_energy_axis", false]], "has_inverse() (gammapy.astro.population.casebattacharya1998 method)": [[28, "gammapy.astro.population.CaseBattacharya1998.has_inverse", false]], "has_inverse() (gammapy.astro.population.exponential method)": [[29, "gammapy.astro.population.Exponential.has_inverse", false]], "has_inverse() (gammapy.astro.population.faucherkaspi2006 method)": [[30, "gammapy.astro.population.FaucherKaspi2006.has_inverse", false]], "has_inverse() (gammapy.astro.population.faucherkaspi2006velocitybimodal method)": [[31, "gammapy.astro.population.FaucherKaspi2006VelocityBimodal.has_inverse", false]], "has_inverse() (gammapy.astro.population.faucherkaspi2006velocitymaxwellian method)": [[32, "gammapy.astro.population.FaucherKaspi2006VelocityMaxwellian.has_inverse", false]], "has_inverse() (gammapy.astro.population.lorimer2006 method)": [[35, "gammapy.astro.population.Lorimer2006.has_inverse", false]], "has_inverse() (gammapy.astro.population.paczynski1990 method)": [[36, "gammapy.astro.population.Paczynski1990.has_inverse", false]], "has_inverse() (gammapy.astro.population.paczynski1990velocity method)": [[37, "gammapy.astro.population.Paczynski1990Velocity.has_inverse", false]], "has_inverse() (gammapy.astro.population.yusifovkucuk2004 method)": [[39, "gammapy.astro.population.YusifovKucuk2004.has_inverse", false]], "has_inverse() (gammapy.astro.population.yusifovkucuk2004b method)": [[40, "gammapy.astro.population.YusifovKucuk2004B.has_inverse", false]], "has_masked_columns (gammapy.data.hduindextable attribute)": [[87, "gammapy.data.HDUIndexTable.has_masked_columns", false]], "has_masked_columns (gammapy.data.observationtable attribute)": [[91, "gammapy.data.ObservationTable.has_masked_columns", false]], "has_masked_values (gammapy.data.hduindextable attribute)": [[87, "gammapy.data.HDUIndexTable.has_masked_values", false]], "has_masked_values (gammapy.data.observationtable attribute)": [[91, "gammapy.data.ObservationTable.has_masked_values", false]], "has_mixin_columns (gammapy.data.hduindextable attribute)": [[87, "gammapy.data.HDUIndexTable.has_mixin_columns", false]], "has_mixin_columns (gammapy.data.observationtable attribute)": [[91, "gammapy.data.ObservationTable.has_mixin_columns", false]], "has_offset_axis (gammapy.irf.background2d attribute)": [[149, "gammapy.irf.Background2D.has_offset_axis", false]], "has_offset_axis (gammapy.irf.background3d attribute)": [[150, "gammapy.irf.Background3D.has_offset_axis", false]], "has_offset_axis (gammapy.irf.backgroundirf attribute)": [[151, "gammapy.irf.BackgroundIRF.has_offset_axis", false]], "has_offset_axis (gammapy.irf.edispkernel attribute)": [[152, "gammapy.irf.EDispKernel.has_offset_axis", false]], "has_offset_axis (gammapy.irf.effectiveareatable2d attribute)": [[155, "gammapy.irf.EffectiveAreaTable2D.has_offset_axis", false]], "has_offset_axis (gammapy.irf.energydependentmultigausspsf attribute)": [[156, "gammapy.irf.EnergyDependentMultiGaussPSF.has_offset_axis", false]], "has_offset_axis (gammapy.irf.energydispersion2d attribute)": [[157, "gammapy.irf.EnergyDispersion2D.has_offset_axis", false]], "has_offset_axis (gammapy.irf.irf attribute)": [[159, "gammapy.irf.IRF.has_offset_axis", false]], "has_offset_axis (gammapy.irf.parametricpsf attribute)": [[166, "gammapy.irf.ParametricPSF.has_offset_axis", false]], "has_offset_axis (gammapy.irf.psf3d attribute)": [[162, "gammapy.irf.PSF3D.has_offset_axis", false]], "has_offset_axis (gammapy.irf.psfking attribute)": [[164, "gammapy.irf.PSFKing.has_offset_axis", false]], "has_offset_axis (gammapy.irf.radmax2d attribute)": [[167, "gammapy.irf.RadMax2D.has_offset_axis", false]], "has_single_spatial_bin (gammapy.irf.edispkernelmap attribute)": [[153, "gammapy.irf.EDispKernelMap.has_single_spatial_bin", false]], "has_single_spatial_bin (gammapy.irf.edispmap attribute)": [[154, "gammapy.irf.EDispMap.has_single_spatial_bin", false]], "has_single_spatial_bin (gammapy.irf.irfmap attribute)": [[160, "gammapy.irf.IRFMap.has_single_spatial_bin", false]], "has_single_spatial_bin (gammapy.irf.psfmap attribute)": [[165, "gammapy.irf.PSFMap.has_single_spatial_bin", false]], "has_single_spatial_bin (gammapy.irf.recopsfmap attribute)": [[168, "gammapy.irf.RecoPSFMap.has_single_spatial_bin", false]], "has_stat_profiles (gammapy.estimators.fluxmaps attribute)": [[125, "gammapy.estimators.FluxMaps.has_stat_profiles", false]], "has_stat_profiles (gammapy.estimators.fluxpoints attribute)": [[127, "gammapy.estimators.FluxPoints.has_stat_profiles", false]], "has_success (gammapy.estimators.fluxmaps attribute)": [[125, "gammapy.estimators.FluxMaps.has_success", false]], "has_success (gammapy.estimators.fluxpoints attribute)": [[127, "gammapy.estimators.FluxPoints.has_success", false]], "has_ul (gammapy.estimators.fluxmaps attribute)": [[125, "gammapy.estimators.FluxMaps.has_ul", false]], "has_ul (gammapy.estimators.fluxpoints attribute)": [[127, "gammapy.estimators.FluxPoints.has_ul", false]], "has_user_bounding_box (gammapy.astro.population.casebattacharya1998 attribute)": [[28, "gammapy.astro.population.CaseBattacharya1998.has_user_bounding_box", false]], "has_user_bounding_box (gammapy.astro.population.exponential attribute)": [[29, "gammapy.astro.population.Exponential.has_user_bounding_box", false]], "has_user_bounding_box (gammapy.astro.population.faucherkaspi2006 attribute)": [[30, "gammapy.astro.population.FaucherKaspi2006.has_user_bounding_box", false]], "has_user_bounding_box (gammapy.astro.population.faucherkaspi2006velocitybimodal attribute)": [[31, "gammapy.astro.population.FaucherKaspi2006VelocityBimodal.has_user_bounding_box", false]], "has_user_bounding_box (gammapy.astro.population.faucherkaspi2006velocitymaxwellian attribute)": [[32, "gammapy.astro.population.FaucherKaspi2006VelocityMaxwellian.has_user_bounding_box", false]], "has_user_bounding_box (gammapy.astro.population.lorimer2006 attribute)": [[35, "gammapy.astro.population.Lorimer2006.has_user_bounding_box", false]], "has_user_bounding_box (gammapy.astro.population.paczynski1990 attribute)": [[36, "gammapy.astro.population.Paczynski1990.has_user_bounding_box", false]], "has_user_bounding_box (gammapy.astro.population.paczynski1990velocity attribute)": [[37, "gammapy.astro.population.Paczynski1990Velocity.has_user_bounding_box", false]], "has_user_bounding_box (gammapy.astro.population.yusifovkucuk2004 attribute)": [[39, "gammapy.astro.population.YusifovKucuk2004.has_user_bounding_box", false]], "has_user_bounding_box (gammapy.astro.population.yusifovkucuk2004b attribute)": [[40, "gammapy.astro.population.YusifovKucuk2004B.has_user_bounding_box", false]], "has_user_inverse (gammapy.astro.population.casebattacharya1998 attribute)": [[28, "gammapy.astro.population.CaseBattacharya1998.has_user_inverse", false]], "has_user_inverse (gammapy.astro.population.exponential attribute)": [[29, "gammapy.astro.population.Exponential.has_user_inverse", false]], "has_user_inverse (gammapy.astro.population.faucherkaspi2006 attribute)": [[30, "gammapy.astro.population.FaucherKaspi2006.has_user_inverse", false]], "has_user_inverse (gammapy.astro.population.faucherkaspi2006velocitybimodal attribute)": [[31, "gammapy.astro.population.FaucherKaspi2006VelocityBimodal.has_user_inverse", false]], "has_user_inverse (gammapy.astro.population.faucherkaspi2006velocitymaxwellian attribute)": [[32, "gammapy.astro.population.FaucherKaspi2006VelocityMaxwellian.has_user_inverse", false]], "has_user_inverse (gammapy.astro.population.lorimer2006 attribute)": [[35, "gammapy.astro.population.Lorimer2006.has_user_inverse", false]], "has_user_inverse (gammapy.astro.population.paczynski1990 attribute)": [[36, "gammapy.astro.population.Paczynski1990.has_user_inverse", false]], "has_user_inverse (gammapy.astro.population.paczynski1990velocity attribute)": [[37, "gammapy.astro.population.Paczynski1990Velocity.has_user_inverse", false]], "has_user_inverse (gammapy.astro.population.yusifovkucuk2004 attribute)": [[39, "gammapy.astro.population.YusifovKucuk2004.has_user_inverse", false]], "has_user_inverse (gammapy.astro.population.yusifovkucuk2004b attribute)": [[40, "gammapy.astro.population.YusifovKucuk2004B.has_user_inverse", false]], "hdu_class_unique (gammapy.data.hduindextable attribute)": [[87, "gammapy.data.HDUIndexTable.hdu_class_unique", false]], "hdu_location() (gammapy.data.hduindextable method)": [[87, "gammapy.data.HDUIndexTable.hdu_location", false]], "hdu_type_unique (gammapy.data.hduindextable attribute)": [[87, "gammapy.data.HDUIndexTable.hdu_type_unique", false]], "hduindextable (class in gammapy.data)": [[87, "gammapy.data.HDUIndexTable", false]], "hdulocation (class in gammapy.utils.fits)": [[318, "gammapy.utils.fits.HDULocation", false]], "hierarchical_clustering() (in module gammapy.utils.cluster)": [[308, "gammapy.utils.cluster.hierarchical_clustering", false]], "hli": [[581, "term-HLI", true]], "hpxgeom (class in gammapy.maps)": [[194, "gammapy.maps.HpxGeom", false]], "hpxmap (class in gammapy.maps)": [[195, "gammapy.maps.HpxMap", false]], "hpxndmap (class in gammapy.maps)": [[196, "gammapy.maps.HpxNDMap", false]], "hstack_columns() (in module gammapy.utils.table)": [[353, "gammapy.utils.table.hstack_columns", false]], "ids (gammapy.data.observations attribute)": [[92, "gammapy.data.Observations.ids", false]], "iloc (gammapy.data.hduindextable attribute)": [[87, "gammapy.data.HDUIndexTable.iloc", false]], "iloc (gammapy.data.observationtable attribute)": [[91, "gammapy.data.ObservationTable.iloc", false]], "imageprofile (class in gammapy.estimators)": [[130, "gammapy.estimators.ImageProfile", false]], "imageprofileestimator (class in gammapy.estimators)": [[131, "gammapy.estimators.ImageProfileEstimator", false]], "in_memory_generator() (gammapy.data.observations method)": [[92, "gammapy.data.Observations.in_memory_generator", false]], "include_ssc (gammapy.modeling.models.naimaspectralmodel attribute)": [[251, "gammapy.modeling.models.NaimaSpectralModel.include_ssc", false]], "index (gammapy.modeling.models.expcutoffpowerlaw3fglspectralmodel attribute)": [[230, "gammapy.modeling.models.ExpCutoffPowerLaw3FGLSpectralModel.index", false]], "index (gammapy.modeling.models.expcutoffpowerlawnormspectralmodel attribute)": [[231, "gammapy.modeling.models.ExpCutoffPowerLawNormSpectralModel.index", false]], "index (gammapy.modeling.models.expcutoffpowerlawspectralmodel attribute)": [[232, "gammapy.modeling.models.ExpCutoffPowerLawSpectralModel.index", false]], "index (gammapy.modeling.models.powerlaw2spectralmodel attribute)": [[255, "gammapy.modeling.models.PowerLaw2SpectralModel.index", false]], "index (gammapy.modeling.models.powerlawspectralmodel attribute)": [[257, "gammapy.modeling.models.PowerLawSpectralModel.index", false]], "index() (gammapy.data.observations method)": [[92, "gammapy.data.Observations.index", false]], "index() (gammapy.datasets.datasets method)": [[100, "gammapy.datasets.Datasets.index", false]], "index() (gammapy.maps.mapaxes method)": [[199, "gammapy.maps.MapAxes.index", false]], "index() (gammapy.modeling.models.datasetmodels method)": [[226, "gammapy.modeling.models.DatasetModels.index", false]], "index() (gammapy.modeling.models.models method)": [[250, "gammapy.modeling.models.Models.index", false]], "index() (gammapy.modeling.parameters method)": [[217, "gammapy.modeling.Parameters.index", false]], "index() (gammapy.modeling.priorparameters method)": [[219, "gammapy.modeling.PriorParameters.index", false]], "index1 (gammapy.modeling.models.brokenpowerlawspectralmodel attribute)": [[220, "gammapy.modeling.models.BrokenPowerLawSpectralModel.index1", false]], "index1 (gammapy.modeling.models.smoothbrokenpowerlawspectralmodel attribute)": [[267, "gammapy.modeling.models.SmoothBrokenPowerLawSpectralModel.index1", false]], "index2 (gammapy.modeling.models.brokenpowerlawspectralmodel attribute)": [[220, "gammapy.modeling.models.BrokenPowerLawSpectralModel.index2", false]], "index2 (gammapy.modeling.models.smoothbrokenpowerlawspectralmodel attribute)": [[267, "gammapy.modeling.models.SmoothBrokenPowerLawSpectralModel.index2", false]], "index_1 (gammapy.modeling.models.superexpcutoffpowerlaw3fglspectralmodel attribute)": [[270, "gammapy.modeling.models.SuperExpCutoffPowerLaw3FGLSpectralModel.index_1", false]], "index_1 (gammapy.modeling.models.superexpcutoffpowerlaw4fgldr3spectralmodel attribute)": [[271, "gammapy.modeling.models.SuperExpCutoffPowerLaw4FGLDR3SpectralModel.index_1", false]], "index_1 (gammapy.modeling.models.superexpcutoffpowerlaw4fglspectralmodel attribute)": [[272, "gammapy.modeling.models.SuperExpCutoffPowerLaw4FGLSpectralModel.index_1", false]], "index_2 (gammapy.modeling.models.superexpcutoffpowerlaw3fglspectralmodel attribute)": [[270, "gammapy.modeling.models.SuperExpCutoffPowerLaw3FGLSpectralModel.index_2", false]], "index_2 (gammapy.modeling.models.superexpcutoffpowerlaw4fgldr3spectralmodel attribute)": [[271, "gammapy.modeling.models.SuperExpCutoffPowerLaw4FGLDR3SpectralModel.index_2", false]], "index_2 (gammapy.modeling.models.superexpcutoffpowerlaw4fglspectralmodel attribute)": [[272, "gammapy.modeling.models.SuperExpCutoffPowerLaw4FGLSpectralModel.index_2", false]], "index_column() (gammapy.data.hduindextable method)": [[87, "gammapy.data.HDUIndexTable.index_column", false]], "index_column() (gammapy.data.observationtable method)": [[91, "gammapy.data.ObservationTable.index_column", false]], "index_data() (gammapy.maps.mapaxes method)": [[199, "gammapy.maps.MapAxes.index_data", false]], "index_mode() (gammapy.data.hduindextable method)": [[87, "gammapy.data.HDUIndexTable.index_mode", false]], "index_mode() (gammapy.data.observationtable method)": [[91, "gammapy.data.ObservationTable.index_mode", false]], "indices (gammapy.data.hduindextable attribute)": [[87, "gammapy.data.HDUIndexTable.indices", false]], "indices (gammapy.data.observationtable attribute)": [[91, "gammapy.data.ObservationTable.indices", false]], "ineqcons (gammapy.astro.population.casebattacharya1998 attribute)": [[28, "gammapy.astro.population.CaseBattacharya1998.ineqcons", false]], "ineqcons (gammapy.astro.population.exponential attribute)": [[29, "gammapy.astro.population.Exponential.ineqcons", false]], "ineqcons (gammapy.astro.population.faucherkaspi2006 attribute)": [[30, "gammapy.astro.population.FaucherKaspi2006.ineqcons", false]], "ineqcons (gammapy.astro.population.faucherkaspi2006velocitybimodal attribute)": [[31, "gammapy.astro.population.FaucherKaspi2006VelocityBimodal.ineqcons", false]], "ineqcons (gammapy.astro.population.faucherkaspi2006velocitymaxwellian attribute)": [[32, "gammapy.astro.population.FaucherKaspi2006VelocityMaxwellian.ineqcons", false]], "ineqcons (gammapy.astro.population.lorimer2006 attribute)": [[35, "gammapy.astro.population.Lorimer2006.ineqcons", false]], "ineqcons (gammapy.astro.population.paczynski1990 attribute)": [[36, "gammapy.astro.population.Paczynski1990.ineqcons", false]], "ineqcons (gammapy.astro.population.paczynski1990velocity attribute)": [[37, "gammapy.astro.population.Paczynski1990Velocity.ineqcons", false]], "ineqcons (gammapy.astro.population.yusifovkucuk2004 attribute)": [[39, "gammapy.astro.population.YusifovKucuk2004.ineqcons", false]], "ineqcons (gammapy.astro.population.yusifovkucuk2004b attribute)": [[40, "gammapy.astro.population.YusifovKucuk2004B.ineqcons", false]], "info (gammapy.data.hduindextable attribute)": [[87, "gammapy.data.HDUIndexTable.info", false]], "info (gammapy.data.observationtable attribute)": [[91, "gammapy.data.ObservationTable.info", false]], "info() (gammapy.catalog.sourcecatalogobject2fhl method)": [[71, "gammapy.catalog.SourceCatalogObject2FHL.info", false]], "info() (gammapy.catalog.sourcecatalogobject2hwc method)": [[72, "gammapy.catalog.SourceCatalogObject2HWC.info", false]], "info() (gammapy.catalog.sourcecatalogobject2pc method)": [[73, "gammapy.catalog.SourceCatalogObject2PC.info", false]], "info() (gammapy.catalog.sourcecatalogobject3fgl method)": [[74, "gammapy.catalog.SourceCatalogObject3FGL.info", false]], "info() (gammapy.catalog.sourcecatalogobject3fhl method)": [[75, "gammapy.catalog.SourceCatalogObject3FHL.info", false]], "info() (gammapy.catalog.sourcecatalogobject3hwc method)": [[76, "gammapy.catalog.SourceCatalogObject3HWC.info", false]], "info() (gammapy.catalog.sourcecatalogobject3pc method)": [[77, "gammapy.catalog.SourceCatalogObject3PC.info", false]], "info() (gammapy.catalog.sourcecatalogobject4fgl method)": [[78, "gammapy.catalog.SourceCatalogObject4FGL.info", false]], "info() (gammapy.catalog.sourcecatalogobjectgammacat method)": [[79, "gammapy.catalog.SourceCatalogObjectGammaCat.info", false]], "info() (gammapy.catalog.sourcecatalogobjecthgps method)": [[80, "gammapy.catalog.SourceCatalogObjectHGPS.info", false]], "info() (gammapy.data.datastore method)": [[82, "gammapy.data.DataStore.info", false]], "info() (gammapy.irf.energydependentmultigausspsf method)": [[156, "gammapy.irf.EnergyDependentMultiGaussPSF.info", false]], "info() (gammapy.irf.parametricpsf method)": [[166, "gammapy.irf.ParametricPSF.info", false]], "info() (gammapy.irf.psf3d method)": [[162, "gammapy.irf.PSF3D.info", false]], "info() (gammapy.irf.psfking method)": [[164, "gammapy.irf.PSFKing.info", false]], "info() (gammapy.utils.fits.hdulocation method)": [[318, "gammapy.utils.fits.HDULocation.info", false]], "info_dict() (gammapy.datasets.mapdataset method)": [[103, "gammapy.datasets.MapDataset.info_dict", false]], "info_dict() (gammapy.datasets.mapdatasetonoff method)": [[106, "gammapy.datasets.MapDatasetOnOff.info_dict", false]], "info_dict() (gammapy.datasets.spectrumdataset method)": [[110, "gammapy.datasets.SpectrumDataset.info_dict", false]], "info_dict() (gammapy.datasets.spectrumdatasetonoff method)": [[111, "gammapy.datasets.SpectrumDatasetOnOff.info_dict", false]], "info_dict() (gammapy.stats.cashcountsstatistic method)": [[291, "gammapy.stats.CashCountsStatistic.info_dict", false]], "info_dict() (gammapy.stats.wstatcountsstatistic method)": [[293, "gammapy.stats.WStatCountsStatistic.info_dict", false]], "info_table() (gammapy.datasets.datasets method)": [[100, "gammapy.datasets.Datasets.info_table", false]], "input_shape() (gammapy.astro.population.casebattacharya1998 method)": [[28, "gammapy.astro.population.CaseBattacharya1998.input_shape", false]], "input_shape() (gammapy.astro.population.exponential method)": [[29, "gammapy.astro.population.Exponential.input_shape", false]], "input_shape() (gammapy.astro.population.faucherkaspi2006 method)": [[30, "gammapy.astro.population.FaucherKaspi2006.input_shape", false]], "input_shape() (gammapy.astro.population.faucherkaspi2006velocitybimodal method)": [[31, "gammapy.astro.population.FaucherKaspi2006VelocityBimodal.input_shape", false]], "input_shape() (gammapy.astro.population.faucherkaspi2006velocitymaxwellian method)": [[32, "gammapy.astro.population.FaucherKaspi2006VelocityMaxwellian.input_shape", false]], "input_shape() (gammapy.astro.population.lorimer2006 method)": [[35, "gammapy.astro.population.Lorimer2006.input_shape", false]], "input_shape() (gammapy.astro.population.paczynski1990 method)": [[36, "gammapy.astro.population.Paczynski1990.input_shape", false]], "input_shape() (gammapy.astro.population.paczynski1990velocity method)": [[37, "gammapy.astro.population.Paczynski1990Velocity.input_shape", false]], "input_shape() (gammapy.astro.population.yusifovkucuk2004 method)": [[39, "gammapy.astro.population.YusifovKucuk2004.input_shape", false]], "input_shape() (gammapy.astro.population.yusifovkucuk2004b method)": [[40, "gammapy.astro.population.YusifovKucuk2004B.input_shape", false]], "input_units (gammapy.astro.population.casebattacharya1998 attribute)": [[28, "gammapy.astro.population.CaseBattacharya1998.input_units", false]], "input_units (gammapy.astro.population.exponential attribute)": [[29, "gammapy.astro.population.Exponential.input_units", false]], "input_units (gammapy.astro.population.faucherkaspi2006 attribute)": [[30, "gammapy.astro.population.FaucherKaspi2006.input_units", false]], "input_units (gammapy.astro.population.faucherkaspi2006velocitybimodal attribute)": [[31, "gammapy.astro.population.FaucherKaspi2006VelocityBimodal.input_units", false]], "input_units (gammapy.astro.population.faucherkaspi2006velocitymaxwellian attribute)": [[32, "gammapy.astro.population.FaucherKaspi2006VelocityMaxwellian.input_units", false]], "input_units (gammapy.astro.population.lorimer2006 attribute)": [[35, "gammapy.astro.population.Lorimer2006.input_units", false]], "input_units (gammapy.astro.population.paczynski1990 attribute)": [[36, "gammapy.astro.population.Paczynski1990.input_units", false]], "input_units (gammapy.astro.population.paczynski1990velocity attribute)": [[37, "gammapy.astro.population.Paczynski1990Velocity.input_units", false]], "input_units (gammapy.astro.population.yusifovkucuk2004 attribute)": [[39, "gammapy.astro.population.YusifovKucuk2004.input_units", false]], "input_units (gammapy.astro.population.yusifovkucuk2004b attribute)": [[40, "gammapy.astro.population.YusifovKucuk2004B.input_units", false]], "input_units_allow_dimensionless (gammapy.astro.population.casebattacharya1998 attribute)": [[28, "gammapy.astro.population.CaseBattacharya1998.input_units_allow_dimensionless", false]], "input_units_allow_dimensionless (gammapy.astro.population.exponential attribute)": [[29, "gammapy.astro.population.Exponential.input_units_allow_dimensionless", false]], "input_units_allow_dimensionless (gammapy.astro.population.faucherkaspi2006 attribute)": [[30, "gammapy.astro.population.FaucherKaspi2006.input_units_allow_dimensionless", false]], "input_units_allow_dimensionless (gammapy.astro.population.faucherkaspi2006velocitybimodal attribute)": [[31, "gammapy.astro.population.FaucherKaspi2006VelocityBimodal.input_units_allow_dimensionless", false]], "input_units_allow_dimensionless (gammapy.astro.population.faucherkaspi2006velocitymaxwellian attribute)": [[32, "gammapy.astro.population.FaucherKaspi2006VelocityMaxwellian.input_units_allow_dimensionless", false]], "input_units_allow_dimensionless (gammapy.astro.population.lorimer2006 attribute)": [[35, "gammapy.astro.population.Lorimer2006.input_units_allow_dimensionless", false]], "input_units_allow_dimensionless (gammapy.astro.population.paczynski1990 attribute)": [[36, "gammapy.astro.population.Paczynski1990.input_units_allow_dimensionless", false]], "input_units_allow_dimensionless (gammapy.astro.population.paczynski1990velocity attribute)": [[37, "gammapy.astro.population.Paczynski1990Velocity.input_units_allow_dimensionless", false]], "input_units_allow_dimensionless (gammapy.astro.population.yusifovkucuk2004 attribute)": [[39, "gammapy.astro.population.YusifovKucuk2004.input_units_allow_dimensionless", false]], "input_units_allow_dimensionless (gammapy.astro.population.yusifovkucuk2004b attribute)": [[40, "gammapy.astro.population.YusifovKucuk2004B.input_units_allow_dimensionless", false]], "input_units_equivalencies (gammapy.astro.population.casebattacharya1998 attribute)": [[28, "gammapy.astro.population.CaseBattacharya1998.input_units_equivalencies", false]], "input_units_equivalencies (gammapy.astro.population.exponential attribute)": [[29, "gammapy.astro.population.Exponential.input_units_equivalencies", false]], "input_units_equivalencies (gammapy.astro.population.faucherkaspi2006 attribute)": [[30, "gammapy.astro.population.FaucherKaspi2006.input_units_equivalencies", false]], "input_units_equivalencies (gammapy.astro.population.faucherkaspi2006velocitybimodal attribute)": [[31, "gammapy.astro.population.FaucherKaspi2006VelocityBimodal.input_units_equivalencies", false]], "input_units_equivalencies (gammapy.astro.population.faucherkaspi2006velocitymaxwellian attribute)": [[32, "gammapy.astro.population.FaucherKaspi2006VelocityMaxwellian.input_units_equivalencies", false]], "input_units_equivalencies (gammapy.astro.population.lorimer2006 attribute)": [[35, "gammapy.astro.population.Lorimer2006.input_units_equivalencies", false]], "input_units_equivalencies (gammapy.astro.population.paczynski1990 attribute)": [[36, "gammapy.astro.population.Paczynski1990.input_units_equivalencies", false]], "input_units_equivalencies (gammapy.astro.population.paczynski1990velocity attribute)": [[37, "gammapy.astro.population.Paczynski1990Velocity.input_units_equivalencies", false]], "input_units_equivalencies (gammapy.astro.population.yusifovkucuk2004 attribute)": [[39, "gammapy.astro.population.YusifovKucuk2004.input_units_equivalencies", false]], "input_units_equivalencies (gammapy.astro.population.yusifovkucuk2004b attribute)": [[40, "gammapy.astro.population.YusifovKucuk2004B.input_units_equivalencies", false]], "input_units_strict (gammapy.astro.population.casebattacharya1998 attribute)": [[28, "gammapy.astro.population.CaseBattacharya1998.input_units_strict", false]], "input_units_strict (gammapy.astro.population.exponential attribute)": [[29, "gammapy.astro.population.Exponential.input_units_strict", false]], "input_units_strict (gammapy.astro.population.faucherkaspi2006 attribute)": [[30, "gammapy.astro.population.FaucherKaspi2006.input_units_strict", false]], "input_units_strict (gammapy.astro.population.faucherkaspi2006velocitybimodal attribute)": [[31, "gammapy.astro.population.FaucherKaspi2006VelocityBimodal.input_units_strict", false]], "input_units_strict (gammapy.astro.population.faucherkaspi2006velocitymaxwellian attribute)": [[32, "gammapy.astro.population.FaucherKaspi2006VelocityMaxwellian.input_units_strict", false]], "input_units_strict (gammapy.astro.population.lorimer2006 attribute)": [[35, "gammapy.astro.population.Lorimer2006.input_units_strict", false]], "input_units_strict (gammapy.astro.population.paczynski1990 attribute)": [[36, "gammapy.astro.population.Paczynski1990.input_units_strict", false]], "input_units_strict (gammapy.astro.population.paczynski1990velocity attribute)": [[37, "gammapy.astro.population.Paczynski1990Velocity.input_units_strict", false]], "input_units_strict (gammapy.astro.population.yusifovkucuk2004 attribute)": [[39, "gammapy.astro.population.YusifovKucuk2004.input_units_strict", false]], "input_units_strict (gammapy.astro.population.yusifovkucuk2004b attribute)": [[40, "gammapy.astro.population.YusifovKucuk2004B.input_units_strict", false]], "inputs (gammapy.astro.population.casebattacharya1998 attribute)": [[28, "gammapy.astro.population.CaseBattacharya1998.inputs", false]], "inputs (gammapy.astro.population.exponential attribute)": [[29, "gammapy.astro.population.Exponential.inputs", false]], "inputs (gammapy.astro.population.faucherkaspi2006 attribute)": [[30, "gammapy.astro.population.FaucherKaspi2006.inputs", false]], "inputs (gammapy.astro.population.faucherkaspi2006velocitybimodal attribute)": [[31, "gammapy.astro.population.FaucherKaspi2006VelocityBimodal.inputs", false]], "inputs (gammapy.astro.population.faucherkaspi2006velocitymaxwellian attribute)": [[32, "gammapy.astro.population.FaucherKaspi2006VelocityMaxwellian.inputs", false]], "inputs (gammapy.astro.population.lorimer2006 attribute)": [[35, "gammapy.astro.population.Lorimer2006.inputs", false]], "inputs (gammapy.astro.population.paczynski1990 attribute)": [[36, "gammapy.astro.population.Paczynski1990.inputs", false]], "inputs (gammapy.astro.population.paczynski1990velocity attribute)": [[37, "gammapy.astro.population.Paczynski1990Velocity.inputs", false]], "inputs (gammapy.astro.population.yusifovkucuk2004 attribute)": [[39, "gammapy.astro.population.YusifovKucuk2004.inputs", false]], "inputs (gammapy.astro.population.yusifovkucuk2004b attribute)": [[40, "gammapy.astro.population.YusifovKucuk2004B.inputs", false]], "insert() (gammapy.data.observations method)": [[92, "gammapy.data.Observations.insert", false]], "insert() (gammapy.datasets.datasets method)": [[100, "gammapy.datasets.Datasets.insert", false]], "insert() (gammapy.modeling.models.models method)": [[250, "gammapy.modeling.models.Models.insert", false]], "insert_row() (gammapy.data.hduindextable method)": [[87, "gammapy.data.HDUIndexTable.insert_row", false]], "insert_row() (gammapy.data.observationtable method)": [[91, "gammapy.data.ObservationTable.insert_row", false]], "integral() (gammapy.astro.darkmatter.burkertprofile method)": [[17, "gammapy.astro.darkmatter.BurkertProfile.integral", false]], "integral() (gammapy.astro.darkmatter.darkmatterannihilationspectralmodel method)": [[19, "gammapy.astro.darkmatter.DarkMatterAnnihilationSpectralModel.integral", false]], "integral() (gammapy.astro.darkmatter.darkmatterdecayspectralmodel method)": [[20, "gammapy.astro.darkmatter.DarkMatterDecaySpectralModel.integral", false]], "integral() (gammapy.astro.darkmatter.dmprofile method)": [[18, "gammapy.astro.darkmatter.DMProfile.integral", false]], "integral() (gammapy.astro.darkmatter.einastoprofile method)": [[21, "gammapy.astro.darkmatter.EinastoProfile.integral", false]], "integral() (gammapy.astro.darkmatter.isothermalprofile method)": [[22, "gammapy.astro.darkmatter.IsothermalProfile.integral", false]], "integral() (gammapy.astro.darkmatter.mooreprofile method)": [[24, "gammapy.astro.darkmatter.MooreProfile.integral", false]], "integral() (gammapy.astro.darkmatter.nfwprofile method)": [[25, "gammapy.astro.darkmatter.NFWProfile.integral", false]], "integral() (gammapy.astro.darkmatter.primaryflux method)": [[26, "gammapy.astro.darkmatter.PrimaryFlux.integral", false]], "integral() (gammapy.astro.darkmatter.zhaoprofile method)": [[27, "gammapy.astro.darkmatter.ZhaoProfile.integral", false]], "integral() (gammapy.irf.background2d method)": [[149, "gammapy.irf.Background2D.integral", false]], "integral() (gammapy.irf.background3d method)": [[150, "gammapy.irf.Background3D.integral", false]], "integral() (gammapy.irf.backgroundirf method)": [[151, "gammapy.irf.BackgroundIRF.integral", false]], "integral() (gammapy.irf.edispkernel method)": [[152, "gammapy.irf.EDispKernel.integral", false]], "integral() (gammapy.irf.effectiveareatable2d method)": [[155, "gammapy.irf.EffectiveAreaTable2D.integral", false]], "integral() (gammapy.irf.energydependentmultigausspsf method)": [[156, "gammapy.irf.EnergyDependentMultiGaussPSF.integral", false]], "integral() (gammapy.irf.energydispersion2d method)": [[157, "gammapy.irf.EnergyDispersion2D.integral", false]], "integral() (gammapy.irf.irf method)": [[159, "gammapy.irf.IRF.integral", false]], "integral() (gammapy.irf.parametricpsf method)": [[166, "gammapy.irf.ParametricPSF.integral", false]], "integral() (gammapy.irf.psf3d method)": [[162, "gammapy.irf.PSF3D.integral", false]], "integral() (gammapy.irf.psfking method)": [[164, "gammapy.irf.PSFKing.integral", false]], "integral() (gammapy.irf.radmax2d method)": [[167, "gammapy.irf.RadMax2D.integral", false]], "integral() (gammapy.maps.hpxmap method)": [[195, "gammapy.maps.HpxMap.integral", false]], "integral() (gammapy.maps.hpxndmap method)": [[196, "gammapy.maps.HpxNDMap.integral", false]], "integral() (gammapy.maps.map method)": [[198, "gammapy.maps.Map.integral", false]], "integral() (gammapy.maps.regionndmap method)": [[204, "gammapy.maps.RegionNDMap.integral", false]], "integral() (gammapy.maps.wcsmap method)": [[207, "gammapy.maps.WcsMap.integral", false]], "integral() (gammapy.maps.wcsndmap method)": [[208, "gammapy.maps.WcsNDMap.integral", false]], "integral() (gammapy.modeling.models.brokenpowerlawspectralmodel method)": [[220, "gammapy.modeling.models.BrokenPowerLawSpectralModel.integral", false]], "integral() (gammapy.modeling.models.compoundspectralmodel method)": [[221, "gammapy.modeling.models.CompoundSpectralModel.integral", false]], "integral() (gammapy.modeling.models.constantspectralmodel method)": [[224, "gammapy.modeling.models.ConstantSpectralModel.integral", false]], "integral() (gammapy.modeling.models.constanttemporalmodel method)": [[225, "gammapy.modeling.models.ConstantTemporalModel.integral", false]], "integral() (gammapy.modeling.models.eblabsorptionnormspectralmodel method)": [[228, "gammapy.modeling.models.EBLAbsorptionNormSpectralModel.integral", false]], "integral() (gammapy.modeling.models.expcutoffpowerlaw3fglspectralmodel method)": [[230, "gammapy.modeling.models.ExpCutoffPowerLaw3FGLSpectralModel.integral", false]], "integral() (gammapy.modeling.models.expcutoffpowerlawnormspectralmodel method)": [[231, "gammapy.modeling.models.ExpCutoffPowerLawNormSpectralModel.integral", false]], "integral() (gammapy.modeling.models.expcutoffpowerlawspectralmodel method)": [[232, "gammapy.modeling.models.ExpCutoffPowerLawSpectralModel.integral", false]], "integral() (gammapy.modeling.models.expdecaytemporalmodel method)": [[233, "gammapy.modeling.models.ExpDecayTemporalModel.integral", false]], "integral() (gammapy.modeling.models.gaussianspectralmodel method)": [[237, "gammapy.modeling.models.GaussianSpectralModel.integral", false]], "integral() (gammapy.modeling.models.gaussiantemporalmodel method)": [[238, "gammapy.modeling.models.GaussianTemporalModel.integral", false]], "integral() (gammapy.modeling.models.generalizedgaussiantemporalmodel method)": [[240, "gammapy.modeling.models.GeneralizedGaussianTemporalModel.integral", false]], "integral() (gammapy.modeling.models.lightcurvetemplatetemporalmodel method)": [[241, "gammapy.modeling.models.LightCurveTemplateTemporalModel.integral", false]], "integral() (gammapy.modeling.models.lineartemporalmodel method)": [[242, "gammapy.modeling.models.LinearTemporalModel.integral", false]], "integral() (gammapy.modeling.models.logparabolanormspectralmodel method)": [[243, "gammapy.modeling.models.LogParabolaNormSpectralModel.integral", false]], "integral() (gammapy.modeling.models.logparabolaspectralmodel method)": [[244, "gammapy.modeling.models.LogParabolaSpectralModel.integral", false]], "integral() (gammapy.modeling.models.meyercrabspectralmodel method)": [[247, "gammapy.modeling.models.MeyerCrabSpectralModel.integral", false]], "integral() (gammapy.modeling.models.naimaspectralmodel method)": [[251, "gammapy.modeling.models.NaimaSpectralModel.integral", false]], "integral() (gammapy.modeling.models.piecewisenormspectralmodel method)": [[253, "gammapy.modeling.models.PiecewiseNormSpectralModel.integral", false]], "integral() (gammapy.modeling.models.powerlaw2spectralmodel method)": [[255, "gammapy.modeling.models.PowerLaw2SpectralModel.integral", false]], "integral() (gammapy.modeling.models.powerlawnormspectralmodel method)": [[256, "gammapy.modeling.models.PowerLawNormSpectralModel.integral", false]], "integral() (gammapy.modeling.models.powerlawspectralmodel method)": [[257, "gammapy.modeling.models.PowerLawSpectralModel.integral", false]], "integral() (gammapy.modeling.models.powerlawtemporalmodel method)": [[258, "gammapy.modeling.models.PowerLawTemporalModel.integral", false]], "integral() (gammapy.modeling.models.scalespectralmodel method)": [[262, "gammapy.modeling.models.ScaleSpectralModel.integral", false]], "integral() (gammapy.modeling.models.sinetemporalmodel method)": [[265, "gammapy.modeling.models.SineTemporalModel.integral", false]], "integral() (gammapy.modeling.models.smoothbrokenpowerlawspectralmodel method)": [[267, "gammapy.modeling.models.SmoothBrokenPowerLawSpectralModel.integral", false]], "integral() (gammapy.modeling.models.spectralmodel method)": [[269, "gammapy.modeling.models.SpectralModel.integral", false]], "integral() (gammapy.modeling.models.superexpcutoffpowerlaw3fglspectralmodel method)": [[270, "gammapy.modeling.models.SuperExpCutoffPowerLaw3FGLSpectralModel.integral", false]], "integral() (gammapy.modeling.models.superexpcutoffpowerlaw4fgldr3spectralmodel method)": [[271, "gammapy.modeling.models.SuperExpCutoffPowerLaw4FGLDR3SpectralModel.integral", false]], "integral() (gammapy.modeling.models.superexpcutoffpowerlaw4fglspectralmodel method)": [[272, "gammapy.modeling.models.SuperExpCutoffPowerLaw4FGLSpectralModel.integral", false]], "integral() (gammapy.modeling.models.templatendspectralmodel method)": [[275, "gammapy.modeling.models.TemplateNDSpectralModel.integral", false]], "integral() (gammapy.modeling.models.templatephasecurvetemporalmodel method)": [[277, "gammapy.modeling.models.TemplatePhaseCurveTemporalModel.integral", false]], "integral() (gammapy.modeling.models.templatespectralmodel method)": [[279, "gammapy.modeling.models.TemplateSpectralModel.integral", false]], "integral() (gammapy.modeling.models.temporalmodel method)": [[280, "gammapy.modeling.models.TemporalModel.integral", false]], "integral_error() (gammapy.astro.darkmatter.darkmatterannihilationspectralmodel method)": [[19, "gammapy.astro.darkmatter.DarkMatterAnnihilationSpectralModel.integral_error", false]], "integral_error() (gammapy.astro.darkmatter.darkmatterdecayspectralmodel method)": [[20, "gammapy.astro.darkmatter.DarkMatterDecaySpectralModel.integral_error", false]], "integral_error() (gammapy.astro.darkmatter.primaryflux method)": [[26, "gammapy.astro.darkmatter.PrimaryFlux.integral_error", false]], "integral_error() (gammapy.modeling.models.brokenpowerlawspectralmodel method)": [[220, "gammapy.modeling.models.BrokenPowerLawSpectralModel.integral_error", false]], "integral_error() (gammapy.modeling.models.compoundspectralmodel method)": [[221, "gammapy.modeling.models.CompoundSpectralModel.integral_error", false]], "integral_error() (gammapy.modeling.models.constantspectralmodel method)": [[224, "gammapy.modeling.models.ConstantSpectralModel.integral_error", false]], "integral_error() (gammapy.modeling.models.eblabsorptionnormspectralmodel method)": [[228, "gammapy.modeling.models.EBLAbsorptionNormSpectralModel.integral_error", false]], "integral_error() (gammapy.modeling.models.expcutoffpowerlaw3fglspectralmodel method)": [[230, "gammapy.modeling.models.ExpCutoffPowerLaw3FGLSpectralModel.integral_error", false]], "integral_error() (gammapy.modeling.models.expcutoffpowerlawnormspectralmodel method)": [[231, "gammapy.modeling.models.ExpCutoffPowerLawNormSpectralModel.integral_error", false]], "integral_error() (gammapy.modeling.models.expcutoffpowerlawspectralmodel method)": [[232, "gammapy.modeling.models.ExpCutoffPowerLawSpectralModel.integral_error", false]], "integral_error() (gammapy.modeling.models.gaussianspectralmodel method)": [[237, "gammapy.modeling.models.GaussianSpectralModel.integral_error", false]], "integral_error() (gammapy.modeling.models.logparabolanormspectralmodel method)": [[243, "gammapy.modeling.models.LogParabolaNormSpectralModel.integral_error", false]], "integral_error() (gammapy.modeling.models.logparabolaspectralmodel method)": [[244, "gammapy.modeling.models.LogParabolaSpectralModel.integral_error", false]], "integral_error() (gammapy.modeling.models.meyercrabspectralmodel method)": [[247, "gammapy.modeling.models.MeyerCrabSpectralModel.integral_error", false]], "integral_error() (gammapy.modeling.models.naimaspectralmodel method)": [[251, "gammapy.modeling.models.NaimaSpectralModel.integral_error", false]], "integral_error() (gammapy.modeling.models.piecewisenormspectralmodel method)": [[253, "gammapy.modeling.models.PiecewiseNormSpectralModel.integral_error", false]], "integral_error() (gammapy.modeling.models.powerlaw2spectralmodel method)": [[255, "gammapy.modeling.models.PowerLaw2SpectralModel.integral_error", false]], "integral_error() (gammapy.modeling.models.powerlawnormspectralmodel method)": [[256, "gammapy.modeling.models.PowerLawNormSpectralModel.integral_error", false]], "integral_error() (gammapy.modeling.models.powerlawspectralmodel method)": [[257, "gammapy.modeling.models.PowerLawSpectralModel.integral_error", false]], "integral_error() (gammapy.modeling.models.scalespectralmodel method)": [[262, "gammapy.modeling.models.ScaleSpectralModel.integral_error", false]], "integral_error() (gammapy.modeling.models.smoothbrokenpowerlawspectralmodel method)": [[267, "gammapy.modeling.models.SmoothBrokenPowerLawSpectralModel.integral_error", false]], "integral_error() (gammapy.modeling.models.spectralmodel method)": [[269, "gammapy.modeling.models.SpectralModel.integral_error", false]], "integral_error() (gammapy.modeling.models.superexpcutoffpowerlaw3fglspectralmodel method)": [[270, "gammapy.modeling.models.SuperExpCutoffPowerLaw3FGLSpectralModel.integral_error", false]], "integral_error() (gammapy.modeling.models.superexpcutoffpowerlaw4fgldr3spectralmodel method)": [[271, "gammapy.modeling.models.SuperExpCutoffPowerLaw4FGLDR3SpectralModel.integral_error", false]], "integral_error() (gammapy.modeling.models.superexpcutoffpowerlaw4fglspectralmodel method)": [[272, "gammapy.modeling.models.SuperExpCutoffPowerLaw4FGLSpectralModel.integral_error", false]], "integral_error() (gammapy.modeling.models.templatendspectralmodel method)": [[275, "gammapy.modeling.models.TemplateNDSpectralModel.integral_error", false]], "integral_error() (gammapy.modeling.models.templatespectralmodel method)": [[279, "gammapy.modeling.models.TemplateSpectralModel.integral_error", false]], "integrate_geom() (gammapy.modeling.models.constantfluxspatialmodel static method)": [[222, "gammapy.modeling.models.ConstantFluxSpatialModel.integrate_geom", false]], "integrate_geom() (gammapy.modeling.models.constantspatialmodel method)": [[223, "gammapy.modeling.models.ConstantSpatialModel.integrate_geom", false]], "integrate_geom() (gammapy.modeling.models.diskspatialmodel method)": [[227, "gammapy.modeling.models.DiskSpatialModel.integrate_geom", false]], "integrate_geom() (gammapy.modeling.models.gaussianspatialmodel method)": [[236, "gammapy.modeling.models.GaussianSpatialModel.integrate_geom", false]], "integrate_geom() (gammapy.modeling.models.generalizedgaussianspatialmodel method)": [[239, "gammapy.modeling.models.GeneralizedGaussianSpatialModel.integrate_geom", false]], "integrate_geom() (gammapy.modeling.models.piecewisenormspatialmodel method)": [[252, "gammapy.modeling.models.PiecewiseNormSpatialModel.integrate_geom", false]], "integrate_geom() (gammapy.modeling.models.pointspatialmodel method)": [[254, "gammapy.modeling.models.PointSpatialModel.integrate_geom", false]], "integrate_geom() (gammapy.modeling.models.shell2spatialmodel method)": [[263, "gammapy.modeling.models.Shell2SpatialModel.integrate_geom", false]], "integrate_geom() (gammapy.modeling.models.shellspatialmodel method)": [[264, "gammapy.modeling.models.ShellSpatialModel.integrate_geom", false]], "integrate_geom() (gammapy.modeling.models.skymodel method)": [[266, "gammapy.modeling.models.SkyModel.integrate_geom", false]], "integrate_geom() (gammapy.modeling.models.spatialmodel method)": [[268, "gammapy.modeling.models.SpatialModel.integrate_geom", false]], "integrate_geom() (gammapy.modeling.models.templatendspatialmodel method)": [[274, "gammapy.modeling.models.TemplateNDSpatialModel.integrate_geom", false]], "integrate_geom() (gammapy.modeling.models.templatespatialmodel method)": [[278, "gammapy.modeling.models.TemplateSpatialModel.integrate_geom", false]], "integrate_log_log() (gammapy.irf.background2d method)": [[149, "gammapy.irf.Background2D.integrate_log_log", false]], "integrate_log_log() (gammapy.irf.background3d method)": [[150, "gammapy.irf.Background3D.integrate_log_log", false]], "integrate_log_log() (gammapy.irf.backgroundirf method)": [[151, "gammapy.irf.BackgroundIRF.integrate_log_log", false]], "integrate_log_log() (gammapy.irf.edispkernel method)": [[152, "gammapy.irf.EDispKernel.integrate_log_log", false]], "integrate_log_log() (gammapy.irf.effectiveareatable2d method)": [[155, "gammapy.irf.EffectiveAreaTable2D.integrate_log_log", false]], "integrate_log_log() (gammapy.irf.energydependentmultigausspsf method)": [[156, "gammapy.irf.EnergyDependentMultiGaussPSF.integrate_log_log", false]], "integrate_log_log() (gammapy.irf.energydispersion2d method)": [[157, "gammapy.irf.EnergyDispersion2D.integrate_log_log", false]], "integrate_log_log() (gammapy.irf.irf method)": [[159, "gammapy.irf.IRF.integrate_log_log", false]], "integrate_log_log() (gammapy.irf.parametricpsf method)": [[166, "gammapy.irf.ParametricPSF.integrate_log_log", false]], "integrate_log_log() (gammapy.irf.psf3d method)": [[162, "gammapy.irf.PSF3D.integrate_log_log", false]], "integrate_log_log() (gammapy.irf.psfking method)": [[164, "gammapy.irf.PSFKing.integrate_log_log", false]], "integrate_log_log() (gammapy.irf.radmax2d method)": [[167, "gammapy.irf.RadMax2D.integrate_log_log", false]], "integrate_spectrum() (in module gammapy.modeling.models)": [[285, "gammapy.modeling.models.integrate_spectrum", false]], "integrate_spectrum_separation() (gammapy.astro.darkmatter.burkertprofile method)": [[17, "gammapy.astro.darkmatter.BurkertProfile.integrate_spectrum_separation", false]], "integrate_spectrum_separation() (gammapy.astro.darkmatter.dmprofile method)": [[18, "gammapy.astro.darkmatter.DMProfile.integrate_spectrum_separation", false]], "integrate_spectrum_separation() (gammapy.astro.darkmatter.einastoprofile method)": [[21, "gammapy.astro.darkmatter.EinastoProfile.integrate_spectrum_separation", false]], "integrate_spectrum_separation() (gammapy.astro.darkmatter.isothermalprofile method)": [[22, "gammapy.astro.darkmatter.IsothermalProfile.integrate_spectrum_separation", false]], "integrate_spectrum_separation() (gammapy.astro.darkmatter.mooreprofile method)": [[24, "gammapy.astro.darkmatter.MooreProfile.integrate_spectrum_separation", false]], "integrate_spectrum_separation() (gammapy.astro.darkmatter.nfwprofile method)": [[25, "gammapy.astro.darkmatter.NFWProfile.integrate_spectrum_separation", false]], "integrate_spectrum_separation() (gammapy.astro.darkmatter.zhaoprofile method)": [[27, "gammapy.astro.darkmatter.ZhaoProfile.integrate_spectrum_separation", false]], "interp (gammapy.maps.mapaxis attribute)": [[200, "gammapy.maps.MapAxis.interp", false]], "interp (gammapy.maps.timemapaxis attribute)": [[205, "gammapy.maps.TimeMapAxis.interp", false]], "interp_by_coord() (gammapy.maps.hpxmap method)": [[195, "gammapy.maps.HpxMap.interp_by_coord", false]], "interp_by_coord() (gammapy.maps.hpxndmap method)": [[196, "gammapy.maps.HpxNDMap.interp_by_coord", false]], "interp_by_coord() (gammapy.maps.map method)": [[198, "gammapy.maps.Map.interp_by_coord", false]], "interp_by_coord() (gammapy.maps.regionndmap method)": [[204, "gammapy.maps.RegionNDMap.interp_by_coord", false]], "interp_by_coord() (gammapy.maps.wcsmap method)": [[207, "gammapy.maps.WcsMap.interp_by_coord", false]], "interp_by_coord() (gammapy.maps.wcsndmap method)": [[208, "gammapy.maps.WcsNDMap.interp_by_coord", false]], "interp_by_pix() (gammapy.maps.hpxmap method)": [[195, "gammapy.maps.HpxMap.interp_by_pix", false]], "interp_by_pix() (gammapy.maps.hpxndmap method)": [[196, "gammapy.maps.HpxNDMap.interp_by_pix", false]], "interp_by_pix() (gammapy.maps.map method)": [[198, "gammapy.maps.Map.interp_by_pix", false]], "interp_by_pix() (gammapy.maps.regionndmap method)": [[204, "gammapy.maps.RegionNDMap.interp_by_pix", false]], "interp_by_pix() (gammapy.maps.wcsmap method)": [[207, "gammapy.maps.WcsMap.interp_by_pix", false]], "interp_by_pix() (gammapy.maps.wcsndmap method)": [[208, "gammapy.maps.WcsNDMap.interp_by_pix", false]], "interp_missing_data() (gammapy.irf.background2d method)": [[149, "gammapy.irf.Background2D.interp_missing_data", false]], "interp_missing_data() (gammapy.irf.background3d method)": [[150, "gammapy.irf.Background3D.interp_missing_data", false]], "interp_missing_data() (gammapy.irf.backgroundirf method)": [[151, "gammapy.irf.BackgroundIRF.interp_missing_data", false]], "interp_missing_data() (gammapy.irf.edispkernel method)": [[152, "gammapy.irf.EDispKernel.interp_missing_data", false]], "interp_missing_data() (gammapy.irf.effectiveareatable2d method)": [[155, "gammapy.irf.EffectiveAreaTable2D.interp_missing_data", false]], "interp_missing_data() (gammapy.irf.energydependentmultigausspsf method)": [[156, "gammapy.irf.EnergyDependentMultiGaussPSF.interp_missing_data", false]], "interp_missing_data() (gammapy.irf.energydispersion2d method)": [[157, "gammapy.irf.EnergyDispersion2D.interp_missing_data", false]], "interp_missing_data() (gammapy.irf.irf method)": [[159, "gammapy.irf.IRF.interp_missing_data", false]], "interp_missing_data() (gammapy.irf.parametricpsf method)": [[166, "gammapy.irf.ParametricPSF.interp_missing_data", false]], "interp_missing_data() (gammapy.irf.psf3d method)": [[162, "gammapy.irf.PSF3D.interp_missing_data", false]], "interp_missing_data() (gammapy.irf.psfking method)": [[164, "gammapy.irf.PSFKing.interp_missing_data", false]], "interp_missing_data() (gammapy.irf.radmax2d method)": [[167, "gammapy.irf.RadMax2D.interp_missing_data", false]], "interp_to_geom() (gammapy.maps.hpxmap method)": [[195, "gammapy.maps.HpxMap.interp_to_geom", false]], "interp_to_geom() (gammapy.maps.hpxndmap method)": [[196, "gammapy.maps.HpxNDMap.interp_to_geom", false]], "interp_to_geom() (gammapy.maps.map method)": [[198, "gammapy.maps.Map.interp_to_geom", false]], "interp_to_geom() (gammapy.maps.regionndmap method)": [[204, "gammapy.maps.RegionNDMap.interp_to_geom", false]], "interp_to_geom() (gammapy.maps.wcsmap method)": [[207, "gammapy.maps.WcsMap.interp_to_geom", false]], "interp_to_geom() (gammapy.maps.wcsndmap method)": [[208, "gammapy.maps.WcsNDMap.interp_to_geom", false]], "interp_weights() (gammapy.maps.hpxgeom method)": [[194, "gammapy.maps.HpxGeom.interp_weights", false]], "interpolate_profile() (in module gammapy.utils.interpolation)": [[323, "gammapy.utils.interpolation.interpolate_profile", false]], "interpolation_scale() (in module gammapy.utils.interpolation)": [[324, "gammapy.utils.interpolation.interpolation_scale", false]], "inverse (gammapy.astro.population.casebattacharya1998 attribute)": [[28, "gammapy.astro.population.CaseBattacharya1998.inverse", false]], "inverse (gammapy.astro.population.exponential attribute)": [[29, "gammapy.astro.population.Exponential.inverse", false]], "inverse (gammapy.astro.population.faucherkaspi2006 attribute)": [[30, "gammapy.astro.population.FaucherKaspi2006.inverse", false]], "inverse (gammapy.astro.population.faucherkaspi2006velocitybimodal attribute)": [[31, "gammapy.astro.population.FaucherKaspi2006VelocityBimodal.inverse", false]], "inverse (gammapy.astro.population.faucherkaspi2006velocitymaxwellian attribute)": [[32, "gammapy.astro.population.FaucherKaspi2006VelocityMaxwellian.inverse", false]], "inverse (gammapy.astro.population.lorimer2006 attribute)": [[35, "gammapy.astro.population.Lorimer2006.inverse", false]], "inverse (gammapy.astro.population.paczynski1990 attribute)": [[36, "gammapy.astro.population.Paczynski1990.inverse", false]], "inverse (gammapy.astro.population.paczynski1990velocity attribute)": [[37, "gammapy.astro.population.Paczynski1990Velocity.inverse", false]], "inverse (gammapy.astro.population.yusifovkucuk2004 attribute)": [[39, "gammapy.astro.population.YusifovKucuk2004.inverse", false]], "inverse (gammapy.astro.population.yusifovkucuk2004b attribute)": [[40, "gammapy.astro.population.YusifovKucuk2004B.inverse", false]], "inverse() (gammapy.astro.darkmatter.darkmatterannihilationspectralmodel method)": [[19, "gammapy.astro.darkmatter.DarkMatterAnnihilationSpectralModel.inverse", false]], "inverse() (gammapy.astro.darkmatter.darkmatterdecayspectralmodel method)": [[20, "gammapy.astro.darkmatter.DarkMatterDecaySpectralModel.inverse", false]], "inverse() (gammapy.astro.darkmatter.primaryflux method)": [[26, "gammapy.astro.darkmatter.PrimaryFlux.inverse", false]], "inverse() (gammapy.modeling.models.brokenpowerlawspectralmodel method)": [[220, "gammapy.modeling.models.BrokenPowerLawSpectralModel.inverse", false]], "inverse() (gammapy.modeling.models.compoundspectralmodel method)": [[221, "gammapy.modeling.models.CompoundSpectralModel.inverse", false]], "inverse() (gammapy.modeling.models.constantspectralmodel method)": [[224, "gammapy.modeling.models.ConstantSpectralModel.inverse", false]], "inverse() (gammapy.modeling.models.eblabsorptionnormspectralmodel method)": [[228, "gammapy.modeling.models.EBLAbsorptionNormSpectralModel.inverse", false]], "inverse() (gammapy.modeling.models.expcutoffpowerlaw3fglspectralmodel method)": [[230, "gammapy.modeling.models.ExpCutoffPowerLaw3FGLSpectralModel.inverse", false]], "inverse() (gammapy.modeling.models.expcutoffpowerlawnormspectralmodel method)": [[231, "gammapy.modeling.models.ExpCutoffPowerLawNormSpectralModel.inverse", false]], "inverse() (gammapy.modeling.models.expcutoffpowerlawspectralmodel method)": [[232, "gammapy.modeling.models.ExpCutoffPowerLawSpectralModel.inverse", false]], "inverse() (gammapy.modeling.models.gaussianspectralmodel method)": [[237, "gammapy.modeling.models.GaussianSpectralModel.inverse", false]], "inverse() (gammapy.modeling.models.logparabolanormspectralmodel method)": [[243, "gammapy.modeling.models.LogParabolaNormSpectralModel.inverse", false]], "inverse() (gammapy.modeling.models.logparabolaspectralmodel method)": [[244, "gammapy.modeling.models.LogParabolaSpectralModel.inverse", false]], "inverse() (gammapy.modeling.models.meyercrabspectralmodel method)": [[247, "gammapy.modeling.models.MeyerCrabSpectralModel.inverse", false]], "inverse() (gammapy.modeling.models.naimaspectralmodel method)": [[251, "gammapy.modeling.models.NaimaSpectralModel.inverse", false]], "inverse() (gammapy.modeling.models.piecewisenormspectralmodel method)": [[253, "gammapy.modeling.models.PiecewiseNormSpectralModel.inverse", false]], "inverse() (gammapy.modeling.models.powerlaw2spectralmodel method)": [[255, "gammapy.modeling.models.PowerLaw2SpectralModel.inverse", false]], "inverse() (gammapy.modeling.models.powerlawnormspectralmodel method)": [[256, "gammapy.modeling.models.PowerLawNormSpectralModel.inverse", false]], "inverse() (gammapy.modeling.models.powerlawspectralmodel method)": [[257, "gammapy.modeling.models.PowerLawSpectralModel.inverse", false]], "inverse() (gammapy.modeling.models.scalespectralmodel method)": [[262, "gammapy.modeling.models.ScaleSpectralModel.inverse", false]], "inverse() (gammapy.modeling.models.smoothbrokenpowerlawspectralmodel method)": [[267, "gammapy.modeling.models.SmoothBrokenPowerLawSpectralModel.inverse", false]], "inverse() (gammapy.modeling.models.spectralmodel method)": [[269, "gammapy.modeling.models.SpectralModel.inverse", false]], "inverse() (gammapy.modeling.models.superexpcutoffpowerlaw3fglspectralmodel method)": [[270, "gammapy.modeling.models.SuperExpCutoffPowerLaw3FGLSpectralModel.inverse", false]], "inverse() (gammapy.modeling.models.superexpcutoffpowerlaw4fgldr3spectralmodel method)": [[271, "gammapy.modeling.models.SuperExpCutoffPowerLaw4FGLDR3SpectralModel.inverse", false]], "inverse() (gammapy.modeling.models.superexpcutoffpowerlaw4fglspectralmodel method)": [[272, "gammapy.modeling.models.SuperExpCutoffPowerLaw4FGLSpectralModel.inverse", false]], "inverse() (gammapy.modeling.models.templatendspectralmodel method)": [[275, "gammapy.modeling.models.TemplateNDSpectralModel.inverse", false]], "inverse() (gammapy.modeling.models.templatespectralmodel method)": [[279, "gammapy.modeling.models.TemplateSpectralModel.inverse", false]], "inverse_all() (gammapy.astro.darkmatter.darkmatterannihilationspectralmodel method)": [[19, "gammapy.astro.darkmatter.DarkMatterAnnihilationSpectralModel.inverse_all", false]], "inverse_all() (gammapy.astro.darkmatter.darkmatterdecayspectralmodel method)": [[20, "gammapy.astro.darkmatter.DarkMatterDecaySpectralModel.inverse_all", false]], "inverse_all() (gammapy.astro.darkmatter.primaryflux method)": [[26, "gammapy.astro.darkmatter.PrimaryFlux.inverse_all", false]], "inverse_all() (gammapy.modeling.models.brokenpowerlawspectralmodel method)": [[220, "gammapy.modeling.models.BrokenPowerLawSpectralModel.inverse_all", false]], "inverse_all() (gammapy.modeling.models.compoundspectralmodel method)": [[221, "gammapy.modeling.models.CompoundSpectralModel.inverse_all", false]], "inverse_all() (gammapy.modeling.models.constantspectralmodel method)": [[224, "gammapy.modeling.models.ConstantSpectralModel.inverse_all", false]], "inverse_all() (gammapy.modeling.models.eblabsorptionnormspectralmodel method)": [[228, "gammapy.modeling.models.EBLAbsorptionNormSpectralModel.inverse_all", false]], "inverse_all() (gammapy.modeling.models.expcutoffpowerlaw3fglspectralmodel method)": [[230, "gammapy.modeling.models.ExpCutoffPowerLaw3FGLSpectralModel.inverse_all", false]], "inverse_all() (gammapy.modeling.models.expcutoffpowerlawnormspectralmodel method)": [[231, "gammapy.modeling.models.ExpCutoffPowerLawNormSpectralModel.inverse_all", false]], "inverse_all() (gammapy.modeling.models.expcutoffpowerlawspectralmodel method)": [[232, "gammapy.modeling.models.ExpCutoffPowerLawSpectralModel.inverse_all", false]], "inverse_all() (gammapy.modeling.models.gaussianspectralmodel method)": [[237, "gammapy.modeling.models.GaussianSpectralModel.inverse_all", false]], "inverse_all() (gammapy.modeling.models.logparabolanormspectralmodel method)": [[243, "gammapy.modeling.models.LogParabolaNormSpectralModel.inverse_all", false]], "inverse_all() (gammapy.modeling.models.logparabolaspectralmodel method)": [[244, "gammapy.modeling.models.LogParabolaSpectralModel.inverse_all", false]], "inverse_all() (gammapy.modeling.models.meyercrabspectralmodel method)": [[247, "gammapy.modeling.models.MeyerCrabSpectralModel.inverse_all", false]], "inverse_all() (gammapy.modeling.models.naimaspectralmodel method)": [[251, "gammapy.modeling.models.NaimaSpectralModel.inverse_all", false]], "inverse_all() (gammapy.modeling.models.piecewisenormspectralmodel method)": [[253, "gammapy.modeling.models.PiecewiseNormSpectralModel.inverse_all", false]], "inverse_all() (gammapy.modeling.models.powerlaw2spectralmodel method)": [[255, "gammapy.modeling.models.PowerLaw2SpectralModel.inverse_all", false]], "inverse_all() (gammapy.modeling.models.powerlawnormspectralmodel method)": [[256, "gammapy.modeling.models.PowerLawNormSpectralModel.inverse_all", false]], "inverse_all() (gammapy.modeling.models.powerlawspectralmodel method)": [[257, "gammapy.modeling.models.PowerLawSpectralModel.inverse_all", false]], "inverse_all() (gammapy.modeling.models.scalespectralmodel method)": [[262, "gammapy.modeling.models.ScaleSpectralModel.inverse_all", false]], "inverse_all() (gammapy.modeling.models.smoothbrokenpowerlawspectralmodel method)": [[267, "gammapy.modeling.models.SmoothBrokenPowerLawSpectralModel.inverse_all", false]], "inverse_all() (gammapy.modeling.models.spectralmodel method)": [[269, "gammapy.modeling.models.SpectralModel.inverse_all", false]], "inverse_all() (gammapy.modeling.models.superexpcutoffpowerlaw3fglspectralmodel method)": [[270, "gammapy.modeling.models.SuperExpCutoffPowerLaw3FGLSpectralModel.inverse_all", false]], "inverse_all() (gammapy.modeling.models.superexpcutoffpowerlaw4fgldr3spectralmodel method)": [[271, "gammapy.modeling.models.SuperExpCutoffPowerLaw4FGLDR3SpectralModel.inverse_all", false]], "inverse_all() (gammapy.modeling.models.superexpcutoffpowerlaw4fglspectralmodel method)": [[272, "gammapy.modeling.models.SuperExpCutoffPowerLaw4FGLSpectralModel.inverse_all", false]], "inverse_all() (gammapy.modeling.models.templatendspectralmodel method)": [[275, "gammapy.modeling.models.TemplateNDSpectralModel.inverse_all", false]], "inverse_all() (gammapy.modeling.models.templatespectralmodel method)": [[279, "gammapy.modeling.models.TemplateSpectralModel.inverse_all", false]], "inversecdfsampler (class in gammapy.utils.random)": [[332, "gammapy.utils.random.InverseCDFSampler", false]], "ipix (gammapy.maps.hpxgeom attribute)": [[194, "gammapy.maps.HpxGeom.ipix", false]], "irf": [[581, "term-IRF", true]], "irf (class in gammapy.irf)": [[159, "gammapy.irf.IRF", false]], "irf_registry (in module gammapy.irf)": [[161, "gammapy.irf.IRF_REGISTRY", false]], "irfmap (class in gammapy.irf)": [[160, "gammapy.irf.IRFMap", false]], "is_aligned() (gammapy.maps.hpxgeom method)": [[194, "gammapy.maps.HpxGeom.is_aligned", false]], "is_aligned() (gammapy.maps.mapaxis method)": [[200, "gammapy.maps.MapAxis.is_aligned", false]], "is_aligned() (gammapy.maps.timemapaxis method)": [[205, "gammapy.maps.TimeMapAxis.is_aligned", false]], "is_aligned() (gammapy.maps.wcsgeom method)": [[206, "gammapy.maps.WcsGeom.is_aligned", false]], "is_all_point_sky_regions (gammapy.maps.regiongeom attribute)": [[203, "gammapy.maps.RegionGeom.is_all_point_sky_regions", false]], "is_all_same_energy_shape (gammapy.datasets.datasets attribute)": [[100, "gammapy.datasets.Datasets.is_all_same_energy_shape", false]], "is_all_same_shape (gammapy.datasets.datasets attribute)": [[100, "gammapy.datasets.Datasets.is_all_same_shape", false]], "is_all_same_type (gammapy.datasets.datasets attribute)": [[100, "gammapy.datasets.Datasets.is_all_same_type", false]], "is_allclose() (gammapy.irf.background2d method)": [[149, "gammapy.irf.Background2D.is_allclose", false]], "is_allclose() (gammapy.irf.background3d method)": [[150, "gammapy.irf.Background3D.is_allclose", false]], "is_allclose() (gammapy.irf.backgroundirf method)": [[151, "gammapy.irf.BackgroundIRF.is_allclose", false]], "is_allclose() (gammapy.irf.edispkernel method)": [[152, "gammapy.irf.EDispKernel.is_allclose", false]], "is_allclose() (gammapy.irf.effectiveareatable2d method)": [[155, "gammapy.irf.EffectiveAreaTable2D.is_allclose", false]], "is_allclose() (gammapy.irf.energydependentmultigausspsf method)": [[156, "gammapy.irf.EnergyDependentMultiGaussPSF.is_allclose", false]], "is_allclose() (gammapy.irf.energydispersion2d method)": [[157, "gammapy.irf.EnergyDispersion2D.is_allclose", false]], "is_allclose() (gammapy.irf.irf method)": [[159, "gammapy.irf.IRF.is_allclose", false]], "is_allclose() (gammapy.irf.parametricpsf method)": [[166, "gammapy.irf.ParametricPSF.is_allclose", false]], "is_allclose() (gammapy.irf.psf3d method)": [[162, "gammapy.irf.PSF3D.is_allclose", false]], "is_allclose() (gammapy.irf.psfking method)": [[164, "gammapy.irf.PSFKing.is_allclose", false]], "is_allclose() (gammapy.irf.radmax2d method)": [[167, "gammapy.irf.RadMax2D.is_allclose", false]], "is_allclose() (gammapy.maps.hpxgeom method)": [[194, "gammapy.maps.HpxGeom.is_allclose", false]], "is_allclose() (gammapy.maps.hpxmap method)": [[195, "gammapy.maps.HpxMap.is_allclose", false]], "is_allclose() (gammapy.maps.hpxndmap method)": [[196, "gammapy.maps.HpxNDMap.is_allclose", false]], "is_allclose() (gammapy.maps.labelmapaxis method)": [[197, "gammapy.maps.LabelMapAxis.is_allclose", false]], "is_allclose() (gammapy.maps.map method)": [[198, "gammapy.maps.Map.is_allclose", false]], "is_allclose() (gammapy.maps.mapaxes method)": [[199, "gammapy.maps.MapAxes.is_allclose", false]], "is_allclose() (gammapy.maps.mapaxis method)": [[200, "gammapy.maps.MapAxis.is_allclose", false]], "is_allclose() (gammapy.maps.regiongeom method)": [[203, "gammapy.maps.RegionGeom.is_allclose", false]], "is_allclose() (gammapy.maps.regionndmap method)": [[204, "gammapy.maps.RegionNDMap.is_allclose", false]], "is_allclose() (gammapy.maps.timemapaxis method)": [[205, "gammapy.maps.TimeMapAxis.is_allclose", false]], "is_allclose() (gammapy.maps.wcsgeom method)": [[206, "gammapy.maps.WcsGeom.is_allclose", false]], "is_allclose() (gammapy.maps.wcsmap method)": [[207, "gammapy.maps.WcsMap.is_allclose", false]], "is_allclose() (gammapy.maps.wcsndmap method)": [[208, "gammapy.maps.WcsNDMap.is_allclose", false]], "is_allsky (gammapy.maps.geom attribute)": [[193, "gammapy.maps.Geom.is_allsky", false]], "is_allsky (gammapy.maps.hpxgeom attribute)": [[194, "gammapy.maps.HpxGeom.is_allsky", false]], "is_allsky (gammapy.maps.regiongeom attribute)": [[203, "gammapy.maps.RegionGeom.is_allsky", false]], "is_allsky (gammapy.maps.wcsgeom attribute)": [[206, "gammapy.maps.WcsGeom.is_allsky", false]], "is_contiguous (gammapy.maps.timemapaxis attribute)": [[205, "gammapy.maps.TimeMapAxis.is_contiguous", false]], "is_convertible_to_flux_sed_type (gammapy.estimators.fluxmaps attribute)": [[125, "gammapy.estimators.FluxMaps.is_convertible_to_flux_sed_type", false]], "is_convertible_to_flux_sed_type (gammapy.estimators.fluxpoints attribute)": [[127, "gammapy.estimators.FluxPoints.is_convertible_to_flux_sed_type", false]], "is_energy_axis (gammapy.maps.mapaxis attribute)": [[200, "gammapy.maps.MapAxis.is_energy_axis", false]], "is_energy_dependent (gammapy.modeling.models.constantfluxspatialmodel attribute)": [[222, "gammapy.modeling.models.ConstantFluxSpatialModel.is_energy_dependent", false]], "is_energy_dependent (gammapy.modeling.models.constantspatialmodel attribute)": [[223, "gammapy.modeling.models.ConstantSpatialModel.is_energy_dependent", false]], "is_energy_dependent (gammapy.modeling.models.constanttemporalmodel attribute)": [[225, "gammapy.modeling.models.ConstantTemporalModel.is_energy_dependent", false]], "is_energy_dependent (gammapy.modeling.models.diskspatialmodel attribute)": [[227, "gammapy.modeling.models.DiskSpatialModel.is_energy_dependent", false]], "is_energy_dependent (gammapy.modeling.models.expdecaytemporalmodel attribute)": [[233, "gammapy.modeling.models.ExpDecayTemporalModel.is_energy_dependent", false]], "is_energy_dependent (gammapy.modeling.models.gaussianspatialmodel attribute)": [[236, "gammapy.modeling.models.GaussianSpatialModel.is_energy_dependent", false]], "is_energy_dependent (gammapy.modeling.models.gaussiantemporalmodel attribute)": [[238, "gammapy.modeling.models.GaussianTemporalModel.is_energy_dependent", false]], "is_energy_dependent (gammapy.modeling.models.generalizedgaussianspatialmodel attribute)": [[239, "gammapy.modeling.models.GeneralizedGaussianSpatialModel.is_energy_dependent", false]], "is_energy_dependent (gammapy.modeling.models.generalizedgaussiantemporalmodel attribute)": [[240, "gammapy.modeling.models.GeneralizedGaussianTemporalModel.is_energy_dependent", false]], "is_energy_dependent (gammapy.modeling.models.lightcurvetemplatetemporalmodel attribute)": [[241, "gammapy.modeling.models.LightCurveTemplateTemporalModel.is_energy_dependent", false]], "is_energy_dependent (gammapy.modeling.models.lineartemporalmodel attribute)": [[242, "gammapy.modeling.models.LinearTemporalModel.is_energy_dependent", false]], "is_energy_dependent (gammapy.modeling.models.piecewisenormspatialmodel attribute)": [[252, "gammapy.modeling.models.PiecewiseNormSpatialModel.is_energy_dependent", false]], "is_energy_dependent (gammapy.modeling.models.pointspatialmodel attribute)": [[254, "gammapy.modeling.models.PointSpatialModel.is_energy_dependent", false]], "is_energy_dependent (gammapy.modeling.models.powerlawtemporalmodel attribute)": [[258, "gammapy.modeling.models.PowerLawTemporalModel.is_energy_dependent", false]], "is_energy_dependent (gammapy.modeling.models.shell2spatialmodel attribute)": [[263, "gammapy.modeling.models.Shell2SpatialModel.is_energy_dependent", false]], "is_energy_dependent (gammapy.modeling.models.shellspatialmodel attribute)": [[264, "gammapy.modeling.models.ShellSpatialModel.is_energy_dependent", false]], "is_energy_dependent (gammapy.modeling.models.sinetemporalmodel attribute)": [[265, "gammapy.modeling.models.SineTemporalModel.is_energy_dependent", false]], "is_energy_dependent (gammapy.modeling.models.spatialmodel attribute)": [[268, "gammapy.modeling.models.SpatialModel.is_energy_dependent", false]], "is_energy_dependent (gammapy.modeling.models.templatendspatialmodel attribute)": [[274, "gammapy.modeling.models.TemplateNDSpatialModel.is_energy_dependent", false]], "is_energy_dependent (gammapy.modeling.models.templatephasecurvetemporalmodel attribute)": [[277, "gammapy.modeling.models.TemplatePhaseCurveTemporalModel.is_energy_dependent", false]], "is_energy_dependent (gammapy.modeling.models.templatespatialmodel attribute)": [[278, "gammapy.modeling.models.TemplateSpatialModel.is_energy_dependent", false]], "is_energy_dependent (gammapy.modeling.models.temporalmodel attribute)": [[280, "gammapy.modeling.models.TemporalModel.is_energy_dependent", false]], "is_fixed_rad_max (gammapy.irf.radmax2d attribute)": [[167, "gammapy.irf.RadMax2D.is_fixed_rad_max", false]], "is_flat (gammapy.maps.geom attribute)": [[193, "gammapy.maps.Geom.is_flat", false]], "is_flat (gammapy.maps.hpxgeom attribute)": [[194, "gammapy.maps.HpxGeom.is_flat", false]], "is_flat (gammapy.maps.mapaxes attribute)": [[199, "gammapy.maps.MapAxes.is_flat", false]], "is_flat (gammapy.maps.regiongeom attribute)": [[203, "gammapy.maps.RegionGeom.is_flat", false]], "is_flat (gammapy.maps.wcsgeom attribute)": [[206, "gammapy.maps.WcsGeom.is_flat", false]], "is_hpx (gammapy.maps.hpxgeom attribute)": [[194, "gammapy.maps.HpxGeom.is_hpx", false]], "is_hpx (gammapy.maps.regiongeom attribute)": [[203, "gammapy.maps.RegionGeom.is_hpx", false]], "is_hpx (gammapy.maps.wcsgeom attribute)": [[206, "gammapy.maps.WcsGeom.is_hpx", false]], "is_image (gammapy.maps.geom attribute)": [[193, "gammapy.maps.Geom.is_image", false]], "is_image (gammapy.maps.hpxgeom attribute)": [[194, "gammapy.maps.HpxGeom.is_image", false]], "is_image (gammapy.maps.regiongeom attribute)": [[203, "gammapy.maps.RegionGeom.is_image", false]], "is_image (gammapy.maps.wcsgeom attribute)": [[206, "gammapy.maps.WcsGeom.is_image", false]], "is_mask (gammapy.maps.hpxmap attribute)": [[195, "gammapy.maps.HpxMap.is_mask", false]], "is_mask (gammapy.maps.hpxndmap attribute)": [[196, "gammapy.maps.HpxNDMap.is_mask", false]], "is_mask (gammapy.maps.map attribute)": [[198, "gammapy.maps.Map.is_mask", false]], "is_mask (gammapy.maps.regionndmap attribute)": [[204, "gammapy.maps.RegionNDMap.is_mask", false]], "is_mask (gammapy.maps.wcsmap attribute)": [[207, "gammapy.maps.WcsMap.is_mask", false]], "is_mask (gammapy.maps.wcsndmap attribute)": [[208, "gammapy.maps.WcsNDMap.is_mask", false]], "is_norm_spectral_model (gammapy.astro.darkmatter.darkmatterannihilationspectralmodel attribute)": [[19, "gammapy.astro.darkmatter.DarkMatterAnnihilationSpectralModel.is_norm_spectral_model", false]], "is_norm_spectral_model (gammapy.astro.darkmatter.darkmatterdecayspectralmodel attribute)": [[20, "gammapy.astro.darkmatter.DarkMatterDecaySpectralModel.is_norm_spectral_model", false]], "is_norm_spectral_model (gammapy.astro.darkmatter.primaryflux attribute)": [[26, "gammapy.astro.darkmatter.PrimaryFlux.is_norm_spectral_model", false]], "is_norm_spectral_model (gammapy.modeling.models.brokenpowerlawspectralmodel attribute)": [[220, "gammapy.modeling.models.BrokenPowerLawSpectralModel.is_norm_spectral_model", false]], "is_norm_spectral_model (gammapy.modeling.models.compoundspectralmodel attribute)": [[221, "gammapy.modeling.models.CompoundSpectralModel.is_norm_spectral_model", false]], "is_norm_spectral_model (gammapy.modeling.models.constantspectralmodel attribute)": [[224, "gammapy.modeling.models.ConstantSpectralModel.is_norm_spectral_model", false]], "is_norm_spectral_model (gammapy.modeling.models.eblabsorptionnormspectralmodel attribute)": [[228, "gammapy.modeling.models.EBLAbsorptionNormSpectralModel.is_norm_spectral_model", false]], "is_norm_spectral_model (gammapy.modeling.models.expcutoffpowerlaw3fglspectralmodel attribute)": [[230, "gammapy.modeling.models.ExpCutoffPowerLaw3FGLSpectralModel.is_norm_spectral_model", false]], "is_norm_spectral_model (gammapy.modeling.models.expcutoffpowerlawnormspectralmodel attribute)": [[231, "gammapy.modeling.models.ExpCutoffPowerLawNormSpectralModel.is_norm_spectral_model", false]], "is_norm_spectral_model (gammapy.modeling.models.expcutoffpowerlawspectralmodel attribute)": [[232, "gammapy.modeling.models.ExpCutoffPowerLawSpectralModel.is_norm_spectral_model", false]], "is_norm_spectral_model (gammapy.modeling.models.gaussianspectralmodel attribute)": [[237, "gammapy.modeling.models.GaussianSpectralModel.is_norm_spectral_model", false]], "is_norm_spectral_model (gammapy.modeling.models.logparabolanormspectralmodel attribute)": [[243, "gammapy.modeling.models.LogParabolaNormSpectralModel.is_norm_spectral_model", false]], "is_norm_spectral_model (gammapy.modeling.models.logparabolaspectralmodel attribute)": [[244, "gammapy.modeling.models.LogParabolaSpectralModel.is_norm_spectral_model", false]], "is_norm_spectral_model (gammapy.modeling.models.meyercrabspectralmodel attribute)": [[247, "gammapy.modeling.models.MeyerCrabSpectralModel.is_norm_spectral_model", false]], "is_norm_spectral_model (gammapy.modeling.models.naimaspectralmodel attribute)": [[251, "gammapy.modeling.models.NaimaSpectralModel.is_norm_spectral_model", false]], "is_norm_spectral_model (gammapy.modeling.models.piecewisenormspectralmodel attribute)": [[253, "gammapy.modeling.models.PiecewiseNormSpectralModel.is_norm_spectral_model", false]], "is_norm_spectral_model (gammapy.modeling.models.powerlaw2spectralmodel attribute)": [[255, "gammapy.modeling.models.PowerLaw2SpectralModel.is_norm_spectral_model", false]], "is_norm_spectral_model (gammapy.modeling.models.powerlawnormspectralmodel attribute)": [[256, "gammapy.modeling.models.PowerLawNormSpectralModel.is_norm_spectral_model", false]], "is_norm_spectral_model (gammapy.modeling.models.powerlawspectralmodel attribute)": [[257, "gammapy.modeling.models.PowerLawSpectralModel.is_norm_spectral_model", false]], "is_norm_spectral_model (gammapy.modeling.models.scalespectralmodel attribute)": [[262, "gammapy.modeling.models.ScaleSpectralModel.is_norm_spectral_model", false]], "is_norm_spectral_model (gammapy.modeling.models.smoothbrokenpowerlawspectralmodel attribute)": [[267, "gammapy.modeling.models.SmoothBrokenPowerLawSpectralModel.is_norm_spectral_model", false]], "is_norm_spectral_model (gammapy.modeling.models.spectralmodel attribute)": [[269, "gammapy.modeling.models.SpectralModel.is_norm_spectral_model", false]], "is_norm_spectral_model (gammapy.modeling.models.superexpcutoffpowerlaw3fglspectralmodel attribute)": [[270, "gammapy.modeling.models.SuperExpCutoffPowerLaw3FGLSpectralModel.is_norm_spectral_model", false]], "is_norm_spectral_model (gammapy.modeling.models.superexpcutoffpowerlaw4fgldr3spectralmodel attribute)": [[271, "gammapy.modeling.models.SuperExpCutoffPowerLaw4FGLDR3SpectralModel.is_norm_spectral_model", false]], "is_norm_spectral_model (gammapy.modeling.models.superexpcutoffpowerlaw4fglspectralmodel attribute)": [[272, "gammapy.modeling.models.SuperExpCutoffPowerLaw4FGLSpectralModel.is_norm_spectral_model", false]], "is_norm_spectral_model (gammapy.modeling.models.templatendspectralmodel attribute)": [[275, "gammapy.modeling.models.TemplateNDSpectralModel.is_norm_spectral_model", false]], "is_norm_spectral_model (gammapy.modeling.models.templatespectralmodel attribute)": [[279, "gammapy.modeling.models.TemplateSpectralModel.is_norm_spectral_model", false]], "is_pointed_observation (gammapy.data.eventlist attribute)": [[83, "gammapy.data.EventList.is_pointed_observation", false]], "is_pointlike (gammapy.catalog.sourcecatalogobject2fhl attribute)": [[71, "gammapy.catalog.SourceCatalogObject2FHL.is_pointlike", false]], "is_pointlike (gammapy.catalog.sourcecatalogobject3fgl attribute)": [[74, "gammapy.catalog.SourceCatalogObject3FGL.is_pointlike", false]], "is_pointlike (gammapy.catalog.sourcecatalogobject3fhl attribute)": [[75, "gammapy.catalog.SourceCatalogObject3FHL.is_pointlike", false]], "is_pointlike (gammapy.catalog.sourcecatalogobject3hwc attribute)": [[76, "gammapy.catalog.SourceCatalogObject3HWC.is_pointlike", false]], "is_pointlike (gammapy.catalog.sourcecatalogobject4fgl attribute)": [[78, "gammapy.catalog.SourceCatalogObject4FGL.is_pointlike", false]], "is_pointlike (gammapy.irf.background2d attribute)": [[149, "gammapy.irf.Background2D.is_pointlike", false]], "is_pointlike (gammapy.irf.background3d attribute)": [[150, "gammapy.irf.Background3D.is_pointlike", false]], "is_pointlike (gammapy.irf.backgroundirf attribute)": [[151, "gammapy.irf.BackgroundIRF.is_pointlike", false]], "is_pointlike (gammapy.irf.edispkernel attribute)": [[152, "gammapy.irf.EDispKernel.is_pointlike", false]], "is_pointlike (gammapy.irf.effectiveareatable2d attribute)": [[155, "gammapy.irf.EffectiveAreaTable2D.is_pointlike", false]], "is_pointlike (gammapy.irf.energydependentmultigausspsf attribute)": [[156, "gammapy.irf.EnergyDependentMultiGaussPSF.is_pointlike", false]], "is_pointlike (gammapy.irf.energydispersion2d attribute)": [[157, "gammapy.irf.EnergyDispersion2D.is_pointlike", false]], "is_pointlike (gammapy.irf.irf attribute)": [[159, "gammapy.irf.IRF.is_pointlike", false]], "is_pointlike (gammapy.irf.parametricpsf attribute)": [[166, "gammapy.irf.ParametricPSF.is_pointlike", false]], "is_pointlike (gammapy.irf.psf3d attribute)": [[162, "gammapy.irf.PSF3D.is_pointlike", false]], "is_pointlike (gammapy.irf.psfking attribute)": [[164, "gammapy.irf.PSFKing.is_pointlike", false]], "is_pointlike (gammapy.irf.radmax2d attribute)": [[167, "gammapy.irf.RadMax2D.is_pointlike", false]], "is_region (gammapy.maps.hpxgeom attribute)": [[194, "gammapy.maps.HpxGeom.is_region", false]], "is_region (gammapy.maps.regiongeom attribute)": [[203, "gammapy.maps.RegionGeom.is_region", false]], "is_region (gammapy.maps.wcsgeom attribute)": [[206, "gammapy.maps.WcsGeom.is_region", false]], "is_regular (gammapy.maps.hpxgeom attribute)": [[194, "gammapy.maps.HpxGeom.is_regular", false]], "is_regular (gammapy.maps.regiongeom attribute)": [[203, "gammapy.maps.RegionGeom.is_regular", false]], "is_regular (gammapy.maps.wcsgeom attribute)": [[206, "gammapy.maps.WcsGeom.is_regular", false]], "is_ul (gammapy.estimators.fluxmaps attribute)": [[125, "gammapy.estimators.FluxMaps.is_ul", false]], "is_ul (gammapy.estimators.fluxpoints attribute)": [[127, "gammapy.estimators.FluxPoints.is_ul", false]], "is_unidimensional (gammapy.maps.mapaxes attribute)": [[199, "gammapy.maps.MapAxes.is_unidimensional", false]], "isothermalprofile (class in gammapy.astro.darkmatter)": [[22, "gammapy.astro.darkmatter.IsothermalProfile", false]], "items() (gammapy.data.hduindextable method)": [[87, "gammapy.data.HDUIndexTable.items", false]], "items() (gammapy.data.observationtable method)": [[91, "gammapy.data.ObservationTable.items", false]], "items() (gammapy.maps.maps method)": [[202, "gammapy.maps.Maps.items", false]], "iter_by_axis() (gammapy.estimators.fluxmaps method)": [[125, "gammapy.estimators.FluxMaps.iter_by_axis", false]], "iter_by_axis() (gammapy.estimators.fluxpoints method)": [[127, "gammapy.estimators.FluxPoints.iter_by_axis", false]], "iter_by_axis() (gammapy.maps.hpxmap method)": [[195, "gammapy.maps.HpxMap.iter_by_axis", false]], "iter_by_axis() (gammapy.maps.hpxndmap method)": [[196, "gammapy.maps.HpxNDMap.iter_by_axis", false]], "iter_by_axis() (gammapy.maps.map method)": [[198, "gammapy.maps.Map.iter_by_axis", false]], "iter_by_axis() (gammapy.maps.regionndmap method)": [[204, "gammapy.maps.RegionNDMap.iter_by_axis", false]], "iter_by_axis() (gammapy.maps.wcsmap method)": [[207, "gammapy.maps.WcsMap.iter_by_axis", false]], "iter_by_axis() (gammapy.maps.wcsndmap method)": [[208, "gammapy.maps.WcsNDMap.iter_by_axis", false]], "iter_by_axis_data() (gammapy.maps.regionndmap method)": [[204, "gammapy.maps.RegionNDMap.iter_by_axis_data", false]], "iter_by_edges (gammapy.maps.mapaxis attribute)": [[200, "gammapy.maps.MapAxis.iter_by_edges", false]], "iter_by_edges (gammapy.maps.timemapaxis attribute)": [[205, "gammapy.maps.TimeMapAxis.iter_by_edges", false]], "iter_by_image() (gammapy.maps.hpxmap method)": [[195, "gammapy.maps.HpxMap.iter_by_image", false]], "iter_by_image() (gammapy.maps.hpxndmap method)": [[196, "gammapy.maps.HpxNDMap.iter_by_image", false]], "iter_by_image() (gammapy.maps.map method)": [[198, "gammapy.maps.Map.iter_by_image", false]], "iter_by_image() (gammapy.maps.regionndmap method)": [[204, "gammapy.maps.RegionNDMap.iter_by_image", false]], "iter_by_image() (gammapy.maps.wcsmap method)": [[207, "gammapy.maps.WcsMap.iter_by_image", false]], "iter_by_image() (gammapy.maps.wcsndmap method)": [[208, "gammapy.maps.WcsNDMap.iter_by_image", false]], "iter_by_image_data() (gammapy.maps.hpxmap method)": [[195, "gammapy.maps.HpxMap.iter_by_image_data", false]], "iter_by_image_data() (gammapy.maps.hpxndmap method)": [[196, "gammapy.maps.HpxNDMap.iter_by_image_data", false]], "iter_by_image_data() (gammapy.maps.map method)": [[198, "gammapy.maps.Map.iter_by_image_data", false]], "iter_by_image_data() (gammapy.maps.regionndmap method)": [[204, "gammapy.maps.RegionNDMap.iter_by_image_data", false]], "iter_by_image_data() (gammapy.maps.wcsmap method)": [[207, "gammapy.maps.WcsMap.iter_by_image_data", false]], "iter_by_image_data() (gammapy.maps.wcsndmap method)": [[208, "gammapy.maps.WcsNDMap.iter_by_image_data", false]], "iter_by_image_index() (gammapy.maps.hpxmap method)": [[195, "gammapy.maps.HpxMap.iter_by_image_index", false]], "iter_by_image_index() (gammapy.maps.hpxndmap method)": [[196, "gammapy.maps.HpxNDMap.iter_by_image_index", false]], "iter_by_image_index() (gammapy.maps.map method)": [[198, "gammapy.maps.Map.iter_by_image_index", false]], "iter_by_image_index() (gammapy.maps.regionndmap method)": [[204, "gammapy.maps.RegionNDMap.iter_by_image_index", false]], "iter_by_image_index() (gammapy.maps.wcsmap method)": [[207, "gammapy.maps.WcsMap.iter_by_image_index", false]], "iter_by_image_index() (gammapy.maps.wcsndmap method)": [[208, "gammapy.maps.WcsNDMap.iter_by_image_index", false]], "iter_with_reshape (gammapy.maps.mapaxes attribute)": [[199, "gammapy.maps.MapAxes.iter_with_reshape", false]], "itercols() (gammapy.data.hduindextable method)": [[87, "gammapy.data.HDUIndexTable.itercols", false]], "itercols() (gammapy.data.observationtable method)": [[91, "gammapy.data.ObservationTable.itercols", false]], "iterrows() (gammapy.data.hduindextable method)": [[87, "gammapy.data.HDUIndexTable.iterrows", false]], "iterrows() (gammapy.data.observationtable method)": [[91, "gammapy.data.ObservationTable.iterrows", false]], "jfactory (class in gammapy.astro.darkmatter)": [[23, "gammapy.astro.darkmatter.JFactory", false]], "joint analysis": [[581, "term-Joint-Analysis", true]], "json() (gammapy.analysis.analysisconfig method)": [[16, "gammapy.analysis.AnalysisConfig.json", false]], "json() (gammapy.data.eventlistmetadata method)": [[84, "gammapy.data.EventListMetaData.json", false]], "json() (gammapy.data.observationmetadata method)": [[90, "gammapy.data.ObservationMetaData.json", false]], "json() (gammapy.datasets.mapdatasetmetadata method)": [[105, "gammapy.datasets.MapDatasetMetaData.json", false]], "json() (gammapy.estimators.fluxmetadata method)": [[126, "gammapy.estimators.FluxMetaData.json", false]], "k (gammapy.astro.population.faucherspiral attribute)": [[33, "gammapy.astro.population.FaucherSpiral.k", false]], "keep_columns() (gammapy.data.hduindextable method)": [[87, "gammapy.data.HDUIndexTable.keep_columns", false]], "keep_columns() (gammapy.data.observationtable method)": [[91, "gammapy.data.ObservationTable.keep_columns", false]], "kernel() (gammapy.makers.ringbackgroundmaker method)": [[180, "gammapy.makers.RingBackgroundMaker.kernel", false]], "kernels() (gammapy.makers.adaptiveringbackgroundmaker method)": [[170, "gammapy.makers.AdaptiveRingBackgroundMaker.kernels", false]], "keys() (gammapy.data.hduindextable method)": [[87, "gammapy.data.HDUIndexTable.keys", false]], "keys() (gammapy.data.observationtable method)": [[91, "gammapy.data.ObservationTable.keys", false]], "keys() (gammapy.maps.maps method)": [[202, "gammapy.maps.Maps.keys", false]], "labelmapaxis (class in gammapy.maps)": [[197, "gammapy.maps.LabelMapAxis", false]], "lambda_ (gammapy.modeling.models.expcutoffpowerlawnormspectralmodel attribute)": [[231, "gammapy.modeling.models.ExpCutoffPowerLawNormSpectralModel.lambda_", false]], "lambda_ (gammapy.modeling.models.expcutoffpowerlawspectralmodel attribute)": [[232, "gammapy.modeling.models.ExpCutoffPowerLawSpectralModel.lambda_", false]], "large_scale_component (gammapy.catalog.sourcecataloghgps attribute)": [[67, "gammapy.catalog.SourceCatalogHGPS.large_scale_component", false]], "lat (gammapy.maps.mapcoord attribute)": [[201, "gammapy.maps.MapCoord.lat", false]], "lat_0 (gammapy.modeling.models.diskspatialmodel attribute)": [[227, "gammapy.modeling.models.DiskSpatialModel.lat_0", false]], "lat_0 (gammapy.modeling.models.gaussianspatialmodel attribute)": [[236, "gammapy.modeling.models.GaussianSpatialModel.lat_0", false]], "lat_0 (gammapy.modeling.models.generalizedgaussianspatialmodel attribute)": [[239, "gammapy.modeling.models.GeneralizedGaussianSpatialModel.lat_0", false]], "lat_0 (gammapy.modeling.models.pointspatialmodel attribute)": [[254, "gammapy.modeling.models.PointSpatialModel.lat_0", false]], "lat_0 (gammapy.modeling.models.shell2spatialmodel attribute)": [[263, "gammapy.modeling.models.Shell2SpatialModel.lat_0", false]], "lat_0 (gammapy.modeling.models.shellspatialmodel attribute)": [[264, "gammapy.modeling.models.ShellSpatialModel.lat_0", false]], "lat_0 (gammapy.modeling.models.templatespatialmodel attribute)": [[278, "gammapy.modeling.models.TemplateSpatialModel.lat_0", false]], "lazyfitsdata (class in gammapy.utils.fits)": [[319, "gammapy.utils.fits.LazyFitsData", false]], "lifetime_age_of_universe (gammapy.astro.darkmatter.darkmatterdecayspectralmodel attribute)": [[20, "gammapy.astro.darkmatter.DarkMatterDecaySpectralModel.LIFETIME_AGE_OF_UNIVERSE", false]], "lightcurve (gammapy.catalog.sourcecatalogobject2pc attribute)": [[73, "gammapy.catalog.SourceCatalogObject2PC.lightcurve", false]], "lightcurve (gammapy.catalog.sourcecatalogobject3pc attribute)": [[77, "gammapy.catalog.SourceCatalogObject3PC.lightcurve", false]], "lightcurve() (gammapy.catalog.sourcecatalogobject3fgl method)": [[74, "gammapy.catalog.SourceCatalogObject3FGL.lightcurve", false]], "lightcurve() (gammapy.catalog.sourcecatalogobject4fgl method)": [[78, "gammapy.catalog.SourceCatalogObject4FGL.lightcurve", false]], "lightcurveestimator (class in gammapy.estimators)": [[132, "gammapy.estimators.LightCurveEstimator", false]], "lightcurvetemplatetemporalmodel (class in gammapy.modeling.models)": [[241, "gammapy.modeling.models.LightCurveTemplateTemporalModel", false]], "linear (gammapy.astro.population.casebattacharya1998 attribute)": [[28, "gammapy.astro.population.CaseBattacharya1998.linear", false]], "linear (gammapy.astro.population.exponential attribute)": [[29, "gammapy.astro.population.Exponential.linear", false]], "linear (gammapy.astro.population.faucherkaspi2006 attribute)": [[30, "gammapy.astro.population.FaucherKaspi2006.linear", false]], "linear (gammapy.astro.population.faucherkaspi2006velocitybimodal attribute)": [[31, "gammapy.astro.population.FaucherKaspi2006VelocityBimodal.linear", false]], "linear (gammapy.astro.population.faucherkaspi2006velocitymaxwellian attribute)": [[32, "gammapy.astro.population.FaucherKaspi2006VelocityMaxwellian.linear", false]], "linear (gammapy.astro.population.lorimer2006 attribute)": [[35, "gammapy.astro.population.Lorimer2006.linear", false]], "linear (gammapy.astro.population.paczynski1990 attribute)": [[36, "gammapy.astro.population.Paczynski1990.linear", false]], "linear (gammapy.astro.population.paczynski1990velocity attribute)": [[37, "gammapy.astro.population.Paczynski1990Velocity.linear", false]], "linear (gammapy.astro.population.yusifovkucuk2004 attribute)": [[39, "gammapy.astro.population.YusifovKucuk2004.linear", false]], "linear (gammapy.astro.population.yusifovkucuk2004b attribute)": [[40, "gammapy.astro.population.YusifovKucuk2004B.linear", false]], "lineartemporalmodel (class in gammapy.modeling.models)": [[242, "gammapy.modeling.models.LinearTemporalModel", false]], "livetime_fraction (gammapy.data.observationfilter attribute)": [[89, "gammapy.data.ObservationFilter.livetime_fraction", false]], "load() (gammapy.utils.fits.hdulocation method)": [[318, "gammapy.utils.fits.HDULocation.load", false]], "load_irf_dict_from_file() (in module gammapy.irf)": [[169, "gammapy.irf.load_irf_dict_from_file", false]], "loc (gammapy.data.hduindextable attribute)": [[87, "gammapy.data.HDUIndexTable.loc", false]], "loc (gammapy.data.observationtable attribute)": [[91, "gammapy.data.ObservationTable.loc", false]], "loc_indices (gammapy.data.hduindextable attribute)": [[87, "gammapy.data.HDUIndexTable.loc_indices", false]], "loc_indices (gammapy.data.observationtable attribute)": [[91, "gammapy.data.ObservationTable.loc_indices", false]], "local_density (gammapy.astro.darkmatter.burkertprofile attribute)": [[17, "gammapy.astro.darkmatter.BurkertProfile.LOCAL_DENSITY", false]], "local_density (gammapy.astro.darkmatter.dmprofile attribute)": [[18, "gammapy.astro.darkmatter.DMProfile.LOCAL_DENSITY", false]], "local_density (gammapy.astro.darkmatter.einastoprofile attribute)": [[21, "gammapy.astro.darkmatter.EinastoProfile.LOCAL_DENSITY", false]], "local_density (gammapy.astro.darkmatter.isothermalprofile attribute)": [[22, "gammapy.astro.darkmatter.IsothermalProfile.LOCAL_DENSITY", false]], "local_density (gammapy.astro.darkmatter.mooreprofile attribute)": [[24, "gammapy.astro.darkmatter.MooreProfile.LOCAL_DENSITY", false]], "local_density (gammapy.astro.darkmatter.nfwprofile attribute)": [[25, "gammapy.astro.darkmatter.NFWProfile.LOCAL_DENSITY", false]], "local_density (gammapy.astro.darkmatter.zhaoprofile attribute)": [[27, "gammapy.astro.darkmatter.ZhaoProfile.LOCAL_DENSITY", false]], "local_to_global() (gammapy.maps.hpxgeom method)": [[194, "gammapy.maps.HpxGeom.local_to_global", false]], "location (gammapy.data.pointinginfo attribute)": [[94, "gammapy.data.PointingInfo.location", false]], "location_info() (gammapy.data.hduindextable method)": [[87, "gammapy.data.HDUIndexTable.location_info", false]], "logparabolanormspectralmodel (class in gammapy.modeling.models)": [[243, "gammapy.modeling.models.LogParabolaNormSpectralModel", false]], "logparabolaspectralmodel (class in gammapy.modeling.models)": [[244, "gammapy.modeling.models.LogParabolaSpectralModel", false]], "logspiral (class in gammapy.astro.population)": [[34, "gammapy.astro.population.LogSpiral", false]], "loguniformprior (class in gammapy.modeling.models)": [[245, "gammapy.modeling.models.LogUniformPrior", false]], "lon (gammapy.maps.mapcoord attribute)": [[201, "gammapy.maps.MapCoord.lon", false]], "lon_0 (gammapy.modeling.models.diskspatialmodel attribute)": [[227, "gammapy.modeling.models.DiskSpatialModel.lon_0", false]], "lon_0 (gammapy.modeling.models.gaussianspatialmodel attribute)": [[236, "gammapy.modeling.models.GaussianSpatialModel.lon_0", false]], "lon_0 (gammapy.modeling.models.generalizedgaussianspatialmodel attribute)": [[239, "gammapy.modeling.models.GeneralizedGaussianSpatialModel.lon_0", false]], "lon_0 (gammapy.modeling.models.pointspatialmodel attribute)": [[254, "gammapy.modeling.models.PointSpatialModel.lon_0", false]], "lon_0 (gammapy.modeling.models.shell2spatialmodel attribute)": [[263, "gammapy.modeling.models.Shell2SpatialModel.lon_0", false]], "lon_0 (gammapy.modeling.models.shellspatialmodel attribute)": [[264, "gammapy.modeling.models.ShellSpatialModel.lon_0", false]], "lon_0 (gammapy.modeling.models.templatespatialmodel attribute)": [[278, "gammapy.modeling.models.TemplateSpatialModel.lon_0", false]], "lorimer2006 (class in gammapy.astro.population)": [[35, "gammapy.astro.population.Lorimer2006", false]], "luminosity_spindown (gammapy.astro.source.simplepulsar attribute)": [[54, "gammapy.astro.source.SimplePulsar.luminosity_spindown", false]], "luminosity_spindown() (gammapy.astro.source.pulsar method)": [[51, "gammapy.astro.source.Pulsar.luminosity_spindown", false]], "luminosity_tev() (gammapy.astro.source.snr method)": [[52, "gammapy.astro.source.SNR.luminosity_tev", false]], "luminosity_tev() (gammapy.astro.source.snrtruelovemckee method)": [[53, "gammapy.astro.source.SNRTrueloveMcKee.luminosity_tev", false]], "m (gammapy.astro.population.valleespiral attribute)": [[38, "gammapy.astro.population.ValleeSpiral.m", false]], "magnetic_field (gammapy.astro.source.simplepulsar attribute)": [[54, "gammapy.astro.source.SimplePulsar.magnetic_field", false]], "magnetic_field() (gammapy.astro.source.pulsar method)": [[51, "gammapy.astro.source.Pulsar.magnetic_field", false]], "magnetic_field() (gammapy.astro.source.pwn method)": [[50, "gammapy.astro.source.PWN.magnetic_field", false]], "make_background() (gammapy.makers.mapdatasetmaker method)": [[175, "gammapy.makers.MapDatasetMaker.make_background", false]], "make_background() (gammapy.makers.spectrumdatasetmaker method)": [[182, "gammapy.makers.SpectrumDatasetMaker.make_background", false]], "make_background_fit() (gammapy.makers.fovbackgroundmaker method)": [[172, "gammapy.makers.FoVBackgroundMaker.make_background_fit", false]], "make_background_scale() (gammapy.makers.fovbackgroundmaker method)": [[172, "gammapy.makers.FoVBackgroundMaker.make_background_scale", false]], "make_base_catalog_galactic() (in module gammapy.astro.population)": [[45, "gammapy.astro.population.make_base_catalog_galactic", false]], "make_catalog_random_positions_cube() (in module gammapy.astro.population)": [[46, "gammapy.astro.population.make_catalog_random_positions_cube", false]], "make_catalog_random_positions_sphere() (in module gammapy.astro.population)": [[47, "gammapy.astro.population.make_catalog_random_positions_sphere", false]], "make_concentric_annulus_sky_regions() (in module gammapy.utils.regions)": [[342, "gammapy.utils.regions.make_concentric_annulus_sky_regions", false]], "make_counts() (gammapy.makers.mapdatasetmaker static method)": [[175, "gammapy.makers.MapDatasetMaker.make_counts", false]], "make_counts() (gammapy.makers.phasebackgroundmaker method)": [[176, "gammapy.makers.PhaseBackgroundMaker.make_counts", false]], "make_counts() (gammapy.makers.spectrumdatasetmaker static method)": [[182, "gammapy.makers.SpectrumDatasetMaker.make_counts", false]], "make_counts_off() (gammapy.makers.phasebackgroundmaker method)": [[176, "gammapy.makers.PhaseBackgroundMaker.make_counts_off", false]], "make_counts_off() (gammapy.makers.reflectedregionsbackgroundmaker method)": [[177, "gammapy.makers.ReflectedRegionsBackgroundMaker.make_counts_off", false]], "make_counts_rad_max() (in module gammapy.makers.utils)": [[184, "gammapy.makers.utils.make_counts_rad_max", false]], "make_cubes() (gammapy.makers.adaptiveringbackgroundmaker method)": [[170, "gammapy.makers.AdaptiveRingBackgroundMaker.make_cubes", false]], "make_dataset() (gammapy.makers.datasetsmaker method)": [[171, "gammapy.makers.DatasetsMaker.make_dataset", false]], "make_default_fov_background_model() (gammapy.makers.fovbackgroundmaker method)": [[172, "gammapy.makers.FoVBackgroundMaker.make_default_fov_background_model", false]], "make_edisp() (gammapy.makers.mapdatasetmaker method)": [[175, "gammapy.makers.MapDatasetMaker.make_edisp", false]], "make_edisp() (gammapy.makers.spectrumdatasetmaker method)": [[182, "gammapy.makers.SpectrumDatasetMaker.make_edisp", false]], "make_edisp_kernel() (gammapy.makers.mapdatasetmaker method)": [[175, "gammapy.makers.MapDatasetMaker.make_edisp_kernel", false]], "make_edisp_kernel() (gammapy.makers.spectrumdatasetmaker method)": [[182, "gammapy.makers.SpectrumDatasetMaker.make_edisp_kernel", false]], "make_edisp_kernel_map() (in module gammapy.makers.utils)": [[185, "gammapy.makers.utils.make_edisp_kernel_map", false]], "make_edisp_map() (in module gammapy.makers.utils)": [[186, "gammapy.makers.utils.make_edisp_map", false]], "make_effective_livetime_map() (in module gammapy.makers.utils)": [[187, "gammapy.makers.utils.make_effective_livetime_map", false]], "make_exclusion_mask() (gammapy.makers.fovbackgroundmaker method)": [[172, "gammapy.makers.FoVBackgroundMaker.make_exclusion_mask", false]], "make_exposure() (gammapy.makers.mapdatasetmaker static method)": [[175, "gammapy.makers.MapDatasetMaker.make_exposure", false]], "make_exposure() (gammapy.makers.spectrumdatasetmaker method)": [[182, "gammapy.makers.SpectrumDatasetMaker.make_exposure", false]], "make_exposure_irf() (gammapy.makers.mapdatasetmaker static method)": [[175, "gammapy.makers.MapDatasetMaker.make_exposure_irf", false]], "make_exposure_irf() (gammapy.makers.spectrumdatasetmaker static method)": [[182, "gammapy.makers.SpectrumDatasetMaker.make_exposure_irf", false]], "make_map_background_irf() (in module gammapy.makers.utils)": [[188, "gammapy.makers.utils.make_map_background_irf", false]], "make_map_exposure_true_energy() (in module gammapy.makers.utils)": [[189, "gammapy.makers.utils.make_map_exposure_true_energy", false]], "make_maps_off() (gammapy.makers.ringbackgroundmaker method)": [[180, "gammapy.makers.RingBackgroundMaker.make_maps_off", false]], "make_mask_bkg_invalid() (gammapy.makers.safemaskmaker static method)": [[181, "gammapy.makers.SafeMaskMaker.make_mask_bkg_invalid", false]], "make_mask_energy_aeff_default() (gammapy.makers.safemaskmaker static method)": [[181, "gammapy.makers.SafeMaskMaker.make_mask_energy_aeff_default", false]], "make_mask_energy_aeff_max() (gammapy.makers.safemaskmaker method)": [[181, "gammapy.makers.SafeMaskMaker.make_mask_energy_aeff_max", false]], "make_mask_energy_bkg_peak() (gammapy.makers.safemaskmaker method)": [[181, "gammapy.makers.SafeMaskMaker.make_mask_energy_bkg_peak", false]], "make_mask_energy_edisp_bias() (gammapy.makers.safemaskmaker method)": [[181, "gammapy.makers.SafeMaskMaker.make_mask_energy_edisp_bias", false]], "make_mask_offset_max() (gammapy.makers.safemaskmaker method)": [[181, "gammapy.makers.SafeMaskMaker.make_mask_offset_max", false]], "make_meta_table() (gammapy.makers.mapdatasetmaker static method)": [[175, "gammapy.makers.MapDatasetMaker.make_meta_table", false]], "make_meta_table() (gammapy.makers.spectrumdatasetmaker static method)": [[182, "gammapy.makers.SpectrumDatasetMaker.make_meta_table", false]], "make_observation_time_map() (in module gammapy.makers.utils)": [[190, "gammapy.makers.utils.make_observation_time_map", false]], "make_orthogonal_rectangle_sky_regions() (in module gammapy.utils.regions)": [[343, "gammapy.utils.regions.make_orthogonal_rectangle_sky_regions", false]], "make_path() (in module gammapy.utils.scripts)": [[348, "gammapy.utils.scripts.make_path", false]], "make_psf() (gammapy.makers.mapdatasetmaker method)": [[175, "gammapy.makers.MapDatasetMaker.make_psf", false]], "make_psf() (gammapy.makers.spectrumdatasetmaker method)": [[182, "gammapy.makers.SpectrumDatasetMaker.make_psf", false]], "make_psf_map() (in module gammapy.makers.utils)": [[191, "gammapy.makers.utils.make_psf_map", false]], "make_theta_squared_table() (in module gammapy.makers.utils)": [[192, "gammapy.makers.utils.make_theta_squared_table", false]], "maker": [[581, "term-Maker", true]], "maker (class in gammapy.makers)": [[174, "gammapy.makers.Maker", false]], "maker_registry (in module gammapy.makers)": [[173, "gammapy.makers.MAKER_REGISTRY", false]], "map (class in gammapy.maps)": [[198, "gammapy.maps.Map", false]], "map (gammapy.astro.darkmatter.primaryflux attribute)": [[26, "gammapy.astro.darkmatter.PrimaryFlux.map", false]], "map (gammapy.modeling.models.templatendspatialmodel attribute)": [[274, "gammapy.modeling.models.TemplateNDSpatialModel.map", false]], "map (gammapy.modeling.models.templatendspectralmodel attribute)": [[275, "gammapy.modeling.models.TemplateNDSpectralModel.map", false]], "map (gammapy.modeling.models.templatenpredmodel attribute)": [[276, "gammapy.modeling.models.TemplateNPredModel.map", false]], "map (gammapy.modeling.models.templatespatialmodel attribute)": [[278, "gammapy.modeling.models.TemplateSpatialModel.map", false]], "map_center (gammapy.modeling.models.templatespatialmodel attribute)": [[278, "gammapy.modeling.models.TemplateSpatialModel.map_center", false]], "map_coord() (gammapy.data.eventlist method)": [[83, "gammapy.data.EventList.map_coord", false]], "mapaxes (class in gammapy.maps)": [[199, "gammapy.maps.MapAxes", false]], "mapaxis (class in gammapy.maps)": [[200, "gammapy.maps.MapAxis", false]], "mapcoord (class in gammapy.maps)": [[201, "gammapy.maps.MapCoord", false]], "mapdataset (class in gammapy.datasets)": [[103, "gammapy.datasets.MapDataset", false]], "mapdataseteventsampler (class in gammapy.datasets)": [[104, "gammapy.datasets.MapDatasetEventSampler", false]], "mapdatasetmaker (class in gammapy.makers)": [[175, "gammapy.makers.MapDatasetMaker", false]], "mapdatasetmetadata (class in gammapy.datasets)": [[105, "gammapy.datasets.MapDatasetMetaData", false]], "mapdatasetonoff (class in gammapy.datasets)": [[106, "gammapy.datasets.MapDatasetOnOff", false]], "mappanelplotter (class in gammapy.visualization)": [[370, "gammapy.visualization.MapPanelPlotter", false]], "maps (class in gammapy.maps)": [[202, "gammapy.maps.Maps", false]], "mask (gammapy.data.hduindextable attribute)": [[87, "gammapy.data.HDUIndexTable.mask", false]], "mask (gammapy.data.observationtable attribute)": [[91, "gammapy.data.ObservationTable.mask", false]], "mask (gammapy.datasets.dataset attribute)": [[99, "gammapy.datasets.Dataset.mask", false]], "mask (gammapy.datasets.fluxpointsdataset attribute)": [[102, "gammapy.datasets.FluxPointsDataset.mask", false]], "mask (gammapy.datasets.mapdataset attribute)": [[103, "gammapy.datasets.MapDataset.mask", false]], "mask (gammapy.datasets.mapdatasetonoff attribute)": [[106, "gammapy.datasets.MapDatasetOnOff.mask", false]], "mask (gammapy.datasets.spectrumdataset attribute)": [[110, "gammapy.datasets.SpectrumDataset.mask", false]], "mask (gammapy.datasets.spectrumdatasetonoff attribute)": [[111, "gammapy.datasets.SpectrumDatasetOnOff.mask", false]], "mask_contains_region() (gammapy.maps.wcsndmap method)": [[208, "gammapy.maps.WcsNDMap.mask_contains_region", false]], "mask_fit (gammapy.datasets.mapdataset attribute)": [[103, "gammapy.datasets.MapDataset.mask_fit", false]], "mask_fit (gammapy.datasets.mapdatasetonoff attribute)": [[106, "gammapy.datasets.MapDatasetOnOff.mask_fit", false]], "mask_fit (gammapy.datasets.spectrumdataset attribute)": [[110, "gammapy.datasets.SpectrumDataset.mask_fit", false]], "mask_fit (gammapy.datasets.spectrumdatasetonoff attribute)": [[111, "gammapy.datasets.SpectrumDatasetOnOff.mask_fit", false]], "mask_fit_image (gammapy.datasets.mapdataset attribute)": [[103, "gammapy.datasets.MapDataset.mask_fit_image", false]], "mask_fit_image (gammapy.datasets.mapdatasetonoff attribute)": [[106, "gammapy.datasets.MapDatasetOnOff.mask_fit_image", false]], "mask_fit_image (gammapy.datasets.spectrumdataset attribute)": [[110, "gammapy.datasets.SpectrumDataset.mask_fit_image", false]], "mask_fit_image (gammapy.datasets.spectrumdatasetonoff attribute)": [[111, "gammapy.datasets.SpectrumDatasetOnOff.mask_fit_image", false]], "mask_image (gammapy.datasets.mapdataset attribute)": [[103, "gammapy.datasets.MapDataset.mask_image", false]], "mask_image (gammapy.datasets.mapdatasetonoff attribute)": [[106, "gammapy.datasets.MapDatasetOnOff.mask_image", false]], "mask_image (gammapy.datasets.spectrumdataset attribute)": [[110, "gammapy.datasets.SpectrumDataset.mask_image", false]], "mask_image (gammapy.datasets.spectrumdatasetonoff attribute)": [[111, "gammapy.datasets.SpectrumDatasetOnOff.mask_image", false]], "mask_nearest_position() (gammapy.maps.hpxmap method)": [[195, "gammapy.maps.HpxMap.mask_nearest_position", false]], "mask_nearest_position() (gammapy.maps.hpxndmap method)": [[196, "gammapy.maps.HpxNDMap.mask_nearest_position", false]], "mask_nearest_position() (gammapy.maps.map method)": [[198, "gammapy.maps.Map.mask_nearest_position", false]], "mask_nearest_position() (gammapy.maps.regionndmap method)": [[204, "gammapy.maps.RegionNDMap.mask_nearest_position", false]], "mask_nearest_position() (gammapy.maps.wcsmap method)": [[207, "gammapy.maps.WcsMap.mask_nearest_position", false]], "mask_nearest_position() (gammapy.maps.wcsndmap method)": [[208, "gammapy.maps.WcsNDMap.mask_nearest_position", false]], "mask_safe (gammapy.datasets.fluxpointsdataset attribute)": [[102, "gammapy.datasets.FluxPointsDataset.mask_safe", false]], "mask_safe (gammapy.datasets.mapdataset attribute)": [[103, "gammapy.datasets.MapDataset.mask_safe", false]], "mask_safe (gammapy.datasets.mapdatasetonoff attribute)": [[106, "gammapy.datasets.MapDatasetOnOff.mask_safe", false]], "mask_safe (gammapy.datasets.spectrumdataset attribute)": [[110, "gammapy.datasets.SpectrumDataset.mask_safe", false]], "mask_safe (gammapy.datasets.spectrumdatasetonoff attribute)": [[111, "gammapy.datasets.SpectrumDatasetOnOff.mask_safe", false]], "mask_safe_edisp (gammapy.datasets.mapdataset attribute)": [[103, "gammapy.datasets.MapDataset.mask_safe_edisp", false]], "mask_safe_edisp (gammapy.datasets.mapdatasetonoff attribute)": [[106, "gammapy.datasets.MapDatasetOnOff.mask_safe_edisp", false]], "mask_safe_edisp (gammapy.datasets.spectrumdataset attribute)": [[110, "gammapy.datasets.SpectrumDataset.mask_safe_edisp", false]], "mask_safe_edisp (gammapy.datasets.spectrumdatasetonoff attribute)": [[111, "gammapy.datasets.SpectrumDatasetOnOff.mask_safe_edisp", false]], "mask_safe_image (gammapy.datasets.mapdataset attribute)": [[103, "gammapy.datasets.MapDataset.mask_safe_image", false]], "mask_safe_image (gammapy.datasets.mapdatasetonoff attribute)": [[106, "gammapy.datasets.MapDatasetOnOff.mask_safe_image", false]], "mask_safe_image (gammapy.datasets.spectrumdataset attribute)": [[110, "gammapy.datasets.SpectrumDataset.mask_safe_image", false]], "mask_safe_image (gammapy.datasets.spectrumdatasetonoff attribute)": [[111, "gammapy.datasets.SpectrumDatasetOnOff.mask_safe_image", false]], "mask_safe_image (gammapy.irf.edispkernelmap attribute)": [[153, "gammapy.irf.EDispKernelMap.mask_safe_image", false]], "mask_safe_image (gammapy.irf.edispmap attribute)": [[154, "gammapy.irf.EDispMap.mask_safe_image", false]], "mask_safe_image (gammapy.irf.irfmap attribute)": [[160, "gammapy.irf.IRFMap.mask_safe_image", false]], "mask_safe_image (gammapy.irf.psfmap attribute)": [[165, "gammapy.irf.PSFMap.mask_safe_image", false]], "mask_safe_image (gammapy.irf.recopsfmap attribute)": [[168, "gammapy.irf.RecoPSFMap.mask_safe_image", false]], "mask_safe_psf (gammapy.datasets.mapdataset attribute)": [[103, "gammapy.datasets.MapDataset.mask_safe_psf", false]], "mask_safe_psf (gammapy.datasets.mapdatasetonoff attribute)": [[106, "gammapy.datasets.MapDatasetOnOff.mask_safe_psf", false]], "mask_safe_psf (gammapy.datasets.spectrumdataset attribute)": [[110, "gammapy.datasets.SpectrumDataset.mask_safe_psf", false]], "mask_safe_psf (gammapy.datasets.spectrumdatasetonoff attribute)": [[111, "gammapy.datasets.SpectrumDatasetOnOff.mask_safe_psf", false]], "mask_valid (gammapy.datasets.fluxpointsdataset attribute)": [[102, "gammapy.datasets.FluxPointsDataset.mask_valid", false]], "masked (gammapy.data.hduindextable attribute)": [[87, "gammapy.data.HDUIndexTable.masked", false]], "masked (gammapy.data.observationtable attribute)": [[91, "gammapy.data.ObservationTable.masked", false]], "match_by_name (gammapy.maps.mapcoord attribute)": [[201, "gammapy.maps.MapCoord.match_by_name", false]], "matrix (gammapy.modeling.covarianceresult attribute)": [[212, "gammapy.modeling.CovarianceResult.matrix", false]], "max (gammapy.modeling.models.loguniformprior attribute)": [[245, "gammapy.modeling.models.LogUniformPrior.max", false]], "max (gammapy.modeling.models.uniformprior attribute)": [[281, "gammapy.modeling.models.UniformPrior.max", false]], "max (gammapy.modeling.parameter attribute)": [[216, "gammapy.modeling.Parameter.max", false]], "max (gammapy.modeling.parameters attribute)": [[217, "gammapy.modeling.Parameters.max", false]], "max (gammapy.modeling.priorparameter attribute)": [[218, "gammapy.modeling.PriorParameter.max", false]], "max (gammapy.modeling.priorparameters attribute)": [[219, "gammapy.modeling.PriorParameters.max", false]], "mcmc": [[581, "term-MCMC", true]], "mdm (gammapy.astro.darkmatter.primaryflux attribute)": [[26, "gammapy.astro.darkmatter.PrimaryFlux.mDM", false]], "mean (gammapy.modeling.models.gaussianspectralmodel attribute)": [[237, "gammapy.modeling.models.GaussianSpectralModel.mean", false]], "message (gammapy.modeling.covarianceresult attribute)": [[212, "gammapy.modeling.CovarianceResult.message", false]], "message (gammapy.modeling.fitresult attribute)": [[214, "gammapy.modeling.FitResult.message", false]], "message (gammapy.modeling.optimizeresult attribute)": [[215, "gammapy.modeling.OptimizeResult.message", false]], "met": [[581, "term-MET", true]], "met_start (gammapy.data.gti attribute)": [[86, "gammapy.data.GTI.met_start", false]], "met_stop (gammapy.data.gti attribute)": [[86, "gammapy.data.GTI.met_stop", false]], "meta (gammapy.astro.population.casebattacharya1998 attribute)": [[28, "gammapy.astro.population.CaseBattacharya1998.meta", false]], "meta (gammapy.astro.population.exponential attribute)": [[29, "gammapy.astro.population.Exponential.meta", false]], "meta (gammapy.astro.population.faucherkaspi2006 attribute)": [[30, "gammapy.astro.population.FaucherKaspi2006.meta", false]], "meta (gammapy.astro.population.faucherkaspi2006velocitybimodal attribute)": [[31, "gammapy.astro.population.FaucherKaspi2006VelocityBimodal.meta", false]], "meta (gammapy.astro.population.faucherkaspi2006velocitymaxwellian attribute)": [[32, "gammapy.astro.population.FaucherKaspi2006VelocityMaxwellian.meta", false]], "meta (gammapy.astro.population.lorimer2006 attribute)": [[35, "gammapy.astro.population.Lorimer2006.meta", false]], "meta (gammapy.astro.population.paczynski1990 attribute)": [[36, "gammapy.astro.population.Paczynski1990.meta", false]], "meta (gammapy.astro.population.paczynski1990velocity attribute)": [[37, "gammapy.astro.population.Paczynski1990Velocity.meta", false]], "meta (gammapy.astro.population.yusifovkucuk2004 attribute)": [[39, "gammapy.astro.population.YusifovKucuk2004.meta", false]], "meta (gammapy.astro.population.yusifovkucuk2004b attribute)": [[40, "gammapy.astro.population.YusifovKucuk2004B.meta", false]], "meta (gammapy.data.hduindextable attribute)": [[87, "gammapy.data.HDUIndexTable.meta", false]], "meta (gammapy.data.observation attribute)": [[88, "gammapy.data.Observation.meta", false]], "meta (gammapy.data.observationtable attribute)": [[91, "gammapy.data.ObservationTable.meta", false]], "meta (gammapy.datasets.mapdataset attribute)": [[103, "gammapy.datasets.MapDataset.meta", false]], "meta (gammapy.datasets.mapdatasetonoff attribute)": [[106, "gammapy.datasets.MapDatasetOnOff.meta", false]], "meta (gammapy.datasets.spectrumdataset attribute)": [[110, "gammapy.datasets.SpectrumDataset.meta", false]], "meta (gammapy.datasets.spectrumdatasetonoff attribute)": [[111, "gammapy.datasets.SpectrumDatasetOnOff.meta", false]], "meta (gammapy.maps.hpxmap attribute)": [[195, "gammapy.maps.HpxMap.meta", false]], "meta (gammapy.maps.hpxndmap attribute)": [[196, "gammapy.maps.HpxNDMap.meta", false]], "meta (gammapy.maps.map attribute)": [[198, "gammapy.maps.Map.meta", false]], "meta (gammapy.maps.regionndmap attribute)": [[204, "gammapy.maps.RegionNDMap.meta", false]], "meta (gammapy.maps.wcsmap attribute)": [[207, "gammapy.maps.WcsMap.meta", false]], "meta (gammapy.maps.wcsndmap attribute)": [[208, "gammapy.maps.WcsNDMap.meta", false]], "meta_table (gammapy.datasets.datasets attribute)": [[100, "gammapy.datasets.Datasets.meta_table", false]], "meta_table (gammapy.datasets.mapdataset attribute)": [[103, "gammapy.datasets.MapDataset.meta_table", false]], "meta_table (gammapy.datasets.mapdatasetonoff attribute)": [[106, "gammapy.datasets.MapDatasetOnOff.meta_table", false]], "meta_table (gammapy.datasets.spectrumdataset attribute)": [[110, "gammapy.datasets.SpectrumDataset.meta_table", false]], "meta_table (gammapy.datasets.spectrumdatasetonoff attribute)": [[111, "gammapy.datasets.SpectrumDatasetOnOff.meta_table", false]], "method (gammapy.makers.fovbackgroundmaker attribute)": [[172, "gammapy.makers.FoVBackgroundMaker.method", false]], "method (gammapy.modeling.covarianceresult attribute)": [[212, "gammapy.modeling.CovarianceResult.method", false]], "method (gammapy.modeling.fitresult attribute)": [[214, "gammapy.modeling.FitResult.method", false]], "method (gammapy.modeling.optimizeresult attribute)": [[215, "gammapy.modeling.OptimizeResult.method", false]], "method_default (in module gammapy.utils.parallel)": [[326, "gammapy.utils.parallel.METHOD_DEFAULT", false]], "method_kwargs_default (in module gammapy.utils.parallel)": [[327, "gammapy.utils.parallel.METHOD_KWARGS_DEFAULT", false]], "meyercrabspectralmodel (class in gammapy.modeling.models)": [[247, "gammapy.modeling.models.MeyerCrabSpectralModel", false]], "min (gammapy.modeling.models.loguniformprior attribute)": [[245, "gammapy.modeling.models.LogUniformPrior.min", false]], "min (gammapy.modeling.models.uniformprior attribute)": [[281, "gammapy.modeling.models.UniformPrior.min", false]], "min (gammapy.modeling.parameter attribute)": [[216, "gammapy.modeling.Parameter.min", false]], "min (gammapy.modeling.parameters attribute)": [[217, "gammapy.modeling.Parameters.min", false]], "min (gammapy.modeling.priorparameter attribute)": [[218, "gammapy.modeling.PriorParameter.min", false]], "min (gammapy.modeling.priorparameters attribute)": [[219, "gammapy.modeling.PriorParameters.min", false]], "minuit (gammapy.modeling.fitresult attribute)": [[214, "gammapy.modeling.FitResult.minuit", false]], "minuit (gammapy.modeling.optimizeresult attribute)": [[215, "gammapy.modeling.OptimizeResult.minuit", false]], "mode (gammapy.data.fixedpointinginfo attribute)": [[85, "gammapy.data.FixedPointingInfo.mode", false]], "model (class in gammapy.modeling.models)": [[248, "gammapy.modeling.models.Model", false]], "model_computed_fields (gammapy.analysis.analysisconfig attribute)": [[16, "gammapy.analysis.AnalysisConfig.model_computed_fields", false]], "model_computed_fields (gammapy.data.eventlistmetadata attribute)": [[84, "gammapy.data.EventListMetaData.model_computed_fields", false]], "model_computed_fields (gammapy.data.observationmetadata attribute)": [[90, "gammapy.data.ObservationMetaData.model_computed_fields", false]], "model_computed_fields (gammapy.datasets.mapdatasetmetadata attribute)": [[105, "gammapy.datasets.MapDatasetMetaData.model_computed_fields", false]], "model_computed_fields (gammapy.estimators.fluxmetadata attribute)": [[126, "gammapy.estimators.FluxMetaData.model_computed_fields", false]], "model_config (gammapy.analysis.analysisconfig attribute)": [[16, "gammapy.analysis.AnalysisConfig.model_config", false]], "model_config (gammapy.data.eventlistmetadata attribute)": [[84, "gammapy.data.EventListMetaData.model_config", false]], "model_config (gammapy.data.observationmetadata attribute)": [[90, "gammapy.data.ObservationMetaData.model_config", false]], "model_config (gammapy.datasets.mapdatasetmetadata attribute)": [[105, "gammapy.datasets.MapDatasetMetaData.model_config", false]], "model_config (gammapy.estimators.fluxmetadata attribute)": [[126, "gammapy.estimators.FluxMetaData.model_config", false]], "model_constraints (gammapy.astro.population.casebattacharya1998 attribute)": [[28, "gammapy.astro.population.CaseBattacharya1998.model_constraints", false]], "model_constraints (gammapy.astro.population.exponential attribute)": [[29, "gammapy.astro.population.Exponential.model_constraints", false]], "model_constraints (gammapy.astro.population.faucherkaspi2006 attribute)": [[30, "gammapy.astro.population.FaucherKaspi2006.model_constraints", false]], "model_constraints (gammapy.astro.population.faucherkaspi2006velocitybimodal attribute)": [[31, "gammapy.astro.population.FaucherKaspi2006VelocityBimodal.model_constraints", false]], "model_constraints (gammapy.astro.population.faucherkaspi2006velocitymaxwellian attribute)": [[32, "gammapy.astro.population.FaucherKaspi2006VelocityMaxwellian.model_constraints", false]], "model_constraints (gammapy.astro.population.lorimer2006 attribute)": [[35, "gammapy.astro.population.Lorimer2006.model_constraints", false]], "model_constraints (gammapy.astro.population.paczynski1990 attribute)": [[36, "gammapy.astro.population.Paczynski1990.model_constraints", false]], "model_constraints (gammapy.astro.population.paczynski1990velocity attribute)": [[37, "gammapy.astro.population.Paczynski1990Velocity.model_constraints", false]], "model_constraints (gammapy.astro.population.yusifovkucuk2004 attribute)": [[39, "gammapy.astro.population.YusifovKucuk2004.model_constraints", false]], "model_constraints (gammapy.astro.population.yusifovkucuk2004b attribute)": [[40, "gammapy.astro.population.YusifovKucuk2004B.model_constraints", false]], "model_construct() (gammapy.analysis.analysisconfig class method)": [[16, "gammapy.analysis.AnalysisConfig.model_construct", false]], "model_construct() (gammapy.data.eventlistmetadata class method)": [[84, "gammapy.data.EventListMetaData.model_construct", false]], "model_construct() (gammapy.data.observationmetadata class method)": [[90, "gammapy.data.ObservationMetaData.model_construct", false]], "model_construct() (gammapy.datasets.mapdatasetmetadata class method)": [[105, "gammapy.datasets.MapDatasetMetaData.model_construct", false]], "model_construct() (gammapy.estimators.fluxmetadata class method)": [[126, "gammapy.estimators.FluxMetaData.model_construct", false]], "model_copy() (gammapy.analysis.analysisconfig method)": [[16, "gammapy.analysis.AnalysisConfig.model_copy", false]], "model_copy() (gammapy.data.eventlistmetadata method)": [[84, "gammapy.data.EventListMetaData.model_copy", false]], "model_copy() (gammapy.data.observationmetadata method)": [[90, "gammapy.data.ObservationMetaData.model_copy", false]], "model_copy() (gammapy.datasets.mapdatasetmetadata method)": [[105, "gammapy.datasets.MapDatasetMetaData.model_copy", false]], "model_copy() (gammapy.estimators.fluxmetadata method)": [[126, "gammapy.estimators.FluxMetaData.model_copy", false]], "model_dump() (gammapy.analysis.analysisconfig method)": [[16, "gammapy.analysis.AnalysisConfig.model_dump", false]], "model_dump() (gammapy.data.eventlistmetadata method)": [[84, "gammapy.data.EventListMetaData.model_dump", false]], "model_dump() (gammapy.data.observationmetadata method)": [[90, "gammapy.data.ObservationMetaData.model_dump", false]], "model_dump() (gammapy.datasets.mapdatasetmetadata method)": [[105, "gammapy.datasets.MapDatasetMetaData.model_dump", false]], "model_dump() (gammapy.estimators.fluxmetadata method)": [[126, "gammapy.estimators.FluxMetaData.model_dump", false]], "model_dump_json() (gammapy.analysis.analysisconfig method)": [[16, "gammapy.analysis.AnalysisConfig.model_dump_json", false]], "model_dump_json() (gammapy.data.eventlistmetadata method)": [[84, "gammapy.data.EventListMetaData.model_dump_json", false]], "model_dump_json() (gammapy.data.observationmetadata method)": [[90, "gammapy.data.ObservationMetaData.model_dump_json", false]], "model_dump_json() (gammapy.datasets.mapdatasetmetadata method)": [[105, "gammapy.datasets.MapDatasetMetaData.model_dump_json", false]], "model_dump_json() (gammapy.estimators.fluxmetadata method)": [[126, "gammapy.estimators.FluxMetaData.model_dump_json", false]], "model_extra (gammapy.analysis.analysisconfig attribute)": [[16, "gammapy.analysis.AnalysisConfig.model_extra", false]], "model_extra (gammapy.data.eventlistmetadata attribute)": [[84, "gammapy.data.EventListMetaData.model_extra", false]], "model_extra (gammapy.data.observationmetadata attribute)": [[90, "gammapy.data.ObservationMetaData.model_extra", false]], "model_extra (gammapy.datasets.mapdatasetmetadata attribute)": [[105, "gammapy.datasets.MapDatasetMetaData.model_extra", false]], "model_extra (gammapy.estimators.fluxmetadata attribute)": [[126, "gammapy.estimators.FluxMetaData.model_extra", false]], "model_fields (gammapy.analysis.analysisconfig attribute)": [[16, "gammapy.analysis.AnalysisConfig.model_fields", false]], "model_fields (gammapy.data.eventlistmetadata attribute)": [[84, "gammapy.data.EventListMetaData.model_fields", false]], "model_fields (gammapy.data.observationmetadata attribute)": [[90, "gammapy.data.ObservationMetaData.model_fields", false]], "model_fields (gammapy.datasets.mapdatasetmetadata attribute)": [[105, "gammapy.datasets.MapDatasetMetaData.model_fields", false]], "model_fields (gammapy.estimators.fluxmetadata attribute)": [[126, "gammapy.estimators.FluxMetaData.model_fields", false]], "model_fields_set (gammapy.analysis.analysisconfig attribute)": [[16, "gammapy.analysis.AnalysisConfig.model_fields_set", false]], "model_fields_set (gammapy.data.eventlistmetadata attribute)": [[84, "gammapy.data.EventListMetaData.model_fields_set", false]], "model_fields_set (gammapy.data.observationmetadata attribute)": [[90, "gammapy.data.ObservationMetaData.model_fields_set", false]], "model_fields_set (gammapy.datasets.mapdatasetmetadata attribute)": [[105, "gammapy.datasets.MapDatasetMetaData.model_fields_set", false]], "model_fields_set (gammapy.estimators.fluxmetadata attribute)": [[126, "gammapy.estimators.FluxMetaData.model_fields_set", false]], "model_json_schema() (gammapy.analysis.analysisconfig class method)": [[16, "gammapy.analysis.AnalysisConfig.model_json_schema", false]], "model_json_schema() (gammapy.data.eventlistmetadata class method)": [[84, "gammapy.data.EventListMetaData.model_json_schema", false]], "model_json_schema() (gammapy.data.observationmetadata class method)": [[90, "gammapy.data.ObservationMetaData.model_json_schema", false]], "model_json_schema() (gammapy.datasets.mapdatasetmetadata class method)": [[105, "gammapy.datasets.MapDatasetMetaData.model_json_schema", false]], "model_json_schema() (gammapy.estimators.fluxmetadata class method)": [[126, "gammapy.estimators.FluxMetaData.model_json_schema", false]], "model_parametrized_name() (gammapy.analysis.analysisconfig class method)": [[16, "gammapy.analysis.AnalysisConfig.model_parametrized_name", false]], "model_parametrized_name() (gammapy.data.eventlistmetadata class method)": [[84, "gammapy.data.EventListMetaData.model_parametrized_name", false]], "model_parametrized_name() (gammapy.data.observationmetadata class method)": [[90, "gammapy.data.ObservationMetaData.model_parametrized_name", false]], "model_parametrized_name() (gammapy.datasets.mapdatasetmetadata class method)": [[105, "gammapy.datasets.MapDatasetMetaData.model_parametrized_name", false]], "model_parametrized_name() (gammapy.estimators.fluxmetadata class method)": [[126, "gammapy.estimators.FluxMetaData.model_parametrized_name", false]], "model_post_init() (gammapy.analysis.analysisconfig method)": [[16, "gammapy.analysis.AnalysisConfig.model_post_init", false]], "model_post_init() (gammapy.data.eventlistmetadata method)": [[84, "gammapy.data.EventListMetaData.model_post_init", false]], "model_post_init() (gammapy.data.observationmetadata method)": [[90, "gammapy.data.ObservationMetaData.model_post_init", false]], "model_post_init() (gammapy.datasets.mapdatasetmetadata method)": [[105, "gammapy.datasets.MapDatasetMetaData.model_post_init", false]], "model_post_init() (gammapy.estimators.fluxmetadata method)": [[126, "gammapy.estimators.FluxMetaData.model_post_init", false]], "model_rebuild() (gammapy.analysis.analysisconfig class method)": [[16, "gammapy.analysis.AnalysisConfig.model_rebuild", false]], "model_rebuild() (gammapy.data.eventlistmetadata class method)": [[84, "gammapy.data.EventListMetaData.model_rebuild", false]], "model_rebuild() (gammapy.data.observationmetadata class method)": [[90, "gammapy.data.ObservationMetaData.model_rebuild", false]], "model_rebuild() (gammapy.datasets.mapdatasetmetadata class method)": [[105, "gammapy.datasets.MapDatasetMetaData.model_rebuild", false]], "model_rebuild() (gammapy.estimators.fluxmetadata class method)": [[126, "gammapy.estimators.FluxMetaData.model_rebuild", false]], "model_registry (in module gammapy.modeling.models)": [[246, "gammapy.modeling.models.MODEL_REGISTRY", false]], "model_set_axis (gammapy.astro.population.casebattacharya1998 attribute)": [[28, "gammapy.astro.population.CaseBattacharya1998.model_set_axis", false]], "model_set_axis (gammapy.astro.population.exponential attribute)": [[29, "gammapy.astro.population.Exponential.model_set_axis", false]], "model_set_axis (gammapy.astro.population.faucherkaspi2006 attribute)": [[30, "gammapy.astro.population.FaucherKaspi2006.model_set_axis", false]], "model_set_axis (gammapy.astro.population.faucherkaspi2006velocitybimodal attribute)": [[31, "gammapy.astro.population.FaucherKaspi2006VelocityBimodal.model_set_axis", false]], "model_set_axis (gammapy.astro.population.faucherkaspi2006velocitymaxwellian attribute)": [[32, "gammapy.astro.population.FaucherKaspi2006VelocityMaxwellian.model_set_axis", false]], "model_set_axis (gammapy.astro.population.lorimer2006 attribute)": [[35, "gammapy.astro.population.Lorimer2006.model_set_axis", false]], "model_set_axis (gammapy.astro.population.paczynski1990 attribute)": [[36, "gammapy.astro.population.Paczynski1990.model_set_axis", false]], "model_set_axis (gammapy.astro.population.paczynski1990velocity attribute)": [[37, "gammapy.astro.population.Paczynski1990Velocity.model_set_axis", false]], "model_set_axis (gammapy.astro.population.yusifovkucuk2004 attribute)": [[39, "gammapy.astro.population.YusifovKucuk2004.model_set_axis", false]], "model_set_axis (gammapy.astro.population.yusifovkucuk2004b attribute)": [[40, "gammapy.astro.population.YusifovKucuk2004B.model_set_axis", false]], "model_validate() (gammapy.analysis.analysisconfig class method)": [[16, "gammapy.analysis.AnalysisConfig.model_validate", false]], "model_validate() (gammapy.data.eventlistmetadata class method)": [[84, "gammapy.data.EventListMetaData.model_validate", false]], "model_validate() (gammapy.data.observationmetadata class method)": [[90, "gammapy.data.ObservationMetaData.model_validate", false]], "model_validate() (gammapy.datasets.mapdatasetmetadata class method)": [[105, "gammapy.datasets.MapDatasetMetaData.model_validate", false]], "model_validate() (gammapy.estimators.fluxmetadata class method)": [[126, "gammapy.estimators.FluxMetaData.model_validate", false]], "model_validate_json() (gammapy.analysis.analysisconfig class method)": [[16, "gammapy.analysis.AnalysisConfig.model_validate_json", false]], "model_validate_json() (gammapy.data.eventlistmetadata class method)": [[84, "gammapy.data.EventListMetaData.model_validate_json", false]], "model_validate_json() (gammapy.data.observationmetadata class method)": [[90, "gammapy.data.ObservationMetaData.model_validate_json", false]], "model_validate_json() (gammapy.datasets.mapdatasetmetadata class method)": [[105, "gammapy.datasets.MapDatasetMetaData.model_validate_json", false]], "model_validate_json() (gammapy.estimators.fluxmetadata class method)": [[126, "gammapy.estimators.FluxMetaData.model_validate_json", false]], "model_validate_strings() (gammapy.analysis.analysisconfig class method)": [[16, "gammapy.analysis.AnalysisConfig.model_validate_strings", false]], "model_validate_strings() (gammapy.data.eventlistmetadata class method)": [[84, "gammapy.data.EventListMetaData.model_validate_strings", false]], "model_validate_strings() (gammapy.data.observationmetadata class method)": [[90, "gammapy.data.ObservationMetaData.model_validate_strings", false]], "model_validate_strings() (gammapy.datasets.mapdatasetmetadata class method)": [[105, "gammapy.datasets.MapDatasetMetaData.model_validate_strings", false]], "model_validate_strings() (gammapy.estimators.fluxmetadata class method)": [[126, "gammapy.estimators.FluxMetaData.model_validate_strings", false]], "modelbase (class in gammapy.modeling.models)": [[249, "gammapy.modeling.models.ModelBase", false]], "models (class in gammapy.modeling.models)": [[250, "gammapy.modeling.models.Models", false]], "models (gammapy.analysis.analysis attribute)": [[15, "gammapy.analysis.Analysis.models", false]], "models (gammapy.datasets.datasets attribute)": [[100, "gammapy.datasets.Datasets.models", false]], "models (gammapy.datasets.fluxpointsdataset attribute)": [[102, "gammapy.datasets.FluxPointsDataset.models", false]], "models (gammapy.datasets.mapdataset attribute)": [[103, "gammapy.datasets.MapDataset.models", false]], "models (gammapy.datasets.mapdatasetonoff attribute)": [[106, "gammapy.datasets.MapDatasetOnOff.models", false]], "models (gammapy.datasets.spectrumdataset attribute)": [[110, "gammapy.datasets.SpectrumDataset.models", false]], "models (gammapy.datasets.spectrumdatasetonoff attribute)": [[111, "gammapy.datasets.SpectrumDatasetOnOff.models", false]], "models (gammapy.modeling.fitresult attribute)": [[214, "gammapy.modeling.FitResult.models", false]], "models (gammapy.modeling.optimizeresult attribute)": [[215, "gammapy.modeling.OptimizeResult.models", false]], "module": [[0, "module-gammapy.analysis", false], [1, "module-gammapy.astro.darkmatter", false], [1, "module-gammapy.astro.population", false], [1, "module-gammapy.astro.source", false], [2, "module-gammapy.catalog", false], [3, "module-gammapy.data", false], [4, "module-gammapy.datasets", false], [4, "module-gammapy.datasets.utils", false], [5, "module-gammapy.estimators", false], [5, "module-gammapy.estimators.utils", false], [7, "module-gammapy.irf", false], [8, "module-gammapy.makers", false], [8, "module-gammapy.makers.utils", false], [9, "module-gammapy.maps", false], [10, "module-gammapy.modeling", false], [10, "module-gammapy.modeling.models", false], [10, "module-gammapy.modeling.models.utils", false], [12, "module-gammapy.stats", false], [13, "module-gammapy.utils.cluster", false], [13, "module-gammapy.utils.coordinates", false], [13, "module-gammapy.utils.fits", false], [13, "module-gammapy.utils.integrate", false], [13, "module-gammapy.utils.interpolation", false], [13, "module-gammapy.utils.parallel", false], [13, "module-gammapy.utils.random", false], [13, "module-gammapy.utils.regions", false], [13, "module-gammapy.utils.scripts", false], [13, "module-gammapy.utils.table", false], [13, "module-gammapy.utils.testing", false], [13, "module-gammapy.utils.time", false], [13, "module-gammapy.utils.units", false], [14, "module-gammapy.visualization", false]], "mooreprofile (class in gammapy.astro.darkmatter)": [[24, "gammapy.astro.darkmatter.MooreProfile", false]], "more() (gammapy.data.hduindextable method)": [[87, "gammapy.data.HDUIndexTable.more", false]], "more() (gammapy.data.observationtable method)": [[91, "gammapy.data.ObservationTable.more", false]], "motion_since_birth() (in module gammapy.utils.coordinates)": [[314, "gammapy.utils.coordinates.motion_since_birth", false]], "mpl_plot_check() (in module gammapy.utils.testing)": [[361, "gammapy.utils.testing.mpl_plot_check", false]], "mu (gammapy.modeling.models.gaussianprior attribute)": [[235, "gammapy.modeling.models.GaussianPrior.mu", false]], "multiprocessing_manager (class in gammapy.utils.parallel)": [[330, "gammapy.utils.parallel.multiprocessing_manager", false]], "n_bkg (gammapy.stats.cashcountsstatistic attribute)": [[291, "gammapy.stats.CashCountsStatistic.n_bkg", false]], "n_bkg (gammapy.stats.wstatcountsstatistic attribute)": [[293, "gammapy.stats.WStatCountsStatistic.n_bkg", false]], "n_dof (gammapy.estimators.fluxmaps attribute)": [[125, "gammapy.estimators.FluxMaps.n_dof", false]], "n_dof (gammapy.estimators.fluxpoints attribute)": [[127, "gammapy.estimators.FluxPoints.n_dof", false]], "n_inputs (gammapy.astro.population.casebattacharya1998 attribute)": [[28, "gammapy.astro.population.CaseBattacharya1998.n_inputs", false]], "n_inputs (gammapy.astro.population.exponential attribute)": [[29, "gammapy.astro.population.Exponential.n_inputs", false]], "n_inputs (gammapy.astro.population.faucherkaspi2006 attribute)": [[30, "gammapy.astro.population.FaucherKaspi2006.n_inputs", false]], "n_inputs (gammapy.astro.population.faucherkaspi2006velocitybimodal attribute)": [[31, "gammapy.astro.population.FaucherKaspi2006VelocityBimodal.n_inputs", false]], "n_inputs (gammapy.astro.population.faucherkaspi2006velocitymaxwellian attribute)": [[32, "gammapy.astro.population.FaucherKaspi2006VelocityMaxwellian.n_inputs", false]], "n_inputs (gammapy.astro.population.lorimer2006 attribute)": [[35, "gammapy.astro.population.Lorimer2006.n_inputs", false]], "n_inputs (gammapy.astro.population.paczynski1990 attribute)": [[36, "gammapy.astro.population.Paczynski1990.n_inputs", false]], "n_inputs (gammapy.astro.population.paczynski1990velocity attribute)": [[37, "gammapy.astro.population.Paczynski1990Velocity.n_inputs", false]], "n_inputs (gammapy.astro.population.yusifovkucuk2004 attribute)": [[39, "gammapy.astro.population.YusifovKucuk2004.n_inputs", false]], "n_inputs (gammapy.astro.population.yusifovkucuk2004b attribute)": [[40, "gammapy.astro.population.YusifovKucuk2004B.n_inputs", false]], "n_jobs (gammapy.data.observationseventssampler attribute)": [[93, "gammapy.data.ObservationsEventsSampler.n_jobs", false]], "n_jobs (gammapy.estimators.fluxpointsestimator attribute)": [[128, "gammapy.estimators.FluxPointsEstimator.n_jobs", false]], "n_jobs (gammapy.estimators.fluxprofileestimator attribute)": [[129, "gammapy.estimators.FluxProfileEstimator.n_jobs", false]], "n_jobs (gammapy.estimators.lightcurveestimator attribute)": [[132, "gammapy.estimators.LightCurveEstimator.n_jobs", false]], "n_jobs (gammapy.estimators.tsmapestimator attribute)": [[135, "gammapy.estimators.TSMapEstimator.n_jobs", false]], "n_jobs (gammapy.makers.datasetsmaker attribute)": [[171, "gammapy.makers.DatasetsMaker.n_jobs", false]], "n_jobs_default (in module gammapy.utils.parallel)": [[328, "gammapy.utils.parallel.N_JOBS_DEFAULT", false]], "n_models (gammapy.catalog.sourcecatalogobject2hwc attribute)": [[72, "gammapy.catalog.SourceCatalogObject2HWC.n_models", false]], "n_models (gammapy.catalog.sourcecatalogobject3hwc attribute)": [[76, "gammapy.catalog.SourceCatalogObject3HWC.n_models", false]], "n_outputs (gammapy.astro.population.casebattacharya1998 attribute)": [[28, "gammapy.astro.population.CaseBattacharya1998.n_outputs", false]], "n_outputs (gammapy.astro.population.exponential attribute)": [[29, "gammapy.astro.population.Exponential.n_outputs", false]], "n_outputs (gammapy.astro.population.faucherkaspi2006 attribute)": [[30, "gammapy.astro.population.FaucherKaspi2006.n_outputs", false]], "n_outputs (gammapy.astro.population.faucherkaspi2006velocitybimodal attribute)": [[31, "gammapy.astro.population.FaucherKaspi2006VelocityBimodal.n_outputs", false]], "n_outputs (gammapy.astro.population.faucherkaspi2006velocitymaxwellian attribute)": [[32, "gammapy.astro.population.FaucherKaspi2006VelocityMaxwellian.n_outputs", false]], "n_outputs (gammapy.astro.population.lorimer2006 attribute)": [[35, "gammapy.astro.population.Lorimer2006.n_outputs", false]], "n_outputs (gammapy.astro.population.paczynski1990 attribute)": [[36, "gammapy.astro.population.Paczynski1990.n_outputs", false]], "n_outputs (gammapy.astro.population.paczynski1990velocity attribute)": [[37, "gammapy.astro.population.Paczynski1990Velocity.n_outputs", false]], "n_outputs (gammapy.astro.population.yusifovkucuk2004 attribute)": [[39, "gammapy.astro.population.YusifovKucuk2004.n_outputs", false]], "n_outputs (gammapy.astro.population.yusifovkucuk2004b attribute)": [[40, "gammapy.astro.population.YusifovKucuk2004B.n_outputs", false]], "n_sig (gammapy.stats.cashcountsstatistic attribute)": [[291, "gammapy.stats.CashCountsStatistic.n_sig", false]], "n_sig (gammapy.stats.wstatcountsstatistic attribute)": [[293, "gammapy.stats.WStatCountsStatistic.n_sig", false]], "n_sig_matching_significance() (gammapy.stats.cashcountsstatistic method)": [[291, "gammapy.stats.CashCountsStatistic.n_sig_matching_significance", false]], "n_sig_matching_significance() (gammapy.stats.wstatcountsstatistic method)": [[293, "gammapy.stats.WStatCountsStatistic.n_sig_matching_significance", false]], "n_sigma (gammapy.estimators.fluxmaps attribute)": [[125, "gammapy.estimators.FluxMaps.n_sigma", false]], "n_sigma (gammapy.estimators.fluxpoints attribute)": [[127, "gammapy.estimators.FluxPoints.n_sigma", false]], "n_sigma_ul (gammapy.estimators.fluxmaps attribute)": [[125, "gammapy.estimators.FluxMaps.n_sigma_ul", false]], "n_sigma_ul (gammapy.estimators.fluxpoints attribute)": [[127, "gammapy.estimators.FluxPoints.n_sigma_ul", false]], "n_submodels (gammapy.astro.population.casebattacharya1998 attribute)": [[28, "gammapy.astro.population.CaseBattacharya1998.n_submodels", false]], "n_submodels (gammapy.astro.population.exponential attribute)": [[29, "gammapy.astro.population.Exponential.n_submodels", false]], "n_submodels (gammapy.astro.population.faucherkaspi2006 attribute)": [[30, "gammapy.astro.population.FaucherKaspi2006.n_submodels", false]], "n_submodels (gammapy.astro.population.faucherkaspi2006velocitybimodal attribute)": [[31, "gammapy.astro.population.FaucherKaspi2006VelocityBimodal.n_submodels", false]], "n_submodels (gammapy.astro.population.faucherkaspi2006velocitymaxwellian attribute)": [[32, "gammapy.astro.population.FaucherKaspi2006VelocityMaxwellian.n_submodels", false]], "n_submodels (gammapy.astro.population.lorimer2006 attribute)": [[35, "gammapy.astro.population.Lorimer2006.n_submodels", false]], "n_submodels (gammapy.astro.population.paczynski1990 attribute)": [[36, "gammapy.astro.population.Paczynski1990.n_submodels", false]], "n_submodels (gammapy.astro.population.paczynski1990velocity attribute)": [[37, "gammapy.astro.population.Paczynski1990Velocity.n_submodels", false]], "n_submodels (gammapy.astro.population.yusifovkucuk2004 attribute)": [[39, "gammapy.astro.population.YusifovKucuk2004.n_submodels", false]], "n_submodels (gammapy.astro.population.yusifovkucuk2004b attribute)": [[40, "gammapy.astro.population.YusifovKucuk2004B.n_submodels", false]], "naimaspectralmodel (class in gammapy.modeling.models)": [[251, "gammapy.modeling.models.NaimaSpectralModel", false]], "name (gammapy.astro.population.casebattacharya1998 attribute)": [[28, "gammapy.astro.population.CaseBattacharya1998.name", false]], "name (gammapy.astro.population.exponential attribute)": [[29, "gammapy.astro.population.Exponential.name", false]], "name (gammapy.astro.population.faucherkaspi2006 attribute)": [[30, "gammapy.astro.population.FaucherKaspi2006.name", false]], "name (gammapy.astro.population.faucherkaspi2006velocitybimodal attribute)": [[31, "gammapy.astro.population.FaucherKaspi2006VelocityBimodal.name", false]], "name (gammapy.astro.population.faucherkaspi2006velocitymaxwellian attribute)": [[32, "gammapy.astro.population.FaucherKaspi2006VelocityMaxwellian.name", false]], "name (gammapy.astro.population.lorimer2006 attribute)": [[35, "gammapy.astro.population.Lorimer2006.name", false]], "name (gammapy.astro.population.paczynski1990 attribute)": [[36, "gammapy.astro.population.Paczynski1990.name", false]], "name (gammapy.astro.population.paczynski1990velocity attribute)": [[37, "gammapy.astro.population.Paczynski1990Velocity.name", false]], "name (gammapy.astro.population.yusifovkucuk2004 attribute)": [[39, "gammapy.astro.population.YusifovKucuk2004.name", false]], "name (gammapy.astro.population.yusifovkucuk2004b attribute)": [[40, "gammapy.astro.population.YusifovKucuk2004B.name", false]], "name (gammapy.catalog.sourcecatalogobject attribute)": [[69, "gammapy.catalog.SourceCatalogObject.name", false]], "name (gammapy.catalog.sourcecatalogobject1lhaaso attribute)": [[70, "gammapy.catalog.SourceCatalogObject1LHAASO.name", false]], "name (gammapy.catalog.sourcecatalogobject2fhl attribute)": [[71, "gammapy.catalog.SourceCatalogObject2FHL.name", false]], "name (gammapy.catalog.sourcecatalogobject2hwc attribute)": [[72, "gammapy.catalog.SourceCatalogObject2HWC.name", false]], "name (gammapy.catalog.sourcecatalogobject2pc attribute)": [[73, "gammapy.catalog.SourceCatalogObject2PC.name", false]], "name (gammapy.catalog.sourcecatalogobject3fgl attribute)": [[74, "gammapy.catalog.SourceCatalogObject3FGL.name", false]], "name (gammapy.catalog.sourcecatalogobject3fhl attribute)": [[75, "gammapy.catalog.SourceCatalogObject3FHL.name", false]], "name (gammapy.catalog.sourcecatalogobject3hwc attribute)": [[76, "gammapy.catalog.SourceCatalogObject3HWC.name", false]], "name (gammapy.catalog.sourcecatalogobject3pc attribute)": [[77, "gammapy.catalog.SourceCatalogObject3PC.name", false]], "name (gammapy.catalog.sourcecatalogobject4fgl attribute)": [[78, "gammapy.catalog.SourceCatalogObject4FGL.name", false]], "name (gammapy.catalog.sourcecatalogobjectgammacat attribute)": [[79, "gammapy.catalog.SourceCatalogObjectGammaCat.name", false]], "name (gammapy.catalog.sourcecatalogobjecthgps attribute)": [[80, "gammapy.catalog.SourceCatalogObjectHGPS.name", false]], "name (gammapy.catalog.sourcecatalogobjecthgpscomponent attribute)": [[81, "gammapy.catalog.SourceCatalogObjectHGPSComponent.name", false]], "name (gammapy.datasets.dataset attribute)": [[99, "gammapy.datasets.Dataset.name", false]], "name (gammapy.datasets.fluxpointsdataset attribute)": [[102, "gammapy.datasets.FluxPointsDataset.name", false]], "name (gammapy.datasets.mapdataset attribute)": [[103, "gammapy.datasets.MapDataset.name", false]], "name (gammapy.datasets.mapdatasetonoff attribute)": [[106, "gammapy.datasets.MapDatasetOnOff.name", false]], "name (gammapy.datasets.spectrumdataset attribute)": [[110, "gammapy.datasets.SpectrumDataset.name", false]], "name (gammapy.datasets.spectrumdatasetonoff attribute)": [[111, "gammapy.datasets.SpectrumDatasetOnOff.name", false]], "name (gammapy.maps.labelmapaxis attribute)": [[197, "gammapy.maps.LabelMapAxis.name", false]], "name (gammapy.maps.mapaxis attribute)": [[200, "gammapy.maps.MapAxis.name", false]], "name (gammapy.maps.timemapaxis attribute)": [[205, "gammapy.maps.TimeMapAxis.name", false]], "name (gammapy.modeling.models.fovbackgroundmodel attribute)": [[234, "gammapy.modeling.models.FoVBackgroundModel.name", false]], "name (gammapy.modeling.models.skymodel attribute)": [[266, "gammapy.modeling.models.SkyModel.name", false]], "name (gammapy.modeling.models.templatenpredmodel attribute)": [[276, "gammapy.modeling.models.TemplateNPredModel.name", false]], "name (gammapy.modeling.parameter attribute)": [[216, "gammapy.modeling.Parameter.name", false]], "name (gammapy.modeling.priorparameter attribute)": [[218, "gammapy.modeling.PriorParameter.name", false]], "names (gammapy.datasets.datasets attribute)": [[100, "gammapy.datasets.Datasets.names", false]], "names (gammapy.maps.mapaxes attribute)": [[199, "gammapy.maps.MapAxes.names", false]], "names (gammapy.modeling.models.datasetmodels attribute)": [[226, "gammapy.modeling.models.DatasetModels.names", false]], "names (gammapy.modeling.models.models attribute)": [[250, "gammapy.modeling.models.Models.names", false]], "names (gammapy.modeling.parameters attribute)": [[217, "gammapy.modeling.Parameters.names", false]], "names (gammapy.modeling.priorparameters attribute)": [[219, "gammapy.modeling.PriorParameters.names", false]], "nbin (gammapy.maps.labelmapaxis attribute)": [[197, "gammapy.maps.LabelMapAxis.nbin", false]], "nbin (gammapy.maps.mapaxis attribute)": [[200, "gammapy.maps.MapAxis.nbin", false]], "nbin (gammapy.maps.timemapaxis attribute)": [[205, "gammapy.maps.TimeMapAxis.nbin", false]], "nbin_per_decade (gammapy.maps.mapaxis attribute)": [[200, "gammapy.maps.MapAxis.nbin_per_decade", false]], "ndim (gammapy.maps.hpxgeom attribute)": [[194, "gammapy.maps.HpxGeom.ndim", false]], "ndim (gammapy.maps.mapcoord attribute)": [[201, "gammapy.maps.MapCoord.ndim", false]], "ndim (gammapy.maps.wcsgeom attribute)": [[206, "gammapy.maps.WcsGeom.ndim", false]], "nest (gammapy.maps.hpxgeom attribute)": [[194, "gammapy.maps.HpxGeom.nest", false]], "nfev (gammapy.modeling.fitresult attribute)": [[214, "gammapy.modeling.FitResult.nfev", false]], "nfev (gammapy.modeling.optimizeresult attribute)": [[215, "gammapy.modeling.OptimizeResult.nfev", false]], "nfwprofile (class in gammapy.astro.darkmatter)": [[25, "gammapy.astro.darkmatter.NFWProfile", false]], "niter (gammapy.estimators.fluxmaps attribute)": [[125, "gammapy.estimators.FluxMaps.niter", false]], "niter (gammapy.estimators.fluxpoints attribute)": [[127, "gammapy.estimators.FluxPoints.niter", false]], "node_type (gammapy.maps.labelmapaxis attribute)": [[197, "gammapy.maps.LabelMapAxis.node_type", false]], "node_type (gammapy.maps.mapaxis attribute)": [[200, "gammapy.maps.MapAxis.node_type", false]], "node_type (gammapy.maps.timemapaxis attribute)": [[205, "gammapy.maps.TimeMapAxis.node_type", false]], "norm (gammapy.estimators.fluxmaps attribute)": [[125, "gammapy.estimators.FluxMaps.norm", false]], "norm (gammapy.estimators.fluxpoints attribute)": [[127, "gammapy.estimators.FluxPoints.norm", false]], "norm (gammapy.modeling.models.expcutoffpowerlawnormspectralmodel attribute)": [[231, "gammapy.modeling.models.ExpCutoffPowerLawNormSpectralModel.norm", false]], "norm (gammapy.modeling.models.logparabolanormspectralmodel attribute)": [[243, "gammapy.modeling.models.LogParabolaNormSpectralModel.norm", false]], "norm (gammapy.modeling.models.meyercrabspectralmodel attribute)": [[247, "gammapy.modeling.models.MeyerCrabSpectralModel.norm", false]], "norm (gammapy.modeling.models.powerlawnormspectralmodel attribute)": [[256, "gammapy.modeling.models.PowerLawNormSpectralModel.norm", false]], "norm (gammapy.modeling.models.scalespectralmodel attribute)": [[262, "gammapy.modeling.models.ScaleSpectralModel.norm", false]], "norm_bounds_cython() (in module gammapy.stats)": [[305, "gammapy.stats.norm_bounds_cython", false]], "norm_err (gammapy.estimators.fluxmaps attribute)": [[125, "gammapy.estimators.FluxMaps.norm_err", false]], "norm_err (gammapy.estimators.fluxpoints attribute)": [[127, "gammapy.estimators.FluxPoints.norm_err", false]], "norm_errn (gammapy.estimators.fluxmaps attribute)": [[125, "gammapy.estimators.FluxMaps.norm_errn", false]], "norm_errn (gammapy.estimators.fluxpoints attribute)": [[127, "gammapy.estimators.FluxPoints.norm_errn", false]], "norm_errp (gammapy.estimators.fluxmaps attribute)": [[125, "gammapy.estimators.FluxMaps.norm_errp", false]], "norm_errp (gammapy.estimators.fluxpoints attribute)": [[127, "gammapy.estimators.FluxPoints.norm_errp", false]], "norm_sensitivity (gammapy.estimators.fluxmaps attribute)": [[125, "gammapy.estimators.FluxMaps.norm_sensitivity", false]], "norm_sensitivity (gammapy.estimators.fluxpoints attribute)": [[127, "gammapy.estimators.FluxPoints.norm_sensitivity", false]], "norm_ul (gammapy.estimators.fluxmaps attribute)": [[125, "gammapy.estimators.FluxMaps.norm_ul", false]], "norm_ul (gammapy.estimators.fluxpoints attribute)": [[127, "gammapy.estimators.FluxPoints.norm_ul", false]], "normalize() (gammapy.estimators.imageprofile method)": [[130, "gammapy.estimators.ImageProfile.normalize", false]], "normalize() (gammapy.irf.background2d method)": [[149, "gammapy.irf.Background2D.normalize", false]], "normalize() (gammapy.irf.background3d method)": [[150, "gammapy.irf.Background3D.normalize", false]], "normalize() (gammapy.irf.backgroundirf method)": [[151, "gammapy.irf.BackgroundIRF.normalize", false]], "normalize() (gammapy.irf.edispkernel method)": [[152, "gammapy.irf.EDispKernel.normalize", false]], "normalize() (gammapy.irf.edispmap method)": [[154, "gammapy.irf.EDispMap.normalize", false]], "normalize() (gammapy.irf.effectiveareatable2d method)": [[155, "gammapy.irf.EffectiveAreaTable2D.normalize", false]], "normalize() (gammapy.irf.energydependentmultigausspsf method)": [[156, "gammapy.irf.EnergyDependentMultiGaussPSF.normalize", false]], "normalize() (gammapy.irf.energydispersion2d method)": [[157, "gammapy.irf.EnergyDispersion2D.normalize", false]], "normalize() (gammapy.irf.irf method)": [[159, "gammapy.irf.IRF.normalize", false]], "normalize() (gammapy.irf.parametricpsf method)": [[166, "gammapy.irf.ParametricPSF.normalize", false]], "normalize() (gammapy.irf.psf3d method)": [[162, "gammapy.irf.PSF3D.normalize", false]], "normalize() (gammapy.irf.psfkernel method)": [[163, "gammapy.irf.PSFKernel.normalize", false]], "normalize() (gammapy.irf.psfking method)": [[164, "gammapy.irf.PSFKing.normalize", false]], "normalize() (gammapy.irf.psfmap method)": [[165, "gammapy.irf.PSFMap.normalize", false]], "normalize() (gammapy.irf.radmax2d method)": [[167, "gammapy.irf.RadMax2D.normalize", false]], "normalize() (gammapy.irf.recopsfmap method)": [[168, "gammapy.irf.RecoPSFMap.normalize", false]], "normalize() (gammapy.maps.hpxmap method)": [[195, "gammapy.maps.HpxMap.normalize", false]], "normalize() (gammapy.maps.hpxndmap method)": [[196, "gammapy.maps.HpxNDMap.normalize", false]], "normalize() (gammapy.maps.map method)": [[198, "gammapy.maps.Map.normalize", false]], "normalize() (gammapy.maps.regionndmap method)": [[204, "gammapy.maps.RegionNDMap.normalize", false]], "normalize() (gammapy.maps.wcsmap method)": [[207, "gammapy.maps.WcsMap.normalize", false]], "normalize() (gammapy.maps.wcsndmap method)": [[208, "gammapy.maps.WcsNDMap.normalize", false]], "normalize() (in module gammapy.utils.random)": [[335, "gammapy.utils.random.normalize", false]], "norms (gammapy.modeling.models.piecewisenormspatialmodel attribute)": [[252, "gammapy.modeling.models.PiecewiseNormSpatialModel.norms", false]], "norms (gammapy.modeling.models.piecewisenormspectralmodel attribute)": [[253, "gammapy.modeling.models.PiecewiseNormSpectralModel.norms", false]], "npix (gammapy.maps.hpxgeom attribute)": [[194, "gammapy.maps.HpxGeom.npix", false]], "npix (gammapy.maps.regiongeom attribute)": [[203, "gammapy.maps.RegionGeom.npix", false]], "npix (gammapy.maps.wcsgeom attribute)": [[206, "gammapy.maps.WcsGeom.npix", false]], "npix_max (gammapy.maps.hpxgeom attribute)": [[194, "gammapy.maps.HpxGeom.npix_max", false]], "npred (gammapy.estimators.fluxmaps attribute)": [[125, "gammapy.estimators.FluxMaps.npred", false]], "npred (gammapy.estimators.fluxpoints attribute)": [[127, "gammapy.estimators.FluxPoints.npred", false]], "npred() (gammapy.datasets.mapdataset method)": [[103, "gammapy.datasets.MapDataset.npred", false]], "npred() (gammapy.datasets.mapdatasetonoff method)": [[106, "gammapy.datasets.MapDatasetOnOff.npred", false]], "npred() (gammapy.datasets.spectrumdataset method)": [[110, "gammapy.datasets.SpectrumDataset.npred", false]], "npred() (gammapy.datasets.spectrumdatasetonoff method)": [[111, "gammapy.datasets.SpectrumDatasetOnOff.npred", false]], "npred_background (gammapy.estimators.fluxmaps attribute)": [[125, "gammapy.estimators.FluxMaps.npred_background", false]], "npred_background (gammapy.estimators.fluxpoints attribute)": [[127, "gammapy.estimators.FluxPoints.npred_background", false]], "npred_background() (gammapy.datasets.mapdataset method)": [[103, "gammapy.datasets.MapDataset.npred_background", false]], "npred_background() (gammapy.datasets.mapdatasetonoff method)": [[106, "gammapy.datasets.MapDatasetOnOff.npred_background", false]], "npred_background() (gammapy.datasets.spectrumdataset method)": [[110, "gammapy.datasets.SpectrumDataset.npred_background", false]], "npred_background() (gammapy.datasets.spectrumdatasetonoff method)": [[111, "gammapy.datasets.SpectrumDatasetOnOff.npred_background", false]], "npred_excess (gammapy.estimators.fluxmaps attribute)": [[125, "gammapy.estimators.FluxMaps.npred_excess", false]], "npred_excess (gammapy.estimators.fluxpoints attribute)": [[127, "gammapy.estimators.FluxPoints.npred_excess", false]], "npred_excess_err (gammapy.estimators.fluxmaps attribute)": [[125, "gammapy.estimators.FluxMaps.npred_excess_err", false]], "npred_excess_err (gammapy.estimators.fluxpoints attribute)": [[127, "gammapy.estimators.FluxPoints.npred_excess_err", false]], "npred_excess_errn (gammapy.estimators.fluxmaps attribute)": [[125, "gammapy.estimators.FluxMaps.npred_excess_errn", false]], "npred_excess_errn (gammapy.estimators.fluxpoints attribute)": [[127, "gammapy.estimators.FluxPoints.npred_excess_errn", false]], "npred_excess_errp (gammapy.estimators.fluxmaps attribute)": [[125, "gammapy.estimators.FluxMaps.npred_excess_errp", false]], "npred_excess_errp (gammapy.estimators.fluxpoints attribute)": [[127, "gammapy.estimators.FluxPoints.npred_excess_errp", false]], "npred_excess_ref (gammapy.estimators.fluxmaps attribute)": [[125, "gammapy.estimators.FluxMaps.npred_excess_ref", false]], "npred_excess_ref (gammapy.estimators.fluxpoints attribute)": [[127, "gammapy.estimators.FluxPoints.npred_excess_ref", false]], "npred_excess_ul (gammapy.estimators.fluxmaps attribute)": [[125, "gammapy.estimators.FluxMaps.npred_excess_ul", false]], "npred_excess_ul (gammapy.estimators.fluxpoints attribute)": [[127, "gammapy.estimators.FluxPoints.npred_excess_ul", false]], "npred_off() (gammapy.datasets.mapdatasetonoff method)": [[106, "gammapy.datasets.MapDatasetOnOff.npred_off", false]], "npred_off() (gammapy.datasets.spectrumdatasetonoff method)": [[111, "gammapy.datasets.SpectrumDatasetOnOff.npred_off", false]], "npred_signal() (gammapy.datasets.mapdataset method)": [[103, "gammapy.datasets.MapDataset.npred_signal", false]], "npred_signal() (gammapy.datasets.mapdatasetonoff method)": [[106, "gammapy.datasets.MapDatasetOnOff.npred_signal", false]], "npred_signal() (gammapy.datasets.spectrumdataset method)": [[110, "gammapy.datasets.SpectrumDataset.npred_signal", false]], "npred_signal() (gammapy.datasets.spectrumdatasetonoff method)": [[111, "gammapy.datasets.SpectrumDatasetOnOff.npred_signal", false]], "nside (gammapy.maps.hpxgeom attribute)": [[194, "gammapy.maps.HpxGeom.nside", false]], "obs() (gammapy.data.datastore method)": [[82, "gammapy.data.DataStore.obs", false]], "obs_id_unique (gammapy.data.hduindextable attribute)": [[87, "gammapy.data.HDUIndexTable.obs_id_unique", false]], "obs_ids (gammapy.data.datastore attribute)": [[82, "gammapy.data.DataStore.obs_ids", false]], "observation (class in gammapy.data)": [[88, "gammapy.data.Observation", false]], "observation_dead_time_fraction (gammapy.data.eventlist attribute)": [[83, "gammapy.data.EventList.observation_dead_time_fraction", false]], "observation_dead_time_fraction (gammapy.data.observation attribute)": [[88, "gammapy.data.Observation.observation_dead_time_fraction", false]], "observation_live_time_duration (gammapy.data.eventlist attribute)": [[83, "gammapy.data.EventList.observation_live_time_duration", false]], "observation_live_time_duration (gammapy.data.observation attribute)": [[88, "gammapy.data.Observation.observation_live_time_duration", false]], "observation_time_duration (gammapy.data.eventlist attribute)": [[83, "gammapy.data.EventList.observation_time_duration", false]], "observation_time_duration (gammapy.data.observation attribute)": [[88, "gammapy.data.Observation.observation_time_duration", false]], "observation_time_start (gammapy.data.eventlist attribute)": [[83, "gammapy.data.EventList.observation_time_start", false]], "observation_time_stop (gammapy.data.eventlist attribute)": [[83, "gammapy.data.EventList.observation_time_stop", false]], "observationeventsampler (class in gammapy.datasets)": [[109, "gammapy.datasets.ObservationEventSampler", false]], "observationfilter (class in gammapy.data)": [[89, "gammapy.data.ObservationFilter", false]], "observationmetadata (class in gammapy.data)": [[90, "gammapy.data.ObservationMetaData", false]], "observations (class in gammapy.data)": [[92, "gammapy.data.Observations", false]], "observationseventssampler (class in gammapy.data)": [[93, "gammapy.data.ObservationsEventsSampler", false]], "observationtable (class in gammapy.data)": [[91, "gammapy.data.ObservationTable", false]], "observatory_earth_location (gammapy.data.eventlist attribute)": [[83, "gammapy.data.EventList.observatory_earth_location", false]], "observatory_earth_location (gammapy.data.observation attribute)": [[88, "gammapy.data.Observation.observatory_earth_location", false]], "observatory_locations (in module gammapy.data)": [[97, "gammapy.data.observatory_locations", false]], "offset (gammapy.data.eventlist attribute)": [[83, "gammapy.data.EventList.offset", false]], "offset_from_median (gammapy.data.eventlist attribute)": [[83, "gammapy.data.EventList.offset_from_median", false]], "offset_max (gammapy.makers.datasetsmaker attribute)": [[171, "gammapy.makers.DatasetsMaker.offset_max", false]], "ogipdatasetreader (class in gammapy.datasets)": [[107, "gammapy.datasets.OGIPDatasetReader", false]], "ogipdatasetwriter (class in gammapy.datasets)": [[108, "gammapy.datasets.OGIPDatasetWriter", false]], "omega (gammapy.modeling.models.sinetemporalmodel attribute)": [[265, "gammapy.modeling.models.SineTemporalModel.omega", false]], "optimize() (gammapy.modeling.fit method)": [[213, "gammapy.modeling.Fit.optimize", false]], "optimize_result (gammapy.modeling.fitresult attribute)": [[214, "gammapy.modeling.FitResult.optimize_result", false]], "optimizeresult (class in gammapy.modeling)": [[215, "gammapy.modeling.OptimizeResult", false]], "order (gammapy.maps.hpxgeom attribute)": [[194, "gammapy.maps.HpxGeom.order", false]], "ordering (gammapy.maps.hpxgeom attribute)": [[194, "gammapy.maps.HpxGeom.ordering", false]], "output_units() (gammapy.astro.population.casebattacharya1998 method)": [[28, "gammapy.astro.population.CaseBattacharya1998.output_units", false]], "output_units() (gammapy.astro.population.exponential method)": [[29, "gammapy.astro.population.Exponential.output_units", false]], "output_units() (gammapy.astro.population.faucherkaspi2006 method)": [[30, "gammapy.astro.population.FaucherKaspi2006.output_units", false]], "output_units() (gammapy.astro.population.faucherkaspi2006velocitybimodal method)": [[31, "gammapy.astro.population.FaucherKaspi2006VelocityBimodal.output_units", false]], "output_units() (gammapy.astro.population.faucherkaspi2006velocitymaxwellian method)": [[32, "gammapy.astro.population.FaucherKaspi2006VelocityMaxwellian.output_units", false]], "output_units() (gammapy.astro.population.lorimer2006 method)": [[35, "gammapy.astro.population.Lorimer2006.output_units", false]], "output_units() (gammapy.astro.population.paczynski1990 method)": [[36, "gammapy.astro.population.Paczynski1990.output_units", false]], "output_units() (gammapy.astro.population.paczynski1990velocity method)": [[37, "gammapy.astro.population.Paczynski1990Velocity.output_units", false]], "output_units() (gammapy.astro.population.yusifovkucuk2004 method)": [[39, "gammapy.astro.population.YusifovKucuk2004.output_units", false]], "output_units() (gammapy.astro.population.yusifovkucuk2004b method)": [[40, "gammapy.astro.population.YusifovKucuk2004B.output_units", false]], "outputs (gammapy.astro.population.casebattacharya1998 attribute)": [[28, "gammapy.astro.population.CaseBattacharya1998.outputs", false]], "outputs (gammapy.astro.population.exponential attribute)": [[29, "gammapy.astro.population.Exponential.outputs", false]], "outputs (gammapy.astro.population.faucherkaspi2006 attribute)": [[30, "gammapy.astro.population.FaucherKaspi2006.outputs", false]], "outputs (gammapy.astro.population.faucherkaspi2006velocitybimodal attribute)": [[31, "gammapy.astro.population.FaucherKaspi2006VelocityBimodal.outputs", false]], "outputs (gammapy.astro.population.faucherkaspi2006velocitymaxwellian attribute)": [[32, "gammapy.astro.population.FaucherKaspi2006VelocityMaxwellian.outputs", false]], "outputs (gammapy.astro.population.lorimer2006 attribute)": [[35, "gammapy.astro.population.Lorimer2006.outputs", false]], "outputs (gammapy.astro.population.paczynski1990 attribute)": [[36, "gammapy.astro.population.Paczynski1990.outputs", false]], "outputs (gammapy.astro.population.paczynski1990velocity attribute)": [[37, "gammapy.astro.population.Paczynski1990Velocity.outputs", false]], "outputs (gammapy.astro.population.yusifovkucuk2004 attribute)": [[39, "gammapy.astro.population.YusifovKucuk2004.outputs", false]], "outputs (gammapy.astro.population.yusifovkucuk2004b attribute)": [[40, "gammapy.astro.population.YusifovKucuk2004B.outputs", false]], "p (gammapy.astro.population.valleespiral attribute)": [[38, "gammapy.astro.population.ValleeSpiral.p", false]], "p_value (gammapy.stats.cashcountsstatistic attribute)": [[291, "gammapy.stats.CashCountsStatistic.p_value", false]], "p_value (gammapy.stats.wstatcountsstatistic attribute)": [[293, "gammapy.stats.WStatCountsStatistic.p_value", false]], "paczynski1990 (class in gammapy.astro.population)": [[36, "gammapy.astro.population.Paczynski1990", false]], "paczynski1990velocity (class in gammapy.astro.population)": [[37, "gammapy.astro.population.Paczynski1990Velocity", false]], "pad() (gammapy.datasets.mapdataset method)": [[103, "gammapy.datasets.MapDataset.pad", false]], "pad() (gammapy.datasets.mapdatasetonoff method)": [[106, "gammapy.datasets.MapDatasetOnOff.pad", false]], "pad() (gammapy.datasets.spectrumdataset method)": [[110, "gammapy.datasets.SpectrumDataset.pad", false]], "pad() (gammapy.datasets.spectrumdatasetonoff method)": [[111, "gammapy.datasets.SpectrumDatasetOnOff.pad", false]], "pad() (gammapy.irf.background2d method)": [[149, "gammapy.irf.Background2D.pad", false]], "pad() (gammapy.irf.background3d method)": [[150, "gammapy.irf.Background3D.pad", false]], "pad() (gammapy.irf.backgroundirf method)": [[151, "gammapy.irf.BackgroundIRF.pad", false]], "pad() (gammapy.irf.edispkernel method)": [[152, "gammapy.irf.EDispKernel.pad", false]], "pad() (gammapy.irf.effectiveareatable2d method)": [[155, "gammapy.irf.EffectiveAreaTable2D.pad", false]], "pad() (gammapy.irf.energydependentmultigausspsf method)": [[156, "gammapy.irf.EnergyDependentMultiGaussPSF.pad", false]], "pad() (gammapy.irf.energydispersion2d method)": [[157, "gammapy.irf.EnergyDispersion2D.pad", false]], "pad() (gammapy.irf.irf method)": [[159, "gammapy.irf.IRF.pad", false]], "pad() (gammapy.irf.parametricpsf method)": [[166, "gammapy.irf.ParametricPSF.pad", false]], "pad() (gammapy.irf.psf3d method)": [[162, "gammapy.irf.PSF3D.pad", false]], "pad() (gammapy.irf.psfking method)": [[164, "gammapy.irf.PSFKing.pad", false]], "pad() (gammapy.irf.radmax2d method)": [[167, "gammapy.irf.RadMax2D.pad", false]], "pad() (gammapy.maps.geom method)": [[193, "gammapy.maps.Geom.pad", false]], "pad() (gammapy.maps.hpxgeom method)": [[194, "gammapy.maps.HpxGeom.pad", false]], "pad() (gammapy.maps.hpxmap method)": [[195, "gammapy.maps.HpxMap.pad", false]], "pad() (gammapy.maps.hpxndmap method)": [[196, "gammapy.maps.HpxNDMap.pad", false]], "pad() (gammapy.maps.labelmapaxis method)": [[197, "gammapy.maps.LabelMapAxis.pad", false]], "pad() (gammapy.maps.map method)": [[198, "gammapy.maps.Map.pad", false]], "pad() (gammapy.maps.mapaxes method)": [[199, "gammapy.maps.MapAxes.pad", false]], "pad() (gammapy.maps.mapaxis method)": [[200, "gammapy.maps.MapAxis.pad", false]], "pad() (gammapy.maps.regiongeom method)": [[203, "gammapy.maps.RegionGeom.pad", false]], "pad() (gammapy.maps.regionndmap method)": [[204, "gammapy.maps.RegionNDMap.pad", false]], "pad() (gammapy.maps.wcsgeom method)": [[206, "gammapy.maps.WcsGeom.pad", false]], "pad() (gammapy.maps.wcsmap method)": [[207, "gammapy.maps.WcsMap.pad", false]], "pad() (gammapy.maps.wcsndmap method)": [[208, "gammapy.maps.WcsNDMap.pad", false]], "parallel_backend (gammapy.data.observationseventssampler attribute)": [[93, "gammapy.data.ObservationsEventsSampler.parallel_backend", false]], "parallel_backend (gammapy.estimators.fluxpointsestimator attribute)": [[128, "gammapy.estimators.FluxPointsEstimator.parallel_backend", false]], "parallel_backend (gammapy.estimators.fluxprofileestimator attribute)": [[129, "gammapy.estimators.FluxProfileEstimator.parallel_backend", false]], "parallel_backend (gammapy.estimators.lightcurveestimator attribute)": [[132, "gammapy.estimators.LightCurveEstimator.parallel_backend", false]], "parallel_backend (gammapy.estimators.tsmapestimator attribute)": [[135, "gammapy.estimators.TSMapEstimator.parallel_backend", false]], "parallel_backend (gammapy.makers.datasetsmaker attribute)": [[171, "gammapy.makers.DatasetsMaker.parallel_backend", false]], "param_names (gammapy.astro.population.casebattacharya1998 attribute)": [[28, "gammapy.astro.population.CaseBattacharya1998.param_names", false]], "param_names (gammapy.astro.population.exponential attribute)": [[29, "gammapy.astro.population.Exponential.param_names", false]], "param_names (gammapy.astro.population.faucherkaspi2006 attribute)": [[30, "gammapy.astro.population.FaucherKaspi2006.param_names", false]], "param_names (gammapy.astro.population.faucherkaspi2006velocitybimodal attribute)": [[31, "gammapy.astro.population.FaucherKaspi2006VelocityBimodal.param_names", false]], "param_names (gammapy.astro.population.faucherkaspi2006velocitymaxwellian attribute)": [[32, "gammapy.astro.population.FaucherKaspi2006VelocityMaxwellian.param_names", false]], "param_names (gammapy.astro.population.lorimer2006 attribute)": [[35, "gammapy.astro.population.Lorimer2006.param_names", false]], "param_names (gammapy.astro.population.paczynski1990 attribute)": [[36, "gammapy.astro.population.Paczynski1990.param_names", false]], "param_names (gammapy.astro.population.paczynski1990velocity attribute)": [[37, "gammapy.astro.population.Paczynski1990Velocity.param_names", false]], "param_names (gammapy.astro.population.yusifovkucuk2004 attribute)": [[39, "gammapy.astro.population.YusifovKucuk2004.param_names", false]], "param_names (gammapy.astro.population.yusifovkucuk2004b attribute)": [[40, "gammapy.astro.population.YusifovKucuk2004B.param_names", false]], "param_sets (gammapy.astro.population.casebattacharya1998 attribute)": [[28, "gammapy.astro.population.CaseBattacharya1998.param_sets", false]], "param_sets (gammapy.astro.population.exponential attribute)": [[29, "gammapy.astro.population.Exponential.param_sets", false]], "param_sets (gammapy.astro.population.faucherkaspi2006 attribute)": [[30, "gammapy.astro.population.FaucherKaspi2006.param_sets", false]], "param_sets (gammapy.astro.population.faucherkaspi2006velocitybimodal attribute)": [[31, "gammapy.astro.population.FaucherKaspi2006VelocityBimodal.param_sets", false]], "param_sets (gammapy.astro.population.faucherkaspi2006velocitymaxwellian attribute)": [[32, "gammapy.astro.population.FaucherKaspi2006VelocityMaxwellian.param_sets", false]], "param_sets (gammapy.astro.population.lorimer2006 attribute)": [[35, "gammapy.astro.population.Lorimer2006.param_sets", false]], "param_sets (gammapy.astro.population.paczynski1990 attribute)": [[36, "gammapy.astro.population.Paczynski1990.param_sets", false]], "param_sets (gammapy.astro.population.paczynski1990velocity attribute)": [[37, "gammapy.astro.population.Paczynski1990Velocity.param_sets", false]], "param_sets (gammapy.astro.population.yusifovkucuk2004 attribute)": [[39, "gammapy.astro.population.YusifovKucuk2004.param_sets", false]], "param_sets (gammapy.astro.population.yusifovkucuk2004b attribute)": [[40, "gammapy.astro.population.YusifovKucuk2004B.param_sets", false]], "parameter (class in gammapy.modeling)": [[216, "gammapy.modeling.Parameter", false]], "parameter_constraints (gammapy.astro.population.casebattacharya1998 attribute)": [[28, "gammapy.astro.population.CaseBattacharya1998.parameter_constraints", false]], "parameter_constraints (gammapy.astro.population.exponential attribute)": [[29, "gammapy.astro.population.Exponential.parameter_constraints", false]], "parameter_constraints (gammapy.astro.population.faucherkaspi2006 attribute)": [[30, "gammapy.astro.population.FaucherKaspi2006.parameter_constraints", false]], "parameter_constraints (gammapy.astro.population.faucherkaspi2006velocitybimodal attribute)": [[31, "gammapy.astro.population.FaucherKaspi2006VelocityBimodal.parameter_constraints", false]], "parameter_constraints (gammapy.astro.population.faucherkaspi2006velocitymaxwellian attribute)": [[32, "gammapy.astro.population.FaucherKaspi2006VelocityMaxwellian.parameter_constraints", false]], "parameter_constraints (gammapy.astro.population.lorimer2006 attribute)": [[35, "gammapy.astro.population.Lorimer2006.parameter_constraints", false]], "parameter_constraints (gammapy.astro.population.paczynski1990 attribute)": [[36, "gammapy.astro.population.Paczynski1990.parameter_constraints", false]], "parameter_constraints (gammapy.astro.population.paczynski1990velocity attribute)": [[37, "gammapy.astro.population.Paczynski1990Velocity.parameter_constraints", false]], "parameter_constraints (gammapy.astro.population.yusifovkucuk2004 attribute)": [[39, "gammapy.astro.population.YusifovKucuk2004.parameter_constraints", false]], "parameter_constraints (gammapy.astro.population.yusifovkucuk2004b attribute)": [[40, "gammapy.astro.population.YusifovKucuk2004B.parameter_constraints", false]], "parameterestimator (class in gammapy.estimators)": [[133, "gammapy.estimators.ParameterEstimator", false]], "parameters (class in gammapy.modeling)": [[217, "gammapy.modeling.Parameters", false]], "parameters (gammapy.astro.darkmatter.darkmatterannihilationspectralmodel attribute)": [[19, "gammapy.astro.darkmatter.DarkMatterAnnihilationSpectralModel.parameters", false]], "parameters (gammapy.astro.darkmatter.darkmatterdecayspectralmodel attribute)": [[20, "gammapy.astro.darkmatter.DarkMatterDecaySpectralModel.parameters", false]], "parameters (gammapy.astro.darkmatter.primaryflux attribute)": [[26, "gammapy.astro.darkmatter.PrimaryFlux.parameters", false]], "parameters (gammapy.astro.population.casebattacharya1998 attribute)": [[28, "gammapy.astro.population.CaseBattacharya1998.parameters", false]], "parameters (gammapy.astro.population.exponential attribute)": [[29, "gammapy.astro.population.Exponential.parameters", false]], "parameters (gammapy.astro.population.faucherkaspi2006 attribute)": [[30, "gammapy.astro.population.FaucherKaspi2006.parameters", false]], "parameters (gammapy.astro.population.faucherkaspi2006velocitybimodal attribute)": [[31, "gammapy.astro.population.FaucherKaspi2006VelocityBimodal.parameters", false]], "parameters (gammapy.astro.population.faucherkaspi2006velocitymaxwellian attribute)": [[32, "gammapy.astro.population.FaucherKaspi2006VelocityMaxwellian.parameters", false]], "parameters (gammapy.astro.population.lorimer2006 attribute)": [[35, "gammapy.astro.population.Lorimer2006.parameters", false]], "parameters (gammapy.astro.population.paczynski1990 attribute)": [[36, "gammapy.astro.population.Paczynski1990.parameters", false]], "parameters (gammapy.astro.population.paczynski1990velocity attribute)": [[37, "gammapy.astro.population.Paczynski1990Velocity.parameters", false]], "parameters (gammapy.astro.population.yusifovkucuk2004 attribute)": [[39, "gammapy.astro.population.YusifovKucuk2004.parameters", false]], "parameters (gammapy.astro.population.yusifovkucuk2004b attribute)": [[40, "gammapy.astro.population.YusifovKucuk2004B.parameters", false]], "parameters (gammapy.datasets.datasets attribute)": [[100, "gammapy.datasets.Datasets.parameters", false]], "parameters (gammapy.modeling.fitresult attribute)": [[214, "gammapy.modeling.FitResult.parameters", false]], "parameters (gammapy.modeling.models.brokenpowerlawspectralmodel attribute)": [[220, "gammapy.modeling.models.BrokenPowerLawSpectralModel.parameters", false]], "parameters (gammapy.modeling.models.compoundspectralmodel attribute)": [[221, "gammapy.modeling.models.CompoundSpectralModel.parameters", false]], "parameters (gammapy.modeling.models.constantfluxspatialmodel attribute)": [[222, "gammapy.modeling.models.ConstantFluxSpatialModel.parameters", false]], "parameters (gammapy.modeling.models.constantspatialmodel attribute)": [[223, "gammapy.modeling.models.ConstantSpatialModel.parameters", false]], "parameters (gammapy.modeling.models.constantspectralmodel attribute)": [[224, "gammapy.modeling.models.ConstantSpectralModel.parameters", false]], "parameters (gammapy.modeling.models.constanttemporalmodel attribute)": [[225, "gammapy.modeling.models.ConstantTemporalModel.parameters", false]], "parameters (gammapy.modeling.models.datasetmodels attribute)": [[226, "gammapy.modeling.models.DatasetModels.parameters", false]], "parameters (gammapy.modeling.models.diskspatialmodel attribute)": [[227, "gammapy.modeling.models.DiskSpatialModel.parameters", false]], "parameters (gammapy.modeling.models.eblabsorptionnormspectralmodel attribute)": [[228, "gammapy.modeling.models.EBLAbsorptionNormSpectralModel.parameters", false]], "parameters (gammapy.modeling.models.expcutoffpowerlaw3fglspectralmodel attribute)": [[230, "gammapy.modeling.models.ExpCutoffPowerLaw3FGLSpectralModel.parameters", false]], "parameters (gammapy.modeling.models.expcutoffpowerlawnormspectralmodel attribute)": [[231, "gammapy.modeling.models.ExpCutoffPowerLawNormSpectralModel.parameters", false]], "parameters (gammapy.modeling.models.expcutoffpowerlawspectralmodel attribute)": [[232, "gammapy.modeling.models.ExpCutoffPowerLawSpectralModel.parameters", false]], "parameters (gammapy.modeling.models.expdecaytemporalmodel attribute)": [[233, "gammapy.modeling.models.ExpDecayTemporalModel.parameters", false]], "parameters (gammapy.modeling.models.fovbackgroundmodel attribute)": [[234, "gammapy.modeling.models.FoVBackgroundModel.parameters", false]], "parameters (gammapy.modeling.models.gaussianprior attribute)": [[235, "gammapy.modeling.models.GaussianPrior.parameters", false]], "parameters (gammapy.modeling.models.gaussianspatialmodel attribute)": [[236, "gammapy.modeling.models.GaussianSpatialModel.parameters", false]], "parameters (gammapy.modeling.models.gaussianspectralmodel attribute)": [[237, "gammapy.modeling.models.GaussianSpectralModel.parameters", false]], "parameters (gammapy.modeling.models.gaussiantemporalmodel attribute)": [[238, "gammapy.modeling.models.GaussianTemporalModel.parameters", false]], "parameters (gammapy.modeling.models.generalizedgaussianspatialmodel attribute)": [[239, "gammapy.modeling.models.GeneralizedGaussianSpatialModel.parameters", false]], "parameters (gammapy.modeling.models.generalizedgaussiantemporalmodel attribute)": [[240, "gammapy.modeling.models.GeneralizedGaussianTemporalModel.parameters", false]], "parameters (gammapy.modeling.models.lightcurvetemplatetemporalmodel attribute)": [[241, "gammapy.modeling.models.LightCurveTemplateTemporalModel.parameters", false]], "parameters (gammapy.modeling.models.lineartemporalmodel attribute)": [[242, "gammapy.modeling.models.LinearTemporalModel.parameters", false]], "parameters (gammapy.modeling.models.logparabolanormspectralmodel attribute)": [[243, "gammapy.modeling.models.LogParabolaNormSpectralModel.parameters", false]], "parameters (gammapy.modeling.models.logparabolaspectralmodel attribute)": [[244, "gammapy.modeling.models.LogParabolaSpectralModel.parameters", false]], "parameters (gammapy.modeling.models.loguniformprior attribute)": [[245, "gammapy.modeling.models.LogUniformPrior.parameters", false]], "parameters (gammapy.modeling.models.meyercrabspectralmodel attribute)": [[247, "gammapy.modeling.models.MeyerCrabSpectralModel.parameters", false]], "parameters (gammapy.modeling.models.modelbase attribute)": [[249, "gammapy.modeling.models.ModelBase.parameters", false]], "parameters (gammapy.modeling.models.models attribute)": [[250, "gammapy.modeling.models.Models.parameters", false]], "parameters (gammapy.modeling.models.naimaspectralmodel attribute)": [[251, "gammapy.modeling.models.NaimaSpectralModel.parameters", false]], "parameters (gammapy.modeling.models.piecewisenormspatialmodel attribute)": [[252, "gammapy.modeling.models.PiecewiseNormSpatialModel.parameters", false]], "parameters (gammapy.modeling.models.piecewisenormspectralmodel attribute)": [[253, "gammapy.modeling.models.PiecewiseNormSpectralModel.parameters", false]], "parameters (gammapy.modeling.models.pointspatialmodel attribute)": [[254, "gammapy.modeling.models.PointSpatialModel.parameters", false]], "parameters (gammapy.modeling.models.powerlaw2spectralmodel attribute)": [[255, "gammapy.modeling.models.PowerLaw2SpectralModel.parameters", false]], "parameters (gammapy.modeling.models.powerlawnormspectralmodel attribute)": [[256, "gammapy.modeling.models.PowerLawNormSpectralModel.parameters", false]], "parameters (gammapy.modeling.models.powerlawspectralmodel attribute)": [[257, "gammapy.modeling.models.PowerLawSpectralModel.parameters", false]], "parameters (gammapy.modeling.models.powerlawtemporalmodel attribute)": [[258, "gammapy.modeling.models.PowerLawTemporalModel.parameters", false]], "parameters (gammapy.modeling.models.prior attribute)": [[259, "gammapy.modeling.models.Prior.parameters", false]], "parameters (gammapy.modeling.models.scalespectralmodel attribute)": [[262, "gammapy.modeling.models.ScaleSpectralModel.parameters", false]], "parameters (gammapy.modeling.models.shell2spatialmodel attribute)": [[263, "gammapy.modeling.models.Shell2SpatialModel.parameters", false]], "parameters (gammapy.modeling.models.shellspatialmodel attribute)": [[264, "gammapy.modeling.models.ShellSpatialModel.parameters", false]], "parameters (gammapy.modeling.models.sinetemporalmodel attribute)": [[265, "gammapy.modeling.models.SineTemporalModel.parameters", false]], "parameters (gammapy.modeling.models.skymodel attribute)": [[266, "gammapy.modeling.models.SkyModel.parameters", false]], "parameters (gammapy.modeling.models.smoothbrokenpowerlawspectralmodel attribute)": [[267, "gammapy.modeling.models.SmoothBrokenPowerLawSpectralModel.parameters", false]], "parameters (gammapy.modeling.models.spatialmodel attribute)": [[268, "gammapy.modeling.models.SpatialModel.parameters", false]], "parameters (gammapy.modeling.models.spectralmodel attribute)": [[269, "gammapy.modeling.models.SpectralModel.parameters", false]], "parameters (gammapy.modeling.models.superexpcutoffpowerlaw3fglspectralmodel attribute)": [[270, "gammapy.modeling.models.SuperExpCutoffPowerLaw3FGLSpectralModel.parameters", false]], "parameters (gammapy.modeling.models.superexpcutoffpowerlaw4fgldr3spectralmodel attribute)": [[271, "gammapy.modeling.models.SuperExpCutoffPowerLaw4FGLDR3SpectralModel.parameters", false]], "parameters (gammapy.modeling.models.superexpcutoffpowerlaw4fglspectralmodel attribute)": [[272, "gammapy.modeling.models.SuperExpCutoffPowerLaw4FGLSpectralModel.parameters", false]], "parameters (gammapy.modeling.models.templatendspatialmodel attribute)": [[274, "gammapy.modeling.models.TemplateNDSpatialModel.parameters", false]], "parameters (gammapy.modeling.models.templatendspectralmodel attribute)": [[275, "gammapy.modeling.models.TemplateNDSpectralModel.parameters", false]], "parameters (gammapy.modeling.models.templatenpredmodel attribute)": [[276, "gammapy.modeling.models.TemplateNPredModel.parameters", false]], "parameters (gammapy.modeling.models.templatephasecurvetemporalmodel attribute)": [[277, "gammapy.modeling.models.TemplatePhaseCurveTemporalModel.parameters", false]], "parameters (gammapy.modeling.models.templatespatialmodel attribute)": [[278, "gammapy.modeling.models.TemplateSpatialModel.parameters", false]], "parameters (gammapy.modeling.models.templatespectralmodel attribute)": [[279, "gammapy.modeling.models.TemplateSpectralModel.parameters", false]], "parameters (gammapy.modeling.models.temporalmodel attribute)": [[280, "gammapy.modeling.models.TemporalModel.parameters", false]], "parameters (gammapy.modeling.models.uniformprior attribute)": [[281, "gammapy.modeling.models.UniformPrior.parameters", false]], "parameters (gammapy.modeling.optimizeresult attribute)": [[215, "gammapy.modeling.OptimizeResult.parameters", false]], "parameters_unique_names (gammapy.astro.darkmatter.darkmatterannihilationspectralmodel attribute)": [[19, "gammapy.astro.darkmatter.DarkMatterAnnihilationSpectralModel.parameters_unique_names", false]], "parameters_unique_names (gammapy.astro.darkmatter.darkmatterdecayspectralmodel attribute)": [[20, "gammapy.astro.darkmatter.DarkMatterDecaySpectralModel.parameters_unique_names", false]], "parameters_unique_names (gammapy.astro.darkmatter.primaryflux attribute)": [[26, "gammapy.astro.darkmatter.PrimaryFlux.parameters_unique_names", false]], "parameters_unique_names (gammapy.modeling.models.brokenpowerlawspectralmodel attribute)": [[220, "gammapy.modeling.models.BrokenPowerLawSpectralModel.parameters_unique_names", false]], "parameters_unique_names (gammapy.modeling.models.compoundspectralmodel attribute)": [[221, "gammapy.modeling.models.CompoundSpectralModel.parameters_unique_names", false]], "parameters_unique_names (gammapy.modeling.models.constantfluxspatialmodel attribute)": [[222, "gammapy.modeling.models.ConstantFluxSpatialModel.parameters_unique_names", false]], "parameters_unique_names (gammapy.modeling.models.constantspatialmodel attribute)": [[223, "gammapy.modeling.models.ConstantSpatialModel.parameters_unique_names", false]], "parameters_unique_names (gammapy.modeling.models.constantspectralmodel attribute)": [[224, "gammapy.modeling.models.ConstantSpectralModel.parameters_unique_names", false]], "parameters_unique_names (gammapy.modeling.models.constanttemporalmodel attribute)": [[225, "gammapy.modeling.models.ConstantTemporalModel.parameters_unique_names", false]], "parameters_unique_names (gammapy.modeling.models.datasetmodels attribute)": [[226, "gammapy.modeling.models.DatasetModels.parameters_unique_names", false]], "parameters_unique_names (gammapy.modeling.models.diskspatialmodel attribute)": [[227, "gammapy.modeling.models.DiskSpatialModel.parameters_unique_names", false]], "parameters_unique_names (gammapy.modeling.models.eblabsorptionnormspectralmodel attribute)": [[228, "gammapy.modeling.models.EBLAbsorptionNormSpectralModel.parameters_unique_names", false]], "parameters_unique_names (gammapy.modeling.models.expcutoffpowerlaw3fglspectralmodel attribute)": [[230, "gammapy.modeling.models.ExpCutoffPowerLaw3FGLSpectralModel.parameters_unique_names", false]], "parameters_unique_names (gammapy.modeling.models.expcutoffpowerlawnormspectralmodel attribute)": [[231, "gammapy.modeling.models.ExpCutoffPowerLawNormSpectralModel.parameters_unique_names", false]], "parameters_unique_names (gammapy.modeling.models.expcutoffpowerlawspectralmodel attribute)": [[232, "gammapy.modeling.models.ExpCutoffPowerLawSpectralModel.parameters_unique_names", false]], "parameters_unique_names (gammapy.modeling.models.expdecaytemporalmodel attribute)": [[233, "gammapy.modeling.models.ExpDecayTemporalModel.parameters_unique_names", false]], "parameters_unique_names (gammapy.modeling.models.fovbackgroundmodel attribute)": [[234, "gammapy.modeling.models.FoVBackgroundModel.parameters_unique_names", false]], "parameters_unique_names (gammapy.modeling.models.gaussianprior attribute)": [[235, "gammapy.modeling.models.GaussianPrior.parameters_unique_names", false]], "parameters_unique_names (gammapy.modeling.models.gaussianspatialmodel attribute)": [[236, "gammapy.modeling.models.GaussianSpatialModel.parameters_unique_names", false]], "parameters_unique_names (gammapy.modeling.models.gaussianspectralmodel attribute)": [[237, "gammapy.modeling.models.GaussianSpectralModel.parameters_unique_names", false]], "parameters_unique_names (gammapy.modeling.models.gaussiantemporalmodel attribute)": [[238, "gammapy.modeling.models.GaussianTemporalModel.parameters_unique_names", false]], "parameters_unique_names (gammapy.modeling.models.generalizedgaussianspatialmodel attribute)": [[239, "gammapy.modeling.models.GeneralizedGaussianSpatialModel.parameters_unique_names", false]], "parameters_unique_names (gammapy.modeling.models.generalizedgaussiantemporalmodel attribute)": [[240, "gammapy.modeling.models.GeneralizedGaussianTemporalModel.parameters_unique_names", false]], "parameters_unique_names (gammapy.modeling.models.lightcurvetemplatetemporalmodel attribute)": [[241, "gammapy.modeling.models.LightCurveTemplateTemporalModel.parameters_unique_names", false]], "parameters_unique_names (gammapy.modeling.models.lineartemporalmodel attribute)": [[242, "gammapy.modeling.models.LinearTemporalModel.parameters_unique_names", false]], "parameters_unique_names (gammapy.modeling.models.logparabolanormspectralmodel attribute)": [[243, "gammapy.modeling.models.LogParabolaNormSpectralModel.parameters_unique_names", false]], "parameters_unique_names (gammapy.modeling.models.logparabolaspectralmodel attribute)": [[244, "gammapy.modeling.models.LogParabolaSpectralModel.parameters_unique_names", false]], "parameters_unique_names (gammapy.modeling.models.loguniformprior attribute)": [[245, "gammapy.modeling.models.LogUniformPrior.parameters_unique_names", false]], "parameters_unique_names (gammapy.modeling.models.meyercrabspectralmodel attribute)": [[247, "gammapy.modeling.models.MeyerCrabSpectralModel.parameters_unique_names", false]], "parameters_unique_names (gammapy.modeling.models.modelbase attribute)": [[249, "gammapy.modeling.models.ModelBase.parameters_unique_names", false]], "parameters_unique_names (gammapy.modeling.models.models attribute)": [[250, "gammapy.modeling.models.Models.parameters_unique_names", false]], "parameters_unique_names (gammapy.modeling.models.naimaspectralmodel attribute)": [[251, "gammapy.modeling.models.NaimaSpectralModel.parameters_unique_names", false]], "parameters_unique_names (gammapy.modeling.models.piecewisenormspatialmodel attribute)": [[252, "gammapy.modeling.models.PiecewiseNormSpatialModel.parameters_unique_names", false]], "parameters_unique_names (gammapy.modeling.models.piecewisenormspectralmodel attribute)": [[253, "gammapy.modeling.models.PiecewiseNormSpectralModel.parameters_unique_names", false]], "parameters_unique_names (gammapy.modeling.models.pointspatialmodel attribute)": [[254, "gammapy.modeling.models.PointSpatialModel.parameters_unique_names", false]], "parameters_unique_names (gammapy.modeling.models.powerlaw2spectralmodel attribute)": [[255, "gammapy.modeling.models.PowerLaw2SpectralModel.parameters_unique_names", false]], "parameters_unique_names (gammapy.modeling.models.powerlawnormspectralmodel attribute)": [[256, "gammapy.modeling.models.PowerLawNormSpectralModel.parameters_unique_names", false]], "parameters_unique_names (gammapy.modeling.models.powerlawspectralmodel attribute)": [[257, "gammapy.modeling.models.PowerLawSpectralModel.parameters_unique_names", false]], "parameters_unique_names (gammapy.modeling.models.powerlawtemporalmodel attribute)": [[258, "gammapy.modeling.models.PowerLawTemporalModel.parameters_unique_names", false]], "parameters_unique_names (gammapy.modeling.models.prior attribute)": [[259, "gammapy.modeling.models.Prior.parameters_unique_names", false]], "parameters_unique_names (gammapy.modeling.models.scalespectralmodel attribute)": [[262, "gammapy.modeling.models.ScaleSpectralModel.parameters_unique_names", false]], "parameters_unique_names (gammapy.modeling.models.shell2spatialmodel attribute)": [[263, "gammapy.modeling.models.Shell2SpatialModel.parameters_unique_names", false]], "parameters_unique_names (gammapy.modeling.models.shellspatialmodel attribute)": [[264, "gammapy.modeling.models.ShellSpatialModel.parameters_unique_names", false]], "parameters_unique_names (gammapy.modeling.models.sinetemporalmodel attribute)": [[265, "gammapy.modeling.models.SineTemporalModel.parameters_unique_names", false]], "parameters_unique_names (gammapy.modeling.models.skymodel attribute)": [[266, "gammapy.modeling.models.SkyModel.parameters_unique_names", false]], "parameters_unique_names (gammapy.modeling.models.smoothbrokenpowerlawspectralmodel attribute)": [[267, "gammapy.modeling.models.SmoothBrokenPowerLawSpectralModel.parameters_unique_names", false]], "parameters_unique_names (gammapy.modeling.models.spatialmodel attribute)": [[268, "gammapy.modeling.models.SpatialModel.parameters_unique_names", false]], "parameters_unique_names (gammapy.modeling.models.spectralmodel attribute)": [[269, "gammapy.modeling.models.SpectralModel.parameters_unique_names", false]], "parameters_unique_names (gammapy.modeling.models.superexpcutoffpowerlaw3fglspectralmodel attribute)": [[270, "gammapy.modeling.models.SuperExpCutoffPowerLaw3FGLSpectralModel.parameters_unique_names", false]], "parameters_unique_names (gammapy.modeling.models.superexpcutoffpowerlaw4fgldr3spectralmodel attribute)": [[271, "gammapy.modeling.models.SuperExpCutoffPowerLaw4FGLDR3SpectralModel.parameters_unique_names", false]], "parameters_unique_names (gammapy.modeling.models.superexpcutoffpowerlaw4fglspectralmodel attribute)": [[272, "gammapy.modeling.models.SuperExpCutoffPowerLaw4FGLSpectralModel.parameters_unique_names", false]], "parameters_unique_names (gammapy.modeling.models.templatendspatialmodel attribute)": [[274, "gammapy.modeling.models.TemplateNDSpatialModel.parameters_unique_names", false]], "parameters_unique_names (gammapy.modeling.models.templatendspectralmodel attribute)": [[275, "gammapy.modeling.models.TemplateNDSpectralModel.parameters_unique_names", false]], "parameters_unique_names (gammapy.modeling.models.templatenpredmodel attribute)": [[276, "gammapy.modeling.models.TemplateNPredModel.parameters_unique_names", false]], "parameters_unique_names (gammapy.modeling.models.templatephasecurvetemporalmodel attribute)": [[277, "gammapy.modeling.models.TemplatePhaseCurveTemporalModel.parameters_unique_names", false]], "parameters_unique_names (gammapy.modeling.models.templatespatialmodel attribute)": [[278, "gammapy.modeling.models.TemplateSpatialModel.parameters_unique_names", false]], "parameters_unique_names (gammapy.modeling.models.templatespectralmodel attribute)": [[279, "gammapy.modeling.models.TemplateSpectralModel.parameters_unique_names", false]], "parameters_unique_names (gammapy.modeling.models.temporalmodel attribute)": [[280, "gammapy.modeling.models.TemporalModel.parameters_unique_names", false]], "parameters_unique_names (gammapy.modeling.models.uniformprior attribute)": [[281, "gammapy.modeling.models.UniformPrior.parameters_unique_names", false]], "parametricpsf (class in gammapy.irf)": [[166, "gammapy.irf.ParametricPSF", false]], "parse_file() (gammapy.analysis.analysisconfig class method)": [[16, "gammapy.analysis.AnalysisConfig.parse_file", false]], "parse_file() (gammapy.data.eventlistmetadata class method)": [[84, "gammapy.data.EventListMetaData.parse_file", false]], "parse_file() (gammapy.data.observationmetadata class method)": [[90, "gammapy.data.ObservationMetaData.parse_file", false]], "parse_file() (gammapy.datasets.mapdatasetmetadata class method)": [[105, "gammapy.datasets.MapDatasetMetaData.parse_file", false]], "parse_file() (gammapy.estimators.fluxmetadata class method)": [[126, "gammapy.estimators.FluxMetaData.parse_file", false]], "parse_obj() (gammapy.analysis.analysisconfig class method)": [[16, "gammapy.analysis.AnalysisConfig.parse_obj", false]], "parse_obj() (gammapy.data.eventlistmetadata class method)": [[84, "gammapy.data.EventListMetaData.parse_obj", false]], "parse_obj() (gammapy.data.observationmetadata class method)": [[90, "gammapy.data.ObservationMetaData.parse_obj", false]], "parse_obj() (gammapy.datasets.mapdatasetmetadata class method)": [[105, "gammapy.datasets.MapDatasetMetaData.parse_obj", false]], "parse_obj() (gammapy.estimators.fluxmetadata class method)": [[126, "gammapy.estimators.FluxMetaData.parse_obj", false]], "parse_raw() (gammapy.analysis.analysisconfig class method)": [[16, "gammapy.analysis.AnalysisConfig.parse_raw", false]], "parse_raw() (gammapy.data.eventlistmetadata class method)": [[84, "gammapy.data.EventListMetaData.parse_raw", false]], "parse_raw() (gammapy.data.observationmetadata class method)": [[90, "gammapy.data.ObservationMetaData.parse_raw", false]], "parse_raw() (gammapy.datasets.mapdatasetmetadata class method)": [[105, "gammapy.datasets.MapDatasetMetaData.parse_raw", false]], "parse_raw() (gammapy.estimators.fluxmetadata class method)": [[126, "gammapy.estimators.FluxMetaData.parse_raw", false]], "particle_distribution (gammapy.modeling.models.naimaspectralmodel attribute)": [[251, "gammapy.modeling.models.NaimaSpectralModel.particle_distribution", false]], "path() (gammapy.utils.fits.hdulocation method)": [[318, "gammapy.utils.fits.HDULocation.path", false]], "pdf() (in module gammapy.utils.random)": [[336, "gammapy.utils.random.pdf", false]], "pdf_in_safe_range() (gammapy.irf.edispkernel method)": [[152, "gammapy.irf.EDispKernel.pdf_in_safe_range", false]], "pdf_matrix (gammapy.irf.edispkernel attribute)": [[152, "gammapy.irf.EDispKernel.pdf_matrix", false]], "peak_brightness() (gammapy.catalog.sourcecataloglargescalehgps method)": [[68, "gammapy.catalog.SourceCatalogLargeScaleHGPS.peak_brightness", false]], "peak_brightness_error() (gammapy.catalog.sourcecataloglargescalehgps method)": [[68, "gammapy.catalog.SourceCatalogLargeScaleHGPS.peak_brightness_error", false]], "peak_latitude() (gammapy.catalog.sourcecataloglargescalehgps method)": [[68, "gammapy.catalog.SourceCatalogLargeScaleHGPS.peak_latitude", false]], "peak_latitude_error() (gammapy.catalog.sourcecataloglargescalehgps method)": [[68, "gammapy.catalog.SourceCatalogLargeScaleHGPS.peak_latitude_error", false]], "peek() (gammapy.data.eventlist method)": [[83, "gammapy.data.EventList.peek", false]], "peek() (gammapy.data.observation method)": [[88, "gammapy.data.Observation.peek", false]], "peek() (gammapy.datasets.mapdataset method)": [[103, "gammapy.datasets.MapDataset.peek", false]], "peek() (gammapy.datasets.mapdatasetonoff method)": [[106, "gammapy.datasets.MapDatasetOnOff.peek", false]], "peek() (gammapy.datasets.spectrumdataset method)": [[110, "gammapy.datasets.SpectrumDataset.peek", false]], "peek() (gammapy.datasets.spectrumdatasetonoff method)": [[111, "gammapy.datasets.SpectrumDatasetOnOff.peek", false]], "peek() (gammapy.estimators.imageprofile method)": [[130, "gammapy.estimators.ImageProfile.peek", false]], "peek() (gammapy.irf.background2d method)": [[149, "gammapy.irf.Background2D.peek", false]], "peek() (gammapy.irf.background3d method)": [[150, "gammapy.irf.Background3D.peek", false]], "peek() (gammapy.irf.edispkernel method)": [[152, "gammapy.irf.EDispKernel.peek", false]], "peek() (gammapy.irf.edispkernelmap method)": [[153, "gammapy.irf.EDispKernelMap.peek", false]], "peek() (gammapy.irf.edispmap method)": [[154, "gammapy.irf.EDispMap.peek", false]], "peek() (gammapy.irf.effectiveareatable2d method)": [[155, "gammapy.irf.EffectiveAreaTable2D.peek", false]], "peek() (gammapy.irf.energydependentmultigausspsf method)": [[156, "gammapy.irf.EnergyDependentMultiGaussPSF.peek", false]], "peek() (gammapy.irf.energydispersion2d method)": [[157, "gammapy.irf.EnergyDispersion2D.peek", false]], "peek() (gammapy.irf.parametricpsf method)": [[166, "gammapy.irf.ParametricPSF.peek", false]], "peek() (gammapy.irf.psf3d method)": [[162, "gammapy.irf.PSF3D.peek", false]], "peek() (gammapy.irf.psfkernel method)": [[163, "gammapy.irf.PSFKernel.peek", false]], "peek() (gammapy.irf.psfking method)": [[164, "gammapy.irf.PSFKing.peek", false]], "peek() (gammapy.irf.psfmap method)": [[165, "gammapy.irf.PSFMap.peek", false]], "peek() (gammapy.irf.recopsfmap method)": [[168, "gammapy.irf.RecoPSFMap.peek", false]], "period() (gammapy.astro.source.pulsar method)": [[51, "gammapy.astro.source.Pulsar.period", false]], "period_dot() (gammapy.astro.source.pulsar method)": [[51, "gammapy.astro.source.Pulsar.period_dot", false]], "pformat() (gammapy.data.hduindextable method)": [[87, "gammapy.data.HDUIndexTable.pformat", false]], "pformat() (gammapy.data.observationtable method)": [[91, "gammapy.data.ObservationTable.pformat", false]], "pformat_all() (gammapy.data.hduindextable method)": [[87, "gammapy.data.HDUIndexTable.pformat_all", false]], "pformat_all() (gammapy.data.observationtable method)": [[91, "gammapy.data.ObservationTable.pformat_all", false]], "phasebackgroundmaker (class in gammapy.makers)": [[176, "gammapy.makers.PhaseBackgroundMaker", false]], "phi (gammapy.maps.mapcoord attribute)": [[201, "gammapy.maps.MapCoord.phi", false]], "phi (gammapy.modeling.models.diskspatialmodel attribute)": [[227, "gammapy.modeling.models.DiskSpatialModel.phi", false]], "phi (gammapy.modeling.models.gaussianspatialmodel attribute)": [[236, "gammapy.modeling.models.GaussianSpatialModel.phi", false]], "phi (gammapy.modeling.models.generalizedgaussianspatialmodel attribute)": [[239, "gammapy.modeling.models.GeneralizedGaussianSpatialModel.phi", false]], "phi_0 (gammapy.modeling.models.constantfluxspatialmodel attribute)": [[222, "gammapy.modeling.models.ConstantFluxSpatialModel.phi_0", false]], "phi_0 (gammapy.modeling.models.constantspatialmodel attribute)": [[223, "gammapy.modeling.models.ConstantSpatialModel.phi_0", false]], "phi_0 (gammapy.modeling.models.diskspatialmodel attribute)": [[227, "gammapy.modeling.models.DiskSpatialModel.phi_0", false]], "phi_0 (gammapy.modeling.models.gaussianspatialmodel attribute)": [[236, "gammapy.modeling.models.GaussianSpatialModel.phi_0", false]], "phi_0 (gammapy.modeling.models.generalizedgaussianspatialmodel attribute)": [[239, "gammapy.modeling.models.GeneralizedGaussianSpatialModel.phi_0", false]], "phi_0 (gammapy.modeling.models.piecewisenormspatialmodel attribute)": [[252, "gammapy.modeling.models.PiecewiseNormSpatialModel.phi_0", false]], "phi_0 (gammapy.modeling.models.pointspatialmodel attribute)": [[254, "gammapy.modeling.models.PointSpatialModel.phi_0", false]], "phi_0 (gammapy.modeling.models.shell2spatialmodel attribute)": [[263, "gammapy.modeling.models.Shell2SpatialModel.phi_0", false]], "phi_0 (gammapy.modeling.models.shellspatialmodel attribute)": [[264, "gammapy.modeling.models.ShellSpatialModel.phi_0", false]], "phi_0 (gammapy.modeling.models.spatialmodel attribute)": [[268, "gammapy.modeling.models.SpatialModel.phi_0", false]], "phi_0 (gammapy.modeling.models.templatendspatialmodel attribute)": [[274, "gammapy.modeling.models.TemplateNDSpatialModel.phi_0", false]], "phi_0 (gammapy.modeling.models.templatespatialmodel attribute)": [[278, "gammapy.modeling.models.TemplateSpatialModel.phi_0", false]], "phi_ref (gammapy.modeling.models.templatephasecurvetemporalmodel attribute)": [[277, "gammapy.modeling.models.TemplatePhaseCurveTemporalModel.phi_ref", false]], "piecewisenormspatialmodel (class in gammapy.modeling.models)": [[252, "gammapy.modeling.models.PiecewiseNormSpatialModel", false]], "piecewisenormspectralmodel (class in gammapy.modeling.models)": [[253, "gammapy.modeling.models.PiecewiseNormSpectralModel", false]], "pivot_energy (gammapy.astro.darkmatter.darkmatterannihilationspectralmodel attribute)": [[19, "gammapy.astro.darkmatter.DarkMatterAnnihilationSpectralModel.pivot_energy", false]], "pivot_energy (gammapy.astro.darkmatter.darkmatterdecayspectralmodel attribute)": [[20, "gammapy.astro.darkmatter.DarkMatterDecaySpectralModel.pivot_energy", false]], "pivot_energy (gammapy.astro.darkmatter.primaryflux attribute)": [[26, "gammapy.astro.darkmatter.PrimaryFlux.pivot_energy", false]], "pivot_energy (gammapy.modeling.models.brokenpowerlawspectralmodel attribute)": [[220, "gammapy.modeling.models.BrokenPowerLawSpectralModel.pivot_energy", false]], "pivot_energy (gammapy.modeling.models.compoundspectralmodel attribute)": [[221, "gammapy.modeling.models.CompoundSpectralModel.pivot_energy", false]], "pivot_energy (gammapy.modeling.models.constantspectralmodel attribute)": [[224, "gammapy.modeling.models.ConstantSpectralModel.pivot_energy", false]], "pivot_energy (gammapy.modeling.models.eblabsorptionnormspectralmodel attribute)": [[228, "gammapy.modeling.models.EBLAbsorptionNormSpectralModel.pivot_energy", false]], "pivot_energy (gammapy.modeling.models.expcutoffpowerlaw3fglspectralmodel attribute)": [[230, "gammapy.modeling.models.ExpCutoffPowerLaw3FGLSpectralModel.pivot_energy", false]], "pivot_energy (gammapy.modeling.models.expcutoffpowerlawnormspectralmodel attribute)": [[231, "gammapy.modeling.models.ExpCutoffPowerLawNormSpectralModel.pivot_energy", false]], "pivot_energy (gammapy.modeling.models.expcutoffpowerlawspectralmodel attribute)": [[232, "gammapy.modeling.models.ExpCutoffPowerLawSpectralModel.pivot_energy", false]], "pivot_energy (gammapy.modeling.models.gaussianspectralmodel attribute)": [[237, "gammapy.modeling.models.GaussianSpectralModel.pivot_energy", false]], "pivot_energy (gammapy.modeling.models.logparabolanormspectralmodel attribute)": [[243, "gammapy.modeling.models.LogParabolaNormSpectralModel.pivot_energy", false]], "pivot_energy (gammapy.modeling.models.logparabolaspectralmodel attribute)": [[244, "gammapy.modeling.models.LogParabolaSpectralModel.pivot_energy", false]], "pivot_energy (gammapy.modeling.models.meyercrabspectralmodel attribute)": [[247, "gammapy.modeling.models.MeyerCrabSpectralModel.pivot_energy", false]], "pivot_energy (gammapy.modeling.models.naimaspectralmodel attribute)": [[251, "gammapy.modeling.models.NaimaSpectralModel.pivot_energy", false]], "pivot_energy (gammapy.modeling.models.piecewisenormspectralmodel attribute)": [[253, "gammapy.modeling.models.PiecewiseNormSpectralModel.pivot_energy", false]], "pivot_energy (gammapy.modeling.models.powerlaw2spectralmodel attribute)": [[255, "gammapy.modeling.models.PowerLaw2SpectralModel.pivot_energy", false]], "pivot_energy (gammapy.modeling.models.powerlawnormspectralmodel attribute)": [[256, "gammapy.modeling.models.PowerLawNormSpectralModel.pivot_energy", false]], "pivot_energy (gammapy.modeling.models.powerlawspectralmodel attribute)": [[257, "gammapy.modeling.models.PowerLawSpectralModel.pivot_energy", false]], "pivot_energy (gammapy.modeling.models.scalespectralmodel attribute)": [[262, "gammapy.modeling.models.ScaleSpectralModel.pivot_energy", false]], "pivot_energy (gammapy.modeling.models.smoothbrokenpowerlawspectralmodel attribute)": [[267, "gammapy.modeling.models.SmoothBrokenPowerLawSpectralModel.pivot_energy", false]], "pivot_energy (gammapy.modeling.models.spectralmodel attribute)": [[269, "gammapy.modeling.models.SpectralModel.pivot_energy", false]], "pivot_energy (gammapy.modeling.models.superexpcutoffpowerlaw3fglspectralmodel attribute)": [[270, "gammapy.modeling.models.SuperExpCutoffPowerLaw3FGLSpectralModel.pivot_energy", false]], "pivot_energy (gammapy.modeling.models.superexpcutoffpowerlaw4fgldr3spectralmodel attribute)": [[271, "gammapy.modeling.models.SuperExpCutoffPowerLaw4FGLDR3SpectralModel.pivot_energy", false]], "pivot_energy (gammapy.modeling.models.superexpcutoffpowerlaw4fglspectralmodel attribute)": [[272, "gammapy.modeling.models.SuperExpCutoffPowerLaw4FGLSpectralModel.pivot_energy", false]], "pivot_energy (gammapy.modeling.models.templatendspectralmodel attribute)": [[275, "gammapy.modeling.models.TemplateNDSpectralModel.pivot_energy", false]], "pivot_energy (gammapy.modeling.models.templatespectralmodel attribute)": [[279, "gammapy.modeling.models.TemplateSpectralModel.pivot_energy", false]], "pix_to_coord() (gammapy.maps.geom method)": [[193, "gammapy.maps.Geom.pix_to_coord", false]], "pix_to_coord() (gammapy.maps.hpxgeom method)": [[194, "gammapy.maps.HpxGeom.pix_to_coord", false]], "pix_to_coord() (gammapy.maps.labelmapaxis method)": [[197, "gammapy.maps.LabelMapAxis.pix_to_coord", false]], "pix_to_coord() (gammapy.maps.mapaxes method)": [[199, "gammapy.maps.MapAxes.pix_to_coord", false]], "pix_to_coord() (gammapy.maps.mapaxis method)": [[200, "gammapy.maps.MapAxis.pix_to_coord", false]], "pix_to_coord() (gammapy.maps.regiongeom method)": [[203, "gammapy.maps.RegionGeom.pix_to_coord", false]], "pix_to_coord() (gammapy.maps.timemapaxis method)": [[205, "gammapy.maps.TimeMapAxis.pix_to_coord", false]], "pix_to_coord() (gammapy.maps.wcsgeom method)": [[206, "gammapy.maps.WcsGeom.pix_to_coord", false]], "pix_to_idx() (gammapy.maps.geom method)": [[193, "gammapy.maps.Geom.pix_to_idx", false]], "pix_to_idx() (gammapy.maps.hpxgeom method)": [[194, "gammapy.maps.HpxGeom.pix_to_idx", false]], "pix_to_idx() (gammapy.maps.labelmapaxis method)": [[197, "gammapy.maps.LabelMapAxis.pix_to_idx", false]], "pix_to_idx() (gammapy.maps.mapaxes method)": [[199, "gammapy.maps.MapAxes.pix_to_idx", false]], "pix_to_idx() (gammapy.maps.mapaxis method)": [[200, "gammapy.maps.MapAxis.pix_to_idx", false]], "pix_to_idx() (gammapy.maps.regiongeom method)": [[203, "gammapy.maps.RegionGeom.pix_to_idx", false]], "pix_to_idx() (gammapy.maps.timemapaxis static method)": [[205, "gammapy.maps.TimeMapAxis.pix_to_idx", false]], "pix_to_idx() (gammapy.maps.wcsgeom method)": [[206, "gammapy.maps.WcsGeom.pix_to_idx", false]], "pixel_area (gammapy.maps.wcsgeom attribute)": [[206, "gammapy.maps.WcsGeom.pixel_area", false]], "pixel_scales (gammapy.maps.hpxgeom attribute)": [[194, "gammapy.maps.HpxGeom.pixel_scales", false]], "pixel_scales (gammapy.maps.wcsgeom attribute)": [[206, "gammapy.maps.WcsGeom.pixel_scales", false]], "plot() (gammapy.astro.darkmatter.darkmatterannihilationspectralmodel method)": [[19, "gammapy.astro.darkmatter.DarkMatterAnnihilationSpectralModel.plot", false]], "plot() (gammapy.astro.darkmatter.darkmatterdecayspectralmodel method)": [[20, "gammapy.astro.darkmatter.DarkMatterDecaySpectralModel.plot", false]], "plot() (gammapy.astro.darkmatter.primaryflux method)": [[26, "gammapy.astro.darkmatter.PrimaryFlux.plot", false]], "plot() (gammapy.estimators.fluxpoints method)": [[127, "gammapy.estimators.FluxPoints.plot", false]], "plot() (gammapy.estimators.imageprofile method)": [[130, "gammapy.estimators.ImageProfile.plot", false]], "plot() (gammapy.irf.background2d method)": [[149, "gammapy.irf.Background2D.plot", false]], "plot() (gammapy.irf.effectiveareatable2d method)": [[155, "gammapy.irf.EffectiveAreaTable2D.plot", false]], "plot() (gammapy.maps.hpxndmap method)": [[196, "gammapy.maps.HpxNDMap.plot", false]], "plot() (gammapy.maps.regionndmap method)": [[204, "gammapy.maps.RegionNDMap.plot", false]], "plot() (gammapy.maps.wcsndmap method)": [[208, "gammapy.maps.WcsNDMap.plot", false]], "plot() (gammapy.modeling.models.brokenpowerlawspectralmodel method)": [[220, "gammapy.modeling.models.BrokenPowerLawSpectralModel.plot", false]], "plot() (gammapy.modeling.models.compoundspectralmodel method)": [[221, "gammapy.modeling.models.CompoundSpectralModel.plot", false]], "plot() (gammapy.modeling.models.constantfluxspatialmodel method)": [[222, "gammapy.modeling.models.ConstantFluxSpatialModel.plot", false]], "plot() (gammapy.modeling.models.constantspatialmodel method)": [[223, "gammapy.modeling.models.ConstantSpatialModel.plot", false]], "plot() (gammapy.modeling.models.constantspectralmodel method)": [[224, "gammapy.modeling.models.ConstantSpectralModel.plot", false]], "plot() (gammapy.modeling.models.constanttemporalmodel method)": [[225, "gammapy.modeling.models.ConstantTemporalModel.plot", false]], "plot() (gammapy.modeling.models.diskspatialmodel method)": [[227, "gammapy.modeling.models.DiskSpatialModel.plot", false]], "plot() (gammapy.modeling.models.eblabsorptionnormspectralmodel method)": [[228, "gammapy.modeling.models.EBLAbsorptionNormSpectralModel.plot", false]], "plot() (gammapy.modeling.models.expcutoffpowerlaw3fglspectralmodel method)": [[230, "gammapy.modeling.models.ExpCutoffPowerLaw3FGLSpectralModel.plot", false]], "plot() (gammapy.modeling.models.expcutoffpowerlawnormspectralmodel method)": [[231, "gammapy.modeling.models.ExpCutoffPowerLawNormSpectralModel.plot", false]], "plot() (gammapy.modeling.models.expcutoffpowerlawspectralmodel method)": [[232, "gammapy.modeling.models.ExpCutoffPowerLawSpectralModel.plot", false]], "plot() (gammapy.modeling.models.expdecaytemporalmodel method)": [[233, "gammapy.modeling.models.ExpDecayTemporalModel.plot", false]], "plot() (gammapy.modeling.models.gaussianspatialmodel method)": [[236, "gammapy.modeling.models.GaussianSpatialModel.plot", false]], "plot() (gammapy.modeling.models.gaussianspectralmodel method)": [[237, "gammapy.modeling.models.GaussianSpectralModel.plot", false]], "plot() (gammapy.modeling.models.gaussiantemporalmodel method)": [[238, "gammapy.modeling.models.GaussianTemporalModel.plot", false]], "plot() (gammapy.modeling.models.generalizedgaussianspatialmodel method)": [[239, "gammapy.modeling.models.GeneralizedGaussianSpatialModel.plot", false]], "plot() (gammapy.modeling.models.generalizedgaussiantemporalmodel method)": [[240, "gammapy.modeling.models.GeneralizedGaussianTemporalModel.plot", false]], "plot() (gammapy.modeling.models.lightcurvetemplatetemporalmodel method)": [[241, "gammapy.modeling.models.LightCurveTemplateTemporalModel.plot", false]], "plot() (gammapy.modeling.models.lineartemporalmodel method)": [[242, "gammapy.modeling.models.LinearTemporalModel.plot", false]], "plot() (gammapy.modeling.models.logparabolanormspectralmodel method)": [[243, "gammapy.modeling.models.LogParabolaNormSpectralModel.plot", false]], "plot() (gammapy.modeling.models.logparabolaspectralmodel method)": [[244, "gammapy.modeling.models.LogParabolaSpectralModel.plot", false]], "plot() (gammapy.modeling.models.meyercrabspectralmodel method)": [[247, "gammapy.modeling.models.MeyerCrabSpectralModel.plot", false]], "plot() (gammapy.modeling.models.naimaspectralmodel method)": [[251, "gammapy.modeling.models.NaimaSpectralModel.plot", false]], "plot() (gammapy.modeling.models.piecewisenormspatialmodel method)": [[252, "gammapy.modeling.models.PiecewiseNormSpatialModel.plot", false]], "plot() (gammapy.modeling.models.piecewisenormspectralmodel method)": [[253, "gammapy.modeling.models.PiecewiseNormSpectralModel.plot", false]], "plot() (gammapy.modeling.models.pointspatialmodel method)": [[254, "gammapy.modeling.models.PointSpatialModel.plot", false]], "plot() (gammapy.modeling.models.powerlaw2spectralmodel method)": [[255, "gammapy.modeling.models.PowerLaw2SpectralModel.plot", false]], "plot() (gammapy.modeling.models.powerlawnormspectralmodel method)": [[256, "gammapy.modeling.models.PowerLawNormSpectralModel.plot", false]], "plot() (gammapy.modeling.models.powerlawspectralmodel method)": [[257, "gammapy.modeling.models.PowerLawSpectralModel.plot", false]], "plot() (gammapy.modeling.models.powerlawtemporalmodel method)": [[258, "gammapy.modeling.models.PowerLawTemporalModel.plot", false]], "plot() (gammapy.modeling.models.scalespectralmodel method)": [[262, "gammapy.modeling.models.ScaleSpectralModel.plot", false]], "plot() (gammapy.modeling.models.shell2spatialmodel method)": [[263, "gammapy.modeling.models.Shell2SpatialModel.plot", false]], "plot() (gammapy.modeling.models.shellspatialmodel method)": [[264, "gammapy.modeling.models.ShellSpatialModel.plot", false]], "plot() (gammapy.modeling.models.sinetemporalmodel method)": [[265, "gammapy.modeling.models.SineTemporalModel.plot", false]], "plot() (gammapy.modeling.models.smoothbrokenpowerlawspectralmodel method)": [[267, "gammapy.modeling.models.SmoothBrokenPowerLawSpectralModel.plot", false]], "plot() (gammapy.modeling.models.spatialmodel method)": [[268, "gammapy.modeling.models.SpatialModel.plot", false]], "plot() (gammapy.modeling.models.spectralmodel method)": [[269, "gammapy.modeling.models.SpectralModel.plot", false]], "plot() (gammapy.modeling.models.superexpcutoffpowerlaw3fglspectralmodel method)": [[270, "gammapy.modeling.models.SuperExpCutoffPowerLaw3FGLSpectralModel.plot", false]], "plot() (gammapy.modeling.models.superexpcutoffpowerlaw4fgldr3spectralmodel method)": [[271, "gammapy.modeling.models.SuperExpCutoffPowerLaw4FGLDR3SpectralModel.plot", false]], "plot() (gammapy.modeling.models.superexpcutoffpowerlaw4fglspectralmodel method)": [[272, "gammapy.modeling.models.SuperExpCutoffPowerLaw4FGLSpectralModel.plot", false]], "plot() (gammapy.modeling.models.templatendspatialmodel method)": [[274, "gammapy.modeling.models.TemplateNDSpatialModel.plot", false]], "plot() (gammapy.modeling.models.templatendspectralmodel method)": [[275, "gammapy.modeling.models.TemplateNDSpectralModel.plot", false]], "plot() (gammapy.modeling.models.templatephasecurvetemporalmodel method)": [[277, "gammapy.modeling.models.TemplatePhaseCurveTemporalModel.plot", false]], "plot() (gammapy.modeling.models.templatespatialmodel method)": [[278, "gammapy.modeling.models.TemplateSpatialModel.plot", false]], "plot() (gammapy.modeling.models.templatespectralmodel method)": [[279, "gammapy.modeling.models.TemplateSpectralModel.plot", false]], "plot() (gammapy.modeling.models.temporalmodel method)": [[280, "gammapy.modeling.models.TemporalModel.plot", false]], "plot() (gammapy.visualization.mappanelplotter method)": [[370, "gammapy.visualization.MapPanelPlotter.plot", false]], "plot_at_energy() (gammapy.irf.background2d method)": [[149, "gammapy.irf.Background2D.plot_at_energy", false]], "plot_at_energy() (gammapy.irf.background3d method)": [[150, "gammapy.irf.Background3D.plot_at_energy", false]], "plot_bias() (gammapy.irf.edispkernel method)": [[152, "gammapy.irf.EDispKernel.plot_bias", false]], "plot_bias() (gammapy.irf.energydispersion2d method)": [[157, "gammapy.irf.EnergyDispersion2D.plot_bias", false]], "plot_containment_radius() (gammapy.irf.energydependentmultigausspsf method)": [[156, "gammapy.irf.EnergyDependentMultiGaussPSF.plot_containment_radius", false]], "plot_containment_radius() (gammapy.irf.parametricpsf method)": [[166, "gammapy.irf.ParametricPSF.plot_containment_radius", false]], "plot_containment_radius() (gammapy.irf.psf3d method)": [[162, "gammapy.irf.PSF3D.plot_containment_radius", false]], "plot_containment_radius() (gammapy.irf.psfking method)": [[164, "gammapy.irf.PSFKing.plot_containment_radius", false]], "plot_containment_radius_vs_energy() (gammapy.irf.energydependentmultigausspsf method)": [[156, "gammapy.irf.EnergyDependentMultiGaussPSF.plot_containment_radius_vs_energy", false]], "plot_containment_radius_vs_energy() (gammapy.irf.parametricpsf method)": [[166, "gammapy.irf.ParametricPSF.plot_containment_radius_vs_energy", false]], "plot_containment_radius_vs_energy() (gammapy.irf.psf3d method)": [[162, "gammapy.irf.PSF3D.plot_containment_radius_vs_energy", false]], "plot_containment_radius_vs_energy() (gammapy.irf.psfking method)": [[164, "gammapy.irf.PSFKing.plot_containment_radius_vs_energy", false]], "plot_containment_radius_vs_energy() (gammapy.irf.psfmap method)": [[165, "gammapy.irf.PSFMap.plot_containment_radius_vs_energy", false]], "plot_containment_radius_vs_energy() (gammapy.irf.recopsfmap method)": [[168, "gammapy.irf.RecoPSFMap.plot_containment_radius_vs_energy", false]], "plot_contour_line() (in module gammapy.visualization)": [[375, "gammapy.visualization.plot_contour_line", false]], "plot_correlation() (gammapy.modeling.covariance method)": [[211, "gammapy.modeling.Covariance.plot_correlation", false]], "plot_counts() (gammapy.datasets.spectrumdataset method)": [[110, "gammapy.datasets.SpectrumDataset.plot_counts", false]], "plot_counts() (gammapy.datasets.spectrumdatasetonoff method)": [[111, "gammapy.datasets.SpectrumDatasetOnOff.plot_counts", false]], "plot_distribution() (in module gammapy.visualization)": [[376, "gammapy.visualization.plot_distribution", false]], "plot_energy() (gammapy.data.eventlist method)": [[83, "gammapy.data.EventList.plot_energy", false]], "plot_energy_dependence() (gammapy.irf.background2d method)": [[149, "gammapy.irf.Background2D.plot_energy_dependence", false]], "plot_energy_dependence() (gammapy.irf.effectiveareatable2d method)": [[155, "gammapy.irf.EffectiveAreaTable2D.plot_energy_dependence", false]], "plot_energy_offset() (gammapy.data.eventlist method)": [[83, "gammapy.data.EventList.plot_energy_offset", false]], "plot_err() (gammapy.estimators.imageprofile method)": [[130, "gammapy.estimators.ImageProfile.plot_err", false]], "plot_error() (gammapy.astro.darkmatter.darkmatterannihilationspectralmodel method)": [[19, "gammapy.astro.darkmatter.DarkMatterAnnihilationSpectralModel.plot_error", false]], "plot_error() (gammapy.astro.darkmatter.darkmatterdecayspectralmodel method)": [[20, "gammapy.astro.darkmatter.DarkMatterDecaySpectralModel.plot_error", false]], "plot_error() (gammapy.astro.darkmatter.primaryflux method)": [[26, "gammapy.astro.darkmatter.PrimaryFlux.plot_error", false]], "plot_error() (gammapy.modeling.models.brokenpowerlawspectralmodel method)": [[220, "gammapy.modeling.models.BrokenPowerLawSpectralModel.plot_error", false]], "plot_error() (gammapy.modeling.models.compoundspectralmodel method)": [[221, "gammapy.modeling.models.CompoundSpectralModel.plot_error", false]], "plot_error() (gammapy.modeling.models.constantfluxspatialmodel method)": [[222, "gammapy.modeling.models.ConstantFluxSpatialModel.plot_error", false]], "plot_error() (gammapy.modeling.models.constantspatialmodel method)": [[223, "gammapy.modeling.models.ConstantSpatialModel.plot_error", false]], "plot_error() (gammapy.modeling.models.constantspectralmodel method)": [[224, "gammapy.modeling.models.ConstantSpectralModel.plot_error", false]], "plot_error() (gammapy.modeling.models.diskspatialmodel method)": [[227, "gammapy.modeling.models.DiskSpatialModel.plot_error", false]], "plot_error() (gammapy.modeling.models.eblabsorptionnormspectralmodel method)": [[228, "gammapy.modeling.models.EBLAbsorptionNormSpectralModel.plot_error", false]], "plot_error() (gammapy.modeling.models.expcutoffpowerlaw3fglspectralmodel method)": [[230, "gammapy.modeling.models.ExpCutoffPowerLaw3FGLSpectralModel.plot_error", false]], "plot_error() (gammapy.modeling.models.expcutoffpowerlawnormspectralmodel method)": [[231, "gammapy.modeling.models.ExpCutoffPowerLawNormSpectralModel.plot_error", false]], "plot_error() (gammapy.modeling.models.expcutoffpowerlawspectralmodel method)": [[232, "gammapy.modeling.models.ExpCutoffPowerLawSpectralModel.plot_error", false]], "plot_error() (gammapy.modeling.models.gaussianspatialmodel method)": [[236, "gammapy.modeling.models.GaussianSpatialModel.plot_error", false]], "plot_error() (gammapy.modeling.models.gaussianspectralmodel method)": [[237, "gammapy.modeling.models.GaussianSpectralModel.plot_error", false]], "plot_error() (gammapy.modeling.models.generalizedgaussianspatialmodel method)": [[239, "gammapy.modeling.models.GeneralizedGaussianSpatialModel.plot_error", false]], "plot_error() (gammapy.modeling.models.logparabolanormspectralmodel method)": [[243, "gammapy.modeling.models.LogParabolaNormSpectralModel.plot_error", false]], "plot_error() (gammapy.modeling.models.logparabolaspectralmodel method)": [[244, "gammapy.modeling.models.LogParabolaSpectralModel.plot_error", false]], "plot_error() (gammapy.modeling.models.meyercrabspectralmodel method)": [[247, "gammapy.modeling.models.MeyerCrabSpectralModel.plot_error", false]], "plot_error() (gammapy.modeling.models.naimaspectralmodel method)": [[251, "gammapy.modeling.models.NaimaSpectralModel.plot_error", false]], "plot_error() (gammapy.modeling.models.piecewisenormspatialmodel method)": [[252, "gammapy.modeling.models.PiecewiseNormSpatialModel.plot_error", false]], "plot_error() (gammapy.modeling.models.piecewisenormspectralmodel method)": [[253, "gammapy.modeling.models.PiecewiseNormSpectralModel.plot_error", false]], "plot_error() (gammapy.modeling.models.pointspatialmodel method)": [[254, "gammapy.modeling.models.PointSpatialModel.plot_error", false]], "plot_error() (gammapy.modeling.models.powerlaw2spectralmodel method)": [[255, "gammapy.modeling.models.PowerLaw2SpectralModel.plot_error", false]], "plot_error() (gammapy.modeling.models.powerlawnormspectralmodel method)": [[256, "gammapy.modeling.models.PowerLawNormSpectralModel.plot_error", false]], "plot_error() (gammapy.modeling.models.powerlawspectralmodel method)": [[257, "gammapy.modeling.models.PowerLawSpectralModel.plot_error", false]], "plot_error() (gammapy.modeling.models.scalespectralmodel method)": [[262, "gammapy.modeling.models.ScaleSpectralModel.plot_error", false]], "plot_error() (gammapy.modeling.models.shell2spatialmodel method)": [[263, "gammapy.modeling.models.Shell2SpatialModel.plot_error", false]], "plot_error() (gammapy.modeling.models.shellspatialmodel method)": [[264, "gammapy.modeling.models.ShellSpatialModel.plot_error", false]], "plot_error() (gammapy.modeling.models.smoothbrokenpowerlawspectralmodel method)": [[267, "gammapy.modeling.models.SmoothBrokenPowerLawSpectralModel.plot_error", false]], "plot_error() (gammapy.modeling.models.spatialmodel method)": [[268, "gammapy.modeling.models.SpatialModel.plot_error", false]], "plot_error() (gammapy.modeling.models.spectralmodel method)": [[269, "gammapy.modeling.models.SpectralModel.plot_error", false]], "plot_error() (gammapy.modeling.models.superexpcutoffpowerlaw3fglspectralmodel method)": [[270, "gammapy.modeling.models.SuperExpCutoffPowerLaw3FGLSpectralModel.plot_error", false]], "plot_error() (gammapy.modeling.models.superexpcutoffpowerlaw4fgldr3spectralmodel method)": [[271, "gammapy.modeling.models.SuperExpCutoffPowerLaw4FGLDR3SpectralModel.plot_error", false]], "plot_error() (gammapy.modeling.models.superexpcutoffpowerlaw4fglspectralmodel method)": [[272, "gammapy.modeling.models.SuperExpCutoffPowerLaw4FGLSpectralModel.plot_error", false]], "plot_error() (gammapy.modeling.models.templatendspatialmodel method)": [[274, "gammapy.modeling.models.TemplateNDSpatialModel.plot_error", false]], "plot_error() (gammapy.modeling.models.templatendspectralmodel method)": [[275, "gammapy.modeling.models.TemplateNDSpectralModel.plot_error", false]], "plot_error() (gammapy.modeling.models.templatespatialmodel method)": [[278, "gammapy.modeling.models.TemplateSpatialModel.plot_error", false]], "plot_error() (gammapy.modeling.models.templatespectralmodel method)": [[279, "gammapy.modeling.models.TemplateSpectralModel.plot_error", false]], "plot_excess() (gammapy.datasets.spectrumdataset method)": [[110, "gammapy.datasets.SpectrumDataset.plot_excess", false]], "plot_excess() (gammapy.datasets.spectrumdatasetonoff method)": [[111, "gammapy.datasets.SpectrumDatasetOnOff.plot_excess", false]], "plot_fit() (gammapy.datasets.fluxpointsdataset method)": [[102, "gammapy.datasets.FluxPointsDataset.plot_fit", false]], "plot_fit() (gammapy.datasets.spectrumdataset method)": [[110, "gammapy.datasets.SpectrumDataset.plot_fit", false]], "plot_fit() (gammapy.datasets.spectrumdatasetonoff method)": [[111, "gammapy.datasets.SpectrumDatasetOnOff.plot_fit", false]], "plot_grid() (gammapy.maps.hpxmap method)": [[195, "gammapy.maps.HpxMap.plot_grid", false]], "plot_grid() (gammapy.maps.hpxndmap method)": [[196, "gammapy.maps.HpxNDMap.plot_grid", false]], "plot_grid() (gammapy.maps.map method)": [[198, "gammapy.maps.Map.plot_grid", false]], "plot_grid() (gammapy.maps.regionndmap method)": [[204, "gammapy.maps.RegionNDMap.plot_grid", false]], "plot_grid() (gammapy.maps.wcsmap method)": [[207, "gammapy.maps.WcsMap.plot_grid", false]], "plot_grid() (gammapy.maps.wcsndmap method)": [[208, "gammapy.maps.WcsNDMap.plot_grid", false]], "plot_grid() (gammapy.modeling.models.constantfluxspatialmodel method)": [[222, "gammapy.modeling.models.ConstantFluxSpatialModel.plot_grid", false]], "plot_grid() (gammapy.modeling.models.constantspatialmodel method)": [[223, "gammapy.modeling.models.ConstantSpatialModel.plot_grid", false]], "plot_grid() (gammapy.modeling.models.diskspatialmodel method)": [[227, "gammapy.modeling.models.DiskSpatialModel.plot_grid", false]], "plot_grid() (gammapy.modeling.models.gaussianspatialmodel method)": [[236, "gammapy.modeling.models.GaussianSpatialModel.plot_grid", false]], "plot_grid() (gammapy.modeling.models.generalizedgaussianspatialmodel method)": [[239, "gammapy.modeling.models.GeneralizedGaussianSpatialModel.plot_grid", false]], "plot_grid() (gammapy.modeling.models.piecewisenormspatialmodel method)": [[252, "gammapy.modeling.models.PiecewiseNormSpatialModel.plot_grid", false]], "plot_grid() (gammapy.modeling.models.pointspatialmodel method)": [[254, "gammapy.modeling.models.PointSpatialModel.plot_grid", false]], "plot_grid() (gammapy.modeling.models.shell2spatialmodel method)": [[263, "gammapy.modeling.models.Shell2SpatialModel.plot_grid", false]], "plot_grid() (gammapy.modeling.models.shellspatialmodel method)": [[264, "gammapy.modeling.models.ShellSpatialModel.plot_grid", false]], "plot_grid() (gammapy.modeling.models.spatialmodel method)": [[268, "gammapy.modeling.models.SpatialModel.plot_grid", false]], "plot_grid() (gammapy.modeling.models.templatendspatialmodel method)": [[274, "gammapy.modeling.models.TemplateNDSpatialModel.plot_grid", false]], "plot_grid() (gammapy.modeling.models.templatespatialmodel method)": [[278, "gammapy.modeling.models.TemplateSpatialModel.plot_grid", false]], "plot_heatmap() (in module gammapy.visualization)": [[377, "gammapy.visualization.plot_heatmap", false]], "plot_hist() (gammapy.maps.regionndmap method)": [[204, "gammapy.maps.RegionNDMap.plot_hist", false]], "plot_image() (gammapy.data.eventlist method)": [[83, "gammapy.data.EventList.plot_image", false]], "plot_interactive() (gammapy.maps.hpxmap method)": [[195, "gammapy.maps.HpxMap.plot_interactive", false]], "plot_interactive() (gammapy.maps.hpxndmap method)": [[196, "gammapy.maps.HpxNDMap.plot_interactive", false]], "plot_interactive() (gammapy.maps.map method)": [[198, "gammapy.maps.Map.plot_interactive", false]], "plot_interactive() (gammapy.maps.regionndmap method)": [[204, "gammapy.maps.RegionNDMap.plot_interactive", false]], "plot_interactive() (gammapy.maps.wcsmap method)": [[207, "gammapy.maps.WcsMap.plot_interactive", false]], "plot_interactive() (gammapy.maps.wcsndmap method)": [[208, "gammapy.maps.WcsNDMap.plot_interactive", false]], "plot_interactive() (gammapy.modeling.models.constantfluxspatialmodel method)": [[222, "gammapy.modeling.models.ConstantFluxSpatialModel.plot_interactive", false]], "plot_interactive() (gammapy.modeling.models.constantspatialmodel method)": [[223, "gammapy.modeling.models.ConstantSpatialModel.plot_interactive", false]], "plot_interactive() (gammapy.modeling.models.diskspatialmodel method)": [[227, "gammapy.modeling.models.DiskSpatialModel.plot_interactive", false]], "plot_interactive() (gammapy.modeling.models.gaussianspatialmodel method)": [[236, "gammapy.modeling.models.GaussianSpatialModel.plot_interactive", false]], "plot_interactive() (gammapy.modeling.models.generalizedgaussianspatialmodel method)": [[239, "gammapy.modeling.models.GeneralizedGaussianSpatialModel.plot_interactive", false]], "plot_interactive() (gammapy.modeling.models.piecewisenormspatialmodel method)": [[252, "gammapy.modeling.models.PiecewiseNormSpatialModel.plot_interactive", false]], "plot_interactive() (gammapy.modeling.models.pointspatialmodel method)": [[254, "gammapy.modeling.models.PointSpatialModel.plot_interactive", false]], "plot_interactive() (gammapy.modeling.models.shell2spatialmodel method)": [[263, "gammapy.modeling.models.Shell2SpatialModel.plot_interactive", false]], "plot_interactive() (gammapy.modeling.models.shellspatialmodel method)": [[264, "gammapy.modeling.models.ShellSpatialModel.plot_interactive", false]], "plot_interactive() (gammapy.modeling.models.spatialmodel method)": [[268, "gammapy.modeling.models.SpatialModel.plot_interactive", false]], "plot_interactive() (gammapy.modeling.models.templatendspatialmodel method)": [[274, "gammapy.modeling.models.TemplateNDSpatialModel.plot_interactive", false]], "plot_interactive() (gammapy.modeling.models.templatespatialmodel method)": [[278, "gammapy.modeling.models.TemplateSpatialModel.plot_interactive", false]], "plot_kernel() (gammapy.irf.psfkernel method)": [[163, "gammapy.irf.PSFKernel.plot_kernel", false]], "plot_map_rgb() (in module gammapy.visualization)": [[378, "gammapy.visualization.plot_map_rgb", false]], "plot_mask() (gammapy.maps.hpxndmap method)": [[196, "gammapy.maps.HpxNDMap.plot_mask", false]], "plot_mask() (gammapy.maps.regionndmap method)": [[204, "gammapy.maps.RegionNDMap.plot_mask", false]], "plot_mask() (gammapy.maps.wcsndmap method)": [[208, "gammapy.maps.WcsNDMap.plot_mask", false]], "plot_masks() (gammapy.datasets.spectrumdataset method)": [[110, "gammapy.datasets.SpectrumDataset.plot_masks", false]], "plot_masks() (gammapy.datasets.spectrumdatasetonoff method)": [[111, "gammapy.datasets.SpectrumDatasetOnOff.plot_masks", false]], "plot_matrix() (gammapy.irf.edispkernel method)": [[152, "gammapy.irf.EDispKernel.plot_matrix", false]], "plot_migration() (gammapy.irf.energydispersion2d method)": [[157, "gammapy.irf.EnergyDispersion2D.plot_migration", false]], "plot_npred_signal() (in module gammapy.visualization)": [[379, "gammapy.visualization.plot_npred_signal", false]], "plot_offset2_distribution() (gammapy.data.eventlist method)": [[83, "gammapy.data.EventList.plot_offset2_distribution", false]], "plot_offset_dependence() (gammapy.irf.background2d method)": [[149, "gammapy.irf.Background2D.plot_offset_dependence", false]], "plot_offset_dependence() (gammapy.irf.effectiveareatable2d method)": [[155, "gammapy.irf.EffectiveAreaTable2D.plot_offset_dependence", false]], "plot_panel() (gammapy.visualization.mappanelplotter method)": [[370, "gammapy.visualization.MapPanelPlotter.plot_panel", false]], "plot_phasogram() (gammapy.modeling.models.templatephasecurvetemporalmodel method)": [[277, "gammapy.modeling.models.TemplatePhaseCurveTemporalModel.plot_phasogram", false]], "plot_position_error() (gammapy.modeling.models.constantfluxspatialmodel method)": [[222, "gammapy.modeling.models.ConstantFluxSpatialModel.plot_position_error", false]], "plot_position_error() (gammapy.modeling.models.constantspatialmodel method)": [[223, "gammapy.modeling.models.ConstantSpatialModel.plot_position_error", false]], "plot_position_error() (gammapy.modeling.models.diskspatialmodel method)": [[227, "gammapy.modeling.models.DiskSpatialModel.plot_position_error", false]], "plot_position_error() (gammapy.modeling.models.gaussianspatialmodel method)": [[236, "gammapy.modeling.models.GaussianSpatialModel.plot_position_error", false]], "plot_position_error() (gammapy.modeling.models.generalizedgaussianspatialmodel method)": [[239, "gammapy.modeling.models.GeneralizedGaussianSpatialModel.plot_position_error", false]], "plot_position_error() (gammapy.modeling.models.piecewisenormspatialmodel method)": [[252, "gammapy.modeling.models.PiecewiseNormSpatialModel.plot_position_error", false]], "plot_position_error() (gammapy.modeling.models.pointspatialmodel method)": [[254, "gammapy.modeling.models.PointSpatialModel.plot_position_error", false]], "plot_position_error() (gammapy.modeling.models.shell2spatialmodel method)": [[263, "gammapy.modeling.models.Shell2SpatialModel.plot_position_error", false]], "plot_position_error() (gammapy.modeling.models.shellspatialmodel method)": [[264, "gammapy.modeling.models.ShellSpatialModel.plot_position_error", false]], "plot_position_error() (gammapy.modeling.models.spatialmodel method)": [[268, "gammapy.modeling.models.SpatialModel.plot_position_error", false]], "plot_position_error() (gammapy.modeling.models.templatendspatialmodel method)": [[274, "gammapy.modeling.models.TemplateNDSpatialModel.plot_position_error", false]], "plot_position_error() (gammapy.modeling.models.templatespatialmodel method)": [[278, "gammapy.modeling.models.TemplateSpatialModel.plot_position_error", false]], "plot_positions() (gammapy.modeling.models.datasetmodels method)": [[226, "gammapy.modeling.models.DatasetModels.plot_positions", false]], "plot_positions() (gammapy.modeling.models.models method)": [[250, "gammapy.modeling.models.Models.plot_positions", false]], "plot_psf_vs_rad() (gammapy.irf.energydependentmultigausspsf method)": [[156, "gammapy.irf.EnergyDependentMultiGaussPSF.plot_psf_vs_rad", false]], "plot_psf_vs_rad() (gammapy.irf.parametricpsf method)": [[166, "gammapy.irf.ParametricPSF.plot_psf_vs_rad", false]], "plot_psf_vs_rad() (gammapy.irf.psf3d method)": [[162, "gammapy.irf.PSF3D.plot_psf_vs_rad", false]], "plot_psf_vs_rad() (gammapy.irf.psfking method)": [[164, "gammapy.irf.PSFKing.plot_psf_vs_rad", false]], "plot_psf_vs_rad() (gammapy.irf.psfmap method)": [[165, "gammapy.irf.PSFMap.plot_psf_vs_rad", false]], "plot_psf_vs_rad() (gammapy.irf.recopsfmap method)": [[168, "gammapy.irf.RecoPSFMap.plot_psf_vs_rad", false]], "plot_rad_max_vs_energy() (gammapy.irf.radmax2d method)": [[167, "gammapy.irf.RadMax2D.plot_rad_max_vs_energy", false]], "plot_region() (gammapy.maps.regiongeom method)": [[203, "gammapy.maps.RegionGeom.plot_region", false]], "plot_region() (gammapy.maps.regionndmap method)": [[204, "gammapy.maps.RegionNDMap.plot_region", false]], "plot_regions() (gammapy.modeling.models.datasetmodels method)": [[226, "gammapy.modeling.models.DatasetModels.plot_regions", false]], "plot_regions() (gammapy.modeling.models.models method)": [[250, "gammapy.modeling.models.Models.plot_regions", false]], "plot_residuals() (gammapy.datasets.fluxpointsdataset method)": [[102, "gammapy.datasets.FluxPointsDataset.plot_residuals", false]], "plot_residuals() (gammapy.datasets.mapdataset method)": [[103, "gammapy.datasets.MapDataset.plot_residuals", false]], "plot_residuals() (gammapy.datasets.mapdatasetonoff method)": [[106, "gammapy.datasets.MapDatasetOnOff.plot_residuals", false]], "plot_residuals() (gammapy.datasets.spectrumdataset method)": [[110, "gammapy.datasets.SpectrumDataset.plot_residuals", false]], "plot_residuals() (gammapy.datasets.spectrumdatasetonoff method)": [[111, "gammapy.datasets.SpectrumDatasetOnOff.plot_residuals", false]], "plot_residuals_spatial() (gammapy.datasets.mapdataset method)": [[103, "gammapy.datasets.MapDataset.plot_residuals_spatial", false]], "plot_residuals_spatial() (gammapy.datasets.mapdatasetonoff method)": [[106, "gammapy.datasets.MapDatasetOnOff.plot_residuals_spatial", false]], "plot_residuals_spatial() (gammapy.datasets.spectrumdataset method)": [[110, "gammapy.datasets.SpectrumDataset.plot_residuals_spatial", false]], "plot_residuals_spatial() (gammapy.datasets.spectrumdatasetonoff method)": [[111, "gammapy.datasets.SpectrumDatasetOnOff.plot_residuals_spatial", false]], "plot_residuals_spectral() (gammapy.datasets.mapdataset method)": [[103, "gammapy.datasets.MapDataset.plot_residuals_spectral", false]], "plot_residuals_spectral() (gammapy.datasets.mapdatasetonoff method)": [[106, "gammapy.datasets.MapDatasetOnOff.plot_residuals_spectral", false]], "plot_residuals_spectral() (gammapy.datasets.spectrumdataset method)": [[110, "gammapy.datasets.SpectrumDataset.plot_residuals_spectral", false]], "plot_residuals_spectral() (gammapy.datasets.spectrumdatasetonoff method)": [[111, "gammapy.datasets.SpectrumDatasetOnOff.plot_residuals_spectral", false]], "plot_spectrum() (gammapy.datasets.fluxpointsdataset method)": [[102, "gammapy.datasets.FluxPointsDataset.plot_spectrum", false]], "plot_spectrum() (gammapy.irf.background2d method)": [[149, "gammapy.irf.Background2D.plot_spectrum", false]], "plot_spectrum_datasets_off_regions() (in module gammapy.visualization)": [[380, "gammapy.visualization.plot_spectrum_datasets_off_regions", false]], "plot_theta_squared_table() (in module gammapy.visualization)": [[381, "gammapy.visualization.plot_theta_squared_table", false]], "plot_time() (gammapy.data.eventlist method)": [[83, "gammapy.data.EventList.plot_time", false]], "plot_ts_profiles() (gammapy.estimators.fluxpoints method)": [[127, "gammapy.estimators.FluxPoints.plot_ts_profiles", false]], "pointing (gammapy.data.observation attribute)": [[88, "gammapy.data.Observation.pointing", false]], "pointing (gammapy.data.pointingmode attribute)": [[95, "gammapy.data.PointingMode.POINTING", false]], "pointing_galactic (gammapy.data.observationtable attribute)": [[91, "gammapy.data.ObservationTable.pointing_galactic", false]], "pointing_radec (gammapy.data.eventlist attribute)": [[83, "gammapy.data.EventList.pointing_radec", false]], "pointing_radec (gammapy.data.observationtable attribute)": [[91, "gammapy.data.ObservationTable.pointing_radec", false]], "pointinginfo (class in gammapy.data)": [[94, "gammapy.data.PointingInfo", false]], "pointingmode (class in gammapy.data)": [[95, "gammapy.data.PointingMode", false]], "pointspatialmodel (class in gammapy.modeling.models)": [[254, "gammapy.modeling.models.PointSpatialModel", false]], "polar() (in module gammapy.utils.coordinates)": [[315, "gammapy.utils.coordinates.polar", false]], "pool_kwargs_default (in module gammapy.utils.parallel)": [[329, "gammapy.utils.parallel.POOL_KWARGS_DEFAULT", false]], "pop() (gammapy.data.observations method)": [[92, "gammapy.data.Observations.pop", false]], "pop() (gammapy.datasets.datasets method)": [[100, "gammapy.datasets.Datasets.pop", false]], "pop() (gammapy.maps.maps method)": [[202, "gammapy.maps.Maps.pop", false]], "pop() (gammapy.modeling.models.models method)": [[250, "gammapy.modeling.models.Models.pop", false]], "popitem() (gammapy.maps.maps method)": [[202, "gammapy.maps.Maps.popitem", false]], "position (gammapy.catalog.sourcecatalogobject attribute)": [[69, "gammapy.catalog.SourceCatalogObject.position", false]], "position (gammapy.catalog.sourcecatalogobject1lhaaso attribute)": [[70, "gammapy.catalog.SourceCatalogObject1LHAASO.position", false]], "position (gammapy.catalog.sourcecatalogobject2fhl attribute)": [[71, "gammapy.catalog.SourceCatalogObject2FHL.position", false]], "position (gammapy.catalog.sourcecatalogobject2hwc attribute)": [[72, "gammapy.catalog.SourceCatalogObject2HWC.position", false]], "position (gammapy.catalog.sourcecatalogobject2pc attribute)": [[73, "gammapy.catalog.SourceCatalogObject2PC.position", false]], "position (gammapy.catalog.sourcecatalogobject3fgl attribute)": [[74, "gammapy.catalog.SourceCatalogObject3FGL.position", false]], "position (gammapy.catalog.sourcecatalogobject3fhl attribute)": [[75, "gammapy.catalog.SourceCatalogObject3FHL.position", false]], "position (gammapy.catalog.sourcecatalogobject3hwc attribute)": [[76, "gammapy.catalog.SourceCatalogObject3HWC.position", false]], "position (gammapy.catalog.sourcecatalogobject3pc attribute)": [[77, "gammapy.catalog.SourceCatalogObject3PC.position", false]], "position (gammapy.catalog.sourcecatalogobject4fgl attribute)": [[78, "gammapy.catalog.SourceCatalogObject4FGL.position", false]], "position (gammapy.catalog.sourcecatalogobjectgammacat attribute)": [[79, "gammapy.catalog.SourceCatalogObjectGammaCat.position", false]], "position (gammapy.catalog.sourcecatalogobjecthgps attribute)": [[80, "gammapy.catalog.SourceCatalogObjectHGPS.position", false]], "position (gammapy.catalog.sourcecatalogobjecthgpscomponent attribute)": [[81, "gammapy.catalog.SourceCatalogObjectHGPSComponent.position", false]], "position (gammapy.modeling.models.constantfluxspatialmodel attribute)": [[222, "gammapy.modeling.models.ConstantFluxSpatialModel.position", false]], "position (gammapy.modeling.models.constantspatialmodel attribute)": [[223, "gammapy.modeling.models.ConstantSpatialModel.position", false]], "position (gammapy.modeling.models.diskspatialmodel attribute)": [[227, "gammapy.modeling.models.DiskSpatialModel.position", false]], "position (gammapy.modeling.models.gaussianspatialmodel attribute)": [[236, "gammapy.modeling.models.GaussianSpatialModel.position", false]], "position (gammapy.modeling.models.generalizedgaussianspatialmodel attribute)": [[239, "gammapy.modeling.models.GeneralizedGaussianSpatialModel.position", false]], "position (gammapy.modeling.models.piecewisenormspatialmodel attribute)": [[252, "gammapy.modeling.models.PiecewiseNormSpatialModel.position", false]], "position (gammapy.modeling.models.pointspatialmodel attribute)": [[254, "gammapy.modeling.models.PointSpatialModel.position", false]], "position (gammapy.modeling.models.shell2spatialmodel attribute)": [[263, "gammapy.modeling.models.Shell2SpatialModel.position", false]], "position (gammapy.modeling.models.shellspatialmodel attribute)": [[264, "gammapy.modeling.models.ShellSpatialModel.position", false]], "position (gammapy.modeling.models.skymodel attribute)": [[266, "gammapy.modeling.models.SkyModel.position", false]], "position (gammapy.modeling.models.spatialmodel attribute)": [[268, "gammapy.modeling.models.SpatialModel.position", false]], "position (gammapy.modeling.models.templatendspatialmodel attribute)": [[274, "gammapy.modeling.models.TemplateNDSpatialModel.position", false]], "position (gammapy.modeling.models.templatenpredmodel attribute)": [[276, "gammapy.modeling.models.TemplateNPredModel.position", false]], "position (gammapy.modeling.models.templatespatialmodel attribute)": [[278, "gammapy.modeling.models.TemplateSpatialModel.position", false]], "position_error (gammapy.modeling.models.constantfluxspatialmodel attribute)": [[222, "gammapy.modeling.models.ConstantFluxSpatialModel.position_error", false]], "position_error (gammapy.modeling.models.constantspatialmodel attribute)": [[223, "gammapy.modeling.models.ConstantSpatialModel.position_error", false]], "position_error (gammapy.modeling.models.diskspatialmodel attribute)": [[227, "gammapy.modeling.models.DiskSpatialModel.position_error", false]], "position_error (gammapy.modeling.models.gaussianspatialmodel attribute)": [[236, "gammapy.modeling.models.GaussianSpatialModel.position_error", false]], "position_error (gammapy.modeling.models.generalizedgaussianspatialmodel attribute)": [[239, "gammapy.modeling.models.GeneralizedGaussianSpatialModel.position_error", false]], "position_error (gammapy.modeling.models.piecewisenormspatialmodel attribute)": [[252, "gammapy.modeling.models.PiecewiseNormSpatialModel.position_error", false]], "position_error (gammapy.modeling.models.pointspatialmodel attribute)": [[254, "gammapy.modeling.models.PointSpatialModel.position_error", false]], "position_error (gammapy.modeling.models.shell2spatialmodel attribute)": [[263, "gammapy.modeling.models.Shell2SpatialModel.position_error", false]], "position_error (gammapy.modeling.models.shellspatialmodel attribute)": [[264, "gammapy.modeling.models.ShellSpatialModel.position_error", false]], "position_error (gammapy.modeling.models.spatialmodel attribute)": [[268, "gammapy.modeling.models.SpatialModel.position_error", false]], "position_error (gammapy.modeling.models.templatendspatialmodel attribute)": [[274, "gammapy.modeling.models.TemplateNDSpatialModel.position_error", false]], "position_error (gammapy.modeling.models.templatespatialmodel attribute)": [[278, "gammapy.modeling.models.TemplateSpatialModel.position_error", false]], "position_lonlat (gammapy.modeling.models.constantfluxspatialmodel attribute)": [[222, "gammapy.modeling.models.ConstantFluxSpatialModel.position_lonlat", false]], "position_lonlat (gammapy.modeling.models.constantspatialmodel attribute)": [[223, "gammapy.modeling.models.ConstantSpatialModel.position_lonlat", false]], "position_lonlat (gammapy.modeling.models.diskspatialmodel attribute)": [[227, "gammapy.modeling.models.DiskSpatialModel.position_lonlat", false]], "position_lonlat (gammapy.modeling.models.gaussianspatialmodel attribute)": [[236, "gammapy.modeling.models.GaussianSpatialModel.position_lonlat", false]], "position_lonlat (gammapy.modeling.models.generalizedgaussianspatialmodel attribute)": [[239, "gammapy.modeling.models.GeneralizedGaussianSpatialModel.position_lonlat", false]], "position_lonlat (gammapy.modeling.models.piecewisenormspatialmodel attribute)": [[252, "gammapy.modeling.models.PiecewiseNormSpatialModel.position_lonlat", false]], "position_lonlat (gammapy.modeling.models.pointspatialmodel attribute)": [[254, "gammapy.modeling.models.PointSpatialModel.position_lonlat", false]], "position_lonlat (gammapy.modeling.models.shell2spatialmodel attribute)": [[263, "gammapy.modeling.models.Shell2SpatialModel.position_lonlat", false]], "position_lonlat (gammapy.modeling.models.shellspatialmodel attribute)": [[264, "gammapy.modeling.models.ShellSpatialModel.position_lonlat", false]], "position_lonlat (gammapy.modeling.models.skymodel attribute)": [[266, "gammapy.modeling.models.SkyModel.position_lonlat", false]], "position_lonlat (gammapy.modeling.models.spatialmodel attribute)": [[268, "gammapy.modeling.models.SpatialModel.position_lonlat", false]], "position_lonlat (gammapy.modeling.models.templatendspatialmodel attribute)": [[274, "gammapy.modeling.models.TemplateNDSpatialModel.position_lonlat", false]], "position_lonlat (gammapy.modeling.models.templatespatialmodel attribute)": [[278, "gammapy.modeling.models.TemplateSpatialModel.position_lonlat", false]], "positions (gammapy.catalog.sourcecatalog attribute)": [[56, "gammapy.catalog.SourceCatalog.positions", false]], "positions (gammapy.catalog.sourcecatalog1lhaaso attribute)": [[57, "gammapy.catalog.SourceCatalog1LHAASO.positions", false]], "positions (gammapy.catalog.sourcecatalog2fhl attribute)": [[58, "gammapy.catalog.SourceCatalog2FHL.positions", false]], "positions (gammapy.catalog.sourcecatalog2hwc attribute)": [[59, "gammapy.catalog.SourceCatalog2HWC.positions", false]], "positions (gammapy.catalog.sourcecatalog2pc attribute)": [[60, "gammapy.catalog.SourceCatalog2PC.positions", false]], "positions (gammapy.catalog.sourcecatalog3fgl attribute)": [[61, "gammapy.catalog.SourceCatalog3FGL.positions", false]], "positions (gammapy.catalog.sourcecatalog3fhl attribute)": [[62, "gammapy.catalog.SourceCatalog3FHL.positions", false]], "positions (gammapy.catalog.sourcecatalog3hwc attribute)": [[63, "gammapy.catalog.SourceCatalog3HWC.positions", false]], "positions (gammapy.catalog.sourcecatalog3pc attribute)": [[64, "gammapy.catalog.SourceCatalog3PC.positions", false]], "positions (gammapy.catalog.sourcecatalog4fgl attribute)": [[65, "gammapy.catalog.SourceCatalog4FGL.positions", false]], "positions (gammapy.catalog.sourcecataloggammacat attribute)": [[66, "gammapy.catalog.SourceCatalogGammaCat.positions", false]], "positions (gammapy.catalog.sourcecataloghgps attribute)": [[67, "gammapy.catalog.SourceCatalogHGPS.positions", false]], "positions (gammapy.modeling.models.datasetmodels attribute)": [[226, "gammapy.modeling.models.DatasetModels.positions", false]], "positions (gammapy.modeling.models.models attribute)": [[250, "gammapy.modeling.models.Models.positions", false]], "powerlaw2spectralmodel (class in gammapy.modeling.models)": [[255, "gammapy.modeling.models.PowerLaw2SpectralModel", false]], "powerlawnormspectralmodel (class in gammapy.modeling.models)": [[256, "gammapy.modeling.models.PowerLawNormSpectralModel", false]], "powerlawspectralmodel (class in gammapy.modeling.models)": [[257, "gammapy.modeling.models.PowerLawSpectralModel", false]], "powerlawtemporalmodel (class in gammapy.modeling.models)": [[258, "gammapy.modeling.models.PowerLawTemporalModel", false]], "pprint() (gammapy.data.hduindextable method)": [[87, "gammapy.data.HDUIndexTable.pprint", false]], "pprint() (gammapy.data.observationtable method)": [[91, "gammapy.data.ObservationTable.pprint", false]], "pprint_all() (gammapy.data.hduindextable method)": [[87, "gammapy.data.HDUIndexTable.pprint_all", false]], "pprint_all() (gammapy.data.observationtable method)": [[91, "gammapy.data.ObservationTable.pprint_all", false]], "pprint_exclude_names (gammapy.data.hduindextable attribute)": [[87, "gammapy.data.HDUIndexTable.pprint_exclude_names", false]], "pprint_exclude_names (gammapy.data.observationtable attribute)": [[91, "gammapy.data.ObservationTable.pprint_exclude_names", false]], "pprint_include_names (gammapy.data.hduindextable attribute)": [[87, "gammapy.data.HDUIndexTable.pprint_include_names", false]], "pprint_include_names (gammapy.data.observationtable attribute)": [[91, "gammapy.data.ObservationTable.pprint_include_names", false]], "prepare_inputs() (gammapy.astro.population.casebattacharya1998 method)": [[28, "gammapy.astro.population.CaseBattacharya1998.prepare_inputs", false]], "prepare_inputs() (gammapy.astro.population.exponential method)": [[29, "gammapy.astro.population.Exponential.prepare_inputs", false]], "prepare_inputs() (gammapy.astro.population.faucherkaspi2006 method)": [[30, "gammapy.astro.population.FaucherKaspi2006.prepare_inputs", false]], "prepare_inputs() (gammapy.astro.population.faucherkaspi2006velocitybimodal method)": [[31, "gammapy.astro.population.FaucherKaspi2006VelocityBimodal.prepare_inputs", false]], "prepare_inputs() (gammapy.astro.population.faucherkaspi2006velocitymaxwellian method)": [[32, "gammapy.astro.population.FaucherKaspi2006VelocityMaxwellian.prepare_inputs", false]], "prepare_inputs() (gammapy.astro.population.lorimer2006 method)": [[35, "gammapy.astro.population.Lorimer2006.prepare_inputs", false]], "prepare_inputs() (gammapy.astro.population.paczynski1990 method)": [[36, "gammapy.astro.population.Paczynski1990.prepare_inputs", false]], "prepare_inputs() (gammapy.astro.population.paczynski1990velocity method)": [[37, "gammapy.astro.population.Paczynski1990Velocity.prepare_inputs", false]], "prepare_inputs() (gammapy.astro.population.yusifovkucuk2004 method)": [[39, "gammapy.astro.population.YusifovKucuk2004.prepare_inputs", false]], "prepare_inputs() (gammapy.astro.population.yusifovkucuk2004b method)": [[40, "gammapy.astro.population.YusifovKucuk2004B.prepare_inputs", false]], "prepare_outputs() (gammapy.astro.population.casebattacharya1998 method)": [[28, "gammapy.astro.population.CaseBattacharya1998.prepare_outputs", false]], "prepare_outputs() (gammapy.astro.population.exponential method)": [[29, "gammapy.astro.population.Exponential.prepare_outputs", false]], "prepare_outputs() (gammapy.astro.population.faucherkaspi2006 method)": [[30, "gammapy.astro.population.FaucherKaspi2006.prepare_outputs", false]], "prepare_outputs() (gammapy.astro.population.faucherkaspi2006velocitybimodal method)": [[31, "gammapy.astro.population.FaucherKaspi2006VelocityBimodal.prepare_outputs", false]], "prepare_outputs() (gammapy.astro.population.faucherkaspi2006velocitymaxwellian method)": [[32, "gammapy.astro.population.FaucherKaspi2006VelocityMaxwellian.prepare_outputs", false]], "prepare_outputs() (gammapy.astro.population.lorimer2006 method)": [[35, "gammapy.astro.population.Lorimer2006.prepare_outputs", false]], "prepare_outputs() (gammapy.astro.population.paczynski1990 method)": [[36, "gammapy.astro.population.Paczynski1990.prepare_outputs", false]], "prepare_outputs() (gammapy.astro.population.paczynski1990velocity method)": [[37, "gammapy.astro.population.Paczynski1990Velocity.prepare_outputs", false]], "prepare_outputs() (gammapy.astro.population.yusifovkucuk2004 method)": [[39, "gammapy.astro.population.YusifovKucuk2004.prepare_outputs", false]], "prepare_outputs() (gammapy.astro.population.yusifovkucuk2004b method)": [[40, "gammapy.astro.population.YusifovKucuk2004B.prepare_outputs", false]], "primary_axis (gammapy.maps.mapaxes attribute)": [[199, "gammapy.maps.MapAxes.primary_axis", false]], "primaryflux (class in gammapy.astro.darkmatter)": [[26, "gammapy.astro.darkmatter.PrimaryFlux", false]], "prior (class in gammapy.modeling.models)": [[259, "gammapy.modeling.models.Prior", false]], "prior (gammapy.modeling.parameter attribute)": [[216, "gammapy.modeling.Parameter.prior", false]], "prior (gammapy.modeling.parameters attribute)": [[217, "gammapy.modeling.Parameters.prior", false]], "prior (gammapy.modeling.priorparameter attribute)": [[218, "gammapy.modeling.PriorParameter.prior", false]], "prior (gammapy.modeling.priorparameters attribute)": [[219, "gammapy.modeling.PriorParameters.prior", false]], "prior_stat_sum() (gammapy.modeling.parameter method)": [[216, "gammapy.modeling.Parameter.prior_stat_sum", false]], "prior_stat_sum() (gammapy.modeling.parameters method)": [[217, "gammapy.modeling.Parameters.prior_stat_sum", false]], "prior_stat_sum() (gammapy.modeling.priorparameter method)": [[218, "gammapy.modeling.PriorParameter.prior_stat_sum", false]], "prior_stat_sum() (gammapy.modeling.priorparameters method)": [[219, "gammapy.modeling.PriorParameters.prior_stat_sum", false]], "priorparameter (class in gammapy.modeling)": [[218, "gammapy.modeling.PriorParameter", false]], "priorparameters (class in gammapy.modeling)": [[219, "gammapy.modeling.PriorParameters", false]], "profile (gammapy.estimators.imageprofile attribute)": [[130, "gammapy.estimators.ImageProfile.profile", false]], "profile_err (gammapy.estimators.imageprofile attribute)": [[130, "gammapy.estimators.ImageProfile.profile_err", false]], "projected_distance_axis (gammapy.estimators.fluxprofileestimator attribute)": [[129, "gammapy.estimators.FluxProfileEstimator.projected_distance_axis", false]], "projection (gammapy.maps.hpxgeom attribute)": [[194, "gammapy.maps.HpxGeom.projection", false]], "projection (gammapy.maps.regiongeom attribute)": [[203, "gammapy.maps.RegionGeom.projection", false]], "projection (gammapy.maps.wcsgeom attribute)": [[206, "gammapy.maps.WcsGeom.projection", false]], "psf": [[581, "term-PSF", true]], "psf (gammapy.data.observation attribute)": [[88, "gammapy.data.Observation.psf", false]], "psf (gammapy.datasets.mapdataset attribute)": [[103, "gammapy.datasets.MapDataset.psf", false]], "psf (gammapy.datasets.mapdatasetonoff attribute)": [[106, "gammapy.datasets.MapDatasetOnOff.psf", false]], "psf (gammapy.datasets.spectrumdataset attribute)": [[110, "gammapy.datasets.SpectrumDataset.psf", false]], "psf (gammapy.datasets.spectrumdatasetonoff attribute)": [[111, "gammapy.datasets.SpectrumDatasetOnOff.psf", false]], "psf3d (class in gammapy.irf)": [[162, "gammapy.irf.PSF3D", false]], "psf_kernel_map (gammapy.irf.psfkernel attribute)": [[163, "gammapy.irf.PSFKernel.psf_kernel_map", false]], "psf_map (gammapy.irf.psfmap attribute)": [[165, "gammapy.irf.PSFMap.psf_map", false]], "psf_map (gammapy.irf.recopsfmap attribute)": [[168, "gammapy.irf.RecoPSFMap.psf_map", false]], "psfkernel (class in gammapy.irf)": [[163, "gammapy.irf.PSFKernel", false]], "psfking (class in gammapy.irf)": [[164, "gammapy.irf.PSFKing", false]], "psfmap (class in gammapy.irf)": [[165, "gammapy.irf.PSFMap", false]], "pulsar (class in gammapy.astro.source)": [[51, "gammapy.astro.source.Pulsar", false]], "pwn (class in gammapy.astro.source)": [[50, "gammapy.astro.source.PWN", false]], "quantity (gammapy.irf.background2d attribute)": [[149, "gammapy.irf.Background2D.quantity", false]], "quantity (gammapy.irf.background3d attribute)": [[150, "gammapy.irf.Background3D.quantity", false]], "quantity (gammapy.irf.backgroundirf attribute)": [[151, "gammapy.irf.BackgroundIRF.quantity", false]], "quantity (gammapy.irf.edispkernel attribute)": [[152, "gammapy.irf.EDispKernel.quantity", false]], "quantity (gammapy.irf.effectiveareatable2d attribute)": [[155, "gammapy.irf.EffectiveAreaTable2D.quantity", false]], "quantity (gammapy.irf.energydependentmultigausspsf attribute)": [[156, "gammapy.irf.EnergyDependentMultiGaussPSF.quantity", false]], "quantity (gammapy.irf.energydispersion2d attribute)": [[157, "gammapy.irf.EnergyDispersion2D.quantity", false]], "quantity (gammapy.irf.irf attribute)": [[159, "gammapy.irf.IRF.quantity", false]], "quantity (gammapy.irf.parametricpsf attribute)": [[166, "gammapy.irf.ParametricPSF.quantity", false]], "quantity (gammapy.irf.psf3d attribute)": [[162, "gammapy.irf.PSF3D.quantity", false]], "quantity (gammapy.irf.psfking attribute)": [[164, "gammapy.irf.PSFKing.quantity", false]], "quantity (gammapy.irf.radmax2d attribute)": [[167, "gammapy.irf.RadMax2D.quantity", false]], "quantity (gammapy.maps.hpxmap attribute)": [[195, "gammapy.maps.HpxMap.quantity", false]], "quantity (gammapy.maps.hpxndmap attribute)": [[196, "gammapy.maps.HpxNDMap.quantity", false]], "quantity (gammapy.maps.map attribute)": [[198, "gammapy.maps.Map.quantity", false]], "quantity (gammapy.maps.regionndmap attribute)": [[204, "gammapy.maps.RegionNDMap.quantity", false]], "quantity (gammapy.maps.wcsmap attribute)": [[207, "gammapy.maps.WcsMap.quantity", false]], "quantity (gammapy.maps.wcsndmap attribute)": [[208, "gammapy.maps.WcsNDMap.quantity", false]], "quantity (gammapy.modeling.parameter attribute)": [[216, "gammapy.modeling.Parameter.quantity", false]], "quantity (gammapy.modeling.priorparameter attribute)": [[218, "gammapy.modeling.PriorParameter.quantity", false]], "r_0 (gammapy.astro.population.faucherkaspi2006 attribute)": [[30, "gammapy.astro.population.FaucherKaspi2006.r_0", false]], "r_0 (gammapy.astro.population.faucherspiral attribute)": [[33, "gammapy.astro.population.FaucherSpiral.r_0", false]], "r_0 (gammapy.astro.population.valleespiral attribute)": [[38, "gammapy.astro.population.ValleeSpiral.r_0", false]], "r_0 (gammapy.modeling.models.diskspatialmodel attribute)": [[227, "gammapy.modeling.models.DiskSpatialModel.r_0", false]], "r_0 (gammapy.modeling.models.generalizedgaussianspatialmodel attribute)": [[239, "gammapy.modeling.models.GeneralizedGaussianSpatialModel.r_0", false]], "r_0 (gammapy.modeling.models.shell2spatialmodel attribute)": [[263, "gammapy.modeling.models.Shell2SpatialModel.r_0", false]], "r_1 (gammapy.astro.population.yusifovkucuk2004 attribute)": [[39, "gammapy.astro.population.YusifovKucuk2004.r_1", false]], "r_exp (gammapy.astro.population.paczynski1990 attribute)": [[36, "gammapy.astro.population.Paczynski1990.r_exp", false]], "r_in (gammapy.modeling.models.shell2spatialmodel attribute)": [[263, "gammapy.modeling.models.Shell2SpatialModel.r_in", false]], "r_sun (gammapy.astro.population.valleespiral attribute)": [[38, "gammapy.astro.population.ValleeSpiral.r_sun", false]], "rad_max (gammapy.data.observation attribute)": [[88, "gammapy.data.Observation.rad_max", false]], "radec (gammapy.data.eventlist attribute)": [[83, "gammapy.data.EventList.radec", false]], "radec (gammapy.data.pointinginfo attribute)": [[94, "gammapy.data.PointingInfo.radec", false]], "radec (gammapy.irf.fovalignment attribute)": [[158, "gammapy.irf.FoVAlignment.RADEC", false]], "radial_distributions (in module gammapy.astro.population)": [[48, "gammapy.astro.population.radial_distributions", false]], "radius (gammapy.modeling.models.shellspatialmodel attribute)": [[264, "gammapy.modeling.models.ShellSpatialModel.radius", false]], "radius() (gammapy.astro.population.faucherspiral method)": [[33, "gammapy.astro.population.FaucherSpiral.radius", false]], "radius() (gammapy.astro.population.logspiral method)": [[34, "gammapy.astro.population.LogSpiral.radius", false]], "radius() (gammapy.astro.population.valleespiral method)": [[38, "gammapy.astro.population.ValleeSpiral.radius", false]], "radius() (gammapy.astro.source.pwn method)": [[50, "gammapy.astro.source.PWN.radius", false]], "radius() (gammapy.astro.source.snr method)": [[52, "gammapy.astro.source.SNR.radius", false]], "radius() (gammapy.astro.source.snrtruelovemckee method)": [[53, "gammapy.astro.source.SNRTrueloveMcKee.radius", false]], "radius_inner() (gammapy.astro.source.snr method)": [[52, "gammapy.astro.source.SNR.radius_inner", false]], "radius_inner() (gammapy.astro.source.snrtruelovemckee method)": [[53, "gammapy.astro.source.SNRTrueloveMcKee.radius_inner", false]], "radius_reverse_shock() (gammapy.astro.source.snrtruelovemckee method)": [[53, "gammapy.astro.source.SNRTrueloveMcKee.radius_reverse_shock", false]], "radmax2d (class in gammapy.irf)": [[167, "gammapy.irf.RadMax2D", false]], "read() (gammapy.analysis.analysisconfig class method)": [[16, "gammapy.analysis.AnalysisConfig.read", false]], "read() (gammapy.data.eventlist class method)": [[83, "gammapy.data.EventList.read", false]], "read() (gammapy.data.fixedpointinginfo class method)": [[85, "gammapy.data.FixedPointingInfo.read", false]], "read() (gammapy.data.gti class method)": [[86, "gammapy.data.GTI.read", false]], "read() (gammapy.data.hduindextable class method)": [[87, "gammapy.data.HDUIndexTable.read", false]], "read() (gammapy.data.observation class method)": [[88, "gammapy.data.Observation.read", false]], "read() (gammapy.data.observationtable class method)": [[91, "gammapy.data.ObservationTable.read", false]], "read() (gammapy.data.pointinginfo class method)": [[94, "gammapy.data.PointingInfo.read", false]], "read() (gammapy.datasets.datasets class method)": [[100, "gammapy.datasets.Datasets.read", false]], "read() (gammapy.datasets.fermipydatasetsreader method)": [[101, "gammapy.datasets.FermipyDatasetsReader.read", false]], "read() (gammapy.datasets.fluxpointsdataset class method)": [[102, "gammapy.datasets.FluxPointsDataset.read", false]], "read() (gammapy.datasets.mapdataset class method)": [[103, "gammapy.datasets.MapDataset.read", false]], "read() (gammapy.datasets.mapdatasetonoff class method)": [[106, "gammapy.datasets.MapDatasetOnOff.read", false]], "read() (gammapy.datasets.ogipdatasetreader method)": [[107, "gammapy.datasets.OGIPDatasetReader.read", false]], "read() (gammapy.datasets.spectrumdataset class method)": [[110, "gammapy.datasets.SpectrumDataset.read", false]], "read() (gammapy.datasets.spectrumdatasetonoff class method)": [[111, "gammapy.datasets.SpectrumDatasetOnOff.read", false]], "read() (gammapy.estimators.fluxmaps class method)": [[125, "gammapy.estimators.FluxMaps.read", false]], "read() (gammapy.estimators.fluxpoints class method)": [[127, "gammapy.estimators.FluxPoints.read", false]], "read() (gammapy.irf.background2d class method)": [[149, "gammapy.irf.Background2D.read", false]], "read() (gammapy.irf.background3d class method)": [[150, "gammapy.irf.Background3D.read", false]], "read() (gammapy.irf.backgroundirf class method)": [[151, "gammapy.irf.BackgroundIRF.read", false]], "read() (gammapy.irf.edispkernel class method)": [[152, "gammapy.irf.EDispKernel.read", false]], "read() (gammapy.irf.edispkernelmap class method)": [[153, "gammapy.irf.EDispKernelMap.read", false]], "read() (gammapy.irf.edispmap class method)": [[154, "gammapy.irf.EDispMap.read", false]], "read() (gammapy.irf.effectiveareatable2d class method)": [[155, "gammapy.irf.EffectiveAreaTable2D.read", false]], "read() (gammapy.irf.energydependentmultigausspsf class method)": [[156, "gammapy.irf.EnergyDependentMultiGaussPSF.read", false]], "read() (gammapy.irf.energydispersion2d class method)": [[157, "gammapy.irf.EnergyDispersion2D.read", false]], "read() (gammapy.irf.irf class method)": [[159, "gammapy.irf.IRF.read", false]], "read() (gammapy.irf.irfmap class method)": [[160, "gammapy.irf.IRFMap.read", false]], "read() (gammapy.irf.parametricpsf class method)": [[166, "gammapy.irf.ParametricPSF.read", false]], "read() (gammapy.irf.psf3d class method)": [[162, "gammapy.irf.PSF3D.read", false]], "read() (gammapy.irf.psfkernel class method)": [[163, "gammapy.irf.PSFKernel.read", false]], "read() (gammapy.irf.psfking class method)": [[164, "gammapy.irf.PSFKing.read", false]], "read() (gammapy.irf.psfmap class method)": [[165, "gammapy.irf.PSFMap.read", false]], "read() (gammapy.irf.radmax2d class method)": [[167, "gammapy.irf.RadMax2D.read", false]], "read() (gammapy.irf.recopsfmap class method)": [[168, "gammapy.irf.RecoPSFMap.read", false]], "read() (gammapy.maps.hpxmap static method)": [[195, "gammapy.maps.HpxMap.read", false]], "read() (gammapy.maps.hpxndmap static method)": [[196, "gammapy.maps.HpxNDMap.read", false]], "read() (gammapy.maps.map static method)": [[198, "gammapy.maps.Map.read", false]], "read() (gammapy.maps.maps class method)": [[202, "gammapy.maps.Maps.read", false]], "read() (gammapy.maps.regionndmap class method)": [[204, "gammapy.maps.RegionNDMap.read", false]], "read() (gammapy.maps.wcsmap static method)": [[207, "gammapy.maps.WcsMap.read", false]], "read() (gammapy.maps.wcsndmap static method)": [[208, "gammapy.maps.WcsNDMap.read", false]], "read() (gammapy.modeling.models.datasetmodels class method)": [[226, "gammapy.modeling.models.DatasetModels.read", false]], "read() (gammapy.modeling.models.eblabsorptionnormspectralmodel class method)": [[228, "gammapy.modeling.models.EBLAbsorptionNormSpectralModel.read", false]], "read() (gammapy.modeling.models.lightcurvetemplatetemporalmodel class method)": [[241, "gammapy.modeling.models.LightCurveTemplateTemporalModel.read", false]], "read() (gammapy.modeling.models.models class method)": [[250, "gammapy.modeling.models.Models.read", false]], "read() (gammapy.modeling.models.templatephasecurvetemporalmodel class method)": [[277, "gammapy.modeling.models.TemplatePhaseCurveTemporalModel.read", false]], "read() (gammapy.modeling.models.templatespatialmodel class method)": [[278, "gammapy.modeling.models.TemplateSpatialModel.read", false]], "read_arf() (gammapy.datasets.ogipdatasetreader static method)": [[107, "gammapy.datasets.OGIPDatasetReader.read_arf", false]], "read_bkg() (gammapy.datasets.ogipdatasetreader static method)": [[107, "gammapy.datasets.OGIPDatasetReader.read_bkg", false]], "read_builtin() (gammapy.modeling.models.eblabsorptionnormspectralmodel class method)": [[228, "gammapy.modeling.models.EBLAbsorptionNormSpectralModel.read_builtin", false]], "read_covariance() (gammapy.modeling.models.datasetmodels method)": [[226, "gammapy.modeling.models.DatasetModels.read_covariance", false]], "read_covariance() (gammapy.modeling.models.models method)": [[250, "gammapy.modeling.models.Models.read_covariance", false]], "read_datasets() (gammapy.analysis.analysis method)": [[15, "gammapy.analysis.Analysis.read_datasets", false]], "read_hermes_cube() (in module gammapy.modeling.models)": [[286, "gammapy.modeling.models.read_hermes_cube", false]], "read_hermes_cube() (in module gammapy.modeling.models.utils)": [[288, "gammapy.modeling.models.utils.read_hermes_cube", false]], "read_models() (gammapy.analysis.analysis method)": [[15, "gammapy.analysis.Analysis.read_models", false]], "read_pha() (gammapy.datasets.ogipdatasetreader static method)": [[107, "gammapy.datasets.OGIPDatasetReader.read_pha", false]], "read_rmf() (gammapy.datasets.ogipdatasetreader static method)": [[107, "gammapy.datasets.OGIPDatasetReader.read_rmf", false]], "read_xspec_model() (gammapy.modeling.models.templatespectralmodel class method)": [[279, "gammapy.modeling.models.TemplateSpectralModel.read_xspec_model", false]], "read_yaml() (in module gammapy.utils.scripts)": [[349, "gammapy.utils.scripts.read_yaml", false]], "reassign() (gammapy.astro.darkmatter.darkmatterannihilationspectralmodel method)": [[19, "gammapy.astro.darkmatter.DarkMatterAnnihilationSpectralModel.reassign", false]], "reassign() (gammapy.astro.darkmatter.darkmatterdecayspectralmodel method)": [[20, "gammapy.astro.darkmatter.DarkMatterDecaySpectralModel.reassign", false]], "reassign() (gammapy.astro.darkmatter.primaryflux method)": [[26, "gammapy.astro.darkmatter.PrimaryFlux.reassign", false]], "reassign() (gammapy.modeling.models.brokenpowerlawspectralmodel method)": [[220, "gammapy.modeling.models.BrokenPowerLawSpectralModel.reassign", false]], "reassign() (gammapy.modeling.models.compoundspectralmodel method)": [[221, "gammapy.modeling.models.CompoundSpectralModel.reassign", false]], "reassign() (gammapy.modeling.models.constantfluxspatialmodel method)": [[222, "gammapy.modeling.models.ConstantFluxSpatialModel.reassign", false]], "reassign() (gammapy.modeling.models.constantspatialmodel method)": [[223, "gammapy.modeling.models.ConstantSpatialModel.reassign", false]], "reassign() (gammapy.modeling.models.constantspectralmodel method)": [[224, "gammapy.modeling.models.ConstantSpectralModel.reassign", false]], "reassign() (gammapy.modeling.models.constanttemporalmodel method)": [[225, "gammapy.modeling.models.ConstantTemporalModel.reassign", false]], "reassign() (gammapy.modeling.models.datasetmodels method)": [[226, "gammapy.modeling.models.DatasetModels.reassign", false]], "reassign() (gammapy.modeling.models.diskspatialmodel method)": [[227, "gammapy.modeling.models.DiskSpatialModel.reassign", false]], "reassign() (gammapy.modeling.models.eblabsorptionnormspectralmodel method)": [[228, "gammapy.modeling.models.EBLAbsorptionNormSpectralModel.reassign", false]], "reassign() (gammapy.modeling.models.expcutoffpowerlaw3fglspectralmodel method)": [[230, "gammapy.modeling.models.ExpCutoffPowerLaw3FGLSpectralModel.reassign", false]], "reassign() (gammapy.modeling.models.expcutoffpowerlawnormspectralmodel method)": [[231, "gammapy.modeling.models.ExpCutoffPowerLawNormSpectralModel.reassign", false]], "reassign() (gammapy.modeling.models.expcutoffpowerlawspectralmodel method)": [[232, "gammapy.modeling.models.ExpCutoffPowerLawSpectralModel.reassign", false]], "reassign() (gammapy.modeling.models.expdecaytemporalmodel method)": [[233, "gammapy.modeling.models.ExpDecayTemporalModel.reassign", false]], "reassign() (gammapy.modeling.models.fovbackgroundmodel method)": [[234, "gammapy.modeling.models.FoVBackgroundModel.reassign", false]], "reassign() (gammapy.modeling.models.gaussianprior method)": [[235, "gammapy.modeling.models.GaussianPrior.reassign", false]], "reassign() (gammapy.modeling.models.gaussianspatialmodel method)": [[236, "gammapy.modeling.models.GaussianSpatialModel.reassign", false]], "reassign() (gammapy.modeling.models.gaussianspectralmodel method)": [[237, "gammapy.modeling.models.GaussianSpectralModel.reassign", false]], "reassign() (gammapy.modeling.models.gaussiantemporalmodel method)": [[238, "gammapy.modeling.models.GaussianTemporalModel.reassign", false]], "reassign() (gammapy.modeling.models.generalizedgaussianspatialmodel method)": [[239, "gammapy.modeling.models.GeneralizedGaussianSpatialModel.reassign", false]], "reassign() (gammapy.modeling.models.generalizedgaussiantemporalmodel method)": [[240, "gammapy.modeling.models.GeneralizedGaussianTemporalModel.reassign", false]], "reassign() (gammapy.modeling.models.lightcurvetemplatetemporalmodel method)": [[241, "gammapy.modeling.models.LightCurveTemplateTemporalModel.reassign", false]], "reassign() (gammapy.modeling.models.lineartemporalmodel method)": [[242, "gammapy.modeling.models.LinearTemporalModel.reassign", false]], "reassign() (gammapy.modeling.models.logparabolanormspectralmodel method)": [[243, "gammapy.modeling.models.LogParabolaNormSpectralModel.reassign", false]], "reassign() (gammapy.modeling.models.logparabolaspectralmodel method)": [[244, "gammapy.modeling.models.LogParabolaSpectralModel.reassign", false]], "reassign() (gammapy.modeling.models.loguniformprior method)": [[245, "gammapy.modeling.models.LogUniformPrior.reassign", false]], "reassign() (gammapy.modeling.models.meyercrabspectralmodel method)": [[247, "gammapy.modeling.models.MeyerCrabSpectralModel.reassign", false]], "reassign() (gammapy.modeling.models.modelbase method)": [[249, "gammapy.modeling.models.ModelBase.reassign", false]], "reassign() (gammapy.modeling.models.models method)": [[250, "gammapy.modeling.models.Models.reassign", false]], "reassign() (gammapy.modeling.models.naimaspectralmodel method)": [[251, "gammapy.modeling.models.NaimaSpectralModel.reassign", false]], "reassign() (gammapy.modeling.models.piecewisenormspatialmodel method)": [[252, "gammapy.modeling.models.PiecewiseNormSpatialModel.reassign", false]], "reassign() (gammapy.modeling.models.piecewisenormspectralmodel method)": [[253, "gammapy.modeling.models.PiecewiseNormSpectralModel.reassign", false]], "reassign() (gammapy.modeling.models.pointspatialmodel method)": [[254, "gammapy.modeling.models.PointSpatialModel.reassign", false]], "reassign() (gammapy.modeling.models.powerlaw2spectralmodel method)": [[255, "gammapy.modeling.models.PowerLaw2SpectralModel.reassign", false]], "reassign() (gammapy.modeling.models.powerlawnormspectralmodel method)": [[256, "gammapy.modeling.models.PowerLawNormSpectralModel.reassign", false]], "reassign() (gammapy.modeling.models.powerlawspectralmodel method)": [[257, "gammapy.modeling.models.PowerLawSpectralModel.reassign", false]], "reassign() (gammapy.modeling.models.powerlawtemporalmodel method)": [[258, "gammapy.modeling.models.PowerLawTemporalModel.reassign", false]], "reassign() (gammapy.modeling.models.prior method)": [[259, "gammapy.modeling.models.Prior.reassign", false]], "reassign() (gammapy.modeling.models.scalespectralmodel method)": [[262, "gammapy.modeling.models.ScaleSpectralModel.reassign", false]], "reassign() (gammapy.modeling.models.shell2spatialmodel method)": [[263, "gammapy.modeling.models.Shell2SpatialModel.reassign", false]], "reassign() (gammapy.modeling.models.shellspatialmodel method)": [[264, "gammapy.modeling.models.ShellSpatialModel.reassign", false]], "reassign() (gammapy.modeling.models.sinetemporalmodel method)": [[265, "gammapy.modeling.models.SineTemporalModel.reassign", false]], "reassign() (gammapy.modeling.models.skymodel method)": [[266, "gammapy.modeling.models.SkyModel.reassign", false]], "reassign() (gammapy.modeling.models.smoothbrokenpowerlawspectralmodel method)": [[267, "gammapy.modeling.models.SmoothBrokenPowerLawSpectralModel.reassign", false]], "reassign() (gammapy.modeling.models.spatialmodel method)": [[268, "gammapy.modeling.models.SpatialModel.reassign", false]], "reassign() (gammapy.modeling.models.spectralmodel method)": [[269, "gammapy.modeling.models.SpectralModel.reassign", false]], "reassign() (gammapy.modeling.models.superexpcutoffpowerlaw3fglspectralmodel method)": [[270, "gammapy.modeling.models.SuperExpCutoffPowerLaw3FGLSpectralModel.reassign", false]], "reassign() (gammapy.modeling.models.superexpcutoffpowerlaw4fgldr3spectralmodel method)": [[271, "gammapy.modeling.models.SuperExpCutoffPowerLaw4FGLDR3SpectralModel.reassign", false]], "reassign() (gammapy.modeling.models.superexpcutoffpowerlaw4fglspectralmodel method)": [[272, "gammapy.modeling.models.SuperExpCutoffPowerLaw4FGLSpectralModel.reassign", false]], "reassign() (gammapy.modeling.models.templatendspatialmodel method)": [[274, "gammapy.modeling.models.TemplateNDSpatialModel.reassign", false]], "reassign() (gammapy.modeling.models.templatendspectralmodel method)": [[275, "gammapy.modeling.models.TemplateNDSpectralModel.reassign", false]], "reassign() (gammapy.modeling.models.templatenpredmodel method)": [[276, "gammapy.modeling.models.TemplateNPredModel.reassign", false]], "reassign() (gammapy.modeling.models.templatephasecurvetemporalmodel method)": [[277, "gammapy.modeling.models.TemplatePhaseCurveTemporalModel.reassign", false]], "reassign() (gammapy.modeling.models.templatespatialmodel method)": [[278, "gammapy.modeling.models.TemplateSpatialModel.reassign", false]], "reassign() (gammapy.modeling.models.templatespectralmodel method)": [[279, "gammapy.modeling.models.TemplateSpectralModel.reassign", false]], "reassign() (gammapy.modeling.models.temporalmodel method)": [[280, "gammapy.modeling.models.TemporalModel.reassign", false]], "reassign() (gammapy.modeling.models.uniformprior method)": [[281, "gammapy.modeling.models.UniformPrior.reassign", false]], "reco energy": [[581, "term-Reco-Energy", true]], "recompute_ul() (gammapy.estimators.fluxpoints method)": [[127, "gammapy.estimators.FluxPoints.recompute_ul", false]], "recopsfmap (class in gammapy.irf)": [[168, "gammapy.irf.RecoPSFMap", false]], "recursive_merge_dicts() (in module gammapy.utils.scripts)": [[350, "gammapy.utils.scripts.recursive_merge_dicts", false]], "redshift (gammapy.modeling.models.eblabsorptionnormspectralmodel attribute)": [[228, "gammapy.modeling.models.EBLAbsorptionNormSpectralModel.redshift", false]], "reduce() (gammapy.maps.hpxmap method)": [[195, "gammapy.maps.HpxMap.reduce", false]], "reduce() (gammapy.maps.hpxndmap method)": [[196, "gammapy.maps.HpxNDMap.reduce", false]], "reduce() (gammapy.maps.map method)": [[198, "gammapy.maps.Map.reduce", false]], "reduce() (gammapy.maps.regionndmap method)": [[204, "gammapy.maps.RegionNDMap.reduce", false]], "reduce() (gammapy.maps.wcsmap method)": [[207, "gammapy.maps.WcsMap.reduce", false]], "reduce() (gammapy.maps.wcsndmap method)": [[208, "gammapy.maps.WcsNDMap.reduce", false]], "reduce_over_axes() (gammapy.maps.hpxmap method)": [[195, "gammapy.maps.HpxMap.reduce_over_axes", false]], "reduce_over_axes() (gammapy.maps.hpxndmap method)": [[196, "gammapy.maps.HpxNDMap.reduce_over_axes", false]], "reduce_over_axes() (gammapy.maps.map method)": [[198, "gammapy.maps.Map.reduce_over_axes", false]], "reduce_over_axes() (gammapy.maps.regionndmap method)": [[204, "gammapy.maps.RegionNDMap.reduce_over_axes", false]], "reduce_over_axes() (gammapy.maps.wcsmap method)": [[207, "gammapy.maps.WcsMap.reduce_over_axes", false]], "reduce_over_axes() (gammapy.maps.wcsndmap method)": [[208, "gammapy.maps.WcsNDMap.reduce_over_axes", false]], "reference (gammapy.modeling.models.expcutoffpowerlaw3fglspectralmodel attribute)": [[230, "gammapy.modeling.models.ExpCutoffPowerLaw3FGLSpectralModel.reference", false]], "reference (gammapy.modeling.models.expcutoffpowerlawnormspectralmodel attribute)": [[231, "gammapy.modeling.models.ExpCutoffPowerLawNormSpectralModel.reference", false]], "reference (gammapy.modeling.models.expcutoffpowerlawspectralmodel attribute)": [[232, "gammapy.modeling.models.ExpCutoffPowerLawSpectralModel.reference", false]], "reference (gammapy.modeling.models.logparabolanormspectralmodel attribute)": [[243, "gammapy.modeling.models.LogParabolaNormSpectralModel.reference", false]], "reference (gammapy.modeling.models.logparabolaspectralmodel attribute)": [[244, "gammapy.modeling.models.LogParabolaSpectralModel.reference", false]], "reference (gammapy.modeling.models.powerlawnormspectralmodel attribute)": [[256, "gammapy.modeling.models.PowerLawNormSpectralModel.reference", false]], "reference (gammapy.modeling.models.powerlawspectralmodel attribute)": [[257, "gammapy.modeling.models.PowerLawSpectralModel.reference", false]], "reference (gammapy.modeling.models.smoothbrokenpowerlawspectralmodel attribute)": [[267, "gammapy.modeling.models.SmoothBrokenPowerLawSpectralModel.reference", false]], "reference (gammapy.modeling.models.superexpcutoffpowerlaw3fglspectralmodel attribute)": [[270, "gammapy.modeling.models.SuperExpCutoffPowerLaw3FGLSpectralModel.reference", false]], "reference (gammapy.modeling.models.superexpcutoffpowerlaw4fgldr3spectralmodel attribute)": [[271, "gammapy.modeling.models.SuperExpCutoffPowerLaw4FGLDR3SpectralModel.reference", false]], "reference (gammapy.modeling.models.superexpcutoffpowerlaw4fglspectralmodel attribute)": [[272, "gammapy.modeling.models.SuperExpCutoffPowerLaw4FGLSpectralModel.reference", false]], "reference_fluxes() (gammapy.astro.darkmatter.darkmatterannihilationspectralmodel method)": [[19, "gammapy.astro.darkmatter.DarkMatterAnnihilationSpectralModel.reference_fluxes", false]], "reference_fluxes() (gammapy.astro.darkmatter.darkmatterdecayspectralmodel method)": [[20, "gammapy.astro.darkmatter.DarkMatterDecaySpectralModel.reference_fluxes", false]], "reference_fluxes() (gammapy.astro.darkmatter.primaryflux method)": [[26, "gammapy.astro.darkmatter.PrimaryFlux.reference_fluxes", false]], "reference_fluxes() (gammapy.modeling.models.brokenpowerlawspectralmodel method)": [[220, "gammapy.modeling.models.BrokenPowerLawSpectralModel.reference_fluxes", false]], "reference_fluxes() (gammapy.modeling.models.compoundspectralmodel method)": [[221, "gammapy.modeling.models.CompoundSpectralModel.reference_fluxes", false]], "reference_fluxes() (gammapy.modeling.models.constantspectralmodel method)": [[224, "gammapy.modeling.models.ConstantSpectralModel.reference_fluxes", false]], "reference_fluxes() (gammapy.modeling.models.eblabsorptionnormspectralmodel method)": [[228, "gammapy.modeling.models.EBLAbsorptionNormSpectralModel.reference_fluxes", false]], "reference_fluxes() (gammapy.modeling.models.expcutoffpowerlaw3fglspectralmodel method)": [[230, "gammapy.modeling.models.ExpCutoffPowerLaw3FGLSpectralModel.reference_fluxes", false]], "reference_fluxes() (gammapy.modeling.models.expcutoffpowerlawnormspectralmodel method)": [[231, "gammapy.modeling.models.ExpCutoffPowerLawNormSpectralModel.reference_fluxes", false]], "reference_fluxes() (gammapy.modeling.models.expcutoffpowerlawspectralmodel method)": [[232, "gammapy.modeling.models.ExpCutoffPowerLawSpectralModel.reference_fluxes", false]], "reference_fluxes() (gammapy.modeling.models.gaussianspectralmodel method)": [[237, "gammapy.modeling.models.GaussianSpectralModel.reference_fluxes", false]], "reference_fluxes() (gammapy.modeling.models.logparabolanormspectralmodel method)": [[243, "gammapy.modeling.models.LogParabolaNormSpectralModel.reference_fluxes", false]], "reference_fluxes() (gammapy.modeling.models.logparabolaspectralmodel method)": [[244, "gammapy.modeling.models.LogParabolaSpectralModel.reference_fluxes", false]], "reference_fluxes() (gammapy.modeling.models.meyercrabspectralmodel method)": [[247, "gammapy.modeling.models.MeyerCrabSpectralModel.reference_fluxes", false]], "reference_fluxes() (gammapy.modeling.models.naimaspectralmodel method)": [[251, "gammapy.modeling.models.NaimaSpectralModel.reference_fluxes", false]], "reference_fluxes() (gammapy.modeling.models.piecewisenormspectralmodel method)": [[253, "gammapy.modeling.models.PiecewiseNormSpectralModel.reference_fluxes", false]], "reference_fluxes() (gammapy.modeling.models.powerlaw2spectralmodel method)": [[255, "gammapy.modeling.models.PowerLaw2SpectralModel.reference_fluxes", false]], "reference_fluxes() (gammapy.modeling.models.powerlawnormspectralmodel method)": [[256, "gammapy.modeling.models.PowerLawNormSpectralModel.reference_fluxes", false]], "reference_fluxes() (gammapy.modeling.models.powerlawspectralmodel method)": [[257, "gammapy.modeling.models.PowerLawSpectralModel.reference_fluxes", false]], "reference_fluxes() (gammapy.modeling.models.scalespectralmodel method)": [[262, "gammapy.modeling.models.ScaleSpectralModel.reference_fluxes", false]], "reference_fluxes() (gammapy.modeling.models.smoothbrokenpowerlawspectralmodel method)": [[267, "gammapy.modeling.models.SmoothBrokenPowerLawSpectralModel.reference_fluxes", false]], "reference_fluxes() (gammapy.modeling.models.spectralmodel method)": [[269, "gammapy.modeling.models.SpectralModel.reference_fluxes", false]], "reference_fluxes() (gammapy.modeling.models.superexpcutoffpowerlaw3fglspectralmodel method)": [[270, "gammapy.modeling.models.SuperExpCutoffPowerLaw3FGLSpectralModel.reference_fluxes", false]], "reference_fluxes() (gammapy.modeling.models.superexpcutoffpowerlaw4fgldr3spectralmodel method)": [[271, "gammapy.modeling.models.SuperExpCutoffPowerLaw4FGLDR3SpectralModel.reference_fluxes", false]], "reference_fluxes() (gammapy.modeling.models.superexpcutoffpowerlaw4fglspectralmodel method)": [[272, "gammapy.modeling.models.SuperExpCutoffPowerLaw4FGLSpectralModel.reference_fluxes", false]], "reference_fluxes() (gammapy.modeling.models.templatendspectralmodel method)": [[275, "gammapy.modeling.models.TemplateNDSpectralModel.reference_fluxes", false]], "reference_fluxes() (gammapy.modeling.models.templatespectralmodel method)": [[279, "gammapy.modeling.models.TemplateSpectralModel.reference_fluxes", false]], "reference_model (gammapy.estimators.fluxmaps attribute)": [[125, "gammapy.estimators.FluxMaps.reference_model", false]], "reference_model (gammapy.estimators.fluxpoints attribute)": [[127, "gammapy.estimators.FluxPoints.reference_model", false]], "reference_model_default (gammapy.estimators.fluxmaps attribute)": [[125, "gammapy.estimators.FluxMaps.reference_model_default", false]], "reference_model_default (gammapy.estimators.fluxpoints attribute)": [[127, "gammapy.estimators.FluxPoints.reference_model_default", false]], "reference_spectral_model (gammapy.estimators.fluxmaps attribute)": [[125, "gammapy.estimators.FluxMaps.reference_spectral_model", false]], "reference_spectral_model (gammapy.estimators.fluxpoints attribute)": [[127, "gammapy.estimators.FluxPoints.reference_spectral_model", false]], "reference_time (gammapy.maps.timemapaxis attribute)": [[205, "gammapy.maps.TimeMapAxis.reference_time", false]], "reference_time (gammapy.modeling.models.constanttemporalmodel attribute)": [[225, "gammapy.modeling.models.ConstantTemporalModel.reference_time", false]], "reference_time (gammapy.modeling.models.expdecaytemporalmodel attribute)": [[233, "gammapy.modeling.models.ExpDecayTemporalModel.reference_time", false]], "reference_time (gammapy.modeling.models.gaussiantemporalmodel attribute)": [[238, "gammapy.modeling.models.GaussianTemporalModel.reference_time", false]], "reference_time (gammapy.modeling.models.generalizedgaussiantemporalmodel attribute)": [[240, "gammapy.modeling.models.GeneralizedGaussianTemporalModel.reference_time", false]], "reference_time (gammapy.modeling.models.lightcurvetemplatetemporalmodel attribute)": [[241, "gammapy.modeling.models.LightCurveTemplateTemporalModel.reference_time", false]], "reference_time (gammapy.modeling.models.lineartemporalmodel attribute)": [[242, "gammapy.modeling.models.LinearTemporalModel.reference_time", false]], "reference_time (gammapy.modeling.models.powerlawtemporalmodel attribute)": [[258, "gammapy.modeling.models.PowerLawTemporalModel.reference_time", false]], "reference_time (gammapy.modeling.models.sinetemporalmodel attribute)": [[265, "gammapy.modeling.models.SineTemporalModel.reference_time", false]], "reference_time (gammapy.modeling.models.templatephasecurvetemporalmodel attribute)": [[277, "gammapy.modeling.models.TemplatePhaseCurveTemporalModel.reference_time", false]], "reference_time (gammapy.modeling.models.temporalmodel attribute)": [[280, "gammapy.modeling.models.TemporalModel.reference_time", false]], "reflected background": [[581, "term-Reflected-Background", true]], "reflectedregionsbackgroundmaker (class in gammapy.makers)": [[177, "gammapy.makers.ReflectedRegionsBackgroundMaker", false]], "reflectedregionsfinder (class in gammapy.makers)": [[178, "gammapy.makers.ReflectedRegionsFinder", false]], "region (gammapy.maps.hpxgeom attribute)": [[194, "gammapy.maps.HpxGeom.region", false]], "region (gammapy.maps.regiongeom attribute)": [[203, "gammapy.maps.RegionGeom.region", false]], "region_mask() (gammapy.maps.hpxgeom method)": [[194, "gammapy.maps.HpxGeom.region_mask", false]], "region_mask() (gammapy.maps.wcsgeom method)": [[206, "gammapy.maps.WcsGeom.region_mask", false]], "region_to_frame() (in module gammapy.utils.regions)": [[344, "gammapy.utils.regions.region_to_frame", false]], "region_weights() (gammapy.maps.wcsgeom method)": [[206, "gammapy.maps.WcsGeom.region_weights", false]], "regiongeom (class in gammapy.maps)": [[203, "gammapy.maps.RegionGeom", false]], "regionndmap (class in gammapy.maps)": [[204, "gammapy.maps.RegionNDMap", false]], "regions_to_compound_region() (in module gammapy.utils.regions)": [[345, "gammapy.utils.regions.regions_to_compound_region", false]], "regionsfinder (class in gammapy.makers)": [[179, "gammapy.makers.RegionsFinder", false]], "remove() (gammapy.data.observations method)": [[92, "gammapy.data.Observations.remove", false]], "remove() (gammapy.datasets.datasets method)": [[100, "gammapy.datasets.Datasets.remove", false]], "remove() (gammapy.modeling.models.models method)": [[250, "gammapy.modeling.models.Models.remove", false]], "remove_column() (gammapy.data.hduindextable method)": [[87, "gammapy.data.HDUIndexTable.remove_column", false]], "remove_column() (gammapy.data.observationtable method)": [[91, "gammapy.data.ObservationTable.remove_column", false]], "remove_columns() (gammapy.data.hduindextable method)": [[87, "gammapy.data.HDUIndexTable.remove_columns", false]], "remove_columns() (gammapy.data.observationtable method)": [[91, "gammapy.data.ObservationTable.remove_columns", false]], "remove_indices() (gammapy.data.hduindextable method)": [[87, "gammapy.data.HDUIndexTable.remove_indices", false]], "remove_indices() (gammapy.data.observationtable method)": [[91, "gammapy.data.ObservationTable.remove_indices", false]], "remove_row() (gammapy.data.hduindextable method)": [[87, "gammapy.data.HDUIndexTable.remove_row", false]], "remove_row() (gammapy.data.observationtable method)": [[91, "gammapy.data.ObservationTable.remove_row", false]], "remove_rows() (gammapy.data.hduindextable method)": [[87, "gammapy.data.HDUIndexTable.remove_rows", false]], "remove_rows() (gammapy.data.observationtable method)": [[91, "gammapy.data.ObservationTable.remove_rows", false]], "rename() (gammapy.astro.population.casebattacharya1998 class method)": [[28, "gammapy.astro.population.CaseBattacharya1998.rename", false]], "rename() (gammapy.astro.population.exponential class method)": [[29, "gammapy.astro.population.Exponential.rename", false]], "rename() (gammapy.astro.population.faucherkaspi2006 class method)": [[30, "gammapy.astro.population.FaucherKaspi2006.rename", false]], "rename() (gammapy.astro.population.faucherkaspi2006velocitybimodal class method)": [[31, "gammapy.astro.population.FaucherKaspi2006VelocityBimodal.rename", false]], "rename() (gammapy.astro.population.faucherkaspi2006velocitymaxwellian class method)": [[32, "gammapy.astro.population.FaucherKaspi2006VelocityMaxwellian.rename", false]], "rename() (gammapy.astro.population.lorimer2006 class method)": [[35, "gammapy.astro.population.Lorimer2006.rename", false]], "rename() (gammapy.astro.population.paczynski1990 class method)": [[36, "gammapy.astro.population.Paczynski1990.rename", false]], "rename() (gammapy.astro.population.paczynski1990velocity class method)": [[37, "gammapy.astro.population.Paczynski1990Velocity.rename", false]], "rename() (gammapy.astro.population.yusifovkucuk2004 class method)": [[39, "gammapy.astro.population.YusifovKucuk2004.rename", false]], "rename() (gammapy.astro.population.yusifovkucuk2004b class method)": [[40, "gammapy.astro.population.YusifovKucuk2004B.rename", false]], "rename() (gammapy.maps.mapaxis method)": [[200, "gammapy.maps.MapAxis.rename", false]], "rename_axes() (gammapy.maps.geom method)": [[193, "gammapy.maps.Geom.rename_axes", false]], "rename_axes() (gammapy.maps.hpxgeom method)": [[194, "gammapy.maps.HpxGeom.rename_axes", false]], "rename_axes() (gammapy.maps.hpxmap method)": [[195, "gammapy.maps.HpxMap.rename_axes", false]], "rename_axes() (gammapy.maps.hpxndmap method)": [[196, "gammapy.maps.HpxNDMap.rename_axes", false]], "rename_axes() (gammapy.maps.map method)": [[198, "gammapy.maps.Map.rename_axes", false]], "rename_axes() (gammapy.maps.mapaxes method)": [[199, "gammapy.maps.MapAxes.rename_axes", false]], "rename_axes() (gammapy.maps.regiongeom method)": [[203, "gammapy.maps.RegionGeom.rename_axes", false]], "rename_axes() (gammapy.maps.regionndmap method)": [[204, "gammapy.maps.RegionNDMap.rename_axes", false]], "rename_axes() (gammapy.maps.wcsgeom method)": [[206, "gammapy.maps.WcsGeom.rename_axes", false]], "rename_axes() (gammapy.maps.wcsmap method)": [[207, "gammapy.maps.WcsMap.rename_axes", false]], "rename_axes() (gammapy.maps.wcsndmap method)": [[208, "gammapy.maps.WcsNDMap.rename_axes", false]], "rename_column() (gammapy.data.hduindextable method)": [[87, "gammapy.data.HDUIndexTable.rename_column", false]], "rename_column() (gammapy.data.observationtable method)": [[91, "gammapy.data.ObservationTable.rename_column", false]], "rename_columns() (gammapy.data.hduindextable method)": [[87, "gammapy.data.HDUIndexTable.rename_columns", false]], "rename_columns() (gammapy.data.observationtable method)": [[91, "gammapy.data.ObservationTable.rename_columns", false]], "render() (gammapy.astro.population.casebattacharya1998 method)": [[28, "gammapy.astro.population.CaseBattacharya1998.render", false]], "render() (gammapy.astro.population.exponential method)": [[29, "gammapy.astro.population.Exponential.render", false]], "render() (gammapy.astro.population.faucherkaspi2006 method)": [[30, "gammapy.astro.population.FaucherKaspi2006.render", false]], "render() (gammapy.astro.population.faucherkaspi2006velocitybimodal method)": [[31, "gammapy.astro.population.FaucherKaspi2006VelocityBimodal.render", false]], "render() (gammapy.astro.population.faucherkaspi2006velocitymaxwellian method)": [[32, "gammapy.astro.population.FaucherKaspi2006VelocityMaxwellian.render", false]], "render() (gammapy.astro.population.lorimer2006 method)": [[35, "gammapy.astro.population.Lorimer2006.render", false]], "render() (gammapy.astro.population.paczynski1990 method)": [[36, "gammapy.astro.population.Paczynski1990.render", false]], "render() (gammapy.astro.population.paczynski1990velocity method)": [[37, "gammapy.astro.population.Paczynski1990Velocity.render", false]], "render() (gammapy.astro.population.yusifovkucuk2004 method)": [[39, "gammapy.astro.population.YusifovKucuk2004.render", false]], "render() (gammapy.astro.population.yusifovkucuk2004b method)": [[40, "gammapy.astro.population.YusifovKucuk2004B.render", false]], "reorder_axes() (gammapy.maps.hpxmap method)": [[195, "gammapy.maps.HpxMap.reorder_axes", false]], "reorder_axes() (gammapy.maps.hpxndmap method)": [[196, "gammapy.maps.HpxNDMap.reorder_axes", false]], "reorder_axes() (gammapy.maps.map method)": [[198, "gammapy.maps.Map.reorder_axes", false]], "reorder_axes() (gammapy.maps.regionndmap method)": [[204, "gammapy.maps.RegionNDMap.reorder_axes", false]], "reorder_axes() (gammapy.maps.wcsmap method)": [[207, "gammapy.maps.WcsMap.reorder_axes", false]], "reorder_axes() (gammapy.maps.wcsndmap method)": [[208, "gammapy.maps.WcsNDMap.reorder_axes", false]], "replace() (gammapy.maps.mapaxes method)": [[199, "gammapy.maps.MapAxes.replace", false]], "replace_axis() (gammapy.maps.geom method)": [[193, "gammapy.maps.Geom.replace_axis", false]], "replace_axis() (gammapy.maps.hpxgeom method)": [[194, "gammapy.maps.HpxGeom.replace_axis", false]], "replace_axis() (gammapy.maps.regiongeom method)": [[203, "gammapy.maps.RegionGeom.replace_axis", false]], "replace_axis() (gammapy.maps.wcsgeom method)": [[206, "gammapy.maps.WcsGeom.replace_axis", false]], "replace_column() (gammapy.data.hduindextable method)": [[87, "gammapy.data.HDUIndexTable.replace_column", false]], "replace_column() (gammapy.data.observationtable method)": [[91, "gammapy.data.ObservationTable.replace_column", false]], "reproject_by_image() (gammapy.maps.hpxmap method)": [[195, "gammapy.maps.HpxMap.reproject_by_image", false]], "reproject_by_image() (gammapy.maps.hpxndmap method)": [[196, "gammapy.maps.HpxNDMap.reproject_by_image", false]], "reproject_by_image() (gammapy.maps.map method)": [[198, "gammapy.maps.Map.reproject_by_image", false]], "reproject_by_image() (gammapy.maps.regionndmap method)": [[204, "gammapy.maps.RegionNDMap.reproject_by_image", false]], "reproject_by_image() (gammapy.maps.wcsmap method)": [[207, "gammapy.maps.WcsMap.reproject_by_image", false]], "reproject_by_image() (gammapy.maps.wcsndmap method)": [[208, "gammapy.maps.WcsNDMap.reproject_by_image", false]], "reproject_to_geom() (gammapy.maps.hpxmap method)": [[195, "gammapy.maps.HpxMap.reproject_to_geom", false]], "reproject_to_geom() (gammapy.maps.hpxndmap method)": [[196, "gammapy.maps.HpxNDMap.reproject_to_geom", false]], "reproject_to_geom() (gammapy.maps.map method)": [[198, "gammapy.maps.Map.reproject_to_geom", false]], "reproject_to_geom() (gammapy.maps.regionndmap method)": [[204, "gammapy.maps.RegionNDMap.reproject_to_geom", false]], "reproject_to_geom() (gammapy.maps.wcsmap method)": [[207, "gammapy.maps.WcsMap.reproject_to_geom", false]], "reproject_to_geom() (gammapy.maps.wcsndmap method)": [[208, "gammapy.maps.WcsNDMap.reproject_to_geom", false]], "required_axes (gammapy.irf.background2d attribute)": [[149, "gammapy.irf.Background2D.required_axes", false]], "required_axes (gammapy.irf.background3d attribute)": [[150, "gammapy.irf.Background3D.required_axes", false]], "required_axes (gammapy.irf.backgroundirf attribute)": [[151, "gammapy.irf.BackgroundIRF.required_axes", false]], "required_axes (gammapy.irf.edispkernel attribute)": [[152, "gammapy.irf.EDispKernel.required_axes", false]], "required_axes (gammapy.irf.edispkernelmap attribute)": [[153, "gammapy.irf.EDispKernelMap.required_axes", false]], "required_axes (gammapy.irf.edispmap attribute)": [[154, "gammapy.irf.EDispMap.required_axes", false]], "required_axes (gammapy.irf.effectiveareatable2d attribute)": [[155, "gammapy.irf.EffectiveAreaTable2D.required_axes", false]], "required_axes (gammapy.irf.energydependentmultigausspsf attribute)": [[156, "gammapy.irf.EnergyDependentMultiGaussPSF.required_axes", false]], "required_axes (gammapy.irf.energydispersion2d attribute)": [[157, "gammapy.irf.EnergyDispersion2D.required_axes", false]], "required_axes (gammapy.irf.irf attribute)": [[159, "gammapy.irf.IRF.required_axes", false]], "required_axes (gammapy.irf.irfmap attribute)": [[160, "gammapy.irf.IRFMap.required_axes", false]], "required_axes (gammapy.irf.parametricpsf attribute)": [[166, "gammapy.irf.ParametricPSF.required_axes", false]], "required_axes (gammapy.irf.psf3d attribute)": [[162, "gammapy.irf.PSF3D.required_axes", false]], "required_axes (gammapy.irf.psfking attribute)": [[164, "gammapy.irf.PSFKing.required_axes", false]], "required_axes (gammapy.irf.psfmap attribute)": [[165, "gammapy.irf.PSFMap.required_axes", false]], "required_axes (gammapy.irf.radmax2d attribute)": [[167, "gammapy.irf.RadMax2D.required_axes", false]], "required_axes (gammapy.irf.recopsfmap attribute)": [[168, "gammapy.irf.RecoPSFMap.required_axes", false]], "required_parameters (gammapy.irf.energydependentmultigausspsf attribute)": [[156, "gammapy.irf.EnergyDependentMultiGaussPSF.required_parameters", false]], "required_parameters (gammapy.irf.parametricpsf attribute)": [[166, "gammapy.irf.ParametricPSF.required_parameters", false]], "required_parameters (gammapy.irf.psfking attribute)": [[164, "gammapy.irf.PSFKing.required_parameters", false]], "requires_data() (in module gammapy.utils.testing)": [[362, "gammapy.utils.testing.requires_data", false]], "requires_dependency() (in module gammapy.utils.testing)": [[363, "gammapy.utils.testing.requires_dependency", false]], "resample() (gammapy.maps.hpxmap method)": [[195, "gammapy.maps.HpxMap.resample", false]], "resample() (gammapy.maps.hpxndmap method)": [[196, "gammapy.maps.HpxNDMap.resample", false]], "resample() (gammapy.maps.labelmapaxis method)": [[197, "gammapy.maps.LabelMapAxis.resample", false]], "resample() (gammapy.maps.map method)": [[198, "gammapy.maps.Map.resample", false]], "resample() (gammapy.maps.mapaxes method)": [[199, "gammapy.maps.MapAxes.resample", false]], "resample() (gammapy.maps.regionndmap method)": [[204, "gammapy.maps.RegionNDMap.resample", false]], "resample() (gammapy.maps.wcsmap method)": [[207, "gammapy.maps.WcsMap.resample", false]], "resample() (gammapy.maps.wcsndmap method)": [[208, "gammapy.maps.WcsNDMap.resample", false]], "resample_axis() (gammapy.estimators.fluxpoints method)": [[127, "gammapy.estimators.FluxPoints.resample_axis", false]], "resample_axis() (gammapy.maps.geom method)": [[193, "gammapy.maps.Geom.resample_axis", false]], "resample_axis() (gammapy.maps.hpxgeom method)": [[194, "gammapy.maps.HpxGeom.resample_axis", false]], "resample_axis() (gammapy.maps.hpxmap method)": [[195, "gammapy.maps.HpxMap.resample_axis", false]], "resample_axis() (gammapy.maps.hpxndmap method)": [[196, "gammapy.maps.HpxNDMap.resample_axis", false]], "resample_axis() (gammapy.maps.map method)": [[198, "gammapy.maps.Map.resample_axis", false]], "resample_axis() (gammapy.maps.regiongeom method)": [[203, "gammapy.maps.RegionGeom.resample_axis", false]], "resample_axis() (gammapy.maps.regionndmap method)": [[204, "gammapy.maps.RegionNDMap.resample_axis", false]], "resample_axis() (gammapy.maps.wcsgeom method)": [[206, "gammapy.maps.WcsGeom.resample_axis", false]], "resample_axis() (gammapy.maps.wcsmap method)": [[207, "gammapy.maps.WcsMap.resample_axis", false]], "resample_axis() (gammapy.maps.wcsndmap method)": [[208, "gammapy.maps.WcsNDMap.resample_axis", false]], "resample_energy_axis() (gammapy.datasets.mapdataset method)": [[103, "gammapy.datasets.MapDataset.resample_energy_axis", false]], "resample_energy_axis() (gammapy.datasets.mapdatasetonoff method)": [[106, "gammapy.datasets.MapDatasetOnOff.resample_energy_axis", false]], "resample_energy_axis() (gammapy.datasets.spectrumdataset method)": [[110, "gammapy.datasets.SpectrumDataset.resample_energy_axis", false]], "resample_energy_axis() (gammapy.datasets.spectrumdatasetonoff method)": [[111, "gammapy.datasets.SpectrumDatasetOnOff.resample_energy_axis", false]], "resample_energy_axis() (gammapy.irf.edispkernelmap method)": [[153, "gammapy.irf.EDispKernelMap.resample_energy_axis", false]], "resample_energy_edges() (in module gammapy.estimators.utils)": [[148, "gammapy.estimators.utils.resample_energy_edges", false]], "reset_data_cache() (gammapy.datasets.mapdataset method)": [[103, "gammapy.datasets.MapDataset.reset_data_cache", false]], "reset_data_cache() (gammapy.datasets.mapdatasetonoff method)": [[106, "gammapy.datasets.MapDatasetOnOff.reset_data_cache", false]], "reset_data_cache() (gammapy.datasets.spectrumdataset method)": [[110, "gammapy.datasets.SpectrumDataset.reset_data_cache", false]], "reset_data_cache() (gammapy.datasets.spectrumdatasetonoff method)": [[111, "gammapy.datasets.SpectrumDatasetOnOff.reset_data_cache", false]], "reset_to_default() (gammapy.modeling.models.fovbackgroundmodel method)": [[234, "gammapy.modeling.models.FoVBackgroundModel.reset_to_default", false]], "residuals() (gammapy.datasets.fluxpointsdataset method)": [[102, "gammapy.datasets.FluxPointsDataset.residuals", false]], "residuals() (gammapy.datasets.mapdataset method)": [[103, "gammapy.datasets.MapDataset.residuals", false]], "residuals() (gammapy.datasets.mapdatasetonoff method)": [[106, "gammapy.datasets.MapDatasetOnOff.residuals", false]], "residuals() (gammapy.datasets.spectrumdataset method)": [[110, "gammapy.datasets.SpectrumDataset.residuals", false]], "residuals() (gammapy.datasets.spectrumdatasetonoff method)": [[111, "gammapy.datasets.SpectrumDatasetOnOff.residuals", false]], "restore_status() (gammapy.modeling.models.datasetmodels method)": [[226, "gammapy.modeling.models.DatasetModels.restore_status", false]], "restore_status() (gammapy.modeling.models.models method)": [[250, "gammapy.modeling.models.Models.restore_status", false]], "restore_status() (gammapy.modeling.parameters method)": [[217, "gammapy.modeling.Parameters.restore_status", false]], "restore_status() (gammapy.modeling.priorparameters method)": [[219, "gammapy.modeling.PriorParameters.restore_status", false]], "return_units (gammapy.astro.population.casebattacharya1998 attribute)": [[28, "gammapy.astro.population.CaseBattacharya1998.return_units", false]], "return_units (gammapy.astro.population.exponential attribute)": [[29, "gammapy.astro.population.Exponential.return_units", false]], "return_units (gammapy.astro.population.faucherkaspi2006 attribute)": [[30, "gammapy.astro.population.FaucherKaspi2006.return_units", false]], "return_units (gammapy.astro.population.faucherkaspi2006velocitybimodal attribute)": [[31, "gammapy.astro.population.FaucherKaspi2006VelocityBimodal.return_units", false]], "return_units (gammapy.astro.population.faucherkaspi2006velocitymaxwellian attribute)": [[32, "gammapy.astro.population.FaucherKaspi2006VelocityMaxwellian.return_units", false]], "return_units (gammapy.astro.population.lorimer2006 attribute)": [[35, "gammapy.astro.population.Lorimer2006.return_units", false]], "return_units (gammapy.astro.population.paczynski1990 attribute)": [[36, "gammapy.astro.population.Paczynski1990.return_units", false]], "return_units (gammapy.astro.population.paczynski1990velocity attribute)": [[37, "gammapy.astro.population.Paczynski1990Velocity.return_units", false]], "return_units (gammapy.astro.population.yusifovkucuk2004 attribute)": [[39, "gammapy.astro.population.YusifovKucuk2004.return_units", false]], "return_units (gammapy.astro.population.yusifovkucuk2004b attribute)": [[40, "gammapy.astro.population.YusifovKucuk2004B.return_units", false]], "reverse (gammapy.maps.mapaxes attribute)": [[199, "gammapy.maps.MapAxes.reverse", false]], "reverse() (gammapy.data.hduindextable method)": [[87, "gammapy.data.HDUIndexTable.reverse", false]], "reverse() (gammapy.data.observations method)": [[92, "gammapy.data.Observations.reverse", false]], "reverse() (gammapy.data.observationtable method)": [[91, "gammapy.data.ObservationTable.reverse", false]], "reverse() (gammapy.datasets.datasets method)": [[100, "gammapy.datasets.Datasets.reverse", false]], "reverse() (gammapy.modeling.models.models method)": [[250, "gammapy.modeling.models.Models.reverse", false]], "reverse_lon_radec (gammapy.irf.fovalignment attribute)": [[158, "gammapy.irf.FoVAlignment.REVERSE_LON_RADEC", false]], "ring background": [[581, "term-Ring-Background", true]], "ringbackgroundmaker (class in gammapy.makers)": [[180, "gammapy.makers.RingBackgroundMaker", false]], "roi": [[581, "term-RoI", true]], "round() (gammapy.data.hduindextable method)": [[87, "gammapy.data.HDUIndexTable.round", false]], "round() (gammapy.data.observationtable method)": [[91, "gammapy.data.ObservationTable.round", false]], "round() (gammapy.maps.mapaxis method)": [[200, "gammapy.maps.MapAxis.round", false]], "row_idx() (gammapy.data.hduindextable method)": [[87, "gammapy.data.HDUIndexTable.row_idx", false]], "row_index (gammapy.catalog.sourcecatalogobject attribute)": [[69, "gammapy.catalog.SourceCatalogObject.row_index", false]], "row_index (gammapy.catalog.sourcecatalogobject1lhaaso attribute)": [[70, "gammapy.catalog.SourceCatalogObject1LHAASO.row_index", false]], "row_index (gammapy.catalog.sourcecatalogobject2fhl attribute)": [[71, "gammapy.catalog.SourceCatalogObject2FHL.row_index", false]], "row_index (gammapy.catalog.sourcecatalogobject2hwc attribute)": [[72, "gammapy.catalog.SourceCatalogObject2HWC.row_index", false]], "row_index (gammapy.catalog.sourcecatalogobject2pc attribute)": [[73, "gammapy.catalog.SourceCatalogObject2PC.row_index", false]], "row_index (gammapy.catalog.sourcecatalogobject3fgl attribute)": [[74, "gammapy.catalog.SourceCatalogObject3FGL.row_index", false]], "row_index (gammapy.catalog.sourcecatalogobject3fhl attribute)": [[75, "gammapy.catalog.SourceCatalogObject3FHL.row_index", false]], "row_index (gammapy.catalog.sourcecatalogobject3hwc attribute)": [[76, "gammapy.catalog.SourceCatalogObject3HWC.row_index", false]], "row_index (gammapy.catalog.sourcecatalogobject3pc attribute)": [[77, "gammapy.catalog.SourceCatalogObject3PC.row_index", false]], "row_index (gammapy.catalog.sourcecatalogobject4fgl attribute)": [[78, "gammapy.catalog.SourceCatalogObject4FGL.row_index", false]], "row_index (gammapy.catalog.sourcecatalogobjectgammacat attribute)": [[79, "gammapy.catalog.SourceCatalogObjectGammaCat.row_index", false]], "row_index (gammapy.catalog.sourcecatalogobjecthgps attribute)": [[80, "gammapy.catalog.SourceCatalogObjectHGPS.row_index", false]], "row_index (gammapy.catalog.sourcecatalogobjecthgpscomponent attribute)": [[81, "gammapy.catalog.SourceCatalogObjectHGPSComponent.row_index", false]], "row_index() (gammapy.catalog.sourcecatalog method)": [[56, "gammapy.catalog.SourceCatalog.row_index", false]], "row_index() (gammapy.catalog.sourcecatalog1lhaaso method)": [[57, "gammapy.catalog.SourceCatalog1LHAASO.row_index", false]], "row_index() (gammapy.catalog.sourcecatalog2fhl method)": [[58, "gammapy.catalog.SourceCatalog2FHL.row_index", false]], "row_index() (gammapy.catalog.sourcecatalog2hwc method)": [[59, "gammapy.catalog.SourceCatalog2HWC.row_index", false]], "row_index() (gammapy.catalog.sourcecatalog2pc method)": [[60, "gammapy.catalog.SourceCatalog2PC.row_index", false]], "row_index() (gammapy.catalog.sourcecatalog3fgl method)": [[61, "gammapy.catalog.SourceCatalog3FGL.row_index", false]], "row_index() (gammapy.catalog.sourcecatalog3fhl method)": [[62, "gammapy.catalog.SourceCatalog3FHL.row_index", false]], "row_index() (gammapy.catalog.sourcecatalog3hwc method)": [[63, "gammapy.catalog.SourceCatalog3HWC.row_index", false]], "row_index() (gammapy.catalog.sourcecatalog3pc method)": [[64, "gammapy.catalog.SourceCatalog3PC.row_index", false]], "row_index() (gammapy.catalog.sourcecatalog4fgl method)": [[65, "gammapy.catalog.SourceCatalog4FGL.row_index", false]], "row_index() (gammapy.catalog.sourcecataloggammacat method)": [[66, "gammapy.catalog.SourceCatalogGammaCat.row_index", false]], "row_index() (gammapy.catalog.sourcecataloghgps method)": [[67, "gammapy.catalog.SourceCatalogHGPS.row_index", false]], "run() (gammapy.data.observationseventssampler method)": [[93, "gammapy.data.ObservationsEventsSampler.run", false]], "run() (gammapy.datasets.mapdataseteventsampler method)": [[104, "gammapy.datasets.MapDatasetEventSampler.run", false]], "run() (gammapy.datasets.observationeventsampler method)": [[109, "gammapy.datasets.ObservationEventSampler.run", false]], "run() (gammapy.estimators.asmoothmapestimator method)": [[120, "gammapy.estimators.ASmoothMapEstimator.run", false]], "run() (gammapy.estimators.energydependentmorphologyestimator method)": [[122, "gammapy.estimators.EnergyDependentMorphologyEstimator.run", false]], "run() (gammapy.estimators.estimator method)": [[123, "gammapy.estimators.Estimator.run", false]], "run() (gammapy.estimators.excessmapestimator method)": [[124, "gammapy.estimators.ExcessMapEstimator.run", false]], "run() (gammapy.estimators.fluxpointsestimator method)": [[128, "gammapy.estimators.FluxPointsEstimator.run", false]], "run() (gammapy.estimators.fluxprofileestimator method)": [[129, "gammapy.estimators.FluxProfileEstimator.run", false]], "run() (gammapy.estimators.imageprofileestimator method)": [[131, "gammapy.estimators.ImageProfileEstimator.run", false]], "run() (gammapy.estimators.lightcurveestimator method)": [[132, "gammapy.estimators.LightCurveEstimator.run", false]], "run() (gammapy.estimators.parameterestimator method)": [[133, "gammapy.estimators.ParameterEstimator.run", false]], "run() (gammapy.estimators.sensitivityestimator method)": [[134, "gammapy.estimators.SensitivityEstimator.run", false]], "run() (gammapy.estimators.tsmapestimator method)": [[135, "gammapy.estimators.TSMapEstimator.run", false]], "run() (gammapy.makers.adaptiveringbackgroundmaker method)": [[170, "gammapy.makers.AdaptiveRingBackgroundMaker.run", false]], "run() (gammapy.makers.datasetsmaker method)": [[171, "gammapy.makers.DatasetsMaker.run", false]], "run() (gammapy.makers.fovbackgroundmaker method)": [[172, "gammapy.makers.FoVBackgroundMaker.run", false]], "run() (gammapy.makers.maker method)": [[174, "gammapy.makers.Maker.run", false]], "run() (gammapy.makers.mapdatasetmaker method)": [[175, "gammapy.makers.MapDatasetMaker.run", false]], "run() (gammapy.makers.phasebackgroundmaker method)": [[176, "gammapy.makers.PhaseBackgroundMaker.run", false]], "run() (gammapy.makers.reflectedregionsbackgroundmaker method)": [[177, "gammapy.makers.ReflectedRegionsBackgroundMaker.run", false]], "run() (gammapy.makers.reflectedregionsfinder method)": [[178, "gammapy.makers.ReflectedRegionsFinder.run", false]], "run() (gammapy.makers.regionsfinder method)": [[179, "gammapy.makers.RegionsFinder.run", false]], "run() (gammapy.makers.ringbackgroundmaker method)": [[180, "gammapy.makers.RingBackgroundMaker.run", false]], "run() (gammapy.makers.safemaskmaker method)": [[181, "gammapy.makers.SafeMaskMaker.run", false]], "run() (gammapy.makers.spectrumdatasetmaker method)": [[182, "gammapy.makers.SpectrumDatasetMaker.run", false]], "run() (gammapy.makers.wobbleregionsfinder method)": [[183, "gammapy.makers.WobbleRegionsFinder.run", false]], "run() (gammapy.modeling.fit method)": [[213, "gammapy.modeling.Fit.run", false]], "run() (gammapy.utils.testing.checker method)": [[357, "gammapy.utils.testing.Checker.run", false]], "run_fit() (gammapy.analysis.analysis method)": [[15, "gammapy.analysis.Analysis.run_fit", false]], "run_multiprocessing() (in module gammapy.utils.parallel)": [[331, "gammapy.utils.parallel.run_multiprocessing", false]], "safe_mask_maker (gammapy.makers.datasetsmaker attribute)": [[171, "gammapy.makers.DatasetsMaker.safe_mask_maker", false]], "safemaskmaker (class in gammapy.makers)": [[181, "gammapy.makers.SafeMaskMaker", false]], "sample() (gammapy.utils.random.inversecdfsampler method)": [[332, "gammapy.utils.random.InverseCDFSampler.sample", false]], "sample_axis() (gammapy.utils.random.inversecdfsampler method)": [[332, "gammapy.utils.random.InverseCDFSampler.sample_axis", false]], "sample_background() (gammapy.datasets.mapdataseteventsampler method)": [[104, "gammapy.datasets.MapDatasetEventSampler.sample_background", false]], "sample_background() (gammapy.datasets.observationeventsampler method)": [[109, "gammapy.datasets.ObservationEventSampler.sample_background", false]], "sample_coord() (gammapy.irf.edispmap method)": [[154, "gammapy.irf.EDispMap.sample_coord", false]], "sample_coord() (gammapy.irf.psfmap method)": [[165, "gammapy.irf.PSFMap.sample_coord", false]], "sample_coord() (gammapy.irf.recopsfmap method)": [[168, "gammapy.irf.RecoPSFMap.sample_coord", false]], "sample_coord() (gammapy.maps.hpxmap method)": [[195, "gammapy.maps.HpxMap.sample_coord", false]], "sample_coord() (gammapy.maps.hpxndmap method)": [[196, "gammapy.maps.HpxNDMap.sample_coord", false]], "sample_coord() (gammapy.maps.map method)": [[198, "gammapy.maps.Map.sample_coord", false]], "sample_coord() (gammapy.maps.regionndmap method)": [[204, "gammapy.maps.RegionNDMap.sample_coord", false]], "sample_coord() (gammapy.maps.wcsmap method)": [[207, "gammapy.maps.WcsMap.sample_coord", false]], "sample_coord() (gammapy.maps.wcsndmap method)": [[208, "gammapy.maps.WcsNDMap.sample_coord", false]], "sample_edisp() (gammapy.datasets.mapdataseteventsampler method)": [[104, "gammapy.datasets.MapDatasetEventSampler.sample_edisp", false]], "sample_edisp() (gammapy.datasets.observationeventsampler method)": [[109, "gammapy.datasets.ObservationEventSampler.sample_edisp", false]], "sample_powerlaw() (in module gammapy.utils.random)": [[337, "gammapy.utils.random.sample_powerlaw", false]], "sample_psf() (gammapy.datasets.mapdataseteventsampler method)": [[104, "gammapy.datasets.MapDatasetEventSampler.sample_psf", false]], "sample_psf() (gammapy.datasets.observationeventsampler method)": [[109, "gammapy.datasets.ObservationEventSampler.sample_psf", false]], "sample_sources() (gammapy.datasets.mapdataseteventsampler method)": [[104, "gammapy.datasets.MapDatasetEventSampler.sample_sources", false]], "sample_sources() (gammapy.datasets.observationeventsampler method)": [[109, "gammapy.datasets.ObservationEventSampler.sample_sources", false]], "sample_sphere() (in module gammapy.utils.random)": [[338, "gammapy.utils.random.sample_sphere", false]], "sample_sphere_distance() (in module gammapy.utils.random)": [[339, "gammapy.utils.random.sample_sphere_distance", false]], "sample_time() (gammapy.modeling.models.constanttemporalmodel method)": [[225, "gammapy.modeling.models.ConstantTemporalModel.sample_time", false]], "sample_time() (gammapy.modeling.models.expdecaytemporalmodel method)": [[233, "gammapy.modeling.models.ExpDecayTemporalModel.sample_time", false]], "sample_time() (gammapy.modeling.models.gaussiantemporalmodel method)": [[238, "gammapy.modeling.models.GaussianTemporalModel.sample_time", false]], "sample_time() (gammapy.modeling.models.generalizedgaussiantemporalmodel method)": [[240, "gammapy.modeling.models.GeneralizedGaussianTemporalModel.sample_time", false]], "sample_time() (gammapy.modeling.models.lightcurvetemplatetemporalmodel method)": [[241, "gammapy.modeling.models.LightCurveTemplateTemporalModel.sample_time", false]], "sample_time() (gammapy.modeling.models.lineartemporalmodel method)": [[242, "gammapy.modeling.models.LinearTemporalModel.sample_time", false]], "sample_time() (gammapy.modeling.models.powerlawtemporalmodel method)": [[258, "gammapy.modeling.models.PowerLawTemporalModel.sample_time", false]], "sample_time() (gammapy.modeling.models.sinetemporalmodel method)": [[265, "gammapy.modeling.models.SineTemporalModel.sample_time", false]], "sample_time() (gammapy.modeling.models.templatephasecurvetemporalmodel method)": [[277, "gammapy.modeling.models.TemplatePhaseCurveTemporalModel.sample_time", false]], "sample_time() (gammapy.modeling.models.temporalmodel method)": [[280, "gammapy.modeling.models.TemporalModel.sample_time", false]], "sample_times() (in module gammapy.utils.random)": [[340, "gammapy.utils.random.sample_times", false]], "scale (gammapy.astro.darkmatter.darkmatterannihilationspectralmodel attribute)": [[19, "gammapy.astro.darkmatter.DarkMatterAnnihilationSpectralModel.scale", false]], "scale (gammapy.astro.darkmatter.darkmatterdecayspectralmodel attribute)": [[20, "gammapy.astro.darkmatter.DarkMatterDecaySpectralModel.scale", false]], "scale (gammapy.modeling.parameter attribute)": [[216, "gammapy.modeling.Parameter.scale", false]], "scale (gammapy.modeling.priorparameter attribute)": [[218, "gammapy.modeling.PriorParameter.scale", false]], "scale_method (gammapy.modeling.parameter attribute)": [[216, "gammapy.modeling.Parameter.scale_method", false]], "scale_method (gammapy.modeling.priorparameter attribute)": [[218, "gammapy.modeling.PriorParameter.scale_method", false]], "scale_plot_flux() (in module gammapy.modeling.models)": [[287, "gammapy.modeling.models.scale_plot_flux", false]], "scale_to_local_density() (gammapy.astro.darkmatter.burkertprofile method)": [[17, "gammapy.astro.darkmatter.BurkertProfile.scale_to_local_density", false]], "scale_to_local_density() (gammapy.astro.darkmatter.dmprofile method)": [[18, "gammapy.astro.darkmatter.DMProfile.scale_to_local_density", false]], "scale_to_local_density() (gammapy.astro.darkmatter.einastoprofile method)": [[21, "gammapy.astro.darkmatter.EinastoProfile.scale_to_local_density", false]], "scale_to_local_density() (gammapy.astro.darkmatter.isothermalprofile method)": [[22, "gammapy.astro.darkmatter.IsothermalProfile.scale_to_local_density", false]], "scale_to_local_density() (gammapy.astro.darkmatter.mooreprofile method)": [[24, "gammapy.astro.darkmatter.MooreProfile.scale_to_local_density", false]], "scale_to_local_density() (gammapy.astro.darkmatter.nfwprofile method)": [[25, "gammapy.astro.darkmatter.NFWProfile.scale_to_local_density", false]], "scale_to_local_density() (gammapy.astro.darkmatter.zhaoprofile method)": [[27, "gammapy.astro.darkmatter.ZhaoProfile.scale_to_local_density", false]], "scaledregulargridinterpolator (class in gammapy.utils.interpolation)": [[322, "gammapy.utils.interpolation.ScaledRegularGridInterpolator", false]], "scalespectralmodel (class in gammapy.modeling.models)": [[262, "gammapy.modeling.models.ScaleSpectralModel", false]], "scan_max (gammapy.modeling.parameter attribute)": [[216, "gammapy.modeling.Parameter.scan_max", false]], "scan_max (gammapy.modeling.priorparameter attribute)": [[218, "gammapy.modeling.PriorParameter.scan_max", false]], "scan_min (gammapy.modeling.parameter attribute)": [[216, "gammapy.modeling.Parameter.scan_min", false]], "scan_min (gammapy.modeling.priorparameter attribute)": [[218, "gammapy.modeling.PriorParameter.scan_min", false]], "scan_n_sigma (gammapy.modeling.parameter attribute)": [[216, "gammapy.modeling.Parameter.scan_n_sigma", false]], "scan_n_sigma (gammapy.modeling.priorparameter attribute)": [[218, "gammapy.modeling.PriorParameter.scan_n_sigma", false]], "scan_values (gammapy.modeling.parameter attribute)": [[216, "gammapy.modeling.Parameter.scan_values", false]], "scan_values (gammapy.modeling.priorparameter attribute)": [[218, "gammapy.modeling.PriorParameter.scan_values", false]], "schema() (gammapy.analysis.analysisconfig class method)": [[16, "gammapy.analysis.AnalysisConfig.schema", false]], "schema() (gammapy.data.eventlistmetadata class method)": [[84, "gammapy.data.EventListMetaData.schema", false]], "schema() (gammapy.data.observationmetadata class method)": [[90, "gammapy.data.ObservationMetaData.schema", false]], "schema() (gammapy.datasets.mapdatasetmetadata class method)": [[105, "gammapy.datasets.MapDatasetMetaData.schema", false]], "schema() (gammapy.estimators.fluxmetadata class method)": [[126, "gammapy.estimators.FluxMetaData.schema", false]], "schema_json() (gammapy.analysis.analysisconfig class method)": [[16, "gammapy.analysis.AnalysisConfig.schema_json", false]], "schema_json() (gammapy.data.eventlistmetadata class method)": [[84, "gammapy.data.EventListMetaData.schema_json", false]], "schema_json() (gammapy.data.observationmetadata class method)": [[90, "gammapy.data.ObservationMetaData.schema_json", false]], "schema_json() (gammapy.datasets.mapdatasetmetadata class method)": [[105, "gammapy.datasets.MapDatasetMetaData.schema_json", false]], "schema_json() (gammapy.estimators.fluxmetadata class method)": [[126, "gammapy.estimators.FluxMetaData.schema_json", false]], "scipy_mvn (gammapy.modeling.covariance attribute)": [[211, "gammapy.modeling.Covariance.scipy_mvn", false]], "sed": [[581, "term-SED", true]], "sed_type_init (gammapy.estimators.fluxmaps attribute)": [[125, "gammapy.estimators.FluxMaps.sed_type_init", false]], "sed_type_init (gammapy.estimators.fluxpoints attribute)": [[127, "gammapy.estimators.FluxPoints.sed_type_init", false]], "sed_type_plot_default (gammapy.estimators.fluxmaps attribute)": [[125, "gammapy.estimators.FluxMaps.sed_type_plot_default", false]], "sed_type_plot_default (gammapy.estimators.fluxpoints attribute)": [[127, "gammapy.estimators.FluxPoints.sed_type_plot_default", false]], "sedov_taylor_begin (gammapy.astro.source.snr attribute)": [[52, "gammapy.astro.source.SNR.sedov_taylor_begin", false]], "sedov_taylor_begin (gammapy.astro.source.snrtruelovemckee attribute)": [[53, "gammapy.astro.source.SNRTrueloveMcKee.sedov_taylor_begin", false]], "sedov_taylor_end (gammapy.astro.source.snr attribute)": [[52, "gammapy.astro.source.SNR.sedov_taylor_end", false]], "sedov_taylor_end (gammapy.astro.source.snrtruelovemckee attribute)": [[53, "gammapy.astro.source.SNRTrueloveMcKee.sedov_taylor_end", false]], "select() (gammapy.modeling.models.datasetmodels method)": [[226, "gammapy.modeling.models.DatasetModels.select", false]], "select() (gammapy.modeling.models.models method)": [[250, "gammapy.modeling.models.Models.select", false]], "select() (gammapy.modeling.parameters method)": [[217, "gammapy.modeling.Parameters.select", false]], "select() (gammapy.modeling.priorparameters method)": [[219, "gammapy.modeling.PriorParameters.select", false]], "select_energy() (gammapy.data.eventlist method)": [[83, "gammapy.data.EventList.select_energy", false]], "select_from_geom() (gammapy.modeling.models.datasetmodels method)": [[226, "gammapy.modeling.models.DatasetModels.select_from_geom", false]], "select_from_geom() (gammapy.modeling.models.models method)": [[250, "gammapy.modeling.models.Models.select_from_geom", false]], "select_mask() (gammapy.data.eventlist method)": [[83, "gammapy.data.EventList.select_mask", false]], "select_mask() (gammapy.modeling.models.datasetmodels method)": [[226, "gammapy.modeling.models.DatasetModels.select_mask", false]], "select_mask() (gammapy.modeling.models.models method)": [[250, "gammapy.modeling.models.Models.select_mask", false]], "select_nested_models() (in module gammapy.modeling)": [[289, "gammapy.modeling.select_nested_models", false]], "select_obs_id() (gammapy.data.observationtable method)": [[91, "gammapy.data.ObservationTable.select_obs_id", false]], "select_observations() (gammapy.data.observationtable method)": [[91, "gammapy.data.ObservationTable.select_observations", false]], "select_offset() (gammapy.data.eventlist method)": [[83, "gammapy.data.EventList.select_offset", false]], "select_parameter() (gammapy.data.eventlist method)": [[83, "gammapy.data.EventList.select_parameter", false]], "select_rad_max() (gammapy.data.eventlist method)": [[83, "gammapy.data.EventList.select_rad_max", false]], "select_range() (gammapy.data.observationtable method)": [[91, "gammapy.data.ObservationTable.select_range", false]], "select_region() (gammapy.data.eventlist method)": [[83, "gammapy.data.EventList.select_region", false]], "select_region() (gammapy.modeling.models.datasetmodels method)": [[226, "gammapy.modeling.models.DatasetModels.select_region", false]], "select_region() (gammapy.modeling.models.models method)": [[250, "gammapy.modeling.models.Models.select_region", false]], "select_row_subset() (gammapy.data.eventlist method)": [[83, "gammapy.data.EventList.select_row_subset", false]], "select_sky_circle() (gammapy.data.observationtable method)": [[91, "gammapy.data.ObservationTable.select_sky_circle", false]], "select_time() (gammapy.data.eventlist method)": [[83, "gammapy.data.EventList.select_time", false]], "select_time() (gammapy.data.gti method)": [[86, "gammapy.data.GTI.select_time", false]], "select_time() (gammapy.data.observation method)": [[88, "gammapy.data.Observation.select_time", false]], "select_time() (gammapy.data.observations method)": [[92, "gammapy.data.Observations.select_time", false]], "select_time() (gammapy.datasets.datasets method)": [[100, "gammapy.datasets.Datasets.select_time", false]], "select_time_range() (gammapy.data.observationtable method)": [[91, "gammapy.data.ObservationTable.select_time_range", false]], "selection_all (gammapy.estimators.tsmapestimator attribute)": [[135, "gammapy.estimators.TSMapEstimator.selection_all", false]], "selection_all() (gammapy.estimators.asmoothmapestimator method)": [[120, "gammapy.estimators.ASmoothMapEstimator.selection_all", false]], "selection_mask() (gammapy.modeling.models.datasetmodels method)": [[226, "gammapy.modeling.models.DatasetModels.selection_mask", false]], "selection_mask() (gammapy.modeling.models.models method)": [[250, "gammapy.modeling.models.Models.selection_mask", false]], "selection_optional (gammapy.estimators.asmoothmapestimator attribute)": [[120, "gammapy.estimators.ASmoothMapEstimator.selection_optional", false]], "selection_optional (gammapy.estimators.energydependentmorphologyestimator attribute)": [[122, "gammapy.estimators.EnergyDependentMorphologyEstimator.selection_optional", false]], "selection_optional (gammapy.estimators.estimator attribute)": [[123, "gammapy.estimators.Estimator.selection_optional", false]], "selection_optional (gammapy.estimators.excessmapestimator attribute)": [[124, "gammapy.estimators.ExcessMapEstimator.selection_optional", false]], "selection_optional (gammapy.estimators.fluxpointsestimator attribute)": [[128, "gammapy.estimators.FluxPointsEstimator.selection_optional", false]], "selection_optional (gammapy.estimators.fluxprofileestimator attribute)": [[129, "gammapy.estimators.FluxProfileEstimator.selection_optional", false]], "selection_optional (gammapy.estimators.imageprofileestimator attribute)": [[131, "gammapy.estimators.ImageProfileEstimator.selection_optional", false]], "selection_optional (gammapy.estimators.lightcurveestimator attribute)": [[132, "gammapy.estimators.LightCurveEstimator.selection_optional", false]], "selection_optional (gammapy.estimators.parameterestimator attribute)": [[133, "gammapy.estimators.ParameterEstimator.selection_optional", false]], "selection_optional (gammapy.estimators.sensitivityestimator attribute)": [[134, "gammapy.estimators.SensitivityEstimator.selection_optional", false]], "selection_optional (gammapy.estimators.tsmapestimator attribute)": [[135, "gammapy.estimators.TSMapEstimator.selection_optional", false]], "sensitivityestimator (class in gammapy.estimators)": [[134, "gammapy.estimators.SensitivityEstimator", false]], "separable (gammapy.astro.population.casebattacharya1998 attribute)": [[28, "gammapy.astro.population.CaseBattacharya1998.separable", false]], "separable (gammapy.astro.population.exponential attribute)": [[29, "gammapy.astro.population.Exponential.separable", false]], "separable (gammapy.astro.population.faucherkaspi2006 attribute)": [[30, "gammapy.astro.population.FaucherKaspi2006.separable", false]], "separable (gammapy.astro.population.faucherkaspi2006velocitybimodal attribute)": [[31, "gammapy.astro.population.FaucherKaspi2006VelocityBimodal.separable", false]], "separable (gammapy.astro.population.faucherkaspi2006velocitymaxwellian attribute)": [[32, "gammapy.astro.population.FaucherKaspi2006VelocityMaxwellian.separable", false]], "separable (gammapy.astro.population.lorimer2006 attribute)": [[35, "gammapy.astro.population.Lorimer2006.separable", false]], "separable (gammapy.astro.population.paczynski1990 attribute)": [[36, "gammapy.astro.population.Paczynski1990.separable", false]], "separable (gammapy.astro.population.paczynski1990velocity attribute)": [[37, "gammapy.astro.population.Paczynski1990Velocity.separable", false]], "separable (gammapy.astro.population.yusifovkucuk2004 attribute)": [[39, "gammapy.astro.population.YusifovKucuk2004.separable", false]], "separable (gammapy.astro.population.yusifovkucuk2004b attribute)": [[40, "gammapy.astro.population.YusifovKucuk2004B.separable", false]], "separation() (gammapy.maps.hpxgeom method)": [[194, "gammapy.maps.HpxGeom.separation", false]], "separation() (gammapy.maps.regiongeom method)": [[203, "gammapy.maps.RegionGeom.separation", false]], "separation() (gammapy.maps.wcsgeom method)": [[206, "gammapy.maps.WcsGeom.separation", false]], "set_by_coord() (gammapy.maps.hpxmap method)": [[195, "gammapy.maps.HpxMap.set_by_coord", false]], "set_by_coord() (gammapy.maps.hpxndmap method)": [[196, "gammapy.maps.HpxNDMap.set_by_coord", false]], "set_by_coord() (gammapy.maps.map method)": [[198, "gammapy.maps.Map.set_by_coord", false]], "set_by_coord() (gammapy.maps.regionndmap method)": [[204, "gammapy.maps.RegionNDMap.set_by_coord", false]], "set_by_coord() (gammapy.maps.wcsmap method)": [[207, "gammapy.maps.WcsMap.set_by_coord", false]], "set_by_coord() (gammapy.maps.wcsndmap method)": [[208, "gammapy.maps.WcsNDMap.set_by_coord", false]], "set_by_idx() (gammapy.maps.hpxmap method)": [[195, "gammapy.maps.HpxMap.set_by_idx", false]], "set_by_idx() (gammapy.maps.hpxndmap method)": [[196, "gammapy.maps.HpxNDMap.set_by_idx", false]], "set_by_idx() (gammapy.maps.map method)": [[198, "gammapy.maps.Map.set_by_idx", false]], "set_by_idx() (gammapy.maps.regionndmap method)": [[204, "gammapy.maps.RegionNDMap.set_by_idx", false]], "set_by_idx() (gammapy.maps.wcsmap method)": [[207, "gammapy.maps.WcsMap.set_by_idx", false]], "set_by_idx() (gammapy.maps.wcsndmap method)": [[208, "gammapy.maps.WcsNDMap.set_by_idx", false]], "set_by_pix() (gammapy.maps.hpxmap method)": [[195, "gammapy.maps.HpxMap.set_by_pix", false]], "set_by_pix() (gammapy.maps.hpxndmap method)": [[196, "gammapy.maps.HpxNDMap.set_by_pix", false]], "set_by_pix() (gammapy.maps.map method)": [[198, "gammapy.maps.Map.set_by_pix", false]], "set_by_pix() (gammapy.maps.regionndmap method)": [[204, "gammapy.maps.RegionNDMap.set_by_pix", false]], "set_by_pix() (gammapy.maps.wcsmap method)": [[207, "gammapy.maps.WcsMap.set_by_pix", false]], "set_by_pix() (gammapy.maps.wcsndmap method)": [[208, "gammapy.maps.WcsNDMap.set_by_pix", false]], "set_logging() (gammapy.analysis.analysisconfig method)": [[16, "gammapy.analysis.AnalysisConfig.set_logging", false]], "set_models() (gammapy.analysis.analysis method)": [[15, "gammapy.analysis.Analysis.set_models", false]], "set_parameter_factors() (gammapy.modeling.parameters method)": [[217, "gammapy.modeling.Parameters.set_parameter_factors", false]], "set_parameter_factors() (gammapy.modeling.priorparameters method)": [[219, "gammapy.modeling.PriorParameters.set_parameter_factors", false]], "set_parameters_bounds() (gammapy.modeling.models.datasetmodels method)": [[226, "gammapy.modeling.models.DatasetModels.set_parameters_bounds", false]], "set_parameters_bounds() (gammapy.modeling.models.models method)": [[250, "gammapy.modeling.models.Models.set_parameters_bounds", false]], "set_prior() (gammapy.modeling.models.models method)": [[250, "gammapy.modeling.models.Models.set_prior", false]], "set_slice_args() (gammapy.astro.population.casebattacharya1998 method)": [[28, "gammapy.astro.population.CaseBattacharya1998.set_slice_args", false]], "set_slice_args() (gammapy.astro.population.exponential method)": [[29, "gammapy.astro.population.Exponential.set_slice_args", false]], "set_slice_args() (gammapy.astro.population.faucherkaspi2006 method)": [[30, "gammapy.astro.population.FaucherKaspi2006.set_slice_args", false]], "set_slice_args() (gammapy.astro.population.faucherkaspi2006velocitybimodal method)": [[31, "gammapy.astro.population.FaucherKaspi2006VelocityBimodal.set_slice_args", false]], "set_slice_args() (gammapy.astro.population.faucherkaspi2006velocitymaxwellian method)": [[32, "gammapy.astro.population.FaucherKaspi2006VelocityMaxwellian.set_slice_args", false]], "set_slice_args() (gammapy.astro.population.lorimer2006 method)": [[35, "gammapy.astro.population.Lorimer2006.set_slice_args", false]], "set_slice_args() (gammapy.astro.population.paczynski1990 method)": [[36, "gammapy.astro.population.Paczynski1990.set_slice_args", false]], "set_slice_args() (gammapy.astro.population.paczynski1990velocity method)": [[37, "gammapy.astro.population.Paczynski1990Velocity.set_slice_args", false]], "set_slice_args() (gammapy.astro.population.yusifovkucuk2004 method)": [[39, "gammapy.astro.population.YusifovKucuk2004.set_slice_args", false]], "set_slice_args() (gammapy.astro.population.yusifovkucuk2004b method)": [[40, "gammapy.astro.population.YusifovKucuk2004B.set_slice_args", false]], "set_subcovariance() (gammapy.modeling.covariance method)": [[211, "gammapy.modeling.Covariance.set_subcovariance", false]], "setdefault() (gammapy.maps.maps method)": [[202, "gammapy.maps.Maps.setdefault", false]], "shape (gammapy.maps.mapaxes attribute)": [[199, "gammapy.maps.MapAxes.shape", false]], "shape (gammapy.maps.mapcoord attribute)": [[201, "gammapy.maps.MapCoord.shape", false]], "shape (gammapy.modeling.covariance attribute)": [[211, "gammapy.modeling.Covariance.shape", false]], "shape_axes (gammapy.maps.hpxgeom attribute)": [[194, "gammapy.maps.HpxGeom.shape_axes", false]], "shape_axes (gammapy.maps.wcsgeom attribute)": [[206, "gammapy.maps.WcsGeom.shape_axes", false]], "shell2spatialmodel (class in gammapy.modeling.models)": [[263, "gammapy.modeling.models.Shell2SpatialModel", false]], "shellspatialmodel (class in gammapy.modeling.models)": [[264, "gammapy.modeling.models.ShellSpatialModel", false]], "show_in_browser() (gammapy.data.hduindextable method)": [[87, "gammapy.data.HDUIndexTable.show_in_browser", false]], "show_in_browser() (gammapy.data.observationtable method)": [[91, "gammapy.data.ObservationTable.show_in_browser", false]], "show_in_notebook() (gammapy.data.hduindextable method)": [[87, "gammapy.data.HDUIndexTable.show_in_notebook", false]], "show_in_notebook() (gammapy.data.observationtable method)": [[91, "gammapy.data.ObservationTable.show_in_notebook", false]], "sigma (gammapy.astro.population.faucherkaspi2006 attribute)": [[30, "gammapy.astro.population.FaucherKaspi2006.sigma", false]], "sigma (gammapy.astro.population.faucherkaspi2006velocitymaxwellian attribute)": [[32, "gammapy.astro.population.FaucherKaspi2006VelocityMaxwellian.sigma", false]], "sigma (gammapy.modeling.models.gaussianprior attribute)": [[235, "gammapy.modeling.models.GaussianPrior.sigma", false]], "sigma (gammapy.modeling.models.gaussianspatialmodel attribute)": [[236, "gammapy.modeling.models.GaussianSpatialModel.sigma", false]], "sigma (gammapy.modeling.models.gaussianspectralmodel attribute)": [[237, "gammapy.modeling.models.GaussianSpectralModel.sigma", false]], "sigma (gammapy.modeling.models.gaussiantemporalmodel attribute)": [[238, "gammapy.modeling.models.GaussianTemporalModel.sigma", false]], "sigma_1 (gammapy.astro.population.faucherkaspi2006velocitybimodal attribute)": [[31, "gammapy.astro.population.FaucherKaspi2006VelocityBimodal.sigma_1", false]], "sigma_2 (gammapy.astro.population.faucherkaspi2006velocitybimodal attribute)": [[31, "gammapy.astro.population.FaucherKaspi2006VelocityBimodal.sigma_2", false]], "simplepulsar (class in gammapy.astro.source)": [[54, "gammapy.astro.source.SimplePulsar", false]], "simulate_observation() (gammapy.data.observationseventssampler method)": [[93, "gammapy.data.ObservationsEventsSampler.simulate_observation", false]], "sinetemporalmodel (class in gammapy.modeling.models)": [[265, "gammapy.modeling.models.SineTemporalModel", false]], "size (gammapy.maps.mapcoord attribute)": [[201, "gammapy.maps.MapCoord.size", false]], "sky_model() (gammapy.catalog.sourcecatalogobject1lhaaso method)": [[70, "gammapy.catalog.SourceCatalogObject1LHAASO.sky_model", false]], "sky_model() (gammapy.catalog.sourcecatalogobject2fhl method)": [[71, "gammapy.catalog.SourceCatalogObject2FHL.sky_model", false]], "sky_model() (gammapy.catalog.sourcecatalogobject2hwc method)": [[72, "gammapy.catalog.SourceCatalogObject2HWC.sky_model", false]], "sky_model() (gammapy.catalog.sourcecatalogobject2pc method)": [[73, "gammapy.catalog.SourceCatalogObject2PC.sky_model", false]], "sky_model() (gammapy.catalog.sourcecatalogobject3fgl method)": [[74, "gammapy.catalog.SourceCatalogObject3FGL.sky_model", false]], "sky_model() (gammapy.catalog.sourcecatalogobject3fhl method)": [[75, "gammapy.catalog.SourceCatalogObject3FHL.sky_model", false]], "sky_model() (gammapy.catalog.sourcecatalogobject3hwc method)": [[76, "gammapy.catalog.SourceCatalogObject3HWC.sky_model", false]], "sky_model() (gammapy.catalog.sourcecatalogobject3pc method)": [[77, "gammapy.catalog.SourceCatalogObject3PC.sky_model", false]], "sky_model() (gammapy.catalog.sourcecatalogobject4fgl method)": [[78, "gammapy.catalog.SourceCatalogObject4FGL.sky_model", false]], "sky_model() (gammapy.catalog.sourcecatalogobjectgammacat method)": [[79, "gammapy.catalog.SourceCatalogObjectGammaCat.sky_model", false]], "sky_model() (gammapy.catalog.sourcecatalogobjecthgps method)": [[80, "gammapy.catalog.SourceCatalogObjectHGPS.sky_model", false]], "sky_to_fov() (in module gammapy.utils.coordinates)": [[316, "gammapy.utils.coordinates.sky_to_fov", false]], "skycoord (gammapy.maps.mapcoord attribute)": [[201, "gammapy.maps.MapCoord.skycoord", false]], "skymodel (class in gammapy.modeling.models)": [[266, "gammapy.modeling.models.SkyModel", false]], "slice() (gammapy.maps.labelmapaxis method)": [[197, "gammapy.maps.LabelMapAxis.slice", false]], "slice() (gammapy.maps.mapaxis method)": [[200, "gammapy.maps.MapAxis.slice", false]], "slice() (gammapy.maps.timemapaxis method)": [[205, "gammapy.maps.TimeMapAxis.slice", false]], "slice_by_coord() (gammapy.estimators.fluxmaps method)": [[125, "gammapy.estimators.FluxMaps.slice_by_coord", false]], "slice_by_coord() (gammapy.estimators.fluxpoints method)": [[127, "gammapy.estimators.FluxPoints.slice_by_coord", false]], "slice_by_energy() (gammapy.datasets.datasets method)": [[100, "gammapy.datasets.Datasets.slice_by_energy", false]], "slice_by_energy() (gammapy.datasets.mapdataset method)": [[103, "gammapy.datasets.MapDataset.slice_by_energy", false]], "slice_by_energy() (gammapy.datasets.mapdatasetonoff method)": [[106, "gammapy.datasets.MapDatasetOnOff.slice_by_energy", false]], "slice_by_energy() (gammapy.datasets.spectrumdataset method)": [[110, "gammapy.datasets.SpectrumDataset.slice_by_energy", false]], "slice_by_energy() (gammapy.datasets.spectrumdatasetonoff method)": [[111, "gammapy.datasets.SpectrumDatasetOnOff.slice_by_energy", false]], "slice_by_energy() (gammapy.estimators.fluxmaps method)": [[125, "gammapy.estimators.FluxMaps.slice_by_energy", false]], "slice_by_energy() (gammapy.estimators.fluxpoints method)": [[127, "gammapy.estimators.FluxPoints.slice_by_energy", false]], "slice_by_energy() (gammapy.modeling.models.templatenpredmodel method)": [[276, "gammapy.modeling.models.TemplateNPredModel.slice_by_energy", false]], "slice_by_idx() (gammapy.datasets.mapdataset method)": [[103, "gammapy.datasets.MapDataset.slice_by_idx", false]], "slice_by_idx() (gammapy.datasets.mapdatasetonoff method)": [[106, "gammapy.datasets.MapDatasetOnOff.slice_by_idx", false]], "slice_by_idx() (gammapy.datasets.spectrumdataset method)": [[110, "gammapy.datasets.SpectrumDataset.slice_by_idx", false]], "slice_by_idx() (gammapy.datasets.spectrumdatasetonoff method)": [[111, "gammapy.datasets.SpectrumDatasetOnOff.slice_by_idx", false]], "slice_by_idx() (gammapy.estimators.fluxmaps method)": [[125, "gammapy.estimators.FluxMaps.slice_by_idx", false]], "slice_by_idx() (gammapy.estimators.fluxpoints method)": [[127, "gammapy.estimators.FluxPoints.slice_by_idx", false]], "slice_by_idx() (gammapy.irf.background2d method)": [[149, "gammapy.irf.Background2D.slice_by_idx", false]], "slice_by_idx() (gammapy.irf.background3d method)": [[150, "gammapy.irf.Background3D.slice_by_idx", false]], "slice_by_idx() (gammapy.irf.backgroundirf method)": [[151, "gammapy.irf.BackgroundIRF.slice_by_idx", false]], "slice_by_idx() (gammapy.irf.edispkernel method)": [[152, "gammapy.irf.EDispKernel.slice_by_idx", false]], "slice_by_idx() (gammapy.irf.edispkernelmap method)": [[153, "gammapy.irf.EDispKernelMap.slice_by_idx", false]], "slice_by_idx() (gammapy.irf.edispmap method)": [[154, "gammapy.irf.EDispMap.slice_by_idx", false]], "slice_by_idx() (gammapy.irf.effectiveareatable2d method)": [[155, "gammapy.irf.EffectiveAreaTable2D.slice_by_idx", false]], "slice_by_idx() (gammapy.irf.energydependentmultigausspsf method)": [[156, "gammapy.irf.EnergyDependentMultiGaussPSF.slice_by_idx", false]], "slice_by_idx() (gammapy.irf.energydispersion2d method)": [[157, "gammapy.irf.EnergyDispersion2D.slice_by_idx", false]], "slice_by_idx() (gammapy.irf.irf method)": [[159, "gammapy.irf.IRF.slice_by_idx", false]], "slice_by_idx() (gammapy.irf.irfmap method)": [[160, "gammapy.irf.IRFMap.slice_by_idx", false]], "slice_by_idx() (gammapy.irf.parametricpsf method)": [[166, "gammapy.irf.ParametricPSF.slice_by_idx", false]], "slice_by_idx() (gammapy.irf.psf3d method)": [[162, "gammapy.irf.PSF3D.slice_by_idx", false]], "slice_by_idx() (gammapy.irf.psfkernel method)": [[163, "gammapy.irf.PSFKernel.slice_by_idx", false]], "slice_by_idx() (gammapy.irf.psfking method)": [[164, "gammapy.irf.PSFKing.slice_by_idx", false]], "slice_by_idx() (gammapy.irf.psfmap method)": [[165, "gammapy.irf.PSFMap.slice_by_idx", false]], "slice_by_idx() (gammapy.irf.radmax2d method)": [[167, "gammapy.irf.RadMax2D.slice_by_idx", false]], "slice_by_idx() (gammapy.irf.recopsfmap method)": [[168, "gammapy.irf.RecoPSFMap.slice_by_idx", false]], "slice_by_idx() (gammapy.maps.geom method)": [[193, "gammapy.maps.Geom.slice_by_idx", false]], "slice_by_idx() (gammapy.maps.hpxgeom method)": [[194, "gammapy.maps.HpxGeom.slice_by_idx", false]], "slice_by_idx() (gammapy.maps.hpxmap method)": [[195, "gammapy.maps.HpxMap.slice_by_idx", false]], "slice_by_idx() (gammapy.maps.hpxndmap method)": [[196, "gammapy.maps.HpxNDMap.slice_by_idx", false]], "slice_by_idx() (gammapy.maps.map method)": [[198, "gammapy.maps.Map.slice_by_idx", false]], "slice_by_idx() (gammapy.maps.mapaxes method)": [[199, "gammapy.maps.MapAxes.slice_by_idx", false]], "slice_by_idx() (gammapy.maps.regiongeom method)": [[203, "gammapy.maps.RegionGeom.slice_by_idx", false]], "slice_by_idx() (gammapy.maps.regionndmap method)": [[204, "gammapy.maps.RegionNDMap.slice_by_idx", false]], "slice_by_idx() (gammapy.maps.wcsgeom method)": [[206, "gammapy.maps.WcsGeom.slice_by_idx", false]], "slice_by_idx() (gammapy.maps.wcsmap method)": [[207, "gammapy.maps.WcsMap.slice_by_idx", false]], "slice_by_idx() (gammapy.maps.wcsndmap method)": [[208, "gammapy.maps.WcsNDMap.slice_by_idx", false]], "slice_by_time() (gammapy.estimators.fluxmaps method)": [[125, "gammapy.estimators.FluxMaps.slice_by_time", false]], "slice_by_time() (gammapy.estimators.fluxpoints method)": [[127, "gammapy.estimators.FluxPoints.slice_by_time", false]], "smooth() (gammapy.estimators.imageprofile method)": [[130, "gammapy.estimators.ImageProfile.smooth", false]], "smooth() (gammapy.maps.hpxndmap method)": [[196, "gammapy.maps.HpxNDMap.smooth", false]], "smooth() (gammapy.maps.wcsndmap method)": [[208, "gammapy.maps.WcsNDMap.smooth", false]], "smoothbrokenpowerlawspectralmodel (class in gammapy.modeling.models)": [[267, "gammapy.modeling.models.SmoothBrokenPowerLawSpectralModel", false]], "snr (class in gammapy.astro.source)": [[52, "gammapy.astro.source.SNR", false]], "snrtruelovemckee (class in gammapy.astro.source)": [[53, "gammapy.astro.source.SNRTrueloveMcKee", false]], "solid_angle() (gammapy.maps.geom method)": [[193, "gammapy.maps.Geom.solid_angle", false]], "solid_angle() (gammapy.maps.hpxgeom method)": [[194, "gammapy.maps.HpxGeom.solid_angle", false]], "solid_angle() (gammapy.maps.regiongeom method)": [[203, "gammapy.maps.RegionGeom.solid_angle", false]], "solid_angle() (gammapy.maps.wcsgeom method)": [[206, "gammapy.maps.WcsGeom.solid_angle", false]], "sort() (gammapy.data.hduindextable method)": [[87, "gammapy.data.HDUIndexTable.sort", false]], "sort() (gammapy.data.observationtable method)": [[91, "gammapy.data.ObservationTable.sort", false]], "source_name() (gammapy.catalog.sourcecatalog method)": [[56, "gammapy.catalog.SourceCatalog.source_name", false]], "source_name() (gammapy.catalog.sourcecatalog1lhaaso method)": [[57, "gammapy.catalog.SourceCatalog1LHAASO.source_name", false]], "source_name() (gammapy.catalog.sourcecatalog2fhl method)": [[58, "gammapy.catalog.SourceCatalog2FHL.source_name", false]], "source_name() (gammapy.catalog.sourcecatalog2hwc method)": [[59, "gammapy.catalog.SourceCatalog2HWC.source_name", false]], "source_name() (gammapy.catalog.sourcecatalog2pc method)": [[60, "gammapy.catalog.SourceCatalog2PC.source_name", false]], "source_name() (gammapy.catalog.sourcecatalog3fgl method)": [[61, "gammapy.catalog.SourceCatalog3FGL.source_name", false]], "source_name() (gammapy.catalog.sourcecatalog3fhl method)": [[62, "gammapy.catalog.SourceCatalog3FHL.source_name", false]], "source_name() (gammapy.catalog.sourcecatalog3hwc method)": [[63, "gammapy.catalog.SourceCatalog3HWC.source_name", false]], "source_name() (gammapy.catalog.sourcecatalog3pc method)": [[64, "gammapy.catalog.SourceCatalog3PC.source_name", false]], "source_name() (gammapy.catalog.sourcecatalog4fgl method)": [[65, "gammapy.catalog.SourceCatalog4FGL.source_name", false]], "source_name() (gammapy.catalog.sourcecataloggammacat method)": [[66, "gammapy.catalog.SourceCatalogGammaCat.source_name", false]], "source_name() (gammapy.catalog.sourcecataloghgps method)": [[67, "gammapy.catalog.SourceCatalogHGPS.source_name", false]], "sourcecatalog (class in gammapy.catalog)": [[56, "gammapy.catalog.SourceCatalog", false]], "sourcecatalog1lhaaso (class in gammapy.catalog)": [[57, "gammapy.catalog.SourceCatalog1LHAASO", false]], "sourcecatalog2fhl (class in gammapy.catalog)": [[58, "gammapy.catalog.SourceCatalog2FHL", false]], "sourcecatalog2hwc (class in gammapy.catalog)": [[59, "gammapy.catalog.SourceCatalog2HWC", false]], "sourcecatalog2pc (class in gammapy.catalog)": [[60, "gammapy.catalog.SourceCatalog2PC", false]], "sourcecatalog3fgl (class in gammapy.catalog)": [[61, "gammapy.catalog.SourceCatalog3FGL", false]], "sourcecatalog3fhl (class in gammapy.catalog)": [[62, "gammapy.catalog.SourceCatalog3FHL", false]], "sourcecatalog3hwc (class in gammapy.catalog)": [[63, "gammapy.catalog.SourceCatalog3HWC", false]], "sourcecatalog3pc (class in gammapy.catalog)": [[64, "gammapy.catalog.SourceCatalog3PC", false]], "sourcecatalog4fgl (class in gammapy.catalog)": [[65, "gammapy.catalog.SourceCatalog4FGL", false]], "sourcecataloggammacat (class in gammapy.catalog)": [[66, "gammapy.catalog.SourceCatalogGammaCat", false]], "sourcecataloghgps (class in gammapy.catalog)": [[67, "gammapy.catalog.SourceCatalogHGPS", false]], "sourcecataloglargescalehgps (class in gammapy.catalog)": [[68, "gammapy.catalog.SourceCatalogLargeScaleHGPS", false]], "sourcecatalogobject (class in gammapy.catalog)": [[69, "gammapy.catalog.SourceCatalogObject", false]], "sourcecatalogobject1lhaaso (class in gammapy.catalog)": [[70, "gammapy.catalog.SourceCatalogObject1LHAASO", false]], "sourcecatalogobject2fhl (class in gammapy.catalog)": [[71, "gammapy.catalog.SourceCatalogObject2FHL", false]], "sourcecatalogobject2hwc (class in gammapy.catalog)": [[72, "gammapy.catalog.SourceCatalogObject2HWC", false]], "sourcecatalogobject2pc (class in gammapy.catalog)": [[73, "gammapy.catalog.SourceCatalogObject2PC", false]], "sourcecatalogobject3fgl (class in gammapy.catalog)": [[74, "gammapy.catalog.SourceCatalogObject3FGL", false]], "sourcecatalogobject3fhl (class in gammapy.catalog)": [[75, "gammapy.catalog.SourceCatalogObject3FHL", false]], "sourcecatalogobject3hwc (class in gammapy.catalog)": [[76, "gammapy.catalog.SourceCatalogObject3HWC", false]], "sourcecatalogobject3pc (class in gammapy.catalog)": [[77, "gammapy.catalog.SourceCatalogObject3PC", false]], "sourcecatalogobject4fgl (class in gammapy.catalog)": [[78, "gammapy.catalog.SourceCatalogObject4FGL", false]], "sourcecatalogobjectgammacat (class in gammapy.catalog)": [[79, "gammapy.catalog.SourceCatalogObjectGammaCat", false]], "sourcecatalogobjecthgps (class in gammapy.catalog)": [[80, "gammapy.catalog.SourceCatalogObjectHGPS", false]], "sourcecatalogobjecthgpscomponent (class in gammapy.catalog)": [[81, "gammapy.catalog.SourceCatalogObjectHGPSComponent", false]], "spatial_model (gammapy.modeling.models.fovbackgroundmodel attribute)": [[234, "gammapy.modeling.models.FoVBackgroundModel.spatial_model", false]], "spatial_model (gammapy.modeling.models.skymodel attribute)": [[266, "gammapy.modeling.models.SkyModel.spatial_model", false]], "spatial_model() (gammapy.catalog.sourcecatalogobject1lhaaso method)": [[70, "gammapy.catalog.SourceCatalogObject1LHAASO.spatial_model", false]], "spatial_model() (gammapy.catalog.sourcecatalogobject2fhl method)": [[71, "gammapy.catalog.SourceCatalogObject2FHL.spatial_model", false]], "spatial_model() (gammapy.catalog.sourcecatalogobject2hwc method)": [[72, "gammapy.catalog.SourceCatalogObject2HWC.spatial_model", false]], "spatial_model() (gammapy.catalog.sourcecatalogobject2pc method)": [[73, "gammapy.catalog.SourceCatalogObject2PC.spatial_model", false]], "spatial_model() (gammapy.catalog.sourcecatalogobject3fgl method)": [[74, "gammapy.catalog.SourceCatalogObject3FGL.spatial_model", false]], "spatial_model() (gammapy.catalog.sourcecatalogobject3fhl method)": [[75, "gammapy.catalog.SourceCatalogObject3FHL.spatial_model", false]], "spatial_model() (gammapy.catalog.sourcecatalogobject3hwc method)": [[76, "gammapy.catalog.SourceCatalogObject3HWC.spatial_model", false]], "spatial_model() (gammapy.catalog.sourcecatalogobject3pc method)": [[77, "gammapy.catalog.SourceCatalogObject3PC.spatial_model", false]], "spatial_model() (gammapy.catalog.sourcecatalogobject4fgl method)": [[78, "gammapy.catalog.SourceCatalogObject4FGL.spatial_model", false]], "spatial_model() (gammapy.catalog.sourcecatalogobjectgammacat method)": [[79, "gammapy.catalog.SourceCatalogObjectGammaCat.spatial_model", false]], "spatial_model() (gammapy.catalog.sourcecatalogobjecthgps method)": [[80, "gammapy.catalog.SourceCatalogObjectHGPS.spatial_model", false]], "spatial_model() (gammapy.catalog.sourcecatalogobjecthgpscomponent method)": [[81, "gammapy.catalog.SourceCatalogObjectHGPSComponent.spatial_model", false]], "spatial_model_registry (in module gammapy.modeling.models)": [[260, "gammapy.modeling.models.SPATIAL_MODEL_REGISTRY", false]], "spatialmodel (class in gammapy.modeling.models)": [[268, "gammapy.modeling.models.SpatialModel", false]], "spectral_index() (gammapy.astro.darkmatter.darkmatterannihilationspectralmodel method)": [[19, "gammapy.astro.darkmatter.DarkMatterAnnihilationSpectralModel.spectral_index", false]], "spectral_index() (gammapy.astro.darkmatter.darkmatterdecayspectralmodel method)": [[20, "gammapy.astro.darkmatter.DarkMatterDecaySpectralModel.spectral_index", false]], "spectral_index() (gammapy.astro.darkmatter.primaryflux method)": [[26, "gammapy.astro.darkmatter.PrimaryFlux.spectral_index", false]], "spectral_index() (gammapy.modeling.models.brokenpowerlawspectralmodel method)": [[220, "gammapy.modeling.models.BrokenPowerLawSpectralModel.spectral_index", false]], "spectral_index() (gammapy.modeling.models.compoundspectralmodel method)": [[221, "gammapy.modeling.models.CompoundSpectralModel.spectral_index", false]], "spectral_index() (gammapy.modeling.models.constantspectralmodel method)": [[224, "gammapy.modeling.models.ConstantSpectralModel.spectral_index", false]], "spectral_index() (gammapy.modeling.models.eblabsorptionnormspectralmodel method)": [[228, "gammapy.modeling.models.EBLAbsorptionNormSpectralModel.spectral_index", false]], "spectral_index() (gammapy.modeling.models.expcutoffpowerlaw3fglspectralmodel method)": [[230, "gammapy.modeling.models.ExpCutoffPowerLaw3FGLSpectralModel.spectral_index", false]], "spectral_index() (gammapy.modeling.models.expcutoffpowerlawnormspectralmodel method)": [[231, "gammapy.modeling.models.ExpCutoffPowerLawNormSpectralModel.spectral_index", false]], "spectral_index() (gammapy.modeling.models.expcutoffpowerlawspectralmodel method)": [[232, "gammapy.modeling.models.ExpCutoffPowerLawSpectralModel.spectral_index", false]], "spectral_index() (gammapy.modeling.models.gaussianspectralmodel method)": [[237, "gammapy.modeling.models.GaussianSpectralModel.spectral_index", false]], "spectral_index() (gammapy.modeling.models.logparabolanormspectralmodel method)": [[243, "gammapy.modeling.models.LogParabolaNormSpectralModel.spectral_index", false]], "spectral_index() (gammapy.modeling.models.logparabolaspectralmodel method)": [[244, "gammapy.modeling.models.LogParabolaSpectralModel.spectral_index", false]], "spectral_index() (gammapy.modeling.models.meyercrabspectralmodel method)": [[247, "gammapy.modeling.models.MeyerCrabSpectralModel.spectral_index", false]], "spectral_index() (gammapy.modeling.models.naimaspectralmodel method)": [[251, "gammapy.modeling.models.NaimaSpectralModel.spectral_index", false]], "spectral_index() (gammapy.modeling.models.piecewisenormspectralmodel method)": [[253, "gammapy.modeling.models.PiecewiseNormSpectralModel.spectral_index", false]], "spectral_index() (gammapy.modeling.models.powerlaw2spectralmodel method)": [[255, "gammapy.modeling.models.PowerLaw2SpectralModel.spectral_index", false]], "spectral_index() (gammapy.modeling.models.powerlawnormspectralmodel method)": [[256, "gammapy.modeling.models.PowerLawNormSpectralModel.spectral_index", false]], "spectral_index() (gammapy.modeling.models.powerlawspectralmodel method)": [[257, "gammapy.modeling.models.PowerLawSpectralModel.spectral_index", false]], "spectral_index() (gammapy.modeling.models.scalespectralmodel method)": [[262, "gammapy.modeling.models.ScaleSpectralModel.spectral_index", false]], "spectral_index() (gammapy.modeling.models.smoothbrokenpowerlawspectralmodel method)": [[267, "gammapy.modeling.models.SmoothBrokenPowerLawSpectralModel.spectral_index", false]], "spectral_index() (gammapy.modeling.models.spectralmodel method)": [[269, "gammapy.modeling.models.SpectralModel.spectral_index", false]], "spectral_index() (gammapy.modeling.models.superexpcutoffpowerlaw3fglspectralmodel method)": [[270, "gammapy.modeling.models.SuperExpCutoffPowerLaw3FGLSpectralModel.spectral_index", false]], "spectral_index() (gammapy.modeling.models.superexpcutoffpowerlaw4fgldr3spectralmodel method)": [[271, "gammapy.modeling.models.SuperExpCutoffPowerLaw4FGLDR3SpectralModel.spectral_index", false]], "spectral_index() (gammapy.modeling.models.superexpcutoffpowerlaw4fglspectralmodel method)": [[272, "gammapy.modeling.models.SuperExpCutoffPowerLaw4FGLSpectralModel.spectral_index", false]], "spectral_index() (gammapy.modeling.models.templatendspectralmodel method)": [[275, "gammapy.modeling.models.TemplateNDSpectralModel.spectral_index", false]], "spectral_index() (gammapy.modeling.models.templatespectralmodel method)": [[279, "gammapy.modeling.models.TemplateSpectralModel.spectral_index", false]], "spectral_index_error() (gammapy.astro.darkmatter.darkmatterannihilationspectralmodel method)": [[19, "gammapy.astro.darkmatter.DarkMatterAnnihilationSpectralModel.spectral_index_error", false]], "spectral_index_error() (gammapy.astro.darkmatter.darkmatterdecayspectralmodel method)": [[20, "gammapy.astro.darkmatter.DarkMatterDecaySpectralModel.spectral_index_error", false]], "spectral_index_error() (gammapy.astro.darkmatter.primaryflux method)": [[26, "gammapy.astro.darkmatter.PrimaryFlux.spectral_index_error", false]], "spectral_index_error() (gammapy.modeling.models.brokenpowerlawspectralmodel method)": [[220, "gammapy.modeling.models.BrokenPowerLawSpectralModel.spectral_index_error", false]], "spectral_index_error() (gammapy.modeling.models.compoundspectralmodel method)": [[221, "gammapy.modeling.models.CompoundSpectralModel.spectral_index_error", false]], "spectral_index_error() (gammapy.modeling.models.constantspectralmodel method)": [[224, "gammapy.modeling.models.ConstantSpectralModel.spectral_index_error", false]], "spectral_index_error() (gammapy.modeling.models.eblabsorptionnormspectralmodel method)": [[228, "gammapy.modeling.models.EBLAbsorptionNormSpectralModel.spectral_index_error", false]], "spectral_index_error() (gammapy.modeling.models.expcutoffpowerlaw3fglspectralmodel method)": [[230, "gammapy.modeling.models.ExpCutoffPowerLaw3FGLSpectralModel.spectral_index_error", false]], "spectral_index_error() (gammapy.modeling.models.expcutoffpowerlawnormspectralmodel method)": [[231, "gammapy.modeling.models.ExpCutoffPowerLawNormSpectralModel.spectral_index_error", false]], "spectral_index_error() (gammapy.modeling.models.expcutoffpowerlawspectralmodel method)": [[232, "gammapy.modeling.models.ExpCutoffPowerLawSpectralModel.spectral_index_error", false]], "spectral_index_error() (gammapy.modeling.models.gaussianspectralmodel method)": [[237, "gammapy.modeling.models.GaussianSpectralModel.spectral_index_error", false]], "spectral_index_error() (gammapy.modeling.models.logparabolanormspectralmodel method)": [[243, "gammapy.modeling.models.LogParabolaNormSpectralModel.spectral_index_error", false]], "spectral_index_error() (gammapy.modeling.models.logparabolaspectralmodel method)": [[244, "gammapy.modeling.models.LogParabolaSpectralModel.spectral_index_error", false]], "spectral_index_error() (gammapy.modeling.models.meyercrabspectralmodel method)": [[247, "gammapy.modeling.models.MeyerCrabSpectralModel.spectral_index_error", false]], "spectral_index_error() (gammapy.modeling.models.naimaspectralmodel method)": [[251, "gammapy.modeling.models.NaimaSpectralModel.spectral_index_error", false]], "spectral_index_error() (gammapy.modeling.models.piecewisenormspectralmodel method)": [[253, "gammapy.modeling.models.PiecewiseNormSpectralModel.spectral_index_error", false]], "spectral_index_error() (gammapy.modeling.models.powerlaw2spectralmodel method)": [[255, "gammapy.modeling.models.PowerLaw2SpectralModel.spectral_index_error", false]], "spectral_index_error() (gammapy.modeling.models.powerlawnormspectralmodel method)": [[256, "gammapy.modeling.models.PowerLawNormSpectralModel.spectral_index_error", false]], "spectral_index_error() (gammapy.modeling.models.powerlawspectralmodel method)": [[257, "gammapy.modeling.models.PowerLawSpectralModel.spectral_index_error", false]], "spectral_index_error() (gammapy.modeling.models.scalespectralmodel method)": [[262, "gammapy.modeling.models.ScaleSpectralModel.spectral_index_error", false]], "spectral_index_error() (gammapy.modeling.models.smoothbrokenpowerlawspectralmodel method)": [[267, "gammapy.modeling.models.SmoothBrokenPowerLawSpectralModel.spectral_index_error", false]], "spectral_index_error() (gammapy.modeling.models.spectralmodel method)": [[269, "gammapy.modeling.models.SpectralModel.spectral_index_error", false]], "spectral_index_error() (gammapy.modeling.models.superexpcutoffpowerlaw3fglspectralmodel method)": [[270, "gammapy.modeling.models.SuperExpCutoffPowerLaw3FGLSpectralModel.spectral_index_error", false]], "spectral_index_error() (gammapy.modeling.models.superexpcutoffpowerlaw4fgldr3spectralmodel method)": [[271, "gammapy.modeling.models.SuperExpCutoffPowerLaw4FGLDR3SpectralModel.spectral_index_error", false]], "spectral_index_error() (gammapy.modeling.models.superexpcutoffpowerlaw4fglspectralmodel method)": [[272, "gammapy.modeling.models.SuperExpCutoffPowerLaw4FGLSpectralModel.spectral_index_error", false]], "spectral_index_error() (gammapy.modeling.models.templatendspectralmodel method)": [[275, "gammapy.modeling.models.TemplateNDSpectralModel.spectral_index_error", false]], "spectral_index_error() (gammapy.modeling.models.templatespectralmodel method)": [[279, "gammapy.modeling.models.TemplateSpectralModel.spectral_index_error", false]], "spectral_model (gammapy.modeling.models.fovbackgroundmodel attribute)": [[234, "gammapy.modeling.models.FoVBackgroundModel.spectral_model", false]], "spectral_model (gammapy.modeling.models.skymodel attribute)": [[266, "gammapy.modeling.models.SkyModel.spectral_model", false]], "spectral_model (gammapy.modeling.models.templatenpredmodel attribute)": [[276, "gammapy.modeling.models.TemplateNPredModel.spectral_model", false]], "spectral_model() (gammapy.catalog.sourcecatalogobject1lhaaso method)": [[70, "gammapy.catalog.SourceCatalogObject1LHAASO.spectral_model", false]], "spectral_model() (gammapy.catalog.sourcecatalogobject2fhl method)": [[71, "gammapy.catalog.SourceCatalogObject2FHL.spectral_model", false]], "spectral_model() (gammapy.catalog.sourcecatalogobject2hwc method)": [[72, "gammapy.catalog.SourceCatalogObject2HWC.spectral_model", false]], "spectral_model() (gammapy.catalog.sourcecatalogobject2pc method)": [[73, "gammapy.catalog.SourceCatalogObject2PC.spectral_model", false]], "spectral_model() (gammapy.catalog.sourcecatalogobject3fgl method)": [[74, "gammapy.catalog.SourceCatalogObject3FGL.spectral_model", false]], "spectral_model() (gammapy.catalog.sourcecatalogobject3fhl method)": [[75, "gammapy.catalog.SourceCatalogObject3FHL.spectral_model", false]], "spectral_model() (gammapy.catalog.sourcecatalogobject3hwc method)": [[76, "gammapy.catalog.SourceCatalogObject3HWC.spectral_model", false]], "spectral_model() (gammapy.catalog.sourcecatalogobject3pc method)": [[77, "gammapy.catalog.SourceCatalogObject3PC.spectral_model", false]], "spectral_model() (gammapy.catalog.sourcecatalogobject4fgl method)": [[78, "gammapy.catalog.SourceCatalogObject4FGL.spectral_model", false]], "spectral_model() (gammapy.catalog.sourcecatalogobjectgammacat method)": [[79, "gammapy.catalog.SourceCatalogObjectGammaCat.spectral_model", false]], "spectral_model() (gammapy.catalog.sourcecatalogobjecthgps method)": [[80, "gammapy.catalog.SourceCatalogObjectHGPS.spectral_model", false]], "spectral_model_registry (in module gammapy.modeling.models)": [[261, "gammapy.modeling.models.SPECTRAL_MODEL_REGISTRY", false]], "spectralmodel (class in gammapy.modeling.models)": [[269, "gammapy.modeling.models.SpectralModel", false]], "spectrumdataset (class in gammapy.datasets)": [[110, "gammapy.datasets.SpectrumDataset", false]], "spectrumdatasetmaker (class in gammapy.makers)": [[182, "gammapy.makers.SpectrumDatasetMaker", false]], "spectrumdatasetonoff (class in gammapy.datasets)": [[111, "gammapy.datasets.SpectrumDatasetOnOff", false]], "spiralarms (gammapy.astro.population.faucherspiral attribute)": [[33, "gammapy.astro.population.FaucherSpiral.spiralarms", false]], "spiralarms (gammapy.astro.population.valleespiral attribute)": [[38, "gammapy.astro.population.ValleeSpiral.spiralarms", false]], "split_by_axis() (gammapy.maps.hpxmap method)": [[195, "gammapy.maps.HpxMap.split_by_axis", false]], "split_by_axis() (gammapy.maps.hpxndmap method)": [[196, "gammapy.maps.HpxNDMap.split_by_axis", false]], "split_by_axis() (gammapy.maps.map method)": [[198, "gammapy.maps.Map.split_by_axis", false]], "split_by_axis() (gammapy.maps.regionndmap method)": [[204, "gammapy.maps.RegionNDMap.split_by_axis", false]], "split_by_axis() (gammapy.maps.wcsmap method)": [[207, "gammapy.maps.WcsMap.split_by_axis", false]], "split_by_axis() (gammapy.maps.wcsndmap method)": [[208, "gammapy.maps.WcsNDMap.split_by_axis", false]], "split_dataset() (in module gammapy.datasets)": [[116, "gammapy.datasets.split_dataset", false]], "split_dataset() (in module gammapy.datasets.utils)": [[119, "gammapy.datasets.utils.split_dataset", false]], "sqrt_ts (gammapy.estimators.fluxmaps attribute)": [[125, "gammapy.estimators.FluxMaps.sqrt_ts", false]], "sqrt_ts (gammapy.estimators.fluxpoints attribute)": [[127, "gammapy.estimators.FluxPoints.sqrt_ts", false]], "sqrt_ts (gammapy.stats.cashcountsstatistic attribute)": [[291, "gammapy.stats.CashCountsStatistic.sqrt_ts", false]], "sqrt_ts (gammapy.stats.wstatcountsstatistic attribute)": [[293, "gammapy.stats.WStatCountsStatistic.sqrt_ts", false]], "sqrt_ts_threshold_ul (gammapy.estimators.fluxmaps attribute)": [[125, "gammapy.estimators.FluxMaps.sqrt_ts_threshold_ul", false]], "sqrt_ts_threshold_ul (gammapy.estimators.fluxpoints attribute)": [[127, "gammapy.estimators.FluxPoints.sqrt_ts_threshold_ul", false]], "squash() (gammapy.maps.geom method)": [[193, "gammapy.maps.Geom.squash", false]], "squash() (gammapy.maps.hpxgeom method)": [[194, "gammapy.maps.HpxGeom.squash", false]], "squash() (gammapy.maps.labelmapaxis method)": [[197, "gammapy.maps.LabelMapAxis.squash", false]], "squash() (gammapy.maps.mapaxes method)": [[199, "gammapy.maps.MapAxes.squash", false]], "squash() (gammapy.maps.mapaxis method)": [[200, "gammapy.maps.MapAxis.squash", false]], "squash() (gammapy.maps.regiongeom method)": [[203, "gammapy.maps.RegionGeom.squash", false]], "squash() (gammapy.maps.timemapaxis method)": [[205, "gammapy.maps.TimeMapAxis.squash", false]], "squash() (gammapy.maps.wcsgeom method)": [[206, "gammapy.maps.WcsGeom.squash", false]], "ssc_model (gammapy.modeling.models.naimaspectralmodel attribute)": [[251, "gammapy.modeling.models.NaimaSpectralModel.ssc_model", false]], "stack() (gammapy.data.eventlist method)": [[83, "gammapy.data.EventList.stack", false]], "stack() (gammapy.data.gti method)": [[86, "gammapy.data.GTI.stack", false]], "stack() (gammapy.datasets.mapdataset method)": [[103, "gammapy.datasets.MapDataset.stack", false]], "stack() (gammapy.datasets.mapdatasetmetadata method)": [[105, "gammapy.datasets.MapDatasetMetaData.stack", false]], "stack() (gammapy.datasets.mapdatasetonoff method)": [[106, "gammapy.datasets.MapDatasetOnOff.stack", false]], "stack() (gammapy.datasets.spectrumdataset method)": [[110, "gammapy.datasets.SpectrumDataset.stack", false]], "stack() (gammapy.datasets.spectrumdatasetonoff method)": [[111, "gammapy.datasets.SpectrumDatasetOnOff.stack", false]], "stack() (gammapy.irf.edispkernelmap method)": [[153, "gammapy.irf.EDispKernelMap.stack", false]], "stack() (gammapy.irf.edispmap method)": [[154, "gammapy.irf.EDispMap.stack", false]], "stack() (gammapy.irf.irfmap method)": [[160, "gammapy.irf.IRFMap.stack", false]], "stack() (gammapy.irf.psfmap method)": [[165, "gammapy.irf.PSFMap.stack", false]], "stack() (gammapy.irf.recopsfmap method)": [[168, "gammapy.irf.RecoPSFMap.stack", false]], "stack() (gammapy.maps.hpxndmap method)": [[196, "gammapy.maps.HpxNDMap.stack", false]], "stack() (gammapy.maps.regionndmap method)": [[204, "gammapy.maps.RegionNDMap.stack", false]], "stack() (gammapy.maps.wcsndmap method)": [[208, "gammapy.maps.WcsNDMap.stack", false]], "stack() (gammapy.modeling.models.templatenpredmodel method)": [[276, "gammapy.modeling.models.TemplateNPredModel.stack", false]], "stack_reduce() (gammapy.datasets.datasets method)": [[100, "gammapy.datasets.Datasets.stack_reduce", false]], "standard_broadcasting (gammapy.astro.population.casebattacharya1998 attribute)": [[28, "gammapy.astro.population.CaseBattacharya1998.standard_broadcasting", false]], "standard_broadcasting (gammapy.astro.population.exponential attribute)": [[29, "gammapy.astro.population.Exponential.standard_broadcasting", false]], "standard_broadcasting (gammapy.astro.population.faucherkaspi2006 attribute)": [[30, "gammapy.astro.population.FaucherKaspi2006.standard_broadcasting", false]], "standard_broadcasting (gammapy.astro.population.faucherkaspi2006velocitybimodal attribute)": [[31, "gammapy.astro.population.FaucherKaspi2006VelocityBimodal.standard_broadcasting", false]], "standard_broadcasting (gammapy.astro.population.faucherkaspi2006velocitymaxwellian attribute)": [[32, "gammapy.astro.population.FaucherKaspi2006VelocityMaxwellian.standard_broadcasting", false]], "standard_broadcasting (gammapy.astro.population.lorimer2006 attribute)": [[35, "gammapy.astro.population.Lorimer2006.standard_broadcasting", false]], "standard_broadcasting (gammapy.astro.population.paczynski1990 attribute)": [[36, "gammapy.astro.population.Paczynski1990.standard_broadcasting", false]], "standard_broadcasting (gammapy.astro.population.paczynski1990velocity attribute)": [[37, "gammapy.astro.population.Paczynski1990Velocity.standard_broadcasting", false]], "standard_broadcasting (gammapy.astro.population.yusifovkucuk2004 attribute)": [[39, "gammapy.astro.population.YusifovKucuk2004.standard_broadcasting", false]], "standard_broadcasting (gammapy.astro.population.yusifovkucuk2004b attribute)": [[40, "gammapy.astro.population.YusifovKucuk2004B.standard_broadcasting", false]], "standard_scaler() (in module gammapy.utils.cluster)": [[309, "gammapy.utils.cluster.standard_scaler", false]], "standardise_unit() (in module gammapy.utils.units)": [[368, "gammapy.utils.units.standardise_unit", false]], "stat (gammapy.estimators.fluxmaps attribute)": [[125, "gammapy.estimators.FluxMaps.stat", false]], "stat (gammapy.estimators.fluxpoints attribute)": [[127, "gammapy.estimators.FluxPoints.stat", false]], "stat_array() (gammapy.datasets.dataset method)": [[99, "gammapy.datasets.Dataset.stat_array", false]], "stat_array() (gammapy.datasets.fluxpointsdataset method)": [[102, "gammapy.datasets.FluxPointsDataset.stat_array", false]], "stat_array() (gammapy.datasets.mapdataset method)": [[103, "gammapy.datasets.MapDataset.stat_array", false]], "stat_array() (gammapy.datasets.mapdatasetonoff method)": [[106, "gammapy.datasets.MapDatasetOnOff.stat_array", false]], "stat_array() (gammapy.datasets.spectrumdataset method)": [[110, "gammapy.datasets.SpectrumDataset.stat_array", false]], "stat_array() (gammapy.datasets.spectrumdatasetonoff method)": [[111, "gammapy.datasets.SpectrumDatasetOnOff.stat_array", false]], "stat_contour() (gammapy.modeling.fit method)": [[213, "gammapy.modeling.Fit.stat_contour", false]], "stat_max (gammapy.stats.cashcountsstatistic attribute)": [[291, "gammapy.stats.CashCountsStatistic.stat_max", false]], "stat_max (gammapy.stats.wstatcountsstatistic attribute)": [[293, "gammapy.stats.WStatCountsStatistic.stat_max", false]], "stat_null (gammapy.estimators.fluxmaps attribute)": [[125, "gammapy.estimators.FluxMaps.stat_null", false]], "stat_null (gammapy.estimators.fluxpoints attribute)": [[127, "gammapy.estimators.FluxPoints.stat_null", false]], "stat_null (gammapy.stats.cashcountsstatistic attribute)": [[291, "gammapy.stats.CashCountsStatistic.stat_null", false]], "stat_null (gammapy.stats.wstatcountsstatistic attribute)": [[293, "gammapy.stats.WStatCountsStatistic.stat_null", false]], "stat_profile() (gammapy.modeling.fit method)": [[213, "gammapy.modeling.Fit.stat_profile", false]], "stat_profile_ul_scipy() (in module gammapy.modeling)": [[290, "gammapy.modeling.stat_profile_ul_scipy", false]], "stat_scan (gammapy.estimators.fluxmaps attribute)": [[125, "gammapy.estimators.FluxMaps.stat_scan", false]], "stat_scan (gammapy.estimators.fluxpoints attribute)": [[127, "gammapy.estimators.FluxPoints.stat_scan", false]], "stat_sum() (gammapy.datasets.dataset method)": [[99, "gammapy.datasets.Dataset.stat_sum", false]], "stat_sum() (gammapy.datasets.datasets method)": [[100, "gammapy.datasets.Datasets.stat_sum", false]], "stat_sum() (gammapy.datasets.fluxpointsdataset method)": [[102, "gammapy.datasets.FluxPointsDataset.stat_sum", false]], "stat_sum() (gammapy.datasets.mapdataset method)": [[103, "gammapy.datasets.MapDataset.stat_sum", false]], "stat_sum() (gammapy.datasets.mapdatasetonoff method)": [[106, "gammapy.datasets.MapDatasetOnOff.stat_sum", false]], "stat_sum() (gammapy.datasets.spectrumdataset method)": [[110, "gammapy.datasets.SpectrumDataset.stat_sum", false]], "stat_sum() (gammapy.datasets.spectrumdatasetonoff method)": [[111, "gammapy.datasets.SpectrumDatasetOnOff.stat_sum", false]], "stat_surface() (gammapy.modeling.fit method)": [[213, "gammapy.modeling.Fit.stat_surface", false]], "stat_type (gammapy.datasets.fluxpointsdataset attribute)": [[102, "gammapy.datasets.FluxPointsDataset.stat_type", false]], "stat_type (gammapy.datasets.mapdataset attribute)": [[103, "gammapy.datasets.MapDataset.stat_type", false]], "stat_type (gammapy.datasets.mapdatasetonoff attribute)": [[106, "gammapy.datasets.MapDatasetOnOff.stat_type", false]], "stat_type (gammapy.datasets.spectrumdataset attribute)": [[110, "gammapy.datasets.SpectrumDataset.stat_type", false]], "stat_type (gammapy.datasets.spectrumdatasetonoff attribute)": [[111, "gammapy.datasets.SpectrumDatasetOnOff.stat_type", false]], "stds (gammapy.astro.population.casebattacharya1998 attribute)": [[28, "gammapy.astro.population.CaseBattacharya1998.stds", false]], "stds (gammapy.astro.population.exponential attribute)": [[29, "gammapy.astro.population.Exponential.stds", false]], "stds (gammapy.astro.population.faucherkaspi2006 attribute)": [[30, "gammapy.astro.population.FaucherKaspi2006.stds", false]], "stds (gammapy.astro.population.faucherkaspi2006velocitybimodal attribute)": [[31, "gammapy.astro.population.FaucherKaspi2006VelocityBimodal.stds", false]], "stds (gammapy.astro.population.faucherkaspi2006velocitymaxwellian attribute)": [[32, "gammapy.astro.population.FaucherKaspi2006VelocityMaxwellian.stds", false]], "stds (gammapy.astro.population.lorimer2006 attribute)": [[35, "gammapy.astro.population.Lorimer2006.stds", false]], "stds (gammapy.astro.population.paczynski1990 attribute)": [[36, "gammapy.astro.population.Paczynski1990.stds", false]], "stds (gammapy.astro.population.paczynski1990velocity attribute)": [[37, "gammapy.astro.population.Paczynski1990Velocity.stds", false]], "stds (gammapy.astro.population.yusifovkucuk2004 attribute)": [[39, "gammapy.astro.population.YusifovKucuk2004.stds", false]], "stds (gammapy.astro.population.yusifovkucuk2004b attribute)": [[40, "gammapy.astro.population.YusifovKucuk2004B.stds", false]], "strip_units_from_tree() (gammapy.astro.population.casebattacharya1998 method)": [[28, "gammapy.astro.population.CaseBattacharya1998.strip_units_from_tree", false]], "strip_units_from_tree() (gammapy.astro.population.exponential method)": [[29, "gammapy.astro.population.Exponential.strip_units_from_tree", false]], "strip_units_from_tree() (gammapy.astro.population.faucherkaspi2006 method)": [[30, "gammapy.astro.population.FaucherKaspi2006.strip_units_from_tree", false]], "strip_units_from_tree() (gammapy.astro.population.faucherkaspi2006velocitybimodal method)": [[31, "gammapy.astro.population.FaucherKaspi2006VelocityBimodal.strip_units_from_tree", false]], "strip_units_from_tree() (gammapy.astro.population.faucherkaspi2006velocitymaxwellian method)": [[32, "gammapy.astro.population.FaucherKaspi2006VelocityMaxwellian.strip_units_from_tree", false]], "strip_units_from_tree() (gammapy.astro.population.lorimer2006 method)": [[35, "gammapy.astro.population.Lorimer2006.strip_units_from_tree", false]], "strip_units_from_tree() (gammapy.astro.population.paczynski1990 method)": [[36, "gammapy.astro.population.Paczynski1990.strip_units_from_tree", false]], "strip_units_from_tree() (gammapy.astro.population.paczynski1990velocity method)": [[37, "gammapy.astro.population.Paczynski1990Velocity.strip_units_from_tree", false]], "strip_units_from_tree() (gammapy.astro.population.yusifovkucuk2004 method)": [[39, "gammapy.astro.population.YusifovKucuk2004.strip_units_from_tree", false]], "strip_units_from_tree() (gammapy.astro.population.yusifovkucuk2004b method)": [[40, "gammapy.astro.population.YusifovKucuk2004B.strip_units_from_tree", false]], "structure_function() (in module gammapy.stats)": [[306, "gammapy.stats.structure_function", false]], "success (gammapy.estimators.fluxmaps attribute)": [[125, "gammapy.estimators.FluxMaps.success", false]], "success (gammapy.estimators.fluxpoints attribute)": [[127, "gammapy.estimators.FluxPoints.success", false]], "success (gammapy.modeling.covarianceresult attribute)": [[212, "gammapy.modeling.CovarianceResult.success", false]], "success (gammapy.modeling.fitresult attribute)": [[214, "gammapy.modeling.FitResult.success", false]], "success (gammapy.modeling.optimizeresult attribute)": [[215, "gammapy.modeling.OptimizeResult.success", false]], "sum() (gammapy.stats.cashcountsstatistic method)": [[291, "gammapy.stats.CashCountsStatistic.sum", false]], "sum() (gammapy.stats.wstatcountsstatistic method)": [[293, "gammapy.stats.WStatCountsStatistic.sum", false]], "sum_of_implicit_terms() (gammapy.astro.population.casebattacharya1998 method)": [[28, "gammapy.astro.population.CaseBattacharya1998.sum_of_implicit_terms", false]], "sum_of_implicit_terms() (gammapy.astro.population.exponential method)": [[29, "gammapy.astro.population.Exponential.sum_of_implicit_terms", false]], "sum_of_implicit_terms() (gammapy.astro.population.faucherkaspi2006 method)": [[30, "gammapy.astro.population.FaucherKaspi2006.sum_of_implicit_terms", false]], "sum_of_implicit_terms() (gammapy.astro.population.faucherkaspi2006velocitybimodal method)": [[31, "gammapy.astro.population.FaucherKaspi2006VelocityBimodal.sum_of_implicit_terms", false]], "sum_of_implicit_terms() (gammapy.astro.population.faucherkaspi2006velocitymaxwellian method)": [[32, "gammapy.astro.population.FaucherKaspi2006VelocityMaxwellian.sum_of_implicit_terms", false]], "sum_of_implicit_terms() (gammapy.astro.population.lorimer2006 method)": [[35, "gammapy.astro.population.Lorimer2006.sum_of_implicit_terms", false]], "sum_of_implicit_terms() (gammapy.astro.population.paczynski1990 method)": [[36, "gammapy.astro.population.Paczynski1990.sum_of_implicit_terms", false]], "sum_of_implicit_terms() (gammapy.astro.population.paczynski1990velocity method)": [[37, "gammapy.astro.population.Paczynski1990Velocity.sum_of_implicit_terms", false]], "sum_of_implicit_terms() (gammapy.astro.population.yusifovkucuk2004 method)": [[39, "gammapy.astro.population.YusifovKucuk2004.sum_of_implicit_terms", false]], "sum_of_implicit_terms() (gammapy.astro.population.yusifovkucuk2004b method)": [[40, "gammapy.astro.population.YusifovKucuk2004B.sum_of_implicit_terms", false]], "sum_over_axes() (gammapy.maps.hpxmap method)": [[195, "gammapy.maps.HpxMap.sum_over_axes", false]], "sum_over_axes() (gammapy.maps.hpxndmap method)": [[196, "gammapy.maps.HpxNDMap.sum_over_axes", false]], "sum_over_axes() (gammapy.maps.map method)": [[198, "gammapy.maps.Map.sum_over_axes", false]], "sum_over_axes() (gammapy.maps.regionndmap method)": [[204, "gammapy.maps.RegionNDMap.sum_over_axes", false]], "sum_over_axes() (gammapy.maps.wcsmap method)": [[207, "gammapy.maps.WcsMap.sum_over_axes", false]], "sum_over_axes() (gammapy.maps.wcsndmap method)": [[208, "gammapy.maps.WcsNDMap.sum_over_axes", false]], "summary() (gammapy.data.hduindextable method)": [[87, "gammapy.data.HDUIndexTable.summary", false]], "summary() (gammapy.data.observationtable method)": [[91, "gammapy.data.ObservationTable.summary", false]], "superexpcutoffpowerlaw3fglspectralmodel (class in gammapy.modeling.models)": [[270, "gammapy.modeling.models.SuperExpCutoffPowerLaw3FGLSpectralModel", false]], "superexpcutoffpowerlaw4fgldr3spectralmodel (class in gammapy.modeling.models)": [[271, "gammapy.modeling.models.SuperExpCutoffPowerLaw4FGLDR3SpectralModel", false]], "superexpcutoffpowerlaw4fglspectralmodel (class in gammapy.modeling.models)": [[272, "gammapy.modeling.models.SuperExpCutoffPowerLaw4FGLSpectralModel", false]], "sync_constraints (gammapy.astro.population.casebattacharya1998 attribute)": [[28, "gammapy.astro.population.CaseBattacharya1998.sync_constraints", false]], "sync_constraints (gammapy.astro.population.exponential attribute)": [[29, "gammapy.astro.population.Exponential.sync_constraints", false]], "sync_constraints (gammapy.astro.population.faucherkaspi2006 attribute)": [[30, "gammapy.astro.population.FaucherKaspi2006.sync_constraints", false]], "sync_constraints (gammapy.astro.population.faucherkaspi2006velocitybimodal attribute)": [[31, "gammapy.astro.population.FaucherKaspi2006VelocityBimodal.sync_constraints", false]], "sync_constraints (gammapy.astro.population.faucherkaspi2006velocitymaxwellian attribute)": [[32, "gammapy.astro.population.FaucherKaspi2006VelocityMaxwellian.sync_constraints", false]], "sync_constraints (gammapy.astro.population.lorimer2006 attribute)": [[35, "gammapy.astro.population.Lorimer2006.sync_constraints", false]], "sync_constraints (gammapy.astro.population.paczynski1990 attribute)": [[36, "gammapy.astro.population.Paczynski1990.sync_constraints", false]], "sync_constraints (gammapy.astro.population.paczynski1990velocity attribute)": [[37, "gammapy.astro.population.Paczynski1990Velocity.sync_constraints", false]], "sync_constraints (gammapy.astro.population.yusifovkucuk2004 attribute)": [[39, "gammapy.astro.population.YusifovKucuk2004.sync_constraints", false]], "sync_constraints (gammapy.astro.population.yusifovkucuk2004b attribute)": [[40, "gammapy.astro.population.YusifovKucuk2004B.sync_constraints", false]], "t0 (gammapy.modeling.models.expdecaytemporalmodel attribute)": [[233, "gammapy.modeling.models.ExpDecayTemporalModel.t0", false]], "t0 (gammapy.modeling.models.powerlawtemporalmodel attribute)": [[258, "gammapy.modeling.models.PowerLawTemporalModel.t0", false]], "t_decay (gammapy.modeling.models.generalizedgaussiantemporalmodel attribute)": [[240, "gammapy.modeling.models.GeneralizedGaussianTemporalModel.t_decay", false]], "t_ref (gammapy.modeling.models.expdecaytemporalmodel attribute)": [[233, "gammapy.modeling.models.ExpDecayTemporalModel.t_ref", false]], "t_ref (gammapy.modeling.models.gaussiantemporalmodel attribute)": [[238, "gammapy.modeling.models.GaussianTemporalModel.t_ref", false]], "t_ref (gammapy.modeling.models.generalizedgaussiantemporalmodel attribute)": [[240, "gammapy.modeling.models.GeneralizedGaussianTemporalModel.t_ref", false]], "t_ref (gammapy.modeling.models.lightcurvetemplatetemporalmodel attribute)": [[241, "gammapy.modeling.models.LightCurveTemplateTemporalModel.t_ref", false]], "t_ref (gammapy.modeling.models.lineartemporalmodel attribute)": [[242, "gammapy.modeling.models.LinearTemporalModel.t_ref", false]], "t_ref (gammapy.modeling.models.powerlawtemporalmodel attribute)": [[258, "gammapy.modeling.models.PowerLawTemporalModel.t_ref", false]], "t_ref (gammapy.modeling.models.sinetemporalmodel attribute)": [[265, "gammapy.modeling.models.SineTemporalModel.t_ref", false]], "t_ref (gammapy.modeling.models.templatephasecurvetemporalmodel attribute)": [[277, "gammapy.modeling.models.TemplatePhaseCurveTemporalModel.t_ref", false]], "t_rise (gammapy.modeling.models.generalizedgaussiantemporalmodel attribute)": [[240, "gammapy.modeling.models.GeneralizedGaussianTemporalModel.t_rise", false]], "table_associations (gammapy.catalog.sourcecataloghgps attribute)": [[67, "gammapy.catalog.SourceCatalogHGPS.table_associations", false]], "table_components (gammapy.catalog.sourcecataloghgps attribute)": [[67, "gammapy.catalog.SourceCatalogHGPS.table_components", false]], "table_filename (gammapy.astro.darkmatter.primaryflux attribute)": [[26, "gammapy.astro.darkmatter.PrimaryFlux.table_filename", false]], "table_identifications (gammapy.catalog.sourcecataloghgps attribute)": [[67, "gammapy.catalog.SourceCatalogHGPS.table_identifications", false]], "table_large_scale_component (gammapy.catalog.sourcecataloghgps attribute)": [[67, "gammapy.catalog.SourceCatalogHGPS.table_large_scale_component", false]], "table_row_to_dict() (in module gammapy.utils.table)": [[354, "gammapy.utils.table.table_row_to_dict", false]], "table_standardise_units_copy() (in module gammapy.utils.table)": [[355, "gammapy.utils.table.table_standardise_units_copy", false]], "table_standardise_units_inplace() (in module gammapy.utils.table)": [[356, "gammapy.utils.table.table_standardise_units_inplace", false]], "tag (gammapy.astro.darkmatter.darkmatterannihilationspectralmodel attribute)": [[19, "gammapy.astro.darkmatter.DarkMatterAnnihilationSpectralModel.tag", false]], "tag (gammapy.astro.darkmatter.darkmatterdecayspectralmodel attribute)": [[20, "gammapy.astro.darkmatter.DarkMatterDecaySpectralModel.tag", false]], "tag (gammapy.astro.darkmatter.primaryflux attribute)": [[26, "gammapy.astro.darkmatter.PrimaryFlux.tag", false]], "tag (gammapy.catalog.sourcecatalog attribute)": [[56, "gammapy.catalog.SourceCatalog.tag", false]], "tag (gammapy.catalog.sourcecatalog1lhaaso attribute)": [[57, "gammapy.catalog.SourceCatalog1LHAASO.tag", false]], "tag (gammapy.catalog.sourcecatalog2fhl attribute)": [[58, "gammapy.catalog.SourceCatalog2FHL.tag", false]], "tag (gammapy.catalog.sourcecatalog2hwc attribute)": [[59, "gammapy.catalog.SourceCatalog2HWC.tag", false]], "tag (gammapy.catalog.sourcecatalog2pc attribute)": [[60, "gammapy.catalog.SourceCatalog2PC.tag", false]], "tag (gammapy.catalog.sourcecatalog3fgl attribute)": [[61, "gammapy.catalog.SourceCatalog3FGL.tag", false]], "tag (gammapy.catalog.sourcecatalog3fhl attribute)": [[62, "gammapy.catalog.SourceCatalog3FHL.tag", false]], "tag (gammapy.catalog.sourcecatalog3hwc attribute)": [[63, "gammapy.catalog.SourceCatalog3HWC.tag", false]], "tag (gammapy.catalog.sourcecatalog3pc attribute)": [[64, "gammapy.catalog.SourceCatalog3PC.tag", false]], "tag (gammapy.catalog.sourcecatalog4fgl attribute)": [[65, "gammapy.catalog.SourceCatalog4FGL.tag", false]], "tag (gammapy.catalog.sourcecataloggammacat attribute)": [[66, "gammapy.catalog.SourceCatalogGammaCat.tag", false]], "tag (gammapy.catalog.sourcecataloghgps attribute)": [[67, "gammapy.catalog.SourceCatalogHGPS.tag", false]], "tag (gammapy.data.eventlistmetadata attribute)": [[84, "gammapy.data.EventListMetaData.tag", false]], "tag (gammapy.data.observationmetadata attribute)": [[90, "gammapy.data.ObservationMetaData.tag", false]], "tag (gammapy.datasets.dataset attribute)": [[99, "gammapy.datasets.Dataset.tag", false]], "tag (gammapy.datasets.fermipydatasetsreader attribute)": [[101, "gammapy.datasets.FermipyDatasetsReader.tag", false]], "tag (gammapy.datasets.fluxpointsdataset attribute)": [[102, "gammapy.datasets.FluxPointsDataset.tag", false]], "tag (gammapy.datasets.mapdataset attribute)": [[103, "gammapy.datasets.MapDataset.tag", false]], "tag (gammapy.datasets.mapdatasetmetadata attribute)": [[105, "gammapy.datasets.MapDatasetMetaData.tag", false]], "tag (gammapy.datasets.mapdatasetonoff attribute)": [[106, "gammapy.datasets.MapDatasetOnOff.tag", false]], "tag (gammapy.datasets.ogipdatasetreader attribute)": [[107, "gammapy.datasets.OGIPDatasetReader.tag", false]], "tag (gammapy.datasets.ogipdatasetwriter attribute)": [[108, "gammapy.datasets.OGIPDatasetWriter.tag", false]], "tag (gammapy.datasets.spectrumdataset attribute)": [[110, "gammapy.datasets.SpectrumDataset.tag", false]], "tag (gammapy.datasets.spectrumdatasetonoff attribute)": [[111, "gammapy.datasets.SpectrumDatasetOnOff.tag", false]], "tag (gammapy.estimators.asmoothmapestimator attribute)": [[120, "gammapy.estimators.ASmoothMapEstimator.tag", false]], "tag (gammapy.estimators.energydependentmorphologyestimator attribute)": [[122, "gammapy.estimators.EnergyDependentMorphologyEstimator.tag", false]], "tag (gammapy.estimators.estimator attribute)": [[123, "gammapy.estimators.Estimator.tag", false]], "tag (gammapy.estimators.excessmapestimator attribute)": [[124, "gammapy.estimators.ExcessMapEstimator.tag", false]], "tag (gammapy.estimators.fluxmetadata attribute)": [[126, "gammapy.estimators.FluxMetaData.tag", false]], "tag (gammapy.estimators.fluxpointsestimator attribute)": [[128, "gammapy.estimators.FluxPointsEstimator.tag", false]], "tag (gammapy.estimators.fluxprofileestimator attribute)": [[129, "gammapy.estimators.FluxProfileEstimator.tag", false]], "tag (gammapy.estimators.imageprofileestimator attribute)": [[131, "gammapy.estimators.ImageProfileEstimator.tag", false]], "tag (gammapy.estimators.lightcurveestimator attribute)": [[132, "gammapy.estimators.LightCurveEstimator.tag", false]], "tag (gammapy.estimators.parameterestimator attribute)": [[133, "gammapy.estimators.ParameterEstimator.tag", false]], "tag (gammapy.estimators.sensitivityestimator attribute)": [[134, "gammapy.estimators.SensitivityEstimator.tag", false]], "tag (gammapy.estimators.tsmapestimator attribute)": [[135, "gammapy.estimators.TSMapEstimator.tag", false]], "tag (gammapy.irf.background2d attribute)": [[149, "gammapy.irf.Background2D.tag", false]], "tag (gammapy.irf.background3d attribute)": [[150, "gammapy.irf.Background3D.tag", false]], "tag (gammapy.irf.backgroundirf attribute)": [[151, "gammapy.irf.BackgroundIRF.tag", false]], "tag (gammapy.irf.edispkernel attribute)": [[152, "gammapy.irf.EDispKernel.tag", false]], "tag (gammapy.irf.edispkernelmap attribute)": [[153, "gammapy.irf.EDispKernelMap.tag", false]], "tag (gammapy.irf.edispmap attribute)": [[154, "gammapy.irf.EDispMap.tag", false]], "tag (gammapy.irf.effectiveareatable2d attribute)": [[155, "gammapy.irf.EffectiveAreaTable2D.tag", false]], "tag (gammapy.irf.energydependentmultigausspsf attribute)": [[156, "gammapy.irf.EnergyDependentMultiGaussPSF.tag", false]], "tag (gammapy.irf.energydispersion2d attribute)": [[157, "gammapy.irf.EnergyDispersion2D.tag", false]], "tag (gammapy.irf.irf attribute)": [[159, "gammapy.irf.IRF.tag", false]], "tag (gammapy.irf.irfmap attribute)": [[160, "gammapy.irf.IRFMap.tag", false]], "tag (gammapy.irf.parametricpsf attribute)": [[166, "gammapy.irf.ParametricPSF.tag", false]], "tag (gammapy.irf.psf3d attribute)": [[162, "gammapy.irf.PSF3D.tag", false]], "tag (gammapy.irf.psfking attribute)": [[164, "gammapy.irf.PSFKing.tag", false]], "tag (gammapy.irf.psfmap attribute)": [[165, "gammapy.irf.PSFMap.tag", false]], "tag (gammapy.irf.radmax2d attribute)": [[167, "gammapy.irf.RadMax2D.tag", false]], "tag (gammapy.irf.recopsfmap attribute)": [[168, "gammapy.irf.RecoPSFMap.tag", false]], "tag (gammapy.makers.adaptiveringbackgroundmaker attribute)": [[170, "gammapy.makers.AdaptiveRingBackgroundMaker.tag", false]], "tag (gammapy.makers.datasetsmaker attribute)": [[171, "gammapy.makers.DatasetsMaker.tag", false]], "tag (gammapy.makers.fovbackgroundmaker attribute)": [[172, "gammapy.makers.FoVBackgroundMaker.tag", false]], "tag (gammapy.makers.maker attribute)": [[174, "gammapy.makers.Maker.tag", false]], "tag (gammapy.makers.mapdatasetmaker attribute)": [[175, "gammapy.makers.MapDatasetMaker.tag", false]], "tag (gammapy.makers.phasebackgroundmaker attribute)": [[176, "gammapy.makers.PhaseBackgroundMaker.tag", false]], "tag (gammapy.makers.reflectedregionsbackgroundmaker attribute)": [[177, "gammapy.makers.ReflectedRegionsBackgroundMaker.tag", false]], "tag (gammapy.makers.ringbackgroundmaker attribute)": [[180, "gammapy.makers.RingBackgroundMaker.tag", false]], "tag (gammapy.makers.safemaskmaker attribute)": [[181, "gammapy.makers.SafeMaskMaker.tag", false]], "tag (gammapy.makers.spectrumdatasetmaker attribute)": [[182, "gammapy.makers.SpectrumDatasetMaker.tag", false]], "tag (gammapy.maps.hpxmap attribute)": [[195, "gammapy.maps.HpxMap.tag", false]], "tag (gammapy.maps.hpxndmap attribute)": [[196, "gammapy.maps.HpxNDMap.tag", false]], "tag (gammapy.maps.map attribute)": [[198, "gammapy.maps.Map.tag", false]], "tag (gammapy.maps.regionndmap attribute)": [[204, "gammapy.maps.RegionNDMap.tag", false]], "tag (gammapy.maps.wcsmap attribute)": [[207, "gammapy.maps.WcsMap.tag", false]], "tag (gammapy.maps.wcsndmap attribute)": [[208, "gammapy.maps.WcsNDMap.tag", false]], "tag (gammapy.modeling.models.brokenpowerlawspectralmodel attribute)": [[220, "gammapy.modeling.models.BrokenPowerLawSpectralModel.tag", false]], "tag (gammapy.modeling.models.compoundspectralmodel attribute)": [[221, "gammapy.modeling.models.CompoundSpectralModel.tag", false]], "tag (gammapy.modeling.models.constantfluxspatialmodel attribute)": [[222, "gammapy.modeling.models.ConstantFluxSpatialModel.tag", false]], "tag (gammapy.modeling.models.constantspatialmodel attribute)": [[223, "gammapy.modeling.models.ConstantSpatialModel.tag", false]], "tag (gammapy.modeling.models.constantspectralmodel attribute)": [[224, "gammapy.modeling.models.ConstantSpectralModel.tag", false]], "tag (gammapy.modeling.models.constanttemporalmodel attribute)": [[225, "gammapy.modeling.models.ConstantTemporalModel.tag", false]], "tag (gammapy.modeling.models.diskspatialmodel attribute)": [[227, "gammapy.modeling.models.DiskSpatialModel.tag", false]], "tag (gammapy.modeling.models.eblabsorptionnormspectralmodel attribute)": [[228, "gammapy.modeling.models.EBLAbsorptionNormSpectralModel.tag", false]], "tag (gammapy.modeling.models.expcutoffpowerlaw3fglspectralmodel attribute)": [[230, "gammapy.modeling.models.ExpCutoffPowerLaw3FGLSpectralModel.tag", false]], "tag (gammapy.modeling.models.expcutoffpowerlawnormspectralmodel attribute)": [[231, "gammapy.modeling.models.ExpCutoffPowerLawNormSpectralModel.tag", false]], "tag (gammapy.modeling.models.expcutoffpowerlawspectralmodel attribute)": [[232, "gammapy.modeling.models.ExpCutoffPowerLawSpectralModel.tag", false]], "tag (gammapy.modeling.models.expdecaytemporalmodel attribute)": [[233, "gammapy.modeling.models.ExpDecayTemporalModel.tag", false]], "tag (gammapy.modeling.models.fovbackgroundmodel attribute)": [[234, "gammapy.modeling.models.FoVBackgroundModel.tag", false]], "tag (gammapy.modeling.models.gaussianprior attribute)": [[235, "gammapy.modeling.models.GaussianPrior.tag", false]], "tag (gammapy.modeling.models.gaussianspatialmodel attribute)": [[236, "gammapy.modeling.models.GaussianSpatialModel.tag", false]], "tag (gammapy.modeling.models.gaussianspectralmodel attribute)": [[237, "gammapy.modeling.models.GaussianSpectralModel.tag", false]], "tag (gammapy.modeling.models.gaussiantemporalmodel attribute)": [[238, "gammapy.modeling.models.GaussianTemporalModel.tag", false]], "tag (gammapy.modeling.models.generalizedgaussianspatialmodel attribute)": [[239, "gammapy.modeling.models.GeneralizedGaussianSpatialModel.tag", false]], "tag (gammapy.modeling.models.generalizedgaussiantemporalmodel attribute)": [[240, "gammapy.modeling.models.GeneralizedGaussianTemporalModel.tag", false]], "tag (gammapy.modeling.models.lightcurvetemplatetemporalmodel attribute)": [[241, "gammapy.modeling.models.LightCurveTemplateTemporalModel.tag", false]], "tag (gammapy.modeling.models.lineartemporalmodel attribute)": [[242, "gammapy.modeling.models.LinearTemporalModel.tag", false]], "tag (gammapy.modeling.models.logparabolanormspectralmodel attribute)": [[243, "gammapy.modeling.models.LogParabolaNormSpectralModel.tag", false]], "tag (gammapy.modeling.models.logparabolaspectralmodel attribute)": [[244, "gammapy.modeling.models.LogParabolaSpectralModel.tag", false]], "tag (gammapy.modeling.models.loguniformprior attribute)": [[245, "gammapy.modeling.models.LogUniformPrior.tag", false]], "tag (gammapy.modeling.models.naimaspectralmodel attribute)": [[251, "gammapy.modeling.models.NaimaSpectralModel.tag", false]], "tag (gammapy.modeling.models.piecewisenormspatialmodel attribute)": [[252, "gammapy.modeling.models.PiecewiseNormSpatialModel.tag", false]], "tag (gammapy.modeling.models.piecewisenormspectralmodel attribute)": [[253, "gammapy.modeling.models.PiecewiseNormSpectralModel.tag", false]], "tag (gammapy.modeling.models.pointspatialmodel attribute)": [[254, "gammapy.modeling.models.PointSpatialModel.tag", false]], "tag (gammapy.modeling.models.powerlaw2spectralmodel attribute)": [[255, "gammapy.modeling.models.PowerLaw2SpectralModel.tag", false]], "tag (gammapy.modeling.models.powerlawnormspectralmodel attribute)": [[256, "gammapy.modeling.models.PowerLawNormSpectralModel.tag", false]], "tag (gammapy.modeling.models.powerlawspectralmodel attribute)": [[257, "gammapy.modeling.models.PowerLawSpectralModel.tag", false]], "tag (gammapy.modeling.models.powerlawtemporalmodel attribute)": [[258, "gammapy.modeling.models.PowerLawTemporalModel.tag", false]], "tag (gammapy.modeling.models.scalespectralmodel attribute)": [[262, "gammapy.modeling.models.ScaleSpectralModel.tag", false]], "tag (gammapy.modeling.models.shell2spatialmodel attribute)": [[263, "gammapy.modeling.models.Shell2SpatialModel.tag", false]], "tag (gammapy.modeling.models.shellspatialmodel attribute)": [[264, "gammapy.modeling.models.ShellSpatialModel.tag", false]], "tag (gammapy.modeling.models.sinetemporalmodel attribute)": [[265, "gammapy.modeling.models.SineTemporalModel.tag", false]], "tag (gammapy.modeling.models.skymodel attribute)": [[266, "gammapy.modeling.models.SkyModel.tag", false]], "tag (gammapy.modeling.models.smoothbrokenpowerlawspectralmodel attribute)": [[267, "gammapy.modeling.models.SmoothBrokenPowerLawSpectralModel.tag", false]], "tag (gammapy.modeling.models.superexpcutoffpowerlaw3fglspectralmodel attribute)": [[270, "gammapy.modeling.models.SuperExpCutoffPowerLaw3FGLSpectralModel.tag", false]], "tag (gammapy.modeling.models.superexpcutoffpowerlaw4fgldr3spectralmodel attribute)": [[271, "gammapy.modeling.models.SuperExpCutoffPowerLaw4FGLDR3SpectralModel.tag", false]], "tag (gammapy.modeling.models.superexpcutoffpowerlaw4fglspectralmodel attribute)": [[272, "gammapy.modeling.models.SuperExpCutoffPowerLaw4FGLSpectralModel.tag", false]], "tag (gammapy.modeling.models.templatendspatialmodel attribute)": [[274, "gammapy.modeling.models.TemplateNDSpatialModel.tag", false]], "tag (gammapy.modeling.models.templatendspectralmodel attribute)": [[275, "gammapy.modeling.models.TemplateNDSpectralModel.tag", false]], "tag (gammapy.modeling.models.templatenpredmodel attribute)": [[276, "gammapy.modeling.models.TemplateNPredModel.tag", false]], "tag (gammapy.modeling.models.templatephasecurvetemporalmodel attribute)": [[277, "gammapy.modeling.models.TemplatePhaseCurveTemporalModel.tag", false]], "tag (gammapy.modeling.models.templatespatialmodel attribute)": [[278, "gammapy.modeling.models.TemplateSpatialModel.tag", false]], "tag (gammapy.modeling.models.templatespectralmodel attribute)": [[279, "gammapy.modeling.models.TemplateSpectralModel.tag", false]], "tag (gammapy.modeling.models.uniformprior attribute)": [[281, "gammapy.modeling.models.UniformPrior.tag", false]], "target_radec (gammapy.data.observation attribute)": [[88, "gammapy.data.Observation.target_radec", false]], "tau (gammapy.astro.source.simplepulsar attribute)": [[54, "gammapy.astro.source.SimplePulsar.tau", false]], "tau() (gammapy.astro.source.pulsar method)": [[51, "gammapy.astro.source.Pulsar.tau", false]], "templatendspatialmodel (class in gammapy.modeling.models)": [[274, "gammapy.modeling.models.TemplateNDSpatialModel", false]], "templatendspectralmodel (class in gammapy.modeling.models)": [[275, "gammapy.modeling.models.TemplateNDSpectralModel", false]], "templatenpredmodel (class in gammapy.modeling.models)": [[276, "gammapy.modeling.models.TemplateNPredModel", false]], "templatephasecurvetemporalmodel (class in gammapy.modeling.models)": [[277, "gammapy.modeling.models.TemplatePhaseCurveTemporalModel", false]], "templatespatialmodel (class in gammapy.modeling.models)": [[278, "gammapy.modeling.models.TemplateSpatialModel", false]], "templatespectralmodel (class in gammapy.modeling.models)": [[279, "gammapy.modeling.models.TemplateSpectralModel", false]], "temporal_model (gammapy.modeling.models.skymodel attribute)": [[266, "gammapy.modeling.models.SkyModel.temporal_model", false]], "temporal_model_registry (in module gammapy.modeling.models)": [[273, "gammapy.modeling.models.TEMPORAL_MODEL_REGISTRY", false]], "temporalmodel (class in gammapy.modeling.models)": [[280, "gammapy.modeling.models.TemporalModel", false]], "thermal_relic_cross_section (gammapy.astro.darkmatter.darkmatterannihilationspectralmodel attribute)": [[19, "gammapy.astro.darkmatter.DarkMatterAnnihilationSpectralModel.THERMAL_RELIC_CROSS_SECTION", false]], "theta (gammapy.maps.mapcoord attribute)": [[201, "gammapy.maps.MapCoord.theta", false]], "theta() (gammapy.astro.population.faucherspiral method)": [[33, "gammapy.astro.population.FaucherSpiral.theta", false]], "theta() (gammapy.astro.population.logspiral method)": [[34, "gammapy.astro.population.LogSpiral.theta", false]], "theta() (gammapy.astro.population.valleespiral method)": [[38, "gammapy.astro.population.ValleeSpiral.theta", false]], "theta_0 (gammapy.astro.population.faucherspiral attribute)": [[33, "gammapy.astro.population.FaucherSpiral.theta_0", false]], "theta_0 (gammapy.astro.population.valleespiral attribute)": [[38, "gammapy.astro.population.ValleeSpiral.theta_0", false]], "tied (gammapy.astro.population.casebattacharya1998 attribute)": [[28, "gammapy.astro.population.CaseBattacharya1998.tied", false]], "tied (gammapy.astro.population.exponential attribute)": [[29, "gammapy.astro.population.Exponential.tied", false]], "tied (gammapy.astro.population.faucherkaspi2006 attribute)": [[30, "gammapy.astro.population.FaucherKaspi2006.tied", false]], "tied (gammapy.astro.population.faucherkaspi2006velocitybimodal attribute)": [[31, "gammapy.astro.population.FaucherKaspi2006VelocityBimodal.tied", false]], "tied (gammapy.astro.population.faucherkaspi2006velocitymaxwellian attribute)": [[32, "gammapy.astro.population.FaucherKaspi2006VelocityMaxwellian.tied", false]], "tied (gammapy.astro.population.lorimer2006 attribute)": [[35, "gammapy.astro.population.Lorimer2006.tied", false]], "tied (gammapy.astro.population.paczynski1990 attribute)": [[36, "gammapy.astro.population.Paczynski1990.tied", false]], "tied (gammapy.astro.population.paczynski1990velocity attribute)": [[37, "gammapy.astro.population.Paczynski1990Velocity.tied", false]], "tied (gammapy.astro.population.yusifovkucuk2004 attribute)": [[39, "gammapy.astro.population.YusifovKucuk2004.tied", false]], "tied (gammapy.astro.population.yusifovkucuk2004b attribute)": [[40, "gammapy.astro.population.YusifovKucuk2004B.tied", false]], "tilt (gammapy.modeling.models.powerlawnormspectralmodel attribute)": [[256, "gammapy.modeling.models.PowerLawNormSpectralModel.tilt", false]], "time (gammapy.data.eventlist attribute)": [[83, "gammapy.data.EventList.time", false]], "time (gammapy.data.pointinginfo attribute)": [[94, "gammapy.data.PointingInfo.time", false]], "time_bounds (gammapy.maps.timemapaxis attribute)": [[205, "gammapy.maps.TimeMapAxis.time_bounds", false]], "time_delta (gammapy.data.gti attribute)": [[86, "gammapy.data.GTI.time_delta", false]], "time_delta (gammapy.maps.timemapaxis attribute)": [[205, "gammapy.maps.TimeMapAxis.time_delta", false]], "time_edges (gammapy.maps.timemapaxis attribute)": [[205, "gammapy.maps.TimeMapAxis.time_edges", false]], "time_format (gammapy.maps.timemapaxis attribute)": [[205, "gammapy.maps.TimeMapAxis.time_format", false]], "time_intervals (gammapy.data.gti attribute)": [[86, "gammapy.data.GTI.time_intervals", false]], "time_max (gammapy.maps.timemapaxis attribute)": [[205, "gammapy.maps.TimeMapAxis.time_max", false]], "time_mid (gammapy.maps.timemapaxis attribute)": [[205, "gammapy.maps.TimeMapAxis.time_mid", false]], "time_min (gammapy.maps.timemapaxis attribute)": [[205, "gammapy.maps.TimeMapAxis.time_min", false]], "time_ref (gammapy.data.eventlist attribute)": [[83, "gammapy.data.EventList.time_ref", false]], "time_ref (gammapy.data.gti attribute)": [[86, "gammapy.data.GTI.time_ref", false]], "time_ref (gammapy.data.observationtable attribute)": [[91, "gammapy.data.ObservationTable.time_ref", false]], "time_ref (gammapy.data.pointinginfo attribute)": [[94, "gammapy.data.PointingInfo.time_ref", false]], "time_ref_from_dict() (in module gammapy.utils.time)": [[365, "gammapy.utils.time.time_ref_from_dict", false]], "time_ref_to_dict() (in module gammapy.utils.time)": [[366, "gammapy.utils.time.time_ref_to_dict", false]], "time_relative_to_ref() (in module gammapy.utils.time)": [[367, "gammapy.utils.time.time_relative_to_ref", false]], "time_start (gammapy.data.gti attribute)": [[86, "gammapy.data.GTI.time_start", false]], "time_start (gammapy.data.observationtable attribute)": [[91, "gammapy.data.ObservationTable.time_start", false]], "time_stop (gammapy.data.gti attribute)": [[86, "gammapy.data.GTI.time_stop", false]], "time_stop (gammapy.data.observationtable attribute)": [[91, "gammapy.data.ObservationTable.time_stop", false]], "time_sum (gammapy.data.gti attribute)": [[86, "gammapy.data.GTI.time_sum", false]], "time_sum() (gammapy.modeling.models.constanttemporalmodel static method)": [[225, "gammapy.modeling.models.ConstantTemporalModel.time_sum", false]], "time_sum() (gammapy.modeling.models.expdecaytemporalmodel static method)": [[233, "gammapy.modeling.models.ExpDecayTemporalModel.time_sum", false]], "time_sum() (gammapy.modeling.models.gaussiantemporalmodel static method)": [[238, "gammapy.modeling.models.GaussianTemporalModel.time_sum", false]], "time_sum() (gammapy.modeling.models.generalizedgaussiantemporalmodel static method)": [[240, "gammapy.modeling.models.GeneralizedGaussianTemporalModel.time_sum", false]], "time_sum() (gammapy.modeling.models.lightcurvetemplatetemporalmodel static method)": [[241, "gammapy.modeling.models.LightCurveTemplateTemporalModel.time_sum", false]], "time_sum() (gammapy.modeling.models.lineartemporalmodel static method)": [[242, "gammapy.modeling.models.LinearTemporalModel.time_sum", false]], "time_sum() (gammapy.modeling.models.powerlawtemporalmodel static method)": [[258, "gammapy.modeling.models.PowerLawTemporalModel.time_sum", false]], "time_sum() (gammapy.modeling.models.sinetemporalmodel static method)": [[265, "gammapy.modeling.models.SineTemporalModel.time_sum", false]], "time_sum() (gammapy.modeling.models.templatephasecurvetemporalmodel static method)": [[277, "gammapy.modeling.models.TemplatePhaseCurveTemporalModel.time_sum", false]], "time_sum() (gammapy.modeling.models.temporalmodel static method)": [[280, "gammapy.modeling.models.TemporalModel.time_sum", false]], "timemapaxis (class in gammapy.maps)": [[205, "gammapy.maps.TimeMapAxis", false]], "timmerkonig_lightcurve_simulator() (in module gammapy.stats)": [[292, "gammapy.stats.TimmerKonig_lightcurve_simulator", false]], "tmid (gammapy.data.observation attribute)": [[88, "gammapy.data.Observation.tmid", false]], "to_2d() (gammapy.irf.background3d method)": [[150, "gammapy.irf.Background3D.to_2d", false]], "to_3d() (gammapy.irf.background2d method)": [[149, "gammapy.irf.Background2D.to_3d", false]], "to_bands_hdu() (gammapy.maps.geom method)": [[193, "gammapy.maps.Geom.to_bands_hdu", false]], "to_bands_hdu() (gammapy.maps.hpxgeom method)": [[194, "gammapy.maps.HpxGeom.to_bands_hdu", false]], "to_bands_hdu() (gammapy.maps.regiongeom method)": [[203, "gammapy.maps.RegionGeom.to_bands_hdu", false]], "to_bands_hdu() (gammapy.maps.wcsgeom method)": [[206, "gammapy.maps.WcsGeom.to_bands_hdu", false]], "to_binsz() (gammapy.maps.hpxgeom method)": [[194, "gammapy.maps.HpxGeom.to_binsz", false]], "to_binsz() (gammapy.maps.regiongeom method)": [[203, "gammapy.maps.RegionGeom.to_binsz", false]], "to_binsz() (gammapy.maps.wcsgeom method)": [[206, "gammapy.maps.WcsGeom.to_binsz", false]], "to_binsz_wcs() (gammapy.maps.regiongeom method)": [[203, "gammapy.maps.RegionGeom.to_binsz_wcs", false]], "to_contiguous() (gammapy.maps.timemapaxis method)": [[205, "gammapy.maps.TimeMapAxis.to_contiguous", false]], "to_counts_hdulist() (gammapy.datasets.ogipdatasetwriter method)": [[108, "gammapy.datasets.OGIPDatasetWriter.to_counts_hdulist", false]], "to_cube() (gammapy.maps.geom method)": [[193, "gammapy.maps.Geom.to_cube", false]], "to_cube() (gammapy.maps.hpxgeom method)": [[194, "gammapy.maps.HpxGeom.to_cube", false]], "to_cube() (gammapy.maps.hpxmap method)": [[195, "gammapy.maps.HpxMap.to_cube", false]], "to_cube() (gammapy.maps.hpxndmap method)": [[196, "gammapy.maps.HpxNDMap.to_cube", false]], "to_cube() (gammapy.maps.map method)": [[198, "gammapy.maps.Map.to_cube", false]], "to_cube() (gammapy.maps.regiongeom method)": [[203, "gammapy.maps.RegionGeom.to_cube", false]], "to_cube() (gammapy.maps.regionndmap method)": [[204, "gammapy.maps.RegionNDMap.to_cube", false]], "to_cube() (gammapy.maps.wcsgeom method)": [[206, "gammapy.maps.WcsGeom.to_cube", false]], "to_cube() (gammapy.maps.wcsmap method)": [[207, "gammapy.maps.WcsMap.to_cube", false]], "to_cube() (gammapy.maps.wcsndmap method)": [[208, "gammapy.maps.WcsNDMap.to_cube", false]], "to_dict() (gammapy.astro.darkmatter.darkmatterannihilationspectralmodel method)": [[19, "gammapy.astro.darkmatter.DarkMatterAnnihilationSpectralModel.to_dict", false]], "to_dict() (gammapy.astro.darkmatter.darkmatterdecayspectralmodel method)": [[20, "gammapy.astro.darkmatter.DarkMatterDecaySpectralModel.to_dict", false]], "to_dict() (gammapy.astro.darkmatter.primaryflux method)": [[26, "gammapy.astro.darkmatter.PrimaryFlux.to_dict", false]], "to_dict() (gammapy.datasets.dataset method)": [[99, "gammapy.datasets.Dataset.to_dict", false]], "to_dict() (gammapy.datasets.fluxpointsdataset method)": [[102, "gammapy.datasets.FluxPointsDataset.to_dict", false]], "to_dict() (gammapy.datasets.mapdataset method)": [[103, "gammapy.datasets.MapDataset.to_dict", false]], "to_dict() (gammapy.datasets.mapdatasetonoff method)": [[106, "gammapy.datasets.MapDatasetOnOff.to_dict", false]], "to_dict() (gammapy.datasets.spectrumdataset method)": [[110, "gammapy.datasets.SpectrumDataset.to_dict", false]], "to_dict() (gammapy.datasets.spectrumdatasetonoff method)": [[111, "gammapy.datasets.SpectrumDatasetOnOff.to_dict", false]], "to_dict() (gammapy.modeling.covarianceresult method)": [[212, "gammapy.modeling.CovarianceResult.to_dict", false]], "to_dict() (gammapy.modeling.models.brokenpowerlawspectralmodel method)": [[220, "gammapy.modeling.models.BrokenPowerLawSpectralModel.to_dict", false]], "to_dict() (gammapy.modeling.models.compoundspectralmodel method)": [[221, "gammapy.modeling.models.CompoundSpectralModel.to_dict", false]], "to_dict() (gammapy.modeling.models.constantfluxspatialmodel method)": [[222, "gammapy.modeling.models.ConstantFluxSpatialModel.to_dict", false]], "to_dict() (gammapy.modeling.models.constantspatialmodel method)": [[223, "gammapy.modeling.models.ConstantSpatialModel.to_dict", false]], "to_dict() (gammapy.modeling.models.constantspectralmodel method)": [[224, "gammapy.modeling.models.ConstantSpectralModel.to_dict", false]], "to_dict() (gammapy.modeling.models.constanttemporalmodel method)": [[225, "gammapy.modeling.models.ConstantTemporalModel.to_dict", false]], "to_dict() (gammapy.modeling.models.datasetmodels method)": [[226, "gammapy.modeling.models.DatasetModels.to_dict", false]], "to_dict() (gammapy.modeling.models.diskspatialmodel method)": [[227, "gammapy.modeling.models.DiskSpatialModel.to_dict", false]], "to_dict() (gammapy.modeling.models.eblabsorptionnormspectralmodel method)": [[228, "gammapy.modeling.models.EBLAbsorptionNormSpectralModel.to_dict", false]], "to_dict() (gammapy.modeling.models.expcutoffpowerlaw3fglspectralmodel method)": [[230, "gammapy.modeling.models.ExpCutoffPowerLaw3FGLSpectralModel.to_dict", false]], "to_dict() (gammapy.modeling.models.expcutoffpowerlawnormspectralmodel method)": [[231, "gammapy.modeling.models.ExpCutoffPowerLawNormSpectralModel.to_dict", false]], "to_dict() (gammapy.modeling.models.expcutoffpowerlawspectralmodel method)": [[232, "gammapy.modeling.models.ExpCutoffPowerLawSpectralModel.to_dict", false]], "to_dict() (gammapy.modeling.models.expdecaytemporalmodel method)": [[233, "gammapy.modeling.models.ExpDecayTemporalModel.to_dict", false]], "to_dict() (gammapy.modeling.models.fovbackgroundmodel method)": [[234, "gammapy.modeling.models.FoVBackgroundModel.to_dict", false]], "to_dict() (gammapy.modeling.models.gaussianprior method)": [[235, "gammapy.modeling.models.GaussianPrior.to_dict", false]], "to_dict() (gammapy.modeling.models.gaussianspatialmodel method)": [[236, "gammapy.modeling.models.GaussianSpatialModel.to_dict", false]], "to_dict() (gammapy.modeling.models.gaussianspectralmodel method)": [[237, "gammapy.modeling.models.GaussianSpectralModel.to_dict", false]], "to_dict() (gammapy.modeling.models.gaussiantemporalmodel method)": [[238, "gammapy.modeling.models.GaussianTemporalModel.to_dict", false]], "to_dict() (gammapy.modeling.models.generalizedgaussianspatialmodel method)": [[239, "gammapy.modeling.models.GeneralizedGaussianSpatialModel.to_dict", false]], "to_dict() (gammapy.modeling.models.generalizedgaussiantemporalmodel method)": [[240, "gammapy.modeling.models.GeneralizedGaussianTemporalModel.to_dict", false]], "to_dict() (gammapy.modeling.models.lightcurvetemplatetemporalmodel method)": [[241, "gammapy.modeling.models.LightCurveTemplateTemporalModel.to_dict", false]], "to_dict() (gammapy.modeling.models.lineartemporalmodel method)": [[242, "gammapy.modeling.models.LinearTemporalModel.to_dict", false]], "to_dict() (gammapy.modeling.models.logparabolanormspectralmodel method)": [[243, "gammapy.modeling.models.LogParabolaNormSpectralModel.to_dict", false]], "to_dict() (gammapy.modeling.models.logparabolaspectralmodel method)": [[244, "gammapy.modeling.models.LogParabolaSpectralModel.to_dict", false]], "to_dict() (gammapy.modeling.models.loguniformprior method)": [[245, "gammapy.modeling.models.LogUniformPrior.to_dict", false]], "to_dict() (gammapy.modeling.models.meyercrabspectralmodel method)": [[247, "gammapy.modeling.models.MeyerCrabSpectralModel.to_dict", false]], "to_dict() (gammapy.modeling.models.modelbase method)": [[249, "gammapy.modeling.models.ModelBase.to_dict", false]], "to_dict() (gammapy.modeling.models.models method)": [[250, "gammapy.modeling.models.Models.to_dict", false]], "to_dict() (gammapy.modeling.models.naimaspectralmodel method)": [[251, "gammapy.modeling.models.NaimaSpectralModel.to_dict", false]], "to_dict() (gammapy.modeling.models.piecewisenormspatialmodel method)": [[252, "gammapy.modeling.models.PiecewiseNormSpatialModel.to_dict", false]], "to_dict() (gammapy.modeling.models.piecewisenormspectralmodel method)": [[253, "gammapy.modeling.models.PiecewiseNormSpectralModel.to_dict", false]], "to_dict() (gammapy.modeling.models.pointspatialmodel method)": [[254, "gammapy.modeling.models.PointSpatialModel.to_dict", false]], "to_dict() (gammapy.modeling.models.powerlaw2spectralmodel method)": [[255, "gammapy.modeling.models.PowerLaw2SpectralModel.to_dict", false]], "to_dict() (gammapy.modeling.models.powerlawnormspectralmodel method)": [[256, "gammapy.modeling.models.PowerLawNormSpectralModel.to_dict", false]], "to_dict() (gammapy.modeling.models.powerlawspectralmodel method)": [[257, "gammapy.modeling.models.PowerLawSpectralModel.to_dict", false]], "to_dict() (gammapy.modeling.models.powerlawtemporalmodel method)": [[258, "gammapy.modeling.models.PowerLawTemporalModel.to_dict", false]], "to_dict() (gammapy.modeling.models.prior method)": [[259, "gammapy.modeling.models.Prior.to_dict", false]], "to_dict() (gammapy.modeling.models.scalespectralmodel method)": [[262, "gammapy.modeling.models.ScaleSpectralModel.to_dict", false]], "to_dict() (gammapy.modeling.models.shell2spatialmodel method)": [[263, "gammapy.modeling.models.Shell2SpatialModel.to_dict", false]], "to_dict() (gammapy.modeling.models.shellspatialmodel method)": [[264, "gammapy.modeling.models.ShellSpatialModel.to_dict", false]], "to_dict() (gammapy.modeling.models.sinetemporalmodel method)": [[265, "gammapy.modeling.models.SineTemporalModel.to_dict", false]], "to_dict() (gammapy.modeling.models.skymodel method)": [[266, "gammapy.modeling.models.SkyModel.to_dict", false]], "to_dict() (gammapy.modeling.models.smoothbrokenpowerlawspectralmodel method)": [[267, "gammapy.modeling.models.SmoothBrokenPowerLawSpectralModel.to_dict", false]], "to_dict() (gammapy.modeling.models.spatialmodel method)": [[268, "gammapy.modeling.models.SpatialModel.to_dict", false]], "to_dict() (gammapy.modeling.models.spectralmodel method)": [[269, "gammapy.modeling.models.SpectralModel.to_dict", false]], "to_dict() (gammapy.modeling.models.superexpcutoffpowerlaw3fglspectralmodel method)": [[270, "gammapy.modeling.models.SuperExpCutoffPowerLaw3FGLSpectralModel.to_dict", false]], "to_dict() (gammapy.modeling.models.superexpcutoffpowerlaw4fgldr3spectralmodel method)": [[271, "gammapy.modeling.models.SuperExpCutoffPowerLaw4FGLDR3SpectralModel.to_dict", false]], "to_dict() (gammapy.modeling.models.superexpcutoffpowerlaw4fglspectralmodel method)": [[272, "gammapy.modeling.models.SuperExpCutoffPowerLaw4FGLSpectralModel.to_dict", false]], "to_dict() (gammapy.modeling.models.templatendspatialmodel method)": [[274, "gammapy.modeling.models.TemplateNDSpatialModel.to_dict", false]], "to_dict() (gammapy.modeling.models.templatendspectralmodel method)": [[275, "gammapy.modeling.models.TemplateNDSpectralModel.to_dict", false]], "to_dict() (gammapy.modeling.models.templatenpredmodel method)": [[276, "gammapy.modeling.models.TemplateNPredModel.to_dict", false]], "to_dict() (gammapy.modeling.models.templatephasecurvetemporalmodel method)": [[277, "gammapy.modeling.models.TemplatePhaseCurveTemporalModel.to_dict", false]], "to_dict() (gammapy.modeling.models.templatespatialmodel method)": [[278, "gammapy.modeling.models.TemplateSpatialModel.to_dict", false]], "to_dict() (gammapy.modeling.models.templatespectralmodel method)": [[279, "gammapy.modeling.models.TemplateSpectralModel.to_dict", false]], "to_dict() (gammapy.modeling.models.temporalmodel method)": [[280, "gammapy.modeling.models.TemporalModel.to_dict", false]], "to_dict() (gammapy.modeling.models.uniformprior method)": [[281, "gammapy.modeling.models.UniformPrior.to_dict", false]], "to_dict() (gammapy.modeling.optimizeresult method)": [[215, "gammapy.modeling.OptimizeResult.to_dict", false]], "to_dict() (gammapy.modeling.parameter method)": [[216, "gammapy.modeling.Parameter.to_dict", false]], "to_dict() (gammapy.modeling.parameters method)": [[217, "gammapy.modeling.Parameters.to_dict", false]], "to_dict() (gammapy.modeling.priorparameter method)": [[218, "gammapy.modeling.PriorParameter.to_dict", false]], "to_dict() (gammapy.modeling.priorparameters method)": [[219, "gammapy.modeling.PriorParameters.to_dict", false]], "to_edisp_kernel() (gammapy.irf.energydispersion2d method)": [[157, "gammapy.irf.EnergyDispersion2D.to_edisp_kernel", false]], "to_edisp_kernel_map() (gammapy.irf.edispmap method)": [[154, "gammapy.irf.EDispMap.to_edisp_kernel_map", false]], "to_even_npix() (gammapy.maps.wcsgeom method)": [[206, "gammapy.maps.WcsGeom.to_even_npix", false]], "to_fits_header() (gammapy.data.fixedpointinginfo method)": [[85, "gammapy.data.FixedPointingInfo.to_fits_header", false]], "to_frame() (gammapy.maps.mapcoord method)": [[201, "gammapy.maps.MapCoord.to_frame", false]], "to_gti() (gammapy.maps.timemapaxis method)": [[205, "gammapy.maps.TimeMapAxis.to_gti", false]], "to_hdu() (gammapy.maps.hpxmap method)": [[195, "gammapy.maps.HpxMap.to_hdu", false]], "to_hdu() (gammapy.maps.hpxndmap method)": [[196, "gammapy.maps.HpxNDMap.to_hdu", false]], "to_hdu() (gammapy.maps.wcsmap method)": [[207, "gammapy.maps.WcsMap.to_hdu", false]], "to_hdu() (gammapy.maps.wcsndmap method)": [[208, "gammapy.maps.WcsNDMap.to_hdu", false]], "to_hdulist() (gammapy.datasets.mapdataset method)": [[103, "gammapy.datasets.MapDataset.to_hdulist", false]], "to_hdulist() (gammapy.datasets.mapdatasetonoff method)": [[106, "gammapy.datasets.MapDatasetOnOff.to_hdulist", false]], "to_hdulist() (gammapy.datasets.spectrumdataset method)": [[110, "gammapy.datasets.SpectrumDataset.to_hdulist", false]], "to_hdulist() (gammapy.datasets.spectrumdatasetonoff method)": [[111, "gammapy.datasets.SpectrumDatasetOnOff.to_hdulist", false]], "to_hdulist() (gammapy.estimators.fluxmaps method)": [[125, "gammapy.estimators.FluxMaps.to_hdulist", false]], "to_hdulist() (gammapy.estimators.fluxpoints method)": [[127, "gammapy.estimators.FluxPoints.to_hdulist", false]], "to_hdulist() (gammapy.irf.background2d method)": [[149, "gammapy.irf.Background2D.to_hdulist", false]], "to_hdulist() (gammapy.irf.background3d method)": [[150, "gammapy.irf.Background3D.to_hdulist", false]], "to_hdulist() (gammapy.irf.backgroundirf method)": [[151, "gammapy.irf.BackgroundIRF.to_hdulist", false]], "to_hdulist() (gammapy.irf.edispkernel method)": [[152, "gammapy.irf.EDispKernel.to_hdulist", false]], "to_hdulist() (gammapy.irf.edispkernelmap method)": [[153, "gammapy.irf.EDispKernelMap.to_hdulist", false]], "to_hdulist() (gammapy.irf.edispmap method)": [[154, "gammapy.irf.EDispMap.to_hdulist", false]], "to_hdulist() (gammapy.irf.effectiveareatable2d method)": [[155, "gammapy.irf.EffectiveAreaTable2D.to_hdulist", false]], "to_hdulist() (gammapy.irf.energydependentmultigausspsf method)": [[156, "gammapy.irf.EnergyDependentMultiGaussPSF.to_hdulist", false]], "to_hdulist() (gammapy.irf.energydispersion2d method)": [[157, "gammapy.irf.EnergyDispersion2D.to_hdulist", false]], "to_hdulist() (gammapy.irf.irf method)": [[159, "gammapy.irf.IRF.to_hdulist", false]], "to_hdulist() (gammapy.irf.irfmap method)": [[160, "gammapy.irf.IRFMap.to_hdulist", false]], "to_hdulist() (gammapy.irf.parametricpsf method)": [[166, "gammapy.irf.ParametricPSF.to_hdulist", false]], "to_hdulist() (gammapy.irf.psf3d method)": [[162, "gammapy.irf.PSF3D.to_hdulist", false]], "to_hdulist() (gammapy.irf.psfking method)": [[164, "gammapy.irf.PSFKing.to_hdulist", false]], "to_hdulist() (gammapy.irf.psfmap method)": [[165, "gammapy.irf.PSFMap.to_hdulist", false]], "to_hdulist() (gammapy.irf.radmax2d method)": [[167, "gammapy.irf.RadMax2D.to_hdulist", false]], "to_hdulist() (gammapy.irf.recopsfmap method)": [[168, "gammapy.irf.RecoPSFMap.to_hdulist", false]], "to_hdulist() (gammapy.maps.hpxmap method)": [[195, "gammapy.maps.HpxMap.to_hdulist", false]], "to_hdulist() (gammapy.maps.hpxndmap method)": [[196, "gammapy.maps.HpxNDMap.to_hdulist", false]], "to_hdulist() (gammapy.maps.maps method)": [[202, "gammapy.maps.Maps.to_hdulist", false]], "to_hdulist() (gammapy.maps.regiongeom method)": [[203, "gammapy.maps.RegionGeom.to_hdulist", false]], "to_hdulist() (gammapy.maps.regionndmap method)": [[204, "gammapy.maps.RegionNDMap.to_hdulist", false]], "to_hdulist() (gammapy.maps.wcsmap method)": [[207, "gammapy.maps.WcsMap.to_hdulist", false]], "to_hdulist() (gammapy.maps.wcsndmap method)": [[208, "gammapy.maps.WcsNDMap.to_hdulist", false]], "to_header() (gammapy.data.eventlistmetadata method)": [[84, "gammapy.data.EventListMetaData.to_header", false]], "to_header() (gammapy.data.observationmetadata method)": [[90, "gammapy.data.ObservationMetaData.to_header", false]], "to_header() (gammapy.datasets.mapdatasetmetadata method)": [[105, "gammapy.datasets.MapDatasetMetaData.to_header", false]], "to_header() (gammapy.estimators.fluxmetadata method)": [[126, "gammapy.estimators.FluxMetaData.to_header", false]], "to_header() (gammapy.maps.hpxgeom method)": [[194, "gammapy.maps.HpxGeom.to_header", false]], "to_header() (gammapy.maps.labelmapaxis method)": [[197, "gammapy.maps.LabelMapAxis.to_header", false]], "to_header() (gammapy.maps.mapaxes method)": [[199, "gammapy.maps.MapAxes.to_header", false]], "to_header() (gammapy.maps.mapaxis method)": [[200, "gammapy.maps.MapAxis.to_header", false]], "to_header() (gammapy.maps.timemapaxis method)": [[205, "gammapy.maps.TimeMapAxis.to_header", false]], "to_header() (gammapy.maps.wcsgeom method)": [[206, "gammapy.maps.WcsGeom.to_header", false]], "to_image() (gammapy.datasets.mapdataset method)": [[103, "gammapy.datasets.MapDataset.to_image", false]], "to_image() (gammapy.datasets.mapdatasetonoff method)": [[106, "gammapy.datasets.MapDatasetOnOff.to_image", false]], "to_image() (gammapy.datasets.spectrumdataset method)": [[110, "gammapy.datasets.SpectrumDataset.to_image", false]], "to_image() (gammapy.datasets.spectrumdatasetonoff method)": [[111, "gammapy.datasets.SpectrumDatasetOnOff.to_image", false]], "to_image() (gammapy.irf.edispkernel method)": [[152, "gammapy.irf.EDispKernel.to_image", false]], "to_image() (gammapy.irf.edispkernelmap method)": [[153, "gammapy.irf.EDispKernelMap.to_image", false]], "to_image() (gammapy.irf.psfkernel method)": [[163, "gammapy.irf.PSFKernel.to_image", false]], "to_image() (gammapy.irf.psfmap method)": [[165, "gammapy.irf.PSFMap.to_image", false]], "to_image() (gammapy.irf.recopsfmap method)": [[168, "gammapy.irf.RecoPSFMap.to_image", false]], "to_image() (gammapy.maps.geom method)": [[193, "gammapy.maps.Geom.to_image", false]], "to_image() (gammapy.maps.hpxgeom method)": [[194, "gammapy.maps.HpxGeom.to_image", false]], "to_image() (gammapy.maps.regiongeom method)": [[203, "gammapy.maps.RegionGeom.to_image", false]], "to_image() (gammapy.maps.wcsgeom method)": [[206, "gammapy.maps.WcsGeom.to_image", false]], "to_map_dataset() (gammapy.datasets.mapdatasetonoff method)": [[106, "gammapy.datasets.MapDatasetOnOff.to_map_dataset", false]], "to_map_dataset() (gammapy.datasets.spectrumdatasetonoff method)": [[111, "gammapy.datasets.SpectrumDatasetOnOff.to_map_dataset", false]], "to_maps() (gammapy.estimators.fluxmaps method)": [[125, "gammapy.estimators.FluxMaps.to_maps", false]], "to_maps() (gammapy.estimators.fluxpoints method)": [[127, "gammapy.estimators.FluxPoints.to_maps", false]], "to_masked() (gammapy.datasets.mapdataset method)": [[103, "gammapy.datasets.MapDataset.to_masked", false]], "to_masked() (gammapy.datasets.mapdatasetonoff method)": [[106, "gammapy.datasets.MapDatasetOnOff.to_masked", false]], "to_masked() (gammapy.datasets.spectrumdataset method)": [[110, "gammapy.datasets.SpectrumDataset.to_masked", false]], "to_masked() (gammapy.datasets.spectrumdatasetonoff method)": [[111, "gammapy.datasets.SpectrumDatasetOnOff.to_masked", false]], "to_models() (gammapy.catalog.sourcecatalog method)": [[56, "gammapy.catalog.SourceCatalog.to_models", false]], "to_models() (gammapy.catalog.sourcecatalog1lhaaso method)": [[57, "gammapy.catalog.SourceCatalog1LHAASO.to_models", false]], "to_models() (gammapy.catalog.sourcecatalog2fhl method)": [[58, "gammapy.catalog.SourceCatalog2FHL.to_models", false]], "to_models() (gammapy.catalog.sourcecatalog2hwc method)": [[59, "gammapy.catalog.SourceCatalog2HWC.to_models", false]], "to_models() (gammapy.catalog.sourcecatalog2pc method)": [[60, "gammapy.catalog.SourceCatalog2PC.to_models", false]], "to_models() (gammapy.catalog.sourcecatalog3fgl method)": [[61, "gammapy.catalog.SourceCatalog3FGL.to_models", false]], "to_models() (gammapy.catalog.sourcecatalog3fhl method)": [[62, "gammapy.catalog.SourceCatalog3FHL.to_models", false]], "to_models() (gammapy.catalog.sourcecatalog3hwc method)": [[63, "gammapy.catalog.SourceCatalog3HWC.to_models", false]], "to_models() (gammapy.catalog.sourcecatalog3pc method)": [[64, "gammapy.catalog.SourceCatalog3PC.to_models", false]], "to_models() (gammapy.catalog.sourcecatalog4fgl method)": [[65, "gammapy.catalog.SourceCatalog4FGL.to_models", false]], "to_models() (gammapy.catalog.sourcecataloggammacat method)": [[66, "gammapy.catalog.SourceCatalogGammaCat.to_models", false]], "to_models() (gammapy.catalog.sourcecataloghgps method)": [[67, "gammapy.catalog.SourceCatalogHGPS.to_models", false]], "to_node_type() (gammapy.maps.mapaxis method)": [[200, "gammapy.maps.MapAxis.to_node_type", false]], "to_nside() (gammapy.maps.hpxgeom method)": [[194, "gammapy.maps.HpxGeom.to_nside", false]], "to_nside() (gammapy.maps.hpxndmap method)": [[196, "gammapy.maps.HpxNDMap.to_nside", false]], "to_odd_npix() (gammapy.maps.wcsgeom method)": [[206, "gammapy.maps.WcsGeom.to_odd_npix", false]], "to_pandas() (gammapy.data.hduindextable method)": [[87, "gammapy.data.HDUIndexTable.to_pandas", false]], "to_pandas() (gammapy.data.observationtable method)": [[91, "gammapy.data.ObservationTable.to_pandas", false]], "to_parameters_table() (gammapy.modeling.models.datasetmodels method)": [[226, "gammapy.modeling.models.DatasetModels.to_parameters_table", false]], "to_parameters_table() (gammapy.modeling.models.models method)": [[250, "gammapy.modeling.models.Models.to_parameters_table", false]], "to_psf3d() (gammapy.irf.energydependentmultigausspsf method)": [[156, "gammapy.irf.EnergyDependentMultiGaussPSF.to_psf3d", false]], "to_psf3d() (gammapy.irf.parametricpsf method)": [[166, "gammapy.irf.ParametricPSF.to_psf3d", false]], "to_psf3d() (gammapy.irf.psfking method)": [[164, "gammapy.irf.PSFKing.to_psf3d", false]], "to_region() (gammapy.modeling.models.constantfluxspatialmodel method)": [[222, "gammapy.modeling.models.ConstantFluxSpatialModel.to_region", false]], "to_region() (gammapy.modeling.models.constantspatialmodel method)": [[223, "gammapy.modeling.models.ConstantSpatialModel.to_region", false]], "to_region() (gammapy.modeling.models.diskspatialmodel method)": [[227, "gammapy.modeling.models.DiskSpatialModel.to_region", false]], "to_region() (gammapy.modeling.models.gaussianspatialmodel method)": [[236, "gammapy.modeling.models.GaussianSpatialModel.to_region", false]], "to_region() (gammapy.modeling.models.generalizedgaussianspatialmodel method)": [[239, "gammapy.modeling.models.GeneralizedGaussianSpatialModel.to_region", false]], "to_region() (gammapy.modeling.models.pointspatialmodel method)": [[254, "gammapy.modeling.models.PointSpatialModel.to_region", false]], "to_region() (gammapy.modeling.models.shell2spatialmodel method)": [[263, "gammapy.modeling.models.Shell2SpatialModel.to_region", false]], "to_region() (gammapy.modeling.models.shellspatialmodel method)": [[264, "gammapy.modeling.models.ShellSpatialModel.to_region", false]], "to_region() (gammapy.modeling.models.templatespatialmodel method)": [[278, "gammapy.modeling.models.TemplateSpatialModel.to_region", false]], "to_region_map_dataset() (gammapy.datasets.mapdataset method)": [[103, "gammapy.datasets.MapDataset.to_region_map_dataset", false]], "to_region_map_dataset() (gammapy.datasets.mapdatasetonoff method)": [[106, "gammapy.datasets.MapDatasetOnOff.to_region_map_dataset", false]], "to_region_map_dataset() (gammapy.datasets.spectrumdataset method)": [[110, "gammapy.datasets.SpectrumDataset.to_region_map_dataset", false]], "to_region_map_dataset() (gammapy.datasets.spectrumdatasetonoff method)": [[111, "gammapy.datasets.SpectrumDatasetOnOff.to_region_map_dataset", false]], "to_region_nd_map() (gammapy.irf.edispkernelmap method)": [[153, "gammapy.irf.EDispKernelMap.to_region_nd_map", false]], "to_region_nd_map() (gammapy.irf.edispmap method)": [[154, "gammapy.irf.EDispMap.to_region_nd_map", false]], "to_region_nd_map() (gammapy.irf.irfmap method)": [[160, "gammapy.irf.IRFMap.to_region_nd_map", false]], "to_region_nd_map() (gammapy.irf.psfmap method)": [[165, "gammapy.irf.PSFMap.to_region_nd_map", false]], "to_region_nd_map() (gammapy.irf.recopsfmap method)": [[168, "gammapy.irf.RecoPSFMap.to_region_nd_map", false]], "to_region_nd_map() (gammapy.maps.hpxndmap method)": [[196, "gammapy.maps.HpxNDMap.to_region_nd_map", false]], "to_region_nd_map() (gammapy.maps.regionndmap method)": [[204, "gammapy.maps.RegionNDMap.to_region_nd_map", false]], "to_region_nd_map() (gammapy.maps.wcsndmap method)": [[208, "gammapy.maps.WcsNDMap.to_region_nd_map", false]], "to_region_nd_map_histogram() (gammapy.maps.wcsndmap method)": [[208, "gammapy.maps.WcsNDMap.to_region_nd_map_histogram", false]], "to_regions() (gammapy.modeling.models.datasetmodels method)": [[226, "gammapy.modeling.models.DatasetModels.to_regions", false]], "to_regions() (gammapy.modeling.models.models method)": [[250, "gammapy.modeling.models.Models.to_regions", false]], "to_spectrum_dataset() (gammapy.datasets.mapdataset method)": [[103, "gammapy.datasets.MapDataset.to_spectrum_dataset", false]], "to_spectrum_dataset() (gammapy.datasets.mapdatasetonoff method)": [[106, "gammapy.datasets.MapDatasetOnOff.to_spectrum_dataset", false]], "to_spectrum_dataset() (gammapy.datasets.spectrumdataset method)": [[110, "gammapy.datasets.SpectrumDataset.to_spectrum_dataset", false]], "to_spectrum_dataset() (gammapy.datasets.spectrumdatasetonoff method)": [[111, "gammapy.datasets.SpectrumDatasetOnOff.to_spectrum_dataset", false]], "to_spectrum_datasets() (gammapy.datasets.datasets method)": [[100, "gammapy.datasets.Datasets.to_spectrum_datasets", false]], "to_swapped() (gammapy.maps.hpxgeom method)": [[194, "gammapy.maps.HpxGeom.to_swapped", false]], "to_swapped() (gammapy.maps.hpxmap method)": [[195, "gammapy.maps.HpxMap.to_swapped", false]], "to_swapped() (gammapy.maps.hpxndmap method)": [[196, "gammapy.maps.HpxNDMap.to_swapped", false]], "to_table() (gammapy.estimators.fluxpoints method)": [[127, "gammapy.estimators.FluxPoints.to_table", false]], "to_table() (gammapy.irf.background2d method)": [[149, "gammapy.irf.Background2D.to_table", false]], "to_table() (gammapy.irf.background3d method)": [[150, "gammapy.irf.Background3D.to_table", false]], "to_table() (gammapy.irf.backgroundirf method)": [[151, "gammapy.irf.BackgroundIRF.to_table", false]], "to_table() (gammapy.irf.edispkernel method)": [[152, "gammapy.irf.EDispKernel.to_table", false]], "to_table() (gammapy.irf.effectiveareatable2d method)": [[155, "gammapy.irf.EffectiveAreaTable2D.to_table", false]], "to_table() (gammapy.irf.energydependentmultigausspsf method)": [[156, "gammapy.irf.EnergyDependentMultiGaussPSF.to_table", false]], "to_table() (gammapy.irf.energydispersion2d method)": [[157, "gammapy.irf.EnergyDispersion2D.to_table", false]], "to_table() (gammapy.irf.irf method)": [[159, "gammapy.irf.IRF.to_table", false]], "to_table() (gammapy.irf.parametricpsf method)": [[166, "gammapy.irf.ParametricPSF.to_table", false]], "to_table() (gammapy.irf.psf3d method)": [[162, "gammapy.irf.PSF3D.to_table", false]], "to_table() (gammapy.irf.psfking method)": [[164, "gammapy.irf.PSFKing.to_table", false]], "to_table() (gammapy.irf.radmax2d method)": [[167, "gammapy.irf.RadMax2D.to_table", false]], "to_table() (gammapy.maps.mapaxes method)": [[199, "gammapy.maps.MapAxes.to_table", false]], "to_table() (gammapy.maps.mapaxis method)": [[200, "gammapy.maps.MapAxis.to_table", false]], "to_table() (gammapy.maps.regionndmap method)": [[204, "gammapy.maps.RegionNDMap.to_table", false]], "to_table() (gammapy.maps.timemapaxis method)": [[205, "gammapy.maps.TimeMapAxis.to_table", false]], "to_table() (gammapy.modeling.models.lightcurvetemplatetemporalmodel method)": [[241, "gammapy.modeling.models.LightCurveTemplateTemporalModel.to_table", false]], "to_table() (gammapy.modeling.parameters method)": [[217, "gammapy.modeling.Parameters.to_table", false]], "to_table() (gammapy.modeling.priorparameters method)": [[219, "gammapy.modeling.PriorParameters.to_table", false]], "to_table_hdu() (gammapy.data.eventlist method)": [[83, "gammapy.data.EventList.to_table_hdu", false]], "to_table_hdu() (gammapy.data.gti method)": [[86, "gammapy.data.GTI.to_table_hdu", false]], "to_table_hdu() (gammapy.irf.background2d method)": [[149, "gammapy.irf.Background2D.to_table_hdu", false]], "to_table_hdu() (gammapy.irf.background3d method)": [[150, "gammapy.irf.Background3D.to_table_hdu", false]], "to_table_hdu() (gammapy.irf.backgroundirf method)": [[151, "gammapy.irf.BackgroundIRF.to_table_hdu", false]], "to_table_hdu() (gammapy.irf.edispkernel method)": [[152, "gammapy.irf.EDispKernel.to_table_hdu", false]], "to_table_hdu() (gammapy.irf.effectiveareatable2d method)": [[155, "gammapy.irf.EffectiveAreaTable2D.to_table_hdu", false]], "to_table_hdu() (gammapy.irf.energydependentmultigausspsf method)": [[156, "gammapy.irf.EnergyDependentMultiGaussPSF.to_table_hdu", false]], "to_table_hdu() (gammapy.irf.energydispersion2d method)": [[157, "gammapy.irf.EnergyDispersion2D.to_table_hdu", false]], "to_table_hdu() (gammapy.irf.irf method)": [[159, "gammapy.irf.IRF.to_table_hdu", false]], "to_table_hdu() (gammapy.irf.parametricpsf method)": [[166, "gammapy.irf.ParametricPSF.to_table_hdu", false]], "to_table_hdu() (gammapy.irf.psf3d method)": [[162, "gammapy.irf.PSF3D.to_table_hdu", false]], "to_table_hdu() (gammapy.irf.psfking method)": [[164, "gammapy.irf.PSFKing.to_table_hdu", false]], "to_table_hdu() (gammapy.irf.radmax2d method)": [[167, "gammapy.irf.RadMax2D.to_table_hdu", false]], "to_table_hdu() (gammapy.maps.mapaxes method)": [[199, "gammapy.maps.MapAxes.to_table_hdu", false]], "to_table_hdu() (gammapy.maps.mapaxis method)": [[200, "gammapy.maps.MapAxis.to_table_hdu", false]], "to_template_sky_model() (gammapy.modeling.models.datasetmodels method)": [[226, "gammapy.modeling.models.DatasetModels.to_template_sky_model", false]], "to_template_sky_model() (gammapy.modeling.models.models method)": [[250, "gammapy.modeling.models.Models.to_template_sky_model", false]], "to_template_spectral_model() (gammapy.modeling.models.datasetmodels method)": [[226, "gammapy.modeling.models.DatasetModels.to_template_spectral_model", false]], "to_template_spectral_model() (gammapy.modeling.models.models method)": [[250, "gammapy.modeling.models.Models.to_template_spectral_model", false]], "to_unit() (gammapy.irf.background2d method)": [[149, "gammapy.irf.Background2D.to_unit", false]], "to_unit() (gammapy.irf.background3d method)": [[150, "gammapy.irf.Background3D.to_unit", false]], "to_unit() (gammapy.irf.backgroundirf method)": [[151, "gammapy.irf.BackgroundIRF.to_unit", false]], "to_unit() (gammapy.irf.edispkernel method)": [[152, "gammapy.irf.EDispKernel.to_unit", false]], "to_unit() (gammapy.irf.effectiveareatable2d method)": [[155, "gammapy.irf.EffectiveAreaTable2D.to_unit", false]], "to_unit() (gammapy.irf.energydependentmultigausspsf method)": [[156, "gammapy.irf.EnergyDependentMultiGaussPSF.to_unit", false]], "to_unit() (gammapy.irf.energydispersion2d method)": [[157, "gammapy.irf.EnergyDispersion2D.to_unit", false]], "to_unit() (gammapy.irf.irf method)": [[159, "gammapy.irf.IRF.to_unit", false]], "to_unit() (gammapy.irf.parametricpsf method)": [[166, "gammapy.irf.ParametricPSF.to_unit", false]], "to_unit() (gammapy.irf.psf3d method)": [[162, "gammapy.irf.PSF3D.to_unit", false]], "to_unit() (gammapy.irf.psfking method)": [[164, "gammapy.irf.PSFKing.to_unit", false]], "to_unit() (gammapy.irf.radmax2d method)": [[167, "gammapy.irf.RadMax2D.to_unit", false]], "to_unit() (gammapy.maps.hpxmap method)": [[195, "gammapy.maps.HpxMap.to_unit", false]], "to_unit() (gammapy.maps.hpxndmap method)": [[196, "gammapy.maps.HpxNDMap.to_unit", false]], "to_unit() (gammapy.maps.map method)": [[198, "gammapy.maps.Map.to_unit", false]], "to_unit() (gammapy.maps.regionndmap method)": [[204, "gammapy.maps.RegionNDMap.to_unit", false]], "to_unit() (gammapy.maps.wcsmap method)": [[207, "gammapy.maps.WcsMap.to_unit", false]], "to_unit() (gammapy.maps.wcsndmap method)": [[208, "gammapy.maps.WcsNDMap.to_unit", false]], "to_wcs() (gammapy.maps.hpxmap method)": [[195, "gammapy.maps.HpxMap.to_wcs", false]], "to_wcs() (gammapy.maps.hpxndmap method)": [[196, "gammapy.maps.HpxNDMap.to_wcs", false]], "to_wcs_geom() (gammapy.maps.hpxgeom method)": [[194, "gammapy.maps.HpxGeom.to_wcs_geom", false]], "to_wcs_geom() (gammapy.maps.regiongeom method)": [[203, "gammapy.maps.RegionGeom.to_wcs_geom", false]], "to_wcs_tiles() (gammapy.maps.hpxgeom method)": [[194, "gammapy.maps.HpxGeom.to_wcs_tiles", false]], "to_wcs_tiles() (gammapy.maps.hpxndmap method)": [[196, "gammapy.maps.HpxNDMap.to_wcs_tiles", false]], "to_yaml() (gammapy.analysis.analysisconfig method)": [[16, "gammapy.analysis.AnalysisConfig.to_yaml", false]], "to_yaml() (gammapy.data.eventlistmetadata method)": [[84, "gammapy.data.EventListMetaData.to_yaml", false]], "to_yaml() (gammapy.data.observationmetadata method)": [[90, "gammapy.data.ObservationMetaData.to_yaml", false]], "to_yaml() (gammapy.datasets.mapdatasetmetadata method)": [[105, "gammapy.datasets.MapDatasetMetaData.to_yaml", false]], "to_yaml() (gammapy.estimators.fluxmetadata method)": [[126, "gammapy.estimators.FluxMetaData.to_yaml", false]], "to_yaml() (gammapy.modeling.models.datasetmodels method)": [[226, "gammapy.modeling.models.DatasetModels.to_yaml", false]], "to_yaml() (gammapy.modeling.models.models method)": [[250, "gammapy.modeling.models.Models.to_yaml", false]], "to_yaml() (in module gammapy.utils.scripts)": [[351, "gammapy.utils.scripts.to_yaml", false]], "total_stat (gammapy.modeling.fitresult attribute)": [[214, "gammapy.modeling.FitResult.total_stat", false]], "total_stat (gammapy.modeling.optimizeresult attribute)": [[215, "gammapy.modeling.OptimizeResult.total_stat", false]], "trace (gammapy.modeling.fitresult attribute)": [[214, "gammapy.modeling.FitResult.trace", false]], "trace (gammapy.modeling.optimizeresult attribute)": [[215, "gammapy.modeling.OptimizeResult.trace", false]], "trapz_loglog() (in module gammapy.utils.integrate)": [[321, "gammapy.utils.integrate.trapz_loglog", false]], "ts (gammapy.estimators.fluxmaps attribute)": [[125, "gammapy.estimators.FluxMaps.ts", false]], "ts (gammapy.estimators.fluxpoints attribute)": [[127, "gammapy.estimators.FluxPoints.ts", false]], "ts (gammapy.stats.cashcountsstatistic attribute)": [[291, "gammapy.stats.CashCountsStatistic.ts", false]], "ts (gammapy.stats.wstatcountsstatistic attribute)": [[293, "gammapy.stats.WStatCountsStatistic.ts", false]], "ts_scan (gammapy.estimators.fluxmaps attribute)": [[125, "gammapy.estimators.FluxMaps.ts_scan", false]], "ts_scan (gammapy.estimators.fluxpoints attribute)": [[127, "gammapy.estimators.FluxPoints.ts_scan", false]], "tsmapestimator (class in gammapy.estimators)": [[135, "gammapy.estimators.TSMapEstimator", false]], "tstart (gammapy.data.observation attribute)": [[88, "gammapy.data.Observation.tstart", false]], "tstop (gammapy.data.observation attribute)": [[88, "gammapy.data.Observation.tstop", false]], "type (gammapy.astro.darkmatter.darkmatterannihilationspectralmodel attribute)": [[19, "gammapy.astro.darkmatter.DarkMatterAnnihilationSpectralModel.type", false]], "type (gammapy.astro.darkmatter.darkmatterdecayspectralmodel attribute)": [[20, "gammapy.astro.darkmatter.DarkMatterDecaySpectralModel.type", false]], "type (gammapy.astro.darkmatter.primaryflux attribute)": [[26, "gammapy.astro.darkmatter.PrimaryFlux.type", false]], "type (gammapy.modeling.models.brokenpowerlawspectralmodel attribute)": [[220, "gammapy.modeling.models.BrokenPowerLawSpectralModel.type", false]], "type (gammapy.modeling.models.compoundspectralmodel attribute)": [[221, "gammapy.modeling.models.CompoundSpectralModel.type", false]], "type (gammapy.modeling.models.constantfluxspatialmodel attribute)": [[222, "gammapy.modeling.models.ConstantFluxSpatialModel.type", false]], "type (gammapy.modeling.models.constantspatialmodel attribute)": [[223, "gammapy.modeling.models.ConstantSpatialModel.type", false]], "type (gammapy.modeling.models.constantspectralmodel attribute)": [[224, "gammapy.modeling.models.ConstantSpectralModel.type", false]], "type (gammapy.modeling.models.constanttemporalmodel attribute)": [[225, "gammapy.modeling.models.ConstantTemporalModel.type", false]], "type (gammapy.modeling.models.diskspatialmodel attribute)": [[227, "gammapy.modeling.models.DiskSpatialModel.type", false]], "type (gammapy.modeling.models.eblabsorptionnormspectralmodel attribute)": [[228, "gammapy.modeling.models.EBLAbsorptionNormSpectralModel.type", false]], "type (gammapy.modeling.models.expcutoffpowerlaw3fglspectralmodel attribute)": [[230, "gammapy.modeling.models.ExpCutoffPowerLaw3FGLSpectralModel.type", false]], "type (gammapy.modeling.models.expcutoffpowerlawnormspectralmodel attribute)": [[231, "gammapy.modeling.models.ExpCutoffPowerLawNormSpectralModel.type", false]], "type (gammapy.modeling.models.expcutoffpowerlawspectralmodel attribute)": [[232, "gammapy.modeling.models.ExpCutoffPowerLawSpectralModel.type", false]], "type (gammapy.modeling.models.expdecaytemporalmodel attribute)": [[233, "gammapy.modeling.models.ExpDecayTemporalModel.type", false]], "type (gammapy.modeling.models.fovbackgroundmodel attribute)": [[234, "gammapy.modeling.models.FoVBackgroundModel.type", false]], "type (gammapy.modeling.models.gaussianprior attribute)": [[235, "gammapy.modeling.models.GaussianPrior.type", false]], "type (gammapy.modeling.models.gaussianspatialmodel attribute)": [[236, "gammapy.modeling.models.GaussianSpatialModel.type", false]], "type (gammapy.modeling.models.gaussianspectralmodel attribute)": [[237, "gammapy.modeling.models.GaussianSpectralModel.type", false]], "type (gammapy.modeling.models.gaussiantemporalmodel attribute)": [[238, "gammapy.modeling.models.GaussianTemporalModel.type", false]], "type (gammapy.modeling.models.generalizedgaussianspatialmodel attribute)": [[239, "gammapy.modeling.models.GeneralizedGaussianSpatialModel.type", false]], "type (gammapy.modeling.models.generalizedgaussiantemporalmodel attribute)": [[240, "gammapy.modeling.models.GeneralizedGaussianTemporalModel.type", false]], "type (gammapy.modeling.models.lightcurvetemplatetemporalmodel attribute)": [[241, "gammapy.modeling.models.LightCurveTemplateTemporalModel.type", false]], "type (gammapy.modeling.models.lineartemporalmodel attribute)": [[242, "gammapy.modeling.models.LinearTemporalModel.type", false]], "type (gammapy.modeling.models.logparabolanormspectralmodel attribute)": [[243, "gammapy.modeling.models.LogParabolaNormSpectralModel.type", false]], "type (gammapy.modeling.models.logparabolaspectralmodel attribute)": [[244, "gammapy.modeling.models.LogParabolaSpectralModel.type", false]], "type (gammapy.modeling.models.loguniformprior attribute)": [[245, "gammapy.modeling.models.LogUniformPrior.type", false]], "type (gammapy.modeling.models.meyercrabspectralmodel attribute)": [[247, "gammapy.modeling.models.MeyerCrabSpectralModel.type", false]], "type (gammapy.modeling.models.modelbase attribute)": [[249, "gammapy.modeling.models.ModelBase.type", false]], "type (gammapy.modeling.models.naimaspectralmodel attribute)": [[251, "gammapy.modeling.models.NaimaSpectralModel.type", false]], "type (gammapy.modeling.models.piecewisenormspatialmodel attribute)": [[252, "gammapy.modeling.models.PiecewiseNormSpatialModel.type", false]], "type (gammapy.modeling.models.piecewisenormspectralmodel attribute)": [[253, "gammapy.modeling.models.PiecewiseNormSpectralModel.type", false]], "type (gammapy.modeling.models.pointspatialmodel attribute)": [[254, "gammapy.modeling.models.PointSpatialModel.type", false]], "type (gammapy.modeling.models.powerlaw2spectralmodel attribute)": [[255, "gammapy.modeling.models.PowerLaw2SpectralModel.type", false]], "type (gammapy.modeling.models.powerlawnormspectralmodel attribute)": [[256, "gammapy.modeling.models.PowerLawNormSpectralModel.type", false]], "type (gammapy.modeling.models.powerlawspectralmodel attribute)": [[257, "gammapy.modeling.models.PowerLawSpectralModel.type", false]], "type (gammapy.modeling.models.powerlawtemporalmodel attribute)": [[258, "gammapy.modeling.models.PowerLawTemporalModel.type", false]], "type (gammapy.modeling.models.prior attribute)": [[259, "gammapy.modeling.models.Prior.type", false]], "type (gammapy.modeling.models.scalespectralmodel attribute)": [[262, "gammapy.modeling.models.ScaleSpectralModel.type", false]], "type (gammapy.modeling.models.shell2spatialmodel attribute)": [[263, "gammapy.modeling.models.Shell2SpatialModel.type", false]], "type (gammapy.modeling.models.shellspatialmodel attribute)": [[264, "gammapy.modeling.models.ShellSpatialModel.type", false]], "type (gammapy.modeling.models.sinetemporalmodel attribute)": [[265, "gammapy.modeling.models.SineTemporalModel.type", false]], "type (gammapy.modeling.models.skymodel attribute)": [[266, "gammapy.modeling.models.SkyModel.type", false]], "type (gammapy.modeling.models.smoothbrokenpowerlawspectralmodel attribute)": [[267, "gammapy.modeling.models.SmoothBrokenPowerLawSpectralModel.type", false]], "type (gammapy.modeling.models.spatialmodel attribute)": [[268, "gammapy.modeling.models.SpatialModel.type", false]], "type (gammapy.modeling.models.spectralmodel attribute)": [[269, "gammapy.modeling.models.SpectralModel.type", false]], "type (gammapy.modeling.models.superexpcutoffpowerlaw3fglspectralmodel attribute)": [[270, "gammapy.modeling.models.SuperExpCutoffPowerLaw3FGLSpectralModel.type", false]], "type (gammapy.modeling.models.superexpcutoffpowerlaw4fgldr3spectralmodel attribute)": [[271, "gammapy.modeling.models.SuperExpCutoffPowerLaw4FGLDR3SpectralModel.type", false]], "type (gammapy.modeling.models.superexpcutoffpowerlaw4fglspectralmodel attribute)": [[272, "gammapy.modeling.models.SuperExpCutoffPowerLaw4FGLSpectralModel.type", false]], "type (gammapy.modeling.models.templatendspatialmodel attribute)": [[274, "gammapy.modeling.models.TemplateNDSpatialModel.type", false]], "type (gammapy.modeling.models.templatendspectralmodel attribute)": [[275, "gammapy.modeling.models.TemplateNDSpectralModel.type", false]], "type (gammapy.modeling.models.templatenpredmodel attribute)": [[276, "gammapy.modeling.models.TemplateNPredModel.type", false]], "type (gammapy.modeling.models.templatephasecurvetemporalmodel attribute)": [[277, "gammapy.modeling.models.TemplatePhaseCurveTemporalModel.type", false]], "type (gammapy.modeling.models.templatespatialmodel attribute)": [[278, "gammapy.modeling.models.TemplateSpatialModel.type", false]], "type (gammapy.modeling.models.templatespectralmodel attribute)": [[279, "gammapy.modeling.models.TemplateSpectralModel.type", false]], "type (gammapy.modeling.models.temporalmodel attribute)": [[280, "gammapy.modeling.models.TemporalModel.type", false]], "type (gammapy.modeling.models.uniformprior attribute)": [[281, "gammapy.modeling.models.UniformPrior.type", false]], "type (gammapy.modeling.parameter attribute)": [[216, "gammapy.modeling.Parameter.type", false]], "type (gammapy.modeling.priorparameter attribute)": [[218, "gammapy.modeling.PriorParameter.type", false]], "types (gammapy.modeling.parameters attribute)": [[217, "gammapy.modeling.Parameters.types", false]], "types (gammapy.modeling.priorparameters attribute)": [[219, "gammapy.modeling.PriorParameters.types", false]], "unfreeze() (gammapy.astro.darkmatter.darkmatterannihilationspectralmodel method)": [[19, "gammapy.astro.darkmatter.DarkMatterAnnihilationSpectralModel.unfreeze", false]], "unfreeze() (gammapy.astro.darkmatter.darkmatterdecayspectralmodel method)": [[20, "gammapy.astro.darkmatter.DarkMatterDecaySpectralModel.unfreeze", false]], "unfreeze() (gammapy.astro.darkmatter.primaryflux method)": [[26, "gammapy.astro.darkmatter.PrimaryFlux.unfreeze", false]], "unfreeze() (gammapy.modeling.models.brokenpowerlawspectralmodel method)": [[220, "gammapy.modeling.models.BrokenPowerLawSpectralModel.unfreeze", false]], "unfreeze() (gammapy.modeling.models.compoundspectralmodel method)": [[221, "gammapy.modeling.models.CompoundSpectralModel.unfreeze", false]], "unfreeze() (gammapy.modeling.models.constantfluxspatialmodel method)": [[222, "gammapy.modeling.models.ConstantFluxSpatialModel.unfreeze", false]], "unfreeze() (gammapy.modeling.models.constantspatialmodel method)": [[223, "gammapy.modeling.models.ConstantSpatialModel.unfreeze", false]], "unfreeze() (gammapy.modeling.models.constantspectralmodel method)": [[224, "gammapy.modeling.models.ConstantSpectralModel.unfreeze", false]], "unfreeze() (gammapy.modeling.models.constanttemporalmodel method)": [[225, "gammapy.modeling.models.ConstantTemporalModel.unfreeze", false]], "unfreeze() (gammapy.modeling.models.datasetmodels method)": [[226, "gammapy.modeling.models.DatasetModels.unfreeze", false]], "unfreeze() (gammapy.modeling.models.diskspatialmodel method)": [[227, "gammapy.modeling.models.DiskSpatialModel.unfreeze", false]], "unfreeze() (gammapy.modeling.models.eblabsorptionnormspectralmodel method)": [[228, "gammapy.modeling.models.EBLAbsorptionNormSpectralModel.unfreeze", false]], "unfreeze() (gammapy.modeling.models.expcutoffpowerlaw3fglspectralmodel method)": [[230, "gammapy.modeling.models.ExpCutoffPowerLaw3FGLSpectralModel.unfreeze", false]], "unfreeze() (gammapy.modeling.models.expcutoffpowerlawnormspectralmodel method)": [[231, "gammapy.modeling.models.ExpCutoffPowerLawNormSpectralModel.unfreeze", false]], "unfreeze() (gammapy.modeling.models.expcutoffpowerlawspectralmodel method)": [[232, "gammapy.modeling.models.ExpCutoffPowerLawSpectralModel.unfreeze", false]], "unfreeze() (gammapy.modeling.models.expdecaytemporalmodel method)": [[233, "gammapy.modeling.models.ExpDecayTemporalModel.unfreeze", false]], "unfreeze() (gammapy.modeling.models.fovbackgroundmodel method)": [[234, "gammapy.modeling.models.FoVBackgroundModel.unfreeze", false]], "unfreeze() (gammapy.modeling.models.gaussianprior method)": [[235, "gammapy.modeling.models.GaussianPrior.unfreeze", false]], "unfreeze() (gammapy.modeling.models.gaussianspatialmodel method)": [[236, "gammapy.modeling.models.GaussianSpatialModel.unfreeze", false]], "unfreeze() (gammapy.modeling.models.gaussianspectralmodel method)": [[237, "gammapy.modeling.models.GaussianSpectralModel.unfreeze", false]], "unfreeze() (gammapy.modeling.models.gaussiantemporalmodel method)": [[238, "gammapy.modeling.models.GaussianTemporalModel.unfreeze", false]], "unfreeze() (gammapy.modeling.models.generalizedgaussianspatialmodel method)": [[239, "gammapy.modeling.models.GeneralizedGaussianSpatialModel.unfreeze", false]], "unfreeze() (gammapy.modeling.models.generalizedgaussiantemporalmodel method)": [[240, "gammapy.modeling.models.GeneralizedGaussianTemporalModel.unfreeze", false]], "unfreeze() (gammapy.modeling.models.lightcurvetemplatetemporalmodel method)": [[241, "gammapy.modeling.models.LightCurveTemplateTemporalModel.unfreeze", false]], "unfreeze() (gammapy.modeling.models.lineartemporalmodel method)": [[242, "gammapy.modeling.models.LinearTemporalModel.unfreeze", false]], "unfreeze() (gammapy.modeling.models.logparabolanormspectralmodel method)": [[243, "gammapy.modeling.models.LogParabolaNormSpectralModel.unfreeze", false]], "unfreeze() (gammapy.modeling.models.logparabolaspectralmodel method)": [[244, "gammapy.modeling.models.LogParabolaSpectralModel.unfreeze", false]], "unfreeze() (gammapy.modeling.models.loguniformprior method)": [[245, "gammapy.modeling.models.LogUniformPrior.unfreeze", false]], "unfreeze() (gammapy.modeling.models.meyercrabspectralmodel method)": [[247, "gammapy.modeling.models.MeyerCrabSpectralModel.unfreeze", false]], "unfreeze() (gammapy.modeling.models.modelbase method)": [[249, "gammapy.modeling.models.ModelBase.unfreeze", false]], "unfreeze() (gammapy.modeling.models.models method)": [[250, "gammapy.modeling.models.Models.unfreeze", false]], "unfreeze() (gammapy.modeling.models.naimaspectralmodel method)": [[251, "gammapy.modeling.models.NaimaSpectralModel.unfreeze", false]], "unfreeze() (gammapy.modeling.models.piecewisenormspatialmodel method)": [[252, "gammapy.modeling.models.PiecewiseNormSpatialModel.unfreeze", false]], "unfreeze() (gammapy.modeling.models.piecewisenormspectralmodel method)": [[253, "gammapy.modeling.models.PiecewiseNormSpectralModel.unfreeze", false]], "unfreeze() (gammapy.modeling.models.pointspatialmodel method)": [[254, "gammapy.modeling.models.PointSpatialModel.unfreeze", false]], "unfreeze() (gammapy.modeling.models.powerlaw2spectralmodel method)": [[255, "gammapy.modeling.models.PowerLaw2SpectralModel.unfreeze", false]], "unfreeze() (gammapy.modeling.models.powerlawnormspectralmodel method)": [[256, "gammapy.modeling.models.PowerLawNormSpectralModel.unfreeze", false]], "unfreeze() (gammapy.modeling.models.powerlawspectralmodel method)": [[257, "gammapy.modeling.models.PowerLawSpectralModel.unfreeze", false]], "unfreeze() (gammapy.modeling.models.powerlawtemporalmodel method)": [[258, "gammapy.modeling.models.PowerLawTemporalModel.unfreeze", false]], "unfreeze() (gammapy.modeling.models.prior method)": [[259, "gammapy.modeling.models.Prior.unfreeze", false]], "unfreeze() (gammapy.modeling.models.scalespectralmodel method)": [[262, "gammapy.modeling.models.ScaleSpectralModel.unfreeze", false]], "unfreeze() (gammapy.modeling.models.shell2spatialmodel method)": [[263, "gammapy.modeling.models.Shell2SpatialModel.unfreeze", false]], "unfreeze() (gammapy.modeling.models.shellspatialmodel method)": [[264, "gammapy.modeling.models.ShellSpatialModel.unfreeze", false]], "unfreeze() (gammapy.modeling.models.sinetemporalmodel method)": [[265, "gammapy.modeling.models.SineTemporalModel.unfreeze", false]], "unfreeze() (gammapy.modeling.models.skymodel method)": [[266, "gammapy.modeling.models.SkyModel.unfreeze", false]], "unfreeze() (gammapy.modeling.models.smoothbrokenpowerlawspectralmodel method)": [[267, "gammapy.modeling.models.SmoothBrokenPowerLawSpectralModel.unfreeze", false]], "unfreeze() (gammapy.modeling.models.spatialmodel method)": [[268, "gammapy.modeling.models.SpatialModel.unfreeze", false]], "unfreeze() (gammapy.modeling.models.spectralmodel method)": [[269, "gammapy.modeling.models.SpectralModel.unfreeze", false]], "unfreeze() (gammapy.modeling.models.superexpcutoffpowerlaw3fglspectralmodel method)": [[270, "gammapy.modeling.models.SuperExpCutoffPowerLaw3FGLSpectralModel.unfreeze", false]], "unfreeze() (gammapy.modeling.models.superexpcutoffpowerlaw4fgldr3spectralmodel method)": [[271, "gammapy.modeling.models.SuperExpCutoffPowerLaw4FGLDR3SpectralModel.unfreeze", false]], "unfreeze() (gammapy.modeling.models.superexpcutoffpowerlaw4fglspectralmodel method)": [[272, "gammapy.modeling.models.SuperExpCutoffPowerLaw4FGLSpectralModel.unfreeze", false]], "unfreeze() (gammapy.modeling.models.templatendspatialmodel method)": [[274, "gammapy.modeling.models.TemplateNDSpatialModel.unfreeze", false]], "unfreeze() (gammapy.modeling.models.templatendspectralmodel method)": [[275, "gammapy.modeling.models.TemplateNDSpectralModel.unfreeze", false]], "unfreeze() (gammapy.modeling.models.templatenpredmodel method)": [[276, "gammapy.modeling.models.TemplateNPredModel.unfreeze", false]], "unfreeze() (gammapy.modeling.models.templatephasecurvetemporalmodel method)": [[277, "gammapy.modeling.models.TemplatePhaseCurveTemporalModel.unfreeze", false]], "unfreeze() (gammapy.modeling.models.templatespatialmodel method)": [[278, "gammapy.modeling.models.TemplateSpatialModel.unfreeze", false]], "unfreeze() (gammapy.modeling.models.templatespectralmodel method)": [[279, "gammapy.modeling.models.TemplateSpectralModel.unfreeze", false]], "unfreeze() (gammapy.modeling.models.temporalmodel method)": [[280, "gammapy.modeling.models.TemporalModel.unfreeze", false]], "unfreeze() (gammapy.modeling.models.uniformprior method)": [[281, "gammapy.modeling.models.UniformPrior.unfreeze", false]], "unfreeze_all() (gammapy.modeling.parameters method)": [[217, "gammapy.modeling.Parameters.unfreeze_all", false]], "unfreeze_all() (gammapy.modeling.priorparameters method)": [[219, "gammapy.modeling.PriorParameters.unfreeze_all", false]], "uniformprior (class in gammapy.modeling.models)": [[281, "gammapy.modeling.models.UniformPrior", false]], "union() (gammapy.data.gti method)": [[86, "gammapy.data.GTI.union", false]], "union() (gammapy.maps.regiongeom method)": [[203, "gammapy.maps.RegionGeom.union", false]], "unique_parameters (gammapy.modeling.parameters attribute)": [[217, "gammapy.modeling.Parameters.unique_parameters", false]], "unique_parameters (gammapy.modeling.priorparameters attribute)": [[219, "gammapy.modeling.PriorParameters.unique_parameters", false]], "unit (gammapy.irf.background2d attribute)": [[149, "gammapy.irf.Background2D.unit", false]], "unit (gammapy.irf.background3d attribute)": [[150, "gammapy.irf.Background3D.unit", false]], "unit (gammapy.irf.backgroundirf attribute)": [[151, "gammapy.irf.BackgroundIRF.unit", false]], "unit (gammapy.irf.edispkernel attribute)": [[152, "gammapy.irf.EDispKernel.unit", false]], "unit (gammapy.irf.effectiveareatable2d attribute)": [[155, "gammapy.irf.EffectiveAreaTable2D.unit", false]], "unit (gammapy.irf.energydependentmultigausspsf attribute)": [[156, "gammapy.irf.EnergyDependentMultiGaussPSF.unit", false]], "unit (gammapy.irf.energydispersion2d attribute)": [[157, "gammapy.irf.EnergyDispersion2D.unit", false]], "unit (gammapy.irf.irf attribute)": [[159, "gammapy.irf.IRF.unit", false]], "unit (gammapy.irf.parametricpsf attribute)": [[166, "gammapy.irf.ParametricPSF.unit", false]], "unit (gammapy.irf.psf3d attribute)": [[162, "gammapy.irf.PSF3D.unit", false]], "unit (gammapy.irf.psfking attribute)": [[164, "gammapy.irf.PSFKing.unit", false]], "unit (gammapy.irf.radmax2d attribute)": [[167, "gammapy.irf.RadMax2D.unit", false]], "unit (gammapy.maps.hpxmap attribute)": [[195, "gammapy.maps.HpxMap.unit", false]], "unit (gammapy.maps.hpxndmap attribute)": [[196, "gammapy.maps.HpxNDMap.unit", false]], "unit (gammapy.maps.labelmapaxis attribute)": [[197, "gammapy.maps.LabelMapAxis.unit", false]], "unit (gammapy.maps.map attribute)": [[198, "gammapy.maps.Map.unit", false]], "unit (gammapy.maps.mapaxis attribute)": [[200, "gammapy.maps.MapAxis.unit", false]], "unit (gammapy.maps.regionndmap attribute)": [[204, "gammapy.maps.RegionNDMap.unit", false]], "unit (gammapy.maps.timemapaxis attribute)": [[205, "gammapy.maps.TimeMapAxis.unit", false]], "unit (gammapy.maps.wcsmap attribute)": [[207, "gammapy.maps.WcsMap.unit", false]], "unit (gammapy.maps.wcsndmap attribute)": [[208, "gammapy.maps.WcsNDMap.unit", false]], "unit (gammapy.modeling.parameter attribute)": [[216, "gammapy.modeling.Parameter.unit", false]], "unit (gammapy.modeling.priorparameter attribute)": [[218, "gammapy.modeling.PriorParameter.unit", false]], "unit_from_fits_image_hdu() (in module gammapy.utils.units)": [[369, "gammapy.utils.units.unit_from_fits_image_hdu", false]], "update() (gammapy.analysis.analysisconfig method)": [[16, "gammapy.analysis.AnalysisConfig.update", false]], "update() (gammapy.data.hduindextable method)": [[87, "gammapy.data.HDUIndexTable.update", false]], "update() (gammapy.data.observationtable method)": [[91, "gammapy.data.ObservationTable.update", false]], "update() (gammapy.maps.maps method)": [[202, "gammapy.maps.Maps.update", false]], "update_config() (gammapy.analysis.analysis method)": [[15, "gammapy.analysis.Analysis.update_config", false]], "update_forward_refs() (gammapy.analysis.analysisconfig class method)": [[16, "gammapy.analysis.AnalysisConfig.update_forward_refs", false]], "update_forward_refs() (gammapy.data.eventlistmetadata class method)": [[84, "gammapy.data.EventListMetaData.update_forward_refs", false]], "update_forward_refs() (gammapy.data.observationmetadata class method)": [[90, "gammapy.data.ObservationMetaData.update_forward_refs", false]], "update_forward_refs() (gammapy.datasets.mapdatasetmetadata class method)": [[105, "gammapy.datasets.MapDatasetMetaData.update_forward_refs", false]], "update_forward_refs() (gammapy.estimators.fluxmetadata class method)": [[126, "gammapy.estimators.FluxMetaData.update_forward_refs", false]], "update_from_dict() (gammapy.modeling.parameter method)": [[216, "gammapy.modeling.Parameter.update_from_dict", false]], "update_from_dict() (gammapy.modeling.priorparameter method)": [[218, "gammapy.modeling.PriorParameter.update_from_dict", false]], "update_link_label() (gammapy.modeling.models.datasetmodels method)": [[226, "gammapy.modeling.models.DatasetModels.update_link_label", false]], "update_link_label() (gammapy.modeling.models.models method)": [[250, "gammapy.modeling.models.Models.update_link_label", false]], "update_parameters_from_table() (gammapy.modeling.models.datasetmodels method)": [[226, "gammapy.modeling.models.DatasetModels.update_parameters_from_table", false]], "update_parameters_from_table() (gammapy.modeling.models.models method)": [[250, "gammapy.modeling.models.Models.update_parameters_from_table", false]], "upsample() (gammapy.maps.geom method)": [[193, "gammapy.maps.Geom.upsample", false]], "upsample() (gammapy.maps.hpxgeom method)": [[194, "gammapy.maps.HpxGeom.upsample", false]], "upsample() (gammapy.maps.hpxmap method)": [[195, "gammapy.maps.HpxMap.upsample", false]], "upsample() (gammapy.maps.hpxndmap method)": [[196, "gammapy.maps.HpxNDMap.upsample", false]], "upsample() (gammapy.maps.labelmapaxis method)": [[197, "gammapy.maps.LabelMapAxis.upsample", false]], "upsample() (gammapy.maps.map method)": [[198, "gammapy.maps.Map.upsample", false]], "upsample() (gammapy.maps.mapaxes method)": [[199, "gammapy.maps.MapAxes.upsample", false]], "upsample() (gammapy.maps.mapaxis method)": [[200, "gammapy.maps.MapAxis.upsample", false]], "upsample() (gammapy.maps.regiongeom method)": [[203, "gammapy.maps.RegionGeom.upsample", false]], "upsample() (gammapy.maps.regionndmap method)": [[204, "gammapy.maps.RegionNDMap.upsample", false]], "upsample() (gammapy.maps.timemapaxis method)": [[205, "gammapy.maps.TimeMapAxis.upsample", false]], "upsample() (gammapy.maps.wcsgeom method)": [[206, "gammapy.maps.WcsGeom.upsample", false]], "upsample() (gammapy.maps.wcsmap method)": [[207, "gammapy.maps.WcsMap.upsample", false]], "upsample() (gammapy.maps.wcsndmap method)": [[208, "gammapy.maps.WcsNDMap.upsample", false]], "use_center_as_plot_labels (gammapy.maps.mapaxis attribute)": [[200, "gammapy.maps.MapAxis.use_center_as_plot_labels", false]], "uses_quantity (gammapy.astro.population.casebattacharya1998 attribute)": [[28, "gammapy.astro.population.CaseBattacharya1998.uses_quantity", false]], "uses_quantity (gammapy.astro.population.exponential attribute)": [[29, "gammapy.astro.population.Exponential.uses_quantity", false]], "uses_quantity (gammapy.astro.population.faucherkaspi2006 attribute)": [[30, "gammapy.astro.population.FaucherKaspi2006.uses_quantity", false]], "uses_quantity (gammapy.astro.population.faucherkaspi2006velocitybimodal attribute)": [[31, "gammapy.astro.population.FaucherKaspi2006VelocityBimodal.uses_quantity", false]], "uses_quantity (gammapy.astro.population.faucherkaspi2006velocitymaxwellian attribute)": [[32, "gammapy.astro.population.FaucherKaspi2006VelocityMaxwellian.uses_quantity", false]], "uses_quantity (gammapy.astro.population.lorimer2006 attribute)": [[35, "gammapy.astro.population.Lorimer2006.uses_quantity", false]], "uses_quantity (gammapy.astro.population.paczynski1990 attribute)": [[36, "gammapy.astro.population.Paczynski1990.uses_quantity", false]], "uses_quantity (gammapy.astro.population.paczynski1990velocity attribute)": [[37, "gammapy.astro.population.Paczynski1990Velocity.uses_quantity", false]], "uses_quantity (gammapy.astro.population.yusifovkucuk2004 attribute)": [[39, "gammapy.astro.population.YusifovKucuk2004.uses_quantity", false]], "uses_quantity (gammapy.astro.population.yusifovkucuk2004b attribute)": [[40, "gammapy.astro.population.YusifovKucuk2004B.uses_quantity", false]], "v_0 (gammapy.astro.population.paczynski1990velocity attribute)": [[37, "gammapy.astro.population.Paczynski1990Velocity.v_0", false]], "valid_hdu_class (gammapy.data.hduindextable attribute)": [[87, "gammapy.data.HDUIndexTable.VALID_HDU_CLASS", false]], "valid_hdu_type (gammapy.data.hduindextable attribute)": [[87, "gammapy.data.HDUIndexTable.VALID_HDU_TYPE", false]], "validate() (gammapy.analysis.analysisconfig class method)": [[16, "gammapy.analysis.AnalysisConfig.validate", false]], "validate() (gammapy.data.eventlistmetadata class method)": [[84, "gammapy.data.EventListMetaData.validate", false]], "validate() (gammapy.data.observationmetadata class method)": [[90, "gammapy.data.ObservationMetaData.validate", false]], "validate() (gammapy.datasets.mapdatasetmetadata class method)": [[105, "gammapy.datasets.MapDatasetMetaData.validate", false]], "validate() (gammapy.estimators.fluxmetadata class method)": [[126, "gammapy.estimators.FluxMetaData.validate", false]], "valleespiral (class in gammapy.astro.population)": [[38, "gammapy.astro.population.ValleeSpiral", false]], "value (gammapy.modeling.models.constantspatialmodel attribute)": [[223, "gammapy.modeling.models.ConstantSpatialModel.value", false]], "value (gammapy.modeling.parameter attribute)": [[216, "gammapy.modeling.Parameter.value", false]], "value (gammapy.modeling.parameters attribute)": [[217, "gammapy.modeling.Parameters.value", false]], "value (gammapy.modeling.priorparameter attribute)": [[218, "gammapy.modeling.PriorParameter.value", false]], "value (gammapy.modeling.priorparameters attribute)": [[219, "gammapy.modeling.PriorParameters.value", false]], "values() (gammapy.data.hduindextable method)": [[87, "gammapy.data.HDUIndexTable.values", false]], "values() (gammapy.data.observationtable method)": [[91, "gammapy.data.ObservationTable.values", false]], "values() (gammapy.maps.maps method)": [[202, "gammapy.maps.Maps.values", false]], "values_equal() (gammapy.data.hduindextable method)": [[87, "gammapy.data.HDUIndexTable.values_equal", false]], "values_equal() (gammapy.data.observationtable method)": [[91, "gammapy.data.ObservationTable.values_equal", false]], "velocity_distributions (in module gammapy.astro.population)": [[49, "gammapy.astro.population.velocity_distributions", false]], "velocity_glon_glat() (in module gammapy.utils.coordinates)": [[317, "gammapy.utils.coordinates.velocity_glon_glat", false]], "w (gammapy.astro.population.faucherkaspi2006velocitybimodal attribute)": [[31, "gammapy.astro.population.FaucherKaspi2006VelocityBimodal.w", false]], "wcs (gammapy.maps.regiongeom attribute)": [[203, "gammapy.maps.RegionGeom.wcs", false]], "wcs (gammapy.maps.wcsgeom attribute)": [[206, "gammapy.maps.WcsGeom.wcs", false]], "wcs_geom (gammapy.modeling.models.datasetmodels attribute)": [[226, "gammapy.modeling.models.DatasetModels.wcs_geom", false]], "wcs_geom (gammapy.modeling.models.models attribute)": [[250, "gammapy.modeling.models.Models.wcs_geom", false]], "wcsgeom (class in gammapy.maps)": [[206, "gammapy.maps.WcsGeom", false]], "wcsmap (class in gammapy.maps)": [[207, "gammapy.maps.WcsMap", false]], "wcsndmap (class in gammapy.maps)": [[208, "gammapy.maps.WcsNDMap", false]], "weight (gammapy.modeling.models.gaussianprior attribute)": [[235, "gammapy.modeling.models.GaussianPrior.weight", false]], "weight (gammapy.modeling.models.loguniformprior attribute)": [[245, "gammapy.modeling.models.LogUniformPrior.weight", false]], "weight (gammapy.modeling.models.prior attribute)": [[259, "gammapy.modeling.models.Prior.weight", false]], "weight (gammapy.modeling.models.uniformprior attribute)": [[281, "gammapy.modeling.models.UniformPrior.weight", false]], "width (gammapy.maps.hpxgeom attribute)": [[194, "gammapy.maps.HpxGeom.width", false]], "width (gammapy.maps.regiongeom attribute)": [[203, "gammapy.maps.RegionGeom.width", false]], "width (gammapy.maps.wcsgeom attribute)": [[206, "gammapy.maps.WcsGeom.width", false]], "width (gammapy.modeling.models.shellspatialmodel attribute)": [[264, "gammapy.modeling.models.ShellSpatialModel.width", false]], "width() (gammapy.catalog.sourcecataloglargescalehgps method)": [[68, "gammapy.catalog.SourceCatalogLargeScaleHGPS.width", false]], "width_error() (gammapy.catalog.sourcecataloglargescalehgps method)": [[68, "gammapy.catalog.SourceCatalogLargeScaleHGPS.width_error", false]], "with_units_from_data() (gammapy.astro.population.casebattacharya1998 method)": [[28, "gammapy.astro.population.CaseBattacharya1998.with_units_from_data", false]], "with_units_from_data() (gammapy.astro.population.exponential method)": [[29, "gammapy.astro.population.Exponential.with_units_from_data", false]], "with_units_from_data() (gammapy.astro.population.faucherkaspi2006 method)": [[30, "gammapy.astro.population.FaucherKaspi2006.with_units_from_data", false]], "with_units_from_data() (gammapy.astro.population.faucherkaspi2006velocitybimodal method)": [[31, "gammapy.astro.population.FaucherKaspi2006VelocityBimodal.with_units_from_data", false]], "with_units_from_data() (gammapy.astro.population.faucherkaspi2006velocitymaxwellian method)": [[32, "gammapy.astro.population.FaucherKaspi2006VelocityMaxwellian.with_units_from_data", false]], "with_units_from_data() (gammapy.astro.population.lorimer2006 method)": [[35, "gammapy.astro.population.Lorimer2006.with_units_from_data", false]], "with_units_from_data() (gammapy.astro.population.paczynski1990 method)": [[36, "gammapy.astro.population.Paczynski1990.with_units_from_data", false]], "with_units_from_data() (gammapy.astro.population.paczynski1990velocity method)": [[37, "gammapy.astro.population.Paczynski1990Velocity.with_units_from_data", false]], "with_units_from_data() (gammapy.astro.population.yusifovkucuk2004 method)": [[39, "gammapy.astro.population.YusifovKucuk2004.with_units_from_data", false]], "with_units_from_data() (gammapy.astro.population.yusifovkucuk2004b method)": [[40, "gammapy.astro.population.YusifovKucuk2004B.with_units_from_data", false]], "without_units_for_data() (gammapy.astro.population.casebattacharya1998 method)": [[28, "gammapy.astro.population.CaseBattacharya1998.without_units_for_data", false]], "without_units_for_data() (gammapy.astro.population.exponential method)": [[29, "gammapy.astro.population.Exponential.without_units_for_data", false]], "without_units_for_data() (gammapy.astro.population.faucherkaspi2006 method)": [[30, "gammapy.astro.population.FaucherKaspi2006.without_units_for_data", false]], "without_units_for_data() (gammapy.astro.population.faucherkaspi2006velocitybimodal method)": [[31, "gammapy.astro.population.FaucherKaspi2006VelocityBimodal.without_units_for_data", false]], "without_units_for_data() (gammapy.astro.population.faucherkaspi2006velocitymaxwellian method)": [[32, "gammapy.astro.population.FaucherKaspi2006VelocityMaxwellian.without_units_for_data", false]], "without_units_for_data() (gammapy.astro.population.lorimer2006 method)": [[35, "gammapy.astro.population.Lorimer2006.without_units_for_data", false]], "without_units_for_data() (gammapy.astro.population.paczynski1990 method)": [[36, "gammapy.astro.population.Paczynski1990.without_units_for_data", false]], "without_units_for_data() (gammapy.astro.population.paczynski1990velocity method)": [[37, "gammapy.astro.population.Paczynski1990Velocity.without_units_for_data", false]], "without_units_for_data() (gammapy.astro.population.yusifovkucuk2004 method)": [[39, "gammapy.astro.population.YusifovKucuk2004.without_units_for_data", false]], "without_units_for_data() (gammapy.astro.population.yusifovkucuk2004b method)": [[40, "gammapy.astro.population.YusifovKucuk2004B.without_units_for_data", false]], "wobbleregionsfinder (class in gammapy.makers)": [[183, "gammapy.makers.WobbleRegionsFinder", false]], "wrap_coord() (gammapy.maps.mapaxis method)": [[200, "gammapy.maps.MapAxis.wrap_coord", false]], "write (gammapy.data.hduindextable attribute)": [[87, "gammapy.data.HDUIndexTable.write", false]], "write (gammapy.data.observationtable attribute)": [[91, "gammapy.data.ObservationTable.write", false]], "write() (gammapy.analysis.analysisconfig method)": [[16, "gammapy.analysis.AnalysisConfig.write", false]], "write() (gammapy.astro.darkmatter.primaryflux method)": [[26, "gammapy.astro.darkmatter.PrimaryFlux.write", false]], "write() (gammapy.data.gti method)": [[86, "gammapy.data.GTI.write", false]], "write() (gammapy.data.observation method)": [[88, "gammapy.data.Observation.write", false]], "write() (gammapy.datasets.datasets method)": [[100, "gammapy.datasets.Datasets.write", false]], "write() (gammapy.datasets.fluxpointsdataset method)": [[102, "gammapy.datasets.FluxPointsDataset.write", false]], "write() (gammapy.datasets.mapdataset method)": [[103, "gammapy.datasets.MapDataset.write", false]], "write() (gammapy.datasets.mapdatasetonoff method)": [[106, "gammapy.datasets.MapDatasetOnOff.write", false]], "write() (gammapy.datasets.ogipdatasetwriter method)": [[108, "gammapy.datasets.OGIPDatasetWriter.write", false]], "write() (gammapy.datasets.spectrumdataset method)": [[110, "gammapy.datasets.SpectrumDataset.write", false]], "write() (gammapy.datasets.spectrumdatasetonoff method)": [[111, "gammapy.datasets.SpectrumDatasetOnOff.write", false]], "write() (gammapy.estimators.fluxmaps method)": [[125, "gammapy.estimators.FluxMaps.write", false]], "write() (gammapy.estimators.fluxpoints method)": [[127, "gammapy.estimators.FluxPoints.write", false]], "write() (gammapy.irf.background2d method)": [[149, "gammapy.irf.Background2D.write", false]], "write() (gammapy.irf.background3d method)": [[150, "gammapy.irf.Background3D.write", false]], "write() (gammapy.irf.backgroundirf method)": [[151, "gammapy.irf.BackgroundIRF.write", false]], "write() (gammapy.irf.edispkernel method)": [[152, "gammapy.irf.EDispKernel.write", false]], "write() (gammapy.irf.edispkernelmap method)": [[153, "gammapy.irf.EDispKernelMap.write", false]], "write() (gammapy.irf.edispmap method)": [[154, "gammapy.irf.EDispMap.write", false]], "write() (gammapy.irf.effectiveareatable2d method)": [[155, "gammapy.irf.EffectiveAreaTable2D.write", false]], "write() (gammapy.irf.energydependentmultigausspsf method)": [[156, "gammapy.irf.EnergyDependentMultiGaussPSF.write", false]], "write() (gammapy.irf.energydispersion2d method)": [[157, "gammapy.irf.EnergyDispersion2D.write", false]], "write() (gammapy.irf.irf method)": [[159, "gammapy.irf.IRF.write", false]], "write() (gammapy.irf.irfmap method)": [[160, "gammapy.irf.IRFMap.write", false]], "write() (gammapy.irf.parametricpsf method)": [[166, "gammapy.irf.ParametricPSF.write", false]], "write() (gammapy.irf.psf3d method)": [[162, "gammapy.irf.PSF3D.write", false]], "write() (gammapy.irf.psfkernel method)": [[163, "gammapy.irf.PSFKernel.write", false]], "write() (gammapy.irf.psfking method)": [[164, "gammapy.irf.PSFKing.write", false]], "write() (gammapy.irf.psfmap method)": [[165, "gammapy.irf.PSFMap.write", false]], "write() (gammapy.irf.radmax2d method)": [[167, "gammapy.irf.RadMax2D.write", false]], "write() (gammapy.irf.recopsfmap method)": [[168, "gammapy.irf.RecoPSFMap.write", false]], "write() (gammapy.maps.hpxmap method)": [[195, "gammapy.maps.HpxMap.write", false]], "write() (gammapy.maps.hpxndmap method)": [[196, "gammapy.maps.HpxNDMap.write", false]], "write() (gammapy.maps.map method)": [[198, "gammapy.maps.Map.write", false]], "write() (gammapy.maps.maps method)": [[202, "gammapy.maps.Maps.write", false]], "write() (gammapy.maps.regionndmap method)": [[204, "gammapy.maps.RegionNDMap.write", false]], "write() (gammapy.maps.wcsmap method)": [[207, "gammapy.maps.WcsMap.write", false]], "write() (gammapy.maps.wcsndmap method)": [[208, "gammapy.maps.WcsNDMap.write", false]], "write() (gammapy.modeling.fitresult method)": [[214, "gammapy.modeling.FitResult.write", false]], "write() (gammapy.modeling.models.datasetmodels method)": [[226, "gammapy.modeling.models.DatasetModels.write", false]], "write() (gammapy.modeling.models.lightcurvetemplatetemporalmodel method)": [[241, "gammapy.modeling.models.LightCurveTemplateTemporalModel.write", false]], "write() (gammapy.modeling.models.models method)": [[250, "gammapy.modeling.models.Models.write", false]], "write() (gammapy.modeling.models.templatendspatialmodel method)": [[274, "gammapy.modeling.models.TemplateNDSpatialModel.write", false]], "write() (gammapy.modeling.models.templatendspectralmodel method)": [[275, "gammapy.modeling.models.TemplateNDSpectralModel.write", false]], "write() (gammapy.modeling.models.templatenpredmodel method)": [[276, "gammapy.modeling.models.TemplateNPredModel.write", false]], "write() (gammapy.modeling.models.templatephasecurvetemporalmodel method)": [[277, "gammapy.modeling.models.TemplatePhaseCurveTemporalModel.write", false]], "write() (gammapy.modeling.models.templatespatialmodel method)": [[278, "gammapy.modeling.models.TemplateSpatialModel.write", false]], "write_arf() (gammapy.datasets.ogipdatasetwriter method)": [[108, "gammapy.datasets.OGIPDatasetWriter.write_arf", false]], "write_bkg() (gammapy.datasets.ogipdatasetwriter method)": [[108, "gammapy.datasets.OGIPDatasetWriter.write_bkg", false]], "write_covariance() (gammapy.modeling.models.datasetmodels method)": [[226, "gammapy.modeling.models.DatasetModels.write_covariance", false]], "write_covariance() (gammapy.modeling.models.models method)": [[250, "gammapy.modeling.models.Models.write_covariance", false]], "write_datasets() (gammapy.analysis.analysis method)": [[15, "gammapy.analysis.Analysis.write_datasets", false]], "write_models() (gammapy.analysis.analysis method)": [[15, "gammapy.analysis.Analysis.write_models", false]], "write_pha() (gammapy.datasets.ogipdatasetwriter method)": [[108, "gammapy.datasets.OGIPDatasetWriter.write_pha", false]], "write_rmf() (gammapy.datasets.ogipdatasetwriter method)": [[108, "gammapy.datasets.OGIPDatasetWriter.write_rmf", false]], "write_yaml() (in module gammapy.utils.scripts)": [[352, "gammapy.utils.scripts.write_yaml", false]], "wstat() (in module gammapy.stats)": [[307, "gammapy.stats.wstat", false]], "wstatcountsstatistic (class in gammapy.stats)": [[293, "gammapy.stats.WStatCountsStatistic", false]], "x_max (gammapy.estimators.imageprofile attribute)": [[130, "gammapy.estimators.ImageProfile.x_max", false]], "x_min (gammapy.estimators.imageprofile attribute)": [[130, "gammapy.estimators.ImageProfile.x_min", false]], "x_ref (gammapy.estimators.imageprofile attribute)": [[130, "gammapy.estimators.ImageProfile.x_ref", false]], "xy_position() (gammapy.astro.population.faucherspiral method)": [[33, "gammapy.astro.population.FaucherSpiral.xy_position", false]], "xy_position() (gammapy.astro.population.logspiral method)": [[34, "gammapy.astro.population.LogSpiral.xy_position", false]], "xy_position() (gammapy.astro.population.valleespiral method)": [[38, "gammapy.astro.population.ValleeSpiral.xy_position", false]], "yusifovkucuk2004 (class in gammapy.astro.population)": [[39, "gammapy.astro.population.YusifovKucuk2004", false]], "yusifovkucuk2004b (class in gammapy.astro.population)": [[40, "gammapy.astro.population.YusifovKucuk2004B", false]], "z_0 (gammapy.astro.population.exponential attribute)": [[29, "gammapy.astro.population.Exponential.z_0", false]], "zhaoprofile (class in gammapy.astro.darkmatter)": [[27, "gammapy.astro.darkmatter.ZhaoProfile", false]]}, "objects": {"gammapy": [[0, 0, 0, "-", "analysis"], [2, 0, 0, "-", "catalog"], [3, 0, 0, "-", "data"], [4, 0, 0, "-", "datasets"], [5, 0, 0, "-", "estimators"], [7, 0, 0, "-", "irf"], [8, 0, 0, "-", "makers"], [9, 0, 0, "-", "maps"], [10, 0, 0, "-", "modeling"], [12, 0, 0, "-", "stats"], [14, 0, 0, "-", "visualization"], [11, 6, 1, "cmdoption-gammapy-ignore-warnings", "--ignore-warnings"], [11, 6, 1, "cmdoption-gammapy-log-level", "--log-level"], [11, 6, 1, "cmdoption-gammapy-version", "--version"]], "gammapy-analysis-config": [[11, 6, 1, "cmdoption-gammapy-analysis-config-filename", "--filename"], [11, 6, 1, "cmdoption-gammapy-analysis-config-overwrite", "--overwrite"]], "gammapy-analysis-run": [[11, 6, 1, "cmdoption-gammapy-analysis-run-filename", "--filename"], [11, 6, 1, "cmdoption-gammapy-analysis-run-out", "--out"], [11, 6, 1, "cmdoption-gammapy-analysis-run-overwrite", "--overwrite"]], "gammapy-download-datasets": [[11, 6, 1, "cmdoption-gammapy-download-datasets-out", "--out"], [11, 6, 1, "cmdoption-gammapy-download-datasets-release", "--release"]], "gammapy-download-notebooks": [[11, 6, 1, "cmdoption-gammapy-download-notebooks-out", "--out"], [11, 6, 1, "cmdoption-gammapy-download-notebooks-release", "--release"]], "gammapy-info": [[11, 6, 1, "cmdoption-gammapy-info-dependencies", "--dependencies"], [11, 6, 1, "cmdoption-gammapy-info-envvar", "--envvar"], [11, 6, 1, "cmdoption-gammapy-info-dependencies", "--no-dependencies"], [11, 6, 1, "cmdoption-gammapy-info-envvar", "--no-envvar"], [11, 6, 1, "cmdoption-gammapy-info-system", "--no-system"], [11, 6, 1, "cmdoption-gammapy-info-version", "--no-version"], [11, 6, 1, "cmdoption-gammapy-info-system", "--system"], [11, 6, 1, "cmdoption-gammapy-info-version", "--version"]], "gammapy-workflow-config": [[11, 6, 1, "cmdoption-gammapy-workflow-config-filename", "--filename"], [11, 6, 1, "cmdoption-gammapy-workflow-config-overwrite", "--overwrite"]], "gammapy-workflow-run": [[11, 6, 1, "cmdoption-gammapy-workflow-run-filename", "--filename"]], "gammapy.analysis": [[15, 1, 1, "", "Analysis"], [16, 1, 1, "", "AnalysisConfig"]], "gammapy.analysis.Analysis": [[15, 2, 1, "", "config"], [15, 3, 1, "", "get_datasets"], [15, 3, 1, "", "get_excess_map"], [15, 3, 1, "", "get_flux_points"], [15, 3, 1, "", "get_light_curve"], [15, 3, 1, "", "get_observations"], [15, 2, 1, "", "models"], [15, 3, 1, "", "read_datasets"], [15, 3, 1, "", "read_models"], [15, 3, 1, "", "run_fit"], [15, 3, 1, "", "set_models"], [15, 3, 1, "", "update_config"], [15, 3, 1, "", "write_datasets"], [15, 3, 1, "", "write_models"]], "gammapy.analysis.AnalysisConfig": [[16, 3, 1, "", "construct"], [16, 3, 1, "", "copy"], [16, 3, 1, "", "dict"], [16, 3, 1, "", "from_orm"], [16, 3, 1, "", "from_yaml"], [16, 3, 1, "", "json"], [16, 2, 1, "", "model_computed_fields"], [16, 2, 1, "", "model_config"], [16, 3, 1, "", "model_construct"], [16, 3, 1, "", "model_copy"], [16, 3, 1, "", "model_dump"], [16, 3, 1, "", "model_dump_json"], [16, 2, 1, "", "model_extra"], [16, 2, 1, "", "model_fields"], [16, 2, 1, "", "model_fields_set"], [16, 3, 1, "", "model_json_schema"], [16, 3, 1, "", "model_parametrized_name"], [16, 3, 1, "", "model_post_init"], [16, 3, 1, "", "model_rebuild"], [16, 3, 1, "", "model_validate"], [16, 3, 1, "", "model_validate_json"], [16, 3, 1, "", "model_validate_strings"], [16, 3, 1, "", "parse_file"], [16, 3, 1, "", "parse_obj"], [16, 3, 1, "", "parse_raw"], [16, 3, 1, "", "read"], [16, 3, 1, "", "schema"], [16, 3, 1, "", "schema_json"], [16, 3, 1, "", "set_logging"], [16, 3, 1, "", "to_yaml"], [16, 3, 1, "", "update"], [16, 3, 1, "", "update_forward_refs"], [16, 3, 1, "", "validate"], [16, 3, 1, "", "write"]], "gammapy.astro": [[1, 0, 0, "-", "darkmatter"], [1, 0, 0, "-", "population"], [1, 0, 0, "-", "source"]], "gammapy.astro.darkmatter": [[17, 1, 1, "", "BurkertProfile"], [18, 1, 1, "", "DMProfile"], [19, 1, 1, "", "DarkMatterAnnihilationSpectralModel"], [20, 1, 1, "", "DarkMatterDecaySpectralModel"], [21, 1, 1, "", "EinastoProfile"], [22, 1, 1, "", "IsothermalProfile"], [23, 1, 1, "", "JFactory"], [24, 1, 1, "", "MooreProfile"], [25, 1, 1, "", "NFWProfile"], [26, 1, 1, "", "PrimaryFlux"], [27, 1, 1, "", "ZhaoProfile"]], "gammapy.astro.darkmatter.BurkertProfile": [[17, 2, 1, "", "DEFAULT_SCALE_RADIUS"], [17, 2, 1, "", "DISTANCE_GC"], [17, 2, 1, "", "LOCAL_DENSITY"], [17, 3, 1, "", "__call__"], [17, 3, 1, "", "evaluate"], [17, 3, 1, "", "integral"], [17, 3, 1, "", "integrate_spectrum_separation"], [17, 3, 1, "", "scale_to_local_density"]], "gammapy.astro.darkmatter.DMProfile": [[18, 2, 1, "", "DISTANCE_GC"], [18, 2, 1, "", "LOCAL_DENSITY"], [18, 3, 1, "", "__call__"], [18, 3, 1, "", "integral"], [18, 3, 1, "", "integrate_spectrum_separation"], [18, 3, 1, "", "scale_to_local_density"]], "gammapy.astro.darkmatter.DarkMatterAnnihilationSpectralModel": [[19, 2, 1, "", "THERMAL_RELIC_CROSS_SECTION"], [19, 3, 1, "", "__call__"], [19, 3, 1, "", "copy"], [19, 2, 1, "", "covariance"], [19, 2, 1, "", "default_parameters"], [19, 3, 1, "", "energy_flux"], [19, 3, 1, "", "energy_flux_error"], [19, 3, 1, "", "evaluate"], [19, 3, 1, "", "evaluate_error"], [19, 3, 1, "", "freeze"], [19, 3, 1, "", "from_dict"], [19, 3, 1, "", "from_parameters"], [19, 2, 1, "", "frozen"], [19, 3, 1, "", "integral"], [19, 3, 1, "", "integral_error"], [19, 3, 1, "", "inverse"], [19, 3, 1, "", "inverse_all"], [19, 2, 1, "", "is_norm_spectral_model"], [19, 2, 1, "", "parameters"], [19, 2, 1, "", "parameters_unique_names"], [19, 2, 1, "", "pivot_energy"], [19, 3, 1, "", "plot"], [19, 3, 1, "", "plot_error"], [19, 3, 1, "", "reassign"], [19, 3, 1, "", "reference_fluxes"], [19, 2, 1, "", "scale"], [19, 3, 1, "", "spectral_index"], [19, 3, 1, "", "spectral_index_error"], [19, 2, 1, "", "tag"], [19, 3, 1, "", "to_dict"], [19, 2, 1, "", "type"], [19, 3, 1, "", "unfreeze"]], "gammapy.astro.darkmatter.DarkMatterDecaySpectralModel": [[20, 2, 1, "", "LIFETIME_AGE_OF_UNIVERSE"], [20, 3, 1, "", "__call__"], [20, 3, 1, "", "copy"], [20, 2, 1, "", "covariance"], [20, 2, 1, "", "default_parameters"], [20, 3, 1, "", "energy_flux"], [20, 3, 1, "", "energy_flux_error"], [20, 3, 1, "", "evaluate"], [20, 3, 1, "", "evaluate_error"], [20, 3, 1, "", "freeze"], [20, 3, 1, "", "from_dict"], [20, 3, 1, "", "from_parameters"], [20, 2, 1, "", "frozen"], [20, 3, 1, "", "integral"], [20, 3, 1, "", "integral_error"], [20, 3, 1, "", "inverse"], [20, 3, 1, "", "inverse_all"], [20, 2, 1, "", "is_norm_spectral_model"], [20, 2, 1, "", "parameters"], [20, 2, 1, "", "parameters_unique_names"], [20, 2, 1, "", "pivot_energy"], [20, 3, 1, "", "plot"], [20, 3, 1, "", "plot_error"], [20, 3, 1, "", "reassign"], [20, 3, 1, "", "reference_fluxes"], [20, 2, 1, "", "scale"], [20, 3, 1, "", "spectral_index"], [20, 3, 1, "", "spectral_index_error"], [20, 2, 1, "", "tag"], [20, 3, 1, "", "to_dict"], [20, 2, 1, "", "type"], [20, 3, 1, "", "unfreeze"]], "gammapy.astro.darkmatter.EinastoProfile": [[21, 2, 1, "", "DEFAULT_ALPHA"], [21, 2, 1, "", "DEFAULT_SCALE_RADIUS"], [21, 2, 1, "", "DISTANCE_GC"], [21, 2, 1, "", "LOCAL_DENSITY"], [21, 3, 1, "", "__call__"], [21, 3, 1, "", "evaluate"], [21, 3, 1, "", "integral"], [21, 3, 1, "", "integrate_spectrum_separation"], [21, 3, 1, "", "scale_to_local_density"]], "gammapy.astro.darkmatter.IsothermalProfile": [[22, 2, 1, "", "DEFAULT_SCALE_RADIUS"], [22, 2, 1, "", "DISTANCE_GC"], [22, 2, 1, "", "LOCAL_DENSITY"], [22, 3, 1, "", "__call__"], [22, 3, 1, "", "evaluate"], [22, 3, 1, "", "integral"], [22, 3, 1, "", "integrate_spectrum_separation"], [22, 3, 1, "", "scale_to_local_density"]], "gammapy.astro.darkmatter.JFactory": [[23, 3, 1, "", "compute_differential_jfactor"], [23, 3, 1, "", "compute_jfactor"]], "gammapy.astro.darkmatter.MooreProfile": [[24, 2, 1, "", "DEFAULT_SCALE_RADIUS"], [24, 2, 1, "", "DISTANCE_GC"], [24, 2, 1, "", "LOCAL_DENSITY"], [24, 3, 1, "", "__call__"], [24, 3, 1, "", "evaluate"], [24, 3, 1, "", "integral"], [24, 3, 1, "", "integrate_spectrum_separation"], [24, 3, 1, "", "scale_to_local_density"]], "gammapy.astro.darkmatter.NFWProfile": [[25, 2, 1, "", "DEFAULT_SCALE_RADIUS"], [25, 2, 1, "", "DISTANCE_GC"], [25, 2, 1, "", "LOCAL_DENSITY"], [25, 3, 1, "", "__call__"], [25, 3, 1, "", "evaluate"], [25, 3, 1, "", "integral"], [25, 3, 1, "", "integrate_spectrum_separation"], [25, 3, 1, "", "scale_to_local_density"]], "gammapy.astro.darkmatter.PrimaryFlux": [[26, 3, 1, "", "__call__"], [26, 2, 1, "", "allowed_channels"], [26, 2, 1, "", "channel"], [26, 2, 1, "", "channel_registry"], [26, 3, 1, "", "copy"], [26, 2, 1, "", "covariance"], [26, 2, 1, "", "default_parameters"], [26, 3, 1, "", "energy_flux"], [26, 3, 1, "", "energy_flux_error"], [26, 3, 1, "", "evaluate"], [26, 3, 1, "", "evaluate_error"], [26, 3, 1, "", "freeze"], [26, 3, 1, "", "from_dict"], [26, 3, 1, "", "from_parameters"], [26, 2, 1, "", "frozen"], [26, 3, 1, "", "integral"], [26, 3, 1, "", "integral_error"], [26, 3, 1, "", "inverse"], [26, 3, 1, "", "inverse_all"], [26, 2, 1, "", "is_norm_spectral_model"], [26, 2, 1, "", "mDM"], [26, 2, 1, "", "map"], [26, 2, 1, "", "parameters"], [26, 2, 1, "", "parameters_unique_names"], [26, 2, 1, "", "pivot_energy"], [26, 3, 1, "", "plot"], [26, 3, 1, "", "plot_error"], [26, 3, 1, "", "reassign"], [26, 3, 1, "", "reference_fluxes"], [26, 3, 1, "", "spectral_index"], [26, 3, 1, "", "spectral_index_error"], [26, 2, 1, "", "table_filename"], [26, 2, 1, "", "tag"], [26, 3, 1, "", "to_dict"], [26, 2, 1, "", "type"], [26, 3, 1, "", "unfreeze"], [26, 3, 1, "", "write"]], "gammapy.astro.darkmatter.ZhaoProfile": [[27, 2, 1, "", "DEFAULT_ALPHA"], [27, 2, 1, "", "DEFAULT_BETA"], [27, 2, 1, "", "DEFAULT_GAMMA"], [27, 2, 1, "", "DEFAULT_SCALE_RADIUS"], [27, 2, 1, "", "DISTANCE_GC"], [27, 2, 1, "", "LOCAL_DENSITY"], [27, 3, 1, "", "__call__"], [27, 3, 1, "", "evaluate"], [27, 3, 1, "", "integral"], [27, 3, 1, "", "integrate_spectrum_separation"], [27, 3, 1, "", "scale_to_local_density"]], "gammapy.astro.population": [[28, 1, 1, "", "CaseBattacharya1998"], [29, 1, 1, "", "Exponential"], [30, 1, 1, "", "FaucherKaspi2006"], [31, 1, 1, "", "FaucherKaspi2006VelocityBimodal"], [32, 1, 1, "", "FaucherKaspi2006VelocityMaxwellian"], [33, 1, 1, "", "FaucherSpiral"], [34, 1, 1, "", "LogSpiral"], [35, 1, 1, "", "Lorimer2006"], [36, 1, 1, "", "Paczynski1990"], [37, 1, 1, "", "Paczynski1990Velocity"], [38, 1, 1, "", "ValleeSpiral"], [39, 1, 1, "", "YusifovKucuk2004"], [40, 1, 1, "", "YusifovKucuk2004B"], [41, 4, 1, "", "add_observed_parameters"], [42, 4, 1, "", "add_pulsar_parameters"], [43, 4, 1, "", "add_pwn_parameters"], [44, 4, 1, "", "add_snr_parameters"], [45, 4, 1, "", "make_base_catalog_galactic"], [46, 4, 1, "", "make_catalog_random_positions_cube"], [47, 4, 1, "", "make_catalog_random_positions_sphere"], [48, 5, 1, "", "radial_distributions"], [49, 5, 1, "", "velocity_distributions"]], "gammapy.astro.population.CaseBattacharya1998": [[28, 3, 1, "", "__call__"], [28, 2, 1, "", "alpha"], [28, 2, 1, "", "amplitude"], [28, 2, 1, "", "bbox_with_units"], [28, 2, 1, "", "beta"], [28, 2, 1, "", "bounding_box"], [28, 2, 1, "", "bounds"], [28, 3, 1, "", "coerce_units"], [28, 2, 1, "", "col_fit_deriv"], [28, 3, 1, "", "copy"], [28, 2, 1, "", "cov_matrix"], [28, 3, 1, "", "deepcopy"], [28, 2, 1, "", "eqcons"], [28, 3, 1, "", "evaluate"], [28, 2, 1, "", "evolved"], [28, 2, 1, "", "fit_deriv"], [28, 2, 1, "", "fittable"], [28, 2, 1, "", "fixed"], [28, 3, 1, "", "get_bounding_box"], [28, 3, 1, "", "has_inverse"], [28, 2, 1, "", "has_user_bounding_box"], [28, 2, 1, "", "has_user_inverse"], [28, 2, 1, "", "ineqcons"], [28, 3, 1, "", "input_shape"], [28, 2, 1, "", "input_units"], [28, 2, 1, "", "input_units_allow_dimensionless"], [28, 2, 1, "", "input_units_equivalencies"], [28, 2, 1, "", "input_units_strict"], [28, 2, 1, "", "inputs"], [28, 2, 1, "", "inverse"], [28, 2, 1, "", "linear"], [28, 2, 1, "", "meta"], [28, 2, 1, "", "model_constraints"], [28, 2, 1, "", "model_set_axis"], [28, 2, 1, "", "n_inputs"], [28, 2, 1, "", "n_outputs"], [28, 2, 1, "", "n_submodels"], [28, 2, 1, "", "name"], [28, 3, 1, "", "output_units"], [28, 2, 1, "", "outputs"], [28, 2, 1, "", "param_names"], [28, 2, 1, "", "param_sets"], [28, 2, 1, "", "parameter_constraints"], [28, 2, 1, "", "parameters"], [28, 3, 1, "", "prepare_inputs"], [28, 3, 1, "", "prepare_outputs"], [28, 3, 1, "", "rename"], [28, 3, 1, "", "render"], [28, 2, 1, "", "return_units"], [28, 2, 1, "", "separable"], [28, 3, 1, "", "set_slice_args"], [28, 2, 1, "", "standard_broadcasting"], [28, 2, 1, "", "stds"], [28, 3, 1, "", "strip_units_from_tree"], [28, 3, 1, "", "sum_of_implicit_terms"], [28, 2, 1, "", "sync_constraints"], [28, 2, 1, "", "tied"], [28, 2, 1, "", "uses_quantity"], [28, 3, 1, "", "with_units_from_data"], [28, 3, 1, "", "without_units_for_data"]], "gammapy.astro.population.Exponential": [[29, 3, 1, "", "__call__"], [29, 2, 1, "", "amplitude"], [29, 2, 1, "", "bbox_with_units"], [29, 2, 1, "", "bounding_box"], [29, 2, 1, "", "bounds"], [29, 3, 1, "", "coerce_units"], [29, 2, 1, "", "col_fit_deriv"], [29, 3, 1, "", "copy"], [29, 2, 1, "", "cov_matrix"], [29, 3, 1, "", "deepcopy"], [29, 2, 1, "", "eqcons"], [29, 3, 1, "", "evaluate"], [29, 2, 1, "", "evolved"], [29, 2, 1, "", "fit_deriv"], [29, 2, 1, "", "fittable"], [29, 2, 1, "", "fixed"], [29, 3, 1, "", "get_bounding_box"], [29, 3, 1, "", "has_inverse"], [29, 2, 1, "", "has_user_bounding_box"], [29, 2, 1, "", "has_user_inverse"], [29, 2, 1, "", "ineqcons"], [29, 3, 1, "", "input_shape"], [29, 2, 1, "", "input_units"], [29, 2, 1, "", "input_units_allow_dimensionless"], [29, 2, 1, "", "input_units_equivalencies"], [29, 2, 1, "", "input_units_strict"], [29, 2, 1, "", "inputs"], [29, 2, 1, "", "inverse"], [29, 2, 1, "", "linear"], [29, 2, 1, "", "meta"], [29, 2, 1, "", "model_constraints"], [29, 2, 1, "", "model_set_axis"], [29, 2, 1, "", "n_inputs"], [29, 2, 1, "", "n_outputs"], [29, 2, 1, "", "n_submodels"], [29, 2, 1, "", "name"], [29, 3, 1, "", "output_units"], [29, 2, 1, "", "outputs"], [29, 2, 1, "", "param_names"], [29, 2, 1, "", "param_sets"], [29, 2, 1, "", "parameter_constraints"], [29, 2, 1, "", "parameters"], [29, 3, 1, "", "prepare_inputs"], [29, 3, 1, "", "prepare_outputs"], [29, 3, 1, "", "rename"], [29, 3, 1, "", "render"], [29, 2, 1, "", "return_units"], [29, 2, 1, "", "separable"], [29, 3, 1, "", "set_slice_args"], [29, 2, 1, "", "standard_broadcasting"], [29, 2, 1, "", "stds"], [29, 3, 1, "", "strip_units_from_tree"], [29, 3, 1, "", "sum_of_implicit_terms"], [29, 2, 1, "", "sync_constraints"], [29, 2, 1, "", "tied"], [29, 2, 1, "", "uses_quantity"], [29, 3, 1, "", "with_units_from_data"], [29, 3, 1, "", "without_units_for_data"], [29, 2, 1, "", "z_0"]], "gammapy.astro.population.FaucherKaspi2006": [[30, 3, 1, "", "__call__"], [30, 2, 1, "", "amplitude"], [30, 2, 1, "", "bbox_with_units"], [30, 2, 1, "", "bounding_box"], [30, 2, 1, "", "bounds"], [30, 3, 1, "", "coerce_units"], [30, 2, 1, "", "col_fit_deriv"], [30, 3, 1, "", "copy"], [30, 2, 1, "", "cov_matrix"], [30, 3, 1, "", "deepcopy"], [30, 2, 1, "", "eqcons"], [30, 3, 1, "", "evaluate"], [30, 2, 1, "", "evolved"], [30, 2, 1, "", "fit_deriv"], [30, 2, 1, "", "fittable"], [30, 2, 1, "", "fixed"], [30, 3, 1, "", "get_bounding_box"], [30, 3, 1, "", "has_inverse"], [30, 2, 1, "", "has_user_bounding_box"], [30, 2, 1, "", "has_user_inverse"], [30, 2, 1, "", "ineqcons"], [30, 3, 1, "", "input_shape"], [30, 2, 1, "", "input_units"], [30, 2, 1, "", "input_units_allow_dimensionless"], [30, 2, 1, "", "input_units_equivalencies"], [30, 2, 1, "", "input_units_strict"], [30, 2, 1, "", "inputs"], [30, 2, 1, "", "inverse"], [30, 2, 1, "", "linear"], [30, 2, 1, "", "meta"], [30, 2, 1, "", "model_constraints"], [30, 2, 1, "", "model_set_axis"], [30, 2, 1, "", "n_inputs"], [30, 2, 1, "", "n_outputs"], [30, 2, 1, "", "n_submodels"], [30, 2, 1, "", "name"], [30, 3, 1, "", "output_units"], [30, 2, 1, "", "outputs"], [30, 2, 1, "", "param_names"], [30, 2, 1, "", "param_sets"], [30, 2, 1, "", "parameter_constraints"], [30, 2, 1, "", "parameters"], [30, 3, 1, "", "prepare_inputs"], [30, 3, 1, "", "prepare_outputs"], [30, 2, 1, "", "r_0"], [30, 3, 1, "", "rename"], [30, 3, 1, "", "render"], [30, 2, 1, "", "return_units"], [30, 2, 1, "", "separable"], [30, 3, 1, "", "set_slice_args"], [30, 2, 1, "", "sigma"], [30, 2, 1, "", "standard_broadcasting"], [30, 2, 1, "", "stds"], [30, 3, 1, "", "strip_units_from_tree"], [30, 3, 1, "", "sum_of_implicit_terms"], [30, 2, 1, "", "sync_constraints"], [30, 2, 1, "", "tied"], [30, 2, 1, "", "uses_quantity"], [30, 3, 1, "", "with_units_from_data"], [30, 3, 1, "", "without_units_for_data"]], "gammapy.astro.population.FaucherKaspi2006VelocityBimodal": [[31, 3, 1, "", "__call__"], [31, 2, 1, "", "amplitude"], [31, 2, 1, "", "bbox_with_units"], [31, 2, 1, "", "bounding_box"], [31, 2, 1, "", "bounds"], [31, 3, 1, "", "coerce_units"], [31, 2, 1, "", "col_fit_deriv"], [31, 3, 1, "", "copy"], [31, 2, 1, "", "cov_matrix"], [31, 3, 1, "", "deepcopy"], [31, 2, 1, "", "eqcons"], [31, 3, 1, "", "evaluate"], [31, 2, 1, "", "fit_deriv"], [31, 2, 1, "", "fittable"], [31, 2, 1, "", "fixed"], [31, 3, 1, "", "get_bounding_box"], [31, 3, 1, "", "has_inverse"], [31, 2, 1, "", "has_user_bounding_box"], [31, 2, 1, "", "has_user_inverse"], [31, 2, 1, "", "ineqcons"], [31, 3, 1, "", "input_shape"], [31, 2, 1, "", "input_units"], [31, 2, 1, "", "input_units_allow_dimensionless"], [31, 2, 1, "", "input_units_equivalencies"], [31, 2, 1, "", "input_units_strict"], [31, 2, 1, "", "inputs"], [31, 2, 1, "", "inverse"], [31, 2, 1, "", "linear"], [31, 2, 1, "", "meta"], [31, 2, 1, "", "model_constraints"], [31, 2, 1, "", "model_set_axis"], [31, 2, 1, "", "n_inputs"], [31, 2, 1, "", "n_outputs"], [31, 2, 1, "", "n_submodels"], [31, 2, 1, "", "name"], [31, 3, 1, "", "output_units"], [31, 2, 1, "", "outputs"], [31, 2, 1, "", "param_names"], [31, 2, 1, "", "param_sets"], [31, 2, 1, "", "parameter_constraints"], [31, 2, 1, "", "parameters"], [31, 3, 1, "", "prepare_inputs"], [31, 3, 1, "", "prepare_outputs"], [31, 3, 1, "", "rename"], [31, 3, 1, "", "render"], [31, 2, 1, "", "return_units"], [31, 2, 1, "", "separable"], [31, 3, 1, "", "set_slice_args"], [31, 2, 1, "", "sigma_1"], [31, 2, 1, "", "sigma_2"], [31, 2, 1, "", "standard_broadcasting"], [31, 2, 1, "", "stds"], [31, 3, 1, "", "strip_units_from_tree"], [31, 3, 1, "", "sum_of_implicit_terms"], [31, 2, 1, "", "sync_constraints"], [31, 2, 1, "", "tied"], [31, 2, 1, "", "uses_quantity"], [31, 2, 1, "", "w"], [31, 3, 1, "", "with_units_from_data"], [31, 3, 1, "", "without_units_for_data"]], "gammapy.astro.population.FaucherKaspi2006VelocityMaxwellian": [[32, 3, 1, "", "__call__"], [32, 2, 1, "", "amplitude"], [32, 2, 1, "", "bbox_with_units"], [32, 2, 1, "", "bounding_box"], [32, 2, 1, "", "bounds"], [32, 3, 1, "", "coerce_units"], [32, 2, 1, "", "col_fit_deriv"], [32, 3, 1, "", "copy"], [32, 2, 1, "", "cov_matrix"], [32, 3, 1, "", "deepcopy"], [32, 2, 1, "", "eqcons"], [32, 3, 1, "", "evaluate"], [32, 2, 1, "", "fit_deriv"], [32, 2, 1, "", "fittable"], [32, 2, 1, "", "fixed"], [32, 3, 1, "", "get_bounding_box"], [32, 3, 1, "", "has_inverse"], [32, 2, 1, "", "has_user_bounding_box"], [32, 2, 1, "", "has_user_inverse"], [32, 2, 1, "", "ineqcons"], [32, 3, 1, "", "input_shape"], [32, 2, 1, "", "input_units"], [32, 2, 1, "", "input_units_allow_dimensionless"], [32, 2, 1, "", "input_units_equivalencies"], [32, 2, 1, "", "input_units_strict"], [32, 2, 1, "", "inputs"], [32, 2, 1, "", "inverse"], [32, 2, 1, "", "linear"], [32, 2, 1, "", "meta"], [32, 2, 1, "", "model_constraints"], [32, 2, 1, "", "model_set_axis"], [32, 2, 1, "", "n_inputs"], [32, 2, 1, "", "n_outputs"], [32, 2, 1, "", "n_submodels"], [32, 2, 1, "", "name"], [32, 3, 1, "", "output_units"], [32, 2, 1, "", "outputs"], [32, 2, 1, "", "param_names"], [32, 2, 1, "", "param_sets"], [32, 2, 1, "", "parameter_constraints"], [32, 2, 1, "", "parameters"], [32, 3, 1, "", "prepare_inputs"], [32, 3, 1, "", "prepare_outputs"], [32, 3, 1, "", "rename"], [32, 3, 1, "", "render"], [32, 2, 1, "", "return_units"], [32, 2, 1, "", "separable"], [32, 3, 1, "", "set_slice_args"], [32, 2, 1, "", "sigma"], [32, 2, 1, "", "standard_broadcasting"], [32, 2, 1, "", "stds"], [32, 3, 1, "", "strip_units_from_tree"], [32, 3, 1, "", "sum_of_implicit_terms"], [32, 2, 1, "", "sync_constraints"], [32, 2, 1, "", "tied"], [32, 2, 1, "", "uses_quantity"], [32, 3, 1, "", "with_units_from_data"], [32, 3, 1, "", "without_units_for_data"]], "gammapy.astro.population.FaucherSpiral": [[33, 3, 1, "", "__call__"], [33, 2, 1, "", "k"], [33, 2, 1, "", "r_0"], [33, 3, 1, "", "radius"], [33, 2, 1, "", "spiralarms"], [33, 3, 1, "", "theta"], [33, 2, 1, "", "theta_0"], [33, 3, 1, "", "xy_position"]], "gammapy.astro.population.LogSpiral": [[34, 3, 1, "", "radius"], [34, 3, 1, "", "theta"], [34, 3, 1, "", "xy_position"]], "gammapy.astro.population.Lorimer2006": [[35, 2, 1, "", "B"], [35, 2, 1, "", "C"], [35, 3, 1, "", "__call__"], [35, 2, 1, "", "amplitude"], [35, 2, 1, "", "bbox_with_units"], [35, 2, 1, "", "bounding_box"], [35, 2, 1, "", "bounds"], [35, 3, 1, "", "coerce_units"], [35, 2, 1, "", "col_fit_deriv"], [35, 3, 1, "", "copy"], [35, 2, 1, "", "cov_matrix"], [35, 3, 1, "", "deepcopy"], [35, 2, 1, "", "eqcons"], [35, 3, 1, "", "evaluate"], [35, 2, 1, "", "evolved"], [35, 2, 1, "", "fit_deriv"], [35, 2, 1, "", "fittable"], [35, 2, 1, "", "fixed"], [35, 3, 1, "", "get_bounding_box"], [35, 3, 1, "", "has_inverse"], [35, 2, 1, "", "has_user_bounding_box"], [35, 2, 1, "", "has_user_inverse"], [35, 2, 1, "", "ineqcons"], [35, 3, 1, "", "input_shape"], [35, 2, 1, "", "input_units"], [35, 2, 1, "", "input_units_allow_dimensionless"], [35, 2, 1, "", "input_units_equivalencies"], [35, 2, 1, "", "input_units_strict"], [35, 2, 1, "", "inputs"], [35, 2, 1, "", "inverse"], [35, 2, 1, "", "linear"], [35, 2, 1, "", "meta"], [35, 2, 1, "", "model_constraints"], [35, 2, 1, "", "model_set_axis"], [35, 2, 1, "", "n_inputs"], [35, 2, 1, "", "n_outputs"], [35, 2, 1, "", "n_submodels"], [35, 2, 1, "", "name"], [35, 3, 1, "", "output_units"], [35, 2, 1, "", "outputs"], [35, 2, 1, "", "param_names"], [35, 2, 1, "", "param_sets"], [35, 2, 1, "", "parameter_constraints"], [35, 2, 1, "", "parameters"], [35, 3, 1, "", "prepare_inputs"], [35, 3, 1, "", "prepare_outputs"], [35, 3, 1, "", "rename"], [35, 3, 1, "", "render"], [35, 2, 1, "", "return_units"], [35, 2, 1, "", "separable"], [35, 3, 1, "", "set_slice_args"], [35, 2, 1, "", "standard_broadcasting"], [35, 2, 1, "", "stds"], [35, 3, 1, "", "strip_units_from_tree"], [35, 3, 1, "", "sum_of_implicit_terms"], [35, 2, 1, "", "sync_constraints"], [35, 2, 1, "", "tied"], [35, 2, 1, "", "uses_quantity"], [35, 3, 1, "", "with_units_from_data"], [35, 3, 1, "", "without_units_for_data"]], "gammapy.astro.population.Paczynski1990": [[36, 3, 1, "", "__call__"], [36, 2, 1, "", "amplitude"], [36, 2, 1, "", "bbox_with_units"], [36, 2, 1, "", "bounding_box"], [36, 2, 1, "", "bounds"], [36, 3, 1, "", "coerce_units"], [36, 2, 1, "", "col_fit_deriv"], [36, 3, 1, "", "copy"], [36, 2, 1, "", "cov_matrix"], [36, 3, 1, "", "deepcopy"], [36, 2, 1, "", "eqcons"], [36, 3, 1, "", "evaluate"], [36, 2, 1, "", "evolved"], [36, 2, 1, "", "fit_deriv"], [36, 2, 1, "", "fittable"], [36, 2, 1, "", "fixed"], [36, 3, 1, "", "get_bounding_box"], [36, 3, 1, "", "has_inverse"], [36, 2, 1, "", "has_user_bounding_box"], [36, 2, 1, "", "has_user_inverse"], [36, 2, 1, "", "ineqcons"], [36, 3, 1, "", "input_shape"], [36, 2, 1, "", "input_units"], [36, 2, 1, "", "input_units_allow_dimensionless"], [36, 2, 1, "", "input_units_equivalencies"], [36, 2, 1, "", "input_units_strict"], [36, 2, 1, "", "inputs"], [36, 2, 1, "", "inverse"], [36, 2, 1, "", "linear"], [36, 2, 1, "", "meta"], [36, 2, 1, "", "model_constraints"], [36, 2, 1, "", "model_set_axis"], [36, 2, 1, "", "n_inputs"], [36, 2, 1, "", "n_outputs"], [36, 2, 1, "", "n_submodels"], [36, 2, 1, "", "name"], [36, 3, 1, "", "output_units"], [36, 2, 1, "", "outputs"], [36, 2, 1, "", "param_names"], [36, 2, 1, "", "param_sets"], [36, 2, 1, "", "parameter_constraints"], [36, 2, 1, "", "parameters"], [36, 3, 1, "", "prepare_inputs"], [36, 3, 1, "", "prepare_outputs"], [36, 2, 1, "", "r_exp"], [36, 3, 1, "", "rename"], [36, 3, 1, "", "render"], [36, 2, 1, "", "return_units"], [36, 2, 1, "", "separable"], [36, 3, 1, "", "set_slice_args"], [36, 2, 1, "", "standard_broadcasting"], [36, 2, 1, "", "stds"], [36, 3, 1, "", "strip_units_from_tree"], [36, 3, 1, "", "sum_of_implicit_terms"], [36, 2, 1, "", "sync_constraints"], [36, 2, 1, "", "tied"], [36, 2, 1, "", "uses_quantity"], [36, 3, 1, "", "with_units_from_data"], [36, 3, 1, "", "without_units_for_data"]], "gammapy.astro.population.Paczynski1990Velocity": [[37, 3, 1, "", "__call__"], [37, 2, 1, "", "amplitude"], [37, 2, 1, "", "bbox_with_units"], [37, 2, 1, "", "bounding_box"], [37, 2, 1, "", "bounds"], [37, 3, 1, "", "coerce_units"], [37, 2, 1, "", "col_fit_deriv"], [37, 3, 1, "", "copy"], [37, 2, 1, "", "cov_matrix"], [37, 3, 1, "", "deepcopy"], [37, 2, 1, "", "eqcons"], [37, 3, 1, "", "evaluate"], [37, 2, 1, "", "fit_deriv"], [37, 2, 1, "", "fittable"], [37, 2, 1, "", "fixed"], [37, 3, 1, "", "get_bounding_box"], [37, 3, 1, "", "has_inverse"], [37, 2, 1, "", "has_user_bounding_box"], [37, 2, 1, "", "has_user_inverse"], [37, 2, 1, "", "ineqcons"], [37, 3, 1, "", "input_shape"], [37, 2, 1, "", "input_units"], [37, 2, 1, "", "input_units_allow_dimensionless"], [37, 2, 1, "", "input_units_equivalencies"], [37, 2, 1, "", "input_units_strict"], [37, 2, 1, "", "inputs"], [37, 2, 1, "", "inverse"], [37, 2, 1, "", "linear"], [37, 2, 1, "", "meta"], [37, 2, 1, "", "model_constraints"], [37, 2, 1, "", "model_set_axis"], [37, 2, 1, "", "n_inputs"], [37, 2, 1, "", "n_outputs"], [37, 2, 1, "", "n_submodels"], [37, 2, 1, "", "name"], [37, 3, 1, "", "output_units"], [37, 2, 1, "", "outputs"], [37, 2, 1, "", "param_names"], [37, 2, 1, "", "param_sets"], [37, 2, 1, "", "parameter_constraints"], [37, 2, 1, "", "parameters"], [37, 3, 1, "", "prepare_inputs"], [37, 3, 1, "", "prepare_outputs"], [37, 3, 1, "", "rename"], [37, 3, 1, "", "render"], [37, 2, 1, "", "return_units"], [37, 2, 1, "", "separable"], [37, 3, 1, "", "set_slice_args"], [37, 2, 1, "", "standard_broadcasting"], [37, 2, 1, "", "stds"], [37, 3, 1, "", "strip_units_from_tree"], [37, 3, 1, "", "sum_of_implicit_terms"], [37, 2, 1, "", "sync_constraints"], [37, 2, 1, "", "tied"], [37, 2, 1, "", "uses_quantity"], [37, 2, 1, "", "v_0"], [37, 3, 1, "", "with_units_from_data"], [37, 3, 1, "", "without_units_for_data"]], "gammapy.astro.population.ValleeSpiral": [[38, 2, 1, "", "bar_radius"], [38, 2, 1, "", "m"], [38, 2, 1, "", "p"], [38, 2, 1, "", "r_0"], [38, 2, 1, "", "r_sun"], [38, 3, 1, "", "radius"], [38, 2, 1, "", "spiralarms"], [38, 3, 1, "", "theta"], [38, 2, 1, "", "theta_0"], [38, 3, 1, "", "xy_position"]], "gammapy.astro.population.YusifovKucuk2004": [[39, 3, 1, "", "__call__"], [39, 2, 1, "", "a"], [39, 2, 1, "", "amplitude"], [39, 2, 1, "", "b"], [39, 2, 1, "", "bbox_with_units"], [39, 2, 1, "", "bounding_box"], [39, 2, 1, "", "bounds"], [39, 3, 1, "", "coerce_units"], [39, 2, 1, "", "col_fit_deriv"], [39, 3, 1, "", "copy"], [39, 2, 1, "", "cov_matrix"], [39, 3, 1, "", "deepcopy"], [39, 2, 1, "", "eqcons"], [39, 3, 1, "", "evaluate"], [39, 2, 1, "", "evolved"], [39, 2, 1, "", "fit_deriv"], [39, 2, 1, "", "fittable"], [39, 2, 1, "", "fixed"], [39, 3, 1, "", "get_bounding_box"], [39, 3, 1, "", "has_inverse"], [39, 2, 1, "", "has_user_bounding_box"], [39, 2, 1, "", "has_user_inverse"], [39, 2, 1, "", "ineqcons"], [39, 3, 1, "", "input_shape"], [39, 2, 1, "", "input_units"], [39, 2, 1, "", "input_units_allow_dimensionless"], [39, 2, 1, "", "input_units_equivalencies"], [39, 2, 1, "", "input_units_strict"], [39, 2, 1, "", "inputs"], [39, 2, 1, "", "inverse"], [39, 2, 1, "", "linear"], [39, 2, 1, "", "meta"], [39, 2, 1, "", "model_constraints"], [39, 2, 1, "", "model_set_axis"], [39, 2, 1, "", "n_inputs"], [39, 2, 1, "", "n_outputs"], [39, 2, 1, "", "n_submodels"], [39, 2, 1, "", "name"], [39, 3, 1, "", "output_units"], [39, 2, 1, "", "outputs"], [39, 2, 1, "", "param_names"], [39, 2, 1, "", "param_sets"], [39, 2, 1, "", "parameter_constraints"], [39, 2, 1, "", "parameters"], [39, 3, 1, "", "prepare_inputs"], [39, 3, 1, "", "prepare_outputs"], [39, 2, 1, "", "r_1"], [39, 3, 1, "", "rename"], [39, 3, 1, "", "render"], [39, 2, 1, "", "return_units"], [39, 2, 1, "", "separable"], [39, 3, 1, "", "set_slice_args"], [39, 2, 1, "", "standard_broadcasting"], [39, 2, 1, "", "stds"], [39, 3, 1, "", "strip_units_from_tree"], [39, 3, 1, "", "sum_of_implicit_terms"], [39, 2, 1, "", "sync_constraints"], [39, 2, 1, "", "tied"], [39, 2, 1, "", "uses_quantity"], [39, 3, 1, "", "with_units_from_data"], [39, 3, 1, "", "without_units_for_data"]], "gammapy.astro.population.YusifovKucuk2004B": [[40, 3, 1, "", "__call__"], [40, 2, 1, "", "a"], [40, 2, 1, "", "amplitude"], [40, 2, 1, "", "b"], [40, 2, 1, "", "bbox_with_units"], [40, 2, 1, "", "bounding_box"], [40, 2, 1, "", "bounds"], [40, 3, 1, "", "coerce_units"], [40, 2, 1, "", "col_fit_deriv"], [40, 3, 1, "", "copy"], [40, 2, 1, "", "cov_matrix"], [40, 3, 1, "", "deepcopy"], [40, 2, 1, "", "eqcons"], [40, 3, 1, "", "evaluate"], [40, 2, 1, "", "evolved"], [40, 2, 1, "", "fit_deriv"], [40, 2, 1, "", "fittable"], [40, 2, 1, "", "fixed"], [40, 3, 1, "", "get_bounding_box"], [40, 3, 1, "", "has_inverse"], [40, 2, 1, "", "has_user_bounding_box"], [40, 2, 1, "", "has_user_inverse"], [40, 2, 1, "", "ineqcons"], [40, 3, 1, "", "input_shape"], [40, 2, 1, "", "input_units"], [40, 2, 1, "", "input_units_allow_dimensionless"], [40, 2, 1, "", "input_units_equivalencies"], [40, 2, 1, "", "input_units_strict"], [40, 2, 1, "", "inputs"], [40, 2, 1, "", "inverse"], [40, 2, 1, "", "linear"], [40, 2, 1, "", "meta"], [40, 2, 1, "", "model_constraints"], [40, 2, 1, "", "model_set_axis"], [40, 2, 1, "", "n_inputs"], [40, 2, 1, "", "n_outputs"], [40, 2, 1, "", "n_submodels"], [40, 2, 1, "", "name"], [40, 3, 1, "", "output_units"], [40, 2, 1, "", "outputs"], [40, 2, 1, "", "param_names"], [40, 2, 1, "", "param_sets"], [40, 2, 1, "", "parameter_constraints"], [40, 2, 1, "", "parameters"], [40, 3, 1, "", "prepare_inputs"], [40, 3, 1, "", "prepare_outputs"], [40, 3, 1, "", "rename"], [40, 3, 1, "", "render"], [40, 2, 1, "", "return_units"], [40, 2, 1, "", "separable"], [40, 3, 1, "", "set_slice_args"], [40, 2, 1, "", "standard_broadcasting"], [40, 2, 1, "", "stds"], [40, 3, 1, "", "strip_units_from_tree"], [40, 3, 1, "", "sum_of_implicit_terms"], [40, 2, 1, "", "sync_constraints"], [40, 2, 1, "", "tied"], [40, 2, 1, "", "uses_quantity"], [40, 3, 1, "", "with_units_from_data"], [40, 3, 1, "", "without_units_for_data"]], "gammapy.astro.source": [[50, 1, 1, "", "PWN"], [51, 1, 1, "", "Pulsar"], [52, 1, 1, "", "SNR"], [53, 1, 1, "", "SNRTrueloveMcKee"], [54, 1, 1, "", "SimplePulsar"]], "gammapy.astro.source.PWN": [[50, 3, 1, "", "magnetic_field"], [50, 3, 1, "", "radius"]], "gammapy.astro.source.Pulsar": [[51, 3, 1, "", "energy_integrated"], [51, 3, 1, "", "luminosity_spindown"], [51, 3, 1, "", "magnetic_field"], [51, 3, 1, "", "period"], [51, 3, 1, "", "period_dot"], [51, 3, 1, "", "tau"]], "gammapy.astro.source.SNR": [[52, 3, 1, "", "luminosity_tev"], [52, 3, 1, "", "radius"], [52, 3, 1, "", "radius_inner"], [52, 2, 1, "", "sedov_taylor_begin"], [52, 2, 1, "", "sedov_taylor_end"]], "gammapy.astro.source.SNRTrueloveMcKee": [[53, 3, 1, "", "luminosity_tev"], [53, 3, 1, "", "radius"], [53, 3, 1, "", "radius_inner"], [53, 3, 1, "", "radius_reverse_shock"], [53, 2, 1, "", "sedov_taylor_begin"], [53, 2, 1, "", "sedov_taylor_end"]], "gammapy.astro.source.SimplePulsar": [[54, 2, 1, "", "luminosity_spindown"], [54, 2, 1, "", "magnetic_field"], [54, 2, 1, "", "tau"]], "gammapy.catalog": [[55, 5, 1, "", "CATALOG_REGISTRY"], [56, 1, 1, "", "SourceCatalog"], [57, 1, 1, "", "SourceCatalog1LHAASO"], [58, 1, 1, "", "SourceCatalog2FHL"], [59, 1, 1, "", "SourceCatalog2HWC"], [60, 1, 1, "", "SourceCatalog2PC"], [61, 1, 1, "", "SourceCatalog3FGL"], [62, 1, 1, "", "SourceCatalog3FHL"], [63, 1, 1, "", "SourceCatalog3HWC"], [64, 1, 1, "", "SourceCatalog3PC"], [65, 1, 1, "", "SourceCatalog4FGL"], [66, 1, 1, "", "SourceCatalogGammaCat"], [67, 1, 1, "", "SourceCatalogHGPS"], [68, 1, 1, "", "SourceCatalogLargeScaleHGPS"], [69, 1, 1, "", "SourceCatalogObject"], [70, 1, 1, "", "SourceCatalogObject1LHAASO"], [71, 1, 1, "", "SourceCatalogObject2FHL"], [72, 1, 1, "", "SourceCatalogObject2HWC"], [73, 1, 1, "", "SourceCatalogObject2PC"], [74, 1, 1, "", "SourceCatalogObject3FGL"], [75, 1, 1, "", "SourceCatalogObject3FHL"], [76, 1, 1, "", "SourceCatalogObject3HWC"], [77, 1, 1, "", "SourceCatalogObject3PC"], [78, 1, 1, "", "SourceCatalogObject4FGL"], [79, 1, 1, "", "SourceCatalogObjectGammaCat"], [80, 1, 1, "", "SourceCatalogObjectHGPS"], [81, 1, 1, "", "SourceCatalogObjectHGPSComponent"]], "gammapy.catalog.SourceCatalog": [[56, 3, 1, "", "description"], [56, 2, 1, "", "positions"], [56, 3, 1, "", "row_index"], [56, 3, 1, "", "source_name"], [56, 2, 1, "", "tag"], [56, 3, 1, "", "to_models"]], "gammapy.catalog.SourceCatalog1LHAASO": [[57, 2, 1, "", "description"], [57, 2, 1, "", "positions"], [57, 3, 1, "", "row_index"], [57, 3, 1, "", "source_name"], [57, 2, 1, "", "tag"], [57, 3, 1, "", "to_models"]], "gammapy.catalog.SourceCatalog2FHL": [[58, 2, 1, "", "description"], [58, 2, 1, "", "positions"], [58, 3, 1, "", "row_index"], [58, 3, 1, "", "source_name"], [58, 2, 1, "", "tag"], [58, 3, 1, "", "to_models"]], "gammapy.catalog.SourceCatalog2HWC": [[59, 2, 1, "", "description"], [59, 2, 1, "", "positions"], [59, 3, 1, "", "row_index"], [59, 3, 1, "", "source_name"], [59, 2, 1, "", "tag"], [59, 3, 1, "", "to_models"]], "gammapy.catalog.SourceCatalog2PC": [[60, 2, 1, "", "description"], [60, 2, 1, "", "positions"], [60, 3, 1, "", "row_index"], [60, 3, 1, "", "source_name"], [60, 2, 1, "", "tag"], [60, 3, 1, "", "to_models"]], "gammapy.catalog.SourceCatalog3FGL": [[61, 2, 1, "", "description"], [61, 2, 1, "", "positions"], [61, 3, 1, "", "row_index"], [61, 3, 1, "", "source_name"], [61, 2, 1, "", "tag"], [61, 3, 1, "", "to_models"]], "gammapy.catalog.SourceCatalog3FHL": [[62, 2, 1, "", "description"], [62, 2, 1, "", "positions"], [62, 3, 1, "", "row_index"], [62, 3, 1, "", "source_name"], [62, 2, 1, "", "tag"], [62, 3, 1, "", "to_models"]], "gammapy.catalog.SourceCatalog3HWC": [[63, 2, 1, "", "description"], [63, 2, 1, "", "positions"], [63, 3, 1, "", "row_index"], [63, 3, 1, "", "source_name"], [63, 2, 1, "", "tag"], [63, 3, 1, "", "to_models"]], "gammapy.catalog.SourceCatalog3PC": [[64, 2, 1, "", "description"], [64, 2, 1, "", "positions"], [64, 3, 1, "", "row_index"], [64, 3, 1, "", "source_name"], [64, 2, 1, "", "tag"], [64, 3, 1, "", "to_models"]], "gammapy.catalog.SourceCatalog4FGL": [[65, 2, 1, "", "description"], [65, 2, 1, "", "positions"], [65, 3, 1, "", "row_index"], [65, 3, 1, "", "source_name"], [65, 2, 1, "", "tag"], [65, 3, 1, "", "to_models"]], "gammapy.catalog.SourceCatalogGammaCat": [[66, 2, 1, "", "description"], [66, 2, 1, "", "positions"], [66, 3, 1, "", "row_index"], [66, 3, 1, "", "source_name"], [66, 2, 1, "", "tag"], [66, 3, 1, "", "to_models"]], "gammapy.catalog.SourceCatalogHGPS": [[67, 2, 1, "", "description"], [67, 3, 1, "", "gaussian_component"], [67, 2, 1, "", "large_scale_component"], [67, 2, 1, "", "positions"], [67, 3, 1, "", "row_index"], [67, 3, 1, "", "source_name"], [67, 2, 1, "", "table_associations"], [67, 2, 1, "", "table_components"], [67, 2, 1, "", "table_identifications"], [67, 2, 1, "", "table_large_scale_component"], [67, 2, 1, "", "tag"], [67, 3, 1, "", "to_models"]], "gammapy.catalog.SourceCatalogLargeScaleHGPS": [[68, 3, 1, "", "evaluate"], [68, 3, 1, "", "peak_brightness"], [68, 3, 1, "", "peak_brightness_error"], [68, 3, 1, "", "peak_latitude"], [68, 3, 1, "", "peak_latitude_error"], [68, 3, 1, "", "width"], [68, 3, 1, "", "width_error"]], "gammapy.catalog.SourceCatalogObject": [[69, 2, 1, "", "name"], [69, 2, 1, "", "position"], [69, 2, 1, "", "row_index"]], "gammapy.catalog.SourceCatalogObject1LHAASO": [[70, 2, 1, "", "name"], [70, 2, 1, "", "position"], [70, 2, 1, "", "row_index"], [70, 3, 1, "", "sky_model"], [70, 3, 1, "", "spatial_model"], [70, 3, 1, "", "spectral_model"]], "gammapy.catalog.SourceCatalogObject2FHL": [[71, 2, 1, "", "asso"], [71, 2, 1, "", "energy_range"], [71, 2, 1, "", "flux_points"], [71, 2, 1, "", "flux_points_meta"], [71, 2, 1, "", "flux_points_table"], [71, 3, 1, "", "info"], [71, 2, 1, "", "is_pointlike"], [71, 2, 1, "", "name"], [71, 2, 1, "", "position"], [71, 2, 1, "", "row_index"], [71, 3, 1, "", "sky_model"], [71, 3, 1, "", "spatial_model"], [71, 3, 1, "", "spectral_model"]], "gammapy.catalog.SourceCatalogObject2HWC": [[72, 3, 1, "", "info"], [72, 2, 1, "", "n_models"], [72, 2, 1, "", "name"], [72, 2, 1, "", "position"], [72, 2, 1, "", "row_index"], [72, 3, 1, "", "sky_model"], [72, 3, 1, "", "spatial_model"], [72, 3, 1, "", "spectral_model"]], "gammapy.catalog.SourceCatalogObject2PC": [[73, 2, 1, "", "flux_points"], [73, 2, 1, "", "flux_points_table"], [73, 3, 1, "", "info"], [73, 2, 1, "", "lightcurve"], [73, 2, 1, "", "name"], [73, 2, 1, "", "position"], [73, 2, 1, "", "row_index"], [73, 3, 1, "", "sky_model"], [73, 3, 1, "", "spatial_model"], [73, 3, 1, "", "spectral_model"]], "gammapy.catalog.SourceCatalogObject3FGL": [[74, 2, 1, "", "asso"], [74, 2, 1, "", "energy_range"], [74, 2, 1, "", "flux_points"], [74, 2, 1, "", "flux_points_meta"], [74, 2, 1, "", "flux_points_table"], [74, 3, 1, "", "info"], [74, 2, 1, "", "is_pointlike"], [74, 3, 1, "", "lightcurve"], [74, 2, 1, "", "name"], [74, 2, 1, "", "position"], [74, 2, 1, "", "row_index"], [74, 3, 1, "", "sky_model"], [74, 3, 1, "", "spatial_model"], [74, 3, 1, "", "spectral_model"]], "gammapy.catalog.SourceCatalogObject3FHL": [[75, 2, 1, "", "asso"], [75, 2, 1, "", "energy_range"], [75, 2, 1, "", "flux_points"], [75, 2, 1, "", "flux_points_meta"], [75, 2, 1, "", "flux_points_table"], [75, 3, 1, "", "info"], [75, 2, 1, "", "is_pointlike"], [75, 2, 1, "", "name"], [75, 2, 1, "", "position"], [75, 2, 1, "", "row_index"], [75, 3, 1, "", "sky_model"], [75, 3, 1, "", "spatial_model"], [75, 3, 1, "", "spectral_model"]], "gammapy.catalog.SourceCatalogObject3HWC": [[76, 3, 1, "", "info"], [76, 2, 1, "", "is_pointlike"], [76, 2, 1, "", "n_models"], [76, 2, 1, "", "name"], [76, 2, 1, "", "position"], [76, 2, 1, "", "row_index"], [76, 3, 1, "", "sky_model"], [76, 3, 1, "", "spatial_model"], [76, 3, 1, "", "spectral_model"]], "gammapy.catalog.SourceCatalogObject3PC": [[77, 2, 1, "", "asso"], [77, 2, 1, "", "flux_points"], [77, 2, 1, "", "flux_points_table"], [77, 3, 1, "", "info"], [77, 2, 1, "", "lightcurve"], [77, 2, 1, "", "name"], [77, 2, 1, "", "position"], [77, 2, 1, "", "row_index"], [77, 3, 1, "", "sky_model"], [77, 3, 1, "", "spatial_model"], [77, 3, 1, "", "spectral_model"]], "gammapy.catalog.SourceCatalogObject4FGL": [[78, 2, 1, "", "asso"], [78, 2, 1, "", "flux_points"], [78, 2, 1, "", "flux_points_meta"], [78, 2, 1, "", "flux_points_table"], [78, 3, 1, "", "info"], [78, 2, 1, "", "is_pointlike"], [78, 3, 1, "", "lightcurve"], [78, 2, 1, "", "name"], [78, 2, 1, "", "position"], [78, 2, 1, "", "row_index"], [78, 3, 1, "", "sky_model"], [78, 3, 1, "", "spatial_model"], [78, 3, 1, "", "spectral_model"]], "gammapy.catalog.SourceCatalogObjectGammaCat": [[79, 2, 1, "", "flux_points"], [79, 2, 1, "", "flux_points_table"], [79, 3, 1, "", "info"], [79, 2, 1, "", "name"], [79, 2, 1, "", "position"], [79, 2, 1, "", "row_index"], [79, 3, 1, "", "sky_model"], [79, 3, 1, "", "spatial_model"], [79, 3, 1, "", "spectral_model"]], "gammapy.catalog.SourceCatalogObjectHGPS": [[80, 3, 1, "", "components_models"], [80, 2, 1, "", "energy_range"], [80, 2, 1, "", "flux_points"], [80, 2, 1, "", "flux_points_table"], [80, 3, 1, "", "info"], [80, 2, 1, "", "name"], [80, 2, 1, "", "position"], [80, 2, 1, "", "row_index"], [80, 3, 1, "", "sky_model"], [80, 3, 1, "", "spatial_model"], [80, 3, 1, "", "spectral_model"]], "gammapy.catalog.SourceCatalogObjectHGPSComponent": [[81, 2, 1, "", "name"], [81, 2, 1, "", "position"], [81, 2, 1, "", "row_index"], [81, 3, 1, "", "spatial_model"]], "gammapy.data": [[82, 1, 1, "", "DataStore"], [83, 1, 1, "", "EventList"], [84, 1, 1, "", "EventListMetaData"], [85, 1, 1, "", "FixedPointingInfo"], [86, 1, 1, "", "GTI"], [87, 1, 1, "", "HDUIndexTable"], [88, 1, 1, "", "Observation"], [89, 1, 1, "", "ObservationFilter"], [90, 1, 1, "", "ObservationMetaData"], [91, 1, 1, "", "ObservationTable"], [92, 1, 1, "", "Observations"], [93, 1, 1, "", "ObservationsEventsSampler"], [94, 1, 1, "", "PointingInfo"], [95, 1, 1, "", "PointingMode"], [96, 4, 1, "", "get_irfs_features"], [97, 5, 1, "", "observatory_locations"]], "gammapy.data.DataStore": [[82, 2, 1, "", "DEFAULT_HDU_TABLE"], [82, 2, 1, "", "DEFAULT_OBS_TABLE"], [82, 3, 1, "", "check"], [82, 3, 1, "", "copy_obs"], [82, 3, 1, "", "from_dir"], [82, 3, 1, "", "from_events_files"], [82, 3, 1, "", "from_file"], [82, 3, 1, "", "get_observations"], [82, 3, 1, "", "info"], [82, 3, 1, "", "obs"], [82, 2, 1, "", "obs_ids"]], "gammapy.data.EventList": [[83, 2, 1, "", "altaz"], [83, 2, 1, "", "altaz_frame"], [83, 2, 1, "", "altaz_from_table"], [83, 3, 1, "", "check"], [83, 3, 1, "", "copy"], [83, 2, 1, "", "energy"], [83, 3, 1, "", "from_stack"], [83, 2, 1, "", "galactic"], [83, 2, 1, "", "galactic_median"], [83, 2, 1, "", "is_pointed_observation"], [83, 3, 1, "", "map_coord"], [83, 2, 1, "", "observation_dead_time_fraction"], [83, 2, 1, "", "observation_live_time_duration"], [83, 2, 1, "", "observation_time_duration"], [83, 2, 1, "", "observation_time_start"], [83, 2, 1, "", "observation_time_stop"], [83, 2, 1, "", "observatory_earth_location"], [83, 2, 1, "", "offset"], [83, 2, 1, "", "offset_from_median"], [83, 3, 1, "", "peek"], [83, 3, 1, "", "plot_energy"], [83, 3, 1, "", "plot_energy_offset"], [83, 3, 1, "", "plot_image"], [83, 3, 1, "", "plot_offset2_distribution"], [83, 3, 1, "", "plot_time"], [83, 2, 1, "", "pointing_radec"], [83, 2, 1, "", "radec"], [83, 3, 1, "", "read"], [83, 3, 1, "", "select_energy"], [83, 3, 1, "", "select_mask"], [83, 3, 1, "", "select_offset"], [83, 3, 1, "", "select_parameter"], [83, 3, 1, "", "select_rad_max"], [83, 3, 1, "", "select_region"], [83, 3, 1, "", "select_row_subset"], [83, 3, 1, "", "select_time"], [83, 3, 1, "", "stack"], [83, 2, 1, "", "time"], [83, 2, 1, "", "time_ref"], [83, 3, 1, "", "to_table_hdu"]], "gammapy.data.EventListMetaData": [[84, 3, 1, "", "construct"], [84, 3, 1, "", "copy"], [84, 3, 1, "", "dict"], [84, 3, 1, "", "from_header"], [84, 3, 1, "", "from_orm"], [84, 3, 1, "", "json"], [84, 2, 1, "", "model_computed_fields"], [84, 2, 1, "", "model_config"], [84, 3, 1, "", "model_construct"], [84, 3, 1, "", "model_copy"], [84, 3, 1, "", "model_dump"], [84, 3, 1, "", "model_dump_json"], [84, 2, 1, "", "model_extra"], [84, 2, 1, "", "model_fields"], [84, 2, 1, "", "model_fields_set"], [84, 3, 1, "", "model_json_schema"], [84, 3, 1, "", "model_parametrized_name"], [84, 3, 1, "", "model_post_init"], [84, 3, 1, "", "model_rebuild"], [84, 3, 1, "", "model_validate"], [84, 3, 1, "", "model_validate_json"], [84, 3, 1, "", "model_validate_strings"], [84, 3, 1, "", "parse_file"], [84, 3, 1, "", "parse_obj"], [84, 3, 1, "", "parse_raw"], [84, 3, 1, "", "schema"], [84, 3, 1, "", "schema_json"], [84, 2, 1, "", "tag"], [84, 3, 1, "", "to_header"], [84, 3, 1, "", "to_yaml"], [84, 3, 1, "", "update_forward_refs"], [84, 3, 1, "", "validate"]], "gammapy.data.FixedPointingInfo": [[85, 2, 1, "", "fixed_altaz"], [85, 2, 1, "", "fixed_icrs"], [85, 3, 1, "", "from_fits_header"], [85, 3, 1, "", "get_altaz"], [85, 3, 1, "", "get_icrs"], [85, 2, 1, "", "mode"], [85, 3, 1, "", "read"], [85, 3, 1, "", "to_fits_header"]], "gammapy.data.GTI": [[86, 3, 1, "", "copy"], [86, 3, 1, "", "create"], [86, 3, 1, "", "delete_interval"], [86, 3, 1, "", "from_stack"], [86, 3, 1, "", "from_table_hdu"], [86, 3, 1, "", "from_time_intervals"], [86, 3, 1, "", "group_table"], [86, 2, 1, "", "met_start"], [86, 2, 1, "", "met_stop"], [86, 3, 1, "", "read"], [86, 3, 1, "", "select_time"], [86, 3, 1, "", "stack"], [86, 2, 1, "", "time_delta"], [86, 2, 1, "", "time_intervals"], [86, 2, 1, "", "time_ref"], [86, 2, 1, "", "time_start"], [86, 2, 1, "", "time_stop"], [86, 2, 1, "", "time_sum"], [86, 3, 1, "", "to_table_hdu"], [86, 3, 1, "", "union"], [86, 3, 1, "", "write"]], "gammapy.data.HDUIndexTable": [[87, 2, 1, "", "ColumnClass"], [87, 2, 1, "", "VALID_HDU_CLASS"], [87, 2, 1, "", "VALID_HDU_TYPE"], [87, 3, 1, "", "add_column"], [87, 3, 1, "", "add_columns"], [87, 3, 1, "", "add_index"], [87, 3, 1, "", "add_row"], [87, 3, 1, "", "argsort"], [87, 3, 1, "", "as_array"], [87, 2, 1, "", "base_dir"], [87, 2, 1, "", "colnames"], [87, 3, 1, "", "convert_bytestring_to_unicode"], [87, 3, 1, "", "convert_unicode_to_bytestring"], [87, 3, 1, "", "copy"], [87, 2, 1, "", "dtype"], [87, 3, 1, "", "field"], [87, 3, 1, "", "filled"], [87, 3, 1, "", "from_pandas"], [87, 3, 1, "", "group_by"], [87, 2, 1, "", "groups"], [87, 2, 1, "", "has_masked_columns"], [87, 2, 1, "", "has_masked_values"], [87, 2, 1, "", "has_mixin_columns"], [87, 2, 1, "", "hdu_class_unique"], [87, 3, 1, "", "hdu_location"], [87, 2, 1, "", "hdu_type_unique"], [87, 2, 1, "", "iloc"], [87, 3, 1, "", "index_column"], [87, 3, 1, "", "index_mode"], [87, 2, 1, "", "indices"], [87, 2, 1, "", "info"], [87, 3, 1, "", "insert_row"], [87, 3, 1, "", "items"], [87, 3, 1, "", "itercols"], [87, 3, 1, "", "iterrows"], [87, 3, 1, "", "keep_columns"], [87, 3, 1, "", "keys"], [87, 2, 1, "", "loc"], [87, 2, 1, "", "loc_indices"], [87, 3, 1, "", "location_info"], [87, 2, 1, "", "mask"], [87, 2, 1, "", "masked"], [87, 2, 1, "", "meta"], [87, 3, 1, "", "more"], [87, 2, 1, "", "obs_id_unique"], [87, 3, 1, "", "pformat"], [87, 3, 1, "", "pformat_all"], [87, 3, 1, "", "pprint"], [87, 3, 1, "", "pprint_all"], [87, 2, 1, "", "pprint_exclude_names"], [87, 2, 1, "", "pprint_include_names"], [87, 3, 1, "", "read"], [87, 3, 1, "", "remove_column"], [87, 3, 1, "", "remove_columns"], [87, 3, 1, "", "remove_indices"], [87, 3, 1, "", "remove_row"], [87, 3, 1, "", "remove_rows"], [87, 3, 1, "", "rename_column"], [87, 3, 1, "", "rename_columns"], [87, 3, 1, "", "replace_column"], [87, 3, 1, "", "reverse"], [87, 3, 1, "", "round"], [87, 3, 1, "", "row_idx"], [87, 3, 1, "", "show_in_browser"], [87, 3, 1, "", "show_in_notebook"], [87, 3, 1, "", "sort"], [87, 3, 1, "", "summary"], [87, 3, 1, "", "to_pandas"], [87, 3, 1, "", "update"], [87, 3, 1, "", "values"], [87, 3, 1, "", "values_equal"], [87, 2, 1, "", "write"]], "gammapy.data.Observation": [[88, 2, 1, "", "aeff"], [88, 2, 1, "", "available_hdus"], [88, 2, 1, "", "available_irfs"], [88, 2, 1, "", "bkg"], [88, 3, 1, "", "check"], [88, 3, 1, "", "copy"], [88, 3, 1, "", "create"], [88, 2, 1, "", "edisp"], [88, 2, 1, "", "events"], [88, 3, 1, "", "get_pointing_altaz"], [88, 3, 1, "", "get_pointing_icrs"], [88, 2, 1, "", "gti"], [88, 2, 1, "", "meta"], [88, 2, 1, "", "observation_dead_time_fraction"], [88, 2, 1, "", "observation_live_time_duration"], [88, 2, 1, "", "observation_time_duration"], [88, 2, 1, "", "observatory_earth_location"], [88, 3, 1, "", "peek"], [88, 2, 1, "", "pointing"], [88, 2, 1, "", "psf"], [88, 2, 1, "", "rad_max"], [88, 3, 1, "", "read"], [88, 3, 1, "", "select_time"], [88, 2, 1, "", "target_radec"], [88, 2, 1, "", "tmid"], [88, 2, 1, "", "tstart"], [88, 2, 1, "", "tstop"], [88, 3, 1, "", "write"]], "gammapy.data.ObservationFilter": [[89, 2, 1, "", "EVENT_FILTER_TYPES"], [89, 3, 1, "", "copy"], [89, 3, 1, "", "filter_events"], [89, 3, 1, "", "filter_gti"], [89, 2, 1, "", "livetime_fraction"]], "gammapy.data.ObservationMetaData": [[90, 3, 1, "", "construct"], [90, 3, 1, "", "copy"], [90, 3, 1, "", "dict"], [90, 3, 1, "", "from_header"], [90, 3, 1, "", "from_orm"], [90, 3, 1, "", "json"], [90, 2, 1, "", "model_computed_fields"], [90, 2, 1, "", "model_config"], [90, 3, 1, "", "model_construct"], [90, 3, 1, "", "model_copy"], [90, 3, 1, "", "model_dump"], [90, 3, 1, "", "model_dump_json"], [90, 2, 1, "", "model_extra"], [90, 2, 1, "", "model_fields"], [90, 2, 1, "", "model_fields_set"], [90, 3, 1, "", "model_json_schema"], [90, 3, 1, "", "model_parametrized_name"], [90, 3, 1, "", "model_post_init"], [90, 3, 1, "", "model_rebuild"], [90, 3, 1, "", "model_validate"], [90, 3, 1, "", "model_validate_json"], [90, 3, 1, "", "model_validate_strings"], [90, 3, 1, "", "parse_file"], [90, 3, 1, "", "parse_obj"], [90, 3, 1, "", "parse_raw"], [90, 3, 1, "", "schema"], [90, 3, 1, "", "schema_json"], [90, 2, 1, "", "tag"], [90, 3, 1, "", "to_header"], [90, 3, 1, "", "to_yaml"], [90, 3, 1, "", "update_forward_refs"], [90, 3, 1, "", "validate"]], "gammapy.data.ObservationTable": [[91, 2, 1, "", "ColumnClass"], [91, 3, 1, "", "add_column"], [91, 3, 1, "", "add_columns"], [91, 3, 1, "", "add_index"], [91, 3, 1, "", "add_row"], [91, 3, 1, "", "argsort"], [91, 3, 1, "", "as_array"], [91, 2, 1, "", "colnames"], [91, 3, 1, "", "convert_bytestring_to_unicode"], [91, 3, 1, "", "convert_unicode_to_bytestring"], [91, 3, 1, "", "copy"], [91, 2, 1, "", "dtype"], [91, 3, 1, "", "field"], [91, 3, 1, "", "filled"], [91, 3, 1, "", "from_pandas"], [91, 3, 1, "", "group_by"], [91, 2, 1, "", "groups"], [91, 2, 1, "", "has_masked_columns"], [91, 2, 1, "", "has_masked_values"], [91, 2, 1, "", "has_mixin_columns"], [91, 2, 1, "", "iloc"], [91, 3, 1, "", "index_column"], [91, 3, 1, "", "index_mode"], [91, 2, 1, "", "indices"], [91, 2, 1, "", "info"], [91, 3, 1, "", "insert_row"], [91, 3, 1, "", "items"], [91, 3, 1, "", "itercols"], [91, 3, 1, "", "iterrows"], [91, 3, 1, "", "keep_columns"], [91, 3, 1, "", "keys"], [91, 2, 1, "", "loc"], [91, 2, 1, "", "loc_indices"], [91, 2, 1, "", "mask"], [91, 2, 1, "", "masked"], [91, 2, 1, "", "meta"], [91, 3, 1, "", "more"], [91, 3, 1, "", "pformat"], [91, 3, 1, "", "pformat_all"], [91, 2, 1, "", "pointing_galactic"], [91, 2, 1, "", "pointing_radec"], [91, 3, 1, "", "pprint"], [91, 3, 1, "", "pprint_all"], [91, 2, 1, "", "pprint_exclude_names"], [91, 2, 1, "", "pprint_include_names"], [91, 3, 1, "", "read"], [91, 3, 1, "", "remove_column"], [91, 3, 1, "", "remove_columns"], [91, 3, 1, "", "remove_indices"], [91, 3, 1, "", "remove_row"], [91, 3, 1, "", "remove_rows"], [91, 3, 1, "", "rename_column"], [91, 3, 1, "", "rename_columns"], [91, 3, 1, "", "replace_column"], [91, 3, 1, "", "reverse"], [91, 3, 1, "", "round"], [91, 3, 1, "", "select_obs_id"], [91, 3, 1, "", "select_observations"], [91, 3, 1, "", "select_range"], [91, 3, 1, "", "select_sky_circle"], [91, 3, 1, "", "select_time_range"], [91, 3, 1, "", "show_in_browser"], [91, 3, 1, "", "show_in_notebook"], [91, 3, 1, "", "sort"], [91, 3, 1, "", "summary"], [91, 2, 1, "", "time_ref"], [91, 2, 1, "", "time_start"], [91, 2, 1, "", "time_stop"], [91, 3, 1, "", "to_pandas"], [91, 3, 1, "", "update"], [91, 3, 1, "", "values"], [91, 3, 1, "", "values_equal"], [91, 2, 1, "", "write"]], "gammapy.data.Observations": [[92, 3, 1, "", "append"], [92, 3, 1, "", "clear"], [92, 3, 1, "", "count"], [92, 3, 1, "", "extend"], [92, 3, 1, "", "from_stack"], [92, 3, 1, "", "group_by_label"], [92, 2, 1, "", "ids"], [92, 3, 1, "", "in_memory_generator"], [92, 3, 1, "", "index"], [92, 3, 1, "", "insert"], [92, 3, 1, "", "pop"], [92, 3, 1, "", "remove"], [92, 3, 1, "", "reverse"], [92, 3, 1, "", "select_time"]], "gammapy.data.ObservationsEventsSampler": [[93, 2, 1, "", "n_jobs"], [93, 2, 1, "", "parallel_backend"], [93, 3, 1, "", "run"], [93, 3, 1, "", "simulate_observation"]], "gammapy.data.PointingInfo": [[94, 2, 1, "", "altaz"], [94, 2, 1, "", "altaz_frame"], [94, 2, 1, "", "altaz_from_table"], [94, 3, 1, "", "altaz_interpolate"], [94, 2, 1, "", "duration"], [94, 3, 1, "", "get_altaz"], [94, 3, 1, "", "get_icrs"], [94, 2, 1, "", "location"], [94, 2, 1, "", "radec"], [94, 3, 1, "", "read"], [94, 2, 1, "", "time"], [94, 2, 1, "", "time_ref"]], "gammapy.data.PointingMode": [[95, 2, 1, "", "DRIFT"], [95, 2, 1, "", "POINTING"]], "gammapy.datasets": [[98, 5, 1, "", "DATASET_REGISTRY"], [99, 1, 1, "", "Dataset"], [100, 1, 1, "", "Datasets"], [101, 1, 1, "", "FermipyDatasetsReader"], [102, 1, 1, "", "FluxPointsDataset"], [103, 1, 1, "", "MapDataset"], [104, 1, 1, "", "MapDatasetEventSampler"], [105, 1, 1, "", "MapDatasetMetaData"], [106, 1, 1, "", "MapDatasetOnOff"], [107, 1, 1, "", "OGIPDatasetReader"], [108, 1, 1, "", "OGIPDatasetWriter"], [109, 1, 1, "", "ObservationEventSampler"], [110, 1, 1, "", "SpectrumDataset"], [111, 1, 1, "", "SpectrumDatasetOnOff"], [112, 4, 1, "", "apply_edisp"], [113, 4, 1, "", "create_empty_map_dataset_from_irfs"], [114, 4, 1, "", "create_map_dataset_from_observation"], [115, 4, 1, "", "create_map_dataset_geoms"], [116, 4, 1, "", "split_dataset"], [4, 0, 0, "-", "utils"]], "gammapy.datasets.Dataset": [[99, 3, 1, "", "copy"], [99, 2, 1, "", "mask"], [99, 2, 1, "", "name"], [99, 3, 1, "", "stat_array"], [99, 3, 1, "", "stat_sum"], [99, 2, 1, "", "tag"], [99, 3, 1, "", "to_dict"]], "gammapy.datasets.Datasets": [[100, 3, 1, "", "append"], [100, 3, 1, "", "clear"], [100, 2, 1, "", "contributes_to_stat"], [100, 3, 1, "", "copy"], [100, 3, 1, "", "count"], [100, 2, 1, "", "energy_axes_are_aligned"], [100, 2, 1, "", "energy_ranges"], [100, 3, 1, "", "extend"], [100, 2, 1, "", "gti"], [100, 3, 1, "", "index"], [100, 3, 1, "", "info_table"], [100, 3, 1, "", "insert"], [100, 2, 1, "", "is_all_same_energy_shape"], [100, 2, 1, "", "is_all_same_shape"], [100, 2, 1, "", "is_all_same_type"], [100, 2, 1, "", "meta_table"], [100, 2, 1, "", "models"], [100, 2, 1, "", "names"], [100, 2, 1, "", "parameters"], [100, 3, 1, "", "pop"], [100, 3, 1, "", "read"], [100, 3, 1, "", "remove"], [100, 3, 1, "", "reverse"], [100, 3, 1, "", "select_time"], [100, 3, 1, "", "slice_by_energy"], [100, 3, 1, "", "stack_reduce"], [100, 3, 1, "", "stat_sum"], [100, 3, 1, "", "to_spectrum_datasets"], [100, 3, 1, "", "write"]], "gammapy.datasets.FermipyDatasetsReader": [[101, 3, 1, "", "create_dataset"], [101, 3, 1, "", "read"], [101, 2, 1, "", "tag"]], "gammapy.datasets.FluxPointsDataset": [[102, 2, 1, "", "available_stat_type"], [102, 3, 1, "", "copy"], [102, 3, 1, "", "data_shape"], [102, 3, 1, "", "flux_pred"], [102, 3, 1, "", "from_dict"], [102, 2, 1, "", "gti"], [102, 2, 1, "", "mask"], [102, 2, 1, "", "mask_safe"], [102, 2, 1, "", "mask_valid"], [102, 2, 1, "", "models"], [102, 2, 1, "", "name"], [102, 3, 1, "", "plot_fit"], [102, 3, 1, "", "plot_residuals"], [102, 3, 1, "", "plot_spectrum"], [102, 3, 1, "", "read"], [102, 3, 1, "", "residuals"], [102, 3, 1, "", "stat_array"], [102, 3, 1, "", "stat_sum"], [102, 2, 1, "", "stat_type"], [102, 2, 1, "", "tag"], [102, 3, 1, "", "to_dict"], [102, 3, 1, "", "write"]], "gammapy.datasets.MapDataset": [[103, 2, 1, "", "background"], [103, 2, 1, "", "background_model"], [103, 3, 1, "", "copy"], [103, 2, 1, "", "counts"], [103, 3, 1, "", "create"], [103, 3, 1, "", "cutout"], [103, 2, 1, "", "data_shape"], [103, 3, 1, "", "downsample"], [103, 2, 1, "", "edisp"], [103, 2, 1, "", "energy_range"], [103, 2, 1, "", "energy_range_fit"], [103, 2, 1, "", "energy_range_safe"], [103, 2, 1, "", "energy_range_total"], [103, 2, 1, "", "evaluators"], [103, 2, 1, "", "excess"], [103, 2, 1, "", "exposure"], [103, 3, 1, "", "fake"], [103, 3, 1, "", "from_dict"], [103, 3, 1, "", "from_geoms"], [103, 3, 1, "", "from_hdulist"], [103, 2, 1, "", "geoms"], [103, 2, 1, "", "gti"], [103, 3, 1, "", "info_dict"], [103, 2, 1, "", "mask"], [103, 2, 1, "", "mask_fit"], [103, 2, 1, "", "mask_fit_image"], [103, 2, 1, "", "mask_image"], [103, 2, 1, "", "mask_safe"], [103, 2, 1, "", "mask_safe_edisp"], [103, 2, 1, "", "mask_safe_image"], [103, 2, 1, "", "mask_safe_psf"], [103, 2, 1, "", "meta"], [103, 2, 1, "", "meta_table"], [103, 2, 1, "", "models"], [103, 2, 1, "", "name"], [103, 3, 1, "", "npred"], [103, 3, 1, "", "npred_background"], [103, 3, 1, "", "npred_signal"], [103, 3, 1, "", "pad"], [103, 3, 1, "", "peek"], [103, 3, 1, "", "plot_residuals"], [103, 3, 1, "", "plot_residuals_spatial"], [103, 3, 1, "", "plot_residuals_spectral"], [103, 2, 1, "", "psf"], [103, 3, 1, "", "read"], [103, 3, 1, "", "resample_energy_axis"], [103, 3, 1, "", "reset_data_cache"], [103, 3, 1, "", "residuals"], [103, 3, 1, "", "slice_by_energy"], [103, 3, 1, "", "slice_by_idx"], [103, 3, 1, "", "stack"], [103, 3, 1, "", "stat_array"], [103, 3, 1, "", "stat_sum"], [103, 2, 1, "", "stat_type"], [103, 2, 1, "", "tag"], [103, 3, 1, "", "to_dict"], [103, 3, 1, "", "to_hdulist"], [103, 3, 1, "", "to_image"], [103, 3, 1, "", "to_masked"], [103, 3, 1, "", "to_region_map_dataset"], [103, 3, 1, "", "to_spectrum_dataset"], [103, 3, 1, "", "write"]], "gammapy.datasets.MapDatasetEventSampler": [[104, 3, 1, "", "event_det_coords"], [104, 3, 1, "", "event_list_meta"], [104, 3, 1, "", "run"], [104, 3, 1, "", "sample_background"], [104, 3, 1, "", "sample_edisp"], [104, 3, 1, "", "sample_psf"], [104, 3, 1, "", "sample_sources"]], "gammapy.datasets.MapDatasetMetaData": [[105, 3, 1, "", "construct"], [105, 3, 1, "", "copy"], [105, 3, 1, "", "dict"], [105, 3, 1, "", "from_header"], [105, 3, 1, "", "from_orm"], [105, 3, 1, "", "json"], [105, 2, 1, "", "model_computed_fields"], [105, 2, 1, "", "model_config"], [105, 3, 1, "", "model_construct"], [105, 3, 1, "", "model_copy"], [105, 3, 1, "", "model_dump"], [105, 3, 1, "", "model_dump_json"], [105, 2, 1, "", "model_extra"], [105, 2, 1, "", "model_fields"], [105, 2, 1, "", "model_fields_set"], [105, 3, 1, "", "model_json_schema"], [105, 3, 1, "", "model_parametrized_name"], [105, 3, 1, "", "model_post_init"], [105, 3, 1, "", "model_rebuild"], [105, 3, 1, "", "model_validate"], [105, 3, 1, "", "model_validate_json"], [105, 3, 1, "", "model_validate_strings"], [105, 3, 1, "", "parse_file"], [105, 3, 1, "", "parse_obj"], [105, 3, 1, "", "parse_raw"], [105, 3, 1, "", "schema"], [105, 3, 1, "", "schema_json"], [105, 3, 1, "", "stack"], [105, 2, 1, "", "tag"], [105, 3, 1, "", "to_header"], [105, 3, 1, "", "to_yaml"], [105, 3, 1, "", "update_forward_refs"], [105, 3, 1, "", "validate"]], "gammapy.datasets.MapDatasetOnOff": [[106, 2, 1, "", "alpha"], [106, 2, 1, "", "background"], [106, 2, 1, "", "background_model"], [106, 3, 1, "", "copy"], [106, 2, 1, "", "counts"], [106, 3, 1, "", "create"], [106, 3, 1, "", "cutout"], [106, 2, 1, "", "data_shape"], [106, 3, 1, "", "downsample"], [106, 2, 1, "", "edisp"], [106, 2, 1, "", "energy_range"], [106, 2, 1, "", "energy_range_fit"], [106, 2, 1, "", "energy_range_safe"], [106, 2, 1, "", "energy_range_total"], [106, 2, 1, "", "evaluators"], [106, 2, 1, "", "excess"], [106, 2, 1, "", "exposure"], [106, 3, 1, "", "fake"], [106, 3, 1, "", "from_dict"], [106, 3, 1, "", "from_geoms"], [106, 3, 1, "", "from_hdulist"], [106, 3, 1, "", "from_map_dataset"], [106, 2, 1, "", "geoms"], [106, 2, 1, "", "gti"], [106, 3, 1, "", "info_dict"], [106, 2, 1, "", "mask"], [106, 2, 1, "", "mask_fit"], [106, 2, 1, "", "mask_fit_image"], [106, 2, 1, "", "mask_image"], [106, 2, 1, "", "mask_safe"], [106, 2, 1, "", "mask_safe_edisp"], [106, 2, 1, "", "mask_safe_image"], [106, 2, 1, "", "mask_safe_psf"], [106, 2, 1, "", "meta"], [106, 2, 1, "", "meta_table"], [106, 2, 1, "", "models"], [106, 2, 1, "", "name"], [106, 3, 1, "", "npred"], [106, 3, 1, "", "npred_background"], [106, 3, 1, "", "npred_off"], [106, 3, 1, "", "npred_signal"], [106, 3, 1, "", "pad"], [106, 3, 1, "", "peek"], [106, 3, 1, "", "plot_residuals"], [106, 3, 1, "", "plot_residuals_spatial"], [106, 3, 1, "", "plot_residuals_spectral"], [106, 2, 1, "", "psf"], [106, 3, 1, "", "read"], [106, 3, 1, "", "resample_energy_axis"], [106, 3, 1, "", "reset_data_cache"], [106, 3, 1, "", "residuals"], [106, 3, 1, "", "slice_by_energy"], [106, 3, 1, "", "slice_by_idx"], [106, 3, 1, "", "stack"], [106, 3, 1, "", "stat_array"], [106, 3, 1, "", "stat_sum"], [106, 2, 1, "", "stat_type"], [106, 2, 1, "", "tag"], [106, 3, 1, "", "to_dict"], [106, 3, 1, "", "to_hdulist"], [106, 3, 1, "", "to_image"], [106, 3, 1, "", "to_map_dataset"], [106, 3, 1, "", "to_masked"], [106, 3, 1, "", "to_region_map_dataset"], [106, 3, 1, "", "to_spectrum_dataset"], [106, 3, 1, "", "write"]], "gammapy.datasets.OGIPDatasetReader": [[107, 3, 1, "", "get_filenames"], [107, 3, 1, "", "get_valid_path"], [107, 3, 1, "", "read"], [107, 3, 1, "", "read_arf"], [107, 3, 1, "", "read_bkg"], [107, 3, 1, "", "read_pha"], [107, 3, 1, "", "read_rmf"], [107, 2, 1, "", "tag"]], "gammapy.datasets.OGIPDatasetWriter": [[108, 3, 1, "", "get_filenames"], [108, 3, 1, "", "get_ogip_meta"], [108, 2, 1, "", "tag"], [108, 3, 1, "", "to_counts_hdulist"], [108, 3, 1, "", "write"], [108, 3, 1, "", "write_arf"], [108, 3, 1, "", "write_bkg"], [108, 3, 1, "", "write_pha"], [108, 3, 1, "", "write_rmf"]], "gammapy.datasets.ObservationEventSampler": [[109, 3, 1, "", "event_det_coords"], [109, 3, 1, "", "event_list_meta"], [109, 3, 1, "", "run"], [109, 3, 1, "", "sample_background"], [109, 3, 1, "", "sample_edisp"], [109, 3, 1, "", "sample_psf"], [109, 3, 1, "", "sample_sources"]], "gammapy.datasets.SpectrumDataset": [[110, 2, 1, "", "background"], [110, 2, 1, "", "background_model"], [110, 3, 1, "", "copy"], [110, 2, 1, "", "counts"], [110, 3, 1, "", "create"], [110, 3, 1, "", "cutout"], [110, 2, 1, "", "data_shape"], [110, 3, 1, "", "downsample"], [110, 2, 1, "", "edisp"], [110, 2, 1, "", "energy_range"], [110, 2, 1, "", "energy_range_fit"], [110, 2, 1, "", "energy_range_safe"], [110, 2, 1, "", "energy_range_total"], [110, 2, 1, "", "evaluators"], [110, 2, 1, "", "excess"], [110, 2, 1, "", "exposure"], [110, 3, 1, "", "fake"], [110, 3, 1, "", "from_dict"], [110, 3, 1, "", "from_geoms"], [110, 3, 1, "", "from_hdulist"], [110, 2, 1, "", "geoms"], [110, 2, 1, "", "gti"], [110, 3, 1, "", "info_dict"], [110, 2, 1, "", "mask"], [110, 2, 1, "", "mask_fit"], [110, 2, 1, "", "mask_fit_image"], [110, 2, 1, "", "mask_image"], [110, 2, 1, "", "mask_safe"], [110, 2, 1, "", "mask_safe_edisp"], [110, 2, 1, "", "mask_safe_image"], [110, 2, 1, "", "mask_safe_psf"], [110, 2, 1, "", "meta"], [110, 2, 1, "", "meta_table"], [110, 2, 1, "", "models"], [110, 2, 1, "", "name"], [110, 3, 1, "", "npred"], [110, 3, 1, "", "npred_background"], [110, 3, 1, "", "npred_signal"], [110, 3, 1, "", "pad"], [110, 3, 1, "", "peek"], [110, 3, 1, "", "plot_counts"], [110, 3, 1, "", "plot_excess"], [110, 3, 1, "", "plot_fit"], [110, 3, 1, "", "plot_masks"], [110, 3, 1, "", "plot_residuals"], [110, 3, 1, "", "plot_residuals_spatial"], [110, 3, 1, "", "plot_residuals_spectral"], [110, 2, 1, "", "psf"], [110, 3, 1, "", "read"], [110, 3, 1, "", "resample_energy_axis"], [110, 3, 1, "", "reset_data_cache"], [110, 3, 1, "", "residuals"], [110, 3, 1, "", "slice_by_energy"], [110, 3, 1, "", "slice_by_idx"], [110, 3, 1, "", "stack"], [110, 3, 1, "", "stat_array"], [110, 3, 1, "", "stat_sum"], [110, 2, 1, "", "stat_type"], [110, 2, 1, "", "tag"], [110, 3, 1, "", "to_dict"], [110, 3, 1, "", "to_hdulist"], [110, 3, 1, "", "to_image"], [110, 3, 1, "", "to_masked"], [110, 3, 1, "", "to_region_map_dataset"], [110, 3, 1, "", "to_spectrum_dataset"], [110, 3, 1, "", "write"]], "gammapy.datasets.SpectrumDatasetOnOff": [[111, 2, 1, "", "alpha"], [111, 2, 1, "", "background"], [111, 2, 1, "", "background_model"], [111, 3, 1, "", "copy"], [111, 2, 1, "", "counts"], [111, 3, 1, "", "create"], [111, 3, 1, "", "cutout"], [111, 2, 1, "", "data_shape"], [111, 3, 1, "", "downsample"], [111, 2, 1, "", "edisp"], [111, 2, 1, "", "energy_range"], [111, 2, 1, "", "energy_range_fit"], [111, 2, 1, "", "energy_range_safe"], [111, 2, 1, "", "energy_range_total"], [111, 2, 1, "", "evaluators"], [111, 2, 1, "", "excess"], [111, 2, 1, "", "exposure"], [111, 3, 1, "", "fake"], [111, 3, 1, "", "from_dict"], [111, 3, 1, "", "from_geoms"], [111, 3, 1, "", "from_hdulist"], [111, 3, 1, "", "from_map_dataset"], [111, 3, 1, "", "from_spectrum_dataset"], [111, 2, 1, "", "geoms"], [111, 2, 1, "", "gti"], [111, 3, 1, "", "info_dict"], [111, 2, 1, "", "mask"], [111, 2, 1, "", "mask_fit"], [111, 2, 1, "", "mask_fit_image"], [111, 2, 1, "", "mask_image"], [111, 2, 1, "", "mask_safe"], [111, 2, 1, "", "mask_safe_edisp"], [111, 2, 1, "", "mask_safe_image"], [111, 2, 1, "", "mask_safe_psf"], [111, 2, 1, "", "meta"], [111, 2, 1, "", "meta_table"], [111, 2, 1, "", "models"], [111, 2, 1, "", "name"], [111, 3, 1, "", "npred"], [111, 3, 1, "", "npred_background"], [111, 3, 1, "", "npred_off"], [111, 3, 1, "", "npred_signal"], [111, 3, 1, "", "pad"], [111, 3, 1, "", "peek"], [111, 3, 1, "", "plot_counts"], [111, 3, 1, "", "plot_excess"], [111, 3, 1, "", "plot_fit"], [111, 3, 1, "", "plot_masks"], [111, 3, 1, "", "plot_residuals"], [111, 3, 1, "", "plot_residuals_spatial"], [111, 3, 1, "", "plot_residuals_spectral"], [111, 2, 1, "", "psf"], [111, 3, 1, "", "read"], [111, 3, 1, "", "resample_energy_axis"], [111, 3, 1, "", "reset_data_cache"], [111, 3, 1, "", "residuals"], [111, 3, 1, "", "slice_by_energy"], [111, 3, 1, "", "slice_by_idx"], [111, 3, 1, "", "stack"], [111, 3, 1, "", "stat_array"], [111, 3, 1, "", "stat_sum"], [111, 2, 1, "", "stat_type"], [111, 2, 1, "", "tag"], [111, 3, 1, "", "to_dict"], [111, 3, 1, "", "to_hdulist"], [111, 3, 1, "", "to_image"], [111, 3, 1, "", "to_map_dataset"], [111, 3, 1, "", "to_masked"], [111, 3, 1, "", "to_region_map_dataset"], [111, 3, 1, "", "to_spectrum_dataset"], [111, 3, 1, "", "write"]], "gammapy.datasets.utils": [[117, 4, 1, "", "apply_edisp"], [118, 4, 1, "", "create_map_dataset_from_dl4"], [119, 4, 1, "", "split_dataset"]], "gammapy.estimators": [[120, 1, 1, "", "ASmoothMapEstimator"], [121, 5, 1, "", "ESTIMATOR_REGISTRY"], [122, 1, 1, "", "EnergyDependentMorphologyEstimator"], [123, 1, 1, "", "Estimator"], [124, 1, 1, "", "ExcessMapEstimator"], [125, 1, 1, "", "FluxMaps"], [126, 1, 1, "", "FluxMetaData"], [127, 1, 1, "", "FluxPoints"], [128, 1, 1, "", "FluxPointsEstimator"], [129, 1, 1, "", "FluxProfileEstimator"], [130, 1, 1, "", "ImageProfile"], [131, 1, 1, "", "ImageProfileEstimator"], [132, 1, 1, "", "LightCurveEstimator"], [133, 1, 1, "", "ParameterEstimator"], [134, 1, 1, "", "SensitivityEstimator"], [135, 1, 1, "", "TSMapEstimator"], [5, 0, 0, "-", "utils"]], "gammapy.estimators.ASmoothMapEstimator": [[120, 2, 1, "", "config_parameters"], [120, 3, 1, "", "copy"], [120, 3, 1, "", "estimate_maps"], [120, 3, 1, "", "get_kernels"], [120, 3, 1, "", "get_scales"], [120, 3, 1, "", "run"], [120, 3, 1, "", "selection_all"], [120, 2, 1, "", "selection_optional"], [120, 2, 1, "", "tag"]], "gammapy.estimators.EnergyDependentMorphologyEstimator": [[122, 2, 1, "", "config_parameters"], [122, 3, 1, "", "copy"], [122, 3, 1, "", "estimate_energy_dependence"], [122, 3, 1, "", "run"], [122, 2, 1, "", "selection_optional"], [122, 2, 1, "", "tag"]], "gammapy.estimators.Estimator": [[123, 2, 1, "", "config_parameters"], [123, 3, 1, "", "copy"], [123, 3, 1, "", "run"], [123, 2, 1, "", "selection_optional"], [123, 2, 1, "", "tag"]], "gammapy.estimators.ExcessMapEstimator": [[124, 2, 1, "", "config_parameters"], [124, 3, 1, "", "copy"], [124, 2, 1, "", "correlation_radius"], [124, 3, 1, "", "estimate_excess_map"], [124, 3, 1, "", "estimate_exposure_reco_energy"], [124, 3, 1, "", "estimate_kernel"], [124, 3, 1, "", "estimate_mask_default"], [124, 3, 1, "", "run"], [124, 2, 1, "", "selection_optional"], [124, 2, 1, "", "tag"]], "gammapy.estimators.FluxMaps": [[125, 2, 1, "", "acceptance_off"], [125, 2, 1, "", "acceptance_on"], [125, 3, 1, "", "all_quantities"], [125, 2, 1, "", "alpha"], [125, 2, 1, "", "available_quantities"], [125, 3, 1, "", "copy"], [125, 2, 1, "", "counts"], [125, 2, 1, "", "dnde"], [125, 2, 1, "", "dnde_err"], [125, 2, 1, "", "dnde_errn"], [125, 2, 1, "", "dnde_errp"], [125, 2, 1, "", "dnde_ref"], [125, 2, 1, "", "dnde_scan_values"], [125, 2, 1, "", "dnde_ul"], [125, 2, 1, "", "e2dnde"], [125, 2, 1, "", "e2dnde_err"], [125, 2, 1, "", "e2dnde_errn"], [125, 2, 1, "", "e2dnde_errp"], [125, 2, 1, "", "e2dnde_ref"], [125, 2, 1, "", "e2dnde_ul"], [125, 2, 1, "", "eflux"], [125, 2, 1, "", "eflux_err"], [125, 2, 1, "", "eflux_errn"], [125, 2, 1, "", "eflux_errp"], [125, 2, 1, "", "eflux_ref"], [125, 2, 1, "", "eflux_ul"], [125, 2, 1, "", "energy_axis"], [125, 2, 1, "", "energy_max"], [125, 2, 1, "", "energy_min"], [125, 2, 1, "", "energy_ref"], [125, 2, 1, "", "filter_success_nan"], [125, 2, 1, "", "flux"], [125, 2, 1, "", "flux_err"], [125, 2, 1, "", "flux_errn"], [125, 2, 1, "", "flux_errp"], [125, 2, 1, "", "flux_ref"], [125, 2, 1, "", "flux_sensitivity"], [125, 2, 1, "", "flux_ul"], [125, 3, 1, "", "from_hdulist"], [125, 3, 1, "", "from_maps"], [125, 3, 1, "", "from_stack"], [125, 2, 1, "", "geom"], [125, 3, 1, "", "get_flux_points"], [125, 2, 1, "", "has_any_ts"], [125, 2, 1, "", "has_stat_profiles"], [125, 2, 1, "", "has_success"], [125, 2, 1, "", "has_ul"], [125, 2, 1, "", "is_convertible_to_flux_sed_type"], [125, 2, 1, "", "is_ul"], [125, 3, 1, "", "iter_by_axis"], [125, 2, 1, "", "n_dof"], [125, 2, 1, "", "n_sigma"], [125, 2, 1, "", "n_sigma_ul"], [125, 2, 1, "", "niter"], [125, 2, 1, "", "norm"], [125, 2, 1, "", "norm_err"], [125, 2, 1, "", "norm_errn"], [125, 2, 1, "", "norm_errp"], [125, 2, 1, "", "norm_sensitivity"], [125, 2, 1, "", "norm_ul"], [125, 2, 1, "", "npred"], [125, 2, 1, "", "npred_background"], [125, 2, 1, "", "npred_excess"], [125, 2, 1, "", "npred_excess_err"], [125, 2, 1, "", "npred_excess_errn"], [125, 2, 1, "", "npred_excess_errp"], [125, 2, 1, "", "npred_excess_ref"], [125, 2, 1, "", "npred_excess_ul"], [125, 3, 1, "", "read"], [125, 2, 1, "", "reference_model"], [125, 2, 1, "", "reference_model_default"], [125, 2, 1, "", "reference_spectral_model"], [125, 2, 1, "", "sed_type_init"], [125, 2, 1, "", "sed_type_plot_default"], [125, 3, 1, "", "slice_by_coord"], [125, 3, 1, "", "slice_by_energy"], [125, 3, 1, "", "slice_by_idx"], [125, 3, 1, "", "slice_by_time"], [125, 2, 1, "", "sqrt_ts"], [125, 2, 1, "", "sqrt_ts_threshold_ul"], [125, 2, 1, "", "stat"], [125, 2, 1, "", "stat_null"], [125, 2, 1, "", "stat_scan"], [125, 2, 1, "", "success"], [125, 3, 1, "", "to_hdulist"], [125, 3, 1, "", "to_maps"], [125, 2, 1, "", "ts"], [125, 2, 1, "", "ts_scan"], [125, 3, 1, "", "write"]], "gammapy.estimators.FluxMetaData": [[126, 3, 1, "", "construct"], [126, 3, 1, "", "copy"], [126, 3, 1, "", "dict"], [126, 3, 1, "", "from_header"], [126, 3, 1, "", "from_orm"], [126, 3, 1, "", "json"], [126, 2, 1, "", "model_computed_fields"], [126, 2, 1, "", "model_config"], [126, 3, 1, "", "model_construct"], [126, 3, 1, "", "model_copy"], [126, 3, 1, "", "model_dump"], [126, 3, 1, "", "model_dump_json"], [126, 2, 1, "", "model_extra"], [126, 2, 1, "", "model_fields"], [126, 2, 1, "", "model_fields_set"], [126, 3, 1, "", "model_json_schema"], [126, 3, 1, "", "model_parametrized_name"], [126, 3, 1, "", "model_post_init"], [126, 3, 1, "", "model_rebuild"], [126, 3, 1, "", "model_validate"], [126, 3, 1, "", "model_validate_json"], [126, 3, 1, "", "model_validate_strings"], [126, 3, 1, "", "parse_file"], [126, 3, 1, "", "parse_obj"], [126, 3, 1, "", "parse_raw"], [126, 3, 1, "", "schema"], [126, 3, 1, "", "schema_json"], [126, 2, 1, "", "tag"], [126, 3, 1, "", "to_header"], [126, 3, 1, "", "to_yaml"], [126, 3, 1, "", "update_forward_refs"], [126, 3, 1, "", "validate"]], "gammapy.estimators.FluxPoints": [[127, 2, 1, "", "acceptance_off"], [127, 2, 1, "", "acceptance_on"], [127, 3, 1, "", "all_quantities"], [127, 2, 1, "", "alpha"], [127, 2, 1, "", "available_quantities"], [127, 3, 1, "", "copy"], [127, 2, 1, "", "counts"], [127, 2, 1, "", "dnde"], [127, 2, 1, "", "dnde_err"], [127, 2, 1, "", "dnde_errn"], [127, 2, 1, "", "dnde_errp"], [127, 2, 1, "", "dnde_ref"], [127, 2, 1, "", "dnde_scan_values"], [127, 2, 1, "", "dnde_ul"], [127, 2, 1, "", "e2dnde"], [127, 2, 1, "", "e2dnde_err"], [127, 2, 1, "", "e2dnde_errn"], [127, 2, 1, "", "e2dnde_errp"], [127, 2, 1, "", "e2dnde_ref"], [127, 2, 1, "", "e2dnde_ul"], [127, 2, 1, "", "eflux"], [127, 2, 1, "", "eflux_err"], [127, 2, 1, "", "eflux_errn"], [127, 2, 1, "", "eflux_errp"], [127, 2, 1, "", "eflux_ref"], [127, 2, 1, "", "eflux_ul"], [127, 2, 1, "", "energy_axis"], [127, 2, 1, "", "energy_max"], [127, 2, 1, "", "energy_min"], [127, 2, 1, "", "energy_ref"], [127, 2, 1, "", "filter_success_nan"], [127, 2, 1, "", "flux"], [127, 2, 1, "", "flux_err"], [127, 2, 1, "", "flux_errn"], [127, 2, 1, "", "flux_errp"], [127, 2, 1, "", "flux_ref"], [127, 2, 1, "", "flux_sensitivity"], [127, 2, 1, "", "flux_ul"], [127, 3, 1, "", "from_hdulist"], [127, 3, 1, "", "from_maps"], [127, 3, 1, "", "from_stack"], [127, 3, 1, "", "from_table"], [127, 2, 1, "", "geom"], [127, 3, 1, "", "get_flux_points"], [127, 2, 1, "", "has_any_ts"], [127, 2, 1, "", "has_stat_profiles"], [127, 2, 1, "", "has_success"], [127, 2, 1, "", "has_ul"], [127, 2, 1, "", "is_convertible_to_flux_sed_type"], [127, 2, 1, "", "is_ul"], [127, 3, 1, "", "iter_by_axis"], [127, 2, 1, "", "n_dof"], [127, 2, 1, "", "n_sigma"], [127, 2, 1, "", "n_sigma_ul"], [127, 2, 1, "", "niter"], [127, 2, 1, "", "norm"], [127, 2, 1, "", "norm_err"], [127, 2, 1, "", "norm_errn"], [127, 2, 1, "", "norm_errp"], [127, 2, 1, "", "norm_sensitivity"], [127, 2, 1, "", "norm_ul"], [127, 2, 1, "", "npred"], [127, 2, 1, "", "npred_background"], [127, 2, 1, "", "npred_excess"], [127, 2, 1, "", "npred_excess_err"], [127, 2, 1, "", "npred_excess_errn"], [127, 2, 1, "", "npred_excess_errp"], [127, 2, 1, "", "npred_excess_ref"], [127, 2, 1, "", "npred_excess_ul"], [127, 3, 1, "", "plot"], [127, 3, 1, "", "plot_ts_profiles"], [127, 3, 1, "", "read"], [127, 3, 1, "", "recompute_ul"], [127, 2, 1, "", "reference_model"], [127, 2, 1, "", "reference_model_default"], [127, 2, 1, "", "reference_spectral_model"], [127, 3, 1, "", "resample_axis"], [127, 2, 1, "", "sed_type_init"], [127, 2, 1, "", "sed_type_plot_default"], [127, 3, 1, "", "slice_by_coord"], [127, 3, 1, "", "slice_by_energy"], [127, 3, 1, "", "slice_by_idx"], [127, 3, 1, "", "slice_by_time"], [127, 2, 1, "", "sqrt_ts"], [127, 2, 1, "", "sqrt_ts_threshold_ul"], [127, 2, 1, "", "stat"], [127, 2, 1, "", "stat_null"], [127, 2, 1, "", "stat_scan"], [127, 2, 1, "", "success"], [127, 3, 1, "", "to_hdulist"], [127, 3, 1, "", "to_maps"], [127, 3, 1, "", "to_table"], [127, 2, 1, "", "ts"], [127, 2, 1, "", "ts_scan"], [127, 3, 1, "", "write"]], "gammapy.estimators.FluxPointsEstimator": [[128, 2, 1, "", "config_parameters"], [128, 3, 1, "", "copy"], [128, 3, 1, "", "estimate_best_fit"], [128, 3, 1, "", "estimate_counts"], [128, 3, 1, "", "estimate_errn_errp"], [128, 3, 1, "", "estimate_flux_point"], [128, 3, 1, "", "estimate_npred"], [128, 3, 1, "", "estimate_npred_excess"], [128, 3, 1, "", "estimate_scan"], [128, 3, 1, "", "estimate_ts"], [128, 3, 1, "", "estimate_ul"], [128, 3, 1, "", "get_scale_model"], [128, 2, 1, "", "n_jobs"], [128, 2, 1, "", "parallel_backend"], [128, 3, 1, "", "run"], [128, 2, 1, "", "selection_optional"], [128, 2, 1, "", "tag"]], "gammapy.estimators.FluxProfileEstimator": [[129, 2, 1, "", "config_parameters"], [129, 3, 1, "", "copy"], [129, 3, 1, "", "estimate_best_fit"], [129, 3, 1, "", "estimate_counts"], [129, 3, 1, "", "estimate_errn_errp"], [129, 3, 1, "", "estimate_flux_point"], [129, 3, 1, "", "estimate_npred"], [129, 3, 1, "", "estimate_npred_excess"], [129, 3, 1, "", "estimate_scan"], [129, 3, 1, "", "estimate_ts"], [129, 3, 1, "", "estimate_ul"], [129, 3, 1, "", "get_scale_model"], [129, 2, 1, "", "n_jobs"], [129, 2, 1, "", "parallel_backend"], [129, 2, 1, "", "projected_distance_axis"], [129, 3, 1, "", "run"], [129, 2, 1, "", "selection_optional"], [129, 2, 1, "", "tag"]], "gammapy.estimators.ImageProfile": [[130, 3, 1, "", "normalize"], [130, 3, 1, "", "peek"], [130, 3, 1, "", "plot"], [130, 3, 1, "", "plot_err"], [130, 2, 1, "", "profile"], [130, 2, 1, "", "profile_err"], [130, 3, 1, "", "smooth"], [130, 2, 1, "", "x_max"], [130, 2, 1, "", "x_min"], [130, 2, 1, "", "x_ref"]], "gammapy.estimators.ImageProfileEstimator": [[131, 2, 1, "", "config_parameters"], [131, 3, 1, "", "copy"], [131, 3, 1, "", "run"], [131, 2, 1, "", "selection_optional"], [131, 2, 1, "", "tag"]], "gammapy.estimators.LightCurveEstimator": [[132, 2, 1, "", "config_parameters"], [132, 3, 1, "", "copy"], [132, 3, 1, "", "estimate_best_fit"], [132, 3, 1, "", "estimate_counts"], [132, 3, 1, "", "estimate_errn_errp"], [132, 3, 1, "", "estimate_flux_point"], [132, 3, 1, "", "estimate_npred"], [132, 3, 1, "", "estimate_npred_excess"], [132, 3, 1, "", "estimate_scan"], [132, 3, 1, "", "estimate_time_bin_flux"], [132, 3, 1, "", "estimate_ts"], [132, 3, 1, "", "estimate_ul"], [132, 3, 1, "", "expand_map"], [132, 3, 1, "", "get_scale_model"], [132, 2, 1, "", "n_jobs"], [132, 2, 1, "", "parallel_backend"], [132, 3, 1, "", "run"], [132, 2, 1, "", "selection_optional"], [132, 2, 1, "", "tag"]], "gammapy.estimators.ParameterEstimator": [[133, 2, 1, "", "config_parameters"], [133, 3, 1, "", "copy"], [133, 3, 1, "", "estimate_best_fit"], [133, 3, 1, "", "estimate_counts"], [133, 3, 1, "", "estimate_errn_errp"], [133, 3, 1, "", "estimate_npred"], [133, 3, 1, "", "estimate_scan"], [133, 3, 1, "", "estimate_ts"], [133, 3, 1, "", "estimate_ul"], [133, 3, 1, "", "run"], [133, 2, 1, "", "selection_optional"], [133, 2, 1, "", "tag"]], "gammapy.estimators.SensitivityEstimator": [[134, 2, 1, "", "config_parameters"], [134, 3, 1, "", "copy"], [134, 3, 1, "", "estimate_min_e2dnde"], [134, 3, 1, "", "estimate_min_excess"], [134, 3, 1, "", "run"], [134, 2, 1, "", "selection_optional"], [134, 2, 1, "", "tag"]], "gammapy.estimators.TSMapEstimator": [[135, 2, 1, "", "config_parameters"], [135, 3, 1, "", "copy"], [135, 3, 1, "", "estimate_fit_input_maps"], [135, 3, 1, "", "estimate_flux_default"], [135, 3, 1, "", "estimate_flux_map"], [135, 3, 1, "", "estimate_kernel"], [135, 3, 1, "", "estimate_mask_default"], [135, 3, 1, "", "estimate_pad_width"], [135, 2, 1, "", "n_jobs"], [135, 2, 1, "", "parallel_backend"], [135, 3, 1, "", "run"], [135, 2, 1, "", "selection_all"], [135, 2, 1, "", "selection_optional"], [135, 2, 1, "", "tag"]], "gammapy.estimators.utils": [[136, 4, 1, "", "combine_flux_maps"], [137, 4, 1, "", "combine_significance_maps"], [138, 4, 1, "", "compute_lightcurve_discrete_correlation"], [139, 4, 1, "", "compute_lightcurve_doublingtime"], [140, 4, 1, "", "compute_lightcurve_fpp"], [141, 4, 1, "", "compute_lightcurve_fvar"], [142, 4, 1, "", "estimate_exposure_reco_energy"], [143, 4, 1, "", "find_peaks"], [144, 4, 1, "", "find_peaks_in_flux_map"], [145, 4, 1, "", "get_combined_flux_maps"], [146, 4, 1, "", "get_combined_significance_maps"], [147, 4, 1, "", "get_rebinned_axis"], [148, 4, 1, "", "resample_energy_edges"]], "gammapy.irf": [[149, 1, 1, "", "Background2D"], [150, 1, 1, "", "Background3D"], [151, 1, 1, "", "BackgroundIRF"], [152, 1, 1, "", "EDispKernel"], [153, 1, 1, "", "EDispKernelMap"], [154, 1, 1, "", "EDispMap"], [155, 1, 1, "", "EffectiveAreaTable2D"], [156, 1, 1, "", "EnergyDependentMultiGaussPSF"], [157, 1, 1, "", "EnergyDispersion2D"], [158, 1, 1, "", "FoVAlignment"], [159, 1, 1, "", "IRF"], [160, 1, 1, "", "IRFMap"], [161, 5, 1, "", "IRF_REGISTRY"], [162, 1, 1, "", "PSF3D"], [163, 1, 1, "", "PSFKernel"], [164, 1, 1, "", "PSFKing"], [165, 1, 1, "", "PSFMap"], [166, 1, 1, "", "ParametricPSF"], [167, 1, 1, "", "RadMax2D"], [168, 1, 1, "", "RecoPSFMap"], [169, 4, 1, "", "load_irf_dict_from_file"]], "gammapy.irf.Background2D": [[149, 2, 1, "", "axes"], [149, 3, 1, "", "cumsum"], [149, 2, 1, "", "data"], [149, 2, 1, "", "default_interp_kwargs"], [149, 2, 1, "", "default_unit"], [149, 3, 1, "", "evaluate"], [149, 2, 1, "", "fov_alignment"], [149, 3, 1, "", "from_hdulist"], [149, 3, 1, "", "from_table"], [149, 2, 1, "", "has_offset_axis"], [149, 3, 1, "", "integral"], [149, 3, 1, "", "integrate_log_log"], [149, 3, 1, "", "interp_missing_data"], [149, 3, 1, "", "is_allclose"], [149, 2, 1, "", "is_pointlike"], [149, 3, 1, "", "normalize"], [149, 3, 1, "", "pad"], [149, 3, 1, "", "peek"], [149, 3, 1, "", "plot"], [149, 3, 1, "", "plot_at_energy"], [149, 3, 1, "", "plot_energy_dependence"], [149, 3, 1, "", "plot_offset_dependence"], [149, 3, 1, "", "plot_spectrum"], [149, 2, 1, "", "quantity"], [149, 3, 1, "", "read"], [149, 2, 1, "", "required_axes"], [149, 3, 1, "", "slice_by_idx"], [149, 2, 1, "", "tag"], [149, 3, 1, "", "to_3d"], [149, 3, 1, "", "to_hdulist"], [149, 3, 1, "", "to_table"], [149, 3, 1, "", "to_table_hdu"], [149, 3, 1, "", "to_unit"], [149, 2, 1, "", "unit"], [149, 3, 1, "", "write"]], "gammapy.irf.Background3D": [[150, 2, 1, "", "axes"], [150, 3, 1, "", "cumsum"], [150, 2, 1, "", "data"], [150, 2, 1, "", "default_interp_kwargs"], [150, 2, 1, "", "default_unit"], [150, 3, 1, "", "evaluate"], [150, 2, 1, "", "fov_alignment"], [150, 3, 1, "", "from_hdulist"], [150, 3, 1, "", "from_table"], [150, 2, 1, "", "has_offset_axis"], [150, 3, 1, "", "integral"], [150, 3, 1, "", "integrate_log_log"], [150, 3, 1, "", "interp_missing_data"], [150, 3, 1, "", "is_allclose"], [150, 2, 1, "", "is_pointlike"], [150, 3, 1, "", "normalize"], [150, 3, 1, "", "pad"], [150, 3, 1, "", "peek"], [150, 3, 1, "", "plot_at_energy"], [150, 2, 1, "", "quantity"], [150, 3, 1, "", "read"], [150, 2, 1, "", "required_axes"], [150, 3, 1, "", "slice_by_idx"], [150, 2, 1, "", "tag"], [150, 3, 1, "", "to_2d"], [150, 3, 1, "", "to_hdulist"], [150, 3, 1, "", "to_table"], [150, 3, 1, "", "to_table_hdu"], [150, 3, 1, "", "to_unit"], [150, 2, 1, "", "unit"], [150, 3, 1, "", "write"]], "gammapy.irf.BackgroundIRF": [[151, 2, 1, "", "axes"], [151, 3, 1, "", "cumsum"], [151, 2, 1, "", "data"], [151, 2, 1, "", "default_interp_kwargs"], [151, 3, 1, "", "evaluate"], [151, 2, 1, "", "fov_alignment"], [151, 3, 1, "", "from_hdulist"], [151, 3, 1, "", "from_table"], [151, 2, 1, "", "has_offset_axis"], [151, 3, 1, "", "integral"], [151, 3, 1, "", "integrate_log_log"], [151, 3, 1, "", "interp_missing_data"], [151, 3, 1, "", "is_allclose"], [151, 2, 1, "", "is_pointlike"], [151, 3, 1, "", "normalize"], [151, 3, 1, "", "pad"], [151, 2, 1, "", "quantity"], [151, 3, 1, "", "read"], [151, 2, 1, "", "required_axes"], [151, 3, 1, "", "slice_by_idx"], [151, 2, 1, "", "tag"], [151, 3, 1, "", "to_hdulist"], [151, 3, 1, "", "to_table"], [151, 3, 1, "", "to_table_hdu"], [151, 3, 1, "", "to_unit"], [151, 2, 1, "", "unit"], [151, 3, 1, "", "write"]], "gammapy.irf.EDispKernel": [[152, 2, 1, "", "axes"], [152, 3, 1, "", "cumsum"], [152, 2, 1, "", "data"], [152, 2, 1, "", "default_interp_kwargs"], [152, 3, 1, "", "evaluate"], [152, 2, 1, "", "fov_alignment"], [152, 3, 1, "", "from_diagonal_response"], [152, 3, 1, "", "from_gauss"], [152, 3, 1, "", "from_hdulist"], [152, 3, 1, "", "from_table"], [152, 3, 1, "", "get_bias"], [152, 3, 1, "", "get_bias_energy"], [152, 3, 1, "", "get_mean"], [152, 3, 1, "", "get_resolution"], [152, 2, 1, "", "has_offset_axis"], [152, 3, 1, "", "integral"], [152, 3, 1, "", "integrate_log_log"], [152, 3, 1, "", "interp_missing_data"], [152, 3, 1, "", "is_allclose"], [152, 2, 1, "", "is_pointlike"], [152, 3, 1, "", "normalize"], [152, 3, 1, "", "pad"], [152, 3, 1, "", "pdf_in_safe_range"], [152, 2, 1, "", "pdf_matrix"], [152, 3, 1, "", "peek"], [152, 3, 1, "", "plot_bias"], [152, 3, 1, "", "plot_matrix"], [152, 2, 1, "", "quantity"], [152, 3, 1, "", "read"], [152, 2, 1, "", "required_axes"], [152, 3, 1, "", "slice_by_idx"], [152, 2, 1, "", "tag"], [152, 3, 1, "", "to_hdulist"], [152, 3, 1, "", "to_image"], [152, 3, 1, "", "to_table"], [152, 3, 1, "", "to_table_hdu"], [152, 3, 1, "", "to_unit"], [152, 2, 1, "", "unit"], [152, 3, 1, "", "write"]], "gammapy.irf.EDispKernelMap": [[153, 3, 1, "", "copy"], [153, 3, 1, "", "cutout"], [153, 3, 1, "", "downsample"], [153, 2, 1, "", "edisp_map"], [153, 3, 1, "", "from_diagonal_response"], [153, 3, 1, "", "from_edisp_kernel"], [153, 3, 1, "", "from_gauss"], [153, 3, 1, "", "from_geom"], [153, 3, 1, "", "from_hdulist"], [153, 3, 1, "", "get_edisp_kernel"], [153, 2, 1, "", "has_single_spatial_bin"], [153, 2, 1, "", "mask_safe_image"], [153, 3, 1, "", "peek"], [153, 3, 1, "", "read"], [153, 2, 1, "", "required_axes"], [153, 3, 1, "", "resample_energy_axis"], [153, 3, 1, "", "slice_by_idx"], [153, 3, 1, "", "stack"], [153, 2, 1, "", "tag"], [153, 3, 1, "", "to_hdulist"], [153, 3, 1, "", "to_image"], [153, 3, 1, "", "to_region_nd_map"], [153, 3, 1, "", "write"]], "gammapy.irf.EDispMap": [[154, 3, 1, "", "copy"], [154, 3, 1, "", "cutout"], [154, 3, 1, "", "downsample"], [154, 2, 1, "", "edisp_map"], [154, 3, 1, "", "from_diagonal_response"], [154, 3, 1, "", "from_geom"], [154, 3, 1, "", "from_hdulist"], [154, 3, 1, "", "get_edisp_kernel"], [154, 2, 1, "", "has_single_spatial_bin"], [154, 2, 1, "", "mask_safe_image"], [154, 3, 1, "", "normalize"], [154, 3, 1, "", "peek"], [154, 3, 1, "", "read"], [154, 2, 1, "", "required_axes"], [154, 3, 1, "", "sample_coord"], [154, 3, 1, "", "slice_by_idx"], [154, 3, 1, "", "stack"], [154, 2, 1, "", "tag"], [154, 3, 1, "", "to_edisp_kernel_map"], [154, 3, 1, "", "to_hdulist"], [154, 3, 1, "", "to_region_nd_map"], [154, 3, 1, "", "write"]], "gammapy.irf.EffectiveAreaTable2D": [[155, 2, 1, "", "axes"], [155, 3, 1, "", "cumsum"], [155, 2, 1, "", "data"], [155, 2, 1, "", "default_interp_kwargs"], [155, 2, 1, "", "default_unit"], [155, 3, 1, "", "evaluate"], [155, 2, 1, "", "fov_alignment"], [155, 3, 1, "", "from_hdulist"], [155, 3, 1, "", "from_parametrization"], [155, 3, 1, "", "from_table"], [155, 2, 1, "", "has_offset_axis"], [155, 3, 1, "", "integral"], [155, 3, 1, "", "integrate_log_log"], [155, 3, 1, "", "interp_missing_data"], [155, 3, 1, "", "is_allclose"], [155, 2, 1, "", "is_pointlike"], [155, 3, 1, "", "normalize"], [155, 3, 1, "", "pad"], [155, 3, 1, "", "peek"], [155, 3, 1, "", "plot"], [155, 3, 1, "", "plot_energy_dependence"], [155, 3, 1, "", "plot_offset_dependence"], [155, 2, 1, "", "quantity"], [155, 3, 1, "", "read"], [155, 2, 1, "", "required_axes"], [155, 3, 1, "", "slice_by_idx"], [155, 2, 1, "", "tag"], [155, 3, 1, "", "to_hdulist"], [155, 3, 1, "", "to_table"], [155, 3, 1, "", "to_table_hdu"], [155, 3, 1, "", "to_unit"], [155, 2, 1, "", "unit"], [155, 3, 1, "", "write"]], "gammapy.irf.EnergyDependentMultiGaussPSF": [[156, 2, 1, "", "axes"], [156, 3, 1, "", "containment"], [156, 3, 1, "", "containment_radius"], [156, 3, 1, "", "cumsum"], [156, 2, 1, "", "data"], [156, 2, 1, "", "default_interp_kwargs"], [156, 3, 1, "", "evaluate"], [156, 3, 1, "", "evaluate_containment"], [156, 3, 1, "", "evaluate_direct"], [156, 3, 1, "", "evaluate_parameters"], [156, 2, 1, "", "fov_alignment"], [156, 3, 1, "", "from_hdulist"], [156, 3, 1, "", "from_table"], [156, 2, 1, "", "has_offset_axis"], [156, 3, 1, "", "info"], [156, 3, 1, "", "integral"], [156, 3, 1, "", "integrate_log_log"], [156, 3, 1, "", "interp_missing_data"], [156, 3, 1, "", "is_allclose"], [156, 2, 1, "", "is_pointlike"], [156, 3, 1, "", "normalize"], [156, 3, 1, "", "pad"], [156, 3, 1, "", "peek"], [156, 3, 1, "", "plot_containment_radius"], [156, 3, 1, "", "plot_containment_radius_vs_energy"], [156, 3, 1, "", "plot_psf_vs_rad"], [156, 2, 1, "", "quantity"], [156, 3, 1, "", "read"], [156, 2, 1, "", "required_axes"], [156, 2, 1, "", "required_parameters"], [156, 3, 1, "", "slice_by_idx"], [156, 2, 1, "", "tag"], [156, 3, 1, "", "to_hdulist"], [156, 3, 1, "", "to_psf3d"], [156, 3, 1, "", "to_table"], [156, 3, 1, "", "to_table_hdu"], [156, 3, 1, "", "to_unit"], [156, 2, 1, "", "unit"], [156, 3, 1, "", "write"]], "gammapy.irf.EnergyDispersion2D": [[157, 2, 1, "", "axes"], [157, 3, 1, "", "cumsum"], [157, 2, 1, "", "data"], [157, 2, 1, "", "default_interp_kwargs"], [157, 2, 1, "", "default_unit"], [157, 3, 1, "", "evaluate"], [157, 2, 1, "", "fov_alignment"], [157, 3, 1, "", "from_gauss"], [157, 3, 1, "", "from_hdulist"], [157, 3, 1, "", "from_table"], [157, 2, 1, "", "has_offset_axis"], [157, 3, 1, "", "integral"], [157, 3, 1, "", "integrate_log_log"], [157, 3, 1, "", "interp_missing_data"], [157, 3, 1, "", "is_allclose"], [157, 2, 1, "", "is_pointlike"], [157, 3, 1, "", "normalize"], [157, 3, 1, "", "pad"], [157, 3, 1, "", "peek"], [157, 3, 1, "", "plot_bias"], [157, 3, 1, "", "plot_migration"], [157, 2, 1, "", "quantity"], [157, 3, 1, "", "read"], [157, 2, 1, "", "required_axes"], [157, 3, 1, "", "slice_by_idx"], [157, 2, 1, "", "tag"], [157, 3, 1, "", "to_edisp_kernel"], [157, 3, 1, "", "to_hdulist"], [157, 3, 1, "", "to_table"], [157, 3, 1, "", "to_table_hdu"], [157, 3, 1, "", "to_unit"], [157, 2, 1, "", "unit"], [157, 3, 1, "", "write"]], "gammapy.irf.FoVAlignment": [[158, 2, 1, "", "ALTAZ"], [158, 2, 1, "", "RADEC"], [158, 2, 1, "", "REVERSE_LON_RADEC"]], "gammapy.irf.IRF": [[159, 2, 1, "", "axes"], [159, 3, 1, "", "cumsum"], [159, 2, 1, "", "data"], [159, 2, 1, "", "default_interp_kwargs"], [159, 3, 1, "", "evaluate"], [159, 2, 1, "", "fov_alignment"], [159, 3, 1, "", "from_hdulist"], [159, 3, 1, "", "from_table"], [159, 2, 1, "", "has_offset_axis"], [159, 3, 1, "", "integral"], [159, 3, 1, "", "integrate_log_log"], [159, 3, 1, "", "interp_missing_data"], [159, 3, 1, "", "is_allclose"], [159, 2, 1, "", "is_pointlike"], [159, 3, 1, "", "normalize"], [159, 3, 1, "", "pad"], [159, 2, 1, "", "quantity"], [159, 3, 1, "", "read"], [159, 2, 1, "", "required_axes"], [159, 3, 1, "", "slice_by_idx"], [159, 2, 1, "", "tag"], [159, 3, 1, "", "to_hdulist"], [159, 3, 1, "", "to_table"], [159, 3, 1, "", "to_table_hdu"], [159, 3, 1, "", "to_unit"], [159, 2, 1, "", "unit"], [159, 3, 1, "", "write"]], "gammapy.irf.IRFMap": [[160, 3, 1, "", "copy"], [160, 3, 1, "", "cutout"], [160, 3, 1, "", "downsample"], [160, 3, 1, "", "from_hdulist"], [160, 2, 1, "", "has_single_spatial_bin"], [160, 2, 1, "", "mask_safe_image"], [160, 3, 1, "", "read"], [160, 2, 1, "", "required_axes"], [160, 3, 1, "", "slice_by_idx"], [160, 3, 1, "", "stack"], [160, 2, 1, "", "tag"], [160, 3, 1, "", "to_hdulist"], [160, 3, 1, "", "to_region_nd_map"], [160, 3, 1, "", "write"]], "gammapy.irf.PSF3D": [[162, 2, 1, "", "axes"], [162, 3, 1, "", "containment"], [162, 3, 1, "", "containment_radius"], [162, 3, 1, "", "cumsum"], [162, 2, 1, "", "data"], [162, 2, 1, "", "default_interp_kwargs"], [162, 2, 1, "", "default_unit"], [162, 3, 1, "", "evaluate"], [162, 2, 1, "", "fov_alignment"], [162, 3, 1, "", "from_hdulist"], [162, 3, 1, "", "from_table"], [162, 2, 1, "", "has_offset_axis"], [162, 3, 1, "", "info"], [162, 3, 1, "", "integral"], [162, 3, 1, "", "integrate_log_log"], [162, 3, 1, "", "interp_missing_data"], [162, 3, 1, "", "is_allclose"], [162, 2, 1, "", "is_pointlike"], [162, 3, 1, "", "normalize"], [162, 3, 1, "", "pad"], [162, 3, 1, "", "peek"], [162, 3, 1, "", "plot_containment_radius"], [162, 3, 1, "", "plot_containment_radius_vs_energy"], [162, 3, 1, "", "plot_psf_vs_rad"], [162, 2, 1, "", "quantity"], [162, 3, 1, "", "read"], [162, 2, 1, "", "required_axes"], [162, 3, 1, "", "slice_by_idx"], [162, 2, 1, "", "tag"], [162, 3, 1, "", "to_hdulist"], [162, 3, 1, "", "to_table"], [162, 3, 1, "", "to_table_hdu"], [162, 3, 1, "", "to_unit"], [162, 2, 1, "", "unit"], [162, 3, 1, "", "write"]], "gammapy.irf.PSFKernel": [[163, 2, 1, "", "data"], [163, 3, 1, "", "from_gauss"], [163, 3, 1, "", "from_spatial_model"], [163, 3, 1, "", "normalize"], [163, 3, 1, "", "peek"], [163, 3, 1, "", "plot_kernel"], [163, 2, 1, "", "psf_kernel_map"], [163, 3, 1, "", "read"], [163, 3, 1, "", "slice_by_idx"], [163, 3, 1, "", "to_image"], [163, 3, 1, "", "write"]], "gammapy.irf.PSFKing": [[164, 2, 1, "", "axes"], [164, 3, 1, "", "containment"], [164, 3, 1, "", "containment_radius"], [164, 3, 1, "", "cumsum"], [164, 2, 1, "", "data"], [164, 2, 1, "", "default_interp_kwargs"], [164, 3, 1, "", "evaluate"], [164, 3, 1, "", "evaluate_containment"], [164, 3, 1, "", "evaluate_direct"], [164, 3, 1, "", "evaluate_parameters"], [164, 2, 1, "", "fov_alignment"], [164, 3, 1, "", "from_hdulist"], [164, 3, 1, "", "from_table"], [164, 2, 1, "", "has_offset_axis"], [164, 3, 1, "", "info"], [164, 3, 1, "", "integral"], [164, 3, 1, "", "integrate_log_log"], [164, 3, 1, "", "interp_missing_data"], [164, 3, 1, "", "is_allclose"], [164, 2, 1, "", "is_pointlike"], [164, 3, 1, "", "normalize"], [164, 3, 1, "", "pad"], [164, 3, 1, "", "peek"], [164, 3, 1, "", "plot_containment_radius"], [164, 3, 1, "", "plot_containment_radius_vs_energy"], [164, 3, 1, "", "plot_psf_vs_rad"], [164, 2, 1, "", "quantity"], [164, 3, 1, "", "read"], [164, 2, 1, "", "required_axes"], [164, 2, 1, "", "required_parameters"], [164, 3, 1, "", "slice_by_idx"], [164, 2, 1, "", "tag"], [164, 3, 1, "", "to_hdulist"], [164, 3, 1, "", "to_psf3d"], [164, 3, 1, "", "to_table"], [164, 3, 1, "", "to_table_hdu"], [164, 3, 1, "", "to_unit"], [164, 2, 1, "", "unit"], [164, 3, 1, "", "write"]], "gammapy.irf.PSFMap": [[165, 3, 1, "", "containment"], [165, 3, 1, "", "containment_radius"], [165, 3, 1, "", "containment_radius_map"], [165, 3, 1, "", "copy"], [165, 3, 1, "", "cutout"], [165, 3, 1, "", "downsample"], [165, 2, 1, "", "energy_name"], [165, 3, 1, "", "from_gauss"], [165, 3, 1, "", "from_geom"], [165, 3, 1, "", "from_hdulist"], [165, 3, 1, "", "get_psf_kernel"], [165, 2, 1, "", "has_single_spatial_bin"], [165, 2, 1, "", "mask_safe_image"], [165, 3, 1, "", "normalize"], [165, 3, 1, "", "peek"], [165, 3, 1, "", "plot_containment_radius_vs_energy"], [165, 3, 1, "", "plot_psf_vs_rad"], [165, 2, 1, "", "psf_map"], [165, 3, 1, "", "read"], [165, 2, 1, "", "required_axes"], [165, 3, 1, "", "sample_coord"], [165, 3, 1, "", "slice_by_idx"], [165, 3, 1, "", "stack"], [165, 2, 1, "", "tag"], [165, 3, 1, "", "to_hdulist"], [165, 3, 1, "", "to_image"], [165, 3, 1, "", "to_region_nd_map"], [165, 3, 1, "", "write"]], "gammapy.irf.ParametricPSF": [[166, 2, 1, "", "axes"], [166, 3, 1, "", "containment"], [166, 3, 1, "", "containment_radius"], [166, 3, 1, "", "cumsum"], [166, 2, 1, "", "data"], [166, 2, 1, "", "default_interp_kwargs"], [166, 3, 1, "", "evaluate"], [166, 3, 1, "", "evaluate_containment"], [166, 3, 1, "", "evaluate_direct"], [166, 3, 1, "", "evaluate_parameters"], [166, 2, 1, "", "fov_alignment"], [166, 3, 1, "", "from_hdulist"], [166, 3, 1, "", "from_table"], [166, 2, 1, "", "has_offset_axis"], [166, 3, 1, "", "info"], [166, 3, 1, "", "integral"], [166, 3, 1, "", "integrate_log_log"], [166, 3, 1, "", "interp_missing_data"], [166, 3, 1, "", "is_allclose"], [166, 2, 1, "", "is_pointlike"], [166, 3, 1, "", "normalize"], [166, 3, 1, "", "pad"], [166, 3, 1, "", "peek"], [166, 3, 1, "", "plot_containment_radius"], [166, 3, 1, "", "plot_containment_radius_vs_energy"], [166, 3, 1, "", "plot_psf_vs_rad"], [166, 2, 1, "", "quantity"], [166, 3, 1, "", "read"], [166, 2, 1, "", "required_axes"], [166, 2, 1, "", "required_parameters"], [166, 3, 1, "", "slice_by_idx"], [166, 2, 1, "", "tag"], [166, 3, 1, "", "to_hdulist"], [166, 3, 1, "", "to_psf3d"], [166, 3, 1, "", "to_table"], [166, 3, 1, "", "to_table_hdu"], [166, 3, 1, "", "to_unit"], [166, 2, 1, "", "unit"], [166, 3, 1, "", "write"]], "gammapy.irf.RadMax2D": [[167, 2, 1, "", "axes"], [167, 3, 1, "", "cumsum"], [167, 2, 1, "", "data"], [167, 2, 1, "", "default_interp_kwargs"], [167, 2, 1, "", "default_unit"], [167, 3, 1, "", "evaluate"], [167, 2, 1, "", "fov_alignment"], [167, 3, 1, "", "from_hdulist"], [167, 3, 1, "", "from_irf"], [167, 3, 1, "", "from_table"], [167, 2, 1, "", "has_offset_axis"], [167, 3, 1, "", "integral"], [167, 3, 1, "", "integrate_log_log"], [167, 3, 1, "", "interp_missing_data"], [167, 3, 1, "", "is_allclose"], [167, 2, 1, "", "is_fixed_rad_max"], [167, 2, 1, "", "is_pointlike"], [167, 3, 1, "", "normalize"], [167, 3, 1, "", "pad"], [167, 3, 1, "", "plot_rad_max_vs_energy"], [167, 2, 1, "", "quantity"], [167, 3, 1, "", "read"], [167, 2, 1, "", "required_axes"], [167, 3, 1, "", "slice_by_idx"], [167, 2, 1, "", "tag"], [167, 3, 1, "", "to_hdulist"], [167, 3, 1, "", "to_table"], [167, 3, 1, "", "to_table_hdu"], [167, 3, 1, "", "to_unit"], [167, 2, 1, "", "unit"], [167, 3, 1, "", "write"]], "gammapy.irf.RecoPSFMap": [[168, 3, 1, "", "containment"], [168, 3, 1, "", "containment_radius"], [168, 3, 1, "", "containment_radius_map"], [168, 3, 1, "", "copy"], [168, 3, 1, "", "cutout"], [168, 3, 1, "", "downsample"], [168, 2, 1, "", "energy_name"], [168, 3, 1, "", "from_gauss"], [168, 3, 1, "", "from_geom"], [168, 3, 1, "", "from_hdulist"], [168, 3, 1, "", "get_psf_kernel"], [168, 2, 1, "", "has_single_spatial_bin"], [168, 2, 1, "", "mask_safe_image"], [168, 3, 1, "", "normalize"], [168, 3, 1, "", "peek"], [168, 3, 1, "", "plot_containment_radius_vs_energy"], [168, 3, 1, "", "plot_psf_vs_rad"], [168, 2, 1, "", "psf_map"], [168, 3, 1, "", "read"], [168, 2, 1, "", "required_axes"], [168, 3, 1, "", "sample_coord"], [168, 3, 1, "", "slice_by_idx"], [168, 3, 1, "", "stack"], [168, 2, 1, "", "tag"], [168, 3, 1, "", "to_hdulist"], [168, 3, 1, "", "to_image"], [168, 3, 1, "", "to_region_nd_map"], [168, 3, 1, "", "write"]], "gammapy.makers": [[170, 1, 1, "", "AdaptiveRingBackgroundMaker"], [171, 1, 1, "", "DatasetsMaker"], [172, 1, 1, "", "FoVBackgroundMaker"], [173, 5, 1, "", "MAKER_REGISTRY"], [174, 1, 1, "", "Maker"], [175, 1, 1, "", "MapDatasetMaker"], [176, 1, 1, "", "PhaseBackgroundMaker"], [177, 1, 1, "", "ReflectedRegionsBackgroundMaker"], [178, 1, 1, "", "ReflectedRegionsFinder"], [179, 1, 1, "", "RegionsFinder"], [180, 1, 1, "", "RingBackgroundMaker"], [181, 1, 1, "", "SafeMaskMaker"], [182, 1, 1, "", "SpectrumDatasetMaker"], [183, 1, 1, "", "WobbleRegionsFinder"], [8, 0, 0, "-", "utils"]], "gammapy.makers.AdaptiveRingBackgroundMaker": [[170, 3, 1, "", "kernels"], [170, 3, 1, "", "make_cubes"], [170, 3, 1, "", "run"], [170, 2, 1, "", "tag"]], "gammapy.makers.DatasetsMaker": [[171, 3, 1, "", "callback"], [171, 3, 1, "", "error_callback"], [171, 3, 1, "", "make_dataset"], [171, 2, 1, "", "n_jobs"], [171, 2, 1, "", "offset_max"], [171, 2, 1, "", "parallel_backend"], [171, 3, 1, "", "run"], [171, 2, 1, "", "safe_mask_maker"], [171, 2, 1, "", "tag"]], "gammapy.makers.FoVBackgroundMaker": [[172, 2, 1, "", "available_methods"], [172, 3, 1, "", "make_background_fit"], [172, 3, 1, "", "make_background_scale"], [172, 3, 1, "", "make_default_fov_background_model"], [172, 3, 1, "", "make_exclusion_mask"], [172, 2, 1, "", "method"], [172, 3, 1, "", "run"], [172, 2, 1, "", "tag"]], "gammapy.makers.Maker": [[174, 3, 1, "", "run"], [174, 2, 1, "", "tag"]], "gammapy.makers.MapDatasetMaker": [[175, 2, 1, "", "available_selection"], [175, 3, 1, "", "make_background"], [175, 3, 1, "", "make_counts"], [175, 3, 1, "", "make_edisp"], [175, 3, 1, "", "make_edisp_kernel"], [175, 3, 1, "", "make_exposure"], [175, 3, 1, "", "make_exposure_irf"], [175, 3, 1, "", "make_meta_table"], [175, 3, 1, "", "make_psf"], [175, 3, 1, "", "run"], [175, 2, 1, "", "tag"]], "gammapy.makers.PhaseBackgroundMaker": [[176, 3, 1, "", "make_counts"], [176, 3, 1, "", "make_counts_off"], [176, 3, 1, "", "run"], [176, 2, 1, "", "tag"]], "gammapy.makers.ReflectedRegionsBackgroundMaker": [[177, 3, 1, "", "make_counts_off"], [177, 3, 1, "", "run"], [177, 2, 1, "", "tag"]], "gammapy.makers.ReflectedRegionsFinder": [[178, 3, 1, "", "run"]], "gammapy.makers.RegionsFinder": [[179, 3, 1, "", "run"]], "gammapy.makers.RingBackgroundMaker": [[180, 3, 1, "", "kernel"], [180, 3, 1, "", "make_maps_off"], [180, 3, 1, "", "run"], [180, 2, 1, "", "tag"]], "gammapy.makers.SafeMaskMaker": [[181, 2, 1, "", "available_methods"], [181, 3, 1, "", "make_mask_bkg_invalid"], [181, 3, 1, "", "make_mask_energy_aeff_default"], [181, 3, 1, "", "make_mask_energy_aeff_max"], [181, 3, 1, "", "make_mask_energy_bkg_peak"], [181, 3, 1, "", "make_mask_energy_edisp_bias"], [181, 3, 1, "", "make_mask_offset_max"], [181, 3, 1, "", "run"], [181, 2, 1, "", "tag"]], "gammapy.makers.SpectrumDatasetMaker": [[182, 2, 1, "", "available_selection"], [182, 3, 1, "", "make_background"], [182, 3, 1, "", "make_counts"], [182, 3, 1, "", "make_edisp"], [182, 3, 1, "", "make_edisp_kernel"], [182, 3, 1, "", "make_exposure"], [182, 3, 1, "", "make_exposure_irf"], [182, 3, 1, "", "make_meta_table"], [182, 3, 1, "", "make_psf"], [182, 3, 1, "", "run"], [182, 2, 1, "", "tag"]], "gammapy.makers.WobbleRegionsFinder": [[183, 3, 1, "", "run"]], "gammapy.makers.utils": [[184, 4, 1, "", "make_counts_rad_max"], [185, 4, 1, "", "make_edisp_kernel_map"], [186, 4, 1, "", "make_edisp_map"], [187, 4, 1, "", "make_effective_livetime_map"], [188, 4, 1, "", "make_map_background_irf"], [189, 4, 1, "", "make_map_exposure_true_energy"], [190, 4, 1, "", "make_observation_time_map"], [191, 4, 1, "", "make_psf_map"], [192, 4, 1, "", "make_theta_squared_table"]], "gammapy.maps": [[193, 1, 1, "", "Geom"], [194, 1, 1, "", "HpxGeom"], [195, 1, 1, "", "HpxMap"], [196, 1, 1, "", "HpxNDMap"], [197, 1, 1, "", "LabelMapAxis"], [198, 1, 1, "", "Map"], [199, 1, 1, "", "MapAxes"], [200, 1, 1, "", "MapAxis"], [201, 1, 1, "", "MapCoord"], [202, 1, 1, "", "Maps"], [203, 1, 1, "", "RegionGeom"], [204, 1, 1, "", "RegionNDMap"], [205, 1, 1, "", "TimeMapAxis"], [206, 1, 1, "", "WcsGeom"], [207, 1, 1, "", "WcsMap"], [208, 1, 1, "", "WcsNDMap"], [209, 4, 1, "", "containment_radius"], [210, 4, 1, "", "containment_region"]], "gammapy.maps.Geom": [[193, 2, 1, "", "as_energy_true"], [193, 2, 1, "", "center_coord"], [193, 2, 1, "", "center_pix"], [193, 2, 1, "", "center_skydir"], [193, 3, 1, "", "contains"], [193, 3, 1, "", "contains_pix"], [193, 3, 1, "", "coord_to_idx"], [193, 3, 1, "", "coord_to_pix"], [193, 3, 1, "", "copy"], [193, 3, 1, "", "create_mask"], [193, 3, 1, "", "crop"], [193, 3, 1, "", "data_nbytes"], [193, 2, 1, "", "data_shape"], [193, 3, 1, "", "downsample"], [193, 3, 1, "", "drop"], [193, 3, 1, "", "energy_mask"], [193, 3, 1, "", "from_hdulist"], [193, 3, 1, "", "get_coord"], [193, 3, 1, "", "get_idx"], [193, 2, 1, "", "has_energy_axis"], [193, 2, 1, "", "is_allsky"], [193, 2, 1, "", "is_flat"], [193, 2, 1, "", "is_image"], [193, 3, 1, "", "pad"], [193, 3, 1, "", "pix_to_coord"], [193, 3, 1, "", "pix_to_idx"], [193, 3, 1, "", "rename_axes"], [193, 3, 1, "", "replace_axis"], [193, 3, 1, "", "resample_axis"], [193, 3, 1, "", "slice_by_idx"], [193, 3, 1, "", "solid_angle"], [193, 3, 1, "", "squash"], [193, 3, 1, "", "to_bands_hdu"], [193, 3, 1, "", "to_cube"], [193, 3, 1, "", "to_image"], [193, 3, 1, "", "upsample"]], "gammapy.maps.HpxGeom": [[194, 2, 1, "", "as_energy_true"], [194, 2, 1, "", "axes"], [194, 2, 1, "", "axes_names"], [194, 2, 1, "", "center_coord"], [194, 2, 1, "", "center_pix"], [194, 2, 1, "", "center_skydir"], [194, 3, 1, "", "contains"], [194, 3, 1, "", "contains_pix"], [194, 3, 1, "", "coord_to_idx"], [194, 3, 1, "", "coord_to_pix"], [194, 3, 1, "", "copy"], [194, 3, 1, "", "create"], [194, 3, 1, "", "create_mask"], [194, 3, 1, "", "crop"], [194, 3, 1, "", "cutout"], [194, 3, 1, "", "data_nbytes"], [194, 2, 1, "", "data_shape"], [194, 2, 1, "", "data_shape_axes"], [194, 3, 1, "", "downsample"], [194, 3, 1, "", "drop"], [194, 3, 1, "", "energy_mask"], [194, 2, 1, "", "frame"], [194, 3, 1, "", "from_hdu"], [194, 3, 1, "", "from_hdulist"], [194, 3, 1, "", "from_header"], [194, 3, 1, "", "get_coord"], [194, 3, 1, "", "get_idx"], [194, 3, 1, "", "get_index_list"], [194, 3, 1, "", "global_to_local"], [194, 2, 1, "", "has_energy_axis"], [194, 3, 1, "", "interp_weights"], [194, 2, 1, "", "ipix"], [194, 3, 1, "", "is_aligned"], [194, 3, 1, "", "is_allclose"], [194, 2, 1, "", "is_allsky"], [194, 2, 1, "", "is_flat"], [194, 2, 1, "", "is_hpx"], [194, 2, 1, "", "is_image"], [194, 2, 1, "", "is_region"], [194, 2, 1, "", "is_regular"], [194, 3, 1, "", "local_to_global"], [194, 2, 1, "", "ndim"], [194, 2, 1, "", "nest"], [194, 2, 1, "", "npix"], [194, 2, 1, "", "npix_max"], [194, 2, 1, "", "nside"], [194, 2, 1, "", "order"], [194, 2, 1, "", "ordering"], [194, 3, 1, "", "pad"], [194, 3, 1, "", "pix_to_coord"], [194, 3, 1, "", "pix_to_idx"], [194, 2, 1, "", "pixel_scales"], [194, 2, 1, "", "projection"], [194, 2, 1, "", "region"], [194, 3, 1, "", "region_mask"], [194, 3, 1, "", "rename_axes"], [194, 3, 1, "", "replace_axis"], [194, 3, 1, "", "resample_axis"], [194, 3, 1, "", "separation"], [194, 2, 1, "", "shape_axes"], [194, 3, 1, "", "slice_by_idx"], [194, 3, 1, "", "solid_angle"], [194, 3, 1, "", "squash"], [194, 3, 1, "", "to_bands_hdu"], [194, 3, 1, "", "to_binsz"], [194, 3, 1, "", "to_cube"], [194, 3, 1, "", "to_header"], [194, 3, 1, "", "to_image"], [194, 3, 1, "", "to_nside"], [194, 3, 1, "", "to_swapped"], [194, 3, 1, "", "to_wcs_geom"], [194, 3, 1, "", "to_wcs_tiles"], [194, 3, 1, "", "upsample"], [194, 2, 1, "", "width"]], "gammapy.maps.HpxMap": [[195, 3, 1, "", "coadd"], [195, 3, 1, "", "copy"], [195, 3, 1, "", "create"], [195, 3, 1, "", "crop"], [195, 3, 1, "", "cumsum"], [195, 2, 1, "", "data"], [195, 3, 1, "", "dot"], [195, 3, 1, "", "downsample"], [195, 3, 1, "", "fill_by_coord"], [195, 3, 1, "", "fill_by_idx"], [195, 3, 1, "", "fill_by_pix"], [195, 3, 1, "", "fill_events"], [195, 3, 1, "", "from_geom"], [195, 3, 1, "", "from_hdulist"], [195, 3, 1, "", "from_stack"], [195, 2, 1, "", "geom"], [195, 3, 1, "", "get_by_coord"], [195, 3, 1, "", "get_by_idx"], [195, 3, 1, "", "get_by_pix"], [195, 3, 1, "", "get_image_by_coord"], [195, 3, 1, "", "get_image_by_idx"], [195, 3, 1, "", "get_image_by_pix"], [195, 3, 1, "", "get_spectrum"], [195, 3, 1, "", "integral"], [195, 3, 1, "", "interp_by_coord"], [195, 3, 1, "", "interp_by_pix"], [195, 3, 1, "", "interp_to_geom"], [195, 3, 1, "", "is_allclose"], [195, 2, 1, "", "is_mask"], [195, 3, 1, "", "iter_by_axis"], [195, 3, 1, "", "iter_by_image"], [195, 3, 1, "", "iter_by_image_data"], [195, 3, 1, "", "iter_by_image_index"], [195, 3, 1, "", "mask_nearest_position"], [195, 2, 1, "", "meta"], [195, 3, 1, "", "normalize"], [195, 3, 1, "", "pad"], [195, 3, 1, "", "plot_grid"], [195, 3, 1, "", "plot_interactive"], [195, 2, 1, "", "quantity"], [195, 3, 1, "", "read"], [195, 3, 1, "", "reduce"], [195, 3, 1, "", "reduce_over_axes"], [195, 3, 1, "", "rename_axes"], [195, 3, 1, "", "reorder_axes"], [195, 3, 1, "", "reproject_by_image"], [195, 3, 1, "", "reproject_to_geom"], [195, 3, 1, "", "resample"], [195, 3, 1, "", "resample_axis"], [195, 3, 1, "", "sample_coord"], [195, 3, 1, "", "set_by_coord"], [195, 3, 1, "", "set_by_idx"], [195, 3, 1, "", "set_by_pix"], [195, 3, 1, "", "slice_by_idx"], [195, 3, 1, "", "split_by_axis"], [195, 3, 1, "", "sum_over_axes"], [195, 2, 1, "", "tag"], [195, 3, 1, "", "to_cube"], [195, 3, 1, "", "to_hdu"], [195, 3, 1, "", "to_hdulist"], [195, 3, 1, "", "to_swapped"], [195, 3, 1, "", "to_unit"], [195, 3, 1, "", "to_wcs"], [195, 2, 1, "", "unit"], [195, 3, 1, "", "upsample"], [195, 3, 1, "", "write"]], "gammapy.maps.HpxNDMap": [[196, 3, 1, "", "coadd"], [196, 3, 1, "", "convolve"], [196, 3, 1, "", "convolve_full"], [196, 3, 1, "", "convolve_wcs"], [196, 3, 1, "", "copy"], [196, 3, 1, "", "create"], [196, 3, 1, "", "crop"], [196, 3, 1, "", "cumsum"], [196, 3, 1, "", "cutout"], [196, 2, 1, "", "data"], [196, 3, 1, "", "dot"], [196, 3, 1, "", "downsample"], [196, 3, 1, "", "fill_by_coord"], [196, 3, 1, "", "fill_by_idx"], [196, 3, 1, "", "fill_by_pix"], [196, 3, 1, "", "fill_events"], [196, 3, 1, "", "from_geom"], [196, 3, 1, "", "from_hdu"], [196, 3, 1, "", "from_hdulist"], [196, 3, 1, "", "from_stack"], [196, 3, 1, "", "from_wcs_tiles"], [196, 2, 1, "", "geom"], [196, 3, 1, "", "get_by_coord"], [196, 3, 1, "", "get_by_idx"], [196, 3, 1, "", "get_by_pix"], [196, 3, 1, "", "get_image_by_coord"], [196, 3, 1, "", "get_image_by_idx"], [196, 3, 1, "", "get_image_by_pix"], [196, 3, 1, "", "get_spectrum"], [196, 3, 1, "", "integral"], [196, 3, 1, "", "interp_by_coord"], [196, 3, 1, "", "interp_by_pix"], [196, 3, 1, "", "interp_to_geom"], [196, 3, 1, "", "is_allclose"], [196, 2, 1, "", "is_mask"], [196, 3, 1, "", "iter_by_axis"], [196, 3, 1, "", "iter_by_image"], [196, 3, 1, "", "iter_by_image_data"], [196, 3, 1, "", "iter_by_image_index"], [196, 3, 1, "", "mask_nearest_position"], [196, 2, 1, "", "meta"], [196, 3, 1, "", "normalize"], [196, 3, 1, "", "pad"], [196, 3, 1, "", "plot"], [196, 3, 1, "", "plot_grid"], [196, 3, 1, "", "plot_interactive"], [196, 3, 1, "", "plot_mask"], [196, 2, 1, "", "quantity"], [196, 3, 1, "", "read"], [196, 3, 1, "", "reduce"], [196, 3, 1, "", "reduce_over_axes"], [196, 3, 1, "", "rename_axes"], [196, 3, 1, "", "reorder_axes"], [196, 3, 1, "", "reproject_by_image"], [196, 3, 1, "", "reproject_to_geom"], [196, 3, 1, "", "resample"], [196, 3, 1, "", "resample_axis"], [196, 3, 1, "", "sample_coord"], [196, 3, 1, "", "set_by_coord"], [196, 3, 1, "", "set_by_idx"], [196, 3, 1, "", "set_by_pix"], [196, 3, 1, "", "slice_by_idx"], [196, 3, 1, "", "smooth"], [196, 3, 1, "", "split_by_axis"], [196, 3, 1, "", "stack"], [196, 3, 1, "", "sum_over_axes"], [196, 2, 1, "", "tag"], [196, 3, 1, "", "to_cube"], [196, 3, 1, "", "to_hdu"], [196, 3, 1, "", "to_hdulist"], [196, 3, 1, "", "to_nside"], [196, 3, 1, "", "to_region_nd_map"], [196, 3, 1, "", "to_swapped"], [196, 3, 1, "", "to_unit"], [196, 3, 1, "", "to_wcs"], [196, 3, 1, "", "to_wcs_tiles"], [196, 2, 1, "", "unit"], [196, 3, 1, "", "upsample"], [196, 3, 1, "", "write"]], "gammapy.maps.LabelMapAxis": [[197, 2, 1, "", "as_plot_center"], [197, 2, 1, "", "as_plot_edges"], [197, 2, 1, "", "as_plot_labels"], [197, 2, 1, "", "as_plot_xerr"], [197, 3, 1, "", "assert_name"], [197, 2, 1, "", "bin_width"], [197, 2, 1, "", "center"], [197, 3, 1, "", "concatenate"], [197, 3, 1, "", "coord_to_idx"], [197, 3, 1, "", "coord_to_pix"], [197, 3, 1, "", "copy"], [197, 3, 1, "", "downsample"], [197, 2, 1, "", "edges"], [197, 2, 1, "", "edges_max"], [197, 2, 1, "", "edges_min"], [197, 3, 1, "", "format_plot_xaxis"], [197, 3, 1, "", "from_stack"], [197, 3, 1, "", "from_table"], [197, 3, 1, "", "is_allclose"], [197, 2, 1, "", "name"], [197, 2, 1, "", "nbin"], [197, 2, 1, "", "node_type"], [197, 3, 1, "", "pad"], [197, 3, 1, "", "pix_to_coord"], [197, 3, 1, "", "pix_to_idx"], [197, 3, 1, "", "resample"], [197, 3, 1, "", "slice"], [197, 3, 1, "", "squash"], [197, 3, 1, "", "to_header"], [197, 2, 1, "", "unit"], [197, 3, 1, "", "upsample"]], "gammapy.maps.Map": [[198, 3, 1, "", "coadd"], [198, 3, 1, "", "copy"], [198, 3, 1, "", "create"], [198, 3, 1, "", "crop"], [198, 3, 1, "", "cumsum"], [198, 2, 1, "", "data"], [198, 3, 1, "", "dot"], [198, 3, 1, "", "downsample"], [198, 3, 1, "", "fill_by_coord"], [198, 3, 1, "", "fill_by_idx"], [198, 3, 1, "", "fill_by_pix"], [198, 3, 1, "", "fill_events"], [198, 3, 1, "", "from_geom"], [198, 3, 1, "", "from_hdulist"], [198, 3, 1, "", "from_stack"], [198, 2, 1, "", "geom"], [198, 3, 1, "", "get_by_coord"], [198, 3, 1, "", "get_by_idx"], [198, 3, 1, "", "get_by_pix"], [198, 3, 1, "", "get_image_by_coord"], [198, 3, 1, "", "get_image_by_idx"], [198, 3, 1, "", "get_image_by_pix"], [198, 3, 1, "", "get_spectrum"], [198, 3, 1, "", "integral"], [198, 3, 1, "", "interp_by_coord"], [198, 3, 1, "", "interp_by_pix"], [198, 3, 1, "", "interp_to_geom"], [198, 3, 1, "", "is_allclose"], [198, 2, 1, "", "is_mask"], [198, 3, 1, "", "iter_by_axis"], [198, 3, 1, "", "iter_by_image"], [198, 3, 1, "", "iter_by_image_data"], [198, 3, 1, "", "iter_by_image_index"], [198, 3, 1, "", "mask_nearest_position"], [198, 2, 1, "", "meta"], [198, 3, 1, "", "normalize"], [198, 3, 1, "", "pad"], [198, 3, 1, "", "plot_grid"], [198, 3, 1, "", "plot_interactive"], [198, 2, 1, "", "quantity"], [198, 3, 1, "", "read"], [198, 3, 1, "", "reduce"], [198, 3, 1, "", "reduce_over_axes"], [198, 3, 1, "", "rename_axes"], [198, 3, 1, "", "reorder_axes"], [198, 3, 1, "", "reproject_by_image"], [198, 3, 1, "", "reproject_to_geom"], [198, 3, 1, "", "resample"], [198, 3, 1, "", "resample_axis"], [198, 3, 1, "", "sample_coord"], [198, 3, 1, "", "set_by_coord"], [198, 3, 1, "", "set_by_idx"], [198, 3, 1, "", "set_by_pix"], [198, 3, 1, "", "slice_by_idx"], [198, 3, 1, "", "split_by_axis"], [198, 3, 1, "", "sum_over_axes"], [198, 2, 1, "", "tag"], [198, 3, 1, "", "to_cube"], [198, 3, 1, "", "to_unit"], [198, 2, 1, "", "unit"], [198, 3, 1, "", "upsample"], [198, 3, 1, "", "write"]], "gammapy.maps.MapAxes": [[199, 3, 1, "", "assert_names"], [199, 3, 1, "", "bin_volume"], [199, 2, 1, "", "center_coord"], [199, 3, 1, "", "coord_to_idx"], [199, 3, 1, "", "coord_to_pix"], [199, 3, 1, "", "copy"], [199, 3, 1, "", "count"], [199, 3, 1, "", "downsample"], [199, 3, 1, "", "drop"], [199, 3, 1, "", "from_default"], [199, 3, 1, "", "from_table"], [199, 3, 1, "", "from_table_hdu"], [199, 3, 1, "", "get_coord"], [199, 3, 1, "", "index"], [199, 3, 1, "", "index_data"], [199, 3, 1, "", "is_allclose"], [199, 2, 1, "", "is_flat"], [199, 2, 1, "", "is_unidimensional"], [199, 2, 1, "", "iter_with_reshape"], [199, 2, 1, "", "names"], [199, 3, 1, "", "pad"], [199, 3, 1, "", "pix_to_coord"], [199, 3, 1, "", "pix_to_idx"], [199, 2, 1, "", "primary_axis"], [199, 3, 1, "", "rename_axes"], [199, 3, 1, "", "replace"], [199, 3, 1, "", "resample"], [199, 2, 1, "", "reverse"], [199, 2, 1, "", "shape"], [199, 3, 1, "", "slice_by_idx"], [199, 3, 1, "", "squash"], [199, 3, 1, "", "to_header"], [199, 3, 1, "", "to_table"], [199, 3, 1, "", "to_table_hdu"], [199, 3, 1, "", "upsample"]], "gammapy.maps.MapAxis": [[200, 2, 1, "", "as_plot_center"], [200, 2, 1, "", "as_plot_edges"], [200, 2, 1, "", "as_plot_labels"], [200, 2, 1, "", "as_plot_scale"], [200, 2, 1, "", "as_plot_xerr"], [200, 3, 1, "", "assert_name"], [200, 2, 1, "", "bin_width"], [200, 2, 1, "", "bounds"], [200, 2, 1, "", "center"], [200, 3, 1, "", "concatenate"], [200, 3, 1, "", "coord_to_idx"], [200, 3, 1, "", "coord_to_pix"], [200, 3, 1, "", "copy"], [200, 3, 1, "", "downsample"], [200, 2, 1, "", "edges"], [200, 2, 1, "", "edges_max"], [200, 2, 1, "", "edges_min"], [200, 3, 1, "", "format_plot_xaxis"], [200, 3, 1, "", "format_plot_yaxis"], [200, 3, 1, "", "from_bounds"], [200, 3, 1, "", "from_edges"], [200, 3, 1, "", "from_energy_bounds"], [200, 3, 1, "", "from_energy_edges"], [200, 3, 1, "", "from_nodes"], [200, 3, 1, "", "from_stack"], [200, 3, 1, "", "from_table"], [200, 3, 1, "", "from_table_hdu"], [200, 3, 1, "", "group_table"], [200, 2, 1, "", "interp"], [200, 3, 1, "", "is_aligned"], [200, 3, 1, "", "is_allclose"], [200, 2, 1, "", "is_energy_axis"], [200, 2, 1, "", "iter_by_edges"], [200, 2, 1, "", "name"], [200, 2, 1, "", "nbin"], [200, 2, 1, "", "nbin_per_decade"], [200, 2, 1, "", "node_type"], [200, 3, 1, "", "pad"], [200, 3, 1, "", "pix_to_coord"], [200, 3, 1, "", "pix_to_idx"], [200, 3, 1, "", "rename"], [200, 3, 1, "", "round"], [200, 3, 1, "", "slice"], [200, 3, 1, "", "squash"], [200, 3, 1, "", "to_header"], [200, 3, 1, "", "to_node_type"], [200, 3, 1, "", "to_table"], [200, 3, 1, "", "to_table_hdu"], [200, 2, 1, "", "unit"], [200, 3, 1, "", "upsample"], [200, 2, 1, "", "use_center_as_plot_labels"], [200, 3, 1, "", "wrap_coord"]], "gammapy.maps.MapCoord": [[201, 3, 1, "", "apply_mask"], [201, 2, 1, "", "axis_names"], [201, 2, 1, "", "broadcasted"], [201, 3, 1, "", "copy"], [201, 3, 1, "", "create"], [201, 2, 1, "", "flat"], [201, 2, 1, "", "frame"], [201, 2, 1, "", "lat"], [201, 2, 1, "", "lon"], [201, 2, 1, "", "match_by_name"], [201, 2, 1, "", "ndim"], [201, 2, 1, "", "phi"], [201, 2, 1, "", "shape"], [201, 2, 1, "", "size"], [201, 2, 1, "", "skycoord"], [201, 2, 1, "", "theta"], [201, 3, 1, "", "to_frame"]], "gammapy.maps.Maps": [[202, 3, 1, "", "clear"], [202, 3, 1, "", "from_geom"], [202, 3, 1, "", "from_hdulist"], [202, 2, 1, "", "geom"], [202, 3, 1, "", "get"], [202, 3, 1, "", "items"], [202, 3, 1, "", "keys"], [202, 3, 1, "", "pop"], [202, 3, 1, "", "popitem"], [202, 3, 1, "", "read"], [202, 3, 1, "", "setdefault"], [202, 3, 1, "", "to_hdulist"], [202, 3, 1, "", "update"], [202, 3, 1, "", "values"], [202, 3, 1, "", "write"]], "gammapy.maps.RegionGeom": [[203, 2, 1, "", "as_energy_true"], [203, 2, 1, "", "axes"], [203, 2, 1, "", "axes_names"], [203, 3, 1, "", "bin_volume"], [203, 2, 1, "", "binsz_wcs"], [203, 2, 1, "", "center_coord"], [203, 2, 1, "", "center_pix"], [203, 2, 1, "", "center_skydir"], [203, 3, 1, "", "contains"], [203, 3, 1, "", "contains_pix"], [203, 3, 1, "", "contains_wcs_pix"], [203, 3, 1, "", "coord_to_idx"], [203, 3, 1, "", "coord_to_pix"], [203, 3, 1, "", "copy"], [203, 3, 1, "", "create"], [203, 3, 1, "", "create_mask"], [203, 3, 1, "", "crop"], [203, 3, 1, "", "data_nbytes"], [203, 2, 1, "", "data_shape"], [203, 2, 1, "", "data_shape_axes"], [203, 3, 1, "", "downsample"], [203, 3, 1, "", "drop"], [203, 3, 1, "", "energy_mask"], [203, 2, 1, "", "frame"], [203, 3, 1, "", "from_hdulist"], [203, 3, 1, "", "from_regions"], [203, 3, 1, "", "get_coord"], [203, 3, 1, "", "get_idx"], [203, 3, 1, "", "get_wcs_coord_and_weights"], [203, 2, 1, "", "has_energy_axis"], [203, 2, 1, "", "is_all_point_sky_regions"], [203, 3, 1, "", "is_allclose"], [203, 2, 1, "", "is_allsky"], [203, 2, 1, "", "is_flat"], [203, 2, 1, "", "is_hpx"], [203, 2, 1, "", "is_image"], [203, 2, 1, "", "is_region"], [203, 2, 1, "", "is_regular"], [203, 2, 1, "", "npix"], [203, 3, 1, "", "pad"], [203, 3, 1, "", "pix_to_coord"], [203, 3, 1, "", "pix_to_idx"], [203, 3, 1, "", "plot_region"], [203, 2, 1, "", "projection"], [203, 2, 1, "", "region"], [203, 3, 1, "", "rename_axes"], [203, 3, 1, "", "replace_axis"], [203, 3, 1, "", "resample_axis"], [203, 3, 1, "", "separation"], [203, 3, 1, "", "slice_by_idx"], [203, 3, 1, "", "solid_angle"], [203, 3, 1, "", "squash"], [203, 3, 1, "", "to_bands_hdu"], [203, 3, 1, "", "to_binsz"], [203, 3, 1, "", "to_binsz_wcs"], [203, 3, 1, "", "to_cube"], [203, 3, 1, "", "to_hdulist"], [203, 3, 1, "", "to_image"], [203, 3, 1, "", "to_wcs_geom"], [203, 3, 1, "", "union"], [203, 3, 1, "", "upsample"], [203, 2, 1, "", "wcs"], [203, 2, 1, "", "width"]], "gammapy.maps.RegionNDMap": [[204, 3, 1, "", "coadd"], [204, 3, 1, "", "copy"], [204, 3, 1, "", "create"], [204, 3, 1, "", "crop"], [204, 3, 1, "", "cumsum"], [204, 3, 1, "", "cutout"], [204, 2, 1, "", "data"], [204, 3, 1, "", "dot"], [204, 3, 1, "", "downsample"], [204, 3, 1, "", "fill_by_coord"], [204, 3, 1, "", "fill_by_idx"], [204, 3, 1, "", "fill_by_pix"], [204, 3, 1, "", "fill_events"], [204, 3, 1, "", "from_geom"], [204, 3, 1, "", "from_hdulist"], [204, 3, 1, "", "from_stack"], [204, 3, 1, "", "from_table"], [204, 2, 1, "", "geom"], [204, 3, 1, "", "get_by_coord"], [204, 3, 1, "", "get_by_idx"], [204, 3, 1, "", "get_by_pix"], [204, 3, 1, "", "get_image_by_coord"], [204, 3, 1, "", "get_image_by_idx"], [204, 3, 1, "", "get_image_by_pix"], [204, 3, 1, "", "get_spectrum"], [204, 3, 1, "", "integral"], [204, 3, 1, "", "interp_by_coord"], [204, 3, 1, "", "interp_by_pix"], [204, 3, 1, "", "interp_to_geom"], [204, 3, 1, "", "is_allclose"], [204, 2, 1, "", "is_mask"], [204, 3, 1, "", "iter_by_axis"], [204, 3, 1, "", "iter_by_axis_data"], [204, 3, 1, "", "iter_by_image"], [204, 3, 1, "", "iter_by_image_data"], [204, 3, 1, "", "iter_by_image_index"], [204, 3, 1, "", "mask_nearest_position"], [204, 2, 1, "", "meta"], [204, 3, 1, "", "normalize"], [204, 3, 1, "", "pad"], [204, 3, 1, "", "plot"], [204, 3, 1, "", "plot_grid"], [204, 3, 1, "", "plot_hist"], [204, 3, 1, "", "plot_interactive"], [204, 3, 1, "", "plot_mask"], [204, 3, 1, "", "plot_region"], [204, 2, 1, "", "quantity"], [204, 3, 1, "", "read"], [204, 3, 1, "", "reduce"], [204, 3, 1, "", "reduce_over_axes"], [204, 3, 1, "", "rename_axes"], [204, 3, 1, "", "reorder_axes"], [204, 3, 1, "", "reproject_by_image"], [204, 3, 1, "", "reproject_to_geom"], [204, 3, 1, "", "resample"], [204, 3, 1, "", "resample_axis"], [204, 3, 1, "", "sample_coord"], [204, 3, 1, "", "set_by_coord"], [204, 3, 1, "", "set_by_idx"], [204, 3, 1, "", "set_by_pix"], [204, 3, 1, "", "slice_by_idx"], [204, 3, 1, "", "split_by_axis"], [204, 3, 1, "", "stack"], [204, 3, 1, "", "sum_over_axes"], [204, 2, 1, "", "tag"], [204, 3, 1, "", "to_cube"], [204, 3, 1, "", "to_hdulist"], [204, 3, 1, "", "to_region_nd_map"], [204, 3, 1, "", "to_table"], [204, 3, 1, "", "to_unit"], [204, 2, 1, "", "unit"], [204, 3, 1, "", "upsample"], [204, 3, 1, "", "write"]], "gammapy.maps.TimeMapAxis": [[205, 2, 1, "", "as_plot_center"], [205, 2, 1, "", "as_plot_edges"], [205, 2, 1, "", "as_plot_labels"], [205, 2, 1, "", "as_plot_xerr"], [205, 3, 1, "", "assert_name"], [205, 2, 1, "", "bin_width"], [205, 2, 1, "", "bounds"], [205, 2, 1, "", "center"], [205, 3, 1, "", "coord_to_idx"], [205, 3, 1, "", "coord_to_pix"], [205, 3, 1, "", "copy"], [205, 3, 1, "", "downsample"], [205, 2, 1, "", "edges"], [205, 2, 1, "", "edges_max"], [205, 2, 1, "", "edges_min"], [205, 3, 1, "", "format_plot_xaxis"], [205, 3, 1, "", "from_gti"], [205, 3, 1, "", "from_gti_bounds"], [205, 3, 1, "", "from_table"], [205, 3, 1, "", "from_time_bounds"], [205, 3, 1, "", "from_time_edges"], [205, 3, 1, "", "group_table"], [205, 2, 1, "", "interp"], [205, 3, 1, "", "is_aligned"], [205, 3, 1, "", "is_allclose"], [205, 2, 1, "", "is_contiguous"], [205, 2, 1, "", "iter_by_edges"], [205, 2, 1, "", "name"], [205, 2, 1, "", "nbin"], [205, 2, 1, "", "node_type"], [205, 3, 1, "", "pix_to_coord"], [205, 3, 1, "", "pix_to_idx"], [205, 2, 1, "", "reference_time"], [205, 3, 1, "", "slice"], [205, 3, 1, "", "squash"], [205, 2, 1, "", "time_bounds"], [205, 2, 1, "", "time_delta"], [205, 2, 1, "", "time_edges"], [205, 2, 1, "", "time_format"], [205, 2, 1, "", "time_max"], [205, 2, 1, "", "time_mid"], [205, 2, 1, "", "time_min"], [205, 3, 1, "", "to_contiguous"], [205, 3, 1, "", "to_gti"], [205, 3, 1, "", "to_header"], [205, 3, 1, "", "to_table"], [205, 2, 1, "", "unit"], [205, 3, 1, "", "upsample"]], "gammapy.maps.WcsGeom": [[206, 2, 1, "", "as_energy_true"], [206, 2, 1, "", "axes"], [206, 2, 1, "", "axes_names"], [206, 3, 1, "", "bin_volume"], [206, 3, 1, "", "binary_structure"], [206, 3, 1, "", "boundary_mask"], [206, 2, 1, "", "center_coord"], [206, 2, 1, "", "center_pix"], [206, 2, 1, "", "center_skydir"], [206, 3, 1, "", "contains"], [206, 3, 1, "", "contains_pix"], [206, 3, 1, "", "coord_to_idx"], [206, 3, 1, "", "coord_to_pix"], [206, 3, 1, "", "copy"], [206, 3, 1, "", "create"], [206, 3, 1, "", "create_mask"], [206, 3, 1, "", "crop"], [206, 3, 1, "", "cutout"], [206, 3, 1, "", "cutout_slices"], [206, 3, 1, "", "data_nbytes"], [206, 2, 1, "", "data_shape"], [206, 2, 1, "", "data_shape_axes"], [206, 2, 1, "", "data_shape_image"], [206, 3, 1, "", "downsample"], [206, 3, 1, "", "drop"], [206, 3, 1, "", "energy_mask"], [206, 2, 1, "", "footprint"], [206, 2, 1, "", "footprint_rectangle_sky_region"], [206, 2, 1, "", "frame"], [206, 3, 1, "", "from_aligned"], [206, 3, 1, "", "from_hdulist"], [206, 3, 1, "", "from_header"], [206, 3, 1, "", "get_coord"], [206, 3, 1, "", "get_idx"], [206, 3, 1, "", "get_pix"], [206, 2, 1, "", "has_energy_axis"], [206, 3, 1, "", "is_aligned"], [206, 3, 1, "", "is_allclose"], [206, 2, 1, "", "is_allsky"], [206, 2, 1, "", "is_flat"], [206, 2, 1, "", "is_hpx"], [206, 2, 1, "", "is_image"], [206, 2, 1, "", "is_region"], [206, 2, 1, "", "is_regular"], [206, 2, 1, "", "ndim"], [206, 2, 1, "", "npix"], [206, 3, 1, "", "pad"], [206, 3, 1, "", "pix_to_coord"], [206, 3, 1, "", "pix_to_idx"], [206, 2, 1, "", "pixel_area"], [206, 2, 1, "", "pixel_scales"], [206, 2, 1, "", "projection"], [206, 3, 1, "", "region_mask"], [206, 3, 1, "", "region_weights"], [206, 3, 1, "", "rename_axes"], [206, 3, 1, "", "replace_axis"], [206, 3, 1, "", "resample_axis"], [206, 3, 1, "", "separation"], [206, 2, 1, "", "shape_axes"], [206, 3, 1, "", "slice_by_idx"], [206, 3, 1, "", "solid_angle"], [206, 3, 1, "", "squash"], [206, 3, 1, "", "to_bands_hdu"], [206, 3, 1, "", "to_binsz"], [206, 3, 1, "", "to_cube"], [206, 3, 1, "", "to_even_npix"], [206, 3, 1, "", "to_header"], [206, 3, 1, "", "to_image"], [206, 3, 1, "", "to_odd_npix"], [206, 3, 1, "", "upsample"], [206, 2, 1, "", "wcs"], [206, 2, 1, "", "width"]], "gammapy.maps.WcsMap": [[207, 3, 1, "", "coadd"], [207, 3, 1, "", "copy"], [207, 3, 1, "", "create"], [207, 3, 1, "", "crop"], [207, 3, 1, "", "cumsum"], [207, 2, 1, "", "data"], [207, 3, 1, "", "dot"], [207, 3, 1, "", "downsample"], [207, 3, 1, "", "fill_by_coord"], [207, 3, 1, "", "fill_by_idx"], [207, 3, 1, "", "fill_by_pix"], [207, 3, 1, "", "fill_events"], [207, 3, 1, "", "from_geom"], [207, 3, 1, "", "from_hdulist"], [207, 3, 1, "", "from_stack"], [207, 2, 1, "", "geom"], [207, 3, 1, "", "get_by_coord"], [207, 3, 1, "", "get_by_idx"], [207, 3, 1, "", "get_by_pix"], [207, 3, 1, "", "get_image_by_coord"], [207, 3, 1, "", "get_image_by_idx"], [207, 3, 1, "", "get_image_by_pix"], [207, 3, 1, "", "get_spectrum"], [207, 3, 1, "", "integral"], [207, 3, 1, "", "interp_by_coord"], [207, 3, 1, "", "interp_by_pix"], [207, 3, 1, "", "interp_to_geom"], [207, 3, 1, "", "is_allclose"], [207, 2, 1, "", "is_mask"], [207, 3, 1, "", "iter_by_axis"], [207, 3, 1, "", "iter_by_image"], [207, 3, 1, "", "iter_by_image_data"], [207, 3, 1, "", "iter_by_image_index"], [207, 3, 1, "", "mask_nearest_position"], [207, 2, 1, "", "meta"], [207, 3, 1, "", "normalize"], [207, 3, 1, "", "pad"], [207, 3, 1, "", "plot_grid"], [207, 3, 1, "", "plot_interactive"], [207, 2, 1, "", "quantity"], [207, 3, 1, "", "read"], [207, 3, 1, "", "reduce"], [207, 3, 1, "", "reduce_over_axes"], [207, 3, 1, "", "rename_axes"], [207, 3, 1, "", "reorder_axes"], [207, 3, 1, "", "reproject_by_image"], [207, 3, 1, "", "reproject_to_geom"], [207, 3, 1, "", "resample"], [207, 3, 1, "", "resample_axis"], [207, 3, 1, "", "sample_coord"], [207, 3, 1, "", "set_by_coord"], [207, 3, 1, "", "set_by_idx"], [207, 3, 1, "", "set_by_pix"], [207, 3, 1, "", "slice_by_idx"], [207, 3, 1, "", "split_by_axis"], [207, 3, 1, "", "sum_over_axes"], [207, 2, 1, "", "tag"], [207, 3, 1, "", "to_cube"], [207, 3, 1, "", "to_hdu"], [207, 3, 1, "", "to_hdulist"], [207, 3, 1, "", "to_unit"], [207, 2, 1, "", "unit"], [207, 3, 1, "", "upsample"], [207, 3, 1, "", "write"]], "gammapy.maps.WcsNDMap": [[208, 3, 1, "", "binary_dilate"], [208, 3, 1, "", "binary_erode"], [208, 3, 1, "", "coadd"], [208, 3, 1, "", "convolve"], [208, 3, 1, "", "copy"], [208, 3, 1, "", "create"], [208, 3, 1, "", "crop"], [208, 3, 1, "", "cumsum"], [208, 3, 1, "", "cutout"], [208, 3, 1, "", "cutout_and_mask_region"], [208, 2, 1, "", "data"], [208, 3, 1, "", "dot"], [208, 3, 1, "", "downsample"], [208, 3, 1, "", "fill_by_coord"], [208, 3, 1, "", "fill_by_idx"], [208, 3, 1, "", "fill_by_pix"], [208, 3, 1, "", "fill_events"], [208, 3, 1, "", "from_geom"], [208, 3, 1, "", "from_hdu"], [208, 3, 1, "", "from_hdulist"], [208, 3, 1, "", "from_stack"], [208, 2, 1, "", "geom"], [208, 3, 1, "", "get_by_coord"], [208, 3, 1, "", "get_by_idx"], [208, 3, 1, "", "get_by_pix"], [208, 3, 1, "", "get_image_by_coord"], [208, 3, 1, "", "get_image_by_idx"], [208, 3, 1, "", "get_image_by_pix"], [208, 3, 1, "", "get_spectrum"], [208, 3, 1, "", "integral"], [208, 3, 1, "", "interp_by_coord"], [208, 3, 1, "", "interp_by_pix"], [208, 3, 1, "", "interp_to_geom"], [208, 3, 1, "", "is_allclose"], [208, 2, 1, "", "is_mask"], [208, 3, 1, "", "iter_by_axis"], [208, 3, 1, "", "iter_by_image"], [208, 3, 1, "", "iter_by_image_data"], [208, 3, 1, "", "iter_by_image_index"], [208, 3, 1, "", "mask_contains_region"], [208, 3, 1, "", "mask_nearest_position"], [208, 2, 1, "", "meta"], [208, 3, 1, "", "normalize"], [208, 3, 1, "", "pad"], [208, 3, 1, "", "plot"], [208, 3, 1, "", "plot_grid"], [208, 3, 1, "", "plot_interactive"], [208, 3, 1, "", "plot_mask"], [208, 2, 1, "", "quantity"], [208, 3, 1, "", "read"], [208, 3, 1, "", "reduce"], [208, 3, 1, "", "reduce_over_axes"], [208, 3, 1, "", "rename_axes"], [208, 3, 1, "", "reorder_axes"], [208, 3, 1, "", "reproject_by_image"], [208, 3, 1, "", "reproject_to_geom"], [208, 3, 1, "", "resample"], [208, 3, 1, "", "resample_axis"], [208, 3, 1, "", "sample_coord"], [208, 3, 1, "", "set_by_coord"], [208, 3, 1, "", "set_by_idx"], [208, 3, 1, "", "set_by_pix"], [208, 3, 1, "", "slice_by_idx"], [208, 3, 1, "", "smooth"], [208, 3, 1, "", "split_by_axis"], [208, 3, 1, "", "stack"], [208, 3, 1, "", "sum_over_axes"], [208, 2, 1, "", "tag"], [208, 3, 1, "", "to_cube"], [208, 3, 1, "", "to_hdu"], [208, 3, 1, "", "to_hdulist"], [208, 3, 1, "", "to_region_nd_map"], [208, 3, 1, "", "to_region_nd_map_histogram"], [208, 3, 1, "", "to_unit"], [208, 2, 1, "", "unit"], [208, 3, 1, "", "upsample"], [208, 3, 1, "", "write"]], "gammapy.modeling": [[211, 1, 1, "", "Covariance"], [212, 1, 1, "", "CovarianceResult"], [213, 1, 1, "", "Fit"], [214, 1, 1, "", "FitResult"], [215, 1, 1, "", "OptimizeResult"], [216, 1, 1, "", "Parameter"], [217, 1, 1, "", "Parameters"], [218, 1, 1, "", "PriorParameter"], [219, 1, 1, "", "PriorParameters"], [10, 0, 0, "-", "models"], [289, 4, 1, "", "select_nested_models"], [290, 4, 1, "", "stat_profile_ul_scipy"]], "gammapy.modeling.Covariance": [[211, 2, 1, "", "correlation"], [211, 2, 1, "", "data"], [211, 3, 1, "", "from_factor_matrix"], [211, 3, 1, "", "from_stack"], [211, 3, 1, "", "get_subcovariance"], [211, 3, 1, "", "plot_correlation"], [211, 2, 1, "", "scipy_mvn"], [211, 3, 1, "", "set_subcovariance"], [211, 2, 1, "", "shape"]], "gammapy.modeling.CovarianceResult": [[212, 2, 1, "", "backend"], [212, 2, 1, "", "matrix"], [212, 2, 1, "", "message"], [212, 2, 1, "", "method"], [212, 2, 1, "", "success"], [212, 3, 1, "", "to_dict"]], "gammapy.modeling.Fit": [[213, 3, 1, "", "confidence"], [213, 3, 1, "", "covariance"], [213, 3, 1, "", "optimize"], [213, 3, 1, "", "run"], [213, 3, 1, "", "stat_contour"], [213, 3, 1, "", "stat_profile"], [213, 3, 1, "", "stat_surface"]], "gammapy.modeling.FitResult": [[214, 2, 1, "", "backend"], [214, 2, 1, "", "covariance_result"], [214, 2, 1, "", "message"], [214, 2, 1, "", "method"], [214, 2, 1, "", "minuit"], [214, 2, 1, "", "models"], [214, 2, 1, "", "nfev"], [214, 2, 1, "", "optimize_result"], [214, 2, 1, "", "parameters"], [214, 2, 1, "", "success"], [214, 2, 1, "", "total_stat"], [214, 2, 1, "", "trace"], [214, 3, 1, "", "write"]], "gammapy.modeling.OptimizeResult": [[215, 2, 1, "", "backend"], [215, 2, 1, "", "message"], [215, 2, 1, "", "method"], [215, 2, 1, "", "minuit"], [215, 2, 1, "", "models"], [215, 2, 1, "", "nfev"], [215, 2, 1, "", "parameters"], [215, 2, 1, "", "success"], [215, 3, 1, "", "to_dict"], [215, 2, 1, "", "total_stat"], [215, 2, 1, "", "trace"]], "gammapy.modeling.Parameter": [[216, 3, 1, "", "autoscale"], [216, 3, 1, "", "check_limits"], [216, 2, 1, "", "conf_max"], [216, 2, 1, "", "conf_min"], [216, 3, 1, "", "copy"], [216, 2, 1, "", "error"], [216, 2, 1, "", "factor"], [216, 2, 1, "", "factor_max"], [216, 2, 1, "", "factor_min"], [216, 2, 1, "", "frozen"], [216, 2, 1, "", "max"], [216, 2, 1, "", "min"], [216, 2, 1, "", "name"], [216, 2, 1, "", "prior"], [216, 3, 1, "", "prior_stat_sum"], [216, 2, 1, "", "quantity"], [216, 2, 1, "", "scale"], [216, 2, 1, "", "scale_method"], [216, 2, 1, "", "scan_max"], [216, 2, 1, "", "scan_min"], [216, 2, 1, "", "scan_n_sigma"], [216, 2, 1, "", "scan_values"], [216, 3, 1, "", "to_dict"], [216, 2, 1, "", "type"], [216, 2, 1, "", "unit"], [216, 3, 1, "", "update_from_dict"], [216, 2, 1, "", "value"]], "gammapy.modeling.Parameters": [[217, 3, 1, "", "autoscale"], [217, 3, 1, "", "check_limits"], [217, 3, 1, "", "copy"], [217, 3, 1, "", "count"], [217, 2, 1, "", "free_parameters"], [217, 3, 1, "", "freeze_all"], [217, 3, 1, "", "from_dict"], [217, 3, 1, "", "from_stack"], [217, 3, 1, "", "index"], [217, 2, 1, "", "max"], [217, 2, 1, "", "min"], [217, 2, 1, "", "names"], [217, 2, 1, "", "prior"], [217, 3, 1, "", "prior_stat_sum"], [217, 3, 1, "", "restore_status"], [217, 3, 1, "", "select"], [217, 3, 1, "", "set_parameter_factors"], [217, 3, 1, "", "to_dict"], [217, 3, 1, "", "to_table"], [217, 2, 1, "", "types"], [217, 3, 1, "", "unfreeze_all"], [217, 2, 1, "", "unique_parameters"], [217, 2, 1, "", "value"]], "gammapy.modeling.PriorParameter": [[218, 3, 1, "", "autoscale"], [218, 3, 1, "", "check_limits"], [218, 2, 1, "", "conf_max"], [218, 2, 1, "", "conf_min"], [218, 3, 1, "", "copy"], [218, 2, 1, "", "error"], [218, 2, 1, "", "factor"], [218, 2, 1, "", "factor_max"], [218, 2, 1, "", "factor_min"], [218, 2, 1, "", "frozen"], [218, 2, 1, "", "max"], [218, 2, 1, "", "min"], [218, 2, 1, "", "name"], [218, 2, 1, "", "prior"], [218, 3, 1, "", "prior_stat_sum"], [218, 2, 1, "", "quantity"], [218, 2, 1, "", "scale"], [218, 2, 1, "", "scale_method"], [218, 2, 1, "", "scan_max"], [218, 2, 1, "", "scan_min"], [218, 2, 1, "", "scan_n_sigma"], [218, 2, 1, "", "scan_values"], [218, 3, 1, "", "to_dict"], [218, 2, 1, "", "type"], [218, 2, 1, "", "unit"], [218, 3, 1, "", "update_from_dict"], [218, 2, 1, "", "value"]], "gammapy.modeling.PriorParameters": [[219, 3, 1, "", "autoscale"], [219, 3, 1, "", "check_limits"], [219, 3, 1, "", "copy"], [219, 3, 1, "", "count"], [219, 2, 1, "", "free_parameters"], [219, 3, 1, "", "freeze_all"], [219, 3, 1, "", "from_dict"], [219, 3, 1, "", "from_stack"], [219, 3, 1, "", "index"], [219, 2, 1, "", "max"], [219, 2, 1, "", "min"], [219, 2, 1, "", "names"], [219, 2, 1, "", "prior"], [219, 3, 1, "", "prior_stat_sum"], [219, 3, 1, "", "restore_status"], [219, 3, 1, "", "select"], [219, 3, 1, "", "set_parameter_factors"], [219, 3, 1, "", "to_dict"], [219, 3, 1, "", "to_table"], [219, 2, 1, "", "types"], [219, 3, 1, "", "unfreeze_all"], [219, 2, 1, "", "unique_parameters"], [219, 2, 1, "", "value"]], "gammapy.modeling.models": [[220, 1, 1, "", "BrokenPowerLawSpectralModel"], [221, 1, 1, "", "CompoundSpectralModel"], [222, 1, 1, "", "ConstantFluxSpatialModel"], [223, 1, 1, "", "ConstantSpatialModel"], [224, 1, 1, "", "ConstantSpectralModel"], [225, 1, 1, "", "ConstantTemporalModel"], [226, 1, 1, "", "DatasetModels"], [227, 1, 1, "", "DiskSpatialModel"], [228, 1, 1, "", "EBLAbsorptionNormSpectralModel"], [229, 5, 1, "", "EBL_DATA_BUILTIN"], [230, 1, 1, "", "ExpCutoffPowerLaw3FGLSpectralModel"], [231, 1, 1, "", "ExpCutoffPowerLawNormSpectralModel"], [232, 1, 1, "", "ExpCutoffPowerLawSpectralModel"], [233, 1, 1, "", "ExpDecayTemporalModel"], [234, 1, 1, "", "FoVBackgroundModel"], [235, 1, 1, "", "GaussianPrior"], [236, 1, 1, "", "GaussianSpatialModel"], [237, 1, 1, "", "GaussianSpectralModel"], [238, 1, 1, "", "GaussianTemporalModel"], [239, 1, 1, "", "GeneralizedGaussianSpatialModel"], [240, 1, 1, "", "GeneralizedGaussianTemporalModel"], [241, 1, 1, "", "LightCurveTemplateTemporalModel"], [242, 1, 1, "", "LinearTemporalModel"], [243, 1, 1, "", "LogParabolaNormSpectralModel"], [244, 1, 1, "", "LogParabolaSpectralModel"], [245, 1, 1, "", "LogUniformPrior"], [246, 5, 1, "", "MODEL_REGISTRY"], [247, 1, 1, "", "MeyerCrabSpectralModel"], [248, 1, 1, "", "Model"], [249, 1, 1, "", "ModelBase"], [250, 1, 1, "", "Models"], [251, 1, 1, "", "NaimaSpectralModel"], [252, 1, 1, "", "PiecewiseNormSpatialModel"], [253, 1, 1, "", "PiecewiseNormSpectralModel"], [254, 1, 1, "", "PointSpatialModel"], [255, 1, 1, "", "PowerLaw2SpectralModel"], [256, 1, 1, "", "PowerLawNormSpectralModel"], [257, 1, 1, "", "PowerLawSpectralModel"], [258, 1, 1, "", "PowerLawTemporalModel"], [259, 1, 1, "", "Prior"], [260, 5, 1, "", "SPATIAL_MODEL_REGISTRY"], [261, 5, 1, "", "SPECTRAL_MODEL_REGISTRY"], [262, 1, 1, "", "ScaleSpectralModel"], [263, 1, 1, "", "Shell2SpatialModel"], [264, 1, 1, "", "ShellSpatialModel"], [265, 1, 1, "", "SineTemporalModel"], [266, 1, 1, "", "SkyModel"], [267, 1, 1, "", "SmoothBrokenPowerLawSpectralModel"], [268, 1, 1, "", "SpatialModel"], [269, 1, 1, "", "SpectralModel"], [270, 1, 1, "", "SuperExpCutoffPowerLaw3FGLSpectralModel"], [271, 1, 1, "", "SuperExpCutoffPowerLaw4FGLDR3SpectralModel"], [272, 1, 1, "", "SuperExpCutoffPowerLaw4FGLSpectralModel"], [273, 5, 1, "", "TEMPORAL_MODEL_REGISTRY"], [274, 1, 1, "", "TemplateNDSpatialModel"], [275, 1, 1, "", "TemplateNDSpectralModel"], [276, 1, 1, "", "TemplateNPredModel"], [277, 1, 1, "", "TemplatePhaseCurveTemporalModel"], [278, 1, 1, "", "TemplateSpatialModel"], [279, 1, 1, "", "TemplateSpectralModel"], [280, 1, 1, "", "TemporalModel"], [281, 1, 1, "", "UniformPrior"], [282, 4, 1, "", "create_cosmic_ray_spectral_model"], [283, 4, 1, "", "create_crab_spectral_model"], [284, 4, 1, "", "create_fermi_isotropic_diffuse_model"], [285, 4, 1, "", "integrate_spectrum"], [286, 4, 1, "", "read_hermes_cube"], [287, 4, 1, "", "scale_plot_flux"], [10, 0, 0, "-", "utils"]], "gammapy.modeling.models.BrokenPowerLawSpectralModel": [[220, 3, 1, "", "__call__"], [220, 2, 1, "", "amplitude"], [220, 3, 1, "", "copy"], [220, 2, 1, "", "covariance"], [220, 2, 1, "", "default_parameters"], [220, 2, 1, "", "ebreak"], [220, 3, 1, "", "energy_flux"], [220, 3, 1, "", "energy_flux_error"], [220, 3, 1, "", "evaluate"], [220, 3, 1, "", "evaluate_error"], [220, 3, 1, "", "freeze"], [220, 3, 1, "", "from_dict"], [220, 3, 1, "", "from_parameters"], [220, 2, 1, "", "frozen"], [220, 2, 1, "", "index1"], [220, 2, 1, "", "index2"], [220, 3, 1, "", "integral"], [220, 3, 1, "", "integral_error"], [220, 3, 1, "", "inverse"], [220, 3, 1, "", "inverse_all"], [220, 2, 1, "", "is_norm_spectral_model"], [220, 2, 1, "", "parameters"], [220, 2, 1, "", "parameters_unique_names"], [220, 2, 1, "", "pivot_energy"], [220, 3, 1, "", "plot"], [220, 3, 1, "", "plot_error"], [220, 3, 1, "", "reassign"], [220, 3, 1, "", "reference_fluxes"], [220, 3, 1, "", "spectral_index"], [220, 3, 1, "", "spectral_index_error"], [220, 2, 1, "", "tag"], [220, 3, 1, "", "to_dict"], [220, 2, 1, "", "type"], [220, 3, 1, "", "unfreeze"]], "gammapy.modeling.models.CompoundSpectralModel": [[221, 3, 1, "", "__call__"], [221, 3, 1, "", "copy"], [221, 2, 1, "", "covariance"], [221, 2, 1, "", "default_parameters"], [221, 3, 1, "", "energy_flux"], [221, 3, 1, "", "energy_flux_error"], [221, 3, 1, "", "evaluate"], [221, 3, 1, "", "evaluate_error"], [221, 3, 1, "", "freeze"], [221, 3, 1, "", "from_dict"], [221, 3, 1, "", "from_parameters"], [221, 2, 1, "", "frozen"], [221, 3, 1, "", "integral"], [221, 3, 1, "", "integral_error"], [221, 3, 1, "", "inverse"], [221, 3, 1, "", "inverse_all"], [221, 2, 1, "", "is_norm_spectral_model"], [221, 2, 1, "", "parameters"], [221, 2, 1, "", "parameters_unique_names"], [221, 2, 1, "", "pivot_energy"], [221, 3, 1, "", "plot"], [221, 3, 1, "", "plot_error"], [221, 3, 1, "", "reassign"], [221, 3, 1, "", "reference_fluxes"], [221, 3, 1, "", "spectral_index"], [221, 3, 1, "", "spectral_index_error"], [221, 2, 1, "", "tag"], [221, 3, 1, "", "to_dict"], [221, 2, 1, "", "type"], [221, 3, 1, "", "unfreeze"]], "gammapy.modeling.models.ConstantFluxSpatialModel": [[222, 3, 1, "", "__call__"], [222, 3, 1, "", "copy"], [222, 2, 1, "", "covariance"], [222, 2, 1, "", "default_parameters"], [222, 3, 1, "", "evaluate"], [222, 3, 1, "", "evaluate_geom"], [222, 2, 1, "", "evaluation_bin_size_min"], [222, 2, 1, "", "evaluation_radius"], [222, 2, 1, "", "evaluation_region"], [222, 2, 1, "", "frame"], [222, 3, 1, "", "freeze"], [222, 3, 1, "", "from_dict"], [222, 3, 1, "", "from_parameters"], [222, 3, 1, "", "from_position"], [222, 2, 1, "", "frozen"], [222, 3, 1, "", "integrate_geom"], [222, 2, 1, "", "is_energy_dependent"], [222, 2, 1, "", "parameters"], [222, 2, 1, "", "parameters_unique_names"], [222, 2, 1, "", "phi_0"], [222, 3, 1, "", "plot"], [222, 3, 1, "", "plot_error"], [222, 3, 1, "", "plot_grid"], [222, 3, 1, "", "plot_interactive"], [222, 3, 1, "", "plot_position_error"], [222, 2, 1, "", "position"], [222, 2, 1, "", "position_error"], [222, 2, 1, "", "position_lonlat"], [222, 3, 1, "", "reassign"], [222, 2, 1, "", "tag"], [222, 3, 1, "", "to_dict"], [222, 3, 1, "", "to_region"], [222, 2, 1, "", "type"], [222, 3, 1, "", "unfreeze"]], "gammapy.modeling.models.ConstantSpatialModel": [[223, 3, 1, "", "__call__"], [223, 3, 1, "", "copy"], [223, 2, 1, "", "covariance"], [223, 2, 1, "", "default_parameters"], [223, 3, 1, "", "evaluate"], [223, 3, 1, "", "evaluate_geom"], [223, 2, 1, "", "evaluation_bin_size_min"], [223, 2, 1, "", "evaluation_radius"], [223, 2, 1, "", "evaluation_region"], [223, 2, 1, "", "frame"], [223, 3, 1, "", "freeze"], [223, 3, 1, "", "from_dict"], [223, 3, 1, "", "from_parameters"], [223, 3, 1, "", "from_position"], [223, 2, 1, "", "frozen"], [223, 3, 1, "", "integrate_geom"], [223, 2, 1, "", "is_energy_dependent"], [223, 2, 1, "", "parameters"], [223, 2, 1, "", "parameters_unique_names"], [223, 2, 1, "", "phi_0"], [223, 3, 1, "", "plot"], [223, 3, 1, "", "plot_error"], [223, 3, 1, "", "plot_grid"], [223, 3, 1, "", "plot_interactive"], [223, 3, 1, "", "plot_position_error"], [223, 2, 1, "", "position"], [223, 2, 1, "", "position_error"], [223, 2, 1, "", "position_lonlat"], [223, 3, 1, "", "reassign"], [223, 2, 1, "", "tag"], [223, 3, 1, "", "to_dict"], [223, 3, 1, "", "to_region"], [223, 2, 1, "", "type"], [223, 3, 1, "", "unfreeze"], [223, 2, 1, "", "value"]], "gammapy.modeling.models.ConstantSpectralModel": [[224, 3, 1, "", "__call__"], [224, 2, 1, "", "const"], [224, 3, 1, "", "copy"], [224, 2, 1, "", "covariance"], [224, 2, 1, "", "default_parameters"], [224, 3, 1, "", "energy_flux"], [224, 3, 1, "", "energy_flux_error"], [224, 3, 1, "", "evaluate"], [224, 3, 1, "", "evaluate_error"], [224, 3, 1, "", "freeze"], [224, 3, 1, "", "from_dict"], [224, 3, 1, "", "from_parameters"], [224, 2, 1, "", "frozen"], [224, 3, 1, "", "integral"], [224, 3, 1, "", "integral_error"], [224, 3, 1, "", "inverse"], [224, 3, 1, "", "inverse_all"], [224, 2, 1, "", "is_norm_spectral_model"], [224, 2, 1, "", "parameters"], [224, 2, 1, "", "parameters_unique_names"], [224, 2, 1, "", "pivot_energy"], [224, 3, 1, "", "plot"], [224, 3, 1, "", "plot_error"], [224, 3, 1, "", "reassign"], [224, 3, 1, "", "reference_fluxes"], [224, 3, 1, "", "spectral_index"], [224, 3, 1, "", "spectral_index_error"], [224, 2, 1, "", "tag"], [224, 3, 1, "", "to_dict"], [224, 2, 1, "", "type"], [224, 3, 1, "", "unfreeze"]], "gammapy.modeling.models.ConstantTemporalModel": [[225, 3, 1, "", "__call__"], [225, 3, 1, "", "copy"], [225, 2, 1, "", "covariance"], [225, 2, 1, "", "default_parameters"], [225, 3, 1, "", "evaluate"], [225, 3, 1, "", "freeze"], [225, 3, 1, "", "from_dict"], [225, 3, 1, "", "from_parameters"], [225, 2, 1, "", "frozen"], [225, 3, 1, "", "integral"], [225, 2, 1, "", "is_energy_dependent"], [225, 2, 1, "", "parameters"], [225, 2, 1, "", "parameters_unique_names"], [225, 3, 1, "", "plot"], [225, 3, 1, "", "reassign"], [225, 2, 1, "", "reference_time"], [225, 3, 1, "", "sample_time"], [225, 2, 1, "", "tag"], [225, 3, 1, "", "time_sum"], [225, 3, 1, "", "to_dict"], [225, 2, 1, "", "type"], [225, 3, 1, "", "unfreeze"]], "gammapy.modeling.models.DatasetModels": [[226, 3, 1, "", "copy"], [226, 3, 1, "", "count"], [226, 2, 1, "", "covariance"], [226, 3, 1, "", "freeze"], [226, 3, 1, "", "from_dict"], [226, 3, 1, "", "from_yaml"], [226, 2, 1, "", "frozen"], [226, 3, 1, "", "index"], [226, 2, 1, "", "names"], [226, 2, 1, "", "parameters"], [226, 2, 1, "", "parameters_unique_names"], [226, 3, 1, "", "plot_positions"], [226, 3, 1, "", "plot_regions"], [226, 2, 1, "", "positions"], [226, 3, 1, "", "read"], [226, 3, 1, "", "read_covariance"], [226, 3, 1, "", "reassign"], [226, 3, 1, "", "restore_status"], [226, 3, 1, "", "select"], [226, 3, 1, "", "select_from_geom"], [226, 3, 1, "", "select_mask"], [226, 3, 1, "", "select_region"], [226, 3, 1, "", "selection_mask"], [226, 3, 1, "", "set_parameters_bounds"], [226, 3, 1, "", "to_dict"], [226, 3, 1, "", "to_parameters_table"], [226, 3, 1, "", "to_regions"], [226, 3, 1, "", "to_template_sky_model"], [226, 3, 1, "", "to_template_spectral_model"], [226, 3, 1, "", "to_yaml"], [226, 3, 1, "", "unfreeze"], [226, 3, 1, "", "update_link_label"], [226, 3, 1, "", "update_parameters_from_table"], [226, 2, 1, "", "wcs_geom"], [226, 3, 1, "", "write"], [226, 3, 1, "", "write_covariance"]], "gammapy.modeling.models.DiskSpatialModel": [[227, 3, 1, "", "__call__"], [227, 3, 1, "", "copy"], [227, 2, 1, "", "covariance"], [227, 2, 1, "", "default_parameters"], [227, 2, 1, "", "e"], [227, 2, 1, "", "edge_width"], [227, 3, 1, "", "evaluate"], [227, 3, 1, "", "evaluate_geom"], [227, 2, 1, "", "evaluation_bin_size_min"], [227, 2, 1, "", "evaluation_radius"], [227, 2, 1, "", "evaluation_region"], [227, 3, 1, "", "freeze"], [227, 3, 1, "", "from_dict"], [227, 3, 1, "", "from_parameters"], [227, 3, 1, "", "from_position"], [227, 3, 1, "", "from_region"], [227, 2, 1, "", "frozen"], [227, 3, 1, "", "integrate_geom"], [227, 2, 1, "", "is_energy_dependent"], [227, 2, 1, "", "lat_0"], [227, 2, 1, "", "lon_0"], [227, 2, 1, "", "parameters"], [227, 2, 1, "", "parameters_unique_names"], [227, 2, 1, "", "phi"], [227, 2, 1, "", "phi_0"], [227, 3, 1, "", "plot"], [227, 3, 1, "", "plot_error"], [227, 3, 1, "", "plot_grid"], [227, 3, 1, "", "plot_interactive"], [227, 3, 1, "", "plot_position_error"], [227, 2, 1, "", "position"], [227, 2, 1, "", "position_error"], [227, 2, 1, "", "position_lonlat"], [227, 2, 1, "", "r_0"], [227, 3, 1, "", "reassign"], [227, 2, 1, "", "tag"], [227, 3, 1, "", "to_dict"], [227, 3, 1, "", "to_region"], [227, 2, 1, "", "type"], [227, 3, 1, "", "unfreeze"]], "gammapy.modeling.models.EBLAbsorptionNormSpectralModel": [[228, 3, 1, "", "__call__"], [228, 2, 1, "", "alpha_norm"], [228, 3, 1, "", "copy"], [228, 2, 1, "", "covariance"], [228, 2, 1, "", "default_parameters"], [228, 3, 1, "", "energy_flux"], [228, 3, 1, "", "energy_flux_error"], [228, 3, 1, "", "evaluate"], [228, 3, 1, "", "evaluate_error"], [228, 3, 1, "", "freeze"], [228, 3, 1, "", "from_dict"], [228, 3, 1, "", "from_parameters"], [228, 2, 1, "", "frozen"], [228, 3, 1, "", "integral"], [228, 3, 1, "", "integral_error"], [228, 3, 1, "", "inverse"], [228, 3, 1, "", "inverse_all"], [228, 2, 1, "", "is_norm_spectral_model"], [228, 2, 1, "", "parameters"], [228, 2, 1, "", "parameters_unique_names"], [228, 2, 1, "", "pivot_energy"], [228, 3, 1, "", "plot"], [228, 3, 1, "", "plot_error"], [228, 3, 1, "", "read"], [228, 3, 1, "", "read_builtin"], [228, 3, 1, "", "reassign"], [228, 2, 1, "", "redshift"], [228, 3, 1, "", "reference_fluxes"], [228, 3, 1, "", "spectral_index"], [228, 3, 1, "", "spectral_index_error"], [228, 2, 1, "", "tag"], [228, 3, 1, "", "to_dict"], [228, 2, 1, "", "type"], [228, 3, 1, "", "unfreeze"]], "gammapy.modeling.models.ExpCutoffPowerLaw3FGLSpectralModel": [[230, 3, 1, "", "__call__"], [230, 2, 1, "", "amplitude"], [230, 3, 1, "", "copy"], [230, 2, 1, "", "covariance"], [230, 2, 1, "", "default_parameters"], [230, 2, 1, "", "ecut"], [230, 3, 1, "", "energy_flux"], [230, 3, 1, "", "energy_flux_error"], [230, 3, 1, "", "evaluate"], [230, 3, 1, "", "evaluate_error"], [230, 3, 1, "", "freeze"], [230, 3, 1, "", "from_dict"], [230, 3, 1, "", "from_parameters"], [230, 2, 1, "", "frozen"], [230, 2, 1, "", "index"], [230, 3, 1, "", "integral"], [230, 3, 1, "", "integral_error"], [230, 3, 1, "", "inverse"], [230, 3, 1, "", "inverse_all"], [230, 2, 1, "", "is_norm_spectral_model"], [230, 2, 1, "", "parameters"], [230, 2, 1, "", "parameters_unique_names"], [230, 2, 1, "", "pivot_energy"], [230, 3, 1, "", "plot"], [230, 3, 1, "", "plot_error"], [230, 3, 1, "", "reassign"], [230, 2, 1, "", "reference"], [230, 3, 1, "", "reference_fluxes"], [230, 3, 1, "", "spectral_index"], [230, 3, 1, "", "spectral_index_error"], [230, 2, 1, "", "tag"], [230, 3, 1, "", "to_dict"], [230, 2, 1, "", "type"], [230, 3, 1, "", "unfreeze"]], "gammapy.modeling.models.ExpCutoffPowerLawNormSpectralModel": [[231, 3, 1, "", "__call__"], [231, 2, 1, "", "alpha"], [231, 3, 1, "", "copy"], [231, 2, 1, "", "covariance"], [231, 2, 1, "", "default_parameters"], [231, 3, 1, "", "energy_flux"], [231, 3, 1, "", "energy_flux_error"], [231, 3, 1, "", "evaluate"], [231, 3, 1, "", "evaluate_error"], [231, 3, 1, "", "freeze"], [231, 3, 1, "", "from_dict"], [231, 3, 1, "", "from_parameters"], [231, 2, 1, "", "frozen"], [231, 2, 1, "", "index"], [231, 3, 1, "", "integral"], [231, 3, 1, "", "integral_error"], [231, 3, 1, "", "inverse"], [231, 3, 1, "", "inverse_all"], [231, 2, 1, "", "is_norm_spectral_model"], [231, 2, 1, "", "lambda_"], [231, 2, 1, "", "norm"], [231, 2, 1, "", "parameters"], [231, 2, 1, "", "parameters_unique_names"], [231, 2, 1, "", "pivot_energy"], [231, 3, 1, "", "plot"], [231, 3, 1, "", "plot_error"], [231, 3, 1, "", "reassign"], [231, 2, 1, "", "reference"], [231, 3, 1, "", "reference_fluxes"], [231, 3, 1, "", "spectral_index"], [231, 3, 1, "", "spectral_index_error"], [231, 2, 1, "", "tag"], [231, 3, 1, "", "to_dict"], [231, 2, 1, "", "type"], [231, 3, 1, "", "unfreeze"]], "gammapy.modeling.models.ExpCutoffPowerLawSpectralModel": [[232, 3, 1, "", "__call__"], [232, 2, 1, "", "alpha"], [232, 2, 1, "", "amplitude"], [232, 3, 1, "", "copy"], [232, 2, 1, "", "covariance"], [232, 2, 1, "", "default_parameters"], [232, 2, 1, "", "e_peak"], [232, 3, 1, "", "energy_flux"], [232, 3, 1, "", "energy_flux_error"], [232, 3, 1, "", "evaluate"], [232, 3, 1, "", "evaluate_error"], [232, 3, 1, "", "freeze"], [232, 3, 1, "", "from_dict"], [232, 3, 1, "", "from_parameters"], [232, 2, 1, "", "frozen"], [232, 2, 1, "", "index"], [232, 3, 1, "", "integral"], [232, 3, 1, "", "integral_error"], [232, 3, 1, "", "inverse"], [232, 3, 1, "", "inverse_all"], [232, 2, 1, "", "is_norm_spectral_model"], [232, 2, 1, "", "lambda_"], [232, 2, 1, "", "parameters"], [232, 2, 1, "", "parameters_unique_names"], [232, 2, 1, "", "pivot_energy"], [232, 3, 1, "", "plot"], [232, 3, 1, "", "plot_error"], [232, 3, 1, "", "reassign"], [232, 2, 1, "", "reference"], [232, 3, 1, "", "reference_fluxes"], [232, 3, 1, "", "spectral_index"], [232, 3, 1, "", "spectral_index_error"], [232, 2, 1, "", "tag"], [232, 3, 1, "", "to_dict"], [232, 2, 1, "", "type"], [232, 3, 1, "", "unfreeze"]], "gammapy.modeling.models.ExpDecayTemporalModel": [[233, 3, 1, "", "__call__"], [233, 3, 1, "", "copy"], [233, 2, 1, "", "covariance"], [233, 2, 1, "", "default_parameters"], [233, 3, 1, "", "evaluate"], [233, 3, 1, "", "freeze"], [233, 3, 1, "", "from_dict"], [233, 3, 1, "", "from_parameters"], [233, 2, 1, "", "frozen"], [233, 3, 1, "", "integral"], [233, 2, 1, "", "is_energy_dependent"], [233, 2, 1, "", "parameters"], [233, 2, 1, "", "parameters_unique_names"], [233, 3, 1, "", "plot"], [233, 3, 1, "", "reassign"], [233, 2, 1, "", "reference_time"], [233, 3, 1, "", "sample_time"], [233, 2, 1, "", "t0"], [233, 2, 1, "", "t_ref"], [233, 2, 1, "", "tag"], [233, 3, 1, "", "time_sum"], [233, 3, 1, "", "to_dict"], [233, 2, 1, "", "type"], [233, 3, 1, "", "unfreeze"]], "gammapy.modeling.models.FoVBackgroundModel": [[234, 3, 1, "", "contributes"], [234, 3, 1, "", "copy"], [234, 2, 1, "", "covariance"], [234, 2, 1, "", "default_parameters"], [234, 3, 1, "", "evaluate"], [234, 3, 1, "", "evaluate_geom"], [234, 3, 1, "", "freeze"], [234, 3, 1, "", "from_dict"], [234, 3, 1, "", "from_parameters"], [234, 2, 1, "", "frozen"], [234, 2, 1, "", "name"], [234, 2, 1, "", "parameters"], [234, 2, 1, "", "parameters_unique_names"], [234, 3, 1, "", "reassign"], [234, 3, 1, "", "reset_to_default"], [234, 2, 1, "", "spatial_model"], [234, 2, 1, "", "spectral_model"], [234, 2, 1, "", "tag"], [234, 3, 1, "", "to_dict"], [234, 2, 1, "", "type"], [234, 3, 1, "", "unfreeze"]], "gammapy.modeling.models.GaussianPrior": [[235, 3, 1, "", "__call__"], [235, 3, 1, "", "copy"], [235, 2, 1, "", "covariance"], [235, 2, 1, "", "default_parameters"], [235, 3, 1, "", "evaluate"], [235, 3, 1, "", "freeze"], [235, 3, 1, "", "from_dict"], [235, 3, 1, "", "from_parameters"], [235, 2, 1, "", "frozen"], [235, 2, 1, "", "mu"], [235, 2, 1, "", "parameters"], [235, 2, 1, "", "parameters_unique_names"], [235, 3, 1, "", "reassign"], [235, 2, 1, "", "sigma"], [235, 2, 1, "", "tag"], [235, 3, 1, "", "to_dict"], [235, 2, 1, "", "type"], [235, 3, 1, "", "unfreeze"], [235, 2, 1, "", "weight"]], "gammapy.modeling.models.GaussianSpatialModel": [[236, 3, 1, "", "__call__"], [236, 3, 1, "", "copy"], [236, 2, 1, "", "covariance"], [236, 2, 1, "", "default_parameters"], [236, 2, 1, "", "e"], [236, 3, 1, "", "evaluate"], [236, 3, 1, "", "evaluate_geom"], [236, 2, 1, "", "evaluation_bin_size_min"], [236, 2, 1, "", "evaluation_radius"], [236, 2, 1, "", "evaluation_region"], [236, 3, 1, "", "freeze"], [236, 3, 1, "", "from_dict"], [236, 3, 1, "", "from_parameters"], [236, 3, 1, "", "from_position"], [236, 2, 1, "", "frozen"], [236, 3, 1, "", "integrate_geom"], [236, 2, 1, "", "is_energy_dependent"], [236, 2, 1, "", "lat_0"], [236, 2, 1, "", "lon_0"], [236, 2, 1, "", "parameters"], [236, 2, 1, "", "parameters_unique_names"], [236, 2, 1, "", "phi"], [236, 2, 1, "", "phi_0"], [236, 3, 1, "", "plot"], [236, 3, 1, "", "plot_error"], [236, 3, 1, "", "plot_grid"], [236, 3, 1, "", "plot_interactive"], [236, 3, 1, "", "plot_position_error"], [236, 2, 1, "", "position"], [236, 2, 1, "", "position_error"], [236, 2, 1, "", "position_lonlat"], [236, 3, 1, "", "reassign"], [236, 2, 1, "", "sigma"], [236, 2, 1, "", "tag"], [236, 3, 1, "", "to_dict"], [236, 3, 1, "", "to_region"], [236, 2, 1, "", "type"], [236, 3, 1, "", "unfreeze"]], "gammapy.modeling.models.GaussianSpectralModel": [[237, 3, 1, "", "__call__"], [237, 2, 1, "", "amplitude"], [237, 3, 1, "", "copy"], [237, 2, 1, "", "covariance"], [237, 2, 1, "", "default_parameters"], [237, 3, 1, "", "energy_flux"], [237, 3, 1, "", "energy_flux_error"], [237, 3, 1, "", "evaluate"], [237, 3, 1, "", "evaluate_error"], [237, 3, 1, "", "freeze"], [237, 3, 1, "", "from_dict"], [237, 3, 1, "", "from_parameters"], [237, 2, 1, "", "frozen"], [237, 3, 1, "", "integral"], [237, 3, 1, "", "integral_error"], [237, 3, 1, "", "inverse"], [237, 3, 1, "", "inverse_all"], [237, 2, 1, "", "is_norm_spectral_model"], [237, 2, 1, "", "mean"], [237, 2, 1, "", "parameters"], [237, 2, 1, "", "parameters_unique_names"], [237, 2, 1, "", "pivot_energy"], [237, 3, 1, "", "plot"], [237, 3, 1, "", "plot_error"], [237, 3, 1, "", "reassign"], [237, 3, 1, "", "reference_fluxes"], [237, 2, 1, "", "sigma"], [237, 3, 1, "", "spectral_index"], [237, 3, 1, "", "spectral_index_error"], [237, 2, 1, "", "tag"], [237, 3, 1, "", "to_dict"], [237, 2, 1, "", "type"], [237, 3, 1, "", "unfreeze"]], "gammapy.modeling.models.GaussianTemporalModel": [[238, 3, 1, "", "__call__"], [238, 3, 1, "", "copy"], [238, 2, 1, "", "covariance"], [238, 2, 1, "", "default_parameters"], [238, 3, 1, "", "evaluate"], [238, 3, 1, "", "freeze"], [238, 3, 1, "", "from_dict"], [238, 3, 1, "", "from_parameters"], [238, 2, 1, "", "frozen"], [238, 3, 1, "", "integral"], [238, 2, 1, "", "is_energy_dependent"], [238, 2, 1, "", "parameters"], [238, 2, 1, "", "parameters_unique_names"], [238, 3, 1, "", "plot"], [238, 3, 1, "", "reassign"], [238, 2, 1, "", "reference_time"], [238, 3, 1, "", "sample_time"], [238, 2, 1, "", "sigma"], [238, 2, 1, "", "t_ref"], [238, 2, 1, "", "tag"], [238, 3, 1, "", "time_sum"], [238, 3, 1, "", "to_dict"], [238, 2, 1, "", "type"], [238, 3, 1, "", "unfreeze"]], "gammapy.modeling.models.GeneralizedGaussianSpatialModel": [[239, 3, 1, "", "__call__"], [239, 3, 1, "", "copy"], [239, 2, 1, "", "covariance"], [239, 2, 1, "", "default_parameters"], [239, 2, 1, "", "e"], [239, 2, 1, "", "eta"], [239, 3, 1, "", "evaluate"], [239, 3, 1, "", "evaluate_geom"], [239, 2, 1, "", "evaluation_bin_size_min"], [239, 2, 1, "", "evaluation_radius"], [239, 2, 1, "", "evaluation_region"], [239, 3, 1, "", "freeze"], [239, 3, 1, "", "from_dict"], [239, 3, 1, "", "from_parameters"], [239, 3, 1, "", "from_position"], [239, 2, 1, "", "frozen"], [239, 3, 1, "", "integrate_geom"], [239, 2, 1, "", "is_energy_dependent"], [239, 2, 1, "", "lat_0"], [239, 2, 1, "", "lon_0"], [239, 2, 1, "", "parameters"], [239, 2, 1, "", "parameters_unique_names"], [239, 2, 1, "", "phi"], [239, 2, 1, "", "phi_0"], [239, 3, 1, "", "plot"], [239, 3, 1, "", "plot_error"], [239, 3, 1, "", "plot_grid"], [239, 3, 1, "", "plot_interactive"], [239, 3, 1, "", "plot_position_error"], [239, 2, 1, "", "position"], [239, 2, 1, "", "position_error"], [239, 2, 1, "", "position_lonlat"], [239, 2, 1, "", "r_0"], [239, 3, 1, "", "reassign"], [239, 2, 1, "", "tag"], [239, 3, 1, "", "to_dict"], [239, 3, 1, "", "to_region"], [239, 2, 1, "", "type"], [239, 3, 1, "", "unfreeze"]], "gammapy.modeling.models.GeneralizedGaussianTemporalModel": [[240, 3, 1, "", "__call__"], [240, 3, 1, "", "copy"], [240, 2, 1, "", "covariance"], [240, 2, 1, "", "default_parameters"], [240, 2, 1, "", "eta"], [240, 3, 1, "", "evaluate"], [240, 3, 1, "", "freeze"], [240, 3, 1, "", "from_dict"], [240, 3, 1, "", "from_parameters"], [240, 2, 1, "", "frozen"], [240, 3, 1, "", "integral"], [240, 2, 1, "", "is_energy_dependent"], [240, 2, 1, "", "parameters"], [240, 2, 1, "", "parameters_unique_names"], [240, 3, 1, "", "plot"], [240, 3, 1, "", "reassign"], [240, 2, 1, "", "reference_time"], [240, 3, 1, "", "sample_time"], [240, 2, 1, "", "t_decay"], [240, 2, 1, "", "t_ref"], [240, 2, 1, "", "t_rise"], [240, 2, 1, "", "tag"], [240, 3, 1, "", "time_sum"], [240, 3, 1, "", "to_dict"], [240, 2, 1, "", "type"], [240, 3, 1, "", "unfreeze"]], "gammapy.modeling.models.LightCurveTemplateTemporalModel": [[241, 3, 1, "", "__call__"], [241, 3, 1, "", "copy"], [241, 2, 1, "", "covariance"], [241, 2, 1, "", "default_parameters"], [241, 3, 1, "", "evaluate"], [241, 3, 1, "", "freeze"], [241, 3, 1, "", "from_dict"], [241, 3, 1, "", "from_parameters"], [241, 3, 1, "", "from_table"], [241, 2, 1, "", "frozen"], [241, 3, 1, "", "integral"], [241, 2, 1, "", "is_energy_dependent"], [241, 2, 1, "", "parameters"], [241, 2, 1, "", "parameters_unique_names"], [241, 3, 1, "", "plot"], [241, 3, 1, "", "read"], [241, 3, 1, "", "reassign"], [241, 2, 1, "", "reference_time"], [241, 3, 1, "", "sample_time"], [241, 2, 1, "", "t_ref"], [241, 2, 1, "", "tag"], [241, 3, 1, "", "time_sum"], [241, 3, 1, "", "to_dict"], [241, 3, 1, "", "to_table"], [241, 2, 1, "", "type"], [241, 3, 1, "", "unfreeze"], [241, 3, 1, "", "write"]], "gammapy.modeling.models.LinearTemporalModel": [[242, 3, 1, "", "__call__"], [242, 2, 1, "", "alpha"], [242, 2, 1, "", "beta"], [242, 3, 1, "", "copy"], [242, 2, 1, "", "covariance"], [242, 2, 1, "", "default_parameters"], [242, 3, 1, "", "evaluate"], [242, 3, 1, "", "freeze"], [242, 3, 1, "", "from_dict"], [242, 3, 1, "", "from_parameters"], [242, 2, 1, "", "frozen"], [242, 3, 1, "", "integral"], [242, 2, 1, "", "is_energy_dependent"], [242, 2, 1, "", "parameters"], [242, 2, 1, "", "parameters_unique_names"], [242, 3, 1, "", "plot"], [242, 3, 1, "", "reassign"], [242, 2, 1, "", "reference_time"], [242, 3, 1, "", "sample_time"], [242, 2, 1, "", "t_ref"], [242, 2, 1, "", "tag"], [242, 3, 1, "", "time_sum"], [242, 3, 1, "", "to_dict"], [242, 2, 1, "", "type"], [242, 3, 1, "", "unfreeze"]], "gammapy.modeling.models.LogParabolaNormSpectralModel": [[243, 3, 1, "", "__call__"], [243, 2, 1, "", "alpha"], [243, 2, 1, "", "beta"], [243, 3, 1, "", "copy"], [243, 2, 1, "", "covariance"], [243, 2, 1, "", "default_parameters"], [243, 3, 1, "", "energy_flux"], [243, 3, 1, "", "energy_flux_error"], [243, 3, 1, "", "evaluate"], [243, 3, 1, "", "evaluate_error"], [243, 3, 1, "", "freeze"], [243, 3, 1, "", "from_dict"], [243, 3, 1, "", "from_log10"], [243, 3, 1, "", "from_parameters"], [243, 2, 1, "", "frozen"], [243, 3, 1, "", "integral"], [243, 3, 1, "", "integral_error"], [243, 3, 1, "", "inverse"], [243, 3, 1, "", "inverse_all"], [243, 2, 1, "", "is_norm_spectral_model"], [243, 2, 1, "", "norm"], [243, 2, 1, "", "parameters"], [243, 2, 1, "", "parameters_unique_names"], [243, 2, 1, "", "pivot_energy"], [243, 3, 1, "", "plot"], [243, 3, 1, "", "plot_error"], [243, 3, 1, "", "reassign"], [243, 2, 1, "", "reference"], [243, 3, 1, "", "reference_fluxes"], [243, 3, 1, "", "spectral_index"], [243, 3, 1, "", "spectral_index_error"], [243, 2, 1, "", "tag"], [243, 3, 1, "", "to_dict"], [243, 2, 1, "", "type"], [243, 3, 1, "", "unfreeze"]], "gammapy.modeling.models.LogParabolaSpectralModel": [[244, 3, 1, "", "__call__"], [244, 2, 1, "", "alpha"], [244, 2, 1, "", "amplitude"], [244, 2, 1, "", "beta"], [244, 3, 1, "", "copy"], [244, 2, 1, "", "covariance"], [244, 2, 1, "", "default_parameters"], [244, 2, 1, "", "e_peak"], [244, 3, 1, "", "energy_flux"], [244, 3, 1, "", "energy_flux_error"], [244, 3, 1, "", "evaluate"], [244, 3, 1, "", "evaluate_error"], [244, 3, 1, "", "freeze"], [244, 3, 1, "", "from_dict"], [244, 3, 1, "", "from_log10"], [244, 3, 1, "", "from_parameters"], [244, 2, 1, "", "frozen"], [244, 3, 1, "", "integral"], [244, 3, 1, "", "integral_error"], [244, 3, 1, "", "inverse"], [244, 3, 1, "", "inverse_all"], [244, 2, 1, "", "is_norm_spectral_model"], [244, 2, 1, "", "parameters"], [244, 2, 1, "", "parameters_unique_names"], [244, 2, 1, "", "pivot_energy"], [244, 3, 1, "", "plot"], [244, 3, 1, "", "plot_error"], [244, 3, 1, "", "reassign"], [244, 2, 1, "", "reference"], [244, 3, 1, "", "reference_fluxes"], [244, 3, 1, "", "spectral_index"], [244, 3, 1, "", "spectral_index_error"], [244, 2, 1, "", "tag"], [244, 3, 1, "", "to_dict"], [244, 2, 1, "", "type"], [244, 3, 1, "", "unfreeze"]], "gammapy.modeling.models.LogUniformPrior": [[245, 3, 1, "", "__call__"], [245, 3, 1, "", "copy"], [245, 2, 1, "", "covariance"], [245, 2, 1, "", "default_parameters"], [245, 3, 1, "", "evaluate"], [245, 3, 1, "", "freeze"], [245, 3, 1, "", "from_dict"], [245, 3, 1, "", "from_parameters"], [245, 2, 1, "", "frozen"], [245, 2, 1, "", "max"], [245, 2, 1, "", "min"], [245, 2, 1, "", "parameters"], [245, 2, 1, "", "parameters_unique_names"], [245, 3, 1, "", "reassign"], [245, 2, 1, "", "tag"], [245, 3, 1, "", "to_dict"], [245, 2, 1, "", "type"], [245, 3, 1, "", "unfreeze"], [245, 2, 1, "", "weight"]], "gammapy.modeling.models.MeyerCrabSpectralModel": [[247, 3, 1, "", "__call__"], [247, 2, 1, "", "coefficients"], [247, 3, 1, "", "copy"], [247, 2, 1, "", "covariance"], [247, 2, 1, "", "default_parameters"], [247, 3, 1, "", "energy_flux"], [247, 3, 1, "", "energy_flux_error"], [247, 3, 1, "", "evaluate"], [247, 3, 1, "", "evaluate_error"], [247, 3, 1, "", "freeze"], [247, 3, 1, "", "from_dict"], [247, 3, 1, "", "from_parameters"], [247, 2, 1, "", "frozen"], [247, 3, 1, "", "integral"], [247, 3, 1, "", "integral_error"], [247, 3, 1, "", "inverse"], [247, 3, 1, "", "inverse_all"], [247, 2, 1, "", "is_norm_spectral_model"], [247, 2, 1, "", "norm"], [247, 2, 1, "", "parameters"], [247, 2, 1, "", "parameters_unique_names"], [247, 2, 1, "", "pivot_energy"], [247, 3, 1, "", "plot"], [247, 3, 1, "", "plot_error"], [247, 3, 1, "", "reassign"], [247, 3, 1, "", "reference_fluxes"], [247, 3, 1, "", "spectral_index"], [247, 3, 1, "", "spectral_index_error"], [247, 3, 1, "", "to_dict"], [247, 2, 1, "", "type"], [247, 3, 1, "", "unfreeze"]], "gammapy.modeling.models.Model": [[248, 3, 1, "", "create"], [248, 3, 1, "", "from_dict"]], "gammapy.modeling.models.ModelBase": [[249, 3, 1, "", "copy"], [249, 2, 1, "", "covariance"], [249, 3, 1, "", "freeze"], [249, 3, 1, "", "from_dict"], [249, 3, 1, "", "from_parameters"], [249, 2, 1, "", "frozen"], [249, 2, 1, "", "parameters"], [249, 2, 1, "", "parameters_unique_names"], [249, 3, 1, "", "reassign"], [249, 3, 1, "", "to_dict"], [249, 2, 1, "", "type"], [249, 3, 1, "", "unfreeze"]], "gammapy.modeling.models.Models": [[250, 3, 1, "", "append"], [250, 3, 1, "", "clear"], [250, 3, 1, "", "copy"], [250, 3, 1, "", "count"], [250, 2, 1, "", "covariance"], [250, 3, 1, "", "extend"], [250, 3, 1, "", "freeze"], [250, 3, 1, "", "from_dict"], [250, 3, 1, "", "from_yaml"], [250, 2, 1, "", "frozen"], [250, 3, 1, "", "index"], [250, 3, 1, "", "insert"], [250, 2, 1, "", "names"], [250, 2, 1, "", "parameters"], [250, 2, 1, "", "parameters_unique_names"], [250, 3, 1, "", "plot_positions"], [250, 3, 1, "", "plot_regions"], [250, 3, 1, "", "pop"], [250, 2, 1, "", "positions"], [250, 3, 1, "", "read"], [250, 3, 1, "", "read_covariance"], [250, 3, 1, "", "reassign"], [250, 3, 1, "", "remove"], [250, 3, 1, "", "restore_status"], [250, 3, 1, "", "reverse"], [250, 3, 1, "", "select"], [250, 3, 1, "", "select_from_geom"], [250, 3, 1, "", "select_mask"], [250, 3, 1, "", "select_region"], [250, 3, 1, "", "selection_mask"], [250, 3, 1, "", "set_parameters_bounds"], [250, 3, 1, "", "set_prior"], [250, 3, 1, "", "to_dict"], [250, 3, 1, "", "to_parameters_table"], [250, 3, 1, "", "to_regions"], [250, 3, 1, "", "to_template_sky_model"], [250, 3, 1, "", "to_template_spectral_model"], [250, 3, 1, "", "to_yaml"], [250, 3, 1, "", "unfreeze"], [250, 3, 1, "", "update_link_label"], [250, 3, 1, "", "update_parameters_from_table"], [250, 2, 1, "", "wcs_geom"], [250, 3, 1, "", "write"], [250, 3, 1, "", "write_covariance"]], "gammapy.modeling.models.NaimaSpectralModel": [[251, 3, 1, "", "__call__"], [251, 3, 1, "", "copy"], [251, 2, 1, "", "covariance"], [251, 2, 1, "", "default_parameters"], [251, 3, 1, "", "energy_flux"], [251, 3, 1, "", "energy_flux_error"], [251, 3, 1, "", "evaluate"], [251, 3, 1, "", "evaluate_error"], [251, 3, 1, "", "freeze"], [251, 3, 1, "", "from_dict"], [251, 3, 1, "", "from_parameters"], [251, 2, 1, "", "frozen"], [251, 2, 1, "", "include_ssc"], [251, 3, 1, "", "integral"], [251, 3, 1, "", "integral_error"], [251, 3, 1, "", "inverse"], [251, 3, 1, "", "inverse_all"], [251, 2, 1, "", "is_norm_spectral_model"], [251, 2, 1, "", "parameters"], [251, 2, 1, "", "parameters_unique_names"], [251, 2, 1, "", "particle_distribution"], [251, 2, 1, "", "pivot_energy"], [251, 3, 1, "", "plot"], [251, 3, 1, "", "plot_error"], [251, 3, 1, "", "reassign"], [251, 3, 1, "", "reference_fluxes"], [251, 3, 1, "", "spectral_index"], [251, 3, 1, "", "spectral_index_error"], [251, 2, 1, "", "ssc_model"], [251, 2, 1, "", "tag"], [251, 3, 1, "", "to_dict"], [251, 2, 1, "", "type"], [251, 3, 1, "", "unfreeze"]], "gammapy.modeling.models.PiecewiseNormSpatialModel": [[252, 3, 1, "", "__call__"], [252, 2, 1, "", "coords"], [252, 3, 1, "", "copy"], [252, 2, 1, "", "covariance"], [252, 2, 1, "", "default_parameters"], [252, 3, 1, "", "evaluate"], [252, 3, 1, "", "evaluate_geom"], [252, 2, 1, "", "evaluation_bin_size_min"], [252, 2, 1, "", "evaluation_radius"], [252, 2, 1, "", "evaluation_region"], [252, 3, 1, "", "freeze"], [252, 3, 1, "", "from_dict"], [252, 3, 1, "", "from_parameters"], [252, 3, 1, "", "from_position"], [252, 2, 1, "", "frozen"], [252, 3, 1, "", "integrate_geom"], [252, 2, 1, "", "is_energy_dependent"], [252, 2, 1, "", "norms"], [252, 2, 1, "", "parameters"], [252, 2, 1, "", "parameters_unique_names"], [252, 2, 1, "", "phi_0"], [252, 3, 1, "", "plot"], [252, 3, 1, "", "plot_error"], [252, 3, 1, "", "plot_grid"], [252, 3, 1, "", "plot_interactive"], [252, 3, 1, "", "plot_position_error"], [252, 2, 1, "", "position"], [252, 2, 1, "", "position_error"], [252, 2, 1, "", "position_lonlat"], [252, 3, 1, "", "reassign"], [252, 2, 1, "", "tag"], [252, 3, 1, "", "to_dict"], [252, 2, 1, "", "type"], [252, 3, 1, "", "unfreeze"]], "gammapy.modeling.models.PiecewiseNormSpectralModel": [[253, 3, 1, "", "__call__"], [253, 3, 1, "", "copy"], [253, 2, 1, "", "covariance"], [253, 2, 1, "", "default_parameters"], [253, 2, 1, "", "energy"], [253, 3, 1, "", "energy_flux"], [253, 3, 1, "", "energy_flux_error"], [253, 3, 1, "", "evaluate"], [253, 3, 1, "", "evaluate_error"], [253, 3, 1, "", "freeze"], [253, 3, 1, "", "from_dict"], [253, 3, 1, "", "from_parameters"], [253, 2, 1, "", "frozen"], [253, 3, 1, "", "integral"], [253, 3, 1, "", "integral_error"], [253, 3, 1, "", "inverse"], [253, 3, 1, "", "inverse_all"], [253, 2, 1, "", "is_norm_spectral_model"], [253, 2, 1, "", "norms"], [253, 2, 1, "", "parameters"], [253, 2, 1, "", "parameters_unique_names"], [253, 2, 1, "", "pivot_energy"], [253, 3, 1, "", "plot"], [253, 3, 1, "", "plot_error"], [253, 3, 1, "", "reassign"], [253, 3, 1, "", "reference_fluxes"], [253, 3, 1, "", "spectral_index"], [253, 3, 1, "", "spectral_index_error"], [253, 2, 1, "", "tag"], [253, 3, 1, "", "to_dict"], [253, 2, 1, "", "type"], [253, 3, 1, "", "unfreeze"]], "gammapy.modeling.models.PointSpatialModel": [[254, 3, 1, "", "__call__"], [254, 3, 1, "", "copy"], [254, 2, 1, "", "covariance"], [254, 2, 1, "", "default_parameters"], [254, 3, 1, "", "evaluate_geom"], [254, 2, 1, "", "evaluation_bin_size_min"], [254, 2, 1, "", "evaluation_radius"], [254, 2, 1, "", "evaluation_region"], [254, 3, 1, "", "freeze"], [254, 3, 1, "", "from_dict"], [254, 3, 1, "", "from_parameters"], [254, 3, 1, "", "from_position"], [254, 2, 1, "", "frozen"], [254, 3, 1, "", "integrate_geom"], [254, 2, 1, "", "is_energy_dependent"], [254, 2, 1, "", "lat_0"], [254, 2, 1, "", "lon_0"], [254, 2, 1, "", "parameters"], [254, 2, 1, "", "parameters_unique_names"], [254, 2, 1, "", "phi_0"], [254, 3, 1, "", "plot"], [254, 3, 1, "", "plot_error"], [254, 3, 1, "", "plot_grid"], [254, 3, 1, "", "plot_interactive"], [254, 3, 1, "", "plot_position_error"], [254, 2, 1, "", "position"], [254, 2, 1, "", "position_error"], [254, 2, 1, "", "position_lonlat"], [254, 3, 1, "", "reassign"], [254, 2, 1, "", "tag"], [254, 3, 1, "", "to_dict"], [254, 3, 1, "", "to_region"], [254, 2, 1, "", "type"], [254, 3, 1, "", "unfreeze"]], "gammapy.modeling.models.PowerLaw2SpectralModel": [[255, 3, 1, "", "__call__"], [255, 2, 1, "", "amplitude"], [255, 3, 1, "", "copy"], [255, 2, 1, "", "covariance"], [255, 2, 1, "", "default_parameters"], [255, 2, 1, "", "emax"], [255, 2, 1, "", "emin"], [255, 3, 1, "", "energy_flux"], [255, 3, 1, "", "energy_flux_error"], [255, 3, 1, "", "evaluate"], [255, 3, 1, "", "evaluate_error"], [255, 3, 1, "", "evaluate_integral"], [255, 3, 1, "", "freeze"], [255, 3, 1, "", "from_dict"], [255, 3, 1, "", "from_parameters"], [255, 2, 1, "", "frozen"], [255, 2, 1, "", "index"], [255, 3, 1, "", "integral"], [255, 3, 1, "", "integral_error"], [255, 3, 1, "", "inverse"], [255, 3, 1, "", "inverse_all"], [255, 2, 1, "", "is_norm_spectral_model"], [255, 2, 1, "", "parameters"], [255, 2, 1, "", "parameters_unique_names"], [255, 2, 1, "", "pivot_energy"], [255, 3, 1, "", "plot"], [255, 3, 1, "", "plot_error"], [255, 3, 1, "", "reassign"], [255, 3, 1, "", "reference_fluxes"], [255, 3, 1, "", "spectral_index"], [255, 3, 1, "", "spectral_index_error"], [255, 2, 1, "", "tag"], [255, 3, 1, "", "to_dict"], [255, 2, 1, "", "type"], [255, 3, 1, "", "unfreeze"]], "gammapy.modeling.models.PowerLawNormSpectralModel": [[256, 3, 1, "", "__call__"], [256, 3, 1, "", "copy"], [256, 2, 1, "", "covariance"], [256, 2, 1, "", "default_parameters"], [256, 3, 1, "", "energy_flux"], [256, 3, 1, "", "energy_flux_error"], [256, 3, 1, "", "evaluate"], [256, 3, 1, "", "evaluate_energy_flux"], [256, 3, 1, "", "evaluate_error"], [256, 3, 1, "", "evaluate_integral"], [256, 3, 1, "", "freeze"], [256, 3, 1, "", "from_dict"], [256, 3, 1, "", "from_parameters"], [256, 2, 1, "", "frozen"], [256, 3, 1, "", "integral"], [256, 3, 1, "", "integral_error"], [256, 3, 1, "", "inverse"], [256, 3, 1, "", "inverse_all"], [256, 2, 1, "", "is_norm_spectral_model"], [256, 2, 1, "", "norm"], [256, 2, 1, "", "parameters"], [256, 2, 1, "", "parameters_unique_names"], [256, 2, 1, "", "pivot_energy"], [256, 3, 1, "", "plot"], [256, 3, 1, "", "plot_error"], [256, 3, 1, "", "reassign"], [256, 2, 1, "", "reference"], [256, 3, 1, "", "reference_fluxes"], [256, 3, 1, "", "spectral_index"], [256, 3, 1, "", "spectral_index_error"], [256, 2, 1, "", "tag"], [256, 2, 1, "", "tilt"], [256, 3, 1, "", "to_dict"], [256, 2, 1, "", "type"], [256, 3, 1, "", "unfreeze"]], "gammapy.modeling.models.PowerLawSpectralModel": [[257, 3, 1, "", "__call__"], [257, 2, 1, "", "amplitude"], [257, 3, 1, "", "copy"], [257, 2, 1, "", "covariance"], [257, 2, 1, "", "default_parameters"], [257, 3, 1, "", "energy_flux"], [257, 3, 1, "", "energy_flux_error"], [257, 3, 1, "", "evaluate"], [257, 3, 1, "", "evaluate_energy_flux"], [257, 3, 1, "", "evaluate_error"], [257, 3, 1, "", "evaluate_integral"], [257, 3, 1, "", "freeze"], [257, 3, 1, "", "from_dict"], [257, 3, 1, "", "from_parameters"], [257, 2, 1, "", "frozen"], [257, 2, 1, "", "index"], [257, 3, 1, "", "integral"], [257, 3, 1, "", "integral_error"], [257, 3, 1, "", "inverse"], [257, 3, 1, "", "inverse_all"], [257, 2, 1, "", "is_norm_spectral_model"], [257, 2, 1, "", "parameters"], [257, 2, 1, "", "parameters_unique_names"], [257, 2, 1, "", "pivot_energy"], [257, 3, 1, "", "plot"], [257, 3, 1, "", "plot_error"], [257, 3, 1, "", "reassign"], [257, 2, 1, "", "reference"], [257, 3, 1, "", "reference_fluxes"], [257, 3, 1, "", "spectral_index"], [257, 3, 1, "", "spectral_index_error"], [257, 2, 1, "", "tag"], [257, 3, 1, "", "to_dict"], [257, 2, 1, "", "type"], [257, 3, 1, "", "unfreeze"]], "gammapy.modeling.models.PowerLawTemporalModel": [[258, 3, 1, "", "__call__"], [258, 2, 1, "", "alpha"], [258, 3, 1, "", "copy"], [258, 2, 1, "", "covariance"], [258, 2, 1, "", "default_parameters"], [258, 3, 1, "", "evaluate"], [258, 3, 1, "", "freeze"], [258, 3, 1, "", "from_dict"], [258, 3, 1, "", "from_parameters"], [258, 2, 1, "", "frozen"], [258, 3, 1, "", "integral"], [258, 2, 1, "", "is_energy_dependent"], [258, 2, 1, "", "parameters"], [258, 2, 1, "", "parameters_unique_names"], [258, 3, 1, "", "plot"], [258, 3, 1, "", "reassign"], [258, 2, 1, "", "reference_time"], [258, 3, 1, "", "sample_time"], [258, 2, 1, "", "t0"], [258, 2, 1, "", "t_ref"], [258, 2, 1, "", "tag"], [258, 3, 1, "", "time_sum"], [258, 3, 1, "", "to_dict"], [258, 2, 1, "", "type"], [258, 3, 1, "", "unfreeze"]], "gammapy.modeling.models.Prior": [[259, 3, 1, "", "__call__"], [259, 3, 1, "", "copy"], [259, 2, 1, "", "covariance"], [259, 2, 1, "", "default_parameters"], [259, 3, 1, "", "freeze"], [259, 3, 1, "", "from_dict"], [259, 3, 1, "", "from_parameters"], [259, 2, 1, "", "frozen"], [259, 2, 1, "", "parameters"], [259, 2, 1, "", "parameters_unique_names"], [259, 3, 1, "", "reassign"], [259, 3, 1, "", "to_dict"], [259, 2, 1, "", "type"], [259, 3, 1, "", "unfreeze"], [259, 2, 1, "", "weight"]], "gammapy.modeling.models.ScaleSpectralModel": [[262, 3, 1, "", "__call__"], [262, 3, 1, "", "copy"], [262, 2, 1, "", "covariance"], [262, 2, 1, "", "default_parameters"], [262, 3, 1, "", "energy_flux"], [262, 3, 1, "", "energy_flux_error"], [262, 3, 1, "", "evaluate"], [262, 3, 1, "", "evaluate_error"], [262, 3, 1, "", "freeze"], [262, 3, 1, "", "from_dict"], [262, 3, 1, "", "from_parameters"], [262, 2, 1, "", "frozen"], [262, 3, 1, "", "integral"], [262, 3, 1, "", "integral_error"], [262, 3, 1, "", "inverse"], [262, 3, 1, "", "inverse_all"], [262, 2, 1, "", "is_norm_spectral_model"], [262, 2, 1, "", "norm"], [262, 2, 1, "", "parameters"], [262, 2, 1, "", "parameters_unique_names"], [262, 2, 1, "", "pivot_energy"], [262, 3, 1, "", "plot"], [262, 3, 1, "", "plot_error"], [262, 3, 1, "", "reassign"], [262, 3, 1, "", "reference_fluxes"], [262, 3, 1, "", "spectral_index"], [262, 3, 1, "", "spectral_index_error"], [262, 2, 1, "", "tag"], [262, 3, 1, "", "to_dict"], [262, 2, 1, "", "type"], [262, 3, 1, "", "unfreeze"]], "gammapy.modeling.models.Shell2SpatialModel": [[263, 3, 1, "", "__call__"], [263, 3, 1, "", "copy"], [263, 2, 1, "", "covariance"], [263, 2, 1, "", "default_parameters"], [263, 2, 1, "", "eta"], [263, 3, 1, "", "evaluate"], [263, 3, 1, "", "evaluate_geom"], [263, 2, 1, "", "evaluation_bin_size_min"], [263, 2, 1, "", "evaluation_radius"], [263, 2, 1, "", "evaluation_region"], [263, 3, 1, "", "freeze"], [263, 3, 1, "", "from_dict"], [263, 3, 1, "", "from_parameters"], [263, 3, 1, "", "from_position"], [263, 2, 1, "", "frozen"], [263, 3, 1, "", "integrate_geom"], [263, 2, 1, "", "is_energy_dependent"], [263, 2, 1, "", "lat_0"], [263, 2, 1, "", "lon_0"], [263, 2, 1, "", "parameters"], [263, 2, 1, "", "parameters_unique_names"], [263, 2, 1, "", "phi_0"], [263, 3, 1, "", "plot"], [263, 3, 1, "", "plot_error"], [263, 3, 1, "", "plot_grid"], [263, 3, 1, "", "plot_interactive"], [263, 3, 1, "", "plot_position_error"], [263, 2, 1, "", "position"], [263, 2, 1, "", "position_error"], [263, 2, 1, "", "position_lonlat"], [263, 2, 1, "", "r_0"], [263, 2, 1, "", "r_in"], [263, 3, 1, "", "reassign"], [263, 2, 1, "", "tag"], [263, 3, 1, "", "to_dict"], [263, 3, 1, "", "to_region"], [263, 2, 1, "", "type"], [263, 3, 1, "", "unfreeze"]], "gammapy.modeling.models.ShellSpatialModel": [[264, 3, 1, "", "__call__"], [264, 3, 1, "", "copy"], [264, 2, 1, "", "covariance"], [264, 2, 1, "", "default_parameters"], [264, 3, 1, "", "evaluate"], [264, 3, 1, "", "evaluate_geom"], [264, 2, 1, "", "evaluation_bin_size_min"], [264, 2, 1, "", "evaluation_radius"], [264, 2, 1, "", "evaluation_region"], [264, 3, 1, "", "freeze"], [264, 3, 1, "", "from_dict"], [264, 3, 1, "", "from_parameters"], [264, 3, 1, "", "from_position"], [264, 2, 1, "", "frozen"], [264, 3, 1, "", "integrate_geom"], [264, 2, 1, "", "is_energy_dependent"], [264, 2, 1, "", "lat_0"], [264, 2, 1, "", "lon_0"], [264, 2, 1, "", "parameters"], [264, 2, 1, "", "parameters_unique_names"], [264, 2, 1, "", "phi_0"], [264, 3, 1, "", "plot"], [264, 3, 1, "", "plot_error"], [264, 3, 1, "", "plot_grid"], [264, 3, 1, "", "plot_interactive"], [264, 3, 1, "", "plot_position_error"], [264, 2, 1, "", "position"], [264, 2, 1, "", "position_error"], [264, 2, 1, "", "position_lonlat"], [264, 2, 1, "", "radius"], [264, 3, 1, "", "reassign"], [264, 2, 1, "", "tag"], [264, 3, 1, "", "to_dict"], [264, 3, 1, "", "to_region"], [264, 2, 1, "", "type"], [264, 3, 1, "", "unfreeze"], [264, 2, 1, "", "width"]], "gammapy.modeling.models.SineTemporalModel": [[265, 3, 1, "", "__call__"], [265, 2, 1, "", "amp"], [265, 3, 1, "", "copy"], [265, 2, 1, "", "covariance"], [265, 2, 1, "", "default_parameters"], [265, 3, 1, "", "evaluate"], [265, 3, 1, "", "freeze"], [265, 3, 1, "", "from_dict"], [265, 3, 1, "", "from_parameters"], [265, 2, 1, "", "frozen"], [265, 3, 1, "", "integral"], [265, 2, 1, "", "is_energy_dependent"], [265, 2, 1, "", "omega"], [265, 2, 1, "", "parameters"], [265, 2, 1, "", "parameters_unique_names"], [265, 3, 1, "", "plot"], [265, 3, 1, "", "reassign"], [265, 2, 1, "", "reference_time"], [265, 3, 1, "", "sample_time"], [265, 2, 1, "", "t_ref"], [265, 2, 1, "", "tag"], [265, 3, 1, "", "time_sum"], [265, 3, 1, "", "to_dict"], [265, 2, 1, "", "type"], [265, 3, 1, "", "unfreeze"]], "gammapy.modeling.models.SkyModel": [[266, 3, 1, "", "__call__"], [266, 3, 1, "", "contributes"], [266, 3, 1, "", "copy"], [266, 2, 1, "", "covariance"], [266, 3, 1, "", "create"], [266, 2, 1, "", "default_parameters"], [266, 3, 1, "", "evaluate"], [266, 3, 1, "", "evaluate_geom"], [266, 2, 1, "", "evaluation_bin_size_min"], [266, 2, 1, "", "evaluation_radius"], [266, 2, 1, "", "evaluation_region"], [266, 2, 1, "", "frame"], [266, 3, 1, "", "freeze"], [266, 3, 1, "", "from_dict"], [266, 3, 1, "", "from_parameters"], [266, 2, 1, "", "frozen"], [266, 3, 1, "", "integrate_geom"], [266, 2, 1, "", "name"], [266, 2, 1, "", "parameters"], [266, 2, 1, "", "parameters_unique_names"], [266, 2, 1, "", "position"], [266, 2, 1, "", "position_lonlat"], [266, 3, 1, "", "reassign"], [266, 2, 1, "", "spatial_model"], [266, 2, 1, "", "spectral_model"], [266, 2, 1, "", "tag"], [266, 2, 1, "", "temporal_model"], [266, 3, 1, "", "to_dict"], [266, 2, 1, "", "type"], [266, 3, 1, "", "unfreeze"]], "gammapy.modeling.models.SmoothBrokenPowerLawSpectralModel": [[267, 3, 1, "", "__call__"], [267, 2, 1, "", "amplitude"], [267, 2, 1, "", "beta"], [267, 3, 1, "", "copy"], [267, 2, 1, "", "covariance"], [267, 2, 1, "", "default_parameters"], [267, 2, 1, "", "ebreak"], [267, 3, 1, "", "energy_flux"], [267, 3, 1, "", "energy_flux_error"], [267, 3, 1, "", "evaluate"], [267, 3, 1, "", "evaluate_error"], [267, 3, 1, "", "freeze"], [267, 3, 1, "", "from_dict"], [267, 3, 1, "", "from_parameters"], [267, 2, 1, "", "frozen"], [267, 2, 1, "", "index1"], [267, 2, 1, "", "index2"], [267, 3, 1, "", "integral"], [267, 3, 1, "", "integral_error"], [267, 3, 1, "", "inverse"], [267, 3, 1, "", "inverse_all"], [267, 2, 1, "", "is_norm_spectral_model"], [267, 2, 1, "", "parameters"], [267, 2, 1, "", "parameters_unique_names"], [267, 2, 1, "", "pivot_energy"], [267, 3, 1, "", "plot"], [267, 3, 1, "", "plot_error"], [267, 3, 1, "", "reassign"], [267, 2, 1, "", "reference"], [267, 3, 1, "", "reference_fluxes"], [267, 3, 1, "", "spectral_index"], [267, 3, 1, "", "spectral_index_error"], [267, 2, 1, "", "tag"], [267, 3, 1, "", "to_dict"], [267, 2, 1, "", "type"], [267, 3, 1, "", "unfreeze"]], "gammapy.modeling.models.SpatialModel": [[268, 3, 1, "", "__call__"], [268, 3, 1, "", "copy"], [268, 2, 1, "", "covariance"], [268, 2, 1, "", "default_parameters"], [268, 3, 1, "", "evaluate_geom"], [268, 2, 1, "", "evaluation_bin_size_min"], [268, 2, 1, "", "evaluation_radius"], [268, 2, 1, "", "evaluation_region"], [268, 3, 1, "", "freeze"], [268, 3, 1, "", "from_dict"], [268, 3, 1, "", "from_parameters"], [268, 3, 1, "", "from_position"], [268, 2, 1, "", "frozen"], [268, 3, 1, "", "integrate_geom"], [268, 2, 1, "", "is_energy_dependent"], [268, 2, 1, "", "parameters"], [268, 2, 1, "", "parameters_unique_names"], [268, 2, 1, "", "phi_0"], [268, 3, 1, "", "plot"], [268, 3, 1, "", "plot_error"], [268, 3, 1, "", "plot_grid"], [268, 3, 1, "", "plot_interactive"], [268, 3, 1, "", "plot_position_error"], [268, 2, 1, "", "position"], [268, 2, 1, "", "position_error"], [268, 2, 1, "", "position_lonlat"], [268, 3, 1, "", "reassign"], [268, 3, 1, "", "to_dict"], [268, 2, 1, "", "type"], [268, 3, 1, "", "unfreeze"]], "gammapy.modeling.models.SpectralModel": [[269, 3, 1, "", "__call__"], [269, 3, 1, "", "copy"], [269, 2, 1, "", "covariance"], [269, 2, 1, "", "default_parameters"], [269, 3, 1, "", "energy_flux"], [269, 3, 1, "", "energy_flux_error"], [269, 3, 1, "", "evaluate_error"], [269, 3, 1, "", "freeze"], [269, 3, 1, "", "from_dict"], [269, 3, 1, "", "from_parameters"], [269, 2, 1, "", "frozen"], [269, 3, 1, "", "integral"], [269, 3, 1, "", "integral_error"], [269, 3, 1, "", "inverse"], [269, 3, 1, "", "inverse_all"], [269, 2, 1, "", "is_norm_spectral_model"], [269, 2, 1, "", "parameters"], [269, 2, 1, "", "parameters_unique_names"], [269, 2, 1, "", "pivot_energy"], [269, 3, 1, "", "plot"], [269, 3, 1, "", "plot_error"], [269, 3, 1, "", "reassign"], [269, 3, 1, "", "reference_fluxes"], [269, 3, 1, "", "spectral_index"], [269, 3, 1, "", "spectral_index_error"], [269, 3, 1, "", "to_dict"], [269, 2, 1, "", "type"], [269, 3, 1, "", "unfreeze"]], "gammapy.modeling.models.SuperExpCutoffPowerLaw3FGLSpectralModel": [[270, 3, 1, "", "__call__"], [270, 2, 1, "", "amplitude"], [270, 3, 1, "", "copy"], [270, 2, 1, "", "covariance"], [270, 2, 1, "", "default_parameters"], [270, 2, 1, "", "ecut"], [270, 3, 1, "", "energy_flux"], [270, 3, 1, "", "energy_flux_error"], [270, 3, 1, "", "evaluate"], [270, 3, 1, "", "evaluate_error"], [270, 3, 1, "", "freeze"], [270, 3, 1, "", "from_dict"], [270, 3, 1, "", "from_parameters"], [270, 2, 1, "", "frozen"], [270, 2, 1, "", "index_1"], [270, 2, 1, "", "index_2"], [270, 3, 1, "", "integral"], [270, 3, 1, "", "integral_error"], [270, 3, 1, "", "inverse"], [270, 3, 1, "", "inverse_all"], [270, 2, 1, "", "is_norm_spectral_model"], [270, 2, 1, "", "parameters"], [270, 2, 1, "", "parameters_unique_names"], [270, 2, 1, "", "pivot_energy"], [270, 3, 1, "", "plot"], [270, 3, 1, "", "plot_error"], [270, 3, 1, "", "reassign"], [270, 2, 1, "", "reference"], [270, 3, 1, "", "reference_fluxes"], [270, 3, 1, "", "spectral_index"], [270, 3, 1, "", "spectral_index_error"], [270, 2, 1, "", "tag"], [270, 3, 1, "", "to_dict"], [270, 2, 1, "", "type"], [270, 3, 1, "", "unfreeze"]], "gammapy.modeling.models.SuperExpCutoffPowerLaw4FGLDR3SpectralModel": [[271, 3, 1, "", "__call__"], [271, 2, 1, "", "amplitude"], [271, 3, 1, "", "copy"], [271, 2, 1, "", "covariance"], [271, 2, 1, "", "default_parameters"], [271, 3, 1, "", "energy_flux"], [271, 3, 1, "", "energy_flux_error"], [271, 3, 1, "", "evaluate"], [271, 3, 1, "", "evaluate_error"], [271, 2, 1, "", "expfactor"], [271, 3, 1, "", "freeze"], [271, 3, 1, "", "from_dict"], [271, 3, 1, "", "from_parameters"], [271, 2, 1, "", "frozen"], [271, 2, 1, "", "index_1"], [271, 2, 1, "", "index_2"], [271, 3, 1, "", "integral"], [271, 3, 1, "", "integral_error"], [271, 3, 1, "", "inverse"], [271, 3, 1, "", "inverse_all"], [271, 2, 1, "", "is_norm_spectral_model"], [271, 2, 1, "", "parameters"], [271, 2, 1, "", "parameters_unique_names"], [271, 2, 1, "", "pivot_energy"], [271, 3, 1, "", "plot"], [271, 3, 1, "", "plot_error"], [271, 3, 1, "", "reassign"], [271, 2, 1, "", "reference"], [271, 3, 1, "", "reference_fluxes"], [271, 3, 1, "", "spectral_index"], [271, 3, 1, "", "spectral_index_error"], [271, 2, 1, "", "tag"], [271, 3, 1, "", "to_dict"], [271, 2, 1, "", "type"], [271, 3, 1, "", "unfreeze"]], "gammapy.modeling.models.SuperExpCutoffPowerLaw4FGLSpectralModel": [[272, 3, 1, "", "__call__"], [272, 2, 1, "", "amplitude"], [272, 3, 1, "", "copy"], [272, 2, 1, "", "covariance"], [272, 2, 1, "", "default_parameters"], [272, 3, 1, "", "energy_flux"], [272, 3, 1, "", "energy_flux_error"], [272, 3, 1, "", "evaluate"], [272, 3, 1, "", "evaluate_error"], [272, 2, 1, "", "expfactor"], [272, 3, 1, "", "freeze"], [272, 3, 1, "", "from_dict"], [272, 3, 1, "", "from_parameters"], [272, 2, 1, "", "frozen"], [272, 2, 1, "", "index_1"], [272, 2, 1, "", "index_2"], [272, 3, 1, "", "integral"], [272, 3, 1, "", "integral_error"], [272, 3, 1, "", "inverse"], [272, 3, 1, "", "inverse_all"], [272, 2, 1, "", "is_norm_spectral_model"], [272, 2, 1, "", "parameters"], [272, 2, 1, "", "parameters_unique_names"], [272, 2, 1, "", "pivot_energy"], [272, 3, 1, "", "plot"], [272, 3, 1, "", "plot_error"], [272, 3, 1, "", "reassign"], [272, 2, 1, "", "reference"], [272, 3, 1, "", "reference_fluxes"], [272, 3, 1, "", "spectral_index"], [272, 3, 1, "", "spectral_index_error"], [272, 2, 1, "", "tag"], [272, 3, 1, "", "to_dict"], [272, 2, 1, "", "type"], [272, 3, 1, "", "unfreeze"]], "gammapy.modeling.models.TemplateNDSpatialModel": [[274, 3, 1, "", "__call__"], [274, 3, 1, "", "copy"], [274, 2, 1, "", "covariance"], [274, 2, 1, "", "default_parameters"], [274, 3, 1, "", "evaluate"], [274, 3, 1, "", "evaluate_geom"], [274, 2, 1, "", "evaluation_bin_size_min"], [274, 2, 1, "", "evaluation_radius"], [274, 2, 1, "", "evaluation_region"], [274, 3, 1, "", "freeze"], [274, 3, 1, "", "from_dict"], [274, 3, 1, "", "from_parameters"], [274, 3, 1, "", "from_position"], [274, 2, 1, "", "frozen"], [274, 3, 1, "", "integrate_geom"], [274, 2, 1, "", "is_energy_dependent"], [274, 2, 1, "", "map"], [274, 2, 1, "", "parameters"], [274, 2, 1, "", "parameters_unique_names"], [274, 2, 1, "", "phi_0"], [274, 3, 1, "", "plot"], [274, 3, 1, "", "plot_error"], [274, 3, 1, "", "plot_grid"], [274, 3, 1, "", "plot_interactive"], [274, 3, 1, "", "plot_position_error"], [274, 2, 1, "", "position"], [274, 2, 1, "", "position_error"], [274, 2, 1, "", "position_lonlat"], [274, 3, 1, "", "reassign"], [274, 2, 1, "", "tag"], [274, 3, 1, "", "to_dict"], [274, 2, 1, "", "type"], [274, 3, 1, "", "unfreeze"], [274, 3, 1, "", "write"]], "gammapy.modeling.models.TemplateNDSpectralModel": [[275, 3, 1, "", "__call__"], [275, 3, 1, "", "copy"], [275, 2, 1, "", "covariance"], [275, 2, 1, "", "default_parameters"], [275, 3, 1, "", "energy_flux"], [275, 3, 1, "", "energy_flux_error"], [275, 3, 1, "", "evaluate"], [275, 3, 1, "", "evaluate_error"], [275, 3, 1, "", "freeze"], [275, 3, 1, "", "from_dict"], [275, 3, 1, "", "from_parameters"], [275, 2, 1, "", "frozen"], [275, 3, 1, "", "integral"], [275, 3, 1, "", "integral_error"], [275, 3, 1, "", "inverse"], [275, 3, 1, "", "inverse_all"], [275, 2, 1, "", "is_norm_spectral_model"], [275, 2, 1, "", "map"], [275, 2, 1, "", "parameters"], [275, 2, 1, "", "parameters_unique_names"], [275, 2, 1, "", "pivot_energy"], [275, 3, 1, "", "plot"], [275, 3, 1, "", "plot_error"], [275, 3, 1, "", "reassign"], [275, 3, 1, "", "reference_fluxes"], [275, 3, 1, "", "spectral_index"], [275, 3, 1, "", "spectral_index_error"], [275, 2, 1, "", "tag"], [275, 3, 1, "", "to_dict"], [275, 2, 1, "", "type"], [275, 3, 1, "", "unfreeze"], [275, 3, 1, "", "write"]], "gammapy.modeling.models.TemplateNPredModel": [[276, 3, 1, "", "copy"], [276, 2, 1, "", "covariance"], [276, 3, 1, "", "cutout"], [276, 2, 1, "", "default_parameters"], [276, 2, 1, "", "energy_center"], [276, 3, 1, "", "evaluate"], [276, 2, 1, "", "evaluation_radius"], [276, 3, 1, "", "freeze"], [276, 3, 1, "", "from_dict"], [276, 3, 1, "", "from_parameters"], [276, 2, 1, "", "frozen"], [276, 2, 1, "", "map"], [276, 2, 1, "", "name"], [276, 2, 1, "", "parameters"], [276, 2, 1, "", "parameters_unique_names"], [276, 2, 1, "", "position"], [276, 3, 1, "", "reassign"], [276, 3, 1, "", "slice_by_energy"], [276, 2, 1, "", "spectral_model"], [276, 3, 1, "", "stack"], [276, 2, 1, "", "tag"], [276, 3, 1, "", "to_dict"], [276, 2, 1, "", "type"], [276, 3, 1, "", "unfreeze"], [276, 3, 1, "", "write"]], "gammapy.modeling.models.TemplatePhaseCurveTemporalModel": [[277, 3, 1, "", "__call__"], [277, 3, 1, "", "copy"], [277, 2, 1, "", "covariance"], [277, 2, 1, "", "default_parameters"], [277, 3, 1, "", "evaluate"], [277, 2, 1, "", "f0"], [277, 2, 1, "", "f1"], [277, 2, 1, "", "f2"], [277, 3, 1, "", "freeze"], [277, 3, 1, "", "from_dict"], [277, 3, 1, "", "from_parameters"], [277, 2, 1, "", "frozen"], [277, 3, 1, "", "integral"], [277, 2, 1, "", "is_energy_dependent"], [277, 2, 1, "", "parameters"], [277, 2, 1, "", "parameters_unique_names"], [277, 2, 1, "", "phi_ref"], [277, 3, 1, "", "plot"], [277, 3, 1, "", "plot_phasogram"], [277, 3, 1, "", "read"], [277, 3, 1, "", "reassign"], [277, 2, 1, "", "reference_time"], [277, 3, 1, "", "sample_time"], [277, 2, 1, "", "t_ref"], [277, 2, 1, "", "tag"], [277, 3, 1, "", "time_sum"], [277, 3, 1, "", "to_dict"], [277, 2, 1, "", "type"], [277, 3, 1, "", "unfreeze"], [277, 3, 1, "", "write"]], "gammapy.modeling.models.TemplateSpatialModel": [[278, 3, 1, "", "__call__"], [278, 3, 1, "", "copy"], [278, 2, 1, "", "covariance"], [278, 2, 1, "", "default_parameters"], [278, 3, 1, "", "evaluate"], [278, 3, 1, "", "evaluate_geom"], [278, 2, 1, "", "evaluation_bin_size_min"], [278, 2, 1, "", "evaluation_radius"], [278, 2, 1, "", "evaluation_region"], [278, 3, 1, "", "freeze"], [278, 3, 1, "", "from_dict"], [278, 3, 1, "", "from_parameters"], [278, 3, 1, "", "from_position"], [278, 2, 1, "", "frozen"], [278, 3, 1, "", "integrate_geom"], [278, 2, 1, "", "is_energy_dependent"], [278, 2, 1, "", "lat_0"], [278, 2, 1, "", "lon_0"], [278, 2, 1, "", "map"], [278, 2, 1, "", "map_center"], [278, 2, 1, "", "parameters"], [278, 2, 1, "", "parameters_unique_names"], [278, 2, 1, "", "phi_0"], [278, 3, 1, "", "plot"], [278, 3, 1, "", "plot_error"], [278, 3, 1, "", "plot_grid"], [278, 3, 1, "", "plot_interactive"], [278, 3, 1, "", "plot_position_error"], [278, 2, 1, "", "position"], [278, 2, 1, "", "position_error"], [278, 2, 1, "", "position_lonlat"], [278, 3, 1, "", "read"], [278, 3, 1, "", "reassign"], [278, 2, 1, "", "tag"], [278, 3, 1, "", "to_dict"], [278, 3, 1, "", "to_region"], [278, 2, 1, "", "type"], [278, 3, 1, "", "unfreeze"], [278, 3, 1, "", "write"]], "gammapy.modeling.models.TemplateSpectralModel": [[279, 3, 1, "", "__call__"], [279, 3, 1, "", "copy"], [279, 2, 1, "", "covariance"], [279, 2, 1, "", "default_parameters"], [279, 3, 1, "", "energy_flux"], [279, 3, 1, "", "energy_flux_error"], [279, 3, 1, "", "evaluate"], [279, 3, 1, "", "evaluate_error"], [279, 3, 1, "", "freeze"], [279, 3, 1, "", "from_dict"], [279, 3, 1, "", "from_parameters"], [279, 3, 1, "", "from_region_map"], [279, 2, 1, "", "frozen"], [279, 3, 1, "", "integral"], [279, 3, 1, "", "integral_error"], [279, 3, 1, "", "inverse"], [279, 3, 1, "", "inverse_all"], [279, 2, 1, "", "is_norm_spectral_model"], [279, 2, 1, "", "parameters"], [279, 2, 1, "", "parameters_unique_names"], [279, 2, 1, "", "pivot_energy"], [279, 3, 1, "", "plot"], [279, 3, 1, "", "plot_error"], [279, 3, 1, "", "read_xspec_model"], [279, 3, 1, "", "reassign"], [279, 3, 1, "", "reference_fluxes"], [279, 3, 1, "", "spectral_index"], [279, 3, 1, "", "spectral_index_error"], [279, 2, 1, "", "tag"], [279, 3, 1, "", "to_dict"], [279, 2, 1, "", "type"], [279, 3, 1, "", "unfreeze"]], "gammapy.modeling.models.TemporalModel": [[280, 3, 1, "", "__call__"], [280, 3, 1, "", "copy"], [280, 2, 1, "", "covariance"], [280, 2, 1, "", "default_parameters"], [280, 3, 1, "", "freeze"], [280, 3, 1, "", "from_dict"], [280, 3, 1, "", "from_parameters"], [280, 2, 1, "", "frozen"], [280, 3, 1, "", "integral"], [280, 2, 1, "", "is_energy_dependent"], [280, 2, 1, "", "parameters"], [280, 2, 1, "", "parameters_unique_names"], [280, 3, 1, "", "plot"], [280, 3, 1, "", "reassign"], [280, 2, 1, "", "reference_time"], [280, 3, 1, "", "sample_time"], [280, 3, 1, "", "time_sum"], [280, 3, 1, "", "to_dict"], [280, 2, 1, "", "type"], [280, 3, 1, "", "unfreeze"]], "gammapy.modeling.models.UniformPrior": [[281, 3, 1, "", "__call__"], [281, 3, 1, "", "copy"], [281, 2, 1, "", "covariance"], [281, 2, 1, "", "default_parameters"], [281, 3, 1, "", "evaluate"], [281, 3, 1, "", "freeze"], [281, 3, 1, "", "from_dict"], [281, 3, 1, "", "from_parameters"], [281, 2, 1, "", "frozen"], [281, 2, 1, "", "max"], [281, 2, 1, "", "min"], [281, 2, 1, "", "parameters"], [281, 2, 1, "", "parameters_unique_names"], [281, 3, 1, "", "reassign"], [281, 2, 1, "", "tag"], [281, 3, 1, "", "to_dict"], [281, 2, 1, "", "type"], [281, 3, 1, "", "unfreeze"], [281, 2, 1, "", "weight"]], "gammapy.modeling.models.utils": [[288, 4, 1, "", "read_hermes_cube"]], "gammapy.stats": [[291, 1, 1, "", "CashCountsStatistic"], [292, 4, 1, "", "TimmerKonig_lightcurve_simulator"], [293, 1, 1, "", "WStatCountsStatistic"], [294, 4, 1, "", "cash"], [295, 4, 1, "", "cash_sum_cython"], [296, 4, 1, "", "compute_chisq"], [297, 4, 1, "", "compute_flux_doubling"], [298, 4, 1, "", "compute_fpp"], [299, 4, 1, "", "compute_fvar"], [300, 4, 1, "", "cstat"], [301, 4, 1, "", "discrete_correlation"], [302, 4, 1, "", "f_cash_root_cython"], [303, 4, 1, "", "get_wstat_gof_terms"], [304, 4, 1, "", "get_wstat_mu_bkg"], [305, 4, 1, "", "norm_bounds_cython"], [306, 4, 1, "", "structure_function"], [307, 4, 1, "", "wstat"]], "gammapy.stats.CashCountsStatistic": [[291, 3, 1, "", "compute_errn"], [291, 3, 1, "", "compute_errp"], [291, 3, 1, "", "compute_upper_limit"], [291, 2, 1, "", "error"], [291, 3, 1, "", "info_dict"], [291, 2, 1, "", "n_bkg"], [291, 2, 1, "", "n_sig"], [291, 3, 1, "", "n_sig_matching_significance"], [291, 2, 1, "", "p_value"], [291, 2, 1, "", "sqrt_ts"], [291, 2, 1, "", "stat_max"], [291, 2, 1, "", "stat_null"], [291, 3, 1, "", "sum"], [291, 2, 1, "", "ts"]], "gammapy.stats.WStatCountsStatistic": [[293, 3, 1, "", "compute_errn"], [293, 3, 1, "", "compute_errp"], [293, 3, 1, "", "compute_upper_limit"], [293, 2, 1, "", "error"], [293, 3, 1, "", "info_dict"], [293, 2, 1, "", "n_bkg"], [293, 2, 1, "", "n_sig"], [293, 3, 1, "", "n_sig_matching_significance"], [293, 2, 1, "", "p_value"], [293, 2, 1, "", "sqrt_ts"], [293, 2, 1, "", "stat_max"], [293, 2, 1, "", "stat_null"], [293, 3, 1, "", "sum"], [293, 2, 1, "", "ts"]], "gammapy.utils": [[13, 0, 0, "-", "cluster"], [13, 0, 0, "-", "coordinates"], [13, 0, 0, "-", "fits"], [13, 0, 0, "-", "integrate"], [13, 0, 0, "-", "interpolation"], [13, 0, 0, "-", "parallel"], [13, 0, 0, "-", "random"], [13, 0, 0, "-", "regions"], [13, 0, 0, "-", "scripts"], [13, 0, 0, "-", "table"], [13, 0, 0, "-", "testing"], [13, 0, 0, "-", "time"], [13, 0, 0, "-", "units"]], "gammapy.utils.cluster": [[308, 4, 1, "", "hierarchical_clustering"], [309, 4, 1, "", "standard_scaler"]], "gammapy.utils.coordinates": [[310, 5, 1, "", "D_SUN_TO_GALACTIC_CENTER"], [311, 4, 1, "", "cartesian"], [312, 4, 1, "", "fov_to_sky"], [313, 4, 1, "", "galactic"], [314, 4, 1, "", "motion_since_birth"], [315, 4, 1, "", "polar"], [316, 4, 1, "", "sky_to_fov"], [317, 4, 1, "", "velocity_glon_glat"]], "gammapy.utils.fits": [[318, 1, 1, "", "HDULocation"], [319, 1, 1, "", "LazyFitsData"], [320, 4, 1, "", "earth_location_from_dict"]], "gammapy.utils.fits.HDULocation": [[318, 3, 1, "", "get_hdu"], [318, 3, 1, "", "info"], [318, 3, 1, "", "load"], [318, 3, 1, "", "path"]], "gammapy.utils.integrate": [[321, 4, 1, "", "trapz_loglog"]], "gammapy.utils.interpolation": [[322, 1, 1, "", "ScaledRegularGridInterpolator"], [323, 4, 1, "", "interpolate_profile"], [324, 4, 1, "", "interpolation_scale"]], "gammapy.utils.interpolation.ScaledRegularGridInterpolator": [[322, 3, 1, "", "__call__"]], "gammapy.utils.parallel": [[325, 5, 1, "", "BACKEND_DEFAULT"], [326, 5, 1, "", "METHOD_DEFAULT"], [327, 5, 1, "", "METHOD_KWARGS_DEFAULT"], [328, 5, 1, "", "N_JOBS_DEFAULT"], [329, 5, 1, "", "POOL_KWARGS_DEFAULT"], [330, 1, 1, "", "multiprocessing_manager"], [331, 4, 1, "", "run_multiprocessing"]], "gammapy.utils.random": [[332, 1, 1, "", "InverseCDFSampler"], [333, 4, 1, "", "draw"], [334, 4, 1, "", "get_random_state"], [335, 4, 1, "", "normalize"], [336, 4, 1, "", "pdf"], [337, 4, 1, "", "sample_powerlaw"], [338, 4, 1, "", "sample_sphere"], [339, 4, 1, "", "sample_sphere_distance"], [340, 4, 1, "", "sample_times"]], "gammapy.utils.random.InverseCDFSampler": [[332, 3, 1, "", "sample"], [332, 3, 1, "", "sample_axis"]], "gammapy.utils.regions": [[341, 4, 1, "", "compound_region_to_regions"], [342, 4, 1, "", "make_concentric_annulus_sky_regions"], [343, 4, 1, "", "make_orthogonal_rectangle_sky_regions"], [344, 4, 1, "", "region_to_frame"], [345, 4, 1, "", "regions_to_compound_region"]], "gammapy.utils.scripts": [[346, 4, 1, "", "from_yaml"], [347, 4, 1, "", "get_images_paths"], [348, 4, 1, "", "make_path"], [349, 4, 1, "", "read_yaml"], [350, 4, 1, "", "recursive_merge_dicts"], [351, 4, 1, "", "to_yaml"], [352, 4, 1, "", "write_yaml"]], "gammapy.utils.table": [[353, 4, 1, "", "hstack_columns"], [354, 4, 1, "", "table_row_to_dict"], [355, 4, 1, "", "table_standardise_units_copy"], [356, 4, 1, "", "table_standardise_units_inplace"]], "gammapy.utils.testing": [[357, 1, 1, "", "Checker"], [358, 4, 1, "", "assert_quantity_allclose"], [359, 4, 1, "", "assert_skycoord_allclose"], [360, 4, 1, "", "assert_time_allclose"], [361, 4, 1, "", "mpl_plot_check"], [362, 4, 1, "", "requires_data"], [363, 4, 1, "", "requires_dependency"]], "gammapy.utils.testing.Checker": [[357, 3, 1, "", "run"]], "gammapy.utils.time": [[364, 4, 1, "", "absolute_time"], [365, 4, 1, "", "time_ref_from_dict"], [366, 4, 1, "", "time_ref_to_dict"], [367, 4, 1, "", "time_relative_to_ref"]], "gammapy.utils.units": [[368, 4, 1, "", "standardise_unit"], [369, 4, 1, "", "unit_from_fits_image_hdu"]], "gammapy.visualization": [[370, 1, 1, "", "MapPanelPlotter"], [371, 4, 1, "", "add_colorbar"], [372, 4, 1, "", "annotate_heatmap"], [373, 4, 1, "", "colormap_hess"], [374, 4, 1, "", "colormap_milagro"], [375, 4, 1, "", "plot_contour_line"], [376, 4, 1, "", "plot_distribution"], [377, 4, 1, "", "plot_heatmap"], [378, 4, 1, "", "plot_map_rgb"], [379, 4, 1, "", "plot_npred_signal"], [380, 4, 1, "", "plot_spectrum_datasets_off_regions"], [381, 4, 1, "", "plot_theta_squared_table"]], "gammapy.visualization.MapPanelPlotter": [[370, 3, 1, "", "plot"], [370, 3, 1, "", "plot_panel"]]}, "objnames": {"0": ["py", "module", "Python module"], "1": ["py", "class", "Python class"], "2": ["py", "attribute", "Python attribute"], "3": ["py", "method", "Python method"], "4": ["py", "function", "Python function"], "5": ["py", "data", "Python data"], "6": ["std", "cmdoption", "program option"]}, "objtypes": {"0": "py:module", "1": "py:class", "2": "py:attribute", "3": "py:method", "4": "py:function", "5": "py:data", "6": "std:cmdoption"}, "terms": {"": [16, 19, 20, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 41, 51, 52, 53, 67, 82, 83, 84, 86, 87, 90, 91, 92, 95, 100, 102, 103, 104, 105, 106, 109, 110, 111, 126, 127, 128, 132, 135, 143, 144, 149, 150, 151, 155, 175, 181, 202, 208, 220, 224, 225, 230, 232, 233, 237, 238, 240, 241, 242, 244, 248, 250, 251, 255, 257, 258, 265, 266, 267, 270, 271, 272, 277, 280, 282, 283, 289, 299, 318, 368, 372, 373, 380, 383, 384, 386, 388, 393, 394, 395, 397, 399, 400, 401, 402, 403, 406, 409, 413, 414, 416, 417, 419, 420, 421, 422, 450, 451, 453, 454, 455, 456, 457, 459, 461, 462, 463, 464, 465, 467, 468, 469, 470, 471, 473, 475, 476, 477, 478, 479, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 497, 498, 499, 501, 502, 504, 507, 508, 514, 515, 516, 517, 520, 522, 527, 538, 539, 540, 541, 543, 544, 545, 546, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 569, 570, 571, 572, 573, 574, 575, 576, 577, 581, 582, 583, 584, 586], "0": [11, 13, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 31, 33, 34, 35, 38, 39, 42, 47, 50, 51, 52, 53, 67, 71, 75, 83, 85, 87, 88, 89, 90, 91, 94, 96, 101, 103, 104, 105, 106, 109, 110, 111, 112, 113, 114, 115, 117, 120, 122, 124, 125, 126, 127, 128, 129, 130, 132, 134, 135, 143, 144, 149, 150, 151, 152, 154, 155, 156, 157, 159, 162, 163, 164, 165, 166, 167, 168, 170, 172, 175, 178, 179, 183, 193, 194, 195, 196, 197, 198, 199, 200, 203, 204, 205, 206, 207, 208, 209, 210, 211, 213, 216, 218, 220, 221, 224, 225, 226, 227, 228, 230, 231, 232, 233, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 247, 250, 251, 253, 254, 255, 256, 257, 258, 262, 263, 264, 265, 266, 267, 269, 270, 271, 272, 274, 275, 277, 278, 279, 280, 281, 287, 289, 291, 292, 293, 294, 297, 298, 299, 300, 301, 308, 309, 328, 332, 339, 340, 360, 371, 373, 374, 378, 380, 383, 384, 386, 387, 390, 394, 395, 397, 398, 399, 400, 401, 402, 403, 405, 406, 407, 408, 409, 410, 411, 412, 413, 417, 420, 421, 449, 450, 451, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 503, 505, 506, 507, 508, 509, 510, 514, 516, 520, 524, 526, 529, 531, 532, 533, 534, 535, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 582, 583, 584, 585], "00": [67, 87, 88, 89, 91, 102, 199, 384, 398, 453, 454, 455, 456, 458, 459, 460, 461, 462, 463, 464, 466, 467, 468, 471, 472, 474, 475, 477, 478, 480, 481, 484, 485, 486, 487, 488, 489, 490, 492, 493, 495, 496, 497, 498, 499, 501, 503, 505, 506, 507, 508, 509, 537, 547, 567, 568, 578, 586], "000": [67, 87, 88, 91, 127, 398, 455, 457, 459, 460, 462, 463, 467, 468, 469, 471, 472, 475, 477, 478, 481, 484, 485, 486, 490, 492, 493, 498, 505, 506, 508, 537], "0000": 409, "00000": 144, "000000": 484, "000000000000002": 490, "00000000000001": 462, "00000000000003": 479, "00000000000004": 484, "0000000000016": 86, "0000000000018": 94, "000000000002": 471, "0000000000064": 471, "000000000007": 484, "00000000001": 484, "00000000e": [487, 488], "00000001": 86, "0000000e": 488, "00000143": [384, 586], "0000e": [102, 455, 456, 459, 460, 461, 462, 464, 467, 475, 477, 478, 487, 493, 495, 507, 567], "0001": [19, 20, 26, 220, 221, 224, 228, 230, 231, 232, 237, 243, 244, 247, 251, 253, 255, 256, 257, 262, 267, 269, 270, 271, 272, 275, 279, 374, 469], "00010298": 485, "00015": 486, "000150": 457, "0002": [457, 508], "00020": 457, "0002000": 457, "0003": 469, "00050": 457, "000500": 457, "0006": 457, "00074287037": [94, 472], "000742870370370241": 94, "0008": 484, "0009": 457, "000e": [455, 459, 462, 464, 467, 468, 475, 478, 484, 487, 493, 495, 507, 508, 567], "000true": 457, "001": [50, 149, 150, 151, 152, 155, 156, 157, 159, 162, 164, 166, 167, 195, 196, 198, 204, 207, 208, 360, 471, 487, 545], "0016288e": 488, "001e": 67, "002018": 498, "0025508e": 488, "0028272e": 488, "0029": 408, "0029202684427718766": 506, "002e": [67, 460], "003": [479, 492, 498], "003026327991562108": 468, "0031052863692021915": 506, "0033": 584, "00336861061002e": 481, "0036925550381217": 462, "00375698": 241, "004": 67, "00422666667": 482, "00449161": 247, "00472179200096": 412, "00490": 469, "00490483": 469, "0049409": 497, "005": 484, "00521472221220211": 468, "0058e": 475, "005909017160171437": 470, "0064830e": 488, "00688029": 241, "007": 484, "0076540e": 488, "008": [484, 583], "008166963876141447": 470, "008891944789387447": 470, "00894": 508, "009": [481, 484], "00931e": 454, "009433226692021113": 470, "00e": [83, 454, 460, 463, 471, 475, 478, 479, 481, 485, 488, 489, 498, 506], "01": [39, 52, 75, 83, 87, 88, 91, 94, 103, 106, 110, 111, 113, 114, 129, 135, 178, 179, 183, 193, 194, 199, 203, 206, 227, 233, 238, 240, 242, 258, 265, 384, 412, 420, 453, 454, 455, 458, 459, 461, 463, 464, 467, 468, 471, 475, 478, 479, 480, 483, 484, 485, 487, 488, 489, 490, 491, 492, 493, 495, 496, 498, 499, 500, 506, 507, 508, 514, 519, 529, 531, 532, 535, 539, 541, 543, 547, 565, 570, 571, 572, 578, 583, 586], "010": 492, "010066705375548107": 412, "010e": 67, "011": 492, "01183": 144, "011872336272724": 506, "012": 492, "0122385e": 488, "01235137e": 488, "012733796525585": 494, "0139252e": 488, "014": [85, 103, 106, 110, 111, 175, 460, 467, 484, 489, 506, 507, 531], "0143724": 241, "0143764": 497, "01449": 83, "0145": 491, "01450": [476, 507], "0148015517529894": 412, "014811633859834": 412, "0149044e": 488, "015": 484, "01551196351647377": 241, "0163": 469, "01648855015875024": 582, "01700709977114979": 482, "017442925431194484": 482, "018": 67, "018182745349064267": 468, "0183519e": 488, "01960784313726": 473, "019672": 486, "019899368286133": 468, "01e": [175, 420, 454, 484], "01t00": [87, 91, 94, 199, 384, 463, 471, 586], "01t01": 91, "01t02": 91, "02": [16, 67, 83, 94, 103, 105, 106, 110, 111, 112, 117, 126, 163, 170, 175, 193, 194, 195, 196, 198, 200, 203, 204, 205, 206, 207, 208, 420, 453, 454, 455, 457, 459, 460, 464, 465, 467, 468, 469, 470, 471, 472, 474, 475, 476, 477, 478, 479, 484, 487, 488, 489, 490, 491, 492, 493, 496, 498, 503, 506, 507, 508, 509, 529, 531, 532, 538, 539, 540, 541, 542, 543, 544, 545, 546, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 569, 570, 571, 572, 573, 574, 575, 576, 577], "020": [468, 484, 486], "020420144596410953": 494, "021": [67, 484], "0225e": 484, "02288737": 241, "023": 484, "023472814714293713": 506, "024": 484, "02432": 484, "024715584699834": 506, "024897178551308": 412, "024e": 508, "025": [484, 498], "0251191207999763": 469, "025808": 556, "025e": 144, "026": [53, 67, 484], "02653": [463, 469], "026891": 484, "026914": 484, "027": 67, "0279e": 461, "028549898215494e": 412, "028854": 491, "029e": [455, 484], "02e": [83, 481], "02t23": 86, "03": [17, 19, 20, 21, 22, 24, 25, 26, 27, 67, 87, 89, 91, 205, 396, 411, 453, 454, 455, 457, 468, 469, 471, 478, 484, 488, 490, 492, 494, 495, 496, 500, 501, 507, 542], "03034567e": 486, "032": [453, 480, 481, 484], "0322": 67, "0322775e": 488, "03282163533743": 478, "033": [67, 484], "033176650892097": 96, "03383": 497, "034": 583, "0344": 67, "03447394e": 486, "03493": 486, "034e": 457, "035": 486, "0354700e": 488, "0356": 454, "0356551": 454, "036": 67, "036e": 484, "037": 492, "03745318352059925": 576, "0375512e": 488, "0376213e": 488, "03893": 486, "039": [467, 468, 486], "039215686274545": 473, "03921700077803329": 468, "0395135e": 488, "03978226e": 493, "04": [30, 67, 94, 453, 458, 460, 462, 463, 465, 468, 471, 478, 479, 484, 488, 490, 493, 498], "040": 459, "040e": 463, "041": 498, "0414": 463, "0415": 508, "0416e": 478, "041882": 484, "042": 484, "0423761": 454, "042e": 484, "043": 67, "04357249662280083": 459, "0442e": [475, 478], "04454": 498, "0454683": 497, "046": 67, "0462798e": 488, "047": 67, "0473174": 247, "0474750e": 488, "047496": 571, "048": [467, 498], "0482342e": 488, "04897634344908595": 96, "048e": 67, "049": [457, 467], "04939e": 454, "049676": 484, "04d": 471, "04e": [475, 489], "04t15": 86, "04t22": 86, "05": [19, 20, 26, 29, 42, 67, 71, 87, 91, 124, 125, 127, 134, 206, 213, 220, 221, 224, 228, 230, 231, 232, 237, 243, 244, 247, 251, 253, 255, 256, 257, 262, 267, 269, 270, 271, 272, 275, 279, 342, 411, 453, 454, 455, 456, 457, 458, 459, 463, 466, 467, 468, 469, 472, 475, 477, 483, 484, 485, 487, 488, 489, 492, 495, 496, 497, 499, 501, 506, 507, 534, 539], "050": 492, "05019": 144, "0503641": 454, "0503e": 478, "0505949e": 488, "05075": 488, "0508075688763": 484, "05088486522436142": 459, "050e": 463, "051": [19, 20, 26, 492], "051c": [17, 21, 22, 24, 25, 27], "052": 484, "0520119e": 488, "0521419985089": 470, "05227": 484, "053": 467, "053212009682775": 494, "053627": 559, "054833602905273e": 468, "0548e": [468, 478], "054e": 67, "055": [453, 458, 484], "055185": 550, "055e": 457, "0560": 508, "056130": 484, "05628243": 508, "05637e": 454, "05673": 508, "057": 484, "05762513693893088": 468, "058": 67, "058201": 484, "05853": 463, "058621": 546, "058823529411775": 473, "059": 67, "05901956e": 488, "0598579": 454, "05deg": 206, "06": [105, 126, 149, 150, 151, 152, 153, 155, 156, 157, 159, 162, 164, 166, 167, 194, 195, 196, 198, 203, 204, 206, 207, 208, 421, 453, 464, 467, 468, 469, 474, 480, 484, 485, 487, 488, 489, 490, 496, 498, 501, 568], "061": 508, "062": [471, 492, 493, 498], "0625": 493, "0628": 508, "063": 67, "0631757e": 488, "06334488877417636": 494, "064108e": 484, "06430": 469, "0643032": 469, "06450": 144, "065071": 484, "065119": 508, "06549": 144, "066": 459, "066442": 484, "0668303265302": 478, "067": 463, "0671e": 475, "068245": 484, "0689": 487, "068e": 457, "069": 67, "06t14": [460, 464, 465, 467, 493, 506, 538, 539, 540, 541, 542, 543, 544, 545, 546, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 569, 570, 571, 572, 573, 574, 575, 576, 577], "07": [103, 175, 358, 398, 420, 453, 457, 458, 460, 467, 469, 474, 477, 479, 480, 481, 484, 485, 488, 490, 492, 498, 501, 509], "07022": 144, "070483": 484, "0711412": 454, "072": 67, "073": 67, "0739282e": 488, "074": [484, 498], "07454639": 469, "07455": 469, "0746": 508, "0748": [484, 508], "075": 67, "07512322002655547": 468, "0756e": 454, "076": 508, "077": 454, "078": [453, 457, 483, 496], "07843137254903": 473, "07871368968": 485, "07943648658692837": 494, "07944657408": 484, "079464e": 508, "0799109224230051": 494, "07e": 479, "08": [86, 378, 420, 453, 458, 461, 462, 464, 465, 467, 468, 475, 478, 484, 485, 487, 489, 498, 506, 507, 548], "0800792e": 488, "08075": 488, "08081469527619482": 462, "08088": 181, "080e": 463, "0811551760882139": 494, "08142": 483, "08191603310406206": 494, "08192": 469, "08192101": 469, "082": 484, "082691868487906": 482, "08269984": 508, "082e": 127, "083": [67, 453, 474, 475, 484], "08328557573258877": 494, "0833333358168602": 459, "0833333432674408": 459, "08342": 144, "08388624433428049": 494, "084": 67, "08447355125099419": 494, "0845515": 454, "085": 484, "08529426": 97, "0855013383552432": 494, "0859117235629056e": 481, "08675": 485, "086e": 484, "087": 508, "08795162606984375": 494, "087e": 484, "088742": 484, "08880368117243051": 494, "08894569035619496": 494, "089": 139, "0894640e": 488, "0897868126630783": 494, "089881": 484, "08e": [475, 492], "09": [33, 127, 175, 453, 455, 458, 460, 463, 465, 467, 484, 485, 488, 489, 506, 507, 508, 584], "0902437e": 488, "0907128e": 488, "0910": [256, 257], "0914": [52, 53], "093477": 469, "09348": 469, "09375": 481, "09426693227142095": 494, "094834": 484, "095232": 484, "09562941": 508, "095707": 508, "096": 460, "0960": 508, "09607": 508, "09610314778983592": 494, "09623312838375568": 494, "096e": 478, "09740295372903346": 494, "097e": 67, "09805": 144, "098903": 484, "09907043184188653": 494, "09e": 489, "0b100": 328, "0d": [129, 473, 485, 543], "0e": [406, 460, 462, 463, 464, 468, 471, 475, 478, 481, 485, 486, 488, 490, 492, 493, 498, 506, 538, 539, 540, 541, 543, 544, 545, 546, 549, 550, 552, 555, 556, 558, 559, 560, 561, 563, 564, 565, 566, 567, 569, 570, 571, 572, 573, 574, 575, 576, 577], "0f": [487, 498, 508], "0rc": 413, "0rc1": 413, "0true": 469, "0x105fd0cf8": 383, "0x105fe3b70": 383, "0x129602550": 383, "0x7f5574acb0d0": 485, "0x7f5574acba00": 485, "0x7f5578e11100": 482, "0x7f5578f63550": 494, "0x7f5579563310": 473, "0x7f5579563e50": 473, "0x7f55796c5d30": 495, "0x7f557cc72dc0": 485, "0x7f557cca9fa0": 494, "0x7f557cd64040": 497, "0x7f557d204550": 497, "0x7f5588cfa940": 497, "0x7f5588d13d90": 497, "0x7f5588d879d0": 493, "0x7f5588f3f190": 485, "0x7f5588fd9fd0": 494, "0x7f55890a5730": 494, "0x7f558b6d5430": 567, "1": [16, 17, 18, 19, 20, 21, 22, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 35, 36, 37, 38, 39, 40, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 57, 59, 63, 66, 67, 71, 72, 74, 75, 78, 83, 86, 87, 88, 90, 91, 95, 96, 101, 102, 103, 106, 110, 111, 112, 116, 117, 119, 120, 124, 127, 128, 129, 130, 132, 133, 135, 139, 143, 144, 149, 150, 151, 152, 154, 155, 156, 157, 162, 163, 164, 165, 166, 168, 170, 175, 178, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 203, 204, 205, 206, 207, 208, 213, 216, 218, 220, 221, 223, 224, 225, 227, 228, 230, 231, 232, 233, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 247, 248, 251, 253, 255, 256, 257, 258, 262, 263, 264, 265, 266, 267, 269, 270, 271, 272, 275, 277, 278, 279, 280, 281, 282, 283, 289, 291, 292, 293, 297, 298, 308, 309, 321, 322, 328, 329, 330, 339, 340, 342, 343, 368, 370, 373, 374, 378, 380, 383, 384, 386, 387, 390, 391, 393, 394, 395, 397, 398, 400, 403, 405, 406, 407, 408, 409, 410, 413, 414, 417, 420, 424, 425, 427, 428, 432, 434, 435, 436, 439, 440, 441, 442, 443, 444, 445, 454, 455, 456, 457, 459, 460, 461, 462, 463, 464, 465, 467, 468, 469, 470, 471, 472, 473, 475, 476, 477, 478, 479, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 497, 498, 499, 500, 503, 506, 507, 508, 510, 514, 515, 516, 519, 520, 522, 524, 525, 526, 527, 528, 531, 532, 533, 534, 535, 538, 539, 540, 541, 542, 543, 544, 545, 546, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 569, 570, 571, 572, 573, 574, 575, 576, 577, 580, 581, 583, 584, 585], "10": [13, 16, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 50, 51, 52, 53, 54, 66, 67, 84, 86, 87, 88, 89, 90, 91, 101, 103, 104, 105, 106, 109, 110, 111, 112, 117, 120, 124, 125, 126, 127, 128, 129, 133, 134, 135, 137, 143, 144, 146, 149, 150, 152, 154, 156, 157, 162, 163, 164, 165, 166, 168, 175, 181, 194, 195, 196, 198, 200, 203, 204, 205, 206, 207, 208, 213, 216, 218, 227, 230, 243, 244, 247, 248, 270, 283, 292, 298, 328, 330, 340, 371, 376, 378, 380, 383, 384, 386, 387, 388, 389, 390, 391, 392, 393, 394, 399, 400, 405, 406, 407, 411, 412, 414, 420, 425, 427, 438, 440, 443, 447, 449, 453, 454, 455, 456, 459, 460, 461, 462, 463, 464, 465, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 481, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 495, 496, 497, 498, 499, 500, 506, 507, 508, 510, 516, 520, 526, 529, 531, 532, 533, 534, 544, 545, 548, 550, 553, 554, 556, 557, 558, 559, 561, 562, 564, 565, 566, 567, 570, 571, 572, 582, 583, 586], "100": [19, 20, 26, 46, 47, 74, 94, 127, 135, 154, 155, 165, 206, 208, 220, 221, 224, 225, 228, 230, 231, 232, 233, 237, 238, 240, 241, 242, 243, 244, 247, 251, 253, 255, 256, 257, 258, 262, 265, 267, 269, 270, 271, 272, 275, 277, 279, 280, 283, 285, 340, 383, 384, 386, 391, 402, 412, 423, 453, 454, 456, 459, 462, 467, 468, 469, 471, 472, 473, 475, 479, 482, 483, 484, 485, 486, 488, 489, 490, 493, 495, 497, 498, 499, 508, 512, 514, 515, 516, 520, 531, 534, 535, 538, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 578, 583], "1000": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 196, 201, 383, 386, 457, 484, 485, 488, 495, 498, 508, 534], "10000": [17, 18, 21, 22, 23, 24, 25, 27, 104, 109, 154, 165, 168, 178, 484, 498], "100000": [74, 484, 506], "1000000": [51, 52, 54, 484, 567], "10000000": 567, "100000000000": 486, "1000e": 495, "1001": [442, 471, 472], "1002": 442, "10041": 143, "10045": [65, 272, 566], "10049": 454, "1006": 442, "101": [428, 467, 475, 479, 484], "1012": 483, "1013": 443, "1014": 443, "101430": 479, "10172": 493, "102": [175, 460, 463, 583, 584], "1021": 443, "1025": 443, "1026": 443, "10262943822890519": [96, 494], "1027": 443, "102877228833871": 494, "1029": 443, "10295505": 508, "102e": 484, "103": [143, 423, 446, 453, 578], "103000133": 499, "1031": 443, "1032": 443, "1032531953505502": 506, "1034": 508, "1035": 443, "1035002116788955": 460, "1036": 463, "1038": 443, "104": [467, 469, 578], "1040": 443, "10409": 469, "10409446": 469, "10416667": 481, "1043": [443, 478], "104317": [103, 485, 492], "1044": 463, "1045": 443, "1046": 401, "10470702368766069": 494, "10477": 508, "105": [82, 500], "1051": 443, "1052": 484, "1053": 443, "1054": 443, "1054498": 139, "1057": 443, "10592": 586, "105953": 508, "105e": 463, "106": 478, "1061971e": 488, "106217": 83, "1062535e": 488, "1064": 484, "1065": 443, "1067": 443, "1069": 443, "107": [454, 490], "1070": [443, 508], "1072542e": 488, "1073": 443, "10752883769757363": 494, "1076": 443, "1078": 443, "107e": [463, 484], "108": [440, 453, 578], "108034597491956e": 493, "108043": 467, "1082": 443, "1083": 443, "1084": 443, "1085": 443, "1085000": 467, "1086": 298, "1087": 443, "1088": 443, "1089": 443, "109": [423, 453, 455, 490, 578], "1090": 443, "1092": [443, 463], "1092e": 475, "1093": [443, 463], "1098": 443, "1099306e": 488, "109e": 469, "10d": 473, "10e": [175, 484, 488], "10k": 196, "10th": [410, 422], "11": [67, 87, 91, 94, 127, 128, 132, 133, 216, 342, 387, 390, 392, 400, 407, 411, 423, 424, 445, 453, 454, 455, 456, 457, 459, 460, 461, 462, 463, 464, 465, 469, 471, 472, 473, 475, 476, 477, 478, 479, 481, 484, 485, 486, 487, 489, 491, 492, 495, 496, 498, 506, 507, 508, 531, 533, 584], "110": [484, 498], "1100": [443, 459], "110000": [485, 489], "1102": 443, "1102e": 456, "1103": 443, "110380": [83, 399, 464, 467, 469, 497], "1104": 443, "1105": 443, "1107": 443, "1108": 443, "111": [371, 390, 443, 467, 484], "1110": 443, "1111": [137, 146, 484, 508], "111140": [399, 464, 467, 469], "111159": [399, 464, 467, 469, 497], "11132": 64, "1115": 443, "111507416": 479, "111630": [89, 479, 497], "111797": 484, "11184": [65, 271, 565], "112": [453, 454, 459, 578], "11208": 65, "11220184543": 486, "1127": 443, "11291820875721864": 494, "113": 508, "1131": [391, 465], "1133": 443, "1134": 443, "1136": 443, "114416978060042": 478, "1149": 481, "115": 67, "1150": 443, "11517": 508, "11553325504064559": [96, 494], "11587179071752986": 96, "116": [423, 455, 456], "1160": 484, "11610": 508, "1162": 443, "1162290917256776e": 476, "1166": 443, "1167": [390, 397], "1169": 443, "116e": 67, "117": [423, 548], "1170": 443, "1172": 397, "117200": 555, "1173775": 484, "1176": 443, "117877e": 484, "1179": 443, "118": [143, 467], "1183": 443, "118355": 484, "11839": 144, "119": [455, 463, 467], "1190": 443, "119432": 454, "1195": 443, "119e": 459, "11af4c": 423, "11e": 484, "12": [17, 38, 42, 67, 86, 87, 91, 103, 106, 113, 114, 127, 144, 165, 168, 194, 195, 196, 198, 204, 207, 208, 220, 224, 230, 232, 237, 244, 255, 257, 267, 270, 271, 272, 283, 387, 389, 390, 391, 392, 394, 395, 400, 403, 406, 412, 423, 427, 428, 429, 441, 446, 453, 454, 455, 457, 459, 460, 461, 462, 463, 464, 465, 466, 467, 469, 470, 471, 476, 477, 478, 481, 482, 484, 485, 486, 487, 490, 492, 493, 495, 498, 506, 508, 520, 531, 534, 535, 538, 539, 540, 541, 543, 544, 545, 546, 548, 549, 550, 552, 555, 556, 559, 560, 561, 563, 564, 565, 566, 569, 570, 571, 572, 573, 574, 575, 576, 577], "120": [53, 398, 461, 498, 542], "120000": 464, "120154": 484, "1204": 443, "120477": 575, "1207": 443, "120e": [67, 508], "121": [67, 469, 492], "1210": 443, "1211": [443, 484], "121241": 467, "12148": 463, "1215": 443, "1216": 456, "12186": 508, "1219": 484, "122": [67, 143, 423, 457, 492], "1220": 443, "1226": 443, "1227": 443, "12276676166802643": 494, "122e": 468, "123": [87, 91, 395, 463], "1231": 444, "1234": 88, "123456789": [199, 384, 586], "1235": 443, "1237": 391, "1238": 443, "123890826": 86, "123892513": 86, "1239": 388, "123944": 83, "123e": 463, "124": [143, 395, 453, 463, 484, 492, 578], "1240": 443, "12423250e": 488, "1243": 508, "1244969200533408": 309, "1246": 443, "12493874": 488, "124e": 67, "125": [67, 127, 143, 459, 469, 490, 498, 508, 583], "12518": 468, "12525306": 482, "12546": 65, "1258925411": 486, "126": [67, 457, 484, 487], "12611": 144, "1264500e": 488, "126585": 454, "1266": 443, "1268": 443, "12688": 83, "1269263e": 488, "12697": 468, "127": 463, "12704": [143, 144], "1271v": 299, "12751": 454, "1277": 389, "1278": 390, "12794487": 493, "128": [423, 479, 510], "12809": [103, 485, 492], "1281": 443, "12816": 508, "12856": 498, "1287": 443, "1289": 443, "128e": 457, "129": [449, 507], "1290": 443, "1291": 443, "1294": 443, "1299": 484, "12nan5": 457, "12r_": 53, "12th": [408, 422], "13": [67, 102, 127, 144, 205, 308, 387, 388, 392, 397, 402, 411, 428, 454, 455, 456, 457, 459, 460, 461, 462, 463, 464, 465, 467, 468, 469, 470, 471, 472, 473, 475, 476, 477, 478, 479, 481, 483, 484, 485, 486, 487, 489, 490, 491, 492, 493, 495, 496, 497, 498, 499, 500, 506, 507, 508, 516, 584], "130": 531, "1300": 443, "1301v": 38, "13030": 508, "1305": 443, "13061": 493, "131": 457, "1310": 508, "1312": 443, "13133": 508, "13152": 469, "1316": 443, "1317": 444, "1318": 443, "1319": [94, 443], "13197": 467, "132": 463, "13226": 508, "1323e": 468, "132472": 469, "132e": 459, "133": 144, "1331": 444, "1334": 444, "1337": 444, "1339": 444, "133e": 457, "134": [144, 460, 463, 469], "1341": 444, "1342a": 155, "1343": 444, "1344": 484, "1345": 444, "1346": 444, "1347": 444, "13499879586502125": 470, "135": [38, 102, 144, 457, 473, 484, 487], "13500212963": 484, "1351e": 484, "1354": 444, "135498046875": 459, "1357": 444, "1359316": 508, "135e": 127, "136": 484, "1360": 444, "1361": 484, "1362": 444, "1367": 444, "1369": [391, 444], "137": [144, 463, 470], "1372": 444, "137254901960785": 473, "1373": 444, "1374": 444, "137521287529426e": 506, "1376": 444, "1376407570489014e": 476, "1377": 444, "1378": 444, "1379190199428797": 309, "137990": 484, "138": [423, 453, 457, 471, 501, 508], "1381": 444, "1386": 444, "1387": 444, "138e": 469, "139": [453, 459, 463, 498, 578], "13911": 508, "1393881668086242e": 481, "1394": 554, "13944023e": 486, "1395": 444, "1396": [383, 460], "13960": 508, "1397": 444, "1397412321592923": 494, "13e": 485, "13nan6": 457, "13th": 422, "14": [28, 65, 67, 86, 105, 126, 272, 384, 387, 392, 395, 400, 402, 403, 412, 442, 453, 454, 457, 459, 460, 463, 467, 479, 481, 484, 485, 486, 487, 489, 491, 492, 493, 496, 506, 507, 508, 509, 566, 583], "140": [453, 499, 547], "1401": 444, "1406": 444, "14079": 143, "1408": [444, 508], "141": [307, 469, 484, 501], "1411180": 467, "1412": 444, "14121": 469, "1412536400000000": 508, "14149953611195087": [96, 494], "14150": 469, "1419": [391, 445], "141945": 454, "142": [67, 423, 457, 484, 508], "14201": 143, "1421": 444, "14210": 457, "1426": 444, "142e": 484, "1432": 444, "1433": 444, "1435": 444, "1438": 178, "1438465e": 488, "1439110308062257": 494, "144": [457, 478, 492, 508], "14419991": 97, "1442739329466746e": 493, "1443": 444, "1444": 444, "1445": 397, "14457": 508, "1446": 444, "1447": 444, "145": 484, "1451": 398, "14531053887243": 469, "1456": 444, "1456479e": 488, "146": 508, "14610": 586, "146472": 484, "1467": [137, 146], "147": [442, 484, 490], "1470": [444, 508], "1474": 444, "1475": 444, "1476": 444, "14773": 498, "147e": 484, "148": 463, "1482": 484, "1485314": 97, "1486415e": 488, "1489": [444, 469], "149": [459, 489, 492], "1492": 444, "1494": 469, "149445429667434": 470, "1495": 444, "1499472780781963": 309, "149e": 484, "14e": [464, 483], "14msts37sst": [471, 472, 497], "14nan3": 457, "14nan5": 457, "14th": [407, 410, 422], "14yr_catalog": 65, "15": [39, 42, 67, 87, 88, 91, 152, 153, 154, 155, 156, 157, 162, 163, 164, 166, 205, 373, 374, 378, 392, 400, 423, 427, 432, 437, 440, 441, 442, 444, 454, 459, 463, 465, 467, 468, 469, 471, 472, 473, 475, 479, 481, 482, 484, 485, 486, 487, 489, 490, 492, 493, 498, 508, 531, 539], "150": [133, 143, 144, 423, 457, 459, 471, 472, 490, 508], "1505": 444, "15076259": 97, "151": [423, 453, 465, 466, 492], "1510": 139, "1510240e": 488, "15140": 463, "1515": 444, "15154854": 97, "1517": 444, "152": [463, 469], "1521": 469, "1523": 471, "15246": 471, "152477": 498, "1527": 444, "153": 484, "1530": 485, "15319": 471, "153600": 485, "154": [423, 453, 454, 484, 547], "1543": 444, "154e": 469, "155": 423, "15518": 508, "1552": 465, "1553": [484, 508], "1554": 444, "1554106e": 488, "1556": [444, 484, 508], "1556008e": 488, "1558": 444, "156": [423, 459, 460, 463, 469, 486, 492], "1562": 444, "15621": 508, "1564": 444, "156525": 484, "156654": 542, "1567": 478, "1567629e": 488, "1568": 444, "15686274509804": 473, "157": [423, 508], "1573": 444, "1576": 444, "158": [144, 454, 460, 467], "1582": 444, "15848931924": 486, "1586": 94, "15899": 463, "1594": 444, "1597317": 97, "15990": 144, "159t": 52, "15e": 465, "15h14m00": 484, "15nan8": 457, "16": [16, 24, 53, 67, 94, 110, 111, 194, 387, 391, 400, 403, 404, 412, 428, 443, 448, 450, 451, 453, 454, 456, 459, 460, 461, 462, 463, 464, 465, 467, 468, 469, 470, 471, 472, 473, 474, 476, 477, 478, 479, 481, 483, 484, 485, 486, 487, 489, 490, 491, 492, 493, 495, 497, 498, 499, 500, 506, 507, 508, 533, 575, 583, 584], "160": [31, 127, 423, 432, 473, 492], "1600": 472, "1600e": 455, "1605": 444, "16056": 463, "1606": 444, "1607": 483, "160e": 67, "161": [143, 391, 459, 469, 484], "1610e": [455, 484], "161250": 475, "1613279491744304": 494, "1616": 444, "1618850e": 488, "1619e": 102, "162": 67, "16227766": 490, "1622776601683795": [489, 490, 506], "16240": 507, "1626e": 464, "16287": 508, "1629219e": 488, "163": [473, 478, 583], "1630": [444, 508], "16303": 469, "16303044": 469, "1634": 444, "164": 484, "1642": 454, "165": [453, 492, 547], "1650": 508, "16506": 454, "16511": 469, "16511148": 469, "1658": 444, "165e": 463, "166": [423, 469, 484], "1660": 444, "166015625": 456, "1661916367760008e": 481, "1665478": 97, "166871893629602e": 481, "167": [423, 469, 475], "167219": 484, "1672e": 495, "1675": 444, "168": [484, 485, 508], "1681": 444, "1685": 444, "1686": 484, "1687": 86, "168702": 454, "169": 469, "1691": 454, "1695": 444, "1696": 444, "1697": 444, "1698": 459, "169871": 475, "169995": 475, "16th": 422, "17": [20, 21, 40, 67, 86, 394, 397, 400, 432, 449, 453, 454, 456, 459, 460, 461, 462, 463, 464, 465, 467, 468, 469, 470, 471, 472, 473, 474, 476, 477, 478, 479, 481, 483, 484, 485, 487, 488, 489, 490, 491, 492, 493, 495, 497, 498, 499, 500, 506, 507, 508, 584], "170": 456, "17016482e": 487, "1702": 444, "17020": 463, "1710": 445, "1711": 444, "1713": 456, "1715": 397, "1717": 508, "171749": 508, "1719502": 97, "1719610": 97, "1719670": 97, "171b": 282, "172": 473, "17229679": 97, "173": [453, 484, 547], "1731": [444, 492], "1732": 484, "17320": 484, "1736": 463, "1737799900000000": 508, "174": [453, 459, 568], "1742": 67, "17445": 508, "1746": [444, 508], "1748": [444, 492], "1750": 444, "1751": 444, "17511": 144, "1753": 508, "1755": 444, "1756": 460, "1759": 444, "175e": 484, "176": [144, 423, 479, 484, 568], "1760": 444, "1761": 444, "1762": 510, "1763": [445, 484], "1764": [444, 469], "176470588235294": 473, "1766": 445, "1768896e": 488, "177": [423, 453, 498, 499, 568], "17776": 454, "1778279410": 486, "177e": 484, "178": 443, "178442": 67, "1785": [444, 454], "1791": 444, "179475": 247, "1799": 444, "17a": [60, 484], "17e": 492, "17g": 50, "17th": 438, "18": [11, 87, 91, 105, 126, 143, 205, 387, 402, 408, 429, 435, 454, 456, 459, 460, 461, 462, 463, 464, 465, 467, 468, 469, 470, 471, 472, 473, 476, 477, 478, 479, 481, 483, 484, 485, 487, 489, 490, 491, 492, 493, 495, 497, 498, 499, 500, 506, 507, 508], "180": [397, 416, 418, 423, 484, 490], "1800": [444, 472, 490, 497], "180000": [471, 472, 497], "1804": 484, "180458": 467, "18046952655570045": 309, "1805": 397, "1807": 445, "1808": [444, 484, 508], "181": 463, "1811": 462, "1812": 444, "1813": 484, "1818": 444, "1821": 444, "1822": 444, "182316": 553, "1825": 484, "18257": 463, "183": [453, 459, 478, 480], "1830e": 459, "183139597": 86, "183375": 493, "1834": 456, "1835": 94, "1836": 445, "1836544903987521": 494, "1837": 445, "18385658": 469, "18386": 469, "18392464": 522, "184": [86, 94, 437, 441, 463, 467, 471, 477, 481, 491, 492], "18400002": 477, "1841": 392, "1845": 445, "1846": 445, "18465": 508, "1849": 445, "184989894219835": 482, "185": 491, "1854": [445, 484], "1855": 445, "1857": 445, "1859": 445, "186": [436, 469, 484], "1861": 445, "1862": 445, "186484131475074": 340, "1866": 489, "186643": 508, "187": [429, 436, 469], "1871": 445, "1877": 393, "188": [436, 453, 454, 478, 484, 547], "1883": 445, "1884": 445, "18842984749525210": 469, "1888": 445, "188e": 457, "189": [459, 488], "1890": 445, "1891": 445, "18921591": 488, "1893": 445, "1893e": [455, 484], "1894": 445, "1895": 445, "1896e": 455, "1898": 445, "18988": 508, "1899070e": 488, "18a": 62, "18h43m48": 67, "19": [51, 53, 54, 67, 205, 387, 399, 401, 403, 423, 431, 432, 434, 446, 453, 460, 462, 463, 470, 473, 474, 478, 479, 481, 482, 484, 485, 490, 492, 539, 545], "190": 484, "1902": [65, 272, 566], "1903": 445, "1904": 445, "1905": 468, "1908": 445, "1909": 445, "190e": 459, "191": [143, 436], "1910": 181, "1912": 445, "1917": 508, "1918": 445, "1919": 445, "192": 144, "1920": 508, "1921": 445, "19214093": 97, "1922": 445, "1926": 445, "1926520e": 488, "1927": 445, "1928": 484, "1929": 445, "193": [453, 463, 547], "1930": 445, "1933": 445, "1934": 445, "19354": 469, "1936": 478, "1936925": 97, "1937": [445, 484], "193e": 460, "194": [436, 463], "1943186": 97, "1947565": 97, "1949": 445, "195": [144, 241, 453, 459, 568], "1950rspsa": 52, "1951": 424, "1953": 412, "1953830": 97, "1955810e": 488, "1958e": 487, "196": [67, 454, 492], "1960784313725492": 473, "1961": [137, 146], "1962": 424, "1963": 484, "19644": 498, "1965tralm": 21, "1966": 424, "1969": 424, "196991563774588": 283, "197": [67, 469, 498], "1971": 394, "19736017641361556": 470, "1975": 424, "1976572e": 488, "1978": 484, "1979": [294, 300, 424, 581], "1979892": 469, "1980": 484, "1982": 37, "1983": 581, "1986": 395, "1986027": 508, "1987": 469, "19879005": 178, "1988": [138, 301, 424], "1988apj": [138, 301], "1989": 424, "199": [469, 492], "1990": [37, 424], "1990apj": [36, 37], "1991": 424, "1991mnra": 22, "19932878": 488, "1994": [424, 581], "1994a": [52, 53], "1995": [423, 424], "1995a": 292, "1995apj": 17, "1996": [27, 463, 482, 581], "1996mnra": 27, "1997": 506, "1997apj": 25, "1998": [87, 91, 424, 581], "1998apj": 28, "1999": [53, 199, 384, 586], "19991": 506, "199999809265137": 484, "19999999999999998": 462, "1999apj": 53, "199e": 478, "19e": 489, "19th": 422, "1d": [16, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 91, 110, 111, 129, 153, 154, 163, 177, 194, 196, 335, 376, 389, 393, 394, 396, 397, 398, 399, 402, 403, 404, 416, 426, 428, 429, 430, 431, 435, 437, 440, 444, 446, 447, 450, 453, 454, 456, 457, 458, 459, 461, 463, 467, 474, 478, 481, 485, 487, 489, 491, 493, 494, 495, 497, 498, 506, 518, 520, 522, 535, 581], "1dc": [82, 83, 89, 103, 106, 110, 111, 116, 119, 120, 124, 143, 144, 150, 154, 155, 156, 165, 371, 376, 378, 391, 393, 399, 403, 425, 454, 462, 464, 467, 469, 475, 478, 479, 485, 486, 488, 492, 520], "1deg": 206, "1e": [19, 20, 26, 86, 100, 132, 133, 135, 149, 150, 151, 152, 153, 155, 156, 157, 159, 162, 164, 166, 167, 194, 195, 196, 198, 203, 204, 206, 207, 208, 220, 221, 224, 228, 230, 231, 232, 237, 243, 244, 247, 248, 251, 253, 255, 256, 257, 262, 267, 269, 270, 271, 272, 275, 279, 283, 294, 300, 342, 358, 360, 383, 394, 455, 457, 459, 461, 463, 465, 467, 469, 471, 472, 475, 476, 477, 478, 479, 484, 487, 493, 495, 498, 499, 516, 520, 524, 548, 549, 550, 552, 555, 556, 560, 561, 563, 564, 565, 566], "1e0": 514, "1e10": [51, 155], "1e12": [514, 524], "1e2": [457, 514, 516], "1e3": [498, 524], "1e30": 558, "1e4": [487, 498, 499], "1e40": 515, "1e5": [461, 498, 516, 534, 535], "1e51": 52, "1e6": [45, 498, 512, 567], "1e7": [129, 567], "1f": 460, "1fhl": [429, 442], "1fhl_name": 71, "1h": 165, "1k": [103, 110], "1kpc": 516, "1lhaaso": [57, 70, 450, 484], "1lhaaso_catalog": 57, "1rc1": 413, "1tev": [52, 53, 133, 472], "2": [11, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 27, 28, 29, 30, 31, 32, 33, 35, 36, 37, 38, 39, 40, 46, 50, 51, 52, 53, 54, 59, 63, 67, 68, 71, 72, 74, 75, 77, 78, 80, 83, 84, 85, 86, 87, 89, 90, 91, 95, 96, 101, 102, 103, 105, 106, 110, 111, 115, 120, 124, 125, 126, 127, 128, 129, 130, 132, 133, 134, 135, 142, 144, 147, 148, 152, 153, 154, 155, 157, 163, 165, 168, 175, 178, 192, 193, 194, 195, 196, 197, 198, 200, 201, 202, 203, 205, 206, 208, 213, 216, 217, 219, 220, 224, 228, 230, 232, 237, 239, 240, 244, 245, 248, 255, 256, 257, 263, 264, 266, 267, 270, 271, 272, 277, 282, 283, 289, 291, 292, 293, 294, 299, 300, 306, 308, 328, 330, 368, 371, 376, 378, 380, 383, 384, 387, 388, 392, 394, 395, 397, 398, 399, 400, 403, 406, 407, 408, 409, 410, 413, 420, 421, 423, 424, 425, 426, 427, 428, 435, 440, 441, 442, 443, 444, 445, 451, 453, 454, 455, 456, 457, 459, 460, 461, 462, 463, 464, 465, 467, 468, 469, 470, 471, 472, 473, 475, 476, 477, 478, 479, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 497, 498, 499, 500, 506, 507, 508, 516, 519, 520, 522, 527, 528, 529, 531, 532, 534, 535, 536, 538, 539, 540, 541, 542, 543, 544, 545, 546, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 581, 582, 583, 584, 585], "20": [16, 38, 83, 87, 89, 91, 103, 106, 110, 111, 156, 157, 162, 164, 166, 175, 195, 196, 198, 204, 207, 208, 213, 292, 308, 384, 387, 388, 389, 391, 396, 398, 401, 403, 408, 446, 453, 454, 455, 459, 460, 461, 462, 463, 464, 465, 466, 467, 469, 470, 471, 476, 477, 478, 479, 480, 481, 482, 483, 484, 487, 489, 490, 492, 493, 495, 497, 500, 506, 507, 508, 510, 529, 531, 532, 533, 538, 539, 540, 541, 542, 544, 545, 554, 557, 562, 567, 568, 583], "200": [52, 87, 91, 135, 206, 407, 436, 453, 459, 460, 463, 469, 473, 475, 484, 490, 493, 508, 578, 583], "2000": [88, 103, 106, 110, 111, 129, 233, 238, 240, 242, 258, 265, 424, 471, 472, 473, 489, 498, 508, 581], "2000000": 467, "20000000000000004": 462, "20009124": 488, "2000apj": 283, "2000e": 493, "2001": [94, 424, 463, 581], "20016447648031e": 481, "2002": [87, 91, 298, 482], "2003": [299, 482], "2003mnra": 299, "2004": [86, 94, 412, 482, 500], "2004a": [39, 40], "2004aph": [83, 88], "2004mnra": 24, "2005": [65, 581], "200503": 454, "2005a": 484, "2006": [31, 33, 398, 463, 470, 477, 481], "200638": 508, "2006a": 283, "2006apj": [30, 31, 32, 33], "2006ara": 50, "2006mnra": [35, 120], "2007": [401, 581], "20072608": 488, "2008": [38, 86, 228, 279, 455, 498, 510, 548], "2008aj": 38, "2009": [135, 302, 425, 463, 581], "20097159": 488, "2009851": 488, "20099855": 488, "201": [52, 490], "2010": [129, 155, 228, 247, 306, 384, 451, 548, 581, 586], "2010a": [247, 283], "2010mnra": 155, "2011": [228, 455, 510, 548], "2011jcap": [17, 19, 20, 21, 22, 24, 25, 26, 27], "2012": [91, 425, 581], "2013": [102, 139, 403, 409, 414, 423, 482], "20136": [82, 309, 500], "20137": [309, 500], "2013aph": 282, "2013apj": 60, "2014": [137, 146, 422, 510], "2015": [52, 86, 397, 400, 422, 498], "20151": 309, "2015apj": 61, "2015jheap": 283, "2016": [26, 397, 400, 422, 425, 482, 489, 497], "2016apj": 58, "2017": [228, 388, 390, 400, 403, 420, 422, 425, 469, 497, 548], "2017apj": [59, 62], "2017icrc": 497, "2018": [52, 388, 389, 390, 391, 392, 393, 394, 398, 400, 402, 403, 422, 449, 497, 500, 581], "2019": [390, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 422, 444, 445, 470, 581], "202": 469, "2020": [205, 392, 403, 404, 405, 406, 407, 422, 470, 471, 478, 490, 570, 571, 572], "2021": [89, 228, 405, 407, 422, 449, 493, 497, 548], "2021345e": 488, "2022": [408, 409, 412, 422, 425, 499], "2023": [395, 410, 411, 412, 422, 425], "2023arxiv230517030c": 57, "2024": [412, 422, 497], "2024e": 507, "2025": [105, 126, 412, 421, 460, 464, 465, 467, 493, 506, 538, 539, 540, 541, 542, 543, 544, 545, 546, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 569, 570, 571, 572, 573, 574, 575, 576, 577], "2026": [395, 425], "2028": 425, "203": 478, "2030": [395, 425], "2031": 425, "20326": [308, 456], "20327": [308, 456], "2033": 425, "20339": 308, "2034": 425, "20343": 308, "20344": 308, "20345": 308, "20346": 308, "20349": 456, "2035": [125, 127, 425], "20350": 456, "2036": [125, 127], "2037": 425, "20372": 497, "2038": 425, "2039": 425, "20396": 456, "20397": 456, "204": [143, 453, 547], "2040469e": 488, "2041222e": 488, "20421": 456, "20422": 456, "2045": 395, "2046": 425, "2049": [425, 484, 508], "205": [436, 469, 490], "2050": [425, 478], "20508075688775": 484, "2051": 425, "20517": 456, "20518": 456, "20519": 456, "205192": 484, "20521": 456, "2053315944536949e": 497, "205357": 484, "2054": 425, "20559": 508, "2058705e": 488, "206": [453, 484, 568], "2061": 484, "2062580e": 488, "2064": 425, "2064335": 97, "2065": 425, "2066": 425, "2068682e": 488, "2069": 425, "207": [465, 469, 473, 492], "2071": [395, 425], "2075": 411, "207520865": 477, "207521165": 481, "207521465": 477, "207521627": 481, "2076": 425, "2077": 425, "2079930e": 488, "207e": 463, "208": [60, 465], "2085": 425, "2089": [397, 427], "20898": 456, "20899": 456, "209": 469, "20900": 456, "2093": 425, "2095": 469, "2097": 425, "2097e": 459, "2098": 425, "20deg": [471, 472], "20e": 488, "20th": 409, "21": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 102, 129, 150, 386, 387, 432, 438, 447, 453, 454, 455, 456, 459, 460, 461, 462, 463, 464, 465, 467, 468, 469, 470, 471, 472, 473, 474, 476, 477, 478, 479, 481, 483, 484, 485, 487, 488, 489, 490, 491, 492, 493, 495, 497, 498, 499, 500, 506, 507, 508, 535, 540, 543, 544, 546, 583], "210": [436, 484], "2103": 484, "2104": 426, "2104353e": 488, "2106": 426, "2108": 426, "211": [475, 484, 485], "2111": 426, "2112": [426, 507], "21134890398": 486, "2114": 426, "2115": 426, "211770556360534": 479, "2118": 426, "2119": 426, "211e": 484, "212": [67, 436, 451, 459, 484], "2121": 426, "2121164e": 488, "2123": 426, "21236e": 454, "2124": 426, "2126": [426, 454, 462, 464, 467, 469, 475, 478, 497], "2128": 426, "2129": [397, 427], "213": 461, "2130": 426, "2131": [426, 484], "2132": 426, "21325": 498, "2133": 426, "2136": [396, 428], "2139": 426, "214": [457, 463], "2140": 426, "2141": 426, "2142": 426, "2145": 426, "2146": 426, "21464892": 508, "214e": 459, "215": [67, 436, 450, 453, 484, 547], "21500000000003": 542, "2151": 426, "2152": 426, "21525804550772332": 470, "2153": [426, 484], "2154": [426, 484], "2155": [430, 455, 477, 478, 481, 482, 484, 494, 508, 548], "215686274509824": 473, "2157": 426, "2159e": 102, "215e": 484, "216": [241, 459, 490, 492, 577], "2160": 426, "2162670e": 488, "2163": 426, "2164425e": 488, "2166": 426, "2169": 426, "217": [459, 484], "2171": 426, "21731921e": 490, "21733761e": 490, "21735587e": 490, "218": 61, "2190": 401, "2192": 427, "2197": 469, "21t19": 94, "21t20": 94, "22": [67, 83, 85, 88, 103, 106, 110, 111, 135, 170, 175, 178, 193, 194, 203, 206, 387, 422, 435, 453, 459, 460, 461, 462, 463, 468, 476, 478, 480, 481, 484, 485, 489, 490, 491, 499, 500, 506, 507, 508, 519, 526, 529, 531, 532, 535, 567], "220": [453, 484, 492, 568, 583, 584], "2200": 427, "2201": [65, 271, 484, 508, 565], "2202e": 508, "2204": 427, "2206": 427, "220e": 484, "221": [397, 436], "22149": 463, "2217": 427, "2217412e": 488, "2218": [400, 428], "2219": [399, 428], "222": [58, 453, 484, 492, 568], "2221": 484, "22245374e": 127, "2227134679628": 478, "22271346796282": 478, "222713467962826": 478, "2229": [396, 427], "223": [453, 492, 568], "2230": 427, "2231": 484, "2235": 427, "2237": [427, 508], "2238": 427, "2239": 427, "2240": 427, "2243": 427, "2244": 427, "224436": 508, "225": [96, 308, 309, 407, 436, 453, 458, 484], "2250": 427, "22500": 465, "2254": 427, "2255": [401, 494], "225575051666": 484, "2255890": [477, 481, 494], "2257": 427, "2259": 427, "226": [469, 498], "22608": 485, "2262": 427, "22635140877790516": 487, "2264": [395, 427], "22646133647326874": 487, "2264827111476982": 487, "22648881839710966": 487, "2265163003209506": 487, "22662622801631419": 487, "227": [453, 568], "2270": 400, "2272": 427, "2274": [402, 428, 454], "2276": 427, "2277": [427, 478], "2278": 427, "2278975306934438": 487, "2279": [400, 428], "227e": 484, "228": [294, 300, 391, 397, 460, 465, 484, 489, 500], "2287": 427, "2289": 427, "229": [67, 484], "2290": 402, "2292": 428, "2294": 427, "2296": 427, "2297": 427, "22974080e": 498, "2298": 427, "22e": 489, "22nd": 422, "23": [77, 94, 178, 383, 387, 409, 422, 446, 456, 459, 461, 463, 468, 478, 481, 484, 487, 490, 492, 494, 501, 508, 531, 550, 563, 565], "230": [436, 463], "2300": 427, "2304": 401, "2305": 427, "230542e": 484, "2307": [64, 65], "2308": 428, "231": 436, "2310": 427, "2313": 428, "2314": 428, "232": 62, "2320": [428, 484, 485], "2321": 428, "2323": 428, "2326": 428, "2327": [484, 492], "23273": 498, "233": 460, "2330": 428, "23306": 463, "2332": 492, "2334": 428, "2335": 428, "2338": 428, "2339": [456, 484, 508], "234": [436, 479], "234132519034915": 490, "23413252": 490, "2342": 428, "2343": 428, "234359264373779": 489, "2343e": 492, "2344": 428, "2345": 428, "2346": 428, "2347": 428, "235": 436, "2350": 429, "2351": 428, "23523": [148, 175, 213, 420, 459, 460, 468, 476, 485, 487, 489, 500, 506, 507, 519, 522, 582], "23526": [148, 213, 459, 460, 468, 476, 485, 487, 489, 500, 506, 507, 582], "235294117647083": 473, "2354": 428, "23559": [459, 460, 476, 485, 489, 506, 507, 529, 531, 532, 582], "2356": 428, "2357": 492, "2358": 428, "2359": 428, "23592": [459, 460, 476, 485, 489, 506, 507, 529, 531, 532, 582], "236": [436, 484], "2360": 428, "2362506e": 488, "23628": 498, "2365": 428, "2366": 428, "2367": 428, "2368": 428, "237": 454, "23734": 508, "2375": 428, "2377": 428, "2378": 428, "2379": 428, "238": 467, "2381": 428, "238298": 454, "2384": 454, "2385": 428, "239": [67, 453, 469, 492, 496], "23905561": 488, "239439": 508, "239557417": 86, "2399": 484, "239e": 484, "23a": 61, "24": [25, 27, 52, 53, 86, 87, 91, 94, 386, 387, 400, 404, 439, 444, 454, 460, 463, 478, 481, 484, 485, 490, 492, 497, 498, 506, 509, 531, 548, 554, 555, 560, 564, 565, 566], "240": [103, 106, 110, 111, 124, 453, 484, 485, 486, 520, 568], "2400": 428, "2401": 428, "2404": 428, "2405": 429, "240e": 459, "241": 484, "2412": 428, "2414": 484, "2419": 454, "2428255": 486, "242835": 67, "243": [459, 486], "2431": 484, "2432": 463, "2433": 429, "2435": 429, "243514": 564, "243742672227972e": 481, "244": [67, 436, 453, 459, 568], "2440": 484, "2441": 429, "244140625": 492, "2443672e": 488, "2444": 429, "2446": [429, 492], "2448": 429, "2449": 429, "245": [436, 453, 568], "2450": [429, 492], "245152": 469, "2454": 429, "2455": 429, "24579": 486, "2459": 429, "246": [436, 486], "2461": 429, "24611324074": 484, "2463": [403, 429], "2464": 429, "2465055e": 488, "2468": 429, "24685677e": 488, "247": [67, 436], "2470": 429, "2471938975366008": 308, "2472": 429, "2475": 429, "2476": 429, "2477": 429, "2478": 429, "2479": [429, 507], "248": 436, "2481": 429, "248122": 484, "2483": 429, "2485": 506, "2486": 429, "249": [22, 436], "2490": 429, "2491": 429, "2492": 429, "2493": 429, "2496": 429, "24968": 454, "2497": 429, "2498": 429, "2499": 429, "249965667724609": 489, "249e": 144, "24e": [484, 492], "25": [33, 52, 87, 91, 102, 143, 144, 154, 165, 178, 294, 300, 387, 400, 407, 422, 443, 450, 451, 453, 454, 455, 459, 460, 463, 469, 478, 479, 481, 484, 488, 490, 492, 495, 496, 508, 540, 545, 549, 556, 566], "250": [490, 581], "2501": 429, "250185": 489, "2502": [429, 469], "2505": 429, "2505121": 97, "2505703": 479, "2509": 484, "251": [463, 467], "2510": 429, "251185": 508, "2511884200000000": 508, "2511886431": 486, "25162e": 454, "2518": 484, "251932": 484, "252": [436, 469, 484], "2520": 429, "2521": 429, "2523": 429, "2525": 429, "2528": 429, "253": [462, 492], "2535": 429, "2536": [429, 492], "2537": 492, "2538": 429, "254": 436, "2540": 429, "2546": 429, "254901960784338": 473, "25496": 508, "2551": 429, "2552": [429, 484], "2553": 429, "2555": 404, "2557": 429, "255750516626": 484, "2558": 429, "2559": 429, "256": [67, 439], "2560538e": 488, "2561": 429, "2562": 429, "256273": 460, "2563": 429, "2564": 429, "2567": 429, "2568710719919036": 470, "257": [143, 462], "2574": 429, "25743553e": 487, "25763": 463, "257642": 484, "2579999": 497, "258": [462, 546], "2580": 429, "25823909e": 486, "258280": 506, "2585": 429, "2587": 429, "2589254117941673": 506, "259": [462, 508], "2591e": [455, 484], "2594": 429, "2595": 429, "2595e": 467, "259e": [144, 463], "25b": 17, "25e": 492, "25t_": 53, "25th": 409, "26": [19, 87, 91, 144, 387, 422, 450, 454, 456, 459, 460, 461, 462, 463, 464, 465, 467, 468, 469, 470, 471, 472, 473, 476, 477, 478, 479, 481, 483, 484, 485, 487, 489, 490, 491, 492, 493, 495, 497, 498, 499, 500, 506, 507, 508, 510, 555, 558, 576], "260": [439, 508], "2604": 429, "2609": 492, "261": [439, 508], "2616": 429, "26173": 463, "2619": 429, "262": [439, 463, 492, 508], "2620": 429, "262554796103245": 506, "2625818241224747": 487, "2627": 429, "262728": 497, "26272868097919794": 494, "2628525e": 488, "263": [143, 144, 463, 492], "2633e": 468, "2635": 429, "2635108e": 488, "2637": 429, "2639554729438709": 494, "264": [143, 439, 469], "2645": 429, "26475": 465, "2648150": 97, "2649e": 487, "265": [32, 144, 397, 454, 463, 469, 492, 508], "2651": 429, "2654": 429, "266": [143, 144, 397, 462, 463, 469, 471, 475, 490, 492, 508], "2660": 429, "266192": 454, "26665050077722524": 494, "2667": 430, "267": [67, 144, 462, 463, 469, 492, 497], "2672": 430, "2673": 430, "26739753": 97, "2674": 430, "268": [409, 463, 469, 484, 492, 506, 508], "2681": 430, "2684": 430, "2685": 430, "268663733018811": 494, "2687": 430, "26883694": 508, "26887783978974283": 494, "2689": 469, "269": [473, 508], "2692": 430, "269385": 484, "269444": 506, "269627": 497, "2697": 430, "2699878e": 488, "26a": [39, 40, 50, 52, 53, 247, 283, 292, 484], "26e": [484, 492], "26th": [405, 422], "27": [144, 387, 389, 450, 459, 463, 469, 481, 485, 508, 551, 559, 562, 583], "270": [456, 463, 484, 492, 508], "2703": 430, "2705": 430, "27057337686547633": 494, "2707": 430, "2708": 247, "2709": 430, "27093776e": 488, "271": [459, 462, 463, 467, 508], "2711": 430, "2712": 430, "2713": 430, "2715": 430, "271777777777796": 456, "27177778": 94, "2718": 430, "2719": 430, "272": [462, 463, 484, 492], "2720": [404, 431], "27209": 508, "2723": 430, "2725": 430, "2726": 430, "2726e": 508, "2727": 430, "2727693": 497, "2727e": 459, "2728": 430, "2729": 430, "273": [83, 439, 457, 463, 508], "2730": 430, "2731": 430, "2733": 430, "2734": 127, "2735": 430, "2737": 430, "2738": 430, "2739": 430, "274": 490, "27409496735322464": 494, "2741": 430, "2742": 430, "2743": 430, "274509803921596": 473, "2746": 430, "2747": 430, "27473": 469, "275": [462, 484, 576], "2750": 430, "2751": 430, "2752": 430, "2753": 430, "2755": 430, "2756": 430, "2759": 431, "276": 439, "2761": 431, "2762": 431, "2764": 431, "2765": 431, "2767": 431, "2768": 431, "277": 462, "2771": 431, "2772": 431, "27727": 492, "2775": 431, "277522283785622": 470, "2776": 431, "2777": 431, "2777074437073429": 494, "2778": 431, "2779": 431, "278": [27, 439, 462, 475, 484, 492], "278072": 554, "2781": 431, "2782": 431, "2783": 431, "2784": 431, "2785": 431, "2785e": 459, "2787": 431, "2788": 431, "2789": 431, "278e": 463, "279": 439, "2790": 431, "2791": 431, "2792": 431, "2793": 431, "2794": 431, "2796": 431, "2797": 431, "2798": 431, "2799": 431, "27e": 484, "27t20": 89, "28": [21, 24, 67, 94, 143, 144, 392, 422, 453, 457, 459, 461, 462, 463, 469, 471, 475, 478, 481, 483, 484, 486, 489, 490, 492, 496, 497, 508, 548, 552], "280": [67, 439, 459, 462, 490], "2800": [471, 492, 508], "2801": 431, "2802": 431, "2803": 431, "2804": 431, "2805": 431, "2808": 431, "2809": 431, "281": [462, 484], "2810": 431, "2811": 431, "28118133544922": 484, "281196": 460, "2812": 431, "28120079": 484, "2815": 431, "2816": [431, 492], "2817": 431, "2818": 431, "2818047723094509": 494, "28183829312": 486, "282": [143, 144], "2820": 431, "2822": [431, 492], "2823": 431, "2825456e": 488, "2827": 431, "28275990e": 486, "2827988e": 488, "2828": 431, "2829": 431, "282951078740491e": 481, "282e": 484, "283": [439, 462], "2832": 431, "283218": 454, "283487": 484, "2837": 431, "28382603": 488, "2838398": 497, "28385358839966657": 494, "2839": 431, "284": [462, 484, 586], "2841": 431, "2842": 431, "28429": 469, "2845": 431, "2846": [431, 469], "285": [439, 462], "2852": 492, "28551": 144, "2859229": 486, "285f": [83, 88], "286": [439, 462, 486], "2861432787940619": 494, "286e": [463, 484], "287": [52, 53, 453, 496], "2872": 432, "28720322": 97, "2874": [432, 508], "28755283551095173": 494, "2878662980210884": 309, "288": 127, "2880470e": 488, "2885": 432, "288e": 457, "289": [439, 462], "28905": 498, "2891": 432, "28958": 463, "2896": 432, "2897": 432, "28e": [103, 457, 467, 469, 485, 498], "29": [67, 144, 277, 398, 408, 412, 422, 450, 454, 457, 460, 462, 463, 469, 475, 477, 481, 484, 490, 492, 493, 497, 508, 553, 557, 561], "290": [440, 462, 470, 486], "2900": 492, "290098": 486, "2903": [432, 492], "2903e": 461, "2907": 432, "291": 439, "2912": 432, "29158": 144, "29170324": 485, "291e": 508, "2922477": 97, "2923272203680937e": 481, "2924": 432, "2927": 432, "2929": 432, "293": 462, "2930": 484, "2931": 432, "2932": 432, "29355238360800506": 494, "2938": 432, "2939": 432, "2942": 405, "2943": 432, "2944": [406, 432], "2945": 432, "2947": 432, "2948": 432, "295": 439, "2950": 432, "2951": 432, "2953": 469, "2956": 432, "29585273e": 498, "2959": 492, "295e": 484, "296": 439, "296446": 506, "2965": 432, "2966": 432, "2967": 432, "297": 454, "2971e": 484, "2974": 432, "2976": 432, "2978e": 455, "298": [453, 462, 469, 484, 568], "2981": 432, "2984": 432, "29882214027996945": 494, "299": [439, 462, 484], "2990": 432, "2991": 432, "2992": 432, "2993": 432, "2995484265169": 482, "2996": 508, "2998": 432, "2999": [432, 484], "299940468335294": 469, "299995937905366": 469, "299e": 484, "299t": 53, "29t20": [477, 481], "29t21": 481, "29t22": 481, "29t23": 481, "29th": 422, "2_": 19, "2d": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 143, 144, 149, 150, 151, 152, 153, 155, 156, 157, 159, 162, 163, 164, 165, 166, 167, 168, 175, 185, 186, 193, 194, 195, 196, 198, 203, 204, 206, 207, 208, 213, 236, 389, 394, 399, 402, 403, 404, 416, 424, 430, 443, 444, 445, 453, 463, 465, 466, 469, 490, 491, 508, 518, 521, 532, 533, 534, 546], "2degx2deg": 471, "2e": [200, 454, 456, 457, 471, 472, 481, 484, 487, 492], "2e3": [200, 490], "2e6": 498, "2f": [372, 454, 460, 494, 507, 584], "2fhl": [58, 71, 429, 441, 442, 484, 508, 517], "2hwc": [59, 72, 429, 435, 443, 484, 517], "2k": [103, 110], "2m": [247, 283], "2nd": [60, 408], "2nd_psr_catalog": 60, "2pc": [60, 69, 73, 451, 484], "2pc_catalog_ve": 455, "3001": 432, "30015e": 454, "3002": 432, "3003": 492, "3004625872247901": 468, "3005": 432, "3006": 508, "3006942": 97, "3007": 432, "301": [439, 462], "3011061699260256": 494, "3012": 432, "3013": 484, "301668796295": 484, "302": 462, "3020791585772495": 308, "30287": 463, "3028e": 492, "302e": 484, "303": [459, 462, 484], "3030": 432, "3032": 432, "3034": 484, "3035": 432, "3037": 432, "3037632e": 488, "3038": [432, 508], "3039": 432, "304": [455, 477, 478, 481, 482, 484, 494, 508, 548], "3041": 432, "3042": 432, "3043": 492, "3045": 432, "3046875": [485, 492], "3049664466089965": 309, "304_steadi": 455, "305": [67, 462, 478], "3051": 432, "3051827": 97, "3051852": 97, "3051856": 97, "3052": 432, "3053": 432, "30535345877453707": 494, "3054": 432, "3054538213469855": 470, "30561": 144, "3058": 432, "3058422e": 488, "305e": 484, "306": [439, 583], "3060": 432, "306196370000000": 508, "3063": 432, "3069": 432, "306e": 484, "307": [462, 475], "3070": 432, "3071": 484, "307186": 576, "3072": 432, "3074": 432, "3075": 407, "3076": 432, "307e": 484, "308": [462, 469, 542], "3080": 432, "3081": 432, "3083": 432, "3085": 432, "3086": 432, "3088": 432, "3089": 432, "309": [453, 467, 474], "3091": 432, "3092": 432, "30997": 508, "30a": 283, "30d00m00": 410, "30e": [455, 488, 492], "30t00": 481, "30t01": 481, "30t02": 481, "30th": 395, "31": [143, 144, 392, 393, 406, 407, 420, 447, 453, 455, 457, 458, 459, 460, 462, 463, 467, 470, 473, 477, 478, 481, 484, 485, 486, 489, 490, 492, 495, 499, 506, 508, 569, 570, 571, 576], "310": 478, "3100": 432, "3106": 432, "31067517": 484, "3107": [484, 508], "311": [542, 584], "3110": 433, "3111": 433, "3112": 433, "3113": 433, "31139074e": 487, "3114": 433, "311489174710791e": 508, "3116": 433, "3117988e": 488, "31186857659616535": 494, "3119611261122878": 494, "312": 439, "3122": 434, "3123": 434, "3124": 434, "3125": 434, "3126": 434, "3127": 434, "3129": 434, "313": [462, 468], "3130": 434, "3131": [435, 492], "3135914081482271": 494, "3136": 435, "313714614138": 485, "3138": 435, "314": 444, "3140": 435, "3141": 435, "3145": 435, "3148": 435, "315": 484, "3152": 435, "3153": 435, "3155": 435, "315767542862533": 506, "3158": 435, "316": [462, 498, 499], "3162": 435, "316227": 484, "316227766016838": 489, "3165": 435, "3168": 435, "3169": 435, "317": [439, 453, 462, 469, 474], "3173": 435, "3178": 435, "317a": 283, "317e": [455, 484], "318": 439, "3180": 435, "3182": 435, "31834": 144, "3185": 435, "3189697265625": 459, "31898": 144, "319": [440, 498], "3191": 435, "3195": 508, "3197": 435, "319725": 497, "3199": 435, "32": [83, 143, 194, 453, 459, 463, 465, 467, 474, 480, 481, 489, 490, 508, 572, 575, 577], "320": [103, 106, 110, 111, 124, 478, 484, 485, 486, 492, 520], "3202": 435, "3207": 435, "3208": 435, "32095": 508, "321": 473, "3211": 435, "3216": 435, "3217": 435, "3219": 435, "322": 462, "3222": 435, "3228": 435, "3229": 469, "323": [453, 462, 568], "3230": 435, "3232943": 350, "3233356": 350, "32377509405904137": 96, "323779": 298, "3237948931463171": 494, "3238": 435, "3241": 435, "3243": 435, "3246": 435, "32465247": 493, "3254": 435, "3257": 435, "3258": 435, "325e": 460, "326": 439, "3262": 435, "32684": 508, "32684833": 497, "327": 469, "3272": 435, "3276": 435, "3277": 435, "3278": 435, "3279": 435, "3279955e": 488, "328": 469, "3281": 435, "3283": 435, "3284": 435, "32843": 508, "32847": 454, "3285": 435, "329": [96, 308, 309, 453, 477, 481, 484, 494, 522, 568], "3293": 435, "3299": 484, "329e": [459, 484], "33": [481, 482, 483, 487, 490, 508, 522], "330": [440, 453, 462, 492, 568], "3301": 435, "33013e": 454, "3302": 435, "3302565e": 488, "3303": 435, "330376": 67, "3304": 435, "3305": 435, "330505": 497, "33055e": 454, "3306": 435, "3307": 435, "3308": 435, "3309": 435, "3310": 435, "3314": 435, "33164865722698683": 494, "3319": 435, "3319831545301117": 308, "332": [67, 440, 498], "3320": 435, "3323": [435, 485], "332525": 484, "3328": 435, "332956": 543, "332e": [463, 469], "332f": [30, 31, 32, 33], "333": [138, 301], "3330487": 97, "3331": 508, "3331761": 97, "3333": 435, "33333333": 383, "3333333333333344": 473, "3335": 435, "33368e": 454, "3337": 435, "3338": 435, "334": [127, 453, 498, 509], "3342": 435, "3343": 435, "3346": 435, "3347": 435, "33484": 454, "3349": 435, "3349654391": 486, "334e": 484, "335": 440, "3353": 435, "3357": 435, "3358": 435, "335e": 457, "336": [473, 484], "3363": 435, "3364130e": 488, "336444e": 484, "336606": 454, "3368855e": 488, "3369": 435, "337": [440, 462], "3374": 435, "3377": 435, "33787": [96, 494], "33788": [96, 144, 494], "33789": [96, 494], "3379": 435, "33790": 494, "33791": 494, "33792": 494, "33793": 494, "33794": 494, "33795": 494, "33796": 494, "33797": 494, "33798": 494, "33799": 494, "338": [440, 484], "33800": 494, "33800122": 97, "33801": 494, "3380311e": 488, "3381": 435, "339": [440, 459, 473], "3390": 435, "3392": 435, "3393": 435, "3395": 435, "3397": 435, "339835555384604": 494, "3398360": 488, "33983991887701287": 96, "3399": 435, "33e": [465, 479], "34": [52, 53, 67, 423, 454, 469, 477, 478, 481, 485, 490, 492, 508], "34005": 454, "3402": 435, "3403": 435, "340391": 508, "3404": 435, "34047": 454, "3406": 435, "3409": [94, 435], "341": 454, "3413": 435, "3416": 435, "3418": 435, "342": 440, "3420": 435, "3423": 435, "3426": 435, "3428": 435, "3434": 435, "3438": 435, "3439": 435, "343e": 457, "344": 484, "344238": 508, "3443842": 497, "3445": 435, "3446": 435, "3447": 435, "3449": 435, "344e": 67, "345": [299, 453, 454, 492, 568], "3453": 435, "3454": 435, "345692": 508, "3458": 435, "346": 492, "34613054105945": 470, "346488e": 484, "3466": 435, "3468": 435, "347": [440, 456, 478], "3471": 435, "3474": 435, "347513": 566, "348": [36, 37, 440, 459], "3480": 435, "3481e": 467, "3488": 435, "348e": [67, 484], "3491": [435, 463], "3493": 143, "34932": 144, "349530550405035": 487, "349530725254468": 487, "34953073943366": 487, "34953075819191": 487, "34953077463306": 487, "34953079334042": 487, "349530807529028": 487, "349535814693404": 487, "349536723056637": 487, "349537158300407": 487, "349537804239922": 487, "34953807814367": 487, "34953910575007": 487, "34953932636892": 487, "349542158419318": 487, "349559366703698": 487, "349655": 486, "34971209244579": 487, "349724940685938": 487, "3499075e": 488, "349e": 463, "34e": [484, 492], "35": [67, 400, 407, 420, 453, 459, 477, 478, 480, 481, 484, 487, 495, 497, 506], "350": [473, 479, 486], "350105": 469, "3502": 484, "35030398537787": 487, "3503706026275275": 494, "3504": 508, "35052105086856": 487, "350556388466543": 487, "350d": 473, "351": [440, 484, 508], "3514e": 507, "3515": 435, "352": [440, 484], "3521": 456, "3523": 435, "3529": 435, "3529411764705888": 473, "353": [24, 440, 508], "3535": 437, "353592500058824e": 506, "3536": 454, "353e": 469, "354": 473, "3544": 435, "35569283": 488, "355804": 508, "3559": 435, "356": 508, "3561": 435, "3568": 435, "357": [478, 484, 508], "35722435185": 484, "3576e": 456, "358": [469, 484, 508], "3583": 469, "3584": 435, "359": [440, 469, 484, 508], "3590188e": 488, "3592": 435, "359213": 572, "3599": 471, "359e": 508, "36": [67, 86, 150, 328, 456, 469, 471, 484, 485, 488, 508], "360": [397, 490, 510], "3600": [462, 471, 472, 490], "36014": 467, "36073833513766157": 494, "361": [67, 440], "3619e": 507, "36228879": 508, "36273": 508, "363472509034498": 494, "3639946": 479, "364": 440, "3659253e": 488, "366": [453, 480, 486, 507], "366486": 486, "36669663417038234": 494, "3669": 437, "367": [440, 473, 492], "3674884": 484, "368": 120, "36834038301420274": 494, "368346217294295": 96, "3684": 437, "3689322e": 488, "369": 440, "3690": 508, "3699": 437, "36e": [483, 484], "37": [454, 455, 460, 462, 465, 486, 487, 498, 584], "370": [473, 484, 492], "37058": 144, "371": 440, "3710784e": 488, "3712": 437, "3713": 437, "3715810e": 488, "3718745": 97, "372": [35, 127, 508], "3720": 437, "3722": 437, "3725490196078436": 473, "3728": 437, "373": 469, "3733": 437, "373892759762174e": 481, "3739292e": 488, "374": 473, "3740": 437, "37455141": 508, "3748": 437, "375": [440, 490], "3750": 469, "37506": 508, "37517": 463, "3752": 437, "3759377929871826": 494, "376": 67, "3760": 437, "3761": 437, "3765": 454, "3777": 437, "37773": 463, "3779": 508, "378": 453, "3783": 437, "3784": 143, "379": [440, 453, 459, 496], "3792": 492, "3796": 437, "3797": 437, "38": [22, 67, 454, 456, 466, 484, 490, 492, 508, 567], "3802": 437, "3804": 437, "3806": 437, "381": 492, "3810": 437, "3812": [484, 508], "3812120e": 488, "3812160e": 488, "38143003": 97, "3817": 437, "38175264e": 486, "3829": 508, "382e": 459, "383": [67, 440, 484, 490], "3833": 437, "3837": 437, "383e": 67, "384": 486, "3841385": 486, "3842": 437, "3846": 437, "3848912826152664e": 508, "3856": 437, "385e": 144, "3860": 437, "3862": 446, "387": [440, 508], "3872": 484, "3873": 437, "3874": 437, "3876": 437, "387834": 508, "388": 546, "388405": 508, "3885947175689592": 494, "3886270e": 488, "3887": 437, "389": 388, "3892": 437, "3895": 437, "3898": 437, "389e": 508, "39": [17, 18, 21, 22, 24, 25, 27, 59, 144, 453, 483, 484, 490, 498, 546, 567], "390": 435, "3904": 437, "39042": 86, "3905": 437, "3906": 437, "391": 484, "3915": 437, "3918": 437, "392": [440, 460], "39200283e": 481, "392156862745098": 473, "39224": 463, "3925": 446, "393": [209, 210], "3933": 437, "3935": 456, "3936": 437, "3937950958967": 478, "394": 440, "3941": 437, "3945": [456, 484], "3947637541758": 478, "394765638937866": 506, "3948": 438, "395": [440, 453, 568], "3950": [408, 446], "395004": 508, "3956": 446, "3959": 438, "396": 440, "3962942e": 488, "396337": 567, "3966": 438, "397": 459, "3970": 409, "397035933646679e": 481, "39728": 508, "3975": 438, "3979": [438, 582], "397918129147546": [420, 582], "39791813": [420, 582], "398": [440, 465, 467], "3981": 508, "39810717055": 486, "3981075200000000": 508, "3983": 438, "398304": 551, "3986": 438, "3987": 438, "3988": 438, "398e": 484, "3990": 438, "39e": 484, "3d": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 46, 47, 150, 156, 163, 164, 166, 175, 286, 288, 389, 392, 393, 394, 398, 399, 402, 403, 404, 416, 424, 425, 426, 428, 429, 430, 431, 442, 443, 444, 451, 453, 454, 455, 457, 459, 460, 463, 464, 465, 469, 470, 471, 472, 473, 474, 477, 478, 481, 485, 487, 488, 489, 490, 491, 492, 493, 494, 497, 498, 499, 506, 507, 518, 520, 521, 522, 529, 534, 579, 581], "3d33m15": 67, "3dataset": 468, "3e": [20, 127, 133, 469, 472, 476, 479, 481, 484, 492], "3e4": 498, "3e5": 498, "3e6": 567, "3e7": 567, "3f": [127, 470, 583, 584], "3fgl": [61, 67, 74, 230, 270, 406, 436, 439, 441, 442, 443, 453, 457, 484, 493, 508, 517, 536, 568], "3fgl_name": 71, "3fhl": [62, 75, 86, 129, 131, 135, 289, 403, 442, 443, 457, 463, 471, 473, 484, 490, 491, 492, 493, 498, 508, 517, 519], "3fhl_data_fermi": 468, "3fhl_dataset": [289, 468, 491], "3fhl_model": [289, 468, 492], "3g": [483, 484], "3hwc": [63, 76, 435, 446, 484, 517], "3ml": [401, 498], "3pc": [64, 69, 77, 451, 484], "3pc_catalog": 64, "3rd": 64, "3rd_psr_catalog": 64, "4": [19, 20, 22, 26, 28, 29, 30, 31, 32, 33, 35, 36, 37, 38, 39, 40, 52, 54, 61, 67, 83, 87, 91, 102, 103, 106, 110, 111, 116, 119, 130, 135, 144, 147, 152, 155, 163, 175, 178, 194, 195, 196, 197, 198, 199, 204, 207, 208, 220, 221, 224, 228, 230, 231, 232, 237, 241, 243, 244, 247, 251, 253, 255, 256, 257, 262, 267, 269, 270, 271, 272, 275, 279, 282, 289, 290, 328, 370, 383, 384, 386, 387, 395, 397, 400, 403, 407, 408, 420, 423, 432, 434, 435, 436, 439, 441, 442, 445, 451, 454, 455, 456, 457, 459, 460, 461, 462, 463, 464, 465, 467, 468, 469, 470, 471, 472, 473, 475, 476, 477, 478, 479, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 495, 497, 498, 499, 500, 501, 506, 507, 508, 510, 515, 516, 517, 531, 534, 535, 539, 540, 543, 548, 553, 566, 567, 575, 581, 582, 583, 584, 585], "40": [59, 110, 111, 390, 436, 456, 457, 459, 460, 467, 469, 477, 478, 481, 490, 493, 497, 508, 531, 554, 557, 562, 567, 583], "400": [135, 463, 464, 469, 473, 484, 490, 508, 576], "4000": 446, "40000": [175, 507], "400056": 454, "40050506591797": 484, "40051035": 484, "40071076": 97, "400x200": 473, "401": 460, "40112": 508, "4013": 446, "4014": 446, "4015": 446, "4017": 446, "4018": 446, "401e": 463, "402": 155, "4022": 446, "40235": 467, "4024": 446, "4025": 446, "4026": 446, "402712": 484, "403": [440, 469, 492], "4035": 508, "4037": 446, "404": 306, "4043": 446, "4044": 446, "40481": 467, "405": 391, "4051": 446, "40525": 467, "4054": 446, "4058": 446, "406": 508, "40611": 508, "406400": 465, "4067": 446, "40671": 465, "40672": 465, "407": 484, "4071": 446, "4073": 446, "4073799600000000": 508, "4075": 446, "4076": 446, "4079": 446, "408": [459, 490], "4080": 446, "4080942e": 488, "40822469e": 493, "4083": 446, "4084": 446, "4088": 446, "4089": 446, "40919": 463, "4093": 446, "409416": 508, "4095": 446, "4098": 446, "40a": 59, "40deg": 497, "41": [67, 86, 94, 397, 484, 485, 490, 498, 508], "410": 473, "41009347393684": 485, "4103": 446, "4105": 446, "4106": 446, "4107": 446, "4108": 446, "411": 508, "4110e": 484, "4112": [127, 446], "4113": 446, "4115": 446, "41176470588239": 473, "4119": 446, "411e": 457, "4120719e": 488, "412165": 469, "412779907405": 484, "413": 469, "414": 440, "4140541880588": 470, "41415047": 97, "4142135623730951": 120, "41449": 463, "414e": 463, "415": [440, 453, 485, 496, 558], "4151e": 467, "4155": [484, 508], "41584196": 482, "416": [67, 467, 484, 489], "4161e": 467, "417": 484, "418": [453, 547], "418007850646973": 420, "41803": 465, "41866": 498, "419": 492, "4191": 449, "41924": 143, "4198250e": 488, "41995": 463, "419e": 484, "41e19": [19, 20], "42": [25, 27, 94, 155, 350, 397, 454, 456, 459, 460, 461, 462, 463, 464, 465, 467, 468, 469, 470, 471, 472, 473, 476, 477, 478, 479, 483, 484, 485, 487, 488, 489, 490, 491, 492, 493, 494, 495, 497, 498, 499, 500, 506, 507, 508, 535, 538], "42050348": 485, "4208": 449, "4209": [449, 463], "421": [440, 473, 508, 581], "4210": 449, "4212": 449, "4212028e": 488, "4213": 449, "4215": 449, "4216": 449, "4217": 450, "4219": 449, "422": [39, 40], "4220": 467, "4221": 447, "4225498e": 488, "4225631e": 488, "42267": 469, "4226731": 469, "423": 459, "4231": [447, 449], "42361": 463, "42399798": 469, "423e": 127, "42400": 469, "4242": 449, "4243": 449, "4245": 449, "4246032748928": 478, "42463": 498, "424650": 485, "42474": 508, "425": 508, "4252": 449, "425355614879": 478, "426": 484, "4264": 449, "4268": 447, "427": 460, "4275": [447, 449], "4277": 449, "428": [453, 458], "4280": 449, "4281": 484, "4282": 449, "4288": 449, "429": 459, "4294": 449, "42e": [487, 492], "43": [282, 350, 397, 460, 469, 478, 485, 490, 508, 535], "430": 484, "43000": [52, 53], "4301": [447, 449], "4303606e": 488, "4305": 449, "431": [139, 391, 473, 485], "431023787974766e": 506, "43113": 454, "43137254901962": 473, "4313847458879893": 494, "4319": 508, "43197": 463, "4324": [447, 449], "4326": 449, "432878": 484, "432e": 484, "433": 463, "4336": [447, 449], "43366": 576, "4338e": 455, "434": [453, 458, 484], "43416595": 479, "4344": 447, "4346": 449, "435": 440, "4350": 449, "4351637481047363": 494, "4352": 449, "4359": [447, 449], "435e": 459, "435l": 484, "436": 440, "4360750e": 488, "4369": 449, "437": [484, 492], "4370": 449, "4373240195300975": 494, "438": 492, "4380": [448, 449], "4381": [411, 450], "4382": 448, "439": 459, "4393": [448, 449], "4394": 448, "4395": 449, "4397": [448, 449], "439e": 484, "43e": 492, "44": [21, 50, 86, 350, 455, 462, 477, 479, 490, 506], "4402": 449, "44055555555555603": 94, "4406": 449, "4408": 450, "4409": 449, "4412": [448, 449], "4417": 449, "4418": 449, "4420073e": 488, "4420222e": 488, "4428": 449, "4428634e": 488, "443": 459, "4430": 449, "44319": 485, "4432": 450, "4433": 451, "4435": [448, 449], "4444": 449, "444e": 468, "445": [458, 463], "4450": 508, "44528685": 508, "4453": [448, 449], "44573": 94, "4458": 449, "4459": 449, "446": [492, 584], "4466": [449, 467], "4466832000000000": 508, "4466835921": 486, "447": 440, "44742": 508, "44749e": 454, "44755": 465, "447552": 454, "447e": [469, 484], "447l": 17, "448": [453, 458, 473], "4480056e": 488, "44802852": 508, "4481": 484, "4485": 450, "4486": [448, 449], "448e": 144, "4491": [410, 450], "4495": 449, "4497": 485, "4498": 143, "44e": 420, "45": [51, 54, 105, 126, 462, 468, 479, 481, 485, 490, 491, 493, 506, 510, 535, 538, 539, 540, 541, 542, 543, 544, 545, 546, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 569, 570, 571, 572, 573, 574, 575, 576, 577], "450": 492, "4500": [448, 449], "4501": 450, "4504": 449, "4506": 449, "4508": 449, "4509803921569": 473, "4510": [449, 467, 508], "4515": 483, "4517490659800822": 476, "4520": 448, "4521": 449, "4524": 448, "453": [455, 492], "454": 459, "4540": 450, "4545": 449, "4546": 450, "455": [440, 457, 466], "45515263080596924": 456, "45517415e": 486, "455870": 469, "455e": 67, "456": 440, "4561": 450, "45646095": 479, "4567": 450, "457": [283, 440, 492], "457251": 508, "4574": [448, 450], "4575": 94, "4578": 448, "4579e": 454, "458": [473, 484], "4584": 450, "45856": 508, "4586649826004114": 308, "459": [440, 485, 492], "4593": 448, "45935": 508, "4595": 450, "4599": 450, "45\u00ba": 499, "46": [53, 67, 110, 111, 397, 460, 484, 490], "460249999": 86, "4608": 450, "461": [440, 481], "4615": 450, "46186956763267517": 456, "4619": 448, "462": [440, 459], "4620": [411, 450], "4620e": 484, "46225": 463, "4628": 450, "463": 508, "4631": 448, "463481": 465, "4635": 450, "4638": 450, "4638e": 464, "464": 475, "4642048e": 488, "4647544e": 488, "465": [459, 484, 492], "4653": 448, "4657": [448, 450], "465784": 508, "4660": 450, "4664": 450, "4668": 450, "4669": 450, "4671": 450, "46711": 463, "4675e": 477, "4677": [448, 450], "468": [479, 484], "4681": 448, "4684": 456, "468805426856864e": 52, "468e": 67, "469": [453, 458], "4697": 450, "46e": [83, 464, 469], "47": [67, 465, 478, 481, 484, 490, 508], "470": [453, 458, 459], "4703": 450, "470588235294144": 473, "4711": 508, "4712": 463, "4714": 450, "4721": 448, "4726": 450, "4728": 448, "4729": 450, "473": [440, 459], "4738": 450, "474": 440, "4740": 450, "4741": 450, "474e": 484, "475": [440, 492], "4750": 450, "4753": [448, 450], "475468": 454, "4755": 448, "4759": 450, "477": [453, 503], "4770": 450, "4772": 448, "47797": 463, "477e": 484, "478": 440, "47802": 494, "47803": 494, "47804": 494, "47827": 494, "47828": 494, "47829": [82, 494, 500], "4783": 450, "4785": 450, "47e": 484, "48": [33, 175, 423, 464, 467, 468, 478, 490, 492, 498], "480": [456, 484, 492], "4802": 450, "4805": 450, "480554966154": 467, "48068": 463, "4808": 450, "480e": 484, "481": [388, 440, 453, 568], "4810": 450, "4814": [450, 508], "4817": 450, "48180882997916e": 506, "4819444e": 488, "482": [453, 454, 487, 496], "48215685": 97, "4822": 450, "48248": 484, "4825": [484, 508], "4828": 450, "4829": 450, "483193": 538, "4834": 450, "4834488e": 488, "4835": 450, "4837": 450, "484": 440, "48442": 277, "4845": 450, "4847": 450, "4848653": 484, "4849": [450, 484, 508], "484e": 144, "485": 440, "4850": 450, "4851": 450, "4854": 450, "485p": [36, 37], "487": [440, 506], "4875723e": 488, "4876": 448, "4879": 450, "4881": [256, 257], "4886": 450, "48871": 454, "488z": 27, "489e": 484, "48e": [484, 492, 507], "49": [53, 463, 467, 478, 484, 492, 498, 506, 534], "490": 25, "4902": 450, "4904": 450, "4904078e": 488, "49078e": 454, "4913": 448, "49152": 498, "4917": 450, "493": 25, "493043594026": 467, "4933657e": 488, "4936": [448, 450], "4937": [448, 450], "4940": 450, "49417615": 86, "4942": 450, "494e": 459, "4953333321287": 478, "4958277": 97, "496021": 497, "4963": 508, "4966": 508, "4968236e": 488, "4970": 450, "4971": 450, "49716789e": 486, "4971704e": 488, "4973": 450, "4975": 450, "4978": 450, "498": 508, "4983": 451, "498784": 484, "4989": 450, "498e": [484, 508], "499": [67, 484], "49919925926": [241, 577], "4992": 450, "4994": 450, "4996": 451, "49972277488662115": 494, "4999833830074": 469, "4d": 402, "4e": [475, 479, 484, 492, 567], "4f": [582, 583, 584], "4fgl": [65, 78, 271, 272, 406, 427, 429, 435, 437, 450, 453, 455, 468, 484, 491, 493, 517, 536, 568], "4th": [395, 422], "4yr_catalog": 61, "5": [16, 17, 18, 19, 20, 21, 22, 24, 25, 26, 27, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 50, 52, 53, 67, 83, 87, 91, 103, 104, 106, 109, 110, 111, 120, 124, 127, 128, 130, 132, 134, 143, 144, 152, 153, 154, 155, 156, 157, 162, 163, 164, 165, 166, 175, 178, 193, 194, 195, 196, 198, 199, 200, 203, 204, 205, 206, 207, 208, 220, 221, 224, 227, 228, 230, 231, 232, 236, 237, 239, 241, 243, 244, 247, 251, 253, 255, 256, 257, 262, 267, 269, 270, 271, 272, 275, 277, 279, 283, 306, 310, 342, 373, 374, 378, 380, 383, 384, 387, 388, 390, 394, 395, 397, 398, 399, 400, 402, 406, 407, 408, 412, 415, 420, 423, 425, 427, 428, 435, 437, 439, 440, 442, 443, 444, 448, 454, 455, 456, 457, 459, 460, 461, 462, 463, 464, 465, 467, 468, 469, 470, 471, 472, 473, 475, 476, 477, 478, 479, 481, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 497, 498, 499, 500, 506, 507, 508, 510, 515, 516, 519, 526, 529, 531, 532, 533, 534, 535, 539, 540, 541, 542, 544, 548, 549, 554, 556, 557, 558, 562, 563, 567, 570, 571, 572, 573, 575, 581, 583, 584], "50": [87, 91, 94, 112, 117, 350, 390, 410, 454, 460, 461, 465, 467, 475, 477, 478, 479, 484, 485, 488, 490, 492, 493, 494, 497, 498, 500, 506, 507, 508, 531, 534, 542, 584], "500": [195, 196, 198, 204, 207, 208, 463, 469, 471, 472, 490, 496, 497, 498, 508, 534, 539], "5000": [19, 20, 87, 91, 510, 534], "5000056568267741": 469, "5000e": 462, "50022222": 94, "500249": 484, "5004": 469, "5015": 450, "501643": 563, "502": 440, "5029747": 461, "503": 440, "5030": 508, "504": 28, "5040": 450, "5044": 450, "5049": 508, "505": [67, 484, 485], "505523195905": 467, "5057": 451, "5058": 451, "506": 440, "5066": 484, "507": 440, "5074834": 97, "507615": 467, "5078068": 97, "50807568877": 484, "509587": 486, "509632": 486, "509e": 484, "50e": [462, 492], "51": [52, 53, 67, 144, 465, 467, 473, 506], "510": [440, 453, 480, 486], "5106": 508, "51095676": 479, "511": [67, 440, 453, 496], "5115": 451, "51179": [384, 586], "5118": 451, "512": 459, "5125": 451, "5126": 67, "5129": 451, "513": [420, 490], "51312": 469, "5135": 451, "5144": [94, 454], "5145": 451, "514854": 497, "514935412015": 574, "514938935245": 573, "514953865386": 575, "51544": [462, 471, 472, 475], "5156": 451, "515691": 467, "5160": 451, "5161": 451, "5162628e": 488, "5163273": 497, "5169": 451, "5176": 451, "518": [440, 492], "5180": 451, "5184": 451, "5186": 451, "5188": 451, "5188338e": 488, "51910": 94, "5192420e": 488, "5194769e": 488, "51948705e": 493, "51958055e": 486, "52": [53, 127, 175, 454, 456, 463, 465, 467, 478, 484, 493, 497, 500, 508], "5200": 451, "5205": [451, 498], "5206": 451, "5207": 451, "52074074074": 83, "521": 441, "5222": 451, "523": [441, 490], "5230376e": 488, "52318414": 97, "523681640625": 459, "5237647004325865": 494, "52389101852": 484, "523a": [247, 283], "523b": 22, "523e": 460, "524": [441, 484, 492], "5248": 508, "524807800000000": 508, "5254": 451, "5255": 451, "5258": 451, "52587": 463, "526": 441, "52607": 508, "5269": 451, "527": [441, 498], "5270": 451, "5271": 451, "5275": 451, "5279": 451, "527e": 460, "528": [459, 492], "5280": 451, "52826166": 484, "5283": [484, 508], "52839183495354": 478, "5285": 451, "5289": 451, "529": 441, "5292": 485, "529411764705883": 473, "5297": 451, "5297030e": 488, "5298": 451, "52e": [479, 506], "53": [28, 469, 481, 495, 539, 548], "530": 441, "5300": 451, "53025": 94, "5303": 451, "5304": 451, "531": [441, 473], "5312": 451, "531363": 557, "5314": 451, "5316": 451, "5320": 451, "53213": 469, "5324402": 97, "5326744": 97, "5326841": 97, "5326859": 97, "533": 484, "53343": [420, 476], "53344": 476, "53345": 476, "53346": 476, "53347": 476, "53348": 476, "5342": 451, "5345275e": 488, "5346": 451, "53482e": 454, "535": [441, 484], "5350": 451, "535058216604496": 283, "5353": 451, "5356": 451, "53566": 454, "53616": 247, "5366": 451, "5370": 451, "5378": 451, "5380": 451, "5381": 451, "5382": 451, "53849342472254e": 481, "5385": 451, "5389": 451, "539": [283, 492, 546], "5390": 451, "5390438": 97, "5392e": 477, "539397": 484, "53945": 477, "53946": [481, 482], "539e": 484, "53e": [420, 462], "54": [67, 456, 459, 465, 484, 488], "5400": 485, "5405": 451, "5407": 451, "5407363826067": 519, "5407363826070": 519, "5408": 451, "5409": 451, "541": 441, "5411": 454, "5423": 451, "5427": 451, "5427520e": 488, "54282": 463, "5433": 451, "5437": 451, "5438": 451, "5438860e": 488, "544": [441, 484, 498], "5445": 451, "5448": 451, "5449": 451, "545": 441, "5453": 451, "54566271": 583, "545y": [39, 40], "546": 441, "5461745": 97, "5462": 451, "5466": 451, "54676837e": 487, "54682": [463, 484, 498, 508], "547": [441, 454, 484], "5472": 451, "54721e": 454, "5477": 484, "54772": 484, "54892": 463, "548e": 484, "549": 441, "549007644529844e": 506, "549019607843138": 473, "5499840": 497, "54e": 492, "55": [39, 42, 87, 91, 213, 460, 478, 479, 487, 491, 495], "550": 459, "55027": 144, "55045": 484, "551": 484, "55197": [384, 586], "552": 484, "5525": 451, "55275": 498, "553": [455, 484], "5531e": 455, "553337": 508, "5538": 508, "5538942e": 488, "553e": 463, "554": 67, "55410": 484, "5545": 451, "5545130e": 488, "55461982e": 486, "554e": 457, "555": [453, 568], "556": [441, 459, 584], "5561760e": 488, "557": [441, 492], "55775": 484, "558": [441, 480], "558338072878877": 506, "559": 441, "5594": 83, "56": [454, 460, 479, 490, 499], "560": [37, 484], "5606985": 479, "5607778e": 488, "56093766": 97, "56141": 484, "562": 484, "5622482": 97, "56234132519": 486, "562623": 475, "56353481": 583, "563e": [459, 469], "564": [298, 441, 459, 492], "564139576925786": 470, "5644": 485, "565": 441, "56506": 484, "565095": 454, "566e": 459, "56711": 508, "5686274509803928": 473, "56871": 484, "568e": 478, "569": 441, "56922612": 583, "5692809e": 488, "56973": 508, "57": [33, 463, 469, 479, 490], "57011": 469, "571": 484, "57185": 519, "5719922e": 488, "571e": 484, "572": 460, "57233": 508, "57236": [463, 484, 498, 508], "572e": [457, 463], "573": [67, 459, 508], "57300957": 178, "5754970e": 488, "576": 492, "5760": 508, "57602": 484, "5763635e": 488, "5768262e": 488, "576e": 463, "577398": 498, "5779092e": 488, "578": [484, 486, 583], "5782814": 486, "579": [453, 473, 474, 484], "579178801616083e": 481, "57944657408": 484, "57967": 484, "57e": 484, "58": [420, 423, 460, 462, 467, 470, 484, 489, 490, 492, 500, 506], "580": 584, "581": 460, "5819e": 461, "582": 441, "58332": 484, "5833e": 484, "5835918e": 488, "583e": 463, "5842497e": 488, "585": 484, "58540702": 97, "5867488e": 488, "58693695": 479, "58698": 484, "5882352941176467": 473, "588e": 484, "589": [453, 466], "58909": 478, "58926": 463, "5892966e": 488, "5895": 456, "58999": 241, "58e": [475, 484, 486], "59": [83, 462, 465, 475, 476, 484, 489, 500, 508], "590": 459, "59000": [241, 577], "59001": 241, "59063": 484, "5908": 484, "590835686434463": 494, "591": [441, 484], "59100": [576, 577], "59123": [570, 571, 572], "5915030546513255": 482, "5915e": 484, "59200": 576, "59233": 493, "59235": [83, 497], "59240": 493, "5924e": 507, "59250": 493, "59254e": 454, "59265": 454, "593": 441, "59300": 479, "59344": 508, "59348": 508, "59365": 577, "594": 441, "59400008": 97, "59428": 484, "59451": 463, "59497703e": 481, "5951631e": 488, "5956621435": 486, "596": 492, "596252": 539, "59696": 463, "596e": 484, "597194451442478e": 481, "5976e": 495, "597774": 488, "59793": 484, "598": 508, "5985": 508, "5987726": 97, "598836": 540, "599": [441, 473, 477, 492], "599625": 497, "59976": 484, "599999904632568": 484, "59d09m41": 484, "59e": [484, 492, 498], "5a": 58, "5e": [462, 472, 484, 486, 492], "6": [28, 29, 30, 31, 32, 35, 36, 37, 38, 39, 40, 50, 52, 53, 67, 86, 87, 91, 100, 103, 110, 112, 117, 127, 132, 144, 149, 150, 151, 152, 153, 155, 156, 157, 159, 162, 164, 166, 167, 193, 194, 195, 196, 198, 199, 200, 203, 204, 206, 207, 208, 241, 283, 371, 374, 387, 390, 395, 399, 400, 403, 408, 417, 420, 433, 435, 437, 443, 444, 448, 450, 454, 455, 456, 457, 459, 460, 461, 462, 463, 464, 465, 467, 468, 469, 470, 471, 472, 473, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 495, 497, 498, 499, 500, 506, 507, 508, 514, 531, 535, 541, 545, 565, 581, 583], "60": [67, 91, 157, 448, 460, 463, 484, 487, 498], "600": [460, 463, 468], "6000": 534, "6000000000000001": 493, "600661": 488, "60075": 488, "60090769e": 493, "600e": 459, "6018166e": 488, "601e": 484, "6024e": 507, "603": [492, 508], "6033": 454, "60350": 457, "603625": 488, "604": 459, "6046689e": 488, "605218": 577, "605493": 105, "60603928": 493, "606549": 548, "60712": [573, 574, 575], "607843137254942": 473, "60e": 484, "61": [67, 144, 430, 467, 484, 492, 498, 584], "610": 492, "61051": 498, "6105760e": 488, "611": [463, 486, 583], "611168": 486, "6116853": 484, "611e": 484, "6125": 500, "612e": 463, "613": [453, 501], "613114": 482, "61422433": 97, "61453755944866": 470, "61489": 488, "61526": 144, "615316": 508, "617835": 488, "6181862e": 488, "618270": 574, "61862": 241, "619": 484, "6194453e": 488, "61975454954816": 506, "62": [484, 499, 507], "620": 484, "620398": 488, "6205": 508, "62111": 463, "621499": 508, "6218742e": 488, "6219": 457, "622": [441, 457], "62258": 484, "6227766": 490, "62277660168379": 490, "6228e": 457, "623": [484, 508], "62320": 457, "623397": 488, "62341325": 490, "623413251903492": 490, "624": 492, "624122": 469, "624d": 24, "624e": 459, "62503": 484, "62514628": 488, "6253652e": 488, "6259962e": 488, "6266": 508, "6267247": 508, "627450980392158": 473, "628": 441, "62842028": 485, "63": [193, 194, 203, 206, 454, 459, 461, 485, 489, 499, 500, 506, 507, 529, 531, 532, 535], "630": [82, 492, 500, 506], "6309576500000000": 508, "630e": 67, "631": [441, 467], "631155605": 471, "631159205": 471, "631170005": 471, "631173605": 471, "631177205": 471, "631180805": 471, "6318811e": 488, "632627": 508, "633": [85, 103, 106, 110, 111, 175, 453, 460, 468, 489, 496, 506, 507, 531], "63307": 83, "63308": [476, 507], "633083": 491, "63310241699219": 468, "63326": 463, "6333": 94, "63342": 508, "633600": 492, "635": 441, "63500212963": 484, "6354": 508, "63541": 497, "63668832485633": 478, "638": 492, "639": 484, "6390": 454, "63902": 454, "6395e": 464, "6397": 508, "63e": 485, "64": [39, 67, 83, 127, 194, 423, 475, 484, 498], "640": [441, 453, 501], "6402822e": 488, "641": [441, 508], "64103": 497, "6413": 469, "6417": 469, "6419578e": 488, "642": 508, "6423836025257211": 470, "6429005895278312": 494, "642e": 459, "643": [30, 31, 32, 33], "64323": 463, "64438": 498, "6444": 454, "644527": 486, "645": [485, 486], "6451": 469, "6456e": 478, "6464": 454, "646e": [138, 301], "647": 441, "647058823529452": 473, "6471115e": 488, "64794383e": 493, "648": 441, "648e": 67, "649": 441, "64987376": 97, "64e": 460, "65": [63, 144, 407, 423, 425, 485], "650": 485, "6509": 454, "651": 484, "651058": 508, "6514": 508, "651587": 126, "652": 468, "6522806": 508, "652368617859867": 468, "653": [441, 456], "65357608e": 488, "654": [454, 484], "65412": 469, "654e": 484, "655": 463, "655283": 463, "6554088e": 488, "6556248e": 488, "6557": 463, "655e": [67, 460], "656": 583, "65603222222": 498, "65603794185": 484, "6561e": 467, "6577182894355391": 494, "658": 492, "658909145253801e": 508, "6589622747787678": 494, "659": [459, 463], "659e": 478, "65e": 120, "66": [52, 53, 423, 426, 462, 468, 485, 487, 492, 495, 498, 506], "660": 441, "6604475": 469, "660e": 508, "660fals": 457, "661": 441, "66104": 454, "662": 484, "663": [459, 583], "663742400000000": 508, "664502403": 497, "664502405": 497, "664502408": 497, "664502409": 497, "664502414": 497, "664e": 463, "6652219e": 488, "6656409356335768": 470, "66650390625": 456, "6666666666583865": 477, "6666666666666666": 572, "666666666666696": 473, "667701": 570, "6678": 463, "66813": 469, "66984341": 488, "669e": [144, 463], "66e": [467, 485], "67": [17, 423, 484, 508], "670": [453, 480, 484], "6705024680435898": 308, "671": [461, 471, 500, 570], "671616": 454, "6728": [484, 508], "67304": 97, "67375": 454, "67457342435522e": 508, "675": 459, "6768369882260035": 460, "6768e": 460, "677": 441, "6772235e": 488, "67759236e": 488, "678": [86, 470], "67824": 485, "6784": 583, "67861": 488, "678683717532289e": 460, "679": 441, "679478008080033e": 460, "6795e": 460, "67992517": 97, "67e21": 483, "68": [67, 83, 96, 156, 162, 164, 165, 166, 168, 236, 423, 454, 484, 487, 488, 490, 497, 508, 584], "680": 492, "6803": 508, "6812310184489": 478, "68125": 488, "6823": 454, "683535101178161e": 481, "684": 175, "68542112": 97, "68588096384626e": 481, "6858e": 478, "68628538586": 485, "687": 492, "687214": 489, "687500": 489, "687685": 484, "68e": [455, 467, 484], "69": [103, 450, 463, 475, 484, 485], "690": 67, "690557685186": 484, "6909290e": 488, "691": 484, "691299354164691": 470, "69138": 463, "691680": [103, 485, 492], "692": 463, "692e": 460, "69314486": 491, "693940": 467, "6953125": 485, "69543812": 97, "6959369197218669": 494, "695e": 463, "697317": 498, "69735": 488, "697e": 457, "697fals": 457, "6985": 456, "698941": 558, "6992": 469, "6_29my1u": 481, "6e": [457, 484, 492], "6h": 499, "6ptrx2oe": 489, "6th": 422, "7": [30, 31, 38, 52, 53, 67, 87, 91, 127, 133, 143, 175, 178, 205, 211, 213, 239, 373, 374, 383, 387, 388, 395, 399, 400, 403, 420, 424, 425, 427, 428, 434, 435, 440, 441, 442, 444, 445, 454, 459, 460, 462, 463, 468, 470, 471, 476, 477, 478, 479, 481, 482, 484, 486, 487, 488, 489, 490, 492, 493, 494, 495, 497, 498, 506, 508, 535, 539, 540, 576, 583, 584], "70": [67, 91, 103, 460, 469, 484, 485, 583], "700": [391, 472, 486, 491], "70000000e": 493, "7000e": 493, "70016": 469, "7007": 469, "701": 531, "70181": 144, "702": [476, 484, 498, 507], "702e": 463, "703": 420, "70358483e": 493, "704": 492, "70428": 508, "70437": 488, "705": 508, "70546": 463, "70634e": 454, "706e": [468, 484], "7073": 478, "707945784": 486, "707t": 292, "708": [459, 460], "709": 441, "7097381e": 488, "70e": 493, "71": [33, 460, 462, 492, 584], "710": 441, "71067811865478": 484, "7115414505410296e": 481, "7116851": 493, "711e": 463, "712": 470, "71220672": 485, "7123895e": 488, "712e": [476, 507], "713": [441, 484], "7132e": 508, "71340589e": 486, "713833": 560, "714": [453, 463, 466, 484], "715": 508, "716": [96, 308, 309, 490], "716062": 497, "71693826": [477, 481, 494, 522], "717": 484, "71795506": 508, "7184": 508, "719": [441, 492], "7190994e": 488, "71944e": 454, "7195": 484, "719e": 484, "72": [427, 456, 478, 484, 489, 508], "720": [472, 484], "7200": 475, "722": 492, "72217": 508, "722557505166": 484, "723": 463, "723e": 484, "7240965e": 488, "72411791e": 486, "725": 484, "725490196078432": 473, "726e": 459, "727": 492, "72775": 508, "7284447e": 488, "729e": 463, "73": [454, 508], "730": 474, "7303": 508, "731": 441, "731589446928548e": 506, "732e": [67, 484], "733": [67, 441], "734": 508, "7350250533013533": 494, "7350380e": 488, "7351418e": 488, "735e": 484, "736": [459, 583, 584], "737": [453, 459, 509], "738": [441, 484], "7385727e": 488, "739": 441, "739560": 464, "7395744e": 488, "739770898783367e": 412, "739e": 67, "73e": [484, 506], "74": [454, 508], "740": 441, "742": [453, 470, 474, 492], "743e": [455, 484], "74427": 469, "74465974e": 488, "74479": 463, "745098039215687": 473, "74542e": 454, "746": 441, "747": [453, 568], "7471700e": 488, "7479085e": 488, "748": 484, "748259": 467, "749097": 562, "74989420933": 486, "75": [67, 376, 451, 455, 459, 508], "750": [453, 501, 584], "751643891117176": 506, "75267735": 508, "753": [441, 460], "7537086e": 488, "754": [441, 498], "75408483": 508, "7555": 489, "7559": 508, "756": 484, "7567": 454, "7580410e": 488, "759": 441, "7596682e": 488, "75e": [484, 507], "76": [470, 481, 490], "7613": 420, "761886": 541, "761c": 28, "762": 441, "762199399999986": 546, "763": 441, "7637308880733709": 494, "7638": 463, "763e": 463, "7640e": 461, "76419591747674": 478, "7647": 508, "764705882352942": 473, "76473": 463, "7652512e": 488, "766": [441, 463], "7660168382": 484, "766d": 497, "767": 441, "76739": 484, "768000": [103, 485], "768048": 97, "7681656e": 488, "76837444": 479, "7684028": 508, "7692170e": 488, "76e": 492, "770": 67, "771667": 500, "77174": 463, "7718272408581743": 308, "771e": 484, "772": [441, 454], "77206": 508, "77218": 463, "773": 484, "7733e": [455, 484], "77351": 463, "774": [441, 475], "7743835449219": 459, "774e": 484, "775": [67, 492], "7752246942468283": 469, "7755386e": 488, "775e": 478, "7760": 508, "7763307219821931": 308, "7765957e": 488, "77678": 454, "7769775": 497, "777": 441, "7771617763704126": 308, "77751797": 97, "777e": [67, 457], "777l": 35, "778": [441, 459, 484], "77827941": 490, "778279410038923": 490, "779": [460, 484], "7796942": 508, "779e": 459, "77e": [462, 484], "78": [490, 491, 499, 507], "780": [31, 127], "7800e": 459, "7804888e": 488, "78083": [143, 144], "780e": 127, "78181": 144, "78188": 463, "78188096": 97, "782": 498, "7827941": 490, "78279410038923": 490, "783": [441, 484, 508], "78332719": 469, "78333": 469, "783587001383003": 497, "783e": 469, "784": [442, 460], "7843137254901955": 473, "78499999999997": 542, "785": 542, "7853981633974483": 575, "7856601755257": 478, "786766": 549, "787": [67, 175], "787169465401243e": 476, "7875405607868806": 494, "7876233e": 488, "788": 484, "7887840e": 488, "788e": 484, "789": 441, "78910994": 97, "7894": 469, "78952750835169": 478, "78e": 492, "79": [456, 484], "790": 441, "791": 442, "7913e": 459, "7922": 454, "793": [442, 463], "794": 486, "7941697": 486, "79432823": 493, "7943282347": 486, "79469899": 469, "79470": 469, "794e": 463, "796": [442, 492], "797": [442, 453, 477, 480], "7972": 489, "798": 442, "798218": 454, "799": 459, "7990194e": 488, "7997221e": 488, "799999952316284": 484, "7c": 490, "7d": 484, "7e": [484, 492, 493], "7e955f": 423, "7ftqf5ee": 481, "7v7dlevf": 481, "7zf": 489, "8": [17, 18, 21, 22, 24, 25, 27, 38, 40, 50, 67, 87, 89, 91, 101, 103, 106, 110, 111, 112, 117, 130, 144, 149, 150, 199, 206, 239, 241, 310, 383, 387, 390, 391, 400, 424, 425, 428, 430, 431, 435, 436, 437, 440, 441, 442, 445, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 467, 468, 469, 470, 471, 472, 473, 474, 476, 477, 478, 479, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 495, 497, 498, 499, 500, 506, 507, 508, 515, 517, 526, 531, 535, 539, 548, 559, 567, 583], "80": [178, 461, 462, 463, 485, 490, 498, 531, 558, 567], "800932": 484, "801": [508, 531], "801668796295": 484, "802": [492, 508], "803": 459, "8031431e": 488, "8037638e": 488, "803921568627494": 473, "804": 492, "804492": 475, "80492": 144, "80571": 143, "806": 478, "8062607e": 488, "80683246": 488, "807": [463, 546], "8071": 463, "807201": 508, "8075": [484, 508], "8075185": 484, "8084e": 467, "808687936570502e": 487, "80871364": 97, "8090746": 497, "809505": 484, "80982039": 488, "80e": 455, "81": [431, 455, 476, 548], "810": [442, 484], "810000": 475, "8100e": 455, "810e": 484, "811": 442, "8115337251905373e": 487, "812": [442, 453, 489, 496], "812075194992371e": 487, "8122169596532167e": 487, "8122425483643125e": 487, "8122e": 487, "812358724314062e": 487, "8129257829574434e": 487, "812951371538087e": 487, "813": [442, 453, 474], "814": 442, "8150": 508, "8157971601581226e": 487, "816": 442, "8160964882165554": 308, "81699e": 454, "816e": 484, "818388e": 508, "81847286": 479, "818e": 457, "819": 484, "81e": 548, "82": [67, 423, 467, 484, 507, 535], "820": 442, "8205513": 497, "820562952023891": 308, "820734654694367e": 481, "8222980e": 488, "823": 459, "82352941176471": 473, "824": [139, 442, 492], "8241471833009617": 494, "824826": 573, "825": [442, 454, 470, 484], "8256": 508, "826": 442, "826414166666": 94, "827": 442, "8272": 510, "82739": 463, "827e": 144, "8290458e": 488, "8293": 508, "82946153": 508, "82e": 468, "83": [30, 67, 83, 85, 94, 103, 106, 110, 111, 175, 178, 193, 194, 203, 206, 459, 460, 461, 463, 468, 476, 485, 489, 490, 491, 499, 500, 506, 507, 526, 529, 531, 532, 535], "830": 442, "8300": 508, "831": 442, "832": 442, "83242471": 488, "833": [442, 460, 463], "833229": 565, "833333333336": 479, "834": 442, "8341884287660133": 494, "8349780e": 488, "835": 442, "8351255796215": 478, "835e": [460, 469], "835fals": 457, "836": [442, 479, 484], "836731": 484, "8369650e": 488, "837": [442, 492], "8377268e": 488, "838": 463, "8383396349722769": 308, "839": 478, "84": [24, 144, 423, 453, 459, 461, 469, 484, 492, 535], "840": [442, 463], "841": 484, "84196311": 97, "842": [442, 484], "84233": 463, "842x": [137, 146], "843": [59, 454, 479], "843137254902004": 473, "843863242310971e": 506, "843e": 67, "8441040e": 488, "844770648146": 94, "8449575657133206": 308, "845": 443, "84529": 484, "8455480e": 488, "845693": 454, "846": [463, 484, 583], "847": 442, "8475576e": 488, "8475650e": 488, "848829": 460, "84e": 467, "85": [87, 91, 449, 469, 539, 540], "851": [442, 547], "85157506": 508, "8515948e": 488, "85188496e": 488, "85202": 508, "85287": 498, "852e": 484, "854": 442, "854166666664": 479, "85416667": 477, "85469291": 97, "855": 442, "85527": 469, "85527359": 469, "8555500e": 488, "85624": 464, "85625": 464, "8568": 508, "856e": 484, "8570719e": 488, "85722435185": 484, "858": 442, "858048": 544, "858e": 484, "859": [442, 459], "85900": 469, "85900392": 469, "85925": 508, "8593054": 484, "859e": 463, "85e": 484, "86": [457, 459, 460, 463, 490, 508, 519], "860": [478, 484], "8600424555533": 478, "861": 508, "86111111": 477, "861150": 457, "8613613e": 488, "86178": 143, "8620": 475, "8623": [19, 20, 26, 220, 221, 224, 228, 230, 231, 232, 237, 243, 244, 247, 251, 253, 255, 256, 257, 262, 267, 269, 270, 271, 272, 275, 279], "862745098039234": 473, "864": [442, 508], "865": [442, 463], "86676": 498, "8669": 454, "8672": 469, "86793518066406": 456, "868": [442, 484], "86831929": 97, "8699": 454, "8699165e": 488, "87": [67, 469, 490], "870": [67, 442], "8704": 463, "871": [442, 453, 506, 509], "871730083414263e": 481, "872": [442, 463], "873": 460, "8733348": 497, "87358893e": 486, "8736082200157": 470, "873659477745188": 494, "874": [453, 456, 495, 496], "8744": 475, "875": 442, "876": 492, "87621184": 465, "8769240e": 488, "876e": 463, "87710186": 97, "877563": 484, "878": [484, 492], "87897": 469, "87897418": 469, "8799800e": 488, "87e": 21, "88": [423, 445, 461, 469, 470, 481, 484, 490, 508], "880e": 463, "881": [442, 454, 463], "8815212313941426": 494, "882": 67, "882352941176466": 473, "883": 442, "883112": 569, "8834862e": 488, "883e": 67, "884": 442, "88470839": 493, "885": 442, "886": 484, "8865": 508, "88781": 463, "888": 442, "8885138e": 488, "889": 484, "8893600e": 488, "88e": [457, 484], "89": [33, 490], "890": [453, 474], "8908866e": 488, "8909e": 478, "890e": 67, "892": 492, "89243456": 508, "8926": 508, "89287": 454, "893": 442, "894": 457, "8943121e": 488, "89492144e": 487, "895": 479, "8954039e": 488, "89595846": 493, "897": [453, 496], "89709472": 508, "898": 442, "8986348363207728": 494, "89873": 469, "8989213": 469, "898e": [463, 484], "899": 67, "8999": 469, "899a": 283, "89e": 485, "8e": [457, 467, 470, 472, 492, 498, 567], "9": [31, 33, 35, 67, 83, 87, 91, 143, 199, 211, 239, 241, 340, 347, 380, 387, 388, 392, 400, 420, 426, 428, 439, 442, 444, 447, 449, 454, 456, 457, 459, 460, 461, 462, 463, 464, 465, 467, 468, 469, 470, 471, 472, 473, 475, 476, 477, 478, 479, 481, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 495, 497, 498, 499, 500, 506, 507, 508, 534, 541, 545, 546, 547, 554, 570, 578, 583], "90": [57, 67, 406, 462, 465, 468, 469, 484, 490, 493, 510], "900": 484, "9002269877996247": 479, "900269": 488, "9023670e": 488, "90242058e": 485, "9032163": 86, "904": 508, "904399": 552, "905": 484, "9053655e": 488, "9053906e": 488, "906": [442, 484], "90605275e": 498, "90677811e": 486, "90685": 463, "907": 484, "9074812e": 488, "9077294": 497, "909994": 545, "90e": [103, 460, 467, 485], "91": [462, 490, 495, 535], "9109e": 461, "911": 442, "911552434768802e": 476, "912": 484, "912525e": 508, "912779907405": 484, "913196574074": 476, "913e": 463, "914": 67, "915": 484, "91507": [103, 485], "916": [453, 458], "91612243652344": 456, "9163195e": 488, "91719": 485, "9172693782652": 478, "918": 67, "918365": 484, "919": 442, "919e": 484, "91e": 492, "92": [144, 462, 463, 490, 497], "920": 459, "92052435e": 486, "9205875e": 488, "921": 460, "9215375e": 488, "92234009259": [420, 476], "923": [453, 496], "924": 460, "9240e": 493, "92490": 463, "925106": 469, "9269494e": 488, "9277492e": 488, "928": 484, "9280475e": 488, "929": [454, 460], "92960065298276": 506, "93": [67, 125, 127, 462, 463, 490, 497], "93026": 484, "9303": [484, 508], "931": 306, "93128e": 454, "932": 442, "93271046296": 476, "933": 442, "9332549000000": 508, "9343": 454, "935826709880043": 482, "93702": 498, "937422": 561, "9382336444241555": 494, "938e": [469, 484], "939": [294, 300], "9391360e": 488, "93988308": 97, "93e": 484, "94": [462, 484, 490, 497, 506, 508], "940e": 484, "940fals": 457, "941": 509, "94111838": 97, "941176470588236": 473, "94186555556": [420, 476], "943282347242818": 506, "944060876": 486, "9441e": 464, "9453950989269149": 494, "9462": 469, "946923": 277, "94722599": 469, "94723": 469, "947e": 463, "948683": 454, "9489822e": 488, "949": 492, "9499210e": 488, "94e": [469, 484], "95": [33, 67, 156, 162, 164, 165, 166, 168, 222, 223, 227, 236, 239, 252, 254, 263, 264, 268, 274, 278, 462, 463, 469, 475, 484, 485, 487, 490, 491, 497, 539, 584], "950": 442, "9500979841335693": 308, "95024543e": 487, "950e": 459, "952": 67, "9529719e": 488, "953": 492, "9537056583888585e": 412, "953e": 478, "95421509259": 476, "95451985e": 127, "9546285068162436": 494, "95615": 454, "957": 67, "9580e": 461, "95883": 508, "959198": 484, "959d": [52, 53], "96": [423, 455, 462, 485, 490, 548], "9606540e": 488, "960784313725491": 473, "9608912e": 488, "9619812963": 476, "96374320": 465, "966": 442, "96602": 464, "967546": 463, "9677107409819438": 308, "968": [459, 469], "96814": 508, "96833546296": [484, 498], "968488": 306, "969": 484, "9692e": 455, "96e": 457, "96r": 490, "97": [462, 484, 488, 494, 507], "970": [453, 496], "97003": 508, "97054": 463, "970e": 484, "97116": 469, "9721952295357764e": 481, "973": 484, "9730e": 468, "97369425926": 476, "974e": 484, "975": 442, "97529": 143, "97596": 463, "976": 442, "97749": 469, "97749371": 469, "9776920e": 488, "979": [67, 442, 490], "97934": 463, "97978": 83, "97e": 484, "98": [83, 350, 456, 461, 462, 463, 467, 476, 478, 488, 506], "980": 67, "9803921568627443": 473, "98049": 463, "98149518519": 476, "9816452e": 488, "982075849517389e": 493, "98258": 463, "9833462074166": 484, "9834338e": 488, "98359211196148547": 469, "98429": 463, "9845": 454, "9847406e": 488, "984e": 463, "985": [442, 457], "985502122122975": 494, "9868440049211211": 506, "9876": 454, "98772": 143, "988": [442, 484, 492], "988409870698051e": 52, "988413141629203e": 412, "9890": 508, "989779066475214e": 412, "98e": 484, "99": [350, 462, 463, 464, 475, 486, 507, 508], "99004": 144, "991": 484, "9910796e": 488, "9912648e": 488, "9912712e": 488, "992357": 493, "993": 456, "9931": 508, "994": 442, "99467": 144, "994e": 484, "995": 492, "9952623149688797": 506, "9969731e": 488, "9969e": 475, "997": [442, 475], "9977859e": 488, "9978": 508, "998": [453, 470, 471, 474], "99848e": 498, "99878762e": 486, "999": [50, 165, 168, 484], "99919925926": 241, "99993896484375": 459, "9999912037958": 469, "999999": 484, "99999994": 86, "9999999995": 484, "9999999997835": 456, "99999999999545": 481, "999999999997": 471, "9999999999977": 484, "9999999999978": 477, "9999999999998": 484, "99999999999994": 484, "99999999999999": [462, 484], "99e": 484, "9e": [455, 457, 484, 567], "9y9ga09c": 463, "A": [16, 19, 20, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 82, 83, 84, 87, 88, 89, 90, 91, 92, 99, 100, 102, 103, 105, 106, 109, 110, 111, 125, 126, 127, 135, 138, 143, 144, 193, 194, 195, 196, 198, 200, 201, 202, 203, 204, 205, 206, 207, 208, 216, 217, 219, 220, 223, 224, 226, 227, 228, 230, 231, 232, 233, 236, 237, 238, 239, 240, 241, 242, 243, 244, 247, 250, 251, 254, 255, 256, 257, 258, 262, 263, 264, 265, 267, 270, 271, 272, 274, 275, 276, 277, 278, 279, 291, 293, 301, 302, 310, 319, 372, 373, 374, 376, 377, 384, 386, 388, 389, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 404, 406, 407, 408, 409, 410, 411, 412, 413, 422, 424, 428, 429, 430, 431, 432, 435, 437, 438, 441, 442, 443, 444, 446, 448, 449, 450, 451, 454, 456, 461, 463, 467, 469, 470, 473, 476, 477, 478, 479, 482, 483, 484, 485, 487, 489, 490, 491, 492, 493, 494, 495, 497, 498, 499, 500, 502, 505, 507, 508, 510, 518, 519, 520, 522, 523, 531, 532, 534, 535, 537, 539, 576, 577, 580, 581, 584], "AND": [491, 492], "AS": 413, "And": [283, 383, 386, 401, 403, 409, 415, 456, 457, 459, 460, 467, 471, 473, 478, 485, 487, 490, 491, 493, 497, 506, 507, 508], "As": [83, 310, 340, 383, 384, 386, 391, 395, 396, 397, 399, 401, 409, 410, 413, 420, 425, 444, 454, 455, 456, 459, 460, 461, 463, 464, 465, 469, 471, 472, 476, 477, 478, 481, 482, 483, 484, 485, 487, 489, 490, 493, 495, 498, 500, 506, 508, 522, 531, 584], "At": [266, 397, 400, 409, 410, 412, 414, 428, 471, 490, 497, 527, 580], "But": [383, 388, 391, 397, 402, 410, 414, 420, 444, 459, 460, 487, 495, 497, 506, 582], "By": [19, 20, 26, 50, 65, 87, 91, 102, 103, 106, 110, 111, 124, 128, 132, 149, 150, 151, 152, 153, 154, 155, 156, 157, 159, 160, 162, 164, 165, 166, 167, 168, 172, 175, 182, 192, 194, 195, 196, 198, 204, 207, 208, 220, 221, 223, 224, 227, 228, 230, 231, 232, 236, 237, 239, 243, 244, 247, 251, 252, 253, 255, 256, 257, 262, 263, 264, 267, 268, 269, 270, 271, 272, 274, 275, 278, 279, 380, 383, 409, 410, 411, 429, 430, 432, 471, 472, 477, 482, 487, 490, 495, 507, 529, 533, 539, 540, 541, 585], "FOR": [138, 301], "For": [11, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 42, 77, 82, 87, 88, 91, 95, 99, 100, 101, 102, 103, 106, 110, 111, 120, 122, 124, 125, 127, 128, 129, 132, 133, 134, 135, 152, 153, 154, 160, 165, 168, 175, 180, 181, 182, 185, 186, 188, 189, 193, 194, 195, 196, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 213, 220, 221, 222, 223, 224, 225, 226, 227, 228, 230, 232, 233, 236, 237, 238, 239, 240, 241, 242, 244, 250, 251, 252, 253, 254, 255, 257, 258, 263, 264, 265, 267, 268, 270, 271, 272, 274, 278, 279, 292, 294, 298, 300, 307, 313, 328, 382, 383, 384, 386, 388, 389, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 402, 403, 404, 406, 408, 409, 410, 411, 414, 415, 419, 420, 422, 425, 426, 427, 429, 430, 431, 432, 435, 442, 446, 449, 454, 455, 456, 457, 459, 460, 461, 462, 463, 464, 465, 467, 468, 469, 471, 473, 475, 476, 477, 478, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 497, 498, 499, 502, 506, 507, 508, 510, 517, 518, 520, 522, 532, 534, 535, 540, 545, 577, 581, 582, 584, 585, 586], "IN": [92, 100, 250], "If": [16, 19, 20, 26, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 45, 80, 82, 83, 84, 85, 86, 87, 88, 90, 91, 93, 94, 96, 100, 103, 104, 105, 106, 107, 108, 109, 110, 111, 113, 114, 115, 122, 124, 125, 126, 127, 128, 130, 132, 135, 138, 142, 143, 145, 147, 152, 153, 154, 160, 163, 165, 168, 169, 171, 172, 175, 177, 178, 181, 182, 185, 186, 188, 189, 190, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 206, 207, 208, 213, 216, 218, 220, 221, 222, 223, 224, 225, 226, 227, 228, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 247, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 274, 275, 276, 277, 278, 279, 280, 281, 289, 290, 307, 310, 322, 323, 328, 369, 372, 376, 377, 378, 379, 383, 384, 385, 386, 388, 390, 391, 396, 397, 399, 400, 401, 404, 405, 406, 408, 409, 413, 414, 415, 416, 417, 418, 419, 420, 424, 425, 426, 443, 444, 445, 454, 456, 457, 459, 461, 462, 464, 467, 469, 472, 475, 476, 477, 478, 479, 481, 484, 485, 487, 489, 490, 491, 492, 493, 495, 497, 498, 499, 508, 520, 522, 533, 535, 541, 543, 556, 582, 583, 584, 585], "In": [15, 16, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 67, 77, 83, 84, 87, 88, 90, 91, 94, 102, 104, 105, 109, 126, 127, 152, 171, 194, 196, 199, 202, 208, 216, 218, 278, 290, 323, 383, 386, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 416, 417, 420, 425, 426, 427, 428, 429, 430, 431, 432, 435, 446, 449, 454, 455, 456, 457, 459, 460, 461, 462, 463, 465, 467, 468, 470, 471, 472, 473, 475, 476, 477, 478, 479, 481, 482, 483, 484, 485, 486, 487, 489, 490, 491, 492, 493, 494, 495, 498, 499, 506, 507, 508, 518, 520, 522, 527, 530, 531, 532, 534, 535, 536, 539, 540, 545, 558, 577, 580, 581, 582, 583, 584, 585, 586], "It": [15, 19, 20, 26, 27, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 91, 103, 106, 110, 111, 112, 115, 117, 125, 143, 152, 156, 163, 164, 165, 166, 168, 178, 181, 185, 186, 191, 195, 196, 198, 200, 203, 204, 207, 208, 210, 220, 221, 224, 227, 228, 230, 231, 232, 237, 241, 243, 244, 247, 251, 253, 255, 262, 266, 267, 269, 270, 271, 272, 275, 279, 292, 296, 298, 299, 318, 332, 337, 383, 384, 386, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 407, 408, 409, 410, 411, 414, 415, 419, 421, 425, 426, 427, 428, 432, 435, 437, 438, 439, 444, 446, 448, 449, 450, 451, 454, 460, 465, 468, 470, 472, 475, 479, 482, 484, 485, 486, 487, 489, 490, 491, 493, 495, 497, 498, 499, 500, 506, 507, 508, 510, 511, 518, 519, 521, 522, 526, 527, 529, 531, 535, 549, 552, 553, 555, 556, 560, 561, 563, 564, 565, 566, 579, 580, 581, 582, 583, 584, 586], "Its": [395, 409, 410, 435, 437, 473, 477, 495, 507, 524, 525, 526, 528], "NOT": 491, "No": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 86, 394, 404, 407, 408, 443, 445, 452, 473, 481, 484, 487, 489, 490, 508], "Not": [106, 110, 111, 197, 203, 205, 391, 567], "ON": [103, 106, 134, 182, 183, 184, 192, 381, 389, 437, 451, 454, 455, 459, 462, 465, 469, 476, 477, 479, 487, 489, 495, 522, 531, 583, 585], "OR": [103, 110, 485, 491, 492], "Of": [383, 386, 420, 467, 485, 490, 498, 582, 585], "On": [59, 170, 176, 177, 180, 292, 299, 306, 383, 384, 389, 391, 398, 399, 413, 415, 416, 417, 418, 439, 467, 468, 487, 502, 584], "One": [31, 32, 37, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 102, 103, 106, 110, 111, 226, 235, 250, 336, 383, 384, 389, 391, 392, 393, 394, 397, 399, 400, 401, 409, 412, 449, 456, 460, 465, 476, 489, 490, 491, 506, 508, 531, 535, 558, 582, 584], "Ones": 310, "Or": [19, 20, 26, 220, 221, 224, 228, 230, 231, 232, 237, 243, 244, 247, 251, 253, 255, 256, 257, 262, 267, 269, 270, 271, 272, 275, 279, 384, 402, 403, 460, 467, 481, 485, 486, 490, 497, 498, 520], "Such": [395, 488, 526], "THE": [138, 301], "That": [16, 19, 20, 84, 90, 105, 126, 213, 216, 220, 223, 224, 227, 228, 230, 231, 232, 233, 236, 237, 238, 239, 240, 241, 242, 243, 244, 247, 254, 255, 256, 257, 258, 262, 263, 264, 265, 267, 270, 271, 272, 277, 278, 383, 384, 388, 397, 400, 403, 487, 508, 582], "The": [11, 15, 16, 19, 20, 23, 26, 27, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 42, 52, 53, 57, 59, 63, 69, 77, 80, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 94, 95, 100, 101, 102, 103, 105, 106, 107, 108, 109, 110, 111, 112, 116, 117, 118, 119, 120, 124, 125, 126, 127, 128, 129, 130, 132, 133, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 159, 160, 162, 163, 164, 165, 166, 167, 168, 172, 176, 177, 181, 182, 185, 186, 187, 190, 191, 192, 193, 194, 195, 196, 197, 198, 200, 202, 203, 204, 205, 206, 207, 208, 212, 213, 214, 217, 219, 220, 221, 222, 223, 224, 227, 228, 230, 231, 232, 233, 234, 236, 237, 238, 239, 240, 241, 242, 243, 244, 247, 251, 252, 253, 254, 255, 256, 257, 258, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 274, 275, 277, 278, 279, 282, 283, 289, 291, 292, 293, 294, 296, 297, 298, 299, 300, 301, 306, 310, 322, 328, 330, 331, 334, 350, 366, 367, 369, 371, 372, 373, 374, 376, 377, 378, 379, 380, 382, 383, 384, 385, 386, 387, 388, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 416, 417, 418, 421, 424, 425, 427, 428, 429, 430, 431, 432, 435, 437, 438, 439, 443, 444, 445, 446, 447, 448, 449, 450, 451, 454, 455, 456, 457, 459, 460, 461, 462, 463, 464, 465, 467, 469, 471, 472, 473, 475, 476, 477, 478, 479, 481, 482, 483, 484, 485, 488, 489, 490, 491, 492, 493, 494, 497, 498, 499, 500, 502, 506, 507, 508, 510, 511, 512, 513, 517, 518, 520, 521, 522, 524, 525, 526, 527, 528, 529, 530, 532, 533, 534, 535, 536, 539, 541, 543, 544, 545, 548, 554, 556, 558, 567, 577, 579, 580, 581, 582, 583, 584, 585, 586, 587], "Their": 491, "Then": [67, 103, 108, 110, 386, 388, 393, 396, 398, 399, 400, 401, 407, 417, 456, 459, 467, 468, 471, 475, 476, 487, 491, 493, 495, 507], "There": [87, 91, 143, 383, 384, 388, 389, 390, 392, 397, 398, 399, 400, 401, 402, 403, 404, 407, 410, 412, 414, 416, 417, 443, 451, 469, 473, 482, 483, 484, 485, 487, 488, 489, 491, 492, 499, 510, 518, 519, 522, 535], "These": [77, 95, 200, 282, 383, 384, 388, 389, 394, 396, 397, 398, 399, 403, 404, 409, 412, 427, 429, 430, 431, 435, 443, 449, 454, 468, 470, 471, 478, 482, 483, 485, 488, 490, 493, 494, 499, 502, 510, 527, 532, 534, 535, 583, 584, 585], "To": [16, 19, 20, 26, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 84, 87, 90, 91, 100, 105, 109, 124, 126, 128, 132, 194, 206, 220, 221, 224, 228, 230, 231, 232, 237, 243, 244, 247, 251, 253, 255, 256, 257, 262, 267, 269, 270, 271, 272, 275, 277, 279, 282, 292, 373, 374, 385, 386, 390, 391, 394, 395, 396, 398, 399, 404, 405, 406, 407, 408, 409, 412, 414, 415, 416, 417, 418, 419, 420, 421, 425, 426, 427, 430, 431, 435, 437, 443, 444, 446, 449, 454, 455, 456, 457, 459, 460, 461, 462, 464, 465, 467, 469, 470, 471, 472, 473, 475, 476, 477, 478, 481, 482, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 497, 498, 502, 506, 508, 518, 519, 520, 523, 527, 529, 531, 532, 539, 580, 582, 583, 584], "With": [83, 101, 245, 383, 392, 393, 409, 431, 444, 495, 518, 584], "_": [103, 110, 130, 237, 257, 383, 397, 407, 409, 459, 462, 465, 483, 484, 487, 492, 495, 518, 531], "_0": [50, 51], "_1": [106, 111, 519], "_2": [106, 111], "__all__": 383, "__array__": 310, "__array_ufunc__": [461, 471, 500, 570], "__attributes__": [87, 91], "__call__": [17, 18, 19, 20, 21, 22, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 35, 36, 37, 39, 40, 220, 221, 222, 223, 224, 225, 227, 228, 230, 231, 232, 233, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 247, 251, 252, 253, 254, 255, 256, 257, 258, 259, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 274, 275, 277, 278, 279, 280, 281, 322, 389, 394, 411, 431], "__class__": [383, 407, 483, 516], "__dict__": [16, 84, 90, 105, 126, 383], "__enter__": 361, "__eq__": 437, "__exit__": 361, "__fields__": 410, "__getitem__": [393, 394, 395, 451], "__init__": [16, 84, 90, 105, 126, 203, 278, 383, 389, 395, 407, 412, 446], "__int__": 328, "__len__": 393, "__main__": [261, 383, 495, 504, 582], "__name__": [383, 465, 476, 477, 478, 481, 483, 504, 516, 582], "__neq__": 437, "__pydantic_extra__": [16, 84, 90, 105, 126], "__pydantic_fields_set__": [16, 84, 90, 105, 126], "__repr__": [383, 430, 444], "__str__": [383, 395, 410, 427], "__subclasses__": 483, "__version__": 419, "_basemodel__context": [16, 84, 90, 105, 126], "_build": [384, 414, 522], "_check_interv": 449, "_compute_flux_spati": 435, "_covari": [226, 250], "_data": 407, "_dataset": 384, "_dom_class": [467, 475, 490, 506, 507], "_energy_t": 407, "_err": 481, "_errn": [128, 129, 132, 133], "_errp": [128, 129, 132, 133], "_evaluate_timevar_sourc": 449, "_f_cash_root_cython": 305, "_factr": 487, "_fields_set": [16, 84, 90, 105, 126], "_i": 130, "_k": [103, 110, 518], "_l": 518, "_lat": 383, "_lon": 383, "_map": 376, "_model": 125, "_new_attribut": 383, "_old_attribut": 383, "_parameter_units_for_data_unit": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40], "_parent_namespace_depth": [16, 84, 90, 105, 126], "_parse_dataset": 412, "_phi": 383, "_prior": 411, "_propagate_error": 434, "_reco": 383, "_repr_html_": 383, "_row_index": 69, "_sampl": 412, "_sample_coord_time_energi": 449, "_sampler": 412, "_scan": 487, "_time_group": 407, "_time_t": 407, "_true": 383, "_type": [411, 495], "_types_namespac": [16, 84, 90, 105, 126], "_update_model": 412, "_was_": [16, 84, 90, 105, 126], "_wc": 546, "_weight": 411, "a_": [106, 111, 155, 524, 527, 584], "a_off": 584, "a_on": 584, "a_scan": 495, "aa": [87, 91, 310, 409], "aaguasca": 446, "ab": [28, 30, 31, 32, 33, 35, 36, 37, 38, 39, 40, 50, 52, 53, 57, 58, 60, 61, 62, 64, 65, 83, 88, 120, 137, 138, 146, 155, 208, 216, 218, 247, 282, 283, 292, 299, 301, 483, 484], "abc": [18, 56, 99, 123, 174, 193, 198, 489], "abcmeta": 489, "abdalla2018": [531, 532, 581], "abeysekara": 59, "abil": [407, 412, 495], "abl": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 393, 398, 401, 412, 456, 475, 476, 477, 495, 502, 582], "about": [11, 13, 16, 84, 90, 105, 126, 150, 155, 236, 241, 340, 383, 386, 388, 392, 399, 400, 402, 403, 404, 408, 409, 411, 413, 414, 419, 420, 439, 440, 444, 445, 446, 455, 457, 463, 464, 465, 467, 468, 469, 471, 484, 488, 490, 493, 498, 507, 508, 518, 519, 582, 585], "abov": [29, 44, 52, 53, 83, 124, 126, 127, 130, 134, 135, 143, 144, 170, 205, 372, 374, 383, 384, 389, 392, 393, 395, 397, 399, 400, 401, 402, 403, 407, 412, 416, 417, 420, 454, 463, 469, 471, 472, 473, 476, 479, 481, 486, 487, 489, 490, 491, 493, 494, 495, 497, 498, 499, 506, 516, 518, 519, 526, 529, 535, 581, 582, 583, 584, 585], "abramowski": 155, "abruptli": [383, 408], "abs_path": 318, "absenc": [398, 465, 489, 491, 531, 583], "absolut": [82, 91, 107, 149, 150, 151, 152, 155, 157, 159, 162, 167, 195, 196, 198, 200, 204, 207, 208, 314, 340, 360, 364, 520], "absolute_tim": 586, "absopt": 401, "absorb": [279, 393, 406, 442, 548], "absorbedspectralmodel": [429, 442], "absorbt": 406, "absorpt": [228, 401, 432, 442, 451, 453, 458, 502, 536, 568], "abstract": [56, 57, 59, 99, 123, 138, 166, 174, 179, 193, 195, 198, 207, 292, 301, 394, 431, 534], "abstractsetintstr": [16, 84, 90, 105, 126], "acada": 409, "academ": [139, 306], "accept": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 83, 87, 91, 106, 107, 111, 124, 125, 127, 170, 187, 192, 194, 195, 196, 198, 206, 207, 208, 226, 250, 293, 381, 387, 388, 389, 390, 391, 392, 395, 396, 397, 399, 400, 401, 402, 403, 404, 406, 408, 409, 410, 411, 412, 436, 440, 449, 451, 454, 455, 460, 461, 462, 465, 469, 472, 485, 489, 490, 498, 518, 534, 540, 558, 583, 584], "acceptance_off": [106, 107, 111, 124, 125, 127, 170, 180, 395, 454, 456, 459, 462, 465, 518, 584], "acceptance_on": [124, 125, 127], "acceptang": 124, "access": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 56, 58, 60, 61, 62, 64, 65, 66, 67, 82, 83, 87, 91, 103, 163, 193, 194, 203, 206, 299, 318, 383, 391, 392, 393, 394, 396, 399, 407, 414, 416, 419, 424, 425, 432, 439, 440, 442, 443, 449, 450, 457, 459, 460, 461, 467, 481, 484, 487, 488, 492, 493, 497, 500, 506, 507, 508, 517, 522, 533, 534, 535, 580], "accessor": 490, "accident": [498, 582], "accomplish": 486, "accord": [15, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 53, 72, 87, 91, 103, 106, 110, 111, 120, 125, 147, 153, 163, 170, 194, 200, 216, 218, 307, 372, 393, 394, 397, 398, 401, 407, 409, 429, 438, 450, 465, 476, 485, 489, 493, 494, 502, 518, 519, 522], "accordingli": [395, 409, 426, 432, 491], "account": [103, 106, 110, 111, 124, 125, 138, 172, 188, 226, 250, 266, 291, 293, 299, 358, 391, 396, 399, 407, 409, 431, 448, 450, 453, 454, 456, 458, 459, 461, 465, 467, 473, 478, 479, 486, 487, 489, 491, 502, 507, 518, 520, 583, 584], "accur": [136, 145, 401, 412, 445, 467, 487, 529], "accuraci": [397, 487, 522], "aceptance_off": 395, "acero": [401, 412, 425, 427, 429, 432, 435, 437, 442, 444, 450, 451], "achiev": [16, 84, 90, 105, 120, 126, 170, 373, 374, 383, 392, 393, 394, 395, 396, 397, 399, 406, 409, 432, 490, 493, 494, 532], "acknowledg": [386, 409, 421], "acquir": 420, "acquisit": 581, "across": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 100, 120, 383, 392, 395, 414, 470, 478, 492, 498, 518, 534, 543, 581], "act": [91, 399, 492, 545], "action": [170, 388, 393, 399, 409, 413, 414, 435, 478], "activ": [91, 299, 386, 400, 415, 416, 418, 419, 420, 429, 446, 482, 522], "actual": [183, 358, 359, 360, 382, 383, 384, 388, 392, 394, 396, 398, 399, 407, 408, 410, 413, 462, 472, 475, 477, 485, 486, 487, 489, 490, 491, 495, 498, 499, 507, 508, 529, 531, 581, 582, 584], "ad": [16, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 41, 59, 82, 83, 84, 87, 90, 91, 103, 105, 106, 110, 111, 115, 116, 119, 126, 127, 195, 196, 198, 203, 204, 207, 208, 383, 384, 386, 388, 389, 391, 392, 393, 395, 396, 397, 398, 399, 400, 402, 403, 407, 409, 424, 425, 426, 428, 429, 430, 432, 435, 437, 439, 440, 441, 442, 443, 444, 445, 446, 448, 449, 450, 451, 461, 465, 467, 468, 488, 489, 492, 493, 494, 495, 499, 518, 535, 585], "adapt": [120, 170, 213, 392, 393, 396, 397, 402, 403, 405, 406, 409, 413, 420, 425, 426, 428, 429, 430, 432, 433, 435, 438, 441, 442, 444, 446, 448, 449, 450, 451, 485, 488, 490, 491, 529, 532], "adaptiveringbackgroundestim": [180, 389], "adaptiveringbackgroundmak": [173, 429, 532], "adass": 403, "add": [13, 15, 16, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 41, 42, 43, 44, 79, 84, 87, 88, 90, 91, 99, 100, 102, 103, 104, 105, 106, 108, 109, 110, 111, 125, 126, 127, 149, 150, 152, 153, 154, 155, 156, 157, 160, 162, 163, 164, 165, 166, 168, 172, 195, 196, 198, 202, 204, 207, 208, 214, 226, 250, 266, 307, 352, 371, 380, 382, 383, 384, 386, 388, 391, 392, 393, 395, 396, 397, 398, 399, 400, 401, 402, 403, 406, 407, 409, 411, 412, 413, 416, 418, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 435, 436, 437, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 454, 455, 456, 462, 467, 468, 471, 475, 476, 479, 485, 488, 489, 490, 491, 493, 495, 497, 508, 512, 513, 522, 535, 550, 582, 585], "add_artist": [493, 539, 540], "add_cbar": [103, 106, 110, 111, 127, 149, 150, 152, 155, 156, 157, 162, 163, 164, 166, 195, 196, 198, 204, 207, 208, 371, 463, 464, 465, 467, 469, 475, 479, 483, 485, 488, 489, 490, 492, 493, 498, 499, 506, 507, 535, 538, 539, 540, 543, 544, 546], "add_column": [87, 91], "add_enabled_unit": [454, 462, 464, 467, 469, 475, 478, 497], "add_index": [87, 91], "add_loc": 383, "add_row": [87, 91], "add_subplot": 371, "addit": [16, 19, 20, 26, 43, 84, 87, 90, 91, 103, 105, 106, 110, 111, 115, 124, 126, 128, 133, 167, 195, 196, 198, 201, 204, 207, 208, 220, 221, 224, 228, 230, 231, 232, 237, 243, 244, 247, 251, 253, 255, 256, 257, 262, 267, 269, 270, 271, 272, 275, 279, 383, 386, 387, 388, 392, 393, 394, 395, 397, 398, 399, 400, 402, 403, 404, 407, 408, 409, 410, 412, 414, 415, 416, 417, 426, 427, 429, 431, 432, 435, 436, 443, 444, 446, 449, 450, 451, 457, 461, 473, 479, 484, 485, 486, 487, 490, 492, 493, 495, 497, 498, 507, 508, 518, 520, 522, 529, 534, 535, 579, 585], "addition": [133, 395, 485, 487, 490, 492, 493], "address": [392, 395, 396, 397, 399, 409, 495, 521], "adequ": 203, "adher": 386, "adjac": [147, 200, 435, 477, 490, 531], "adjust": [16, 67, 195, 196, 198, 204, 207, 208, 392, 394, 406, 451, 460, 482, 485, 486, 493, 494, 506, 522, 529, 581], "admit": 403, "adonath": 389, "adopt": [37, 396, 399, 404, 461, 471, 472, 483], "adress": 412, "adsab": [28, 30, 31, 32, 33, 35, 36, 37, 38, 39, 40, 50, 52, 53, 57, 58, 60, 61, 62, 83, 88, 120, 138, 155, 247, 282, 283, 292, 299, 301], "adult": 383, "advanc": [395, 399, 400, 403, 411, 416, 488, 490, 522, 581, 582], "advantag": [391, 397, 400, 407, 412, 435, 490, 495, 558, 582], "advanteg": 395, "advertis": 413, "advic": [383, 409], "advis": [384, 409, 487, 495, 502], "advoc": 383, "aeff": [16, 82, 87, 88, 106, 111, 155, 181, 189, 393, 395, 396, 431, 432, 456, 459, 460, 461, 464, 465, 467, 469, 477, 481, 488, 489, 497, 499, 500, 506, 507, 524, 529, 531, 532, 581], "aeff2d": 154, "aeff_2d": [82, 87, 155, 497, 500], "aeff_3d": 488, "aeff_ev": 488, "aeff_new": 488, "aeff_perc": [181, 456, 459, 460, 469, 477, 481, 489, 499, 531], "aegi": 228, "af": 379, "affect": [138, 383, 391, 395, 397, 408, 426, 427, 438, 447, 455, 495], "affili": [397, 409, 446], "afmhot": [492, 508], "aforement": 409, "after": [16, 45, 50, 51, 52, 53, 84, 90, 91, 100, 103, 105, 106, 110, 126, 165, 168, 299, 322, 340, 364, 367, 383, 386, 388, 391, 392, 394, 396, 397, 398, 399, 401, 402, 403, 405, 406, 407, 408, 409, 410, 412, 413, 414, 415, 420, 424, 431, 433, 434, 435, 437, 443, 445, 446, 447, 457, 465, 467, 477, 481, 482, 487, 490, 492, 497, 499, 500, 522, 582, 586], "ag": [20, 43, 44, 45, 50, 51, 52, 53, 54, 314, 383, 512], "again": [103, 106, 110, 111, 165, 386, 393, 395, 397, 399, 404, 410, 415, 430, 431, 434, 441, 446, 457, 459, 460, 467, 472, 473, 490, 493, 495, 498, 506, 508, 535, 582], "against": [16, 84, 90, 105, 126, 149, 150, 151, 152, 155, 156, 157, 159, 162, 164, 166, 167, 194, 195, 196, 198, 203, 204, 206, 207, 208, 384, 386, 400, 406, 414, 484, 486, 498, 506, 517, 520], "agent": 399, "agglom": 13, "aggreg": 410, "agil": 396, "agn": [139, 297, 397, 459, 476, 478, 482, 497], "agnost": 487, "ago": 390, "agre": [197, 200, 386, 388, 397, 409], "agreement": [383, 386, 404, 479], "aguasca": [437, 446, 447, 448, 449, 451], "aharonian": 470, "ahead": [397, 424], "ahelp": 213, "aic": 412, "aim": [383, 392, 393, 409, 412, 467, 471, 483, 494, 510, 581], "air": 497, "ait": [194, 195, 196, 504], "aitoff": 397, "aka": 508, "al": [26, 33, 59, 102, 138, 139, 155, 228, 298, 299, 301, 306, 393, 412, 451, 463, 470, 482, 510, 581], "alamo": 412, "albert": 581, "albert2007": 581, "alexi": [432, 435], "algorithm": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 59, 87, 91, 120, 135, 170, 213, 292, 383, 389, 395, 396, 397, 402, 410, 412, 427, 432, 440, 441, 442, 451, 463, 482, 486, 487, 499, 520, 534, 580, 584], "alia": [16, 56, 84, 90, 105, 126, 386, 508], "alias": [16, 56, 84, 90, 105, 126], "align": [87, 91, 100, 149, 150, 151, 152, 155, 156, 157, 158, 159, 162, 164, 166, 167, 194, 195, 196, 198, 200, 204, 206, 207, 208, 383, 451, 488, 491, 493], "alisha": 437, "all": [6, 16, 19, 20, 26, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 82, 83, 84, 87, 88, 89, 90, 91, 92, 95, 96, 100, 103, 104, 105, 106, 108, 109, 110, 111, 124, 125, 126, 127, 128, 132, 133, 135, 149, 150, 151, 152, 153, 154, 155, 156, 157, 159, 162, 164, 165, 166, 167, 168, 169, 175, 182, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 213, 216, 217, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 247, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 274, 275, 276, 277, 278, 279, 280, 281, 282, 289, 355, 356, 357, 358, 359, 360, 370, 379, 382, 383, 384, 386, 388, 389, 390, 391, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 419, 424, 425, 426, 427, 428, 429, 430, 431, 432, 435, 437, 438, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 453, 455, 456, 459, 460, 461, 464, 465, 467, 469, 470, 471, 475, 476, 478, 479, 481, 484, 485, 486, 487, 488, 490, 491, 492, 493, 495, 497, 498, 499, 500, 502, 504, 506, 507, 508, 512, 518, 520, 522, 531, 533, 534, 535, 536, 558, 579, 582, 583, 584], "all_quant": [125, 127], "allclos": [149, 150, 151, 152, 155, 156, 157, 159, 162, 164, 166, 167, 195, 196, 197, 198, 200, 204, 205, 207, 208, 358], "alloc": [196, 204, 208], "allow": [16, 26, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 56, 84, 87, 90, 91, 105, 120, 125, 126, 127, 134, 135, 165, 168, 194, 199, 201, 333, 383, 384, 386, 388, 389, 390, 393, 394, 395, 396, 397, 399, 400, 401, 402, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 416, 418, 426, 428, 429, 430, 431, 432, 435, 437, 444, 445, 446, 449, 451, 454, 459, 470, 478, 485, 486, 487, 488, 489, 490, 491, 507, 518, 520, 522, 529, 534, 535, 579, 580, 582, 587], "allow_extra": 199, "allow_pickl": [16, 84, 90, 105, 126], "allowed_channel": [26, 483], "allski": [83, 490], "alma": 402, "almeida": 432, "almost": [382, 384, 386, 397, 498, 508], "alogrithm": 412, "alon": 388, "along": [68, 102, 125, 127, 131, 147, 149, 150, 151, 152, 155, 156, 157, 159, 162, 163, 164, 166, 167, 195, 196, 198, 204, 206, 207, 208, 297, 298, 299, 301, 321, 322, 332, 342, 343, 392, 393, 407, 412, 446, 449, 451, 464, 473, 484, 485, 488, 489, 492, 493, 519, 534, 535, 551, 581], "alpha": [21, 27, 28, 48, 103, 106, 110, 111, 124, 125, 127, 170, 192, 213, 231, 232, 242, 243, 244, 258, 293, 304, 307, 380, 381, 395, 406, 408, 435, 442, 451, 454, 455, 456, 457, 459, 461, 462, 465, 467, 468, 472, 479, 484, 487, 495, 497, 539, 548, 550, 552, 554, 556, 557, 558, 567, 573, 574, 583, 584, 585], "alpha_": [106, 111], "alpha_1": [106, 111], "alpha_2": [106, 111], "alpha_norm": [228, 406, 455, 548], "alphabet": [400, 409, 425, 426, 427, 428, 429, 430, 431, 432, 435], "alreadi": [15, 16, 26, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 84, 87, 90, 91, 105, 126, 213, 274, 275, 276, 278, 383, 389, 390, 391, 394, 395, 396, 397, 398, 400, 403, 404, 405, 407, 410, 412, 413, 414, 444, 455, 457, 461, 463, 465, 472, 479, 483, 484, 485, 490, 491, 492, 493, 497, 498, 499, 508, 510, 535, 546], "also": [15, 19, 20, 26, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 87, 91, 95, 120, 124, 125, 127, 128, 136, 137, 143, 145, 146, 167, 172, 178, 193, 200, 202, 203, 213, 220, 221, 224, 228, 230, 231, 232, 237, 243, 244, 247, 251, 253, 255, 256, 257, 262, 267, 269, 270, 271, 272, 275, 277, 279, 290, 310, 318, 323, 383, 384, 386, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 403, 404, 405, 406, 407, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 425, 426, 427, 428, 429, 430, 431, 432, 435, 443, 444, 445, 449, 454, 455, 456, 459, 460, 461, 462, 463, 465, 467, 469, 470, 471, 472, 473, 479, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 495, 497, 498, 506, 507, 510, 518, 519, 520, 521, 522, 529, 531, 534, 535, 558, 561, 579, 581, 582, 583, 584, 586], "alt": [83, 85, 88, 94, 95, 383, 586], "alt_pnt": 91, "altaz": [83, 85, 94, 158, 383, 488, 586], "altaz_fram": [83, 94], "altaz_from_t": [83, 94], "altaz_interpol": 94, "altern": [82, 87, 91, 289, 382, 383, 386, 388, 392, 417, 435, 455, 459, 461, 463, 470, 484, 487, 488, 490, 492, 497, 518, 519, 582], "although": [383, 396, 397, 398, 400, 403, 407, 487, 497, 544, 545, 579, 586], "altitud": 456, "alwai": [77, 83, 87, 91, 152, 200, 203, 210, 216, 218, 234, 383, 384, 386, 389, 390, 391, 393, 394, 395, 397, 400, 408, 409, 412, 417, 424, 431, 446, 447, 449, 462, 463, 467, 475, 483, 487, 489, 490, 492, 494, 495, 502, 520, 534, 535], "am": 392, "ambigu": [397, 443], "amend": 386, "among": [82, 87, 91, 103, 106, 110, 111, 136, 145, 399, 403, 404, 406, 411, 432, 487, 581], "amount": [390, 397, 411, 522], "amp": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 265, 575], "ampl_2": [156, 488], "ampl_3": [156, 488], "amplitud": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 48, 49, 68, 102, 128, 133, 135, 195, 196, 198, 207, 208, 213, 220, 227, 230, 232, 237, 244, 248, 255, 256, 257, 265, 267, 270, 271, 272, 283, 289, 302, 394, 395, 398, 406, 412, 455, 456, 457, 459, 460, 461, 462, 463, 464, 467, 468, 469, 470, 471, 472, 475, 476, 477, 478, 479, 481, 482, 484, 485, 486, 487, 492, 493, 497, 498, 506, 507, 508, 520, 538, 539, 540, 541, 543, 544, 545, 546, 548, 549, 550, 552, 553, 555, 556, 558, 559, 560, 561, 563, 564, 565, 566, 569, 570, 571, 572, 573, 574, 575, 576, 577, 584], "amplitude_err": 481, "amplitude_maximum_signific": 482, "amplitude_maximum_vari": 482, "amplitude_ref": 479, "an": [6, 15, 16, 19, 20, 26, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 47, 50, 66, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 86, 87, 88, 89, 90, 91, 92, 93, 94, 102, 103, 104, 105, 106, 109, 110, 111, 112, 115, 117, 118, 125, 126, 127, 128, 129, 130, 132, 133, 135, 142, 143, 144, 150, 152, 153, 154, 155, 157, 160, 163, 165, 167, 168, 171, 175, 178, 180, 183, 185, 186, 189, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 213, 216, 220, 221, 223, 224, 226, 227, 228, 230, 231, 232, 233, 236, 237, 238, 239, 240, 241, 242, 243, 244, 247, 250, 251, 252, 253, 254, 255, 256, 257, 258, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 274, 275, 277, 278, 279, 285, 292, 297, 299, 308, 310, 314, 328, 339, 343, 361, 367, 373, 374, 376, 379, 382, 384, 386, 388, 389, 390, 391, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 412, 413, 414, 415, 416, 417, 420, 421, 424, 425, 428, 429, 430, 431, 432, 435, 437, 438, 439, 442, 443, 444, 446, 447, 449, 450, 451, 455, 456, 457, 459, 460, 461, 462, 463, 464, 465, 467, 468, 469, 470, 473, 475, 476, 477, 478, 479, 481, 482, 484, 486, 487, 489, 490, 492, 493, 494, 495, 497, 498, 499, 500, 502, 504, 506, 507, 508, 510, 512, 517, 518, 519, 520, 522, 523, 524, 525, 526, 527, 528, 529, 531, 533, 534, 535, 538, 539, 540, 541, 542, 543, 544, 545, 546, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 569, 570, 571, 572, 573, 574, 575, 576, 577, 579, 581, 582, 583, 584, 585], "anaconda": [400, 415, 416], "analog": [87, 91, 195, 196, 198, 204, 207, 208, 535], "analogi": 404, "analys": [82, 382, 383, 392, 393, 394, 395, 397, 401, 403, 405, 406, 411, 420, 421, 427, 428, 429, 431, 432, 442, 444, 447, 459, 460, 467, 477, 478, 483, 484, 491, 493, 497, 498, 499, 506, 507, 510, 518, 582], "analysi": [6, 16, 57, 67, 70, 72, 74, 83, 101, 103, 105, 106, 110, 111, 116, 119, 153, 154, 160, 165, 168, 177, 181, 382, 383, 384, 387, 393, 394, 395, 396, 397, 398, 399, 401, 402, 403, 404, 405, 406, 410, 412, 414, 415, 416, 417, 420, 421, 424, 425, 426, 428, 429, 430, 435, 437, 439, 440, 441, 442, 443, 444, 445, 446, 449, 450, 451, 453, 455, 457, 458, 463, 464, 465, 466, 470, 471, 473, 474, 475, 477, 478, 480, 481, 483, 484, 485, 487, 489, 490, 491, 492, 493, 494, 495, 497, 498, 499, 500, 507, 508, 510, 520, 522, 523, 527, 529, 530, 531, 532, 535, 561, 579, 581, 582, 584], "analysis3d": 445, "analysis_1": [453, 506, 509], "analysis_1d": 476, "analysis_2": [384, 453, 507, 509], "analysis_3d": [444, 453, 467, 474, 476], "analysis_joint": 467, "analysis_mwl": [453, 468, 474], "analysis_stack": 467, "analysisconfig": [15, 384, 460, 464, 465, 467, 476, 506], "analyt": [19, 20, 26, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 155, 156, 164, 166, 220, 221, 224, 228, 230, 231, 232, 237, 243, 244, 247, 251, 253, 255, 256, 257, 262, 267, 269, 270, 271, 272, 275, 279, 396, 401, 450, 451, 486, 488, 493, 520, 541, 585], "analyz": [138, 301, 393, 581], "andrea": 396, "andrew": 444, "angl": [16, 17, 18, 21, 22, 24, 25, 27, 33, 34, 38, 68, 83, 89, 91, 96, 103, 106, 116, 119, 120, 124, 131, 135, 149, 153, 154, 155, 156, 157, 160, 162, 163, 164, 165, 166, 168, 171, 178, 179, 181, 183, 193, 194, 196, 201, 203, 206, 208, 209, 223, 227, 236, 239, 252, 254, 263, 264, 266, 268, 274, 276, 278, 282, 338, 370, 383, 389, 397, 399, 406, 410, 423, 425, 426, 427, 444, 451, 454, 456, 459, 462, 468, 471, 472, 477, 481, 484, 490, 491, 493, 494, 497, 498, 522, 527, 531, 534, 535, 539, 540, 541, 544, 545, 581], "angle_incr": 178, "angular": [23, 103, 106, 116, 119, 130, 153, 154, 160, 165, 168, 171, 196, 203, 206, 208, 227, 236, 239, 276, 314, 317, 383, 399, 448, 461, 472, 479, 527, 528, 581], "angular_extens": 41, "angular_s": 535, "angular_separ": [406, 448, 450, 493], "ani": [16, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 82, 83, 84, 87, 90, 91, 105, 122, 126, 132, 154, 177, 195, 196, 198, 203, 204, 206, 207, 208, 310, 333, 368, 382, 383, 384, 386, 388, 389, 390, 391, 394, 395, 396, 397, 398, 399, 400, 401, 402, 404, 406, 409, 410, 412, 413, 416, 417, 418, 419, 420, 424, 425, 443, 444, 445, 450, 460, 469, 470, 473, 476, 477, 479, 481, 485, 489, 490, 492, 493, 495, 497, 498, 499, 500, 506, 507, 508, 510, 519, 520, 532, 534, 535, 550, 582, 586], "ann": [23, 443], "anna": 383, "annihil": [17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 446, 510], "annoi": [383, 582], "annot": [16, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 84, 90, 105, 126, 372, 410, 539], "announc": [383, 388, 390, 397, 399, 402, 404, 406, 408, 409, 413, 414], "annuli": [473, 535], "annulu": [129, 342, 535], "anonym": 386, "anoth": [19, 20, 26, 83, 86, 87, 91, 103, 106, 110, 111, 153, 154, 155, 160, 165, 167, 168, 197, 200, 220, 221, 222, 223, 224, 225, 226, 227, 228, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 247, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 274, 275, 276, 277, 278, 279, 280, 281, 289, 383, 397, 398, 399, 401, 403, 404, 407, 410, 412, 415, 416, 418, 420, 429, 444, 479, 485, 490, 491, 493, 535, 582], "another_posit": 531, "answer": [487, 522], "anti": [490, 491], "anticip": 392, "anymor": 446, "anyon": [388, 390, 497], "anyth": [152, 399, 582], "anytim": [386, 426], "anywai": [386, 397], "anywher": [397, 400, 402, 518], "ap": [388, 400, 408], "ap7eroa6": 481, "apart": 398, "apertur": 581, "api": [234, 387, 389, 392, 393, 394, 395, 396, 397, 399, 402, 403, 404, 408, 409, 421, 422, 424, 425, 426, 427, 429, 430, 431, 432, 435, 439, 443, 444, 453, 456, 459, 460, 463, 469, 471, 477, 485, 490, 491, 492, 493, 496, 497, 498, 506, 508, 509, 520, 521, 529, 579, 580, 581, 582], "apj": [294, 300], "aplpi": 444, "apologis": [424, 425, 444], "app": [87, 91, 414, 420, 443], "appar": 412, "appear": [87, 91, 383, 384, 391, 397, 410, 438, 449, 451, 484], "append": [87, 91, 92, 100, 148, 193, 194, 195, 196, 198, 203, 204, 206, 207, 208, 213, 250, 395, 396, 398, 430, 449, 456, 459, 461, 462, 467, 468, 469, 471, 477, 478, 479, 481, 485, 486, 487, 489, 492, 493, 494, 495, 531], "append_ax": [149, 150, 152, 155, 156, 157, 162, 164, 166, 208, 371], "appendix": [30, 135, 155, 247, 283, 302, 463], "appl": 420, "appli": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 83, 86, 87, 89, 91, 101, 102, 103, 104, 106, 110, 111, 112, 116, 117, 119, 120, 124, 127, 128, 132, 135, 152, 153, 154, 160, 165, 167, 168, 172, 178, 181, 182, 195, 196, 198, 199, 203, 204, 206, 207, 208, 216, 218, 226, 234, 250, 266, 279, 290, 291, 292, 293, 322, 323, 368, 372, 380, 383, 389, 390, 393, 394, 396, 398, 401, 407, 408, 409, 432, 437, 442, 443, 444, 445, 449, 451, 454, 459, 461, 471, 477, 478, 479, 481, 485, 486, 489, 490, 491, 492, 493, 495, 497, 500, 507, 508, 520, 522, 529, 567, 580, 583], "applic": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 68, 87, 91, 383, 394, 409, 411, 431, 482, 487, 534, 581], "apply_async": [330, 331], "apply_edisp": 450, "apply_hysteresis_threshold": 491, "apply_irf": [266, 431], "apply_mask": 201, "apply_psf": [394, 428], "apply_standard_scal": 96, "apply_threshold_sensit": 124, "apply_union": 210, "approach": [87, 91, 135, 383, 389, 391, 395, 399, 404, 407, 408, 410, 449, 454, 459, 489, 502, 581, 584], "appropri": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 83, 87, 91, 194, 195, 196, 198, 207, 208, 310, 318, 384, 461, 465, 467, 481, 490, 582], "approv": [389, 390, 391], "approx": [52, 53], "approxim": [102, 135, 136, 145, 181, 182, 194, 195, 196, 223, 227, 236, 239, 252, 263, 264, 268, 274, 278, 291, 293, 321, 394, 397, 412, 426, 451, 454, 459, 487, 497, 520, 531, 540, 541, 544, 545], "appveyor": 440, "apr": [405, 422], "april": [403, 410, 431], "apt": 417, "ar": [6, 11, 15, 16, 19, 20, 23, 26, 27, 28, 29, 30, 31, 32, 33, 35, 36, 37, 39, 40, 46, 57, 67, 70, 74, 77, 79, 80, 82, 83, 84, 85, 86, 87, 88, 90, 91, 96, 100, 101, 102, 103, 105, 106, 109, 110, 111, 113, 114, 116, 119, 120, 122, 124, 125, 126, 127, 128, 129, 130, 132, 133, 135, 136, 138, 139, 143, 144, 145, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 162, 163, 164, 165, 166, 167, 168, 169, 171, 172, 175, 176, 181, 182, 183, 188, 192, 193, 194, 195, 196, 198, 199, 200, 202, 203, 204, 205, 206, 207, 208, 212, 213, 215, 217, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 247, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 289, 292, 297, 301, 306, 310, 322, 328, 330, 342, 343, 358, 372, 374, 379, 382, 383, 384, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 424, 425, 426, 427, 428, 429, 430, 431, 432, 435, 437, 438, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 454, 455, 456, 457, 459, 460, 461, 462, 463, 464, 465, 467, 468, 469, 470, 471, 472, 473, 475, 476, 477, 478, 479, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 497, 498, 499, 500, 502, 506, 507, 508, 510, 511, 512, 513, 517, 518, 519, 520, 522, 524, 525, 526, 527, 528, 529, 532, 533, 534, 535, 536, 539, 540, 548, 558, 577, 579, 580, 581, 582, 583, 584, 585, 586, 587], "arakelian": 298, "arang": [120, 398, 463, 477, 481, 534], "arb": 495, "arbitrari": [201, 203, 204, 394, 406, 430, 443, 471, 485, 490, 495, 534, 535], "arbitrary_types_allow": [16, 84, 90, 105, 126, 410], "arbitrarytypemetadata": 410, "archiv": [409, 500, 507], "arcsec": 178, "arctan": 397, "area": [82, 88, 106, 108, 154, 155, 170, 181, 182, 189, 196, 204, 206, 208, 383, 384, 394, 439, 441, 454, 459, 471, 479, 489, 499, 500, 527, 534, 535, 581], "areasc": [442, 444], "aren": [359, 383, 397, 402, 403, 415, 416, 418], "arf": [107, 108, 111, 199, 200, 203, 204, 459, 535], "arf_ob": 107, "arffil": 107, "arg": [11, 16, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 53, 84, 87, 90, 91, 105, 110, 111, 126, 149, 150, 151, 155, 156, 157, 159, 162, 163, 164, 166, 167, 196, 197, 204, 221, 234, 248, 255, 256, 257, 333, 582], "arg_in_kwarg": 383, "argmax": 482, "argmin": 482, "argpars": [388, 582], "argsort": [87, 91], "argument": [11, 16, 19, 20, 23, 26, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 68, 83, 84, 86, 87, 88, 90, 91, 92, 93, 100, 102, 103, 105, 106, 109, 110, 111, 126, 127, 128, 130, 132, 135, 148, 149, 150, 151, 152, 155, 156, 157, 159, 162, 163, 164, 165, 166, 167, 168, 171, 181, 193, 194, 195, 196, 198, 199, 200, 202, 203, 204, 205, 206, 207, 208, 211, 213, 220, 221, 222, 223, 224, 225, 226, 227, 228, 230, 231, 232, 233, 234, 236, 237, 238, 239, 240, 241, 242, 243, 244, 247, 250, 251, 252, 253, 254, 255, 256, 257, 258, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 274, 275, 276, 277, 278, 279, 280, 284, 290, 308, 310, 322, 328, 330, 331, 370, 371, 372, 376, 377, 378, 379, 380, 386, 389, 395, 398, 431, 432, 435, 437, 443, 449, 450, 451, 463, 467, 472, 473, 487, 489, 490, 493, 494, 498, 507, 520, 522, 533, 534, 535, 558, 582], "aris": [388, 399, 522], "arithmet": [221, 394, 445, 490, 491, 493, 550], "arjun": [442, 443], "arm": [33, 34, 38, 45, 439], "armstrong": 443, "arnau": [437, 446, 447, 448, 449, 451], "around": [56, 143, 171, 194, 196, 206, 208, 322, 397, 398, 461, 479, 483, 487, 491, 499, 508, 522, 531, 534, 535], "arpit": 442, "arr": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40], "arrai": [19, 20, 28, 29, 30, 31, 32, 33, 35, 36, 37, 38, 39, 40, 82, 83, 85, 87, 91, 92, 94, 99, 100, 102, 103, 110, 111, 120, 125, 127, 128, 129, 132, 133, 135, 138, 143, 144, 149, 150, 151, 152, 155, 156, 157, 159, 162, 163, 164, 165, 166, 167, 168, 193, 194, 195, 196, 197, 198, 199, 200, 201, 203, 204, 205, 206, 207, 208, 211, 216, 220, 223, 224, 225, 226, 227, 228, 230, 231, 232, 233, 236, 237, 238, 239, 240, 241, 242, 243, 244, 247, 250, 252, 253, 254, 255, 256, 257, 258, 262, 263, 264, 265, 266, 267, 270, 271, 272, 276, 277, 278, 279, 280, 290, 291, 293, 295, 301, 306, 310, 321, 322, 323, 337, 338, 339, 343, 376, 377, 382, 383, 396, 397, 401, 407, 410, 420, 430, 443, 446, 448, 450, 461, 462, 471, 472, 479, 481, 484, 485, 487, 488, 490, 492, 493, 495, 497, 499, 500, 508, 534, 535, 542, 567, 570, 583, 584], "array_lik": [103, 110, 149, 150, 151, 152, 155, 156, 157, 159, 162, 164, 166, 167, 193, 194, 195, 196, 198, 203, 204, 206, 207, 208, 294, 300, 307], "array_shap": [448, 450], "arriba": [436, 439, 440], "arriv": [225, 233, 238, 240, 241, 242, 258, 265, 277, 280, 388, 396, 429, 430, 431, 471, 581, 585], "arrow": 580, "arrowprop": 539, "arrowstyl": 539, "artefact": [19, 20, 26, 220, 221, 224, 228, 230, 231, 232, 237, 243, 244, 247, 251, 253, 255, 256, 257, 262, 267, 269, 270, 271, 272, 275, 279], "arthmet": 394, "articl": [137, 139, 146, 298, 306, 388, 456, 477], "artifact": [124, 196], "artifici": 471, "artist": [203, 226, 250, 539, 540], "arxiv": [64, 65, 181, 256, 257, 271, 272, 468, 483, 484, 565, 566], "as_arrai": [87, 91], "as_artist": [203, 204, 493, 535, 539, 540], "as_energy_tru": [193, 194, 203, 206], "as_plot_cent": [197, 200, 205, 481], "as_plot_edg": [197, 200, 205], "as_plot_label": [197, 200, 205], "as_plot_scal": 200, "as_plot_xerr": [197, 200, 205], "asanyarrai": 383, "ascii": [87, 91, 127, 383], "ashton": 412, "ashton2022": 412, "asid": 486, "asimov": 495, "asinh": 463, "asinha": 82, "ask": [384, 386, 388, 390, 397, 399, 400, 403, 409, 419, 476, 508, 522, 523, 582], "asmooth": [120, 121, 402, 430, 441, 444], "asmoothestim": 404, "asmoothmapestim": [121, 404, 430, 432, 435, 463, 522], "aspect": [386, 409, 523, 582, 587], "assert": [197, 199, 200, 205, 358, 359, 360, 386, 394, 406, 490], "assert_allclos": 383, "assert_equ": 383, "assert_nam": [197, 199, 200, 205], "assert_quantity_allclos": [383, 439], "assess": [459, 461, 482], "assign": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 103, 104, 109, 110, 194, 266, 276, 379, 383, 392, 395, 398, 410, 413, 456, 475, 476, 485, 490, 493, 495, 507, 508, 534], "assist": 399, "asso": [71, 74, 75, 77, 78], "assoc": 71, "assoc1": [74, 75, 78, 484, 508], "assoc2": [74, 75, 78, 508], "assoc_fgl": 78, "assoc_fhl": 78, "assoc_gam": 75, "assoc_gam1": [74, 78], "assoc_gam2": [74, 78], "assoc_gam3": [74, 78], "assoc_new": 77, "assoc_prob_bai": 484, "assoc_prob_lr": 484, "assoc_tev": [74, 75, 78], "associ": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 67, 80, 87, 91, 100, 103, 106, 125, 134, 138, 139, 140, 141, 153, 154, 165, 168, 185, 186, 191, 204, 277, 301, 310, 383, 389, 399, 407, 408, 409, 410, 411, 449, 450, 455, 456, 457, 459, 463, 468, 484, 485, 486, 489, 490, 492, 493, 495, 499, 508, 519, 520, 522, 535, 584], "association_catalog": [67, 484], "association_nam": [67, 484], "assum": [23, 50, 51, 52, 53, 67, 82, 83, 85, 95, 102, 124, 125, 127, 135, 136, 137, 142, 145, 146, 155, 167, 178, 192, 194, 195, 196, 198, 201, 205, 207, 208, 213, 272, 278, 282, 289, 337, 340, 383, 386, 395, 396, 398, 406, 407, 411, 420, 421, 454, 455, 456, 459, 461, 462, 465, 471, 472, 473, 475, 483, 488, 490, 493, 495, 498, 512, 518, 520, 527, 579, 584], "assumpt": [72, 95, 103, 106, 110, 111, 120, 134, 137, 146, 397, 407, 455, 527, 531, 583], "astri": 97, "astrisim": 396, "astro": [6, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 128, 188, 195, 196, 198, 207, 208, 261, 279, 383, 384, 395, 402, 403, 407, 427, 436, 440, 444, 446, 450, 461, 483, 488, 490, 497, 511, 512, 514, 515, 516, 519, 581], "astro_dark_matt": [403, 453, 483, 496], "astromodel": 510, "astronom": [13, 397, 404, 443, 581], "astronomi": [11, 283, 382, 393, 397, 401, 412, 414, 421, 442, 456, 459, 465, 469, 489, 497, 522, 531, 532, 579, 580, 581, 582, 583, 584, 586, 587], "astrophys": [6, 23, 314, 398, 522, 580, 581], "astropi": [13, 19, 20, 26, 27, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 52, 66, 83, 85, 86, 87, 88, 89, 91, 92, 94, 96, 103, 106, 110, 111, 116, 119, 120, 125, 127, 129, 131, 132, 135, 143, 144, 152, 154, 163, 165, 178, 192, 193, 194, 195, 196, 198, 199, 201, 203, 204, 205, 206, 207, 208, 220, 221, 224, 228, 230, 231, 232, 237, 240, 241, 243, 244, 247, 251, 253, 255, 256, 257, 258, 262, 265, 266, 267, 269, 270, 271, 272, 275, 277, 279, 280, 283, 292, 301, 308, 309, 310, 340, 359, 360, 369, 373, 374, 378, 382, 384, 385, 386, 388, 389, 390, 394, 396, 397, 398, 400, 401, 402, 403, 404, 406, 407, 409, 410, 411, 413, 420, 421, 423, 427, 428, 429, 430, 434, 436, 437, 439, 440, 441, 442, 443, 444, 445, 446, 448, 450, 454, 455, 456, 457, 459, 460, 461, 462, 463, 464, 465, 467, 468, 469, 470, 471, 472, 473, 475, 476, 477, 478, 479, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 497, 498, 499, 500, 502, 506, 507, 508, 512, 514, 515, 516, 518, 519, 520, 522, 524, 526, 529, 531, 532, 533, 534, 535, 539, 540, 541, 542, 543, 546, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 569, 570, 571, 572, 573, 574, 575, 576, 577, 583, 586], "astropy_healpix": 392, "astropy_help": [383, 425, 426, 427], "astropy_introduct": 426, "astropy_timeseri": 398, "astropy_vers": 383, "astyp": [87, 91], "asymetr": [102, 459], "asymmetr": [124, 128, 129, 132, 133, 135, 136, 145, 401, 425, 431, 450, 459, 495, 506, 520, 540], "asymmetri": 488, "asymptot": [584, 585], "atmospher": [398, 416, 421, 497], "atnf": 443, "atol": [86, 100, 132, 200, 205, 358, 360, 383], "atol_ax": [149, 150, 151, 152, 155, 156, 157, 159, 162, 164, 166, 167, 194, 195, 196, 198, 203, 204, 206, 207, 208], "atom": 399, "atproduction_gamma": 26, "atreye": [395, 398, 424, 425, 426, 427, 428, 429, 430, 431, 432, 434, 435, 437, 438, 443, 444, 445, 446, 447, 448, 449, 450, 451], "attach": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 85, 94, 226, 234, 250, 266, 276, 394, 404, 412, 448, 478, 487, 492, 493, 582], "attempt": [16, 84, 90, 105, 126, 386, 397, 400], "attenu": 455, "attr": 383, "attract": 403, "attribut": [15, 16, 17, 18, 19, 20, 21, 22, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 35, 36, 37, 38, 39, 40, 52, 53, 54, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 99, 100, 101, 102, 103, 105, 106, 107, 108, 110, 111, 120, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 162, 163, 164, 165, 166, 167, 168, 170, 171, 172, 174, 175, 176, 177, 180, 181, 182, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 211, 212, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 247, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 274, 275, 276, 277, 278, 279, 280, 281, 291, 293, 310, 393, 395, 405, 410, 411, 412, 425, 426, 429, 430, 431, 432, 435, 437, 439, 441, 443, 448, 449, 450, 457, 461, 487, 489, 490, 491, 493, 508, 518, 534, 535, 584], "attributeerror": 383, "attrribut": 490, "aug": [396, 399, 400, 402, 422], "august": [390, 396, 399, 402, 469], "author": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 386, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 410, 411, 412, 413], "authoris": 409, "authorship": 387, "auto": [77, 195, 196, 198, 207, 208, 384, 386, 394, 403, 430, 444, 487, 582], "autocorrel": 138, "autodiff": 401, "autogener": 403, "autograd": [394, 401], "autom": [11, 391, 399, 409, 412, 413, 414, 437, 487, 582], "automat": [16, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 83, 84, 90, 105, 113, 114, 126, 128, 132, 135, 223, 227, 236, 239, 252, 263, 264, 268, 274, 278, 382, 383, 384, 386, 390, 391, 393, 394, 400, 403, 405, 409, 413, 424, 425, 431, 461, 469, 487, 490, 582, 586], "automatis": 521, "autopep8": 383, "autoscal": [216, 217, 218, 219], "avail": [11, 13, 26, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 57, 67, 70, 72, 77, 78, 83, 87, 88, 91, 102, 103, 106, 110, 111, 124, 125, 127, 128, 132, 133, 135, 136, 145, 148, 169, 175, 181, 182, 200, 213, 216, 218, 222, 223, 227, 228, 236, 239, 252, 254, 263, 264, 268, 274, 276, 278, 283, 334, 371, 383, 386, 389, 390, 391, 392, 394, 395, 396, 397, 400, 401, 403, 410, 414, 415, 416, 417, 418, 419, 425, 429, 430, 431, 435, 438, 442, 444, 446, 449, 451, 455, 459, 460, 463, 481, 486, 487, 489, 491, 493, 497, 498, 502, 506, 508, 510, 512, 513, 519, 521, 522, 524, 525, 526, 528, 536, 548, 580, 582, 584], "available_hdu": 88, "available_irf": 88, "available_method": [172, 181], "available_quant": [125, 127, 463, 486], "available_select": [175, 182], "available_stat_typ": 102, "averag": [19, 103, 106, 110, 111, 175, 182, 185, 186, 188, 189, 435, 455, 456, 459, 518], "averageaz": [471, 472], "avoid": [19, 20, 26, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 87, 91, 124, 175, 220, 221, 224, 228, 230, 231, 232, 237, 243, 244, 247, 251, 253, 255, 256, 257, 262, 267, 269, 270, 271, 272, 275, 279, 292, 383, 384, 389, 390, 391, 393, 397, 401, 402, 405, 406, 408, 409, 411, 416, 418, 435, 437, 446, 448, 449, 451, 459, 465, 491, 495, 519, 522, 531, 582], "awai": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 291, 293], "awar": [383, 388, 395, 403, 409], "ax": [16, 19, 20, 26, 66, 67, 83, 102, 103, 106, 110, 111, 112, 113, 114, 115, 117, 124, 125, 127, 129, 130, 135, 149, 150, 151, 152, 153, 154, 155, 156, 157, 159, 160, 162, 163, 164, 165, 166, 167, 168, 175, 182, 185, 186, 191, 193, 194, 195, 196, 197, 198, 199, 200, 201, 203, 204, 205, 206, 207, 208, 211, 220, 221, 222, 223, 224, 225, 226, 227, 228, 230, 231, 232, 233, 236, 237, 238, 239, 240, 241, 242, 243, 244, 247, 250, 251, 252, 253, 254, 255, 256, 257, 258, 262, 263, 264, 265, 267, 268, 269, 270, 271, 272, 274, 275, 277, 278, 279, 280, 291, 293, 370, 371, 375, 376, 377, 378, 379, 380, 383, 392, 402, 426, 430, 435, 441, 442, 443, 446, 449, 451, 454, 455, 456, 457, 459, 460, 461, 462, 463, 464, 465, 467, 468, 469, 470, 471, 472, 473, 475, 476, 477, 478, 479, 481, 482, 483, 484, 485, 486, 487, 488, 489, 491, 492, 493, 494, 495, 497, 498, 499, 506, 507, 508, 518, 520, 522, 524, 529, 531, 532, 533, 534, 539, 540, 541, 545, 548, 576, 577, 581], "ax1": [454, 463, 465, 469, 479, 491, 492], "ax2": [454, 463, 465, 469, 479, 491, 492], "ax3": [463, 469], "ax_crab_3fhl": 508, "ax_ebl": 548, "ax_excess": [456, 459], "ax_model": 548, "ax_residu": [102, 110, 111, 456, 459, 460, 461, 479, 506], "ax_s": [460, 506], "ax_spati": [103, 106, 110, 111], "ax_spectr": [103, 106, 110, 111], "ax_spectrum": [102, 110, 111, 456, 459, 460, 461, 479], "ax_sqrt_t": [456, 459], "axcols1": 490, "axcols2": 490, "axel": [392, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451], "axes0": [195, 196, 198, 204, 207, 208], "axes_loc": [149, 150, 152, 155, 156, 157, 162, 164, 166, 208, 371], "axes_nam": [194, 195, 196, 198, 203, 204, 206, 207, 208], "axesimag": [371, 372], "axesn": [195, 196, 198, 204, 207, 208], "axi": [19, 20, 26, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 41, 83, 100, 102, 103, 106, 110, 111, 112, 113, 114, 115, 117, 118, 120, 124, 125, 127, 128, 129, 131, 132, 135, 136, 139, 145, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 159, 160, 162, 163, 164, 165, 166, 167, 168, 189, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 203, 204, 205, 206, 207, 208, 220, 221, 224, 225, 226, 227, 228, 230, 231, 232, 233, 237, 238, 240, 241, 242, 243, 244, 247, 250, 251, 253, 255, 256, 257, 258, 262, 265, 267, 269, 270, 271, 272, 275, 276, 277, 279, 280, 287, 291, 292, 293, 297, 298, 299, 301, 321, 322, 332, 371, 376, 377, 378, 379, 389, 392, 405, 407, 427, 430, 431, 432, 435, 437, 442, 444, 445, 446, 449, 454, 456, 459, 460, 461, 462, 464, 465, 467, 469, 471, 472, 473, 475, 477, 478, 481, 482, 484, 485, 488, 489, 490, 497, 498, 499, 506, 507, 508, 518, 520, 522, 526, 531, 534, 535, 577, 581], "axis0": 534, "axis1": 490, "axis2": 490, "axis_edg": 376, "axis_nam": [102, 103, 106, 110, 111, 125, 127, 139, 147, 149, 150, 151, 152, 153, 154, 155, 156, 157, 159, 160, 162, 164, 165, 166, 167, 168, 193, 194, 195, 196, 198, 199, 201, 203, 204, 206, 207, 208, 473, 476, 477, 478, 485, 486], "axis_new": [127, 147, 477, 482], "axis_origin": 482, "axis_rgb": 378, "axis_tru": 469, "axisymmetr": 450, "axvlin": [462, 483, 494, 495], "axvspan": [204, 479], "az": [83, 85, 88, 94, 95, 383, 586], "azimuth": 498, "azur": 431, "b": [16, 19, 20, 26, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 48, 51, 52, 54, 77, 84, 87, 90, 91, 105, 126, 155, 213, 350, 383, 384, 397, 406, 409, 413, 459, 470, 483, 484, 487, 490, 491, 493, 498, 508, 514, 518, 535], "b1509": 484, "b_0": [539, 540], "b_1": [87, 91], "b_mean": 42, "b_psr": 43, "b_stdv": 42, "back": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 69, 77, 87, 91, 196, 322, 386, 393, 394, 397, 403, 412, 413, 459, 460, 462, 490, 493, 506, 582], "backend": [93, 102, 122, 128, 129, 132, 133, 135, 171, 212, 213, 214, 215, 289, 325, 330, 331, 382, 392, 394, 425, 444, 445, 449, 456, 457, 459, 460, 461, 467, 468, 469, 479, 481, 486, 487, 498, 506, 507, 522, 579, 580], "backend_default": [129, 132, 135], "background": [16, 67, 82, 83, 88, 93, 103, 104, 106, 107, 109, 110, 111, 114, 115, 120, 124, 125, 127, 134, 149, 150, 151, 161, 170, 172, 173, 175, 176, 177, 178, 180, 181, 182, 188, 228, 234, 276, 284, 291, 293, 302, 303, 304, 305, 307, 379, 383, 389, 392, 395, 396, 397, 399, 403, 404, 407, 416, 421, 424, 425, 426, 428, 429, 430, 431, 432, 435, 436, 437, 439, 440, 441, 442, 443, 444, 445, 447, 449, 450, 451, 453, 454, 455, 456, 459, 460, 461, 462, 463, 464, 466, 467, 469, 472, 473, 475, 476, 477, 478, 479, 481, 484, 485, 487, 488, 490, 491, 495, 499, 500, 502, 507, 518, 520, 521, 580, 581, 582, 584, 585], "background2d": [150, 151, 161, 431, 438, 446, 448, 450, 525], "background3d": [88, 149, 161, 188, 389, 431, 435, 443, 444, 445, 451, 488, 497, 525], "background_estim": 402, "background_interp_missing_data": 175, "background_map": [276, 394], "background_min": 148, "background_model": [103, 106, 110, 111, 135, 395, 396, 403, 405, 431, 464, 507, 525], "background_oversampl": [175, 182, 489], "background_pad_offset": 175, "background_r": [402, 485], "backgroundconfig": 16, "backgroundestim": [398, 429], "backgroundevalu": 394, "backgroundirf": [149, 150], "backgroundirfmodel": 405, "backgroundmodel": [395, 405, 406, 428, 430, 431, 432, 435], "backgroundtempl": 394, "backport": [390, 408, 413], "backround": 392, "backscal": 204, "backward": [388, 397, 406, 407, 408, 427, 486, 520], "bad": [86, 383, 397], "badli": 414, "baidkon4": 481, "balanc": 518, "band": [19, 20, 26, 68, 83, 89, 122, 125, 127, 130, 153, 154, 157, 160, 165, 168, 193, 194, 195, 196, 198, 199, 202, 203, 204, 206, 207, 208, 220, 221, 224, 228, 230, 231, 232, 237, 243, 244, 247, 251, 253, 255, 256, 257, 262, 267, 269, 270, 271, 272, 275, 279, 389, 401, 402, 406, 407, 416, 424, 457, 459, 460, 468, 469, 470, 479, 483, 484, 493, 498, 500, 517, 518, 520, 580], "bandshdu": 490, "banner": 414, "bar": [15, 82, 87, 91, 103, 106, 110, 111, 120, 132, 135, 149, 150, 208, 213, 237, 299, 331, 377, 400, 435, 438, 439, 445, 450, 479, 495, 522, 555], "bar_radiu": 38, "base": [15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 50, 51, 52, 53, 54, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 120, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 162, 163, 164, 165, 166, 167, 168, 170, 171, 172, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 274, 275, 276, 277, 278, 279, 280, 281, 291, 293, 309, 318, 319, 322, 328, 330, 332, 357, 370, 378, 383, 384, 386, 389, 390, 392, 393, 394, 395, 396, 397, 398, 399, 401, 402, 404, 406, 411, 412, 414, 416, 417, 424, 426, 427, 429, 431, 432, 435, 437, 440, 441, 442, 443, 444, 450, 451, 455, 459, 461, 462, 464, 467, 468, 469, 470, 471, 473, 479, 482, 484, 486, 488, 490, 491, 493, 494, 495, 497, 498, 507, 508, 510, 519, 520, 522, 532, 534, 546, 556, 580, 581, 583, 584], "base_dir": [82, 87, 318, 497, 499, 500, 510], "baselin": [82, 83, 242, 497], "basement": 426, "basemodel": [16, 84, 90, 105, 126, 410, 467], "baseradi": 251, "bash": [416, 418, 582], "basi": [388, 389, 399, 402, 413, 437, 439, 479, 483], "basic": [45, 46, 67, 71, 72, 74, 75, 76, 78, 79, 80, 106, 111, 127, 241, 386, 389, 393, 394, 395, 396, 397, 399, 403, 407, 410, 420, 432, 442, 444, 453, 456, 459, 461, 474, 476, 482, 483, 484, 491, 502, 508, 510, 512, 513, 520, 531, 534, 581, 582], "basicconfig": [16, 469, 504], "bayesian": [387, 401], "bayesian_block": 482, "bayesian_edg": 482, "bayesianfit": 412, "bayesianinfer": 412, "baysian": 392, "bb": [87, 91, 409], "bbar": [19, 20], "bbox_with_unit": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40], "bcf": [150, 154, 155, 156, 165, 454, 462, 475, 478, 488, 497], "becam": 390, "becaus": [16, 84, 90, 105, 126, 195, 196, 198, 202, 204, 207, 208, 383, 384, 386, 388, 390, 394, 395, 397, 398, 402, 406, 407, 410, 414, 435, 437, 451, 456, 457, 460, 473, 477, 479, 489, 490, 491, 492, 497, 498, 499, 506, 507, 508, 518, 522, 582, 585], "becom": [383, 391, 393, 394, 397, 402, 410, 412, 471, 477, 493, 522, 582, 585], "been": [16, 19, 20, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 84, 90, 100, 105, 124, 125, 126, 127, 167, 216, 220, 223, 224, 227, 228, 230, 231, 232, 233, 236, 237, 238, 239, 240, 241, 242, 243, 244, 247, 254, 255, 256, 257, 258, 262, 263, 264, 265, 267, 270, 271, 272, 277, 278, 310, 388, 389, 390, 391, 392, 394, 397, 398, 399, 400, 401, 402, 404, 405, 406, 407, 408, 410, 411, 412, 415, 417, 431, 432, 435, 437, 438, 444, 445, 446, 447, 448, 449, 450, 451, 455, 460, 470, 477, 478, 479, 481, 486, 490, 493, 494, 497, 499, 506, 519, 534, 567], "befor": [13, 16, 17, 18, 19, 20, 21, 22, 24, 25, 27, 52, 53, 84, 87, 90, 91, 92, 100, 105, 125, 126, 195, 196, 216, 220, 223, 224, 227, 228, 230, 231, 232, 233, 236, 237, 238, 239, 240, 241, 242, 243, 244, 247, 250, 254, 255, 256, 257, 258, 262, 263, 264, 265, 267, 270, 271, 272, 277, 278, 322, 378, 383, 384, 386, 388, 390, 391, 392, 393, 397, 398, 399, 401, 402, 408, 413, 414, 420, 438, 444, 455, 460, 462, 476, 477, 486, 487, 490, 493, 499, 502, 506, 558, 582], "begin": [52, 87, 91, 103, 110, 125, 127, 135, 403, 406, 409, 459, 461, 490, 493, 539, 544, 545, 549, 565, 584], "behav": [383, 393, 449, 464, 585], "behavior": [16, 84, 87, 90, 91, 95, 105, 126, 407, 434, 438, 449, 451], "behaviour": [358, 383, 405, 406, 432, 437, 443, 450, 477, 491, 498, 499, 518, 583], "behind": 481, "being": [124, 134, 196, 383, 388, 391, 397, 404, 407, 414, 461, 470, 482, 491, 511, 522, 535, 582], "belief": 495, "believ": [419, 495], "belong": [86, 407, 431], "below": [52, 53, 87, 91, 194, 198, 205, 206, 372, 373, 374, 378, 380, 384, 386, 387, 392, 393, 397, 399, 400, 403, 406, 407, 409, 410, 411, 412, 414, 415, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 437, 438, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 454, 459, 463, 479, 484, 487, 489, 491, 493, 494, 495, 497, 498, 519, 522, 540, 584], "benchmark": [399, 409, 414], "benefit": 400, "benn": 399, "berg": 581, "berge2007": [397, 531, 532, 581], "bernet": 450, "besancon": 512, "besid": [124, 135, 397, 398, 407, 412, 460, 461, 490, 498, 506, 507, 535], "best": [67, 71, 74, 75, 78, 80, 102, 125, 127, 128, 129, 132, 133, 143, 214, 215, 289, 291, 293, 376, 383, 386, 393, 396, 401, 409, 412, 416, 418, 455, 457, 459, 460, 461, 464, 467, 470, 479, 484, 486, 487, 495, 506, 520, 522, 524, 548, 554, 557, 558, 562, 584, 585, 586], "best_fit_model": 461, "beta": [27, 28, 48, 213, 242, 243, 244, 267, 406, 408, 431, 455, 457, 461, 468, 484, 487, 550, 556, 557, 558, 563, 573], "better": [383, 386, 388, 389, 390, 391, 392, 396, 397, 402, 403, 404, 407, 412, 425, 442, 443, 467, 468, 471, 479, 481, 487, 490, 491, 498, 518], "between": [19, 20, 26, 67, 77, 87, 88, 91, 94, 106, 111, 122, 124, 125, 127, 129, 130, 132, 143, 144, 156, 162, 164, 165, 166, 168, 178, 192, 194, 195, 196, 197, 198, 200, 203, 204, 205, 206, 207, 208, 220, 221, 224, 225, 228, 230, 231, 232, 233, 237, 238, 240, 241, 242, 243, 244, 247, 251, 253, 255, 256, 257, 258, 262, 265, 267, 269, 270, 271, 272, 275, 277, 279, 280, 283, 289, 307, 340, 373, 374, 381, 383, 384, 391, 393, 394, 395, 396, 397, 399, 400, 402, 403, 404, 407, 408, 410, 411, 412, 413, 422, 432, 435, 438, 449, 454, 461, 463, 468, 470, 473, 478, 479, 482, 486, 487, 489, 490, 491, 492, 495, 498, 499, 508, 518, 520, 527, 528, 531, 540, 541, 581, 584, 586], "bewar": [277, 456, 477], "bexcub": 199, "bexpcub": [194, 195, 196, 198, 207, 208, 490], "beyond": [199, 397, 407, 410, 431, 489, 510], "bfg": 487, "bgstat": 441, "bi": [442, 445], "bia": [96, 152, 153, 157, 181, 443, 449, 489, 495, 526], "bias": [461, 583], "bias_energi": 152, "bias_perc": 181, "bibliographi": 581, "bic": 412, "biederbeck": [411, 450], "big": [390, 393, 400, 413, 445, 498, 583, 585], "bigger": 196, "biggest": 402, "billion": 383, "bimod": 31, "bin": [19, 20, 26, 83, 86, 88, 101, 103, 106, 109, 110, 111, 113, 114, 120, 122, 124, 125, 127, 128, 130, 131, 132, 134, 135, 137, 138, 139, 140, 141, 146, 147, 148, 152, 153, 154, 155, 157, 160, 163, 165, 167, 168, 175, 177, 178, 179, 181, 183, 192, 193, 194, 195, 196, 197, 198, 199, 200, 203, 204, 205, 206, 207, 208, 220, 221, 223, 224, 225, 226, 227, 228, 230, 231, 232, 233, 236, 237, 238, 239, 240, 241, 242, 243, 244, 247, 250, 251, 252, 253, 254, 255, 256, 257, 258, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 274, 275, 276, 277, 278, 279, 280, 285, 294, 300, 301, 307, 376, 378, 381, 389, 394, 395, 396, 397, 399, 402, 403, 407, 415, 416, 426, 427, 429, 430, 432, 434, 435, 437, 440, 441, 442, 443, 444, 449, 450, 451, 455, 456, 459, 460, 461, 462, 463, 464, 465, 467, 468, 469, 471, 472, 473, 475, 476, 477, 478, 479, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 495, 497, 498, 499, 500, 506, 507, 508, 518, 520, 522, 526, 529, 530, 580, 581, 582, 583, 585], "bin_cent": 479, "bin_edg": 479, "bin_volum": [199, 203, 206, 535], "bin_width": [197, 200, 205, 479], "binari": [206, 208, 391, 397, 400, 409, 414, 435], "binary_dil": [208, 491], "binary_erod": [208, 491], "binary_eros": [208, 435], "binary_structur": 206, "bincent": 301, "bind": 386, "binder": [391, 413, 443, 446, 454, 455, 456, 457, 459, 460, 461, 462, 463, 464, 465, 467, 468, 469, 470, 471, 472, 473, 475, 476, 477, 478, 479, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 497, 498, 499, 500, 502, 504, 506, 507, 508, 538, 539, 540, 541, 542, 543, 544, 545, 546, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 569, 570, 571, 572, 573, 574, 575, 576, 577], "binlik": 127, "binned_likelihood": 128, "binneddataaxi": [426, 442], "binnedtimeseri": [127, 398], "bins_axi": 208, "binsiz": [16, 460, 464, 465, 467, 476, 506, 507], "binsize_irf": [16, 460, 464, 465, 467, 476, 506], "binsz": [103, 106, 110, 111, 112, 117, 154, 163, 165, 175, 178, 179, 183, 193, 194, 195, 196, 198, 203, 204, 206, 207, 208, 399, 459, 469, 470, 471, 472, 475, 479, 483, 485, 488, 489, 490, 491, 493, 498, 499, 507, 529, 531, 532, 534, 535, 538, 540, 541, 542, 543], "binsz_irf": [103, 106, 110, 111, 115, 485, 489, 522], "binsz_irf_default": [103, 106, 110, 111, 489], "binsz_wc": [203, 204], "bintabl": [194, 195, 196, 198, 207, 208], "bintablehdu": [83, 86, 149, 150, 151, 152, 155, 156, 157, 159, 162, 164, 166, 167, 194, 195, 196, 199, 200, 206, 207, 208, 471, 490, 518], "birth": [29, 30, 36, 50, 51, 52, 53], "bit": [83, 143, 384, 386, 390, 391, 397, 401, 402, 410, 451, 479, 490, 535], "bitbucket": 500, "bitpix": 490, "bkg": [16, 82, 87, 88, 103, 107, 108, 110, 111, 149, 150, 151, 181, 188, 234, 405, 430, 432, 437, 451, 454, 459, 460, 464, 465, 467, 468, 471, 472, 475, 479, 485, 488, 489, 492, 497, 499, 500, 506, 507, 518, 525, 581, 583, 584, 585], "bkg_": [103, 110], "bkg_2d": [87, 149], "bkg_3d": [82, 87, 150, 497, 500], "bkg_err": 479, "bkg_maker": [405, 456, 459, 461, 469, 477, 481, 531], "bkg_model": [395, 405, 411, 467, 471, 472, 475, 492, 507, 542], "bkg_ob": 107, "bkg_sy": 134, "bkg_syst_fract": [134, 454], "bkg_syst_fraction_sensit": 124, "bkgfile": 107, "black": [110, 111, 372, 373, 380, 401, 444, 446, 454, 479, 483, 489, 494, 531, 567], "blackground": 454, "blanch": [443, 444], "blanklin": [241, 420, 520, 535], "blazar": [306, 455, 481], "blind": [446, 522], "bll": 508, "blob": 423, "block": [384, 386, 389, 396, 403, 414, 423, 443], "block_reduc": 444, "blue": [102, 103, 106, 110, 111, 373, 455, 459, 465, 467, 470, 494, 531, 567], "blur": 33, "board": [392, 403], "bodi": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40], "boilerpl": 383, "boller": 482, "boni": [435, 438], "bool": [15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 45, 80, 82, 83, 84, 86, 87, 88, 90, 91, 93, 96, 100, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 115, 116, 119, 124, 125, 126, 127, 128, 132, 133, 135, 142, 149, 150, 151, 152, 153, 154, 155, 156, 157, 159, 160, 162, 163, 164, 165, 166, 167, 168, 171, 175, 182, 185, 186, 188, 189, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 210, 213, 214, 216, 217, 218, 219, 220, 223, 224, 226, 227, 228, 230, 231, 232, 233, 234, 236, 237, 238, 239, 240, 241, 242, 243, 244, 247, 250, 254, 255, 256, 257, 258, 262, 263, 264, 265, 266, 267, 270, 271, 272, 274, 275, 276, 277, 278, 292, 307, 310, 319, 322, 323, 340, 346, 349, 351, 352, 354, 380, 383, 397, 469, 484, 489, 490], "boolean": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 83, 87, 91, 125, 128, 129, 132, 133, 194, 195, 196, 198, 201, 203, 204, 206, 207, 208, 213, 226, 250, 266, 399, 432, 467, 484, 490, 491, 492], "boost": 471, "bootstrap": [87, 91, 412], "border": 91, "bose": 426, "bot": 389, "both": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 57, 70, 77, 82, 83, 86, 87, 88, 91, 100, 102, 103, 106, 107, 108, 110, 111, 125, 127, 152, 153, 154, 160, 165, 168, 192, 195, 196, 198, 200, 202, 203, 204, 206, 207, 208, 216, 218, 383, 388, 389, 394, 395, 396, 397, 398, 403, 408, 413, 425, 429, 431, 432, 435, 438, 460, 461, 471, 475, 485, 486, 490, 491, 492, 494, 495, 519, 520, 522, 534, 535, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 569, 570, 571, 572, 573, 574, 575, 584], "bother": 464, "bottom": [403, 405, 455, 471, 476, 477, 478, 482, 484], "bound": [17, 18, 19, 20, 21, 22, 24, 25, 26, 27, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 100, 103, 106, 110, 111, 125, 127, 128, 129, 132, 193, 194, 200, 203, 205, 206, 213, 220, 221, 224, 225, 226, 228, 230, 231, 232, 233, 237, 238, 240, 241, 242, 243, 244, 247, 250, 251, 253, 255, 256, 257, 258, 262, 265, 267, 269, 270, 271, 272, 275, 276, 277, 279, 280, 305, 392, 490, 495], "boundari": [200, 206, 278, 411, 412, 440, 451, 487, 493, 534], "boundary_mask": [206, 491], "boundary_typ": 200, "bounding_box": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40], "bounds_error": [149, 150, 151, 152, 155, 156, 157, 159, 162, 164, 166, 167, 383, 488], "box": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 91, 103, 106, 129, 130, 203, 206, 208, 342, 343, 392, 397, 401, 407, 412, 442, 491, 493, 535], "bpl": [220, 406, 493], "bpwl_norm": 406, "bracket": [152, 213, 447, 449], "brake": 51, "branch": [383, 386, 390, 397, 408, 414, 423], "branchnam": 383, "bratio": 510, "break": [220, 267, 389, 397, 399, 408, 429, 430, 431, 451, 549, 563], "brent": 463, "brentq": [19, 20, 26, 127, 213, 220, 221, 224, 228, 230, 231, 232, 237, 243, 244, 247, 251, 253, 255, 256, 257, 262, 267, 269, 270, 271, 272, 275, 279, 290], "breviti": [467, 522], "brief": 586, "briefli": [499, 500], "bright": [68, 129, 266, 282, 465, 476, 477, 491, 493, 516, 531], "brighter": 471, "brightest": 484, "brigitta": [400, 425, 427, 429, 431, 440, 441, 442, 443, 444, 445, 446, 451], "bring": 388, "broadcast": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 87, 91, 195, 196, 198, 201, 204, 207, 208, 266, 322, 451, 472, 488, 490, 534], "broadcasted_shap": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40], "broken": [220, 267, 409, 413, 453, 481, 536, 568], "brokenpowerlaw": 406, "brokenpowerlawspectralmodel": [261, 267, 406, 432, 493, 549], "brought": 451, "brown": [139, 482], "brown2013": 139, "brows": [87, 91, 384, 420, 508], "browser": [87, 91, 386, 414, 420, 440, 443, 454, 455, 456, 457, 459, 460, 461, 462, 463, 464, 465, 467, 468, 469, 470, 471, 472, 473, 475, 476, 477, 478, 479, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 497, 498, 499, 500, 504, 506, 507, 508, 538, 539, 540, 541, 542, 543, 544, 545, 546, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 569, 570, 571, 572, 573, 574, 575, 576, 577], "bruno": [409, 412, 427, 429, 432, 435, 438, 442, 443, 444, 446, 447, 448, 449, 450, 451], "br\u00fcgge": [443, 444], "bsd": 409, "bst": [87, 91], "buchner": [412, 435], "buchner2023": 412, "budget": 522, "buffer": 361, "bug": [383, 386, 389, 390, 408, 409, 413, 422, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 438, 440, 441, 442, 443, 444, 445, 447, 448], "bugfix": [390, 392, 408, 442, 443], "build": [16, 84, 90, 105, 126, 194, 228, 383, 389, 390, 391, 396, 397, 399, 403, 407, 408, 409, 410, 413, 431, 437, 446, 451, 463, 467, 479, 489, 491, 519, 522, 582], "build_doc": [347, 384, 386, 454, 456, 459, 460, 461, 462, 463, 464, 465, 467, 468, 469, 470, 471, 472, 473, 475, 476, 477, 478, 479, 481, 483, 484, 485, 487, 489, 490, 491, 492, 493, 495, 497, 498, 499, 500, 506, 507, 508, 546, 554, 570], "built": [10, 182, 228, 350, 367, 382, 383, 384, 394, 395, 397, 399, 400, 402, 410, 414, 421, 444, 449, 484, 492, 498, 502, 518], "builtin": 508, "bullet": 388, "bump": [397, 442], "bunch": [104, 109, 384, 582], "bundl": [102, 103, 106, 110, 111, 392, 395, 414, 436, 444, 469, 485, 489, 518, 535, 580, 581], "bunit": [369, 444, 490], "bureaucrat": 388, "burkert": [17, 510], "burn": 412, "burst": 482, "butterfli": [443, 487, 508], "button": [446, 490], "bx": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40], "by_alia": [16, 84, 90, 105, 126], "byte": [16, 84, 87, 90, 91, 105, 126, 328, 361, 383], "bytearrai": [16, 84, 90, 105, 126, 328], "bytestr": [87, 91], "b\u00fchler": 423, "c": [26, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 48, 87, 91, 201, 211, 230, 270, 294, 300, 310, 350, 382, 383, 400, 416, 417, 419, 436, 443, 459, 465, 479, 481, 483, 487, 495, 497, 498, 510, 534, 553, 564, 582, 583, 585], "c0": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40], "c1": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40], "c2bcqxd7": 467, "c7": 102, "c_": 211, "c_0": [193, 194, 203, 206], "c_i": [193, 194, 203, 206], "c_n": [193, 194, 203, 206], "cabot": 451, "cach": [87, 88, 91, 100, 103, 106, 110, 111, 276, 318, 319, 392, 393, 395, 402, 405, 414, 428, 432, 435, 450], "cahil": 437, "cal_gen_92_002": [152, 200], "cal_gen_92_002_summari": 152, "calcul": [13, 15, 19, 20, 26, 96, 106, 111, 138, 139, 140, 141, 181, 220, 221, 224, 228, 230, 231, 232, 237, 243, 244, 247, 251, 253, 255, 262, 267, 269, 270, 271, 272, 275, 278, 279, 296, 298, 299, 307, 309, 332, 365, 373, 374, 393, 396, 425, 431, 435, 436, 437, 443, 448, 450, 454, 479, 482, 483, 486, 495, 506, 507, 510, 522, 581, 585], "caldb": [82, 150, 152, 154, 155, 156, 165, 200, 437, 454, 462, 471, 472, 475, 478, 488, 497], "calendar": [408, 413], "calib_vers": [498, 508], "call": [16, 17, 18, 19, 20, 21, 22, 24, 25, 26, 27, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 83, 84, 86, 87, 90, 91, 102, 103, 105, 106, 110, 111, 126, 138, 139, 140, 141, 149, 150, 151, 152, 155, 156, 157, 159, 162, 164, 166, 167, 177, 193, 194, 203, 206, 213, 220, 221, 222, 223, 224, 227, 228, 230, 231, 232, 235, 236, 237, 239, 243, 244, 245, 247, 251, 252, 253, 254, 255, 256, 257, 259, 262, 263, 264, 266, 267, 268, 269, 270, 271, 272, 274, 275, 278, 279, 281, 322, 334, 355, 361, 369, 372, 380, 383, 384, 386, 388, 389, 392, 395, 396, 397, 398, 399, 401, 403, 405, 407, 409, 411, 412, 414, 416, 420, 431, 435, 449, 459, 460, 469, 484, 485, 486, 487, 489, 490, 493, 498, 500, 506, 507, 508, 518, 522, 531, 532, 533, 534, 535, 582, 583, 584, 585], "callabl": [16, 45, 84, 90, 105, 126, 285, 412], "callback": [171, 582], "caller": [383, 394], "camera": [478, 488, 489], "can": [15, 16, 19, 20, 26, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 46, 47, 50, 56, 67, 68, 69, 77, 82, 83, 84, 87, 90, 91, 93, 103, 105, 106, 109, 110, 111, 115, 120, 124, 125, 126, 127, 132, 133, 135, 136, 143, 145, 150, 155, 163, 165, 168, 172, 178, 181, 193, 194, 195, 196, 198, 200, 201, 203, 204, 205, 206, 207, 208, 210, 213, 217, 219, 220, 221, 223, 224, 226, 227, 228, 230, 231, 232, 236, 237, 239, 241, 243, 244, 247, 250, 251, 252, 253, 255, 256, 257, 262, 263, 264, 267, 268, 269, 270, 271, 272, 274, 275, 278, 279, 290, 292, 297, 310, 322, 323, 328, 331, 340, 359, 361, 376, 380, 382, 383, 384, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 423, 425, 427, 429, 431, 432, 435, 437, 438, 442, 443, 444, 445, 446, 449, 450, 451, 454, 455, 456, 457, 459, 460, 461, 462, 463, 464, 465, 467, 468, 469, 470, 471, 472, 473, 475, 476, 477, 478, 479, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 497, 498, 499, 500, 502, 506, 507, 508, 510, 512, 513, 518, 519, 520, 522, 525, 526, 527, 528, 529, 531, 532, 533, 534, 535, 556, 558, 567, 577, 579, 580, 581, 582, 583, 584, 585], "candel": 228, "candid": [408, 437, 484], "candl": [283, 581], "cannot": [16, 67, 84, 87, 90, 91, 95, 105, 113, 114, 125, 126, 127, 210, 300, 350, 380, 386, 396, 397, 449, 488, 492, 493, 520, 535], "cap": [51, 54], "capabl": [393, 498, 510], "capsiz": 495, "captur": [383, 399], "car": [103, 106, 110, 111, 175, 206, 207, 208, 226, 250, 397, 427, 469, 488, 489, 490, 507, 508], "card": [83, 86, 88, 100, 102, 103, 106, 107, 108, 110, 111, 125, 127, 152, 153, 154, 160, 165, 168, 195, 196, 198, 202, 204, 207, 208, 490], "care": [125, 127, 310, 383, 392, 399, 408, 456, 461, 467, 490, 582], "carefulli": [409, 471, 472, 495], "carina": [33, 38], "carlo": [401, 412, 527, 581], "carri": [398, 406, 408, 410, 435, 457, 507], "carr\u00e9": 206, "cartesian": [41, 46, 196, 207, 208, 313, 315, 448, 508, 534], "case": [15, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 67, 69, 77, 83, 87, 91, 101, 102, 152, 171, 183, 194, 196, 202, 203, 206, 208, 213, 216, 218, 239, 251, 274, 276, 278, 290, 300, 323, 340, 378, 383, 384, 386, 388, 391, 392, 394, 395, 396, 397, 398, 399, 400, 402, 403, 404, 405, 406, 407, 409, 410, 413, 414, 416, 424, 425, 428, 431, 437, 438, 443, 449, 450, 454, 456, 459, 460, 461, 462, 464, 465, 467, 471, 472, 475, 476, 478, 479, 482, 484, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 498, 500, 502, 506, 508, 517, 520, 521, 522, 532, 535, 539, 540, 541, 544, 545, 549, 558, 565, 580, 582, 584], "casebattacharya1998": [29, 30, 35, 36, 39, 40, 48], "cash": [103, 106, 110, 111, 175, 295, 300, 383, 395, 435, 462, 464, 467, 475, 478, 485, 489, 492, 495, 506, 507, 518, 581], "cash1979": [581, 584], "cashcountsstatist": [420, 450, 582, 584], "cast": 91, "cat": [66, 67, 79, 391, 414, 442, 443, 457, 484, 493, 517, 581, 582], "catalof": 69, "catalog": [6, 45, 46, 47, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 124, 128, 397, 403, 423, 427, 429, 431, 435, 436, 437, 440, 441, 442, 443, 444, 446, 450, 451, 453, 455, 457, 463, 468, 485, 493, 496, 498, 502, 512, 546, 580, 581], "catalog_3fgl": 457, "catalog_3fhl": [457, 484], "catalog_3fhl_bright": 484, "catalog_4fgl": 484, "catalog_4fgl_roi": 484, "catalog_gammacat": [457, 484], "catalog_hgp": 484, "catalog_registri": [457, 484, 491], "catalogimageestim": 444, "catalogu": [78, 435, 442], "catch_warn": 522, "categori": [383, 394, 407, 435, 451, 491, 493, 536], "caus": [390, 397, 444, 447, 522], "cautious": 470, "caveat": [213, 306, 450, 540], "cax": 488, "cb98": 48, "cbar": 371, "cbar_kw": 377, "cbarlabel": 377, "cc": [392, 397, 399, 402, 404, 406, 409, 411], "ccube": [194, 195, 196, 198, 199, 200, 206, 207, 208, 490], "cd": [383, 384, 386, 399, 416, 417, 418], "cdelt": [206, 208], "cdelt1": 490, "cdelt2": 490, "cdf": [332, 396, 412, 471, 487], "cdot": [51, 52, 53, 54, 103, 110, 255, 270, 406, 493, 518, 539, 544, 545, 549, 552, 553, 560, 561, 563, 564, 565, 566, 571, 572, 573, 575, 583], "celesti": [490, 534, 539, 543, 586], "celfix": 546, "cell": [391, 420, 446, 468, 479, 490, 497, 498, 508], "center": [17, 18, 21, 22, 23, 24, 25, 27, 41, 83, 87, 91, 96, 103, 106, 110, 111, 113, 114, 125, 127, 129, 130, 131, 135, 152, 153, 154, 155, 156, 157, 160, 164, 165, 166, 168, 175, 178, 179, 181, 182, 183, 185, 186, 188, 189, 194, 195, 196, 197, 198, 199, 200, 203, 204, 205, 206, 207, 208, 209, 222, 223, 226, 227, 236, 239, 250, 252, 254, 263, 264, 266, 268, 274, 276, 278, 312, 316, 342, 383, 384, 397, 399, 406, 407, 425, 426, 435, 437, 450, 454, 456, 459, 461, 462, 463, 464, 465, 467, 469, 471, 472, 473, 477, 478, 479, 481, 483, 488, 489, 490, 491, 492, 493, 497, 498, 507, 508, 524, 525, 526, 527, 528, 529, 531, 532, 534, 535, 539, 540, 543], "center_coord": [193, 194, 199, 203, 206], "center_pix": [193, 194, 203, 206], "center_ski": 535, "center_skydir": [193, 194, 203, 206, 489, 490, 498, 499, 529, 531, 532], "centr": [483, 491, 510], "central": [395, 404, 457, 508], "cern": 510, "certain": [50, 83, 87, 91, 213, 297, 382, 397, 399, 401, 407, 454, 483, 489, 490, 498, 517, 535], "certainli": 386, "certif": 409, "certifi": 409, "cfa": [213, 487], "cff": 413, "cg": 514, "ch": 53, "chain": [171, 396, 399, 412, 429, 489, 522, 532, 581], "chainer": 401, "chakraborti": [441, 442], "challeng": [390, 392, 396, 442, 465, 467, 469, 497], "chanc": 388, "chang": [16, 19, 20, 26, 84, 86, 87, 90, 91, 105, 125, 126, 127, 194, 203, 206, 220, 221, 224, 228, 230, 231, 232, 237, 241, 243, 244, 247, 251, 253, 255, 256, 257, 262, 267, 269, 270, 271, 272, 275, 279, 358, 368, 384, 386, 387, 388, 390, 391, 392, 393, 394, 395, 396, 397, 398, 400, 401, 402, 403, 405, 407, 408, 409, 413, 414, 422, 424, 425, 426, 427, 428, 429, 430, 431, 432, 435, 437, 441, 442, 443, 444, 445, 447, 452, 461, 462, 463, 469, 471, 472, 476, 481, 482, 485, 486, 487, 491, 493, 495, 497, 506, 518, 522, 529, 531, 535, 546, 554, 582], "changelog": [383, 413, 436, 444], "channel": [19, 20, 26, 382, 385, 386, 400, 443, 472, 483, 490, 500, 510], "channel0": 510, "channel1": 510, "channel_registri": [19, 20, 26], "chapter": 483, "charact": [87, 91, 383, 492], "character": [299, 407, 471], "characterist": [21, 25, 27, 51, 52, 53, 54, 139, 297, 394, 449, 482, 581], "charg": [409, 413, 558], "chatti": [383, 469], "cheat": 419, "check": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 82, 83, 86, 87, 88, 91, 103, 106, 107, 110, 111, 125, 127, 152, 153, 154, 160, 165, 168, 193, 194, 195, 196, 197, 198, 199, 200, 203, 204, 205, 206, 207, 208, 217, 219, 226, 250, 266, 306, 357, 359, 386, 399, 405, 409, 413, 414, 416, 417, 418, 421, 430, 435, 443, 451, 457, 475, 481, 488, 502, 510, 522, 526, 535, 579, 582, 583], "check_limit": [216, 217, 218, 219], "check_random_st": 383, "check_tutorials_setup": [454, 456, 459, 460, 461, 462, 463, 464, 465, 467, 468, 469, 470, 471, 472, 473, 476, 477, 478, 479, 483, 484, 485, 487, 489, 490, 491, 492, 493, 495, 497, 498, 499, 500, 506, 507, 508], "checker": [441, 444], "checklist": 414, "checkout": [383, 386, 413, 426, 467, 471, 493], "checksum": [83, 86, 88, 100, 102, 103, 106, 107, 108, 110, 111, 125, 127, 152, 153, 154, 160, 165, 168, 195, 196, 198, 202, 204, 207, 208, 214, 226, 250, 346, 349, 352, 450, 468, 498], "chen": 444, "cherenkov": [155, 396, 416, 421, 456, 459, 465, 476, 489, 497, 499, 531, 532, 581], "cherri": [383, 390, 397, 408], "chi": [296, 398, 583, 584, 585], "chi2": [102, 137, 146, 395, 426, 459, 470, 478, 487, 518, 584], "chi2assym": 429, "child": 393, "children": [467, 475, 490, 506, 507], "chime": 386, "chisq": 296, "chisquar": 296, "chmod": 582, "choic": [138, 396, 400, 402, 409, 412, 459, 460, 462, 464, 487, 499, 506, 523, 579, 582], "choos": [45, 77, 193, 194, 197, 199, 200, 203, 206, 279, 324, 395, 397, 399, 403, 412, 416, 418, 435, 457, 459, 463, 467, 469, 478, 485, 487, 489, 490, 492, 493, 494, 498, 507, 522, 582], "chose": [471, 498, 499, 584, 586], "chosen": [26, 152, 165, 168, 194, 195, 196, 204, 207, 208, 226, 236, 250, 383, 386, 398, 399, 402, 460, 477, 489, 490, 494, 495, 499, 506, 520, 530, 531, 535], "christoph": [388, 389, 390, 391, 392, 393, 394, 395, 397, 399, 400, 401, 402, 403, 423, 424, 425, 426, 427, 428, 429, 430, 436, 439, 440, 441, 442, 443, 444, 445], "chrome": [87, 91], "chromei": 437, "chunk": [154, 165, 168], "chunk_siz": [154, 165, 168], "ci": [383, 386, 390, 409, 414, 429, 435, 437, 440, 446], "circl": [83, 183, 380, 384, 397, 437, 459, 469, 478, 483, 489, 491, 494, 497, 507, 508, 519, 529, 531, 532, 535], "circle_area": 384, "circleannulusskyregion": [263, 264, 531], "circledast": 518, "circlepixelregion": 397, "circleskyregion": [103, 106, 110, 111, 177, 178, 182, 206, 227, 384, 397, 454, 456, 459, 461, 462, 465, 467, 469, 471, 472, 477, 481, 483, 485, 489, 491, 492, 507, 529, 531, 532, 535], "circular": [91, 103, 106, 182, 194, 196, 206, 394, 402, 404, 456, 461, 485, 494, 531, 535], "circumv": [19, 20, 26, 220, 221, 224, 228, 230, 231, 232, 237, 243, 244, 247, 251, 253, 255, 256, 257, 262, 267, 269, 270, 271, 272, 275, 279], "cirelli": [26, 510], "citat": 413, "cite": [386, 409], "cl": [16, 84, 90, 103, 105, 110, 126, 410], "clabel": 487, "claim": 412, "clang": 420, "clarif": 388, "clarifi": [407, 449], "class": [6, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 291, 293, 318, 319, 322, 330, 332, 357, 370, 386, 389, 392, 395, 396, 397, 398, 399, 401, 402, 403, 404, 405, 406, 411, 412, 416, 420, 423, 425, 426, 427, 428, 429, 430, 431, 432, 435, 436, 437, 439, 440, 441, 442, 443, 444, 445, 446, 448, 449, 450, 451, 454, 457, 459, 460, 461, 462, 463, 464, 465, 469, 471, 472, 475, 476, 479, 484, 485, 486, 487, 488, 489, 490, 493, 495, 497, 498, 499, 506, 508, 513, 517, 518, 519, 520, 521, 522, 524, 525, 526, 527, 530, 532, 533, 534, 535, 536, 558, 567, 579, 580, 581, 582, 587], "class1": 484, "class2": 484, "classic": [392, 401, 412, 416, 425, 456, 459, 465, 469, 485, 489, 520, 522, 531, 532, 581, 584], "classifi": 499, "classmethod": [16, 19, 20, 26, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 56, 82, 83, 84, 85, 86, 87, 88, 90, 91, 92, 94, 100, 102, 103, 105, 106, 110, 111, 125, 126, 127, 149, 150, 151, 152, 153, 154, 155, 156, 157, 159, 160, 162, 163, 164, 165, 166, 167, 168, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 211, 217, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 247, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 274, 275, 276, 277, 278, 279, 280, 281, 410], "classproperti": 435, "classvar": [16, 84, 90, 105, 126], "claudio": [448, 450, 451], "claus": [383, 409], "clean": [383, 384, 386, 391, 392, 397, 399, 401, 423, 425, 426, 427, 428, 429, 430, 431, 432, 435, 442, 443, 444, 445], "cleaner": 446, "cleanup": [390, 402, 414, 423, 428, 429, 434, 435, 436, 440, 441, 443, 451], "clear": [92, 100, 202, 250, 383, 388, 390, 394, 397, 398, 402, 403, 404, 443, 470, 586], "clearer": 428, "clearli": [139, 383, 388, 389, 397, 400, 408], "cli": [11, 399, 445, 580], "click": [382, 399, 400, 420, 428, 443, 454, 456, 459, 460, 461, 462, 463, 464, 465, 467, 468, 469, 470, 471, 472, 473, 476, 477, 478, 479, 483, 484, 485, 487, 489, 490, 491, 492, 493, 495, 497, 498, 499, 500, 506, 507, 508, 582], "clip": [19, 20, 26, 193, 194, 197, 199, 200, 203, 205, 206, 220, 221, 224, 228, 230, 231, 232, 237, 243, 244, 247, 251, 253, 255, 256, 257, 262, 267, 269, 270, 271, 272, 275, 278, 279, 322, 428, 429, 463], "clockwis": [227, 236, 239, 539], "clone": [386, 417, 444], "close": [149, 150, 151, 152, 155, 156, 157, 159, 162, 164, 166, 167, 194, 195, 196, 197, 198, 199, 200, 203, 204, 205, 206, 207, 208, 278, 358, 359, 360, 392, 397, 413, 438, 449, 450, 451, 487, 567], "closer": 508, "closest": [120, 124, 128, 132, 135, 193, 194, 195, 196, 198, 203, 204, 206, 207, 208, 486, 491, 520], "cloud": [414, 502], "cluster": [6, 96, 308, 309, 396, 412, 449, 450, 453, 496, 502, 519, 522], "clutter": [467, 522], "cm": [19, 20, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 45, 51, 52, 53, 54, 67, 102, 127, 133, 135, 220, 224, 230, 232, 237, 244, 248, 255, 257, 266, 267, 270, 271, 272, 282, 368, 394, 406, 455, 456, 457, 459, 460, 461, 462, 463, 464, 467, 468, 469, 470, 471, 472, 475, 477, 478, 479, 483, 484, 486, 487, 493, 495, 497, 498, 506, 508, 515, 516, 520, 522, 538, 539, 540, 541, 543, 544, 545, 546, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 569, 570, 571, 572, 573, 574, 575, 576, 577, 581], "cm2": [51, 54, 67, 108, 127, 144, 155, 208, 283, 368, 454, 455, 457, 459, 460, 462, 463, 467, 468, 469, 471, 472, 475, 476, 477, 478, 479, 481, 483, 484, 485, 486, 490, 492, 493, 495, 498, 506, 507, 508, 520, 535, 551, 554, 557, 562, 567], "cm3": [17, 18, 19, 21, 22, 24, 25, 27, 52, 483], "cm5": 483, "cmap": [103, 106, 110, 111, 373, 374, 461, 467, 483, 490, 492, 498, 499, 506, 507, 531], "cmb": 558, "co": [53, 201, 408, 409, 454, 539, 540, 541], "coadd": [195, 196, 198, 204, 207, 208], "coars": 485, "coarser": [200, 205, 485], "codaci": 414, "codata": 52, "code": [19, 20, 26, 82, 83, 87, 91, 152, 220, 221, 224, 228, 230, 231, 232, 237, 243, 244, 247, 251, 253, 255, 256, 257, 262, 267, 269, 270, 271, 272, 275, 279, 378, 386, 387, 388, 390, 391, 393, 396, 397, 398, 399, 400, 401, 402, 403, 404, 406, 407, 408, 409, 410, 412, 417, 420, 423, 426, 427, 429, 430, 431, 432, 435, 437, 440, 441, 442, 443, 444, 446, 449, 451, 454, 455, 456, 457, 459, 460, 461, 462, 463, 464, 465, 467, 468, 469, 470, 471, 472, 473, 475, 476, 477, 478, 479, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 497, 498, 499, 500, 502, 504, 506, 507, 508, 510, 522, 529, 536, 538, 539, 540, 541, 542, 543, 544, 545, 546, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 569, 570, 571, 572, 573, 574, 575, 576, 577, 579, 582], "codebas": [384, 400, 412, 423, 442, 444], "codemeta": 437, "codespel": 435, "codestyl": 386, "coe1oftx": 481, "coeffici": [130, 242, 247, 548], "coerce_numbers_to_str": 105, "coerce_unit": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40], "coher": 451, "coincid": 482, "col": [87, 91, 435], "col0": [87, 91], "col1": [87, 91], "col2": [87, 91], "col_b": [87, 91], "col_c": [87, 91], "col_d": [87, 91], "col_fit_deriv": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40], "col_label": 377, "collabor": [77, 373, 374, 388, 390, 392, 396, 437, 470, 498, 581], "colleagu": [386, 412, 582], "collect": [202, 250, 383, 385, 410, 412, 414, 442, 443, 460, 485, 492, 510, 519, 523, 527, 581, 586], "collis": 50, "colnam": [87, 91, 195, 196, 198, 204, 207, 208, 498, 508], "color": [102, 110, 111, 149, 150, 208, 372, 373, 374, 377, 380, 384, 454, 455, 457, 459, 460, 461, 462, 463, 465, 467, 469, 470, 473, 476, 479, 483, 486, 487, 489, 492, 494, 495, 522, 531, 535, 539, 540, 558, 567], "colorbar": [127, 149, 150, 152, 155, 156, 157, 162, 163, 164, 166, 208, 371, 377, 481, 487, 490], "colorblind": 522, "colorblind10": 522, "colormap": [372, 373, 374, 423, 436, 508], "colormap_hess": [404, 587], "colormap_milagro": 587, "colour": 446, "column": [41, 43, 44, 46, 47, 56, 83, 87, 91, 104, 109, 125, 127, 130, 143, 149, 150, 152, 176, 195, 196, 197, 198, 199, 200, 204, 205, 207, 208, 277, 299, 308, 353, 354, 355, 356, 376, 377, 380, 381, 383, 396, 398, 407, 446, 449, 450, 454, 472, 479, 484, 490, 493, 497, 519, 522], "column_nam": 488, "column_prefix": 200, "columnclass": [87, 91], "columnspac": 380, "com": [137, 139, 146, 306, 337, 338, 350, 386, 403, 413, 414, 417], "combin": [99, 102, 103, 106, 110, 111, 136, 145, 147, 181, 189, 195, 196, 198, 203, 204, 207, 208, 221, 266, 383, 389, 393, 394, 395, 396, 397, 398, 403, 406, 416, 428, 443, 449, 451, 457, 462, 467, 468, 475, 478, 485, 487, 488, 489, 490, 491, 493, 499, 507, 508, 510, 512, 522, 529, 534, 550, 580, 581], "combine_flux_map": [145, 451], "combine_significance_map": 146, "combined_ev": 519, "combining_and_defin": [454, 462, 464, 467, 469, 475, 478, 497], "come": [69, 386, 389, 390, 391, 392, 393, 397, 398, 399, 400, 402, 403, 408, 410, 413, 414, 431, 432, 435, 444, 445, 449, 459, 467, 475, 493, 497, 506, 582], "comma": [71, 72, 74, 75, 76, 78, 79, 80, 484], "command": [6, 13, 94, 102, 127, 156, 162, 164, 166, 382, 384, 386, 391, 392, 394, 399, 400, 414, 415, 416, 417, 418, 419, 425, 429, 440, 443, 444, 446, 471, 521, 580], "commensur": 208, "comment": [127, 383, 384, 388, 392, 396, 397, 399, 400, 402, 404, 406, 408, 409, 412], "commit": [383, 386, 391, 397, 408, 409, 413, 422, 423, 446], "committe": [388, 390, 408, 409], "commod": 409, "common": [95, 382, 383, 384, 386, 388, 389, 397, 399, 403, 404, 406, 407, 409, 417, 419, 420, 435, 437, 460, 461, 473, 484, 488, 491, 493, 506, 507, 510, 517, 520, 521, 535, 540, 582], "common_irf_head": 488, "commonli": [29, 83, 397, 401, 412, 444, 473, 510, 579, 580, 582, 584, 587], "commun": [383, 399, 405, 409, 413, 415, 421, 500], "comp": 484, "compact": [16, 84, 87, 90, 91, 105, 126], "compar": [87, 91, 128, 129, 132, 133, 149, 150, 151, 152, 155, 156, 157, 159, 162, 164, 166, 167, 194, 195, 196, 198, 203, 204, 206, 207, 208, 213, 289, 383, 397, 400, 403, 412, 432, 448, 449, 454, 455, 456, 459, 463, 467, 470, 473, 475, 477, 481, 484, 487, 489, 495, 498, 506, 517, 581, 583], "comparison": [86, 87, 91, 100, 132, 149, 150, 151, 152, 155, 156, 157, 159, 162, 164, 166, 167, 194, 195, 196, 198, 200, 203, 204, 206, 207, 208, 340, 440, 512], "compat": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 87, 91, 195, 196, 198, 207, 208, 234, 388, 390, 394, 397, 406, 408, 410, 411, 420, 423, 425, 427, 444, 450, 451, 490, 534], "compil": [386, 436], "complain": 386, "complaint": 401, "complement": 403, "complementari": [102, 136, 145, 459], "complet": [13, 16, 84, 90, 105, 126, 340, 383, 389, 393, 394, 395, 396, 397, 400, 401, 403, 407, 408, 409, 412, 413, 417, 422, 424, 425, 426, 427, 428, 429, 430, 431, 432, 435, 437, 440, 441, 442, 443, 444, 445, 467, 472, 487, 494, 502, 522, 527], "complex": [383, 384, 389, 393, 397, 398, 399, 405, 407, 412, 420, 451, 456, 459, 469, 472, 478, 482, 485, 490, 491, 493, 494, 498, 531], "complianc": [409, 446], "compliant": [195, 196, 198, 207, 208, 450, 581], "complic": [397, 535], "compon": [15, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 67, 80, 81, 88, 103, 104, 106, 109, 110, 111, 132, 139, 167, 169, 203, 226, 250, 251, 266, 282, 394, 395, 396, 399, 405, 406, 425, 429, 431, 435, 443, 444, 455, 460, 461, 462, 464, 467, 468, 469, 470, 471, 472, 475, 476, 477, 478, 481, 484, 485, 486, 492, 493, 497, 498, 506, 507, 510, 518, 520, 522, 535, 538, 539, 540, 541, 542, 543, 544, 545, 546, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 569, 570, 571, 572, 573, 574, 575, 576, 577, 579, 581], "component_1": 394, "component_2": 394, "component_class": 484, "components_model": 80, "components_statu": 67, "compos": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 389, 409], "composit": [57, 70, 80, 321, 409, 442], "compound": [203, 210, 221, 341, 345, 397, 406, 453, 455, 473, 536, 568], "compoundmodel": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 437], "compoundpixelregion": 345, "compoundskymodel": 394, "compoundskyregion": [210, 341, 345], "compoundsourcemodel": 394, "compoundspectralmodel": [261, 406, 449, 455, 493, 498, 548, 550, 554, 557, 559, 562, 567], "compress": 391, "compris": 499, "compromis": [383, 388, 396, 495], "compton": [251, 431, 558], "compulsori": 493, "comput": [16, 19, 20, 23, 26, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 83, 84, 86, 88, 90, 94, 96, 100, 102, 103, 105, 106, 110, 111, 120, 122, 124, 125, 126, 127, 128, 129, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 143, 145, 146, 149, 150, 151, 152, 153, 154, 155, 156, 157, 159, 160, 162, 163, 164, 165, 166, 167, 168, 170, 181, 182, 184, 187, 188, 189, 190, 192, 194, 195, 196, 198, 200, 203, 204, 205, 206, 207, 208, 209, 213, 220, 221, 224, 226, 228, 230, 231, 232, 237, 241, 243, 244, 247, 250, 251, 253, 255, 256, 257, 262, 267, 269, 270, 271, 272, 275, 277, 279, 282, 283, 289, 290, 291, 293, 296, 297, 298, 299, 301, 305, 306, 309, 313, 314, 317, 383, 392, 393, 394, 395, 396, 397, 398, 401, 403, 404, 405, 406, 407, 411, 412, 414, 416, 417, 421, 423, 425, 426, 427, 428, 431, 432, 434, 435, 436, 438, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 456, 461, 463, 467, 468, 472, 473, 476, 477, 479, 482, 483, 485, 486, 489, 492, 493, 494, 495, 498, 499, 500, 506, 508, 510, 518, 520, 522, 527, 531, 558, 580, 581, 582, 583, 584, 585, 586], "computation": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 213, 396, 397, 518], "compute_chisq": 442, "compute_differential_jfactor": 23, "compute_errn": [291, 293, 446, 584], "compute_errp": [291, 293, 584], "compute_flux_doubl": 139, "compute_fpp": 140, "compute_fvar": [141, 298], "compute_jfactor": [23, 483], "compute_lightcurve_doublingtim": 482, "compute_lightcurve_fpp": 482, "compute_lightcurve_fvar": 482, "compute_lima_map": 431, "compute_npr": 396, "compute_upper_limit": [291, 293], "computedfieldinfo": [16, 84, 90, 105, 126], "con": [383, 399], "concaten": [83, 86, 92, 197, 200, 395, 399, 405, 449, 490], "concentr": 342, "concept": [16, 84, 90, 105, 126, 403, 404, 410, 412, 421, 483, 490, 523], "conception": [396, 405], "conceptu": 412, "concern": [386, 388, 397, 399, 400, 402, 404, 406, 409, 435, 445, 499, 584], "conclud": 392, "concret": [16, 84, 90, 105, 126, 400, 403], "conda": [382, 386, 390, 391, 400, 403, 408, 413, 414, 416, 417, 418, 419, 420, 425, 427, 443, 444, 582], "condit": [52, 53, 148, 200, 217, 219, 226, 250, 407, 411, 432, 451, 454, 459, 462, 472, 484, 491, 492, 494, 499, 518, 527], "conduct": [446, 478], "cone": [91, 397, 460, 494, 506, 507, 522], "conesearch": 399, "conf": [87, 91, 383, 384, 414, 426, 441], "conf_1d": 476, "conf_3d": 476, "conf_max": [216, 218], "conf_min": [216, 218], "confid": [124, 213, 216, 218, 291, 293, 394, 401, 426, 431, 445, 581, 584], "confidence_opt": [213, 486], "config": [15, 16, 84, 90, 105, 126, 382, 384, 389, 391, 392, 399, 400, 403, 410, 416, 418, 428, 429, 430, 435, 443, 460, 467, 506, 579], "config_dict": 506, "config_joint": 467, "config_paramet": [120, 122, 123, 124, 128, 129, 131, 132, 133, 134, 135], "config_stack": 467, "config_str": 16, "configdict": [16, 84, 90, 105, 126], "configpars": 441, "configur": [11, 15, 16, 46, 84, 87, 90, 91, 101, 102, 105, 110, 111, 120, 122, 123, 124, 126, 128, 129, 131, 132, 133, 134, 135, 330, 383, 384, 386, 392, 394, 398, 399, 403, 404, 410, 413, 414, 420, 428, 430, 431, 435, 437, 446, 449, 450, 459, 461, 463, 469, 471, 472, 481, 497, 502, 521, 522, 527, 581, 582], "confirm": [386, 413], "conflict": [87, 91, 383, 386, 409], "confluenc": 500, "conform": [16, 84, 90, 105, 126, 490], "confus": [383, 384, 389, 402], "connect": [393, 459, 473, 475, 491, 507, 579], "consant": [195, 196, 198, 204, 207, 208], "consciou": 388, "consecut": [178, 340, 383, 408], "consensu": [388, 409], "consent": 383, "consequ": [409, 472, 535], "conserv": [518, 543], "consid": [19, 20, 59, 96, 175, 182, 185, 186, 188, 189, 196, 208, 216, 220, 223, 224, 227, 228, 230, 231, 232, 233, 236, 237, 238, 239, 240, 241, 242, 243, 244, 247, 251, 254, 255, 256, 257, 258, 262, 263, 264, 265, 267, 270, 271, 272, 277, 278, 289, 379, 388, 389, 394, 395, 397, 398, 399, 400, 401, 402, 403, 405, 409, 411, 456, 459, 461, 467, 471, 472, 482, 488, 491, 519, 522, 527, 585], "consider": [399, 425, 435, 443, 467], "consist": [74, 91, 95, 125, 127, 153, 154, 165, 168, 193, 194, 195, 196, 198, 203, 206, 207, 208, 236, 239, 383, 393, 394, 396, 397, 398, 403, 410, 428, 429, 430, 431, 432, 439, 443, 444, 446, 448, 449, 450, 460, 461, 462, 463, 470, 475, 478, 487, 489, 490, 493, 495, 506, 556, 558, 583], "consol": [383, 582], "consortium": [410, 497], "const": [222, 223, 224, 225, 406, 472, 493, 551, 569], "const3d": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40], "const_norm": 406, "constant": [50, 51, 52, 53, 103, 110, 120, 155, 195, 196, 198, 204, 206, 207, 208, 222, 223, 224, 225, 227, 240, 242, 339, 396, 397, 402, 443, 453, 476, 498, 515, 518, 536, 547, 568, 578, 581, 585], "constant_model": 569, "constantmodel": 445, "constantnormspectralmodel": 406, "constantspatialmodel": [260, 406, 493, 498, 538], "constantspectralmodel": [261, 406, 472, 493, 551], "constanttemporalmodel": [273, 406, 428, 493, 569], "constitu": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40], "constitut": 485, "constrain": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 409, 455, 464, 468, 489, 495, 529], "constraint": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 522], "construct": [16, 84, 90, 105, 126, 200, 243, 244, 348, 535, 581], "constructor": [193, 194, 195, 196, 198, 200, 203, 204, 205, 206, 207, 208, 449, 507, 533], "consult": 419, "consum": [412, 487, 522], "contact": [385, 390, 392, 409, 419, 421, 424, 425, 426, 440, 443], "contain": [13, 16, 19, 20, 26, 57, 59, 63, 67, 69, 82, 83, 84, 86, 87, 88, 90, 91, 92, 95, 96, 100, 102, 103, 105, 106, 109, 110, 111, 113, 114, 118, 125, 126, 127, 135, 136, 137, 138, 143, 145, 146, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 159, 160, 162, 163, 164, 165, 166, 167, 168, 169, 170, 175, 177, 180, 182, 187, 190, 192, 193, 194, 195, 196, 198, 199, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 213, 217, 220, 221, 222, 223, 224, 225, 226, 227, 228, 230, 231, 232, 233, 236, 237, 238, 239, 240, 241, 242, 243, 244, 247, 248, 250, 251, 252, 253, 254, 255, 256, 257, 258, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 274, 275, 277, 278, 279, 280, 297, 308, 309, 376, 378, 380, 381, 383, 386, 387, 389, 391, 392, 393, 396, 397, 398, 399, 400, 402, 403, 404, 405, 407, 409, 412, 413, 414, 421, 425, 429, 430, 431, 432, 434, 435, 437, 438, 441, 442, 443, 444, 445, 449, 450, 451, 454, 457, 459, 460, 461, 464, 467, 468, 471, 472, 475, 476, 477, 479, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 497, 498, 499, 500, 506, 507, 508, 510, 511, 513, 518, 519, 520, 522, 526, 530, 531, 534, 535, 536, 579, 581, 583, 584, 585], "containment_correct": [16, 103, 106, 182, 454, 459, 460, 461, 464, 465, 467, 469, 476, 477, 479, 481, 485, 489, 506], "containment_fract": 96, "containment_radiu": [156, 162, 164, 165, 166, 168, 454, 485, 488, 491], "containment_radius_map": [165, 168], "contains_pix": [193, 194, 203, 206], "contains_wcs_pix": 203, "contamin": [67, 465, 484, 491, 531], "content": [84, 90, 105, 126, 127, 195, 196, 198, 204, 207, 208, 346, 349, 383, 386, 388, 392, 398, 403, 410, 414, 429, 438, 443, 456, 490, 491, 497, 499, 519, 522, 533, 534], "content_typ": [16, 84, 90, 105, 126], "context": [16, 84, 87, 90, 91, 105, 126, 217, 219, 226, 250, 330, 361, 383, 398, 409, 414, 450, 490, 512], "contigu": [200, 205, 435], "continu": [200, 390, 392, 393, 396, 397, 399, 400, 402, 403, 408, 420, 423, 424, 427, 435, 440, 441, 442, 444, 459, 472, 481, 491, 534, 581], "continuous_upd": [467, 475, 490, 506, 507], "contour": [210, 213, 375, 392, 412, 445], "contour_": 487, "contourf": 208, "contract": 409, "contrari": [384, 391], "contrast": [403, 581], "contrera": 445, "contribut": [100, 116, 119, 226, 234, 250, 266, 379, 383, 385, 392, 397, 405, 407, 414, 421, 424, 435, 437, 439, 489, 523, 558, 579, 582, 583], "contributes_to_stat": 100, "contributor": [383, 386, 403, 414, 422, 433, 434], "control": [83, 87, 91, 103, 106, 110, 111, 383, 396, 415, 417, 454, 483, 490, 495, 522, 584], "controversi": [383, 388, 389, 403], "conveni": [13, 125, 382, 383, 386, 393, 397, 405, 407, 415, 425, 427, 432, 435, 437, 442, 469, 481, 483, 484, 485, 490, 491, 492, 493, 497, 499, 508, 517, 521, 580], "convent": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 152, 194, 195, 196, 198, 206, 207, 208, 405, 407, 427, 428, 431, 432, 446, 451, 485, 489, 490, 493, 518, 520, 527, 534, 584], "converg": [411, 426, 447, 459, 461, 467, 481, 487, 518, 522, 529, 539], "convers": [84, 87, 90, 91, 105, 125, 126, 127, 136, 145, 388, 407, 410, 416, 418, 435, 448, 449, 450, 454, 535], "conversion_typ": [498, 508], "convert": [16, 19, 23, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 50, 83, 85, 86, 87, 91, 99, 102, 103, 106, 108, 110, 111, 125, 127, 130, 149, 150, 151, 152, 153, 154, 155, 156, 157, 159, 160, 162, 164, 165, 166, 167, 168, 178, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 212, 215, 216, 217, 218, 219, 226, 241, 250, 289, 307, 310, 311, 315, 328, 344, 364, 366, 367, 384, 389, 397, 398, 407, 410, 414, 436, 448, 449, 450, 451, 454, 463, 470, 477, 478, 481, 485, 486, 487, 491, 492, 497, 508, 520, 526, 531, 534, 584, 586], "convert_bytestring_to_unicod": [87, 91], "convert_unicode_to_bytestr": [87, 91], "convinc": 508, "convolut": [120, 124, 130, 135, 163, 196, 208, 382, 395, 401, 423, 430, 432, 441, 443, 444, 450, 451, 465, 490, 518, 535], "convolution_method": 196, "convolv": [106, 112, 117, 135, 163, 196, 208, 394, 423, 432, 435, 444, 462, 463, 465, 490, 528, 558], "convolve_ful": 196, "convolve_wc": 196, "cookiecutt": 399, "coolwarm": [467, 498, 499, 507], "coord": [13, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 83, 193, 194, 195, 196, 197, 198, 199, 200, 201, 203, 204, 205, 206, 207, 208, 252, 297, 394, 428, 472, 490, 491, 531, 534, 535, 542], "coord_to_idx": [193, 194, 197, 199, 200, 203, 205, 206, 490], "coord_to_pix": [193, 194, 197, 199, 200, 203, 205, 206, 490], "coordiant": 488, "coordin": [6, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 41, 46, 47, 83, 85, 87, 88, 89, 91, 94, 95, 96, 103, 104, 106, 109, 110, 111, 113, 114, 125, 127, 129, 130, 131, 139, 143, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 162, 164, 165, 166, 167, 168, 178, 188, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 203, 204, 205, 206, 207, 208, 226, 227, 236, 239, 241, 250, 252, 254, 263, 264, 266, 278, 297, 301, 306, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 322, 332, 338, 342, 343, 359, 384, 388, 389, 390, 392, 396, 397, 402, 403, 406, 408, 409, 423, 425, 428, 430, 441, 443, 444, 446, 454, 456, 459, 461, 462, 465, 469, 470, 471, 472, 473, 475, 476, 477, 478, 479, 481, 483, 485, 488, 489, 490, 491, 492, 493, 494, 497, 498, 499, 500, 507, 508, 518, 526, 531, 533, 534, 539, 540, 543, 580, 581, 586], "coordsi": 430, "copi": [11, 16, 19, 20, 26, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 82, 83, 84, 86, 87, 88, 89, 90, 91, 92, 99, 100, 102, 103, 105, 106, 109, 110, 111, 120, 122, 123, 124, 125, 126, 127, 128, 129, 131, 132, 133, 134, 135, 153, 154, 157, 160, 165, 168, 193, 194, 195, 196, 197, 198, 199, 200, 201, 203, 204, 205, 206, 207, 208, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 247, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 274, 275, 276, 277, 278, 279, 280, 281, 310, 355, 383, 388, 391, 393, 397, 399, 405, 412, 413, 414, 420, 435, 437, 444, 445, 446, 449, 451, 455, 456, 459, 461, 462, 467, 469, 475, 477, 478, 481, 484, 487, 489, 493, 495, 498, 522, 531, 535, 546, 582], "copy_data": [87, 91, 226, 234, 250, 266, 274, 276, 278], "copy_indic": [87, 91], "copy_ob": [82, 522], "copy_on_getitem": [87, 91], "copyright": 420, "core": [16, 53, 84, 90, 105, 126, 161, 382, 383, 390, 396, 397, 404, 408, 409, 412, 413, 421, 424, 441, 445, 449, 454, 461, 462, 464, 467, 469, 471, 473, 475, 478, 481, 492, 497, 510, 520, 582], "corner": [397, 400, 412, 454, 456, 459, 460, 461, 462, 463, 464, 465, 467, 468, 469, 470, 471, 472, 473, 476, 477, 478, 479, 483, 484, 485, 487, 489, 490, 491, 492, 493, 495, 497, 498, 499, 500, 506, 507, 508], "corr_coord": [165, 168], "correct": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 67, 83, 88, 103, 104, 106, 154, 165, 168, 182, 187, 188, 201, 234, 252, 253, 278, 383, 395, 396, 408, 409, 410, 412, 413, 427, 430, 432, 433, 434, 435, 438, 441, 442, 444, 446, 447, 448, 449, 450, 451, 454, 455, 459, 460, 461, 462, 471, 475, 476, 484, 485, 487, 489, 491, 492, 493, 495, 499, 506, 508, 519, 520, 529, 542, 554, 557, 559, 562, 567], "correctli": [19, 20, 26, 77, 101, 153, 154, 160, 165, 168, 220, 221, 224, 228, 230, 231, 232, 237, 243, 244, 247, 251, 253, 255, 256, 257, 262, 267, 269, 270, 271, 272, 275, 279, 384, 386, 409, 410, 425, 427, 432, 437, 438, 447, 488, 489, 490, 491, 492, 495, 534, 540], "correl": [19, 20, 26, 124, 130, 138, 211, 220, 221, 224, 228, 230, 231, 232, 237, 243, 244, 247, 251, 253, 255, 262, 267, 269, 270, 271, 272, 275, 279, 301, 401, 406, 407, 412, 435, 445, 451, 470, 473, 487, 491, 493, 495, 506, 520, 579], "correlate_off": [124, 465], "correlation_radiu": [16, 124, 143, 144, 460, 464, 465, 467, 479, 486, 499, 506, 520], "correspond": [19, 20, 26, 28, 29, 30, 31, 32, 33, 35, 36, 37, 39, 40, 45, 87, 89, 91, 100, 101, 103, 106, 110, 111, 125, 127, 128, 129, 130, 132, 133, 135, 136, 145, 152, 153, 154, 160, 163, 165, 167, 168, 169, 193, 194, 195, 196, 198, 199, 200, 202, 203, 204, 205, 206, 207, 208, 210, 220, 221, 224, 228, 230, 231, 232, 236, 237, 243, 244, 247, 251, 253, 255, 256, 257, 262, 267, 269, 270, 271, 272, 275, 277, 279, 308, 376, 393, 394, 395, 396, 403, 404, 407, 409, 411, 429, 432, 456, 457, 459, 460, 461, 467, 471, 472, 476, 484, 487, 489, 490, 493, 494, 495, 497, 498, 499, 506, 508, 518, 519, 520, 522, 534, 535, 545, 548, 580, 581, 586], "cosimo": [432, 435, 437, 443, 444, 446, 449], "cosmic": [52, 228, 282, 401, 497], "cosmologi": 412, "coto": 443, "could": [16, 84, 90, 105, 126, 384, 386, 388, 389, 392, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 407, 409, 410, 412, 414, 456, 459, 467, 469, 484, 486, 495, 497, 498, 506, 521], "count": [16, 83, 92, 100, 101, 103, 106, 107, 108, 109, 110, 111, 115, 120, 124, 125, 127, 128, 129, 131, 132, 133, 134, 135, 142, 144, 170, 172, 175, 176, 177, 182, 184, 188, 192, 195, 196, 198, 199, 200, 204, 207, 208, 217, 219, 226, 250, 291, 293, 294, 295, 300, 302, 305, 307, 332, 368, 370, 379, 381, 389, 391, 394, 395, 396, 398, 399, 403, 407, 426, 427, 430, 432, 435, 437, 438, 444, 445, 449, 450, 454, 455, 456, 459, 460, 461, 462, 463, 464, 465, 467, 469, 471, 473, 475, 476, 477, 478, 479, 481, 485, 487, 489, 490, 491, 495, 499, 504, 506, 507, 508, 520, 522, 526, 529, 530, 531, 532, 535, 581, 582, 583, 585], "count_bkg": 479, "count_statist": 584, "counter": [227, 236, 239, 539], "counts_3d": 490, "counts_fil": 101, "counts_imag": [473, 485], "counts_min": 148, "counts_off": [103, 106, 107, 110, 111, 170, 176, 177, 180, 381, 395, 437, 448, 449, 455, 460, 461, 462, 465, 469, 479, 485, 518, 584], "counts_on": 426, "counts_rat": 485, "counts_statist": 465, "countspredictor": 394, "countsspectrum": [395, 398, 426, 427, 429, 431, 440], "countsstatist": [291, 293, 407, 431, 432, 435, 446], "coupl": [391, 397, 402, 414, 432, 444, 490], "cours": [383, 386, 390, 393, 400, 420, 460, 467, 485, 490, 498, 506, 582, 585], "cousin": [426, 432, 440, 442, 581], "cousins2007": [581, 584], "coutinho": [432, 435], "cov": [256, 257, 412, 414], "cov_matrix": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40], "covar": [211, 376, 445], "covar_list": 211, "covari": [15, 19, 20, 26, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 100, 128, 129, 132, 133, 212, 213, 214, 217, 220, 221, 222, 223, 224, 225, 226, 227, 228, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 247, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 274, 275, 276, 277, 278, 279, 280, 281, 291, 293, 376, 401, 411, 412, 431, 437, 445, 446, 449, 451, 460, 506, 584], "covariance_data": [226, 234, 250, 266, 276], "covariance_opt": 213, "covariance_result": 214, "covariance_typ": 411, "covariancegaussianprior": 411, "covariancemixin": [221, 226, 266, 451], "covarianceresult": [102, 213, 214, 456, 457, 459, 460, 461, 467, 468, 469, 479, 481, 487, 498, 506, 507], "cover": [277, 383, 385, 397, 398, 399, 407, 412, 456, 476, 477, 485, 490, 502, 508, 523], "coverag": [392, 398, 414, 423, 427, 435, 441, 444, 477, 487], "coveral": [414, 423], "cpu": [128, 129, 132, 135, 330, 331, 396, 412], "cpython": 388, "crab": [67, 83, 110, 111, 133, 148, 213, 247, 283, 289, 391, 395, 403, 412, 423, 429, 441, 443, 459, 460, 461, 468, 469, 476, 484, 485, 486, 487, 491, 495, 498, 499, 500, 506, 507, 508, 520, 531, 535, 581], "crab_10gev_100tev_dataset": 468, "crab_3fhl": 508, "crab_3fhl_spec": 508, "crab_events_pass4": 499, "crab_fp": 460, "crab_fp_tabl": 460, "crab_hess_ecpl": 283, "crab_hess_fp": [125, 127, 147], "crab_magic_lp": 461, "crab_model": 487, "crab_posit": 531, "crab_spec": 468, "crab_spectrum": 487, "crabnebula": 476, "crabspectrum": 427, "creat": [11, 13, 16, 19, 20, 26, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 70, 82, 83, 84, 86, 87, 88, 90, 91, 92, 93, 99, 101, 102, 103, 105, 106, 110, 111, 112, 113, 114, 115, 117, 118, 120, 125, 126, 127, 128, 129, 132, 135, 136, 145, 149, 150, 151, 152, 153, 154, 155, 156, 157, 159, 160, 162, 163, 164, 165, 166, 167, 168, 175, 177, 178, 179, 183, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 217, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 274, 275, 276, 277, 278, 279, 280, 281, 283, 289, 310, 320, 341, 345, 361, 370, 372, 377, 383, 384, 386, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 418, 420, 427, 428, 429, 432, 435, 437, 443, 444, 446, 447, 448, 449, 450, 451, 454, 455, 457, 460, 461, 462, 467, 469, 470, 471, 473, 475, 476, 477, 478, 479, 481, 482, 483, 484, 487, 489, 492, 493, 494, 495, 497, 498, 499, 500, 504, 506, 508, 510, 517, 518, 519, 522, 526, 529, 531, 532, 533, 534, 538, 540, 541, 542, 543, 548, 558, 567, 579, 580, 582, 587], "create_crab_spectral_model": [459, 461, 468], "create_dataset": 101, "create_fermi_isotropic_diffuse_model": [492, 498], "create_map_dataset_from_observ": [93, 109], "create_mask": [193, 194, 203, 206], "create_t": 481, "creation": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 84, 90, 105, 126, 129, 206, 392, 393, 397, 406, 409, 429, 435, 451, 482, 493, 500], "creator": [105, 126, 386, 410, 460, 464, 465, 467, 493, 506, 538, 539, 540, 541, 542, 543, 544, 545, 546, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 569, 570, 571, 572, 573, 574, 575, 576, 577], "creatormedadata": 410, "creatormetadata": [84, 90, 105, 126, 410], "credit": 420, "crimson": 461, "criteria": [15, 91, 412, 437, 489, 494, 502], "criterion": [91, 135, 308, 454, 522], "critic": [412, 495], "criticis": 374, "crop": [86, 193, 194, 195, 196, 198, 203, 204, 206, 207, 208], "crop_width": [193, 194, 195, 196, 198, 203, 204, 206, 207, 208], "crordnzj": 481, "cross": [19, 389, 403, 451, 510], "crowd": 484, "crpix": 206, "crpix1": 490, "crpix2": 490, "crucial": [410, 412, 471, 472, 485], "cruft": 414, "crux": [33, 38, 481], "crval1": 490, "crval2": 490, "cryptic": 394, "csh": 582, "csobsselect": 393, "css": [87, 91, 414, 451], "cstat": [395, 412, 429], "csv": 127, "ct": [368, 444], "cta": [82, 83, 89, 103, 106, 110, 111, 116, 119, 120, 124, 143, 144, 150, 154, 155, 156, 165, 228, 371, 376, 378, 387, 390, 391, 392, 396, 399, 402, 403, 413, 424, 425, 435, 441, 442, 443, 444, 451, 453, 454, 462, 464, 467, 469, 471, 472, 475, 478, 479, 485, 486, 488, 492, 501, 502, 506, 520, 524, 581], "cta_data_analysi": [403, 453, 469, 474], "cta_dataset": 492, "cta_north": 97, "cta_sensist": 403, "cta_sensit": [453, 454, 458], "cta_simul": 424, "cta_south": [97, 454, 462, 471, 472, 475, 478], "cta_util": 444, "ctadata": 497, "ctao": [82, 154, 155, 175, 282, 383, 403, 409, 413, 416, 421, 451, 453, 454, 460, 462, 464, 469, 471, 472, 479, 494, 499, 500, 501, 502, 510, 522, 580], "ctapip": [386, 390, 392, 399, 400, 402, 403, 404], "ctaspectrumobserv": 444, "ctobssim": 396, "ctool": [393, 396, 399, 403, 556], "cts_sigma": 487, "ctselect": 393, "ctype1": 490, "ctype2": 490, "cu_t70": 493, "cube": [46, 103, 106, 135, 170, 188, 195, 196, 198, 204, 207, 208, 246, 266, 383, 394, 395, 396, 402, 403, 404, 406, 412, 416, 423, 427, 428, 431, 436, 439, 440, 441, 442, 443, 444, 463, 464, 469, 473, 498, 508, 518, 527, 529, 534, 535, 581], "cubic": 490, "cumbersom": [393, 401], "cumsum": [149, 150, 151, 152, 155, 156, 157, 159, 162, 164, 166, 167, 195, 196, 198, 204, 207, 208], "cumul": [100, 149, 150, 151, 152, 155, 156, 157, 159, 162, 164, 166, 167, 195, 196, 198, 204, 207, 208, 332, 396, 412, 459, 471, 492, 522], "cunit1": 490, "cunit2": 490, "curat": [414, 424], "curl": [67, 400, 415, 416, 418, 497], "current": [11, 15, 19, 20, 26, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 83, 85, 86, 87, 88, 89, 91, 99, 100, 102, 103, 106, 110, 111, 127, 128, 132, 158, 181, 193, 194, 195, 196, 198, 204, 205, 206, 207, 208, 213, 220, 221, 222, 223, 224, 225, 226, 227, 228, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 247, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 274, 275, 276, 277, 278, 279, 280, 281, 361, 377, 383, 384, 386, 389, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 409, 410, 411, 412, 415, 416, 417, 418, 427, 445, 460, 483, 486, 488, 489, 490, 492, 497, 499, 500, 506, 507, 511, 518, 519, 520, 535, 579, 581, 582], "curv": [15, 19, 20, 26, 73, 77, 83, 132, 139, 220, 221, 224, 228, 230, 231, 232, 237, 241, 243, 244, 247, 251, 253, 255, 256, 257, 262, 267, 269, 270, 271, 272, 275, 277, 279, 299, 375, 387, 394, 396, 399, 403, 407, 416, 425, 429, 431, 432, 436, 439, 440, 442, 444, 446, 449, 450, 453, 454, 480, 481, 482, 502, 520, 521, 531, 536, 578, 580], "curve_fit": 376, "cuspi": 510, "custom": [16, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 82, 84, 89, 90, 105, 126, 131, 392, 393, 394, 399, 401, 406, 410, 415, 429, 430, 432, 444, 454, 462, 464, 467, 469, 475, 478, 485, 488, 490, 497, 522, 567], "custom_model": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40], "customari": 493, "customis": [403, 488], "customprior": 495, "cut": [91, 124, 167, 181, 182, 393, 443, 449, 453, 454, 458, 462, 479, 485, 489, 490, 494, 497, 502, 507, 508, 530, 531], "cutoff": [230, 231, 232, 270, 271, 272, 289, 429, 449, 453, 462, 467, 536, 568], "cutout": [103, 106, 110, 111, 116, 119, 153, 154, 160, 165, 168, 171, 194, 196, 204, 206, 208, 276, 389, 395, 425, 430, 435, 441, 444, 451, 464, 465, 467, 469, 473, 485, 489, 498, 507, 508, 518], "cutout2d": [103, 106, 153, 154, 160, 165, 168, 171, 206, 208, 276, 389], "cutout_and_mask_region": [208, 449], "cutout_info": 429, "cutout_mod": 171, "cutout_slic": 206, "cutout_template_model": 451, "cutout_width": 171, "cval": [195, 196, 198, 204, 207, 208], "cwd": 391, "cwt": [403, 429, 441, 444], "cxc": [213, 403, 487], "cyan": 380, "cycl": [380, 386, 387, 388, 400, 402, 417, 442, 446], "cycler": [380, 454], "cython": [386, 426, 436], "d": [19, 20, 23, 87, 89, 91, 199, 202, 205, 241, 247, 258, 277, 283, 350, 386, 401, 403, 437, 446, 457, 465, 471, 472, 478, 490, 493, 494, 527, 534, 539, 569, 570, 571, 572, 573, 574, 575, 576, 577, 582, 585], "d_8idnib": 481, "dai": [87, 91, 125, 127, 205, 233, 238, 240, 258, 265, 386, 397, 403, 413, 414, 490, 575, 582], "daniel": [445, 448, 450, 451], "dark": [1, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 403, 411, 444, 449, 450, 453, 496, 502, 511, 580], "dark_matter_spectra": 26, "darkbit": 510, "darkblu": 495, "darkgreen": 495, "darkmatt": [6, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 261, 384, 403, 444, 483, 511], "darkmatterannihilationspectralmodel": [20, 261, 446, 483], "darkmatterdecayspectralmodel": [261, 450, 483], "darkorang": [459, 460], "darksusi": 510, "darwin": 420, "dash": [479, 483, 495], "dashboard": 414, "dat": [26, 87, 91, 226, 250, 460, 506, 510], "data": [6, 11, 15, 16, 19, 20, 26, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 115, 118, 125, 126, 127, 128, 129, 130, 131, 138, 143, 144, 149, 150, 151, 152, 153, 154, 155, 156, 157, 159, 160, 162, 163, 164, 165, 166, 167, 168, 171, 172, 175, 176, 177, 181, 188, 192, 193, 194, 195, 196, 198, 199, 200, 201, 203, 204, 205, 206, 207, 208, 211, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 274, 275, 276, 277, 278, 279, 280, 281, 294, 299, 300, 301, 303, 304, 307, 308, 309, 318, 319, 322, 340, 346, 349, 353, 354, 362, 371, 372, 373, 374, 376, 377, 382, 384, 387, 390, 393, 394, 395, 396, 397, 399, 402, 403, 404, 405, 406, 407, 409, 411, 412, 413, 416, 420, 421, 423, 424, 425, 426, 427, 429, 430, 431, 432, 435, 436, 437, 438, 440, 441, 442, 443, 444, 445, 446, 449, 450, 453, 454, 457, 462, 463, 464, 465, 469, 471, 472, 475, 478, 483, 484, 486, 487, 488, 491, 492, 493, 494, 495, 496, 497, 498, 500, 501, 504, 509, 510, 518, 520, 522, 524, 525, 526, 527, 528, 529, 531, 532, 534, 535, 541, 542, 554, 557, 559, 561, 562, 567, 579, 580, 581, 584, 585, 586], "data_extend": [69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80], "data_nbyt": [193, 194, 203, 206], "data_path": 499, "data_reduct": 399, "data_shap": [102, 103, 106, 110, 111, 193, 194, 203, 206, 485, 535], "data_shape_ax": [194, 203, 206], "data_shape_imag": 206, "data_spectr": [69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80], "data_stor": [82, 96, 175, 308, 309, 399, 420, 461, 469, 471, 477, 479, 481, 489, 494, 497, 499, 500, 504, 507, 519, 529, 531, 532], "data_storag": 519, "data_summari": 441, "dataaxi": 426, "databas": [389, 522], "dataclass": 383, "datafram": [87, 91], "dataset": [6, 15, 16, 19, 20, 26, 63, 94, 98, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 122, 123, 124, 125, 127, 128, 129, 132, 133, 134, 135, 137, 142, 143, 144, 145, 146, 148, 153, 154, 160, 165, 168, 170, 171, 172, 175, 176, 177, 180, 181, 182, 197, 202, 213, 220, 221, 222, 223, 224, 225, 226, 227, 228, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 247, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 274, 275, 276, 277, 278, 279, 280, 281, 289, 330, 376, 379, 380, 384, 386, 387, 389, 391, 396, 398, 399, 400, 402, 403, 407, 411, 412, 413, 414, 416, 418, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 435, 436, 437, 438, 439, 442, 444, 445, 446, 447, 448, 449, 450, 451, 453, 455, 457, 459, 462, 463, 469, 470, 471, 473, 475, 479, 481, 483, 484, 490, 493, 494, 496, 497, 498, 500, 502, 504, 508, 519, 520, 522, 527, 529, 530, 531, 532, 542, 546, 548, 576, 577, 579, 580, 581, 582, 583, 584], "dataset1": [495, 518], "dataset1_prior": 495, "dataset2": [495, 518], "dataset2_prior": 495, "dataset_1": 520, "dataset_2": 520, "dataset_3fgl": 457, "dataset_3fhl": 457, "dataset_cta": 485, "dataset_empti": [456, 459, 461, 462, 469, 477, 481, 485, 489, 499, 531], "dataset_energy_depend": 470, "dataset_fak": 462, "dataset_fp": 478, "dataset_gammacat": 457, "dataset_hawc": 468, "dataset_hess": [468, 487], "dataset_imag": [469, 485], "dataset_kwarg": [93, 109], "dataset_lc": 478, "dataset_mak": [459, 461, 469, 477, 481, 489, 531], "dataset_nam": [109, 113, 114, 132, 226, 234, 250, 405, 411, 451, 467, 471, 472, 475, 485, 492, 507, 542], "dataset_on_off": [170, 176, 177, 180, 454, 459, 461, 462, 465, 469, 477, 481, 489, 531, 532], "dataset_on_off1": 454, "dataset_onoff": 395, "dataset_simul": 461, "dataset_stack": [459, 467], "datasetmodel": [215, 250, 266, 405, 432, 471, 472, 475, 481], "datasetread": [101, 107], "datasets1": 380, "datasets2": 380, "datasets3": 380, "datasets_fil": [16, 460, 464, 465, 467, 506], "datasets_hess": 468, "datasets_in_phase_bin_3": 407, "datasets_mak": 489, "datasets_nam": [19, 20, 26, 220, 221, 222, 223, 224, 225, 226, 227, 228, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 247, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 274, 275, 276, 277, 278, 279, 280, 281, 284, 431, 468, 492, 506, 542], "datasets_read": [492, 498], "datasets_sl": 485, "datasets_to_fit": 481, "datasetsconfig": 16, "datasetsmak": [173, 437, 449, 489, 494, 522], "datasetsmetadata": 410, "datasetwrit": 108, "datastor": [16, 89, 96, 175, 308, 309, 389, 393, 398, 416, 420, 426, 437, 438, 440, 441, 443, 449, 450, 456, 459, 460, 461, 464, 465, 467, 469, 471, 475, 477, 479, 481, 489, 494, 499, 500, 504, 506, 519, 522, 529, 531, 532, 582], "datastorecheck": 444, "datastoreindex": 393, "datastoreinmemori": 393, "datastoremak": [426, 437], "datastoremetadata": 410, "datastoreobserv": [176, 389, 393, 430, 443], "datastorexml": 393, "datasum": [83, 86, 88, 100, 102, 103, 106, 107, 108, 110, 111, 125, 127, 152, 153, 154, 160, 165, 168, 195, 196, 198, 202, 204, 207, 208], "datat": [87, 91], "date": [87, 91, 105, 126, 364, 400, 408, 409, 410, 412, 413, 421, 443, 460, 463, 464, 465, 467, 493, 500, 506, 538, 539, 540, 541, 542, 543, 544, 545, 546, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 569, 570, 571, 572, 573, 574, 575, 576, 577, 586], "datefmt": [16, 460, 464, 465, 467, 506, 582], "dateref": 463, "datetim": [105, 126, 410], "datetime64": [87, 91], "datfix": 463, "daughter": 410, "david": [393, 398, 424, 444, 445], "dc": 467, "dc1": [392, 403, 445, 471, 479, 488, 492, 497], "dc2": 392, "ddof": 482, "de": [19, 20, 26, 67, 100, 220, 221, 224, 228, 230, 231, 232, 243, 244, 247, 251, 253, 255, 256, 257, 262, 267, 269, 270, 271, 272, 275, 279, 307, 409, 413, 432, 435, 438, 483, 581], "deabsorb": 455, "deactiv": 415, "dead": [83, 86, 88, 340, 393, 412], "dead_tim": [83, 88, 340], "deadc": 393, "deadlin": [392, 396], "deadtim": [88, 90, 188, 462, 471, 475, 497], "deadtime_fract": [88, 90], "deal": [86, 383, 389, 398, 399, 462, 471, 477, 502, 522], "debanjan": 426, "debian": [400, 417, 439], "debug": [11, 383, 389, 394, 399, 446, 459, 486, 490, 522, 582], "dec": [67, 83, 85, 87, 88, 91, 94, 143, 144, 178, 383, 384, 388, 392, 394, 396, 399, 400, 403, 422, 448, 454, 459, 461, 463, 465, 469, 472, 476, 477, 479, 481, 484, 489, 491, 497, 498, 499, 500, 507, 508, 510, 522, 526, 531, 586], "dec_pnt": 500, "dec_tru": 396, "decad": [17, 18, 21, 22, 24, 25, 27, 101, 113, 114, 200, 285, 450, 471], "decai": [17, 18, 20, 21, 22, 23, 24, 25, 27, 233, 240, 258, 406, 471, 478, 482, 493, 510, 572], "decemb": 422, "decid": [383, 389, 392, 393, 394, 395, 397, 398, 402, 405, 406, 407, 413, 460, 494, 506], "decim": [87, 91, 306], "decis": [383, 384], "declar": [15, 87, 91, 266, 362, 363, 386, 390, 391, 394, 399, 400, 406, 414, 431, 521], "decor": [362, 363, 383, 410, 582], "decorrel": [19, 20, 26, 220, 221, 224, 228, 230, 231, 232, 237, 243, 244, 247, 251, 253, 255, 256, 257, 262, 267, 269, 270, 271, 272, 275, 279], "decoupl": 69, "dedic": [386, 397, 398, 407, 409, 410, 414, 430, 431, 432, 450, 459, 460, 461, 467, 479, 487, 506, 507, 519], "deduc": [407, 450], "deep": [16, 19, 20, 26, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 84, 86, 87, 90, 91, 99, 100, 102, 103, 105, 106, 110, 111, 125, 126, 127, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 230, 231, 232, 233, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 247, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 262, 263, 264, 265, 267, 268, 269, 270, 271, 272, 274, 275, 277, 279, 280, 281, 467], "deepcopi": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 87, 91, 274, 276, 278], "def": [16, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 84, 90, 105, 126, 292, 362, 363, 383, 384, 394, 395, 396, 397, 406, 407, 410, 411, 412, 459, 467, 481, 487, 493, 495, 504, 531, 582, 584], "def_unit": [454, 462, 464, 467, 469, 475, 478, 497], "defalut": [114, 152], "default": [11, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 45, 46, 47, 65, 67, 77, 78, 80, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 96, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 113, 114, 115, 116, 118, 119, 120, 122, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 138, 139, 140, 141, 142, 143, 144, 145, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 159, 160, 162, 163, 164, 165, 166, 167, 168, 170, 171, 172, 175, 176, 178, 179, 181, 182, 183, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 217, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 247, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 285, 287, 289, 290, 291, 292, 293, 294, 298, 299, 300, 301, 306, 307, 308, 310, 321, 322, 323, 328, 330, 331, 337, 338, 339, 340, 342, 343, 346, 349, 351, 352, 354, 360, 365, 366, 370, 372, 373, 374, 376, 377, 379, 380, 383, 389, 395, 399, 400, 406, 409, 414, 420, 426, 428, 429, 430, 432, 435, 437, 443, 444, 446, 447, 448, 449, 450, 459, 460, 461, 463, 465, 467, 471, 472, 477, 478, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 495, 498, 506, 507, 508, 518, 520, 522, 529, 532, 533, 534, 535, 539, 540, 541, 548, 554, 558, 582, 586], "default_alpha": [21, 27], "default_beta": 27, "default_css": [87, 91], "default_css_nb": [87, 91], "default_epoch": 366, "default_gamma": 27, "default_hdu_t": 82, "default_interp_kwarg": [149, 150, 151, 152, 155, 156, 157, 159, 162, 164, 166, 167, 442], "default_nam": [87, 91], "default_notebook_table_class": [87, 91], "default_obs_t": 82, "default_paramet": [19, 20, 26, 220, 221, 222, 223, 224, 225, 227, 228, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 247, 251, 252, 253, 254, 255, 256, 257, 258, 259, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 274, 275, 276, 277, 278, 279, 280, 281, 411], "default_scale_radiu": [17, 21, 22, 24, 25, 27], "default_unit": [149, 150, 155, 157, 162, 167, 488], "defer": [106, 111], "defin": [15, 16, 19, 20, 26, 28, 29, 30, 31, 32, 33, 35, 36, 37, 39, 40, 42, 43, 44, 45, 46, 47, 52, 53, 83, 84, 87, 88, 90, 91, 95, 102, 103, 104, 105, 106, 109, 110, 111, 116, 119, 124, 125, 126, 127, 128, 129, 131, 132, 135, 152, 153, 154, 156, 160, 163, 164, 165, 166, 168, 171, 172, 176, 181, 193, 194, 195, 196, 198, 199, 200, 203, 204, 205, 206, 207, 208, 213, 216, 218, 220, 221, 222, 223, 224, 225, 226, 227, 228, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 247, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 274, 275, 276, 277, 278, 279, 280, 281, 292, 294, 300, 302, 322, 332, 337, 338, 339, 340, 343, 373, 374, 383, 384, 386, 388, 389, 392, 394, 395, 396, 397, 398, 399, 400, 404, 405, 407, 408, 409, 410, 411, 412, 415, 416, 417, 418, 425, 426, 429, 432, 435, 438, 442, 443, 448, 449, 450, 455, 460, 462, 463, 464, 465, 467, 468, 470, 473, 475, 478, 479, 481, 482, 484, 485, 486, 487, 488, 489, 490, 492, 493, 494, 495, 497, 498, 499, 506, 508, 518, 519, 520, 522, 524, 527, 531, 532, 534, 539, 541, 543, 544, 545, 548, 549, 552, 553, 555, 556, 558, 560, 561, 563, 564, 565, 566, 567, 577, 579, 580, 581, 582, 583, 584, 585], "definit": [83, 84, 86, 88, 90, 100, 103, 105, 106, 110, 111, 126, 172, 203, 292, 307, 321, 383, 392, 393, 397, 404, 405, 406, 407, 410, 427, 431, 432, 448, 450, 451, 459, 461, 464, 473, 477, 488, 489, 506, 518, 520, 527, 528, 533, 535, 539, 540, 584], "deform": 535, "deg": [16, 33, 34, 38, 47, 67, 83, 85, 87, 91, 94, 96, 103, 106, 110, 111, 113, 114, 115, 116, 119, 120, 124, 129, 130, 135, 143, 144, 154, 156, 157, 162, 163, 164, 165, 166, 167, 168, 170, 178, 179, 181, 183, 194, 195, 196, 198, 201, 203, 204, 206, 207, 208, 226, 227, 236, 239, 250, 254, 263, 264, 266, 308, 309, 342, 378, 383, 384, 394, 397, 399, 406, 407, 410, 420, 454, 456, 459, 460, 461, 462, 463, 464, 465, 467, 468, 469, 470, 471, 472, 473, 475, 476, 477, 478, 479, 481, 483, 484, 485, 486, 488, 489, 490, 491, 492, 493, 494, 497, 498, 499, 500, 506, 507, 508, 519, 520, 522, 524, 526, 529, 531, 532, 533, 534, 535, 539, 540, 541, 542, 543, 544, 545, 546], "deg2": 500, "degre": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 103, 106, 110, 111, 113, 114, 115, 122, 125, 127, 137, 146, 194, 195, 196, 198, 201, 206, 207, 208, 226, 250, 254, 266, 277, 450, 454, 456, 460, 465, 470, 477, 481, 484, 489, 490, 491, 497, 506, 520, 534, 535, 584, 585], "deil": [388, 389, 390, 391, 392, 393, 394, 395, 397, 399, 400, 401, 402, 403, 423, 424, 425, 426, 427, 428, 429, 430, 436, 439, 440, 441, 442, 443, 444, 445], "deiml": 443, "dej2000": [484, 508], "del": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 87, 91, 394], "delai": [404, 408], "deleg": 399, "delet": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 86, 383, 394, 414, 415, 416, 418, 450, 492], "delete_interv": 86, "delimit": 127, "deliv": 399, "delta": [19, 20, 23, 87, 91, 124, 125, 130, 133, 135, 157, 205, 256, 257, 290, 306, 449, 455, 463, 487, 495, 520, 527, 528, 540, 541, 543, 584], "delta_t": [122, 290, 470], "deltacstat": 412, "demonstr": [399, 425, 428, 429, 430, 431, 432, 437, 449, 450, 476, 482, 490, 492, 502, 534], "denot": [103, 110, 407, 518], "densiti": [17, 18, 21, 22, 24, 25, 27, 28, 30, 35, 36, 39, 40, 45, 52, 102, 127, 157, 208, 336, 339, 376, 396, 465, 467, 483, 484, 495, 510, 512, 516, 526, 527, 528, 581], "dep": 449, "depend": [11, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 83, 88, 100, 103, 104, 109, 110, 122, 125, 127, 149, 150, 151, 152, 155, 156, 157, 159, 162, 164, 165, 166, 167, 168, 182, 193, 194, 203, 206, 208, 226, 241, 250, 266, 310, 363, 383, 385, 386, 387, 389, 394, 395, 396, 397, 398, 401, 402, 407, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 422, 424, 428, 429, 432, 439, 441, 444, 445, 447, 449, 450, 451, 453, 454, 458, 462, 464, 465, 474, 477, 484, 487, 488, 489, 490, 491, 492, 494, 495, 497, 498, 502, 518, 522, 526, 530, 531, 534, 548], "deploy": 409, "deposit": 409, "deprec": [16, 84, 85, 90, 105, 126, 426, 435, 448, 449, 450, 451, 467, 473, 498, 546], "deprecated_argument_funct": 383, "deprecated_argument_function_kwarg": 383, "deprecated_attribut": 383, "deprecated_funct": 383, "deprecated_renamed_argu": 383, "deprecatedparseprotocol": [16, 84, 90, 105, 126], "deprecation_polici": 408, "depriv": 529, "depth": [16, 84, 90, 105, 126, 350, 416, 421, 455, 482, 548], "deriv": [17, 18, 21, 22, 24, 25, 27, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 50, 51, 54, 100, 118, 124, 128, 132, 135, 136, 145, 277, 383, 395, 396, 401, 404, 407, 463, 486, 497, 499, 520, 534, 583, 584], "descent": 412, "describ": [27, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 82, 95, 127, 128, 130, 135, 164, 204, 213, 279, 302, 384, 386, 388, 389, 392, 393, 395, 396, 397, 399, 400, 402, 403, 406, 407, 408, 409, 412, 421, 427, 435, 443, 444, 460, 463, 471, 472, 482, 486, 487, 493, 495, 497, 499, 500, 506, 518, 522, 526, 535, 536, 581, 582, 583, 584], "descript": [56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 87, 91, 129, 213, 384, 388, 389, 397, 403, 408, 409, 421, 446, 450, 467, 475, 484, 487, 490, 497, 499, 506, 507, 522], "description1": 384, "description2": 384, "description3": 384, "description_width": [467, 475, 490, 506, 507], "descriptionstyl": [467, 475, 490, 506, 507], "descriptor": [87, 88, 91, 103, 106, 110, 111, 276, 319, 384, 431], "design": [388, 389, 392, 393, 396, 397, 399, 403, 405, 407, 408, 412, 423, 443, 450], "desir": [16, 84, 87, 90, 91, 105, 126, 163, 193, 194, 203, 206, 292, 358, 359, 360, 490, 508, 535], "desktop": 421, "destin": 11, "detail": [19, 20, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 83, 87, 91, 100, 103, 106, 110, 111, 127, 128, 153, 154, 160, 165, 168, 171, 194, 206, 208, 213, 216, 220, 223, 224, 226, 227, 228, 230, 231, 232, 233, 236, 237, 238, 239, 240, 241, 242, 243, 244, 247, 250, 254, 255, 256, 257, 258, 262, 263, 264, 265, 267, 270, 271, 272, 276, 277, 278, 383, 384, 386, 388, 391, 392, 393, 396, 397, 398, 402, 403, 404, 408, 409, 412, 415, 419, 421, 422, 429, 433, 434, 453, 454, 455, 459, 461, 462, 463, 464, 469, 470, 471, 474, 475, 478, 481, 485, 486, 487, 489, 490, 491, 492, 493, 495, 497, 499, 500, 502, 507, 508, 518, 519, 521, 527, 531, 532, 534, 579, 580, 582, 586], "detect": [59, 143, 144, 289, 373, 374, 384, 399, 402, 403, 405, 423, 429, 430, 431, 441, 443, 444, 450, 453, 466, 484, 497, 499, 502, 581, 584], "detect_t": 403, "detector": [83, 88, 104, 109, 157, 491, 499, 527, 581], "determin": [19, 20, 26, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 87, 91, 113, 114, 134, 156, 162, 164, 166, 178, 179, 181, 183, 220, 221, 224, 228, 230, 231, 232, 237, 243, 244, 247, 251, 253, 255, 256, 257, 262, 267, 269, 270, 271, 272, 275, 277, 279, 310, 332, 394, 398, 401, 409, 437, 449, 450, 454, 461, 464, 465, 470, 476, 489, 491, 512, 580], "determinist": 383, "deti": [83, 104, 109, 396, 497], "detx": [83, 104, 109, 396, 497], "dev": [11, 16, 82, 84, 90, 105, 126, 383, 385, 386, 399, 409, 412, 413, 414, 451, 454, 456, 459, 460, 461, 462, 463, 464, 465, 467, 468, 469, 470, 471, 472, 473, 476, 477, 478, 479, 483, 484, 485, 487, 489, 490, 491, 492, 493, 495, 497, 498, 499, 500, 506, 507, 508, 546, 548, 576, 577], "dev383": [105, 126, 421, 454, 456, 459, 460, 461, 462, 463, 464, 465, 467, 468, 469, 470, 471, 472, 473, 476, 477, 478, 479, 483, 484, 485, 487, 489, 490, 491, 492, 493, 495, 497, 498, 499, 500, 506, 507, 508, 538, 539, 540, 541, 542, 543, 544, 545, 546, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 569, 570, 571, 572, 573, 574, 575, 576, 577], "develop": [384, 388, 389, 391, 392, 393, 394, 396, 397, 399, 400, 402, 403, 404, 405, 406, 408, 409, 411, 413, 414, 417, 421, 423, 436, 443, 444, 445, 497], "deviat": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 42, 128, 196, 208, 213, 235, 292, 296, 487, 495], "devoid": [459, 525], "devop": 409, "devot": 502, "dex": 310, "df": [87, 91, 122, 137, 146, 470, 487, 584], "diagnosi": 392, "diagnost": 399, "diagon": [152, 153, 154, 401, 411, 498], "diagram": 586, "dialog": [416, 418], "diamet": [194, 195, 196, 456], "diamond": 494, "dict": [15, 16, 19, 20, 26, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 68, 69, 82, 83, 84, 86, 87, 88, 89, 90, 91, 92, 93, 96, 99, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 115, 120, 122, 125, 126, 127, 128, 129, 130, 132, 133, 135, 137, 138, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 159, 160, 162, 163, 164, 165, 166, 167, 168, 169, 170, 180, 193, 194, 195, 196, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 211, 212, 213, 215, 220, 221, 222, 223, 224, 225, 226, 227, 228, 230, 231, 232, 233, 234, 236, 237, 238, 239, 240, 241, 242, 243, 244, 247, 250, 251, 252, 253, 254, 255, 256, 257, 258, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 274, 275, 276, 277, 278, 279, 280, 284, 289, 290, 291, 292, 293, 297, 308, 322, 330, 331, 346, 349, 350, 351, 354, 364, 365, 366, 367, 370, 371, 372, 376, 377, 378, 379, 380, 383, 398, 400, 404, 407, 410, 428, 432, 435, 443, 460, 467, 476, 477, 481, 484, 487, 490, 494, 506, 507, 534, 539, 548], "dict_kei": [455, 548], "dictionari": [15, 16, 19, 20, 26, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 69, 84, 87, 88, 89, 90, 91, 92, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 115, 122, 125, 126, 127, 128, 129, 132, 133, 135, 137, 138, 145, 146, 149, 150, 151, 152, 153, 154, 155, 156, 157, 159, 160, 162, 164, 165, 166, 167, 168, 169, 170, 180, 193, 194, 195, 196, 198, 199, 201, 202, 203, 204, 206, 207, 208, 212, 213, 215, 216, 218, 220, 221, 222, 223, 224, 225, 226, 227, 228, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 274, 275, 276, 277, 278, 279, 280, 281, 289, 291, 292, 293, 297, 320, 346, 349, 350, 351, 354, 364, 367, 377, 384, 400, 402, 407, 410, 411, 459, 461, 467, 487, 488, 494, 495, 577], "dictionnari": [376, 412], "did": [77, 390, 397, 402, 403, 404, 406, 409, 426, 454, 462, 464, 467, 469, 475, 478, 487, 495, 497], "didn": [83, 88, 390, 393, 397, 400, 510], "diff": [102, 103, 106, 110, 111, 383, 386, 391, 395, 467, 475, 507], "diff_flux": 483, "diff_flux_point": [102, 485], "differ": [26, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 46, 59, 67, 80, 86, 87, 91, 94, 100, 102, 122, 124, 125, 127, 128, 129, 132, 133, 135, 143, 149, 150, 151, 152, 155, 157, 159, 162, 167, 177, 195, 196, 198, 201, 202, 203, 204, 206, 207, 208, 245, 289, 290, 291, 293, 340, 344, 358, 359, 374, 383, 384, 386, 388, 389, 391, 393, 394, 395, 396, 397, 399, 400, 401, 403, 404, 405, 406, 407, 409, 411, 412, 414, 416, 418, 427, 430, 432, 442, 445, 446, 447, 449, 451, 454, 459, 460, 461, 463, 464, 467, 470, 471, 472, 473, 476, 478, 481, 482, 484, 485, 486, 487, 489, 491, 492, 493, 494, 495, 497, 498, 499, 502, 506, 508, 510, 518, 520, 522, 527, 534, 535, 540, 541, 580, 582, 583, 584], "different": 391, "differenti": [23, 79, 125, 127, 134, 195, 196, 198, 200, 204, 207, 208, 251, 266, 282, 283, 337, 389, 394, 401, 407, 442, 490, 493, 498, 508, 520, 581], "differential_flux": 127, "difficult": [394, 397, 414], "diffus": [68, 195, 196, 198, 204, 207, 208, 284, 383, 399, 402, 444, 445, 467, 471, 484, 490, 492, 493, 497, 579], "diffuse_cub": 493, "diffuse_galactic_fermi": 492, "diffuse_iem": [492, 498], "diffuse_iso": [492, 498], "diffuse_model": 284, "difrsp0": [498, 508], "difrsp1": [498, 508], "difrsp2": [498, 508], "difrsp3": [498, 508], "difrsp4": [498, 508], "digit": 383, "dilat": [208, 435], "dim": [162, 339, 440, 441, 469, 581], "dimens": [46, 53, 103, 106, 110, 111, 125, 127, 149, 150, 151, 152, 153, 154, 155, 156, 157, 159, 160, 162, 164, 165, 166, 167, 168, 177, 193, 194, 195, 196, 198, 199, 201, 203, 204, 206, 207, 208, 274, 275, 278, 310, 322, 376, 399, 412, 432, 443, 445, 449, 451, 487, 488, 490, 493, 502, 518, 534, 535, 540], "dimension": [31, 32, 37, 68, 87, 91, 193, 194, 195, 196, 198, 201, 203, 204, 206, 207, 208, 235, 236, 239, 285, 323, 336, 389, 397, 411, 416, 441, 463, 486, 487, 488, 490, 493, 508, 526, 528, 534, 535, 580, 581], "dimensionless": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 83, 157, 271, 272, 309, 473, 493], "dimitri": [435, 437], "dipol": [51, 54], "dirac": 19, "direct": [91, 105, 167, 185, 186, 189, 191, 200, 227, 236, 239, 314, 317, 384, 389, 395, 397, 402, 404, 407, 410, 435, 453, 458, 462, 489, 502, 519, 527, 528, 530, 531, 539, 580, 581], "directional_offset_bi": [454, 462], "directli": [13, 16, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 56, 69, 83, 84, 87, 90, 91, 105, 126, 136, 142, 145, 146, 167, 182, 195, 196, 198, 204, 207, 208, 274, 276, 278, 383, 385, 386, 388, 390, 391, 394, 395, 396, 397, 401, 403, 410, 412, 416, 418, 419, 423, 425, 426, 427, 429, 443, 450, 457, 459, 460, 462, 467, 468, 469, 472, 473, 475, 477, 478, 482, 484, 485, 486, 487, 488, 490, 491, 492, 493, 494, 497, 498, 506, 507, 508, 510, 518, 522, 527, 531, 534, 558, 584], "directori": [11, 82, 87, 383, 399, 460, 470, 500, 506, 508, 519, 522, 582], "dirk": [426, 440, 442], "disabl": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 383, 435], "disable_unicode_literals_warn": 383, "disadvantag": 582, "disagr": 388, "disambigu": 388, "disc": [464, 465, 467, 472], "discard": [410, 481, 484], "discard_on_copi": [87, 91], "discarded_ind": 484, "discarded_spati": 484, "discarded_t": 484, "disccus": 392, "discourag": 383, "discov": 582, "discrep": 459, "discret": [91, 138, 301, 306, 396, 451, 487, 534], "discrete_correl": 138, "discrete_correlation_dict": 138, "discrete_correlation_err": [138, 301], "discuss": [13, 59, 279, 383, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 414, 421, 443, 495, 500, 511, 586], "disjoint": 397, "disk": [82, 111, 154, 157, 196, 206, 208, 227, 239, 241, 361, 382, 383, 393, 394, 395, 399, 406, 407, 412, 451, 453, 454, 459, 467, 468, 490, 491, 492, 493, 533, 536, 541, 545, 547], "disk_inc": 397, "diskspatialmodel": [72, 260, 406, 428, 449, 492, 493, 539], "dismiss": 100, "disp": [526, 527], "dispatch": 394, "dispers": [82, 88, 101, 103, 104, 106, 108, 109, 110, 111, 112, 115, 117, 152, 153, 154, 157, 175, 181, 182, 185, 186, 189, 383, 389, 394, 395, 396, 429, 431, 441, 442, 443, 445, 454, 456, 459, 460, 467, 471, 489, 499, 500, 506, 507, 518, 527, 530, 581], "displac": 314, "displai": [11, 15, 82, 87, 91, 120, 132, 135, 213, 297, 331, 376, 380, 383, 384, 414, 416, 418, 435, 438, 449, 450, 454, 456, 459, 460, 461, 462, 463, 464, 467, 468, 469, 470, 471, 473, 475, 476, 478, 479, 484, 485, 486, 487, 490, 492, 493, 497, 498, 500, 522, 582], "display_length": [87, 91], "disrupt": [424, 425], "dissolv": 428, "dist": [333, 414], "distanc": [17, 18, 21, 22, 23, 24, 25, 27, 41, 46, 47, 129, 143, 144, 203, 251, 278, 306, 313, 339, 397, 441, 448, 461, 463, 473, 483, 484, 487, 516, 531, 558], "distance_gc": [17, 18, 21, 22, 24, 25, 27, 483], "distance_max": [46, 47, 339, 484], "distance_min": [47, 339, 484], "distance_refer": 484, "distibut": [136, 145], "distinct": [398, 399, 404, 499, 585], "distinguish": [291, 293, 407, 410, 454, 490], "distort": [397, 427], "distrib": [102, 136, 145, 459], "distribut": [13, 28, 29, 30, 31, 32, 33, 35, 36, 37, 39, 40, 42, 45, 46, 83, 102, 109, 136, 137, 145, 146, 157, 192, 232, 235, 244, 251, 291, 293, 332, 333, 337, 376, 379, 381, 382, 383, 387, 388, 391, 396, 401, 402, 405, 408, 409, 413, 414, 417, 428, 437, 443, 449, 450, 454, 459, 461, 462, 465, 467, 471, 473, 475, 476, 487, 492, 495, 497, 508, 510, 522, 526, 527, 529, 535, 543, 558, 581, 583, 584], "divers": 407, "divid": [194, 200, 205, 404, 407, 461, 471, 494, 499, 500], "divis": 200, "djangoproject": 403, "djuvsland": 450, "dl3": [6, 16, 82, 83, 86, 88, 91, 96, 149, 150, 151, 152, 155, 156, 157, 159, 162, 164, 166, 167, 175, 181, 199, 200, 308, 309, 384, 389, 391, 392, 394, 403, 410, 416, 420, 426, 429, 431, 437, 446, 450, 456, 459, 460, 461, 464, 465, 467, 476, 477, 481, 489, 491, 494, 504, 506, 507, 518, 522, 524, 525, 526, 528, 529, 531, 532, 580, 581], "dl4": [99, 102, 103, 106, 110, 111, 118, 120, 124, 128, 132, 135, 160, 181, 384, 389, 410, 416, 431, 478, 485, 486, 487, 522, 580, 581], "dl5": [120, 124, 128, 132, 135, 410, 450, 478, 486, 487, 580, 581], "dl6": [120, 124, 128, 132, 135, 486, 580, 581], "dm": [19, 20, 26, 431, 446, 483], "dm_exampl": 510, "dmfitfunct": 510, "dmpipe": 510, "dmprofil": [17, 21, 22, 23, 24, 25, 27, 483, 510], "dmsky": 510, "dn": [232, 244, 483, 581], "dnde": [19, 20, 26, 67, 125, 126, 127, 134, 136, 138, 139, 140, 141, 145, 220, 221, 224, 228, 230, 231, 232, 237, 243, 244, 247, 251, 253, 255, 256, 257, 262, 267, 269, 270, 271, 272, 275, 279, 282, 407, 435, 457, 459, 460, 469, 473, 484, 485, 486, 493, 498, 506, 508, 520], "dnde_cu": 283, "dnde_err": [125, 127, 136, 145, 520], "dnde_errn": [67, 125, 127, 136, 145, 484], "dnde_error": [19, 20, 26, 220, 221, 224, 228, 230, 231, 232, 237, 243, 244, 247, 251, 253, 255, 256, 257, 262, 267, 269, 270, 271, 272, 275, 279], "dnde_errp": [67, 125, 127, 136, 145, 484], "dnde_ref": [125, 127, 407], "dnde_scan_axi": [136, 145], "dnde_scan_valu": [125, 127], "dnde_ul": [67, 125, 127, 136, 145, 484, 508], "do": [13, 16, 19, 20, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 83, 84, 90, 95, 100, 105, 126, 152, 163, 216, 220, 223, 224, 227, 228, 230, 231, 232, 233, 236, 237, 238, 239, 240, 241, 242, 243, 244, 247, 254, 255, 256, 257, 258, 262, 263, 264, 265, 267, 270, 271, 272, 277, 278, 334, 376, 384, 386, 388, 389, 390, 393, 397, 398, 399, 400, 401, 402, 403, 406, 407, 410, 412, 413, 414, 416, 418, 429, 455, 457, 459, 460, 462, 463, 464, 465, 467, 469, 470, 471, 475, 477, 478, 479, 481, 483, 484, 485, 487, 489, 490, 491, 492, 493, 497, 498, 506, 507, 508, 518, 522, 529, 534, 579, 582, 585, 586], "do_someth": 383, "doc": [11, 13, 16, 83, 84, 87, 90, 91, 105, 126, 152, 194, 200, 203, 206, 213, 226, 250, 310, 347, 383, 384, 386, 388, 391, 397, 399, 400, 402, 403, 412, 413, 420, 421, 423, 429, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 454, 456, 459, 460, 461, 462, 463, 464, 465, 467, 468, 469, 470, 471, 472, 473, 475, 476, 477, 478, 479, 481, 483, 484, 485, 487, 489, 490, 491, 492, 493, 495, 497, 498, 499, 500, 506, 507, 508, 535, 546, 548, 554, 570, 576, 577, 581, 582, 586], "docker": [400, 414], "dockerfil": [391, 413, 414], "docstr": [383, 403, 409, 435, 436, 437, 439, 442, 448, 449, 450, 451, 467, 493], "doctest": [163, 371, 384], "document": [11, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 50, 51, 52, 53, 54, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 120, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 162, 163, 164, 165, 166, 167, 168, 170, 171, 172, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 274, 275, 276, 277, 278, 279, 280, 281, 291, 293, 318, 322, 332, 357, 370, 383, 385, 387, 388, 390, 391, 393, 397, 399, 400, 402, 404, 406, 408, 409, 412, 414, 415, 420, 421, 422, 429, 431, 432, 435, 437, 438, 439, 441, 442, 443, 444, 445, 446, 447, 448, 449, 490, 492, 497, 499, 500, 522, 533, 534, 535, 582], "doe": [16, 84, 87, 90, 91, 105, 126, 128, 132, 138, 155, 165, 168, 202, 241, 277, 289, 383, 384, 390, 391, 393, 395, 397, 398, 400, 402, 403, 406, 407, 409, 410, 412, 426, 435, 446, 454, 455, 459, 462, 464, 467, 469, 470, 484, 487, 488, 489, 490, 491, 499, 510, 522, 531, 582], "doesn": [69, 383, 384, 388, 390, 391, 397, 400, 401, 403, 451, 497, 498, 582], "dof": 584, "doi": [137, 146, 409], "domain": [195, 196, 198, 204, 207, 208, 383, 397, 482], "domenico": 441, "dominguez": [228, 229, 406, 455, 548], "dominquez": 228, "don": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 87, 91, 152, 382, 383, 386, 388, 390, 391, 400, 410, 414, 456, 459, 464, 469, 476, 491, 493, 580, 582, 585, 586], "donath": [392, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451], "done": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 87, 91, 125, 128, 153, 154, 160, 165, 168, 376, 383, 384, 386, 388, 389, 390, 394, 396, 397, 398, 399, 401, 402, 403, 406, 407, 409, 413, 416, 420, 444, 449, 456, 462, 467, 468, 472, 473, 475, 478, 479, 485, 486, 489, 490, 493, 494, 518, 522, 530, 531, 535, 567, 584, 586], "dos2unix": 383, "dot": [50, 51, 54, 110, 111, 195, 196, 198, 204, 207, 208, 449], "doubl": [27, 124, 138, 139, 297, 409, 442, 450], "doubling_dict": 297, "down": [50, 51, 54, 135, 388, 390, 393, 397, 402, 413, 427, 485, 498, 585], "downgrad": [194, 382], "download": [67, 94, 102, 127, 386, 391, 399, 400, 403, 410, 413, 415, 416, 418, 420, 424, 425, 427, 428, 435, 444, 445, 446, 454, 455, 456, 457, 459, 460, 461, 462, 463, 464, 465, 467, 468, 469, 470, 471, 472, 473, 475, 476, 477, 478, 479, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 497, 498, 499, 500, 502, 504, 506, 507, 508, 536, 538, 539, 540, 541, 542, 543, 544, 545, 546, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 569, 570, 571, 572, 573, 574, 575, 576, 577, 582], "downsampl": [103, 106, 110, 111, 135, 149, 150, 151, 152, 153, 154, 155, 156, 157, 159, 160, 162, 164, 165, 166, 167, 168, 193, 194, 195, 196, 197, 198, 199, 200, 203, 204, 205, 206, 207, 208, 426, 432, 441, 451, 485, 486], "downsampled_energi": 485, "downsampling_factor": [135, 469], "downward": [291, 293], "dozen": 383, "dpp": 409, "dr": [17, 18, 21, 22, 24, 25, 27, 541], "dr1": [16, 65, 82, 83, 86, 88, 91, 96, 157, 175, 272, 308, 309, 384, 391, 403, 420, 453, 456, 459, 460, 465, 467, 477, 481, 489, 494, 504, 506, 507, 519, 522, 524, 525, 526, 528, 529, 531, 532, 536, 568], "dr2": [65, 272, 435, 453, 536, 568], "dr3": [65, 271, 453, 493, 536, 568], "dr4": [65, 450], "draft": [383, 387, 388, 411, 444], "drag": 386, "draw": [33, 196, 332, 396, 495], "drawback": [398, 402], "drawn": [332, 396, 412], "drift": [85, 94, 95, 446], "drive": 399, "driven": [11, 15, 389, 399, 401, 403, 443, 502, 521], "drop": [52, 53, 103, 106, 110, 111, 125, 127, 132, 153, 154, 160, 165, 168, 193, 194, 195, 196, 198, 199, 203, 204, 206, 207, 208, 227, 234, 276, 368, 387, 388, 399, 400, 405, 425, 428, 429, 432, 435, 442, 445, 490, 518], "ds9": [83, 194, 203, 206, 210, 226, 250, 383, 384, 397, 427, 491, 493, 535], "ds9parser": 397, "dss": 393, "dt": [87, 91], "dtime_t": 482, "dtype": [33, 38, 87, 91, 112, 117, 150, 152, 155, 193, 194, 195, 196, 198, 203, 204, 206, 207, 208, 226, 250, 310, 383, 411, 461, 464, 473, 481, 484, 485, 486, 488, 489, 490, 497, 498, 508, 520], "duck": [16, 84, 90, 105, 126], "due": [59, 87, 91, 383, 411, 412, 438, 453, 458, 459, 490, 495, 497, 502, 558, 582], "dummi": [110, 111, 397, 464, 522], "dump": [16, 84, 90, 105, 126, 399], "dumps_kwarg": [16, 84, 90, 105, 126], "duplic": [87, 91, 100, 153, 383, 384, 386, 389, 403, 404, 407, 432, 435, 451], "durat": [83, 86, 88, 94, 462, 471, 475, 477, 481, 497, 519, 522], "dure": [16, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 50, 52, 53, 83, 84, 85, 88, 90, 95, 103, 105, 106, 110, 111, 126, 172, 289, 384, 391, 395, 399, 402, 403, 405, 408, 409, 410, 411, 413, 414, 429, 432, 449, 450, 460, 461, 471, 476, 477, 481, 485, 489, 491, 495, 507, 518, 519, 581, 585], "dust": 228, "duti": 409, "dwarf": 510, "dx": [33, 314], "dy": [33, 314], "dynam": [380, 519], "dynesti": 412, "dz": 314, "e": [13, 16, 19, 20, 26, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 46, 47, 50, 51, 54, 59, 67, 68, 82, 83, 84, 85, 86, 87, 90, 91, 95, 105, 115, 126, 127, 128, 143, 152, 153, 154, 155, 157, 181, 188, 194, 195, 196, 198, 200, 202, 204, 206, 207, 208, 213, 216, 218, 220, 221, 223, 224, 227, 228, 230, 231, 232, 233, 236, 237, 238, 239, 240, 241, 242, 243, 244, 247, 251, 253, 254, 255, 256, 257, 258, 262, 263, 264, 265, 267, 269, 270, 271, 272, 275, 277, 278, 279, 291, 293, 297, 310, 312, 316, 342, 350, 361, 372, 373, 378, 382, 383, 384, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 405, 406, 407, 408, 409, 410, 412, 413, 414, 416, 417, 418, 420, 421, 423, 424, 425, 429, 435, 436, 437, 441, 443, 444, 445, 449, 451, 453, 455, 456, 457, 459, 460, 461, 462, 465, 468, 469, 470, 471, 472, 473, 475, 476, 477, 479, 481, 482, 483, 484, 485, 487, 489, 490, 491, 492, 493, 494, 495, 497, 498, 499, 501, 502, 504, 506, 507, 508, 510, 517, 518, 519, 520, 522, 526, 527, 532, 533, 534, 539, 540, 541, 548, 549, 551, 552, 553, 555, 556, 560, 561, 563, 564, 565, 566, 576, 579, 581, 582, 583, 584, 585, 586, 587], "e2dnd": [19, 20, 26, 125, 126, 127, 134, 138, 139, 140, 141, 220, 221, 224, 228, 230, 231, 232, 237, 243, 244, 247, 251, 253, 255, 256, 257, 262, 267, 269, 270, 271, 272, 275, 279, 407, 435, 442, 454, 455, 457, 459, 460, 461, 468, 484, 486, 507, 508, 520, 522, 558], "e2dnde_err": [125, 127], "e2dnde_errn": [125, 127, 484], "e2dnde_errp": [125, 127, 484], "e2dnde_ref": [125, 127], "e2dnde_ul": [125, 127, 484], "e501": [19, 20, 152, 188, 199, 200, 206, 228, 380], "e_": [19, 20, 26, 50, 52, 53, 152, 220, 221, 224, 228, 230, 231, 232, 237, 243, 244, 247, 251, 253, 255, 256, 257, 262, 267, 269, 270, 271, 272, 275, 279, 518, 524, 526, 527, 528, 549, 553, 561, 563, 564], "e_0": [230, 231, 232, 243, 244, 256, 257, 267, 270, 271, 272, 552, 553, 556, 558, 560, 563, 564, 565, 566], "e_b": 406, "e_cut": [67, 484], "e_cutoff": 558, "e_d": [256, 257], "e_edg": 432, "e_max": [67, 127, 407, 454, 459, 460, 461, 472, 476, 484, 485, 486, 487, 490, 495, 508, 520], "e_min": [67, 127, 407, 454, 459, 460, 461, 472, 476, 484, 485, 486, 487, 490, 495, 498, 508, 520], "e_peak": [232, 244], "e_reco": [112, 117, 152, 157, 479, 581], "e_ref": [67, 127, 407, 454, 459, 460, 476, 484, 486, 506, 508, 520], "e_refe_mine_maxdndednde_errpdnde_errndnde_ulsqrt_tsis_ul": 457, "e_refe_mine_maxdndednde_errtssqrt_tsnprednpred_excessstatstat_nullcountssuccess": 469, "e_sn": [43, 44, 52], "e_tru": [112, 117, 157, 479, 498], "each": [11, 19, 20, 26, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 67, 80, 86, 87, 91, 92, 100, 103, 106, 109, 110, 111, 116, 119, 120, 122, 124, 125, 127, 128, 132, 134, 135, 137, 139, 140, 141, 143, 145, 146, 149, 150, 151, 152, 153, 154, 155, 156, 157, 159, 160, 162, 163, 164, 165, 166, 167, 168, 171, 176, 177, 192, 193, 194, 195, 196, 198, 199, 200, 202, 203, 204, 205, 206, 207, 208, 213, 220, 221, 223, 224, 226, 227, 228, 230, 231, 232, 236, 237, 239, 243, 244, 247, 250, 251, 252, 253, 255, 256, 257, 262, 263, 264, 267, 268, 269, 270, 271, 272, 274, 275, 278, 279, 301, 308, 347, 372, 381, 383, 386, 388, 389, 391, 392, 393, 395, 396, 397, 398, 399, 400, 403, 404, 407, 409, 412, 414, 415, 422, 429, 432, 443, 446, 449, 451, 456, 462, 463, 465, 467, 468, 469, 471, 472, 476, 477, 478, 479, 481, 483, 484, 485, 487, 488, 489, 490, 492, 493, 494, 495, 499, 500, 507, 511, 517, 518, 519, 522, 526, 527, 528, 534, 535, 542, 558, 559, 581, 582, 585, 586], "eager": 399, "earli": [397, 402, 403, 497], "earlier": [390, 409], "earth": [41, 88, 282, 498], "earth_azimuth_angl": [498, 508], "earthloc": [83, 85, 88, 90, 94, 97, 320, 410], "easi": [383, 384, 389, 394, 397, 398, 399, 402, 403, 407, 410, 429, 435, 443, 490, 491, 498, 519, 579, 580, 582, 586], "easier": [383, 389, 394, 402, 407, 443, 446, 497], "easiest": 417, "easili": [87, 91, 127, 389, 394, 395, 399, 410, 412, 416, 417, 476, 477, 487, 488, 490, 498, 508, 582], "ebel": 463, "ebl": [228, 229, 279, 401, 406, 429, 432, 442, 449, 451, 453, 458, 493, 502, 536, 568], "ebl_data_builtin": [455, 548], "ebl_dominguez11": [229, 548], "ebl_franceschini": [229, 279], "ebl_franceschini_2017": 229, "ebl_saldana": 229, "eblabsorbtionnormspectralmodel": 406, "eblabsorptionnormspectralmodel": [261, 406, 432, 455, 493, 548], "ebltabl": 455, "ebound": [152, 200, 535], "ebreak": [220, 267, 549, 563], "ec": [479, 493, 535], "eccentr": [227, 236, 239, 539, 540, 541], "echo": 582, "eco": [409, 481], "ecosystem": 410, "ecpl": [67, 80, 230, 231, 232, 289, 406, 441, 457, 484, 493], "ecpl_norm": 554, "ecsv": [59, 63, 127, 395], "ecut": [230, 270, 553, 564], "edelson": [138, 298, 301, 482], "edelson1988": [138, 301], "edelson2002": 298, "edg": [103, 106, 110, 111, 120, 122, 124, 128, 131, 132, 135, 148, 149, 150, 151, 152, 153, 155, 156, 157, 159, 162, 164, 166, 167, 175, 176, 181, 192, 193, 194, 195, 196, 197, 198, 199, 200, 203, 204, 205, 206, 207, 208, 227, 376, 397, 407, 426, 432, 435, 454, 455, 459, 468, 469, 470, 471, 472, 482, 486, 488, 489, 490, 491, 498, 499, 506, 529, 539], "edge_max": [193, 194, 203, 206, 539], "edge_min": [193, 194, 203, 206, 539], "edge_width": [227, 492, 539], "edgecolor": [380, 459, 461, 463, 469, 470, 473, 479, 483, 531, 539, 540, 541], "edges_max": [197, 199, 200, 205, 490], "edges_min": [197, 199, 200, 205, 490], "edisp": [16, 82, 87, 88, 96, 103, 106, 107, 110, 111, 112, 117, 152, 153, 154, 157, 161, 175, 181, 182, 185, 186, 266, 308, 309, 384, 393, 394, 395, 396, 399, 430, 432, 435, 441, 442, 443, 451, 454, 456, 459, 460, 461, 462, 463, 464, 465, 467, 469, 471, 472, 475, 477, 478, 481, 485, 489, 494, 497, 498, 499, 500, 506, 518, 526, 527, 581], "edisp2d": [154, 157, 384], "edisp2d_ax": 157, "edisp3d": 488, "edisp_": 518, "edisp_2d": [82, 87, 157, 497, 500], "edisp_3d": 488, "edisp_bin": 101, "edisp_ev": 488, "edisp_fil": 101, "edisp_kernel": [152, 485, 526], "edisp_kernel_map": [153, 499], "edisp_map": [104, 109, 153, 154, 488, 526], "edisp_new": 488, "edispkernel": [106, 112, 117, 153, 157, 185, 430, 526], "edispkernelmap": [103, 106, 107, 110, 111, 115, 154, 160, 161, 165, 168, 175, 182, 185, 431, 432, 463, 489, 498, 522, 526], "edispmap": [103, 104, 106, 109, 110, 111, 160, 161, 165, 168, 175, 182, 185, 186, 395, 396, 404, 425, 428, 429, 430, 432, 435, 488, 518, 526], "edit": [384, 386, 388, 390, 391, 392, 399, 403, 413, 414, 417, 506, 582], "editor": [384, 409, 460, 506, 582], "editori": 409, "edm": 487, "edu": [28, 30, 31, 32, 33, 35, 36, 37, 38, 39, 40, 50, 52, 53, 57, 58, 60, 61, 62, 83, 88, 120, 138, 155, 194, 203, 206, 213, 226, 247, 250, 282, 283, 292, 299, 301, 403, 487, 535], "eemin": 558, "eff": [155, 524, 527, 540, 541], "eff_area": 488, "effarea": 488, "effect": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 45, 46, 82, 87, 88, 91, 106, 108, 154, 155, 181, 182, 187, 189, 190, 203, 226, 250, 373, 374, 383, 388, 393, 394, 396, 397, 407, 439, 441, 459, 471, 473, 476, 482, 495, 499, 500, 502, 506, 527, 535, 540, 541, 581], "effective_area": [161, 396, 497], "effective_livetim": 489, "effective_times_src": 489, "effectivearea3d": 488, "effectiveareat": [395, 423, 435, 439], "effectiveareatable2d": [88, 154, 161, 167, 189, 389, 439, 488, 497, 524], "effici": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 106, 111, 388, 394, 395, 396, 397, 398, 405, 457, 494, 527, 532, 584], "effort": [390, 392, 399, 400, 402, 403, 406, 426, 518], "eflux": [19, 20, 26, 125, 126, 127, 138, 139, 140, 141, 220, 221, 224, 228, 230, 231, 232, 237, 243, 244, 247, 251, 253, 255, 256, 257, 262, 267, 269, 270, 271, 272, 275, 279, 407, 435, 473, 493, 520], "eflux_err": [125, 127, 407], "eflux_errn": [125, 127], "eflux_errp": [125, 127], "eflux_ref": [125, 127], "eflux_ul": [125, 127], "eg": [383, 451, 455, 467, 475, 478, 481, 485, 488, 492, 493, 495], "egal": 497, "egg": 417, "einasto": [21, 510], "either": [67, 82, 87, 88, 91, 95, 111, 125, 127, 157, 172, 193, 194, 195, 196, 198, 200, 201, 202, 203, 204, 206, 207, 208, 241, 292, 310, 340, 372, 384, 386, 388, 390, 397, 399, 402, 405, 409, 416, 435, 449, 460, 467, 473, 478, 485, 487, 493, 495, 506, 518, 520, 522, 533, 535, 579, 582], "ej": [50, 52, 53], "eject": 52, "ejecta": 52, "el": [26, 483], "elabor": [409, 463], "elaps": [83, 392, 581], "electron": [50, 282, 497, 558], "element": [19, 20, 26, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 87, 91, 92, 100, 103, 106, 110, 111, 125, 127, 149, 150, 151, 152, 153, 154, 155, 156, 157, 159, 160, 162, 164, 165, 166, 167, 168, 193, 194, 195, 196, 198, 199, 201, 203, 204, 206, 207, 208, 220, 221, 222, 223, 224, 225, 226, 227, 228, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 247, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 274, 275, 276, 277, 278, 279, 280, 281, 376, 401, 412, 449, 451, 484, 490, 534], "elementtre": 497, "elev": 398, "elif": [383, 397, 410], "elli": [423, 436], "ellips": [227, 397, 535, 539], "ellipseannulusskyregion": [531, 535], "ellipseskyregion": [222, 223, 227, 236, 239, 252, 254, 263, 264, 268, 274, 278, 456, 493, 531], "ellipsoid": 487, "ellipt": [535, 541], "elong": [425, 428, 429, 539, 540], "elpas": 449, "els": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 125, 127, 135, 202, 383, 386, 397, 400, 407, 410, 411, 414, 416, 418, 494, 582, 584], "elsewher": [116, 119], "email": [384, 386, 409, 414], "emax": [101, 132, 255, 283, 464, 470, 561], "emax_fit": 479, "embryon": 399, "emce": [392, 400, 425, 454, 456, 459, 460, 461, 462, 463, 464, 465, 467, 468, 469, 470, 471, 472, 473, 476, 477, 478, 479, 483, 484, 485, 487, 489, 490, 491, 492, 493, 495, 497, 498, 499, 500, 506, 507, 508], "emerg": 393, "emeri": 444, "emin": [101, 132, 255, 283, 464, 470, 561], "emin_fit": 479, "emiss": [52, 68, 139, 389, 394, 398, 459, 465, 467, 468, 471, 492, 497, 498, 518, 532, 558, 579], "emit": [82, 216, 217, 218, 219, 369, 383, 425, 443, 455, 527], "emitt": 459, "emmanoulopoulo": [306, 451], "emmanoulopoulos2010": 306, "emphas": 486, "emphasi": 487, "empir": 40, "emploi": 461, "empti": [92, 100, 103, 106, 110, 111, 143, 175, 195, 196, 198, 202, 204, 207, 208, 213, 250, 369, 391, 393, 426, 438, 467, 471, 472, 475, 478, 489, 490, 499, 511, 518, 531, 532, 535], "empty_dataset": 454, "empty_i": 478, "empty_map": [103, 106, 110, 111, 470, 489, 531], "emsembl": 93, "en": [34, 83, 87, 88, 91, 128, 188, 203, 213, 279, 310, 386, 403, 454, 462, 464, 467, 469, 475, 478, 487, 488, 491, 497, 519, 522, 533, 535], "enabl": [392, 395, 417, 426, 435, 444, 454, 462, 464, 467, 469, 475, 478, 497, 529], "encapsul": [206, 407, 533], "enclos": [208, 384, 456, 461, 487, 491], "enclosur": [82, 159, 451, 461, 488], "encod": [16, 84, 87, 90, 91, 105, 126], "encompass": [194, 533, 535], "encount": [169, 416, 417, 418, 419, 461, 465, 471, 478, 481, 500, 570, 582], "encourag": [383, 388, 409, 413, 443], "end": [52, 53, 86, 87, 91, 92, 94, 100, 103, 110, 125, 127, 135, 200, 241, 250, 388, 390, 392, 394, 395, 397, 398, 399, 400, 402, 403, 406, 412, 436, 446, 454, 455, 456, 457, 459, 460, 461, 462, 463, 464, 465, 467, 468, 469, 470, 471, 472, 473, 475, 476, 477, 478, 479, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 497, 498, 499, 500, 504, 506, 507, 508, 538, 539, 540, 541, 542, 543, 544, 545, 546, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 569, 570, 571, 572, 573, 574, 575, 576, 577, 584], "end_po": [129, 343, 473], "endswith": 383, "energet": 471, "energi": [16, 19, 20, 26, 44, 50, 51, 52, 53, 58, 62, 63, 67, 71, 74, 75, 80, 82, 83, 88, 96, 100, 101, 102, 103, 104, 106, 108, 109, 110, 111, 112, 113, 114, 115, 117, 118, 120, 122, 124, 125, 127, 128, 129, 132, 134, 135, 137, 139, 140, 141, 142, 146, 147, 148, 149, 150, 152, 153, 154, 155, 156, 157, 162, 163, 164, 165, 166, 167, 168, 175, 177, 181, 182, 184, 185, 186, 188, 189, 191, 193, 194, 195, 196, 198, 199, 200, 201, 203, 204, 206, 207, 208, 220, 221, 222, 223, 224, 225, 226, 227, 228, 230, 231, 232, 233, 234, 236, 237, 238, 239, 240, 241, 242, 243, 244, 247, 250, 251, 252, 253, 254, 255, 256, 257, 258, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 274, 275, 276, 277, 278, 279, 280, 283, 285, 287, 378, 379, 383, 389, 392, 394, 395, 396, 397, 398, 399, 401, 402, 405, 407, 411, 416, 420, 424, 425, 426, 427, 429, 430, 431, 432, 434, 435, 437, 440, 441, 442, 443, 444, 445, 446, 447, 449, 450, 451, 453, 455, 456, 458, 459, 460, 462, 463, 464, 465, 467, 468, 469, 471, 473, 474, 475, 476, 477, 478, 479, 481, 484, 485, 486, 489, 490, 499, 500, 502, 506, 507, 508, 517, 518, 519, 522, 527, 529, 530, 531, 533, 534, 535, 542, 548, 554, 557, 559, 562, 567, 577, 580, 581, 583], "energy_axes_are_align": 100, "energy_axi": [19, 20, 26, 103, 106, 110, 111, 112, 113, 114, 117, 125, 127, 152, 153, 154, 157, 165, 168, 175, 193, 194, 195, 196, 198, 199, 203, 204, 206, 207, 208, 220, 221, 224, 228, 230, 231, 232, 237, 243, 244, 247, 251, 253, 255, 256, 257, 262, 267, 269, 270, 271, 272, 275, 279, 407, 454, 456, 459, 461, 462, 463, 465, 469, 471, 472, 477, 478, 481, 485, 488, 489, 490, 493, 498, 499, 507, 526, 529, 531, 532, 534, 535], "energy_axis_new": 485, "energy_axis_tru": [103, 106, 110, 111, 112, 113, 114, 115, 117, 118, 152, 153, 154, 155, 157, 163, 165, 175, 384, 429, 454, 456, 459, 461, 462, 463, 465, 469, 471, 472, 475, 477, 478, 479, 481, 485, 488, 489, 498, 499, 507, 526, 529, 531, 532], "energy_bin": 399, "energy_bin_per_decade_max": [113, 114], "energy_bound": [19, 20, 26, 220, 221, 224, 228, 230, 231, 232, 237, 243, 244, 247, 251, 253, 255, 256, 257, 262, 267, 269, 270, 271, 272, 275, 279, 397, 435, 455, 457, 459, 461, 467, 468, 479, 483, 484, 487, 493, 498, 507, 508, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 567], "energy_cent": 276, "energy_column": 407, "energy_depend": 470, "energy_dependent_estim": [453, 470, 474], "energy_edg": [16, 120, 122, 124, 128, 129, 132, 135, 143, 144, 148, 200, 330, 407, 455, 459, 460, 463, 464, 465, 467, 468, 469, 470, 473, 476, 477, 478, 479, 486, 499, 506, 507, 520], "energy_estim": 499, "energy_flux": [19, 20, 26, 220, 221, 224, 228, 230, 231, 232, 237, 243, 244, 247, 251, 253, 255, 256, 257, 262, 267, 269, 270, 271, 272, 275, 279, 493, 508], "energy_flux_err": [19, 20, 26, 220, 221, 224, 228, 230, 231, 232, 237, 243, 244, 247, 251, 253, 255, 256, 257, 262, 267, 269, 270, 271, 272, 275, 279], "energy_flux_error": [19, 20, 26, 220, 221, 224, 228, 230, 231, 232, 237, 243, 244, 247, 251, 253, 255, 256, 257, 262, 267, 269, 270, 271, 272, 275, 279], "energy_index": 162, "energy_integr": 51, "energy_logspac": 402, "energy_mask": [193, 194, 203, 206, 431, 461, 467, 479, 485, 487, 491, 495], "energy_max": [19, 20, 26, 83, 100, 103, 106, 110, 111, 125, 127, 128, 129, 132, 152, 193, 194, 200, 203, 206, 220, 221, 224, 228, 230, 231, 232, 237, 243, 244, 247, 251, 253, 255, 256, 257, 262, 267, 269, 270, 271, 272, 275, 276, 279, 285, 397, 399, 467, 472, 479, 481, 483, 485, 489, 493, 508], "energy_min": [19, 20, 26, 52, 53, 83, 100, 103, 106, 110, 111, 125, 127, 128, 129, 132, 152, 193, 194, 200, 203, 206, 220, 221, 224, 228, 230, 231, 232, 237, 243, 244, 247, 251, 253, 255, 256, 257, 262, 267, 269, 270, 271, 272, 275, 276, 279, 285, 397, 399, 467, 472, 479, 481, 483, 485, 489, 493, 508], "energy_nam": [165, 168], "energy_nod": [406, 493], "energy_pow": [19, 20, 26, 127, 220, 221, 224, 228, 230, 231, 232, 237, 243, 244, 247, 251, 253, 255, 256, 257, 262, 267, 269, 270, 271, 272, 275, 279, 287, 459, 467, 479, 487, 508], "energy_rang": [66, 67, 71, 74, 75, 80, 83, 100, 103, 106, 110, 111, 435, 485, 491, 565, 566], "energy_range_fit": [103, 106, 110, 111, 485], "energy_range_saf": [103, 106, 110, 111, 485], "energy_range_tot": [103, 106, 110, 111, 491], "energy_reco": [383, 475], "energy_ref": [125, 127], "energy_resolut": 443, "energy_saf": 399, "energy_tru": [16, 96, 103, 106, 110, 111, 112, 117, 152, 153, 154, 155, 156, 157, 162, 163, 164, 165, 166, 175, 182, 185, 193, 194, 200, 203, 206, 308, 309, 383, 384, 396, 449, 454, 456, 459, 460, 461, 462, 463, 464, 465, 467, 469, 471, 472, 475, 476, 477, 478, 479, 481, 485, 488, 489, 490, 491, 493, 494, 497, 498, 499, 506, 507, 526, 527, 529, 531, 532, 534, 535], "energy_true_axi": 152, "energyaxesconfig": 16, "energyaxisconfig": 16, "energybound": 427, "energydependentmorphologi": 470, "energydependentmorphologyestim": [450, 470], "energydependentmultigausspsf": [161, 423, 488, 497, 528], "energydependenttablepsf": [389, 404, 424, 435], "energydispers": [152, 153, 154, 157, 395, 430, 440, 443, 444], "energydispersion2d": [88, 152, 154, 161, 167, 185, 186, 384, 389, 435, 437, 442, 488, 497, 526], "energydispersion3d": 488, "energyoffsetarrai": 440, "energyrangeconfig": 16, "enforc": [16, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 84, 90, 105, 126, 386, 410], "engin": [87, 91], "english": 522, "enhanc": [388, 392, 420], "enlarg": 532, "enough": [396, 398, 399, 412, 459, 462, 465, 475, 476, 491, 529], "enrico": 399, "enrico_config": 399, "enrico_xml": 399, "enriqu": [391, 399, 403, 424, 425, 426, 427, 428, 429, 430, 431, 432, 435, 437, 443, 444, 445], "ensembl": [93, 412], "ensur": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 181, 201, 289, 383, 389, 394, 395, 406, 410, 417, 437, 451, 454, 459, 477, 486, 491, 529, 534, 543], "enter": [217, 219, 226, 250, 420], "entir": [16, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 84, 87, 90, 91, 103, 105, 106, 110, 111, 126, 182, 412, 456, 467, 470, 482], "entri": [43, 44, 87, 91, 94, 122, 125, 128, 129, 132, 133, 135, 137, 138, 145, 146, 213, 214, 226, 250, 289, 350, 383, 384, 395, 403, 407, 410, 413, 435, 446, 451, 456, 460, 484, 487, 490, 493, 494, 522, 523, 535], "entry_point": 436, "enum": [95, 158, 325, 326], "enumer": [412, 459, 471, 484, 487, 492, 495], "env": [386, 400, 413, 415, 416, 418, 419, 444, 582], "envelop": [396, 487, 507], "environ": [11, 82, 348, 382, 383, 386, 390, 391, 395, 400, 403, 413, 414, 416, 417, 418, 419, 420, 424, 425, 427, 443, 444, 451, 454, 456, 459, 460, 461, 462, 463, 464, 465, 467, 468, 469, 470, 471, 472, 473, 476, 477, 478, 479, 483, 484, 485, 487, 489, 490, 491, 492, 493, 495, 497, 498, 499, 500, 506, 507, 508, 582], "envis": 392, "envvar": 11, "eosc": 409, "episod": 139, "epoch": 366, "epsilon": [19, 20, 26, 220, 221, 224, 228, 230, 231, 232, 237, 243, 244, 247, 251, 253, 255, 256, 257, 262, 267, 269, 270, 271, 272, 275, 279], "epsilon_": [103, 110, 518], "epsilon_k": [103, 110, 518], "epsmch": 487, "eq": 102, "eqcon": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40], "eqnarrai": 406, "equal": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 52, 120, 124, 128, 132, 135, 152, 200, 383, 393, 396, 445, 459, 476, 477, 491, 495, 518, 534, 585], "equat": [27, 271, 272, 298, 544, 545, 549, 552, 553, 555, 556, 560, 561, 563, 564, 565, 566, 584, 585], "equatori": [95, 158, 194, 195, 196, 198, 201, 203, 206, 207, 208, 488], "equival": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 87, 91, 125, 149, 150, 151, 152, 155, 156, 157, 159, 162, 164, 166, 167, 193, 194, 195, 196, 198, 200, 203, 204, 206, 207, 208, 245, 376, 384, 395, 396, 397, 406, 407, 449, 450, 459, 484, 489, 490, 491, 493, 497, 506, 518, 520, 522, 533, 534, 535, 582, 583, 584], "er": [26, 483], "era": 228, "ereco": [152, 488], "erf": [237, 539], "erg": [52, 53, 67, 454, 459, 484, 508, 515, 522], "erlangen": 402, "erod": 208, "eros": [206, 208], "err": 487, "errat": 383, "errlo": 412, "errn": [124, 128, 132, 133, 135, 213, 446, 584], "errn_2sigma": 584, "error": [11, 16, 19, 20, 26, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 67, 68, 79, 84, 86, 90, 102, 103, 105, 106, 110, 111, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 135, 136, 138, 139, 140, 141, 145, 171, 197, 200, 205, 216, 218, 220, 221, 222, 223, 224, 227, 228, 230, 231, 232, 233, 236, 237, 238, 239, 240, 241, 242, 243, 244, 247, 251, 252, 253, 254, 255, 256, 257, 258, 262, 263, 264, 265, 267, 268, 269, 270, 271, 272, 274, 275, 277, 278, 279, 291, 293, 297, 298, 299, 301, 306, 361, 383, 384, 397, 398, 399, 401, 406, 407, 410, 411, 412, 425, 429, 431, 433, 435, 436, 438, 442, 443, 446, 448, 449, 450, 451, 455, 456, 457, 459, 460, 462, 463, 464, 467, 468, 469, 470, 472, 475, 476, 478, 479, 481, 482, 484, 486, 493, 494, 495, 497, 506, 507, 508, 510, 518, 520, 522, 540, 558, 567, 579, 582], "error_callback": 171, "errorbar": [83, 102, 103, 106, 110, 111, 200, 204, 225, 233, 238, 240, 241, 242, 258, 265, 277, 280, 454, 481, 495], "errp": [124, 128, 132, 133, 135, 213, 446, 584], "errp_2sigma": 584, "errup": 412, "escap": [383, 409, 412], "especi": [87, 91, 139, 386, 390, 393, 397, 403, 404, 414, 435, 441, 456, 469, 477, 484, 490, 495, 497, 498], "ess": 412, "essenti": [393, 395, 398, 429, 430, 431, 473, 490], "establish": [383, 396], "estim": [6, 19, 20, 26, 50, 72, 102, 106, 111, 113, 114, 120, 121, 122, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 170, 176, 177, 178, 184, 193, 194, 203, 206, 208, 213, 216, 220, 221, 223, 224, 227, 228, 230, 231, 232, 233, 236, 237, 238, 239, 240, 241, 242, 243, 244, 247, 251, 252, 253, 254, 255, 256, 257, 258, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 274, 275, 277, 278, 279, 289, 296, 299, 304, 330, 376, 387, 389, 392, 396, 397, 398, 399, 402, 405, 411, 416, 425, 426, 429, 430, 431, 432, 435, 436, 437, 441, 442, 443, 444, 446, 449, 450, 451, 453, 454, 455, 459, 461, 465, 467, 468, 469, 472, 474, 477, 478, 479, 480, 485, 487, 491, 495, 496, 499, 502, 506, 507, 518, 522, 532, 579, 580, 581, 583, 585], "estimate_best_fit": [128, 129, 132, 133], "estimate_count": [128, 129, 132, 133], "estimate_energy_depend": 122, "estimate_errn_errp": [128, 129, 132, 133], "estimate_excess_map": 124, "estimate_exposure_reco_energi": 124, "estimate_fit_input_map": 135, "estimate_flux_default": 135, "estimate_flux_map": 135, "estimate_flux_point": [128, 129, 132], "estimate_kernel": [124, 135], "estimate_map": 120, "estimate_mask_default": [124, 135], "estimate_min_e2dnd": 134, "estimate_min_excess": 134, "estimate_npr": [128, 129, 132, 133], "estimate_npred_excess": [128, 129, 132], "estimate_pad_width": 135, "estimate_scan": [128, 129, 132, 133], "estimate_t": [128, 129, 132, 133], "estimate_time_bin_flux": 132, "estimate_ul": [128, 129, 132, 133], "estimator_result": [137, 145, 146, 479], "et": [26, 33, 59, 102, 138, 139, 155, 228, 298, 299, 301, 306, 393, 412, 451, 463, 470, 482, 510, 581], "eta": [239, 240, 263, 541, 545, 572], "eta_": 50, "eta_b": 50, "eta_rang": [541, 545], "etc": [106, 111, 125, 383, 388, 389, 393, 394, 395, 398, 399, 403, 404, 407, 409, 410, 412, 432, 460, 462, 467, 475, 476, 478, 479, 481, 485, 490, 493, 495, 498, 506, 518, 531], "etru": 488, "eu": 403, "euclidean": 308, "europ": 409, "ev": [486, 488, 522, 558], "ev2": 488, "evalu": [17, 18, 19, 20, 21, 22, 24, 25, 26, 27, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 68, 87, 91, 103, 106, 109, 110, 111, 149, 150, 151, 152, 155, 156, 157, 159, 162, 164, 166, 167, 175, 182, 188, 203, 214, 215, 220, 221, 222, 223, 224, 225, 226, 227, 228, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 247, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 274, 275, 276, 277, 278, 279, 280, 281, 323, 383, 388, 392, 398, 401, 402, 405, 406, 407, 411, 424, 425, 426, 428, 431, 435, 440, 441, 443, 444, 445, 446, 447, 448, 449, 450, 451, 471, 472, 479, 488, 493, 495, 497, 498, 518, 540, 541, 548, 581, 584], "evaluate_contain": [156, 164, 166, 437], "evaluate_direct": [156, 164, 166], "evaluate_energy_flux": [256, 257], "evaluate_error": [19, 20, 26, 127, 220, 221, 224, 228, 230, 231, 232, 237, 243, 244, 247, 251, 253, 255, 256, 257, 262, 267, 269, 270, 271, 272, 275, 279, 401], "evaluate_geom": [222, 223, 227, 234, 236, 239, 252, 254, 263, 264, 266, 268, 274, 278, 450, 493, 541], "evaluate_integr": [255, 256, 257], "evaluate_paramet": [156, 164, 166], "evaluation_bin_size_min": [222, 223, 227, 236, 239, 252, 254, 263, 264, 266, 268, 274, 278], "evaluation_radiu": [222, 223, 227, 236, 239, 252, 254, 263, 264, 266, 268, 274, 276, 278, 394, 395, 406, 493], "evaluation_region": [222, 223, 227, 236, 239, 252, 254, 263, 264, 266, 268, 274, 278], "even": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 87, 91, 136, 145, 206, 217, 219, 383, 386, 388, 390, 391, 397, 400, 401, 409, 410, 412, 427, 476, 479, 486, 487, 489, 490, 491, 492, 493, 506, 518, 520, 544, 545, 582], "event": [82, 83, 84, 85, 86, 87, 88, 89, 90, 93, 104, 105, 109, 115, 124, 134, 154, 165, 168, 169, 176, 184, 195, 196, 198, 204, 207, 208, 225, 233, 238, 240, 241, 242, 258, 265, 277, 280, 340, 383, 384, 387, 389, 393, 395, 397, 398, 399, 410, 416, 420, 427, 428, 429, 431, 435, 436, 437, 442, 443, 444, 445, 446, 449, 450, 451, 453, 456, 459, 460, 461, 465, 467, 468, 474, 478, 489, 499, 502, 504, 506, 507, 522, 530, 531, 532, 580, 581, 584], "event_3fhl": 508, "event_class": [84, 498, 508], "event_det_coord": [104, 109], "event_fil": 88, "event_filt": 89, "event_filter_typ": 89, "event_id": [396, 497, 498, 508, 519], "event_list": [83, 383, 384, 396], "event_list_meta": [104, 109, 430], "event_sampl": [453, 471, 474], "event_sampling_nrg_depend_model": [453, 472, 474], "event_typ": [105, 498, 508], "eventlist": [84, 88, 104, 109, 184, 195, 196, 198, 204, 207, 208, 383, 384, 389, 396, 397, 398, 410, 420, 425, 432, 437, 439, 440, 441, 443, 444, 471, 472, 479, 490, 497, 498, 508, 519, 522, 531], "eventlistbas": 89, "eventlistdataset": 444, "eventlistmetadata": [83, 410], "events2": 83, "events_": 471, "events_0001": 471, "events_1": 519, "events_2": 519, "events_3fhl": 508, "events_bkg": 396, "events_gc_3fhl": 508, "events_list": 396, "events_path": [82, 471], "events_src": 396, "events_tot": 396, "events_vela": 479, "eventu": [383, 388, 399, 402, 403, 420, 493], "ever": [412, 585], "everi": [194, 196, 208, 278, 383, 386, 391, 392, 393, 395, 399, 408, 410, 414, 456, 459, 490, 507, 582], "everyon": 388, "everyth": [383, 401, 402, 522], "everywher": [383, 397, 402, 403, 424], "evid": [139, 484], "evolut": [50, 52, 53, 228, 389, 403, 453, 474, 502, 515, 516, 536], "evolv": [28, 29, 30, 35, 36, 39, 40, 50, 52, 53, 228, 400, 403, 410, 412, 472, 488], "evt_sampl": 471, "ex": [11, 490, 492, 493], "exact": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 91, 401, 477, 490, 498], "exactli": [120, 124, 128, 132, 135, 200, 378, 412, 459, 461, 477, 479, 491, 495, 498, 518, 535], "exagger": 374, "examin": [409, 526], "exampl": [11, 19, 20, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 66, 67, 80, 82, 83, 85, 86, 87, 88, 89, 91, 94, 96, 99, 102, 103, 106, 110, 111, 112, 116, 117, 119, 120, 122, 124, 125, 127, 129, 131, 132, 133, 134, 135, 139, 143, 144, 147, 148, 150, 152, 154, 155, 156, 157, 163, 165, 168, 175, 178, 180, 193, 194, 195, 196, 197, 198, 199, 200, 201, 203, 204, 205, 206, 207, 208, 213, 217, 219, 241, 248, 279, 283, 289, 292, 308, 309, 330, 334, 340, 350, 362, 363, 368, 371, 373, 374, 376, 378, 380, 383, 384, 386, 388, 391, 393, 394, 395, 396, 397, 398, 399, 400, 401, 403, 406, 409, 410, 411, 412, 416, 417, 418, 420, 424, 426, 429, 432, 435, 436, 437, 440, 442, 443, 444, 450, 451, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 512, 513, 519, 522, 524, 525, 526, 528, 533, 535, 536, 537, 547, 568, 576, 577, 578, 579, 582, 584, 586, 587], "example_cub": 490, "example_cube_fgst": 490, "exce": [113, 114], "except": [67, 69, 80, 87, 91, 103, 106, 110, 111, 171, 195, 196, 198, 204, 207, 208, 310, 380, 383, 394, 398, 402, 488, 492, 535], "excerpt": 500, "excess": [15, 67, 72, 103, 106, 110, 111, 121, 124, 125, 127, 128, 129, 132, 134, 137, 140, 141, 145, 146, 175, 291, 293, 298, 299, 381, 395, 398, 431, 432, 438, 443, 450, 451, 454, 455, 459, 460, 462, 463, 464, 467, 469, 473, 475, 478, 479, 484, 485, 486, 489, 491, 492, 499, 506, 507, 520, 522], "excess_estim": 499, "excess_estimator_integr": 499, "excess_integr": 499, "excess_map": [16, 460, 464, 465, 467, 506], "excess_map_estim": 479, "excess_matching_signific": [434, 444], "excess_min": 148, "excess_r": 485, "excessestim": 407, "excessmapconfig": 16, "excessmapestim": [121, 143, 144, 145, 146, 407, 431, 432, 433, 435, 438, 448, 450, 451, 465, 467, 479, 486, 491, 499, 520], "excesspointsestim": 407, "excessprofileestim": [407, 432], "exchang": 397, "exclud": [16, 84, 90, 102, 103, 105, 106, 110, 111, 126, 131, 176, 178, 217, 219, 226, 250, 389, 447, 467, 489, 491, 531, 532], "exclude_default": [16, 84, 90, 105, 126], "exclude_non": [16, 84, 90, 105, 126], "exclude_unset": [16, 84, 90, 105, 126], "exclus": [16, 83, 170, 172, 177, 178, 179, 180, 183, 194, 206, 389, 397, 399, 431, 433, 451, 456, 464, 467, 489, 529, 531], "exclusion_mask": [170, 172, 177, 178, 179, 180, 183, 459, 465, 469, 489, 491, 507, 529, 531, 532], "exclusion_mask_2d": 489, "exclusion_mask_crab": [460, 506], "exclusion_radiu": 491, "exclusion_region": 459, "exclusionmask": 441, "execut": [11, 124, 128, 132, 133, 135, 383, 384, 386, 388, 390, 391, 392, 398, 399, 403, 414, 415, 416, 417, 418, 419, 420, 429, 437, 443, 453, 458, 466, 474, 480, 489, 490, 496, 498, 501, 502, 503, 505, 508, 509, 537, 547, 568, 578, 580], "exercis": [386, 399, 403, 409], "exhibit": 470, "exist": [11, 15, 16, 26, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 87, 88, 91, 99, 100, 102, 103, 106, 108, 110, 111, 125, 127, 153, 154, 160, 165, 168, 180, 193, 194, 195, 196, 198, 199, 202, 203, 204, 206, 207, 208, 214, 226, 241, 250, 274, 275, 276, 278, 352, 367, 383, 386, 388, 391, 392, 394, 395, 396, 397, 399, 400, 402, 403, 404, 406, 407, 409, 410, 412, 416, 417, 420, 421, 424, 428, 429, 443, 444, 446, 449, 463, 465, 485, 490, 491, 493, 494, 498, 519, 534, 535, 583], "exist_ok": [459, 460, 467, 468, 471, 506, 507], "exit": [11, 15, 87, 91, 217, 219, 226, 250, 425, 546, 582], "exot": 400, "exp": [21, 28, 29, 30, 31, 32, 35, 36, 39, 40, 155, 233, 237, 244, 256, 257, 270, 384, 406, 478, 493, 540, 541, 548, 552, 553, 554, 555, 564, 565, 566, 570, 571, 572, 585], "expand": [132, 348, 393, 435], "expand_map": 132, "expans": [50, 52, 53], "expcutoffpowerlaw": 554, "expcutoffpowerlaw3fglspectralmodel": [261, 406, 457, 493, 553], "expcutoffpowerlawnormspectralmodel": [232, 261, 450, 493, 554], "expcutoffpowerlawspectralmodel": [19, 20, 26, 80, 220, 221, 224, 228, 230, 231, 237, 243, 244, 247, 251, 253, 255, 256, 257, 261, 262, 267, 269, 270, 271, 272, 275, 279, 406, 457, 459, 467, 493, 552, 558], "expdecai": [233, 453, 536, 578], "expdecay_model": [471, 570], "expdecaytemporalmodel": [273, 406, 431, 435, 471, 478, 493, 570], "expect": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 106, 109, 111, 125, 180, 185, 186, 191, 206, 291, 292, 293, 294, 296, 300, 307, 340, 383, 388, 396, 398, 399, 400, 403, 408, 410, 454, 456, 461, 462, 463, 465, 471, 472, 476, 482, 483, 487, 490, 491, 495, 498, 500, 518, 520, 583, 584, 585], "expens": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 459, 472], "experi": [383, 386, 388, 392, 394, 398, 411, 412, 414, 443, 510, 581, 586], "experienc": [392, 419], "experiment": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 399, 582], "expert": 403, "expertis": 400, "expfactor": [271, 272, 565, 566], "expir": 396, "explain": [87, 91, 383, 386, 388, 397, 400, 402, 403, 409, 414, 416, 418, 429, 435, 454, 459, 461, 483, 487, 491, 493, 497, 522, 580, 582], "explan": [120, 124, 128, 132, 135, 384, 388, 421, 482, 586], "explicit": [87, 91, 194, 196, 383, 384, 399, 401, 407, 534, 586], "explicitli": [16, 19, 20, 26, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 84, 90, 105, 126, 149, 150, 151, 152, 155, 156, 157, 159, 162, 164, 166, 167, 220, 221, 224, 228, 230, 231, 232, 237, 243, 244, 247, 251, 253, 255, 256, 257, 262, 267, 269, 270, 271, 272, 275, 279, 310, 393, 405, 415, 425, 472, 492, 520, 534, 586], "explor": [195, 196, 198, 204, 207, 208, 391, 399, 412, 420, 453, 459, 464, 467, 470, 473, 474, 476, 477, 481, 482, 484, 485, 492, 499, 500, 506, 508, 522, 531], "explos": 52, "expomap": 396, "expon": [406, 493], "exponenti": [28, 30, 36, 39, 40, 77, 230, 231, 232, 233, 270, 271, 272, 384, 394, 429, 453, 467, 471, 478, 536, 568], "exponentialcutoffpowerlaw": 558, "export": [84, 87, 90, 91, 103, 105, 106, 125, 126, 127, 386, 407, 410, 416, 418, 429, 439, 446, 447, 450, 460, 493, 499, 500, 506], "expos": [6, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 392, 397, 398, 399, 402, 403, 448, 450, 451, 490, 502, 520, 521, 580], "exposur": [16, 83, 88, 101, 103, 106, 107, 109, 110, 111, 124, 135, 142, 153, 154, 160, 163, 165, 168, 170, 175, 182, 185, 186, 187, 189, 190, 191, 266, 302, 305, 307, 389, 392, 393, 394, 395, 396, 407, 427, 432, 440, 442, 443, 444, 446, 454, 455, 456, 459, 460, 461, 462, 463, 464, 465, 467, 469, 471, 472, 475, 477, 478, 481, 485, 489, 490, 491, 499, 506, 507, 518, 527, 530, 535, 584], "exposure_fil": 101, "exposure_geom": 154, "exposure_hdu": [153, 154, 160, 165, 168], "exposure_hdu_band": [153, 154, 160, 165, 168], "exposure_hpx": 498, "exposure_map": [153, 154, 160, 165, 168, 185, 186, 191, 488], "exposure_max": 485, "exposure_min": 485, "exposure_tim": 396, "express": [124, 139, 291, 293, 394, 406, 407, 450, 465, 487, 488, 493, 495, 518, 534, 541, 583, 584, 585], "exptest": 441, "extend": [15, 19, 20, 26, 69, 72, 87, 91, 92, 100, 170, 197, 200, 208, 220, 221, 224, 228, 230, 231, 232, 237, 243, 244, 247, 250, 251, 253, 255, 256, 257, 262, 267, 269, 270, 271, 272, 275, 279, 292, 390, 394, 395, 396, 397, 403, 405, 406, 407, 410, 416, 428, 430, 435, 453, 458, 459, 463, 472, 476, 484, 490, 491, 492, 493, 498, 502, 530, 531], "extended_archive_v18": 546, "extended_source_spectral_analysi": [453, 456, 458], "extens": [41, 152, 195, 196, 198, 200, 207, 208, 222, 223, 226, 227, 236, 239, 250, 252, 254, 263, 264, 268, 274, 278, 385, 388, 389, 390, 391, 392, 394, 396, 398, 399, 400, 401, 402, 403, 413, 414, 438, 470, 471, 472, 493, 582], "extent": [206, 226, 250, 397, 463, 493], "extern": [115, 384, 409, 436, 440, 441, 444, 497, 522], "extnam": 488, "extra": [16, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 47, 83, 84, 90, 102, 105, 126, 193, 194, 199, 203, 204, 206, 212, 213, 215, 274, 275, 308, 382, 384, 390, 391, 397, 399, 400, 403, 409, 410, 440, 443, 444, 455, 490, 491, 522, 535], "extra_term": 307, "extract": [16, 84, 90, 100, 103, 105, 106, 110, 111, 125, 126, 127, 132, 153, 154, 160, 165, 168, 171, 176, 177, 182, 184, 192, 195, 196, 197, 198, 200, 205, 206, 207, 208, 276, 383, 393, 398, 407, 409, 410, 437, 438, 449, 450, 454, 456, 459, 460, 461, 462, 467, 468, 471, 472, 473, 475, 481, 485, 486, 490, 506, 518, 526, 531], "extragalact": [228, 455, 497], "extrapol": [102, 149, 150, 151, 175, 195, 196, 198, 204, 207, 208, 228, 279, 322, 323, 435, 440, 442, 443, 451, 488, 490, 497, 498, 534], "extras_requir": 400, "extrem": [383, 410, 490, 541], "ey": 412, "f": [17, 18, 19, 20, 21, 22, 24, 25, 26, 27, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 87, 91, 135, 148, 202, 213, 220, 221, 224, 228, 230, 231, 232, 237, 243, 244, 247, 251, 253, 255, 256, 257, 262, 267, 269, 270, 271, 272, 275, 279, 309, 310, 337, 383, 386, 400, 405, 406, 411, 415, 416, 418, 437, 446, 454, 456, 459, 460, 462, 468, 469, 470, 471, 472, 477, 478, 479, 481, 483, 484, 487, 489, 491, 493, 494, 495, 498, 499, 504, 506, 507, 508, 516, 531, 548, 558, 569, 570, 571, 572, 573, 574, 575, 582, 583, 584], "f0": [277, 576], "f06": 48, "f06b": [49, 512], "f06p": 49, "f1": [277, 576], "f2": [277, 576], "f4": [150, 155, 461, 485, 488, 490, 497, 498], "f8": [488, 498], "f_": [297, 299, 309, 518], "f_0": [255, 561], "f_dead": [83, 88], "f_i": 297, "f_max": 482, "f_max_err": 482, "f_mean": 482, "f_mean_err": 482, "f_min": 482, "f_min_err": 482, "f_pp": 298, "f_var": 298, "fabio": [396, 401, 412, 425, 427, 428, 429, 430, 431, 432, 434, 435, 437, 438, 442, 444, 446, 448, 449, 450, 451], "face": [388, 391], "facecolor": [380, 455, 459, 461, 469, 470, 473, 479, 483, 539, 540, 541], "facil": 408, "fact": [19, 20, 97, 216, 220, 223, 224, 227, 228, 230, 231, 232, 233, 236, 237, 238, 239, 240, 241, 242, 243, 244, 247, 254, 255, 256, 257, 258, 262, 263, 264, 265, 267, 270, 271, 272, 277, 278, 409, 456, 535], "facto": 409, "factor": [19, 20, 23, 103, 104, 106, 109, 110, 111, 120, 124, 125, 153, 154, 156, 160, 162, 163, 164, 165, 166, 168, 175, 182, 188, 192, 193, 194, 195, 196, 198, 199, 200, 203, 204, 206, 207, 208, 211, 216, 217, 218, 219, 220, 223, 224, 227, 228, 230, 231, 232, 233, 236, 237, 238, 239, 240, 241, 242, 243, 244, 247, 252, 254, 255, 256, 257, 258, 262, 263, 264, 265, 266, 267, 268, 270, 271, 272, 274, 277, 278, 280, 292, 383, 396, 398, 412, 431, 451, 454, 462, 463, 464, 467, 469, 473, 475, 478, 485, 486, 489, 493, 497, 518, 535, 548], "factor1": [19, 20, 216, 218, 220, 223, 224, 227, 228, 230, 231, 232, 233, 236, 237, 238, 239, 240, 241, 242, 243, 244, 247, 254, 255, 256, 257, 258, 262, 263, 264, 265, 267, 270, 271, 272, 277, 278], "factor_max": [19, 20, 216, 218, 220, 223, 224, 227, 228, 230, 231, 232, 233, 236, 237, 238, 239, 240, 241, 242, 243, 244, 247, 254, 255, 256, 257, 258, 262, 263, 264, 265, 267, 270, 271, 272, 277, 278], "factor_min": [19, 20, 216, 218, 220, 223, 224, 227, 228, 230, 231, 232, 233, 236, 237, 238, 239, 240, 241, 242, 243, 244, 247, 254, 255, 256, 257, 258, 262, 263, 264, 265, 267, 270, 271, 272, 277, 278], "factori": [195, 196, 207, 208, 397, 402, 406, 533, 535], "factoris": [266, 406, 493, 579], "fail": [16, 84, 90, 105, 126, 213, 384, 386, 397, 412, 413, 414, 438, 451, 468, 498], "failur": [446, 449], "faint": 583, "fair": [383, 409], "fair4r": [383, 409], "fake": [103, 106, 110, 111, 395, 396, 427, 461, 462, 475, 478, 495], "fall": [77, 139, 178, 205, 226, 250, 383, 390, 392, 393, 400, 412, 444, 445, 482], "fallback": 383, "fals": [16, 19, 20, 23, 26, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 67, 80, 82, 83, 84, 86, 87, 88, 90, 91, 96, 100, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 115, 116, 119, 124, 125, 126, 127, 128, 132, 149, 150, 151, 152, 153, 154, 155, 156, 157, 159, 160, 162, 163, 164, 165, 166, 167, 168, 175, 182, 185, 186, 188, 189, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 213, 214, 216, 217, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 247, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 274, 275, 276, 277, 278, 279, 280, 281, 292, 310, 323, 340, 346, 349, 351, 352, 380, 383, 397, 399, 406, 411, 412, 443, 444, 450, 454, 455, 456, 459, 460, 461, 462, 464, 465, 467, 468, 469, 470, 471, 473, 475, 476, 477, 478, 481, 483, 484, 485, 487, 488, 489, 490, 491, 492, 493, 495, 498, 506, 507, 508, 519, 522, 529, 531, 532, 546, 558, 567], "falsifi": 495, "famili": 409, "familiar": [400, 401, 490, 491, 508], "fanci": [383, 479], "far": [391, 396, 398, 400, 404, 407, 410, 412, 420, 435, 471, 510], "fashion": [398, 403], "fast": [383, 397, 401, 487], "faster": [87, 91, 136, 145, 195, 196, 198, 204, 207, 208, 361, 450, 463], "faucher": [31, 33, 37, 39, 45], "faucherkaspi2006": [28, 29, 31, 35, 36, 39, 40, 48], "faucherkaspi2006velocitybimod": 49, "faucherkaspi2006velocitymaxwellian": 49, "faucherspir": 512, "favour": [388, 396, 411, 495], "favourit": 469, "fc": [493, 535], "fcluster": [308, 494], "fcluster_kwarg": [308, 494], "fcn": [412, 487], "fdx": 383, "fe": 282, "feasibl": [397, 402, 462, 475, 485], "featur": [6, 13, 87, 91, 96, 120, 143, 308, 309, 373, 374, 383, 386, 390, 392, 393, 394, 395, 397, 399, 400, 405, 406, 407, 409, 410, 411, 417, 422, 425, 426, 427, 428, 429, 431, 432, 435, 439, 442, 443, 444, 445, 482, 490, 491, 493, 494, 520, 558], "feature_irf": 494, "features_irf": [96, 308, 309, 494], "feb": [389, 390, 400, 404, 420, 421, 422], "februari": 422, "fed": 461, "feedback": [386, 388, 392, 397, 399, 400, 403, 404, 406, 412, 413, 443, 488, 522], "feedstock": [413, 414], "feel": [393, 582], "feijen": [448, 449, 450, 451], "feldman": [426, 432, 440, 442, 581], "feldman1998": [581, 584], "fellowship": 409, "felt": 383, "fermi": [55, 58, 60, 61, 62, 64, 65, 69, 71, 74, 75, 77, 78, 83, 86, 101, 128, 129, 131, 135, 195, 196, 198, 204, 205, 207, 208, 228, 282, 284, 289, 390, 391, 392, 393, 395, 396, 399, 400, 403, 414, 416, 421, 423, 424, 427, 429, 432, 436, 439, 440, 441, 442, 443, 444, 451, 453, 455, 457, 463, 471, 473, 484, 490, 491, 492, 493, 501, 502, 508, 510, 519, 522, 527, 546, 556, 561, 579, 586], "fermi_3fhl": [83, 195, 196, 198, 204, 207, 208, 492, 498, 508], "fermi_3fhl_events_select": [83, 498], "fermi_3fhl_exposure_cube_hpx": 498, "fermi_3fhl_psf_gc": 498, "fermi_bkg_model": 492, "fermi_ct": 131, "fermi_dataset": [289, 492, 498], "fermi_lat": [403, 444, 453, 498, 501], "fermi_model": 498, "fermi_prof": 129, "fermi_ts_imag": 384, "fermilat": 455, "fermipi": [101, 390, 392, 395, 399, 403, 407, 441, 443, 498, 510], "fermitool": 399, "fetch": [15, 383, 391, 413, 423, 436, 506, 582], "few": [82, 83, 87, 88, 91, 382, 383, 384, 386, 388, 389, 390, 391, 393, 395, 397, 401, 403, 408, 412, 413, 414, 420, 434, 445, 447, 450, 451, 456, 460, 465, 467, 469, 484, 486, 487, 490, 497, 506, 507, 531, 535, 587], "fewer": [397, 403], "ff": 409, "fft": 208, "fftconvolv": 208, "fgl": [205, 491], "fgst": [194, 195, 196, 198, 199, 200, 206, 207, 208, 490], "fhit": 499, "fidalgo": [393, 398, 424, 444, 445], "fiduci": 490, "field": [16, 42, 50, 51, 54, 83, 84, 87, 90, 91, 105, 126, 149, 150, 151, 152, 155, 156, 157, 158, 159, 162, 164, 166, 167, 172, 234, 251, 312, 316, 370, 383, 397, 409, 410, 420, 425, 430, 437, 444, 459, 461, 465, 467, 469, 471, 488, 489, 491, 497, 498, 522, 524, 525, 526, 527, 528, 529, 531, 558, 581], "fieldinfo": [16, 84, 90, 105, 126], "fig": [208, 371, 454, 456, 459, 460, 461, 462, 463, 465, 467, 468, 469, 470, 473, 476, 478, 479, 483, 487, 491, 495, 507, 531, 532, 541, 545, 548, 580], "figsiz": [88, 103, 106, 110, 111, 130, 149, 150, 152, 153, 154, 155, 156, 157, 162, 163, 164, 165, 166, 168, 195, 196, 198, 204, 207, 208, 211, 371, 456, 459, 462, 463, 465, 467, 468, 469, 470, 476, 477, 478, 479, 481, 482, 483, 484, 487, 488, 489, 490, 491, 492, 493, 494, 495, 497, 498, 500, 507, 531, 541, 545, 548], "figur": [88, 103, 106, 110, 111, 130, 149, 150, 152, 153, 154, 155, 156, 162, 163, 164, 165, 166, 168, 195, 196, 198, 204, 207, 208, 211, 361, 370, 371, 377, 383, 384, 388, 403, 414, 455, 459, 463, 467, 469, 470, 471, 473, 476, 477, 482, 483, 484, 485, 487, 489, 490, 492, 493, 497, 498, 499, 500, 582], "file": [11, 15, 16, 26, 65, 66, 67, 82, 83, 85, 86, 87, 88, 91, 93, 94, 100, 101, 102, 103, 106, 107, 108, 110, 111, 125, 127, 149, 150, 151, 152, 153, 154, 155, 156, 157, 159, 160, 162, 163, 164, 165, 166, 167, 168, 169, 176, 181, 195, 196, 198, 202, 204, 207, 208, 214, 226, 228, 241, 250, 274, 275, 276, 277, 278, 279, 318, 346, 349, 352, 382, 383, 386, 388, 389, 390, 391, 392, 393, 394, 395, 396, 399, 400, 402, 403, 404, 406, 407, 410, 411, 413, 414, 415, 416, 418, 420, 428, 429, 435, 437, 439, 441, 442, 443, 444, 446, 447, 449, 450, 451, 453, 454, 458, 461, 462, 466, 467, 469, 471, 472, 474, 475, 478, 480, 484, 485, 489, 490, 491, 492, 493, 496, 499, 500, 501, 502, 503, 505, 508, 509, 510, 521, 522, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 586], "file_dir": 318, "file_model": 471, "file_nam": 318, "filemod": [16, 460, 464, 465, 467, 506, 582], "filenam": [11, 16, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 82, 83, 85, 86, 87, 91, 94, 100, 101, 102, 103, 106, 107, 108, 110, 111, 125, 127, 129, 131, 133, 149, 150, 151, 152, 153, 154, 155, 156, 157, 159, 160, 162, 164, 165, 166, 167, 168, 169, 195, 196, 198, 202, 204, 207, 208, 226, 228, 241, 250, 274, 275, 276, 277, 278, 279, 284, 286, 288, 289, 318, 349, 352, 362, 383, 384, 388, 432, 451, 459, 460, 464, 465, 467, 468, 472, 473, 484, 485, 486, 490, 491, 492, 493, 497, 498, 506, 507, 508, 519, 522, 524, 525, 526, 528, 546, 548, 576, 577, 582], "filename_1": 519, "filename_2": 519, "filename_arf": 108, "filename_bkg": 108, "filename_model": [100, 125, 289, 492, 498], "filename_rmf": 108, "filepath": 16, "fill": [16, 84, 85, 87, 90, 91, 103, 105, 106, 109, 110, 111, 126, 152, 163, 194, 195, 196, 198, 204, 206, 207, 208, 279, 383, 391, 392, 396, 399, 403, 409, 413, 414, 429, 436, 443, 446, 456, 471, 472, 484, 488, 489, 491, 498, 507, 534], "fill_between": [19, 20, 26, 130, 220, 221, 224, 228, 230, 231, 232, 237, 243, 244, 247, 251, 253, 255, 256, 257, 262, 267, 269, 270, 271, 272, 275, 279, 479], "fill_by_coord": [163, 195, 196, 198, 204, 207, 208, 490, 498, 534], "fill_by_idx": [195, 196, 198, 204, 207, 208, 534], "fill_by_pix": [195, 196, 198, 204, 207, 208, 534], "fill_ev": [195, 196, 198, 204, 207, 208, 438, 449, 461, 490, 498, 504], "fill_nan": 196, "fill_valu": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 87, 91, 149, 150, 151, 152, 155, 156, 157, 159, 162, 164, 166, 167, 195, 196, 198, 204, 207, 208, 274, 275, 278, 383, 488, 490], "filled_t": [87, 91], "filter": [88, 89, 389, 393, 395, 397, 398, 444, 445, 448, 481, 491, 494, 502, 507, 508], "filter_ev": 89, "filter_gti": 89, "filter_success_nan": [125, 127], "filtered_ev": 89, "filtered_gti": 89, "filterwarn": [478, 479], "final": [132, 292, 383, 384, 390, 391, 393, 396, 397, 399, 400, 402, 404, 406, 408, 409, 414, 429, 430, 431, 454, 455, 456, 457, 459, 467, 469, 471, 472, 476, 477, 479, 483, 485, 487, 489, 491, 494, 498, 499, 502, 506, 507, 508, 518, 519, 520], "finalis": 387, "find": [19, 20, 26, 135, 143, 144, 152, 178, 179, 183, 210, 220, 221, 224, 228, 230, 231, 232, 237, 243, 244, 247, 251, 253, 255, 256, 257, 262, 267, 269, 270, 271, 272, 275, 279, 302, 383, 388, 394, 396, 402, 413, 414, 415, 435, 437, 443, 444, 449, 450, 457, 459, 463, 484, 485, 490, 493, 497, 500, 508, 582, 584, 585], "find_peak": [144, 444, 463, 469], "find_peaks_in_flux_map": 463, "find_root": 435, "finder": [143, 178, 179, 435, 444, 463], "fine": [290, 323, 396, 465, 485, 498, 535, 582], "finer": [471, 485, 535], "fingertip": 382, "finish": [386, 390, 392, 413, 441, 443], "finit": [100, 103, 106, 110, 111, 153, 154, 160, 165, 181, 196, 204, 208, 276, 401], "fink": [228, 229, 455, 548], "fir": 558, "firefox": [87, 91], "first": [57, 77, 87, 91, 92, 94, 100, 103, 106, 110, 111, 125, 127, 129, 136, 138, 143, 145, 152, 169, 178, 195, 196, 197, 200, 204, 205, 226, 250, 283, 301, 343, 372, 383, 384, 386, 388, 390, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 403, 404, 407, 408, 409, 412, 414, 415, 420, 424, 425, 426, 427, 428, 429, 430, 431, 432, 435, 437, 442, 444, 445, 446, 447, 449, 451, 454, 456, 457, 459, 463, 464, 465, 467, 468, 469, 470, 471, 472, 473, 476, 477, 478, 479, 481, 482, 484, 485, 486, 487, 489, 490, 491, 492, 493, 494, 495, 497, 498, 499, 502, 506, 507, 508, 519, 531, 534, 582], "firstli": [470, 471, 486], "firstnam": [87, 91], "fit": [6, 15, 16, 19, 20, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 57, 58, 60, 61, 62, 64, 65, 66, 67, 71, 74, 75, 77, 78, 82, 83, 84, 85, 86, 87, 88, 90, 91, 94, 99, 100, 102, 103, 105, 106, 107, 108, 110, 111, 116, 119, 120, 122, 124, 125, 126, 127, 128, 129, 131, 132, 133, 135, 143, 144, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 159, 160, 162, 164, 165, 166, 167, 168, 172, 175, 193, 194, 195, 196, 197, 198, 199, 200, 202, 204, 205, 206, 207, 208, 212, 214, 215, 216, 218, 220, 223, 224, 226, 227, 228, 229, 230, 231, 232, 233, 236, 237, 238, 239, 240, 241, 242, 243, 244, 247, 250, 254, 255, 256, 257, 258, 262, 263, 264, 265, 267, 270, 271, 272, 276, 277, 278, 279, 289, 290, 291, 293, 294, 295, 300, 303, 307, 318, 319, 320, 365, 366, 369, 371, 376, 378, 382, 383, 384, 389, 393, 394, 395, 396, 399, 401, 402, 403, 404, 405, 406, 407, 410, 411, 416, 424, 425, 426, 427, 428, 429, 430, 431, 432, 435, 437, 440, 442, 443, 444, 445, 447, 449, 450, 451, 453, 454, 458, 462, 463, 465, 466, 470, 471, 472, 473, 474, 476, 477, 479, 480, 481, 482, 484, 485, 486, 488, 489, 490, 492, 493, 494, 496, 497, 499, 500, 502, 504, 508, 518, 519, 520, 521, 522, 524, 525, 526, 528, 529, 530, 531, 539, 546, 548, 558, 576, 577, 580, 581, 586], "fit2": 492, "fit_covari": [460, 506], "fit_deriv": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40], "fit_joint": [456, 459, 467, 468], "fit_prior": 495, "fit_rang": [16, 460, 464, 465, 467, 506], "fit_result": [213, 289, 460, 481, 486, 506], "fit_results_nul": 289, "fit_scipi": 487, "fit_sherpa": 487, "fit_stat_scan": 398, "fit_statist": [383, 465], "fit_statistics_cython": 414, "fitconfig": 16, "fitmc": 401, "fitresult": [213, 437, 449, 451, 487, 507], "fitsfixedwarn": [463, 546], "fitsonli": 497, "fitspectrum": 439, "fitstepresult": [212, 215], "fittabl": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 48, 49], "fittable1dmodel": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40], "fitter": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 442, 443, 457], "five": 508, "fix": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 77, 85, 88, 94, 95, 107, 108, 135, 147, 165, 167, 182, 213, 252, 253, 258, 278, 386, 388, 389, 390, 394, 395, 398, 400, 405, 407, 408, 409, 413, 414, 416, 422, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 438, 439, 440, 441, 442, 443, 444, 445, 447, 448, 454, 461, 462, 464, 465, 467, 468, 471, 475, 477, 478, 481, 487, 488, 489, 492, 493, 494, 506, 532, 534, 542, 559], "fixed_altaz": 85, "fixed_bin": 147, "fixed_icr": [85, 165, 454, 462, 471, 472, 475, 478], "fixed_offset": [96, 181, 435], "fixed_r_in": 170, "fixed_width": 170, "fixedpointinginfo": [88, 165, 188, 449, 450, 454, 462, 471, 472, 475, 478], "fk5": [535, 546], "flag": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 91, 104, 109, 125, 127, 128, 129, 132, 133, 193, 194, 195, 196, 198, 200, 201, 203, 204, 206, 207, 208, 212, 213, 214, 215, 456, 467, 471, 484, 493], "flake8": 386, "flare": [139, 297, 416, 429, 430, 453, 476, 478, 480, 481, 482, 502, 520, 531], "flask": 443, "flat": [127, 139, 157, 167, 193, 194, 199, 201, 203, 206, 209, 210, 252, 394, 407], "flatten": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 193, 194, 201, 203, 206, 482], "fledg": 411, "flexibl": [82, 334, 383, 388, 392, 393, 394, 397, 399, 403, 404, 410, 490, 522, 579], "float": [19, 20, 26, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 42, 50, 51, 83, 87, 88, 90, 91, 96, 103, 106, 110, 111, 115, 120, 124, 126, 127, 130, 133, 134, 135, 143, 144, 149, 150, 151, 152, 153, 155, 156, 157, 159, 162, 164, 165, 166, 167, 168, 170, 172, 181, 193, 194, 195, 196, 198, 200, 203, 204, 206, 207, 208, 209, 210, 213, 215, 216, 218, 220, 221, 223, 224, 226, 227, 228, 230, 231, 232, 233, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 247, 250, 251, 253, 254, 255, 256, 257, 258, 262, 263, 264, 265, 267, 269, 270, 271, 272, 275, 276, 277, 278, 279, 280, 281, 289, 290, 291, 292, 293, 296, 300, 302, 310, 321, 328, 337, 339, 372, 373, 374, 489, 495, 497, 498, 582, 586], "float32": [193, 194, 195, 196, 198, 203, 204, 206, 207, 208, 464, 469, 490], "float64": [87, 91, 112, 117, 152, 155, 383, 411, 420, 486, 488, 490, 520, 582], "float64float64float64": 469, "float64float64float64float64float64float64float64float32bool": 457, "float64float64float64float64float64float64float64float64": 469, "float_a": [87, 91], "flow": [410, 580, 581], "fluctuat": [291, 293, 407, 462, 475, 495, 584], "flux": [15, 19, 20, 26, 41, 46, 67, 71, 73, 74, 75, 77, 78, 79, 80, 83, 88, 100, 102, 103, 106, 110, 111, 120, 124, 125, 126, 127, 128, 129, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 144, 145, 146, 147, 220, 221, 222, 224, 225, 228, 230, 231, 232, 233, 237, 238, 240, 241, 242, 243, 244, 247, 251, 253, 254, 255, 256, 257, 258, 262, 265, 266, 267, 269, 270, 271, 272, 275, 277, 279, 280, 282, 283, 287, 296, 297, 298, 299, 301, 306, 387, 395, 396, 398, 399, 401, 403, 404, 406, 416, 423, 426, 428, 429, 431, 435, 437, 441, 442, 443, 445, 450, 451, 453, 458, 461, 463, 467, 469, 471, 472, 474, 476, 477, 478, 479, 481, 482, 485, 490, 493, 498, 502, 516, 518, 522, 527, 536, 543, 558, 579, 580, 581, 584], "flux1": 301, "flux2": 301, "flux_err": [19, 20, 26, 125, 127, 135, 144, 220, 221, 224, 228, 230, 231, 232, 237, 243, 244, 247, 251, 253, 255, 256, 257, 262, 267, 269, 270, 271, 272, 275, 279, 297, 298, 299, 306, 463, 476, 482], "flux_err1": 301, "flux_err2": 301, "flux_errn": [125, 127, 484], "flux_errp": [125, 127, 484], "flux_int_cu": 283, "flux_map": [125, 127, 136, 145, 407, 483], "flux_metadata_fits_kei": 126, "flux_per_omega": 493, "flux_point": [16, 66, 67, 71, 73, 74, 75, 77, 78, 79, 80, 98, 102, 125, 127, 128, 395, 454, 457, 459, 460, 464, 465, 467, 469, 479, 484, 485, 506, 507, 508], "flux_point_dataset": 395, "flux_points_at_tim": 407, "flux_points_ctb_37b": 127, "flux_points_dataset": [459, 469, 479], "flux_points_dataset_no_ul": 459, "flux_points_fermi": 468, "flux_points_hawc": 468, "flux_points_hess": 468, "flux_points_intrins": 455, "flux_points_meta": [71, 74, 75, 78], "flux_points_no_ul": 459, "flux_points_ob": 455, "flux_points_recomput": 127, "flux_points_t": [71, 73, 74, 75, 77, 78, 79, 80], "flux_pr": 102, "flux_profil": [453, 473, 474], "flux_profile_estim": 473, "flux_profile_fermi": 473, "flux_quant": [138, 139, 140, 141, 482], "flux_ref": [125, 127, 407], "flux_sensit": [125, 127], "flux_ul": [125, 127, 135, 484], "fluxestim": [125, 127, 128, 404, 431, 433, 434, 435, 437, 450], "fluxmap": [124, 126, 127, 135, 136, 137, 144, 145, 435, 450, 451, 463, 520], "fluxmapestim": 407, "fluxmapsmetadata": 410, "fluxpoint": [71, 73, 74, 75, 77, 78, 79, 80, 102, 125, 126, 128, 129, 132, 138, 139, 140, 141, 147, 395, 398, 407, 410, 435, 442, 443, 449, 450, 451, 454, 457, 468, 473, 476, 477, 482, 484, 485, 508, 517, 518, 520, 522], "fluxpointdataset": 429, "fluxpointestim": [398, 426, 432, 445], "fluxpointfit": 395, "fluxpointfitt": 444, "fluxpointprofil": 445, "fluxpointsconfig": 16, "fluxpointsdataset": [98, 99, 103, 106, 404, 407, 410, 425, 429, 450, 451, 457, 459, 468, 469, 478, 479, 518], "fluxpointsdatasetmetadata": 410, "fluxpointsestim": [121, 129, 132, 330, 404, 405, 407, 416, 426, 431, 432, 435, 449, 450, 455, 459, 468, 469, 479, 486, 506, 507, 522], "fluxpointsetim": 407, "fluxpointsmetadata": 410, "fluxprofileestim": [121, 435, 448, 450, 473], "fly": 393, "fmt": [481, 487, 495], "focu": [393, 403, 429, 442, 461, 582], "focus": [393, 409, 412], "fold": [109, 407, 457, 468, 477, 486, 518, 520], "folder": [11, 82, 94, 102, 107, 111, 127, 347, 383, 384, 388, 391, 413, 415, 420, 425, 435, 438, 460, 467, 471, 497, 506, 507, 580, 582], "follow": [15, 19, 20, 43, 44, 80, 82, 83, 84, 90, 91, 103, 105, 107, 108, 110, 111, 125, 126, 127, 130, 135, 137, 143, 146, 194, 195, 196, 198, 202, 207, 208, 213, 266, 283, 289, 373, 374, 376, 383, 384, 386, 387, 388, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 402, 403, 405, 406, 407, 408, 409, 410, 411, 412, 413, 415, 416, 417, 418, 419, 420, 427, 428, 429, 431, 432, 435, 437, 438, 444, 445, 449, 450, 451, 454, 455, 456, 457, 459, 460, 462, 463, 464, 467, 468, 471, 472, 476, 477, 478, 479, 481, 483, 484, 486, 487, 489, 490, 491, 492, 493, 497, 502, 506, 508, 510, 512, 513, 518, 520, 522, 524, 526, 527, 531, 533, 534, 535, 536, 544, 545, 549, 552, 553, 555, 556, 560, 561, 563, 564, 565, 566, 567, 580, 581, 583, 584, 585, 587], "font": [195, 196, 198, 204, 207, 208, 384, 490], "fontsiz": [380, 479, 487], "foo": [87, 91], "footprint": [195, 196, 198, 204, 206, 207, 208, 542], "footprint_rectangle_sky_region": 206, "forbid": [16, 84, 90, 105, 126], "forbidden": 492, "forc": [16, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 84, 90, 105, 126, 153, 154, 160, 163, 165, 168, 206, 208, 310, 388, 398, 425], "forecom": [383, 408], "foremost": 582, "forens": 399, "foreseen": [393, 408], "forev": 425, "forg": [382, 400, 413, 414, 416, 417, 420, 443], "forget": [460, 470, 506], "forgot": 383, "forgotten": 383, "fork": [386, 413], "form": [16, 84, 87, 90, 91, 103, 105, 126, 165, 168, 203, 322, 383, 389, 393, 398, 406, 408, 410, 412, 421, 443, 451, 491, 495, 519, 527, 540, 550, 580], "formal": [388, 411, 463], "format": [16, 83, 84, 85, 86, 87, 88, 90, 91, 94, 103, 105, 106, 108, 110, 111, 125, 126, 127, 128, 147, 149, 150, 151, 152, 153, 154, 155, 156, 157, 159, 160, 162, 164, 165, 166, 167, 168, 188, 193, 194, 195, 196, 197, 198, 199, 200, 203, 204, 205, 206, 207, 208, 210, 226, 234, 241, 250, 266, 276, 279, 318, 340, 364, 365, 372, 382, 391, 392, 393, 394, 395, 397, 399, 407, 409, 410, 414, 423, 435, 437, 440, 444, 446, 447, 449, 450, 451, 455, 457, 459, 460, 461, 463, 464, 465, 467, 469, 471, 472, 473, 476, 478, 482, 484, 486, 488, 490, 491, 493, 497, 498, 499, 500, 506, 508, 510, 516, 518, 519, 520, 521, 524, 525, 526, 527, 528, 535, 576, 577, 581, 582, 583], "format_plot_xaxi": [197, 200, 205, 488], "format_plot_yaxi": [200, 488], "formatt": [372, 490], "formatwarn": 383, "former": [409, 426, 431, 456, 492, 580, 583], "formula": [28, 29, 30, 31, 35, 36, 37, 39, 40, 50, 52, 53, 164, 256, 257, 307, 454, 583], "forthcom": 486, "forum": 413, "forward": [19, 20, 26, 83, 87, 91, 103, 106, 110, 111, 129, 149, 150, 151, 152, 155, 156, 157, 159, 162, 164, 166, 167, 177, 199, 203, 204, 205, 213, 220, 221, 224, 225, 228, 230, 231, 232, 233, 234, 237, 238, 240, 241, 242, 243, 244, 247, 251, 253, 255, 256, 257, 258, 262, 265, 266, 267, 269, 270, 271, 272, 275, 276, 277, 278, 279, 280, 284, 308, 372, 377, 384, 390, 393, 407, 457, 468, 477, 486, 518, 520, 535], "forwardref": [16, 84, 90, 105, 126], "found": [19, 20, 26, 82, 86, 87, 91, 139, 178, 183, 202, 220, 221, 224, 228, 230, 231, 232, 237, 243, 244, 247, 251, 253, 255, 256, 257, 262, 267, 269, 270, 271, 272, 275, 279, 297, 386, 387, 391, 398, 408, 409, 429, 432, 433, 434, 438, 465, 471, 482, 493, 495, 500, 519, 520, 531, 532], "four": [386, 394, 407, 413, 476, 497, 498, 526, 528, 534, 581], "fov": [124, 149, 150, 172, 173, 187, 188, 190, 192, 234, 383, 389, 397, 440, 443, 444, 451, 464, 481, 488, 491, 492, 497, 507, 530, 581], "fov_": 383, "fov_align": [149, 150, 151, 152, 155, 156, 157, 159, 162, 164, 166, 167, 488], "fov_background": [464, 506], "fov_bkg_mak": [489, 529], "fov_lat": [150, 488, 497, 527], "fov_lat_axi": 488, "fov_lon": [150, 488, 497, 527], "fov_lon_axi": 488, "fov_theta": 383, "fovalign": [149, 150, 151, 152, 155, 156, 157, 159, 162, 164, 166, 167, 488], "fovbackground": [411, 431], "fovbackgroundmak": [173, 430, 435, 489, 506, 507], "fovbackgroundmodel": [15, 103, 109, 110, 114, 172, 246, 411, 432, 449, 450, 451, 467, 468, 471, 472, 475, 485, 492, 506, 507, 529, 542], "fp": [125, 127, 147, 407, 506, 520, 522], "fp_dataset": [459, 485], "fp_dnde": 407, "fp_energy_flux": 407, "fp_estim": 486, "fp_result": 486, "fpe": [330, 405, 407, 455, 459, 469, 479, 507], "fpe_no_ul": 459, "fpp": 298, "fpp_err": [298, 482], "fpp_tabl": 482, "fr": 409, "frac": [17, 19, 20, 21, 22, 23, 24, 25, 27, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 50, 51, 52, 53, 54, 106, 111, 152, 155, 211, 232, 237, 255, 257, 270, 297, 299, 309, 406, 518, 526, 527, 539, 540, 541, 544, 545, 549, 552, 553, 555, 556, 560, 561, 563, 564, 565, 566, 570, 571, 572, 574, 584, 585], "frac_remain": 412, "fraction": [19, 20, 26, 50, 52, 53, 83, 88, 89, 90, 124, 134, 141, 156, 162, 164, 165, 166, 168, 203, 209, 210, 220, 221, 224, 227, 228, 230, 231, 232, 237, 243, 244, 247, 251, 253, 255, 256, 257, 262, 267, 269, 270, 271, 272, 275, 279, 298, 299, 393, 398, 412, 442, 450, 454, 462, 471, 475, 485, 488, 491, 497, 498, 499], "frame": [16, 83, 85, 91, 94, 95, 96, 103, 106, 110, 111, 112, 113, 114, 117, 129, 143, 165, 175, 178, 188, 194, 195, 196, 198, 201, 203, 204, 206, 207, 208, 222, 223, 227, 236, 239, 252, 254, 263, 264, 266, 268, 274, 278, 308, 309, 344, 359, 383, 384, 392, 394, 397, 407, 425, 426, 428, 429, 430, 456, 459, 460, 461, 462, 464, 465, 467, 468, 469, 470, 471, 472, 473, 475, 476, 477, 478, 479, 481, 483, 485, 488, 489, 490, 491, 492, 493, 494, 498, 499, 500, 506, 507, 508, 526, 531, 533, 534, 535, 539, 540, 541, 542, 543, 544, 545, 546], "framework": [394, 396, 397, 399, 401, 402, 406, 412, 425, 426, 432, 444, 479, 493, 512, 522], "franceschini": [228, 229, 279, 449, 455, 548], "franceschini17": [229, 455, 548], "franceschni": 548, "frd_ab": 229, "free": [50, 52, 53, 77, 103, 106, 110, 111, 128, 132, 133, 175, 213, 217, 219, 252, 253, 289, 388, 398, 425, 451, 455, 460, 462, 464, 465, 467, 469, 470, 475, 476, 478, 481, 485, 487, 489, 492, 493, 495, 498, 502, 506, 507, 510, 520, 529, 542, 558, 559, 582, 584, 585], "free_paramet": [217, 219, 289, 412, 481, 487, 492], "freedom": [122, 125, 127, 137, 146, 409, 450, 470, 520, 584, 585], "freez": [19, 20, 26, 87, 91, 217, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 247, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 274, 275, 276, 277, 278, 279, 280, 281, 289, 398, 409, 425, 435, 450, 464, 475, 481, 487, 493, 558], "freeze_al": [217, 219], "frenk": 510, "frequenc": [277, 292, 514], "frequent": [200, 383, 392, 401, 409, 412, 477, 478, 482, 491, 522, 523, 582], "frequentist": 401, "fridai": 392, "friendli": [383, 388, 410, 446, 460, 506, 522], "from": [13, 15, 16, 19, 20, 26, 27, 28, 29, 30, 31, 32, 33, 35, 36, 37, 38, 39, 40, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 94, 96, 100, 101, 102, 103, 104, 105, 106, 107, 109, 110, 111, 112, 113, 114, 116, 117, 118, 119, 120, 124, 125, 126, 127, 128, 129, 131, 132, 133, 134, 135, 136, 137, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 159, 160, 162, 163, 164, 165, 166, 167, 168, 169, 170, 175, 176, 177, 178, 181, 182, 184, 188, 190, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 274, 275, 276, 277, 278, 279, 280, 281, 283, 289, 290, 291, 292, 293, 296, 299, 308, 309, 310, 320, 328, 330, 332, 333, 337, 340, 341, 345, 350, 362, 363, 365, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 384, 386, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 413, 414, 416, 418, 420, 421, 423, 424, 425, 427, 428, 429, 430, 431, 432, 435, 436, 437, 439, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 514, 515, 516, 517, 518, 519, 520, 522, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 586], "from_align": [206, 435], "from_attribut": [16, 84, 90, 105, 126], "from_bound": [155, 157, 165, 194, 200, 206, 407, 468, 471, 472, 485, 488, 489, 490, 500, 534, 535], "from_covariance_matrix": 411, "from_default": 199, "from_diagonal_respons": [112, 117, 152, 153, 154, 463, 498], "from_dict": [19, 20, 26, 102, 103, 106, 110, 111, 217, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 274, 275, 276, 277, 278, 279, 280, 281, 428, 435, 495], "from_dir": [82, 89, 96, 175, 308, 309, 420, 456, 459, 461, 469, 477, 479, 481, 489, 494, 497, 500, 504, 507, 519, 522, 529, 531, 532], "from_edg": [154, 195, 196, 198, 200, 204, 207, 208, 462, 475, 478, 488, 498, 499], "from_edisp_kernel": 153, "from_energy_bound": [103, 106, 110, 111, 112, 117, 152, 154, 155, 157, 163, 165, 175, 193, 194, 199, 200, 203, 206, 208, 384, 454, 456, 459, 461, 468, 469, 471, 472, 477, 479, 481, 485, 488, 489, 493, 498, 499, 507, 526, 529, 531, 532, 535], "from_energy_edg": [152, 200, 378, 485, 488], "from_events_fil": [82, 471, 497], "from_factor_matrix": 211, "from_fil": [82, 519], "from_fits_head": 85, "from_gauss": [152, 153, 157, 163, 165, 168, 526], "from_gaussian": 432, "from_geom": [103, 106, 110, 111, 153, 154, 163, 165, 168, 195, 196, 198, 202, 204, 207, 208, 429, 448, 485, 490, 491, 535, 541], "from_gti": 205, "from_gti_bound": 205, "from_hdu": [194, 196, 208], "from_hdulist": [103, 106, 110, 111, 125, 127, 149, 150, 151, 152, 153, 154, 155, 156, 157, 159, 160, 162, 164, 165, 166, 167, 168, 193, 194, 195, 196, 198, 202, 203, 204, 206, 207, 208, 490], "from_head": [84, 90, 105, 126, 194, 206, 410], "from_irf": 167, "from_log10": [243, 244, 556], "from_map": [125, 127], "from_map_dataset": [106, 111], "from_nam": [465, 469], "from_nod": 200, "from_orm": [16, 84, 90, 105, 126], "from_panda": [87, 91], "from_paramet": [19, 20, 26, 220, 221, 222, 223, 224, 225, 227, 228, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 247, 249, 251, 252, 253, 254, 255, 256, 257, 258, 259, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 274, 275, 276, 277, 278, 279, 280, 281], "from_parametr": [155, 524], "from_posit": [222, 223, 227, 236, 239, 252, 254, 263, 264, 268, 274, 278, 472], "from_refer": 406, "from_region": [203, 227, 449, 531], "from_region_map": 279, "from_spatial_model": 163, "from_spectrum_dataset": [111, 454, 462], "from_stack": [83, 86, 92, 125, 127, 195, 196, 197, 198, 200, 204, 207, 208, 211, 217, 219, 449, 450, 519], "from_tabl": [127, 149, 150, 151, 152, 155, 156, 157, 159, 162, 164, 166, 167, 197, 199, 200, 204, 205, 241, 446, 454], "from_table_hdu": [86, 199, 200], "from_time_bound": 205, "from_time_edg": [205, 481, 482], "from_time_interv": 86, "from_wcs_til": 196, "from_yaml": [16, 226, 250, 394, 460], "fromnumer": [461, 481], "front": [392, 412, 413, 442], "frozen": [19, 20, 26, 102, 128, 132, 172, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 247, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 274, 275, 276, 277, 278, 279, 280, 281, 289, 398, 406, 411, 427, 450, 455, 456, 457, 459, 460, 461, 462, 463, 464, 467, 468, 469, 470, 471, 472, 473, 475, 477, 478, 481, 484, 485, 486, 487, 491, 492, 493, 495, 498, 506, 507, 508, 520, 529, 558, 567], "fr\u00f6se": [450, 451], "ftol": 487, "ftool": 398, "fulfil": [410, 490], "full": [82, 128, 135, 149, 150, 151, 152, 155, 156, 157, 159, 162, 164, 166, 167, 196, 214, 226, 250, 318, 379, 382, 383, 388, 392, 393, 396, 398, 399, 403, 409, 411, 412, 415, 422, 425, 435, 437, 451, 454, 455, 456, 457, 459, 460, 461, 462, 463, 464, 465, 467, 468, 469, 470, 471, 472, 473, 475, 476, 477, 478, 479, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 497, 498, 499, 500, 504, 506, 507, 508, 522, 533, 538, 539, 540, 541, 542, 543, 544, 545, 546, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 569, 570, 571, 572, 573, 574, 575, 576, 577, 580], "full_enclosur": [188, 488], "full_output": [19, 20, 26, 214, 220, 221, 222, 223, 224, 225, 226, 227, 228, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 247, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 274, 275, 276, 277, 278, 279, 280, 281], "fulli": [132, 193, 194, 203, 206, 277, 392, 393, 400, 404, 409, 414, 417, 427, 429, 437, 456, 482, 493, 497, 499, 500], "fun": [383, 386], "func": [17, 18, 21, 22, 24, 25, 27, 195, 196, 198, 204, 207, 208, 285, 331, 335, 336, 376, 465, 467], "function": [6, 15, 19, 20, 26, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 46, 82, 83, 85, 87, 88, 91, 100, 101, 102, 103, 104, 106, 109, 110, 111, 120, 125, 132, 135, 136, 138, 139, 140, 141, 144, 145, 155, 156, 157, 159, 160, 162, 164, 165, 166, 168, 195, 196, 198, 200, 204, 207, 208, 213, 214, 215, 220, 221, 224, 228, 230, 231, 232, 237, 243, 244, 247, 251, 253, 255, 256, 257, 262, 265, 266, 267, 269, 270, 271, 272, 275, 279, 285, 291, 292, 293, 301, 302, 306, 323, 331, 332, 334, 335, 339, 340, 350, 368, 371, 372, 376, 378, 380, 382, 386, 389, 393, 394, 395, 396, 397, 398, 401, 402, 403, 404, 406, 407, 408, 410, 411, 412, 416, 418, 420, 421, 423, 425, 426, 427, 428, 429, 431, 432, 435, 436, 437, 439, 440, 441, 442, 443, 444, 445, 448, 449, 450, 451, 454, 455, 459, 460, 461, 462, 463, 467, 469, 470, 471, 472, 473, 481, 485, 486, 487, 488, 489, 490, 491, 492, 493, 495, 499, 500, 502, 506, 507, 508, 510, 511, 512, 517, 518, 519, 521, 522, 531, 533, 535, 540, 541, 543, 570, 579, 580, 581, 582, 583, 585, 587], "functional_model": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40], "fundament": [396, 405, 410, 412], "further": [11, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 82, 120, 124, 128, 129, 132, 135, 201, 334, 383, 386, 387, 389, 392, 393, 396, 397, 400, 402, 403, 404, 405, 406, 430, 431, 432, 435, 437, 465, 471, 483, 484, 485, 486, 490, 507, 508, 511, 512, 527, 582], "furthermor": 497, "futur": [104, 109, 383, 388, 393, 396, 397, 399, 400, 401, 402, 403, 404, 405, 407, 408, 409, 411, 412, 443, 467, 473, 490, 498, 511, 520, 579], "fvar": [141, 299, 398, 442], "fvar_err": [299, 482], "fvar_tabl": 482, "g": [13, 19, 20, 26, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 46, 47, 51, 52, 53, 54, 59, 67, 83, 85, 86, 87, 91, 95, 115, 143, 194, 195, 196, 198, 200, 204, 206, 207, 208, 213, 220, 221, 224, 228, 230, 231, 232, 237, 243, 244, 247, 251, 253, 255, 256, 257, 262, 267, 269, 270, 271, 272, 275, 279, 297, 310, 350, 372, 378, 382, 383, 384, 386, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 406, 407, 409, 410, 412, 413, 414, 416, 417, 418, 435, 437, 441, 443, 444, 445, 446, 449, 456, 457, 459, 460, 462, 469, 471, 473, 483, 484, 485, 487, 490, 491, 492, 493, 497, 498, 502, 508, 510, 514, 517, 518, 519, 520, 522, 527, 532, 533, 534, 541, 579, 581, 582, 584, 586, 587], "g0": [467, 498], "g1xqfxwu": 481, "g28": 67, "g320": 484, "g940fe8807": [105, 126, 421, 454, 456, 459, 460, 461, 462, 463, 464, 465, 467, 468, 469, 470, 471, 472, 473, 476, 477, 478, 479, 483, 484, 485, 487, 489, 490, 491, 492, 493, 495, 497, 498, 499, 500, 506, 507, 508, 538, 539, 540, 541, 542, 543, 544, 545, 546, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 569, 570, 571, 572, 573, 574, 575, 576, 577], "g_1": 155, "g_2": 155, "g_3": 155, "ga": 473, "gabriel": 444, "gadf": [83, 84, 85, 86, 88, 90, 95, 103, 105, 106, 110, 111, 126, 127, 149, 150, 151, 152, 153, 154, 155, 156, 157, 159, 160, 162, 164, 165, 166, 167, 168, 193, 194, 195, 196, 197, 198, 199, 200, 203, 204, 205, 206, 207, 208, 393, 396, 407, 410, 435, 437, 446, 449, 451, 486, 488, 490, 506, 518, 522, 535, 581], "gain": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 388, 400, 443], "gal_diffus": 399, "galact": [17, 18, 21, 22, 24, 25, 27, 29, 45, 47, 67, 68, 83, 91, 103, 106, 110, 111, 112, 117, 128, 129, 131, 165, 194, 195, 196, 198, 201, 203, 204, 206, 207, 208, 227, 236, 239, 254, 263, 264, 317, 344, 383, 384, 394, 397, 403, 423, 425, 442, 455, 456, 459, 462, 463, 464, 467, 469, 470, 471, 473, 475, 478, 483, 484, 485, 490, 491, 492, 493, 497, 508, 510, 513, 517, 532, 533, 534, 535, 539, 540, 541, 542, 543, 544, 545, 581, 587], "galactic_median": 83, "galactocentr": 41, "galaxi": [28, 30, 35, 39, 40, 41, 228, 298, 299, 423, 456], "galelli": [448, 450, 451], "gallant": 443, "galleri": [414, 430, 432, 435, 446, 450, 453, 454, 455, 456, 457, 459, 460, 461, 462, 463, 464, 465, 467, 468, 469, 470, 471, 472, 473, 475, 476, 477, 478, 479, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 497, 498, 499, 500, 502, 504, 506, 507, 508, 523, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579], "gallery_jupyt": 536, "gallery_python": 536, "galprop": [194, 195, 196, 198, 207, 208], "galprop2": [194, 195, 196, 198, 207, 208], "gambit": 510, "gamma": [11, 17, 18, 19, 20, 21, 22, 24, 25, 26, 27, 52, 53, 57, 59, 63, 66, 67, 79, 83, 124, 128, 134, 164, 188, 195, 196, 198, 207, 208, 228, 230, 231, 232, 255, 256, 257, 279, 283, 337, 383, 389, 391, 394, 395, 396, 397, 407, 414, 416, 420, 421, 426, 440, 441, 442, 443, 444, 454, 455, 457, 459, 460, 461, 465, 468, 469, 470, 471, 473, 484, 488, 490, 491, 494, 497, 499, 500, 506, 508, 510, 512, 513, 517, 518, 519, 522, 525, 527, 529, 531, 532, 541, 548, 552, 553, 560, 561, 579, 580, 581, 582, 583, 584, 587], "gamma1": [220, 549, 563], "gamma2": [220, 549, 563], "gamma_1": [267, 270, 271, 272, 406, 564, 565, 566], "gamma_2": [267, 270, 271, 272, 406, 564, 565, 566], "gamma_min": [134, 454], "gamma_min_sensit": 124, "gammacat": [55, 66, 442, 457], "gammalib": [383, 396], "gammamc_dif": 510, "gammapi": [6, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 384, 385, 387, 388, 390, 391, 393, 394, 395, 396, 397, 398, 399, 401, 405, 406, 407, 411, 412, 415, 416, 417, 418, 419, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 435, 436, 437, 439, 440, 441, 442, 443, 444, 445, 446, 447, 449, 450, 451, 453, 454, 455, 456, 457, 459, 460, 461, 462, 463, 464, 465, 467, 468, 469, 470, 471, 472, 473, 475, 476, 477, 478, 479, 481, 482, 483, 484, 485, 486, 487, 489, 490, 491, 492, 493, 494, 495, 496, 501, 502, 504, 506, 507, 508, 511, 512, 514, 515, 516, 522, 523, 524, 525, 526, 528, 532, 533, 535, 536, 538, 539, 540, 541, 542, 543, 544, 545, 546, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 569, 570, 571, 572, 573, 574, 575, 576, 577, 581, 582, 583, 584, 587], "gammapy_analysis_config": 399, "gammapy_data": [26, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 82, 83, 86, 88, 89, 91, 94, 96, 102, 103, 106, 110, 111, 116, 119, 120, 124, 125, 127, 129, 131, 133, 135, 143, 144, 147, 148, 150, 154, 155, 156, 157, 165, 175, 195, 196, 198, 204, 207, 208, 213, 229, 241, 279, 289, 308, 309, 362, 371, 376, 378, 383, 384, 386, 399, 412, 416, 418, 420, 424, 425, 426, 435, 444, 454, 455, 456, 459, 460, 461, 462, 463, 464, 465, 467, 468, 469, 470, 471, 472, 473, 475, 476, 477, 478, 479, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 497, 498, 499, 500, 504, 506, 507, 508, 519, 520, 522, 524, 525, 526, 528, 529, 531, 532, 546, 576, 577], "gammapy_extra": 424, "gammapybaseconfig": 16, "gammapydeprecationwarn": [383, 473, 498, 554], "gammmapi": [393, 400], "gap": 138, "garcia": 444, "gather": [397, 403, 413], "gauss": [42, 51, 54, 103, 106, 130, 131, 156, 196, 208, 236, 237, 238, 239, 406, 441, 479, 490, 493, 508, 539, 540], "gauss_elong": 493, "gauss_temp": 493, "gaussian": [67, 68, 80, 81, 102, 120, 130, 136, 145, 152, 153, 157, 163, 165, 168, 196, 208, 235, 236, 237, 238, 239, 240, 245, 298, 299, 394, 402, 406, 411, 412, 428, 432, 451, 453, 455, 457, 459, 469, 471, 475, 478, 482, 484, 487, 488, 493, 495, 497, 508, 526, 528, 536, 547, 568, 578], "gaussian1d": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40], "gaussian2d": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 50], "gaussian2dkernel": 120, "gaussian_compon": [67, 484], "gaussian_error": [136, 145], "gaussian_filt": [130, 208], "gaussian_model": 571, "gaussian_sigma": 487, "gaussianband2d": 443, "gaussianprior": [411, 455, 495], "gaussianspatialmodel": [80, 81, 116, 119, 260, 406, 428, 469, 470, 475, 493, 540], "gaussianspectralmodel": [261, 406, 493, 555], "gaussiantemporalmod": 435, "gaussiantemporalmodel": [273, 406, 431, 493, 571], "gb": [391, 393, 497, 499], "gc": [86, 103, 106, 110, 111, 116, 119, 120, 124, 129, 131, 135, 143, 144, 371, 376, 378, 386, 463, 464, 467, 469, 471, 473, 483, 485, 486, 490, 492, 493, 497, 498, 508, 510, 519, 520], "gc_3fhl": 508, "gc_3fhl_cutout": 508, "gc_3fhl_smooth": 508, "gc_imag": 473, "gc_po": 498, "gc_sep": 492, "gca": 455, "gcc": 420, "gclkdyto": 481, "ge": 90, "geminga": 59, "gen_gaussian_model": 572, "gener": [16, 27, 33, 42, 45, 46, 47, 56, 82, 83, 84, 87, 88, 90, 91, 92, 101, 103, 104, 105, 106, 109, 110, 111, 118, 126, 154, 165, 168, 195, 196, 198, 199, 200, 204, 207, 208, 213, 225, 233, 238, 239, 240, 241, 242, 258, 265, 274, 275, 277, 279, 280, 292, 332, 334, 337, 338, 339, 340, 347, 384, 386, 392, 394, 395, 396, 397, 399, 401, 402, 403, 404, 405, 406, 407, 408, 412, 413, 414, 417, 420, 426, 430, 431, 432, 435, 437, 442, 446, 449, 450, 451, 453, 454, 455, 456, 457, 459, 460, 461, 462, 463, 464, 465, 467, 468, 469, 470, 471, 472, 473, 475, 476, 477, 478, 479, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 497, 498, 499, 500, 502, 504, 506, 507, 508, 518, 522, 527, 533, 535, 536, 538, 539, 540, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 569, 570, 571, 573, 574, 575, 576, 577, 578, 582, 584, 585], "generalconfig": 16, "generalis": [127, 402, 429, 488], "generalized_gaussian_model": 572, "generalizedgaussianspatialmodel": [260, 432, 493, 541], "generalizedgaussiantemporalmodel": [273, 437, 493, 572], "generalrandom": 427, "generatejsonschema": [16, 84, 90, 105, 126], "gengauss": [240, 493, 541], "geodeticloc": 94, "geolat": 456, "geom": [16, 23, 83, 103, 106, 110, 111, 112, 115, 117, 118, 124, 125, 127, 129, 135, 153, 154, 163, 165, 168, 175, 182, 184, 185, 186, 187, 188, 189, 190, 191, 194, 195, 196, 198, 202, 203, 204, 206, 207, 208, 222, 223, 226, 227, 234, 236, 239, 250, 252, 254, 263, 264, 266, 268, 274, 278, 394, 396, 398, 432, 435, 444, 450, 454, 455, 456, 459, 460, 461, 462, 463, 464, 465, 467, 469, 471, 472, 473, 475, 476, 477, 478, 479, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 495, 498, 499, 506, 507, 508, 520, 529, 531, 532, 533, 534, 535, 538, 540, 541, 542, 543], "geom_24_energy_bin": 535, "geom_6_energy_bin": 535, "geom_edisp": [103, 106, 110, 111, 485], "geom_energi": 535, "geom_exposur": [103, 106, 110, 111, 448, 485], "geom_imag": [465, 469, 535], "geom_irf": 396, "geom_psf": [103, 106, 110, 111, 485], "geom_tru": 429, "geomconfig": 16, "geometri": [23, 83, 100, 103, 106, 110, 111, 113, 114, 115, 118, 125, 127, 135, 136, 137, 145, 153, 154, 160, 163, 165, 168, 172, 175, 177, 182, 184, 185, 186, 187, 188, 189, 190, 191, 193, 194, 195, 196, 198, 199, 201, 202, 203, 204, 206, 207, 208, 209, 210, 222, 223, 226, 227, 236, 239, 250, 252, 254, 263, 264, 266, 268, 274, 278, 379, 389, 395, 398, 399, 429, 435, 446, 451, 459, 460, 461, 462, 464, 465, 467, 471, 472, 475, 485, 486, 489, 498, 499, 518, 520, 522, 530, 534, 580, 581], "geomspac": [127, 411, 486], "geq": [52, 53], "gerrit": 451, "get": [16, 19, 20, 26, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 82, 84, 85, 87, 88, 90, 91, 94, 96, 100, 103, 105, 107, 108, 110, 120, 124, 126, 128, 129, 132, 133, 135, 143, 147, 152, 153, 154, 160, 165, 168, 193, 194, 195, 196, 198, 199, 202, 203, 204, 206, 207, 208, 211, 217, 219, 220, 221, 222, 223, 224, 227, 228, 230, 231, 232, 235, 236, 237, 239, 243, 244, 245, 247, 251, 252, 253, 254, 255, 256, 257, 259, 262, 263, 264, 267, 268, 269, 270, 271, 272, 274, 275, 277, 278, 279, 281, 282, 318, 334, 383, 384, 388, 389, 390, 391, 392, 393, 397, 398, 400, 407, 409, 410, 411, 414, 415, 417, 418, 420, 421, 424, 426, 441, 442, 443, 444, 451, 454, 460, 462, 463, 467, 468, 469, 475, 477, 481, 484, 485, 487, 488, 489, 491, 492, 493, 495, 497, 498, 499, 500, 502, 506, 507, 508, 510, 518, 522, 535, 581, 585], "get_altaz": [85, 94, 449], "get_bia": 152, "get_bias_energi": 152, "get_bounding_box": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40], "get_by_coord": [195, 196, 198, 204, 207, 208, 489, 490, 498, 499, 534], "get_by_idx": [195, 196, 198, 204, 207, 208, 490, 534], "get_by_pix": [195, 196, 198, 204, 207, 208, 534], "get_cl": [457, 484, 491], "get_combined_flux_map": 136, "get_combined_significance_map": 137, "get_coord": [193, 194, 199, 203, 206, 428, 435, 444, 472, 490, 491, 531, 535], "get_dataset": [15, 460, 464, 465, 467, 476, 506, 522], "get_devel_vers": 386, "get_edges_fixed_bin": 147, "get_edges_min_t": 147, "get_edisp_kernel": [153, 154, 430, 435, 485, 498, 526], "get_events_meta_data": 396, "get_excess_map": [15, 506], "get_filenam": [107, 108], "get_flux_point": [15, 125, 127, 407, 430, 460, 506], "get_group_by_idx": 407, "get_hdu": 318, "get_icr": [85, 94, 449], "get_idx": [193, 194, 203, 206, 535], "get_image_by_coord": [195, 196, 198, 204, 207, 208, 490], "get_image_by_idx": [195, 196, 198, 204, 207, 208], "get_image_by_pix": [195, 196, 198, 204, 207, 208], "get_index_list": 194, "get_irfs_featur": [308, 309, 449, 494], "get_kernel": 120, "get_light_curv": 15, "get_mean": 152, "get_observ": [15, 82, 96, 308, 309, 426, 437, 456, 459, 460, 461, 464, 465, 467, 469, 471, 476, 477, 479, 481, 489, 494, 499, 500, 504, 506, 507, 522, 529, 531, 532], "get_ogip_meta": 108, "get_pix": 206, "get_pointing_altaz": [88, 494], "get_pointing_icr": [88, 449, 469, 489, 507], "get_psf_kernel": [163, 165, 168, 450, 451, 498], "get_random_st": [33, 42, 45, 46, 47, 103, 104, 106, 109, 110, 111, 154, 165, 168, 195, 196, 198, 204, 207, 208, 225, 233, 238, 240, 241, 242, 258, 265, 277, 280, 292, 332, 337, 338, 339, 340, 383], "get_rebinned_axi": 477, "get_resolut": 152, "get_respons": 442, "get_scal": 120, "get_scale_model": [128, 129, 132], "get_spectrum": [195, 196, 198, 204, 207, 208], "get_subcovari": 211, "get_transform": [463, 469, 539, 540], "get_valid_path": 107, "get_wcs_coord_and_weight": 203, "getattr": 411, "getitem": 442, "getlogg": [383, 465, 469, 476, 477, 478, 481, 504], "getter": 384, "getting_start": 403, "gev": [17, 18, 19, 20, 21, 22, 24, 25, 27, 74, 129, 135, 195, 196, 198, 200, 204, 207, 208, 457, 461, 463, 467, 468, 473, 475, 478, 479, 483, 484, 489, 490, 491, 492, 497, 498, 499, 508, 535, 558, 580, 581], "gev2": [19, 483], "gevgevgev1": 457, "gh": [383, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 414], "ghjcqh": 481, "git": [86, 266, 383, 384, 386, 388, 390, 391, 409, 413, 417, 446], "github": [384, 386, 387, 388, 389, 391, 392, 401, 403, 409, 412, 413, 414, 417, 419, 424, 425, 426, 427, 428, 429, 430, 431, 432, 435, 440, 441, 442, 443, 444, 445, 522], "giuliani": 396, "giunti": [425, 426, 427, 428, 429, 430, 431, 432, 435, 437, 438, 446, 449], "give": [6, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 87, 91, 102, 142, 297, 298, 383, 388, 392, 393, 397, 398, 399, 400, 403, 404, 409, 414, 425, 427, 429, 437, 450, 459, 460, 463, 470, 472, 477, 481, 482, 484, 487, 488, 489, 490, 493, 497, 498, 506, 522, 527, 582, 583, 585, 586], "given": [16, 17, 18, 19, 20, 21, 22, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 42, 46, 51, 52, 53, 67, 68, 69, 80, 82, 83, 84, 85, 87, 88, 90, 91, 94, 96, 99, 100, 102, 103, 104, 105, 106, 109, 110, 111, 113, 114, 122, 124, 125, 126, 127, 128, 130, 132, 133, 134, 135, 136, 143, 144, 145, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 159, 160, 162, 163, 164, 165, 166, 167, 168, 169, 177, 178, 181, 183, 185, 186, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 213, 217, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 247, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 274, 275, 276, 277, 278, 279, 280, 281, 282, 289, 291, 293, 299, 308, 310, 313, 314, 321, 328, 332, 335, 336, 344, 370, 371, 376, 380, 383, 390, 391, 392, 393, 394, 395, 396, 397, 398, 400, 402, 406, 407, 409, 411, 424, 429, 435, 443, 444, 449, 454, 455, 456, 457, 460, 463, 471, 472, 473, 475, 476, 477, 478, 483, 484, 485, 486, 488, 489, 490, 491, 493, 497, 498, 506, 508, 518, 519, 520, 522, 526, 527, 531, 532, 534, 535, 541, 545, 548, 579, 581, 582, 583, 584], "glast": 498, "glat": [41, 67, 68, 83, 383, 459, 484, 490, 498], "glat_err": 484, "glat_pnt": [469, 497], "glimps": [499, 502], "gll_iem_v06_cutout": [195, 196, 198, 204, 207, 208], "gll_iem_v06_gc": [471, 490, 492, 493, 498], "gll_psc_v16": 61, "gll_psc_v20": 484, "gll_psc_v32": 65, "gll_psch_v09": 58, "gll_psch_v13": 62, "glob": [82, 384, 485, 486], "global": [16, 33, 42, 45, 46, 47, 100, 103, 104, 106, 109, 110, 111, 154, 165, 168, 193, 194, 195, 196, 198, 203, 204, 206, 207, 208, 213, 225, 233, 238, 240, 241, 242, 258, 265, 277, 280, 292, 332, 334, 337, 338, 339, 340, 383, 387, 389, 412, 432, 449, 459, 469, 470, 479, 492, 495, 520, 580], "global_dataset": 489, "global_to_loc": 194, "glon": [41, 67, 68, 83, 383, 459, 484, 490, 498], "glon_pnt": [469, 497], "glossari": [403, 446, 518, 535], "glue": 522, "glueviz": 400, "go": [50, 87, 91, 386, 393, 403, 408, 412, 446, 454, 455, 456, 457, 459, 460, 461, 462, 463, 464, 465, 467, 468, 469, 470, 471, 472, 473, 475, 476, 477, 478, 479, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 497, 498, 499, 500, 504, 506, 507, 508, 510, 538, 539, 540, 541, 542, 543, 544, 545, 546, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 569, 570, 571, 572, 573, 574, 575, 576, 577, 582], "goal": [388, 397, 411, 487], "goe": [41, 52, 373, 383, 402, 414, 473, 495], "gogia": 442, "good": [82, 86, 102, 127, 303, 307, 383, 388, 390, 391, 392, 393, 394, 397, 399, 400, 401, 403, 412, 455, 459, 461, 462, 465, 475, 477, 478, 482, 483, 485, 487, 489, 491, 493, 498, 499, 502, 544, 545, 581, 586], "googl": [87, 91, 403, 413, 451], "got": 497, "gov": [58, 60, 61, 62, 64, 65, 101, 152, 200, 403, 561], "gp": [82, 83, 89, 384, 393, 399, 464, 467, 469, 479, 497, 499], "gpl3": 383, "gps_baseline_110380": [82, 83, 497], "gradient": [19, 20, 26, 220, 221, 224, 228, 230, 231, 232, 237, 243, 244, 247, 251, 253, 255, 256, 257, 262, 267, 269, 270, 271, 272, 275, 279, 412], "grai": [374, 531, 558], "grand": 383, "grant": [386, 409], "granular": 482, "grayify_colormap": 402, "grb": [478, 482], "great": [388, 397, 402, 441, 502], "greater": [172, 376], "green": [102, 110, 111, 443, 470, 494, 495], "grei": 479, "grep": 419, "grid": [17, 18, 21, 22, 24, 25, 27, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 128, 131, 156, 164, 166, 195, 196, 198, 200, 204, 207, 208, 222, 223, 227, 236, 239, 252, 254, 263, 264, 268, 274, 278, 285, 376, 383, 394, 399, 412, 427, 429, 487, 534, 535, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 569, 570, 571, 572, 573, 574, 575], "gridsearch": [213, 487], "gridspec": 370, "gridspec_kw": [463, 469, 476, 478, 548], "ground": [95, 398, 497, 583], "group": [86, 87, 91, 92, 128, 129, 132, 133, 135, 153, 193, 194, 195, 196, 198, 199, 200, 203, 204, 205, 206, 207, 208, 308, 389, 398, 402, 403, 404, 407, 413, 416, 426, 429, 431, 435, 441, 444, 463, 476, 478, 502, 520, 522, 536, 582], "group_1": 494, "group_2": 494, "group_bi": [87, 91, 407], "group_by_axi": 407, "group_by_label": [92, 494], "group_high_zenith": 494, "group_low_zenith": 494, "group_siz": [147, 477], "group_tabl": [86, 200, 205], "grouped_observ": 494, "grow": [391, 402, 443], "grown": 403, "gr\u00e9aux": 449, "gsfc": [58, 60, 61, 62, 64, 65, 101, 152, 200, 403, 561], "gt": 488, "gtdrm": [152, 153], "gtexpcube2": 498, "gti": [82, 87, 88, 89, 100, 102, 103, 106, 110, 111, 125, 127, 129, 132, 136, 145, 169, 205, 266, 389, 392, 393, 396, 397, 398, 407, 427, 429, 430, 432, 445, 449, 450, 471, 477, 478, 481, 485, 489, 497, 499, 500, 518, 581], "gti_1": 519, "gti_2": 519, "gti_t0": 478, "gtimetadata": 410, "gtmktime": [393, 498], "gtobsim": 396, "gtol": 487, "gtpsf": [153, 154, 160, 165, 168, 200, 463, 498], "gtselect": [393, 498], "guarante": [391, 406, 408, 412], "guess": [127, 194, 196, 450], "guid": [386, 399, 401, 416, 417, 418, 421, 444, 467, 502, 522, 537, 547, 568, 578], "guidelin": [383, 387, 421, 443], "guiger": [31, 39], "gz": [58, 60, 61, 62, 64, 65, 66, 67, 82, 83, 86, 88, 91, 94, 103, 106, 110, 111, 116, 119, 120, 124, 129, 131, 135, 143, 144, 157, 229, 279, 371, 376, 378, 384, 405, 444, 455, 459, 460, 463, 470, 471, 472, 473, 484, 485, 486, 488, 490, 492, 493, 497, 498, 499, 504, 506, 507, 508, 519, 520, 522, 524, 525, 526, 528, 548], "h": [26, 67, 82, 86, 87, 91, 95, 128, 130, 154, 181, 195, 196, 198, 204, 207, 208, 292, 373, 403, 406, 412, 416, 420, 421, 429, 444, 451, 453, 454, 455, 456, 459, 460, 462, 465, 468, 470, 476, 477, 478, 481, 483, 487, 488, 489, 490, 493, 494, 495, 497, 498, 499, 501, 502, 504, 506, 507, 517, 522, 535, 570, 571, 581, 582], "h0": 470, "h05": [45, 49], "h1": 470, "h6vobyy1": 455, "h_0": [470, 584], "h_1": [470, 584], "h_i": 130, "ha": [19, 20, 26, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 80, 87, 91, 102, 103, 106, 110, 111, 124, 125, 127, 167, 189, 193, 194, 195, 196, 198, 202, 203, 204, 206, 207, 208, 216, 220, 221, 223, 224, 227, 228, 230, 231, 232, 233, 236, 237, 238, 239, 240, 241, 242, 243, 244, 247, 251, 253, 254, 255, 256, 257, 258, 262, 263, 264, 265, 266, 267, 269, 270, 271, 272, 275, 277, 278, 279, 376, 378, 380, 383, 384, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 414, 415, 417, 431, 432, 435, 437, 438, 444, 445, 446, 448, 449, 450, 451, 455, 456, 459, 460, 461, 465, 470, 472, 476, 477, 479, 483, 484, 485, 487, 489, 490, 491, 493, 494, 495, 497, 499, 500, 506, 507, 518, 519, 522, 527, 531, 532, 534, 535, 539, 540, 567, 579, 582, 584], "habilit": 307, "hack": 440, "had": [383, 389, 391, 409, 432, 438, 442, 443], "hadron": [282, 389, 394, 465, 485, 497, 518, 531], "hajlaoui": [432, 435], "hal": 409, "half": [165, 168, 200, 206, 278], "halo": 510, "halv": [139, 297, 450], "halving_coord": 482, "halving_err": 482, "hand": [177, 383, 386, 391, 394, 403, 409, 411, 447, 487, 502, 522], "handbook": [403, 502], "handi": 467, "handl": [3, 16, 84, 90, 105, 125, 126, 127, 181, 202, 300, 382, 384, 387, 395, 396, 397, 399, 404, 406, 407, 410, 413, 416, 418, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 437, 438, 439, 440, 441, 442, 443, 445, 446, 448, 449, 459, 461, 467, 468, 469, 471, 485, 488, 490, 492, 493, 498, 499, 502, 507, 508, 518, 519, 522, 581], "handler_map": 380, "hanna": [450, 451], "hap": 399, "happen": [82, 386, 388, 390, 391, 397, 401, 414, 460, 492, 502, 506, 507, 518, 522, 584], "happi": [386, 390, 403, 424, 425, 444], "hard": [383, 384, 406, 411, 430, 495], "harder": [390, 582], "hardli": 410, "harri": [439, 440], "harvard": [28, 30, 31, 32, 33, 35, 36, 37, 38, 39, 40, 50, 52, 53, 57, 58, 60, 61, 62, 83, 88, 120, 138, 155, 213, 247, 282, 283, 292, 299, 301, 403, 487], "has_any_t": [125, 127], "has_energy_axi": [193, 194, 203, 206], "has_invers": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40], "has_masked_column": [87, 91], "has_masked_valu": [87, 91], "has_mixin_column": [87, 91], "has_offset_axi": [149, 150, 151, 152, 155, 156, 157, 159, 162, 164, 166, 167], "has_single_spatial_bin": [153, 154, 160, 165, 168], "has_stat_profil": [125, 127], "has_success": [125, 127], "has_ul": [125, 127], "has_user_bounding_box": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40], "has_user_invers": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40], "hasattr": 383, "hasn": 388, "hatch": 479, "have": [16, 19, 20, 26, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 67, 82, 84, 87, 90, 91, 95, 100, 105, 108, 112, 117, 125, 126, 127, 128, 132, 143, 144, 152, 153, 154, 163, 165, 168, 175, 177, 189, 193, 194, 195, 196, 198, 202, 203, 204, 206, 207, 208, 220, 221, 222, 223, 224, 225, 226, 227, 228, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 247, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 274, 275, 276, 277, 278, 279, 280, 281, 310, 334, 340, 380, 382, 383, 384, 385, 386, 388, 389, 390, 392, 394, 396, 397, 400, 401, 402, 403, 404, 405, 406, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 424, 425, 426, 429, 432, 435, 437, 438, 441, 443, 444, 445, 446, 447, 449, 450, 451, 454, 455, 456, 459, 460, 461, 462, 463, 464, 465, 467, 468, 469, 470, 471, 472, 473, 475, 477, 478, 479, 481, 484, 485, 486, 487, 488, 490, 491, 492, 493, 494, 495, 497, 498, 499, 502, 506, 507, 508, 510, 518, 519, 520, 522, 529, 533, 534, 535, 545, 556, 579, 582, 585, 586], "haven": 420, "hawc": [55, 59, 63, 72, 76, 97, 421, 429, 435, 443, 446, 447, 449, 453, 501, 502, 517, 530, 581], "hawc19_flux_point": [127, 468, 522], "hawc_crab": [127, 468, 522], "hcsmnqbw": 481, "hd": 67, "hdr": 410, "hdr_dict": 410, "hdu": [67, 82, 83, 85, 86, 87, 88, 94, 103, 106, 110, 111, 125, 127, 149, 150, 151, 152, 153, 154, 155, 156, 157, 159, 160, 162, 164, 165, 166, 167, 168, 169, 193, 194, 195, 196, 197, 198, 199, 200, 202, 203, 204, 205, 206, 207, 208, 318, 369, 384, 393, 423, 438, 440, 443, 446, 447, 488, 490, 497, 499, 500, 518, 519, 522, 524, 525, 526, 528, 535, 577], "hdu1": 152, "hdu2": 152, "hdu_al": 471, "hdu_band": [125, 127, 153, 154, 160, 165, 168, 193, 194, 195, 196, 198, 199, 202, 203, 204, 206, 207, 208], "hdu_class": [82, 87, 318, 497, 499, 500], "hdu_class_uniqu": 87, "hdu_evt": 471, "hdu_filenam": 499, "hdu_gti": 471, "hdu_hdu": 82, "hdu_index": 82, "hdu_list": [153, 154, 156, 160, 164, 165, 166, 168, 195, 196, 207, 208], "hdu_loc": 87, "hdu_nam": 318, "hdu_ob": 82, "hdu_out": [195, 196], "hdu_region": [203, 204], "hdu_tabl": [82, 499], "hdu_table_filenam": 82, "hdu_typ": [82, 87, 497, 499, 500], "hdu_type_uniqu": 87, "hduclas2": 488, "hduclas3": 488, "hduclas4": 488, "hduclasn": 488, "hduindext": [82, 318, 499], "hdulist": [103, 106, 108, 110, 111, 125, 127, 149, 150, 151, 152, 153, 154, 155, 156, 157, 159, 160, 162, 164, 165, 166, 167, 168, 193, 194, 195, 196, 198, 202, 203, 204, 206, 207, 208, 471, 490, 518], "hduloc": [87, 103], "he": [282, 393, 398], "hea": 398, "head": 384, "header": [82, 83, 84, 85, 86, 87, 88, 90, 91, 94, 100, 102, 103, 105, 106, 107, 108, 110, 111, 125, 126, 127, 152, 153, 154, 160, 165, 168, 193, 194, 195, 196, 197, 198, 199, 200, 202, 204, 205, 206, 207, 208, 278, 320, 365, 366, 369, 388, 393, 396, 410, 429, 437, 439, 444, 446, 449, 461, 472, 490, 497, 586], "healpi": [194, 382, 390, 392, 400, 415, 416, 418, 427, 435, 454, 456, 459, 460, 461, 462, 463, 464, 465, 467, 468, 469, 470, 471, 472, 473, 476, 477, 478, 479, 483, 484, 485, 487, 489, 490, 491, 492, 493, 495, 497, 498, 499, 500, 506, 507, 508, 533], "healpix": [13, 194, 195, 196, 198, 204, 207, 208, 382, 390, 392, 397, 435, 443, 490, 498, 534], "healpix_to_imag": 436, "heapsort": [87, 91], "hear": 412, "heart": 584, "heasarc": [152, 200], "heatmap": [372, 377], "heavi": [444, 445], "heavier": 467, "heavili": 435, "hegra": [97, 283], "heidelberg": [383, 413], "heidt": 482, "height": [16, 29, 87, 91, 94, 129, 343, 460, 464, 465, 467, 473, 476, 479, 483, 490, 491, 493, 506, 531, 535], "heighten": 482, "helen": 441, "hello": [420, 469], "help": [11, 87, 91, 294, 300, 383, 386, 388, 390, 397, 398, 399, 403, 409, 413, 414, 415, 420, 424, 425, 426, 443, 444, 446, 484, 489, 490, 492, 498, 500, 508, 522, 582], "helper": [13, 318, 323, 390, 392, 397, 398, 399, 402, 414, 420, 426, 427, 428, 429, 435, 437, 440, 442, 443, 449, 450, 473, 484, 491, 492, 531, 580, 587], "henc": [87, 91, 245, 399, 464, 465, 520, 535, 584], "here": [13, 82, 83, 87, 91, 101, 103, 110, 127, 137, 146, 150, 155, 164, 213, 291, 293, 296, 371, 382, 383, 384, 385, 386, 389, 390, 395, 396, 397, 398, 399, 400, 401, 402, 403, 409, 410, 411, 412, 413, 414, 416, 418, 420, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 435, 437, 438, 440, 441, 442, 443, 444, 445, 446, 449, 450, 451, 454, 455, 456, 457, 459, 460, 461, 462, 463, 464, 465, 467, 469, 470, 471, 472, 475, 476, 477, 478, 479, 481, 482, 484, 485, 486, 487, 488, 489, 490, 491, 494, 495, 497, 498, 499, 502, 506, 507, 508, 512, 518, 522, 527, 529, 538, 539, 540, 541, 542, 543, 544, 545, 546, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 569, 570, 571, 572, 573, 574, 575, 576, 577, 582, 583, 584, 586, 587], "hereaft": 471, "herebi": 495, "heritag": 409, "herm": [286, 288, 450], "herr": 412, "hess": [16, 55, 67, 82, 83, 86, 88, 91, 96, 97, 102, 110, 111, 133, 147, 148, 155, 157, 175, 213, 289, 308, 309, 384, 391, 392, 397, 399, 403, 412, 413, 416, 420, 423, 425, 428, 439, 440, 443, 444, 453, 456, 457, 459, 460, 461, 465, 467, 469, 470, 477, 479, 481, 484, 485, 486, 487, 489, 494, 495, 498, 500, 501, 504, 506, 507, 510, 519, 520, 522, 524, 525, 526, 528, 529, 531, 532], "hess2": [155, 524], "hess_dl3_dr1_obs_id_020136": [88, 157, 384, 524, 525, 526, 528], "hess_dl3_dr1_obs_id_023523": [83, 86, 519], "hess_dl3_dr1_obs_id_023526": 519, "hess_ecpl": [283, 459], "hess_pl": 283, "hessian": 520, "heterogen": [410, 457, 468], "hfm": 67, "hgp": [67, 80, 81, 124, 403, 429, 441, 443, 444, 517], "hgps_catalog_v1": 67, "hgps_sourc": 67, "hgpsc": [67, 484], "hi": [383, 442], "hi_bnd": 200, "hi_threshold": 152, "hidden": 394, "hide": [13, 388, 405], "hierarch": [13, 308, 350, 392, 394, 410, 450, 522, 534], "hierarchi": [308, 394, 428], "hierarchical_clust": [449, 494], "high": [6, 15, 58, 62, 63, 83, 152, 200, 333, 383, 387, 388, 389, 396, 397, 398, 403, 410, 412, 427, 428, 429, 430, 431, 435, 443, 444, 453, 454, 457, 460, 463, 464, 467, 473, 475, 476, 483, 484, 485, 486, 489, 491, 497, 498, 499, 500, 502, 507, 508, 509, 517, 518, 519, 520, 527, 530, 580, 581, 582, 583], "high_zenith": 494, "higher": [193, 194, 195, 196, 198, 203, 204, 206, 207, 208, 240, 386, 389, 394, 399, 402, 404, 417, 457, 472, 482, 488, 490, 529, 535], "highest": [143, 181, 482, 489, 497, 508], "highli": 493, "highlight": 582, "hint": [410, 463, 520], "hire": [156, 403, 512, 514, 515, 516, 518, 519, 524, 525, 526, 528, 531, 535, 584, 587], "hist": [83, 110, 111, 204, 208, 376, 462, 495], "histogram": [83, 110, 111, 200, 204, 208, 376, 449, 479, 535, 581], "histori": [397, 409, 446], "hit": 412, "hli": [396, 430, 431, 435, 446, 453, 458, 502, 518, 521, 581], "hli_spectrum_analysi": 460, "hline": 539, "hoc": 397, "hold": [69, 82, 89, 92, 96, 100, 163, 234, 310, 392, 393, 395, 398, 582, 584], "home": [16, 347, 454, 456, 459, 460, 461, 462, 463, 464, 465, 467, 468, 469, 470, 471, 472, 473, 475, 476, 477, 478, 479, 481, 483, 484, 485, 487, 489, 490, 491, 492, 493, 495, 497, 498, 499, 500, 506, 507, 508, 546, 548, 554, 570, 576, 577], "homebrew": 400, "homework": 426, "homogen": [87, 91, 432], "honk": 388, "hood": [460, 502, 506], "hook": [386, 446], "hope": 388, "hopefulli": 390, "horizont": [85, 95, 158, 353, 488, 586], "host": [383, 412], "hour": [67, 94, 386, 399, 413, 414, 454, 484, 489, 490, 522], "hover": 384, "how": [16, 19, 20, 82, 83, 84, 85, 90, 99, 105, 126, 127, 129, 131, 175, 196, 206, 208, 334, 340, 385, 388, 391, 395, 397, 399, 400, 402, 405, 406, 409, 410, 412, 414, 415, 416, 420, 421, 424, 425, 426, 429, 430, 437, 439, 442, 443, 444, 449, 450, 454, 455, 457, 459, 460, 461, 462, 463, 464, 465, 467, 468, 469, 470, 471, 472, 473, 475, 476, 477, 478, 479, 481, 482, 484, 485, 486, 487, 491, 492, 493, 494, 495, 497, 498, 499, 500, 502, 506, 508, 512, 518, 520, 523, 527, 531, 533, 534, 548, 567, 580, 582, 583, 584, 586, 587], "howev": [77, 87, 91, 102, 124, 298, 382, 383, 384, 386, 390, 393, 396, 397, 401, 409, 411, 412, 417, 456, 465, 473, 479, 481, 483, 484, 485, 487, 495, 499, 500, 502, 518, 522, 534, 535, 540, 556, 582], "howto": [403, 446, 447], "hpx": [194, 195, 196, 198, 207, 208, 397, 435, 490, 498], "hpx2wc": [195, 196], "hpx_map": [195, 196], "hpx_pixel": 397, "hpx_reg": 194, "hpxgeom": [125, 193, 195, 196, 430, 435, 446, 498, 533], "hpxmap": [196, 198, 533], "hpxndmap": [274, 435, 533], "hpxsparsemap": 429, "hpxtowcsmap": [195, 196], "hr": [471, 472, 475, 478], "hspace": 483, "hspec": [439, 440, 441], "hst": 228, "hstack": [87, 91, 396], "html": [26, 83, 87, 91, 101, 128, 152, 188, 194, 200, 203, 206, 213, 226, 250, 279, 310, 337, 338, 383, 384, 386, 391, 403, 408, 409, 413, 414, 422, 443, 454, 462, 464, 467, 469, 475, 478, 487, 488, 497, 519, 522, 525, 533, 535, 561], "htmlcov": 414, "http": [11, 13, 16, 26, 28, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 50, 52, 53, 57, 58, 60, 61, 62, 63, 64, 65, 67, 83, 84, 87, 88, 90, 91, 101, 105, 120, 126, 128, 137, 138, 139, 146, 152, 155, 181, 188, 194, 200, 203, 206, 213, 226, 247, 250, 256, 257, 271, 272, 279, 282, 283, 292, 298, 299, 301, 306, 310, 337, 338, 350, 386, 400, 403, 408, 409, 412, 413, 414, 415, 416, 417, 418, 422, 426, 443, 454, 459, 462, 464, 467, 468, 469, 475, 478, 483, 484, 487, 488, 497, 519, 522, 533, 535, 561, 565, 566, 582], "hubert": 444, "hue": 374, "huestart": 374, "huge": [414, 540], "hugovk": 425, "human": [364, 394, 412, 414, 437, 460, 506], "hundr": 499, "hypercub": [490, 534, 535], "hypothes": [289, 449, 522, 584], "hypothesi": [125, 127, 128, 129, 132, 133, 289, 291, 293, 451, 457, 463, 470, 486, 520, 522, 581, 584], "hysteresi": 481, "hz": [340, 508], "i": [11, 13, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 45, 46, 47, 50, 51, 52, 53, 54, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 74, 75, 76, 77, 78, 79, 80, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 113, 114, 115, 116, 118, 119, 120, 122, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 159, 160, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 175, 176, 177, 178, 179, 181, 182, 183, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 247, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 285, 287, 289, 290, 291, 292, 293, 294, 296, 297, 298, 299, 300, 301, 302, 306, 307, 308, 310, 312, 316, 318, 321, 322, 323, 328, 330, 331, 334, 337, 338, 339, 340, 342, 343, 346, 349, 351, 352, 354, 358, 360, 361, 365, 366, 367, 369, 370, 371, 372, 373, 374, 376, 377, 378, 379, 380, 382, 384, 385, 387, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 454, 455, 456, 457, 459, 460, 461, 462, 463, 464, 465, 467, 468, 469, 470, 471, 472, 475, 476, 477, 478, 479, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 497, 498, 499, 500, 502, 506, 507, 508, 510, 511, 512, 517, 518, 519, 520, 521, 522, 524, 525, 526, 527, 528, 529, 530, 531, 532, 534, 535, 538, 539, 540, 541, 542, 543, 544, 545, 546, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 569, 570, 571, 572, 573, 574, 575, 576, 577, 579, 580, 581, 582, 583, 584, 585, 586, 587], "i0": [87, 91], "i1": [87, 91], "i4": 473, "i8": [490, 508], "i8p1iprj": 481, "i_0": [195, 196, 198, 204, 207, 208], "i_hpx": [195, 196, 198, 204, 207, 208], "i_lat": [195, 196, 198, 204, 207, 208], "i_lon": [195, 196, 198, 204, 207, 208], "i_n": [195, 196, 198, 204, 207, 208], "i_scan": 495, "iact": [82, 83, 85, 94, 175, 178, 182, 389, 392, 393, 394, 395, 397, 399, 403, 421, 426, 440, 442, 444, 457, 463, 465, 489, 490, 492, 497, 498, 500, 519, 524, 525, 526, 528, 579, 581], "iactbasicimageestim": [389, 443], "iau": [52, 423, 427], "iau2015": 52, "ic": 558, "icon": 580, "icr": [83, 85, 88, 91, 94, 95, 96, 103, 106, 110, 111, 113, 114, 143, 165, 175, 178, 194, 195, 196, 198, 201, 203, 206, 207, 208, 222, 223, 227, 236, 239, 254, 263, 264, 308, 309, 344, 383, 384, 407, 428, 459, 460, 461, 462, 463, 465, 468, 469, 471, 472, 475, 476, 477, 478, 479, 481, 484, 485, 488, 489, 490, 491, 493, 494, 497, 498, 499, 500, 506, 507, 519, 522, 526, 531, 535, 539, 540, 541, 543, 544, 545], "icrc": 439, "id": [67, 80, 82, 83, 87, 88, 91, 92, 113, 114, 396, 399, 420, 460, 462, 471, 473, 475, 479, 484, 493, 497, 498, 499, 500, 506, 519], "id_obs_vela": 479, "idea": [388, 391, 398, 402, 403, 404, 460, 481, 488, 494, 498, 506], "ideal": [385, 386, 393, 397, 398, 407, 411, 413, 457, 498], "idempot": [16, 84, 90, 105, 126], "ident": [358, 386, 398, 446, 459, 461], "identif": [67, 389, 484], "identifi": [67, 88, 104, 109, 194, 266, 383, 393, 394, 396, 399, 408, 409, 414, 430, 463, 471, 482, 484, 485, 493, 497, 499, 521], "identified_object": 484, "idx": [83, 87, 91, 92, 100, 193, 194, 195, 196, 197, 198, 199, 200, 203, 204, 205, 206, 207, 208, 250, 462, 471, 478, 484, 487, 490, 534], "idx1": 487, "idx2": 487, "idx_glob": 194, "idx_loc": 194, "ie": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 409, 455, 481, 492, 493, 518, 581], "iem": [492, 498], "iem_minus_iem": 490, "iem_plus_iem": 490, "iem_times_two": 490, "ignacio": 445, "ignasi": 439, "ignor": [11, 16, 84, 87, 90, 91, 102, 105, 126, 138, 159, 169, 198, 216, 218, 234, 310, 322, 384, 437, 451, 459, 473, 478, 479, 485, 491, 506, 522, 582], "ii": [211, 441], "ij": 211, "ilist": 194, "illustr": [110, 111, 384, 393, 395, 396, 397, 399, 402, 412, 461, 463, 468, 473, 485, 489, 490, 492, 493, 498, 512, 518, 531, 532, 539, 540, 548, 580], "illustrate_colormap": 402, "iloc": [87, 91], "im": [372, 487], "imag": [103, 106, 110, 111, 120, 130, 131, 143, 154, 155, 156, 162, 164, 165, 166, 168, 170, 180, 193, 194, 195, 196, 198, 203, 204, 206, 207, 208, 278, 302, 305, 347, 369, 371, 372, 373, 374, 378, 383, 391, 392, 394, 399, 400, 403, 404, 414, 416, 421, 423, 424, 425, 428, 429, 430, 436, 440, 441, 442, 443, 444, 451, 453, 464, 467, 473, 474, 489, 491, 493, 497, 507, 508, 518, 527, 531, 532, 533, 534, 535, 580, 581, 587], "image_analysi": [403, 424], "image_err": 131, "image_fitting_with_sherpa": [403, 445], "image_pip": 443, "image_profil": 442, "imagehdu": [195, 196, 207, 208], "imagenorm": [373, 374], "imageprofil": 131, "images_t": 469, "imagin": 582, "img": [371, 490], "iminuit": [213, 382, 400, 409, 412, 435, 437, 444, 448, 449, 454, 456, 459, 460, 461, 462, 463, 464, 465, 467, 468, 469, 470, 471, 472, 473, 476, 477, 478, 479, 483, 484, 485, 487, 489, 490, 491, 492, 493, 495, 497, 498, 499, 500, 506, 507, 508, 579], "immut": 226, "impact": [390, 396, 400, 499], "imperfect": 489, "implement": [19, 20, 103, 106, 110, 111, 137, 146, 216, 220, 223, 224, 227, 228, 230, 231, 232, 233, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 247, 254, 255, 256, 257, 258, 262, 263, 264, 265, 267, 270, 271, 272, 277, 278, 292, 298, 383, 384, 388, 389, 391, 392, 395, 396, 397, 398, 399, 400, 401, 404, 405, 406, 407, 408, 410, 425, 426, 427, 428, 429, 430, 431, 432, 435, 436, 437, 442, 443, 445, 446, 449, 450, 451, 456, 464, 477, 482, 483, 484, 489, 490, 491, 510, 518, 520, 522, 527, 528, 529, 567, 579, 580, 581, 582, 583, 586], "implent": 383, "impli": [240, 383, 402, 412, 518, 581], "implic": 405, "implicit": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 527], "implicitli": 489, "import": [19, 20, 26, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 66, 67, 82, 83, 84, 85, 86, 87, 88, 89, 91, 94, 96, 102, 103, 105, 106, 110, 111, 112, 116, 117, 119, 120, 124, 125, 126, 127, 129, 131, 133, 135, 143, 144, 147, 148, 150, 152, 154, 155, 156, 157, 163, 165, 175, 178, 193, 194, 195, 196, 197, 198, 199, 200, 201, 203, 204, 205, 206, 207, 208, 213, 217, 219, 220, 221, 224, 228, 230, 231, 232, 237, 241, 243, 244, 247, 248, 251, 253, 255, 256, 257, 262, 267, 269, 270, 271, 272, 275, 279, 283, 289, 292, 298, 299, 308, 309, 330, 340, 350, 362, 363, 368, 371, 373, 374, 376, 378, 384, 386, 388, 389, 390, 392, 393, 394, 395, 396, 397, 398, 399, 402, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 419, 420, 431, 441, 443, 448, 450, 451, 454, 455, 456, 457, 459, 460, 461, 462, 463, 464, 465, 467, 468, 469, 470, 471, 472, 473, 476, 477, 478, 479, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 497, 498, 499, 500, 504, 506, 507, 508, 511, 512, 514, 515, 516, 518, 519, 520, 522, 524, 525, 526, 528, 529, 531, 532, 533, 534, 535, 538, 539, 540, 541, 542, 543, 544, 545, 546, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 569, 570, 571, 572, 573, 574, 575, 576, 577, 580, 582, 583, 584, 586], "importantli": [407, 444, 456, 582], "importerror": [87, 91], "impos": [448, 454, 531], "imposs": 412, "improv": [109, 289, 385, 387, 388, 389, 391, 392, 393, 397, 398, 399, 400, 401, 402, 403, 408, 414, 415, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 435, 436, 438, 439, 440, 441, 442, 443, 444, 445, 447, 490, 497, 522, 532, 539], "imshow": [103, 106, 163, 196, 208, 371, 377, 442, 490, 508], "in2p3": 409, "in_memori": [88, 522], "in_memory_gener": 92, "in_safe_data_rang": [103, 106, 110, 111], "inaccur": 383, "incex": [16, 84, 90, 105, 126], "incid": 389, "includ": [16, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 45, 82, 83, 84, 87, 88, 90, 91, 105, 126, 132, 153, 163, 169, 171, 172, 178, 179, 183, 193, 194, 203, 206, 251, 318, 382, 383, 389, 391, 394, 395, 396, 397, 399, 400, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 416, 425, 427, 432, 443, 448, 449, 450, 451, 454, 467, 468, 470, 471, 473, 478, 483, 484, 486, 487, 489, 491, 492, 493, 497, 499, 510, 512, 518, 520, 521, 532, 534, 579, 583, 586], "include_irf": [88, 519, 522], "include_ssc": 251, "inclus": [83, 203, 397], "incompat": [408, 437], "incomplet": [383, 414, 424, 425, 426, 427, 428, 429, 430, 431, 432, 435, 437, 438, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451], "inconsist": [432, 438, 448, 449], "inconveni": [402, 444], "incorpor": [399, 403, 411, 581], "incorrect": [83, 383, 410, 419, 428, 446, 447, 489, 495], "incorrectli": [446, 491], "increas": [143, 170, 200, 205, 227, 236, 239, 383, 392, 410, 477, 486, 489, 518, 522, 539], "increment": [19, 20, 26, 120, 220, 221, 224, 228, 230, 231, 232, 237, 243, 244, 247, 251, 253, 255, 256, 257, 262, 267, 269, 270, 271, 272, 275, 279, 397, 490, 534], "ind": [194, 206, 226, 250], "inde": [471, 540], "indefinit": 390, "indent": [16, 84, 90, 105, 126], "independ": [67, 128, 132, 136, 137, 145, 146, 307, 321, 383, 389, 393, 394, 395, 396, 397, 398, 401, 404, 405, 406, 407, 409, 416, 425, 435, 454, 460, 476, 484, 490, 491, 492, 493, 499, 506, 507, 517, 522, 527, 581, 585], "index": [19, 20, 26, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 51, 52, 53, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 87, 89, 91, 92, 100, 102, 103, 106, 110, 111, 120, 124, 125, 127, 128, 129, 133, 134, 135, 142, 152, 153, 154, 160, 163, 165, 168, 188, 193, 194, 195, 196, 197, 198, 199, 200, 201, 203, 204, 205, 206, 207, 208, 213, 217, 219, 220, 221, 224, 226, 228, 230, 231, 232, 237, 243, 244, 247, 248, 250, 251, 253, 255, 256, 257, 262, 267, 269, 270, 271, 272, 275, 279, 283, 292, 318, 332, 337, 386, 389, 392, 393, 394, 395, 398, 399, 406, 407, 408, 413, 416, 426, 440, 442, 443, 449, 450, 455, 456, 457, 459, 460, 462, 463, 464, 467, 469, 470, 471, 472, 473, 475, 476, 477, 478, 479, 481, 484, 485, 486, 487, 488, 492, 493, 497, 498, 499, 500, 506, 507, 508, 520, 522, 533, 534, 535, 538, 539, 540, 541, 543, 544, 545, 546, 548, 550, 552, 553, 554, 559, 560, 561, 569, 570, 571, 572, 573, 574, 575, 576, 577], "index1": [220, 267, 549, 563], "index2": [220, 267, 549, 563], "index_1": [270, 271, 272, 564, 565, 566], "index_2": [77, 270, 271, 272, 564, 565, 566], "index_arrai": [87, 91], "index_column": [87, 91], "index_data": 199, "index_err": 481, "index_error": [19, 20, 26, 220, 221, 224, 228, 230, 231, 232, 237, 243, 244, 247, 251, 253, 255, 256, 257, 262, 267, 269, 270, 271, 272, 275, 279], "index_mod": [87, 91], "index_scan": 495, "indexerror": [92, 100, 250], "indic": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 87, 91, 100, 193, 194, 195, 196, 197, 198, 199, 200, 203, 204, 205, 206, 207, 208, 383, 446, 462, 472, 482, 489, 490, 494, 495, 499, 500, 522, 534, 535, 581], "indico": 392, "indirect": [483, 510], "individu": [87, 91, 109, 122, 130, 379, 389, 395, 396, 398, 403, 406, 407, 411, 456, 459, 462, 470, 473, 477, 484, 485, 487, 489, 492, 493, 508, 518, 522, 527], "indiviud": 405, "indxschm": [195, 196, 207, 208], "ineffici": [87, 91, 386], "ineqcon": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40], "inequ": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40], "inertia": [51, 54], "inf": [67, 239, 281, 411, 495], "infer": [125, 127, 193, 194, 195, 196, 198, 206, 207, 208, 228, 384, 387, 506, 534], "inferno": 490, "infil": 383, "infin": 495, "influenc": 495, "info": [16, 67, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 82, 85, 86, 87, 91, 94, 100, 102, 103, 104, 105, 106, 108, 109, 110, 111, 156, 162, 164, 166, 291, 293, 318, 384, 398, 399, 403, 413, 419, 429, 430, 432, 439, 440, 443, 460, 464, 465, 467, 471, 477, 481, 483, 484, 485, 490, 498, 499, 500, 502, 504, 506, 582], "info_dict": [103, 106, 110, 111, 291, 293, 376, 432, 450, 485], "info_t": [100, 456, 459, 460, 462, 467, 478, 485, 492, 522], "infodict": 376, "inform": [11, 16, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 56, 67, 69, 71, 72, 74, 75, 76, 78, 79, 80, 84, 85, 88, 90, 91, 94, 99, 100, 102, 103, 105, 106, 110, 111, 125, 126, 127, 152, 156, 162, 164, 166, 167, 170, 175, 176, 181, 182, 201, 213, 220, 221, 222, 223, 224, 225, 227, 228, 230, 232, 233, 236, 237, 238, 239, 240, 241, 242, 244, 251, 252, 253, 254, 255, 257, 258, 263, 264, 265, 267, 270, 271, 272, 274, 275, 278, 279, 294, 300, 318, 334, 365, 366, 383, 387, 388, 393, 395, 396, 397, 398, 399, 406, 407, 410, 411, 412, 414, 419, 420, 421, 429, 431, 432, 435, 437, 443, 449, 450, 455, 457, 460, 461, 468, 471, 472, 475, 481, 482, 485, 486, 487, 489, 490, 493, 497, 498, 499, 500, 506, 507, 508, 517, 518, 519, 520, 522, 535, 582, 585], "infrar": 228, "infrastructur": [414, 422, 435, 446, 449], "ingredi": [407, 483], "inherit": [87, 91, 292, 383, 393, 395, 398, 407, 410, 411, 430, 435, 442, 485, 488, 533, 534], "init": [19, 20, 26, 87, 91, 124, 129, 135, 172, 220, 221, 222, 223, 224, 225, 227, 228, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 247, 249, 251, 254, 255, 256, 257, 258, 259, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 274, 275, 276, 277, 278, 279, 280, 281, 322, 334, 395, 432, 447, 449, 450, 451, 463, 473, 477, 484, 485, 486, 508], "initi": [15, 16, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 42, 53, 65, 84, 87, 90, 91, 105, 125, 126, 127, 135, 193, 194, 196, 199, 200, 203, 206, 226, 250, 252, 253, 310, 383, 388, 393, 394, 395, 399, 412, 437, 454, 462, 465, 467, 468, 470, 471, 472, 475, 479, 484, 485, 490, 493, 506, 507, 508, 517, 519, 567, 581], "initialis": [33, 42, 45, 46, 47, 103, 104, 106, 109, 110, 111, 154, 165, 168, 195, 196, 198, 204, 207, 208, 225, 233, 238, 240, 241, 242, 258, 265, 277, 280, 292, 332, 334, 337, 338, 339, 340, 383, 405, 495], "initiliaz": 412, "inject": [462, 475], "inlin": [388, 454, 456, 457, 459, 460, 461, 462, 463, 464, 465, 467, 473, 475, 476, 477, 478, 479, 481, 483, 484, 485, 487, 490, 491, 492, 493, 497, 498, 500, 506, 507, 508], "inner": [44, 52, 53, 129, 170, 180, 264, 465, 508, 545], "inner_height": [531, 535], "inner_width": [531, 535], "input": [16, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 41, 84, 86, 87, 90, 91, 103, 105, 106, 109, 120, 122, 124, 125, 126, 127, 128, 131, 132, 135, 139, 140, 141, 142, 144, 148, 153, 154, 156, 163, 164, 165, 166, 167, 168, 170, 172, 176, 178, 180, 194, 195, 196, 198, 200, 201, 202, 203, 204, 205, 206, 207, 208, 217, 219, 226, 241, 250, 277, 278, 279, 292, 310, 321, 331, 334, 353, 355, 376, 378, 389, 391, 393, 394, 395, 396, 397, 398, 399, 404, 420, 430, 435, 438, 445, 449, 451, 462, 471, 472, 479, 486, 490, 495, 520, 534, 535, 583], "input_map": [112, 117], "input_shap": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40], "input_unit": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40], "input_units_allow_dimensionless": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40], "input_units_equival": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40], "input_units_strict": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40], "inputs_map": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40], "ins": 449, "insensit": 202, "insert": [87, 91, 92, 100, 250, 409, 430, 585], "insert_row": [87, 91], "insertion_order_mww_test": 412, "inset": 436, "insid": [50, 83, 103, 110, 116, 119, 152, 178, 194, 195, 196, 198, 203, 206, 207, 208, 226, 250, 266, 372, 376, 383, 384, 397, 399, 407, 435, 454, 459, 462, 464, 467, 469, 475, 478, 485, 489, 491, 492, 493, 497, 499, 519, 529, 531, 532, 535], "inside_geom": 491, "insight": 419, "inspect": [395, 399, 420, 459, 461, 467, 471, 472, 487, 490, 492, 497, 498], "inspir": [383, 407, 413], "instal": [87, 91, 382, 383, 386, 390, 391, 392, 400, 413, 414, 415, 418, 420, 421, 424, 425, 435, 439, 442, 443, 444, 451, 454, 456, 459, 460, 461, 462, 463, 464, 465, 467, 468, 469, 470, 471, 472, 473, 476, 477, 478, 479, 483, 484, 485, 487, 489, 490, 491, 492, 493, 495, 497, 498, 499, 500, 502, 506, 507, 508, 522, 582], "instanc": [16, 19, 20, 26, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 50, 84, 85, 86, 87, 88, 90, 91, 92, 105, 122, 126, 127, 128, 130, 132, 133, 167, 169, 177, 193, 194, 195, 196, 197, 198, 199, 200, 203, 204, 205, 206, 207, 208, 220, 221, 222, 223, 224, 225, 227, 228, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 247, 248, 249, 251, 254, 255, 256, 257, 258, 259, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 274, 275, 276, 277, 278, 279, 280, 281, 289, 328, 334, 370, 372, 373, 374, 377, 379, 383, 389, 394, 395, 398, 399, 405, 407, 410, 435, 457, 459, 462, 473, 484, 486, 487, 489, 491, 492, 493, 508, 512, 522, 534, 535, 558], "instanti": [15, 16, 19, 20, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 84, 90, 105, 126, 195, 196, 198, 200, 207, 208, 394, 399, 456, 460, 484, 485, 490, 493, 495, 506], "instead": [16, 19, 20, 26, 84, 85, 87, 90, 91, 103, 105, 106, 110, 111, 115, 126, 182, 220, 221, 222, 223, 224, 225, 226, 227, 228, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 247, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 274, 275, 276, 277, 278, 279, 280, 281, 383, 384, 386, 388, 390, 391, 393, 394, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 411, 415, 416, 418, 425, 428, 431, 432, 445, 449, 451, 455, 461, 467, 471, 473, 475, 476, 478, 479, 484, 485, 488, 489, 490, 493, 495, 498, 519, 526, 527, 534, 535, 582], "instruct": [383, 392, 400, 413, 415, 416, 424, 435, 439, 443, 471, 497], "instrument": [6, 83, 95, 109, 155, 159, 160, 234, 383, 393, 394, 395, 396, 398, 403, 407, 416, 420, 429, 432, 444, 445, 446, 453, 456, 457, 459, 460, 463, 467, 474, 479, 481, 485, 487, 488, 489, 492, 493, 494, 495, 497, 498, 499, 500, 502, 506, 507, 518, 519, 520, 524, 526, 528, 580, 581], "int": [16, 17, 18, 19, 20, 21, 22, 24, 25, 26, 27, 33, 34, 38, 42, 45, 46, 47, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 69, 82, 83, 84, 85, 87, 88, 90, 91, 93, 94, 101, 103, 104, 105, 106, 109, 110, 111, 113, 114, 120, 122, 126, 127, 128, 129, 132, 133, 135, 143, 144, 149, 150, 151, 152, 153, 154, 155, 156, 157, 159, 160, 162, 163, 164, 165, 166, 167, 168, 171, 172, 175, 178, 182, 183, 188, 193, 194, 195, 196, 197, 198, 199, 200, 203, 204, 205, 206, 207, 208, 213, 215, 216, 217, 219, 220, 221, 223, 224, 225, 227, 228, 230, 231, 232, 233, 236, 237, 238, 239, 240, 241, 242, 243, 244, 247, 251, 252, 253, 254, 255, 256, 257, 258, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 274, 275, 277, 278, 279, 280, 285, 287, 289, 291, 292, 293, 297, 298, 299, 301, 306, 310, 321, 322, 328, 332, 334, 337, 338, 339, 340, 342, 343, 370, 376, 383, 397, 442, 487, 512], "int64": [103, 106, 110, 111, 112, 117, 124, 135, 520], "int_": [17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 220, 221, 224, 228, 230, 231, 232, 243, 244, 247, 251, 253, 255, 256, 257, 262, 267, 269, 270, 271, 272, 275, 279, 527, 539], "int_flux": 483, "integ": [69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 87, 91, 92, 93, 100, 103, 106, 110, 111, 125, 127, 128, 129, 132, 135, 143, 144, 153, 154, 160, 165, 168, 171, 193, 194, 195, 196, 198, 199, 200, 203, 204, 206, 207, 208, 217, 219, 226, 250, 310, 328, 334, 383, 389, 397, 534], "integr": [6, 17, 18, 19, 20, 21, 22, 24, 25, 26, 27, 31, 32, 37, 51, 102, 103, 106, 110, 111, 125, 127, 130, 132, 142, 149, 150, 151, 152, 155, 156, 157, 159, 162, 164, 166, 167, 170, 195, 196, 198, 200, 204, 207, 208, 209, 210, 220, 221, 223, 224, 225, 226, 227, 228, 230, 231, 232, 233, 236, 237, 238, 239, 240, 241, 242, 243, 244, 247, 250, 251, 252, 253, 254, 255, 256, 257, 258, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 274, 275, 277, 278, 279, 280, 282, 283, 285, 321, 382, 390, 392, 394, 396, 397, 398, 400, 401, 403, 407, 409, 412, 423, 425, 426, 430, 431, 435, 440, 441, 442, 443, 444, 445, 446, 449, 459, 461, 462, 464, 478, 481, 483, 484, 485, 490, 491, 493, 508, 510, 518, 520, 526, 541, 561], "integral_error": [19, 20, 26, 220, 221, 224, 228, 230, 231, 232, 237, 243, 244, 247, 251, 253, 255, 256, 257, 262, 267, 269, 270, 271, 272, 275, 279, 401, 432, 481], "integral_flux": 481, "integral_flux_imag": 436, "integrate_geom": [222, 223, 227, 236, 239, 252, 254, 263, 264, 266, 268, 274, 278, 435, 448, 450], "integrate_log_log": [149, 150, 151, 152, 155, 156, 157, 159, 162, 164, 166, 167], "integrate_spectrum": [19, 20, 26, 220, 221, 224, 228, 230, 231, 232, 243, 244, 247, 251, 253, 255, 256, 257, 262, 267, 269, 270, 271, 272, 275, 279, 426, 432], "integrate_spectrum_separ": [17, 18, 21, 22, 24, 25, 27], "intend": [87, 91, 310, 393, 411, 412, 488], "intens": [195, 196, 198, 204, 207, 208, 213, 240, 393, 490, 518], "intent": 388, "interact": [19, 20, 87, 91, 165, 168, 195, 196, 198, 204, 207, 208, 216, 220, 223, 224, 227, 228, 230, 231, 232, 233, 236, 237, 238, 239, 240, 241, 242, 243, 244, 247, 254, 255, 256, 257, 258, 262, 263, 264, 265, 267, 270, 271, 272, 277, 278, 382, 383, 384, 392, 393, 394, 395, 399, 403, 406, 420, 429, 455, 467, 475, 487, 490, 492, 493, 502, 506, 507, 531, 534, 558, 582], "interchang": 534, "interest": [116, 119, 128, 132, 213, 289, 388, 396, 397, 401, 403, 414, 457, 467, 471, 473, 481, 484, 485, 487, 489, 491, 494, 497, 498, 508, 519, 520, 558, 581, 584, 585], "interfac": [6, 11, 15, 19, 20, 87, 91, 211, 213, 216, 217, 218, 219, 220, 223, 224, 227, 228, 230, 231, 232, 233, 236, 237, 238, 239, 240, 241, 242, 243, 244, 247, 254, 255, 256, 257, 258, 262, 263, 264, 265, 267, 270, 271, 272, 277, 278, 383, 387, 388, 389, 393, 395, 396, 398, 400, 401, 402, 403, 412, 425, 428, 430, 431, 432, 435, 439, 442, 443, 449, 453, 455, 460, 463, 464, 467, 475, 476, 487, 493, 497, 502, 507, 508, 509, 518, 519, 522, 530, 533, 558, 579, 580, 581, 582], "interfer": 413, "intermedi": [206, 392, 399, 409, 420, 456, 477], "intern": [15, 19, 20, 26, 87, 91, 125, 127, 138, 139, 140, 141, 172, 178, 203, 220, 221, 224, 228, 230, 231, 232, 237, 243, 244, 247, 251, 253, 255, 256, 257, 262, 267, 269, 270, 271, 272, 275, 279, 285, 310, 322, 383, 395, 397, 399, 402, 407, 435, 437, 446, 449, 454, 460, 467, 476, 482, 485, 488, 490, 500, 506, 518, 522, 577], "interp": [19, 20, 157, 195, 196, 198, 200, 204, 205, 207, 208, 216, 220, 223, 224, 227, 228, 230, 231, 232, 233, 236, 237, 238, 239, 240, 241, 242, 243, 244, 247, 252, 253, 254, 255, 256, 257, 258, 262, 263, 264, 265, 267, 270, 271, 272, 277, 278, 323, 378, 406, 411, 448, 450, 462, 468, 472, 475, 478, 488, 489, 490, 493, 498, 499, 500, 534, 535, 558, 559], "interp1": 490, "interp1d": 323, "interp2": 490, "interp_by_coord": [195, 196, 198, 204, 207, 208, 278, 446, 490], "interp_by_pix": [195, 196, 198, 204, 207, 208, 274, 275, 490], "interp_kwarg": [68, 149, 150, 151, 152, 155, 156, 157, 159, 162, 164, 166, 167, 228, 274, 275, 278, 279, 383, 488, 498, 567], "interp_map": [195, 196, 198, 204, 207, 208], "interp_missing_data": [149, 150, 151, 152, 155, 156, 157, 159, 162, 164, 166, 167], "interp_param": 383, "interp_scal": [102, 290, 323], "interp_to_geom": [195, 196, 198, 204, 207, 208, 432, 448, 490, 498, 522], "interp_weight": 194, "interpol": [6, 26, 94, 102, 149, 150, 151, 152, 153, 154, 155, 156, 157, 159, 160, 162, 164, 165, 166, 167, 168, 175, 194, 195, 196, 198, 200, 204, 205, 207, 208, 228, 241, 252, 253, 274, 275, 277, 278, 279, 290, 322, 323, 324, 382, 394, 395, 396, 425, 430, 435, 437, 440, 443, 445, 446, 447, 448, 449, 450, 459, 472, 488, 489, 493, 498, 499, 522, 530, 534, 567], "interpolatedunivariatesplin": 277, "interpret": [91, 103, 106, 130, 143, 144, 196, 200, 206, 207, 208, 328, 401, 411, 490, 520, 535], "intersect": [89, 178, 179, 183, 203, 397, 477], "interspers": 388, "interstellar": [45, 471], "interv": [52, 53, 78, 82, 83, 86, 88, 89, 91, 92, 100, 102, 104, 109, 127, 132, 176, 200, 205, 213, 225, 233, 238, 240, 241, 242, 258, 265, 277, 280, 392, 393, 397, 398, 401, 407, 416, 429, 431, 432, 435, 444, 445, 450, 451, 476, 478, 481, 487, 490, 499, 507, 519, 534, 581, 584], "interval_edg": 205, "intervent": 412, "intrins": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 251, 299, 394, 398], "intrinsic_model": 455, "intro": 412, "intro_map": 444, "introduc": [19, 20, 195, 196, 198, 200, 204, 207, 208, 216, 220, 223, 224, 227, 228, 230, 231, 232, 233, 236, 237, 238, 239, 240, 241, 242, 243, 244, 247, 254, 255, 256, 257, 258, 262, 263, 264, 265, 267, 270, 271, 272, 277, 278, 383, 390, 391, 393, 395, 396, 397, 398, 400, 403, 405, 408, 411, 412, 426, 428, 429, 431, 432, 435, 437, 438, 442, 443, 444, 446, 449, 450, 451, 470, 482, 489, 493, 535, 540, 582, 585], "introduct": [386, 404, 405, 406, 412, 425, 429, 430, 431, 432, 451, 457, 460, 493, 506, 507, 511], "introductori": 482, "introspect": 310, "intuit": [404, 585], "invalid": [369, 383, 397, 410, 411, 435, 451, 461, 465, 471, 500], "invalid_pixel": 491, "invers": [19, 20, 26, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 206, 220, 221, 224, 228, 230, 231, 232, 237, 240, 243, 244, 247, 251, 253, 255, 256, 257, 262, 267, 269, 270, 271, 272, 275, 279, 291, 292, 293, 332, 339, 396, 412, 471, 491, 493, 495, 558], "inverse_al": [19, 20, 26, 220, 221, 224, 228, 230, 231, 232, 237, 243, 244, 247, 251, 253, 255, 256, 257, 262, 267, 269, 270, 271, 272, 275, 279], "inverse_cdf": [412, 471], "inversecdf": 396, "inversecdfsampl": [396, 427], "inversecompton": [251, 558], "invert": [91, 194, 206, 508], "invest": 386, "investig": [470, 477, 481], "involv": [87, 91, 103, 106, 110, 111, 383, 388, 397, 399, 401, 405, 463, 582], "io": [13, 83, 86, 87, 91, 128, 188, 198, 203, 213, 279, 386, 392, 403, 412, 414, 426, 429, 441, 445, 449, 471, 487, 488, 490, 497, 519, 522, 533, 535], "iop": 298, "iopscienc": 298, "ipix": 194, "ipykernel": [416, 418], "ipynb": [391, 403, 426, 429, 454, 455, 456, 457, 459, 460, 461, 462, 463, 464, 465, 467, 468, 469, 470, 471, 472, 473, 475, 476, 477, 478, 479, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 497, 498, 499, 500, 504, 506, 507, 508, 538, 539, 540, 541, 542, 543, 544, 545, 546, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 569, 570, 571, 572, 573, 574, 575, 576, 577], "ipynb_to_galleri": 383, "ipython": [87, 91, 382, 383, 399, 400, 415, 419, 427, 454, 456, 457, 459, 460, 461, 462, 463, 464, 465, 467, 468, 469, 470, 471, 472, 473, 475, 476, 477, 478, 479, 483, 484, 485, 486, 487, 489, 490, 491, 492, 493, 495, 497, 498, 499, 500, 502, 506, 507, 508, 521, 582], "ipython3": 417, "ipywidget": 490, "irap": 403, "irf": [6, 82, 88, 96, 103, 104, 106, 109, 110, 111, 112, 113, 114, 115, 117, 118, 135, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 175, 181, 182, 184, 185, 186, 188, 190, 191, 194, 203, 206, 266, 309, 383, 384, 389, 393, 394, 395, 396, 399, 402, 403, 404, 405, 411, 416, 424, 426, 429, 431, 432, 435, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 448, 449, 450, 451, 453, 455, 456, 457, 459, 460, 461, 462, 463, 464, 467, 471, 472, 475, 476, 478, 489, 491, 494, 495, 496, 498, 499, 500, 502, 506, 507, 518, 519, 522, 524, 525, 526, 528, 529, 580, 581], "irf_dict": 169, "irf_dl3_hdu_specif": 488, "irf_fil": [88, 150, 154, 155, 156, 165, 454, 462, 475, 478, 488, 497], "irf_filenam": [471, 472, 488, 497], "irf_map": [153, 154, 160, 165, 168], "irf_path": 471, "irfmap": [153, 154, 165, 168, 416, 432, 522], "irfmetadata": 410, "irfmodel": 394, "irfs1": 497, "irfs2": 497, "irfs_path": 82, "irfstack": [432, 441], "irregular": [194, 206, 534], "irrespect": [396, 467, 490, 534], "is_align": [194, 200, 205, 206], "is_all_point_sky_region": 203, "is_all_same_energy_shap": 100, "is_all_same_shap": 100, "is_all_same_typ": 100, "is_allclos": [149, 150, 151, 152, 155, 156, 157, 159, 162, 164, 166, 167, 194, 195, 196, 197, 198, 199, 200, 203, 204, 205, 206, 207, 208], "is_allski": [193, 194, 203, 206], "is_bkg": 108, "is_contigu": [205, 490], "is_convertible_to_flux_sed_typ": [125, 127], "is_energy_axi": 200, "is_energy_depend": [222, 223, 225, 227, 233, 236, 238, 239, 240, 241, 242, 252, 254, 258, 263, 264, 265, 268, 274, 277, 278, 280, 448, 493], "is_fixed_rad_max": 167, "is_flat": [193, 194, 199, 203, 206], "is_hpx": [194, 203, 206], "is_imag": [193, 194, 203, 206], "is_mask": [195, 196, 198, 204, 207, 208], "is_norm": [411, 437, 450], "is_norm_spectral_model": [19, 20, 26, 220, 221, 224, 228, 230, 231, 232, 237, 243, 244, 247, 251, 253, 255, 256, 257, 262, 267, 269, 270, 271, 272, 275, 279, 435, 493], "is_nul": 490, "is_pointed_observ": 83, "is_pointlik": [71, 74, 75, 76, 78, 149, 150, 151, 152, 155, 156, 157, 159, 162, 164, 166, 167, 435], "is_region": [194, 203, 206], "is_regular": [194, 203, 206], "is_ul": [67, 125, 127, 435, 450, 460, 484, 486, 508], "is_unidimension": 199, "isf": [487, 584], "isinst": [383, 394, 397, 406, 410, 411, 412], "ism": [52, 53, 558], "isn": [386, 390, 397, 399, 402, 414, 469, 582], "isnan": [490, 491], "iso": [88, 127, 205, 210, 449, 478, 492, 498, 534, 576], "iso_p8r2_source_v6_v06": [492, 498], "isol": [397, 415, 491], "isot": [364, 586], "isotherm": [22, 510], "isotrop": [47, 101, 223, 284, 492], "isotropic_fil": 101, "issu": [19, 20, 26, 87, 91, 220, 221, 224, 228, 230, 231, 232, 237, 243, 244, 247, 251, 253, 255, 256, 257, 262, 267, 269, 270, 271, 272, 275, 279, 383, 384, 386, 391, 392, 394, 395, 397, 400, 403, 408, 409, 410, 411, 413, 416, 417, 418, 422, 425, 437, 438, 440, 441, 442, 443, 444, 446, 447, 448, 449, 450, 469, 491, 497, 518, 522, 582, 583], "item": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 87, 91, 92, 100, 202, 250, 403, 410], "iter": [87, 91, 92, 100, 125, 127, 135, 195, 196, 198, 199, 200, 202, 204, 205, 207, 208, 250, 386, 389, 391, 399, 436, 463, 478], "iter_by_axi": [125, 127, 195, 196, 198, 204, 207, 208], "iter_by_axis_data": 204, "iter_by_coord": 427, "iter_by_edg": [200, 205], "iter_by_imag": [195, 196, 198, 204, 207, 208, 444], "iter_by_image_data": [195, 196, 198, 204, 207, 208, 490], "iter_by_image_index": [195, 196, 198, 204, 207, 208], "iter_by_pix": 427, "iter_with_reshap": 199, "itercol": [87, 91], "iterrow": [87, 91], "itertool": 487, "its": [19, 20, 26, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 77, 103, 106, 110, 111, 125, 127, 171, 172, 181, 194, 200, 202, 220, 221, 224, 227, 228, 230, 231, 232, 237, 243, 244, 247, 251, 253, 255, 256, 257, 262, 267, 269, 270, 271, 272, 275, 279, 289, 383, 386, 389, 392, 393, 395, 398, 399, 400, 402, 407, 409, 410, 414, 417, 435, 449, 450, 451, 456, 460, 461, 464, 471, 472, 476, 477, 482, 484, 486, 487, 489, 490, 491, 492, 493, 495, 506, 508, 511, 527, 529, 531, 533, 534, 535, 581, 584], "itself": [87, 91, 382, 383, 398, 409, 456, 476, 477, 479, 495, 582], "ivoa": [383, 450], "j": [19, 20, 23, 103, 110, 130, 137, 146, 292, 384, 386, 518], "j0001": [484, 508], "j0002": [484, 508], "j0003": [484, 508], "j0006": 484, "j0007": 508, "j0008": [484, 508], "j0009": 508, "j0010": 484, "j0013": 484, "j0021": 484, "j0022": 484, "j0025": 484, "j0031": 484, "j0349": 484, "j0521": 459, "j0534": [484, 508], "j0633": 508, "j0835": [457, 508], "j0851": 484, "j1036": 484, "j1104": [484, 508], "j1506": 457, "j1507": 457, "j1513": 484, "j1514": 484, "j1555": 508, "j1653": 484, "j1713": 456, "j1731": 492, "j1732": 492, "j1741": 492, "j1744": 492, "j1745": 492, "j1746": 492, "j1747": 492, "j1748": 492, "j1753": 492, "j1800": 492, "j1801": 492, "j1802": 492, "j1809": 492, "j1811": 492, "j1824": 484, "j1825": 470, "j1843": 67, "j1844": 67, "j2028": 484, "j2158": 484, "j2347": 508, "j2350": 508, "j2351": 508, "j2352": 508, "j2356": 508, "j2357": [484, 508], "j2358": [484, 508], "j2359": [484, 508], "j_": 23, "jackson": [87, 91], "jacob": [425, 444], "jacobian": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 431], "jalel": [432, 435], "jan": [388, 389, 392, 395, 400, 404, 422], "jana": 450, "januari": [390, 392, 408], "jargon": 416, "jason": 425, "javascript": [87, 91], "jax": 401, "jbernet": 450, "jean": [443, 444], "jeffrei": 495, "jeltema": 510, "jep": 388, "jet": 374, "jfact": 483, "jfact_decai": 483, "jfact_map": 483, "jfactor": [19, 20, 449], "jfactori": 483, "jj": 211, "jk": [103, 110, 518], "jkl": 518, "jkwa3k_w": 493, "jl": 518, "jo": [87, 91], "job": [93, 128, 129, 132, 135, 171, 437], "johann": [428, 435, 439, 440, 441, 442, 443, 444], "johannesbuchn": 412, "john": [87, 91, 412], "join": [385, 394, 395, 497], "joint": [100, 110, 111, 122, 133, 136, 137, 146, 148, 213, 289, 391, 392, 395, 399, 403, 405, 412, 416, 425, 426, 428, 429, 444, 445, 451, 453, 456, 457, 459, 460, 461, 463, 470, 474, 478, 485, 486, 487, 489, 493, 494, 495, 498, 502, 506, 520, 522, 579, 580, 581], "joint_fit": 479, "joint_result": 479, "jointli": [494, 499], "jonathan": [439, 440], "jose": [435, 437, 443], "joshi": 435, "jos\u00e9": [391, 399, 403, 424, 425, 426, 427, 428, 429, 430, 431, 432, 435, 443, 444, 445], "journal": 409, "jouvin": [425, 427, 428, 429, 432, 440, 441, 442, 443, 444], "jqueri": [87, 91], "jskwarg": [87, 91], "json": [16, 84, 90, 105, 126, 413, 437, 439, 443], "json_data": [16, 84, 90, 105, 126], "json_schema": [16, 84, 90, 105, 126], "jsonschema": [400, 428, 429], "jsviewer": [87, 91, 469], "juan": 450, "jul": [389, 398, 400, 402, 422], "juli": [389, 392, 397, 399, 400, 402, 406, 408, 410, 477, 481], "julia": 450, "julian": 586, "julien": [441, 442, 443], "jun": [397, 399, 400, 405, 406], "june": [397, 401, 422], "junior": [66, 403], "jupyt": [382, 390, 399, 400, 403, 415, 419, 421, 426, 441, 442, 443, 445, 454, 455, 456, 457, 459, 460, 461, 462, 463, 464, 465, 467, 468, 469, 470, 471, 472, 473, 475, 476, 477, 478, 479, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 497, 498, 499, 500, 502, 504, 506, 507, 508, 536, 538, 539, 540, 541, 542, 543, 544, 545, 546, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 569, 570, 571, 572, 573, 574, 575, 576, 577, 582], "jupyterlab": [382, 400, 403, 420, 454, 456, 459, 460, 461, 462, 463, 464, 465, 467, 468, 469, 470, 471, 472, 473, 476, 477, 478, 479, 483, 484, 485, 487, 489, 490, 491, 492, 493, 495, 497, 498, 499, 500, 506, 507, 508], "jupytext": 403, "just": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 83, 86, 155, 358, 383, 384, 385, 386, 388, 391, 393, 397, 399, 400, 401, 403, 414, 415, 417, 443, 445, 455, 459, 460, 462, 467, 469, 471, 476, 477, 479, 482, 485, 490, 498, 499, 506, 508, 519, 535, 582], "juypter": 399, "jyear": [87, 91], "k": [19, 33, 52, 53, 103, 110, 202, 224, 277, 334, 457, 459, 461, 484, 487, 490, 492, 498, 518, 535, 539, 551, 558, 569], "k_pnmu": 462, "kai": [443, 444], "kaori": 427, "kaspi": [31, 39, 45], "katrin": [411, 448, 449, 450], "kb": 391, "keep": [13, 87, 91, 100, 125, 163, 195, 196, 198, 204, 207, 208, 213, 383, 384, 386, 388, 389, 390, 391, 397, 400, 401, 402, 403, 406, 407, 412, 433, 443, 464, 465, 470, 475, 481, 487, 492, 498], "keep_byteord": [87, 91], "keep_column": [87, 91], "keep_mc_id": [104, 109], "keepdim": [163, 165, 168, 195, 196, 198, 204, 207, 208, 424, 429, 489], "kei": [16, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 69, 82, 84, 87, 89, 90, 91, 103, 105, 106, 110, 111, 120, 126, 135, 202, 213, 346, 351, 352, 369, 391, 393, 400, 405, 407, 410, 412, 421, 444, 455, 485, 493, 548], "kept": [89, 103, 106, 110, 111, 125, 127, 128, 132, 149, 150, 151, 152, 153, 154, 155, 156, 157, 159, 160, 162, 164, 165, 166, 167, 168, 193, 194, 195, 196, 198, 199, 203, 204, 206, 207, 208, 383, 389, 403, 407, 455, 481, 520], "kernel": [103, 106, 110, 111, 120, 124, 130, 131, 135, 152, 153, 154, 163, 165, 168, 170, 175, 180, 182, 185, 196, 206, 208, 389, 410, 416, 418, 430, 431, 436, 441, 445, 446, 451, 463, 465, 479, 489, 490, 491, 498, 508, 518, 522, 526], "kernel_width": [135, 463, 469], "kernelbackgroundestim": 431, "kernelbackgroundmapestim": 404, "kev": [108, 135, 200, 463, 485, 486, 535], "keyboard": 420, "keyerror": [91, 202, 407], "keyword": [16, 19, 20, 26, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 68, 82, 83, 84, 86, 87, 88, 90, 91, 95, 102, 103, 105, 106, 110, 111, 126, 127, 129, 130, 147, 148, 149, 150, 151, 152, 155, 156, 157, 159, 162, 163, 164, 165, 166, 167, 168, 193, 194, 195, 196, 198, 199, 200, 202, 203, 204, 205, 206, 207, 208, 211, 213, 216, 220, 221, 222, 223, 224, 225, 226, 227, 228, 230, 231, 232, 233, 234, 236, 237, 238, 239, 240, 241, 242, 243, 244, 247, 250, 251, 252, 253, 254, 255, 256, 257, 258, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 274, 275, 276, 277, 278, 279, 280, 284, 290, 292, 322, 330, 331, 352, 364, 366, 367, 370, 371, 372, 376, 377, 378, 379, 380, 410, 431, 435, 438, 446, 447, 461, 471, 472, 485, 490, 499, 520, 535, 546], "kg": 52, "khelifi": [412, 427, 429, 432, 435, 438, 442, 443, 444, 446, 447], "kh\u00e9lifi": [409, 446, 448, 449, 450, 451], "kill": 413, "kind": [87, 91, 358, 394, 395, 396, 401, 402, 406, 409, 444], "kinet": 44, "king": [164, 428, 439, 440, 441, 442, 443, 444, 488, 528], "kirsti": [448, 449, 450, 451], "kkfgju_5": 489, "kl": 518, "klepser": 439, "km": [32, 37], "km2": 497, "km2a": [57, 70], "know": [384, 386, 388, 392, 397, 399, 400, 407, 412, 414, 426, 443, 444, 445, 469, 472, 483, 488, 489, 490, 497, 499, 500, 582], "knowledg": [411, 412, 420, 457, 462, 468, 470, 473, 475, 476, 487, 489, 490, 492, 495], "known": [291, 293, 310, 396, 422, 459, 463, 465, 470, 476, 489, 490, 491, 508, 522, 532, 582, 583, 584], "koenig": [292, 451], "konig": [292, 451], "konrad": 450, "kornecki": 450, "kovalev": 482, "kpc": [17, 18, 21, 22, 24, 25, 27, 29, 33, 34, 38, 251, 310, 313, 483, 484, 516, 558], "kurt": 450, "kwarg": [19, 20, 26, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 53, 56, 58, 59, 60, 61, 62, 63, 64, 65, 66, 83, 86, 87, 88, 91, 102, 103, 106, 110, 111, 127, 128, 129, 130, 132, 147, 149, 150, 151, 152, 155, 156, 157, 159, 162, 163, 164, 165, 166, 167, 168, 177, 193, 194, 195, 196, 197, 198, 199, 200, 202, 203, 204, 205, 206, 207, 208, 211, 212, 213, 215, 220, 221, 222, 223, 224, 225, 226, 227, 228, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 274, 275, 276, 277, 278, 279, 280, 281, 284, 290, 322, 333, 358, 370, 371, 372, 375, 377, 378, 379, 380, 383, 394, 410, 411, 448, 457, 461, 471, 479, 489, 500, 570], "kwargs_ax": [376, 465, 467], "kwargs_background": [110, 111], "kwargs_colorbar": [149, 150, 152, 155, 156, 157, 162, 164, 166, 208, 371], "kwargs_count": [110, 111], "kwargs_excess": [110, 111], "kwargs_extens": [222, 223, 227, 236, 239, 252, 254, 263, 264, 268, 274, 278, 470], "kwargs_fit": [110, 111, 376], "kwargs_fp": 102, "kwargs_hist": [376, 465, 467], "kwargs_list": 202, "kwargs_model": 102, "kwargs_npred_sign": [110, 111], "kwargs_point": [203, 226, 250, 461], "kwargs_posit": [222, 223, 227, 236, 239, 252, 254, 263, 264, 268, 274, 278, 470], "kwargs_residu": [102, 110, 111], "kwargs_saf": [110, 111], "kwargs_spati": [103, 106, 110, 111, 467, 507], "kwargs_spectr": [103, 106, 110, 111, 467, 507], "kwargs_spectrum": [102, 110, 111], "l": [23, 26, 51, 54, 102, 103, 110, 111, 175, 380, 384, 397, 406, 409, 455, 456, 459, 460, 461, 462, 463, 464, 465, 467, 469, 470, 475, 478, 479, 484, 485, 487, 489, 490, 491, 493, 494, 495, 497, 498, 506, 507, 508, 518, 522, 535, 558, 567, 581, 583, 584, 585], "l06": [48, 512], "l_": [52, 53], "l_0": [51, 515, 539, 540], "l_snr": 44, "la": 441, "lab": [409, 416, 418, 420, 443], "label": [92, 197, 200, 205, 226, 250, 308, 371, 372, 377, 380, 383, 384, 387, 392, 396, 397, 413, 414, 435, 437, 446, 447, 449, 451, 454, 455, 457, 459, 461, 465, 467, 468, 472, 473, 476, 477, 479, 482, 483, 487, 490, 493, 494, 495, 508, 515, 516, 524, 548, 554, 557, 558, 562, 567], "label_axi": [197, 490], "label_axis2": 490, "labelcolor": 454, "labelmapaxi": [435, 449, 451], "lack": [202, 398, 479], "lafferti": [423, 581], "lafferty1994": 581, "lai": 491, "lambda": [67, 231, 232, 292, 376, 484, 497, 552, 584], "lambda_": [231, 232, 289, 457, 459, 467, 552, 554], "lancast": [137, 146], "land": 414, "landscap": 412, "langl": 19, "languag": [390, 402], "laplac": [239, 541], "laptop": 412, "lar": [399, 424, 425, 426, 442, 443, 444, 447, 449, 451], "larg": [67, 87, 91, 195, 196, 198, 204, 207, 208, 274, 276, 278, 383, 386, 388, 389, 397, 403, 404, 412, 425, 435, 444, 445, 450, 454, 459, 465, 477, 484, 491, 497, 498, 499, 508, 518, 520, 522, 523, 529, 535, 541, 579, 582, 587], "large_scale_compon": [67, 484], "larger": [27, 134, 153, 154, 160, 165, 168, 289, 298, 384, 391, 402, 449, 451, 454, 456, 459, 485, 489, 490, 491, 495, 519, 535, 541, 583, 584], "largest": [103, 106, 110, 111, 208, 383], "last": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 92, 94, 100, 195, 196, 197, 198, 200, 204, 207, 208, 250, 340, 380, 390, 393, 395, 405, 409, 413, 414, 416, 418, 424, 425, 482, 529, 531], "lat": [16, 47, 58, 60, 61, 62, 64, 65, 69, 71, 74, 75, 77, 78, 83, 86, 91, 94, 96, 101, 103, 106, 110, 112, 117, 124, 128, 129, 131, 135, 153, 154, 160, 165, 168, 171, 195, 196, 198, 201, 204, 206, 207, 208, 222, 223, 227, 234, 236, 239, 252, 254, 263, 264, 266, 268, 274, 276, 278, 284, 289, 312, 313, 316, 338, 383, 384, 391, 392, 393, 394, 395, 396, 402, 403, 406, 414, 416, 421, 424, 429, 442, 443, 444, 451, 453, 457, 460, 463, 464, 465, 467, 469, 473, 476, 477, 481, 484, 485, 486, 488, 489, 490, 491, 492, 493, 494, 501, 502, 506, 507, 508, 510, 517, 519, 520, 522, 527, 534, 535, 539, 540, 541, 542, 543, 544, 545, 579, 586], "lat_0": [227, 236, 239, 254, 263, 264, 278, 398, 406, 463, 464, 467, 468, 470, 471, 472, 475, 476, 484, 485, 492, 493, 498, 506, 507, 539, 540, 541, 543, 544, 545, 546], "lat_0_err": 470, "lat_pnt": [312, 316], "lat_rang": 338, "lat_t": [312, 316], "later": [383, 388, 389, 390, 394, 395, 396, 399, 400, 401, 402, 403, 404, 412, 423, 425, 435, 436, 438, 439, 445, 455, 459, 461, 467, 468, 485, 489, 490, 493, 498, 508, 518], "latest": [128, 188, 279, 310, 386, 390, 403, 408, 409, 413, 417, 446, 454, 462, 464, 467, 468, 469, 475, 478, 487, 519, 522, 535], "latex": [383, 384], "latex_inlin": 449, "latitud": [94, 150, 193, 194, 195, 196, 201, 203, 206, 207, 208, 338, 370, 428, 473, 490, 493, 527, 534, 542], "latpol": 490, "latter": [182, 213, 394, 396, 398, 404, 407, 410, 412, 429, 461, 462, 471, 472, 475, 491, 492, 529, 531, 583], "launch": [416, 418, 443, 582], "laura": [432, 435, 437, 438, 444, 446, 448, 449, 450, 451], "law": [27, 102, 120, 125, 127, 129, 134, 142, 163, 165, 168, 220, 230, 231, 232, 255, 256, 257, 258, 267, 270, 271, 272, 282, 292, 337, 396, 423, 429, 443, 453, 455, 462, 464, 467, 471, 473, 475, 477, 478, 479, 481, 492, 493, 495, 522, 536, 548, 568, 574], "law2": 561, "layer": [87, 91, 395, 402], "layout": [435, 467, 475, 490, 497, 506, 507], "lazi": [88, 100, 103, 106, 110, 111, 276, 319, 443], "lazili": 103, "lazyfitsdata": 431, "lc": [86, 132, 205, 396, 398], "lc_1d": [125, 127, 147, 476, 477, 478, 482], "lc_3d": 476, "lc_estim": 398, "lc_maker_1d": [476, 477, 478], "lc_maker_3d": 476, "lc_new": 477, "le": 90, "lea": 432, "lead": [124, 383, 392, 397, 402, 404, 406, 408, 409, 412, 428, 451, 495, 497, 499, 510, 582], "leak": [461, 531], "leakag": [292, 451, 476], "learn": [150, 155, 383, 400, 403, 413, 416, 418, 420, 444, 457, 459, 463, 469, 470, 471, 473, 482, 484, 485, 487, 490, 493, 495, 497, 502, 508, 582], "least": [43, 44, 136, 145, 383, 386, 388, 392, 471, 482, 534], "leav": [388, 395, 397, 398, 400, 403, 415, 492], "lefaucheur": [441, 442, 443], "left": [21, 24, 25, 27, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 50, 51, 52, 53, 87, 91, 103, 110, 125, 127, 132, 135, 153, 155, 195, 196, 198, 204, 207, 208, 232, 237, 257, 270, 294, 300, 383, 391, 393, 397, 399, 402, 406, 420, 463, 469, 476, 478, 482, 484, 492, 520, 529, 532, 540, 541, 548, 549, 552, 553, 555, 556, 558, 560, 563, 564, 565, 566, 570, 571, 572, 574, 583, 584, 585], "legaci": [383, 443, 444], "legacy_altaz": 85, "legal": [87, 91], "legend": [380, 454, 455, 457, 459, 461, 467, 468, 472, 473, 476, 477, 479, 482, 483, 487, 493, 494, 495, 498, 515, 516, 524, 548, 554, 557, 558, 562, 567], "legend_kwarg": 380, "lemi\u00e8r": 443, "len": [83, 289, 380, 463, 470, 471, 472, 477, 479, 481, 482, 484, 489, 492, 508, 522], "lenain": [443, 444], "length": [19, 20, 26, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 80, 82, 87, 91, 94, 171, 193, 194, 195, 196, 198, 199, 203, 204, 206, 207, 208, 220, 221, 222, 223, 224, 225, 226, 227, 228, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 247, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 274, 275, 276, 277, 278, 279, 280, 281, 292, 322, 376, 409, 412, 457, 459, 462, 469, 473, 481, 484, 487, 490, 498, 508, 539], "lengthi": 490, "lennarz": [426, 440, 442], "leq": [539, 544, 545], "less": [77, 194, 196, 200, 241, 277, 300, 383, 388, 390, 401, 412, 414, 443, 487, 493, 494, 495], "let": [67, 283, 383, 386, 388, 392, 397, 400, 416, 419, 443, 444, 445, 457, 460, 461, 462, 463, 467, 468, 469, 470, 471, 473, 478, 479, 484, 485, 487, 490, 491, 493, 495, 498, 506, 508, 582], "level": [6, 11, 15, 16, 83, 84, 90, 105, 124, 126, 213, 291, 293, 383, 384, 386, 387, 388, 394, 396, 398, 402, 403, 404, 407, 410, 416, 420, 427, 428, 429, 430, 431, 435, 443, 450, 453, 456, 457, 459, 460, 463, 464, 465, 467, 469, 471, 475, 476, 477, 478, 479, 482, 483, 486, 487, 492, 494, 497, 498, 499, 500, 502, 504, 508, 509, 518, 519, 520, 527, 529, 530, 580, 581, 582, 586], "levelnam": 383, "levmar": [213, 487], "lf": 414, "lgpl": 383, "lgtm": 414, "lhaaso": [55, 57], "li": [120, 124, 178, 389, 412, 454, 463, 465, 471, 486, 581, 584], "lib": [347, 454, 456, 459, 460, 461, 462, 463, 464, 465, 467, 468, 469, 470, 471, 472, 473, 475, 476, 477, 478, 479, 481, 483, 484, 485, 487, 489, 490, 491, 492, 493, 495, 497, 498, 499, 500, 506, 507, 508, 546, 554, 570], "librari": [87, 91, 383, 388, 389, 393, 403, 409, 421, 456, 459, 471, 493, 497, 507, 510, 519, 522, 580, 582], "licenc": 409, "licens": [409, 420], "lie": [193, 194, 200, 203, 206, 486], "life": [390, 487], "lifetim": [20, 450], "lifetime_age_of_univers": 20, "light": [15, 73, 77, 132, 139, 228, 241, 299, 387, 394, 396, 399, 403, 407, 416, 429, 431, 432, 439, 442, 444, 449, 450, 453, 455, 480, 481, 482, 502, 520, 521, 531, 536, 578, 580], "light_curv": [16, 241, 403, 444, 453, 460, 464, 465, 467, 476, 480, 506, 577], "light_curve_flar": [453, 477, 480], "light_curve_model": 577, "light_curve_simul": [453, 478, 480], "lightcrv_pksb1222": [241, 577], "lightcurv": [71, 73, 74, 75, 77, 78, 121, 127, 132, 138, 139, 140, 141, 147, 204, 205, 241, 296, 297, 299, 392, 394, 399, 402, 404, 407, 416, 427, 429, 430, 431, 435, 441, 442, 443, 444, 446, 447, 449, 450, 453, 476, 477, 480, 486, 502, 517, 522, 577], "lightcurve1": 138, "lightcurve2": 138, "lightcurve_at_energi": 407, "lightcurveconfig": 16, "lightcurveestim": [121, 398, 399, 404, 407, 416, 427, 429, 431, 432, 435, 443, 444, 449, 476, 477, 478, 481, 522], "lightcurvetablemodel": [394, 396], "lightcurvetempl": 394, "lightcurvetemplatemodel": [448, 449], "lightcurvetemplatetemporalmodel": [273, 406, 446, 449, 451, 472, 493, 577], "like": [19, 20, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 46, 50, 52, 53, 67, 80, 82, 87, 88, 91, 143, 144, 159, 167, 195, 196, 198, 202, 204, 207, 208, 216, 220, 223, 224, 227, 228, 230, 231, 232, 233, 236, 237, 238, 239, 240, 241, 242, 243, 244, 247, 254, 255, 256, 257, 258, 262, 263, 264, 265, 267, 270, 271, 272, 277, 278, 310, 330, 340, 382, 383, 384, 386, 388, 389, 390, 391, 393, 394, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 409, 411, 412, 413, 415, 416, 420, 426, 435, 437, 438, 442, 443, 445, 446, 448, 449, 454, 455, 457, 459, 460, 461, 462, 465, 472, 473, 479, 482, 483, 485, 487, 488, 490, 494, 495, 497, 498, 502, 506, 508, 510, 511, 518, 522, 527, 535, 545, 580, 582, 583, 584, 585], "likelhood": 395, "likelihood": [100, 102, 103, 106, 111, 124, 125, 126, 127, 129, 135, 136, 145, 245, 290, 307, 383, 389, 392, 395, 396, 399, 401, 403, 404, 405, 407, 412, 416, 423, 425, 426, 429, 436, 439, 442, 444, 445, 450, 451, 457, 459, 460, 461, 463, 469, 473, 476, 477, 479, 485, 486, 487, 489, 495, 498, 506, 507, 510, 518, 520, 522, 558, 580, 581, 583, 584], "likelihood_profil": [394, 425], "likelihood_typ": 430, "likewis": [196, 208], "lima": 120, "lima1983": [520, 581, 584], "lima_map": 465, "lima_maps2": 465, "limamapestim": [404, 431], "limit": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 52, 53, 77, 80, 87, 91, 102, 113, 114, 124, 125, 126, 127, 128, 129, 132, 133, 135, 136, 145, 152, 167, 170, 200, 217, 219, 255, 290, 291, 293, 330, 331, 370, 389, 391, 392, 394, 395, 396, 397, 398, 400, 401, 403, 404, 406, 407, 411, 412, 425, 431, 435, 442, 443, 444, 445, 450, 454, 459, 463, 467, 470, 473, 476, 485, 486, 487, 490, 491, 494, 498, 506, 518, 520, 522, 531, 540, 558, 567, 580, 581, 585], "lin": [19, 20, 200, 204, 205, 208, 216, 220, 223, 224, 227, 228, 230, 231, 232, 233, 236, 237, 238, 239, 240, 241, 242, 243, 244, 247, 252, 253, 254, 255, 256, 257, 258, 262, 263, 264, 265, 267, 270, 271, 272, 277, 278, 290, 322, 323, 324, 411, 472, 488, 490, 500, 535, 558], "line": [6, 13, 46, 82, 83, 87, 91, 102, 103, 106, 110, 111, 156, 162, 164, 166, 203, 204, 226, 250, 342, 343, 380, 382, 384, 386, 389, 392, 394, 397, 399, 400, 407, 414, 415, 416, 418, 420, 429, 440, 443, 451, 467, 487, 489, 493, 510, 522, 535, 580], "line2d": [203, 226, 250], "linear": [19, 20, 26, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 149, 150, 151, 152, 155, 157, 159, 162, 167, 195, 196, 198, 204, 205, 207, 208, 220, 221, 224, 228, 230, 231, 232, 237, 241, 242, 243, 244, 247, 251, 253, 255, 256, 257, 262, 267, 269, 270, 271, 272, 274, 275, 277, 278, 279, 322, 383, 446, 453, 467, 472, 473, 475, 490, 493, 498, 506, 507, 536, 578], "linear_model": 573, "linearli": [205, 208, 490, 518], "linearsegmentedcolormap": [373, 374], "linearstretch": [373, 374], "lineartemporalmodel": [273, 493, 573], "lineno": 383, "liner": [277, 397], "linestyl": [454, 479, 481, 483, 495, 516, 535, 539, 540], "linewidth": [380, 384, 481], "linhoff": [447, 448, 449, 450, 451], "link": [67, 69, 80, 102, 226, 228, 250, 289, 386, 388, 391, 392, 395, 403, 409, 413, 414, 420, 421, 432, 435, 437, 441, 442, 443, 455, 456, 459, 460, 461, 462, 464, 467, 468, 475, 477, 478, 484, 487, 493, 495, 497, 507, 508, 522, 567, 579], "linkag": 308, "linkage_kwarg": 308, "linkcheck": 384, "linspac": [83, 154, 195, 196, 198, 204, 207, 208, 213, 471, 473, 479, 487, 488, 490, 495, 534, 539], "lint": [16, 84, 90, 105, 126], "linux": [390, 400, 414, 417, 444, 454, 456, 459, 460, 461, 462, 463, 464, 465, 467, 468, 469, 470, 471, 472, 473, 476, 477, 478, 479, 483, 484, 485, 487, 489, 490, 491, 492, 493, 495, 497, 498, 499, 500, 506, 507, 508, 582], "list": [19, 20, 26, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 71, 72, 74, 75, 76, 78, 79, 80, 82, 83, 86, 87, 88, 89, 90, 91, 92, 93, 96, 100, 102, 103, 104, 105, 106, 109, 110, 111, 120, 122, 124, 125, 127, 128, 129, 132, 133, 135, 136, 137, 145, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 159, 160, 162, 164, 165, 166, 167, 168, 170, 171, 175, 176, 178, 179, 181, 182, 183, 184, 187, 190, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 210, 211, 213, 217, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 274, 275, 276, 277, 278, 279, 280, 281, 289, 331, 341, 342, 343, 345, 372, 376, 377, 379, 380, 382, 383, 385, 386, 387, 388, 389, 390, 391, 392, 393, 402, 403, 404, 405, 406, 407, 409, 410, 413, 414, 415, 416, 417, 418, 419, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 455, 456, 459, 462, 463, 468, 472, 473, 475, 476, 478, 481, 482, 485, 486, 487, 488, 489, 494, 495, 497, 498, 499, 500, 502, 507, 518, 522, 525, 534, 535, 579, 580, 581, 582], "list_format": [87, 91], "listen": 522, "listenv": 386, "liter": [16, 84, 90, 105, 126, 328, 383], "literatur": [412, 510, 512, 581], "littl": [87, 91, 402, 404, 410, 490, 498, 527, 531, 582], "live": [83, 86, 88, 383, 388, 391, 393, 404, 412, 445, 448, 486], "live_point": 412, "livetim": [67, 88, 89, 106, 107, 111, 165, 187, 189, 190, 389, 454, 456, 459, 460, 462, 469, 471, 472, 475, 478, 484, 485, 488, 490, 498, 499, 508, 518, 522], "livetime_fract": 89, "ljouvin": 389, "ll": [125, 127, 135, 386, 388, 400, 417, 454, 455, 456, 459, 461, 464, 465, 469, 476, 477, 478, 479, 481, 482, 582, 584], "llvm": 420, "ln": [53, 487, 565], "lo": [23, 412, 442], "lo_bnd": 200, "lo_threshold": 152, "load": [66, 67, 83, 86, 87, 91, 100, 102, 103, 106, 110, 129, 131, 169, 175, 193, 194, 195, 196, 206, 318, 383, 438, 441, 443, 449, 460, 462, 464, 465, 471, 472, 475, 478, 479, 482, 491, 497, 498, 500, 506, 508, 519], "load_cta_irf": [445, 449], "load_irf_dict_from_fil": [165, 449, 454, 462, 471, 472, 475, 478, 497], "loc": [87, 91, 208, 376, 479, 515, 516, 524, 548, 554, 557, 558, 562], "loc_indic": [87, 91], "local": [17, 18, 21, 22, 24, 25, 27, 87, 91, 143, 144, 180, 193, 194, 203, 204, 206, 383, 384, 386, 391, 397, 412, 413, 414, 417, 421, 425, 435, 460, 463, 464, 465, 470, 471, 483, 489, 502, 506, 522], "local_dataset": 489, "local_dens": [17, 18, 21, 22, 24, 25, 27, 483], "local_to_glob": 194, "localfold": 11, "localis": 318, "localn": [16, 84, 90, 105, 126], "locat": [47, 82, 83, 85, 87, 88, 90, 94, 139, 153, 154, 160, 165, 168, 206, 339, 391, 397, 401, 404, 409, 410, 416, 418, 449, 451, 454, 462, 471, 472, 475, 478, 484, 499, 500, 519, 535, 582], "location_info": 87, "log": [16, 19, 20, 26, 42, 84, 90, 103, 105, 125, 126, 127, 149, 150, 151, 152, 155, 156, 157, 159, 162, 164, 166, 167, 175, 200, 204, 208, 216, 220, 221, 223, 224, 227, 228, 230, 231, 232, 233, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 247, 251, 252, 253, 254, 255, 256, 257, 258, 262, 263, 264, 265, 267, 269, 270, 271, 272, 274, 275, 277, 278, 279, 282, 285, 294, 300, 321, 322, 324, 369, 378, 395, 399, 412, 422, 439, 446, 450, 453, 455, 460, 462, 463, 464, 465, 467, 468, 469, 472, 475, 476, 477, 478, 481, 483, 485, 487, 488, 489, 490, 493, 495, 498, 499, 504, 506, 507, 522, 524, 534, 535, 536, 559, 567, 568, 574, 581, 582, 583, 584, 585], "log10": 479, "log_": [243, 244, 493, 556], "log_2": 297, "log_en": 493, "log_level": 11, "log_parabola": 457, "log_parabola_norm": 406, "logarithm": [34, 490, 495, 556], "logarithmic_spir": 34, "logb": 42, "logconfig": 16, "logenergyaxi": 442, "loggaussian": 394, "logger": [349, 352, 383, 469], "logic": [16, 84, 86, 90, 105, 126, 181, 407, 451, 490, 491], "logical_and": [195, 196, 198, 204, 207, 208], "logical_or": [195, 196, 198, 204, 207, 208, 489], "loglog": [19, 20, 26, 220, 221, 224, 228, 230, 231, 232, 237, 243, 244, 247, 251, 253, 255, 256, 257, 262, 267, 269, 270, 271, 272, 275, 279, 321, 454, 483, 514, 515, 516], "lognorm": 483, "logo": 414, "logparabola": [394, 557], "logparabolanormspectralmodel": [244, 261, 406, 432, 493, 557], "logparabolaspectralmodel": [213, 243, 261, 406, 455, 457, 459, 461, 468, 484, 487, 493, 550, 556], "logscal": 429, "logspac": [154, 195, 196, 198, 204, 207, 208, 462, 475, 478, 479, 483, 490, 514, 515, 516, 535], "logspir": [33, 38], "loguniform": [245, 412], "logz": 412, "logz_b": 412, "logz_singl": 412, "logzerr": 412, "logzerr_b": 412, "logzerr_singl": 412, "logzerr_tail": 412, "lomb": [398, 443], "lon": [16, 47, 91, 94, 96, 103, 106, 110, 112, 117, 124, 129, 131, 135, 153, 154, 160, 165, 168, 171, 195, 196, 198, 201, 204, 206, 207, 208, 222, 223, 227, 234, 236, 239, 252, 254, 263, 264, 266, 268, 274, 276, 278, 312, 313, 316, 338, 383, 384, 394, 397, 402, 406, 428, 451, 460, 463, 464, 465, 467, 469, 473, 476, 477, 481, 484, 485, 486, 488, 489, 490, 493, 494, 498, 506, 507, 508, 520, 534, 535, 539, 540, 541, 542, 543, 544, 545], "lon_0": [227, 236, 239, 254, 263, 264, 278, 398, 406, 463, 464, 467, 468, 470, 471, 472, 475, 476, 484, 485, 492, 493, 498, 506, 507, 539, 540, 541, 543, 544, 545, 546], "lon_0_err": 470, "lon_pnt": [312, 316], "lon_rang": 338, "lon_t": [312, 316], "long": [383, 386, 388, 390, 397, 399, 402, 403, 405, 408, 410, 412, 437, 446, 455, 484, 502, 534], "longer": [298, 383, 389, 390, 397, 398, 400, 403, 417, 435, 438, 443, 444, 446, 449, 456, 462, 476], "longest": 199, "longitud": [68, 94, 150, 193, 194, 195, 196, 201, 203, 206, 207, 208, 338, 370, 397, 473, 490, 493, 527, 534, 542], "lonpol": 490, "look": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 46, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 83, 88, 103, 106, 110, 111, 127, 149, 150, 152, 153, 154, 155, 156, 157, 162, 163, 164, 165, 166, 168, 340, 383, 385, 386, 388, 395, 397, 398, 400, 402, 403, 406, 412, 420, 443, 456, 459, 460, 462, 463, 464, 465, 467, 469, 471, 473, 475, 476, 478, 479, 485, 488, 490, 493, 497, 498, 500, 502, 506, 508, 510, 519, 522, 582], "look_up": 441, "lookup": 201, "loop": [87, 91, 331, 396, 449, 459, 484, 490, 499, 506, 522], "lopez": [228, 443, 449, 548], "lopez21": [229, 455, 548], "lopez_2021": 229, "lorimer2006": [28, 29, 30, 36, 39, 40, 48], "lose": 383, "loss": 52, "lost": [100, 103, 106, 110, 111, 522, 535], "lot": [82, 383, 386, 388, 389, 390, 391, 394, 396, 397, 399, 403, 414, 424, 426, 427, 435, 443, 444, 460, 469, 498, 506, 507, 532], "low": [87, 91, 152, 200, 333, 383, 384, 387, 392, 413, 441, 443, 453, 456, 459, 463, 469, 471, 485, 491, 492, 497, 498, 502, 506, 509, 529, 583], "low_zenith": 494, "lower": [17, 18, 19, 20, 21, 22, 24, 25, 26, 27, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 52, 53, 125, 127, 152, 181, 200, 202, 205, 220, 221, 224, 225, 228, 230, 231, 232, 233, 237, 238, 240, 241, 242, 243, 244, 247, 251, 253, 255, 256, 257, 258, 262, 265, 267, 269, 270, 271, 272, 275, 277, 279, 280, 383, 397, 402, 403, 410, 473, 489, 507], "lower_error": 127, "lowest": [402, 482], "lp": [243, 244, 406, 457, 484, 493, 550], "lp_norm": 557, "lss": 459, "lst": [390, 497], "lsw": 413, "lt": [383, 409, 437, 446, 544, 545], "ltcube": [194, 195, 196, 198, 207, 208, 490], "lts_author": 409, "luca": [425, 426, 427, 428, 429, 430, 431, 432, 435, 437, 438, 446, 449], "lui": 445, "luigi": 440, "luminos": [41, 46, 51, 52, 53, 54, 251], "luminosity_spindown": [51, 54], "luminosity_tev": [52, 53, 516], "lvtm": 478, "lw": [459, 461, 463, 469, 479, 487, 535, 539, 541], "ly": [435, 492], "lyne": 37, "lysvohrn": 481, "l\u00e9a": [425, 427, 428, 429, 432, 440, 441, 442, 443, 444], "l\u00f3pez": 443, "m": [19, 28, 29, 30, 31, 32, 35, 36, 37, 38, 39, 40, 52, 53, 87, 91, 94, 97, 112, 117, 132, 193, 194, 195, 196, 198, 204, 206, 207, 208, 292, 307, 383, 384, 386, 397, 413, 415, 416, 417, 418, 472, 483, 487, 488, 490, 493, 504, 527, 531, 533, 534, 535, 546, 582, 585], "m2": [103, 155, 175, 455, 460, 462, 464, 465, 467, 469, 475, 485, 488, 489, 497, 506, 507], "m_": [20, 50, 52, 53], "m_3fhl_gc": 490, "m_4d": 490, "m_allski": 490, "m_b": 583, "m_cube": 490, "m_ejecta": [52, 515], "m_gc": 490, "m_hpx": 490, "m_i": 583, "m_iem_10gev": 490, "m_iem_cutout": 490, "m_iem_gc": 490, "m_iem_interp": 490, "m_sub": 490, "m_sun": 515, "m_wc": [195, 196, 198, 204, 207, 208, 490], "ma": [87, 91, 120, 124, 454, 463, 465, 486, 581, 584], "mac": [87, 91, 383, 390, 414, 442, 582], "machin": [386, 390, 391, 396, 400, 414, 454, 456, 459, 460, 461, 462, 463, 464, 465, 467, 468, 469, 470, 471, 472, 473, 476, 477, 478, 479, 483, 484, 485, 487, 489, 490, 491, 492, 493, 495, 497, 498, 499, 500, 506, 507, 508], "machineri": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 467], "maco": [400, 444], "macport": [400, 442, 444], "made": [175, 182, 203, 206, 217, 219, 226, 250, 310, 342, 343, 383, 386, 388, 399, 402, 404, 407, 408, 409, 435, 446, 447, 451, 459, 463, 467, 468, 489, 497, 535, 546], "madrid": 393, "magenta": [380, 470, 494], "magic": [97, 416, 421, 437, 443, 446, 461, 498, 581], "magic_ecpl": 283, "magic_lp": [283, 461], "magnet": [42, 50, 51, 54, 558], "magnetic_field": [50, 51, 54], "magnitud": [322, 471], "mai": [16, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 82, 84, 87, 90, 91, 94, 102, 105, 126, 127, 383, 384, 386, 391, 392, 396, 397, 399, 400, 408, 409, 414, 415, 417, 422, 423, 455, 464, 465, 471, 486, 497, 521, 522, 534, 541, 558, 579, 582, 586], "mail": [384, 386, 388, 390, 397, 399, 402, 404, 406, 409, 413, 419, 424, 425, 508, 582], "mailmap": [435, 446], "main": [91, 103, 110, 383, 386, 388, 389, 391, 395, 398, 399, 400, 403, 407, 409, 413, 414, 425, 431, 435, 438, 443, 449, 460, 470, 471, 473, 475, 481, 484, 488, 490, 491, 492, 504, 506, 507, 517, 519, 523, 582], "mainli": [383, 393, 394, 397, 404, 490], "maint": 451, "maintain": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 87, 91, 383, 385, 400, 402, 403, 404, 408, 414, 444, 489], "mainten": [383, 390, 409, 414, 426, 448], "major": [203, 227, 236, 239, 383, 387, 388, 392, 400, 408, 437, 443, 444, 539, 540, 541], "majorana": 19, "make": [16, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 45, 46, 59, 82, 84, 87, 90, 91, 95, 102, 105, 126, 170, 171, 175, 176, 177, 178, 180, 181, 182, 185, 186, 191, 192, 194, 195, 196, 199, 200, 203, 205, 206, 207, 208, 277, 340, 342, 343, 354, 382, 384, 385, 388, 389, 390, 393, 395, 397, 399, 400, 401, 402, 403, 404, 407, 409, 410, 414, 416, 418, 420, 423, 424, 426, 429, 430, 435, 437, 440, 441, 442, 443, 446, 448, 451, 455, 456, 459, 461, 462, 465, 467, 471, 475, 476, 488, 489, 490, 493, 497, 498, 504, 508, 519, 522, 582, 583], "make_background": [175, 182], "make_background_fit": 172, "make_background_scal": 172, "make_base_catalog_galact": [443, 512], "make_concentric_annulus_sky_region": 473, "make_contour": 487, "make_count": [175, 176, 177, 182], "make_counts_off": [176, 177], "make_cub": 170, "make_dataset": 171, "make_default_fov_background_model": 172, "make_edisp": [175, 182], "make_edisp_kernel": [175, 182], "make_edisp_kernel_map": 488, "make_edisp_map": 154, "make_effective_livetime_map": [451, 489], "make_exclusion_mask": 172, "make_exposur": [175, 182], "make_exposure_irf": [175, 182], "make_imag": 444, "make_lupton_rgb": 378, "make_map_background_irf": 438, "make_map_count": 389, "make_map_cutout": 389, "make_map_exposure_reco_energi": 389, "make_map_exposure_true_energi": [154, 389, 488], "make_map_fov_background": 389, "make_map_hadron_accept": 389, "make_map_ring_background": 389, "make_map_xxx": 389, "make_maps_off": 180, "make_mask_bkg_invalid": 181, "make_mask_energy_aeff_default": 181, "make_mask_energy_aeff_max": 181, "make_mask_energy_bkg_peak": 181, "make_mask_energy_edisp_bia": 181, "make_mask_offset_max": 181, "make_mean_edisp": 445, "make_mean_psf": 445, "make_meta_t": [175, 182], "make_model": 402, "make_more_random_stuff": 383, "make_observation_time_map": 489, "make_orthogonal_rectangle_sky_region": [129, 473], "make_path": [127, 468, 485, 486], "make_pixel_region": 397, "make_psf": [165, 175, 182, 445], "make_psf_map": 488, "make_quant": 354, "make_random_stuff": 383, "make_region": 397, "make_sky_coord": 397, "make_some_random_stuff": 383, "make_theta_squared_t": [435, 500], "makefil": [414, 439], "maker": [6, 154, 165, 170, 171, 172, 173, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 389, 396, 398, 409, 429, 431, 432, 437, 446, 449, 450, 453, 454, 459, 461, 462, 465, 469, 471, 472, 475, 478, 479, 481, 485, 488, 491, 496, 499, 500, 502, 532, 581], "maker_fov": 507, "maker_safe_mask": [469, 475, 507], "mamba": [386, 415, 416, 437], "manag": [87, 91, 217, 219, 226, 250, 330, 361, 382, 383, 386, 391, 399, 400, 402, 405, 409, 410, 413, 435, 440, 442, 446, 450, 490, 492, 582], "manconi": 427, "mandatori": [181, 386, 396, 409, 472, 493], "mandatory_keyword": 488, "mani": [87, 91, 322, 383, 384, 386, 388, 390, 392, 395, 397, 398, 399, 400, 403, 404, 409, 412, 414, 420, 426, 427, 432, 435, 441, 442, 443, 444, 445, 448, 449, 456, 459, 462, 470, 475, 482, 486, 490, 500, 502, 510, 518, 520, 532, 535, 579, 580, 581, 582, 586], "manifest": 393, "manipul": [87, 91, 407, 410, 437, 495, 534], "manner": [448, 449], "manpow": [388, 400], "manual": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 87, 91, 390, 395, 405, 413, 522, 530, 582, 583], "manuel": [436, 439, 440], "map": [6, 15, 16, 23, 26, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 67, 80, 83, 84, 87, 90, 91, 96, 98, 101, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 115, 117, 118, 120, 121, 122, 124, 125, 126, 127, 129, 131, 132, 135, 136, 137, 142, 143, 144, 145, 146, 149, 150, 151, 152, 153, 154, 155, 156, 157, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 170, 172, 173, 175, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 193, 194, 195, 196, 197, 199, 200, 201, 203, 204, 205, 206, 207, 208, 209, 210, 223, 226, 227, 234, 236, 239, 241, 250, 252, 254, 263, 264, 266, 268, 274, 275, 276, 278, 279, 287, 292, 332, 370, 371, 376, 378, 380, 382, 383, 384, 386, 390, 394, 395, 396, 397, 398, 399, 402, 403, 404, 405, 406, 407, 410, 412, 416, 420, 424, 425, 427, 428, 429, 430, 431, 432, 435, 436, 437, 439, 440, 441, 443, 444, 445, 446, 449, 450, 451, 453, 454, 456, 459, 460, 461, 462, 466, 467, 470, 471, 472, 473, 474, 476, 477, 478, 481, 482, 484, 485, 486, 489, 493, 496, 497, 498, 499, 500, 502, 503, 506, 507, 510, 517, 518, 521, 522, 526, 528, 529, 530, 531, 532, 538, 540, 541, 542, 543, 546, 577, 580, 581], "map_": [209, 210, 371, 378], "map_4d": 490, "map_analysi": 402, "map_cent": 278, "map_coord": [83, 154, 165, 168], "map_dataset": [395, 479], "map_dataset_empti": 479, "map_dataset_mak": 479, "map_dataset_on_off": 479, "map_edisp": [112, 117], "map_in": [195, 196, 198, 204, 207, 208], "map_out": [106, 111, 153, 154, 160, 165, 168, 195, 196, 198, 204, 207, 208], "map_result": 463, "map_select": [16, 460, 464, 465, 467, 506], "map_typ": [195, 196, 198, 204, 207, 208, 490, 534], "mapax": [149, 150, 151, 152, 155, 156, 157, 159, 162, 164, 166, 167, 432, 435, 437, 490], "mapaxi": [19, 20, 26, 103, 106, 110, 111, 112, 113, 114, 115, 117, 118, 125, 127, 129, 136, 145, 147, 149, 150, 151, 152, 153, 154, 155, 156, 157, 159, 162, 163, 164, 165, 166, 167, 168, 175, 185, 186, 191, 192, 193, 194, 195, 196, 198, 199, 203, 204, 206, 207, 208, 220, 221, 224, 228, 230, 231, 232, 237, 243, 244, 247, 251, 253, 255, 256, 257, 262, 267, 269, 270, 271, 272, 275, 279, 378, 384, 398, 407, 426, 427, 429, 432, 435, 445, 449, 451, 454, 456, 459, 461, 462, 468, 469, 471, 472, 475, 477, 478, 479, 481, 485, 488, 489, 490, 493, 498, 499, 500, 507, 526, 529, 531, 532, 534, 535], "mapcoord": [83, 154, 165, 168, 193, 194, 195, 196, 198, 199, 203, 204, 206, 207, 208, 252, 443, 444, 490, 535, 542], "mapdataset": [98, 99, 101, 104, 106, 109, 110, 111, 113, 114, 115, 116, 118, 119, 120, 124, 129, 132, 135, 142, 143, 144, 145, 146, 170, 171, 172, 175, 176, 180, 181, 234, 376, 379, 396, 398, 404, 405, 425, 426, 427, 428, 429, 430, 431, 432, 435, 449, 450, 451, 463, 464, 468, 469, 470, 472, 473, 475, 476, 478, 479, 486, 487, 489, 491, 492, 498, 506, 507, 520, 522, 529, 532, 581, 583, 584], "mapdataseteventsampl": [93, 109, 429, 430, 431, 438, 449, 451, 471, 472], "mapdatasetmak": [165, 173, 182, 396, 429, 432, 435, 438, 446, 469, 471, 472, 475, 479, 488, 489, 499, 506, 507, 522, 529, 532], "mapdatasetmetadata": [103, 106, 410], "mapdatasetoff": 437, "mapdatasetonoff": [98, 103, 110, 111, 120, 124, 142, 170, 176, 180, 429, 430, 432, 435, 448, 449, 465, 479, 489, 518, 532, 583], "mapdatasetsampl": 396, "mapevalu": [394, 395, 428, 429, 432, 435, 446, 447, 448, 450], "mapeventsampl": [427, 428], "mapfit": [394, 395, 425, 444, 445], "mapgeom": [389, 445, 446], "mapmak": [175, 399, 425, 429, 444], "mapmakerob": [428, 429], "mappabl": 407, "mappanelplott": [404, 587], "mapper": 318, "mappingintstrani": [16, 84, 90, 105, 126], "mappingnamespac": [16, 84, 90, 105, 126], "maps_off": 180, "mar": [400, 422, 447], "march": [390, 392, 422, 424, 445], "marcocirelli": 26, "margin": [101, 102, 106, 111, 116, 119, 194, 196, 206, 208, 226, 250, 266, 394, 491, 539, 583], "marion": [425, 444], "mark": [91, 383, 394, 413], "marker": [102, 103, 106, 110, 111, 454, 456, 459, 461, 463, 469, 476, 477, 478, 482, 508], "markerfacecolor": [103, 106, 110, 111], "markers": [102, 103, 106, 110, 111, 495], "markov": [412, 581], "mask": [83, 87, 91, 99, 102, 103, 106, 110, 111, 124, 128, 129, 131, 132, 133, 135, 153, 154, 160, 165, 168, 170, 172, 177, 178, 179, 180, 181, 183, 193, 194, 195, 196, 198, 201, 203, 204, 206, 207, 208, 217, 219, 226, 250, 266, 395, 411, 429, 431, 432, 433, 435, 438, 444, 446, 447, 448, 449, 451, 453, 454, 456, 467, 469, 489, 492, 496, 499, 502, 518, 529, 531, 534, 581], "mask_1": 494, "mask_2": 494, "mask_bright": 484, "mask_contains_region": 208, "mask_data": 491, "mask_energi": [485, 491], "mask_fit": [102, 103, 106, 110, 111, 116, 119, 395, 429, 446, 461, 465, 467, 479, 485, 487, 491, 495, 518], "mask_fit_imag": [103, 106, 110, 111], "mask_imag": [103, 106, 110, 111], "mask_map": [194, 206, 453, 491, 496], "mask_map_catalog": 491, "mask_nearest_posit": [195, 196, 198, 204, 207, 208], "mask_off": 479, "mask_roi": 484, "mask_saf": [102, 103, 106, 107, 110, 111, 181, 395, 429, 485, 489, 491, 518], "mask_safe_edisp": [103, 106, 110, 111, 451], "mask_safe_imag": [103, 106, 110, 111, 153, 154, 160, 165, 168], "mask_safe_psf": [103, 106, 110, 111], "mask_spac": 485, "mask_valid": 102, "masked_ev": 83, "maskedarrai": [87, 91], "maskedcolumn": [87, 91], "mass": [19, 20, 26, 52, 396, 431, 450, 483, 510, 543], "massdm": [19, 20, 483], "master": [389, 390, 397, 413, 414, 423], "match": [87, 91, 109, 114, 193, 194, 196, 199, 200, 201, 203, 206, 208, 210, 291, 293, 383, 391, 443, 445, 450, 459, 462, 478, 486, 498, 517, 534], "match_by_nam": 201, "materi": 412, "math": [236, 382], "mathcal": [487, 518], "mathemat": [493, 495], "mathieu": [435, 438], "mathrm": [19, 20, 23, 103, 110, 155, 483, 487, 518, 583, 585], "mathworld": [337, 338], "matomo": 451, "matplotlib": [19, 20, 26, 66, 67, 83, 131, 149, 152, 155, 156, 157, 162, 163, 164, 165, 166, 167, 168, 195, 196, 198, 204, 207, 208, 211, 220, 221, 222, 223, 224, 225, 227, 228, 230, 231, 232, 233, 236, 237, 238, 239, 240, 241, 242, 243, 244, 247, 251, 252, 253, 254, 255, 256, 257, 258, 262, 263, 264, 265, 267, 268, 269, 270, 271, 272, 274, 275, 277, 278, 279, 280, 361, 371, 372, 373, 376, 377, 378, 380, 382, 383, 384, 397, 400, 409, 417, 420, 427, 435, 437, 454, 455, 456, 457, 459, 460, 461, 462, 463, 464, 465, 467, 468, 469, 470, 471, 472, 473, 475, 476, 477, 478, 479, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 497, 498, 499, 500, 506, 507, 508, 514, 515, 516, 522, 524, 525, 526, 528, 531, 539, 541, 545, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 569, 570, 571, 572, 573, 574, 575, 586], "matric": 211, "matrix": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 112, 117, 152, 153, 154, 157, 211, 212, 213, 217, 226, 250, 291, 293, 376, 400, 401, 411, 445, 446, 449, 451, 487, 488, 518, 520, 526], "matter": [1, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 397, 403, 411, 444, 449, 450, 453, 489, 496, 498, 502, 511, 580, 582], "matthew": [390, 441, 443, 444], "matthia": [443, 444], "mattox": 463, "max": [16, 17, 18, 19, 20, 21, 22, 24, 25, 26, 27, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 83, 87, 88, 91, 103, 113, 114, 128, 130, 132, 167, 171, 175, 177, 181, 208, 216, 217, 218, 219, 220, 221, 223, 224, 226, 227, 228, 230, 231, 232, 233, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 247, 250, 251, 253, 254, 255, 256, 257, 258, 262, 263, 264, 265, 267, 269, 270, 271, 272, 275, 277, 278, 279, 281, 338, 391, 399, 406, 411, 420, 431, 432, 433, 435, 437, 449, 451, 455, 456, 459, 460, 461, 462, 464, 465, 467, 468, 469, 470, 473, 475, 476, 477, 478, 479, 481, 482, 484, 485, 487, 488, 489, 490, 491, 493, 494, 495, 498, 499, 506, 507, 508, 510, 529, 531, 532, 539, 558, 561, 567, 584], "max_ag": [45, 512], "max_column": [87, 91], "max_energi": 482, "max_lin": [87, 91], "max_nit": [135, 451], "max_offset": 399, "max_percentil": 83, "max_radiu": [163, 165, 168, 206, 498], "max_region_numb": [178, 531], "max_width": [87, 91], "maxcal": 213, "maxclust": 308, "maxfev": 487, "maxim": [45, 82, 91, 113, 114, 135, 181, 223, 227, 236, 239, 252, 263, 264, 268, 274, 278, 412, 447, 448, 449, 450, 451, 531], "maxima": [143, 217, 219], "maximilian": [435, 437, 438, 447, 448, 449, 450, 451], "maximum": [19, 20, 45, 46, 47, 83, 87, 91, 100, 125, 127, 130, 165, 168, 170, 178, 181, 187, 190, 194, 200, 205, 206, 216, 218, 220, 223, 224, 226, 227, 228, 230, 231, 232, 233, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 247, 250, 254, 255, 256, 257, 258, 262, 263, 264, 265, 267, 270, 271, 272, 277, 278, 291, 293, 337, 339, 342, 380, 386, 389, 397, 437, 457, 463, 482, 486, 489, 490, 495, 499, 507, 512, 520, 531, 558, 580, 581, 584], "maximum_likelihood": 412, "maxmimum": 281, "maxwellian": 32, "mayb": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 383, 391, 393, 394, 405], "mb": [193, 194, 203, 206, 391, 416, 418, 453, 458, 466, 474, 480, 496, 497, 498, 500, 501, 503, 505, 509, 537, 547, 568, 578], "mbox": [103, 110], "mc": 401, "mc_id": [83, 393, 396, 437, 471, 497], "mcerp": 401, "mckee": [53, 450], "mcmc": [401, 403, 412, 425, 430, 432, 558, 581], "mcmc_sampl": [403, 427], "md": [386, 403, 409], "mdm": [26, 483], "mean": [42, 68, 87, 91, 96, 102, 103, 129, 131, 152, 153, 154, 157, 160, 165, 168, 235, 237, 241, 277, 292, 296, 309, 328, 383, 384, 386, 388, 390, 396, 397, 399, 400, 406, 411, 412, 417, 420, 432, 441, 459, 462, 463, 472, 482, 486, 487, 489, 493, 494, 495, 498, 499, 508, 540, 555, 582, 583], "meaning": 493, "meant": [389, 449, 454, 462, 464, 467, 469, 475, 478, 497], "measur": [27, 67, 102, 106, 111, 131, 136, 145, 200, 283, 291, 293, 296, 297, 298, 299, 301, 303, 304, 306, 307, 389, 397, 402, 407, 414, 423, 428, 436, 442, 444, 455, 456, 459, 461, 462, 465, 468, 470, 473, 475, 476, 477, 482, 484, 498, 507, 508, 520, 527, 529, 532, 580, 581, 584, 585], "mechan": [391, 401, 407, 410], "media": 409, "median": [83, 165, 168, 412, 420, 479, 494, 498], "median_zenith": 494, "medium": [45, 52, 383, 392], "meeseeksdev": 383, "meeseeksmachin": 383, "meet": [226, 250, 310, 389, 391, 403, 408, 414], "megabyt": [193, 194, 203, 206], "mem": [453, 458, 466, 474, 480, 496, 501, 503, 505, 509, 537, 547, 568, 578], "member": [83, 384, 388, 397, 409, 410, 443, 449, 486, 497, 500], "memo": [152, 200], "memori": [87, 88, 91, 92, 100, 103, 104, 106, 109, 110, 111, 193, 194, 203, 206, 274, 276, 278, 361, 383, 393, 395, 396, 399, 405, 407, 429, 435, 450, 462, 475, 522], "memoryobserv": 88, "mender": [448, 449, 450], "mention": [59, 147, 383, 384, 386, 390, 391, 395, 397, 400, 402, 403, 408, 409, 413, 414, 488, 492, 493, 495, 510, 581], "mentor": [386, 403], "mere": 393, "merg": [67, 86, 87, 91, 197, 200, 226, 250, 350, 383, 386, 387, 388, 389, 396, 397, 398, 402, 403, 408, 409, 413, 414, 424, 425, 426, 427, 428, 429, 430, 431, 432, 440, 441, 442, 443, 444, 445], "merge_equ": 86, "mergesort": [87, 91], "mess": 384, "messag": [102, 212, 214, 215, 386, 397, 399, 406, 412, 433, 448, 456, 457, 459, 460, 461, 467, 468, 469, 478, 479, 481, 486, 487, 498, 506, 507, 522, 582], "met": [86, 364, 449, 477, 481, 581], "met_start": 86, "met_stop": 86, "meta": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 83, 85, 87, 88, 91, 94, 100, 103, 104, 106, 108, 109, 110, 111, 125, 127, 149, 150, 151, 152, 155, 156, 157, 159, 162, 164, 166, 167, 175, 182, 195, 196, 198, 204, 207, 208, 274, 275, 278, 279, 320, 364, 365, 366, 367, 393, 396, 397, 398, 407, 410, 413, 431, 432, 443, 447, 449, 450, 471, 479, 490, 494, 497, 499, 519, 520, 577], "meta_t": [100, 102, 103, 106, 110, 111, 175, 182, 407, 410, 432, 456, 462, 489, 518], "metaattribut": [87, 91], "metadata": [16, 83, 84, 85, 87, 88, 90, 91, 105, 107, 125, 126, 127, 149, 150, 151, 155, 156, 159, 162, 164, 166, 167, 195, 196, 198, 204, 207, 208, 365, 387, 389, 400, 450, 460, 464, 465, 467, 471, 493, 506, 538, 539, 540, 541, 542, 543, 544, 545, 546, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 569, 570, 571, 572, 573, 574, 575, 576, 577], "metadata_fits_export_kei": [84, 90, 105, 126], "metadatabas": 410, "metadatabasemodel": 410, "metapackag": 400, "method": [6, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 50, 51, 52, 53, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 120, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 143, 145, 146, 147, 149, 150, 151, 152, 153, 154, 155, 156, 157, 159, 160, 162, 163, 164, 165, 166, 167, 168, 170, 171, 172, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 274, 275, 276, 277, 278, 279, 280, 281, 291, 293, 299, 301, 308, 318, 322, 326, 330, 331, 332, 357, 370, 372, 382, 383, 386, 389, 392, 393, 394, 397, 398, 399, 401, 402, 403, 405, 407, 409, 410, 412, 416, 420, 421, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 435, 437, 438, 440, 441, 442, 443, 444, 445, 446, 449, 450, 451, 454, 456, 457, 459, 460, 461, 463, 464, 465, 467, 468, 469, 470, 471, 472, 475, 477, 479, 481, 483, 484, 485, 486, 487, 488, 489, 491, 492, 493, 494, 495, 497, 498, 499, 500, 506, 507, 508, 517, 519, 521, 522, 526, 529, 531, 532, 533, 535, 556, 570, 579, 580, 581, 582, 584], "method_kwarg": [330, 331], "methoda": 427, "metric": 308, "metropoli": 412, "mev": [74, 83, 149, 150, 151, 155, 272, 454, 455, 462, 464, 467, 469, 475, 478, 479, 484, 488, 490, 493, 497, 498, 508, 567], "meval": 541, "mexico": 499, "meyer": [247, 283, 468, 581], "meyer2010": 581, "mgtime": 398, "michael": [448, 450], "michel": 451, "mid": [113, 438, 449, 497], "middl": [372, 399], "midli": 459, "midpoint": 88, "might": [13, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 183, 200, 213, 383, 388, 394, 395, 397, 400, 402, 407, 409, 410, 412, 413, 416, 418, 425, 459, 477, 479, 485, 489, 491, 498, 499, 502, 508, 510, 518, 522, 529, 535, 582, 584], "migra": [103, 106, 110, 111, 154, 157, 162, 186, 399, 471, 472, 488, 527], "migra_axi": [103, 106, 110, 111, 115, 154, 156, 157, 471, 472, 488, 489], "migrad": [102, 213, 456, 457, 459, 460, 461, 467, 468, 469, 479, 481, 486, 487, 498, 506, 507], "migrad_opt": [213, 487], "migrat": [103, 106, 110, 111, 115, 156, 157, 162, 392, 428, 435, 444, 467, 471, 489, 526, 527], "milagro": [97, 374], "mileston": [392, 413], "milki": [33, 38, 423, 512], "miller": [87, 91], "million": [383, 410], "min": [16, 17, 18, 19, 20, 21, 22, 24, 25, 26, 27, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 83, 91, 103, 128, 130, 132, 147, 175, 216, 217, 218, 219, 220, 221, 223, 224, 226, 227, 228, 230, 231, 232, 233, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 247, 250, 251, 253, 254, 255, 256, 257, 258, 262, 263, 264, 265, 267, 269, 270, 271, 272, 275, 277, 278, 279, 281, 297, 338, 398, 399, 406, 411, 420, 435, 443, 451, 455, 456, 459, 460, 461, 462, 464, 465, 467, 468, 469, 470, 473, 475, 476, 477, 478, 479, 481, 482, 484, 485, 487, 488, 489, 490, 493, 494, 495, 498, 506, 507, 508, 510, 531, 558, 561, 567], "min_count": 172, "min_dist": [143, 144, 178, 463, 469, 531], "min_distance_input": [178, 531], "min_energi": 482, "min_npix": [153, 154, 160, 165, 168, 206, 208], "min_npred_background": 172, "min_num_live_point": 412, "min_pix": 451, "min_signific": 398, "min_significance_lc": 398, "minaya": 445, "mind": [386, 403, 475, 487], "mini": 403, "miniconda": 415, "minim": [19, 20, 26, 113, 114, 134, 195, 196, 198, 203, 204, 207, 208, 209, 213, 220, 221, 223, 224, 227, 228, 230, 231, 232, 236, 237, 239, 243, 244, 247, 251, 252, 253, 254, 255, 262, 263, 264, 266, 267, 268, 269, 270, 271, 272, 274, 275, 278, 279, 289, 395, 398, 406, 410, 412, 437, 447, 449, 454, 471, 485, 487, 495, 507, 522, 531, 532, 535, 580, 585], "minima": [217, 219, 412, 495], "minimis": [478, 494], "minimmum": [153, 154, 160, 165, 168, 206, 208], "minimum": [19, 20, 26, 47, 83, 100, 124, 125, 127, 130, 134, 139, 143, 144, 147, 148, 170, 172, 178, 200, 203, 205, 215, 216, 218, 220, 221, 223, 224, 226, 227, 228, 230, 231, 232, 233, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 247, 250, 251, 253, 254, 255, 256, 257, 258, 262, 263, 264, 265, 267, 269, 270, 271, 272, 275, 277, 278, 279, 281, 285, 290, 294, 297, 310, 337, 339, 342, 378, 400, 412, 437, 443, 459, 463, 471, 486, 487, 490, 495, 498, 520, 522, 531, 558, 585], "mino": [213, 487], "minor": [383, 388, 403, 406, 408, 434, 447, 540, 541], "minos_contour": [427, 445], "minu": [157, 479], "minuit": [102, 122, 213, 214, 215, 289, 394, 401, 429, 444, 445, 449, 456, 457, 459, 460, 461, 467, 468, 469, 479, 481, 486, 487, 498, 506, 507], "minuit_opt": 487, "minut": [403, 414, 443, 459, 463, 465, 467, 469, 470, 471, 473, 475, 477, 478, 481, 483, 485, 487, 489, 492, 495, 506], "mireia": [446, 451], "mirror": 192, "misc": [423, 436, 440, 441, 442], "miss": [82, 87, 91, 149, 150, 151, 152, 155, 156, 157, 159, 162, 164, 166, 167, 175, 383, 386, 391, 392, 393, 394, 397, 403, 404, 407, 433, 435, 437, 443, 448, 451, 490], "mission": [83, 449, 581], "mistak": [388, 408], "mix": [382, 383, 399, 485, 490], "mixin": [87, 91], "mjd": [86, 94, 127, 225, 233, 238, 240, 241, 242, 258, 265, 277, 280, 365, 367, 384, 448, 449, 463, 471, 472, 476, 477, 478, 481, 482, 490, 493, 519, 570, 571, 572, 573, 574, 575, 576, 577, 586], "mjdref": [463, 490], "mjdreff": [94, 364, 367, 472], "mjdrefi": [94, 364, 367, 472], "mkdir": [399, 459, 460, 467, 468, 471, 506, 507], "mkn": [508, 581], "mkn_421_3fhl": 508, "mncontour": 213, "mnra": [139, 306], "mnt": 446, "mock": 470, "mock_dl4": 470, "mode": [16, 84, 85, 87, 90, 91, 94, 103, 105, 106, 110, 126, 130, 153, 154, 160, 165, 168, 171, 194, 195, 196, 198, 199, 200, 203, 204, 206, 207, 208, 276, 410, 412, 430, 443, 446, 450, 478], "model": [1, 6, 15, 16, 18, 19, 20, 26, 28, 29, 30, 31, 32, 35, 36, 37, 38, 39, 40, 45, 50, 51, 52, 53, 54, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 84, 88, 90, 93, 99, 100, 102, 103, 104, 105, 106, 109, 110, 111, 114, 116, 119, 120, 122, 124, 125, 126, 127, 128, 129, 132, 133, 134, 135, 136, 137, 142, 145, 146, 149, 155, 156, 163, 164, 165, 166, 168, 172, 175, 188, 195, 196, 198, 204, 207, 208, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 249, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 302, 305, 307, 379, 382, 383, 384, 387, 388, 389, 395, 396, 398, 399, 401, 403, 404, 407, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 435, 436, 437, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 453, 454, 457, 462, 463, 465, 470, 473, 475, 479, 486, 488, 489, 490, 491, 496, 498, 499, 502, 510, 511, 517, 518, 520, 522, 523, 527, 529, 530, 537, 547, 568, 578, 580, 581, 584, 585], "model1": [221, 548, 550, 554, 557, 559, 562], "model2": [221, 455, 478, 548, 550, 554, 557, 559, 562], "model_1d": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 460], "model_2d": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40], "model_3d": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40], "model_add": [493, 550], "model_best": 455, "model_best_joint": 459, "model_best_stack": 459, "model_bin_": 481, "model_bin_0": 481, "model_bkg": 485, "model_computed_field": [16, 84, 90, 105, 126], "model_config": [16, 84, 90, 105, 126, 464, 506], "model_constraint": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40], "model_construct": [16, 84, 90, 105, 126], "model_copi": [16, 84, 90, 105, 126, 467, 493], "model_dump": [16, 84, 90, 105, 126], "model_dump_json": [16, 84, 90, 105, 126], "model_extra": [16, 84, 90, 105, 126], "model_field": [16, 84, 90, 105, 126], "model_fields_set": [16, 84, 90, 105, 126], "model_fit": 478, "model_in_bin": 481, "model_joint": 467, "model_json_schema": [16, 84, 90, 105, 126], "model_manag": [453, 492, 496], "model_nam": [103, 106, 110, 111, 226, 250, 379, 485], "model_parametrized_nam": [16, 84, 90, 105, 126], "model_plot": 470, "model_post_init": [16, 84, 90, 105, 126], "model_prior": 495, "model_read": 495, "model_rebuild": [16, 84, 90, 105, 126], "model_set_axi": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40], "model_simu": [462, 475, 478], "model_spectrum": 493, "model_str": 460, "model_typ": [226, 234, 248, 250, 266, 276, 289, 406, 492], "model_valid": [16, 84, 90, 105, 126], "model_validate_json": [16, 84, 90, 105, 126], "model_validate_str": [16, 84, 90, 105, 126], "model_weak": 495, "model_weak_prior": 495, "model_without_nam": 493, "modelbas": [234, 259, 266, 268, 269, 276, 280, 411], "modeldm": [19, 20], "modelevalu": 394, "modeling_2d": [453, 464, 466], "modelmetadata": 410, "modelmodel_dump": [16, 84, 90, 105, 126], "modelmodel_dump_json": [16, 84, 90, 105, 126], "models_3fhl": 492, "models_4fgl_roi": 484, "models_as_dict": [16, 84, 90, 105, 126], "models_diffus": 471, "models_fil": [16, 460, 464, 465, 467, 506], "models_fit": 475, "models_gc": 492, "models_gp": 497, "models_joint": 467, "models_or": 492, "models_read": 493, "models_select": 492, "models_stack": 467, "models_yaml": 493, "modelsmetadata": 410, "modern": [87, 91, 401], "modernis": [400, 429], "modest": [383, 540], "modif": [16, 84, 87, 90, 91, 105, 126, 383, 386, 405, 412, 413, 446], "modifi": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 41, 87, 91, 93, 103, 110, 127, 128, 129, 132, 135, 171, 213, 330, 355, 380, 393, 395, 399, 405, 409, 410, 412, 430, 432, 433, 435, 437, 445, 448, 449, 451, 455, 460, 472, 489, 491, 495, 499, 506, 520, 535, 586], "modul": [6, 265, 383, 384, 388, 392, 399, 404, 423, 425, 431, 443, 478, 484, 486, 489, 492, 510, 511, 512, 513, 558, 575, 586], "modular": 389, "mohanti": 102, "mohrmann": [399, 424, 425, 426, 442, 443, 444, 447, 449, 451, 581], "mohrmann2019": 581, "moment": [15, 51, 54, 86, 95, 266, 359, 389, 397, 399, 400, 403, 408, 409, 488, 490, 527], "moncar": [213, 487], "monitor": [396, 497, 522], "monkei": 383, "mono": 391, "monoton": 200, "mont": [401, 412, 527, 581], "montecarlo": [104, 109, 213], "month": [78, 386, 392, 397, 400, 402, 403, 408, 413, 417, 423, 424, 425, 426, 427, 436, 439, 440, 441, 442, 443, 444, 445], "monthli": [392, 410, 416, 445], "moor": 24, "morcuend": [445, 448, 450, 451], "more": [19, 20, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 71, 74, 75, 78, 87, 91, 99, 100, 102, 103, 106, 110, 111, 136, 143, 145, 152, 181, 195, 196, 198, 207, 208, 220, 221, 222, 223, 224, 225, 227, 228, 230, 232, 233, 236, 237, 238, 239, 240, 241, 242, 244, 251, 252, 253, 254, 255, 257, 258, 263, 264, 265, 267, 270, 271, 272, 278, 279, 294, 300, 318, 358, 383, 384, 386, 388, 389, 390, 392, 393, 394, 395, 396, 397, 398, 399, 400, 402, 403, 404, 407, 408, 409, 410, 411, 412, 414, 415, 416, 417, 420, 429, 430, 431, 432, 435, 442, 444, 445, 449, 451, 455, 456, 459, 461, 463, 465, 467, 471, 472, 478, 481, 482, 483, 485, 487, 489, 490, 491, 492, 493, 494, 495, 499, 500, 502, 508, 518, 519, 520, 522, 531, 532, 534, 535, 540, 579, 580, 582, 584, 586], "moreov": [399, 484, 489, 518], "morpholog": [122, 396, 453, 474, 502], "morphologi": [50, 52, 122, 394, 396, 406, 423, 440, 442, 456, 464, 470, 471, 472, 475, 484, 489, 536], "mosaic": 389, "most": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 77, 83, 87, 91, 95, 120, 127, 382, 383, 384, 386, 388, 389, 390, 391, 394, 395, 396, 397, 399, 400, 401, 402, 403, 405, 406, 407, 408, 409, 410, 412, 414, 416, 417, 435, 442, 443, 445, 446, 449, 450, 464, 465, 473, 476, 478, 484, 486, 487, 488, 489, 490, 491, 497, 498, 502, 508, 510, 520, 521, 522, 527, 529, 535, 579, 581, 582, 585], "mostli": [56, 69, 310, 383, 384, 389, 390, 391, 392, 397, 399, 402, 403, 404, 407, 408, 410, 414, 435, 443, 484, 489, 500, 508, 584, 586], "motion": [45, 314], "motiv": [181, 388, 390, 391, 397, 400, 402, 413, 493, 522], "move": [289, 388, 389, 390, 391, 394, 397, 402, 403, 404, 407, 413, 419, 425, 426, 428, 429, 430, 431, 435, 436, 440, 441, 443, 444, 445, 446, 462], "move_axi": 449, "movement": 409, "mpatch": 473, "mpg": 67, "mpi": [67, 412], "mpl": 383, "mpl_check_plot": 383, "mpl_kwarg": [459, 469, 473], "mpl_normal": [373, 374], "mpl_plot_check": 383, "mpl_style": 443, "msg": [454, 462, 464, 467, 469, 475, 478, 497], "msh": [465, 484, 489], "msh15": 500, "mst": 497, "mu": [26, 235, 291, 293, 294, 376, 411, 455, 483, 495, 526, 527, 584], "mu_": [294, 300, 583, 584, 585], "mu_background": 582, "mu_bkg": [106, 111, 291, 304, 307, 420, 582, 584], "mu_off": 584, "mu_on": [294, 300, 584], "mu_sig": [293, 304, 307, 465, 583, 584], "mu_x": 584, "much": [196, 383, 389, 394, 397, 399, 402, 403, 412, 428, 435, 462, 467, 473, 479, 495, 498, 508, 541], "mul": [26, 455, 483, 493, 548, 554, 557, 559, 562, 567], "mulitpli": [235, 245, 259, 281], "multi": [87, 91, 194, 206, 392, 397, 411, 429, 432, 436, 443, 453, 457, 463, 474, 485, 487, 488, 493, 494, 498, 502, 520, 522, 534, 580, 581], "multicompon": 451, "multidimension": [389, 399, 411, 450, 486, 502, 527, 580], "multinorm": 401, "multipl": [19, 20, 26, 82, 87, 91, 92, 100, 102, 103, 106, 109, 110, 111, 114, 116, 119, 135, 143, 169, 195, 196, 198, 204, 207, 208, 213, 220, 221, 222, 223, 224, 225, 226, 227, 228, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 247, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 274, 275, 276, 277, 278, 279, 280, 281, 383, 384, 389, 392, 395, 396, 397, 399, 401, 404, 405, 407, 411, 412, 416, 425, 432, 433, 435, 443, 449, 450, 451, 461, 467, 477, 484, 485, 486, 489, 490, 491, 493, 498, 520, 534, 558, 567, 579, 580, 581, 582, 587], "multipli": [19, 20, 26, 127, 220, 221, 223, 224, 226, 227, 228, 230, 231, 232, 236, 237, 239, 241, 243, 244, 247, 250, 251, 252, 253, 255, 256, 257, 262, 263, 264, 267, 268, 269, 270, 271, 272, 274, 275, 277, 278, 279, 287, 292, 302, 305, 310, 455, 463, 465, 479, 483, 493, 548, 584], "multiprocess": [13, 93, 128, 129, 132, 135, 171, 325, 330, 331, 429, 449, 450], "multithread": 13, "multivari": 401, "multivariategaussianprior": 411, "multiwavelength": 228, "muon": 494, "muoneff": 494, "mur": [26, 483], "must": [19, 20, 26, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 82, 83, 87, 88, 91, 102, 103, 106, 107, 111, 112, 117, 127, 132, 135, 136, 143, 144, 145, 163, 171, 175, 177, 182, 189, 193, 194, 195, 196, 197, 198, 199, 200, 203, 204, 205, 206, 207, 208, 220, 221, 222, 223, 224, 225, 226, 227, 228, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 247, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 274, 275, 276, 277, 278, 279, 280, 281, 298, 299, 310, 328, 378, 383, 388, 394, 395, 398, 407, 408, 409, 410, 412, 454, 459, 464, 477, 485, 486, 489, 491, 492, 493, 497, 498, 507, 508, 522, 534], "mutablemap": 202, "mutablesequ": [92, 100, 250], "mutipl": 416, "mutltipl": 386, "mx6": 481, "my": [383, 405, 406, 412, 415, 471, 472, 485, 493], "my_custom_model": 493, "my_flux_map": 407, "my_ob": 89, "my_obs_filt": 89, "my_sourc": 405, "mybind": [414, 443], "myconfig": [11, 582], "mycustomgaussianmodel": [406, 493], "mycustomprior": 495, "mycustomspectralmodel": [261, 493], "n": [19, 20, 51, 82, 87, 91, 125, 127, 193, 194, 195, 196, 198, 200, 201, 204, 206, 207, 208, 216, 218, 282, 289, 383, 386, 397, 400, 412, 415, 417, 441, 475, 477, 481, 483, 484, 486, 487, 490, 492, 495, 497, 498, 499, 500, 505, 527, 534, 535, 537, 540, 541, 581, 583, 585], "n_": [103, 110, 294, 300, 518, 583, 584, 585], "n_0": [237, 555], "n_bad": 498, "n_bin": 485, "n_bkg": [291, 293, 584], "n_dof": [125, 127, 520], "n_event": [195, 196, 198, 204, 207, 208, 225, 233, 238, 240, 241, 242, 258, 265, 277, 280, 396], "n_event_bunch": [104, 109], "n_events_bkg": 396, "n_fit_bin": [467, 478, 485, 492], "n_free_paramet": 289, "n_input": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 48, 49], "n_ism": [43, 44, 45, 52, 515, 516], "n_job": [16, 93, 128, 129, 132, 135, 171, 330, 449, 460, 463, 464, 465, 467, 473, 477, 489, 506], "n_jobs_default": [93, 128, 129, 132, 135, 171], "n_model": [72, 76], "n_ob": [462, 471, 478], "n_observ": 582, "n_off": [106, 111, 293, 303, 304, 307, 465, 583, 584], "n_off_posit": 461, "n_off_region": [183, 461], "n_on": [291, 293, 294, 300, 303, 304, 307, 420, 465, 582, 583, 584], "n_output": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 48, 49], "n_point": [19, 20, 26, 220, 221, 224, 225, 228, 230, 231, 232, 233, 237, 238, 240, 241, 242, 243, 244, 247, 251, 253, 255, 256, 257, 258, 262, 265, 267, 269, 270, 271, 272, 275, 277, 279, 280, 411, 576], "n_scale": 120, "n_sig": [291, 293, 479, 584], "n_sig_matching_signific": [291, 293], "n_sigma": [71, 74, 75, 78, 124, 125, 126, 127, 128, 129, 132, 133, 134, 135, 289, 291, 293, 454, 463, 473, 477, 484, 485, 486, 506, 508, 520], "n_sigma_sensit": [124, 125, 126, 127], "n_sigma_ul": [71, 74, 75, 78, 124, 125, 126, 127, 128, 129, 132, 133, 135, 463, 473, 476, 477, 484, 485, 486, 506, 508, 520], "n_sourc": [45, 512], "n_spatial_ax": 199, "n_submodel": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40], "n_tel": 91, "n_time_bin": [477, 481], "nachiketa": [441, 442], "naima": [251, 382, 400, 401, 402, 403, 406, 426, 453, 454, 456, 459, 460, 461, 462, 463, 464, 465, 467, 468, 469, 470, 471, 472, 473, 476, 477, 478, 479, 483, 484, 485, 487, 489, 490, 491, 492, 493, 495, 497, 498, 499, 500, 506, 507, 508, 522, 536, 567, 568], "naimamodel": [426, 429, 431], "naimaspectralmodel": [261, 406, 435, 493, 522, 558], "nakashima": 427, "name": [15, 16, 19, 20, 26, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 48, 49, 52, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 90, 91, 94, 96, 99, 100, 101, 102, 103, 105, 106, 107, 108, 110, 111, 112, 116, 117, 118, 119, 125, 126, 127, 128, 129, 132, 133, 135, 139, 147, 149, 150, 151, 152, 153, 154, 155, 156, 157, 159, 160, 162, 163, 164, 165, 166, 167, 168, 175, 176, 185, 186, 191, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 213, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 247, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 274, 275, 276, 277, 278, 279, 280, 281, 289, 308, 309, 331, 362, 363, 378, 384, 386, 389, 392, 393, 395, 396, 397, 398, 401, 402, 405, 406, 407, 409, 410, 411, 412, 413, 416, 418, 425, 426, 427, 428, 429, 430, 431, 432, 435, 444, 446, 447, 449, 451, 454, 455, 456, 457, 459, 460, 461, 462, 463, 464, 465, 467, 468, 469, 470, 471, 472, 473, 475, 476, 477, 478, 479, 481, 484, 485, 486, 487, 488, 489, 490, 492, 493, 494, 495, 497, 498, 499, 500, 506, 507, 508, 510, 520, 522, 526, 529, 531, 532, 534, 535, 536, 538, 539, 540, 541, 542, 543, 544, 545, 546, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 569, 570, 571, 572, 573, 574, 575, 576, 577, 584], "name1": 487, "name2": 487, "name_err": [128, 129, 132, 133], "name_scan": [128, 129, 132, 133], "name_substr": [226, 250, 492], "name_ul": [128, 129, 132, 133], "namedtupl": 383, "nameerror": 383, "namespac": [6, 16, 84, 90, 105, 126, 383, 402, 404, 428, 431, 441, 493, 511, 586], "namibia": 500, "nan": [19, 20, 26, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 67, 87, 91, 103, 125, 127, 138, 175, 193, 194, 195, 196, 198, 204, 207, 208, 216, 218, 220, 221, 224, 228, 230, 231, 232, 237, 243, 244, 247, 251, 253, 255, 256, 257, 262, 267, 269, 270, 271, 272, 275, 279, 383, 406, 411, 451, 455, 456, 459, 460, 461, 462, 464, 465, 467, 468, 473, 475, 476, 477, 478, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 495, 506, 507, 508, 522, 558, 567], "nan_to_num": [100, 103, 106, 110, 111, 153, 154, 160, 165, 168, 196, 204, 208, 276], "nanograv": 522, "nansum": [195, 196, 198, 207, 208], "nasa": [58, 60, 61, 62, 64, 65, 101, 152, 200, 403, 561], "nativ": [87, 91, 201, 395, 400, 435, 490], "natur": [87, 91, 383, 389, 406, 409, 493, 556], "nauroi": [307, 581], "naurois2012": 581, "navarro": 510, "navi": 455, "navig": [443, 445], "naxi": 490, "naxis1": 490, "naxis2": 490, "naxis3": 490, "naxis4": 490, "nbin": [16, 112, 117, 129, 155, 157, 163, 165, 197, 200, 205, 208, 342, 343, 399, 454, 459, 460, 461, 464, 465, 467, 468, 469, 471, 472, 473, 476, 477, 479, 481, 485, 488, 489, 490, 493, 498, 499, 500, 506, 526, 529, 531, 532, 535], "nbin_per_decad": 200, "nbstripout": 391, "ncall": 412, "nchunk": 292, "ncol": [149, 150, 195, 196, 198, 204, 207, 208, 376, 380, 456, 459, 463, 465, 467, 469, 479, 485, 487, 490, 491, 531, 548], "ncp": 482, "nd": [195, 196, 198, 204, 207, 208, 274, 275, 404, 490, 535], "ndarrai": [17, 18, 21, 22, 24, 25, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 87, 91, 92, 102, 120, 149, 150, 151, 152, 153, 156, 157, 159, 162, 163, 164, 165, 166, 168, 181, 193, 194, 195, 196, 197, 198, 199, 200, 201, 203, 204, 205, 206, 207, 208, 211, 212, 216, 217, 218, 219, 226, 252, 253, 279, 290, 291, 292, 293, 294, 295, 296, 298, 299, 300, 301, 302, 305, 306, 307, 310, 321, 322, 323, 332, 337, 339, 372, 376, 377, 383, 485, 490, 508, 534, 535], "nddata": [426, 429], "nddataarrai": [427, 441, 442], "ndecad": [17, 18, 21, 22, 23, 24, 25, 27, 285], "ndim": [103, 110, 112, 117, 150, 152, 155, 194, 201, 206, 461, 464, 469, 473, 485, 486, 488, 489, 490, 497, 498, 508, 520, 535], "ndimag": [208, 397], "ndmap": 486, "ndmin": 310, "ne": 395, "nearest": [26, 135, 149, 150, 151, 152, 155, 156, 157, 159, 162, 164, 166, 167, 175, 195, 196, 198, 200, 204, 207, 208, 322, 437, 444, 446, 490, 520, 522, 534], "nearli": [383, 435, 456], "nebula": [50, 283, 289, 429, 459, 460, 461, 465, 468, 469, 470, 476, 487, 491, 493, 495, 498, 499, 500, 506, 507, 508, 513, 535, 581], "necess": [407, 495], "necessari": [16, 84, 90, 102, 105, 126, 386, 393, 398, 409, 413, 437, 456, 459, 461, 462, 465, 471, 472, 475, 477, 478, 486, 489, 490, 492, 493, 507, 518, 519, 522], "necessarili": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 82, 398, 464], "need": [11, 16, 19, 20, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 84, 85, 87, 89, 90, 91, 94, 102, 103, 105, 106, 110, 111, 124, 126, 127, 153, 154, 165, 167, 168, 203, 282, 283, 310, 382, 383, 384, 388, 389, 390, 391, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 405, 407, 408, 409, 410, 412, 414, 415, 420, 424, 425, 426, 443, 445, 450, 455, 456, 460, 462, 463, 464, 465, 469, 471, 472, 477, 478, 481, 482, 487, 488, 490, 491, 492, 493, 494, 497, 499, 506, 508, 518, 531, 533, 534, 582, 586], "need_upd": 435, "neg": [19, 20, 26, 87, 91, 125, 127, 128, 129, 132, 133, 135, 220, 221, 224, 228, 230, 231, 232, 237, 243, 244, 247, 251, 253, 255, 256, 257, 262, 267, 269, 270, 271, 272, 275, 278, 279, 291, 293, 384, 432, 450, 451, 495, 520, 584, 585], "neglect": [130, 181, 454, 489, 520, 585], "neighbor": [156, 164, 166, 437, 444], "neighbour": [322, 543], "neither": [96, 181, 400, 408], "neldermead": 213, "nep": [388, 408], "neraest": 196, "nest": [15, 194, 195, 196, 251, 289, 310, 350, 387, 449, 498, 533, 584], "nested_model": 251, "nestedsampl": 412, "net": [26, 87, 91, 459, 522], "neutrino": [52, 383], "neutron": 36, "never": [380, 382, 383, 386, 389, 393, 397, 405, 412, 499], "nevertheless": [416, 418], "new": [16, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 82, 83, 84, 86, 87, 88, 90, 91, 92, 102, 103, 105, 106, 110, 111, 125, 126, 127, 128, 132, 135, 138, 147, 149, 150, 151, 152, 155, 157, 159, 162, 167, 178, 179, 183, 193, 194, 195, 196, 197, 198, 199, 200, 201, 203, 204, 205, 206, 207, 208, 226, 250, 266, 276, 301, 310, 334, 361, 368, 386, 388, 389, 390, 391, 392, 393, 395, 396, 397, 400, 401, 402, 403, 404, 405, 406, 408, 409, 410, 412, 413, 414, 415, 416, 418, 419, 420, 421, 422, 423, 436, 439, 467, 481, 482, 484, 485, 490, 492, 493, 519, 520, 522, 567, 581], "new_attribut": 383, "new_axi": 147, "new_dataset_nam": [226, 250], "new_datasets_nam": [19, 20, 26, 220, 221, 222, 223, 224, 225, 227, 228, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 247, 249, 251, 252, 253, 254, 255, 256, 257, 258, 259, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 274, 275, 276, 277, 278, 279, 280, 281], "new_ev": 522, "new_flux_map": 407, "new_funct": 383, "new_input": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40], "new_model": 567, "new_nam": [87, 91, 193, 194, 195, 196, 198, 199, 200, 203, 204, 206, 207, 208], "new_ob": [88, 522], "new_observ": 92, "newaxi": 534, "newer": [400, 414, 425, 444], "newli": [429, 430, 431], "next": [87, 91, 103, 383, 384, 388, 399, 403, 404, 408, 411, 413, 441, 442, 454, 467, 470, 471, 473, 475, 484, 485, 486, 489, 490, 493, 494, 495, 498], "nfcn": 487, "nfev": [102, 213, 214, 215, 456, 457, 459, 460, 461, 467, 468, 469, 479, 481, 486, 487, 498, 506, 507], "nfw": [25, 27, 510], "nfwprofil": 483, "ni": 383, "nice": [383, 388, 394, 400, 402, 410, 427, 435, 463, 467, 484, 582], "nicer": [383, 420, 508], "nieto": [432, 435, 437, 438, 446, 448, 449, 450, 451], "nieva": [446, 451], "night": [398, 477], "nightli": [416, 476], "nightwise_lc": 476, "nigro": [432, 435, 437, 443, 444, 446, 449], "niter": [125, 127, 135, 412, 463], "nmcid": 438, "nn": 499, "noah": [411, 450], "node": [19, 20, 26, 165, 168, 197, 200, 220, 221, 224, 228, 230, 231, 232, 237, 243, 244, 247, 251, 252, 253, 255, 256, 257, 262, 267, 269, 270, 271, 272, 275, 279, 426, 487, 488, 490, 497, 498, 542, 559], "node_typ": [157, 197, 200, 205, 471, 472, 488, 498], "noeth": [432, 433], "nois": [292, 298, 401, 581], "noisi": 497, "non": [16, 84, 87, 90, 91, 100, 103, 105, 106, 110, 111, 116, 119, 125, 126, 127, 135, 149, 150, 151, 152, 153, 154, 155, 156, 157, 159, 160, 162, 164, 165, 166, 167, 168, 177, 181, 193, 194, 195, 196, 198, 199, 200, 201, 203, 204, 205, 206, 207, 208, 276, 310, 373, 374, 376, 378, 389, 394, 397, 401, 403, 404, 410, 412, 425, 429, 430, 431, 435, 443, 446, 447, 449, 450, 451, 456, 481, 498, 502, 518, 522, 533, 534, 558, 581], "none": [16, 17, 19, 20, 21, 22, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 50, 51, 52, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 96, 99, 100, 101, 102, 103, 104, 105, 106, 107, 109, 110, 111, 113, 114, 115, 118, 120, 122, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 138, 142, 145, 147, 149, 150, 151, 152, 153, 154, 155, 156, 157, 159, 160, 162, 163, 164, 165, 166, 167, 168, 170, 171, 172, 175, 177, 178, 179, 180, 181, 182, 183, 185, 186, 187, 188, 190, 191, 192, 193, 194, 195, 196, 198, 199, 200, 201, 202, 203, 204, 206, 207, 208, 209, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 230, 231, 232, 233, 234, 236, 237, 238, 239, 240, 241, 242, 243, 244, 247, 248, 250, 251, 252, 253, 254, 255, 256, 257, 258, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 274, 275, 276, 277, 278, 279, 280, 284, 289, 291, 292, 293, 307, 308, 310, 313, 318, 322, 330, 331, 332, 334, 337, 338, 339, 340, 349, 352, 358, 366, 370, 371, 372, 376, 377, 378, 379, 380, 383, 395, 397, 400, 407, 410, 411, 412, 437, 448, 449, 451, 455, 456, 457, 459, 460, 462, 463, 467, 468, 469, 471, 472, 473, 475, 477, 478, 479, 481, 483, 484, 485, 486, 489, 490, 492, 493, 495, 498, 506, 510, 518, 534, 539, 540, 541, 582], "nonposit": [19, 20, 26, 220, 221, 224, 228, 230, 231, 232, 237, 243, 244, 247, 251, 253, 255, 256, 257, 262, 267, 269, 270, 271, 272, 275, 279], "nonposx": [19, 20, 26, 220, 221, 224, 228, 230, 231, 232, 237, 243, 244, 247, 251, 253, 255, 256, 257, 262, 267, 269, 270, 271, 272, 275, 279, 435], "nonstopmod": 384, "nonzero": 39, "nooverlaperror": 448, "noqa": [19, 20, 152, 188, 199, 200, 206, 228, 380], "nor": [96, 181, 393, 404, 408, 413], "norm": [19, 20, 26, 124, 125, 127, 128, 129, 132, 135, 137, 144, 146, 172, 220, 221, 224, 225, 228, 230, 231, 232, 233, 234, 237, 238, 240, 241, 242, 243, 244, 247, 251, 252, 253, 255, 256, 257, 258, 262, 265, 267, 269, 270, 271, 272, 275, 277, 279, 280, 376, 394, 405, 407, 411, 429, 430, 432, 435, 450, 451, 453, 459, 463, 464, 465, 467, 468, 470, 471, 472, 473, 475, 477, 478, 479, 483, 484, 485, 486, 487, 498, 506, 507, 508, 510, 520, 522, 529, 536, 541, 547, 548, 555, 567, 568, 576, 584], "norm_0": [542, 559], "norm_1": [542, 559], "norm_2": [542, 559], "norm_3": [542, 559], "norm_4": 559, "norm_5": 559, "norm_err": [124, 125, 127, 129, 135, 144, 407, 463, 473, 477, 485, 486, 520], "norm_errn": [125, 127, 477, 484, 486, 508, 520], "norm_errp": [125, 127, 477, 484, 486, 508, 520], "norm_only_chang": 447, "norm_prior": 411, "norm_scan": [125, 407, 459, 460, 486, 520], "norm_sensit": [125, 127], "norm_ul": [125, 127, 407, 473, 477, 484, 485, 486, 508, 520], "norma": [33, 38], "normal": [42, 102, 103, 106, 110, 111, 128, 129, 130, 132, 142, 149, 150, 151, 152, 154, 155, 156, 157, 159, 162, 163, 164, 165, 166, 167, 168, 172, 195, 196, 198, 204, 205, 207, 208, 234, 252, 253, 256, 276, 278, 282, 310, 373, 374, 383, 384, 388, 389, 393, 394, 397, 401, 407, 424, 428, 437, 451, 455, 465, 471, 476, 477, 479, 489, 490, 491, 492, 493, 498, 507, 508, 534, 539, 540, 541, 544, 545, 546, 567, 583, 584], "normalis": [67, 80, 124, 125, 127, 132, 149, 150, 151, 152, 155, 157, 159, 162, 163, 167, 172, 192, 195, 196, 198, 204, 207, 208, 252, 253, 266, 381, 460, 463, 464, 465, 478, 486, 491, 492, 493, 498, 506], "normed_templ": 493, "normspectralmodel": [226, 250, 406, 432, 448, 450, 493, 529], "north": [227, 236, 239, 539], "notat": [432, 524, 526, 532, 585], "note": [15, 16, 19, 20, 26, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 78, 82, 83, 84, 86, 87, 90, 91, 94, 102, 103, 104, 105, 106, 109, 110, 111, 120, 124, 126, 127, 132, 135, 152, 157, 165, 167, 177, 188, 206, 210, 213, 216, 220, 221, 223, 224, 227, 228, 230, 231, 232, 233, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 247, 251, 253, 254, 255, 256, 257, 258, 262, 263, 264, 265, 267, 269, 270, 271, 272, 275, 277, 278, 279, 298, 299, 310, 331, 358, 374, 380, 382, 385, 386, 388, 391, 396, 397, 400, 403, 407, 408, 409, 411, 412, 413, 414, 417, 423, 425, 445, 447, 449, 451, 454, 455, 456, 460, 461, 463, 464, 467, 470, 472, 477, 478, 479, 481, 482, 483, 484, 485, 487, 488, 489, 490, 491, 492, 493, 495, 497, 498, 499, 518, 520, 522, 529, 534, 535, 544, 545, 556, 584, 585, 586], "notebook": [87, 91, 347, 386, 387, 392, 393, 397, 398, 399, 400, 401, 403, 413, 414, 416, 417, 418, 421, 424, 425, 426, 427, 429, 430, 431, 433, 435, 437, 441, 442, 443, 444, 445, 450, 451, 454, 455, 456, 457, 459, 460, 461, 462, 463, 464, 465, 467, 468, 469, 470, 471, 472, 473, 475, 476, 477, 478, 479, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 497, 498, 499, 500, 502, 504, 506, 507, 508, 521, 522, 523, 536, 538, 539, 540, 541, 542, 543, 544, 545, 546, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 569, 570, 571, 572, 573, 574, 575, 576, 577, 582], "noth": [334, 400, 495], "notic": [389, 487, 502], "notimplementederror": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40], "notion": 412, "nov": [390, 395, 400, 401, 403, 407, 422, 446], "novemb": [392, 422, 432, 433, 434, 435], "now": [16, 82, 84, 88, 90, 99, 101, 105, 125, 126, 127, 205, 251, 383, 386, 388, 389, 390, 393, 395, 396, 397, 399, 400, 401, 402, 403, 404, 407, 409, 410, 411, 419, 424, 425, 426, 427, 428, 429, 430, 431, 432, 435, 436, 437, 438, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 454, 455, 456, 459, 460, 461, 462, 464, 465, 467, 468, 470, 471, 472, 473, 475, 476, 477, 478, 479, 481, 485, 487, 490, 491, 492, 493, 494, 495, 497, 498, 499, 500, 506, 507, 508, 519, 520, 531, 569, 573, 574, 575, 582, 584, 585, 586], "np": [83, 87, 91, 103, 106, 110, 111, 112, 117, 120, 124, 127, 135, 154, 195, 196, 198, 204, 207, 208, 213, 282, 383, 384, 394, 395, 398, 406, 407, 411, 412, 420, 446, 451, 454, 462, 463, 465, 471, 473, 475, 477, 478, 479, 481, 482, 483, 484, 486, 487, 488, 489, 490, 491, 493, 494, 495, 514, 515, 516, 520, 522, 529, 534, 535, 539, 540, 542, 567, 575, 582], "npanel": 370, "npix": [194, 203, 206, 207, 208, 459, 469, 488, 498, 531, 535, 538, 542], "npix_max": 194, "npoint": [292, 487], "npred": [103, 106, 110, 111, 124, 125, 127, 128, 129, 132, 133, 135, 144, 276, 295, 394, 395, 396, 405, 407, 423, 425, 432, 435, 441, 443, 451, 463, 471, 473, 477, 484, 485, 486, 495, 498, 518, 520, 584], "npred_background": [103, 106, 110, 111, 125, 127, 432, 461, 462, 473, 485, 520, 584], "npred_background_min": 148, "npred_excess": [124, 125, 127, 129, 135, 137, 144, 146, 463, 465, 473, 477, 479, 486, 520], "npred_excess_err": [125, 127], "npred_excess_errn": [125, 127], "npred_excess_errp": [125, 127], "npred_excess_ref": [125, 127], "npred_excess_ul": [125, 127], "npred_min": 148, "npred_off": [106, 111, 584], "npred_sig": [103, 106, 110, 111, 395], "npred_sign": [103, 106, 110, 111, 379, 435, 449, 485, 584], "npred_signal_min": 148, "npred_sourc": 485, "nrow": [456, 459, 487, 548], "nside": [194, 195, 196, 446, 498, 533], "nside2resol": 196, "nside_til": [194, 196], "nsou": 463, "nstep": 398, "nu": [19, 26], "nu_e": [26, 483], "nu_mu": [26, 483], "nu_tau": [26, 483], "nuisanc": [459, 487, 581, 585], "null": [125, 127, 128, 129, 132, 133, 289, 291, 293, 451, 460, 464, 465, 467, 470, 486, 493, 506, 520, 538, 539, 540, 541, 542, 543, 544, 545, 546, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 569, 570, 571, 572, 573, 574, 575, 576, 577, 584], "null_valu": [133, 289, 473], "nullabl": [87, 91], "num": 83, "numba": 400, "number": [11, 17, 18, 19, 20, 21, 22, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 35, 36, 37, 39, 40, 42, 45, 46, 47, 67, 72, 76, 82, 83, 85, 86, 87, 91, 92, 93, 94, 100, 101, 103, 104, 106, 109, 110, 111, 113, 114, 120, 124, 125, 126, 127, 128, 129, 132, 133, 134, 135, 149, 150, 151, 152, 153, 154, 155, 156, 157, 159, 160, 162, 164, 165, 166, 167, 168, 171, 172, 175, 178, 183, 193, 194, 195, 196, 197, 198, 199, 200, 201, 203, 204, 205, 206, 207, 208, 213, 214, 215, 216, 217, 219, 220, 221, 223, 224, 225, 226, 227, 228, 230, 231, 232, 233, 236, 237, 238, 239, 240, 241, 242, 243, 244, 247, 250, 251, 253, 254, 255, 256, 257, 258, 262, 263, 264, 265, 267, 269, 270, 271, 272, 275, 277, 278, 279, 280, 285, 289, 291, 292, 293, 306, 310, 328, 330, 331, 332, 333, 334, 337, 338, 339, 340, 342, 343, 370, 376, 387, 388, 389, 392, 394, 395, 396, 397, 398, 402, 404, 407, 409, 410, 412, 413, 420, 425, 435, 437, 438, 439, 444, 445, 446, 449, 450, 451, 454, 455, 456, 459, 460, 461, 462, 463, 464, 465, 467, 469, 470, 471, 472, 475, 476, 477, 478, 479, 481, 482, 483, 484, 485, 486, 489, 490, 491, 493, 494, 497, 498, 499, 500, 506, 507, 508, 512, 518, 520, 522, 529, 531, 534, 535, 581, 582, 583, 584, 585], "number_of_column": [87, 91], "number_param": 211, "numer": [17, 18, 19, 20, 21, 22, 24, 25, 26, 27, 87, 91, 127, 200, 216, 220, 221, 223, 224, 227, 228, 230, 231, 232, 233, 236, 237, 238, 239, 240, 241, 242, 243, 244, 247, 251, 253, 254, 255, 256, 257, 258, 262, 263, 264, 265, 267, 269, 270, 271, 272, 275, 277, 278, 279, 280, 310, 382, 383, 396, 401, 417, 435, 454, 462, 464, 467, 469, 475, 478, 490, 497], "numpi": [19, 20, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 83, 87, 91, 92, 102, 112, 117, 120, 127, 149, 150, 151, 152, 154, 155, 156, 157, 159, 162, 163, 164, 166, 167, 193, 194, 195, 196, 198, 203, 204, 206, 207, 208, 210, 211, 213, 216, 217, 219, 220, 223, 224, 226, 227, 228, 230, 231, 232, 233, 236, 237, 238, 239, 240, 241, 242, 243, 244, 247, 250, 254, 255, 256, 257, 258, 262, 263, 264, 265, 266, 267, 270, 271, 272, 277, 278, 291, 293, 310, 334, 339, 377, 382, 383, 384, 386, 390, 394, 396, 400, 401, 402, 409, 411, 420, 421, 428, 429, 432, 440, 441, 442, 444, 446, 447, 448, 450, 451, 454, 456, 459, 460, 461, 462, 463, 464, 465, 467, 468, 469, 470, 471, 472, 473, 475, 476, 477, 478, 479, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 497, 498, 499, 500, 502, 506, 507, 508, 514, 515, 516, 520, 522, 534, 535, 539, 540, 542, 567, 575], "numpoint": [213, 487], "numpy121": 386, "nupeak_ob": 508, "nutshel": 586, "n\u00f6the": [435, 437, 438], "o": [67, 82, 87, 91, 102, 202, 383, 392, 397, 400, 404, 407, 415, 416, 418, 427, 435, 438, 441, 442, 443, 449, 454, 456, 459, 463, 469, 476, 477, 478, 481, 482, 490, 493, 494, 495, 497, 522, 581, 582], "ob": [40, 82, 83, 88, 89, 91, 92, 96, 165, 175, 308, 309, 395, 396, 399, 400, 405, 420, 438, 439, 448, 454, 456, 459, 462, 463, 469, 471, 475, 477, 478, 479, 481, 489, 494, 497, 498, 499, 500, 504, 507, 519, 522, 527, 529, 531, 532], "obei": 534, "obj": [16, 84, 90, 105, 126, 461, 481], "object": [6, 15, 16, 19, 20, 23, 26, 28, 29, 30, 31, 32, 34, 35, 36, 37, 39, 40, 50, 51, 52, 54, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 94, 100, 102, 103, 104, 105, 106, 110, 111, 125, 126, 127, 130, 131, 132, 138, 139, 140, 141, 144, 147, 149, 150, 151, 152, 153, 154, 155, 156, 157, 159, 160, 162, 163, 164, 165, 166, 167, 168, 169, 171, 179, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 274, 275, 276, 277, 278, 279, 280, 281, 289, 291, 293, 310, 314, 318, 319, 322, 330, 332, 334, 340, 343, 357, 358, 359, 360, 365, 370, 376, 378, 379, 380, 389, 394, 395, 396, 397, 398, 399, 401, 402, 403, 404, 407, 409, 410, 412, 416, 420, 426, 427, 429, 430, 431, 432, 435, 437, 442, 443, 444, 446, 449, 450, 451, 454, 455, 456, 457, 459, 460, 461, 462, 463, 468, 470, 473, 475, 476, 477, 478, 481, 482, 485, 487, 489, 490, 491, 492, 493, 495, 497, 498, 499, 500, 506, 507, 508, 512, 517, 518, 519, 520, 528, 531, 533, 534, 535, 567, 579, 581, 582, 586], "obs2": 522, "obs_": 459, "obs_clust": [92, 494], "obs_col": 469, "obs_con": [16, 460, 464, 465, 467, 506], "obs_copi": 88, "obs_fil": [16, 460, 464, 465, 467, 506], "obs_filenam": 499, "obs_filt": [88, 89], "obs_id": [16, 82, 87, 88, 89, 91, 96, 148, 213, 308, 309, 393, 395, 405, 410, 420, 456, 459, 460, 461, 462, 464, 465, 467, 468, 469, 471, 472, 476, 477, 478, 481, 487, 489, 494, 497, 499, 500, 504, 506, 507, 531], "obs_id_uniqu": 87, "obs_index": 82, "obs_info": [90, 105, 410], "obs_list": [443, 445], "obs_list_vela": 479, "obs_mod": 95, "obs_model": 455, "obs_muoneff": 494, "obs_po": [41, 313], "obs_tabl": [82, 91, 96, 308, 309, 437, 469, 471, 477, 481, 489, 494, 497, 499, 500, 504, 507, 531], "obs_table_filenam": 82, "obs_tim": [16, 460, 464, 465, 467, 506], "obs_time_src": 489, "obs_zenith": 494, "obscor": 450, "observ": [6, 15, 16, 41, 82, 83, 85, 86, 87, 89, 90, 91, 93, 94, 95, 96, 102, 103, 104, 105, 106, 109, 110, 111, 113, 114, 118, 165, 170, 171, 172, 175, 176, 177, 178, 180, 181, 182, 185, 186, 187, 188, 190, 191, 192, 225, 228, 233, 238, 240, 241, 242, 258, 265, 277, 280, 294, 300, 307, 309, 318, 339, 387, 389, 395, 396, 397, 398, 399, 403, 405, 407, 410, 416, 425, 429, 430, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 449, 450, 451, 453, 454, 456, 461, 462, 464, 465, 467, 468, 475, 478, 479, 481, 482, 487, 495, 496, 497, 499, 500, 502, 504, 510, 518, 519, 522, 525, 527, 529, 531, 532, 558, 581, 582, 583, 584], "observation_clust": [453, 494, 496], "observation_dead_time_fract": [83, 88], "observation_list": 92, "observation_live_time_dur": [83, 88], "observation_time_dur": [83, 88], "observation_time_start": 83, "observation_time_stop": 83, "observationcheck": 444, "observationcta": 393, "observationeventsampl": 450, "observationfilt": [88, 393, 398, 424, 445], "observationlist": [393, 445], "observationmetadata": 410, "observations_list": 92, "observationsconfig": 16, "observationseventsampl": 450, "observationseventssampl": 451, "observationssummari": 429, "observationstat": [424, 429], "observationt": [82, 396, 397, 446, 494, 499, 507], "observationtablecheck": 444, "observationtablesummari": 441, "observatori": [57, 59, 63, 82, 83, 85, 88, 90, 94, 396, 410, 413, 416, 436, 497, 499, 500, 517, 522], "observatory_earth_loc": [83, 88, 451], "observatory_loc": [410, 437, 454, 462, 471, 472, 475, 478], "obsinfometadata": [90, 105], "obstim": [85, 94, 188, 586], "obtain": [85, 103, 106, 109, 111, 125, 127, 139, 297, 393, 398, 400, 401, 407, 445, 451, 459, 460, 461, 463, 465, 471, 472, 477, 481, 482, 487, 490, 491, 495, 506, 508, 518, 522, 526, 527, 583, 584], "obviou": [395, 402, 403, 404, 410], "obvious": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 510], "occur": [195, 196, 198, 207, 208, 340, 383, 403, 404, 408, 498], "occurr": [92, 100, 199, 217, 219, 226, 250], "oct": [391, 393, 394, 398, 400, 403, 409], "octob": 392, "odd": [206, 208], "odd_npix": [206, 208], "odot": [28, 35, 39, 40, 52], "odvbqrqw": 489, "off": [103, 104, 106, 108, 109, 110, 111, 124, 125, 127, 170, 176, 177, 180, 183, 192, 293, 307, 380, 381, 386, 389, 395, 397, 398, 399, 429, 435, 437, 439, 449, 451, 454, 455, 456, 460, 461, 465, 469, 476, 477, 479, 481, 485, 487, 489, 495, 518, 531, 532, 581, 583, 584, 585], "off_2": [106, 111], "off_ev": 479, "off_patch": 479, "off_phas": [176, 479], "off_phase_rang": 479, "offdatabackgroundmak": 440, "offer": [125, 386, 394, 409, 410, 416, 417, 444, 461, 486, 487, 489, 493, 522], "offici": [409, 523, 582], "offlin": [87, 91], "offset": [83, 96, 113, 114, 149, 150, 151, 152, 155, 156, 157, 159, 162, 164, 165, 166, 167, 168, 171, 175, 181, 182, 187, 190, 195, 196, 198, 200, 204, 207, 208, 383, 389, 397, 420, 429, 439, 441, 443, 448, 449, 450, 451, 454, 461, 462, 464, 467, 468, 469, 475, 479, 488, 489, 494, 497, 500, 507, 519, 527, 529, 532], "offset2": 83, "offset_axi": [155, 156, 157], "offset_band": 83, "offset_from_median": 83, "offset_index": 162, "offset_max": [16, 83, 171, 181, 187, 190, 460, 464, 465, 467, 469, 475, 479, 489, 506, 507, 529, 532], "offset_min": 83, "often": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 139, 283, 373, 374, 383, 388, 397, 398, 399, 401, 442, 454, 456, 460, 464, 465, 468, 469, 475, 481, 485, 487, 489, 491, 506, 507, 518, 522, 581], "ogip": [95, 107, 108, 111, 152, 197, 199, 200, 203, 204, 205, 395, 398, 442, 455, 459, 468, 518, 526, 535], "ogip_column": 204, "ogipdatasetread": 111, "ogipdatasetwrit": [111, 448, 450], "ok": [383, 397, 487], "old": [199, 368, 383, 388, 391, 395, 399, 400, 426, 427, 442, 443, 444, 482], "old_attribut": 383, "older": [390, 400, 417, 442, 484], "oldest": 403, "olga": [440, 441], "olivera": [432, 435, 437, 438, 446, 448, 449, 450, 451], "omega": [19, 20, 23, 265, 282, 497, 539, 575], "omit": [135, 384, 467, 497, 582], "omp": 403, "on_circl": 531, "on_ellipse_annulu": 531, "on_ev": 479, "on_patch": 479, "on_phas": [176, 479], "on_phase_rang": 479, "on_posit": 192, "on_radii": 454, "on_radiu": [469, 479], "on_rectangl": 531, "on_region": [16, 103, 106, 178, 454, 456, 459, 460, 461, 462, 464, 465, 467, 469, 471, 472, 476, 477, 479, 481, 485, 506, 531], "on_region_radiu": [454, 459, 462, 471, 472, 477, 481], "onc": [87, 91, 103, 206, 383, 386, 388, 393, 394, 397, 398, 399, 403, 404, 405, 407, 408, 412, 413, 414, 415, 416, 418, 461, 477, 479, 489, 492, 499, 502, 519, 522, 582], "one": [16, 19, 20, 26, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 59, 70, 84, 87, 89, 90, 91, 92, 93, 95, 99, 103, 105, 106, 109, 110, 111, 114, 120, 124, 125, 126, 127, 128, 129, 130, 132, 133, 135, 137, 138, 143, 146, 149, 150, 151, 152, 153, 154, 155, 156, 157, 159, 160, 162, 163, 164, 165, 166, 167, 168, 171, 175, 177, 193, 194, 195, 196, 197, 198, 199, 200, 203, 204, 205, 206, 207, 208, 213, 220, 221, 222, 223, 224, 225, 226, 227, 228, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 247, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 274, 275, 276, 277, 278, 279, 280, 281, 285, 289, 291, 292, 293, 318, 323, 339, 354, 370, 376, 377, 383, 384, 385, 386, 388, 389, 390, 391, 392, 394, 395, 396, 397, 399, 400, 401, 402, 403, 405, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 443, 446, 447, 449, 451, 454, 456, 459, 460, 461, 464, 467, 471, 476, 478, 479, 482, 484, 485, 487, 488, 489, 490, 491, 492, 493, 495, 497, 498, 499, 506, 507, 508, 517, 518, 519, 520, 522, 527, 529, 531, 534, 535, 541, 579, 580, 582, 583, 584, 585, 586], "ones": [87, 91, 120, 124, 128, 132, 135, 152, 199, 387, 391, 395, 397, 400, 403, 411, 417, 420, 478, 482, 488, 490, 510, 529, 581, 582], "ones_lik": [479, 529], "ongo": [386, 389, 390, 414], "onli": [16, 19, 20, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 70, 72, 74, 79, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 93, 95, 100, 101, 102, 103, 104, 105, 106, 109, 110, 111, 124, 126, 127, 128, 132, 135, 136, 138, 145, 146, 153, 154, 158, 160, 165, 168, 171, 177, 182, 193, 194, 195, 196, 198, 200, 203, 204, 205, 206, 207, 208, 216, 217, 219, 220, 223, 224, 226, 227, 228, 230, 231, 232, 233, 236, 237, 238, 239, 240, 241, 242, 243, 244, 247, 248, 250, 251, 254, 255, 256, 257, 258, 262, 263, 264, 265, 266, 267, 270, 271, 272, 276, 277, 278, 291, 293, 310, 330, 358, 380, 383, 384, 386, 388, 389, 390, 391, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 409, 410, 412, 417, 425, 427, 431, 435, 437, 438, 443, 447, 449, 450, 451, 456, 457, 459, 460, 461, 464, 465, 467, 468, 470, 471, 472, 473, 476, 477, 478, 479, 481, 484, 485, 487, 488, 489, 490, 491, 492, 493, 494, 495, 497, 498, 499, 507, 510, 518, 520, 526, 529, 532, 535, 577, 581, 582, 583, 584], "onlin": [87, 91, 384, 388, 391, 403, 420], "onlinelibrari": [137, 146], "onoff": [438, 518], "onserv": 93, "ontim": [188, 393, 471, 485], "onto": [106, 111, 195, 196, 198, 204, 206, 207, 208, 370, 389, 507, 518, 522, 534, 580], "oo": 409, "op": 399, "opac": 228, "open": [66, 87, 91, 383, 384, 386, 388, 394, 397, 400, 402, 403, 407, 408, 409, 413, 415, 416, 418, 420, 421, 442, 460, 468, 490, 497, 499, 500, 506, 517, 581, 582], "openastronomi": 443, "oper": [87, 91, 194, 206, 221, 383, 389, 394, 397, 430, 432, 435, 444, 445, 449, 455, 485, 492, 493, 534, 535, 548, 550, 554, 557, 559, 562, 567], "opinion": [388, 582], "oppos": [482, 558, 582], "opposit": [195, 196, 412], "opt": [89, 484, 548, 558], "opt_method": 487, "optic": [228, 397, 455, 548], "optim": [19, 20, 26, 102, 133, 135, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 224, 228, 230, 231, 232, 237, 243, 244, 247, 251, 253, 255, 256, 257, 262, 267, 269, 270, 271, 272, 275, 279, 376, 382, 383, 392, 395, 396, 405, 407, 456, 457, 459, 460, 461, 462, 463, 467, 468, 469, 479, 481, 482, 486, 487, 495, 498, 506, 507], "optimis": [19, 20, 213, 214, 215, 216, 220, 223, 224, 227, 228, 230, 231, 232, 233, 236, 237, 238, 239, 240, 241, 242, 243, 244, 247, 254, 255, 256, 257, 258, 262, 263, 264, 265, 267, 270, 271, 272, 277, 278, 397, 399, 401, 444, 451, 520, 579], "optimize_opt": [213, 467, 475, 486, 487, 507], "optimize_result": [213, 214, 449], "optimizeresult": [102, 213, 214, 456, 457, 459, 460, 461, 467, 468, 469, 479, 481, 486, 487, 498, 506, 507], "optin": 409, "optinon": [110, 111], "option": [11, 13, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 45, 46, 47, 67, 71, 72, 74, 75, 76, 77, 78, 79, 80, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 113, 114, 116, 118, 119, 120, 122, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 138, 142, 145, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 159, 160, 162, 163, 164, 165, 166, 167, 168, 171, 175, 176, 177, 178, 179, 182, 183, 185, 186, 187, 188, 189, 190, 191, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 210, 211, 212, 213, 214, 215, 216, 217, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 230, 231, 232, 233, 234, 236, 237, 238, 239, 240, 241, 242, 243, 244, 247, 250, 251, 252, 253, 254, 255, 256, 257, 258, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 274, 275, 276, 277, 278, 279, 280, 282, 283, 285, 287, 289, 290, 291, 292, 293, 297, 298, 299, 301, 306, 307, 308, 310, 321, 331, 334, 337, 338, 339, 340, 342, 343, 346, 351, 352, 354, 365, 366, 370, 371, 372, 377, 378, 379, 380, 383, 386, 388, 389, 391, 392, 394, 395, 397, 399, 401, 403, 406, 410, 412, 414, 415, 416, 417, 418, 424, 425, 426, 429, 431, 432, 435, 437, 441, 443, 444, 445, 446, 448, 449, 450, 451, 463, 467, 475, 476, 478, 484, 485, 489, 490, 491, 493, 494, 497, 498, 506, 507, 518, 520, 522, 534, 535, 577, 581, 582], "option1": 384, "option2": 384, "option3": 384, "option_context": [87, 91], "optionali": 542, "optout": 409, "optpars": 388, "oral": 409, "orang": [384, 459, 467, 473, 476, 479, 483, 486, 495, 531], "orchestr": [389, 393, 395, 399, 460, 506, 507], "orcid": 409, "order": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 82, 87, 91, 94, 100, 101, 102, 103, 106, 127, 138, 149, 150, 152, 153, 154, 155, 156, 157, 160, 162, 165, 167, 168, 171, 175, 182, 185, 186, 191, 193, 194, 195, 196, 198, 199, 203, 204, 205, 206, 207, 208, 276, 289, 310, 380, 383, 384, 389, 394, 395, 397, 398, 399, 400, 407, 408, 409, 411, 412, 425, 426, 427, 428, 429, 430, 431, 432, 435, 451, 459, 460, 461, 463, 467, 468, 471, 479, 484, 487, 488, 489, 490, 493, 499, 506, 507, 508, 533, 534, 535, 582, 585], "ordereddict": [389, 400, 428], "ordinari": 508, "org": [11, 34, 63, 64, 65, 83, 87, 88, 91, 181, 213, 256, 257, 271, 272, 298, 310, 386, 391, 400, 403, 408, 409, 413, 415, 416, 418, 422, 441, 443, 454, 462, 464, 467, 468, 469, 475, 478, 483, 484, 487, 497, 565, 566, 582], "organ": [387, 403, 408, 409, 435, 499, 500, 519, 534], "organis": [390, 399, 402, 409, 443], "orient": [150, 158, 159, 383, 394], "origin": [16, 41, 84, 87, 90, 91, 103, 105, 110, 125, 126, 127, 196, 208, 274, 276, 278, 393, 397, 409, 410, 413, 441, 460, 464, 465, 467, 477, 482, 490, 493, 498, 506, 538, 539, 540, 541, 542, 543, 544, 545, 546, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 569, 570, 571, 572, 573, 574, 575, 576, 577, 585, 586], "orthogon": 343, "oscar": [443, 444], "osx": 431, "other": [13, 16, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 56, 67, 69, 83, 84, 86, 87, 90, 91, 103, 105, 106, 110, 111, 125, 126, 128, 132, 133, 149, 150, 151, 152, 153, 154, 155, 156, 157, 159, 160, 162, 164, 165, 166, 167, 168, 177, 194, 195, 196, 197, 198, 199, 200, 203, 204, 205, 206, 207, 208, 213, 217, 219, 276, 290, 310, 323, 353, 372, 377, 382, 386, 388, 390, 391, 392, 394, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 407, 409, 410, 415, 443, 454, 455, 456, 459, 460, 461, 462, 463, 464, 465, 467, 468, 469, 470, 471, 472, 473, 475, 476, 477, 478, 479, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 495, 497, 498, 499, 500, 506, 507, 508, 518, 519, 520, 522, 527, 529, 531, 535, 550, 579, 580, 582, 586], "other_id": 456, "otherwis": [16, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 82, 84, 87, 90, 91, 103, 105, 106, 110, 111, 126, 163, 202, 206, 208, 210, 216, 217, 218, 219, 226, 250, 281, 310, 376, 396, 406, 409, 451, 492, 493, 498, 549], "oup": [139, 306], "our": [383, 386, 392, 397, 399, 400, 402, 405, 406, 407, 409, 425, 426, 442, 451, 454, 456, 459, 460, 461, 464, 465, 467, 468, 469, 472, 477, 478, 479, 481, 490, 491, 495, 499, 506, 507, 582], "ourself": 508, "out": [11, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 87, 91, 92, 94, 100, 102, 127, 195, 196, 198, 204, 207, 208, 250, 263, 264, 382, 383, 384, 386, 388, 391, 393, 395, 397, 399, 401, 402, 403, 408, 412, 413, 420, 421, 423, 429, 443, 457, 461, 464, 465, 481, 490, 491, 497, 498, 506, 508, 510, 511, 531, 544, 545, 579, 582, 586], "out_fold": 399, "outcom": [388, 397], "outdat": [400, 403], "outdir": [16, 82, 93, 460, 464, 465, 467, 506], "outer": [43, 44, 52, 53, 129, 170, 263, 545], "outer_height": [531, 535], "outer_width": [531, 535], "outfil": 383, "outflow": 205, "outlin": [103, 106, 110, 111, 222, 223, 227, 236, 239, 254, 263, 264, 278, 386, 388, 391, 392, 393, 394, 397, 403, 406], "output": [11, 16, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 41, 83, 84, 86, 87, 88, 90, 91, 93, 105, 118, 126, 143, 144, 152, 157, 195, 196, 198, 204, 207, 208, 214, 226, 241, 250, 292, 339, 384, 391, 393, 396, 399, 400, 404, 407, 410, 424, 439, 445, 448, 449, 451, 467, 471, 472, 475, 478, 486, 489, 490, 506, 507, 520, 522, 582, 583], "output_map": [195, 196, 198, 204, 207, 208], "output_unit": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40], "outsid": [87, 91, 103, 106, 110, 111, 116, 119, 152, 172, 193, 194, 195, 196, 197, 198, 199, 200, 203, 204, 205, 206, 207, 208, 216, 218, 228, 279, 323, 371, 383, 397, 398, 399, 435, 465, 486, 487, 489, 490, 491, 522, 529, 541, 567], "over": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 67, 83, 87, 88, 91, 92, 95, 102, 103, 106, 110, 111, 128, 135, 139, 152, 153, 163, 165, 168, 175, 182, 185, 186, 188, 189, 193, 194, 195, 196, 198, 199, 200, 203, 204, 206, 207, 208, 226, 250, 282, 291, 293, 297, 321, 322, 335, 374, 383, 384, 388, 391, 392, 393, 396, 397, 398, 403, 406, 410, 412, 415, 417, 435, 456, 459, 463, 465, 467, 470, 471, 478, 484, 485, 486, 489, 490, 493, 507, 508, 520, 522, 526, 583, 584], "overal": [391, 397, 451, 459], "overcom": [412, 491], "overestim": [520, 584], "overflow": [205, 461, 478, 481, 570], "overkil": 478, "overlai": [460, 486], "overlaid": [103, 106, 110, 111, 459, 460], "overlap": [86, 91, 116, 119, 132, 183, 200, 205, 380, 398, 459], "overlap_ok": 86, "overlin": [103, 110, 518], "overload": 435, "overplot": [484, 517], "overrid": [16, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 84, 90, 105, 126, 350, 394, 459, 461, 469, 473], "overridden": [16, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 84, 87, 90, 91, 105, 126, 203, 380], "oversampl": [104, 109, 163, 165, 168, 175, 182, 188, 194, 195, 196, 198, 203, 204, 207, 208, 223, 227, 236, 239, 240, 241, 252, 263, 264, 266, 268, 274, 278, 280, 285, 426, 489], "oversample_energy_factor": [104, 109, 472], "oversampling_factor": [196, 206, 222, 223, 227, 236, 239, 240, 241, 252, 254, 263, 264, 266, 268, 274, 278, 280], "overview": [6, 386, 412, 414, 429, 430, 432, 435, 453, 479, 486, 490, 493, 502, 508, 509, 522, 523, 536, 583], "overwrit": [11, 15, 16, 19, 20, 26, 82, 88, 93, 100, 102, 103, 106, 108, 110, 111, 125, 127, 153, 154, 160, 165, 168, 193, 194, 195, 196, 198, 200, 202, 203, 204, 205, 206, 207, 208, 214, 216, 220, 223, 224, 226, 227, 228, 230, 231, 232, 233, 236, 237, 238, 239, 240, 241, 242, 243, 244, 247, 250, 254, 255, 256, 257, 258, 262, 263, 264, 265, 267, 270, 271, 272, 274, 275, 276, 277, 278, 330, 352, 407, 444, 446, 451, 459, 460, 467, 468, 471, 472, 473, 488, 490, 491, 492, 493, 497, 498, 504, 506, 507, 518, 535, 546, 582], "overwrite_templ": [214, 226, 250], "overwritten": [165, 168, 322], "owen": [423, 436], "own": [87, 91, 99, 125, 127, 202, 204, 386, 389, 399, 405, 409, 435, 454, 471, 493, 498, 507, 522, 534, 535], "p": [38, 51, 54, 87, 91, 110, 111, 131, 296, 307, 383, 435, 460, 470, 483, 487, 506, 522, 527, 528, 584], "p0_birth": 43, "p3nz": 481, "p43z1vf": 481, "p90": 48, "p_": [524, 526, 527, 528], "p_0": [51, 195, 198, 204, 207, 208, 514], "p_dot": [51, 54], "p_i": [195, 198, 204, 207, 208], "p_lat": [195, 198, 204, 207, 208], "p_lon": [195, 198, 204, 207, 208], "p_mean": 42, "p_n": [195, 198, 204, 207, 208], "p_stdv": 42, "p_valu": [291, 293, 487, 582, 584], "pace": [391, 392], "packag": [6, 11, 143, 310, 347, 382, 383, 384, 386, 387, 388, 389, 390, 391, 392, 397, 400, 401, 403, 408, 409, 410, 412, 413, 415, 419, 420, 421, 422, 423, 425, 428, 429, 431, 432, 435, 438, 439, 440, 441, 442, 443, 444, 446, 454, 455, 456, 459, 460, 461, 462, 463, 464, 465, 467, 468, 469, 470, 471, 472, 473, 475, 476, 477, 478, 479, 481, 483, 484, 485, 487, 489, 490, 491, 492, 493, 495, 497, 498, 499, 500, 506, 507, 508, 518, 521, 522, 523, 530, 535, 546, 554, 556, 570, 582, 586], "pacman": 440, "paczynski": 37, "paczynski1990": [28, 29, 30, 35, 37, 39, 40, 48], "paczynski1990veloc": 49, "pad": [87, 91, 103, 106, 110, 111, 135, 149, 150, 151, 152, 155, 156, 157, 159, 162, 164, 166, 167, 175, 193, 194, 195, 196, 197, 198, 199, 200, 203, 204, 206, 207, 208, 371, 432, 435], "pad_width": [103, 110, 135, 149, 150, 151, 152, 155, 156, 157, 159, 162, 164, 166, 167, 193, 194, 195, 196, 198, 199, 200, 203, 204, 206, 207, 208], "pad_with": [195, 196, 198, 204, 207, 208], "page": [6, 87, 91, 213, 294, 300, 307, 384, 386, 388, 395, 397, 400, 403, 409, 412, 413, 414, 416, 417, 421, 429, 430, 435, 438, 439, 442, 443, 444, 445, 451, 487, 490, 500, 502, 520, 522, 533, 535, 583, 586], "pain": [383, 386, 390], "pair": [16, 84, 90, 103, 105, 106, 110, 111, 125, 126, 127, 139, 149, 150, 151, 152, 153, 154, 155, 156, 157, 159, 160, 162, 164, 165, 166, 167, 168, 193, 194, 195, 196, 198, 199, 202, 203, 204, 206, 207, 208, 399, 455], "panda": [87, 91, 382, 400, 444, 454, 456, 459, 460, 461, 462, 463, 464, 465, 467, 468, 469, 470, 471, 472, 473, 476, 477, 478, 479, 483, 484, 485, 487, 489, 490, 491, 492, 493, 495, 497, 498, 499, 500, 506, 507, 508], "panel": [88, 102, 103, 106, 110, 111, 370, 438, 471, 487], "panel_fov": 370, "panni": 435, "papadopoulo": [435, 437], "paper": [57, 59, 63, 72, 74, 128, 181, 403, 409, 412, 444, 477, 482, 484, 489, 499, 510], "papermil": 399, "par": [394, 406, 411, 412, 455, 481, 487, 495, 497], "par_000_amplitud": 487, "par_001_alpha": 487, "par_002_beta": 487, "par_00x_": 394, "par_1": [213, 487], "par_2": [213, 487], "par_alpha": [213, 487], "par_beta": [213, 487], "par_box": 91, "par_nam": [226, 234, 250, 266, 276], "par_to_v": 497, "par_typ": [226, 234, 250, 266, 276], "parabol": [290, 323, 487], "parabola": [243, 244, 453, 468, 487, 536, 568], "paragraph": 388, "parallel": [6, 93, 128, 129, 132, 135, 171, 325, 326, 327, 328, 329, 330, 331, 386, 400, 414, 437, 449, 450, 451, 463, 485], "parallel_backend": [93, 128, 129, 132, 135, 171, 330, 473], "parallelbackendenum": 325, "parallelis": 412, "parallelmixin": [93, 128, 135, 171], "param": [16, 84, 90, 105, 126, 228, 279, 376, 399, 430, 487], "param_nam": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40], "param_pair": 487, "param_set": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40], "paramet": [15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 71, 72, 74, 75, 76, 77, 78, 79, 80, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 96, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 159, 160, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 247, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 287, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 305, 306, 307, 308, 309, 310, 312, 314, 316, 317, 319, 321, 322, 323, 324, 330, 331, 332, 334, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 364, 365, 366, 367, 368, 370, 371, 372, 373, 374, 376, 377, 378, 379, 380, 381, 383, 384, 392, 395, 396, 398, 399, 401, 402, 405, 407, 409, 421, 424, 425, 426, 427, 428, 429, 431, 432, 435, 437, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 455, 456, 457, 459, 461, 462, 463, 464, 465, 467, 468, 469, 471, 472, 473, 475, 476, 478, 479, 481, 483, 484, 485, 486, 488, 489, 494, 495, 497, 498, 507, 508, 510, 518, 520, 521, 522, 529, 535, 538, 539, 540, 541, 542, 543, 544, 545, 546, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 569, 570, 571, 572, 573, 574, 575, 576, 577, 579, 580, 581, 582, 583, 584, 585], "parameter": 493, "parameter_constraint": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40], "parameter_nam": 384, "parameter_name_scan": 213, "parameter_typ": 384, "parameterestim": [121, 431, 450], "parameteris": [524, 526], "parameters_list": [217, 219], "parameters_nam": [226, 250], "parameters_stat_sum": 411, "parameters_unique_nam": [19, 20, 26, 220, 221, 222, 223, 224, 225, 226, 227, 228, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 247, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 274, 275, 276, 277, 278, 279, 280, 281, 487], "parametr": [16, 27, 84, 90, 102, 105, 126, 155, 156, 161, 164, 166, 243, 244, 263, 395, 399, 406, 425, 432, 435, 461, 463, 493, 497, 544, 545, 556], "parametricpsf": [156, 164, 435, 437], "parametris": [164, 406, 429, 526, 528, 539, 540, 541, 542, 549, 552, 553, 554, 555, 556, 557, 559, 560, 561, 562, 563, 564, 565, 566, 569, 570, 571, 572, 573, 574, 575, 576, 577], "paramnam": 412, "parent": [16, 84, 90, 105, 120, 124, 126, 128, 132, 135, 206, 383, 393, 410, 477, 486, 520, 558], "parenthes": [394, 400, 447, 449], "parfiv": [400, 428], "parnam": 495, "pars": [16, 84, 85, 90, 105, 126, 194, 203, 384, 397, 451, 454, 462, 464, 467, 469, 475, 478, 491, 497, 582], "parse_arg": 582, "parse_fil": [16, 84, 90, 105, 126], "parse_obj": [16, 84, 90, 105, 126], "parse_raw": [16, 84, 90, 105, 126], "parseabl": 310, "parser": 582, "part": [102, 383, 386, 389, 392, 394, 396, 397, 398, 399, 401, 402, 403, 408, 409, 412, 416, 418, 425, 429, 430, 431, 439, 444, 449, 450, 454, 456, 459, 467, 475, 484, 485, 490, 491, 507, 508, 522, 527, 531], "parti": 388, "partial": [91, 103, 106, 153, 154, 160, 165, 168, 171, 194, 206, 208, 276, 397, 401, 430, 444, 533], "partial_overlap": 91, "particip": [388, 392, 403], "particl": [19, 26, 251, 282, 431, 510, 558], "particle_distribut": [251, 558], "particular": [87, 91, 383, 389, 396, 398, 405, 407, 408, 410, 412, 432, 435, 446, 447, 456, 459, 460, 461, 462, 464, 468, 471, 477, 478, 482, 487, 489, 492, 497, 499, 500, 506, 507, 519, 522, 529, 531, 535, 584], "particularli": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40], "partli": [386, 392, 393, 397, 403, 404], "pass": [15, 16, 19, 20, 26, 28, 29, 30, 31, 32, 33, 35, 36, 37, 39, 40, 42, 45, 46, 47, 68, 83, 84, 85, 86, 87, 88, 89, 90, 91, 93, 102, 103, 105, 106, 109, 110, 111, 126, 127, 130, 147, 149, 150, 151, 152, 153, 154, 155, 156, 157, 159, 160, 162, 163, 164, 165, 166, 167, 168, 171, 172, 180, 188, 193, 194, 195, 196, 198, 200, 202, 203, 204, 206, 207, 208, 211, 212, 213, 215, 217, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 230, 231, 232, 233, 236, 238, 239, 240, 241, 242, 243, 244, 247, 250, 251, 252, 253, 254, 255, 256, 257, 258, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 274, 275, 276, 277, 278, 279, 280, 290, 292, 310, 322, 330, 331, 332, 337, 338, 339, 340, 370, 371, 376, 378, 379, 383, 386, 393, 395, 396, 397, 398, 410, 431, 435, 437, 449, 450, 451, 456, 457, 459, 460, 467, 468, 472, 476, 477, 482, 484, 485, 487, 488, 489, 490, 491, 493, 494, 497, 506, 507, 508, 522, 533, 534, 535, 539, 540, 582, 586], "pass4": 499, "pass8_edisp_usag": 101, "passkwarg": [461, 481], "past": [383, 388, 391, 399, 400, 403, 404, 406, 409, 411, 420, 441, 443, 444, 490, 582], "patch": [380, 383, 390, 409, 438, 447, 459, 461, 469, 473, 479], "path": [11, 15, 16, 66, 82, 83, 84, 86, 87, 88, 90, 91, 93, 100, 101, 105, 107, 108, 111, 126, 149, 150, 151, 152, 153, 154, 155, 156, 157, 159, 160, 162, 164, 165, 166, 167, 168, 169, 195, 196, 198, 203, 204, 207, 208, 214, 226, 241, 250, 277, 318, 347, 348, 349, 352, 383, 386, 412, 419, 454, 456, 459, 460, 461, 462, 463, 464, 465, 467, 468, 469, 470, 471, 472, 473, 476, 477, 478, 479, 483, 484, 485, 486, 487, 489, 490, 491, 492, 493, 495, 497, 498, 499, 500, 506, 507, 508, 520, 576, 577, 582], "path_effect": [203, 226, 250], "path_to_notebook": 383, "path_to_script": 383, "patheffect": [203, 226, 250], "pathlib": [16, 82, 83, 86, 87, 91, 152, 204, 214, 226, 250, 348, 459, 460, 467, 468, 471, 472, 497, 506, 507], "pathpatch": 473, "pattern": [383, 389, 397], "paula": 450, "paulakx": 450, "paz": [436, 439, 440], "pbar": 522, "pc": [46, 47, 50, 52, 515, 516], "pcolormesh": [83, 127, 149, 150, 152, 155, 156, 157, 162, 164, 166, 167, 442, 448, 487, 488], "pd": [87, 91], "pdf": [152, 156, 181, 256, 257, 271, 272, 332, 376, 384, 468, 471, 483, 512, 514, 515, 516, 518, 519, 524, 525, 526, 528, 531, 535, 565, 566, 584, 587], "pdf_in_safe_rang": 152, "pdf_matrix": 152, "pdf_threshold": [152, 153, 157], "pdflatex": 384, "peak": [68, 130, 143, 144, 152, 181, 232, 238, 240, 244, 437, 443, 450, 463, 482, 484, 489, 545], "peak_bright": 68, "peak_brightness_error": 68, "peak_latitud": 68, "peak_latitude_error": 68, "pedant": 383, "peek": [83, 88, 103, 106, 110, 111, 130, 131, 149, 150, 152, 153, 154, 155, 156, 157, 162, 163, 164, 165, 166, 168, 383, 395, 420, 432, 438, 442, 446, 456, 461, 467, 471, 472, 479, 485, 488, 497, 499, 500, 519, 522, 524, 525, 526, 528], "pei": 451, "penal": 245, "penalti": [412, 495], "peopl": [388, 390, 403, 409, 413, 414, 483, 510, 522, 582], "pep": 388, "pep8": 386, "per": [17, 18, 21, 22, 24, 25, 27, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 99, 101, 102, 103, 106, 110, 111, 113, 114, 124, 125, 127, 128, 129, 132, 133, 137, 143, 146, 147, 148, 165, 168, 200, 233, 241, 242, 285, 294, 300, 307, 383, 389, 395, 396, 399, 407, 409, 410, 423, 431, 435, 437, 450, 454, 462, 471, 475, 476, 478, 483, 489, 490, 494, 495, 499, 500, 518, 522, 525, 529, 581, 583], "per_decad": [200, 459, 461, 471, 472, 479, 485, 498, 526, 532], "percent": 134, "percentag": [152, 181, 489], "percentil": 83, "peresano": 451, "perfect": 152, "perfectli": [540, 582], "perform": [11, 16, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 84, 85, 87, 90, 91, 94, 100, 105, 109, 126, 172, 180, 194, 206, 208, 223, 226, 227, 236, 239, 250, 252, 263, 264, 268, 274, 278, 291, 293, 346, 349, 376, 383, 384, 389, 392, 393, 394, 398, 399, 407, 410, 412, 413, 414, 416, 425, 432, 435, 437, 440, 444, 447, 449, 450, 451, 454, 457, 459, 460, 461, 462, 463, 464, 465, 467, 468, 470, 472, 475, 476, 477, 478, 481, 485, 487, 489, 490, 491, 492, 494, 499, 502, 506, 518, 522, 530, 531, 534, 540, 558, 580, 581, 582, 583], "perhap": 535, "period": [42, 51, 54, 200, 277, 390, 409, 412, 443, 451, 494, 514], "period_dot": 51, "periodicmapaxi": 451, "periodogram": [292, 398, 444, 451], "permit": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 409], "perseu": [33, 38], "person": [383, 386, 388, 390, 391, 392, 396, 401, 404], "perspect": [87, 91], "pertain": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40], "peter": 443, "pf": 26, "pformat": [87, 91], "pformat_al": [87, 91], "pg": 508, "pgdw3woq": 481, "ph": 368, "pha": [107, 108, 111, 204, 395, 441, 444, 459, 468], "pha_": 485, "pha_meta": 107, "pha_ob": [107, 148, 213, 468, 486, 487], "pha_obs23523": [110, 111, 133, 289, 412, 495, 520], "pha_obs23592": 520, "phacountsspectrum": 427, "phacountsspectrumlist": 426, "phase": [50, 52, 53, 89, 173, 176, 277, 388, 393, 394, 397, 398, 400, 402, 407, 420, 425, 444, 446, 449, 451, 453, 493, 511, 522, 536, 578], "phase_axi": 407, "phase_bkg_mak": 479, "phase_column_nam": [176, 479], "phase_curve_model": 576, "phase_filt": 89, "phase_max": 479, "phase_min": 479, "phase_model": 576, "phasebackgroundestim": 429, "phasebackgroundmak": [173, 429, 449, 451, 479], "phasecurv": [277, 443, 576], "phasecurve_lsi_dc": 576, "phasecurvemodel": 406, "phasecurvetablemodel": [394, 396], "phasecurvetempl": 394, "phasogram": [277, 576], "phi": [19, 20, 26, 201, 220, 221, 224, 227, 228, 230, 231, 232, 236, 239, 243, 244, 247, 251, 253, 255, 256, 257, 262, 267, 269, 270, 271, 272, 275, 279, 314, 406, 475, 492, 493, 498, 508, 527, 539, 540, 541, 543, 544, 545, 549, 551, 552, 553, 555, 556, 560, 561, 563, 564, 565, 566], "phi_0": [220, 222, 223, 227, 230, 231, 232, 236, 239, 243, 244, 252, 254, 256, 257, 263, 264, 267, 268, 270, 271, 272, 274, 278, 406, 487, 549, 552, 553, 556, 560, 563, 564, 565, 566], "phi_ref": [277, 576], "philipp": [443, 444], "phone": 403, "photon": [44, 228, 251, 368, 398, 455, 462, 471, 475, 491, 493, 508, 527, 558, 581], "photutil": [143, 383, 397, 444], "php": 63, "physic": [128, 129, 132, 135, 330, 331, 382, 407, 411, 426, 460, 468, 490, 493, 495, 497, 506, 520, 522, 558, 581, 584, 585], "pi": [19, 20, 30, 31, 32, 37, 54, 237, 282, 406, 493, 516, 539, 540, 541, 544, 545, 555, 575], "pick": [383, 390, 397, 408, 425, 508], "pictur": 384, "pie": 522, "piec": [383, 389, 397, 402, 411], "piecewis": [252, 253, 453, 493, 536, 547, 568], "piecewisebrokenpowerlawnormspectralmodel": 406, "piecewisebrokenpowerlawnormspectramodel": 406, "piecewisenormsectralmodel": 432, "piecewisenormspatialmodel": [260, 449, 451, 493, 542], "piecewisenormspectralmodel": [261, 411, 432, 435, 448, 450, 493, 529, 559], "pig": [13, 383, 385, 386, 424, 425, 427, 428, 429, 431, 432, 443, 445, 446, 450], "pii": [137, 146], "pillar": 399, "pin": 444, "pink": [110, 111], "pint": [479, 522], "pintor": [396, 427, 428, 429, 430, 431, 432, 434, 435, 437, 438, 446, 448, 449, 450, 451], "pip": [382, 386, 390, 400, 415, 416, 418, 425, 444, 497, 582], "pipe": [440, 441, 442], "pipelin": [396, 398, 412, 431], "piron": 581, "piron2001": 581, "pivot": [19, 20, 26, 67, 220, 221, 224, 228, 230, 231, 232, 237, 243, 244, 247, 251, 253, 255, 256, 257, 262, 267, 269, 270, 271, 272, 275, 279, 450, 484], "pivot_energi": [19, 20, 26, 220, 221, 224, 228, 230, 231, 232, 237, 243, 244, 247, 251, 253, 255, 256, 257, 262, 267, 269, 270, 271, 272, 275, 279], "piwoarrv": 481, "pix": [193, 194, 195, 196, 197, 198, 199, 200, 203, 204, 205, 206, 207, 208, 534], "pix_reg": 483, "pix_reg_rec": 483, "pix_to_coord": [193, 194, 197, 199, 200, 203, 205, 206, 450], "pix_to_idx": [193, 194, 197, 199, 200, 203, 205, 206], "pix_tuple_to_idx": 451, "pixcoord": 397, "pixel": [13, 83, 103, 106, 110, 111, 113, 114, 115, 120, 130, 143, 144, 149, 150, 151, 152, 153, 154, 155, 156, 157, 159, 160, 162, 163, 164, 165, 166, 167, 168, 178, 193, 194, 195, 196, 197, 198, 199, 200, 203, 204, 205, 206, 207, 208, 223, 226, 227, 236, 239, 250, 252, 263, 264, 268, 274, 278, 394, 423, 427, 441, 444, 463, 471, 473, 485, 489, 490, 498, 508, 518, 520, 532, 533, 534, 543], "pixel_area": 206, "pixel_scal": [120, 194, 206], "pixelis": 534, "pixelregion": [397, 531], "pixilis": 490, "pixreg": 541, "pixregion": 208, "pk": [139, 430, 455, 477, 478, 481, 482, 484, 494, 508, 548], "pks2155": [455, 477, 481], "pks2155_hess_lc": [125, 127, 147, 482, 486], "pl": [67, 80, 124, 129, 135, 172, 248, 255, 256, 257, 406, 457, 463, 473, 477, 484, 485, 486, 493, 508], "pl_model": 574, "pl_spectrum": 495, "place": [83, 86, 87, 91, 92, 100, 103, 106, 110, 111, 143, 149, 150, 151, 152, 153, 154, 155, 159, 160, 165, 167, 168, 178, 183, 195, 196, 198, 204, 207, 208, 250, 276, 306, 356, 383, 384, 390, 391, 394, 395, 396, 397, 399, 402, 403, 404, 405, 408, 414, 428, 430, 459, 476, 490, 491, 493, 508, 518, 519, 580, 586], "placehold": 388, "plai": [403, 469], "plain": [400, 490], "plan": [387, 388, 392, 393, 397, 399, 400, 403, 408, 413, 424, 441, 443, 444, 445, 579], "planar": [278, 394], "plane": [29, 67, 68, 128, 193, 194, 195, 196, 198, 203, 204, 206, 207, 208, 403, 483, 484, 490, 497, 517, 532, 535, 540, 581, 587], "plate": [206, 490], "platform": [400, 409, 435], "plausibl": [410, 470], "pleas": [104, 109, 384, 386, 388, 390, 392, 419, 424, 425, 426, 435, 443, 445, 451, 457, 459, 460, 461, 462, 464, 467, 471, 472, 477, 478, 482, 485, 486, 506, 511, 522], "pleasant": 386, "plot": [6, 19, 20, 26, 66, 67, 83, 88, 102, 103, 106, 110, 111, 127, 130, 131, 149, 150, 152, 153, 154, 155, 156, 157, 162, 163, 164, 165, 166, 167, 168, 195, 196, 197, 198, 200, 203, 204, 205, 207, 208, 211, 220, 221, 222, 223, 224, 225, 226, 227, 228, 230, 231, 232, 233, 236, 237, 238, 239, 240, 241, 242, 243, 244, 247, 250, 251, 252, 253, 254, 255, 256, 257, 258, 262, 263, 264, 265, 267, 268, 269, 270, 271, 272, 274, 275, 277, 278, 279, 280, 283, 287, 361, 370, 371, 375, 376, 377, 378, 379, 380, 381, 382, 384, 397, 398, 399, 401, 402, 404, 407, 412, 420, 423, 426, 429, 431, 432, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 448, 449, 450, 451, 454, 456, 457, 461, 463, 464, 465, 467, 468, 472, 475, 476, 477, 478, 479, 481, 482, 483, 484, 485, 486, 487, 489, 491, 493, 494, 495, 497, 498, 499, 500, 506, 508, 512, 514, 515, 516, 518, 522, 524, 525, 526, 528, 531, 576, 577, 581, 584, 586], "plot_absorb": [453, 548, 568], "plot_at_energi": [149, 150, 497], "plot_bia": [152, 157], "plot_broken_powerlaw": [453, 549, 568], "plot_compound": [453, 550, 568], "plot_const": [453, 538, 547], "plot_constant_spectr": [453, 551, 568], "plot_constant_tempor": [453, 569, 578], "plot_containment_radiu": [156, 162, 164, 166], "plot_containment_radius_vs_energi": [156, 162, 164, 165, 166, 168, 497, 498], "plot_contour_lin": 487, "plot_correl": [211, 487], "plot_count": [110, 111], "plot_dat": 586, "plot_disk": [453, 539, 547], "plot_distribut": [451, 465, 467], "plot_energi": [83, 472], "plot_energy_depend": [149, 155, 497, 524], "plot_energy_offset": 83, "plot_err": 130, "plot_error": [19, 20, 26, 66, 67, 102, 220, 221, 222, 223, 224, 227, 228, 230, 231, 232, 236, 237, 239, 243, 244, 247, 251, 252, 253, 254, 255, 256, 257, 262, 263, 264, 267, 268, 269, 270, 271, 272, 274, 275, 278, 279, 401, 455, 457, 459, 461, 467, 468, 470, 484, 487, 507], "plot_excess": [110, 111, 438], "plot_exp_cutoff_powerlaw": [453, 552, 568], "plot_exp_cutoff_powerlaw_3fgl": [453, 553, 568], "plot_exp_cutoff_powerlaw_norm_spectr": [453, 554, 568], "plot_expdecay_tempor": [453, 570, 578], "plot_extension_error": [222, 223, 227, 236, 239, 252, 254, 263, 264, 268, 274, 278], "plot_fit": [102, 110, 111, 456, 459, 460, 461, 469, 479, 506], "plot_gauss": [453, 540, 547], "plot_gauss_spectr": [453, 555, 568], "plot_gaussian_tempor": [453, 571, 578], "plot_gen_gauss": [453, 541, 547], "plot_generalized_gaussian_tempor": [453, 572, 578], "plot_grid": [163, 195, 196, 198, 204, 207, 208, 222, 223, 227, 236, 239, 252, 254, 263, 264, 268, 274, 278, 407, 437, 448, 467, 485, 488, 489, 490, 491, 493, 499], "plot_heatmap": 211, "plot_hist": [204, 535], "plot_imag": 83, "plot_interact": [195, 196, 198, 204, 207, 208, 222, 223, 227, 236, 239, 252, 254, 263, 264, 268, 274, 278, 437, 444, 467, 475, 490, 506, 507], "plot_kernel": 163, "plot_kwarg": [459, 461, 469], "plot_linear_tempor": [453, 573, 578], "plot_logparabola": [453, 556, 568], "plot_logparabola_norm_spectr": [453, 557, 568], "plot_map_rgb": 449, "plot_mask": [110, 111, 196, 204, 208, 531], "plot_matrix": [152, 485, 498], "plot_migr": 157, "plot_naima": [453, 558, 568], "plot_npred_sign": [449, 467, 469, 507], "plot_offset2_distribut": 83, "plot_offset_depend": [149, 155], "plot_panel": 370, "plot_phasogram": 277, "plot_piecewise_norm_spati": [453, 542, 547], "plot_piecewise_norm_spectr": [453, 559, 568], "plot_point": [453, 543, 547], "plot_posit": [226, 250, 492], "plot_position_error": [222, 223, 227, 236, 239, 252, 254, 263, 264, 268, 274, 278], "plot_powerlaw": [453, 560, 568], "plot_powerlaw2": [453, 561, 568], "plot_powerlaw_norm_spectr": [453, 562, 568], "plot_powerlaw_tempor": [453, 574, 578], "plot_profil": 130, "plot_psf_vs_rad": [156, 162, 164, 165, 166, 168, 498], "plot_rad_max_vs_energi": [167, 451, 461], "plot_region": [203, 204, 226, 250, 380, 461, 473, 492, 531, 535], "plot_residu": [102, 103, 106, 110, 111, 433, 435, 467, 507], "plot_residuals_spati": [103, 106, 110, 111, 467, 475, 507], "plot_residuals_spectr": [103, 106, 110, 111], "plot_rgb": 449, "plot_shel": [453, 544, 547], "plot_shell2": [453, 545, 547], "plot_sine_tempor": [453, 575, 578], "plot_smooth_broken_powerlaw": [453, 563, 568], "plot_spati": 435, "plot_spectrum": [102, 149, 467, 478, 485], "plot_spectrum_datasets_off_region": [432, 448, 449, 459, 461, 469, 531], "plot_stat": 459, "plot_super_exp_cutoff_powerlaw_3fgl": [453, 564, 568], "plot_super_exp_cutoff_powerlaw_4fgl": [453, 565, 568], "plot_super_exp_cutoff_powerlaw_4fgl_dr1": [453, 566, 568], "plot_templ": [453, 546, 547], "plot_template_phase_tempor": [453, 576, 578], "plot_template_spectr": [453, 567, 568], "plot_template_tempor": [453, 577, 578], "plot_theta_squared_t": 500, "plot_tim": 83, "plot_ts_profil": [127, 459, 460, 473, 476, 486], "plotmixin": [110, 111], "plotter": 370, "plsuperexpcutoff3fgl": 442, "plsuperexpcutoff4fgl": 427, "plt": [19, 20, 26, 66, 67, 131, 149, 155, 156, 220, 221, 224, 228, 230, 231, 232, 237, 243, 244, 247, 251, 253, 255, 256, 257, 262, 267, 269, 270, 271, 272, 275, 279, 371, 380, 383, 384, 420, 454, 455, 456, 457, 459, 460, 461, 462, 463, 464, 465, 467, 468, 469, 470, 471, 472, 473, 475, 476, 477, 478, 479, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 497, 498, 499, 500, 506, 507, 508, 514, 515, 516, 522, 524, 525, 526, 528, 531, 539, 541, 545, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 569, 570, 571, 572, 573, 574, 575], "plu": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 227, 403, 409, 493], "plug": 412, "pmf": 396, "png": [156, 391, 420, 512, 514, 515, 516, 518, 519, 524, 525, 526, 528, 531, 535, 584, 587], "po": [154, 206, 531], "point": [15, 17, 18, 21, 22, 24, 25, 27, 61, 65, 67, 71, 72, 73, 74, 75, 77, 78, 79, 80, 82, 83, 85, 87, 88, 90, 91, 94, 95, 96, 99, 100, 101, 102, 103, 105, 106, 110, 111, 113, 114, 121, 125, 127, 128, 129, 132, 133, 134, 135, 136, 140, 145, 147, 154, 156, 159, 165, 167, 168, 178, 179, 181, 182, 183, 185, 186, 188, 189, 191, 192, 195, 196, 198, 203, 204, 207, 208, 213, 226, 250, 254, 266, 285, 289, 292, 298, 312, 316, 322, 328, 338, 375, 383, 385, 386, 388, 389, 390, 391, 392, 393, 395, 396, 397, 399, 400, 403, 404, 405, 406, 407, 408, 409, 410, 412, 413, 416, 423, 426, 428, 429, 435, 437, 438, 440, 441, 442, 443, 445, 448, 449, 450, 453, 456, 458, 461, 462, 463, 467, 472, 473, 475, 476, 477, 478, 479, 481, 485, 487, 488, 489, 490, 493, 494, 498, 500, 502, 510, 511, 517, 518, 519, 522, 527, 531, 534, 536, 540, 541, 547, 558, 579, 580, 581], "point_sourc": 394, "pointer": 391, "pointing_altaz": [410, 449], "pointing_galact": 91, "pointing_info": [85, 94, 454], "pointing_posit": [165, 462, 472, 475], "pointing_radec": [83, 91, 449, 497], "pointing_t": 94, "pointing_zen": 449, "pointinginfo": [85, 441], "pointinginfometadata": [90, 105], "pointingmetadata": 410, "pointingmod": 85, "pointlik": [149, 150, 151, 152, 155, 156, 157, 159, 162, 164, 166, 167, 443, 531], "points_scal": 322, "pointskyregion": [177, 182, 203, 254, 438, 461, 472], "pointsourc": [394, 510], "pointspatialmodel": [19, 20, 72, 80, 135, 260, 406, 407, 428, 448, 463, 464, 467, 468, 471, 472, 476, 484, 485, 492, 493, 498, 506, 507, 543], "pointspreadfunct": 488, "poisson": [106, 111, 291, 292, 293, 294, 300, 303, 304, 307, 340, 395, 396, 426, 431, 457, 462, 465, 475, 581, 582, 584], "poissonian": [292, 479, 482, 581], "poissonlikelihoodfitt": 440, "polar": [51, 54, 311, 383], "pole": [51, 397, 490], "poli": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 196], "polici": 387, "pollut": 398, "polygon": [196, 210, 397], "polygonis": 397, "polygonpixelregion": 397, "polygonskyregion": [210, 397], "polynomi": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 247, 490], "polynomial1d": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40], "polynomialmodel": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40], "pool": [326, 330, 331], "pool_kwarg": [330, 331], "poolmethodenum": 326, "poon": 441, "poorli": [489, 529], "pop": [92, 100, 202, 250], "popitem": 202, "popul": [6, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 384, 403, 442, 511, 513, 558, 580], "popular": 582, "port": 442, "pos_ob": 469, "pos_on": 192, "pos_target": [469, 479], "posit": [16, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 45, 46, 47, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 83, 84, 85, 87, 90, 91, 94, 95, 96, 103, 104, 105, 106, 109, 113, 114, 125, 126, 127, 128, 129, 132, 133, 135, 153, 154, 160, 163, 165, 168, 178, 181, 183, 192, 194, 195, 196, 198, 203, 204, 205, 206, 207, 208, 209, 216, 217, 218, 219, 222, 223, 226, 227, 236, 239, 250, 252, 254, 263, 264, 266, 268, 274, 276, 278, 289, 291, 293, 308, 309, 312, 313, 316, 317, 371, 383, 390, 394, 396, 397, 406, 407, 408, 409, 425, 427, 432, 435, 437, 450, 451, 454, 461, 462, 463, 464, 465, 467, 468, 469, 470, 471, 472, 473, 475, 478, 479, 483, 484, 485, 488, 489, 490, 491, 492, 493, 494, 497, 498, 500, 508, 518, 519, 520, 522, 527, 528, 531, 532, 533, 535, 539, 540, 541, 543, 558, 584], "position_angl": 462, "position_error": [222, 223, 227, 236, 239, 252, 254, 263, 264, 268, 274, 278, 429], "position_lonlat": [222, 223, 227, 236, 239, 252, 254, 263, 264, 266, 268, 274, 278], "position_off": 192, "positv": 446, "posixpath": [16, 347], "possibl": [33, 82, 87, 91, 138, 158, 383, 384, 386, 390, 391, 394, 395, 396, 397, 398, 399, 400, 402, 403, 404, 407, 410, 413, 414, 416, 426, 427, 435, 442, 444, 449, 451, 455, 459, 463, 464, 465, 470, 473, 485, 487, 488, 489, 490, 498, 507, 508, 520, 522, 529, 534, 535, 558, 582, 583], "possibli": [87, 91, 125, 389, 393, 394, 396, 397, 401, 402, 403, 404, 410, 413, 435, 529], "post": [52, 392, 410], "postbuild": 413, "poster": [386, 409, 414, 439], "posterior": [401, 495], "posteriori": 495, "postfix": 383, "potenti": [122, 391, 399, 412, 470, 522], "potentiel": 409, "power": [19, 20, 26, 27, 102, 120, 125, 127, 129, 134, 142, 163, 165, 168, 194, 216, 218, 220, 221, 224, 228, 230, 231, 232, 237, 243, 244, 247, 251, 253, 255, 256, 257, 258, 262, 267, 269, 270, 271, 272, 275, 279, 282, 287, 292, 337, 394, 396, 423, 429, 441, 443, 451, 453, 455, 462, 464, 467, 471, 473, 475, 477, 478, 479, 481, 492, 493, 495, 522, 536, 548, 568, 574], "power_spectrum": 292, "power_spectrum_param": 292, "powerlaw": [181, 256, 258, 292, 394, 395, 399, 441, 443, 453, 456, 464, 472, 473, 484, 493, 495, 507, 536, 562, 578], "powerlaw2spectralmodel": [248, 256, 257, 261, 406, 457, 464, 493, 508, 561], "powerlaw_with_paramet": 292, "powerlawnormspectralmodel": [67, 234, 255, 257, 261, 276, 405, 406, 411, 432, 450, 467, 468, 471, 472, 475, 485, 492, 493, 498, 506, 529, 542, 562, 567], "powerlawspectr": 135, "powerlawspectralmodel": [70, 72, 76, 80, 102, 110, 111, 116, 119, 124, 127, 133, 135, 217, 219, 255, 256, 261, 283, 406, 407, 411, 455, 456, 457, 460, 462, 463, 469, 470, 471, 472, 473, 475, 476, 477, 478, 479, 481, 484, 485, 486, 492, 493, 495, 497, 498, 506, 507, 508, 520, 538, 539, 540, 541, 543, 544, 545, 546, 548, 550, 559, 560, 569, 570, 571, 572, 573, 574, 575, 576, 577], "powerlawspectramodel": 411, "powerlawtemporalmodel": [273, 493, 574], "pppc4dm": 510, "pppc4dmid": 26, "pprint": [87, 91, 583], "pprint_al": [87, 91], "pprint_exclude_nam": [87, 91], "pprint_include_nam": [87, 91], "pr": [383, 393, 395, 397, 406, 407, 409, 411, 412, 413, 429, 430], "practic": [396, 400, 404, 407, 408, 409, 410, 459, 485, 491, 493, 507, 518, 522, 531, 581], "pre": [16, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 84, 90, 102, 105, 109, 126, 127, 383, 386, 392, 403, 409, 410, 415, 416, 432, 444, 446, 460, 464, 465, 468, 470, 473, 482, 484, 486, 487, 492, 495, 518, 524], "preced": [328, 397, 399, 409, 493], "precis": [135, 156, 162, 164, 166, 223, 227, 236, 239, 252, 263, 264, 268, 274, 278, 383, 401, 408, 409, 472], "precision_factor": [165, 168, 195, 196, 198, 204, 207, 208], "precomput": [26, 102, 127, 451, 485, 492], "pred": 518, "predefin": [416, 418, 437, 473, 476, 477, 506], "predic": 394, "predict": [102, 103, 106, 109, 110, 111, 124, 125, 127, 128, 129, 132, 133, 142, 172, 175, 181, 188, 254, 266, 295, 332, 379, 389, 394, 395, 396, 432, 449, 450, 455, 460, 462, 464, 465, 467, 469, 471, 473, 475, 485, 486, 489, 495, 506, 507, 520, 522, 526, 529, 548, 581, 584], "prefer": [87, 91, 358, 383, 388, 390, 394, 402, 403, 409, 415, 416, 420, 473, 478, 490, 491, 495, 502, 582, 584], "prefix": [200, 394], "preliminari": [392, 403, 411, 440, 442, 450, 463, 488, 498], "prepar": [82, 175, 393, 394, 412, 413, 460, 468, 486, 489, 493, 498, 506, 530, 579], "prepare_input": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40], "prepare_output": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40], "prepend": [87, 91, 310], "presenc": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 451, 463, 482, 490, 558, 581], "present": [15, 70, 82, 83, 85, 91, 92, 100, 107, 111, 125, 127, 169, 197, 202, 226, 234, 250, 310, 383, 384, 386, 396, 399, 403, 407, 410, 412, 414, 435, 456, 461, 464, 465, 476, 477, 481, 482, 483, 488, 489, 490, 492, 518, 520, 523, 535, 582, 584], "preserv": [87, 91, 106, 195, 196, 198, 200, 204, 207, 208, 400, 485, 491], "preserve_count": [195, 196, 198, 204, 207, 208, 490], "press": 497, "pretti": [397, 403, 414, 420], "prevent": [196, 228, 310, 435, 467, 529], "preview": [386, 500], "previou": [74, 87, 91, 383, 386, 397, 403, 404, 408, 413, 426, 432, 450, 451, 461, 470, 471, 490, 493, 494, 495, 508, 517], "previous": [289, 400, 431, 443, 444, 454, 459, 467, 468, 484, 489, 491], "primari": [26, 87, 91, 195, 196, 198, 199, 207, 208, 388, 409, 431, 446, 486, 490], "primarili": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40], "primary_axi": 199, "primary_band": 490, "primary_hdu": 471, "primaryflux": [19, 20, 483, 510], "primaryhdu": [471, 490], "prime": 23, "primer": 401, "princip": 470, "principl": [383, 409, 411, 459, 532], "print": [11, 67, 82, 83, 85, 86, 87, 88, 91, 94, 96, 102, 103, 110, 112, 117, 124, 127, 129, 135, 143, 144, 150, 152, 155, 156, 162, 164, 166, 175, 178, 217, 219, 226, 241, 250, 283, 308, 309, 318, 350, 383, 384, 394, 395, 398, 407, 410, 419, 420, 454, 455, 456, 457, 459, 460, 461, 462, 463, 464, 465, 467, 468, 469, 470, 471, 472, 473, 475, 476, 477, 478, 479, 481, 482, 483, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 497, 498, 506, 507, 508, 520, 522, 534, 535, 538, 539, 540, 541, 542, 543, 544, 545, 546, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 569, 570, 571, 572, 573, 574, 575, 576, 577, 582, 583, 584, 586], "print0": 383, "print_level": [467, 475, 487, 507], "print_stack": 383, "printout": [383, 442, 443, 485], "prior": [19, 20, 99, 102, 103, 110, 216, 217, 218, 219, 220, 223, 224, 227, 228, 230, 231, 232, 233, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 247, 250, 254, 255, 256, 257, 258, 262, 263, 264, 265, 267, 270, 271, 272, 277, 278, 281, 387, 392, 412, 450, 451, 453, 455, 456, 459, 460, 461, 462, 464, 467, 468, 473, 475, 477, 478, 484, 487, 493, 496, 502, 507, 508, 567, 579], "prior_inverse_cdf": 412, "prior_registri": 495, "prior_stat_sum": [216, 217, 218, 219, 411, 495], "priorfitstatist": 411, "priori": [407, 465, 491], "prioriti": [380, 392, 394, 395, 397, 409, 413], "priormodel": 411, "priorparamet": [235, 245, 259, 281, 411, 495], "privat": [383, 386, 392, 406, 443, 499, 500], "pro": [383, 399], "probabl": [13, 102, 136, 145, 157, 386, 389, 390, 391, 393, 396, 397, 401, 403, 405, 411, 412, 414, 459, 462, 475, 487, 490, 493, 495, 498, 526, 527, 528, 581, 582, 584, 585], "probe": [135, 298, 412, 493], "problem": [19, 20, 216, 220, 223, 224, 227, 228, 230, 231, 232, 233, 236, 237, 238, 239, 240, 241, 242, 243, 244, 247, 254, 255, 256, 257, 258, 262, 263, 264, 265, 267, 270, 271, 272, 277, 278, 306, 361, 391, 393, 397, 404, 411, 419, 447, 487, 522], "problemat": [402, 407, 410, 477, 522], "proce": [386, 414, 416, 418, 446, 455, 456, 459, 460, 471, 475, 477, 491, 492, 497, 498, 506, 507], "procedur": [396, 408, 413, 414, 455, 463, 467], "proceed": [403, 409, 499], "process": [11, 83, 93, 128, 129, 132, 135, 136, 145, 171, 196, 208, 329, 330, 331, 340, 383, 384, 386, 388, 389, 391, 392, 393, 395, 396, 398, 399, 405, 408, 409, 410, 417, 421, 427, 432, 435, 437, 443, 450, 451, 456, 459, 463, 469, 471, 472, 484, 485, 489, 499, 504, 507, 512, 519, 521, 522, 580, 581, 582], "process_lots_of_data": 383, "processor": 403, "prod": 424, "prod3": 403, "prod3b": 497, "prod5": [471, 472, 497], "produc": [15, 103, 106, 110, 111, 115, 125, 286, 288, 383, 384, 389, 398, 399, 407, 408, 410, 412, 414, 429, 455, 456, 459, 461, 463, 468, 469, 470, 471, 475, 477, 479, 483, 487, 489, 495, 497, 507, 522, 525, 527, 582], "product": [109, 136, 145, 195, 196, 198, 201, 204, 207, 208, 277, 389, 398, 399, 409, 410, 420, 435, 449, 450, 455, 457, 463, 472, 479, 485, 487, 489, 498, 500, 520, 527, 581], "prof_mak": 129, "profil": [17, 18, 21, 22, 23, 24, 25, 27, 102, 121, 125, 127, 128, 129, 130, 131, 132, 133, 135, 136, 145, 156, 162, 164, 165, 166, 168, 192, 196, 204, 213, 238, 240, 290, 307, 323, 342, 343, 395, 397, 401, 402, 409, 416, 418, 423, 425, 432, 435, 440, 442, 444, 445, 450, 451, 453, 459, 460, 469, 474, 476, 477, 478, 486, 487, 495, 502, 510, 520, 522, 539, 584], "profile_err": 130, "profile_high": 473, "profile_new": 473, "profuma": 510, "program": [383, 399], "programmat": 467, "progress": [15, 82, 120, 132, 135, 213, 331, 389, 392, 399, 400, 414, 435, 442, 443, 444, 450, 522], "progress_download": 522, "proj": [103, 106, 110, 111, 175, 194, 195, 196, 206, 207, 208, 459, 489, 490, 498, 507, 531], "project": [103, 110, 129, 172, 178, 194, 195, 196, 198, 203, 204, 206, 207, 208, 223, 226, 227, 236, 239, 250, 252, 263, 264, 268, 274, 278, 317, 343, 383, 384, 385, 386, 388, 390, 397, 399, 400, 403, 409, 427, 435, 443, 449, 460, 463, 465, 469, 473, 479, 488, 490, 491, 492, 498, 504, 506, 507, 508, 510, 531, 534, 535, 544, 545, 580, 582], "projected_distance_axi": 129, "prompt": 582, "pronounc": 522, "pronunci": 522, "prop_cycl": 380, "propag": [19, 20, 26, 53, 130, 220, 221, 224, 228, 230, 231, 232, 237, 243, 244, 247, 251, 253, 255, 256, 257, 262, 267, 269, 270, 271, 272, 275, 279, 297, 394, 401, 429, 449, 487], "proper": [45, 100, 398, 409, 448, 449, 461, 467, 522], "properli": [135, 188, 388, 398, 409, 447, 448, 459, 460, 486, 487, 506, 518, 583], "properti": [16, 19, 20, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 83, 84, 87, 90, 91, 96, 105, 125, 126, 172, 206, 216, 220, 223, 224, 227, 228, 230, 231, 232, 233, 236, 237, 238, 239, 240, 241, 242, 243, 244, 247, 254, 255, 256, 257, 258, 262, 263, 264, 265, 267, 270, 271, 272, 277, 278, 299, 380, 383, 384, 394, 396, 406, 407, 410, 411, 432, 435, 437, 442, 443, 445, 448, 449, 459, 461, 469, 471, 473, 484, 491, 493, 494, 508, 519, 535, 581], "propos": [383, 385, 387, 388, 389, 390, 392, 400, 408, 409, 411, 413, 425, 428, 429, 431, 432, 443, 449], "protect": 451, "proto": [16, 84, 90, 105, 126], "proton": [282, 558], "prototyp": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 388, 394, 396, 399, 400, 401, 403, 440, 442, 443, 450, 511], "proven": 399, "provid": [15, 16, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 82, 83, 84, 85, 87, 88, 90, 91, 102, 103, 105, 106, 110, 111, 115, 126, 132, 135, 136, 138, 145, 152, 153, 171, 185, 186, 191, 195, 196, 198, 200, 201, 202, 203, 204, 205, 206, 207, 208, 213, 214, 278, 292, 307, 310, 376, 383, 384, 393, 394, 396, 398, 399, 400, 403, 404, 407, 409, 410, 411, 412, 413, 414, 415, 416, 418, 419, 421, 425, 428, 429, 430, 432, 435, 437, 446, 449, 451, 454, 459, 461, 462, 463, 472, 475, 482, 484, 485, 486, 487, 489, 490, 491, 493, 494, 498, 499, 500, 502, 507, 508, 510, 512, 517, 519, 520, 521, 522, 523, 524, 525, 526, 528, 529, 532, 533, 534, 535, 536, 543, 546, 558, 567, 579, 580, 581, 582, 584, 587], "proxi": 393, "prune": [386, 413], "pset": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40], "pseudonym": 386, "psf": [16, 82, 87, 88, 96, 103, 104, 106, 109, 110, 111, 113, 114, 115, 154, 156, 161, 162, 163, 164, 165, 166, 168, 175, 182, 191, 206, 226, 250, 266, 308, 309, 383, 389, 393, 394, 395, 396, 399, 423, 425, 429, 430, 431, 432, 435, 436, 440, 441, 442, 443, 444, 445, 446, 447, 449, 451, 454, 456, 459, 460, 461, 463, 464, 465, 467, 469, 471, 472, 475, 476, 485, 489, 491, 494, 497, 499, 500, 506, 507, 518, 520, 522, 527, 530, 535, 581], "psf3d": [88, 156, 161, 164, 166, 191, 425, 443, 528], "psf68": 454, "psf_": 518, "psf_3gauss": [87, 156, 497, 528], "psf_assym": 488, "psf_file": 101, "psf_kernel": [165, 498], "psf_kernel_map": [163, 498], "psf_king": [87, 164, 528], "psf_map": [104, 109, 165, 168], "psf_map_reco": [168, 499], "psf_mean": 498, "psf_new": 488, "psf_out": [165, 168], "psf_r95": 491, "psf_tabl": [82, 87, 162, 488, 500], "psf_theta": 383, "psf_updat": [104, 109], "psf_valu": [156, 164, 166], "psfkernel": [106, 165, 168, 196, 208, 395, 404, 444, 528], "psfking": [161, 437, 528], "psfmap": [103, 104, 106, 109, 110, 111, 154, 160, 161, 163, 168, 175, 182, 191, 395, 396, 404, 425, 428, 429, 431, 432, 444, 450, 451, 463, 485, 498, 522, 528], "psfnd": 488, "psr": [479, 484, 508], "public": [6, 373, 374, 386, 388, 397, 402, 405, 408, 414, 439, 456, 468, 476, 477, 481, 580, 587], "publicli": [497, 499, 500], "publish": [11, 400, 414, 459, 498], "pull": [384, 387, 388, 391, 392, 393, 394, 395, 396, 397, 403, 408, 409, 413, 414, 422], "puls": 240, "pulsar": [30, 31, 32, 35, 39, 42, 50, 54, 60, 64, 77, 83, 393, 403, 425, 427, 446, 449, 451, 453, 465, 470, 480, 493, 502, 512, 513, 522], "pulsar_analysi": [403, 453, 479, 480], "pulsar_phas": 522, "pulsar_phase_comput": 522, "pulsarastronomi": 522, "pulsat": 265, "pulse_stat": 479, "punch": [448, 450], "pure": [383, 400, 402, 403, 531], "purpl": 535, "purpos": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 334, 358, 387, 389, 395, 398, 402, 406, 408, 409, 443, 463, 485, 492, 493, 526], "push": [383, 386, 413, 446], "put": [200, 383, 384, 386, 388, 390, 391, 394, 403, 413, 414, 420, 426, 462, 471, 491, 498, 522, 582], "pwbpl": 406, "pwd": [386, 416, 418], "pwl": [19, 20, 26, 127, 217, 219, 220, 221, 224, 228, 230, 231, 232, 237, 243, 244, 247, 251, 253, 255, 256, 257, 262, 267, 269, 270, 271, 272, 275, 279, 283, 394, 406, 411, 455, 457, 471, 486, 493, 495, 520, 538, 539, 540, 541, 543, 544, 545, 546, 548, 550], "pwl2": 493, "pwl_decai": 471, "pwl_norm": [406, 493, 562], "pwn": [43, 484, 508, 515], "pwne": 470, "py": [383, 384, 390, 397, 400, 402, 404, 413, 414, 420, 425, 427, 428, 436, 441, 445, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 503, 504, 506, 507, 508, 509, 522, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 582], "py310": 386, "py35": 442, "pycharm": 426, "pydant": [16, 84, 90, 105, 126, 382, 429, 448, 450, 467], "pydantic_cor": [16, 84, 90, 105, 126], "pydanticdeprecatedsince20": 467, "pydanticserializationerror": [16, 84, 90, 105, 126], "pydanticundefin": [16, 84, 90, 105, 126], "pydata": [437, 451], "pydocstyl": 384, "pyfact": [423, 441], "pyflak": 437, "pyirf": 450, "pyjok": 382, "pymc": 401, "pymotw": 582, "pypi": [400, 410, 413, 414, 416, 417], "pyplot": [19, 20, 26, 66, 67, 83, 131, 156, 220, 221, 224, 228, 230, 231, 232, 237, 243, 244, 247, 251, 253, 255, 256, 257, 262, 267, 269, 270, 271, 272, 275, 279, 371, 376, 420, 454, 455, 456, 457, 459, 460, 461, 462, 463, 464, 465, 467, 468, 469, 470, 471, 472, 473, 475, 476, 477, 478, 479, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 497, 498, 499, 500, 506, 507, 508, 514, 515, 516, 522, 524, 525, 526, 528, 531, 539, 541, 545, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 569, 570, 571, 572, 573, 574, 575], "pyproject": 432, "pyregion": 397, "pytest": [383, 384, 386, 414, 443], "python": [11, 16, 84, 90, 105, 126, 143, 310, 351, 382, 386, 387, 388, 392, 393, 395, 396, 397, 399, 400, 401, 402, 403, 404, 409, 410, 413, 414, 415, 416, 417, 418, 419, 421, 423, 424, 425, 427, 428, 435, 437, 440, 441, 442, 443, 444, 445, 446, 449, 454, 455, 456, 457, 459, 460, 461, 462, 463, 464, 465, 467, 468, 469, 470, 471, 472, 473, 475, 476, 477, 478, 479, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 497, 498, 499, 500, 502, 504, 506, 507, 508, 510, 521, 522, 536, 538, 539, 540, 541, 542, 543, 544, 545, 546, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 569, 570, 571, 572, 573, 574, 575, 576, 577, 579, 580, 582], "python3": [347, 417, 454, 456, 459, 460, 461, 462, 463, 464, 465, 467, 468, 469, 470, 471, 472, 473, 475, 476, 477, 478, 479, 481, 483, 484, 485, 487, 489, 490, 491, 492, 493, 495, 497, 498, 499, 500, 506, 507, 508, 546, 554, 570], "python_execut": [454, 456, 459, 460, 461, 462, 463, 464, 465, 467, 468, 469, 470, 471, 472, 473, 476, 477, 478, 479, 483, 484, 485, 487, 489, 490, 491, 492, 493, 495, 497, 498, 499, 500, 506, 507, 508], "python_vers": [454, 456, 459, 460, 461, 462, 463, 464, 465, 467, 468, 469, 470, 471, 472, 473, 476, 477, 478, 479, 483, 484, 485, 487, 489, 490, 491, 492, 493, 495, 497, 498, 499, 500, 506, 507, 508], "pytorch": 401, "pyx": [386, 414], "pyyaml": [382, 400, 424, 428], "q": [26, 83, 87, 91, 378, 483], "q1cm": 489, "qdlat_i": 489, "qol": 451, "qtabl": [87, 91, 398, 481], "quadrat": [490, 500, 508, 585], "qualiti": [204, 403, 443, 444, 449, 494, 507, 522, 580, 587], "quantifi": [450, 470, 481, 482, 495], "quantiti": [13, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 45, 46, 47, 50, 51, 52, 53, 54, 71, 74, 75, 80, 83, 86, 87, 88, 91, 94, 96, 100, 103, 104, 106, 107, 109, 110, 111, 113, 114, 115, 120, 122, 124, 125, 126, 127, 128, 129, 130, 132, 133, 134, 135, 136, 138, 139, 140, 141, 143, 144, 145, 148, 149, 150, 151, 152, 153, 155, 156, 157, 159, 162, 163, 164, 165, 166, 167, 168, 170, 179, 180, 181, 183, 187, 188, 189, 190, 193, 194, 195, 196, 198, 199, 200, 203, 204, 205, 206, 207, 208, 209, 210, 216, 218, 220, 221, 223, 224, 225, 226, 227, 228, 230, 231, 232, 233, 236, 237, 238, 239, 240, 241, 242, 243, 244, 247, 250, 251, 253, 254, 255, 256, 257, 258, 262, 263, 264, 265, 266, 267, 269, 270, 271, 272, 275, 276, 277, 278, 279, 280, 285, 291, 292, 293, 296, 297, 298, 299, 301, 306, 309, 310, 312, 314, 316, 317, 322, 340, 342, 343, 354, 358, 383, 384, 389, 392, 394, 397, 398, 399, 401, 406, 407, 410, 411, 426, 428, 432, 435, 436, 444, 445, 446, 454, 461, 463, 471, 472, 473, 477, 481, 482, 484, 485, 488, 489, 490, 491, 493, 497, 499, 500, 508, 514, 515, 516, 518, 522, 535, 561, 570, 572, 581, 584, 586], "quantity_support": [488, 539], "quasar": 139, "quentin": [401, 405, 406, 427, 428, 429, 430, 431, 432, 435, 437, 438, 446, 447, 448, 449, 450, 451], "queri": [399, 440, 484], "question": [350, 386, 388, 390, 391, 392, 394, 395, 396, 397, 400, 402, 407, 419, 424, 425, 443, 444, 445, 469, 508, 522, 523, 582], "questionnair": [390, 443], "quetin": 429, "quick": [83, 88, 103, 106, 110, 111, 149, 150, 152, 153, 154, 155, 156, 157, 162, 163, 164, 165, 166, 168, 383, 386, 403, 414, 463, 464, 467, 469, 471, 478, 485, 488, 492, 497, 499, 500, 502, 508, 510, 519], "quickest": 384, "quickli": [383, 384, 386, 388, 399, 400, 403, 409, 412, 414, 416, 442, 459, 467, 482, 499, 526, 582], "quicklook": 83, "quickplot": 196, "quicksort": [87, 91], "quickstart": 421, "quiescent": 548, "quit": [87, 91, 383, 411, 471], "quival": 394, "quot": [74, 283, 383, 384, 483], "r": [17, 18, 21, 22, 24, 25, 26, 27, 28, 30, 35, 36, 39, 40, 51, 53, 54, 86, 87, 91, 157, 192, 205, 311, 383, 384, 408, 414, 460, 468, 472, 487, 489, 506, 512, 527, 531, 539, 540, 541, 545, 548], "r1rswlfq": 493, "r5s3ni2r": 467, "r68": [83, 113, 114, 156, 165, 168], "r70": [67, 484], "r9rf1lwu": 481, "r_": [17, 18, 21, 22, 24, 25, 27, 28, 35, 36, 39, 40, 50, 52, 53, 263, 264, 483, 541, 544, 545], "r_0": [30, 33, 38, 48, 227, 239, 263, 492, 539, 541, 545], "r_1": [39, 48], "r_eval": 239, "r_exp": [36, 48], "r_in": [44, 170, 180, 263, 465, 532], "r_m": 541, "r_out": 44, "r_out_max": 170, "r_out_pwn": 43, "r_sun": 38, "ra": [67, 83, 85, 87, 88, 91, 94, 143, 144, 178, 383, 384, 396, 399, 454, 459, 461, 463, 465, 469, 472, 476, 477, 479, 481, 484, 489, 491, 497, 498, 499, 500, 507, 508, 510, 522, 526, 586], "ra_pnt": 500, "ra_tru": [383, 396], "rad": [33, 83, 88, 103, 106, 110, 111, 113, 114, 115, 156, 162, 164, 165, 166, 167, 168, 178, 191, 265, 399, 437, 449, 461, 485, 488, 489, 498, 527, 528, 531, 575], "rad_axi": [103, 106, 110, 111, 115, 165, 168, 485, 488, 489, 522], "rad_di": [45, 512], "rad_index": 162, "rad_max": [82, 83, 87, 88, 161, 167, 184, 437, 446, 448, 449, 461], "rad_max_2d": [87, 167, 177, 182, 184, 461], "radec": [83, 94, 149, 150, 151, 152, 155, 156, 157, 158, 159, 162, 164, 166, 167, 383, 384, 488, 490, 508], "radecsi": 546, "radesysa": 546, "radi": [251, 558], "radial": [28, 30, 35, 36, 39, 40, 45, 131, 192, 196, 336, 383, 394, 402, 407, 425, 440, 442, 450, 471, 473, 489, 497, 510, 512, 528, 531], "radian": [17, 18, 21, 22, 24, 25, 27, 201, 222, 223, 227, 236, 239, 252, 254, 263, 264, 266, 268, 274, 278], "radiat": [228, 522, 544, 545, 558], "radiative_model": [251, 558], "radii": [27, 483, 498, 540], "radio": [139, 397, 490], "radiobutton": [467, 475, 490, 506, 507], "radiu": [16, 17, 18, 21, 22, 24, 25, 27, 33, 34, 38, 43, 44, 50, 51, 52, 53, 54, 72, 82, 83, 91, 96, 103, 106, 110, 111, 124, 129, 130, 156, 162, 164, 165, 166, 168, 170, 178, 180, 196, 206, 208, 209, 226, 227, 236, 239, 250, 252, 254, 263, 264, 266, 268, 274, 276, 278, 308, 309, 342, 384, 397, 399, 406, 407, 425, 434, 435, 439, 449, 454, 456, 459, 460, 462, 463, 464, 465, 467, 469, 471, 472, 476, 477, 479, 481, 483, 485, 488, 489, 491, 492, 493, 494, 497, 506, 507, 508, 515, 516, 529, 531, 532, 535, 539, 540, 541, 544, 545], "radius_inn": [52, 53], "radius_max": [342, 473], "radius_min": 342, "radius_reverse_shock": [50, 53, 515], "radmax": [437, 438, 449, 450], "radmax2d": [83, 88, 161, 184, 435, 451, 461], "rai": [11, 19, 20, 26, 52, 53, 57, 59, 63, 66, 83, 93, 124, 128, 129, 132, 134, 135, 139, 171, 228, 282, 283, 298, 299, 330, 331, 383, 389, 394, 395, 397, 401, 412, 414, 416, 420, 421, 426, 442, 444, 449, 450, 454, 455, 456, 459, 460, 461, 462, 463, 464, 465, 467, 468, 469, 470, 471, 472, 473, 476, 477, 478, 479, 484, 485, 487, 489, 490, 491, 492, 493, 494, 495, 497, 498, 499, 500, 506, 507, 508, 510, 512, 513, 517, 518, 519, 522, 525, 527, 529, 531, 532, 548, 579, 580, 581, 582, 583, 584, 587], "rais": [16, 26, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 72, 84, 86, 87, 90, 91, 92, 100, 105, 126, 197, 202, 226, 228, 250, 274, 275, 276, 278, 310, 361, 383, 397, 406, 407, 410, 411, 429, 446, 449, 450, 451, 472], "raise_error": [16, 84, 90, 105, 126], "raj2000": [484, 508], "ran": [413, 497], "random": [6, 33, 42, 45, 46, 47, 87, 91, 103, 104, 106, 109, 110, 111, 154, 165, 168, 195, 196, 198, 204, 207, 208, 225, 233, 238, 240, 241, 242, 258, 265, 277, 280, 292, 332, 333, 334, 335, 336, 337, 338, 339, 340, 386, 395, 396, 399, 412, 427, 439, 443, 471, 493, 522, 583, 584, 586], "random_se": 395, "random_st": [33, 42, 45, 46, 47, 103, 104, 106, 109, 110, 111, 154, 165, 168, 195, 196, 198, 204, 207, 208, 225, 233, 238, 240, 241, 242, 258, 265, 277, 280, 292, 332, 333, 334, 337, 338, 339, 340, 383, 396, 462, 471, 472], "randomli": [46, 101, 118, 383], "randomnumb": 337, "randomst": [33, 42, 45, 46, 47, 103, 104, 106, 109, 110, 111, 154, 165, 168, 195, 196, 198, 204, 207, 208, 225, 233, 238, 240, 241, 242, 258, 265, 277, 280, 292, 332, 334, 337, 338, 339, 340, 383], "rang": [17, 18, 19, 20, 21, 22, 24, 25, 26, 27, 67, 71, 74, 75, 80, 83, 87, 91, 92, 100, 101, 102, 103, 106, 110, 111, 128, 135, 152, 165, 167, 168, 181, 193, 194, 197, 199, 200, 203, 204, 206, 216, 218, 220, 221, 224, 225, 227, 228, 230, 231, 232, 233, 237, 238, 240, 241, 242, 243, 244, 247, 250, 251, 253, 255, 256, 257, 258, 262, 265, 267, 269, 270, 271, 272, 275, 276, 277, 279, 280, 285, 323, 335, 337, 338, 339, 376, 383, 389, 395, 396, 398, 407, 426, 431, 432, 435, 443, 444, 446, 456, 459, 461, 462, 464, 467, 468, 470, 472, 477, 478, 479, 482, 484, 485, 486, 487, 488, 490, 491, 493, 494, 495, 498, 499, 506, 507, 508, 518, 520, 522, 541, 551, 580, 584], "rangl": 19, "rapid": [139, 298, 389, 392, 407, 408], "rare": [382, 383, 402, 490], "raster": [95, 196], "rate": [44, 45, 83, 88, 149, 150, 181, 188, 292, 340, 396, 420, 444, 459, 461, 479, 489, 497, 498, 500, 512, 525, 581], "rather": [120, 124, 128, 132, 135, 388, 401, 404, 443, 446, 448, 450, 451, 456, 487, 490, 508, 518, 540, 584], "ratio": [106, 111, 170, 194, 195, 196, 293, 307, 407, 454, 479, 497, 532, 581, 583, 584, 585, 587], "ravel": [194, 471], "raw": [125, 181, 508], "rc": [195, 196, 198, 204, 207, 208, 380, 490], "rc_context": [195, 196, 198, 204, 207, 208, 490], "rc_param": [195, 196, 198, 204, 207, 208, 490], "rcparam": 380, "rdbu": 506, "rdbu_r": [103, 106, 110, 111], "re": [87, 91, 96, 127, 128, 133, 172, 195, 196, 198, 204, 207, 208, 213, 308, 309, 376, 383, 384, 386, 388, 390, 391, 397, 398, 399, 401, 404, 405, 406, 407, 419, 423, 435, 437, 444, 457, 459, 460, 465, 467, 468, 469, 478, 487, 488, 492, 494, 498, 506, 508, 520, 522, 543, 582], "reach": [53, 134, 209, 388, 393, 396, 412, 493], "reactiv": 446, "reactivenestedsampl": 412, "read": [15, 16, 83, 85, 86, 87, 88, 91, 94, 100, 101, 102, 103, 106, 107, 110, 111, 116, 119, 120, 124, 125, 127, 129, 131, 133, 135, 143, 144, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 159, 160, 162, 163, 164, 165, 166, 167, 168, 177, 195, 196, 198, 202, 203, 204, 207, 208, 213, 226, 228, 241, 250, 277, 278, 279, 284, 286, 288, 289, 346, 349, 369, 371, 376, 378, 383, 384, 386, 388, 393, 394, 395, 396, 399, 403, 405, 407, 409, 410, 411, 416, 418, 429, 432, 435, 443, 444, 446, 449, 450, 451, 455, 459, 460, 461, 465, 467, 470, 471, 482, 485, 486, 487, 488, 493, 495, 497, 498, 499, 502, 506, 508, 519, 520, 522, 524, 525, 526, 528, 546, 576, 577, 582, 585], "read_arf": 107, "read_bkg": 107, "read_builtin": [228, 455, 548], "read_covari": [226, 250], "read_dataset": 15, "read_fil": 412, "read_lazi": 437, "read_model": 15, "read_pha": 107, "read_rmf": 107, "read_xspec_model": 279, "readabl": [364, 394, 437, 460, 506], "reader": [410, 454, 462, 464, 467, 469, 472, 475, 478, 497], "readi": [393, 410, 419, 581], "readili": [403, 412], "readm": [386, 409], "readthedoc": [13, 128, 188, 203, 213, 279, 386, 403, 426, 441, 487, 488, 497, 519, 522, 533, 535], "real": [51, 383, 386, 414, 462, 463, 465, 472, 487, 491, 518], "realis": [388, 397, 409], "realist": 411, "realiti": 455, "realiz": [389, 581], "realli": [383, 390, 397, 400, 462, 475, 487], "rearrang": 403, "reason": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 383, 388, 389, 390, 391, 394, 395, 396, 398, 400, 402, 404, 409, 412, 443, 455, 471, 487, 495, 499, 518, 582], "reassign": [19, 20, 26, 220, 221, 222, 223, 224, 225, 226, 227, 228, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 247, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 274, 275, 276, 277, 278, 279, 280, 281], "rebas": [383, 397], "rebin": [127, 147, 398, 437, 450, 477, 482, 485], "rebuild": [16, 84, 90, 105, 126, 468], "recarrai": [87, 91, 156, 166], "receiv": [401, 403, 404, 406, 408], "recent": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 87, 91, 393, 397, 398, 399, 400, 403, 412, 417, 424, 438, 444, 468, 497, 499], "recip": [385, 399, 413, 421, 435, 479, 522, 523, 581, 584], "reco": [103, 106, 110, 111, 152, 185, 383, 389, 398, 407, 445, 446, 454, 485, 489, 499, 581], "reco_exposur": [124, 451], "reco_psf": [103, 106, 110, 111, 115, 489, 499], "recogn": [454, 462, 464, 467, 469, 475, 478, 497], "recognis": [394, 582], "recognit": 409, "recommend": [92, 100, 101, 102, 182, 226, 250, 290, 322, 323, 382, 383, 384, 386, 390, 392, 400, 409, 414, 415, 417, 420, 427, 444, 459, 460, 461, 470, 485, 487, 489, 493, 498, 506, 522, 529, 534, 535, 582, 583, 586], "recomput": [127, 407, 465], "recompute_ul": 127, "recon_vers": [498, 508], "reconstruct": [83, 103, 104, 106, 109, 110, 111, 113, 114, 115, 124, 134, 135, 142, 149, 150, 152, 153, 154, 157, 167, 168, 181, 188, 383, 389, 394, 396, 432, 447, 454, 456, 459, 462, 464, 465, 467, 471, 475, 478, 485, 489, 491, 495, 499, 518, 520, 526, 527, 528, 535, 581], "recopsfmap": [161, 446, 449], "record": [83, 88, 383, 388, 389, 409, 497], "recov": 399, "rectangl": [223, 227, 236, 239, 252, 263, 264, 268, 274, 278, 343, 397, 473, 531], "rectangleskyregion": [206, 222, 223, 278, 342, 343, 397, 456, 483, 491, 531, 535], "rectangular": [473, 531, 535], "recurr": 398, "recurs": [350, 410], "red": [102, 292, 298, 373, 454, 455, 459, 462, 465, 467, 470, 483, 494, 495, 539, 540], "redesign": 392, "redistribut": 526, "redo": 479, "redshift": [19, 20, 228, 406, 508, 548], "redshift_scan": 455, "reduc": [6, 11, 15, 100, 103, 106, 110, 111, 163, 165, 168, 173, 183, 195, 196, 198, 200, 204, 207, 208, 389, 390, 392, 394, 395, 399, 402, 404, 409, 410, 416, 423, 428, 435, 444, 450, 453, 455, 456, 457, 460, 461, 462, 467, 468, 471, 475, 476, 477, 478, 481, 491, 494, 496, 499, 502, 518, 522, 532, 535, 540, 541, 580, 581, 582], "reduce_data": 399, "reduce_over_ax": [195, 196, 198, 204, 207, 208, 464, 489, 499], "reduct": [6, 11, 171, 389, 395, 396, 399, 403, 404, 405, 410, 416, 429, 431, 449, 453, 465, 469, 470, 473, 479, 485, 488, 491, 492, 494, 496, 502, 519, 522, 529, 531, 532, 580, 581], "ref": [83, 94, 103, 110, 124, 129, 135, 194, 203, 206, 226, 250, 384, 407, 463, 469, 473, 477, 484, 485, 486, 488, 490, 498, 508, 535, 570, 571, 572, 573, 574, 575, 581, 582], "ref_templ": [16, 84, 90, 105, 126], "refactor": [383, 395, 397, 398, 399, 406, 425, 426, 427, 429, 430, 431, 432, 435, 437, 439, 441, 443], "refer": [16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 50, 52, 53, 57, 59, 63, 67, 69, 77, 83, 84, 85, 86, 87, 88, 90, 91, 94, 102, 103, 105, 106, 107, 110, 111, 113, 114, 115, 125, 126, 127, 128, 130, 135, 136, 138, 139, 145, 157, 171, 172, 175, 178, 179, 182, 183, 184, 187, 188, 190, 205, 206, 207, 208, 213, 220, 221, 224, 225, 228, 230, 231, 232, 233, 237, 238, 240, 241, 242, 243, 244, 247, 251, 253, 255, 256, 257, 258, 262, 265, 267, 269, 270, 271, 272, 275, 277, 279, 280, 283, 292, 294, 298, 299, 300, 301, 306, 307, 337, 338, 364, 365, 366, 367, 383, 384, 389, 391, 394, 395, 397, 399, 401, 406, 407, 408, 409, 410, 412, 414, 421, 435, 442, 443, 451, 455, 456, 457, 459, 460, 461, 462, 463, 464, 467, 468, 469, 470, 471, 472, 475, 476, 477, 478, 479, 481, 482, 484, 485, 486, 487, 489, 490, 492, 493, 495, 497, 498, 499, 506, 507, 508, 511, 518, 520, 533, 534, 535, 538, 539, 540, 541, 542, 543, 544, 545, 546, 548, 550, 552, 553, 554, 556, 557, 559, 560, 562, 563, 564, 565, 566, 567, 569, 570, 571, 572, 573, 574, 575, 576, 577, 584, 586], "referenc": [383, 581], "reference_flux": [19, 20, 26, 220, 221, 224, 228, 230, 231, 232, 237, 243, 244, 247, 251, 253, 255, 256, 257, 262, 267, 269, 270, 271, 272, 275, 279], "reference_map": 490, "reference_model": [125, 127, 136, 145, 454, 455, 463, 468, 486], "reference_model_default": [125, 127], "reference_spectral_model": [125, 127], "reference_tim": [86, 88, 103, 106, 110, 111, 199, 205, 225, 233, 238, 240, 241, 242, 258, 265, 277, 280, 448, 449, 472, 478, 482, 489, 490, 577], "refit": 486, "reflect": [173, 177, 178, 179, 183, 192, 392, 397, 399, 402, 404, 416, 428, 435, 437, 440, 441, 444, 455, 456, 459, 460, 461, 469, 477, 481, 491, 530, 581], "reflected_bkg_mak": 489, "reflectedbgestim": 399, "reflectedregion": 455, "reflectedregionsbackgroundmak": [173, 178, 429, 451, 456, 459, 461, 469, 477, 481, 489], "reflectedregionsfind": [177, 183, 427, 531], "refpix": [206, 207, 208], "refresh": [87, 91], "refus": 383, "reg": [103, 106, 110, 111, 491, 493], "reg_dataset": 485, "regard": [407, 410, 459], "regardless": [87, 91], "regeard": [447, 448, 449, 450, 451], "regi": [389, 394, 395, 399], "region": [6, 27, 83, 91, 100, 103, 106, 108, 110, 111, 116, 119, 124, 125, 127, 129, 131, 134, 139, 153, 154, 160, 165, 168, 170, 171, 172, 175, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 188, 189, 192, 194, 195, 196, 198, 203, 204, 206, 207, 208, 210, 213, 222, 223, 226, 227, 236, 239, 250, 252, 254, 263, 264, 266, 268, 274, 276, 278, 279, 282, 293, 307, 341, 342, 343, 344, 345, 379, 380, 382, 384, 387, 389, 390, 398, 399, 400, 402, 405, 407, 412, 416, 427, 428, 429, 431, 435, 437, 438, 440, 441, 443, 444, 446, 448, 449, 451, 455, 460, 462, 463, 464, 465, 467, 468, 469, 470, 471, 472, 473, 476, 477, 478, 479, 481, 483, 484, 485, 486, 487, 490, 493, 495, 497, 498, 499, 500, 506, 507, 508, 517, 518, 519, 520, 522, 529, 530, 532, 533, 534, 539, 540, 558, 580, 581, 583, 584, 585], "region_coord": 203, "region_ev": 479, "region_find": [177, 461], "region_io": 203, "region_map": [204, 208, 535], "region_map_1": 535, "region_map_2": 535, "region_mask": [83, 194, 206, 397, 459, 465, 469, 485, 489, 491, 507, 529, 531, 532], "region_nd_map": 204, "region_new": 344, "region_pix": 493, "region_weight": 206, "regionfind": [178, 179, 183], "regiongeom": [103, 106, 110, 111, 125, 129, 175, 182, 184, 185, 186, 188, 189, 204, 223, 227, 236, 239, 252, 263, 264, 266, 268, 274, 278, 397, 398, 405, 416, 431, 432, 435, 454, 456, 459, 461, 462, 469, 473, 477, 478, 479, 481, 484, 485, 486, 489, 498, 508, 518, 531, 534], "regionndmap": [26, 107, 110, 111, 134, 176, 177, 182, 184, 195, 196, 198, 203, 207, 208, 223, 227, 236, 239, 241, 252, 263, 264, 268, 274, 275, 278, 380, 397, 416, 431, 432, 435, 438, 446, 449, 472, 486, 498, 518, 534, 577], "regions_ds9": 491, "regionsfind": [177, 178, 183, 437], "regist": 493, "registri": [55, 98, 121, 161, 173, 246, 248, 260, 261, 273, 404, 411, 428, 431, 432, 435, 444, 484, 493], "regress": 386, "regul": 409, "regular": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 194, 202, 206, 392, 411, 412, 437, 449, 475, 490, 491, 499], "regulargridinterpol": [322, 383], "regularis": 411, "regularli": [411, 500], "reichardt": 439, "reimplement": 394, "rej_sampl": 396, "reject": [387, 388, 396], "rel": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 67, 82, 87, 88, 91, 106, 107, 111, 135, 149, 150, 151, 152, 155, 156, 157, 159, 162, 164, 166, 167, 194, 195, 196, 198, 203, 204, 205, 206, 207, 208, 263, 283, 297, 340, 398, 409, 435, 478, 482, 499, 545, 584], "rel_reduction_of_f_": 487, "relat": [11, 13, 67, 83, 85, 211, 298, 389, 391, 394, 396, 397, 400, 402, 403, 404, 409, 412, 414, 431, 432, 444, 450, 485, 493, 497, 512, 579, 584], "relative_variability_amplitud": 482, "relative_variability_error": 482, "relative_variability_signific": 482, "relativist": 558, "releas": [11, 51, 65, 95, 385, 387, 388, 390, 391, 397, 400, 401, 410, 415, 417, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 456, 459, 460, 468, 476, 477, 481, 497, 499, 500, 506, 507, 510, 522, 524, 525, 526, 528], "relev": [125, 291, 293, 366, 383, 389, 398, 403, 407, 412, 413, 459, 460, 463, 476, 477, 478, 481, 492, 494, 497, 499, 500, 506, 507, 518, 519, 586], "reli": [125, 383, 388, 389, 393, 394, 398, 402, 407, 408, 427, 432, 435, 446, 457, 467, 491, 510, 584], "reliabl": [386, 417, 465, 487, 491, 583], "remain": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 87, 91, 100, 388, 389, 390, 391, 396, 400, 409, 425, 444, 461, 492, 528], "remaind": 499, "remark": 461, "rememb": [383, 397, 487, 502, 582], "remi": [405, 406, 427, 428, 429, 430, 431, 432, 435, 446, 447, 448, 449, 450, 451], "remind": [200, 409, 463, 469, 486], "remnant": [28, 52, 456, 470, 493, 513], "remot": [386, 413], "remov": [13, 16, 84, 87, 90, 91, 92, 96, 100, 105, 126, 165, 168, 180, 193, 194, 199, 202, 203, 206, 208, 250, 309, 386, 390, 391, 393, 394, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 412, 415, 424, 425, 426, 427, 428, 429, 430, 431, 432, 435, 436, 437, 439, 440, 441, 442, 443, 444, 447, 448, 449, 450, 451, 459, 465, 467, 473, 479, 485, 491, 494, 497, 498, 511, 522, 531], "remove_column": [87, 91], "remove_indic": [87, 91], "remove_row": [87, 91], "renam": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 87, 91, 127, 193, 194, 195, 196, 198, 199, 200, 203, 204, 206, 207, 208, 386, 393, 394, 402, 403, 406, 423, 426, 428, 429, 430, 431, 435, 445, 446, 449, 582], "rename_ax": [193, 194, 195, 196, 198, 199, 203, 204, 206, 207, 208, 446], "rename_column": [87, 91, 127], "rename_dupl": [87, 91], "render": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 87, 91, 361, 383, 384, 391, 443], "renorm": [465, 529], "renormalis": 180, "reoptim": [128, 132, 133, 213, 425, 455, 473, 476, 486, 487, 495, 506], "reorder": 451, "reorder_ax": [195, 196, 198, 204, 207, 208, 449], "reorgan": 435, "reorganis": 403, "repeat": [384, 467, 499], "repl": 383, "replac": [15, 87, 91, 100, 103, 106, 110, 111, 153, 154, 160, 165, 193, 194, 196, 199, 203, 204, 206, 208, 276, 289, 383, 393, 394, 397, 401, 404, 410, 412, 417, 426, 427, 429, 431, 432, 449, 450, 451, 479], "replace_axi": [193, 194, 203, 206], "replace_column": [87, 91], "repo": [384, 391, 413, 414, 423, 436], "report": [87, 386, 399, 413, 414, 423, 437, 438, 443], "repositori": [87, 91, 383, 386, 388, 391, 393, 409, 413, 435, 444, 471, 500], "repres": [13, 16, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 47, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 70, 71, 72, 74, 75, 76, 78, 79, 80, 84, 87, 90, 91, 103, 105, 106, 110, 111, 126, 194, 196, 198, 200, 201, 203, 205, 266, 310, 318, 328, 383, 394, 395, 396, 397, 401, 404, 405, 406, 407, 425, 449, 455, 472, 473, 484, 486, 487, 489, 490, 491, 493, 498, 508, 517, 518, 520, 524, 525, 526, 528, 534, 579, 580, 581, 586], "represent": [16, 19, 20, 26, 83, 84, 86, 87, 90, 91, 105, 126, 220, 221, 224, 228, 230, 231, 232, 237, 243, 244, 247, 251, 253, 255, 256, 257, 262, 267, 269, 270, 271, 272, 275, 279, 383, 397, 410, 425, 427, 449, 457, 484, 490, 493, 534], "reprocess": 389, "reproduc": [94, 102, 127, 384, 399, 400, 401, 403, 409, 410, 415, 417, 444, 489], "reproject": [181, 195, 196, 198, 204, 207, 208, 379, 383, 389, 397, 400, 407, 429, 436, 444, 446, 450, 490, 491], "reproject_by_imag": [195, 196, 198, 204, 207, 208, 450], "reproject_to_geom": [195, 196, 198, 204, 207, 208, 446], "request": [85, 125, 127, 384, 387, 388, 390, 391, 392, 393, 394, 395, 397, 403, 407, 408, 409, 411, 414, 422, 471, 486, 491, 520], "requir": [16, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 43, 44, 82, 83, 84, 85, 87, 88, 90, 91, 95, 103, 105, 106, 110, 111, 112, 117, 126, 127, 130, 135, 149, 150, 152, 155, 156, 157, 162, 164, 167, 172, 195, 196, 197, 198, 199, 200, 203, 204, 205, 207, 208, 209, 310, 358, 362, 363, 381, 388, 389, 390, 392, 393, 394, 395, 396, 397, 398, 399, 405, 406, 407, 408, 409, 411, 412, 413, 415, 417, 423, 428, 429, 430, 431, 436, 437, 439, 440, 441, 442, 445, 446, 447, 451, 455, 456, 461, 465, 468, 477, 478, 479, 481, 482, 485, 488, 490, 491, 493, 497, 507, 520, 522, 535], "require_ev": 82, "required_ax": [149, 150, 151, 152, 153, 154, 155, 156, 157, 159, 160, 162, 164, 165, 166, 167, 168, 488], "required_hdu": 438, "required_irf": [16, 82, 460, 461, 464, 465, 467, 506], "required_nam": [197, 199, 200, 205], "required_paramet": [156, 164, 166], "rerun": [398, 481], "resampl": [103, 106, 110, 111, 127, 147, 148, 153, 193, 194, 195, 196, 197, 198, 199, 203, 204, 206, 207, 208, 378, 435, 437, 482, 522], "resample_axi": [127, 193, 194, 195, 196, 198, 203, 204, 206, 207, 208, 378, 432, 477, 482], "resample_energy_axi": [103, 106, 110, 111, 153, 432, 437, 485], "resample_energy_edg": [459, 522], "resampled_energy_edg": 148, "resampled_map": [195, 196, 198, 204, 207, 208], "rescal": 489, "research": [399, 409], "reset": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 103, 106, 110, 111, 234, 276, 384, 432], "reset_data_cach": [103, 106, 110, 111], "reset_to_default": 234, "reshap": [195, 196, 198, 204, 207, 208, 454, 472, 488, 490], "resid": [405, 493], "residu": [72, 102, 103, 106, 110, 111, 172, 394, 395, 399, 427, 432, 438, 445, 451, 465, 485, 487, 498, 518, 531, 581], "resolut": [52, 152, 153, 157, 194, 206, 392, 394, 396, 397, 443, 449, 451, 484, 498], "resolv": [16, 84, 90, 105, 126, 384, 386, 393, 397, 398, 405, 406, 419, 425, 444, 451, 453, 477, 480, 502, 531], "resort": 464, "resourc": [443, 502], "respect": [15, 16, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 47, 83, 84, 87, 90, 91, 105, 107, 126, 127, 139, 194, 196, 206, 208, 290, 383, 393, 398, 409, 411, 432, 451, 463, 465, 478, 486, 490, 491, 499, 520, 535, 585], "respond": 409, "respons": [6, 109, 152, 153, 154, 157, 159, 160, 178, 383, 389, 390, 392, 394, 395, 396, 398, 399, 407, 409, 416, 442, 443, 444, 445, 456, 459, 460, 461, 462, 475, 478, 488, 489, 492, 497, 499, 500, 502, 506, 507, 518, 519, 524, 526, 528, 580, 581], "rest": [26, 386, 400, 402, 484, 517], "restor": [19, 20, 26, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 217, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 247, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 274, 275, 276, 277, 278, 279, 280, 281, 492], "restore_statu": [217, 219, 226, 250, 495], "restore_valu": [217, 219, 226, 250], "restrict": [87, 91, 397, 467, 485, 491], "restructur": [384, 398, 399, 400, 402, 404, 410, 414, 429, 435, 436, 437, 438, 440, 449], "result": [16, 46, 74, 84, 86, 87, 90, 91, 92, 102, 103, 105, 106, 110, 111, 120, 122, 124, 125, 126, 127, 128, 129, 131, 132, 133, 135, 137, 138, 143, 145, 146, 157, 163, 165, 168, 181, 185, 186, 191, 193, 194, 195, 196, 198, 200, 203, 204, 206, 207, 208, 212, 213, 214, 215, 226, 250, 278, 289, 292, 310, 376, 382, 383, 384, 386, 388, 390, 392, 393, 394, 395, 396, 399, 401, 402, 405, 409, 411, 412, 417, 420, 427, 435, 437, 438, 443, 445, 449, 450, 451, 455, 457, 459, 461, 462, 467, 469, 471, 472, 475, 477, 478, 479, 482, 484, 485, 487, 490, 491, 494, 495, 498, 499, 500, 506, 507, 517, 520, 522, 535, 570, 581, 583, 584], "result1": 455, "result2": 492, "result_ecpl": 457, "result_joint": [456, 459, 467], "result_list": 376, "result_log_parabola": 457, "result_minuit": 487, "result_pwl": 457, "result_scipi": 487, "result_stack": 459, "results_joint": 468, "results_prior": 495, "results_simplex": 487, "results_t": 470, "retain": [484, 535], "retriev": [87, 91, 407, 409, 456, 457, 459, 490, 493, 494, 499, 507, 519, 534, 535], "return": [16, 19, 20, 26, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 43, 44, 45, 46, 47, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 77, 80, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 96, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 115, 116, 117, 118, 119, 120, 122, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 159, 160, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 213, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 247, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 274, 275, 276, 277, 278, 279, 280, 281, 282, 284, 287, 289, 290, 291, 292, 293, 294, 296, 297, 298, 299, 300, 301, 306, 307, 308, 309, 310, 312, 314, 316, 317, 321, 323, 328, 332, 334, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 349, 350, 353, 354, 355, 364, 365, 366, 367, 368, 371, 373, 374, 376, 378, 379, 389, 393, 394, 395, 396, 397, 398, 406, 407, 410, 411, 412, 428, 429, 432, 435, 438, 444, 446, 451, 459, 461, 465, 469, 473, 477, 478, 481, 484, 485, 486, 487, 489, 490, 491, 493, 495, 508, 512, 534, 535, 567, 584], "return_delta": 340, "return_diff": 340, "return_unit": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40], "reus": [399, 432, 450], "reval": 541, "reveal": 412, "revers": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 50, 53, 87, 91, 92, 100, 199, 250, 490, 515], "reverse_lon_radec": 158, "revert": 451, "review": [386, 391, 392, 393, 396, 397, 399, 400, 402, 403, 404, 406, 407, 409, 411, 412, 445, 446, 534], "revis": 403, "revisit": 228, "rework": 430, "rewrit": [389, 392, 399, 430, 440, 441, 443, 444, 445, 582], "rewritten": [442, 445], "rf": 483, "rgb": [378, 380, 449, 454, 459], "rglob": [82, 471, 497], "rhe": 184, "rho": [17, 18, 21, 22, 23, 24, 25, 27], "rho_": [17, 21, 22, 24, 25, 27, 52, 53], "rich": [383, 399], "rid": 389, "right": [21, 24, 25, 27, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 50, 51, 52, 53, 87, 91, 103, 110, 125, 127, 135, 155, 232, 237, 257, 270, 294, 300, 371, 383, 397, 406, 409, 463, 469, 471, 476, 478, 497, 539, 540, 541, 548, 549, 552, 553, 555, 556, 560, 563, 564, 565, 566, 570, 571, 572, 574, 582, 583, 584, 585], "rightarrow": [545, 585], "rigid": 388, "ring": [106, 124, 170, 173, 180, 194, 195, 196, 389, 392, 399, 402, 416, 425, 429, 431, 441, 442, 443, 444, 453, 466, 470, 491, 502, 521, 530, 533, 581], "ring2dkernel": [170, 180], "ring_background": [453, 465, 466], "ring_bkg_mak": 532, "ring_mak": 465, "ringbackgroundestim": [389, 443], "ringbackgroundmak": [170, 173, 429, 465, 489, 532], "rint": 451, "rise": [139, 240, 482, 572], "risk": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 386, 409], "rm": [152, 153, 157, 272, 406, 461, 487, 524, 526, 527, 528, 541, 570, 571, 572, 573, 574, 575], "rmax": [17, 18, 21, 22, 24, 25, 27], "rmf": [107, 108, 111, 152, 153, 154, 441, 459], "rmf_ob": 107, "rmffile": 107, "rmin": [17, 18, 21, 22, 24, 25, 27], "rng": [33, 42, 45, 46, 47, 103, 104, 106, 109, 110, 111, 154, 165, 168, 195, 196, 198, 204, 207, 208, 225, 233, 238, 240, 241, 242, 258, 265, 277, 280, 292, 332, 334, 337, 338, 339, 340, 383], "roadmap": [387, 390, 399, 408, 424, 445], "roberta": [443, 444], "robust": [383, 412, 444], "roellinghoff": 451, "roi": [67, 399, 484, 500, 581], "roi_max": 399, "role": [443, 489], "rolf": 423, "rolk": 581, "rolke2005": [581, 584], "roll": 498, "room": 393, "root": [19, 20, 26, 125, 126, 135, 220, 221, 224, 228, 230, 231, 232, 237, 243, 244, 247, 251, 253, 255, 256, 257, 262, 267, 269, 270, 271, 272, 275, 279, 302, 305, 383, 401, 435, 463, 510, 520, 582, 584], "rosillo": 446, "rotang": 472, "rotat": [51, 54, 178, 179, 183, 188, 227, 236, 239, 472, 531, 539, 540], "rough": [72, 399], "roughli": [120, 386, 391, 397, 399, 402, 403, 442, 465], "round": [87, 91, 193, 194, 195, 196, 198, 200, 203, 204, 206, 207, 208, 412, 459, 534], "round_to_edg": [193, 194, 203, 206], "round_trip": [16, 84, 90, 105, 126], "routin": 423, "row": [56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 87, 91, 143, 152, 318, 354, 377, 398, 407, 410, 446, 449, 459, 462, 472, 473, 481, 484, 487, 490, 497, 499, 500, 508, 517], "row_idx": [67, 87], "row_index": [56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 484], "row_label": 377, "row_specifi": [83, 87, 91], "royalblu": 479, "rpovid": 398, "rspec": [67, 484], "rst": [386, 388, 403, 409, 413, 414, 430, 435], "rtd": 444, "rtol": [135, 358, 383], "rtol_ax": [149, 150, 151, 152, 155, 156, 157, 159, 162, 164, 166, 167, 194, 195, 196, 198, 203, 204, 206, 207, 208], "rtol_wc": 206, "ruben": 443, "rub\u00e9n": 443, "ruiz": [391, 399, 403, 424, 425, 426, 427, 428, 429, 430, 431, 432, 435, 437, 443, 444, 445], "rule": [87, 91, 266, 285, 321, 409, 490, 534], "run": [16, 82, 83, 84, 88, 90, 93, 102, 104, 105, 109, 120, 122, 123, 124, 126, 128, 129, 131, 132, 133, 134, 135, 143, 144, 170, 171, 172, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 193, 194, 203, 206, 213, 330, 331, 357, 376, 382, 383, 384, 390, 391, 393, 396, 398, 399, 400, 403, 405, 407, 411, 412, 413, 414, 415, 420, 426, 427, 430, 431, 442, 444, 445, 449, 451, 454, 455, 456, 457, 462, 463, 464, 465, 467, 468, 469, 471, 475, 477, 478, 479, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 497, 498, 499, 500, 502, 504, 507, 508, 518, 519, 520, 522, 527, 529, 531, 532, 538, 539, 540, 541, 542, 543, 544, 545, 546, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 569, 570, 571, 572, 573, 574, 575, 576, 577], "run_fit": [15, 460, 464, 506], "run_id": [498, 508], "run_multiprocess": 522, "runner": [16, 347, 454, 456, 459, 460, 461, 462, 463, 464, 465, 467, 468, 469, 470, 471, 472, 473, 475, 476, 477, 478, 479, 481, 483, 484, 485, 487, 489, 490, 491, 492, 493, 495, 497, 498, 499, 500, 506, 507, 508, 546, 548, 554, 570, 576, 577], "runtim": [392, 410, 413], "runtimewarn": [461, 465, 471, 481, 500, 570], "rx": 456, "rxj": 456, "rxj1713_2016_250gev": 546, "r\u00e9gi": [389, 392, 393, 397, 398, 400, 402, 404, 405, 406, 407, 408, 410, 412, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 437, 438, 439, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451], "r\u00e9my": [401, 435, 437, 438, 446], "s0167947313003204": [137, 146], "s180": 298, "s2": 277, "s3": 277, "s_0": 522, "s_1": 522, "sae21kkt": 481, "safari": [87, 91], "safe": [99, 102, 103, 106, 110, 111, 153, 154, 160, 165, 168, 173, 181, 383, 395, 397, 409, 429, 431, 432, 446, 447, 448, 449, 451, 456, 459, 485, 491, 507, 518, 580], "safe_mask": [16, 103, 110, 460, 464, 465, 467, 506], "safe_mask_mak": [171, 456, 459, 479, 489, 499, 529, 531, 532], "safe_mask_mask": [461, 469, 477, 481, 489], "safemaskconfig": 16, "safemaskmak": [171, 173, 404, 429, 430, 435, 437, 438, 450, 456, 459, 461, 469, 475, 477, 479, 481, 489, 491, 499, 506, 507, 529, 530, 531, 532], "safer": 412, "safeti": 409, "sagittariu": [33, 38], "saha": 443, "sai": [74, 388, 402, 582], "said": [383, 388, 390, 499, 500, 582], "sake": [471, 487], "saldana": [228, 229, 449, 455, 548], "saldana21": 548, "samantha": 451, "same": [27, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 82, 87, 91, 95, 100, 103, 106, 107, 110, 111, 124, 135, 136, 137, 143, 144, 145, 146, 156, 157, 163, 164, 165, 166, 168, 169, 171, 192, 193, 194, 195, 196, 198, 199, 202, 203, 204, 206, 207, 208, 283, 292, 298, 376, 383, 386, 391, 393, 395, 397, 398, 402, 403, 404, 405, 406, 407, 408, 409, 411, 413, 414, 416, 417, 427, 428, 432, 435, 449, 457, 460, 461, 462, 467, 468, 471, 475, 476, 477, 479, 484, 485, 490, 491, 492, 493, 494, 495, 498, 499, 502, 506, 518, 519, 520, 526, 534, 535, 582], "sampl": [47, 93, 104, 109, 135, 138, 154, 156, 162, 164, 165, 166, 168, 195, 196, 198, 204, 206, 207, 208, 225, 233, 238, 240, 241, 242, 258, 265, 277, 280, 290, 292, 301, 323, 332, 337, 338, 339, 340, 387, 395, 397, 398, 401, 403, 416, 423, 425, 427, 428, 431, 437, 444, 446, 449, 450, 451, 453, 461, 474, 482, 485, 487, 502, 522], "sample_axi": 332, "sample_background": [104, 109, 429], "sample_coord": [154, 165, 168, 195, 196, 198, 204, 207, 208, 429, 431, 446], "sample_edisp": [104, 109], "sample_powerlaw": 402, "sample_psf": [104, 109], "sample_sourc": [104, 109], "sample_spher": [439, 586], "sample_tim": [225, 233, 238, 240, 241, 242, 258, 265, 277, 280, 435, 446, 451], "sampler": [104, 332, 392, 396, 412, 431, 435, 451, 471], "sampler_kwarg": 93, "samplerlikelihood": 412, "saniti": 443, "santiago": 451, "satisfi": [148, 172, 194, 195, 196, 310, 492, 522], "save": [15, 19, 20, 26, 100, 135, 210, 213, 220, 221, 222, 223, 224, 225, 226, 227, 228, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 247, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 274, 275, 276, 277, 278, 279, 280, 281, 383, 391, 399, 407, 411, 412, 451, 455, 467, 468, 471, 487, 491, 492, 499, 519], "savefig": [361, 420], "savez": 210, "saw": 421, "sbpl": [267, 406, 493], "sc": [87, 91], "scalar": [87, 91, 163, 194, 195, 196, 198, 204, 207, 208, 310, 402, 437, 448, 450, 490, 534], "scale": [17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 29, 52, 53, 67, 86, 88, 96, 100, 105, 106, 111, 120, 126, 128, 129, 132, 156, 172, 200, 204, 205, 206, 208, 216, 218, 220, 221, 223, 224, 227, 228, 230, 231, 232, 233, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 247, 251, 252, 253, 254, 255, 256, 257, 258, 262, 263, 264, 265, 267, 269, 270, 271, 272, 275, 277, 278, 279, 287, 290, 309, 322, 323, 324, 340, 364, 365, 366, 376, 384, 392, 397, 398, 401, 406, 412, 430, 435, 436, 444, 447, 448, 449, 451, 460, 463, 472, 473, 476, 477, 478, 482, 483, 484, 486, 488, 489, 490, 493, 494, 495, 497, 506, 508, 510, 548, 569, 570, 571, 572, 573, 574, 575, 576, 577], "scale10": [19, 20, 216, 218, 220, 223, 224, 227, 228, 230, 231, 232, 233, 236, 237, 238, 239, 240, 241, 242, 243, 244, 247, 254, 255, 256, 257, 258, 262, 263, 264, 265, 267, 270, 271, 272, 277, 278, 411, 558], "scale_method": [19, 20, 216, 218, 220, 223, 224, 227, 228, 230, 231, 232, 233, 236, 237, 238, 239, 240, 241, 242, 243, 244, 247, 254, 255, 256, 257, 258, 262, 263, 264, 265, 267, 270, 271, 272, 277, 278, 411, 558], "scale_to_local_dens": [17, 18, 21, 22, 24, 25, 27, 483], "scaled_featur": 309, "scaled_features_irf": [308, 309, 494], "scaledregulargridinterpol": [68, 228, 279, 430, 445], "scalespectralmodel": [128, 129, 132, 261, 406, 493], "scan": [19, 20, 95, 125, 127, 128, 129, 132, 133, 213, 216, 218, 220, 223, 224, 227, 228, 230, 231, 232, 233, 236, 237, 238, 239, 240, 241, 242, 243, 244, 247, 254, 255, 256, 257, 258, 262, 263, 264, 265, 267, 270, 271, 272, 277, 278, 398, 407, 435, 473, 477, 486, 495, 520, 522], "scan_max": [19, 20, 128, 132, 135, 216, 218, 220, 223, 224, 227, 228, 230, 231, 232, 233, 236, 237, 238, 239, 240, 241, 242, 243, 244, 247, 254, 255, 256, 257, 258, 262, 263, 264, 265, 267, 270, 271, 272, 277, 278, 455, 477, 486, 487], "scan_min": [19, 20, 128, 132, 135, 216, 218, 220, 223, 224, 227, 228, 230, 231, 232, 233, 236, 237, 238, 239, 240, 241, 242, 243, 244, 247, 254, 255, 256, 257, 258, 262, 263, 264, 265, 267, 270, 271, 272, 277, 278, 455, 486, 487], "scan_n_sigma": [19, 20, 216, 218, 220, 223, 224, 227, 228, 230, 231, 232, 233, 236, 237, 238, 239, 240, 241, 242, 243, 244, 247, 254, 255, 256, 257, 258, 262, 263, 264, 265, 267, 270, 271, 272, 277, 278, 487], "scan_n_valu": [19, 20, 128, 132, 133, 216, 220, 223, 224, 227, 228, 230, 231, 232, 233, 236, 237, 238, 239, 240, 241, 242, 243, 244, 247, 254, 255, 256, 257, 258, 262, 263, 264, 265, 267, 270, 271, 272, 277, 278, 455, 487, 495], "scan_prior": 495, "scan_valu": [19, 20, 213, 216, 218, 220, 223, 224, 227, 228, 230, 231, 232, 233, 236, 237, 238, 239, 240, 241, 242, 243, 244, 247, 254, 255, 256, 257, 258, 262, 263, 264, 265, 267, 270, 271, 272, 277, 278, 473, 487], "scargl": [398, 443, 482], "scatter": [226, 250, 404, 463, 469, 481, 539, 540], "scenario": [87, 91, 388, 395, 405, 416, 486, 490, 493, 511, 583], "scengin": [87, 91], "schedul": 392, "schema": [15, 16, 84, 90, 105, 126, 399, 402], "schema_gener": [16, 84, 90, 105, 126], "schema_json": [16, 84, 90, 105, 126], "scheme": [16, 84, 90, 102, 105, 107, 108, 126, 194, 195, 196, 205, 241, 383, 389, 393, 395, 398, 405, 406, 407, 408, 410, 413, 428, 435, 446, 450, 472, 488, 490, 493, 522, 527, 533, 534, 536], "schiavo": 451, "school": [409, 412], "scienc": [137, 146, 195, 196, 198, 207, 208, 390, 392, 396, 399, 400, 403, 409, 412, 421, 443, 444, 462, 468, 478, 490, 493, 494, 497, 498, 502, 510, 522, 556, 581, 582], "sciencedirect": [137, 146], "scientif": [384, 390, 406, 409, 417], "scientist": 497, "scikit": [143, 383, 397, 400, 403, 444, 491], "scipi": [19, 20, 26, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 208, 213, 220, 221, 224, 228, 230, 231, 232, 237, 243, 244, 247, 251, 253, 255, 256, 257, 262, 267, 269, 270, 271, 272, 275, 277, 279, 308, 322, 363, 376, 382, 383, 386, 392, 397, 400, 401, 403, 409, 421, 425, 426, 427, 428, 440, 441, 442, 445, 447, 454, 456, 459, 460, 461, 462, 463, 464, 465, 467, 468, 469, 470, 471, 472, 473, 476, 477, 478, 479, 483, 484, 485, 486, 487, 489, 490, 491, 492, 493, 495, 497, 498, 499, 500, 506, 507, 508, 579, 584], "scipy_mvn": 211, "scipy_opt": 487, "scitool": 561, "scope": [396, 397, 398, 399, 402, 410, 511], "scratch": [155, 383, 393, 397, 414, 467, 491], "screen": [87, 91, 490, 508], "script": [6, 87, 91, 127, 346, 347, 348, 349, 350, 351, 352, 384, 389, 390, 392, 394, 397, 399, 402, 403, 409, 413, 414, 424, 425, 426, 427, 435, 436, 440, 443, 444, 445, 446, 450, 453, 459, 463, 465, 467, 468, 469, 470, 471, 473, 475, 477, 478, 481, 483, 484, 485, 486, 487, 489, 492, 495, 498, 503, 506, 521, 522, 582], "scriptabl": 410, "scutum": [33, 38], "sdc": 497, "sdist": 414, "seaborn": 522, "search": [87, 91, 291, 293, 347, 383, 384, 420, 443, 444, 460, 463, 469, 470, 483, 484, 494, 506, 507, 508, 510, 522, 582], "season": 403, "sebastian": 435, "sec": [54, 83, 94, 100, 132, 340], "second": [42, 58, 83, 86, 87, 88, 91, 138, 152, 277, 301, 340, 343, 360, 364, 367, 372, 384, 391, 393, 395, 397, 401, 407, 409, 414, 429, 448, 459, 460, 463, 465, 467, 469, 470, 471, 472, 473, 475, 477, 478, 481, 483, 485, 487, 489, 490, 492, 495, 497, 502, 506, 517, 583, 586], "secpl": [270, 271, 272, 406, 493], "section": [19, 87, 91, 292, 294, 300, 383, 384, 386, 388, 397, 399, 400, 402, 406, 409, 412, 414, 432, 445, 462, 467, 471, 472, 475, 478, 484, 486, 487, 491, 492, 493, 508, 511, 522, 535, 580, 582, 586], "secur": 491, "sed": [121, 124, 125, 126, 127, 129, 135, 204, 228, 382, 399, 401, 407, 416, 423, 442, 457, 463, 473, 477, 484, 485, 486, 506, 508, 581], "sed_fit": [453, 457, 458], "sed_fitting_gammacat_fermi": 403, "sed_typ": [19, 20, 26, 125, 126, 127, 220, 221, 224, 228, 230, 231, 232, 237, 243, 244, 247, 251, 253, 255, 256, 257, 262, 267, 269, 270, 271, 272, 275, 279, 435, 454, 455, 457, 459, 460, 461, 468, 469, 473, 476, 477, 478, 484, 486, 507, 508, 520, 522, 558, 581], "sed_type_init": [71, 74, 75, 78, 125, 126, 127], "sed_type_plot_default": [125, 127], "sedov": [52, 53], "sedov_taylor_begin": [52, 53, 516], "sedov_taylor_end": [52, 53, 516], "seds_20230803": 64, "sedtypeenum": 126, "see": [11, 13, 19, 20, 26, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 50, 66, 82, 83, 85, 87, 89, 91, 95, 99, 100, 101, 102, 103, 106, 110, 111, 120, 122, 124, 127, 128, 129, 132, 134, 135, 137, 146, 149, 150, 151, 152, 153, 154, 155, 156, 157, 159, 160, 162, 164, 165, 166, 167, 168, 171, 178, 180, 181, 188, 193, 194, 196, 198, 200, 201, 203, 206, 208, 213, 216, 217, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 230, 231, 232, 233, 236, 237, 238, 239, 240, 241, 242, 243, 244, 247, 250, 251, 252, 253, 254, 255, 256, 257, 258, 262, 263, 264, 265, 266, 267, 269, 270, 271, 272, 275, 276, 277, 278, 279, 284, 294, 300, 303, 304, 307, 310, 318, 334, 350, 373, 374, 382, 383, 384, 386, 387, 388, 390, 391, 392, 393, 396, 397, 398, 399, 400, 401, 403, 404, 408, 409, 410, 411, 412, 414, 416, 417, 419, 420, 422, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 440, 441, 442, 443, 444, 445, 446, 454, 455, 456, 457, 459, 460, 461, 462, 463, 464, 465, 467, 468, 469, 470, 471, 473, 475, 476, 477, 478, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 497, 499, 502, 506, 507, 508, 510, 518, 519, 522, 532, 533, 535, 561, 565, 566, 579, 581, 582, 583, 584, 586], "seed": [33, 42, 45, 46, 47, 103, 104, 106, 109, 110, 111, 154, 165, 168, 195, 196, 198, 204, 207, 208, 225, 233, 238, 240, 241, 242, 251, 258, 265, 277, 280, 292, 332, 333, 334, 337, 338, 339, 340, 383, 443, 471, 558], "seed_photon_field": [251, 558], "seem": [383, 390, 391, 394, 400, 404, 510], "seen": [383, 397, 404, 456, 463, 468, 477, 490, 493, 498], "select": [16, 82, 83, 86, 87, 88, 89, 91, 92, 96, 100, 103, 106, 110, 111, 124, 175, 182, 195, 196, 197, 198, 200, 205, 207, 208, 217, 219, 226, 250, 266, 276, 289, 379, 380, 393, 395, 396, 397, 398, 399, 403, 405, 407, 410, 416, 418, 424, 427, 435, 439, 454, 459, 461, 462, 464, 465, 467, 468, 470, 471, 472, 475, 478, 479, 485, 486, 487, 489, 490, 491, 494, 497, 499, 500, 502, 508, 520, 522, 526, 527, 531, 580, 582], "select_energi": [83, 519], "select_from_geom": [226, 250], "select_map_mask": 425, "select_mask": [83, 226, 250, 435, 492], "select_nested_model": [449, 451], "select_obs_id": [91, 469], "select_observ": [91, 96, 399, 477, 481, 494, 507, 522], "select_offset": [83, 471, 500, 519], "select_paramet": [83, 89, 479, 519], "select_phas": 393, "select_rad_max": 83, "select_rang": 91, "select_region": [83, 89, 226, 250, 397, 427, 435, 471, 472, 479, 492, 508, 519], "select_row_subset": 83, "select_sky_box": 397, "select_sky_circl": [91, 397], "select_tim": [83, 86, 88, 92, 100, 393, 407, 429, 472, 477, 481, 519], "select_time_rang": 91, "selected_energi": 519, "selected_ev": 83, "selected_id": 519, "selected_obs_t": [91, 494, 507], "selected_offset": 519, "selected_region": 519, "selected_tim": 519, "selection_al": [120, 135], "selection_mask": [226, 250, 492], "selection_opt": [16, 120, 122, 123, 124, 128, 129, 131, 132, 133, 134, 135, 435, 451, 455, 459, 460, 463, 464, 465, 467, 468, 469, 473, 476, 477, 478, 479, 486, 491, 499, 506], "selection_vari": 91, "selectionconfig": 16, "selectionslid": [467, 475, 490, 506, 507], "self": [16, 19, 20, 26, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 83, 84, 86, 87, 90, 91, 105, 125, 126, 127, 203, 204, 220, 221, 224, 228, 230, 231, 232, 237, 243, 244, 247, 251, 253, 255, 256, 257, 262, 266, 267, 269, 270, 271, 272, 275, 279, 383, 384, 394, 395, 397, 400, 406, 407, 410, 411, 412, 431, 465, 490, 493], "semant": [397, 408], "semi": 227, "semiaxi": [227, 236, 239, 539, 540, 541], "semilogi": [19, 20, 26, 220, 221, 224, 228, 230, 231, 232, 237, 243, 244, 247, 251, 253, 255, 256, 257, 262, 267, 269, 270, 271, 272, 275, 279, 454, 472], "semimajor": 484, "semiminor": 484, "semver": 408, "send": 413, "sens": [383, 390, 393, 397, 399, 402, 403, 404, 465], "sensibl": 494, "sensit": [121, 124, 125, 126, 127, 134, 283, 396, 403, 430, 432, 442, 443, 449, 450, 453, 458, 475, 497, 502, 510, 527], "sensitivity_estim": 454, "sensitivity_t": 454, "sensitivityestim": [121, 424, 430, 454], "sent": 388, "sentenc": [388, 403, 409], "sep": [203, 392, 400, 406, 422, 493], "separ": [17, 18, 21, 22, 24, 25, 27, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 67, 71, 72, 74, 75, 76, 78, 79, 80, 83, 91, 194, 203, 206, 306, 372, 383, 384, 389, 390, 391, 392, 395, 396, 397, 398, 399, 402, 403, 404, 405, 412, 431, 435, 441, 443, 444, 448, 449, 462, 465, 467, 469, 475, 478, 484, 492, 493, 494, 511, 519, 527, 528, 539, 540, 544, 545, 558, 581], "septemb": [392, 400, 402, 403, 408], "sequenc": [87, 91, 92, 100, 103, 110, 149, 150, 151, 152, 154, 155, 156, 157, 159, 162, 164, 165, 166, 167, 168, 193, 194, 195, 196, 198, 199, 200, 201, 203, 204, 205, 206, 207, 208, 217, 226, 250, 310, 414], "sequenti": [389, 459, 507], "seri": [87, 91, 127, 292, 297, 340, 392, 397, 398, 435, 451, 482], "serial": [16, 84, 87, 90, 91, 99, 100, 102, 103, 105, 106, 110, 111, 126, 389, 394, 398, 399, 404, 407, 428, 431, 435, 437, 444, 446, 447, 448, 449, 450, 490, 493, 495, 510], "serialis": [20, 103, 106, 110, 111, 220, 221, 224, 226, 228, 230, 231, 232, 234, 235, 237, 241, 243, 244, 245, 247, 249, 250, 251, 253, 255, 256, 257, 259, 262, 267, 269, 270, 271, 272, 274, 275, 276, 277, 278, 279, 281, 395, 397, 399, 402, 404, 405, 406, 427, 429, 431, 435, 440, 443, 445, 446, 448, 449, 450, 495, 506, 522, 535, 577], "serializ": [16, 84, 90, 105, 126], "serialize_as_ani": [16, 84, 90, 105, 126], "serialize_method": [87, 91], "serializiaton": 395, "serilis": [26, 222, 223, 225, 227, 233, 236, 238, 239, 240, 242, 252, 254, 258, 263, 264, 265, 266, 268, 275, 278, 280], "sersic": 406, "sersic2d": 406, "sersicspatialmodel": 406, "serv": [87, 91, 383, 388, 395, 399, 407, 412, 414, 437, 483, 526], "server": [405, 416, 418, 502], "servic": 443, "session": [399, 409, 521], "set": [15, 16, 19, 20, 23, 26, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 82, 84, 87, 90, 91, 95, 101, 102, 103, 104, 105, 106, 107, 109, 110, 111, 115, 122, 124, 125, 126, 127, 128, 129, 131, 132, 135, 137, 146, 152, 154, 165, 168, 171, 172, 175, 181, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 211, 213, 216, 217, 218, 219, 220, 223, 224, 226, 227, 228, 230, 231, 232, 233, 236, 237, 238, 239, 240, 241, 242, 243, 244, 247, 250, 251, 252, 254, 255, 256, 257, 258, 262, 263, 264, 265, 267, 268, 270, 271, 272, 274, 277, 278, 279, 289, 301, 330, 332, 383, 384, 389, 392, 393, 395, 396, 398, 399, 400, 401, 403, 407, 408, 409, 410, 411, 414, 416, 418, 431, 437, 439, 441, 443, 446, 449, 450, 451, 454, 455, 456, 459, 461, 462, 463, 464, 467, 469, 470, 471, 472, 473, 476, 477, 479, 484, 485, 486, 487, 489, 491, 493, 494, 495, 497, 499, 500, 502, 507, 510, 518, 519, 522, 531, 533, 534, 535, 558, 579, 582, 585, 586], "set_by_coord": [195, 196, 198, 204, 207, 208, 490, 534], "set_by_idx": [195, 196, 198, 204, 207, 208, 490, 534], "set_by_pix": [195, 196, 198, 204, 207, 208, 534], "set_label": 481, "set_log": 16, "set_model": [15, 405, 460, 464, 476, 506], "set_models_paramet": 405, "set_parameter_factor": [217, 219], "set_parameters_bound": [226, 250], "set_prior": [250, 411], "set_prop_cycl": 454, "set_slice_arg": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40], "set_subcovari": 211, "set_titl": [455, 456, 459, 463, 465, 469, 479, 483, 487, 488, 489, 492, 531, 541, 545, 548], "set_unit": [457, 486, 522], "set_xlabel": [454, 455, 456, 459, 462, 479, 481, 487, 494, 495], "set_xlim": [457, 459, 460, 468, 479, 524, 548], "set_xscal": [19, 20, 26, 220, 221, 224, 228, 230, 231, 232, 237, 243, 244, 247, 251, 253, 255, 256, 257, 262, 267, 269, 270, 271, 272, 275, 279], "set_xtick": [541, 545], "set_ylabel": [454, 455, 456, 459, 473, 479, 481, 483, 487, 494, 548], "set_ylim": [454, 457, 459, 460, 461, 476, 479, 524, 548], "set_yscal": [19, 20, 26, 220, 221, 224, 228, 230, 231, 232, 237, 243, 244, 247, 251, 253, 255, 256, 257, 262, 267, 269, 270, 271, 272, 275, 279, 473, 483, 524], "set_ytick": [541, 545], "setdefault": 202, "seterr": 383, "setlevel": 469, "setter": [384, 411, 429, 435, 485], "settl": 409, "setup": [13, 385, 386, 387, 390, 395, 396, 400, 403, 411, 441, 445, 502, 582], "setuptool": [436, 582], "sever": [87, 91, 177, 388, 389, 390, 397, 398, 399, 402, 407, 410, 412, 429, 430, 431, 435, 438, 447, 448, 449, 462, 468, 484, 497, 498, 499, 522, 582, 584], "seyfert": 298, "sf": [306, 584], "sgr": 508, "shade": [196, 204, 208, 487, 580], "shall": 386, "shape": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 100, 102, 103, 106, 110, 111, 112, 117, 124, 125, 129, 130, 135, 142, 143, 144, 150, 152, 155, 193, 194, 195, 196, 198, 199, 201, 203, 204, 206, 207, 208, 211, 239, 290, 310, 323, 339, 394, 397, 401, 433, 448, 451, 457, 459, 461, 463, 464, 469, 472, 473, 477, 481, 482, 484, 485, 486, 488, 489, 490, 491, 493, 497, 498, 508, 520, 534, 535, 536, 541, 545], "shape_ax": [194, 206], "share": [195, 196, 198, 202, 204, 207, 208, 383, 388, 395, 398, 402, 405, 417, 435, 437, 449, 467, 468, 491, 492, 522, 582], "sharp": [240, 373, 374, 539], "she": [393, 398], "shear": 397, "sheet": [419, 522], "shell": [52, 53, 80, 263, 264, 394, 399, 406, 416, 418, 453, 493, 536, 545, 547, 582], "shell2": [263, 453, 493, 536, 547], "shell2d": 52, "shell2spatialmodel": [260, 264, 493, 545], "shellspatialmodel": [80, 260, 263, 406, 435, 493, 544], "sherpa": [108, 111, 152, 199, 200, 203, 204, 213, 294, 300, 382, 383, 392, 400, 401, 403, 404, 415, 416, 418, 425, 439, 440, 441, 442, 444, 451, 454, 456, 459, 460, 461, 462, 463, 464, 465, 467, 468, 469, 470, 471, 472, 473, 476, 477, 478, 479, 483, 484, 485, 487, 489, 490, 491, 492, 493, 495, 497, 498, 499, 500, 506, 507, 508, 535, 556, 583], "sherpa_opt": 487, "shift": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 278, 420, 451], "shim": 390, "shini": 368, "ship": [390, 391, 400, 424, 442, 462, 475, 479, 493, 522], "shock": [50, 52, 53, 515], "short": [383, 384, 387, 388, 392, 397, 400, 403, 406, 409, 432, 477, 482, 498, 522, 523, 581, 584, 587], "short_observ": [477, 481], "shortcut": [82, 420, 437], "shorten": 435, "shorter": [298, 383, 384, 397, 403, 408, 432, 462, 477, 493, 582], "should": [16, 19, 20, 26, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 83, 84, 87, 90, 91, 101, 103, 105, 106, 109, 110, 111, 114, 116, 119, 125, 126, 127, 128, 132, 135, 138, 139, 140, 141, 147, 153, 154, 157, 163, 165, 168, 180, 185, 186, 191, 193, 194, 195, 196, 198, 200, 202, 203, 204, 206, 207, 208, 216, 220, 221, 222, 223, 224, 225, 226, 227, 228, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 247, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 274, 275, 276, 277, 278, 279, 280, 281, 310, 358, 372, 373, 374, 384, 386, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 403, 404, 406, 408, 409, 410, 412, 413, 414, 416, 418, 419, 420, 425, 427, 449, 461, 467, 470, 471, 472, 478, 479, 485, 487, 488, 489, 490, 491, 492, 493, 495, 497, 499, 518, 520, 522, 527, 529, 534, 582, 583, 585, 586], "shoulder": 282, "shouldn": [83, 383, 386], "show": [11, 82, 87, 91, 129, 130, 131, 156, 175, 241, 380, 383, 384, 386, 395, 397, 398, 402, 403, 411, 412, 414, 424, 425, 429, 437, 442, 443, 444, 449, 450, 454, 455, 456, 457, 459, 460, 461, 462, 463, 464, 465, 467, 468, 471, 472, 473, 475, 476, 477, 478, 479, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 495, 497, 498, 499, 500, 502, 506, 507, 508, 514, 515, 516, 522, 524, 525, 526, 528, 529, 531, 533, 539, 548, 567, 580, 582, 584, 587], "show_dtyp": [87, 91], "show_in_brows": [87, 91, 469], "show_in_notebook": [87, 91], "show_nam": [87, 91], "show_progress_bar": 522, "show_row_index": [87, 91], "show_unit": [87, 91], "showcas": 495, "shower": [439, 497, 527], "shown": [19, 20, 26, 83, 163, 203, 204, 220, 221, 224, 228, 230, 231, 232, 237, 243, 244, 247, 251, 253, 255, 256, 257, 262, 267, 269, 270, 271, 272, 275, 279, 378, 383, 390, 400, 401, 402, 410, 411, 413, 414, 429, 431, 456, 459, 463, 467, 469, 470, 471, 472, 477, 478, 479, 482, 489, 492, 493, 494, 495, 497, 507, 519], "showwarn": 383, "si": [83, 194, 203, 206, 226, 250, 282, 535], "side": [206, 208, 291, 293, 383, 397], "sider": 586, "sidereal_tim": 384, "siejkowski": 444, "sig": [376, 583, 584, 585], "sight": 510, "sigma": [19, 20, 30, 32, 48, 49, 124, 125, 126, 127, 128, 132, 133, 135, 143, 144, 152, 153, 157, 163, 164, 165, 168, 211, 213, 216, 218, 220, 223, 224, 227, 228, 230, 231, 232, 233, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 247, 254, 255, 256, 257, 258, 262, 263, 264, 265, 267, 270, 271, 272, 277, 278, 289, 291, 293, 299, 406, 411, 455, 463, 469, 470, 475, 476, 482, 486, 487, 491, 493, 495, 506, 520, 526, 540, 555, 571, 584], "sigma1": 31, "sigma2": 31, "sigma_": [211, 540], "sigma_1": [31, 49, 156, 488], "sigma_10tev": [406, 493], "sigma_1tev": [406, 493], "sigma_2": [31, 49, 156, 488], "sigma_3": [156, 488], "sigma_err": 470, "sigma_gauss": 239, "sigma_laplac": 239, "sigma_m": 540, "sigma_nod": 493, "sigma_to_t": 584, "sigmav": 510, "sign": [216, 218, 291, 293, 386, 409, 431, 446, 520, 584], "signal": [83, 103, 106, 109, 110, 111, 180, 208, 265, 291, 293, 307, 407, 454, 459, 460, 465, 468, 476, 491, 506, 510, 525, 529, 531, 581, 583, 584, 585], "signif_avg": 508, "signific": [77, 120, 124, 125, 126, 127, 134, 135, 137, 146, 147, 289, 291, 293, 297, 373, 374, 381, 388, 389, 390, 391, 398, 399, 403, 404, 407, 409, 431, 432, 440, 443, 444, 449, 450, 451, 453, 454, 459, 460, 466, 467, 468, 469, 470, 476, 479, 481, 482, 484, 486, 487, 499, 502, 506, 508, 520, 522, 580, 581, 582], "significance_lima": 431, "significance_map": [465, 467], "significance_map_off": 465, "significance_mask": 491, "significance_mask_inv": 491, "significancemapestim": 431, "significantli": [435, 455, 471, 497], "signoff": 386, "silent": [446, 451], "silvia": 427, "simeq": 53, "similar": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 87, 91, 374, 383, 386, 395, 396, 397, 398, 399, 402, 403, 404, 407, 435, 449, 461, 482, 486, 490, 494, 495, 508, 518, 526, 582], "similarli": [389, 391, 407, 410, 412, 435, 484, 487, 488, 490, 491, 493, 535], "simlat": 292, "simon": [448, 449, 450], "simpifi": 392, "simpl": [50, 52, 143, 223, 227, 236, 239, 252, 263, 264, 268, 274, 278, 282, 383, 384, 395, 396, 397, 398, 399, 402, 407, 410, 411, 425, 435, 439, 443, 444, 449, 454, 456, 457, 459, 460, 461, 462, 464, 467, 479, 481, 482, 486, 487, 490, 491, 494, 500, 506, 507, 508, 512, 522, 580, 581, 582], "simple_norm": 208, "simple_rebin_lc": 398, "simplefilt": 522, "simpler": [183, 391, 396, 397, 405], "simplest": [454, 459, 482], "simplex": [213, 487], "simpli": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 86, 87, 91, 172, 213, 217, 219, 383, 397, 398, 407, 416, 417, 418, 446, 449, 454, 455, 456, 469, 485, 491, 492, 493, 508, 535, 582, 584], "simplic": [468, 471, 487, 493, 495, 498], "simplif": [394, 406, 446], "simplifi": [135, 202, 390, 392, 394, 401, 407, 425, 428, 429, 430, 432, 435, 439, 446, 455, 457, 463, 527, 585], "simu": [475, 478, 495], "simul": [45, 83, 88, 93, 103, 106, 109, 110, 111, 114, 154, 165, 168, 292, 340, 393, 396, 399, 403, 410, 411, 416, 423, 427, 429, 431, 437, 440, 442, 443, 444, 449, 450, 451, 453, 458, 464, 467, 469, 474, 479, 480, 492, 495, 497, 502, 512, 527, 580], "simulate_3d": [403, 444, 453, 474, 475], "simulate_dataset": [425, 429, 430], "simulate_observ": 93, "simulated_d": 461, "simulated_data": 93, "simulated_model": 461, "simultan": [411, 478, 485, 493, 495, 518], "sin": [539, 540, 541, 575], "sinc": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 51, 87, 91, 196, 206, 358, 383, 384, 389, 393, 397, 399, 400, 401, 402, 403, 407, 409, 410, 411, 414, 435, 445, 446, 447, 448, 449, 450, 451, 455, 461, 465, 467, 477, 478, 481, 485, 492, 493, 495, 497, 499, 554, 583, 586], "sine": [265, 394, 453, 536, 578], "sine_model": 575, "sinetemporalmodel": [273, 493, 575], "singl": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 67, 82, 87, 88, 89, 91, 93, 95, 124, 128, 129, 132, 135, 153, 154, 165, 167, 168, 171, 175, 177, 182, 185, 186, 191, 193, 194, 195, 196, 198, 200, 203, 204, 206, 207, 208, 226, 250, 383, 389, 390, 393, 395, 396, 397, 398, 399, 400, 404, 405, 410, 411, 412, 416, 423, 425, 430, 431, 443, 449, 450, 454, 459, 461, 463, 464, 465, 476, 478, 484, 485, 489, 490, 492, 495, 499, 500, 506, 508, 518, 520, 532, 534, 535, 579, 581], "singleobscubemak": 389, "singleobsimagemak": 389, "singleton": 334, "sinha": [395, 398, 424, 425, 426, 427, 428, 429, 430, 431, 432, 434, 435, 437, 438, 443, 444, 445, 446, 447, 448, 449, 450, 451], "sink": 400, "sinu": [265, 493], "sinusoid": [265, 575], "sipocz": [400, 425, 427, 429, 431, 440, 441, 442, 443, 444, 445], "sip\u0151cz": [446, 451], "sit": 386, "site": [347, 414, 454, 456, 459, 460, 461, 462, 463, 464, 465, 467, 468, 469, 470, 471, 472, 473, 475, 476, 477, 478, 479, 481, 483, 484, 485, 487, 489, 490, 491, 492, 493, 495, 497, 498, 499, 500, 506, 507, 508, 546, 554, 570, 582], "situat": [397, 398, 400, 527], "six": [402, 408], "size": [19, 20, 26, 46, 47, 67, 72, 80, 87, 88, 91, 103, 104, 106, 109, 110, 111, 113, 114, 115, 116, 119, 130, 135, 138, 149, 150, 152, 153, 154, 155, 156, 157, 160, 162, 163, 164, 165, 166, 168, 170, 171, 177, 178, 179, 182, 183, 184, 192, 194, 195, 196, 198, 201, 203, 204, 206, 207, 208, 211, 220, 221, 223, 224, 227, 228, 230, 231, 232, 236, 237, 239, 243, 244, 247, 251, 252, 253, 254, 255, 256, 257, 262, 263, 264, 266, 267, 268, 269, 270, 271, 272, 274, 275, 276, 277, 278, 279, 301, 332, 333, 337, 338, 339, 340, 371, 383, 391, 394, 396, 397, 416, 418, 448, 450, 454, 461, 465, 467, 471, 477, 479, 484, 489, 490, 491, 493, 497, 498, 499, 500, 508, 518, 533, 539, 540, 586], "skeleton": 399, "sketch": 399, "skill": [386, 412, 420], "skimag": 444, "skip": [16, 82, 84, 90, 105, 126, 163, 371, 384, 386, 395, 397, 403, 442, 481, 492], "skip_miss": [82, 443], "sklearn": 383, "sky": [6, 13, 41, 57, 68, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 83, 88, 96, 103, 106, 109, 110, 111, 120, 143, 153, 154, 165, 168, 188, 194, 195, 196, 198, 203, 204, 206, 207, 208, 226, 250, 266, 278, 282, 284, 312, 316, 317, 341, 343, 345, 370, 382, 383, 384, 396, 402, 416, 425, 427, 441, 442, 444, 455, 459, 460, 462, 463, 465, 475, 478, 479, 484, 490, 493, 497, 498, 502, 504, 506, 507, 508, 510, 517, 518, 519, 522, 527, 528, 531, 533, 535, 539, 540, 544, 545, 546, 580, 581], "sky_circl": [91, 96, 477, 481, 494, 507], "sky_model": [70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 116, 119, 398, 455, 476, 477, 481, 484, 492, 493, 507, 550], "sky_model_pntpwl": 471, "sky_reg": 483, "sky_reg_rec": 483, "sky_region": 89, "skycood": 394, "skycoord": [56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 83, 85, 87, 88, 91, 94, 96, 103, 106, 110, 111, 113, 114, 125, 127, 129, 131, 153, 154, 160, 165, 168, 178, 179, 181, 183, 185, 186, 188, 189, 191, 192, 194, 195, 196, 198, 201, 203, 204, 206, 207, 208, 209, 222, 223, 226, 227, 236, 239, 250, 252, 254, 263, 264, 266, 268, 274, 276, 278, 308, 309, 342, 343, 359, 379, 384, 394, 397, 407, 410, 454, 456, 459, 461, 462, 465, 469, 470, 471, 472, 473, 475, 476, 477, 478, 479, 481, 483, 484, 485, 488, 489, 490, 491, 492, 493, 494, 497, 498, 499, 500, 507, 508, 522, 526, 531, 533, 535, 543], "skycoord_from_t": 397, "skycoord_to_pixel_scale_angl": 397, "skycoordconfig": 16, "skycub": [389, 402, 441, 442, 443, 444], "skydiffusecub": [394, 406, 426, 431, 432, 444], "skydiffusemap": [394, 426], "skydir": [16, 83, 103, 106, 110, 111, 112, 117, 154, 165, 175, 193, 194, 195, 196, 198, 203, 204, 206, 207, 208, 459, 460, 461, 464, 465, 467, 469, 470, 471, 472, 475, 476, 479, 483, 485, 488, 489, 490, 491, 493, 498, 499, 506, 507, 529, 531, 532, 533, 535, 540, 541, 542, 543], "skydirfunct": 510, "skydisk": 426, "skydiskelong": 394, "skyellips": [425, 426, 427, 428], "skygaussian": 425, "skygaussianelong": 394, "skyimag": [389, 402, 441, 442, 443, 444], "skyimagelist": 441, "skymap": [195, 196, 198, 204, 207, 208, 397, 440, 441, 472], "skymap_band": [472, 577], "skymap_region": 472, "skymask": 442, "skymodel": [67, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 102, 103, 106, 110, 111, 116, 119, 125, 127, 133, 135, 136, 145, 172, 213, 226, 246, 250, 284, 289, 394, 395, 396, 398, 404, 406, 407, 425, 429, 430, 431, 435, 444, 450, 455, 456, 457, 459, 460, 461, 462, 463, 464, 467, 468, 469, 470, 471, 472, 475, 476, 477, 478, 479, 481, 484, 485, 486, 487, 492, 495, 498, 506, 507, 517, 518, 520, 538, 539, 540, 541, 543, 544, 545, 546, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 569, 570, 571, 572, 573, 574, 575, 576, 577, 579], "skypointsourc": 428, "skyregion": [100, 103, 106, 110, 111, 129, 153, 154, 160, 165, 168, 178, 179, 183, 198, 203, 204, 208, 226, 250, 341, 344, 397, 456, 471, 473, 491, 493, 526, 531, 535], "skyspatialmodel": [394, 444], "slack": [385, 386, 390, 406, 413, 419, 424, 425, 582], "slew": 95, "slice": [83, 87, 91, 100, 101, 103, 106, 110, 111, 122, 125, 127, 149, 150, 151, 152, 153, 154, 155, 156, 157, 159, 160, 162, 163, 164, 165, 166, 167, 168, 193, 194, 195, 196, 197, 198, 199, 200, 203, 204, 205, 206, 207, 208, 213, 222, 223, 227, 236, 239, 252, 254, 263, 264, 268, 274, 276, 278, 302, 389, 432, 470, 473, 477, 485, 486, 497, 534], "slice_by_coord": [125, 127, 450], "slice_by_energi": [100, 103, 106, 110, 111, 125, 127, 276, 432, 485], "slice_by_idx": [103, 106, 110, 111, 125, 127, 149, 150, 151, 152, 153, 154, 155, 156, 157, 159, 160, 162, 163, 164, 165, 166, 167, 168, 193, 194, 195, 196, 198, 199, 203, 204, 206, 207, 208, 432, 444, 446, 473, 477, 486, 490, 498], "slice_by_tim": [125, 127], "sliced_ax": 199, "sliced_geom": [193, 194, 203, 206], "sliced_lc": 477, "slicesampl": 412, "slide": [392, 463, 484], "slider": 490, "sliderstyl": [467, 475, 490, 506, 507], "slightli": [120, 200], "slope": [27, 426], "slow": [87, 91, 213, 390, 399, 460, 487, 506, 507], "slower": [87, 91, 196, 383, 391, 401], "slowest": 414, "small": [374, 383, 389, 391, 397, 399, 400, 403, 405, 410, 412, 414, 424, 425, 426, 427, 428, 429, 430, 431, 432, 434, 435, 437, 438, 440, 441, 442, 443, 444, 445, 446, 449, 450, 451, 476, 477, 490, 495, 497, 498, 499, 500, 540, 544, 545, 581, 582], "smaller": [27, 154, 165, 168, 183, 194, 195, 196, 198, 204, 207, 208, 376, 386, 425, 444, 471, 477, 482, 487, 490, 495, 540], "smallest": [19, 20, 26, 220, 221, 224, 228, 230, 231, 232, 237, 243, 244, 247, 251, 253, 255, 262, 267, 269, 270, 271, 272, 275, 279, 463], "smooth": [103, 106, 110, 111, 120, 130, 131, 143, 196, 208, 227, 267, 375, 378, 435, 440, 441, 442, 444, 445, 453, 465, 467, 469, 473, 475, 479, 485, 489, 490, 492, 498, 506, 507, 508, 536, 539, 568], "smooth_kernel": [103, 106], "smooth_radiu": [103, 106], "smoothbrokenpowerlawspectralmodel": [220, 261, 406, 430, 431, 493, 563], "sn": [45, 50, 52, 53], "sn_rate": [45, 512], "snelxrbz": 481, "snippet": [384, 403, 522], "snr": [44, 50, 53, 67, 498, 515, 516], "snr_model": 516, "snrcat": [439, 484], "snrtruelovemcke": [50, 515, 516], "so": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 83, 87, 91, 95, 102, 106, 111, 124, 128, 130, 132, 133, 135, 136, 145, 148, 153, 154, 160, 165, 168, 192, 195, 196, 198, 200, 204, 207, 208, 213, 216, 218, 239, 278, 289, 358, 366, 373, 374, 383, 384, 386, 388, 389, 390, 391, 394, 395, 396, 397, 398, 400, 401, 402, 403, 404, 405, 406, 407, 410, 412, 413, 415, 416, 418, 420, 425, 427, 435, 445, 447, 448, 451, 456, 459, 461, 463, 464, 469, 470, 471, 475, 476, 483, 484, 486, 487, 490, 491, 493, 495, 497, 498, 499, 502, 507, 522, 529, 531, 535, 541, 545, 582, 583, 584, 585], "social": 409, "soft": 298, "softwar": [195, 196, 198, 207, 208, 397, 398, 400, 409, 410, 414, 490, 522], "solar": 52, "sole": [393, 409], "solid": [193, 194, 203, 206, 223, 227, 236, 239, 252, 263, 264, 268, 274, 278, 282, 399, 423, 425, 426, 427, 444, 465, 489, 490, 497, 525, 531, 581], "solid_angl": [193, 194, 203, 206, 490, 535], "solut": [19, 20, 26, 52, 136, 145, 152, 220, 221, 224, 228, 230, 231, 232, 243, 244, 247, 251, 253, 255, 256, 257, 262, 267, 269, 270, 271, 272, 275, 277, 279, 384, 386, 388, 390, 391, 396, 397, 399, 400, 401, 403, 405, 407, 411, 412, 417, 486, 518, 520, 522, 585], "solv": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 386, 391, 393, 394, 395, 396, 437, 522], "some": [13, 16, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 72, 77, 82, 84, 87, 90, 91, 105, 126, 181, 202, 310, 318, 386, 388, 389, 390, 391, 392, 397, 398, 399, 400, 401, 402, 403, 404, 407, 408, 409, 410, 412, 414, 416, 417, 418, 419, 420, 421, 423, 425, 427, 435, 436, 438, 440, 442, 443, 444, 449, 454, 456, 457, 459, 461, 463, 464, 465, 468, 469, 471, 472, 473, 475, 476, 477, 478, 479, 481, 482, 483, 484, 485, 486, 489, 490, 492, 493, 495, 497, 498, 507, 508, 510, 511, 518, 519, 522, 527, 532, 534, 582, 583, 584, 586], "some_class": 383, "some_map": 163, "some_map_convolv": 163, "somehow": [391, 397, 402], "someon": [386, 388, 403], "someth": [87, 91, 383, 384, 385, 386, 388, 391, 397, 400, 401, 403, 414, 416, 418, 462, 484, 535, 582], "sometim": [19, 20, 83, 216, 220, 223, 224, 227, 228, 230, 231, 232, 233, 236, 237, 238, 239, 240, 241, 242, 243, 244, 247, 254, 255, 256, 257, 258, 262, 263, 264, 265, 267, 270, 271, 272, 277, 278, 361, 383, 386, 390, 397, 403, 414, 416, 487, 522, 581, 586], "somewhat": [400, 497], "somewher": [386, 400, 414], "soon": [386, 397, 414], "sort": [82, 83, 87, 91, 102, 143, 346, 351, 352, 383, 400, 426, 451, 508], "sort_kei": [346, 351, 352], "sortedarrai": [87, 91], "sourc": [6, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 383, 384, 386, 388, 391, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 405, 406, 407, 409, 414, 416, 421, 423, 425, 429, 430, 435, 436, 441, 442, 443, 444, 449, 450, 451, 453, 455, 457, 458, 460, 461, 462, 464, 465, 466, 467, 468, 473, 474, 475, 476, 477, 479, 480, 481, 482, 483, 485, 486, 487, 488, 489, 490, 492, 493, 494, 496, 498, 499, 500, 502, 504, 506, 507, 510, 511, 516, 518, 520, 522, 527, 530, 531, 536, 538, 539, 540, 541, 542, 543, 544, 545, 546, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 569, 570, 571, 572, 573, 574, 575, 576, 577, 579, 580, 581, 583, 584], "source1": 493, "source2": 493, "source_1": [394, 399], "source_2": 394, "source_42": 399, "source_fermi_3fgl": 457, "source_fermi_3fhl": 457, "source_gammacat": 457, "source_irf_model": 394, "source_librari": 497, "source_model": 561, "source_nam": [56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 484, 508], "source_name_alia": 56, "source_name_kei": 56, "source_po": [465, 469, 489], "source_population_model": [403, 429], "source_posit": [454, 470, 494], "sourcebackground": 394, "sourcecatalog": [57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 397, 435, 484, 491, 508, 517], "sourcecatalog1lhaaso": [55, 70, 484], "sourcecatalog2fhl": [55, 71, 484, 517], "sourcecatalog2hwc": [55, 72, 484, 517], "sourcecatalog2pc": [55, 484], "sourcecatalog3fgl": [55, 74, 457, 484, 517], "sourcecatalog3fhl": [55, 75, 457, 484, 492, 508, 517], "sourcecatalog3hwc": [55, 76, 484, 517], "sourcecatalog3pc": [55, 484], "sourcecatalog4fgl": [55, 78, 437, 455, 484, 517], "sourcecataloggammacat": [55, 79, 457, 484, 517], "sourcecataloghgp": [55, 80, 81, 484, 517], "sourcecataloglargescalehgp": 67, "sourcecatalogobject": [70, 79, 80, 81, 484, 517], "sourcecatalogobject1lhaaso": 57, "sourcecatalogobject2fhl": 58, "sourcecatalogobject2hwc": 59, "sourcecatalogobject2pc": 60, "sourcecatalogobject3fgl": 61, "sourcecatalogobject3fhl": 62, "sourcecatalogobject3hwc": 63, "sourcecatalogobject3pc": 64, "sourcecatalogobject4fgl": 65, "sourcecatalogobjectfermibas": [71, 74, 75, 78], "sourcecatalogobjectfermipcbas": [73, 77], "sourcecatalogobjectgammacat": 66, "sourcecatalogobjecthgp": [67, 81, 424, 484], "sourcecatalogobjecthgpscompon": 67, "sourcecatalogobjecthwcbas": [72, 76], "sourceevalu": 394, "sources_flux_map": 463, "sourcetempl": 394, "south": [471, 472, 497], "south_z20_50h": [82, 150, 154, 155, 156, 165, 454, 462, 475, 478, 488, 497], "south_z40_50h": 497, "southaz": 497, "southern": 497, "space": [87, 91, 103, 106, 110, 111, 205, 208, 274, 275, 292, 321, 339, 382, 383, 393, 399, 405, 412, 479, 485, 487, 490, 534, 558, 567], "span": 494, "spars": [194, 195, 196, 198, 203, 206, 207, 208, 412, 426, 435, 443, 472, 490], "sparsif": 407, "sparsifi": [195, 196, 198, 207, 208], "spatail": 135, "spatial": [1, 46, 48, 67, 70, 71, 72, 74, 75, 76, 78, 79, 80, 81, 83, 103, 106, 110, 111, 113, 114, 125, 127, 135, 149, 150, 151, 152, 153, 154, 155, 156, 157, 159, 160, 162, 163, 164, 165, 166, 167, 168, 177, 193, 194, 195, 196, 198, 199, 201, 203, 204, 206, 207, 208, 217, 219, 222, 223, 226, 227, 234, 236, 239, 250, 252, 254, 260, 263, 264, 266, 268, 274, 276, 278, 289, 376, 378, 383, 389, 392, 395, 396, 397, 399, 401, 402, 407, 416, 424, 425, 427, 428, 429, 430, 432, 435, 443, 444, 446, 449, 450, 451, 453, 455, 457, 460, 462, 463, 464, 467, 468, 470, 471, 472, 473, 475, 477, 478, 479, 481, 484, 485, 486, 489, 492, 496, 498, 502, 506, 510, 511, 518, 520, 522, 523, 533, 534, 547, 579, 580, 581], "spatial_bin_s": [113, 114], "spatial_bin_size_min": [113, 114], "spatial_model": [70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 116, 119, 135, 227, 234, 266, 276, 289, 398, 429, 455, 463, 467, 469, 470, 471, 472, 475, 476, 477, 481, 484, 485, 492, 493, 498, 507, 538, 539, 540, 541, 542, 543, 544, 545, 546], "spatial_model_point": 471, "spatial_model_registri": 493, "spatial_par": 406, "spatial_typ": 406, "spatial_width": [113, 114], "spatial_width_max": [113, 114], "spatialbackground": 394, "spatialcircleconfig": 16, "spatialconst": 394, "spatialgaussian": 394, "spatialmodel": [70, 71, 72, 74, 75, 76, 78, 79, 80, 222, 223, 227, 234, 236, 239, 252, 254, 263, 264, 266, 274, 276, 278, 394, 406, 429, 444, 448, 484, 493, 507, 510, 517, 536, 579], "spatialtempl": 394, "spatiamodel": 163, "speak": 487, "spec": [80, 111, 383, 397, 440, 467, 472, 484, 497, 507], "spec_model_tru": 479, "special": [87, 91, 239, 383, 393, 395, 397, 398, 406, 409, 410, 424, 451, 464, 484, 485, 486, 492, 493], "specialis": [397, 403], "specif": [15, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 83, 85, 86, 87, 91, 94, 103, 106, 111, 125, 127, 149, 150, 151, 152, 153, 154, 155, 156, 157, 159, 160, 162, 164, 165, 166, 167, 168, 171, 185, 186, 191, 195, 196, 197, 198, 200, 204, 205, 206, 207, 208, 213, 241, 276, 289, 372, 382, 383, 384, 386, 388, 393, 395, 397, 398, 399, 400, 401, 402, 404, 407, 408, 409, 410, 412, 414, 416, 417, 429, 432, 435, 437, 446, 447, 449, 455, 456, 459, 461, 462, 465, 467, 468, 473, 475, 478, 479, 485, 487, 488, 490, 491, 494, 495, 500, 502, 508, 518, 519, 520, 522, 524, 525, 526, 528, 533, 534, 535, 586], "specifi": [16, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 82, 83, 84, 87, 88, 90, 91, 92, 96, 102, 103, 105, 106, 110, 111, 120, 122, 125, 126, 127, 128, 130, 132, 133, 149, 150, 151, 152, 153, 154, 155, 156, 157, 159, 160, 162, 164, 165, 166, 167, 168, 170, 181, 193, 194, 195, 196, 198, 199, 200, 202, 203, 204, 206, 207, 208, 226, 241, 250, 289, 310, 312, 316, 321, 370, 393, 400, 405, 408, 412, 417, 428, 431, 435, 451, 455, 461, 464, 465, 467, 470, 473, 475, 485, 486, 487, 488, 489, 490, 492, 493, 497, 507, 518, 520, 533], "spectra": [26, 110, 111, 128, 133, 148, 213, 261, 282, 289, 389, 392, 394, 396, 398, 402, 406, 412, 423, 427, 440, 444, 455, 456, 461, 462, 468, 472, 476, 478, 479, 485, 486, 487, 489, 493, 495, 510, 518, 520, 522, 581], "spectral": [1, 19, 20, 26, 52, 53, 66, 67, 69, 70, 71, 72, 74, 75, 76, 78, 79, 80, 102, 103, 106, 110, 111, 120, 124, 125, 127, 128, 129, 132, 134, 135, 142, 163, 165, 168, 172, 217, 219, 220, 221, 224, 226, 228, 230, 231, 232, 234, 237, 241, 243, 244, 247, 248, 250, 251, 253, 255, 256, 257, 261, 262, 266, 267, 269, 270, 271, 272, 275, 276, 277, 279, 282, 283, 298, 337, 389, 392, 394, 395, 396, 397, 398, 399, 401, 402, 404, 405, 407, 416, 424, 426, 427, 428, 429, 430, 431, 432, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 449, 450, 451, 453, 458, 462, 463, 464, 467, 470, 471, 472, 473, 475, 476, 477, 478, 479, 481, 484, 485, 486, 487, 489, 491, 492, 495, 496, 497, 498, 506, 507, 510, 511, 517, 518, 520, 521, 522, 523, 529, 530, 531, 538, 539, 540, 541, 542, 543, 544, 545, 546, 564, 565, 566, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 579, 580, 581, 583], "spectral_analysi": [453, 458, 459], "spectral_analysis_hli": [453, 458, 460], "spectral_analysis_rad_max": [453, 458, 461], "spectral_cub": 436, "spectral_index": [19, 20, 26, 52, 220, 221, 224, 228, 230, 231, 232, 237, 243, 244, 247, 251, 253, 255, 256, 257, 262, 267, 269, 270, 271, 272, 275, 279], "spectral_index_error": [19, 20, 26, 220, 221, 224, 228, 230, 231, 232, 237, 243, 244, 247, 251, 253, 255, 256, 257, 262, 267, 269, 270, 271, 272, 275, 279, 449], "spectral_irf_model": 394, "spectral_model": [66, 67, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 102, 110, 111, 116, 119, 120, 124, 129, 133, 134, 135, 142, 163, 165, 168, 172, 213, 226, 234, 248, 250, 266, 276, 289, 398, 401, 405, 406, 407, 411, 432, 451, 454, 455, 456, 457, 459, 461, 462, 463, 467, 468, 469, 470, 471, 472, 473, 475, 476, 477, 478, 479, 481, 484, 485, 486, 487, 492, 493, 495, 498, 507, 508, 520, 529, 538, 539, 540, 541, 543, 544, 545, 546, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 569, 570, 571, 572, 573, 574, 575, 576, 577], "spectral_model1": 478, "spectral_model2": 478, "spectral_model_pwl": 471, "spectral_model_registri": 493, "spectral_par": 406, "spectral_point": 399, "spectral_typ": 406, "spectralbackground": 394, "spectralbackgroundmodel": 395, "spectralcompoundmodel": 394, "spectralconst": 394, "spectralevalu": 394, "spectralexponentialcutoffpowerlaw3fgl": 402, "spectralgaussian": [394, 427], "spectralmodel": [19, 20, 71, 74, 75, 78, 79, 80, 102, 120, 124, 125, 127, 129, 134, 142, 163, 165, 168, 172, 220, 221, 224, 226, 228, 230, 231, 232, 234, 237, 243, 244, 247, 250, 251, 253, 255, 256, 257, 262, 266, 267, 270, 271, 272, 275, 276, 279, 282, 394, 395, 398, 401, 407, 432, 435, 442, 449, 451, 484, 493, 507, 508, 517, 536, 579], "spectralregion": 397, "spectraltempl": 394, "spectroscopi": [451, 453, 477, 480, 502, 531], "spectrum": [19, 20, 26, 72, 76, 98, 100, 102, 103, 106, 107, 110, 111, 125, 127, 132, 134, 139, 165, 168, 173, 177, 181, 182, 195, 196, 198, 207, 208, 220, 221, 224, 228, 230, 231, 232, 237, 243, 244, 247, 251, 253, 255, 256, 257, 262, 267, 269, 270, 271, 272, 275, 279, 282, 283, 292, 298, 380, 389, 394, 395, 398, 399, 402, 403, 404, 416, 426, 427, 428, 429, 431, 435, 437, 440, 441, 442, 443, 444, 446, 448, 451, 453, 456, 457, 458, 460, 467, 468, 471, 472, 473, 478, 483, 484, 485, 491, 493, 497, 498, 502, 506, 508, 510, 518, 522, 527, 535, 549, 552, 553, 555, 556, 560, 561, 563, 564, 565, 566, 582], "spectrum_analysi": 459, "spectrum_dataset": [148, 395, 479, 485], "spectrum_dataset_1": 395, "spectrum_dataset_2": 395, "spectrum_dataset_empti": [479, 489], "spectrum_dataset_mak": [479, 489], "spectrum_dataset_on_off": 479, "spectrum_fitting_with_sherpa": 403, "spectrum_mak": 454, "spectrum_simul": [403, 453, 458, 462], "spectrumanalysisiact": [399, 428, 442], "spectrumdataset": [98, 99, 100, 103, 106, 111, 132, 134, 148, 176, 177, 181, 182, 234, 404, 426, 427, 428, 429, 430, 431, 432, 435, 438, 454, 456, 459, 461, 462, 469, 477, 478, 479, 481, 487, 489, 495, 531, 583], "spectrumdatasetmak": [173, 429, 435, 454, 456, 459, 461, 462, 469, 477, 478, 479, 481, 489, 531], "spectrumdatasetonoff": [98, 106, 107, 108, 110, 133, 134, 148, 176, 177, 213, 289, 380, 398, 426, 427, 428, 430, 431, 447, 448, 449, 454, 455, 456, 459, 460, 462, 468, 469, 476, 479, 481, 485, 486, 487, 489, 495, 518, 520, 583], "spectrumdatasetonoffstack": 428, "spectrumdatasetsonoff": 395, "spectrumenergygroup": 443, "spectrumevalu": 431, "spectrumextract": [398, 426, 429, 442], "spectrumfit": [426, 442, 443, 444], "spectrumobserv": [395, 426, 442], "spectrumobservationlist": [426, 441], "spectrumobservationstack": 441, "spectrumonoffdataset": 398, "spectrumresult": 426, "spectrumsimul": [427, 441, 444], "spectrumstack": 443, "spectrumstat": 427, "specutil": 397, "speed": [135, 310, 386, 412, 417, 427, 429, 437, 443, 444, 451, 487], "spell": [388, 522], "spend": [396, 403], "spent": [390, 489], "sphere": [47, 338, 423, 425, 534, 539, 540, 543], "spherepointpick": 338, "spheric": [47, 383, 425, 534, 580], "sphericalcircleskyregion": [402, 479, 508], "sphinx": [386, 390, 403, 414, 426, 430, 437, 443, 444, 446, 450, 451, 454, 455, 456, 457, 459, 460, 461, 462, 463, 464, 465, 467, 468, 469, 470, 471, 472, 473, 475, 476, 477, 478, 479, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 497, 498, 499, 500, 502, 504, 506, 507, 508, 536, 538, 539, 540, 541, 542, 543, 544, 545, 546, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 569, 570, 571, 572, 573, 574, 575, 576, 577], "sphinx_gallery_conf": 414, "sphinx_gallery_thumbnail_numb": [384, 455, 459, 461, 463, 465, 470, 473, 488, 548], "sphinxext": 384, "spill": 489, "spin": [50, 51, 54, 427, 514], "spir": [425, 444], "spiral": [33, 34, 38, 45, 439], "spiralarm": [33, 38, 45, 443, 512], "spiralarm_index": [33, 34, 38], "spirit": 409, "split": [19, 20, 87, 91, 92, 116, 119, 125, 127, 195, 196, 198, 204, 207, 208, 216, 220, 223, 224, 227, 228, 230, 231, 232, 233, 236, 237, 238, 239, 240, 241, 242, 243, 244, 247, 254, 255, 256, 257, 258, 262, 263, 264, 265, 267, 270, 271, 272, 277, 278, 389, 391, 393, 395, 397, 398, 402, 404, 406, 412, 416, 432, 450, 477, 493, 511, 587], "split_by_axi": [195, 196, 198, 204, 207, 208], "split_template_model": [116, 119], "sporad": 410, "spot": 383, "spread": [82, 88, 101, 156, 165, 168, 383, 405, 432, 454, 463, 488, 527, 581], "spring": [393, 445], "sprint": [391, 392, 396, 399, 400, 401, 402, 404], "spuriou": 143, "sqrt": [19, 20, 30, 31, 32, 67, 102, 103, 106, 110, 111, 120, 125, 127, 130, 135, 195, 196, 198, 200, 204, 207, 208, 211, 216, 220, 223, 224, 227, 228, 230, 231, 232, 233, 236, 237, 238, 239, 240, 241, 242, 243, 244, 247, 254, 255, 256, 257, 258, 262, 263, 264, 265, 267, 270, 271, 272, 277, 278, 290, 299, 322, 323, 324, 395, 456, 459, 463, 465, 467, 473, 475, 479, 482, 484, 487, 489, 490, 492, 498, 506, 507, 508, 520, 540, 541, 544, 545, 555, 584], "sqrt_space": [402, 429], "sqrt_t": [120, 124, 125, 127, 135, 143, 144, 148, 291, 293, 376, 407, 420, 432, 456, 459, 460, 463, 465, 467, 469, 479, 484, 485, 486, 491, 499, 506, 508, 520, 582, 584], "sqrt_ts_min": [148, 459], "sqrt_ts_threshold_ul": [71, 74, 75, 78, 124, 125, 126, 127, 129, 135, 463, 473, 476, 477, 484, 485, 486, 506, 508], "squar": [17, 18, 21, 22, 24, 25, 27, 46, 103, 106, 125, 126, 152, 153, 154, 160, 165, 168, 171, 192, 206, 208, 276, 296, 398, 401, 432, 491, 495, 510, 520, 534, 582, 583, 584, 585], "squash": [154, 193, 194, 197, 199, 200, 203, 205, 206, 449, 454, 465, 485, 490], "squeez": [454, 488], "sr": [149, 150, 151, 162, 193, 194, 203, 206, 223, 278, 282, 454, 462, 464, 467, 469, 475, 478, 484, 485, 488, 490, 493, 497, 498, 527, 538, 546], "src": [396, 455, 470, 518], "src_above_bkg": 470, "src_event": [471, 472], "src_posit": [471, 472], "srcmap": [194, 195, 196, 198, 207, 208, 490], "ssc": [58, 60, 61, 62, 64, 65, 101, 251, 403, 561], "ssc_model": 251, "st": [53, 487, 498], "stabil": [19, 20, 216, 220, 223, 224, 227, 228, 230, 231, 232, 233, 236, 237, 238, 239, 240, 241, 242, 243, 244, 247, 254, 255, 256, 257, 258, 262, 263, 264, 265, 267, 270, 271, 272, 277, 278, 408, 475], "stabl": [11, 87, 91, 203, 213, 310, 390, 391, 392, 399, 400, 403, 408, 413, 414, 415, 417, 429, 430, 431, 437, 442, 444, 446, 487, 519], "stack": [16, 83, 86, 92, 100, 102, 103, 105, 106, 110, 111, 124, 125, 127, 136, 145, 153, 154, 160, 165, 168, 171, 195, 196, 197, 198, 203, 204, 207, 208, 211, 217, 219, 276, 353, 383, 395, 398, 399, 405, 410, 425, 428, 429, 432, 435, 440, 441, 446, 447, 449, 451, 455, 456, 460, 464, 468, 469, 476, 479, 485, 487, 489, 494, 495, 506, 507, 519, 520, 529, 532], "stack_dataset": [171, 479, 489], "stack_reduc": [100, 148, 213, 428, 456, 459, 461, 467, 468, 469, 479, 485, 487, 520], "stacked_dataset": [469, 470], "stacked_fit": 459, "stacked_on_off": 465, "stackedobscubemak": 389, "stackedobsimagemak": 389, "stackoverflow": 350, "stage": [386, 399, 465, 467, 478, 485, 518, 581], "stai": [395, 413], "stand": 388, "standard": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 42, 86, 87, 91, 96, 196, 208, 213, 235, 283, 292, 309, 365, 366, 383, 384, 386, 388, 392, 394, 395, 396, 399, 401, 407, 409, 410, 412, 420, 427, 428, 444, 450, 454, 455, 460, 462, 465, 468, 470, 472, 475, 477, 478, 481, 483, 487, 490, 493, 494, 495, 497, 500, 502, 506, 518, 521, 526, 534, 580, 581, 582], "standard_broadcast": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40], "standard_scal": [96, 308, 494], "standardis": [355, 356, 368, 443], "standardise_unit": [355, 369], "standpoint": 383, "stapel": [450, 451], "star": [36, 40, 228], "starmap": [326, 330, 331], "start": [16, 53, 83, 86, 88, 89, 91, 92, 94, 100, 132, 143, 205, 225, 226, 233, 238, 240, 241, 242, 250, 258, 265, 277, 280, 383, 384, 386, 388, 390, 391, 392, 393, 396, 397, 399, 400, 408, 409, 411, 412, 413, 414, 418, 419, 420, 421, 423, 428, 437, 440, 441, 442, 443, 444, 449, 451, 453, 454, 455, 456, 457, 459, 460, 461, 463, 464, 465, 467, 469, 470, 471, 472, 473, 476, 477, 478, 479, 481, 482, 483, 484, 486, 490, 493, 497, 498, 499, 502, 506, 508, 509, 522, 526, 580], "start_po": [129, 343, 473], "startswith": 383, "stat": [6, 100, 102, 106, 111, 125, 127, 128, 129, 132, 133, 135, 213, 214, 216, 218, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 376, 383, 395, 403, 411, 412, 414, 420, 427, 429, 430, 431, 432, 435, 441, 444, 445, 446, 450, 451, 456, 457, 459, 460, 461, 463, 465, 467, 468, 469, 470, 473, 477, 479, 481, 482, 486, 487, 495, 498, 506, 507, 520, 582, 583, 584], "stat_arrai": [99, 102, 103, 106, 110, 111, 411, 451], "stat_contour": 213, "stat_kwarg": 102, "stat_max": [291, 293], "stat_nul": [125, 127, 128, 129, 132, 133, 135, 291, 293, 450, 463, 473, 477, 486, 520], "stat_per_bin": 395, "stat_profil": [213, 455, 487, 495, 522], "stat_scan": [102, 125, 127, 128, 129, 132, 133, 135, 136, 145, 213, 290, 451, 455, 459, 477, 486, 487, 495, 520], "stat_sum": [99, 100, 102, 103, 106, 110, 111, 411, 412, 448, 449, 467, 478, 485, 492, 522], "stat_sum_no_prior": 412, "stat_surfac": [213, 432, 522], "stat_typ": [102, 103, 106, 110, 111, 430, 459, 467, 478, 485, 492], "state": [16, 45, 47, 205, 213, 383, 389, 393, 395, 399, 403, 405, 407, 412, 455, 460, 506, 527, 548], "stateless": 410, "statement": [383, 386, 390, 448, 450, 511], "static": [17, 21, 22, 24, 25, 27, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 101, 104, 107, 108, 109, 120, 124, 125, 127, 128, 129, 132, 133, 135, 156, 164, 175, 181, 182, 194, 195, 196, 198, 204, 205, 207, 208, 220, 222, 223, 224, 225, 227, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 247, 248, 255, 256, 257, 258, 263, 264, 265, 267, 270, 271, 272, 277, 279, 280, 281, 380, 391, 394, 414, 426, 443], "staticmethod": [394, 406, 411, 412, 493, 495], "stationari": 412, "statist": [6, 19, 20, 26, 79, 99, 100, 102, 103, 106, 110, 111, 124, 125, 127, 128, 129, 132, 133, 135, 144, 148, 175, 213, 215, 220, 221, 224, 228, 230, 231, 232, 237, 243, 244, 247, 251, 253, 255, 262, 267, 269, 270, 271, 272, 275, 279, 289, 290, 291, 293, 294, 295, 300, 307, 395, 398, 401, 402, 403, 405, 411, 426, 430, 431, 432, 435, 437, 449, 450, 454, 455, 460, 462, 463, 464, 465, 467, 469, 473, 475, 476, 478, 479, 482, 485, 487, 489, 495, 506, 507, 518, 520, 522, 529, 532, 580, 581], "statu": [19, 20, 26, 125, 127, 212, 214, 215, 217, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 247, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 274, 275, 276, 277, 278, 279, 280, 281, 383, 386, 387, 389, 390, 391, 392, 394, 395, 396, 397, 398, 399, 400, 401, 403, 404, 405, 406, 407, 409, 410, 411, 412, 445, 450, 492, 493], "std": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 292, 309, 462, 482, 498], "stddev": 68, "stderr": 383, "stdev": 412, "stdout": [318, 383], "steadi": 455, "steep": 462, "stefan": [439, 450, 451], "step": [19, 20, 26, 124, 128, 132, 133, 135, 213, 214, 220, 221, 222, 223, 224, 225, 227, 228, 230, 231, 232, 233, 236, 237, 238, 239, 240, 241, 242, 243, 244, 247, 251, 252, 253, 254, 255, 256, 257, 258, 262, 263, 264, 265, 267, 268, 269, 270, 271, 272, 274, 275, 277, 278, 279, 280, 383, 386, 389, 390, 393, 394, 395, 397, 398, 399, 401, 404, 408, 411, 412, 413, 414, 420, 437, 444, 445, 449, 454, 459, 461, 464, 467, 469, 470, 471, 472, 477, 478, 485, 486, 487, 489, 493, 495, 506, 507, 508, 522, 530, 535], "stepprior": 411, "stepsampl": 412, "stepsiz": 170, "steradian": 203, "stewart": [135, 302, 463, 581], "stewart2009": [135, 581, 584], "stick": [386, 406, 425, 444, 487, 581], "still": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 390, 391, 393, 396, 397, 400, 402, 403, 404, 407, 408, 410, 412, 413, 414, 442, 443, 444, 493, 495, 508, 520, 544, 545, 582], "stipul": 409, "stone": [383, 403], "stop": [16, 52, 83, 86, 88, 89, 91, 92, 100, 132, 135, 205, 225, 226, 233, 238, 240, 241, 242, 250, 258, 265, 277, 280, 393, 420, 449, 460, 464, 465, 467, 477, 479, 481, 487, 498, 506], "storag": [82, 522], "store": [11, 15, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 56, 69, 82, 83, 85, 86, 87, 91, 125, 126, 127, 130, 132, 163, 176, 177, 195, 196, 198, 204, 207, 208, 213, 214, 216, 218, 226, 250, 366, 383, 384, 386, 389, 391, 392, 393, 395, 396, 399, 401, 405, 407, 409, 410, 414, 432, 435, 436, 451, 456, 461, 462, 471, 472, 479, 481, 482, 485, 486, 487, 488, 489, 490, 491, 494, 497, 498, 499, 500, 508, 518, 519, 522, 527, 528, 529, 534, 535, 558, 579, 580, 582, 586], "store_per_ob": 399, "store_trac": [213, 487], "str": [15, 16, 19, 20, 26, 50, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 77, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 93, 94, 99, 100, 101, 102, 103, 105, 106, 107, 108, 109, 110, 111, 113, 114, 118, 122, 124, 125, 126, 127, 128, 130, 132, 133, 135, 136, 138, 139, 140, 141, 145, 147, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 162, 164, 165, 166, 167, 168, 169, 172, 175, 176, 181, 182, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 214, 216, 217, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 247, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 274, 275, 276, 277, 278, 279, 280, 281, 284, 310, 322, 331, 346, 347, 348, 352, 365, 366, 368, 372, 376, 377, 379, 397, 410, 459, 461, 481, 489, 493], "str3": [87, 91], "straight": [384, 416, 522], "straightforward": [414, 585], "strang": 383, "strategi": [289, 383, 390, 397, 449, 487, 585], "stream": 383, "streil": [411, 448, 449, 450], "strength": [51, 54, 411, 558], "stretch": [195, 196, 198, 204, 207, 208, 373, 374, 378, 463, 467, 473, 475, 489, 490, 492, 498, 506, 507, 508], "strict": [16, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 84, 90, 103, 105, 106, 126, 153, 154, 160, 165, 168, 171, 200, 206, 208, 276, 451], "strict_bound": 200, "strictli": [16, 84, 90, 105, 126, 200], "strike": 518, "string": [15, 16, 26, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 56, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 87, 90, 91, 93, 105, 125, 126, 127, 128, 129, 132, 135, 156, 162, 164, 166, 171, 194, 195, 196, 198, 200, 201, 203, 204, 206, 207, 208, 216, 218, 226, 250, 310, 328, 372, 383, 396, 397, 400, 402, 409, 410, 423, 427, 435, 437, 460, 484, 491, 493, 506, 534, 535], "strip": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40], "strip_units_from_tre": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40], "strong": [52, 396, 403, 459], "stronger": 495, "strongli": [298, 398, 400, 409, 435, 464, 487, 495], "structur": [87, 91, 206, 306, 387, 388, 389, 392, 394, 396, 399, 403, 406, 409, 410, 422, 428, 429, 431, 435, 438, 450, 451, 453, 473, 485, 486, 489, 490, 491, 493, 502, 509, 510, 519, 523, 534, 535, 582], "stuck": 582, "student": 386, "studi": [46, 282, 306, 396, 399, 407, 417, 444, 451, 456, 457, 468, 469, 470, 473, 475, 477, 478, 481, 487, 490, 493, 497, 512, 522, 531, 583], "stuff": [384, 414, 522], "stuff1": 383, "stuff2": 383, "style": [87, 91, 102, 195, 196, 198, 204, 207, 208, 380, 386, 392, 409, 439, 441, 467, 475, 488, 490, 506, 507, 522, 535], "sub": [11, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 103, 106, 110, 111, 116, 119, 149, 150, 151, 152, 153, 154, 155, 156, 157, 159, 160, 162, 164, 165, 166, 167, 168, 195, 196, 197, 198, 200, 204, 205, 207, 208, 211, 383, 386, 390, 392, 393, 397, 402, 403, 404, 405, 410, 414, 423, 425, 429, 431, 432, 440, 442, 443, 469, 471, 486, 489, 491, 493, 499, 500, 518, 521, 522, 530, 580, 582, 586], "subcategori": 412, "subclass": [16, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 84, 87, 90, 91, 105, 126, 310, 397, 441, 444, 493, 495], "subcompon": [67, 80], "subfold": [391, 435], "submit": [388, 409], "submodul": [391, 425, 426, 431, 490, 508, 520], "subok": 310, "subpackag": [404, 410, 428, 435, 439], "subplot": [66, 67, 195, 196, 198, 204, 207, 208, 454, 456, 457, 459, 460, 461, 462, 463, 465, 467, 468, 469, 473, 476, 478, 479, 481, 483, 486, 487, 488, 490, 491, 492, 494, 495, 507, 522, 524, 531, 541, 545, 548], "subplot_kw": [463, 465, 469, 479, 491, 531], "subplots_adjust": [477, 482, 483, 484], "subsect": [403, 490], "subsequ": [297, 392], "subset": [82, 83, 87, 91, 128, 132, 135, 251, 410, 439, 440, 469, 479, 492, 497, 499, 521, 580], "subspac": 397, "substanti": [87, 91], "substitut": 583, "substr": [226, 250], "subtract": 461, "succeed": 125, "success": [16, 84, 90, 102, 105, 125, 126, 127, 128, 129, 132, 133, 135, 212, 213, 214, 215, 411, 412, 413, 435, 456, 457, 459, 460, 461, 463, 467, 468, 469, 473, 476, 477, 479, 481, 486, 487, 492, 498, 506, 507, 546], "successfulli": [102, 413, 456, 457, 459, 460, 461, 467, 468, 469, 478, 479, 481, 486, 487, 498, 506, 507], "sudo": 417, "suffer": [400, 479], "suffic": 478, "suffici": [386, 389, 396, 409, 449, 522], "suffix": [102, 125, 384, 394, 406, 493, 534, 536], "suggest": [386, 388, 390, 393, 397, 403, 405, 407, 411, 463, 471, 472, 522, 582], "suit": [196, 383, 535], "suitabl": 196, "sum": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 86, 103, 106, 110, 111, 127, 128, 129, 131, 132, 133, 135, 136, 137, 145, 146, 149, 150, 151, 152, 153, 155, 156, 157, 159, 162, 163, 164, 165, 166, 167, 168, 195, 196, 198, 204, 207, 208, 225, 233, 238, 240, 241, 242, 258, 265, 277, 280, 282, 291, 293, 295, 379, 383, 393, 394, 396, 405, 407, 411, 426, 450, 463, 467, 471, 479, 483, 485, 495, 498, 506, 507, 508, 518, 528, 581, 583], "sum_": 518, "sum_band": [195, 196], "sum_i": 130, "sum_j": 518, "sum_k": 518, "sum_of_implicit_term": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40], "sum_over_ax": [195, 196, 198, 204, 207, 208, 371, 444, 465, 467, 473, 479, 485, 489, 491, 492, 498, 507], "sum_over_energy_group": [124, 128, 135, 463, 469, 473], "summar": [392, 510], "summari": [15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 50, 51, 52, 53, 54, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 120, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 162, 163, 164, 165, 166, 167, 168, 170, 171, 172, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 274, 275, 276, 277, 278, 279, 280, 281, 291, 293, 318, 322, 332, 357, 370, 384, 386, 403, 422, 456, 460, 477, 478, 485, 497, 506, 522], "summaris": [383, 388, 390, 403], "summat": [291, 293, 389], "summer": 391, "sun": 41, "sunpi": [400, 403, 404], "super": [194, 196, 270, 271, 272, 453, 461, 471, 500, 536, 568, 570], "superexpcutoffpowerlaw3fglspectralmodel": [261, 406, 493, 564], "superexpcutoffpowerlaw4fgldr3spectralmodel": [77, 261, 493, 565], "superexpcutoffpowerlaw4fglspectralmodel": [261, 406, 493, 566], "superflu": [393, 479], "supernova": [28, 52, 456, 470, 493, 512, 513], "superpixel": 194, "supersed": [194, 195, 196, 206, 207, 208], "supervisor": 399, "suppli": [19, 20, 26, 87, 91, 220, 221, 224, 228, 230, 231, 232, 237, 243, 244, 247, 251, 253, 255, 256, 257, 262, 267, 269, 270, 271, 272, 275, 279, 455, 477, 478], "support": [83, 85, 86, 87, 88, 89, 91, 92, 95, 100, 101, 103, 106, 110, 111, 115, 127, 147, 158, 163, 194, 195, 196, 197, 198, 200, 205, 206, 207, 208, 213, 226, 250, 382, 387, 388, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 405, 406, 407, 410, 412, 417, 421, 424, 425, 427, 428, 429, 430, 431, 432, 435, 437, 440, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 454, 460, 462, 464, 467, 469, 475, 478, 483, 484, 485, 490, 495, 497, 498, 499, 500, 506, 521, 527, 534, 535, 577, 579, 580, 582], "suppos": [241, 277, 388, 395, 581, 583], "suppress": [152, 153, 157, 522], "sure": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 383, 386, 388, 399, 413, 459, 476, 490, 522, 582], "surfac": [28, 30, 35, 36, 39, 40, 45, 213, 266, 282, 336, 402, 432, 487, 493, 512], "surface_brightness_err": 484, "surprisingli": 397, "surround": [52, 328, 383], "survei": [63, 67, 128, 228, 390, 393, 403, 420, 453, 497, 502, 503, 512, 517, 522, 581], "survey_map": [453, 503, 504], "suspect": 584, "suss": [392, 409], "svg": 383, "swap": 194, "swept": 52, "swh": 409, "swhid": 409, "switch": [104, 109, 289, 383, 390, 393, 413, 437, 441], "switcher": 413, "swohijpf": 489, "sy": [383, 419], "syllabl": 522, "symbol": 491, "symmetr": [103, 106, 110, 111, 124, 133, 135, 183, 192, 196, 236, 383, 394, 425, 437, 440, 457, 478, 489, 495, 497, 510, 520, 528, 539, 540, 584], "symmetri": [196, 425], "sync": 444, "sync_constraint": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40], "synchronis": 409, "synchrotron": [251, 431, 558], "syntact": [87, 91], "syntax": [16, 87, 91, 384, 399, 402, 429, 446, 582], "synthesi": [512, 513], "synthet": 423, "system": [11, 83, 87, 91, 113, 114, 150, 158, 159, 194, 195, 196, 198, 201, 203, 206, 207, 208, 226, 250, 383, 389, 394, 396, 400, 403, 404, 408, 409, 411, 417, 425, 443, 449, 454, 456, 459, 460, 461, 462, 463, 464, 465, 467, 468, 469, 470, 471, 472, 473, 476, 477, 478, 479, 483, 484, 485, 487, 488, 489, 490, 491, 492, 493, 495, 497, 498, 499, 500, 506, 507, 508, 533, 534, 580, 582, 586], "systemat": [394, 407, 409, 410, 432, 459, 476, 489, 520, 581, 583], "t": [16, 26, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 50, 51, 52, 53, 67, 69, 83, 84, 86, 87, 88, 90, 91, 105, 120, 121, 122, 124, 125, 126, 127, 128, 129, 132, 133, 135, 136, 137, 144, 145, 146, 147, 152, 192, 205, 226, 241, 245, 250, 289, 291, 292, 293, 308, 355, 359, 382, 383, 384, 386, 388, 390, 391, 393, 395, 397, 399, 400, 401, 402, 403, 406, 407, 408, 410, 412, 414, 415, 416, 418, 420, 432, 436, 439, 440, 441, 444, 449, 451, 454, 455, 456, 459, 464, 467, 469, 470, 473, 475, 476, 477, 479, 481, 482, 483, 484, 486, 487, 489, 490, 491, 493, 494, 495, 497, 498, 510, 514, 515, 516, 518, 520, 522, 531, 569, 570, 571, 572, 573, 574, 575, 580, 582, 585, 586], "t0": [233, 258, 471, 477, 478, 481, 570, 574], "t1": [87, 91], "t2": [87, 91], "t_": [52, 53, 297, 527, 570, 571, 572, 573, 574, 575, 583], "t_0": 574, "t_b": 583, "t_decai": [240, 572], "t_delta": [104, 109, 205, 225, 233, 238, 240, 241, 242, 258, 265, 277, 280], "t_i": 297, "t_j": 518, "t_live": [83, 88], "t_max": [225, 233, 238, 240, 241, 242, 258, 265, 277, 280, 396, 407, 481], "t_min": [225, 233, 238, 240, 241, 242, 258, 265, 277, 280, 396, 407, 481], "t_observ": [83, 88], "t_r": 241, "t_ref": [233, 238, 240, 241, 242, 258, 265, 277, 448, 449, 471, 472, 478, 493, 570, 571, 572, 573, 574, 575, 576, 577], "t_rise": [240, 572], "t_start": [86, 519], "t_stop": [52, 86, 519], "ta": 292, "ta2": 292, "ta3": 292, "tab": [152, 388, 467, 473, 476, 486, 495, 531], "tabl": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 485, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587], "table_arrai": [87, 91], "table_associ": 67, "table_bkg_src": 470, "table_class": [87, 91], "table_compon": [67, 484], "table_filenam": 26, "table_format": 127, "table_from_row_data": 449, "table_hdu": 86, "table_identif": 67, "table_large_scale_compon": [67, 484], "table_model": [279, 406], "table_oth": 353, "tableau": 522, "tableclass": [87, 91], "tablegroup": [87, 91], "tableid": [87, 91], "tableiloc": [87, 91], "tableindic": [87, 91], "tableloc": [87, 91], "tablelocindic": [87, 91], "tablemodel": [394, 445], "tablepsf": [404, 423, 425], "tablepsfcheck": 441, "tabul": 510, "tabular": [493, 567], "tackl": 392, "tag": [19, 20, 26, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 84, 87, 90, 91, 99, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 120, 122, 123, 124, 125, 126, 128, 129, 131, 132, 133, 134, 135, 149, 150, 151, 152, 153, 154, 155, 156, 157, 159, 160, 162, 164, 165, 166, 167, 168, 170, 171, 172, 174, 175, 176, 177, 180, 181, 182, 195, 196, 198, 204, 207, 208, 220, 221, 222, 223, 224, 225, 226, 227, 228, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 248, 250, 251, 252, 253, 254, 255, 256, 257, 258, 262, 263, 264, 265, 266, 267, 270, 271, 272, 274, 275, 276, 277, 278, 279, 281, 408, 411, 413, 432, 446, 488, 493, 495, 541, 545], "tail": [497, 582], "take": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 87, 91, 103, 106, 110, 111, 124, 150, 170, 172, 204, 206, 211, 213, 226, 250, 266, 358, 381, 383, 388, 389, 392, 393, 394, 395, 396, 397, 398, 399, 402, 403, 404, 407, 412, 414, 430, 431, 432, 435, 437, 445, 446, 448, 449, 450, 454, 456, 459, 461, 462, 471, 472, 473, 478, 479, 481, 486, 487, 489, 490, 491, 493, 494, 495, 497, 507, 508, 519, 522, 535, 551, 583, 584, 585], "taken": [15, 27, 87, 91, 103, 106, 110, 111, 125, 127, 155, 163, 182, 188, 190, 204, 205, 208, 213, 300, 384, 388, 392, 396, 448, 455, 459, 467, 468, 479, 481, 486, 488, 491, 492, 497, 508, 518, 520, 531, 532, 584], "talk": [386, 388, 390, 400, 409], "tan": [196, 203, 397, 427, 459, 490, 498, 531], "tandem": 510, "tangent": [178, 223, 227, 236, 239, 252, 263, 264, 268, 274, 278], "tangenti": [194, 535], "tar": [414, 497], "target": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 88, 90, 103, 106, 110, 111, 115, 120, 124, 126, 135, 153, 154, 165, 168, 185, 186, 190, 191, 195, 196, 198, 200, 204, 207, 208, 384, 389, 390, 396, 409, 412, 413, 441, 456, 461, 469, 477, 489, 491, 507], "target_nam": 531, "target_posit": [178, 456, 459, 461, 469, 476, 477, 481, 507], "target_radec": 88, "targetmetadata": [90, 126], "task": [331, 403, 407, 409, 410, 413, 414, 445, 460, 463, 489, 490, 498, 502, 506, 522, 530, 580, 582, 586], "task_nam": 331, "tast": 582, "tau": [26, 51, 54, 138, 301, 411, 483, 548], "tau_0": 51, "taul": [26, 483], "taur": [26, 483], "taylor": [52, 53], "tb00058": [137, 146], "tbc": 412, "tbd": 245, "tbl": [87, 91], "tdelta_precis": 306, "tdk4k99y": 481, "team": [388, 392, 400, 403, 405, 409, 422, 443], "technic": [385, 386, 388, 396, 403, 405, 407, 409, 412, 414, 464], "techniqu": [389, 398, 399, 401, 412, 456, 459, 467, 470, 489, 491, 499, 529, 532, 580], "tediou": 484, "tel": [87, 91], "telescop": [82, 83, 85, 91, 95, 105, 155, 396, 397, 410, 416, 420, 421, 471, 476, 479, 494, 497, 498, 500], "tell": 461, "temp": [439, 472], "temperatur": [52, 53], "templat": [16, 26, 57, 70, 84, 90, 105, 106, 111, 116, 119, 126, 172, 180, 194, 195, 196, 198, 199, 200, 206, 207, 208, 214, 226, 241, 250, 274, 275, 276, 277, 278, 279, 286, 288, 302, 305, 388, 394, 395, 399, 406, 432, 446, 449, 450, 453, 462, 463, 465, 472, 490, 491, 492, 493, 510, 531, 536, 547, 554, 557, 562, 568, 576], "template_diffus": [492, 498], "template_extrapol": 567, "template_model": 471, "template_noextrapol": 567, "templatelightcurvetemporalmodel": 446, "templatend": [274, 275, 493], "templatendspatialmodel": [260, 493], "templatendspectralmodel": [26, 261, 437, 448, 493], "templatenpredmodel": [246, 435], "templatephasecurvetemporalmodel": [273, 446, 451, 493, 576], "templatespatialmodel": [67, 260, 405, 406, 432, 446, 447, 449, 450, 451, 471, 492, 493, 498, 546], "templatespectralmodel": [226, 250, 261, 284, 406, 493, 498, 518, 554, 557, 562, 567], "templatetemporalmodel": 446, "tempo2": [479, 522], "tempor": [217, 219, 225, 226, 233, 238, 240, 241, 242, 250, 258, 265, 266, 273, 277, 280, 297, 394, 396, 406, 407, 428, 430, 431, 432, 437, 446, 448, 449, 450, 451, 453, 455, 457, 460, 462, 463, 467, 468, 469, 471, 474, 475, 481, 482, 484, 485, 486, 492, 498, 502, 506, 522, 523, 578, 579, 581], "temporal_model": [266, 396, 471, 472, 478, 493, 569, 570, 571, 572, 573, 574, 575, 576, 577], "temporal_model1": 478, "temporal_model2": 478, "temporal_model_map": 472, "temporal_model_registri": 493, "temporal_typ": 406, "temporalbackground": 394, "temporalmodel": [225, 233, 238, 240, 241, 242, 258, 265, 266, 277, 394, 407, 431, 446, 448, 449, 451, 536], "temporari": 502, "temporarili": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 394], "ten": [389, 403], "tend": [383, 541], "tension": 482, "tensorflow": [401, 403], "tent": 413, "term": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 242, 245, 303, 307, 386, 388, 390, 392, 393, 397, 400, 403, 408, 410, 412, 433, 437, 446, 455, 463, 487, 488, 582, 584, 585], "termin": [87, 91, 102, 399, 415, 416, 417, 418, 419, 456, 457, 459, 460, 461, 467, 468, 469, 479, 481, 486, 487, 498, 506, 507, 582], "terrier": [389, 392, 393, 394, 395, 397, 398, 399, 400, 402, 404, 405, 406, 407, 408, 410, 412, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 437, 438, 439, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451], "test": [6, 16, 84, 90, 94, 101, 102, 105, 116, 119, 122, 124, 125, 126, 127, 128, 129, 132, 133, 135, 144, 163, 165, 168, 195, 196, 198, 204, 207, 208, 241, 289, 290, 291, 293, 296, 340, 357, 358, 359, 360, 361, 362, 363, 384, 389, 390, 391, 392, 393, 395, 396, 397, 398, 399, 400, 401, 408, 411, 413, 414, 424, 426, 427, 429, 431, 435, 436, 437, 440, 441, 442, 443, 444, 445, 446, 449, 451, 456, 462, 463, 472, 475, 476, 477, 478, 481, 485, 486, 488, 520, 522, 526, 532, 576, 577, 581, 584], "test2": 478, "test_aeff3d": 488, "test_edisp": 488, "test_events_with_gti": 519, "test_gti": 519, "test_person_txt": 383, "test_plot": 383, "test_psf": 488, "test_someth": 383, "test_using_data_fil": 362, "test_using_scipi": 363, "testcod": 384, "testoutput": 384, "testpar": 411, "teststatisticnest": [449, 451], "tev": [16, 19, 20, 26, 44, 52, 53, 66, 67, 71, 75, 83, 96, 102, 103, 106, 110, 111, 112, 117, 120, 125, 127, 128, 143, 144, 149, 150, 152, 154, 155, 156, 157, 162, 163, 164, 165, 166, 168, 175, 193, 194, 195, 196, 198, 199, 203, 204, 206, 207, 208, 220, 221, 224, 228, 230, 231, 232, 237, 243, 244, 247, 251, 253, 255, 256, 257, 262, 266, 267, 269, 270, 271, 272, 275, 279, 282, 283, 308, 309, 330, 378, 384, 394, 406, 407, 410, 411, 420, 454, 455, 456, 457, 459, 460, 461, 462, 463, 464, 465, 467, 468, 469, 470, 471, 472, 473, 475, 476, 477, 478, 479, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 493, 494, 495, 497, 498, 499, 500, 506, 507, 508, 516, 519, 520, 526, 527, 529, 531, 532, 535, 538, 539, 540, 541, 542, 543, 544, 545, 546, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 569, 570, 571, 572, 573, 574, 575, 576, 577, 580], "tevcat": [436, 484], "tevcat_nam": 71, "tevpi": 423, "tevtevtev1": 469, "tex": 384, "texliv": 384, "text": [17, 18, 21, 22, 23, 24, 25, 27, 50, 51, 52, 53, 54, 106, 111, 125, 127, 135, 263, 264, 309, 346, 352, 372, 384, 391, 399, 409, 414, 460, 479, 488, 497, 506, 508, 539, 540, 541, 544, 545, 549, 565, 572, 582, 584], "textcolor": 372, "textkw": 372, "th": 200, "than": [27, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 77, 87, 91, 134, 153, 154, 156, 157, 160, 164, 165, 166, 168, 172, 193, 194, 195, 196, 198, 199, 200, 203, 204, 206, 207, 208, 289, 298, 361, 376, 383, 384, 386, 388, 389, 390, 393, 396, 397, 398, 401, 402, 407, 409, 410, 412, 414, 443, 446, 447, 448, 450, 454, 456, 467, 468, 471, 476, 477, 482, 487, 489, 491, 494, 495, 518, 535, 540, 541, 582, 584], "thank": [407, 429, 430, 435, 437, 451, 489, 522], "thaw": 492, "thei": [16, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 84, 87, 90, 91, 95, 105, 109, 113, 114, 126, 132, 139, 169, 277, 297, 330, 383, 384, 386, 388, 389, 390, 391, 392, 394, 397, 399, 400, 402, 403, 406, 407, 408, 409, 410, 411, 412, 413, 414, 421, 432, 435, 437, 449, 450, 456, 457, 461, 483, 485, 487, 491, 492, 493, 494, 495, 497, 500, 510, 519, 520, 522, 527, 534, 535, 580, 581, 582, 583, 584, 586], "them": [11, 15, 16, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 83, 84, 87, 90, 91, 100, 105, 126, 217, 219, 226, 250, 310, 383, 384, 386, 388, 390, 391, 397, 399, 402, 409, 410, 412, 413, 414, 420, 427, 443, 456, 457, 459, 462, 464, 467, 468, 470, 472, 476, 484, 485, 486, 487, 490, 491, 493, 495, 497, 499, 502, 507, 519, 522, 531, 582, 584], "theme": [437, 444, 451], "themselv": [87, 91, 399, 489, 491, 529], "theorem": [289, 520, 584], "theoret": 495, "therefor": [106, 389, 393, 396, 397, 398, 402, 404, 406, 412, 417, 435, 451, 456, 476, 479, 487, 490, 491, 494, 495, 499, 508, 520, 584, 585], "thereof": 394, "thermal": [19, 558, 581], "thermal_relic_cross_sect": 19, "theta": [33, 34, 38, 52, 53, 156, 162, 164, 166, 170, 178, 192, 201, 311, 314, 383, 432, 461, 498, 508, 539, 540, 544, 545], "theta2": [182, 192, 381, 443], "theta2_axi": 500, "theta2_max": 381, "theta2_min": 381, "theta2_t": 500, "theta_0": [33, 38], "theta_squared_axi": [192, 500], "thew": 484, "thi": [6, 15, 16, 19, 20, 26, 27, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 46, 47, 56, 67, 68, 69, 82, 83, 84, 85, 86, 87, 88, 90, 91, 100, 103, 104, 105, 106, 109, 110, 111, 115, 120, 124, 125, 126, 127, 128, 129, 131, 132, 134, 135, 136, 139, 143, 145, 146, 149, 150, 151, 152, 153, 154, 155, 156, 157, 159, 160, 162, 163, 164, 165, 166, 167, 168, 170, 172, 175, 177, 178, 179, 181, 183, 185, 186, 189, 191, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 213, 216, 218, 220, 221, 223, 224, 227, 228, 230, 231, 232, 233, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 247, 251, 252, 253, 254, 255, 256, 257, 258, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 274, 275, 277, 278, 279, 282, 289, 291, 293, 299, 310, 318, 328, 331, 334, 339, 340, 358, 361, 368, 370, 372, 373, 374, 378, 380, 382, 383, 384, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 420, 422, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 437, 438, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 454, 455, 456, 457, 459, 460, 461, 462, 463, 464, 465, 467, 468, 469, 470, 471, 472, 473, 475, 476, 477, 478, 479, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 497, 498, 499, 500, 502, 504, 506, 507, 508, 510, 511, 518, 519, 520, 522, 524, 525, 526, 527, 528, 529, 531, 532, 533, 534, 535, 538, 539, 540, 541, 542, 543, 544, 545, 546, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 569, 570, 571, 572, 573, 574, 575, 576, 577, 579, 580, 581, 582, 583, 584, 585, 586], "thick": 380, "thin": [56, 322], "thing": [383, 386, 388, 391, 397, 398, 399, 400, 403, 407, 414, 423, 442, 461, 464, 478, 479, 491, 498], "think": [388, 400, 401, 403], "third": [62, 63, 87, 91, 384, 435, 484, 487, 490, 502, 508, 517], "thoma": [409, 443], "thorough": [490, 510], "those": [15, 83, 181, 195, 196, 198, 204, 207, 208, 213, 217, 219, 226, 250, 318, 372, 383, 386, 388, 390, 392, 397, 399, 402, 403, 404, 405, 406, 408, 414, 415, 416, 418, 419, 429, 432, 476, 481, 487, 490, 491, 492, 494, 502, 508, 520, 522, 531, 586], "though": [15, 386, 391, 397, 398, 399, 401, 403, 460, 493, 506], "thought": [388, 397], "three": [87, 91, 163, 292, 383, 392, 395, 397, 409, 413, 451, 469, 471, 476, 482, 490, 495, 502, 527, 534, 581], "threshold": [67, 103, 110, 120, 125, 126, 127, 135, 143, 144, 152, 153, 157, 170, 181, 205, 289, 372, 373, 374, 397, 425, 431, 432, 454, 459, 461, 463, 469, 473, 476, 484, 485, 487, 489, 491, 497, 506, 518, 520], "threshold_alpha": 170, "through": [41, 87, 91, 309, 310, 380, 386, 388, 396, 397, 403, 407, 408, 412, 417, 421, 435, 446, 455, 463, 472, 482, 487, 489, 490, 491, 492, 498, 499, 522, 527, 534, 581, 584], "throughout": [13, 390, 392, 393, 397, 399, 442, 484], "throught": 473, "thrown": 493, "thu": [383, 390, 397, 400, 401, 403, 439, 454, 455, 464, 465, 469, 471, 486, 579, 585], "thumbnail": 435, "ti": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 196, 392, 478], "tibaldo": 440, "tick": [448, 449], "tick_param": 454, "ticker": 372, "tight_layout": [477, 487, 495, 541, 545], "tightli": 402, "tikonov": 411, "tild": [194, 206], "tile": [194, 196], "tilt": [256, 276, 394, 405, 406, 411, 424, 430, 464, 467, 468, 471, 472, 475, 485, 493, 498, 506, 507, 529, 535, 542, 562, 567], "tilt_prior": 411, "tim": 450, "time": [6, 19, 20, 50, 51, 52, 53, 78, 82, 83, 85, 86, 87, 88, 89, 91, 92, 94, 100, 102, 103, 104, 105, 106, 109, 110, 111, 113, 125, 126, 127, 132, 135, 138, 139, 147, 171, 177, 188, 190, 195, 196, 197, 198, 199, 204, 205, 207, 208, 213, 216, 218, 225, 228, 233, 238, 240, 241, 242, 258, 265, 266, 277, 280, 292, 297, 301, 306, 340, 360, 364, 365, 366, 367, 383, 384, 386, 388, 389, 390, 391, 393, 396, 397, 399, 400, 401, 402, 403, 404, 406, 407, 408, 409, 412, 413, 414, 416, 420, 424, 425, 428, 429, 430, 432, 435, 439, 441, 442, 443, 444, 445, 446, 448, 449, 450, 451, 455, 459, 461, 462, 463, 465, 467, 469, 470, 472, 473, 475, 476, 479, 483, 484, 485, 486, 487, 489, 490, 491, 492, 493, 494, 495, 497, 498, 499, 506, 507, 508, 514, 515, 516, 518, 519, 520, 522, 527, 531, 535, 540, 541, 548, 569, 570, 571, 572, 573, 574, 575, 576, 577, 581, 582, 583, 584, 585], "time1": 301, "time2": 301, "time_axi": [195, 196, 198, 199, 204, 207, 208, 292, 472, 481, 490, 535], "time_bin": 398, "time_bin_end": 398, "time_bin_s": 398, "time_bin_start": 398, "time_bound": 205, "time_box": 91, "time_column": 407, "time_delta": [86, 205, 364, 367], "time_edg": [205, 482, 490], "time_filt": 89, "time_format": [127, 205, 449, 478], "time_info": 90, "time_interv": [16, 83, 86, 88, 92, 132, 460, 464, 465, 467, 472, 476, 477, 481, 506], "time_map_axi": [205, 490], "time_map_axis_contigu": 490, "time_max": [100, 125, 127, 205, 397, 398, 399, 472, 476, 481, 484, 490], "time_mid": [205, 482], "time_min": [100, 125, 127, 205, 397, 398, 399, 472, 476, 481, 484, 490], "time_rang": [91, 225, 233, 238, 240, 241, 242, 258, 265, 277, 280, 472, 569, 570, 571, 572, 573, 574, 575, 576, 577], "time_ref": [83, 85, 86, 91, 94, 199], "time_ref_default": 86, "time_ref_from_dict": 586, "time_relative_to_ref": 586, "time_resolved_spectroscopi": [453, 480, 481], "time_seri": 292, "time_start": [85, 86, 91, 398], "time_step": 398, "time_stop": [85, 86, 91, 398], "time_sum": [86, 225, 233, 238, 240, 241, 242, 258, 265, 277, 280], "timedelta": [87, 91, 94, 205, 225, 233, 238, 240, 241, 242, 258, 265, 277, 280, 340, 364, 367, 586], "timedelta64": [87, 91], "timeinfometadata": 90, "timelin": [388, 390, 443], "timemapaxi": [127, 147, 197, 199, 435, 450, 451, 477, 478, 481, 482], "timerangeconfig": 16, "timeref": 471, "timescal": [139, 233, 298, 408, 482], "timeseri": 398, "timesi": [94, 447, 449, 471], "timestamp": 383, "timeunit": 471, "timmer": [292, 451], "timmer1995": 292, "tini": [469, 497], "tip": 522, "titl": [388, 473, 483], "tiziani": 441, "tke": 498, "tm": [87, 91], "tmax": 398, "tmid": [88, 449, 469, 489, 494, 507], "tmin": 398, "to_2d": [150, 500], "to_3d": [149, 448, 450], "to_bands_hdu": [193, 194, 203, 206], "to_binsz": [194, 203, 206, 435], "to_binsz_wc": 203, "to_contigu": [205, 490], "to_counts_hdulist": 108, "to_cub": [193, 194, 195, 196, 198, 203, 204, 206, 207, 208, 432, 465, 535], "to_dict": [19, 20, 26, 99, 102, 103, 106, 110, 111, 212, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 247, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 274, 275, 276, 277, 278, 279, 280, 281, 410, 495], "to_edisp_kernel": [157, 451, 526], "to_edisp_kernel_map": [154, 435, 526], "to_energy_dependent_table_psf": 443, "to_even_npix": 206, "to_fits_head": 85, "to_fram": 201, "to_gti": [205, 450], "to_hdu": [195, 196, 207, 208], "to_hdulist": [103, 106, 110, 111, 125, 127, 149, 150, 151, 152, 153, 154, 155, 156, 157, 159, 160, 162, 164, 165, 166, 167, 168, 195, 196, 202, 203, 204, 207, 208, 490], "to_head": [84, 90, 105, 126, 194, 197, 199, 200, 205, 206, 410], "to_html": 383, "to_imag": [103, 106, 110, 111, 152, 153, 163, 165, 168, 193, 194, 203, 206, 405, 429, 430, 454, 465, 469, 485, 498, 532, 535], "to_json": [16, 84, 90, 105, 126], "to_map": [125, 127], "to_map_dataset": [106, 111], "to_mask": [103, 106, 110, 111, 483], "to_model": [56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 435, 484], "to_node_typ": 200, "to_nsid": [194, 196], "to_odd_npix": 206, "to_panda": [87, 91], "to_parameters_t": [226, 250, 455, 456, 459, 460, 461, 464, 467, 477, 487, 495, 507], "to_pixel": [397, 459, 469, 483, 489, 493, 531, 539, 540, 541], "to_polygon": 397, "to_psf3d": [156, 164, 166], "to_python": [16, 84, 90, 105, 126], "to_region": [222, 223, 226, 227, 236, 239, 250, 254, 263, 264, 278, 397, 429, 493, 539, 540, 541], "to_region_map_dataset": [103, 106, 110, 111, 485], "to_region_nd_map": [153, 154, 160, 165, 168, 196, 204, 208, 432, 435, 498], "to_region_nd_map_histogram": [208, 449], "to_sed_typ": 407, "to_sherpa": [429, 443, 444], "to_spectrum": 435, "to_spectrum_dataset": [100, 103, 106, 110, 111, 405, 428, 430, 479, 485, 495], "to_st": 449, "to_str": [449, 454], "to_swap": [194, 195, 196], "to_tabl": [102, 127, 149, 150, 151, 152, 155, 156, 157, 159, 162, 164, 166, 167, 199, 200, 204, 205, 217, 219, 241, 435, 451, 455, 457, 459, 460, 469, 473, 475, 476, 478, 484, 486, 493, 508, 520], "to_table_hdu": [83, 86, 149, 150, 151, 152, 155, 156, 157, 159, 162, 164, 166, 167, 199, 200, 490], "to_table_psf": 441, "to_template_sky_model": [226, 250], "to_template_spectral_model": [226, 250, 406], "to_unit": [149, 150, 151, 152, 155, 156, 157, 159, 162, 164, 166, 167, 195, 196, 198, 204, 207, 208], "to_wc": [195, 196], "to_wcs_geom": [194, 203, 535], "to_wcs_til": [194, 196], "to_yaml": [16, 84, 90, 105, 126, 226, 250, 394, 410, 493, 538, 539, 540, 541, 542, 543, 544, 545, 546, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 569, 570, 571, 572, 573, 574, 575, 576, 577], "tob": 460, "todai": 409, "todo": [13, 79, 99, 163, 279, 384, 407, 426, 497, 512, 513, 586], "tof": 162, "togeth": [100, 103, 106, 110, 111, 128, 132, 226, 250, 380, 383, 396, 400, 403, 415, 427, 455, 465, 467, 468, 473, 477, 485, 487, 489, 492, 493, 494, 495, 500, 507, 518, 519, 582], "tol": [289, 487], "toler": [86, 100, 132, 149, 150, 151, 152, 155, 156, 157, 159, 162, 164, 166, 167, 194, 195, 196, 198, 200, 203, 204, 206, 207, 208, 360, 487], "tolist": 487, "tomato": 455, "toml": 432, "ton": [298, 497], "too": [383, 388, 389, 412, 434, 435, 448, 449, 450, 487, 491], "took": [408, 412], "tool": [6, 13, 195, 196, 198, 207, 208, 382, 386, 390, 392, 394, 396, 399, 400, 403, 409, 421, 429, 440, 443, 444, 470, 473, 478, 485, 487, 490, 494, 497, 498, 500, 510, 522, 556, 580, 581], "toolbox": [399, 440], "top": [110, 111, 370, 379, 383, 388, 399, 403, 405, 417, 443, 461, 463, 469, 473, 476, 478, 482, 484, 489, 508, 522, 535, 580, 582, 586], "top_five_ts_3fhl": 508, "tophat2dkernel": 124, "topic": [388, 392, 403, 411, 508], "total": [51, 67, 99, 102, 103, 106, 110, 111, 128, 129, 132, 133, 142, 175, 190, 194, 214, 225, 233, 238, 240, 241, 242, 258, 265, 277, 280, 307, 391, 407, 411, 416, 418, 450, 453, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 477, 478, 479, 480, 481, 483, 484, 485, 486, 487, 489, 490, 491, 492, 495, 496, 498, 501, 503, 505, 506, 507, 508, 509, 512, 518, 522, 527, 537, 547, 558, 568, 578, 581], "total_jfact": 483, "total_jfact_decai": 483, "total_model": 394, "total_obstim": 489, "total_stat": [214, 215, 412, 455, 481, 487, 583], "touch": [86, 424], "tour": 502, "toward": [328, 390, 397, 403, 445], "tox": [347, 384, 386, 446, 454, 456, 459, 460, 461, 462, 463, 464, 465, 467, 468, 469, 470, 471, 472, 473, 475, 476, 477, 478, 479, 481, 483, 484, 485, 487, 489, 490, 491, 492, 493, 495, 497, 498, 499, 500, 506, 507, 508, 546, 554, 570], "tqdm": 522, "trace": [213, 214, 215, 432, 487], "traceback": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 383], "track": [85, 94, 383, 392, 398, 409, 437, 492], "tracker": [386, 397, 413, 451], "tradit": 412, "tradition": [412, 493, 583], "train": 408, "traitlet": [399, 410], "traittyp": 410, "transfer": 410, "transform": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 83, 85, 94, 163, 197, 199, 200, 205, 206, 226, 250, 312, 316, 339, 344, 383, 397, 399, 407, 411, 412, 423, 425, 441, 444, 463, 469, 489, 495, 534, 539, 540, 586], "transit": [27, 373, 374, 390, 424, 425, 443, 499], "transit_map": 499, "transit_numb": 499, "transitsmap_crab": 499, "translat": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 399, 520], "transpar": 398, "transport": 490, "transpos": 444, "trapezoid": [149, 150, 151, 152, 155, 156, 157, 159, 162, 164, 166, 167, 285, 321], "trapz": 321, "trapz_loglog": 430, "trash": 426, "travi": [429, 431, 435], "treat": [95, 416, 448, 449, 459, 471, 585], "treatment": [435, 459, 467, 581], "trend": 471, "tri": [77, 391, 397], "tributor": 409, "tricki": 397, "trigger": [361, 383, 413, 499], "trim": [103, 106, 153, 154, 160, 165, 168, 171, 206, 208, 276], "tripl": 156, "trivial": 390, "troubl": 582, "troubleshoot": [416, 417, 418], "trough": 482, "true": [15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 35, 36, 37, 39, 40, 45, 80, 82, 83, 84, 86, 87, 88, 90, 91, 93, 96, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 113, 114, 115, 116, 118, 119, 124, 125, 126, 127, 128, 132, 133, 135, 136, 142, 145, 149, 150, 152, 153, 154, 155, 156, 157, 159, 160, 162, 163, 164, 165, 166, 167, 168, 171, 175, 181, 182, 185, 186, 188, 189, 191, 194, 195, 196, 198, 199, 200, 201, 202, 203, 204, 206, 207, 208, 210, 213, 214, 217, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 247, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 274, 275, 276, 277, 278, 279, 280, 281, 307, 310, 318, 319, 322, 340, 352, 354, 371, 376, 380, 383, 389, 396, 397, 398, 399, 406, 407, 410, 412, 426, 430, 431, 442, 444, 445, 454, 455, 456, 457, 459, 460, 461, 462, 463, 464, 465, 467, 468, 469, 470, 471, 472, 473, 475, 476, 477, 478, 479, 481, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 495, 498, 499, 504, 506, 507, 508, 512, 518, 520, 522, 527, 532, 534, 535, 538, 539, 540, 543, 544, 546, 567, 581, 584], "truelov": 53, "truncat": [135, 328, 435], "truncation_valu": [294, 300], "trust": [16, 84, 90, 105, 126], "trustworthi": 411, "truth": 495, "try": [16, 77, 84, 90, 105, 126, 195, 196, 198, 204, 207, 208, 383, 384, 393, 397, 403, 413, 414, 420, 425, 457, 459, 461, 471, 472, 476, 484, 487, 490, 508, 582], "ts2": 292, "ts3": 292, "ts_image_estim": 469, "ts_scan": [125, 127], "ts_threshold": [147, 289], "ts_threshold_ul": [479, 520], "ts_to_sigma": [470, 584], "tsimageestim": 443, "tsmap": 451, "tsmap_est": 376, "tsmapestim": [121, 145, 146, 376, 404, 407, 430, 431, 433, 435, 449, 451, 463, 469, 522], "tstart": [88, 91, 396, 398, 462, 471, 475, 477, 478, 481, 497], "tstop": [88, 396, 398, 462, 471, 475, 477, 481, 497], "tt": [86, 94, 365, 366, 409, 472, 477, 481, 586], "tth_sec3": 200, "tupl": [16, 19, 20, 26, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 41, 56, 83, 84, 87, 88, 90, 91, 102, 103, 105, 106, 110, 111, 126, 130, 135, 149, 150, 152, 153, 154, 155, 156, 157, 160, 162, 163, 164, 165, 166, 168, 171, 176, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 206, 207, 208, 211, 220, 221, 224, 228, 230, 231, 232, 237, 243, 244, 247, 251, 253, 255, 256, 257, 262, 267, 269, 270, 271, 272, 275, 276, 279, 291, 293, 296, 322, 332, 339, 383, 490, 534], "turn": [83, 88, 384, 386, 397, 497, 579], "tutori": [82, 99, 122, 132, 134, 180, 383, 386, 387, 392, 395, 396, 397, 398, 399, 400, 401, 404, 412, 414, 418, 419, 420, 421, 424, 425, 426, 427, 428, 429, 430, 431, 432, 434, 435, 437, 438, 441, 442, 443, 444, 445, 446, 449, 450, 451, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 464, 466, 467, 468, 469, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 484, 485, 486, 487, 488, 490, 492, 493, 494, 495, 496, 498, 500, 501, 503, 505, 506, 507, 508, 509, 522, 523, 525, 534, 579, 582], "tutorials_jupyt": [413, 502], "tutorials_python": 502, "tweak": [399, 435, 451, 490], "twice": [124, 534, 585], "twinx": 454, "two": [19, 20, 26, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 59, 77, 86, 87, 89, 91, 102, 103, 106, 110, 111, 138, 149, 150, 151, 152, 155, 156, 157, 158, 159, 162, 164, 166, 167, 171, 176, 178, 194, 195, 196, 197, 198, 200, 203, 204, 206, 207, 208, 213, 220, 221, 222, 223, 224, 225, 226, 227, 228, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 247, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 274, 275, 276, 277, 278, 279, 280, 281, 289, 340, 350, 372, 377, 380, 382, 383, 384, 386, 390, 392, 393, 394, 395, 397, 398, 399, 400, 401, 403, 404, 407, 408, 409, 411, 413, 414, 416, 437, 443, 445, 449, 451, 460, 461, 467, 468, 470, 473, 478, 484, 485, 486, 487, 488, 490, 491, 493, 494, 495, 497, 499, 506, 507, 512, 518, 519, 520, 522, 531, 534, 535, 550, 584, 585], "txt": [127, 408, 410, 413, 492, 498], "tyler": 437, "type": [16, 19, 20, 26, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 69, 84, 87, 89, 90, 91, 96, 99, 100, 102, 103, 105, 115, 124, 125, 126, 127, 129, 135, 169, 175, 193, 194, 195, 196, 198, 200, 203, 204, 206, 207, 208, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 274, 275, 276, 277, 278, 279, 280, 281, 282, 310, 340, 389, 392, 393, 394, 395, 397, 398, 399, 402, 406, 407, 409, 411, 414, 415, 420, 428, 435, 441, 442, 443, 449, 451, 455, 456, 457, 459, 460, 461, 462, 463, 464, 465, 467, 468, 469, 470, 471, 472, 473, 475, 476, 477, 478, 481, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 497, 498, 499, 506, 507, 508, 510, 522, 534, 538, 539, 540, 541, 542, 543, 544, 545, 546, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 569, 570, 571, 572, 573, 574, 575, 576, 577, 581, 582], "typeerror": [16, 84, 90, 105, 126, 310, 397, 407, 411], "typic": [125, 389, 392, 394, 401, 405, 406, 407, 408, 410, 413, 416, 417, 456, 461, 465, 473, 475, 476, 477, 484, 485, 486, 488, 491, 493, 494, 510, 517, 518, 519, 527, 531, 580, 581], "typing_extens": [16, 84, 90, 105, 126], "typo": [383, 421, 447, 448, 451], "u": [19, 20, 26, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 66, 83, 85, 87, 91, 96, 103, 106, 110, 111, 116, 119, 120, 125, 127, 129, 131, 135, 143, 144, 152, 154, 163, 193, 194, 195, 196, 198, 199, 203, 204, 205, 206, 207, 208, 220, 221, 224, 228, 230, 231, 232, 237, 241, 243, 244, 247, 251, 253, 255, 256, 257, 262, 267, 269, 270, 271, 272, 275, 279, 282, 283, 292, 308, 309, 310, 330, 378, 383, 386, 390, 391, 392, 398, 399, 400, 401, 406, 407, 410, 411, 424, 425, 426, 443, 444, 445, 454, 455, 456, 457, 459, 461, 462, 463, 464, 465, 467, 468, 469, 470, 471, 472, 473, 475, 476, 477, 478, 479, 481, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 497, 498, 499, 500, 506, 507, 508, 512, 519, 520, 522, 524, 529, 531, 532, 535, 539, 541, 542, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 569, 570, 571, 572, 573, 574, 575, 576], "u03c3": 470, "u18": [33, 38], "uasnk14j": 481, "uc": [87, 91], "udyaprcw": 481, "ufunc": [195, 196, 198, 204, 207, 208, 461, 481], "ui": [28, 30, 31, 32, 33, 35, 36, 37, 38, 39, 40, 50, 52, 53, 57, 58, 60, 61, 62, 83, 88, 120, 138, 155, 247, 282, 283, 292, 299, 301], "uipjbktb": 481, "ul": [67, 124, 125, 127, 128, 129, 132, 133, 135, 290, 468, 473, 478, 484], "ultim": 383, "ultranest": 412, "un": [395, 409, 432, 492], "unambigu": 493, "unbehaun": 450, "unbin": [395, 396, 444], "unboundlocalerror": 383, "uncertaint": 401, "uncertainti": [52, 103, 106, 110, 111, 291, 293, 387, 400, 412, 442, 457, 459, 479, 487, 495, 507, 580, 581, 583], "unchang": [103, 106, 110, 111, 116, 119, 125, 127, 149, 150, 151, 152, 153, 154, 155, 156, 157, 159, 160, 162, 164, 165, 166, 167, 168, 193, 194, 195, 196, 198, 199, 203, 204, 206, 207, 208, 443], "unclear": [383, 393, 394, 400, 410], "uncom": [399, 497], "undefin": 585, "under": [72, 91, 136, 137, 145, 146, 383, 387, 392, 400, 409, 444, 445, 455, 460, 502, 506, 518, 584, 585], "underestim": 520, "underflow": 205, "underli": [87, 91, 203, 396, 457, 484, 490, 495, 508, 510, 519, 531, 534], "underscor": 383, "understand": [399, 421, 429, 430, 456, 459, 460, 461, 464, 471, 472, 477, 478, 482, 490, 491, 492, 497, 506, 507, 582], "undertak": 403, "underwai": 412, "unevenli": [138, 301], "unexpect": 499, "unfold": 581, "unfreez": [19, 20, 26, 217, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 247, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 274, 275, 276, 277, 278, 279, 280, 281, 558], "unfreeze_al": [217, 219, 492], "unfrozen": 529, "unheard": 582, "uni": [411, 413], "uni_prior_stat_sum": 495, "unicod": [87, 91, 383], "unid": 67, "unidimension": 199, "unif": 429, "unifi": [87, 91, 387, 392, 397, 424, 427, 429, 430, 431, 432, 435, 444, 445, 581], "uniform": [163, 213, 245, 281, 339, 383, 392, 394, 395, 405, 407, 411, 412, 426, 427, 431, 435, 451, 456, 490, 495, 580], "uniform_filt": [130, 208], "uniformli": [396, 520], "uniformprior": [411, 451, 495], "uninstal": 382, "union": [86, 89, 103, 106, 203, 345, 397, 398, 409, 410, 427, 518], "uniqu": [87, 91, 100, 152, 194, 195, 196, 197, 198, 204, 206, 207, 208, 217, 219, 226, 234, 250, 266, 276, 376, 393, 394, 395, 396, 406, 409, 430, 451, 460, 485, 493, 499, 535, 579], "unique_id": 493, "unique_paramet": [217, 219], "uniquifi": [87, 91], "unit": [6, 19, 20, 26, 27, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 52, 66, 83, 85, 87, 88, 91, 96, 102, 103, 106, 108, 110, 111, 112, 116, 117, 119, 120, 125, 127, 129, 131, 135, 143, 144, 149, 150, 151, 152, 154, 155, 156, 157, 159, 162, 163, 164, 165, 166, 167, 175, 178, 193, 194, 195, 196, 197, 198, 199, 200, 201, 203, 204, 205, 206, 207, 208, 216, 218, 220, 221, 223, 224, 227, 228, 230, 231, 232, 233, 234, 236, 237, 238, 239, 240, 241, 242, 243, 244, 247, 251, 253, 254, 255, 256, 257, 258, 262, 263, 264, 265, 266, 267, 269, 270, 271, 272, 275, 276, 277, 278, 279, 282, 283, 292, 301, 308, 309, 310, 340, 354, 355, 356, 358, 367, 368, 369, 372, 373, 374, 378, 384, 392, 394, 397, 399, 401, 406, 407, 411, 412, 424, 425, 427, 435, 437, 443, 444, 446, 447, 448, 449, 451, 454, 455, 456, 457, 459, 460, 461, 462, 463, 464, 465, 467, 468, 469, 470, 471, 472, 473, 475, 476, 477, 478, 479, 481, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 497, 498, 499, 500, 506, 507, 508, 512, 514, 515, 516, 519, 520, 522, 524, 526, 527, 529, 531, 532, 533, 534, 535, 538, 539, 540, 541, 542, 543, 544, 545, 546, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 569, 570, 571, 572, 573, 574, 575, 576, 577, 581], "unit_string_format": [449, 454], "unitbas": 310, "uniti": [130, 197, 278, 412, 447, 541], "unitless": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 234, 276], "unitsmap": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40], "unitswarn": [454, 462, 464, 467, 469, 475, 478, 497], "univers": [195, 196, 198, 204, 207, 208, 581], "univsers": 20, "unknown": [102, 293, 463, 487, 583, 584], "unless": [93, 95, 128, 129, 132, 135, 171, 310, 382, 389, 408, 410, 488], "unlik": [87, 91, 289, 390, 401], "unmaintain": 425, "unmask": [87, 91], "unnam": [87, 91, 201], "unnecessari": [435, 446, 467], "unneed": 449, "unphys": 585, "unrealist": 383, "unrel": 586, "unreli": 497, "unsaf": 383, "unstabl": [383, 497], "unsupport": 400, "untar": 497, "until": [383, 386, 390, 397, 408, 442], "unus": [399, 427, 429], "unusu": 388, "unweight": [106, 111], "unx2joau": 467, "unzip": 497, "up": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 52, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 74, 102, 129, 131, 135, 156, 162, 164, 166, 203, 310, 383, 384, 387, 388, 390, 391, 392, 395, 397, 399, 400, 401, 403, 405, 409, 411, 412, 414, 415, 416, 418, 420, 423, 425, 426, 427, 428, 429, 430, 431, 432, 435, 439, 441, 442, 443, 444, 445, 451, 459, 460, 467, 470, 471, 495, 497, 498, 535, 582], "upcast": 310, "upcom": [391, 392], "updat": [15, 16, 84, 87, 90, 91, 104, 105, 109, 126, 202, 216, 218, 226, 250, 278, 289, 330, 350, 383, 386, 388, 389, 390, 391, 392, 395, 400, 405, 407, 409, 410, 412, 413, 414, 416, 417, 424, 425, 426, 427, 428, 429, 430, 432, 434, 435, 436, 437, 438, 441, 442, 443, 444, 446, 449, 450, 451, 490, 493, 533, 534], "update_config": 15, "update_forward_ref": [16, 84, 90, 105, 126], "update_from_dict": [216, 218], "update_link_label": [226, 250], "update_parameters_from_t": [226, 250], "updated_model": 412, "upgrad": [194, 382, 408, 417], "upload": [400, 413], "upon": [103, 106, 110, 111, 392, 464, 492, 497, 518], "upper": [17, 18, 19, 20, 21, 22, 24, 25, 26, 27, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 77, 80, 102, 124, 125, 126, 127, 128, 129, 132, 133, 135, 136, 145, 152, 200, 205, 213, 220, 221, 224, 225, 228, 230, 231, 232, 233, 237, 238, 240, 241, 242, 243, 244, 247, 251, 253, 255, 256, 257, 258, 262, 265, 267, 269, 270, 271, 272, 275, 277, 279, 280, 290, 291, 293, 410, 420, 431, 435, 442, 443, 444, 450, 459, 463, 473, 476, 485, 486, 489, 506, 518, 520, 522], "upper_error": 127, "upsampl": [165, 193, 194, 195, 196, 197, 198, 199, 200, 203, 204, 205, 206, 207, 208, 426, 446], "upsample_geom": 165, "upstream": [383, 386, 413], "upward": [291, 293], "url": 391, "us": [11, 13, 16, 17, 18, 19, 20, 21, 22, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 35, 36, 37, 39, 40, 41, 46, 47, 53, 56, 57, 59, 65, 69, 70, 71, 74, 75, 80, 82, 83, 84, 85, 86, 87, 88, 90, 91, 93, 94, 95, 96, 101, 102, 103, 104, 105, 106, 108, 109, 110, 111, 114, 115, 118, 122, 124, 125, 126, 127, 128, 129, 130, 132, 133, 135, 136, 138, 139, 140, 141, 143, 144, 145, 146, 148, 149, 150, 151, 152, 153, 155, 156, 157, 159, 162, 163, 164, 165, 166, 167, 168, 170, 171, 172, 175, 178, 179, 180, 181, 182, 183, 184, 185, 186, 188, 191, 192, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 230, 231, 232, 233, 236, 237, 238, 239, 240, 241, 242, 243, 244, 247, 250, 251, 252, 253, 254, 255, 256, 257, 258, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 274, 275, 276, 277, 278, 279, 280, 283, 285, 290, 292, 294, 306, 308, 310, 318, 321, 322, 323, 330, 331, 334, 339, 340, 347, 350, 366, 367, 369, 370, 372, 373, 374, 376, 377, 378, 379, 380, 382, 384, 385, 386, 387, 388, 389, 390, 391, 392, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 409, 410, 413, 414, 415, 416, 418, 419, 421, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 435, 436, 437, 439, 440, 441, 442, 443, 444, 445, 446, 447, 449, 450, 451, 453, 454, 455, 456, 457, 459, 461, 462, 463, 464, 465, 467, 468, 469, 472, 473, 475, 477, 478, 479, 481, 482, 483, 484, 486, 489, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 502, 504, 508, 511, 512, 522, 524, 525, 526, 528, 532, 533, 535, 536, 538, 539, 540, 541, 542, 543, 544, 545, 546, 548, 549, 550, 551, 552, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 580, 581, 582, 583, 584, 586, 587], "usabl": 383, "usag": [16, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 82, 84, 90, 105, 122, 126, 132, 134, 180, 193, 194, 203, 206, 334, 389, 393, 394, 396, 398, 402, 407, 428, 449, 450, 484, 489, 491, 492, 582], "use_cach": 251, "use_center_as_plot_label": 200, "use_enum_valu": [16, 84, 90, 105, 126], "use_evaluation_region": [226, 250], "use_fft": 208, "use_local_fil": [87, 91], "use_nullable_int": [87, 91], "use_region_cent": [175, 182, 185, 186, 188, 189, 435, 456], "useless": 497, "user": [15, 19, 20, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 77, 82, 88, 216, 220, 223, 224, 227, 228, 230, 231, 232, 233, 236, 237, 238, 239, 240, 241, 242, 243, 244, 247, 254, 255, 256, 257, 258, 262, 263, 264, 265, 267, 270, 271, 272, 277, 278, 383, 384, 386, 388, 389, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 405, 407, 408, 409, 410, 413, 414, 415, 416, 417, 418, 421, 428, 435, 436, 442, 443, 444, 446, 460, 463, 470, 471, 472, 485, 486, 488, 490, 491, 492, 493, 494, 502, 506, 519, 520, 521, 522, 527, 531, 534, 537, 543, 547, 568, 578, 579, 582], "userdataset": 395, "usernam": 386, "userwarn": [459, 461, 468, 469, 473, 498], "uses_quant": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40], "usr": 582, "usual": [29, 82, 83, 125, 143, 149, 150, 151, 163, 204, 318, 383, 384, 386, 388, 389, 390, 391, 397, 398, 403, 409, 412, 414, 449, 454, 455, 456, 457, 459, 461, 462, 464, 465, 469, 471, 472, 475, 476, 477, 478, 481, 482, 483, 485, 491, 494, 499, 507, 510, 518, 522, 524, 525, 526, 528, 531, 535, 540, 579, 581, 582, 583], "ut1": 586, "utc": [86, 88, 105, 126, 364, 471, 476, 477, 481, 490, 493, 569, 570, 571, 572, 573, 574, 575, 576, 577, 586], "utf": [87, 91], "utf8": [16, 84, 90, 105, 126], "util": [6, 96, 105, 112, 116, 117, 118, 119, 126, 127, 129, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 154, 184, 185, 186, 187, 188, 189, 190, 191, 192, 288, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 383, 392, 394, 395, 396, 397, 407, 423, 426, 427, 428, 429, 436, 437, 440, 441, 442, 443, 444, 445, 449, 450, 454, 456, 459, 460, 461, 462, 463, 464, 465, 467, 468, 469, 470, 471, 472, 473, 476, 477, 478, 479, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 497, 498, 499, 500, 506, 507, 508, 510, 511, 522, 581], "utilis": [144, 289, 384, 416, 418, 454, 459, 463, 470, 482, 486, 490, 494, 499, 507, 519, 522, 529], "uxayepau": 481, "v": [26, 31, 32, 37, 87, 91, 156, 162, 164, 165, 166, 168, 177, 184, 202, 277, 289, 314, 386, 391, 398, 399, 410, 411, 412, 413, 414, 437, 454, 476, 483, 494, 506], "v0": [95, 390, 391, 394, 395, 397, 400, 402, 403, 408, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 437, 438, 444, 445, 446, 471, 472, 488, 492, 497], "v1": [13, 101, 383, 390, 392, 394, 399, 400, 401, 402, 408, 409, 413, 429, 430, 431, 437, 442, 446, 447, 448, 449, 450, 451, 473, 498, 554], "v15": 451, "v2": [409, 410, 435, 443, 450, 467], "v3": [16, 84, 90, 105, 126, 427, 467], "v68iq8aa": 481, "v_0": [37, 49], "v_glat": 317, "v_glon": 317, "va": 539, "vagu": 388, "vain": 386, "val": [87, 91, 195, 196, 198, 204, 207, 208, 217, 219, 490, 534], "valfmt": 372, "valid": [16, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 84, 87, 90, 91, 105, 107, 125, 126, 129, 137, 146, 167, 181, 193, 194, 195, 196, 197, 198, 199, 200, 201, 203, 204, 206, 207, 208, 310, 328, 382, 383, 392, 396, 399, 400, 409, 429, 437, 446, 456, 459, 481, 487, 489, 490, 493, 498, 520, 522, 527, 581], "valid_hdu_class": [82, 87], "valid_hdu_typ": 87, "valid_interv": 481, "valid_tim": 481, "validate_al": 410, "validate_assign": [16, 84, 90, 105, 126, 410], "validate_default": [16, 84, 90, 105, 126], "validate_loc": 410, "validate_scalar": 90, "validate_zenith_angl": 410, "validationerror": [16, 84, 90, 105, 126, 410], "valle": 38, "valleespir": 512, "valu": [11, 15, 16, 19, 20, 26, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 42, 52, 83, 84, 86, 87, 88, 90, 91, 92, 95, 99, 100, 101, 102, 103, 105, 106, 110, 111, 113, 114, 120, 122, 124, 125, 126, 127, 128, 129, 130, 132, 133, 135, 136, 138, 143, 144, 145, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 162, 164, 165, 166, 167, 168, 171, 175, 181, 182, 184, 185, 186, 188, 189, 193, 194, 195, 196, 197, 198, 199, 200, 202, 203, 204, 205, 206, 207, 208, 213, 215, 216, 217, 218, 219, 220, 221, 223, 224, 225, 226, 227, 228, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 247, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 274, 275, 276, 277, 278, 279, 280, 281, 282, 289, 290, 291, 293, 294, 296, 297, 298, 301, 310, 314, 322, 323, 337, 340, 350, 354, 369, 372, 373, 374, 384, 386, 389, 394, 395, 397, 399, 401, 403, 406, 407, 410, 412, 426, 429, 435, 446, 449, 450, 451, 454, 455, 456, 457, 459, 460, 461, 462, 463, 464, 465, 467, 468, 469, 471, 472, 473, 475, 476, 477, 478, 479, 481, 482, 483, 484, 485, 486, 487, 488, 489, 491, 492, 493, 494, 497, 498, 499, 500, 506, 507, 508, 510, 514, 515, 516, 520, 522, 526, 534, 535, 538, 539, 540, 541, 542, 543, 544, 545, 546, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 569, 570, 571, 572, 573, 574, 575, 576, 577, 582, 583, 584, 585], "value_rang": 91, "value_scan": 290, "valueerror": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 72, 87, 91, 92, 100, 226, 250, 383, 397, 410], "values_equ": [87, 91], "values_err": 479, "values_scal": [149, 150, 151, 204, 208, 241, 274, 278, 279, 322, 447, 449, 472, 488], "vanilla": [87, 91], "var": [299, 416, 418], "vari": [68, 104, 109, 132, 163, 213, 322, 350, 395, 397, 398, 408, 429, 432, 453, 455, 464, 469, 470, 472, 480, 481, 489, 493, 495, 498, 502], "variability_amplitud": 482, "variability_amplitude_100": 482, "variability_amplitude_error": 482, "variability_amplitude_signific": 482, "variability_estim": [453, 477, 480, 482], "variabl": [11, 16, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 82, 84, 90, 91, 105, 126, 138, 139, 208, 291, 293, 296, 297, 298, 299, 301, 306, 321, 348, 383, 384, 386, 396, 398, 399, 414, 416, 418, 424, 425, 441, 442, 443, 449, 450, 451, 453, 454, 456, 459, 460, 461, 462, 463, 464, 465, 467, 468, 469, 470, 472, 473, 476, 477, 478, 479, 480, 481, 483, 484, 485, 487, 489, 490, 491, 492, 493, 495, 497, 498, 499, 500, 502, 506, 507, 508, 527, 582, 583, 584], "varianc": [96, 140, 141, 298, 299, 309, 398, 450, 494, 529], "variant": 414, "variat": [139, 242, 298, 389, 399, 454, 482, 488, 489, 532, 584], "varieti": [394, 580], "variou": [122, 128, 129, 132, 133, 135, 144, 383, 389, 393, 395, 398, 407, 410, 414, 416, 435, 436, 450, 455, 457, 460, 463, 468, 470, 476, 486, 487, 506, 518, 522, 580, 586], "vasco": 451, "vast": [400, 437], "vaughan": [299, 482], "vaughan2003": 299, "ve": [383, 384, 386, 582], "vector": [193, 194, 195, 196, 198, 203, 204, 206, 207, 208, 490, 526, 534], "vega": 444, "vel": 479, "vel_di": [45, 512], "vela": [66, 423, 457, 479, 508], "veloc": [31, 32, 37, 45, 49, 314, 317], "ver": 490, "verbos": [11, 82, 384, 406, 582, 584], "veri": [63, 87, 91, 143, 213, 373, 382, 383, 384, 385, 388, 389, 394, 396, 397, 398, 399, 400, 401, 402, 403, 406, 407, 410, 412, 414, 445, 454, 455, 462, 482, 484, 486, 487, 490, 495, 498, 508, 518, 522, 535, 544, 545, 579, 581, 582, 583], "verif": [100, 226, 250, 346, 349, 468, 498], "verifi": [217, 219, 239, 289, 383, 396, 484, 522], "verifywarn": 522, "verita": [97, 416, 421, 498], "versa": 194, "version": [11, 78, 85, 87, 91, 127, 183, 382, 384, 386, 387, 390, 391, 392, 393, 397, 400, 403, 409, 410, 411, 412, 414, 415, 416, 417, 419, 421, 423, 424, 425, 426, 428, 429, 434, 436, 437, 439, 442, 443, 444, 446, 447, 449, 450, 451, 454, 456, 459, 460, 461, 462, 463, 464, 465, 467, 468, 469, 470, 471, 472, 473, 476, 477, 478, 479, 483, 484, 485, 487, 489, 490, 491, 492, 493, 495, 497, 498, 499, 500, 506, 507, 508, 520, 582], "versu": [149, 155, 289, 291, 293, 497, 516], "vert": 257, "vertex": 397, "vhe": [456, 510], "via": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 67, 82, 83, 91, 104, 109, 196, 201, 211, 382, 384, 386, 391, 395, 397, 398, 399, 400, 401, 402, 404, 406, 409, 410, 411, 412, 413, 414, 416, 417, 424, 432, 440, 442, 443, 444, 448, 449, 451, 454, 455, 456, 457, 459, 460, 461, 462, 463, 464, 465, 467, 468, 469, 470, 471, 472, 473, 475, 476, 477, 478, 479, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 497, 498, 499, 500, 504, 506, 507, 508, 522, 526, 531, 535, 538, 539, 540, 541, 542, 543, 544, 545, 546, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 569, 570, 571, 572, 573, 574, 575, 576, 577, 579, 582, 586], "viabil": 410, "vice": 194, "vicin": 412, "victor": 439, "view": [83, 87, 91, 149, 150, 151, 152, 155, 156, 157, 158, 159, 162, 164, 166, 167, 172, 195, 196, 198, 202, 204, 207, 208, 234, 312, 316, 370, 383, 397, 412, 425, 430, 435, 437, 444, 445, 459, 461, 465, 467, 471, 481, 485, 488, 489, 491, 497, 498, 522, 524, 525, 526, 527, 528, 529, 531, 581], "vika": 435, "vila": 451, "vin\u00edciu": 442, "viridi": [461, 483], "virtual": [386, 414, 416, 417, 418, 582], "visibl": [87, 91, 373, 374, 391, 435, 454, 471, 499, 507, 508, 581], "vision": 388, "visit": [412, 472], "visual": [6, 196, 208, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 397, 412, 430, 431, 449, 450, 451, 459, 461, 465, 467, 469, 472, 487, 488, 494, 500, 507, 508, 522, 531, 536, 539, 580], "visualis": [380, 395, 397, 404, 431, 446, 461, 488, 493, 495, 497, 522], "vline": [516, 539, 540], "vmax": [103, 106, 110, 111, 373, 374, 464, 467, 469, 475, 485, 490, 491, 498, 499, 506, 507, 531], "vmin": [103, 106, 110, 111, 373, 374, 463, 467, 475, 485, 490, 491, 498, 499, 506, 507, 531], "vnfdykz5": 481, "volum": [27, 199, 203, 206], "vorokh": [440, 441], "voruganti": [442, 443], "vstack": [83, 86, 396], "vuillaum": [409, 443], "vx": [314, 317, 408], "vy": [314, 317], "vz": [314, 317], "w": [26, 31, 49, 86, 192, 205, 307, 384, 408, 463, 465, 473, 483, 489, 493, 495, 531, 583, 585], "wa": [16, 19, 20, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 59, 84, 85, 87, 90, 91, 93, 94, 103, 105, 120, 126, 128, 129, 132, 135, 171, 216, 220, 223, 224, 227, 228, 230, 231, 232, 233, 236, 237, 238, 239, 240, 241, 242, 243, 244, 247, 254, 255, 256, 257, 258, 262, 263, 264, 265, 267, 270, 271, 272, 277, 278, 376, 383, 386, 388, 389, 390, 391, 392, 393, 396, 397, 399, 400, 401, 402, 403, 404, 406, 407, 408, 409, 410, 411, 414, 424, 427, 428, 429, 430, 431, 432, 439, 443, 444, 445, 446, 447, 448, 449, 455, 457, 459, 465, 467, 469, 473, 489, 495, 497, 498, 499, 500, 508, 582], "wagner": 482, "wai": [33, 38, 83, 87, 91, 200, 292, 334, 340, 382, 383, 384, 386, 388, 389, 390, 391, 393, 394, 395, 397, 398, 399, 400, 403, 404, 407, 409, 412, 416, 417, 418, 420, 423, 427, 443, 444, 457, 459, 461, 464, 467, 482, 484, 485, 486, 487, 489, 490, 491, 492, 494, 497, 498, 499, 500, 502, 512, 519, 521, 522, 526, 535, 580, 582, 584], "wait": [383, 413, 414], "wakg9e8o": 481, "walk": 412, "walker": 412, "wall": [83, 88], "want": [16, 19, 20, 26, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 82, 83, 84, 90, 105, 108, 126, 152, 178, 203, 220, 221, 224, 228, 230, 231, 232, 237, 243, 244, 247, 251, 253, 255, 256, 257, 262, 267, 269, 270, 271, 272, 275, 279, 383, 385, 386, 388, 389, 390, 393, 397, 398, 399, 401, 402, 403, 412, 414, 415, 416, 417, 418, 420, 421, 424, 444, 456, 459, 460, 461, 462, 464, 471, 472, 475, 476, 478, 479, 481, 483, 484, 485, 487, 489, 490, 491, 492, 493, 495, 497, 498, 506, 507, 508, 526, 579, 582, 583, 584, 585, 586], "ward": 308, "warmup": 412, "warn": [11, 16, 26, 82, 84, 87, 90, 91, 105, 126, 196, 216, 217, 218, 219, 274, 275, 276, 278, 369, 408, 414, 426, 443, 448, 449, 450, 451, 454, 462, 463, 464, 467, 468, 469, 472, 475, 478, 479, 497, 498, 522, 546, 554, 582], "warn_miss": 87, "warn_with_traceback": 383, "wasn": [390, 444], "watch": [498, 586], "water": [416, 499], "watson": 425, "wavelength": 402, "wavelet": [423, 441], "wc": [13, 16, 83, 103, 106, 110, 129, 170, 178, 179, 183, 194, 195, 196, 198, 203, 204, 206, 207, 208, 223, 226, 227, 236, 239, 250, 252, 263, 264, 268, 274, 278, 343, 378, 383, 389, 397, 402, 425, 426, 427, 429, 435, 443, 444, 448, 450, 459, 460, 463, 464, 465, 467, 469, 473, 476, 479, 483, 485, 488, 489, 491, 492, 493, 498, 506, 507, 508, 531, 534, 539, 540, 541, 546], "wcda": [57, 70], "wcs_geom": [203, 226, 250, 490, 535], "wcs_geom_3d": 490, "wcs_geom_cel": 490, "wcs_map": [207, 208, 376], "wcs_tile": [194, 196], "wcsax": [103, 106, 110, 111, 196, 203, 204, 208, 226, 250, 378, 380, 467, 490, 508, 538, 542, 543, 544], "wcsconfig": 16, "wcsgeom": [23, 83, 103, 106, 110, 111, 112, 115, 117, 118, 124, 125, 135, 154, 163, 165, 175, 188, 189, 193, 194, 203, 207, 208, 222, 223, 227, 236, 239, 252, 254, 263, 264, 268, 274, 278, 384, 389, 397, 425, 428, 429, 430, 435, 448, 450, 451, 459, 463, 464, 469, 471, 472, 473, 475, 479, 483, 485, 486, 488, 489, 490, 491, 493, 498, 499, 507, 508, 518, 520, 529, 531, 532, 535, 538, 540, 541, 542, 543], "wcslib": 383, "wcsmap": [195, 196, 198, 208, 446], "wcsndmap": [103, 106, 112, 117, 120, 135, 143, 163, 165, 168, 170, 172, 177, 178, 179, 180, 183, 188, 189, 194, 195, 196, 198, 204, 206, 207, 209, 210, 226, 250, 266, 274, 370, 376, 378, 389, 428, 429, 430, 432, 435, 437, 444, 446, 449, 450, 463, 464, 473, 483, 485, 489, 490, 498, 508, 518, 520, 528, 531], "wcsprm": 546, "wcsshape": 490, "we": [13, 19, 20, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 65, 83, 87, 88, 89, 91, 95, 102, 135, 177, 203, 206, 216, 220, 223, 224, 227, 228, 230, 231, 232, 233, 236, 237, 238, 239, 240, 241, 242, 243, 244, 247, 254, 255, 256, 257, 258, 262, 263, 264, 265, 267, 270, 271, 272, 277, 278, 283, 358, 383, 384, 386, 388, 389, 390, 392, 393, 394, 395, 396, 397, 400, 401, 402, 403, 404, 405, 406, 409, 410, 412, 413, 414, 415, 416, 417, 418, 420, 423, 424, 425, 426, 431, 435, 437, 442, 443, 444, 445, 454, 455, 456, 457, 459, 460, 461, 462, 463, 464, 465, 467, 468, 469, 470, 471, 472, 473, 475, 476, 477, 478, 479, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 497, 498, 504, 506, 507, 508, 519, 526, 527, 529, 531, 534, 545, 548, 558, 579, 582, 583, 584, 585, 586], "weak": [402, 412, 486, 495], "weaker": 289, "weakli": 491, "web": [87, 91, 391, 409, 414, 420, 421, 435, 443, 451, 484], "webpag": [385, 391, 403, 409, 413, 443, 446], "websit": 451, "wedg": 397, "week": [386, 391, 401, 403, 408, 413], "weekli": [389, 392, 396, 397, 476], "wegen": [443, 444], "weigh": [165, 168, 495], "weight": [67, 106, 111, 153, 154, 160, 163, 165, 168, 194, 195, 196, 198, 203, 204, 206, 207, 208, 235, 245, 259, 276, 281, 411, 412, 445, 449, 470, 495, 518, 534], "weighted_chi2_paramet": 470, "weighted_kernel": 163, "weighted_sampl": 412, "welcom": [388, 397, 498], "well": [11, 19, 20, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 56, 67, 83, 87, 91, 106, 111, 116, 119, 124, 125, 133, 194, 198, 200, 204, 206, 216, 220, 223, 224, 226, 227, 228, 230, 231, 232, 233, 236, 237, 238, 239, 240, 241, 242, 243, 244, 247, 250, 254, 255, 256, 257, 258, 262, 263, 264, 265, 267, 270, 271, 272, 277, 278, 373, 374, 382, 383, 384, 385, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 409, 410, 412, 413, 414, 415, 416, 417, 420, 421, 424, 426, 427, 428, 429, 430, 431, 432, 435, 437, 438, 443, 444, 445, 449, 450, 455, 456, 462, 465, 470, 472, 476, 478, 481, 485, 486, 487, 488, 489, 490, 491, 493, 497, 498, 502, 506, 507, 508, 518, 519, 520, 531, 534, 535, 579, 580, 582, 584], "went": 424, "were": [16, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 84, 90, 105, 126, 139, 297, 383, 388, 389, 390, 391, 396, 398, 399, 400, 401, 402, 403, 404, 406, 408, 411, 414, 424, 427, 428, 429, 430, 431, 432, 435, 438, 443, 444, 447, 468, 479, 481, 491, 495, 497, 585], "wg": 413, "what": [13, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 46, 283, 340, 384, 389, 397, 400, 402, 403, 410, 412, 414, 422, 473, 483, 484, 486, 487, 497, 498, 502, 507, 510, 518, 535, 567, 582, 583, 586], "whatev": [397, 399, 400, 582], "wheel": [400, 451], "when": [16, 19, 20, 26, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 52, 53, 83, 84, 86, 87, 88, 89, 90, 91, 100, 102, 103, 104, 105, 106, 108, 109, 110, 111, 124, 125, 126, 127, 142, 153, 154, 160, 165, 167, 168, 178, 181, 195, 196, 198, 200, 202, 204, 207, 208, 213, 214, 220, 221, 224, 226, 228, 230, 231, 232, 235, 237, 241, 243, 244, 245, 247, 250, 251, 253, 255, 256, 257, 259, 262, 267, 269, 270, 271, 272, 275, 278, 279, 281, 322, 382, 383, 384, 386, 388, 389, 390, 393, 395, 397, 398, 400, 403, 408, 409, 410, 411, 413, 416, 417, 418, 429, 437, 438, 443, 445, 448, 449, 450, 455, 461, 465, 469, 472, 473, 476, 477, 479, 484, 487, 489, 490, 493, 494, 497, 498, 518, 520, 522, 527, 529, 533, 534, 581, 583, 584, 585, 586], "whenev": [87, 91], "where": [11, 16, 19, 20, 26, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 52, 69, 83, 84, 87, 88, 90, 91, 105, 125, 126, 127, 130, 135, 152, 153, 154, 160, 165, 168, 170, 181, 193, 194, 195, 196, 198, 200, 203, 204, 206, 207, 208, 209, 220, 221, 222, 223, 224, 225, 226, 227, 228, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 247, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 274, 275, 276, 277, 278, 279, 280, 281, 294, 297, 300, 302, 310, 347, 384, 386, 388, 390, 391, 392, 393, 394, 395, 396, 397, 399, 401, 402, 403, 404, 405, 406, 407, 410, 411, 414, 416, 418, 420, 426, 438, 444, 454, 459, 464, 471, 472, 484, 489, 490, 491, 493, 495, 497, 498, 499, 508, 510, 518, 519, 522, 527, 534, 539, 540, 541, 544, 545, 548, 581, 582, 583, 584, 585, 586], "wherea": [389, 397, 400, 412, 582], "whether": [16, 19, 20, 26, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 83, 84, 86, 87, 88, 90, 91, 100, 103, 105, 106, 108, 110, 111, 125, 126, 127, 128, 135, 149, 150, 151, 152, 155, 156, 157, 159, 162, 164, 166, 167, 181, 193, 194, 195, 196, 197, 198, 199, 200, 203, 204, 205, 206, 207, 208, 213, 220, 221, 224, 226, 228, 230, 231, 232, 237, 241, 243, 244, 247, 250, 251, 253, 255, 256, 257, 262, 267, 269, 270, 271, 272, 275, 276, 278, 279, 292, 310, 319, 346, 349, 351, 352, 380, 388, 390, 397, 400, 402, 403, 410, 412, 449, 462, 475, 486, 489, 490, 508, 534, 583, 584], "which": [16, 19, 20, 26, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 41, 43, 56, 57, 59, 67, 70, 72, 77, 80, 83, 84, 85, 86, 87, 88, 89, 90, 91, 93, 94, 95, 96, 100, 102, 103, 105, 106, 108, 110, 111, 120, 122, 124, 125, 126, 127, 128, 129, 131, 132, 133, 134, 135, 136, 139, 143, 144, 145, 149, 150, 151, 152, 155, 156, 157, 159, 162, 163, 164, 165, 166, 167, 168, 170, 171, 175, 176, 181, 182, 192, 193, 194, 195, 196, 198, 199, 200, 203, 204, 206, 207, 208, 211, 213, 220, 221, 222, 223, 224, 226, 227, 228, 230, 231, 232, 236, 237, 239, 243, 244, 247, 250, 251, 252, 253, 254, 255, 256, 257, 262, 263, 264, 266, 267, 268, 269, 270, 271, 272, 274, 275, 276, 278, 279, 283, 289, 291, 292, 293, 297, 298, 299, 301, 306, 308, 322, 332, 342, 343, 361, 370, 372, 377, 379, 382, 384, 386, 388, 389, 390, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 409, 410, 411, 412, 413, 414, 415, 416, 418, 419, 421, 425, 426, 427, 429, 430, 431, 432, 435, 438, 444, 446, 449, 451, 454, 455, 456, 459, 462, 463, 464, 465, 467, 470, 471, 472, 473, 476, 478, 479, 481, 482, 484, 485, 486, 487, 489, 490, 491, 492, 493, 494, 495, 497, 498, 499, 500, 506, 507, 508, 512, 513, 518, 519, 520, 522, 524, 525, 526, 528, 529, 531, 533, 534, 535, 536, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 569, 570, 571, 572, 573, 574, 575, 579, 580, 581, 582, 583, 584, 585], "whichev": [194, 195, 196], "while": [87, 91, 106, 195, 196, 198, 200, 204, 207, 208, 383, 386, 388, 389, 390, 392, 395, 396, 398, 402, 404, 405, 407, 408, 409, 412, 413, 414, 416, 454, 459, 461, 464, 472, 478, 479, 485, 486, 488, 489, 490, 492, 493, 518, 520, 522, 533, 535, 582], "whilst": [384, 494, 502], "whippl": 97, "whirlwind": 502, "white": [298, 372, 373, 469, 479, 487, 492, 510, 535], "whitespac": 328, "whmkdyjl": 481, "who": [409, 483, 510], "whole": [95, 120, 172, 175, 182, 185, 186, 188, 189, 194, 195, 196, 198, 207, 208, 251, 282, 291, 293, 383, 389, 395, 398, 409, 456, 459, 467, 472, 476, 479, 485, 493, 498, 500, 579], "whose": [409, 414, 472, 528, 540], "why": [383, 384, 388, 390, 397, 487, 535], "wich": 412, "wide": [390, 409, 410, 425, 444, 457, 468, 581], "wider": [477, 491, 529], "widget": [195, 196, 198, 204, 207, 208, 467, 475, 490, 506, 507], "width": [16, 27, 68, 83, 87, 91, 103, 106, 110, 111, 112, 113, 114, 116, 117, 119, 120, 130, 135, 152, 153, 154, 157, 160, 163, 165, 168, 170, 175, 180, 193, 194, 195, 196, 197, 198, 199, 200, 203, 204, 205, 206, 207, 208, 223, 226, 227, 236, 238, 239, 250, 252, 263, 264, 266, 268, 274, 276, 278, 373, 374, 399, 406, 445, 460, 461, 463, 464, 465, 467, 469, 470, 471, 472, 473, 475, 476, 479, 483, 484, 485, 488, 489, 490, 491, 493, 498, 499, 506, 507, 508, 529, 531, 532, 533, 534, 535, 539, 540, 541, 543, 544, 545], "width_err": 484, "width_error": 68, "width_min": 203, "width_pix": [194, 195, 196], "widthconfig": 16, "wiki": [34, 83, 88, 435, 500], "wikipedia": [34, 83, 88, 339, 397, 401], "wilei": [137, 146], "wilk": [289, 520, 584], "willing": 386, "wind": [50, 465, 470, 493, 513], "window": [113, 114, 382, 383, 390, 400, 414, 415, 416, 418, 424, 440, 444, 463, 484, 581, 582, 584], "wise": [19, 20, 26, 87, 91, 143, 144, 196, 220, 221, 222, 223, 224, 225, 226, 227, 228, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 247, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 274, 275, 276, 277, 278, 279, 280, 281, 411, 437, 451, 465, 467, 518], "wish": [203, 386, 401, 470, 487], "with_bbox": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40], "with_bounding_box": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40], "with_units_from_data": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40], "withdraw": [393, 394, 395, 398, 405, 407], "withdrawn": [387, 388, 393, 394, 395, 398, 405, 407], "within": [128, 131, 143, 194, 208, 225, 226, 227, 233, 238, 239, 240, 241, 242, 250, 258, 263, 265, 266, 277, 280, 382, 383, 384, 388, 392, 397, 399, 400, 401, 402, 403, 406, 408, 409, 411, 412, 413, 414, 415, 416, 418, 438, 441, 443, 447, 449, 451, 460, 461, 467, 470, 476, 477, 478, 481, 484, 486, 488, 489, 490, 493, 494, 498, 502, 508, 518, 521, 522, 581], "without": [13, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 132, 155, 193, 194, 199, 203, 206, 245, 380, 383, 386, 388, 391, 393, 397, 398, 399, 400, 402, 407, 412, 414, 425, 426, 430, 451, 460, 463, 467, 468, 481, 483, 489, 490, 491, 506, 522, 533, 534, 535, 577, 582, 584], "without_units_for_data": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40], "wl": [26, 483], "wo": 479, "wobbl": [95, 478, 497], "wobbleregionfind": 437, "wobbleregionsfind": 461, "wolfram": [337, 338], "women": 440, "won": [120, 124, 128, 132, 135, 355, 408, 467, 490, 497, 585], "wong": [427, 451], "wood": [390, 441, 443, 444], "word": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 522], "work": [11, 13, 16, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 87, 91, 100, 127, 205, 347, 382, 383, 384, 386, 388, 390, 391, 392, 393, 394, 395, 397, 398, 399, 400, 401, 402, 403, 405, 408, 409, 412, 413, 414, 415, 416, 417, 419, 420, 421, 423, 424, 425, 426, 427, 429, 430, 436, 439, 440, 441, 442, 443, 444, 445, 446, 451, 454, 456, 457, 459, 460, 461, 462, 463, 464, 465, 467, 468, 469, 470, 471, 472, 473, 475, 476, 477, 478, 479, 481, 483, 484, 485, 487, 488, 489, 490, 491, 492, 493, 495, 497, 498, 499, 500, 506, 507, 508, 518, 522, 532, 534, 546, 548, 554, 570, 576, 577, 582], "workaround": [400, 451], "workflow": [386, 391, 392, 399, 404, 408, 414, 429, 451, 460, 465, 502, 506, 507, 523], "workshop": 392, "workspac": 386, "world": [83, 206, 226, 250, 383, 389, 469, 508, 534], "worst": 386, "worth": [383, 510], "would": [16, 84, 87, 90, 91, 95, 105, 126, 195, 196, 198, 204, 207, 208, 245, 383, 386, 389, 390, 391, 394, 395, 397, 398, 399, 400, 401, 402, 403, 404, 407, 409, 410, 412, 426, 435, 457, 459, 462, 463, 475, 487, 490, 491, 493, 495, 498, 535], "wouldn": 397, "wqh0runu": 481, "wrap": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 200, 262, 318, 397, 428, 451], "wrap_at": 394, "wrap_coord": 200, "wrapper": [56, 251, 262, 322, 397, 398, 412, 426, 429, 510, 522], "write": [11, 15, 16, 26, 82, 86, 87, 88, 91, 100, 102, 103, 106, 108, 110, 111, 125, 127, 149, 150, 151, 152, 153, 154, 155, 156, 157, 159, 160, 162, 163, 164, 165, 166, 167, 168, 195, 196, 198, 202, 204, 207, 208, 214, 226, 241, 250, 274, 275, 276, 277, 278, 352, 361, 384, 386, 392, 393, 394, 395, 396, 397, 399, 400, 402, 403, 405, 406, 407, 409, 410, 411, 414, 420, 423, 429, 432, 437, 439, 442, 443, 444, 445, 450, 451, 454, 459, 467, 468, 471, 473, 488, 492, 493, 497, 498, 504, 506, 507, 522, 527, 583, 585], "write_arf": 108, "write_bkg": 108, "write_covari": [15, 100, 214, 226, 250], "write_dataset": 15, "write_ds9": 493, "write_model": 15, "write_pha": 108, "write_rmf": 108, "writeabl": 411, "writer": [87, 91, 403, 410], "writeto": [86, 149, 150, 151, 155, 156, 157, 159, 162, 164, 166, 167, 471], "written": [88, 100, 102, 103, 106, 108, 110, 111, 125, 127, 153, 154, 160, 165, 168, 195, 196, 198, 202, 204, 207, 208, 210, 383, 384, 386, 388, 392, 393, 403, 409, 411, 447, 454, 472, 492, 495, 510, 518, 519, 522, 535, 581], "wrong": [383, 433, 447, 448, 449], "wrote": 409, "wrt": [83, 165, 168, 383, 401, 478, 577], "wsauu96v": 486, "wstat": [106, 111, 303, 304, 395, 423, 441, 442, 455, 459, 460, 462, 465, 469, 479, 485, 495, 518, 581], "wstatcountsstatist": [479, 584], "wt": [26, 483], "wun": 427, "www": [26, 67, 87, 91, 137, 146, 403, 497, 522], "wyatt": [423, 581], "x": [19, 20, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 46, 67, 68, 87, 91, 103, 110, 130, 137, 143, 144, 146, 150, 200, 204, 205, 213, 216, 218, 220, 223, 224, 227, 228, 230, 231, 232, 233, 236, 237, 238, 239, 240, 241, 242, 243, 244, 247, 254, 255, 256, 257, 258, 262, 263, 264, 265, 267, 270, 271, 272, 277, 278, 292, 298, 299, 302, 313, 314, 315, 317, 321, 323, 328, 337, 372, 375, 376, 383, 384, 388, 390, 391, 392, 397, 408, 412, 413, 416, 418, 457, 462, 463, 469, 472, 479, 481, 482, 484, 487, 488, 490, 495, 498, 508, 516, 522, 539, 540, 582, 584], "x27": [486, 488], "x86_64": [454, 456, 459, 460, 461, 462, 463, 464, 465, 467, 468, 469, 470, 471, 472, 473, 476, 477, 478, 479, 483, 484, 485, 487, 489, 490, 491, 492, 493, 495, 497, 498, 499, 500, 506, 507, 508], "x_": 130, "x_0": [195, 196, 198, 204, 207, 208], "x_1": 322, "x_2": 322, "x_3": 322, "x_bkg": 479, "x_edg": 131, "x_high": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40], "x_i": [195, 196, 198, 204, 207, 208], "x_j": 130, "x_low": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40], "x_max": [130, 335, 337, 473], "x_min": [130, 335, 337, 473], "x_n": [195, 196, 198, 204, 207, 208], "x_r_0": 239, "x_ref": [130, 473], "x_sigma": 236, "x_stddev": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40], "x_valu": [213, 487], "xarg": 383, "xaxi": [486, 522], "xerr": [454, 481, 495], "xf": 497, "xfail": 383, "xh7uerew": 481, "xl62rv4r": 455, "xlabel": [384, 449, 465, 478, 481, 495, 498, 514, 515, 516, 539, 576], "xlim": [370, 467, 495, 498, 516], "xmax": [17, 18, 21, 22, 24, 25, 27, 204, 411], "xmin": [17, 18, 21, 22, 24, 25, 27, 204, 411], "xml": [392, 393, 394, 428, 442, 444, 497, 510], "xmltodict": [436, 497], "xref": 130, "xspec": [228, 279, 307, 442, 455, 583], "xunit": [461, 548], "xviii": 403, "xx": [394, 409], "xxx": [87, 91, 388, 409], "xxx_by_coord": 490, "xxxx": 522, "xy": [459, 469, 473, 539], "xy_posit": [33, 34, 38], "xytext": 539, "xyz": 413, "xz8yilyh": 481, "y": [19, 20, 26, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 46, 68, 87, 91, 143, 144, 150, 200, 213, 220, 221, 224, 228, 230, 231, 232, 237, 243, 244, 247, 251, 253, 255, 256, 257, 262, 267, 269, 270, 271, 272, 275, 279, 313, 314, 315, 317, 321, 323, 375, 383, 397, 408, 416, 418, 449, 454, 463, 469, 472, 481, 487, 495, 516, 522], "y_high": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40], "y_low": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40], "y_stddev": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40], "y_valu": [213, 487], "yacoxjt": 489, "yaml": [11, 15, 16, 20, 26, 84, 90, 99, 100, 102, 103, 105, 106, 110, 111, 125, 126, 220, 221, 222, 223, 224, 225, 226, 227, 228, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 247, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 274, 275, 276, 277, 278, 279, 280, 281, 289, 346, 349, 351, 352, 382, 391, 392, 394, 395, 396, 399, 400, 405, 410, 411, 413, 414, 415, 427, 428, 429, 432, 437, 446, 450, 451, 454, 456, 459, 461, 462, 463, 464, 465, 467, 468, 469, 470, 471, 472, 473, 476, 477, 478, 479, 483, 484, 485, 487, 489, 490, 491, 492, 493, 495, 497, 498, 499, 500, 507, 508, 521, 579, 580, 581, 582], "yaml_str": [226, 250, 460], "yaxi": [457, 486, 522], "ye": 414, "year": [45, 61, 65, 78, 383, 388, 390, 391, 393, 400, 403, 404, 408, 410, 414, 441, 443, 444, 468, 470, 484, 497, 514, 515, 516, 517], "yearli": [417, 442], "yellow": 373, "yerr": [479, 481], "yet": [89, 382, 383, 386, 388, 390, 397, 400, 403, 404, 451, 452, 457, 460, 506, 586], "yield": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 82, 83, 88, 92, 195, 196, 198, 204, 207, 208, 347, 390, 396, 397, 402, 404, 406, 411, 491, 583, 584, 585], "yk04": [45, 48], "yk04b": 48, "ylabel": [384, 478, 481, 495, 498, 514, 515, 516, 539, 576], "ylim": [370, 455, 465, 495, 498, 514, 516, 555, 564, 565, 566], "ymax": [539, 540], "ymin": [539, 540], "yml": [386, 400, 413, 414, 415, 416, 418, 443, 451], "you": [16, 19, 20, 26, 67, 82, 83, 84, 87, 90, 91, 94, 102, 105, 108, 126, 127, 143, 150, 152, 155, 178, 195, 196, 198, 204, 207, 208, 213, 220, 221, 224, 228, 230, 231, 232, 237, 243, 244, 247, 251, 253, 255, 256, 257, 262, 267, 269, 270, 271, 272, 275, 279, 282, 289, 382, 383, 384, 385, 386, 388, 390, 393, 397, 400, 401, 413, 414, 415, 416, 417, 418, 419, 420, 421, 424, 425, 426, 435, 443, 444, 445, 451, 455, 456, 457, 459, 460, 461, 462, 464, 465, 467, 469, 471, 472, 475, 477, 478, 479, 481, 484, 485, 486, 487, 489, 490, 491, 492, 493, 495, 497, 498, 499, 500, 502, 506, 507, 508, 518, 519, 522, 525, 529, 533, 556, 579, 582, 583, 584, 585, 586], "your": [16, 19, 20, 26, 84, 90, 99, 105, 126, 220, 221, 224, 228, 230, 231, 232, 237, 243, 244, 247, 251, 253, 255, 256, 257, 262, 267, 269, 270, 271, 272, 275, 279, 382, 383, 384, 386, 388, 390, 413, 414, 415, 416, 417, 418, 420, 421, 424, 425, 426, 429, 430, 435, 444, 445, 454, 455, 456, 457, 459, 461, 462, 463, 464, 465, 467, 468, 469, 470, 471, 472, 473, 475, 476, 477, 478, 479, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 497, 498, 499, 500, 502, 504, 506, 507, 508, 517, 522, 538, 539, 540, 541, 542, 543, 544, 545, 546, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 569, 570, 571, 572, 573, 574, 575, 576, 577, 579, 581, 584], "yourself": [582, 583], "yr": [45, 52, 53, 512, 514, 515, 516], "yscale": [465, 574], "yt": 383, "yu": [427, 451], "yunit": [459, 461, 483, 484, 498, 559], "yusifovkucuk2004": [28, 29, 30, 35, 36, 40, 48], "yusifovkucuk2004b": [28, 29, 30, 35, 36, 39, 48], "yve": 443, "yy": 409, "yyyi": 409, "z": [19, 20, 26, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 41, 46, 87, 91, 313, 314, 317, 408, 409, 412, 416, 418, 483, 512, 548], "z_0": 29, "z_high": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40], "z_low": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40], "zabalza": 439, "zanin": [443, 444], "zd": 83, "zen": 494, "zen_pnt": 494, "zenith": [454, 468, 494, 497, 498, 499, 527], "zenith_angl": [83, 410, 498, 508], "zenodo": [409, 437, 497], "zero": [52, 53, 67, 87, 91, 100, 103, 106, 110, 111, 135, 143, 152, 153, 154, 157, 160, 165, 181, 195, 196, 198, 204, 207, 208, 254, 276, 278, 322, 328, 340, 383, 428, 431, 446, 451, 484, 489, 490, 495, 585], "zhao": [27, 450], "zhen": [137, 146], "zip": [398, 411, 413, 454, 455, 456, 457, 459, 460, 461, 462, 463, 464, 465, 467, 468, 469, 470, 471, 472, 473, 475, 476, 477, 478, 479, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 497, 498, 499, 500, 502, 504, 506, 507, 508, 516, 536, 538, 539, 540, 541, 542, 543, 544, 545, 546, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 569, 570, 571, 572, 573, 574, 575, 576, 577], "zl": [26, 483], "zone": 479, "zsh": 384, "zt": [26, 483], "z\u00e9": 442, "\u00e0": 441, "\u0261\u00e6m\u0259pa\u026a": 522, "\u03b3": [139, 510, 581], "\u03c3": 470}, "titles": ["analysis - High level interface", "astro - Astrophysics", "catalog - Source catalogs", "data - DL3 data and observations", "datasets - Reduced datasets", "estimators - High level estimators", "API reference", "irf - Instrument response functions", "makers - Data reduction", "maps - Sky maps", "modeling - Models and fitting", "scripts - Command line tools", "stats - Statistics", "utils - Utilities", "visualization - Plotting features", "Analysis", "AnalysisConfig", "BurkertProfile", "DMProfile", "DarkMatterAnnihilationSpectralModel", "DarkMatterDecaySpectralModel", "EinastoProfile", "IsothermalProfile", "JFactory", "MooreProfile", "NFWProfile", "PrimaryFlux", "ZhaoProfile", "CaseBattacharya1998", "Exponential", "FaucherKaspi2006", "FaucherKaspi2006VelocityBimodal", "FaucherKaspi2006VelocityMaxwellian", "FaucherSpiral", "LogSpiral", "Lorimer2006", "Paczynski1990", "Paczynski1990Velocity", "ValleeSpiral", "YusifovKucuk2004", "YusifovKucuk2004B", "add_observed_parameters", "add_pulsar_parameters", "add_pwn_parameters", "add_snr_parameters", "make_base_catalog_galactic", "make_catalog_random_positions_cube", "make_catalog_random_positions_sphere", "radial_distributions", "velocity_distributions", "PWN", "Pulsar", "SNR", "SNRTrueloveMcKee", "SimplePulsar", "CATALOG_REGISTRY", "SourceCatalog", "SourceCatalog1LHAASO", "SourceCatalog2FHL", "SourceCatalog2HWC", "SourceCatalog2PC", "SourceCatalog3FGL", "SourceCatalog3FHL", "SourceCatalog3HWC", "SourceCatalog3PC", "SourceCatalog4FGL", "SourceCatalogGammaCat", "SourceCatalogHGPS", "SourceCatalogLargeScaleHGPS", "SourceCatalogObject", "SourceCatalogObject1LHAASO", "SourceCatalogObject2FHL", "SourceCatalogObject2HWC", "SourceCatalogObject2PC", "SourceCatalogObject3FGL", "SourceCatalogObject3FHL", "SourceCatalogObject3HWC", "SourceCatalogObject3PC", "SourceCatalogObject4FGL", "SourceCatalogObjectGammaCat", "SourceCatalogObjectHGPS", "SourceCatalogObjectHGPSComponent", "DataStore", "EventList", "EventListMetaData", "FixedPointingInfo", "GTI", "HDUIndexTable", "Observation", "ObservationFilter", "ObservationMetaData", "ObservationTable", "Observations", "ObservationsEventsSampler", "PointingInfo", "PointingMode", "get_irfs_features", "observatory_locations", "DATASET_REGISTRY", "Dataset", "Datasets", "FermipyDatasetsReader", "FluxPointsDataset", "MapDataset", "MapDatasetEventSampler", "MapDatasetMetaData", "MapDatasetOnOff", "OGIPDatasetReader", "OGIPDatasetWriter", "ObservationEventSampler", "SpectrumDataset", "SpectrumDatasetOnOff", "apply_edisp", "create_empty_map_dataset_from_irfs", "create_map_dataset_from_observation", "create_map_dataset_geoms", "split_dataset", "apply_edisp", "create_map_dataset_from_dl4", "split_dataset", "ASmoothMapEstimator", "ESTIMATOR_REGISTRY", "EnergyDependentMorphologyEstimator", "Estimator", "ExcessMapEstimator", "FluxMaps", "FluxMetaData", "FluxPoints", "FluxPointsEstimator", "FluxProfileEstimator", "ImageProfile", "ImageProfileEstimator", "LightCurveEstimator", "ParameterEstimator", "SensitivityEstimator", "TSMapEstimator", "combine_flux_maps", "combine_significance_maps", "compute_lightcurve_discrete_correlation", "compute_lightcurve_doublingtime", "compute_lightcurve_fpp", "compute_lightcurve_fvar", "estimate_exposure_reco_energy", "find_peaks", "find_peaks_in_flux_map", "get_combined_flux_maps", "get_combined_significance_maps", "get_rebinned_axis", "resample_energy_edges", "Background2D", "Background3D", "BackgroundIRF", "EDispKernel", "EDispKernelMap", "EDispMap", "EffectiveAreaTable2D", "EnergyDependentMultiGaussPSF", "EnergyDispersion2D", "FoVAlignment", "IRF", "IRFMap", "IRF_REGISTRY", "PSF3D", "PSFKernel", "PSFKing", "PSFMap", "ParametricPSF", "RadMax2D", "RecoPSFMap", "load_irf_dict_from_file", "AdaptiveRingBackgroundMaker", "DatasetsMaker", "FoVBackgroundMaker", "MAKER_REGISTRY", "Maker", "MapDatasetMaker", "PhaseBackgroundMaker", "ReflectedRegionsBackgroundMaker", "ReflectedRegionsFinder", "RegionsFinder", "RingBackgroundMaker", "SafeMaskMaker", "SpectrumDatasetMaker", "WobbleRegionsFinder", "make_counts_rad_max", "make_edisp_kernel_map", "make_edisp_map", "make_effective_livetime_map", "make_map_background_irf", "make_map_exposure_true_energy", "make_observation_time_map", "make_psf_map", "make_theta_squared_table", "Geom", "HpxGeom", "HpxMap", "HpxNDMap", "LabelMapAxis", "Map", "MapAxes", "MapAxis", "MapCoord", "Maps", "RegionGeom", "RegionNDMap", "TimeMapAxis", "WcsGeom", "WcsMap", "WcsNDMap", "containment_radius", "containment_region", "Covariance", "CovarianceResult", "Fit", "FitResult", "OptimizeResult", "Parameter", "Parameters", "PriorParameter", "PriorParameters", "BrokenPowerLawSpectralModel", "CompoundSpectralModel", "ConstantFluxSpatialModel", "ConstantSpatialModel", "ConstantSpectralModel", "ConstantTemporalModel", "DatasetModels", "DiskSpatialModel", "EBLAbsorptionNormSpectralModel", "EBL_DATA_BUILTIN", "ExpCutoffPowerLaw3FGLSpectralModel", "ExpCutoffPowerLawNormSpectralModel", "ExpCutoffPowerLawSpectralModel", "ExpDecayTemporalModel", "FoVBackgroundModel", "GaussianPrior", "GaussianSpatialModel", "GaussianSpectralModel", "GaussianTemporalModel", "GeneralizedGaussianSpatialModel", "GeneralizedGaussianTemporalModel", "LightCurveTemplateTemporalModel", "LinearTemporalModel", "LogParabolaNormSpectralModel", "LogParabolaSpectralModel", "LogUniformPrior", "MODEL_REGISTRY", "MeyerCrabSpectralModel", "Model", "ModelBase", "Models", "NaimaSpectralModel", "PiecewiseNormSpatialModel", "PiecewiseNormSpectralModel", "PointSpatialModel", "PowerLaw2SpectralModel", "PowerLawNormSpectralModel", "PowerLawSpectralModel", "PowerLawTemporalModel", "Prior", "SPATIAL_MODEL_REGISTRY", "SPECTRAL_MODEL_REGISTRY", "ScaleSpectralModel", "Shell2SpatialModel", "ShellSpatialModel", "SineTemporalModel", "SkyModel", "SmoothBrokenPowerLawSpectralModel", "SpatialModel", "SpectralModel", "SuperExpCutoffPowerLaw3FGLSpectralModel", "SuperExpCutoffPowerLaw4FGLDR3SpectralModel", "SuperExpCutoffPowerLaw4FGLSpectralModel", "TEMPORAL_MODEL_REGISTRY", "TemplateNDSpatialModel", "TemplateNDSpectralModel", "TemplateNPredModel", "TemplatePhaseCurveTemporalModel", "TemplateSpatialModel", "TemplateSpectralModel", "TemporalModel", "UniformPrior", "create_cosmic_ray_spectral_model", "create_crab_spectral_model", "create_fermi_isotropic_diffuse_model", "integrate_spectrum", "read_hermes_cube", "scale_plot_flux", "read_hermes_cube", "select_nested_models", "stat_profile_ul_scipy", "CashCountsStatistic", "TimmerKonig_lightcurve_simulator", "WStatCountsStatistic", "cash", "cash_sum_cython", "compute_chisq", "compute_flux_doubling", "compute_fpp", "compute_fvar", "cstat", "discrete_correlation", "f_cash_root_cython", "get_wstat_gof_terms", "get_wstat_mu_bkg", "norm_bounds_cython", "structure_function", "wstat", "hierarchical_clustering", "standard_scaler", "D_SUN_TO_GALACTIC_CENTER", "cartesian", "fov_to_sky", "galactic", "motion_since_birth", "polar", "sky_to_fov", "velocity_glon_glat", "HDULocation", "LazyFitsData", "earth_location_from_dict", "trapz_loglog", "ScaledRegularGridInterpolator", "interpolate_profile", "interpolation_scale", "BACKEND_DEFAULT", "METHOD_DEFAULT", "METHOD_KWARGS_DEFAULT", "N_JOBS_DEFAULT", "POOL_KWARGS_DEFAULT", "multiprocessing_manager", "run_multiprocessing", "InverseCDFSampler", "draw", "get_random_state", "normalize", "pdf", "sample_powerlaw", "sample_sphere", "sample_sphere_distance", "sample_times", "compound_region_to_regions", "make_concentric_annulus_sky_regions", "make_orthogonal_rectangle_sky_regions", "region_to_frame", "regions_to_compound_region", "from_yaml", "get_images_paths", "make_path", "read_yaml", "recursive_merge_dicts", "to_yaml", "write_yaml", "hstack_columns", "table_row_to_dict", "table_standardise_units_copy", "table_standardise_units_inplace", "Checker", "assert_quantity_allclose", "assert_skycoord_allclose", "assert_time_allclose", "mpl_plot_check", "requires_data", "requires_dependency", "absolute_time", "time_ref_from_dict", "time_ref_to_dict", "time_relative_to_ref", "standardise_unit", "unit_from_fits_image_hdu", "MapPanelPlotter", "add_colorbar", "annotate_heatmap", "colormap_hess", "colormap_milagro", "plot_contour_line", "plot_distribution", "plot_heatmap", "plot_map_rgb", "plot_npred_signal", "plot_spectrum_datasets_off_regions", "plot_theta_squared_table", "Dependencies", "Developer How To", "Documentation How To", "Developer guide", "How to contribute to Gammapy", "PIGs", "PIG 1 - PIG purpose and guidelines", "PIG 2 - Organization of low level analysis code", "PIG 3 - Plan for dropping Python 2.7 support", "PIG 4 - Setup for tutorial notebooks and data", "PIG 5 - Gammapy 1.0 roadmap", "PIG 6 - CTA observation handling", "PIG 7 - Models", "PIG 8 - Datasets", "PIG 9 - Event sampling", "PIG 10 - Regions", "PIG 11 - Light curves", "PIG 12 - High level interface", "PIG 13 - Gammapy dependencies and distribution", "PIG 14 - Uncertainty estimation", "PIG 16 - Gammapy package structure", "PIG 18 - Documentation", "PIG 19 - Gammapy package structure follow up", "PIG 20 - Global Model API", "PIG 21 - Models improvements", "PIG 22 - Unified flux estimators API", "PIG 23 - Gammapy release cycle and version numbering", "PIG 24 - Authorship policy", "PIG 25 - Metadata container for Gammapy", "PIG 26 - Model Priors API", "PIG 27 - Bayesian Inference using Nested Sampling", "How to make a Gammapy release", "Project setup", "Virtual Environments", "Getting started", "Installation", "Recommended Setup", "Troubleshooting", "Using Gammapy", "Gammapy", "Release notes", "0.1 (Aug 25, 2014)", "0.10 (Jan 28, 2019)", "0.11 (Mar 29, 2019)", "0.12 (May 30, 2019)", "0.13 (Jul 26, 2019)", "0.14 (Sep 30, 2019)", "0.15 (Dec 3, 2019)", "0.16 (Feb 1, 2020)", "0.17 (Apr 1, 2020)", "0.18 (Nov 4th, 2020)", "0.18.1 (Nov 6th, 2020)", "0.18.2 (Nov 19th, 2020)", "0.19 (Nov 22nd, 2021)", "0.2 (Apr 13, 2015)", "0.20 (May 12th, 2022)", "0.20.1 (June 16th, 2022)", "0.3 (Aug 13, 2015)", "0.4 (Apr 20, 2016)", "0.5 (Nov 22, 2016)", "0.6 (Apr 28, 2017)", "0.7 (Feb 28, 2018)", "0.8 (Sep 23, 2018)", "0.9 (Nov 29, 2018)", "1.0 (November 10th, 2022)", "1.0.1 (March 14th, 2023)", "1.0.2 (December 6th, 2023)", "1.1 (June 13th 2023)", "1.2 (February 29th 2024)", "1.3 (November 26th, 2024)", "2.0 (unreleased)", "Computation times", "Point source sensitivity", "Account for spectral absorption due to the EBL", "Spectral analysis of extended sources", "Flux point fitting", "Computation times", "Spectral analysis", "Spectral analysis with the HLI", "Spectral analysis with energy-dependent directional cuts", "1D spectrum simulation", "Source detection and significance maps", "2D map fitting", "Ring background map", "Computation times", "3D detailed analysis", "Multi instrument joint 3D and 1D analysis", "Basic image exploration and fitting", "Morphological energy dependence estimation", "Event sampling", "Sample a source with energy-dependent temporal evolution", "Flux Profile Estimation", "Computation times", "3D map simulation", "Light curves", "Light curves for flares", "Simulating and fitting a time varying source", "Pulsar analysis", "Computation times", "Time resolved spectroscopy estimator", "Estimation of time variability in a lightcurve", "Dark matter spatial and spectral models", "Source catalogs", "Datasets - Reduced data, IRFs, models", "Estimators", "Fitting", "Using Gammapy IRFs", "Makers - Data reduction", "Maps", "Mask maps", "Modelling", "Models", "Observational clustering", "Priors", "Computation times", "CTAO with Gammapy", "Fermi-LAT with Gammapy", "HAWC with Gammapy", "H.E.S.S. with Gammapy", "Computation times", "Tutorials", "Computation times", "Survey Map Script", "Computation times", "High level interface", "Low level API", "Data structures", "Computation times", "Dark matter", "Astrophysics", "Astrophysical source population models", "Astrophysical source models", "Pulsar Source Models", "Pulsar Wind Nebula Source Models", "Supernova Remnant Models", "Source catalogs", "Datasets (DL4)", "Data access and selection (DL3)", "Estimators (DL4 to DL5, and DL6)", "High Level Analysis Interface", "How To", "User guide", "Effective area", "Background", "Energy Dispersion", "Instrument Response Functions (DL3)", "Point Spread Function", "FoV background", "Data reduction (DL3 to DL4)", "Reflected regions background", "Ring background", "HEALPix-based maps", "Sky maps (DL4)", "RegionGeom and RegionNDMap", "Model gallery", "Computation times", "Constant spatial model", "Disk spatial model", "Gaussian spatial model", "Generalized gaussian spatial model", "Piecewise norm spatial model", "Point spatial model", "Shell spatial model", "Shell2 spatial model", "Template spatial model", "Computation times", "EBL absorption spectral model", "Broken power law spectral model", "Compound spectral model", "Constant spectral model", "Exponential cutoff power law spectral model", "Exponential cutoff power law spectral model used for 3FGL", "Exponential cutoff power law norm spectral model", "Gaussian spectral model", "Log parabola spectral model", "Log parabola spectral norm model", "Naima spectral model", "Piecewise  norm spectral model", "Power law spectral model", "Power law 2 spectral model", "Power law norm spectral model", "Smooth broken power law spectral model", "Super exponential cutoff power law model used for 3FGL", "Super Exponential Cutoff Power Law Model used for 4FGL-DR3", "Super Exponential Cutoff Power Law Model used for 4FGL-DR1 (and DR2)", "Template spectral model", "Computation times", "Constant temporal model", "ExpDecay temporal model", "Gaussian temporal model", "Generalized Gaussian temporal model", "Linear temporal model", "PowerLaw temporal model", "Sine temporal model", "Phase curve temporal model", "Light curve temporal model", "Computation times", "Modeling and Fitting (DL4 to DL5)", "Gammapy analysis workflow and package structure", "Glossary and references", "Command line tools", "Fit statistics", "Statistical utility functions", "Derivation of the WStat formula", "Utility functions", "Visualization"], "titleterms": {"": [424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 437, 438, 440, 441, 442, 443, 444, 445, 460, 472, 500, 506], "0": [392, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 452], "1": [388, 392, 411, 412, 422, 423, 430, 431, 433, 438, 446, 447, 448, 449, 450, 451, 495], "10": [397, 422, 424], "10th": 446, "11": [398, 422, 425], "12": [399, 422, 426], "12th": 437, "13": [400, 422, 427, 436, 439], "13th": 449, "14": [401, 422, 428], "14th": 447, "15": [422, 429], "16": [402, 422, 430], "16th": 438, "17": [422, 431], "18": [403, 422, 432, 433, 434], "19": [404, 422, 435], "19th": 434, "1d": [460, 462, 468, 476, 477, 502], "1dc": 497, "2": [389, 390, 411, 412, 422, 434, 436, 448, 450, 452, 495, 561], "20": [405, 422, 437, 438, 440], "2014": 423, "2015": [436, 439], "2016": [440, 441], "2017": 442, "2018": [443, 444, 445], "2019": [424, 425, 426, 427, 428, 429], "2020": [430, 431, 432, 433, 434], "2021": 435, "2022": [437, 438, 446], "2023": [447, 448, 449], "2024": [450, 451], "21": 406, "2155": 486, "22": [407, 441], "22nd": 435, "23": [408, 444], "24": 409, "25": [410, 423], "26": [411, 427], "26th": 451, "27": 412, "28": [424, 442, 443], "29": [425, 445], "29th": 450, "2d": [464, 502], "3": [390, 411, 412, 422, 429, 439, 451], "30": [426, 428], "304": 486, "32": 383, "3955": 411, "3d": [467, 468, 475, 476, 502], "3fgl": [553, 564], "3fhl": 468, "4": [391, 412, 422, 440], "4122": 411, "4fgl": [565, 566], "4th": 432, "5": [392, 422, 441], "6": [393, 422, 442], "64": 383, "6th": [433, 448], "7": [390, 394, 422, 443], "8": [395, 422, 444], "9": [396, 422, 445], "A": [459, 486], "As": 528, "In": 384, "ON": [456, 461, 468], "On": 462, "The": [389, 414, 468, 470, 486, 487, 495, 519, 531], "To": [383, 384, 403, 522], "about": 495, "abov": 470, "absolute_tim": 364, "absorpt": [406, 455, 548], "abstract": [388, 389, 390, 391, 392, 393, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412], "accept": 386, "access": [463, 485, 486, 490, 499, 519], "accessor": 534, "account": 455, "action": [383, 403], "ad": 490, "adapt": 463, "adaptiveringbackgroundmak": 170, "add": [394, 492], "add_colorbar": 371, "add_observed_paramet": 41, "add_pulsar_paramet": 42, "add_pwn_paramet": 43, "add_snr_paramet": 44, "addit": [406, 411, 528, 580], "aeff_2d": 524, "against": 461, "aim": 492, "aka": 412, "algorithm": 481, "alia": 406, "all": 477, "along": 410, "altern": [391, 394, 396, 397, 398, 399, 400, 401, 403, 404, 407, 410], "amplitud": [411, 495], "an": [383, 454, 471, 472, 485, 491], "anaconda": 417, "analysi": [0, 11, 15, 389, 392, 454, 456, 459, 460, 461, 462, 467, 468, 469, 476, 479, 502, 506, 518, 521, 580], "analysisconfig": 16, "angl": [524, 525, 526, 528], "angular": 535, "annihil": 483, "annotate_heatmap": 372, "api": [6, 383, 384, 405, 407, 410, 411, 412, 446, 449, 450, 451, 486, 502, 507], "apply_edisp": [112, 117], "approach": [398, 412, 456, 457, 460, 462, 463, 464, 465, 468, 471, 472, 473, 475, 476, 477, 478, 481, 482, 487, 491, 492, 494, 506, 507], "apr": [431, 436, 440, 442], "arbitrari": 410, "area": [488, 497, 524], "argument": [383, 397], "arm": 512, "asmoothmapestim": 120, "assert": 383, "assert_quantity_allclos": 358, "assert_skycoord_allclos": 359, "assert_time_allclos": 360, "assess": [467, 487], "assign": [477, 492], "astro": [1, 510, 513], "astronomi": 398, "astrophys": [1, 511, 512, 513], "astropi": [383, 408], "asymmetr": 488, "attribut": [383, 384, 394], "aug": [423, 439], "author": 409, "authorship": 409, "avail": 484, "ax": [490, 535], "axi": [383, 527], "backend_default": 325, "background": [394, 398, 402, 405, 411, 465, 470, 471, 489, 492, 497, 498, 506, 525, 529, 530, 531, 532, 583], "background2d": 149, "background3d": 150, "backgroundirf": 151, "backgroundirfmodel": 394, "backgroundmodel": 394, "backport": 383, "base": [407, 410, 533], "basic": [469, 490], "bayesian": [412, 482], "between": 405, "bin": [398, 454, 470, 535], "binder": 414, "bit": 383, "bkg_2d": 525, "bkg_3d": 525, "block": 482, "boundari": 491, "branch": 413, "break": 383, "broken": [384, 549, 563], "brokenpowerlawspectralmodel": 220, "bsd": 383, "bug": [437, 446, 449, 450, 451], "bugfix": 413, "build": [384, 386, 414, 476, 477], "built": 579, "bullet": 384, "bundl": 383, "burkertprofil": 17, "butterfli": 507, "call": 394, "candid": [413, 463], "caplog": 383, "cartesian": 311, "case": [389, 393, 411, 412, 585], "casebattacharya1998": 28, "cash": [294, 583, 584], "cash_sum_cython": 295, "cashcountsstatist": 291, "catalog": [2, 484, 491, 492, 508, 517], "catalog_registri": 55, "caveat": 583, "cell": 383, "certif": 386, "cff": 409, "chain": [459, 461], "chang": [383, 404, 446, 449, 450, 451], "changelog": 403, "character": 482, "check": [11, 383, 384, 419, 454, 456, 459, 460, 461, 462, 463, 464, 465, 467, 468, 469, 470, 471, 472, 473, 476, 477, 478, 479, 483, 484, 485, 487, 489, 490, 491, 492, 493, 495, 497, 498, 499, 500, 506, 507, 508], "checker": 357, "chi": 470, "choos": 384, "citat": 409, "class": [0, 1, 2, 3, 4, 5, 7, 8, 9, 10, 12, 13, 14, 383, 384, 393, 394, 407, 410, 507, 528, 584], "clean": 402, "cli": 582, "click": 383, "clobber": 383, "clumpi": 510, "cluster": [13, 494], "code": [383, 384, 389, 392, 414], "codemeta": 409, "collect": 409, "colormap": 587, "colormap_hess": 373, "colormap_milagro": 374, "combin": [492, 519], "combine_flux_map": 136, "combine_significance_map": 137, "command": [11, 383, 582], "common": 486, "compar": [461, 476], "comparison": 412, "compound": [493, 550], "compound_region_to_region": 341, "compoundspectralmodel": 221, "comput": [453, 454, 458, 459, 460, 465, 466, 469, 474, 480, 487, 496, 501, 503, 505, 507, 509, 537, 547, 568, 578], "compute_chisq": 296, "compute_flux_doubl": 297, "compute_fpp": 298, "compute_fvar": 299, "compute_lightcurve_discrete_correl": 138, "compute_lightcurve_doublingtim": 139, "compute_lightcurve_fpp": 140, "compute_lightcurve_fvar": 141, "conda": 415, "confer": 409, "confid": 487, "config": [11, 464, 465, 582], "configur": [460, 467, 473, 476, 486, 506, 580], "constant": [538, 551, 569], "constantfluxspatialmodel": 222, "constantspatialmodel": 223, "constantspectralmodel": 224, "constanttemporalmodel": 225, "contain": 410, "containment_radiu": 209, "containment_region": 210, "content": [485, 535], "context": [456, 457, 459, 460, 461, 462, 463, 464, 465, 468, 470, 471, 473, 475, 476, 477, 478, 481, 482, 491, 494, 495, 506, 507], "contigu": 490, "continu": 414, "contour": 487, "contribut": [386, 409, 492], "contributor": [409, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451], "conveni": 395, "convent": 383, "converg": 412, "convers": [383, 486], "convert": 383, "coordin": [13, 383, 394, 525, 535], "correct": 384, "correl": 465, "count": [486, 492, 498, 518, 584], "covari": [211, 487], "covarianceresult": 212, "creat": [456, 459, 464, 465, 472, 485, 486, 488, 490, 491, 507, 535], "create_cosmic_ray_spectral_model": 282, "create_crab_spectral_model": 283, "create_empty_map_dataset_from_irf": 113, "create_fermi_isotropic_diffuse_model": 284, "create_map_dataset_from_dl4": 118, "create_map_dataset_from_observ": 114, "create_map_dataset_geom": 115, "creation": [456, 460, 477], "cstat": 300, "cta": [393, 497], "ctao": 497, "cube": [389, 490, 502], "cumul": 456, "current": 408, "curv": [398, 476, 477, 478, 486, 576, 577], "custom": [493, 495, 579], "cut": [457, 461], "cutoff": [552, 553, 554, 564, 565, 566], "cutout": 490, "cycl": 408, "cython": [408, 414], "d_sun_to_galactic_cent": 310, "dark": [483, 510], "darkmatt": [1, 510], "darkmatterannihilationspectralmodel": 19, "darkmatterdecayspectralmodel": 20, "data": [3, 8, 383, 389, 391, 392, 398, 410, 414, 455, 456, 459, 460, 461, 467, 468, 470, 473, 476, 477, 479, 481, 485, 489, 490, 499, 502, 506, 507, 508, 519, 530, 582, 583], "dataflow": 410, "dataset": [4, 11, 99, 100, 383, 392, 395, 404, 405, 410, 454, 456, 460, 461, 464, 465, 467, 468, 472, 476, 477, 478, 485, 486, 487, 489, 491, 492, 495, 499, 506, 507, 518], "dataset_registri": 98, "datasetmodel": 226, "datasetsmak": 171, "datastor": [82, 497, 507], "dco": [386, 409], "deal": 384, "dec": 429, "decai": 483, "decemb": 448, "decis": [388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412], "default": 394, "defin": [454, 456, 459, 461, 469, 471, 472, 476, 477, 491, 507, 535], "definit": [409, 476, 530], "depend": [382, 400, 406, 437, 461, 470, 472, 493], "deprec": [383, 408], "deriv": 585, "detail": [390, 467], "detect": [404, 463, 469, 527], "detector": 525, "develop": [383, 385, 386, 390], "diagram": 393, "differ": [468, 490, 586], "diffus": 498, "dilat": 491, "direct": 461, "discrete_correl": 301, "discuss": 398, "disk": [460, 472, 506, 507, 539], "diskspatialmodel": 227, "dispers": [488, 497, 498, 526], "dissolv": 402, "distribut": [400, 412, 500, 512], "dl3": [3, 468, 500, 519, 527, 530], "dl4": [488, 518, 520, 530, 534, 579], "dl5": [520, 579], "dl6": 520, "dmprofil": 18, "do": 383, "doc": 414, "docstr": 384, "document": [384, 386, 392, 403, 450, 451], "doubl": 482, "download": [11, 414], "downsampl": 535, "dr1": [500, 566], "dr2": 566, "dr3": 565, "draw": 333, "driven": 582, "drop": 390, "due": 455, "durat": 489, "e": 500, "each": 470, "earli": 386, "earth_location_from_dict": 320, "ebl": [455, 548], "ebl_data_builtin": 229, "eblabsorptionnormspectralmodel": 228, "edg": 520, "edisp": 488, "edisp_2d": 526, "edispkernel": 152, "edispkernelmap": 153, "edispmap": 154, "effect": [488, 489, 497, 524], "effectiveareatable2d": 155, "einastoprofil": 21, "elaps": 586, "empti": 485, "encourag": 495, "end": 383, "energi": [406, 454, 461, 470, 472, 488, 491, 493, 497, 498, 520, 524, 525, 526, 528], "energydependentmorphologyestim": 122, "energydependentmultigausspsf": 156, "energydispersion2d": 157, "environ": 415, "eros": 491, "error": [487, 584], "estim": [5, 123, 401, 404, 407, 410, 412, 460, 463, 470, 473, 476, 481, 482, 486, 489, 520, 530, 531, 584], "estimate_exposure_reco_energi": 142, "estimator_registri": 121, "evalu": [394, 395, 396], "event": [392, 396, 471, 472, 479, 490, 497, 498, 500, 508, 519, 527], "eventlist": 83, "eventlistmetadata": 84, "evid": 412, "evolut": 472, "exampl": [414, 495, 518, 520, 521, 529, 530, 531, 538, 539, 540, 541, 542, 543, 544, 545, 546, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 569, 570, 571, 572, 573, 574, 575, 583], "excess": [407, 456, 465, 482, 584], "excessmapestim": 124, "exclus": [459, 460, 465, 491, 506], "execut": 582, "exemplari": 411, "exercis": [454, 457, 459, 462, 467, 469, 471, 472, 478, 481, 497, 498, 499, 500, 508], "exist": 389, "expcutoffpowerlaw3fglspectralmodel": 230, "expcutoffpowerlawnormspectralmodel": 231, "expcutoffpowerlawspectralmodel": 232, "expdecai": 570, "expdecaytemporalmodel": 233, "expect": 527, "explor": [456, 460, 469, 502], "exponenti": [29, 457, 552, 553, 554, 564, 565, 566], "expos": 394, "exposur": [488, 498], "extend": [456, 471], "extens": [384, 455], "extern": 383, "extra": 414, "extract": [465, 476, 477, 478], "extrapol": [383, 567], "f_cash_root_cython": 302, "factor": 483, "factori": 490, "factoris": 527, "faucherkaspi2006": 30, "faucherkaspi2006velocitybimod": 31, "faucherkaspi2006velocitymaxwellian": 32, "faucherspir": 33, "favor": 411, "featur": [14, 408, 413, 446, 449, 450, 451, 486], "feb": [430, 443], "februari": 450, "fermi": [468, 498], "fermipydatasetsread": 101, "fermist": 510, "file": [384, 409, 460, 464, 465, 468, 497, 506, 519, 535], "fill": [490, 535], "filter": 477, "final": [388, 413, 460, 585], "find_peak": 143, "find_peaks_in_flux_map": 144, "finder": 531, "first": [413, 460], "fit": [10, 13, 213, 392, 398, 412, 455, 456, 457, 459, 460, 461, 464, 467, 468, 469, 475, 478, 487, 491, 495, 498, 506, 507, 535, 579, 583, 584, 585], "fitresult": 214, "fix": [383, 437, 446, 449, 450, 451], "fixedpointinginfo": 85, "fixtur": 383, "flare": 477, "float": 383, "flux": [407, 411, 454, 455, 457, 459, 460, 468, 473, 483, 484, 486, 506, 507, 508, 520], "fluxestim": 407, "fluxmap": [125, 407, 486], "fluxmetadata": 126, "fluxpoint": [127, 486], "fluxpointscollect": 407, "fluxpointsdataset": [102, 395, 485], "fluxpointsestim": [128, 520], "fluxprofileestim": 129, "fold": 394, "folder": 414, "follow": 404, "format": [383, 384, 586], "formula": 585, "forward": 394, "found": 582, "fov": [489, 529], "fov_to_ski": 312, "fovalign": 158, "fovbackgroundmak": [172, 529], "fovbackgroundmodel": 234, "fraction": 482, "free": 412, "freez": [408, 413, 492], "from": [383, 412, 477, 490, 491, 492, 535], "from_yaml": 346, "fulli": 486, "function": [1, 3, 4, 5, 7, 8, 9, 10, 12, 13, 14, 383, 384, 497, 524, 525, 526, 527, 528, 584, 586], "further": [398, 455, 583], "galact": [313, 498], "galactocentr": 512, "galleri": [383, 384, 536], "gamlik": 510, "gamma": [398, 483], "gammapi": [0, 1, 2, 3, 4, 5, 7, 8, 9, 10, 11, 12, 13, 14, 383, 386, 389, 392, 400, 402, 403, 404, 408, 409, 410, 413, 414, 420, 421, 488, 497, 498, 499, 500, 510, 513, 517, 518, 519, 520, 521, 527, 529, 530, 531, 534, 579, 580, 586], "gaussian": [540, 541, 555, 571, 572], "gaussianprior": 235, "gaussianspatialmodel": 236, "gaussianspectralmodel": 237, "gaussiantemporalmodel": 238, "gener": [383, 389, 393, 398, 409, 410, 520, 541, 572], "generalist": 407, "generalizedgaussianspatialmodel": 239, "generalizedgaussiantemporalmodel": 240, "geom": 193, "geometri": [456, 469, 476, 477, 490, 491, 506, 507, 533, 535], "get": [386, 403, 416, 455, 464, 465, 490, 511, 512, 513, 519, 534], "get_combined_flux_map": 145, "get_combined_significance_map": 146, "get_images_path": 347, "get_irfs_featur": 96, "get_random_st": 334, "get_rebinned_axi": 147, "get_wstat_gof_term": 303, "get_wstat_mu_bkg": 304, "github": 383, "given": 492, "global": 405, "glossari": 581, "good": 585, "gpl": 383, "group": 494, "gti": [86, 519], "guid": [385, 523], "guidelin": [384, 388, 389, 403], "h": 500, "halv": 482, "handl": [383, 392, 393, 394, 405, 409, 489, 586], "have": [391, 393, 398, 399, 407], "hawc": [468, 499], "hduindext": 87, "hduloc": 318, "healpix": 533, "help": 419, "helper": 395, "hess": 468, "hgp": 484, "hierarch": 494, "hierarchi": 410, "hierarchical_clust": 308, "high": [0, 5, 392, 399, 506, 521], "hli": 460, "how": [383, 384, 386, 403, 413, 490, 522], "hpxgeom": 194, "hpxmap": 195, "hpxndmap": 196, "hstack_column": 353, "i": [383, 386, 388, 473], "idea": 393, "imag": [384, 389, 397, 402, 463, 469, 490, 502], "imageprofil": 130, "imageprofileestim": 131, "impact": 412, "implement": [393, 394, 403, 409, 411, 412, 493, 495], "import": [383, 475], "improv": [394, 406, 437, 446, 449, 450, 451], "inbuilt": 488, "includ": [384, 495], "index": [490, 495, 519], "infer": 412, "info": [11, 383], "inform": [409, 484, 495, 526], "infrastructur": 451, "input": [383, 410, 463], "inspect": 507, "instal": [403, 416, 417, 419], "instrument": [7, 468, 527], "integr": [13, 414, 454], "integrate_spectrum": 285, "interact": 405, "interest": 470, "interfac": [0, 392, 394, 399, 506, 521, 534], "intern": 486, "interpol": [13, 383, 490], "interpolate_profil": 323, "interpolation_scal": 324, "interv": 477, "intrins": 455, "introduc": [394, 402, 404, 406, 407, 473], "introduct": [394, 397, 398, 400, 401, 403, 407, 409, 410, 454, 459, 461, 469, 479, 483, 484, 485, 489, 490, 497, 498, 499, 500, 502, 508, 510, 512, 513, 583], "inversecdfsampl": 332, "ipython": 420, "irf": [7, 159, 392, 410, 454, 485, 488, 497, 527], "irf_registri": 161, "irfmap": 160, "isothermalprofil": 22, "isotrop": 498, "issu": [412, 419, 451], "iter": 490, "j": 483, "jan": 424, "jfactori": 23, "joint": [467, 468, 518], "json": 409, "jul": 427, "june": [438, 449], "jupyt": [383, 416, 418, 420], "kei": 486, "kernel": 488, "known": 451, "labelmapaxi": [197, 490], "lat": [468, 498], "latest": 497, "law": [457, 549, 552, 553, 554, 560, 561, 562, 563, 564, 565, 566], "lazi": 395, "lazyfitsdata": 319, "lc": 476, "let": 472, "level": [0, 5, 389, 392, 399, 506, 507, 521], "li": 479, "licens": 383, "light": [398, 476, 477, 478, 486, 577], "lightcurv": [398, 471, 478, 482, 484], "lightcurveestim": [132, 520], "lightcurvetemplatetemporalmodel": 241, "like": [471, 486], "likelihood": 585, "limit": 393, "line": [11, 383, 582], "linear": 573, "lineartemporalmodel": 242, "link": 384, "list": [384, 394, 395, 396, 397, 398, 399, 400, 412, 471, 477, 484, 490, 491, 492, 493, 508, 519], "literatur": 461, "livetim": 489, "load": [395, 454, 455, 457, 459, 461, 484, 486, 492, 499], "load_irf_dict_from_fil": 169, "locat": 383, "log": [11, 383, 457, 556, 557], "logparabolanormspectralmodel": 243, "logparabolaspectralmodel": 244, "logspir": 34, "loguniformprior": 245, "long": 409, "loop": [456, 489, 507], "lorimer2006": 35, "low": [389, 507], "lt": 408, "ma": 479, "mai": [426, 437], "maintain": [390, 409], "mainten": 392, "major": 413, "make": [383, 386, 413, 469, 472, 479, 507], "make_base_catalog_galact": 45, "make_catalog_random_positions_cub": 46, "make_catalog_random_positions_spher": 47, "make_concentric_annulus_sky_region": 342, "make_counts_rad_max": 184, "make_edisp_kernel_map": 185, "make_edisp_map": 186, "make_effective_livetime_map": 187, "make_map_background_irf": 188, "make_map_exposure_true_energi": 189, "make_observation_time_map": 190, "make_orthogonal_rectangle_sky_region": 343, "make_path": 348, "make_psf_map": 191, "make_theta_squared_t": 192, "maker": [8, 174, 404, 410, 456, 477, 489, 506, 507, 529, 530, 531], "maker_registri": 173, "mamba": 417, "manag": [392, 417], "manual": [491, 494], "map": [9, 198, 202, 389, 392, 393, 463, 464, 465, 468, 469, 475, 479, 483, 488, 490, 491, 492, 504, 508, 520, 533, 534, 535], "mapax": 199, "mapaxi": 200, "mapcoord": [201, 534], "mapdataset": [103, 395, 467, 471, 485, 499, 518], "mapdataseteventsampl": [104, 396], "mapdatasetmak": [175, 530], "mapdatasetmetadata": 105, "mapdatasetonoff": [106, 395], "mappanelplott": 370, "mar": 425, "march": 447, "margin": 412, "mask": [397, 459, 460, 465, 485, 491, 506], "materi": 409, "matter": [483, 510], "measur": 583, "meet": 392, "messag": 383, "met": 586, "metadata": [409, 410], "method": [384, 395, 396, 411, 482, 490, 520, 534], "method_default": 326, "method_kwargs_default": 327, "meyercrabspectralmodel": 247, "miniconda": 417, "minor": 404, "minuit": 412, "mission": 586, "model": [10, 248, 250, 392, 394, 402, 405, 406, 410, 411, 412, 455, 456, 459, 460, 461, 464, 467, 468, 469, 471, 472, 476, 477, 478, 481, 483, 484, 485, 487, 492, 493, 495, 497, 506, 507, 508, 512, 513, 514, 515, 516, 536, 538, 539, 540, 541, 542, 543, 544, 545, 546, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 569, 570, 571, 572, 573, 574, 575, 576, 577, 579, 583], "model_registri": 246, "modelbas": 249, "modif": 491, "modifi": [383, 490, 493], "modul": [4, 5, 8, 10, 13], "mooreprofil": 24, "morpholog": 470, "morphologi": 493, "motion_since_birth": 314, "motiv": [411, 412], "mpl_plot_check": 361, "multi": 468, "multipl": [471, 492, 495, 518], "multiprocessing_manag": 330, "n_jobs_default": 328, "naima": 558, "naimaspectralmodel": 251, "name": [383, 394, 527], "nebula": 515, "nest": 412, "new": [383, 394, 398, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 437, 438, 440, 441, 442, 443, 444, 445, 446, 449, 450, 451, 477], "next": [457, 459, 460, 463, 469, 476, 497, 499, 500, 506, 508], "nfwprofil": 25, "night": 476, "non": [383, 490, 535], "norm": [406, 493, 542, 554, 557, 559, 562], "norm_bounds_cython": 305, "normal": [335, 506], "notat": 584, "note": [383, 422, 459, 486, 583], "notebook": [11, 383, 391, 420], "nov": [432, 433, 434, 435, 441, 445], "novemb": [446, 451], "now": 398, "nuisanc": 411, "number": [383, 408, 527], "numpi": 408, "o": 473, "object": [383, 384, 393, 405, 464, 465, 471, 472, 484, 486, 494], "observ": [3, 88, 92, 392, 393, 455, 459, 460, 469, 471, 472, 476, 477, 489, 494, 506, 507], "observationeventsampl": 109, "observationfilt": 89, "observationmetadata": 90, "observationseventssampl": 93, "observationt": 91, "observatory_loc": 97, "obtain": [454, 470, 478, 494], "off": [457, 459, 462, 468], "offset": [524, 525, 526, 528], "ogipdatasetread": 107, "ogipdatasetwrit": 108, "old": 414, "one": 486, "onto": 490, "open": 479, "oper": [490, 491], "optimizeresult": 215, "option": [382, 400, 487], "org": 414, "organ": [389, 398], "origin": [383, 386], "other": [383, 384, 393, 414, 417, 510], "outlin": 411, "outlook": [395, 396, 397, 399, 400, 402, 403, 404, 407], "output": [383, 412], "over": 479, "overview": [403, 416, 470, 497, 499, 529, 531, 532], "overwrit": 383, "own": 582, "packag": [0, 1, 2, 3, 4, 5, 7, 8, 9, 10, 12, 13, 14, 402, 404, 414, 417, 437, 502, 510, 511, 580], "paczynski1990": 36, "paczynski1990veloc": 37, "panel": 587, "paper": 392, "parabola": [457, 556, 557], "parallel": [13, 395, 412], "paramet": [216, 217, 394, 406, 411, 412, 460, 470, 487, 492, 493, 506], "parameterestim": 133, "parametr": 394, "parametricpsf": 166, "pdf": 336, "perform": [396, 456, 497, 507], "person": 409, "perspect": 390, "phase": [479, 576], "phasebackgroundmak": 176, "phasogram": 479, "piecewis": [542, 559], "piecewisenormspatialmodel": 252, "piecewisenormspectralmodel": 253, "pig": [387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412], "pip": 417, "pixel": [383, 397, 491], "pk": 486, "plan": 390, "plot": [14, 383, 455, 459, 460, 469, 470, 473, 490, 492, 507, 535, 538, 539, 540, 541, 542, 543, 544, 545, 546, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 569, 570, 571, 572, 573, 574, 575, 587], "plot_contour_lin": 375, "plot_distribut": 376, "plot_heatmap": 377, "plot_map_rgb": 378, "plot_npred_sign": 379, "plot_spectrum_datasets_off_region": 380, "plot_theta_squared_t": 381, "png": 384, "point": [384, 411, 454, 455, 457, 459, 460, 468, 469, 471, 482, 484, 486, 497, 506, 507, 508, 520, 528, 543], "pointinginfo": 94, "pointingmod": 95, "pointspatialmodel": 254, "poisson": 583, "polar": 315, "polici": 409, "pool_kwargs_default": 329, "popul": [1, 512], "posit": [411, 495, 526], "possibl": 409, "post": 413, "posterior": 412, "power": [457, 549, 552, 553, 554, 560, 561, 562, 563, 564, 565, 566], "powerlaw": [457, 574], "powerlaw2spectralmodel": 255, "powerlawnormspectralmodel": 256, "powerlawspectralmodel": 257, "powerlawtemporalmodel": 258, "precis": 396, "predict": 518, "prepar": [398, 408, 454, 456, 472, 507], "prerequisit": [456, 457, 459, 460, 461, 462, 464, 468, 470, 471, 472, 473, 475, 476, 477, 478, 482, 487, 491, 492, 495, 506, 507], "pretti": 484, "primaryflux": 26, "print": 484, "prior": [259, 411, 495], "priorparamet": [218, 219], "produc": 499, "product": [483, 488], "profil": [455, 473, 483, 585], "project": [392, 414], "propag": 410, "propos": [391, 393, 394, 395, 396, 397, 398, 399, 401, 402, 403, 404, 405, 406, 407, 410, 412, 456, 457, 460, 462, 463, 464, 465, 468, 471, 472, 473, 475, 476, 477, 478, 481, 482, 487, 491, 492, 494, 506, 507], "psf": [488, 498, 528], "psf3d": 162, "psf_tabl": 528, "psfkernel": 163, "psfking": 164, "psfmap": [165, 488], "public": 409, "pull": [383, 386, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451], "pulsar": [51, 479, 514, 515], "purpos": 388, "pwn": 50, "pydant": 410, "python": [383, 384, 390, 408, 420], "qualiti": [392, 414, 459, 461, 467, 487], "quantiti": [486, 494, 520], "radial": 525, "radial_distribut": 48, "radmax2d": 167, "rai": [398, 483], "random": [13, 383], "rang": [489, 530], "read": [463, 468, 472, 473, 490, 491, 492, 535], "read_hermes_cub": [286, 288], "read_yaml": 349, "recommend": [416, 418], "reconstruct": 525, "recopsfmap": 168, "recursive_merge_dict": 350, "redshift": 455, "reduc": [4, 464, 465, 485, 506, 507], "reduct": [8, 392, 398, 456, 459, 460, 461, 467, 476, 477, 481, 489, 499, 506, 507, 530, 582], "refer": [6, 403, 581, 582, 583], "reflect": [489, 531], "reflectedregionsbackgroundmak": [177, 531], "reflectedregionsfind": 178, "region": [13, 394, 397, 454, 456, 459, 461, 489, 491, 492, 531, 535], "region_to_fram": 344, "regiongeom": [203, 535], "regionndmap": [204, 535], "regions_to_compound_region": 345, "regionsfind": 179, "relat": 535, "releas": [383, 392, 408, 409, 413, 414, 422], "remark": 388, "remnant": 516, "remov": [383, 492], "renam": 383, "repositori": 414, "repr": 383, "represent": [406, 486, 538, 539, 540, 541, 542, 543, 544, 545, 546, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 569, 570, 571, 572, 573, 574, 575, 576, 577], "request": [383, 386, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451], "requir": [382, 383, 400, 410], "requires_data": 362, "requires_depend": 363, "resampl": 485, "resample_energy_edg": 148, "residu": [459, 461, 467, 507], "resolv": [404, 479, 481], "respons": [7, 527], "restructur": 403, "result": [398, 407, 454, 456, 460, 463, 470, 473, 476, 481, 486, 585], "return": [383, 384], "review": 388, "ring": [465, 489, 532], "ringbackgroundmak": 180, "rmf": 526, "road": 393, "roadmap": 392, "rotat": 397, "rst": 384, "run": [11, 386, 459, 460, 461, 470, 472, 473, 476, 506, 582], "run_multiprocess": 331, "safe": [489, 530], "safemaskmak": 181, "sampl": [396, 412, 471, 472], "sample_powerlaw": 337, "sample_spher": 338, "sample_sphere_dist": 339, "sample_tim": 340, "sampler": 472, "save": [460, 506, 507], "scale": 586, "scale_plot_flux": 287, "scaledregulargridinterpol": 322, "scalespectralmodel": 262, "scenario": 393, "schedul": 408, "scheme": [394, 409], "script": [11, 13, 383, 420, 502, 504], "section": 403, "sed": 520, "select": [456, 460, 469, 476, 477, 481, 484, 492, 506, 507, 519], "select_nested_model": 289, "sensit": 454, "sensitivityestim": 134, "sep": [428, 444], "serial": [395, 410, 468], "serialis": [411, 412, 460, 473, 488, 492, 493, 498, 518], "seril": 394, "set": [386, 460, 490, 506], "setup": [391, 414, 416, 418, 419, 454, 455, 456, 457, 459, 460, 461, 462, 463, 464, 465, 467, 468, 469, 470, 471, 472, 473, 476, 477, 478, 479, 481, 482, 483, 484, 485, 486, 487, 489, 490, 491, 492, 493, 495, 497, 498, 499, 500, 506, 507, 508], "sever": 383, "share": 493, "shell": 544, "shell2": 545, "shell2spatialmodel": 263, "shellspatialmodel": 264, "shorter": 406, "should": 383, "show": [469, 470, 494], "signal": 470, "signific": [456, 463, 465, 491, 584], "simplepulsar": 54, "simplifi": 406, "simul": [392, 395, 461, 462, 471, 472, 475, 478], "sine": 575, "sinetemporalmodel": 265, "singl": [384, 462], "size": 535, "skip": 383, "sky": [9, 394, 397, 469, 471, 491, 526, 534], "sky_to_fov": 316, "skycoord": 534, "skymodel": [266, 493], "slice": 490, "small": 386, "smooth": [463, 563], "smoothbrokenpowerlawspectralmodel": 267, "snr": 52, "snrtruelovemcke": 53, "solut": 410, "some": [383, 393, 491], "sourc": [1, 2, 454, 456, 459, 463, 469, 470, 471, 472, 478, 484, 491, 495, 497, 508, 512, 513, 514, 515, 517], "sourcecatalog": 56, "sourcecatalog1lhaaso": 57, "sourcecatalog2fhl": 58, "sourcecatalog2hwc": 59, "sourcecatalog2pc": 60, "sourcecatalog3fgl": 61, "sourcecatalog3fhl": 62, "sourcecatalog3hwc": 63, "sourcecatalog3pc": 64, "sourcecatalog4fgl": 65, "sourcecataloggammacat": 66, "sourcecataloghgp": 67, "sourcecataloglargescalehgp": 68, "sourcecatalogobject": 69, "sourcecatalogobject1lhaaso": 70, "sourcecatalogobject2fhl": 71, "sourcecatalogobject2hwc": 72, "sourcecatalogobject2pc": 73, "sourcecatalogobject3fgl": 74, "sourcecatalogobject3fhl": 75, "sourcecatalogobject3hwc": 76, "sourcecatalogobject3pc": 77, "sourcecatalogobject4fgl": 78, "sourcecatalogobjectgammacat": 79, "sourcecatalogobjecthgp": 80, "sourcecatalogobjecthgpscompon": 81, "sourceirfmodel": 394, "sourcemodel": 394, "spatial": [394, 406, 469, 483, 490, 493, 512, 535, 536, 538, 539, 540, 541, 542, 543, 544, 545, 546], "spatial_model_registri": 260, "spatialirfmodel": 394, "spatialmodel": 268, "special": 585, "specif": [394, 403, 484, 486], "spectra": 483, "spectral": [406, 411, 455, 456, 457, 459, 460, 461, 468, 469, 483, 493, 502, 508, 536, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 567], "spectral_model_registri": 261, "spectralirfmodel": 394, "spectralmodel": 269, "spectroscopi": 481, "spectrum": [455, 459, 461, 462, 469, 479, 489, 507], "spectrumdataset": [110, 395, 485, 518], "spectrumdatasetmak": [182, 530], "spectrumdatasetonoff": [111, 395], "sphinx": [383, 384], "spiral": 512, "split_dataset": [116, 119], "spread": [497, 528], "squar": [470, 500], "stack": [459, 465, 467, 518], "standard_scal": 309, "standardise_unit": 368, "start": [403, 416, 511, 512, 513, 519, 534], "stat": [12, 455], "stat_contour": 487, "stat_profile_ul_scipi": 290, "stat_surfac": 487, "statist": [12, 459, 491, 583, 584], "statu": [388, 393, 402, 408], "step": [460, 497, 499, 500, 580], "store": [398, 460, 526], "str": 383, "structur": [402, 404, 437, 508, 580], "structure_funct": 306, "studi": 398, "style": 389, "sub": [490, 511], "subclass": 411, "subpackag": 389, "subset": 484, "suggest": 409, "summari": [423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 467, 498], "super": [564, 565, 566], "superexpcutoffpowerlaw3fglspectralmodel": 270, "superexpcutoffpowerlaw4fgldr3spectralmodel": 271, "superexpcutoffpowerlaw4fglspectralmodel": 272, "supernova": 516, "support": [383, 390, 408, 409, 411, 488, 518], "survei": [504, 587], "symmetr": 525, "systemat": 411, "t": [463, 584], "tabl": [13, 470, 484, 486, 499, 519], "table_row_to_dict": 354, "table_standardise_units_copi": 355, "table_standardise_units_inplac": 356, "tag": 406, "target": 459, "task": [394, 395, 396, 397, 398, 399, 400, 412], "templat": [471, 546, 567], "templatendspatialmodel": 274, "templatendspectralmodel": 275, "templatenpredmodel": 276, "templatephasecurvetemporalmodel": 277, "templatespatialmodel": 278, "templatespectralmodel": 279, "tempor": [472, 478, 493, 536, 569, 570, 571, 572, 573, 574, 575, 576, 577], "temporal_model_registri": 273, "temporalmodel": 280, "term": 409, "terminologi": 393, "test": [13, 383, 386, 412, 470, 479], "text": 383, "theta": 500, "thi": 386, "through": 486, "thumbnail": 384, "time": [13, 392, 398, 453, 458, 466, 471, 474, 477, 478, 480, 481, 482, 496, 501, 502, 503, 505, 509, 537, 547, 568, 578, 586], "time_ref_from_dict": 365, "time_ref_to_dict": 366, "time_relative_to_ref": 367, "timemapaxi": [205, 490], "timmerkonig_lightcurve_simul": 292, "to_yaml": 351, "tool": [11, 383, 582], "tooltip": 384, "touch": 386, "trapz_loglog": 321, "troubleshoot": [419, 582], "true": [524, 526, 528], "tsmapestim": 135, "tune": 412, "tutori": [384, 391, 403, 416, 470, 497, 499, 502], "two": 492, "type": [383, 410, 518, 520], "uncertainti": 401, "underli": [477, 535], "unfold": 411, "unfreez": 492, "unif": 407, "unifi": [394, 407], "uniformprior": 281, "unit": [13, 383], "unit_from_fits_image_hdu": 369, "unix": 383, "unreleas": 452, "up": [386, 402, 404], "upsampl": 535, "us": [383, 393, 411, 412, 417, 420, 460, 470, 471, 476, 485, 487, 488, 490, 506, 507, 510, 513, 517, 518, 519, 520, 521, 527, 529, 530, 531, 534, 553, 564, 565, 566, 579], "user": [390, 412, 523], "util": [4, 5, 8, 10, 13, 402, 580, 584, 586], "valid": 410, "valleespir": 38, "valu": [383, 411, 470, 490, 495], "vari": 478, "variabl": [1, 2, 3, 4, 5, 7, 8, 10, 13, 471, 482], "varianc": 482, "variou": 494, "veloc": 512, "velocity_distribut": 49, "velocity_glon_glat": 317, "venv": 415, "version": [383, 408, 413, 422, 475], "virtual": 415, "visual": [14, 404, 490, 535, 587], "visualis": [463, 481, 486], "volum": 535, "warn": 383, "wc": [490, 535], "wcsgeom": 206, "wcsmap": 207, "wcsndmap": 208, "we": [391, 398, 399, 407, 499], "webpag": 414, "what": [383, 386, 388, 391, 393, 398, 399, 407, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 437, 438, 440, 441, 442, 443, 444, 445, 457, 459, 460, 463, 469, 476, 506, 508], "where": 383, "which": 383, "wind": 515, "wise": 476, "without": 495, "wobbleregionsfind": 183, "work": 519, "workflow": [11, 580], "write": [383, 388, 460, 472, 490, 491, 519, 535, 582], "write_yaml": 352, "wstat": [307, 583, 584, 585], "wstatcountsstatist": 293, "yaml": [406, 460, 506, 538, 539, 540, 541, 542, 543, 544, 545, 546, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 569, 570, 571, 572, 573, 574, 575, 576, 577], "your": [419, 460, 582], "yusifovkucuk2004": 39, "yusifovkucuk2004b": 40, "zhaoprofil": 27}})