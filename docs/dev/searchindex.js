Search.setIndex({"alltitles": {"0.1 (Aug 25, 2014)": [[400, "aug-25-2014"]], "0.10 (Jan 28, 2019)": [[401, "jan-28-2019"]], "0.11 (Mar 29, 2019)": [[402, "mar-29-2019"]], "0.12 (May 30, 2019)": [[403, "may-30-2019"]], "0.13 (Jul 26, 2019)": [[404, "jul-26-2019"]], "0.14 (Sep 30, 2019)": [[405, "sep-30-2019"]], "0.15 (Dec 3, 2019)": [[406, "dec-3-2019"]], "0.16 (Feb 1, 2020)": [[407, "feb-1-2020"]], "0.17 (Apr 1, 2020)": [[408, "apr-1-2020"]], "0.18 (Nov 4th, 2020)": [[409, "nov-4th-2020"]], "0.18.1 (Nov 6th, 2020)": [[410, "nov-6th-2020"]], "0.18.2 (Nov 19th, 2020)": [[411, "nov-19th-2020"]], "0.19 (Nov 22nd, 2021)": [[412, "nov-22nd-2021"]], "0.2 (Apr 13, 2015)": [[413, "apr-13-2015"]], "0.20 (May 12th, 2022)": [[414, "may-12th-2022"]], "0.20.1 (June 16th, 2022)": [[415, "june-16th-2022"]], "0.3 (Aug 13, 2015)": [[416, "aug-13-2015"]], "0.4 (Apr 20, 2016)": [[417, "apr-20-2016"]], "0.5 (Nov 22, 2016)": [[418, "nov-22-2016"]], "0.6 (Apr 28, 2017)": [[419, "apr-28-2017"]], "0.7 (Feb 28, 2018)": [[420, "feb-28-2018"]], "0.8 (Sep 23, 2018)": [[421, "sep-23-2018"]], "0.9 (Nov 29, 2018)": [[422, "nov-29-2018"]], "1.0 (November 10th, 2022)": [[423, "november-10th-2022"]], "1.0.1 (March 14th, 2023)": [[424, "march-14th-2023"]], "1.0.2 (December 6th, 2023)": [[425, "december-6th-2023"]], "1.1 (June 13th 2023)": [[426, "june-13th-2023"]], "1.2 (February 29th 2024)": [[427, "february-29th-2024"]], "1.3 (unreleased)": [[428, "unreleased"]], "1D Spectral": [[475, "d-spectral"]], "1D spectrum simulation": [[437, "d-spectrum-simulation"]], "2D Image": [[475, "d-image"]], "2D map fitting": [[439, "d-map-fitting"]], "3D Cube": [[475, "d-cube"]], "3D detailed analysis": [[442, "d-detailed-analysis"]], "3D map simulation": [[450, "d-map-simulation"]], "API Links": [[362, "api-links"]], "API changes": [[423, "api-changes"], [426, "api-changes"], [427, "api-changes"]], "API reference": [[6, "api-reference"]], "ASmoothMapEstimator": [[112, "asmoothmapestimator"]], "Abstract": [[366, "abstract"], [367, "abstract"], [368, "abstract"], [369, "abstract"], [370, "abstract"], [371, "abstract"], [373, "abstract"], [374, "abstract"], [375, "abstract"], [376, "abstract"], [377, "abstract"], [378, "abstract"], [379, "abstract"], [380, "abstract"], [381, "abstract"], [382, "abstract"], [383, "abstract"], [384, "abstract"], [385, "abstract"], [386, "abstract"], [387, "abstract"], [388, "abstract"], [389, "abstract"]], "Acceptation of the Developer Certificate of Origin (DCO)": [[364, "acceptation-of-the-developer-certificate-of-origin-dco"]], "Accessing Data": [[463, "accessing-data"]], "Accessing contents of a dataset": [[459, "accessing-contents-of-a-dataset"]], "Accessor methods": [[507, "accessor-methods"]], "Adaptive smoothing": [[438, "adaptive-smoothing"]], "AdaptiveRingBackgroundMaker": [[158, "adaptiveringbackgroundmaker"]], "Add a model on multiple datasets": [[465, "add-a-model-on-multiple-datasets"]], "Add new parametric models": [[372, "add-new-parametric-models"]], "Adding Non-Spatial Axes": [[463, "adding-non-spatial-axes"]], "Adding Non-contiguous axes": [[463, "adding-non-contiguous-axes"]], "Additional Models": [[384, "additional-models"]], "Additional PSF classes": [[501, "additional-psf-classes"]], "Additional utilities": [[553, "additional-utilities"]], "Aim": [[465, "aim"]], "Alternative": [[385, "alternative"]], "Alternatives": [[369, "alternatives"], [372, "alternatives"], [375, "alternatives"], [377, "alternatives"], [378, "alternatives"], [379, "alternatives"], [381, "alternatives"], [382, "alternatives"], [388, "alternatives"]], "Alternatives / Outlook": [[374, "alternatives-outlook"]], "Analysis": [[15, "analysis"]], "Analysis configuration": [[435, "analysis-configuration"], [442, "analysis-configuration"], [452, "analysis-configuration"], [479, "analysis-configuration"]], "Analysis steps": [[553, "analysis-steps"]], "Analysis workflow": [[553, "analysis-workflow"]], "AnalysisConfig": [[16, "analysisconfig"]], "As a function of of true energy and offset angle (PSF_TABLE)": [[501, "as-a-function-of-of-true-energy-and-offset-angle-gadf-psf-table"]], "Assert convention": [[361, "assert-convention"]], "Assign to model to all datasets": [[453, "assign-to-model-to-all-datasets"]], "Assigning background models to datasets": [[465, "assigning-background-models-to-datasets"]], "Astrophysical source models": [[486, "astrophysical-source-models"]], "Astrophysical source population models": [[485, "astrophysical-source-population-models"]], "Astrophysics": [[484, "astrophysics"]], "Authorship policy": [[387, "authorship-policy"]], "BACKEND_DEFAULT": [[305, "backend-default"]], "BSD or GPL license?": [[361, "bsd-or-gpl-license"]], "Background": [[470, "background"], [498, "background"]], "Background / What we have now": [[376, "background-what-we-have-now"]], "Background Model Handling": [[383, "background-model-handling"]], "Background estimation": [[462, "background-estimation"], [503, "background-estimation"]], "Background2D": [[137, "background2d"]], "Background3D": [[138, "background3d"]], "BackgroundIRF": [[139, "backgroundirf"]], "BackgroundIRFModel": [[372, "backgroundirfmodel"]], "BackgroundModel": [[372, "backgroundmodel"]], "Basic image exploration and fitting": [[444, "basic-image-exploration-and-fitting"]], "Basic operators": [[463, "basic-operators"]], "Bayesian blocks": [[451, "bayesian-blocks"]], "Bin volume and angular size": [[508, "bin-volume-and-angular-size"]], "Boundary mask": [[464, "boundary-mask"]], "Broken power law spectral model": [[522, "broken-power-law-spectral-model"]], "BrokenPowerLawSpectralModel": [[205, "brokenpowerlawspectralmodel"]], "Bug fixes and improvements": [[414, "bug-fixes-and-improvements"], [423, "bug-fixes-and-improvements"], [426, "bug-fixes-and-improvements"], [427, "bug-fixes-and-improvements"]], "Build": [[391, "build"]], "Building 1D datasets from the new observations": [[453, "building-1d-datasets-from-the-new-observations"]], "Building the 1D analysis configuration": [[452, "building-the-1d-analysis-configuration"]], "Building the 3D analysis configuration": [[452, "building-the-3d-analysis-configuration"]], "Built-in models": [[552, "built-in-models"]], "Bundled gammapy.extern code": [[361, "bundled-gammapy-extern-code"]], "BurkertProfile": [[17, "burkertprofile"]], "CATALOG_REGISTRY": [[55, "catalog-registry"]], "CITATION.cff": [[387, "citation-cff"]], "CLUMPY": [[483, "clumpy"]], "CTA 1DC": [[470, "cta-1dc"]], "CTA performance files": [[470, "cta-performance-files"]], "CTA with Gammapy": [[470, "cta-with-gammapy"]], "Caplog fixture": [[361, "caplog-fixture"]], "Case 1: Background systematics as a nuisance parameter #3955": [[389, "case-1-background-systematics-as-a-nuisance-parameter-3955"]], "Case 2: Favoring positive values for flux amplitudes": [[389, "case-2-favoring-positive-values-for-flux-amplitudes"]], "Case 3: Support unfolding methods for spectral flux points #4122": [[389, "case-3-support-unfolding-methods-for-spectral-flux-points-4122"]], "CaseBattacharya1998": [[28, "casebattacharya1998"]], "Cash : Poisson data with background model": [[556, "cash-poisson-data-with-background-model"]], "Cash counts statistic": [[557, "cash-counts-statistic"]], "CashCountsStatistic": [[272, "cashcountsstatistic"]], "Catalog table": [[458, "catalog-table"]], "Caveat": [[556, "caveat"]], "Changelog": [[381, "changelog"]], "Check Python code": [[362, "check-python-code"]], "Check broken links": [[362, "check-broken-links"]], "Check setup": [[430, "check-setup"], [431, "check-setup"], [434, "check-setup"], [435, "check-setup"], [436, "check-setup"], [437, "check-setup"], [438, "check-setup"], [439, "check-setup"], [440, "check-setup"], [442, "check-setup"], [443, "check-setup"], [444, "check-setup"], [445, "check-setup"], [446, "check-setup"], [447, "check-setup"], [448, "check-setup"], [452, "check-setup"], [453, "check-setup"], [454, "check-setup"], [455, "check-setup"], [457, "check-setup"], [458, "check-setup"], [459, "check-setup"], [460, "check-setup"], [462, "check-setup"], [463, "check-setup"], [464, "check-setup"], [465, "check-setup"], [466, "check-setup"], [468, "check-setup"], [470, "check-setup"], [471, "check-setup"], [472, "check-setup"], [473, "check-setup"], [479, "check-setup"], [480, "check-setup"], [481, "check-setup"]], "Check the dataset we produced": [[472, "check-the-dataset-we-produced"]], "Check your setup": [[396, "check-your-setup"]], "Checker": [[335, "checker"]], "Choose a thumbnail and tooltip for the tutorial gallery": [[362, "choose-a-thumbnail-and-tooltip-for-the-tutorial-gallery"]], "Citation scheme": [[387, "citation-scheme"]], "Class attributes": [[362, "class-attributes"]], "Classes": [[0, "classes"], [1, "classes"], [1, "id1"], [1, "id2"], [2, "classes"], [3, "classes"], [4, "classes"], [5, "classes"], [7, "classes"], [8, "classes"], [9, "classes"], [10, "classes"], [10, "id2"], [12, "classes"], [13, "classes"], [13, "id5"], [13, "id7"], [13, "id10"], [13, "id15"], [14, "classes"]], "Clean up gammapy.utils": [[380, "clean-up-gammapy-utils"]], "Clobber or overwrite?": [[361, "clobber-or-overwrite"]], "Code in RST files": [[362, "code-in-rst-files"]], "Code in docstrings in Python files": [[362, "code-in-docstrings-in-python-files"]], "Code quality": [[391, "code-quality"]], "Collection of the personal information of authors": [[387, "collection-of-the-personal-information-of-authors"]], "Colormaps": [[560, "colormaps"]], "Combining event lists and GTIs": [[492, "combining-event-lists-and-gtis"]], "Combining two Models": [[465, "combining-two-models"]], "Command line tools": [[555, "command-line-tools"]], "Command line tools using click": [[361, "command-line-tools-using-click"]], "Command not found": [[555, "command-not-found"]], "Compare against the literature": [[436, "compare-against-the-literature"]], "Compare results": [[452, "compare-results"]], "Compound Spectral Model": [[466, "compound-spectral-model"]], "Compound spectral model": [[523, "compound-spectral-model"]], "CompoundSpectralModel": [[206, "compoundspectralmodel"]], "Computation times": [[429, "computation-times"], [433, "computation-times"], [441, "computation-times"], [449, "computation-times"], [456, "computation-times"], [469, "computation-times"], [474, "computation-times"], [476, "computation-times"], [478, "computation-times"], [482, "computation-times"], [510, "computation-times"], [520, "computation-times"], [541, "computation-times"], [551, "computation-times"]], "Compute Flux Points": [[434, "compute-flux-points"]], "Compute correlated significance and correlated excess maps": [[440, "compute-correlated-significance-and-correlated-excess-maps"]], "Compute images": [[444, "compute-images"]], "Compute sensitivity": [[430, "compute-sensitivity"]], "Computing contours using stat_contour": [[460, "computing-contours-using-stat-contour"]], "Computing contours using stat_surface": [[460, "computing-contours-using-stat-surface"]], "Computing flux points": [[480, "computing-flux-points"]], "Conda Environments": [[392, "conda-environments"]], "Confidence contours": [[460, "confidence-contours"]], "Configurable analysis": [[553, "configurable-analysis"]], "Configuration": [[448, "configuration"]], "Configuration for stacked and joint analysis": [[442, "configuration-for-stacked-and-joint-analysis"]], "Configuration of the analysis": [[435, "configuration-of-the-analysis"]], "Constant spatial model": [[511, "constant-spatial-model"]], "Constant spectral model": [[524, "constant-spectral-model"]], "Constant temporal model": [[542, "constant-temporal-model"]], "ConstantFluxSpatialModel": [[207, "constantfluxspatialmodel"]], "ConstantSpatialModel": [[208, "constantspatialmodel"]], "ConstantSpectralModel": [[209, "constantspectralmodel"]], "ConstantTemporalModel": [[210, "constanttemporalmodel"]], "Context": [[431, "context"], [432, "context"], [434, "context"], [435, "context"], [436, "context"], [437, "context"], [438, "context"], [439, "context"], [440, "context"], [443, "context"], [445, "context"], [446, "context"], [448, "context"], [450, "context"], [451, "context"], [452, "context"], [453, "context"], [454, "context"], [464, "context"], [467, "context"], [468, "context"], [479, "context"], [480, "context"]], "Continuous integration": [[391, "continuous-integration"]], "Contribution in conferences": [[387, "contribution-in-conferences"]], "Contributors": [[400, "contributors"], [401, "contributors"], [402, "contributors"], [403, "contributors"], [404, "contributors"], [405, "contributors"], [406, "contributors"], [407, "contributors"], [408, "contributors"], [409, "contributors"], [412, "contributors"], [413, "contributors"], [414, "contributors"], [415, "contributors"], [416, "contributors"], [417, "contributors"], [418, "contributors"], [419, "contributors"], [420, "contributors"], [421, "contributors"], [422, "contributors"], [423, "contributors"], [424, "contributors"], [425, "contributors"], [426, "contributors"], [427, "contributors"]], "Convert a jupyter notebook to python script in the sphinx-gallery format": [[361, "convert-a-jupyter-notebook-to-python-script-in-the-sphinx-gallery-format"]], "Coordinate and axis names": [[361, "coordinate-and-axis-names"]], "Coordinates defined by the RegionGeom": [[508, "coordinates-defined-by-the-regiongeom"]], "Counts": [[471, "counts"]], "Counts and fit statistics": [[557, "counts-and-fit-statistics"]], "Counts statistics classes": [[557, "counts-statistics-classes"]], "Covariance": [[199, "covariance"]], "Covariance and parameters errors": [[460, "covariance-and-parameters-errors"]], "Create DL4 product - PSFMap": [[461, "create-dl4-product-psfmap"]], "Create a mask in energy": [[464, "create-a-mask-in-energy"]], "Create a stacked dataset": [[440, "create-a-stacked-dataset"]], "Create edisp kernel map": [[461, "create-edisp-kernel-map"]], "Create exclusion mask": [[434, "create-exclusion-mask"], [440, "create-exclusion-mask"]], "Create exposure map": [[461, "create-exposure-map"]], "Create the energy-dependent temporal model": [[447, "create-the-energy-dependent-temporal-model"]], "Create the maker classes to be used": [[480, "create-the-maker-classes-to-be-used"]], "Create the makers": [[431, "create-the-makers"]], "Create the mask from a catalog of sources": [[464, "create-the-mask-from-a-catalog-of-sources"]], "Create the mask from a list of regions": [[464, "create-the-mask-from-a-list-of-regions"]], "Create the mask from statistically significant pixels in a dataset": [[464, "create-the-mask-from-statistically-significant-pixels-in-a-dataset"]], "Create the mask map": [[464, "create-the-mask-map"]], "Create the temporal model and write it to disk": [[447, "create-the-temporal-model-and-write-it-to-disk"]], "Creating WCS Maps": [[463, "creating-wcs-maps"]], "Creating a RegionGeom": [[508, "creating-a-regiongeom"]], "Creating a RegionNDMap": [[508, "creating-a-regionndmap"]], "Creating a mask for fitting": [[464, "creating-a-mask-for-fitting"]], "Creating a mask manually": [[464, "creating-a-mask-manually"]], "Creating an empty dataset": [[459, "creating-an-empty-dataset"]], "Creating an exclusion mask": [[464, "creating-an-exclusion-mask"]], "Creating from a Map Geometry": [[463, "creating-from-a-map-geometry"]], "Creating the config file": [[439, "creating-the-config-file"], [440, "creating-the-config-file"]], "Creation of the Flux points": [[435, "creation-of-the-flux-points"]], "Creation of the data reduction makers": [[453, "creation-of-the-data-reduction-makers"]], "Creation of the datasets": [[453, "creation-of-the-datasets"]], "Creation of the model": [[435, "creation-of-the-model"]], "Cube plotting": [[463, "cube-plotting"]], "Cumulative excess and significance": [[431, "cumulative-excess-and-significance"]], "Current status": [[386, "current-status"]], "Custom models": [[552, "custom-models"]], "Cutouts": [[463, "cutouts"]], "Cython": [[391, "cython"]], "DATASET_REGISTRY": [[93, "dataset-registry"]], "DCO implementation": [[387, "dco-implementation"]], "DL3 DR1": [[473, "dl3-dr1"]], "DMProfile": [[18, "dmprofile"]], "D_SUN_TO_GALACTIC_CENTER": [[290, "d-sun-to-galactic-center"]], "Dark matter": [[483, "dark-matter"]], "Dark matter spatial and spectral models": [[457, "dark-matter-spatial-and-spectral-models"]], "DarkMatterAnnihilationSpectralModel": [[19, "darkmatterannihilationspectralmodel"]], "DarkMatterDecaySpectralModel": [[20, "darkmatterdecayspectralmodel"]], "Data Fitting": [[376, "data-fitting"]], "Data access and selection (DL3)": [[492, "data-access-and-selection-dl3"]], "Data analysis": [[475, "data-analysis"]], "Data analysis subpackages in gammapy": [[367, "data-analysis-subpackages-in-gammapy"]], "Data and Observation handling": [[370, "data-and-observation-handling"]], "Data and models files": [[443, "data-and-models-files"]], "Data exploration": [[475, "data-exploration"]], "Data reduction": [[376, "data-reduction"], [442, "data-reduction"], [442, "id1"], [479, "data-reduction"], [480, "data-reduction"]], "Data reduction (DL3 to DL4)": [[503, "data-reduction-dl3-to-dl4"]], "Data reduction into a MapDataset": [[472, "data-reduction-into-a-mapdataset"]], "Data reduction loop": [[462, "data-reduction-loop"]], "Data structures": [[481, "data-structures"]], "DataStore": [[78, "datastore"]], "Dataset": [[94, "dataset"], [373, "dataset"], [462, "dataset"]], "Dataset helper / convenience methods": [[373, "dataset-helper-convenience-methods"]], "Dataset serialization": [[373, "dataset-serialization"]], "Dataset simulations": [[436, "dataset-simulations"]], "DatasetModels": [[211, "datasetmodels"]], "Datasets": [[95, "datasets"], [370, "datasets"], [373, "datasets"], [388, "datasets"], [459, "datasets"]], "Datasets (DL4)": [[491, "datasets-dl4"]], "Datasets - Reduced data, IRFs, models": [[459, "datasets-reduced-data-irfs-models"]], "Datasets serialization": [[443, "datasets-serialization"]], "DatasetsMaker": [[159, "datasetsmaker"]], "Datastore": [[470, "datastore"]], "Dealing with links": [[362, "dealing-with-links"]], "Decision": [[366, "decision"], [367, "decision"], [368, "decision"], [369, "decision"], [370, "decision"], [371, "decision"], [372, "decision"], [373, "decision"], [374, "decision"], [375, "decision"], [376, "decision"], [377, "decision"], [378, "decision"], [379, "decision"], [380, "decision"], [381, "decision"], [382, "decision"], [383, "decision"], [384, "decision"], [385, "decision"], [386, "decision"], [387, "decision"], [388, "decision"], [389, "decision"]], "Define Target Region": [[434, "define-target-region"]], "Define an Observation": [[446, "define-an-observation"]], "Define an observation and make a dataset": [[447, "define-an-observation-and-make-a-dataset"]], "Define analysis region and energy binning": [[430, "define-analysis-region-and-energy-binning"]], "Define map geometry": [[444, "define-map-geometry"]], "Define the MapDataset": [[446, "define-the-mapdataset"]], "Define the Model": [[453, "define-the-model"]], "Define the ON region": [[436, "define-the-on-region"]], "Define the Sky model: a point-like source": [[446, "define-the-sky-model-a-point-like-source"]], "Define the geometries": [[431, "define-the-geometries"]], "Define the geometry": [[464, "define-the-geometry"]], "Define the model": [[480, "define-the-model"]], "Define the model to be used": [[452, "define-the-model-to-be-used"], [452, "id3"]], "Define the simulation source model": [[447, "define-the-simulation-source-model"]], "Define time intervals": [[453, "define-time-intervals"]], "Defining the datastore and selecting observations": [[480, "defining-the-datastore-and-selecting-observations"]], "Defining the geometry": [[453, "defining-the-geometry"]], "Definition of a Contributor": [[387, "definition-of-a-contributor"]], "Definition of the Maintainer": [[387, "definition-of-the-maintainer"]], "Definition of the data selection": [[452, "definition-of-the-data-selection"], [452, "id1"]], "Definition of the dataset geometry": [[452, "definition-of-the-dataset-geometry"], [452, "id2"]], "Dependencies": [[360, "dependencies"], [378, "dependencies"]], "Deprecating a function or a class": [[361, "deprecating-a-function-or-a-class"]], "Deprecation": [[386, "deprecation"]], "Derivation of the WStat formula": [[558, "derivation-of-the-wstat-formula"]], "Detailed plan": [[368, "detailed-plan"]], "Developer How To": [[361, "developer-how-to"]], "Developer guide": [[363, "developer-guide"]], "Discussion / Alternatives": [[376, "discussion-alternatives"]], "Disk spatial model": [[512, "disk-spatial-model"]], "DiskSpatialModel": [[212, "diskspatialmodel"]], "Dissolve gammapy.background": [[380, "dissolve-gammapy-background"]], "Dissolve gammapy.image": [[380, "dissolve-gammapy-image"]], "Distributions": [[378, "distributions"], [378, "id1"]], "Documentation": [[370, "documentation"], [427, "documentation"]], "Documentation How To": [[362, "documentation-how-to"]], "Documentation building": [[362, "documentation-building"]], "Documentation guidelines": [[362, "documentation-guidelines"]], "Download": [[391, "download"]], "EBL absorption spectral model": [[521, "ebl-absorption-spectral-model"]], "EBLAbsorptionNormSpectralModel": [[213, "eblabsorptionnormspectralmodel"]], "EBL_DATA_BUILTIN": [[214, "ebl-data-builtin"]], "EDispKernel": [[140, "edispkernel"]], "EDispKernelMap": [[141, "edispkernelmap"]], "EDispMap": [[142, "edispmap"]], "ESTIMATOR_REGISTRY": [[113, "estimator-registry"]], "Effective Area": [[461, "effective-area"]], "Effective area": [[470, "effective-area"], [497, "effective-area"]], "EffectiveAreaTable2D": [[143, "effectiveareatable2d"]], "EinastoProfile": [[21, "einastoprofile"]], "Energy Dependent Spatial Models": [[384, "energy-dependent-spatial-models"]], "Energy Dispersion": [[461, "energy-dispersion"], [471, "energy-dispersion"], [499, "energy-dispersion"]], "Energy dispersion": [[470, "energy-dispersion"]], "Energy edges": [[493, "energy-edges"]], "EnergyDependentMorphologyEstimator": [[114, "energydependentmorphologyestimator"]], "EnergyDependentMultiGaussPSF": [[144, "energydependentmultigausspsf"]], "EnergyDispersion2D": [[145, "energydispersion2d"]], "Estimating TS": [[557, "estimating-ts"]], "Estimation of time variability in a lightcurve": [[451, "estimation-of-time-variability-in-a-lightcurve"]], "Estimator": [[115, "estimator"]], "Estimators": [[388, "estimators"]], "Estimators (DL4 to DL5, and DL6)": [[493, "estimators-dl4-to-dl5-and-dl6"]], "Event Simulation": [[370, "event-simulation"]], "Event lists": [[481, "event-lists"]], "Event sampling": [[446, "event-sampling"]], "EventList": [[79, "eventlist"]], "EventListMetaData": [[80, "eventlistmetadata"]], "Events": [[470, "events"], [471, "events"]], "Example": [[556, "example"], [556, "id2"]], "Example 1: Including Prior Information about the Sources Index": [[468, "example-1-including-prior-information-about-the-sources-index"]], "Example 2: Encouraging Positive Amplitude Values": [[468, "example-2-encouraging-positive-amplitude-values"]], "Example plot": [[511, "example-plot"], [512, "example-plot"], [513, "example-plot"], [514, "example-plot"], [515, "example-plot"], [516, "example-plot"], [517, "example-plot"], [518, "example-plot"], [519, "example-plot"], [521, "example-plot"], [522, "example-plot"], [523, "example-plot"], [524, "example-plot"], [525, "example-plot"], [526, "example-plot"], [527, "example-plot"], [528, "example-plot"], [529, "example-plot"], [530, "example-plot"], [531, "example-plot"], [532, "example-plot"], [533, "example-plot"], [534, "example-plot"], [535, "example-plot"], [536, "example-plot"], [537, "example-plot"], [538, "example-plot"], [539, "example-plot"], [540, "example-plot"], [542, "example-plot"], [543, "example-plot"], [544, "example-plot"], [545, "example-plot"], [546, "example-plot"], [547, "example-plot"], [548, "example-plot"]], "Examples using gammapy.analysis.Analysis": [[494, "examples-using-gammapy-analysis-analysis"]], "Examples using gammapy.astro.darkmatter.DarkMatterAnnihilationSpectralModel": [[483, "examples-using-gammapy-astro-darkmatter-darkmatterannihilationspectralmodel"]], "Examples using gammapy.catalog.SourceCatalog3FHL": [[490, "examples-using-gammapy-catalog-sourcecatalog3fhl"]], "Examples using gammapy.catalog.SourceCatalogGammaCat": [[490, "examples-using-gammapy-catalog-sourcecataloggammacat"]], "Examples using gammapy.data.DataStore": [[492, "examples-using-gammapy-data-datastore"]], "Examples using gammapy.data.EventList": [[492, "examples-using-gammapy-data-eventlist"]], "Examples using gammapy.datasets.MapDataset": [[491, "examples-using-gammapy-datasets-mapdataset"]], "Examples using gammapy.datasets.SpectrumDatasetOnOff": [[491, "examples-using-gammapy-datasets-spectrumdatasetonoff"]], "Examples using gammapy.estimators.FluxPointsEstimator": [[493, "examples-using-gammapy-estimators-fluxpointsestimator"]], "Examples using gammapy.estimators.LightCurveEstimator": [[493, "examples-using-gammapy-estimators-lightcurveestimator"]], "Examples using gammapy.irf.EDispKernelMap": [[500, "examples-using-gammapy-irf-edispkernelmap"]], "Examples using gammapy.irf.PSFMap": [[500, "examples-using-gammapy-irf-psfmap"]], "Examples using gammapy.irf.load_irf_dict_from_file": [[500, "examples-using-gammapy-irf-load-irf-dict-from-file"]], "Examples using gammapy.makers.FoVBackgroundMaker": [[502, "examples-using-gammapy-makers-fovbackgroundmaker"]], "Examples using gammapy.makers.MapDatasetMaker": [[503, "examples-using-gammapy-makers-mapdatasetmaker"]], "Examples using gammapy.makers.ReflectedRegionsBackgroundMaker": [[504, "examples-using-gammapy-makers-reflectedregionsbackgroundmaker"]], "Examples using gammapy.makers.SpectrumDatasetMaker": [[503, "examples-using-gammapy-makers-spectrumdatasetmaker"]], "Examples using gammapy.maps.HpxNDMap": [[507, "examples-using-gammapy-maps-hpxndmap"]], "Examples using gammapy.maps.RegionNDMap": [[507, "examples-using-gammapy-maps-regionndmap"]], "Examples using gammapy.maps.WcsNDMap": [[507, "examples-using-gammapy-maps-wcsndmap"]], "Examples using gammapy.modeling.Fit": [[552, "examples-using-gammapy-modeling-fit"]], "Excess and Significance": [[557, "excess-and-significance"], [557, "id2"]], "Excess errors": [[557, "excess-errors"], [557, "id4"]], "Excess estimators": [[385, "excess-estimators"]], "ExcessMapEstimator": [[116, "excessmapestimator"]], "Exclusion masks": [[464, "exclusion-masks"]], "Execution": [[555, "execution"]], "Exemplary additional prior subclasses:": [[389, "exemplary-additional-prior-subclasses"]], "Exercises": [[430, "exercises"], [432, "exercises"], [434, "exercises"], [437, "exercises"], [442, "exercises"], [444, "exercises"], [446, "exercises"], [447, "exercises"], [454, "exercises"], [470, "exercises"], [471, "exercises"], [472, "exercises"], [473, "exercises"], [481, "exercises"], [481, "id1"], [481, "id2"], [481, "id3"]], "Existing code": [[367, "existing-code"]], "ExpCutoffPowerLaw3FGLSpectralModel": [[215, "expcutoffpowerlaw3fglspectralmodel"]], "ExpCutoffPowerLawNormSpectralModel": [[216, "expcutoffpowerlawnormspectralmodel"]], "ExpCutoffPowerLawSpectralModel": [[217, "expcutoffpowerlawspectralmodel"]], "ExpDecay temporal model": [[543, "expdecay-temporal-model"]], "ExpDecayTemporalModel": [[218, "expdecaytemporalmodel"]], "Expected number of detected events": [[500, "expected-number-of-detected-events"]], "Exploration of the fit results": [[435, "exploration-of-the-fit-results"]], "Explore the fit results": [[431, "explore-the-fit-results"]], "Explore the results": [[431, "explore-the-results"]], "Exponential": [[29, "exponential"]], "Exponential Cut-Off Powerlaw Fit": [[432, "exponential-cut-off-powerlaw-fit"]], "Exponential cutoff power law norm spectral model": [[527, "exponential-cutoff-power-law-norm-spectral-model"]], "Exponential cutoff power law spectral model": [[525, "exponential-cutoff-power-law-spectral-model"]], "Exponential cutoff power law spectral model used for 3FGL": [[526, "exponential-cutoff-power-law-spectral-model-used-for-3fgl"]], "Expose model parameters as attributes": [[372, "expose-model-parameters-as-attributes"]], "Exposure": [[471, "exposure"]], "Extended source using a template": [[446, "extended-source-using-a-template"]], "Extract the light curve": [[453, "extract-the-light-curve"]], "Extract the lightcurve": [[454, "extract-the-lightcurve"]], "Extracting the light curve": [[452, "extracting-the-light-curve"]], "Extracting the ring background": [[440, "extracting-the-ring-background"]], "Factorisation of the IRFs": [[500, "factorisation-of-the-irfs"]], "FaucherKaspi2006": [[30, "faucherkaspi2006"]], "FaucherKaspi2006VelocityBimodal": [[31, "faucherkaspi2006velocitybimodal"]], "FaucherKaspi2006VelocityMaxwellian": [[32, "faucherkaspi2006velocitymaxwellian"]], "FaucherSpiral": [[33, "faucherspiral"]], "Feature Freeze and Branching": [[390, "feature-freeze-and-branching"]], "Fermi-LAT 3FHL: map dataset for 3D analysis": [[443, "fermi-lat-3fhl-map-dataset-for-3d-analysis"]], "Fermi-LAT with Gammapy": [[471, "fermi-lat-with-gammapy"]], "FermiST": [[483, "fermist"]], "Files": [[470, "files"]], "Filling a RegionNDMap": [[508, "filling-a-regionndmap"]], "Filling maps from event lists": [[463, "filling-maps-from-event-lists"]], "Filling maps from interpolation": [[463, "filling-maps-from-interpolation"]], "Filter the observations list in time intervals": [[453, "filter-the-observations-list-in-time-intervals"]], "Final remarks": [[366, "final-remarks"]], "Final result": [[558, "final-result"]], "Fit": [[200, "fit"], [450, "fit"], [471, "fit"]], "Fit quality and model residuals": [[434, "fit-quality-and-model-residuals"], [436, "fit-quality-and-model-residuals"]], "Fit quality assessment": [[460, "fit-quality-assessment"]], "Fit quality assessment and model residuals for a MapDataset": [[442, "fit-quality-assessment-and-model-residuals-for-a-mapdataset"]], "Fit quality assessment and model residuals for a joint Datasets": [[442, "fit-quality-assessment-and-model-residuals-for-a-joint-datasets"]], "Fit spectrum": [[434, "fit-spectrum"], [436, "fit-spectrum"]], "Fit statistics": [[556, "fit-statistics"]], "Fit the datasets": [[454, "fit-the-datasets"]], "Fit the model": [[480, "fit-the-model"]], "Fitting": [[370, "fitting"], [460, "fitting"]], "Fitting Multiple Datasets with and without the Prior": [[468, "fitting-multiple-datasets-with-and-without-the-prior"]], "Fitting a Dataset with and without the Prior": [[468, "fitting-a-dataset-with-and-without-the-prior"]], "Fitting options": [[460, "fitting-options"]], "Fitting temporal models": [[454, "fitting-temporal-models"]], "Fitting the obtained light curve": [[454, "fitting-the-obtained-light-curve"]], "Fix non-Unix line endings": [[361, "fix-non-unix-line-endings"]], "FixedPointingInfo": [[81, "fixedpointinginfo"]], "Float data type: 32 bit or 64 bit?": [[361, "float-data-type-32-bit-or-64-bit"]], "Flux Profile Estimation": [[448, "flux-profile-estimation"]], "Flux maps": [[493, "flux-maps"]], "Flux maps for annihilation": [[457, "flux-maps-for-annihilation"]], "Flux maps for decay": [[457, "flux-maps-for-decay"]], "Flux point fitting": [[432, "flux-point-fitting"]], "Flux points": [[458, "flux-points"], [479, "flux-points"], [493, "flux-points"]], "Flux quantities": [[493, "flux-quantities"]], "FluxMaps": [[117, "fluxmaps"]], "FluxMetaData": [[118, "fluxmetadata"]], "FluxPoints": [[119, "fluxpoints"]], "FluxPointsDataset": [[96, "fluxpointsdataset"], [373, "fluxpointsdataset"], [459, "fluxpointsdataset"]], "FluxPointsEstimator": [[120, "fluxpointsestimator"]], "FluxProfileEstimator": [[121, "fluxprofileestimator"]], "FoV background": [[462, "fov-background"], [502, "fov-background"]], "FoVAlignment": [[146, "fovalignment"]], "FoVBackgroundMaker": [[160, "fovbackgroundmaker"]], "FoVBackgroundModel": [[219, "fovbackgroundmodel"]], "Fractional excess variance, point-to-point fractional variance and doubling/halving time": [[451, "fractional-excess-variance-point-to-point-fractional-variance-and-doubling-halving-time"]], "Freezing and unfreezing model parameters": [[465, "freezing-and-unfreezing-model-parameters"]], "Functions": [[1, "functions"], [3, "functions"], [4, "functions"], [4, "id1"], [5, "functions"], [7, "functions"], [8, "functions"], [9, "functions"], [10, "functions"], [10, "id1"], [10, "id3"], [12, "functions"], [13, "functions"], [13, "id1"], [13, "id2"], [13, "id3"], [13, "id4"], [13, "id6"], [13, "id8"], [13, "id9"], [13, "id12"], [13, "id13"], [13, "id14"], [13, "id16"], [13, "id17"], [14, "functions"]], "Functions or class methods that return a single object": [[362, "functions-or-class-methods-that-return-a-single-object"]], "Functions returning several values": [[361, "functions-returning-several-values"]], "Further references": [[556, "further-references"]], "GTI": [[82, "gti"]], "Galactic diffuse background": [[471, "galactic-diffuse-background"]], "Galactocentric spatial distributions": [[485, "galactocentric-spatial-distributions"]], "Gamma-ray spectra at production": [[457, "gamma-ray-spectra-at-production"]], "GammaLib": [[483, "gammalib"]], "Gammapy": [[398, "gammapy"]], "Gammapy Binder": [[391, "id1"]], "Gammapy analysis workflow and package structure": [[553, "gammapy-analysis-workflow-and-package-structure"]], "Gammapy overview": [[381, "gammapy-overview"]], "Gammapy repository": [[391, "gammapy-repository"]], "Gammapy webpages": [[391, "gammapy-webpages"]], "Gaussian spatial model": [[513, "gaussian-spatial-model"]], "Gaussian spectral model": [[528, "gaussian-spectral-model"]], "Gaussian temporal model": [[544, "gaussian-temporal-model"]], "GaussianSpatialModel": [[220, "gaussianspatialmodel"]], "GaussianSpectralModel": [[221, "gaussianspectralmodel"]], "GaussianTemporalModel": [[222, "gaussiantemporalmodel"]], "General Gammapy publications": [[387, "general-gammapy-publications"]], "General code style guidelines": [[367, "general-code-style-guidelines"]], "General conventions": [[361, "general-conventions"]], "General idea and class diagram": [[371, "general-idea-and-class-diagram"]], "General method": [[493, "general-method"]], "General organization of the new approach": [[376, "general-organization-of-the-new-approach"]], "Generalist estimators": [[385, "generalist-estimators"]], "Generalized Gaussian temporal model": [[545, "generalized-gaussian-temporal-model"]], "Generalized gaussian spatial model": [[514, "generalized-gaussian-spatial-model"]], "GeneralizedGaussianSpatialModel": [[223, "generalizedgaussianspatialmodel"]], "GeneralizedGaussianTemporalModel": [[224, "generalizedgaussiantemporalmodel"]], "Generating log messages": [[361, "generating-log-messages"]], "Geom": [[181, "geom"]], "Get in touch early": [[364, "get-in-touch-early"]], "Get set up": [[364, "get-set-up"]], "Getting started": [[381, "getting-started"], [393, "getting-started"], [484, "getting-started"], [485, "getting-started"], [486, "getting-started"]], "Getting started section restructuring": [[381, "getting-started-section-restructuring"]], "Getting started with data": [[492, "getting-started-with-data"]], "Getting started with maps": [[507, "getting-started-with-maps"]], "Getting the reduced dataset": [[439, "getting-the-reduced-dataset"], [440, "getting-the-reduced-dataset"]], "Global Model Handling": [[383, "global-model-handling"]], "Glossary": [[554, "glossary"]], "Glossary and references": [[554, "glossary-and-references"]], "Goodness of fit": [[558, "goodness-of-fit"]], "Guidelines and specific actions": [[381, "guidelines-and-specific-actions"]], "H.E.S.S. with Gammapy": [[473, "h-e-s-s-with-gammapy"]], "HAWC data access and reduction": [[472, "hawc-data-access-and-reduction"]], "HAWC with Gammapy": [[472, "hawc-with-gammapy"]], "HAWC: 1D dataset for flux point fitting": [[443, "hawc-1d-dataset-for-flux-point-fitting"]], "HDUIndexTable": [[83, "hduindextable"]], "HDULocation": [[298, "hdulocation"]], "HEALPix geometry": [[506, "healpix-geometry"]], "HEALPix-based maps": [[506, "healpix-based-maps"]], "HESS-DL3: 1D ON/OFF dataset for spectral fitting": [[443, "hess-dl3-1d-on-off-dataset-for-spectral-fitting"]], "Handling of conference material": [[387, "handling-of-conference-material"]], "Help!?": [[396, "help"]], "Hierarchical clustering of observations": [[467, "hierarchical-clustering-of-observations"]], "Hierarchy": [[388, "hierarchy"]], "High Level Analysis Interface": [[494, "high-level-analysis-interface"]], "High level interface": [[370, "high-level-interface"], [479, "high-level-interface"]], "How To": [[381, "how-to"], [495, "how-to"]], "How to contribute to Gammapy": [[364, "how-to-contribute-to-gammapy"]], "How to get data values": [[463, "how-to-get-data-values"]], "How to handle API breaking changes?": [[361, "how-to-handle-api-breaking-changes"]], "How to make a Gammapy release": [[390, "how-to-make-a-gammapy-release"]], "How to make a pull request": [[361, "how-to-make-a-pull-request"]], "How to set data values": [[463, "how-to-set-data-values"]], "How to use logging": [[361, "how-to-use-logging"]], "How to use random numbers": [[361, "how-to-use-random-numbers"]], "How to write code": [[361, "how-to-write-code"]], "How to write tests": [[361, "how-to-write-tests"]], "HpxGeom": [[182, "hpxgeom"]], "HpxMap": [[183, "hpxmap"]], "HpxNDMap": [[184, "hpxndmap"]], "IPython": [[397, "id3"]], "IRF": [[147, "irf"], [388, "irf"]], "IRF axis naming": [[500, "irf-axis-naming"]], "IRFMap": [[148, "irfmap"]], "IRF_REGISTRY": [[149, "irf-registry"]], "IRFs": [[370, "irfs"], [470, "irfs"]], "Image Plotting": [[463, "image-plotting"]], "ImageProfile": [[122, "imageprofile"]], "ImageProfileEstimator": [[123, "imageprofileestimator"]], "Images and masks": [[375, "images-and-masks"]], "Implement default parameters": [[372, "implement-default-parameters"]], "Implement evaluation region specifications": [[372, "implement-evaluation-region-specifications"]], "Implement sky coordinate handling": [[372, "implement-sky-coordinate-handling"]], "Implementation": [[381, "implementation"], [389, "implementation"]], "Implementation Outline": [[389, "implementation-outline"]], "Implementation road map": [[371, "implementation-road-map"]], "Implementing a custom model": [[466, "implementing-a-custom-model"]], "Implementing a custom prior": [[468, "implementing-a-custom-prior"]], "Imports and versions": [[450, "imports-and-versions"]], "Improve SourceModels class": [[372, "improve-sourcemodels-class"]], "Improve and implement model serilization": [[372, "improve-and-implement-model-serilization"]], "Improve spatial models": [[372, "improve-spatial-models"]], "In the RST files": [[362, "in-the-rst-files"]], "Inbuilt Gammapy IRFs": [[461, "inbuilt-gammapy-irfs"]], "Include png files as images": [[362, "include-png-files-as-images"]], "Indexing and Slicing Sub-Maps": [[463, "indexing-and-slicing-sub-maps"]], "Inspect the reduced dataset": [[480, "inspect-the-reduced-dataset"]], "Inspecting residuals": [[480, "inspecting-residuals"]], "Install issues": [[396, "install-issues"]], "Installation": [[381, "installation"], [393, "installation"], [394, "installation"]], "Instrument Response Functions (DL3)": [[500, "instrument-response-functions-dl3"]], "Interaction Between Models and Dataset Objects": [[383, "interaction-between-models-and-dataset-objects"]], "Interface with MapCoord and SkyCoord": [[507, "interface-with-mapcoord-and-skycoord"]], "Interpolating onto a different geometry": [[463, "interpolating-onto-a-different-geometry"]], "Interpolation and extrapolation": [[361, "interpolation-and-extrapolation"]], "Introduce Shorter YAML Alias Tags": [[384, "introduce-shorter-yaml-alias-tags"]], "Introduce a FluxEstimate base class": [[385, "introduce-a-fluxestimate-base-class"]], "Introduce a FluxMap API": [[385, "introduce-a-fluxmap-api"]], "Introduce a FluxPointsCollection API": [[385, "introduce-a-fluxpointscollection-api"]], "Introduce gammapy.datasets": [[382, "introduce-gammapy-datasets"]], "Introduce gammapy.estimators": [[382, "introduce-gammapy-estimators"]], "Introduce gammapy.makers": [[382, "introduce-gammapy-makers"]], "Introduce gammapy.modeling": [[380, "introduce-gammapy-modeling"]], "Introduce gammapy.visualization": [[382, "introduce-gammapy-visualization"]], "Introduce naming scheme for models": [[372, "introduce-naming-scheme-for-models"]], "Introduction": [[372, "introduction"], [375, "introduction"], [376, "introduction"], [378, "introduction"], [379, "introduction"], [381, "introduction"], [385, "introduction"], [387, "introduction"], [388, "introduction"], [430, "introduction"], [434, "introduction"], [436, "introduction"], [444, "introduction"], [455, "introduction"], [457, "introduction"], [458, "introduction"], [459, "introduction"], [462, "introduction"], [463, "introduction"], [470, "introduction"], [471, "introduction"], [475, "introduction"], [481, "introduction"], [483, "introduction"], [485, "introduction"], [486, "introduction"], [556, "introduction"]], "Introduction of background models": [[372, "introduction-of-background-models"]], "Introduction of model name attributes": [[372, "introduction-of-model-name-attributes"]], "Introduction of \u201cforward folded\u201d models": [[372, "introduction-of-forward-folded-models"]], "InverseCDFSampler": [[312, "inversecdfsampler"]], "IsothermalProfile": [[22, "isothermalprofile"]], "Isotropic diffuse background": [[471, "isotropic-diffuse-background"]], "Iterating by image": [[463, "iterating-by-image"]], "J Factors": [[457, "j-factors"]], "JFactory": [[23, "jfactory"]], "Joint Analysis": [[491, "joint-analysis"]], "Joint analysis": [[442, "joint-analysis"], [443, "joint-analysis"]], "Jupyter notebooks": [[397, "jupyter-notebooks"]], "LabelMapAxis": [[185, "labelmapaxis"], [463, "labelmapaxis"]], "Lazy loading of Datasets": [[373, "lazy-loading-of-datasets"]], "LazyFitsData": [[299, "lazyfitsdata"]], "Let\u2019s simulate the model": [[447, "let-s-simulate-the-model"]], "Light Curve Fitting": [[376, "light-curve-fitting"]], "Light Curve estimation by observation": [[452, "light-curve-estimation-by-observation"]], "Light curve temporal model": [[550, "light-curve-temporal-model"]], "Light curves": [[452, "light-curves"]], "Light curves for flares": [[453, "light-curves-for-flares"]], "LightCurveEstimator": [[124, "lightcurveestimator"]], "LightCurveTemplateTemporalModel": [[225, "lightcurvetemplatetemporalmodel"]], "Lightcurve": [[376, "lightcurve"]], "Lightcurves": [[458, "lightcurves"]], "Lightcurves in gamma-ray astronomy": [[376, "lightcurves-in-gamma-ray-astronomy"]], "Limitations": [[371, "limitations"]], "Linear temporal model": [[546, "linear-temporal-model"]], "LinearTemporalModel": [[226, "lineartemporalmodel"]], "Links to other tutorials": [[362, "links-to-other-tutorials"]], "List available catalogs": [[458, "list-available-catalogs"]], "Load Data": [[434, "load-data"]], "Load IRFs and prepare dataset": [[430, "load-irfs-and-prepare-dataset"]], "Load catalogs": [[458, "load-catalogs"]], "Load data": [[436, "load-data"]], "Load spectral points": [[432, "load-spectral-points"]], "Loading models from a catalog": [[465, "loading-models-from-a-catalog"]], "Locate origin of warnings": [[361, "locate-origin-of-warnings"]], "Log parabola spectral model": [[529, "log-parabola-spectral-model"]], "Log parabola spectral norm model": [[530, "log-parabola-spectral-norm-model"]], "Log-Parabola Fit": [[432, "log-parabola-fit"]], "LogParabolaNormSpectralModel": [[227, "logparabolanormspectralmodel"]], "LogParabolaSpectralModel": [[228, "logparabolaspectralmodel"]], "LogSpiral": [[34, "logspiral"]], "Long Term Support releases": [[387, "long-term-support-releases"]], "Lorimer2006": [[35, "lorimer2006"]], "Low level API": [[480, "low-level-api"]], "Low level map and cube analysis": [[367, "low-level-map-and-cube-analysis"]], "MAKER_REGISTRY": [[161, "maker-registry"]], "METHOD_DEFAULT": [[306, "method-default"]], "METHOD_KWARGS_DEFAULT": [[307, "method-kwargs-default"]], "MODEL_REGISTRY": [[229, "model-registry"]], "Maintainer and developer perspective": [[368, "maintainer-and-developer-perspective"]], "Maintenance and Code Quality": [[370, "maintenance-and-code-quality"]], "Make a Bugfix release": [[390, "make-a-bugfix-release"]], "Make a Li&Ma test over the events": [[455, "make-a-li-ma-test-over-the-events"]], "Make sky images": [[444, "make-sky-images"]], "Make small pull requests": [[364, "make-small-pull-requests"]], "Maker": [[162, "maker"]], "Makers": [[388, "makers"]], "Makers - Data reduction": [[462, "makers-data-reduction"]], "Making a butterfly plot": [[480, "making-a-butterfly-plot"]], "Making a pull request that requires backport": [[361, "making-a-pull-request-that-requires-backport"]], "Making a pull request which skips GitHub Actions": [[361, "making-a-pull-request-which-skips-github-actions"]], "Making a pull request with new or modified datasets": [[361, "making-a-pull-request-with-new-or-modified-datasets"]], "Manual grouping of observations": [[467, "manual-grouping-of-observations"]], "Map": [[186, "map"]], "Map Analysis / Data Reduction": [[370, "map-analysis-data-reduction"]], "MapAxes": [[187, "mapaxes"]], "MapAxis": [[188, "mapaxis"]], "MapCoord": [[189, "mapcoord"], [507, "mapcoord"]], "MapDataset": [[97, "mapdataset"], [373, "mapdataset"], [459, "mapdataset"]], "MapDatasetEventSampler": [[98, "mapdataseteventsampler"], [374, "mapdataseteventsampler"]], "MapDatasetMaker": [[163, "mapdatasetmaker"]], "MapDatasetMetaData": [[99, "mapdatasetmetadata"]], "MapDatasetOnOff": [[100, "mapdatasetonoff"], [373, "mapdatasetonoff"]], "MapPanelPlotter": [[348, "mappanelplotter"]], "Maps": [[190, "maps"], [370, "maps"], [463, "maps"], [481, "maps"]], "Maps operations": [[463, "maps-operations"]], "Mask dilation and erosion": [[464, "mask-dilation-and-erosion"]], "Mask maps": [[464, "mask-maps"]], "Mask modifications": [[464, "mask-modifications"]], "Mask some sky regions": [[464, "mask-some-sky-regions"]], "Masks for fitting": [[464, "masks-for-fitting"]], "Masks operations": [[464, "masks-operations"]], "Meetings": [[370, "meetings"]], "Metadata API": [[388, "metadata-api"]], "Metadata files": [[387, "metadata-files"]], "Metadata generation and propagation along the dataflow": [[388, "metadata-generation-and-propagation-along-the-dataflow"]], "Methods to characterize variability": [[451, "methods-to-characterize-variability"]], "MeyerCrabSpectralModel": [[230, "meyercrabspectralmodel"]], "Minor changes": [[382, "minor-changes"]], "Mission elapsed times (MET)": [[559, "mission-elapsed-times-met"]], "Model": [[231, "model"]], "Model and dataset": [[460, "model-and-dataset"], [468, "model-and-dataset"]], "Model fit": [[444, "model-fit"]], "Model fitting": [[435, "model-fitting"], [479, "model-fitting"]], "Model gallery": [[509, "model-gallery"]], "Model lists and serialisation": [[466, "model-lists-and-serialisation"]], "ModelBase": [[232, "modelbase"]], "Modeling": [[370, "modeling"], [388, "modeling"]], "Modeling and Fitting (DL4 to DL5)": [[552, "modeling-and-fitting-dl4-to-dl5"]], "Modeling and fitting": [[442, "modeling-and-fitting"]], "Modelling": [[439, "modelling"], [465, "modelling"]], "Models": [[233, "models"], [466, "models"]], "Models with energy dependent morphology": [[466, "models-with-energy-dependent-morphology"]], "Models with shared parameter": [[466, "models-with-shared-parameter"]], "Modifying Data": [[463, "modifying-data"]], "Modifying model parameters": [[466, "modifying-model-parameters"]], "MooreProfile": [[24, "mooreprofile"]], "Morphological energy dependence estimation": [[445, "morphological-energy-dependence-estimation"]], "Motivation": [[389, "motivation"]], "Multi instrument joint 3D and 1D analysis": [[443, "multi-instrument-joint-3d-and-1d-analysis"]], "NFWProfile": [[25, "nfwprofile"]], "N_JOBS_DEFAULT": [[308, "n-jobs-default"]], "Naima spectral model": [[531, "naima-spectral-model"]], "NaimaSpectralModel": [[234, "naimaspectralmodel"]], "New features": [[423, "new-features"], [426, "new-features"], [427, "new-features"]], "Next steps": [[470, "next-steps"], [472, "next-steps"], [473, "next-steps"]], "Night-wise LC estimation": [[452, "night-wise-lc-estimation"]], "Norm Spectral Models": [[466, "norm-spectral-models"]], "Notations": [[557, "notations"]], "Notes": [[556, "notes"]], "OGIPDatasetReader": [[101, "ogipdatasetreader"]], "OGIPDatasetWriter": [[102, "ogipdatasetwriter"]], "Object text repr, str and info": [[361, "object-text-repr-str-and-info"]], "Objective": [[439, "objective"], [440, "objective"], [446, "objective"], [447, "objective"], [467, "objective"]], "Objectives": [[371, "objectives"]], "Observation": [[84, "observation"]], "Observation duration and effective livetime": [[462, "observation-duration-and-effective-livetime"]], "Observation selection": [[435, "observation-selection"], [479, "observation-selection"]], "ObservationEventSampler": [[103, "observationeventsampler"]], "ObservationFilter": [[85, "observationfilter"]], "ObservationTable": [[86, "observationtable"]], "Observational clustering": [[467, "observational-clustering"]], "Observations": [[87, "observations"]], "ObservationsEventsSampler": [[88, "observationseventssampler"]], "Obtain the data to use": [[445, "obtain-the-data-to-use"]], "Obtain the observations": [[467, "obtain-the-observations"]], "Obtaining an integral flux sensitivity": [[430, "obtaining-an-integral-flux-sensitivity"]], "Old example data": [[391, "old-example-data"]], "On-Off analysis": [[437, "on-off-analysis"]], "Opening the data": [[455, "opening-the-data"]], "Optional dependencies": [[360, "optional-dependencies"], [378, "optional-dependencies"]], "Other folders": [[391, "other-folders"]], "Other packages": [[483, "other-packages"]], "Other repositories": [[391, "other-repositories"]], "Others": [[361, "others"], [391, "others"]], "Outlook": [[373, "outlook"], [375, "outlook"], [377, "outlook"], [378, "outlook"], [380, "outlook"], [381, "outlook"], [382, "outlook"], [385, "outlook"]], "Output in Jupyter notebook cells": [[361, "output-in-jupyter-notebook-cells"]], "Overview": [[502, "overview"], [504, "overview"], [505, "overview"]], "PIG 1 - PIG purpose and guidelines": [[366, "pig-1-pig-purpose-and-guidelines"]], "PIG 10 - Regions": [[375, "pig-10-regions"]], "PIG 11 - Light curves": [[376, "pig-11-light-curves"]], "PIG 12 - High level interface": [[377, "pig-12-high-level-interface"]], "PIG 13 - Gammapy dependencies and distribution": [[378, "pig-13-gammapy-dependencies-and-distribution"]], "PIG 14 - Uncertainty estimation": [[379, "pig-14-uncertainty-estimation"]], "PIG 16 - Gammapy package structure": [[380, "pig-16-gammapy-package-structure"]], "PIG 18 - Documentation": [[381, "pig-18-documentation"]], "PIG 19 - Gammapy package structure follow up": [[382, "pig-19-gammapy-package-structure-follow-up"]], "PIG 2 - Organization of low level analysis code": [[367, "pig-2-organization-of-low-level-analysis-code"]], "PIG 20 - Global Model API": [[383, "pig-20-global-model-api"]], "PIG 21 - Models improvements": [[384, "pig-21-models-improvements"]], "PIG 22 - Unified flux estimators API": [[385, "pig-22-unified-flux-estimators-api"]], "PIG 23 - Gammapy release cycle and version numbering": [[386, "pig-23-gammapy-release-cycle-and-version-numbering"]], "PIG 24 - Authorship policy": [[387, "pig-24-authorship-policy"]], "PIG 25 - Metadata container for Gammapy": [[388, "pig-25-metadata-container-for-gammapy"]], "PIG 26 - Model Priors API": [[389, "pig-26-model-priors-api"]], "PIG 3 - Plan for dropping Python 2.7 support": [[368, "pig-3-plan-for-dropping-python-2-7-support"]], "PIG 4 - Setup for tutorial notebooks and data": [[369, "pig-4-setup-for-tutorial-notebooks-and-data"]], "PIG 5 - Gammapy 1.0 roadmap": [[370, "pig-5-gammapy-1-0-roadmap"]], "PIG 6 - CTA observation handling": [[371, "pig-6-cta-observation-handling"]], "PIG 7 - Models": [[372, "pig-7-models"]], "PIG 8 - Datasets": [[373, "pig-8-datasets"]], "PIG 9 - Event sampling": [[374, "pig-9-event-sampling"]], "PIG review": [[366, "pig-review"]], "PIG status": [[366, "pig-status"]], "PIGs": [[365, "pigs"]], "POOL_KWARGS_DEFAULT": [[309, "pool-kwargs-default"]], "PSF": [[461, "psf"], [471, "psf"]], "PSF3D": [[150, "psf3d"]], "PSFKernel": [[151, "psfkernel"]], "PSFKing": [[152, "psfking"]], "PSFMap": [[153, "psfmap"]], "PWN": [[50, "pwn"]], "Package / API": [[475, "package-api"]], "Package and docs": [[391, "package-and-docs"]], "Package structure and dependencies": [[414, "package-structure-and-dependencies"]], "Paczynski1990": [[36, "paczynski1990"]], "Paczynski1990Velocity": [[37, "paczynski1990velocity"]], "Papers": [[370, "papers"]], "Parallel evaluation of datasets": [[373, "parallel-evaluation-of-datasets"]], "Parameter": [[201, "parameter"]], "ParameterEstimator": [[125, "parameterestimator"]], "Parameters": [[202, "parameters"]], "ParametricPSF": [[154, "parametricpsf"]], "Perform spectral model fitting": [[431, "perform-spectral-model-fitting"]], "Perform the data reduction loop": [[480, "perform-the-data-reduction-loop"]], "Perform the data reduction loop.": [[431, "perform-the-data-reduction-loop"]], "Performance and precision evaluation": [[374, "performance-and-precision-evaluation"]], "Phase curve temporal model": [[549, "phase-curve-temporal-model"]], "Phase-resolved map": [[455, "phase-resolved-map"]], "Phase-resolved spectrum": [[455, "phase-resolved-spectrum"]], "PhaseBackgroundMaker": [[164, "phasebackgroundmaker"]], "Phasogram": [[455, "phasogram"]], "Piecewise  norm spectral model": [[532, "piecewise-norm-spectral-model"]], "Piecewise norm spatial model": [[515, "piecewise-norm-spatial-model"]], "PiecewiseNormSpatialModel": [[235, "piecewisenormspatialmodel"]], "PiecewiseNormSpectralModel": [[236, "piecewisenormspectralmodel"]], "Pixel coordinate convention": [[361, "pixel-coordinate-convention"]], "Plot": [[444, "plot"]], "Plot off regions": [[434, "plot-off-regions"]], "Plot resulting images": [[438, "plot-resulting-images"]], "Plot the fitted spectrum": [[480, "plot-the-fitted-spectrum"]], "Plotting Results": [[448, "plotting-results"]], "Plotting a RegionGeom": [[508, "plotting-a-regiongeom"]], "Plotting models on a (counts) map": [[465, "plotting-models-on-a-counts-map"]], "Plotting the final results of the 1D Analysis": [[435, "plotting-the-final-results-of-the-1d-analysis"]], "Plotting the map content": [[508, "plotting-the-map-content"]], "Plotting the results": [[445, "plotting-the-results"]], "Plotting the underlying region": [[508, "plotting-the-underlying-region"]], "Point Spread Function": [[501, "point-spread-function"]], "Point source sensitivity": [[430, "point-source-sensitivity"]], "Point spatial model": [[516, "point-spatial-model"]], "Point spread function": [[470, "point-spread-function"]], "PointSpatialModel": [[237, "pointspatialmodel"]], "PointingInfo": [[89, "pointinginfo"]], "PointingMode": [[90, "pointingmode"]], "Possible implementations": [[387, "possible-implementations"]], "Post release": [[390, "post-release"]], "Power Law Fit": [[432, "power-law-fit"]], "Power law 2 spectral model": [[534, "power-law-2-spectral-model"]], "Power law norm spectral model": [[535, "power-law-norm-spectral-model"]], "Power law spectral model": [[533, "power-law-spectral-model"]], "PowerLaw temporal model": [[547, "powerlaw-temporal-model"]], "PowerLaw2SpectralModel": [[238, "powerlaw2spectralmodel"]], "PowerLawNormSpectralModel": [[239, "powerlawnormspectralmodel"]], "PowerLawSpectralModel": [[240, "powerlawspectralmodel"]], "PowerLawTemporalModel": [[241, "powerlawtemporalmodel"]], "Predicted counts": [[491, "predicted-counts"]], "Prepare and run the event sampler": [[447, "prepare-and-run-the-event-sampler"]], "Prepare the datasets creation": [[431, "prepare-the-datasets-creation"]], "Preparing reduced datasets geometry": [[480, "preparing-reduced-datasets-geometry"]], "Prerequisites": [[431, "prerequisites"], [432, "prerequisites"], [434, "prerequisites"], [435, "prerequisites"], [436, "prerequisites"], [437, "prerequisites"], [439, "prerequisites"], [443, "prerequisites"], [445, "prerequisites"], [446, "prerequisites"], [447, "prerequisites"], [448, "prerequisites"], [450, "prerequisites"], [451, "prerequisites"], [452, "prerequisites"], [453, "prerequisites"], [454, "prerequisites"], [460, "prerequisites"], [464, "prerequisites"], [465, "prerequisites"], [468, "prerequisites"], [479, "prerequisites"], [480, "prerequisites"]], "Pretty-print source information": [[458, "pretty-print-source-information"]], "PrimaryFlux": [[26, "primaryflux"]], "PriorParameter": [[203, "priorparameter"]], "PriorParameters": [[204, "priorparameters"]], "Priors": [[468, "priors"]], "Profile Estimation": [[448, "profile-estimation"]], "Profile Likelihood": [[558, "profile-likelihood"]], "Profiles": [[457, "profiles"]], "Project Management": [[370, "project-management"]], "Project setup": [[391, "project-setup"]], "Projects": [[370, "projects"]], "Proposal": [[369, "proposal"], [371, "proposal"], [372, "proposal"], [373, "proposal"], [374, "proposal"], [375, "proposal"], [376, "proposal"], [377, "proposal"], [379, "proposal"], [380, "proposal"], [381, "proposal"], [382, "proposal"], [383, "proposal"], [384, "proposal"]], "Proposal of API for flux estimate results": [[385, "proposal-of-api-for-flux-estimate-results"]], "Proposed Approach": [[448, "proposed-approach"]], "Proposed approach": [[431, "proposed-approach"], [432, "proposed-approach"], [435, "proposed-approach"], [437, "proposed-approach"], [438, "proposed-approach"], [439, "proposed-approach"], [440, "proposed-approach"], [443, "proposed-approach"], [446, "proposed-approach"], [447, "proposed-approach"], [450, "proposed-approach"], [451, "proposed-approach"], [452, "proposed-approach"], [453, "proposed-approach"], [454, "proposed-approach"], [460, "proposed-approach"], [464, "proposed-approach"], [465, "proposed-approach"], [467, "proposed-approach"], [479, "proposed-approach"], [480, "proposed-approach"]], "Proposed class diagram": [[371, "proposed-class-diagram"]], "Proposed metadata classes": [[388, "proposed-metadata-classes"]], "Proposed solution": [[388, "proposed-solution"]], "Pull Requests": [[414, "pull-requests"], [415, "pull-requests"], [423, "pull-requests"], [424, "pull-requests"], [425, "pull-requests"], [426, "pull-requests"], [427, "pull-requests"]], "Pull requests": [[400, "pull-requests"], [401, "pull-requests"], [402, "pull-requests"], [403, "pull-requests"], [404, "pull-requests"], [405, "pull-requests"], [406, "pull-requests"], [407, "pull-requests"], [408, "pull-requests"], [409, "pull-requests"], [410, "pull-requests"], [411, "pull-requests"], [412, "pull-requests"], [413, "pull-requests"], [416, "pull-requests"], [417, "pull-requests"], [418, "pull-requests"], [419, "pull-requests"], [420, "pull-requests"], [421, "pull-requests"], [422, "pull-requests"]], "Pulsar": [[51, "pulsar"]], "Pulsar Source Models": [[487, "pulsar-source-models"]], "Pulsar Wind Nebula Source Models": [[488, "pulsar-wind-nebula-source-models"]], "Pulsar analysis": [[455, "pulsar-analysis"]], "Python": [[397, "id2"]], "Python scripts": [[397, "python-scripts"]], "Python version support": [[361, "python-version-support"]], "RadMax2D": [[155, "radmax2d"]], "Read and Introduce Data": [[448, "read-and-introduce-data"]], "Read in input images": [[438, "read-in-input-images"]], "Read the datasets": [[465, "read-the-datasets"]], "Read the energy-dependent model": [[447, "read-the-energy-dependent-model"]], "Reading Maps": [[463, "reading-maps"]], "Reading and Writing": [[463, "reading-and-writing"]], "Reading and writing masks": [[464, "reading-and-writing-masks"]], "Reading different datasets": [[443, "reading-different-datasets"]], "RecoPSFMap": [[156, "recopsfmap"]], "Recommended Setup": [[393, "recommended-setup"], [395, "recommended-setup"]], "Reference": [[381, "reference"], [555, "reference"]], "References": [[554, "publications"]], "Reflected regions background": [[462, "reflected-regions-background"], [504, "reflected-regions-background"]], "ReflectedRegionsBackgroundMaker": [[165, "reflectedregionsbackgroundmaker"]], "ReflectedRegionsFinder": [[166, "reflectedregionsfinder"]], "Region arguments": [[375, "region-arguments"]], "RegionGeom": [[191, "regiongeom"], [508, "regiongeom"]], "RegionGeom and RegionNDMap": [[508, "regiongeom-and-regionndmap"]], "RegionGeom and coordinates": [[508, "regiongeom-and-coordinates"]], "RegionNDMap": [[192, "regionndmap"], [508, "regionndmap"]], "RegionsFinder": [[167, "regionsfinder"]], "Relation to WCS geometries": [[508, "relation-to-wcs-geometries"]], "Release notes": [[361, "release-notes"], [399, "release-notes"]], "Release preparation, feature freeze": [[386, "release-preparation-feature-freeze"]], "Release scheduling and LTS": [[386, "release-scheduling-and-lts"]], "Releases": [[370, "releases"], [387, "releases"], [391, "releases"]], "Releasing the final version of the major release": [[390, "releasing-the-final-version-of-the-major-release"]], "Releasing the first major release candidate": [[390, "releasing-the-first-major-release-candidate"]], "Removing a model from a dataset": [[465, "removing-a-model-from-a-dataset"]], "Removing an attribute": [[361, "removing-an-attribute"]], "Renaming an argument": [[361, "renaming-an-argument"]], "Required dependencies": [[360, "required-dependencies"], [378, "required-dependencies"]], "Requirements": [[388, "requirements"]], "Resampling datasets": [[459, "resampling-datasets"]], "Resolve gammapy.detect": [[382, "resolve-gammapy-detect"]], "Results": [[430, "results"]], "Results exploration": [[435, "results-exploration"]], "Ring background": [[462, "ring-background"], [505, "ring-background"]], "Ring background map": [[440, "ring-background-map"]], "RingBackgroundMaker": [[168, "ringbackgroundmaker"]], "Rotated regions": [[375, "rotated-regions"]], "Run Estimation": [[448, "run-estimation"]], "Run Estimator": [[445, "run-estimator"]], "Run data reduction chain": [[434, "run-data-reduction-chain"], [436, "run-data-reduction-chain"]], "Run the 1D data reduction": [[452, "run-the-1d-data-reduction"]], "Run the 3D data reduction": [[452, "run-the-3d-data-reduction"]], "Running config driven data reduction": [[555, "running-config-driven-data-reduction"]], "Running tests & building Documentation": [[364, "running-tests-building-documentation"]], "Running the Data Reduction": [[435, "running-the-data-reduction"]], "Running the analysis": [[479, "running-the-analysis"]], "Running the estimation": [[435, "running-the-estimation"]], "Running the first step of the analysis: the Data Reduction": [[435, "running-the-first-step-of-the-analysis-the-data-reduction"]], "Running the fit": [[435, "running-the-fit"]], "Running the light curve extraction in 1D": [[452, "running-the-light-curve-extraction-in-1d"]], "SNR": [[52, "snr"]], "SNRTrueloveMcKee": [[53, "snrtruelovemckee"]], "SPATIAL_MODEL_REGISTRY": [[242, "spatial-model-registry"]], "SPECTRAL_MODEL_REGISTRY": [[243, "spectral-model-registry"]], "Safe data range definition": [[503, "safe-data-range-definition"]], "Safe data range handling": [[462, "safe-data-range-handling"]], "SafeMaskMaker": [[169, "safemaskmaker"]], "Sample a source with energy-dependent temporal evolution": [[447, "sample-a-source-with-energy-dependent-temporal-evolution"]], "Sampling methods": [[374, "sampling-methods"]], "Sampling the source and background events": [[446, "sampling-the-source-and-background-events"]], "Save dataset to disk": [[435, "save-dataset-to-disk"], [479, "save-dataset-to-disk"], [480, "save-dataset-to-disk"]], "ScaleSpectralModel": [[244, "scalespectralmodel"]], "ScaledRegularGridInterpolator": [[302, "scaledregulargridinterpolator"]], "Scripts": [[475, "scripts"]], "Select a catalog subset": [[458, "select-a-catalog-subset"]], "Select a source": [[458, "select-a-source"]], "Select observations": [[444, "select-observations"]], "Select the ON region": [[431, "select-the-on-region"]], "Select the data": [[431, "select-the-data"], [453, "select-the-data"]], "Selecting models contributing to a given region": [[465, "selecting-models-contributing-to-a-given-region"]], "Selecting models from a list": [[465, "selecting-models-from-a-list"]], "SensitivityEstimator": [[126, "sensitivityestimator"]], "Serialisation": [[389, "serialisation"], [461, "serialisation"], [461, "id1"], [461, "id2"], [471, "serialisation"]], "Serialisation and I/O": [[448, "serialisation-and-i-o"]], "Serialisation of datasets": [[491, "serialisation-of-datasets"]], "Serialisation of the fit result": [[435, "serialisation-of-the-fit-result"]], "Serialisation of the results": [[435, "serialisation-of-the-results"]], "Serialising models": [[465, "serialising-models"]], "Serialization": [[388, "serialization"]], "Setting fitting parameters": [[435, "setting-fitting-parameters"]], "Setting modeling and fitting parameters": [[479, "setting-modeling-and-fitting-parameters"]], "Setting the background normalization maker": [[479, "setting-the-background-normalization-maker"]], "Setting the data to use": [[479, "setting-the-data-to-use"]], "Setting the exclusion mask": [[435, "setting-the-exclusion-mask"], [479, "setting-the-exclusion-mask"]], "Setting the reduced datasets geometry": [[479, "setting-the-reduced-datasets-geometry"]], "Setup": [[430, "setup"], [431, "setup"], [432, "setup"], [434, "setup"], [435, "setup"], [436, "setup"], [437, "setup"], [438, "setup"], [439, "setup"], [440, "setup"], [444, "setup"], [445, "setup"], [446, "setup"], [447, "setup"], [448, "setup"], [451, "setup"], [452, "setup"], [453, "setup"], [454, "setup"], [457, "setup"], [459, "setup"], [462, "setup"], [463, "setup"], [464, "setup"], [465, "setup"], [466, "setup"], [470, "setup"], [471, "setup"], [479, "setup"], [480, "setup"], [481, "setup"]], "Shell spatial model": [[517, "shell-spatial-model"]], "Shell2 spatial model": [[518, "shell2-spatial-model"]], "Shell2SpatialModel": [[245, "shell2spatialmodel"]], "ShellSpatialModel": [[246, "shellspatialmodel"]], "Show images": [[444, "show-images"]], "Show the results tables": [[445, "show-the-results-tables"]], "Show various observation quantities": [[467, "show-various-observation-quantities"]], "SimplePulsar": [[54, "simplepulsar"]], "Simplify YAML Parameter Representation": [[384, "simplify-yaml-parameter-representation"]], "Simplify YAML Representation": [[384, "simplify-yaml-representation"]], "Simulate multiple event lists": [[446, "simulate-multiple-event-lists"]], "Simulating a light curve": [[454, "simulating-a-light-curve"]], "Simulating and fitting a time varying source": [[454, "simulating-and-fitting-a-time-varying-source"]], "Simulation": [[450, "simulation"]], "Simulation of MapDataset and SpectrumDataset": [[373, "simulation-of-mapdataset-and-spectrumdataset"]], "Simulation of a single spectrum": [[437, "simulation-of-a-single-spectrum"]], "Sine temporal model": [[548, "sine-temporal-model"]], "SineTemporalModel": [[247, "sinetemporalmodel"]], "Skip unit tests for some Astropy versions": [[361, "skip-unit-tests-for-some-astropy-versions"]], "Sky and pixel regions": [[375, "sky-and-pixel-regions"]], "Sky maps (DL4)": [[507, "sky-maps-dl4"]], "SkyModel": [[248, "skymodel"], [466, "skymodel"]], "Smooth broken power law spectral model": [[536, "smooth-broken-power-law-spectral-model"]], "SmoothBrokenPowerLawSpectralModel": [[249, "smoothbrokenpowerlawspectralmodel"]], "Some terminology": [[371, "some-terminology"]], "Source Detection": [[444, "source-detection"]], "Source candidates": [[438, "source-candidates"]], "Source catalogs": [[458, "source-catalogs"], [481, "source-catalogs"], [490, "source-catalogs"]], "Source detection and significance maps": [[438, "source-detection-and-significance-maps"]], "Source information": [[458, "source-information"]], "Source models": [[458, "source-models"], [470, "source-models"]], "Source object": [[458, "source-object"]], "Source statistic": [[434, "source-statistic"]], "SourceCatalog": [[56, "sourcecatalog"]], "SourceCatalog1LHAASO": [[57, "sourcecatalog1lhaaso"]], "SourceCatalog2FHL": [[58, "sourcecatalog2fhl"]], "SourceCatalog2HWC": [[59, "sourcecatalog2hwc"]], "SourceCatalog3FGL": [[60, "sourcecatalog3fgl"]], "SourceCatalog3FHL": [[61, "sourcecatalog3fhl"]], "SourceCatalog3HWC": [[62, "sourcecatalog3hwc"]], "SourceCatalog4FGL": [[63, "sourcecatalog4fgl"]], "SourceCatalogGammaCat": [[64, "sourcecataloggammacat"]], "SourceCatalogHGPS": [[65, "sourcecataloghgps"]], "SourceCatalogLargeScaleHGPS": [[66, "sourcecataloglargescalehgps"]], "SourceCatalogObject": [[67, "sourcecatalogobject"]], "SourceCatalogObject1LHAASO": [[68, "sourcecatalogobject1lhaaso"]], "SourceCatalogObject2FHL": [[69, "sourcecatalogobject2fhl"]], "SourceCatalogObject2HWC": [[70, "sourcecatalogobject2hwc"]], "SourceCatalogObject3FGL": [[71, "sourcecatalogobject3fgl"]], "SourceCatalogObject3FHL": [[72, "sourcecatalogobject3fhl"]], "SourceCatalogObject3HWC": [[73, "sourcecatalogobject3hwc"]], "SourceCatalogObject4FGL": [[74, "sourcecatalogobject4fgl"]], "SourceCatalogObjectGammaCat": [[75, "sourcecatalogobjectgammacat"]], "SourceCatalogObjectHGPS": [[76, "sourcecatalogobjecthgps"]], "SourceCatalogObjectHGPSComponent": [[77, "sourcecatalogobjecthgpscomponent"]], "SourceIRFModel": [[372, "sourceirfmodel"]], "Spatial analysis": [[444, "spatial-analysis"]], "Spatial models": [[466, "spatial-models"], [509, "spatial-models"]], "SpatialIRFModel": [[372, "spatialirfmodel"]], "SpatialModel": [[250, "spatialmodel"]], "Special cases": [[558, "special-cases"]], "Specificities of the HGPS catalog": [[458, "specificities-of-the-hgps-catalog"]], "Spectral Absorption Model": [[384, "spectral-absorption-model"]], "Spectral Norm Models": [[384, "spectral-norm-models"]], "Spectral analysis": [[434, "spectral-analysis"]], "Spectral analysis of extended sources": [[431, "spectral-analysis-of-extended-sources"]], "Spectral analysis with energy-dependent directional cuts": [[436, "spectral-analysis-with-energy-dependent-directional-cuts"]], "Spectral analysis with the HLI": [[435, "spectral-analysis-with-the-hli"]], "Spectral models": [[466, "spectral-models"], [509, "spectral-models"]], "Spectral models and flux points": [[481, "spectral-models-and-flux-points"]], "Spectral points": [[444, "spectral-points"]], "SpectralIRFModel": [[372, "spectralirfmodel"]], "SpectralModel": [[251, "spectralmodel"]], "Spectrum": [[444, "spectrum"]], "Spectrum dataset": [[462, "spectrum-dataset"]], "SpectrumDataset": [[104, "spectrumdataset"], [373, "spectrumdataset"], [459, "spectrumdataset"]], "SpectrumDatasetMaker": [[170, "spectrumdatasetmaker"]], "SpectrumDatasetOnOff": [[105, "spectrumdatasetonoff"], [373, "spectrumdatasetonoff"]], "Sphinx gallery extension": [[362, "sphinx-gallery-extension"]], "Spiral arm models": [[485, "spiral-arm-models"]], "Stack observations": [[434, "stack-observations"]], "Stacked analysis": [[442, "stacked-analysis"]], "Stacking Multiple Datasets": [[491, "stacking-multiple-datasets"]], "Statistical utility functions": [[557, "statistical-utility-functions"]], "Status": [[371, "status"], [380, "status"]], "Storing the energy dispersion information as a function of sky position": [[499, "storing-the-energy-dispersion-information-as-a-function-of-sky-position"]], "Storing the results and further studies": [[376, "storing-the-results-and-further-studies"]], "Sub-packages": [[484, "sub-packages"]], "Suggestions": [[387, "suggestions"]], "Summary": [[400, "summary"], [401, "summary"], [402, "summary"], [403, "summary"], [404, "summary"], [405, "summary"], [406, "summary"], [407, "summary"], [408, "summary"], [409, "summary"], [410, "summary"], [411, "summary"], [412, "summary"], [413, "summary"], [414, "summary"], [415, "summary"], [416, "summary"], [417, "summary"], [418, "summary"], [419, "summary"], [420, "summary"], [421, "summary"], [422, "summary"], [423, "summary"], [424, "summary"], [425, "summary"], [426, "summary"], [427, "summary"], [442, "summary"], [471, "summary"]], "Super Exponential Cutoff Power Law Model used for 4FGL-DR1 (and DR2)": [[539, "super-exponential-cutoff-power-law-model-used-for-4fgl-dr1-and-dr2"]], "Super Exponential Cutoff Power Law Model used for 4FGL-DR3": [[538, "super-exponential-cutoff-power-law-model-used-for-4fgl-dr3"]], "Super exponential cutoff power law model used for 3FGL": [[537, "super-exponential-cutoff-power-law-model-used-for-3fgl"]], "SuperExpCutoffPowerLaw3FGLSpectralModel": [[252, "superexpcutoffpowerlaw3fglspectralmodel"]], "SuperExpCutoffPowerLaw4FGLDR3SpectralModel": [[253, "superexpcutoffpowerlaw4fgldr3spectralmodel"]], "SuperExpCutoffPowerLaw4FGLSpectralModel": [[254, "superexpcutoffpowerlaw4fglspectralmodel"]], "Supernova Remnant Models": [[489, "supernova-remnant-models"]], "Support for Asymmetric IRFs": [[461, "support-for-asymmetric-irfs"]], "Support of python Cython, numpy and astropy versions": [[386, "support-of-python-cython-numpy-and-astropy-versions"]], "Survey Map Script": [[477, "survey-map-script"]], "Survey panel plots": [[560, "survey-panel-plots"]], "TEMPORAL_MODEL_REGISTRY": [[255, "temporal-model-registry"]], "TS map estimation": [[438, "ts-map-estimation"]], "TSMapEstimator": [[127, "tsmapestimator"]], "Task List": [[373, "task-list"]], "Task list": [[372, "task-list"], [374, "task-list"], [375, "task-list"], [376, "task-list"], [377, "task-list"], [378, "task-list"]], "Template spatial model": [[519, "template-spatial-model"]], "Template spectral model": [[540, "template-spectral-model"]], "TemplateNDSpatialModel": [[256, "templatendspatialmodel"]], "TemplateNDSpectralModel": [[257, "templatendspectralmodel"]], "TemplateNPredModel": [[258, "templatenpredmodel"]], "TemplatePhaseCurveTemporalModel": [[259, "templatephasecurvetemporalmodel"]], "TemplateSpatialModel": [[260, "templatespatialmodel"]], "TemplateSpectralModel": [[261, "templatespectralmodel"]], "Temporal models": [[466, "temporal-models"], [509, "temporal-models"]], "TemporalModel": [[262, "temporalmodel"]], "Testing of plotting functions": [[361, "testing-of-plotting-functions"]], "The case of image and cube analysis": [[367, "the-case-of-image-and-cube-analysis"]], "The chi-squared value for each parameter of interest": [[445, "the-chi-squared-value-for-each-parameter-of-interest"]], "The gammapy-data repository": [[391, "the-gammapy-data-repository"]], "The gammapy-extra repository": [[391, "the-gammapy-extra-repository"]], "The index tables": [[492, "the-index-tables"]], "The reflected region finder": [[504, "the-reflected-region-finder"]], "The results for testing energy dependence": [[445, "the-results-for-testing-energy-dependence"]], "The results of the source signal above the background in each energy bin": [[445, "the-results-of-the-source-signal-above-the-background-in-each-energy-bin"]], "The setup": [[443, "the-setup"], [460, "the-setup"], [468, "the-setup"]], "Theta squared event distribution": [[473, "theta-squared-event-distribution"]], "Time": [[475, "time"]], "Time bin preparation": [[376, "time-bin-preparation"]], "Time bins": [[376, "time-bins"]], "Time differences": [[559, "time-differences"]], "Time format and scale": [[559, "time-format-and-scale"]], "Time handling in Gammapy": [[559, "time-handling-in-gammapy"]], "Time variable source using a lightcurve": [[446, "time-variable-source-using-a-lightcurve"]], "TimeMapAxis": [[193, "timemapaxis"], [463, "timemapaxis"]], "Timing Analysis": [[370, "timing-analysis"]], "TimmerKonig_lightcurve_simulator": [[273, "timmerkonig-lightcurve-simulator"]], "Troubleshooting": [[396, "troubleshooting"], [555, "troubleshooting"]], "Tutorial overview": [[445, "tutorial-overview"], [470, "tutorial-overview"]], "Tutorials": [[381, "tutorials"], [475, "tutorials"]], "Tutorials Overview": [[393, "tutorials-overview"]], "Type validation": [[388, "type-validation"]], "Types of supported datasets": [[491, "types-of-supported-datasets"]], "Unification of flux estimators?": [[385, "unification-of-flux-estimators"]], "Unify calling interface for models": [[372, "unify-calling-interface-for-models"]], "Upsampling and downsampling non-spatial axes": [[508, "upsampling-and-downsampling-non-spatial-axes"]], "Use cases": [[389, "use-cases"]], "Use cases / scenarios": [[371, "use-cases-scenarios"]], "User guide": [[496, "user-guide"]], "User perspective": [[368, "user-perspective"]], "Using Anaconda / Miniconda": [[394, "using-anaconda-miniconda"]], "Using Factory Methods": [[463, "using-factory-methods"]], "Using Gammapy": [[397, "using-gammapy"]], "Using Gammapy IRFs": [[461, "using-gammapy-irfs"]], "Using Mamba": [[394, "using-mamba"]], "Using YAML configuration files": [[479, "using-yaml-configuration-files"]], "Using YAML configuration files for setting/writing the Data Reduction parameters": [[435, "using-yaml-configuration-files-for-setting-writing-the-data-reduction-parameters"]], "Using data stored into your computer": [[435, "using-data-stored-into-your-computer"]], "Using gammapy.astro.source": [[486, "using-gammapy-astro-source"]], "Using gammapy.catalog": [[490, "using-gammapy-catalog"]], "Using gammapy.data": [[492, "using-gammapy-data"]], "Using gammapy.datasets": [[491, "using-gammapy-datasets"], [494, "using-gammapy-datasets"]], "Using gammapy.estimators": [[493, "using-gammapy-estimators"]], "Using gammapy.irf": [[500, "using-gammapy-irf"]], "Using gammapy.makers": [[503, "using-gammapy-makers"]], "Using gammapy.maps": [[507, "using-gammapy-maps"]], "Using gammapy.modeling": [[552, "using-gammapy-modeling"]], "Using masks": [[459, "using-masks"]], "Using other package managers": [[394, "using-other-package-managers"]], "Using pip": [[394, "using-pip"]], "Using regions": [[504, "using-regions"]], "Using the reflected background estimator": [[504, "using-the-reflected-background-estimator"]], "Utility functions": [[559, "utility-functions"]], "ValleeSpiral": [[38, "valleespiral"]], "Variables": [[1, "variables"], [2, "variables"], [3, "variables"], [4, "variables"], [5, "variables"], [7, "variables"], [8, "variables"], [10, "variables"], [13, "variables"], [13, "id11"]], "Velocity distributions": [[485, "velocity-distributions"]], "Venv Environments": [[392, "venv-environments"]], "Version 0.1": [[399, "version-0-1"]], "Version 0.10": [[399, "version-0-10"]], "Version 0.11": [[399, "version-0-11"]], "Version 0.12": [[399, "version-0-12"]], "Version 0.13": [[399, "version-0-13"]], "Version 0.14": [[399, "version-0-14"]], "Version 0.15": [[399, "version-0-15"]], "Version 0.16": [[399, "version-0-16"]], "Version 0.17": [[399, "version-0-17"]], "Version 0.18": [[399, "version-0-18"]], "Version 0.19": [[399, "version-0-19"]], "Version 0.2": [[399, "version-0-2"]], "Version 0.20": [[399, "version-0-20"]], "Version 0.20.1": [[399, "version-0-20-1"]], "Version 0.3": [[399, "version-0-3"]], "Version 0.4": [[399, "version-0-4"]], "Version 0.5": [[399, "version-0-5"]], "Version 0.6": [[399, "version-0-6"]], "Version 0.7": [[399, "version-0-7"]], "Version 0.8": [[399, "version-0-8"]], "Version 0.9": [[399, "version-0-9"]], "Version 1.0": [[399, "version-1-0"]], "Version 1.0.1": [[399, "version-1-0-1"]], "Version 1.0.2": [[399, "version-1-0-2"]], "Version 1.1": [[399, "version-1-1"]], "Version 1.2": [[399, "version-1-2"]], "Version numbering": [[386, "version-numbering"]], "Virtual Environments": [[392, "virtual-environments"]], "Visualing a RegionNDMap": [[508, "visualing-a-regionndmap"]], "Visualization": [[560, "visualization"]], "Visualizing and Plotting": [[463, "visualizing-and-plotting"]], "WStat : Poisson data with background measurement": [[556, "wstat-poisson-data-with-background-measurement"]], "WStat counts statistic": [[557, "wstat-counts-statistic"]], "WStatCountsStatistic": [[274, "wstatcountsstatistic"]], "WcsGeom": [[194, "wcsgeom"]], "WcsMap": [[195, "wcsmap"]], "WcsNDMap": [[196, "wcsndmap"]], "What checks and conversions should I do for inputs?": [[361, "what-checks-and-conversions-should-i-do-for-inputs"]], "What is a PIG?": [[366, "what-is-a-pig"]], "What is this?": [[364, "what-is-this"]], "What next?": [[432, "what-next"], [434, "what-next"], [438, "what-next"], [444, "what-next"], [452, "what-next"], [481, "what-next"]], "What others have": [[371, "what-others-have"]], "What we have": [[369, "what-we-have"], [377, "what-we-have"], [385, "what-we-have"]], "What\u2019s new?": [[401, "what-s-new"], [402, "what-s-new"], [403, "what-s-new"], [404, "what-s-new"], [405, "what-s-new"], [406, "what-s-new"], [407, "what-s-new"], [408, "what-s-new"], [409, "what-s-new"], [410, "what-s-new"], [411, "what-s-new"], [412, "what-s-new"], [414, "what-s-new"], [415, "what-s-new"], [417, "what-s-new"], [418, "what-s-new"], [419, "what-s-new"], [420, "what-s-new"], [421, "what-s-new"], [422, "what-s-new"]], "What\u2019s next": [[479, "whats-next"]], "What\u2019s next?": [[435, "whats-next"]], "Where should I import from?": [[361, "where-should-i-import-from"]], "WobbleRegionsFinder": [[171, "wobbleregionsfinder"]], "Working with event lists": [[492, "working-with-event-lists"]], "Write your own CLI": [[555, "write-your-own-cli"]], "Writing Maps": [[463, "writing-maps"]], "Writing a PIG": [[366, "writing-a-pig"]], "Writing and reading a RegionNDMap to/from a FITS file": [[508, "writing-and-reading-a-regionndmap-to-from-a-fits-file"]], "Writing event lists and GTIs to file": [[492, "writing-event-lists-and-gtis-to-file"]], "YAML representation": [[511, "yaml-representation"], [512, "yaml-representation"], [513, "yaml-representation"], [514, "yaml-representation"], [515, "yaml-representation"], [516, "yaml-representation"], [517, "yaml-representation"], [518, "yaml-representation"], [519, "yaml-representation"], [521, "yaml-representation"], [522, "yaml-representation"], [523, "yaml-representation"], [524, "yaml-representation"], [525, "yaml-representation"], [526, "yaml-representation"], [527, "yaml-representation"], [528, "yaml-representation"], [529, "yaml-representation"], [530, "yaml-representation"], [531, "yaml-representation"], [532, "yaml-representation"], [533, "yaml-representation"], [534, "yaml-representation"], [535, "yaml-representation"], [536, "yaml-representation"], [537, "yaml-representation"], [538, "yaml-representation"], [539, "yaml-representation"], [540, "yaml-representation"], [542, "yaml-representation"], [543, "yaml-representation"], [544, "yaml-representation"], [545, "yaml-representation"], [546, "yaml-representation"], [547, "yaml-representation"], [548, "yaml-representation"], [549, "yaml-representation"], [550, "yaml-representation"]], "YusifovKucuk2004": [[39, "yusifovkucuk2004"]], "YusifovKucuk2004B": [[40, "yusifovkucuk2004b"]], "ZhaoProfile": [[27, "zhaoprofile"]], "absolute_time": [[342, "absolute-time"]], "add_colorbar": [[349, "add-colorbar"]], "add_observed_parameters": [[41, "add-observed-parameters"]], "add_pulsar_parameters": [[42, "add-pulsar-parameters"]], "add_pwn_parameters": [[43, "add-pwn-parameters"]], "add_snr_parameters": [[44, "add-snr-parameters"]], "analysis": [[11, "gammapy-analysis"]], "analysis - High level interface": [[0, "analysis-high-level-interface"]], "annotate_heatmap": [[350, "annotate-heatmap"]], "apply_edisp": [[106, "apply-edisp"], [110, "apply-edisp"]], "arbitrary type input and validation": [[388, "arbitrary-type-input-and-validation"]], "as a function of of true energy and offset angle (EDISP_2D)": [[499, "as-a-function-of-of-true-energy-and-offset-angle-gadf-edisp-2d"]], "as a function of reconstructed energy and detector coordinates (BKG_3D)": [[498, "as-a-function-of-reconstructed-energy-and-detector-coordinates-gadf-bkg-3d"]], "as a function of reconstructed energy and offset angle, radially symmetric (BKG_2D)": [[498, "as-a-function-of-reconstructed-energy-and-offset-angle-radially-symmetric-gadf-bkg-2d"]], "as a function of true energy (RMF)": [[499, "as-a-function-of-true-energy-gadf-ogip-rmf"]], "as a function of true energy and offset angle (AEFF_2D)": [[497, "as-a-function-of-true-energy-and-offset-angle-gadf-aeff-2d"]], "assert_quantity_allclose": [[336, "assert-quantity-allclose"]], "assert_skycoord_allclose": [[337, "assert-skycoord-allclose"]], "assert_time_allclose": [[338, "assert-time-allclose"]], "astro - Astrophysics": [[1, "astro-astrophysics"]], "cartesian": [[291, "cartesian"]], "cash": [[275, "cash"]], "cash_sum_cython": [[276, "cash-sum-cython"]], "catalog - Source catalogs": [[2, "catalog-source-catalogs"]], "check": [[11, "gammapy-check"]], "codemeta.json": [[387, "codemeta-json"]], "colormap_hess": [[351, "colormap-hess"]], "colormap_milagro": [[352, "colormap-milagro"]], "compound_region_to_regions": [[321, "compound-region-to-regions"]], "compute_chisq": [[277, "compute-chisq"]], "compute_flux_doubling": [[278, "compute-flux-doubling"]], "compute_fpp": [[279, "compute-fpp"]], "compute_fvar": [[280, "compute-fvar"]], "compute_lightcurve_doublingtime": [[128, "compute-lightcurve-doublingtime"]], "compute_lightcurve_fpp": [[129, "compute-lightcurve-fpp"]], "compute_lightcurve_fvar": [[130, "compute-lightcurve-fvar"]], "config": [[11, "gammapy-analysis-config"]], "containment_radius": [[197, "containment-radius"]], "containment_region": [[198, "containment-region"]], "create_cosmic_ray_spectral_model": [[263, "create-cosmic-ray-spectral-model"]], "create_crab_spectral_model": [[264, "create-crab-spectral-model"]], "create_fermi_isotropic_diffuse_model": [[265, "create-fermi-isotropic-diffuse-model"]], "create_map_dataset_from_observation": [[107, "create-map-dataset-from-observation"]], "create_map_dataset_geoms": [[108, "create-map-dataset-geoms"]], "cstat": [[281, "cstat"]], "data": [[388, "data"]], "data - DL3 data and observations": [[3, "data-dl3-data-and-observations"]], "datasets": [[11, "gammapy-download-datasets"]], "datasets - Reduced datasets": [[4, "datasets-reduced-datasets"]], "docs.gammapy.org": [[391, "docs-gammapy-org"]], "download": [[11, "gammapy-download"]], "draw": [[313, "draw"]], "earth_location_from_dict": [[300, "earth-location-from-dict"]], "estimate_exposure_reco_energy": [[131, "estimate-exposure-reco-energy"]], "estimators - High level estimators": [[5, "estimators-high-level-estimators"]], "f_cash_root_cython": [[282, "f-cash-root-cython"]], "find_peaks": [[132, "find-peaks"]], "find_peaks_in_flux_map": [[133, "find-peaks-in-flux-map"]], "fov_to_sky": [[292, "fov-to-sky"]], "galactic": [[293, "galactic"]], "gamLike": [[483, "gamlike"]], "gammapy": [[11, "gammapy"]], "gammapy.analysis Package": [[0, "module-gammapy.analysis"]], "gammapy.astro.darkmatter Package": [[1, "module-gammapy.astro.darkmatter"]], "gammapy.astro.population Package": [[1, "module-gammapy.astro.population"]], "gammapy.astro.source Package": [[1, "module-gammapy.astro.source"]], "gammapy.catalog Package": [[2, "module-gammapy.catalog"]], "gammapy.data Package": [[3, "module-gammapy.data"]], "gammapy.datasets Package": [[4, "module-gammapy.datasets"]], "gammapy.datasets.utils Module": [[4, "module-gammapy.datasets.utils"]], "gammapy.estimators Package": [[5, "module-gammapy.estimators"]], "gammapy.estimators.utils Module": [[5, "module-gammapy.estimators.utils"]], "gammapy.irf Package": [[7, "module-gammapy.irf"]], "gammapy.makers Package": [[8, "module-gammapy.makers"]], "gammapy.makers.utils Module": [[8, "module-gammapy.makers.utils"]], "gammapy.maps Package": [[9, "module-gammapy.maps"]], "gammapy.modeling Package": [[10, "module-gammapy.modeling"]], "gammapy.modeling.models Package": [[10, "module-gammapy.modeling.models"]], "gammapy.modeling.models.utils Module": [[10, "module-gammapy.modeling.models.utils"]], "gammapy.org": [[391, "gammapy-org"]], "gammapy.stats Package": [[12, "module-gammapy.stats"]], "gammapy.utils.cluster Module": [[13, "module-gammapy.utils.cluster"]], "gammapy.utils.coordinates Package": [[13, "module-gammapy.utils.coordinates"]], "gammapy.utils.fits Module": [[13, "module-gammapy.utils.fits"]], "gammapy.utils.integrate Module": [[13, "module-gammapy.utils.integrate"]], "gammapy.utils.interpolation Module": [[13, "module-gammapy.utils.interpolation"]], "gammapy.utils.parallel Module": [[13, "module-gammapy.utils.parallel"]], "gammapy.utils.random Package": [[13, "module-gammapy.utils.random"]], "gammapy.utils.regions Module": [[13, "module-gammapy.utils.regions"]], "gammapy.utils.scripts Module": [[13, "module-gammapy.utils.scripts"]], "gammapy.utils.table Module": [[13, "module-gammapy.utils.table"]], "gammapy.utils.testing Module": [[13, "module-gammapy.utils.testing"]], "gammapy.utils.time Module": [[13, "module-gammapy.utils.time"]], "gammapy.utils.units Module": [[13, "module-gammapy.utils.units"]], "gammapy.visualization Package": [[14, "module-gammapy.visualization"]], "get_combined_significance_maps": [[134, "get-combined-significance-maps"]], "get_images_paths": [[326, "get-images-paths"]], "get_irfs_features": [[91, "get-irfs-features"]], "get_random_state": [[314, "get-random-state"]], "get_rebinned_axis": [[135, "get-rebinned-axis"]], "get_wstat_gof_terms": [[283, "get-wstat-gof-terms"]], "get_wstat_mu_bkg": [[284, "get-wstat-mu-bkg"]], "hierarchical_clustering": [[288, "hierarchical-clustering"]], "hstack_columns": [[331, "hstack-columns"]], "info": [[11, "gammapy-info"]], "integrate_spectrum": [[266, "integrate-spectrum"]], "interpolate_profile": [[303, "interpolate-profile"]], "interpolation_scale": [[304, "interpolation-scale"]], "irf - Instrument response functions": [[7, "irf-instrument-response-functions"]], "load_irf_dict_from_file": [[157, "load-irf-dict-from-file"]], "logging": [[11, "gammapy-check-logging"]], "make_base_catalog_galactic": [[45, "make-base-catalog-galactic"]], "make_catalog_random_positions_cube": [[46, "make-catalog-random-positions-cube"]], "make_catalog_random_positions_sphere": [[47, "make-catalog-random-positions-sphere"]], "make_concentric_annulus_sky_regions": [[322, "make-concentric-annulus-sky-regions"]], "make_counts_rad_max": [[172, "make-counts-rad-max"]], "make_edisp_kernel_map": [[173, "make-edisp-kernel-map"]], "make_edisp_map": [[174, "make-edisp-map"]], "make_effective_livetime_map": [[175, "make-effective-livetime-map"]], "make_map_background_irf": [[176, "make-map-background-irf"]], "make_map_exposure_true_energy": [[177, "make-map-exposure-true-energy"]], "make_observation_time_map": [[178, "make-observation-time-map"]], "make_orthogonal_rectangle_sky_regions": [[323, "make-orthogonal-rectangle-sky-regions"]], "make_path": [[327, "make-path"]], "make_psf_map": [[179, "make-psf-map"]], "make_theta_squared_table": [[180, "make-theta-squared-table"]], "makers - Data reduction": [[8, "makers-data-reduction"]], "maps - Sky maps": [[9, "maps-sky-maps"]], "modeling - Models and fitting": [[10, "modeling-models-and-fitting"]], "motion_since_birth": [[294, "motion-since-birth"]], "mpl_plot_check": [[339, "mpl-plot-check"]], "multiprocessing_manager": [[310, "multiprocessing-manager"]], "norm_bounds_cython": [[285, "norm-bounds-cython"]], "normalize": [[315, "normalize"]], "notebooks": [[11, "gammapy-download-notebooks"]], "observatory_locations": [[92, "observatory-locations"]], "pdf": [[316, "pdf"]], "plot_contour_line": [[353, "plot-contour-line"]], "plot_distribution": [[354, "plot-distribution"]], "plot_heatmap": [[355, "plot-heatmap"]], "plot_map_rgb": [[356, "plot-map-rgb"]], "plot_npred_signal": [[357, "plot-npred-signal"]], "plot_spectrum_datasets_off_regions": [[358, "plot-spectrum-datasets-off-regions"]], "plot_theta_squared_table": [[359, "plot-theta-squared-table"]], "polar": [[295, "polar"]], "pydantic": [[388, "pydantic"]], "radial_distributions": [[48, "radial-distributions"]], "read_hermes_cube": [[267, "read-hermes-cube"], [269, "read-hermes-cube"]], "read_yaml": [[328, "read-yaml"]], "recursive_merge_dicts": [[329, "recursive-merge-dicts"]], "region_to_frame": [[324, "region-to-frame"]], "regions_to_compound_region": [[325, "regions-to-compound-region"]], "requires_data": [[340, "requires-data"]], "requires_dependency": [[341, "requires-dependency"]], "resample_energy_edges": [[136, "resample-energy-edges"]], "run": [[11, "gammapy-analysis-run"]], "run_multiprocessing": [[311, "run-multiprocessing"]], "sample_powerlaw": [[317, "sample-powerlaw"]], "sample_sphere": [[318, "sample-sphere"]], "sample_sphere_distance": [[319, "sample-sphere-distance"]], "sample_times": [[320, "sample-times"]], "scale_plot_flux": [[268, "scale-plot-flux"]], "scripts - Command line tools": [[11, "scripts-command-line-tools"]], "select_nested_models": [[270, "select-nested-models"]], "sky_to_fov": [[296, "sky-to-fov"]], "split_dataset": [[109, "split-dataset"], [111, "split-dataset"]], "standard_scaler": [[289, "standard-scaler"]], "standardise_unit": [[346, "standardise-unit"]], "stat_profile_ul_scipy": [[271, "stat-profile-ul-scipy"]], "stats - Statistics": [[12, "stats-statistics"]], "structure_function": [[286, "structure-function"]], "table_row_to_dict": [[332, "table-row-to-dict"]], "table_standardise_units_copy": [[333, "table-standardise-units-copy"]], "table_standardise_units_inplace": [[334, "table-standardise-units-inplace"]], "the base class": [[388, "the-base-class"]], "time_ref_from_dict": [[343, "time-ref-from-dict"]], "time_ref_to_dict": [[344, "time-ref-to-dict"]], "time_relative_to_ref": [[345, "time-relative-to-ref"]], "trapz_loglog": [[301, "trapz-loglog"]], "unit_from_fits_image_hdu": [[347, "unit-from-fits-image-hdu"]], "utils - Utilities": [[13, "utils-utilities"]], "velocity_distributions": [[49, "velocity-distributions"]], "velocity_glon_glat": [[297, "velocity-glon-glat"]], "visualization - Plotting features": [[14, "visualization-plotting-features"]], "write_yaml": [[330, "write-yaml"]], "wstat": [[287, "wstat"]]}, "docnames": ["api-reference/analysis", "api-reference/astro", "api-reference/catalog", "api-reference/data", "api-reference/datasets", "api-reference/estimators", "api-reference/index", "api-reference/irf", "api-reference/makers", "api-reference/maps", "api-reference/modeling", "api-reference/scripts", "api-reference/stats", "api-reference/utils", "api-reference/visualization", "api/gammapy.analysis.Analysis", "api/gammapy.analysis.AnalysisConfig", "api/gammapy.astro.darkmatter.BurkertProfile", "api/gammapy.astro.darkmatter.DMProfile", "api/gammapy.astro.darkmatter.DarkMatterAnnihilationSpectralModel", "api/gammapy.astro.darkmatter.DarkMatterDecaySpectralModel", "api/gammapy.astro.darkmatter.EinastoProfile", "api/gammapy.astro.darkmatter.IsothermalProfile", "api/gammapy.astro.darkmatter.JFactory", "api/gammapy.astro.darkmatter.MooreProfile", "api/gammapy.astro.darkmatter.NFWProfile", "api/gammapy.astro.darkmatter.PrimaryFlux", "api/gammapy.astro.darkmatter.ZhaoProfile", "api/gammapy.astro.population.CaseBattacharya1998", "api/gammapy.astro.population.Exponential", "api/gammapy.astro.population.FaucherKaspi2006", "api/gammapy.astro.population.FaucherKaspi2006VelocityBimodal", "api/gammapy.astro.population.FaucherKaspi2006VelocityMaxwellian", "api/gammapy.astro.population.FaucherSpiral", "api/gammapy.astro.population.LogSpiral", "api/gammapy.astro.population.Lorimer2006", "api/gammapy.astro.population.Paczynski1990", "api/gammapy.astro.population.Paczynski1990Velocity", "api/gammapy.astro.population.ValleeSpiral", "api/gammapy.astro.population.YusifovKucuk2004", "api/gammapy.astro.population.YusifovKucuk2004B", "api/gammapy.astro.population.add_observed_parameters", "api/gammapy.astro.population.add_pulsar_parameters", "api/gammapy.astro.population.add_pwn_parameters", "api/gammapy.astro.population.add_snr_parameters", "api/gammapy.astro.population.make_base_catalog_galactic", "api/gammapy.astro.population.make_catalog_random_positions_cube", "api/gammapy.astro.population.make_catalog_random_positions_sphere", "api/gammapy.astro.population.radial_distributions", "api/gammapy.astro.population.velocity_distributions", "api/gammapy.astro.source.PWN", "api/gammapy.astro.source.Pulsar", "api/gammapy.astro.source.SNR", "api/gammapy.astro.source.SNRTrueloveMcKee", "api/gammapy.astro.source.SimplePulsar", "api/gammapy.catalog.CATALOG_REGISTRY", "api/gammapy.catalog.SourceCatalog", "api/gammapy.catalog.SourceCatalog1LHAASO", "api/gammapy.catalog.SourceCatalog2FHL", "api/gammapy.catalog.SourceCatalog2HWC", "api/gammapy.catalog.SourceCatalog3FGL", "api/gammapy.catalog.SourceCatalog3FHL", "api/gammapy.catalog.SourceCatalog3HWC", "api/gammapy.catalog.SourceCatalog4FGL", "api/gammapy.catalog.SourceCatalogGammaCat", "api/gammapy.catalog.SourceCatalogHGPS", "api/gammapy.catalog.SourceCatalogLargeScaleHGPS", "api/gammapy.catalog.SourceCatalogObject", "api/gammapy.catalog.SourceCatalogObject1LHAASO", "api/gammapy.catalog.SourceCatalogObject2FHL", "api/gammapy.catalog.SourceCatalogObject2HWC", "api/gammapy.catalog.SourceCatalogObject3FGL", "api/gammapy.catalog.SourceCatalogObject3FHL", "api/gammapy.catalog.SourceCatalogObject3HWC", "api/gammapy.catalog.SourceCatalogObject4FGL", "api/gammapy.catalog.SourceCatalogObjectGammaCat", "api/gammapy.catalog.SourceCatalogObjectHGPS", "api/gammapy.catalog.SourceCatalogObjectHGPSComponent", "api/gammapy.data.DataStore", "api/gammapy.data.EventList", "api/gammapy.data.EventListMetaData", "api/gammapy.data.FixedPointingInfo", "api/gammapy.data.GTI", "api/gammapy.data.HDUIndexTable", "api/gammapy.data.Observation", "api/gammapy.data.ObservationFilter", "api/gammapy.data.ObservationTable", "api/gammapy.data.Observations", "api/gammapy.data.ObservationsEventsSampler", "api/gammapy.data.PointingInfo", "api/gammapy.data.PointingMode", "api/gammapy.data.get_irfs_features", "api/gammapy.data.observatory_locations", "api/gammapy.datasets.DATASET_REGISTRY", "api/gammapy.datasets.Dataset", "api/gammapy.datasets.Datasets", "api/gammapy.datasets.FluxPointsDataset", "api/gammapy.datasets.MapDataset", "api/gammapy.datasets.MapDatasetEventSampler", "api/gammapy.datasets.MapDatasetMetaData", "api/gammapy.datasets.MapDatasetOnOff", "api/gammapy.datasets.OGIPDatasetReader", "api/gammapy.datasets.OGIPDatasetWriter", "api/gammapy.datasets.ObservationEventSampler", "api/gammapy.datasets.SpectrumDataset", "api/gammapy.datasets.SpectrumDatasetOnOff", "api/gammapy.datasets.apply_edisp", "api/gammapy.datasets.create_map_dataset_from_observation", "api/gammapy.datasets.create_map_dataset_geoms", "api/gammapy.datasets.split_dataset", "api/gammapy.datasets.utils.apply_edisp", "api/gammapy.datasets.utils.split_dataset", "api/gammapy.estimators.ASmoothMapEstimator", "api/gammapy.estimators.ESTIMATOR_REGISTRY", "api/gammapy.estimators.EnergyDependentMorphologyEstimator", "api/gammapy.estimators.Estimator", "api/gammapy.estimators.ExcessMapEstimator", "api/gammapy.estimators.FluxMaps", "api/gammapy.estimators.FluxMetaData", "api/gammapy.estimators.FluxPoints", "api/gammapy.estimators.FluxPointsEstimator", "api/gammapy.estimators.FluxProfileEstimator", "api/gammapy.estimators.ImageProfile", "api/gammapy.estimators.ImageProfileEstimator", "api/gammapy.estimators.LightCurveEstimator", "api/gammapy.estimators.ParameterEstimator", "api/gammapy.estimators.SensitivityEstimator", "api/gammapy.estimators.TSMapEstimator", "api/gammapy.estimators.utils.compute_lightcurve_doublingtime", "api/gammapy.estimators.utils.compute_lightcurve_fpp", "api/gammapy.estimators.utils.compute_lightcurve_fvar", "api/gammapy.estimators.utils.estimate_exposure_reco_energy", "api/gammapy.estimators.utils.find_peaks", "api/gammapy.estimators.utils.find_peaks_in_flux_map", "api/gammapy.estimators.utils.get_combined_significance_maps", "api/gammapy.estimators.utils.get_rebinned_axis", "api/gammapy.estimators.utils.resample_energy_edges", "api/gammapy.irf.Background2D", "api/gammapy.irf.Background3D", "api/gammapy.irf.BackgroundIRF", "api/gammapy.irf.EDispKernel", "api/gammapy.irf.EDispKernelMap", "api/gammapy.irf.EDispMap", "api/gammapy.irf.EffectiveAreaTable2D", "api/gammapy.irf.EnergyDependentMultiGaussPSF", "api/gammapy.irf.EnergyDispersion2D", "api/gammapy.irf.FoVAlignment", "api/gammapy.irf.IRF", "api/gammapy.irf.IRFMap", "api/gammapy.irf.IRF_REGISTRY", "api/gammapy.irf.PSF3D", "api/gammapy.irf.PSFKernel", "api/gammapy.irf.PSFKing", "api/gammapy.irf.PSFMap", "api/gammapy.irf.ParametricPSF", "api/gammapy.irf.RadMax2D", "api/gammapy.irf.RecoPSFMap", "api/gammapy.irf.load_irf_dict_from_file", "api/gammapy.makers.AdaptiveRingBackgroundMaker", "api/gammapy.makers.DatasetsMaker", "api/gammapy.makers.FoVBackgroundMaker", "api/gammapy.makers.MAKER_REGISTRY", "api/gammapy.makers.Maker", "api/gammapy.makers.MapDatasetMaker", "api/gammapy.makers.PhaseBackgroundMaker", "api/gammapy.makers.ReflectedRegionsBackgroundMaker", "api/gammapy.makers.ReflectedRegionsFinder", "api/gammapy.makers.RegionsFinder", "api/gammapy.makers.RingBackgroundMaker", "api/gammapy.makers.SafeMaskMaker", "api/gammapy.makers.SpectrumDatasetMaker", "api/gammapy.makers.WobbleRegionsFinder", "api/gammapy.makers.utils.make_counts_rad_max", "api/gammapy.makers.utils.make_edisp_kernel_map", "api/gammapy.makers.utils.make_edisp_map", "api/gammapy.makers.utils.make_effective_livetime_map", "api/gammapy.makers.utils.make_map_background_irf", "api/gammapy.makers.utils.make_map_exposure_true_energy", "api/gammapy.makers.utils.make_observation_time_map", "api/gammapy.makers.utils.make_psf_map", "api/gammapy.makers.utils.make_theta_squared_table", "api/gammapy.maps.Geom", "api/gammapy.maps.HpxGeom", "api/gammapy.maps.HpxMap", "api/gammapy.maps.HpxNDMap", "api/gammapy.maps.LabelMapAxis", "api/gammapy.maps.Map", "api/gammapy.maps.MapAxes", "api/gammapy.maps.MapAxis", "api/gammapy.maps.MapCoord", "api/gammapy.maps.Maps", "api/gammapy.maps.RegionGeom", "api/gammapy.maps.RegionNDMap", "api/gammapy.maps.TimeMapAxis", "api/gammapy.maps.WcsGeom", "api/gammapy.maps.WcsMap", "api/gammapy.maps.WcsNDMap", "api/gammapy.maps.containment_radius", "api/gammapy.maps.containment_region", "api/gammapy.modeling.Covariance", "api/gammapy.modeling.Fit", "api/gammapy.modeling.Parameter", "api/gammapy.modeling.Parameters", "api/gammapy.modeling.PriorParameter", "api/gammapy.modeling.PriorParameters", "api/gammapy.modeling.models.BrokenPowerLawSpectralModel", "api/gammapy.modeling.models.CompoundSpectralModel", "api/gammapy.modeling.models.ConstantFluxSpatialModel", "api/gammapy.modeling.models.ConstantSpatialModel", "api/gammapy.modeling.models.ConstantSpectralModel", "api/gammapy.modeling.models.ConstantTemporalModel", "api/gammapy.modeling.models.DatasetModels", "api/gammapy.modeling.models.DiskSpatialModel", "api/gammapy.modeling.models.EBLAbsorptionNormSpectralModel", "api/gammapy.modeling.models.EBL_DATA_BUILTIN", "api/gammapy.modeling.models.ExpCutoffPowerLaw3FGLSpectralModel", "api/gammapy.modeling.models.ExpCutoffPowerLawNormSpectralModel", "api/gammapy.modeling.models.ExpCutoffPowerLawSpectralModel", "api/gammapy.modeling.models.ExpDecayTemporalModel", "api/gammapy.modeling.models.FoVBackgroundModel", "api/gammapy.modeling.models.GaussianSpatialModel", "api/gammapy.modeling.models.GaussianSpectralModel", "api/gammapy.modeling.models.GaussianTemporalModel", "api/gammapy.modeling.models.GeneralizedGaussianSpatialModel", "api/gammapy.modeling.models.GeneralizedGaussianTemporalModel", "api/gammapy.modeling.models.LightCurveTemplateTemporalModel", "api/gammapy.modeling.models.LinearTemporalModel", "api/gammapy.modeling.models.LogParabolaNormSpectralModel", "api/gammapy.modeling.models.LogParabolaSpectralModel", "api/gammapy.modeling.models.MODEL_REGISTRY", "api/gammapy.modeling.models.MeyerCrabSpectralModel", "api/gammapy.modeling.models.Model", "api/gammapy.modeling.models.ModelBase", "api/gammapy.modeling.models.Models", "api/gammapy.modeling.models.NaimaSpectralModel", "api/gammapy.modeling.models.PiecewiseNormSpatialModel", "api/gammapy.modeling.models.PiecewiseNormSpectralModel", "api/gammapy.modeling.models.PointSpatialModel", "api/gammapy.modeling.models.PowerLaw2SpectralModel", "api/gammapy.modeling.models.PowerLawNormSpectralModel", "api/gammapy.modeling.models.PowerLawSpectralModel", "api/gammapy.modeling.models.PowerLawTemporalModel", "api/gammapy.modeling.models.SPATIAL_MODEL_REGISTRY", "api/gammapy.modeling.models.SPECTRAL_MODEL_REGISTRY", "api/gammapy.modeling.models.ScaleSpectralModel", "api/gammapy.modeling.models.Shell2SpatialModel", "api/gammapy.modeling.models.ShellSpatialModel", "api/gammapy.modeling.models.SineTemporalModel", "api/gammapy.modeling.models.SkyModel", "api/gammapy.modeling.models.SmoothBrokenPowerLawSpectralModel", "api/gammapy.modeling.models.SpatialModel", "api/gammapy.modeling.models.SpectralModel", "api/gammapy.modeling.models.SuperExpCutoffPowerLaw3FGLSpectralModel", "api/gammapy.modeling.models.SuperExpCutoffPowerLaw4FGLDR3SpectralModel", "api/gammapy.modeling.models.SuperExpCutoffPowerLaw4FGLSpectralModel", "api/gammapy.modeling.models.TEMPORAL_MODEL_REGISTRY", "api/gammapy.modeling.models.TemplateNDSpatialModel", "api/gammapy.modeling.models.TemplateNDSpectralModel", "api/gammapy.modeling.models.TemplateNPredModel", "api/gammapy.modeling.models.TemplatePhaseCurveTemporalModel", "api/gammapy.modeling.models.TemplateSpatialModel", "api/gammapy.modeling.models.TemplateSpectralModel", "api/gammapy.modeling.models.TemporalModel", "api/gammapy.modeling.models.create_cosmic_ray_spectral_model", "api/gammapy.modeling.models.create_crab_spectral_model", "api/gammapy.modeling.models.create_fermi_isotropic_diffuse_model", "api/gammapy.modeling.models.integrate_spectrum", "api/gammapy.modeling.models.read_hermes_cube", "api/gammapy.modeling.models.scale_plot_flux", "api/gammapy.modeling.models.utils.read_hermes_cube", "api/gammapy.modeling.select_nested_models", "api/gammapy.modeling.stat_profile_ul_scipy", "api/gammapy.stats.CashCountsStatistic", "api/gammapy.stats.TimmerKonig_lightcurve_simulator", "api/gammapy.stats.WStatCountsStatistic", "api/gammapy.stats.cash", "api/gammapy.stats.cash_sum_cython", "api/gammapy.stats.compute_chisq", "api/gammapy.stats.compute_flux_doubling", "api/gammapy.stats.compute_fpp", "api/gammapy.stats.compute_fvar", "api/gammapy.stats.cstat", "api/gammapy.stats.f_cash_root_cython", "api/gammapy.stats.get_wstat_gof_terms", "api/gammapy.stats.get_wstat_mu_bkg", "api/gammapy.stats.norm_bounds_cython", "api/gammapy.stats.structure_function", "api/gammapy.stats.wstat", "api/gammapy.utils.cluster.hierarchical_clustering", "api/gammapy.utils.cluster.standard_scaler", "api/gammapy.utils.coordinates.D_SUN_TO_GALACTIC_CENTER", "api/gammapy.utils.coordinates.cartesian", "api/gammapy.utils.coordinates.fov_to_sky", "api/gammapy.utils.coordinates.galactic", "api/gammapy.utils.coordinates.motion_since_birth", "api/gammapy.utils.coordinates.polar", "api/gammapy.utils.coordinates.sky_to_fov", "api/gammapy.utils.coordinates.velocity_glon_glat", "api/gammapy.utils.fits.HDULocation", "api/gammapy.utils.fits.LazyFitsData", "api/gammapy.utils.fits.earth_location_from_dict", "api/gammapy.utils.integrate.trapz_loglog", "api/gammapy.utils.interpolation.ScaledRegularGridInterpolator", "api/gammapy.utils.interpolation.interpolate_profile", "api/gammapy.utils.interpolation.interpolation_scale", "api/gammapy.utils.parallel.BACKEND_DEFAULT", "api/gammapy.utils.parallel.METHOD_DEFAULT", "api/gammapy.utils.parallel.METHOD_KWARGS_DEFAULT", "api/gammapy.utils.parallel.N_JOBS_DEFAULT", "api/gammapy.utils.parallel.POOL_KWARGS_DEFAULT", "api/gammapy.utils.parallel.multiprocessing_manager", "api/gammapy.utils.parallel.run_multiprocessing", "api/gammapy.utils.random.InverseCDFSampler", "api/gammapy.utils.random.draw", "api/gammapy.utils.random.get_random_state", "api/gammapy.utils.random.normalize", "api/gammapy.utils.random.pdf", "api/gammapy.utils.random.sample_powerlaw", "api/gammapy.utils.random.sample_sphere", "api/gammapy.utils.random.sample_sphere_distance", "api/gammapy.utils.random.sample_times", "api/gammapy.utils.regions.compound_region_to_regions", "api/gammapy.utils.regions.make_concentric_annulus_sky_regions", "api/gammapy.utils.regions.make_orthogonal_rectangle_sky_regions", "api/gammapy.utils.regions.region_to_frame", "api/gammapy.utils.regions.regions_to_compound_region", "api/gammapy.utils.scripts.get_images_paths", "api/gammapy.utils.scripts.make_path", "api/gammapy.utils.scripts.read_yaml", "api/gammapy.utils.scripts.recursive_merge_dicts", "api/gammapy.utils.scripts.write_yaml", "api/gammapy.utils.table.hstack_columns", "api/gammapy.utils.table.table_row_to_dict", "api/gammapy.utils.table.table_standardise_units_copy", "api/gammapy.utils.table.table_standardise_units_inplace", "api/gammapy.utils.testing.Checker", "api/gammapy.utils.testing.assert_quantity_allclose", "api/gammapy.utils.testing.assert_skycoord_allclose", "api/gammapy.utils.testing.assert_time_allclose", "api/gammapy.utils.testing.mpl_plot_check", "api/gammapy.utils.testing.requires_data", "api/gammapy.utils.testing.requires_dependency", "api/gammapy.utils.time.absolute_time", "api/gammapy.utils.time.time_ref_from_dict", "api/gammapy.utils.time.time_ref_to_dict", "api/gammapy.utils.time.time_relative_to_ref", "api/gammapy.utils.units.standardise_unit", "api/gammapy.utils.units.unit_from_fits_image_hdu", "api/gammapy.visualization.MapPanelPlotter", "api/gammapy.visualization.add_colorbar", "api/gammapy.visualization.annotate_heatmap", "api/gammapy.visualization.colormap_hess", "api/gammapy.visualization.colormap_milagro", "api/gammapy.visualization.plot_contour_line", "api/gammapy.visualization.plot_distribution", "api/gammapy.visualization.plot_heatmap", "api/gammapy.visualization.plot_map_rgb", "api/gammapy.visualization.plot_npred_signal", "api/gammapy.visualization.plot_spectrum_datasets_off_regions", "api/gammapy.visualization.plot_theta_squared_table", "development/dependencies", "development/dev_howto", "development/doc_howto", "development/index", "development/intro", "development/pigs/index", "development/pigs/pig-001", "development/pigs/pig-002", "development/pigs/pig-003", "development/pigs/pig-004", "development/pigs/pig-005", "development/pigs/pig-006", "development/pigs/pig-007", "development/pigs/pig-008", "development/pigs/pig-009", "development/pigs/pig-010", "development/pigs/pig-011", "development/pigs/pig-012", "development/pigs/pig-013", "development/pigs/pig-014", "development/pigs/pig-016", "development/pigs/pig-018", "development/pigs/pig-019", "development/pigs/pig-020", "development/pigs/pig-021", "development/pigs/pig-022", "development/pigs/pig-023", "development/pigs/pig-024", "development/pigs/pig-025", "development/pigs/pig-026", "development/release", "development/setup", "getting-started/environments", "getting-started/index", "getting-started/install", "getting-started/quickstart", "getting-started/troubleshooting", "getting-started/usage", "index", "release-notes/index", "release-notes/v0.1", "release-notes/v0.10", "release-notes/v0.11", "release-notes/v0.12", "release-notes/v0.13", "release-notes/v0.14", "release-notes/v0.15", "release-notes/v0.16", "release-notes/v0.17", "release-notes/v0.18", "release-notes/v0.18.1", "release-notes/v0.18.2", "release-notes/v0.19", "release-notes/v0.2", "release-notes/v0.20", "release-notes/v0.20.1", "release-notes/v0.3", "release-notes/v0.4", "release-notes/v0.5", "release-notes/v0.6", "release-notes/v0.7", "release-notes/v0.8", "release-notes/v0.9", "release-notes/v1.0", "release-notes/v1.0.1", "release-notes/v1.0.2", "release-notes/v1.1", "release-notes/v1.2", "release-notes/v1.3", "sg_execution_times", "tutorials/analysis-1d/cta_sensitivity", "tutorials/analysis-1d/extended_source_spectral_analysis", "tutorials/analysis-1d/sed_fitting", "tutorials/analysis-1d/sg_execution_times", "tutorials/analysis-1d/spectral_analysis", "tutorials/analysis-1d/spectral_analysis_hli", "tutorials/analysis-1d/spectral_analysis_rad_max", "tutorials/analysis-1d/spectrum_simulation", "tutorials/analysis-2d/detect", "tutorials/analysis-2d/modeling_2D", "tutorials/analysis-2d/ring_background", "tutorials/analysis-2d/sg_execution_times", "tutorials/analysis-3d/analysis_3d", "tutorials/analysis-3d/analysis_mwl", "tutorials/analysis-3d/cta_data_analysis", "tutorials/analysis-3d/energy_dependent_estimation", "tutorials/analysis-3d/event_sampling", "tutorials/analysis-3d/event_sampling_nrg_depend_models", "tutorials/analysis-3d/flux_profiles", "tutorials/analysis-3d/sg_execution_times", "tutorials/analysis-3d/simulate_3d", "tutorials/analysis-time/Variability_estimation", "tutorials/analysis-time/light_curve", "tutorials/analysis-time/light_curve_flare", "tutorials/analysis-time/light_curve_simulation", "tutorials/analysis-time/pulsar_analysis", "tutorials/analysis-time/sg_execution_times", "tutorials/api/astro_dark_matter", "tutorials/api/catalog", "tutorials/api/datasets", "tutorials/api/fitting", "tutorials/api/irfs", "tutorials/api/makers", "tutorials/api/maps", "tutorials/api/mask_maps", "tutorials/api/model_management", "tutorials/api/models", "tutorials/api/observation_clustering", "tutorials/api/priors", "tutorials/api/sg_execution_times", "tutorials/data/cta", "tutorials/data/fermi_lat", "tutorials/data/hawc", "tutorials/data/hess", "tutorials/data/sg_execution_times", "tutorials/index", "tutorials/scripts/sg_execution_times", "tutorials/scripts/survey_map", "tutorials/sg_execution_times", "tutorials/starting/analysis_1", "tutorials/starting/analysis_2", "tutorials/starting/overview", "tutorials/starting/sg_execution_times", "user-guide/astro/darkmatter/index", "user-guide/astro/index", "user-guide/astro/population/index", "user-guide/astro/source/index", "user-guide/astro/source/pulsar", "user-guide/astro/source/pwn", "user-guide/astro/source/snr", "user-guide/catalog", "user-guide/datasets/index", "user-guide/dl3", "user-guide/estimators", "user-guide/hli", "user-guide/howto", "user-guide/index", "user-guide/irf/aeff", "user-guide/irf/bkg", "user-guide/irf/edisp", "user-guide/irf/index", "user-guide/irf/psf", "user-guide/makers/fov", "user-guide/makers/index", "user-guide/makers/reflected", "user-guide/makers/ring", "user-guide/maps/hpxmap", "user-guide/maps/index", "user-guide/maps/regionmap", "user-guide/model-gallery/index", "user-guide/model-gallery/sg_execution_times", "user-guide/model-gallery/spatial/plot_constant", "user-guide/model-gallery/spatial/plot_disk", "user-guide/model-gallery/spatial/plot_gauss", "user-guide/model-gallery/spatial/plot_gen_gauss", "user-guide/model-gallery/spatial/plot_piecewise_norm_spatial", "user-guide/model-gallery/spatial/plot_point", "user-guide/model-gallery/spatial/plot_shell", "user-guide/model-gallery/spatial/plot_shell2", "user-guide/model-gallery/spatial/plot_template", "user-guide/model-gallery/spatial/sg_execution_times", "user-guide/model-gallery/spectral/plot_absorbed", "user-guide/model-gallery/spectral/plot_broken_powerlaw", "user-guide/model-gallery/spectral/plot_compound", "user-guide/model-gallery/spectral/plot_constant_spectral", "user-guide/model-gallery/spectral/plot_exp_cutoff_powerlaw", "user-guide/model-gallery/spectral/plot_exp_cutoff_powerlaw_3fgl", "user-guide/model-gallery/spectral/plot_exp_cutoff_powerlaw_norm_spectral", "user-guide/model-gallery/spectral/plot_gauss_spectral", "user-guide/model-gallery/spectral/plot_logparabola", "user-guide/model-gallery/spectral/plot_logparabola_norm_spectral", "user-guide/model-gallery/spectral/plot_naima", "user-guide/model-gallery/spectral/plot_piecewise_norm_spectral", "user-guide/model-gallery/spectral/plot_powerlaw", "user-guide/model-gallery/spectral/plot_powerlaw2", "user-guide/model-gallery/spectral/plot_powerlaw_norm_spectral", "user-guide/model-gallery/spectral/plot_smooth_broken_powerlaw", "user-guide/model-gallery/spectral/plot_super_exp_cutoff_powerlaw_3fgl", "user-guide/model-gallery/spectral/plot_super_exp_cutoff_powerlaw_4fgl", "user-guide/model-gallery/spectral/plot_super_exp_cutoff_powerlaw_4fgl_dr1", "user-guide/model-gallery/spectral/plot_template_spectral", "user-guide/model-gallery/spectral/sg_execution_times", "user-guide/model-gallery/temporal/plot_constant_temporal", "user-guide/model-gallery/temporal/plot_expdecay_temporal", "user-guide/model-gallery/temporal/plot_gaussian_temporal", "user-guide/model-gallery/temporal/plot_generalized_gaussian_temporal", "user-guide/model-gallery/temporal/plot_linear_temporal", "user-guide/model-gallery/temporal/plot_powerlaw_temporal", "user-guide/model-gallery/temporal/plot_sine_temporal", "user-guide/model-gallery/temporal/plot_template_phase_temporal", "user-guide/model-gallery/temporal/plot_template_temporal", "user-guide/model-gallery/temporal/sg_execution_times", "user-guide/modeling", "user-guide/package", "user-guide/references", "user-guide/scripts/index", "user-guide/stats/fit_statistics", "user-guide/stats/index", "user-guide/stats/wstat_derivation", "user-guide/utils", "user-guide/visualization/index"], "envversion": {"sphinx": 61, "sphinx.domains.c": 3, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 9, "sphinx.domains.index": 1, "sphinx.domains.javascript": 3, "sphinx.domains.math": 2, "sphinx.domains.python": 4, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "sphinx.ext.intersphinx": 1, "sphinx.ext.todo": 2, "sphinx.ext.viewcode": 1}, "filenames": ["api-reference/analysis.rst", "api-reference/astro.rst", "api-reference/catalog.rst", "api-reference/data.rst", "api-reference/datasets.rst", "api-reference/estimators.rst", "api-reference/index.rst", "api-reference/irf.rst", "api-reference/makers.rst", "api-reference/maps.rst", "api-reference/modeling.rst", "api-reference/scripts.rst", "api-reference/stats.rst", "api-reference/utils.rst", "api-reference/visualization.rst", "api/gammapy.analysis.Analysis.rst", "api/gammapy.analysis.AnalysisConfig.rst", "api/gammapy.astro.darkmatter.BurkertProfile.rst", "api/gammapy.astro.darkmatter.DMProfile.rst", "api/gammapy.astro.darkmatter.DarkMatterAnnihilationSpectralModel.rst", "api/gammapy.astro.darkmatter.DarkMatterDecaySpectralModel.rst", "api/gammapy.astro.darkmatter.EinastoProfile.rst", "api/gammapy.astro.darkmatter.IsothermalProfile.rst", "api/gammapy.astro.darkmatter.JFactory.rst", "api/gammapy.astro.darkmatter.MooreProfile.rst", "api/gammapy.astro.darkmatter.NFWProfile.rst", "api/gammapy.astro.darkmatter.PrimaryFlux.rst", "api/gammapy.astro.darkmatter.ZhaoProfile.rst", "api/gammapy.astro.population.CaseBattacharya1998.rst", "api/gammapy.astro.population.Exponential.rst", "api/gammapy.astro.population.FaucherKaspi2006.rst", "api/gammapy.astro.population.FaucherKaspi2006VelocityBimodal.rst", "api/gammapy.astro.population.FaucherKaspi2006VelocityMaxwellian.rst", "api/gammapy.astro.population.FaucherSpiral.rst", "api/gammapy.astro.population.LogSpiral.rst", "api/gammapy.astro.population.Lorimer2006.rst", "api/gammapy.astro.population.Paczynski1990.rst", "api/gammapy.astro.population.Paczynski1990Velocity.rst", "api/gammapy.astro.population.ValleeSpiral.rst", "api/gammapy.astro.population.YusifovKucuk2004.rst", "api/gammapy.astro.population.YusifovKucuk2004B.rst", "api/gammapy.astro.population.add_observed_parameters.rst", "api/gammapy.astro.population.add_pulsar_parameters.rst", "api/gammapy.astro.population.add_pwn_parameters.rst", "api/gammapy.astro.population.add_snr_parameters.rst", "api/gammapy.astro.population.make_base_catalog_galactic.rst", "api/gammapy.astro.population.make_catalog_random_positions_cube.rst", "api/gammapy.astro.population.make_catalog_random_positions_sphere.rst", "api/gammapy.astro.population.radial_distributions.rst", "api/gammapy.astro.population.velocity_distributions.rst", "api/gammapy.astro.source.PWN.rst", "api/gammapy.astro.source.Pulsar.rst", "api/gammapy.astro.source.SNR.rst", "api/gammapy.astro.source.SNRTrueloveMcKee.rst", "api/gammapy.astro.source.SimplePulsar.rst", "api/gammapy.catalog.CATALOG_REGISTRY.rst", "api/gammapy.catalog.SourceCatalog.rst", "api/gammapy.catalog.SourceCatalog1LHAASO.rst", "api/gammapy.catalog.SourceCatalog2FHL.rst", "api/gammapy.catalog.SourceCatalog2HWC.rst", "api/gammapy.catalog.SourceCatalog3FGL.rst", "api/gammapy.catalog.SourceCatalog3FHL.rst", "api/gammapy.catalog.SourceCatalog3HWC.rst", "api/gammapy.catalog.SourceCatalog4FGL.rst", "api/gammapy.catalog.SourceCatalogGammaCat.rst", "api/gammapy.catalog.SourceCatalogHGPS.rst", "api/gammapy.catalog.SourceCatalogLargeScaleHGPS.rst", "api/gammapy.catalog.SourceCatalogObject.rst", "api/gammapy.catalog.SourceCatalogObject1LHAASO.rst", "api/gammapy.catalog.SourceCatalogObject2FHL.rst", "api/gammapy.catalog.SourceCatalogObject2HWC.rst", "api/gammapy.catalog.SourceCatalogObject3FGL.rst", "api/gammapy.catalog.SourceCatalogObject3FHL.rst", "api/gammapy.catalog.SourceCatalogObject3HWC.rst", "api/gammapy.catalog.SourceCatalogObject4FGL.rst", "api/gammapy.catalog.SourceCatalogObjectGammaCat.rst", "api/gammapy.catalog.SourceCatalogObjectHGPS.rst", "api/gammapy.catalog.SourceCatalogObjectHGPSComponent.rst", "api/gammapy.data.DataStore.rst", "api/gammapy.data.EventList.rst", "api/gammapy.data.EventListMetaData.rst", "api/gammapy.data.FixedPointingInfo.rst", "api/gammapy.data.GTI.rst", "api/gammapy.data.HDUIndexTable.rst", "api/gammapy.data.Observation.rst", "api/gammapy.data.ObservationFilter.rst", "api/gammapy.data.ObservationTable.rst", "api/gammapy.data.Observations.rst", "api/gammapy.data.ObservationsEventsSampler.rst", "api/gammapy.data.PointingInfo.rst", "api/gammapy.data.PointingMode.rst", "api/gammapy.data.get_irfs_features.rst", "api/gammapy.data.observatory_locations.rst", "api/gammapy.datasets.DATASET_REGISTRY.rst", "api/gammapy.datasets.Dataset.rst", "api/gammapy.datasets.Datasets.rst", "api/gammapy.datasets.FluxPointsDataset.rst", "api/gammapy.datasets.MapDataset.rst", "api/gammapy.datasets.MapDatasetEventSampler.rst", "api/gammapy.datasets.MapDatasetMetaData.rst", "api/gammapy.datasets.MapDatasetOnOff.rst", "api/gammapy.datasets.OGIPDatasetReader.rst", "api/gammapy.datasets.OGIPDatasetWriter.rst", "api/gammapy.datasets.ObservationEventSampler.rst", "api/gammapy.datasets.SpectrumDataset.rst", "api/gammapy.datasets.SpectrumDatasetOnOff.rst", "api/gammapy.datasets.apply_edisp.rst", "api/gammapy.datasets.create_map_dataset_from_observation.rst", "api/gammapy.datasets.create_map_dataset_geoms.rst", "api/gammapy.datasets.split_dataset.rst", "api/gammapy.datasets.utils.apply_edisp.rst", "api/gammapy.datasets.utils.split_dataset.rst", "api/gammapy.estimators.ASmoothMapEstimator.rst", "api/gammapy.estimators.ESTIMATOR_REGISTRY.rst", "api/gammapy.estimators.EnergyDependentMorphologyEstimator.rst", "api/gammapy.estimators.Estimator.rst", "api/gammapy.estimators.ExcessMapEstimator.rst", "api/gammapy.estimators.FluxMaps.rst", "api/gammapy.estimators.FluxMetaData.rst", "api/gammapy.estimators.FluxPoints.rst", "api/gammapy.estimators.FluxPointsEstimator.rst", "api/gammapy.estimators.FluxProfileEstimator.rst", "api/gammapy.estimators.ImageProfile.rst", "api/gammapy.estimators.ImageProfileEstimator.rst", "api/gammapy.estimators.LightCurveEstimator.rst", "api/gammapy.estimators.ParameterEstimator.rst", "api/gammapy.estimators.SensitivityEstimator.rst", "api/gammapy.estimators.TSMapEstimator.rst", "api/gammapy.estimators.utils.compute_lightcurve_doublingtime.rst", "api/gammapy.estimators.utils.compute_lightcurve_fpp.rst", "api/gammapy.estimators.utils.compute_lightcurve_fvar.rst", "api/gammapy.estimators.utils.estimate_exposure_reco_energy.rst", "api/gammapy.estimators.utils.find_peaks.rst", "api/gammapy.estimators.utils.find_peaks_in_flux_map.rst", "api/gammapy.estimators.utils.get_combined_significance_maps.rst", "api/gammapy.estimators.utils.get_rebinned_axis.rst", "api/gammapy.estimators.utils.resample_energy_edges.rst", "api/gammapy.irf.Background2D.rst", "api/gammapy.irf.Background3D.rst", "api/gammapy.irf.BackgroundIRF.rst", "api/gammapy.irf.EDispKernel.rst", "api/gammapy.irf.EDispKernelMap.rst", "api/gammapy.irf.EDispMap.rst", "api/gammapy.irf.EffectiveAreaTable2D.rst", "api/gammapy.irf.EnergyDependentMultiGaussPSF.rst", "api/gammapy.irf.EnergyDispersion2D.rst", "api/gammapy.irf.FoVAlignment.rst", "api/gammapy.irf.IRF.rst", "api/gammapy.irf.IRFMap.rst", "api/gammapy.irf.IRF_REGISTRY.rst", "api/gammapy.irf.PSF3D.rst", "api/gammapy.irf.PSFKernel.rst", "api/gammapy.irf.PSFKing.rst", "api/gammapy.irf.PSFMap.rst", "api/gammapy.irf.ParametricPSF.rst", "api/gammapy.irf.RadMax2D.rst", "api/gammapy.irf.RecoPSFMap.rst", "api/gammapy.irf.load_irf_dict_from_file.rst", "api/gammapy.makers.AdaptiveRingBackgroundMaker.rst", "api/gammapy.makers.DatasetsMaker.rst", "api/gammapy.makers.FoVBackgroundMaker.rst", "api/gammapy.makers.MAKER_REGISTRY.rst", "api/gammapy.makers.Maker.rst", "api/gammapy.makers.MapDatasetMaker.rst", "api/gammapy.makers.PhaseBackgroundMaker.rst", "api/gammapy.makers.ReflectedRegionsBackgroundMaker.rst", "api/gammapy.makers.ReflectedRegionsFinder.rst", "api/gammapy.makers.RegionsFinder.rst", "api/gammapy.makers.RingBackgroundMaker.rst", "api/gammapy.makers.SafeMaskMaker.rst", "api/gammapy.makers.SpectrumDatasetMaker.rst", "api/gammapy.makers.WobbleRegionsFinder.rst", "api/gammapy.makers.utils.make_counts_rad_max.rst", "api/gammapy.makers.utils.make_edisp_kernel_map.rst", "api/gammapy.makers.utils.make_edisp_map.rst", "api/gammapy.makers.utils.make_effective_livetime_map.rst", "api/gammapy.makers.utils.make_map_background_irf.rst", "api/gammapy.makers.utils.make_map_exposure_true_energy.rst", "api/gammapy.makers.utils.make_observation_time_map.rst", "api/gammapy.makers.utils.make_psf_map.rst", "api/gammapy.makers.utils.make_theta_squared_table.rst", "api/gammapy.maps.Geom.rst", "api/gammapy.maps.HpxGeom.rst", "api/gammapy.maps.HpxMap.rst", "api/gammapy.maps.HpxNDMap.rst", "api/gammapy.maps.LabelMapAxis.rst", "api/gammapy.maps.Map.rst", "api/gammapy.maps.MapAxes.rst", "api/gammapy.maps.MapAxis.rst", "api/gammapy.maps.MapCoord.rst", "api/gammapy.maps.Maps.rst", "api/gammapy.maps.RegionGeom.rst", "api/gammapy.maps.RegionNDMap.rst", "api/gammapy.maps.TimeMapAxis.rst", "api/gammapy.maps.WcsGeom.rst", "api/gammapy.maps.WcsMap.rst", "api/gammapy.maps.WcsNDMap.rst", "api/gammapy.maps.containment_radius.rst", "api/gammapy.maps.containment_region.rst", "api/gammapy.modeling.Covariance.rst", "api/gammapy.modeling.Fit.rst", "api/gammapy.modeling.Parameter.rst", "api/gammapy.modeling.Parameters.rst", "api/gammapy.modeling.PriorParameter.rst", "api/gammapy.modeling.PriorParameters.rst", "api/gammapy.modeling.models.BrokenPowerLawSpectralModel.rst", "api/gammapy.modeling.models.CompoundSpectralModel.rst", "api/gammapy.modeling.models.ConstantFluxSpatialModel.rst", "api/gammapy.modeling.models.ConstantSpatialModel.rst", "api/gammapy.modeling.models.ConstantSpectralModel.rst", "api/gammapy.modeling.models.ConstantTemporalModel.rst", "api/gammapy.modeling.models.DatasetModels.rst", "api/gammapy.modeling.models.DiskSpatialModel.rst", "api/gammapy.modeling.models.EBLAbsorptionNormSpectralModel.rst", "api/gammapy.modeling.models.EBL_DATA_BUILTIN.rst", "api/gammapy.modeling.models.ExpCutoffPowerLaw3FGLSpectralModel.rst", "api/gammapy.modeling.models.ExpCutoffPowerLawNormSpectralModel.rst", "api/gammapy.modeling.models.ExpCutoffPowerLawSpectralModel.rst", "api/gammapy.modeling.models.ExpDecayTemporalModel.rst", "api/gammapy.modeling.models.FoVBackgroundModel.rst", "api/gammapy.modeling.models.GaussianSpatialModel.rst", "api/gammapy.modeling.models.GaussianSpectralModel.rst", "api/gammapy.modeling.models.GaussianTemporalModel.rst", "api/gammapy.modeling.models.GeneralizedGaussianSpatialModel.rst", "api/gammapy.modeling.models.GeneralizedGaussianTemporalModel.rst", "api/gammapy.modeling.models.LightCurveTemplateTemporalModel.rst", "api/gammapy.modeling.models.LinearTemporalModel.rst", "api/gammapy.modeling.models.LogParabolaNormSpectralModel.rst", "api/gammapy.modeling.models.LogParabolaSpectralModel.rst", "api/gammapy.modeling.models.MODEL_REGISTRY.rst", "api/gammapy.modeling.models.MeyerCrabSpectralModel.rst", "api/gammapy.modeling.models.Model.rst", "api/gammapy.modeling.models.ModelBase.rst", "api/gammapy.modeling.models.Models.rst", "api/gammapy.modeling.models.NaimaSpectralModel.rst", "api/gammapy.modeling.models.PiecewiseNormSpatialModel.rst", "api/gammapy.modeling.models.PiecewiseNormSpectralModel.rst", "api/gammapy.modeling.models.PointSpatialModel.rst", "api/gammapy.modeling.models.PowerLaw2SpectralModel.rst", "api/gammapy.modeling.models.PowerLawNormSpectralModel.rst", "api/gammapy.modeling.models.PowerLawSpectralModel.rst", "api/gammapy.modeling.models.PowerLawTemporalModel.rst", "api/gammapy.modeling.models.SPATIAL_MODEL_REGISTRY.rst", "api/gammapy.modeling.models.SPECTRAL_MODEL_REGISTRY.rst", "api/gammapy.modeling.models.ScaleSpectralModel.rst", "api/gammapy.modeling.models.Shell2SpatialModel.rst", "api/gammapy.modeling.models.ShellSpatialModel.rst", "api/gammapy.modeling.models.SineTemporalModel.rst", "api/gammapy.modeling.models.SkyModel.rst", "api/gammapy.modeling.models.SmoothBrokenPowerLawSpectralModel.rst", "api/gammapy.modeling.models.SpatialModel.rst", "api/gammapy.modeling.models.SpectralModel.rst", "api/gammapy.modeling.models.SuperExpCutoffPowerLaw3FGLSpectralModel.rst", "api/gammapy.modeling.models.SuperExpCutoffPowerLaw4FGLDR3SpectralModel.rst", "api/gammapy.modeling.models.SuperExpCutoffPowerLaw4FGLSpectralModel.rst", "api/gammapy.modeling.models.TEMPORAL_MODEL_REGISTRY.rst", "api/gammapy.modeling.models.TemplateNDSpatialModel.rst", "api/gammapy.modeling.models.TemplateNDSpectralModel.rst", "api/gammapy.modeling.models.TemplateNPredModel.rst", "api/gammapy.modeling.models.TemplatePhaseCurveTemporalModel.rst", "api/gammapy.modeling.models.TemplateSpatialModel.rst", "api/gammapy.modeling.models.TemplateSpectralModel.rst", "api/gammapy.modeling.models.TemporalModel.rst", "api/gammapy.modeling.models.create_cosmic_ray_spectral_model.rst", "api/gammapy.modeling.models.create_crab_spectral_model.rst", "api/gammapy.modeling.models.create_fermi_isotropic_diffuse_model.rst", "api/gammapy.modeling.models.integrate_spectrum.rst", "api/gammapy.modeling.models.read_hermes_cube.rst", "api/gammapy.modeling.models.scale_plot_flux.rst", "api/gammapy.modeling.models.utils.read_hermes_cube.rst", "api/gammapy.modeling.select_nested_models.rst", "api/gammapy.modeling.stat_profile_ul_scipy.rst", "api/gammapy.stats.CashCountsStatistic.rst", "api/gammapy.stats.TimmerKonig_lightcurve_simulator.rst", "api/gammapy.stats.WStatCountsStatistic.rst", "api/gammapy.stats.cash.rst", "api/gammapy.stats.cash_sum_cython.rst", "api/gammapy.stats.compute_chisq.rst", "api/gammapy.stats.compute_flux_doubling.rst", "api/gammapy.stats.compute_fpp.rst", "api/gammapy.stats.compute_fvar.rst", "api/gammapy.stats.cstat.rst", "api/gammapy.stats.f_cash_root_cython.rst", "api/gammapy.stats.get_wstat_gof_terms.rst", "api/gammapy.stats.get_wstat_mu_bkg.rst", "api/gammapy.stats.norm_bounds_cython.rst", "api/gammapy.stats.structure_function.rst", "api/gammapy.stats.wstat.rst", "api/gammapy.utils.cluster.hierarchical_clustering.rst", "api/gammapy.utils.cluster.standard_scaler.rst", "api/gammapy.utils.coordinates.D_SUN_TO_GALACTIC_CENTER.rst", "api/gammapy.utils.coordinates.cartesian.rst", "api/gammapy.utils.coordinates.fov_to_sky.rst", "api/gammapy.utils.coordinates.galactic.rst", "api/gammapy.utils.coordinates.motion_since_birth.rst", "api/gammapy.utils.coordinates.polar.rst", "api/gammapy.utils.coordinates.sky_to_fov.rst", "api/gammapy.utils.coordinates.velocity_glon_glat.rst", "api/gammapy.utils.fits.HDULocation.rst", "api/gammapy.utils.fits.LazyFitsData.rst", "api/gammapy.utils.fits.earth_location_from_dict.rst", "api/gammapy.utils.integrate.trapz_loglog.rst", "api/gammapy.utils.interpolation.ScaledRegularGridInterpolator.rst", "api/gammapy.utils.interpolation.interpolate_profile.rst", "api/gammapy.utils.interpolation.interpolation_scale.rst", "api/gammapy.utils.parallel.BACKEND_DEFAULT.rst", "api/gammapy.utils.parallel.METHOD_DEFAULT.rst", "api/gammapy.utils.parallel.METHOD_KWARGS_DEFAULT.rst", "api/gammapy.utils.parallel.N_JOBS_DEFAULT.rst", "api/gammapy.utils.parallel.POOL_KWARGS_DEFAULT.rst", "api/gammapy.utils.parallel.multiprocessing_manager.rst", "api/gammapy.utils.parallel.run_multiprocessing.rst", "api/gammapy.utils.random.InverseCDFSampler.rst", "api/gammapy.utils.random.draw.rst", "api/gammapy.utils.random.get_random_state.rst", "api/gammapy.utils.random.normalize.rst", "api/gammapy.utils.random.pdf.rst", "api/gammapy.utils.random.sample_powerlaw.rst", "api/gammapy.utils.random.sample_sphere.rst", "api/gammapy.utils.random.sample_sphere_distance.rst", "api/gammapy.utils.random.sample_times.rst", "api/gammapy.utils.regions.compound_region_to_regions.rst", "api/gammapy.utils.regions.make_concentric_annulus_sky_regions.rst", "api/gammapy.utils.regions.make_orthogonal_rectangle_sky_regions.rst", "api/gammapy.utils.regions.region_to_frame.rst", "api/gammapy.utils.regions.regions_to_compound_region.rst", "api/gammapy.utils.scripts.get_images_paths.rst", "api/gammapy.utils.scripts.make_path.rst", "api/gammapy.utils.scripts.read_yaml.rst", "api/gammapy.utils.scripts.recursive_merge_dicts.rst", "api/gammapy.utils.scripts.write_yaml.rst", "api/gammapy.utils.table.hstack_columns.rst", "api/gammapy.utils.table.table_row_to_dict.rst", "api/gammapy.utils.table.table_standardise_units_copy.rst", "api/gammapy.utils.table.table_standardise_units_inplace.rst", "api/gammapy.utils.testing.Checker.rst", "api/gammapy.utils.testing.assert_quantity_allclose.rst", "api/gammapy.utils.testing.assert_skycoord_allclose.rst", "api/gammapy.utils.testing.assert_time_allclose.rst", "api/gammapy.utils.testing.mpl_plot_check.rst", "api/gammapy.utils.testing.requires_data.rst", "api/gammapy.utils.testing.requires_dependency.rst", "api/gammapy.utils.time.absolute_time.rst", "api/gammapy.utils.time.time_ref_from_dict.rst", "api/gammapy.utils.time.time_ref_to_dict.rst", "api/gammapy.utils.time.time_relative_to_ref.rst", "api/gammapy.utils.units.standardise_unit.rst", "api/gammapy.utils.units.unit_from_fits_image_hdu.rst", "api/gammapy.visualization.MapPanelPlotter.rst", "api/gammapy.visualization.add_colorbar.rst", "api/gammapy.visualization.annotate_heatmap.rst", "api/gammapy.visualization.colormap_hess.rst", "api/gammapy.visualization.colormap_milagro.rst", "api/gammapy.visualization.plot_contour_line.rst", "api/gammapy.visualization.plot_distribution.rst", "api/gammapy.visualization.plot_heatmap.rst", "api/gammapy.visualization.plot_map_rgb.rst", "api/gammapy.visualization.plot_npred_signal.rst", "api/gammapy.visualization.plot_spectrum_datasets_off_regions.rst", "api/gammapy.visualization.plot_theta_squared_table.rst", "development/dependencies.rst", "development/dev_howto.rst", "development/doc_howto.rst", "development/index.rst", "development/intro.rst", "development/pigs/index.rst", "development/pigs/pig-001.rst", "development/pigs/pig-002.rst", "development/pigs/pig-003.rst", "development/pigs/pig-004.rst", "development/pigs/pig-005.rst", "development/pigs/pig-006.rst", "development/pigs/pig-007.rst", "development/pigs/pig-008.rst", "development/pigs/pig-009.rst", "development/pigs/pig-010.rst", "development/pigs/pig-011.rst", "development/pigs/pig-012.rst", "development/pigs/pig-013.rst", "development/pigs/pig-014.rst", "development/pigs/pig-016.rst", "development/pigs/pig-018.rst", "development/pigs/pig-019.rst", "development/pigs/pig-020.rst", "development/pigs/pig-021.rst", "development/pigs/pig-022.rst", "development/pigs/pig-023.rst", "development/pigs/pig-024.rst", "development/pigs/pig-025.rst", "development/pigs/pig-026.rst", "development/release.rst", "development/setup.rst", "getting-started/environments.rst", "getting-started/index.rst", "getting-started/install.rst", "getting-started/quickstart.rst", "getting-started/troubleshooting.rst", "getting-started/usage.rst", "index.rst", "release-notes/index.rst", "release-notes/v0.1.rst", "release-notes/v0.10.rst", "release-notes/v0.11.rst", "release-notes/v0.12.rst", "release-notes/v0.13.rst", "release-notes/v0.14.rst", "release-notes/v0.15.rst", "release-notes/v0.16.rst", "release-notes/v0.17.rst", "release-notes/v0.18.rst", "release-notes/v0.18.1.rst", "release-notes/v0.18.2.rst", "release-notes/v0.19.rst", "release-notes/v0.2.rst", "release-notes/v0.20.rst", "release-notes/v0.20.1.rst", "release-notes/v0.3.rst", "release-notes/v0.4.rst", "release-notes/v0.5.rst", "release-notes/v0.6.rst", "release-notes/v0.7.rst", "release-notes/v0.8.rst", "release-notes/v0.9.rst", "release-notes/v1.0.rst", "release-notes/v1.0.1.rst", "release-notes/v1.0.2.rst", "release-notes/v1.1.rst", "release-notes/v1.2.rst", "release-notes/v1.3.rst", "sg_execution_times.rst", "tutorials/analysis-1d/cta_sensitivity.rst", "tutorials/analysis-1d/extended_source_spectral_analysis.rst", "tutorials/analysis-1d/sed_fitting.rst", "tutorials/analysis-1d/sg_execution_times.rst", "tutorials/analysis-1d/spectral_analysis.rst", "tutorials/analysis-1d/spectral_analysis_hli.rst", "tutorials/analysis-1d/spectral_analysis_rad_max.rst", "tutorials/analysis-1d/spectrum_simulation.rst", "tutorials/analysis-2d/detect.rst", "tutorials/analysis-2d/modeling_2D.rst", "tutorials/analysis-2d/ring_background.rst", "tutorials/analysis-2d/sg_execution_times.rst", "tutorials/analysis-3d/analysis_3d.rst", "tutorials/analysis-3d/analysis_mwl.rst", "tutorials/analysis-3d/cta_data_analysis.rst", "tutorials/analysis-3d/energy_dependent_estimation.rst", "tutorials/analysis-3d/event_sampling.rst", "tutorials/analysis-3d/event_sampling_nrg_depend_models.rst", "tutorials/analysis-3d/flux_profiles.rst", "tutorials/analysis-3d/sg_execution_times.rst", "tutorials/analysis-3d/simulate_3d.rst", "tutorials/analysis-time/Variability_estimation.rst", "tutorials/analysis-time/light_curve.rst", "tutorials/analysis-time/light_curve_flare.rst", "tutorials/analysis-time/light_curve_simulation.rst", "tutorials/analysis-time/pulsar_analysis.rst", "tutorials/analysis-time/sg_execution_times.rst", "tutorials/api/astro_dark_matter.rst", "tutorials/api/catalog.rst", "tutorials/api/datasets.rst", "tutorials/api/fitting.rst", "tutorials/api/irfs.rst", "tutorials/api/makers.rst", "tutorials/api/maps.rst", "tutorials/api/mask_maps.rst", "tutorials/api/model_management.rst", "tutorials/api/models.rst", "tutorials/api/observation_clustering.rst", "tutorials/api/priors.rst", "tutorials/api/sg_execution_times.rst", "tutorials/data/cta.rst", "tutorials/data/fermi_lat.rst", "tutorials/data/hawc.rst", "tutorials/data/hess.rst", "tutorials/data/sg_execution_times.rst", "tutorials/index.rst", "tutorials/scripts/sg_execution_times.rst", "tutorials/scripts/survey_map.rst", "tutorials/sg_execution_times.rst", "tutorials/starting/analysis_1.rst", "tutorials/starting/analysis_2.rst", "tutorials/starting/overview.rst", "tutorials/starting/sg_execution_times.rst", "user-guide/astro/darkmatter/index.rst", "user-guide/astro/index.rst", "user-guide/astro/population/index.rst", "user-guide/astro/source/index.rst", "user-guide/astro/source/pulsar.rst", "user-guide/astro/source/pwn.rst", "user-guide/astro/source/snr.rst", "user-guide/catalog.rst", "user-guide/datasets/index.rst", "user-guide/dl3.rst", "user-guide/estimators.rst", "user-guide/hli.rst", "user-guide/howto.rst", "user-guide/index.rst", "user-guide/irf/aeff.rst", "user-guide/irf/bkg.rst", "user-guide/irf/edisp.rst", "user-guide/irf/index.rst", "user-guide/irf/psf.rst", "user-guide/makers/fov.rst", "user-guide/makers/index.rst", "user-guide/makers/reflected.rst", "user-guide/makers/ring.rst", "user-guide/maps/hpxmap.rst", "user-guide/maps/index.rst", "user-guide/maps/regionmap.rst", "user-guide/model-gallery/index.rst", "user-guide/model-gallery/sg_execution_times.rst", "user-guide/model-gallery/spatial/plot_constant.rst", "user-guide/model-gallery/spatial/plot_disk.rst", "user-guide/model-gallery/spatial/plot_gauss.rst", "user-guide/model-gallery/spatial/plot_gen_gauss.rst", "user-guide/model-gallery/spatial/plot_piecewise_norm_spatial.rst", "user-guide/model-gallery/spatial/plot_point.rst", "user-guide/model-gallery/spatial/plot_shell.rst", "user-guide/model-gallery/spatial/plot_shell2.rst", "user-guide/model-gallery/spatial/plot_template.rst", "user-guide/model-gallery/spatial/sg_execution_times.rst", "user-guide/model-gallery/spectral/plot_absorbed.rst", "user-guide/model-gallery/spectral/plot_broken_powerlaw.rst", "user-guide/model-gallery/spectral/plot_compound.rst", "user-guide/model-gallery/spectral/plot_constant_spectral.rst", "user-guide/model-gallery/spectral/plot_exp_cutoff_powerlaw.rst", "user-guide/model-gallery/spectral/plot_exp_cutoff_powerlaw_3fgl.rst", "user-guide/model-gallery/spectral/plot_exp_cutoff_powerlaw_norm_spectral.rst", "user-guide/model-gallery/spectral/plot_gauss_spectral.rst", "user-guide/model-gallery/spectral/plot_logparabola.rst", "user-guide/model-gallery/spectral/plot_logparabola_norm_spectral.rst", "user-guide/model-gallery/spectral/plot_naima.rst", "user-guide/model-gallery/spectral/plot_piecewise_norm_spectral.rst", "user-guide/model-gallery/spectral/plot_powerlaw.rst", "user-guide/model-gallery/spectral/plot_powerlaw2.rst", "user-guide/model-gallery/spectral/plot_powerlaw_norm_spectral.rst", "user-guide/model-gallery/spectral/plot_smooth_broken_powerlaw.rst", "user-guide/model-gallery/spectral/plot_super_exp_cutoff_powerlaw_3fgl.rst", "user-guide/model-gallery/spectral/plot_super_exp_cutoff_powerlaw_4fgl.rst", "user-guide/model-gallery/spectral/plot_super_exp_cutoff_powerlaw_4fgl_dr1.rst", "user-guide/model-gallery/spectral/plot_template_spectral.rst", "user-guide/model-gallery/spectral/sg_execution_times.rst", "user-guide/model-gallery/temporal/plot_constant_temporal.rst", "user-guide/model-gallery/temporal/plot_expdecay_temporal.rst", "user-guide/model-gallery/temporal/plot_gaussian_temporal.rst", "user-guide/model-gallery/temporal/plot_generalized_gaussian_temporal.rst", "user-guide/model-gallery/temporal/plot_linear_temporal.rst", "user-guide/model-gallery/temporal/plot_powerlaw_temporal.rst", "user-guide/model-gallery/temporal/plot_sine_temporal.rst", "user-guide/model-gallery/temporal/plot_template_phase_temporal.rst", "user-guide/model-gallery/temporal/plot_template_temporal.rst", "user-guide/model-gallery/temporal/sg_execution_times.rst", "user-guide/modeling.rst", "user-guide/package.rst", "user-guide/references.rst", "user-guide/scripts/index.rst", "user-guide/stats/fit_statistics.rst", "user-guide/stats/index.rst", "user-guide/stats/wstat_derivation.rst", "user-guide/utils.rst", "user-guide/visualization/index.rst"], "indexentries": {"--dependencies": [[11, "cmdoption-gammapy-info-dependencies", false]], "--envvar": [[11, "cmdoption-gammapy-info-envvar", false]], "--filename": [[11, "cmdoption-gammapy-analysis-config-filename", false], [11, "cmdoption-gammapy-analysis-run-filename", false]], "--ignore-warnings": [[11, "cmdoption-gammapy-ignore-warnings", false]], "--log-level": [[11, "cmdoption-gammapy-log-level", false]], "--no-dependencies": [[11, "cmdoption-gammapy-info-dependencies", false]], "--no-envvar": [[11, "cmdoption-gammapy-info-envvar", false]], "--no-system": [[11, "cmdoption-gammapy-info-system", false]], "--no-version": [[11, "cmdoption-gammapy-info-version", false]], "--out": [[11, "cmdoption-gammapy-analysis-run-out", false], [11, "cmdoption-gammapy-download-datasets-out", false], [11, "cmdoption-gammapy-download-notebooks-out", false]], "--overwrite": [[11, "cmdoption-gammapy-analysis-config-overwrite", false], [11, "cmdoption-gammapy-analysis-run-overwrite", false]], "--release": [[11, "cmdoption-gammapy-download-datasets-release", false], [11, "cmdoption-gammapy-download-notebooks-release", false]], "--system": [[11, "cmdoption-gammapy-info-system", false]], "--version": [[11, "cmdoption-gammapy-info-version", false], [11, "cmdoption-gammapy-version", false]], "1d analysis": [[554, "term-1D-Analysis", true]], "3d analysis": [[554, "term-3D-Analysis", true]], "__call__() (gammapy.astro.darkmatter.burkertprofile method)": [[17, "gammapy.astro.darkmatter.BurkertProfile.__call__", false]], "__call__() (gammapy.astro.darkmatter.darkmatterannihilationspectralmodel method)": [[19, "gammapy.astro.darkmatter.DarkMatterAnnihilationSpectralModel.__call__", false]], "__call__() (gammapy.astro.darkmatter.darkmatterdecayspectralmodel method)": [[20, "gammapy.astro.darkmatter.DarkMatterDecaySpectralModel.__call__", false]], "__call__() (gammapy.astro.darkmatter.dmprofile method)": [[18, "gammapy.astro.darkmatter.DMProfile.__call__", false]], "__call__() (gammapy.astro.darkmatter.einastoprofile method)": [[21, "gammapy.astro.darkmatter.EinastoProfile.__call__", false]], "__call__() (gammapy.astro.darkmatter.isothermalprofile method)": [[22, "gammapy.astro.darkmatter.IsothermalProfile.__call__", false]], "__call__() (gammapy.astro.darkmatter.mooreprofile method)": [[24, "gammapy.astro.darkmatter.MooreProfile.__call__", false]], "__call__() (gammapy.astro.darkmatter.nfwprofile method)": [[25, "gammapy.astro.darkmatter.NFWProfile.__call__", false]], "__call__() (gammapy.astro.darkmatter.primaryflux method)": [[26, "gammapy.astro.darkmatter.PrimaryFlux.__call__", false]], "__call__() (gammapy.astro.darkmatter.zhaoprofile method)": [[27, "gammapy.astro.darkmatter.ZhaoProfile.__call__", false]], "__call__() (gammapy.astro.population.casebattacharya1998 method)": [[28, "gammapy.astro.population.CaseBattacharya1998.__call__", false]], "__call__() (gammapy.astro.population.exponential method)": [[29, "gammapy.astro.population.Exponential.__call__", false]], "__call__() (gammapy.astro.population.faucherkaspi2006 method)": [[30, "gammapy.astro.population.FaucherKaspi2006.__call__", false]], "__call__() (gammapy.astro.population.faucherkaspi2006velocitybimodal method)": [[31, "gammapy.astro.population.FaucherKaspi2006VelocityBimodal.__call__", false]], "__call__() (gammapy.astro.population.faucherkaspi2006velocitymaxwellian method)": [[32, "gammapy.astro.population.FaucherKaspi2006VelocityMaxwellian.__call__", false]], "__call__() (gammapy.astro.population.faucherspiral method)": [[33, "gammapy.astro.population.FaucherSpiral.__call__", false]], "__call__() (gammapy.astro.population.lorimer2006 method)": [[35, "gammapy.astro.population.Lorimer2006.__call__", false]], "__call__() (gammapy.astro.population.paczynski1990 method)": [[36, "gammapy.astro.population.Paczynski1990.__call__", false]], "__call__() (gammapy.astro.population.paczynski1990velocity method)": [[37, "gammapy.astro.population.Paczynski1990Velocity.__call__", false]], "__call__() (gammapy.astro.population.yusifovkucuk2004 method)": [[39, "gammapy.astro.population.YusifovKucuk2004.__call__", false]], "__call__() (gammapy.astro.population.yusifovkucuk2004b method)": [[40, "gammapy.astro.population.YusifovKucuk2004B.__call__", false]], "__call__() (gammapy.modeling.models.brokenpowerlawspectralmodel method)": [[205, "gammapy.modeling.models.BrokenPowerLawSpectralModel.__call__", false]], "__call__() (gammapy.modeling.models.compoundspectralmodel method)": [[206, "gammapy.modeling.models.CompoundSpectralModel.__call__", false]], "__call__() (gammapy.modeling.models.constantfluxspatialmodel method)": [[207, "gammapy.modeling.models.ConstantFluxSpatialModel.__call__", false]], "__call__() (gammapy.modeling.models.constantspatialmodel method)": [[208, "gammapy.modeling.models.ConstantSpatialModel.__call__", false]], "__call__() (gammapy.modeling.models.constantspectralmodel method)": [[209, "gammapy.modeling.models.ConstantSpectralModel.__call__", false]], "__call__() (gammapy.modeling.models.constanttemporalmodel method)": [[210, "gammapy.modeling.models.ConstantTemporalModel.__call__", false]], "__call__() (gammapy.modeling.models.diskspatialmodel method)": [[212, "gammapy.modeling.models.DiskSpatialModel.__call__", false]], "__call__() (gammapy.modeling.models.eblabsorptionnormspectralmodel method)": [[213, "gammapy.modeling.models.EBLAbsorptionNormSpectralModel.__call__", false]], "__call__() (gammapy.modeling.models.expcutoffpowerlaw3fglspectralmodel method)": [[215, "gammapy.modeling.models.ExpCutoffPowerLaw3FGLSpectralModel.__call__", false]], "__call__() (gammapy.modeling.models.expcutoffpowerlawnormspectralmodel method)": [[216, "gammapy.modeling.models.ExpCutoffPowerLawNormSpectralModel.__call__", false]], "__call__() (gammapy.modeling.models.expcutoffpowerlawspectralmodel method)": [[217, "gammapy.modeling.models.ExpCutoffPowerLawSpectralModel.__call__", false]], "__call__() (gammapy.modeling.models.expdecaytemporalmodel method)": [[218, "gammapy.modeling.models.ExpDecayTemporalModel.__call__", false]], "__call__() (gammapy.modeling.models.gaussianspatialmodel method)": [[220, "gammapy.modeling.models.GaussianSpatialModel.__call__", false]], "__call__() (gammapy.modeling.models.gaussianspectralmodel method)": [[221, "gammapy.modeling.models.GaussianSpectralModel.__call__", false]], "__call__() (gammapy.modeling.models.gaussiantemporalmodel method)": [[222, "gammapy.modeling.models.GaussianTemporalModel.__call__", false]], "__call__() (gammapy.modeling.models.generalizedgaussianspatialmodel method)": [[223, "gammapy.modeling.models.GeneralizedGaussianSpatialModel.__call__", false]], "__call__() (gammapy.modeling.models.generalizedgaussiantemporalmodel method)": [[224, "gammapy.modeling.models.GeneralizedGaussianTemporalModel.__call__", false]], "__call__() (gammapy.modeling.models.lightcurvetemplatetemporalmodel method)": [[225, "gammapy.modeling.models.LightCurveTemplateTemporalModel.__call__", false]], "__call__() (gammapy.modeling.models.lineartemporalmodel method)": [[226, "gammapy.modeling.models.LinearTemporalModel.__call__", false]], "__call__() (gammapy.modeling.models.logparabolanormspectralmodel method)": [[227, "gammapy.modeling.models.LogParabolaNormSpectralModel.__call__", false]], "__call__() (gammapy.modeling.models.logparabolaspectralmodel method)": [[228, "gammapy.modeling.models.LogParabolaSpectralModel.__call__", false]], "__call__() (gammapy.modeling.models.meyercrabspectralmodel method)": [[230, "gammapy.modeling.models.MeyerCrabSpectralModel.__call__", false]], "__call__() (gammapy.modeling.models.naimaspectralmodel method)": [[234, "gammapy.modeling.models.NaimaSpectralModel.__call__", false]], "__call__() (gammapy.modeling.models.piecewisenormspatialmodel method)": [[235, "gammapy.modeling.models.PiecewiseNormSpatialModel.__call__", false]], "__call__() (gammapy.modeling.models.piecewisenormspectralmodel method)": [[236, "gammapy.modeling.models.PiecewiseNormSpectralModel.__call__", false]], "__call__() (gammapy.modeling.models.pointspatialmodel method)": [[237, "gammapy.modeling.models.PointSpatialModel.__call__", false]], "__call__() (gammapy.modeling.models.powerlaw2spectralmodel method)": [[238, "gammapy.modeling.models.PowerLaw2SpectralModel.__call__", false]], "__call__() (gammapy.modeling.models.powerlawnormspectralmodel method)": [[239, "gammapy.modeling.models.PowerLawNormSpectralModel.__call__", false]], "__call__() (gammapy.modeling.models.powerlawspectralmodel method)": [[240, "gammapy.modeling.models.PowerLawSpectralModel.__call__", false]], "__call__() (gammapy.modeling.models.powerlawtemporalmodel method)": [[241, "gammapy.modeling.models.PowerLawTemporalModel.__call__", false]], "__call__() (gammapy.modeling.models.scalespectralmodel method)": [[244, "gammapy.modeling.models.ScaleSpectralModel.__call__", false]], "__call__() (gammapy.modeling.models.shell2spatialmodel method)": [[245, "gammapy.modeling.models.Shell2SpatialModel.__call__", false]], "__call__() (gammapy.modeling.models.shellspatialmodel method)": [[246, "gammapy.modeling.models.ShellSpatialModel.__call__", false]], "__call__() (gammapy.modeling.models.sinetemporalmodel method)": [[247, "gammapy.modeling.models.SineTemporalModel.__call__", false]], "__call__() (gammapy.modeling.models.skymodel method)": [[248, "gammapy.modeling.models.SkyModel.__call__", false]], "__call__() (gammapy.modeling.models.smoothbrokenpowerlawspectralmodel method)": [[249, "gammapy.modeling.models.SmoothBrokenPowerLawSpectralModel.__call__", false]], "__call__() (gammapy.modeling.models.spatialmodel method)": [[250, "gammapy.modeling.models.SpatialModel.__call__", false]], "__call__() (gammapy.modeling.models.spectralmodel method)": [[251, "gammapy.modeling.models.SpectralModel.__call__", false]], "__call__() (gammapy.modeling.models.superexpcutoffpowerlaw3fglspectralmodel method)": [[252, "gammapy.modeling.models.SuperExpCutoffPowerLaw3FGLSpectralModel.__call__", false]], "__call__() (gammapy.modeling.models.superexpcutoffpowerlaw4fgldr3spectralmodel method)": [[253, "gammapy.modeling.models.SuperExpCutoffPowerLaw4FGLDR3SpectralModel.__call__", false]], "__call__() (gammapy.modeling.models.superexpcutoffpowerlaw4fglspectralmodel method)": [[254, "gammapy.modeling.models.SuperExpCutoffPowerLaw4FGLSpectralModel.__call__", false]], "__call__() (gammapy.modeling.models.templatendspatialmodel method)": [[256, "gammapy.modeling.models.TemplateNDSpatialModel.__call__", false]], "__call__() (gammapy.modeling.models.templatendspectralmodel method)": [[257, "gammapy.modeling.models.TemplateNDSpectralModel.__call__", false]], "__call__() (gammapy.modeling.models.templatephasecurvetemporalmodel method)": [[259, "gammapy.modeling.models.TemplatePhaseCurveTemporalModel.__call__", false]], "__call__() (gammapy.modeling.models.templatespatialmodel method)": [[260, "gammapy.modeling.models.TemplateSpatialModel.__call__", false]], "__call__() (gammapy.modeling.models.templatespectralmodel method)": [[261, "gammapy.modeling.models.TemplateSpectralModel.__call__", false]], "__call__() (gammapy.modeling.models.temporalmodel method)": [[262, "gammapy.modeling.models.TemporalModel.__call__", false]], "__call__() (gammapy.utils.interpolation.scaledregulargridinterpolator method)": [[302, "gammapy.utils.interpolation.ScaledRegularGridInterpolator.__call__", false]], "a (gammapy.astro.population.yusifovkucuk2004 attribute)": [[39, "gammapy.astro.population.YusifovKucuk2004.a", false]], "a (gammapy.astro.population.yusifovkucuk2004b attribute)": [[40, "gammapy.astro.population.YusifovKucuk2004B.a", false]], "absolute_time() (in module gammapy.utils.time)": [[342, "gammapy.utils.time.absolute_time", false]], "adaptiveringbackgroundmaker (class in gammapy.makers)": [[158, "gammapy.makers.AdaptiveRingBackgroundMaker", false]], "add_colorbar() (in module gammapy.visualization)": [[349, "gammapy.visualization.add_colorbar", false]], "add_column() (gammapy.data.hduindextable method)": [[83, "gammapy.data.HDUIndexTable.add_column", false]], "add_column() (gammapy.data.observationtable method)": [[86, "gammapy.data.ObservationTable.add_column", false]], "add_columns() (gammapy.data.hduindextable method)": [[83, "gammapy.data.HDUIndexTable.add_columns", false]], "add_columns() (gammapy.data.observationtable method)": [[86, "gammapy.data.ObservationTable.add_columns", false]], "add_index() (gammapy.data.hduindextable method)": [[83, "gammapy.data.HDUIndexTable.add_index", false]], "add_index() (gammapy.data.observationtable method)": [[86, "gammapy.data.ObservationTable.add_index", false]], "add_observed_parameters() (in module gammapy.astro.population)": [[41, "gammapy.astro.population.add_observed_parameters", false]], "add_pulsar_parameters() (in module gammapy.astro.population)": [[42, "gammapy.astro.population.add_pulsar_parameters", false]], "add_pwn_parameters() (in module gammapy.astro.population)": [[43, "gammapy.astro.population.add_pwn_parameters", false]], "add_row() (gammapy.data.hduindextable method)": [[83, "gammapy.data.HDUIndexTable.add_row", false]], "add_row() (gammapy.data.observationtable method)": [[86, "gammapy.data.ObservationTable.add_row", false]], "add_snr_parameters() (in module gammapy.astro.population)": [[44, "gammapy.astro.population.add_snr_parameters", false]], "aeff": [[554, "term-Aeff", true]], "aeff (gammapy.data.observation attribute)": [[84, "gammapy.data.Observation.aeff", false]], "all_quantities() (gammapy.estimators.fluxmaps static method)": [[117, "gammapy.estimators.FluxMaps.all_quantities", false]], "all_quantities() (gammapy.estimators.fluxpoints static method)": [[119, "gammapy.estimators.FluxPoints.all_quantities", false]], "allowed_channels (gammapy.astro.darkmatter.primaryflux attribute)": [[26, "gammapy.astro.darkmatter.PrimaryFlux.allowed_channels", false]], "alpha (gammapy.astro.population.casebattacharya1998 attribute)": [[28, "gammapy.astro.population.CaseBattacharya1998.alpha", false]], "alpha (gammapy.datasets.mapdatasetonoff attribute)": [[100, "gammapy.datasets.MapDatasetOnOff.alpha", false]], "alpha (gammapy.datasets.spectrumdatasetonoff attribute)": [[105, "gammapy.datasets.SpectrumDatasetOnOff.alpha", false]], "alpha (gammapy.modeling.models.expcutoffpowerlawnormspectralmodel attribute)": [[216, "gammapy.modeling.models.ExpCutoffPowerLawNormSpectralModel.alpha", false]], "alpha (gammapy.modeling.models.expcutoffpowerlawspectralmodel attribute)": [[217, "gammapy.modeling.models.ExpCutoffPowerLawSpectralModel.alpha", false]], "alpha (gammapy.modeling.models.lineartemporalmodel attribute)": [[226, "gammapy.modeling.models.LinearTemporalModel.alpha", false]], "alpha (gammapy.modeling.models.logparabolanormspectralmodel attribute)": [[227, "gammapy.modeling.models.LogParabolaNormSpectralModel.alpha", false]], "alpha (gammapy.modeling.models.logparabolaspectralmodel attribute)": [[228, "gammapy.modeling.models.LogParabolaSpectralModel.alpha", false]], "alpha (gammapy.modeling.models.powerlawtemporalmodel attribute)": [[241, "gammapy.modeling.models.PowerLawTemporalModel.alpha", false]], "alpha_norm (gammapy.modeling.models.eblabsorptionnormspectralmodel attribute)": [[213, "gammapy.modeling.models.EBLAbsorptionNormSpectralModel.alpha_norm", false]], "altaz (gammapy.data.eventlist attribute)": [[79, "gammapy.data.EventList.altaz", false]], "altaz (gammapy.data.pointinginfo attribute)": [[89, "gammapy.data.PointingInfo.altaz", false]], "altaz (gammapy.irf.fovalignment attribute)": [[146, "gammapy.irf.FoVAlignment.ALTAZ", false]], "altaz_frame (gammapy.data.eventlist attribute)": [[79, "gammapy.data.EventList.altaz_frame", false]], "altaz_frame (gammapy.data.pointinginfo attribute)": [[89, "gammapy.data.PointingInfo.altaz_frame", false]], "altaz_from_table (gammapy.data.eventlist attribute)": [[79, "gammapy.data.EventList.altaz_from_table", false]], "altaz_from_table (gammapy.data.pointinginfo attribute)": [[89, "gammapy.data.PointingInfo.altaz_from_table", false]], "altaz_interpolate() (gammapy.data.pointinginfo method)": [[89, "gammapy.data.PointingInfo.altaz_interpolate", false]], "amp (gammapy.modeling.models.sinetemporalmodel attribute)": [[247, "gammapy.modeling.models.SineTemporalModel.amp", false]], "amplitude (gammapy.astro.population.casebattacharya1998 attribute)": [[28, "gammapy.astro.population.CaseBattacharya1998.amplitude", false]], "amplitude (gammapy.astro.population.exponential attribute)": [[29, "gammapy.astro.population.Exponential.amplitude", false]], "amplitude (gammapy.astro.population.faucherkaspi2006 attribute)": [[30, "gammapy.astro.population.FaucherKaspi2006.amplitude", false]], "amplitude (gammapy.astro.population.faucherkaspi2006velocitybimodal attribute)": [[31, "gammapy.astro.population.FaucherKaspi2006VelocityBimodal.amplitude", false]], "amplitude (gammapy.astro.population.faucherkaspi2006velocitymaxwellian attribute)": [[32, "gammapy.astro.population.FaucherKaspi2006VelocityMaxwellian.amplitude", false]], "amplitude (gammapy.astro.population.lorimer2006 attribute)": [[35, "gammapy.astro.population.Lorimer2006.amplitude", false]], "amplitude (gammapy.astro.population.paczynski1990 attribute)": [[36, "gammapy.astro.population.Paczynski1990.amplitude", false]], "amplitude (gammapy.astro.population.paczynski1990velocity attribute)": [[37, "gammapy.astro.population.Paczynski1990Velocity.amplitude", false]], "amplitude (gammapy.astro.population.yusifovkucuk2004 attribute)": [[39, "gammapy.astro.population.YusifovKucuk2004.amplitude", false]], "amplitude (gammapy.astro.population.yusifovkucuk2004b attribute)": [[40, "gammapy.astro.population.YusifovKucuk2004B.amplitude", false]], "amplitude (gammapy.modeling.models.brokenpowerlawspectralmodel attribute)": [[205, "gammapy.modeling.models.BrokenPowerLawSpectralModel.amplitude", false]], "amplitude (gammapy.modeling.models.expcutoffpowerlaw3fglspectralmodel attribute)": [[215, "gammapy.modeling.models.ExpCutoffPowerLaw3FGLSpectralModel.amplitude", false]], "amplitude (gammapy.modeling.models.expcutoffpowerlawspectralmodel attribute)": [[217, "gammapy.modeling.models.ExpCutoffPowerLawSpectralModel.amplitude", false]], "amplitude (gammapy.modeling.models.gaussianspectralmodel attribute)": [[221, "gammapy.modeling.models.GaussianSpectralModel.amplitude", false]], "amplitude (gammapy.modeling.models.logparabolaspectralmodel attribute)": [[228, "gammapy.modeling.models.LogParabolaSpectralModel.amplitude", false]], "amplitude (gammapy.modeling.models.powerlaw2spectralmodel attribute)": [[238, "gammapy.modeling.models.PowerLaw2SpectralModel.amplitude", false]], "amplitude (gammapy.modeling.models.powerlawspectralmodel attribute)": [[240, "gammapy.modeling.models.PowerLawSpectralModel.amplitude", false]], "amplitude (gammapy.modeling.models.smoothbrokenpowerlawspectralmodel attribute)": [[249, "gammapy.modeling.models.SmoothBrokenPowerLawSpectralModel.amplitude", false]], "amplitude (gammapy.modeling.models.superexpcutoffpowerlaw3fglspectralmodel attribute)": [[252, "gammapy.modeling.models.SuperExpCutoffPowerLaw3FGLSpectralModel.amplitude", false]], "amplitude (gammapy.modeling.models.superexpcutoffpowerlaw4fgldr3spectralmodel attribute)": [[253, "gammapy.modeling.models.SuperExpCutoffPowerLaw4FGLDR3SpectralModel.amplitude", false]], "amplitude (gammapy.modeling.models.superexpcutoffpowerlaw4fglspectralmodel attribute)": [[254, "gammapy.modeling.models.SuperExpCutoffPowerLaw4FGLSpectralModel.amplitude", false]], "analysis (class in gammapy.analysis)": [[15, "gammapy.analysis.Analysis", false]], "analysisconfig (class in gammapy.analysis)": [[16, "gammapy.analysis.AnalysisConfig", false]], "annotate_heatmap() (in module gammapy.visualization)": [[350, "gammapy.visualization.annotate_heatmap", false]], "append() (gammapy.data.observations method)": [[87, "gammapy.data.Observations.append", false]], "append() (gammapy.datasets.datasets method)": [[95, "gammapy.datasets.Datasets.append", false]], "append() (gammapy.modeling.models.models method)": [[233, "gammapy.modeling.models.Models.append", false]], "apply_edisp() (in module gammapy.datasets)": [[106, "gammapy.datasets.apply_edisp", false]], "apply_edisp() (in module gammapy.datasets.utils)": [[110, "gammapy.datasets.utils.apply_edisp", false]], "apply_mask() (gammapy.maps.mapcoord method)": [[189, "gammapy.maps.MapCoord.apply_mask", false]], "argsort() (gammapy.data.hduindextable method)": [[83, "gammapy.data.HDUIndexTable.argsort", false]], "argsort() (gammapy.data.observationtable method)": [[86, "gammapy.data.ObservationTable.argsort", false]], "as_array() (gammapy.data.hduindextable method)": [[83, "gammapy.data.HDUIndexTable.as_array", false]], "as_array() (gammapy.data.observationtable method)": [[86, "gammapy.data.ObservationTable.as_array", false]], "as_energy_true (gammapy.maps.geom attribute)": [[181, "gammapy.maps.Geom.as_energy_true", false]], "as_energy_true (gammapy.maps.hpxgeom attribute)": [[182, "gammapy.maps.HpxGeom.as_energy_true", false]], "as_energy_true (gammapy.maps.regiongeom attribute)": [[191, "gammapy.maps.RegionGeom.as_energy_true", false]], "as_energy_true (gammapy.maps.wcsgeom attribute)": [[194, "gammapy.maps.WcsGeom.as_energy_true", false]], "as_plot_center (gammapy.maps.labelmapaxis attribute)": [[185, "gammapy.maps.LabelMapAxis.as_plot_center", false]], "as_plot_center (gammapy.maps.mapaxis attribute)": [[188, "gammapy.maps.MapAxis.as_plot_center", false]], "as_plot_center (gammapy.maps.timemapaxis attribute)": [[193, "gammapy.maps.TimeMapAxis.as_plot_center", false]], "as_plot_edges (gammapy.maps.labelmapaxis attribute)": [[185, "gammapy.maps.LabelMapAxis.as_plot_edges", false]], "as_plot_edges (gammapy.maps.mapaxis attribute)": [[188, "gammapy.maps.MapAxis.as_plot_edges", false]], "as_plot_edges (gammapy.maps.timemapaxis attribute)": [[193, "gammapy.maps.TimeMapAxis.as_plot_edges", false]], "as_plot_labels (gammapy.maps.labelmapaxis attribute)": [[185, "gammapy.maps.LabelMapAxis.as_plot_labels", false]], "as_plot_labels (gammapy.maps.mapaxis attribute)": [[188, "gammapy.maps.MapAxis.as_plot_labels", false]], "as_plot_labels (gammapy.maps.timemapaxis attribute)": [[193, "gammapy.maps.TimeMapAxis.as_plot_labels", false]], "as_plot_scale (gammapy.maps.mapaxis attribute)": [[188, "gammapy.maps.MapAxis.as_plot_scale", false]], "as_plot_xerr (gammapy.maps.labelmapaxis attribute)": [[185, "gammapy.maps.LabelMapAxis.as_plot_xerr", false]], "as_plot_xerr (gammapy.maps.mapaxis attribute)": [[188, "gammapy.maps.MapAxis.as_plot_xerr", false]], "as_plot_xerr (gammapy.maps.timemapaxis attribute)": [[193, "gammapy.maps.TimeMapAxis.as_plot_xerr", false]], "asmoothmapestimator (class in gammapy.estimators)": [[112, "gammapy.estimators.ASmoothMapEstimator", false]], "assert_name() (gammapy.maps.labelmapaxis method)": [[185, "gammapy.maps.LabelMapAxis.assert_name", false]], "assert_name() (gammapy.maps.mapaxis method)": [[188, "gammapy.maps.MapAxis.assert_name", false]], "assert_name() (gammapy.maps.timemapaxis method)": [[193, "gammapy.maps.TimeMapAxis.assert_name", false]], "assert_names() (gammapy.maps.mapaxes method)": [[187, "gammapy.maps.MapAxes.assert_names", false]], "assert_quantity_allclose() (in module gammapy.utils.testing)": [[336, "gammapy.utils.testing.assert_quantity_allclose", false]], "assert_skycoord_allclose() (in module gammapy.utils.testing)": [[337, "gammapy.utils.testing.assert_skycoord_allclose", false]], "assert_time_allclose() (in module gammapy.utils.testing)": [[338, "gammapy.utils.testing.assert_time_allclose", false]], "asso (gammapy.catalog.sourcecatalogobject2fhl attribute)": [[69, "gammapy.catalog.SourceCatalogObject2FHL.asso", false]], "asso (gammapy.catalog.sourcecatalogobject3fgl attribute)": [[71, "gammapy.catalog.SourceCatalogObject3FGL.asso", false]], "asso (gammapy.catalog.sourcecatalogobject3fhl attribute)": [[72, "gammapy.catalog.SourceCatalogObject3FHL.asso", false]], "asso (gammapy.catalog.sourcecatalogobject4fgl attribute)": [[74, "gammapy.catalog.SourceCatalogObject4FGL.asso", false]], "autoscale() (gammapy.modeling.parameter method)": [[201, "gammapy.modeling.Parameter.autoscale", false]], "autoscale() (gammapy.modeling.parameters method)": [[202, "gammapy.modeling.Parameters.autoscale", false]], "autoscale() (gammapy.modeling.priorparameter method)": [[203, "gammapy.modeling.PriorParameter.autoscale", false]], "autoscale() (gammapy.modeling.priorparameters method)": [[204, "gammapy.modeling.PriorParameters.autoscale", false]], "available_hdus (gammapy.data.observation attribute)": [[84, "gammapy.data.Observation.available_hdus", false]], "available_irfs (gammapy.data.observation attribute)": [[84, "gammapy.data.Observation.available_irfs", false]], "available_methods (gammapy.makers.fovbackgroundmaker attribute)": [[160, "gammapy.makers.FoVBackgroundMaker.available_methods", false]], "available_methods (gammapy.makers.safemaskmaker attribute)": [[169, "gammapy.makers.SafeMaskMaker.available_methods", false]], "available_quantities (gammapy.estimators.fluxmaps attribute)": [[117, "gammapy.estimators.FluxMaps.available_quantities", false]], "available_quantities (gammapy.estimators.fluxpoints attribute)": [[119, "gammapy.estimators.FluxPoints.available_quantities", false]], "available_selection (gammapy.makers.mapdatasetmaker attribute)": [[163, "gammapy.makers.MapDatasetMaker.available_selection", false]], "available_selection (gammapy.makers.spectrumdatasetmaker attribute)": [[170, "gammapy.makers.SpectrumDatasetMaker.available_selection", false]], "axes (gammapy.irf.background2d attribute)": [[137, "gammapy.irf.Background2D.axes", false]], "axes (gammapy.irf.background3d attribute)": [[138, "gammapy.irf.Background3D.axes", false]], "axes (gammapy.irf.backgroundirf attribute)": [[139, "gammapy.irf.BackgroundIRF.axes", false]], "axes (gammapy.irf.edispkernel attribute)": [[140, "gammapy.irf.EDispKernel.axes", false]], "axes (gammapy.irf.effectiveareatable2d attribute)": [[143, "gammapy.irf.EffectiveAreaTable2D.axes", false]], "axes (gammapy.irf.energydependentmultigausspsf attribute)": [[144, "gammapy.irf.EnergyDependentMultiGaussPSF.axes", false]], "axes (gammapy.irf.energydispersion2d attribute)": [[145, "gammapy.irf.EnergyDispersion2D.axes", false]], "axes (gammapy.irf.irf attribute)": [[147, "gammapy.irf.IRF.axes", false]], "axes (gammapy.irf.parametricpsf attribute)": [[154, "gammapy.irf.ParametricPSF.axes", false]], "axes (gammapy.irf.psf3d attribute)": [[150, "gammapy.irf.PSF3D.axes", false]], "axes (gammapy.irf.psfking attribute)": [[152, "gammapy.irf.PSFKing.axes", false]], "axes (gammapy.irf.radmax2d attribute)": [[155, "gammapy.irf.RadMax2D.axes", false]], "axes (gammapy.maps.hpxgeom attribute)": [[182, "gammapy.maps.HpxGeom.axes", false]], "axes (gammapy.maps.regiongeom attribute)": [[191, "gammapy.maps.RegionGeom.axes", false]], "axes (gammapy.maps.wcsgeom attribute)": [[194, "gammapy.maps.WcsGeom.axes", false]], "axes_names (gammapy.maps.hpxgeom attribute)": [[182, "gammapy.maps.HpxGeom.axes_names", false]], "axes_names (gammapy.maps.regiongeom attribute)": [[191, "gammapy.maps.RegionGeom.axes_names", false]], "axes_names (gammapy.maps.wcsgeom attribute)": [[194, "gammapy.maps.WcsGeom.axes_names", false]], "axis_names (gammapy.maps.mapcoord attribute)": [[189, "gammapy.maps.MapCoord.axis_names", false]], "b (gammapy.astro.population.lorimer2006 attribute)": [[35, "gammapy.astro.population.Lorimer2006.B", false]], "b (gammapy.astro.population.yusifovkucuk2004 attribute)": [[39, "gammapy.astro.population.YusifovKucuk2004.b", false]], "b (gammapy.astro.population.yusifovkucuk2004b attribute)": [[40, "gammapy.astro.population.YusifovKucuk2004B.b", false]], "backend_default (in module gammapy.utils.parallel)": [[305, "gammapy.utils.parallel.BACKEND_DEFAULT", false]], "background (gammapy.datasets.mapdataset attribute)": [[97, "gammapy.datasets.MapDataset.background", false]], "background (gammapy.datasets.mapdatasetonoff attribute)": [[100, "gammapy.datasets.MapDatasetOnOff.background", false]], "background (gammapy.datasets.spectrumdataset attribute)": [[104, "gammapy.datasets.SpectrumDataset.background", false]], "background (gammapy.datasets.spectrumdatasetonoff attribute)": [[105, "gammapy.datasets.SpectrumDatasetOnOff.background", false]], "background2d (class in gammapy.irf)": [[137, "gammapy.irf.Background2D", false]], "background3d (class in gammapy.irf)": [[138, "gammapy.irf.Background3D", false]], "background_model (gammapy.datasets.mapdataset attribute)": [[97, "gammapy.datasets.MapDataset.background_model", false]], "background_model (gammapy.datasets.mapdatasetonoff attribute)": [[100, "gammapy.datasets.MapDatasetOnOff.background_model", false]], "background_model (gammapy.datasets.spectrumdataset attribute)": [[104, "gammapy.datasets.SpectrumDataset.background_model", false]], "background_model (gammapy.datasets.spectrumdatasetonoff attribute)": [[105, "gammapy.datasets.SpectrumDatasetOnOff.background_model", false]], "backgroundirf (class in gammapy.irf)": [[139, "gammapy.irf.BackgroundIRF", false]], "bar_radius (gammapy.astro.population.valleespiral attribute)": [[38, "gammapy.astro.population.ValleeSpiral.bar_radius", false]], "base_dir (gammapy.data.hduindextable attribute)": [[83, "gammapy.data.HDUIndexTable.base_dir", false]], "bbox_with_units (gammapy.astro.population.casebattacharya1998 attribute)": [[28, "gammapy.astro.population.CaseBattacharya1998.bbox_with_units", false]], "bbox_with_units (gammapy.astro.population.exponential attribute)": [[29, "gammapy.astro.population.Exponential.bbox_with_units", false]], "bbox_with_units (gammapy.astro.population.faucherkaspi2006 attribute)": [[30, "gammapy.astro.population.FaucherKaspi2006.bbox_with_units", false]], "bbox_with_units (gammapy.astro.population.faucherkaspi2006velocitybimodal attribute)": [[31, "gammapy.astro.population.FaucherKaspi2006VelocityBimodal.bbox_with_units", false]], "bbox_with_units (gammapy.astro.population.faucherkaspi2006velocitymaxwellian attribute)": [[32, "gammapy.astro.population.FaucherKaspi2006VelocityMaxwellian.bbox_with_units", false]], "bbox_with_units (gammapy.astro.population.lorimer2006 attribute)": [[35, "gammapy.astro.population.Lorimer2006.bbox_with_units", false]], "bbox_with_units (gammapy.astro.population.paczynski1990 attribute)": [[36, "gammapy.astro.population.Paczynski1990.bbox_with_units", false]], "bbox_with_units (gammapy.astro.population.paczynski1990velocity attribute)": [[37, "gammapy.astro.population.Paczynski1990Velocity.bbox_with_units", false]], "bbox_with_units (gammapy.astro.population.yusifovkucuk2004 attribute)": [[39, "gammapy.astro.population.YusifovKucuk2004.bbox_with_units", false]], "bbox_with_units (gammapy.astro.population.yusifovkucuk2004b attribute)": [[40, "gammapy.astro.population.YusifovKucuk2004B.bbox_with_units", false]], "beta (gammapy.astro.population.casebattacharya1998 attribute)": [[28, "gammapy.astro.population.CaseBattacharya1998.beta", false]], "beta (gammapy.modeling.models.lineartemporalmodel attribute)": [[226, "gammapy.modeling.models.LinearTemporalModel.beta", false]], "beta (gammapy.modeling.models.logparabolanormspectralmodel attribute)": [[227, "gammapy.modeling.models.LogParabolaNormSpectralModel.beta", false]], "beta (gammapy.modeling.models.logparabolaspectralmodel attribute)": [[228, "gammapy.modeling.models.LogParabolaSpectralModel.beta", false]], "beta (gammapy.modeling.models.smoothbrokenpowerlawspectralmodel attribute)": [[249, "gammapy.modeling.models.SmoothBrokenPowerLawSpectralModel.beta", false]], "bin_volume() (gammapy.maps.mapaxes method)": [[187, "gammapy.maps.MapAxes.bin_volume", false]], "bin_volume() (gammapy.maps.regiongeom method)": [[191, "gammapy.maps.RegionGeom.bin_volume", false]], "bin_volume() (gammapy.maps.wcsgeom method)": [[194, "gammapy.maps.WcsGeom.bin_volume", false]], "bin_width (gammapy.maps.labelmapaxis attribute)": [[185, "gammapy.maps.LabelMapAxis.bin_width", false]], "bin_width (gammapy.maps.mapaxis attribute)": [[188, "gammapy.maps.MapAxis.bin_width", false]], "bin_width (gammapy.maps.timemapaxis attribute)": [[193, "gammapy.maps.TimeMapAxis.bin_width", false]], "binary_dilate() (gammapy.maps.wcsndmap method)": [[196, "gammapy.maps.WcsNDMap.binary_dilate", false]], "binary_erode() (gammapy.maps.wcsndmap method)": [[196, "gammapy.maps.WcsNDMap.binary_erode", false]], "binary_structure() (gammapy.maps.wcsgeom method)": [[194, "gammapy.maps.WcsGeom.binary_structure", false]], "binsz_wcs (gammapy.maps.regiongeom attribute)": [[191, "gammapy.maps.RegionGeom.binsz_wcs", false]], "bkg": [[554, "term-Bkg", true]], "bkg (gammapy.data.observation attribute)": [[84, "gammapy.data.Observation.bkg", false]], "boundary_mask() (gammapy.maps.wcsgeom method)": [[194, "gammapy.maps.WcsGeom.boundary_mask", false]], "bounding_box (gammapy.astro.population.casebattacharya1998 attribute)": [[28, "gammapy.astro.population.CaseBattacharya1998.bounding_box", false]], "bounding_box (gammapy.astro.population.exponential attribute)": [[29, "gammapy.astro.population.Exponential.bounding_box", false]], "bounding_box (gammapy.astro.population.faucherkaspi2006 attribute)": [[30, "gammapy.astro.population.FaucherKaspi2006.bounding_box", false]], "bounding_box (gammapy.astro.population.faucherkaspi2006velocitybimodal attribute)": [[31, "gammapy.astro.population.FaucherKaspi2006VelocityBimodal.bounding_box", false]], "bounding_box (gammapy.astro.population.faucherkaspi2006velocitymaxwellian attribute)": [[32, "gammapy.astro.population.FaucherKaspi2006VelocityMaxwellian.bounding_box", false]], "bounding_box (gammapy.astro.population.lorimer2006 attribute)": [[35, "gammapy.astro.population.Lorimer2006.bounding_box", false]], "bounding_box (gammapy.astro.population.paczynski1990 attribute)": [[36, "gammapy.astro.population.Paczynski1990.bounding_box", false]], "bounding_box (gammapy.astro.population.paczynski1990velocity attribute)": [[37, "gammapy.astro.population.Paczynski1990Velocity.bounding_box", false]], "bounding_box (gammapy.astro.population.yusifovkucuk2004 attribute)": [[39, "gammapy.astro.population.YusifovKucuk2004.bounding_box", false]], "bounding_box (gammapy.astro.population.yusifovkucuk2004b attribute)": [[40, "gammapy.astro.population.YusifovKucuk2004B.bounding_box", false]], "bounds (gammapy.astro.population.casebattacharya1998 attribute)": [[28, "gammapy.astro.population.CaseBattacharya1998.bounds", false]], "bounds (gammapy.astro.population.exponential attribute)": [[29, "gammapy.astro.population.Exponential.bounds", false]], "bounds (gammapy.astro.population.faucherkaspi2006 attribute)": [[30, "gammapy.astro.population.FaucherKaspi2006.bounds", false]], "bounds (gammapy.astro.population.faucherkaspi2006velocitybimodal attribute)": [[31, "gammapy.astro.population.FaucherKaspi2006VelocityBimodal.bounds", false]], "bounds (gammapy.astro.population.faucherkaspi2006velocitymaxwellian attribute)": [[32, "gammapy.astro.population.FaucherKaspi2006VelocityMaxwellian.bounds", false]], "bounds (gammapy.astro.population.lorimer2006 attribute)": [[35, "gammapy.astro.population.Lorimer2006.bounds", false]], "bounds (gammapy.astro.population.paczynski1990 attribute)": [[36, "gammapy.astro.population.Paczynski1990.bounds", false]], "bounds (gammapy.astro.population.paczynski1990velocity attribute)": [[37, "gammapy.astro.population.Paczynski1990Velocity.bounds", false]], "bounds (gammapy.astro.population.yusifovkucuk2004 attribute)": [[39, "gammapy.astro.population.YusifovKucuk2004.bounds", false]], "bounds (gammapy.astro.population.yusifovkucuk2004b attribute)": [[40, "gammapy.astro.population.YusifovKucuk2004B.bounds", false]], "bounds (gammapy.maps.mapaxis attribute)": [[188, "gammapy.maps.MapAxis.bounds", false]], "bounds (gammapy.maps.timemapaxis attribute)": [[193, "gammapy.maps.TimeMapAxis.bounds", false]], "broadcasted (gammapy.maps.mapcoord attribute)": [[189, "gammapy.maps.MapCoord.broadcasted", false]], "brokenpowerlawspectralmodel (class in gammapy.modeling.models)": [[205, "gammapy.modeling.models.BrokenPowerLawSpectralModel", false]], "burkertprofile (class in gammapy.astro.darkmatter)": [[17, "gammapy.astro.darkmatter.BurkertProfile", false]], "c (gammapy.astro.population.lorimer2006 attribute)": [[35, "gammapy.astro.population.Lorimer2006.C", false]], "callback() (gammapy.makers.datasetsmaker method)": [[159, "gammapy.makers.DatasetsMaker.callback", false]], "cartesian() (in module gammapy.utils.coordinates)": [[291, "gammapy.utils.coordinates.cartesian", false]], "casebattacharya1998 (class in gammapy.astro.population)": [[28, "gammapy.astro.population.CaseBattacharya1998", false]], "cash": [[554, "term-Cash", true]], "cash() (in module gammapy.stats)": [[275, "gammapy.stats.cash", false]], "cash_sum_cython() (in module gammapy.stats)": [[276, "gammapy.stats.cash_sum_cython", false]], "cashcountsstatistic (class in gammapy.stats)": [[272, "gammapy.stats.CashCountsStatistic", false]], "catalog_registry (in module gammapy.catalog)": [[55, "gammapy.catalog.CATALOG_REGISTRY", false]], "center (gammapy.maps.labelmapaxis attribute)": [[185, "gammapy.maps.LabelMapAxis.center", false]], "center (gammapy.maps.mapaxis attribute)": [[188, "gammapy.maps.MapAxis.center", false]], "center (gammapy.maps.timemapaxis attribute)": [[193, "gammapy.maps.TimeMapAxis.center", false]], "center_coord (gammapy.maps.geom attribute)": [[181, "gammapy.maps.Geom.center_coord", false]], "center_coord (gammapy.maps.hpxgeom attribute)": [[182, "gammapy.maps.HpxGeom.center_coord", false]], "center_coord (gammapy.maps.mapaxes attribute)": [[187, "gammapy.maps.MapAxes.center_coord", false]], "center_coord (gammapy.maps.regiongeom attribute)": [[191, "gammapy.maps.RegionGeom.center_coord", false]], "center_coord (gammapy.maps.wcsgeom attribute)": [[194, "gammapy.maps.WcsGeom.center_coord", false]], "center_pix (gammapy.maps.geom attribute)": [[181, "gammapy.maps.Geom.center_pix", false]], "center_pix (gammapy.maps.hpxgeom attribute)": [[182, "gammapy.maps.HpxGeom.center_pix", false]], "center_pix (gammapy.maps.regiongeom attribute)": [[191, "gammapy.maps.RegionGeom.center_pix", false]], "center_pix (gammapy.maps.wcsgeom attribute)": [[194, "gammapy.maps.WcsGeom.center_pix", false]], "center_skydir (gammapy.maps.geom attribute)": [[181, "gammapy.maps.Geom.center_skydir", false]], "center_skydir (gammapy.maps.hpxgeom attribute)": [[182, "gammapy.maps.HpxGeom.center_skydir", false]], "center_skydir (gammapy.maps.regiongeom attribute)": [[191, "gammapy.maps.RegionGeom.center_skydir", false]], "center_skydir (gammapy.maps.wcsgeom attribute)": [[194, "gammapy.maps.WcsGeom.center_skydir", false]], "channel (gammapy.astro.darkmatter.primaryflux attribute)": [[26, "gammapy.astro.darkmatter.PrimaryFlux.channel", false]], "channel_registry (gammapy.astro.darkmatter.primaryflux attribute)": [[26, "gammapy.astro.darkmatter.PrimaryFlux.channel_registry", false]], "check() (gammapy.data.datastore method)": [[78, "gammapy.data.DataStore.check", false]], "check() (gammapy.data.eventlist method)": [[79, "gammapy.data.EventList.check", false]], "check() (gammapy.data.observation method)": [[84, "gammapy.data.Observation.check", false]], "check_limits() (gammapy.modeling.parameter method)": [[201, "gammapy.modeling.Parameter.check_limits", false]], "check_limits() (gammapy.modeling.parameters method)": [[202, "gammapy.modeling.Parameters.check_limits", false]], "check_limits() (gammapy.modeling.priorparameter method)": [[203, "gammapy.modeling.PriorParameter.check_limits", false]], "check_limits() (gammapy.modeling.priorparameters method)": [[204, "gammapy.modeling.PriorParameters.check_limits", false]], "checker (class in gammapy.utils.testing)": [[335, "gammapy.utils.testing.Checker", false]], "clear() (gammapy.data.observations method)": [[87, "gammapy.data.Observations.clear", false]], "clear() (gammapy.datasets.datasets method)": [[95, "gammapy.datasets.Datasets.clear", false]], "clear() (gammapy.maps.maps method)": [[190, "gammapy.maps.Maps.clear", false]], "clear() (gammapy.modeling.models.models method)": [[233, "gammapy.modeling.models.Models.clear", false]], "coadd() (gammapy.maps.hpxmap method)": [[183, "gammapy.maps.HpxMap.coadd", false]], "coadd() (gammapy.maps.hpxndmap method)": [[184, "gammapy.maps.HpxNDMap.coadd", false]], "coadd() (gammapy.maps.map method)": [[186, "gammapy.maps.Map.coadd", false]], "coadd() (gammapy.maps.regionndmap method)": [[192, "gammapy.maps.RegionNDMap.coadd", false]], "coadd() (gammapy.maps.wcsmap method)": [[195, "gammapy.maps.WcsMap.coadd", false]], "coadd() (gammapy.maps.wcsndmap method)": [[196, "gammapy.maps.WcsNDMap.coadd", false]], "coefficients (gammapy.modeling.models.meyercrabspectralmodel attribute)": [[230, "gammapy.modeling.models.MeyerCrabSpectralModel.coefficients", false]], "coerce_units() (gammapy.astro.population.casebattacharya1998 method)": [[28, "gammapy.astro.population.CaseBattacharya1998.coerce_units", false]], "coerce_units() (gammapy.astro.population.exponential method)": [[29, "gammapy.astro.population.Exponential.coerce_units", false]], "coerce_units() (gammapy.astro.population.faucherkaspi2006 method)": [[30, "gammapy.astro.population.FaucherKaspi2006.coerce_units", false]], "coerce_units() (gammapy.astro.population.faucherkaspi2006velocitybimodal method)": [[31, "gammapy.astro.population.FaucherKaspi2006VelocityBimodal.coerce_units", false]], "coerce_units() (gammapy.astro.population.faucherkaspi2006velocitymaxwellian method)": [[32, "gammapy.astro.population.FaucherKaspi2006VelocityMaxwellian.coerce_units", false]], "coerce_units() (gammapy.astro.population.lorimer2006 method)": [[35, "gammapy.astro.population.Lorimer2006.coerce_units", false]], "coerce_units() (gammapy.astro.population.paczynski1990 method)": [[36, "gammapy.astro.population.Paczynski1990.coerce_units", false]], "coerce_units() (gammapy.astro.population.paczynski1990velocity method)": [[37, "gammapy.astro.population.Paczynski1990Velocity.coerce_units", false]], "coerce_units() (gammapy.astro.population.yusifovkucuk2004 method)": [[39, "gammapy.astro.population.YusifovKucuk2004.coerce_units", false]], "coerce_units() (gammapy.astro.population.yusifovkucuk2004b method)": [[40, "gammapy.astro.population.YusifovKucuk2004B.coerce_units", false]], "col_fit_deriv (gammapy.astro.population.casebattacharya1998 attribute)": [[28, "gammapy.astro.population.CaseBattacharya1998.col_fit_deriv", false]], "col_fit_deriv (gammapy.astro.population.exponential attribute)": [[29, "gammapy.astro.population.Exponential.col_fit_deriv", false]], "col_fit_deriv (gammapy.astro.population.faucherkaspi2006 attribute)": [[30, "gammapy.astro.population.FaucherKaspi2006.col_fit_deriv", false]], "col_fit_deriv (gammapy.astro.population.faucherkaspi2006velocitybimodal attribute)": [[31, "gammapy.astro.population.FaucherKaspi2006VelocityBimodal.col_fit_deriv", false]], "col_fit_deriv (gammapy.astro.population.faucherkaspi2006velocitymaxwellian attribute)": [[32, "gammapy.astro.population.FaucherKaspi2006VelocityMaxwellian.col_fit_deriv", false]], "col_fit_deriv (gammapy.astro.population.lorimer2006 attribute)": [[35, "gammapy.astro.population.Lorimer2006.col_fit_deriv", false]], "col_fit_deriv (gammapy.astro.population.paczynski1990 attribute)": [[36, "gammapy.astro.population.Paczynski1990.col_fit_deriv", false]], "col_fit_deriv (gammapy.astro.population.paczynski1990velocity attribute)": [[37, "gammapy.astro.population.Paczynski1990Velocity.col_fit_deriv", false]], "col_fit_deriv (gammapy.astro.population.yusifovkucuk2004 attribute)": [[39, "gammapy.astro.population.YusifovKucuk2004.col_fit_deriv", false]], "col_fit_deriv (gammapy.astro.population.yusifovkucuk2004b attribute)": [[40, "gammapy.astro.population.YusifovKucuk2004B.col_fit_deriv", false]], "colnames (gammapy.data.hduindextable attribute)": [[83, "gammapy.data.HDUIndexTable.colnames", false]], "colnames (gammapy.data.observationtable attribute)": [[86, "gammapy.data.ObservationTable.colnames", false]], "colormap_hess() (in module gammapy.visualization)": [[351, "gammapy.visualization.colormap_hess", false]], "colormap_milagro() (in module gammapy.visualization)": [[352, "gammapy.visualization.colormap_milagro", false]], "columnclass (gammapy.data.hduindextable attribute)": [[83, "gammapy.data.HDUIndexTable.ColumnClass", false]], "columnclass (gammapy.data.observationtable attribute)": [[86, "gammapy.data.ObservationTable.ColumnClass", false]], "components_models() (gammapy.catalog.sourcecatalogobjecthgps method)": [[76, "gammapy.catalog.SourceCatalogObjectHGPS.components_models", false]], "compound_region_to_regions() (in module gammapy.utils.regions)": [[321, "gammapy.utils.regions.compound_region_to_regions", false]], "compoundspectralmodel (class in gammapy.modeling.models)": [[206, "gammapy.modeling.models.CompoundSpectralModel", false]], "compute_chisq() (in module gammapy.stats)": [[277, "gammapy.stats.compute_chisq", false]], "compute_differential_jfactor() (gammapy.astro.darkmatter.jfactory method)": [[23, "gammapy.astro.darkmatter.JFactory.compute_differential_jfactor", false]], "compute_errn() (gammapy.stats.cashcountsstatistic method)": [[272, "gammapy.stats.CashCountsStatistic.compute_errn", false]], "compute_errn() (gammapy.stats.wstatcountsstatistic method)": [[274, "gammapy.stats.WStatCountsStatistic.compute_errn", false]], "compute_errp() (gammapy.stats.cashcountsstatistic method)": [[272, "gammapy.stats.CashCountsStatistic.compute_errp", false]], "compute_errp() (gammapy.stats.wstatcountsstatistic method)": [[274, "gammapy.stats.WStatCountsStatistic.compute_errp", false]], "compute_flux_doubling() (in module gammapy.stats)": [[278, "gammapy.stats.compute_flux_doubling", false]], "compute_fpp() (in module gammapy.stats)": [[279, "gammapy.stats.compute_fpp", false]], "compute_fvar() (in module gammapy.stats)": [[280, "gammapy.stats.compute_fvar", false]], "compute_jfactor() (gammapy.astro.darkmatter.jfactory method)": [[23, "gammapy.astro.darkmatter.JFactory.compute_jfactor", false]], "compute_lightcurve_doublingtime() (in module gammapy.estimators.utils)": [[128, "gammapy.estimators.utils.compute_lightcurve_doublingtime", false]], "compute_lightcurve_fpp() (in module gammapy.estimators.utils)": [[129, "gammapy.estimators.utils.compute_lightcurve_fpp", false]], "compute_lightcurve_fvar() (in module gammapy.estimators.utils)": [[130, "gammapy.estimators.utils.compute_lightcurve_fvar", false]], "compute_upper_limit() (gammapy.stats.cashcountsstatistic method)": [[272, "gammapy.stats.CashCountsStatistic.compute_upper_limit", false]], "compute_upper_limit() (gammapy.stats.wstatcountsstatistic method)": [[274, "gammapy.stats.WStatCountsStatistic.compute_upper_limit", false]], "concatenate() (gammapy.maps.labelmapaxis method)": [[185, "gammapy.maps.LabelMapAxis.concatenate", false]], "concatenate() (gammapy.maps.mapaxis method)": [[188, "gammapy.maps.MapAxis.concatenate", false]], "conf_max (gammapy.modeling.parameter attribute)": [[201, "gammapy.modeling.Parameter.conf_max", false]], "conf_max (gammapy.modeling.priorparameter attribute)": [[203, "gammapy.modeling.PriorParameter.conf_max", false]], "conf_min (gammapy.modeling.parameter attribute)": [[201, "gammapy.modeling.Parameter.conf_min", false]], "conf_min (gammapy.modeling.priorparameter attribute)": [[203, "gammapy.modeling.PriorParameter.conf_min", false]], "confidence() (gammapy.modeling.fit method)": [[200, "gammapy.modeling.Fit.confidence", false]], "config (gammapy.analysis.analysis attribute)": [[15, "gammapy.analysis.Analysis.config", false]], "config_parameters (gammapy.estimators.asmoothmapestimator attribute)": [[112, "gammapy.estimators.ASmoothMapEstimator.config_parameters", false]], "config_parameters (gammapy.estimators.energydependentmorphologyestimator attribute)": [[114, "gammapy.estimators.EnergyDependentMorphologyEstimator.config_parameters", false]], "config_parameters (gammapy.estimators.estimator attribute)": [[115, "gammapy.estimators.Estimator.config_parameters", false]], "config_parameters (gammapy.estimators.excessmapestimator attribute)": [[116, "gammapy.estimators.ExcessMapEstimator.config_parameters", false]], "config_parameters (gammapy.estimators.fluxpointsestimator attribute)": [[120, "gammapy.estimators.FluxPointsEstimator.config_parameters", false]], "config_parameters (gammapy.estimators.fluxprofileestimator attribute)": [[121, "gammapy.estimators.FluxProfileEstimator.config_parameters", false]], "config_parameters (gammapy.estimators.imageprofileestimator attribute)": [[123, "gammapy.estimators.ImageProfileEstimator.config_parameters", false]], "config_parameters (gammapy.estimators.lightcurveestimator attribute)": [[124, "gammapy.estimators.LightCurveEstimator.config_parameters", false]], "config_parameters (gammapy.estimators.parameterestimator attribute)": [[125, "gammapy.estimators.ParameterEstimator.config_parameters", false]], "config_parameters (gammapy.estimators.sensitivityestimator attribute)": [[126, "gammapy.estimators.SensitivityEstimator.config_parameters", false]], "config_parameters (gammapy.estimators.tsmapestimator attribute)": [[127, "gammapy.estimators.TSMapEstimator.config_parameters", false]], "const (gammapy.modeling.models.constantspectralmodel attribute)": [[209, "gammapy.modeling.models.ConstantSpectralModel.const", false]], "constantfluxspatialmodel (class in gammapy.modeling.models)": [[207, "gammapy.modeling.models.ConstantFluxSpatialModel", false]], "constantspatialmodel (class in gammapy.modeling.models)": [[208, "gammapy.modeling.models.ConstantSpatialModel", false]], "constantspectralmodel (class in gammapy.modeling.models)": [[209, "gammapy.modeling.models.ConstantSpectralModel", false]], "constanttemporalmodel (class in gammapy.modeling.models)": [[210, "gammapy.modeling.models.ConstantTemporalModel", false]], "construct() (gammapy.analysis.analysisconfig class method)": [[16, "gammapy.analysis.AnalysisConfig.construct", false]], "construct() (gammapy.data.eventlistmetadata class method)": [[80, "gammapy.data.EventListMetaData.construct", false]], "construct() (gammapy.datasets.mapdatasetmetadata class method)": [[99, "gammapy.datasets.MapDatasetMetaData.construct", false]], "construct() (gammapy.estimators.fluxmetadata class method)": [[118, "gammapy.estimators.FluxMetaData.construct", false]], "containment() (gammapy.irf.energydependentmultigausspsf method)": [[144, "gammapy.irf.EnergyDependentMultiGaussPSF.containment", false]], "containment() (gammapy.irf.parametricpsf method)": [[154, "gammapy.irf.ParametricPSF.containment", false]], "containment() (gammapy.irf.psf3d method)": [[150, "gammapy.irf.PSF3D.containment", false]], "containment() (gammapy.irf.psfking method)": [[152, "gammapy.irf.PSFKing.containment", false]], "containment() (gammapy.irf.psfmap method)": [[153, "gammapy.irf.PSFMap.containment", false]], "containment() (gammapy.irf.recopsfmap method)": [[156, "gammapy.irf.RecoPSFMap.containment", false]], "containment_radius() (gammapy.irf.energydependentmultigausspsf method)": [[144, "gammapy.irf.EnergyDependentMultiGaussPSF.containment_radius", false]], "containment_radius() (gammapy.irf.parametricpsf method)": [[154, "gammapy.irf.ParametricPSF.containment_radius", false]], "containment_radius() (gammapy.irf.psf3d method)": [[150, "gammapy.irf.PSF3D.containment_radius", false]], "containment_radius() (gammapy.irf.psfking method)": [[152, "gammapy.irf.PSFKing.containment_radius", false]], "containment_radius() (gammapy.irf.psfmap method)": [[153, "gammapy.irf.PSFMap.containment_radius", false]], "containment_radius() (gammapy.irf.recopsfmap method)": [[156, "gammapy.irf.RecoPSFMap.containment_radius", false]], "containment_radius() (in module gammapy.maps)": [[197, "gammapy.maps.containment_radius", false]], "containment_radius_map() (gammapy.irf.psfmap method)": [[153, "gammapy.irf.PSFMap.containment_radius_map", false]], "containment_radius_map() (gammapy.irf.recopsfmap method)": [[156, "gammapy.irf.RecoPSFMap.containment_radius_map", false]], "containment_region() (in module gammapy.maps)": [[198, "gammapy.maps.containment_region", false]], "contains() (gammapy.maps.geom method)": [[181, "gammapy.maps.Geom.contains", false]], "contains() (gammapy.maps.hpxgeom method)": [[182, "gammapy.maps.HpxGeom.contains", false]], "contains() (gammapy.maps.regiongeom method)": [[191, "gammapy.maps.RegionGeom.contains", false]], "contains() (gammapy.maps.wcsgeom method)": [[194, "gammapy.maps.WcsGeom.contains", false]], "contains_pix() (gammapy.maps.geom method)": [[181, "gammapy.maps.Geom.contains_pix", false]], "contains_pix() (gammapy.maps.hpxgeom method)": [[182, "gammapy.maps.HpxGeom.contains_pix", false]], "contains_pix() (gammapy.maps.regiongeom method)": [[191, "gammapy.maps.RegionGeom.contains_pix", false]], "contains_pix() (gammapy.maps.wcsgeom method)": [[194, "gammapy.maps.WcsGeom.contains_pix", false]], "contains_wcs_pix() (gammapy.maps.regiongeom method)": [[191, "gammapy.maps.RegionGeom.contains_wcs_pix", false]], "contributes() (gammapy.modeling.models.fovbackgroundmodel static method)": [[219, "gammapy.modeling.models.FoVBackgroundModel.contributes", false]], "contributes() (gammapy.modeling.models.skymodel method)": [[248, "gammapy.modeling.models.SkyModel.contributes", false]], "contributes_to_stat (gammapy.datasets.datasets attribute)": [[95, "gammapy.datasets.Datasets.contributes_to_stat", false]], "convert_bytestring_to_unicode() (gammapy.data.hduindextable method)": [[83, "gammapy.data.HDUIndexTable.convert_bytestring_to_unicode", false]], "convert_bytestring_to_unicode() (gammapy.data.observationtable method)": [[86, "gammapy.data.ObservationTable.convert_bytestring_to_unicode", false]], "convert_unicode_to_bytestring() (gammapy.data.hduindextable method)": [[83, "gammapy.data.HDUIndexTable.convert_unicode_to_bytestring", false]], "convert_unicode_to_bytestring() (gammapy.data.observationtable method)": [[86, "gammapy.data.ObservationTable.convert_unicode_to_bytestring", false]], "convolve() (gammapy.maps.hpxndmap method)": [[184, "gammapy.maps.HpxNDMap.convolve", false]], "convolve() (gammapy.maps.wcsndmap method)": [[196, "gammapy.maps.WcsNDMap.convolve", false]], "convolve_full() (gammapy.maps.hpxndmap method)": [[184, "gammapy.maps.HpxNDMap.convolve_full", false]], "convolve_wcs() (gammapy.maps.hpxndmap method)": [[184, "gammapy.maps.HpxNDMap.convolve_wcs", false]], "coord_to_idx() (gammapy.maps.geom method)": [[181, "gammapy.maps.Geom.coord_to_idx", false]], "coord_to_idx() (gammapy.maps.hpxgeom method)": [[182, "gammapy.maps.HpxGeom.coord_to_idx", false]], "coord_to_idx() (gammapy.maps.labelmapaxis method)": [[185, "gammapy.maps.LabelMapAxis.coord_to_idx", false]], "coord_to_idx() (gammapy.maps.mapaxes method)": [[187, "gammapy.maps.MapAxes.coord_to_idx", false]], "coord_to_idx() (gammapy.maps.mapaxis method)": [[188, "gammapy.maps.MapAxis.coord_to_idx", false]], "coord_to_idx() (gammapy.maps.regiongeom method)": [[191, "gammapy.maps.RegionGeom.coord_to_idx", false]], "coord_to_idx() (gammapy.maps.timemapaxis method)": [[193, "gammapy.maps.TimeMapAxis.coord_to_idx", false]], "coord_to_idx() (gammapy.maps.wcsgeom method)": [[194, "gammapy.maps.WcsGeom.coord_to_idx", false]], "coord_to_pix() (gammapy.maps.geom method)": [[181, "gammapy.maps.Geom.coord_to_pix", false]], "coord_to_pix() (gammapy.maps.hpxgeom method)": [[182, "gammapy.maps.HpxGeom.coord_to_pix", false]], "coord_to_pix() (gammapy.maps.labelmapaxis method)": [[185, "gammapy.maps.LabelMapAxis.coord_to_pix", false]], "coord_to_pix() (gammapy.maps.mapaxes method)": [[187, "gammapy.maps.MapAxes.coord_to_pix", false]], "coord_to_pix() (gammapy.maps.mapaxis method)": [[188, "gammapy.maps.MapAxis.coord_to_pix", false]], "coord_to_pix() (gammapy.maps.regiongeom method)": [[191, "gammapy.maps.RegionGeom.coord_to_pix", false]], "coord_to_pix() (gammapy.maps.timemapaxis method)": [[193, "gammapy.maps.TimeMapAxis.coord_to_pix", false]], "coord_to_pix() (gammapy.maps.wcsgeom method)": [[194, "gammapy.maps.WcsGeom.coord_to_pix", false]], "coords (gammapy.modeling.models.piecewisenormspatialmodel attribute)": [[235, "gammapy.modeling.models.PiecewiseNormSpatialModel.coords", false]], "copy() (gammapy.analysis.analysisconfig method)": [[16, "gammapy.analysis.AnalysisConfig.copy", false]], "copy() (gammapy.astro.darkmatter.darkmatterannihilationspectralmodel method)": [[19, "gammapy.astro.darkmatter.DarkMatterAnnihilationSpectralModel.copy", false]], "copy() (gammapy.astro.darkmatter.darkmatterdecayspectralmodel method)": [[20, "gammapy.astro.darkmatter.DarkMatterDecaySpectralModel.copy", false]], "copy() (gammapy.astro.darkmatter.primaryflux method)": [[26, "gammapy.astro.darkmatter.PrimaryFlux.copy", false]], "copy() (gammapy.astro.population.casebattacharya1998 method)": [[28, "gammapy.astro.population.CaseBattacharya1998.copy", false]], "copy() (gammapy.astro.population.exponential method)": [[29, "gammapy.astro.population.Exponential.copy", false]], "copy() (gammapy.astro.population.faucherkaspi2006 method)": [[30, "gammapy.astro.population.FaucherKaspi2006.copy", false]], "copy() (gammapy.astro.population.faucherkaspi2006velocitybimodal method)": [[31, "gammapy.astro.population.FaucherKaspi2006VelocityBimodal.copy", false]], "copy() (gammapy.astro.population.faucherkaspi2006velocitymaxwellian method)": [[32, "gammapy.astro.population.FaucherKaspi2006VelocityMaxwellian.copy", false]], "copy() (gammapy.astro.population.lorimer2006 method)": [[35, "gammapy.astro.population.Lorimer2006.copy", false]], "copy() (gammapy.astro.population.paczynski1990 method)": [[36, "gammapy.astro.population.Paczynski1990.copy", false]], "copy() (gammapy.astro.population.paczynski1990velocity method)": [[37, "gammapy.astro.population.Paczynski1990Velocity.copy", false]], "copy() (gammapy.astro.population.yusifovkucuk2004 method)": [[39, "gammapy.astro.population.YusifovKucuk2004.copy", false]], "copy() (gammapy.astro.population.yusifovkucuk2004b method)": [[40, "gammapy.astro.population.YusifovKucuk2004B.copy", false]], "copy() (gammapy.data.eventlist method)": [[79, "gammapy.data.EventList.copy", false]], "copy() (gammapy.data.eventlistmetadata method)": [[80, "gammapy.data.EventListMetaData.copy", false]], "copy() (gammapy.data.gti method)": [[82, "gammapy.data.GTI.copy", false]], "copy() (gammapy.data.hduindextable method)": [[83, "gammapy.data.HDUIndexTable.copy", false]], "copy() (gammapy.data.observation method)": [[84, "gammapy.data.Observation.copy", false]], "copy() (gammapy.data.observationfilter method)": [[85, "gammapy.data.ObservationFilter.copy", false]], "copy() (gammapy.data.observationtable method)": [[86, "gammapy.data.ObservationTable.copy", false]], "copy() (gammapy.datasets.dataset method)": [[94, "gammapy.datasets.Dataset.copy", false]], "copy() (gammapy.datasets.datasets method)": [[95, "gammapy.datasets.Datasets.copy", false]], "copy() (gammapy.datasets.fluxpointsdataset method)": [[96, "gammapy.datasets.FluxPointsDataset.copy", false]], "copy() (gammapy.datasets.mapdataset method)": [[97, "gammapy.datasets.MapDataset.copy", false]], "copy() (gammapy.datasets.mapdatasetmetadata method)": [[99, "gammapy.datasets.MapDatasetMetaData.copy", false]], "copy() (gammapy.datasets.mapdatasetonoff method)": [[100, "gammapy.datasets.MapDatasetOnOff.copy", false]], "copy() (gammapy.datasets.spectrumdataset method)": [[104, "gammapy.datasets.SpectrumDataset.copy", false]], "copy() (gammapy.datasets.spectrumdatasetonoff method)": [[105, "gammapy.datasets.SpectrumDatasetOnOff.copy", false]], "copy() (gammapy.estimators.asmoothmapestimator method)": [[112, "gammapy.estimators.ASmoothMapEstimator.copy", false]], "copy() (gammapy.estimators.energydependentmorphologyestimator method)": [[114, "gammapy.estimators.EnergyDependentMorphologyEstimator.copy", false]], "copy() (gammapy.estimators.estimator method)": [[115, "gammapy.estimators.Estimator.copy", false]], "copy() (gammapy.estimators.excessmapestimator method)": [[116, "gammapy.estimators.ExcessMapEstimator.copy", false]], "copy() (gammapy.estimators.fluxmetadata method)": [[118, "gammapy.estimators.FluxMetaData.copy", false]], "copy() (gammapy.estimators.fluxpointsestimator method)": [[120, "gammapy.estimators.FluxPointsEstimator.copy", false]], "copy() (gammapy.estimators.fluxprofileestimator method)": [[121, "gammapy.estimators.FluxProfileEstimator.copy", false]], "copy() (gammapy.estimators.imageprofileestimator method)": [[123, "gammapy.estimators.ImageProfileEstimator.copy", false]], "copy() (gammapy.estimators.lightcurveestimator method)": [[124, "gammapy.estimators.LightCurveEstimator.copy", false]], "copy() (gammapy.estimators.parameterestimator method)": [[125, "gammapy.estimators.ParameterEstimator.copy", false]], "copy() (gammapy.estimators.sensitivityestimator method)": [[126, "gammapy.estimators.SensitivityEstimator.copy", false]], "copy() (gammapy.estimators.tsmapestimator method)": [[127, "gammapy.estimators.TSMapEstimator.copy", false]], "copy() (gammapy.irf.edispkernelmap method)": [[141, "gammapy.irf.EDispKernelMap.copy", false]], "copy() (gammapy.irf.edispmap method)": [[142, "gammapy.irf.EDispMap.copy", false]], "copy() (gammapy.irf.irfmap method)": [[148, "gammapy.irf.IRFMap.copy", false]], "copy() (gammapy.irf.psfmap method)": [[153, "gammapy.irf.PSFMap.copy", false]], "copy() (gammapy.irf.recopsfmap method)": [[156, "gammapy.irf.RecoPSFMap.copy", false]], "copy() (gammapy.maps.geom method)": [[181, "gammapy.maps.Geom.copy", false]], "copy() (gammapy.maps.hpxgeom method)": [[182, "gammapy.maps.HpxGeom.copy", false]], "copy() (gammapy.maps.hpxmap method)": [[183, "gammapy.maps.HpxMap.copy", false]], "copy() (gammapy.maps.hpxndmap method)": [[184, "gammapy.maps.HpxNDMap.copy", false]], "copy() (gammapy.maps.labelmapaxis method)": [[185, "gammapy.maps.LabelMapAxis.copy", false]], "copy() (gammapy.maps.map method)": [[186, "gammapy.maps.Map.copy", false]], "copy() (gammapy.maps.mapaxes method)": [[187, "gammapy.maps.MapAxes.copy", false]], "copy() (gammapy.maps.mapaxis method)": [[188, "gammapy.maps.MapAxis.copy", false]], "copy() (gammapy.maps.mapcoord method)": [[189, "gammapy.maps.MapCoord.copy", false]], "copy() (gammapy.maps.regiongeom method)": [[191, "gammapy.maps.RegionGeom.copy", false]], "copy() (gammapy.maps.regionndmap method)": [[192, "gammapy.maps.RegionNDMap.copy", false]], "copy() (gammapy.maps.timemapaxis method)": [[193, "gammapy.maps.TimeMapAxis.copy", false]], "copy() (gammapy.maps.wcsgeom method)": [[194, "gammapy.maps.WcsGeom.copy", false]], "copy() (gammapy.maps.wcsmap method)": [[195, "gammapy.maps.WcsMap.copy", false]], "copy() (gammapy.maps.wcsndmap method)": [[196, "gammapy.maps.WcsNDMap.copy", false]], "copy() (gammapy.modeling.models.brokenpowerlawspectralmodel method)": [[205, "gammapy.modeling.models.BrokenPowerLawSpectralModel.copy", false]], "copy() (gammapy.modeling.models.compoundspectralmodel method)": [[206, "gammapy.modeling.models.CompoundSpectralModel.copy", false]], "copy() (gammapy.modeling.models.constantfluxspatialmodel method)": [[207, "gammapy.modeling.models.ConstantFluxSpatialModel.copy", false]], "copy() (gammapy.modeling.models.constantspatialmodel method)": [[208, "gammapy.modeling.models.ConstantSpatialModel.copy", false]], "copy() (gammapy.modeling.models.constantspectralmodel method)": [[209, "gammapy.modeling.models.ConstantSpectralModel.copy", false]], "copy() (gammapy.modeling.models.constanttemporalmodel method)": [[210, "gammapy.modeling.models.ConstantTemporalModel.copy", false]], "copy() (gammapy.modeling.models.datasetmodels method)": [[211, "gammapy.modeling.models.DatasetModels.copy", false]], "copy() (gammapy.modeling.models.diskspatialmodel method)": [[212, "gammapy.modeling.models.DiskSpatialModel.copy", false]], "copy() (gammapy.modeling.models.eblabsorptionnormspectralmodel method)": [[213, "gammapy.modeling.models.EBLAbsorptionNormSpectralModel.copy", false]], "copy() (gammapy.modeling.models.expcutoffpowerlaw3fglspectralmodel method)": [[215, "gammapy.modeling.models.ExpCutoffPowerLaw3FGLSpectralModel.copy", false]], "copy() (gammapy.modeling.models.expcutoffpowerlawnormspectralmodel method)": [[216, "gammapy.modeling.models.ExpCutoffPowerLawNormSpectralModel.copy", false]], "copy() (gammapy.modeling.models.expcutoffpowerlawspectralmodel method)": [[217, "gammapy.modeling.models.ExpCutoffPowerLawSpectralModel.copy", false]], "copy() (gammapy.modeling.models.expdecaytemporalmodel method)": [[218, "gammapy.modeling.models.ExpDecayTemporalModel.copy", false]], "copy() (gammapy.modeling.models.fovbackgroundmodel method)": [[219, "gammapy.modeling.models.FoVBackgroundModel.copy", false]], "copy() (gammapy.modeling.models.gaussianspatialmodel method)": [[220, "gammapy.modeling.models.GaussianSpatialModel.copy", false]], "copy() (gammapy.modeling.models.gaussianspectralmodel method)": [[221, "gammapy.modeling.models.GaussianSpectralModel.copy", false]], "copy() (gammapy.modeling.models.gaussiantemporalmodel method)": [[222, "gammapy.modeling.models.GaussianTemporalModel.copy", false]], "copy() (gammapy.modeling.models.generalizedgaussianspatialmodel method)": [[223, "gammapy.modeling.models.GeneralizedGaussianSpatialModel.copy", false]], "copy() (gammapy.modeling.models.generalizedgaussiantemporalmodel method)": [[224, "gammapy.modeling.models.GeneralizedGaussianTemporalModel.copy", false]], "copy() (gammapy.modeling.models.lightcurvetemplatetemporalmodel method)": [[225, "gammapy.modeling.models.LightCurveTemplateTemporalModel.copy", false]], "copy() (gammapy.modeling.models.lineartemporalmodel method)": [[226, "gammapy.modeling.models.LinearTemporalModel.copy", false]], "copy() (gammapy.modeling.models.logparabolanormspectralmodel method)": [[227, "gammapy.modeling.models.LogParabolaNormSpectralModel.copy", false]], "copy() (gammapy.modeling.models.logparabolaspectralmodel method)": [[228, "gammapy.modeling.models.LogParabolaSpectralModel.copy", false]], "copy() (gammapy.modeling.models.meyercrabspectralmodel method)": [[230, "gammapy.modeling.models.MeyerCrabSpectralModel.copy", false]], "copy() (gammapy.modeling.models.modelbase method)": [[232, "gammapy.modeling.models.ModelBase.copy", false]], "copy() (gammapy.modeling.models.models method)": [[233, "gammapy.modeling.models.Models.copy", false]], "copy() (gammapy.modeling.models.naimaspectralmodel method)": [[234, "gammapy.modeling.models.NaimaSpectralModel.copy", false]], "copy() (gammapy.modeling.models.piecewisenormspatialmodel method)": [[235, "gammapy.modeling.models.PiecewiseNormSpatialModel.copy", false]], "copy() (gammapy.modeling.models.piecewisenormspectralmodel method)": [[236, "gammapy.modeling.models.PiecewiseNormSpectralModel.copy", false]], "copy() (gammapy.modeling.models.pointspatialmodel method)": [[237, "gammapy.modeling.models.PointSpatialModel.copy", false]], "copy() (gammapy.modeling.models.powerlaw2spectralmodel method)": [[238, "gammapy.modeling.models.PowerLaw2SpectralModel.copy", false]], "copy() (gammapy.modeling.models.powerlawnormspectralmodel method)": [[239, "gammapy.modeling.models.PowerLawNormSpectralModel.copy", false]], "copy() (gammapy.modeling.models.powerlawspectralmodel method)": [[240, "gammapy.modeling.models.PowerLawSpectralModel.copy", false]], "copy() (gammapy.modeling.models.powerlawtemporalmodel method)": [[241, "gammapy.modeling.models.PowerLawTemporalModel.copy", false]], "copy() (gammapy.modeling.models.scalespectralmodel method)": [[244, "gammapy.modeling.models.ScaleSpectralModel.copy", false]], "copy() (gammapy.modeling.models.shell2spatialmodel method)": [[245, "gammapy.modeling.models.Shell2SpatialModel.copy", false]], "copy() (gammapy.modeling.models.shellspatialmodel method)": [[246, "gammapy.modeling.models.ShellSpatialModel.copy", false]], "copy() (gammapy.modeling.models.sinetemporalmodel method)": [[247, "gammapy.modeling.models.SineTemporalModel.copy", false]], "copy() (gammapy.modeling.models.skymodel method)": [[248, "gammapy.modeling.models.SkyModel.copy", false]], "copy() (gammapy.modeling.models.smoothbrokenpowerlawspectralmodel method)": [[249, "gammapy.modeling.models.SmoothBrokenPowerLawSpectralModel.copy", false]], "copy() (gammapy.modeling.models.spatialmodel method)": [[250, "gammapy.modeling.models.SpatialModel.copy", false]], "copy() (gammapy.modeling.models.spectralmodel method)": [[251, "gammapy.modeling.models.SpectralModel.copy", false]], "copy() (gammapy.modeling.models.superexpcutoffpowerlaw3fglspectralmodel method)": [[252, "gammapy.modeling.models.SuperExpCutoffPowerLaw3FGLSpectralModel.copy", false]], "copy() (gammapy.modeling.models.superexpcutoffpowerlaw4fgldr3spectralmodel method)": [[253, "gammapy.modeling.models.SuperExpCutoffPowerLaw4FGLDR3SpectralModel.copy", false]], "copy() (gammapy.modeling.models.superexpcutoffpowerlaw4fglspectralmodel method)": [[254, "gammapy.modeling.models.SuperExpCutoffPowerLaw4FGLSpectralModel.copy", false]], "copy() (gammapy.modeling.models.templatendspatialmodel method)": [[256, "gammapy.modeling.models.TemplateNDSpatialModel.copy", false]], "copy() (gammapy.modeling.models.templatendspectralmodel method)": [[257, "gammapy.modeling.models.TemplateNDSpectralModel.copy", false]], "copy() (gammapy.modeling.models.templatenpredmodel method)": [[258, "gammapy.modeling.models.TemplateNPredModel.copy", false]], "copy() (gammapy.modeling.models.templatephasecurvetemporalmodel method)": [[259, "gammapy.modeling.models.TemplatePhaseCurveTemporalModel.copy", false]], "copy() (gammapy.modeling.models.templatespatialmodel method)": [[260, "gammapy.modeling.models.TemplateSpatialModel.copy", false]], "copy() (gammapy.modeling.models.templatespectralmodel method)": [[261, "gammapy.modeling.models.TemplateSpectralModel.copy", false]], "copy() (gammapy.modeling.models.temporalmodel method)": [[262, "gammapy.modeling.models.TemporalModel.copy", false]], "copy() (gammapy.modeling.parameter method)": [[201, "gammapy.modeling.Parameter.copy", false]], "copy() (gammapy.modeling.parameters method)": [[202, "gammapy.modeling.Parameters.copy", false]], "copy() (gammapy.modeling.priorparameter method)": [[203, "gammapy.modeling.PriorParameter.copy", false]], "copy() (gammapy.modeling.priorparameters method)": [[204, "gammapy.modeling.PriorParameters.copy", false]], "copy_obs() (gammapy.data.datastore method)": [[78, "gammapy.data.DataStore.copy_obs", false]], "correlation (gammapy.modeling.covariance attribute)": [[199, "gammapy.modeling.Covariance.correlation", false]], "correlation_radius (gammapy.estimators.excessmapestimator attribute)": [[116, "gammapy.estimators.ExcessMapEstimator.correlation_radius", false]], "count() (gammapy.data.observations method)": [[87, "gammapy.data.Observations.count", false]], "count() (gammapy.datasets.datasets method)": [[95, "gammapy.datasets.Datasets.count", false]], "count() (gammapy.maps.mapaxes method)": [[187, "gammapy.maps.MapAxes.count", false]], "count() (gammapy.modeling.models.datasetmodels method)": [[211, "gammapy.modeling.models.DatasetModels.count", false]], "count() (gammapy.modeling.models.models method)": [[233, "gammapy.modeling.models.Models.count", false]], "count() (gammapy.modeling.parameters method)": [[202, "gammapy.modeling.Parameters.count", false]], "count() (gammapy.modeling.priorparameters method)": [[204, "gammapy.modeling.PriorParameters.count", false]], "counts (gammapy.datasets.mapdataset attribute)": [[97, "gammapy.datasets.MapDataset.counts", false]], "counts (gammapy.datasets.mapdatasetonoff attribute)": [[100, "gammapy.datasets.MapDatasetOnOff.counts", false]], "counts (gammapy.datasets.spectrumdataset attribute)": [[104, "gammapy.datasets.SpectrumDataset.counts", false]], "counts (gammapy.datasets.spectrumdatasetonoff attribute)": [[105, "gammapy.datasets.SpectrumDatasetOnOff.counts", false]], "counts (gammapy.estimators.fluxmaps attribute)": [[117, "gammapy.estimators.FluxMaps.counts", false]], "counts (gammapy.estimators.fluxpoints attribute)": [[119, "gammapy.estimators.FluxPoints.counts", false]], "cov_matrix (gammapy.astro.population.casebattacharya1998 attribute)": [[28, "gammapy.astro.population.CaseBattacharya1998.cov_matrix", false]], "cov_matrix (gammapy.astro.population.exponential attribute)": [[29, "gammapy.astro.population.Exponential.cov_matrix", false]], "cov_matrix (gammapy.astro.population.faucherkaspi2006 attribute)": [[30, "gammapy.astro.population.FaucherKaspi2006.cov_matrix", false]], "cov_matrix (gammapy.astro.population.faucherkaspi2006velocitybimodal attribute)": [[31, "gammapy.astro.population.FaucherKaspi2006VelocityBimodal.cov_matrix", false]], "cov_matrix (gammapy.astro.population.faucherkaspi2006velocitymaxwellian attribute)": [[32, "gammapy.astro.population.FaucherKaspi2006VelocityMaxwellian.cov_matrix", false]], "cov_matrix (gammapy.astro.population.lorimer2006 attribute)": [[35, "gammapy.astro.population.Lorimer2006.cov_matrix", false]], "cov_matrix (gammapy.astro.population.paczynski1990 attribute)": [[36, "gammapy.astro.population.Paczynski1990.cov_matrix", false]], "cov_matrix (gammapy.astro.population.paczynski1990velocity attribute)": [[37, "gammapy.astro.population.Paczynski1990Velocity.cov_matrix", false]], "cov_matrix (gammapy.astro.population.yusifovkucuk2004 attribute)": [[39, "gammapy.astro.population.YusifovKucuk2004.cov_matrix", false]], "cov_matrix (gammapy.astro.population.yusifovkucuk2004b attribute)": [[40, "gammapy.astro.population.YusifovKucuk2004B.cov_matrix", false]], "covariance (class in gammapy.modeling)": [[199, "gammapy.modeling.Covariance", false]], "covariance (gammapy.astro.darkmatter.darkmatterannihilationspectralmodel attribute)": [[19, "gammapy.astro.darkmatter.DarkMatterAnnihilationSpectralModel.covariance", false]], "covariance (gammapy.astro.darkmatter.darkmatterdecayspectralmodel attribute)": [[20, "gammapy.astro.darkmatter.DarkMatterDecaySpectralModel.covariance", false]], "covariance (gammapy.astro.darkmatter.primaryflux attribute)": [[26, "gammapy.astro.darkmatter.PrimaryFlux.covariance", false]], "covariance (gammapy.modeling.models.brokenpowerlawspectralmodel attribute)": [[205, "gammapy.modeling.models.BrokenPowerLawSpectralModel.covariance", false]], "covariance (gammapy.modeling.models.compoundspectralmodel attribute)": [[206, "gammapy.modeling.models.CompoundSpectralModel.covariance", false]], "covariance (gammapy.modeling.models.constantfluxspatialmodel attribute)": [[207, "gammapy.modeling.models.ConstantFluxSpatialModel.covariance", false]], "covariance (gammapy.modeling.models.constantspatialmodel attribute)": [[208, "gammapy.modeling.models.ConstantSpatialModel.covariance", false]], "covariance (gammapy.modeling.models.constantspectralmodel attribute)": [[209, "gammapy.modeling.models.ConstantSpectralModel.covariance", false]], "covariance (gammapy.modeling.models.constanttemporalmodel attribute)": [[210, "gammapy.modeling.models.ConstantTemporalModel.covariance", false]], "covariance (gammapy.modeling.models.datasetmodels attribute)": [[211, "gammapy.modeling.models.DatasetModels.covariance", false]], "covariance (gammapy.modeling.models.diskspatialmodel attribute)": [[212, "gammapy.modeling.models.DiskSpatialModel.covariance", false]], "covariance (gammapy.modeling.models.eblabsorptionnormspectralmodel attribute)": [[213, "gammapy.modeling.models.EBLAbsorptionNormSpectralModel.covariance", false]], "covariance (gammapy.modeling.models.expcutoffpowerlaw3fglspectralmodel attribute)": [[215, "gammapy.modeling.models.ExpCutoffPowerLaw3FGLSpectralModel.covariance", false]], "covariance (gammapy.modeling.models.expcutoffpowerlawnormspectralmodel attribute)": [[216, "gammapy.modeling.models.ExpCutoffPowerLawNormSpectralModel.covariance", false]], "covariance (gammapy.modeling.models.expcutoffpowerlawspectralmodel attribute)": [[217, "gammapy.modeling.models.ExpCutoffPowerLawSpectralModel.covariance", false]], "covariance (gammapy.modeling.models.expdecaytemporalmodel attribute)": [[218, "gammapy.modeling.models.ExpDecayTemporalModel.covariance", false]], "covariance (gammapy.modeling.models.fovbackgroundmodel attribute)": [[219, "gammapy.modeling.models.FoVBackgroundModel.covariance", false]], "covariance (gammapy.modeling.models.gaussianspatialmodel attribute)": [[220, "gammapy.modeling.models.GaussianSpatialModel.covariance", false]], "covariance (gammapy.modeling.models.gaussianspectralmodel attribute)": [[221, "gammapy.modeling.models.GaussianSpectralModel.covariance", false]], "covariance (gammapy.modeling.models.gaussiantemporalmodel attribute)": [[222, "gammapy.modeling.models.GaussianTemporalModel.covariance", false]], "covariance (gammapy.modeling.models.generalizedgaussianspatialmodel attribute)": [[223, "gammapy.modeling.models.GeneralizedGaussianSpatialModel.covariance", false]], "covariance (gammapy.modeling.models.generalizedgaussiantemporalmodel attribute)": [[224, "gammapy.modeling.models.GeneralizedGaussianTemporalModel.covariance", false]], "covariance (gammapy.modeling.models.lightcurvetemplatetemporalmodel attribute)": [[225, "gammapy.modeling.models.LightCurveTemplateTemporalModel.covariance", false]], "covariance (gammapy.modeling.models.lineartemporalmodel attribute)": [[226, "gammapy.modeling.models.LinearTemporalModel.covariance", false]], "covariance (gammapy.modeling.models.logparabolanormspectralmodel attribute)": [[227, "gammapy.modeling.models.LogParabolaNormSpectralModel.covariance", false]], "covariance (gammapy.modeling.models.logparabolaspectralmodel attribute)": [[228, "gammapy.modeling.models.LogParabolaSpectralModel.covariance", false]], "covariance (gammapy.modeling.models.meyercrabspectralmodel attribute)": [[230, "gammapy.modeling.models.MeyerCrabSpectralModel.covariance", false]], "covariance (gammapy.modeling.models.modelbase attribute)": [[232, "gammapy.modeling.models.ModelBase.covariance", false]], "covariance (gammapy.modeling.models.models attribute)": [[233, "gammapy.modeling.models.Models.covariance", false]], "covariance (gammapy.modeling.models.naimaspectralmodel attribute)": [[234, "gammapy.modeling.models.NaimaSpectralModel.covariance", false]], "covariance (gammapy.modeling.models.piecewisenormspatialmodel attribute)": [[235, "gammapy.modeling.models.PiecewiseNormSpatialModel.covariance", false]], "covariance (gammapy.modeling.models.piecewisenormspectralmodel attribute)": [[236, "gammapy.modeling.models.PiecewiseNormSpectralModel.covariance", false]], "covariance (gammapy.modeling.models.pointspatialmodel attribute)": [[237, "gammapy.modeling.models.PointSpatialModel.covariance", false]], "covariance (gammapy.modeling.models.powerlaw2spectralmodel attribute)": [[238, "gammapy.modeling.models.PowerLaw2SpectralModel.covariance", false]], "covariance (gammapy.modeling.models.powerlawnormspectralmodel attribute)": [[239, "gammapy.modeling.models.PowerLawNormSpectralModel.covariance", false]], "covariance (gammapy.modeling.models.powerlawspectralmodel attribute)": [[240, "gammapy.modeling.models.PowerLawSpectralModel.covariance", false]], "covariance (gammapy.modeling.models.powerlawtemporalmodel attribute)": [[241, "gammapy.modeling.models.PowerLawTemporalModel.covariance", false]], "covariance (gammapy.modeling.models.scalespectralmodel attribute)": [[244, "gammapy.modeling.models.ScaleSpectralModel.covariance", false]], "covariance (gammapy.modeling.models.shell2spatialmodel attribute)": [[245, "gammapy.modeling.models.Shell2SpatialModel.covariance", false]], "covariance (gammapy.modeling.models.shellspatialmodel attribute)": [[246, "gammapy.modeling.models.ShellSpatialModel.covariance", false]], "covariance (gammapy.modeling.models.sinetemporalmodel attribute)": [[247, "gammapy.modeling.models.SineTemporalModel.covariance", false]], "covariance (gammapy.modeling.models.skymodel attribute)": [[248, "gammapy.modeling.models.SkyModel.covariance", false]], "covariance (gammapy.modeling.models.smoothbrokenpowerlawspectralmodel attribute)": [[249, "gammapy.modeling.models.SmoothBrokenPowerLawSpectralModel.covariance", false]], "covariance (gammapy.modeling.models.spatialmodel attribute)": [[250, "gammapy.modeling.models.SpatialModel.covariance", false]], "covariance (gammapy.modeling.models.spectralmodel attribute)": [[251, "gammapy.modeling.models.SpectralModel.covariance", false]], "covariance (gammapy.modeling.models.superexpcutoffpowerlaw3fglspectralmodel attribute)": [[252, "gammapy.modeling.models.SuperExpCutoffPowerLaw3FGLSpectralModel.covariance", false]], "covariance (gammapy.modeling.models.superexpcutoffpowerlaw4fgldr3spectralmodel attribute)": [[253, "gammapy.modeling.models.SuperExpCutoffPowerLaw4FGLDR3SpectralModel.covariance", false]], "covariance (gammapy.modeling.models.superexpcutoffpowerlaw4fglspectralmodel attribute)": [[254, "gammapy.modeling.models.SuperExpCutoffPowerLaw4FGLSpectralModel.covariance", false]], "covariance (gammapy.modeling.models.templatendspatialmodel attribute)": [[256, "gammapy.modeling.models.TemplateNDSpatialModel.covariance", false]], "covariance (gammapy.modeling.models.templatendspectralmodel attribute)": [[257, "gammapy.modeling.models.TemplateNDSpectralModel.covariance", false]], "covariance (gammapy.modeling.models.templatenpredmodel attribute)": [[258, "gammapy.modeling.models.TemplateNPredModel.covariance", false]], "covariance (gammapy.modeling.models.templatephasecurvetemporalmodel attribute)": [[259, "gammapy.modeling.models.TemplatePhaseCurveTemporalModel.covariance", false]], "covariance (gammapy.modeling.models.templatespatialmodel attribute)": [[260, "gammapy.modeling.models.TemplateSpatialModel.covariance", false]], "covariance (gammapy.modeling.models.templatespectralmodel attribute)": [[261, "gammapy.modeling.models.TemplateSpectralModel.covariance", false]], "covariance (gammapy.modeling.models.temporalmodel attribute)": [[262, "gammapy.modeling.models.TemporalModel.covariance", false]], "covariance() (gammapy.modeling.fit method)": [[200, "gammapy.modeling.Fit.covariance", false]], "create() (gammapy.data.gti class method)": [[82, "gammapy.data.GTI.create", false]], "create() (gammapy.data.observation class method)": [[84, "gammapy.data.Observation.create", false]], "create() (gammapy.datasets.mapdataset class method)": [[97, "gammapy.datasets.MapDataset.create", false]], "create() (gammapy.datasets.mapdatasetonoff class method)": [[100, "gammapy.datasets.MapDatasetOnOff.create", false]], "create() (gammapy.datasets.spectrumdataset class method)": [[104, "gammapy.datasets.SpectrumDataset.create", false]], "create() (gammapy.datasets.spectrumdatasetonoff class method)": [[105, "gammapy.datasets.SpectrumDatasetOnOff.create", false]], "create() (gammapy.maps.hpxgeom class method)": [[182, "gammapy.maps.HpxGeom.create", false]], "create() (gammapy.maps.hpxmap class method)": [[183, "gammapy.maps.HpxMap.create", false]], "create() (gammapy.maps.hpxndmap class method)": [[184, "gammapy.maps.HpxNDMap.create", false]], "create() (gammapy.maps.map static method)": [[186, "gammapy.maps.Map.create", false]], "create() (gammapy.maps.mapcoord class method)": [[189, "gammapy.maps.MapCoord.create", false]], "create() (gammapy.maps.regiongeom class method)": [[191, "gammapy.maps.RegionGeom.create", false]], "create() (gammapy.maps.regionndmap class method)": [[192, "gammapy.maps.RegionNDMap.create", false]], "create() (gammapy.maps.wcsgeom class method)": [[194, "gammapy.maps.WcsGeom.create", false]], "create() (gammapy.maps.wcsmap class method)": [[195, "gammapy.maps.WcsMap.create", false]], "create() (gammapy.maps.wcsndmap class method)": [[196, "gammapy.maps.WcsNDMap.create", false]], "create() (gammapy.modeling.models.model static method)": [[231, "gammapy.modeling.models.Model.create", false]], "create() (gammapy.modeling.models.skymodel class method)": [[248, "gammapy.modeling.models.SkyModel.create", false]], "create_cosmic_ray_spectral_model() (in module gammapy.modeling.models)": [[263, "gammapy.modeling.models.create_cosmic_ray_spectral_model", false]], "create_crab_spectral_model() (in module gammapy.modeling.models)": [[264, "gammapy.modeling.models.create_crab_spectral_model", false]], "create_fermi_isotropic_diffuse_model() (in module gammapy.modeling.models)": [[265, "gammapy.modeling.models.create_fermi_isotropic_diffuse_model", false]], "create_map_dataset_from_observation() (in module gammapy.datasets)": [[107, "gammapy.datasets.create_map_dataset_from_observation", false]], "create_map_dataset_geoms() (in module gammapy.datasets)": [[108, "gammapy.datasets.create_map_dataset_geoms", false]], "crop() (gammapy.maps.geom method)": [[181, "gammapy.maps.Geom.crop", false]], "crop() (gammapy.maps.hpxgeom method)": [[182, "gammapy.maps.HpxGeom.crop", false]], "crop() (gammapy.maps.hpxmap method)": [[183, "gammapy.maps.HpxMap.crop", false]], "crop() (gammapy.maps.hpxndmap method)": [[184, "gammapy.maps.HpxNDMap.crop", false]], "crop() (gammapy.maps.map method)": [[186, "gammapy.maps.Map.crop", false]], "crop() (gammapy.maps.regiongeom method)": [[191, "gammapy.maps.RegionGeom.crop", false]], "crop() (gammapy.maps.regionndmap method)": [[192, "gammapy.maps.RegionNDMap.crop", false]], "crop() (gammapy.maps.wcsgeom method)": [[194, "gammapy.maps.WcsGeom.crop", false]], "crop() (gammapy.maps.wcsmap method)": [[195, "gammapy.maps.WcsMap.crop", false]], "crop() (gammapy.maps.wcsndmap method)": [[196, "gammapy.maps.WcsNDMap.crop", false]], "cstat() (in module gammapy.stats)": [[281, "gammapy.stats.cstat", false]], "cumsum() (gammapy.irf.background2d method)": [[137, "gammapy.irf.Background2D.cumsum", false]], "cumsum() (gammapy.irf.background3d method)": [[138, "gammapy.irf.Background3D.cumsum", false]], "cumsum() (gammapy.irf.backgroundirf method)": [[139, "gammapy.irf.BackgroundIRF.cumsum", false]], "cumsum() (gammapy.irf.edispkernel method)": [[140, "gammapy.irf.EDispKernel.cumsum", false]], "cumsum() (gammapy.irf.effectiveareatable2d method)": [[143, "gammapy.irf.EffectiveAreaTable2D.cumsum", false]], "cumsum() (gammapy.irf.energydependentmultigausspsf method)": [[144, "gammapy.irf.EnergyDependentMultiGaussPSF.cumsum", false]], "cumsum() (gammapy.irf.energydispersion2d method)": [[145, "gammapy.irf.EnergyDispersion2D.cumsum", false]], "cumsum() (gammapy.irf.irf method)": [[147, "gammapy.irf.IRF.cumsum", false]], "cumsum() (gammapy.irf.parametricpsf method)": [[154, "gammapy.irf.ParametricPSF.cumsum", false]], "cumsum() (gammapy.irf.psf3d method)": [[150, "gammapy.irf.PSF3D.cumsum", false]], "cumsum() (gammapy.irf.psfking method)": [[152, "gammapy.irf.PSFKing.cumsum", false]], "cumsum() (gammapy.irf.radmax2d method)": [[155, "gammapy.irf.RadMax2D.cumsum", false]], "cumsum() (gammapy.maps.hpxmap method)": [[183, "gammapy.maps.HpxMap.cumsum", false]], "cumsum() (gammapy.maps.hpxndmap method)": [[184, "gammapy.maps.HpxNDMap.cumsum", false]], "cumsum() (gammapy.maps.map method)": [[186, "gammapy.maps.Map.cumsum", false]], "cumsum() (gammapy.maps.regionndmap method)": [[192, "gammapy.maps.RegionNDMap.cumsum", false]], "cumsum() (gammapy.maps.wcsmap method)": [[195, "gammapy.maps.WcsMap.cumsum", false]], "cumsum() (gammapy.maps.wcsndmap method)": [[196, "gammapy.maps.WcsNDMap.cumsum", false]], "cutout() (gammapy.datasets.mapdataset method)": [[97, "gammapy.datasets.MapDataset.cutout", false]], "cutout() (gammapy.datasets.mapdatasetonoff method)": [[100, "gammapy.datasets.MapDatasetOnOff.cutout", false]], "cutout() (gammapy.datasets.spectrumdataset method)": [[104, "gammapy.datasets.SpectrumDataset.cutout", false]], "cutout() (gammapy.datasets.spectrumdatasetonoff method)": [[105, "gammapy.datasets.SpectrumDatasetOnOff.cutout", false]], "cutout() (gammapy.irf.edispkernelmap method)": [[141, "gammapy.irf.EDispKernelMap.cutout", false]], "cutout() (gammapy.irf.edispmap method)": [[142, "gammapy.irf.EDispMap.cutout", false]], "cutout() (gammapy.irf.irfmap method)": [[148, "gammapy.irf.IRFMap.cutout", false]], "cutout() (gammapy.irf.psfmap method)": [[153, "gammapy.irf.PSFMap.cutout", false]], "cutout() (gammapy.irf.recopsfmap method)": [[156, "gammapy.irf.RecoPSFMap.cutout", false]], "cutout() (gammapy.maps.hpxgeom method)": [[182, "gammapy.maps.HpxGeom.cutout", false]], "cutout() (gammapy.maps.hpxndmap method)": [[184, "gammapy.maps.HpxNDMap.cutout", false]], "cutout() (gammapy.maps.regionndmap method)": [[192, "gammapy.maps.RegionNDMap.cutout", false]], "cutout() (gammapy.maps.wcsgeom method)": [[194, "gammapy.maps.WcsGeom.cutout", false]], "cutout() (gammapy.maps.wcsndmap method)": [[196, "gammapy.maps.WcsNDMap.cutout", false]], "cutout() (gammapy.modeling.models.templatenpredmodel method)": [[258, "gammapy.modeling.models.TemplateNPredModel.cutout", false]], "cutout_and_mask_region() (gammapy.maps.wcsndmap method)": [[196, "gammapy.maps.WcsNDMap.cutout_and_mask_region", false]], "cutout_slices() (gammapy.maps.wcsgeom method)": [[194, "gammapy.maps.WcsGeom.cutout_slices", false]], "d_sun_to_galactic_center (in module gammapy.utils.coordinates)": [[290, "gammapy.utils.coordinates.D_SUN_TO_GALACTIC_CENTER", false]], "darkmatterannihilationspectralmodel (class in gammapy.astro.darkmatter)": [[19, "gammapy.astro.darkmatter.DarkMatterAnnihilationSpectralModel", false]], "darkmatterdecayspectralmodel (class in gammapy.astro.darkmatter)": [[20, "gammapy.astro.darkmatter.DarkMatterDecaySpectralModel", false]], "data (gammapy.irf.background2d attribute)": [[137, "gammapy.irf.Background2D.data", false]], "data (gammapy.irf.background3d attribute)": [[138, "gammapy.irf.Background3D.data", false]], "data (gammapy.irf.backgroundirf attribute)": [[139, "gammapy.irf.BackgroundIRF.data", false]], "data (gammapy.irf.edispkernel attribute)": [[140, "gammapy.irf.EDispKernel.data", false]], "data (gammapy.irf.effectiveareatable2d attribute)": [[143, "gammapy.irf.EffectiveAreaTable2D.data", false]], "data (gammapy.irf.energydependentmultigausspsf attribute)": [[144, "gammapy.irf.EnergyDependentMultiGaussPSF.data", false]], "data (gammapy.irf.energydispersion2d attribute)": [[145, "gammapy.irf.EnergyDispersion2D.data", false]], "data (gammapy.irf.irf attribute)": [[147, "gammapy.irf.IRF.data", false]], "data (gammapy.irf.parametricpsf attribute)": [[154, "gammapy.irf.ParametricPSF.data", false]], "data (gammapy.irf.psf3d attribute)": [[150, "gammapy.irf.PSF3D.data", false]], "data (gammapy.irf.psfkernel attribute)": [[151, "gammapy.irf.PSFKernel.data", false]], "data (gammapy.irf.psfking attribute)": [[152, "gammapy.irf.PSFKing.data", false]], "data (gammapy.irf.radmax2d attribute)": [[155, "gammapy.irf.RadMax2D.data", false]], "data (gammapy.maps.hpxmap attribute)": [[183, "gammapy.maps.HpxMap.data", false]], "data (gammapy.maps.hpxndmap attribute)": [[184, "gammapy.maps.HpxNDMap.data", false]], "data (gammapy.maps.map attribute)": [[186, "gammapy.maps.Map.data", false]], "data (gammapy.maps.regionndmap attribute)": [[192, "gammapy.maps.RegionNDMap.data", false]], "data (gammapy.maps.wcsmap attribute)": [[195, "gammapy.maps.WcsMap.data", false]], "data (gammapy.maps.wcsndmap attribute)": [[196, "gammapy.maps.WcsNDMap.data", false]], "data (gammapy.modeling.covariance attribute)": [[199, "gammapy.modeling.Covariance.data", false]], "data_nbytes() (gammapy.maps.geom method)": [[181, "gammapy.maps.Geom.data_nbytes", false]], "data_nbytes() (gammapy.maps.hpxgeom method)": [[182, "gammapy.maps.HpxGeom.data_nbytes", false]], "data_nbytes() (gammapy.maps.regiongeom method)": [[191, "gammapy.maps.RegionGeom.data_nbytes", false]], "data_nbytes() (gammapy.maps.wcsgeom method)": [[194, "gammapy.maps.WcsGeom.data_nbytes", false]], "data_shape (gammapy.datasets.mapdataset attribute)": [[97, "gammapy.datasets.MapDataset.data_shape", false]], "data_shape (gammapy.datasets.mapdatasetonoff attribute)": [[100, "gammapy.datasets.MapDatasetOnOff.data_shape", false]], "data_shape (gammapy.datasets.spectrumdataset attribute)": [[104, "gammapy.datasets.SpectrumDataset.data_shape", false]], "data_shape (gammapy.datasets.spectrumdatasetonoff attribute)": [[105, "gammapy.datasets.SpectrumDatasetOnOff.data_shape", false]], "data_shape (gammapy.maps.geom attribute)": [[181, "gammapy.maps.Geom.data_shape", false]], "data_shape (gammapy.maps.hpxgeom attribute)": [[182, "gammapy.maps.HpxGeom.data_shape", false]], "data_shape (gammapy.maps.regiongeom attribute)": [[191, "gammapy.maps.RegionGeom.data_shape", false]], "data_shape (gammapy.maps.wcsgeom attribute)": [[194, "gammapy.maps.WcsGeom.data_shape", false]], "data_shape() (gammapy.datasets.fluxpointsdataset method)": [[96, "gammapy.datasets.FluxPointsDataset.data_shape", false]], "data_shape_axes (gammapy.maps.hpxgeom attribute)": [[182, "gammapy.maps.HpxGeom.data_shape_axes", false]], "data_shape_axes (gammapy.maps.regiongeom attribute)": [[191, "gammapy.maps.RegionGeom.data_shape_axes", false]], "data_shape_axes (gammapy.maps.wcsgeom attribute)": [[194, "gammapy.maps.WcsGeom.data_shape_axes", false]], "data_shape_image (gammapy.maps.wcsgeom attribute)": [[194, "gammapy.maps.WcsGeom.data_shape_image", false]], "dataset": [[554, "term-Dataset", true]], "dataset (class in gammapy.datasets)": [[94, "gammapy.datasets.Dataset", false]], "dataset_registry (in module gammapy.datasets)": [[93, "gammapy.datasets.DATASET_REGISTRY", false]], "datasetmodels (class in gammapy.modeling.models)": [[211, "gammapy.modeling.models.DatasetModels", false]], "datasets (class in gammapy.datasets)": [[95, "gammapy.datasets.Datasets", false]], "datasetsmaker (class in gammapy.makers)": [[159, "gammapy.makers.DatasetsMaker", false]], "datastore (class in gammapy.data)": [[78, "gammapy.data.DataStore", false]], "deepcopy() (gammapy.astro.population.casebattacharya1998 method)": [[28, "gammapy.astro.population.CaseBattacharya1998.deepcopy", false]], "deepcopy() (gammapy.astro.population.exponential method)": [[29, "gammapy.astro.population.Exponential.deepcopy", false]], "deepcopy() (gammapy.astro.population.faucherkaspi2006 method)": [[30, "gammapy.astro.population.FaucherKaspi2006.deepcopy", false]], "deepcopy() (gammapy.astro.population.faucherkaspi2006velocitybimodal method)": [[31, "gammapy.astro.population.FaucherKaspi2006VelocityBimodal.deepcopy", false]], "deepcopy() (gammapy.astro.population.faucherkaspi2006velocitymaxwellian method)": [[32, "gammapy.astro.population.FaucherKaspi2006VelocityMaxwellian.deepcopy", false]], "deepcopy() (gammapy.astro.population.lorimer2006 method)": [[35, "gammapy.astro.population.Lorimer2006.deepcopy", false]], "deepcopy() (gammapy.astro.population.paczynski1990 method)": [[36, "gammapy.astro.population.Paczynski1990.deepcopy", false]], "deepcopy() (gammapy.astro.population.paczynski1990velocity method)": [[37, "gammapy.astro.population.Paczynski1990Velocity.deepcopy", false]], "deepcopy() (gammapy.astro.population.yusifovkucuk2004 method)": [[39, "gammapy.astro.population.YusifovKucuk2004.deepcopy", false]], "deepcopy() (gammapy.astro.population.yusifovkucuk2004b method)": [[40, "gammapy.astro.population.YusifovKucuk2004B.deepcopy", false]], "default_alpha (gammapy.astro.darkmatter.einastoprofile attribute)": [[21, "gammapy.astro.darkmatter.EinastoProfile.DEFAULT_ALPHA", false]], "default_alpha (gammapy.astro.darkmatter.zhaoprofile attribute)": [[27, "gammapy.astro.darkmatter.ZhaoProfile.DEFAULT_ALPHA", false]], "default_beta (gammapy.astro.darkmatter.zhaoprofile attribute)": [[27, "gammapy.astro.darkmatter.ZhaoProfile.DEFAULT_BETA", false]], "default_gamma (gammapy.astro.darkmatter.zhaoprofile attribute)": [[27, "gammapy.astro.darkmatter.ZhaoProfile.DEFAULT_GAMMA", false]], "default_hdu_table (gammapy.data.datastore attribute)": [[78, "gammapy.data.DataStore.DEFAULT_HDU_TABLE", false]], "default_interp_kwargs (gammapy.irf.background2d attribute)": [[137, "gammapy.irf.Background2D.default_interp_kwargs", false]], "default_interp_kwargs (gammapy.irf.background3d attribute)": [[138, "gammapy.irf.Background3D.default_interp_kwargs", false]], "default_interp_kwargs (gammapy.irf.backgroundirf attribute)": [[139, "gammapy.irf.BackgroundIRF.default_interp_kwargs", false]], "default_interp_kwargs (gammapy.irf.edispkernel attribute)": [[140, "gammapy.irf.EDispKernel.default_interp_kwargs", false]], "default_interp_kwargs (gammapy.irf.effectiveareatable2d attribute)": [[143, "gammapy.irf.EffectiveAreaTable2D.default_interp_kwargs", false]], "default_interp_kwargs (gammapy.irf.energydependentmultigausspsf attribute)": [[144, "gammapy.irf.EnergyDependentMultiGaussPSF.default_interp_kwargs", false]], "default_interp_kwargs (gammapy.irf.energydispersion2d attribute)": [[145, "gammapy.irf.EnergyDispersion2D.default_interp_kwargs", false]], "default_interp_kwargs (gammapy.irf.irf attribute)": [[147, "gammapy.irf.IRF.default_interp_kwargs", false]], "default_interp_kwargs (gammapy.irf.parametricpsf attribute)": [[154, "gammapy.irf.ParametricPSF.default_interp_kwargs", false]], "default_interp_kwargs (gammapy.irf.psf3d attribute)": [[150, "gammapy.irf.PSF3D.default_interp_kwargs", false]], "default_interp_kwargs (gammapy.irf.psfking attribute)": [[152, "gammapy.irf.PSFKing.default_interp_kwargs", false]], "default_interp_kwargs (gammapy.irf.radmax2d attribute)": [[155, "gammapy.irf.RadMax2D.default_interp_kwargs", false]], "default_obs_table (gammapy.data.datastore attribute)": [[78, "gammapy.data.DataStore.DEFAULT_OBS_TABLE", false]], "default_parameters (gammapy.astro.darkmatter.darkmatterannihilationspectralmodel attribute)": [[19, "gammapy.astro.darkmatter.DarkMatterAnnihilationSpectralModel.default_parameters", false]], "default_parameters (gammapy.astro.darkmatter.darkmatterdecayspectralmodel attribute)": [[20, "gammapy.astro.darkmatter.DarkMatterDecaySpectralModel.default_parameters", false]], "default_parameters (gammapy.astro.darkmatter.primaryflux attribute)": [[26, "gammapy.astro.darkmatter.PrimaryFlux.default_parameters", false]], "default_parameters (gammapy.modeling.models.brokenpowerlawspectralmodel attribute)": [[205, "gammapy.modeling.models.BrokenPowerLawSpectralModel.default_parameters", false]], "default_parameters (gammapy.modeling.models.compoundspectralmodel attribute)": [[206, "gammapy.modeling.models.CompoundSpectralModel.default_parameters", false]], "default_parameters (gammapy.modeling.models.constantfluxspatialmodel attribute)": [[207, "gammapy.modeling.models.ConstantFluxSpatialModel.default_parameters", false]], "default_parameters (gammapy.modeling.models.constantspatialmodel attribute)": [[208, "gammapy.modeling.models.ConstantSpatialModel.default_parameters", false]], "default_parameters (gammapy.modeling.models.constantspectralmodel attribute)": [[209, "gammapy.modeling.models.ConstantSpectralModel.default_parameters", false]], "default_parameters (gammapy.modeling.models.constanttemporalmodel attribute)": [[210, "gammapy.modeling.models.ConstantTemporalModel.default_parameters", false]], "default_parameters (gammapy.modeling.models.diskspatialmodel attribute)": [[212, "gammapy.modeling.models.DiskSpatialModel.default_parameters", false]], "default_parameters (gammapy.modeling.models.eblabsorptionnormspectralmodel attribute)": [[213, "gammapy.modeling.models.EBLAbsorptionNormSpectralModel.default_parameters", false]], "default_parameters (gammapy.modeling.models.expcutoffpowerlaw3fglspectralmodel attribute)": [[215, "gammapy.modeling.models.ExpCutoffPowerLaw3FGLSpectralModel.default_parameters", false]], "default_parameters (gammapy.modeling.models.expcutoffpowerlawnormspectralmodel attribute)": [[216, "gammapy.modeling.models.ExpCutoffPowerLawNormSpectralModel.default_parameters", false]], "default_parameters (gammapy.modeling.models.expcutoffpowerlawspectralmodel attribute)": [[217, "gammapy.modeling.models.ExpCutoffPowerLawSpectralModel.default_parameters", false]], "default_parameters (gammapy.modeling.models.expdecaytemporalmodel attribute)": [[218, "gammapy.modeling.models.ExpDecayTemporalModel.default_parameters", false]], "default_parameters (gammapy.modeling.models.fovbackgroundmodel attribute)": [[219, "gammapy.modeling.models.FoVBackgroundModel.default_parameters", false]], "default_parameters (gammapy.modeling.models.gaussianspatialmodel attribute)": [[220, "gammapy.modeling.models.GaussianSpatialModel.default_parameters", false]], "default_parameters (gammapy.modeling.models.gaussianspectralmodel attribute)": [[221, "gammapy.modeling.models.GaussianSpectralModel.default_parameters", false]], "default_parameters (gammapy.modeling.models.gaussiantemporalmodel attribute)": [[222, "gammapy.modeling.models.GaussianTemporalModel.default_parameters", false]], "default_parameters (gammapy.modeling.models.generalizedgaussianspatialmodel attribute)": [[223, "gammapy.modeling.models.GeneralizedGaussianSpatialModel.default_parameters", false]], "default_parameters (gammapy.modeling.models.generalizedgaussiantemporalmodel attribute)": [[224, "gammapy.modeling.models.GeneralizedGaussianTemporalModel.default_parameters", false]], "default_parameters (gammapy.modeling.models.lightcurvetemplatetemporalmodel attribute)": [[225, "gammapy.modeling.models.LightCurveTemplateTemporalModel.default_parameters", false]], "default_parameters (gammapy.modeling.models.lineartemporalmodel attribute)": [[226, "gammapy.modeling.models.LinearTemporalModel.default_parameters", false]], "default_parameters (gammapy.modeling.models.logparabolanormspectralmodel attribute)": [[227, "gammapy.modeling.models.LogParabolaNormSpectralModel.default_parameters", false]], "default_parameters (gammapy.modeling.models.logparabolaspectralmodel attribute)": [[228, "gammapy.modeling.models.LogParabolaSpectralModel.default_parameters", false]], "default_parameters (gammapy.modeling.models.meyercrabspectralmodel attribute)": [[230, "gammapy.modeling.models.MeyerCrabSpectralModel.default_parameters", false]], "default_parameters (gammapy.modeling.models.naimaspectralmodel attribute)": [[234, "gammapy.modeling.models.NaimaSpectralModel.default_parameters", false]], "default_parameters (gammapy.modeling.models.piecewisenormspatialmodel attribute)": [[235, "gammapy.modeling.models.PiecewiseNormSpatialModel.default_parameters", false]], "default_parameters (gammapy.modeling.models.piecewisenormspectralmodel attribute)": [[236, "gammapy.modeling.models.PiecewiseNormSpectralModel.default_parameters", false]], "default_parameters (gammapy.modeling.models.pointspatialmodel attribute)": [[237, "gammapy.modeling.models.PointSpatialModel.default_parameters", false]], "default_parameters (gammapy.modeling.models.powerlaw2spectralmodel attribute)": [[238, "gammapy.modeling.models.PowerLaw2SpectralModel.default_parameters", false]], "default_parameters (gammapy.modeling.models.powerlawnormspectralmodel attribute)": [[239, "gammapy.modeling.models.PowerLawNormSpectralModel.default_parameters", false]], "default_parameters (gammapy.modeling.models.powerlawspectralmodel attribute)": [[240, "gammapy.modeling.models.PowerLawSpectralModel.default_parameters", false]], "default_parameters (gammapy.modeling.models.powerlawtemporalmodel attribute)": [[241, "gammapy.modeling.models.PowerLawTemporalModel.default_parameters", false]], "default_parameters (gammapy.modeling.models.scalespectralmodel attribute)": [[244, "gammapy.modeling.models.ScaleSpectralModel.default_parameters", false]], "default_parameters (gammapy.modeling.models.shell2spatialmodel attribute)": [[245, "gammapy.modeling.models.Shell2SpatialModel.default_parameters", false]], "default_parameters (gammapy.modeling.models.shellspatialmodel attribute)": [[246, "gammapy.modeling.models.ShellSpatialModel.default_parameters", false]], "default_parameters (gammapy.modeling.models.sinetemporalmodel attribute)": [[247, "gammapy.modeling.models.SineTemporalModel.default_parameters", false]], "default_parameters (gammapy.modeling.models.skymodel attribute)": [[248, "gammapy.modeling.models.SkyModel.default_parameters", false]], "default_parameters (gammapy.modeling.models.smoothbrokenpowerlawspectralmodel attribute)": [[249, "gammapy.modeling.models.SmoothBrokenPowerLawSpectralModel.default_parameters", false]], "default_parameters (gammapy.modeling.models.spatialmodel attribute)": [[250, "gammapy.modeling.models.SpatialModel.default_parameters", false]], "default_parameters (gammapy.modeling.models.spectralmodel attribute)": [[251, "gammapy.modeling.models.SpectralModel.default_parameters", false]], "default_parameters (gammapy.modeling.models.superexpcutoffpowerlaw3fglspectralmodel attribute)": [[252, "gammapy.modeling.models.SuperExpCutoffPowerLaw3FGLSpectralModel.default_parameters", false]], "default_parameters (gammapy.modeling.models.superexpcutoffpowerlaw4fgldr3spectralmodel attribute)": [[253, "gammapy.modeling.models.SuperExpCutoffPowerLaw4FGLDR3SpectralModel.default_parameters", false]], "default_parameters (gammapy.modeling.models.superexpcutoffpowerlaw4fglspectralmodel attribute)": [[254, "gammapy.modeling.models.SuperExpCutoffPowerLaw4FGLSpectralModel.default_parameters", false]], "default_parameters (gammapy.modeling.models.templatendspatialmodel attribute)": [[256, "gammapy.modeling.models.TemplateNDSpatialModel.default_parameters", false]], "default_parameters (gammapy.modeling.models.templatendspectralmodel attribute)": [[257, "gammapy.modeling.models.TemplateNDSpectralModel.default_parameters", false]], "default_parameters (gammapy.modeling.models.templatenpredmodel attribute)": [[258, "gammapy.modeling.models.TemplateNPredModel.default_parameters", false]], "default_parameters (gammapy.modeling.models.templatephasecurvetemporalmodel attribute)": [[259, "gammapy.modeling.models.TemplatePhaseCurveTemporalModel.default_parameters", false]], "default_parameters (gammapy.modeling.models.templatespatialmodel attribute)": [[260, "gammapy.modeling.models.TemplateSpatialModel.default_parameters", false]], "default_parameters (gammapy.modeling.models.templatespectralmodel attribute)": [[261, "gammapy.modeling.models.TemplateSpectralModel.default_parameters", false]], "default_parameters (gammapy.modeling.models.temporalmodel attribute)": [[262, "gammapy.modeling.models.TemporalModel.default_parameters", false]], "default_scale_radius (gammapy.astro.darkmatter.burkertprofile attribute)": [[17, "gammapy.astro.darkmatter.BurkertProfile.DEFAULT_SCALE_RADIUS", false]], "default_scale_radius (gammapy.astro.darkmatter.einastoprofile attribute)": [[21, "gammapy.astro.darkmatter.EinastoProfile.DEFAULT_SCALE_RADIUS", false]], "default_scale_radius (gammapy.astro.darkmatter.isothermalprofile attribute)": [[22, "gammapy.astro.darkmatter.IsothermalProfile.DEFAULT_SCALE_RADIUS", false]], "default_scale_radius (gammapy.astro.darkmatter.mooreprofile attribute)": [[24, "gammapy.astro.darkmatter.MooreProfile.DEFAULT_SCALE_RADIUS", false]], "default_scale_radius (gammapy.astro.darkmatter.nfwprofile attribute)": [[25, "gammapy.astro.darkmatter.NFWProfile.DEFAULT_SCALE_RADIUS", false]], "default_scale_radius (gammapy.astro.darkmatter.zhaoprofile attribute)": [[27, "gammapy.astro.darkmatter.ZhaoProfile.DEFAULT_SCALE_RADIUS", false]], "default_unit (gammapy.irf.background2d attribute)": [[137, "gammapy.irf.Background2D.default_unit", false]], "default_unit (gammapy.irf.background3d attribute)": [[138, "gammapy.irf.Background3D.default_unit", false]], "default_unit (gammapy.irf.effectiveareatable2d attribute)": [[143, "gammapy.irf.EffectiveAreaTable2D.default_unit", false]], "default_unit (gammapy.irf.energydispersion2d attribute)": [[145, "gammapy.irf.EnergyDispersion2D.default_unit", false]], "default_unit (gammapy.irf.psf3d attribute)": [[150, "gammapy.irf.PSF3D.default_unit", false]], "default_unit (gammapy.irf.radmax2d attribute)": [[155, "gammapy.irf.RadMax2D.default_unit", false]], "delete_interval() (gammapy.data.gti method)": [[82, "gammapy.data.GTI.delete_interval", false]], "description (gammapy.catalog.sourcecatalog1lhaaso attribute)": [[57, "gammapy.catalog.SourceCatalog1LHAASO.description", false]], "description (gammapy.catalog.sourcecatalog2fhl attribute)": [[58, "gammapy.catalog.SourceCatalog2FHL.description", false]], "description (gammapy.catalog.sourcecatalog2hwc attribute)": [[59, "gammapy.catalog.SourceCatalog2HWC.description", false]], "description (gammapy.catalog.sourcecatalog3fgl attribute)": [[60, "gammapy.catalog.SourceCatalog3FGL.description", false]], "description (gammapy.catalog.sourcecatalog3fhl attribute)": [[61, "gammapy.catalog.SourceCatalog3FHL.description", false]], "description (gammapy.catalog.sourcecatalog3hwc attribute)": [[62, "gammapy.catalog.SourceCatalog3HWC.description", false]], "description (gammapy.catalog.sourcecatalog4fgl attribute)": [[63, "gammapy.catalog.SourceCatalog4FGL.description", false]], "description (gammapy.catalog.sourcecataloggammacat attribute)": [[64, "gammapy.catalog.SourceCatalogGammaCat.description", false]], "description (gammapy.catalog.sourcecataloghgps attribute)": [[65, "gammapy.catalog.SourceCatalogHGPS.description", false]], "description() (gammapy.catalog.sourcecatalog class method)": [[56, "gammapy.catalog.SourceCatalog.description", false]], "dict() (gammapy.analysis.analysisconfig method)": [[16, "gammapy.analysis.AnalysisConfig.dict", false]], "dict() (gammapy.data.eventlistmetadata method)": [[80, "gammapy.data.EventListMetaData.dict", false]], "dict() (gammapy.datasets.mapdatasetmetadata method)": [[99, "gammapy.datasets.MapDatasetMetaData.dict", false]], "dict() (gammapy.estimators.fluxmetadata method)": [[118, "gammapy.estimators.FluxMetaData.dict", false]], "diskspatialmodel (class in gammapy.modeling.models)": [[212, "gammapy.modeling.models.DiskSpatialModel", false]], "distance_gc (gammapy.astro.darkmatter.burkertprofile attribute)": [[17, "gammapy.astro.darkmatter.BurkertProfile.DISTANCE_GC", false]], "distance_gc (gammapy.astro.darkmatter.dmprofile attribute)": [[18, "gammapy.astro.darkmatter.DMProfile.DISTANCE_GC", false]], "distance_gc (gammapy.astro.darkmatter.einastoprofile attribute)": [[21, "gammapy.astro.darkmatter.EinastoProfile.DISTANCE_GC", false]], "distance_gc (gammapy.astro.darkmatter.isothermalprofile attribute)": [[22, "gammapy.astro.darkmatter.IsothermalProfile.DISTANCE_GC", false]], "distance_gc (gammapy.astro.darkmatter.mooreprofile attribute)": [[24, "gammapy.astro.darkmatter.MooreProfile.DISTANCE_GC", false]], "distance_gc (gammapy.astro.darkmatter.nfwprofile attribute)": [[25, "gammapy.astro.darkmatter.NFWProfile.DISTANCE_GC", false]], "distance_gc (gammapy.astro.darkmatter.zhaoprofile attribute)": [[27, "gammapy.astro.darkmatter.ZhaoProfile.DISTANCE_GC", false]], "dl3": [[554, "term-DL3", true]], "dl4": [[554, "term-DL4", true]], "dl5": [[554, "term-DL5", true]], "dl6": [[554, "term-DL6", true]], "dmprofile (class in gammapy.astro.darkmatter)": [[18, "gammapy.astro.darkmatter.DMProfile", false]], "dnde (gammapy.estimators.fluxmaps attribute)": [[117, "gammapy.estimators.FluxMaps.dnde", false]], "dnde (gammapy.estimators.fluxpoints attribute)": [[119, "gammapy.estimators.FluxPoints.dnde", false]], "dnde_err (gammapy.estimators.fluxmaps attribute)": [[117, "gammapy.estimators.FluxMaps.dnde_err", false]], "dnde_err (gammapy.estimators.fluxpoints attribute)": [[119, "gammapy.estimators.FluxPoints.dnde_err", false]], "dnde_errn (gammapy.estimators.fluxmaps attribute)": [[117, "gammapy.estimators.FluxMaps.dnde_errn", false]], "dnde_errn (gammapy.estimators.fluxpoints attribute)": [[119, "gammapy.estimators.FluxPoints.dnde_errn", false]], "dnde_errp (gammapy.estimators.fluxmaps attribute)": [[117, "gammapy.estimators.FluxMaps.dnde_errp", false]], "dnde_errp (gammapy.estimators.fluxpoints attribute)": [[119, "gammapy.estimators.FluxPoints.dnde_errp", false]], "dnde_ref (gammapy.estimators.fluxmaps attribute)": [[117, "gammapy.estimators.FluxMaps.dnde_ref", false]], "dnde_ref (gammapy.estimators.fluxpoints attribute)": [[119, "gammapy.estimators.FluxPoints.dnde_ref", false]], "dnde_ul (gammapy.estimators.fluxmaps attribute)": [[117, "gammapy.estimators.FluxMaps.dnde_ul", false]], "dnde_ul (gammapy.estimators.fluxpoints attribute)": [[119, "gammapy.estimators.FluxPoints.dnde_ul", false]], "dot() (gammapy.maps.hpxmap method)": [[183, "gammapy.maps.HpxMap.dot", false]], "dot() (gammapy.maps.hpxndmap method)": [[184, "gammapy.maps.HpxNDMap.dot", false]], "dot() (gammapy.maps.map method)": [[186, "gammapy.maps.Map.dot", false]], "dot() (gammapy.maps.regionndmap method)": [[192, "gammapy.maps.RegionNDMap.dot", false]], "dot() (gammapy.maps.wcsmap method)": [[195, "gammapy.maps.WcsMap.dot", false]], "dot() (gammapy.maps.wcsndmap method)": [[196, "gammapy.maps.WcsNDMap.dot", false]], "downsample() (gammapy.datasets.mapdataset method)": [[97, "gammapy.datasets.MapDataset.downsample", false]], "downsample() (gammapy.datasets.mapdatasetonoff method)": [[100, "gammapy.datasets.MapDatasetOnOff.downsample", false]], "downsample() (gammapy.datasets.spectrumdataset method)": [[104, "gammapy.datasets.SpectrumDataset.downsample", false]], "downsample() (gammapy.datasets.spectrumdatasetonoff method)": [[105, "gammapy.datasets.SpectrumDatasetOnOff.downsample", false]], "downsample() (gammapy.irf.edispkernelmap method)": [[141, "gammapy.irf.EDispKernelMap.downsample", false]], "downsample() (gammapy.irf.edispmap method)": [[142, "gammapy.irf.EDispMap.downsample", false]], "downsample() (gammapy.irf.irfmap method)": [[148, "gammapy.irf.IRFMap.downsample", false]], "downsample() (gammapy.irf.psfmap method)": [[153, "gammapy.irf.PSFMap.downsample", false]], "downsample() (gammapy.irf.recopsfmap method)": [[156, "gammapy.irf.RecoPSFMap.downsample", false]], "downsample() (gammapy.maps.geom method)": [[181, "gammapy.maps.Geom.downsample", false]], "downsample() (gammapy.maps.hpxgeom method)": [[182, "gammapy.maps.HpxGeom.downsample", false]], "downsample() (gammapy.maps.hpxmap method)": [[183, "gammapy.maps.HpxMap.downsample", false]], "downsample() (gammapy.maps.hpxndmap method)": [[184, "gammapy.maps.HpxNDMap.downsample", false]], "downsample() (gammapy.maps.labelmapaxis method)": [[185, "gammapy.maps.LabelMapAxis.downsample", false]], "downsample() (gammapy.maps.map method)": [[186, "gammapy.maps.Map.downsample", false]], "downsample() (gammapy.maps.mapaxes method)": [[187, "gammapy.maps.MapAxes.downsample", false]], "downsample() (gammapy.maps.mapaxis method)": [[188, "gammapy.maps.MapAxis.downsample", false]], "downsample() (gammapy.maps.regiongeom method)": [[191, "gammapy.maps.RegionGeom.downsample", false]], "downsample() (gammapy.maps.regionndmap method)": [[192, "gammapy.maps.RegionNDMap.downsample", false]], "downsample() (gammapy.maps.timemapaxis method)": [[193, "gammapy.maps.TimeMapAxis.downsample", false]], "downsample() (gammapy.maps.wcsgeom method)": [[194, "gammapy.maps.WcsGeom.downsample", false]], "downsample() (gammapy.maps.wcsmap method)": [[195, "gammapy.maps.WcsMap.downsample", false]], "downsample() (gammapy.maps.wcsndmap method)": [[196, "gammapy.maps.WcsNDMap.downsample", false]], "draw() (in module gammapy.utils.random)": [[313, "gammapy.utils.random.draw", false]], "drift (gammapy.data.pointingmode attribute)": [[90, "gammapy.data.PointingMode.DRIFT", false]], "drop() (gammapy.maps.geom method)": [[181, "gammapy.maps.Geom.drop", false]], "drop() (gammapy.maps.hpxgeom method)": [[182, "gammapy.maps.HpxGeom.drop", false]], "drop() (gammapy.maps.mapaxes method)": [[187, "gammapy.maps.MapAxes.drop", false]], "drop() (gammapy.maps.regiongeom method)": [[191, "gammapy.maps.RegionGeom.drop", false]], "drop() (gammapy.maps.wcsgeom method)": [[194, "gammapy.maps.WcsGeom.drop", false]], "dtype (gammapy.data.hduindextable attribute)": [[83, "gammapy.data.HDUIndexTable.dtype", false]], "dtype (gammapy.data.observationtable attribute)": [[86, "gammapy.data.ObservationTable.dtype", false]], "duration (gammapy.data.pointinginfo attribute)": [[89, "gammapy.data.PointingInfo.duration", false]], "e (gammapy.modeling.models.diskspatialmodel attribute)": [[212, "gammapy.modeling.models.DiskSpatialModel.e", false]], "e (gammapy.modeling.models.gaussianspatialmodel attribute)": [[220, "gammapy.modeling.models.GaussianSpatialModel.e", false]], "e (gammapy.modeling.models.generalizedgaussianspatialmodel attribute)": [[223, "gammapy.modeling.models.GeneralizedGaussianSpatialModel.e", false]], "e2dnde (gammapy.estimators.fluxmaps attribute)": [[117, "gammapy.estimators.FluxMaps.e2dnde", false]], "e2dnde (gammapy.estimators.fluxpoints attribute)": [[119, "gammapy.estimators.FluxPoints.e2dnde", false]], "e2dnde_err (gammapy.estimators.fluxmaps attribute)": [[117, "gammapy.estimators.FluxMaps.e2dnde_err", false]], "e2dnde_err (gammapy.estimators.fluxpoints attribute)": [[119, "gammapy.estimators.FluxPoints.e2dnde_err", false]], "e2dnde_errn (gammapy.estimators.fluxmaps attribute)": [[117, "gammapy.estimators.FluxMaps.e2dnde_errn", false]], "e2dnde_errn (gammapy.estimators.fluxpoints attribute)": [[119, "gammapy.estimators.FluxPoints.e2dnde_errn", false]], "e2dnde_errp (gammapy.estimators.fluxmaps attribute)": [[117, "gammapy.estimators.FluxMaps.e2dnde_errp", false]], "e2dnde_errp (gammapy.estimators.fluxpoints attribute)": [[119, "gammapy.estimators.FluxPoints.e2dnde_errp", false]], "e2dnde_ref (gammapy.estimators.fluxmaps attribute)": [[117, "gammapy.estimators.FluxMaps.e2dnde_ref", false]], "e2dnde_ref (gammapy.estimators.fluxpoints attribute)": [[119, "gammapy.estimators.FluxPoints.e2dnde_ref", false]], "e2dnde_ul (gammapy.estimators.fluxmaps attribute)": [[117, "gammapy.estimators.FluxMaps.e2dnde_ul", false]], "e2dnde_ul (gammapy.estimators.fluxpoints attribute)": [[119, "gammapy.estimators.FluxPoints.e2dnde_ul", false]], "e_peak (gammapy.modeling.models.expcutoffpowerlawspectralmodel attribute)": [[217, "gammapy.modeling.models.ExpCutoffPowerLawSpectralModel.e_peak", false]], "e_peak (gammapy.modeling.models.logparabolaspectralmodel attribute)": [[228, "gammapy.modeling.models.LogParabolaSpectralModel.e_peak", false]], "earth_location_from_dict() (in module gammapy.utils.fits)": [[300, "gammapy.utils.fits.earth_location_from_dict", false]], "ebl_data_builtin (in module gammapy.modeling.models)": [[214, "gammapy.modeling.models.EBL_DATA_BUILTIN", false]], "eblabsorptionnormspectralmodel (class in gammapy.modeling.models)": [[213, "gammapy.modeling.models.EBLAbsorptionNormSpectralModel", false]], "ebreak (gammapy.modeling.models.brokenpowerlawspectralmodel attribute)": [[205, "gammapy.modeling.models.BrokenPowerLawSpectralModel.ebreak", false]], "ebreak (gammapy.modeling.models.smoothbrokenpowerlawspectralmodel attribute)": [[249, "gammapy.modeling.models.SmoothBrokenPowerLawSpectralModel.ebreak", false]], "ecut (gammapy.modeling.models.expcutoffpowerlaw3fglspectralmodel attribute)": [[215, "gammapy.modeling.models.ExpCutoffPowerLaw3FGLSpectralModel.ecut", false]], "ecut (gammapy.modeling.models.superexpcutoffpowerlaw3fglspectralmodel attribute)": [[252, "gammapy.modeling.models.SuperExpCutoffPowerLaw3FGLSpectralModel.ecut", false]], "edge_width (gammapy.modeling.models.diskspatialmodel attribute)": [[212, "gammapy.modeling.models.DiskSpatialModel.edge_width", false]], "edges (gammapy.maps.labelmapaxis attribute)": [[185, "gammapy.maps.LabelMapAxis.edges", false]], "edges (gammapy.maps.mapaxis attribute)": [[188, "gammapy.maps.MapAxis.edges", false]], "edges (gammapy.maps.timemapaxis attribute)": [[193, "gammapy.maps.TimeMapAxis.edges", false]], "edges_max (gammapy.maps.labelmapaxis attribute)": [[185, "gammapy.maps.LabelMapAxis.edges_max", false]], "edges_max (gammapy.maps.mapaxis attribute)": [[188, "gammapy.maps.MapAxis.edges_max", false]], "edges_max (gammapy.maps.timemapaxis attribute)": [[193, "gammapy.maps.TimeMapAxis.edges_max", false]], "edges_min (gammapy.maps.labelmapaxis attribute)": [[185, "gammapy.maps.LabelMapAxis.edges_min", false]], "edges_min (gammapy.maps.mapaxis attribute)": [[188, "gammapy.maps.MapAxis.edges_min", false]], "edges_min (gammapy.maps.timemapaxis attribute)": [[193, "gammapy.maps.TimeMapAxis.edges_min", false]], "edisp": [[554, "term-EDisp", true]], "edisp (gammapy.data.observation attribute)": [[84, "gammapy.data.Observation.edisp", false]], "edisp (gammapy.datasets.mapdataset attribute)": [[97, "gammapy.datasets.MapDataset.edisp", false]], "edisp (gammapy.datasets.mapdatasetonoff attribute)": [[100, "gammapy.datasets.MapDatasetOnOff.edisp", false]], "edisp (gammapy.datasets.spectrumdataset attribute)": [[104, "gammapy.datasets.SpectrumDataset.edisp", false]], "edisp (gammapy.datasets.spectrumdatasetonoff attribute)": [[105, "gammapy.datasets.SpectrumDatasetOnOff.edisp", false]], "edisp_map (gammapy.irf.edispkernelmap attribute)": [[141, "gammapy.irf.EDispKernelMap.edisp_map", false]], "edisp_map (gammapy.irf.edispmap attribute)": [[142, "gammapy.irf.EDispMap.edisp_map", false]], "edispkernel (class in gammapy.irf)": [[140, "gammapy.irf.EDispKernel", false]], "edispkernelmap (class in gammapy.irf)": [[141, "gammapy.irf.EDispKernelMap", false]], "edispmap (class in gammapy.irf)": [[142, "gammapy.irf.EDispMap", false]], "effectiveareatable2d (class in gammapy.irf)": [[143, "gammapy.irf.EffectiveAreaTable2D", false]], "eflux (gammapy.estimators.fluxmaps attribute)": [[117, "gammapy.estimators.FluxMaps.eflux", false]], "eflux (gammapy.estimators.fluxpoints attribute)": [[119, "gammapy.estimators.FluxPoints.eflux", false]], "eflux_err (gammapy.estimators.fluxmaps attribute)": [[117, "gammapy.estimators.FluxMaps.eflux_err", false]], "eflux_err (gammapy.estimators.fluxpoints attribute)": [[119, "gammapy.estimators.FluxPoints.eflux_err", false]], "eflux_errn (gammapy.estimators.fluxmaps attribute)": [[117, "gammapy.estimators.FluxMaps.eflux_errn", false]], "eflux_errn (gammapy.estimators.fluxpoints attribute)": [[119, "gammapy.estimators.FluxPoints.eflux_errn", false]], "eflux_errp (gammapy.estimators.fluxmaps attribute)": [[117, "gammapy.estimators.FluxMaps.eflux_errp", false]], "eflux_errp (gammapy.estimators.fluxpoints attribute)": [[119, "gammapy.estimators.FluxPoints.eflux_errp", false]], "eflux_ref (gammapy.estimators.fluxmaps attribute)": [[117, "gammapy.estimators.FluxMaps.eflux_ref", false]], "eflux_ref (gammapy.estimators.fluxpoints attribute)": [[119, "gammapy.estimators.FluxPoints.eflux_ref", false]], "eflux_ul (gammapy.estimators.fluxmaps attribute)": [[117, "gammapy.estimators.FluxMaps.eflux_ul", false]], "eflux_ul (gammapy.estimators.fluxpoints attribute)": [[119, "gammapy.estimators.FluxPoints.eflux_ul", false]], "einastoprofile (class in gammapy.astro.darkmatter)": [[21, "gammapy.astro.darkmatter.EinastoProfile", false]], "emax (gammapy.modeling.models.powerlaw2spectralmodel attribute)": [[238, "gammapy.modeling.models.PowerLaw2SpectralModel.emax", false]], "emin (gammapy.modeling.models.powerlaw2spectralmodel attribute)": [[238, "gammapy.modeling.models.PowerLaw2SpectralModel.emin", false]], "energy (gammapy.data.eventlist attribute)": [[79, "gammapy.data.EventList.energy", false]], "energy (gammapy.modeling.models.piecewisenormspectralmodel attribute)": [[236, "gammapy.modeling.models.PiecewiseNormSpectralModel.energy", false]], "energy_axes_are_aligned (gammapy.datasets.datasets attribute)": [[95, "gammapy.datasets.Datasets.energy_axes_are_aligned", false]], "energy_axis (gammapy.estimators.fluxmaps attribute)": [[117, "gammapy.estimators.FluxMaps.energy_axis", false]], "energy_axis (gammapy.estimators.fluxpoints attribute)": [[119, "gammapy.estimators.FluxPoints.energy_axis", false]], "energy_center (gammapy.modeling.models.templatenpredmodel attribute)": [[258, "gammapy.modeling.models.TemplateNPredModel.energy_center", false]], "energy_flux() (gammapy.astro.darkmatter.darkmatterannihilationspectralmodel method)": [[19, "gammapy.astro.darkmatter.DarkMatterAnnihilationSpectralModel.energy_flux", false]], "energy_flux() (gammapy.astro.darkmatter.darkmatterdecayspectralmodel method)": [[20, "gammapy.astro.darkmatter.DarkMatterDecaySpectralModel.energy_flux", false]], "energy_flux() (gammapy.astro.darkmatter.primaryflux method)": [[26, "gammapy.astro.darkmatter.PrimaryFlux.energy_flux", false]], "energy_flux() (gammapy.modeling.models.brokenpowerlawspectralmodel method)": [[205, "gammapy.modeling.models.BrokenPowerLawSpectralModel.energy_flux", false]], "energy_flux() (gammapy.modeling.models.compoundspectralmodel method)": [[206, "gammapy.modeling.models.CompoundSpectralModel.energy_flux", false]], "energy_flux() (gammapy.modeling.models.constantspectralmodel method)": [[209, "gammapy.modeling.models.ConstantSpectralModel.energy_flux", false]], "energy_flux() (gammapy.modeling.models.eblabsorptionnormspectralmodel method)": [[213, "gammapy.modeling.models.EBLAbsorptionNormSpectralModel.energy_flux", false]], "energy_flux() (gammapy.modeling.models.expcutoffpowerlaw3fglspectralmodel method)": [[215, "gammapy.modeling.models.ExpCutoffPowerLaw3FGLSpectralModel.energy_flux", false]], "energy_flux() (gammapy.modeling.models.expcutoffpowerlawnormspectralmodel method)": [[216, "gammapy.modeling.models.ExpCutoffPowerLawNormSpectralModel.energy_flux", false]], "energy_flux() (gammapy.modeling.models.expcutoffpowerlawspectralmodel method)": [[217, "gammapy.modeling.models.ExpCutoffPowerLawSpectralModel.energy_flux", false]], "energy_flux() (gammapy.modeling.models.gaussianspectralmodel method)": [[221, "gammapy.modeling.models.GaussianSpectralModel.energy_flux", false]], "energy_flux() (gammapy.modeling.models.logparabolanormspectralmodel method)": [[227, "gammapy.modeling.models.LogParabolaNormSpectralModel.energy_flux", false]], "energy_flux() (gammapy.modeling.models.logparabolaspectralmodel method)": [[228, "gammapy.modeling.models.LogParabolaSpectralModel.energy_flux", false]], "energy_flux() (gammapy.modeling.models.meyercrabspectralmodel method)": [[230, "gammapy.modeling.models.MeyerCrabSpectralModel.energy_flux", false]], "energy_flux() (gammapy.modeling.models.naimaspectralmodel method)": [[234, "gammapy.modeling.models.NaimaSpectralModel.energy_flux", false]], "energy_flux() (gammapy.modeling.models.piecewisenormspectralmodel method)": [[236, "gammapy.modeling.models.PiecewiseNormSpectralModel.energy_flux", false]], "energy_flux() (gammapy.modeling.models.powerlaw2spectralmodel method)": [[238, "gammapy.modeling.models.PowerLaw2SpectralModel.energy_flux", false]], "energy_flux() (gammapy.modeling.models.powerlawnormspectralmodel method)": [[239, "gammapy.modeling.models.PowerLawNormSpectralModel.energy_flux", false]], "energy_flux() (gammapy.modeling.models.powerlawspectralmodel method)": [[240, "gammapy.modeling.models.PowerLawSpectralModel.energy_flux", false]], "energy_flux() (gammapy.modeling.models.scalespectralmodel method)": [[244, "gammapy.modeling.models.ScaleSpectralModel.energy_flux", false]], "energy_flux() (gammapy.modeling.models.smoothbrokenpowerlawspectralmodel method)": [[249, "gammapy.modeling.models.SmoothBrokenPowerLawSpectralModel.energy_flux", false]], "energy_flux() (gammapy.modeling.models.spectralmodel method)": [[251, "gammapy.modeling.models.SpectralModel.energy_flux", false]], "energy_flux() (gammapy.modeling.models.superexpcutoffpowerlaw3fglspectralmodel method)": [[252, "gammapy.modeling.models.SuperExpCutoffPowerLaw3FGLSpectralModel.energy_flux", false]], "energy_flux() (gammapy.modeling.models.superexpcutoffpowerlaw4fgldr3spectralmodel method)": [[253, "gammapy.modeling.models.SuperExpCutoffPowerLaw4FGLDR3SpectralModel.energy_flux", false]], "energy_flux() (gammapy.modeling.models.superexpcutoffpowerlaw4fglspectralmodel method)": [[254, "gammapy.modeling.models.SuperExpCutoffPowerLaw4FGLSpectralModel.energy_flux", false]], "energy_flux() (gammapy.modeling.models.templatendspectralmodel method)": [[257, "gammapy.modeling.models.TemplateNDSpectralModel.energy_flux", false]], "energy_flux() (gammapy.modeling.models.templatespectralmodel method)": [[261, "gammapy.modeling.models.TemplateSpectralModel.energy_flux", false]], "energy_flux_error() (gammapy.astro.darkmatter.darkmatterannihilationspectralmodel method)": [[19, "gammapy.astro.darkmatter.DarkMatterAnnihilationSpectralModel.energy_flux_error", false]], "energy_flux_error() (gammapy.astro.darkmatter.darkmatterdecayspectralmodel method)": [[20, "gammapy.astro.darkmatter.DarkMatterDecaySpectralModel.energy_flux_error", false]], "energy_flux_error() (gammapy.astro.darkmatter.primaryflux method)": [[26, "gammapy.astro.darkmatter.PrimaryFlux.energy_flux_error", false]], "energy_flux_error() (gammapy.modeling.models.brokenpowerlawspectralmodel method)": [[205, "gammapy.modeling.models.BrokenPowerLawSpectralModel.energy_flux_error", false]], "energy_flux_error() (gammapy.modeling.models.compoundspectralmodel method)": [[206, "gammapy.modeling.models.CompoundSpectralModel.energy_flux_error", false]], "energy_flux_error() (gammapy.modeling.models.constantspectralmodel method)": [[209, "gammapy.modeling.models.ConstantSpectralModel.energy_flux_error", false]], "energy_flux_error() (gammapy.modeling.models.eblabsorptionnormspectralmodel method)": [[213, "gammapy.modeling.models.EBLAbsorptionNormSpectralModel.energy_flux_error", false]], "energy_flux_error() (gammapy.modeling.models.expcutoffpowerlaw3fglspectralmodel method)": [[215, "gammapy.modeling.models.ExpCutoffPowerLaw3FGLSpectralModel.energy_flux_error", false]], "energy_flux_error() (gammapy.modeling.models.expcutoffpowerlawnormspectralmodel method)": [[216, "gammapy.modeling.models.ExpCutoffPowerLawNormSpectralModel.energy_flux_error", false]], "energy_flux_error() (gammapy.modeling.models.expcutoffpowerlawspectralmodel method)": [[217, "gammapy.modeling.models.ExpCutoffPowerLawSpectralModel.energy_flux_error", false]], "energy_flux_error() (gammapy.modeling.models.gaussianspectralmodel method)": [[221, "gammapy.modeling.models.GaussianSpectralModel.energy_flux_error", false]], "energy_flux_error() (gammapy.modeling.models.logparabolanormspectralmodel method)": [[227, "gammapy.modeling.models.LogParabolaNormSpectralModel.energy_flux_error", false]], "energy_flux_error() (gammapy.modeling.models.logparabolaspectralmodel method)": [[228, "gammapy.modeling.models.LogParabolaSpectralModel.energy_flux_error", false]], "energy_flux_error() (gammapy.modeling.models.meyercrabspectralmodel method)": [[230, "gammapy.modeling.models.MeyerCrabSpectralModel.energy_flux_error", false]], "energy_flux_error() (gammapy.modeling.models.naimaspectralmodel method)": [[234, "gammapy.modeling.models.NaimaSpectralModel.energy_flux_error", false]], "energy_flux_error() (gammapy.modeling.models.piecewisenormspectralmodel method)": [[236, "gammapy.modeling.models.PiecewiseNormSpectralModel.energy_flux_error", false]], "energy_flux_error() (gammapy.modeling.models.powerlaw2spectralmodel method)": [[238, "gammapy.modeling.models.PowerLaw2SpectralModel.energy_flux_error", false]], "energy_flux_error() (gammapy.modeling.models.powerlawnormspectralmodel method)": [[239, "gammapy.modeling.models.PowerLawNormSpectralModel.energy_flux_error", false]], "energy_flux_error() (gammapy.modeling.models.powerlawspectralmodel method)": [[240, "gammapy.modeling.models.PowerLawSpectralModel.energy_flux_error", false]], "energy_flux_error() (gammapy.modeling.models.scalespectralmodel method)": [[244, "gammapy.modeling.models.ScaleSpectralModel.energy_flux_error", false]], "energy_flux_error() (gammapy.modeling.models.smoothbrokenpowerlawspectralmodel method)": [[249, "gammapy.modeling.models.SmoothBrokenPowerLawSpectralModel.energy_flux_error", false]], "energy_flux_error() (gammapy.modeling.models.spectralmodel method)": [[251, "gammapy.modeling.models.SpectralModel.energy_flux_error", false]], "energy_flux_error() (gammapy.modeling.models.superexpcutoffpowerlaw3fglspectralmodel method)": [[252, "gammapy.modeling.models.SuperExpCutoffPowerLaw3FGLSpectralModel.energy_flux_error", false]], "energy_flux_error() (gammapy.modeling.models.superexpcutoffpowerlaw4fgldr3spectralmodel method)": [[253, "gammapy.modeling.models.SuperExpCutoffPowerLaw4FGLDR3SpectralModel.energy_flux_error", false]], "energy_flux_error() (gammapy.modeling.models.superexpcutoffpowerlaw4fglspectralmodel method)": [[254, "gammapy.modeling.models.SuperExpCutoffPowerLaw4FGLSpectralModel.energy_flux_error", false]], "energy_flux_error() (gammapy.modeling.models.templatendspectralmodel method)": [[257, "gammapy.modeling.models.TemplateNDSpectralModel.energy_flux_error", false]], "energy_flux_error() (gammapy.modeling.models.templatespectralmodel method)": [[261, "gammapy.modeling.models.TemplateSpectralModel.energy_flux_error", false]], "energy_integrated() (gammapy.astro.source.pulsar method)": [[51, "gammapy.astro.source.Pulsar.energy_integrated", false]], "energy_mask() (gammapy.maps.geom method)": [[181, "gammapy.maps.Geom.energy_mask", false]], "energy_mask() (gammapy.maps.hpxgeom method)": [[182, "gammapy.maps.HpxGeom.energy_mask", false]], "energy_mask() (gammapy.maps.regiongeom method)": [[191, "gammapy.maps.RegionGeom.energy_mask", false]], "energy_mask() (gammapy.maps.wcsgeom method)": [[194, "gammapy.maps.WcsGeom.energy_mask", false]], "energy_max (gammapy.estimators.fluxmaps attribute)": [[117, "gammapy.estimators.FluxMaps.energy_max", false]], "energy_max (gammapy.estimators.fluxpoints attribute)": [[119, "gammapy.estimators.FluxPoints.energy_max", false]], "energy_min (gammapy.estimators.fluxmaps attribute)": [[117, "gammapy.estimators.FluxMaps.energy_min", false]], "energy_min (gammapy.estimators.fluxpoints attribute)": [[119, "gammapy.estimators.FluxPoints.energy_min", false]], "energy_name (gammapy.irf.psfmap attribute)": [[153, "gammapy.irf.PSFMap.energy_name", false]], "energy_name (gammapy.irf.recopsfmap attribute)": [[156, "gammapy.irf.RecoPSFMap.energy_name", false]], "energy_range (gammapy.catalog.sourcecatalogobject2fhl attribute)": [[69, "gammapy.catalog.SourceCatalogObject2FHL.energy_range", false]], "energy_range (gammapy.catalog.sourcecatalogobject3fgl attribute)": [[71, "gammapy.catalog.SourceCatalogObject3FGL.energy_range", false]], "energy_range (gammapy.catalog.sourcecatalogobject3fhl attribute)": [[72, "gammapy.catalog.SourceCatalogObject3FHL.energy_range", false]], "energy_range (gammapy.catalog.sourcecatalogobjecthgps attribute)": [[76, "gammapy.catalog.SourceCatalogObjectHGPS.energy_range", false]], "energy_range (gammapy.datasets.mapdataset attribute)": [[97, "gammapy.datasets.MapDataset.energy_range", false]], "energy_range (gammapy.datasets.mapdatasetonoff attribute)": [[100, "gammapy.datasets.MapDatasetOnOff.energy_range", false]], "energy_range (gammapy.datasets.spectrumdataset attribute)": [[104, "gammapy.datasets.SpectrumDataset.energy_range", false]], "energy_range (gammapy.datasets.spectrumdatasetonoff attribute)": [[105, "gammapy.datasets.SpectrumDatasetOnOff.energy_range", false]], "energy_range_fit (gammapy.datasets.mapdataset attribute)": [[97, "gammapy.datasets.MapDataset.energy_range_fit", false]], "energy_range_fit (gammapy.datasets.mapdatasetonoff attribute)": [[100, "gammapy.datasets.MapDatasetOnOff.energy_range_fit", false]], "energy_range_fit (gammapy.datasets.spectrumdataset attribute)": [[104, "gammapy.datasets.SpectrumDataset.energy_range_fit", false]], "energy_range_fit (gammapy.datasets.spectrumdatasetonoff attribute)": [[105, "gammapy.datasets.SpectrumDatasetOnOff.energy_range_fit", false]], "energy_range_safe (gammapy.datasets.mapdataset attribute)": [[97, "gammapy.datasets.MapDataset.energy_range_safe", false]], "energy_range_safe (gammapy.datasets.mapdatasetonoff attribute)": [[100, "gammapy.datasets.MapDatasetOnOff.energy_range_safe", false]], "energy_range_safe (gammapy.datasets.spectrumdataset attribute)": [[104, "gammapy.datasets.SpectrumDataset.energy_range_safe", false]], "energy_range_safe (gammapy.datasets.spectrumdatasetonoff attribute)": [[105, "gammapy.datasets.SpectrumDatasetOnOff.energy_range_safe", false]], "energy_range_total (gammapy.datasets.mapdataset attribute)": [[97, "gammapy.datasets.MapDataset.energy_range_total", false]], "energy_range_total (gammapy.datasets.mapdatasetonoff attribute)": [[100, "gammapy.datasets.MapDatasetOnOff.energy_range_total", false]], "energy_range_total (gammapy.datasets.spectrumdataset attribute)": [[104, "gammapy.datasets.SpectrumDataset.energy_range_total", false]], "energy_range_total (gammapy.datasets.spectrumdatasetonoff attribute)": [[105, "gammapy.datasets.SpectrumDatasetOnOff.energy_range_total", false]], "energy_ranges (gammapy.datasets.datasets attribute)": [[95, "gammapy.datasets.Datasets.energy_ranges", false]], "energy_ref (gammapy.estimators.fluxmaps attribute)": [[117, "gammapy.estimators.FluxMaps.energy_ref", false]], "energy_ref (gammapy.estimators.fluxpoints attribute)": [[119, "gammapy.estimators.FluxPoints.energy_ref", false]], "energydependentmorphologyestimator (class in gammapy.estimators)": [[114, "gammapy.estimators.EnergyDependentMorphologyEstimator", false]], "energydependentmultigausspsf (class in gammapy.irf)": [[144, "gammapy.irf.EnergyDependentMultiGaussPSF", false]], "energydispersion2d (class in gammapy.irf)": [[145, "gammapy.irf.EnergyDispersion2D", false]], "eqcons (gammapy.astro.population.casebattacharya1998 attribute)": [[28, "gammapy.astro.population.CaseBattacharya1998.eqcons", false]], "eqcons (gammapy.astro.population.exponential attribute)": [[29, "gammapy.astro.population.Exponential.eqcons", false]], "eqcons (gammapy.astro.population.faucherkaspi2006 attribute)": [[30, "gammapy.astro.population.FaucherKaspi2006.eqcons", false]], "eqcons (gammapy.astro.population.faucherkaspi2006velocitybimodal attribute)": [[31, "gammapy.astro.population.FaucherKaspi2006VelocityBimodal.eqcons", false]], "eqcons (gammapy.astro.population.faucherkaspi2006velocitymaxwellian attribute)": [[32, "gammapy.astro.population.FaucherKaspi2006VelocityMaxwellian.eqcons", false]], "eqcons (gammapy.astro.population.lorimer2006 attribute)": [[35, "gammapy.astro.population.Lorimer2006.eqcons", false]], "eqcons (gammapy.astro.population.paczynski1990 attribute)": [[36, "gammapy.astro.population.Paczynski1990.eqcons", false]], "eqcons (gammapy.astro.population.paczynski1990velocity attribute)": [[37, "gammapy.astro.population.Paczynski1990Velocity.eqcons", false]], "eqcons (gammapy.astro.population.yusifovkucuk2004 attribute)": [[39, "gammapy.astro.population.YusifovKucuk2004.eqcons", false]], "eqcons (gammapy.astro.population.yusifovkucuk2004b attribute)": [[40, "gammapy.astro.population.YusifovKucuk2004B.eqcons", false]], "error (gammapy.modeling.parameter attribute)": [[201, "gammapy.modeling.Parameter.error", false]], "error (gammapy.modeling.priorparameter attribute)": [[203, "gammapy.modeling.PriorParameter.error", false]], "error (gammapy.stats.cashcountsstatistic attribute)": [[272, "gammapy.stats.CashCountsStatistic.error", false]], "error (gammapy.stats.wstatcountsstatistic attribute)": [[274, "gammapy.stats.WStatCountsStatistic.error", false]], "error_callback() (gammapy.makers.datasetsmaker method)": [[159, "gammapy.makers.DatasetsMaker.error_callback", false]], "estimate_best_fit() (gammapy.estimators.fluxpointsestimator method)": [[120, "gammapy.estimators.FluxPointsEstimator.estimate_best_fit", false]], "estimate_best_fit() (gammapy.estimators.fluxprofileestimator method)": [[121, "gammapy.estimators.FluxProfileEstimator.estimate_best_fit", false]], "estimate_best_fit() (gammapy.estimators.lightcurveestimator method)": [[124, "gammapy.estimators.LightCurveEstimator.estimate_best_fit", false]], "estimate_best_fit() (gammapy.estimators.parameterestimator method)": [[125, "gammapy.estimators.ParameterEstimator.estimate_best_fit", false]], "estimate_counts() (gammapy.estimators.fluxpointsestimator static method)": [[120, "gammapy.estimators.FluxPointsEstimator.estimate_counts", false]], "estimate_counts() (gammapy.estimators.fluxprofileestimator static method)": [[121, "gammapy.estimators.FluxProfileEstimator.estimate_counts", false]], "estimate_counts() (gammapy.estimators.lightcurveestimator static method)": [[124, "gammapy.estimators.LightCurveEstimator.estimate_counts", false]], "estimate_counts() (gammapy.estimators.parameterestimator static method)": [[125, "gammapy.estimators.ParameterEstimator.estimate_counts", false]], "estimate_energy_dependence() (gammapy.estimators.energydependentmorphologyestimator method)": [[114, "gammapy.estimators.EnergyDependentMorphologyEstimator.estimate_energy_dependence", false]], "estimate_errn_errp() (gammapy.estimators.fluxpointsestimator method)": [[120, "gammapy.estimators.FluxPointsEstimator.estimate_errn_errp", false]], "estimate_errn_errp() (gammapy.estimators.fluxprofileestimator method)": [[121, "gammapy.estimators.FluxProfileEstimator.estimate_errn_errp", false]], "estimate_errn_errp() (gammapy.estimators.lightcurveestimator method)": [[124, "gammapy.estimators.LightCurveEstimator.estimate_errn_errp", false]], "estimate_errn_errp() (gammapy.estimators.parameterestimator method)": [[125, "gammapy.estimators.ParameterEstimator.estimate_errn_errp", false]], "estimate_excess_map() (gammapy.estimators.excessmapestimator method)": [[116, "gammapy.estimators.ExcessMapEstimator.estimate_excess_map", false]], "estimate_exposure_reco_energy() (gammapy.estimators.excessmapestimator method)": [[116, "gammapy.estimators.ExcessMapEstimator.estimate_exposure_reco_energy", false]], "estimate_exposure_reco_energy() (in module gammapy.estimators.utils)": [[131, "gammapy.estimators.utils.estimate_exposure_reco_energy", false]], "estimate_fit_input_maps() (gammapy.estimators.tsmapestimator method)": [[127, "gammapy.estimators.TSMapEstimator.estimate_fit_input_maps", false]], "estimate_flux_default() (gammapy.estimators.tsmapestimator method)": [[127, "gammapy.estimators.TSMapEstimator.estimate_flux_default", false]], "estimate_flux_map() (gammapy.estimators.tsmapestimator method)": [[127, "gammapy.estimators.TSMapEstimator.estimate_flux_map", false]], "estimate_flux_point() (gammapy.estimators.fluxpointsestimator method)": [[120, "gammapy.estimators.FluxPointsEstimator.estimate_flux_point", false]], "estimate_flux_point() (gammapy.estimators.fluxprofileestimator method)": [[121, "gammapy.estimators.FluxProfileEstimator.estimate_flux_point", false]], "estimate_flux_point() (gammapy.estimators.lightcurveestimator method)": [[124, "gammapy.estimators.LightCurveEstimator.estimate_flux_point", false]], "estimate_kernel() (gammapy.estimators.excessmapestimator method)": [[116, "gammapy.estimators.ExcessMapEstimator.estimate_kernel", false]], "estimate_kernel() (gammapy.estimators.tsmapestimator method)": [[127, "gammapy.estimators.TSMapEstimator.estimate_kernel", false]], "estimate_maps() (gammapy.estimators.asmoothmapestimator method)": [[112, "gammapy.estimators.ASmoothMapEstimator.estimate_maps", false]], "estimate_mask_default() (gammapy.estimators.excessmapestimator static method)": [[116, "gammapy.estimators.ExcessMapEstimator.estimate_mask_default", false]], "estimate_mask_default() (gammapy.estimators.tsmapestimator static method)": [[127, "gammapy.estimators.TSMapEstimator.estimate_mask_default", false]], "estimate_min_e2dnde() (gammapy.estimators.sensitivityestimator method)": [[126, "gammapy.estimators.SensitivityEstimator.estimate_min_e2dnde", false]], "estimate_min_excess() (gammapy.estimators.sensitivityestimator method)": [[126, "gammapy.estimators.SensitivityEstimator.estimate_min_excess", false]], "estimate_npred() (gammapy.estimators.fluxpointsestimator static method)": [[120, "gammapy.estimators.FluxPointsEstimator.estimate_npred", false]], "estimate_npred() (gammapy.estimators.fluxprofileestimator static method)": [[121, "gammapy.estimators.FluxProfileEstimator.estimate_npred", false]], "estimate_npred() (gammapy.estimators.lightcurveestimator static method)": [[124, "gammapy.estimators.LightCurveEstimator.estimate_npred", false]], "estimate_npred() (gammapy.estimators.parameterestimator static method)": [[125, "gammapy.estimators.ParameterEstimator.estimate_npred", false]], "estimate_npred_excess() (gammapy.estimators.fluxpointsestimator method)": [[120, "gammapy.estimators.FluxPointsEstimator.estimate_npred_excess", false]], "estimate_npred_excess() (gammapy.estimators.fluxprofileestimator method)": [[121, "gammapy.estimators.FluxProfileEstimator.estimate_npred_excess", false]], "estimate_npred_excess() (gammapy.estimators.lightcurveestimator method)": [[124, "gammapy.estimators.LightCurveEstimator.estimate_npred_excess", false]], "estimate_pad_width() (gammapy.estimators.tsmapestimator method)": [[127, "gammapy.estimators.TSMapEstimator.estimate_pad_width", false]], "estimate_scan() (gammapy.estimators.fluxpointsestimator method)": [[120, "gammapy.estimators.FluxPointsEstimator.estimate_scan", false]], "estimate_scan() (gammapy.estimators.fluxprofileestimator method)": [[121, "gammapy.estimators.FluxProfileEstimator.estimate_scan", false]], "estimate_scan() (gammapy.estimators.lightcurveestimator method)": [[124, "gammapy.estimators.LightCurveEstimator.estimate_scan", false]], "estimate_scan() (gammapy.estimators.parameterestimator method)": [[125, "gammapy.estimators.ParameterEstimator.estimate_scan", false]], "estimate_time_bin_flux() (gammapy.estimators.lightcurveestimator method)": [[124, "gammapy.estimators.LightCurveEstimator.estimate_time_bin_flux", false]], "estimate_ts() (gammapy.estimators.fluxpointsestimator method)": [[120, "gammapy.estimators.FluxPointsEstimator.estimate_ts", false]], "estimate_ts() (gammapy.estimators.fluxprofileestimator method)": [[121, "gammapy.estimators.FluxProfileEstimator.estimate_ts", false]], "estimate_ts() (gammapy.estimators.lightcurveestimator method)": [[124, "gammapy.estimators.LightCurveEstimator.estimate_ts", false]], "estimate_ts() (gammapy.estimators.parameterestimator method)": [[125, "gammapy.estimators.ParameterEstimator.estimate_ts", false]], "estimate_ul() (gammapy.estimators.fluxpointsestimator method)": [[120, "gammapy.estimators.FluxPointsEstimator.estimate_ul", false]], "estimate_ul() (gammapy.estimators.fluxprofileestimator method)": [[121, "gammapy.estimators.FluxProfileEstimator.estimate_ul", false]], "estimate_ul() (gammapy.estimators.lightcurveestimator method)": [[124, "gammapy.estimators.LightCurveEstimator.estimate_ul", false]], "estimate_ul() (gammapy.estimators.parameterestimator method)": [[125, "gammapy.estimators.ParameterEstimator.estimate_ul", false]], "estimator": [[554, "term-Estimator", true]], "estimator (class in gammapy.estimators)": [[115, "gammapy.estimators.Estimator", false]], "estimator_registry (in module gammapy.estimators)": [[113, "gammapy.estimators.ESTIMATOR_REGISTRY", false]], "eta (gammapy.modeling.models.generalizedgaussianspatialmodel attribute)": [[223, "gammapy.modeling.models.GeneralizedGaussianSpatialModel.eta", false]], "eta (gammapy.modeling.models.generalizedgaussiantemporalmodel attribute)": [[224, "gammapy.modeling.models.GeneralizedGaussianTemporalModel.eta", false]], "eta (gammapy.modeling.models.shell2spatialmodel attribute)": [[245, "gammapy.modeling.models.Shell2SpatialModel.eta", false]], "evaluate() (gammapy.astro.darkmatter.burkertprofile static method)": [[17, "gammapy.astro.darkmatter.BurkertProfile.evaluate", false]], "evaluate() (gammapy.astro.darkmatter.darkmatterannihilationspectralmodel method)": [[19, "gammapy.astro.darkmatter.DarkMatterAnnihilationSpectralModel.evaluate", false]], "evaluate() (gammapy.astro.darkmatter.darkmatterdecayspectralmodel method)": [[20, "gammapy.astro.darkmatter.DarkMatterDecaySpectralModel.evaluate", false]], "evaluate() (gammapy.astro.darkmatter.einastoprofile static method)": [[21, "gammapy.astro.darkmatter.EinastoProfile.evaluate", false]], "evaluate() (gammapy.astro.darkmatter.isothermalprofile static method)": [[22, "gammapy.astro.darkmatter.IsothermalProfile.evaluate", false]], "evaluate() (gammapy.astro.darkmatter.mooreprofile static method)": [[24, "gammapy.astro.darkmatter.MooreProfile.evaluate", false]], "evaluate() (gammapy.astro.darkmatter.nfwprofile static method)": [[25, "gammapy.astro.darkmatter.NFWProfile.evaluate", false]], "evaluate() (gammapy.astro.darkmatter.primaryflux method)": [[26, "gammapy.astro.darkmatter.PrimaryFlux.evaluate", false]], "evaluate() (gammapy.astro.darkmatter.zhaoprofile static method)": [[27, "gammapy.astro.darkmatter.ZhaoProfile.evaluate", false]], "evaluate() (gammapy.astro.population.casebattacharya1998 static method)": [[28, "gammapy.astro.population.CaseBattacharya1998.evaluate", false]], "evaluate() (gammapy.astro.population.exponential static method)": [[29, "gammapy.astro.population.Exponential.evaluate", false]], "evaluate() (gammapy.astro.population.faucherkaspi2006 static method)": [[30, "gammapy.astro.population.FaucherKaspi2006.evaluate", false]], "evaluate() (gammapy.astro.population.faucherkaspi2006velocitybimodal static method)": [[31, "gammapy.astro.population.FaucherKaspi2006VelocityBimodal.evaluate", false]], "evaluate() (gammapy.astro.population.faucherkaspi2006velocitymaxwellian static method)": [[32, "gammapy.astro.population.FaucherKaspi2006VelocityMaxwellian.evaluate", false]], "evaluate() (gammapy.astro.population.lorimer2006 static method)": [[35, "gammapy.astro.population.Lorimer2006.evaluate", false]], "evaluate() (gammapy.astro.population.paczynski1990 static method)": [[36, "gammapy.astro.population.Paczynski1990.evaluate", false]], "evaluate() (gammapy.astro.population.paczynski1990velocity static method)": [[37, "gammapy.astro.population.Paczynski1990Velocity.evaluate", false]], "evaluate() (gammapy.astro.population.yusifovkucuk2004 static method)": [[39, "gammapy.astro.population.YusifovKucuk2004.evaluate", false]], "evaluate() (gammapy.astro.population.yusifovkucuk2004b static method)": [[40, "gammapy.astro.population.YusifovKucuk2004B.evaluate", false]], "evaluate() (gammapy.catalog.sourcecataloglargescalehgps method)": [[66, "gammapy.catalog.SourceCatalogLargeScaleHGPS.evaluate", false]], "evaluate() (gammapy.irf.background2d method)": [[137, "gammapy.irf.Background2D.evaluate", false]], "evaluate() (gammapy.irf.background3d method)": [[138, "gammapy.irf.Background3D.evaluate", false]], "evaluate() (gammapy.irf.backgroundirf method)": [[139, "gammapy.irf.BackgroundIRF.evaluate", false]], "evaluate() (gammapy.irf.edispkernel method)": [[140, "gammapy.irf.EDispKernel.evaluate", false]], "evaluate() (gammapy.irf.effectiveareatable2d method)": [[143, "gammapy.irf.EffectiveAreaTable2D.evaluate", false]], "evaluate() (gammapy.irf.energydependentmultigausspsf method)": [[144, "gammapy.irf.EnergyDependentMultiGaussPSF.evaluate", false]], "evaluate() (gammapy.irf.energydispersion2d method)": [[145, "gammapy.irf.EnergyDispersion2D.evaluate", false]], "evaluate() (gammapy.irf.irf method)": [[147, "gammapy.irf.IRF.evaluate", false]], "evaluate() (gammapy.irf.parametricpsf method)": [[154, "gammapy.irf.ParametricPSF.evaluate", false]], "evaluate() (gammapy.irf.psf3d method)": [[150, "gammapy.irf.PSF3D.evaluate", false]], "evaluate() (gammapy.irf.psfking method)": [[152, "gammapy.irf.PSFKing.evaluate", false]], "evaluate() (gammapy.irf.radmax2d method)": [[155, "gammapy.irf.RadMax2D.evaluate", false]], "evaluate() (gammapy.modeling.models.brokenpowerlawspectralmodel static method)": [[205, "gammapy.modeling.models.BrokenPowerLawSpectralModel.evaluate", false]], "evaluate() (gammapy.modeling.models.compoundspectralmodel method)": [[206, "gammapy.modeling.models.CompoundSpectralModel.evaluate", false]], "evaluate() (gammapy.modeling.models.constantfluxspatialmodel static method)": [[207, "gammapy.modeling.models.ConstantFluxSpatialModel.evaluate", false]], "evaluate() (gammapy.modeling.models.constantspatialmodel static method)": [[208, "gammapy.modeling.models.ConstantSpatialModel.evaluate", false]], "evaluate() (gammapy.modeling.models.constantspectralmodel static method)": [[209, "gammapy.modeling.models.ConstantSpectralModel.evaluate", false]], "evaluate() (gammapy.modeling.models.constanttemporalmodel static method)": [[210, "gammapy.modeling.models.ConstantTemporalModel.evaluate", false]], "evaluate() (gammapy.modeling.models.diskspatialmodel static method)": [[212, "gammapy.modeling.models.DiskSpatialModel.evaluate", false]], "evaluate() (gammapy.modeling.models.eblabsorptionnormspectralmodel method)": [[213, "gammapy.modeling.models.EBLAbsorptionNormSpectralModel.evaluate", false]], "evaluate() (gammapy.modeling.models.expcutoffpowerlaw3fglspectralmodel static method)": [[215, "gammapy.modeling.models.ExpCutoffPowerLaw3FGLSpectralModel.evaluate", false]], "evaluate() (gammapy.modeling.models.expcutoffpowerlawnormspectralmodel static method)": [[216, "gammapy.modeling.models.ExpCutoffPowerLawNormSpectralModel.evaluate", false]], "evaluate() (gammapy.modeling.models.expcutoffpowerlawspectralmodel static method)": [[217, "gammapy.modeling.models.ExpCutoffPowerLawSpectralModel.evaluate", false]], "evaluate() (gammapy.modeling.models.expdecaytemporalmodel static method)": [[218, "gammapy.modeling.models.ExpDecayTemporalModel.evaluate", false]], "evaluate() (gammapy.modeling.models.fovbackgroundmodel method)": [[219, "gammapy.modeling.models.FoVBackgroundModel.evaluate", false]], "evaluate() (gammapy.modeling.models.gaussianspatialmodel static method)": [[220, "gammapy.modeling.models.GaussianSpatialModel.evaluate", false]], "evaluate() (gammapy.modeling.models.gaussianspectralmodel static method)": [[221, "gammapy.modeling.models.GaussianSpectralModel.evaluate", false]], "evaluate() (gammapy.modeling.models.gaussiantemporalmodel static method)": [[222, "gammapy.modeling.models.GaussianTemporalModel.evaluate", false]], "evaluate() (gammapy.modeling.models.generalizedgaussianspatialmodel static method)": [[223, "gammapy.modeling.models.GeneralizedGaussianSpatialModel.evaluate", false]], "evaluate() (gammapy.modeling.models.generalizedgaussiantemporalmodel static method)": [[224, "gammapy.modeling.models.GeneralizedGaussianTemporalModel.evaluate", false]], "evaluate() (gammapy.modeling.models.lightcurvetemplatetemporalmodel method)": [[225, "gammapy.modeling.models.LightCurveTemplateTemporalModel.evaluate", false]], "evaluate() (gammapy.modeling.models.lineartemporalmodel static method)": [[226, "gammapy.modeling.models.LinearTemporalModel.evaluate", false]], "evaluate() (gammapy.modeling.models.logparabolanormspectralmodel static method)": [[227, "gammapy.modeling.models.LogParabolaNormSpectralModel.evaluate", false]], "evaluate() (gammapy.modeling.models.logparabolaspectralmodel static method)": [[228, "gammapy.modeling.models.LogParabolaSpectralModel.evaluate", false]], "evaluate() (gammapy.modeling.models.meyercrabspectralmodel static method)": [[230, "gammapy.modeling.models.MeyerCrabSpectralModel.evaluate", false]], "evaluate() (gammapy.modeling.models.naimaspectralmodel method)": [[234, "gammapy.modeling.models.NaimaSpectralModel.evaluate", false]], "evaluate() (gammapy.modeling.models.piecewisenormspatialmodel method)": [[235, "gammapy.modeling.models.PiecewiseNormSpatialModel.evaluate", false]], "evaluate() (gammapy.modeling.models.piecewisenormspectralmodel method)": [[236, "gammapy.modeling.models.PiecewiseNormSpectralModel.evaluate", false]], "evaluate() (gammapy.modeling.models.powerlaw2spectralmodel static method)": [[238, "gammapy.modeling.models.PowerLaw2SpectralModel.evaluate", false]], "evaluate() (gammapy.modeling.models.powerlawnormspectralmodel static method)": [[239, "gammapy.modeling.models.PowerLawNormSpectralModel.evaluate", false]], "evaluate() (gammapy.modeling.models.powerlawspectralmodel static method)": [[240, "gammapy.modeling.models.PowerLawSpectralModel.evaluate", false]], "evaluate() (gammapy.modeling.models.powerlawtemporalmodel static method)": [[241, "gammapy.modeling.models.PowerLawTemporalModel.evaluate", false]], "evaluate() (gammapy.modeling.models.scalespectralmodel method)": [[244, "gammapy.modeling.models.ScaleSpectralModel.evaluate", false]], "evaluate() (gammapy.modeling.models.shell2spatialmodel static method)": [[245, "gammapy.modeling.models.Shell2SpatialModel.evaluate", false]], "evaluate() (gammapy.modeling.models.shellspatialmodel static method)": [[246, "gammapy.modeling.models.ShellSpatialModel.evaluate", false]], "evaluate() (gammapy.modeling.models.sinetemporalmodel static method)": [[247, "gammapy.modeling.models.SineTemporalModel.evaluate", false]], "evaluate() (gammapy.modeling.models.skymodel method)": [[248, "gammapy.modeling.models.SkyModel.evaluate", false]], "evaluate() (gammapy.modeling.models.smoothbrokenpowerlawspectralmodel static method)": [[249, "gammapy.modeling.models.SmoothBrokenPowerLawSpectralModel.evaluate", false]], "evaluate() (gammapy.modeling.models.superexpcutoffpowerlaw3fglspectralmodel static method)": [[252, "gammapy.modeling.models.SuperExpCutoffPowerLaw3FGLSpectralModel.evaluate", false]], "evaluate() (gammapy.modeling.models.superexpcutoffpowerlaw4fgldr3spectralmodel static method)": [[253, "gammapy.modeling.models.SuperExpCutoffPowerLaw4FGLDR3SpectralModel.evaluate", false]], "evaluate() (gammapy.modeling.models.superexpcutoffpowerlaw4fglspectralmodel static method)": [[254, "gammapy.modeling.models.SuperExpCutoffPowerLaw4FGLSpectralModel.evaluate", false]], "evaluate() (gammapy.modeling.models.templatendspatialmodel method)": [[256, "gammapy.modeling.models.TemplateNDSpatialModel.evaluate", false]], "evaluate() (gammapy.modeling.models.templatendspectralmodel method)": [[257, "gammapy.modeling.models.TemplateNDSpectralModel.evaluate", false]], "evaluate() (gammapy.modeling.models.templatenpredmodel method)": [[258, "gammapy.modeling.models.TemplateNPredModel.evaluate", false]], "evaluate() (gammapy.modeling.models.templatephasecurvetemporalmodel method)": [[259, "gammapy.modeling.models.TemplatePhaseCurveTemporalModel.evaluate", false]], "evaluate() (gammapy.modeling.models.templatespatialmodel method)": [[260, "gammapy.modeling.models.TemplateSpatialModel.evaluate", false]], "evaluate() (gammapy.modeling.models.templatespectralmodel method)": [[261, "gammapy.modeling.models.TemplateSpectralModel.evaluate", false]], "evaluate_containment() (gammapy.irf.energydependentmultigausspsf static method)": [[144, "gammapy.irf.EnergyDependentMultiGaussPSF.evaluate_containment", false]], "evaluate_containment() (gammapy.irf.parametricpsf method)": [[154, "gammapy.irf.ParametricPSF.evaluate_containment", false]], "evaluate_containment() (gammapy.irf.psfking static method)": [[152, "gammapy.irf.PSFKing.evaluate_containment", false]], "evaluate_direct() (gammapy.irf.energydependentmultigausspsf static method)": [[144, "gammapy.irf.EnergyDependentMultiGaussPSF.evaluate_direct", false]], "evaluate_direct() (gammapy.irf.parametricpsf method)": [[154, "gammapy.irf.ParametricPSF.evaluate_direct", false]], "evaluate_direct() (gammapy.irf.psfking static method)": [[152, "gammapy.irf.PSFKing.evaluate_direct", false]], "evaluate_energy_flux() (gammapy.modeling.models.powerlawnormspectralmodel static method)": [[239, "gammapy.modeling.models.PowerLawNormSpectralModel.evaluate_energy_flux", false]], "evaluate_energy_flux() (gammapy.modeling.models.powerlawspectralmodel static method)": [[240, "gammapy.modeling.models.PowerLawSpectralModel.evaluate_energy_flux", false]], "evaluate_error() (gammapy.astro.darkmatter.darkmatterannihilationspectralmodel method)": [[19, "gammapy.astro.darkmatter.DarkMatterAnnihilationSpectralModel.evaluate_error", false]], "evaluate_error() (gammapy.astro.darkmatter.darkmatterdecayspectralmodel method)": [[20, "gammapy.astro.darkmatter.DarkMatterDecaySpectralModel.evaluate_error", false]], "evaluate_error() (gammapy.astro.darkmatter.primaryflux method)": [[26, "gammapy.astro.darkmatter.PrimaryFlux.evaluate_error", false]], "evaluate_error() (gammapy.modeling.models.brokenpowerlawspectralmodel method)": [[205, "gammapy.modeling.models.BrokenPowerLawSpectralModel.evaluate_error", false]], "evaluate_error() (gammapy.modeling.models.compoundspectralmodel method)": [[206, "gammapy.modeling.models.CompoundSpectralModel.evaluate_error", false]], "evaluate_error() (gammapy.modeling.models.constantspectralmodel method)": [[209, "gammapy.modeling.models.ConstantSpectralModel.evaluate_error", false]], "evaluate_error() (gammapy.modeling.models.eblabsorptionnormspectralmodel method)": [[213, "gammapy.modeling.models.EBLAbsorptionNormSpectralModel.evaluate_error", false]], "evaluate_error() (gammapy.modeling.models.expcutoffpowerlaw3fglspectralmodel method)": [[215, "gammapy.modeling.models.ExpCutoffPowerLaw3FGLSpectralModel.evaluate_error", false]], "evaluate_error() (gammapy.modeling.models.expcutoffpowerlawnormspectralmodel method)": [[216, "gammapy.modeling.models.ExpCutoffPowerLawNormSpectralModel.evaluate_error", false]], "evaluate_error() (gammapy.modeling.models.expcutoffpowerlawspectralmodel method)": [[217, "gammapy.modeling.models.ExpCutoffPowerLawSpectralModel.evaluate_error", false]], "evaluate_error() (gammapy.modeling.models.gaussianspectralmodel method)": [[221, "gammapy.modeling.models.GaussianSpectralModel.evaluate_error", false]], "evaluate_error() (gammapy.modeling.models.logparabolanormspectralmodel method)": [[227, "gammapy.modeling.models.LogParabolaNormSpectralModel.evaluate_error", false]], "evaluate_error() (gammapy.modeling.models.logparabolaspectralmodel method)": [[228, "gammapy.modeling.models.LogParabolaSpectralModel.evaluate_error", false]], "evaluate_error() (gammapy.modeling.models.meyercrabspectralmodel method)": [[230, "gammapy.modeling.models.MeyerCrabSpectralModel.evaluate_error", false]], "evaluate_error() (gammapy.modeling.models.naimaspectralmodel method)": [[234, "gammapy.modeling.models.NaimaSpectralModel.evaluate_error", false]], "evaluate_error() (gammapy.modeling.models.piecewisenormspectralmodel method)": [[236, "gammapy.modeling.models.PiecewiseNormSpectralModel.evaluate_error", false]], "evaluate_error() (gammapy.modeling.models.powerlaw2spectralmodel method)": [[238, "gammapy.modeling.models.PowerLaw2SpectralModel.evaluate_error", false]], "evaluate_error() (gammapy.modeling.models.powerlawnormspectralmodel method)": [[239, "gammapy.modeling.models.PowerLawNormSpectralModel.evaluate_error", false]], "evaluate_error() (gammapy.modeling.models.powerlawspectralmodel method)": [[240, "gammapy.modeling.models.PowerLawSpectralModel.evaluate_error", false]], "evaluate_error() (gammapy.modeling.models.scalespectralmodel method)": [[244, "gammapy.modeling.models.ScaleSpectralModel.evaluate_error", false]], "evaluate_error() (gammapy.modeling.models.smoothbrokenpowerlawspectralmodel method)": [[249, "gammapy.modeling.models.SmoothBrokenPowerLawSpectralModel.evaluate_error", false]], "evaluate_error() (gammapy.modeling.models.spectralmodel method)": [[251, "gammapy.modeling.models.SpectralModel.evaluate_error", false]], "evaluate_error() (gammapy.modeling.models.superexpcutoffpowerlaw3fglspectralmodel method)": [[252, "gammapy.modeling.models.SuperExpCutoffPowerLaw3FGLSpectralModel.evaluate_error", false]], "evaluate_error() (gammapy.modeling.models.superexpcutoffpowerlaw4fgldr3spectralmodel method)": [[253, "gammapy.modeling.models.SuperExpCutoffPowerLaw4FGLDR3SpectralModel.evaluate_error", false]], "evaluate_error() (gammapy.modeling.models.superexpcutoffpowerlaw4fglspectralmodel method)": [[254, "gammapy.modeling.models.SuperExpCutoffPowerLaw4FGLSpectralModel.evaluate_error", false]], "evaluate_error() (gammapy.modeling.models.templatendspectralmodel method)": [[257, "gammapy.modeling.models.TemplateNDSpectralModel.evaluate_error", false]], "evaluate_error() (gammapy.modeling.models.templatespectralmodel method)": [[261, "gammapy.modeling.models.TemplateSpectralModel.evaluate_error", false]], "evaluate_geom() (gammapy.modeling.models.constantfluxspatialmodel static method)": [[207, "gammapy.modeling.models.ConstantFluxSpatialModel.evaluate_geom", false]], "evaluate_geom() (gammapy.modeling.models.constantspatialmodel method)": [[208, "gammapy.modeling.models.ConstantSpatialModel.evaluate_geom", false]], "evaluate_geom() (gammapy.modeling.models.diskspatialmodel method)": [[212, "gammapy.modeling.models.DiskSpatialModel.evaluate_geom", false]], "evaluate_geom() (gammapy.modeling.models.fovbackgroundmodel method)": [[219, "gammapy.modeling.models.FoVBackgroundModel.evaluate_geom", false]], "evaluate_geom() (gammapy.modeling.models.gaussianspatialmodel method)": [[220, "gammapy.modeling.models.GaussianSpatialModel.evaluate_geom", false]], "evaluate_geom() (gammapy.modeling.models.generalizedgaussianspatialmodel method)": [[223, "gammapy.modeling.models.GeneralizedGaussianSpatialModel.evaluate_geom", false]], "evaluate_geom() (gammapy.modeling.models.piecewisenormspatialmodel method)": [[235, "gammapy.modeling.models.PiecewiseNormSpatialModel.evaluate_geom", false]], "evaluate_geom() (gammapy.modeling.models.pointspatialmodel method)": [[237, "gammapy.modeling.models.PointSpatialModel.evaluate_geom", false]], "evaluate_geom() (gammapy.modeling.models.shell2spatialmodel method)": [[245, "gammapy.modeling.models.Shell2SpatialModel.evaluate_geom", false]], "evaluate_geom() (gammapy.modeling.models.shellspatialmodel method)": [[246, "gammapy.modeling.models.ShellSpatialModel.evaluate_geom", false]], "evaluate_geom() (gammapy.modeling.models.skymodel method)": [[248, "gammapy.modeling.models.SkyModel.evaluate_geom", false]], "evaluate_geom() (gammapy.modeling.models.spatialmodel method)": [[250, "gammapy.modeling.models.SpatialModel.evaluate_geom", false]], "evaluate_geom() (gammapy.modeling.models.templatendspatialmodel method)": [[256, "gammapy.modeling.models.TemplateNDSpatialModel.evaluate_geom", false]], "evaluate_geom() (gammapy.modeling.models.templatespatialmodel method)": [[260, "gammapy.modeling.models.TemplateSpatialModel.evaluate_geom", false]], "evaluate_integral() (gammapy.modeling.models.powerlaw2spectralmodel static method)": [[238, "gammapy.modeling.models.PowerLaw2SpectralModel.evaluate_integral", false]], "evaluate_integral() (gammapy.modeling.models.powerlawnormspectralmodel static method)": [[239, "gammapy.modeling.models.PowerLawNormSpectralModel.evaluate_integral", false]], "evaluate_integral() (gammapy.modeling.models.powerlawspectralmodel static method)": [[240, "gammapy.modeling.models.PowerLawSpectralModel.evaluate_integral", false]], "evaluate_parameters() (gammapy.irf.energydependentmultigausspsf method)": [[144, "gammapy.irf.EnergyDependentMultiGaussPSF.evaluate_parameters", false]], "evaluate_parameters() (gammapy.irf.parametricpsf method)": [[154, "gammapy.irf.ParametricPSF.evaluate_parameters", false]], "evaluate_parameters() (gammapy.irf.psfking method)": [[152, "gammapy.irf.PSFKing.evaluate_parameters", false]], "evaluation_bin_size_min (gammapy.modeling.models.constantfluxspatialmodel attribute)": [[207, "gammapy.modeling.models.ConstantFluxSpatialModel.evaluation_bin_size_min", false]], "evaluation_bin_size_min (gammapy.modeling.models.constantspatialmodel attribute)": [[208, "gammapy.modeling.models.ConstantSpatialModel.evaluation_bin_size_min", false]], "evaluation_bin_size_min (gammapy.modeling.models.diskspatialmodel attribute)": [[212, "gammapy.modeling.models.DiskSpatialModel.evaluation_bin_size_min", false]], "evaluation_bin_size_min (gammapy.modeling.models.gaussianspatialmodel attribute)": [[220, "gammapy.modeling.models.GaussianSpatialModel.evaluation_bin_size_min", false]], "evaluation_bin_size_min (gammapy.modeling.models.generalizedgaussianspatialmodel attribute)": [[223, "gammapy.modeling.models.GeneralizedGaussianSpatialModel.evaluation_bin_size_min", false]], "evaluation_bin_size_min (gammapy.modeling.models.piecewisenormspatialmodel attribute)": [[235, "gammapy.modeling.models.PiecewiseNormSpatialModel.evaluation_bin_size_min", false]], "evaluation_bin_size_min (gammapy.modeling.models.pointspatialmodel attribute)": [[237, "gammapy.modeling.models.PointSpatialModel.evaluation_bin_size_min", false]], "evaluation_bin_size_min (gammapy.modeling.models.shell2spatialmodel attribute)": [[245, "gammapy.modeling.models.Shell2SpatialModel.evaluation_bin_size_min", false]], "evaluation_bin_size_min (gammapy.modeling.models.shellspatialmodel attribute)": [[246, "gammapy.modeling.models.ShellSpatialModel.evaluation_bin_size_min", false]], "evaluation_bin_size_min (gammapy.modeling.models.skymodel attribute)": [[248, "gammapy.modeling.models.SkyModel.evaluation_bin_size_min", false]], "evaluation_bin_size_min (gammapy.modeling.models.spatialmodel attribute)": [[250, "gammapy.modeling.models.SpatialModel.evaluation_bin_size_min", false]], "evaluation_bin_size_min (gammapy.modeling.models.templatendspatialmodel attribute)": [[256, "gammapy.modeling.models.TemplateNDSpatialModel.evaluation_bin_size_min", false]], "evaluation_bin_size_min (gammapy.modeling.models.templatespatialmodel attribute)": [[260, "gammapy.modeling.models.TemplateSpatialModel.evaluation_bin_size_min", false]], "evaluation_radius (gammapy.modeling.models.constantfluxspatialmodel attribute)": [[207, "gammapy.modeling.models.ConstantFluxSpatialModel.evaluation_radius", false]], "evaluation_radius (gammapy.modeling.models.constantspatialmodel attribute)": [[208, "gammapy.modeling.models.ConstantSpatialModel.evaluation_radius", false]], "evaluation_radius (gammapy.modeling.models.diskspatialmodel attribute)": [[212, "gammapy.modeling.models.DiskSpatialModel.evaluation_radius", false]], "evaluation_radius (gammapy.modeling.models.gaussianspatialmodel attribute)": [[220, "gammapy.modeling.models.GaussianSpatialModel.evaluation_radius", false]], "evaluation_radius (gammapy.modeling.models.generalizedgaussianspatialmodel attribute)": [[223, "gammapy.modeling.models.GeneralizedGaussianSpatialModel.evaluation_radius", false]], "evaluation_radius (gammapy.modeling.models.piecewisenormspatialmodel attribute)": [[235, "gammapy.modeling.models.PiecewiseNormSpatialModel.evaluation_radius", false]], "evaluation_radius (gammapy.modeling.models.pointspatialmodel attribute)": [[237, "gammapy.modeling.models.PointSpatialModel.evaluation_radius", false]], "evaluation_radius (gammapy.modeling.models.shell2spatialmodel attribute)": [[245, "gammapy.modeling.models.Shell2SpatialModel.evaluation_radius", false]], "evaluation_radius (gammapy.modeling.models.shellspatialmodel attribute)": [[246, "gammapy.modeling.models.ShellSpatialModel.evaluation_radius", false]], "evaluation_radius (gammapy.modeling.models.skymodel attribute)": [[248, "gammapy.modeling.models.SkyModel.evaluation_radius", false]], "evaluation_radius (gammapy.modeling.models.spatialmodel attribute)": [[250, "gammapy.modeling.models.SpatialModel.evaluation_radius", false]], "evaluation_radius (gammapy.modeling.models.templatendspatialmodel attribute)": [[256, "gammapy.modeling.models.TemplateNDSpatialModel.evaluation_radius", false]], "evaluation_radius (gammapy.modeling.models.templatenpredmodel attribute)": [[258, "gammapy.modeling.models.TemplateNPredModel.evaluation_radius", false]], "evaluation_radius (gammapy.modeling.models.templatespatialmodel attribute)": [[260, "gammapy.modeling.models.TemplateSpatialModel.evaluation_radius", false]], "evaluation_region (gammapy.modeling.models.constantfluxspatialmodel attribute)": [[207, "gammapy.modeling.models.ConstantFluxSpatialModel.evaluation_region", false]], "evaluation_region (gammapy.modeling.models.constantspatialmodel attribute)": [[208, "gammapy.modeling.models.ConstantSpatialModel.evaluation_region", false]], "evaluation_region (gammapy.modeling.models.diskspatialmodel attribute)": [[212, "gammapy.modeling.models.DiskSpatialModel.evaluation_region", false]], "evaluation_region (gammapy.modeling.models.gaussianspatialmodel attribute)": [[220, "gammapy.modeling.models.GaussianSpatialModel.evaluation_region", false]], "evaluation_region (gammapy.modeling.models.generalizedgaussianspatialmodel attribute)": [[223, "gammapy.modeling.models.GeneralizedGaussianSpatialModel.evaluation_region", false]], "evaluation_region (gammapy.modeling.models.piecewisenormspatialmodel attribute)": [[235, "gammapy.modeling.models.PiecewiseNormSpatialModel.evaluation_region", false]], "evaluation_region (gammapy.modeling.models.pointspatialmodel attribute)": [[237, "gammapy.modeling.models.PointSpatialModel.evaluation_region", false]], "evaluation_region (gammapy.modeling.models.shell2spatialmodel attribute)": [[245, "gammapy.modeling.models.Shell2SpatialModel.evaluation_region", false]], "evaluation_region (gammapy.modeling.models.shellspatialmodel attribute)": [[246, "gammapy.modeling.models.ShellSpatialModel.evaluation_region", false]], "evaluation_region (gammapy.modeling.models.skymodel attribute)": [[248, "gammapy.modeling.models.SkyModel.evaluation_region", false]], "evaluation_region (gammapy.modeling.models.spatialmodel attribute)": [[250, "gammapy.modeling.models.SpatialModel.evaluation_region", false]], "evaluation_region (gammapy.modeling.models.templatendspatialmodel attribute)": [[256, "gammapy.modeling.models.TemplateNDSpatialModel.evaluation_region", false]], "evaluation_region (gammapy.modeling.models.templatespatialmodel attribute)": [[260, "gammapy.modeling.models.TemplateSpatialModel.evaluation_region", false]], "evaluators (gammapy.datasets.mapdataset attribute)": [[97, "gammapy.datasets.MapDataset.evaluators", false]], "evaluators (gammapy.datasets.mapdatasetonoff attribute)": [[100, "gammapy.datasets.MapDatasetOnOff.evaluators", false]], "evaluators (gammapy.datasets.spectrumdataset attribute)": [[104, "gammapy.datasets.SpectrumDataset.evaluators", false]], "evaluators (gammapy.datasets.spectrumdatasetonoff attribute)": [[105, "gammapy.datasets.SpectrumDatasetOnOff.evaluators", false]], "event_det_coords() (gammapy.datasets.mapdataseteventsampler static method)": [[98, "gammapy.datasets.MapDatasetEventSampler.event_det_coords", false]], "event_det_coords() (gammapy.datasets.observationeventsampler static method)": [[103, "gammapy.datasets.ObservationEventSampler.event_det_coords", false]], "event_filter_types (gammapy.data.observationfilter attribute)": [[85, "gammapy.data.ObservationFilter.EVENT_FILTER_TYPES", false]], "event_list_meta() (gammapy.datasets.mapdataseteventsampler static method)": [[98, "gammapy.datasets.MapDatasetEventSampler.event_list_meta", false]], "event_list_meta() (gammapy.datasets.observationeventsampler static method)": [[103, "gammapy.datasets.ObservationEventSampler.event_list_meta", false]], "eventlist (class in gammapy.data)": [[79, "gammapy.data.EventList", false]], "eventlistmetadata (class in gammapy.data)": [[80, "gammapy.data.EventListMetaData", false]], "events (gammapy.data.observation attribute)": [[84, "gammapy.data.Observation.events", false]], "evolved (gammapy.astro.population.casebattacharya1998 attribute)": [[28, "gammapy.astro.population.CaseBattacharya1998.evolved", false]], "evolved (gammapy.astro.population.exponential attribute)": [[29, "gammapy.astro.population.Exponential.evolved", false]], "evolved (gammapy.astro.population.faucherkaspi2006 attribute)": [[30, "gammapy.astro.population.FaucherKaspi2006.evolved", false]], "evolved (gammapy.astro.population.lorimer2006 attribute)": [[35, "gammapy.astro.population.Lorimer2006.evolved", false]], "evolved (gammapy.astro.population.paczynski1990 attribute)": [[36, "gammapy.astro.population.Paczynski1990.evolved", false]], "evolved (gammapy.astro.population.yusifovkucuk2004 attribute)": [[39, "gammapy.astro.population.YusifovKucuk2004.evolved", false]], "evolved (gammapy.astro.population.yusifovkucuk2004b attribute)": [[40, "gammapy.astro.population.YusifovKucuk2004B.evolved", false]], "excess (gammapy.datasets.mapdataset attribute)": [[97, "gammapy.datasets.MapDataset.excess", false]], "excess (gammapy.datasets.mapdatasetonoff attribute)": [[100, "gammapy.datasets.MapDatasetOnOff.excess", false]], "excess (gammapy.datasets.spectrumdataset attribute)": [[104, "gammapy.datasets.SpectrumDataset.excess", false]], "excess (gammapy.datasets.spectrumdatasetonoff attribute)": [[105, "gammapy.datasets.SpectrumDatasetOnOff.excess", false]], "excessmapestimator (class in gammapy.estimators)": [[116, "gammapy.estimators.ExcessMapEstimator", false]], "expand_map() (gammapy.estimators.lightcurveestimator static method)": [[124, "gammapy.estimators.LightCurveEstimator.expand_map", false]], "expcutoffpowerlaw3fglspectralmodel (class in gammapy.modeling.models)": [[215, "gammapy.modeling.models.ExpCutoffPowerLaw3FGLSpectralModel", false]], "expcutoffpowerlawnormspectralmodel (class in gammapy.modeling.models)": [[216, "gammapy.modeling.models.ExpCutoffPowerLawNormSpectralModel", false]], "expcutoffpowerlawspectralmodel (class in gammapy.modeling.models)": [[217, "gammapy.modeling.models.ExpCutoffPowerLawSpectralModel", false]], "expdecaytemporalmodel (class in gammapy.modeling.models)": [[218, "gammapy.modeling.models.ExpDecayTemporalModel", false]], "expfactor (gammapy.modeling.models.superexpcutoffpowerlaw4fgldr3spectralmodel attribute)": [[253, "gammapy.modeling.models.SuperExpCutoffPowerLaw4FGLDR3SpectralModel.expfactor", false]], "expfactor (gammapy.modeling.models.superexpcutoffpowerlaw4fglspectralmodel attribute)": [[254, "gammapy.modeling.models.SuperExpCutoffPowerLaw4FGLSpectralModel.expfactor", false]], "exponential (class in gammapy.astro.population)": [[29, "gammapy.astro.population.Exponential", false]], "exposure (gammapy.datasets.mapdataset attribute)": [[97, "gammapy.datasets.MapDataset.exposure", false]], "exposure (gammapy.datasets.mapdatasetonoff attribute)": [[100, "gammapy.datasets.MapDatasetOnOff.exposure", false]], "exposure (gammapy.datasets.spectrumdataset attribute)": [[104, "gammapy.datasets.SpectrumDataset.exposure", false]], "exposure (gammapy.datasets.spectrumdatasetonoff attribute)": [[105, "gammapy.datasets.SpectrumDatasetOnOff.exposure", false]], "extend() (gammapy.data.observations method)": [[87, "gammapy.data.Observations.extend", false]], "extend() (gammapy.datasets.datasets method)": [[95, "gammapy.datasets.Datasets.extend", false]], "extend() (gammapy.modeling.models.models method)": [[233, "gammapy.modeling.models.Models.extend", false]], "f0 (gammapy.modeling.models.templatephasecurvetemporalmodel attribute)": [[259, "gammapy.modeling.models.TemplatePhaseCurveTemporalModel.f0", false]], "f1 (gammapy.modeling.models.templatephasecurvetemporalmodel attribute)": [[259, "gammapy.modeling.models.TemplatePhaseCurveTemporalModel.f1", false]], "f2 (gammapy.modeling.models.templatephasecurvetemporalmodel attribute)": [[259, "gammapy.modeling.models.TemplatePhaseCurveTemporalModel.f2", false]], "f_cash_root_cython() (in module gammapy.stats)": [[282, "gammapy.stats.f_cash_root_cython", false]], "factor (gammapy.modeling.parameter attribute)": [[201, "gammapy.modeling.Parameter.factor", false]], "factor (gammapy.modeling.priorparameter attribute)": [[203, "gammapy.modeling.PriorParameter.factor", false]], "factor_max (gammapy.modeling.parameter attribute)": [[201, "gammapy.modeling.Parameter.factor_max", false]], "factor_max (gammapy.modeling.priorparameter attribute)": [[203, "gammapy.modeling.PriorParameter.factor_max", false]], "factor_min (gammapy.modeling.parameter attribute)": [[201, "gammapy.modeling.Parameter.factor_min", false]], "factor_min (gammapy.modeling.priorparameter attribute)": [[203, "gammapy.modeling.PriorParameter.factor_min", false]], "fake() (gammapy.datasets.mapdataset method)": [[97, "gammapy.datasets.MapDataset.fake", false]], "fake() (gammapy.datasets.mapdatasetonoff method)": [[100, "gammapy.datasets.MapDatasetOnOff.fake", false]], "fake() (gammapy.datasets.spectrumdataset method)": [[104, "gammapy.datasets.SpectrumDataset.fake", false]], "fake() (gammapy.datasets.spectrumdatasetonoff method)": [[105, "gammapy.datasets.SpectrumDatasetOnOff.fake", false]], "faucherkaspi2006 (class in gammapy.astro.population)": [[30, "gammapy.astro.population.FaucherKaspi2006", false]], "faucherkaspi2006velocitybimodal (class in gammapy.astro.population)": [[31, "gammapy.astro.population.FaucherKaspi2006VelocityBimodal", false]], "faucherkaspi2006velocitymaxwellian (class in gammapy.astro.population)": [[32, "gammapy.astro.population.FaucherKaspi2006VelocityMaxwellian", false]], "faucherspiral (class in gammapy.astro.population)": [[33, "gammapy.astro.population.FaucherSpiral", false]], "field() (gammapy.data.hduindextable method)": [[83, "gammapy.data.HDUIndexTable.field", false]], "field() (gammapy.data.observationtable method)": [[86, "gammapy.data.ObservationTable.field", false]], "fill_by_coord() (gammapy.maps.hpxmap method)": [[183, "gammapy.maps.HpxMap.fill_by_coord", false]], "fill_by_coord() (gammapy.maps.hpxndmap method)": [[184, "gammapy.maps.HpxNDMap.fill_by_coord", false]], "fill_by_coord() (gammapy.maps.map method)": [[186, "gammapy.maps.Map.fill_by_coord", false]], "fill_by_coord() (gammapy.maps.regionndmap method)": [[192, "gammapy.maps.RegionNDMap.fill_by_coord", false]], "fill_by_coord() (gammapy.maps.wcsmap method)": [[195, "gammapy.maps.WcsMap.fill_by_coord", false]], "fill_by_coord() (gammapy.maps.wcsndmap method)": [[196, "gammapy.maps.WcsNDMap.fill_by_coord", false]], "fill_by_idx() (gammapy.maps.hpxmap method)": [[183, "gammapy.maps.HpxMap.fill_by_idx", false]], "fill_by_idx() (gammapy.maps.hpxndmap method)": [[184, "gammapy.maps.HpxNDMap.fill_by_idx", false]], "fill_by_idx() (gammapy.maps.map method)": [[186, "gammapy.maps.Map.fill_by_idx", false]], "fill_by_idx() (gammapy.maps.regionndmap method)": [[192, "gammapy.maps.RegionNDMap.fill_by_idx", false]], "fill_by_idx() (gammapy.maps.wcsmap method)": [[195, "gammapy.maps.WcsMap.fill_by_idx", false]], "fill_by_idx() (gammapy.maps.wcsndmap method)": [[196, "gammapy.maps.WcsNDMap.fill_by_idx", false]], "fill_by_pix() (gammapy.maps.hpxmap method)": [[183, "gammapy.maps.HpxMap.fill_by_pix", false]], "fill_by_pix() (gammapy.maps.hpxndmap method)": [[184, "gammapy.maps.HpxNDMap.fill_by_pix", false]], "fill_by_pix() (gammapy.maps.map method)": [[186, "gammapy.maps.Map.fill_by_pix", false]], "fill_by_pix() (gammapy.maps.regionndmap method)": [[192, "gammapy.maps.RegionNDMap.fill_by_pix", false]], "fill_by_pix() (gammapy.maps.wcsmap method)": [[195, "gammapy.maps.WcsMap.fill_by_pix", false]], "fill_by_pix() (gammapy.maps.wcsndmap method)": [[196, "gammapy.maps.WcsNDMap.fill_by_pix", false]], "fill_events() (gammapy.maps.hpxmap method)": [[183, "gammapy.maps.HpxMap.fill_events", false]], "fill_events() (gammapy.maps.hpxndmap method)": [[184, "gammapy.maps.HpxNDMap.fill_events", false]], "fill_events() (gammapy.maps.map method)": [[186, "gammapy.maps.Map.fill_events", false]], "fill_events() (gammapy.maps.regionndmap method)": [[192, "gammapy.maps.RegionNDMap.fill_events", false]], "fill_events() (gammapy.maps.wcsmap method)": [[195, "gammapy.maps.WcsMap.fill_events", false]], "fill_events() (gammapy.maps.wcsndmap method)": [[196, "gammapy.maps.WcsNDMap.fill_events", false]], "filled() (gammapy.data.hduindextable method)": [[83, "gammapy.data.HDUIndexTable.filled", false]], "filled() (gammapy.data.observationtable method)": [[86, "gammapy.data.ObservationTable.filled", false]], "filter_events() (gammapy.data.observationfilter method)": [[85, "gammapy.data.ObservationFilter.filter_events", false]], "filter_gti() (gammapy.data.observationfilter method)": [[85, "gammapy.data.ObservationFilter.filter_gti", false]], "filter_success_nan (gammapy.estimators.fluxmaps attribute)": [[117, "gammapy.estimators.FluxMaps.filter_success_nan", false]], "filter_success_nan (gammapy.estimators.fluxpoints attribute)": [[119, "gammapy.estimators.FluxPoints.filter_success_nan", false]], "find_peaks() (in module gammapy.estimators.utils)": [[132, "gammapy.estimators.utils.find_peaks", false]], "find_peaks_in_flux_map() (in module gammapy.estimators.utils)": [[133, "gammapy.estimators.utils.find_peaks_in_flux_map", false]], "fit (class in gammapy.modeling)": [[200, "gammapy.modeling.Fit", false]], "fit_deriv (gammapy.astro.population.casebattacharya1998 attribute)": [[28, "gammapy.astro.population.CaseBattacharya1998.fit_deriv", false]], "fit_deriv (gammapy.astro.population.exponential attribute)": [[29, "gammapy.astro.population.Exponential.fit_deriv", false]], "fit_deriv (gammapy.astro.population.faucherkaspi2006 attribute)": [[30, "gammapy.astro.population.FaucherKaspi2006.fit_deriv", false]], "fit_deriv (gammapy.astro.population.faucherkaspi2006velocitybimodal attribute)": [[31, "gammapy.astro.population.FaucherKaspi2006VelocityBimodal.fit_deriv", false]], "fit_deriv (gammapy.astro.population.faucherkaspi2006velocitymaxwellian attribute)": [[32, "gammapy.astro.population.FaucherKaspi2006VelocityMaxwellian.fit_deriv", false]], "fit_deriv (gammapy.astro.population.lorimer2006 attribute)": [[35, "gammapy.astro.population.Lorimer2006.fit_deriv", false]], "fit_deriv (gammapy.astro.population.paczynski1990 attribute)": [[36, "gammapy.astro.population.Paczynski1990.fit_deriv", false]], "fit_deriv (gammapy.astro.population.paczynski1990velocity attribute)": [[37, "gammapy.astro.population.Paczynski1990Velocity.fit_deriv", false]], "fit_deriv (gammapy.astro.population.yusifovkucuk2004 attribute)": [[39, "gammapy.astro.population.YusifovKucuk2004.fit_deriv", false]], "fit_deriv (gammapy.astro.population.yusifovkucuk2004b attribute)": [[40, "gammapy.astro.population.YusifovKucuk2004B.fit_deriv", false]], "fittable (gammapy.astro.population.casebattacharya1998 attribute)": [[28, "gammapy.astro.population.CaseBattacharya1998.fittable", false]], "fittable (gammapy.astro.population.exponential attribute)": [[29, "gammapy.astro.population.Exponential.fittable", false]], "fittable (gammapy.astro.population.faucherkaspi2006 attribute)": [[30, "gammapy.astro.population.FaucherKaspi2006.fittable", false]], "fittable (gammapy.astro.population.faucherkaspi2006velocitybimodal attribute)": [[31, "gammapy.astro.population.FaucherKaspi2006VelocityBimodal.fittable", false]], "fittable (gammapy.astro.population.faucherkaspi2006velocitymaxwellian attribute)": [[32, "gammapy.astro.population.FaucherKaspi2006VelocityMaxwellian.fittable", false]], "fittable (gammapy.astro.population.lorimer2006 attribute)": [[35, "gammapy.astro.population.Lorimer2006.fittable", false]], "fittable (gammapy.astro.population.paczynski1990 attribute)": [[36, "gammapy.astro.population.Paczynski1990.fittable", false]], "fittable (gammapy.astro.population.paczynski1990velocity attribute)": [[37, "gammapy.astro.population.Paczynski1990Velocity.fittable", false]], "fittable (gammapy.astro.population.yusifovkucuk2004 attribute)": [[39, "gammapy.astro.population.YusifovKucuk2004.fittable", false]], "fittable (gammapy.astro.population.yusifovkucuk2004b attribute)": [[40, "gammapy.astro.population.YusifovKucuk2004B.fittable", false]], "fixed (gammapy.astro.population.casebattacharya1998 attribute)": [[28, "gammapy.astro.population.CaseBattacharya1998.fixed", false]], "fixed (gammapy.astro.population.exponential attribute)": [[29, "gammapy.astro.population.Exponential.fixed", false]], "fixed (gammapy.astro.population.faucherkaspi2006 attribute)": [[30, "gammapy.astro.population.FaucherKaspi2006.fixed", false]], "fixed (gammapy.astro.population.faucherkaspi2006velocitybimodal attribute)": [[31, "gammapy.astro.population.FaucherKaspi2006VelocityBimodal.fixed", false]], "fixed (gammapy.astro.population.faucherkaspi2006velocitymaxwellian attribute)": [[32, "gammapy.astro.population.FaucherKaspi2006VelocityMaxwellian.fixed", false]], "fixed (gammapy.astro.population.lorimer2006 attribute)": [[35, "gammapy.astro.population.Lorimer2006.fixed", false]], "fixed (gammapy.astro.population.paczynski1990 attribute)": [[36, "gammapy.astro.population.Paczynski1990.fixed", false]], "fixed (gammapy.astro.population.paczynski1990velocity attribute)": [[37, "gammapy.astro.population.Paczynski1990Velocity.fixed", false]], "fixed (gammapy.astro.population.yusifovkucuk2004 attribute)": [[39, "gammapy.astro.population.YusifovKucuk2004.fixed", false]], "fixed (gammapy.astro.population.yusifovkucuk2004b attribute)": [[40, "gammapy.astro.population.YusifovKucuk2004B.fixed", false]], "fixed_altaz (gammapy.data.fixedpointinginfo attribute)": [[81, "gammapy.data.FixedPointingInfo.fixed_altaz", false]], "fixed_icrs (gammapy.data.fixedpointinginfo attribute)": [[81, "gammapy.data.FixedPointingInfo.fixed_icrs", false]], "fixedpointinginfo (class in gammapy.data)": [[81, "gammapy.data.FixedPointingInfo", false]], "flat (gammapy.maps.mapcoord attribute)": [[189, "gammapy.maps.MapCoord.flat", false]], "flux (gammapy.estimators.fluxmaps attribute)": [[117, "gammapy.estimators.FluxMaps.flux", false]], "flux (gammapy.estimators.fluxpoints attribute)": [[119, "gammapy.estimators.FluxPoints.flux", false]], "flux_err (gammapy.estimators.fluxmaps attribute)": [[117, "gammapy.estimators.FluxMaps.flux_err", false]], "flux_err (gammapy.estimators.fluxpoints attribute)": [[119, "gammapy.estimators.FluxPoints.flux_err", false]], "flux_errn (gammapy.estimators.fluxmaps attribute)": [[117, "gammapy.estimators.FluxMaps.flux_errn", false]], "flux_errn (gammapy.estimators.fluxpoints attribute)": [[119, "gammapy.estimators.FluxPoints.flux_errn", false]], "flux_errp (gammapy.estimators.fluxmaps attribute)": [[117, "gammapy.estimators.FluxMaps.flux_errp", false]], "flux_errp (gammapy.estimators.fluxpoints attribute)": [[119, "gammapy.estimators.FluxPoints.flux_errp", false]], "flux_points (gammapy.catalog.sourcecatalogobject2fhl attribute)": [[69, "gammapy.catalog.SourceCatalogObject2FHL.flux_points", false]], "flux_points (gammapy.catalog.sourcecatalogobject3fgl attribute)": [[71, "gammapy.catalog.SourceCatalogObject3FGL.flux_points", false]], "flux_points (gammapy.catalog.sourcecatalogobject3fhl attribute)": [[72, "gammapy.catalog.SourceCatalogObject3FHL.flux_points", false]], "flux_points (gammapy.catalog.sourcecatalogobject4fgl attribute)": [[74, "gammapy.catalog.SourceCatalogObject4FGL.flux_points", false]], "flux_points (gammapy.catalog.sourcecatalogobjectgammacat attribute)": [[75, "gammapy.catalog.SourceCatalogObjectGammaCat.flux_points", false]], "flux_points (gammapy.catalog.sourcecatalogobjecthgps attribute)": [[76, "gammapy.catalog.SourceCatalogObjectHGPS.flux_points", false]], "flux_points_meta (gammapy.catalog.sourcecatalogobject2fhl attribute)": [[69, "gammapy.catalog.SourceCatalogObject2FHL.flux_points_meta", false]], "flux_points_meta (gammapy.catalog.sourcecatalogobject3fgl attribute)": [[71, "gammapy.catalog.SourceCatalogObject3FGL.flux_points_meta", false]], "flux_points_meta (gammapy.catalog.sourcecatalogobject3fhl attribute)": [[72, "gammapy.catalog.SourceCatalogObject3FHL.flux_points_meta", false]], "flux_points_meta (gammapy.catalog.sourcecatalogobject4fgl attribute)": [[74, "gammapy.catalog.SourceCatalogObject4FGL.flux_points_meta", false]], "flux_points_table (gammapy.catalog.sourcecatalogobject2fhl attribute)": [[69, "gammapy.catalog.SourceCatalogObject2FHL.flux_points_table", false]], "flux_points_table (gammapy.catalog.sourcecatalogobject3fgl attribute)": [[71, "gammapy.catalog.SourceCatalogObject3FGL.flux_points_table", false]], "flux_points_table (gammapy.catalog.sourcecatalogobject3fhl attribute)": [[72, "gammapy.catalog.SourceCatalogObject3FHL.flux_points_table", false]], "flux_points_table (gammapy.catalog.sourcecatalogobject4fgl attribute)": [[74, "gammapy.catalog.SourceCatalogObject4FGL.flux_points_table", false]], "flux_points_table (gammapy.catalog.sourcecatalogobjectgammacat attribute)": [[75, "gammapy.catalog.SourceCatalogObjectGammaCat.flux_points_table", false]], "flux_points_table (gammapy.catalog.sourcecatalogobjecthgps attribute)": [[76, "gammapy.catalog.SourceCatalogObjectHGPS.flux_points_table", false]], "flux_pred() (gammapy.datasets.fluxpointsdataset method)": [[96, "gammapy.datasets.FluxPointsDataset.flux_pred", false]], "flux_ref (gammapy.estimators.fluxmaps attribute)": [[117, "gammapy.estimators.FluxMaps.flux_ref", false]], "flux_ref (gammapy.estimators.fluxpoints attribute)": [[119, "gammapy.estimators.FluxPoints.flux_ref", false]], "flux_sensitivity (gammapy.estimators.fluxmaps attribute)": [[117, "gammapy.estimators.FluxMaps.flux_sensitivity", false]], "flux_sensitivity (gammapy.estimators.fluxpoints attribute)": [[119, "gammapy.estimators.FluxPoints.flux_sensitivity", false]], "flux_ul (gammapy.estimators.fluxmaps attribute)": [[117, "gammapy.estimators.FluxMaps.flux_ul", false]], "flux_ul (gammapy.estimators.fluxpoints attribute)": [[119, "gammapy.estimators.FluxPoints.flux_ul", false]], "fluxmaps (class in gammapy.estimators)": [[117, "gammapy.estimators.FluxMaps", false]], "fluxmetadata (class in gammapy.estimators)": [[118, "gammapy.estimators.FluxMetaData", false]], "fluxpoints (class in gammapy.estimators)": [[119, "gammapy.estimators.FluxPoints", false]], "fluxpointsdataset (class in gammapy.datasets)": [[96, "gammapy.datasets.FluxPointsDataset", false]], "fluxpointsestimator (class in gammapy.estimators)": [[120, "gammapy.estimators.FluxPointsEstimator", false]], "fluxprofileestimator (class in gammapy.estimators)": [[121, "gammapy.estimators.FluxProfileEstimator", false]], "footprint (gammapy.maps.wcsgeom attribute)": [[194, "gammapy.maps.WcsGeom.footprint", false]], "footprint_rectangle_sky_region (gammapy.maps.wcsgeom attribute)": [[194, "gammapy.maps.WcsGeom.footprint_rectangle_sky_region", false]], "format_plot_xaxis() (gammapy.maps.labelmapaxis method)": [[185, "gammapy.maps.LabelMapAxis.format_plot_xaxis", false]], "format_plot_xaxis() (gammapy.maps.mapaxis method)": [[188, "gammapy.maps.MapAxis.format_plot_xaxis", false]], "format_plot_xaxis() (gammapy.maps.timemapaxis method)": [[193, "gammapy.maps.TimeMapAxis.format_plot_xaxis", false]], "format_plot_yaxis() (gammapy.maps.mapaxis method)": [[188, "gammapy.maps.MapAxis.format_plot_yaxis", false]], "fov": [[554, "term-FoV", true]], "fov background": [[554, "term-FoV-Background", true]], "fov_alignment (gammapy.irf.background2d attribute)": [[137, "gammapy.irf.Background2D.fov_alignment", false]], "fov_alignment (gammapy.irf.background3d attribute)": [[138, "gammapy.irf.Background3D.fov_alignment", false]], "fov_alignment (gammapy.irf.backgroundirf attribute)": [[139, "gammapy.irf.BackgroundIRF.fov_alignment", false]], "fov_alignment (gammapy.irf.edispkernel attribute)": [[140, "gammapy.irf.EDispKernel.fov_alignment", false]], "fov_alignment (gammapy.irf.effectiveareatable2d attribute)": [[143, "gammapy.irf.EffectiveAreaTable2D.fov_alignment", false]], "fov_alignment (gammapy.irf.energydependentmultigausspsf attribute)": [[144, "gammapy.irf.EnergyDependentMultiGaussPSF.fov_alignment", false]], "fov_alignment (gammapy.irf.energydispersion2d attribute)": [[145, "gammapy.irf.EnergyDispersion2D.fov_alignment", false]], "fov_alignment (gammapy.irf.irf attribute)": [[147, "gammapy.irf.IRF.fov_alignment", false]], "fov_alignment (gammapy.irf.parametricpsf attribute)": [[154, "gammapy.irf.ParametricPSF.fov_alignment", false]], "fov_alignment (gammapy.irf.psf3d attribute)": [[150, "gammapy.irf.PSF3D.fov_alignment", false]], "fov_alignment (gammapy.irf.psfking attribute)": [[152, "gammapy.irf.PSFKing.fov_alignment", false]], "fov_alignment (gammapy.irf.radmax2d attribute)": [[155, "gammapy.irf.RadMax2D.fov_alignment", false]], "fov_to_sky() (in module gammapy.utils.coordinates)": [[292, "gammapy.utils.coordinates.fov_to_sky", false]], "fovalignment (class in gammapy.irf)": [[146, "gammapy.irf.FoVAlignment", false]], "fovbackgroundmaker (class in gammapy.makers)": [[160, "gammapy.makers.FoVBackgroundMaker", false]], "fovbackgroundmodel (class in gammapy.modeling.models)": [[219, "gammapy.modeling.models.FoVBackgroundModel", false]], "frame (gammapy.maps.hpxgeom attribute)": [[182, "gammapy.maps.HpxGeom.frame", false]], "frame (gammapy.maps.mapcoord attribute)": [[189, "gammapy.maps.MapCoord.frame", false]], "frame (gammapy.maps.regiongeom attribute)": [[191, "gammapy.maps.RegionGeom.frame", false]], "frame (gammapy.maps.wcsgeom attribute)": [[194, "gammapy.maps.WcsGeom.frame", false]], "frame (gammapy.modeling.models.constantfluxspatialmodel attribute)": [[207, "gammapy.modeling.models.ConstantFluxSpatialModel.frame", false]], "frame (gammapy.modeling.models.constantspatialmodel attribute)": [[208, "gammapy.modeling.models.ConstantSpatialModel.frame", false]], "frame (gammapy.modeling.models.skymodel attribute)": [[248, "gammapy.modeling.models.SkyModel.frame", false]], "free_parameters (gammapy.modeling.parameters attribute)": [[202, "gammapy.modeling.Parameters.free_parameters", false]], "free_parameters (gammapy.modeling.priorparameters attribute)": [[204, "gammapy.modeling.PriorParameters.free_parameters", false]], "freeze() (gammapy.astro.darkmatter.darkmatterannihilationspectralmodel method)": [[19, "gammapy.astro.darkmatter.DarkMatterAnnihilationSpectralModel.freeze", false]], "freeze() (gammapy.astro.darkmatter.darkmatterdecayspectralmodel method)": [[20, "gammapy.astro.darkmatter.DarkMatterDecaySpectralModel.freeze", false]], "freeze() (gammapy.astro.darkmatter.primaryflux method)": [[26, "gammapy.astro.darkmatter.PrimaryFlux.freeze", false]], "freeze() (gammapy.modeling.models.brokenpowerlawspectralmodel method)": [[205, "gammapy.modeling.models.BrokenPowerLawSpectralModel.freeze", false]], "freeze() (gammapy.modeling.models.compoundspectralmodel method)": [[206, "gammapy.modeling.models.CompoundSpectralModel.freeze", false]], "freeze() (gammapy.modeling.models.constantfluxspatialmodel method)": [[207, "gammapy.modeling.models.ConstantFluxSpatialModel.freeze", false]], "freeze() (gammapy.modeling.models.constantspatialmodel method)": [[208, "gammapy.modeling.models.ConstantSpatialModel.freeze", false]], "freeze() (gammapy.modeling.models.constantspectralmodel method)": [[209, "gammapy.modeling.models.ConstantSpectralModel.freeze", false]], "freeze() (gammapy.modeling.models.constanttemporalmodel method)": [[210, "gammapy.modeling.models.ConstantTemporalModel.freeze", false]], "freeze() (gammapy.modeling.models.datasetmodels method)": [[211, "gammapy.modeling.models.DatasetModels.freeze", false]], "freeze() (gammapy.modeling.models.diskspatialmodel method)": [[212, "gammapy.modeling.models.DiskSpatialModel.freeze", false]], "freeze() (gammapy.modeling.models.eblabsorptionnormspectralmodel method)": [[213, "gammapy.modeling.models.EBLAbsorptionNormSpectralModel.freeze", false]], "freeze() (gammapy.modeling.models.expcutoffpowerlaw3fglspectralmodel method)": [[215, "gammapy.modeling.models.ExpCutoffPowerLaw3FGLSpectralModel.freeze", false]], "freeze() (gammapy.modeling.models.expcutoffpowerlawnormspectralmodel method)": [[216, "gammapy.modeling.models.ExpCutoffPowerLawNormSpectralModel.freeze", false]], "freeze() (gammapy.modeling.models.expcutoffpowerlawspectralmodel method)": [[217, "gammapy.modeling.models.ExpCutoffPowerLawSpectralModel.freeze", false]], "freeze() (gammapy.modeling.models.expdecaytemporalmodel method)": [[218, "gammapy.modeling.models.ExpDecayTemporalModel.freeze", false]], "freeze() (gammapy.modeling.models.fovbackgroundmodel method)": [[219, "gammapy.modeling.models.FoVBackgroundModel.freeze", false]], "freeze() (gammapy.modeling.models.gaussianspatialmodel method)": [[220, "gammapy.modeling.models.GaussianSpatialModel.freeze", false]], "freeze() (gammapy.modeling.models.gaussianspectralmodel method)": [[221, "gammapy.modeling.models.GaussianSpectralModel.freeze", false]], "freeze() (gammapy.modeling.models.gaussiantemporalmodel method)": [[222, "gammapy.modeling.models.GaussianTemporalModel.freeze", false]], "freeze() (gammapy.modeling.models.generalizedgaussianspatialmodel method)": [[223, "gammapy.modeling.models.GeneralizedGaussianSpatialModel.freeze", false]], "freeze() (gammapy.modeling.models.generalizedgaussiantemporalmodel method)": [[224, "gammapy.modeling.models.GeneralizedGaussianTemporalModel.freeze", false]], "freeze() (gammapy.modeling.models.lightcurvetemplatetemporalmodel method)": [[225, "gammapy.modeling.models.LightCurveTemplateTemporalModel.freeze", false]], "freeze() (gammapy.modeling.models.lineartemporalmodel method)": [[226, "gammapy.modeling.models.LinearTemporalModel.freeze", false]], "freeze() (gammapy.modeling.models.logparabolanormspectralmodel method)": [[227, "gammapy.modeling.models.LogParabolaNormSpectralModel.freeze", false]], "freeze() (gammapy.modeling.models.logparabolaspectralmodel method)": [[228, "gammapy.modeling.models.LogParabolaSpectralModel.freeze", false]], "freeze() (gammapy.modeling.models.meyercrabspectralmodel method)": [[230, "gammapy.modeling.models.MeyerCrabSpectralModel.freeze", false]], "freeze() (gammapy.modeling.models.modelbase method)": [[232, "gammapy.modeling.models.ModelBase.freeze", false]], "freeze() (gammapy.modeling.models.models method)": [[233, "gammapy.modeling.models.Models.freeze", false]], "freeze() (gammapy.modeling.models.naimaspectralmodel method)": [[234, "gammapy.modeling.models.NaimaSpectralModel.freeze", false]], "freeze() (gammapy.modeling.models.piecewisenormspatialmodel method)": [[235, "gammapy.modeling.models.PiecewiseNormSpatialModel.freeze", false]], "freeze() (gammapy.modeling.models.piecewisenormspectralmodel method)": [[236, "gammapy.modeling.models.PiecewiseNormSpectralModel.freeze", false]], "freeze() (gammapy.modeling.models.pointspatialmodel method)": [[237, "gammapy.modeling.models.PointSpatialModel.freeze", false]], "freeze() (gammapy.modeling.models.powerlaw2spectralmodel method)": [[238, "gammapy.modeling.models.PowerLaw2SpectralModel.freeze", false]], "freeze() (gammapy.modeling.models.powerlawnormspectralmodel method)": [[239, "gammapy.modeling.models.PowerLawNormSpectralModel.freeze", false]], "freeze() (gammapy.modeling.models.powerlawspectralmodel method)": [[240, "gammapy.modeling.models.PowerLawSpectralModel.freeze", false]], "freeze() (gammapy.modeling.models.powerlawtemporalmodel method)": [[241, "gammapy.modeling.models.PowerLawTemporalModel.freeze", false]], "freeze() (gammapy.modeling.models.scalespectralmodel method)": [[244, "gammapy.modeling.models.ScaleSpectralModel.freeze", false]], "freeze() (gammapy.modeling.models.shell2spatialmodel method)": [[245, "gammapy.modeling.models.Shell2SpatialModel.freeze", false]], "freeze() (gammapy.modeling.models.shellspatialmodel method)": [[246, "gammapy.modeling.models.ShellSpatialModel.freeze", false]], "freeze() (gammapy.modeling.models.sinetemporalmodel method)": [[247, "gammapy.modeling.models.SineTemporalModel.freeze", false]], "freeze() (gammapy.modeling.models.skymodel method)": [[248, "gammapy.modeling.models.SkyModel.freeze", false]], "freeze() (gammapy.modeling.models.smoothbrokenpowerlawspectralmodel method)": [[249, "gammapy.modeling.models.SmoothBrokenPowerLawSpectralModel.freeze", false]], "freeze() (gammapy.modeling.models.spatialmodel method)": [[250, "gammapy.modeling.models.SpatialModel.freeze", false]], "freeze() (gammapy.modeling.models.spectralmodel method)": [[251, "gammapy.modeling.models.SpectralModel.freeze", false]], "freeze() (gammapy.modeling.models.superexpcutoffpowerlaw3fglspectralmodel method)": [[252, "gammapy.modeling.models.SuperExpCutoffPowerLaw3FGLSpectralModel.freeze", false]], "freeze() (gammapy.modeling.models.superexpcutoffpowerlaw4fgldr3spectralmodel method)": [[253, "gammapy.modeling.models.SuperExpCutoffPowerLaw4FGLDR3SpectralModel.freeze", false]], "freeze() (gammapy.modeling.models.superexpcutoffpowerlaw4fglspectralmodel method)": [[254, "gammapy.modeling.models.SuperExpCutoffPowerLaw4FGLSpectralModel.freeze", false]], "freeze() (gammapy.modeling.models.templatendspatialmodel method)": [[256, "gammapy.modeling.models.TemplateNDSpatialModel.freeze", false]], "freeze() (gammapy.modeling.models.templatendspectralmodel method)": [[257, "gammapy.modeling.models.TemplateNDSpectralModel.freeze", false]], "freeze() (gammapy.modeling.models.templatenpredmodel method)": [[258, "gammapy.modeling.models.TemplateNPredModel.freeze", false]], "freeze() (gammapy.modeling.models.templatephasecurvetemporalmodel method)": [[259, "gammapy.modeling.models.TemplatePhaseCurveTemporalModel.freeze", false]], "freeze() (gammapy.modeling.models.templatespatialmodel method)": [[260, "gammapy.modeling.models.TemplateSpatialModel.freeze", false]], "freeze() (gammapy.modeling.models.templatespectralmodel method)": [[261, "gammapy.modeling.models.TemplateSpectralModel.freeze", false]], "freeze() (gammapy.modeling.models.temporalmodel method)": [[262, "gammapy.modeling.models.TemporalModel.freeze", false]], "freeze_all() (gammapy.modeling.parameters method)": [[202, "gammapy.modeling.Parameters.freeze_all", false]], "freeze_all() (gammapy.modeling.priorparameters method)": [[204, "gammapy.modeling.PriorParameters.freeze_all", false]], "from_aligned() (gammapy.maps.wcsgeom class method)": [[194, "gammapy.maps.WcsGeom.from_aligned", false]], "from_bounds() (gammapy.maps.mapaxis class method)": [[188, "gammapy.maps.MapAxis.from_bounds", false]], "from_default() (gammapy.maps.mapaxes class method)": [[187, "gammapy.maps.MapAxes.from_default", false]], "from_diagonal_response() (gammapy.irf.edispkernel class method)": [[140, "gammapy.irf.EDispKernel.from_diagonal_response", false]], "from_diagonal_response() (gammapy.irf.edispkernelmap class method)": [[141, "gammapy.irf.EDispKernelMap.from_diagonal_response", false]], "from_diagonal_response() (gammapy.irf.edispmap class method)": [[142, "gammapy.irf.EDispMap.from_diagonal_response", false]], "from_dict() (gammapy.astro.darkmatter.darkmatterannihilationspectralmodel class method)": [[19, "gammapy.astro.darkmatter.DarkMatterAnnihilationSpectralModel.from_dict", false]], "from_dict() (gammapy.astro.darkmatter.darkmatterdecayspectralmodel class method)": [[20, "gammapy.astro.darkmatter.DarkMatterDecaySpectralModel.from_dict", false]], "from_dict() (gammapy.astro.darkmatter.primaryflux class method)": [[26, "gammapy.astro.darkmatter.PrimaryFlux.from_dict", false]], "from_dict() (gammapy.datasets.fluxpointsdataset class method)": [[96, "gammapy.datasets.FluxPointsDataset.from_dict", false]], "from_dict() (gammapy.datasets.mapdataset class method)": [[97, "gammapy.datasets.MapDataset.from_dict", false]], "from_dict() (gammapy.datasets.mapdatasetonoff class method)": [[100, "gammapy.datasets.MapDatasetOnOff.from_dict", false]], "from_dict() (gammapy.datasets.spectrumdataset class method)": [[104, "gammapy.datasets.SpectrumDataset.from_dict", false]], "from_dict() (gammapy.datasets.spectrumdatasetonoff class method)": [[105, "gammapy.datasets.SpectrumDatasetOnOff.from_dict", false]], "from_dict() (gammapy.modeling.models.brokenpowerlawspectralmodel class method)": [[205, "gammapy.modeling.models.BrokenPowerLawSpectralModel.from_dict", false]], "from_dict() (gammapy.modeling.models.compoundspectralmodel class method)": [[206, "gammapy.modeling.models.CompoundSpectralModel.from_dict", false]], "from_dict() (gammapy.modeling.models.constantfluxspatialmodel class method)": [[207, "gammapy.modeling.models.ConstantFluxSpatialModel.from_dict", false]], "from_dict() (gammapy.modeling.models.constantspatialmodel class method)": [[208, "gammapy.modeling.models.ConstantSpatialModel.from_dict", false]], "from_dict() (gammapy.modeling.models.constantspectralmodel class method)": [[209, "gammapy.modeling.models.ConstantSpectralModel.from_dict", false]], "from_dict() (gammapy.modeling.models.constanttemporalmodel class method)": [[210, "gammapy.modeling.models.ConstantTemporalModel.from_dict", false]], "from_dict() (gammapy.modeling.models.datasetmodels class method)": [[211, "gammapy.modeling.models.DatasetModels.from_dict", false]], "from_dict() (gammapy.modeling.models.diskspatialmodel class method)": [[212, "gammapy.modeling.models.DiskSpatialModel.from_dict", false]], "from_dict() (gammapy.modeling.models.eblabsorptionnormspectralmodel class method)": [[213, "gammapy.modeling.models.EBLAbsorptionNormSpectralModel.from_dict", false]], "from_dict() (gammapy.modeling.models.expcutoffpowerlaw3fglspectralmodel class method)": [[215, "gammapy.modeling.models.ExpCutoffPowerLaw3FGLSpectralModel.from_dict", false]], "from_dict() (gammapy.modeling.models.expcutoffpowerlawnormspectralmodel class method)": [[216, "gammapy.modeling.models.ExpCutoffPowerLawNormSpectralModel.from_dict", false]], "from_dict() (gammapy.modeling.models.expcutoffpowerlawspectralmodel class method)": [[217, "gammapy.modeling.models.ExpCutoffPowerLawSpectralModel.from_dict", false]], "from_dict() (gammapy.modeling.models.expdecaytemporalmodel class method)": [[218, "gammapy.modeling.models.ExpDecayTemporalModel.from_dict", false]], "from_dict() (gammapy.modeling.models.fovbackgroundmodel class method)": [[219, "gammapy.modeling.models.FoVBackgroundModel.from_dict", false]], "from_dict() (gammapy.modeling.models.gaussianspatialmodel class method)": [[220, "gammapy.modeling.models.GaussianSpatialModel.from_dict", false]], "from_dict() (gammapy.modeling.models.gaussianspectralmodel class method)": [[221, "gammapy.modeling.models.GaussianSpectralModel.from_dict", false]], "from_dict() (gammapy.modeling.models.gaussiantemporalmodel class method)": [[222, "gammapy.modeling.models.GaussianTemporalModel.from_dict", false]], "from_dict() (gammapy.modeling.models.generalizedgaussianspatialmodel class method)": [[223, "gammapy.modeling.models.GeneralizedGaussianSpatialModel.from_dict", false]], "from_dict() (gammapy.modeling.models.generalizedgaussiantemporalmodel class method)": [[224, "gammapy.modeling.models.GeneralizedGaussianTemporalModel.from_dict", false]], "from_dict() (gammapy.modeling.models.lightcurvetemplatetemporalmodel class method)": [[225, "gammapy.modeling.models.LightCurveTemplateTemporalModel.from_dict", false]], "from_dict() (gammapy.modeling.models.lineartemporalmodel class method)": [[226, "gammapy.modeling.models.LinearTemporalModel.from_dict", false]], "from_dict() (gammapy.modeling.models.logparabolanormspectralmodel class method)": [[227, "gammapy.modeling.models.LogParabolaNormSpectralModel.from_dict", false]], "from_dict() (gammapy.modeling.models.logparabolaspectralmodel class method)": [[228, "gammapy.modeling.models.LogParabolaSpectralModel.from_dict", false]], "from_dict() (gammapy.modeling.models.meyercrabspectralmodel class method)": [[230, "gammapy.modeling.models.MeyerCrabSpectralModel.from_dict", false]], "from_dict() (gammapy.modeling.models.model static method)": [[231, "gammapy.modeling.models.Model.from_dict", false]], "from_dict() (gammapy.modeling.models.modelbase class method)": [[232, "gammapy.modeling.models.ModelBase.from_dict", false]], "from_dict() (gammapy.modeling.models.models class method)": [[233, "gammapy.modeling.models.Models.from_dict", false]], "from_dict() (gammapy.modeling.models.naimaspectralmodel class method)": [[234, "gammapy.modeling.models.NaimaSpectralModel.from_dict", false]], "from_dict() (gammapy.modeling.models.piecewisenormspatialmodel class method)": [[235, "gammapy.modeling.models.PiecewiseNormSpatialModel.from_dict", false]], "from_dict() (gammapy.modeling.models.piecewisenormspectralmodel class method)": [[236, "gammapy.modeling.models.PiecewiseNormSpectralModel.from_dict", false]], "from_dict() (gammapy.modeling.models.pointspatialmodel class method)": [[237, "gammapy.modeling.models.PointSpatialModel.from_dict", false]], "from_dict() (gammapy.modeling.models.powerlaw2spectralmodel class method)": [[238, "gammapy.modeling.models.PowerLaw2SpectralModel.from_dict", false]], "from_dict() (gammapy.modeling.models.powerlawnormspectralmodel class method)": [[239, "gammapy.modeling.models.PowerLawNormSpectralModel.from_dict", false]], "from_dict() (gammapy.modeling.models.powerlawspectralmodel class method)": [[240, "gammapy.modeling.models.PowerLawSpectralModel.from_dict", false]], "from_dict() (gammapy.modeling.models.powerlawtemporalmodel class method)": [[241, "gammapy.modeling.models.PowerLawTemporalModel.from_dict", false]], "from_dict() (gammapy.modeling.models.scalespectralmodel class method)": [[244, "gammapy.modeling.models.ScaleSpectralModel.from_dict", false]], "from_dict() (gammapy.modeling.models.shell2spatialmodel class method)": [[245, "gammapy.modeling.models.Shell2SpatialModel.from_dict", false]], "from_dict() (gammapy.modeling.models.shellspatialmodel class method)": [[246, "gammapy.modeling.models.ShellSpatialModel.from_dict", false]], "from_dict() (gammapy.modeling.models.sinetemporalmodel class method)": [[247, "gammapy.modeling.models.SineTemporalModel.from_dict", false]], "from_dict() (gammapy.modeling.models.skymodel class method)": [[248, "gammapy.modeling.models.SkyModel.from_dict", false]], "from_dict() (gammapy.modeling.models.smoothbrokenpowerlawspectralmodel class method)": [[249, "gammapy.modeling.models.SmoothBrokenPowerLawSpectralModel.from_dict", false]], "from_dict() (gammapy.modeling.models.spatialmodel class method)": [[250, "gammapy.modeling.models.SpatialModel.from_dict", false]], "from_dict() (gammapy.modeling.models.spectralmodel class method)": [[251, "gammapy.modeling.models.SpectralModel.from_dict", false]], "from_dict() (gammapy.modeling.models.superexpcutoffpowerlaw3fglspectralmodel class method)": [[252, "gammapy.modeling.models.SuperExpCutoffPowerLaw3FGLSpectralModel.from_dict", false]], "from_dict() (gammapy.modeling.models.superexpcutoffpowerlaw4fgldr3spectralmodel class method)": [[253, "gammapy.modeling.models.SuperExpCutoffPowerLaw4FGLDR3SpectralModel.from_dict", false]], "from_dict() (gammapy.modeling.models.superexpcutoffpowerlaw4fglspectralmodel class method)": [[254, "gammapy.modeling.models.SuperExpCutoffPowerLaw4FGLSpectralModel.from_dict", false]], "from_dict() (gammapy.modeling.models.templatendspatialmodel class method)": [[256, "gammapy.modeling.models.TemplateNDSpatialModel.from_dict", false]], "from_dict() (gammapy.modeling.models.templatendspectralmodel class method)": [[257, "gammapy.modeling.models.TemplateNDSpectralModel.from_dict", false]], "from_dict() (gammapy.modeling.models.templatenpredmodel class method)": [[258, "gammapy.modeling.models.TemplateNPredModel.from_dict", false]], "from_dict() (gammapy.modeling.models.templatephasecurvetemporalmodel class method)": [[259, "gammapy.modeling.models.TemplatePhaseCurveTemporalModel.from_dict", false]], "from_dict() (gammapy.modeling.models.templatespatialmodel class method)": [[260, "gammapy.modeling.models.TemplateSpatialModel.from_dict", false]], "from_dict() (gammapy.modeling.models.templatespectralmodel class method)": [[261, "gammapy.modeling.models.TemplateSpectralModel.from_dict", false]], "from_dict() (gammapy.modeling.models.temporalmodel class method)": [[262, "gammapy.modeling.models.TemporalModel.from_dict", false]], "from_dict() (gammapy.modeling.parameters class method)": [[202, "gammapy.modeling.Parameters.from_dict", false]], "from_dict() (gammapy.modeling.priorparameters class method)": [[204, "gammapy.modeling.PriorParameters.from_dict", false]], "from_dir() (gammapy.data.datastore class method)": [[78, "gammapy.data.DataStore.from_dir", false]], "from_edges() (gammapy.maps.mapaxis class method)": [[188, "gammapy.maps.MapAxis.from_edges", false]], "from_edisp_kernel() (gammapy.irf.edispkernelmap class method)": [[141, "gammapy.irf.EDispKernelMap.from_edisp_kernel", false]], "from_energy_bounds() (gammapy.maps.mapaxis class method)": [[188, "gammapy.maps.MapAxis.from_energy_bounds", false]], "from_energy_edges() (gammapy.maps.mapaxis class method)": [[188, "gammapy.maps.MapAxis.from_energy_edges", false]], "from_events_files() (gammapy.data.datastore class method)": [[78, "gammapy.data.DataStore.from_events_files", false]], "from_factor_matrix() (gammapy.modeling.covariance class method)": [[199, "gammapy.modeling.Covariance.from_factor_matrix", false]], "from_file() (gammapy.data.datastore class method)": [[78, "gammapy.data.DataStore.from_file", false]], "from_fits_header() (gammapy.data.fixedpointinginfo class method)": [[81, "gammapy.data.FixedPointingInfo.from_fits_header", false]], "from_gauss() (gammapy.irf.edispkernel class method)": [[140, "gammapy.irf.EDispKernel.from_gauss", false]], "from_gauss() (gammapy.irf.edispkernelmap class method)": [[141, "gammapy.irf.EDispKernelMap.from_gauss", false]], "from_gauss() (gammapy.irf.energydispersion2d class method)": [[145, "gammapy.irf.EnergyDispersion2D.from_gauss", false]], "from_gauss() (gammapy.irf.psfkernel class method)": [[151, "gammapy.irf.PSFKernel.from_gauss", false]], "from_gauss() (gammapy.irf.psfmap class method)": [[153, "gammapy.irf.PSFMap.from_gauss", false]], "from_gauss() (gammapy.irf.recopsfmap class method)": [[156, "gammapy.irf.RecoPSFMap.from_gauss", false]], "from_geom() (gammapy.irf.edispkernelmap class method)": [[141, "gammapy.irf.EDispKernelMap.from_geom", false]], "from_geom() (gammapy.irf.edispmap class method)": [[142, "gammapy.irf.EDispMap.from_geom", false]], "from_geom() (gammapy.irf.psfmap class method)": [[153, "gammapy.irf.PSFMap.from_geom", false]], "from_geom() (gammapy.irf.recopsfmap class method)": [[156, "gammapy.irf.RecoPSFMap.from_geom", false]], "from_geom() (gammapy.maps.hpxmap static method)": [[183, "gammapy.maps.HpxMap.from_geom", false]], "from_geom() (gammapy.maps.hpxndmap static method)": [[184, "gammapy.maps.HpxNDMap.from_geom", false]], "from_geom() (gammapy.maps.map static method)": [[186, "gammapy.maps.Map.from_geom", false]], "from_geom() (gammapy.maps.maps class method)": [[190, "gammapy.maps.Maps.from_geom", false]], "from_geom() (gammapy.maps.regionndmap static method)": [[192, "gammapy.maps.RegionNDMap.from_geom", false]], "from_geom() (gammapy.maps.wcsmap static method)": [[195, "gammapy.maps.WcsMap.from_geom", false]], "from_geom() (gammapy.maps.wcsndmap static method)": [[196, "gammapy.maps.WcsNDMap.from_geom", false]], "from_geoms() (gammapy.datasets.mapdataset class method)": [[97, "gammapy.datasets.MapDataset.from_geoms", false]], "from_geoms() (gammapy.datasets.mapdatasetonoff class method)": [[100, "gammapy.datasets.MapDatasetOnOff.from_geoms", false]], "from_geoms() (gammapy.datasets.spectrumdataset class method)": [[104, "gammapy.datasets.SpectrumDataset.from_geoms", false]], "from_geoms() (gammapy.datasets.spectrumdatasetonoff class method)": [[105, "gammapy.datasets.SpectrumDatasetOnOff.from_geoms", false]], "from_gti() (gammapy.maps.timemapaxis class method)": [[193, "gammapy.maps.TimeMapAxis.from_gti", false]], "from_gti_bounds() (gammapy.maps.timemapaxis class method)": [[193, "gammapy.maps.TimeMapAxis.from_gti_bounds", false]], "from_hdu() (gammapy.maps.hpxgeom class method)": [[182, "gammapy.maps.HpxGeom.from_hdu", false]], "from_hdu() (gammapy.maps.hpxndmap class method)": [[184, "gammapy.maps.HpxNDMap.from_hdu", false]], "from_hdu() (gammapy.maps.wcsndmap class method)": [[196, "gammapy.maps.WcsNDMap.from_hdu", false]], "from_hdulist() (gammapy.datasets.mapdataset class method)": [[97, "gammapy.datasets.MapDataset.from_hdulist", false]], "from_hdulist() (gammapy.datasets.mapdatasetonoff class method)": [[100, "gammapy.datasets.MapDatasetOnOff.from_hdulist", false]], "from_hdulist() (gammapy.datasets.spectrumdataset class method)": [[104, "gammapy.datasets.SpectrumDataset.from_hdulist", false]], "from_hdulist() (gammapy.datasets.spectrumdatasetonoff class method)": [[105, "gammapy.datasets.SpectrumDatasetOnOff.from_hdulist", false]], "from_hdulist() (gammapy.estimators.fluxmaps class method)": [[117, "gammapy.estimators.FluxMaps.from_hdulist", false]], "from_hdulist() (gammapy.estimators.fluxpoints class method)": [[119, "gammapy.estimators.FluxPoints.from_hdulist", false]], "from_hdulist() (gammapy.irf.background2d class method)": [[137, "gammapy.irf.Background2D.from_hdulist", false]], "from_hdulist() (gammapy.irf.background3d class method)": [[138, "gammapy.irf.Background3D.from_hdulist", false]], "from_hdulist() (gammapy.irf.backgroundirf class method)": [[139, "gammapy.irf.BackgroundIRF.from_hdulist", false]], "from_hdulist() (gammapy.irf.edispkernel class method)": [[140, "gammapy.irf.EDispKernel.from_hdulist", false]], "from_hdulist() (gammapy.irf.edispkernelmap class method)": [[141, "gammapy.irf.EDispKernelMap.from_hdulist", false]], "from_hdulist() (gammapy.irf.edispmap class method)": [[142, "gammapy.irf.EDispMap.from_hdulist", false]], "from_hdulist() (gammapy.irf.effectiveareatable2d class method)": [[143, "gammapy.irf.EffectiveAreaTable2D.from_hdulist", false]], "from_hdulist() (gammapy.irf.energydependentmultigausspsf class method)": [[144, "gammapy.irf.EnergyDependentMultiGaussPSF.from_hdulist", false]], "from_hdulist() (gammapy.irf.energydispersion2d class method)": [[145, "gammapy.irf.EnergyDispersion2D.from_hdulist", false]], "from_hdulist() (gammapy.irf.irf class method)": [[147, "gammapy.irf.IRF.from_hdulist", false]], "from_hdulist() (gammapy.irf.irfmap class method)": [[148, "gammapy.irf.IRFMap.from_hdulist", false]], "from_hdulist() (gammapy.irf.parametricpsf class method)": [[154, "gammapy.irf.ParametricPSF.from_hdulist", false]], "from_hdulist() (gammapy.irf.psf3d class method)": [[150, "gammapy.irf.PSF3D.from_hdulist", false]], "from_hdulist() (gammapy.irf.psfking class method)": [[152, "gammapy.irf.PSFKing.from_hdulist", false]], "from_hdulist() (gammapy.irf.psfmap class method)": [[153, "gammapy.irf.PSFMap.from_hdulist", false]], "from_hdulist() (gammapy.irf.radmax2d class method)": [[155, "gammapy.irf.RadMax2D.from_hdulist", false]], "from_hdulist() (gammapy.irf.recopsfmap class method)": [[156, "gammapy.irf.RecoPSFMap.from_hdulist", false]], "from_hdulist() (gammapy.maps.geom class method)": [[181, "gammapy.maps.Geom.from_hdulist", false]], "from_hdulist() (gammapy.maps.hpxgeom class method)": [[182, "gammapy.maps.HpxGeom.from_hdulist", false]], "from_hdulist() (gammapy.maps.hpxmap class method)": [[183, "gammapy.maps.HpxMap.from_hdulist", false]], "from_hdulist() (gammapy.maps.hpxndmap class method)": [[184, "gammapy.maps.HpxNDMap.from_hdulist", false]], "from_hdulist() (gammapy.maps.map static method)": [[186, "gammapy.maps.Map.from_hdulist", false]], "from_hdulist() (gammapy.maps.maps class method)": [[190, "gammapy.maps.Maps.from_hdulist", false]], "from_hdulist() (gammapy.maps.regiongeom class method)": [[191, "gammapy.maps.RegionGeom.from_hdulist", false]], "from_hdulist() (gammapy.maps.regionndmap class method)": [[192, "gammapy.maps.RegionNDMap.from_hdulist", false]], "from_hdulist() (gammapy.maps.wcsgeom class method)": [[194, "gammapy.maps.WcsGeom.from_hdulist", false]], "from_hdulist() (gammapy.maps.wcsmap class method)": [[195, "gammapy.maps.WcsMap.from_hdulist", false]], "from_hdulist() (gammapy.maps.wcsndmap class method)": [[196, "gammapy.maps.WcsNDMap.from_hdulist", false]], "from_header() (gammapy.data.eventlistmetadata class method)": [[80, "gammapy.data.EventListMetaData.from_header", false]], "from_header() (gammapy.datasets.mapdatasetmetadata class method)": [[99, "gammapy.datasets.MapDatasetMetaData.from_header", false]], "from_header() (gammapy.estimators.fluxmetadata class method)": [[118, "gammapy.estimators.FluxMetaData.from_header", false]], "from_header() (gammapy.maps.hpxgeom class method)": [[182, "gammapy.maps.HpxGeom.from_header", false]], "from_header() (gammapy.maps.wcsgeom class method)": [[194, "gammapy.maps.WcsGeom.from_header", false]], "from_irf() (gammapy.irf.radmax2d class method)": [[155, "gammapy.irf.RadMax2D.from_irf", false]], "from_log10() (gammapy.modeling.models.logparabolanormspectralmodel class method)": [[227, "gammapy.modeling.models.LogParabolaNormSpectralModel.from_log10", false]], "from_log10() (gammapy.modeling.models.logparabolaspectralmodel class method)": [[228, "gammapy.modeling.models.LogParabolaSpectralModel.from_log10", false]], "from_map_dataset() (gammapy.datasets.mapdatasetonoff class method)": [[100, "gammapy.datasets.MapDatasetOnOff.from_map_dataset", false]], "from_map_dataset() (gammapy.datasets.spectrumdatasetonoff class method)": [[105, "gammapy.datasets.SpectrumDatasetOnOff.from_map_dataset", false]], "from_maps() (gammapy.estimators.fluxmaps class method)": [[117, "gammapy.estimators.FluxMaps.from_maps", false]], "from_maps() (gammapy.estimators.fluxpoints class method)": [[119, "gammapy.estimators.FluxPoints.from_maps", false]], "from_nodes() (gammapy.maps.mapaxis class method)": [[188, "gammapy.maps.MapAxis.from_nodes", false]], "from_orm() (gammapy.analysis.analysisconfig class method)": [[16, "gammapy.analysis.AnalysisConfig.from_orm", false]], "from_orm() (gammapy.data.eventlistmetadata class method)": [[80, "gammapy.data.EventListMetaData.from_orm", false]], "from_orm() (gammapy.datasets.mapdatasetmetadata class method)": [[99, "gammapy.datasets.MapDatasetMetaData.from_orm", false]], "from_orm() (gammapy.estimators.fluxmetadata class method)": [[118, "gammapy.estimators.FluxMetaData.from_orm", false]], "from_pandas() (gammapy.data.hduindextable class method)": [[83, "gammapy.data.HDUIndexTable.from_pandas", false]], "from_pandas() (gammapy.data.observationtable class method)": [[86, "gammapy.data.ObservationTable.from_pandas", false]], "from_parameters() (gammapy.astro.darkmatter.darkmatterannihilationspectralmodel class method)": [[19, "gammapy.astro.darkmatter.DarkMatterAnnihilationSpectralModel.from_parameters", false]], "from_parameters() (gammapy.astro.darkmatter.darkmatterdecayspectralmodel class method)": [[20, "gammapy.astro.darkmatter.DarkMatterDecaySpectralModel.from_parameters", false]], "from_parameters() (gammapy.astro.darkmatter.primaryflux class method)": [[26, "gammapy.astro.darkmatter.PrimaryFlux.from_parameters", false]], "from_parameters() (gammapy.modeling.models.brokenpowerlawspectralmodel class method)": [[205, "gammapy.modeling.models.BrokenPowerLawSpectralModel.from_parameters", false]], "from_parameters() (gammapy.modeling.models.compoundspectralmodel class method)": [[206, "gammapy.modeling.models.CompoundSpectralModel.from_parameters", false]], "from_parameters() (gammapy.modeling.models.constantfluxspatialmodel class method)": [[207, "gammapy.modeling.models.ConstantFluxSpatialModel.from_parameters", false]], "from_parameters() (gammapy.modeling.models.constantspatialmodel class method)": [[208, "gammapy.modeling.models.ConstantSpatialModel.from_parameters", false]], "from_parameters() (gammapy.modeling.models.constantspectralmodel class method)": [[209, "gammapy.modeling.models.ConstantSpectralModel.from_parameters", false]], "from_parameters() (gammapy.modeling.models.constanttemporalmodel class method)": [[210, "gammapy.modeling.models.ConstantTemporalModel.from_parameters", false]], "from_parameters() (gammapy.modeling.models.diskspatialmodel class method)": [[212, "gammapy.modeling.models.DiskSpatialModel.from_parameters", false]], "from_parameters() (gammapy.modeling.models.eblabsorptionnormspectralmodel class method)": [[213, "gammapy.modeling.models.EBLAbsorptionNormSpectralModel.from_parameters", false]], "from_parameters() (gammapy.modeling.models.expcutoffpowerlaw3fglspectralmodel class method)": [[215, "gammapy.modeling.models.ExpCutoffPowerLaw3FGLSpectralModel.from_parameters", false]], "from_parameters() (gammapy.modeling.models.expcutoffpowerlawnormspectralmodel class method)": [[216, "gammapy.modeling.models.ExpCutoffPowerLawNormSpectralModel.from_parameters", false]], "from_parameters() (gammapy.modeling.models.expcutoffpowerlawspectralmodel class method)": [[217, "gammapy.modeling.models.ExpCutoffPowerLawSpectralModel.from_parameters", false]], "from_parameters() (gammapy.modeling.models.expdecaytemporalmodel class method)": [[218, "gammapy.modeling.models.ExpDecayTemporalModel.from_parameters", false]], "from_parameters() (gammapy.modeling.models.fovbackgroundmodel class method)": [[219, "gammapy.modeling.models.FoVBackgroundModel.from_parameters", false]], "from_parameters() (gammapy.modeling.models.gaussianspatialmodel class method)": [[220, "gammapy.modeling.models.GaussianSpatialModel.from_parameters", false]], "from_parameters() (gammapy.modeling.models.gaussianspectralmodel class method)": [[221, "gammapy.modeling.models.GaussianSpectralModel.from_parameters", false]], "from_parameters() (gammapy.modeling.models.gaussiantemporalmodel class method)": [[222, "gammapy.modeling.models.GaussianTemporalModel.from_parameters", false]], "from_parameters() (gammapy.modeling.models.generalizedgaussianspatialmodel class method)": [[223, "gammapy.modeling.models.GeneralizedGaussianSpatialModel.from_parameters", false]], "from_parameters() (gammapy.modeling.models.generalizedgaussiantemporalmodel class method)": [[224, "gammapy.modeling.models.GeneralizedGaussianTemporalModel.from_parameters", false]], "from_parameters() (gammapy.modeling.models.lightcurvetemplatetemporalmodel class method)": [[225, "gammapy.modeling.models.LightCurveTemplateTemporalModel.from_parameters", false]], "from_parameters() (gammapy.modeling.models.lineartemporalmodel class method)": [[226, "gammapy.modeling.models.LinearTemporalModel.from_parameters", false]], "from_parameters() (gammapy.modeling.models.logparabolanormspectralmodel class method)": [[227, "gammapy.modeling.models.LogParabolaNormSpectralModel.from_parameters", false]], "from_parameters() (gammapy.modeling.models.logparabolaspectralmodel class method)": [[228, "gammapy.modeling.models.LogParabolaSpectralModel.from_parameters", false]], "from_parameters() (gammapy.modeling.models.meyercrabspectralmodel class method)": [[230, "gammapy.modeling.models.MeyerCrabSpectralModel.from_parameters", false]], "from_parameters() (gammapy.modeling.models.modelbase class method)": [[232, "gammapy.modeling.models.ModelBase.from_parameters", false]], "from_parameters() (gammapy.modeling.models.naimaspectralmodel class method)": [[234, "gammapy.modeling.models.NaimaSpectralModel.from_parameters", false]], "from_parameters() (gammapy.modeling.models.piecewisenormspatialmodel class method)": [[235, "gammapy.modeling.models.PiecewiseNormSpatialModel.from_parameters", false]], "from_parameters() (gammapy.modeling.models.piecewisenormspectralmodel class method)": [[236, "gammapy.modeling.models.PiecewiseNormSpectralModel.from_parameters", false]], "from_parameters() (gammapy.modeling.models.pointspatialmodel class method)": [[237, "gammapy.modeling.models.PointSpatialModel.from_parameters", false]], "from_parameters() (gammapy.modeling.models.powerlaw2spectralmodel class method)": [[238, "gammapy.modeling.models.PowerLaw2SpectralModel.from_parameters", false]], "from_parameters() (gammapy.modeling.models.powerlawnormspectralmodel class method)": [[239, "gammapy.modeling.models.PowerLawNormSpectralModel.from_parameters", false]], "from_parameters() (gammapy.modeling.models.powerlawspectralmodel class method)": [[240, "gammapy.modeling.models.PowerLawSpectralModel.from_parameters", false]], "from_parameters() (gammapy.modeling.models.powerlawtemporalmodel class method)": [[241, "gammapy.modeling.models.PowerLawTemporalModel.from_parameters", false]], "from_parameters() (gammapy.modeling.models.scalespectralmodel class method)": [[244, "gammapy.modeling.models.ScaleSpectralModel.from_parameters", false]], "from_parameters() (gammapy.modeling.models.shell2spatialmodel class method)": [[245, "gammapy.modeling.models.Shell2SpatialModel.from_parameters", false]], "from_parameters() (gammapy.modeling.models.shellspatialmodel class method)": [[246, "gammapy.modeling.models.ShellSpatialModel.from_parameters", false]], "from_parameters() (gammapy.modeling.models.sinetemporalmodel class method)": [[247, "gammapy.modeling.models.SineTemporalModel.from_parameters", false]], "from_parameters() (gammapy.modeling.models.skymodel class method)": [[248, "gammapy.modeling.models.SkyModel.from_parameters", false]], "from_parameters() (gammapy.modeling.models.smoothbrokenpowerlawspectralmodel class method)": [[249, "gammapy.modeling.models.SmoothBrokenPowerLawSpectralModel.from_parameters", false]], "from_parameters() (gammapy.modeling.models.spatialmodel class method)": [[250, "gammapy.modeling.models.SpatialModel.from_parameters", false]], "from_parameters() (gammapy.modeling.models.spectralmodel class method)": [[251, "gammapy.modeling.models.SpectralModel.from_parameters", false]], "from_parameters() (gammapy.modeling.models.superexpcutoffpowerlaw3fglspectralmodel class method)": [[252, "gammapy.modeling.models.SuperExpCutoffPowerLaw3FGLSpectralModel.from_parameters", false]], "from_parameters() (gammapy.modeling.models.superexpcutoffpowerlaw4fgldr3spectralmodel class method)": [[253, "gammapy.modeling.models.SuperExpCutoffPowerLaw4FGLDR3SpectralModel.from_parameters", false]], "from_parameters() (gammapy.modeling.models.superexpcutoffpowerlaw4fglspectralmodel class method)": [[254, "gammapy.modeling.models.SuperExpCutoffPowerLaw4FGLSpectralModel.from_parameters", false]], "from_parameters() (gammapy.modeling.models.templatendspatialmodel class method)": [[256, "gammapy.modeling.models.TemplateNDSpatialModel.from_parameters", false]], "from_parameters() (gammapy.modeling.models.templatendspectralmodel class method)": [[257, "gammapy.modeling.models.TemplateNDSpectralModel.from_parameters", false]], "from_parameters() (gammapy.modeling.models.templatenpredmodel class method)": [[258, "gammapy.modeling.models.TemplateNPredModel.from_parameters", false]], "from_parameters() (gammapy.modeling.models.templatephasecurvetemporalmodel class method)": [[259, "gammapy.modeling.models.TemplatePhaseCurveTemporalModel.from_parameters", false]], "from_parameters() (gammapy.modeling.models.templatespatialmodel class method)": [[260, "gammapy.modeling.models.TemplateSpatialModel.from_parameters", false]], "from_parameters() (gammapy.modeling.models.templatespectralmodel class method)": [[261, "gammapy.modeling.models.TemplateSpectralModel.from_parameters", false]], "from_parameters() (gammapy.modeling.models.temporalmodel class method)": [[262, "gammapy.modeling.models.TemporalModel.from_parameters", false]], "from_parametrization() (gammapy.irf.effectiveareatable2d class method)": [[143, "gammapy.irf.EffectiveAreaTable2D.from_parametrization", false]], "from_position() (gammapy.modeling.models.constantfluxspatialmodel class method)": [[207, "gammapy.modeling.models.ConstantFluxSpatialModel.from_position", false]], "from_position() (gammapy.modeling.models.constantspatialmodel class method)": [[208, "gammapy.modeling.models.ConstantSpatialModel.from_position", false]], "from_position() (gammapy.modeling.models.diskspatialmodel class method)": [[212, "gammapy.modeling.models.DiskSpatialModel.from_position", false]], "from_position() (gammapy.modeling.models.gaussianspatialmodel class method)": [[220, "gammapy.modeling.models.GaussianSpatialModel.from_position", false]], "from_position() (gammapy.modeling.models.generalizedgaussianspatialmodel class method)": [[223, "gammapy.modeling.models.GeneralizedGaussianSpatialModel.from_position", false]], "from_position() (gammapy.modeling.models.piecewisenormspatialmodel class method)": [[235, "gammapy.modeling.models.PiecewiseNormSpatialModel.from_position", false]], "from_position() (gammapy.modeling.models.pointspatialmodel class method)": [[237, "gammapy.modeling.models.PointSpatialModel.from_position", false]], "from_position() (gammapy.modeling.models.shell2spatialmodel class method)": [[245, "gammapy.modeling.models.Shell2SpatialModel.from_position", false]], "from_position() (gammapy.modeling.models.shellspatialmodel class method)": [[246, "gammapy.modeling.models.ShellSpatialModel.from_position", false]], "from_position() (gammapy.modeling.models.spatialmodel class method)": [[250, "gammapy.modeling.models.SpatialModel.from_position", false]], "from_position() (gammapy.modeling.models.templatendspatialmodel class method)": [[256, "gammapy.modeling.models.TemplateNDSpatialModel.from_position", false]], "from_position() (gammapy.modeling.models.templatespatialmodel class method)": [[260, "gammapy.modeling.models.TemplateSpatialModel.from_position", false]], "from_region() (gammapy.modeling.models.diskspatialmodel class method)": [[212, "gammapy.modeling.models.DiskSpatialModel.from_region", false]], "from_region_map() (gammapy.modeling.models.templatespectralmodel class method)": [[261, "gammapy.modeling.models.TemplateSpectralModel.from_region_map", false]], "from_regions() (gammapy.maps.regiongeom class method)": [[191, "gammapy.maps.RegionGeom.from_regions", false]], "from_spatial_model() (gammapy.irf.psfkernel class method)": [[151, "gammapy.irf.PSFKernel.from_spatial_model", false]], "from_spectrum_dataset() (gammapy.datasets.spectrumdatasetonoff class method)": [[105, "gammapy.datasets.SpectrumDatasetOnOff.from_spectrum_dataset", false]], "from_stack() (gammapy.data.eventlist class method)": [[79, "gammapy.data.EventList.from_stack", false]], "from_stack() (gammapy.data.gti class method)": [[82, "gammapy.data.GTI.from_stack", false]], "from_stack() (gammapy.data.observations class method)": [[87, "gammapy.data.Observations.from_stack", false]], "from_stack() (gammapy.estimators.fluxmaps class method)": [[117, "gammapy.estimators.FluxMaps.from_stack", false]], "from_stack() (gammapy.estimators.fluxpoints class method)": [[119, "gammapy.estimators.FluxPoints.from_stack", false]], "from_stack() (gammapy.maps.hpxmap class method)": [[183, "gammapy.maps.HpxMap.from_stack", false]], "from_stack() (gammapy.maps.hpxndmap class method)": [[184, "gammapy.maps.HpxNDMap.from_stack", false]], "from_stack() (gammapy.maps.labelmapaxis class method)": [[185, "gammapy.maps.LabelMapAxis.from_stack", false]], "from_stack() (gammapy.maps.map class method)": [[186, "gammapy.maps.Map.from_stack", false]], "from_stack() (gammapy.maps.mapaxis class method)": [[188, "gammapy.maps.MapAxis.from_stack", false]], "from_stack() (gammapy.maps.regionndmap class method)": [[192, "gammapy.maps.RegionNDMap.from_stack", false]], "from_stack() (gammapy.maps.wcsmap class method)": [[195, "gammapy.maps.WcsMap.from_stack", false]], "from_stack() (gammapy.maps.wcsndmap class method)": [[196, "gammapy.maps.WcsNDMap.from_stack", false]], "from_stack() (gammapy.modeling.covariance class method)": [[199, "gammapy.modeling.Covariance.from_stack", false]], "from_stack() (gammapy.modeling.parameters class method)": [[202, "gammapy.modeling.Parameters.from_stack", false]], "from_stack() (gammapy.modeling.priorparameters class method)": [[204, "gammapy.modeling.PriorParameters.from_stack", false]], "from_table() (gammapy.estimators.fluxpoints class method)": [[119, "gammapy.estimators.FluxPoints.from_table", false]], "from_table() (gammapy.irf.background2d class method)": [[137, "gammapy.irf.Background2D.from_table", false]], "from_table() (gammapy.irf.background3d class method)": [[138, "gammapy.irf.Background3D.from_table", false]], "from_table() (gammapy.irf.backgroundirf class method)": [[139, "gammapy.irf.BackgroundIRF.from_table", false]], "from_table() (gammapy.irf.edispkernel class method)": [[140, "gammapy.irf.EDispKernel.from_table", false]], "from_table() (gammapy.irf.effectiveareatable2d class method)": [[143, "gammapy.irf.EffectiveAreaTable2D.from_table", false]], "from_table() (gammapy.irf.energydependentmultigausspsf class method)": [[144, "gammapy.irf.EnergyDependentMultiGaussPSF.from_table", false]], "from_table() (gammapy.irf.energydispersion2d class method)": [[145, "gammapy.irf.EnergyDispersion2D.from_table", false]], "from_table() (gammapy.irf.irf class method)": [[147, "gammapy.irf.IRF.from_table", false]], "from_table() (gammapy.irf.parametricpsf class method)": [[154, "gammapy.irf.ParametricPSF.from_table", false]], "from_table() (gammapy.irf.psf3d class method)": [[150, "gammapy.irf.PSF3D.from_table", false]], "from_table() (gammapy.irf.psfking class method)": [[152, "gammapy.irf.PSFKing.from_table", false]], "from_table() (gammapy.irf.radmax2d class method)": [[155, "gammapy.irf.RadMax2D.from_table", false]], "from_table() (gammapy.maps.labelmapaxis class method)": [[185, "gammapy.maps.LabelMapAxis.from_table", false]], "from_table() (gammapy.maps.mapaxes class method)": [[187, "gammapy.maps.MapAxes.from_table", false]], "from_table() (gammapy.maps.mapaxis class method)": [[188, "gammapy.maps.MapAxis.from_table", false]], "from_table() (gammapy.maps.regionndmap class method)": [[192, "gammapy.maps.RegionNDMap.from_table", false]], "from_table() (gammapy.maps.timemapaxis class method)": [[193, "gammapy.maps.TimeMapAxis.from_table", false]], "from_table() (gammapy.modeling.models.lightcurvetemplatetemporalmodel class method)": [[225, "gammapy.modeling.models.LightCurveTemplateTemporalModel.from_table", false]], "from_table_hdu() (gammapy.data.gti class method)": [[82, "gammapy.data.GTI.from_table_hdu", false]], "from_table_hdu() (gammapy.maps.mapaxes class method)": [[187, "gammapy.maps.MapAxes.from_table_hdu", false]], "from_table_hdu() (gammapy.maps.mapaxis class method)": [[188, "gammapy.maps.MapAxis.from_table_hdu", false]], "from_time_bounds() (gammapy.maps.timemapaxis class method)": [[193, "gammapy.maps.TimeMapAxis.from_time_bounds", false]], "from_time_edges() (gammapy.maps.timemapaxis class method)": [[193, "gammapy.maps.TimeMapAxis.from_time_edges", false]], "from_time_intervals() (gammapy.data.gti class method)": [[82, "gammapy.data.GTI.from_time_intervals", false]], "from_wcs_tiles() (gammapy.maps.hpxndmap class method)": [[184, "gammapy.maps.HpxNDMap.from_wcs_tiles", false]], "from_yaml() (gammapy.analysis.analysisconfig class method)": [[16, "gammapy.analysis.AnalysisConfig.from_yaml", false]], "from_yaml() (gammapy.modeling.models.datasetmodels class method)": [[211, "gammapy.modeling.models.DatasetModels.from_yaml", false]], "from_yaml() (gammapy.modeling.models.models class method)": [[233, "gammapy.modeling.models.Models.from_yaml", false]], "frozen (gammapy.astro.darkmatter.darkmatterannihilationspectralmodel attribute)": [[19, "gammapy.astro.darkmatter.DarkMatterAnnihilationSpectralModel.frozen", false]], "frozen (gammapy.astro.darkmatter.darkmatterdecayspectralmodel attribute)": [[20, "gammapy.astro.darkmatter.DarkMatterDecaySpectralModel.frozen", false]], "frozen (gammapy.astro.darkmatter.primaryflux attribute)": [[26, "gammapy.astro.darkmatter.PrimaryFlux.frozen", false]], "frozen (gammapy.modeling.models.brokenpowerlawspectralmodel attribute)": [[205, "gammapy.modeling.models.BrokenPowerLawSpectralModel.frozen", false]], "frozen (gammapy.modeling.models.compoundspectralmodel attribute)": [[206, "gammapy.modeling.models.CompoundSpectralModel.frozen", false]], "frozen (gammapy.modeling.models.constantfluxspatialmodel attribute)": [[207, "gammapy.modeling.models.ConstantFluxSpatialModel.frozen", false]], "frozen (gammapy.modeling.models.constantspatialmodel attribute)": [[208, "gammapy.modeling.models.ConstantSpatialModel.frozen", false]], "frozen (gammapy.modeling.models.constantspectralmodel attribute)": [[209, "gammapy.modeling.models.ConstantSpectralModel.frozen", false]], "frozen (gammapy.modeling.models.constanttemporalmodel attribute)": [[210, "gammapy.modeling.models.ConstantTemporalModel.frozen", false]], "frozen (gammapy.modeling.models.datasetmodels attribute)": [[211, "gammapy.modeling.models.DatasetModels.frozen", false]], "frozen (gammapy.modeling.models.diskspatialmodel attribute)": [[212, "gammapy.modeling.models.DiskSpatialModel.frozen", false]], "frozen (gammapy.modeling.models.eblabsorptionnormspectralmodel attribute)": [[213, "gammapy.modeling.models.EBLAbsorptionNormSpectralModel.frozen", false]], "frozen (gammapy.modeling.models.expcutoffpowerlaw3fglspectralmodel attribute)": [[215, "gammapy.modeling.models.ExpCutoffPowerLaw3FGLSpectralModel.frozen", false]], "frozen (gammapy.modeling.models.expcutoffpowerlawnormspectralmodel attribute)": [[216, "gammapy.modeling.models.ExpCutoffPowerLawNormSpectralModel.frozen", false]], "frozen (gammapy.modeling.models.expcutoffpowerlawspectralmodel attribute)": [[217, "gammapy.modeling.models.ExpCutoffPowerLawSpectralModel.frozen", false]], "frozen (gammapy.modeling.models.expdecaytemporalmodel attribute)": [[218, "gammapy.modeling.models.ExpDecayTemporalModel.frozen", false]], "frozen (gammapy.modeling.models.fovbackgroundmodel attribute)": [[219, "gammapy.modeling.models.FoVBackgroundModel.frozen", false]], "frozen (gammapy.modeling.models.gaussianspatialmodel attribute)": [[220, "gammapy.modeling.models.GaussianSpatialModel.frozen", false]], "frozen (gammapy.modeling.models.gaussianspectralmodel attribute)": [[221, "gammapy.modeling.models.GaussianSpectralModel.frozen", false]], "frozen (gammapy.modeling.models.gaussiantemporalmodel attribute)": [[222, "gammapy.modeling.models.GaussianTemporalModel.frozen", false]], "frozen (gammapy.modeling.models.generalizedgaussianspatialmodel attribute)": [[223, "gammapy.modeling.models.GeneralizedGaussianSpatialModel.frozen", false]], "frozen (gammapy.modeling.models.generalizedgaussiantemporalmodel attribute)": [[224, "gammapy.modeling.models.GeneralizedGaussianTemporalModel.frozen", false]], "frozen (gammapy.modeling.models.lightcurvetemplatetemporalmodel attribute)": [[225, "gammapy.modeling.models.LightCurveTemplateTemporalModel.frozen", false]], "frozen (gammapy.modeling.models.lineartemporalmodel attribute)": [[226, "gammapy.modeling.models.LinearTemporalModel.frozen", false]], "frozen (gammapy.modeling.models.logparabolanormspectralmodel attribute)": [[227, "gammapy.modeling.models.LogParabolaNormSpectralModel.frozen", false]], "frozen (gammapy.modeling.models.logparabolaspectralmodel attribute)": [[228, "gammapy.modeling.models.LogParabolaSpectralModel.frozen", false]], "frozen (gammapy.modeling.models.meyercrabspectralmodel attribute)": [[230, "gammapy.modeling.models.MeyerCrabSpectralModel.frozen", false]], "frozen (gammapy.modeling.models.modelbase attribute)": [[232, "gammapy.modeling.models.ModelBase.frozen", false]], "frozen (gammapy.modeling.models.models attribute)": [[233, "gammapy.modeling.models.Models.frozen", false]], "frozen (gammapy.modeling.models.naimaspectralmodel attribute)": [[234, "gammapy.modeling.models.NaimaSpectralModel.frozen", false]], "frozen (gammapy.modeling.models.piecewisenormspatialmodel attribute)": [[235, "gammapy.modeling.models.PiecewiseNormSpatialModel.frozen", false]], "frozen (gammapy.modeling.models.piecewisenormspectralmodel attribute)": [[236, "gammapy.modeling.models.PiecewiseNormSpectralModel.frozen", false]], "frozen (gammapy.modeling.models.pointspatialmodel attribute)": [[237, "gammapy.modeling.models.PointSpatialModel.frozen", false]], "frozen (gammapy.modeling.models.powerlaw2spectralmodel attribute)": [[238, "gammapy.modeling.models.PowerLaw2SpectralModel.frozen", false]], "frozen (gammapy.modeling.models.powerlawnormspectralmodel attribute)": [[239, "gammapy.modeling.models.PowerLawNormSpectralModel.frozen", false]], "frozen (gammapy.modeling.models.powerlawspectralmodel attribute)": [[240, "gammapy.modeling.models.PowerLawSpectralModel.frozen", false]], "frozen (gammapy.modeling.models.powerlawtemporalmodel attribute)": [[241, "gammapy.modeling.models.PowerLawTemporalModel.frozen", false]], "frozen (gammapy.modeling.models.scalespectralmodel attribute)": [[244, "gammapy.modeling.models.ScaleSpectralModel.frozen", false]], "frozen (gammapy.modeling.models.shell2spatialmodel attribute)": [[245, "gammapy.modeling.models.Shell2SpatialModel.frozen", false]], "frozen (gammapy.modeling.models.shellspatialmodel attribute)": [[246, "gammapy.modeling.models.ShellSpatialModel.frozen", false]], "frozen (gammapy.modeling.models.sinetemporalmodel attribute)": [[247, "gammapy.modeling.models.SineTemporalModel.frozen", false]], "frozen (gammapy.modeling.models.skymodel attribute)": [[248, "gammapy.modeling.models.SkyModel.frozen", false]], "frozen (gammapy.modeling.models.smoothbrokenpowerlawspectralmodel attribute)": [[249, "gammapy.modeling.models.SmoothBrokenPowerLawSpectralModel.frozen", false]], "frozen (gammapy.modeling.models.spatialmodel attribute)": [[250, "gammapy.modeling.models.SpatialModel.frozen", false]], "frozen (gammapy.modeling.models.spectralmodel attribute)": [[251, "gammapy.modeling.models.SpectralModel.frozen", false]], "frozen (gammapy.modeling.models.superexpcutoffpowerlaw3fglspectralmodel attribute)": [[252, "gammapy.modeling.models.SuperExpCutoffPowerLaw3FGLSpectralModel.frozen", false]], "frozen (gammapy.modeling.models.superexpcutoffpowerlaw4fgldr3spectralmodel attribute)": [[253, "gammapy.modeling.models.SuperExpCutoffPowerLaw4FGLDR3SpectralModel.frozen", false]], "frozen (gammapy.modeling.models.superexpcutoffpowerlaw4fglspectralmodel attribute)": [[254, "gammapy.modeling.models.SuperExpCutoffPowerLaw4FGLSpectralModel.frozen", false]], "frozen (gammapy.modeling.models.templatendspatialmodel attribute)": [[256, "gammapy.modeling.models.TemplateNDSpatialModel.frozen", false]], "frozen (gammapy.modeling.models.templatendspectralmodel attribute)": [[257, "gammapy.modeling.models.TemplateNDSpectralModel.frozen", false]], "frozen (gammapy.modeling.models.templatenpredmodel attribute)": [[258, "gammapy.modeling.models.TemplateNPredModel.frozen", false]], "frozen (gammapy.modeling.models.templatephasecurvetemporalmodel attribute)": [[259, "gammapy.modeling.models.TemplatePhaseCurveTemporalModel.frozen", false]], "frozen (gammapy.modeling.models.templatespatialmodel attribute)": [[260, "gammapy.modeling.models.TemplateSpatialModel.frozen", false]], "frozen (gammapy.modeling.models.templatespectralmodel attribute)": [[261, "gammapy.modeling.models.TemplateSpectralModel.frozen", false]], "frozen (gammapy.modeling.models.temporalmodel attribute)": [[262, "gammapy.modeling.models.TemporalModel.frozen", false]], "frozen (gammapy.modeling.parameter attribute)": [[201, "gammapy.modeling.Parameter.frozen", false]], "frozen (gammapy.modeling.priorparameter attribute)": [[203, "gammapy.modeling.PriorParameter.frozen", false]], "gadf": [[554, "term-GADF", true]], "galactic (gammapy.data.eventlist attribute)": [[79, "gammapy.data.EventList.galactic", false]], "galactic() (in module gammapy.utils.coordinates)": [[293, "gammapy.utils.coordinates.galactic", false]], "galactic_median (gammapy.data.eventlist attribute)": [[79, "gammapy.data.EventList.galactic_median", false]], "gammapy command line option": [[11, "cmdoption-gammapy-ignore-warnings", false], [11, "cmdoption-gammapy-log-level", false], [11, "cmdoption-gammapy-version", false]], "gammapy-analysis-config command line option": [[11, "cmdoption-gammapy-analysis-config-filename", false], [11, "cmdoption-gammapy-analysis-config-overwrite", false]], "gammapy-analysis-run command line option": [[11, "cmdoption-gammapy-analysis-run-filename", false], [11, "cmdoption-gammapy-analysis-run-out", false], [11, "cmdoption-gammapy-analysis-run-overwrite", false]], "gammapy-download-datasets command line option": [[11, "cmdoption-gammapy-download-datasets-out", false], [11, "cmdoption-gammapy-download-datasets-release", false]], "gammapy-download-notebooks command line option": [[11, "cmdoption-gammapy-download-notebooks-out", false], [11, "cmdoption-gammapy-download-notebooks-release", false]], "gammapy-info command line option": [[11, "cmdoption-gammapy-info-dependencies", false], [11, "cmdoption-gammapy-info-envvar", false], [11, "cmdoption-gammapy-info-system", false], [11, "cmdoption-gammapy-info-version", false]], "gammapy.analysis": [[0, "module-gammapy.analysis", false]], "gammapy.astro.darkmatter": [[1, "module-gammapy.astro.darkmatter", false]], "gammapy.astro.population": [[1, "module-gammapy.astro.population", false]], "gammapy.astro.source": [[1, "module-gammapy.astro.source", false]], "gammapy.catalog": [[2, "module-gammapy.catalog", false]], "gammapy.data": [[3, "module-gammapy.data", false]], "gammapy.datasets": [[4, "module-gammapy.datasets", false]], "gammapy.datasets.utils": [[4, "module-gammapy.datasets.utils", false]], "gammapy.estimators": [[5, "module-gammapy.estimators", false]], "gammapy.estimators.utils": [[5, "module-gammapy.estimators.utils", false]], "gammapy.irf": [[7, "module-gammapy.irf", false]], "gammapy.makers": [[8, "module-gammapy.makers", false]], "gammapy.makers.utils": [[8, "module-gammapy.makers.utils", false]], "gammapy.maps": [[9, "module-gammapy.maps", false]], "gammapy.modeling": [[10, "module-gammapy.modeling", false]], "gammapy.modeling.models": [[10, "module-gammapy.modeling.models", false]], "gammapy.modeling.models.utils": [[10, "module-gammapy.modeling.models.utils", false]], "gammapy.stats": [[12, "module-gammapy.stats", false]], "gammapy.utils.cluster": [[13, "module-gammapy.utils.cluster", false]], "gammapy.utils.coordinates": [[13, "module-gammapy.utils.coordinates", false]], "gammapy.utils.fits": [[13, "module-gammapy.utils.fits", false]], "gammapy.utils.integrate": [[13, "module-gammapy.utils.integrate", false]], "gammapy.utils.interpolation": [[13, "module-gammapy.utils.interpolation", false]], "gammapy.utils.parallel": [[13, "module-gammapy.utils.parallel", false]], "gammapy.utils.random": [[13, "module-gammapy.utils.random", false]], "gammapy.utils.regions": [[13, "module-gammapy.utils.regions", false]], "gammapy.utils.scripts": [[13, "module-gammapy.utils.scripts", false]], "gammapy.utils.table": [[13, "module-gammapy.utils.table", false]], "gammapy.utils.testing": [[13, "module-gammapy.utils.testing", false]], "gammapy.utils.time": [[13, "module-gammapy.utils.time", false]], "gammapy.utils.units": [[13, "module-gammapy.utils.units", false]], "gammapy.visualization": [[14, "module-gammapy.visualization", false]], "gaussian_component() (gammapy.catalog.sourcecataloghgps method)": [[65, "gammapy.catalog.SourceCatalogHGPS.gaussian_component", false]], "gaussianspatialmodel (class in gammapy.modeling.models)": [[220, "gammapy.modeling.models.GaussianSpatialModel", false]], "gaussianspectralmodel (class in gammapy.modeling.models)": [[221, "gammapy.modeling.models.GaussianSpectralModel", false]], "gaussiantemporalmodel (class in gammapy.modeling.models)": [[222, "gammapy.modeling.models.GaussianTemporalModel", false]], "generalizedgaussianspatialmodel (class in gammapy.modeling.models)": [[223, "gammapy.modeling.models.GeneralizedGaussianSpatialModel", false]], "generalizedgaussiantemporalmodel (class in gammapy.modeling.models)": [[224, "gammapy.modeling.models.GeneralizedGaussianTemporalModel", false]], "geom (class in gammapy.maps)": [[181, "gammapy.maps.Geom", false]], "geom (gammapy.estimators.fluxmaps attribute)": [[117, "gammapy.estimators.FluxMaps.geom", false]], "geom (gammapy.estimators.fluxpoints attribute)": [[119, "gammapy.estimators.FluxPoints.geom", false]], "geom (gammapy.maps.hpxmap attribute)": [[183, "gammapy.maps.HpxMap.geom", false]], "geom (gammapy.maps.hpxndmap attribute)": [[184, "gammapy.maps.HpxNDMap.geom", false]], "geom (gammapy.maps.map attribute)": [[186, "gammapy.maps.Map.geom", false]], "geom (gammapy.maps.maps attribute)": [[190, "gammapy.maps.Maps.geom", false]], "geom (gammapy.maps.regionndmap attribute)": [[192, "gammapy.maps.RegionNDMap.geom", false]], "geom (gammapy.maps.wcsmap attribute)": [[195, "gammapy.maps.WcsMap.geom", false]], "geom (gammapy.maps.wcsndmap attribute)": [[196, "gammapy.maps.WcsNDMap.geom", false]], "geoms (gammapy.datasets.mapdataset attribute)": [[97, "gammapy.datasets.MapDataset.geoms", false]], "geoms (gammapy.datasets.mapdatasetonoff attribute)": [[100, "gammapy.datasets.MapDatasetOnOff.geoms", false]], "geoms (gammapy.datasets.spectrumdataset attribute)": [[104, "gammapy.datasets.SpectrumDataset.geoms", false]], "geoms (gammapy.datasets.spectrumdatasetonoff attribute)": [[105, "gammapy.datasets.SpectrumDatasetOnOff.geoms", false]], "get() (gammapy.maps.maps method)": [[190, "gammapy.maps.Maps.get", false]], "get_altaz() (gammapy.data.fixedpointinginfo method)": [[81, "gammapy.data.FixedPointingInfo.get_altaz", false]], "get_altaz() (gammapy.data.pointinginfo method)": [[89, "gammapy.data.PointingInfo.get_altaz", false]], "get_bias() (gammapy.irf.edispkernel method)": [[140, "gammapy.irf.EDispKernel.get_bias", false]], "get_bias_energy() (gammapy.irf.edispkernel method)": [[140, "gammapy.irf.EDispKernel.get_bias_energy", false]], "get_bounding_box() (gammapy.astro.population.casebattacharya1998 method)": [[28, "gammapy.astro.population.CaseBattacharya1998.get_bounding_box", false]], "get_bounding_box() (gammapy.astro.population.exponential method)": [[29, "gammapy.astro.population.Exponential.get_bounding_box", false]], "get_bounding_box() (gammapy.astro.population.faucherkaspi2006 method)": [[30, "gammapy.astro.population.FaucherKaspi2006.get_bounding_box", false]], "get_bounding_box() (gammapy.astro.population.faucherkaspi2006velocitybimodal method)": [[31, "gammapy.astro.population.FaucherKaspi2006VelocityBimodal.get_bounding_box", false]], "get_bounding_box() (gammapy.astro.population.faucherkaspi2006velocitymaxwellian method)": [[32, "gammapy.astro.population.FaucherKaspi2006VelocityMaxwellian.get_bounding_box", false]], "get_bounding_box() (gammapy.astro.population.lorimer2006 method)": [[35, "gammapy.astro.population.Lorimer2006.get_bounding_box", false]], "get_bounding_box() (gammapy.astro.population.paczynski1990 method)": [[36, "gammapy.astro.population.Paczynski1990.get_bounding_box", false]], "get_bounding_box() (gammapy.astro.population.paczynski1990velocity method)": [[37, "gammapy.astro.population.Paczynski1990Velocity.get_bounding_box", false]], "get_bounding_box() (gammapy.astro.population.yusifovkucuk2004 method)": [[39, "gammapy.astro.population.YusifovKucuk2004.get_bounding_box", false]], "get_bounding_box() (gammapy.astro.population.yusifovkucuk2004b method)": [[40, "gammapy.astro.population.YusifovKucuk2004B.get_bounding_box", false]], "get_by_coord() (gammapy.maps.hpxmap method)": [[183, "gammapy.maps.HpxMap.get_by_coord", false]], "get_by_coord() (gammapy.maps.hpxndmap method)": [[184, "gammapy.maps.HpxNDMap.get_by_coord", false]], "get_by_coord() (gammapy.maps.map method)": [[186, "gammapy.maps.Map.get_by_coord", false]], "get_by_coord() (gammapy.maps.regionndmap method)": [[192, "gammapy.maps.RegionNDMap.get_by_coord", false]], "get_by_coord() (gammapy.maps.wcsmap method)": [[195, "gammapy.maps.WcsMap.get_by_coord", false]], "get_by_coord() (gammapy.maps.wcsndmap method)": [[196, "gammapy.maps.WcsNDMap.get_by_coord", false]], "get_by_idx() (gammapy.maps.hpxmap method)": [[183, "gammapy.maps.HpxMap.get_by_idx", false]], "get_by_idx() (gammapy.maps.hpxndmap method)": [[184, "gammapy.maps.HpxNDMap.get_by_idx", false]], "get_by_idx() (gammapy.maps.map method)": [[186, "gammapy.maps.Map.get_by_idx", false]], "get_by_idx() (gammapy.maps.regionndmap method)": [[192, "gammapy.maps.RegionNDMap.get_by_idx", false]], "get_by_idx() (gammapy.maps.wcsmap method)": [[195, "gammapy.maps.WcsMap.get_by_idx", false]], "get_by_idx() (gammapy.maps.wcsndmap method)": [[196, "gammapy.maps.WcsNDMap.get_by_idx", false]], "get_by_pix() (gammapy.maps.hpxmap method)": [[183, "gammapy.maps.HpxMap.get_by_pix", false]], "get_by_pix() (gammapy.maps.hpxndmap method)": [[184, "gammapy.maps.HpxNDMap.get_by_pix", false]], "get_by_pix() (gammapy.maps.map method)": [[186, "gammapy.maps.Map.get_by_pix", false]], "get_by_pix() (gammapy.maps.regionndmap method)": [[192, "gammapy.maps.RegionNDMap.get_by_pix", false]], "get_by_pix() (gammapy.maps.wcsmap method)": [[195, "gammapy.maps.WcsMap.get_by_pix", false]], "get_by_pix() (gammapy.maps.wcsndmap method)": [[196, "gammapy.maps.WcsNDMap.get_by_pix", false]], "get_combined_significance_maps() (in module gammapy.estimators.utils)": [[134, "gammapy.estimators.utils.get_combined_significance_maps", false]], "get_coord() (gammapy.maps.geom method)": [[181, "gammapy.maps.Geom.get_coord", false]], "get_coord() (gammapy.maps.hpxgeom method)": [[182, "gammapy.maps.HpxGeom.get_coord", false]], "get_coord() (gammapy.maps.mapaxes method)": [[187, "gammapy.maps.MapAxes.get_coord", false]], "get_coord() (gammapy.maps.regiongeom method)": [[191, "gammapy.maps.RegionGeom.get_coord", false]], "get_coord() (gammapy.maps.wcsgeom method)": [[194, "gammapy.maps.WcsGeom.get_coord", false]], "get_datasets() (gammapy.analysis.analysis method)": [[15, "gammapy.analysis.Analysis.get_datasets", false]], "get_edisp_kernel() (gammapy.irf.edispkernelmap method)": [[141, "gammapy.irf.EDispKernelMap.get_edisp_kernel", false]], "get_edisp_kernel() (gammapy.irf.edispmap method)": [[142, "gammapy.irf.EDispMap.get_edisp_kernel", false]], "get_excess_map() (gammapy.analysis.analysis method)": [[15, "gammapy.analysis.Analysis.get_excess_map", false]], "get_filenames() (gammapy.datasets.ogipdatasetreader method)": [[101, "gammapy.datasets.OGIPDatasetReader.get_filenames", false]], "get_filenames() (gammapy.datasets.ogipdatasetwriter static method)": [[102, "gammapy.datasets.OGIPDatasetWriter.get_filenames", false]], "get_flux_points() (gammapy.analysis.analysis method)": [[15, "gammapy.analysis.Analysis.get_flux_points", false]], "get_flux_points() (gammapy.estimators.fluxmaps method)": [[117, "gammapy.estimators.FluxMaps.get_flux_points", false]], "get_flux_points() (gammapy.estimators.fluxpoints method)": [[119, "gammapy.estimators.FluxPoints.get_flux_points", false]], "get_hdu() (gammapy.utils.fits.hdulocation method)": [[298, "gammapy.utils.fits.HDULocation.get_hdu", false]], "get_icrs() (gammapy.data.fixedpointinginfo method)": [[81, "gammapy.data.FixedPointingInfo.get_icrs", false]], "get_icrs() (gammapy.data.pointinginfo method)": [[89, "gammapy.data.PointingInfo.get_icrs", false]], "get_idx() (gammapy.maps.geom method)": [[181, "gammapy.maps.Geom.get_idx", false]], "get_idx() (gammapy.maps.hpxgeom method)": [[182, "gammapy.maps.HpxGeom.get_idx", false]], "get_idx() (gammapy.maps.regiongeom method)": [[191, "gammapy.maps.RegionGeom.get_idx", false]], "get_idx() (gammapy.maps.wcsgeom method)": [[194, "gammapy.maps.WcsGeom.get_idx", false]], "get_image_by_coord() (gammapy.maps.hpxmap method)": [[183, "gammapy.maps.HpxMap.get_image_by_coord", false]], "get_image_by_coord() (gammapy.maps.hpxndmap method)": [[184, "gammapy.maps.HpxNDMap.get_image_by_coord", false]], "get_image_by_coord() (gammapy.maps.map method)": [[186, "gammapy.maps.Map.get_image_by_coord", false]], "get_image_by_coord() (gammapy.maps.regionndmap method)": [[192, "gammapy.maps.RegionNDMap.get_image_by_coord", false]], "get_image_by_coord() (gammapy.maps.wcsmap method)": [[195, "gammapy.maps.WcsMap.get_image_by_coord", false]], "get_image_by_coord() (gammapy.maps.wcsndmap method)": [[196, "gammapy.maps.WcsNDMap.get_image_by_coord", false]], "get_image_by_idx() (gammapy.maps.hpxmap method)": [[183, "gammapy.maps.HpxMap.get_image_by_idx", false]], "get_image_by_idx() (gammapy.maps.hpxndmap method)": [[184, "gammapy.maps.HpxNDMap.get_image_by_idx", false]], "get_image_by_idx() (gammapy.maps.map method)": [[186, "gammapy.maps.Map.get_image_by_idx", false]], "get_image_by_idx() (gammapy.maps.regionndmap method)": [[192, "gammapy.maps.RegionNDMap.get_image_by_idx", false]], "get_image_by_idx() (gammapy.maps.wcsmap method)": [[195, "gammapy.maps.WcsMap.get_image_by_idx", false]], "get_image_by_idx() (gammapy.maps.wcsndmap method)": [[196, "gammapy.maps.WcsNDMap.get_image_by_idx", false]], "get_image_by_pix() (gammapy.maps.hpxmap method)": [[183, "gammapy.maps.HpxMap.get_image_by_pix", false]], "get_image_by_pix() (gammapy.maps.hpxndmap method)": [[184, "gammapy.maps.HpxNDMap.get_image_by_pix", false]], "get_image_by_pix() (gammapy.maps.map method)": [[186, "gammapy.maps.Map.get_image_by_pix", false]], "get_image_by_pix() (gammapy.maps.regionndmap method)": [[192, "gammapy.maps.RegionNDMap.get_image_by_pix", false]], "get_image_by_pix() (gammapy.maps.wcsmap method)": [[195, "gammapy.maps.WcsMap.get_image_by_pix", false]], "get_image_by_pix() (gammapy.maps.wcsndmap method)": [[196, "gammapy.maps.WcsNDMap.get_image_by_pix", false]], "get_images_paths() (in module gammapy.utils.scripts)": [[326, "gammapy.utils.scripts.get_images_paths", false]], "get_index_list() (gammapy.maps.hpxgeom static method)": [[182, "gammapy.maps.HpxGeom.get_index_list", false]], "get_irfs_features() (in module gammapy.data)": [[91, "gammapy.data.get_irfs_features", false]], "get_kernels() (gammapy.estimators.asmoothmapestimator method)": [[112, "gammapy.estimators.ASmoothMapEstimator.get_kernels", false]], "get_light_curve() (gammapy.analysis.analysis method)": [[15, "gammapy.analysis.Analysis.get_light_curve", false]], "get_mean() (gammapy.irf.edispkernel method)": [[140, "gammapy.irf.EDispKernel.get_mean", false]], "get_observations() (gammapy.analysis.analysis method)": [[15, "gammapy.analysis.Analysis.get_observations", false]], "get_observations() (gammapy.data.datastore method)": [[78, "gammapy.data.DataStore.get_observations", false]], "get_ogip_meta() (gammapy.datasets.ogipdatasetwriter method)": [[102, "gammapy.datasets.OGIPDatasetWriter.get_ogip_meta", false]], "get_pix() (gammapy.maps.wcsgeom method)": [[194, "gammapy.maps.WcsGeom.get_pix", false]], "get_pointing_altaz() (gammapy.data.observation method)": [[84, "gammapy.data.Observation.get_pointing_altaz", false]], "get_pointing_icrs() (gammapy.data.observation method)": [[84, "gammapy.data.Observation.get_pointing_icrs", false]], "get_psf_kernel() (gammapy.irf.psfmap method)": [[153, "gammapy.irf.PSFMap.get_psf_kernel", false]], "get_psf_kernel() (gammapy.irf.recopsfmap method)": [[156, "gammapy.irf.RecoPSFMap.get_psf_kernel", false]], "get_random_state() (in module gammapy.utils.random)": [[314, "gammapy.utils.random.get_random_state", false]], "get_rebinned_axis() (in module gammapy.estimators.utils)": [[135, "gammapy.estimators.utils.get_rebinned_axis", false]], "get_resolution() (gammapy.irf.edispkernel method)": [[140, "gammapy.irf.EDispKernel.get_resolution", false]], "get_scale_model() (gammapy.estimators.fluxpointsestimator method)": [[120, "gammapy.estimators.FluxPointsEstimator.get_scale_model", false]], "get_scale_model() (gammapy.estimators.fluxprofileestimator method)": [[121, "gammapy.estimators.FluxProfileEstimator.get_scale_model", false]], "get_scale_model() (gammapy.estimators.lightcurveestimator method)": [[124, "gammapy.estimators.LightCurveEstimator.get_scale_model", false]], "get_scales() (gammapy.estimators.asmoothmapestimator static method)": [[112, "gammapy.estimators.ASmoothMapEstimator.get_scales", false]], "get_spectrum() (gammapy.maps.hpxmap method)": [[183, "gammapy.maps.HpxMap.get_spectrum", false]], "get_spectrum() (gammapy.maps.hpxndmap method)": [[184, "gammapy.maps.HpxNDMap.get_spectrum", false]], "get_spectrum() (gammapy.maps.map method)": [[186, "gammapy.maps.Map.get_spectrum", false]], "get_spectrum() (gammapy.maps.regionndmap method)": [[192, "gammapy.maps.RegionNDMap.get_spectrum", false]], "get_spectrum() (gammapy.maps.wcsmap method)": [[195, "gammapy.maps.WcsMap.get_spectrum", false]], "get_spectrum() (gammapy.maps.wcsndmap method)": [[196, "gammapy.maps.WcsNDMap.get_spectrum", false]], "get_subcovariance() (gammapy.modeling.covariance method)": [[199, "gammapy.modeling.Covariance.get_subcovariance", false]], "get_valid_path() (gammapy.datasets.ogipdatasetreader method)": [[101, "gammapy.datasets.OGIPDatasetReader.get_valid_path", false]], "get_wcs_coord_and_weights() (gammapy.maps.regiongeom method)": [[191, "gammapy.maps.RegionGeom.get_wcs_coord_and_weights", false]], "get_wstat_gof_terms() (in module gammapy.stats)": [[283, "gammapy.stats.get_wstat_gof_terms", false]], "get_wstat_mu_bkg() (in module gammapy.stats)": [[284, "gammapy.stats.get_wstat_mu_bkg", false]], "global_to_local() (gammapy.maps.hpxgeom method)": [[182, "gammapy.maps.HpxGeom.global_to_local", false]], "group_by() (gammapy.data.hduindextable method)": [[83, "gammapy.data.HDUIndexTable.group_by", false]], "group_by() (gammapy.data.observationtable method)": [[86, "gammapy.data.ObservationTable.group_by", false]], "group_by_label() (gammapy.data.observations method)": [[87, "gammapy.data.Observations.group_by_label", false]], "group_table() (gammapy.data.gti method)": [[82, "gammapy.data.GTI.group_table", false]], "group_table() (gammapy.maps.mapaxis method)": [[188, "gammapy.maps.MapAxis.group_table", false]], "group_table() (gammapy.maps.timemapaxis method)": [[193, "gammapy.maps.TimeMapAxis.group_table", false]], "groups (gammapy.data.hduindextable attribute)": [[83, "gammapy.data.HDUIndexTable.groups", false]], "groups (gammapy.data.observationtable attribute)": [[86, "gammapy.data.ObservationTable.groups", false]], "gti": [[554, "term-GTI", true]], "gti (class in gammapy.data)": [[82, "gammapy.data.GTI", false]], "gti (gammapy.data.observation attribute)": [[84, "gammapy.data.Observation.gti", false]], "gti (gammapy.datasets.datasets attribute)": [[95, "gammapy.datasets.Datasets.gti", false]], "gti (gammapy.datasets.fluxpointsdataset attribute)": [[96, "gammapy.datasets.FluxPointsDataset.gti", false]], "gti (gammapy.datasets.mapdataset attribute)": [[97, "gammapy.datasets.MapDataset.gti", false]], "gti (gammapy.datasets.mapdatasetonoff attribute)": [[100, "gammapy.datasets.MapDatasetOnOff.gti", false]], "gti (gammapy.datasets.spectrumdataset attribute)": [[104, "gammapy.datasets.SpectrumDataset.gti", false]], "gti (gammapy.datasets.spectrumdatasetonoff attribute)": [[105, "gammapy.datasets.SpectrumDatasetOnOff.gti", false]], "has_any_ts (gammapy.estimators.fluxmaps attribute)": [[117, "gammapy.estimators.FluxMaps.has_any_ts", false]], "has_any_ts (gammapy.estimators.fluxpoints attribute)": [[119, "gammapy.estimators.FluxPoints.has_any_ts", false]], "has_energy_axis (gammapy.maps.geom attribute)": [[181, "gammapy.maps.Geom.has_energy_axis", false]], "has_energy_axis (gammapy.maps.hpxgeom attribute)": [[182, "gammapy.maps.HpxGeom.has_energy_axis", false]], "has_energy_axis (gammapy.maps.regiongeom attribute)": [[191, "gammapy.maps.RegionGeom.has_energy_axis", false]], "has_energy_axis (gammapy.maps.wcsgeom attribute)": [[194, "gammapy.maps.WcsGeom.has_energy_axis", false]], "has_inverse() (gammapy.astro.population.casebattacharya1998 method)": [[28, "gammapy.astro.population.CaseBattacharya1998.has_inverse", false]], "has_inverse() (gammapy.astro.population.exponential method)": [[29, "gammapy.astro.population.Exponential.has_inverse", false]], "has_inverse() (gammapy.astro.population.faucherkaspi2006 method)": [[30, "gammapy.astro.population.FaucherKaspi2006.has_inverse", false]], "has_inverse() (gammapy.astro.population.faucherkaspi2006velocitybimodal method)": [[31, "gammapy.astro.population.FaucherKaspi2006VelocityBimodal.has_inverse", false]], "has_inverse() (gammapy.astro.population.faucherkaspi2006velocitymaxwellian method)": [[32, "gammapy.astro.population.FaucherKaspi2006VelocityMaxwellian.has_inverse", false]], "has_inverse() (gammapy.astro.population.lorimer2006 method)": [[35, "gammapy.astro.population.Lorimer2006.has_inverse", false]], "has_inverse() (gammapy.astro.population.paczynski1990 method)": [[36, "gammapy.astro.population.Paczynski1990.has_inverse", false]], "has_inverse() (gammapy.astro.population.paczynski1990velocity method)": [[37, "gammapy.astro.population.Paczynski1990Velocity.has_inverse", false]], "has_inverse() (gammapy.astro.population.yusifovkucuk2004 method)": [[39, "gammapy.astro.population.YusifovKucuk2004.has_inverse", false]], "has_inverse() (gammapy.astro.population.yusifovkucuk2004b method)": [[40, "gammapy.astro.population.YusifovKucuk2004B.has_inverse", false]], "has_masked_columns (gammapy.data.hduindextable attribute)": [[83, "gammapy.data.HDUIndexTable.has_masked_columns", false]], "has_masked_columns (gammapy.data.observationtable attribute)": [[86, "gammapy.data.ObservationTable.has_masked_columns", false]], "has_masked_values (gammapy.data.hduindextable attribute)": [[83, "gammapy.data.HDUIndexTable.has_masked_values", false]], "has_masked_values (gammapy.data.observationtable attribute)": [[86, "gammapy.data.ObservationTable.has_masked_values", false]], "has_mixin_columns (gammapy.data.hduindextable attribute)": [[83, "gammapy.data.HDUIndexTable.has_mixin_columns", false]], "has_mixin_columns (gammapy.data.observationtable attribute)": [[86, "gammapy.data.ObservationTable.has_mixin_columns", false]], "has_offset_axis (gammapy.irf.background2d attribute)": [[137, "gammapy.irf.Background2D.has_offset_axis", false]], "has_offset_axis (gammapy.irf.background3d attribute)": [[138, "gammapy.irf.Background3D.has_offset_axis", false]], "has_offset_axis (gammapy.irf.backgroundirf attribute)": [[139, "gammapy.irf.BackgroundIRF.has_offset_axis", false]], "has_offset_axis (gammapy.irf.edispkernel attribute)": [[140, "gammapy.irf.EDispKernel.has_offset_axis", false]], "has_offset_axis (gammapy.irf.effectiveareatable2d attribute)": [[143, "gammapy.irf.EffectiveAreaTable2D.has_offset_axis", false]], "has_offset_axis (gammapy.irf.energydependentmultigausspsf attribute)": [[144, "gammapy.irf.EnergyDependentMultiGaussPSF.has_offset_axis", false]], "has_offset_axis (gammapy.irf.energydispersion2d attribute)": [[145, "gammapy.irf.EnergyDispersion2D.has_offset_axis", false]], "has_offset_axis (gammapy.irf.irf attribute)": [[147, "gammapy.irf.IRF.has_offset_axis", false]], "has_offset_axis (gammapy.irf.parametricpsf attribute)": [[154, "gammapy.irf.ParametricPSF.has_offset_axis", false]], "has_offset_axis (gammapy.irf.psf3d attribute)": [[150, "gammapy.irf.PSF3D.has_offset_axis", false]], "has_offset_axis (gammapy.irf.psfking attribute)": [[152, "gammapy.irf.PSFKing.has_offset_axis", false]], "has_offset_axis (gammapy.irf.radmax2d attribute)": [[155, "gammapy.irf.RadMax2D.has_offset_axis", false]], "has_stat_profiles (gammapy.estimators.fluxmaps attribute)": [[117, "gammapy.estimators.FluxMaps.has_stat_profiles", false]], "has_stat_profiles (gammapy.estimators.fluxpoints attribute)": [[119, "gammapy.estimators.FluxPoints.has_stat_profiles", false]], "has_success (gammapy.estimators.fluxmaps attribute)": [[117, "gammapy.estimators.FluxMaps.has_success", false]], "has_success (gammapy.estimators.fluxpoints attribute)": [[119, "gammapy.estimators.FluxPoints.has_success", false]], "has_ul (gammapy.estimators.fluxmaps attribute)": [[117, "gammapy.estimators.FluxMaps.has_ul", false]], "has_ul (gammapy.estimators.fluxpoints attribute)": [[119, "gammapy.estimators.FluxPoints.has_ul", false]], "has_user_bounding_box (gammapy.astro.population.casebattacharya1998 attribute)": [[28, "gammapy.astro.population.CaseBattacharya1998.has_user_bounding_box", false]], "has_user_bounding_box (gammapy.astro.population.exponential attribute)": [[29, "gammapy.astro.population.Exponential.has_user_bounding_box", false]], "has_user_bounding_box (gammapy.astro.population.faucherkaspi2006 attribute)": [[30, "gammapy.astro.population.FaucherKaspi2006.has_user_bounding_box", false]], "has_user_bounding_box (gammapy.astro.population.faucherkaspi2006velocitybimodal attribute)": [[31, "gammapy.astro.population.FaucherKaspi2006VelocityBimodal.has_user_bounding_box", false]], "has_user_bounding_box (gammapy.astro.population.faucherkaspi2006velocitymaxwellian attribute)": [[32, "gammapy.astro.population.FaucherKaspi2006VelocityMaxwellian.has_user_bounding_box", false]], "has_user_bounding_box (gammapy.astro.population.lorimer2006 attribute)": [[35, "gammapy.astro.population.Lorimer2006.has_user_bounding_box", false]], "has_user_bounding_box (gammapy.astro.population.paczynski1990 attribute)": [[36, "gammapy.astro.population.Paczynski1990.has_user_bounding_box", false]], "has_user_bounding_box (gammapy.astro.population.paczynski1990velocity attribute)": [[37, "gammapy.astro.population.Paczynski1990Velocity.has_user_bounding_box", false]], "has_user_bounding_box (gammapy.astro.population.yusifovkucuk2004 attribute)": [[39, "gammapy.astro.population.YusifovKucuk2004.has_user_bounding_box", false]], "has_user_bounding_box (gammapy.astro.population.yusifovkucuk2004b attribute)": [[40, "gammapy.astro.population.YusifovKucuk2004B.has_user_bounding_box", false]], "has_user_inverse (gammapy.astro.population.casebattacharya1998 attribute)": [[28, "gammapy.astro.population.CaseBattacharya1998.has_user_inverse", false]], "has_user_inverse (gammapy.astro.population.exponential attribute)": [[29, "gammapy.astro.population.Exponential.has_user_inverse", false]], "has_user_inverse (gammapy.astro.population.faucherkaspi2006 attribute)": [[30, "gammapy.astro.population.FaucherKaspi2006.has_user_inverse", false]], "has_user_inverse (gammapy.astro.population.faucherkaspi2006velocitybimodal attribute)": [[31, "gammapy.astro.population.FaucherKaspi2006VelocityBimodal.has_user_inverse", false]], "has_user_inverse (gammapy.astro.population.faucherkaspi2006velocitymaxwellian attribute)": [[32, "gammapy.astro.population.FaucherKaspi2006VelocityMaxwellian.has_user_inverse", false]], "has_user_inverse (gammapy.astro.population.lorimer2006 attribute)": [[35, "gammapy.astro.population.Lorimer2006.has_user_inverse", false]], "has_user_inverse (gammapy.astro.population.paczynski1990 attribute)": [[36, "gammapy.astro.population.Paczynski1990.has_user_inverse", false]], "has_user_inverse (gammapy.astro.population.paczynski1990velocity attribute)": [[37, "gammapy.astro.population.Paczynski1990Velocity.has_user_inverse", false]], "has_user_inverse (gammapy.astro.population.yusifovkucuk2004 attribute)": [[39, "gammapy.astro.population.YusifovKucuk2004.has_user_inverse", false]], "has_user_inverse (gammapy.astro.population.yusifovkucuk2004b attribute)": [[40, "gammapy.astro.population.YusifovKucuk2004B.has_user_inverse", false]], "hdu_class_unique (gammapy.data.hduindextable attribute)": [[83, "gammapy.data.HDUIndexTable.hdu_class_unique", false]], "hdu_location() (gammapy.data.hduindextable method)": [[83, "gammapy.data.HDUIndexTable.hdu_location", false]], "hdu_type_unique (gammapy.data.hduindextable attribute)": [[83, "gammapy.data.HDUIndexTable.hdu_type_unique", false]], "hduindextable (class in gammapy.data)": [[83, "gammapy.data.HDUIndexTable", false]], "hdulocation (class in gammapy.utils.fits)": [[298, "gammapy.utils.fits.HDULocation", false]], "hierarchical_clustering() (in module gammapy.utils.cluster)": [[288, "gammapy.utils.cluster.hierarchical_clustering", false]], "hli": [[554, "term-HLI", true]], "hpxgeom (class in gammapy.maps)": [[182, "gammapy.maps.HpxGeom", false]], "hpxmap (class in gammapy.maps)": [[183, "gammapy.maps.HpxMap", false]], "hpxndmap (class in gammapy.maps)": [[184, "gammapy.maps.HpxNDMap", false]], "hstack_columns() (in module gammapy.utils.table)": [[331, "gammapy.utils.table.hstack_columns", false]], "ids (gammapy.data.observations attribute)": [[87, "gammapy.data.Observations.ids", false]], "iloc (gammapy.data.hduindextable attribute)": [[83, "gammapy.data.HDUIndexTable.iloc", false]], "iloc (gammapy.data.observationtable attribute)": [[86, "gammapy.data.ObservationTable.iloc", false]], "imageprofile (class in gammapy.estimators)": [[122, "gammapy.estimators.ImageProfile", false]], "imageprofileestimator (class in gammapy.estimators)": [[123, "gammapy.estimators.ImageProfileEstimator", false]], "in_memory_generator() (gammapy.data.observations method)": [[87, "gammapy.data.Observations.in_memory_generator", false]], "include_ssc (gammapy.modeling.models.naimaspectralmodel attribute)": [[234, "gammapy.modeling.models.NaimaSpectralModel.include_ssc", false]], "index (gammapy.modeling.models.expcutoffpowerlaw3fglspectralmodel attribute)": [[215, "gammapy.modeling.models.ExpCutoffPowerLaw3FGLSpectralModel.index", false]], "index (gammapy.modeling.models.expcutoffpowerlawnormspectralmodel attribute)": [[216, "gammapy.modeling.models.ExpCutoffPowerLawNormSpectralModel.index", false]], "index (gammapy.modeling.models.expcutoffpowerlawspectralmodel attribute)": [[217, "gammapy.modeling.models.ExpCutoffPowerLawSpectralModel.index", false]], "index (gammapy.modeling.models.powerlaw2spectralmodel attribute)": [[238, "gammapy.modeling.models.PowerLaw2SpectralModel.index", false]], "index (gammapy.modeling.models.powerlawspectralmodel attribute)": [[240, "gammapy.modeling.models.PowerLawSpectralModel.index", false]], "index() (gammapy.data.observations method)": [[87, "gammapy.data.Observations.index", false]], "index() (gammapy.datasets.datasets method)": [[95, "gammapy.datasets.Datasets.index", false]], "index() (gammapy.maps.mapaxes method)": [[187, "gammapy.maps.MapAxes.index", false]], "index() (gammapy.modeling.models.datasetmodels method)": [[211, "gammapy.modeling.models.DatasetModels.index", false]], "index() (gammapy.modeling.models.models method)": [[233, "gammapy.modeling.models.Models.index", false]], "index() (gammapy.modeling.parameters method)": [[202, "gammapy.modeling.Parameters.index", false]], "index() (gammapy.modeling.priorparameters method)": [[204, "gammapy.modeling.PriorParameters.index", false]], "index1 (gammapy.modeling.models.brokenpowerlawspectralmodel attribute)": [[205, "gammapy.modeling.models.BrokenPowerLawSpectralModel.index1", false]], "index1 (gammapy.modeling.models.smoothbrokenpowerlawspectralmodel attribute)": [[249, "gammapy.modeling.models.SmoothBrokenPowerLawSpectralModel.index1", false]], "index2 (gammapy.modeling.models.brokenpowerlawspectralmodel attribute)": [[205, "gammapy.modeling.models.BrokenPowerLawSpectralModel.index2", false]], "index2 (gammapy.modeling.models.smoothbrokenpowerlawspectralmodel attribute)": [[249, "gammapy.modeling.models.SmoothBrokenPowerLawSpectralModel.index2", false]], "index_1 (gammapy.modeling.models.superexpcutoffpowerlaw3fglspectralmodel attribute)": [[252, "gammapy.modeling.models.SuperExpCutoffPowerLaw3FGLSpectralModel.index_1", false]], "index_1 (gammapy.modeling.models.superexpcutoffpowerlaw4fgldr3spectralmodel attribute)": [[253, "gammapy.modeling.models.SuperExpCutoffPowerLaw4FGLDR3SpectralModel.index_1", false]], "index_1 (gammapy.modeling.models.superexpcutoffpowerlaw4fglspectralmodel attribute)": [[254, "gammapy.modeling.models.SuperExpCutoffPowerLaw4FGLSpectralModel.index_1", false]], "index_2 (gammapy.modeling.models.superexpcutoffpowerlaw3fglspectralmodel attribute)": [[252, "gammapy.modeling.models.SuperExpCutoffPowerLaw3FGLSpectralModel.index_2", false]], "index_2 (gammapy.modeling.models.superexpcutoffpowerlaw4fgldr3spectralmodel attribute)": [[253, "gammapy.modeling.models.SuperExpCutoffPowerLaw4FGLDR3SpectralModel.index_2", false]], "index_2 (gammapy.modeling.models.superexpcutoffpowerlaw4fglspectralmodel attribute)": [[254, "gammapy.modeling.models.SuperExpCutoffPowerLaw4FGLSpectralModel.index_2", false]], "index_column() (gammapy.data.hduindextable method)": [[83, "gammapy.data.HDUIndexTable.index_column", false]], "index_column() (gammapy.data.observationtable method)": [[86, "gammapy.data.ObservationTable.index_column", false]], "index_data() (gammapy.maps.mapaxes method)": [[187, "gammapy.maps.MapAxes.index_data", false]], "index_mode() (gammapy.data.hduindextable method)": [[83, "gammapy.data.HDUIndexTable.index_mode", false]], "index_mode() (gammapy.data.observationtable method)": [[86, "gammapy.data.ObservationTable.index_mode", false]], "indices (gammapy.data.hduindextable attribute)": [[83, "gammapy.data.HDUIndexTable.indices", false]], "indices (gammapy.data.observationtable attribute)": [[86, "gammapy.data.ObservationTable.indices", false]], "ineqcons (gammapy.astro.population.casebattacharya1998 attribute)": [[28, "gammapy.astro.population.CaseBattacharya1998.ineqcons", false]], "ineqcons (gammapy.astro.population.exponential attribute)": [[29, "gammapy.astro.population.Exponential.ineqcons", false]], "ineqcons (gammapy.astro.population.faucherkaspi2006 attribute)": [[30, "gammapy.astro.population.FaucherKaspi2006.ineqcons", false]], "ineqcons (gammapy.astro.population.faucherkaspi2006velocitybimodal attribute)": [[31, "gammapy.astro.population.FaucherKaspi2006VelocityBimodal.ineqcons", false]], "ineqcons (gammapy.astro.population.faucherkaspi2006velocitymaxwellian attribute)": [[32, "gammapy.astro.population.FaucherKaspi2006VelocityMaxwellian.ineqcons", false]], "ineqcons (gammapy.astro.population.lorimer2006 attribute)": [[35, "gammapy.astro.population.Lorimer2006.ineqcons", false]], "ineqcons (gammapy.astro.population.paczynski1990 attribute)": [[36, "gammapy.astro.population.Paczynski1990.ineqcons", false]], "ineqcons (gammapy.astro.population.paczynski1990velocity attribute)": [[37, "gammapy.astro.population.Paczynski1990Velocity.ineqcons", false]], "ineqcons (gammapy.astro.population.yusifovkucuk2004 attribute)": [[39, "gammapy.astro.population.YusifovKucuk2004.ineqcons", false]], "ineqcons (gammapy.astro.population.yusifovkucuk2004b attribute)": [[40, "gammapy.astro.population.YusifovKucuk2004B.ineqcons", false]], "info (gammapy.data.hduindextable attribute)": [[83, "gammapy.data.HDUIndexTable.info", false]], "info (gammapy.data.observationtable attribute)": [[86, "gammapy.data.ObservationTable.info", false]], "info() (gammapy.catalog.sourcecatalogobject2fhl method)": [[69, "gammapy.catalog.SourceCatalogObject2FHL.info", false]], "info() (gammapy.catalog.sourcecatalogobject2hwc method)": [[70, "gammapy.catalog.SourceCatalogObject2HWC.info", false]], "info() (gammapy.catalog.sourcecatalogobject3fgl method)": [[71, "gammapy.catalog.SourceCatalogObject3FGL.info", false]], "info() (gammapy.catalog.sourcecatalogobject3fhl method)": [[72, "gammapy.catalog.SourceCatalogObject3FHL.info", false]], "info() (gammapy.catalog.sourcecatalogobject3hwc method)": [[73, "gammapy.catalog.SourceCatalogObject3HWC.info", false]], "info() (gammapy.catalog.sourcecatalogobject4fgl method)": [[74, "gammapy.catalog.SourceCatalogObject4FGL.info", false]], "info() (gammapy.catalog.sourcecatalogobjectgammacat method)": [[75, "gammapy.catalog.SourceCatalogObjectGammaCat.info", false]], "info() (gammapy.catalog.sourcecatalogobjecthgps method)": [[76, "gammapy.catalog.SourceCatalogObjectHGPS.info", false]], "info() (gammapy.data.datastore method)": [[78, "gammapy.data.DataStore.info", false]], "info() (gammapy.irf.energydependentmultigausspsf method)": [[144, "gammapy.irf.EnergyDependentMultiGaussPSF.info", false]], "info() (gammapy.irf.parametricpsf method)": [[154, "gammapy.irf.ParametricPSF.info", false]], "info() (gammapy.irf.psf3d method)": [[150, "gammapy.irf.PSF3D.info", false]], "info() (gammapy.irf.psfking method)": [[152, "gammapy.irf.PSFKing.info", false]], "info() (gammapy.utils.fits.hdulocation method)": [[298, "gammapy.utils.fits.HDULocation.info", false]], "info_dict() (gammapy.datasets.mapdataset method)": [[97, "gammapy.datasets.MapDataset.info_dict", false]], "info_dict() (gammapy.datasets.mapdatasetonoff method)": [[100, "gammapy.datasets.MapDatasetOnOff.info_dict", false]], "info_dict() (gammapy.datasets.spectrumdataset method)": [[104, "gammapy.datasets.SpectrumDataset.info_dict", false]], "info_dict() (gammapy.datasets.spectrumdatasetonoff method)": [[105, "gammapy.datasets.SpectrumDatasetOnOff.info_dict", false]], "info_dict() (gammapy.stats.cashcountsstatistic method)": [[272, "gammapy.stats.CashCountsStatistic.info_dict", false]], "info_dict() (gammapy.stats.wstatcountsstatistic method)": [[274, "gammapy.stats.WStatCountsStatistic.info_dict", false]], "info_table() (gammapy.datasets.datasets method)": [[95, "gammapy.datasets.Datasets.info_table", false]], "input_shape() (gammapy.astro.population.casebattacharya1998 method)": [[28, "gammapy.astro.population.CaseBattacharya1998.input_shape", false]], "input_shape() (gammapy.astro.population.exponential method)": [[29, "gammapy.astro.population.Exponential.input_shape", false]], "input_shape() (gammapy.astro.population.faucherkaspi2006 method)": [[30, "gammapy.astro.population.FaucherKaspi2006.input_shape", false]], "input_shape() (gammapy.astro.population.faucherkaspi2006velocitybimodal method)": [[31, "gammapy.astro.population.FaucherKaspi2006VelocityBimodal.input_shape", false]], "input_shape() (gammapy.astro.population.faucherkaspi2006velocitymaxwellian method)": [[32, "gammapy.astro.population.FaucherKaspi2006VelocityMaxwellian.input_shape", false]], "input_shape() (gammapy.astro.population.lorimer2006 method)": [[35, "gammapy.astro.population.Lorimer2006.input_shape", false]], "input_shape() (gammapy.astro.population.paczynski1990 method)": [[36, "gammapy.astro.population.Paczynski1990.input_shape", false]], "input_shape() (gammapy.astro.population.paczynski1990velocity method)": [[37, "gammapy.astro.population.Paczynski1990Velocity.input_shape", false]], "input_shape() (gammapy.astro.population.yusifovkucuk2004 method)": [[39, "gammapy.astro.population.YusifovKucuk2004.input_shape", false]], "input_shape() (gammapy.astro.population.yusifovkucuk2004b method)": [[40, "gammapy.astro.population.YusifovKucuk2004B.input_shape", false]], "input_units (gammapy.astro.population.casebattacharya1998 attribute)": [[28, "gammapy.astro.population.CaseBattacharya1998.input_units", false]], "input_units (gammapy.astro.population.exponential attribute)": [[29, "gammapy.astro.population.Exponential.input_units", false]], "input_units (gammapy.astro.population.faucherkaspi2006 attribute)": [[30, "gammapy.astro.population.FaucherKaspi2006.input_units", false]], "input_units (gammapy.astro.population.faucherkaspi2006velocitybimodal attribute)": [[31, "gammapy.astro.population.FaucherKaspi2006VelocityBimodal.input_units", false]], "input_units (gammapy.astro.population.faucherkaspi2006velocitymaxwellian attribute)": [[32, "gammapy.astro.population.FaucherKaspi2006VelocityMaxwellian.input_units", false]], "input_units (gammapy.astro.population.lorimer2006 attribute)": [[35, "gammapy.astro.population.Lorimer2006.input_units", false]], "input_units (gammapy.astro.population.paczynski1990 attribute)": [[36, "gammapy.astro.population.Paczynski1990.input_units", false]], "input_units (gammapy.astro.population.paczynski1990velocity attribute)": [[37, "gammapy.astro.population.Paczynski1990Velocity.input_units", false]], "input_units (gammapy.astro.population.yusifovkucuk2004 attribute)": [[39, "gammapy.astro.population.YusifovKucuk2004.input_units", false]], "input_units (gammapy.astro.population.yusifovkucuk2004b attribute)": [[40, "gammapy.astro.population.YusifovKucuk2004B.input_units", false]], "input_units_allow_dimensionless (gammapy.astro.population.casebattacharya1998 attribute)": [[28, "gammapy.astro.population.CaseBattacharya1998.input_units_allow_dimensionless", false]], "input_units_allow_dimensionless (gammapy.astro.population.exponential attribute)": [[29, "gammapy.astro.population.Exponential.input_units_allow_dimensionless", false]], "input_units_allow_dimensionless (gammapy.astro.population.faucherkaspi2006 attribute)": [[30, "gammapy.astro.population.FaucherKaspi2006.input_units_allow_dimensionless", false]], "input_units_allow_dimensionless (gammapy.astro.population.faucherkaspi2006velocitybimodal attribute)": [[31, "gammapy.astro.population.FaucherKaspi2006VelocityBimodal.input_units_allow_dimensionless", false]], "input_units_allow_dimensionless (gammapy.astro.population.faucherkaspi2006velocitymaxwellian attribute)": [[32, "gammapy.astro.population.FaucherKaspi2006VelocityMaxwellian.input_units_allow_dimensionless", false]], "input_units_allow_dimensionless (gammapy.astro.population.lorimer2006 attribute)": [[35, "gammapy.astro.population.Lorimer2006.input_units_allow_dimensionless", false]], "input_units_allow_dimensionless (gammapy.astro.population.paczynski1990 attribute)": [[36, "gammapy.astro.population.Paczynski1990.input_units_allow_dimensionless", false]], "input_units_allow_dimensionless (gammapy.astro.population.paczynski1990velocity attribute)": [[37, "gammapy.astro.population.Paczynski1990Velocity.input_units_allow_dimensionless", false]], "input_units_allow_dimensionless (gammapy.astro.population.yusifovkucuk2004 attribute)": [[39, "gammapy.astro.population.YusifovKucuk2004.input_units_allow_dimensionless", false]], "input_units_allow_dimensionless (gammapy.astro.population.yusifovkucuk2004b attribute)": [[40, "gammapy.astro.population.YusifovKucuk2004B.input_units_allow_dimensionless", false]], "input_units_equivalencies (gammapy.astro.population.casebattacharya1998 attribute)": [[28, "gammapy.astro.population.CaseBattacharya1998.input_units_equivalencies", false]], "input_units_equivalencies (gammapy.astro.population.exponential attribute)": [[29, "gammapy.astro.population.Exponential.input_units_equivalencies", false]], "input_units_equivalencies (gammapy.astro.population.faucherkaspi2006 attribute)": [[30, "gammapy.astro.population.FaucherKaspi2006.input_units_equivalencies", false]], "input_units_equivalencies (gammapy.astro.population.faucherkaspi2006velocitybimodal attribute)": [[31, "gammapy.astro.population.FaucherKaspi2006VelocityBimodal.input_units_equivalencies", false]], "input_units_equivalencies (gammapy.astro.population.faucherkaspi2006velocitymaxwellian attribute)": [[32, "gammapy.astro.population.FaucherKaspi2006VelocityMaxwellian.input_units_equivalencies", false]], "input_units_equivalencies (gammapy.astro.population.lorimer2006 attribute)": [[35, "gammapy.astro.population.Lorimer2006.input_units_equivalencies", false]], "input_units_equivalencies (gammapy.astro.population.paczynski1990 attribute)": [[36, "gammapy.astro.population.Paczynski1990.input_units_equivalencies", false]], "input_units_equivalencies (gammapy.astro.population.paczynski1990velocity attribute)": [[37, "gammapy.astro.population.Paczynski1990Velocity.input_units_equivalencies", false]], "input_units_equivalencies (gammapy.astro.population.yusifovkucuk2004 attribute)": [[39, "gammapy.astro.population.YusifovKucuk2004.input_units_equivalencies", false]], "input_units_equivalencies (gammapy.astro.population.yusifovkucuk2004b attribute)": [[40, "gammapy.astro.population.YusifovKucuk2004B.input_units_equivalencies", false]], "input_units_strict (gammapy.astro.population.casebattacharya1998 attribute)": [[28, "gammapy.astro.population.CaseBattacharya1998.input_units_strict", false]], "input_units_strict (gammapy.astro.population.exponential attribute)": [[29, "gammapy.astro.population.Exponential.input_units_strict", false]], "input_units_strict (gammapy.astro.population.faucherkaspi2006 attribute)": [[30, "gammapy.astro.population.FaucherKaspi2006.input_units_strict", false]], "input_units_strict (gammapy.astro.population.faucherkaspi2006velocitybimodal attribute)": [[31, "gammapy.astro.population.FaucherKaspi2006VelocityBimodal.input_units_strict", false]], "input_units_strict (gammapy.astro.population.faucherkaspi2006velocitymaxwellian attribute)": [[32, "gammapy.astro.population.FaucherKaspi2006VelocityMaxwellian.input_units_strict", false]], "input_units_strict (gammapy.astro.population.lorimer2006 attribute)": [[35, "gammapy.astro.population.Lorimer2006.input_units_strict", false]], "input_units_strict (gammapy.astro.population.paczynski1990 attribute)": [[36, "gammapy.astro.population.Paczynski1990.input_units_strict", false]], "input_units_strict (gammapy.astro.population.paczynski1990velocity attribute)": [[37, "gammapy.astro.population.Paczynski1990Velocity.input_units_strict", false]], "input_units_strict (gammapy.astro.population.yusifovkucuk2004 attribute)": [[39, "gammapy.astro.population.YusifovKucuk2004.input_units_strict", false]], "input_units_strict (gammapy.astro.population.yusifovkucuk2004b attribute)": [[40, "gammapy.astro.population.YusifovKucuk2004B.input_units_strict", false]], "inputs (gammapy.astro.population.casebattacharya1998 attribute)": [[28, "gammapy.astro.population.CaseBattacharya1998.inputs", false]], "inputs (gammapy.astro.population.exponential attribute)": [[29, "gammapy.astro.population.Exponential.inputs", false]], "inputs (gammapy.astro.population.faucherkaspi2006 attribute)": [[30, "gammapy.astro.population.FaucherKaspi2006.inputs", false]], "inputs (gammapy.astro.population.faucherkaspi2006velocitybimodal attribute)": [[31, "gammapy.astro.population.FaucherKaspi2006VelocityBimodal.inputs", false]], "inputs (gammapy.astro.population.faucherkaspi2006velocitymaxwellian attribute)": [[32, "gammapy.astro.population.FaucherKaspi2006VelocityMaxwellian.inputs", false]], "inputs (gammapy.astro.population.lorimer2006 attribute)": [[35, "gammapy.astro.population.Lorimer2006.inputs", false]], "inputs (gammapy.astro.population.paczynski1990 attribute)": [[36, "gammapy.astro.population.Paczynski1990.inputs", false]], "inputs (gammapy.astro.population.paczynski1990velocity attribute)": [[37, "gammapy.astro.population.Paczynski1990Velocity.inputs", false]], "inputs (gammapy.astro.population.yusifovkucuk2004 attribute)": [[39, "gammapy.astro.population.YusifovKucuk2004.inputs", false]], "inputs (gammapy.astro.population.yusifovkucuk2004b attribute)": [[40, "gammapy.astro.population.YusifovKucuk2004B.inputs", false]], "insert() (gammapy.data.observations method)": [[87, "gammapy.data.Observations.insert", false]], "insert() (gammapy.datasets.datasets method)": [[95, "gammapy.datasets.Datasets.insert", false]], "insert() (gammapy.modeling.models.models method)": [[233, "gammapy.modeling.models.Models.insert", false]], "insert_row() (gammapy.data.hduindextable method)": [[83, "gammapy.data.HDUIndexTable.insert_row", false]], "insert_row() (gammapy.data.observationtable method)": [[86, "gammapy.data.ObservationTable.insert_row", false]], "integral() (gammapy.astro.darkmatter.burkertprofile method)": [[17, "gammapy.astro.darkmatter.BurkertProfile.integral", false]], "integral() (gammapy.astro.darkmatter.darkmatterannihilationspectralmodel method)": [[19, "gammapy.astro.darkmatter.DarkMatterAnnihilationSpectralModel.integral", false]], "integral() (gammapy.astro.darkmatter.darkmatterdecayspectralmodel method)": [[20, "gammapy.astro.darkmatter.DarkMatterDecaySpectralModel.integral", false]], "integral() (gammapy.astro.darkmatter.dmprofile method)": [[18, "gammapy.astro.darkmatter.DMProfile.integral", false]], "integral() (gammapy.astro.darkmatter.einastoprofile method)": [[21, "gammapy.astro.darkmatter.EinastoProfile.integral", false]], "integral() (gammapy.astro.darkmatter.isothermalprofile method)": [[22, "gammapy.astro.darkmatter.IsothermalProfile.integral", false]], "integral() (gammapy.astro.darkmatter.mooreprofile method)": [[24, "gammapy.astro.darkmatter.MooreProfile.integral", false]], "integral() (gammapy.astro.darkmatter.nfwprofile method)": [[25, "gammapy.astro.darkmatter.NFWProfile.integral", false]], "integral() (gammapy.astro.darkmatter.primaryflux method)": [[26, "gammapy.astro.darkmatter.PrimaryFlux.integral", false]], "integral() (gammapy.astro.darkmatter.zhaoprofile method)": [[27, "gammapy.astro.darkmatter.ZhaoProfile.integral", false]], "integral() (gammapy.irf.background2d method)": [[137, "gammapy.irf.Background2D.integral", false]], "integral() (gammapy.irf.background3d method)": [[138, "gammapy.irf.Background3D.integral", false]], "integral() (gammapy.irf.backgroundirf method)": [[139, "gammapy.irf.BackgroundIRF.integral", false]], "integral() (gammapy.irf.edispkernel method)": [[140, "gammapy.irf.EDispKernel.integral", false]], "integral() (gammapy.irf.effectiveareatable2d method)": [[143, "gammapy.irf.EffectiveAreaTable2D.integral", false]], "integral() (gammapy.irf.energydependentmultigausspsf method)": [[144, "gammapy.irf.EnergyDependentMultiGaussPSF.integral", false]], "integral() (gammapy.irf.energydispersion2d method)": [[145, "gammapy.irf.EnergyDispersion2D.integral", false]], "integral() (gammapy.irf.irf method)": [[147, "gammapy.irf.IRF.integral", false]], "integral() (gammapy.irf.parametricpsf method)": [[154, "gammapy.irf.ParametricPSF.integral", false]], "integral() (gammapy.irf.psf3d method)": [[150, "gammapy.irf.PSF3D.integral", false]], "integral() (gammapy.irf.psfking method)": [[152, "gammapy.irf.PSFKing.integral", false]], "integral() (gammapy.irf.radmax2d method)": [[155, "gammapy.irf.RadMax2D.integral", false]], "integral() (gammapy.maps.hpxmap method)": [[183, "gammapy.maps.HpxMap.integral", false]], "integral() (gammapy.maps.hpxndmap method)": [[184, "gammapy.maps.HpxNDMap.integral", false]], "integral() (gammapy.maps.map method)": [[186, "gammapy.maps.Map.integral", false]], "integral() (gammapy.maps.regionndmap method)": [[192, "gammapy.maps.RegionNDMap.integral", false]], "integral() (gammapy.maps.wcsmap method)": [[195, "gammapy.maps.WcsMap.integral", false]], "integral() (gammapy.maps.wcsndmap method)": [[196, "gammapy.maps.WcsNDMap.integral", false]], "integral() (gammapy.modeling.models.brokenpowerlawspectralmodel method)": [[205, "gammapy.modeling.models.BrokenPowerLawSpectralModel.integral", false]], "integral() (gammapy.modeling.models.compoundspectralmodel method)": [[206, "gammapy.modeling.models.CompoundSpectralModel.integral", false]], "integral() (gammapy.modeling.models.constantspectralmodel method)": [[209, "gammapy.modeling.models.ConstantSpectralModel.integral", false]], "integral() (gammapy.modeling.models.constanttemporalmodel method)": [[210, "gammapy.modeling.models.ConstantTemporalModel.integral", false]], "integral() (gammapy.modeling.models.eblabsorptionnormspectralmodel method)": [[213, "gammapy.modeling.models.EBLAbsorptionNormSpectralModel.integral", false]], "integral() (gammapy.modeling.models.expcutoffpowerlaw3fglspectralmodel method)": [[215, "gammapy.modeling.models.ExpCutoffPowerLaw3FGLSpectralModel.integral", false]], "integral() (gammapy.modeling.models.expcutoffpowerlawnormspectralmodel method)": [[216, "gammapy.modeling.models.ExpCutoffPowerLawNormSpectralModel.integral", false]], "integral() (gammapy.modeling.models.expcutoffpowerlawspectralmodel method)": [[217, "gammapy.modeling.models.ExpCutoffPowerLawSpectralModel.integral", false]], "integral() (gammapy.modeling.models.expdecaytemporalmodel method)": [[218, "gammapy.modeling.models.ExpDecayTemporalModel.integral", false]], "integral() (gammapy.modeling.models.gaussianspectralmodel method)": [[221, "gammapy.modeling.models.GaussianSpectralModel.integral", false]], "integral() (gammapy.modeling.models.gaussiantemporalmodel method)": [[222, "gammapy.modeling.models.GaussianTemporalModel.integral", false]], "integral() (gammapy.modeling.models.generalizedgaussiantemporalmodel method)": [[224, "gammapy.modeling.models.GeneralizedGaussianTemporalModel.integral", false]], "integral() (gammapy.modeling.models.lightcurvetemplatetemporalmodel method)": [[225, "gammapy.modeling.models.LightCurveTemplateTemporalModel.integral", false]], "integral() (gammapy.modeling.models.lineartemporalmodel method)": [[226, "gammapy.modeling.models.LinearTemporalModel.integral", false]], "integral() (gammapy.modeling.models.logparabolanormspectralmodel method)": [[227, "gammapy.modeling.models.LogParabolaNormSpectralModel.integral", false]], "integral() (gammapy.modeling.models.logparabolaspectralmodel method)": [[228, "gammapy.modeling.models.LogParabolaSpectralModel.integral", false]], "integral() (gammapy.modeling.models.meyercrabspectralmodel method)": [[230, "gammapy.modeling.models.MeyerCrabSpectralModel.integral", false]], "integral() (gammapy.modeling.models.naimaspectralmodel method)": [[234, "gammapy.modeling.models.NaimaSpectralModel.integral", false]], "integral() (gammapy.modeling.models.piecewisenormspectralmodel method)": [[236, "gammapy.modeling.models.PiecewiseNormSpectralModel.integral", false]], "integral() (gammapy.modeling.models.powerlaw2spectralmodel method)": [[238, "gammapy.modeling.models.PowerLaw2SpectralModel.integral", false]], "integral() (gammapy.modeling.models.powerlawnormspectralmodel method)": [[239, "gammapy.modeling.models.PowerLawNormSpectralModel.integral", false]], "integral() (gammapy.modeling.models.powerlawspectralmodel method)": [[240, "gammapy.modeling.models.PowerLawSpectralModel.integral", false]], "integral() (gammapy.modeling.models.powerlawtemporalmodel method)": [[241, "gammapy.modeling.models.PowerLawTemporalModel.integral", false]], "integral() (gammapy.modeling.models.scalespectralmodel method)": [[244, "gammapy.modeling.models.ScaleSpectralModel.integral", false]], "integral() (gammapy.modeling.models.sinetemporalmodel method)": [[247, "gammapy.modeling.models.SineTemporalModel.integral", false]], "integral() (gammapy.modeling.models.smoothbrokenpowerlawspectralmodel method)": [[249, "gammapy.modeling.models.SmoothBrokenPowerLawSpectralModel.integral", false]], "integral() (gammapy.modeling.models.spectralmodel method)": [[251, "gammapy.modeling.models.SpectralModel.integral", false]], "integral() (gammapy.modeling.models.superexpcutoffpowerlaw3fglspectralmodel method)": [[252, "gammapy.modeling.models.SuperExpCutoffPowerLaw3FGLSpectralModel.integral", false]], "integral() (gammapy.modeling.models.superexpcutoffpowerlaw4fgldr3spectralmodel method)": [[253, "gammapy.modeling.models.SuperExpCutoffPowerLaw4FGLDR3SpectralModel.integral", false]], "integral() (gammapy.modeling.models.superexpcutoffpowerlaw4fglspectralmodel method)": [[254, "gammapy.modeling.models.SuperExpCutoffPowerLaw4FGLSpectralModel.integral", false]], "integral() (gammapy.modeling.models.templatendspectralmodel method)": [[257, "gammapy.modeling.models.TemplateNDSpectralModel.integral", false]], "integral() (gammapy.modeling.models.templatephasecurvetemporalmodel method)": [[259, "gammapy.modeling.models.TemplatePhaseCurveTemporalModel.integral", false]], "integral() (gammapy.modeling.models.templatespectralmodel method)": [[261, "gammapy.modeling.models.TemplateSpectralModel.integral", false]], "integral() (gammapy.modeling.models.temporalmodel method)": [[262, "gammapy.modeling.models.TemporalModel.integral", false]], "integral_error() (gammapy.astro.darkmatter.darkmatterannihilationspectralmodel method)": [[19, "gammapy.astro.darkmatter.DarkMatterAnnihilationSpectralModel.integral_error", false]], "integral_error() (gammapy.astro.darkmatter.darkmatterdecayspectralmodel method)": [[20, "gammapy.astro.darkmatter.DarkMatterDecaySpectralModel.integral_error", false]], "integral_error() (gammapy.astro.darkmatter.primaryflux method)": [[26, "gammapy.astro.darkmatter.PrimaryFlux.integral_error", false]], "integral_error() (gammapy.modeling.models.brokenpowerlawspectralmodel method)": [[205, "gammapy.modeling.models.BrokenPowerLawSpectralModel.integral_error", false]], "integral_error() (gammapy.modeling.models.compoundspectralmodel method)": [[206, "gammapy.modeling.models.CompoundSpectralModel.integral_error", false]], "integral_error() (gammapy.modeling.models.constantspectralmodel method)": [[209, "gammapy.modeling.models.ConstantSpectralModel.integral_error", false]], "integral_error() (gammapy.modeling.models.eblabsorptionnormspectralmodel method)": [[213, "gammapy.modeling.models.EBLAbsorptionNormSpectralModel.integral_error", false]], "integral_error() (gammapy.modeling.models.expcutoffpowerlaw3fglspectralmodel method)": [[215, "gammapy.modeling.models.ExpCutoffPowerLaw3FGLSpectralModel.integral_error", false]], "integral_error() (gammapy.modeling.models.expcutoffpowerlawnormspectralmodel method)": [[216, "gammapy.modeling.models.ExpCutoffPowerLawNormSpectralModel.integral_error", false]], "integral_error() (gammapy.modeling.models.expcutoffpowerlawspectralmodel method)": [[217, "gammapy.modeling.models.ExpCutoffPowerLawSpectralModel.integral_error", false]], "integral_error() (gammapy.modeling.models.gaussianspectralmodel method)": [[221, "gammapy.modeling.models.GaussianSpectralModel.integral_error", false]], "integral_error() (gammapy.modeling.models.logparabolanormspectralmodel method)": [[227, "gammapy.modeling.models.LogParabolaNormSpectralModel.integral_error", false]], "integral_error() (gammapy.modeling.models.logparabolaspectralmodel method)": [[228, "gammapy.modeling.models.LogParabolaSpectralModel.integral_error", false]], "integral_error() (gammapy.modeling.models.meyercrabspectralmodel method)": [[230, "gammapy.modeling.models.MeyerCrabSpectralModel.integral_error", false]], "integral_error() (gammapy.modeling.models.naimaspectralmodel method)": [[234, "gammapy.modeling.models.NaimaSpectralModel.integral_error", false]], "integral_error() (gammapy.modeling.models.piecewisenormspectralmodel method)": [[236, "gammapy.modeling.models.PiecewiseNormSpectralModel.integral_error", false]], "integral_error() (gammapy.modeling.models.powerlaw2spectralmodel method)": [[238, "gammapy.modeling.models.PowerLaw2SpectralModel.integral_error", false]], "integral_error() (gammapy.modeling.models.powerlawnormspectralmodel method)": [[239, "gammapy.modeling.models.PowerLawNormSpectralModel.integral_error", false]], "integral_error() (gammapy.modeling.models.powerlawspectralmodel method)": [[240, "gammapy.modeling.models.PowerLawSpectralModel.integral_error", false]], "integral_error() (gammapy.modeling.models.scalespectralmodel method)": [[244, "gammapy.modeling.models.ScaleSpectralModel.integral_error", false]], "integral_error() (gammapy.modeling.models.smoothbrokenpowerlawspectralmodel method)": [[249, "gammapy.modeling.models.SmoothBrokenPowerLawSpectralModel.integral_error", false]], "integral_error() (gammapy.modeling.models.spectralmodel method)": [[251, "gammapy.modeling.models.SpectralModel.integral_error", false]], "integral_error() (gammapy.modeling.models.superexpcutoffpowerlaw3fglspectralmodel method)": [[252, "gammapy.modeling.models.SuperExpCutoffPowerLaw3FGLSpectralModel.integral_error", false]], "integral_error() (gammapy.modeling.models.superexpcutoffpowerlaw4fgldr3spectralmodel method)": [[253, "gammapy.modeling.models.SuperExpCutoffPowerLaw4FGLDR3SpectralModel.integral_error", false]], "integral_error() (gammapy.modeling.models.superexpcutoffpowerlaw4fglspectralmodel method)": [[254, "gammapy.modeling.models.SuperExpCutoffPowerLaw4FGLSpectralModel.integral_error", false]], "integral_error() (gammapy.modeling.models.templatendspectralmodel method)": [[257, "gammapy.modeling.models.TemplateNDSpectralModel.integral_error", false]], "integral_error() (gammapy.modeling.models.templatespectralmodel method)": [[261, "gammapy.modeling.models.TemplateSpectralModel.integral_error", false]], "integrate_geom() (gammapy.modeling.models.constantfluxspatialmodel static method)": [[207, "gammapy.modeling.models.ConstantFluxSpatialModel.integrate_geom", false]], "integrate_geom() (gammapy.modeling.models.constantspatialmodel method)": [[208, "gammapy.modeling.models.ConstantSpatialModel.integrate_geom", false]], "integrate_geom() (gammapy.modeling.models.diskspatialmodel method)": [[212, "gammapy.modeling.models.DiskSpatialModel.integrate_geom", false]], "integrate_geom() (gammapy.modeling.models.gaussianspatialmodel method)": [[220, "gammapy.modeling.models.GaussianSpatialModel.integrate_geom", false]], "integrate_geom() (gammapy.modeling.models.generalizedgaussianspatialmodel method)": [[223, "gammapy.modeling.models.GeneralizedGaussianSpatialModel.integrate_geom", false]], "integrate_geom() (gammapy.modeling.models.piecewisenormspatialmodel method)": [[235, "gammapy.modeling.models.PiecewiseNormSpatialModel.integrate_geom", false]], "integrate_geom() (gammapy.modeling.models.pointspatialmodel method)": [[237, "gammapy.modeling.models.PointSpatialModel.integrate_geom", false]], "integrate_geom() (gammapy.modeling.models.shell2spatialmodel method)": [[245, "gammapy.modeling.models.Shell2SpatialModel.integrate_geom", false]], "integrate_geom() (gammapy.modeling.models.shellspatialmodel method)": [[246, "gammapy.modeling.models.ShellSpatialModel.integrate_geom", false]], "integrate_geom() (gammapy.modeling.models.skymodel method)": [[248, "gammapy.modeling.models.SkyModel.integrate_geom", false]], "integrate_geom() (gammapy.modeling.models.spatialmodel method)": [[250, "gammapy.modeling.models.SpatialModel.integrate_geom", false]], "integrate_geom() (gammapy.modeling.models.templatendspatialmodel method)": [[256, "gammapy.modeling.models.TemplateNDSpatialModel.integrate_geom", false]], "integrate_geom() (gammapy.modeling.models.templatespatialmodel method)": [[260, "gammapy.modeling.models.TemplateSpatialModel.integrate_geom", false]], "integrate_log_log() (gammapy.irf.background2d method)": [[137, "gammapy.irf.Background2D.integrate_log_log", false]], "integrate_log_log() (gammapy.irf.background3d method)": [[138, "gammapy.irf.Background3D.integrate_log_log", false]], "integrate_log_log() (gammapy.irf.backgroundirf method)": [[139, "gammapy.irf.BackgroundIRF.integrate_log_log", false]], "integrate_log_log() (gammapy.irf.edispkernel method)": [[140, "gammapy.irf.EDispKernel.integrate_log_log", false]], "integrate_log_log() (gammapy.irf.effectiveareatable2d method)": [[143, "gammapy.irf.EffectiveAreaTable2D.integrate_log_log", false]], "integrate_log_log() (gammapy.irf.energydependentmultigausspsf method)": [[144, "gammapy.irf.EnergyDependentMultiGaussPSF.integrate_log_log", false]], "integrate_log_log() (gammapy.irf.energydispersion2d method)": [[145, "gammapy.irf.EnergyDispersion2D.integrate_log_log", false]], "integrate_log_log() (gammapy.irf.irf method)": [[147, "gammapy.irf.IRF.integrate_log_log", false]], "integrate_log_log() (gammapy.irf.parametricpsf method)": [[154, "gammapy.irf.ParametricPSF.integrate_log_log", false]], "integrate_log_log() (gammapy.irf.psf3d method)": [[150, "gammapy.irf.PSF3D.integrate_log_log", false]], "integrate_log_log() (gammapy.irf.psfking method)": [[152, "gammapy.irf.PSFKing.integrate_log_log", false]], "integrate_log_log() (gammapy.irf.radmax2d method)": [[155, "gammapy.irf.RadMax2D.integrate_log_log", false]], "integrate_spectrum() (in module gammapy.modeling.models)": [[266, "gammapy.modeling.models.integrate_spectrum", false]], "integrate_spectrum_separation() (gammapy.astro.darkmatter.burkertprofile method)": [[17, "gammapy.astro.darkmatter.BurkertProfile.integrate_spectrum_separation", false]], "integrate_spectrum_separation() (gammapy.astro.darkmatter.dmprofile method)": [[18, "gammapy.astro.darkmatter.DMProfile.integrate_spectrum_separation", false]], "integrate_spectrum_separation() (gammapy.astro.darkmatter.einastoprofile method)": [[21, "gammapy.astro.darkmatter.EinastoProfile.integrate_spectrum_separation", false]], "integrate_spectrum_separation() (gammapy.astro.darkmatter.isothermalprofile method)": [[22, "gammapy.astro.darkmatter.IsothermalProfile.integrate_spectrum_separation", false]], "integrate_spectrum_separation() (gammapy.astro.darkmatter.mooreprofile method)": [[24, "gammapy.astro.darkmatter.MooreProfile.integrate_spectrum_separation", false]], "integrate_spectrum_separation() (gammapy.astro.darkmatter.nfwprofile method)": [[25, "gammapy.astro.darkmatter.NFWProfile.integrate_spectrum_separation", false]], "integrate_spectrum_separation() (gammapy.astro.darkmatter.zhaoprofile method)": [[27, "gammapy.astro.darkmatter.ZhaoProfile.integrate_spectrum_separation", false]], "interp (gammapy.maps.mapaxis attribute)": [[188, "gammapy.maps.MapAxis.interp", false]], "interp (gammapy.maps.timemapaxis attribute)": [[193, "gammapy.maps.TimeMapAxis.interp", false]], "interp_by_coord() (gammapy.maps.hpxmap method)": [[183, "gammapy.maps.HpxMap.interp_by_coord", false]], "interp_by_coord() (gammapy.maps.hpxndmap method)": [[184, "gammapy.maps.HpxNDMap.interp_by_coord", false]], "interp_by_coord() (gammapy.maps.map method)": [[186, "gammapy.maps.Map.interp_by_coord", false]], "interp_by_coord() (gammapy.maps.regionndmap method)": [[192, "gammapy.maps.RegionNDMap.interp_by_coord", false]], "interp_by_coord() (gammapy.maps.wcsmap method)": [[195, "gammapy.maps.WcsMap.interp_by_coord", false]], "interp_by_coord() (gammapy.maps.wcsndmap method)": [[196, "gammapy.maps.WcsNDMap.interp_by_coord", false]], "interp_by_pix() (gammapy.maps.hpxmap method)": [[183, "gammapy.maps.HpxMap.interp_by_pix", false]], "interp_by_pix() (gammapy.maps.hpxndmap method)": [[184, "gammapy.maps.HpxNDMap.interp_by_pix", false]], "interp_by_pix() (gammapy.maps.map method)": [[186, "gammapy.maps.Map.interp_by_pix", false]], "interp_by_pix() (gammapy.maps.regionndmap method)": [[192, "gammapy.maps.RegionNDMap.interp_by_pix", false]], "interp_by_pix() (gammapy.maps.wcsmap method)": [[195, "gammapy.maps.WcsMap.interp_by_pix", false]], "interp_by_pix() (gammapy.maps.wcsndmap method)": [[196, "gammapy.maps.WcsNDMap.interp_by_pix", false]], "interp_missing_data() (gammapy.irf.background2d method)": [[137, "gammapy.irf.Background2D.interp_missing_data", false]], "interp_missing_data() (gammapy.irf.background3d method)": [[138, "gammapy.irf.Background3D.interp_missing_data", false]], "interp_missing_data() (gammapy.irf.backgroundirf method)": [[139, "gammapy.irf.BackgroundIRF.interp_missing_data", false]], "interp_missing_data() (gammapy.irf.edispkernel method)": [[140, "gammapy.irf.EDispKernel.interp_missing_data", false]], "interp_missing_data() (gammapy.irf.effectiveareatable2d method)": [[143, "gammapy.irf.EffectiveAreaTable2D.interp_missing_data", false]], "interp_missing_data() (gammapy.irf.energydependentmultigausspsf method)": [[144, "gammapy.irf.EnergyDependentMultiGaussPSF.interp_missing_data", false]], "interp_missing_data() (gammapy.irf.energydispersion2d method)": [[145, "gammapy.irf.EnergyDispersion2D.interp_missing_data", false]], "interp_missing_data() (gammapy.irf.irf method)": [[147, "gammapy.irf.IRF.interp_missing_data", false]], "interp_missing_data() (gammapy.irf.parametricpsf method)": [[154, "gammapy.irf.ParametricPSF.interp_missing_data", false]], "interp_missing_data() (gammapy.irf.psf3d method)": [[150, "gammapy.irf.PSF3D.interp_missing_data", false]], "interp_missing_data() (gammapy.irf.psfking method)": [[152, "gammapy.irf.PSFKing.interp_missing_data", false]], "interp_missing_data() (gammapy.irf.radmax2d method)": [[155, "gammapy.irf.RadMax2D.interp_missing_data", false]], "interp_to_geom() (gammapy.maps.hpxmap method)": [[183, "gammapy.maps.HpxMap.interp_to_geom", false]], "interp_to_geom() (gammapy.maps.hpxndmap method)": [[184, "gammapy.maps.HpxNDMap.interp_to_geom", false]], "interp_to_geom() (gammapy.maps.map method)": [[186, "gammapy.maps.Map.interp_to_geom", false]], "interp_to_geom() (gammapy.maps.regionndmap method)": [[192, "gammapy.maps.RegionNDMap.interp_to_geom", false]], "interp_to_geom() (gammapy.maps.wcsmap method)": [[195, "gammapy.maps.WcsMap.interp_to_geom", false]], "interp_to_geom() (gammapy.maps.wcsndmap method)": [[196, "gammapy.maps.WcsNDMap.interp_to_geom", false]], "interp_weights() (gammapy.maps.hpxgeom method)": [[182, "gammapy.maps.HpxGeom.interp_weights", false]], "interpolate_profile() (in module gammapy.utils.interpolation)": [[303, "gammapy.utils.interpolation.interpolate_profile", false]], "interpolation_scale() (in module gammapy.utils.interpolation)": [[304, "gammapy.utils.interpolation.interpolation_scale", false]], "inverse (gammapy.astro.population.casebattacharya1998 attribute)": [[28, "gammapy.astro.population.CaseBattacharya1998.inverse", false]], "inverse (gammapy.astro.population.exponential attribute)": [[29, "gammapy.astro.population.Exponential.inverse", false]], "inverse (gammapy.astro.population.faucherkaspi2006 attribute)": [[30, "gammapy.astro.population.FaucherKaspi2006.inverse", false]], "inverse (gammapy.astro.population.faucherkaspi2006velocitybimodal attribute)": [[31, "gammapy.astro.population.FaucherKaspi2006VelocityBimodal.inverse", false]], "inverse (gammapy.astro.population.faucherkaspi2006velocitymaxwellian attribute)": [[32, "gammapy.astro.population.FaucherKaspi2006VelocityMaxwellian.inverse", false]], "inverse (gammapy.astro.population.lorimer2006 attribute)": [[35, "gammapy.astro.population.Lorimer2006.inverse", false]], "inverse (gammapy.astro.population.paczynski1990 attribute)": [[36, "gammapy.astro.population.Paczynski1990.inverse", false]], "inverse (gammapy.astro.population.paczynski1990velocity attribute)": [[37, "gammapy.astro.population.Paczynski1990Velocity.inverse", false]], "inverse (gammapy.astro.population.yusifovkucuk2004 attribute)": [[39, "gammapy.astro.population.YusifovKucuk2004.inverse", false]], "inverse (gammapy.astro.population.yusifovkucuk2004b attribute)": [[40, "gammapy.astro.population.YusifovKucuk2004B.inverse", false]], "inverse() (gammapy.astro.darkmatter.darkmatterannihilationspectralmodel method)": [[19, "gammapy.astro.darkmatter.DarkMatterAnnihilationSpectralModel.inverse", false]], "inverse() (gammapy.astro.darkmatter.darkmatterdecayspectralmodel method)": [[20, "gammapy.astro.darkmatter.DarkMatterDecaySpectralModel.inverse", false]], "inverse() (gammapy.astro.darkmatter.primaryflux method)": [[26, "gammapy.astro.darkmatter.PrimaryFlux.inverse", false]], "inverse() (gammapy.modeling.models.brokenpowerlawspectralmodel method)": [[205, "gammapy.modeling.models.BrokenPowerLawSpectralModel.inverse", false]], "inverse() (gammapy.modeling.models.compoundspectralmodel method)": [[206, "gammapy.modeling.models.CompoundSpectralModel.inverse", false]], "inverse() (gammapy.modeling.models.constantspectralmodel method)": [[209, "gammapy.modeling.models.ConstantSpectralModel.inverse", false]], "inverse() (gammapy.modeling.models.eblabsorptionnormspectralmodel method)": [[213, "gammapy.modeling.models.EBLAbsorptionNormSpectralModel.inverse", false]], "inverse() (gammapy.modeling.models.expcutoffpowerlaw3fglspectralmodel method)": [[215, "gammapy.modeling.models.ExpCutoffPowerLaw3FGLSpectralModel.inverse", false]], "inverse() (gammapy.modeling.models.expcutoffpowerlawnormspectralmodel method)": [[216, "gammapy.modeling.models.ExpCutoffPowerLawNormSpectralModel.inverse", false]], "inverse() (gammapy.modeling.models.expcutoffpowerlawspectralmodel method)": [[217, "gammapy.modeling.models.ExpCutoffPowerLawSpectralModel.inverse", false]], "inverse() (gammapy.modeling.models.gaussianspectralmodel method)": [[221, "gammapy.modeling.models.GaussianSpectralModel.inverse", false]], "inverse() (gammapy.modeling.models.logparabolanormspectralmodel method)": [[227, "gammapy.modeling.models.LogParabolaNormSpectralModel.inverse", false]], "inverse() (gammapy.modeling.models.logparabolaspectralmodel method)": [[228, "gammapy.modeling.models.LogParabolaSpectralModel.inverse", false]], "inverse() (gammapy.modeling.models.meyercrabspectralmodel method)": [[230, "gammapy.modeling.models.MeyerCrabSpectralModel.inverse", false]], "inverse() (gammapy.modeling.models.naimaspectralmodel method)": [[234, "gammapy.modeling.models.NaimaSpectralModel.inverse", false]], "inverse() (gammapy.modeling.models.piecewisenormspectralmodel method)": [[236, "gammapy.modeling.models.PiecewiseNormSpectralModel.inverse", false]], "inverse() (gammapy.modeling.models.powerlaw2spectralmodel method)": [[238, "gammapy.modeling.models.PowerLaw2SpectralModel.inverse", false]], "inverse() (gammapy.modeling.models.powerlawnormspectralmodel method)": [[239, "gammapy.modeling.models.PowerLawNormSpectralModel.inverse", false]], "inverse() (gammapy.modeling.models.powerlawspectralmodel method)": [[240, "gammapy.modeling.models.PowerLawSpectralModel.inverse", false]], "inverse() (gammapy.modeling.models.scalespectralmodel method)": [[244, "gammapy.modeling.models.ScaleSpectralModel.inverse", false]], "inverse() (gammapy.modeling.models.smoothbrokenpowerlawspectralmodel method)": [[249, "gammapy.modeling.models.SmoothBrokenPowerLawSpectralModel.inverse", false]], "inverse() (gammapy.modeling.models.spectralmodel method)": [[251, "gammapy.modeling.models.SpectralModel.inverse", false]], "inverse() (gammapy.modeling.models.superexpcutoffpowerlaw3fglspectralmodel method)": [[252, "gammapy.modeling.models.SuperExpCutoffPowerLaw3FGLSpectralModel.inverse", false]], "inverse() (gammapy.modeling.models.superexpcutoffpowerlaw4fgldr3spectralmodel method)": [[253, "gammapy.modeling.models.SuperExpCutoffPowerLaw4FGLDR3SpectralModel.inverse", false]], "inverse() (gammapy.modeling.models.superexpcutoffpowerlaw4fglspectralmodel method)": [[254, "gammapy.modeling.models.SuperExpCutoffPowerLaw4FGLSpectralModel.inverse", false]], "inverse() (gammapy.modeling.models.templatendspectralmodel method)": [[257, "gammapy.modeling.models.TemplateNDSpectralModel.inverse", false]], "inverse() (gammapy.modeling.models.templatespectralmodel method)": [[261, "gammapy.modeling.models.TemplateSpectralModel.inverse", false]], "inverse_all() (gammapy.astro.darkmatter.darkmatterannihilationspectralmodel method)": [[19, "gammapy.astro.darkmatter.DarkMatterAnnihilationSpectralModel.inverse_all", false]], "inverse_all() (gammapy.astro.darkmatter.darkmatterdecayspectralmodel method)": [[20, "gammapy.astro.darkmatter.DarkMatterDecaySpectralModel.inverse_all", false]], "inverse_all() (gammapy.astro.darkmatter.primaryflux method)": [[26, "gammapy.astro.darkmatter.PrimaryFlux.inverse_all", false]], "inverse_all() (gammapy.modeling.models.brokenpowerlawspectralmodel method)": [[205, "gammapy.modeling.models.BrokenPowerLawSpectralModel.inverse_all", false]], "inverse_all() (gammapy.modeling.models.compoundspectralmodel method)": [[206, "gammapy.modeling.models.CompoundSpectralModel.inverse_all", false]], "inverse_all() (gammapy.modeling.models.constantspectralmodel method)": [[209, "gammapy.modeling.models.ConstantSpectralModel.inverse_all", false]], "inverse_all() (gammapy.modeling.models.eblabsorptionnormspectralmodel method)": [[213, "gammapy.modeling.models.EBLAbsorptionNormSpectralModel.inverse_all", false]], "inverse_all() (gammapy.modeling.models.expcutoffpowerlaw3fglspectralmodel method)": [[215, "gammapy.modeling.models.ExpCutoffPowerLaw3FGLSpectralModel.inverse_all", false]], "inverse_all() (gammapy.modeling.models.expcutoffpowerlawnormspectralmodel method)": [[216, "gammapy.modeling.models.ExpCutoffPowerLawNormSpectralModel.inverse_all", false]], "inverse_all() (gammapy.modeling.models.expcutoffpowerlawspectralmodel method)": [[217, "gammapy.modeling.models.ExpCutoffPowerLawSpectralModel.inverse_all", false]], "inverse_all() (gammapy.modeling.models.gaussianspectralmodel method)": [[221, "gammapy.modeling.models.GaussianSpectralModel.inverse_all", false]], "inverse_all() (gammapy.modeling.models.logparabolanormspectralmodel method)": [[227, "gammapy.modeling.models.LogParabolaNormSpectralModel.inverse_all", false]], "inverse_all() (gammapy.modeling.models.logparabolaspectralmodel method)": [[228, "gammapy.modeling.models.LogParabolaSpectralModel.inverse_all", false]], "inverse_all() (gammapy.modeling.models.meyercrabspectralmodel method)": [[230, "gammapy.modeling.models.MeyerCrabSpectralModel.inverse_all", false]], "inverse_all() (gammapy.modeling.models.naimaspectralmodel method)": [[234, "gammapy.modeling.models.NaimaSpectralModel.inverse_all", false]], "inverse_all() (gammapy.modeling.models.piecewisenormspectralmodel method)": [[236, "gammapy.modeling.models.PiecewiseNormSpectralModel.inverse_all", false]], "inverse_all() (gammapy.modeling.models.powerlaw2spectralmodel method)": [[238, "gammapy.modeling.models.PowerLaw2SpectralModel.inverse_all", false]], "inverse_all() (gammapy.modeling.models.powerlawnormspectralmodel method)": [[239, "gammapy.modeling.models.PowerLawNormSpectralModel.inverse_all", false]], "inverse_all() (gammapy.modeling.models.powerlawspectralmodel method)": [[240, "gammapy.modeling.models.PowerLawSpectralModel.inverse_all", false]], "inverse_all() (gammapy.modeling.models.scalespectralmodel method)": [[244, "gammapy.modeling.models.ScaleSpectralModel.inverse_all", false]], "inverse_all() (gammapy.modeling.models.smoothbrokenpowerlawspectralmodel method)": [[249, "gammapy.modeling.models.SmoothBrokenPowerLawSpectralModel.inverse_all", false]], "inverse_all() (gammapy.modeling.models.spectralmodel method)": [[251, "gammapy.modeling.models.SpectralModel.inverse_all", false]], "inverse_all() (gammapy.modeling.models.superexpcutoffpowerlaw3fglspectralmodel method)": [[252, "gammapy.modeling.models.SuperExpCutoffPowerLaw3FGLSpectralModel.inverse_all", false]], "inverse_all() (gammapy.modeling.models.superexpcutoffpowerlaw4fgldr3spectralmodel method)": [[253, "gammapy.modeling.models.SuperExpCutoffPowerLaw4FGLDR3SpectralModel.inverse_all", false]], "inverse_all() (gammapy.modeling.models.superexpcutoffpowerlaw4fglspectralmodel method)": [[254, "gammapy.modeling.models.SuperExpCutoffPowerLaw4FGLSpectralModel.inverse_all", false]], "inverse_all() (gammapy.modeling.models.templatendspectralmodel method)": [[257, "gammapy.modeling.models.TemplateNDSpectralModel.inverse_all", false]], "inverse_all() (gammapy.modeling.models.templatespectralmodel method)": [[261, "gammapy.modeling.models.TemplateSpectralModel.inverse_all", false]], "inversecdfsampler (class in gammapy.utils.random)": [[312, "gammapy.utils.random.InverseCDFSampler", false]], "ipix (gammapy.maps.hpxgeom attribute)": [[182, "gammapy.maps.HpxGeom.ipix", false]], "irf": [[554, "term-IRF", true]], "irf (class in gammapy.irf)": [[147, "gammapy.irf.IRF", false]], "irf_registry (in module gammapy.irf)": [[149, "gammapy.irf.IRF_REGISTRY", false]], "irfmap (class in gammapy.irf)": [[148, "gammapy.irf.IRFMap", false]], "is_aligned() (gammapy.maps.hpxgeom method)": [[182, "gammapy.maps.HpxGeom.is_aligned", false]], "is_aligned() (gammapy.maps.mapaxis method)": [[188, "gammapy.maps.MapAxis.is_aligned", false]], "is_aligned() (gammapy.maps.timemapaxis method)": [[193, "gammapy.maps.TimeMapAxis.is_aligned", false]], "is_aligned() (gammapy.maps.wcsgeom method)": [[194, "gammapy.maps.WcsGeom.is_aligned", false]], "is_all_point_sky_regions (gammapy.maps.regiongeom attribute)": [[191, "gammapy.maps.RegionGeom.is_all_point_sky_regions", false]], "is_all_same_energy_shape (gammapy.datasets.datasets attribute)": [[95, "gammapy.datasets.Datasets.is_all_same_energy_shape", false]], "is_all_same_shape (gammapy.datasets.datasets attribute)": [[95, "gammapy.datasets.Datasets.is_all_same_shape", false]], "is_all_same_type (gammapy.datasets.datasets attribute)": [[95, "gammapy.datasets.Datasets.is_all_same_type", false]], "is_allclose() (gammapy.irf.background2d method)": [[137, "gammapy.irf.Background2D.is_allclose", false]], "is_allclose() (gammapy.irf.background3d method)": [[138, "gammapy.irf.Background3D.is_allclose", false]], "is_allclose() (gammapy.irf.backgroundirf method)": [[139, "gammapy.irf.BackgroundIRF.is_allclose", false]], "is_allclose() (gammapy.irf.edispkernel method)": [[140, "gammapy.irf.EDispKernel.is_allclose", false]], "is_allclose() (gammapy.irf.effectiveareatable2d method)": [[143, "gammapy.irf.EffectiveAreaTable2D.is_allclose", false]], "is_allclose() (gammapy.irf.energydependentmultigausspsf method)": [[144, "gammapy.irf.EnergyDependentMultiGaussPSF.is_allclose", false]], "is_allclose() (gammapy.irf.energydispersion2d method)": [[145, "gammapy.irf.EnergyDispersion2D.is_allclose", false]], "is_allclose() (gammapy.irf.irf method)": [[147, "gammapy.irf.IRF.is_allclose", false]], "is_allclose() (gammapy.irf.parametricpsf method)": [[154, "gammapy.irf.ParametricPSF.is_allclose", false]], "is_allclose() (gammapy.irf.psf3d method)": [[150, "gammapy.irf.PSF3D.is_allclose", false]], "is_allclose() (gammapy.irf.psfking method)": [[152, "gammapy.irf.PSFKing.is_allclose", false]], "is_allclose() (gammapy.irf.radmax2d method)": [[155, "gammapy.irf.RadMax2D.is_allclose", false]], "is_allclose() (gammapy.maps.hpxgeom method)": [[182, "gammapy.maps.HpxGeom.is_allclose", false]], "is_allclose() (gammapy.maps.hpxmap method)": [[183, "gammapy.maps.HpxMap.is_allclose", false]], "is_allclose() (gammapy.maps.hpxndmap method)": [[184, "gammapy.maps.HpxNDMap.is_allclose", false]], "is_allclose() (gammapy.maps.labelmapaxis method)": [[185, "gammapy.maps.LabelMapAxis.is_allclose", false]], "is_allclose() (gammapy.maps.map method)": [[186, "gammapy.maps.Map.is_allclose", false]], "is_allclose() (gammapy.maps.mapaxes method)": [[187, "gammapy.maps.MapAxes.is_allclose", false]], "is_allclose() (gammapy.maps.mapaxis method)": [[188, "gammapy.maps.MapAxis.is_allclose", false]], "is_allclose() (gammapy.maps.regiongeom method)": [[191, "gammapy.maps.RegionGeom.is_allclose", false]], "is_allclose() (gammapy.maps.regionndmap method)": [[192, "gammapy.maps.RegionNDMap.is_allclose", false]], "is_allclose() (gammapy.maps.timemapaxis method)": [[193, "gammapy.maps.TimeMapAxis.is_allclose", false]], "is_allclose() (gammapy.maps.wcsgeom method)": [[194, "gammapy.maps.WcsGeom.is_allclose", false]], "is_allclose() (gammapy.maps.wcsmap method)": [[195, "gammapy.maps.WcsMap.is_allclose", false]], "is_allclose() (gammapy.maps.wcsndmap method)": [[196, "gammapy.maps.WcsNDMap.is_allclose", false]], "is_allsky (gammapy.maps.geom attribute)": [[181, "gammapy.maps.Geom.is_allsky", false]], "is_allsky (gammapy.maps.hpxgeom attribute)": [[182, "gammapy.maps.HpxGeom.is_allsky", false]], "is_allsky (gammapy.maps.regiongeom attribute)": [[191, "gammapy.maps.RegionGeom.is_allsky", false]], "is_allsky (gammapy.maps.wcsgeom attribute)": [[194, "gammapy.maps.WcsGeom.is_allsky", false]], "is_contiguous (gammapy.maps.timemapaxis attribute)": [[193, "gammapy.maps.TimeMapAxis.is_contiguous", false]], "is_convertible_to_flux_sed_type (gammapy.estimators.fluxmaps attribute)": [[117, "gammapy.estimators.FluxMaps.is_convertible_to_flux_sed_type", false]], "is_convertible_to_flux_sed_type (gammapy.estimators.fluxpoints attribute)": [[119, "gammapy.estimators.FluxPoints.is_convertible_to_flux_sed_type", false]], "is_energy_axis (gammapy.maps.mapaxis attribute)": [[188, "gammapy.maps.MapAxis.is_energy_axis", false]], "is_energy_dependent (gammapy.modeling.models.constantfluxspatialmodel attribute)": [[207, "gammapy.modeling.models.ConstantFluxSpatialModel.is_energy_dependent", false]], "is_energy_dependent (gammapy.modeling.models.constantspatialmodel attribute)": [[208, "gammapy.modeling.models.ConstantSpatialModel.is_energy_dependent", false]], "is_energy_dependent (gammapy.modeling.models.constanttemporalmodel attribute)": [[210, "gammapy.modeling.models.ConstantTemporalModel.is_energy_dependent", false]], "is_energy_dependent (gammapy.modeling.models.diskspatialmodel attribute)": [[212, "gammapy.modeling.models.DiskSpatialModel.is_energy_dependent", false]], "is_energy_dependent (gammapy.modeling.models.expdecaytemporalmodel attribute)": [[218, "gammapy.modeling.models.ExpDecayTemporalModel.is_energy_dependent", false]], "is_energy_dependent (gammapy.modeling.models.gaussianspatialmodel attribute)": [[220, "gammapy.modeling.models.GaussianSpatialModel.is_energy_dependent", false]], "is_energy_dependent (gammapy.modeling.models.gaussiantemporalmodel attribute)": [[222, "gammapy.modeling.models.GaussianTemporalModel.is_energy_dependent", false]], "is_energy_dependent (gammapy.modeling.models.generalizedgaussianspatialmodel attribute)": [[223, "gammapy.modeling.models.GeneralizedGaussianSpatialModel.is_energy_dependent", false]], "is_energy_dependent (gammapy.modeling.models.generalizedgaussiantemporalmodel attribute)": [[224, "gammapy.modeling.models.GeneralizedGaussianTemporalModel.is_energy_dependent", false]], "is_energy_dependent (gammapy.modeling.models.lightcurvetemplatetemporalmodel attribute)": [[225, "gammapy.modeling.models.LightCurveTemplateTemporalModel.is_energy_dependent", false]], "is_energy_dependent (gammapy.modeling.models.lineartemporalmodel attribute)": [[226, "gammapy.modeling.models.LinearTemporalModel.is_energy_dependent", false]], "is_energy_dependent (gammapy.modeling.models.piecewisenormspatialmodel attribute)": [[235, "gammapy.modeling.models.PiecewiseNormSpatialModel.is_energy_dependent", false]], "is_energy_dependent (gammapy.modeling.models.pointspatialmodel attribute)": [[237, "gammapy.modeling.models.PointSpatialModel.is_energy_dependent", false]], "is_energy_dependent (gammapy.modeling.models.powerlawtemporalmodel attribute)": [[241, "gammapy.modeling.models.PowerLawTemporalModel.is_energy_dependent", false]], "is_energy_dependent (gammapy.modeling.models.shell2spatialmodel attribute)": [[245, "gammapy.modeling.models.Shell2SpatialModel.is_energy_dependent", false]], "is_energy_dependent (gammapy.modeling.models.shellspatialmodel attribute)": [[246, "gammapy.modeling.models.ShellSpatialModel.is_energy_dependent", false]], "is_energy_dependent (gammapy.modeling.models.sinetemporalmodel attribute)": [[247, "gammapy.modeling.models.SineTemporalModel.is_energy_dependent", false]], "is_energy_dependent (gammapy.modeling.models.spatialmodel attribute)": [[250, "gammapy.modeling.models.SpatialModel.is_energy_dependent", false]], "is_energy_dependent (gammapy.modeling.models.templatendspatialmodel attribute)": [[256, "gammapy.modeling.models.TemplateNDSpatialModel.is_energy_dependent", false]], "is_energy_dependent (gammapy.modeling.models.templatephasecurvetemporalmodel attribute)": [[259, "gammapy.modeling.models.TemplatePhaseCurveTemporalModel.is_energy_dependent", false]], "is_energy_dependent (gammapy.modeling.models.templatespatialmodel attribute)": [[260, "gammapy.modeling.models.TemplateSpatialModel.is_energy_dependent", false]], "is_energy_dependent (gammapy.modeling.models.temporalmodel attribute)": [[262, "gammapy.modeling.models.TemporalModel.is_energy_dependent", false]], "is_fixed_rad_max (gammapy.irf.radmax2d attribute)": [[155, "gammapy.irf.RadMax2D.is_fixed_rad_max", false]], "is_flat (gammapy.maps.geom attribute)": [[181, "gammapy.maps.Geom.is_flat", false]], "is_flat (gammapy.maps.hpxgeom attribute)": [[182, "gammapy.maps.HpxGeom.is_flat", false]], "is_flat (gammapy.maps.mapaxes attribute)": [[187, "gammapy.maps.MapAxes.is_flat", false]], "is_flat (gammapy.maps.regiongeom attribute)": [[191, "gammapy.maps.RegionGeom.is_flat", false]], "is_flat (gammapy.maps.wcsgeom attribute)": [[194, "gammapy.maps.WcsGeom.is_flat", false]], "is_hpx (gammapy.maps.hpxgeom attribute)": [[182, "gammapy.maps.HpxGeom.is_hpx", false]], "is_hpx (gammapy.maps.regiongeom attribute)": [[191, "gammapy.maps.RegionGeom.is_hpx", false]], "is_hpx (gammapy.maps.wcsgeom attribute)": [[194, "gammapy.maps.WcsGeom.is_hpx", false]], "is_image (gammapy.maps.geom attribute)": [[181, "gammapy.maps.Geom.is_image", false]], "is_image (gammapy.maps.hpxgeom attribute)": [[182, "gammapy.maps.HpxGeom.is_image", false]], "is_image (gammapy.maps.regiongeom attribute)": [[191, "gammapy.maps.RegionGeom.is_image", false]], "is_image (gammapy.maps.wcsgeom attribute)": [[194, "gammapy.maps.WcsGeom.is_image", false]], "is_mask (gammapy.maps.hpxmap attribute)": [[183, "gammapy.maps.HpxMap.is_mask", false]], "is_mask (gammapy.maps.hpxndmap attribute)": [[184, "gammapy.maps.HpxNDMap.is_mask", false]], "is_mask (gammapy.maps.map attribute)": [[186, "gammapy.maps.Map.is_mask", false]], "is_mask (gammapy.maps.regionndmap attribute)": [[192, "gammapy.maps.RegionNDMap.is_mask", false]], "is_mask (gammapy.maps.wcsmap attribute)": [[195, "gammapy.maps.WcsMap.is_mask", false]], "is_mask (gammapy.maps.wcsndmap attribute)": [[196, "gammapy.maps.WcsNDMap.is_mask", false]], "is_norm (gammapy.modeling.parameter attribute)": [[201, "gammapy.modeling.Parameter.is_norm", false]], "is_norm (gammapy.modeling.priorparameter attribute)": [[203, "gammapy.modeling.PriorParameter.is_norm", false]], "is_norm_spectral_model (gammapy.astro.darkmatter.darkmatterannihilationspectralmodel attribute)": [[19, "gammapy.astro.darkmatter.DarkMatterAnnihilationSpectralModel.is_norm_spectral_model", false]], "is_norm_spectral_model (gammapy.astro.darkmatter.darkmatterdecayspectralmodel attribute)": [[20, "gammapy.astro.darkmatter.DarkMatterDecaySpectralModel.is_norm_spectral_model", false]], "is_norm_spectral_model (gammapy.astro.darkmatter.primaryflux attribute)": [[26, "gammapy.astro.darkmatter.PrimaryFlux.is_norm_spectral_model", false]], "is_norm_spectral_model (gammapy.modeling.models.brokenpowerlawspectralmodel attribute)": [[205, "gammapy.modeling.models.BrokenPowerLawSpectralModel.is_norm_spectral_model", false]], "is_norm_spectral_model (gammapy.modeling.models.compoundspectralmodel attribute)": [[206, "gammapy.modeling.models.CompoundSpectralModel.is_norm_spectral_model", false]], "is_norm_spectral_model (gammapy.modeling.models.constantspectralmodel attribute)": [[209, "gammapy.modeling.models.ConstantSpectralModel.is_norm_spectral_model", false]], "is_norm_spectral_model (gammapy.modeling.models.eblabsorptionnormspectralmodel attribute)": [[213, "gammapy.modeling.models.EBLAbsorptionNormSpectralModel.is_norm_spectral_model", false]], "is_norm_spectral_model (gammapy.modeling.models.expcutoffpowerlaw3fglspectralmodel attribute)": [[215, "gammapy.modeling.models.ExpCutoffPowerLaw3FGLSpectralModel.is_norm_spectral_model", false]], "is_norm_spectral_model (gammapy.modeling.models.expcutoffpowerlawnormspectralmodel attribute)": [[216, "gammapy.modeling.models.ExpCutoffPowerLawNormSpectralModel.is_norm_spectral_model", false]], "is_norm_spectral_model (gammapy.modeling.models.expcutoffpowerlawspectralmodel attribute)": [[217, "gammapy.modeling.models.ExpCutoffPowerLawSpectralModel.is_norm_spectral_model", false]], "is_norm_spectral_model (gammapy.modeling.models.gaussianspectralmodel attribute)": [[221, "gammapy.modeling.models.GaussianSpectralModel.is_norm_spectral_model", false]], "is_norm_spectral_model (gammapy.modeling.models.logparabolanormspectralmodel attribute)": [[227, "gammapy.modeling.models.LogParabolaNormSpectralModel.is_norm_spectral_model", false]], "is_norm_spectral_model (gammapy.modeling.models.logparabolaspectralmodel attribute)": [[228, "gammapy.modeling.models.LogParabolaSpectralModel.is_norm_spectral_model", false]], "is_norm_spectral_model (gammapy.modeling.models.meyercrabspectralmodel attribute)": [[230, "gammapy.modeling.models.MeyerCrabSpectralModel.is_norm_spectral_model", false]], "is_norm_spectral_model (gammapy.modeling.models.naimaspectralmodel attribute)": [[234, "gammapy.modeling.models.NaimaSpectralModel.is_norm_spectral_model", false]], "is_norm_spectral_model (gammapy.modeling.models.piecewisenormspectralmodel attribute)": [[236, "gammapy.modeling.models.PiecewiseNormSpectralModel.is_norm_spectral_model", false]], "is_norm_spectral_model (gammapy.modeling.models.powerlaw2spectralmodel attribute)": [[238, "gammapy.modeling.models.PowerLaw2SpectralModel.is_norm_spectral_model", false]], "is_norm_spectral_model (gammapy.modeling.models.powerlawnormspectralmodel attribute)": [[239, "gammapy.modeling.models.PowerLawNormSpectralModel.is_norm_spectral_model", false]], "is_norm_spectral_model (gammapy.modeling.models.powerlawspectralmodel attribute)": [[240, "gammapy.modeling.models.PowerLawSpectralModel.is_norm_spectral_model", false]], "is_norm_spectral_model (gammapy.modeling.models.scalespectralmodel attribute)": [[244, "gammapy.modeling.models.ScaleSpectralModel.is_norm_spectral_model", false]], "is_norm_spectral_model (gammapy.modeling.models.smoothbrokenpowerlawspectralmodel attribute)": [[249, "gammapy.modeling.models.SmoothBrokenPowerLawSpectralModel.is_norm_spectral_model", false]], "is_norm_spectral_model (gammapy.modeling.models.spectralmodel attribute)": [[251, "gammapy.modeling.models.SpectralModel.is_norm_spectral_model", false]], "is_norm_spectral_model (gammapy.modeling.models.superexpcutoffpowerlaw3fglspectralmodel attribute)": [[252, "gammapy.modeling.models.SuperExpCutoffPowerLaw3FGLSpectralModel.is_norm_spectral_model", false]], "is_norm_spectral_model (gammapy.modeling.models.superexpcutoffpowerlaw4fgldr3spectralmodel attribute)": [[253, "gammapy.modeling.models.SuperExpCutoffPowerLaw4FGLDR3SpectralModel.is_norm_spectral_model", false]], "is_norm_spectral_model (gammapy.modeling.models.superexpcutoffpowerlaw4fglspectralmodel attribute)": [[254, "gammapy.modeling.models.SuperExpCutoffPowerLaw4FGLSpectralModel.is_norm_spectral_model", false]], "is_norm_spectral_model (gammapy.modeling.models.templatendspectralmodel attribute)": [[257, "gammapy.modeling.models.TemplateNDSpectralModel.is_norm_spectral_model", false]], "is_norm_spectral_model (gammapy.modeling.models.templatespectralmodel attribute)": [[261, "gammapy.modeling.models.TemplateSpectralModel.is_norm_spectral_model", false]], "is_pointed_observation (gammapy.data.eventlist attribute)": [[79, "gammapy.data.EventList.is_pointed_observation", false]], "is_pointlike (gammapy.catalog.sourcecatalogobject2fhl attribute)": [[69, "gammapy.catalog.SourceCatalogObject2FHL.is_pointlike", false]], "is_pointlike (gammapy.catalog.sourcecatalogobject3fgl attribute)": [[71, "gammapy.catalog.SourceCatalogObject3FGL.is_pointlike", false]], "is_pointlike (gammapy.catalog.sourcecatalogobject3fhl attribute)": [[72, "gammapy.catalog.SourceCatalogObject3FHL.is_pointlike", false]], "is_pointlike (gammapy.catalog.sourcecatalogobject3hwc attribute)": [[73, "gammapy.catalog.SourceCatalogObject3HWC.is_pointlike", false]], "is_pointlike (gammapy.catalog.sourcecatalogobject4fgl attribute)": [[74, "gammapy.catalog.SourceCatalogObject4FGL.is_pointlike", false]], "is_pointlike (gammapy.irf.background2d attribute)": [[137, "gammapy.irf.Background2D.is_pointlike", false]], "is_pointlike (gammapy.irf.background3d attribute)": [[138, "gammapy.irf.Background3D.is_pointlike", false]], "is_pointlike (gammapy.irf.backgroundirf attribute)": [[139, "gammapy.irf.BackgroundIRF.is_pointlike", false]], "is_pointlike (gammapy.irf.edispkernel attribute)": [[140, "gammapy.irf.EDispKernel.is_pointlike", false]], "is_pointlike (gammapy.irf.effectiveareatable2d attribute)": [[143, "gammapy.irf.EffectiveAreaTable2D.is_pointlike", false]], "is_pointlike (gammapy.irf.energydependentmultigausspsf attribute)": [[144, "gammapy.irf.EnergyDependentMultiGaussPSF.is_pointlike", false]], "is_pointlike (gammapy.irf.energydispersion2d attribute)": [[145, "gammapy.irf.EnergyDispersion2D.is_pointlike", false]], "is_pointlike (gammapy.irf.irf attribute)": [[147, "gammapy.irf.IRF.is_pointlike", false]], "is_pointlike (gammapy.irf.parametricpsf attribute)": [[154, "gammapy.irf.ParametricPSF.is_pointlike", false]], "is_pointlike (gammapy.irf.psf3d attribute)": [[150, "gammapy.irf.PSF3D.is_pointlike", false]], "is_pointlike (gammapy.irf.psfking attribute)": [[152, "gammapy.irf.PSFKing.is_pointlike", false]], "is_pointlike (gammapy.irf.radmax2d attribute)": [[155, "gammapy.irf.RadMax2D.is_pointlike", false]], "is_region (gammapy.maps.hpxgeom attribute)": [[182, "gammapy.maps.HpxGeom.is_region", false]], "is_region (gammapy.maps.regiongeom attribute)": [[191, "gammapy.maps.RegionGeom.is_region", false]], "is_region (gammapy.maps.wcsgeom attribute)": [[194, "gammapy.maps.WcsGeom.is_region", false]], "is_regular (gammapy.maps.hpxgeom attribute)": [[182, "gammapy.maps.HpxGeom.is_regular", false]], "is_regular (gammapy.maps.regiongeom attribute)": [[191, "gammapy.maps.RegionGeom.is_regular", false]], "is_regular (gammapy.maps.wcsgeom attribute)": [[194, "gammapy.maps.WcsGeom.is_regular", false]], "is_ul (gammapy.estimators.fluxmaps attribute)": [[117, "gammapy.estimators.FluxMaps.is_ul", false]], "is_ul (gammapy.estimators.fluxpoints attribute)": [[119, "gammapy.estimators.FluxPoints.is_ul", false]], "is_unidimensional (gammapy.maps.mapaxes attribute)": [[187, "gammapy.maps.MapAxes.is_unidimensional", false]], "isothermalprofile (class in gammapy.astro.darkmatter)": [[22, "gammapy.astro.darkmatter.IsothermalProfile", false]], "items() (gammapy.data.hduindextable method)": [[83, "gammapy.data.HDUIndexTable.items", false]], "items() (gammapy.data.observationtable method)": [[86, "gammapy.data.ObservationTable.items", false]], "items() (gammapy.maps.maps method)": [[190, "gammapy.maps.Maps.items", false]], "iter_by_axis() (gammapy.estimators.fluxmaps method)": [[117, "gammapy.estimators.FluxMaps.iter_by_axis", false]], "iter_by_axis() (gammapy.estimators.fluxpoints method)": [[119, "gammapy.estimators.FluxPoints.iter_by_axis", false]], "iter_by_axis() (gammapy.maps.hpxmap method)": [[183, "gammapy.maps.HpxMap.iter_by_axis", false]], "iter_by_axis() (gammapy.maps.hpxndmap method)": [[184, "gammapy.maps.HpxNDMap.iter_by_axis", false]], "iter_by_axis() (gammapy.maps.map method)": [[186, "gammapy.maps.Map.iter_by_axis", false]], "iter_by_axis() (gammapy.maps.regionndmap method)": [[192, "gammapy.maps.RegionNDMap.iter_by_axis", false]], "iter_by_axis() (gammapy.maps.wcsmap method)": [[195, "gammapy.maps.WcsMap.iter_by_axis", false]], "iter_by_axis() (gammapy.maps.wcsndmap method)": [[196, "gammapy.maps.WcsNDMap.iter_by_axis", false]], "iter_by_axis_data() (gammapy.maps.regionndmap method)": [[192, "gammapy.maps.RegionNDMap.iter_by_axis_data", false]], "iter_by_edges (gammapy.maps.mapaxis attribute)": [[188, "gammapy.maps.MapAxis.iter_by_edges", false]], "iter_by_edges (gammapy.maps.timemapaxis attribute)": [[193, "gammapy.maps.TimeMapAxis.iter_by_edges", false]], "iter_by_image() (gammapy.maps.hpxmap method)": [[183, "gammapy.maps.HpxMap.iter_by_image", false]], "iter_by_image() (gammapy.maps.hpxndmap method)": [[184, "gammapy.maps.HpxNDMap.iter_by_image", false]], "iter_by_image() (gammapy.maps.map method)": [[186, "gammapy.maps.Map.iter_by_image", false]], "iter_by_image() (gammapy.maps.regionndmap method)": [[192, "gammapy.maps.RegionNDMap.iter_by_image", false]], "iter_by_image() (gammapy.maps.wcsmap method)": [[195, "gammapy.maps.WcsMap.iter_by_image", false]], "iter_by_image() (gammapy.maps.wcsndmap method)": [[196, "gammapy.maps.WcsNDMap.iter_by_image", false]], "iter_by_image_data() (gammapy.maps.hpxmap method)": [[183, "gammapy.maps.HpxMap.iter_by_image_data", false]], "iter_by_image_data() (gammapy.maps.hpxndmap method)": [[184, "gammapy.maps.HpxNDMap.iter_by_image_data", false]], "iter_by_image_data() (gammapy.maps.map method)": [[186, "gammapy.maps.Map.iter_by_image_data", false]], "iter_by_image_data() (gammapy.maps.regionndmap method)": [[192, "gammapy.maps.RegionNDMap.iter_by_image_data", false]], "iter_by_image_data() (gammapy.maps.wcsmap method)": [[195, "gammapy.maps.WcsMap.iter_by_image_data", false]], "iter_by_image_data() (gammapy.maps.wcsndmap method)": [[196, "gammapy.maps.WcsNDMap.iter_by_image_data", false]], "iter_by_image_index() (gammapy.maps.hpxmap method)": [[183, "gammapy.maps.HpxMap.iter_by_image_index", false]], "iter_by_image_index() (gammapy.maps.hpxndmap method)": [[184, "gammapy.maps.HpxNDMap.iter_by_image_index", false]], "iter_by_image_index() (gammapy.maps.map method)": [[186, "gammapy.maps.Map.iter_by_image_index", false]], "iter_by_image_index() (gammapy.maps.regionndmap method)": [[192, "gammapy.maps.RegionNDMap.iter_by_image_index", false]], "iter_by_image_index() (gammapy.maps.wcsmap method)": [[195, "gammapy.maps.WcsMap.iter_by_image_index", false]], "iter_by_image_index() (gammapy.maps.wcsndmap method)": [[196, "gammapy.maps.WcsNDMap.iter_by_image_index", false]], "iter_with_reshape (gammapy.maps.mapaxes attribute)": [[187, "gammapy.maps.MapAxes.iter_with_reshape", false]], "itercols() (gammapy.data.hduindextable method)": [[83, "gammapy.data.HDUIndexTable.itercols", false]], "itercols() (gammapy.data.observationtable method)": [[86, "gammapy.data.ObservationTable.itercols", false]], "iterrows() (gammapy.data.hduindextable method)": [[83, "gammapy.data.HDUIndexTable.iterrows", false]], "iterrows() (gammapy.data.observationtable method)": [[86, "gammapy.data.ObservationTable.iterrows", false]], "jfactory (class in gammapy.astro.darkmatter)": [[23, "gammapy.astro.darkmatter.JFactory", false]], "joint analysis": [[554, "term-Joint-Analysis", true]], "json() (gammapy.analysis.analysisconfig method)": [[16, "gammapy.analysis.AnalysisConfig.json", false]], "json() (gammapy.data.eventlistmetadata method)": [[80, "gammapy.data.EventListMetaData.json", false]], "json() (gammapy.datasets.mapdatasetmetadata method)": [[99, "gammapy.datasets.MapDatasetMetaData.json", false]], "json() (gammapy.estimators.fluxmetadata method)": [[118, "gammapy.estimators.FluxMetaData.json", false]], "k (gammapy.astro.population.faucherspiral attribute)": [[33, "gammapy.astro.population.FaucherSpiral.k", false]], "keep_columns() (gammapy.data.hduindextable method)": [[83, "gammapy.data.HDUIndexTable.keep_columns", false]], "keep_columns() (gammapy.data.observationtable method)": [[86, "gammapy.data.ObservationTable.keep_columns", false]], "kernel() (gammapy.makers.ringbackgroundmaker method)": [[168, "gammapy.makers.RingBackgroundMaker.kernel", false]], "kernels() (gammapy.makers.adaptiveringbackgroundmaker method)": [[158, "gammapy.makers.AdaptiveRingBackgroundMaker.kernels", false]], "keys() (gammapy.data.hduindextable method)": [[83, "gammapy.data.HDUIndexTable.keys", false]], "keys() (gammapy.data.observationtable method)": [[86, "gammapy.data.ObservationTable.keys", false]], "keys() (gammapy.maps.maps method)": [[190, "gammapy.maps.Maps.keys", false]], "labelmapaxis (class in gammapy.maps)": [[185, "gammapy.maps.LabelMapAxis", false]], "lambda_ (gammapy.modeling.models.expcutoffpowerlawnormspectralmodel attribute)": [[216, "gammapy.modeling.models.ExpCutoffPowerLawNormSpectralModel.lambda_", false]], "lambda_ (gammapy.modeling.models.expcutoffpowerlawspectralmodel attribute)": [[217, "gammapy.modeling.models.ExpCutoffPowerLawSpectralModel.lambda_", false]], "large_scale_component (gammapy.catalog.sourcecataloghgps attribute)": [[65, "gammapy.catalog.SourceCatalogHGPS.large_scale_component", false]], "lat (gammapy.maps.mapcoord attribute)": [[189, "gammapy.maps.MapCoord.lat", false]], "lat_0 (gammapy.modeling.models.diskspatialmodel attribute)": [[212, "gammapy.modeling.models.DiskSpatialModel.lat_0", false]], "lat_0 (gammapy.modeling.models.gaussianspatialmodel attribute)": [[220, "gammapy.modeling.models.GaussianSpatialModel.lat_0", false]], "lat_0 (gammapy.modeling.models.generalizedgaussianspatialmodel attribute)": [[223, "gammapy.modeling.models.GeneralizedGaussianSpatialModel.lat_0", false]], "lat_0 (gammapy.modeling.models.pointspatialmodel attribute)": [[237, "gammapy.modeling.models.PointSpatialModel.lat_0", false]], "lat_0 (gammapy.modeling.models.shell2spatialmodel attribute)": [[245, "gammapy.modeling.models.Shell2SpatialModel.lat_0", false]], "lat_0 (gammapy.modeling.models.shellspatialmodel attribute)": [[246, "gammapy.modeling.models.ShellSpatialModel.lat_0", false]], "lat_0 (gammapy.modeling.models.templatespatialmodel attribute)": [[260, "gammapy.modeling.models.TemplateSpatialModel.lat_0", false]], "lazyfitsdata (class in gammapy.utils.fits)": [[299, "gammapy.utils.fits.LazyFitsData", false]], "lifetime_age_of_universe (gammapy.astro.darkmatter.darkmatterdecayspectralmodel attribute)": [[20, "gammapy.astro.darkmatter.DarkMatterDecaySpectralModel.LIFETIME_AGE_OF_UNIVERSE", false]], "lightcurve() (gammapy.catalog.sourcecatalogobject3fgl method)": [[71, "gammapy.catalog.SourceCatalogObject3FGL.lightcurve", false]], "lightcurve() (gammapy.catalog.sourcecatalogobject4fgl method)": [[74, "gammapy.catalog.SourceCatalogObject4FGL.lightcurve", false]], "lightcurveestimator (class in gammapy.estimators)": [[124, "gammapy.estimators.LightCurveEstimator", false]], "lightcurvetemplatetemporalmodel (class in gammapy.modeling.models)": [[225, "gammapy.modeling.models.LightCurveTemplateTemporalModel", false]], "linear (gammapy.astro.population.casebattacharya1998 attribute)": [[28, "gammapy.astro.population.CaseBattacharya1998.linear", false]], "linear (gammapy.astro.population.exponential attribute)": [[29, "gammapy.astro.population.Exponential.linear", false]], "linear (gammapy.astro.population.faucherkaspi2006 attribute)": [[30, "gammapy.astro.population.FaucherKaspi2006.linear", false]], "linear (gammapy.astro.population.faucherkaspi2006velocitybimodal attribute)": [[31, "gammapy.astro.population.FaucherKaspi2006VelocityBimodal.linear", false]], "linear (gammapy.astro.population.faucherkaspi2006velocitymaxwellian attribute)": [[32, "gammapy.astro.population.FaucherKaspi2006VelocityMaxwellian.linear", false]], "linear (gammapy.astro.population.lorimer2006 attribute)": [[35, "gammapy.astro.population.Lorimer2006.linear", false]], "linear (gammapy.astro.population.paczynski1990 attribute)": [[36, "gammapy.astro.population.Paczynski1990.linear", false]], "linear (gammapy.astro.population.paczynski1990velocity attribute)": [[37, "gammapy.astro.population.Paczynski1990Velocity.linear", false]], "linear (gammapy.astro.population.yusifovkucuk2004 attribute)": [[39, "gammapy.astro.population.YusifovKucuk2004.linear", false]], "linear (gammapy.astro.population.yusifovkucuk2004b attribute)": [[40, "gammapy.astro.population.YusifovKucuk2004B.linear", false]], "lineartemporalmodel (class in gammapy.modeling.models)": [[226, "gammapy.modeling.models.LinearTemporalModel", false]], "livetime_fraction (gammapy.data.observationfilter attribute)": [[85, "gammapy.data.ObservationFilter.livetime_fraction", false]], "load() (gammapy.utils.fits.hdulocation method)": [[298, "gammapy.utils.fits.HDULocation.load", false]], "load_irf_dict_from_file() (in module gammapy.irf)": [[157, "gammapy.irf.load_irf_dict_from_file", false]], "loc (gammapy.data.hduindextable attribute)": [[83, "gammapy.data.HDUIndexTable.loc", false]], "loc (gammapy.data.observationtable attribute)": [[86, "gammapy.data.ObservationTable.loc", false]], "loc_indices (gammapy.data.hduindextable attribute)": [[83, "gammapy.data.HDUIndexTable.loc_indices", false]], "loc_indices (gammapy.data.observationtable attribute)": [[86, "gammapy.data.ObservationTable.loc_indices", false]], "local_density (gammapy.astro.darkmatter.burkertprofile attribute)": [[17, "gammapy.astro.darkmatter.BurkertProfile.LOCAL_DENSITY", false]], "local_density (gammapy.astro.darkmatter.dmprofile attribute)": [[18, "gammapy.astro.darkmatter.DMProfile.LOCAL_DENSITY", false]], "local_density (gammapy.astro.darkmatter.einastoprofile attribute)": [[21, "gammapy.astro.darkmatter.EinastoProfile.LOCAL_DENSITY", false]], "local_density (gammapy.astro.darkmatter.isothermalprofile attribute)": [[22, "gammapy.astro.darkmatter.IsothermalProfile.LOCAL_DENSITY", false]], "local_density (gammapy.astro.darkmatter.mooreprofile attribute)": [[24, "gammapy.astro.darkmatter.MooreProfile.LOCAL_DENSITY", false]], "local_density (gammapy.astro.darkmatter.nfwprofile attribute)": [[25, "gammapy.astro.darkmatter.NFWProfile.LOCAL_DENSITY", false]], "local_density (gammapy.astro.darkmatter.zhaoprofile attribute)": [[27, "gammapy.astro.darkmatter.ZhaoProfile.LOCAL_DENSITY", false]], "local_to_global() (gammapy.maps.hpxgeom method)": [[182, "gammapy.maps.HpxGeom.local_to_global", false]], "location (gammapy.data.pointinginfo attribute)": [[89, "gammapy.data.PointingInfo.location", false]], "location_info() (gammapy.data.hduindextable method)": [[83, "gammapy.data.HDUIndexTable.location_info", false]], "logparabolanormspectralmodel (class in gammapy.modeling.models)": [[227, "gammapy.modeling.models.LogParabolaNormSpectralModel", false]], "logparabolaspectralmodel (class in gammapy.modeling.models)": [[228, "gammapy.modeling.models.LogParabolaSpectralModel", false]], "logspiral (class in gammapy.astro.population)": [[34, "gammapy.astro.population.LogSpiral", false]], "lon (gammapy.maps.mapcoord attribute)": [[189, "gammapy.maps.MapCoord.lon", false]], "lon_0 (gammapy.modeling.models.diskspatialmodel attribute)": [[212, "gammapy.modeling.models.DiskSpatialModel.lon_0", false]], "lon_0 (gammapy.modeling.models.gaussianspatialmodel attribute)": [[220, "gammapy.modeling.models.GaussianSpatialModel.lon_0", false]], "lon_0 (gammapy.modeling.models.generalizedgaussianspatialmodel attribute)": [[223, "gammapy.modeling.models.GeneralizedGaussianSpatialModel.lon_0", false]], "lon_0 (gammapy.modeling.models.pointspatialmodel attribute)": [[237, "gammapy.modeling.models.PointSpatialModel.lon_0", false]], "lon_0 (gammapy.modeling.models.shell2spatialmodel attribute)": [[245, "gammapy.modeling.models.Shell2SpatialModel.lon_0", false]], "lon_0 (gammapy.modeling.models.shellspatialmodel attribute)": [[246, "gammapy.modeling.models.ShellSpatialModel.lon_0", false]], "lon_0 (gammapy.modeling.models.templatespatialmodel attribute)": [[260, "gammapy.modeling.models.TemplateSpatialModel.lon_0", false]], "lorimer2006 (class in gammapy.astro.population)": [[35, "gammapy.astro.population.Lorimer2006", false]], "luminosity_spindown (gammapy.astro.source.simplepulsar attribute)": [[54, "gammapy.astro.source.SimplePulsar.luminosity_spindown", false]], "luminosity_spindown() (gammapy.astro.source.pulsar method)": [[51, "gammapy.astro.source.Pulsar.luminosity_spindown", false]], "luminosity_tev() (gammapy.astro.source.snr method)": [[52, "gammapy.astro.source.SNR.luminosity_tev", false]], "luminosity_tev() (gammapy.astro.source.snrtruelovemckee method)": [[53, "gammapy.astro.source.SNRTrueloveMcKee.luminosity_tev", false]], "m (gammapy.astro.population.valleespiral attribute)": [[38, "gammapy.astro.population.ValleeSpiral.m", false]], "magnetic_field (gammapy.astro.source.simplepulsar attribute)": [[54, "gammapy.astro.source.SimplePulsar.magnetic_field", false]], "magnetic_field() (gammapy.astro.source.pulsar method)": [[51, "gammapy.astro.source.Pulsar.magnetic_field", false]], "magnetic_field() (gammapy.astro.source.pwn method)": [[50, "gammapy.astro.source.PWN.magnetic_field", false]], "make_background() (gammapy.makers.mapdatasetmaker method)": [[163, "gammapy.makers.MapDatasetMaker.make_background", false]], "make_background() (gammapy.makers.spectrumdatasetmaker method)": [[170, "gammapy.makers.SpectrumDatasetMaker.make_background", false]], "make_background_fit() (gammapy.makers.fovbackgroundmaker method)": [[160, "gammapy.makers.FoVBackgroundMaker.make_background_fit", false]], "make_background_scale() (gammapy.makers.fovbackgroundmaker method)": [[160, "gammapy.makers.FoVBackgroundMaker.make_background_scale", false]], "make_base_catalog_galactic() (in module gammapy.astro.population)": [[45, "gammapy.astro.population.make_base_catalog_galactic", false]], "make_catalog_random_positions_cube() (in module gammapy.astro.population)": [[46, "gammapy.astro.population.make_catalog_random_positions_cube", false]], "make_catalog_random_positions_sphere() (in module gammapy.astro.population)": [[47, "gammapy.astro.population.make_catalog_random_positions_sphere", false]], "make_concentric_annulus_sky_regions() (in module gammapy.utils.regions)": [[322, "gammapy.utils.regions.make_concentric_annulus_sky_regions", false]], "make_counts() (gammapy.makers.mapdatasetmaker static method)": [[163, "gammapy.makers.MapDatasetMaker.make_counts", false]], "make_counts() (gammapy.makers.phasebackgroundmaker method)": [[164, "gammapy.makers.PhaseBackgroundMaker.make_counts", false]], "make_counts() (gammapy.makers.spectrumdatasetmaker static method)": [[170, "gammapy.makers.SpectrumDatasetMaker.make_counts", false]], "make_counts_off() (gammapy.makers.phasebackgroundmaker method)": [[164, "gammapy.makers.PhaseBackgroundMaker.make_counts_off", false]], "make_counts_off() (gammapy.makers.reflectedregionsbackgroundmaker method)": [[165, "gammapy.makers.ReflectedRegionsBackgroundMaker.make_counts_off", false]], "make_counts_rad_max() (in module gammapy.makers.utils)": [[172, "gammapy.makers.utils.make_counts_rad_max", false]], "make_cubes() (gammapy.makers.adaptiveringbackgroundmaker method)": [[158, "gammapy.makers.AdaptiveRingBackgroundMaker.make_cubes", false]], "make_dataset() (gammapy.makers.datasetsmaker method)": [[159, "gammapy.makers.DatasetsMaker.make_dataset", false]], "make_default_fov_background_model() (gammapy.makers.fovbackgroundmaker method)": [[160, "gammapy.makers.FoVBackgroundMaker.make_default_fov_background_model", false]], "make_edisp() (gammapy.makers.mapdatasetmaker method)": [[163, "gammapy.makers.MapDatasetMaker.make_edisp", false]], "make_edisp() (gammapy.makers.spectrumdatasetmaker method)": [[170, "gammapy.makers.SpectrumDatasetMaker.make_edisp", false]], "make_edisp_kernel() (gammapy.makers.mapdatasetmaker method)": [[163, "gammapy.makers.MapDatasetMaker.make_edisp_kernel", false]], "make_edisp_kernel() (gammapy.makers.spectrumdatasetmaker method)": [[170, "gammapy.makers.SpectrumDatasetMaker.make_edisp_kernel", false]], "make_edisp_kernel_map() (in module gammapy.makers.utils)": [[173, "gammapy.makers.utils.make_edisp_kernel_map", false]], "make_edisp_map() (in module gammapy.makers.utils)": [[174, "gammapy.makers.utils.make_edisp_map", false]], "make_effective_livetime_map() (in module gammapy.makers.utils)": [[175, "gammapy.makers.utils.make_effective_livetime_map", false]], "make_exclusion_mask() (gammapy.makers.fovbackgroundmaker method)": [[160, "gammapy.makers.FoVBackgroundMaker.make_exclusion_mask", false]], "make_exposure() (gammapy.makers.mapdatasetmaker static method)": [[163, "gammapy.makers.MapDatasetMaker.make_exposure", false]], "make_exposure() (gammapy.makers.spectrumdatasetmaker method)": [[170, "gammapy.makers.SpectrumDatasetMaker.make_exposure", false]], "make_exposure_irf() (gammapy.makers.mapdatasetmaker static method)": [[163, "gammapy.makers.MapDatasetMaker.make_exposure_irf", false]], "make_exposure_irf() (gammapy.makers.spectrumdatasetmaker static method)": [[170, "gammapy.makers.SpectrumDatasetMaker.make_exposure_irf", false]], "make_map_background_irf() (in module gammapy.makers.utils)": [[176, "gammapy.makers.utils.make_map_background_irf", false]], "make_map_exposure_true_energy() (in module gammapy.makers.utils)": [[177, "gammapy.makers.utils.make_map_exposure_true_energy", false]], "make_maps_off() (gammapy.makers.ringbackgroundmaker method)": [[168, "gammapy.makers.RingBackgroundMaker.make_maps_off", false]], "make_mask_bkg_invalid() (gammapy.makers.safemaskmaker static method)": [[169, "gammapy.makers.SafeMaskMaker.make_mask_bkg_invalid", false]], "make_mask_energy_aeff_default() (gammapy.makers.safemaskmaker static method)": [[169, "gammapy.makers.SafeMaskMaker.make_mask_energy_aeff_default", false]], "make_mask_energy_aeff_max() (gammapy.makers.safemaskmaker method)": [[169, "gammapy.makers.SafeMaskMaker.make_mask_energy_aeff_max", false]], "make_mask_energy_bkg_peak() (gammapy.makers.safemaskmaker method)": [[169, "gammapy.makers.SafeMaskMaker.make_mask_energy_bkg_peak", false]], "make_mask_energy_edisp_bias() (gammapy.makers.safemaskmaker method)": [[169, "gammapy.makers.SafeMaskMaker.make_mask_energy_edisp_bias", false]], "make_mask_offset_max() (gammapy.makers.safemaskmaker method)": [[169, "gammapy.makers.SafeMaskMaker.make_mask_offset_max", false]], "make_meta_table() (gammapy.makers.mapdatasetmaker static method)": [[163, "gammapy.makers.MapDatasetMaker.make_meta_table", false]], "make_meta_table() (gammapy.makers.spectrumdatasetmaker static method)": [[170, "gammapy.makers.SpectrumDatasetMaker.make_meta_table", false]], "make_observation_time_map() (in module gammapy.makers.utils)": [[178, "gammapy.makers.utils.make_observation_time_map", false]], "make_orthogonal_rectangle_sky_regions() (in module gammapy.utils.regions)": [[323, "gammapy.utils.regions.make_orthogonal_rectangle_sky_regions", false]], "make_path() (in module gammapy.utils.scripts)": [[327, "gammapy.utils.scripts.make_path", false]], "make_psf() (gammapy.makers.mapdatasetmaker method)": [[163, "gammapy.makers.MapDatasetMaker.make_psf", false]], "make_psf() (gammapy.makers.spectrumdatasetmaker method)": [[170, "gammapy.makers.SpectrumDatasetMaker.make_psf", false]], "make_psf_map() (in module gammapy.makers.utils)": [[179, "gammapy.makers.utils.make_psf_map", false]], "make_theta_squared_table() (in module gammapy.makers.utils)": [[180, "gammapy.makers.utils.make_theta_squared_table", false]], "maker": [[554, "term-Maker", true]], "maker (class in gammapy.makers)": [[162, "gammapy.makers.Maker", false]], "maker_registry (in module gammapy.makers)": [[161, "gammapy.makers.MAKER_REGISTRY", false]], "map (class in gammapy.maps)": [[186, "gammapy.maps.Map", false]], "map (gammapy.astro.darkmatter.primaryflux attribute)": [[26, "gammapy.astro.darkmatter.PrimaryFlux.map", false]], "map (gammapy.modeling.models.templatendspatialmodel attribute)": [[256, "gammapy.modeling.models.TemplateNDSpatialModel.map", false]], "map (gammapy.modeling.models.templatendspectralmodel attribute)": [[257, "gammapy.modeling.models.TemplateNDSpectralModel.map", false]], "map (gammapy.modeling.models.templatenpredmodel attribute)": [[258, "gammapy.modeling.models.TemplateNPredModel.map", false]], "map (gammapy.modeling.models.templatespatialmodel attribute)": [[260, "gammapy.modeling.models.TemplateSpatialModel.map", false]], "map_center (gammapy.modeling.models.templatespatialmodel attribute)": [[260, "gammapy.modeling.models.TemplateSpatialModel.map_center", false]], "map_coord() (gammapy.data.eventlist method)": [[79, "gammapy.data.EventList.map_coord", false]], "mapaxes (class in gammapy.maps)": [[187, "gammapy.maps.MapAxes", false]], "mapaxis (class in gammapy.maps)": [[188, "gammapy.maps.MapAxis", false]], "mapcoord (class in gammapy.maps)": [[189, "gammapy.maps.MapCoord", false]], "mapdataset (class in gammapy.datasets)": [[97, "gammapy.datasets.MapDataset", false]], "mapdataseteventsampler (class in gammapy.datasets)": [[98, "gammapy.datasets.MapDatasetEventSampler", false]], "mapdatasetmaker (class in gammapy.makers)": [[163, "gammapy.makers.MapDatasetMaker", false]], "mapdatasetmetadata (class in gammapy.datasets)": [[99, "gammapy.datasets.MapDatasetMetaData", false]], "mapdatasetonoff (class in gammapy.datasets)": [[100, "gammapy.datasets.MapDatasetOnOff", false]], "mappanelplotter (class in gammapy.visualization)": [[348, "gammapy.visualization.MapPanelPlotter", false]], "maps (class in gammapy.maps)": [[190, "gammapy.maps.Maps", false]], "mask (gammapy.data.hduindextable attribute)": [[83, "gammapy.data.HDUIndexTable.mask", false]], "mask (gammapy.data.observationtable attribute)": [[86, "gammapy.data.ObservationTable.mask", false]], "mask (gammapy.datasets.dataset attribute)": [[94, "gammapy.datasets.Dataset.mask", false]], "mask (gammapy.datasets.fluxpointsdataset attribute)": [[96, "gammapy.datasets.FluxPointsDataset.mask", false]], "mask (gammapy.datasets.mapdataset attribute)": [[97, "gammapy.datasets.MapDataset.mask", false]], "mask (gammapy.datasets.mapdatasetonoff attribute)": [[100, "gammapy.datasets.MapDatasetOnOff.mask", false]], "mask (gammapy.datasets.spectrumdataset attribute)": [[104, "gammapy.datasets.SpectrumDataset.mask", false]], "mask (gammapy.datasets.spectrumdatasetonoff attribute)": [[105, "gammapy.datasets.SpectrumDatasetOnOff.mask", false]], "mask_contains_region() (gammapy.maps.wcsndmap method)": [[196, "gammapy.maps.WcsNDMap.mask_contains_region", false]], "mask_fit (gammapy.datasets.mapdataset attribute)": [[97, "gammapy.datasets.MapDataset.mask_fit", false]], "mask_fit (gammapy.datasets.mapdatasetonoff attribute)": [[100, "gammapy.datasets.MapDatasetOnOff.mask_fit", false]], "mask_fit (gammapy.datasets.spectrumdataset attribute)": [[104, "gammapy.datasets.SpectrumDataset.mask_fit", false]], "mask_fit (gammapy.datasets.spectrumdatasetonoff attribute)": [[105, "gammapy.datasets.SpectrumDatasetOnOff.mask_fit", false]], "mask_fit_image (gammapy.datasets.mapdataset attribute)": [[97, "gammapy.datasets.MapDataset.mask_fit_image", false]], "mask_fit_image (gammapy.datasets.mapdatasetonoff attribute)": [[100, "gammapy.datasets.MapDatasetOnOff.mask_fit_image", false]], "mask_fit_image (gammapy.datasets.spectrumdataset attribute)": [[104, "gammapy.datasets.SpectrumDataset.mask_fit_image", false]], "mask_fit_image (gammapy.datasets.spectrumdatasetonoff attribute)": [[105, "gammapy.datasets.SpectrumDatasetOnOff.mask_fit_image", false]], "mask_image (gammapy.datasets.mapdataset attribute)": [[97, "gammapy.datasets.MapDataset.mask_image", false]], "mask_image (gammapy.datasets.mapdatasetonoff attribute)": [[100, "gammapy.datasets.MapDatasetOnOff.mask_image", false]], "mask_image (gammapy.datasets.spectrumdataset attribute)": [[104, "gammapy.datasets.SpectrumDataset.mask_image", false]], "mask_image (gammapy.datasets.spectrumdatasetonoff attribute)": [[105, "gammapy.datasets.SpectrumDatasetOnOff.mask_image", false]], "mask_nearest_position() (gammapy.maps.hpxmap method)": [[183, "gammapy.maps.HpxMap.mask_nearest_position", false]], "mask_nearest_position() (gammapy.maps.hpxndmap method)": [[184, "gammapy.maps.HpxNDMap.mask_nearest_position", false]], "mask_nearest_position() (gammapy.maps.map method)": [[186, "gammapy.maps.Map.mask_nearest_position", false]], "mask_nearest_position() (gammapy.maps.regionndmap method)": [[192, "gammapy.maps.RegionNDMap.mask_nearest_position", false]], "mask_nearest_position() (gammapy.maps.wcsmap method)": [[195, "gammapy.maps.WcsMap.mask_nearest_position", false]], "mask_nearest_position() (gammapy.maps.wcsndmap method)": [[196, "gammapy.maps.WcsNDMap.mask_nearest_position", false]], "mask_safe (gammapy.datasets.mapdataset attribute)": [[97, "gammapy.datasets.MapDataset.mask_safe", false]], "mask_safe (gammapy.datasets.mapdatasetonoff attribute)": [[100, "gammapy.datasets.MapDatasetOnOff.mask_safe", false]], "mask_safe (gammapy.datasets.spectrumdataset attribute)": [[104, "gammapy.datasets.SpectrumDataset.mask_safe", false]], "mask_safe (gammapy.datasets.spectrumdatasetonoff attribute)": [[105, "gammapy.datasets.SpectrumDatasetOnOff.mask_safe", false]], "mask_safe_edisp (gammapy.datasets.mapdataset attribute)": [[97, "gammapy.datasets.MapDataset.mask_safe_edisp", false]], "mask_safe_edisp (gammapy.datasets.mapdatasetonoff attribute)": [[100, "gammapy.datasets.MapDatasetOnOff.mask_safe_edisp", false]], "mask_safe_edisp (gammapy.datasets.spectrumdataset attribute)": [[104, "gammapy.datasets.SpectrumDataset.mask_safe_edisp", false]], "mask_safe_edisp (gammapy.datasets.spectrumdatasetonoff attribute)": [[105, "gammapy.datasets.SpectrumDatasetOnOff.mask_safe_edisp", false]], "mask_safe_image (gammapy.datasets.mapdataset attribute)": [[97, "gammapy.datasets.MapDataset.mask_safe_image", false]], "mask_safe_image (gammapy.datasets.mapdatasetonoff attribute)": [[100, "gammapy.datasets.MapDatasetOnOff.mask_safe_image", false]], "mask_safe_image (gammapy.datasets.spectrumdataset attribute)": [[104, "gammapy.datasets.SpectrumDataset.mask_safe_image", false]], "mask_safe_image (gammapy.datasets.spectrumdatasetonoff attribute)": [[105, "gammapy.datasets.SpectrumDatasetOnOff.mask_safe_image", false]], "mask_safe_image (gammapy.irf.edispkernelmap attribute)": [[141, "gammapy.irf.EDispKernelMap.mask_safe_image", false]], "mask_safe_image (gammapy.irf.edispmap attribute)": [[142, "gammapy.irf.EDispMap.mask_safe_image", false]], "mask_safe_image (gammapy.irf.irfmap attribute)": [[148, "gammapy.irf.IRFMap.mask_safe_image", false]], "mask_safe_image (gammapy.irf.psfmap attribute)": [[153, "gammapy.irf.PSFMap.mask_safe_image", false]], "mask_safe_image (gammapy.irf.recopsfmap attribute)": [[156, "gammapy.irf.RecoPSFMap.mask_safe_image", false]], "mask_safe_psf (gammapy.datasets.mapdataset attribute)": [[97, "gammapy.datasets.MapDataset.mask_safe_psf", false]], "mask_safe_psf (gammapy.datasets.mapdatasetonoff attribute)": [[100, "gammapy.datasets.MapDatasetOnOff.mask_safe_psf", false]], "mask_safe_psf (gammapy.datasets.spectrumdataset attribute)": [[104, "gammapy.datasets.SpectrumDataset.mask_safe_psf", false]], "mask_safe_psf (gammapy.datasets.spectrumdatasetonoff attribute)": [[105, "gammapy.datasets.SpectrumDatasetOnOff.mask_safe_psf", false]], "masked (gammapy.data.hduindextable attribute)": [[83, "gammapy.data.HDUIndexTable.masked", false]], "masked (gammapy.data.observationtable attribute)": [[86, "gammapy.data.ObservationTable.masked", false]], "match_by_name (gammapy.maps.mapcoord attribute)": [[189, "gammapy.maps.MapCoord.match_by_name", false]], "max (gammapy.modeling.parameter attribute)": [[201, "gammapy.modeling.Parameter.max", false]], "max (gammapy.modeling.parameters attribute)": [[202, "gammapy.modeling.Parameters.max", false]], "max (gammapy.modeling.priorparameter attribute)": [[203, "gammapy.modeling.PriorParameter.max", false]], "max (gammapy.modeling.priorparameters attribute)": [[204, "gammapy.modeling.PriorParameters.max", false]], "mdm (gammapy.astro.darkmatter.primaryflux attribute)": [[26, "gammapy.astro.darkmatter.PrimaryFlux.mDM", false]], "mean (gammapy.modeling.models.gaussianspectralmodel attribute)": [[221, "gammapy.modeling.models.GaussianSpectralModel.mean", false]], "met": [[554, "term-MET", true]], "met_start (gammapy.data.gti attribute)": [[82, "gammapy.data.GTI.met_start", false]], "met_stop (gammapy.data.gti attribute)": [[82, "gammapy.data.GTI.met_stop", false]], "meta (gammapy.astro.population.casebattacharya1998 attribute)": [[28, "gammapy.astro.population.CaseBattacharya1998.meta", false]], "meta (gammapy.astro.population.exponential attribute)": [[29, "gammapy.astro.population.Exponential.meta", false]], "meta (gammapy.astro.population.faucherkaspi2006 attribute)": [[30, "gammapy.astro.population.FaucherKaspi2006.meta", false]], "meta (gammapy.astro.population.faucherkaspi2006velocitybimodal attribute)": [[31, "gammapy.astro.population.FaucherKaspi2006VelocityBimodal.meta", false]], "meta (gammapy.astro.population.faucherkaspi2006velocitymaxwellian attribute)": [[32, "gammapy.astro.population.FaucherKaspi2006VelocityMaxwellian.meta", false]], "meta (gammapy.astro.population.lorimer2006 attribute)": [[35, "gammapy.astro.population.Lorimer2006.meta", false]], "meta (gammapy.astro.population.paczynski1990 attribute)": [[36, "gammapy.astro.population.Paczynski1990.meta", false]], "meta (gammapy.astro.population.paczynski1990velocity attribute)": [[37, "gammapy.astro.population.Paczynski1990Velocity.meta", false]], "meta (gammapy.astro.population.yusifovkucuk2004 attribute)": [[39, "gammapy.astro.population.YusifovKucuk2004.meta", false]], "meta (gammapy.astro.population.yusifovkucuk2004b attribute)": [[40, "gammapy.astro.population.YusifovKucuk2004B.meta", false]], "meta (gammapy.data.hduindextable attribute)": [[83, "gammapy.data.HDUIndexTable.meta", false]], "meta (gammapy.data.observation attribute)": [[84, "gammapy.data.Observation.meta", false]], "meta (gammapy.data.observationtable attribute)": [[86, "gammapy.data.ObservationTable.meta", false]], "meta (gammapy.datasets.mapdataset attribute)": [[97, "gammapy.datasets.MapDataset.meta", false]], "meta (gammapy.datasets.mapdatasetonoff attribute)": [[100, "gammapy.datasets.MapDatasetOnOff.meta", false]], "meta (gammapy.datasets.spectrumdataset attribute)": [[104, "gammapy.datasets.SpectrumDataset.meta", false]], "meta (gammapy.datasets.spectrumdatasetonoff attribute)": [[105, "gammapy.datasets.SpectrumDatasetOnOff.meta", false]], "meta (gammapy.maps.hpxmap attribute)": [[183, "gammapy.maps.HpxMap.meta", false]], "meta (gammapy.maps.hpxndmap attribute)": [[184, "gammapy.maps.HpxNDMap.meta", false]], "meta (gammapy.maps.map attribute)": [[186, "gammapy.maps.Map.meta", false]], "meta (gammapy.maps.regionndmap attribute)": [[192, "gammapy.maps.RegionNDMap.meta", false]], "meta (gammapy.maps.wcsmap attribute)": [[195, "gammapy.maps.WcsMap.meta", false]], "meta (gammapy.maps.wcsndmap attribute)": [[196, "gammapy.maps.WcsNDMap.meta", false]], "meta_table (gammapy.datasets.datasets attribute)": [[95, "gammapy.datasets.Datasets.meta_table", false]], "meta_table (gammapy.datasets.mapdataset attribute)": [[97, "gammapy.datasets.MapDataset.meta_table", false]], "meta_table (gammapy.datasets.mapdatasetonoff attribute)": [[100, "gammapy.datasets.MapDatasetOnOff.meta_table", false]], "meta_table (gammapy.datasets.spectrumdataset attribute)": [[104, "gammapy.datasets.SpectrumDataset.meta_table", false]], "meta_table (gammapy.datasets.spectrumdatasetonoff attribute)": [[105, "gammapy.datasets.SpectrumDatasetOnOff.meta_table", false]], "method (gammapy.makers.fovbackgroundmaker attribute)": [[160, "gammapy.makers.FoVBackgroundMaker.method", false]], "method_default (in module gammapy.utils.parallel)": [[306, "gammapy.utils.parallel.METHOD_DEFAULT", false]], "method_kwargs_default (in module gammapy.utils.parallel)": [[307, "gammapy.utils.parallel.METHOD_KWARGS_DEFAULT", false]], "meyercrabspectralmodel (class in gammapy.modeling.models)": [[230, "gammapy.modeling.models.MeyerCrabSpectralModel", false]], "min (gammapy.modeling.parameter attribute)": [[201, "gammapy.modeling.Parameter.min", false]], "min (gammapy.modeling.parameters attribute)": [[202, "gammapy.modeling.Parameters.min", false]], "min (gammapy.modeling.priorparameter attribute)": [[203, "gammapy.modeling.PriorParameter.min", false]], "min (gammapy.modeling.priorparameters attribute)": [[204, "gammapy.modeling.PriorParameters.min", false]], "mode (gammapy.data.fixedpointinginfo attribute)": [[81, "gammapy.data.FixedPointingInfo.mode", false]], "model (class in gammapy.modeling.models)": [[231, "gammapy.modeling.models.Model", false]], "model_computed_fields (gammapy.analysis.analysisconfig attribute)": [[16, "gammapy.analysis.AnalysisConfig.model_computed_fields", false]], "model_computed_fields (gammapy.data.eventlistmetadata attribute)": [[80, "gammapy.data.EventListMetaData.model_computed_fields", false]], "model_computed_fields (gammapy.datasets.mapdatasetmetadata attribute)": [[99, "gammapy.datasets.MapDatasetMetaData.model_computed_fields", false]], "model_computed_fields (gammapy.estimators.fluxmetadata attribute)": [[118, "gammapy.estimators.FluxMetaData.model_computed_fields", false]], "model_config (gammapy.analysis.analysisconfig attribute)": [[16, "gammapy.analysis.AnalysisConfig.model_config", false]], "model_config (gammapy.data.eventlistmetadata attribute)": [[80, "gammapy.data.EventListMetaData.model_config", false]], "model_config (gammapy.datasets.mapdatasetmetadata attribute)": [[99, "gammapy.datasets.MapDatasetMetaData.model_config", false]], "model_config (gammapy.estimators.fluxmetadata attribute)": [[118, "gammapy.estimators.FluxMetaData.model_config", false]], "model_constraints (gammapy.astro.population.casebattacharya1998 attribute)": [[28, "gammapy.astro.population.CaseBattacharya1998.model_constraints", false]], "model_constraints (gammapy.astro.population.exponential attribute)": [[29, "gammapy.astro.population.Exponential.model_constraints", false]], "model_constraints (gammapy.astro.population.faucherkaspi2006 attribute)": [[30, "gammapy.astro.population.FaucherKaspi2006.model_constraints", false]], "model_constraints (gammapy.astro.population.faucherkaspi2006velocitybimodal attribute)": [[31, "gammapy.astro.population.FaucherKaspi2006VelocityBimodal.model_constraints", false]], "model_constraints (gammapy.astro.population.faucherkaspi2006velocitymaxwellian attribute)": [[32, "gammapy.astro.population.FaucherKaspi2006VelocityMaxwellian.model_constraints", false]], "model_constraints (gammapy.astro.population.lorimer2006 attribute)": [[35, "gammapy.astro.population.Lorimer2006.model_constraints", false]], "model_constraints (gammapy.astro.population.paczynski1990 attribute)": [[36, "gammapy.astro.population.Paczynski1990.model_constraints", false]], "model_constraints (gammapy.astro.population.paczynski1990velocity attribute)": [[37, "gammapy.astro.population.Paczynski1990Velocity.model_constraints", false]], "model_constraints (gammapy.astro.population.yusifovkucuk2004 attribute)": [[39, "gammapy.astro.population.YusifovKucuk2004.model_constraints", false]], "model_constraints (gammapy.astro.population.yusifovkucuk2004b attribute)": [[40, "gammapy.astro.population.YusifovKucuk2004B.model_constraints", false]], "model_construct() (gammapy.analysis.analysisconfig class method)": [[16, "gammapy.analysis.AnalysisConfig.model_construct", false]], "model_construct() (gammapy.data.eventlistmetadata class method)": [[80, "gammapy.data.EventListMetaData.model_construct", false]], "model_construct() (gammapy.datasets.mapdatasetmetadata class method)": [[99, "gammapy.datasets.MapDatasetMetaData.model_construct", false]], "model_construct() (gammapy.estimators.fluxmetadata class method)": [[118, "gammapy.estimators.FluxMetaData.model_construct", false]], "model_copy() (gammapy.analysis.analysisconfig method)": [[16, "gammapy.analysis.AnalysisConfig.model_copy", false]], "model_copy() (gammapy.data.eventlistmetadata method)": [[80, "gammapy.data.EventListMetaData.model_copy", false]], "model_copy() (gammapy.datasets.mapdatasetmetadata method)": [[99, "gammapy.datasets.MapDatasetMetaData.model_copy", false]], "model_copy() (gammapy.estimators.fluxmetadata method)": [[118, "gammapy.estimators.FluxMetaData.model_copy", false]], "model_dump() (gammapy.analysis.analysisconfig method)": [[16, "gammapy.analysis.AnalysisConfig.model_dump", false]], "model_dump() (gammapy.data.eventlistmetadata method)": [[80, "gammapy.data.EventListMetaData.model_dump", false]], "model_dump() (gammapy.datasets.mapdatasetmetadata method)": [[99, "gammapy.datasets.MapDatasetMetaData.model_dump", false]], "model_dump() (gammapy.estimators.fluxmetadata method)": [[118, "gammapy.estimators.FluxMetaData.model_dump", false]], "model_dump_json() (gammapy.analysis.analysisconfig method)": [[16, "gammapy.analysis.AnalysisConfig.model_dump_json", false]], "model_dump_json() (gammapy.data.eventlistmetadata method)": [[80, "gammapy.data.EventListMetaData.model_dump_json", false]], "model_dump_json() (gammapy.datasets.mapdatasetmetadata method)": [[99, "gammapy.datasets.MapDatasetMetaData.model_dump_json", false]], "model_dump_json() (gammapy.estimators.fluxmetadata method)": [[118, "gammapy.estimators.FluxMetaData.model_dump_json", false]], "model_extra (gammapy.analysis.analysisconfig attribute)": [[16, "gammapy.analysis.AnalysisConfig.model_extra", false]], "model_extra (gammapy.data.eventlistmetadata attribute)": [[80, "gammapy.data.EventListMetaData.model_extra", false]], "model_extra (gammapy.datasets.mapdatasetmetadata attribute)": [[99, "gammapy.datasets.MapDatasetMetaData.model_extra", false]], "model_extra (gammapy.estimators.fluxmetadata attribute)": [[118, "gammapy.estimators.FluxMetaData.model_extra", false]], "model_fields (gammapy.analysis.analysisconfig attribute)": [[16, "gammapy.analysis.AnalysisConfig.model_fields", false]], "model_fields (gammapy.data.eventlistmetadata attribute)": [[80, "gammapy.data.EventListMetaData.model_fields", false]], "model_fields (gammapy.datasets.mapdatasetmetadata attribute)": [[99, "gammapy.datasets.MapDatasetMetaData.model_fields", false]], "model_fields (gammapy.estimators.fluxmetadata attribute)": [[118, "gammapy.estimators.FluxMetaData.model_fields", false]], "model_fields_set (gammapy.analysis.analysisconfig attribute)": [[16, "gammapy.analysis.AnalysisConfig.model_fields_set", false]], "model_fields_set (gammapy.data.eventlistmetadata attribute)": [[80, "gammapy.data.EventListMetaData.model_fields_set", false]], "model_fields_set (gammapy.datasets.mapdatasetmetadata attribute)": [[99, "gammapy.datasets.MapDatasetMetaData.model_fields_set", false]], "model_fields_set (gammapy.estimators.fluxmetadata attribute)": [[118, "gammapy.estimators.FluxMetaData.model_fields_set", false]], "model_json_schema() (gammapy.analysis.analysisconfig class method)": [[16, "gammapy.analysis.AnalysisConfig.model_json_schema", false]], "model_json_schema() (gammapy.data.eventlistmetadata class method)": [[80, "gammapy.data.EventListMetaData.model_json_schema", false]], "model_json_schema() (gammapy.datasets.mapdatasetmetadata class method)": [[99, "gammapy.datasets.MapDatasetMetaData.model_json_schema", false]], "model_json_schema() (gammapy.estimators.fluxmetadata class method)": [[118, "gammapy.estimators.FluxMetaData.model_json_schema", false]], "model_parametrized_name() (gammapy.analysis.analysisconfig class method)": [[16, "gammapy.analysis.AnalysisConfig.model_parametrized_name", false]], "model_parametrized_name() (gammapy.data.eventlistmetadata class method)": [[80, "gammapy.data.EventListMetaData.model_parametrized_name", false]], "model_parametrized_name() (gammapy.datasets.mapdatasetmetadata class method)": [[99, "gammapy.datasets.MapDatasetMetaData.model_parametrized_name", false]], "model_parametrized_name() (gammapy.estimators.fluxmetadata class method)": [[118, "gammapy.estimators.FluxMetaData.model_parametrized_name", false]], "model_post_init() (gammapy.analysis.analysisconfig method)": [[16, "gammapy.analysis.AnalysisConfig.model_post_init", false]], "model_post_init() (gammapy.data.eventlistmetadata method)": [[80, "gammapy.data.EventListMetaData.model_post_init", false]], "model_post_init() (gammapy.datasets.mapdatasetmetadata method)": [[99, "gammapy.datasets.MapDatasetMetaData.model_post_init", false]], "model_post_init() (gammapy.estimators.fluxmetadata method)": [[118, "gammapy.estimators.FluxMetaData.model_post_init", false]], "model_rebuild() (gammapy.analysis.analysisconfig class method)": [[16, "gammapy.analysis.AnalysisConfig.model_rebuild", false]], "model_rebuild() (gammapy.data.eventlistmetadata class method)": [[80, "gammapy.data.EventListMetaData.model_rebuild", false]], "model_rebuild() (gammapy.datasets.mapdatasetmetadata class method)": [[99, "gammapy.datasets.MapDatasetMetaData.model_rebuild", false]], "model_rebuild() (gammapy.estimators.fluxmetadata class method)": [[118, "gammapy.estimators.FluxMetaData.model_rebuild", false]], "model_registry (in module gammapy.modeling.models)": [[229, "gammapy.modeling.models.MODEL_REGISTRY", false]], "model_set_axis (gammapy.astro.population.casebattacharya1998 attribute)": [[28, "gammapy.astro.population.CaseBattacharya1998.model_set_axis", false]], "model_set_axis (gammapy.astro.population.exponential attribute)": [[29, "gammapy.astro.population.Exponential.model_set_axis", false]], "model_set_axis (gammapy.astro.population.faucherkaspi2006 attribute)": [[30, "gammapy.astro.population.FaucherKaspi2006.model_set_axis", false]], "model_set_axis (gammapy.astro.population.faucherkaspi2006velocitybimodal attribute)": [[31, "gammapy.astro.population.FaucherKaspi2006VelocityBimodal.model_set_axis", false]], "model_set_axis (gammapy.astro.population.faucherkaspi2006velocitymaxwellian attribute)": [[32, "gammapy.astro.population.FaucherKaspi2006VelocityMaxwellian.model_set_axis", false]], "model_set_axis (gammapy.astro.population.lorimer2006 attribute)": [[35, "gammapy.astro.population.Lorimer2006.model_set_axis", false]], "model_set_axis (gammapy.astro.population.paczynski1990 attribute)": [[36, "gammapy.astro.population.Paczynski1990.model_set_axis", false]], "model_set_axis (gammapy.astro.population.paczynski1990velocity attribute)": [[37, "gammapy.astro.population.Paczynski1990Velocity.model_set_axis", false]], "model_set_axis (gammapy.astro.population.yusifovkucuk2004 attribute)": [[39, "gammapy.astro.population.YusifovKucuk2004.model_set_axis", false]], "model_set_axis (gammapy.astro.population.yusifovkucuk2004b attribute)": [[40, "gammapy.astro.population.YusifovKucuk2004B.model_set_axis", false]], "model_validate() (gammapy.analysis.analysisconfig class method)": [[16, "gammapy.analysis.AnalysisConfig.model_validate", false]], "model_validate() (gammapy.data.eventlistmetadata class method)": [[80, "gammapy.data.EventListMetaData.model_validate", false]], "model_validate() (gammapy.datasets.mapdatasetmetadata class method)": [[99, "gammapy.datasets.MapDatasetMetaData.model_validate", false]], "model_validate() (gammapy.estimators.fluxmetadata class method)": [[118, "gammapy.estimators.FluxMetaData.model_validate", false]], "model_validate_json() (gammapy.analysis.analysisconfig class method)": [[16, "gammapy.analysis.AnalysisConfig.model_validate_json", false]], "model_validate_json() (gammapy.data.eventlistmetadata class method)": [[80, "gammapy.data.EventListMetaData.model_validate_json", false]], "model_validate_json() (gammapy.datasets.mapdatasetmetadata class method)": [[99, "gammapy.datasets.MapDatasetMetaData.model_validate_json", false]], "model_validate_json() (gammapy.estimators.fluxmetadata class method)": [[118, "gammapy.estimators.FluxMetaData.model_validate_json", false]], "model_validate_strings() (gammapy.analysis.analysisconfig class method)": [[16, "gammapy.analysis.AnalysisConfig.model_validate_strings", false]], "model_validate_strings() (gammapy.data.eventlistmetadata class method)": [[80, "gammapy.data.EventListMetaData.model_validate_strings", false]], "model_validate_strings() (gammapy.datasets.mapdatasetmetadata class method)": [[99, "gammapy.datasets.MapDatasetMetaData.model_validate_strings", false]], "model_validate_strings() (gammapy.estimators.fluxmetadata class method)": [[118, "gammapy.estimators.FluxMetaData.model_validate_strings", false]], "modelbase (class in gammapy.modeling.models)": [[232, "gammapy.modeling.models.ModelBase", false]], "models (class in gammapy.modeling.models)": [[233, "gammapy.modeling.models.Models", false]], "models (gammapy.analysis.analysis attribute)": [[15, "gammapy.analysis.Analysis.models", false]], "models (gammapy.datasets.datasets attribute)": [[95, "gammapy.datasets.Datasets.models", false]], "models (gammapy.datasets.fluxpointsdataset attribute)": [[96, "gammapy.datasets.FluxPointsDataset.models", false]], "models (gammapy.datasets.mapdataset attribute)": [[97, "gammapy.datasets.MapDataset.models", false]], "models (gammapy.datasets.mapdatasetonoff attribute)": [[100, "gammapy.datasets.MapDatasetOnOff.models", false]], "models (gammapy.datasets.spectrumdataset attribute)": [[104, "gammapy.datasets.SpectrumDataset.models", false]], "models (gammapy.datasets.spectrumdatasetonoff attribute)": [[105, "gammapy.datasets.SpectrumDatasetOnOff.models", false]], "module": [[0, "module-gammapy.analysis", false], [1, "module-gammapy.astro.darkmatter", false], [1, "module-gammapy.astro.population", false], [1, "module-gammapy.astro.source", false], [2, "module-gammapy.catalog", false], [3, "module-gammapy.data", false], [4, "module-gammapy.datasets", false], [4, "module-gammapy.datasets.utils", false], [5, "module-gammapy.estimators", false], [5, "module-gammapy.estimators.utils", false], [7, "module-gammapy.irf", false], [8, "module-gammapy.makers", false], [8, "module-gammapy.makers.utils", false], [9, "module-gammapy.maps", false], [10, "module-gammapy.modeling", false], [10, "module-gammapy.modeling.models", false], [10, "module-gammapy.modeling.models.utils", false], [12, "module-gammapy.stats", false], [13, "module-gammapy.utils.cluster", false], [13, "module-gammapy.utils.coordinates", false], [13, "module-gammapy.utils.fits", false], [13, "module-gammapy.utils.integrate", false], [13, "module-gammapy.utils.interpolation", false], [13, "module-gammapy.utils.parallel", false], [13, "module-gammapy.utils.random", false], [13, "module-gammapy.utils.regions", false], [13, "module-gammapy.utils.scripts", false], [13, "module-gammapy.utils.table", false], [13, "module-gammapy.utils.testing", false], [13, "module-gammapy.utils.time", false], [13, "module-gammapy.utils.units", false], [14, "module-gammapy.visualization", false]], "mooreprofile (class in gammapy.astro.darkmatter)": [[24, "gammapy.astro.darkmatter.MooreProfile", false]], "more() (gammapy.data.hduindextable method)": [[83, "gammapy.data.HDUIndexTable.more", false]], "more() (gammapy.data.observationtable method)": [[86, "gammapy.data.ObservationTable.more", false]], "motion_since_birth() (in module gammapy.utils.coordinates)": [[294, "gammapy.utils.coordinates.motion_since_birth", false]], "mpl_plot_check() (in module gammapy.utils.testing)": [[339, "gammapy.utils.testing.mpl_plot_check", false]], "multiprocessing_manager (class in gammapy.utils.parallel)": [[310, "gammapy.utils.parallel.multiprocessing_manager", false]], "muoneff (gammapy.data.observation attribute)": [[84, "gammapy.data.Observation.muoneff", false]], "n_bkg (gammapy.stats.cashcountsstatistic attribute)": [[272, "gammapy.stats.CashCountsStatistic.n_bkg", false]], "n_bkg (gammapy.stats.wstatcountsstatistic attribute)": [[274, "gammapy.stats.WStatCountsStatistic.n_bkg", false]], "n_dof (gammapy.estimators.fluxmaps attribute)": [[117, "gammapy.estimators.FluxMaps.n_dof", false]], "n_dof (gammapy.estimators.fluxpoints attribute)": [[119, "gammapy.estimators.FluxPoints.n_dof", false]], "n_inputs (gammapy.astro.population.casebattacharya1998 attribute)": [[28, "gammapy.astro.population.CaseBattacharya1998.n_inputs", false]], "n_inputs (gammapy.astro.population.exponential attribute)": [[29, "gammapy.astro.population.Exponential.n_inputs", false]], "n_inputs (gammapy.astro.population.faucherkaspi2006 attribute)": [[30, "gammapy.astro.population.FaucherKaspi2006.n_inputs", false]], "n_inputs (gammapy.astro.population.faucherkaspi2006velocitybimodal attribute)": [[31, "gammapy.astro.population.FaucherKaspi2006VelocityBimodal.n_inputs", false]], "n_inputs (gammapy.astro.population.faucherkaspi2006velocitymaxwellian attribute)": [[32, "gammapy.astro.population.FaucherKaspi2006VelocityMaxwellian.n_inputs", false]], "n_inputs (gammapy.astro.population.lorimer2006 attribute)": [[35, "gammapy.astro.population.Lorimer2006.n_inputs", false]], "n_inputs (gammapy.astro.population.paczynski1990 attribute)": [[36, "gammapy.astro.population.Paczynski1990.n_inputs", false]], "n_inputs (gammapy.astro.population.paczynski1990velocity attribute)": [[37, "gammapy.astro.population.Paczynski1990Velocity.n_inputs", false]], "n_inputs (gammapy.astro.population.yusifovkucuk2004 attribute)": [[39, "gammapy.astro.population.YusifovKucuk2004.n_inputs", false]], "n_inputs (gammapy.astro.population.yusifovkucuk2004b attribute)": [[40, "gammapy.astro.population.YusifovKucuk2004B.n_inputs", false]], "n_jobs (gammapy.data.observationseventssampler attribute)": [[88, "gammapy.data.ObservationsEventsSampler.n_jobs", false]], "n_jobs (gammapy.estimators.fluxpointsestimator attribute)": [[120, "gammapy.estimators.FluxPointsEstimator.n_jobs", false]], "n_jobs (gammapy.estimators.fluxprofileestimator attribute)": [[121, "gammapy.estimators.FluxProfileEstimator.n_jobs", false]], "n_jobs (gammapy.estimators.lightcurveestimator attribute)": [[124, "gammapy.estimators.LightCurveEstimator.n_jobs", false]], "n_jobs (gammapy.estimators.tsmapestimator attribute)": [[127, "gammapy.estimators.TSMapEstimator.n_jobs", false]], "n_jobs (gammapy.makers.datasetsmaker attribute)": [[159, "gammapy.makers.DatasetsMaker.n_jobs", false]], "n_jobs_default (in module gammapy.utils.parallel)": [[308, "gammapy.utils.parallel.N_JOBS_DEFAULT", false]], "n_models (gammapy.catalog.sourcecatalogobject2hwc attribute)": [[70, "gammapy.catalog.SourceCatalogObject2HWC.n_models", false]], "n_models (gammapy.catalog.sourcecatalogobject3hwc attribute)": [[73, "gammapy.catalog.SourceCatalogObject3HWC.n_models", false]], "n_outputs (gammapy.astro.population.casebattacharya1998 attribute)": [[28, "gammapy.astro.population.CaseBattacharya1998.n_outputs", false]], "n_outputs (gammapy.astro.population.exponential attribute)": [[29, "gammapy.astro.population.Exponential.n_outputs", false]], "n_outputs (gammapy.astro.population.faucherkaspi2006 attribute)": [[30, "gammapy.astro.population.FaucherKaspi2006.n_outputs", false]], "n_outputs (gammapy.astro.population.faucherkaspi2006velocitybimodal attribute)": [[31, "gammapy.astro.population.FaucherKaspi2006VelocityBimodal.n_outputs", false]], "n_outputs (gammapy.astro.population.faucherkaspi2006velocitymaxwellian attribute)": [[32, "gammapy.astro.population.FaucherKaspi2006VelocityMaxwellian.n_outputs", false]], "n_outputs (gammapy.astro.population.lorimer2006 attribute)": [[35, "gammapy.astro.population.Lorimer2006.n_outputs", false]], "n_outputs (gammapy.astro.population.paczynski1990 attribute)": [[36, "gammapy.astro.population.Paczynski1990.n_outputs", false]], "n_outputs (gammapy.astro.population.paczynski1990velocity attribute)": [[37, "gammapy.astro.population.Paczynski1990Velocity.n_outputs", false]], "n_outputs (gammapy.astro.population.yusifovkucuk2004 attribute)": [[39, "gammapy.astro.population.YusifovKucuk2004.n_outputs", false]], "n_outputs (gammapy.astro.population.yusifovkucuk2004b attribute)": [[40, "gammapy.astro.population.YusifovKucuk2004B.n_outputs", false]], "n_sig (gammapy.stats.cashcountsstatistic attribute)": [[272, "gammapy.stats.CashCountsStatistic.n_sig", false]], "n_sig (gammapy.stats.wstatcountsstatistic attribute)": [[274, "gammapy.stats.WStatCountsStatistic.n_sig", false]], "n_sig_matching_significance() (gammapy.stats.cashcountsstatistic method)": [[272, "gammapy.stats.CashCountsStatistic.n_sig_matching_significance", false]], "n_sig_matching_significance() (gammapy.stats.wstatcountsstatistic method)": [[274, "gammapy.stats.WStatCountsStatistic.n_sig_matching_significance", false]], "n_sigma (gammapy.estimators.fluxmaps attribute)": [[117, "gammapy.estimators.FluxMaps.n_sigma", false]], "n_sigma (gammapy.estimators.fluxpoints attribute)": [[119, "gammapy.estimators.FluxPoints.n_sigma", false]], "n_sigma_ul (gammapy.estimators.fluxmaps attribute)": [[117, "gammapy.estimators.FluxMaps.n_sigma_ul", false]], "n_sigma_ul (gammapy.estimators.fluxpoints attribute)": [[119, "gammapy.estimators.FluxPoints.n_sigma_ul", false]], "n_submodels (gammapy.astro.population.casebattacharya1998 attribute)": [[28, "gammapy.astro.population.CaseBattacharya1998.n_submodels", false]], "n_submodels (gammapy.astro.population.exponential attribute)": [[29, "gammapy.astro.population.Exponential.n_submodels", false]], "n_submodels (gammapy.astro.population.faucherkaspi2006 attribute)": [[30, "gammapy.astro.population.FaucherKaspi2006.n_submodels", false]], "n_submodels (gammapy.astro.population.faucherkaspi2006velocitybimodal attribute)": [[31, "gammapy.astro.population.FaucherKaspi2006VelocityBimodal.n_submodels", false]], "n_submodels (gammapy.astro.population.faucherkaspi2006velocitymaxwellian attribute)": [[32, "gammapy.astro.population.FaucherKaspi2006VelocityMaxwellian.n_submodels", false]], "n_submodels (gammapy.astro.population.lorimer2006 attribute)": [[35, "gammapy.astro.population.Lorimer2006.n_submodels", false]], "n_submodels (gammapy.astro.population.paczynski1990 attribute)": [[36, "gammapy.astro.population.Paczynski1990.n_submodels", false]], "n_submodels (gammapy.astro.population.paczynski1990velocity attribute)": [[37, "gammapy.astro.population.Paczynski1990Velocity.n_submodels", false]], "n_submodels (gammapy.astro.population.yusifovkucuk2004 attribute)": [[39, "gammapy.astro.population.YusifovKucuk2004.n_submodels", false]], "n_submodels (gammapy.astro.population.yusifovkucuk2004b attribute)": [[40, "gammapy.astro.population.YusifovKucuk2004B.n_submodels", false]], "naimaspectralmodel (class in gammapy.modeling.models)": [[234, "gammapy.modeling.models.NaimaSpectralModel", false]], "name (gammapy.astro.population.casebattacharya1998 attribute)": [[28, "gammapy.astro.population.CaseBattacharya1998.name", false]], "name (gammapy.astro.population.exponential attribute)": [[29, "gammapy.astro.population.Exponential.name", false]], "name (gammapy.astro.population.faucherkaspi2006 attribute)": [[30, "gammapy.astro.population.FaucherKaspi2006.name", false]], "name (gammapy.astro.population.faucherkaspi2006velocitybimodal attribute)": [[31, "gammapy.astro.population.FaucherKaspi2006VelocityBimodal.name", false]], "name (gammapy.astro.population.faucherkaspi2006velocitymaxwellian attribute)": [[32, "gammapy.astro.population.FaucherKaspi2006VelocityMaxwellian.name", false]], "name (gammapy.astro.population.lorimer2006 attribute)": [[35, "gammapy.astro.population.Lorimer2006.name", false]], "name (gammapy.astro.population.paczynski1990 attribute)": [[36, "gammapy.astro.population.Paczynski1990.name", false]], "name (gammapy.astro.population.paczynski1990velocity attribute)": [[37, "gammapy.astro.population.Paczynski1990Velocity.name", false]], "name (gammapy.astro.population.yusifovkucuk2004 attribute)": [[39, "gammapy.astro.population.YusifovKucuk2004.name", false]], "name (gammapy.astro.population.yusifovkucuk2004b attribute)": [[40, "gammapy.astro.population.YusifovKucuk2004B.name", false]], "name (gammapy.catalog.sourcecatalogobject attribute)": [[67, "gammapy.catalog.SourceCatalogObject.name", false]], "name (gammapy.catalog.sourcecatalogobject1lhaaso attribute)": [[68, "gammapy.catalog.SourceCatalogObject1LHAASO.name", false]], "name (gammapy.catalog.sourcecatalogobject2fhl attribute)": [[69, "gammapy.catalog.SourceCatalogObject2FHL.name", false]], "name (gammapy.catalog.sourcecatalogobject2hwc attribute)": [[70, "gammapy.catalog.SourceCatalogObject2HWC.name", false]], "name (gammapy.catalog.sourcecatalogobject3fgl attribute)": [[71, "gammapy.catalog.SourceCatalogObject3FGL.name", false]], "name (gammapy.catalog.sourcecatalogobject3fhl attribute)": [[72, "gammapy.catalog.SourceCatalogObject3FHL.name", false]], "name (gammapy.catalog.sourcecatalogobject3hwc attribute)": [[73, "gammapy.catalog.SourceCatalogObject3HWC.name", false]], "name (gammapy.catalog.sourcecatalogobject4fgl attribute)": [[74, "gammapy.catalog.SourceCatalogObject4FGL.name", false]], "name (gammapy.catalog.sourcecatalogobjectgammacat attribute)": [[75, "gammapy.catalog.SourceCatalogObjectGammaCat.name", false]], "name (gammapy.catalog.sourcecatalogobjecthgps attribute)": [[76, "gammapy.catalog.SourceCatalogObjectHGPS.name", false]], "name (gammapy.catalog.sourcecatalogobjecthgpscomponent attribute)": [[77, "gammapy.catalog.SourceCatalogObjectHGPSComponent.name", false]], "name (gammapy.datasets.dataset attribute)": [[94, "gammapy.datasets.Dataset.name", false]], "name (gammapy.datasets.fluxpointsdataset attribute)": [[96, "gammapy.datasets.FluxPointsDataset.name", false]], "name (gammapy.datasets.mapdataset attribute)": [[97, "gammapy.datasets.MapDataset.name", false]], "name (gammapy.datasets.mapdatasetonoff attribute)": [[100, "gammapy.datasets.MapDatasetOnOff.name", false]], "name (gammapy.datasets.spectrumdataset attribute)": [[104, "gammapy.datasets.SpectrumDataset.name", false]], "name (gammapy.datasets.spectrumdatasetonoff attribute)": [[105, "gammapy.datasets.SpectrumDatasetOnOff.name", false]], "name (gammapy.maps.labelmapaxis attribute)": [[185, "gammapy.maps.LabelMapAxis.name", false]], "name (gammapy.maps.mapaxis attribute)": [[188, "gammapy.maps.MapAxis.name", false]], "name (gammapy.maps.timemapaxis attribute)": [[193, "gammapy.maps.TimeMapAxis.name", false]], "name (gammapy.modeling.models.fovbackgroundmodel attribute)": [[219, "gammapy.modeling.models.FoVBackgroundModel.name", false]], "name (gammapy.modeling.models.skymodel attribute)": [[248, "gammapy.modeling.models.SkyModel.name", false]], "name (gammapy.modeling.models.templatenpredmodel attribute)": [[258, "gammapy.modeling.models.TemplateNPredModel.name", false]], "name (gammapy.modeling.parameter attribute)": [[201, "gammapy.modeling.Parameter.name", false]], "name (gammapy.modeling.priorparameter attribute)": [[203, "gammapy.modeling.PriorParameter.name", false]], "names (gammapy.datasets.datasets attribute)": [[95, "gammapy.datasets.Datasets.names", false]], "names (gammapy.maps.mapaxes attribute)": [[187, "gammapy.maps.MapAxes.names", false]], "names (gammapy.modeling.models.datasetmodels attribute)": [[211, "gammapy.modeling.models.DatasetModels.names", false]], "names (gammapy.modeling.models.models attribute)": [[233, "gammapy.modeling.models.Models.names", false]], "names (gammapy.modeling.parameters attribute)": [[202, "gammapy.modeling.Parameters.names", false]], "names (gammapy.modeling.priorparameters attribute)": [[204, "gammapy.modeling.PriorParameters.names", false]], "nbin (gammapy.maps.labelmapaxis attribute)": [[185, "gammapy.maps.LabelMapAxis.nbin", false]], "nbin (gammapy.maps.mapaxis attribute)": [[188, "gammapy.maps.MapAxis.nbin", false]], "nbin (gammapy.maps.timemapaxis attribute)": [[193, "gammapy.maps.TimeMapAxis.nbin", false]], "nbin_per_decade (gammapy.maps.mapaxis attribute)": [[188, "gammapy.maps.MapAxis.nbin_per_decade", false]], "ndim (gammapy.maps.hpxgeom attribute)": [[182, "gammapy.maps.HpxGeom.ndim", false]], "ndim (gammapy.maps.mapcoord attribute)": [[189, "gammapy.maps.MapCoord.ndim", false]], "ndim (gammapy.maps.wcsgeom attribute)": [[194, "gammapy.maps.WcsGeom.ndim", false]], "nest (gammapy.maps.hpxgeom attribute)": [[182, "gammapy.maps.HpxGeom.nest", false]], "nfwprofile (class in gammapy.astro.darkmatter)": [[25, "gammapy.astro.darkmatter.NFWProfile", false]], "niter (gammapy.estimators.fluxmaps attribute)": [[117, "gammapy.estimators.FluxMaps.niter", false]], "niter (gammapy.estimators.fluxpoints attribute)": [[119, "gammapy.estimators.FluxPoints.niter", false]], "node_type (gammapy.maps.labelmapaxis attribute)": [[185, "gammapy.maps.LabelMapAxis.node_type", false]], "node_type (gammapy.maps.mapaxis attribute)": [[188, "gammapy.maps.MapAxis.node_type", false]], "node_type (gammapy.maps.timemapaxis attribute)": [[193, "gammapy.maps.TimeMapAxis.node_type", false]], "norm (gammapy.estimators.fluxmaps attribute)": [[117, "gammapy.estimators.FluxMaps.norm", false]], "norm (gammapy.estimators.fluxpoints attribute)": [[119, "gammapy.estimators.FluxPoints.norm", false]], "norm (gammapy.modeling.models.expcutoffpowerlawnormspectralmodel attribute)": [[216, "gammapy.modeling.models.ExpCutoffPowerLawNormSpectralModel.norm", false]], "norm (gammapy.modeling.models.logparabolanormspectralmodel attribute)": [[227, "gammapy.modeling.models.LogParabolaNormSpectralModel.norm", false]], "norm (gammapy.modeling.models.meyercrabspectralmodel attribute)": [[230, "gammapy.modeling.models.MeyerCrabSpectralModel.norm", false]], "norm (gammapy.modeling.models.powerlawnormspectralmodel attribute)": [[239, "gammapy.modeling.models.PowerLawNormSpectralModel.norm", false]], "norm (gammapy.modeling.models.scalespectralmodel attribute)": [[244, "gammapy.modeling.models.ScaleSpectralModel.norm", false]], "norm_bounds_cython() (in module gammapy.stats)": [[285, "gammapy.stats.norm_bounds_cython", false]], "norm_err (gammapy.estimators.fluxmaps attribute)": [[117, "gammapy.estimators.FluxMaps.norm_err", false]], "norm_err (gammapy.estimators.fluxpoints attribute)": [[119, "gammapy.estimators.FluxPoints.norm_err", false]], "norm_errn (gammapy.estimators.fluxmaps attribute)": [[117, "gammapy.estimators.FluxMaps.norm_errn", false]], "norm_errn (gammapy.estimators.fluxpoints attribute)": [[119, "gammapy.estimators.FluxPoints.norm_errn", false]], "norm_errp (gammapy.estimators.fluxmaps attribute)": [[117, "gammapy.estimators.FluxMaps.norm_errp", false]], "norm_errp (gammapy.estimators.fluxpoints attribute)": [[119, "gammapy.estimators.FluxPoints.norm_errp", false]], "norm_max (gammapy.estimators.fluxpointsestimator attribute)": [[120, "gammapy.estimators.FluxPointsEstimator.norm_max", false]], "norm_max (gammapy.estimators.fluxprofileestimator attribute)": [[121, "gammapy.estimators.FluxProfileEstimator.norm_max", false]], "norm_max (gammapy.estimators.lightcurveestimator attribute)": [[124, "gammapy.estimators.LightCurveEstimator.norm_max", false]], "norm_min (gammapy.estimators.fluxpointsestimator attribute)": [[120, "gammapy.estimators.FluxPointsEstimator.norm_min", false]], "norm_min (gammapy.estimators.fluxprofileestimator attribute)": [[121, "gammapy.estimators.FluxProfileEstimator.norm_min", false]], "norm_min (gammapy.estimators.lightcurveestimator attribute)": [[124, "gammapy.estimators.LightCurveEstimator.norm_min", false]], "norm_n_values (gammapy.estimators.fluxpointsestimator attribute)": [[120, "gammapy.estimators.FluxPointsEstimator.norm_n_values", false]], "norm_n_values (gammapy.estimators.fluxprofileestimator attribute)": [[121, "gammapy.estimators.FluxProfileEstimator.norm_n_values", false]], "norm_n_values (gammapy.estimators.lightcurveestimator attribute)": [[124, "gammapy.estimators.LightCurveEstimator.norm_n_values", false]], "norm_parameters (gammapy.modeling.parameter attribute)": [[201, "gammapy.modeling.Parameter.norm_parameters", false]], "norm_parameters (gammapy.modeling.parameters attribute)": [[202, "gammapy.modeling.Parameters.norm_parameters", false]], "norm_parameters (gammapy.modeling.priorparameter attribute)": [[203, "gammapy.modeling.PriorParameter.norm_parameters", false]], "norm_parameters (gammapy.modeling.priorparameters attribute)": [[204, "gammapy.modeling.PriorParameters.norm_parameters", false]], "norm_sensitivity (gammapy.estimators.fluxmaps attribute)": [[117, "gammapy.estimators.FluxMaps.norm_sensitivity", false]], "norm_sensitivity (gammapy.estimators.fluxpoints attribute)": [[119, "gammapy.estimators.FluxPoints.norm_sensitivity", false]], "norm_ul (gammapy.estimators.fluxmaps attribute)": [[117, "gammapy.estimators.FluxMaps.norm_ul", false]], "norm_ul (gammapy.estimators.fluxpoints attribute)": [[119, "gammapy.estimators.FluxPoints.norm_ul", false]], "norm_values (gammapy.estimators.fluxpointsestimator attribute)": [[120, "gammapy.estimators.FluxPointsEstimator.norm_values", false]], "norm_values (gammapy.estimators.fluxprofileestimator attribute)": [[121, "gammapy.estimators.FluxProfileEstimator.norm_values", false]], "norm_values (gammapy.estimators.lightcurveestimator attribute)": [[124, "gammapy.estimators.LightCurveEstimator.norm_values", false]], "normalize() (gammapy.estimators.imageprofile method)": [[122, "gammapy.estimators.ImageProfile.normalize", false]], "normalize() (gammapy.irf.background2d method)": [[137, "gammapy.irf.Background2D.normalize", false]], "normalize() (gammapy.irf.background3d method)": [[138, "gammapy.irf.Background3D.normalize", false]], "normalize() (gammapy.irf.backgroundirf method)": [[139, "gammapy.irf.BackgroundIRF.normalize", false]], "normalize() (gammapy.irf.edispkernel method)": [[140, "gammapy.irf.EDispKernel.normalize", false]], "normalize() (gammapy.irf.edispmap method)": [[142, "gammapy.irf.EDispMap.normalize", false]], "normalize() (gammapy.irf.effectiveareatable2d method)": [[143, "gammapy.irf.EffectiveAreaTable2D.normalize", false]], "normalize() (gammapy.irf.energydependentmultigausspsf method)": [[144, "gammapy.irf.EnergyDependentMultiGaussPSF.normalize", false]], "normalize() (gammapy.irf.energydispersion2d method)": [[145, "gammapy.irf.EnergyDispersion2D.normalize", false]], "normalize() (gammapy.irf.irf method)": [[147, "gammapy.irf.IRF.normalize", false]], "normalize() (gammapy.irf.parametricpsf method)": [[154, "gammapy.irf.ParametricPSF.normalize", false]], "normalize() (gammapy.irf.psf3d method)": [[150, "gammapy.irf.PSF3D.normalize", false]], "normalize() (gammapy.irf.psfkernel method)": [[151, "gammapy.irf.PSFKernel.normalize", false]], "normalize() (gammapy.irf.psfking method)": [[152, "gammapy.irf.PSFKing.normalize", false]], "normalize() (gammapy.irf.psfmap method)": [[153, "gammapy.irf.PSFMap.normalize", false]], "normalize() (gammapy.irf.radmax2d method)": [[155, "gammapy.irf.RadMax2D.normalize", false]], "normalize() (gammapy.irf.recopsfmap method)": [[156, "gammapy.irf.RecoPSFMap.normalize", false]], "normalize() (gammapy.maps.hpxmap method)": [[183, "gammapy.maps.HpxMap.normalize", false]], "normalize() (gammapy.maps.hpxndmap method)": [[184, "gammapy.maps.HpxNDMap.normalize", false]], "normalize() (gammapy.maps.map method)": [[186, "gammapy.maps.Map.normalize", false]], "normalize() (gammapy.maps.regionndmap method)": [[192, "gammapy.maps.RegionNDMap.normalize", false]], "normalize() (gammapy.maps.wcsmap method)": [[195, "gammapy.maps.WcsMap.normalize", false]], "normalize() (gammapy.maps.wcsndmap method)": [[196, "gammapy.maps.WcsNDMap.normalize", false]], "normalize() (in module gammapy.utils.random)": [[315, "gammapy.utils.random.normalize", false]], "norms (gammapy.modeling.models.piecewisenormspatialmodel attribute)": [[235, "gammapy.modeling.models.PiecewiseNormSpatialModel.norms", false]], "norms (gammapy.modeling.models.piecewisenormspectralmodel attribute)": [[236, "gammapy.modeling.models.PiecewiseNormSpectralModel.norms", false]], "npix (gammapy.maps.hpxgeom attribute)": [[182, "gammapy.maps.HpxGeom.npix", false]], "npix (gammapy.maps.regiongeom attribute)": [[191, "gammapy.maps.RegionGeom.npix", false]], "npix (gammapy.maps.wcsgeom attribute)": [[194, "gammapy.maps.WcsGeom.npix", false]], "npix_max (gammapy.maps.hpxgeom attribute)": [[182, "gammapy.maps.HpxGeom.npix_max", false]], "npred (gammapy.estimators.fluxmaps attribute)": [[117, "gammapy.estimators.FluxMaps.npred", false]], "npred (gammapy.estimators.fluxpoints attribute)": [[119, "gammapy.estimators.FluxPoints.npred", false]], "npred() (gammapy.datasets.mapdataset method)": [[97, "gammapy.datasets.MapDataset.npred", false]], "npred() (gammapy.datasets.mapdatasetonoff method)": [[100, "gammapy.datasets.MapDatasetOnOff.npred", false]], "npred() (gammapy.datasets.spectrumdataset method)": [[104, "gammapy.datasets.SpectrumDataset.npred", false]], "npred() (gammapy.datasets.spectrumdatasetonoff method)": [[105, "gammapy.datasets.SpectrumDatasetOnOff.npred", false]], "npred_background (gammapy.estimators.fluxmaps attribute)": [[117, "gammapy.estimators.FluxMaps.npred_background", false]], "npred_background (gammapy.estimators.fluxpoints attribute)": [[119, "gammapy.estimators.FluxPoints.npred_background", false]], "npred_background() (gammapy.datasets.mapdataset method)": [[97, "gammapy.datasets.MapDataset.npred_background", false]], "npred_background() (gammapy.datasets.mapdatasetonoff method)": [[100, "gammapy.datasets.MapDatasetOnOff.npred_background", false]], "npred_background() (gammapy.datasets.spectrumdataset method)": [[104, "gammapy.datasets.SpectrumDataset.npred_background", false]], "npred_background() (gammapy.datasets.spectrumdatasetonoff method)": [[105, "gammapy.datasets.SpectrumDatasetOnOff.npred_background", false]], "npred_excess (gammapy.estimators.fluxmaps attribute)": [[117, "gammapy.estimators.FluxMaps.npred_excess", false]], "npred_excess (gammapy.estimators.fluxpoints attribute)": [[119, "gammapy.estimators.FluxPoints.npred_excess", false]], "npred_excess_err (gammapy.estimators.fluxmaps attribute)": [[117, "gammapy.estimators.FluxMaps.npred_excess_err", false]], "npred_excess_err (gammapy.estimators.fluxpoints attribute)": [[119, "gammapy.estimators.FluxPoints.npred_excess_err", false]], "npred_excess_errn (gammapy.estimators.fluxmaps attribute)": [[117, "gammapy.estimators.FluxMaps.npred_excess_errn", false]], "npred_excess_errn (gammapy.estimators.fluxpoints attribute)": [[119, "gammapy.estimators.FluxPoints.npred_excess_errn", false]], "npred_excess_errp (gammapy.estimators.fluxmaps attribute)": [[117, "gammapy.estimators.FluxMaps.npred_excess_errp", false]], "npred_excess_errp (gammapy.estimators.fluxpoints attribute)": [[119, "gammapy.estimators.FluxPoints.npred_excess_errp", false]], "npred_excess_ref (gammapy.estimators.fluxmaps attribute)": [[117, "gammapy.estimators.FluxMaps.npred_excess_ref", false]], "npred_excess_ref (gammapy.estimators.fluxpoints attribute)": [[119, "gammapy.estimators.FluxPoints.npred_excess_ref", false]], "npred_excess_ul (gammapy.estimators.fluxmaps attribute)": [[117, "gammapy.estimators.FluxMaps.npred_excess_ul", false]], "npred_excess_ul (gammapy.estimators.fluxpoints attribute)": [[119, "gammapy.estimators.FluxPoints.npred_excess_ul", false]], "npred_off() (gammapy.datasets.mapdatasetonoff method)": [[100, "gammapy.datasets.MapDatasetOnOff.npred_off", false]], "npred_off() (gammapy.datasets.spectrumdatasetonoff method)": [[105, "gammapy.datasets.SpectrumDatasetOnOff.npred_off", false]], "npred_signal() (gammapy.datasets.mapdataset method)": [[97, "gammapy.datasets.MapDataset.npred_signal", false]], "npred_signal() (gammapy.datasets.mapdatasetonoff method)": [[100, "gammapy.datasets.MapDatasetOnOff.npred_signal", false]], "npred_signal() (gammapy.datasets.spectrumdataset method)": [[104, "gammapy.datasets.SpectrumDataset.npred_signal", false]], "npred_signal() (gammapy.datasets.spectrumdatasetonoff method)": [[105, "gammapy.datasets.SpectrumDatasetOnOff.npred_signal", false]], "nside (gammapy.maps.hpxgeom attribute)": [[182, "gammapy.maps.HpxGeom.nside", false]], "obs() (gammapy.data.datastore method)": [[78, "gammapy.data.DataStore.obs", false]], "obs_id_unique (gammapy.data.hduindextable attribute)": [[83, "gammapy.data.HDUIndexTable.obs_id_unique", false]], "obs_ids (gammapy.data.datastore attribute)": [[78, "gammapy.data.DataStore.obs_ids", false]], "obs_info (gammapy.data.observation attribute)": [[84, "gammapy.data.Observation.obs_info", false]], "observation (class in gammapy.data)": [[84, "gammapy.data.Observation", false]], "observation_dead_time_fraction (gammapy.data.eventlist attribute)": [[79, "gammapy.data.EventList.observation_dead_time_fraction", false]], "observation_dead_time_fraction (gammapy.data.observation attribute)": [[84, "gammapy.data.Observation.observation_dead_time_fraction", false]], "observation_live_time_duration (gammapy.data.eventlist attribute)": [[79, "gammapy.data.EventList.observation_live_time_duration", false]], "observation_live_time_duration (gammapy.data.observation attribute)": [[84, "gammapy.data.Observation.observation_live_time_duration", false]], "observation_time_duration (gammapy.data.eventlist attribute)": [[79, "gammapy.data.EventList.observation_time_duration", false]], "observation_time_duration (gammapy.data.observation attribute)": [[84, "gammapy.data.Observation.observation_time_duration", false]], "observation_time_start (gammapy.data.eventlist attribute)": [[79, "gammapy.data.EventList.observation_time_start", false]], "observation_time_stop (gammapy.data.eventlist attribute)": [[79, "gammapy.data.EventList.observation_time_stop", false]], "observationeventsampler (class in gammapy.datasets)": [[103, "gammapy.datasets.ObservationEventSampler", false]], "observationfilter (class in gammapy.data)": [[85, "gammapy.data.ObservationFilter", false]], "observations (class in gammapy.data)": [[87, "gammapy.data.Observations", false]], "observationseventssampler (class in gammapy.data)": [[88, "gammapy.data.ObservationsEventsSampler", false]], "observationtable (class in gammapy.data)": [[86, "gammapy.data.ObservationTable", false]], "observatory_earth_location (gammapy.data.eventlist attribute)": [[79, "gammapy.data.EventList.observatory_earth_location", false]], "observatory_earth_location (gammapy.data.observation attribute)": [[84, "gammapy.data.Observation.observatory_earth_location", false]], "observatory_locations (in module gammapy.data)": [[92, "gammapy.data.observatory_locations", false]], "offset (gammapy.data.eventlist attribute)": [[79, "gammapy.data.EventList.offset", false]], "offset_from_median (gammapy.data.eventlist attribute)": [[79, "gammapy.data.EventList.offset_from_median", false]], "offset_max (gammapy.makers.datasetsmaker attribute)": [[159, "gammapy.makers.DatasetsMaker.offset_max", false]], "ogipdatasetreader (class in gammapy.datasets)": [[101, "gammapy.datasets.OGIPDatasetReader", false]], "ogipdatasetwriter (class in gammapy.datasets)": [[102, "gammapy.datasets.OGIPDatasetWriter", false]], "omega (gammapy.modeling.models.sinetemporalmodel attribute)": [[247, "gammapy.modeling.models.SineTemporalModel.omega", false]], "optimize() (gammapy.modeling.fit method)": [[200, "gammapy.modeling.Fit.optimize", false]], "order (gammapy.maps.hpxgeom attribute)": [[182, "gammapy.maps.HpxGeom.order", false]], "ordering (gammapy.maps.hpxgeom attribute)": [[182, "gammapy.maps.HpxGeom.ordering", false]], "output_units() (gammapy.astro.population.casebattacharya1998 method)": [[28, "gammapy.astro.population.CaseBattacharya1998.output_units", false]], "output_units() (gammapy.astro.population.exponential method)": [[29, "gammapy.astro.population.Exponential.output_units", false]], "output_units() (gammapy.astro.population.faucherkaspi2006 method)": [[30, "gammapy.astro.population.FaucherKaspi2006.output_units", false]], "output_units() (gammapy.astro.population.faucherkaspi2006velocitybimodal method)": [[31, "gammapy.astro.population.FaucherKaspi2006VelocityBimodal.output_units", false]], "output_units() (gammapy.astro.population.faucherkaspi2006velocitymaxwellian method)": [[32, "gammapy.astro.population.FaucherKaspi2006VelocityMaxwellian.output_units", false]], "output_units() (gammapy.astro.population.lorimer2006 method)": [[35, "gammapy.astro.population.Lorimer2006.output_units", false]], "output_units() (gammapy.astro.population.paczynski1990 method)": [[36, "gammapy.astro.population.Paczynski1990.output_units", false]], "output_units() (gammapy.astro.population.paczynski1990velocity method)": [[37, "gammapy.astro.population.Paczynski1990Velocity.output_units", false]], "output_units() (gammapy.astro.population.yusifovkucuk2004 method)": [[39, "gammapy.astro.population.YusifovKucuk2004.output_units", false]], "output_units() (gammapy.astro.population.yusifovkucuk2004b method)": [[40, "gammapy.astro.population.YusifovKucuk2004B.output_units", false]], "outputs (gammapy.astro.population.casebattacharya1998 attribute)": [[28, "gammapy.astro.population.CaseBattacharya1998.outputs", false]], "outputs (gammapy.astro.population.exponential attribute)": [[29, "gammapy.astro.population.Exponential.outputs", false]], "outputs (gammapy.astro.population.faucherkaspi2006 attribute)": [[30, "gammapy.astro.population.FaucherKaspi2006.outputs", false]], "outputs (gammapy.astro.population.faucherkaspi2006velocitybimodal attribute)": [[31, "gammapy.astro.population.FaucherKaspi2006VelocityBimodal.outputs", false]], "outputs (gammapy.astro.population.faucherkaspi2006velocitymaxwellian attribute)": [[32, "gammapy.astro.population.FaucherKaspi2006VelocityMaxwellian.outputs", false]], "outputs (gammapy.astro.population.lorimer2006 attribute)": [[35, "gammapy.astro.population.Lorimer2006.outputs", false]], "outputs (gammapy.astro.population.paczynski1990 attribute)": [[36, "gammapy.astro.population.Paczynski1990.outputs", false]], "outputs (gammapy.astro.population.paczynski1990velocity attribute)": [[37, "gammapy.astro.population.Paczynski1990Velocity.outputs", false]], "outputs (gammapy.astro.population.yusifovkucuk2004 attribute)": [[39, "gammapy.astro.population.YusifovKucuk2004.outputs", false]], "outputs (gammapy.astro.population.yusifovkucuk2004b attribute)": [[40, "gammapy.astro.population.YusifovKucuk2004B.outputs", false]], "p (gammapy.astro.population.valleespiral attribute)": [[38, "gammapy.astro.population.ValleeSpiral.p", false]], "p_value (gammapy.stats.cashcountsstatistic attribute)": [[272, "gammapy.stats.CashCountsStatistic.p_value", false]], "p_value (gammapy.stats.wstatcountsstatistic attribute)": [[274, "gammapy.stats.WStatCountsStatistic.p_value", false]], "paczynski1990 (class in gammapy.astro.population)": [[36, "gammapy.astro.population.Paczynski1990", false]], "paczynski1990velocity (class in gammapy.astro.population)": [[37, "gammapy.astro.population.Paczynski1990Velocity", false]], "pad() (gammapy.datasets.mapdataset method)": [[97, "gammapy.datasets.MapDataset.pad", false]], "pad() (gammapy.datasets.mapdatasetonoff method)": [[100, "gammapy.datasets.MapDatasetOnOff.pad", false]], "pad() (gammapy.datasets.spectrumdataset method)": [[104, "gammapy.datasets.SpectrumDataset.pad", false]], "pad() (gammapy.datasets.spectrumdatasetonoff method)": [[105, "gammapy.datasets.SpectrumDatasetOnOff.pad", false]], "pad() (gammapy.irf.background2d method)": [[137, "gammapy.irf.Background2D.pad", false]], "pad() (gammapy.irf.background3d method)": [[138, "gammapy.irf.Background3D.pad", false]], "pad() (gammapy.irf.backgroundirf method)": [[139, "gammapy.irf.BackgroundIRF.pad", false]], "pad() (gammapy.irf.edispkernel method)": [[140, "gammapy.irf.EDispKernel.pad", false]], "pad() (gammapy.irf.effectiveareatable2d method)": [[143, "gammapy.irf.EffectiveAreaTable2D.pad", false]], "pad() (gammapy.irf.energydependentmultigausspsf method)": [[144, "gammapy.irf.EnergyDependentMultiGaussPSF.pad", false]], "pad() (gammapy.irf.energydispersion2d method)": [[145, "gammapy.irf.EnergyDispersion2D.pad", false]], "pad() (gammapy.irf.irf method)": [[147, "gammapy.irf.IRF.pad", false]], "pad() (gammapy.irf.parametricpsf method)": [[154, "gammapy.irf.ParametricPSF.pad", false]], "pad() (gammapy.irf.psf3d method)": [[150, "gammapy.irf.PSF3D.pad", false]], "pad() (gammapy.irf.psfking method)": [[152, "gammapy.irf.PSFKing.pad", false]], "pad() (gammapy.irf.radmax2d method)": [[155, "gammapy.irf.RadMax2D.pad", false]], "pad() (gammapy.maps.geom method)": [[181, "gammapy.maps.Geom.pad", false]], "pad() (gammapy.maps.hpxgeom method)": [[182, "gammapy.maps.HpxGeom.pad", false]], "pad() (gammapy.maps.hpxmap method)": [[183, "gammapy.maps.HpxMap.pad", false]], "pad() (gammapy.maps.hpxndmap method)": [[184, "gammapy.maps.HpxNDMap.pad", false]], "pad() (gammapy.maps.labelmapaxis method)": [[185, "gammapy.maps.LabelMapAxis.pad", false]], "pad() (gammapy.maps.map method)": [[186, "gammapy.maps.Map.pad", false]], "pad() (gammapy.maps.mapaxes method)": [[187, "gammapy.maps.MapAxes.pad", false]], "pad() (gammapy.maps.mapaxis method)": [[188, "gammapy.maps.MapAxis.pad", false]], "pad() (gammapy.maps.regiongeom method)": [[191, "gammapy.maps.RegionGeom.pad", false]], "pad() (gammapy.maps.regionndmap method)": [[192, "gammapy.maps.RegionNDMap.pad", false]], "pad() (gammapy.maps.wcsgeom method)": [[194, "gammapy.maps.WcsGeom.pad", false]], "pad() (gammapy.maps.wcsmap method)": [[195, "gammapy.maps.WcsMap.pad", false]], "pad() (gammapy.maps.wcsndmap method)": [[196, "gammapy.maps.WcsNDMap.pad", false]], "parallel_backend (gammapy.data.observationseventssampler attribute)": [[88, "gammapy.data.ObservationsEventsSampler.parallel_backend", false]], "parallel_backend (gammapy.estimators.fluxpointsestimator attribute)": [[120, "gammapy.estimators.FluxPointsEstimator.parallel_backend", false]], "parallel_backend (gammapy.estimators.fluxprofileestimator attribute)": [[121, "gammapy.estimators.FluxProfileEstimator.parallel_backend", false]], "parallel_backend (gammapy.estimators.lightcurveestimator attribute)": [[124, "gammapy.estimators.LightCurveEstimator.parallel_backend", false]], "parallel_backend (gammapy.estimators.tsmapestimator attribute)": [[127, "gammapy.estimators.TSMapEstimator.parallel_backend", false]], "parallel_backend (gammapy.makers.datasetsmaker attribute)": [[159, "gammapy.makers.DatasetsMaker.parallel_backend", false]], "param_names (gammapy.astro.population.casebattacharya1998 attribute)": [[28, "gammapy.astro.population.CaseBattacharya1998.param_names", false]], "param_names (gammapy.astro.population.exponential attribute)": [[29, "gammapy.astro.population.Exponential.param_names", false]], "param_names (gammapy.astro.population.faucherkaspi2006 attribute)": [[30, "gammapy.astro.population.FaucherKaspi2006.param_names", false]], "param_names (gammapy.astro.population.faucherkaspi2006velocitybimodal attribute)": [[31, "gammapy.astro.population.FaucherKaspi2006VelocityBimodal.param_names", false]], "param_names (gammapy.astro.population.faucherkaspi2006velocitymaxwellian attribute)": [[32, "gammapy.astro.population.FaucherKaspi2006VelocityMaxwellian.param_names", false]], "param_names (gammapy.astro.population.lorimer2006 attribute)": [[35, "gammapy.astro.population.Lorimer2006.param_names", false]], "param_names (gammapy.astro.population.paczynski1990 attribute)": [[36, "gammapy.astro.population.Paczynski1990.param_names", false]], "param_names (gammapy.astro.population.paczynski1990velocity attribute)": [[37, "gammapy.astro.population.Paczynski1990Velocity.param_names", false]], "param_names (gammapy.astro.population.yusifovkucuk2004 attribute)": [[39, "gammapy.astro.population.YusifovKucuk2004.param_names", false]], "param_names (gammapy.astro.population.yusifovkucuk2004b attribute)": [[40, "gammapy.astro.population.YusifovKucuk2004B.param_names", false]], "param_sets (gammapy.astro.population.casebattacharya1998 attribute)": [[28, "gammapy.astro.population.CaseBattacharya1998.param_sets", false]], "param_sets (gammapy.astro.population.exponential attribute)": [[29, "gammapy.astro.population.Exponential.param_sets", false]], "param_sets (gammapy.astro.population.faucherkaspi2006 attribute)": [[30, "gammapy.astro.population.FaucherKaspi2006.param_sets", false]], "param_sets (gammapy.astro.population.faucherkaspi2006velocitybimodal attribute)": [[31, "gammapy.astro.population.FaucherKaspi2006VelocityBimodal.param_sets", false]], "param_sets (gammapy.astro.population.faucherkaspi2006velocitymaxwellian attribute)": [[32, "gammapy.astro.population.FaucherKaspi2006VelocityMaxwellian.param_sets", false]], "param_sets (gammapy.astro.population.lorimer2006 attribute)": [[35, "gammapy.astro.population.Lorimer2006.param_sets", false]], "param_sets (gammapy.astro.population.paczynski1990 attribute)": [[36, "gammapy.astro.population.Paczynski1990.param_sets", false]], "param_sets (gammapy.astro.population.paczynski1990velocity attribute)": [[37, "gammapy.astro.population.Paczynski1990Velocity.param_sets", false]], "param_sets (gammapy.astro.population.yusifovkucuk2004 attribute)": [[39, "gammapy.astro.population.YusifovKucuk2004.param_sets", false]], "param_sets (gammapy.astro.population.yusifovkucuk2004b attribute)": [[40, "gammapy.astro.population.YusifovKucuk2004B.param_sets", false]], "parameter (class in gammapy.modeling)": [[201, "gammapy.modeling.Parameter", false]], "parameter_constraints (gammapy.astro.population.casebattacharya1998 attribute)": [[28, "gammapy.astro.population.CaseBattacharya1998.parameter_constraints", false]], "parameter_constraints (gammapy.astro.population.exponential attribute)": [[29, "gammapy.astro.population.Exponential.parameter_constraints", false]], "parameter_constraints (gammapy.astro.population.faucherkaspi2006 attribute)": [[30, "gammapy.astro.population.FaucherKaspi2006.parameter_constraints", false]], "parameter_constraints (gammapy.astro.population.faucherkaspi2006velocitybimodal attribute)": [[31, "gammapy.astro.population.FaucherKaspi2006VelocityBimodal.parameter_constraints", false]], "parameter_constraints (gammapy.astro.population.faucherkaspi2006velocitymaxwellian attribute)": [[32, "gammapy.astro.population.FaucherKaspi2006VelocityMaxwellian.parameter_constraints", false]], "parameter_constraints (gammapy.astro.population.lorimer2006 attribute)": [[35, "gammapy.astro.population.Lorimer2006.parameter_constraints", false]], "parameter_constraints (gammapy.astro.population.paczynski1990 attribute)": [[36, "gammapy.astro.population.Paczynski1990.parameter_constraints", false]], "parameter_constraints (gammapy.astro.population.paczynski1990velocity attribute)": [[37, "gammapy.astro.population.Paczynski1990Velocity.parameter_constraints", false]], "parameter_constraints (gammapy.astro.population.yusifovkucuk2004 attribute)": [[39, "gammapy.astro.population.YusifovKucuk2004.parameter_constraints", false]], "parameter_constraints (gammapy.astro.population.yusifovkucuk2004b attribute)": [[40, "gammapy.astro.population.YusifovKucuk2004B.parameter_constraints", false]], "parameterestimator (class in gammapy.estimators)": [[125, "gammapy.estimators.ParameterEstimator", false]], "parameters (class in gammapy.modeling)": [[202, "gammapy.modeling.Parameters", false]], "parameters (gammapy.astro.darkmatter.darkmatterannihilationspectralmodel attribute)": [[19, "gammapy.astro.darkmatter.DarkMatterAnnihilationSpectralModel.parameters", false]], "parameters (gammapy.astro.darkmatter.darkmatterdecayspectralmodel attribute)": [[20, "gammapy.astro.darkmatter.DarkMatterDecaySpectralModel.parameters", false]], "parameters (gammapy.astro.darkmatter.primaryflux attribute)": [[26, "gammapy.astro.darkmatter.PrimaryFlux.parameters", false]], "parameters (gammapy.astro.population.casebattacharya1998 attribute)": [[28, "gammapy.astro.population.CaseBattacharya1998.parameters", false]], "parameters (gammapy.astro.population.exponential attribute)": [[29, "gammapy.astro.population.Exponential.parameters", false]], "parameters (gammapy.astro.population.faucherkaspi2006 attribute)": [[30, "gammapy.astro.population.FaucherKaspi2006.parameters", false]], "parameters (gammapy.astro.population.faucherkaspi2006velocitybimodal attribute)": [[31, "gammapy.astro.population.FaucherKaspi2006VelocityBimodal.parameters", false]], "parameters (gammapy.astro.population.faucherkaspi2006velocitymaxwellian attribute)": [[32, "gammapy.astro.population.FaucherKaspi2006VelocityMaxwellian.parameters", false]], "parameters (gammapy.astro.population.lorimer2006 attribute)": [[35, "gammapy.astro.population.Lorimer2006.parameters", false]], "parameters (gammapy.astro.population.paczynski1990 attribute)": [[36, "gammapy.astro.population.Paczynski1990.parameters", false]], "parameters (gammapy.astro.population.paczynski1990velocity attribute)": [[37, "gammapy.astro.population.Paczynski1990Velocity.parameters", false]], "parameters (gammapy.astro.population.yusifovkucuk2004 attribute)": [[39, "gammapy.astro.population.YusifovKucuk2004.parameters", false]], "parameters (gammapy.astro.population.yusifovkucuk2004b attribute)": [[40, "gammapy.astro.population.YusifovKucuk2004B.parameters", false]], "parameters (gammapy.datasets.datasets attribute)": [[95, "gammapy.datasets.Datasets.parameters", false]], "parameters (gammapy.modeling.models.brokenpowerlawspectralmodel attribute)": [[205, "gammapy.modeling.models.BrokenPowerLawSpectralModel.parameters", false]], "parameters (gammapy.modeling.models.compoundspectralmodel attribute)": [[206, "gammapy.modeling.models.CompoundSpectralModel.parameters", false]], "parameters (gammapy.modeling.models.constantfluxspatialmodel attribute)": [[207, "gammapy.modeling.models.ConstantFluxSpatialModel.parameters", false]], "parameters (gammapy.modeling.models.constantspatialmodel attribute)": [[208, "gammapy.modeling.models.ConstantSpatialModel.parameters", false]], "parameters (gammapy.modeling.models.constantspectralmodel attribute)": [[209, "gammapy.modeling.models.ConstantSpectralModel.parameters", false]], "parameters (gammapy.modeling.models.constanttemporalmodel attribute)": [[210, "gammapy.modeling.models.ConstantTemporalModel.parameters", false]], "parameters (gammapy.modeling.models.datasetmodels attribute)": [[211, "gammapy.modeling.models.DatasetModels.parameters", false]], "parameters (gammapy.modeling.models.diskspatialmodel attribute)": [[212, "gammapy.modeling.models.DiskSpatialModel.parameters", false]], "parameters (gammapy.modeling.models.eblabsorptionnormspectralmodel attribute)": [[213, "gammapy.modeling.models.EBLAbsorptionNormSpectralModel.parameters", false]], "parameters (gammapy.modeling.models.expcutoffpowerlaw3fglspectralmodel attribute)": [[215, "gammapy.modeling.models.ExpCutoffPowerLaw3FGLSpectralModel.parameters", false]], "parameters (gammapy.modeling.models.expcutoffpowerlawnormspectralmodel attribute)": [[216, "gammapy.modeling.models.ExpCutoffPowerLawNormSpectralModel.parameters", false]], "parameters (gammapy.modeling.models.expcutoffpowerlawspectralmodel attribute)": [[217, "gammapy.modeling.models.ExpCutoffPowerLawSpectralModel.parameters", false]], "parameters (gammapy.modeling.models.expdecaytemporalmodel attribute)": [[218, "gammapy.modeling.models.ExpDecayTemporalModel.parameters", false]], "parameters (gammapy.modeling.models.fovbackgroundmodel attribute)": [[219, "gammapy.modeling.models.FoVBackgroundModel.parameters", false]], "parameters (gammapy.modeling.models.gaussianspatialmodel attribute)": [[220, "gammapy.modeling.models.GaussianSpatialModel.parameters", false]], "parameters (gammapy.modeling.models.gaussianspectralmodel attribute)": [[221, "gammapy.modeling.models.GaussianSpectralModel.parameters", false]], "parameters (gammapy.modeling.models.gaussiantemporalmodel attribute)": [[222, "gammapy.modeling.models.GaussianTemporalModel.parameters", false]], "parameters (gammapy.modeling.models.generalizedgaussianspatialmodel attribute)": [[223, "gammapy.modeling.models.GeneralizedGaussianSpatialModel.parameters", false]], "parameters (gammapy.modeling.models.generalizedgaussiantemporalmodel attribute)": [[224, "gammapy.modeling.models.GeneralizedGaussianTemporalModel.parameters", false]], "parameters (gammapy.modeling.models.lightcurvetemplatetemporalmodel attribute)": [[225, "gammapy.modeling.models.LightCurveTemplateTemporalModel.parameters", false]], "parameters (gammapy.modeling.models.lineartemporalmodel attribute)": [[226, "gammapy.modeling.models.LinearTemporalModel.parameters", false]], "parameters (gammapy.modeling.models.logparabolanormspectralmodel attribute)": [[227, "gammapy.modeling.models.LogParabolaNormSpectralModel.parameters", false]], "parameters (gammapy.modeling.models.logparabolaspectralmodel attribute)": [[228, "gammapy.modeling.models.LogParabolaSpectralModel.parameters", false]], "parameters (gammapy.modeling.models.meyercrabspectralmodel attribute)": [[230, "gammapy.modeling.models.MeyerCrabSpectralModel.parameters", false]], "parameters (gammapy.modeling.models.modelbase attribute)": [[232, "gammapy.modeling.models.ModelBase.parameters", false]], "parameters (gammapy.modeling.models.models attribute)": [[233, "gammapy.modeling.models.Models.parameters", false]], "parameters (gammapy.modeling.models.naimaspectralmodel attribute)": [[234, "gammapy.modeling.models.NaimaSpectralModel.parameters", false]], "parameters (gammapy.modeling.models.piecewisenormspatialmodel attribute)": [[235, "gammapy.modeling.models.PiecewiseNormSpatialModel.parameters", false]], "parameters (gammapy.modeling.models.piecewisenormspectralmodel attribute)": [[236, "gammapy.modeling.models.PiecewiseNormSpectralModel.parameters", false]], "parameters (gammapy.modeling.models.pointspatialmodel attribute)": [[237, "gammapy.modeling.models.PointSpatialModel.parameters", false]], "parameters (gammapy.modeling.models.powerlaw2spectralmodel attribute)": [[238, "gammapy.modeling.models.PowerLaw2SpectralModel.parameters", false]], "parameters (gammapy.modeling.models.powerlawnormspectralmodel attribute)": [[239, "gammapy.modeling.models.PowerLawNormSpectralModel.parameters", false]], "parameters (gammapy.modeling.models.powerlawspectralmodel attribute)": [[240, "gammapy.modeling.models.PowerLawSpectralModel.parameters", false]], "parameters (gammapy.modeling.models.powerlawtemporalmodel attribute)": [[241, "gammapy.modeling.models.PowerLawTemporalModel.parameters", false]], "parameters (gammapy.modeling.models.scalespectralmodel attribute)": [[244, "gammapy.modeling.models.ScaleSpectralModel.parameters", false]], "parameters (gammapy.modeling.models.shell2spatialmodel attribute)": [[245, "gammapy.modeling.models.Shell2SpatialModel.parameters", false]], "parameters (gammapy.modeling.models.shellspatialmodel attribute)": [[246, "gammapy.modeling.models.ShellSpatialModel.parameters", false]], "parameters (gammapy.modeling.models.sinetemporalmodel attribute)": [[247, "gammapy.modeling.models.SineTemporalModel.parameters", false]], "parameters (gammapy.modeling.models.skymodel attribute)": [[248, "gammapy.modeling.models.SkyModel.parameters", false]], "parameters (gammapy.modeling.models.smoothbrokenpowerlawspectralmodel attribute)": [[249, "gammapy.modeling.models.SmoothBrokenPowerLawSpectralModel.parameters", false]], "parameters (gammapy.modeling.models.spatialmodel attribute)": [[250, "gammapy.modeling.models.SpatialModel.parameters", false]], "parameters (gammapy.modeling.models.spectralmodel attribute)": [[251, "gammapy.modeling.models.SpectralModel.parameters", false]], "parameters (gammapy.modeling.models.superexpcutoffpowerlaw3fglspectralmodel attribute)": [[252, "gammapy.modeling.models.SuperExpCutoffPowerLaw3FGLSpectralModel.parameters", false]], "parameters (gammapy.modeling.models.superexpcutoffpowerlaw4fgldr3spectralmodel attribute)": [[253, "gammapy.modeling.models.SuperExpCutoffPowerLaw4FGLDR3SpectralModel.parameters", false]], "parameters (gammapy.modeling.models.superexpcutoffpowerlaw4fglspectralmodel attribute)": [[254, "gammapy.modeling.models.SuperExpCutoffPowerLaw4FGLSpectralModel.parameters", false]], "parameters (gammapy.modeling.models.templatendspatialmodel attribute)": [[256, "gammapy.modeling.models.TemplateNDSpatialModel.parameters", false]], "parameters (gammapy.modeling.models.templatendspectralmodel attribute)": [[257, "gammapy.modeling.models.TemplateNDSpectralModel.parameters", false]], "parameters (gammapy.modeling.models.templatenpredmodel attribute)": [[258, "gammapy.modeling.models.TemplateNPredModel.parameters", false]], "parameters (gammapy.modeling.models.templatephasecurvetemporalmodel attribute)": [[259, "gammapy.modeling.models.TemplatePhaseCurveTemporalModel.parameters", false]], "parameters (gammapy.modeling.models.templatespatialmodel attribute)": [[260, "gammapy.modeling.models.TemplateSpatialModel.parameters", false]], "parameters (gammapy.modeling.models.templatespectralmodel attribute)": [[261, "gammapy.modeling.models.TemplateSpectralModel.parameters", false]], "parameters (gammapy.modeling.models.temporalmodel attribute)": [[262, "gammapy.modeling.models.TemporalModel.parameters", false]], "parameters_unique_names (gammapy.modeling.models.datasetmodels attribute)": [[211, "gammapy.modeling.models.DatasetModels.parameters_unique_names", false]], "parameters_unique_names (gammapy.modeling.models.models attribute)": [[233, "gammapy.modeling.models.Models.parameters_unique_names", false]], "parametricpsf (class in gammapy.irf)": [[154, "gammapy.irf.ParametricPSF", false]], "parse_file() (gammapy.analysis.analysisconfig class method)": [[16, "gammapy.analysis.AnalysisConfig.parse_file", false]], "parse_file() (gammapy.data.eventlistmetadata class method)": [[80, "gammapy.data.EventListMetaData.parse_file", false]], "parse_file() (gammapy.datasets.mapdatasetmetadata class method)": [[99, "gammapy.datasets.MapDatasetMetaData.parse_file", false]], "parse_file() (gammapy.estimators.fluxmetadata class method)": [[118, "gammapy.estimators.FluxMetaData.parse_file", false]], "parse_obj() (gammapy.analysis.analysisconfig class method)": [[16, "gammapy.analysis.AnalysisConfig.parse_obj", false]], "parse_obj() (gammapy.data.eventlistmetadata class method)": [[80, "gammapy.data.EventListMetaData.parse_obj", false]], "parse_obj() (gammapy.datasets.mapdatasetmetadata class method)": [[99, "gammapy.datasets.MapDatasetMetaData.parse_obj", false]], "parse_obj() (gammapy.estimators.fluxmetadata class method)": [[118, "gammapy.estimators.FluxMetaData.parse_obj", false]], "parse_raw() (gammapy.analysis.analysisconfig class method)": [[16, "gammapy.analysis.AnalysisConfig.parse_raw", false]], "parse_raw() (gammapy.data.eventlistmetadata class method)": [[80, "gammapy.data.EventListMetaData.parse_raw", false]], "parse_raw() (gammapy.datasets.mapdatasetmetadata class method)": [[99, "gammapy.datasets.MapDatasetMetaData.parse_raw", false]], "parse_raw() (gammapy.estimators.fluxmetadata class method)": [[118, "gammapy.estimators.FluxMetaData.parse_raw", false]], "particle_distribution (gammapy.modeling.models.naimaspectralmodel attribute)": [[234, "gammapy.modeling.models.NaimaSpectralModel.particle_distribution", false]], "path() (gammapy.utils.fits.hdulocation method)": [[298, "gammapy.utils.fits.HDULocation.path", false]], "pdf() (in module gammapy.utils.random)": [[316, "gammapy.utils.random.pdf", false]], "pdf_in_safe_range() (gammapy.irf.edispkernel method)": [[140, "gammapy.irf.EDispKernel.pdf_in_safe_range", false]], "pdf_matrix (gammapy.irf.edispkernel attribute)": [[140, "gammapy.irf.EDispKernel.pdf_matrix", false]], "peak_brightness() (gammapy.catalog.sourcecataloglargescalehgps method)": [[66, "gammapy.catalog.SourceCatalogLargeScaleHGPS.peak_brightness", false]], "peak_brightness_error() (gammapy.catalog.sourcecataloglargescalehgps method)": [[66, "gammapy.catalog.SourceCatalogLargeScaleHGPS.peak_brightness_error", false]], "peak_latitude() (gammapy.catalog.sourcecataloglargescalehgps method)": [[66, "gammapy.catalog.SourceCatalogLargeScaleHGPS.peak_latitude", false]], "peak_latitude_error() (gammapy.catalog.sourcecataloglargescalehgps method)": [[66, "gammapy.catalog.SourceCatalogLargeScaleHGPS.peak_latitude_error", false]], "peek() (gammapy.data.eventlist method)": [[79, "gammapy.data.EventList.peek", false]], "peek() (gammapy.data.observation method)": [[84, "gammapy.data.Observation.peek", false]], "peek() (gammapy.datasets.mapdataset method)": [[97, "gammapy.datasets.MapDataset.peek", false]], "peek() (gammapy.datasets.mapdatasetonoff method)": [[100, "gammapy.datasets.MapDatasetOnOff.peek", false]], "peek() (gammapy.datasets.spectrumdataset method)": [[104, "gammapy.datasets.SpectrumDataset.peek", false]], "peek() (gammapy.datasets.spectrumdatasetonoff method)": [[105, "gammapy.datasets.SpectrumDatasetOnOff.peek", false]], "peek() (gammapy.estimators.imageprofile method)": [[122, "gammapy.estimators.ImageProfile.peek", false]], "peek() (gammapy.irf.background2d method)": [[137, "gammapy.irf.Background2D.peek", false]], "peek() (gammapy.irf.background3d method)": [[138, "gammapy.irf.Background3D.peek", false]], "peek() (gammapy.irf.edispkernel method)": [[140, "gammapy.irf.EDispKernel.peek", false]], "peek() (gammapy.irf.edispkernelmap method)": [[141, "gammapy.irf.EDispKernelMap.peek", false]], "peek() (gammapy.irf.edispmap method)": [[142, "gammapy.irf.EDispMap.peek", false]], "peek() (gammapy.irf.effectiveareatable2d method)": [[143, "gammapy.irf.EffectiveAreaTable2D.peek", false]], "peek() (gammapy.irf.energydependentmultigausspsf method)": [[144, "gammapy.irf.EnergyDependentMultiGaussPSF.peek", false]], "peek() (gammapy.irf.energydispersion2d method)": [[145, "gammapy.irf.EnergyDispersion2D.peek", false]], "peek() (gammapy.irf.parametricpsf method)": [[154, "gammapy.irf.ParametricPSF.peek", false]], "peek() (gammapy.irf.psf3d method)": [[150, "gammapy.irf.PSF3D.peek", false]], "peek() (gammapy.irf.psfkernel method)": [[151, "gammapy.irf.PSFKernel.peek", false]], "peek() (gammapy.irf.psfking method)": [[152, "gammapy.irf.PSFKing.peek", false]], "peek() (gammapy.irf.psfmap method)": [[153, "gammapy.irf.PSFMap.peek", false]], "peek() (gammapy.irf.recopsfmap method)": [[156, "gammapy.irf.RecoPSFMap.peek", false]], "period() (gammapy.astro.source.pulsar method)": [[51, "gammapy.astro.source.Pulsar.period", false]], "period_dot() (gammapy.astro.source.pulsar method)": [[51, "gammapy.astro.source.Pulsar.period_dot", false]], "pformat() (gammapy.data.hduindextable method)": [[83, "gammapy.data.HDUIndexTable.pformat", false]], "pformat() (gammapy.data.observationtable method)": [[86, "gammapy.data.ObservationTable.pformat", false]], "pformat_all() (gammapy.data.hduindextable method)": [[83, "gammapy.data.HDUIndexTable.pformat_all", false]], "pformat_all() (gammapy.data.observationtable method)": [[86, "gammapy.data.ObservationTable.pformat_all", false]], "phasebackgroundmaker (class in gammapy.makers)": [[164, "gammapy.makers.PhaseBackgroundMaker", false]], "phi (gammapy.maps.mapcoord attribute)": [[189, "gammapy.maps.MapCoord.phi", false]], "phi (gammapy.modeling.models.diskspatialmodel attribute)": [[212, "gammapy.modeling.models.DiskSpatialModel.phi", false]], "phi (gammapy.modeling.models.gaussianspatialmodel attribute)": [[220, "gammapy.modeling.models.GaussianSpatialModel.phi", false]], "phi (gammapy.modeling.models.generalizedgaussianspatialmodel attribute)": [[223, "gammapy.modeling.models.GeneralizedGaussianSpatialModel.phi", false]], "phi_0 (gammapy.modeling.models.constantfluxspatialmodel attribute)": [[207, "gammapy.modeling.models.ConstantFluxSpatialModel.phi_0", false]], "phi_0 (gammapy.modeling.models.constantspatialmodel attribute)": [[208, "gammapy.modeling.models.ConstantSpatialModel.phi_0", false]], "phi_0 (gammapy.modeling.models.diskspatialmodel attribute)": [[212, "gammapy.modeling.models.DiskSpatialModel.phi_0", false]], "phi_0 (gammapy.modeling.models.gaussianspatialmodel attribute)": [[220, "gammapy.modeling.models.GaussianSpatialModel.phi_0", false]], "phi_0 (gammapy.modeling.models.generalizedgaussianspatialmodel attribute)": [[223, "gammapy.modeling.models.GeneralizedGaussianSpatialModel.phi_0", false]], "phi_0 (gammapy.modeling.models.piecewisenormspatialmodel attribute)": [[235, "gammapy.modeling.models.PiecewiseNormSpatialModel.phi_0", false]], "phi_0 (gammapy.modeling.models.pointspatialmodel attribute)": [[237, "gammapy.modeling.models.PointSpatialModel.phi_0", false]], "phi_0 (gammapy.modeling.models.shell2spatialmodel attribute)": [[245, "gammapy.modeling.models.Shell2SpatialModel.phi_0", false]], "phi_0 (gammapy.modeling.models.shellspatialmodel attribute)": [[246, "gammapy.modeling.models.ShellSpatialModel.phi_0", false]], "phi_0 (gammapy.modeling.models.spatialmodel attribute)": [[250, "gammapy.modeling.models.SpatialModel.phi_0", false]], "phi_0 (gammapy.modeling.models.templatendspatialmodel attribute)": [[256, "gammapy.modeling.models.TemplateNDSpatialModel.phi_0", false]], "phi_0 (gammapy.modeling.models.templatespatialmodel attribute)": [[260, "gammapy.modeling.models.TemplateSpatialModel.phi_0", false]], "phi_ref (gammapy.modeling.models.templatephasecurvetemporalmodel attribute)": [[259, "gammapy.modeling.models.TemplatePhaseCurveTemporalModel.phi_ref", false]], "piecewisenormspatialmodel (class in gammapy.modeling.models)": [[235, "gammapy.modeling.models.PiecewiseNormSpatialModel", false]], "piecewisenormspectralmodel (class in gammapy.modeling.models)": [[236, "gammapy.modeling.models.PiecewiseNormSpectralModel", false]], "pivot_energy (gammapy.astro.darkmatter.darkmatterannihilationspectralmodel attribute)": [[19, "gammapy.astro.darkmatter.DarkMatterAnnihilationSpectralModel.pivot_energy", false]], "pivot_energy (gammapy.astro.darkmatter.darkmatterdecayspectralmodel attribute)": [[20, "gammapy.astro.darkmatter.DarkMatterDecaySpectralModel.pivot_energy", false]], "pivot_energy (gammapy.astro.darkmatter.primaryflux attribute)": [[26, "gammapy.astro.darkmatter.PrimaryFlux.pivot_energy", false]], "pivot_energy (gammapy.modeling.models.brokenpowerlawspectralmodel attribute)": [[205, "gammapy.modeling.models.BrokenPowerLawSpectralModel.pivot_energy", false]], "pivot_energy (gammapy.modeling.models.compoundspectralmodel attribute)": [[206, "gammapy.modeling.models.CompoundSpectralModel.pivot_energy", false]], "pivot_energy (gammapy.modeling.models.constantspectralmodel attribute)": [[209, "gammapy.modeling.models.ConstantSpectralModel.pivot_energy", false]], "pivot_energy (gammapy.modeling.models.eblabsorptionnormspectralmodel attribute)": [[213, "gammapy.modeling.models.EBLAbsorptionNormSpectralModel.pivot_energy", false]], "pivot_energy (gammapy.modeling.models.expcutoffpowerlaw3fglspectralmodel attribute)": [[215, "gammapy.modeling.models.ExpCutoffPowerLaw3FGLSpectralModel.pivot_energy", false]], "pivot_energy (gammapy.modeling.models.expcutoffpowerlawnormspectralmodel attribute)": [[216, "gammapy.modeling.models.ExpCutoffPowerLawNormSpectralModel.pivot_energy", false]], "pivot_energy (gammapy.modeling.models.expcutoffpowerlawspectralmodel attribute)": [[217, "gammapy.modeling.models.ExpCutoffPowerLawSpectralModel.pivot_energy", false]], "pivot_energy (gammapy.modeling.models.gaussianspectralmodel attribute)": [[221, "gammapy.modeling.models.GaussianSpectralModel.pivot_energy", false]], "pivot_energy (gammapy.modeling.models.logparabolanormspectralmodel attribute)": [[227, "gammapy.modeling.models.LogParabolaNormSpectralModel.pivot_energy", false]], "pivot_energy (gammapy.modeling.models.logparabolaspectralmodel attribute)": [[228, "gammapy.modeling.models.LogParabolaSpectralModel.pivot_energy", false]], "pivot_energy (gammapy.modeling.models.meyercrabspectralmodel attribute)": [[230, "gammapy.modeling.models.MeyerCrabSpectralModel.pivot_energy", false]], "pivot_energy (gammapy.modeling.models.naimaspectralmodel attribute)": [[234, "gammapy.modeling.models.NaimaSpectralModel.pivot_energy", false]], "pivot_energy (gammapy.modeling.models.piecewisenormspectralmodel attribute)": [[236, "gammapy.modeling.models.PiecewiseNormSpectralModel.pivot_energy", false]], "pivot_energy (gammapy.modeling.models.powerlaw2spectralmodel attribute)": [[238, "gammapy.modeling.models.PowerLaw2SpectralModel.pivot_energy", false]], "pivot_energy (gammapy.modeling.models.powerlawnormspectralmodel attribute)": [[239, "gammapy.modeling.models.PowerLawNormSpectralModel.pivot_energy", false]], "pivot_energy (gammapy.modeling.models.powerlawspectralmodel attribute)": [[240, "gammapy.modeling.models.PowerLawSpectralModel.pivot_energy", false]], "pivot_energy (gammapy.modeling.models.scalespectralmodel attribute)": [[244, "gammapy.modeling.models.ScaleSpectralModel.pivot_energy", false]], "pivot_energy (gammapy.modeling.models.smoothbrokenpowerlawspectralmodel attribute)": [[249, "gammapy.modeling.models.SmoothBrokenPowerLawSpectralModel.pivot_energy", false]], "pivot_energy (gammapy.modeling.models.spectralmodel attribute)": [[251, "gammapy.modeling.models.SpectralModel.pivot_energy", false]], "pivot_energy (gammapy.modeling.models.superexpcutoffpowerlaw3fglspectralmodel attribute)": [[252, "gammapy.modeling.models.SuperExpCutoffPowerLaw3FGLSpectralModel.pivot_energy", false]], "pivot_energy (gammapy.modeling.models.superexpcutoffpowerlaw4fgldr3spectralmodel attribute)": [[253, "gammapy.modeling.models.SuperExpCutoffPowerLaw4FGLDR3SpectralModel.pivot_energy", false]], "pivot_energy (gammapy.modeling.models.superexpcutoffpowerlaw4fglspectralmodel attribute)": [[254, "gammapy.modeling.models.SuperExpCutoffPowerLaw4FGLSpectralModel.pivot_energy", false]], "pivot_energy (gammapy.modeling.models.templatendspectralmodel attribute)": [[257, "gammapy.modeling.models.TemplateNDSpectralModel.pivot_energy", false]], "pivot_energy (gammapy.modeling.models.templatespectralmodel attribute)": [[261, "gammapy.modeling.models.TemplateSpectralModel.pivot_energy", false]], "pix_to_coord() (gammapy.maps.geom method)": [[181, "gammapy.maps.Geom.pix_to_coord", false]], "pix_to_coord() (gammapy.maps.hpxgeom method)": [[182, "gammapy.maps.HpxGeom.pix_to_coord", false]], "pix_to_coord() (gammapy.maps.labelmapaxis method)": [[185, "gammapy.maps.LabelMapAxis.pix_to_coord", false]], "pix_to_coord() (gammapy.maps.mapaxes method)": [[187, "gammapy.maps.MapAxes.pix_to_coord", false]], "pix_to_coord() (gammapy.maps.mapaxis method)": [[188, "gammapy.maps.MapAxis.pix_to_coord", false]], "pix_to_coord() (gammapy.maps.regiongeom method)": [[191, "gammapy.maps.RegionGeom.pix_to_coord", false]], "pix_to_coord() (gammapy.maps.timemapaxis method)": [[193, "gammapy.maps.TimeMapAxis.pix_to_coord", false]], "pix_to_coord() (gammapy.maps.wcsgeom method)": [[194, "gammapy.maps.WcsGeom.pix_to_coord", false]], "pix_to_idx() (gammapy.maps.geom method)": [[181, "gammapy.maps.Geom.pix_to_idx", false]], "pix_to_idx() (gammapy.maps.hpxgeom method)": [[182, "gammapy.maps.HpxGeom.pix_to_idx", false]], "pix_to_idx() (gammapy.maps.labelmapaxis method)": [[185, "gammapy.maps.LabelMapAxis.pix_to_idx", false]], "pix_to_idx() (gammapy.maps.mapaxes method)": [[187, "gammapy.maps.MapAxes.pix_to_idx", false]], "pix_to_idx() (gammapy.maps.mapaxis method)": [[188, "gammapy.maps.MapAxis.pix_to_idx", false]], "pix_to_idx() (gammapy.maps.regiongeom method)": [[191, "gammapy.maps.RegionGeom.pix_to_idx", false]], "pix_to_idx() (gammapy.maps.timemapaxis static method)": [[193, "gammapy.maps.TimeMapAxis.pix_to_idx", false]], "pix_to_idx() (gammapy.maps.wcsgeom method)": [[194, "gammapy.maps.WcsGeom.pix_to_idx", false]], "pixel_area (gammapy.maps.wcsgeom attribute)": [[194, "gammapy.maps.WcsGeom.pixel_area", false]], "pixel_scales (gammapy.maps.hpxgeom attribute)": [[182, "gammapy.maps.HpxGeom.pixel_scales", false]], "pixel_scales (gammapy.maps.wcsgeom attribute)": [[194, "gammapy.maps.WcsGeom.pixel_scales", false]], "plot() (gammapy.astro.darkmatter.darkmatterannihilationspectralmodel method)": [[19, "gammapy.astro.darkmatter.DarkMatterAnnihilationSpectralModel.plot", false]], "plot() (gammapy.astro.darkmatter.darkmatterdecayspectralmodel method)": [[20, "gammapy.astro.darkmatter.DarkMatterDecaySpectralModel.plot", false]], "plot() (gammapy.astro.darkmatter.primaryflux method)": [[26, "gammapy.astro.darkmatter.PrimaryFlux.plot", false]], "plot() (gammapy.estimators.fluxpoints method)": [[119, "gammapy.estimators.FluxPoints.plot", false]], "plot() (gammapy.estimators.imageprofile method)": [[122, "gammapy.estimators.ImageProfile.plot", false]], "plot() (gammapy.irf.background2d method)": [[137, "gammapy.irf.Background2D.plot", false]], "plot() (gammapy.irf.effectiveareatable2d method)": [[143, "gammapy.irf.EffectiveAreaTable2D.plot", false]], "plot() (gammapy.maps.hpxndmap method)": [[184, "gammapy.maps.HpxNDMap.plot", false]], "plot() (gammapy.maps.regionndmap method)": [[192, "gammapy.maps.RegionNDMap.plot", false]], "plot() (gammapy.maps.wcsndmap method)": [[196, "gammapy.maps.WcsNDMap.plot", false]], "plot() (gammapy.modeling.models.brokenpowerlawspectralmodel method)": [[205, "gammapy.modeling.models.BrokenPowerLawSpectralModel.plot", false]], "plot() (gammapy.modeling.models.compoundspectralmodel method)": [[206, "gammapy.modeling.models.CompoundSpectralModel.plot", false]], "plot() (gammapy.modeling.models.constantfluxspatialmodel method)": [[207, "gammapy.modeling.models.ConstantFluxSpatialModel.plot", false]], "plot() (gammapy.modeling.models.constantspatialmodel method)": [[208, "gammapy.modeling.models.ConstantSpatialModel.plot", false]], "plot() (gammapy.modeling.models.constantspectralmodel method)": [[209, "gammapy.modeling.models.ConstantSpectralModel.plot", false]], "plot() (gammapy.modeling.models.constanttemporalmodel method)": [[210, "gammapy.modeling.models.ConstantTemporalModel.plot", false]], "plot() (gammapy.modeling.models.diskspatialmodel method)": [[212, "gammapy.modeling.models.DiskSpatialModel.plot", false]], "plot() (gammapy.modeling.models.eblabsorptionnormspectralmodel method)": [[213, "gammapy.modeling.models.EBLAbsorptionNormSpectralModel.plot", false]], "plot() (gammapy.modeling.models.expcutoffpowerlaw3fglspectralmodel method)": [[215, "gammapy.modeling.models.ExpCutoffPowerLaw3FGLSpectralModel.plot", false]], "plot() (gammapy.modeling.models.expcutoffpowerlawnormspectralmodel method)": [[216, "gammapy.modeling.models.ExpCutoffPowerLawNormSpectralModel.plot", false]], "plot() (gammapy.modeling.models.expcutoffpowerlawspectralmodel method)": [[217, "gammapy.modeling.models.ExpCutoffPowerLawSpectralModel.plot", false]], "plot() (gammapy.modeling.models.expdecaytemporalmodel method)": [[218, "gammapy.modeling.models.ExpDecayTemporalModel.plot", false]], "plot() (gammapy.modeling.models.gaussianspatialmodel method)": [[220, "gammapy.modeling.models.GaussianSpatialModel.plot", false]], "plot() (gammapy.modeling.models.gaussianspectralmodel method)": [[221, "gammapy.modeling.models.GaussianSpectralModel.plot", false]], "plot() (gammapy.modeling.models.gaussiantemporalmodel method)": [[222, "gammapy.modeling.models.GaussianTemporalModel.plot", false]], "plot() (gammapy.modeling.models.generalizedgaussianspatialmodel method)": [[223, "gammapy.modeling.models.GeneralizedGaussianSpatialModel.plot", false]], "plot() (gammapy.modeling.models.generalizedgaussiantemporalmodel method)": [[224, "gammapy.modeling.models.GeneralizedGaussianTemporalModel.plot", false]], "plot() (gammapy.modeling.models.lightcurvetemplatetemporalmodel method)": [[225, "gammapy.modeling.models.LightCurveTemplateTemporalModel.plot", false]], "plot() (gammapy.modeling.models.lineartemporalmodel method)": [[226, "gammapy.modeling.models.LinearTemporalModel.plot", false]], "plot() (gammapy.modeling.models.logparabolanormspectralmodel method)": [[227, "gammapy.modeling.models.LogParabolaNormSpectralModel.plot", false]], "plot() (gammapy.modeling.models.logparabolaspectralmodel method)": [[228, "gammapy.modeling.models.LogParabolaSpectralModel.plot", false]], "plot() (gammapy.modeling.models.meyercrabspectralmodel method)": [[230, "gammapy.modeling.models.MeyerCrabSpectralModel.plot", false]], "plot() (gammapy.modeling.models.naimaspectralmodel method)": [[234, "gammapy.modeling.models.NaimaSpectralModel.plot", false]], "plot() (gammapy.modeling.models.piecewisenormspatialmodel method)": [[235, "gammapy.modeling.models.PiecewiseNormSpatialModel.plot", false]], "plot() (gammapy.modeling.models.piecewisenormspectralmodel method)": [[236, "gammapy.modeling.models.PiecewiseNormSpectralModel.plot", false]], "plot() (gammapy.modeling.models.pointspatialmodel method)": [[237, "gammapy.modeling.models.PointSpatialModel.plot", false]], "plot() (gammapy.modeling.models.powerlaw2spectralmodel method)": [[238, "gammapy.modeling.models.PowerLaw2SpectralModel.plot", false]], "plot() (gammapy.modeling.models.powerlawnormspectralmodel method)": [[239, "gammapy.modeling.models.PowerLawNormSpectralModel.plot", false]], "plot() (gammapy.modeling.models.powerlawspectralmodel method)": [[240, "gammapy.modeling.models.PowerLawSpectralModel.plot", false]], "plot() (gammapy.modeling.models.powerlawtemporalmodel method)": [[241, "gammapy.modeling.models.PowerLawTemporalModel.plot", false]], "plot() (gammapy.modeling.models.scalespectralmodel method)": [[244, "gammapy.modeling.models.ScaleSpectralModel.plot", false]], "plot() (gammapy.modeling.models.shell2spatialmodel method)": [[245, "gammapy.modeling.models.Shell2SpatialModel.plot", false]], "plot() (gammapy.modeling.models.shellspatialmodel method)": [[246, "gammapy.modeling.models.ShellSpatialModel.plot", false]], "plot() (gammapy.modeling.models.sinetemporalmodel method)": [[247, "gammapy.modeling.models.SineTemporalModel.plot", false]], "plot() (gammapy.modeling.models.smoothbrokenpowerlawspectralmodel method)": [[249, "gammapy.modeling.models.SmoothBrokenPowerLawSpectralModel.plot", false]], "plot() (gammapy.modeling.models.spatialmodel method)": [[250, "gammapy.modeling.models.SpatialModel.plot", false]], "plot() (gammapy.modeling.models.spectralmodel method)": [[251, "gammapy.modeling.models.SpectralModel.plot", false]], "plot() (gammapy.modeling.models.superexpcutoffpowerlaw3fglspectralmodel method)": [[252, "gammapy.modeling.models.SuperExpCutoffPowerLaw3FGLSpectralModel.plot", false]], "plot() (gammapy.modeling.models.superexpcutoffpowerlaw4fgldr3spectralmodel method)": [[253, "gammapy.modeling.models.SuperExpCutoffPowerLaw4FGLDR3SpectralModel.plot", false]], "plot() (gammapy.modeling.models.superexpcutoffpowerlaw4fglspectralmodel method)": [[254, "gammapy.modeling.models.SuperExpCutoffPowerLaw4FGLSpectralModel.plot", false]], "plot() (gammapy.modeling.models.templatendspatialmodel method)": [[256, "gammapy.modeling.models.TemplateNDSpatialModel.plot", false]], "plot() (gammapy.modeling.models.templatendspectralmodel method)": [[257, "gammapy.modeling.models.TemplateNDSpectralModel.plot", false]], "plot() (gammapy.modeling.models.templatephasecurvetemporalmodel method)": [[259, "gammapy.modeling.models.TemplatePhaseCurveTemporalModel.plot", false]], "plot() (gammapy.modeling.models.templatespatialmodel method)": [[260, "gammapy.modeling.models.TemplateSpatialModel.plot", false]], "plot() (gammapy.modeling.models.templatespectralmodel method)": [[261, "gammapy.modeling.models.TemplateSpectralModel.plot", false]], "plot() (gammapy.modeling.models.temporalmodel method)": [[262, "gammapy.modeling.models.TemporalModel.plot", false]], "plot() (gammapy.visualization.mappanelplotter method)": [[348, "gammapy.visualization.MapPanelPlotter.plot", false]], "plot_at_energy() (gammapy.irf.background2d method)": [[137, "gammapy.irf.Background2D.plot_at_energy", false]], "plot_at_energy() (gammapy.irf.background3d method)": [[138, "gammapy.irf.Background3D.plot_at_energy", false]], "plot_bias() (gammapy.irf.edispkernel method)": [[140, "gammapy.irf.EDispKernel.plot_bias", false]], "plot_bias() (gammapy.irf.energydispersion2d method)": [[145, "gammapy.irf.EnergyDispersion2D.plot_bias", false]], "plot_containment_radius() (gammapy.irf.energydependentmultigausspsf method)": [[144, "gammapy.irf.EnergyDependentMultiGaussPSF.plot_containment_radius", false]], "plot_containment_radius() (gammapy.irf.parametricpsf method)": [[154, "gammapy.irf.ParametricPSF.plot_containment_radius", false]], "plot_containment_radius() (gammapy.irf.psf3d method)": [[150, "gammapy.irf.PSF3D.plot_containment_radius", false]], "plot_containment_radius() (gammapy.irf.psfking method)": [[152, "gammapy.irf.PSFKing.plot_containment_radius", false]], "plot_containment_radius_vs_energy() (gammapy.irf.energydependentmultigausspsf method)": [[144, "gammapy.irf.EnergyDependentMultiGaussPSF.plot_containment_radius_vs_energy", false]], "plot_containment_radius_vs_energy() (gammapy.irf.parametricpsf method)": [[154, "gammapy.irf.ParametricPSF.plot_containment_radius_vs_energy", false]], "plot_containment_radius_vs_energy() (gammapy.irf.psf3d method)": [[150, "gammapy.irf.PSF3D.plot_containment_radius_vs_energy", false]], "plot_containment_radius_vs_energy() (gammapy.irf.psfking method)": [[152, "gammapy.irf.PSFKing.plot_containment_radius_vs_energy", false]], "plot_containment_radius_vs_energy() (gammapy.irf.psfmap method)": [[153, "gammapy.irf.PSFMap.plot_containment_radius_vs_energy", false]], "plot_containment_radius_vs_energy() (gammapy.irf.recopsfmap method)": [[156, "gammapy.irf.RecoPSFMap.plot_containment_radius_vs_energy", false]], "plot_contour_line() (in module gammapy.visualization)": [[353, "gammapy.visualization.plot_contour_line", false]], "plot_correlation() (gammapy.modeling.covariance method)": [[199, "gammapy.modeling.Covariance.plot_correlation", false]], "plot_counts() (gammapy.datasets.spectrumdataset method)": [[104, "gammapy.datasets.SpectrumDataset.plot_counts", false]], "plot_counts() (gammapy.datasets.spectrumdatasetonoff method)": [[105, "gammapy.datasets.SpectrumDatasetOnOff.plot_counts", false]], "plot_distribution() (in module gammapy.visualization)": [[354, "gammapy.visualization.plot_distribution", false]], "plot_energy() (gammapy.data.eventlist method)": [[79, "gammapy.data.EventList.plot_energy", false]], "plot_energy_dependence() (gammapy.irf.background2d method)": [[137, "gammapy.irf.Background2D.plot_energy_dependence", false]], "plot_energy_dependence() (gammapy.irf.effectiveareatable2d method)": [[143, "gammapy.irf.EffectiveAreaTable2D.plot_energy_dependence", false]], "plot_energy_offset() (gammapy.data.eventlist method)": [[79, "gammapy.data.EventList.plot_energy_offset", false]], "plot_err() (gammapy.estimators.imageprofile method)": [[122, "gammapy.estimators.ImageProfile.plot_err", false]], "plot_error() (gammapy.astro.darkmatter.darkmatterannihilationspectralmodel method)": [[19, "gammapy.astro.darkmatter.DarkMatterAnnihilationSpectralModel.plot_error", false]], "plot_error() (gammapy.astro.darkmatter.darkmatterdecayspectralmodel method)": [[20, "gammapy.astro.darkmatter.DarkMatterDecaySpectralModel.plot_error", false]], "plot_error() (gammapy.astro.darkmatter.primaryflux method)": [[26, "gammapy.astro.darkmatter.PrimaryFlux.plot_error", false]], "plot_error() (gammapy.modeling.models.brokenpowerlawspectralmodel method)": [[205, "gammapy.modeling.models.BrokenPowerLawSpectralModel.plot_error", false]], "plot_error() (gammapy.modeling.models.compoundspectralmodel method)": [[206, "gammapy.modeling.models.CompoundSpectralModel.plot_error", false]], "plot_error() (gammapy.modeling.models.constantfluxspatialmodel method)": [[207, "gammapy.modeling.models.ConstantFluxSpatialModel.plot_error", false]], "plot_error() (gammapy.modeling.models.constantspatialmodel method)": [[208, "gammapy.modeling.models.ConstantSpatialModel.plot_error", false]], "plot_error() (gammapy.modeling.models.constantspectralmodel method)": [[209, "gammapy.modeling.models.ConstantSpectralModel.plot_error", false]], "plot_error() (gammapy.modeling.models.diskspatialmodel method)": [[212, "gammapy.modeling.models.DiskSpatialModel.plot_error", false]], "plot_error() (gammapy.modeling.models.eblabsorptionnormspectralmodel method)": [[213, "gammapy.modeling.models.EBLAbsorptionNormSpectralModel.plot_error", false]], "plot_error() (gammapy.modeling.models.expcutoffpowerlaw3fglspectralmodel method)": [[215, "gammapy.modeling.models.ExpCutoffPowerLaw3FGLSpectralModel.plot_error", false]], "plot_error() (gammapy.modeling.models.expcutoffpowerlawnormspectralmodel method)": [[216, "gammapy.modeling.models.ExpCutoffPowerLawNormSpectralModel.plot_error", false]], "plot_error() (gammapy.modeling.models.expcutoffpowerlawspectralmodel method)": [[217, "gammapy.modeling.models.ExpCutoffPowerLawSpectralModel.plot_error", false]], "plot_error() (gammapy.modeling.models.gaussianspatialmodel method)": [[220, "gammapy.modeling.models.GaussianSpatialModel.plot_error", false]], "plot_error() (gammapy.modeling.models.gaussianspectralmodel method)": [[221, "gammapy.modeling.models.GaussianSpectralModel.plot_error", false]], "plot_error() (gammapy.modeling.models.generalizedgaussianspatialmodel method)": [[223, "gammapy.modeling.models.GeneralizedGaussianSpatialModel.plot_error", false]], "plot_error() (gammapy.modeling.models.logparabolanormspectralmodel method)": [[227, "gammapy.modeling.models.LogParabolaNormSpectralModel.plot_error", false]], "plot_error() (gammapy.modeling.models.logparabolaspectralmodel method)": [[228, "gammapy.modeling.models.LogParabolaSpectralModel.plot_error", false]], "plot_error() (gammapy.modeling.models.meyercrabspectralmodel method)": [[230, "gammapy.modeling.models.MeyerCrabSpectralModel.plot_error", false]], "plot_error() (gammapy.modeling.models.naimaspectralmodel method)": [[234, "gammapy.modeling.models.NaimaSpectralModel.plot_error", false]], "plot_error() (gammapy.modeling.models.piecewisenormspatialmodel method)": [[235, "gammapy.modeling.models.PiecewiseNormSpatialModel.plot_error", false]], "plot_error() (gammapy.modeling.models.piecewisenormspectralmodel method)": [[236, "gammapy.modeling.models.PiecewiseNormSpectralModel.plot_error", false]], "plot_error() (gammapy.modeling.models.pointspatialmodel method)": [[237, "gammapy.modeling.models.PointSpatialModel.plot_error", false]], "plot_error() (gammapy.modeling.models.powerlaw2spectralmodel method)": [[238, "gammapy.modeling.models.PowerLaw2SpectralModel.plot_error", false]], "plot_error() (gammapy.modeling.models.powerlawnormspectralmodel method)": [[239, "gammapy.modeling.models.PowerLawNormSpectralModel.plot_error", false]], "plot_error() (gammapy.modeling.models.powerlawspectralmodel method)": [[240, "gammapy.modeling.models.PowerLawSpectralModel.plot_error", false]], "plot_error() (gammapy.modeling.models.scalespectralmodel method)": [[244, "gammapy.modeling.models.ScaleSpectralModel.plot_error", false]], "plot_error() (gammapy.modeling.models.shell2spatialmodel method)": [[245, "gammapy.modeling.models.Shell2SpatialModel.plot_error", false]], "plot_error() (gammapy.modeling.models.shellspatialmodel method)": [[246, "gammapy.modeling.models.ShellSpatialModel.plot_error", false]], "plot_error() (gammapy.modeling.models.smoothbrokenpowerlawspectralmodel method)": [[249, "gammapy.modeling.models.SmoothBrokenPowerLawSpectralModel.plot_error", false]], "plot_error() (gammapy.modeling.models.spatialmodel method)": [[250, "gammapy.modeling.models.SpatialModel.plot_error", false]], "plot_error() (gammapy.modeling.models.spectralmodel method)": [[251, "gammapy.modeling.models.SpectralModel.plot_error", false]], "plot_error() (gammapy.modeling.models.superexpcutoffpowerlaw3fglspectralmodel method)": [[252, "gammapy.modeling.models.SuperExpCutoffPowerLaw3FGLSpectralModel.plot_error", false]], "plot_error() (gammapy.modeling.models.superexpcutoffpowerlaw4fgldr3spectralmodel method)": [[253, "gammapy.modeling.models.SuperExpCutoffPowerLaw4FGLDR3SpectralModel.plot_error", false]], "plot_error() (gammapy.modeling.models.superexpcutoffpowerlaw4fglspectralmodel method)": [[254, "gammapy.modeling.models.SuperExpCutoffPowerLaw4FGLSpectralModel.plot_error", false]], "plot_error() (gammapy.modeling.models.templatendspatialmodel method)": [[256, "gammapy.modeling.models.TemplateNDSpatialModel.plot_error", false]], "plot_error() (gammapy.modeling.models.templatendspectralmodel method)": [[257, "gammapy.modeling.models.TemplateNDSpectralModel.plot_error", false]], "plot_error() (gammapy.modeling.models.templatespatialmodel method)": [[260, "gammapy.modeling.models.TemplateSpatialModel.plot_error", false]], "plot_error() (gammapy.modeling.models.templatespectralmodel method)": [[261, "gammapy.modeling.models.TemplateSpectralModel.plot_error", false]], "plot_excess() (gammapy.datasets.spectrumdataset method)": [[104, "gammapy.datasets.SpectrumDataset.plot_excess", false]], "plot_excess() (gammapy.datasets.spectrumdatasetonoff method)": [[105, "gammapy.datasets.SpectrumDatasetOnOff.plot_excess", false]], "plot_fit() (gammapy.datasets.fluxpointsdataset method)": [[96, "gammapy.datasets.FluxPointsDataset.plot_fit", false]], "plot_fit() (gammapy.datasets.spectrumdataset method)": [[104, "gammapy.datasets.SpectrumDataset.plot_fit", false]], "plot_fit() (gammapy.datasets.spectrumdatasetonoff method)": [[105, "gammapy.datasets.SpectrumDatasetOnOff.plot_fit", false]], "plot_grid() (gammapy.maps.hpxmap method)": [[183, "gammapy.maps.HpxMap.plot_grid", false]], "plot_grid() (gammapy.maps.hpxndmap method)": [[184, "gammapy.maps.HpxNDMap.plot_grid", false]], "plot_grid() (gammapy.maps.map method)": [[186, "gammapy.maps.Map.plot_grid", false]], "plot_grid() (gammapy.maps.regionndmap method)": [[192, "gammapy.maps.RegionNDMap.plot_grid", false]], "plot_grid() (gammapy.maps.wcsmap method)": [[195, "gammapy.maps.WcsMap.plot_grid", false]], "plot_grid() (gammapy.maps.wcsndmap method)": [[196, "gammapy.maps.WcsNDMap.plot_grid", false]], "plot_grid() (gammapy.modeling.models.constantfluxspatialmodel method)": [[207, "gammapy.modeling.models.ConstantFluxSpatialModel.plot_grid", false]], "plot_grid() (gammapy.modeling.models.constantspatialmodel method)": [[208, "gammapy.modeling.models.ConstantSpatialModel.plot_grid", false]], "plot_grid() (gammapy.modeling.models.diskspatialmodel method)": [[212, "gammapy.modeling.models.DiskSpatialModel.plot_grid", false]], "plot_grid() (gammapy.modeling.models.gaussianspatialmodel method)": [[220, "gammapy.modeling.models.GaussianSpatialModel.plot_grid", false]], "plot_grid() (gammapy.modeling.models.generalizedgaussianspatialmodel method)": [[223, "gammapy.modeling.models.GeneralizedGaussianSpatialModel.plot_grid", false]], "plot_grid() (gammapy.modeling.models.piecewisenormspatialmodel method)": [[235, "gammapy.modeling.models.PiecewiseNormSpatialModel.plot_grid", false]], "plot_grid() (gammapy.modeling.models.pointspatialmodel method)": [[237, "gammapy.modeling.models.PointSpatialModel.plot_grid", false]], "plot_grid() (gammapy.modeling.models.shell2spatialmodel method)": [[245, "gammapy.modeling.models.Shell2SpatialModel.plot_grid", false]], "plot_grid() (gammapy.modeling.models.shellspatialmodel method)": [[246, "gammapy.modeling.models.ShellSpatialModel.plot_grid", false]], "plot_grid() (gammapy.modeling.models.spatialmodel method)": [[250, "gammapy.modeling.models.SpatialModel.plot_grid", false]], "plot_grid() (gammapy.modeling.models.templatendspatialmodel method)": [[256, "gammapy.modeling.models.TemplateNDSpatialModel.plot_grid", false]], "plot_grid() (gammapy.modeling.models.templatespatialmodel method)": [[260, "gammapy.modeling.models.TemplateSpatialModel.plot_grid", false]], "plot_heatmap() (in module gammapy.visualization)": [[355, "gammapy.visualization.plot_heatmap", false]], "plot_hist() (gammapy.maps.regionndmap method)": [[192, "gammapy.maps.RegionNDMap.plot_hist", false]], "plot_image() (gammapy.data.eventlist method)": [[79, "gammapy.data.EventList.plot_image", false]], "plot_interactive() (gammapy.maps.hpxmap method)": [[183, "gammapy.maps.HpxMap.plot_interactive", false]], "plot_interactive() (gammapy.maps.hpxndmap method)": [[184, "gammapy.maps.HpxNDMap.plot_interactive", false]], "plot_interactive() (gammapy.maps.map method)": [[186, "gammapy.maps.Map.plot_interactive", false]], "plot_interactive() (gammapy.maps.regionndmap method)": [[192, "gammapy.maps.RegionNDMap.plot_interactive", false]], "plot_interactive() (gammapy.maps.wcsmap method)": [[195, "gammapy.maps.WcsMap.plot_interactive", false]], "plot_interactive() (gammapy.maps.wcsndmap method)": [[196, "gammapy.maps.WcsNDMap.plot_interactive", false]], "plot_interactive() (gammapy.modeling.models.constantfluxspatialmodel method)": [[207, "gammapy.modeling.models.ConstantFluxSpatialModel.plot_interactive", false]], "plot_interactive() (gammapy.modeling.models.constantspatialmodel method)": [[208, "gammapy.modeling.models.ConstantSpatialModel.plot_interactive", false]], "plot_interactive() (gammapy.modeling.models.diskspatialmodel method)": [[212, "gammapy.modeling.models.DiskSpatialModel.plot_interactive", false]], "plot_interactive() (gammapy.modeling.models.gaussianspatialmodel method)": [[220, "gammapy.modeling.models.GaussianSpatialModel.plot_interactive", false]], "plot_interactive() (gammapy.modeling.models.generalizedgaussianspatialmodel method)": [[223, "gammapy.modeling.models.GeneralizedGaussianSpatialModel.plot_interactive", false]], "plot_interactive() (gammapy.modeling.models.piecewisenormspatialmodel method)": [[235, "gammapy.modeling.models.PiecewiseNormSpatialModel.plot_interactive", false]], "plot_interactive() (gammapy.modeling.models.pointspatialmodel method)": [[237, "gammapy.modeling.models.PointSpatialModel.plot_interactive", false]], "plot_interactive() (gammapy.modeling.models.shell2spatialmodel method)": [[245, "gammapy.modeling.models.Shell2SpatialModel.plot_interactive", false]], "plot_interactive() (gammapy.modeling.models.shellspatialmodel method)": [[246, "gammapy.modeling.models.ShellSpatialModel.plot_interactive", false]], "plot_interactive() (gammapy.modeling.models.spatialmodel method)": [[250, "gammapy.modeling.models.SpatialModel.plot_interactive", false]], "plot_interactive() (gammapy.modeling.models.templatendspatialmodel method)": [[256, "gammapy.modeling.models.TemplateNDSpatialModel.plot_interactive", false]], "plot_interactive() (gammapy.modeling.models.templatespatialmodel method)": [[260, "gammapy.modeling.models.TemplateSpatialModel.plot_interactive", false]], "plot_kernel() (gammapy.irf.psfkernel method)": [[151, "gammapy.irf.PSFKernel.plot_kernel", false]], "plot_map_rgb() (in module gammapy.visualization)": [[356, "gammapy.visualization.plot_map_rgb", false]], "plot_mask() (gammapy.maps.hpxndmap method)": [[184, "gammapy.maps.HpxNDMap.plot_mask", false]], "plot_mask() (gammapy.maps.regionndmap method)": [[192, "gammapy.maps.RegionNDMap.plot_mask", false]], "plot_mask() (gammapy.maps.wcsndmap method)": [[196, "gammapy.maps.WcsNDMap.plot_mask", false]], "plot_masks() (gammapy.datasets.spectrumdataset method)": [[104, "gammapy.datasets.SpectrumDataset.plot_masks", false]], "plot_masks() (gammapy.datasets.spectrumdatasetonoff method)": [[105, "gammapy.datasets.SpectrumDatasetOnOff.plot_masks", false]], "plot_matrix() (gammapy.irf.edispkernel method)": [[140, "gammapy.irf.EDispKernel.plot_matrix", false]], "plot_migration() (gammapy.irf.energydispersion2d method)": [[145, "gammapy.irf.EnergyDispersion2D.plot_migration", false]], "plot_npred_signal() (in module gammapy.visualization)": [[357, "gammapy.visualization.plot_npred_signal", false]], "plot_offset2_distribution() (gammapy.data.eventlist method)": [[79, "gammapy.data.EventList.plot_offset2_distribution", false]], "plot_offset_dependence() (gammapy.irf.background2d method)": [[137, "gammapy.irf.Background2D.plot_offset_dependence", false]], "plot_offset_dependence() (gammapy.irf.effectiveareatable2d method)": [[143, "gammapy.irf.EffectiveAreaTable2D.plot_offset_dependence", false]], "plot_panel() (gammapy.visualization.mappanelplotter method)": [[348, "gammapy.visualization.MapPanelPlotter.plot_panel", false]], "plot_phasogram() (gammapy.modeling.models.templatephasecurvetemporalmodel method)": [[259, "gammapy.modeling.models.TemplatePhaseCurveTemporalModel.plot_phasogram", false]], "plot_position_error() (gammapy.modeling.models.constantfluxspatialmodel method)": [[207, "gammapy.modeling.models.ConstantFluxSpatialModel.plot_position_error", false]], "plot_position_error() (gammapy.modeling.models.constantspatialmodel method)": [[208, "gammapy.modeling.models.ConstantSpatialModel.plot_position_error", false]], "plot_position_error() (gammapy.modeling.models.diskspatialmodel method)": [[212, "gammapy.modeling.models.DiskSpatialModel.plot_position_error", false]], "plot_position_error() (gammapy.modeling.models.gaussianspatialmodel method)": [[220, "gammapy.modeling.models.GaussianSpatialModel.plot_position_error", false]], "plot_position_error() (gammapy.modeling.models.generalizedgaussianspatialmodel method)": [[223, "gammapy.modeling.models.GeneralizedGaussianSpatialModel.plot_position_error", false]], "plot_position_error() (gammapy.modeling.models.piecewisenormspatialmodel method)": [[235, "gammapy.modeling.models.PiecewiseNormSpatialModel.plot_position_error", false]], "plot_position_error() (gammapy.modeling.models.pointspatialmodel method)": [[237, "gammapy.modeling.models.PointSpatialModel.plot_position_error", false]], "plot_position_error() (gammapy.modeling.models.shell2spatialmodel method)": [[245, "gammapy.modeling.models.Shell2SpatialModel.plot_position_error", false]], "plot_position_error() (gammapy.modeling.models.shellspatialmodel method)": [[246, "gammapy.modeling.models.ShellSpatialModel.plot_position_error", false]], "plot_position_error() (gammapy.modeling.models.spatialmodel method)": [[250, "gammapy.modeling.models.SpatialModel.plot_position_error", false]], "plot_position_error() (gammapy.modeling.models.templatendspatialmodel method)": [[256, "gammapy.modeling.models.TemplateNDSpatialModel.plot_position_error", false]], "plot_position_error() (gammapy.modeling.models.templatespatialmodel method)": [[260, "gammapy.modeling.models.TemplateSpatialModel.plot_position_error", false]], "plot_positions() (gammapy.modeling.models.datasetmodels method)": [[211, "gammapy.modeling.models.DatasetModels.plot_positions", false]], "plot_positions() (gammapy.modeling.models.models method)": [[233, "gammapy.modeling.models.Models.plot_positions", false]], "plot_psf_vs_rad() (gammapy.irf.energydependentmultigausspsf method)": [[144, "gammapy.irf.EnergyDependentMultiGaussPSF.plot_psf_vs_rad", false]], "plot_psf_vs_rad() (gammapy.irf.parametricpsf method)": [[154, "gammapy.irf.ParametricPSF.plot_psf_vs_rad", false]], "plot_psf_vs_rad() (gammapy.irf.psf3d method)": [[150, "gammapy.irf.PSF3D.plot_psf_vs_rad", false]], "plot_psf_vs_rad() (gammapy.irf.psfking method)": [[152, "gammapy.irf.PSFKing.plot_psf_vs_rad", false]], "plot_psf_vs_rad() (gammapy.irf.psfmap method)": [[153, "gammapy.irf.PSFMap.plot_psf_vs_rad", false]], "plot_psf_vs_rad() (gammapy.irf.recopsfmap method)": [[156, "gammapy.irf.RecoPSFMap.plot_psf_vs_rad", false]], "plot_rad_max_vs_energy() (gammapy.irf.radmax2d method)": [[155, "gammapy.irf.RadMax2D.plot_rad_max_vs_energy", false]], "plot_region() (gammapy.maps.regiongeom method)": [[191, "gammapy.maps.RegionGeom.plot_region", false]], "plot_region() (gammapy.maps.regionndmap method)": [[192, "gammapy.maps.RegionNDMap.plot_region", false]], "plot_regions() (gammapy.modeling.models.datasetmodels method)": [[211, "gammapy.modeling.models.DatasetModels.plot_regions", false]], "plot_regions() (gammapy.modeling.models.models method)": [[233, "gammapy.modeling.models.Models.plot_regions", false]], "plot_residuals() (gammapy.datasets.fluxpointsdataset method)": [[96, "gammapy.datasets.FluxPointsDataset.plot_residuals", false]], "plot_residuals() (gammapy.datasets.mapdataset method)": [[97, "gammapy.datasets.MapDataset.plot_residuals", false]], "plot_residuals() (gammapy.datasets.mapdatasetonoff method)": [[100, "gammapy.datasets.MapDatasetOnOff.plot_residuals", false]], "plot_residuals() (gammapy.datasets.spectrumdataset method)": [[104, "gammapy.datasets.SpectrumDataset.plot_residuals", false]], "plot_residuals() (gammapy.datasets.spectrumdatasetonoff method)": [[105, "gammapy.datasets.SpectrumDatasetOnOff.plot_residuals", false]], "plot_residuals_spatial() (gammapy.datasets.mapdataset method)": [[97, "gammapy.datasets.MapDataset.plot_residuals_spatial", false]], "plot_residuals_spatial() (gammapy.datasets.mapdatasetonoff method)": [[100, "gammapy.datasets.MapDatasetOnOff.plot_residuals_spatial", false]], "plot_residuals_spatial() (gammapy.datasets.spectrumdataset method)": [[104, "gammapy.datasets.SpectrumDataset.plot_residuals_spatial", false]], "plot_residuals_spatial() (gammapy.datasets.spectrumdatasetonoff method)": [[105, "gammapy.datasets.SpectrumDatasetOnOff.plot_residuals_spatial", false]], "plot_residuals_spectral() (gammapy.datasets.mapdataset method)": [[97, "gammapy.datasets.MapDataset.plot_residuals_spectral", false]], "plot_residuals_spectral() (gammapy.datasets.mapdatasetonoff method)": [[100, "gammapy.datasets.MapDatasetOnOff.plot_residuals_spectral", false]], "plot_residuals_spectral() (gammapy.datasets.spectrumdataset method)": [[104, "gammapy.datasets.SpectrumDataset.plot_residuals_spectral", false]], "plot_residuals_spectral() (gammapy.datasets.spectrumdatasetonoff method)": [[105, "gammapy.datasets.SpectrumDatasetOnOff.plot_residuals_spectral", false]], "plot_spectrum() (gammapy.datasets.fluxpointsdataset method)": [[96, "gammapy.datasets.FluxPointsDataset.plot_spectrum", false]], "plot_spectrum() (gammapy.irf.background2d method)": [[137, "gammapy.irf.Background2D.plot_spectrum", false]], "plot_spectrum_datasets_off_regions() (in module gammapy.visualization)": [[358, "gammapy.visualization.plot_spectrum_datasets_off_regions", false]], "plot_theta_squared_table() (in module gammapy.visualization)": [[359, "gammapy.visualization.plot_theta_squared_table", false]], "plot_time() (gammapy.data.eventlist method)": [[79, "gammapy.data.EventList.plot_time", false]], "plot_ts_profiles() (gammapy.estimators.fluxpoints method)": [[119, "gammapy.estimators.FluxPoints.plot_ts_profiles", false]], "pointing (gammapy.data.observation attribute)": [[84, "gammapy.data.Observation.pointing", false]], "pointing (gammapy.data.pointingmode attribute)": [[90, "gammapy.data.PointingMode.POINTING", false]], "pointing_galactic (gammapy.data.observationtable attribute)": [[86, "gammapy.data.ObservationTable.pointing_galactic", false]], "pointing_radec (gammapy.data.eventlist attribute)": [[79, "gammapy.data.EventList.pointing_radec", false]], "pointing_radec (gammapy.data.observationtable attribute)": [[86, "gammapy.data.ObservationTable.pointing_radec", false]], "pointinginfo (class in gammapy.data)": [[89, "gammapy.data.PointingInfo", false]], "pointingmode (class in gammapy.data)": [[90, "gammapy.data.PointingMode", false]], "pointspatialmodel (class in gammapy.modeling.models)": [[237, "gammapy.modeling.models.PointSpatialModel", false]], "polar() (in module gammapy.utils.coordinates)": [[295, "gammapy.utils.coordinates.polar", false]], "pool_kwargs_default (in module gammapy.utils.parallel)": [[309, "gammapy.utils.parallel.POOL_KWARGS_DEFAULT", false]], "pop() (gammapy.data.observations method)": [[87, "gammapy.data.Observations.pop", false]], "pop() (gammapy.datasets.datasets method)": [[95, "gammapy.datasets.Datasets.pop", false]], "pop() (gammapy.maps.maps method)": [[190, "gammapy.maps.Maps.pop", false]], "pop() (gammapy.modeling.models.models method)": [[233, "gammapy.modeling.models.Models.pop", false]], "popitem() (gammapy.maps.maps method)": [[190, "gammapy.maps.Maps.popitem", false]], "position (gammapy.catalog.sourcecatalogobject attribute)": [[67, "gammapy.catalog.SourceCatalogObject.position", false]], "position (gammapy.catalog.sourcecatalogobject1lhaaso attribute)": [[68, "gammapy.catalog.SourceCatalogObject1LHAASO.position", false]], "position (gammapy.catalog.sourcecatalogobject2fhl attribute)": [[69, "gammapy.catalog.SourceCatalogObject2FHL.position", false]], "position (gammapy.catalog.sourcecatalogobject2hwc attribute)": [[70, "gammapy.catalog.SourceCatalogObject2HWC.position", false]], "position (gammapy.catalog.sourcecatalogobject3fgl attribute)": [[71, "gammapy.catalog.SourceCatalogObject3FGL.position", false]], "position (gammapy.catalog.sourcecatalogobject3fhl attribute)": [[72, "gammapy.catalog.SourceCatalogObject3FHL.position", false]], "position (gammapy.catalog.sourcecatalogobject3hwc attribute)": [[73, "gammapy.catalog.SourceCatalogObject3HWC.position", false]], "position (gammapy.catalog.sourcecatalogobject4fgl attribute)": [[74, "gammapy.catalog.SourceCatalogObject4FGL.position", false]], "position (gammapy.catalog.sourcecatalogobjectgammacat attribute)": [[75, "gammapy.catalog.SourceCatalogObjectGammaCat.position", false]], "position (gammapy.catalog.sourcecatalogobjecthgps attribute)": [[76, "gammapy.catalog.SourceCatalogObjectHGPS.position", false]], "position (gammapy.catalog.sourcecatalogobjecthgpscomponent attribute)": [[77, "gammapy.catalog.SourceCatalogObjectHGPSComponent.position", false]], "position (gammapy.modeling.models.constantfluxspatialmodel attribute)": [[207, "gammapy.modeling.models.ConstantFluxSpatialModel.position", false]], "position (gammapy.modeling.models.constantspatialmodel attribute)": [[208, "gammapy.modeling.models.ConstantSpatialModel.position", false]], "position (gammapy.modeling.models.diskspatialmodel attribute)": [[212, "gammapy.modeling.models.DiskSpatialModel.position", false]], "position (gammapy.modeling.models.gaussianspatialmodel attribute)": [[220, "gammapy.modeling.models.GaussianSpatialModel.position", false]], "position (gammapy.modeling.models.generalizedgaussianspatialmodel attribute)": [[223, "gammapy.modeling.models.GeneralizedGaussianSpatialModel.position", false]], "position (gammapy.modeling.models.piecewisenormspatialmodel attribute)": [[235, "gammapy.modeling.models.PiecewiseNormSpatialModel.position", false]], "position (gammapy.modeling.models.pointspatialmodel attribute)": [[237, "gammapy.modeling.models.PointSpatialModel.position", false]], "position (gammapy.modeling.models.shell2spatialmodel attribute)": [[245, "gammapy.modeling.models.Shell2SpatialModel.position", false]], "position (gammapy.modeling.models.shellspatialmodel attribute)": [[246, "gammapy.modeling.models.ShellSpatialModel.position", false]], "position (gammapy.modeling.models.skymodel attribute)": [[248, "gammapy.modeling.models.SkyModel.position", false]], "position (gammapy.modeling.models.spatialmodel attribute)": [[250, "gammapy.modeling.models.SpatialModel.position", false]], "position (gammapy.modeling.models.templatendspatialmodel attribute)": [[256, "gammapy.modeling.models.TemplateNDSpatialModel.position", false]], "position (gammapy.modeling.models.templatenpredmodel attribute)": [[258, "gammapy.modeling.models.TemplateNPredModel.position", false]], "position (gammapy.modeling.models.templatespatialmodel attribute)": [[260, "gammapy.modeling.models.TemplateSpatialModel.position", false]], "position_error (gammapy.modeling.models.constantfluxspatialmodel attribute)": [[207, "gammapy.modeling.models.ConstantFluxSpatialModel.position_error", false]], "position_error (gammapy.modeling.models.constantspatialmodel attribute)": [[208, "gammapy.modeling.models.ConstantSpatialModel.position_error", false]], "position_error (gammapy.modeling.models.diskspatialmodel attribute)": [[212, "gammapy.modeling.models.DiskSpatialModel.position_error", false]], "position_error (gammapy.modeling.models.gaussianspatialmodel attribute)": [[220, "gammapy.modeling.models.GaussianSpatialModel.position_error", false]], "position_error (gammapy.modeling.models.generalizedgaussianspatialmodel attribute)": [[223, "gammapy.modeling.models.GeneralizedGaussianSpatialModel.position_error", false]], "position_error (gammapy.modeling.models.piecewisenormspatialmodel attribute)": [[235, "gammapy.modeling.models.PiecewiseNormSpatialModel.position_error", false]], "position_error (gammapy.modeling.models.pointspatialmodel attribute)": [[237, "gammapy.modeling.models.PointSpatialModel.position_error", false]], "position_error (gammapy.modeling.models.shell2spatialmodel attribute)": [[245, "gammapy.modeling.models.Shell2SpatialModel.position_error", false]], "position_error (gammapy.modeling.models.shellspatialmodel attribute)": [[246, "gammapy.modeling.models.ShellSpatialModel.position_error", false]], "position_error (gammapy.modeling.models.spatialmodel attribute)": [[250, "gammapy.modeling.models.SpatialModel.position_error", false]], "position_error (gammapy.modeling.models.templatendspatialmodel attribute)": [[256, "gammapy.modeling.models.TemplateNDSpatialModel.position_error", false]], "position_error (gammapy.modeling.models.templatespatialmodel attribute)": [[260, "gammapy.modeling.models.TemplateSpatialModel.position_error", false]], "position_lonlat (gammapy.modeling.models.constantfluxspatialmodel attribute)": [[207, "gammapy.modeling.models.ConstantFluxSpatialModel.position_lonlat", false]], "position_lonlat (gammapy.modeling.models.constantspatialmodel attribute)": [[208, "gammapy.modeling.models.ConstantSpatialModel.position_lonlat", false]], "position_lonlat (gammapy.modeling.models.diskspatialmodel attribute)": [[212, "gammapy.modeling.models.DiskSpatialModel.position_lonlat", false]], "position_lonlat (gammapy.modeling.models.gaussianspatialmodel attribute)": [[220, "gammapy.modeling.models.GaussianSpatialModel.position_lonlat", false]], "position_lonlat (gammapy.modeling.models.generalizedgaussianspatialmodel attribute)": [[223, "gammapy.modeling.models.GeneralizedGaussianSpatialModel.position_lonlat", false]], "position_lonlat (gammapy.modeling.models.piecewisenormspatialmodel attribute)": [[235, "gammapy.modeling.models.PiecewiseNormSpatialModel.position_lonlat", false]], "position_lonlat (gammapy.modeling.models.pointspatialmodel attribute)": [[237, "gammapy.modeling.models.PointSpatialModel.position_lonlat", false]], "position_lonlat (gammapy.modeling.models.shell2spatialmodel attribute)": [[245, "gammapy.modeling.models.Shell2SpatialModel.position_lonlat", false]], "position_lonlat (gammapy.modeling.models.shellspatialmodel attribute)": [[246, "gammapy.modeling.models.ShellSpatialModel.position_lonlat", false]], "position_lonlat (gammapy.modeling.models.skymodel attribute)": [[248, "gammapy.modeling.models.SkyModel.position_lonlat", false]], "position_lonlat (gammapy.modeling.models.spatialmodel attribute)": [[250, "gammapy.modeling.models.SpatialModel.position_lonlat", false]], "position_lonlat (gammapy.modeling.models.templatendspatialmodel attribute)": [[256, "gammapy.modeling.models.TemplateNDSpatialModel.position_lonlat", false]], "position_lonlat (gammapy.modeling.models.templatespatialmodel attribute)": [[260, "gammapy.modeling.models.TemplateSpatialModel.position_lonlat", false]], "positions (gammapy.catalog.sourcecatalog attribute)": [[56, "gammapy.catalog.SourceCatalog.positions", false]], "positions (gammapy.catalog.sourcecatalog1lhaaso attribute)": [[57, "gammapy.catalog.SourceCatalog1LHAASO.positions", false]], "positions (gammapy.catalog.sourcecatalog2fhl attribute)": [[58, "gammapy.catalog.SourceCatalog2FHL.positions", false]], "positions (gammapy.catalog.sourcecatalog2hwc attribute)": [[59, "gammapy.catalog.SourceCatalog2HWC.positions", false]], "positions (gammapy.catalog.sourcecatalog3fgl attribute)": [[60, "gammapy.catalog.SourceCatalog3FGL.positions", false]], "positions (gammapy.catalog.sourcecatalog3fhl attribute)": [[61, "gammapy.catalog.SourceCatalog3FHL.positions", false]], "positions (gammapy.catalog.sourcecatalog3hwc attribute)": [[62, "gammapy.catalog.SourceCatalog3HWC.positions", false]], "positions (gammapy.catalog.sourcecatalog4fgl attribute)": [[63, "gammapy.catalog.SourceCatalog4FGL.positions", false]], "positions (gammapy.catalog.sourcecataloggammacat attribute)": [[64, "gammapy.catalog.SourceCatalogGammaCat.positions", false]], "positions (gammapy.catalog.sourcecataloghgps attribute)": [[65, "gammapy.catalog.SourceCatalogHGPS.positions", false]], "positions (gammapy.modeling.models.datasetmodels attribute)": [[211, "gammapy.modeling.models.DatasetModels.positions", false]], "positions (gammapy.modeling.models.models attribute)": [[233, "gammapy.modeling.models.Models.positions", false]], "powerlaw2spectralmodel (class in gammapy.modeling.models)": [[238, "gammapy.modeling.models.PowerLaw2SpectralModel", false]], "powerlawnormspectralmodel (class in gammapy.modeling.models)": [[239, "gammapy.modeling.models.PowerLawNormSpectralModel", false]], "powerlawspectralmodel (class in gammapy.modeling.models)": [[240, "gammapy.modeling.models.PowerLawSpectralModel", false]], "powerlawtemporalmodel (class in gammapy.modeling.models)": [[241, "gammapy.modeling.models.PowerLawTemporalModel", false]], "pprint() (gammapy.data.hduindextable method)": [[83, "gammapy.data.HDUIndexTable.pprint", false]], "pprint() (gammapy.data.observationtable method)": [[86, "gammapy.data.ObservationTable.pprint", false]], "pprint_all() (gammapy.data.hduindextable method)": [[83, "gammapy.data.HDUIndexTable.pprint_all", false]], "pprint_all() (gammapy.data.observationtable method)": [[86, "gammapy.data.ObservationTable.pprint_all", false]], "pprint_exclude_names (gammapy.data.hduindextable attribute)": [[83, "gammapy.data.HDUIndexTable.pprint_exclude_names", false]], "pprint_exclude_names (gammapy.data.observationtable attribute)": [[86, "gammapy.data.ObservationTable.pprint_exclude_names", false]], "pprint_include_names (gammapy.data.hduindextable attribute)": [[83, "gammapy.data.HDUIndexTable.pprint_include_names", false]], "pprint_include_names (gammapy.data.observationtable attribute)": [[86, "gammapy.data.ObservationTable.pprint_include_names", false]], "prepare_inputs() (gammapy.astro.population.casebattacharya1998 method)": [[28, "gammapy.astro.population.CaseBattacharya1998.prepare_inputs", false]], "prepare_inputs() (gammapy.astro.population.exponential method)": [[29, "gammapy.astro.population.Exponential.prepare_inputs", false]], "prepare_inputs() (gammapy.astro.population.faucherkaspi2006 method)": [[30, "gammapy.astro.population.FaucherKaspi2006.prepare_inputs", false]], "prepare_inputs() (gammapy.astro.population.faucherkaspi2006velocitybimodal method)": [[31, "gammapy.astro.population.FaucherKaspi2006VelocityBimodal.prepare_inputs", false]], "prepare_inputs() (gammapy.astro.population.faucherkaspi2006velocitymaxwellian method)": [[32, "gammapy.astro.population.FaucherKaspi2006VelocityMaxwellian.prepare_inputs", false]], "prepare_inputs() (gammapy.astro.population.lorimer2006 method)": [[35, "gammapy.astro.population.Lorimer2006.prepare_inputs", false]], "prepare_inputs() (gammapy.astro.population.paczynski1990 method)": [[36, "gammapy.astro.population.Paczynski1990.prepare_inputs", false]], "prepare_inputs() (gammapy.astro.population.paczynski1990velocity method)": [[37, "gammapy.astro.population.Paczynski1990Velocity.prepare_inputs", false]], "prepare_inputs() (gammapy.astro.population.yusifovkucuk2004 method)": [[39, "gammapy.astro.population.YusifovKucuk2004.prepare_inputs", false]], "prepare_inputs() (gammapy.astro.population.yusifovkucuk2004b method)": [[40, "gammapy.astro.population.YusifovKucuk2004B.prepare_inputs", false]], "prepare_outputs() (gammapy.astro.population.casebattacharya1998 method)": [[28, "gammapy.astro.population.CaseBattacharya1998.prepare_outputs", false]], "prepare_outputs() (gammapy.astro.population.exponential method)": [[29, "gammapy.astro.population.Exponential.prepare_outputs", false]], "prepare_outputs() (gammapy.astro.population.faucherkaspi2006 method)": [[30, "gammapy.astro.population.FaucherKaspi2006.prepare_outputs", false]], "prepare_outputs() (gammapy.astro.population.faucherkaspi2006velocitybimodal method)": [[31, "gammapy.astro.population.FaucherKaspi2006VelocityBimodal.prepare_outputs", false]], "prepare_outputs() (gammapy.astro.population.faucherkaspi2006velocitymaxwellian method)": [[32, "gammapy.astro.population.FaucherKaspi2006VelocityMaxwellian.prepare_outputs", false]], "prepare_outputs() (gammapy.astro.population.lorimer2006 method)": [[35, "gammapy.astro.population.Lorimer2006.prepare_outputs", false]], "prepare_outputs() (gammapy.astro.population.paczynski1990 method)": [[36, "gammapy.astro.population.Paczynski1990.prepare_outputs", false]], "prepare_outputs() (gammapy.astro.population.paczynski1990velocity method)": [[37, "gammapy.astro.population.Paczynski1990Velocity.prepare_outputs", false]], "prepare_outputs() (gammapy.astro.population.yusifovkucuk2004 method)": [[39, "gammapy.astro.population.YusifovKucuk2004.prepare_outputs", false]], "prepare_outputs() (gammapy.astro.population.yusifovkucuk2004b method)": [[40, "gammapy.astro.population.YusifovKucuk2004B.prepare_outputs", false]], "primary_axis (gammapy.maps.mapaxes attribute)": [[187, "gammapy.maps.MapAxes.primary_axis", false]], "primaryflux (class in gammapy.astro.darkmatter)": [[26, "gammapy.astro.darkmatter.PrimaryFlux", false]], "prior (gammapy.modeling.parameter attribute)": [[201, "gammapy.modeling.Parameter.prior", false]], "prior (gammapy.modeling.parameters attribute)": [[202, "gammapy.modeling.Parameters.prior", false]], "prior (gammapy.modeling.priorparameter attribute)": [[203, "gammapy.modeling.PriorParameter.prior", false]], "prior (gammapy.modeling.priorparameters attribute)": [[204, "gammapy.modeling.PriorParameters.prior", false]], "prior_stat_sum() (gammapy.modeling.parameter method)": [[201, "gammapy.modeling.Parameter.prior_stat_sum", false]], "prior_stat_sum() (gammapy.modeling.parameters method)": [[202, "gammapy.modeling.Parameters.prior_stat_sum", false]], "prior_stat_sum() (gammapy.modeling.priorparameter method)": [[203, "gammapy.modeling.PriorParameter.prior_stat_sum", false]], "prior_stat_sum() (gammapy.modeling.priorparameters method)": [[204, "gammapy.modeling.PriorParameters.prior_stat_sum", false]], "priorparameter (class in gammapy.modeling)": [[203, "gammapy.modeling.PriorParameter", false]], "priorparameters (class in gammapy.modeling)": [[204, "gammapy.modeling.PriorParameters", false]], "profile (gammapy.estimators.imageprofile attribute)": [[122, "gammapy.estimators.ImageProfile.profile", false]], "profile_err (gammapy.estimators.imageprofile attribute)": [[122, "gammapy.estimators.ImageProfile.profile_err", false]], "projected_distance_axis (gammapy.estimators.fluxprofileestimator attribute)": [[121, "gammapy.estimators.FluxProfileEstimator.projected_distance_axis", false]], "projection (gammapy.maps.hpxgeom attribute)": [[182, "gammapy.maps.HpxGeom.projection", false]], "projection (gammapy.maps.regiongeom attribute)": [[191, "gammapy.maps.RegionGeom.projection", false]], "projection (gammapy.maps.wcsgeom attribute)": [[194, "gammapy.maps.WcsGeom.projection", false]], "psf": [[554, "term-PSF", true]], "psf (gammapy.data.observation attribute)": [[84, "gammapy.data.Observation.psf", false]], "psf (gammapy.datasets.mapdataset attribute)": [[97, "gammapy.datasets.MapDataset.psf", false]], "psf (gammapy.datasets.mapdatasetonoff attribute)": [[100, "gammapy.datasets.MapDatasetOnOff.psf", false]], "psf (gammapy.datasets.spectrumdataset attribute)": [[104, "gammapy.datasets.SpectrumDataset.psf", false]], "psf (gammapy.datasets.spectrumdatasetonoff attribute)": [[105, "gammapy.datasets.SpectrumDatasetOnOff.psf", false]], "psf3d (class in gammapy.irf)": [[150, "gammapy.irf.PSF3D", false]], "psf_kernel_map (gammapy.irf.psfkernel attribute)": [[151, "gammapy.irf.PSFKernel.psf_kernel_map", false]], "psf_map (gammapy.irf.psfmap attribute)": [[153, "gammapy.irf.PSFMap.psf_map", false]], "psf_map (gammapy.irf.recopsfmap attribute)": [[156, "gammapy.irf.RecoPSFMap.psf_map", false]], "psfkernel (class in gammapy.irf)": [[151, "gammapy.irf.PSFKernel", false]], "psfking (class in gammapy.irf)": [[152, "gammapy.irf.PSFKing", false]], "psfmap (class in gammapy.irf)": [[153, "gammapy.irf.PSFMap", false]], "pulsar (class in gammapy.astro.source)": [[51, "gammapy.astro.source.Pulsar", false]], "pwn (class in gammapy.astro.source)": [[50, "gammapy.astro.source.PWN", false]], "quantity (gammapy.irf.background2d attribute)": [[137, "gammapy.irf.Background2D.quantity", false]], "quantity (gammapy.irf.background3d attribute)": [[138, "gammapy.irf.Background3D.quantity", false]], "quantity (gammapy.irf.backgroundirf attribute)": [[139, "gammapy.irf.BackgroundIRF.quantity", false]], "quantity (gammapy.irf.edispkernel attribute)": [[140, "gammapy.irf.EDispKernel.quantity", false]], "quantity (gammapy.irf.effectiveareatable2d attribute)": [[143, "gammapy.irf.EffectiveAreaTable2D.quantity", false]], "quantity (gammapy.irf.energydependentmultigausspsf attribute)": [[144, "gammapy.irf.EnergyDependentMultiGaussPSF.quantity", false]], "quantity (gammapy.irf.energydispersion2d attribute)": [[145, "gammapy.irf.EnergyDispersion2D.quantity", false]], "quantity (gammapy.irf.irf attribute)": [[147, "gammapy.irf.IRF.quantity", false]], "quantity (gammapy.irf.parametricpsf attribute)": [[154, "gammapy.irf.ParametricPSF.quantity", false]], "quantity (gammapy.irf.psf3d attribute)": [[150, "gammapy.irf.PSF3D.quantity", false]], "quantity (gammapy.irf.psfking attribute)": [[152, "gammapy.irf.PSFKing.quantity", false]], "quantity (gammapy.irf.radmax2d attribute)": [[155, "gammapy.irf.RadMax2D.quantity", false]], "quantity (gammapy.maps.hpxmap attribute)": [[183, "gammapy.maps.HpxMap.quantity", false]], "quantity (gammapy.maps.hpxndmap attribute)": [[184, "gammapy.maps.HpxNDMap.quantity", false]], "quantity (gammapy.maps.map attribute)": [[186, "gammapy.maps.Map.quantity", false]], "quantity (gammapy.maps.regionndmap attribute)": [[192, "gammapy.maps.RegionNDMap.quantity", false]], "quantity (gammapy.maps.wcsmap attribute)": [[195, "gammapy.maps.WcsMap.quantity", false]], "quantity (gammapy.maps.wcsndmap attribute)": [[196, "gammapy.maps.WcsNDMap.quantity", false]], "quantity (gammapy.modeling.parameter attribute)": [[201, "gammapy.modeling.Parameter.quantity", false]], "quantity (gammapy.modeling.priorparameter attribute)": [[203, "gammapy.modeling.PriorParameter.quantity", false]], "r_0 (gammapy.astro.population.faucherkaspi2006 attribute)": [[30, "gammapy.astro.population.FaucherKaspi2006.r_0", false]], "r_0 (gammapy.astro.population.faucherspiral attribute)": [[33, "gammapy.astro.population.FaucherSpiral.r_0", false]], "r_0 (gammapy.astro.population.valleespiral attribute)": [[38, "gammapy.astro.population.ValleeSpiral.r_0", false]], "r_0 (gammapy.modeling.models.diskspatialmodel attribute)": [[212, "gammapy.modeling.models.DiskSpatialModel.r_0", false]], "r_0 (gammapy.modeling.models.generalizedgaussianspatialmodel attribute)": [[223, "gammapy.modeling.models.GeneralizedGaussianSpatialModel.r_0", false]], "r_0 (gammapy.modeling.models.shell2spatialmodel attribute)": [[245, "gammapy.modeling.models.Shell2SpatialModel.r_0", false]], "r_1 (gammapy.astro.population.yusifovkucuk2004 attribute)": [[39, "gammapy.astro.population.YusifovKucuk2004.r_1", false]], "r_exp (gammapy.astro.population.paczynski1990 attribute)": [[36, "gammapy.astro.population.Paczynski1990.r_exp", false]], "r_in (gammapy.modeling.models.shell2spatialmodel attribute)": [[245, "gammapy.modeling.models.Shell2SpatialModel.r_in", false]], "r_sun (gammapy.astro.population.valleespiral attribute)": [[38, "gammapy.astro.population.ValleeSpiral.r_sun", false]], "rad_max (gammapy.data.observation attribute)": [[84, "gammapy.data.Observation.rad_max", false]], "radec (gammapy.data.eventlist attribute)": [[79, "gammapy.data.EventList.radec", false]], "radec (gammapy.data.pointinginfo attribute)": [[89, "gammapy.data.PointingInfo.radec", false]], "radec (gammapy.irf.fovalignment attribute)": [[146, "gammapy.irf.FoVAlignment.RADEC", false]], "radial_distributions (in module gammapy.astro.population)": [[48, "gammapy.astro.population.radial_distributions", false]], "radius (gammapy.modeling.models.shellspatialmodel attribute)": [[246, "gammapy.modeling.models.ShellSpatialModel.radius", false]], "radius() (gammapy.astro.population.faucherspiral method)": [[33, "gammapy.astro.population.FaucherSpiral.radius", false]], "radius() (gammapy.astro.population.logspiral method)": [[34, "gammapy.astro.population.LogSpiral.radius", false]], "radius() (gammapy.astro.population.valleespiral method)": [[38, "gammapy.astro.population.ValleeSpiral.radius", false]], "radius() (gammapy.astro.source.pwn method)": [[50, "gammapy.astro.source.PWN.radius", false]], "radius() (gammapy.astro.source.snr method)": [[52, "gammapy.astro.source.SNR.radius", false]], "radius() (gammapy.astro.source.snrtruelovemckee method)": [[53, "gammapy.astro.source.SNRTrueloveMcKee.radius", false]], "radius_inner() (gammapy.astro.source.snr method)": [[52, "gammapy.astro.source.SNR.radius_inner", false]], "radius_inner() (gammapy.astro.source.snrtruelovemckee method)": [[53, "gammapy.astro.source.SNRTrueloveMcKee.radius_inner", false]], "radius_reverse_shock() (gammapy.astro.source.snrtruelovemckee method)": [[53, "gammapy.astro.source.SNRTrueloveMcKee.radius_reverse_shock", false]], "radmax2d (class in gammapy.irf)": [[155, "gammapy.irf.RadMax2D", false]], "read() (gammapy.analysis.analysisconfig class method)": [[16, "gammapy.analysis.AnalysisConfig.read", false]], "read() (gammapy.data.eventlist class method)": [[79, "gammapy.data.EventList.read", false]], "read() (gammapy.data.fixedpointinginfo class method)": [[81, "gammapy.data.FixedPointingInfo.read", false]], "read() (gammapy.data.gti class method)": [[82, "gammapy.data.GTI.read", false]], "read() (gammapy.data.hduindextable class method)": [[83, "gammapy.data.HDUIndexTable.read", false]], "read() (gammapy.data.observation class method)": [[84, "gammapy.data.Observation.read", false]], "read() (gammapy.data.observationtable class method)": [[86, "gammapy.data.ObservationTable.read", false]], "read() (gammapy.data.pointinginfo class method)": [[89, "gammapy.data.PointingInfo.read", false]], "read() (gammapy.datasets.datasets class method)": [[95, "gammapy.datasets.Datasets.read", false]], "read() (gammapy.datasets.fluxpointsdataset class method)": [[96, "gammapy.datasets.FluxPointsDataset.read", false]], "read() (gammapy.datasets.mapdataset class method)": [[97, "gammapy.datasets.MapDataset.read", false]], "read() (gammapy.datasets.mapdatasetonoff class method)": [[100, "gammapy.datasets.MapDatasetOnOff.read", false]], "read() (gammapy.datasets.ogipdatasetreader method)": [[101, "gammapy.datasets.OGIPDatasetReader.read", false]], "read() (gammapy.datasets.spectrumdataset class method)": [[104, "gammapy.datasets.SpectrumDataset.read", false]], "read() (gammapy.datasets.spectrumdatasetonoff class method)": [[105, "gammapy.datasets.SpectrumDatasetOnOff.read", false]], "read() (gammapy.estimators.fluxmaps class method)": [[117, "gammapy.estimators.FluxMaps.read", false]], "read() (gammapy.estimators.fluxpoints class method)": [[119, "gammapy.estimators.FluxPoints.read", false]], "read() (gammapy.irf.background2d class method)": [[137, "gammapy.irf.Background2D.read", false]], "read() (gammapy.irf.background3d class method)": [[138, "gammapy.irf.Background3D.read", false]], "read() (gammapy.irf.backgroundirf class method)": [[139, "gammapy.irf.BackgroundIRF.read", false]], "read() (gammapy.irf.edispkernel class method)": [[140, "gammapy.irf.EDispKernel.read", false]], "read() (gammapy.irf.edispkernelmap class method)": [[141, "gammapy.irf.EDispKernelMap.read", false]], "read() (gammapy.irf.edispmap class method)": [[142, "gammapy.irf.EDispMap.read", false]], "read() (gammapy.irf.effectiveareatable2d class method)": [[143, "gammapy.irf.EffectiveAreaTable2D.read", false]], "read() (gammapy.irf.energydependentmultigausspsf class method)": [[144, "gammapy.irf.EnergyDependentMultiGaussPSF.read", false]], "read() (gammapy.irf.energydispersion2d class method)": [[145, "gammapy.irf.EnergyDispersion2D.read", false]], "read() (gammapy.irf.irf class method)": [[147, "gammapy.irf.IRF.read", false]], "read() (gammapy.irf.irfmap class method)": [[148, "gammapy.irf.IRFMap.read", false]], "read() (gammapy.irf.parametricpsf class method)": [[154, "gammapy.irf.ParametricPSF.read", false]], "read() (gammapy.irf.psf3d class method)": [[150, "gammapy.irf.PSF3D.read", false]], "read() (gammapy.irf.psfkernel class method)": [[151, "gammapy.irf.PSFKernel.read", false]], "read() (gammapy.irf.psfking class method)": [[152, "gammapy.irf.PSFKing.read", false]], "read() (gammapy.irf.psfmap class method)": [[153, "gammapy.irf.PSFMap.read", false]], "read() (gammapy.irf.radmax2d class method)": [[155, "gammapy.irf.RadMax2D.read", false]], "read() (gammapy.irf.recopsfmap class method)": [[156, "gammapy.irf.RecoPSFMap.read", false]], "read() (gammapy.maps.hpxmap static method)": [[183, "gammapy.maps.HpxMap.read", false]], "read() (gammapy.maps.hpxndmap static method)": [[184, "gammapy.maps.HpxNDMap.read", false]], "read() (gammapy.maps.map static method)": [[186, "gammapy.maps.Map.read", false]], "read() (gammapy.maps.maps class method)": [[190, "gammapy.maps.Maps.read", false]], "read() (gammapy.maps.regionndmap class method)": [[192, "gammapy.maps.RegionNDMap.read", false]], "read() (gammapy.maps.wcsmap static method)": [[195, "gammapy.maps.WcsMap.read", false]], "read() (gammapy.maps.wcsndmap static method)": [[196, "gammapy.maps.WcsNDMap.read", false]], "read() (gammapy.modeling.models.datasetmodels class method)": [[211, "gammapy.modeling.models.DatasetModels.read", false]], "read() (gammapy.modeling.models.eblabsorptionnormspectralmodel class method)": [[213, "gammapy.modeling.models.EBLAbsorptionNormSpectralModel.read", false]], "read() (gammapy.modeling.models.lightcurvetemplatetemporalmodel class method)": [[225, "gammapy.modeling.models.LightCurveTemplateTemporalModel.read", false]], "read() (gammapy.modeling.models.models class method)": [[233, "gammapy.modeling.models.Models.read", false]], "read() (gammapy.modeling.models.templatephasecurvetemporalmodel class method)": [[259, "gammapy.modeling.models.TemplatePhaseCurveTemporalModel.read", false]], "read() (gammapy.modeling.models.templatespatialmodel class method)": [[260, "gammapy.modeling.models.TemplateSpatialModel.read", false]], "read_arf() (gammapy.datasets.ogipdatasetreader static method)": [[101, "gammapy.datasets.OGIPDatasetReader.read_arf", false]], "read_bkg() (gammapy.datasets.ogipdatasetreader static method)": [[101, "gammapy.datasets.OGIPDatasetReader.read_bkg", false]], "read_builtin() (gammapy.modeling.models.eblabsorptionnormspectralmodel class method)": [[213, "gammapy.modeling.models.EBLAbsorptionNormSpectralModel.read_builtin", false]], "read_covariance() (gammapy.modeling.models.datasetmodels method)": [[211, "gammapy.modeling.models.DatasetModels.read_covariance", false]], "read_covariance() (gammapy.modeling.models.models method)": [[233, "gammapy.modeling.models.Models.read_covariance", false]], "read_datasets() (gammapy.analysis.analysis method)": [[15, "gammapy.analysis.Analysis.read_datasets", false]], "read_hermes_cube() (in module gammapy.modeling.models)": [[267, "gammapy.modeling.models.read_hermes_cube", false]], "read_hermes_cube() (in module gammapy.modeling.models.utils)": [[269, "gammapy.modeling.models.utils.read_hermes_cube", false]], "read_models() (gammapy.analysis.analysis method)": [[15, "gammapy.analysis.Analysis.read_models", false]], "read_pha() (gammapy.datasets.ogipdatasetreader static method)": [[101, "gammapy.datasets.OGIPDatasetReader.read_pha", false]], "read_rmf() (gammapy.datasets.ogipdatasetreader static method)": [[101, "gammapy.datasets.OGIPDatasetReader.read_rmf", false]], "read_xspec_model() (gammapy.modeling.models.templatespectralmodel class method)": [[261, "gammapy.modeling.models.TemplateSpectralModel.read_xspec_model", false]], "read_yaml() (in module gammapy.utils.scripts)": [[328, "gammapy.utils.scripts.read_yaml", false]], "reassign() (gammapy.astro.darkmatter.darkmatterannihilationspectralmodel method)": [[19, "gammapy.astro.darkmatter.DarkMatterAnnihilationSpectralModel.reassign", false]], "reassign() (gammapy.astro.darkmatter.darkmatterdecayspectralmodel method)": [[20, "gammapy.astro.darkmatter.DarkMatterDecaySpectralModel.reassign", false]], "reassign() (gammapy.astro.darkmatter.primaryflux method)": [[26, "gammapy.astro.darkmatter.PrimaryFlux.reassign", false]], "reassign() (gammapy.modeling.models.brokenpowerlawspectralmodel method)": [[205, "gammapy.modeling.models.BrokenPowerLawSpectralModel.reassign", false]], "reassign() (gammapy.modeling.models.compoundspectralmodel method)": [[206, "gammapy.modeling.models.CompoundSpectralModel.reassign", false]], "reassign() (gammapy.modeling.models.constantfluxspatialmodel method)": [[207, "gammapy.modeling.models.ConstantFluxSpatialModel.reassign", false]], "reassign() (gammapy.modeling.models.constantspatialmodel method)": [[208, "gammapy.modeling.models.ConstantSpatialModel.reassign", false]], "reassign() (gammapy.modeling.models.constantspectralmodel method)": [[209, "gammapy.modeling.models.ConstantSpectralModel.reassign", false]], "reassign() (gammapy.modeling.models.constanttemporalmodel method)": [[210, "gammapy.modeling.models.ConstantTemporalModel.reassign", false]], "reassign() (gammapy.modeling.models.datasetmodels method)": [[211, "gammapy.modeling.models.DatasetModels.reassign", false]], "reassign() (gammapy.modeling.models.diskspatialmodel method)": [[212, "gammapy.modeling.models.DiskSpatialModel.reassign", false]], "reassign() (gammapy.modeling.models.eblabsorptionnormspectralmodel method)": [[213, "gammapy.modeling.models.EBLAbsorptionNormSpectralModel.reassign", false]], "reassign() (gammapy.modeling.models.expcutoffpowerlaw3fglspectralmodel method)": [[215, "gammapy.modeling.models.ExpCutoffPowerLaw3FGLSpectralModel.reassign", false]], "reassign() (gammapy.modeling.models.expcutoffpowerlawnormspectralmodel method)": [[216, "gammapy.modeling.models.ExpCutoffPowerLawNormSpectralModel.reassign", false]], "reassign() (gammapy.modeling.models.expcutoffpowerlawspectralmodel method)": [[217, "gammapy.modeling.models.ExpCutoffPowerLawSpectralModel.reassign", false]], "reassign() (gammapy.modeling.models.expdecaytemporalmodel method)": [[218, "gammapy.modeling.models.ExpDecayTemporalModel.reassign", false]], "reassign() (gammapy.modeling.models.fovbackgroundmodel method)": [[219, "gammapy.modeling.models.FoVBackgroundModel.reassign", false]], "reassign() (gammapy.modeling.models.gaussianspatialmodel method)": [[220, "gammapy.modeling.models.GaussianSpatialModel.reassign", false]], "reassign() (gammapy.modeling.models.gaussianspectralmodel method)": [[221, "gammapy.modeling.models.GaussianSpectralModel.reassign", false]], "reassign() (gammapy.modeling.models.gaussiantemporalmodel method)": [[222, "gammapy.modeling.models.GaussianTemporalModel.reassign", false]], "reassign() (gammapy.modeling.models.generalizedgaussianspatialmodel method)": [[223, "gammapy.modeling.models.GeneralizedGaussianSpatialModel.reassign", false]], "reassign() (gammapy.modeling.models.generalizedgaussiantemporalmodel method)": [[224, "gammapy.modeling.models.GeneralizedGaussianTemporalModel.reassign", false]], "reassign() (gammapy.modeling.models.lightcurvetemplatetemporalmodel method)": [[225, "gammapy.modeling.models.LightCurveTemplateTemporalModel.reassign", false]], "reassign() (gammapy.modeling.models.lineartemporalmodel method)": [[226, "gammapy.modeling.models.LinearTemporalModel.reassign", false]], "reassign() (gammapy.modeling.models.logparabolanormspectralmodel method)": [[227, "gammapy.modeling.models.LogParabolaNormSpectralModel.reassign", false]], "reassign() (gammapy.modeling.models.logparabolaspectralmodel method)": [[228, "gammapy.modeling.models.LogParabolaSpectralModel.reassign", false]], "reassign() (gammapy.modeling.models.meyercrabspectralmodel method)": [[230, "gammapy.modeling.models.MeyerCrabSpectralModel.reassign", false]], "reassign() (gammapy.modeling.models.modelbase method)": [[232, "gammapy.modeling.models.ModelBase.reassign", false]], "reassign() (gammapy.modeling.models.models method)": [[233, "gammapy.modeling.models.Models.reassign", false]], "reassign() (gammapy.modeling.models.naimaspectralmodel method)": [[234, "gammapy.modeling.models.NaimaSpectralModel.reassign", false]], "reassign() (gammapy.modeling.models.piecewisenormspatialmodel method)": [[235, "gammapy.modeling.models.PiecewiseNormSpatialModel.reassign", false]], "reassign() (gammapy.modeling.models.piecewisenormspectralmodel method)": [[236, "gammapy.modeling.models.PiecewiseNormSpectralModel.reassign", false]], "reassign() (gammapy.modeling.models.pointspatialmodel method)": [[237, "gammapy.modeling.models.PointSpatialModel.reassign", false]], "reassign() (gammapy.modeling.models.powerlaw2spectralmodel method)": [[238, "gammapy.modeling.models.PowerLaw2SpectralModel.reassign", false]], "reassign() (gammapy.modeling.models.powerlawnormspectralmodel method)": [[239, "gammapy.modeling.models.PowerLawNormSpectralModel.reassign", false]], "reassign() (gammapy.modeling.models.powerlawspectralmodel method)": [[240, "gammapy.modeling.models.PowerLawSpectralModel.reassign", false]], "reassign() (gammapy.modeling.models.powerlawtemporalmodel method)": [[241, "gammapy.modeling.models.PowerLawTemporalModel.reassign", false]], "reassign() (gammapy.modeling.models.scalespectralmodel method)": [[244, "gammapy.modeling.models.ScaleSpectralModel.reassign", false]], "reassign() (gammapy.modeling.models.shell2spatialmodel method)": [[245, "gammapy.modeling.models.Shell2SpatialModel.reassign", false]], "reassign() (gammapy.modeling.models.shellspatialmodel method)": [[246, "gammapy.modeling.models.ShellSpatialModel.reassign", false]], "reassign() (gammapy.modeling.models.sinetemporalmodel method)": [[247, "gammapy.modeling.models.SineTemporalModel.reassign", false]], "reassign() (gammapy.modeling.models.skymodel method)": [[248, "gammapy.modeling.models.SkyModel.reassign", false]], "reassign() (gammapy.modeling.models.smoothbrokenpowerlawspectralmodel method)": [[249, "gammapy.modeling.models.SmoothBrokenPowerLawSpectralModel.reassign", false]], "reassign() (gammapy.modeling.models.spatialmodel method)": [[250, "gammapy.modeling.models.SpatialModel.reassign", false]], "reassign() (gammapy.modeling.models.spectralmodel method)": [[251, "gammapy.modeling.models.SpectralModel.reassign", false]], "reassign() (gammapy.modeling.models.superexpcutoffpowerlaw3fglspectralmodel method)": [[252, "gammapy.modeling.models.SuperExpCutoffPowerLaw3FGLSpectralModel.reassign", false]], "reassign() (gammapy.modeling.models.superexpcutoffpowerlaw4fgldr3spectralmodel method)": [[253, "gammapy.modeling.models.SuperExpCutoffPowerLaw4FGLDR3SpectralModel.reassign", false]], "reassign() (gammapy.modeling.models.superexpcutoffpowerlaw4fglspectralmodel method)": [[254, "gammapy.modeling.models.SuperExpCutoffPowerLaw4FGLSpectralModel.reassign", false]], "reassign() (gammapy.modeling.models.templatendspatialmodel method)": [[256, "gammapy.modeling.models.TemplateNDSpatialModel.reassign", false]], "reassign() (gammapy.modeling.models.templatendspectralmodel method)": [[257, "gammapy.modeling.models.TemplateNDSpectralModel.reassign", false]], "reassign() (gammapy.modeling.models.templatenpredmodel method)": [[258, "gammapy.modeling.models.TemplateNPredModel.reassign", false]], "reassign() (gammapy.modeling.models.templatephasecurvetemporalmodel method)": [[259, "gammapy.modeling.models.TemplatePhaseCurveTemporalModel.reassign", false]], "reassign() (gammapy.modeling.models.templatespatialmodel method)": [[260, "gammapy.modeling.models.TemplateSpatialModel.reassign", false]], "reassign() (gammapy.modeling.models.templatespectralmodel method)": [[261, "gammapy.modeling.models.TemplateSpectralModel.reassign", false]], "reassign() (gammapy.modeling.models.temporalmodel method)": [[262, "gammapy.modeling.models.TemporalModel.reassign", false]], "reco energy": [[554, "term-Reco-Energy", true]], "recompute_ul() (gammapy.estimators.fluxpoints method)": [[119, "gammapy.estimators.FluxPoints.recompute_ul", false]], "recopsfmap (class in gammapy.irf)": [[156, "gammapy.irf.RecoPSFMap", false]], "recursive_merge_dicts() (in module gammapy.utils.scripts)": [[329, "gammapy.utils.scripts.recursive_merge_dicts", false]], "redshift (gammapy.modeling.models.eblabsorptionnormspectralmodel attribute)": [[213, "gammapy.modeling.models.EBLAbsorptionNormSpectralModel.redshift", false]], "reduce() (gammapy.maps.hpxmap method)": [[183, "gammapy.maps.HpxMap.reduce", false]], "reduce() (gammapy.maps.hpxndmap method)": [[184, "gammapy.maps.HpxNDMap.reduce", false]], "reduce() (gammapy.maps.map method)": [[186, "gammapy.maps.Map.reduce", false]], "reduce() (gammapy.maps.regionndmap method)": [[192, "gammapy.maps.RegionNDMap.reduce", false]], "reduce() (gammapy.maps.wcsmap method)": [[195, "gammapy.maps.WcsMap.reduce", false]], "reduce() (gammapy.maps.wcsndmap method)": [[196, "gammapy.maps.WcsNDMap.reduce", false]], "reduce_over_axes() (gammapy.maps.hpxmap method)": [[183, "gammapy.maps.HpxMap.reduce_over_axes", false]], "reduce_over_axes() (gammapy.maps.hpxndmap method)": [[184, "gammapy.maps.HpxNDMap.reduce_over_axes", false]], "reduce_over_axes() (gammapy.maps.map method)": [[186, "gammapy.maps.Map.reduce_over_axes", false]], "reduce_over_axes() (gammapy.maps.regionndmap method)": [[192, "gammapy.maps.RegionNDMap.reduce_over_axes", false]], "reduce_over_axes() (gammapy.maps.wcsmap method)": [[195, "gammapy.maps.WcsMap.reduce_over_axes", false]], "reduce_over_axes() (gammapy.maps.wcsndmap method)": [[196, "gammapy.maps.WcsNDMap.reduce_over_axes", false]], "reference (gammapy.modeling.models.expcutoffpowerlaw3fglspectralmodel attribute)": [[215, "gammapy.modeling.models.ExpCutoffPowerLaw3FGLSpectralModel.reference", false]], "reference (gammapy.modeling.models.expcutoffpowerlawnormspectralmodel attribute)": [[216, "gammapy.modeling.models.ExpCutoffPowerLawNormSpectralModel.reference", false]], "reference (gammapy.modeling.models.expcutoffpowerlawspectralmodel attribute)": [[217, "gammapy.modeling.models.ExpCutoffPowerLawSpectralModel.reference", false]], "reference (gammapy.modeling.models.logparabolanormspectralmodel attribute)": [[227, "gammapy.modeling.models.LogParabolaNormSpectralModel.reference", false]], "reference (gammapy.modeling.models.logparabolaspectralmodel attribute)": [[228, "gammapy.modeling.models.LogParabolaSpectralModel.reference", false]], "reference (gammapy.modeling.models.powerlawnormspectralmodel attribute)": [[239, "gammapy.modeling.models.PowerLawNormSpectralModel.reference", false]], "reference (gammapy.modeling.models.powerlawspectralmodel attribute)": [[240, "gammapy.modeling.models.PowerLawSpectralModel.reference", false]], "reference (gammapy.modeling.models.smoothbrokenpowerlawspectralmodel attribute)": [[249, "gammapy.modeling.models.SmoothBrokenPowerLawSpectralModel.reference", false]], "reference (gammapy.modeling.models.superexpcutoffpowerlaw3fglspectralmodel attribute)": [[252, "gammapy.modeling.models.SuperExpCutoffPowerLaw3FGLSpectralModel.reference", false]], "reference (gammapy.modeling.models.superexpcutoffpowerlaw4fgldr3spectralmodel attribute)": [[253, "gammapy.modeling.models.SuperExpCutoffPowerLaw4FGLDR3SpectralModel.reference", false]], "reference (gammapy.modeling.models.superexpcutoffpowerlaw4fglspectralmodel attribute)": [[254, "gammapy.modeling.models.SuperExpCutoffPowerLaw4FGLSpectralModel.reference", false]], "reference_fluxes() (gammapy.astro.darkmatter.darkmatterannihilationspectralmodel method)": [[19, "gammapy.astro.darkmatter.DarkMatterAnnihilationSpectralModel.reference_fluxes", false]], "reference_fluxes() (gammapy.astro.darkmatter.darkmatterdecayspectralmodel method)": [[20, "gammapy.astro.darkmatter.DarkMatterDecaySpectralModel.reference_fluxes", false]], "reference_fluxes() (gammapy.astro.darkmatter.primaryflux method)": [[26, "gammapy.astro.darkmatter.PrimaryFlux.reference_fluxes", false]], "reference_fluxes() (gammapy.modeling.models.brokenpowerlawspectralmodel method)": [[205, "gammapy.modeling.models.BrokenPowerLawSpectralModel.reference_fluxes", false]], "reference_fluxes() (gammapy.modeling.models.compoundspectralmodel method)": [[206, "gammapy.modeling.models.CompoundSpectralModel.reference_fluxes", false]], "reference_fluxes() (gammapy.modeling.models.constantspectralmodel method)": [[209, "gammapy.modeling.models.ConstantSpectralModel.reference_fluxes", false]], "reference_fluxes() (gammapy.modeling.models.eblabsorptionnormspectralmodel method)": [[213, "gammapy.modeling.models.EBLAbsorptionNormSpectralModel.reference_fluxes", false]], "reference_fluxes() (gammapy.modeling.models.expcutoffpowerlaw3fglspectralmodel method)": [[215, "gammapy.modeling.models.ExpCutoffPowerLaw3FGLSpectralModel.reference_fluxes", false]], "reference_fluxes() (gammapy.modeling.models.expcutoffpowerlawnormspectralmodel method)": [[216, "gammapy.modeling.models.ExpCutoffPowerLawNormSpectralModel.reference_fluxes", false]], "reference_fluxes() (gammapy.modeling.models.expcutoffpowerlawspectralmodel method)": [[217, "gammapy.modeling.models.ExpCutoffPowerLawSpectralModel.reference_fluxes", false]], "reference_fluxes() (gammapy.modeling.models.gaussianspectralmodel method)": [[221, "gammapy.modeling.models.GaussianSpectralModel.reference_fluxes", false]], "reference_fluxes() (gammapy.modeling.models.logparabolanormspectralmodel method)": [[227, "gammapy.modeling.models.LogParabolaNormSpectralModel.reference_fluxes", false]], "reference_fluxes() (gammapy.modeling.models.logparabolaspectralmodel method)": [[228, "gammapy.modeling.models.LogParabolaSpectralModel.reference_fluxes", false]], "reference_fluxes() (gammapy.modeling.models.meyercrabspectralmodel method)": [[230, "gammapy.modeling.models.MeyerCrabSpectralModel.reference_fluxes", false]], "reference_fluxes() (gammapy.modeling.models.naimaspectralmodel method)": [[234, "gammapy.modeling.models.NaimaSpectralModel.reference_fluxes", false]], "reference_fluxes() (gammapy.modeling.models.piecewisenormspectralmodel method)": [[236, "gammapy.modeling.models.PiecewiseNormSpectralModel.reference_fluxes", false]], "reference_fluxes() (gammapy.modeling.models.powerlaw2spectralmodel method)": [[238, "gammapy.modeling.models.PowerLaw2SpectralModel.reference_fluxes", false]], "reference_fluxes() (gammapy.modeling.models.powerlawnormspectralmodel method)": [[239, "gammapy.modeling.models.PowerLawNormSpectralModel.reference_fluxes", false]], "reference_fluxes() (gammapy.modeling.models.powerlawspectralmodel method)": [[240, "gammapy.modeling.models.PowerLawSpectralModel.reference_fluxes", false]], "reference_fluxes() (gammapy.modeling.models.scalespectralmodel method)": [[244, "gammapy.modeling.models.ScaleSpectralModel.reference_fluxes", false]], "reference_fluxes() (gammapy.modeling.models.smoothbrokenpowerlawspectralmodel method)": [[249, "gammapy.modeling.models.SmoothBrokenPowerLawSpectralModel.reference_fluxes", false]], "reference_fluxes() (gammapy.modeling.models.spectralmodel method)": [[251, "gammapy.modeling.models.SpectralModel.reference_fluxes", false]], "reference_fluxes() (gammapy.modeling.models.superexpcutoffpowerlaw3fglspectralmodel method)": [[252, "gammapy.modeling.models.SuperExpCutoffPowerLaw3FGLSpectralModel.reference_fluxes", false]], "reference_fluxes() (gammapy.modeling.models.superexpcutoffpowerlaw4fgldr3spectralmodel method)": [[253, "gammapy.modeling.models.SuperExpCutoffPowerLaw4FGLDR3SpectralModel.reference_fluxes", false]], "reference_fluxes() (gammapy.modeling.models.superexpcutoffpowerlaw4fglspectralmodel method)": [[254, "gammapy.modeling.models.SuperExpCutoffPowerLaw4FGLSpectralModel.reference_fluxes", false]], "reference_fluxes() (gammapy.modeling.models.templatendspectralmodel method)": [[257, "gammapy.modeling.models.TemplateNDSpectralModel.reference_fluxes", false]], "reference_fluxes() (gammapy.modeling.models.templatespectralmodel method)": [[261, "gammapy.modeling.models.TemplateSpectralModel.reference_fluxes", false]], "reference_model (gammapy.estimators.fluxmaps attribute)": [[117, "gammapy.estimators.FluxMaps.reference_model", false]], "reference_model (gammapy.estimators.fluxpoints attribute)": [[119, "gammapy.estimators.FluxPoints.reference_model", false]], "reference_model_default (gammapy.estimators.fluxmaps attribute)": [[117, "gammapy.estimators.FluxMaps.reference_model_default", false]], "reference_model_default (gammapy.estimators.fluxpoints attribute)": [[119, "gammapy.estimators.FluxPoints.reference_model_default", false]], "reference_spectral_model (gammapy.estimators.fluxmaps attribute)": [[117, "gammapy.estimators.FluxMaps.reference_spectral_model", false]], "reference_spectral_model (gammapy.estimators.fluxpoints attribute)": [[119, "gammapy.estimators.FluxPoints.reference_spectral_model", false]], "reference_time (gammapy.maps.timemapaxis attribute)": [[193, "gammapy.maps.TimeMapAxis.reference_time", false]], "reference_time (gammapy.modeling.models.constanttemporalmodel attribute)": [[210, "gammapy.modeling.models.ConstantTemporalModel.reference_time", false]], "reference_time (gammapy.modeling.models.expdecaytemporalmodel attribute)": [[218, "gammapy.modeling.models.ExpDecayTemporalModel.reference_time", false]], "reference_time (gammapy.modeling.models.gaussiantemporalmodel attribute)": [[222, "gammapy.modeling.models.GaussianTemporalModel.reference_time", false]], "reference_time (gammapy.modeling.models.generalizedgaussiantemporalmodel attribute)": [[224, "gammapy.modeling.models.GeneralizedGaussianTemporalModel.reference_time", false]], "reference_time (gammapy.modeling.models.lightcurvetemplatetemporalmodel attribute)": [[225, "gammapy.modeling.models.LightCurveTemplateTemporalModel.reference_time", false]], "reference_time (gammapy.modeling.models.lineartemporalmodel attribute)": [[226, "gammapy.modeling.models.LinearTemporalModel.reference_time", false]], "reference_time (gammapy.modeling.models.powerlawtemporalmodel attribute)": [[241, "gammapy.modeling.models.PowerLawTemporalModel.reference_time", false]], "reference_time (gammapy.modeling.models.sinetemporalmodel attribute)": [[247, "gammapy.modeling.models.SineTemporalModel.reference_time", false]], "reference_time (gammapy.modeling.models.templatephasecurvetemporalmodel attribute)": [[259, "gammapy.modeling.models.TemplatePhaseCurveTemporalModel.reference_time", false]], "reference_time (gammapy.modeling.models.temporalmodel attribute)": [[262, "gammapy.modeling.models.TemporalModel.reference_time", false]], "reflected background": [[554, "term-Reflected-Background", true]], "reflectedregionsbackgroundmaker (class in gammapy.makers)": [[165, "gammapy.makers.ReflectedRegionsBackgroundMaker", false]], "reflectedregionsfinder (class in gammapy.makers)": [[166, "gammapy.makers.ReflectedRegionsFinder", false]], "region (gammapy.maps.hpxgeom attribute)": [[182, "gammapy.maps.HpxGeom.region", false]], "region (gammapy.maps.regiongeom attribute)": [[191, "gammapy.maps.RegionGeom.region", false]], "region_mask() (gammapy.maps.hpxgeom method)": [[182, "gammapy.maps.HpxGeom.region_mask", false]], "region_mask() (gammapy.maps.wcsgeom method)": [[194, "gammapy.maps.WcsGeom.region_mask", false]], "region_to_frame() (in module gammapy.utils.regions)": [[324, "gammapy.utils.regions.region_to_frame", false]], "region_weights() (gammapy.maps.wcsgeom method)": [[194, "gammapy.maps.WcsGeom.region_weights", false]], "regiongeom (class in gammapy.maps)": [[191, "gammapy.maps.RegionGeom", false]], "regionndmap (class in gammapy.maps)": [[192, "gammapy.maps.RegionNDMap", false]], "regions_to_compound_region() (in module gammapy.utils.regions)": [[325, "gammapy.utils.regions.regions_to_compound_region", false]], "regionsfinder (class in gammapy.makers)": [[167, "gammapy.makers.RegionsFinder", false]], "remove() (gammapy.data.observations method)": [[87, "gammapy.data.Observations.remove", false]], "remove() (gammapy.datasets.datasets method)": [[95, "gammapy.datasets.Datasets.remove", false]], "remove() (gammapy.modeling.models.models method)": [[233, "gammapy.modeling.models.Models.remove", false]], "remove_column() (gammapy.data.hduindextable method)": [[83, "gammapy.data.HDUIndexTable.remove_column", false]], "remove_column() (gammapy.data.observationtable method)": [[86, "gammapy.data.ObservationTable.remove_column", false]], "remove_columns() (gammapy.data.hduindextable method)": [[83, "gammapy.data.HDUIndexTable.remove_columns", false]], "remove_columns() (gammapy.data.observationtable method)": [[86, "gammapy.data.ObservationTable.remove_columns", false]], "remove_indices() (gammapy.data.hduindextable method)": [[83, "gammapy.data.HDUIndexTable.remove_indices", false]], "remove_indices() (gammapy.data.observationtable method)": [[86, "gammapy.data.ObservationTable.remove_indices", false]], "remove_row() (gammapy.data.hduindextable method)": [[83, "gammapy.data.HDUIndexTable.remove_row", false]], "remove_row() (gammapy.data.observationtable method)": [[86, "gammapy.data.ObservationTable.remove_row", false]], "remove_rows() (gammapy.data.hduindextable method)": [[83, "gammapy.data.HDUIndexTable.remove_rows", false]], "remove_rows() (gammapy.data.observationtable method)": [[86, "gammapy.data.ObservationTable.remove_rows", false]], "rename() (gammapy.astro.population.casebattacharya1998 class method)": [[28, "gammapy.astro.population.CaseBattacharya1998.rename", false]], "rename() (gammapy.astro.population.exponential class method)": [[29, "gammapy.astro.population.Exponential.rename", false]], "rename() (gammapy.astro.population.faucherkaspi2006 class method)": [[30, "gammapy.astro.population.FaucherKaspi2006.rename", false]], "rename() (gammapy.astro.population.faucherkaspi2006velocitybimodal class method)": [[31, "gammapy.astro.population.FaucherKaspi2006VelocityBimodal.rename", false]], "rename() (gammapy.astro.population.faucherkaspi2006velocitymaxwellian class method)": [[32, "gammapy.astro.population.FaucherKaspi2006VelocityMaxwellian.rename", false]], "rename() (gammapy.astro.population.lorimer2006 class method)": [[35, "gammapy.astro.population.Lorimer2006.rename", false]], "rename() (gammapy.astro.population.paczynski1990 class method)": [[36, "gammapy.astro.population.Paczynski1990.rename", false]], "rename() (gammapy.astro.population.paczynski1990velocity class method)": [[37, "gammapy.astro.population.Paczynski1990Velocity.rename", false]], "rename() (gammapy.astro.population.yusifovkucuk2004 class method)": [[39, "gammapy.astro.population.YusifovKucuk2004.rename", false]], "rename() (gammapy.astro.population.yusifovkucuk2004b class method)": [[40, "gammapy.astro.population.YusifovKucuk2004B.rename", false]], "rename() (gammapy.maps.mapaxis method)": [[188, "gammapy.maps.MapAxis.rename", false]], "rename_axes() (gammapy.maps.geom method)": [[181, "gammapy.maps.Geom.rename_axes", false]], "rename_axes() (gammapy.maps.hpxgeom method)": [[182, "gammapy.maps.HpxGeom.rename_axes", false]], "rename_axes() (gammapy.maps.hpxmap method)": [[183, "gammapy.maps.HpxMap.rename_axes", false]], "rename_axes() (gammapy.maps.hpxndmap method)": [[184, "gammapy.maps.HpxNDMap.rename_axes", false]], "rename_axes() (gammapy.maps.map method)": [[186, "gammapy.maps.Map.rename_axes", false]], "rename_axes() (gammapy.maps.mapaxes method)": [[187, "gammapy.maps.MapAxes.rename_axes", false]], "rename_axes() (gammapy.maps.regiongeom method)": [[191, "gammapy.maps.RegionGeom.rename_axes", false]], "rename_axes() (gammapy.maps.regionndmap method)": [[192, "gammapy.maps.RegionNDMap.rename_axes", false]], "rename_axes() (gammapy.maps.wcsgeom method)": [[194, "gammapy.maps.WcsGeom.rename_axes", false]], "rename_axes() (gammapy.maps.wcsmap method)": [[195, "gammapy.maps.WcsMap.rename_axes", false]], "rename_axes() (gammapy.maps.wcsndmap method)": [[196, "gammapy.maps.WcsNDMap.rename_axes", false]], "rename_column() (gammapy.data.hduindextable method)": [[83, "gammapy.data.HDUIndexTable.rename_column", false]], "rename_column() (gammapy.data.observationtable method)": [[86, "gammapy.data.ObservationTable.rename_column", false]], "rename_columns() (gammapy.data.hduindextable method)": [[83, "gammapy.data.HDUIndexTable.rename_columns", false]], "rename_columns() (gammapy.data.observationtable method)": [[86, "gammapy.data.ObservationTable.rename_columns", false]], "render() (gammapy.astro.population.casebattacharya1998 method)": [[28, "gammapy.astro.population.CaseBattacharya1998.render", false]], "render() (gammapy.astro.population.exponential method)": [[29, "gammapy.astro.population.Exponential.render", false]], "render() (gammapy.astro.population.faucherkaspi2006 method)": [[30, "gammapy.astro.population.FaucherKaspi2006.render", false]], "render() (gammapy.astro.population.faucherkaspi2006velocitybimodal method)": [[31, "gammapy.astro.population.FaucherKaspi2006VelocityBimodal.render", false]], "render() (gammapy.astro.population.faucherkaspi2006velocitymaxwellian method)": [[32, "gammapy.astro.population.FaucherKaspi2006VelocityMaxwellian.render", false]], "render() (gammapy.astro.population.lorimer2006 method)": [[35, "gammapy.astro.population.Lorimer2006.render", false]], "render() (gammapy.astro.population.paczynski1990 method)": [[36, "gammapy.astro.population.Paczynski1990.render", false]], "render() (gammapy.astro.population.paczynski1990velocity method)": [[37, "gammapy.astro.population.Paczynski1990Velocity.render", false]], "render() (gammapy.astro.population.yusifovkucuk2004 method)": [[39, "gammapy.astro.population.YusifovKucuk2004.render", false]], "render() (gammapy.astro.population.yusifovkucuk2004b method)": [[40, "gammapy.astro.population.YusifovKucuk2004B.render", false]], "reorder_axes() (gammapy.maps.hpxmap method)": [[183, "gammapy.maps.HpxMap.reorder_axes", false]], "reorder_axes() (gammapy.maps.hpxndmap method)": [[184, "gammapy.maps.HpxNDMap.reorder_axes", false]], "reorder_axes() (gammapy.maps.map method)": [[186, "gammapy.maps.Map.reorder_axes", false]], "reorder_axes() (gammapy.maps.regionndmap method)": [[192, "gammapy.maps.RegionNDMap.reorder_axes", false]], "reorder_axes() (gammapy.maps.wcsmap method)": [[195, "gammapy.maps.WcsMap.reorder_axes", false]], "reorder_axes() (gammapy.maps.wcsndmap method)": [[196, "gammapy.maps.WcsNDMap.reorder_axes", false]], "replace() (gammapy.maps.mapaxes method)": [[187, "gammapy.maps.MapAxes.replace", false]], "replace_axis() (gammapy.maps.geom method)": [[181, "gammapy.maps.Geom.replace_axis", false]], "replace_axis() (gammapy.maps.hpxgeom method)": [[182, "gammapy.maps.HpxGeom.replace_axis", false]], "replace_axis() (gammapy.maps.regiongeom method)": [[191, "gammapy.maps.RegionGeom.replace_axis", false]], "replace_axis() (gammapy.maps.wcsgeom method)": [[194, "gammapy.maps.WcsGeom.replace_axis", false]], "replace_column() (gammapy.data.hduindextable method)": [[83, "gammapy.data.HDUIndexTable.replace_column", false]], "replace_column() (gammapy.data.observationtable method)": [[86, "gammapy.data.ObservationTable.replace_column", false]], "reproject_by_image() (gammapy.maps.hpxmap method)": [[183, "gammapy.maps.HpxMap.reproject_by_image", false]], "reproject_by_image() (gammapy.maps.hpxndmap method)": [[184, "gammapy.maps.HpxNDMap.reproject_by_image", false]], "reproject_by_image() (gammapy.maps.map method)": [[186, "gammapy.maps.Map.reproject_by_image", false]], "reproject_by_image() (gammapy.maps.regionndmap method)": [[192, "gammapy.maps.RegionNDMap.reproject_by_image", false]], "reproject_by_image() (gammapy.maps.wcsmap method)": [[195, "gammapy.maps.WcsMap.reproject_by_image", false]], "reproject_by_image() (gammapy.maps.wcsndmap method)": [[196, "gammapy.maps.WcsNDMap.reproject_by_image", false]], "reproject_to_geom() (gammapy.maps.hpxmap method)": [[183, "gammapy.maps.HpxMap.reproject_to_geom", false]], "reproject_to_geom() (gammapy.maps.hpxndmap method)": [[184, "gammapy.maps.HpxNDMap.reproject_to_geom", false]], "reproject_to_geom() (gammapy.maps.map method)": [[186, "gammapy.maps.Map.reproject_to_geom", false]], "reproject_to_geom() (gammapy.maps.regionndmap method)": [[192, "gammapy.maps.RegionNDMap.reproject_to_geom", false]], "reproject_to_geom() (gammapy.maps.wcsmap method)": [[195, "gammapy.maps.WcsMap.reproject_to_geom", false]], "reproject_to_geom() (gammapy.maps.wcsndmap method)": [[196, "gammapy.maps.WcsNDMap.reproject_to_geom", false]], "required_axes (gammapy.irf.background2d attribute)": [[137, "gammapy.irf.Background2D.required_axes", false]], "required_axes (gammapy.irf.background3d attribute)": [[138, "gammapy.irf.Background3D.required_axes", false]], "required_axes (gammapy.irf.backgroundirf attribute)": [[139, "gammapy.irf.BackgroundIRF.required_axes", false]], "required_axes (gammapy.irf.edispkernel attribute)": [[140, "gammapy.irf.EDispKernel.required_axes", false]], "required_axes (gammapy.irf.edispkernelmap attribute)": [[141, "gammapy.irf.EDispKernelMap.required_axes", false]], "required_axes (gammapy.irf.edispmap attribute)": [[142, "gammapy.irf.EDispMap.required_axes", false]], "required_axes (gammapy.irf.effectiveareatable2d attribute)": [[143, "gammapy.irf.EffectiveAreaTable2D.required_axes", false]], "required_axes (gammapy.irf.energydependentmultigausspsf attribute)": [[144, "gammapy.irf.EnergyDependentMultiGaussPSF.required_axes", false]], "required_axes (gammapy.irf.energydispersion2d attribute)": [[145, "gammapy.irf.EnergyDispersion2D.required_axes", false]], "required_axes (gammapy.irf.irf attribute)": [[147, "gammapy.irf.IRF.required_axes", false]], "required_axes (gammapy.irf.irfmap attribute)": [[148, "gammapy.irf.IRFMap.required_axes", false]], "required_axes (gammapy.irf.parametricpsf attribute)": [[154, "gammapy.irf.ParametricPSF.required_axes", false]], "required_axes (gammapy.irf.psf3d attribute)": [[150, "gammapy.irf.PSF3D.required_axes", false]], "required_axes (gammapy.irf.psfking attribute)": [[152, "gammapy.irf.PSFKing.required_axes", false]], "required_axes (gammapy.irf.psfmap attribute)": [[153, "gammapy.irf.PSFMap.required_axes", false]], "required_axes (gammapy.irf.radmax2d attribute)": [[155, "gammapy.irf.RadMax2D.required_axes", false]], "required_axes (gammapy.irf.recopsfmap attribute)": [[156, "gammapy.irf.RecoPSFMap.required_axes", false]], "required_parameters (gammapy.irf.energydependentmultigausspsf attribute)": [[144, "gammapy.irf.EnergyDependentMultiGaussPSF.required_parameters", false]], "required_parameters (gammapy.irf.parametricpsf attribute)": [[154, "gammapy.irf.ParametricPSF.required_parameters", false]], "required_parameters (gammapy.irf.psfking attribute)": [[152, "gammapy.irf.PSFKing.required_parameters", false]], "requires_data() (in module gammapy.utils.testing)": [[340, "gammapy.utils.testing.requires_data", false]], "requires_dependency() (in module gammapy.utils.testing)": [[341, "gammapy.utils.testing.requires_dependency", false]], "resample() (gammapy.maps.hpxmap method)": [[183, "gammapy.maps.HpxMap.resample", false]], "resample() (gammapy.maps.hpxndmap method)": [[184, "gammapy.maps.HpxNDMap.resample", false]], "resample() (gammapy.maps.labelmapaxis method)": [[185, "gammapy.maps.LabelMapAxis.resample", false]], "resample() (gammapy.maps.map method)": [[186, "gammapy.maps.Map.resample", false]], "resample() (gammapy.maps.mapaxes method)": [[187, "gammapy.maps.MapAxes.resample", false]], "resample() (gammapy.maps.regionndmap method)": [[192, "gammapy.maps.RegionNDMap.resample", false]], "resample() (gammapy.maps.wcsmap method)": [[195, "gammapy.maps.WcsMap.resample", false]], "resample() (gammapy.maps.wcsndmap method)": [[196, "gammapy.maps.WcsNDMap.resample", false]], "resample_axis() (gammapy.estimators.fluxpoints method)": [[119, "gammapy.estimators.FluxPoints.resample_axis", false]], "resample_axis() (gammapy.maps.geom method)": [[181, "gammapy.maps.Geom.resample_axis", false]], "resample_axis() (gammapy.maps.hpxgeom method)": [[182, "gammapy.maps.HpxGeom.resample_axis", false]], "resample_axis() (gammapy.maps.hpxmap method)": [[183, "gammapy.maps.HpxMap.resample_axis", false]], "resample_axis() (gammapy.maps.hpxndmap method)": [[184, "gammapy.maps.HpxNDMap.resample_axis", false]], "resample_axis() (gammapy.maps.map method)": [[186, "gammapy.maps.Map.resample_axis", false]], "resample_axis() (gammapy.maps.regiongeom method)": [[191, "gammapy.maps.RegionGeom.resample_axis", false]], "resample_axis() (gammapy.maps.regionndmap method)": [[192, "gammapy.maps.RegionNDMap.resample_axis", false]], "resample_axis() (gammapy.maps.wcsgeom method)": [[194, "gammapy.maps.WcsGeom.resample_axis", false]], "resample_axis() (gammapy.maps.wcsmap method)": [[195, "gammapy.maps.WcsMap.resample_axis", false]], "resample_axis() (gammapy.maps.wcsndmap method)": [[196, "gammapy.maps.WcsNDMap.resample_axis", false]], "resample_energy_axis() (gammapy.datasets.mapdataset method)": [[97, "gammapy.datasets.MapDataset.resample_energy_axis", false]], "resample_energy_axis() (gammapy.datasets.mapdatasetonoff method)": [[100, "gammapy.datasets.MapDatasetOnOff.resample_energy_axis", false]], "resample_energy_axis() (gammapy.datasets.spectrumdataset method)": [[104, "gammapy.datasets.SpectrumDataset.resample_energy_axis", false]], "resample_energy_axis() (gammapy.datasets.spectrumdatasetonoff method)": [[105, "gammapy.datasets.SpectrumDatasetOnOff.resample_energy_axis", false]], "resample_energy_axis() (gammapy.irf.edispkernelmap method)": [[141, "gammapy.irf.EDispKernelMap.resample_energy_axis", false]], "resample_energy_edges() (in module gammapy.estimators.utils)": [[136, "gammapy.estimators.utils.resample_energy_edges", false]], "reset_data_cache() (gammapy.datasets.mapdataset method)": [[97, "gammapy.datasets.MapDataset.reset_data_cache", false]], "reset_data_cache() (gammapy.datasets.mapdatasetonoff method)": [[100, "gammapy.datasets.MapDatasetOnOff.reset_data_cache", false]], "reset_data_cache() (gammapy.datasets.spectrumdataset method)": [[104, "gammapy.datasets.SpectrumDataset.reset_data_cache", false]], "reset_data_cache() (gammapy.datasets.spectrumdatasetonoff method)": [[105, "gammapy.datasets.SpectrumDatasetOnOff.reset_data_cache", false]], "reset_to_default() (gammapy.modeling.models.fovbackgroundmodel method)": [[219, "gammapy.modeling.models.FoVBackgroundModel.reset_to_default", false]], "residuals() (gammapy.datasets.fluxpointsdataset method)": [[96, "gammapy.datasets.FluxPointsDataset.residuals", false]], "residuals() (gammapy.datasets.mapdataset method)": [[97, "gammapy.datasets.MapDataset.residuals", false]], "residuals() (gammapy.datasets.mapdatasetonoff method)": [[100, "gammapy.datasets.MapDatasetOnOff.residuals", false]], "residuals() (gammapy.datasets.spectrumdataset method)": [[104, "gammapy.datasets.SpectrumDataset.residuals", false]], "residuals() (gammapy.datasets.spectrumdatasetonoff method)": [[105, "gammapy.datasets.SpectrumDatasetOnOff.residuals", false]], "restore_status() (gammapy.modeling.models.datasetmodels method)": [[211, "gammapy.modeling.models.DatasetModels.restore_status", false]], "restore_status() (gammapy.modeling.models.models method)": [[233, "gammapy.modeling.models.Models.restore_status", false]], "restore_status() (gammapy.modeling.parameters method)": [[202, "gammapy.modeling.Parameters.restore_status", false]], "restore_status() (gammapy.modeling.priorparameters method)": [[204, "gammapy.modeling.PriorParameters.restore_status", false]], "return_units (gammapy.astro.population.casebattacharya1998 attribute)": [[28, "gammapy.astro.population.CaseBattacharya1998.return_units", false]], "return_units (gammapy.astro.population.exponential attribute)": [[29, "gammapy.astro.population.Exponential.return_units", false]], "return_units (gammapy.astro.population.faucherkaspi2006 attribute)": [[30, "gammapy.astro.population.FaucherKaspi2006.return_units", false]], "return_units (gammapy.astro.population.faucherkaspi2006velocitybimodal attribute)": [[31, "gammapy.astro.population.FaucherKaspi2006VelocityBimodal.return_units", false]], "return_units (gammapy.astro.population.faucherkaspi2006velocitymaxwellian attribute)": [[32, "gammapy.astro.population.FaucherKaspi2006VelocityMaxwellian.return_units", false]], "return_units (gammapy.astro.population.lorimer2006 attribute)": [[35, "gammapy.astro.population.Lorimer2006.return_units", false]], "return_units (gammapy.astro.population.paczynski1990 attribute)": [[36, "gammapy.astro.population.Paczynski1990.return_units", false]], "return_units (gammapy.astro.population.paczynski1990velocity attribute)": [[37, "gammapy.astro.population.Paczynski1990Velocity.return_units", false]], "return_units (gammapy.astro.population.yusifovkucuk2004 attribute)": [[39, "gammapy.astro.population.YusifovKucuk2004.return_units", false]], "return_units (gammapy.astro.population.yusifovkucuk2004b attribute)": [[40, "gammapy.astro.population.YusifovKucuk2004B.return_units", false]], "reverse (gammapy.maps.mapaxes attribute)": [[187, "gammapy.maps.MapAxes.reverse", false]], "reverse() (gammapy.data.hduindextable method)": [[83, "gammapy.data.HDUIndexTable.reverse", false]], "reverse() (gammapy.data.observations method)": [[87, "gammapy.data.Observations.reverse", false]], "reverse() (gammapy.data.observationtable method)": [[86, "gammapy.data.ObservationTable.reverse", false]], "reverse() (gammapy.datasets.datasets method)": [[95, "gammapy.datasets.Datasets.reverse", false]], "reverse() (gammapy.modeling.models.models method)": [[233, "gammapy.modeling.models.Models.reverse", false]], "ring background": [[554, "term-Ring-Background", true]], "ringbackgroundmaker (class in gammapy.makers)": [[168, "gammapy.makers.RingBackgroundMaker", false]], "roi": [[554, "term-RoI", true]], "round() (gammapy.data.hduindextable method)": [[83, "gammapy.data.HDUIndexTable.round", false]], "round() (gammapy.data.observationtable method)": [[86, "gammapy.data.ObservationTable.round", false]], "round() (gammapy.maps.mapaxis method)": [[188, "gammapy.maps.MapAxis.round", false]], "row_idx() (gammapy.data.hduindextable method)": [[83, "gammapy.data.HDUIndexTable.row_idx", false]], "row_index (gammapy.catalog.sourcecatalogobject attribute)": [[67, "gammapy.catalog.SourceCatalogObject.row_index", false]], "row_index (gammapy.catalog.sourcecatalogobject1lhaaso attribute)": [[68, "gammapy.catalog.SourceCatalogObject1LHAASO.row_index", false]], "row_index (gammapy.catalog.sourcecatalogobject2fhl attribute)": [[69, "gammapy.catalog.SourceCatalogObject2FHL.row_index", false]], "row_index (gammapy.catalog.sourcecatalogobject2hwc attribute)": [[70, "gammapy.catalog.SourceCatalogObject2HWC.row_index", false]], "row_index (gammapy.catalog.sourcecatalogobject3fgl attribute)": [[71, "gammapy.catalog.SourceCatalogObject3FGL.row_index", false]], "row_index (gammapy.catalog.sourcecatalogobject3fhl attribute)": [[72, "gammapy.catalog.SourceCatalogObject3FHL.row_index", false]], "row_index (gammapy.catalog.sourcecatalogobject3hwc attribute)": [[73, "gammapy.catalog.SourceCatalogObject3HWC.row_index", false]], "row_index (gammapy.catalog.sourcecatalogobject4fgl attribute)": [[74, "gammapy.catalog.SourceCatalogObject4FGL.row_index", false]], "row_index (gammapy.catalog.sourcecatalogobjectgammacat attribute)": [[75, "gammapy.catalog.SourceCatalogObjectGammaCat.row_index", false]], "row_index (gammapy.catalog.sourcecatalogobjecthgps attribute)": [[76, "gammapy.catalog.SourceCatalogObjectHGPS.row_index", false]], "row_index (gammapy.catalog.sourcecatalogobjecthgpscomponent attribute)": [[77, "gammapy.catalog.SourceCatalogObjectHGPSComponent.row_index", false]], "row_index() (gammapy.catalog.sourcecatalog method)": [[56, "gammapy.catalog.SourceCatalog.row_index", false]], "row_index() (gammapy.catalog.sourcecatalog1lhaaso method)": [[57, "gammapy.catalog.SourceCatalog1LHAASO.row_index", false]], "row_index() (gammapy.catalog.sourcecatalog2fhl method)": [[58, "gammapy.catalog.SourceCatalog2FHL.row_index", false]], "row_index() (gammapy.catalog.sourcecatalog2hwc method)": [[59, "gammapy.catalog.SourceCatalog2HWC.row_index", false]], "row_index() (gammapy.catalog.sourcecatalog3fgl method)": [[60, "gammapy.catalog.SourceCatalog3FGL.row_index", false]], "row_index() (gammapy.catalog.sourcecatalog3fhl method)": [[61, "gammapy.catalog.SourceCatalog3FHL.row_index", false]], "row_index() (gammapy.catalog.sourcecatalog3hwc method)": [[62, "gammapy.catalog.SourceCatalog3HWC.row_index", false]], "row_index() (gammapy.catalog.sourcecatalog4fgl method)": [[63, "gammapy.catalog.SourceCatalog4FGL.row_index", false]], "row_index() (gammapy.catalog.sourcecataloggammacat method)": [[64, "gammapy.catalog.SourceCatalogGammaCat.row_index", false]], "row_index() (gammapy.catalog.sourcecataloghgps method)": [[65, "gammapy.catalog.SourceCatalogHGPS.row_index", false]], "run() (gammapy.data.observationseventssampler method)": [[88, "gammapy.data.ObservationsEventsSampler.run", false]], "run() (gammapy.datasets.mapdataseteventsampler method)": [[98, "gammapy.datasets.MapDatasetEventSampler.run", false]], "run() (gammapy.datasets.observationeventsampler method)": [[103, "gammapy.datasets.ObservationEventSampler.run", false]], "run() (gammapy.estimators.asmoothmapestimator method)": [[112, "gammapy.estimators.ASmoothMapEstimator.run", false]], "run() (gammapy.estimators.energydependentmorphologyestimator method)": [[114, "gammapy.estimators.EnergyDependentMorphologyEstimator.run", false]], "run() (gammapy.estimators.estimator method)": [[115, "gammapy.estimators.Estimator.run", false]], "run() (gammapy.estimators.excessmapestimator method)": [[116, "gammapy.estimators.ExcessMapEstimator.run", false]], "run() (gammapy.estimators.fluxpointsestimator method)": [[120, "gammapy.estimators.FluxPointsEstimator.run", false]], "run() (gammapy.estimators.fluxprofileestimator method)": [[121, "gammapy.estimators.FluxProfileEstimator.run", false]], "run() (gammapy.estimators.imageprofileestimator method)": [[123, "gammapy.estimators.ImageProfileEstimator.run", false]], "run() (gammapy.estimators.lightcurveestimator method)": [[124, "gammapy.estimators.LightCurveEstimator.run", false]], "run() (gammapy.estimators.parameterestimator method)": [[125, "gammapy.estimators.ParameterEstimator.run", false]], "run() (gammapy.estimators.sensitivityestimator method)": [[126, "gammapy.estimators.SensitivityEstimator.run", false]], "run() (gammapy.estimators.tsmapestimator method)": [[127, "gammapy.estimators.TSMapEstimator.run", false]], "run() (gammapy.makers.adaptiveringbackgroundmaker method)": [[158, "gammapy.makers.AdaptiveRingBackgroundMaker.run", false]], "run() (gammapy.makers.datasetsmaker method)": [[159, "gammapy.makers.DatasetsMaker.run", false]], "run() (gammapy.makers.fovbackgroundmaker method)": [[160, "gammapy.makers.FoVBackgroundMaker.run", false]], "run() (gammapy.makers.maker method)": [[162, "gammapy.makers.Maker.run", false]], "run() (gammapy.makers.mapdatasetmaker method)": [[163, "gammapy.makers.MapDatasetMaker.run", false]], "run() (gammapy.makers.phasebackgroundmaker method)": [[164, "gammapy.makers.PhaseBackgroundMaker.run", false]], "run() (gammapy.makers.reflectedregionsbackgroundmaker method)": [[165, "gammapy.makers.ReflectedRegionsBackgroundMaker.run", false]], "run() (gammapy.makers.reflectedregionsfinder method)": [[166, "gammapy.makers.ReflectedRegionsFinder.run", false]], "run() (gammapy.makers.regionsfinder method)": [[167, "gammapy.makers.RegionsFinder.run", false]], "run() (gammapy.makers.ringbackgroundmaker method)": [[168, "gammapy.makers.RingBackgroundMaker.run", false]], "run() (gammapy.makers.safemaskmaker method)": [[169, "gammapy.makers.SafeMaskMaker.run", false]], "run() (gammapy.makers.spectrumdatasetmaker method)": [[170, "gammapy.makers.SpectrumDatasetMaker.run", false]], "run() (gammapy.makers.wobbleregionsfinder method)": [[171, "gammapy.makers.WobbleRegionsFinder.run", false]], "run() (gammapy.modeling.fit method)": [[200, "gammapy.modeling.Fit.run", false]], "run() (gammapy.utils.testing.checker method)": [[335, "gammapy.utils.testing.Checker.run", false]], "run_fit() (gammapy.analysis.analysis method)": [[15, "gammapy.analysis.Analysis.run_fit", false]], "run_multiprocessing() (in module gammapy.utils.parallel)": [[311, "gammapy.utils.parallel.run_multiprocessing", false]], "safe_mask_maker (gammapy.makers.datasetsmaker attribute)": [[159, "gammapy.makers.DatasetsMaker.safe_mask_maker", false]], "safemaskmaker (class in gammapy.makers)": [[169, "gammapy.makers.SafeMaskMaker", false]], "sample() (gammapy.utils.random.inversecdfsampler method)": [[312, "gammapy.utils.random.InverseCDFSampler.sample", false]], "sample_axis() (gammapy.utils.random.inversecdfsampler method)": [[312, "gammapy.utils.random.InverseCDFSampler.sample_axis", false]], "sample_background() (gammapy.datasets.mapdataseteventsampler method)": [[98, "gammapy.datasets.MapDatasetEventSampler.sample_background", false]], "sample_background() (gammapy.datasets.observationeventsampler method)": [[103, "gammapy.datasets.ObservationEventSampler.sample_background", false]], "sample_coord() (gammapy.irf.edispmap method)": [[142, "gammapy.irf.EDispMap.sample_coord", false]], "sample_coord() (gammapy.irf.psfmap method)": [[153, "gammapy.irf.PSFMap.sample_coord", false]], "sample_coord() (gammapy.irf.recopsfmap method)": [[156, "gammapy.irf.RecoPSFMap.sample_coord", false]], "sample_coord() (gammapy.maps.hpxmap method)": [[183, "gammapy.maps.HpxMap.sample_coord", false]], "sample_coord() (gammapy.maps.hpxndmap method)": [[184, "gammapy.maps.HpxNDMap.sample_coord", false]], "sample_coord() (gammapy.maps.map method)": [[186, "gammapy.maps.Map.sample_coord", false]], "sample_coord() (gammapy.maps.regionndmap method)": [[192, "gammapy.maps.RegionNDMap.sample_coord", false]], "sample_coord() (gammapy.maps.wcsmap method)": [[195, "gammapy.maps.WcsMap.sample_coord", false]], "sample_coord() (gammapy.maps.wcsndmap method)": [[196, "gammapy.maps.WcsNDMap.sample_coord", false]], "sample_edisp() (gammapy.datasets.mapdataseteventsampler method)": [[98, "gammapy.datasets.MapDatasetEventSampler.sample_edisp", false]], "sample_edisp() (gammapy.datasets.observationeventsampler method)": [[103, "gammapy.datasets.ObservationEventSampler.sample_edisp", false]], "sample_powerlaw() (in module gammapy.utils.random)": [[317, "gammapy.utils.random.sample_powerlaw", false]], "sample_psf() (gammapy.datasets.mapdataseteventsampler method)": [[98, "gammapy.datasets.MapDatasetEventSampler.sample_psf", false]], "sample_psf() (gammapy.datasets.observationeventsampler method)": [[103, "gammapy.datasets.ObservationEventSampler.sample_psf", false]], "sample_sources() (gammapy.datasets.mapdataseteventsampler method)": [[98, "gammapy.datasets.MapDatasetEventSampler.sample_sources", false]], "sample_sources() (gammapy.datasets.observationeventsampler method)": [[103, "gammapy.datasets.ObservationEventSampler.sample_sources", false]], "sample_sphere() (in module gammapy.utils.random)": [[318, "gammapy.utils.random.sample_sphere", false]], "sample_sphere_distance() (in module gammapy.utils.random)": [[319, "gammapy.utils.random.sample_sphere_distance", false]], "sample_time() (gammapy.modeling.models.constanttemporalmodel method)": [[210, "gammapy.modeling.models.ConstantTemporalModel.sample_time", false]], "sample_time() (gammapy.modeling.models.expdecaytemporalmodel method)": [[218, "gammapy.modeling.models.ExpDecayTemporalModel.sample_time", false]], "sample_time() (gammapy.modeling.models.gaussiantemporalmodel method)": [[222, "gammapy.modeling.models.GaussianTemporalModel.sample_time", false]], "sample_time() (gammapy.modeling.models.generalizedgaussiantemporalmodel method)": [[224, "gammapy.modeling.models.GeneralizedGaussianTemporalModel.sample_time", false]], "sample_time() (gammapy.modeling.models.lightcurvetemplatetemporalmodel method)": [[225, "gammapy.modeling.models.LightCurveTemplateTemporalModel.sample_time", false]], "sample_time() (gammapy.modeling.models.lineartemporalmodel method)": [[226, "gammapy.modeling.models.LinearTemporalModel.sample_time", false]], "sample_time() (gammapy.modeling.models.powerlawtemporalmodel method)": [[241, "gammapy.modeling.models.PowerLawTemporalModel.sample_time", false]], "sample_time() (gammapy.modeling.models.sinetemporalmodel method)": [[247, "gammapy.modeling.models.SineTemporalModel.sample_time", false]], "sample_time() (gammapy.modeling.models.templatephasecurvetemporalmodel method)": [[259, "gammapy.modeling.models.TemplatePhaseCurveTemporalModel.sample_time", false]], "sample_time() (gammapy.modeling.models.temporalmodel method)": [[262, "gammapy.modeling.models.TemporalModel.sample_time", false]], "sample_times() (in module gammapy.utils.random)": [[320, "gammapy.utils.random.sample_times", false]], "scale (gammapy.astro.darkmatter.darkmatterannihilationspectralmodel attribute)": [[19, "gammapy.astro.darkmatter.DarkMatterAnnihilationSpectralModel.scale", false]], "scale (gammapy.astro.darkmatter.darkmatterdecayspectralmodel attribute)": [[20, "gammapy.astro.darkmatter.DarkMatterDecaySpectralModel.scale", false]], "scale (gammapy.modeling.parameter attribute)": [[201, "gammapy.modeling.Parameter.scale", false]], "scale (gammapy.modeling.priorparameter attribute)": [[203, "gammapy.modeling.PriorParameter.scale", false]], "scale_method (gammapy.modeling.parameter attribute)": [[201, "gammapy.modeling.Parameter.scale_method", false]], "scale_method (gammapy.modeling.priorparameter attribute)": [[203, "gammapy.modeling.PriorParameter.scale_method", false]], "scale_plot_flux() (in module gammapy.modeling.models)": [[268, "gammapy.modeling.models.scale_plot_flux", false]], "scale_to_local_density() (gammapy.astro.darkmatter.burkertprofile method)": [[17, "gammapy.astro.darkmatter.BurkertProfile.scale_to_local_density", false]], "scale_to_local_density() (gammapy.astro.darkmatter.dmprofile method)": [[18, "gammapy.astro.darkmatter.DMProfile.scale_to_local_density", false]], "scale_to_local_density() (gammapy.astro.darkmatter.einastoprofile method)": [[21, "gammapy.astro.darkmatter.EinastoProfile.scale_to_local_density", false]], "scale_to_local_density() (gammapy.astro.darkmatter.isothermalprofile method)": [[22, "gammapy.astro.darkmatter.IsothermalProfile.scale_to_local_density", false]], "scale_to_local_density() (gammapy.astro.darkmatter.mooreprofile method)": [[24, "gammapy.astro.darkmatter.MooreProfile.scale_to_local_density", false]], "scale_to_local_density() (gammapy.astro.darkmatter.nfwprofile method)": [[25, "gammapy.astro.darkmatter.NFWProfile.scale_to_local_density", false]], "scale_to_local_density() (gammapy.astro.darkmatter.zhaoprofile method)": [[27, "gammapy.astro.darkmatter.ZhaoProfile.scale_to_local_density", false]], "scaledregulargridinterpolator (class in gammapy.utils.interpolation)": [[302, "gammapy.utils.interpolation.ScaledRegularGridInterpolator", false]], "scalespectralmodel (class in gammapy.modeling.models)": [[244, "gammapy.modeling.models.ScaleSpectralModel", false]], "scan_max (gammapy.modeling.parameter attribute)": [[201, "gammapy.modeling.Parameter.scan_max", false]], "scan_max (gammapy.modeling.priorparameter attribute)": [[203, "gammapy.modeling.PriorParameter.scan_max", false]], "scan_min (gammapy.modeling.parameter attribute)": [[201, "gammapy.modeling.Parameter.scan_min", false]], "scan_min (gammapy.modeling.priorparameter attribute)": [[203, "gammapy.modeling.PriorParameter.scan_min", false]], "scan_n_sigma (gammapy.modeling.parameter attribute)": [[201, "gammapy.modeling.Parameter.scan_n_sigma", false]], "scan_n_sigma (gammapy.modeling.priorparameter attribute)": [[203, "gammapy.modeling.PriorParameter.scan_n_sigma", false]], "scan_values (gammapy.modeling.parameter attribute)": [[201, "gammapy.modeling.Parameter.scan_values", false]], "scan_values (gammapy.modeling.priorparameter attribute)": [[203, "gammapy.modeling.PriorParameter.scan_values", false]], "schema() (gammapy.analysis.analysisconfig class method)": [[16, "gammapy.analysis.AnalysisConfig.schema", false]], "schema() (gammapy.data.eventlistmetadata class method)": [[80, "gammapy.data.EventListMetaData.schema", false]], "schema() (gammapy.datasets.mapdatasetmetadata class method)": [[99, "gammapy.datasets.MapDatasetMetaData.schema", false]], "schema() (gammapy.estimators.fluxmetadata class method)": [[118, "gammapy.estimators.FluxMetaData.schema", false]], "schema_json() (gammapy.analysis.analysisconfig class method)": [[16, "gammapy.analysis.AnalysisConfig.schema_json", false]], "schema_json() (gammapy.data.eventlistmetadata class method)": [[80, "gammapy.data.EventListMetaData.schema_json", false]], "schema_json() (gammapy.datasets.mapdatasetmetadata class method)": [[99, "gammapy.datasets.MapDatasetMetaData.schema_json", false]], "schema_json() (gammapy.estimators.fluxmetadata class method)": [[118, "gammapy.estimators.FluxMetaData.schema_json", false]], "scipy_mvn (gammapy.modeling.covariance attribute)": [[199, "gammapy.modeling.Covariance.scipy_mvn", false]], "sed_type_init (gammapy.estimators.fluxmaps attribute)": [[117, "gammapy.estimators.FluxMaps.sed_type_init", false]], "sed_type_init (gammapy.estimators.fluxpoints attribute)": [[119, "gammapy.estimators.FluxPoints.sed_type_init", false]], "sed_type_plot_default (gammapy.estimators.fluxmaps attribute)": [[117, "gammapy.estimators.FluxMaps.sed_type_plot_default", false]], "sed_type_plot_default (gammapy.estimators.fluxpoints attribute)": [[119, "gammapy.estimators.FluxPoints.sed_type_plot_default", false]], "sedov_taylor_begin (gammapy.astro.source.snr attribute)": [[52, "gammapy.astro.source.SNR.sedov_taylor_begin", false]], "sedov_taylor_begin (gammapy.astro.source.snrtruelovemckee attribute)": [[53, "gammapy.astro.source.SNRTrueloveMcKee.sedov_taylor_begin", false]], "sedov_taylor_end (gammapy.astro.source.snr attribute)": [[52, "gammapy.astro.source.SNR.sedov_taylor_end", false]], "sedov_taylor_end (gammapy.astro.source.snrtruelovemckee attribute)": [[53, "gammapy.astro.source.SNRTrueloveMcKee.sedov_taylor_end", false]], "select() (gammapy.modeling.models.datasetmodels method)": [[211, "gammapy.modeling.models.DatasetModels.select", false]], "select() (gammapy.modeling.models.models method)": [[233, "gammapy.modeling.models.Models.select", false]], "select() (gammapy.modeling.parameters method)": [[202, "gammapy.modeling.Parameters.select", false]], "select() (gammapy.modeling.priorparameters method)": [[204, "gammapy.modeling.PriorParameters.select", false]], "select_energy() (gammapy.data.eventlist method)": [[79, "gammapy.data.EventList.select_energy", false]], "select_from_geom() (gammapy.modeling.models.datasetmodels method)": [[211, "gammapy.modeling.models.DatasetModels.select_from_geom", false]], "select_from_geom() (gammapy.modeling.models.models method)": [[233, "gammapy.modeling.models.Models.select_from_geom", false]], "select_mask() (gammapy.data.eventlist method)": [[79, "gammapy.data.EventList.select_mask", false]], "select_mask() (gammapy.modeling.models.datasetmodels method)": [[211, "gammapy.modeling.models.DatasetModels.select_mask", false]], "select_mask() (gammapy.modeling.models.models method)": [[233, "gammapy.modeling.models.Models.select_mask", false]], "select_nested_models() (in module gammapy.modeling)": [[270, "gammapy.modeling.select_nested_models", false]], "select_obs_id() (gammapy.data.observationtable method)": [[86, "gammapy.data.ObservationTable.select_obs_id", false]], "select_observations() (gammapy.data.observationtable method)": [[86, "gammapy.data.ObservationTable.select_observations", false]], "select_offset() (gammapy.data.eventlist method)": [[79, "gammapy.data.EventList.select_offset", false]], "select_parameter() (gammapy.data.eventlist method)": [[79, "gammapy.data.EventList.select_parameter", false]], "select_rad_max() (gammapy.data.eventlist method)": [[79, "gammapy.data.EventList.select_rad_max", false]], "select_range() (gammapy.data.observationtable method)": [[86, "gammapy.data.ObservationTable.select_range", false]], "select_region() (gammapy.data.eventlist method)": [[79, "gammapy.data.EventList.select_region", false]], "select_region() (gammapy.modeling.models.datasetmodels method)": [[211, "gammapy.modeling.models.DatasetModels.select_region", false]], "select_region() (gammapy.modeling.models.models method)": [[233, "gammapy.modeling.models.Models.select_region", false]], "select_row_subset() (gammapy.data.eventlist method)": [[79, "gammapy.data.EventList.select_row_subset", false]], "select_sky_circle() (gammapy.data.observationtable method)": [[86, "gammapy.data.ObservationTable.select_sky_circle", false]], "select_time() (gammapy.data.eventlist method)": [[79, "gammapy.data.EventList.select_time", false]], "select_time() (gammapy.data.gti method)": [[82, "gammapy.data.GTI.select_time", false]], "select_time() (gammapy.data.observation method)": [[84, "gammapy.data.Observation.select_time", false]], "select_time() (gammapy.data.observations method)": [[87, "gammapy.data.Observations.select_time", false]], "select_time() (gammapy.datasets.datasets method)": [[95, "gammapy.datasets.Datasets.select_time", false]], "select_time_range() (gammapy.data.observationtable method)": [[86, "gammapy.data.ObservationTable.select_time_range", false]], "selection_all (gammapy.estimators.tsmapestimator attribute)": [[127, "gammapy.estimators.TSMapEstimator.selection_all", false]], "selection_all() (gammapy.estimators.asmoothmapestimator method)": [[112, "gammapy.estimators.ASmoothMapEstimator.selection_all", false]], "selection_mask() (gammapy.modeling.models.datasetmodels method)": [[211, "gammapy.modeling.models.DatasetModels.selection_mask", false]], "selection_mask() (gammapy.modeling.models.models method)": [[233, "gammapy.modeling.models.Models.selection_mask", false]], "selection_optional (gammapy.estimators.asmoothmapestimator attribute)": [[112, "gammapy.estimators.ASmoothMapEstimator.selection_optional", false]], "selection_optional (gammapy.estimators.energydependentmorphologyestimator attribute)": [[114, "gammapy.estimators.EnergyDependentMorphologyEstimator.selection_optional", false]], "selection_optional (gammapy.estimators.estimator attribute)": [[115, "gammapy.estimators.Estimator.selection_optional", false]], "selection_optional (gammapy.estimators.excessmapestimator attribute)": [[116, "gammapy.estimators.ExcessMapEstimator.selection_optional", false]], "selection_optional (gammapy.estimators.fluxpointsestimator attribute)": [[120, "gammapy.estimators.FluxPointsEstimator.selection_optional", false]], "selection_optional (gammapy.estimators.fluxprofileestimator attribute)": [[121, "gammapy.estimators.FluxProfileEstimator.selection_optional", false]], "selection_optional (gammapy.estimators.imageprofileestimator attribute)": [[123, "gammapy.estimators.ImageProfileEstimator.selection_optional", false]], "selection_optional (gammapy.estimators.lightcurveestimator attribute)": [[124, "gammapy.estimators.LightCurveEstimator.selection_optional", false]], "selection_optional (gammapy.estimators.parameterestimator attribute)": [[125, "gammapy.estimators.ParameterEstimator.selection_optional", false]], "selection_optional (gammapy.estimators.sensitivityestimator attribute)": [[126, "gammapy.estimators.SensitivityEstimator.selection_optional", false]], "selection_optional (gammapy.estimators.tsmapestimator attribute)": [[127, "gammapy.estimators.TSMapEstimator.selection_optional", false]], "sensitivityestimator (class in gammapy.estimators)": [[126, "gammapy.estimators.SensitivityEstimator", false]], "separable (gammapy.astro.population.casebattacharya1998 attribute)": [[28, "gammapy.astro.population.CaseBattacharya1998.separable", false]], "separable (gammapy.astro.population.exponential attribute)": [[29, "gammapy.astro.population.Exponential.separable", false]], "separable (gammapy.astro.population.faucherkaspi2006 attribute)": [[30, "gammapy.astro.population.FaucherKaspi2006.separable", false]], "separable (gammapy.astro.population.faucherkaspi2006velocitybimodal attribute)": [[31, "gammapy.astro.population.FaucherKaspi2006VelocityBimodal.separable", false]], "separable (gammapy.astro.population.faucherkaspi2006velocitymaxwellian attribute)": [[32, "gammapy.astro.population.FaucherKaspi2006VelocityMaxwellian.separable", false]], "separable (gammapy.astro.population.lorimer2006 attribute)": [[35, "gammapy.astro.population.Lorimer2006.separable", false]], "separable (gammapy.astro.population.paczynski1990 attribute)": [[36, "gammapy.astro.population.Paczynski1990.separable", false]], "separable (gammapy.astro.population.paczynski1990velocity attribute)": [[37, "gammapy.astro.population.Paczynski1990Velocity.separable", false]], "separable (gammapy.astro.population.yusifovkucuk2004 attribute)": [[39, "gammapy.astro.population.YusifovKucuk2004.separable", false]], "separable (gammapy.astro.population.yusifovkucuk2004b attribute)": [[40, "gammapy.astro.population.YusifovKucuk2004B.separable", false]], "separation() (gammapy.maps.hpxgeom method)": [[182, "gammapy.maps.HpxGeom.separation", false]], "separation() (gammapy.maps.regiongeom method)": [[191, "gammapy.maps.RegionGeom.separation", false]], "separation() (gammapy.maps.wcsgeom method)": [[194, "gammapy.maps.WcsGeom.separation", false]], "set_by_coord() (gammapy.maps.hpxmap method)": [[183, "gammapy.maps.HpxMap.set_by_coord", false]], "set_by_coord() (gammapy.maps.hpxndmap method)": [[184, "gammapy.maps.HpxNDMap.set_by_coord", false]], "set_by_coord() (gammapy.maps.map method)": [[186, "gammapy.maps.Map.set_by_coord", false]], "set_by_coord() (gammapy.maps.regionndmap method)": [[192, "gammapy.maps.RegionNDMap.set_by_coord", false]], "set_by_coord() (gammapy.maps.wcsmap method)": [[195, "gammapy.maps.WcsMap.set_by_coord", false]], "set_by_coord() (gammapy.maps.wcsndmap method)": [[196, "gammapy.maps.WcsNDMap.set_by_coord", false]], "set_by_idx() (gammapy.maps.hpxmap method)": [[183, "gammapy.maps.HpxMap.set_by_idx", false]], "set_by_idx() (gammapy.maps.hpxndmap method)": [[184, "gammapy.maps.HpxNDMap.set_by_idx", false]], "set_by_idx() (gammapy.maps.map method)": [[186, "gammapy.maps.Map.set_by_idx", false]], "set_by_idx() (gammapy.maps.regionndmap method)": [[192, "gammapy.maps.RegionNDMap.set_by_idx", false]], "set_by_idx() (gammapy.maps.wcsmap method)": [[195, "gammapy.maps.WcsMap.set_by_idx", false]], "set_by_idx() (gammapy.maps.wcsndmap method)": [[196, "gammapy.maps.WcsNDMap.set_by_idx", false]], "set_by_pix() (gammapy.maps.hpxmap method)": [[183, "gammapy.maps.HpxMap.set_by_pix", false]], "set_by_pix() (gammapy.maps.hpxndmap method)": [[184, "gammapy.maps.HpxNDMap.set_by_pix", false]], "set_by_pix() (gammapy.maps.map method)": [[186, "gammapy.maps.Map.set_by_pix", false]], "set_by_pix() (gammapy.maps.regionndmap method)": [[192, "gammapy.maps.RegionNDMap.set_by_pix", false]], "set_by_pix() (gammapy.maps.wcsmap method)": [[195, "gammapy.maps.WcsMap.set_by_pix", false]], "set_by_pix() (gammapy.maps.wcsndmap method)": [[196, "gammapy.maps.WcsNDMap.set_by_pix", false]], "set_logging() (gammapy.analysis.analysisconfig method)": [[16, "gammapy.analysis.AnalysisConfig.set_logging", false]], "set_models() (gammapy.analysis.analysis method)": [[15, "gammapy.analysis.Analysis.set_models", false]], "set_parameter_factors() (gammapy.modeling.parameters method)": [[202, "gammapy.modeling.Parameters.set_parameter_factors", false]], "set_parameter_factors() (gammapy.modeling.priorparameters method)": [[204, "gammapy.modeling.PriorParameters.set_parameter_factors", false]], "set_parameters_bounds() (gammapy.modeling.models.datasetmodels method)": [[211, "gammapy.modeling.models.DatasetModels.set_parameters_bounds", false]], "set_parameters_bounds() (gammapy.modeling.models.models method)": [[233, "gammapy.modeling.models.Models.set_parameters_bounds", false]], "set_prior() (gammapy.modeling.models.models method)": [[233, "gammapy.modeling.models.Models.set_prior", false]], "set_slice_args() (gammapy.astro.population.casebattacharya1998 method)": [[28, "gammapy.astro.population.CaseBattacharya1998.set_slice_args", false]], "set_slice_args() (gammapy.astro.population.exponential method)": [[29, "gammapy.astro.population.Exponential.set_slice_args", false]], "set_slice_args() (gammapy.astro.population.faucherkaspi2006 method)": [[30, "gammapy.astro.population.FaucherKaspi2006.set_slice_args", false]], "set_slice_args() (gammapy.astro.population.faucherkaspi2006velocitybimodal method)": [[31, "gammapy.astro.population.FaucherKaspi2006VelocityBimodal.set_slice_args", false]], "set_slice_args() (gammapy.astro.population.faucherkaspi2006velocitymaxwellian method)": [[32, "gammapy.astro.population.FaucherKaspi2006VelocityMaxwellian.set_slice_args", false]], "set_slice_args() (gammapy.astro.population.lorimer2006 method)": [[35, "gammapy.astro.population.Lorimer2006.set_slice_args", false]], "set_slice_args() (gammapy.astro.population.paczynski1990 method)": [[36, "gammapy.astro.population.Paczynski1990.set_slice_args", false]], "set_slice_args() (gammapy.astro.population.paczynski1990velocity method)": [[37, "gammapy.astro.population.Paczynski1990Velocity.set_slice_args", false]], "set_slice_args() (gammapy.astro.population.yusifovkucuk2004 method)": [[39, "gammapy.astro.population.YusifovKucuk2004.set_slice_args", false]], "set_slice_args() (gammapy.astro.population.yusifovkucuk2004b method)": [[40, "gammapy.astro.population.YusifovKucuk2004B.set_slice_args", false]], "set_subcovariance() (gammapy.modeling.covariance method)": [[199, "gammapy.modeling.Covariance.set_subcovariance", false]], "setdefault() (gammapy.maps.maps method)": [[190, "gammapy.maps.Maps.setdefault", false]], "shape (gammapy.maps.mapaxes attribute)": [[187, "gammapy.maps.MapAxes.shape", false]], "shape (gammapy.maps.mapcoord attribute)": [[189, "gammapy.maps.MapCoord.shape", false]], "shape (gammapy.modeling.covariance attribute)": [[199, "gammapy.modeling.Covariance.shape", false]], "shape_axes (gammapy.maps.hpxgeom attribute)": [[182, "gammapy.maps.HpxGeom.shape_axes", false]], "shape_axes (gammapy.maps.wcsgeom attribute)": [[194, "gammapy.maps.WcsGeom.shape_axes", false]], "shell2spatialmodel (class in gammapy.modeling.models)": [[245, "gammapy.modeling.models.Shell2SpatialModel", false]], "shellspatialmodel (class in gammapy.modeling.models)": [[246, "gammapy.modeling.models.ShellSpatialModel", false]], "show_in_browser() (gammapy.data.hduindextable method)": [[83, "gammapy.data.HDUIndexTable.show_in_browser", false]], "show_in_browser() (gammapy.data.observationtable method)": [[86, "gammapy.data.ObservationTable.show_in_browser", false]], "show_in_notebook() (gammapy.data.hduindextable method)": [[83, "gammapy.data.HDUIndexTable.show_in_notebook", false]], "show_in_notebook() (gammapy.data.observationtable method)": [[86, "gammapy.data.ObservationTable.show_in_notebook", false]], "sigma (gammapy.astro.population.faucherkaspi2006 attribute)": [[30, "gammapy.astro.population.FaucherKaspi2006.sigma", false]], "sigma (gammapy.astro.population.faucherkaspi2006velocitymaxwellian attribute)": [[32, "gammapy.astro.population.FaucherKaspi2006VelocityMaxwellian.sigma", false]], "sigma (gammapy.modeling.models.gaussianspatialmodel attribute)": [[220, "gammapy.modeling.models.GaussianSpatialModel.sigma", false]], "sigma (gammapy.modeling.models.gaussianspectralmodel attribute)": [[221, "gammapy.modeling.models.GaussianSpectralModel.sigma", false]], "sigma (gammapy.modeling.models.gaussiantemporalmodel attribute)": [[222, "gammapy.modeling.models.GaussianTemporalModel.sigma", false]], "sigma_1 (gammapy.astro.population.faucherkaspi2006velocitybimodal attribute)": [[31, "gammapy.astro.population.FaucherKaspi2006VelocityBimodal.sigma_1", false]], "sigma_2 (gammapy.astro.population.faucherkaspi2006velocitybimodal attribute)": [[31, "gammapy.astro.population.FaucherKaspi2006VelocityBimodal.sigma_2", false]], "simplepulsar (class in gammapy.astro.source)": [[54, "gammapy.astro.source.SimplePulsar", false]], "simulate_observation() (gammapy.data.observationseventssampler method)": [[88, "gammapy.data.ObservationsEventsSampler.simulate_observation", false]], "sinetemporalmodel (class in gammapy.modeling.models)": [[247, "gammapy.modeling.models.SineTemporalModel", false]], "size (gammapy.maps.mapcoord attribute)": [[189, "gammapy.maps.MapCoord.size", false]], "sky_model() (gammapy.catalog.sourcecatalogobject1lhaaso method)": [[68, "gammapy.catalog.SourceCatalogObject1LHAASO.sky_model", false]], "sky_model() (gammapy.catalog.sourcecatalogobject2fhl method)": [[69, "gammapy.catalog.SourceCatalogObject2FHL.sky_model", false]], "sky_model() (gammapy.catalog.sourcecatalogobject2hwc method)": [[70, "gammapy.catalog.SourceCatalogObject2HWC.sky_model", false]], "sky_model() (gammapy.catalog.sourcecatalogobject3fgl method)": [[71, "gammapy.catalog.SourceCatalogObject3FGL.sky_model", false]], "sky_model() (gammapy.catalog.sourcecatalogobject3fhl method)": [[72, "gammapy.catalog.SourceCatalogObject3FHL.sky_model", false]], "sky_model() (gammapy.catalog.sourcecatalogobject3hwc method)": [[73, "gammapy.catalog.SourceCatalogObject3HWC.sky_model", false]], "sky_model() (gammapy.catalog.sourcecatalogobject4fgl method)": [[74, "gammapy.catalog.SourceCatalogObject4FGL.sky_model", false]], "sky_model() (gammapy.catalog.sourcecatalogobjectgammacat method)": [[75, "gammapy.catalog.SourceCatalogObjectGammaCat.sky_model", false]], "sky_model() (gammapy.catalog.sourcecatalogobjecthgps method)": [[76, "gammapy.catalog.SourceCatalogObjectHGPS.sky_model", false]], "sky_to_fov() (in module gammapy.utils.coordinates)": [[296, "gammapy.utils.coordinates.sky_to_fov", false]], "skycoord (gammapy.maps.mapcoord attribute)": [[189, "gammapy.maps.MapCoord.skycoord", false]], "skymodel (class in gammapy.modeling.models)": [[248, "gammapy.modeling.models.SkyModel", false]], "slice() (gammapy.maps.labelmapaxis method)": [[185, "gammapy.maps.LabelMapAxis.slice", false]], "slice() (gammapy.maps.mapaxis method)": [[188, "gammapy.maps.MapAxis.slice", false]], "slice() (gammapy.maps.timemapaxis method)": [[193, "gammapy.maps.TimeMapAxis.slice", false]], "slice_by_coord() (gammapy.estimators.fluxmaps method)": [[117, "gammapy.estimators.FluxMaps.slice_by_coord", false]], "slice_by_coord() (gammapy.estimators.fluxpoints method)": [[119, "gammapy.estimators.FluxPoints.slice_by_coord", false]], "slice_by_energy() (gammapy.datasets.datasets method)": [[95, "gammapy.datasets.Datasets.slice_by_energy", false]], "slice_by_energy() (gammapy.datasets.mapdataset method)": [[97, "gammapy.datasets.MapDataset.slice_by_energy", false]], "slice_by_energy() (gammapy.datasets.mapdatasetonoff method)": [[100, "gammapy.datasets.MapDatasetOnOff.slice_by_energy", false]], "slice_by_energy() (gammapy.datasets.spectrumdataset method)": [[104, "gammapy.datasets.SpectrumDataset.slice_by_energy", false]], "slice_by_energy() (gammapy.datasets.spectrumdatasetonoff method)": [[105, "gammapy.datasets.SpectrumDatasetOnOff.slice_by_energy", false]], "slice_by_energy() (gammapy.estimators.fluxmaps method)": [[117, "gammapy.estimators.FluxMaps.slice_by_energy", false]], "slice_by_energy() (gammapy.estimators.fluxpoints method)": [[119, "gammapy.estimators.FluxPoints.slice_by_energy", false]], "slice_by_energy() (gammapy.modeling.models.templatenpredmodel method)": [[258, "gammapy.modeling.models.TemplateNPredModel.slice_by_energy", false]], "slice_by_idx() (gammapy.datasets.mapdataset method)": [[97, "gammapy.datasets.MapDataset.slice_by_idx", false]], "slice_by_idx() (gammapy.datasets.mapdatasetonoff method)": [[100, "gammapy.datasets.MapDatasetOnOff.slice_by_idx", false]], "slice_by_idx() (gammapy.datasets.spectrumdataset method)": [[104, "gammapy.datasets.SpectrumDataset.slice_by_idx", false]], "slice_by_idx() (gammapy.datasets.spectrumdatasetonoff method)": [[105, "gammapy.datasets.SpectrumDatasetOnOff.slice_by_idx", false]], "slice_by_idx() (gammapy.estimators.fluxmaps method)": [[117, "gammapy.estimators.FluxMaps.slice_by_idx", false]], "slice_by_idx() (gammapy.estimators.fluxpoints method)": [[119, "gammapy.estimators.FluxPoints.slice_by_idx", false]], "slice_by_idx() (gammapy.irf.background2d method)": [[137, "gammapy.irf.Background2D.slice_by_idx", false]], "slice_by_idx() (gammapy.irf.background3d method)": [[138, "gammapy.irf.Background3D.slice_by_idx", false]], "slice_by_idx() (gammapy.irf.backgroundirf method)": [[139, "gammapy.irf.BackgroundIRF.slice_by_idx", false]], "slice_by_idx() (gammapy.irf.edispkernel method)": [[140, "gammapy.irf.EDispKernel.slice_by_idx", false]], "slice_by_idx() (gammapy.irf.edispkernelmap method)": [[141, "gammapy.irf.EDispKernelMap.slice_by_idx", false]], "slice_by_idx() (gammapy.irf.edispmap method)": [[142, "gammapy.irf.EDispMap.slice_by_idx", false]], "slice_by_idx() (gammapy.irf.effectiveareatable2d method)": [[143, "gammapy.irf.EffectiveAreaTable2D.slice_by_idx", false]], "slice_by_idx() (gammapy.irf.energydependentmultigausspsf method)": [[144, "gammapy.irf.EnergyDependentMultiGaussPSF.slice_by_idx", false]], "slice_by_idx() (gammapy.irf.energydispersion2d method)": [[145, "gammapy.irf.EnergyDispersion2D.slice_by_idx", false]], "slice_by_idx() (gammapy.irf.irf method)": [[147, "gammapy.irf.IRF.slice_by_idx", false]], "slice_by_idx() (gammapy.irf.irfmap method)": [[148, "gammapy.irf.IRFMap.slice_by_idx", false]], "slice_by_idx() (gammapy.irf.parametricpsf method)": [[154, "gammapy.irf.ParametricPSF.slice_by_idx", false]], "slice_by_idx() (gammapy.irf.psf3d method)": [[150, "gammapy.irf.PSF3D.slice_by_idx", false]], "slice_by_idx() (gammapy.irf.psfkernel method)": [[151, "gammapy.irf.PSFKernel.slice_by_idx", false]], "slice_by_idx() (gammapy.irf.psfking method)": [[152, "gammapy.irf.PSFKing.slice_by_idx", false]], "slice_by_idx() (gammapy.irf.psfmap method)": [[153, "gammapy.irf.PSFMap.slice_by_idx", false]], "slice_by_idx() (gammapy.irf.radmax2d method)": [[155, "gammapy.irf.RadMax2D.slice_by_idx", false]], "slice_by_idx() (gammapy.irf.recopsfmap method)": [[156, "gammapy.irf.RecoPSFMap.slice_by_idx", false]], "slice_by_idx() (gammapy.maps.geom method)": [[181, "gammapy.maps.Geom.slice_by_idx", false]], "slice_by_idx() (gammapy.maps.hpxgeom method)": [[182, "gammapy.maps.HpxGeom.slice_by_idx", false]], "slice_by_idx() (gammapy.maps.hpxmap method)": [[183, "gammapy.maps.HpxMap.slice_by_idx", false]], "slice_by_idx() (gammapy.maps.hpxndmap method)": [[184, "gammapy.maps.HpxNDMap.slice_by_idx", false]], "slice_by_idx() (gammapy.maps.map method)": [[186, "gammapy.maps.Map.slice_by_idx", false]], "slice_by_idx() (gammapy.maps.mapaxes method)": [[187, "gammapy.maps.MapAxes.slice_by_idx", false]], "slice_by_idx() (gammapy.maps.regiongeom method)": [[191, "gammapy.maps.RegionGeom.slice_by_idx", false]], "slice_by_idx() (gammapy.maps.regionndmap method)": [[192, "gammapy.maps.RegionNDMap.slice_by_idx", false]], "slice_by_idx() (gammapy.maps.wcsgeom method)": [[194, "gammapy.maps.WcsGeom.slice_by_idx", false]], "slice_by_idx() (gammapy.maps.wcsmap method)": [[195, "gammapy.maps.WcsMap.slice_by_idx", false]], "slice_by_idx() (gammapy.maps.wcsndmap method)": [[196, "gammapy.maps.WcsNDMap.slice_by_idx", false]], "slice_by_time() (gammapy.estimators.fluxmaps method)": [[117, "gammapy.estimators.FluxMaps.slice_by_time", false]], "slice_by_time() (gammapy.estimators.fluxpoints method)": [[119, "gammapy.estimators.FluxPoints.slice_by_time", false]], "smooth() (gammapy.estimators.imageprofile method)": [[122, "gammapy.estimators.ImageProfile.smooth", false]], "smooth() (gammapy.maps.hpxndmap method)": [[184, "gammapy.maps.HpxNDMap.smooth", false]], "smooth() (gammapy.maps.wcsndmap method)": [[196, "gammapy.maps.WcsNDMap.smooth", false]], "smoothbrokenpowerlawspectralmodel (class in gammapy.modeling.models)": [[249, "gammapy.modeling.models.SmoothBrokenPowerLawSpectralModel", false]], "snr (class in gammapy.astro.source)": [[52, "gammapy.astro.source.SNR", false]], "snrtruelovemckee (class in gammapy.astro.source)": [[53, "gammapy.astro.source.SNRTrueloveMcKee", false]], "solid_angle() (gammapy.maps.geom method)": [[181, "gammapy.maps.Geom.solid_angle", false]], "solid_angle() (gammapy.maps.hpxgeom method)": [[182, "gammapy.maps.HpxGeom.solid_angle", false]], "solid_angle() (gammapy.maps.regiongeom method)": [[191, "gammapy.maps.RegionGeom.solid_angle", false]], "solid_angle() (gammapy.maps.wcsgeom method)": [[194, "gammapy.maps.WcsGeom.solid_angle", false]], "sort() (gammapy.data.hduindextable method)": [[83, "gammapy.data.HDUIndexTable.sort", false]], "sort() (gammapy.data.observationtable method)": [[86, "gammapy.data.ObservationTable.sort", false]], "source_name() (gammapy.catalog.sourcecatalog method)": [[56, "gammapy.catalog.SourceCatalog.source_name", false]], "source_name() (gammapy.catalog.sourcecatalog1lhaaso method)": [[57, "gammapy.catalog.SourceCatalog1LHAASO.source_name", false]], "source_name() (gammapy.catalog.sourcecatalog2fhl method)": [[58, "gammapy.catalog.SourceCatalog2FHL.source_name", false]], "source_name() (gammapy.catalog.sourcecatalog2hwc method)": [[59, "gammapy.catalog.SourceCatalog2HWC.source_name", false]], "source_name() (gammapy.catalog.sourcecatalog3fgl method)": [[60, "gammapy.catalog.SourceCatalog3FGL.source_name", false]], "source_name() (gammapy.catalog.sourcecatalog3fhl method)": [[61, "gammapy.catalog.SourceCatalog3FHL.source_name", false]], "source_name() (gammapy.catalog.sourcecatalog3hwc method)": [[62, "gammapy.catalog.SourceCatalog3HWC.source_name", false]], "source_name() (gammapy.catalog.sourcecatalog4fgl method)": [[63, "gammapy.catalog.SourceCatalog4FGL.source_name", false]], "source_name() (gammapy.catalog.sourcecataloggammacat method)": [[64, "gammapy.catalog.SourceCatalogGammaCat.source_name", false]], "source_name() (gammapy.catalog.sourcecataloghgps method)": [[65, "gammapy.catalog.SourceCatalogHGPS.source_name", false]], "sourcecatalog (class in gammapy.catalog)": [[56, "gammapy.catalog.SourceCatalog", false]], "sourcecatalog1lhaaso (class in gammapy.catalog)": [[57, "gammapy.catalog.SourceCatalog1LHAASO", false]], "sourcecatalog2fhl (class in gammapy.catalog)": [[58, "gammapy.catalog.SourceCatalog2FHL", false]], "sourcecatalog2hwc (class in gammapy.catalog)": [[59, "gammapy.catalog.SourceCatalog2HWC", false]], "sourcecatalog3fgl (class in gammapy.catalog)": [[60, "gammapy.catalog.SourceCatalog3FGL", false]], "sourcecatalog3fhl (class in gammapy.catalog)": [[61, "gammapy.catalog.SourceCatalog3FHL", false]], "sourcecatalog3hwc (class in gammapy.catalog)": [[62, "gammapy.catalog.SourceCatalog3HWC", false]], "sourcecatalog4fgl (class in gammapy.catalog)": [[63, "gammapy.catalog.SourceCatalog4FGL", false]], "sourcecataloggammacat (class in gammapy.catalog)": [[64, "gammapy.catalog.SourceCatalogGammaCat", false]], "sourcecataloghgps (class in gammapy.catalog)": [[65, "gammapy.catalog.SourceCatalogHGPS", false]], "sourcecataloglargescalehgps (class in gammapy.catalog)": [[66, "gammapy.catalog.SourceCatalogLargeScaleHGPS", false]], "sourcecatalogobject (class in gammapy.catalog)": [[67, "gammapy.catalog.SourceCatalogObject", false]], "sourcecatalogobject1lhaaso (class in gammapy.catalog)": [[68, "gammapy.catalog.SourceCatalogObject1LHAASO", false]], "sourcecatalogobject2fhl (class in gammapy.catalog)": [[69, "gammapy.catalog.SourceCatalogObject2FHL", false]], "sourcecatalogobject2hwc (class in gammapy.catalog)": [[70, "gammapy.catalog.SourceCatalogObject2HWC", false]], "sourcecatalogobject3fgl (class in gammapy.catalog)": [[71, "gammapy.catalog.SourceCatalogObject3FGL", false]], "sourcecatalogobject3fhl (class in gammapy.catalog)": [[72, "gammapy.catalog.SourceCatalogObject3FHL", false]], "sourcecatalogobject3hwc (class in gammapy.catalog)": [[73, "gammapy.catalog.SourceCatalogObject3HWC", false]], "sourcecatalogobject4fgl (class in gammapy.catalog)": [[74, "gammapy.catalog.SourceCatalogObject4FGL", false]], "sourcecatalogobjectgammacat (class in gammapy.catalog)": [[75, "gammapy.catalog.SourceCatalogObjectGammaCat", false]], "sourcecatalogobjecthgps (class in gammapy.catalog)": [[76, "gammapy.catalog.SourceCatalogObjectHGPS", false]], "sourcecatalogobjecthgpscomponent (class in gammapy.catalog)": [[77, "gammapy.catalog.SourceCatalogObjectHGPSComponent", false]], "spatial_model (gammapy.modeling.models.fovbackgroundmodel attribute)": [[219, "gammapy.modeling.models.FoVBackgroundModel.spatial_model", false]], "spatial_model (gammapy.modeling.models.skymodel attribute)": [[248, "gammapy.modeling.models.SkyModel.spatial_model", false]], "spatial_model() (gammapy.catalog.sourcecatalogobject1lhaaso method)": [[68, "gammapy.catalog.SourceCatalogObject1LHAASO.spatial_model", false]], "spatial_model() (gammapy.catalog.sourcecatalogobject2fhl method)": [[69, "gammapy.catalog.SourceCatalogObject2FHL.spatial_model", false]], "spatial_model() (gammapy.catalog.sourcecatalogobject2hwc method)": [[70, "gammapy.catalog.SourceCatalogObject2HWC.spatial_model", false]], "spatial_model() (gammapy.catalog.sourcecatalogobject3fgl method)": [[71, "gammapy.catalog.SourceCatalogObject3FGL.spatial_model", false]], "spatial_model() (gammapy.catalog.sourcecatalogobject3fhl method)": [[72, "gammapy.catalog.SourceCatalogObject3FHL.spatial_model", false]], "spatial_model() (gammapy.catalog.sourcecatalogobject3hwc method)": [[73, "gammapy.catalog.SourceCatalogObject3HWC.spatial_model", false]], "spatial_model() (gammapy.catalog.sourcecatalogobject4fgl method)": [[74, "gammapy.catalog.SourceCatalogObject4FGL.spatial_model", false]], "spatial_model() (gammapy.catalog.sourcecatalogobjectgammacat method)": [[75, "gammapy.catalog.SourceCatalogObjectGammaCat.spatial_model", false]], "spatial_model() (gammapy.catalog.sourcecatalogobjecthgps method)": [[76, "gammapy.catalog.SourceCatalogObjectHGPS.spatial_model", false]], "spatial_model() (gammapy.catalog.sourcecatalogobjecthgpscomponent method)": [[77, "gammapy.catalog.SourceCatalogObjectHGPSComponent.spatial_model", false]], "spatial_model_registry (in module gammapy.modeling.models)": [[242, "gammapy.modeling.models.SPATIAL_MODEL_REGISTRY", false]], "spatialmodel (class in gammapy.modeling.models)": [[250, "gammapy.modeling.models.SpatialModel", false]], "spectral_index() (gammapy.astro.darkmatter.darkmatterannihilationspectralmodel method)": [[19, "gammapy.astro.darkmatter.DarkMatterAnnihilationSpectralModel.spectral_index", false]], "spectral_index() (gammapy.astro.darkmatter.darkmatterdecayspectralmodel method)": [[20, "gammapy.astro.darkmatter.DarkMatterDecaySpectralModel.spectral_index", false]], "spectral_index() (gammapy.astro.darkmatter.primaryflux method)": [[26, "gammapy.astro.darkmatter.PrimaryFlux.spectral_index", false]], "spectral_index() (gammapy.modeling.models.brokenpowerlawspectralmodel method)": [[205, "gammapy.modeling.models.BrokenPowerLawSpectralModel.spectral_index", false]], "spectral_index() (gammapy.modeling.models.compoundspectralmodel method)": [[206, "gammapy.modeling.models.CompoundSpectralModel.spectral_index", false]], "spectral_index() (gammapy.modeling.models.constantspectralmodel method)": [[209, "gammapy.modeling.models.ConstantSpectralModel.spectral_index", false]], "spectral_index() (gammapy.modeling.models.eblabsorptionnormspectralmodel method)": [[213, "gammapy.modeling.models.EBLAbsorptionNormSpectralModel.spectral_index", false]], "spectral_index() (gammapy.modeling.models.expcutoffpowerlaw3fglspectralmodel method)": [[215, "gammapy.modeling.models.ExpCutoffPowerLaw3FGLSpectralModel.spectral_index", false]], "spectral_index() (gammapy.modeling.models.expcutoffpowerlawnormspectralmodel method)": [[216, "gammapy.modeling.models.ExpCutoffPowerLawNormSpectralModel.spectral_index", false]], "spectral_index() (gammapy.modeling.models.expcutoffpowerlawspectralmodel method)": [[217, "gammapy.modeling.models.ExpCutoffPowerLawSpectralModel.spectral_index", false]], "spectral_index() (gammapy.modeling.models.gaussianspectralmodel method)": [[221, "gammapy.modeling.models.GaussianSpectralModel.spectral_index", false]], "spectral_index() (gammapy.modeling.models.logparabolanormspectralmodel method)": [[227, "gammapy.modeling.models.LogParabolaNormSpectralModel.spectral_index", false]], "spectral_index() (gammapy.modeling.models.logparabolaspectralmodel method)": [[228, "gammapy.modeling.models.LogParabolaSpectralModel.spectral_index", false]], "spectral_index() (gammapy.modeling.models.meyercrabspectralmodel method)": [[230, "gammapy.modeling.models.MeyerCrabSpectralModel.spectral_index", false]], "spectral_index() (gammapy.modeling.models.naimaspectralmodel method)": [[234, "gammapy.modeling.models.NaimaSpectralModel.spectral_index", false]], "spectral_index() (gammapy.modeling.models.piecewisenormspectralmodel method)": [[236, "gammapy.modeling.models.PiecewiseNormSpectralModel.spectral_index", false]], "spectral_index() (gammapy.modeling.models.powerlaw2spectralmodel method)": [[238, "gammapy.modeling.models.PowerLaw2SpectralModel.spectral_index", false]], "spectral_index() (gammapy.modeling.models.powerlawnormspectralmodel method)": [[239, "gammapy.modeling.models.PowerLawNormSpectralModel.spectral_index", false]], "spectral_index() (gammapy.modeling.models.powerlawspectralmodel method)": [[240, "gammapy.modeling.models.PowerLawSpectralModel.spectral_index", false]], "spectral_index() (gammapy.modeling.models.scalespectralmodel method)": [[244, "gammapy.modeling.models.ScaleSpectralModel.spectral_index", false]], "spectral_index() (gammapy.modeling.models.smoothbrokenpowerlawspectralmodel method)": [[249, "gammapy.modeling.models.SmoothBrokenPowerLawSpectralModel.spectral_index", false]], "spectral_index() (gammapy.modeling.models.spectralmodel method)": [[251, "gammapy.modeling.models.SpectralModel.spectral_index", false]], "spectral_index() (gammapy.modeling.models.superexpcutoffpowerlaw3fglspectralmodel method)": [[252, "gammapy.modeling.models.SuperExpCutoffPowerLaw3FGLSpectralModel.spectral_index", false]], "spectral_index() (gammapy.modeling.models.superexpcutoffpowerlaw4fgldr3spectralmodel method)": [[253, "gammapy.modeling.models.SuperExpCutoffPowerLaw4FGLDR3SpectralModel.spectral_index", false]], "spectral_index() (gammapy.modeling.models.superexpcutoffpowerlaw4fglspectralmodel method)": [[254, "gammapy.modeling.models.SuperExpCutoffPowerLaw4FGLSpectralModel.spectral_index", false]], "spectral_index() (gammapy.modeling.models.templatendspectralmodel method)": [[257, "gammapy.modeling.models.TemplateNDSpectralModel.spectral_index", false]], "spectral_index() (gammapy.modeling.models.templatespectralmodel method)": [[261, "gammapy.modeling.models.TemplateSpectralModel.spectral_index", false]], "spectral_index_error() (gammapy.astro.darkmatter.darkmatterannihilationspectralmodel method)": [[19, "gammapy.astro.darkmatter.DarkMatterAnnihilationSpectralModel.spectral_index_error", false]], "spectral_index_error() (gammapy.astro.darkmatter.darkmatterdecayspectralmodel method)": [[20, "gammapy.astro.darkmatter.DarkMatterDecaySpectralModel.spectral_index_error", false]], "spectral_index_error() (gammapy.astro.darkmatter.primaryflux method)": [[26, "gammapy.astro.darkmatter.PrimaryFlux.spectral_index_error", false]], "spectral_index_error() (gammapy.modeling.models.brokenpowerlawspectralmodel method)": [[205, "gammapy.modeling.models.BrokenPowerLawSpectralModel.spectral_index_error", false]], "spectral_index_error() (gammapy.modeling.models.compoundspectralmodel method)": [[206, "gammapy.modeling.models.CompoundSpectralModel.spectral_index_error", false]], "spectral_index_error() (gammapy.modeling.models.constantspectralmodel method)": [[209, "gammapy.modeling.models.ConstantSpectralModel.spectral_index_error", false]], "spectral_index_error() (gammapy.modeling.models.eblabsorptionnormspectralmodel method)": [[213, "gammapy.modeling.models.EBLAbsorptionNormSpectralModel.spectral_index_error", false]], "spectral_index_error() (gammapy.modeling.models.expcutoffpowerlaw3fglspectralmodel method)": [[215, "gammapy.modeling.models.ExpCutoffPowerLaw3FGLSpectralModel.spectral_index_error", false]], "spectral_index_error() (gammapy.modeling.models.expcutoffpowerlawnormspectralmodel method)": [[216, "gammapy.modeling.models.ExpCutoffPowerLawNormSpectralModel.spectral_index_error", false]], "spectral_index_error() (gammapy.modeling.models.expcutoffpowerlawspectralmodel method)": [[217, "gammapy.modeling.models.ExpCutoffPowerLawSpectralModel.spectral_index_error", false]], "spectral_index_error() (gammapy.modeling.models.gaussianspectralmodel method)": [[221, "gammapy.modeling.models.GaussianSpectralModel.spectral_index_error", false]], "spectral_index_error() (gammapy.modeling.models.logparabolanormspectralmodel method)": [[227, "gammapy.modeling.models.LogParabolaNormSpectralModel.spectral_index_error", false]], "spectral_index_error() (gammapy.modeling.models.logparabolaspectralmodel method)": [[228, "gammapy.modeling.models.LogParabolaSpectralModel.spectral_index_error", false]], "spectral_index_error() (gammapy.modeling.models.meyercrabspectralmodel method)": [[230, "gammapy.modeling.models.MeyerCrabSpectralModel.spectral_index_error", false]], "spectral_index_error() (gammapy.modeling.models.naimaspectralmodel method)": [[234, "gammapy.modeling.models.NaimaSpectralModel.spectral_index_error", false]], "spectral_index_error() (gammapy.modeling.models.piecewisenormspectralmodel method)": [[236, "gammapy.modeling.models.PiecewiseNormSpectralModel.spectral_index_error", false]], "spectral_index_error() (gammapy.modeling.models.powerlaw2spectralmodel method)": [[238, "gammapy.modeling.models.PowerLaw2SpectralModel.spectral_index_error", false]], "spectral_index_error() (gammapy.modeling.models.powerlawnormspectralmodel method)": [[239, "gammapy.modeling.models.PowerLawNormSpectralModel.spectral_index_error", false]], "spectral_index_error() (gammapy.modeling.models.powerlawspectralmodel method)": [[240, "gammapy.modeling.models.PowerLawSpectralModel.spectral_index_error", false]], "spectral_index_error() (gammapy.modeling.models.scalespectralmodel method)": [[244, "gammapy.modeling.models.ScaleSpectralModel.spectral_index_error", false]], "spectral_index_error() (gammapy.modeling.models.smoothbrokenpowerlawspectralmodel method)": [[249, "gammapy.modeling.models.SmoothBrokenPowerLawSpectralModel.spectral_index_error", false]], "spectral_index_error() (gammapy.modeling.models.spectralmodel method)": [[251, "gammapy.modeling.models.SpectralModel.spectral_index_error", false]], "spectral_index_error() (gammapy.modeling.models.superexpcutoffpowerlaw3fglspectralmodel method)": [[252, "gammapy.modeling.models.SuperExpCutoffPowerLaw3FGLSpectralModel.spectral_index_error", false]], "spectral_index_error() (gammapy.modeling.models.superexpcutoffpowerlaw4fgldr3spectralmodel method)": [[253, "gammapy.modeling.models.SuperExpCutoffPowerLaw4FGLDR3SpectralModel.spectral_index_error", false]], "spectral_index_error() (gammapy.modeling.models.superexpcutoffpowerlaw4fglspectralmodel method)": [[254, "gammapy.modeling.models.SuperExpCutoffPowerLaw4FGLSpectralModel.spectral_index_error", false]], "spectral_index_error() (gammapy.modeling.models.templatendspectralmodel method)": [[257, "gammapy.modeling.models.TemplateNDSpectralModel.spectral_index_error", false]], "spectral_index_error() (gammapy.modeling.models.templatespectralmodel method)": [[261, "gammapy.modeling.models.TemplateSpectralModel.spectral_index_error", false]], "spectral_model (gammapy.modeling.models.fovbackgroundmodel attribute)": [[219, "gammapy.modeling.models.FoVBackgroundModel.spectral_model", false]], "spectral_model (gammapy.modeling.models.skymodel attribute)": [[248, "gammapy.modeling.models.SkyModel.spectral_model", false]], "spectral_model (gammapy.modeling.models.templatenpredmodel attribute)": [[258, "gammapy.modeling.models.TemplateNPredModel.spectral_model", false]], "spectral_model() (gammapy.catalog.sourcecatalogobject1lhaaso method)": [[68, "gammapy.catalog.SourceCatalogObject1LHAASO.spectral_model", false]], "spectral_model() (gammapy.catalog.sourcecatalogobject2fhl method)": [[69, "gammapy.catalog.SourceCatalogObject2FHL.spectral_model", false]], "spectral_model() (gammapy.catalog.sourcecatalogobject2hwc method)": [[70, "gammapy.catalog.SourceCatalogObject2HWC.spectral_model", false]], "spectral_model() (gammapy.catalog.sourcecatalogobject3fgl method)": [[71, "gammapy.catalog.SourceCatalogObject3FGL.spectral_model", false]], "spectral_model() (gammapy.catalog.sourcecatalogobject3fhl method)": [[72, "gammapy.catalog.SourceCatalogObject3FHL.spectral_model", false]], "spectral_model() (gammapy.catalog.sourcecatalogobject3hwc method)": [[73, "gammapy.catalog.SourceCatalogObject3HWC.spectral_model", false]], "spectral_model() (gammapy.catalog.sourcecatalogobject4fgl method)": [[74, "gammapy.catalog.SourceCatalogObject4FGL.spectral_model", false]], "spectral_model() (gammapy.catalog.sourcecatalogobjectgammacat method)": [[75, "gammapy.catalog.SourceCatalogObjectGammaCat.spectral_model", false]], "spectral_model() (gammapy.catalog.sourcecatalogobjecthgps method)": [[76, "gammapy.catalog.SourceCatalogObjectHGPS.spectral_model", false]], "spectral_model_registry (in module gammapy.modeling.models)": [[243, "gammapy.modeling.models.SPECTRAL_MODEL_REGISTRY", false]], "spectralmodel (class in gammapy.modeling.models)": [[251, "gammapy.modeling.models.SpectralModel", false]], "spectrumdataset (class in gammapy.datasets)": [[104, "gammapy.datasets.SpectrumDataset", false]], "spectrumdatasetmaker (class in gammapy.makers)": [[170, "gammapy.makers.SpectrumDatasetMaker", false]], "spectrumdatasetonoff (class in gammapy.datasets)": [[105, "gammapy.datasets.SpectrumDatasetOnOff", false]], "spiralarms (gammapy.astro.population.faucherspiral attribute)": [[33, "gammapy.astro.population.FaucherSpiral.spiralarms", false]], "spiralarms (gammapy.astro.population.valleespiral attribute)": [[38, "gammapy.astro.population.ValleeSpiral.spiralarms", false]], "split_by_axis() (gammapy.maps.hpxmap method)": [[183, "gammapy.maps.HpxMap.split_by_axis", false]], "split_by_axis() (gammapy.maps.hpxndmap method)": [[184, "gammapy.maps.HpxNDMap.split_by_axis", false]], "split_by_axis() (gammapy.maps.map method)": [[186, "gammapy.maps.Map.split_by_axis", false]], "split_by_axis() (gammapy.maps.regionndmap method)": [[192, "gammapy.maps.RegionNDMap.split_by_axis", false]], "split_by_axis() (gammapy.maps.wcsmap method)": [[195, "gammapy.maps.WcsMap.split_by_axis", false]], "split_by_axis() (gammapy.maps.wcsndmap method)": [[196, "gammapy.maps.WcsNDMap.split_by_axis", false]], "split_dataset() (in module gammapy.datasets)": [[109, "gammapy.datasets.split_dataset", false]], "split_dataset() (in module gammapy.datasets.utils)": [[111, "gammapy.datasets.utils.split_dataset", false]], "sqrt_ts (gammapy.estimators.fluxmaps attribute)": [[117, "gammapy.estimators.FluxMaps.sqrt_ts", false]], "sqrt_ts (gammapy.estimators.fluxpoints attribute)": [[119, "gammapy.estimators.FluxPoints.sqrt_ts", false]], "sqrt_ts (gammapy.stats.cashcountsstatistic attribute)": [[272, "gammapy.stats.CashCountsStatistic.sqrt_ts", false]], "sqrt_ts (gammapy.stats.wstatcountsstatistic attribute)": [[274, "gammapy.stats.WStatCountsStatistic.sqrt_ts", false]], "sqrt_ts_threshold_ul (gammapy.estimators.fluxmaps attribute)": [[117, "gammapy.estimators.FluxMaps.sqrt_ts_threshold_ul", false]], "sqrt_ts_threshold_ul (gammapy.estimators.fluxpoints attribute)": [[119, "gammapy.estimators.FluxPoints.sqrt_ts_threshold_ul", false]], "squash() (gammapy.maps.geom method)": [[181, "gammapy.maps.Geom.squash", false]], "squash() (gammapy.maps.hpxgeom method)": [[182, "gammapy.maps.HpxGeom.squash", false]], "squash() (gammapy.maps.labelmapaxis method)": [[185, "gammapy.maps.LabelMapAxis.squash", false]], "squash() (gammapy.maps.mapaxes method)": [[187, "gammapy.maps.MapAxes.squash", false]], "squash() (gammapy.maps.mapaxis method)": [[188, "gammapy.maps.MapAxis.squash", false]], "squash() (gammapy.maps.regiongeom method)": [[191, "gammapy.maps.RegionGeom.squash", false]], "squash() (gammapy.maps.timemapaxis method)": [[193, "gammapy.maps.TimeMapAxis.squash", false]], "squash() (gammapy.maps.wcsgeom method)": [[194, "gammapy.maps.WcsGeom.squash", false]], "ssc_model (gammapy.modeling.models.naimaspectralmodel attribute)": [[234, "gammapy.modeling.models.NaimaSpectralModel.ssc_model", false]], "stack() (gammapy.data.eventlist method)": [[79, "gammapy.data.EventList.stack", false]], "stack() (gammapy.data.gti method)": [[82, "gammapy.data.GTI.stack", false]], "stack() (gammapy.datasets.mapdataset method)": [[97, "gammapy.datasets.MapDataset.stack", false]], "stack() (gammapy.datasets.mapdatasetmetadata method)": [[99, "gammapy.datasets.MapDatasetMetaData.stack", false]], "stack() (gammapy.datasets.mapdatasetonoff method)": [[100, "gammapy.datasets.MapDatasetOnOff.stack", false]], "stack() (gammapy.datasets.spectrumdataset method)": [[104, "gammapy.datasets.SpectrumDataset.stack", false]], "stack() (gammapy.datasets.spectrumdatasetonoff method)": [[105, "gammapy.datasets.SpectrumDatasetOnOff.stack", false]], "stack() (gammapy.irf.edispkernelmap method)": [[141, "gammapy.irf.EDispKernelMap.stack", false]], "stack() (gammapy.irf.edispmap method)": [[142, "gammapy.irf.EDispMap.stack", false]], "stack() (gammapy.irf.irfmap method)": [[148, "gammapy.irf.IRFMap.stack", false]], "stack() (gammapy.irf.psfmap method)": [[153, "gammapy.irf.PSFMap.stack", false]], "stack() (gammapy.irf.recopsfmap method)": [[156, "gammapy.irf.RecoPSFMap.stack", false]], "stack() (gammapy.maps.hpxndmap method)": [[184, "gammapy.maps.HpxNDMap.stack", false]], "stack() (gammapy.maps.regionndmap method)": [[192, "gammapy.maps.RegionNDMap.stack", false]], "stack() (gammapy.maps.wcsndmap method)": [[196, "gammapy.maps.WcsNDMap.stack", false]], "stack() (gammapy.modeling.models.templatenpredmodel method)": [[258, "gammapy.modeling.models.TemplateNPredModel.stack", false]], "stack_reduce() (gammapy.datasets.datasets method)": [[95, "gammapy.datasets.Datasets.stack_reduce", false]], "stacked analysis": [[554, "term-Stacked-Analysis", true]], "standard_broadcasting (gammapy.astro.population.casebattacharya1998 attribute)": [[28, "gammapy.astro.population.CaseBattacharya1998.standard_broadcasting", false]], "standard_broadcasting (gammapy.astro.population.exponential attribute)": [[29, "gammapy.astro.population.Exponential.standard_broadcasting", false]], "standard_broadcasting (gammapy.astro.population.faucherkaspi2006 attribute)": [[30, "gammapy.astro.population.FaucherKaspi2006.standard_broadcasting", false]], "standard_broadcasting (gammapy.astro.population.faucherkaspi2006velocitybimodal attribute)": [[31, "gammapy.astro.population.FaucherKaspi2006VelocityBimodal.standard_broadcasting", false]], "standard_broadcasting (gammapy.astro.population.faucherkaspi2006velocitymaxwellian attribute)": [[32, "gammapy.astro.population.FaucherKaspi2006VelocityMaxwellian.standard_broadcasting", false]], "standard_broadcasting (gammapy.astro.population.lorimer2006 attribute)": [[35, "gammapy.astro.population.Lorimer2006.standard_broadcasting", false]], "standard_broadcasting (gammapy.astro.population.paczynski1990 attribute)": [[36, "gammapy.astro.population.Paczynski1990.standard_broadcasting", false]], "standard_broadcasting (gammapy.astro.population.paczynski1990velocity attribute)": [[37, "gammapy.astro.population.Paczynski1990Velocity.standard_broadcasting", false]], "standard_broadcasting (gammapy.astro.population.yusifovkucuk2004 attribute)": [[39, "gammapy.astro.population.YusifovKucuk2004.standard_broadcasting", false]], "standard_broadcasting (gammapy.astro.population.yusifovkucuk2004b attribute)": [[40, "gammapy.astro.population.YusifovKucuk2004B.standard_broadcasting", false]], "standard_scaler() (in module gammapy.utils.cluster)": [[289, "gammapy.utils.cluster.standard_scaler", false]], "standardise_unit() (in module gammapy.utils.units)": [[346, "gammapy.utils.units.standardise_unit", false]], "stat (gammapy.estimators.fluxmaps attribute)": [[117, "gammapy.estimators.FluxMaps.stat", false]], "stat (gammapy.estimators.fluxpoints attribute)": [[119, "gammapy.estimators.FluxPoints.stat", false]], "stat_array() (gammapy.datasets.dataset method)": [[94, "gammapy.datasets.Dataset.stat_array", false]], "stat_array() (gammapy.datasets.fluxpointsdataset method)": [[96, "gammapy.datasets.FluxPointsDataset.stat_array", false]], "stat_array() (gammapy.datasets.mapdataset method)": [[97, "gammapy.datasets.MapDataset.stat_array", false]], "stat_array() (gammapy.datasets.mapdatasetonoff method)": [[100, "gammapy.datasets.MapDatasetOnOff.stat_array", false]], "stat_array() (gammapy.datasets.spectrumdataset method)": [[104, "gammapy.datasets.SpectrumDataset.stat_array", false]], "stat_array() (gammapy.datasets.spectrumdatasetonoff method)": [[105, "gammapy.datasets.SpectrumDatasetOnOff.stat_array", false]], "stat_contour() (gammapy.modeling.fit method)": [[200, "gammapy.modeling.Fit.stat_contour", false]], "stat_max (gammapy.stats.cashcountsstatistic attribute)": [[272, "gammapy.stats.CashCountsStatistic.stat_max", false]], "stat_max (gammapy.stats.wstatcountsstatistic attribute)": [[274, "gammapy.stats.WStatCountsStatistic.stat_max", false]], "stat_null (gammapy.estimators.fluxmaps attribute)": [[117, "gammapy.estimators.FluxMaps.stat_null", false]], "stat_null (gammapy.estimators.fluxpoints attribute)": [[119, "gammapy.estimators.FluxPoints.stat_null", false]], "stat_null (gammapy.stats.cashcountsstatistic attribute)": [[272, "gammapy.stats.CashCountsStatistic.stat_null", false]], "stat_null (gammapy.stats.wstatcountsstatistic attribute)": [[274, "gammapy.stats.WStatCountsStatistic.stat_null", false]], "stat_profile() (gammapy.modeling.fit method)": [[200, "gammapy.modeling.Fit.stat_profile", false]], "stat_profile_ul_scipy() (in module gammapy.modeling)": [[271, "gammapy.modeling.stat_profile_ul_scipy", false]], "stat_scan (gammapy.estimators.fluxmaps attribute)": [[117, "gammapy.estimators.FluxMaps.stat_scan", false]], "stat_scan (gammapy.estimators.fluxpoints attribute)": [[119, "gammapy.estimators.FluxPoints.stat_scan", false]], "stat_sum() (gammapy.datasets.dataset method)": [[94, "gammapy.datasets.Dataset.stat_sum", false]], "stat_sum() (gammapy.datasets.datasets method)": [[95, "gammapy.datasets.Datasets.stat_sum", false]], "stat_sum() (gammapy.datasets.fluxpointsdataset method)": [[96, "gammapy.datasets.FluxPointsDataset.stat_sum", false]], "stat_sum() (gammapy.datasets.mapdataset method)": [[97, "gammapy.datasets.MapDataset.stat_sum", false]], "stat_sum() (gammapy.datasets.mapdatasetonoff method)": [[100, "gammapy.datasets.MapDatasetOnOff.stat_sum", false]], "stat_sum() (gammapy.datasets.spectrumdataset method)": [[104, "gammapy.datasets.SpectrumDataset.stat_sum", false]], "stat_sum() (gammapy.datasets.spectrumdatasetonoff method)": [[105, "gammapy.datasets.SpectrumDatasetOnOff.stat_sum", false]], "stat_surface() (gammapy.modeling.fit method)": [[200, "gammapy.modeling.Fit.stat_surface", false]], "stat_type (gammapy.datasets.fluxpointsdataset attribute)": [[96, "gammapy.datasets.FluxPointsDataset.stat_type", false]], "stat_type (gammapy.datasets.mapdataset attribute)": [[97, "gammapy.datasets.MapDataset.stat_type", false]], "stat_type (gammapy.datasets.mapdatasetonoff attribute)": [[100, "gammapy.datasets.MapDatasetOnOff.stat_type", false]], "stat_type (gammapy.datasets.spectrumdataset attribute)": [[104, "gammapy.datasets.SpectrumDataset.stat_type", false]], "stat_type (gammapy.datasets.spectrumdatasetonoff attribute)": [[105, "gammapy.datasets.SpectrumDatasetOnOff.stat_type", false]], "stds (gammapy.astro.population.casebattacharya1998 attribute)": [[28, "gammapy.astro.population.CaseBattacharya1998.stds", false]], "stds (gammapy.astro.population.exponential attribute)": [[29, "gammapy.astro.population.Exponential.stds", false]], "stds (gammapy.astro.population.faucherkaspi2006 attribute)": [[30, "gammapy.astro.population.FaucherKaspi2006.stds", false]], "stds (gammapy.astro.population.faucherkaspi2006velocitybimodal attribute)": [[31, "gammapy.astro.population.FaucherKaspi2006VelocityBimodal.stds", false]], "stds (gammapy.astro.population.faucherkaspi2006velocitymaxwellian attribute)": [[32, "gammapy.astro.population.FaucherKaspi2006VelocityMaxwellian.stds", false]], "stds (gammapy.astro.population.lorimer2006 attribute)": [[35, "gammapy.astro.population.Lorimer2006.stds", false]], "stds (gammapy.astro.population.paczynski1990 attribute)": [[36, "gammapy.astro.population.Paczynski1990.stds", false]], "stds (gammapy.astro.population.paczynski1990velocity attribute)": [[37, "gammapy.astro.population.Paczynski1990Velocity.stds", false]], "stds (gammapy.astro.population.yusifovkucuk2004 attribute)": [[39, "gammapy.astro.population.YusifovKucuk2004.stds", false]], "stds (gammapy.astro.population.yusifovkucuk2004b attribute)": [[40, "gammapy.astro.population.YusifovKucuk2004B.stds", false]], "strip_units_from_tree() (gammapy.astro.population.casebattacharya1998 method)": [[28, "gammapy.astro.population.CaseBattacharya1998.strip_units_from_tree", false]], "strip_units_from_tree() (gammapy.astro.population.exponential method)": [[29, "gammapy.astro.population.Exponential.strip_units_from_tree", false]], "strip_units_from_tree() (gammapy.astro.population.faucherkaspi2006 method)": [[30, "gammapy.astro.population.FaucherKaspi2006.strip_units_from_tree", false]], "strip_units_from_tree() (gammapy.astro.population.faucherkaspi2006velocitybimodal method)": [[31, "gammapy.astro.population.FaucherKaspi2006VelocityBimodal.strip_units_from_tree", false]], "strip_units_from_tree() (gammapy.astro.population.faucherkaspi2006velocitymaxwellian method)": [[32, "gammapy.astro.population.FaucherKaspi2006VelocityMaxwellian.strip_units_from_tree", false]], "strip_units_from_tree() (gammapy.astro.population.lorimer2006 method)": [[35, "gammapy.astro.population.Lorimer2006.strip_units_from_tree", false]], "strip_units_from_tree() (gammapy.astro.population.paczynski1990 method)": [[36, "gammapy.astro.population.Paczynski1990.strip_units_from_tree", false]], "strip_units_from_tree() (gammapy.astro.population.paczynski1990velocity method)": [[37, "gammapy.astro.population.Paczynski1990Velocity.strip_units_from_tree", false]], "strip_units_from_tree() (gammapy.astro.population.yusifovkucuk2004 method)": [[39, "gammapy.astro.population.YusifovKucuk2004.strip_units_from_tree", false]], "strip_units_from_tree() (gammapy.astro.population.yusifovkucuk2004b method)": [[40, "gammapy.astro.population.YusifovKucuk2004B.strip_units_from_tree", false]], "structure_function() (in module gammapy.stats)": [[286, "gammapy.stats.structure_function", false]], "success (gammapy.estimators.fluxmaps attribute)": [[117, "gammapy.estimators.FluxMaps.success", false]], "success (gammapy.estimators.fluxpoints attribute)": [[119, "gammapy.estimators.FluxPoints.success", false]], "sum() (gammapy.stats.cashcountsstatistic method)": [[272, "gammapy.stats.CashCountsStatistic.sum", false]], "sum() (gammapy.stats.wstatcountsstatistic method)": [[274, "gammapy.stats.WStatCountsStatistic.sum", false]], "sum_of_implicit_terms() (gammapy.astro.population.casebattacharya1998 method)": [[28, "gammapy.astro.population.CaseBattacharya1998.sum_of_implicit_terms", false]], "sum_of_implicit_terms() (gammapy.astro.population.exponential method)": [[29, "gammapy.astro.population.Exponential.sum_of_implicit_terms", false]], "sum_of_implicit_terms() (gammapy.astro.population.faucherkaspi2006 method)": [[30, "gammapy.astro.population.FaucherKaspi2006.sum_of_implicit_terms", false]], "sum_of_implicit_terms() (gammapy.astro.population.faucherkaspi2006velocitybimodal method)": [[31, "gammapy.astro.population.FaucherKaspi2006VelocityBimodal.sum_of_implicit_terms", false]], "sum_of_implicit_terms() (gammapy.astro.population.faucherkaspi2006velocitymaxwellian method)": [[32, "gammapy.astro.population.FaucherKaspi2006VelocityMaxwellian.sum_of_implicit_terms", false]], "sum_of_implicit_terms() (gammapy.astro.population.lorimer2006 method)": [[35, "gammapy.astro.population.Lorimer2006.sum_of_implicit_terms", false]], "sum_of_implicit_terms() (gammapy.astro.population.paczynski1990 method)": [[36, "gammapy.astro.population.Paczynski1990.sum_of_implicit_terms", false]], "sum_of_implicit_terms() (gammapy.astro.population.paczynski1990velocity method)": [[37, "gammapy.astro.population.Paczynski1990Velocity.sum_of_implicit_terms", false]], "sum_of_implicit_terms() (gammapy.astro.population.yusifovkucuk2004 method)": [[39, "gammapy.astro.population.YusifovKucuk2004.sum_of_implicit_terms", false]], "sum_of_implicit_terms() (gammapy.astro.population.yusifovkucuk2004b method)": [[40, "gammapy.astro.population.YusifovKucuk2004B.sum_of_implicit_terms", false]], "sum_over_axes() (gammapy.maps.hpxmap method)": [[183, "gammapy.maps.HpxMap.sum_over_axes", false]], "sum_over_axes() (gammapy.maps.hpxndmap method)": [[184, "gammapy.maps.HpxNDMap.sum_over_axes", false]], "sum_over_axes() (gammapy.maps.map method)": [[186, "gammapy.maps.Map.sum_over_axes", false]], "sum_over_axes() (gammapy.maps.regionndmap method)": [[192, "gammapy.maps.RegionNDMap.sum_over_axes", false]], "sum_over_axes() (gammapy.maps.wcsmap method)": [[195, "gammapy.maps.WcsMap.sum_over_axes", false]], "sum_over_axes() (gammapy.maps.wcsndmap method)": [[196, "gammapy.maps.WcsNDMap.sum_over_axes", false]], "summary() (gammapy.data.hduindextable method)": [[83, "gammapy.data.HDUIndexTable.summary", false]], "summary() (gammapy.data.observationtable method)": [[86, "gammapy.data.ObservationTable.summary", false]], "superexpcutoffpowerlaw3fglspectralmodel (class in gammapy.modeling.models)": [[252, "gammapy.modeling.models.SuperExpCutoffPowerLaw3FGLSpectralModel", false]], "superexpcutoffpowerlaw4fgldr3spectralmodel (class in gammapy.modeling.models)": [[253, "gammapy.modeling.models.SuperExpCutoffPowerLaw4FGLDR3SpectralModel", false]], "superexpcutoffpowerlaw4fglspectralmodel (class in gammapy.modeling.models)": [[254, "gammapy.modeling.models.SuperExpCutoffPowerLaw4FGLSpectralModel", false]], "sync_constraints (gammapy.astro.population.casebattacharya1998 attribute)": [[28, "gammapy.astro.population.CaseBattacharya1998.sync_constraints", false]], "sync_constraints (gammapy.astro.population.exponential attribute)": [[29, "gammapy.astro.population.Exponential.sync_constraints", false]], "sync_constraints (gammapy.astro.population.faucherkaspi2006 attribute)": [[30, "gammapy.astro.population.FaucherKaspi2006.sync_constraints", false]], "sync_constraints (gammapy.astro.population.faucherkaspi2006velocitybimodal attribute)": [[31, "gammapy.astro.population.FaucherKaspi2006VelocityBimodal.sync_constraints", false]], "sync_constraints (gammapy.astro.population.faucherkaspi2006velocitymaxwellian attribute)": [[32, "gammapy.astro.population.FaucherKaspi2006VelocityMaxwellian.sync_constraints", false]], "sync_constraints (gammapy.astro.population.lorimer2006 attribute)": [[35, "gammapy.astro.population.Lorimer2006.sync_constraints", false]], "sync_constraints (gammapy.astro.population.paczynski1990 attribute)": [[36, "gammapy.astro.population.Paczynski1990.sync_constraints", false]], "sync_constraints (gammapy.astro.population.paczynski1990velocity attribute)": [[37, "gammapy.astro.population.Paczynski1990Velocity.sync_constraints", false]], "sync_constraints (gammapy.astro.population.yusifovkucuk2004 attribute)": [[39, "gammapy.astro.population.YusifovKucuk2004.sync_constraints", false]], "sync_constraints (gammapy.astro.population.yusifovkucuk2004b attribute)": [[40, "gammapy.astro.population.YusifovKucuk2004B.sync_constraints", false]], "t0 (gammapy.modeling.models.expdecaytemporalmodel attribute)": [[218, "gammapy.modeling.models.ExpDecayTemporalModel.t0", false]], "t0 (gammapy.modeling.models.powerlawtemporalmodel attribute)": [[241, "gammapy.modeling.models.PowerLawTemporalModel.t0", false]], "t_decay (gammapy.modeling.models.generalizedgaussiantemporalmodel attribute)": [[224, "gammapy.modeling.models.GeneralizedGaussianTemporalModel.t_decay", false]], "t_ref (gammapy.modeling.models.expdecaytemporalmodel attribute)": [[218, "gammapy.modeling.models.ExpDecayTemporalModel.t_ref", false]], "t_ref (gammapy.modeling.models.gaussiantemporalmodel attribute)": [[222, "gammapy.modeling.models.GaussianTemporalModel.t_ref", false]], "t_ref (gammapy.modeling.models.generalizedgaussiantemporalmodel attribute)": [[224, "gammapy.modeling.models.GeneralizedGaussianTemporalModel.t_ref", false]], "t_ref (gammapy.modeling.models.lightcurvetemplatetemporalmodel attribute)": [[225, "gammapy.modeling.models.LightCurveTemplateTemporalModel.t_ref", false]], "t_ref (gammapy.modeling.models.lineartemporalmodel attribute)": [[226, "gammapy.modeling.models.LinearTemporalModel.t_ref", false]], "t_ref (gammapy.modeling.models.powerlawtemporalmodel attribute)": [[241, "gammapy.modeling.models.PowerLawTemporalModel.t_ref", false]], "t_ref (gammapy.modeling.models.sinetemporalmodel attribute)": [[247, "gammapy.modeling.models.SineTemporalModel.t_ref", false]], "t_ref (gammapy.modeling.models.templatephasecurvetemporalmodel attribute)": [[259, "gammapy.modeling.models.TemplatePhaseCurveTemporalModel.t_ref", false]], "t_rise (gammapy.modeling.models.generalizedgaussiantemporalmodel attribute)": [[224, "gammapy.modeling.models.GeneralizedGaussianTemporalModel.t_rise", false]], "table_associations (gammapy.catalog.sourcecataloghgps attribute)": [[65, "gammapy.catalog.SourceCatalogHGPS.table_associations", false]], "table_components (gammapy.catalog.sourcecataloghgps attribute)": [[65, "gammapy.catalog.SourceCatalogHGPS.table_components", false]], "table_filename (gammapy.astro.darkmatter.primaryflux attribute)": [[26, "gammapy.astro.darkmatter.PrimaryFlux.table_filename", false]], "table_identifications (gammapy.catalog.sourcecataloghgps attribute)": [[65, "gammapy.catalog.SourceCatalogHGPS.table_identifications", false]], "table_large_scale_component (gammapy.catalog.sourcecataloghgps attribute)": [[65, "gammapy.catalog.SourceCatalogHGPS.table_large_scale_component", false]], "table_row_to_dict() (in module gammapy.utils.table)": [[332, "gammapy.utils.table.table_row_to_dict", false]], "table_standardise_units_copy() (in module gammapy.utils.table)": [[333, "gammapy.utils.table.table_standardise_units_copy", false]], "table_standardise_units_inplace() (in module gammapy.utils.table)": [[334, "gammapy.utils.table.table_standardise_units_inplace", false]], "tag (gammapy.astro.darkmatter.darkmatterannihilationspectralmodel attribute)": [[19, "gammapy.astro.darkmatter.DarkMatterAnnihilationSpectralModel.tag", false]], "tag (gammapy.astro.darkmatter.darkmatterdecayspectralmodel attribute)": [[20, "gammapy.astro.darkmatter.DarkMatterDecaySpectralModel.tag", false]], "tag (gammapy.astro.darkmatter.primaryflux attribute)": [[26, "gammapy.astro.darkmatter.PrimaryFlux.tag", false]], "tag (gammapy.catalog.sourcecatalog attribute)": [[56, "gammapy.catalog.SourceCatalog.tag", false]], "tag (gammapy.catalog.sourcecatalog1lhaaso attribute)": [[57, "gammapy.catalog.SourceCatalog1LHAASO.tag", false]], "tag (gammapy.catalog.sourcecatalog2fhl attribute)": [[58, "gammapy.catalog.SourceCatalog2FHL.tag", false]], "tag (gammapy.catalog.sourcecatalog2hwc attribute)": [[59, "gammapy.catalog.SourceCatalog2HWC.tag", false]], "tag (gammapy.catalog.sourcecatalog3fgl attribute)": [[60, "gammapy.catalog.SourceCatalog3FGL.tag", false]], "tag (gammapy.catalog.sourcecatalog3fhl attribute)": [[61, "gammapy.catalog.SourceCatalog3FHL.tag", false]], "tag (gammapy.catalog.sourcecatalog3hwc attribute)": [[62, "gammapy.catalog.SourceCatalog3HWC.tag", false]], "tag (gammapy.catalog.sourcecatalog4fgl attribute)": [[63, "gammapy.catalog.SourceCatalog4FGL.tag", false]], "tag (gammapy.catalog.sourcecataloggammacat attribute)": [[64, "gammapy.catalog.SourceCatalogGammaCat.tag", false]], "tag (gammapy.catalog.sourcecataloghgps attribute)": [[65, "gammapy.catalog.SourceCatalogHGPS.tag", false]], "tag (gammapy.data.eventlistmetadata attribute)": [[80, "gammapy.data.EventListMetaData.tag", false]], "tag (gammapy.datasets.dataset attribute)": [[94, "gammapy.datasets.Dataset.tag", false]], "tag (gammapy.datasets.fluxpointsdataset attribute)": [[96, "gammapy.datasets.FluxPointsDataset.tag", false]], "tag (gammapy.datasets.mapdataset attribute)": [[97, "gammapy.datasets.MapDataset.tag", false]], "tag (gammapy.datasets.mapdatasetmetadata attribute)": [[99, "gammapy.datasets.MapDatasetMetaData.tag", false]], "tag (gammapy.datasets.mapdatasetonoff attribute)": [[100, "gammapy.datasets.MapDatasetOnOff.tag", false]], "tag (gammapy.datasets.ogipdatasetreader attribute)": [[101, "gammapy.datasets.OGIPDatasetReader.tag", false]], "tag (gammapy.datasets.ogipdatasetwriter attribute)": [[102, "gammapy.datasets.OGIPDatasetWriter.tag", false]], "tag (gammapy.datasets.spectrumdataset attribute)": [[104, "gammapy.datasets.SpectrumDataset.tag", false]], "tag (gammapy.datasets.spectrumdatasetonoff attribute)": [[105, "gammapy.datasets.SpectrumDatasetOnOff.tag", false]], "tag (gammapy.estimators.asmoothmapestimator attribute)": [[112, "gammapy.estimators.ASmoothMapEstimator.tag", false]], "tag (gammapy.estimators.energydependentmorphologyestimator attribute)": [[114, "gammapy.estimators.EnergyDependentMorphologyEstimator.tag", false]], "tag (gammapy.estimators.estimator attribute)": [[115, "gammapy.estimators.Estimator.tag", false]], "tag (gammapy.estimators.excessmapestimator attribute)": [[116, "gammapy.estimators.ExcessMapEstimator.tag", false]], "tag (gammapy.estimators.fluxmetadata attribute)": [[118, "gammapy.estimators.FluxMetaData.tag", false]], "tag (gammapy.estimators.fluxpointsestimator attribute)": [[120, "gammapy.estimators.FluxPointsEstimator.tag", false]], "tag (gammapy.estimators.fluxprofileestimator attribute)": [[121, "gammapy.estimators.FluxProfileEstimator.tag", false]], "tag (gammapy.estimators.imageprofileestimator attribute)": [[123, "gammapy.estimators.ImageProfileEstimator.tag", false]], "tag (gammapy.estimators.lightcurveestimator attribute)": [[124, "gammapy.estimators.LightCurveEstimator.tag", false]], "tag (gammapy.estimators.parameterestimator attribute)": [[125, "gammapy.estimators.ParameterEstimator.tag", false]], "tag (gammapy.estimators.sensitivityestimator attribute)": [[126, "gammapy.estimators.SensitivityEstimator.tag", false]], "tag (gammapy.estimators.tsmapestimator attribute)": [[127, "gammapy.estimators.TSMapEstimator.tag", false]], "tag (gammapy.irf.background2d attribute)": [[137, "gammapy.irf.Background2D.tag", false]], "tag (gammapy.irf.background3d attribute)": [[138, "gammapy.irf.Background3D.tag", false]], "tag (gammapy.irf.backgroundirf attribute)": [[139, "gammapy.irf.BackgroundIRF.tag", false]], "tag (gammapy.irf.edispkernel attribute)": [[140, "gammapy.irf.EDispKernel.tag", false]], "tag (gammapy.irf.edispkernelmap attribute)": [[141, "gammapy.irf.EDispKernelMap.tag", false]], "tag (gammapy.irf.edispmap attribute)": [[142, "gammapy.irf.EDispMap.tag", false]], "tag (gammapy.irf.effectiveareatable2d attribute)": [[143, "gammapy.irf.EffectiveAreaTable2D.tag", false]], "tag (gammapy.irf.energydependentmultigausspsf attribute)": [[144, "gammapy.irf.EnergyDependentMultiGaussPSF.tag", false]], "tag (gammapy.irf.energydispersion2d attribute)": [[145, "gammapy.irf.EnergyDispersion2D.tag", false]], "tag (gammapy.irf.irf attribute)": [[147, "gammapy.irf.IRF.tag", false]], "tag (gammapy.irf.irfmap attribute)": [[148, "gammapy.irf.IRFMap.tag", false]], "tag (gammapy.irf.parametricpsf attribute)": [[154, "gammapy.irf.ParametricPSF.tag", false]], "tag (gammapy.irf.psf3d attribute)": [[150, "gammapy.irf.PSF3D.tag", false]], "tag (gammapy.irf.psfking attribute)": [[152, "gammapy.irf.PSFKing.tag", false]], "tag (gammapy.irf.psfmap attribute)": [[153, "gammapy.irf.PSFMap.tag", false]], "tag (gammapy.irf.radmax2d attribute)": [[155, "gammapy.irf.RadMax2D.tag", false]], "tag (gammapy.irf.recopsfmap attribute)": [[156, "gammapy.irf.RecoPSFMap.tag", false]], "tag (gammapy.makers.adaptiveringbackgroundmaker attribute)": [[158, "gammapy.makers.AdaptiveRingBackgroundMaker.tag", false]], "tag (gammapy.makers.datasetsmaker attribute)": [[159, "gammapy.makers.DatasetsMaker.tag", false]], "tag (gammapy.makers.fovbackgroundmaker attribute)": [[160, "gammapy.makers.FoVBackgroundMaker.tag", false]], "tag (gammapy.makers.maker attribute)": [[162, "gammapy.makers.Maker.tag", false]], "tag (gammapy.makers.mapdatasetmaker attribute)": [[163, "gammapy.makers.MapDatasetMaker.tag", false]], "tag (gammapy.makers.phasebackgroundmaker attribute)": [[164, "gammapy.makers.PhaseBackgroundMaker.tag", false]], "tag (gammapy.makers.reflectedregionsbackgroundmaker attribute)": [[165, "gammapy.makers.ReflectedRegionsBackgroundMaker.tag", false]], "tag (gammapy.makers.ringbackgroundmaker attribute)": [[168, "gammapy.makers.RingBackgroundMaker.tag", false]], "tag (gammapy.makers.safemaskmaker attribute)": [[169, "gammapy.makers.SafeMaskMaker.tag", false]], "tag (gammapy.makers.spectrumdatasetmaker attribute)": [[170, "gammapy.makers.SpectrumDatasetMaker.tag", false]], "tag (gammapy.maps.hpxmap attribute)": [[183, "gammapy.maps.HpxMap.tag", false]], "tag (gammapy.maps.hpxndmap attribute)": [[184, "gammapy.maps.HpxNDMap.tag", false]], "tag (gammapy.maps.map attribute)": [[186, "gammapy.maps.Map.tag", false]], "tag (gammapy.maps.regionndmap attribute)": [[192, "gammapy.maps.RegionNDMap.tag", false]], "tag (gammapy.maps.wcsmap attribute)": [[195, "gammapy.maps.WcsMap.tag", false]], "tag (gammapy.maps.wcsndmap attribute)": [[196, "gammapy.maps.WcsNDMap.tag", false]], "tag (gammapy.modeling.models.brokenpowerlawspectralmodel attribute)": [[205, "gammapy.modeling.models.BrokenPowerLawSpectralModel.tag", false]], "tag (gammapy.modeling.models.compoundspectralmodel attribute)": [[206, "gammapy.modeling.models.CompoundSpectralModel.tag", false]], "tag (gammapy.modeling.models.constantfluxspatialmodel attribute)": [[207, "gammapy.modeling.models.ConstantFluxSpatialModel.tag", false]], "tag (gammapy.modeling.models.constantspatialmodel attribute)": [[208, "gammapy.modeling.models.ConstantSpatialModel.tag", false]], "tag (gammapy.modeling.models.constantspectralmodel attribute)": [[209, "gammapy.modeling.models.ConstantSpectralModel.tag", false]], "tag (gammapy.modeling.models.constanttemporalmodel attribute)": [[210, "gammapy.modeling.models.ConstantTemporalModel.tag", false]], "tag (gammapy.modeling.models.diskspatialmodel attribute)": [[212, "gammapy.modeling.models.DiskSpatialModel.tag", false]], "tag (gammapy.modeling.models.eblabsorptionnormspectralmodel attribute)": [[213, "gammapy.modeling.models.EBLAbsorptionNormSpectralModel.tag", false]], "tag (gammapy.modeling.models.expcutoffpowerlaw3fglspectralmodel attribute)": [[215, "gammapy.modeling.models.ExpCutoffPowerLaw3FGLSpectralModel.tag", false]], "tag (gammapy.modeling.models.expcutoffpowerlawnormspectralmodel attribute)": [[216, "gammapy.modeling.models.ExpCutoffPowerLawNormSpectralModel.tag", false]], "tag (gammapy.modeling.models.expcutoffpowerlawspectralmodel attribute)": [[217, "gammapy.modeling.models.ExpCutoffPowerLawSpectralModel.tag", false]], "tag (gammapy.modeling.models.expdecaytemporalmodel attribute)": [[218, "gammapy.modeling.models.ExpDecayTemporalModel.tag", false]], "tag (gammapy.modeling.models.fovbackgroundmodel attribute)": [[219, "gammapy.modeling.models.FoVBackgroundModel.tag", false]], "tag (gammapy.modeling.models.gaussianspatialmodel attribute)": [[220, "gammapy.modeling.models.GaussianSpatialModel.tag", false]], "tag (gammapy.modeling.models.gaussianspectralmodel attribute)": [[221, "gammapy.modeling.models.GaussianSpectralModel.tag", false]], "tag (gammapy.modeling.models.gaussiantemporalmodel attribute)": [[222, "gammapy.modeling.models.GaussianTemporalModel.tag", false]], "tag (gammapy.modeling.models.generalizedgaussianspatialmodel attribute)": [[223, "gammapy.modeling.models.GeneralizedGaussianSpatialModel.tag", false]], "tag (gammapy.modeling.models.generalizedgaussiantemporalmodel attribute)": [[224, "gammapy.modeling.models.GeneralizedGaussianTemporalModel.tag", false]], "tag (gammapy.modeling.models.lightcurvetemplatetemporalmodel attribute)": [[225, "gammapy.modeling.models.LightCurveTemplateTemporalModel.tag", false]], "tag (gammapy.modeling.models.lineartemporalmodel attribute)": [[226, "gammapy.modeling.models.LinearTemporalModel.tag", false]], "tag (gammapy.modeling.models.logparabolanormspectralmodel attribute)": [[227, "gammapy.modeling.models.LogParabolaNormSpectralModel.tag", false]], "tag (gammapy.modeling.models.logparabolaspectralmodel attribute)": [[228, "gammapy.modeling.models.LogParabolaSpectralModel.tag", false]], "tag (gammapy.modeling.models.naimaspectralmodel attribute)": [[234, "gammapy.modeling.models.NaimaSpectralModel.tag", false]], "tag (gammapy.modeling.models.piecewisenormspatialmodel attribute)": [[235, "gammapy.modeling.models.PiecewiseNormSpatialModel.tag", false]], "tag (gammapy.modeling.models.piecewisenormspectralmodel attribute)": [[236, "gammapy.modeling.models.PiecewiseNormSpectralModel.tag", false]], "tag (gammapy.modeling.models.pointspatialmodel attribute)": [[237, "gammapy.modeling.models.PointSpatialModel.tag", false]], "tag (gammapy.modeling.models.powerlaw2spectralmodel attribute)": [[238, "gammapy.modeling.models.PowerLaw2SpectralModel.tag", false]], "tag (gammapy.modeling.models.powerlawnormspectralmodel attribute)": [[239, "gammapy.modeling.models.PowerLawNormSpectralModel.tag", false]], "tag (gammapy.modeling.models.powerlawspectralmodel attribute)": [[240, "gammapy.modeling.models.PowerLawSpectralModel.tag", false]], "tag (gammapy.modeling.models.powerlawtemporalmodel attribute)": [[241, "gammapy.modeling.models.PowerLawTemporalModel.tag", false]], "tag (gammapy.modeling.models.scalespectralmodel attribute)": [[244, "gammapy.modeling.models.ScaleSpectralModel.tag", false]], "tag (gammapy.modeling.models.shell2spatialmodel attribute)": [[245, "gammapy.modeling.models.Shell2SpatialModel.tag", false]], "tag (gammapy.modeling.models.shellspatialmodel attribute)": [[246, "gammapy.modeling.models.ShellSpatialModel.tag", false]], "tag (gammapy.modeling.models.sinetemporalmodel attribute)": [[247, "gammapy.modeling.models.SineTemporalModel.tag", false]], "tag (gammapy.modeling.models.skymodel attribute)": [[248, "gammapy.modeling.models.SkyModel.tag", false]], "tag (gammapy.modeling.models.smoothbrokenpowerlawspectralmodel attribute)": [[249, "gammapy.modeling.models.SmoothBrokenPowerLawSpectralModel.tag", false]], "tag (gammapy.modeling.models.superexpcutoffpowerlaw3fglspectralmodel attribute)": [[252, "gammapy.modeling.models.SuperExpCutoffPowerLaw3FGLSpectralModel.tag", false]], "tag (gammapy.modeling.models.superexpcutoffpowerlaw4fgldr3spectralmodel attribute)": [[253, "gammapy.modeling.models.SuperExpCutoffPowerLaw4FGLDR3SpectralModel.tag", false]], "tag (gammapy.modeling.models.superexpcutoffpowerlaw4fglspectralmodel attribute)": [[254, "gammapy.modeling.models.SuperExpCutoffPowerLaw4FGLSpectralModel.tag", false]], "tag (gammapy.modeling.models.templatendspatialmodel attribute)": [[256, "gammapy.modeling.models.TemplateNDSpatialModel.tag", false]], "tag (gammapy.modeling.models.templatendspectralmodel attribute)": [[257, "gammapy.modeling.models.TemplateNDSpectralModel.tag", false]], "tag (gammapy.modeling.models.templatenpredmodel attribute)": [[258, "gammapy.modeling.models.TemplateNPredModel.tag", false]], "tag (gammapy.modeling.models.templatephasecurvetemporalmodel attribute)": [[259, "gammapy.modeling.models.TemplatePhaseCurveTemporalModel.tag", false]], "tag (gammapy.modeling.models.templatespatialmodel attribute)": [[260, "gammapy.modeling.models.TemplateSpatialModel.tag", false]], "tag (gammapy.modeling.models.templatespectralmodel attribute)": [[261, "gammapy.modeling.models.TemplateSpectralModel.tag", false]], "target_radec (gammapy.data.observation attribute)": [[84, "gammapy.data.Observation.target_radec", false]], "tau (gammapy.astro.source.simplepulsar attribute)": [[54, "gammapy.astro.source.SimplePulsar.tau", false]], "tau() (gammapy.astro.source.pulsar method)": [[51, "gammapy.astro.source.Pulsar.tau", false]], "templatendspatialmodel (class in gammapy.modeling.models)": [[256, "gammapy.modeling.models.TemplateNDSpatialModel", false]], "templatendspectralmodel (class in gammapy.modeling.models)": [[257, "gammapy.modeling.models.TemplateNDSpectralModel", false]], "templatenpredmodel (class in gammapy.modeling.models)": [[258, "gammapy.modeling.models.TemplateNPredModel", false]], "templatephasecurvetemporalmodel (class in gammapy.modeling.models)": [[259, "gammapy.modeling.models.TemplatePhaseCurveTemporalModel", false]], "templatespatialmodel (class in gammapy.modeling.models)": [[260, "gammapy.modeling.models.TemplateSpatialModel", false]], "templatespectralmodel (class in gammapy.modeling.models)": [[261, "gammapy.modeling.models.TemplateSpectralModel", false]], "temporal_model (gammapy.modeling.models.skymodel attribute)": [[248, "gammapy.modeling.models.SkyModel.temporal_model", false]], "temporal_model_registry (in module gammapy.modeling.models)": [[255, "gammapy.modeling.models.TEMPORAL_MODEL_REGISTRY", false]], "temporalmodel (class in gammapy.modeling.models)": [[262, "gammapy.modeling.models.TemporalModel", false]], "thermal_relic_cross_section (gammapy.astro.darkmatter.darkmatterannihilationspectralmodel attribute)": [[19, "gammapy.astro.darkmatter.DarkMatterAnnihilationSpectralModel.THERMAL_RELIC_CROSS_SECTION", false]], "theta (gammapy.maps.mapcoord attribute)": [[189, "gammapy.maps.MapCoord.theta", false]], "theta() (gammapy.astro.population.faucherspiral method)": [[33, "gammapy.astro.population.FaucherSpiral.theta", false]], "theta() (gammapy.astro.population.logspiral method)": [[34, "gammapy.astro.population.LogSpiral.theta", false]], "theta() (gammapy.astro.population.valleespiral method)": [[38, "gammapy.astro.population.ValleeSpiral.theta", false]], "theta_0 (gammapy.astro.population.faucherspiral attribute)": [[33, "gammapy.astro.population.FaucherSpiral.theta_0", false]], "theta_0 (gammapy.astro.population.valleespiral attribute)": [[38, "gammapy.astro.population.ValleeSpiral.theta_0", false]], "tied (gammapy.astro.population.casebattacharya1998 attribute)": [[28, "gammapy.astro.population.CaseBattacharya1998.tied", false]], "tied (gammapy.astro.population.exponential attribute)": [[29, "gammapy.astro.population.Exponential.tied", false]], "tied (gammapy.astro.population.faucherkaspi2006 attribute)": [[30, "gammapy.astro.population.FaucherKaspi2006.tied", false]], "tied (gammapy.astro.population.faucherkaspi2006velocitybimodal attribute)": [[31, "gammapy.astro.population.FaucherKaspi2006VelocityBimodal.tied", false]], "tied (gammapy.astro.population.faucherkaspi2006velocitymaxwellian attribute)": [[32, "gammapy.astro.population.FaucherKaspi2006VelocityMaxwellian.tied", false]], "tied (gammapy.astro.population.lorimer2006 attribute)": [[35, "gammapy.astro.population.Lorimer2006.tied", false]], "tied (gammapy.astro.population.paczynski1990 attribute)": [[36, "gammapy.astro.population.Paczynski1990.tied", false]], "tied (gammapy.astro.population.paczynski1990velocity attribute)": [[37, "gammapy.astro.population.Paczynski1990Velocity.tied", false]], "tied (gammapy.astro.population.yusifovkucuk2004 attribute)": [[39, "gammapy.astro.population.YusifovKucuk2004.tied", false]], "tied (gammapy.astro.population.yusifovkucuk2004b attribute)": [[40, "gammapy.astro.population.YusifovKucuk2004B.tied", false]], "tilt (gammapy.modeling.models.powerlawnormspectralmodel attribute)": [[239, "gammapy.modeling.models.PowerLawNormSpectralModel.tilt", false]], "time (gammapy.data.eventlist attribute)": [[79, "gammapy.data.EventList.time", false]], "time (gammapy.data.pointinginfo attribute)": [[89, "gammapy.data.PointingInfo.time", false]], "time_bounds (gammapy.maps.timemapaxis attribute)": [[193, "gammapy.maps.TimeMapAxis.time_bounds", false]], "time_delta (gammapy.data.gti attribute)": [[82, "gammapy.data.GTI.time_delta", false]], "time_delta (gammapy.maps.timemapaxis attribute)": [[193, "gammapy.maps.TimeMapAxis.time_delta", false]], "time_edges (gammapy.maps.timemapaxis attribute)": [[193, "gammapy.maps.TimeMapAxis.time_edges", false]], "time_format (gammapy.maps.timemapaxis attribute)": [[193, "gammapy.maps.TimeMapAxis.time_format", false]], "time_intervals (gammapy.data.gti attribute)": [[82, "gammapy.data.GTI.time_intervals", false]], "time_max (gammapy.maps.timemapaxis attribute)": [[193, "gammapy.maps.TimeMapAxis.time_max", false]], "time_mid (gammapy.maps.timemapaxis attribute)": [[193, "gammapy.maps.TimeMapAxis.time_mid", false]], "time_min (gammapy.maps.timemapaxis attribute)": [[193, "gammapy.maps.TimeMapAxis.time_min", false]], "time_ref (gammapy.data.eventlist attribute)": [[79, "gammapy.data.EventList.time_ref", false]], "time_ref (gammapy.data.gti attribute)": [[82, "gammapy.data.GTI.time_ref", false]], "time_ref (gammapy.data.observationtable attribute)": [[86, "gammapy.data.ObservationTable.time_ref", false]], "time_ref (gammapy.data.pointinginfo attribute)": [[89, "gammapy.data.PointingInfo.time_ref", false]], "time_ref_from_dict() (in module gammapy.utils.time)": [[343, "gammapy.utils.time.time_ref_from_dict", false]], "time_ref_to_dict() (in module gammapy.utils.time)": [[344, "gammapy.utils.time.time_ref_to_dict", false]], "time_relative_to_ref() (in module gammapy.utils.time)": [[345, "gammapy.utils.time.time_relative_to_ref", false]], "time_start (gammapy.data.gti attribute)": [[82, "gammapy.data.GTI.time_start", false]], "time_start (gammapy.data.observationtable attribute)": [[86, "gammapy.data.ObservationTable.time_start", false]], "time_stop (gammapy.data.gti attribute)": [[82, "gammapy.data.GTI.time_stop", false]], "time_stop (gammapy.data.observationtable attribute)": [[86, "gammapy.data.ObservationTable.time_stop", false]], "time_sum (gammapy.data.gti attribute)": [[82, "gammapy.data.GTI.time_sum", false]], "time_sum() (gammapy.modeling.models.constanttemporalmodel static method)": [[210, "gammapy.modeling.models.ConstantTemporalModel.time_sum", false]], "time_sum() (gammapy.modeling.models.expdecaytemporalmodel static method)": [[218, "gammapy.modeling.models.ExpDecayTemporalModel.time_sum", false]], "time_sum() (gammapy.modeling.models.gaussiantemporalmodel static method)": [[222, "gammapy.modeling.models.GaussianTemporalModel.time_sum", false]], "time_sum() (gammapy.modeling.models.generalizedgaussiantemporalmodel static method)": [[224, "gammapy.modeling.models.GeneralizedGaussianTemporalModel.time_sum", false]], "time_sum() (gammapy.modeling.models.lightcurvetemplatetemporalmodel static method)": [[225, "gammapy.modeling.models.LightCurveTemplateTemporalModel.time_sum", false]], "time_sum() (gammapy.modeling.models.lineartemporalmodel static method)": [[226, "gammapy.modeling.models.LinearTemporalModel.time_sum", false]], "time_sum() (gammapy.modeling.models.powerlawtemporalmodel static method)": [[241, "gammapy.modeling.models.PowerLawTemporalModel.time_sum", false]], "time_sum() (gammapy.modeling.models.sinetemporalmodel static method)": [[247, "gammapy.modeling.models.SineTemporalModel.time_sum", false]], "time_sum() (gammapy.modeling.models.templatephasecurvetemporalmodel static method)": [[259, "gammapy.modeling.models.TemplatePhaseCurveTemporalModel.time_sum", false]], "time_sum() (gammapy.modeling.models.temporalmodel static method)": [[262, "gammapy.modeling.models.TemporalModel.time_sum", false]], "timemapaxis (class in gammapy.maps)": [[193, "gammapy.maps.TimeMapAxis", false]], "timmerkonig_lightcurve_simulator() (in module gammapy.stats)": [[273, "gammapy.stats.TimmerKonig_lightcurve_simulator", false]], "tmid (gammapy.data.observation attribute)": [[84, "gammapy.data.Observation.tmid", false]], "to_2d() (gammapy.irf.background3d method)": [[138, "gammapy.irf.Background3D.to_2d", false]], "to_3d() (gammapy.irf.background2d method)": [[137, "gammapy.irf.Background2D.to_3d", false]], "to_bands_hdu() (gammapy.maps.geom method)": [[181, "gammapy.maps.Geom.to_bands_hdu", false]], "to_bands_hdu() (gammapy.maps.hpxgeom method)": [[182, "gammapy.maps.HpxGeom.to_bands_hdu", false]], "to_bands_hdu() (gammapy.maps.regiongeom method)": [[191, "gammapy.maps.RegionGeom.to_bands_hdu", false]], "to_bands_hdu() (gammapy.maps.wcsgeom method)": [[194, "gammapy.maps.WcsGeom.to_bands_hdu", false]], "to_binsz() (gammapy.maps.hpxgeom method)": [[182, "gammapy.maps.HpxGeom.to_binsz", false]], "to_binsz() (gammapy.maps.regiongeom method)": [[191, "gammapy.maps.RegionGeom.to_binsz", false]], "to_binsz() (gammapy.maps.wcsgeom method)": [[194, "gammapy.maps.WcsGeom.to_binsz", false]], "to_binsz_wcs() (gammapy.maps.regiongeom method)": [[191, "gammapy.maps.RegionGeom.to_binsz_wcs", false]], "to_contiguous() (gammapy.maps.timemapaxis method)": [[193, "gammapy.maps.TimeMapAxis.to_contiguous", false]], "to_counts_hdulist() (gammapy.datasets.ogipdatasetwriter method)": [[102, "gammapy.datasets.OGIPDatasetWriter.to_counts_hdulist", false]], "to_cube() (gammapy.maps.geom method)": [[181, "gammapy.maps.Geom.to_cube", false]], "to_cube() (gammapy.maps.hpxgeom method)": [[182, "gammapy.maps.HpxGeom.to_cube", false]], "to_cube() (gammapy.maps.hpxmap method)": [[183, "gammapy.maps.HpxMap.to_cube", false]], "to_cube() (gammapy.maps.hpxndmap method)": [[184, "gammapy.maps.HpxNDMap.to_cube", false]], "to_cube() (gammapy.maps.map method)": [[186, "gammapy.maps.Map.to_cube", false]], "to_cube() (gammapy.maps.regiongeom method)": [[191, "gammapy.maps.RegionGeom.to_cube", false]], "to_cube() (gammapy.maps.regionndmap method)": [[192, "gammapy.maps.RegionNDMap.to_cube", false]], "to_cube() (gammapy.maps.wcsgeom method)": [[194, "gammapy.maps.WcsGeom.to_cube", false]], "to_cube() (gammapy.maps.wcsmap method)": [[195, "gammapy.maps.WcsMap.to_cube", false]], "to_cube() (gammapy.maps.wcsndmap method)": [[196, "gammapy.maps.WcsNDMap.to_cube", false]], "to_dict() (gammapy.astro.darkmatter.darkmatterannihilationspectralmodel method)": [[19, "gammapy.astro.darkmatter.DarkMatterAnnihilationSpectralModel.to_dict", false]], "to_dict() (gammapy.astro.darkmatter.darkmatterdecayspectralmodel method)": [[20, "gammapy.astro.darkmatter.DarkMatterDecaySpectralModel.to_dict", false]], "to_dict() (gammapy.astro.darkmatter.primaryflux method)": [[26, "gammapy.astro.darkmatter.PrimaryFlux.to_dict", false]], "to_dict() (gammapy.datasets.dataset method)": [[94, "gammapy.datasets.Dataset.to_dict", false]], "to_dict() (gammapy.datasets.fluxpointsdataset method)": [[96, "gammapy.datasets.FluxPointsDataset.to_dict", false]], "to_dict() (gammapy.datasets.mapdataset method)": [[97, "gammapy.datasets.MapDataset.to_dict", false]], "to_dict() (gammapy.datasets.mapdatasetonoff method)": [[100, "gammapy.datasets.MapDatasetOnOff.to_dict", false]], "to_dict() (gammapy.datasets.spectrumdataset method)": [[104, "gammapy.datasets.SpectrumDataset.to_dict", false]], "to_dict() (gammapy.datasets.spectrumdatasetonoff method)": [[105, "gammapy.datasets.SpectrumDatasetOnOff.to_dict", false]], "to_dict() (gammapy.modeling.models.brokenpowerlawspectralmodel method)": [[205, "gammapy.modeling.models.BrokenPowerLawSpectralModel.to_dict", false]], "to_dict() (gammapy.modeling.models.compoundspectralmodel method)": [[206, "gammapy.modeling.models.CompoundSpectralModel.to_dict", false]], "to_dict() (gammapy.modeling.models.constantfluxspatialmodel method)": [[207, "gammapy.modeling.models.ConstantFluxSpatialModel.to_dict", false]], "to_dict() (gammapy.modeling.models.constantspatialmodel method)": [[208, "gammapy.modeling.models.ConstantSpatialModel.to_dict", false]], "to_dict() (gammapy.modeling.models.constantspectralmodel method)": [[209, "gammapy.modeling.models.ConstantSpectralModel.to_dict", false]], "to_dict() (gammapy.modeling.models.constanttemporalmodel method)": [[210, "gammapy.modeling.models.ConstantTemporalModel.to_dict", false]], "to_dict() (gammapy.modeling.models.datasetmodels method)": [[211, "gammapy.modeling.models.DatasetModels.to_dict", false]], "to_dict() (gammapy.modeling.models.diskspatialmodel method)": [[212, "gammapy.modeling.models.DiskSpatialModel.to_dict", false]], "to_dict() (gammapy.modeling.models.eblabsorptionnormspectralmodel method)": [[213, "gammapy.modeling.models.EBLAbsorptionNormSpectralModel.to_dict", false]], "to_dict() (gammapy.modeling.models.expcutoffpowerlaw3fglspectralmodel method)": [[215, "gammapy.modeling.models.ExpCutoffPowerLaw3FGLSpectralModel.to_dict", false]], "to_dict() (gammapy.modeling.models.expcutoffpowerlawnormspectralmodel method)": [[216, "gammapy.modeling.models.ExpCutoffPowerLawNormSpectralModel.to_dict", false]], "to_dict() (gammapy.modeling.models.expcutoffpowerlawspectralmodel method)": [[217, "gammapy.modeling.models.ExpCutoffPowerLawSpectralModel.to_dict", false]], "to_dict() (gammapy.modeling.models.expdecaytemporalmodel method)": [[218, "gammapy.modeling.models.ExpDecayTemporalModel.to_dict", false]], "to_dict() (gammapy.modeling.models.fovbackgroundmodel method)": [[219, "gammapy.modeling.models.FoVBackgroundModel.to_dict", false]], "to_dict() (gammapy.modeling.models.gaussianspatialmodel method)": [[220, "gammapy.modeling.models.GaussianSpatialModel.to_dict", false]], "to_dict() (gammapy.modeling.models.gaussianspectralmodel method)": [[221, "gammapy.modeling.models.GaussianSpectralModel.to_dict", false]], "to_dict() (gammapy.modeling.models.gaussiantemporalmodel method)": [[222, "gammapy.modeling.models.GaussianTemporalModel.to_dict", false]], "to_dict() (gammapy.modeling.models.generalizedgaussianspatialmodel method)": [[223, "gammapy.modeling.models.GeneralizedGaussianSpatialModel.to_dict", false]], "to_dict() (gammapy.modeling.models.generalizedgaussiantemporalmodel method)": [[224, "gammapy.modeling.models.GeneralizedGaussianTemporalModel.to_dict", false]], "to_dict() (gammapy.modeling.models.lightcurvetemplatetemporalmodel method)": [[225, "gammapy.modeling.models.LightCurveTemplateTemporalModel.to_dict", false]], "to_dict() (gammapy.modeling.models.lineartemporalmodel method)": [[226, "gammapy.modeling.models.LinearTemporalModel.to_dict", false]], "to_dict() (gammapy.modeling.models.logparabolanormspectralmodel method)": [[227, "gammapy.modeling.models.LogParabolaNormSpectralModel.to_dict", false]], "to_dict() (gammapy.modeling.models.logparabolaspectralmodel method)": [[228, "gammapy.modeling.models.LogParabolaSpectralModel.to_dict", false]], "to_dict() (gammapy.modeling.models.meyercrabspectralmodel method)": [[230, "gammapy.modeling.models.MeyerCrabSpectralModel.to_dict", false]], "to_dict() (gammapy.modeling.models.modelbase method)": [[232, "gammapy.modeling.models.ModelBase.to_dict", false]], "to_dict() (gammapy.modeling.models.models method)": [[233, "gammapy.modeling.models.Models.to_dict", false]], "to_dict() (gammapy.modeling.models.naimaspectralmodel method)": [[234, "gammapy.modeling.models.NaimaSpectralModel.to_dict", false]], "to_dict() (gammapy.modeling.models.piecewisenormspatialmodel method)": [[235, "gammapy.modeling.models.PiecewiseNormSpatialModel.to_dict", false]], "to_dict() (gammapy.modeling.models.piecewisenormspectralmodel method)": [[236, "gammapy.modeling.models.PiecewiseNormSpectralModel.to_dict", false]], "to_dict() (gammapy.modeling.models.pointspatialmodel method)": [[237, "gammapy.modeling.models.PointSpatialModel.to_dict", false]], "to_dict() (gammapy.modeling.models.powerlaw2spectralmodel method)": [[238, "gammapy.modeling.models.PowerLaw2SpectralModel.to_dict", false]], "to_dict() (gammapy.modeling.models.powerlawnormspectralmodel method)": [[239, "gammapy.modeling.models.PowerLawNormSpectralModel.to_dict", false]], "to_dict() (gammapy.modeling.models.powerlawspectralmodel method)": [[240, "gammapy.modeling.models.PowerLawSpectralModel.to_dict", false]], "to_dict() (gammapy.modeling.models.powerlawtemporalmodel method)": [[241, "gammapy.modeling.models.PowerLawTemporalModel.to_dict", false]], "to_dict() (gammapy.modeling.models.scalespectralmodel method)": [[244, "gammapy.modeling.models.ScaleSpectralModel.to_dict", false]], "to_dict() (gammapy.modeling.models.shell2spatialmodel method)": [[245, "gammapy.modeling.models.Shell2SpatialModel.to_dict", false]], "to_dict() (gammapy.modeling.models.shellspatialmodel method)": [[246, "gammapy.modeling.models.ShellSpatialModel.to_dict", false]], "to_dict() (gammapy.modeling.models.sinetemporalmodel method)": [[247, "gammapy.modeling.models.SineTemporalModel.to_dict", false]], "to_dict() (gammapy.modeling.models.skymodel method)": [[248, "gammapy.modeling.models.SkyModel.to_dict", false]], "to_dict() (gammapy.modeling.models.smoothbrokenpowerlawspectralmodel method)": [[249, "gammapy.modeling.models.SmoothBrokenPowerLawSpectralModel.to_dict", false]], "to_dict() (gammapy.modeling.models.spatialmodel method)": [[250, "gammapy.modeling.models.SpatialModel.to_dict", false]], "to_dict() (gammapy.modeling.models.spectralmodel method)": [[251, "gammapy.modeling.models.SpectralModel.to_dict", false]], "to_dict() (gammapy.modeling.models.superexpcutoffpowerlaw3fglspectralmodel method)": [[252, "gammapy.modeling.models.SuperExpCutoffPowerLaw3FGLSpectralModel.to_dict", false]], "to_dict() (gammapy.modeling.models.superexpcutoffpowerlaw4fgldr3spectralmodel method)": [[253, "gammapy.modeling.models.SuperExpCutoffPowerLaw4FGLDR3SpectralModel.to_dict", false]], "to_dict() (gammapy.modeling.models.superexpcutoffpowerlaw4fglspectralmodel method)": [[254, "gammapy.modeling.models.SuperExpCutoffPowerLaw4FGLSpectralModel.to_dict", false]], "to_dict() (gammapy.modeling.models.templatendspatialmodel method)": [[256, "gammapy.modeling.models.TemplateNDSpatialModel.to_dict", false]], "to_dict() (gammapy.modeling.models.templatendspectralmodel method)": [[257, "gammapy.modeling.models.TemplateNDSpectralModel.to_dict", false]], "to_dict() (gammapy.modeling.models.templatenpredmodel method)": [[258, "gammapy.modeling.models.TemplateNPredModel.to_dict", false]], "to_dict() (gammapy.modeling.models.templatephasecurvetemporalmodel method)": [[259, "gammapy.modeling.models.TemplatePhaseCurveTemporalModel.to_dict", false]], "to_dict() (gammapy.modeling.models.templatespatialmodel method)": [[260, "gammapy.modeling.models.TemplateSpatialModel.to_dict", false]], "to_dict() (gammapy.modeling.models.templatespectralmodel method)": [[261, "gammapy.modeling.models.TemplateSpectralModel.to_dict", false]], "to_dict() (gammapy.modeling.models.temporalmodel method)": [[262, "gammapy.modeling.models.TemporalModel.to_dict", false]], "to_dict() (gammapy.modeling.parameter method)": [[201, "gammapy.modeling.Parameter.to_dict", false]], "to_dict() (gammapy.modeling.parameters method)": [[202, "gammapy.modeling.Parameters.to_dict", false]], "to_dict() (gammapy.modeling.priorparameter method)": [[203, "gammapy.modeling.PriorParameter.to_dict", false]], "to_dict() (gammapy.modeling.priorparameters method)": [[204, "gammapy.modeling.PriorParameters.to_dict", false]], "to_edisp_kernel() (gammapy.irf.energydispersion2d method)": [[145, "gammapy.irf.EnergyDispersion2D.to_edisp_kernel", false]], "to_edisp_kernel_map() (gammapy.irf.edispmap method)": [[142, "gammapy.irf.EDispMap.to_edisp_kernel_map", false]], "to_even_npix() (gammapy.maps.wcsgeom method)": [[194, "gammapy.maps.WcsGeom.to_even_npix", false]], "to_fits_header() (gammapy.data.fixedpointinginfo method)": [[81, "gammapy.data.FixedPointingInfo.to_fits_header", false]], "to_frame() (gammapy.maps.mapcoord method)": [[189, "gammapy.maps.MapCoord.to_frame", false]], "to_gti() (gammapy.maps.timemapaxis method)": [[193, "gammapy.maps.TimeMapAxis.to_gti", false]], "to_hdu() (gammapy.maps.hpxmap method)": [[183, "gammapy.maps.HpxMap.to_hdu", false]], "to_hdu() (gammapy.maps.hpxndmap method)": [[184, "gammapy.maps.HpxNDMap.to_hdu", false]], "to_hdu() (gammapy.maps.wcsmap method)": [[195, "gammapy.maps.WcsMap.to_hdu", false]], "to_hdu() (gammapy.maps.wcsndmap method)": [[196, "gammapy.maps.WcsNDMap.to_hdu", false]], "to_hdulist() (gammapy.datasets.mapdataset method)": [[97, "gammapy.datasets.MapDataset.to_hdulist", false]], "to_hdulist() (gammapy.datasets.mapdatasetonoff method)": [[100, "gammapy.datasets.MapDatasetOnOff.to_hdulist", false]], "to_hdulist() (gammapy.datasets.spectrumdataset method)": [[104, "gammapy.datasets.SpectrumDataset.to_hdulist", false]], "to_hdulist() (gammapy.datasets.spectrumdatasetonoff method)": [[105, "gammapy.datasets.SpectrumDatasetOnOff.to_hdulist", false]], "to_hdulist() (gammapy.estimators.fluxmaps method)": [[117, "gammapy.estimators.FluxMaps.to_hdulist", false]], "to_hdulist() (gammapy.estimators.fluxpoints method)": [[119, "gammapy.estimators.FluxPoints.to_hdulist", false]], "to_hdulist() (gammapy.irf.background2d method)": [[137, "gammapy.irf.Background2D.to_hdulist", false]], "to_hdulist() (gammapy.irf.background3d method)": [[138, "gammapy.irf.Background3D.to_hdulist", false]], "to_hdulist() (gammapy.irf.backgroundirf method)": [[139, "gammapy.irf.BackgroundIRF.to_hdulist", false]], "to_hdulist() (gammapy.irf.edispkernel method)": [[140, "gammapy.irf.EDispKernel.to_hdulist", false]], "to_hdulist() (gammapy.irf.edispkernelmap method)": [[141, "gammapy.irf.EDispKernelMap.to_hdulist", false]], "to_hdulist() (gammapy.irf.edispmap method)": [[142, "gammapy.irf.EDispMap.to_hdulist", false]], "to_hdulist() (gammapy.irf.effectiveareatable2d method)": [[143, "gammapy.irf.EffectiveAreaTable2D.to_hdulist", false]], "to_hdulist() (gammapy.irf.energydependentmultigausspsf method)": [[144, "gammapy.irf.EnergyDependentMultiGaussPSF.to_hdulist", false]], "to_hdulist() (gammapy.irf.energydispersion2d method)": [[145, "gammapy.irf.EnergyDispersion2D.to_hdulist", false]], "to_hdulist() (gammapy.irf.irf method)": [[147, "gammapy.irf.IRF.to_hdulist", false]], "to_hdulist() (gammapy.irf.irfmap method)": [[148, "gammapy.irf.IRFMap.to_hdulist", false]], "to_hdulist() (gammapy.irf.parametricpsf method)": [[154, "gammapy.irf.ParametricPSF.to_hdulist", false]], "to_hdulist() (gammapy.irf.psf3d method)": [[150, "gammapy.irf.PSF3D.to_hdulist", false]], "to_hdulist() (gammapy.irf.psfking method)": [[152, "gammapy.irf.PSFKing.to_hdulist", false]], "to_hdulist() (gammapy.irf.psfmap method)": [[153, "gammapy.irf.PSFMap.to_hdulist", false]], "to_hdulist() (gammapy.irf.radmax2d method)": [[155, "gammapy.irf.RadMax2D.to_hdulist", false]], "to_hdulist() (gammapy.irf.recopsfmap method)": [[156, "gammapy.irf.RecoPSFMap.to_hdulist", false]], "to_hdulist() (gammapy.maps.hpxmap method)": [[183, "gammapy.maps.HpxMap.to_hdulist", false]], "to_hdulist() (gammapy.maps.hpxndmap method)": [[184, "gammapy.maps.HpxNDMap.to_hdulist", false]], "to_hdulist() (gammapy.maps.maps method)": [[190, "gammapy.maps.Maps.to_hdulist", false]], "to_hdulist() (gammapy.maps.regiongeom method)": [[191, "gammapy.maps.RegionGeom.to_hdulist", false]], "to_hdulist() (gammapy.maps.regionndmap method)": [[192, "gammapy.maps.RegionNDMap.to_hdulist", false]], "to_hdulist() (gammapy.maps.wcsmap method)": [[195, "gammapy.maps.WcsMap.to_hdulist", false]], "to_hdulist() (gammapy.maps.wcsndmap method)": [[196, "gammapy.maps.WcsNDMap.to_hdulist", false]], "to_header() (gammapy.data.eventlistmetadata method)": [[80, "gammapy.data.EventListMetaData.to_header", false]], "to_header() (gammapy.datasets.mapdatasetmetadata method)": [[99, "gammapy.datasets.MapDatasetMetaData.to_header", false]], "to_header() (gammapy.estimators.fluxmetadata method)": [[118, "gammapy.estimators.FluxMetaData.to_header", false]], "to_header() (gammapy.maps.hpxgeom method)": [[182, "gammapy.maps.HpxGeom.to_header", false]], "to_header() (gammapy.maps.labelmapaxis method)": [[185, "gammapy.maps.LabelMapAxis.to_header", false]], "to_header() (gammapy.maps.mapaxes method)": [[187, "gammapy.maps.MapAxes.to_header", false]], "to_header() (gammapy.maps.mapaxis method)": [[188, "gammapy.maps.MapAxis.to_header", false]], "to_header() (gammapy.maps.timemapaxis method)": [[193, "gammapy.maps.TimeMapAxis.to_header", false]], "to_header() (gammapy.maps.wcsgeom method)": [[194, "gammapy.maps.WcsGeom.to_header", false]], "to_image() (gammapy.datasets.mapdataset method)": [[97, "gammapy.datasets.MapDataset.to_image", false]], "to_image() (gammapy.datasets.mapdatasetonoff method)": [[100, "gammapy.datasets.MapDatasetOnOff.to_image", false]], "to_image() (gammapy.datasets.spectrumdataset method)": [[104, "gammapy.datasets.SpectrumDataset.to_image", false]], "to_image() (gammapy.datasets.spectrumdatasetonoff method)": [[105, "gammapy.datasets.SpectrumDatasetOnOff.to_image", false]], "to_image() (gammapy.irf.edispkernel method)": [[140, "gammapy.irf.EDispKernel.to_image", false]], "to_image() (gammapy.irf.edispkernelmap method)": [[141, "gammapy.irf.EDispKernelMap.to_image", false]], "to_image() (gammapy.irf.psfkernel method)": [[151, "gammapy.irf.PSFKernel.to_image", false]], "to_image() (gammapy.irf.psfmap method)": [[153, "gammapy.irf.PSFMap.to_image", false]], "to_image() (gammapy.irf.recopsfmap method)": [[156, "gammapy.irf.RecoPSFMap.to_image", false]], "to_image() (gammapy.maps.geom method)": [[181, "gammapy.maps.Geom.to_image", false]], "to_image() (gammapy.maps.hpxgeom method)": [[182, "gammapy.maps.HpxGeom.to_image", false]], "to_image() (gammapy.maps.regiongeom method)": [[191, "gammapy.maps.RegionGeom.to_image", false]], "to_image() (gammapy.maps.wcsgeom method)": [[194, "gammapy.maps.WcsGeom.to_image", false]], "to_map_dataset() (gammapy.datasets.mapdatasetonoff method)": [[100, "gammapy.datasets.MapDatasetOnOff.to_map_dataset", false]], "to_map_dataset() (gammapy.datasets.spectrumdatasetonoff method)": [[105, "gammapy.datasets.SpectrumDatasetOnOff.to_map_dataset", false]], "to_maps() (gammapy.estimators.fluxmaps method)": [[117, "gammapy.estimators.FluxMaps.to_maps", false]], "to_maps() (gammapy.estimators.fluxpoints method)": [[119, "gammapy.estimators.FluxPoints.to_maps", false]], "to_masked() (gammapy.datasets.mapdataset method)": [[97, "gammapy.datasets.MapDataset.to_masked", false]], "to_masked() (gammapy.datasets.mapdatasetonoff method)": [[100, "gammapy.datasets.MapDatasetOnOff.to_masked", false]], "to_masked() (gammapy.datasets.spectrumdataset method)": [[104, "gammapy.datasets.SpectrumDataset.to_masked", false]], "to_masked() (gammapy.datasets.spectrumdatasetonoff method)": [[105, "gammapy.datasets.SpectrumDatasetOnOff.to_masked", false]], "to_models() (gammapy.catalog.sourcecatalog method)": [[56, "gammapy.catalog.SourceCatalog.to_models", false]], "to_models() (gammapy.catalog.sourcecatalog1lhaaso method)": [[57, "gammapy.catalog.SourceCatalog1LHAASO.to_models", false]], "to_models() (gammapy.catalog.sourcecatalog2fhl method)": [[58, "gammapy.catalog.SourceCatalog2FHL.to_models", false]], "to_models() (gammapy.catalog.sourcecatalog2hwc method)": [[59, "gammapy.catalog.SourceCatalog2HWC.to_models", false]], "to_models() (gammapy.catalog.sourcecatalog3fgl method)": [[60, "gammapy.catalog.SourceCatalog3FGL.to_models", false]], "to_models() (gammapy.catalog.sourcecatalog3fhl method)": [[61, "gammapy.catalog.SourceCatalog3FHL.to_models", false]], "to_models() (gammapy.catalog.sourcecatalog3hwc method)": [[62, "gammapy.catalog.SourceCatalog3HWC.to_models", false]], "to_models() (gammapy.catalog.sourcecatalog4fgl method)": [[63, "gammapy.catalog.SourceCatalog4FGL.to_models", false]], "to_models() (gammapy.catalog.sourcecataloggammacat method)": [[64, "gammapy.catalog.SourceCatalogGammaCat.to_models", false]], "to_models() (gammapy.catalog.sourcecataloghgps method)": [[65, "gammapy.catalog.SourceCatalogHGPS.to_models", false]], "to_node_type() (gammapy.maps.mapaxis method)": [[188, "gammapy.maps.MapAxis.to_node_type", false]], "to_nside() (gammapy.maps.hpxgeom method)": [[182, "gammapy.maps.HpxGeom.to_nside", false]], "to_nside() (gammapy.maps.hpxndmap method)": [[184, "gammapy.maps.HpxNDMap.to_nside", false]], "to_odd_npix() (gammapy.maps.wcsgeom method)": [[194, "gammapy.maps.WcsGeom.to_odd_npix", false]], "to_pandas() (gammapy.data.hduindextable method)": [[83, "gammapy.data.HDUIndexTable.to_pandas", false]], "to_pandas() (gammapy.data.observationtable method)": [[86, "gammapy.data.ObservationTable.to_pandas", false]], "to_parameters_table() (gammapy.modeling.models.datasetmodels method)": [[211, "gammapy.modeling.models.DatasetModels.to_parameters_table", false]], "to_parameters_table() (gammapy.modeling.models.models method)": [[233, "gammapy.modeling.models.Models.to_parameters_table", false]], "to_psf3d() (gammapy.irf.energydependentmultigausspsf method)": [[144, "gammapy.irf.EnergyDependentMultiGaussPSF.to_psf3d", false]], "to_psf3d() (gammapy.irf.parametricpsf method)": [[154, "gammapy.irf.ParametricPSF.to_psf3d", false]], "to_psf3d() (gammapy.irf.psfking method)": [[152, "gammapy.irf.PSFKing.to_psf3d", false]], "to_region() (gammapy.modeling.models.constantfluxspatialmodel method)": [[207, "gammapy.modeling.models.ConstantFluxSpatialModel.to_region", false]], "to_region() (gammapy.modeling.models.constantspatialmodel method)": [[208, "gammapy.modeling.models.ConstantSpatialModel.to_region", false]], "to_region() (gammapy.modeling.models.diskspatialmodel method)": [[212, "gammapy.modeling.models.DiskSpatialModel.to_region", false]], "to_region() (gammapy.modeling.models.gaussianspatialmodel method)": [[220, "gammapy.modeling.models.GaussianSpatialModel.to_region", false]], "to_region() (gammapy.modeling.models.generalizedgaussianspatialmodel method)": [[223, "gammapy.modeling.models.GeneralizedGaussianSpatialModel.to_region", false]], "to_region() (gammapy.modeling.models.pointspatialmodel method)": [[237, "gammapy.modeling.models.PointSpatialModel.to_region", false]], "to_region() (gammapy.modeling.models.shell2spatialmodel method)": [[245, "gammapy.modeling.models.Shell2SpatialModel.to_region", false]], "to_region() (gammapy.modeling.models.shellspatialmodel method)": [[246, "gammapy.modeling.models.ShellSpatialModel.to_region", false]], "to_region() (gammapy.modeling.models.templatespatialmodel method)": [[260, "gammapy.modeling.models.TemplateSpatialModel.to_region", false]], "to_region_map_dataset() (gammapy.datasets.mapdataset method)": [[97, "gammapy.datasets.MapDataset.to_region_map_dataset", false]], "to_region_map_dataset() (gammapy.datasets.mapdatasetonoff method)": [[100, "gammapy.datasets.MapDatasetOnOff.to_region_map_dataset", false]], "to_region_map_dataset() (gammapy.datasets.spectrumdataset method)": [[104, "gammapy.datasets.SpectrumDataset.to_region_map_dataset", false]], "to_region_map_dataset() (gammapy.datasets.spectrumdatasetonoff method)": [[105, "gammapy.datasets.SpectrumDatasetOnOff.to_region_map_dataset", false]], "to_region_nd_map() (gammapy.irf.edispkernelmap method)": [[141, "gammapy.irf.EDispKernelMap.to_region_nd_map", false]], "to_region_nd_map() (gammapy.irf.edispmap method)": [[142, "gammapy.irf.EDispMap.to_region_nd_map", false]], "to_region_nd_map() (gammapy.irf.irfmap method)": [[148, "gammapy.irf.IRFMap.to_region_nd_map", false]], "to_region_nd_map() (gammapy.irf.psfmap method)": [[153, "gammapy.irf.PSFMap.to_region_nd_map", false]], "to_region_nd_map() (gammapy.irf.recopsfmap method)": [[156, "gammapy.irf.RecoPSFMap.to_region_nd_map", false]], "to_region_nd_map() (gammapy.maps.hpxndmap method)": [[184, "gammapy.maps.HpxNDMap.to_region_nd_map", false]], "to_region_nd_map() (gammapy.maps.regionndmap method)": [[192, "gammapy.maps.RegionNDMap.to_region_nd_map", false]], "to_region_nd_map() (gammapy.maps.wcsndmap method)": [[196, "gammapy.maps.WcsNDMap.to_region_nd_map", false]], "to_region_nd_map_histogram() (gammapy.maps.wcsndmap method)": [[196, "gammapy.maps.WcsNDMap.to_region_nd_map_histogram", false]], "to_regions() (gammapy.modeling.models.datasetmodels method)": [[211, "gammapy.modeling.models.DatasetModels.to_regions", false]], "to_regions() (gammapy.modeling.models.models method)": [[233, "gammapy.modeling.models.Models.to_regions", false]], "to_spectrum_dataset() (gammapy.datasets.mapdataset method)": [[97, "gammapy.datasets.MapDataset.to_spectrum_dataset", false]], "to_spectrum_dataset() (gammapy.datasets.mapdatasetonoff method)": [[100, "gammapy.datasets.MapDatasetOnOff.to_spectrum_dataset", false]], "to_spectrum_dataset() (gammapy.datasets.spectrumdataset method)": [[104, "gammapy.datasets.SpectrumDataset.to_spectrum_dataset", false]], "to_spectrum_dataset() (gammapy.datasets.spectrumdatasetonoff method)": [[105, "gammapy.datasets.SpectrumDatasetOnOff.to_spectrum_dataset", false]], "to_spectrum_datasets() (gammapy.datasets.datasets method)": [[95, "gammapy.datasets.Datasets.to_spectrum_datasets", false]], "to_swapped() (gammapy.maps.hpxgeom method)": [[182, "gammapy.maps.HpxGeom.to_swapped", false]], "to_swapped() (gammapy.maps.hpxmap method)": [[183, "gammapy.maps.HpxMap.to_swapped", false]], "to_swapped() (gammapy.maps.hpxndmap method)": [[184, "gammapy.maps.HpxNDMap.to_swapped", false]], "to_table() (gammapy.estimators.fluxpoints method)": [[119, "gammapy.estimators.FluxPoints.to_table", false]], "to_table() (gammapy.irf.background2d method)": [[137, "gammapy.irf.Background2D.to_table", false]], "to_table() (gammapy.irf.background3d method)": [[138, "gammapy.irf.Background3D.to_table", false]], "to_table() (gammapy.irf.backgroundirf method)": [[139, "gammapy.irf.BackgroundIRF.to_table", false]], "to_table() (gammapy.irf.edispkernel method)": [[140, "gammapy.irf.EDispKernel.to_table", false]], "to_table() (gammapy.irf.effectiveareatable2d method)": [[143, "gammapy.irf.EffectiveAreaTable2D.to_table", false]], "to_table() (gammapy.irf.energydependentmultigausspsf method)": [[144, "gammapy.irf.EnergyDependentMultiGaussPSF.to_table", false]], "to_table() (gammapy.irf.energydispersion2d method)": [[145, "gammapy.irf.EnergyDispersion2D.to_table", false]], "to_table() (gammapy.irf.irf method)": [[147, "gammapy.irf.IRF.to_table", false]], "to_table() (gammapy.irf.parametricpsf method)": [[154, "gammapy.irf.ParametricPSF.to_table", false]], "to_table() (gammapy.irf.psf3d method)": [[150, "gammapy.irf.PSF3D.to_table", false]], "to_table() (gammapy.irf.psfking method)": [[152, "gammapy.irf.PSFKing.to_table", false]], "to_table() (gammapy.irf.radmax2d method)": [[155, "gammapy.irf.RadMax2D.to_table", false]], "to_table() (gammapy.maps.mapaxes method)": [[187, "gammapy.maps.MapAxes.to_table", false]], "to_table() (gammapy.maps.mapaxis method)": [[188, "gammapy.maps.MapAxis.to_table", false]], "to_table() (gammapy.maps.regionndmap method)": [[192, "gammapy.maps.RegionNDMap.to_table", false]], "to_table() (gammapy.modeling.models.lightcurvetemplatetemporalmodel method)": [[225, "gammapy.modeling.models.LightCurveTemplateTemporalModel.to_table", false]], "to_table() (gammapy.modeling.parameters method)": [[202, "gammapy.modeling.Parameters.to_table", false]], "to_table() (gammapy.modeling.priorparameters method)": [[204, "gammapy.modeling.PriorParameters.to_table", false]], "to_table_hdu() (gammapy.data.eventlist method)": [[79, "gammapy.data.EventList.to_table_hdu", false]], "to_table_hdu() (gammapy.data.gti method)": [[82, "gammapy.data.GTI.to_table_hdu", false]], "to_table_hdu() (gammapy.irf.background2d method)": [[137, "gammapy.irf.Background2D.to_table_hdu", false]], "to_table_hdu() (gammapy.irf.background3d method)": [[138, "gammapy.irf.Background3D.to_table_hdu", false]], "to_table_hdu() (gammapy.irf.backgroundirf method)": [[139, "gammapy.irf.BackgroundIRF.to_table_hdu", false]], "to_table_hdu() (gammapy.irf.edispkernel method)": [[140, "gammapy.irf.EDispKernel.to_table_hdu", false]], "to_table_hdu() (gammapy.irf.effectiveareatable2d method)": [[143, "gammapy.irf.EffectiveAreaTable2D.to_table_hdu", false]], "to_table_hdu() (gammapy.irf.energydependentmultigausspsf method)": [[144, "gammapy.irf.EnergyDependentMultiGaussPSF.to_table_hdu", false]], "to_table_hdu() (gammapy.irf.energydispersion2d method)": [[145, "gammapy.irf.EnergyDispersion2D.to_table_hdu", false]], "to_table_hdu() (gammapy.irf.irf method)": [[147, "gammapy.irf.IRF.to_table_hdu", false]], "to_table_hdu() (gammapy.irf.parametricpsf method)": [[154, "gammapy.irf.ParametricPSF.to_table_hdu", false]], "to_table_hdu() (gammapy.irf.psf3d method)": [[150, "gammapy.irf.PSF3D.to_table_hdu", false]], "to_table_hdu() (gammapy.irf.psfking method)": [[152, "gammapy.irf.PSFKing.to_table_hdu", false]], "to_table_hdu() (gammapy.irf.radmax2d method)": [[155, "gammapy.irf.RadMax2D.to_table_hdu", false]], "to_table_hdu() (gammapy.maps.mapaxes method)": [[187, "gammapy.maps.MapAxes.to_table_hdu", false]], "to_table_hdu() (gammapy.maps.mapaxis method)": [[188, "gammapy.maps.MapAxis.to_table_hdu", false]], "to_template_sky_model() (gammapy.modeling.models.datasetmodels method)": [[211, "gammapy.modeling.models.DatasetModels.to_template_sky_model", false]], "to_template_sky_model() (gammapy.modeling.models.models method)": [[233, "gammapy.modeling.models.Models.to_template_sky_model", false]], "to_template_spectral_model() (gammapy.modeling.models.datasetmodels method)": [[211, "gammapy.modeling.models.DatasetModels.to_template_spectral_model", false]], "to_template_spectral_model() (gammapy.modeling.models.models method)": [[233, "gammapy.modeling.models.Models.to_template_spectral_model", false]], "to_unit() (gammapy.irf.background2d method)": [[137, "gammapy.irf.Background2D.to_unit", false]], "to_unit() (gammapy.irf.background3d method)": [[138, "gammapy.irf.Background3D.to_unit", false]], "to_unit() (gammapy.irf.backgroundirf method)": [[139, "gammapy.irf.BackgroundIRF.to_unit", false]], "to_unit() (gammapy.irf.edispkernel method)": [[140, "gammapy.irf.EDispKernel.to_unit", false]], "to_unit() (gammapy.irf.effectiveareatable2d method)": [[143, "gammapy.irf.EffectiveAreaTable2D.to_unit", false]], "to_unit() (gammapy.irf.energydependentmultigausspsf method)": [[144, "gammapy.irf.EnergyDependentMultiGaussPSF.to_unit", false]], "to_unit() (gammapy.irf.energydispersion2d method)": [[145, "gammapy.irf.EnergyDispersion2D.to_unit", false]], "to_unit() (gammapy.irf.irf method)": [[147, "gammapy.irf.IRF.to_unit", false]], "to_unit() (gammapy.irf.parametricpsf method)": [[154, "gammapy.irf.ParametricPSF.to_unit", false]], "to_unit() (gammapy.irf.psf3d method)": [[150, "gammapy.irf.PSF3D.to_unit", false]], "to_unit() (gammapy.irf.psfking method)": [[152, "gammapy.irf.PSFKing.to_unit", false]], "to_unit() (gammapy.irf.radmax2d method)": [[155, "gammapy.irf.RadMax2D.to_unit", false]], "to_unit() (gammapy.maps.hpxmap method)": [[183, "gammapy.maps.HpxMap.to_unit", false]], "to_unit() (gammapy.maps.hpxndmap method)": [[184, "gammapy.maps.HpxNDMap.to_unit", false]], "to_unit() (gammapy.maps.map method)": [[186, "gammapy.maps.Map.to_unit", false]], "to_unit() (gammapy.maps.regionndmap method)": [[192, "gammapy.maps.RegionNDMap.to_unit", false]], "to_unit() (gammapy.maps.wcsmap method)": [[195, "gammapy.maps.WcsMap.to_unit", false]], "to_unit() (gammapy.maps.wcsndmap method)": [[196, "gammapy.maps.WcsNDMap.to_unit", false]], "to_wcs() (gammapy.maps.hpxmap method)": [[183, "gammapy.maps.HpxMap.to_wcs", false]], "to_wcs() (gammapy.maps.hpxndmap method)": [[184, "gammapy.maps.HpxNDMap.to_wcs", false]], "to_wcs_geom() (gammapy.maps.hpxgeom method)": [[182, "gammapy.maps.HpxGeom.to_wcs_geom", false]], "to_wcs_geom() (gammapy.maps.regiongeom method)": [[191, "gammapy.maps.RegionGeom.to_wcs_geom", false]], "to_wcs_tiles() (gammapy.maps.hpxgeom method)": [[182, "gammapy.maps.HpxGeom.to_wcs_tiles", false]], "to_wcs_tiles() (gammapy.maps.hpxndmap method)": [[184, "gammapy.maps.HpxNDMap.to_wcs_tiles", false]], "to_yaml() (gammapy.analysis.analysisconfig method)": [[16, "gammapy.analysis.AnalysisConfig.to_yaml", false]], "to_yaml() (gammapy.data.eventlistmetadata method)": [[80, "gammapy.data.EventListMetaData.to_yaml", false]], "to_yaml() (gammapy.datasets.mapdatasetmetadata method)": [[99, "gammapy.datasets.MapDatasetMetaData.to_yaml", false]], "to_yaml() (gammapy.estimators.fluxmetadata method)": [[118, "gammapy.estimators.FluxMetaData.to_yaml", false]], "to_yaml() (gammapy.modeling.models.datasetmodels method)": [[211, "gammapy.modeling.models.DatasetModels.to_yaml", false]], "to_yaml() (gammapy.modeling.models.models method)": [[233, "gammapy.modeling.models.Models.to_yaml", false]], "trapz_loglog() (in module gammapy.utils.integrate)": [[301, "gammapy.utils.integrate.trapz_loglog", false]], "true energy": [[554, "term-True-Energy", true]], "ts": [[554, "term-TS", true]], "ts (gammapy.estimators.fluxmaps attribute)": [[117, "gammapy.estimators.FluxMaps.ts", false]], "ts (gammapy.estimators.fluxpoints attribute)": [[119, "gammapy.estimators.FluxPoints.ts", false]], "ts (gammapy.stats.cashcountsstatistic attribute)": [[272, "gammapy.stats.CashCountsStatistic.ts", false]], "ts (gammapy.stats.wstatcountsstatistic attribute)": [[274, "gammapy.stats.WStatCountsStatistic.ts", false]], "ts_scan (gammapy.estimators.fluxmaps attribute)": [[117, "gammapy.estimators.FluxMaps.ts_scan", false]], "ts_scan (gammapy.estimators.fluxpoints attribute)": [[119, "gammapy.estimators.FluxPoints.ts_scan", false]], "tsmapestimator (class in gammapy.estimators)": [[127, "gammapy.estimators.TSMapEstimator", false]], "tstart (gammapy.data.observation attribute)": [[84, "gammapy.data.Observation.tstart", false]], "tstop (gammapy.data.observation attribute)": [[84, "gammapy.data.Observation.tstop", false]], "type (gammapy.astro.darkmatter.darkmatterannihilationspectralmodel attribute)": [[19, "gammapy.astro.darkmatter.DarkMatterAnnihilationSpectralModel.type", false]], "type (gammapy.astro.darkmatter.darkmatterdecayspectralmodel attribute)": [[20, "gammapy.astro.darkmatter.DarkMatterDecaySpectralModel.type", false]], "type (gammapy.astro.darkmatter.primaryflux attribute)": [[26, "gammapy.astro.darkmatter.PrimaryFlux.type", false]], "type (gammapy.modeling.models.brokenpowerlawspectralmodel attribute)": [[205, "gammapy.modeling.models.BrokenPowerLawSpectralModel.type", false]], "type (gammapy.modeling.models.compoundspectralmodel attribute)": [[206, "gammapy.modeling.models.CompoundSpectralModel.type", false]], "type (gammapy.modeling.models.constantfluxspatialmodel attribute)": [[207, "gammapy.modeling.models.ConstantFluxSpatialModel.type", false]], "type (gammapy.modeling.models.constantspatialmodel attribute)": [[208, "gammapy.modeling.models.ConstantSpatialModel.type", false]], "type (gammapy.modeling.models.constantspectralmodel attribute)": [[209, "gammapy.modeling.models.ConstantSpectralModel.type", false]], "type (gammapy.modeling.models.constanttemporalmodel attribute)": [[210, "gammapy.modeling.models.ConstantTemporalModel.type", false]], "type (gammapy.modeling.models.diskspatialmodel attribute)": [[212, "gammapy.modeling.models.DiskSpatialModel.type", false]], "type (gammapy.modeling.models.eblabsorptionnormspectralmodel attribute)": [[213, "gammapy.modeling.models.EBLAbsorptionNormSpectralModel.type", false]], "type (gammapy.modeling.models.expcutoffpowerlaw3fglspectralmodel attribute)": [[215, "gammapy.modeling.models.ExpCutoffPowerLaw3FGLSpectralModel.type", false]], "type (gammapy.modeling.models.expcutoffpowerlawnormspectralmodel attribute)": [[216, "gammapy.modeling.models.ExpCutoffPowerLawNormSpectralModel.type", false]], "type (gammapy.modeling.models.expcutoffpowerlawspectralmodel attribute)": [[217, "gammapy.modeling.models.ExpCutoffPowerLawSpectralModel.type", false]], "type (gammapy.modeling.models.expdecaytemporalmodel attribute)": [[218, "gammapy.modeling.models.ExpDecayTemporalModel.type", false]], "type (gammapy.modeling.models.fovbackgroundmodel attribute)": [[219, "gammapy.modeling.models.FoVBackgroundModel.type", false]], "type (gammapy.modeling.models.gaussianspatialmodel attribute)": [[220, "gammapy.modeling.models.GaussianSpatialModel.type", false]], "type (gammapy.modeling.models.gaussianspectralmodel attribute)": [[221, "gammapy.modeling.models.GaussianSpectralModel.type", false]], "type (gammapy.modeling.models.gaussiantemporalmodel attribute)": [[222, "gammapy.modeling.models.GaussianTemporalModel.type", false]], "type (gammapy.modeling.models.generalizedgaussianspatialmodel attribute)": [[223, "gammapy.modeling.models.GeneralizedGaussianSpatialModel.type", false]], "type (gammapy.modeling.models.generalizedgaussiantemporalmodel attribute)": [[224, "gammapy.modeling.models.GeneralizedGaussianTemporalModel.type", false]], "type (gammapy.modeling.models.lightcurvetemplatetemporalmodel attribute)": [[225, "gammapy.modeling.models.LightCurveTemplateTemporalModel.type", false]], "type (gammapy.modeling.models.lineartemporalmodel attribute)": [[226, "gammapy.modeling.models.LinearTemporalModel.type", false]], "type (gammapy.modeling.models.logparabolanormspectralmodel attribute)": [[227, "gammapy.modeling.models.LogParabolaNormSpectralModel.type", false]], "type (gammapy.modeling.models.logparabolaspectralmodel attribute)": [[228, "gammapy.modeling.models.LogParabolaSpectralModel.type", false]], "type (gammapy.modeling.models.meyercrabspectralmodel attribute)": [[230, "gammapy.modeling.models.MeyerCrabSpectralModel.type", false]], "type (gammapy.modeling.models.modelbase attribute)": [[232, "gammapy.modeling.models.ModelBase.type", false]], "type (gammapy.modeling.models.naimaspectralmodel attribute)": [[234, "gammapy.modeling.models.NaimaSpectralModel.type", false]], "type (gammapy.modeling.models.piecewisenormspatialmodel attribute)": [[235, "gammapy.modeling.models.PiecewiseNormSpatialModel.type", false]], "type (gammapy.modeling.models.piecewisenormspectralmodel attribute)": [[236, "gammapy.modeling.models.PiecewiseNormSpectralModel.type", false]], "type (gammapy.modeling.models.pointspatialmodel attribute)": [[237, "gammapy.modeling.models.PointSpatialModel.type", false]], "type (gammapy.modeling.models.powerlaw2spectralmodel attribute)": [[238, "gammapy.modeling.models.PowerLaw2SpectralModel.type", false]], "type (gammapy.modeling.models.powerlawnormspectralmodel attribute)": [[239, "gammapy.modeling.models.PowerLawNormSpectralModel.type", false]], "type (gammapy.modeling.models.powerlawspectralmodel attribute)": [[240, "gammapy.modeling.models.PowerLawSpectralModel.type", false]], "type (gammapy.modeling.models.powerlawtemporalmodel attribute)": [[241, "gammapy.modeling.models.PowerLawTemporalModel.type", false]], "type (gammapy.modeling.models.scalespectralmodel attribute)": [[244, "gammapy.modeling.models.ScaleSpectralModel.type", false]], "type (gammapy.modeling.models.shell2spatialmodel attribute)": [[245, "gammapy.modeling.models.Shell2SpatialModel.type", false]], "type (gammapy.modeling.models.shellspatialmodel attribute)": [[246, "gammapy.modeling.models.ShellSpatialModel.type", false]], "type (gammapy.modeling.models.sinetemporalmodel attribute)": [[247, "gammapy.modeling.models.SineTemporalModel.type", false]], "type (gammapy.modeling.models.skymodel attribute)": [[248, "gammapy.modeling.models.SkyModel.type", false]], "type (gammapy.modeling.models.smoothbrokenpowerlawspectralmodel attribute)": [[249, "gammapy.modeling.models.SmoothBrokenPowerLawSpectralModel.type", false]], "type (gammapy.modeling.models.spatialmodel attribute)": [[250, "gammapy.modeling.models.SpatialModel.type", false]], "type (gammapy.modeling.models.spectralmodel attribute)": [[251, "gammapy.modeling.models.SpectralModel.type", false]], "type (gammapy.modeling.models.superexpcutoffpowerlaw3fglspectralmodel attribute)": [[252, "gammapy.modeling.models.SuperExpCutoffPowerLaw3FGLSpectralModel.type", false]], "type (gammapy.modeling.models.superexpcutoffpowerlaw4fgldr3spectralmodel attribute)": [[253, "gammapy.modeling.models.SuperExpCutoffPowerLaw4FGLDR3SpectralModel.type", false]], "type (gammapy.modeling.models.superexpcutoffpowerlaw4fglspectralmodel attribute)": [[254, "gammapy.modeling.models.SuperExpCutoffPowerLaw4FGLSpectralModel.type", false]], "type (gammapy.modeling.models.templatendspatialmodel attribute)": [[256, "gammapy.modeling.models.TemplateNDSpatialModel.type", false]], "type (gammapy.modeling.models.templatendspectralmodel attribute)": [[257, "gammapy.modeling.models.TemplateNDSpectralModel.type", false]], "type (gammapy.modeling.models.templatenpredmodel attribute)": [[258, "gammapy.modeling.models.TemplateNPredModel.type", false]], "type (gammapy.modeling.models.templatephasecurvetemporalmodel attribute)": [[259, "gammapy.modeling.models.TemplatePhaseCurveTemporalModel.type", false]], "type (gammapy.modeling.models.templatespatialmodel attribute)": [[260, "gammapy.modeling.models.TemplateSpatialModel.type", false]], "type (gammapy.modeling.models.templatespectralmodel attribute)": [[261, "gammapy.modeling.models.TemplateSpectralModel.type", false]], "type (gammapy.modeling.models.temporalmodel attribute)": [[262, "gammapy.modeling.models.TemporalModel.type", false]], "type (gammapy.modeling.parameter attribute)": [[201, "gammapy.modeling.Parameter.type", false]], "type (gammapy.modeling.priorparameter attribute)": [[203, "gammapy.modeling.PriorParameter.type", false]], "types (gammapy.modeling.parameters attribute)": [[202, "gammapy.modeling.Parameters.types", false]], "types (gammapy.modeling.priorparameters attribute)": [[204, "gammapy.modeling.PriorParameters.types", false]], "unfreeze() (gammapy.astro.darkmatter.darkmatterannihilationspectralmodel method)": [[19, "gammapy.astro.darkmatter.DarkMatterAnnihilationSpectralModel.unfreeze", false]], "unfreeze() (gammapy.astro.darkmatter.darkmatterdecayspectralmodel method)": [[20, "gammapy.astro.darkmatter.DarkMatterDecaySpectralModel.unfreeze", false]], "unfreeze() (gammapy.astro.darkmatter.primaryflux method)": [[26, "gammapy.astro.darkmatter.PrimaryFlux.unfreeze", false]], "unfreeze() (gammapy.modeling.models.brokenpowerlawspectralmodel method)": [[205, "gammapy.modeling.models.BrokenPowerLawSpectralModel.unfreeze", false]], "unfreeze() (gammapy.modeling.models.compoundspectralmodel method)": [[206, "gammapy.modeling.models.CompoundSpectralModel.unfreeze", false]], "unfreeze() (gammapy.modeling.models.constantfluxspatialmodel method)": [[207, "gammapy.modeling.models.ConstantFluxSpatialModel.unfreeze", false]], "unfreeze() (gammapy.modeling.models.constantspatialmodel method)": [[208, "gammapy.modeling.models.ConstantSpatialModel.unfreeze", false]], "unfreeze() (gammapy.modeling.models.constantspectralmodel method)": [[209, "gammapy.modeling.models.ConstantSpectralModel.unfreeze", false]], "unfreeze() (gammapy.modeling.models.constanttemporalmodel method)": [[210, "gammapy.modeling.models.ConstantTemporalModel.unfreeze", false]], "unfreeze() (gammapy.modeling.models.datasetmodels method)": [[211, "gammapy.modeling.models.DatasetModels.unfreeze", false]], "unfreeze() (gammapy.modeling.models.diskspatialmodel method)": [[212, "gammapy.modeling.models.DiskSpatialModel.unfreeze", false]], "unfreeze() (gammapy.modeling.models.eblabsorptionnormspectralmodel method)": [[213, "gammapy.modeling.models.EBLAbsorptionNormSpectralModel.unfreeze", false]], "unfreeze() (gammapy.modeling.models.expcutoffpowerlaw3fglspectralmodel method)": [[215, "gammapy.modeling.models.ExpCutoffPowerLaw3FGLSpectralModel.unfreeze", false]], "unfreeze() (gammapy.modeling.models.expcutoffpowerlawnormspectralmodel method)": [[216, "gammapy.modeling.models.ExpCutoffPowerLawNormSpectralModel.unfreeze", false]], "unfreeze() (gammapy.modeling.models.expcutoffpowerlawspectralmodel method)": [[217, "gammapy.modeling.models.ExpCutoffPowerLawSpectralModel.unfreeze", false]], "unfreeze() (gammapy.modeling.models.expdecaytemporalmodel method)": [[218, "gammapy.modeling.models.ExpDecayTemporalModel.unfreeze", false]], "unfreeze() (gammapy.modeling.models.fovbackgroundmodel method)": [[219, "gammapy.modeling.models.FoVBackgroundModel.unfreeze", false]], "unfreeze() (gammapy.modeling.models.gaussianspatialmodel method)": [[220, "gammapy.modeling.models.GaussianSpatialModel.unfreeze", false]], "unfreeze() (gammapy.modeling.models.gaussianspectralmodel method)": [[221, "gammapy.modeling.models.GaussianSpectralModel.unfreeze", false]], "unfreeze() (gammapy.modeling.models.gaussiantemporalmodel method)": [[222, "gammapy.modeling.models.GaussianTemporalModel.unfreeze", false]], "unfreeze() (gammapy.modeling.models.generalizedgaussianspatialmodel method)": [[223, "gammapy.modeling.models.GeneralizedGaussianSpatialModel.unfreeze", false]], "unfreeze() (gammapy.modeling.models.generalizedgaussiantemporalmodel method)": [[224, "gammapy.modeling.models.GeneralizedGaussianTemporalModel.unfreeze", false]], "unfreeze() (gammapy.modeling.models.lightcurvetemplatetemporalmodel method)": [[225, "gammapy.modeling.models.LightCurveTemplateTemporalModel.unfreeze", false]], "unfreeze() (gammapy.modeling.models.lineartemporalmodel method)": [[226, "gammapy.modeling.models.LinearTemporalModel.unfreeze", false]], "unfreeze() (gammapy.modeling.models.logparabolanormspectralmodel method)": [[227, "gammapy.modeling.models.LogParabolaNormSpectralModel.unfreeze", false]], "unfreeze() (gammapy.modeling.models.logparabolaspectralmodel method)": [[228, "gammapy.modeling.models.LogParabolaSpectralModel.unfreeze", false]], "unfreeze() (gammapy.modeling.models.meyercrabspectralmodel method)": [[230, "gammapy.modeling.models.MeyerCrabSpectralModel.unfreeze", false]], "unfreeze() (gammapy.modeling.models.modelbase method)": [[232, "gammapy.modeling.models.ModelBase.unfreeze", false]], "unfreeze() (gammapy.modeling.models.models method)": [[233, "gammapy.modeling.models.Models.unfreeze", false]], "unfreeze() (gammapy.modeling.models.naimaspectralmodel method)": [[234, "gammapy.modeling.models.NaimaSpectralModel.unfreeze", false]], "unfreeze() (gammapy.modeling.models.piecewisenormspatialmodel method)": [[235, "gammapy.modeling.models.PiecewiseNormSpatialModel.unfreeze", false]], "unfreeze() (gammapy.modeling.models.piecewisenormspectralmodel method)": [[236, "gammapy.modeling.models.PiecewiseNormSpectralModel.unfreeze", false]], "unfreeze() (gammapy.modeling.models.pointspatialmodel method)": [[237, "gammapy.modeling.models.PointSpatialModel.unfreeze", false]], "unfreeze() (gammapy.modeling.models.powerlaw2spectralmodel method)": [[238, "gammapy.modeling.models.PowerLaw2SpectralModel.unfreeze", false]], "unfreeze() (gammapy.modeling.models.powerlawnormspectralmodel method)": [[239, "gammapy.modeling.models.PowerLawNormSpectralModel.unfreeze", false]], "unfreeze() (gammapy.modeling.models.powerlawspectralmodel method)": [[240, "gammapy.modeling.models.PowerLawSpectralModel.unfreeze", false]], "unfreeze() (gammapy.modeling.models.powerlawtemporalmodel method)": [[241, "gammapy.modeling.models.PowerLawTemporalModel.unfreeze", false]], "unfreeze() (gammapy.modeling.models.scalespectralmodel method)": [[244, "gammapy.modeling.models.ScaleSpectralModel.unfreeze", false]], "unfreeze() (gammapy.modeling.models.shell2spatialmodel method)": [[245, "gammapy.modeling.models.Shell2SpatialModel.unfreeze", false]], "unfreeze() (gammapy.modeling.models.shellspatialmodel method)": [[246, "gammapy.modeling.models.ShellSpatialModel.unfreeze", false]], "unfreeze() (gammapy.modeling.models.sinetemporalmodel method)": [[247, "gammapy.modeling.models.SineTemporalModel.unfreeze", false]], "unfreeze() (gammapy.modeling.models.skymodel method)": [[248, "gammapy.modeling.models.SkyModel.unfreeze", false]], "unfreeze() (gammapy.modeling.models.smoothbrokenpowerlawspectralmodel method)": [[249, "gammapy.modeling.models.SmoothBrokenPowerLawSpectralModel.unfreeze", false]], "unfreeze() (gammapy.modeling.models.spatialmodel method)": [[250, "gammapy.modeling.models.SpatialModel.unfreeze", false]], "unfreeze() (gammapy.modeling.models.spectralmodel method)": [[251, "gammapy.modeling.models.SpectralModel.unfreeze", false]], "unfreeze() (gammapy.modeling.models.superexpcutoffpowerlaw3fglspectralmodel method)": [[252, "gammapy.modeling.models.SuperExpCutoffPowerLaw3FGLSpectralModel.unfreeze", false]], "unfreeze() (gammapy.modeling.models.superexpcutoffpowerlaw4fgldr3spectralmodel method)": [[253, "gammapy.modeling.models.SuperExpCutoffPowerLaw4FGLDR3SpectralModel.unfreeze", false]], "unfreeze() (gammapy.modeling.models.superexpcutoffpowerlaw4fglspectralmodel method)": [[254, "gammapy.modeling.models.SuperExpCutoffPowerLaw4FGLSpectralModel.unfreeze", false]], "unfreeze() (gammapy.modeling.models.templatendspatialmodel method)": [[256, "gammapy.modeling.models.TemplateNDSpatialModel.unfreeze", false]], "unfreeze() (gammapy.modeling.models.templatendspectralmodel method)": [[257, "gammapy.modeling.models.TemplateNDSpectralModel.unfreeze", false]], "unfreeze() (gammapy.modeling.models.templatenpredmodel method)": [[258, "gammapy.modeling.models.TemplateNPredModel.unfreeze", false]], "unfreeze() (gammapy.modeling.models.templatephasecurvetemporalmodel method)": [[259, "gammapy.modeling.models.TemplatePhaseCurveTemporalModel.unfreeze", false]], "unfreeze() (gammapy.modeling.models.templatespatialmodel method)": [[260, "gammapy.modeling.models.TemplateSpatialModel.unfreeze", false]], "unfreeze() (gammapy.modeling.models.templatespectralmodel method)": [[261, "gammapy.modeling.models.TemplateSpectralModel.unfreeze", false]], "unfreeze() (gammapy.modeling.models.temporalmodel method)": [[262, "gammapy.modeling.models.TemporalModel.unfreeze", false]], "unfreeze_all() (gammapy.modeling.parameters method)": [[202, "gammapy.modeling.Parameters.unfreeze_all", false]], "unfreeze_all() (gammapy.modeling.priorparameters method)": [[204, "gammapy.modeling.PriorParameters.unfreeze_all", false]], "union() (gammapy.data.gti method)": [[82, "gammapy.data.GTI.union", false]], "union() (gammapy.maps.regiongeom method)": [[191, "gammapy.maps.RegionGeom.union", false]], "unique_parameters (gammapy.modeling.parameters attribute)": [[202, "gammapy.modeling.Parameters.unique_parameters", false]], "unique_parameters (gammapy.modeling.priorparameters attribute)": [[204, "gammapy.modeling.PriorParameters.unique_parameters", false]], "unit (gammapy.irf.background2d attribute)": [[137, "gammapy.irf.Background2D.unit", false]], "unit (gammapy.irf.background3d attribute)": [[138, "gammapy.irf.Background3D.unit", false]], "unit (gammapy.irf.backgroundirf attribute)": [[139, "gammapy.irf.BackgroundIRF.unit", false]], "unit (gammapy.irf.edispkernel attribute)": [[140, "gammapy.irf.EDispKernel.unit", false]], "unit (gammapy.irf.effectiveareatable2d attribute)": [[143, "gammapy.irf.EffectiveAreaTable2D.unit", false]], "unit (gammapy.irf.energydependentmultigausspsf attribute)": [[144, "gammapy.irf.EnergyDependentMultiGaussPSF.unit", false]], "unit (gammapy.irf.energydispersion2d attribute)": [[145, "gammapy.irf.EnergyDispersion2D.unit", false]], "unit (gammapy.irf.irf attribute)": [[147, "gammapy.irf.IRF.unit", false]], "unit (gammapy.irf.parametricpsf attribute)": [[154, "gammapy.irf.ParametricPSF.unit", false]], "unit (gammapy.irf.psf3d attribute)": [[150, "gammapy.irf.PSF3D.unit", false]], "unit (gammapy.irf.psfking attribute)": [[152, "gammapy.irf.PSFKing.unit", false]], "unit (gammapy.irf.radmax2d attribute)": [[155, "gammapy.irf.RadMax2D.unit", false]], "unit (gammapy.maps.hpxmap attribute)": [[183, "gammapy.maps.HpxMap.unit", false]], "unit (gammapy.maps.hpxndmap attribute)": [[184, "gammapy.maps.HpxNDMap.unit", false]], "unit (gammapy.maps.labelmapaxis attribute)": [[185, "gammapy.maps.LabelMapAxis.unit", false]], "unit (gammapy.maps.map attribute)": [[186, "gammapy.maps.Map.unit", false]], "unit (gammapy.maps.mapaxis attribute)": [[188, "gammapy.maps.MapAxis.unit", false]], "unit (gammapy.maps.regionndmap attribute)": [[192, "gammapy.maps.RegionNDMap.unit", false]], "unit (gammapy.maps.timemapaxis attribute)": [[193, "gammapy.maps.TimeMapAxis.unit", false]], "unit (gammapy.maps.wcsmap attribute)": [[195, "gammapy.maps.WcsMap.unit", false]], "unit (gammapy.maps.wcsndmap attribute)": [[196, "gammapy.maps.WcsNDMap.unit", false]], "unit (gammapy.modeling.parameter attribute)": [[201, "gammapy.modeling.Parameter.unit", false]], "unit (gammapy.modeling.priorparameter attribute)": [[203, "gammapy.modeling.PriorParameter.unit", false]], "unit_from_fits_image_hdu() (in module gammapy.utils.units)": [[347, "gammapy.utils.units.unit_from_fits_image_hdu", false]], "update() (gammapy.analysis.analysisconfig method)": [[16, "gammapy.analysis.AnalysisConfig.update", false]], "update() (gammapy.data.hduindextable method)": [[83, "gammapy.data.HDUIndexTable.update", false]], "update() (gammapy.data.observationtable method)": [[86, "gammapy.data.ObservationTable.update", false]], "update() (gammapy.maps.maps method)": [[190, "gammapy.maps.Maps.update", false]], "update_config() (gammapy.analysis.analysis method)": [[15, "gammapy.analysis.Analysis.update_config", false]], "update_forward_refs() (gammapy.analysis.analysisconfig class method)": [[16, "gammapy.analysis.AnalysisConfig.update_forward_refs", false]], "update_forward_refs() (gammapy.data.eventlistmetadata class method)": [[80, "gammapy.data.EventListMetaData.update_forward_refs", false]], "update_forward_refs() (gammapy.datasets.mapdatasetmetadata class method)": [[99, "gammapy.datasets.MapDatasetMetaData.update_forward_refs", false]], "update_forward_refs() (gammapy.estimators.fluxmetadata class method)": [[118, "gammapy.estimators.FluxMetaData.update_forward_refs", false]], "update_from_dict() (gammapy.modeling.parameter method)": [[201, "gammapy.modeling.Parameter.update_from_dict", false]], "update_from_dict() (gammapy.modeling.priorparameter method)": [[203, "gammapy.modeling.PriorParameter.update_from_dict", false]], "update_link_label() (gammapy.modeling.models.datasetmodels method)": [[211, "gammapy.modeling.models.DatasetModels.update_link_label", false]], "update_link_label() (gammapy.modeling.models.models method)": [[233, "gammapy.modeling.models.Models.update_link_label", false]], "update_parameters_from_table() (gammapy.modeling.models.datasetmodels method)": [[211, "gammapy.modeling.models.DatasetModels.update_parameters_from_table", false]], "update_parameters_from_table() (gammapy.modeling.models.models method)": [[233, "gammapy.modeling.models.Models.update_parameters_from_table", false]], "upsample() (gammapy.maps.geom method)": [[181, "gammapy.maps.Geom.upsample", false]], "upsample() (gammapy.maps.hpxgeom method)": [[182, "gammapy.maps.HpxGeom.upsample", false]], "upsample() (gammapy.maps.hpxmap method)": [[183, "gammapy.maps.HpxMap.upsample", false]], "upsample() (gammapy.maps.hpxndmap method)": [[184, "gammapy.maps.HpxNDMap.upsample", false]], "upsample() (gammapy.maps.labelmapaxis method)": [[185, "gammapy.maps.LabelMapAxis.upsample", false]], "upsample() (gammapy.maps.map method)": [[186, "gammapy.maps.Map.upsample", false]], "upsample() (gammapy.maps.mapaxes method)": [[187, "gammapy.maps.MapAxes.upsample", false]], "upsample() (gammapy.maps.mapaxis method)": [[188, "gammapy.maps.MapAxis.upsample", false]], "upsample() (gammapy.maps.regiongeom method)": [[191, "gammapy.maps.RegionGeom.upsample", false]], "upsample() (gammapy.maps.regionndmap method)": [[192, "gammapy.maps.RegionNDMap.upsample", false]], "upsample() (gammapy.maps.timemapaxis method)": [[193, "gammapy.maps.TimeMapAxis.upsample", false]], "upsample() (gammapy.maps.wcsgeom method)": [[194, "gammapy.maps.WcsGeom.upsample", false]], "upsample() (gammapy.maps.wcsmap method)": [[195, "gammapy.maps.WcsMap.upsample", false]], "upsample() (gammapy.maps.wcsndmap method)": [[196, "gammapy.maps.WcsNDMap.upsample", false]], "use_center_as_plot_labels (gammapy.maps.mapaxis attribute)": [[188, "gammapy.maps.MapAxis.use_center_as_plot_labels", false]], "uses_quantity (gammapy.astro.population.casebattacharya1998 attribute)": [[28, "gammapy.astro.population.CaseBattacharya1998.uses_quantity", false]], "uses_quantity (gammapy.astro.population.exponential attribute)": [[29, "gammapy.astro.population.Exponential.uses_quantity", false]], "uses_quantity (gammapy.astro.population.faucherkaspi2006 attribute)": [[30, "gammapy.astro.population.FaucherKaspi2006.uses_quantity", false]], "uses_quantity (gammapy.astro.population.faucherkaspi2006velocitybimodal attribute)": [[31, "gammapy.astro.population.FaucherKaspi2006VelocityBimodal.uses_quantity", false]], "uses_quantity (gammapy.astro.population.faucherkaspi2006velocitymaxwellian attribute)": [[32, "gammapy.astro.population.FaucherKaspi2006VelocityMaxwellian.uses_quantity", false]], "uses_quantity (gammapy.astro.population.lorimer2006 attribute)": [[35, "gammapy.astro.population.Lorimer2006.uses_quantity", false]], "uses_quantity (gammapy.astro.population.paczynski1990 attribute)": [[36, "gammapy.astro.population.Paczynski1990.uses_quantity", false]], "uses_quantity (gammapy.astro.population.paczynski1990velocity attribute)": [[37, "gammapy.astro.population.Paczynski1990Velocity.uses_quantity", false]], "uses_quantity (gammapy.astro.population.yusifovkucuk2004 attribute)": [[39, "gammapy.astro.population.YusifovKucuk2004.uses_quantity", false]], "uses_quantity (gammapy.astro.population.yusifovkucuk2004b attribute)": [[40, "gammapy.astro.population.YusifovKucuk2004B.uses_quantity", false]], "v_0 (gammapy.astro.population.paczynski1990velocity attribute)": [[37, "gammapy.astro.population.Paczynski1990Velocity.v_0", false]], "valid_hdu_class (gammapy.data.hduindextable attribute)": [[83, "gammapy.data.HDUIndexTable.VALID_HDU_CLASS", false]], "valid_hdu_type (gammapy.data.hduindextable attribute)": [[83, "gammapy.data.HDUIndexTable.VALID_HDU_TYPE", false]], "validate() (gammapy.analysis.analysisconfig class method)": [[16, "gammapy.analysis.AnalysisConfig.validate", false]], "validate() (gammapy.data.eventlistmetadata class method)": [[80, "gammapy.data.EventListMetaData.validate", false]], "validate() (gammapy.datasets.mapdatasetmetadata class method)": [[99, "gammapy.datasets.MapDatasetMetaData.validate", false]], "validate() (gammapy.estimators.fluxmetadata class method)": [[118, "gammapy.estimators.FluxMetaData.validate", false]], "valleespiral (class in gammapy.astro.population)": [[38, "gammapy.astro.population.ValleeSpiral", false]], "value (gammapy.modeling.models.constantspatialmodel attribute)": [[208, "gammapy.modeling.models.ConstantSpatialModel.value", false]], "value (gammapy.modeling.parameter attribute)": [[201, "gammapy.modeling.Parameter.value", false]], "value (gammapy.modeling.parameters attribute)": [[202, "gammapy.modeling.Parameters.value", false]], "value (gammapy.modeling.priorparameter attribute)": [[203, "gammapy.modeling.PriorParameter.value", false]], "value (gammapy.modeling.priorparameters attribute)": [[204, "gammapy.modeling.PriorParameters.value", false]], "values() (gammapy.data.hduindextable method)": [[83, "gammapy.data.HDUIndexTable.values", false]], "values() (gammapy.data.observationtable method)": [[86, "gammapy.data.ObservationTable.values", false]], "values() (gammapy.maps.maps method)": [[190, "gammapy.maps.Maps.values", false]], "values_equal() (gammapy.data.hduindextable method)": [[83, "gammapy.data.HDUIndexTable.values_equal", false]], "values_equal() (gammapy.data.observationtable method)": [[86, "gammapy.data.ObservationTable.values_equal", false]], "velocity_distributions (in module gammapy.astro.population)": [[49, "gammapy.astro.population.velocity_distributions", false]], "velocity_glon_glat() (in module gammapy.utils.coordinates)": [[297, "gammapy.utils.coordinates.velocity_glon_glat", false]], "w (gammapy.astro.population.faucherkaspi2006velocitybimodal attribute)": [[31, "gammapy.astro.population.FaucherKaspi2006VelocityBimodal.w", false]], "wcs (gammapy.maps.regiongeom attribute)": [[191, "gammapy.maps.RegionGeom.wcs", false]], "wcs (gammapy.maps.wcsgeom attribute)": [[194, "gammapy.maps.WcsGeom.wcs", false]], "wcs_geom (gammapy.modeling.models.datasetmodels attribute)": [[211, "gammapy.modeling.models.DatasetModels.wcs_geom", false]], "wcs_geom (gammapy.modeling.models.models attribute)": [[233, "gammapy.modeling.models.Models.wcs_geom", false]], "wcsgeom (class in gammapy.maps)": [[194, "gammapy.maps.WcsGeom", false]], "wcsmap (class in gammapy.maps)": [[195, "gammapy.maps.WcsMap", false]], "wcsndmap (class in gammapy.maps)": [[196, "gammapy.maps.WcsNDMap", false]], "width (gammapy.maps.hpxgeom attribute)": [[182, "gammapy.maps.HpxGeom.width", false]], "width (gammapy.maps.regiongeom attribute)": [[191, "gammapy.maps.RegionGeom.width", false]], "width (gammapy.maps.wcsgeom attribute)": [[194, "gammapy.maps.WcsGeom.width", false]], "width (gammapy.modeling.models.shellspatialmodel attribute)": [[246, "gammapy.modeling.models.ShellSpatialModel.width", false]], "width() (gammapy.catalog.sourcecataloglargescalehgps method)": [[66, "gammapy.catalog.SourceCatalogLargeScaleHGPS.width", false]], "width_error() (gammapy.catalog.sourcecataloglargescalehgps method)": [[66, "gammapy.catalog.SourceCatalogLargeScaleHGPS.width_error", false]], "with_units_from_data() (gammapy.astro.population.casebattacharya1998 method)": [[28, "gammapy.astro.population.CaseBattacharya1998.with_units_from_data", false]], "with_units_from_data() (gammapy.astro.population.exponential method)": [[29, "gammapy.astro.population.Exponential.with_units_from_data", false]], "with_units_from_data() (gammapy.astro.population.faucherkaspi2006 method)": [[30, "gammapy.astro.population.FaucherKaspi2006.with_units_from_data", false]], "with_units_from_data() (gammapy.astro.population.faucherkaspi2006velocitybimodal method)": [[31, "gammapy.astro.population.FaucherKaspi2006VelocityBimodal.with_units_from_data", false]], "with_units_from_data() (gammapy.astro.population.faucherkaspi2006velocitymaxwellian method)": [[32, "gammapy.astro.population.FaucherKaspi2006VelocityMaxwellian.with_units_from_data", false]], "with_units_from_data() (gammapy.astro.population.lorimer2006 method)": [[35, "gammapy.astro.population.Lorimer2006.with_units_from_data", false]], "with_units_from_data() (gammapy.astro.population.paczynski1990 method)": [[36, "gammapy.astro.population.Paczynski1990.with_units_from_data", false]], "with_units_from_data() (gammapy.astro.population.paczynski1990velocity method)": [[37, "gammapy.astro.population.Paczynski1990Velocity.with_units_from_data", false]], "with_units_from_data() (gammapy.astro.population.yusifovkucuk2004 method)": [[39, "gammapy.astro.population.YusifovKucuk2004.with_units_from_data", false]], "with_units_from_data() (gammapy.astro.population.yusifovkucuk2004b method)": [[40, "gammapy.astro.population.YusifovKucuk2004B.with_units_from_data", false]], "without_units_for_data() (gammapy.astro.population.casebattacharya1998 method)": [[28, "gammapy.astro.population.CaseBattacharya1998.without_units_for_data", false]], "without_units_for_data() (gammapy.astro.population.exponential method)": [[29, "gammapy.astro.population.Exponential.without_units_for_data", false]], "without_units_for_data() (gammapy.astro.population.faucherkaspi2006 method)": [[30, "gammapy.astro.population.FaucherKaspi2006.without_units_for_data", false]], "without_units_for_data() (gammapy.astro.population.faucherkaspi2006velocitybimodal method)": [[31, "gammapy.astro.population.FaucherKaspi2006VelocityBimodal.without_units_for_data", false]], "without_units_for_data() (gammapy.astro.population.faucherkaspi2006velocitymaxwellian method)": [[32, "gammapy.astro.population.FaucherKaspi2006VelocityMaxwellian.without_units_for_data", false]], "without_units_for_data() (gammapy.astro.population.lorimer2006 method)": [[35, "gammapy.astro.population.Lorimer2006.without_units_for_data", false]], "without_units_for_data() (gammapy.astro.population.paczynski1990 method)": [[36, "gammapy.astro.population.Paczynski1990.without_units_for_data", false]], "without_units_for_data() (gammapy.astro.population.paczynski1990velocity method)": [[37, "gammapy.astro.population.Paczynski1990Velocity.without_units_for_data", false]], "without_units_for_data() (gammapy.astro.population.yusifovkucuk2004 method)": [[39, "gammapy.astro.population.YusifovKucuk2004.without_units_for_data", false]], "without_units_for_data() (gammapy.astro.population.yusifovkucuk2004b method)": [[40, "gammapy.astro.population.YusifovKucuk2004B.without_units_for_data", false]], "wobbleregionsfinder (class in gammapy.makers)": [[171, "gammapy.makers.WobbleRegionsFinder", false]], "write (gammapy.data.hduindextable attribute)": [[83, "gammapy.data.HDUIndexTable.write", false]], "write (gammapy.data.observationtable attribute)": [[86, "gammapy.data.ObservationTable.write", false]], "write() (gammapy.analysis.analysisconfig method)": [[16, "gammapy.analysis.AnalysisConfig.write", false]], "write() (gammapy.astro.darkmatter.primaryflux method)": [[26, "gammapy.astro.darkmatter.PrimaryFlux.write", false]], "write() (gammapy.data.eventlist method)": [[79, "gammapy.data.EventList.write", false]], "write() (gammapy.data.gti method)": [[82, "gammapy.data.GTI.write", false]], "write() (gammapy.data.observation method)": [[84, "gammapy.data.Observation.write", false]], "write() (gammapy.datasets.datasets method)": [[95, "gammapy.datasets.Datasets.write", false]], "write() (gammapy.datasets.fluxpointsdataset method)": [[96, "gammapy.datasets.FluxPointsDataset.write", false]], "write() (gammapy.datasets.mapdataset method)": [[97, "gammapy.datasets.MapDataset.write", false]], "write() (gammapy.datasets.mapdatasetonoff method)": [[100, "gammapy.datasets.MapDatasetOnOff.write", false]], "write() (gammapy.datasets.ogipdatasetwriter method)": [[102, "gammapy.datasets.OGIPDatasetWriter.write", false]], "write() (gammapy.datasets.spectrumdataset method)": [[104, "gammapy.datasets.SpectrumDataset.write", false]], "write() (gammapy.datasets.spectrumdatasetonoff method)": [[105, "gammapy.datasets.SpectrumDatasetOnOff.write", false]], "write() (gammapy.estimators.fluxmaps method)": [[117, "gammapy.estimators.FluxMaps.write", false]], "write() (gammapy.estimators.fluxpoints method)": [[119, "gammapy.estimators.FluxPoints.write", false]], "write() (gammapy.irf.background2d method)": [[137, "gammapy.irf.Background2D.write", false]], "write() (gammapy.irf.background3d method)": [[138, "gammapy.irf.Background3D.write", false]], "write() (gammapy.irf.backgroundirf method)": [[139, "gammapy.irf.BackgroundIRF.write", false]], "write() (gammapy.irf.edispkernel method)": [[140, "gammapy.irf.EDispKernel.write", false]], "write() (gammapy.irf.edispkernelmap method)": [[141, "gammapy.irf.EDispKernelMap.write", false]], "write() (gammapy.irf.edispmap method)": [[142, "gammapy.irf.EDispMap.write", false]], "write() (gammapy.irf.effectiveareatable2d method)": [[143, "gammapy.irf.EffectiveAreaTable2D.write", false]], "write() (gammapy.irf.energydependentmultigausspsf method)": [[144, "gammapy.irf.EnergyDependentMultiGaussPSF.write", false]], "write() (gammapy.irf.energydispersion2d method)": [[145, "gammapy.irf.EnergyDispersion2D.write", false]], "write() (gammapy.irf.irf method)": [[147, "gammapy.irf.IRF.write", false]], "write() (gammapy.irf.irfmap method)": [[148, "gammapy.irf.IRFMap.write", false]], "write() (gammapy.irf.parametricpsf method)": [[154, "gammapy.irf.ParametricPSF.write", false]], "write() (gammapy.irf.psf3d method)": [[150, "gammapy.irf.PSF3D.write", false]], "write() (gammapy.irf.psfkernel method)": [[151, "gammapy.irf.PSFKernel.write", false]], "write() (gammapy.irf.psfking method)": [[152, "gammapy.irf.PSFKing.write", false]], "write() (gammapy.irf.psfmap method)": [[153, "gammapy.irf.PSFMap.write", false]], "write() (gammapy.irf.radmax2d method)": [[155, "gammapy.irf.RadMax2D.write", false]], "write() (gammapy.irf.recopsfmap method)": [[156, "gammapy.irf.RecoPSFMap.write", false]], "write() (gammapy.maps.hpxmap method)": [[183, "gammapy.maps.HpxMap.write", false]], "write() (gammapy.maps.hpxndmap method)": [[184, "gammapy.maps.HpxNDMap.write", false]], "write() (gammapy.maps.map method)": [[186, "gammapy.maps.Map.write", false]], "write() (gammapy.maps.maps method)": [[190, "gammapy.maps.Maps.write", false]], "write() (gammapy.maps.regionndmap method)": [[192, "gammapy.maps.RegionNDMap.write", false]], "write() (gammapy.maps.wcsmap method)": [[195, "gammapy.maps.WcsMap.write", false]], "write() (gammapy.maps.wcsndmap method)": [[196, "gammapy.maps.WcsNDMap.write", false]], "write() (gammapy.modeling.models.datasetmodels method)": [[211, "gammapy.modeling.models.DatasetModels.write", false]], "write() (gammapy.modeling.models.lightcurvetemplatetemporalmodel method)": [[225, "gammapy.modeling.models.LightCurveTemplateTemporalModel.write", false]], "write() (gammapy.modeling.models.models method)": [[233, "gammapy.modeling.models.Models.write", false]], "write() (gammapy.modeling.models.templatendspatialmodel method)": [[256, "gammapy.modeling.models.TemplateNDSpatialModel.write", false]], "write() (gammapy.modeling.models.templatendspectralmodel method)": [[257, "gammapy.modeling.models.TemplateNDSpectralModel.write", false]], "write() (gammapy.modeling.models.templatenpredmodel method)": [[258, "gammapy.modeling.models.TemplateNPredModel.write", false]], "write() (gammapy.modeling.models.templatephasecurvetemporalmodel method)": [[259, "gammapy.modeling.models.TemplatePhaseCurveTemporalModel.write", false]], "write() (gammapy.modeling.models.templatespatialmodel method)": [[260, "gammapy.modeling.models.TemplateSpatialModel.write", false]], "write_arf() (gammapy.datasets.ogipdatasetwriter method)": [[102, "gammapy.datasets.OGIPDatasetWriter.write_arf", false]], "write_bkg() (gammapy.datasets.ogipdatasetwriter method)": [[102, "gammapy.datasets.OGIPDatasetWriter.write_bkg", false]], "write_covariance() (gammapy.modeling.models.datasetmodels method)": [[211, "gammapy.modeling.models.DatasetModels.write_covariance", false]], "write_covariance() (gammapy.modeling.models.models method)": [[233, "gammapy.modeling.models.Models.write_covariance", false]], "write_datasets() (gammapy.analysis.analysis method)": [[15, "gammapy.analysis.Analysis.write_datasets", false]], "write_models() (gammapy.analysis.analysis method)": [[15, "gammapy.analysis.Analysis.write_models", false]], "write_pha() (gammapy.datasets.ogipdatasetwriter method)": [[102, "gammapy.datasets.OGIPDatasetWriter.write_pha", false]], "write_rmf() (gammapy.datasets.ogipdatasetwriter method)": [[102, "gammapy.datasets.OGIPDatasetWriter.write_rmf", false]], "write_yaml() (in module gammapy.utils.scripts)": [[330, "gammapy.utils.scripts.write_yaml", false]], "wstat": [[554, "term-WStat", true]], "wstat() (in module gammapy.stats)": [[287, "gammapy.stats.wstat", false]], "wstatcountsstatistic (class in gammapy.stats)": [[274, "gammapy.stats.WStatCountsStatistic", false]], "x_max (gammapy.estimators.imageprofile attribute)": [[122, "gammapy.estimators.ImageProfile.x_max", false]], "x_min (gammapy.estimators.imageprofile attribute)": [[122, "gammapy.estimators.ImageProfile.x_min", false]], "x_ref (gammapy.estimators.imageprofile attribute)": [[122, "gammapy.estimators.ImageProfile.x_ref", false]], "xy_position() (gammapy.astro.population.faucherspiral method)": [[33, "gammapy.astro.population.FaucherSpiral.xy_position", false]], "xy_position() (gammapy.astro.population.logspiral method)": [[34, "gammapy.astro.population.LogSpiral.xy_position", false]], "xy_position() (gammapy.astro.population.valleespiral method)": [[38, "gammapy.astro.population.ValleeSpiral.xy_position", false]], "yusifovkucuk2004 (class in gammapy.astro.population)": [[39, "gammapy.astro.population.YusifovKucuk2004", false]], "yusifovkucuk2004b (class in gammapy.astro.population)": [[40, "gammapy.astro.population.YusifovKucuk2004B", false]], "z_0 (gammapy.astro.population.exponential attribute)": [[29, "gammapy.astro.population.Exponential.z_0", false]], "zhaoprofile (class in gammapy.astro.darkmatter)": [[27, "gammapy.astro.darkmatter.ZhaoProfile", false]]}, "objects": {"gammapy": [[0, 0, 0, "-", "analysis"], [2, 0, 0, "-", "catalog"], [3, 0, 0, "-", "data"], [4, 0, 0, "-", "datasets"], [5, 0, 0, "-", "estimators"], [7, 0, 0, "-", "irf"], [8, 0, 0, "-", "makers"], [9, 0, 0, "-", "maps"], [10, 0, 0, "-", "modeling"], [12, 0, 0, "-", "stats"], [14, 0, 0, "-", "visualization"], [11, 6, 1, "cmdoption-gammapy-ignore-warnings", "--ignore-warnings"], [11, 6, 1, "cmdoption-gammapy-log-level", "--log-level"], [11, 6, 1, "cmdoption-gammapy-version", "--version"]], "gammapy-analysis-config": [[11, 6, 1, "cmdoption-gammapy-analysis-config-filename", "--filename"], [11, 6, 1, "cmdoption-gammapy-analysis-config-overwrite", "--overwrite"]], "gammapy-analysis-run": [[11, 6, 1, "cmdoption-gammapy-analysis-run-filename", "--filename"], [11, 6, 1, "cmdoption-gammapy-analysis-run-out", "--out"], [11, 6, 1, "cmdoption-gammapy-analysis-run-overwrite", "--overwrite"]], "gammapy-download-datasets": [[11, 6, 1, "cmdoption-gammapy-download-datasets-out", "--out"], [11, 6, 1, "cmdoption-gammapy-download-datasets-release", "--release"]], "gammapy-download-notebooks": [[11, 6, 1, "cmdoption-gammapy-download-notebooks-out", "--out"], [11, 6, 1, "cmdoption-gammapy-download-notebooks-release", "--release"]], "gammapy-info": [[11, 6, 1, "cmdoption-gammapy-info-dependencies", "--dependencies"], [11, 6, 1, "cmdoption-gammapy-info-envvar", "--envvar"], [11, 6, 1, "cmdoption-gammapy-info-dependencies", "--no-dependencies"], [11, 6, 1, "cmdoption-gammapy-info-envvar", "--no-envvar"], [11, 6, 1, "cmdoption-gammapy-info-system", "--no-system"], [11, 6, 1, "cmdoption-gammapy-info-version", "--no-version"], [11, 6, 1, "cmdoption-gammapy-info-system", "--system"], [11, 6, 1, "cmdoption-gammapy-info-version", "--version"]], "gammapy.analysis": [[15, 1, 1, "", "Analysis"], [16, 1, 1, "", "AnalysisConfig"]], "gammapy.analysis.Analysis": [[15, 2, 1, "", "config"], [15, 3, 1, "", "get_datasets"], [15, 3, 1, "", "get_excess_map"], [15, 3, 1, "", "get_flux_points"], [15, 3, 1, "", "get_light_curve"], [15, 3, 1, "", "get_observations"], [15, 2, 1, "", "models"], [15, 3, 1, "", "read_datasets"], [15, 3, 1, "", "read_models"], [15, 3, 1, "", "run_fit"], [15, 3, 1, "", "set_models"], [15, 3, 1, "", "update_config"], [15, 3, 1, "", "write_datasets"], [15, 3, 1, "", "write_models"]], "gammapy.analysis.AnalysisConfig": [[16, 3, 1, "", "construct"], [16, 3, 1, "", "copy"], [16, 3, 1, "", "dict"], [16, 3, 1, "", "from_orm"], [16, 3, 1, "", "from_yaml"], [16, 3, 1, "", "json"], [16, 2, 1, "", "model_computed_fields"], [16, 2, 1, "", "model_config"], [16, 3, 1, "", "model_construct"], [16, 3, 1, "", "model_copy"], [16, 3, 1, "", "model_dump"], [16, 3, 1, "", "model_dump_json"], [16, 2, 1, "", "model_extra"], [16, 2, 1, "", "model_fields"], [16, 2, 1, "", "model_fields_set"], [16, 3, 1, "", "model_json_schema"], [16, 3, 1, "", "model_parametrized_name"], [16, 3, 1, "", "model_post_init"], [16, 3, 1, "", "model_rebuild"], [16, 3, 1, "", "model_validate"], [16, 3, 1, "", "model_validate_json"], [16, 3, 1, "", "model_validate_strings"], [16, 3, 1, "", "parse_file"], [16, 3, 1, "", "parse_obj"], [16, 3, 1, "", "parse_raw"], [16, 3, 1, "", "read"], [16, 3, 1, "", "schema"], [16, 3, 1, "", "schema_json"], [16, 3, 1, "", "set_logging"], [16, 3, 1, "", "to_yaml"], [16, 3, 1, "", "update"], [16, 3, 1, "", "update_forward_refs"], [16, 3, 1, "", "validate"], [16, 3, 1, "", "write"]], "gammapy.astro": [[1, 0, 0, "-", "darkmatter"], [1, 0, 0, "-", "population"], [1, 0, 0, "-", "source"]], "gammapy.astro.darkmatter": [[17, 1, 1, "", "BurkertProfile"], [18, 1, 1, "", "DMProfile"], [19, 1, 1, "", "DarkMatterAnnihilationSpectralModel"], [20, 1, 1, "", "DarkMatterDecaySpectralModel"], [21, 1, 1, "", "EinastoProfile"], [22, 1, 1, "", "IsothermalProfile"], [23, 1, 1, "", "JFactory"], [24, 1, 1, "", "MooreProfile"], [25, 1, 1, "", "NFWProfile"], [26, 1, 1, "", "PrimaryFlux"], [27, 1, 1, "", "ZhaoProfile"]], "gammapy.astro.darkmatter.BurkertProfile": [[17, 2, 1, "", "DEFAULT_SCALE_RADIUS"], [17, 2, 1, "", "DISTANCE_GC"], [17, 2, 1, "", "LOCAL_DENSITY"], [17, 3, 1, "", "__call__"], [17, 3, 1, "", "evaluate"], [17, 3, 1, "", "integral"], [17, 3, 1, "", "integrate_spectrum_separation"], [17, 3, 1, "", "scale_to_local_density"]], "gammapy.astro.darkmatter.DMProfile": [[18, 2, 1, "", "DISTANCE_GC"], [18, 2, 1, "", "LOCAL_DENSITY"], [18, 3, 1, "", "__call__"], [18, 3, 1, "", "integral"], [18, 3, 1, "", "integrate_spectrum_separation"], [18, 3, 1, "", "scale_to_local_density"]], "gammapy.astro.darkmatter.DarkMatterAnnihilationSpectralModel": [[19, 2, 1, "", "THERMAL_RELIC_CROSS_SECTION"], [19, 3, 1, "", "__call__"], [19, 3, 1, "", "copy"], [19, 2, 1, "", "covariance"], [19, 2, 1, "", "default_parameters"], [19, 3, 1, "", "energy_flux"], [19, 3, 1, "", "energy_flux_error"], [19, 3, 1, "", "evaluate"], [19, 3, 1, "", "evaluate_error"], [19, 3, 1, "", "freeze"], [19, 3, 1, "", "from_dict"], [19, 3, 1, "", "from_parameters"], [19, 2, 1, "", "frozen"], [19, 3, 1, "", "integral"], [19, 3, 1, "", "integral_error"], [19, 3, 1, "", "inverse"], [19, 3, 1, "", "inverse_all"], [19, 2, 1, "", "is_norm_spectral_model"], [19, 2, 1, "", "parameters"], [19, 2, 1, "", "pivot_energy"], [19, 3, 1, "", "plot"], [19, 3, 1, "", "plot_error"], [19, 3, 1, "", "reassign"], [19, 3, 1, "", "reference_fluxes"], [19, 2, 1, "", "scale"], [19, 3, 1, "", "spectral_index"], [19, 3, 1, "", "spectral_index_error"], [19, 2, 1, "", "tag"], [19, 3, 1, "", "to_dict"], [19, 2, 1, "", "type"], [19, 3, 1, "", "unfreeze"]], "gammapy.astro.darkmatter.DarkMatterDecaySpectralModel": [[20, 2, 1, "", "LIFETIME_AGE_OF_UNIVERSE"], [20, 3, 1, "", "__call__"], [20, 3, 1, "", "copy"], [20, 2, 1, "", "covariance"], [20, 2, 1, "", "default_parameters"], [20, 3, 1, "", "energy_flux"], [20, 3, 1, "", "energy_flux_error"], [20, 3, 1, "", "evaluate"], [20, 3, 1, "", "evaluate_error"], [20, 3, 1, "", "freeze"], [20, 3, 1, "", "from_dict"], [20, 3, 1, "", "from_parameters"], [20, 2, 1, "", "frozen"], [20, 3, 1, "", "integral"], [20, 3, 1, "", "integral_error"], [20, 3, 1, "", "inverse"], [20, 3, 1, "", "inverse_all"], [20, 2, 1, "", "is_norm_spectral_model"], [20, 2, 1, "", "parameters"], [20, 2, 1, "", "pivot_energy"], [20, 3, 1, "", "plot"], [20, 3, 1, "", "plot_error"], [20, 3, 1, "", "reassign"], [20, 3, 1, "", "reference_fluxes"], [20, 2, 1, "", "scale"], [20, 3, 1, "", "spectral_index"], [20, 3, 1, "", "spectral_index_error"], [20, 2, 1, "", "tag"], [20, 3, 1, "", "to_dict"], [20, 2, 1, "", "type"], [20, 3, 1, "", "unfreeze"]], "gammapy.astro.darkmatter.EinastoProfile": [[21, 2, 1, "", "DEFAULT_ALPHA"], [21, 2, 1, "", "DEFAULT_SCALE_RADIUS"], [21, 2, 1, "", "DISTANCE_GC"], [21, 2, 1, "", "LOCAL_DENSITY"], [21, 3, 1, "", "__call__"], [21, 3, 1, "", "evaluate"], [21, 3, 1, "", "integral"], [21, 3, 1, "", "integrate_spectrum_separation"], [21, 3, 1, "", "scale_to_local_density"]], "gammapy.astro.darkmatter.IsothermalProfile": [[22, 2, 1, "", "DEFAULT_SCALE_RADIUS"], [22, 2, 1, "", "DISTANCE_GC"], [22, 2, 1, "", "LOCAL_DENSITY"], [22, 3, 1, "", "__call__"], [22, 3, 1, "", "evaluate"], [22, 3, 1, "", "integral"], [22, 3, 1, "", "integrate_spectrum_separation"], [22, 3, 1, "", "scale_to_local_density"]], "gammapy.astro.darkmatter.JFactory": [[23, 3, 1, "", "compute_differential_jfactor"], [23, 3, 1, "", "compute_jfactor"]], "gammapy.astro.darkmatter.MooreProfile": [[24, 2, 1, "", "DEFAULT_SCALE_RADIUS"], [24, 2, 1, "", "DISTANCE_GC"], [24, 2, 1, "", "LOCAL_DENSITY"], [24, 3, 1, "", "__call__"], [24, 3, 1, "", "evaluate"], [24, 3, 1, "", "integral"], [24, 3, 1, "", "integrate_spectrum_separation"], [24, 3, 1, "", "scale_to_local_density"]], "gammapy.astro.darkmatter.NFWProfile": [[25, 2, 1, "", "DEFAULT_SCALE_RADIUS"], [25, 2, 1, "", "DISTANCE_GC"], [25, 2, 1, "", "LOCAL_DENSITY"], [25, 3, 1, "", "__call__"], [25, 3, 1, "", "evaluate"], [25, 3, 1, "", "integral"], [25, 3, 1, "", "integrate_spectrum_separation"], [25, 3, 1, "", "scale_to_local_density"]], "gammapy.astro.darkmatter.PrimaryFlux": [[26, 3, 1, "", "__call__"], [26, 2, 1, "", "allowed_channels"], [26, 2, 1, "", "channel"], [26, 2, 1, "", "channel_registry"], [26, 3, 1, "", "copy"], [26, 2, 1, "", "covariance"], [26, 2, 1, "", "default_parameters"], [26, 3, 1, "", "energy_flux"], [26, 3, 1, "", "energy_flux_error"], [26, 3, 1, "", "evaluate"], [26, 3, 1, "", "evaluate_error"], [26, 3, 1, "", "freeze"], [26, 3, 1, "", "from_dict"], [26, 3, 1, "", "from_parameters"], [26, 2, 1, "", "frozen"], [26, 3, 1, "", "integral"], [26, 3, 1, "", "integral_error"], [26, 3, 1, "", "inverse"], [26, 3, 1, "", "inverse_all"], [26, 2, 1, "", "is_norm_spectral_model"], [26, 2, 1, "", "mDM"], [26, 2, 1, "", "map"], [26, 2, 1, "", "parameters"], [26, 2, 1, "", "pivot_energy"], [26, 3, 1, "", "plot"], [26, 3, 1, "", "plot_error"], [26, 3, 1, "", "reassign"], [26, 3, 1, "", "reference_fluxes"], [26, 3, 1, "", "spectral_index"], [26, 3, 1, "", "spectral_index_error"], [26, 2, 1, "", "table_filename"], [26, 2, 1, "", "tag"], [26, 3, 1, "", "to_dict"], [26, 2, 1, "", "type"], [26, 3, 1, "", "unfreeze"], [26, 3, 1, "", "write"]], "gammapy.astro.darkmatter.ZhaoProfile": [[27, 2, 1, "", "DEFAULT_ALPHA"], [27, 2, 1, "", "DEFAULT_BETA"], [27, 2, 1, "", "DEFAULT_GAMMA"], [27, 2, 1, "", "DEFAULT_SCALE_RADIUS"], [27, 2, 1, "", "DISTANCE_GC"], [27, 2, 1, "", "LOCAL_DENSITY"], [27, 3, 1, "", "__call__"], [27, 3, 1, "", "evaluate"], [27, 3, 1, "", "integral"], [27, 3, 1, "", "integrate_spectrum_separation"], [27, 3, 1, "", "scale_to_local_density"]], "gammapy.astro.population": [[28, 1, 1, "", "CaseBattacharya1998"], [29, 1, 1, "", "Exponential"], [30, 1, 1, "", "FaucherKaspi2006"], [31, 1, 1, "", "FaucherKaspi2006VelocityBimodal"], [32, 1, 1, "", "FaucherKaspi2006VelocityMaxwellian"], [33, 1, 1, "", "FaucherSpiral"], [34, 1, 1, "", "LogSpiral"], [35, 1, 1, "", "Lorimer2006"], [36, 1, 1, "", "Paczynski1990"], [37, 1, 1, "", "Paczynski1990Velocity"], [38, 1, 1, "", "ValleeSpiral"], [39, 1, 1, "", "YusifovKucuk2004"], [40, 1, 1, "", "YusifovKucuk2004B"], [41, 4, 1, "", "add_observed_parameters"], [42, 4, 1, "", "add_pulsar_parameters"], [43, 4, 1, "", "add_pwn_parameters"], [44, 4, 1, "", "add_snr_parameters"], [45, 4, 1, "", "make_base_catalog_galactic"], [46, 4, 1, "", "make_catalog_random_positions_cube"], [47, 4, 1, "", "make_catalog_random_positions_sphere"], [48, 5, 1, "", "radial_distributions"], [49, 5, 1, "", "velocity_distributions"]], "gammapy.astro.population.CaseBattacharya1998": [[28, 3, 1, "", "__call__"], [28, 2, 1, "", "alpha"], [28, 2, 1, "", "amplitude"], [28, 2, 1, "", "bbox_with_units"], [28, 2, 1, "", "beta"], [28, 2, 1, "", "bounding_box"], [28, 2, 1, "", "bounds"], [28, 3, 1, "", "coerce_units"], [28, 2, 1, "", "col_fit_deriv"], [28, 3, 1, "", "copy"], [28, 2, 1, "", "cov_matrix"], [28, 3, 1, "", "deepcopy"], [28, 2, 1, "", "eqcons"], [28, 3, 1, "", "evaluate"], [28, 2, 1, "", "evolved"], [28, 2, 1, "", "fit_deriv"], [28, 2, 1, "", "fittable"], [28, 2, 1, "", "fixed"], [28, 3, 1, "", "get_bounding_box"], [28, 3, 1, "", "has_inverse"], [28, 2, 1, "", "has_user_bounding_box"], [28, 2, 1, "", "has_user_inverse"], [28, 2, 1, "", "ineqcons"], [28, 3, 1, "", "input_shape"], [28, 2, 1, "", "input_units"], [28, 2, 1, "", "input_units_allow_dimensionless"], [28, 2, 1, "", "input_units_equivalencies"], [28, 2, 1, "", "input_units_strict"], [28, 2, 1, "", "inputs"], [28, 2, 1, "", "inverse"], [28, 2, 1, "", "linear"], [28, 2, 1, "", "meta"], [28, 2, 1, "", "model_constraints"], [28, 2, 1, "", "model_set_axis"], [28, 2, 1, "", "n_inputs"], [28, 2, 1, "", "n_outputs"], [28, 2, 1, "", "n_submodels"], [28, 2, 1, "", "name"], [28, 3, 1, "", "output_units"], [28, 2, 1, "", "outputs"], [28, 2, 1, "", "param_names"], [28, 2, 1, "", "param_sets"], [28, 2, 1, "", "parameter_constraints"], [28, 2, 1, "", "parameters"], [28, 3, 1, "", "prepare_inputs"], [28, 3, 1, "", "prepare_outputs"], [28, 3, 1, "", "rename"], [28, 3, 1, "", "render"], [28, 2, 1, "", "return_units"], [28, 2, 1, "", "separable"], [28, 3, 1, "", "set_slice_args"], [28, 2, 1, "", "standard_broadcasting"], [28, 2, 1, "", "stds"], [28, 3, 1, "", "strip_units_from_tree"], [28, 3, 1, "", "sum_of_implicit_terms"], [28, 2, 1, "", "sync_constraints"], [28, 2, 1, "", "tied"], [28, 2, 1, "", "uses_quantity"], [28, 3, 1, "", "with_units_from_data"], [28, 3, 1, "", "without_units_for_data"]], "gammapy.astro.population.Exponential": [[29, 3, 1, "", "__call__"], [29, 2, 1, "", "amplitude"], [29, 2, 1, "", "bbox_with_units"], [29, 2, 1, "", "bounding_box"], [29, 2, 1, "", "bounds"], [29, 3, 1, "", "coerce_units"], [29, 2, 1, "", "col_fit_deriv"], [29, 3, 1, "", "copy"], [29, 2, 1, "", "cov_matrix"], [29, 3, 1, "", "deepcopy"], [29, 2, 1, "", "eqcons"], [29, 3, 1, "", "evaluate"], [29, 2, 1, "", "evolved"], [29, 2, 1, "", "fit_deriv"], [29, 2, 1, "", "fittable"], [29, 2, 1, "", "fixed"], [29, 3, 1, "", "get_bounding_box"], [29, 3, 1, "", "has_inverse"], [29, 2, 1, "", "has_user_bounding_box"], [29, 2, 1, "", "has_user_inverse"], [29, 2, 1, "", "ineqcons"], [29, 3, 1, "", "input_shape"], [29, 2, 1, "", "input_units"], [29, 2, 1, "", "input_units_allow_dimensionless"], [29, 2, 1, "", "input_units_equivalencies"], [29, 2, 1, "", "input_units_strict"], [29, 2, 1, "", "inputs"], [29, 2, 1, "", "inverse"], [29, 2, 1, "", "linear"], [29, 2, 1, "", "meta"], [29, 2, 1, "", "model_constraints"], [29, 2, 1, "", "model_set_axis"], [29, 2, 1, "", "n_inputs"], [29, 2, 1, "", "n_outputs"], [29, 2, 1, "", "n_submodels"], [29, 2, 1, "", "name"], [29, 3, 1, "", "output_units"], [29, 2, 1, "", "outputs"], [29, 2, 1, "", "param_names"], [29, 2, 1, "", "param_sets"], [29, 2, 1, "", "parameter_constraints"], [29, 2, 1, "", "parameters"], [29, 3, 1, "", "prepare_inputs"], [29, 3, 1, "", "prepare_outputs"], [29, 3, 1, "", "rename"], [29, 3, 1, "", "render"], [29, 2, 1, "", "return_units"], [29, 2, 1, "", "separable"], [29, 3, 1, "", "set_slice_args"], [29, 2, 1, "", "standard_broadcasting"], [29, 2, 1, "", "stds"], [29, 3, 1, "", "strip_units_from_tree"], [29, 3, 1, "", "sum_of_implicit_terms"], [29, 2, 1, "", "sync_constraints"], [29, 2, 1, "", "tied"], [29, 2, 1, "", "uses_quantity"], [29, 3, 1, "", "with_units_from_data"], [29, 3, 1, "", "without_units_for_data"], [29, 2, 1, "", "z_0"]], "gammapy.astro.population.FaucherKaspi2006": [[30, 3, 1, "", "__call__"], [30, 2, 1, "", "amplitude"], [30, 2, 1, "", "bbox_with_units"], [30, 2, 1, "", "bounding_box"], [30, 2, 1, "", "bounds"], [30, 3, 1, "", "coerce_units"], [30, 2, 1, "", "col_fit_deriv"], [30, 3, 1, "", "copy"], [30, 2, 1, "", "cov_matrix"], [30, 3, 1, "", "deepcopy"], [30, 2, 1, "", "eqcons"], [30, 3, 1, "", "evaluate"], [30, 2, 1, "", "evolved"], [30, 2, 1, "", "fit_deriv"], [30, 2, 1, "", "fittable"], [30, 2, 1, "", "fixed"], [30, 3, 1, "", "get_bounding_box"], [30, 3, 1, "", "has_inverse"], [30, 2, 1, "", "has_user_bounding_box"], [30, 2, 1, "", "has_user_inverse"], [30, 2, 1, "", "ineqcons"], [30, 3, 1, "", "input_shape"], [30, 2, 1, "", "input_units"], [30, 2, 1, "", "input_units_allow_dimensionless"], [30, 2, 1, "", "input_units_equivalencies"], [30, 2, 1, "", "input_units_strict"], [30, 2, 1, "", "inputs"], [30, 2, 1, "", "inverse"], [30, 2, 1, "", "linear"], [30, 2, 1, "", "meta"], [30, 2, 1, "", "model_constraints"], [30, 2, 1, "", "model_set_axis"], [30, 2, 1, "", "n_inputs"], [30, 2, 1, "", "n_outputs"], [30, 2, 1, "", "n_submodels"], [30, 2, 1, "", "name"], [30, 3, 1, "", "output_units"], [30, 2, 1, "", "outputs"], [30, 2, 1, "", "param_names"], [30, 2, 1, "", "param_sets"], [30, 2, 1, "", "parameter_constraints"], [30, 2, 1, "", "parameters"], [30, 3, 1, "", "prepare_inputs"], [30, 3, 1, "", "prepare_outputs"], [30, 2, 1, "", "r_0"], [30, 3, 1, "", "rename"], [30, 3, 1, "", "render"], [30, 2, 1, "", "return_units"], [30, 2, 1, "", "separable"], [30, 3, 1, "", "set_slice_args"], [30, 2, 1, "", "sigma"], [30, 2, 1, "", "standard_broadcasting"], [30, 2, 1, "", "stds"], [30, 3, 1, "", "strip_units_from_tree"], [30, 3, 1, "", "sum_of_implicit_terms"], [30, 2, 1, "", "sync_constraints"], [30, 2, 1, "", "tied"], [30, 2, 1, "", "uses_quantity"], [30, 3, 1, "", "with_units_from_data"], [30, 3, 1, "", "without_units_for_data"]], "gammapy.astro.population.FaucherKaspi2006VelocityBimodal": [[31, 3, 1, "", "__call__"], [31, 2, 1, "", "amplitude"], [31, 2, 1, "", "bbox_with_units"], [31, 2, 1, "", "bounding_box"], [31, 2, 1, "", "bounds"], [31, 3, 1, "", "coerce_units"], [31, 2, 1, "", "col_fit_deriv"], [31, 3, 1, "", "copy"], [31, 2, 1, "", "cov_matrix"], [31, 3, 1, "", "deepcopy"], [31, 2, 1, "", "eqcons"], [31, 3, 1, "", "evaluate"], [31, 2, 1, "", "fit_deriv"], [31, 2, 1, "", "fittable"], [31, 2, 1, "", "fixed"], [31, 3, 1, "", "get_bounding_box"], [31, 3, 1, "", "has_inverse"], [31, 2, 1, "", "has_user_bounding_box"], [31, 2, 1, "", "has_user_inverse"], [31, 2, 1, "", "ineqcons"], [31, 3, 1, "", "input_shape"], [31, 2, 1, "", "input_units"], [31, 2, 1, "", "input_units_allow_dimensionless"], [31, 2, 1, "", "input_units_equivalencies"], [31, 2, 1, "", "input_units_strict"], [31, 2, 1, "", "inputs"], [31, 2, 1, "", "inverse"], [31, 2, 1, "", "linear"], [31, 2, 1, "", "meta"], [31, 2, 1, "", "model_constraints"], [31, 2, 1, "", "model_set_axis"], [31, 2, 1, "", "n_inputs"], [31, 2, 1, "", "n_outputs"], [31, 2, 1, "", "n_submodels"], [31, 2, 1, "", "name"], [31, 3, 1, "", "output_units"], [31, 2, 1, "", "outputs"], [31, 2, 1, "", "param_names"], [31, 2, 1, "", "param_sets"], [31, 2, 1, "", "parameter_constraints"], [31, 2, 1, "", "parameters"], [31, 3, 1, "", "prepare_inputs"], [31, 3, 1, "", "prepare_outputs"], [31, 3, 1, "", "rename"], [31, 3, 1, "", "render"], [31, 2, 1, "", "return_units"], [31, 2, 1, "", "separable"], [31, 3, 1, "", "set_slice_args"], [31, 2, 1, "", "sigma_1"], [31, 2, 1, "", "sigma_2"], [31, 2, 1, "", "standard_broadcasting"], [31, 2, 1, "", "stds"], [31, 3, 1, "", "strip_units_from_tree"], [31, 3, 1, "", "sum_of_implicit_terms"], [31, 2, 1, "", "sync_constraints"], [31, 2, 1, "", "tied"], [31, 2, 1, "", "uses_quantity"], [31, 2, 1, "", "w"], [31, 3, 1, "", "with_units_from_data"], [31, 3, 1, "", "without_units_for_data"]], "gammapy.astro.population.FaucherKaspi2006VelocityMaxwellian": [[32, 3, 1, "", "__call__"], [32, 2, 1, "", "amplitude"], [32, 2, 1, "", "bbox_with_units"], [32, 2, 1, "", "bounding_box"], [32, 2, 1, "", "bounds"], [32, 3, 1, "", "coerce_units"], [32, 2, 1, "", "col_fit_deriv"], [32, 3, 1, "", "copy"], [32, 2, 1, "", "cov_matrix"], [32, 3, 1, "", "deepcopy"], [32, 2, 1, "", "eqcons"], [32, 3, 1, "", "evaluate"], [32, 2, 1, "", "fit_deriv"], [32, 2, 1, "", "fittable"], [32, 2, 1, "", "fixed"], [32, 3, 1, "", "get_bounding_box"], [32, 3, 1, "", "has_inverse"], [32, 2, 1, "", "has_user_bounding_box"], [32, 2, 1, "", "has_user_inverse"], [32, 2, 1, "", "ineqcons"], [32, 3, 1, "", "input_shape"], [32, 2, 1, "", "input_units"], [32, 2, 1, "", "input_units_allow_dimensionless"], [32, 2, 1, "", "input_units_equivalencies"], [32, 2, 1, "", "input_units_strict"], [32, 2, 1, "", "inputs"], [32, 2, 1, "", "inverse"], [32, 2, 1, "", "linear"], [32, 2, 1, "", "meta"], [32, 2, 1, "", "model_constraints"], [32, 2, 1, "", "model_set_axis"], [32, 2, 1, "", "n_inputs"], [32, 2, 1, "", "n_outputs"], [32, 2, 1, "", "n_submodels"], [32, 2, 1, "", "name"], [32, 3, 1, "", "output_units"], [32, 2, 1, "", "outputs"], [32, 2, 1, "", "param_names"], [32, 2, 1, "", "param_sets"], [32, 2, 1, "", "parameter_constraints"], [32, 2, 1, "", "parameters"], [32, 3, 1, "", "prepare_inputs"], [32, 3, 1, "", "prepare_outputs"], [32, 3, 1, "", "rename"], [32, 3, 1, "", "render"], [32, 2, 1, "", "return_units"], [32, 2, 1, "", "separable"], [32, 3, 1, "", "set_slice_args"], [32, 2, 1, "", "sigma"], [32, 2, 1, "", "standard_broadcasting"], [32, 2, 1, "", "stds"], [32, 3, 1, "", "strip_units_from_tree"], [32, 3, 1, "", "sum_of_implicit_terms"], [32, 2, 1, "", "sync_constraints"], [32, 2, 1, "", "tied"], [32, 2, 1, "", "uses_quantity"], [32, 3, 1, "", "with_units_from_data"], [32, 3, 1, "", "without_units_for_data"]], "gammapy.astro.population.FaucherSpiral": [[33, 3, 1, "", "__call__"], [33, 2, 1, "", "k"], [33, 2, 1, "", "r_0"], [33, 3, 1, "", "radius"], [33, 2, 1, "", "spiralarms"], [33, 3, 1, "", "theta"], [33, 2, 1, "", "theta_0"], [33, 3, 1, "", "xy_position"]], "gammapy.astro.population.LogSpiral": [[34, 3, 1, "", "radius"], [34, 3, 1, "", "theta"], [34, 3, 1, "", "xy_position"]], "gammapy.astro.population.Lorimer2006": [[35, 2, 1, "", "B"], [35, 2, 1, "", "C"], [35, 3, 1, "", "__call__"], [35, 2, 1, "", "amplitude"], [35, 2, 1, "", "bbox_with_units"], [35, 2, 1, "", "bounding_box"], [35, 2, 1, "", "bounds"], [35, 3, 1, "", "coerce_units"], [35, 2, 1, "", "col_fit_deriv"], [35, 3, 1, "", "copy"], [35, 2, 1, "", "cov_matrix"], [35, 3, 1, "", "deepcopy"], [35, 2, 1, "", "eqcons"], [35, 3, 1, "", "evaluate"], [35, 2, 1, "", "evolved"], [35, 2, 1, "", "fit_deriv"], [35, 2, 1, "", "fittable"], [35, 2, 1, "", "fixed"], [35, 3, 1, "", "get_bounding_box"], [35, 3, 1, "", "has_inverse"], [35, 2, 1, "", "has_user_bounding_box"], [35, 2, 1, "", "has_user_inverse"], [35, 2, 1, "", "ineqcons"], [35, 3, 1, "", "input_shape"], [35, 2, 1, "", "input_units"], [35, 2, 1, "", "input_units_allow_dimensionless"], [35, 2, 1, "", "input_units_equivalencies"], [35, 2, 1, "", "input_units_strict"], [35, 2, 1, "", "inputs"], [35, 2, 1, "", "inverse"], [35, 2, 1, "", "linear"], [35, 2, 1, "", "meta"], [35, 2, 1, "", "model_constraints"], [35, 2, 1, "", "model_set_axis"], [35, 2, 1, "", "n_inputs"], [35, 2, 1, "", "n_outputs"], [35, 2, 1, "", "n_submodels"], [35, 2, 1, "", "name"], [35, 3, 1, "", "output_units"], [35, 2, 1, "", "outputs"], [35, 2, 1, "", "param_names"], [35, 2, 1, "", "param_sets"], [35, 2, 1, "", "parameter_constraints"], [35, 2, 1, "", "parameters"], [35, 3, 1, "", "prepare_inputs"], [35, 3, 1, "", "prepare_outputs"], [35, 3, 1, "", "rename"], [35, 3, 1, "", "render"], [35, 2, 1, "", "return_units"], [35, 2, 1, "", "separable"], [35, 3, 1, "", "set_slice_args"], [35, 2, 1, "", "standard_broadcasting"], [35, 2, 1, "", "stds"], [35, 3, 1, "", "strip_units_from_tree"], [35, 3, 1, "", "sum_of_implicit_terms"], [35, 2, 1, "", "sync_constraints"], [35, 2, 1, "", "tied"], [35, 2, 1, "", "uses_quantity"], [35, 3, 1, "", "with_units_from_data"], [35, 3, 1, "", "without_units_for_data"]], "gammapy.astro.population.Paczynski1990": [[36, 3, 1, "", "__call__"], [36, 2, 1, "", "amplitude"], [36, 2, 1, "", "bbox_with_units"], [36, 2, 1, "", "bounding_box"], [36, 2, 1, "", "bounds"], [36, 3, 1, "", "coerce_units"], [36, 2, 1, "", "col_fit_deriv"], [36, 3, 1, "", "copy"], [36, 2, 1, "", "cov_matrix"], [36, 3, 1, "", "deepcopy"], [36, 2, 1, "", "eqcons"], [36, 3, 1, "", "evaluate"], [36, 2, 1, "", "evolved"], [36, 2, 1, "", "fit_deriv"], [36, 2, 1, "", "fittable"], [36, 2, 1, "", "fixed"], [36, 3, 1, "", "get_bounding_box"], [36, 3, 1, "", "has_inverse"], [36, 2, 1, "", "has_user_bounding_box"], [36, 2, 1, "", "has_user_inverse"], [36, 2, 1, "", "ineqcons"], [36, 3, 1, "", "input_shape"], [36, 2, 1, "", "input_units"], [36, 2, 1, "", "input_units_allow_dimensionless"], [36, 2, 1, "", "input_units_equivalencies"], [36, 2, 1, "", "input_units_strict"], [36, 2, 1, "", "inputs"], [36, 2, 1, "", "inverse"], [36, 2, 1, "", "linear"], [36, 2, 1, "", "meta"], [36, 2, 1, "", "model_constraints"], [36, 2, 1, "", "model_set_axis"], [36, 2, 1, "", "n_inputs"], [36, 2, 1, "", "n_outputs"], [36, 2, 1, "", "n_submodels"], [36, 2, 1, "", "name"], [36, 3, 1, "", "output_units"], [36, 2, 1, "", "outputs"], [36, 2, 1, "", "param_names"], [36, 2, 1, "", "param_sets"], [36, 2, 1, "", "parameter_constraints"], [36, 2, 1, "", "parameters"], [36, 3, 1, "", "prepare_inputs"], [36, 3, 1, "", "prepare_outputs"], [36, 2, 1, "", "r_exp"], [36, 3, 1, "", "rename"], [36, 3, 1, "", "render"], [36, 2, 1, "", "return_units"], [36, 2, 1, "", "separable"], [36, 3, 1, "", "set_slice_args"], [36, 2, 1, "", "standard_broadcasting"], [36, 2, 1, "", "stds"], [36, 3, 1, "", "strip_units_from_tree"], [36, 3, 1, "", "sum_of_implicit_terms"], [36, 2, 1, "", "sync_constraints"], [36, 2, 1, "", "tied"], [36, 2, 1, "", "uses_quantity"], [36, 3, 1, "", "with_units_from_data"], [36, 3, 1, "", "without_units_for_data"]], "gammapy.astro.population.Paczynski1990Velocity": [[37, 3, 1, "", "__call__"], [37, 2, 1, "", "amplitude"], [37, 2, 1, "", "bbox_with_units"], [37, 2, 1, "", "bounding_box"], [37, 2, 1, "", "bounds"], [37, 3, 1, "", "coerce_units"], [37, 2, 1, "", "col_fit_deriv"], [37, 3, 1, "", "copy"], [37, 2, 1, "", "cov_matrix"], [37, 3, 1, "", "deepcopy"], [37, 2, 1, "", "eqcons"], [37, 3, 1, "", "evaluate"], [37, 2, 1, "", "fit_deriv"], [37, 2, 1, "", "fittable"], [37, 2, 1, "", "fixed"], [37, 3, 1, "", "get_bounding_box"], [37, 3, 1, "", "has_inverse"], [37, 2, 1, "", "has_user_bounding_box"], [37, 2, 1, "", "has_user_inverse"], [37, 2, 1, "", "ineqcons"], [37, 3, 1, "", "input_shape"], [37, 2, 1, "", "input_units"], [37, 2, 1, "", "input_units_allow_dimensionless"], [37, 2, 1, "", "input_units_equivalencies"], [37, 2, 1, "", "input_units_strict"], [37, 2, 1, "", "inputs"], [37, 2, 1, "", "inverse"], [37, 2, 1, "", "linear"], [37, 2, 1, "", "meta"], [37, 2, 1, "", "model_constraints"], [37, 2, 1, "", "model_set_axis"], [37, 2, 1, "", "n_inputs"], [37, 2, 1, "", "n_outputs"], [37, 2, 1, "", "n_submodels"], [37, 2, 1, "", "name"], [37, 3, 1, "", "output_units"], [37, 2, 1, "", "outputs"], [37, 2, 1, "", "param_names"], [37, 2, 1, "", "param_sets"], [37, 2, 1, "", "parameter_constraints"], [37, 2, 1, "", "parameters"], [37, 3, 1, "", "prepare_inputs"], [37, 3, 1, "", "prepare_outputs"], [37, 3, 1, "", "rename"], [37, 3, 1, "", "render"], [37, 2, 1, "", "return_units"], [37, 2, 1, "", "separable"], [37, 3, 1, "", "set_slice_args"], [37, 2, 1, "", "standard_broadcasting"], [37, 2, 1, "", "stds"], [37, 3, 1, "", "strip_units_from_tree"], [37, 3, 1, "", "sum_of_implicit_terms"], [37, 2, 1, "", "sync_constraints"], [37, 2, 1, "", "tied"], [37, 2, 1, "", "uses_quantity"], [37, 2, 1, "", "v_0"], [37, 3, 1, "", "with_units_from_data"], [37, 3, 1, "", "without_units_for_data"]], "gammapy.astro.population.ValleeSpiral": [[38, 2, 1, "", "bar_radius"], [38, 2, 1, "", "m"], [38, 2, 1, "", "p"], [38, 2, 1, "", "r_0"], [38, 2, 1, "", "r_sun"], [38, 3, 1, "", "radius"], [38, 2, 1, "", "spiralarms"], [38, 3, 1, "", "theta"], [38, 2, 1, "", "theta_0"], [38, 3, 1, "", "xy_position"]], "gammapy.astro.population.YusifovKucuk2004": [[39, 3, 1, "", "__call__"], [39, 2, 1, "", "a"], [39, 2, 1, "", "amplitude"], [39, 2, 1, "", "b"], [39, 2, 1, "", "bbox_with_units"], [39, 2, 1, "", "bounding_box"], [39, 2, 1, "", "bounds"], [39, 3, 1, "", "coerce_units"], [39, 2, 1, "", "col_fit_deriv"], [39, 3, 1, "", "copy"], [39, 2, 1, "", "cov_matrix"], [39, 3, 1, "", "deepcopy"], [39, 2, 1, "", "eqcons"], [39, 3, 1, "", "evaluate"], [39, 2, 1, "", "evolved"], [39, 2, 1, "", "fit_deriv"], [39, 2, 1, "", "fittable"], [39, 2, 1, "", "fixed"], [39, 3, 1, "", "get_bounding_box"], [39, 3, 1, "", "has_inverse"], [39, 2, 1, "", "has_user_bounding_box"], [39, 2, 1, "", "has_user_inverse"], [39, 2, 1, "", "ineqcons"], [39, 3, 1, "", "input_shape"], [39, 2, 1, "", "input_units"], [39, 2, 1, "", "input_units_allow_dimensionless"], [39, 2, 1, "", "input_units_equivalencies"], [39, 2, 1, "", "input_units_strict"], [39, 2, 1, "", "inputs"], [39, 2, 1, "", "inverse"], [39, 2, 1, "", "linear"], [39, 2, 1, "", "meta"], [39, 2, 1, "", "model_constraints"], [39, 2, 1, "", "model_set_axis"], [39, 2, 1, "", "n_inputs"], [39, 2, 1, "", "n_outputs"], [39, 2, 1, "", "n_submodels"], [39, 2, 1, "", "name"], [39, 3, 1, "", "output_units"], [39, 2, 1, "", "outputs"], [39, 2, 1, "", "param_names"], [39, 2, 1, "", "param_sets"], [39, 2, 1, "", "parameter_constraints"], [39, 2, 1, "", "parameters"], [39, 3, 1, "", "prepare_inputs"], [39, 3, 1, "", "prepare_outputs"], [39, 2, 1, "", "r_1"], [39, 3, 1, "", "rename"], [39, 3, 1, "", "render"], [39, 2, 1, "", "return_units"], [39, 2, 1, "", "separable"], [39, 3, 1, "", "set_slice_args"], [39, 2, 1, "", "standard_broadcasting"], [39, 2, 1, "", "stds"], [39, 3, 1, "", "strip_units_from_tree"], [39, 3, 1, "", "sum_of_implicit_terms"], [39, 2, 1, "", "sync_constraints"], [39, 2, 1, "", "tied"], [39, 2, 1, "", "uses_quantity"], [39, 3, 1, "", "with_units_from_data"], [39, 3, 1, "", "without_units_for_data"]], "gammapy.astro.population.YusifovKucuk2004B": [[40, 3, 1, "", "__call__"], [40, 2, 1, "", "a"], [40, 2, 1, "", "amplitude"], [40, 2, 1, "", "b"], [40, 2, 1, "", "bbox_with_units"], [40, 2, 1, "", "bounding_box"], [40, 2, 1, "", "bounds"], [40, 3, 1, "", "coerce_units"], [40, 2, 1, "", "col_fit_deriv"], [40, 3, 1, "", "copy"], [40, 2, 1, "", "cov_matrix"], [40, 3, 1, "", "deepcopy"], [40, 2, 1, "", "eqcons"], [40, 3, 1, "", "evaluate"], [40, 2, 1, "", "evolved"], [40, 2, 1, "", "fit_deriv"], [40, 2, 1, "", "fittable"], [40, 2, 1, "", "fixed"], [40, 3, 1, "", "get_bounding_box"], [40, 3, 1, "", "has_inverse"], [40, 2, 1, "", "has_user_bounding_box"], [40, 2, 1, "", "has_user_inverse"], [40, 2, 1, "", "ineqcons"], [40, 3, 1, "", "input_shape"], [40, 2, 1, "", "input_units"], [40, 2, 1, "", "input_units_allow_dimensionless"], [40, 2, 1, "", "input_units_equivalencies"], [40, 2, 1, "", "input_units_strict"], [40, 2, 1, "", "inputs"], [40, 2, 1, "", "inverse"], [40, 2, 1, "", "linear"], [40, 2, 1, "", "meta"], [40, 2, 1, "", "model_constraints"], [40, 2, 1, "", "model_set_axis"], [40, 2, 1, "", "n_inputs"], [40, 2, 1, "", "n_outputs"], [40, 2, 1, "", "n_submodels"], [40, 2, 1, "", "name"], [40, 3, 1, "", "output_units"], [40, 2, 1, "", "outputs"], [40, 2, 1, "", "param_names"], [40, 2, 1, "", "param_sets"], [40, 2, 1, "", "parameter_constraints"], [40, 2, 1, "", "parameters"], [40, 3, 1, "", "prepare_inputs"], [40, 3, 1, "", "prepare_outputs"], [40, 3, 1, "", "rename"], [40, 3, 1, "", "render"], [40, 2, 1, "", "return_units"], [40, 2, 1, "", "separable"], [40, 3, 1, "", "set_slice_args"], [40, 2, 1, "", "standard_broadcasting"], [40, 2, 1, "", "stds"], [40, 3, 1, "", "strip_units_from_tree"], [40, 3, 1, "", "sum_of_implicit_terms"], [40, 2, 1, "", "sync_constraints"], [40, 2, 1, "", "tied"], [40, 2, 1, "", "uses_quantity"], [40, 3, 1, "", "with_units_from_data"], [40, 3, 1, "", "without_units_for_data"]], "gammapy.astro.source": [[50, 1, 1, "", "PWN"], [51, 1, 1, "", "Pulsar"], [52, 1, 1, "", "SNR"], [53, 1, 1, "", "SNRTrueloveMcKee"], [54, 1, 1, "", "SimplePulsar"]], "gammapy.astro.source.PWN": [[50, 3, 1, "", "magnetic_field"], [50, 3, 1, "", "radius"]], "gammapy.astro.source.Pulsar": [[51, 3, 1, "", "energy_integrated"], [51, 3, 1, "", "luminosity_spindown"], [51, 3, 1, "", "magnetic_field"], [51, 3, 1, "", "period"], [51, 3, 1, "", "period_dot"], [51, 3, 1, "", "tau"]], "gammapy.astro.source.SNR": [[52, 3, 1, "", "luminosity_tev"], [52, 3, 1, "", "radius"], [52, 3, 1, "", "radius_inner"], [52, 2, 1, "", "sedov_taylor_begin"], [52, 2, 1, "", "sedov_taylor_end"]], "gammapy.astro.source.SNRTrueloveMcKee": [[53, 3, 1, "", "luminosity_tev"], [53, 3, 1, "", "radius"], [53, 3, 1, "", "radius_inner"], [53, 3, 1, "", "radius_reverse_shock"], [53, 2, 1, "", "sedov_taylor_begin"], [53, 2, 1, "", "sedov_taylor_end"]], "gammapy.astro.source.SimplePulsar": [[54, 2, 1, "", "luminosity_spindown"], [54, 2, 1, "", "magnetic_field"], [54, 2, 1, "", "tau"]], "gammapy.catalog": [[55, 5, 1, "", "CATALOG_REGISTRY"], [56, 1, 1, "", "SourceCatalog"], [57, 1, 1, "", "SourceCatalog1LHAASO"], [58, 1, 1, "", "SourceCatalog2FHL"], [59, 1, 1, "", "SourceCatalog2HWC"], [60, 1, 1, "", "SourceCatalog3FGL"], [61, 1, 1, "", "SourceCatalog3FHL"], [62, 1, 1, "", "SourceCatalog3HWC"], [63, 1, 1, "", "SourceCatalog4FGL"], [64, 1, 1, "", "SourceCatalogGammaCat"], [65, 1, 1, "", "SourceCatalogHGPS"], [66, 1, 1, "", "SourceCatalogLargeScaleHGPS"], [67, 1, 1, "", "SourceCatalogObject"], [68, 1, 1, "", "SourceCatalogObject1LHAASO"], [69, 1, 1, "", "SourceCatalogObject2FHL"], [70, 1, 1, "", "SourceCatalogObject2HWC"], [71, 1, 1, "", "SourceCatalogObject3FGL"], [72, 1, 1, "", "SourceCatalogObject3FHL"], [73, 1, 1, "", "SourceCatalogObject3HWC"], [74, 1, 1, "", "SourceCatalogObject4FGL"], [75, 1, 1, "", "SourceCatalogObjectGammaCat"], [76, 1, 1, "", "SourceCatalogObjectHGPS"], [77, 1, 1, "", "SourceCatalogObjectHGPSComponent"]], "gammapy.catalog.SourceCatalog": [[56, 3, 1, "", "description"], [56, 2, 1, "", "positions"], [56, 3, 1, "", "row_index"], [56, 3, 1, "", "source_name"], [56, 2, 1, "", "tag"], [56, 3, 1, "", "to_models"]], "gammapy.catalog.SourceCatalog1LHAASO": [[57, 2, 1, "", "description"], [57, 2, 1, "", "positions"], [57, 3, 1, "", "row_index"], [57, 3, 1, "", "source_name"], [57, 2, 1, "", "tag"], [57, 3, 1, "", "to_models"]], "gammapy.catalog.SourceCatalog2FHL": [[58, 2, 1, "", "description"], [58, 2, 1, "", "positions"], [58, 3, 1, "", "row_index"], [58, 3, 1, "", "source_name"], [58, 2, 1, "", "tag"], [58, 3, 1, "", "to_models"]], "gammapy.catalog.SourceCatalog2HWC": [[59, 2, 1, "", "description"], [59, 2, 1, "", "positions"], [59, 3, 1, "", "row_index"], [59, 3, 1, "", "source_name"], [59, 2, 1, "", "tag"], [59, 3, 1, "", "to_models"]], "gammapy.catalog.SourceCatalog3FGL": [[60, 2, 1, "", "description"], [60, 2, 1, "", "positions"], [60, 3, 1, "", "row_index"], [60, 3, 1, "", "source_name"], [60, 2, 1, "", "tag"], [60, 3, 1, "", "to_models"]], "gammapy.catalog.SourceCatalog3FHL": [[61, 2, 1, "", "description"], [61, 2, 1, "", "positions"], [61, 3, 1, "", "row_index"], [61, 3, 1, "", "source_name"], [61, 2, 1, "", "tag"], [61, 3, 1, "", "to_models"]], "gammapy.catalog.SourceCatalog3HWC": [[62, 2, 1, "", "description"], [62, 2, 1, "", "positions"], [62, 3, 1, "", "row_index"], [62, 3, 1, "", "source_name"], [62, 2, 1, "", "tag"], [62, 3, 1, "", "to_models"]], "gammapy.catalog.SourceCatalog4FGL": [[63, 2, 1, "", "description"], [63, 2, 1, "", "positions"], [63, 3, 1, "", "row_index"], [63, 3, 1, "", "source_name"], [63, 2, 1, "", "tag"], [63, 3, 1, "", "to_models"]], "gammapy.catalog.SourceCatalogGammaCat": [[64, 2, 1, "", "description"], [64, 2, 1, "", "positions"], [64, 3, 1, "", "row_index"], [64, 3, 1, "", "source_name"], [64, 2, 1, "", "tag"], [64, 3, 1, "", "to_models"]], "gammapy.catalog.SourceCatalogHGPS": [[65, 2, 1, "", "description"], [65, 3, 1, "", "gaussian_component"], [65, 2, 1, "", "large_scale_component"], [65, 2, 1, "", "positions"], [65, 3, 1, "", "row_index"], [65, 3, 1, "", "source_name"], [65, 2, 1, "", "table_associations"], [65, 2, 1, "", "table_components"], [65, 2, 1, "", "table_identifications"], [65, 2, 1, "", "table_large_scale_component"], [65, 2, 1, "", "tag"], [65, 3, 1, "", "to_models"]], "gammapy.catalog.SourceCatalogLargeScaleHGPS": [[66, 3, 1, "", "evaluate"], [66, 3, 1, "", "peak_brightness"], [66, 3, 1, "", "peak_brightness_error"], [66, 3, 1, "", "peak_latitude"], [66, 3, 1, "", "peak_latitude_error"], [66, 3, 1, "", "width"], [66, 3, 1, "", "width_error"]], "gammapy.catalog.SourceCatalogObject": [[67, 2, 1, "", "name"], [67, 2, 1, "", "position"], [67, 2, 1, "", "row_index"]], "gammapy.catalog.SourceCatalogObject1LHAASO": [[68, 2, 1, "", "name"], [68, 2, 1, "", "position"], [68, 2, 1, "", "row_index"], [68, 3, 1, "", "sky_model"], [68, 3, 1, "", "spatial_model"], [68, 3, 1, "", "spectral_model"]], "gammapy.catalog.SourceCatalogObject2FHL": [[69, 2, 1, "", "asso"], [69, 2, 1, "", "energy_range"], [69, 2, 1, "", "flux_points"], [69, 2, 1, "", "flux_points_meta"], [69, 2, 1, "", "flux_points_table"], [69, 3, 1, "", "info"], [69, 2, 1, "", "is_pointlike"], [69, 2, 1, "", "name"], [69, 2, 1, "", "position"], [69, 2, 1, "", "row_index"], [69, 3, 1, "", "sky_model"], [69, 3, 1, "", "spatial_model"], [69, 3, 1, "", "spectral_model"]], "gammapy.catalog.SourceCatalogObject2HWC": [[70, 3, 1, "", "info"], [70, 2, 1, "", "n_models"], [70, 2, 1, "", "name"], [70, 2, 1, "", "position"], [70, 2, 1, "", "row_index"], [70, 3, 1, "", "sky_model"], [70, 3, 1, "", "spatial_model"], [70, 3, 1, "", "spectral_model"]], "gammapy.catalog.SourceCatalogObject3FGL": [[71, 2, 1, "", "asso"], [71, 2, 1, "", "energy_range"], [71, 2, 1, "", "flux_points"], [71, 2, 1, "", "flux_points_meta"], [71, 2, 1, "", "flux_points_table"], [71, 3, 1, "", "info"], [71, 2, 1, "", "is_pointlike"], [71, 3, 1, "", "lightcurve"], [71, 2, 1, "", "name"], [71, 2, 1, "", "position"], [71, 2, 1, "", "row_index"], [71, 3, 1, "", "sky_model"], [71, 3, 1, "", "spatial_model"], [71, 3, 1, "", "spectral_model"]], "gammapy.catalog.SourceCatalogObject3FHL": [[72, 2, 1, "", "asso"], [72, 2, 1, "", "energy_range"], [72, 2, 1, "", "flux_points"], [72, 2, 1, "", "flux_points_meta"], [72, 2, 1, "", "flux_points_table"], [72, 3, 1, "", "info"], [72, 2, 1, "", "is_pointlike"], [72, 2, 1, "", "name"], [72, 2, 1, "", "position"], [72, 2, 1, "", "row_index"], [72, 3, 1, "", "sky_model"], [72, 3, 1, "", "spatial_model"], [72, 3, 1, "", "spectral_model"]], "gammapy.catalog.SourceCatalogObject3HWC": [[73, 3, 1, "", "info"], [73, 2, 1, "", "is_pointlike"], [73, 2, 1, "", "n_models"], [73, 2, 1, "", "name"], [73, 2, 1, "", "position"], [73, 2, 1, "", "row_index"], [73, 3, 1, "", "sky_model"], [73, 3, 1, "", "spatial_model"], [73, 3, 1, "", "spectral_model"]], "gammapy.catalog.SourceCatalogObject4FGL": [[74, 2, 1, "", "asso"], [74, 2, 1, "", "flux_points"], [74, 2, 1, "", "flux_points_meta"], [74, 2, 1, "", "flux_points_table"], [74, 3, 1, "", "info"], [74, 2, 1, "", "is_pointlike"], [74, 3, 1, "", "lightcurve"], [74, 2, 1, "", "name"], [74, 2, 1, "", "position"], [74, 2, 1, "", "row_index"], [74, 3, 1, "", "sky_model"], [74, 3, 1, "", "spatial_model"], [74, 3, 1, "", "spectral_model"]], "gammapy.catalog.SourceCatalogObjectGammaCat": [[75, 2, 1, "", "flux_points"], [75, 2, 1, "", "flux_points_table"], [75, 3, 1, "", "info"], [75, 2, 1, "", "name"], [75, 2, 1, "", "position"], [75, 2, 1, "", "row_index"], [75, 3, 1, "", "sky_model"], [75, 3, 1, "", "spatial_model"], [75, 3, 1, "", "spectral_model"]], "gammapy.catalog.SourceCatalogObjectHGPS": [[76, 3, 1, "", "components_models"], [76, 2, 1, "", "energy_range"], [76, 2, 1, "", "flux_points"], [76, 2, 1, "", "flux_points_table"], [76, 3, 1, "", "info"], [76, 2, 1, "", "name"], [76, 2, 1, "", "position"], [76, 2, 1, "", "row_index"], [76, 3, 1, "", "sky_model"], [76, 3, 1, "", "spatial_model"], [76, 3, 1, "", "spectral_model"]], "gammapy.catalog.SourceCatalogObjectHGPSComponent": [[77, 2, 1, "", "name"], [77, 2, 1, "", "position"], [77, 2, 1, "", "row_index"], [77, 3, 1, "", "spatial_model"]], "gammapy.data": [[78, 1, 1, "", "DataStore"], [79, 1, 1, "", "EventList"], [80, 1, 1, "", "EventListMetaData"], [81, 1, 1, "", "FixedPointingInfo"], [82, 1, 1, "", "GTI"], [83, 1, 1, "", "HDUIndexTable"], [84, 1, 1, "", "Observation"], [85, 1, 1, "", "ObservationFilter"], [86, 1, 1, "", "ObservationTable"], [87, 1, 1, "", "Observations"], [88, 1, 1, "", "ObservationsEventsSampler"], [89, 1, 1, "", "PointingInfo"], [90, 1, 1, "", "PointingMode"], [91, 4, 1, "", "get_irfs_features"], [92, 5, 1, "", "observatory_locations"]], "gammapy.data.DataStore": [[78, 2, 1, "", "DEFAULT_HDU_TABLE"], [78, 2, 1, "", "DEFAULT_OBS_TABLE"], [78, 3, 1, "", "check"], [78, 3, 1, "", "copy_obs"], [78, 3, 1, "", "from_dir"], [78, 3, 1, "", "from_events_files"], [78, 3, 1, "", "from_file"], [78, 3, 1, "", "get_observations"], [78, 3, 1, "", "info"], [78, 3, 1, "", "obs"], [78, 2, 1, "", "obs_ids"]], "gammapy.data.EventList": [[79, 2, 1, "", "altaz"], [79, 2, 1, "", "altaz_frame"], [79, 2, 1, "", "altaz_from_table"], [79, 3, 1, "", "check"], [79, 3, 1, "", "copy"], [79, 2, 1, "", "energy"], [79, 3, 1, "", "from_stack"], [79, 2, 1, "", "galactic"], [79, 2, 1, "", "galactic_median"], [79, 2, 1, "", "is_pointed_observation"], [79, 3, 1, "", "map_coord"], [79, 2, 1, "", "observation_dead_time_fraction"], [79, 2, 1, "", "observation_live_time_duration"], [79, 2, 1, "", "observation_time_duration"], [79, 2, 1, "", "observation_time_start"], [79, 2, 1, "", "observation_time_stop"], [79, 2, 1, "", "observatory_earth_location"], [79, 2, 1, "", "offset"], [79, 2, 1, "", "offset_from_median"], [79, 3, 1, "", "peek"], [79, 3, 1, "", "plot_energy"], [79, 3, 1, "", "plot_energy_offset"], [79, 3, 1, "", "plot_image"], [79, 3, 1, "", "plot_offset2_distribution"], [79, 3, 1, "", "plot_time"], [79, 2, 1, "", "pointing_radec"], [79, 2, 1, "", "radec"], [79, 3, 1, "", "read"], [79, 3, 1, "", "select_energy"], [79, 3, 1, "", "select_mask"], [79, 3, 1, "", "select_offset"], [79, 3, 1, "", "select_parameter"], [79, 3, 1, "", "select_rad_max"], [79, 3, 1, "", "select_region"], [79, 3, 1, "", "select_row_subset"], [79, 3, 1, "", "select_time"], [79, 3, 1, "", "stack"], [79, 2, 1, "", "time"], [79, 2, 1, "", "time_ref"], [79, 3, 1, "", "to_table_hdu"], [79, 3, 1, "", "write"]], "gammapy.data.EventListMetaData": [[80, 3, 1, "", "construct"], [80, 3, 1, "", "copy"], [80, 3, 1, "", "dict"], [80, 3, 1, "", "from_header"], [80, 3, 1, "", "from_orm"], [80, 3, 1, "", "json"], [80, 2, 1, "", "model_computed_fields"], [80, 2, 1, "", "model_config"], [80, 3, 1, "", "model_construct"], [80, 3, 1, "", "model_copy"], [80, 3, 1, "", "model_dump"], [80, 3, 1, "", "model_dump_json"], [80, 2, 1, "", "model_extra"], [80, 2, 1, "", "model_fields"], [80, 2, 1, "", "model_fields_set"], [80, 3, 1, "", "model_json_schema"], [80, 3, 1, "", "model_parametrized_name"], [80, 3, 1, "", "model_post_init"], [80, 3, 1, "", "model_rebuild"], [80, 3, 1, "", "model_validate"], [80, 3, 1, "", "model_validate_json"], [80, 3, 1, "", "model_validate_strings"], [80, 3, 1, "", "parse_file"], [80, 3, 1, "", "parse_obj"], [80, 3, 1, "", "parse_raw"], [80, 3, 1, "", "schema"], [80, 3, 1, "", "schema_json"], [80, 2, 1, "", "tag"], [80, 3, 1, "", "to_header"], [80, 3, 1, "", "to_yaml"], [80, 3, 1, "", "update_forward_refs"], [80, 3, 1, "", "validate"]], "gammapy.data.FixedPointingInfo": [[81, 2, 1, "", "fixed_altaz"], [81, 2, 1, "", "fixed_icrs"], [81, 3, 1, "", "from_fits_header"], [81, 3, 1, "", "get_altaz"], [81, 3, 1, "", "get_icrs"], [81, 2, 1, "", "mode"], [81, 3, 1, "", "read"], [81, 3, 1, "", "to_fits_header"]], "gammapy.data.GTI": [[82, 3, 1, "", "copy"], [82, 3, 1, "", "create"], [82, 3, 1, "", "delete_interval"], [82, 3, 1, "", "from_stack"], [82, 3, 1, "", "from_table_hdu"], [82, 3, 1, "", "from_time_intervals"], [82, 3, 1, "", "group_table"], [82, 2, 1, "", "met_start"], [82, 2, 1, "", "met_stop"], [82, 3, 1, "", "read"], [82, 3, 1, "", "select_time"], [82, 3, 1, "", "stack"], [82, 2, 1, "", "time_delta"], [82, 2, 1, "", "time_intervals"], [82, 2, 1, "", "time_ref"], [82, 2, 1, "", "time_start"], [82, 2, 1, "", "time_stop"], [82, 2, 1, "", "time_sum"], [82, 3, 1, "", "to_table_hdu"], [82, 3, 1, "", "union"], [82, 3, 1, "", "write"]], "gammapy.data.HDUIndexTable": [[83, 2, 1, "", "ColumnClass"], [83, 2, 1, "", "VALID_HDU_CLASS"], [83, 2, 1, "", "VALID_HDU_TYPE"], [83, 3, 1, "", "add_column"], [83, 3, 1, "", "add_columns"], [83, 3, 1, "", "add_index"], [83, 3, 1, "", "add_row"], [83, 3, 1, "", "argsort"], [83, 3, 1, "", "as_array"], [83, 2, 1, "", "base_dir"], [83, 2, 1, "", "colnames"], [83, 3, 1, "", "convert_bytestring_to_unicode"], [83, 3, 1, "", "convert_unicode_to_bytestring"], [83, 3, 1, "", "copy"], [83, 2, 1, "", "dtype"], [83, 3, 1, "", "field"], [83, 3, 1, "", "filled"], [83, 3, 1, "", "from_pandas"], [83, 3, 1, "", "group_by"], [83, 2, 1, "", "groups"], [83, 2, 1, "", "has_masked_columns"], [83, 2, 1, "", "has_masked_values"], [83, 2, 1, "", "has_mixin_columns"], [83, 2, 1, "", "hdu_class_unique"], [83, 3, 1, "", "hdu_location"], [83, 2, 1, "", "hdu_type_unique"], [83, 2, 1, "", "iloc"], [83, 3, 1, "", "index_column"], [83, 3, 1, "", "index_mode"], [83, 2, 1, "", "indices"], [83, 2, 1, "", "info"], [83, 3, 1, "", "insert_row"], [83, 3, 1, "", "items"], [83, 3, 1, "", "itercols"], [83, 3, 1, "", "iterrows"], [83, 3, 1, "", "keep_columns"], [83, 3, 1, "", "keys"], [83, 2, 1, "", "loc"], [83, 2, 1, "", "loc_indices"], [83, 3, 1, "", "location_info"], [83, 2, 1, "", "mask"], [83, 2, 1, "", "masked"], [83, 2, 1, "", "meta"], [83, 3, 1, "", "more"], [83, 2, 1, "", "obs_id_unique"], [83, 3, 1, "", "pformat"], [83, 3, 1, "", "pformat_all"], [83, 3, 1, "", "pprint"], [83, 3, 1, "", "pprint_all"], [83, 2, 1, "", "pprint_exclude_names"], [83, 2, 1, "", "pprint_include_names"], [83, 3, 1, "", "read"], [83, 3, 1, "", "remove_column"], [83, 3, 1, "", "remove_columns"], [83, 3, 1, "", "remove_indices"], [83, 3, 1, "", "remove_row"], [83, 3, 1, "", "remove_rows"], [83, 3, 1, "", "rename_column"], [83, 3, 1, "", "rename_columns"], [83, 3, 1, "", "replace_column"], [83, 3, 1, "", "reverse"], [83, 3, 1, "", "round"], [83, 3, 1, "", "row_idx"], [83, 3, 1, "", "show_in_browser"], [83, 3, 1, "", "show_in_notebook"], [83, 3, 1, "", "sort"], [83, 3, 1, "", "summary"], [83, 3, 1, "", "to_pandas"], [83, 3, 1, "", "update"], [83, 3, 1, "", "values"], [83, 3, 1, "", "values_equal"], [83, 2, 1, "", "write"]], "gammapy.data.Observation": [[84, 2, 1, "", "aeff"], [84, 2, 1, "", "available_hdus"], [84, 2, 1, "", "available_irfs"], [84, 2, 1, "", "bkg"], [84, 3, 1, "", "check"], [84, 3, 1, "", "copy"], [84, 3, 1, "", "create"], [84, 2, 1, "", "edisp"], [84, 2, 1, "", "events"], [84, 3, 1, "", "get_pointing_altaz"], [84, 3, 1, "", "get_pointing_icrs"], [84, 2, 1, "", "gti"], [84, 2, 1, "", "meta"], [84, 2, 1, "", "muoneff"], [84, 2, 1, "", "obs_info"], [84, 2, 1, "", "observation_dead_time_fraction"], [84, 2, 1, "", "observation_live_time_duration"], [84, 2, 1, "", "observation_time_duration"], [84, 2, 1, "", "observatory_earth_location"], [84, 3, 1, "", "peek"], [84, 2, 1, "", "pointing"], [84, 2, 1, "", "psf"], [84, 2, 1, "", "rad_max"], [84, 3, 1, "", "read"], [84, 3, 1, "", "select_time"], [84, 2, 1, "", "target_radec"], [84, 2, 1, "", "tmid"], [84, 2, 1, "", "tstart"], [84, 2, 1, "", "tstop"], [84, 3, 1, "", "write"]], "gammapy.data.ObservationFilter": [[85, 2, 1, "", "EVENT_FILTER_TYPES"], [85, 3, 1, "", "copy"], [85, 3, 1, "", "filter_events"], [85, 3, 1, "", "filter_gti"], [85, 2, 1, "", "livetime_fraction"]], "gammapy.data.ObservationTable": [[86, 2, 1, "", "ColumnClass"], [86, 3, 1, "", "add_column"], [86, 3, 1, "", "add_columns"], [86, 3, 1, "", "add_index"], [86, 3, 1, "", "add_row"], [86, 3, 1, "", "argsort"], [86, 3, 1, "", "as_array"], [86, 2, 1, "", "colnames"], [86, 3, 1, "", "convert_bytestring_to_unicode"], [86, 3, 1, "", "convert_unicode_to_bytestring"], [86, 3, 1, "", "copy"], [86, 2, 1, "", "dtype"], [86, 3, 1, "", "field"], [86, 3, 1, "", "filled"], [86, 3, 1, "", "from_pandas"], [86, 3, 1, "", "group_by"], [86, 2, 1, "", "groups"], [86, 2, 1, "", "has_masked_columns"], [86, 2, 1, "", "has_masked_values"], [86, 2, 1, "", "has_mixin_columns"], [86, 2, 1, "", "iloc"], [86, 3, 1, "", "index_column"], [86, 3, 1, "", "index_mode"], [86, 2, 1, "", "indices"], [86, 2, 1, "", "info"], [86, 3, 1, "", "insert_row"], [86, 3, 1, "", "items"], [86, 3, 1, "", "itercols"], [86, 3, 1, "", "iterrows"], [86, 3, 1, "", "keep_columns"], [86, 3, 1, "", "keys"], [86, 2, 1, "", "loc"], [86, 2, 1, "", "loc_indices"], [86, 2, 1, "", "mask"], [86, 2, 1, "", "masked"], [86, 2, 1, "", "meta"], [86, 3, 1, "", "more"], [86, 3, 1, "", "pformat"], [86, 3, 1, "", "pformat_all"], [86, 2, 1, "", "pointing_galactic"], [86, 2, 1, "", "pointing_radec"], [86, 3, 1, "", "pprint"], [86, 3, 1, "", "pprint_all"], [86, 2, 1, "", "pprint_exclude_names"], [86, 2, 1, "", "pprint_include_names"], [86, 3, 1, "", "read"], [86, 3, 1, "", "remove_column"], [86, 3, 1, "", "remove_columns"], [86, 3, 1, "", "remove_indices"], [86, 3, 1, "", "remove_row"], [86, 3, 1, "", "remove_rows"], [86, 3, 1, "", "rename_column"], [86, 3, 1, "", "rename_columns"], [86, 3, 1, "", "replace_column"], [86, 3, 1, "", "reverse"], [86, 3, 1, "", "round"], [86, 3, 1, "", "select_obs_id"], [86, 3, 1, "", "select_observations"], [86, 3, 1, "", "select_range"], [86, 3, 1, "", "select_sky_circle"], [86, 3, 1, "", "select_time_range"], [86, 3, 1, "", "show_in_browser"], [86, 3, 1, "", "show_in_notebook"], [86, 3, 1, "", "sort"], [86, 3, 1, "", "summary"], [86, 2, 1, "", "time_ref"], [86, 2, 1, "", "time_start"], [86, 2, 1, "", "time_stop"], [86, 3, 1, "", "to_pandas"], [86, 3, 1, "", "update"], [86, 3, 1, "", "values"], [86, 3, 1, "", "values_equal"], [86, 2, 1, "", "write"]], "gammapy.data.Observations": [[87, 3, 1, "", "append"], [87, 3, 1, "", "clear"], [87, 3, 1, "", "count"], [87, 3, 1, "", "extend"], [87, 3, 1, "", "from_stack"], [87, 3, 1, "", "group_by_label"], [87, 2, 1, "", "ids"], [87, 3, 1, "", "in_memory_generator"], [87, 3, 1, "", "index"], [87, 3, 1, "", "insert"], [87, 3, 1, "", "pop"], [87, 3, 1, "", "remove"], [87, 3, 1, "", "reverse"], [87, 3, 1, "", "select_time"]], "gammapy.data.ObservationsEventsSampler": [[88, 2, 1, "", "n_jobs"], [88, 2, 1, "", "parallel_backend"], [88, 3, 1, "", "run"], [88, 3, 1, "", "simulate_observation"]], "gammapy.data.PointingInfo": [[89, 2, 1, "", "altaz"], [89, 2, 1, "", "altaz_frame"], [89, 2, 1, "", "altaz_from_table"], [89, 3, 1, "", "altaz_interpolate"], [89, 2, 1, "", "duration"], [89, 3, 1, "", "get_altaz"], [89, 3, 1, "", "get_icrs"], [89, 2, 1, "", "location"], [89, 2, 1, "", "radec"], [89, 3, 1, "", "read"], [89, 2, 1, "", "time"], [89, 2, 1, "", "time_ref"]], "gammapy.data.PointingMode": [[90, 2, 1, "", "DRIFT"], [90, 2, 1, "", "POINTING"]], "gammapy.datasets": [[93, 5, 1, "", "DATASET_REGISTRY"], [94, 1, 1, "", "Dataset"], [95, 1, 1, "", "Datasets"], [96, 1, 1, "", "FluxPointsDataset"], [97, 1, 1, "", "MapDataset"], [98, 1, 1, "", "MapDatasetEventSampler"], [99, 1, 1, "", "MapDatasetMetaData"], [100, 1, 1, "", "MapDatasetOnOff"], [101, 1, 1, "", "OGIPDatasetReader"], [102, 1, 1, "", "OGIPDatasetWriter"], [103, 1, 1, "", "ObservationEventSampler"], [104, 1, 1, "", "SpectrumDataset"], [105, 1, 1, "", "SpectrumDatasetOnOff"], [106, 4, 1, "", "apply_edisp"], [107, 4, 1, "", "create_map_dataset_from_observation"], [108, 4, 1, "", "create_map_dataset_geoms"], [109, 4, 1, "", "split_dataset"], [4, 0, 0, "-", "utils"]], "gammapy.datasets.Dataset": [[94, 3, 1, "", "copy"], [94, 2, 1, "", "mask"], [94, 2, 1, "", "name"], [94, 3, 1, "", "stat_array"], [94, 3, 1, "", "stat_sum"], [94, 2, 1, "", "tag"], [94, 3, 1, "", "to_dict"]], "gammapy.datasets.Datasets": [[95, 3, 1, "", "append"], [95, 3, 1, "", "clear"], [95, 2, 1, "", "contributes_to_stat"], [95, 3, 1, "", "copy"], [95, 3, 1, "", "count"], [95, 2, 1, "", "energy_axes_are_aligned"], [95, 2, 1, "", "energy_ranges"], [95, 3, 1, "", "extend"], [95, 2, 1, "", "gti"], [95, 3, 1, "", "index"], [95, 3, 1, "", "info_table"], [95, 3, 1, "", "insert"], [95, 2, 1, "", "is_all_same_energy_shape"], [95, 2, 1, "", "is_all_same_shape"], [95, 2, 1, "", "is_all_same_type"], [95, 2, 1, "", "meta_table"], [95, 2, 1, "", "models"], [95, 2, 1, "", "names"], [95, 2, 1, "", "parameters"], [95, 3, 1, "", "pop"], [95, 3, 1, "", "read"], [95, 3, 1, "", "remove"], [95, 3, 1, "", "reverse"], [95, 3, 1, "", "select_time"], [95, 3, 1, "", "slice_by_energy"], [95, 3, 1, "", "stack_reduce"], [95, 3, 1, "", "stat_sum"], [95, 3, 1, "", "to_spectrum_datasets"], [95, 3, 1, "", "write"]], "gammapy.datasets.FluxPointsDataset": [[96, 3, 1, "", "copy"], [96, 3, 1, "", "data_shape"], [96, 3, 1, "", "flux_pred"], [96, 3, 1, "", "from_dict"], [96, 2, 1, "", "gti"], [96, 2, 1, "", "mask"], [96, 2, 1, "", "models"], [96, 2, 1, "", "name"], [96, 3, 1, "", "plot_fit"], [96, 3, 1, "", "plot_residuals"], [96, 3, 1, "", "plot_spectrum"], [96, 3, 1, "", "read"], [96, 3, 1, "", "residuals"], [96, 3, 1, "", "stat_array"], [96, 3, 1, "", "stat_sum"], [96, 2, 1, "", "stat_type"], [96, 2, 1, "", "tag"], [96, 3, 1, "", "to_dict"], [96, 3, 1, "", "write"]], "gammapy.datasets.MapDataset": [[97, 2, 1, "", "background"], [97, 2, 1, "", "background_model"], [97, 3, 1, "", "copy"], [97, 2, 1, "", "counts"], [97, 3, 1, "", "create"], [97, 3, 1, "", "cutout"], [97, 2, 1, "", "data_shape"], [97, 3, 1, "", "downsample"], [97, 2, 1, "", "edisp"], [97, 2, 1, "", "energy_range"], [97, 2, 1, "", "energy_range_fit"], [97, 2, 1, "", "energy_range_safe"], [97, 2, 1, "", "energy_range_total"], [97, 2, 1, "", "evaluators"], [97, 2, 1, "", "excess"], [97, 2, 1, "", "exposure"], [97, 3, 1, "", "fake"], [97, 3, 1, "", "from_dict"], [97, 3, 1, "", "from_geoms"], [97, 3, 1, "", "from_hdulist"], [97, 2, 1, "", "geoms"], [97, 2, 1, "", "gti"], [97, 3, 1, "", "info_dict"], [97, 2, 1, "", "mask"], [97, 2, 1, "", "mask_fit"], [97, 2, 1, "", "mask_fit_image"], [97, 2, 1, "", "mask_image"], [97, 2, 1, "", "mask_safe"], [97, 2, 1, "", "mask_safe_edisp"], [97, 2, 1, "", "mask_safe_image"], [97, 2, 1, "", "mask_safe_psf"], [97, 2, 1, "", "meta"], [97, 2, 1, "", "meta_table"], [97, 2, 1, "", "models"], [97, 2, 1, "", "name"], [97, 3, 1, "", "npred"], [97, 3, 1, "", "npred_background"], [97, 3, 1, "", "npred_signal"], [97, 3, 1, "", "pad"], [97, 3, 1, "", "peek"], [97, 3, 1, "", "plot_residuals"], [97, 3, 1, "", "plot_residuals_spatial"], [97, 3, 1, "", "plot_residuals_spectral"], [97, 2, 1, "", "psf"], [97, 3, 1, "", "read"], [97, 3, 1, "", "resample_energy_axis"], [97, 3, 1, "", "reset_data_cache"], [97, 3, 1, "", "residuals"], [97, 3, 1, "", "slice_by_energy"], [97, 3, 1, "", "slice_by_idx"], [97, 3, 1, "", "stack"], [97, 3, 1, "", "stat_array"], [97, 3, 1, "", "stat_sum"], [97, 2, 1, "", "stat_type"], [97, 2, 1, "", "tag"], [97, 3, 1, "", "to_dict"], [97, 3, 1, "", "to_hdulist"], [97, 3, 1, "", "to_image"], [97, 3, 1, "", "to_masked"], [97, 3, 1, "", "to_region_map_dataset"], [97, 3, 1, "", "to_spectrum_dataset"], [97, 3, 1, "", "write"]], "gammapy.datasets.MapDatasetEventSampler": [[98, 3, 1, "", "event_det_coords"], [98, 3, 1, "", "event_list_meta"], [98, 3, 1, "", "run"], [98, 3, 1, "", "sample_background"], [98, 3, 1, "", "sample_edisp"], [98, 3, 1, "", "sample_psf"], [98, 3, 1, "", "sample_sources"]], "gammapy.datasets.MapDatasetMetaData": [[99, 3, 1, "", "construct"], [99, 3, 1, "", "copy"], [99, 3, 1, "", "dict"], [99, 3, 1, "", "from_header"], [99, 3, 1, "", "from_orm"], [99, 3, 1, "", "json"], [99, 2, 1, "", "model_computed_fields"], [99, 2, 1, "", "model_config"], [99, 3, 1, "", "model_construct"], [99, 3, 1, "", "model_copy"], [99, 3, 1, "", "model_dump"], [99, 3, 1, "", "model_dump_json"], [99, 2, 1, "", "model_extra"], [99, 2, 1, "", "model_fields"], [99, 2, 1, "", "model_fields_set"], [99, 3, 1, "", "model_json_schema"], [99, 3, 1, "", "model_parametrized_name"], [99, 3, 1, "", "model_post_init"], [99, 3, 1, "", "model_rebuild"], [99, 3, 1, "", "model_validate"], [99, 3, 1, "", "model_validate_json"], [99, 3, 1, "", "model_validate_strings"], [99, 3, 1, "", "parse_file"], [99, 3, 1, "", "parse_obj"], [99, 3, 1, "", "parse_raw"], [99, 3, 1, "", "schema"], [99, 3, 1, "", "schema_json"], [99, 3, 1, "", "stack"], [99, 2, 1, "", "tag"], [99, 3, 1, "", "to_header"], [99, 3, 1, "", "to_yaml"], [99, 3, 1, "", "update_forward_refs"], [99, 3, 1, "", "validate"]], "gammapy.datasets.MapDatasetOnOff": [[100, 2, 1, "", "alpha"], [100, 2, 1, "", "background"], [100, 2, 1, "", "background_model"], [100, 3, 1, "", "copy"], [100, 2, 1, "", "counts"], [100, 3, 1, "", "create"], [100, 3, 1, "", "cutout"], [100, 2, 1, "", "data_shape"], [100, 3, 1, "", "downsample"], [100, 2, 1, "", "edisp"], [100, 2, 1, "", "energy_range"], [100, 2, 1, "", "energy_range_fit"], [100, 2, 1, "", "energy_range_safe"], [100, 2, 1, "", "energy_range_total"], [100, 2, 1, "", "evaluators"], [100, 2, 1, "", "excess"], [100, 2, 1, "", "exposure"], [100, 3, 1, "", "fake"], [100, 3, 1, "", "from_dict"], [100, 3, 1, "", "from_geoms"], [100, 3, 1, "", "from_hdulist"], [100, 3, 1, "", "from_map_dataset"], [100, 2, 1, "", "geoms"], [100, 2, 1, "", "gti"], [100, 3, 1, "", "info_dict"], [100, 2, 1, "", "mask"], [100, 2, 1, "", "mask_fit"], [100, 2, 1, "", "mask_fit_image"], [100, 2, 1, "", "mask_image"], [100, 2, 1, "", "mask_safe"], [100, 2, 1, "", "mask_safe_edisp"], [100, 2, 1, "", "mask_safe_image"], [100, 2, 1, "", "mask_safe_psf"], [100, 2, 1, "", "meta"], [100, 2, 1, "", "meta_table"], [100, 2, 1, "", "models"], [100, 2, 1, "", "name"], [100, 3, 1, "", "npred"], [100, 3, 1, "", "npred_background"], [100, 3, 1, "", "npred_off"], [100, 3, 1, "", "npred_signal"], [100, 3, 1, "", "pad"], [100, 3, 1, "", "peek"], [100, 3, 1, "", "plot_residuals"], [100, 3, 1, "", "plot_residuals_spatial"], [100, 3, 1, "", "plot_residuals_spectral"], [100, 2, 1, "", "psf"], [100, 3, 1, "", "read"], [100, 3, 1, "", "resample_energy_axis"], [100, 3, 1, "", "reset_data_cache"], [100, 3, 1, "", "residuals"], [100, 3, 1, "", "slice_by_energy"], [100, 3, 1, "", "slice_by_idx"], [100, 3, 1, "", "stack"], [100, 3, 1, "", "stat_array"], [100, 3, 1, "", "stat_sum"], [100, 2, 1, "", "stat_type"], [100, 2, 1, "", "tag"], [100, 3, 1, "", "to_dict"], [100, 3, 1, "", "to_hdulist"], [100, 3, 1, "", "to_image"], [100, 3, 1, "", "to_map_dataset"], [100, 3, 1, "", "to_masked"], [100, 3, 1, "", "to_region_map_dataset"], [100, 3, 1, "", "to_spectrum_dataset"], [100, 3, 1, "", "write"]], "gammapy.datasets.OGIPDatasetReader": [[101, 3, 1, "", "get_filenames"], [101, 3, 1, "", "get_valid_path"], [101, 3, 1, "", "read"], [101, 3, 1, "", "read_arf"], [101, 3, 1, "", "read_bkg"], [101, 3, 1, "", "read_pha"], [101, 3, 1, "", "read_rmf"], [101, 2, 1, "", "tag"]], "gammapy.datasets.OGIPDatasetWriter": [[102, 3, 1, "", "get_filenames"], [102, 3, 1, "", "get_ogip_meta"], [102, 2, 1, "", "tag"], [102, 3, 1, "", "to_counts_hdulist"], [102, 3, 1, "", "write"], [102, 3, 1, "", "write_arf"], [102, 3, 1, "", "write_bkg"], [102, 3, 1, "", "write_pha"], [102, 3, 1, "", "write_rmf"]], "gammapy.datasets.ObservationEventSampler": [[103, 3, 1, "", "event_det_coords"], [103, 3, 1, "", "event_list_meta"], [103, 3, 1, "", "run"], [103, 3, 1, "", "sample_background"], [103, 3, 1, "", "sample_edisp"], [103, 3, 1, "", "sample_psf"], [103, 3, 1, "", "sample_sources"]], "gammapy.datasets.SpectrumDataset": [[104, 2, 1, "", "background"], [104, 2, 1, "", "background_model"], [104, 3, 1, "", "copy"], [104, 2, 1, "", "counts"], [104, 3, 1, "", "create"], [104, 3, 1, "", "cutout"], [104, 2, 1, "", "data_shape"], [104, 3, 1, "", "downsample"], [104, 2, 1, "", "edisp"], [104, 2, 1, "", "energy_range"], [104, 2, 1, "", "energy_range_fit"], [104, 2, 1, "", "energy_range_safe"], [104, 2, 1, "", "energy_range_total"], [104, 2, 1, "", "evaluators"], [104, 2, 1, "", "excess"], [104, 2, 1, "", "exposure"], [104, 3, 1, "", "fake"], [104, 3, 1, "", "from_dict"], [104, 3, 1, "", "from_geoms"], [104, 3, 1, "", "from_hdulist"], [104, 2, 1, "", "geoms"], [104, 2, 1, "", "gti"], [104, 3, 1, "", "info_dict"], [104, 2, 1, "", "mask"], [104, 2, 1, "", "mask_fit"], [104, 2, 1, "", "mask_fit_image"], [104, 2, 1, "", "mask_image"], [104, 2, 1, "", "mask_safe"], [104, 2, 1, "", "mask_safe_edisp"], [104, 2, 1, "", "mask_safe_image"], [104, 2, 1, "", "mask_safe_psf"], [104, 2, 1, "", "meta"], [104, 2, 1, "", "meta_table"], [104, 2, 1, "", "models"], [104, 2, 1, "", "name"], [104, 3, 1, "", "npred"], [104, 3, 1, "", "npred_background"], [104, 3, 1, "", "npred_signal"], [104, 3, 1, "", "pad"], [104, 3, 1, "", "peek"], [104, 3, 1, "", "plot_counts"], [104, 3, 1, "", "plot_excess"], [104, 3, 1, "", "plot_fit"], [104, 3, 1, "", "plot_masks"], [104, 3, 1, "", "plot_residuals"], [104, 3, 1, "", "plot_residuals_spatial"], [104, 3, 1, "", "plot_residuals_spectral"], [104, 2, 1, "", "psf"], [104, 3, 1, "", "read"], [104, 3, 1, "", "resample_energy_axis"], [104, 3, 1, "", "reset_data_cache"], [104, 3, 1, "", "residuals"], [104, 3, 1, "", "slice_by_energy"], [104, 3, 1, "", "slice_by_idx"], [104, 3, 1, "", "stack"], [104, 3, 1, "", "stat_array"], [104, 3, 1, "", "stat_sum"], [104, 2, 1, "", "stat_type"], [104, 2, 1, "", "tag"], [104, 3, 1, "", "to_dict"], [104, 3, 1, "", "to_hdulist"], [104, 3, 1, "", "to_image"], [104, 3, 1, "", "to_masked"], [104, 3, 1, "", "to_region_map_dataset"], [104, 3, 1, "", "to_spectrum_dataset"], [104, 3, 1, "", "write"]], "gammapy.datasets.SpectrumDatasetOnOff": [[105, 2, 1, "", "alpha"], [105, 2, 1, "", "background"], [105, 2, 1, "", "background_model"], [105, 3, 1, "", "copy"], [105, 2, 1, "", "counts"], [105, 3, 1, "", "create"], [105, 3, 1, "", "cutout"], [105, 2, 1, "", "data_shape"], [105, 3, 1, "", "downsample"], [105, 2, 1, "", "edisp"], [105, 2, 1, "", "energy_range"], [105, 2, 1, "", "energy_range_fit"], [105, 2, 1, "", "energy_range_safe"], [105, 2, 1, "", "energy_range_total"], [105, 2, 1, "", "evaluators"], [105, 2, 1, "", "excess"], [105, 2, 1, "", "exposure"], [105, 3, 1, "", "fake"], [105, 3, 1, "", "from_dict"], [105, 3, 1, "", "from_geoms"], [105, 3, 1, "", "from_hdulist"], [105, 3, 1, "", "from_map_dataset"], [105, 3, 1, "", "from_spectrum_dataset"], [105, 2, 1, "", "geoms"], [105, 2, 1, "", "gti"], [105, 3, 1, "", "info_dict"], [105, 2, 1, "", "mask"], [105, 2, 1, "", "mask_fit"], [105, 2, 1, "", "mask_fit_image"], [105, 2, 1, "", "mask_image"], [105, 2, 1, "", "mask_safe"], [105, 2, 1, "", "mask_safe_edisp"], [105, 2, 1, "", "mask_safe_image"], [105, 2, 1, "", "mask_safe_psf"], [105, 2, 1, "", "meta"], [105, 2, 1, "", "meta_table"], [105, 2, 1, "", "models"], [105, 2, 1, "", "name"], [105, 3, 1, "", "npred"], [105, 3, 1, "", "npred_background"], [105, 3, 1, "", "npred_off"], [105, 3, 1, "", "npred_signal"], [105, 3, 1, "", "pad"], [105, 3, 1, "", "peek"], [105, 3, 1, "", "plot_counts"], [105, 3, 1, "", "plot_excess"], [105, 3, 1, "", "plot_fit"], [105, 3, 1, "", "plot_masks"], [105, 3, 1, "", "plot_residuals"], [105, 3, 1, "", "plot_residuals_spatial"], [105, 3, 1, "", "plot_residuals_spectral"], [105, 2, 1, "", "psf"], [105, 3, 1, "", "read"], [105, 3, 1, "", "resample_energy_axis"], [105, 3, 1, "", "reset_data_cache"], [105, 3, 1, "", "residuals"], [105, 3, 1, "", "slice_by_energy"], [105, 3, 1, "", "slice_by_idx"], [105, 3, 1, "", "stack"], [105, 3, 1, "", "stat_array"], [105, 3, 1, "", "stat_sum"], [105, 2, 1, "", "stat_type"], [105, 2, 1, "", "tag"], [105, 3, 1, "", "to_dict"], [105, 3, 1, "", "to_hdulist"], [105, 3, 1, "", "to_image"], [105, 3, 1, "", "to_map_dataset"], [105, 3, 1, "", "to_masked"], [105, 3, 1, "", "to_region_map_dataset"], [105, 3, 1, "", "to_spectrum_dataset"], [105, 3, 1, "", "write"]], "gammapy.datasets.utils": [[110, 4, 1, "", "apply_edisp"], [111, 4, 1, "", "split_dataset"]], "gammapy.estimators": [[112, 1, 1, "", "ASmoothMapEstimator"], [113, 5, 1, "", "ESTIMATOR_REGISTRY"], [114, 1, 1, "", "EnergyDependentMorphologyEstimator"], [115, 1, 1, "", "Estimator"], [116, 1, 1, "", "ExcessMapEstimator"], [117, 1, 1, "", "FluxMaps"], [118, 1, 1, "", "FluxMetaData"], [119, 1, 1, "", "FluxPoints"], [120, 1, 1, "", "FluxPointsEstimator"], [121, 1, 1, "", "FluxProfileEstimator"], [122, 1, 1, "", "ImageProfile"], [123, 1, 1, "", "ImageProfileEstimator"], [124, 1, 1, "", "LightCurveEstimator"], [125, 1, 1, "", "ParameterEstimator"], [126, 1, 1, "", "SensitivityEstimator"], [127, 1, 1, "", "TSMapEstimator"], [5, 0, 0, "-", "utils"]], "gammapy.estimators.ASmoothMapEstimator": [[112, 2, 1, "", "config_parameters"], [112, 3, 1, "", "copy"], [112, 3, 1, "", "estimate_maps"], [112, 3, 1, "", "get_kernels"], [112, 3, 1, "", "get_scales"], [112, 3, 1, "", "run"], [112, 3, 1, "", "selection_all"], [112, 2, 1, "", "selection_optional"], [112, 2, 1, "", "tag"]], "gammapy.estimators.EnergyDependentMorphologyEstimator": [[114, 2, 1, "", "config_parameters"], [114, 3, 1, "", "copy"], [114, 3, 1, "", "estimate_energy_dependence"], [114, 3, 1, "", "run"], [114, 2, 1, "", "selection_optional"], [114, 2, 1, "", "tag"]], "gammapy.estimators.Estimator": [[115, 2, 1, "", "config_parameters"], [115, 3, 1, "", "copy"], [115, 3, 1, "", "run"], [115, 2, 1, "", "selection_optional"], [115, 2, 1, "", "tag"]], "gammapy.estimators.ExcessMapEstimator": [[116, 2, 1, "", "config_parameters"], [116, 3, 1, "", "copy"], [116, 2, 1, "", "correlation_radius"], [116, 3, 1, "", "estimate_excess_map"], [116, 3, 1, "", "estimate_exposure_reco_energy"], [116, 3, 1, "", "estimate_kernel"], [116, 3, 1, "", "estimate_mask_default"], [116, 3, 1, "", "run"], [116, 2, 1, "", "selection_optional"], [116, 2, 1, "", "tag"]], "gammapy.estimators.FluxMaps": [[117, 3, 1, "", "all_quantities"], [117, 2, 1, "", "available_quantities"], [117, 2, 1, "", "counts"], [117, 2, 1, "", "dnde"], [117, 2, 1, "", "dnde_err"], [117, 2, 1, "", "dnde_errn"], [117, 2, 1, "", "dnde_errp"], [117, 2, 1, "", "dnde_ref"], [117, 2, 1, "", "dnde_ul"], [117, 2, 1, "", "e2dnde"], [117, 2, 1, "", "e2dnde_err"], [117, 2, 1, "", "e2dnde_errn"], [117, 2, 1, "", "e2dnde_errp"], [117, 2, 1, "", "e2dnde_ref"], [117, 2, 1, "", "e2dnde_ul"], [117, 2, 1, "", "eflux"], [117, 2, 1, "", "eflux_err"], [117, 2, 1, "", "eflux_errn"], [117, 2, 1, "", "eflux_errp"], [117, 2, 1, "", "eflux_ref"], [117, 2, 1, "", "eflux_ul"], [117, 2, 1, "", "energy_axis"], [117, 2, 1, "", "energy_max"], [117, 2, 1, "", "energy_min"], [117, 2, 1, "", "energy_ref"], [117, 2, 1, "", "filter_success_nan"], [117, 2, 1, "", "flux"], [117, 2, 1, "", "flux_err"], [117, 2, 1, "", "flux_errn"], [117, 2, 1, "", "flux_errp"], [117, 2, 1, "", "flux_ref"], [117, 2, 1, "", "flux_sensitivity"], [117, 2, 1, "", "flux_ul"], [117, 3, 1, "", "from_hdulist"], [117, 3, 1, "", "from_maps"], [117, 3, 1, "", "from_stack"], [117, 2, 1, "", "geom"], [117, 3, 1, "", "get_flux_points"], [117, 2, 1, "", "has_any_ts"], [117, 2, 1, "", "has_stat_profiles"], [117, 2, 1, "", "has_success"], [117, 2, 1, "", "has_ul"], [117, 2, 1, "", "is_convertible_to_flux_sed_type"], [117, 2, 1, "", "is_ul"], [117, 3, 1, "", "iter_by_axis"], [117, 2, 1, "", "n_dof"], [117, 2, 1, "", "n_sigma"], [117, 2, 1, "", "n_sigma_ul"], [117, 2, 1, "", "niter"], [117, 2, 1, "", "norm"], [117, 2, 1, "", "norm_err"], [117, 2, 1, "", "norm_errn"], [117, 2, 1, "", "norm_errp"], [117, 2, 1, "", "norm_sensitivity"], [117, 2, 1, "", "norm_ul"], [117, 2, 1, "", "npred"], [117, 2, 1, "", "npred_background"], [117, 2, 1, "", "npred_excess"], [117, 2, 1, "", "npred_excess_err"], [117, 2, 1, "", "npred_excess_errn"], [117, 2, 1, "", "npred_excess_errp"], [117, 2, 1, "", "npred_excess_ref"], [117, 2, 1, "", "npred_excess_ul"], [117, 3, 1, "", "read"], [117, 2, 1, "", "reference_model"], [117, 2, 1, "", "reference_model_default"], [117, 2, 1, "", "reference_spectral_model"], [117, 2, 1, "", "sed_type_init"], [117, 2, 1, "", "sed_type_plot_default"], [117, 3, 1, "", "slice_by_coord"], [117, 3, 1, "", "slice_by_energy"], [117, 3, 1, "", "slice_by_idx"], [117, 3, 1, "", "slice_by_time"], [117, 2, 1, "", "sqrt_ts"], [117, 2, 1, "", "sqrt_ts_threshold_ul"], [117, 2, 1, "", "stat"], [117, 2, 1, "", "stat_null"], [117, 2, 1, "", "stat_scan"], [117, 2, 1, "", "success"], [117, 3, 1, "", "to_hdulist"], [117, 3, 1, "", "to_maps"], [117, 2, 1, "", "ts"], [117, 2, 1, "", "ts_scan"], [117, 3, 1, "", "write"]], "gammapy.estimators.FluxMetaData": [[118, 3, 1, "", "construct"], [118, 3, 1, "", "copy"], [118, 3, 1, "", "dict"], [118, 3, 1, "", "from_header"], [118, 3, 1, "", "from_orm"], [118, 3, 1, "", "json"], [118, 2, 1, "", "model_computed_fields"], [118, 2, 1, "", "model_config"], [118, 3, 1, "", "model_construct"], [118, 3, 1, "", "model_copy"], [118, 3, 1, "", "model_dump"], [118, 3, 1, "", "model_dump_json"], [118, 2, 1, "", "model_extra"], [118, 2, 1, "", "model_fields"], [118, 2, 1, "", "model_fields_set"], [118, 3, 1, "", "model_json_schema"], [118, 3, 1, "", "model_parametrized_name"], [118, 3, 1, "", "model_post_init"], [118, 3, 1, "", "model_rebuild"], [118, 3, 1, "", "model_validate"], [118, 3, 1, "", "model_validate_json"], [118, 3, 1, "", "model_validate_strings"], [118, 3, 1, "", "parse_file"], [118, 3, 1, "", "parse_obj"], [118, 3, 1, "", "parse_raw"], [118, 3, 1, "", "schema"], [118, 3, 1, "", "schema_json"], [118, 2, 1, "", "tag"], [118, 3, 1, "", "to_header"], [118, 3, 1, "", "to_yaml"], [118, 3, 1, "", "update_forward_refs"], [118, 3, 1, "", "validate"]], "gammapy.estimators.FluxPoints": [[119, 3, 1, "", "all_quantities"], [119, 2, 1, "", "available_quantities"], [119, 2, 1, "", "counts"], [119, 2, 1, "", "dnde"], [119, 2, 1, "", "dnde_err"], [119, 2, 1, "", "dnde_errn"], [119, 2, 1, "", "dnde_errp"], [119, 2, 1, "", "dnde_ref"], [119, 2, 1, "", "dnde_ul"], [119, 2, 1, "", "e2dnde"], [119, 2, 1, "", "e2dnde_err"], [119, 2, 1, "", "e2dnde_errn"], [119, 2, 1, "", "e2dnde_errp"], [119, 2, 1, "", "e2dnde_ref"], [119, 2, 1, "", "e2dnde_ul"], [119, 2, 1, "", "eflux"], [119, 2, 1, "", "eflux_err"], [119, 2, 1, "", "eflux_errn"], [119, 2, 1, "", "eflux_errp"], [119, 2, 1, "", "eflux_ref"], [119, 2, 1, "", "eflux_ul"], [119, 2, 1, "", "energy_axis"], [119, 2, 1, "", "energy_max"], [119, 2, 1, "", "energy_min"], [119, 2, 1, "", "energy_ref"], [119, 2, 1, "", "filter_success_nan"], [119, 2, 1, "", "flux"], [119, 2, 1, "", "flux_err"], [119, 2, 1, "", "flux_errn"], [119, 2, 1, "", "flux_errp"], [119, 2, 1, "", "flux_ref"], [119, 2, 1, "", "flux_sensitivity"], [119, 2, 1, "", "flux_ul"], [119, 3, 1, "", "from_hdulist"], [119, 3, 1, "", "from_maps"], [119, 3, 1, "", "from_stack"], [119, 3, 1, "", "from_table"], [119, 2, 1, "", "geom"], [119, 3, 1, "", "get_flux_points"], [119, 2, 1, "", "has_any_ts"], [119, 2, 1, "", "has_stat_profiles"], [119, 2, 1, "", "has_success"], [119, 2, 1, "", "has_ul"], [119, 2, 1, "", "is_convertible_to_flux_sed_type"], [119, 2, 1, "", "is_ul"], [119, 3, 1, "", "iter_by_axis"], [119, 2, 1, "", "n_dof"], [119, 2, 1, "", "n_sigma"], [119, 2, 1, "", "n_sigma_ul"], [119, 2, 1, "", "niter"], [119, 2, 1, "", "norm"], [119, 2, 1, "", "norm_err"], [119, 2, 1, "", "norm_errn"], [119, 2, 1, "", "norm_errp"], [119, 2, 1, "", "norm_sensitivity"], [119, 2, 1, "", "norm_ul"], [119, 2, 1, "", "npred"], [119, 2, 1, "", "npred_background"], [119, 2, 1, "", "npred_excess"], [119, 2, 1, "", "npred_excess_err"], [119, 2, 1, "", "npred_excess_errn"], [119, 2, 1, "", "npred_excess_errp"], [119, 2, 1, "", "npred_excess_ref"], [119, 2, 1, "", "npred_excess_ul"], [119, 3, 1, "", "plot"], [119, 3, 1, "", "plot_ts_profiles"], [119, 3, 1, "", "read"], [119, 3, 1, "", "recompute_ul"], [119, 2, 1, "", "reference_model"], [119, 2, 1, "", "reference_model_default"], [119, 2, 1, "", "reference_spectral_model"], [119, 3, 1, "", "resample_axis"], [119, 2, 1, "", "sed_type_init"], [119, 2, 1, "", "sed_type_plot_default"], [119, 3, 1, "", "slice_by_coord"], [119, 3, 1, "", "slice_by_energy"], [119, 3, 1, "", "slice_by_idx"], [119, 3, 1, "", "slice_by_time"], [119, 2, 1, "", "sqrt_ts"], [119, 2, 1, "", "sqrt_ts_threshold_ul"], [119, 2, 1, "", "stat"], [119, 2, 1, "", "stat_null"], [119, 2, 1, "", "stat_scan"], [119, 2, 1, "", "success"], [119, 3, 1, "", "to_hdulist"], [119, 3, 1, "", "to_maps"], [119, 3, 1, "", "to_table"], [119, 2, 1, "", "ts"], [119, 2, 1, "", "ts_scan"], [119, 3, 1, "", "write"]], "gammapy.estimators.FluxPointsEstimator": [[120, 2, 1, "", "config_parameters"], [120, 3, 1, "", "copy"], [120, 3, 1, "", "estimate_best_fit"], [120, 3, 1, "", "estimate_counts"], [120, 3, 1, "", "estimate_errn_errp"], [120, 3, 1, "", "estimate_flux_point"], [120, 3, 1, "", "estimate_npred"], [120, 3, 1, "", "estimate_npred_excess"], [120, 3, 1, "", "estimate_scan"], [120, 3, 1, "", "estimate_ts"], [120, 3, 1, "", "estimate_ul"], [120, 3, 1, "", "get_scale_model"], [120, 2, 1, "", "n_jobs"], [120, 2, 1, "", "norm_max"], [120, 2, 1, "", "norm_min"], [120, 2, 1, "", "norm_n_values"], [120, 2, 1, "", "norm_values"], [120, 2, 1, "", "parallel_backend"], [120, 3, 1, "", "run"], [120, 2, 1, "", "selection_optional"], [120, 2, 1, "", "tag"]], "gammapy.estimators.FluxProfileEstimator": [[121, 2, 1, "", "config_parameters"], [121, 3, 1, "", "copy"], [121, 3, 1, "", "estimate_best_fit"], [121, 3, 1, "", "estimate_counts"], [121, 3, 1, "", "estimate_errn_errp"], [121, 3, 1, "", "estimate_flux_point"], [121, 3, 1, "", "estimate_npred"], [121, 3, 1, "", "estimate_npred_excess"], [121, 3, 1, "", "estimate_scan"], [121, 3, 1, "", "estimate_ts"], [121, 3, 1, "", "estimate_ul"], [121, 3, 1, "", "get_scale_model"], [121, 2, 1, "", "n_jobs"], [121, 2, 1, "", "norm_max"], [121, 2, 1, "", "norm_min"], [121, 2, 1, "", "norm_n_values"], [121, 2, 1, "", "norm_values"], [121, 2, 1, "", "parallel_backend"], [121, 2, 1, "", "projected_distance_axis"], [121, 3, 1, "", "run"], [121, 2, 1, "", "selection_optional"], [121, 2, 1, "", "tag"]], "gammapy.estimators.ImageProfile": [[122, 3, 1, "", "normalize"], [122, 3, 1, "", "peek"], [122, 3, 1, "", "plot"], [122, 3, 1, "", "plot_err"], [122, 2, 1, "", "profile"], [122, 2, 1, "", "profile_err"], [122, 3, 1, "", "smooth"], [122, 2, 1, "", "x_max"], [122, 2, 1, "", "x_min"], [122, 2, 1, "", "x_ref"]], "gammapy.estimators.ImageProfileEstimator": [[123, 2, 1, "", "config_parameters"], [123, 3, 1, "", "copy"], [123, 3, 1, "", "run"], [123, 2, 1, "", "selection_optional"], [123, 2, 1, "", "tag"]], "gammapy.estimators.LightCurveEstimator": [[124, 2, 1, "", "config_parameters"], [124, 3, 1, "", "copy"], [124, 3, 1, "", "estimate_best_fit"], [124, 3, 1, "", "estimate_counts"], [124, 3, 1, "", "estimate_errn_errp"], [124, 3, 1, "", "estimate_flux_point"], [124, 3, 1, "", "estimate_npred"], [124, 3, 1, "", "estimate_npred_excess"], [124, 3, 1, "", "estimate_scan"], [124, 3, 1, "", "estimate_time_bin_flux"], [124, 3, 1, "", "estimate_ts"], [124, 3, 1, "", "estimate_ul"], [124, 3, 1, "", "expand_map"], [124, 3, 1, "", "get_scale_model"], [124, 2, 1, "", "n_jobs"], [124, 2, 1, "", "norm_max"], [124, 2, 1, "", "norm_min"], [124, 2, 1, "", "norm_n_values"], [124, 2, 1, "", "norm_values"], [124, 2, 1, "", "parallel_backend"], [124, 3, 1, "", "run"], [124, 2, 1, "", "selection_optional"], [124, 2, 1, "", "tag"]], "gammapy.estimators.ParameterEstimator": [[125, 2, 1, "", "config_parameters"], [125, 3, 1, "", "copy"], [125, 3, 1, "", "estimate_best_fit"], [125, 3, 1, "", "estimate_counts"], [125, 3, 1, "", "estimate_errn_errp"], [125, 3, 1, "", "estimate_npred"], [125, 3, 1, "", "estimate_scan"], [125, 3, 1, "", "estimate_ts"], [125, 3, 1, "", "estimate_ul"], [125, 3, 1, "", "run"], [125, 2, 1, "", "selection_optional"], [125, 2, 1, "", "tag"]], "gammapy.estimators.SensitivityEstimator": [[126, 2, 1, "", "config_parameters"], [126, 3, 1, "", "copy"], [126, 3, 1, "", "estimate_min_e2dnde"], [126, 3, 1, "", "estimate_min_excess"], [126, 3, 1, "", "run"], [126, 2, 1, "", "selection_optional"], [126, 2, 1, "", "tag"]], "gammapy.estimators.TSMapEstimator": [[127, 2, 1, "", "config_parameters"], [127, 3, 1, "", "copy"], [127, 3, 1, "", "estimate_fit_input_maps"], [127, 3, 1, "", "estimate_flux_default"], [127, 3, 1, "", "estimate_flux_map"], [127, 3, 1, "", "estimate_kernel"], [127, 3, 1, "", "estimate_mask_default"], [127, 3, 1, "", "estimate_pad_width"], [127, 2, 1, "", "n_jobs"], [127, 2, 1, "", "parallel_backend"], [127, 3, 1, "", "run"], [127, 2, 1, "", "selection_all"], [127, 2, 1, "", "selection_optional"], [127, 2, 1, "", "tag"]], "gammapy.estimators.utils": [[128, 4, 1, "", "compute_lightcurve_doublingtime"], [129, 4, 1, "", "compute_lightcurve_fpp"], [130, 4, 1, "", "compute_lightcurve_fvar"], [131, 4, 1, "", "estimate_exposure_reco_energy"], [132, 4, 1, "", "find_peaks"], [133, 4, 1, "", "find_peaks_in_flux_map"], [134, 4, 1, "", "get_combined_significance_maps"], [135, 4, 1, "", "get_rebinned_axis"], [136, 4, 1, "", "resample_energy_edges"]], "gammapy.irf": [[137, 1, 1, "", "Background2D"], [138, 1, 1, "", "Background3D"], [139, 1, 1, "", "BackgroundIRF"], [140, 1, 1, "", "EDispKernel"], [141, 1, 1, "", "EDispKernelMap"], [142, 1, 1, "", "EDispMap"], [143, 1, 1, "", "EffectiveAreaTable2D"], [144, 1, 1, "", "EnergyDependentMultiGaussPSF"], [145, 1, 1, "", "EnergyDispersion2D"], [146, 1, 1, "", "FoVAlignment"], [147, 1, 1, "", "IRF"], [148, 1, 1, "", "IRFMap"], [149, 5, 1, "", "IRF_REGISTRY"], [150, 1, 1, "", "PSF3D"], [151, 1, 1, "", "PSFKernel"], [152, 1, 1, "", "PSFKing"], [153, 1, 1, "", "PSFMap"], [154, 1, 1, "", "ParametricPSF"], [155, 1, 1, "", "RadMax2D"], [156, 1, 1, "", "RecoPSFMap"], [157, 4, 1, "", "load_irf_dict_from_file"]], "gammapy.irf.Background2D": [[137, 2, 1, "", "axes"], [137, 3, 1, "", "cumsum"], [137, 2, 1, "", "data"], [137, 2, 1, "", "default_interp_kwargs"], [137, 2, 1, "", "default_unit"], [137, 3, 1, "", "evaluate"], [137, 2, 1, "", "fov_alignment"], [137, 3, 1, "", "from_hdulist"], [137, 3, 1, "", "from_table"], [137, 2, 1, "", "has_offset_axis"], [137, 3, 1, "", "integral"], [137, 3, 1, "", "integrate_log_log"], [137, 3, 1, "", "interp_missing_data"], [137, 3, 1, "", "is_allclose"], [137, 2, 1, "", "is_pointlike"], [137, 3, 1, "", "normalize"], [137, 3, 1, "", "pad"], [137, 3, 1, "", "peek"], [137, 3, 1, "", "plot"], [137, 3, 1, "", "plot_at_energy"], [137, 3, 1, "", "plot_energy_dependence"], [137, 3, 1, "", "plot_offset_dependence"], [137, 3, 1, "", "plot_spectrum"], [137, 2, 1, "", "quantity"], [137, 3, 1, "", "read"], [137, 2, 1, "", "required_axes"], [137, 3, 1, "", "slice_by_idx"], [137, 2, 1, "", "tag"], [137, 3, 1, "", "to_3d"], [137, 3, 1, "", "to_hdulist"], [137, 3, 1, "", "to_table"], [137, 3, 1, "", "to_table_hdu"], [137, 3, 1, "", "to_unit"], [137, 2, 1, "", "unit"], [137, 3, 1, "", "write"]], "gammapy.irf.Background3D": [[138, 2, 1, "", "axes"], [138, 3, 1, "", "cumsum"], [138, 2, 1, "", "data"], [138, 2, 1, "", "default_interp_kwargs"], [138, 2, 1, "", "default_unit"], [138, 3, 1, "", "evaluate"], [138, 2, 1, "", "fov_alignment"], [138, 3, 1, "", "from_hdulist"], [138, 3, 1, "", "from_table"], [138, 2, 1, "", "has_offset_axis"], [138, 3, 1, "", "integral"], [138, 3, 1, "", "integrate_log_log"], [138, 3, 1, "", "interp_missing_data"], [138, 3, 1, "", "is_allclose"], [138, 2, 1, "", "is_pointlike"], [138, 3, 1, "", "normalize"], [138, 3, 1, "", "pad"], [138, 3, 1, "", "peek"], [138, 3, 1, "", "plot_at_energy"], [138, 2, 1, "", "quantity"], [138, 3, 1, "", "read"], [138, 2, 1, "", "required_axes"], [138, 3, 1, "", "slice_by_idx"], [138, 2, 1, "", "tag"], [138, 3, 1, "", "to_2d"], [138, 3, 1, "", "to_hdulist"], [138, 3, 1, "", "to_table"], [138, 3, 1, "", "to_table_hdu"], [138, 3, 1, "", "to_unit"], [138, 2, 1, "", "unit"], [138, 3, 1, "", "write"]], "gammapy.irf.BackgroundIRF": [[139, 2, 1, "", "axes"], [139, 3, 1, "", "cumsum"], [139, 2, 1, "", "data"], [139, 2, 1, "", "default_interp_kwargs"], [139, 3, 1, "", "evaluate"], [139, 2, 1, "", "fov_alignment"], [139, 3, 1, "", "from_hdulist"], [139, 3, 1, "", "from_table"], [139, 2, 1, "", "has_offset_axis"], [139, 3, 1, "", "integral"], [139, 3, 1, "", "integrate_log_log"], [139, 3, 1, "", "interp_missing_data"], [139, 3, 1, "", "is_allclose"], [139, 2, 1, "", "is_pointlike"], [139, 3, 1, "", "normalize"], [139, 3, 1, "", "pad"], [139, 2, 1, "", "quantity"], [139, 3, 1, "", "read"], [139, 2, 1, "", "required_axes"], [139, 3, 1, "", "slice_by_idx"], [139, 2, 1, "", "tag"], [139, 3, 1, "", "to_hdulist"], [139, 3, 1, "", "to_table"], [139, 3, 1, "", "to_table_hdu"], [139, 3, 1, "", "to_unit"], [139, 2, 1, "", "unit"], [139, 3, 1, "", "write"]], "gammapy.irf.EDispKernel": [[140, 2, 1, "", "axes"], [140, 3, 1, "", "cumsum"], [140, 2, 1, "", "data"], [140, 2, 1, "", "default_interp_kwargs"], [140, 3, 1, "", "evaluate"], [140, 2, 1, "", "fov_alignment"], [140, 3, 1, "", "from_diagonal_response"], [140, 3, 1, "", "from_gauss"], [140, 3, 1, "", "from_hdulist"], [140, 3, 1, "", "from_table"], [140, 3, 1, "", "get_bias"], [140, 3, 1, "", "get_bias_energy"], [140, 3, 1, "", "get_mean"], [140, 3, 1, "", "get_resolution"], [140, 2, 1, "", "has_offset_axis"], [140, 3, 1, "", "integral"], [140, 3, 1, "", "integrate_log_log"], [140, 3, 1, "", "interp_missing_data"], [140, 3, 1, "", "is_allclose"], [140, 2, 1, "", "is_pointlike"], [140, 3, 1, "", "normalize"], [140, 3, 1, "", "pad"], [140, 3, 1, "", "pdf_in_safe_range"], [140, 2, 1, "", "pdf_matrix"], [140, 3, 1, "", "peek"], [140, 3, 1, "", "plot_bias"], [140, 3, 1, "", "plot_matrix"], [140, 2, 1, "", "quantity"], [140, 3, 1, "", "read"], [140, 2, 1, "", "required_axes"], [140, 3, 1, "", "slice_by_idx"], [140, 2, 1, "", "tag"], [140, 3, 1, "", "to_hdulist"], [140, 3, 1, "", "to_image"], [140, 3, 1, "", "to_table"], [140, 3, 1, "", "to_table_hdu"], [140, 3, 1, "", "to_unit"], [140, 2, 1, "", "unit"], [140, 3, 1, "", "write"]], "gammapy.irf.EDispKernelMap": [[141, 3, 1, "", "copy"], [141, 3, 1, "", "cutout"], [141, 3, 1, "", "downsample"], [141, 2, 1, "", "edisp_map"], [141, 3, 1, "", "from_diagonal_response"], [141, 3, 1, "", "from_edisp_kernel"], [141, 3, 1, "", "from_gauss"], [141, 3, 1, "", "from_geom"], [141, 3, 1, "", "from_hdulist"], [141, 3, 1, "", "get_edisp_kernel"], [141, 2, 1, "", "mask_safe_image"], [141, 3, 1, "", "peek"], [141, 3, 1, "", "read"], [141, 2, 1, "", "required_axes"], [141, 3, 1, "", "resample_energy_axis"], [141, 3, 1, "", "slice_by_idx"], [141, 3, 1, "", "stack"], [141, 2, 1, "", "tag"], [141, 3, 1, "", "to_hdulist"], [141, 3, 1, "", "to_image"], [141, 3, 1, "", "to_region_nd_map"], [141, 3, 1, "", "write"]], "gammapy.irf.EDispMap": [[142, 3, 1, "", "copy"], [142, 3, 1, "", "cutout"], [142, 3, 1, "", "downsample"], [142, 2, 1, "", "edisp_map"], [142, 3, 1, "", "from_diagonal_response"], [142, 3, 1, "", "from_geom"], [142, 3, 1, "", "from_hdulist"], [142, 3, 1, "", "get_edisp_kernel"], [142, 2, 1, "", "mask_safe_image"], [142, 3, 1, "", "normalize"], [142, 3, 1, "", "peek"], [142, 3, 1, "", "read"], [142, 2, 1, "", "required_axes"], [142, 3, 1, "", "sample_coord"], [142, 3, 1, "", "slice_by_idx"], [142, 3, 1, "", "stack"], [142, 2, 1, "", "tag"], [142, 3, 1, "", "to_edisp_kernel_map"], [142, 3, 1, "", "to_hdulist"], [142, 3, 1, "", "to_region_nd_map"], [142, 3, 1, "", "write"]], "gammapy.irf.EffectiveAreaTable2D": [[143, 2, 1, "", "axes"], [143, 3, 1, "", "cumsum"], [143, 2, 1, "", "data"], [143, 2, 1, "", "default_interp_kwargs"], [143, 2, 1, "", "default_unit"], [143, 3, 1, "", "evaluate"], [143, 2, 1, "", "fov_alignment"], [143, 3, 1, "", "from_hdulist"], [143, 3, 1, "", "from_parametrization"], [143, 3, 1, "", "from_table"], [143, 2, 1, "", "has_offset_axis"], [143, 3, 1, "", "integral"], [143, 3, 1, "", "integrate_log_log"], [143, 3, 1, "", "interp_missing_data"], [143, 3, 1, "", "is_allclose"], [143, 2, 1, "", "is_pointlike"], [143, 3, 1, "", "normalize"], [143, 3, 1, "", "pad"], [143, 3, 1, "", "peek"], [143, 3, 1, "", "plot"], [143, 3, 1, "", "plot_energy_dependence"], [143, 3, 1, "", "plot_offset_dependence"], [143, 2, 1, "", "quantity"], [143, 3, 1, "", "read"], [143, 2, 1, "", "required_axes"], [143, 3, 1, "", "slice_by_idx"], [143, 2, 1, "", "tag"], [143, 3, 1, "", "to_hdulist"], [143, 3, 1, "", "to_table"], [143, 3, 1, "", "to_table_hdu"], [143, 3, 1, "", "to_unit"], [143, 2, 1, "", "unit"], [143, 3, 1, "", "write"]], "gammapy.irf.EnergyDependentMultiGaussPSF": [[144, 2, 1, "", "axes"], [144, 3, 1, "", "containment"], [144, 3, 1, "", "containment_radius"], [144, 3, 1, "", "cumsum"], [144, 2, 1, "", "data"], [144, 2, 1, "", "default_interp_kwargs"], [144, 3, 1, "", "evaluate"], [144, 3, 1, "", "evaluate_containment"], [144, 3, 1, "", "evaluate_direct"], [144, 3, 1, "", "evaluate_parameters"], [144, 2, 1, "", "fov_alignment"], [144, 3, 1, "", "from_hdulist"], [144, 3, 1, "", "from_table"], [144, 2, 1, "", "has_offset_axis"], [144, 3, 1, "", "info"], [144, 3, 1, "", "integral"], [144, 3, 1, "", "integrate_log_log"], [144, 3, 1, "", "interp_missing_data"], [144, 3, 1, "", "is_allclose"], [144, 2, 1, "", "is_pointlike"], [144, 3, 1, "", "normalize"], [144, 3, 1, "", "pad"], [144, 3, 1, "", "peek"], [144, 3, 1, "", "plot_containment_radius"], [144, 3, 1, "", "plot_containment_radius_vs_energy"], [144, 3, 1, "", "plot_psf_vs_rad"], [144, 2, 1, "", "quantity"], [144, 3, 1, "", "read"], [144, 2, 1, "", "required_axes"], [144, 2, 1, "", "required_parameters"], [144, 3, 1, "", "slice_by_idx"], [144, 2, 1, "", "tag"], [144, 3, 1, "", "to_hdulist"], [144, 3, 1, "", "to_psf3d"], [144, 3, 1, "", "to_table"], [144, 3, 1, "", "to_table_hdu"], [144, 3, 1, "", "to_unit"], [144, 2, 1, "", "unit"], [144, 3, 1, "", "write"]], "gammapy.irf.EnergyDispersion2D": [[145, 2, 1, "", "axes"], [145, 3, 1, "", "cumsum"], [145, 2, 1, "", "data"], [145, 2, 1, "", "default_interp_kwargs"], [145, 2, 1, "", "default_unit"], [145, 3, 1, "", "evaluate"], [145, 2, 1, "", "fov_alignment"], [145, 3, 1, "", "from_gauss"], [145, 3, 1, "", "from_hdulist"], [145, 3, 1, "", "from_table"], [145, 2, 1, "", "has_offset_axis"], [145, 3, 1, "", "integral"], [145, 3, 1, "", "integrate_log_log"], [145, 3, 1, "", "interp_missing_data"], [145, 3, 1, "", "is_allclose"], [145, 2, 1, "", "is_pointlike"], [145, 3, 1, "", "normalize"], [145, 3, 1, "", "pad"], [145, 3, 1, "", "peek"], [145, 3, 1, "", "plot_bias"], [145, 3, 1, "", "plot_migration"], [145, 2, 1, "", "quantity"], [145, 3, 1, "", "read"], [145, 2, 1, "", "required_axes"], [145, 3, 1, "", "slice_by_idx"], [145, 2, 1, "", "tag"], [145, 3, 1, "", "to_edisp_kernel"], [145, 3, 1, "", "to_hdulist"], [145, 3, 1, "", "to_table"], [145, 3, 1, "", "to_table_hdu"], [145, 3, 1, "", "to_unit"], [145, 2, 1, "", "unit"], [145, 3, 1, "", "write"]], "gammapy.irf.FoVAlignment": [[146, 2, 1, "", "ALTAZ"], [146, 2, 1, "", "RADEC"]], "gammapy.irf.IRF": [[147, 2, 1, "", "axes"], [147, 3, 1, "", "cumsum"], [147, 2, 1, "", "data"], [147, 2, 1, "", "default_interp_kwargs"], [147, 3, 1, "", "evaluate"], [147, 2, 1, "", "fov_alignment"], [147, 3, 1, "", "from_hdulist"], [147, 3, 1, "", "from_table"], [147, 2, 1, "", "has_offset_axis"], [147, 3, 1, "", "integral"], [147, 3, 1, "", "integrate_log_log"], [147, 3, 1, "", "interp_missing_data"], [147, 3, 1, "", "is_allclose"], [147, 2, 1, "", "is_pointlike"], [147, 3, 1, "", "normalize"], [147, 3, 1, "", "pad"], [147, 2, 1, "", "quantity"], [147, 3, 1, "", "read"], [147, 2, 1, "", "required_axes"], [147, 3, 1, "", "slice_by_idx"], [147, 2, 1, "", "tag"], [147, 3, 1, "", "to_hdulist"], [147, 3, 1, "", "to_table"], [147, 3, 1, "", "to_table_hdu"], [147, 3, 1, "", "to_unit"], [147, 2, 1, "", "unit"], [147, 3, 1, "", "write"]], "gammapy.irf.IRFMap": [[148, 3, 1, "", "copy"], [148, 3, 1, "", "cutout"], [148, 3, 1, "", "downsample"], [148, 3, 1, "", "from_hdulist"], [148, 2, 1, "", "mask_safe_image"], [148, 3, 1, "", "read"], [148, 2, 1, "", "required_axes"], [148, 3, 1, "", "slice_by_idx"], [148, 3, 1, "", "stack"], [148, 2, 1, "", "tag"], [148, 3, 1, "", "to_hdulist"], [148, 3, 1, "", "to_region_nd_map"], [148, 3, 1, "", "write"]], "gammapy.irf.PSF3D": [[150, 2, 1, "", "axes"], [150, 3, 1, "", "containment"], [150, 3, 1, "", "containment_radius"], [150, 3, 1, "", "cumsum"], [150, 2, 1, "", "data"], [150, 2, 1, "", "default_interp_kwargs"], [150, 2, 1, "", "default_unit"], [150, 3, 1, "", "evaluate"], [150, 2, 1, "", "fov_alignment"], [150, 3, 1, "", "from_hdulist"], [150, 3, 1, "", "from_table"], [150, 2, 1, "", "has_offset_axis"], [150, 3, 1, "", "info"], [150, 3, 1, "", "integral"], [150, 3, 1, "", "integrate_log_log"], [150, 3, 1, "", "interp_missing_data"], [150, 3, 1, "", "is_allclose"], [150, 2, 1, "", "is_pointlike"], [150, 3, 1, "", "normalize"], [150, 3, 1, "", "pad"], [150, 3, 1, "", "peek"], [150, 3, 1, "", "plot_containment_radius"], [150, 3, 1, "", "plot_containment_radius_vs_energy"], [150, 3, 1, "", "plot_psf_vs_rad"], [150, 2, 1, "", "quantity"], [150, 3, 1, "", "read"], [150, 2, 1, "", "required_axes"], [150, 3, 1, "", "slice_by_idx"], [150, 2, 1, "", "tag"], [150, 3, 1, "", "to_hdulist"], [150, 3, 1, "", "to_table"], [150, 3, 1, "", "to_table_hdu"], [150, 3, 1, "", "to_unit"], [150, 2, 1, "", "unit"], [150, 3, 1, "", "write"]], "gammapy.irf.PSFKernel": [[151, 2, 1, "", "data"], [151, 3, 1, "", "from_gauss"], [151, 3, 1, "", "from_spatial_model"], [151, 3, 1, "", "normalize"], [151, 3, 1, "", "peek"], [151, 3, 1, "", "plot_kernel"], [151, 2, 1, "", "psf_kernel_map"], [151, 3, 1, "", "read"], [151, 3, 1, "", "slice_by_idx"], [151, 3, 1, "", "to_image"], [151, 3, 1, "", "write"]], "gammapy.irf.PSFKing": [[152, 2, 1, "", "axes"], [152, 3, 1, "", "containment"], [152, 3, 1, "", "containment_radius"], [152, 3, 1, "", "cumsum"], [152, 2, 1, "", "data"], [152, 2, 1, "", "default_interp_kwargs"], [152, 3, 1, "", "evaluate"], [152, 3, 1, "", "evaluate_containment"], [152, 3, 1, "", "evaluate_direct"], [152, 3, 1, "", "evaluate_parameters"], [152, 2, 1, "", "fov_alignment"], [152, 3, 1, "", "from_hdulist"], [152, 3, 1, "", "from_table"], [152, 2, 1, "", "has_offset_axis"], [152, 3, 1, "", "info"], [152, 3, 1, "", "integral"], [152, 3, 1, "", "integrate_log_log"], [152, 3, 1, "", "interp_missing_data"], [152, 3, 1, "", "is_allclose"], [152, 2, 1, "", "is_pointlike"], [152, 3, 1, "", "normalize"], [152, 3, 1, "", "pad"], [152, 3, 1, "", "peek"], [152, 3, 1, "", "plot_containment_radius"], [152, 3, 1, "", "plot_containment_radius_vs_energy"], [152, 3, 1, "", "plot_psf_vs_rad"], [152, 2, 1, "", "quantity"], [152, 3, 1, "", "read"], [152, 2, 1, "", "required_axes"], [152, 2, 1, "", "required_parameters"], [152, 3, 1, "", "slice_by_idx"], [152, 2, 1, "", "tag"], [152, 3, 1, "", "to_hdulist"], [152, 3, 1, "", "to_psf3d"], [152, 3, 1, "", "to_table"], [152, 3, 1, "", "to_table_hdu"], [152, 3, 1, "", "to_unit"], [152, 2, 1, "", "unit"], [152, 3, 1, "", "write"]], "gammapy.irf.PSFMap": [[153, 3, 1, "", "containment"], [153, 3, 1, "", "containment_radius"], [153, 3, 1, "", "containment_radius_map"], [153, 3, 1, "", "copy"], [153, 3, 1, "", "cutout"], [153, 3, 1, "", "downsample"], [153, 2, 1, "", "energy_name"], [153, 3, 1, "", "from_gauss"], [153, 3, 1, "", "from_geom"], [153, 3, 1, "", "from_hdulist"], [153, 3, 1, "", "get_psf_kernel"], [153, 2, 1, "", "mask_safe_image"], [153, 3, 1, "", "normalize"], [153, 3, 1, "", "peek"], [153, 3, 1, "", "plot_containment_radius_vs_energy"], [153, 3, 1, "", "plot_psf_vs_rad"], [153, 2, 1, "", "psf_map"], [153, 3, 1, "", "read"], [153, 2, 1, "", "required_axes"], [153, 3, 1, "", "sample_coord"], [153, 3, 1, "", "slice_by_idx"], [153, 3, 1, "", "stack"], [153, 2, 1, "", "tag"], [153, 3, 1, "", "to_hdulist"], [153, 3, 1, "", "to_image"], [153, 3, 1, "", "to_region_nd_map"], [153, 3, 1, "", "write"]], "gammapy.irf.ParametricPSF": [[154, 2, 1, "", "axes"], [154, 3, 1, "", "containment"], [154, 3, 1, "", "containment_radius"], [154, 3, 1, "", "cumsum"], [154, 2, 1, "", "data"], [154, 2, 1, "", "default_interp_kwargs"], [154, 3, 1, "", "evaluate"], [154, 3, 1, "", "evaluate_containment"], [154, 3, 1, "", "evaluate_direct"], [154, 3, 1, "", "evaluate_parameters"], [154, 2, 1, "", "fov_alignment"], [154, 3, 1, "", "from_hdulist"], [154, 3, 1, "", "from_table"], [154, 2, 1, "", "has_offset_axis"], [154, 3, 1, "", "info"], [154, 3, 1, "", "integral"], [154, 3, 1, "", "integrate_log_log"], [154, 3, 1, "", "interp_missing_data"], [154, 3, 1, "", "is_allclose"], [154, 2, 1, "", "is_pointlike"], [154, 3, 1, "", "normalize"], [154, 3, 1, "", "pad"], [154, 3, 1, "", "peek"], [154, 3, 1, "", "plot_containment_radius"], [154, 3, 1, "", "plot_containment_radius_vs_energy"], [154, 3, 1, "", "plot_psf_vs_rad"], [154, 2, 1, "", "quantity"], [154, 3, 1, "", "read"], [154, 2, 1, "", "required_axes"], [154, 2, 1, "", "required_parameters"], [154, 3, 1, "", "slice_by_idx"], [154, 2, 1, "", "tag"], [154, 3, 1, "", "to_hdulist"], [154, 3, 1, "", "to_psf3d"], [154, 3, 1, "", "to_table"], [154, 3, 1, "", "to_table_hdu"], [154, 3, 1, "", "to_unit"], [154, 2, 1, "", "unit"], [154, 3, 1, "", "write"]], "gammapy.irf.RadMax2D": [[155, 2, 1, "", "axes"], [155, 3, 1, "", "cumsum"], [155, 2, 1, "", "data"], [155, 2, 1, "", "default_interp_kwargs"], [155, 2, 1, "", "default_unit"], [155, 3, 1, "", "evaluate"], [155, 2, 1, "", "fov_alignment"], [155, 3, 1, "", "from_hdulist"], [155, 3, 1, "", "from_irf"], [155, 3, 1, "", "from_table"], [155, 2, 1, "", "has_offset_axis"], [155, 3, 1, "", "integral"], [155, 3, 1, "", "integrate_log_log"], [155, 3, 1, "", "interp_missing_data"], [155, 3, 1, "", "is_allclose"], [155, 2, 1, "", "is_fixed_rad_max"], [155, 2, 1, "", "is_pointlike"], [155, 3, 1, "", "normalize"], [155, 3, 1, "", "pad"], [155, 3, 1, "", "plot_rad_max_vs_energy"], [155, 2, 1, "", "quantity"], [155, 3, 1, "", "read"], [155, 2, 1, "", "required_axes"], [155, 3, 1, "", "slice_by_idx"], [155, 2, 1, "", "tag"], [155, 3, 1, "", "to_hdulist"], [155, 3, 1, "", "to_table"], [155, 3, 1, "", "to_table_hdu"], [155, 3, 1, "", "to_unit"], [155, 2, 1, "", "unit"], [155, 3, 1, "", "write"]], "gammapy.irf.RecoPSFMap": [[156, 3, 1, "", "containment"], [156, 3, 1, "", "containment_radius"], [156, 3, 1, "", "containment_radius_map"], [156, 3, 1, "", "copy"], [156, 3, 1, "", "cutout"], [156, 3, 1, "", "downsample"], [156, 2, 1, "", "energy_name"], [156, 3, 1, "", "from_gauss"], [156, 3, 1, "", "from_geom"], [156, 3, 1, "", "from_hdulist"], [156, 3, 1, "", "get_psf_kernel"], [156, 2, 1, "", "mask_safe_image"], [156, 3, 1, "", "normalize"], [156, 3, 1, "", "peek"], [156, 3, 1, "", "plot_containment_radius_vs_energy"], [156, 3, 1, "", "plot_psf_vs_rad"], [156, 2, 1, "", "psf_map"], [156, 3, 1, "", "read"], [156, 2, 1, "", "required_axes"], [156, 3, 1, "", "sample_coord"], [156, 3, 1, "", "slice_by_idx"], [156, 3, 1, "", "stack"], [156, 2, 1, "", "tag"], [156, 3, 1, "", "to_hdulist"], [156, 3, 1, "", "to_image"], [156, 3, 1, "", "to_region_nd_map"], [156, 3, 1, "", "write"]], "gammapy.makers": [[158, 1, 1, "", "AdaptiveRingBackgroundMaker"], [159, 1, 1, "", "DatasetsMaker"], [160, 1, 1, "", "FoVBackgroundMaker"], [161, 5, 1, "", "MAKER_REGISTRY"], [162, 1, 1, "", "Maker"], [163, 1, 1, "", "MapDatasetMaker"], [164, 1, 1, "", "PhaseBackgroundMaker"], [165, 1, 1, "", "ReflectedRegionsBackgroundMaker"], [166, 1, 1, "", "ReflectedRegionsFinder"], [167, 1, 1, "", "RegionsFinder"], [168, 1, 1, "", "RingBackgroundMaker"], [169, 1, 1, "", "SafeMaskMaker"], [170, 1, 1, "", "SpectrumDatasetMaker"], [171, 1, 1, "", "WobbleRegionsFinder"], [8, 0, 0, "-", "utils"]], "gammapy.makers.AdaptiveRingBackgroundMaker": [[158, 3, 1, "", "kernels"], [158, 3, 1, "", "make_cubes"], [158, 3, 1, "", "run"], [158, 2, 1, "", "tag"]], "gammapy.makers.DatasetsMaker": [[159, 3, 1, "", "callback"], [159, 3, 1, "", "error_callback"], [159, 3, 1, "", "make_dataset"], [159, 2, 1, "", "n_jobs"], [159, 2, 1, "", "offset_max"], [159, 2, 1, "", "parallel_backend"], [159, 3, 1, "", "run"], [159, 2, 1, "", "safe_mask_maker"], [159, 2, 1, "", "tag"]], "gammapy.makers.FoVBackgroundMaker": [[160, 2, 1, "", "available_methods"], [160, 3, 1, "", "make_background_fit"], [160, 3, 1, "", "make_background_scale"], [160, 3, 1, "", "make_default_fov_background_model"], [160, 3, 1, "", "make_exclusion_mask"], [160, 2, 1, "", "method"], [160, 3, 1, "", "run"], [160, 2, 1, "", "tag"]], "gammapy.makers.Maker": [[162, 3, 1, "", "run"], [162, 2, 1, "", "tag"]], "gammapy.makers.MapDatasetMaker": [[163, 2, 1, "", "available_selection"], [163, 3, 1, "", "make_background"], [163, 3, 1, "", "make_counts"], [163, 3, 1, "", "make_edisp"], [163, 3, 1, "", "make_edisp_kernel"], [163, 3, 1, "", "make_exposure"], [163, 3, 1, "", "make_exposure_irf"], [163, 3, 1, "", "make_meta_table"], [163, 3, 1, "", "make_psf"], [163, 3, 1, "", "run"], [163, 2, 1, "", "tag"]], "gammapy.makers.PhaseBackgroundMaker": [[164, 3, 1, "", "make_counts"], [164, 3, 1, "", "make_counts_off"], [164, 3, 1, "", "run"], [164, 2, 1, "", "tag"]], "gammapy.makers.ReflectedRegionsBackgroundMaker": [[165, 3, 1, "", "make_counts_off"], [165, 3, 1, "", "run"], [165, 2, 1, "", "tag"]], "gammapy.makers.ReflectedRegionsFinder": [[166, 3, 1, "", "run"]], "gammapy.makers.RegionsFinder": [[167, 3, 1, "", "run"]], "gammapy.makers.RingBackgroundMaker": [[168, 3, 1, "", "kernel"], [168, 3, 1, "", "make_maps_off"], [168, 3, 1, "", "run"], [168, 2, 1, "", "tag"]], "gammapy.makers.SafeMaskMaker": [[169, 2, 1, "", "available_methods"], [169, 3, 1, "", "make_mask_bkg_invalid"], [169, 3, 1, "", "make_mask_energy_aeff_default"], [169, 3, 1, "", "make_mask_energy_aeff_max"], [169, 3, 1, "", "make_mask_energy_bkg_peak"], [169, 3, 1, "", "make_mask_energy_edisp_bias"], [169, 3, 1, "", "make_mask_offset_max"], [169, 3, 1, "", "run"], [169, 2, 1, "", "tag"]], "gammapy.makers.SpectrumDatasetMaker": [[170, 2, 1, "", "available_selection"], [170, 3, 1, "", "make_background"], [170, 3, 1, "", "make_counts"], [170, 3, 1, "", "make_edisp"], [170, 3, 1, "", "make_edisp_kernel"], [170, 3, 1, "", "make_exposure"], [170, 3, 1, "", "make_exposure_irf"], [170, 3, 1, "", "make_meta_table"], [170, 3, 1, "", "make_psf"], [170, 3, 1, "", "run"], [170, 2, 1, "", "tag"]], "gammapy.makers.WobbleRegionsFinder": [[171, 3, 1, "", "run"]], "gammapy.makers.utils": [[172, 4, 1, "", "make_counts_rad_max"], [173, 4, 1, "", "make_edisp_kernel_map"], [174, 4, 1, "", "make_edisp_map"], [175, 4, 1, "", "make_effective_livetime_map"], [176, 4, 1, "", "make_map_background_irf"], [177, 4, 1, "", "make_map_exposure_true_energy"], [178, 4, 1, "", "make_observation_time_map"], [179, 4, 1, "", "make_psf_map"], [180, 4, 1, "", "make_theta_squared_table"]], "gammapy.maps": [[181, 1, 1, "", "Geom"], [182, 1, 1, "", "HpxGeom"], [183, 1, 1, "", "HpxMap"], [184, 1, 1, "", "HpxNDMap"], [185, 1, 1, "", "LabelMapAxis"], [186, 1, 1, "", "Map"], [187, 1, 1, "", "MapAxes"], [188, 1, 1, "", "MapAxis"], [189, 1, 1, "", "MapCoord"], [190, 1, 1, "", "Maps"], [191, 1, 1, "", "RegionGeom"], [192, 1, 1, "", "RegionNDMap"], [193, 1, 1, "", "TimeMapAxis"], [194, 1, 1, "", "WcsGeom"], [195, 1, 1, "", "WcsMap"], [196, 1, 1, "", "WcsNDMap"], [197, 4, 1, "", "containment_radius"], [198, 4, 1, "", "containment_region"]], "gammapy.maps.Geom": [[181, 2, 1, "", "as_energy_true"], [181, 2, 1, "", "center_coord"], [181, 2, 1, "", "center_pix"], [181, 2, 1, "", "center_skydir"], [181, 3, 1, "", "contains"], [181, 3, 1, "", "contains_pix"], [181, 3, 1, "", "coord_to_idx"], [181, 3, 1, "", "coord_to_pix"], [181, 3, 1, "", "copy"], [181, 3, 1, "", "crop"], [181, 3, 1, "", "data_nbytes"], [181, 2, 1, "", "data_shape"], [181, 3, 1, "", "downsample"], [181, 3, 1, "", "drop"], [181, 3, 1, "", "energy_mask"], [181, 3, 1, "", "from_hdulist"], [181, 3, 1, "", "get_coord"], [181, 3, 1, "", "get_idx"], [181, 2, 1, "", "has_energy_axis"], [181, 2, 1, "", "is_allsky"], [181, 2, 1, "", "is_flat"], [181, 2, 1, "", "is_image"], [181, 3, 1, "", "pad"], [181, 3, 1, "", "pix_to_coord"], [181, 3, 1, "", "pix_to_idx"], [181, 3, 1, "", "rename_axes"], [181, 3, 1, "", "replace_axis"], [181, 3, 1, "", "resample_axis"], [181, 3, 1, "", "slice_by_idx"], [181, 3, 1, "", "solid_angle"], [181, 3, 1, "", "squash"], [181, 3, 1, "", "to_bands_hdu"], [181, 3, 1, "", "to_cube"], [181, 3, 1, "", "to_image"], [181, 3, 1, "", "upsample"]], "gammapy.maps.HpxGeom": [[182, 2, 1, "", "as_energy_true"], [182, 2, 1, "", "axes"], [182, 2, 1, "", "axes_names"], [182, 2, 1, "", "center_coord"], [182, 2, 1, "", "center_pix"], [182, 2, 1, "", "center_skydir"], [182, 3, 1, "", "contains"], [182, 3, 1, "", "contains_pix"], [182, 3, 1, "", "coord_to_idx"], [182, 3, 1, "", "coord_to_pix"], [182, 3, 1, "", "copy"], [182, 3, 1, "", "create"], [182, 3, 1, "", "crop"], [182, 3, 1, "", "cutout"], [182, 3, 1, "", "data_nbytes"], [182, 2, 1, "", "data_shape"], [182, 2, 1, "", "data_shape_axes"], [182, 3, 1, "", "downsample"], [182, 3, 1, "", "drop"], [182, 3, 1, "", "energy_mask"], [182, 2, 1, "", "frame"], [182, 3, 1, "", "from_hdu"], [182, 3, 1, "", "from_hdulist"], [182, 3, 1, "", "from_header"], [182, 3, 1, "", "get_coord"], [182, 3, 1, "", "get_idx"], [182, 3, 1, "", "get_index_list"], [182, 3, 1, "", "global_to_local"], [182, 2, 1, "", "has_energy_axis"], [182, 3, 1, "", "interp_weights"], [182, 2, 1, "", "ipix"], [182, 3, 1, "", "is_aligned"], [182, 3, 1, "", "is_allclose"], [182, 2, 1, "", "is_allsky"], [182, 2, 1, "", "is_flat"], [182, 2, 1, "", "is_hpx"], [182, 2, 1, "", "is_image"], [182, 2, 1, "", "is_region"], [182, 2, 1, "", "is_regular"], [182, 3, 1, "", "local_to_global"], [182, 2, 1, "", "ndim"], [182, 2, 1, "", "nest"], [182, 2, 1, "", "npix"], [182, 2, 1, "", "npix_max"], [182, 2, 1, "", "nside"], [182, 2, 1, "", "order"], [182, 2, 1, "", "ordering"], [182, 3, 1, "", "pad"], [182, 3, 1, "", "pix_to_coord"], [182, 3, 1, "", "pix_to_idx"], [182, 2, 1, "", "pixel_scales"], [182, 2, 1, "", "projection"], [182, 2, 1, "", "region"], [182, 3, 1, "", "region_mask"], [182, 3, 1, "", "rename_axes"], [182, 3, 1, "", "replace_axis"], [182, 3, 1, "", "resample_axis"], [182, 3, 1, "", "separation"], [182, 2, 1, "", "shape_axes"], [182, 3, 1, "", "slice_by_idx"], [182, 3, 1, "", "solid_angle"], [182, 3, 1, "", "squash"], [182, 3, 1, "", "to_bands_hdu"], [182, 3, 1, "", "to_binsz"], [182, 3, 1, "", "to_cube"], [182, 3, 1, "", "to_header"], [182, 3, 1, "", "to_image"], [182, 3, 1, "", "to_nside"], [182, 3, 1, "", "to_swapped"], [182, 3, 1, "", "to_wcs_geom"], [182, 3, 1, "", "to_wcs_tiles"], [182, 3, 1, "", "upsample"], [182, 2, 1, "", "width"]], "gammapy.maps.HpxMap": [[183, 3, 1, "", "coadd"], [183, 3, 1, "", "copy"], [183, 3, 1, "", "create"], [183, 3, 1, "", "crop"], [183, 3, 1, "", "cumsum"], [183, 2, 1, "", "data"], [183, 3, 1, "", "dot"], [183, 3, 1, "", "downsample"], [183, 3, 1, "", "fill_by_coord"], [183, 3, 1, "", "fill_by_idx"], [183, 3, 1, "", "fill_by_pix"], [183, 3, 1, "", "fill_events"], [183, 3, 1, "", "from_geom"], [183, 3, 1, "", "from_hdulist"], [183, 3, 1, "", "from_stack"], [183, 2, 1, "", "geom"], [183, 3, 1, "", "get_by_coord"], [183, 3, 1, "", "get_by_idx"], [183, 3, 1, "", "get_by_pix"], [183, 3, 1, "", "get_image_by_coord"], [183, 3, 1, "", "get_image_by_idx"], [183, 3, 1, "", "get_image_by_pix"], [183, 3, 1, "", "get_spectrum"], [183, 3, 1, "", "integral"], [183, 3, 1, "", "interp_by_coord"], [183, 3, 1, "", "interp_by_pix"], [183, 3, 1, "", "interp_to_geom"], [183, 3, 1, "", "is_allclose"], [183, 2, 1, "", "is_mask"], [183, 3, 1, "", "iter_by_axis"], [183, 3, 1, "", "iter_by_image"], [183, 3, 1, "", "iter_by_image_data"], [183, 3, 1, "", "iter_by_image_index"], [183, 3, 1, "", "mask_nearest_position"], [183, 2, 1, "", "meta"], [183, 3, 1, "", "normalize"], [183, 3, 1, "", "pad"], [183, 3, 1, "", "plot_grid"], [183, 3, 1, "", "plot_interactive"], [183, 2, 1, "", "quantity"], [183, 3, 1, "", "read"], [183, 3, 1, "", "reduce"], [183, 3, 1, "", "reduce_over_axes"], [183, 3, 1, "", "rename_axes"], [183, 3, 1, "", "reorder_axes"], [183, 3, 1, "", "reproject_by_image"], [183, 3, 1, "", "reproject_to_geom"], [183, 3, 1, "", "resample"], [183, 3, 1, "", "resample_axis"], [183, 3, 1, "", "sample_coord"], [183, 3, 1, "", "set_by_coord"], [183, 3, 1, "", "set_by_idx"], [183, 3, 1, "", "set_by_pix"], [183, 3, 1, "", "slice_by_idx"], [183, 3, 1, "", "split_by_axis"], [183, 3, 1, "", "sum_over_axes"], [183, 2, 1, "", "tag"], [183, 3, 1, "", "to_cube"], [183, 3, 1, "", "to_hdu"], [183, 3, 1, "", "to_hdulist"], [183, 3, 1, "", "to_swapped"], [183, 3, 1, "", "to_unit"], [183, 3, 1, "", "to_wcs"], [183, 2, 1, "", "unit"], [183, 3, 1, "", "upsample"], [183, 3, 1, "", "write"]], "gammapy.maps.HpxNDMap": [[184, 3, 1, "", "coadd"], [184, 3, 1, "", "convolve"], [184, 3, 1, "", "convolve_full"], [184, 3, 1, "", "convolve_wcs"], [184, 3, 1, "", "copy"], [184, 3, 1, "", "create"], [184, 3, 1, "", "crop"], [184, 3, 1, "", "cumsum"], [184, 3, 1, "", "cutout"], [184, 2, 1, "", "data"], [184, 3, 1, "", "dot"], [184, 3, 1, "", "downsample"], [184, 3, 1, "", "fill_by_coord"], [184, 3, 1, "", "fill_by_idx"], [184, 3, 1, "", "fill_by_pix"], [184, 3, 1, "", "fill_events"], [184, 3, 1, "", "from_geom"], [184, 3, 1, "", "from_hdu"], [184, 3, 1, "", "from_hdulist"], [184, 3, 1, "", "from_stack"], [184, 3, 1, "", "from_wcs_tiles"], [184, 2, 1, "", "geom"], [184, 3, 1, "", "get_by_coord"], [184, 3, 1, "", "get_by_idx"], [184, 3, 1, "", "get_by_pix"], [184, 3, 1, "", "get_image_by_coord"], [184, 3, 1, "", "get_image_by_idx"], [184, 3, 1, "", "get_image_by_pix"], [184, 3, 1, "", "get_spectrum"], [184, 3, 1, "", "integral"], [184, 3, 1, "", "interp_by_coord"], [184, 3, 1, "", "interp_by_pix"], [184, 3, 1, "", "interp_to_geom"], [184, 3, 1, "", "is_allclose"], [184, 2, 1, "", "is_mask"], [184, 3, 1, "", "iter_by_axis"], [184, 3, 1, "", "iter_by_image"], [184, 3, 1, "", "iter_by_image_data"], [184, 3, 1, "", "iter_by_image_index"], [184, 3, 1, "", "mask_nearest_position"], [184, 2, 1, "", "meta"], [184, 3, 1, "", "normalize"], [184, 3, 1, "", "pad"], [184, 3, 1, "", "plot"], [184, 3, 1, "", "plot_grid"], [184, 3, 1, "", "plot_interactive"], [184, 3, 1, "", "plot_mask"], [184, 2, 1, "", "quantity"], [184, 3, 1, "", "read"], [184, 3, 1, "", "reduce"], [184, 3, 1, "", "reduce_over_axes"], [184, 3, 1, "", "rename_axes"], [184, 3, 1, "", "reorder_axes"], [184, 3, 1, "", "reproject_by_image"], [184, 3, 1, "", "reproject_to_geom"], [184, 3, 1, "", "resample"], [184, 3, 1, "", "resample_axis"], [184, 3, 1, "", "sample_coord"], [184, 3, 1, "", "set_by_coord"], [184, 3, 1, "", "set_by_idx"], [184, 3, 1, "", "set_by_pix"], [184, 3, 1, "", "slice_by_idx"], [184, 3, 1, "", "smooth"], [184, 3, 1, "", "split_by_axis"], [184, 3, 1, "", "stack"], [184, 3, 1, "", "sum_over_axes"], [184, 2, 1, "", "tag"], [184, 3, 1, "", "to_cube"], [184, 3, 1, "", "to_hdu"], [184, 3, 1, "", "to_hdulist"], [184, 3, 1, "", "to_nside"], [184, 3, 1, "", "to_region_nd_map"], [184, 3, 1, "", "to_swapped"], [184, 3, 1, "", "to_unit"], [184, 3, 1, "", "to_wcs"], [184, 3, 1, "", "to_wcs_tiles"], [184, 2, 1, "", "unit"], [184, 3, 1, "", "upsample"], [184, 3, 1, "", "write"]], "gammapy.maps.LabelMapAxis": [[185, 2, 1, "", "as_plot_center"], [185, 2, 1, "", "as_plot_edges"], [185, 2, 1, "", "as_plot_labels"], [185, 2, 1, "", "as_plot_xerr"], [185, 3, 1, "", "assert_name"], [185, 2, 1, "", "bin_width"], [185, 2, 1, "", "center"], [185, 3, 1, "", "concatenate"], [185, 3, 1, "", "coord_to_idx"], [185, 3, 1, "", "coord_to_pix"], [185, 3, 1, "", "copy"], [185, 3, 1, "", "downsample"], [185, 2, 1, "", "edges"], [185, 2, 1, "", "edges_max"], [185, 2, 1, "", "edges_min"], [185, 3, 1, "", "format_plot_xaxis"], [185, 3, 1, "", "from_stack"], [185, 3, 1, "", "from_table"], [185, 3, 1, "", "is_allclose"], [185, 2, 1, "", "name"], [185, 2, 1, "", "nbin"], [185, 2, 1, "", "node_type"], [185, 3, 1, "", "pad"], [185, 3, 1, "", "pix_to_coord"], [185, 3, 1, "", "pix_to_idx"], [185, 3, 1, "", "resample"], [185, 3, 1, "", "slice"], [185, 3, 1, "", "squash"], [185, 3, 1, "", "to_header"], [185, 2, 1, "", "unit"], [185, 3, 1, "", "upsample"]], "gammapy.maps.Map": [[186, 3, 1, "", "coadd"], [186, 3, 1, "", "copy"], [186, 3, 1, "", "create"], [186, 3, 1, "", "crop"], [186, 3, 1, "", "cumsum"], [186, 2, 1, "", "data"], [186, 3, 1, "", "dot"], [186, 3, 1, "", "downsample"], [186, 3, 1, "", "fill_by_coord"], [186, 3, 1, "", "fill_by_idx"], [186, 3, 1, "", "fill_by_pix"], [186, 3, 1, "", "fill_events"], [186, 3, 1, "", "from_geom"], [186, 3, 1, "", "from_hdulist"], [186, 3, 1, "", "from_stack"], [186, 2, 1, "", "geom"], [186, 3, 1, "", "get_by_coord"], [186, 3, 1, "", "get_by_idx"], [186, 3, 1, "", "get_by_pix"], [186, 3, 1, "", "get_image_by_coord"], [186, 3, 1, "", "get_image_by_idx"], [186, 3, 1, "", "get_image_by_pix"], [186, 3, 1, "", "get_spectrum"], [186, 3, 1, "", "integral"], [186, 3, 1, "", "interp_by_coord"], [186, 3, 1, "", "interp_by_pix"], [186, 3, 1, "", "interp_to_geom"], [186, 3, 1, "", "is_allclose"], [186, 2, 1, "", "is_mask"], [186, 3, 1, "", "iter_by_axis"], [186, 3, 1, "", "iter_by_image"], [186, 3, 1, "", "iter_by_image_data"], [186, 3, 1, "", "iter_by_image_index"], [186, 3, 1, "", "mask_nearest_position"], [186, 2, 1, "", "meta"], [186, 3, 1, "", "normalize"], [186, 3, 1, "", "pad"], [186, 3, 1, "", "plot_grid"], [186, 3, 1, "", "plot_interactive"], [186, 2, 1, "", "quantity"], [186, 3, 1, "", "read"], [186, 3, 1, "", "reduce"], [186, 3, 1, "", "reduce_over_axes"], [186, 3, 1, "", "rename_axes"], [186, 3, 1, "", "reorder_axes"], [186, 3, 1, "", "reproject_by_image"], [186, 3, 1, "", "reproject_to_geom"], [186, 3, 1, "", "resample"], [186, 3, 1, "", "resample_axis"], [186, 3, 1, "", "sample_coord"], [186, 3, 1, "", "set_by_coord"], [186, 3, 1, "", "set_by_idx"], [186, 3, 1, "", "set_by_pix"], [186, 3, 1, "", "slice_by_idx"], [186, 3, 1, "", "split_by_axis"], [186, 3, 1, "", "sum_over_axes"], [186, 2, 1, "", "tag"], [186, 3, 1, "", "to_cube"], [186, 3, 1, "", "to_unit"], [186, 2, 1, "", "unit"], [186, 3, 1, "", "upsample"], [186, 3, 1, "", "write"]], "gammapy.maps.MapAxes": [[187, 3, 1, "", "assert_names"], [187, 3, 1, "", "bin_volume"], [187, 2, 1, "", "center_coord"], [187, 3, 1, "", "coord_to_idx"], [187, 3, 1, "", "coord_to_pix"], [187, 3, 1, "", "copy"], [187, 3, 1, "", "count"], [187, 3, 1, "", "downsample"], [187, 3, 1, "", "drop"], [187, 3, 1, "", "from_default"], [187, 3, 1, "", "from_table"], [187, 3, 1, "", "from_table_hdu"], [187, 3, 1, "", "get_coord"], [187, 3, 1, "", "index"], [187, 3, 1, "", "index_data"], [187, 3, 1, "", "is_allclose"], [187, 2, 1, "", "is_flat"], [187, 2, 1, "", "is_unidimensional"], [187, 2, 1, "", "iter_with_reshape"], [187, 2, 1, "", "names"], [187, 3, 1, "", "pad"], [187, 3, 1, "", "pix_to_coord"], [187, 3, 1, "", "pix_to_idx"], [187, 2, 1, "", "primary_axis"], [187, 3, 1, "", "rename_axes"], [187, 3, 1, "", "replace"], [187, 3, 1, "", "resample"], [187, 2, 1, "", "reverse"], [187, 2, 1, "", "shape"], [187, 3, 1, "", "slice_by_idx"], [187, 3, 1, "", "squash"], [187, 3, 1, "", "to_header"], [187, 3, 1, "", "to_table"], [187, 3, 1, "", "to_table_hdu"], [187, 3, 1, "", "upsample"]], "gammapy.maps.MapAxis": [[188, 2, 1, "", "as_plot_center"], [188, 2, 1, "", "as_plot_edges"], [188, 2, 1, "", "as_plot_labels"], [188, 2, 1, "", "as_plot_scale"], [188, 2, 1, "", "as_plot_xerr"], [188, 3, 1, "", "assert_name"], [188, 2, 1, "", "bin_width"], [188, 2, 1, "", "bounds"], [188, 2, 1, "", "center"], [188, 3, 1, "", "concatenate"], [188, 3, 1, "", "coord_to_idx"], [188, 3, 1, "", "coord_to_pix"], [188, 3, 1, "", "copy"], [188, 3, 1, "", "downsample"], [188, 2, 1, "", "edges"], [188, 2, 1, "", "edges_max"], [188, 2, 1, "", "edges_min"], [188, 3, 1, "", "format_plot_xaxis"], [188, 3, 1, "", "format_plot_yaxis"], [188, 3, 1, "", "from_bounds"], [188, 3, 1, "", "from_edges"], [188, 3, 1, "", "from_energy_bounds"], [188, 3, 1, "", "from_energy_edges"], [188, 3, 1, "", "from_nodes"], [188, 3, 1, "", "from_stack"], [188, 3, 1, "", "from_table"], [188, 3, 1, "", "from_table_hdu"], [188, 3, 1, "", "group_table"], [188, 2, 1, "", "interp"], [188, 3, 1, "", "is_aligned"], [188, 3, 1, "", "is_allclose"], [188, 2, 1, "", "is_energy_axis"], [188, 2, 1, "", "iter_by_edges"], [188, 2, 1, "", "name"], [188, 2, 1, "", "nbin"], [188, 2, 1, "", "nbin_per_decade"], [188, 2, 1, "", "node_type"], [188, 3, 1, "", "pad"], [188, 3, 1, "", "pix_to_coord"], [188, 3, 1, "", "pix_to_idx"], [188, 3, 1, "", "rename"], [188, 3, 1, "", "round"], [188, 3, 1, "", "slice"], [188, 3, 1, "", "squash"], [188, 3, 1, "", "to_header"], [188, 3, 1, "", "to_node_type"], [188, 3, 1, "", "to_table"], [188, 3, 1, "", "to_table_hdu"], [188, 2, 1, "", "unit"], [188, 3, 1, "", "upsample"], [188, 2, 1, "", "use_center_as_plot_labels"]], "gammapy.maps.MapCoord": [[189, 3, 1, "", "apply_mask"], [189, 2, 1, "", "axis_names"], [189, 2, 1, "", "broadcasted"], [189, 3, 1, "", "copy"], [189, 3, 1, "", "create"], [189, 2, 1, "", "flat"], [189, 2, 1, "", "frame"], [189, 2, 1, "", "lat"], [189, 2, 1, "", "lon"], [189, 2, 1, "", "match_by_name"], [189, 2, 1, "", "ndim"], [189, 2, 1, "", "phi"], [189, 2, 1, "", "shape"], [189, 2, 1, "", "size"], [189, 2, 1, "", "skycoord"], [189, 2, 1, "", "theta"], [189, 3, 1, "", "to_frame"]], "gammapy.maps.Maps": [[190, 3, 1, "", "clear"], [190, 3, 1, "", "from_geom"], [190, 3, 1, "", "from_hdulist"], [190, 2, 1, "", "geom"], [190, 3, 1, "", "get"], [190, 3, 1, "", "items"], [190, 3, 1, "", "keys"], [190, 3, 1, "", "pop"], [190, 3, 1, "", "popitem"], [190, 3, 1, "", "read"], [190, 3, 1, "", "setdefault"], [190, 3, 1, "", "to_hdulist"], [190, 3, 1, "", "update"], [190, 3, 1, "", "values"], [190, 3, 1, "", "write"]], "gammapy.maps.RegionGeom": [[191, 2, 1, "", "as_energy_true"], [191, 2, 1, "", "axes"], [191, 2, 1, "", "axes_names"], [191, 3, 1, "", "bin_volume"], [191, 2, 1, "", "binsz_wcs"], [191, 2, 1, "", "center_coord"], [191, 2, 1, "", "center_pix"], [191, 2, 1, "", "center_skydir"], [191, 3, 1, "", "contains"], [191, 3, 1, "", "contains_pix"], [191, 3, 1, "", "contains_wcs_pix"], [191, 3, 1, "", "coord_to_idx"], [191, 3, 1, "", "coord_to_pix"], [191, 3, 1, "", "copy"], [191, 3, 1, "", "create"], [191, 3, 1, "", "crop"], [191, 3, 1, "", "data_nbytes"], [191, 2, 1, "", "data_shape"], [191, 2, 1, "", "data_shape_axes"], [191, 3, 1, "", "downsample"], [191, 3, 1, "", "drop"], [191, 3, 1, "", "energy_mask"], [191, 2, 1, "", "frame"], [191, 3, 1, "", "from_hdulist"], [191, 3, 1, "", "from_regions"], [191, 3, 1, "", "get_coord"], [191, 3, 1, "", "get_idx"], [191, 3, 1, "", "get_wcs_coord_and_weights"], [191, 2, 1, "", "has_energy_axis"], [191, 2, 1, "", "is_all_point_sky_regions"], [191, 3, 1, "", "is_allclose"], [191, 2, 1, "", "is_allsky"], [191, 2, 1, "", "is_flat"], [191, 2, 1, "", "is_hpx"], [191, 2, 1, "", "is_image"], [191, 2, 1, "", "is_region"], [191, 2, 1, "", "is_regular"], [191, 2, 1, "", "npix"], [191, 3, 1, "", "pad"], [191, 3, 1, "", "pix_to_coord"], [191, 3, 1, "", "pix_to_idx"], [191, 3, 1, "", "plot_region"], [191, 2, 1, "", "projection"], [191, 2, 1, "", "region"], [191, 3, 1, "", "rename_axes"], [191, 3, 1, "", "replace_axis"], [191, 3, 1, "", "resample_axis"], [191, 3, 1, "", "separation"], [191, 3, 1, "", "slice_by_idx"], [191, 3, 1, "", "solid_angle"], [191, 3, 1, "", "squash"], [191, 3, 1, "", "to_bands_hdu"], [191, 3, 1, "", "to_binsz"], [191, 3, 1, "", "to_binsz_wcs"], [191, 3, 1, "", "to_cube"], [191, 3, 1, "", "to_hdulist"], [191, 3, 1, "", "to_image"], [191, 3, 1, "", "to_wcs_geom"], [191, 3, 1, "", "union"], [191, 3, 1, "", "upsample"], [191, 2, 1, "", "wcs"], [191, 2, 1, "", "width"]], "gammapy.maps.RegionNDMap": [[192, 3, 1, "", "coadd"], [192, 3, 1, "", "copy"], [192, 3, 1, "", "create"], [192, 3, 1, "", "crop"], [192, 3, 1, "", "cumsum"], [192, 3, 1, "", "cutout"], [192, 2, 1, "", "data"], [192, 3, 1, "", "dot"], [192, 3, 1, "", "downsample"], [192, 3, 1, "", "fill_by_coord"], [192, 3, 1, "", "fill_by_idx"], [192, 3, 1, "", "fill_by_pix"], [192, 3, 1, "", "fill_events"], [192, 3, 1, "", "from_geom"], [192, 3, 1, "", "from_hdulist"], [192, 3, 1, "", "from_stack"], [192, 3, 1, "", "from_table"], [192, 2, 1, "", "geom"], [192, 3, 1, "", "get_by_coord"], [192, 3, 1, "", "get_by_idx"], [192, 3, 1, "", "get_by_pix"], [192, 3, 1, "", "get_image_by_coord"], [192, 3, 1, "", "get_image_by_idx"], [192, 3, 1, "", "get_image_by_pix"], [192, 3, 1, "", "get_spectrum"], [192, 3, 1, "", "integral"], [192, 3, 1, "", "interp_by_coord"], [192, 3, 1, "", "interp_by_pix"], [192, 3, 1, "", "interp_to_geom"], [192, 3, 1, "", "is_allclose"], [192, 2, 1, "", "is_mask"], [192, 3, 1, "", "iter_by_axis"], [192, 3, 1, "", "iter_by_axis_data"], [192, 3, 1, "", "iter_by_image"], [192, 3, 1, "", "iter_by_image_data"], [192, 3, 1, "", "iter_by_image_index"], [192, 3, 1, "", "mask_nearest_position"], [192, 2, 1, "", "meta"], [192, 3, 1, "", "normalize"], [192, 3, 1, "", "pad"], [192, 3, 1, "", "plot"], [192, 3, 1, "", "plot_grid"], [192, 3, 1, "", "plot_hist"], [192, 3, 1, "", "plot_interactive"], [192, 3, 1, "", "plot_mask"], [192, 3, 1, "", "plot_region"], [192, 2, 1, "", "quantity"], [192, 3, 1, "", "read"], [192, 3, 1, "", "reduce"], [192, 3, 1, "", "reduce_over_axes"], [192, 3, 1, "", "rename_axes"], [192, 3, 1, "", "reorder_axes"], [192, 3, 1, "", "reproject_by_image"], [192, 3, 1, "", "reproject_to_geom"], [192, 3, 1, "", "resample"], [192, 3, 1, "", "resample_axis"], [192, 3, 1, "", "sample_coord"], [192, 3, 1, "", "set_by_coord"], [192, 3, 1, "", "set_by_idx"], [192, 3, 1, "", "set_by_pix"], [192, 3, 1, "", "slice_by_idx"], [192, 3, 1, "", "split_by_axis"], [192, 3, 1, "", "stack"], [192, 3, 1, "", "sum_over_axes"], [192, 2, 1, "", "tag"], [192, 3, 1, "", "to_cube"], [192, 3, 1, "", "to_hdulist"], [192, 3, 1, "", "to_region_nd_map"], [192, 3, 1, "", "to_table"], [192, 3, 1, "", "to_unit"], [192, 2, 1, "", "unit"], [192, 3, 1, "", "upsample"], [192, 3, 1, "", "write"]], "gammapy.maps.TimeMapAxis": [[193, 2, 1, "", "as_plot_center"], [193, 2, 1, "", "as_plot_edges"], [193, 2, 1, "", "as_plot_labels"], [193, 2, 1, "", "as_plot_xerr"], [193, 3, 1, "", "assert_name"], [193, 2, 1, "", "bin_width"], [193, 2, 1, "", "bounds"], [193, 2, 1, "", "center"], [193, 3, 1, "", "coord_to_idx"], [193, 3, 1, "", "coord_to_pix"], [193, 3, 1, "", "copy"], [193, 3, 1, "", "downsample"], [193, 2, 1, "", "edges"], [193, 2, 1, "", "edges_max"], [193, 2, 1, "", "edges_min"], [193, 3, 1, "", "format_plot_xaxis"], [193, 3, 1, "", "from_gti"], [193, 3, 1, "", "from_gti_bounds"], [193, 3, 1, "", "from_table"], [193, 3, 1, "", "from_time_bounds"], [193, 3, 1, "", "from_time_edges"], [193, 3, 1, "", "group_table"], [193, 2, 1, "", "interp"], [193, 3, 1, "", "is_aligned"], [193, 3, 1, "", "is_allclose"], [193, 2, 1, "", "is_contiguous"], [193, 2, 1, "", "iter_by_edges"], [193, 2, 1, "", "name"], [193, 2, 1, "", "nbin"], [193, 2, 1, "", "node_type"], [193, 3, 1, "", "pix_to_coord"], [193, 3, 1, "", "pix_to_idx"], [193, 2, 1, "", "reference_time"], [193, 3, 1, "", "slice"], [193, 3, 1, "", "squash"], [193, 2, 1, "", "time_bounds"], [193, 2, 1, "", "time_delta"], [193, 2, 1, "", "time_edges"], [193, 2, 1, "", "time_format"], [193, 2, 1, "", "time_max"], [193, 2, 1, "", "time_mid"], [193, 2, 1, "", "time_min"], [193, 3, 1, "", "to_contiguous"], [193, 3, 1, "", "to_gti"], [193, 3, 1, "", "to_header"], [193, 2, 1, "", "unit"], [193, 3, 1, "", "upsample"]], "gammapy.maps.WcsGeom": [[194, 2, 1, "", "as_energy_true"], [194, 2, 1, "", "axes"], [194, 2, 1, "", "axes_names"], [194, 3, 1, "", "bin_volume"], [194, 3, 1, "", "binary_structure"], [194, 3, 1, "", "boundary_mask"], [194, 2, 1, "", "center_coord"], [194, 2, 1, "", "center_pix"], [194, 2, 1, "", "center_skydir"], [194, 3, 1, "", "contains"], [194, 3, 1, "", "contains_pix"], [194, 3, 1, "", "coord_to_idx"], [194, 3, 1, "", "coord_to_pix"], [194, 3, 1, "", "copy"], [194, 3, 1, "", "create"], [194, 3, 1, "", "crop"], [194, 3, 1, "", "cutout"], [194, 3, 1, "", "cutout_slices"], [194, 3, 1, "", "data_nbytes"], [194, 2, 1, "", "data_shape"], [194, 2, 1, "", "data_shape_axes"], [194, 2, 1, "", "data_shape_image"], [194, 3, 1, "", "downsample"], [194, 3, 1, "", "drop"], [194, 3, 1, "", "energy_mask"], [194, 2, 1, "", "footprint"], [194, 2, 1, "", "footprint_rectangle_sky_region"], [194, 2, 1, "", "frame"], [194, 3, 1, "", "from_aligned"], [194, 3, 1, "", "from_hdulist"], [194, 3, 1, "", "from_header"], [194, 3, 1, "", "get_coord"], [194, 3, 1, "", "get_idx"], [194, 3, 1, "", "get_pix"], [194, 2, 1, "", "has_energy_axis"], [194, 3, 1, "", "is_aligned"], [194, 3, 1, "", "is_allclose"], [194, 2, 1, "", "is_allsky"], [194, 2, 1, "", "is_flat"], [194, 2, 1, "", "is_hpx"], [194, 2, 1, "", "is_image"], [194, 2, 1, "", "is_region"], [194, 2, 1, "", "is_regular"], [194, 2, 1, "", "ndim"], [194, 2, 1, "", "npix"], [194, 3, 1, "", "pad"], [194, 3, 1, "", "pix_to_coord"], [194, 3, 1, "", "pix_to_idx"], [194, 2, 1, "", "pixel_area"], [194, 2, 1, "", "pixel_scales"], [194, 2, 1, "", "projection"], [194, 3, 1, "", "region_mask"], [194, 3, 1, "", "region_weights"], [194, 3, 1, "", "rename_axes"], [194, 3, 1, "", "replace_axis"], [194, 3, 1, "", "resample_axis"], [194, 3, 1, "", "separation"], [194, 2, 1, "", "shape_axes"], [194, 3, 1, "", "slice_by_idx"], [194, 3, 1, "", "solid_angle"], [194, 3, 1, "", "squash"], [194, 3, 1, "", "to_bands_hdu"], [194, 3, 1, "", "to_binsz"], [194, 3, 1, "", "to_cube"], [194, 3, 1, "", "to_even_npix"], [194, 3, 1, "", "to_header"], [194, 3, 1, "", "to_image"], [194, 3, 1, "", "to_odd_npix"], [194, 3, 1, "", "upsample"], [194, 2, 1, "", "wcs"], [194, 2, 1, "", "width"]], "gammapy.maps.WcsMap": [[195, 3, 1, "", "coadd"], [195, 3, 1, "", "copy"], [195, 3, 1, "", "create"], [195, 3, 1, "", "crop"], [195, 3, 1, "", "cumsum"], [195, 2, 1, "", "data"], [195, 3, 1, "", "dot"], [195, 3, 1, "", "downsample"], [195, 3, 1, "", "fill_by_coord"], [195, 3, 1, "", "fill_by_idx"], [195, 3, 1, "", "fill_by_pix"], [195, 3, 1, "", "fill_events"], [195, 3, 1, "", "from_geom"], [195, 3, 1, "", "from_hdulist"], [195, 3, 1, "", "from_stack"], [195, 2, 1, "", "geom"], [195, 3, 1, "", "get_by_coord"], [195, 3, 1, "", "get_by_idx"], [195, 3, 1, "", "get_by_pix"], [195, 3, 1, "", "get_image_by_coord"], [195, 3, 1, "", "get_image_by_idx"], [195, 3, 1, "", "get_image_by_pix"], [195, 3, 1, "", "get_spectrum"], [195, 3, 1, "", "integral"], [195, 3, 1, "", "interp_by_coord"], [195, 3, 1, "", "interp_by_pix"], [195, 3, 1, "", "interp_to_geom"], [195, 3, 1, "", "is_allclose"], [195, 2, 1, "", "is_mask"], [195, 3, 1, "", "iter_by_axis"], [195, 3, 1, "", "iter_by_image"], [195, 3, 1, "", "iter_by_image_data"], [195, 3, 1, "", "iter_by_image_index"], [195, 3, 1, "", "mask_nearest_position"], [195, 2, 1, "", "meta"], [195, 3, 1, "", "normalize"], [195, 3, 1, "", "pad"], [195, 3, 1, "", "plot_grid"], [195, 3, 1, "", "plot_interactive"], [195, 2, 1, "", "quantity"], [195, 3, 1, "", "read"], [195, 3, 1, "", "reduce"], [195, 3, 1, "", "reduce_over_axes"], [195, 3, 1, "", "rename_axes"], [195, 3, 1, "", "reorder_axes"], [195, 3, 1, "", "reproject_by_image"], [195, 3, 1, "", "reproject_to_geom"], [195, 3, 1, "", "resample"], [195, 3, 1, "", "resample_axis"], [195, 3, 1, "", "sample_coord"], [195, 3, 1, "", "set_by_coord"], [195, 3, 1, "", "set_by_idx"], [195, 3, 1, "", "set_by_pix"], [195, 3, 1, "", "slice_by_idx"], [195, 3, 1, "", "split_by_axis"], [195, 3, 1, "", "sum_over_axes"], [195, 2, 1, "", "tag"], [195, 3, 1, "", "to_cube"], [195, 3, 1, "", "to_hdu"], [195, 3, 1, "", "to_hdulist"], [195, 3, 1, "", "to_unit"], [195, 2, 1, "", "unit"], [195, 3, 1, "", "upsample"], [195, 3, 1, "", "write"]], "gammapy.maps.WcsNDMap": [[196, 3, 1, "", "binary_dilate"], [196, 3, 1, "", "binary_erode"], [196, 3, 1, "", "coadd"], [196, 3, 1, "", "convolve"], [196, 3, 1, "", "copy"], [196, 3, 1, "", "create"], [196, 3, 1, "", "crop"], [196, 3, 1, "", "cumsum"], [196, 3, 1, "", "cutout"], [196, 3, 1, "", "cutout_and_mask_region"], [196, 2, 1, "", "data"], [196, 3, 1, "", "dot"], [196, 3, 1, "", "downsample"], [196, 3, 1, "", "fill_by_coord"], [196, 3, 1, "", "fill_by_idx"], [196, 3, 1, "", "fill_by_pix"], [196, 3, 1, "", "fill_events"], [196, 3, 1, "", "from_geom"], [196, 3, 1, "", "from_hdu"], [196, 3, 1, "", "from_hdulist"], [196, 3, 1, "", "from_stack"], [196, 2, 1, "", "geom"], [196, 3, 1, "", "get_by_coord"], [196, 3, 1, "", "get_by_idx"], [196, 3, 1, "", "get_by_pix"], [196, 3, 1, "", "get_image_by_coord"], [196, 3, 1, "", "get_image_by_idx"], [196, 3, 1, "", "get_image_by_pix"], [196, 3, 1, "", "get_spectrum"], [196, 3, 1, "", "integral"], [196, 3, 1, "", "interp_by_coord"], [196, 3, 1, "", "interp_by_pix"], [196, 3, 1, "", "interp_to_geom"], [196, 3, 1, "", "is_allclose"], [196, 2, 1, "", "is_mask"], [196, 3, 1, "", "iter_by_axis"], [196, 3, 1, "", "iter_by_image"], [196, 3, 1, "", "iter_by_image_data"], [196, 3, 1, "", "iter_by_image_index"], [196, 3, 1, "", "mask_contains_region"], [196, 3, 1, "", "mask_nearest_position"], [196, 2, 1, "", "meta"], [196, 3, 1, "", "normalize"], [196, 3, 1, "", "pad"], [196, 3, 1, "", "plot"], [196, 3, 1, "", "plot_grid"], [196, 3, 1, "", "plot_interactive"], [196, 3, 1, "", "plot_mask"], [196, 2, 1, "", "quantity"], [196, 3, 1, "", "read"], [196, 3, 1, "", "reduce"], [196, 3, 1, "", "reduce_over_axes"], [196, 3, 1, "", "rename_axes"], [196, 3, 1, "", "reorder_axes"], [196, 3, 1, "", "reproject_by_image"], [196, 3, 1, "", "reproject_to_geom"], [196, 3, 1, "", "resample"], [196, 3, 1, "", "resample_axis"], [196, 3, 1, "", "sample_coord"], [196, 3, 1, "", "set_by_coord"], [196, 3, 1, "", "set_by_idx"], [196, 3, 1, "", "set_by_pix"], [196, 3, 1, "", "slice_by_idx"], [196, 3, 1, "", "smooth"], [196, 3, 1, "", "split_by_axis"], [196, 3, 1, "", "stack"], [196, 3, 1, "", "sum_over_axes"], [196, 2, 1, "", "tag"], [196, 3, 1, "", "to_cube"], [196, 3, 1, "", "to_hdu"], [196, 3, 1, "", "to_hdulist"], [196, 3, 1, "", "to_region_nd_map"], [196, 3, 1, "", "to_region_nd_map_histogram"], [196, 3, 1, "", "to_unit"], [196, 2, 1, "", "unit"], [196, 3, 1, "", "upsample"], [196, 3, 1, "", "write"]], "gammapy.modeling": [[199, 1, 1, "", "Covariance"], [200, 1, 1, "", "Fit"], [201, 1, 1, "", "Parameter"], [202, 1, 1, "", "Parameters"], [203, 1, 1, "", "PriorParameter"], [204, 1, 1, "", "PriorParameters"], [10, 0, 0, "-", "models"], [270, 4, 1, "", "select_nested_models"], [271, 4, 1, "", "stat_profile_ul_scipy"]], "gammapy.modeling.Covariance": [[199, 2, 1, "", "correlation"], [199, 2, 1, "", "data"], [199, 3, 1, "", "from_factor_matrix"], [199, 3, 1, "", "from_stack"], [199, 3, 1, "", "get_subcovariance"], [199, 3, 1, "", "plot_correlation"], [199, 2, 1, "", "scipy_mvn"], [199, 3, 1, "", "set_subcovariance"], [199, 2, 1, "", "shape"]], "gammapy.modeling.Fit": [[200, 3, 1, "", "confidence"], [200, 3, 1, "", "covariance"], [200, 3, 1, "", "optimize"], [200, 3, 1, "", "run"], [200, 3, 1, "", "stat_contour"], [200, 3, 1, "", "stat_profile"], [200, 3, 1, "", "stat_surface"]], "gammapy.modeling.Parameter": [[201, 3, 1, "", "autoscale"], [201, 3, 1, "", "check_limits"], [201, 2, 1, "", "conf_max"], [201, 2, 1, "", "conf_min"], [201, 3, 1, "", "copy"], [201, 2, 1, "", "error"], [201, 2, 1, "", "factor"], [201, 2, 1, "", "factor_max"], [201, 2, 1, "", "factor_min"], [201, 2, 1, "", "frozen"], [201, 2, 1, "", "is_norm"], [201, 2, 1, "", "max"], [201, 2, 1, "", "min"], [201, 2, 1, "", "name"], [201, 2, 1, "", "norm_parameters"], [201, 2, 1, "", "prior"], [201, 3, 1, "", "prior_stat_sum"], [201, 2, 1, "", "quantity"], [201, 2, 1, "", "scale"], [201, 2, 1, "", "scale_method"], [201, 2, 1, "", "scan_max"], [201, 2, 1, "", "scan_min"], [201, 2, 1, "", "scan_n_sigma"], [201, 2, 1, "", "scan_values"], [201, 3, 1, "", "to_dict"], [201, 2, 1, "", "type"], [201, 2, 1, "", "unit"], [201, 3, 1, "", "update_from_dict"], [201, 2, 1, "", "value"]], "gammapy.modeling.Parameters": [[202, 3, 1, "", "autoscale"], [202, 3, 1, "", "check_limits"], [202, 3, 1, "", "copy"], [202, 3, 1, "", "count"], [202, 2, 1, "", "free_parameters"], [202, 3, 1, "", "freeze_all"], [202, 3, 1, "", "from_dict"], [202, 3, 1, "", "from_stack"], [202, 3, 1, "", "index"], [202, 2, 1, "", "max"], [202, 2, 1, "", "min"], [202, 2, 1, "", "names"], [202, 2, 1, "", "norm_parameters"], [202, 2, 1, "", "prior"], [202, 3, 1, "", "prior_stat_sum"], [202, 3, 1, "", "restore_status"], [202, 3, 1, "", "select"], [202, 3, 1, "", "set_parameter_factors"], [202, 3, 1, "", "to_dict"], [202, 3, 1, "", "to_table"], [202, 2, 1, "", "types"], [202, 3, 1, "", "unfreeze_all"], [202, 2, 1, "", "unique_parameters"], [202, 2, 1, "", "value"]], "gammapy.modeling.PriorParameter": [[203, 3, 1, "", "autoscale"], [203, 3, 1, "", "check_limits"], [203, 2, 1, "", "conf_max"], [203, 2, 1, "", "conf_min"], [203, 3, 1, "", "copy"], [203, 2, 1, "", "error"], [203, 2, 1, "", "factor"], [203, 2, 1, "", "factor_max"], [203, 2, 1, "", "factor_min"], [203, 2, 1, "", "frozen"], [203, 2, 1, "", "is_norm"], [203, 2, 1, "", "max"], [203, 2, 1, "", "min"], [203, 2, 1, "", "name"], [203, 2, 1, "", "norm_parameters"], [203, 2, 1, "", "prior"], [203, 3, 1, "", "prior_stat_sum"], [203, 2, 1, "", "quantity"], [203, 2, 1, "", "scale"], [203, 2, 1, "", "scale_method"], [203, 2, 1, "", "scan_max"], [203, 2, 1, "", "scan_min"], [203, 2, 1, "", "scan_n_sigma"], [203, 2, 1, "", "scan_values"], [203, 3, 1, "", "to_dict"], [203, 2, 1, "", "type"], [203, 2, 1, "", "unit"], [203, 3, 1, "", "update_from_dict"], [203, 2, 1, "", "value"]], "gammapy.modeling.PriorParameters": [[204, 3, 1, "", "autoscale"], [204, 3, 1, "", "check_limits"], [204, 3, 1, "", "copy"], [204, 3, 1, "", "count"], [204, 2, 1, "", "free_parameters"], [204, 3, 1, "", "freeze_all"], [204, 3, 1, "", "from_dict"], [204, 3, 1, "", "from_stack"], [204, 3, 1, "", "index"], [204, 2, 1, "", "max"], [204, 2, 1, "", "min"], [204, 2, 1, "", "names"], [204, 2, 1, "", "norm_parameters"], [204, 2, 1, "", "prior"], [204, 3, 1, "", "prior_stat_sum"], [204, 3, 1, "", "restore_status"], [204, 3, 1, "", "select"], [204, 3, 1, "", "set_parameter_factors"], [204, 3, 1, "", "to_dict"], [204, 3, 1, "", "to_table"], [204, 2, 1, "", "types"], [204, 3, 1, "", "unfreeze_all"], [204, 2, 1, "", "unique_parameters"], [204, 2, 1, "", "value"]], "gammapy.modeling.models": [[205, 1, 1, "", "BrokenPowerLawSpectralModel"], [206, 1, 1, "", "CompoundSpectralModel"], [207, 1, 1, "", "ConstantFluxSpatialModel"], [208, 1, 1, "", "ConstantSpatialModel"], [209, 1, 1, "", "ConstantSpectralModel"], [210, 1, 1, "", "ConstantTemporalModel"], [211, 1, 1, "", "DatasetModels"], [212, 1, 1, "", "DiskSpatialModel"], [213, 1, 1, "", "EBLAbsorptionNormSpectralModel"], [214, 5, 1, "", "EBL_DATA_BUILTIN"], [215, 1, 1, "", "ExpCutoffPowerLaw3FGLSpectralModel"], [216, 1, 1, "", "ExpCutoffPowerLawNormSpectralModel"], [217, 1, 1, "", "ExpCutoffPowerLawSpectralModel"], [218, 1, 1, "", "ExpDecayTemporalModel"], [219, 1, 1, "", "FoVBackgroundModel"], [220, 1, 1, "", "GaussianSpatialModel"], [221, 1, 1, "", "GaussianSpectralModel"], [222, 1, 1, "", "GaussianTemporalModel"], [223, 1, 1, "", "GeneralizedGaussianSpatialModel"], [224, 1, 1, "", "GeneralizedGaussianTemporalModel"], [225, 1, 1, "", "LightCurveTemplateTemporalModel"], [226, 1, 1, "", "LinearTemporalModel"], [227, 1, 1, "", "LogParabolaNormSpectralModel"], [228, 1, 1, "", "LogParabolaSpectralModel"], [229, 5, 1, "", "MODEL_REGISTRY"], [230, 1, 1, "", "MeyerCrabSpectralModel"], [231, 1, 1, "", "Model"], [232, 1, 1, "", "ModelBase"], [233, 1, 1, "", "Models"], [234, 1, 1, "", "NaimaSpectralModel"], [235, 1, 1, "", "PiecewiseNormSpatialModel"], [236, 1, 1, "", "PiecewiseNormSpectralModel"], [237, 1, 1, "", "PointSpatialModel"], [238, 1, 1, "", "PowerLaw2SpectralModel"], [239, 1, 1, "", "PowerLawNormSpectralModel"], [240, 1, 1, "", "PowerLawSpectralModel"], [241, 1, 1, "", "PowerLawTemporalModel"], [242, 5, 1, "", "SPATIAL_MODEL_REGISTRY"], [243, 5, 1, "", "SPECTRAL_MODEL_REGISTRY"], [244, 1, 1, "", "ScaleSpectralModel"], [245, 1, 1, "", "Shell2SpatialModel"], [246, 1, 1, "", "ShellSpatialModel"], [247, 1, 1, "", "SineTemporalModel"], [248, 1, 1, "", "SkyModel"], [249, 1, 1, "", "SmoothBrokenPowerLawSpectralModel"], [250, 1, 1, "", "SpatialModel"], [251, 1, 1, "", "SpectralModel"], [252, 1, 1, "", "SuperExpCutoffPowerLaw3FGLSpectralModel"], [253, 1, 1, "", "SuperExpCutoffPowerLaw4FGLDR3SpectralModel"], [254, 1, 1, "", "SuperExpCutoffPowerLaw4FGLSpectralModel"], [255, 5, 1, "", "TEMPORAL_MODEL_REGISTRY"], [256, 1, 1, "", "TemplateNDSpatialModel"], [257, 1, 1, "", "TemplateNDSpectralModel"], [258, 1, 1, "", "TemplateNPredModel"], [259, 1, 1, "", "TemplatePhaseCurveTemporalModel"], [260, 1, 1, "", "TemplateSpatialModel"], [261, 1, 1, "", "TemplateSpectralModel"], [262, 1, 1, "", "TemporalModel"], [263, 4, 1, "", "create_cosmic_ray_spectral_model"], [264, 4, 1, "", "create_crab_spectral_model"], [265, 4, 1, "", "create_fermi_isotropic_diffuse_model"], [266, 4, 1, "", "integrate_spectrum"], [267, 4, 1, "", "read_hermes_cube"], [268, 4, 1, "", "scale_plot_flux"], [10, 0, 0, "-", "utils"]], "gammapy.modeling.models.BrokenPowerLawSpectralModel": [[205, 3, 1, "", "__call__"], [205, 2, 1, "", "amplitude"], [205, 3, 1, "", "copy"], [205, 2, 1, "", "covariance"], [205, 2, 1, "", "default_parameters"], [205, 2, 1, "", "ebreak"], [205, 3, 1, "", "energy_flux"], [205, 3, 1, "", "energy_flux_error"], [205, 3, 1, "", "evaluate"], [205, 3, 1, "", "evaluate_error"], [205, 3, 1, "", "freeze"], [205, 3, 1, "", "from_dict"], [205, 3, 1, "", "from_parameters"], [205, 2, 1, "", "frozen"], [205, 2, 1, "", "index1"], [205, 2, 1, "", "index2"], [205, 3, 1, "", "integral"], [205, 3, 1, "", "integral_error"], [205, 3, 1, "", "inverse"], [205, 3, 1, "", "inverse_all"], [205, 2, 1, "", "is_norm_spectral_model"], [205, 2, 1, "", "parameters"], [205, 2, 1, "", "pivot_energy"], [205, 3, 1, "", "plot"], [205, 3, 1, "", "plot_error"], [205, 3, 1, "", "reassign"], [205, 3, 1, "", "reference_fluxes"], [205, 3, 1, "", "spectral_index"], [205, 3, 1, "", "spectral_index_error"], [205, 2, 1, "", "tag"], [205, 3, 1, "", "to_dict"], [205, 2, 1, "", "type"], [205, 3, 1, "", "unfreeze"]], "gammapy.modeling.models.CompoundSpectralModel": [[206, 3, 1, "", "__call__"], [206, 3, 1, "", "copy"], [206, 2, 1, "", "covariance"], [206, 2, 1, "", "default_parameters"], [206, 3, 1, "", "energy_flux"], [206, 3, 1, "", "energy_flux_error"], [206, 3, 1, "", "evaluate"], [206, 3, 1, "", "evaluate_error"], [206, 3, 1, "", "freeze"], [206, 3, 1, "", "from_dict"], [206, 3, 1, "", "from_parameters"], [206, 2, 1, "", "frozen"], [206, 3, 1, "", "integral"], [206, 3, 1, "", "integral_error"], [206, 3, 1, "", "inverse"], [206, 3, 1, "", "inverse_all"], [206, 2, 1, "", "is_norm_spectral_model"], [206, 2, 1, "", "parameters"], [206, 2, 1, "", "pivot_energy"], [206, 3, 1, "", "plot"], [206, 3, 1, "", "plot_error"], [206, 3, 1, "", "reassign"], [206, 3, 1, "", "reference_fluxes"], [206, 3, 1, "", "spectral_index"], [206, 3, 1, "", "spectral_index_error"], [206, 2, 1, "", "tag"], [206, 3, 1, "", "to_dict"], [206, 2, 1, "", "type"], [206, 3, 1, "", "unfreeze"]], "gammapy.modeling.models.ConstantFluxSpatialModel": [[207, 3, 1, "", "__call__"], [207, 3, 1, "", "copy"], [207, 2, 1, "", "covariance"], [207, 2, 1, "", "default_parameters"], [207, 3, 1, "", "evaluate"], [207, 3, 1, "", "evaluate_geom"], [207, 2, 1, "", "evaluation_bin_size_min"], [207, 2, 1, "", "evaluation_radius"], [207, 2, 1, "", "evaluation_region"], [207, 2, 1, "", "frame"], [207, 3, 1, "", "freeze"], [207, 3, 1, "", "from_dict"], [207, 3, 1, "", "from_parameters"], [207, 3, 1, "", "from_position"], [207, 2, 1, "", "frozen"], [207, 3, 1, "", "integrate_geom"], [207, 2, 1, "", "is_energy_dependent"], [207, 2, 1, "", "parameters"], [207, 2, 1, "", "phi_0"], [207, 3, 1, "", "plot"], [207, 3, 1, "", "plot_error"], [207, 3, 1, "", "plot_grid"], [207, 3, 1, "", "plot_interactive"], [207, 3, 1, "", "plot_position_error"], [207, 2, 1, "", "position"], [207, 2, 1, "", "position_error"], [207, 2, 1, "", "position_lonlat"], [207, 3, 1, "", "reassign"], [207, 2, 1, "", "tag"], [207, 3, 1, "", "to_dict"], [207, 3, 1, "", "to_region"], [207, 2, 1, "", "type"], [207, 3, 1, "", "unfreeze"]], "gammapy.modeling.models.ConstantSpatialModel": [[208, 3, 1, "", "__call__"], [208, 3, 1, "", "copy"], [208, 2, 1, "", "covariance"], [208, 2, 1, "", "default_parameters"], [208, 3, 1, "", "evaluate"], [208, 3, 1, "", "evaluate_geom"], [208, 2, 1, "", "evaluation_bin_size_min"], [208, 2, 1, "", "evaluation_radius"], [208, 2, 1, "", "evaluation_region"], [208, 2, 1, "", "frame"], [208, 3, 1, "", "freeze"], [208, 3, 1, "", "from_dict"], [208, 3, 1, "", "from_parameters"], [208, 3, 1, "", "from_position"], [208, 2, 1, "", "frozen"], [208, 3, 1, "", "integrate_geom"], [208, 2, 1, "", "is_energy_dependent"], [208, 2, 1, "", "parameters"], [208, 2, 1, "", "phi_0"], [208, 3, 1, "", "plot"], [208, 3, 1, "", "plot_error"], [208, 3, 1, "", "plot_grid"], [208, 3, 1, "", "plot_interactive"], [208, 3, 1, "", "plot_position_error"], [208, 2, 1, "", "position"], [208, 2, 1, "", "position_error"], [208, 2, 1, "", "position_lonlat"], [208, 3, 1, "", "reassign"], [208, 2, 1, "", "tag"], [208, 3, 1, "", "to_dict"], [208, 3, 1, "", "to_region"], [208, 2, 1, "", "type"], [208, 3, 1, "", "unfreeze"], [208, 2, 1, "", "value"]], "gammapy.modeling.models.ConstantSpectralModel": [[209, 3, 1, "", "__call__"], [209, 2, 1, "", "const"], [209, 3, 1, "", "copy"], [209, 2, 1, "", "covariance"], [209, 2, 1, "", "default_parameters"], [209, 3, 1, "", "energy_flux"], [209, 3, 1, "", "energy_flux_error"], [209, 3, 1, "", "evaluate"], [209, 3, 1, "", "evaluate_error"], [209, 3, 1, "", "freeze"], [209, 3, 1, "", "from_dict"], [209, 3, 1, "", "from_parameters"], [209, 2, 1, "", "frozen"], [209, 3, 1, "", "integral"], [209, 3, 1, "", "integral_error"], [209, 3, 1, "", "inverse"], [209, 3, 1, "", "inverse_all"], [209, 2, 1, "", "is_norm_spectral_model"], [209, 2, 1, "", "parameters"], [209, 2, 1, "", "pivot_energy"], [209, 3, 1, "", "plot"], [209, 3, 1, "", "plot_error"], [209, 3, 1, "", "reassign"], [209, 3, 1, "", "reference_fluxes"], [209, 3, 1, "", "spectral_index"], [209, 3, 1, "", "spectral_index_error"], [209, 2, 1, "", "tag"], [209, 3, 1, "", "to_dict"], [209, 2, 1, "", "type"], [209, 3, 1, "", "unfreeze"]], "gammapy.modeling.models.ConstantTemporalModel": [[210, 3, 1, "", "__call__"], [210, 3, 1, "", "copy"], [210, 2, 1, "", "covariance"], [210, 2, 1, "", "default_parameters"], [210, 3, 1, "", "evaluate"], [210, 3, 1, "", "freeze"], [210, 3, 1, "", "from_dict"], [210, 3, 1, "", "from_parameters"], [210, 2, 1, "", "frozen"], [210, 3, 1, "", "integral"], [210, 2, 1, "", "is_energy_dependent"], [210, 2, 1, "", "parameters"], [210, 3, 1, "", "plot"], [210, 3, 1, "", "reassign"], [210, 2, 1, "", "reference_time"], [210, 3, 1, "", "sample_time"], [210, 2, 1, "", "tag"], [210, 3, 1, "", "time_sum"], [210, 3, 1, "", "to_dict"], [210, 2, 1, "", "type"], [210, 3, 1, "", "unfreeze"]], "gammapy.modeling.models.DatasetModels": [[211, 3, 1, "", "copy"], [211, 3, 1, "", "count"], [211, 2, 1, "", "covariance"], [211, 3, 1, "", "freeze"], [211, 3, 1, "", "from_dict"], [211, 3, 1, "", "from_yaml"], [211, 2, 1, "", "frozen"], [211, 3, 1, "", "index"], [211, 2, 1, "", "names"], [211, 2, 1, "", "parameters"], [211, 2, 1, "", "parameters_unique_names"], [211, 3, 1, "", "plot_positions"], [211, 3, 1, "", "plot_regions"], [211, 2, 1, "", "positions"], [211, 3, 1, "", "read"], [211, 3, 1, "", "read_covariance"], [211, 3, 1, "", "reassign"], [211, 3, 1, "", "restore_status"], [211, 3, 1, "", "select"], [211, 3, 1, "", "select_from_geom"], [211, 3, 1, "", "select_mask"], [211, 3, 1, "", "select_region"], [211, 3, 1, "", "selection_mask"], [211, 3, 1, "", "set_parameters_bounds"], [211, 3, 1, "", "to_dict"], [211, 3, 1, "", "to_parameters_table"], [211, 3, 1, "", "to_regions"], [211, 3, 1, "", "to_template_sky_model"], [211, 3, 1, "", "to_template_spectral_model"], [211, 3, 1, "", "to_yaml"], [211, 3, 1, "", "unfreeze"], [211, 3, 1, "", "update_link_label"], [211, 3, 1, "", "update_parameters_from_table"], [211, 2, 1, "", "wcs_geom"], [211, 3, 1, "", "write"], [211, 3, 1, "", "write_covariance"]], "gammapy.modeling.models.DiskSpatialModel": [[212, 3, 1, "", "__call__"], [212, 3, 1, "", "copy"], [212, 2, 1, "", "covariance"], [212, 2, 1, "", "default_parameters"], [212, 2, 1, "", "e"], [212, 2, 1, "", "edge_width"], [212, 3, 1, "", "evaluate"], [212, 3, 1, "", "evaluate_geom"], [212, 2, 1, "", "evaluation_bin_size_min"], [212, 2, 1, "", "evaluation_radius"], [212, 2, 1, "", "evaluation_region"], [212, 3, 1, "", "freeze"], [212, 3, 1, "", "from_dict"], [212, 3, 1, "", "from_parameters"], [212, 3, 1, "", "from_position"], [212, 3, 1, "", "from_region"], [212, 2, 1, "", "frozen"], [212, 3, 1, "", "integrate_geom"], [212, 2, 1, "", "is_energy_dependent"], [212, 2, 1, "", "lat_0"], [212, 2, 1, "", "lon_0"], [212, 2, 1, "", "parameters"], [212, 2, 1, "", "phi"], [212, 2, 1, "", "phi_0"], [212, 3, 1, "", "plot"], [212, 3, 1, "", "plot_error"], [212, 3, 1, "", "plot_grid"], [212, 3, 1, "", "plot_interactive"], [212, 3, 1, "", "plot_position_error"], [212, 2, 1, "", "position"], [212, 2, 1, "", "position_error"], [212, 2, 1, "", "position_lonlat"], [212, 2, 1, "", "r_0"], [212, 3, 1, "", "reassign"], [212, 2, 1, "", "tag"], [212, 3, 1, "", "to_dict"], [212, 3, 1, "", "to_region"], [212, 2, 1, "", "type"], [212, 3, 1, "", "unfreeze"]], "gammapy.modeling.models.EBLAbsorptionNormSpectralModel": [[213, 3, 1, "", "__call__"], [213, 2, 1, "", "alpha_norm"], [213, 3, 1, "", "copy"], [213, 2, 1, "", "covariance"], [213, 2, 1, "", "default_parameters"], [213, 3, 1, "", "energy_flux"], [213, 3, 1, "", "energy_flux_error"], [213, 3, 1, "", "evaluate"], [213, 3, 1, "", "evaluate_error"], [213, 3, 1, "", "freeze"], [213, 3, 1, "", "from_dict"], [213, 3, 1, "", "from_parameters"], [213, 2, 1, "", "frozen"], [213, 3, 1, "", "integral"], [213, 3, 1, "", "integral_error"], [213, 3, 1, "", "inverse"], [213, 3, 1, "", "inverse_all"], [213, 2, 1, "", "is_norm_spectral_model"], [213, 2, 1, "", "parameters"], [213, 2, 1, "", "pivot_energy"], [213, 3, 1, "", "plot"], [213, 3, 1, "", "plot_error"], [213, 3, 1, "", "read"], [213, 3, 1, "", "read_builtin"], [213, 3, 1, "", "reassign"], [213, 2, 1, "", "redshift"], [213, 3, 1, "", "reference_fluxes"], [213, 3, 1, "", "spectral_index"], [213, 3, 1, "", "spectral_index_error"], [213, 2, 1, "", "tag"], [213, 3, 1, "", "to_dict"], [213, 2, 1, "", "type"], [213, 3, 1, "", "unfreeze"]], "gammapy.modeling.models.ExpCutoffPowerLaw3FGLSpectralModel": [[215, 3, 1, "", "__call__"], [215, 2, 1, "", "amplitude"], [215, 3, 1, "", "copy"], [215, 2, 1, "", "covariance"], [215, 2, 1, "", "default_parameters"], [215, 2, 1, "", "ecut"], [215, 3, 1, "", "energy_flux"], [215, 3, 1, "", "energy_flux_error"], [215, 3, 1, "", "evaluate"], [215, 3, 1, "", "evaluate_error"], [215, 3, 1, "", "freeze"], [215, 3, 1, "", "from_dict"], [215, 3, 1, "", "from_parameters"], [215, 2, 1, "", "frozen"], [215, 2, 1, "", "index"], [215, 3, 1, "", "integral"], [215, 3, 1, "", "integral_error"], [215, 3, 1, "", "inverse"], [215, 3, 1, "", "inverse_all"], [215, 2, 1, "", "is_norm_spectral_model"], [215, 2, 1, "", "parameters"], [215, 2, 1, "", "pivot_energy"], [215, 3, 1, "", "plot"], [215, 3, 1, "", "plot_error"], [215, 3, 1, "", "reassign"], [215, 2, 1, "", "reference"], [215, 3, 1, "", "reference_fluxes"], [215, 3, 1, "", "spectral_index"], [215, 3, 1, "", "spectral_index_error"], [215, 2, 1, "", "tag"], [215, 3, 1, "", "to_dict"], [215, 2, 1, "", "type"], [215, 3, 1, "", "unfreeze"]], "gammapy.modeling.models.ExpCutoffPowerLawNormSpectralModel": [[216, 3, 1, "", "__call__"], [216, 2, 1, "", "alpha"], [216, 3, 1, "", "copy"], [216, 2, 1, "", "covariance"], [216, 2, 1, "", "default_parameters"], [216, 3, 1, "", "energy_flux"], [216, 3, 1, "", "energy_flux_error"], [216, 3, 1, "", "evaluate"], [216, 3, 1, "", "evaluate_error"], [216, 3, 1, "", "freeze"], [216, 3, 1, "", "from_dict"], [216, 3, 1, "", "from_parameters"], [216, 2, 1, "", "frozen"], [216, 2, 1, "", "index"], [216, 3, 1, "", "integral"], [216, 3, 1, "", "integral_error"], [216, 3, 1, "", "inverse"], [216, 3, 1, "", "inverse_all"], [216, 2, 1, "", "is_norm_spectral_model"], [216, 2, 1, "", "lambda_"], [216, 2, 1, "", "norm"], [216, 2, 1, "", "parameters"], [216, 2, 1, "", "pivot_energy"], [216, 3, 1, "", "plot"], [216, 3, 1, "", "plot_error"], [216, 3, 1, "", "reassign"], [216, 2, 1, "", "reference"], [216, 3, 1, "", "reference_fluxes"], [216, 3, 1, "", "spectral_index"], [216, 3, 1, "", "spectral_index_error"], [216, 2, 1, "", "tag"], [216, 3, 1, "", "to_dict"], [216, 2, 1, "", "type"], [216, 3, 1, "", "unfreeze"]], "gammapy.modeling.models.ExpCutoffPowerLawSpectralModel": [[217, 3, 1, "", "__call__"], [217, 2, 1, "", "alpha"], [217, 2, 1, "", "amplitude"], [217, 3, 1, "", "copy"], [217, 2, 1, "", "covariance"], [217, 2, 1, "", "default_parameters"], [217, 2, 1, "", "e_peak"], [217, 3, 1, "", "energy_flux"], [217, 3, 1, "", "energy_flux_error"], [217, 3, 1, "", "evaluate"], [217, 3, 1, "", "evaluate_error"], [217, 3, 1, "", "freeze"], [217, 3, 1, "", "from_dict"], [217, 3, 1, "", "from_parameters"], [217, 2, 1, "", "frozen"], [217, 2, 1, "", "index"], [217, 3, 1, "", "integral"], [217, 3, 1, "", "integral_error"], [217, 3, 1, "", "inverse"], [217, 3, 1, "", "inverse_all"], [217, 2, 1, "", "is_norm_spectral_model"], [217, 2, 1, "", "lambda_"], [217, 2, 1, "", "parameters"], [217, 2, 1, "", "pivot_energy"], [217, 3, 1, "", "plot"], [217, 3, 1, "", "plot_error"], [217, 3, 1, "", "reassign"], [217, 2, 1, "", "reference"], [217, 3, 1, "", "reference_fluxes"], [217, 3, 1, "", "spectral_index"], [217, 3, 1, "", "spectral_index_error"], [217, 2, 1, "", "tag"], [217, 3, 1, "", "to_dict"], [217, 2, 1, "", "type"], [217, 3, 1, "", "unfreeze"]], "gammapy.modeling.models.ExpDecayTemporalModel": [[218, 3, 1, "", "__call__"], [218, 3, 1, "", "copy"], [218, 2, 1, "", "covariance"], [218, 2, 1, "", "default_parameters"], [218, 3, 1, "", "evaluate"], [218, 3, 1, "", "freeze"], [218, 3, 1, "", "from_dict"], [218, 3, 1, "", "from_parameters"], [218, 2, 1, "", "frozen"], [218, 3, 1, "", "integral"], [218, 2, 1, "", "is_energy_dependent"], [218, 2, 1, "", "parameters"], [218, 3, 1, "", "plot"], [218, 3, 1, "", "reassign"], [218, 2, 1, "", "reference_time"], [218, 3, 1, "", "sample_time"], [218, 2, 1, "", "t0"], [218, 2, 1, "", "t_ref"], [218, 2, 1, "", "tag"], [218, 3, 1, "", "time_sum"], [218, 3, 1, "", "to_dict"], [218, 2, 1, "", "type"], [218, 3, 1, "", "unfreeze"]], "gammapy.modeling.models.FoVBackgroundModel": [[219, 3, 1, "", "contributes"], [219, 3, 1, "", "copy"], [219, 2, 1, "", "covariance"], [219, 2, 1, "", "default_parameters"], [219, 3, 1, "", "evaluate"], [219, 3, 1, "", "evaluate_geom"], [219, 3, 1, "", "freeze"], [219, 3, 1, "", "from_dict"], [219, 3, 1, "", "from_parameters"], [219, 2, 1, "", "frozen"], [219, 2, 1, "", "name"], [219, 2, 1, "", "parameters"], [219, 3, 1, "", "reassign"], [219, 3, 1, "", "reset_to_default"], [219, 2, 1, "", "spatial_model"], [219, 2, 1, "", "spectral_model"], [219, 2, 1, "", "tag"], [219, 3, 1, "", "to_dict"], [219, 2, 1, "", "type"], [219, 3, 1, "", "unfreeze"]], "gammapy.modeling.models.GaussianSpatialModel": [[220, 3, 1, "", "__call__"], [220, 3, 1, "", "copy"], [220, 2, 1, "", "covariance"], [220, 2, 1, "", "default_parameters"], [220, 2, 1, "", "e"], [220, 3, 1, "", "evaluate"], [220, 3, 1, "", "evaluate_geom"], [220, 2, 1, "", "evaluation_bin_size_min"], [220, 2, 1, "", "evaluation_radius"], [220, 2, 1, "", "evaluation_region"], [220, 3, 1, "", "freeze"], [220, 3, 1, "", "from_dict"], [220, 3, 1, "", "from_parameters"], [220, 3, 1, "", "from_position"], [220, 2, 1, "", "frozen"], [220, 3, 1, "", "integrate_geom"], [220, 2, 1, "", "is_energy_dependent"], [220, 2, 1, "", "lat_0"], [220, 2, 1, "", "lon_0"], [220, 2, 1, "", "parameters"], [220, 2, 1, "", "phi"], [220, 2, 1, "", "phi_0"], [220, 3, 1, "", "plot"], [220, 3, 1, "", "plot_error"], [220, 3, 1, "", "plot_grid"], [220, 3, 1, "", "plot_interactive"], [220, 3, 1, "", "plot_position_error"], [220, 2, 1, "", "position"], [220, 2, 1, "", "position_error"], [220, 2, 1, "", "position_lonlat"], [220, 3, 1, "", "reassign"], [220, 2, 1, "", "sigma"], [220, 2, 1, "", "tag"], [220, 3, 1, "", "to_dict"], [220, 3, 1, "", "to_region"], [220, 2, 1, "", "type"], [220, 3, 1, "", "unfreeze"]], "gammapy.modeling.models.GaussianSpectralModel": [[221, 3, 1, "", "__call__"], [221, 2, 1, "", "amplitude"], [221, 3, 1, "", "copy"], [221, 2, 1, "", "covariance"], [221, 2, 1, "", "default_parameters"], [221, 3, 1, "", "energy_flux"], [221, 3, 1, "", "energy_flux_error"], [221, 3, 1, "", "evaluate"], [221, 3, 1, "", "evaluate_error"], [221, 3, 1, "", "freeze"], [221, 3, 1, "", "from_dict"], [221, 3, 1, "", "from_parameters"], [221, 2, 1, "", "frozen"], [221, 3, 1, "", "integral"], [221, 3, 1, "", "integral_error"], [221, 3, 1, "", "inverse"], [221, 3, 1, "", "inverse_all"], [221, 2, 1, "", "is_norm_spectral_model"], [221, 2, 1, "", "mean"], [221, 2, 1, "", "parameters"], [221, 2, 1, "", "pivot_energy"], [221, 3, 1, "", "plot"], [221, 3, 1, "", "plot_error"], [221, 3, 1, "", "reassign"], [221, 3, 1, "", "reference_fluxes"], [221, 2, 1, "", "sigma"], [221, 3, 1, "", "spectral_index"], [221, 3, 1, "", "spectral_index_error"], [221, 2, 1, "", "tag"], [221, 3, 1, "", "to_dict"], [221, 2, 1, "", "type"], [221, 3, 1, "", "unfreeze"]], "gammapy.modeling.models.GaussianTemporalModel": [[222, 3, 1, "", "__call__"], [222, 3, 1, "", "copy"], [222, 2, 1, "", "covariance"], [222, 2, 1, "", "default_parameters"], [222, 3, 1, "", "evaluate"], [222, 3, 1, "", "freeze"], [222, 3, 1, "", "from_dict"], [222, 3, 1, "", "from_parameters"], [222, 2, 1, "", "frozen"], [222, 3, 1, "", "integral"], [222, 2, 1, "", "is_energy_dependent"], [222, 2, 1, "", "parameters"], [222, 3, 1, "", "plot"], [222, 3, 1, "", "reassign"], [222, 2, 1, "", "reference_time"], [222, 3, 1, "", "sample_time"], [222, 2, 1, "", "sigma"], [222, 2, 1, "", "t_ref"], [222, 2, 1, "", "tag"], [222, 3, 1, "", "time_sum"], [222, 3, 1, "", "to_dict"], [222, 2, 1, "", "type"], [222, 3, 1, "", "unfreeze"]], "gammapy.modeling.models.GeneralizedGaussianSpatialModel": [[223, 3, 1, "", "__call__"], [223, 3, 1, "", "copy"], [223, 2, 1, "", "covariance"], [223, 2, 1, "", "default_parameters"], [223, 2, 1, "", "e"], [223, 2, 1, "", "eta"], [223, 3, 1, "", "evaluate"], [223, 3, 1, "", "evaluate_geom"], [223, 2, 1, "", "evaluation_bin_size_min"], [223, 2, 1, "", "evaluation_radius"], [223, 2, 1, "", "evaluation_region"], [223, 3, 1, "", "freeze"], [223, 3, 1, "", "from_dict"], [223, 3, 1, "", "from_parameters"], [223, 3, 1, "", "from_position"], [223, 2, 1, "", "frozen"], [223, 3, 1, "", "integrate_geom"], [223, 2, 1, "", "is_energy_dependent"], [223, 2, 1, "", "lat_0"], [223, 2, 1, "", "lon_0"], [223, 2, 1, "", "parameters"], [223, 2, 1, "", "phi"], [223, 2, 1, "", "phi_0"], [223, 3, 1, "", "plot"], [223, 3, 1, "", "plot_error"], [223, 3, 1, "", "plot_grid"], [223, 3, 1, "", "plot_interactive"], [223, 3, 1, "", "plot_position_error"], [223, 2, 1, "", "position"], [223, 2, 1, "", "position_error"], [223, 2, 1, "", "position_lonlat"], [223, 2, 1, "", "r_0"], [223, 3, 1, "", "reassign"], [223, 2, 1, "", "tag"], [223, 3, 1, "", "to_dict"], [223, 3, 1, "", "to_region"], [223, 2, 1, "", "type"], [223, 3, 1, "", "unfreeze"]], "gammapy.modeling.models.GeneralizedGaussianTemporalModel": [[224, 3, 1, "", "__call__"], [224, 3, 1, "", "copy"], [224, 2, 1, "", "covariance"], [224, 2, 1, "", "default_parameters"], [224, 2, 1, "", "eta"], [224, 3, 1, "", "evaluate"], [224, 3, 1, "", "freeze"], [224, 3, 1, "", "from_dict"], [224, 3, 1, "", "from_parameters"], [224, 2, 1, "", "frozen"], [224, 3, 1, "", "integral"], [224, 2, 1, "", "is_energy_dependent"], [224, 2, 1, "", "parameters"], [224, 3, 1, "", "plot"], [224, 3, 1, "", "reassign"], [224, 2, 1, "", "reference_time"], [224, 3, 1, "", "sample_time"], [224, 2, 1, "", "t_decay"], [224, 2, 1, "", "t_ref"], [224, 2, 1, "", "t_rise"], [224, 2, 1, "", "tag"], [224, 3, 1, "", "time_sum"], [224, 3, 1, "", "to_dict"], [224, 2, 1, "", "type"], [224, 3, 1, "", "unfreeze"]], "gammapy.modeling.models.LightCurveTemplateTemporalModel": [[225, 3, 1, "", "__call__"], [225, 3, 1, "", "copy"], [225, 2, 1, "", "covariance"], [225, 2, 1, "", "default_parameters"], [225, 3, 1, "", "evaluate"], [225, 3, 1, "", "freeze"], [225, 3, 1, "", "from_dict"], [225, 3, 1, "", "from_parameters"], [225, 3, 1, "", "from_table"], [225, 2, 1, "", "frozen"], [225, 3, 1, "", "integral"], [225, 2, 1, "", "is_energy_dependent"], [225, 2, 1, "", "parameters"], [225, 3, 1, "", "plot"], [225, 3, 1, "", "read"], [225, 3, 1, "", "reassign"], [225, 2, 1, "", "reference_time"], [225, 3, 1, "", "sample_time"], [225, 2, 1, "", "t_ref"], [225, 2, 1, "", "tag"], [225, 3, 1, "", "time_sum"], [225, 3, 1, "", "to_dict"], [225, 3, 1, "", "to_table"], [225, 2, 1, "", "type"], [225, 3, 1, "", "unfreeze"], [225, 3, 1, "", "write"]], "gammapy.modeling.models.LinearTemporalModel": [[226, 3, 1, "", "__call__"], [226, 2, 1, "", "alpha"], [226, 2, 1, "", "beta"], [226, 3, 1, "", "copy"], [226, 2, 1, "", "covariance"], [226, 2, 1, "", "default_parameters"], [226, 3, 1, "", "evaluate"], [226, 3, 1, "", "freeze"], [226, 3, 1, "", "from_dict"], [226, 3, 1, "", "from_parameters"], [226, 2, 1, "", "frozen"], [226, 3, 1, "", "integral"], [226, 2, 1, "", "is_energy_dependent"], [226, 2, 1, "", "parameters"], [226, 3, 1, "", "plot"], [226, 3, 1, "", "reassign"], [226, 2, 1, "", "reference_time"], [226, 3, 1, "", "sample_time"], [226, 2, 1, "", "t_ref"], [226, 2, 1, "", "tag"], [226, 3, 1, "", "time_sum"], [226, 3, 1, "", "to_dict"], [226, 2, 1, "", "type"], [226, 3, 1, "", "unfreeze"]], "gammapy.modeling.models.LogParabolaNormSpectralModel": [[227, 3, 1, "", "__call__"], [227, 2, 1, "", "alpha"], [227, 2, 1, "", "beta"], [227, 3, 1, "", "copy"], [227, 2, 1, "", "covariance"], [227, 2, 1, "", "default_parameters"], [227, 3, 1, "", "energy_flux"], [227, 3, 1, "", "energy_flux_error"], [227, 3, 1, "", "evaluate"], [227, 3, 1, "", "evaluate_error"], [227, 3, 1, "", "freeze"], [227, 3, 1, "", "from_dict"], [227, 3, 1, "", "from_log10"], [227, 3, 1, "", "from_parameters"], [227, 2, 1, "", "frozen"], [227, 3, 1, "", "integral"], [227, 3, 1, "", "integral_error"], [227, 3, 1, "", "inverse"], [227, 3, 1, "", "inverse_all"], [227, 2, 1, "", "is_norm_spectral_model"], [227, 2, 1, "", "norm"], [227, 2, 1, "", "parameters"], [227, 2, 1, "", "pivot_energy"], [227, 3, 1, "", "plot"], [227, 3, 1, "", "plot_error"], [227, 3, 1, "", "reassign"], [227, 2, 1, "", "reference"], [227, 3, 1, "", "reference_fluxes"], [227, 3, 1, "", "spectral_index"], [227, 3, 1, "", "spectral_index_error"], [227, 2, 1, "", "tag"], [227, 3, 1, "", "to_dict"], [227, 2, 1, "", "type"], [227, 3, 1, "", "unfreeze"]], "gammapy.modeling.models.LogParabolaSpectralModel": [[228, 3, 1, "", "__call__"], [228, 2, 1, "", "alpha"], [228, 2, 1, "", "amplitude"], [228, 2, 1, "", "beta"], [228, 3, 1, "", "copy"], [228, 2, 1, "", "covariance"], [228, 2, 1, "", "default_parameters"], [228, 2, 1, "", "e_peak"], [228, 3, 1, "", "energy_flux"], [228, 3, 1, "", "energy_flux_error"], [228, 3, 1, "", "evaluate"], [228, 3, 1, "", "evaluate_error"], [228, 3, 1, "", "freeze"], [228, 3, 1, "", "from_dict"], [228, 3, 1, "", "from_log10"], [228, 3, 1, "", "from_parameters"], [228, 2, 1, "", "frozen"], [228, 3, 1, "", "integral"], [228, 3, 1, "", "integral_error"], [228, 3, 1, "", "inverse"], [228, 3, 1, "", "inverse_all"], [228, 2, 1, "", "is_norm_spectral_model"], [228, 2, 1, "", "parameters"], [228, 2, 1, "", "pivot_energy"], [228, 3, 1, "", "plot"], [228, 3, 1, "", "plot_error"], [228, 3, 1, "", "reassign"], [228, 2, 1, "", "reference"], [228, 3, 1, "", "reference_fluxes"], [228, 3, 1, "", "spectral_index"], [228, 3, 1, "", "spectral_index_error"], [228, 2, 1, "", "tag"], [228, 3, 1, "", "to_dict"], [228, 2, 1, "", "type"], [228, 3, 1, "", "unfreeze"]], "gammapy.modeling.models.MeyerCrabSpectralModel": [[230, 3, 1, "", "__call__"], [230, 2, 1, "", "coefficients"], [230, 3, 1, "", "copy"], [230, 2, 1, "", "covariance"], [230, 2, 1, "", "default_parameters"], [230, 3, 1, "", "energy_flux"], [230, 3, 1, "", "energy_flux_error"], [230, 3, 1, "", "evaluate"], [230, 3, 1, "", "evaluate_error"], [230, 3, 1, "", "freeze"], [230, 3, 1, "", "from_dict"], [230, 3, 1, "", "from_parameters"], [230, 2, 1, "", "frozen"], [230, 3, 1, "", "integral"], [230, 3, 1, "", "integral_error"], [230, 3, 1, "", "inverse"], [230, 3, 1, "", "inverse_all"], [230, 2, 1, "", "is_norm_spectral_model"], [230, 2, 1, "", "norm"], [230, 2, 1, "", "parameters"], [230, 2, 1, "", "pivot_energy"], [230, 3, 1, "", "plot"], [230, 3, 1, "", "plot_error"], [230, 3, 1, "", "reassign"], [230, 3, 1, "", "reference_fluxes"], [230, 3, 1, "", "spectral_index"], [230, 3, 1, "", "spectral_index_error"], [230, 3, 1, "", "to_dict"], [230, 2, 1, "", "type"], [230, 3, 1, "", "unfreeze"]], "gammapy.modeling.models.Model": [[231, 3, 1, "", "create"], [231, 3, 1, "", "from_dict"]], "gammapy.modeling.models.ModelBase": [[232, 3, 1, "", "copy"], [232, 2, 1, "", "covariance"], [232, 3, 1, "", "freeze"], [232, 3, 1, "", "from_dict"], [232, 3, 1, "", "from_parameters"], [232, 2, 1, "", "frozen"], [232, 2, 1, "", "parameters"], [232, 3, 1, "", "reassign"], [232, 3, 1, "", "to_dict"], [232, 2, 1, "", "type"], [232, 3, 1, "", "unfreeze"]], "gammapy.modeling.models.Models": [[233, 3, 1, "", "append"], [233, 3, 1, "", "clear"], [233, 3, 1, "", "copy"], [233, 3, 1, "", "count"], [233, 2, 1, "", "covariance"], [233, 3, 1, "", "extend"], [233, 3, 1, "", "freeze"], [233, 3, 1, "", "from_dict"], [233, 3, 1, "", "from_yaml"], [233, 2, 1, "", "frozen"], [233, 3, 1, "", "index"], [233, 3, 1, "", "insert"], [233, 2, 1, "", "names"], [233, 2, 1, "", "parameters"], [233, 2, 1, "", "parameters_unique_names"], [233, 3, 1, "", "plot_positions"], [233, 3, 1, "", "plot_regions"], [233, 3, 1, "", "pop"], [233, 2, 1, "", "positions"], [233, 3, 1, "", "read"], [233, 3, 1, "", "read_covariance"], [233, 3, 1, "", "reassign"], [233, 3, 1, "", "remove"], [233, 3, 1, "", "restore_status"], [233, 3, 1, "", "reverse"], [233, 3, 1, "", "select"], [233, 3, 1, "", "select_from_geom"], [233, 3, 1, "", "select_mask"], [233, 3, 1, "", "select_region"], [233, 3, 1, "", "selection_mask"], [233, 3, 1, "", "set_parameters_bounds"], [233, 3, 1, "", "set_prior"], [233, 3, 1, "", "to_dict"], [233, 3, 1, "", "to_parameters_table"], [233, 3, 1, "", "to_regions"], [233, 3, 1, "", "to_template_sky_model"], [233, 3, 1, "", "to_template_spectral_model"], [233, 3, 1, "", "to_yaml"], [233, 3, 1, "", "unfreeze"], [233, 3, 1, "", "update_link_label"], [233, 3, 1, "", "update_parameters_from_table"], [233, 2, 1, "", "wcs_geom"], [233, 3, 1, "", "write"], [233, 3, 1, "", "write_covariance"]], "gammapy.modeling.models.NaimaSpectralModel": [[234, 3, 1, "", "__call__"], [234, 3, 1, "", "copy"], [234, 2, 1, "", "covariance"], [234, 2, 1, "", "default_parameters"], [234, 3, 1, "", "energy_flux"], [234, 3, 1, "", "energy_flux_error"], [234, 3, 1, "", "evaluate"], [234, 3, 1, "", "evaluate_error"], [234, 3, 1, "", "freeze"], [234, 3, 1, "", "from_dict"], [234, 3, 1, "", "from_parameters"], [234, 2, 1, "", "frozen"], [234, 2, 1, "", "include_ssc"], [234, 3, 1, "", "integral"], [234, 3, 1, "", "integral_error"], [234, 3, 1, "", "inverse"], [234, 3, 1, "", "inverse_all"], [234, 2, 1, "", "is_norm_spectral_model"], [234, 2, 1, "", "parameters"], [234, 2, 1, "", "particle_distribution"], [234, 2, 1, "", "pivot_energy"], [234, 3, 1, "", "plot"], [234, 3, 1, "", "plot_error"], [234, 3, 1, "", "reassign"], [234, 3, 1, "", "reference_fluxes"], [234, 3, 1, "", "spectral_index"], [234, 3, 1, "", "spectral_index_error"], [234, 2, 1, "", "ssc_model"], [234, 2, 1, "", "tag"], [234, 3, 1, "", "to_dict"], [234, 2, 1, "", "type"], [234, 3, 1, "", "unfreeze"]], "gammapy.modeling.models.PiecewiseNormSpatialModel": [[235, 3, 1, "", "__call__"], [235, 2, 1, "", "coords"], [235, 3, 1, "", "copy"], [235, 2, 1, "", "covariance"], [235, 2, 1, "", "default_parameters"], [235, 3, 1, "", "evaluate"], [235, 3, 1, "", "evaluate_geom"], [235, 2, 1, "", "evaluation_bin_size_min"], [235, 2, 1, "", "evaluation_radius"], [235, 2, 1, "", "evaluation_region"], [235, 3, 1, "", "freeze"], [235, 3, 1, "", "from_dict"], [235, 3, 1, "", "from_parameters"], [235, 3, 1, "", "from_position"], [235, 2, 1, "", "frozen"], [235, 3, 1, "", "integrate_geom"], [235, 2, 1, "", "is_energy_dependent"], [235, 2, 1, "", "norms"], [235, 2, 1, "", "parameters"], [235, 2, 1, "", "phi_0"], [235, 3, 1, "", "plot"], [235, 3, 1, "", "plot_error"], [235, 3, 1, "", "plot_grid"], [235, 3, 1, "", "plot_interactive"], [235, 3, 1, "", "plot_position_error"], [235, 2, 1, "", "position"], [235, 2, 1, "", "position_error"], [235, 2, 1, "", "position_lonlat"], [235, 3, 1, "", "reassign"], [235, 2, 1, "", "tag"], [235, 3, 1, "", "to_dict"], [235, 2, 1, "", "type"], [235, 3, 1, "", "unfreeze"]], "gammapy.modeling.models.PiecewiseNormSpectralModel": [[236, 3, 1, "", "__call__"], [236, 3, 1, "", "copy"], [236, 2, 1, "", "covariance"], [236, 2, 1, "", "default_parameters"], [236, 2, 1, "", "energy"], [236, 3, 1, "", "energy_flux"], [236, 3, 1, "", "energy_flux_error"], [236, 3, 1, "", "evaluate"], [236, 3, 1, "", "evaluate_error"], [236, 3, 1, "", "freeze"], [236, 3, 1, "", "from_dict"], [236, 3, 1, "", "from_parameters"], [236, 2, 1, "", "frozen"], [236, 3, 1, "", "integral"], [236, 3, 1, "", "integral_error"], [236, 3, 1, "", "inverse"], [236, 3, 1, "", "inverse_all"], [236, 2, 1, "", "is_norm_spectral_model"], [236, 2, 1, "", "norms"], [236, 2, 1, "", "parameters"], [236, 2, 1, "", "pivot_energy"], [236, 3, 1, "", "plot"], [236, 3, 1, "", "plot_error"], [236, 3, 1, "", "reassign"], [236, 3, 1, "", "reference_fluxes"], [236, 3, 1, "", "spectral_index"], [236, 3, 1, "", "spectral_index_error"], [236, 2, 1, "", "tag"], [236, 3, 1, "", "to_dict"], [236, 2, 1, "", "type"], [236, 3, 1, "", "unfreeze"]], "gammapy.modeling.models.PointSpatialModel": [[237, 3, 1, "", "__call__"], [237, 3, 1, "", "copy"], [237, 2, 1, "", "covariance"], [237, 2, 1, "", "default_parameters"], [237, 3, 1, "", "evaluate_geom"], [237, 2, 1, "", "evaluation_bin_size_min"], [237, 2, 1, "", "evaluation_radius"], [237, 2, 1, "", "evaluation_region"], [237, 3, 1, "", "freeze"], [237, 3, 1, "", "from_dict"], [237, 3, 1, "", "from_parameters"], [237, 3, 1, "", "from_position"], [237, 2, 1, "", "frozen"], [237, 3, 1, "", "integrate_geom"], [237, 2, 1, "", "is_energy_dependent"], [237, 2, 1, "", "lat_0"], [237, 2, 1, "", "lon_0"], [237, 2, 1, "", "parameters"], [237, 2, 1, "", "phi_0"], [237, 3, 1, "", "plot"], [237, 3, 1, "", "plot_error"], [237, 3, 1, "", "plot_grid"], [237, 3, 1, "", "plot_interactive"], [237, 3, 1, "", "plot_position_error"], [237, 2, 1, "", "position"], [237, 2, 1, "", "position_error"], [237, 2, 1, "", "position_lonlat"], [237, 3, 1, "", "reassign"], [237, 2, 1, "", "tag"], [237, 3, 1, "", "to_dict"], [237, 3, 1, "", "to_region"], [237, 2, 1, "", "type"], [237, 3, 1, "", "unfreeze"]], "gammapy.modeling.models.PowerLaw2SpectralModel": [[238, 3, 1, "", "__call__"], [238, 2, 1, "", "amplitude"], [238, 3, 1, "", "copy"], [238, 2, 1, "", "covariance"], [238, 2, 1, "", "default_parameters"], [238, 2, 1, "", "emax"], [238, 2, 1, "", "emin"], [238, 3, 1, "", "energy_flux"], [238, 3, 1, "", "energy_flux_error"], [238, 3, 1, "", "evaluate"], [238, 3, 1, "", "evaluate_error"], [238, 3, 1, "", "evaluate_integral"], [238, 3, 1, "", "freeze"], [238, 3, 1, "", "from_dict"], [238, 3, 1, "", "from_parameters"], [238, 2, 1, "", "frozen"], [238, 2, 1, "", "index"], [238, 3, 1, "", "integral"], [238, 3, 1, "", "integral_error"], [238, 3, 1, "", "inverse"], [238, 3, 1, "", "inverse_all"], [238, 2, 1, "", "is_norm_spectral_model"], [238, 2, 1, "", "parameters"], [238, 2, 1, "", "pivot_energy"], [238, 3, 1, "", "plot"], [238, 3, 1, "", "plot_error"], [238, 3, 1, "", "reassign"], [238, 3, 1, "", "reference_fluxes"], [238, 3, 1, "", "spectral_index"], [238, 3, 1, "", "spectral_index_error"], [238, 2, 1, "", "tag"], [238, 3, 1, "", "to_dict"], [238, 2, 1, "", "type"], [238, 3, 1, "", "unfreeze"]], "gammapy.modeling.models.PowerLawNormSpectralModel": [[239, 3, 1, "", "__call__"], [239, 3, 1, "", "copy"], [239, 2, 1, "", "covariance"], [239, 2, 1, "", "default_parameters"], [239, 3, 1, "", "energy_flux"], [239, 3, 1, "", "energy_flux_error"], [239, 3, 1, "", "evaluate"], [239, 3, 1, "", "evaluate_energy_flux"], [239, 3, 1, "", "evaluate_error"], [239, 3, 1, "", "evaluate_integral"], [239, 3, 1, "", "freeze"], [239, 3, 1, "", "from_dict"], [239, 3, 1, "", "from_parameters"], [239, 2, 1, "", "frozen"], [239, 3, 1, "", "integral"], [239, 3, 1, "", "integral_error"], [239, 3, 1, "", "inverse"], [239, 3, 1, "", "inverse_all"], [239, 2, 1, "", "is_norm_spectral_model"], [239, 2, 1, "", "norm"], [239, 2, 1, "", "parameters"], [239, 2, 1, "", "pivot_energy"], [239, 3, 1, "", "plot"], [239, 3, 1, "", "plot_error"], [239, 3, 1, "", "reassign"], [239, 2, 1, "", "reference"], [239, 3, 1, "", "reference_fluxes"], [239, 3, 1, "", "spectral_index"], [239, 3, 1, "", "spectral_index_error"], [239, 2, 1, "", "tag"], [239, 2, 1, "", "tilt"], [239, 3, 1, "", "to_dict"], [239, 2, 1, "", "type"], [239, 3, 1, "", "unfreeze"]], "gammapy.modeling.models.PowerLawSpectralModel": [[240, 3, 1, "", "__call__"], [240, 2, 1, "", "amplitude"], [240, 3, 1, "", "copy"], [240, 2, 1, "", "covariance"], [240, 2, 1, "", "default_parameters"], [240, 3, 1, "", "energy_flux"], [240, 3, 1, "", "energy_flux_error"], [240, 3, 1, "", "evaluate"], [240, 3, 1, "", "evaluate_energy_flux"], [240, 3, 1, "", "evaluate_error"], [240, 3, 1, "", "evaluate_integral"], [240, 3, 1, "", "freeze"], [240, 3, 1, "", "from_dict"], [240, 3, 1, "", "from_parameters"], [240, 2, 1, "", "frozen"], [240, 2, 1, "", "index"], [240, 3, 1, "", "integral"], [240, 3, 1, "", "integral_error"], [240, 3, 1, "", "inverse"], [240, 3, 1, "", "inverse_all"], [240, 2, 1, "", "is_norm_spectral_model"], [240, 2, 1, "", "parameters"], [240, 2, 1, "", "pivot_energy"], [240, 3, 1, "", "plot"], [240, 3, 1, "", "plot_error"], [240, 3, 1, "", "reassign"], [240, 2, 1, "", "reference"], [240, 3, 1, "", "reference_fluxes"], [240, 3, 1, "", "spectral_index"], [240, 3, 1, "", "spectral_index_error"], [240, 2, 1, "", "tag"], [240, 3, 1, "", "to_dict"], [240, 2, 1, "", "type"], [240, 3, 1, "", "unfreeze"]], "gammapy.modeling.models.PowerLawTemporalModel": [[241, 3, 1, "", "__call__"], [241, 2, 1, "", "alpha"], [241, 3, 1, "", "copy"], [241, 2, 1, "", "covariance"], [241, 2, 1, "", "default_parameters"], [241, 3, 1, "", "evaluate"], [241, 3, 1, "", "freeze"], [241, 3, 1, "", "from_dict"], [241, 3, 1, "", "from_parameters"], [241, 2, 1, "", "frozen"], [241, 3, 1, "", "integral"], [241, 2, 1, "", "is_energy_dependent"], [241, 2, 1, "", "parameters"], [241, 3, 1, "", "plot"], [241, 3, 1, "", "reassign"], [241, 2, 1, "", "reference_time"], [241, 3, 1, "", "sample_time"], [241, 2, 1, "", "t0"], [241, 2, 1, "", "t_ref"], [241, 2, 1, "", "tag"], [241, 3, 1, "", "time_sum"], [241, 3, 1, "", "to_dict"], [241, 2, 1, "", "type"], [241, 3, 1, "", "unfreeze"]], "gammapy.modeling.models.ScaleSpectralModel": [[244, 3, 1, "", "__call__"], [244, 3, 1, "", "copy"], [244, 2, 1, "", "covariance"], [244, 2, 1, "", "default_parameters"], [244, 3, 1, "", "energy_flux"], [244, 3, 1, "", "energy_flux_error"], [244, 3, 1, "", "evaluate"], [244, 3, 1, "", "evaluate_error"], [244, 3, 1, "", "freeze"], [244, 3, 1, "", "from_dict"], [244, 3, 1, "", "from_parameters"], [244, 2, 1, "", "frozen"], [244, 3, 1, "", "integral"], [244, 3, 1, "", "integral_error"], [244, 3, 1, "", "inverse"], [244, 3, 1, "", "inverse_all"], [244, 2, 1, "", "is_norm_spectral_model"], [244, 2, 1, "", "norm"], [244, 2, 1, "", "parameters"], [244, 2, 1, "", "pivot_energy"], [244, 3, 1, "", "plot"], [244, 3, 1, "", "plot_error"], [244, 3, 1, "", "reassign"], [244, 3, 1, "", "reference_fluxes"], [244, 3, 1, "", "spectral_index"], [244, 3, 1, "", "spectral_index_error"], [244, 2, 1, "", "tag"], [244, 3, 1, "", "to_dict"], [244, 2, 1, "", "type"], [244, 3, 1, "", "unfreeze"]], "gammapy.modeling.models.Shell2SpatialModel": [[245, 3, 1, "", "__call__"], [245, 3, 1, "", "copy"], [245, 2, 1, "", "covariance"], [245, 2, 1, "", "default_parameters"], [245, 2, 1, "", "eta"], [245, 3, 1, "", "evaluate"], [245, 3, 1, "", "evaluate_geom"], [245, 2, 1, "", "evaluation_bin_size_min"], [245, 2, 1, "", "evaluation_radius"], [245, 2, 1, "", "evaluation_region"], [245, 3, 1, "", "freeze"], [245, 3, 1, "", "from_dict"], [245, 3, 1, "", "from_parameters"], [245, 3, 1, "", "from_position"], [245, 2, 1, "", "frozen"], [245, 3, 1, "", "integrate_geom"], [245, 2, 1, "", "is_energy_dependent"], [245, 2, 1, "", "lat_0"], [245, 2, 1, "", "lon_0"], [245, 2, 1, "", "parameters"], [245, 2, 1, "", "phi_0"], [245, 3, 1, "", "plot"], [245, 3, 1, "", "plot_error"], [245, 3, 1, "", "plot_grid"], [245, 3, 1, "", "plot_interactive"], [245, 3, 1, "", "plot_position_error"], [245, 2, 1, "", "position"], [245, 2, 1, "", "position_error"], [245, 2, 1, "", "position_lonlat"], [245, 2, 1, "", "r_0"], [245, 2, 1, "", "r_in"], [245, 3, 1, "", "reassign"], [245, 2, 1, "", "tag"], [245, 3, 1, "", "to_dict"], [245, 3, 1, "", "to_region"], [245, 2, 1, "", "type"], [245, 3, 1, "", "unfreeze"]], "gammapy.modeling.models.ShellSpatialModel": [[246, 3, 1, "", "__call__"], [246, 3, 1, "", "copy"], [246, 2, 1, "", "covariance"], [246, 2, 1, "", "default_parameters"], [246, 3, 1, "", "evaluate"], [246, 3, 1, "", "evaluate_geom"], [246, 2, 1, "", "evaluation_bin_size_min"], [246, 2, 1, "", "evaluation_radius"], [246, 2, 1, "", "evaluation_region"], [246, 3, 1, "", "freeze"], [246, 3, 1, "", "from_dict"], [246, 3, 1, "", "from_parameters"], [246, 3, 1, "", "from_position"], [246, 2, 1, "", "frozen"], [246, 3, 1, "", "integrate_geom"], [246, 2, 1, "", "is_energy_dependent"], [246, 2, 1, "", "lat_0"], [246, 2, 1, "", "lon_0"], [246, 2, 1, "", "parameters"], [246, 2, 1, "", "phi_0"], [246, 3, 1, "", "plot"], [246, 3, 1, "", "plot_error"], [246, 3, 1, "", "plot_grid"], [246, 3, 1, "", "plot_interactive"], [246, 3, 1, "", "plot_position_error"], [246, 2, 1, "", "position"], [246, 2, 1, "", "position_error"], [246, 2, 1, "", "position_lonlat"], [246, 2, 1, "", "radius"], [246, 3, 1, "", "reassign"], [246, 2, 1, "", "tag"], [246, 3, 1, "", "to_dict"], [246, 3, 1, "", "to_region"], [246, 2, 1, "", "type"], [246, 3, 1, "", "unfreeze"], [246, 2, 1, "", "width"]], "gammapy.modeling.models.SineTemporalModel": [[247, 3, 1, "", "__call__"], [247, 2, 1, "", "amp"], [247, 3, 1, "", "copy"], [247, 2, 1, "", "covariance"], [247, 2, 1, "", "default_parameters"], [247, 3, 1, "", "evaluate"], [247, 3, 1, "", "freeze"], [247, 3, 1, "", "from_dict"], [247, 3, 1, "", "from_parameters"], [247, 2, 1, "", "frozen"], [247, 3, 1, "", "integral"], [247, 2, 1, "", "is_energy_dependent"], [247, 2, 1, "", "omega"], [247, 2, 1, "", "parameters"], [247, 3, 1, "", "plot"], [247, 3, 1, "", "reassign"], [247, 2, 1, "", "reference_time"], [247, 3, 1, "", "sample_time"], [247, 2, 1, "", "t_ref"], [247, 2, 1, "", "tag"], [247, 3, 1, "", "time_sum"], [247, 3, 1, "", "to_dict"], [247, 2, 1, "", "type"], [247, 3, 1, "", "unfreeze"]], "gammapy.modeling.models.SkyModel": [[248, 3, 1, "", "__call__"], [248, 3, 1, "", "contributes"], [248, 3, 1, "", "copy"], [248, 2, 1, "", "covariance"], [248, 3, 1, "", "create"], [248, 2, 1, "", "default_parameters"], [248, 3, 1, "", "evaluate"], [248, 3, 1, "", "evaluate_geom"], [248, 2, 1, "", "evaluation_bin_size_min"], [248, 2, 1, "", "evaluation_radius"], [248, 2, 1, "", "evaluation_region"], [248, 2, 1, "", "frame"], [248, 3, 1, "", "freeze"], [248, 3, 1, "", "from_dict"], [248, 3, 1, "", "from_parameters"], [248, 2, 1, "", "frozen"], [248, 3, 1, "", "integrate_geom"], [248, 2, 1, "", "name"], [248, 2, 1, "", "parameters"], [248, 2, 1, "", "position"], [248, 2, 1, "", "position_lonlat"], [248, 3, 1, "", "reassign"], [248, 2, 1, "", "spatial_model"], [248, 2, 1, "", "spectral_model"], [248, 2, 1, "", "tag"], [248, 2, 1, "", "temporal_model"], [248, 3, 1, "", "to_dict"], [248, 2, 1, "", "type"], [248, 3, 1, "", "unfreeze"]], "gammapy.modeling.models.SmoothBrokenPowerLawSpectralModel": [[249, 3, 1, "", "__call__"], [249, 2, 1, "", "amplitude"], [249, 2, 1, "", "beta"], [249, 3, 1, "", "copy"], [249, 2, 1, "", "covariance"], [249, 2, 1, "", "default_parameters"], [249, 2, 1, "", "ebreak"], [249, 3, 1, "", "energy_flux"], [249, 3, 1, "", "energy_flux_error"], [249, 3, 1, "", "evaluate"], [249, 3, 1, "", "evaluate_error"], [249, 3, 1, "", "freeze"], [249, 3, 1, "", "from_dict"], [249, 3, 1, "", "from_parameters"], [249, 2, 1, "", "frozen"], [249, 2, 1, "", "index1"], [249, 2, 1, "", "index2"], [249, 3, 1, "", "integral"], [249, 3, 1, "", "integral_error"], [249, 3, 1, "", "inverse"], [249, 3, 1, "", "inverse_all"], [249, 2, 1, "", "is_norm_spectral_model"], [249, 2, 1, "", "parameters"], [249, 2, 1, "", "pivot_energy"], [249, 3, 1, "", "plot"], [249, 3, 1, "", "plot_error"], [249, 3, 1, "", "reassign"], [249, 2, 1, "", "reference"], [249, 3, 1, "", "reference_fluxes"], [249, 3, 1, "", "spectral_index"], [249, 3, 1, "", "spectral_index_error"], [249, 2, 1, "", "tag"], [249, 3, 1, "", "to_dict"], [249, 2, 1, "", "type"], [249, 3, 1, "", "unfreeze"]], "gammapy.modeling.models.SpatialModel": [[250, 3, 1, "", "__call__"], [250, 3, 1, "", "copy"], [250, 2, 1, "", "covariance"], [250, 2, 1, "", "default_parameters"], [250, 3, 1, "", "evaluate_geom"], [250, 2, 1, "", "evaluation_bin_size_min"], [250, 2, 1, "", "evaluation_radius"], [250, 2, 1, "", "evaluation_region"], [250, 3, 1, "", "freeze"], [250, 3, 1, "", "from_dict"], [250, 3, 1, "", "from_parameters"], [250, 3, 1, "", "from_position"], [250, 2, 1, "", "frozen"], [250, 3, 1, "", "integrate_geom"], [250, 2, 1, "", "is_energy_dependent"], [250, 2, 1, "", "parameters"], [250, 2, 1, "", "phi_0"], [250, 3, 1, "", "plot"], [250, 3, 1, "", "plot_error"], [250, 3, 1, "", "plot_grid"], [250, 3, 1, "", "plot_interactive"], [250, 3, 1, "", "plot_position_error"], [250, 2, 1, "", "position"], [250, 2, 1, "", "position_error"], [250, 2, 1, "", "position_lonlat"], [250, 3, 1, "", "reassign"], [250, 3, 1, "", "to_dict"], [250, 2, 1, "", "type"], [250, 3, 1, "", "unfreeze"]], "gammapy.modeling.models.SpectralModel": [[251, 3, 1, "", "__call__"], [251, 3, 1, "", "copy"], [251, 2, 1, "", "covariance"], [251, 2, 1, "", "default_parameters"], [251, 3, 1, "", "energy_flux"], [251, 3, 1, "", "energy_flux_error"], [251, 3, 1, "", "evaluate_error"], [251, 3, 1, "", "freeze"], [251, 3, 1, "", "from_dict"], [251, 3, 1, "", "from_parameters"], [251, 2, 1, "", "frozen"], [251, 3, 1, "", "integral"], [251, 3, 1, "", "integral_error"], [251, 3, 1, "", "inverse"], [251, 3, 1, "", "inverse_all"], [251, 2, 1, "", "is_norm_spectral_model"], [251, 2, 1, "", "parameters"], [251, 2, 1, "", "pivot_energy"], [251, 3, 1, "", "plot"], [251, 3, 1, "", "plot_error"], [251, 3, 1, "", "reassign"], [251, 3, 1, "", "reference_fluxes"], [251, 3, 1, "", "spectral_index"], [251, 3, 1, "", "spectral_index_error"], [251, 3, 1, "", "to_dict"], [251, 2, 1, "", "type"], [251, 3, 1, "", "unfreeze"]], "gammapy.modeling.models.SuperExpCutoffPowerLaw3FGLSpectralModel": [[252, 3, 1, "", "__call__"], [252, 2, 1, "", "amplitude"], [252, 3, 1, "", "copy"], [252, 2, 1, "", "covariance"], [252, 2, 1, "", "default_parameters"], [252, 2, 1, "", "ecut"], [252, 3, 1, "", "energy_flux"], [252, 3, 1, "", "energy_flux_error"], [252, 3, 1, "", "evaluate"], [252, 3, 1, "", "evaluate_error"], [252, 3, 1, "", "freeze"], [252, 3, 1, "", "from_dict"], [252, 3, 1, "", "from_parameters"], [252, 2, 1, "", "frozen"], [252, 2, 1, "", "index_1"], [252, 2, 1, "", "index_2"], [252, 3, 1, "", "integral"], [252, 3, 1, "", "integral_error"], [252, 3, 1, "", "inverse"], [252, 3, 1, "", "inverse_all"], [252, 2, 1, "", "is_norm_spectral_model"], [252, 2, 1, "", "parameters"], [252, 2, 1, "", "pivot_energy"], [252, 3, 1, "", "plot"], [252, 3, 1, "", "plot_error"], [252, 3, 1, "", "reassign"], [252, 2, 1, "", "reference"], [252, 3, 1, "", "reference_fluxes"], [252, 3, 1, "", "spectral_index"], [252, 3, 1, "", "spectral_index_error"], [252, 2, 1, "", "tag"], [252, 3, 1, "", "to_dict"], [252, 2, 1, "", "type"], [252, 3, 1, "", "unfreeze"]], "gammapy.modeling.models.SuperExpCutoffPowerLaw4FGLDR3SpectralModel": [[253, 3, 1, "", "__call__"], [253, 2, 1, "", "amplitude"], [253, 3, 1, "", "copy"], [253, 2, 1, "", "covariance"], [253, 2, 1, "", "default_parameters"], [253, 3, 1, "", "energy_flux"], [253, 3, 1, "", "energy_flux_error"], [253, 3, 1, "", "evaluate"], [253, 3, 1, "", "evaluate_error"], [253, 2, 1, "", "expfactor"], [253, 3, 1, "", "freeze"], [253, 3, 1, "", "from_dict"], [253, 3, 1, "", "from_parameters"], [253, 2, 1, "", "frozen"], [253, 2, 1, "", "index_1"], [253, 2, 1, "", "index_2"], [253, 3, 1, "", "integral"], [253, 3, 1, "", "integral_error"], [253, 3, 1, "", "inverse"], [253, 3, 1, "", "inverse_all"], [253, 2, 1, "", "is_norm_spectral_model"], [253, 2, 1, "", "parameters"], [253, 2, 1, "", "pivot_energy"], [253, 3, 1, "", "plot"], [253, 3, 1, "", "plot_error"], [253, 3, 1, "", "reassign"], [253, 2, 1, "", "reference"], [253, 3, 1, "", "reference_fluxes"], [253, 3, 1, "", "spectral_index"], [253, 3, 1, "", "spectral_index_error"], [253, 2, 1, "", "tag"], [253, 3, 1, "", "to_dict"], [253, 2, 1, "", "type"], [253, 3, 1, "", "unfreeze"]], "gammapy.modeling.models.SuperExpCutoffPowerLaw4FGLSpectralModel": [[254, 3, 1, "", "__call__"], [254, 2, 1, "", "amplitude"], [254, 3, 1, "", "copy"], [254, 2, 1, "", "covariance"], [254, 2, 1, "", "default_parameters"], [254, 3, 1, "", "energy_flux"], [254, 3, 1, "", "energy_flux_error"], [254, 3, 1, "", "evaluate"], [254, 3, 1, "", "evaluate_error"], [254, 2, 1, "", "expfactor"], [254, 3, 1, "", "freeze"], [254, 3, 1, "", "from_dict"], [254, 3, 1, "", "from_parameters"], [254, 2, 1, "", "frozen"], [254, 2, 1, "", "index_1"], [254, 2, 1, "", "index_2"], [254, 3, 1, "", "integral"], [254, 3, 1, "", "integral_error"], [254, 3, 1, "", "inverse"], [254, 3, 1, "", "inverse_all"], [254, 2, 1, "", "is_norm_spectral_model"], [254, 2, 1, "", "parameters"], [254, 2, 1, "", "pivot_energy"], [254, 3, 1, "", "plot"], [254, 3, 1, "", "plot_error"], [254, 3, 1, "", "reassign"], [254, 2, 1, "", "reference"], [254, 3, 1, "", "reference_fluxes"], [254, 3, 1, "", "spectral_index"], [254, 3, 1, "", "spectral_index_error"], [254, 2, 1, "", "tag"], [254, 3, 1, "", "to_dict"], [254, 2, 1, "", "type"], [254, 3, 1, "", "unfreeze"]], "gammapy.modeling.models.TemplateNDSpatialModel": [[256, 3, 1, "", "__call__"], [256, 3, 1, "", "copy"], [256, 2, 1, "", "covariance"], [256, 2, 1, "", "default_parameters"], [256, 3, 1, "", "evaluate"], [256, 3, 1, "", "evaluate_geom"], [256, 2, 1, "", "evaluation_bin_size_min"], [256, 2, 1, "", "evaluation_radius"], [256, 2, 1, "", "evaluation_region"], [256, 3, 1, "", "freeze"], [256, 3, 1, "", "from_dict"], [256, 3, 1, "", "from_parameters"], [256, 3, 1, "", "from_position"], [256, 2, 1, "", "frozen"], [256, 3, 1, "", "integrate_geom"], [256, 2, 1, "", "is_energy_dependent"], [256, 2, 1, "", "map"], [256, 2, 1, "", "parameters"], [256, 2, 1, "", "phi_0"], [256, 3, 1, "", "plot"], [256, 3, 1, "", "plot_error"], [256, 3, 1, "", "plot_grid"], [256, 3, 1, "", "plot_interactive"], [256, 3, 1, "", "plot_position_error"], [256, 2, 1, "", "position"], [256, 2, 1, "", "position_error"], [256, 2, 1, "", "position_lonlat"], [256, 3, 1, "", "reassign"], [256, 2, 1, "", "tag"], [256, 3, 1, "", "to_dict"], [256, 2, 1, "", "type"], [256, 3, 1, "", "unfreeze"], [256, 3, 1, "", "write"]], "gammapy.modeling.models.TemplateNDSpectralModel": [[257, 3, 1, "", "__call__"], [257, 3, 1, "", "copy"], [257, 2, 1, "", "covariance"], [257, 2, 1, "", "default_parameters"], [257, 3, 1, "", "energy_flux"], [257, 3, 1, "", "energy_flux_error"], [257, 3, 1, "", "evaluate"], [257, 3, 1, "", "evaluate_error"], [257, 3, 1, "", "freeze"], [257, 3, 1, "", "from_dict"], [257, 3, 1, "", "from_parameters"], [257, 2, 1, "", "frozen"], [257, 3, 1, "", "integral"], [257, 3, 1, "", "integral_error"], [257, 3, 1, "", "inverse"], [257, 3, 1, "", "inverse_all"], [257, 2, 1, "", "is_norm_spectral_model"], [257, 2, 1, "", "map"], [257, 2, 1, "", "parameters"], [257, 2, 1, "", "pivot_energy"], [257, 3, 1, "", "plot"], [257, 3, 1, "", "plot_error"], [257, 3, 1, "", "reassign"], [257, 3, 1, "", "reference_fluxes"], [257, 3, 1, "", "spectral_index"], [257, 3, 1, "", "spectral_index_error"], [257, 2, 1, "", "tag"], [257, 3, 1, "", "to_dict"], [257, 2, 1, "", "type"], [257, 3, 1, "", "unfreeze"], [257, 3, 1, "", "write"]], "gammapy.modeling.models.TemplateNPredModel": [[258, 3, 1, "", "copy"], [258, 2, 1, "", "covariance"], [258, 3, 1, "", "cutout"], [258, 2, 1, "", "default_parameters"], [258, 2, 1, "", "energy_center"], [258, 3, 1, "", "evaluate"], [258, 2, 1, "", "evaluation_radius"], [258, 3, 1, "", "freeze"], [258, 3, 1, "", "from_dict"], [258, 3, 1, "", "from_parameters"], [258, 2, 1, "", "frozen"], [258, 2, 1, "", "map"], [258, 2, 1, "", "name"], [258, 2, 1, "", "parameters"], [258, 2, 1, "", "position"], [258, 3, 1, "", "reassign"], [258, 3, 1, "", "slice_by_energy"], [258, 2, 1, "", "spectral_model"], [258, 3, 1, "", "stack"], [258, 2, 1, "", "tag"], [258, 3, 1, "", "to_dict"], [258, 2, 1, "", "type"], [258, 3, 1, "", "unfreeze"], [258, 3, 1, "", "write"]], "gammapy.modeling.models.TemplatePhaseCurveTemporalModel": [[259, 3, 1, "", "__call__"], [259, 3, 1, "", "copy"], [259, 2, 1, "", "covariance"], [259, 2, 1, "", "default_parameters"], [259, 3, 1, "", "evaluate"], [259, 2, 1, "", "f0"], [259, 2, 1, "", "f1"], [259, 2, 1, "", "f2"], [259, 3, 1, "", "freeze"], [259, 3, 1, "", "from_dict"], [259, 3, 1, "", "from_parameters"], [259, 2, 1, "", "frozen"], [259, 3, 1, "", "integral"], [259, 2, 1, "", "is_energy_dependent"], [259, 2, 1, "", "parameters"], [259, 2, 1, "", "phi_ref"], [259, 3, 1, "", "plot"], [259, 3, 1, "", "plot_phasogram"], [259, 3, 1, "", "read"], [259, 3, 1, "", "reassign"], [259, 2, 1, "", "reference_time"], [259, 3, 1, "", "sample_time"], [259, 2, 1, "", "t_ref"], [259, 2, 1, "", "tag"], [259, 3, 1, "", "time_sum"], [259, 3, 1, "", "to_dict"], [259, 2, 1, "", "type"], [259, 3, 1, "", "unfreeze"], [259, 3, 1, "", "write"]], "gammapy.modeling.models.TemplateSpatialModel": [[260, 3, 1, "", "__call__"], [260, 3, 1, "", "copy"], [260, 2, 1, "", "covariance"], [260, 2, 1, "", "default_parameters"], [260, 3, 1, "", "evaluate"], [260, 3, 1, "", "evaluate_geom"], [260, 2, 1, "", "evaluation_bin_size_min"], [260, 2, 1, "", "evaluation_radius"], [260, 2, 1, "", "evaluation_region"], [260, 3, 1, "", "freeze"], [260, 3, 1, "", "from_dict"], [260, 3, 1, "", "from_parameters"], [260, 3, 1, "", "from_position"], [260, 2, 1, "", "frozen"], [260, 3, 1, "", "integrate_geom"], [260, 2, 1, "", "is_energy_dependent"], [260, 2, 1, "", "lat_0"], [260, 2, 1, "", "lon_0"], [260, 2, 1, "", "map"], [260, 2, 1, "", "map_center"], [260, 2, 1, "", "parameters"], [260, 2, 1, "", "phi_0"], [260, 3, 1, "", "plot"], [260, 3, 1, "", "plot_error"], [260, 3, 1, "", "plot_grid"], [260, 3, 1, "", "plot_interactive"], [260, 3, 1, "", "plot_position_error"], [260, 2, 1, "", "position"], [260, 2, 1, "", "position_error"], [260, 2, 1, "", "position_lonlat"], [260, 3, 1, "", "read"], [260, 3, 1, "", "reassign"], [260, 2, 1, "", "tag"], [260, 3, 1, "", "to_dict"], [260, 3, 1, "", "to_region"], [260, 2, 1, "", "type"], [260, 3, 1, "", "unfreeze"], [260, 3, 1, "", "write"]], "gammapy.modeling.models.TemplateSpectralModel": [[261, 3, 1, "", "__call__"], [261, 3, 1, "", "copy"], [261, 2, 1, "", "covariance"], [261, 2, 1, "", "default_parameters"], [261, 3, 1, "", "energy_flux"], [261, 3, 1, "", "energy_flux_error"], [261, 3, 1, "", "evaluate"], [261, 3, 1, "", "evaluate_error"], [261, 3, 1, "", "freeze"], [261, 3, 1, "", "from_dict"], [261, 3, 1, "", "from_parameters"], [261, 3, 1, "", "from_region_map"], [261, 2, 1, "", "frozen"], [261, 3, 1, "", "integral"], [261, 3, 1, "", "integral_error"], [261, 3, 1, "", "inverse"], [261, 3, 1, "", "inverse_all"], [261, 2, 1, "", "is_norm_spectral_model"], [261, 2, 1, "", "parameters"], [261, 2, 1, "", "pivot_energy"], [261, 3, 1, "", "plot"], [261, 3, 1, "", "plot_error"], [261, 3, 1, "", "read_xspec_model"], [261, 3, 1, "", "reassign"], [261, 3, 1, "", "reference_fluxes"], [261, 3, 1, "", "spectral_index"], [261, 3, 1, "", "spectral_index_error"], [261, 2, 1, "", "tag"], [261, 3, 1, "", "to_dict"], [261, 2, 1, "", "type"], [261, 3, 1, "", "unfreeze"]], "gammapy.modeling.models.TemporalModel": [[262, 3, 1, "", "__call__"], [262, 3, 1, "", "copy"], [262, 2, 1, "", "covariance"], [262, 2, 1, "", "default_parameters"], [262, 3, 1, "", "freeze"], [262, 3, 1, "", "from_dict"], [262, 3, 1, "", "from_parameters"], [262, 2, 1, "", "frozen"], [262, 3, 1, "", "integral"], [262, 2, 1, "", "is_energy_dependent"], [262, 2, 1, "", "parameters"], [262, 3, 1, "", "plot"], [262, 3, 1, "", "reassign"], [262, 2, 1, "", "reference_time"], [262, 3, 1, "", "sample_time"], [262, 3, 1, "", "time_sum"], [262, 3, 1, "", "to_dict"], [262, 2, 1, "", "type"], [262, 3, 1, "", "unfreeze"]], "gammapy.modeling.models.utils": [[269, 4, 1, "", "read_hermes_cube"]], "gammapy.stats": [[272, 1, 1, "", "CashCountsStatistic"], [273, 4, 1, "", "TimmerKonig_lightcurve_simulator"], [274, 1, 1, "", "WStatCountsStatistic"], [275, 4, 1, "", "cash"], [276, 4, 1, "", "cash_sum_cython"], [277, 4, 1, "", "compute_chisq"], [278, 4, 1, "", "compute_flux_doubling"], [279, 4, 1, "", "compute_fpp"], [280, 4, 1, "", "compute_fvar"], [281, 4, 1, "", "cstat"], [282, 4, 1, "", "f_cash_root_cython"], [283, 4, 1, "", "get_wstat_gof_terms"], [284, 4, 1, "", "get_wstat_mu_bkg"], [285, 4, 1, "", "norm_bounds_cython"], [286, 4, 1, "", "structure_function"], [287, 4, 1, "", "wstat"]], "gammapy.stats.CashCountsStatistic": [[272, 3, 1, "", "compute_errn"], [272, 3, 1, "", "compute_errp"], [272, 3, 1, "", "compute_upper_limit"], [272, 2, 1, "", "error"], [272, 3, 1, "", "info_dict"], [272, 2, 1, "", "n_bkg"], [272, 2, 1, "", "n_sig"], [272, 3, 1, "", "n_sig_matching_significance"], [272, 2, 1, "", "p_value"], [272, 2, 1, "", "sqrt_ts"], [272, 2, 1, "", "stat_max"], [272, 2, 1, "", "stat_null"], [272, 3, 1, "", "sum"], [272, 2, 1, "", "ts"]], "gammapy.stats.WStatCountsStatistic": [[274, 3, 1, "", "compute_errn"], [274, 3, 1, "", "compute_errp"], [274, 3, 1, "", "compute_upper_limit"], [274, 2, 1, "", "error"], [274, 3, 1, "", "info_dict"], [274, 2, 1, "", "n_bkg"], [274, 2, 1, "", "n_sig"], [274, 3, 1, "", "n_sig_matching_significance"], [274, 2, 1, "", "p_value"], [274, 2, 1, "", "sqrt_ts"], [274, 2, 1, "", "stat_max"], [274, 2, 1, "", "stat_null"], [274, 3, 1, "", "sum"], [274, 2, 1, "", "ts"]], "gammapy.utils": [[13, 0, 0, "-", "cluster"], [13, 0, 0, "-", "coordinates"], [13, 0, 0, "-", "fits"], [13, 0, 0, "-", "integrate"], [13, 0, 0, "-", "interpolation"], [13, 0, 0, "-", "parallel"], [13, 0, 0, "-", "random"], [13, 0, 0, "-", "regions"], [13, 0, 0, "-", "scripts"], [13, 0, 0, "-", "table"], [13, 0, 0, "-", "testing"], [13, 0, 0, "-", "time"], [13, 0, 0, "-", "units"]], "gammapy.utils.cluster": [[288, 4, 1, "", "hierarchical_clustering"], [289, 4, 1, "", "standard_scaler"]], "gammapy.utils.coordinates": [[290, 5, 1, "", "D_SUN_TO_GALACTIC_CENTER"], [291, 4, 1, "", "cartesian"], [292, 4, 1, "", "fov_to_sky"], [293, 4, 1, "", "galactic"], [294, 4, 1, "", "motion_since_birth"], [295, 4, 1, "", "polar"], [296, 4, 1, "", "sky_to_fov"], [297, 4, 1, "", "velocity_glon_glat"]], "gammapy.utils.fits": [[298, 1, 1, "", "HDULocation"], [299, 1, 1, "", "LazyFitsData"], [300, 4, 1, "", "earth_location_from_dict"]], "gammapy.utils.fits.HDULocation": [[298, 3, 1, "", "get_hdu"], [298, 3, 1, "", "info"], [298, 3, 1, "", "load"], [298, 3, 1, "", "path"]], "gammapy.utils.integrate": [[301, 4, 1, "", "trapz_loglog"]], "gammapy.utils.interpolation": [[302, 1, 1, "", "ScaledRegularGridInterpolator"], [303, 4, 1, "", "interpolate_profile"], [304, 4, 1, "", "interpolation_scale"]], "gammapy.utils.interpolation.ScaledRegularGridInterpolator": [[302, 3, 1, "", "__call__"]], "gammapy.utils.parallel": [[305, 5, 1, "", "BACKEND_DEFAULT"], [306, 5, 1, "", "METHOD_DEFAULT"], [307, 5, 1, "", "METHOD_KWARGS_DEFAULT"], [308, 5, 1, "", "N_JOBS_DEFAULT"], [309, 5, 1, "", "POOL_KWARGS_DEFAULT"], [310, 1, 1, "", "multiprocessing_manager"], [311, 4, 1, "", "run_multiprocessing"]], "gammapy.utils.random": [[312, 1, 1, "", "InverseCDFSampler"], [313, 4, 1, "", "draw"], [314, 4, 1, "", "get_random_state"], [315, 4, 1, "", "normalize"], [316, 4, 1, "", "pdf"], [317, 4, 1, "", "sample_powerlaw"], [318, 4, 1, "", "sample_sphere"], [319, 4, 1, "", "sample_sphere_distance"], [320, 4, 1, "", "sample_times"]], "gammapy.utils.random.InverseCDFSampler": [[312, 3, 1, "", "sample"], [312, 3, 1, "", "sample_axis"]], "gammapy.utils.regions": [[321, 4, 1, "", "compound_region_to_regions"], [322, 4, 1, "", "make_concentric_annulus_sky_regions"], [323, 4, 1, "", "make_orthogonal_rectangle_sky_regions"], [324, 4, 1, "", "region_to_frame"], [325, 4, 1, "", "regions_to_compound_region"]], "gammapy.utils.scripts": [[326, 4, 1, "", "get_images_paths"], [327, 4, 1, "", "make_path"], [328, 4, 1, "", "read_yaml"], [329, 4, 1, "", "recursive_merge_dicts"], [330, 4, 1, "", "write_yaml"]], "gammapy.utils.table": [[331, 4, 1, "", "hstack_columns"], [332, 4, 1, "", "table_row_to_dict"], [333, 4, 1, "", "table_standardise_units_copy"], [334, 4, 1, "", "table_standardise_units_inplace"]], "gammapy.utils.testing": [[335, 1, 1, "", "Checker"], [336, 4, 1, "", "assert_quantity_allclose"], [337, 4, 1, "", "assert_skycoord_allclose"], [338, 4, 1, "", "assert_time_allclose"], [339, 4, 1, "", "mpl_plot_check"], [340, 4, 1, "", "requires_data"], [341, 4, 1, "", "requires_dependency"]], "gammapy.utils.testing.Checker": [[335, 3, 1, "", "run"]], "gammapy.utils.time": [[342, 4, 1, "", "absolute_time"], [343, 4, 1, "", "time_ref_from_dict"], [344, 4, 1, "", "time_ref_to_dict"], [345, 4, 1, "", "time_relative_to_ref"]], "gammapy.utils.units": [[346, 4, 1, "", "standardise_unit"], [347, 4, 1, "", "unit_from_fits_image_hdu"]], "gammapy.visualization": [[348, 1, 1, "", "MapPanelPlotter"], [349, 4, 1, "", "add_colorbar"], [350, 4, 1, "", "annotate_heatmap"], [351, 4, 1, "", "colormap_hess"], [352, 4, 1, "", "colormap_milagro"], [353, 4, 1, "", "plot_contour_line"], [354, 4, 1, "", "plot_distribution"], [355, 4, 1, "", "plot_heatmap"], [356, 4, 1, "", "plot_map_rgb"], [357, 4, 1, "", "plot_npred_signal"], [358, 4, 1, "", "plot_spectrum_datasets_off_regions"], [359, 4, 1, "", "plot_theta_squared_table"]], "gammapy.visualization.MapPanelPlotter": [[348, 3, 1, "", "plot"], [348, 3, 1, "", "plot_panel"]]}, "objnames": {"0": ["py", "module", "Python module"], "1": ["py", "class", "Python class"], "2": ["py", "attribute", "Python attribute"], "3": ["py", "method", "Python method"], "4": ["py", "function", "Python function"], "5": ["py", "data", "Python data"], "6": ["std", "cmdoption", "program option"]}, "objtypes": {"0": "py:module", "1": "py:class", "2": "py:attribute", "3": "py:method", "4": "py:function", "5": "py:data", "6": "std:cmdoption"}, "terms": {"": [16, 19, 20, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 41, 51, 52, 53, 65, 78, 79, 80, 82, 83, 86, 87, 90, 95, 96, 97, 98, 99, 100, 103, 104, 105, 118, 119, 124, 127, 132, 133, 137, 138, 139, 143, 163, 190, 196, 205, 209, 210, 215, 217, 218, 221, 222, 224, 225, 226, 228, 231, 233, 234, 238, 240, 241, 247, 248, 249, 252, 253, 254, 259, 262, 263, 264, 270, 280, 298, 346, 350, 351, 358, 361, 362, 364, 366, 371, 372, 373, 375, 377, 378, 379, 380, 381, 384, 387, 390, 391, 393, 394, 396, 397, 398, 399, 427, 429, 430, 431, 432, 434, 436, 437, 438, 439, 440, 442, 443, 444, 445, 446, 448, 450, 451, 452, 453, 454, 455, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 468, 470, 471, 472, 474, 475, 477, 480, 481, 487, 488, 489, 490, 492, 493, 495, 500, 511, 512, 513, 514, 516, 517, 518, 519, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 542, 543, 544, 545, 546, 547, 548, 549, 550, 554, 555, 556, 557, 559], "0": [11, 13, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 31, 33, 34, 35, 38, 39, 42, 47, 50, 51, 52, 53, 65, 69, 72, 79, 81, 83, 84, 85, 86, 89, 91, 97, 98, 100, 103, 104, 105, 106, 107, 108, 110, 112, 114, 116, 117, 119, 120, 121, 122, 124, 126, 127, 132, 133, 137, 138, 139, 140, 142, 143, 144, 145, 147, 150, 151, 152, 153, 154, 155, 156, 158, 160, 163, 166, 167, 171, 181, 182, 183, 184, 185, 186, 188, 191, 192, 193, 194, 195, 196, 197, 198, 201, 203, 205, 206, 209, 210, 211, 212, 213, 215, 216, 217, 218, 220, 221, 222, 223, 224, 225, 226, 227, 228, 230, 233, 234, 236, 237, 238, 239, 240, 241, 244, 245, 246, 247, 248, 249, 251, 252, 253, 254, 256, 257, 259, 260, 261, 262, 268, 270, 272, 273, 274, 275, 278, 279, 280, 281, 288, 289, 308, 312, 319, 320, 338, 349, 351, 352, 356, 358, 361, 362, 364, 365, 368, 372, 373, 375, 376, 377, 378, 379, 380, 381, 383, 384, 385, 386, 387, 388, 389, 390, 394, 397, 426, 427, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 476, 478, 479, 480, 481, 482, 483, 487, 489, 493, 497, 499, 502, 504, 505, 506, 507, 508, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 555, 556, 557, 558], "00": [65, 83, 84, 85, 86, 96, 362, 376, 429, 430, 431, 433, 434, 435, 436, 437, 439, 441, 442, 443, 446, 447, 449, 450, 453, 454, 456, 458, 459, 460, 461, 462, 463, 465, 466, 469, 470, 471, 472, 474, 476, 478, 479, 480, 481, 482, 510, 519, 520, 540, 541, 551, 559], "000": [65, 83, 84, 86, 119, 376, 432, 434, 435, 437, 442, 443, 444, 446, 447, 450, 453, 454, 458, 459, 463, 465, 466, 471, 478, 479, 481, 510], "0000": 387, "000000": 458, "000000000000002": 463, "00000000000001": 437, "00000000000003": 455, "00000000000004": 458, "0000000000016": 82, "0000000000018": 89, "000000000002": 446, "000000000006": 446, "000000000007": 458, "00000000001": 458, "00000000e": [460, 461], "00000001": 82, "0000000e": 461, "00000143": [362, 559], "0000e": [96, 431, 434, 435, 436, 437, 439, 442, 450, 454, 460, 466, 480, 540], "0001": [19, 20, 26, 205, 206, 209, 213, 215, 216, 217, 221, 227, 228, 230, 234, 236, 238, 239, 240, 244, 249, 251, 252, 253, 254, 257, 261, 352, 444], "00010298": 459, "000150": 432, "0002": [432, 481], "00020": 432, "0002000": 432, "0003": 444, "00050": 432, "000500": 432, "0006": 432, "00074287037": [89, 447], "000742870370370241": 89, "0008": 458, "0009": 432, "000e": [434, 437, 443, 450, 454, 458, 466, 481, 540], "000true": 432, "001": [50, 137, 138, 139, 140, 143, 144, 145, 147, 150, 152, 154, 155, 183, 184, 186, 192, 195, 196, 338, 446, 460, 518], "0016288e": 461, "001e": 65, "002018": 471, "0025508e": 461, "0028272e": 461, "0029": 386, "0029490222317034775": 479, "002e": 65, "003": [455, 465, 471], "003026327991562108": 443, "003131946268913696": 479, "0033": 557, "0036925550381217": 437, "00375698": 225, "004": 65, "00422666667": 451, "00449161": 230, "00490": 444, "00490483": 444, "0049409": 470, "005": [429, 458, 541], "00521472221220211": 443, "005914854792576181": 445, "0064830e": 461, "00688029": 225, "007": 458, "0076540e": 461, "008": [458, 556], "008164325487530225": 445, "008898002182656187": 445, "00894": 481, "009": 458, "00931e": 430, "009431203058496632": 445, "00e": [79, 430, 435, 446, 450, 454, 455, 459, 461, 462, 471, 479], "01": [39, 52, 72, 79, 83, 84, 86, 89, 97, 100, 104, 105, 107, 121, 127, 166, 167, 171, 212, 218, 222, 224, 226, 241, 247, 362, 397, 429, 430, 434, 436, 438, 439, 442, 443, 446, 450, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 469, 471, 472, 473, 479, 480, 481, 482, 487, 492, 502, 504, 505, 508, 512, 514, 516, 521, 522, 538, 539, 541, 543, 544, 545, 551, 556, 559], "010": 465, "010e": 65, "011": 465, "011872336272724": 479, "012": 465, "0122385e": 461, "01235137e": 461, "012733796525585": 467, "013": 442, "0139252e": 461, "014": [81, 97, 100, 104, 105, 163, 435, 458, 462, 479, 480, 504], "0143724": 225, "0143764": 470, "01449": 79, "0145": 464, "01450": [452, 480], "0149044e": 461, "015": 458, "01551196351647377": 225, "0164": 444, "01648855015875024": 555, "01700709977114979": 451, "017442925431194484": 451, "018": 65, "018182745349064267": 443, "0183519e": 461, "01960784313726": 448, "019899368286133": 443, "01e": [163, 397, 430, 458], "01t00": [83, 86, 89, 362, 438, 446, 559], "01t01": 86, "01t02": 86, "02": [16, 65, 79, 89, 97, 100, 104, 105, 106, 110, 151, 158, 163, 183, 184, 186, 188, 192, 193, 195, 196, 397, 429, 430, 432, 434, 435, 439, 440, 442, 443, 444, 445, 446, 447, 449, 450, 452, 453, 454, 455, 458, 460, 461, 462, 463, 464, 465, 466, 469, 471, 476, 479, 480, 481, 502, 504, 505, 512, 513, 514, 520, 523, 524, 525], "020": [443, 458], "020420144596410953": 467, "021": [65, 458], "0225e": 458, "02288737": 225, "023": 458, "023473560586078527": 479, "023e": 438, "024": 458, "02432": 458, "024551293715163": 479, "024e": 481, "025": [458, 471], "0251191219844263": 444, "025953": 538, "025e": 133, "026": [53, 65, 458], "02653": [438, 444], "0265e": 450, "026891": 458, "026914": 458, "027": 65, "028": 434, "028854": 464, "029e": 458, "02e": 79, "02t23": 82, "03": [17, 19, 20, 21, 22, 24, 25, 26, 27, 65, 83, 85, 86, 374, 389, 429, 430, 432, 443, 444, 446, 450, 454, 458, 461, 463, 465, 467, 468, 469, 473, 474, 480, 515, 526, 527, 528], "0303e": 450, "032": 458, "0322": 65, "0322775e": 461, "033": [65, 458, 541], "033176650892097": 91, "03383": 470, "034": 556, "0344": 65, "034e": 432, "0354700e": 461, "0356": 430, "0356551": 430, "036": 65, "036e": 458, "037": 465, "03745318352059925": 549, "0375512e": 461, "0376213e": 461, "039": [442, 443], "039215686274545": 448, "03921700077803329": 443, "0395135e": 461, "03978226e": 466, "0399e": 450, "03e": 450, "04": [30, 65, 89, 429, 433, 435, 437, 438, 440, 443, 446, 454, 455, 458, 461, 463, 466, 470, 471, 529, 530], "041": 471, "0415": 481, "041882": 458, "042": 458, "0423761": 430, "042e": 458, "043": 65, "04357249662280083": 434, "044": 435, "04454": 471, "0447": 438, "0454683": 470, "046": 65, "0462798e": 461, "047": 65, "0473174": 230, "0474750e": 461, "048": [442, 471], "0482342e": 461, "04897634344908595": 91, "048e": 65, "049": [432, 442], "04939e": 430, "049676": 458, "04d": 446, "04e": 462, "04t15": 82, "04t22": 82, "05": [19, 20, 26, 29, 42, 65, 69, 83, 86, 99, 116, 118, 126, 194, 205, 206, 209, 213, 215, 216, 217, 221, 227, 228, 230, 234, 236, 238, 239, 240, 244, 249, 251, 252, 253, 254, 257, 261, 322, 389, 429, 430, 431, 432, 433, 434, 435, 438, 441, 442, 443, 444, 447, 449, 450, 453, 456, 457, 458, 459, 460, 461, 462, 465, 466, 468, 470, 472, 474, 479, 480, 507, 511, 512, 513, 514, 515, 516, 517, 518, 519, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 542, 543, 544, 545, 546, 547, 548, 549, 550], "050": 465, "05019": 133, "0503641": 430, "0505949e": 461, "05075": 461, "0508075688763": 458, "05088486522436142": 434, "051": [19, 20, 26, 465], "051c": [17, 21, 22, 24, 25, 27], "052": 458, "0520119e": 461, "0521842481248": 445, "05227": 458, "053": [442, 456], "053212009682775": 467, "054833602905273e": 443, "05487060546875": 434, "0548e": 443, "054e": 65, "055": 458, "055e": 432, "0560": 481, "056130": 458, "05628243": 481, "05637e": 430, "05673": 481, "057": 458, "05762513693893088": 443, "058": 65, "058201": 458, "05853": 438, "058823529411775": 448, "058e": 438, "059": [65, 429, 440, 441], "05901956e": 461, "0598579": 430, "05deg": 194, "06": [137, 138, 139, 140, 141, 143, 144, 145, 147, 150, 152, 154, 155, 182, 183, 184, 186, 191, 192, 194, 195, 196, 429, 442, 443, 444, 456, 458, 459, 460, 461, 462, 463, 469, 471, 474, 482, 534, 535, 541], "061": [435, 481], "062": [446, 465, 466, 471], "0625": 466, "0628": 481, "063": 65, "0631757e": 461, "06334488877417636": 467, "064108e": 458, "06430": 444, "0643032": 444, "06450": 133, "065071": 458, "065119": 481, "06549": 133, "066": 434, "066442": 458, "0674": 438, "068245": 458, "0689": 460, "068e": 432, "069": 65, "07": [97, 99, 118, 163, 336, 376, 397, 398, 429, 432, 433, 435, 442, 444, 449, 453, 455, 458, 459, 461, 463, 465, 471, 536, 537], "07022": 133, "070483": 458, "070e": 438, "0711412": 430, "072": 65, "073": 65, "0739282e": 461, "074": [458, 471], "07454639": 444, "07455": 444, "0746": 481, "0748": [458, 481], "075": 65, "07512322002655547": 443, "0756e": 430, "076": 481, "077": 430, "078": 432, "07843137254903": 448, "07943648658692837": 467, "07944657408": 458, "079464e": 481, "0799109224230051": 467, "07e": 455, "07t11": [435, 466, 479, 511, 512, 513, 514, 515, 516, 517, 518, 519, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 542, 543, 544, 545, 546, 547, 548, 549, 550], "08": [82, 356, 397, 429, 436, 437, 439, 440, 442, 443, 450, 458, 459, 460, 462, 469, 471, 479, 480, 521, 538, 539, 540], "080": [429, 434, 438, 441], "0800792e": 461, "08075": 461, "08081469527619482": 437, "08088": [169, 462], "081": 434, "0811551760882139": 467, "08142": 457, "08191603310406206": 467, "08192": 444, "08192101": 444, "082": 458, "082691868487906": 451, "08269984": 481, "082e": 119, "083": [65, 458], "08328557573258877": 467, "0833333358168602": 434, "0833333432674408": 434, "08342": 133, "08388624433428049": 467, "084": [65, 435], "08447355125099419": 467, "0845515": 430, "085": 458, "08529426": 92, "0855013383552432": 467, "08675": 459, "086e": 458, "087": [429, 469, 481], "08795162606984375": 467, "087e": 458, "088742": 458, "08880368117243051": 467, "08894569035619496": 467, "089": 128, "0894640e": 461, "0897868126630783": 467, "089881": 458, "08e": [450, 465], "09": [33, 119, 163, 429, 435, 438, 440, 442, 449, 458, 459, 461, 462, 469, 479, 480, 481, 542, 543, 557], "090": 435, "0902437e": 461, "0907128e": 461, "0910": [239, 240], "0914": [52, 53], "092": 434, "093477": 444, "09348": 444, "09426693227142095": 467, "094834": 458, "095232": 458, "09562941": 481, "095707": 481, "096": 435, "0960": 481, "09607": 481, "09610314778983592": 467, "09623312838375568": 467, "09740295372903346": 467, "097e": 65, "09805": 133, "098903": 458, "099": 520, "09907043184188653": 467, "09e": [462, 471], "0b100": 308, "0d": [121, 448, 459, 516], "0e": [384, 435, 437, 439, 443, 446, 450, 454, 459, 461, 463, 465, 466, 471, 479, 511, 512, 513, 514, 516, 517, 518, 519, 522, 523, 525, 528, 529, 531, 532, 533, 534, 536, 537, 538, 539, 540, 542, 543, 544, 545, 546, 547, 548, 549, 550], "0f": [460, 471, 481], "0rc": 390, "0rc1": 390, "0true": 444, "0x105fd0cf8": 361, "0x105fe3b70": 361, "0x129602550": 361, "0x7f5e388b61f0": 467, "0x7f5e4019f730": 466, "0x7f5e401be160": 459, "0x7f5e40689eb0": 467, "0x7f5e4079d310": 451, "0x7f5e41ee7ee0": 468, "0x7f5e5401c3a0": 470, "0x7f5e5404a400": 448, "0x7f5e5404a9d0": 448, "0x7f5e54117c10": 470, "0x7f5e541e0190": 467, "0x7f5e541e0910": 467, "0x7f5e550bd0d0": 459, "0x7f5e551ff880": 470, "0x7f5e554a6550": 459, "0x7f5e554a6970": 459, "0x7f5e554de9a0": 470, "1": [16, 17, 18, 19, 20, 21, 22, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 35, 36, 37, 38, 39, 40, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 57, 59, 62, 64, 65, 69, 70, 71, 72, 74, 79, 82, 83, 84, 86, 90, 91, 96, 97, 99, 100, 104, 105, 106, 109, 110, 111, 112, 116, 118, 119, 120, 121, 122, 124, 125, 127, 128, 132, 133, 137, 138, 139, 140, 142, 143, 144, 145, 150, 151, 152, 153, 154, 156, 158, 163, 166, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 191, 192, 193, 194, 195, 196, 200, 201, 203, 205, 206, 208, 209, 210, 212, 213, 215, 216, 217, 218, 220, 221, 222, 223, 224, 225, 226, 227, 228, 230, 231, 234, 236, 238, 239, 240, 241, 244, 245, 246, 247, 248, 249, 251, 252, 253, 254, 257, 259, 260, 261, 262, 263, 264, 270, 272, 273, 274, 278, 279, 288, 289, 301, 302, 308, 309, 310, 319, 320, 322, 323, 346, 348, 351, 352, 356, 358, 361, 362, 364, 365, 368, 369, 371, 372, 373, 375, 376, 378, 381, 383, 384, 385, 386, 387, 388, 390, 391, 394, 397, 398, 401, 402, 404, 405, 409, 411, 412, 413, 416, 417, 418, 419, 420, 421, 422, 430, 431, 432, 434, 435, 436, 437, 438, 439, 440, 442, 443, 444, 445, 446, 447, 448, 450, 451, 452, 453, 454, 455, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 470, 471, 472, 473, 476, 479, 480, 481, 483, 487, 488, 489, 492, 493, 495, 497, 498, 499, 500, 501, 504, 505, 506, 507, 508, 511, 512, 513, 514, 515, 516, 517, 518, 519, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 542, 543, 544, 545, 546, 547, 548, 549, 550, 553, 554, 556, 557, 558], "10": [13, 16, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 50, 51, 52, 53, 54, 64, 65, 82, 83, 84, 85, 86, 97, 98, 100, 103, 104, 105, 106, 110, 112, 116, 120, 121, 125, 126, 127, 132, 133, 134, 137, 138, 140, 142, 144, 150, 151, 152, 153, 154, 156, 163, 169, 182, 183, 184, 186, 191, 192, 194, 195, 196, 200, 201, 203, 212, 215, 227, 228, 230, 231, 252, 264, 279, 308, 310, 320, 349, 354, 356, 358, 361, 362, 364, 365, 366, 367, 368, 369, 370, 371, 372, 377, 378, 383, 384, 385, 389, 391, 397, 402, 404, 415, 417, 420, 424, 426, 430, 431, 434, 435, 436, 437, 438, 439, 440, 442, 443, 444, 445, 446, 447, 448, 450, 452, 453, 454, 455, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 468, 470, 471, 472, 473, 479, 480, 481, 483, 489, 493, 499, 502, 504, 505, 506, 507, 517, 518, 521, 523, 526, 527, 529, 530, 531, 532, 534, 535, 537, 538, 539, 543, 544, 545, 546, 547, 555, 556, 559], "100": [19, 20, 26, 46, 47, 71, 89, 119, 127, 142, 143, 153, 194, 196, 205, 206, 209, 210, 213, 215, 216, 217, 218, 221, 222, 224, 225, 226, 227, 228, 230, 234, 236, 238, 239, 240, 241, 244, 247, 249, 251, 252, 253, 254, 257, 259, 261, 262, 264, 266, 320, 361, 362, 364, 369, 380, 400, 430, 431, 434, 437, 442, 443, 444, 446, 447, 448, 450, 451, 455, 457, 458, 459, 461, 462, 463, 466, 468, 470, 471, 472, 481, 485, 487, 488, 489, 493, 504, 507, 508, 511, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 556], "1000": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 184, 189, 361, 364, 429, 432, 449, 458, 459, 461, 468, 471, 481, 507], "10000": [17, 18, 21, 22, 23, 24, 25, 27, 98, 103, 142, 153, 156, 166, 458, 471], "100000": [71, 458, 479], "1000000": [51, 52, 54, 458, 540], "10000000": 540, "1001": [419, 446, 447], "1002": 419, "10041": 132, "10045": [63, 254, 539], "10049": 430, "1006": 419, "101": [405, 455, 458], "1012": 457, "1013": 420, "1014": 420, "101430": 455, "10172": 466, "102": [163, 438, 556, 557], "1021": 420, "1025": 420, "1026": 420, "10262943822890519": [91, 467], "1027": 420, "102877228833871": 467, "1029": 420, "10295505": 481, "102e": 458, "103": [132, 400, 423, 450], "103000133": 472, "1031": 420, "10317325958321796": 479, "1032": 420, "1034": 481, "1035": 420, "10350021860740599": 435, "1036": 438, "1038": 420, "104": [437, 444], "1040": 420, "10409": 444, "10409446": 444, "104223": 519, "1043": 420, "104317": [97, 459, 465], "1044": 438, "1045": 420, "1046": 379, "10470702368766069": 467, "10477": 481, "105": [78, 434, 435, 473], "1051": 420, "1052": 458, "1053": 420, "1054": 420, "1054498": 128, "1057": 420, "10592": 559, "105953": 481, "106": [429, 551], "1061971e": 461, "106217": 79, "1062535e": 461, "1064": 458, "1065": 420, "1067": 420, "1069": 420, "107": [429, 430, 463, 551], "1070": [420, 481], "1072542e": 461, "1073": 420, "10752883769757363": 467, "1076": 420, "1078": 420, "107e": 458, "108": 417, "108034597491956e": 466, "108043": 442, "1082": 420, "1083": 420, "1084": 420, "1085": 420, "1085000": 442, "1086": 279, "1087": 420, "1088": 420, "1089": 420, "109": [400, 429, 463, 551], "1090": 420, "1092": [420, 438], "1093": [420, 438], "1098": 420, "1099306e": 461, "109e": 444, "10d": 448, "10e": [163, 458, 461], "10k": 184, "10th": [388, 399], "11": [65, 83, 86, 89, 99, 118, 119, 120, 124, 125, 201, 322, 365, 368, 370, 378, 385, 389, 400, 401, 422, 429, 430, 431, 432, 434, 435, 436, 437, 438, 439, 440, 444, 446, 447, 448, 450, 452, 453, 454, 455, 458, 459, 460, 462, 464, 465, 468, 469, 471, 479, 480, 481, 504, 506, 548, 549, 550, 557], "110": [458, 471], "1100": 420, "110000": [459, 462], "1102": 420, "1102e": 431, "1103": 420, "110380": [79, 377, 439, 442, 444, 470], "1104": 420, "1105": 420, "1107": 420, "1108": 420, "111": [349, 368, 420, 429, 433, 442, 458, 551], "1110": 420, "1111": [134, 458, 481], "111140": [377, 439, 442, 444], "111159": [377, 439, 442, 444, 470], "1115": 420, "111507416": 455, "111630": [85, 455, 470], "111797": 458, "11184": [63, 253, 538], "112": [429, 430, 551], "11208": 63, "1127": 420, "11291820875721864": 467, "113": 481, "1131": 369, "1133": 420, "1134": 420, "1136": 420, "114416978060046": 454, "1149": 459, "115": 65, "1150": 420, "11517": 481, "11553325504064559": [91, 467], "11587179071752986": 91, "116": 400, "1160": 458, "11610": 481, "1162": 420, "1166": 420, "1167": [368, 375], "1169": 420, "116e": 65, "117": [400, 429, 434, 460, 469, 521], "1170": 420, "1172": 375, "1173775": 458, "1176": 420, "117877e": 458, "1179": 420, "118": [132, 442], "1183": 420, "118355": 458, "119": [438, 442], "1190": 420, "1193777560333226e": 452, "119432": 430, "1195": 420, "11af4c": 400, "11e": [440, 458], "12": [17, 38, 42, 65, 82, 83, 86, 97, 100, 107, 119, 133, 153, 156, 182, 183, 184, 186, 192, 195, 196, 205, 209, 215, 217, 221, 228, 238, 240, 249, 252, 253, 254, 264, 365, 367, 368, 369, 370, 372, 373, 378, 381, 384, 400, 404, 405, 406, 418, 423, 429, 430, 432, 434, 435, 436, 437, 438, 439, 440, 441, 442, 444, 445, 446, 451, 452, 453, 454, 458, 459, 460, 463, 465, 466, 468, 469, 471, 479, 481, 482, 493, 504, 507, 508, 511, 512, 513, 514, 516, 517, 518, 519, 521, 522, 523, 525, 528, 529, 532, 533, 534, 536, 537, 538, 539, 542, 543, 544, 545, 546, 547, 548, 549, 550], "120": [53, 376, 436, 471, 515], "120000": 439, "120154": 458, "1204": 420, "1207": 420, "120e": [65, 481], "121": [65, 444, 465], "1210": 420, "1211": [420, 458], "121241": 442, "12148": 438, "1215": 420, "1216": 431, "12186": 481, "1219": 458, "122": [65, 132, 400, 429, 432, 465, 551], "1220": 420, "1226": 420, "1227": 420, "12276676166802643": 467, "123": [83, 86, 373, 429, 434, 438, 551], "1231": 421, "1234": 84, "123456789": [362, 559], "1235": 420, "1237": 369, "1238": 420, "123890826": 82, "123892513": 82, "1239": 366, "123944": 79, "124": [132, 373, 434, 438, 458, 465], "1240": 420, "12423250e": 461, "1243": 481, "1244969200533408": 289, "1246": 420, "124769": 516, "12493874": 461, "124e": 65, "125": [65, 119, 132, 434, 444, 463, 471, 481, 556], "1251162021576": 454, "12518": 443, "12525306": 451, "12546": 63, "125e": 443, "126": [65, 432, 458, 460], "12611": 133, "1264500e": 461, "126585": 430, "1266": 420, "1268": 420, "12688": 79, "1269263e": 461, "12697": 443, "127": [438, 454], "12704": [132, 133], "1271v": 280, "12751": 430, "1277": 367, "1278": 368, "12794487": 466, "128": [400, 455, 483], "12809": [97, 459, 465], "1281": 420, "12816": 481, "12856": 471, "1287": 420, "1289": 420, "128e": 432, "129": 426, "1290": 420, "1291": 420, "1294": 420, "1299": 458, "129e": 438, "12nan5": 432, "12r_": 53, "12th": [386, 399], "13": [65, 96, 119, 133, 288, 365, 366, 370, 375, 380, 389, 405, 430, 431, 432, 434, 435, 436, 437, 438, 439, 440, 442, 443, 444, 445, 446, 447, 448, 450, 452, 453, 454, 455, 457, 458, 459, 460, 462, 463, 464, 465, 466, 468, 470, 471, 472, 473, 479, 480, 481, 489, 557], "130": 504, "1300": 420, "1301v": 38, "13030": 481, "1305": 420, "13061": 466, "131": [432, 444], "1310": 481, "1312": 420, "13133": 481, "13152": 444, "1316": 420, "1317": 421, "1318": 420, "1319": [89, 420], "13197": 442, "132": 438, "1321e": 443, "13226": 481, "132472": 444, "133": 133, "1331": 421, "1334": 421, "1337": 421, "1339": 421, "133e": [432, 438], "134": [133, 435, 438, 444], "1341": 421, "1342a": 143, "1343": 421, "1344": 458, "1345": 421, "1346": 421, "1347": 421, "135": [38, 96, 133, 429, 432, 457, 458, 460, 469], "13500212963": 458, "13500566998758723": 445, "1351e": 458, "1354": 421, "135498046875": 434, "1357": 421, "1359316": 481, "135e": 119, "136": 458, "1360": 421, "1361": 458, "1362": 421, "1367": 421, "1369": [369, 421], "137": [435, 438, 445], "1372": 421, "137254901960785": 448, "1373": 421, "1374": 421, "1376": 421, "1377": 421, "1378": 421, "1379190199428797": 289, "137990": 458, "137e": 438, "138": [400, 432, 446, 481], "1381": 421, "1386": [421, 527], "1387": 421, "138e": 444, "139": [429, 434, 438, 471, 520], "13911": 481, "139232": 99, "1395": 421, "1396": [361, 435], "13960": 481, "1397": 421, "1397412321592923": 467, "13e": 459, "13nan6": 432, "13th": 399, "14": [28, 63, 65, 82, 362, 365, 370, 373, 378, 380, 381, 419, 429, 430, 432, 433, 434, 435, 438, 442, 454, 455, 458, 459, 460, 462, 464, 465, 466, 469, 480, 481, 556], "140": [434, 472], "1401": 421, "1406": 421, "140779935183259e": 452, "14079": 132, "1408": [421, 481], "141": [287, 444, 458], "1411180": 442, "1412": 421, "14121": 444, "1412536400000000": 481, "14149953611195087": [91, 467], "14150": 444, "1419": [369, 422], "141945": 430, "142": [65, 400, 432, 458, 481], "14201": 132, "1421": 421, "14210": 432, "1426": 421, "142e": 458, "143": [429, 438, 479, 482], "1432": 421, "1433": 421, "1435": 421, "1438": 166, "1438465e": 461, "1439110308062257": 467, "144": [432, 465, 481], "14419991": 92, "1442739329466746e": 466, "1443": 421, "1444": 421, "1445": 375, "14457": 481, "1446": 421, "1447": 421, "145": 458, "1451": 376, "14531053887243": 444, "1456": 421, "1456479e": 461, "146": 481, "14610": 559, "146472": 458, "1467": 134, "14671140315352": 445, "147": [419, 458, 463], "1470": [421, 481], "1474": 421, "1475": 421, "1476": 421, "14773": 471, "147e": 458, "148": [434, 438], "1482": 458, "1485314": 92, "1486415e": 461, "1489": 421, "149": [434, 462, 465], "1491": 444, "1492": 421, "1494": 444, "1495": 421, "1496e": 439, "1499472780781963": 289, "149e": 458, "14e": [439, 457], "14msts37sst": [446, 447], "14nan3": 432, "14nan5": 432, "14th": [385, 388, 399], "14yr_catalog": 63, "15": [39, 42, 65, 83, 84, 86, 140, 141, 142, 143, 144, 145, 150, 151, 152, 154, 351, 352, 356, 370, 378, 400, 404, 409, 414, 417, 418, 419, 421, 429, 430, 434, 435, 438, 440, 441, 442, 443, 444, 446, 447, 448, 450, 451, 455, 458, 460, 462, 463, 465, 466, 471, 481, 504, 512], "150": [125, 132, 133, 400, 432, 434, 446, 447, 463, 481], "1505": 421, "15076259": 92, "1509e": 436, "151": [400, 465], "1510": 128, "1510240e": 461, "1512": 454, "15140": 438, "1515": 421, "15154854": 92, "1517": 421, "152": [438, 444, 480], "1520": 483, "1521": 444, "15228678433255e": 479, "1523": 446, "15246": 446, "152477": 471, "1527": 421, "153": 458, "1530": 459, "15319": 446, "153600": 459, "154": [400, 430, 458], "1543": 421, "154e": [444, 454], "155": 400, "15518": 481, "1552": 440, "1553": [458, 481], "1554": 421, "1554106e": 461, "1556": [421, 458, 481], "1556008e": 461, "1558": 421, "156": [400, 435, 438, 444, 465], "1562": 421, "15621": 481, "1564": 421, "156525": 458, "1567629e": 461, "1568": 421, "15686274509804": 448, "157": [400, 481], "1573": 421, "1576": 421, "158": [133, 430, 435, 442], "1582": 421, "1586": 89, "15899": 438, "1594": 421, "1597317": 92, "159e": 454, "159t": 52, "15h14m00": 458, "15nan8": 432, "16": [16, 24, 53, 65, 89, 104, 105, 182, 365, 369, 378, 381, 382, 405, 420, 425, 427, 430, 431, 434, 435, 436, 437, 438, 439, 440, 442, 443, 444, 445, 446, 447, 448, 452, 453, 454, 455, 457, 458, 459, 460, 462, 463, 464, 465, 466, 468, 470, 471, 472, 473, 479, 480, 481, 506, 548, 556, 557], "160": [31, 119, 400, 409, 448, 465], "1600": 447, "1605": 421, "16056": 438, "1606": 421, "1607": 457, "160e": 65, "161": [132, 369, 434, 444, 458], "1610e": 458, "161250": 450, "1613279491744304": 467, "1616": 421, "1618850e": 461, "1619e": 96, "162": [65, 429], "16227766": 463, "1622776601683795": [462, 463, 479], "16240": 480, "16287": 481, "1629219e": 461, "163": [448, 556], "1630": [421, 481], "16303": 444, "16303044": 444, "1634": 421, "164": 458, "1642": 430, "164464": 523, "165": 465, "1650": 481, "16506": 430, "16511": 444, "16511148": 444, "1658": 421, "166": [400, 444, 458], "1660": 421, "16650390625": 431, "1665478": 92, "167": [400, 444, 450], "167219": 458, "1675": 421, "167e": 438, "168": [458, 481], "1681": 421, "1685": 421, "1686": 458, "1687": 82, "168702": 430, "169": [434, 444, 454], "1691": 430, "1695": 421, "1696": 421, "1697": [421, 530], "169744": 450, "169871": 450, "16th": 399, "17": [20, 21, 40, 65, 82, 372, 375, 378, 409, 426, 429, 430, 444, 448, 449, 455, 458, 459, 460, 461, 462, 463, 465, 471, 472, 481, 557], "170": 431, "17016482e": 460, "1702": 421, "17020": 438, "1703": 530, "171": 438, "1710": 422, "1711": 421, "1713": 431, "1715": 375, "1717": 481, "171749": 481, "1719502": 92, "1719610": 92, "1719670": 92, "171b": 263, "172": 448, "17229679": 92, "173": 458, "1731": [421, 465], "1732": 458, "17320": 458, "1737799900000000": 481, "1742": 65, "17445": 481, "1746": [421, 481], "1748": [421, 465], "1750": 421, "1751": 421, "1753": 481, "1755": [421, 438], "1759": 421, "175e": 458, "176": [133, 400, 455, 458], "1760": 421, "1761": 421, "176108": 513, "1762": 483, "1763": [422, 458], "1764": [421, 444], "176470588235294": 448, "1766": 422, "1768896e": 461, "177": [400, 429, 454, 471, 472, 520], "17776": 430, "177e": 458, "178": 420, "178442": 65, "1785": [421, 430], "1791": 421, "179475": 230, "179524": 544, "1799": 421, "17a": 458, "17e": 465, "17g": 50, "17th": 415, "18": [11, 83, 86, 132, 365, 380, 386, 406, 412, 429, 430, 431, 434, 435, 436, 437, 438, 439, 440, 442, 443, 444, 445, 446, 447, 448, 452, 453, 454, 455, 456, 457, 458, 459, 460, 462, 463, 464, 465, 466, 468, 470, 471, 472, 473, 479, 480, 481], "180": [375, 393, 395, 400, 458, 463], "1800": [421, 447, 463, 470], "180000": [446, 447], "1804": 458, "180458": 442, "18046952655570045": 289, "1805": 375, "1807": 422, "1808": [421, 458, 481], "181": 438, "1811": 437, "1812": 421, "1813": 458, "1818": 421, "182": [429, 482, 520], "1821": 421, "1822": 421, "1825": 458, "18257": 438, "183": [434, 442], "1830e": 434, "183139597": 82, "1834": 431, "1835": 89, "1836": 422, "1836544903987521": 467, "1837": 422, "18385658": 444, "18386": 444, "18392464": 495, "184": [82, 89, 414, 418, 438, 446, 453, 454, 464, 465], "18400002": 453, "1841": 370, "1845": 422, "1846": 422, "18465": 481, "1849": 422, "184989894219835": 451, "185": 464, "1854": [422, 458], "185471": 531, "1855": 422, "1857": 422, "1859": 422, "186": [413, 444, 458], "1861": 422, "1862": 422, "186484131475074": 320, "1866": 462, "186643": 481, "186e": 438, "187": [406, 413, 444], "1871": 422, "1877": 371, "187e": 454, "188": [413, 430, 458], "1883": 422, "1884": 422, "18842983819716610": 444, "1888": 422, "188e": 432, "189": 461, "1890": 422, "1891": 422, "18921591": 461, "1893": 422, "1893e": 458, "1894": 422, "1895": 422, "1898": 422, "18988": 481, "1899070e": 461, "18a": 61, "18h43m48": 65, "19": [51, 53, 54, 65, 365, 377, 379, 381, 400, 408, 409, 411, 423, 429, 430, 431, 434, 435, 436, 437, 438, 439, 440, 442, 443, 444, 445, 446, 447, 448, 449, 451, 452, 453, 454, 455, 457, 458, 459, 460, 462, 463, 464, 465, 466, 468, 470, 471, 472, 473, 479, 480, 481], "190": [429, 435, 458, 469], "1902": [63, 254, 539], "1903": 422, "1904": 422, "1905": 443, "1908": 422, "1909": 422, "191": [132, 413], "1910": [169, 462], "1912": 422, "1917": 481, "1918": 422, "1919": 422, "1920": 481, "1921": 422, "19214093": 92, "1922": 422, "1926": 422, "1926520e": 461, "1926e": 436, "1927": 422, "1928": 458, "1929": 422, "193": [438, 471], "1930": 422, "1933": 422, "193340": 526, "1934": 422, "19354": 444, "1936925": 92, "1937": [422, 458], "194": [413, 434], "1943186": 92, "1944": 454, "1947565": 92, "1949": 422, "195": [225, 450], "1950rspsa": 52, "1951": 401, "1953830": 92, "1955810e": 461, "1958e": 460, "196": [65, 430, 454, 465], "1960784313725492": 448, "1961": 134, "1962": 401, "1963": 458, "19646": 471, "1965tralm": 21, "1966": 401, "1969": 401, "196991563774588": 264, "197": [65, 429, 444, 551], "1971": 372, "19735897928723367": 445, "1975": 401, "1976572e": 461, "1978": 458, "1979": [275, 281, 401, 554], "1979892": 444, "1980": 458, "1982": 37, "1983": 554, "1986": 373, "1986027": 481, "1987": 444, "19879005": 166, "1988": 401, "1989": 401, "199": [444, 465], "1990": [37, 401], "1990apj": [36, 37], "1991": 401, "1991mnra": 22, "19932878": 461, "1994": [401, 554], "1994a": [52, 53], "1995": [400, 401], "1995apj": 17, "1996": [27, 438, 451, 554], "1996mnra": 27, "1997": 479, "1997apj": 25, "1998": [83, 86, 401, 554], "1998apj": 28, "1999": [53, 362, 559], "19991": 479, "199999809265137": 458, "19999999999999998": 437, "1999apj": 53, "19e": 462, "19th": 399, "1d": [16, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 86, 104, 105, 121, 141, 142, 151, 165, 182, 184, 315, 354, 367, 371, 372, 374, 375, 376, 377, 380, 381, 382, 393, 403, 405, 406, 407, 408, 412, 414, 417, 421, 423, 424, 427, 429, 430, 431, 432, 433, 434, 436, 438, 442, 449, 454, 459, 460, 462, 464, 466, 467, 468, 470, 471, 479, 491, 493, 495, 500, 503, 508, 552, 554], "1dc": [78, 79, 85, 97, 100, 104, 105, 109, 111, 112, 116, 132, 133, 138, 142, 143, 144, 153, 349, 354, 356, 369, 371, 377, 381, 402, 430, 437, 439, 442, 444, 450, 454, 455, 459, 461, 465, 493], "1deg": 194, "1e": [19, 20, 26, 82, 95, 124, 125, 127, 137, 138, 139, 140, 141, 143, 144, 145, 147, 150, 152, 154, 155, 182, 183, 184, 186, 191, 192, 194, 195, 196, 205, 206, 209, 213, 215, 216, 217, 221, 227, 228, 230, 231, 234, 236, 238, 239, 240, 244, 249, 251, 252, 253, 254, 257, 261, 264, 275, 281, 322, 336, 338, 361, 372, 432, 434, 436, 438, 440, 442, 444, 446, 447, 450, 452, 454, 455, 458, 460, 466, 468, 471, 472, 489, 493, 497, 521, 522, 523, 525, 528, 529, 533, 534, 536, 537, 538, 539], "1e0": 487, "1e10": [51, 143], "1e11": 460, "1e12": [487, 497], "1e2": [432, 487, 489], "1e3": [471, 497], "1e30": 531, "1e4": [460, 471, 472], "1e40": 488, "1e5": [436, 471, 489, 507, 508], "1e51": 52, "1e6": [45, 471, 485, 540], "1e7": [121, 540], "1f": 435, "1fhl": [406, 419], "1fhl_name": 69, "1h": [120, 153], "1hob9fz_": 462, "1k": [97, 104], "1kpc": 489, "1lhaaso": [57, 68, 427, 458], "1lhaaso_catalog": 57, "1rc1": 390, "1tev": [52, 53, 125, 447], "2": [11, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 27, 28, 29, 30, 31, 32, 33, 35, 36, 37, 38, 39, 40, 46, 50, 51, 52, 53, 54, 59, 62, 65, 66, 69, 70, 71, 72, 74, 76, 79, 80, 81, 82, 83, 84, 85, 86, 90, 91, 96, 97, 99, 100, 104, 105, 108, 116, 117, 118, 119, 120, 121, 122, 124, 125, 126, 127, 131, 133, 135, 136, 140, 141, 142, 143, 145, 151, 153, 156, 163, 166, 180, 182, 183, 184, 186, 188, 189, 190, 194, 196, 201, 202, 203, 204, 205, 209, 213, 215, 217, 221, 223, 224, 228, 231, 238, 239, 240, 245, 246, 248, 249, 252, 253, 254, 259, 263, 264, 270, 272, 273, 274, 275, 280, 281, 286, 288, 308, 310, 346, 349, 354, 356, 358, 361, 362, 365, 366, 370, 372, 373, 375, 376, 377, 378, 381, 384, 385, 386, 387, 388, 390, 393, 395, 397, 400, 401, 402, 403, 404, 405, 412, 417, 418, 419, 420, 421, 422, 429, 430, 431, 432, 434, 435, 436, 437, 438, 439, 440, 442, 443, 444, 445, 446, 447, 448, 450, 451, 452, 453, 454, 455, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 470, 471, 472, 473, 479, 480, 481, 483, 489, 492, 493, 495, 500, 501, 502, 504, 505, 507, 508, 509, 511, 512, 513, 514, 515, 516, 517, 518, 519, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 532, 533, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 554, 555, 556, 557, 558], "20": [16, 38, 79, 83, 85, 86, 97, 100, 104, 105, 144, 145, 150, 152, 154, 163, 183, 184, 186, 192, 195, 196, 273, 288, 362, 365, 366, 367, 369, 374, 376, 379, 381, 386, 423, 429, 430, 431, 434, 435, 436, 437, 438, 439, 440, 442, 443, 444, 445, 446, 447, 448, 449, 451, 452, 453, 454, 455, 457, 458, 459, 460, 462, 463, 464, 465, 466, 468, 470, 471, 472, 473, 479, 480, 481, 482, 483, 502, 504, 505, 506, 512, 513, 514, 517, 518, 527, 530, 535, 541, 556], "200": [52, 83, 86, 127, 194, 385, 413, 429, 434, 435, 438, 444, 448, 450, 458, 463, 466, 481, 520, 556], "2000": [84, 97, 100, 104, 105, 121, 218, 222, 224, 226, 241, 247, 401, 446, 447, 448, 462, 471, 481, 554], "2000000": 442, "20000000000000004": 437, "20009124": 461, "2000apj": 264, "2000e": 466, "2001": [89, 401, 438, 554], "2002": [83, 86, 279, 451], "2003": [280, 451], "2003mnra": 280, "2004": [82, 89, 451, 473], "2004a": [39, 40], "2004aph": [79, 84], "2004mnra": 24, "2005": [63, 554], "200503": 430, "2005a": 458, "2006": [31, 33, 376, 438, 445, 453], "200638": 481, "2006a": 264, "2006apj": [30, 31, 32, 33], "2006ara": 50, "2006mnra": [35, 112], "2007": [379, 554], "20072608": 461, "2008": [38, 82, 213, 261, 471, 483, 521], "2008aj": 38, "2009": [127, 282, 402, 438, 554], "20097159": 461, "2009851": 461, "20099855": 461, "201": [52, 429, 463, 482], "2010": [121, 143, 213, 230, 286, 362, 521, 554, 559], "2010a": [230, 264], "2010mnra": 143, "2011": [213, 483, 521], "2011jcap": [17, 19, 20, 21, 22, 24, 25, 26, 27], "2012": [86, 402, 554], "2013": [128, 381, 387, 391, 400, 451], "20136": [78, 289, 473], "20137": [289, 473], "2013aph": 263, "2014": [134, 399, 483], "2015": [52, 82, 375, 378, 399, 471], "20151": 289, "2015apj": [60, 120], "2015jheap": 264, "2016": [26, 375, 378, 399, 402, 451, 462], "2016apj": 58, "2017": [213, 366, 368, 378, 381, 397, 399, 402, 444, 470, 521], "2017apj": [59, 61], "2017icrc": 470, "2018": [52, 366, 367, 368, 369, 370, 371, 372, 376, 378, 380, 381, 399, 426, 470, 473, 554], "2018a": 120, "2019": [368, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 399, 421, 422, 445, 470, 554], "202": 444, "2020": [370, 381, 382, 383, 384, 385, 399, 445, 446, 454, 463, 543, 544, 545], "2021": [85, 213, 383, 385, 399, 426, 454, 466, 521], "2021345e": 461, "2022": [386, 387, 399, 402, 472], "2023": [373, 388, 389, 399, 402], "2023arxiv230517030c": 57, "2024": [99, 118, 398, 399, 435, 466, 479, 511, 512, 513, 514, 515, 516, 517, 518, 519, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 542, 543, 544, 545, 546, 547, 548, 549, 550], "2024e": 480, "2026": [373, 402], "2028": 402, "203": 434, "2030": [373, 402], "2031": 402, "20326": [288, 431], "20327": [288, 431], "2033": 402, "20339": 288, "2034": 402, "20343": 288, "20344": 288, "20345": 288, "20346": 288, "20349": 431, "2035": 402, "20350": 431, "2037": 402, "20372": 470, "2038": 402, "2039": 402, "20396": 431, "20397": 431, "204": [132, 429, 541], "2040469e": 461, "2041222e": 461, "20421": 431, "20422": 431, "204498": 118, "2045": 373, "2046": 402, "2049": [402, 458, 481], "205": [413, 444, 463], "2050": 402, "20508075688775": 458, "2051": 402, "20517": 431, "20518": 431, "20519": 431, "205192": 458, "20521": 431, "2053315944536949e": 470, "205357": 458, "2054": 402, "20559": 481, "2058705e": 461, "206": [438, 458], "2061": 458, "2062580e": 461, "2064": 402, "2064335": 92, "2065": 402, "2066": 402, "2068682e": 461, "2069": 402, "207": [429, 444, 448, 465, 541], "2071": [373, 402], "2075": 389, "207520865": 453, "207521465": 453, "2076": 402, "2077": 402, "2079930e": 461, "208": [429, 520], "2085": 402, "2089": [375, 404], "20898": 431, "20899": 431, "209": [429, 444, 541], "20900": 431, "2093": 402, "2095": 444, "2097": [402, 430, 437, 439, 442, 444, 450, 454, 470], "2097e": 434, "2098": 402, "20deg": [446, 447], "20e": 461, "20th": 387, "21": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 96, 121, 138, 364, 365, 409, 415, 424, 430, 434, 438, 440, 444, 453, 457, 458, 461, 463, 474, 481, 508, 556], "210": [413, 429, 458, 541], "2103": 458, "2104": 403, "2104353e": 461, "2106": 403, "2108": 403, "211": [458, 459], "2111": 403, "2112": [403, 480], "2114": 403, "2115": 403, "2116": 454, "211770556360534": 455, "2118": 403, "2119": 403, "211e": 458, "212": [65, 413, 434, 458], "2121": 403, "2121164e": 461, "2123": 403, "21236e": 430, "2124": 403, "2126": 403, "2128": 403, "2129": [375, 404], "213": 436, "2130": 403, "2131": [403, 458], "2132": 403, "21325": 471, "2133": 403, "2136": [374, 405], "2139": 403, "214": [432, 438], "2140": 403, "2141": 403, "2142": 403, "2145": 403, "2146": 403, "21464892": 481, "215": [65, 413, 427, 458], "21500000000003": 515, "2151": 403, "2152": 403, "21525376976022406": 445, "2153": [403, 458], "2154": [403, 458], "215465": 479, "2155": [407, 451, 453, 454, 458, 467, 481, 521], "215686274509824": 448, "2157": 403, "2159e": 96, "215e": 458, "216": [225, 434, 435, 463, 465, 550], "2160": 403, "2162670e": 461, "2163": 403, "2164425e": 461, "2166": 403, "2169": 403, "217": [429, 458, 469], "2171": 403, "21731921e": 463, "21733761e": 463, "21735587e": 463, "218": [60, 120], "218467": 548, "2190": 379, "2192": 404, "21t19": 89, "21t20": 89, "22": [65, 79, 81, 84, 97, 99, 100, 104, 105, 118, 127, 158, 163, 166, 365, 399, 412, 434, 435, 436, 437, 438, 443, 452, 454, 458, 459, 462, 463, 464, 472, 473, 479, 480, 481, 492, 499, 502, 504, 505, 508, 511, 512, 513, 514, 515, 516, 517, 518], "220": [442, 458, 465, 556, 557], "2200": 404, "2201": [63, 253, 458, 481, 538], "2202e": 481, "2204": 404, "2206": 404, "220e": 458, "221": [375, 413, 429, 434, 541], "221377": 435, "22149": 438, "221518": 529, "2217": 404, "2217412e": 461, "2218": [378, 405], "2219": [377, 405], "222": [58, 458, 465], "2221": 458, "22245374e": 119, "2227134679628": 454, "22271346796282": 454, "22271346796283": 454, "2229": [374, 404], "223": [429, 465, 541], "2230": 404, "2231": 458, "2235": 404, "2237": [404, 481], "2238": 404, "2239": 404, "224": [429, 541], "2240": 404, "2243": 404, "2244": 404, "224436": 481, "225": [91, 288, 289, 385, 413, 458], "2250": 404, "22500": 440, "2254": 404, "2255": [379, 467], "225575051666": 458, "2255890": [453, 467], "2257": 404, "2259": 404, "226": [429, 444, 471, 520, 541], "22608": 459, "2262": 404, "22635140877790516": 460, "2264": [373, 404], "22646133647326874": 460, "2264827111476982": 460, "22648881839710966": 460, "2265163003209506": 460, "22662622801631419": 460, "227": 434, "2270": 378, "2272": 404, "2274": [380, 405, 430], "2276": 404, "2277": 404, "2278": 404, "2278975306934438": 460, "2279": [378, 405], "227e": 458, "228": [275, 281, 369, 375, 434, 435, 440, 458, 462, 473], "2287": 404, "2289": 404, "229": [65, 458], "2290": 380, "2292": 405, "2294": 404, "2296": 404, "2297": 404, "22974080e": 471, "2298": 404, "22e": 462, "22nd": 399, "23": [89, 166, 361, 365, 387, 399, 423, 431, 436, 438, 454, 458, 460, 463, 465, 467, 479, 481, 504, 519, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 542, 543, 544, 545, 546, 547, 548, 549, 550], "230": [413, 438], "2300": 404, "2304": 379, "2305": 404, "230542e": 458, "2307": 63, "2308": 405, "231": 413, "2310": 404, "2313": 405, "2314": 405, "232": 61, "2320": [405, 458, 459], "2321": 405, "2323": 405, "2326": 405, "2327": [458, 465], "23273": 471, "233": 435, "2330": 405, "23306": 438, "2332": 465, "2334": 405, "2335": 405, "2338": 405, "2339": [431, 458, 481], "234": [413, 455], "234132519034915": 463, "23413252": 463, "2342": 405, "2343": 405, "234359264373779": 462, "2343e": 465, "2344": 405, "2345": 405, "2346": 405, "2347": 405, "235": [413, 434], "2350": 406, "2351": 405, "23523": [136, 163, 397, 434, 435, 443, 452, 459, 460, 462, 473, 479, 480, 492, 495, 555], "23526": [136, 434, 435, 443, 452, 459, 460, 462, 473, 479, 480, 555], "235294117647083": 448, "2354": 405, "23559": [434, 435, 452, 459, 462, 479, 480, 502, 504, 505, 555], "2356": 405, "2357": 465, "2358": 405, "2359": 405, "23592": [434, 435, 452, 459, 462, 479, 480, 502, 504, 505, 555], "236": [413, 429, 458, 520], "2360": 405, "2362506e": 461, "23628": 471, "2365": 405, "2366": 405, "2367": 405, "2368": 405, "237": 430, "23734": 481, "2375": 405, "2377": 405, "2378": 405, "2379": 405, "2381": 405, "238298": 430, "2384": 430, "2385": 405, "239": [65, 444], "23905561": 461, "239439": 481, "239557417": 82, "2399": 458, "239e": 458, "23a": [60, 120], "24": [25, 27, 52, 53, 82, 83, 86, 89, 364, 365, 378, 382, 416, 421, 430, 435, 438, 454, 458, 459, 463, 465, 470, 471, 479, 504, 521, 528, 537, 538, 539], "240": [97, 100, 104, 105, 116, 458, 459, 493], "2400": 405, "2401": 405, "2404": 405, "2405": 406, "240803": 521, "241": [429, 458, 541], "2412": 405, "2414": 458, "2419": 430, "242835": 65, "2431": 458, "2433": 406, "2435": 406, "244": [65, 413, 434], "2440": 458, "2441": 406, "244140625": 465, "2443672e": 461, "2444": [406, 438], "2446": [406, 465], "2448": 406, "2449": 406, "245": [413, 435], "2450": [406, 465], "245152": 444, "2454": 406, "2455": 406, "2459": 406, "246": 413, "2461": 406, "24611324074": 458, "2463": [381, 406], "2464": 406, "2465055e": 461, "2468": 406, "24685677e": 461, "247": [65, 413, 435], "2470": 406, "2471938975366008": 288, "2472": 406, "2475": 406, "2476": 406, "2477": 406, "2478": 406, "2479": [406, 480], "248": 413, "2481": 406, "248122": 458, "2483": 406, "2485": 479, "2486": 406, "249": [22, 413], "2490": 406, "2491": 406, "2492": 406, "2493": 406, "2496": 406, "24968": 430, "2497": 406, "2498": 406, "2499": 406, "249965667724609": 462, "249e": 133, "24e": [458, 465], "25": [33, 52, 83, 86, 96, 132, 142, 153, 166, 275, 281, 365, 378, 385, 399, 420, 427, 430, 431, 434, 435, 436, 437, 438, 439, 440, 442, 443, 444, 445, 446, 447, 448, 452, 453, 454, 455, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 468, 470, 471, 472, 473, 479, 480, 481, 513, 518], "250": [463, 554], "2501": 406, "250185": 462, "2502": [406, 444], "2505": 406, "2505121": 92, "2505703": 455, "2509": 458, "251": [438, 442], "2510": 406, "251185": 481, "2511884200000000": 481, "25162e": 430, "2518": 458, "251932": 458, "252": [413, 434, 444, 458], "2520": 406, "2521": 406, "2523": 406, "2525": 406, "2528": 406, "253": [437, 465], "2535": 406, "2536": [406, 465], "2537": 465, "2538": 406, "254": 413, "2540": 406, "2546": 406, "254901960784338": 448, "25496": 481, "2551": 406, "2552": [406, 458], "2553": 406, "2555": 382, "2557": 406, "255750516626": 458, "2558": 406, "2559": 406, "256": [65, 416], "2560538e": 461, "2561": 406, "2562": 406, "2563": 406, "2564": 406, "2567": 406, "2568720263723087": 445, "257": [132, 429, 437, 441], "2574": 406, "25743553e": 460, "25763": 438, "257642": 458, "2579999": 470, "258": [437, 519], "2580": 406, "2585": 406, "2587": 406, "2589254117941673": 479, "259": [437, 479, 481], "2591e": 458, "2594": 406, "2595": 406, "259e": 133, "25b": 17, "25e": 465, "25t_": 53, "25th": 387, "26": [19, 83, 86, 365, 399, 427, 430, 431, 434, 435, 436, 437, 438, 439, 440, 442, 443, 444, 445, 446, 447, 448, 452, 453, 454, 455, 457, 458, 459, 460, 462, 463, 464, 465, 466, 468, 470, 471, 472, 473, 479, 480, 481, 483, 531, 549], "260": [416, 481], "2604": 406, "2609": 465, "261": [416, 481], "2610e": 442, "2616": 406, "26173": 438, "2619": 406, "262": [416, 438, 465, 481], "2620": 406, "2625818241224747": 460, "2627": 406, "262728": 470, "26272868097919794": 467, "2628525e": 461, "263": [132, 133, 438, 465], "2634e": 443, "2635": 406, "2635108e": 461, "2637": 406, "26392": 440, "2639554729438709": 467, "264": [132, 416, 444], "2645": 406, "264516271942103": 479, "2648150": 92, "2649e": 460, "265": [32, 133, 375, 430, 438, 444, 465, 481], "2651": 406, "2654": 406, "266": [132, 133, 375, 437, 438, 444, 446, 450, 463, 465, 481], "2660": 406, "266192": 430, "26665050077722524": 467, "2667": 407, "267": [65, 133, 437, 438, 444, 465, 470], "2672": 407, "2673": 407, "26739753": 92, "2674": 407, "268": [387, 429, 437, 438, 444, 458, 465, 474, 481], "2681": 407, "2684": 407, "2685": 407, "268663733018811": 467, "2687": 407, "26883694": 481, "26887783978974283": 467, "269": 481, "2692": 407, "269385": 458, "2695": 444, "269627": 470, "2697": 407, "2699878e": 461, "26a": [39, 40, 50, 52, 53, 120, 230, 264, 458], "26e": [458, 465], "26th": 383, "27": [133, 367, 427, 438, 444, 459, 481, 556], "270": [431, 438, 458, 465, 481], "2703": 407, "2705": 407, "27057337686547633": 467, "2707": 407, "2708": 230, "2709": 407, "27093776e": 461, "271": [437, 438, 481], "2711": 407, "2712": 407, "2713": 407, "2715": 407, "271777777777796": 431, "27177778": 89, "2718": 407, "2719": 407, "271e": 438, "272": [437, 438, 442, 458, 465], "2720": [382, 408], "27209": 481, "2723": 407, "2725": 407, "2726": 407, "2726e": 481, "2727": 407, "2727693": 470, "2727e": 434, "2728": 407, "2729": 407, "273": [79, 416, 432, 438, 481], "2730": 407, "2731": 407, "2733": 407, "2734": 119, "2735": 407, "2737": 407, "2738": 407, "2739": 407, "274": 463, "27409496735322464": 467, "2741": 407, "2742": 407, "2743": 407, "274509803921596": 448, "2746": 407, "2747": 407, "27473": 444, "275": [437, 458, 549], "2750": 407, "2751": 407, "2752": 407, "2753": 407, "2755": 407, "2756": 407, "2759": 408, "276": 416, "2761": 408, "2762": 408, "2764": 408, "2765": 408, "2767": 408, "2768": 408, "277": [429, 437, 541], "2771": 408, "2772": 408, "27727": 465, "2775": 408, "277522957147003": 445, "2776": 408, "2777": 408, "2777074437073429": 467, "2778": 408, "2779": 408, "278": [27, 416, 437, 450, 458, 465], "2781": 408, "2782": 408, "2783": 408, "2784": 408, "2785": 408, "2785e": 434, "2787": 408, "2788": 408, "2789": 408, "279": 416, "2790": 408, "2791": 408, "2792": 408, "2793": 408, "2794": 408, "2796": 408, "2797": 408, "2798": 408, "2799": 408, "27e": 458, "27t20": 85, "28": [21, 24, 65, 89, 132, 133, 370, 399, 429, 432, 435, 436, 437, 438, 444, 446, 450, 454, 457, 458, 462, 463, 465, 469, 470, 481], "280": [65, 416, 429, 434, 437, 456, 463], "2800": [446, 465, 481], "2801": 408, "2802": 408, "2803": 408, "2804": 408, "2805": 408, "2808": 408, "2809": 408, "281": [429, 437, 458, 541], "2810": 408, "2811": 408, "28118133544922": 458, "2812": 408, "28120079": 458, "2815": 408, "2816": [408, 465], "2817": 408, "2818": 408, "2818047723094509": 467, "282": [132, 133], "2820": 408, "2822": [408, 465], "2823": 408, "2825456e": 461, "2827": 408, "2827988e": 461, "2828": 408, "2829": 408, "282e": 458, "283": [416, 434, 437], "2832": 408, "283218": 430, "283487": 458, "2837": 408, "28382603": 461, "2838398": 470, "28385358839966657": 467, "2839": 408, "284": [437, 458, 559], "2841": 408, "2842": 408, "28429": 444, "2845": 408, "2846": [408, 444], "285": [416, 437], "2852": 465, "28551": 133, "285f": [79, 84], "286": [416, 437], "2861432787940619": 467, "286e": 458, "287": [52, 53], "2872": 409, "28720322": 92, "2874": [409, 481], "28755283551095173": 467, "2878662980210884": 289, "287e": 438, "288": 119, "2880470e": 461, "2885": 409, "288e": 432, "289": [416, 437], "28905": 471, "2891": 409, "28958": 438, "2896": 409, "2897": 409, "28e": [97, 432, 442, 444, 459], "29": [65, 133, 259, 376, 386, 399, 427, 430, 432, 435, 437, 438, 444, 450, 453, 458, 463, 465, 466, 470, 481], "290": [417, 434, 437, 445], "2900": 465, "2903": [409, 465], "2903e": 436, "2907": 409, "291": 416, "2912": 409, "29170324": 459, "291e": [454, 481], "2922477": 92, "2924": 409, "2927": 409, "2929": 409, "293": [437, 454], "2930": 458, "2931": 409, "2932": 409, "29355238360800506": 467, "2938": 409, "2939": 409, "293e": 438, "2942": 383, "2943": 409, "2944": [384, 409], "2945": 409, "2947": 409, "2948": 409, "295": 416, "2950": 409, "2951": 409, "2953": 444, "2956": 409, "29585273e": 471, "2959": 465, "295e": [438, 458], "296": [416, 435], "2965": 409, "2966": 409, "2967": 409, "297": 430, "2971e": 458, "2974": 409, "2976": 409, "298": [437, 444, 458], "2981": 409, "2984": 409, "29882214027996945": 467, "299": [416, 437, 458], "2990": 409, "2991": 409, "2992": 409, "2993": 409, "2995484265169": 451, "2996": 481, "2998": 409, "2999": [409, 458], "299940468335294": 444, "299995937905366": 444, "299e": 458, "299t": 53, "29t20": 453, "29th": 399, "2_": 19, "2d": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 132, 133, 137, 138, 139, 140, 141, 143, 144, 145, 147, 150, 151, 152, 153, 154, 155, 156, 163, 173, 174, 181, 182, 183, 184, 186, 191, 192, 194, 195, 196, 200, 220, 367, 372, 377, 380, 381, 382, 393, 401, 407, 420, 421, 422, 429, 438, 440, 441, 444, 463, 464, 481, 491, 494, 505, 506, 507, 519], "2degx2deg": 446, "2e": [188, 430, 431, 432, 446, 447, 453, 458, 460, 465], "2e3": 463, "2e6": 471, "2f": [350, 430, 435, 467, 480, 557], "2fhl": [58, 69, 406, 418, 419, 458, 481, 490], "2hwc": [59, 70, 406, 412, 420, 458, 490], "2k": [97, 104], "2m": [230, 264], "2nd": 386, "2pc": 67, "3": [19, 20, 27, 28, 31, 32, 33, 37, 38, 42, 45, 46, 50, 51, 52, 53, 54, 59, 62, 65, 76, 79, 81, 82, 83, 86, 89, 91, 97, 99, 100, 104, 105, 106, 110, 112, 118, 119, 133, 137, 138, 139, 140, 142, 143, 144, 145, 147, 150, 151, 152, 153, 154, 155, 166, 169, 183, 184, 186, 189, 192, 194, 195, 196, 202, 204, 213, 220, 223, 231, 253, 259, 261, 263, 264, 272, 273, 274, 279, 288, 289, 310, 319, 338, 349, 354, 356, 358, 361, 362, 364, 365, 367, 372, 373, 375, 376, 377, 378, 380, 385, 386, 387, 392, 397, 398, 400, 401, 402, 404, 405, 410, 412, 414, 417, 418, 419, 420, 421, 422, 423, 425, 426, 430, 431, 432, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 450, 452, 453, 454, 455, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 470, 471, 472, 473, 479, 480, 481, 482, 483, 485, 488, 489, 492, 493, 497, 499, 501, 502, 504, 505, 508, 511, 512, 513, 514, 515, 516, 517, 518, 519, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 542, 543, 544, 545, 546, 547, 548, 549, 550, 553, 554, 556, 557], "30": [24, 52, 65, 79, 91, 97, 107, 132, 143, 182, 288, 289, 368, 369, 374, 381, 388, 399, 401, 430, 431, 434, 435, 438, 439, 444, 447, 450, 453, 454, 455, 458, 459, 460, 463, 465, 466, 467, 468, 470, 471, 481, 493, 499, 504, 505, 512, 513, 527, 530, 531, 532, 535], "300": [71, 83, 86, 437, 439, 443, 446, 447, 450, 454, 458, 471], "3000": [371, 458], "30000": 458, "3000000": 540, "30000000": 540, "3000020211954284": 444, "3001": 409, "30015e": 430, "3002": 409, "3003": 465, "300451666228708": 479, "3004625872247901": 443, "3005": 409, "3006": 481, "3006942": 92, "3007": 409, "301": [416, 437], "3011061699260256": 467, "3012": 409, "3013": 458, "301668796295": 458, "302": [437, 443], "3020791585772495": 288, "30287": 438, "3028e": 465, "302e": 458, "303": [434, 437, 454, 458], "3030": 409, "3032": 409, "3034": 458, "3035": 409, "3035897658854436": 445, "3037": 409, "3037632e": 461, "3038": [409, 481], "3039": 409, "304": [450, 451, 453, 454, 458, 467, 481, 521], "3041": 409, "3042": 409, "3043": 465, "3045": 409, "3046875": [459, 465], "3049664466089965": 289, "305": [65, 437], "3051": 409, "3051827": 92, "3051852": 92, "3051856": 92, "3052": 409, "3053": 409, "30535345877453707": 467, "3054": 409, "30561": 133, "3058": 409, "3058422e": 461, "305e": 458, "306": [416, 556], "3060": 409, "306196370000000": 481, "3063": 409, "3069": 409, "306e": 458, "307": 437, "3070": 409, "3071": 458, "3072": 409, "3074": 409, "3075": 385, "3076": 409, "307e": 458, "308": [437, 444, 515], "3080": 409, "3081": 409, "3083": 409, "3085": 409, "3086": 409, "3088": 409, "3089": 409, "3091": 409, "3092": 409, "3095e": 454, "30997": 481, "30a": 264, "30d00m00": 388, "30e": [440, 461, 465], "30th": 373, "31": [132, 133, 370, 371, 384, 385, 397, 424, 429, 432, 434, 437, 438, 442, 445, 448, 449, 453, 454, 458, 459, 462, 463, 465, 468, 472, 479, 481], "310": 435, "3100": 409, "3106": 409, "31067517": 458, "3107": [458, 481], "311": [434, 515, 557], "3110": 410, "3111": 410, "3112": 410, "3113": 410, "31139074e": 460, "3114": 410, "311489174710791e": 481, "3116": 410, "3117988e": 461, "31186857659616535": 467, "3119611261122878": 467, "312": [416, 454], "3122": 411, "3123": 411, "3124": 411, "3125": 411, "3126": 411, "3127": 411, "3129": 411, "312e": 438, "313": 437, "3130": 411, "3131": [412, 465], "3135914081482271": 467, "3136": 412, "313714614138": 459, "3138": 412, "314": 421, "3140": 412, "3141": 412, "3145": 412, "3148": 412, "315": 458, "3152": 412, "3153": 412, "3155": 412, "3158": 412, "316": [429, 437, 471, 472, 520], "3162": 412, "316227": 458, "316227766016838": 462, "3165": 412, "3168": 412, "3169": 412, "317": [416, 437], "3173": 412, "3178": 412, "317a": 264, "317e": [454, 458], "318": [416, 434], "3180": 412, "3182": 412, "31834": 133, "3185": 412, "319": [417, 471], "3191": 412, "3195": 481, "3197": 412, "319725": 470, "3199": 412, "32": [79, 132, 182, 429, 438, 440, 441, 442, 453, 454, 456, 459, 462, 463, 481], "320": [97, 100, 104, 105, 116, 458, 459, 465, 493], "3202": 412, "3207": 412, "3208": 412, "32095": 481, "321": 448, "3211": 412, "3216": 412, "3217": 412, "3219": 412, "321e": 450, "322": 437, "3222": 412, "3228": 412, "323": [435, 437, 444], "3230": 412, "3232943": 329, "3233356": 329, "32377509405904137": 91, "323779": 279, "3237948931463171": 467, "3238": 412, "3241": 412, "3243": 412, "324424288934": 459, "3246": 412, "32465247": 466, "325": [429, 541], "3254": 412, "3257": 412, "3258": 412, "325833": 536, "326": 416, "3262": 412, "32684": 481, "32684833": 470, "327": [429, 444, 454, 541], "3272": 412, "3276": 412, "3277": 412, "3278": 412, "3279": 412, "3279955e": 461, "328": [429, 444, 454, 541], "3281": 412, "3283": 412, "3284": 412, "32843": 481, "32847": 430, "3285": 412, "329": [91, 288, 289, 429, 453, 458, 467, 495, 541], "3293": 412, "3299": 458, "329e": [434, 458], "33": [435, 451, 457, 459, 460, 463, 481, 495], "330": [417, 437, 465], "3301": 412, "33013e": 430, "3302": 412, "3302565e": 461, "3303": 412, "330376": 65, "3304": 412, "3305": 412, "330505": 470, "33055e": 430, "3306": 412, "3307": 412, "3308": 412, "3309": 412, "3310": 412, "3314": 412, "33164865722698683": 467, "3319": 412, "3319831545301117": 288, "332": [65, 417], "3320": 412, "3323": [412, 459], "332525": 458, "3328": 412, "332e": 444, "332f": [30, 31, 32, 33], "3330487": 92, "3331": 481, "3331761": 92, "3333": 412, "33333333": 361, "3333333333333344": 448, "3335": 412, "33368e": 430, "3337": 412, "3338": 412, "334": [119, 471], "3342": 412, "3343": 412, "3346": 412, "3347": 412, "33484": 430, "3349": 412, "334e": 458, "335": 417, "3353": 412, "3357": 412, "3358": 412, "335e": 432, "336": [448, 458], "3363": 412, "3364130e": 461, "336444e": 458, "336606": 430, "3368855e": 461, "3369": 412, "337": [417, 437], "3374": 412, "3377": 412, "33787": [91, 467], "33788": [91, 467], "33789": [91, 467], "3379": 412, "33790": 467, "33791": 467, "33792": 467, "33793": 467, "33794": 467, "33795": 467, "33796": 467, "33797": 467, "33798": 467, "33799": 467, "338": [417, 454, 458], "33800": 467, "33800122": 92, "33801": 467, "3380311e": 461, "3381": 412, "339": [417, 448], "3390": 412, "3392": 412, "3393": 412, "3395": 412, "3396e": 442, "3397": 412, "339835555384604": 467, "3398360": 461, "33983991887701287": 91, "3399": 412, "33e": 455, "34": [52, 53, 65, 400, 430, 434, 435, 444, 459, 463, 465, 481], "34005": 430, "3402": 412, "3403": 412, "340391": 481, "3404": 412, "34047": 430, "3406": 412, "3409": [89, 412], "341": 430, "3413": 412, "3416": 412, "3418": 412, "342": 417, "3420": 412, "3423": 412, "3426": 412, "3428": 412, "3434": 412, "3438": 412, "3439": 412, "343e": 432, "344": 458, "344238": 481, "3443842": 470, "3445": 412, "3446": 412, "3447": 412, "3449": 412, "344e": 65, "345": [280, 430, 465], "3453": 412, "3454": 412, "345692": 481, "3458": 412, "346": 465, "34613004113985": 445, "346488e": 458, "3466": 412, "3468": 412, "347": [417, 431], "3471": 412, "3474": 412, "347e": 438, "348": [36, 37, 417, 434], "3480": 412, "3481e": 442, "3485e": 480, "3488": 412, "348e": [65, 458], "3491": 412, "3493": 132, "349530550405035": 460, "349530725254468": 460, "34953073943366": 460, "34953075819191": 460, "34953077463306": 460, "34953079334042": 460, "349530807529028": 460, "349535814693404": 460, "349536723056637": 460, "349537158300407": 460, "349537804239922": 460, "34953807814367": 460, "34953910575007": 460, "34953932636892": 460, "349542158419318": 460, "349559366703698": 460, "34971209244579": 460, "349724940685938": 460, "3499075e": 461, "34e": [458, 465], "35": [65, 378, 385, 397, 435, 453, 458, 460, 468, 470], "350": [448, 455], "3501": 438, "350105": 444, "3502": 458, "35030398537787": 460, "3503706026275275": 467, "3504": 481, "35052105086856": 460, "350556388466543": 460, "350d": 448, "351": [417, 458, 481], "3515": 412, "352": [417, 429, 456, 458], "3521": 431, "3523": 412, "3529": 412, "3529411764705888": 448, "353": [24, 417, 481], "3535": 414, "3536": 430, "353e": 444, "354": 448, "3544": 412, "3553e": 454, "35569283": 461, "355804": 481, "3559": 412, "356": 481, "3561": 412, "356263170943497e": 479, "3568": 412, "357": [449, 458, 481], "3570e": 439, "35722435185": 458, "3576e": 431, "357e": 438, "358": [444, 458, 481], "3584": 412, "3585": 444, "359": [417, 444, 458, 481], "3590188e": 461, "3592": 412, "3599": 446, "359e": 481, "36": [65, 82, 138, 308, 444, 446, 450, 458, 459, 461, 481], "360": [375, 463, 483], "3600": [437, 446, 447, 463], "36014": 442, "36073833513766157": 467, "361": [65, 417], "3619e": 480, "362": [429, 433], "36228879": 481, "36273": 481, "363472509034498": 467, "3639946": 455, "364": [417, 434], "3659253e": 461, "366": 480, "36669663417038234": 467, "3669": 414, "367": [417, 448, 465], "3674884": 458, "368": 112, "36834038301420274": 467, "368346217294295": 91, "3684": 414, "3689322e": 461, "369": 417, "3690": 481, "3699": 414, "36e": [457, 458], "37": [430, 435, 437, 460, 471, 557], "370": [448, 458, 465], "37058": 133, "371": [417, 435], "3710784e": 461, "3712": 414, "3713": 414, "3715810e": 461, "3718745": 92, "372": [35, 119, 481], "3720": 414, "3722": 414, "3725490196078436": 448, "3728": 414, "373": [434, 444], "3733": 414, "3739292e": 461, "374": [446, 448], "3740": 414, "37442773927": 546, "374430532625": 547, "37443418204": 548, "37455141": 481, "3748": 414, "375": [417, 429, 433, 463], "3750": 444, "375021": 539, "37506": 481, "37517": 438, "3752": 414, "3759377929871826": 467, "376": 65, "3760": 414, "3761": 414, "3765": 430, "377": [429, 433], "3777": 414, "37773": 438, "3779": 481, "3783": 414, "3784": 132, "379": 417, "3792": 465, "3796": 414, "3797": 414, "38": [22, 65, 430, 431, 458, 463, 465, 481, 540], "3802": 414, "3804": 414, "3806": 414, "381": [434, 465], "3810": 414, "3812": [458, 481], "3812120e": 461, "3812160e": 461, "38143003": 92, "3817": 414, "3829": 481, "382e": 434, "383": [65, 417, 458, 463], "3833": 414, "3837": 414, "383e": 65, "3842": 414, "3846": 414, "3848912826152664e": 481, "3856": 414, "385e": 133, "3860": 414, "3862": 423, "387": [417, 481], "3872": 458, "3873": 414, "3874": 414, "3876": 414, "387834": 481, "388": 519, "388405": 481, "3885947175689592": 467, "3886270e": 461, "3887": 414, "389": 366, "3892": 414, "3895": 414, "3898": 414, "389e": 481, "39": [17, 18, 21, 22, 24, 25, 27, 59, 457, 458, 463, 471, 519, 540], "390": 412, "3904": 414, "39042": 82, "3905": 414, "3906": 414, "391": 458, "3915": 414, "39151": 440, "3918": 414, "3919677734375": 434, "392": [417, 435], "392156862745098": 448, "39224": 438, "3925": 423, "393": [197, 198], "3933": 414, "3935": 431, "3936": 414, "394": [417, 434], "3941": 414, "3945": [431, 458], "3947637541758": 454, "3948": 415, "395": 417, "3950": [386, 423], "395004": 481, "3956": 423, "3959": 415, "396": 417, "3962942e": 461, "3966": 415, "397": 441, "3970": 387, "39728": 481, "3975": 415, "3979": [415, 555], "397918129147546": [397, 555], "39791813": [397, 555], "398": [417, 442], "3981": 481, "3981075200000000": 481, "3983": 415, "3986": 415, "3987": 415, "3988": 415, "398e": 458, "399": 469, "3990": 415, "39e": 458, "3d": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 46, 47, 138, 144, 151, 152, 154, 163, 267, 269, 367, 370, 371, 372, 376, 377, 380, 381, 382, 393, 401, 402, 403, 405, 406, 407, 408, 419, 420, 421, 429, 430, 432, 434, 435, 438, 439, 440, 444, 445, 446, 447, 448, 449, 453, 454, 459, 460, 461, 462, 463, 464, 465, 466, 467, 470, 471, 472, 479, 480, 491, 493, 494, 495, 500, 502, 503, 507, 552, 554], "3d33m15": 65, "3dataset": 443, "3e": [20, 119, 125, 444, 447, 450, 452, 455, 458, 465], "3e4": 471, "3e5": 471, "3e6": 540, "3e7": 540, "3f": [119, 445, 556, 557], "3fgl": [60, 65, 71, 215, 252, 384, 413, 416, 418, 419, 420, 429, 432, 458, 466, 481, 490, 509, 541], "3fgl_name": 69, "3fhl": [61, 72, 82, 121, 123, 127, 270, 381, 419, 420, 432, 438, 446, 448, 458, 463, 464, 465, 466, 471, 481, 490, 492], "3fhl_data_fermi": 443, "3fhl_dataset": [270, 443, 464], "3fhl_model": [270, 443, 465], "3g": [457, 458], "3hwc": [62, 73, 412, 423, 458, 490], "3ml": [379, 471], "3pc": 67, "4": [19, 20, 22, 26, 28, 29, 30, 31, 32, 33, 35, 36, 37, 38, 39, 40, 52, 54, 60, 65, 79, 83, 86, 96, 97, 100, 104, 105, 109, 111, 122, 127, 133, 135, 140, 143, 151, 163, 166, 182, 183, 184, 186, 192, 195, 196, 205, 206, 209, 213, 215, 216, 217, 221, 225, 227, 228, 230, 234, 236, 238, 239, 240, 244, 249, 251, 252, 253, 254, 257, 261, 263, 270, 271, 308, 348, 361, 362, 364, 365, 373, 375, 378, 381, 385, 386, 397, 400, 409, 411, 412, 413, 416, 418, 419, 422, 430, 431, 432, 434, 435, 436, 437, 438, 439, 440, 442, 443, 444, 445, 446, 447, 448, 450, 451, 452, 453, 454, 455, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 468, 470, 471, 472, 473, 474, 479, 480, 481, 483, 488, 489, 490, 504, 507, 508, 512, 513, 516, 521, 526, 539, 540, 548, 554, 555, 556, 557, 558], "40": [59, 104, 105, 368, 413, 431, 432, 434, 435, 442, 444, 453, 454, 463, 466, 470, 481, 504, 527, 530, 535, 556], "400": [127, 439, 444, 448, 458, 463, 481, 549], "4000": 423, "40000": [163, 480], "400023002295445": 479, "400056": 430, "40050506591797": 458, "40051": 440, "40051035": 458, "40071076": 92, "400x200": 448, "401": 435, "40112": 481, "4013": 423, "4014": 423, "4015": 423, "4017": 423, "4018": 423, "402": [143, 435], "4022": 423, "40235": 442, "4024": 423, "4025": 423, "4026": 423, "402712": 458, "403": [417, 444, 465], "4035": 481, "4037": 423, "404": 286, "4043": 423, "4044": 423, "40481": 442, "405": 369, "4051": 423, "40525": 442, "4054": 423, "4058": 423, "406": [429, 469, 481], "40611": 481, "4067": 423, "407": 458, "4071": 423, "4073": 423, "4073799600000000": 481, "4075": 423, "4076": 423, "4079": 423, "408": [434, 463], "4080": 423, "4080942e": 461, "40822469e": 466, "4083": 423, "4084": 423, "4088": 423, "4089": 423, "409": 434, "40919": 438, "4093": 423, "409416": 481, "4095": 423, "4098": 423, "40a": 59, "41": [65, 82, 89, 375, 454, 458, 459, 463, 471, 481], "410": 448, "41009347393684": 459, "4103": 423, "4105": 423, "4106": 423, "4107": 423, "4108": 423, "411": 481, "4110e": 458, "4112": [119, 423], "4113": 423, "4115": 423, "41176470588239": 448, "4119": 423, "411e": 432, "4120719e": 461, "412165": 444, "412779907405": 458, "413": 444, "414": [417, 442], "41405230487": 445, "41415047": 92, "4142135623730951": 112, "41449": 438, "4144e": 442, "415": [417, 429, 520, 531], "4155": [458, 481], "41584196": 451, "416": [65, 458, 462], "416965": 511, "417": 458, "418007850646973": 397, "41866": 471, "419": 465, "4191": 426, "41924": 132, "4198250e": 461, "41995": 438, "419e": 458, "41e19": [19, 20], "42": [25, 27, 89, 143, 329, 375, 437, 444, 458, 461, 462, 463, 467, 470, 508, 511], "420": 434, "42050348": 459, "4208": 426, "4209": 426, "421": [417, 448, 481, 554], "4210": 426, "4212": 426, "4212028e": 461, "4213": 426, "4215": 426, "4216": 426, "4217": 427, "4219": 426, "422": [39, 40, 429, 541], "4220": 442, "4221": 424, "4225498e": 461, "4225631e": 461, "42267": 444, "4226731": 444, "4231": [424, 426], "4234079169937": 454, "4236": 438, "42361": 438, "42399798": 444, "423e": 119, "42400": 444, "4242": 426, "4243": 426, "4245": 426, "42463": 471, "424649": 459, "42474": 481, "424823": 545, "424e": 438, "425": 481, "4252": 426, "426": 458, "4264": 426, "4268": 424, "427": 435, "4275": [424, 426], "4277": 426, "4280": 426, "4281": 458, "4282": 426, "428415": 517, "4288": 426, "429": 434, "4294": 426, "42e": [460, 465], "43": [263, 329, 375, 434, 435, 444, 454, 459, 463, 481, 508], "430": 458, "43000": [52, 53], "4301": [424, 426], "4303606e": 461, "4305": 426, "431": [128, 369, 448, 459], "43113": 430, "43137254901962": 448, "4313847458879893": 467, "4319": 481, "43197": 438, "4324": [424, 426], "4326": 426, "432878": 458, "432e": 458, "433": 438, "4336": [424, 426], "43366": 549, "434": [434, 458], "43416595": 455, "4344": 424, "4346": 426, "435": [417, 429, 445, 449], "4350": 426, "4351637481047363": 467, "4352": 426, "4359": [424, 426], "435l": 458, "436": [417, 434], "4360750e": 461, "4369": 426, "437": [458, 465], "4370": 426, "4373240195300975": 467, "438": 465, "4380": [425, 426], "4381": [389, 427], "4382": 425, "439": 434, "4393": [425, 426], "439306769641669e": 479, "4394": 425, "4395": 426, "4397": [425, 426], "439e": 458, "43e": 465, "44": [21, 50, 82, 329, 433, 437, 453, 455, 463], "4402": 426, "44055555555555603": 89, "4406": 426, "4408": 427, "4409": 426, "4412": [425, 426], "4417": 426, "4418": 426, "4420073e": 461, "4420222e": 461, "4428": 426, "4428634e": 461, "442e": 438, "4430": 426, "44318": 459, "4432": 427, "4435": [425, 426], "4444": 426, "445": 438, "4450": 481, "44528685": 481, "4453": [425, 426], "44573": 89, "4458": 426, "4459": 426, "446": [465, 557], "4466": [426, 442], "4466832000000000": 481, "447": 417, "44742": 481, "44749e": 430, "447552": 430, "447e": [444, 458], "447l": 17, "448": 448, "4480056e": 461, "44802852": 481, "4481": 458, "4485": 427, "4486": [425, 426], "448e": [133, 443], "449": 471, "4491": [388, 427], "4495": 426, "4498": 132, "44e": 397, "45": [51, 54, 434, 437, 443, 454, 455, 459, 463, 464, 466, 483, 508, 513, 514], "450": [435, 465], "4500": [425, 426], "4501": 427, "4504": 426, "4506": 426, "4508": 426, "4509803921569": 448, "451": 434, "4510": [426, 442, 481], "4515": 457, "4517490659800822": 452, "4520": 425, "4521": 426, "4524": 425, "453": 465, "454": 434, "4540": 427, "4545": 426, "4546": 427, "455": [417, 432], "45515263080596924": 431, "4558750": 444, "455e": 65, "456": 417, "4561": 427, "45646095": 455, "4567": 427, "457": [264, 417, 465], "457251": 481, "4574": [425, 427], "4575": 89, "4578": 425, "457963": 534, "4579e": 430, "458": [448, 458], "4584": 427, "45856": 481, "4586649826004114": 288, "459": [417, 459, 465], "4593": 425, "45935": 481, "4595": 427, "4599": 427, "45\u00ba": 472, "46": [53, 65, 104, 105, 375, 458, 463, 471], "460249999": 82, "4608": 427, "461": 417, "4615": 427, "4618695378303528": 431, "4619": 425, "462": [417, 434], "4620": [389, 427], "4620e": 458, "46225": 438, "4628": 427, "463": 481, "4631": 425, "4635": 427, "4638": 427, "464": 450, "4642048e": 461, "4647544e": 461, "465": [458, 465], "4653": 425, "4657": [425, 427], "465784": 481, "4660": 427, "4664": 427, "4668": 427, "4669": 427, "4671": 427, "46711": 438, "4677": [425, 427], "468": [455, 458], "4681": 425, "4684": 431, "468805426856864e": 52, "468e": 65, "4697": 427, "46e": [79, 439, 444], "47": [65, 454, 458, 463, 469, 481], "4703": 427, "470588235294144": 448, "4711": 481, "4714": 427, "4721": 425, "4726": 427, "4728": 425, "472849": 549, "4729": 427, "473": 417, "4732": 438, "4738": 427, "474": 417, "4740": 427, "4741": 427, "474e": 458, "475": [417, 465], "4750": 427, "4753": [425, 427], "475468": 430, "4755": 425, "4759": 427, "4770": 427, "4772": 425, "47797": 438, "477e": 458, "478": 417, "47802": 467, "47803": 467, "47804": 467, "47827": 467, "47828": 467, "47829": [78, 467, 473], "4783": 427, "4785": 427, "47e": 458, "48": [33, 163, 400, 442, 443, 463, 465, 471], "480": [431, 458, 465], "4802": 427, "4805": 427, "480554966147": 442, "48068": 438, "4808": 427, "480e": 458, "481": [366, 417], "4810": 427, "4814": [427, 481], "4817": 427, "4819444e": 461, "482": 430, "48215685": 92, "4822": 427, "48248": 458, "4825": [458, 481], "4828": 427, "4829": 427, "483": 434, "4834": 427, "4834488e": 461, "4835": 427, "4837": 427, "484": 417, "48442": 259, "4845": 427, "4847": 427, "4848653": 458, "4849": [427, 458, 481], "484e": 133, "485": 417, "4850": 427, "4851": 427, "4854": 427, "485p": [36, 37], "48602294921875": 431, "487": [417, 479], "4875723e": 461, "4876": 425, "4879": 427, "4881": [239, 240], "4886": 427, "48871": 430, "4888969467051004e": 479, "488z": 27, "489e": 458, "48e": [458, 465, 480], "49": [53, 438, 442, 458, 465, 471, 479, 507], "490": 25, "4902": 427, "4904": 427, "4904078e": 461, "49078e": 430, "491": 434, "4913": 425, "49152": 471, "4917": 427, "493": [25, 434], "4930435940405": 442, "4933657e": 461, "4936": [425, 427], "4937": [425, 427], "494": [429, 442, 449], "4940": 427, "49417615": 82, "4942": 427, "49447596": 440, "4958277": 92, "496021": 470, "4963": 481, "4966": 481, "4968236e": 461, "497": 434, "4970": 427, "4971": 427, "4971704e": 461, "4973": 427, "4975": 427, "4978": 427, "498": 481, "498784": 458, "4989": 427, "498e": [458, 481], "499": [65, 458], "49919925926": [225, 550], "4992": 427, "4994": 427, "49972277488662115": 467, "4999833830074": 444, "4d": 380, "4e": [455, 458, 465, 540], "4f": [555, 556, 557], "4fgl": [63, 74, 253, 254, 384, 404, 406, 412, 414, 427, 429, 443, 458, 464, 466, 490, 509, 541], "4th": [373, 399], "4yr_catalog": 60, "5": [16, 17, 18, 19, 20, 21, 22, 24, 25, 26, 27, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 50, 52, 53, 65, 79, 83, 86, 97, 98, 100, 103, 104, 105, 112, 116, 119, 120, 122, 124, 126, 132, 133, 140, 141, 142, 143, 144, 145, 150, 151, 152, 153, 154, 163, 166, 183, 184, 186, 188, 192, 194, 195, 196, 205, 206, 209, 212, 213, 215, 216, 217, 220, 221, 223, 225, 227, 228, 230, 234, 236, 238, 239, 240, 244, 249, 251, 252, 253, 254, 257, 259, 261, 264, 286, 290, 322, 351, 352, 356, 358, 361, 362, 365, 366, 368, 372, 373, 375, 376, 377, 378, 380, 384, 385, 386, 392, 397, 400, 402, 404, 405, 412, 414, 416, 417, 419, 420, 421, 425, 430, 431, 432, 434, 435, 436, 437, 438, 439, 440, 442, 443, 444, 445, 446, 447, 448, 450, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 470, 471, 472, 473, 479, 480, 481, 483, 488, 489, 492, 499, 502, 504, 505, 506, 507, 508, 512, 513, 514, 515, 517, 521, 522, 527, 529, 530, 531, 535, 536, 543, 544, 545, 546, 548, 554, 556, 557], "50": [83, 86, 89, 106, 110, 329, 368, 388, 430, 435, 436, 442, 450, 453, 454, 455, 458, 459, 461, 463, 465, 466, 467, 470, 471, 473, 479, 480, 481, 504, 507, 515, 557], "500": [183, 184, 186, 192, 195, 196, 438, 444, 446, 447, 463, 470, 471, 481, 512], "5000": [19, 20, 83, 86, 483], "5000056568267741": 444, "5000e": 437, "50022222": 89, "500249": 458, "5004": 444, "5015": 427, "502": 417, "5029747": 436, "503": 417, "5030": 481, "504": 28, "5040": 427, "5044": 427, "5049": 481, "505": [65, 458, 459], "505523195905": 442, "506": 417, "5066": 458, "507": 417, "5074834": 92, "5078068": 92, "50807568877": 458, "509": [433, 435], "509e": 458, "50e": [437, 465], "51": [52, 53, 65, 99, 118, 434, 442, 448, 479], "510": 417, "5106": 481, "51095676": 455, "511": [65, 417], "51179": [362, 559], "512": [429, 434, 448, 449], "5126": 65, "513": [397, 463], "51312": 444, "5144": [89, 430], "514854": 470, "51544": [437, 446, 447, 450], "5162628e": 461, "518": [417, 465], "5188338e": 461, "51910": 89, "5192420e": 461, "5194769e": 461, "51948705e": 466, "52": [53, 119, 163, 430, 431, 438, 440, 442, 454, 458, 470, 473, 481], "5205": 471, "52074074074": 79, "521": 418, "523": [418, 463], "5230376e": 461, "52318414": 92, "5237647004325865": 467, "52389101852": 458, "523a": [230, 264], "523b": 22, "524": [418, 458, 465], "5248": 481, "524807800000000": 481, "52587": 438, "526": 418, "52607": 481, "527": [418, 471], "528": 465, "52826166": 458, "5283": [458, 481], "52839183495354": 454, "529": 418, "5292": 459, "529411764705883": 448, "5297030e": 461, "52e": [455, 479], "53": [28, 444, 468, 512, 521], "530": 418, "53025": 89, "531": [418, 448], "53213": 444, "5324402": 92, "5326744": 92, "5326841": 92, "5326859": 92, "533": 458, "53343": [397, 452], "53344": 452, "53345": 452, "53346": 452, "53347": 452, "53348": 452, "533761": 524, "5345275e": 461, "534740": 514, "53482e": 430, "535": [418, 434, 458], "535058216604496": 264, "53566": 430, "536": 434, "53616": 230, "539": [264, 465], "5390438": 92, "539397": 458, "53945": 453, "53946": 451, "539e": 458, "53e": [397, 437], "54": [65, 434, 454, 458, 461], "5400": 459, "540732": 527, "5407363826067": 492, "5407363826070": 492, "541": 418, "5411": 430, "541119": 532, "5427520e": 461, "54282": 438, "5438860e": 461, "544": [418, 458, 471], "545": [418, 434], "54566271": 556, "545y": [39, 40], "546": 418, "5461745": 92, "54676837e": 460, "54682": [438, 458, 471, 481], "547": [418, 430, 458], "54721e": 430, "5477": 458, "54772": 458, "54892": 438, "548e": 458, "549": 418, "549019607843138": 448, "54e": 465, "55": [39, 42, 83, 86, 454, 455, 460, 464, 468], "550": 434, "55026401977972e": 479, "55027": 133, "55045": 458, "551": [458, 519], "55197": [362, 559], "552": 458, "55275": 471, "553": 458, "553337": 481, "5538": 481, "5538942e": 461, "554": 65, "55410": 458, "5545130e": 461, "554e": 432, "556": [418, 434, 557], "5561760e": 461, "5563052715230388": 479, "557": [418, 465], "55775": 458, "558": 418, "559": 418, "5594": 79, "56": [430, 455, 463, 472], "560": [37, 458], "5606985": 455, "5607778e": 461, "56093766": 92, "56141": 458, "562": 458, "5622482": 92, "562597": 450, "56353481": 556, "56393115380234": 445, "563e": [434, 444], "564": [279, 418, 434, 465], "56413952067279": 445, "5644": 459, "565": 418, "56506": 458, "565095": 430, "566e": 434, "56711": 481, "5686274509803928": 448, "56871": 458, "569": 418, "56922612": 556, "5692809e": 461, "56973": 481, "57": [33, 434, 438, 440, 444, 455, 463, 511, 512], "57011": 444, "571": [429, 446, 449, 458], "57185": 492, "5719922e": 461, "571e": 458, "572": 435, "57233": 481, "57236": [438, 458, 471, 481], "572e": 432, "573": [65, 434, 481], "57300957": 166, "5754970e": 461, "576": 465, "5760": 481, "57602": 458, "576188": 466, "5763635e": 461, "5768262e": 461, "577398": 471, "5779092e": 461, "578": [458, 556], "579": 458, "57944657408": 458, "57967": 458, "57e": 458, "58": [397, 400, 437, 442, 445, 458, 462, 463, 465, 473, 479, 513, 514, 515], "580": 557, "581": 435, "5819e": 436, "582": 418, "58332": 458, "5833e": 458, "5835918e": 461, "584": [429, 474], "5842497e": 461, "585": 458, "58540702": 92, "5867488e": 461, "58693695": 455, "58698": 458, "586e": 438, "5882352941176467": 448, "588e": 458, "58909": 454, "58926": 438, "5892966e": 461, "5895": 431, "58999": 225, "58e": [450, 458], "59": [79, 440, 450, 452, 458, 462, 473, 481, 516, 517, 518], "590": 434, "59000": [225, 550], "59001": 225, "59063": 458, "5908": 458, "590835686434463": 467, "591": [418, 458], "59100": [549, 550], "59123": [543, 544, 545], "5915030546513255": 451, "5915e": [458, 480], "592": [429, 476], "59200": 549, "59233": 466, "59235": [79, 470], "59240": 466, "59250": 466, "59254e": 430, "59265": 430, "593": 418, "59300": 455, "59344": 481, "59348": 481, "59365": 550, "594": [418, 434], "59400008": 92, "59428": 458, "59451": 438, "5951631e": 461, "596": 465, "59696": 438, "596e": 458, "597": 471, "597774": 461, "59793": 458, "598": 481, "5985": 481, "5987726": 92, "599": [418, 448, 453, 465], "599625": 470, "59976": 458, "599999904632568": 458, "599e": 438, "59d09m41": 458, "59e": [458, 465, 471], "5a": 58, "5e": [437, 447, 458, 465], "6": [28, 29, 30, 31, 32, 35, 36, 37, 38, 39, 40, 50, 52, 53, 65, 82, 83, 86, 95, 97, 104, 106, 110, 119, 124, 133, 137, 138, 139, 140, 141, 143, 144, 145, 147, 150, 152, 154, 155, 182, 183, 184, 186, 191, 192, 194, 195, 196, 225, 264, 349, 352, 365, 368, 373, 377, 378, 381, 386, 394, 397, 410, 412, 414, 420, 421, 425, 427, 430, 431, 432, 434, 435, 436, 437, 438, 439, 440, 442, 443, 444, 445, 446, 447, 448, 450, 451, 452, 453, 454, 455, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 468, 470, 471, 472, 473, 479, 480, 481, 483, 487, 504, 508, 514, 518, 538, 554, 556], "60": [65, 86, 145, 425, 435, 438, 458, 460, 471], "600": [435, 438, 443], "6000000000000001": 466, "6002e": 480, "600661": 461, "60075": 461, "60090769e": 466, "600e": 434, "6018166e": 461, "601e": 458, "602": 434, "603": [465, 481], "6033": 430, "60350": 432, "603625": 461, "604": 434, "60437": [546, 547, 548], "6046689e": 461, "60603928": 466, "607843137254942": 448, "609e": 438, "60e": 458, "61": [65, 407, 435, 450, 458, 465, 557], "610": 465, "61051": 471, "6105760e": 461, "611": [429, 438, 462, 469, 556], "6116853": 458, "611e": 458, "6125": 473, "612a": 120, "613114": 451, "61422433": 92, "61489": 461, "614e": 438, "615316": 481, "617": 435, "617194512605": 454, "617835": 461, "6181862e": 461, "61862": 225, "619": 458, "6194453e": 461, "619794257232": 479, "62": [434, 440, 458, 472, 480], "620": 458, "620398": 461, "6205": 481, "62111": 438, "621499": 481, "6218742e": 461, "6219": 432, "622": [418, 432], "62258": 458, "6227766": 463, "62277660168379": 463, "6228e": 432, "623": [458, 481], "62320": 432, "623397": 461, "62341325": 463, "623413251903492": 463, "624": 465, "624122": 444, "624d": 24, "625": [429, 444, 449], "62503": 458, "62514628": 461, "6253652e": 461, "6259962e": 461, "6266": 481, "6267247": 481, "627450980392158": 448, "6274e": 454, "628": 418, "62842028": 459, "63": [430, 434, 436, 437, 459, 462, 472, 473, 479, 480, 502, 504, 505, 508], "630": [78, 429, 465, 469, 473, 479], "6309576500000000": 481, "630e": 65, "631": [418, 442], "631155605": 446, "631159205": 446, "631170005": 446, "631173605": 446, "631177205": 446, "631180805": 446, "6318811e": 461, "632": [429, 433], "632627": 481, "632932": 530, "633": [81, 97, 100, 104, 105, 163, 435, 443, 462, 479, 480, 504], "63307": 79, "63308": [452, 480], "633083": 464, "63310241699219": 443, "63326": 438, "6333": 89, "63342": 481, "633600": 465, "635": 418, "63500212963": 458, "6354": 481, "63541": 470, "636688324856333": 454, "638": 465, "639": 458, "6390": 430, "63902": 430, "6397": 481, "63e": 459, "64": [39, 65, 79, 119, 182, 400, 458, 471], "640": 418, "6402822e": 461, "641": [418, 481], "64103": 470, "6413": 444, "641635917844372": 445, "6417": 444, "6419578e": 461, "642": 481, "6429005895278312": 467, "643": [30, 31, 32, 33], "64323": 438, "64438": 471, "6444": 430, "645": [429, 456, 459], "6451": 444, "6464": 430, "647": 418, "647058823529452": 448, "6471115e": 461, "64794383e": 466, "648": 418, "6488": 454, "648e": 65, "649": 418, "64987376": 92, "64e": 435, "65": [62, 385, 400, 402, 443, 459, 471], "650": 459, "6509": 430, "651": 458, "651058": 481, "65136744574565": 454, "6514": 481, "652": 443, "6522806": 481, "652368617859867": 443, "653": [418, 431], "65357608e": 461, "653e": 438, "654": [430, 458], "65412": 444, "654e": 458, "655": 438, "655283": 438, "6554088e": 461, "6556": 438, "6556248e": 461, "655e": 65, "656": 556, "65603222222": 471, "65603794185": 458, "6577182894355391": 467, "658": 465, "658909145253801e": 481, "6589622747787678": 467, "659": [434, 438], "65e": 112, "66": [52, 53, 400, 403, 437, 450, 459, 460, 465, 468], "660": 418, "6604475": 444, "660698": 546, "660e": 481, "660fals": 432, "661": 418, "66104": 430, "662": 458, "6623e": 442, "663": 556, "663742400000000": 481, "664502403": 470, "664502405": 470, "664502408": 470, "664502409": 470, "664502414": 470, "6652219e": 461, "6654036168695552": 445, "6659": 438, "66650390625": 431, "6666666666583865": 453, "6666666666666666": 545, "666666666666696": 448, "66813": 444, "669": 435, "66984341": 461, "669e": 133, "66e": [442, 459], "67": [17, 400, 458, 481], "670": 458, "6705024680435898": 288, "671": [429, 468, 469], "671616": 430, "6728": [458, 481], "673": [446, 473, 543], "67304": 92, "673156": 537, "67375": 430, "67457342435522e": 481, "676836990188792": 435, "6768e": 435, "677": 418, "6772235e": 461, "67759236e": 461, "678": [82, 445], "67824": 459, "6784": 556, "67861": 461, "678684049503813e": 435, "679": 418, "679478012854058e": 435, "6795e": 435, "67992517": 92, "67e21": 457, "68": [65, 79, 91, 144, 150, 152, 153, 154, 156, 220, 400, 430, 458, 460, 461, 463, 470, 481, 557], "680": [435, 465], "6803": 481, "6812310184489": 454, "68125": 461, "6823": 430, "683": 434, "684": [163, 429, 469], "68542112": 92, "686": 435, "68628538586": 459, "687": [465, 474], "687214": 462, "687500": 462, "687685": 458, "688": [429, 459, 469], "689": 434, "68e": [442, 458], "69": [97, 427, 438, 458, 459], "690": 65, "690311850083152": 445, "690557685186": 458, "6909290e": 461, "691": 458, "69138": 438, "691680": [97, 459, 465], "692": 438, "69314486": 464, "693940": 442, "694": 435, "6953125": 459, "69543812": 92, "6959369197218669": 467, "696509": 542, "697317": 471, "69735": 461, "697e": 432, "697fals": 432, "6985": 431, "6992": 444, "699757931149": 454, "699e": 438, "6e": [432, 458, 465], "6h": 472, "6ncyiu2i": 442, "6th": 399, "7": [16, 30, 31, 38, 52, 53, 65, 80, 83, 86, 99, 118, 119, 125, 132, 163, 166, 223, 351, 352, 361, 365, 366, 373, 377, 378, 381, 397, 401, 402, 404, 405, 411, 412, 417, 418, 419, 421, 422, 430, 431, 433, 434, 435, 436, 437, 438, 439, 440, 442, 443, 444, 445, 446, 447, 448, 451, 452, 453, 454, 455, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 470, 471, 472, 473, 479, 480, 481, 508, 512, 513, 549, 556, 557], "70": [65, 86, 97, 444, 458, 459, 556], "700": [369, 447, 464], "70000000e": 466, "7000e": 466, "70016": 444, "7007": 444, "701": 504, "70181": 133, "702": [452, 458, 480], "702972": 540, "703": 397, "7030e": 436, "70358483e": 466, "70379643661829": 454, "704": 465, "70428": 481, "70437": 461, "705": 481, "70546": 438, "70634e": 430, "706e": 458, "707e": 443, "708": [434, 435], "708e": 438, "709": 418, "7097381e": 461, "70e": 466, "71": [33, 437, 465, 557], "710": 418, "71067811865478": 458, "7116851": 466, "712": 445, "71220672": 459, "7123895e": 461, "712547": 522, "712e": [452, 480], "713": [418, 458], "7132e": 481, "714": 458, "714e": 438, "715": 481, "716": [91, 288, 289, 463], "716062": 470, "71693826": [453, 467, 495], "717": 458, "71795506": 481, "7184": 481, "719": [418, 434, 465], "7190994e": 461, "71944e": 430, "7195": 458, "719e": 458, "72": [404, 458, 462, 481], "720": [447, 458], "7200": 450, "721e": 438, "722": 465, "72217": 481, "722557505166": 458, "723": 438, "723e": 458, "7240965e": 461, "725": 458, "725490196078432": 448, "727": 465, "72775": 481, "7284447e": 461, "728953": 550, "73": [430, 481], "7303": 481, "731": 418, "732929": 518, "732e": [65, 458], "733": [65, 418], "733360190578827e": 479, "734": 481, "7350250533013533": 467, "7350380e": 461, "7351418e": 461, "735e": 458, "736": [556, 557], "737": 434, "738": [418, 458], "7385727e": 461, "739": [418, 434], "7395744e": 461, "739e": 65, "73e": [458, 479], "74": [430, 440, 481], "740": 418, "740e": 438, "742": 465, "743e": 458, "744": 444, "74427": 444, "74465974e": 461, "74479": 438, "745098039215687": 448, "74542e": 430, "7454438574433": 454, "746": 418, "7471700e": 461, "7479085e": 461, "748": 458, "748259": 442, "75": [65, 354, 434, 481], "750": 557, "7521e": 454, "75267735": 481, "753": [418, 435], "7537086e": 461, "754": 418, "75408483": 481, "7555": 462, "7559": 481, "756": 458, "7567": 430, "7580410e": 461, "759": 418, "7596682e": 461, "75e": [458, 480], "76": [445, 463], "7613": 397, "7613e": 439, "761c": 28, "762": 418, "762199399999986": 519, "762735": 466, "763": 418, "7637308880733709": 467, "76419591747674": 454, "7642": 438, "7647": 481, "764705882352942": 448, "76473": 438, "7652512e": 461, "765e": 438, "766": [418, 438], "7660168382": 458, "7660365375951": 479, "766d": 470, "767": 418, "76739": 458, "768000": [97, 459], "768048": 92, "7681656e": 461, "76837444": 455, "7684028": 481, "7692170e": 461, "76e": 465, "77": 434, "770": 65, "771667": 473, "77174": 438, "7718272408581743": 288, "771e": 458, "772": [418, 430], "77206": 481, "77218": 438, "773": 458, "7733e": 458, "77351": 438, "77358627319336": 431, "774": [418, 450], "7743835449219": 434, "774e": [438, 458], "775": [65, 465], "7752244878226383": 444, "7755386e": 461, "776": 471, "7760": 481, "7763307219821931": 288, "7765957e": 461, "77678": 430, "7769775": 470, "777": 418, "7771617763704126": 288, "77751797": 92, "777e": [65, 432], "777l": 35, "778": [418, 434, 458], "77827941": 463, "778279410038923": 463, "779": [435, 458], "7796942": 481, "77e": [437, 458], "78": [463, 464, 472, 480], "780": [31, 119], "7800e": 434, "7804888e": 461, "78083": [132, 133], "780e": 119, "78188": 438, "78188096": 92, "782": 471, "7827941": 463, "78279410038923": 463, "782e": 454, "783": [418, 458, 481], "78332719": 444, "78333": 444, "783587001383003": 470, "783e": 444, "784": [419, 435], "7843137254901955": 448, "78499999999997": 515, "785": 515, "7853981633974483": 548, "787": [65, 163], "7872234642813915e": 452, "7875405607868806": 467, "7876233e": 461, "788": 458, "7887840e": 461, "788e": 458, "789": 418, "78910994": 92, "7894": 444, "78952750835169": 454, "78e": 465, "79": [431, 458], "790": [418, 434], "791": 419, "7913e": 434, "7922": 430, "793": [419, 454], "79432823": 466, "79469899": 444, "7947": 438, "79470": 444, "795": 434, "796": [419, 465], "796125": 515, "797": 419, "7972": 462, "798": 419, "798218": 430, "7990194e": 461, "7997221e": 461, "799999952316284": 458, "7c": 463, "7d": 458, "7e": [458, 465, 466], "7e955f": 400, "8": [17, 18, 21, 22, 24, 25, 27, 38, 40, 50, 65, 83, 85, 86, 97, 100, 104, 105, 106, 110, 122, 133, 137, 138, 194, 223, 225, 290, 361, 365, 368, 369, 378, 401, 402, 405, 407, 408, 412, 413, 414, 417, 418, 419, 422, 430, 431, 432, 434, 435, 436, 437, 438, 439, 440, 442, 443, 444, 445, 446, 447, 448, 449, 451, 452, 453, 454, 455, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 468, 470, 471, 472, 473, 479, 480, 481, 488, 490, 499, 504, 508, 512, 521, 532, 540, 556], "80": [166, 434, 436, 437, 438, 459, 463, 471, 504, 531], "800932": 458, "801": [481, 504], "801668796295": 458, "802": [465, 481], "803": [438, 519], "8031431e": 461, "8037638e": 461, "803921568627494": 448, "804": 465, "804492": 450, "80492": 133, "80571": 132, "8062607e": 461, "80683246": 461, "8069e": 442, "807201": 481, "8075": [458, 481], "8075185": 458, "8086": 438, "808687936570502e": 460, "80871364": 92, "8090746": 470, "809505": 458, "80982039": 461, "81": [408, 429, 452, 521], "810": [419, 458], "810000": 450, "810e": 458, "811": 419, "8115337251905373e": 460, "812": 419, "812075194992371e": 460, "8122169596532167e": 460, "8122425483643125e": 460, "8122e": 460, "812358724314062e": 460, "8129257829574434e": 460, "812951371538087e": 460, "813": 419, "814": [419, 454], "8150": 481, "8157971601581226e": 460, "816": [419, 445], "8160964882165554": 288, "81699e": 430, "816e": 458, "818388e": 481, "81846673023601": 454, "81847286": 455, "818e": 432, "819": 458, "81e": 521, "82": [65, 400, 458, 508], "820": 419, "8205513": 470, "820562952023891": 288, "8222980e": 461, "823": 434, "82352941176471": 448, "824": [128, 419, 465], "8241471833009617": 467, "825": [419, 430, 458], "8256": 481, "826": [419, 429, 433, 434], "826414166666": 89, "827": 419, "8272": 483, "82739": 438, "827e": 133, "8290458e": 461, "8293": 481, "82946153": 481, "82e": 443, "83": [30, 65, 79, 81, 89, 97, 100, 104, 105, 163, 166, 434, 435, 436, 438, 443, 452, 459, 462, 463, 464, 472, 473, 479, 480, 499, 502, 504, 505, 508], "830": 419, "8300": 481, "831": 419, "832": 419, "83242471": 461, "833": [419, 435], "833333333336": 455, "833e": 438, "834": 419, "8341884287660133": 467, "8349780e": 461, "835": 419, "835e": 444, "835fals": 432, "836": [419, 438, 455, 458], "836731": 458, "8369650e": 461, "837": [419, 465], "8377268e": 461, "838": [429, 438, 482], "8383396349722769": 288, "84": [24, 400, 434, 436, 444, 458, 465, 508], "840": [419, 438], "841": 458, "84196311": 92, "842": [419, 458], "84233": 438, "842x": 134, "843": [59, 430, 455], "843137254902004": 448, "843e": 65, "8441040e": 461, "844770648146": 89, "8449575657133206": 288, "845": 420, "84529": 458, "8455480e": 461, "845693": 430, "846": [438, 458, 556], "847": 419, "8475576e": 461, "8475650e": 461, "8493": 450, "84e": 442, "85": [83, 86, 426, 444, 512, 513], "851": 419, "85157506": 481, "8515948e": 461, "851758": 512, "85188496e": 461, "85202": 481, "85287": 471, "852e": 458, "853e": 450, "854": [419, 551], "854166666664": 455, "85416667": 453, "85469291": 92, "855": 419, "85527": 444, "85527359": 444, "8555500e": 461, "855887646638273e": 479, "856": [429, 449], "85624": 439, "85625": 439, "8568": 481, "856e": 458, "8570719e": 461, "85722435185": 458, "858": 419, "858e": 458, "859": [419, 434], "85900": 444, "85900392": 444, "85925": 481, "8593054": 458, "85e": 458, "86": [432, 434, 435, 438, 463, 481, 492], "860": 458, "861": 481, "86111111": 453, "861150": 432, "8613613e": 461, "86178": 132, "8620": 450, "8623": [19, 20, 26, 205, 206, 209, 213, 215, 216, 217, 221, 227, 228, 230, 234, 236, 238, 239, 240, 244, 249, 251, 252, 253, 254, 257, 261], "862745098039234": 448, "864": [419, 429, 434, 449, 481], "864701": 525, "865": [419, 438], "86676": 471, "8669": 430, "867": [429, 551], "8673": 444, "867506": 535, "868": [419, 458], "86831929": 92, "8699": 430, "8699165e": 461, "87": [65, 444, 454, 463, 480], "870": [65, 419], "871": 419, "872": 419, "872e": 438, "873": 435, "8733348": 470, "873581766271": 445, "873659477745188": 467, "874": 431, "875": 419, "876": [429, 453, 456, 465], "8767": 438, "8769240e": 461, "87710186": 92, "877563": 458, "878": [458, 465], "87897": 444, "87897418": 444, "8799800e": 461, "87e": 21, "88": [400, 422, 434, 436, 444, 445, 458, 463, 481], "881": [419, 430, 438], "88113384": 440, "8815212313941426": 467, "882": [65, 438], "882352941176466": 448, "883": [419, 429, 474], "8834862e": 461, "883e": 65, "884": 419, "88470839": 466, "885": 419, "886": 458, "8865": 481, "88781": 438, "888": 419, "8885138e": 461, "889": 458, "8893600e": 461, "889e": 438, "88e": [432, 458], "89": [33, 435, 463], "8908866e": 461, "8909e": 454, "890e": 65, "892": [434, 465], "89243456": 481, "8926": 481, "892865": 528, "89287": 430, "893": 419, "894": 432, "8943121e": 461, "89492144e": 460, "895": 455, "8954039e": 461, "89595846": 466, "89709472": 481, "898": 419, "8986348363207728": 467, "89873": 444, "8989213": 444, "898e": 458, "899": [65, 440], "8999": 444, "899a": 264, "89e": 459, "8e": [432, 442, 445, 447, 465, 471, 540], "9": [31, 33, 35, 65, 79, 83, 86, 132, 223, 225, 320, 326, 358, 365, 366, 370, 378, 397, 403, 405, 416, 419, 421, 424, 426, 430, 431, 432, 434, 435, 436, 437, 438, 439, 440, 442, 443, 444, 445, 446, 447, 448, 450, 452, 453, 454, 455, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 468, 470, 471, 472, 473, 479, 480, 481, 507, 514, 518, 519, 520, 527, 530, 543, 551, 556], "90": [57, 65, 384, 437, 443, 444, 458, 463, 466, 483], "900": [429, 454, 456, 458], "9002269877996247": 455, "900269": 461, "9023670e": 461, "90242058e": 459, "9032163": 82, "904": 481, "905": 458, "9053655e": 461, "9053906e": 461, "906": [419, 458], "90605275e": 471, "90685": 438, "907": 458, "9074812e": 461, "9077294": 470, "908700583573673": 479, "90e": [97, 435, 442, 459], "91": [437, 454, 463, 468, 508], "910": 434, "911": 419, "912": 458, "912525e": 481, "912779907405": 458, "912868843587422e": 452, "912e": 450, "913": 434, "913196574074": 452, "914": [65, 454], "915": 458, "91507": [97, 459], "9163195e": 461, "91719": 459, "918": 65, "918365": 458, "919": 419, "919e": 458, "91e": 465, "92": [133, 437, 438, 463, 470], "920": 434, "9205875e": 461, "921": 435, "9215375e": 461, "92234009259": [397, 452], "922e": 450, "923324233051": 454, "923e": 438, "924": 435, "9240e": 466, "92490": 438, "925106": 444, "925e": 438, "9269494e": 461, "9277492e": 461, "928": 458, "9280475e": 461, "929": [430, 435], "93": [65, 437, 438, 463, 470], "93026": 458, "9303": [458, 481], "931": 286, "93128e": 430, "932": 419, "93271046296": 452, "933": 419, "9332549000000": 481, "9343": 430, "935826709880043": 451, "93702": 471, "9382336444241555": 467, "938e": [444, 458], "939": [275, 281], "9391360e": 461, "93988308": 92, "93e": 458, "94": [437, 458, 463, 470, 479, 481], "940e": 458, "940fals": 432, "94111838": 92, "941176470588236": 448, "94186555556": [397, 452], "943282347242818": 479, "9445e": 439, "945041": 543, "9453950989269149": 467, "945e": 438, "9462": 444, "946923": 259, "94722599": 444, "94723": 444, "948683": 430, "9489822e": 461, "949": 465, "9499210e": 461, "94e": [444, 458], "95": [33, 65, 144, 150, 152, 153, 154, 156, 207, 208, 212, 220, 223, 235, 237, 245, 246, 250, 256, 260, 437, 438, 444, 450, 458, 459, 460, 463, 464, 470, 512, 557], "950": 419, "9500979841335693": 288, "95024543e": 460, "951": [429, 474], "952": 65, "9520e": 450, "9529719e": 461, "953": 465, "95421509259": 452, "95451985e": 119, "9546285068162436": 467, "9551710747944": 454, "955e": 450, "95615": 430, "957": 65, "9580e": 436, "95883": 481, "959198": 458, "959d": [52, 53], "96": [400, 437, 459, 463, 521], "9606540e": 461, "960784313725491": 448, "9608912e": 461, "9619812963": 452, "962": [429, 469], "965e": 438, "966": 419, "96602": 439, "967546": 438, "9677107409819438": 288, "96814": 481, "96833546296": [458, 471], "968488": 286, "969": [444, 458], "96e": 432, "96r": 463, "97": [437, 458, 461, 467, 479, 480], "97003": 481, "97054": 438, "970e": 458, "971": 454, "97116": 444, "973": 458, "97369425926": 452, "974": 435, "9741e": 443, "974e": 458, "975": 419, "97529": 132, "97596": 438, "976": 419, "97749": 444, "97749371": 444, "9776920e": 461, "979": [65, 419, 463], "97934": 438, "97978": 79, "97e": 458, "98": [79, 329, 436, 437, 438, 442, 452, 454, 461, 479], "980": 65, "9803921568627443": 448, "98049": 438, "98149518519": 452, "9816452e": 461, "982075849517389e": 466, "98258": 438, "9833462074166": 458, "9834338e": 461, "98359208475904647": 444, "98429": 438, "9845": 430, "9847406e": 461, "985": [419, 432], "985502122122975": 467, "9864771491419372": 479, "9876": 430, "98772": 132, "988": [419, 458, 465], "988409870698051e": 52, "9890": 481, "98e": 458, "99": [329, 437, 438, 439, 450, 480, 481], "991": 458, "9910796e": 461, "9912648e": 461, "9912712e": 461, "9914e": 454, "992": 450, "9920e": 450, "992954": 547, "993": 431, "9931": 481, "994": 419, "994e": 458, "995": 465, "9952623149688797": 479, "9956e": 454, "996760": 533, "9969731e": 461, "997": 419, "9977859e": 461, "9978": 481, "998": 445, "99848e": 471, "999": [50, 153, 156, 458], "99919925926": 225, "99996948242188": 434, "9999912037958": 444, "999999": 458, "99999994": 82, "9999999995": 458, "9999999997835": 431, "999999999997": 446, "9999999999977": 458, "9999999999978": 453, "9999999999998": 458, "99999999999994": 458, "99999999999999": [437, 458], "99e": 458, "9e": [432, 458, 540], "A": [16, 19, 20, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 78, 79, 80, 83, 84, 85, 86, 87, 94, 95, 96, 97, 99, 100, 103, 104, 105, 117, 118, 119, 127, 132, 133, 181, 182, 183, 184, 186, 188, 189, 190, 191, 192, 193, 194, 195, 196, 201, 202, 204, 205, 208, 209, 211, 212, 213, 215, 216, 217, 218, 220, 221, 222, 223, 224, 225, 226, 227, 228, 230, 233, 234, 237, 238, 239, 240, 241, 244, 245, 246, 247, 249, 252, 253, 254, 256, 257, 258, 259, 260, 261, 272, 274, 282, 290, 299, 350, 351, 352, 354, 355, 362, 364, 366, 367, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 382, 384, 385, 386, 387, 388, 389, 390, 399, 401, 405, 406, 407, 408, 409, 412, 414, 415, 418, 419, 420, 421, 423, 425, 426, 427, 430, 431, 434, 436, 438, 442, 444, 445, 448, 451, 452, 453, 454, 455, 457, 458, 459, 460, 462, 463, 464, 465, 466, 467, 468, 470, 471, 472, 473, 475, 478, 480, 481, 483, 491, 492, 493, 495, 496, 504, 505, 507, 508, 510, 512, 549, 550, 553, 554, 557], "AND": [464, 465], "And": [264, 361, 364, 379, 381, 387, 392, 431, 432, 434, 435, 442, 446, 448, 454, 459, 460, 463, 464, 466, 470, 472, 479, 480, 481], "As": [79, 290, 320, 361, 362, 364, 369, 373, 374, 375, 377, 379, 387, 388, 390, 397, 402, 421, 430, 431, 434, 435, 436, 438, 439, 440, 444, 446, 447, 451, 452, 453, 454, 457, 458, 459, 460, 462, 463, 466, 468, 471, 473, 479, 481, 495, 504, 557], "At": [248, 375, 378, 387, 388, 391, 405, 446, 463, 470, 500, 553], "But": [361, 366, 369, 375, 380, 388, 391, 397, 421, 434, 435, 460, 468, 470, 479, 483, 555], "By": [19, 20, 26, 50, 63, 83, 86, 96, 97, 100, 104, 105, 116, 120, 124, 137, 138, 139, 140, 141, 142, 143, 144, 145, 147, 148, 150, 152, 153, 154, 155, 156, 160, 163, 170, 180, 182, 183, 184, 186, 192, 195, 196, 205, 206, 208, 209, 212, 213, 215, 216, 217, 220, 221, 223, 227, 228, 230, 234, 235, 236, 238, 239, 240, 244, 245, 246, 249, 250, 251, 252, 253, 254, 256, 257, 260, 261, 358, 361, 387, 388, 389, 406, 407, 409, 446, 447, 451, 453, 460, 463, 468, 480, 502, 506, 512, 513, 514, 558], "For": [11, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 42, 78, 83, 84, 86, 90, 94, 96, 97, 100, 104, 105, 112, 114, 116, 117, 119, 120, 121, 124, 125, 126, 127, 140, 141, 142, 148, 153, 156, 163, 168, 170, 173, 174, 176, 177, 181, 182, 183, 184, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 200, 205, 206, 207, 208, 209, 210, 211, 212, 213, 215, 217, 218, 220, 221, 222, 223, 224, 225, 226, 228, 233, 234, 235, 236, 237, 238, 240, 241, 245, 246, 247, 249, 250, 252, 253, 254, 256, 260, 261, 273, 275, 279, 281, 287, 293, 308, 360, 361, 362, 364, 366, 367, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 380, 381, 382, 384, 386, 387, 388, 389, 390, 391, 392, 393, 395, 396, 397, 399, 402, 403, 404, 406, 407, 408, 409, 412, 419, 423, 426, 430, 431, 432, 434, 435, 436, 437, 438, 439, 440, 442, 443, 444, 446, 448, 450, 451, 452, 453, 454, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 470, 471, 472, 475, 479, 480, 481, 483, 490, 491, 493, 495, 505, 507, 508, 513, 518, 550, 554, 555, 557, 558, 559], "IN": [87, 95, 233], "If": [16, 19, 20, 26, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 45, 76, 78, 79, 80, 81, 82, 83, 84, 86, 88, 89, 91, 95, 97, 98, 99, 100, 101, 102, 103, 104, 105, 107, 108, 114, 116, 117, 118, 119, 120, 122, 124, 127, 131, 132, 135, 140, 141, 142, 148, 151, 153, 156, 157, 159, 160, 163, 165, 166, 169, 170, 173, 174, 176, 177, 178, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 194, 195, 196, 200, 201, 203, 205, 206, 207, 208, 209, 210, 211, 212, 213, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 230, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 256, 257, 258, 259, 260, 261, 262, 270, 271, 287, 290, 302, 303, 308, 347, 350, 354, 355, 356, 357, 361, 362, 363, 364, 366, 368, 369, 374, 375, 377, 378, 379, 382, 383, 384, 386, 387, 390, 391, 392, 393, 394, 395, 396, 397, 401, 402, 403, 420, 421, 422, 430, 431, 432, 434, 436, 437, 439, 442, 444, 447, 450, 452, 453, 454, 455, 458, 459, 460, 462, 463, 464, 465, 466, 468, 470, 471, 472, 481, 493, 495, 506, 508, 514, 516, 529, 555, 556, 557, 558], "In": [15, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 65, 79, 83, 84, 86, 89, 96, 98, 103, 119, 140, 159, 182, 184, 187, 190, 196, 201, 203, 260, 271, 303, 361, 364, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 393, 394, 397, 402, 403, 404, 405, 406, 407, 408, 409, 412, 423, 426, 430, 431, 432, 434, 435, 436, 437, 438, 440, 442, 443, 445, 446, 447, 448, 450, 451, 452, 453, 454, 455, 457, 458, 459, 460, 462, 463, 464, 465, 466, 467, 468, 471, 472, 479, 480, 481, 491, 493, 495, 500, 503, 504, 505, 507, 508, 509, 512, 513, 518, 531, 550, 553, 554, 555, 556, 557, 558, 559], "It": [15, 19, 20, 26, 27, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 86, 97, 100, 104, 105, 106, 108, 110, 117, 132, 140, 144, 151, 152, 153, 154, 156, 166, 169, 173, 174, 179, 183, 184, 186, 188, 191, 192, 195, 196, 198, 205, 206, 209, 212, 213, 215, 216, 217, 221, 225, 227, 228, 230, 234, 236, 238, 244, 248, 249, 251, 252, 253, 254, 257, 261, 273, 277, 279, 280, 298, 312, 317, 361, 362, 364, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 385, 386, 387, 388, 389, 391, 392, 396, 398, 402, 403, 404, 405, 409, 412, 414, 415, 416, 421, 423, 425, 426, 427, 430, 435, 440, 443, 445, 447, 450, 451, 455, 458, 459, 460, 462, 463, 464, 466, 468, 470, 471, 472, 473, 479, 480, 481, 483, 484, 491, 492, 494, 495, 499, 500, 502, 504, 508, 522, 525, 526, 528, 529, 533, 534, 536, 537, 538, 539, 552, 553, 554, 555, 556, 557, 559], "Its": [140, 273, 373, 387, 388, 412, 414, 448, 453, 468, 480, 497, 498, 499, 501], "NOT": [464, 495], "No": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 82, 372, 382, 385, 386, 420, 422, 428, 448, 458, 460, 462, 463, 481], "Not": [100, 104, 105, 185, 191, 193, 369], "ON": [97, 100, 126, 170, 171, 172, 180, 359, 367, 414, 430, 434, 437, 440, 444, 452, 453, 455, 460, 462, 468, 495, 504, 554, 556, 558], "OR": [97, 104, 459, 464, 465], "Of": [361, 364, 397, 442, 459, 463, 471, 555, 558], "On": [59, 158, 164, 165, 168, 273, 280, 286, 361, 362, 367, 369, 376, 377, 390, 392, 393, 394, 395, 416, 442, 443, 460, 475, 557], "One": [31, 32, 37, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 96, 97, 100, 104, 105, 211, 233, 316, 361, 362, 367, 369, 370, 371, 372, 375, 377, 378, 379, 387, 426, 431, 435, 440, 452, 462, 463, 464, 479, 481, 504, 508, 531, 555, 557], "Ones": 290, "Or": [19, 20, 26, 205, 206, 209, 213, 215, 216, 217, 221, 227, 228, 230, 234, 236, 238, 239, 240, 244, 249, 251, 252, 253, 254, 257, 261, 362, 380, 381, 435, 442, 459, 463, 470, 471, 493], "Such": [373, 461, 499], "That": [16, 19, 20, 80, 99, 118, 200, 201, 205, 208, 209, 212, 213, 215, 216, 217, 218, 220, 221, 222, 223, 224, 225, 226, 227, 228, 230, 237, 238, 239, 240, 241, 244, 245, 246, 247, 249, 252, 253, 254, 259, 260, 361, 362, 366, 375, 378, 381, 460, 481, 555], "The": [11, 15, 16, 19, 20, 23, 26, 27, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 42, 52, 53, 57, 59, 62, 67, 76, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 89, 90, 95, 97, 99, 100, 101, 102, 103, 104, 105, 106, 109, 110, 111, 112, 116, 117, 118, 119, 120, 121, 122, 124, 125, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 147, 148, 150, 151, 152, 153, 154, 155, 156, 160, 164, 165, 169, 170, 173, 174, 175, 178, 179, 180, 181, 182, 183, 184, 185, 186, 188, 190, 191, 192, 193, 194, 195, 196, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 212, 213, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 230, 234, 235, 236, 237, 238, 239, 240, 241, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 256, 257, 259, 260, 261, 263, 264, 270, 272, 274, 275, 277, 278, 279, 280, 281, 286, 290, 302, 308, 310, 311, 314, 329, 344, 345, 347, 349, 350, 351, 352, 354, 355, 356, 357, 358, 360, 361, 362, 363, 364, 365, 366, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 393, 394, 395, 398, 401, 402, 404, 405, 406, 407, 408, 409, 412, 414, 415, 416, 420, 421, 422, 423, 424, 425, 426, 427, 430, 431, 432, 434, 435, 436, 437, 438, 439, 440, 442, 444, 446, 447, 448, 450, 451, 452, 453, 454, 455, 457, 458, 459, 461, 462, 463, 464, 465, 466, 467, 470, 471, 472, 473, 475, 479, 480, 481, 483, 484, 485, 486, 490, 491, 493, 494, 495, 497, 498, 499, 500, 501, 502, 503, 505, 506, 507, 508, 509, 512, 514, 516, 517, 518, 521, 527, 529, 530, 531, 540, 550, 552, 553, 554, 555, 556, 557, 558, 559, 560], "Their": 464, "Then": [65, 97, 102, 104, 364, 366, 371, 374, 376, 377, 378, 379, 385, 394, 431, 434, 442, 443, 446, 450, 452, 460, 464, 466, 468, 480], "There": [83, 86, 132, 361, 362, 366, 367, 368, 370, 375, 376, 377, 378, 379, 380, 381, 382, 385, 388, 391, 393, 394, 420, 444, 448, 451, 457, 458, 459, 460, 461, 462, 464, 465, 472, 483, 491, 492, 495, 508], "These": [90, 188, 263, 361, 362, 366, 367, 372, 374, 375, 376, 377, 381, 382, 387, 404, 406, 407, 408, 412, 420, 426, 430, 443, 445, 446, 451, 454, 457, 459, 461, 463, 466, 467, 472, 475, 483, 500, 505, 507, 508, 556, 557, 558], "To": [16, 19, 20, 26, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 79, 80, 83, 86, 95, 99, 103, 116, 118, 120, 124, 182, 194, 205, 206, 209, 213, 215, 216, 217, 221, 227, 228, 230, 234, 236, 238, 239, 240, 244, 249, 251, 252, 253, 254, 257, 259, 261, 263, 273, 351, 352, 363, 364, 368, 369, 372, 373, 374, 376, 377, 382, 383, 384, 385, 386, 387, 391, 392, 394, 396, 397, 398, 402, 403, 404, 407, 408, 412, 414, 420, 421, 423, 426, 430, 431, 432, 434, 435, 436, 437, 439, 440, 442, 444, 445, 446, 447, 448, 450, 451, 452, 453, 454, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 470, 471, 475, 479, 481, 491, 492, 493, 496, 500, 502, 504, 505, 512, 553, 555, 556, 557], "With": [79, 361, 370, 371, 387, 408, 421, 468, 491, 557], "_": [97, 104, 122, 221, 240, 361, 375, 385, 387, 437, 440, 457, 458, 460, 465, 468, 491, 504], "_0": [50, 51], "_1": [100, 105, 492], "_2": [100, 105], "__all__": 361, "__array__": 290, "__array_ufunc__": [446, 473, 543], "__attributes__": [83, 86], "__call__": [17, 18, 19, 20, 21, 22, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 35, 36, 37, 39, 40, 205, 206, 207, 208, 209, 210, 212, 213, 215, 216, 217, 218, 220, 221, 222, 223, 224, 225, 226, 227, 228, 230, 234, 235, 236, 237, 238, 239, 240, 241, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 256, 257, 259, 260, 261, 262, 302, 367, 372, 389, 408], "__class__": [361, 385, 457, 489], "__dict__": [16, 80, 99, 118, 361], "__enter__": 339, "__eq__": 414, "__exit__": 339, "__fields__": [16, 80, 99, 118, 388], "__getitem__": [371, 372, 373], "__init__": [16, 80, 99, 118, 191, 260, 361, 367, 373, 385, 423], "__int__": 308, "__len__": 371, "__main__": [243, 361, 468, 477, 555], "__name__": [361, 440, 452, 453, 454, 457, 477, 489, 555], "__neq__": 414, "__pydantic_extra__": [16, 80, 99, 118], "__pydantic_fields_set__": [16, 80, 99, 118], "__repr__": [361, 407, 421], "__str__": [361, 373, 388, 404], "__subclasses__": 457, "__version__": 396, "_basemodel__context": [16, 80, 99, 118], "_build": [362, 391], "_check_interv": 426, "_compute_flux_spati": 412, "_covari": [211, 233], "_data": 385, "_dom_class": [442, 450, 463, 479, 480], "_energy_t": 385, "_errn": [120, 121, 124, 125], "_errp": [120, 121, 124, 125], "_evaluate_timevar_sourc": 426, "_f_cash_root_cython": 285, "_factr": 460, "_fields_set": [16, 80, 99, 118], "_i": 122, "_k": [97, 104, 491], "_l": 491, "_lat": 361, "_lon": 361, "_map": 354, "_model": 117, "_new_attribut": 361, "_old_attribut": 361, "_parameter_units_for_data_unit": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40], "_parent_namespace_depth": [16, 80, 99, 118], "_phi": 361, "_prior": 389, "_propagate_error": 411, "_reco": 361, "_repr_html_": 361, "_row_index": 67, "_sample_coord_time_energi": 426, "_scan": 460, "_time_group": 385, "_time_t": 385, "_true": 361, "_type": [389, 468], "_types_namespac": [16, 80, 99, 118], "_was_": [16, 80, 99, 118], "_wc": 519, "_weight": 389, "a_": [100, 105, 143, 497, 500, 557], "a_off": 557, "a_on": 557, "a_scan": 468, "aa": [83, 86, 290, 387], "aaguasca": 423, "ab": [28, 30, 31, 32, 33, 35, 36, 37, 38, 39, 40, 50, 52, 53, 57, 58, 60, 61, 63, 79, 84, 112, 120, 134, 143, 196, 201, 203, 230, 263, 264, 280, 457, 458], "abc": [18, 56, 94, 115, 162, 181, 186, 462], "abcmeta": 462, "abdalla2018": [504, 505, 554], "abeysekara": 59, "abil": [385, 468], "abl": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 371, 376, 379, 431, 450, 452, 453, 468, 475, 555], "about": [11, 13, 16, 80, 99, 118, 138, 143, 220, 225, 320, 361, 364, 366, 370, 377, 378, 380, 381, 382, 386, 387, 389, 390, 391, 396, 397, 416, 417, 421, 422, 423, 432, 438, 439, 440, 443, 444, 446, 458, 461, 463, 466, 471, 480, 481, 483, 491, 492, 555, 558], "abov": [29, 44, 52, 53, 79, 116, 118, 119, 122, 126, 127, 132, 133, 158, 193, 350, 352, 361, 362, 367, 370, 371, 373, 375, 377, 378, 379, 380, 381, 385, 393, 394, 397, 430, 444, 446, 447, 448, 452, 455, 460, 462, 463, 464, 466, 467, 468, 470, 471, 472, 479, 489, 491, 492, 499, 508, 554, 555, 556, 557, 558], "abramowski": 143, "abruptli": [361, 386], "abs_path": 298, "absenc": [376, 440, 462, 464, 504, 556], "absolut": [78, 86, 101, 137, 138, 139, 140, 143, 145, 147, 150, 155, 183, 184, 186, 188, 192, 195, 196, 294, 320, 338, 342, 493], "absolute_tim": 559, "absopt": 379, "absorb": [261, 371, 384, 419, 521], "absorbedspectralmodel": [406, 419], "absorbt": 384, "absorpt": [213, 379, 409, 419, 429, 509, 541], "abstract": [56, 57, 59, 94, 115, 154, 162, 167, 181, 183, 186, 195, 372, 408, 507], "abstractsetintstr": [16, 80, 99, 118], "acada": 387, "academ": [128, 286], "accept": [16, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 79, 80, 83, 86, 99, 100, 101, 105, 118, 158, 175, 180, 182, 183, 184, 186, 194, 195, 196, 211, 233, 274, 359, 365, 366, 367, 368, 369, 370, 373, 374, 375, 377, 378, 379, 380, 381, 382, 384, 386, 387, 388, 389, 413, 417, 426, 430, 435, 436, 437, 440, 444, 447, 459, 462, 463, 471, 491, 507, 513, 531, 556, 557], "acceptance_off": [100, 101, 105, 158, 168, 373, 430, 431, 434, 437, 440, 491, 557], "access": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 56, 58, 60, 61, 63, 64, 65, 78, 79, 83, 84, 86, 97, 151, 181, 182, 191, 194, 280, 298, 361, 369, 370, 371, 372, 374, 377, 385, 391, 393, 396, 401, 402, 409, 416, 417, 419, 420, 426, 427, 432, 434, 435, 436, 442, 458, 460, 461, 465, 466, 470, 473, 479, 480, 481, 490, 495, 506, 507, 508, 553], "accessor": 463, "accident": [471, 555], "accord": [15, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 53, 70, 83, 86, 97, 100, 104, 105, 112, 117, 135, 141, 151, 158, 182, 188, 201, 203, 287, 350, 371, 372, 375, 376, 379, 385, 387, 406, 415, 427, 440, 452, 459, 462, 466, 467, 475, 491, 492, 495], "accordingli": [373, 387, 403, 409, 464], "account": [97, 100, 104, 105, 116, 160, 176, 211, 233, 248, 272, 274, 280, 336, 369, 374, 377, 385, 387, 408, 425, 427, 430, 431, 436, 440, 442, 448, 454, 455, 460, 462, 464, 480, 491, 493, 556, 557], "accur": [379, 422, 442, 460, 502], "accuraci": [375, 460, 495], "aceptance_off": 373, "acero": [379, 402, 404, 406, 409, 412, 414, 419, 421, 427], "achiev": [16, 80, 99, 112, 118, 158, 351, 352, 361, 370, 371, 372, 373, 374, 375, 377, 384, 387, 409, 463, 466, 467, 505], "acknowledg": [364, 387, 398], "acquir": 397, "acquisit": 554, "across": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 95, 112, 153, 156, 361, 370, 373, 391, 445, 454, 465, 471, 491, 507, 516, 554], "act": [86, 377, 465, 518], "action": [158, 366, 371, 377, 387, 391, 412, 454], "activ": [86, 280, 364, 378, 392, 393, 395, 396, 397, 406, 423, 451, 495], "actual": [171, 336, 337, 338, 360, 361, 362, 366, 370, 372, 374, 376, 377, 385, 386, 388, 390, 437, 447, 450, 453, 459, 460, 462, 463, 464, 468, 471, 472, 480, 481, 502, 504, 554, 555, 557, 559], "ad": [16, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 41, 59, 78, 79, 80, 83, 86, 97, 99, 100, 104, 105, 108, 109, 111, 118, 119, 183, 184, 186, 191, 192, 195, 196, 361, 362, 364, 366, 367, 369, 370, 371, 373, 374, 375, 376, 377, 378, 380, 381, 385, 387, 401, 402, 403, 405, 406, 407, 409, 412, 414, 416, 417, 418, 419, 420, 421, 422, 423, 425, 426, 427, 436, 442, 443, 461, 462, 465, 466, 467, 468, 472, 491, 508, 558], "adapt": [112, 158, 200, 370, 371, 374, 375, 380, 381, 383, 384, 387, 390, 397, 402, 403, 405, 406, 407, 409, 410, 412, 415, 418, 419, 421, 423, 425, 426, 427, 459, 461, 463, 464, 505], "adaptiveringbackgroundestim": [168, 367], "adaptiveringbackgroundmak": [161, 406, 505], "adass": 381, "add": [13, 15, 16, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 41, 42, 43, 44, 75, 79, 80, 83, 84, 86, 94, 95, 96, 97, 98, 99, 100, 102, 103, 104, 105, 117, 118, 119, 137, 138, 140, 141, 142, 143, 144, 145, 148, 150, 151, 152, 153, 154, 156, 160, 183, 184, 186, 190, 192, 195, 196, 211, 233, 248, 287, 330, 349, 358, 360, 361, 362, 364, 366, 369, 370, 371, 373, 374, 375, 376, 377, 378, 379, 380, 381, 384, 385, 387, 389, 390, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 412, 413, 414, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 430, 431, 437, 442, 443, 446, 450, 452, 455, 459, 461, 462, 463, 464, 466, 468, 470, 481, 485, 486, 495, 508, 523, 555, 558], "add_artist": [466, 512, 513], "add_cbar": [97, 100, 104, 105, 119, 137, 138, 140, 143, 144, 145, 150, 151, 152, 154, 183, 184, 186, 192, 195, 196, 349, 438, 439, 440, 442, 444, 450, 455, 457, 459, 461, 462, 463, 465, 466, 471, 472, 479, 480, 508, 511, 512, 513, 516, 517, 519], "add_column": [83, 86], "add_enabled_unit": [430, 437, 439, 442, 444, 450, 454, 470], "add_index": [83, 86], "add_loc": 361, "add_row": [83, 86], "add_subplot": 349, "addit": [16, 19, 20, 26, 43, 80, 83, 84, 86, 97, 99, 100, 104, 105, 108, 116, 118, 120, 125, 155, 183, 184, 186, 189, 192, 195, 196, 205, 206, 209, 213, 215, 216, 217, 221, 227, 228, 230, 234, 236, 238, 239, 240, 244, 249, 251, 252, 253, 254, 257, 261, 361, 364, 365, 366, 370, 371, 372, 373, 375, 376, 377, 378, 380, 381, 382, 385, 386, 387, 388, 390, 391, 392, 393, 394, 403, 404, 406, 408, 409, 412, 413, 420, 421, 423, 426, 427, 432, 436, 448, 455, 458, 459, 460, 463, 465, 466, 468, 470, 471, 480, 481, 491, 493, 495, 502, 507, 508, 552, 558], "addition": [125, 373, 459, 460, 463, 465, 466], "address": [370, 373, 374, 375, 377, 387, 468, 494], "adequ": 191, "adher": 364, "adjac": [135, 188, 412, 453, 463, 504], "adjust": [16, 65, 183, 184, 186, 192, 195, 196, 370, 372, 384, 435, 451, 459, 466, 467, 479, 495, 502], "admit": 381, "adonath": 367, "adopt": [37, 374, 377, 382, 436, 446, 447, 457], "adsab": [28, 30, 31, 32, 33, 35, 36, 37, 38, 39, 40, 50, 52, 53, 57, 58, 60, 61, 79, 84, 112, 120, 143, 230, 263, 264, 280], "adult": 361, "advanc": [373, 377, 378, 381, 389, 393, 461, 463, 495, 554, 555], "advantag": [369, 375, 378, 385, 412, 463, 468, 531, 555], "advanteg": 373, "advertis": 390, "advic": [361, 387], "advis": [362, 387, 460, 468, 475], "advoc": 361, "aeff": [16, 78, 83, 84, 100, 105, 143, 169, 177, 371, 373, 374, 408, 409, 431, 434, 435, 436, 439, 440, 442, 444, 453, 461, 462, 470, 472, 473, 479, 480, 497, 502, 504, 505, 554], "aeff2d": 142, "aeff_2d": [78, 83, 143, 470, 473], "aeff_3d": 461, "aeff_ev": 461, "aeff_new": 461, "aeff_perc": [169, 431, 434, 435, 444, 453, 462, 472, 504], "aegi": 213, "af": 357, "affect": [361, 369, 373, 375, 386, 403, 404, 415, 424, 468], "affili": [375, 387, 423], "afmhot": [465, 481], "aforement": 387, "after": [16, 45, 50, 51, 52, 53, 80, 86, 95, 97, 99, 100, 104, 118, 153, 156, 280, 302, 320, 342, 345, 361, 364, 366, 369, 370, 372, 374, 375, 376, 377, 379, 380, 381, 383, 384, 385, 386, 387, 388, 390, 391, 392, 397, 401, 408, 410, 411, 412, 414, 420, 422, 423, 424, 432, 442, 451, 453, 460, 463, 465, 470, 472, 473, 495, 555, 559], "ag": [20, 43, 44, 45, 50, 51, 52, 53, 54, 294, 361, 485], "again": [97, 100, 104, 105, 153, 364, 371, 373, 375, 377, 382, 388, 392, 407, 408, 411, 418, 423, 432, 434, 435, 442, 447, 448, 463, 466, 468, 471, 479, 481, 508, 555], "against": [16, 80, 99, 118, 137, 138, 139, 140, 143, 144, 145, 147, 150, 152, 154, 155, 182, 183, 184, 186, 191, 192, 194, 195, 196, 362, 364, 378, 384, 391, 458, 471, 479, 490, 493], "agent": 377, "agglom": 13, "aggreg": 388, "agil": 374, "agn": [128, 278, 375, 434, 451, 452, 454, 470], "agnost": 460, "ago": 368, "agre": [185, 188, 364, 366, 375, 387], "agreement": [361, 364, 382, 455], "aguasca": [414, 423, 424, 425, 426], "aharonian": 445, "ahead": [375, 401], "ahelp": 200, "aim": [370, 371, 387, 442, 446, 457, 467, 483, 554], "air": 470, "ait": [182, 183, 184, 477], "aitoff": 375, "aka": 481, "al": [26, 33, 59, 128, 143, 213, 279, 280, 286, 371, 438, 445, 451, 483, 554], "albert": 554, "albert2007": 554, "alexi": [409, 412], "algorithm": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 59, 83, 86, 112, 127, 158, 200, 273, 361, 367, 373, 374, 375, 380, 388, 404, 409, 417, 418, 419, 438, 451, 460, 472, 493, 507, 553, 557], "alia": [16, 56, 80, 99, 118, 364, 481], "alias": [16, 56, 80, 99, 118, 460], "align": [83, 86, 95, 137, 138, 139, 140, 143, 144, 145, 146, 147, 150, 152, 154, 155, 182, 183, 184, 186, 188, 192, 194, 195, 196, 361, 461, 464, 466], "alisha": 414, "all": [6, 16, 19, 20, 26, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 69, 70, 71, 72, 73, 74, 75, 76, 78, 79, 80, 83, 84, 85, 86, 87, 90, 91, 95, 97, 98, 99, 100, 102, 103, 104, 105, 116, 117, 118, 119, 120, 124, 125, 127, 137, 138, 139, 140, 141, 142, 143, 144, 145, 147, 150, 152, 153, 154, 155, 156, 157, 163, 170, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 200, 201, 202, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 230, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 256, 257, 258, 259, 260, 261, 262, 263, 270, 333, 334, 335, 336, 337, 338, 348, 357, 360, 361, 362, 364, 366, 367, 368, 369, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 391, 392, 393, 394, 396, 401, 402, 403, 404, 405, 406, 407, 408, 409, 412, 414, 415, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 429, 431, 434, 435, 436, 439, 440, 442, 444, 445, 446, 450, 452, 454, 455, 458, 459, 460, 461, 463, 464, 465, 466, 468, 470, 471, 472, 473, 475, 477, 479, 480, 481, 485, 491, 493, 495, 504, 506, 507, 508, 509, 531, 552, 555, 556, 557], "all_quant": [117, 119], "allclos": [137, 138, 139, 140, 143, 144, 145, 147, 150, 152, 154, 155, 183, 184, 185, 186, 188, 192, 193, 195, 196, 336], "alloc": [184, 192, 196], "allow": [16, 26, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 56, 80, 83, 86, 99, 112, 117, 118, 119, 126, 127, 153, 156, 182, 187, 313, 361, 362, 364, 366, 367, 368, 371, 372, 373, 374, 375, 377, 378, 379, 380, 383, 384, 385, 386, 387, 388, 389, 390, 391, 393, 403, 405, 406, 407, 408, 409, 412, 414, 421, 422, 423, 426, 430, 434, 445, 454, 459, 460, 461, 462, 463, 464, 480, 491, 493, 495, 502, 507, 508, 552, 553, 555, 560], "allow_extra": 187, "allow_pickl": [16, 80, 99, 118], "allowed_channel": [26, 457], "allski": [79, 463], "alma": 380, "almeida": 409, "almost": [360, 362, 364, 375, 471, 481], "alon": 366, "along": [66, 96, 117, 119, 123, 135, 137, 138, 139, 140, 143, 144, 145, 147, 150, 151, 152, 154, 155, 183, 184, 186, 192, 194, 195, 196, 278, 279, 280, 301, 302, 312, 322, 323, 370, 371, 385, 423, 426, 439, 448, 458, 459, 461, 462, 465, 466, 492, 507, 508, 524, 554], "alpha": [21, 27, 28, 48, 97, 100, 104, 105, 158, 180, 216, 217, 226, 227, 228, 241, 274, 284, 287, 358, 359, 373, 384, 386, 412, 419, 430, 431, 432, 434, 436, 437, 440, 442, 443, 447, 455, 458, 460, 468, 512, 521, 523, 525, 527, 529, 530, 531, 546, 547, 556, 557, 558], "alpha_": [100, 105], "alpha_1": [100, 105], "alpha_2": [100, 105], "alpha_norm": [213, 384, 521], "alphabet": [378, 387, 402, 403, 404, 405, 406, 407, 408, 409, 412], "alreadi": [15, 16, 26, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 80, 83, 86, 99, 118, 200, 256, 257, 258, 260, 361, 367, 368, 369, 372, 373, 374, 375, 376, 378, 381, 382, 383, 385, 388, 390, 391, 421, 432, 436, 438, 447, 455, 457, 458, 459, 463, 464, 465, 466, 470, 471, 472, 481, 483, 508, 519], "also": [15, 19, 20, 26, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 83, 86, 90, 112, 116, 117, 119, 120, 132, 134, 155, 160, 166, 181, 188, 190, 191, 200, 205, 206, 209, 213, 215, 216, 217, 221, 227, 228, 230, 234, 236, 238, 239, 240, 244, 249, 251, 252, 253, 254, 257, 259, 261, 271, 290, 298, 303, 361, 362, 364, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 381, 382, 383, 384, 385, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 402, 403, 404, 405, 406, 407, 408, 409, 412, 420, 421, 422, 426, 430, 431, 434, 435, 436, 437, 438, 442, 444, 445, 446, 447, 448, 451, 455, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 468, 470, 471, 479, 480, 483, 491, 492, 493, 494, 495, 502, 504, 507, 508, 531, 534, 552, 554, 555, 556, 557, 559], "alt": [79, 81, 84, 89, 90, 361, 559], "alt_pnt": 86, "altaz": [79, 81, 89, 146, 361, 461, 559], "altaz_fram": [79, 89], "altaz_from_t": [79, 89], "altaz_interpol": 89, "altern": [78, 270, 360, 361, 364, 366, 370, 394, 412, 434, 436, 438, 445, 458, 460, 461, 463, 465, 470, 491, 492, 555], "although": [361, 374, 375, 376, 378, 381, 385, 460, 470, 517, 518, 552, 559], "altitud": 431, "alwai": [79, 83, 86, 140, 188, 191, 198, 201, 203, 219, 361, 362, 364, 367, 368, 369, 371, 372, 373, 375, 378, 386, 387, 394, 401, 408, 423, 424, 426, 437, 438, 442, 450, 457, 460, 462, 463, 465, 467, 468, 475, 493, 507, 508], "am": 370, "ambigu": [375, 420], "amend": 364, "among": [78, 83, 86, 97, 100, 104, 105, 377, 381, 382, 384, 389, 409, 460, 554], "amount": [368, 375, 389, 495], "amp": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 247, 548], "ampl_2": [144, 461], "ampl_3": [144, 461], "amplitud": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 48, 49, 66, 96, 120, 125, 127, 183, 184, 186, 195, 196, 205, 212, 215, 217, 221, 228, 231, 238, 239, 240, 247, 249, 252, 253, 254, 264, 270, 282, 372, 373, 376, 384, 431, 432, 434, 435, 436, 437, 438, 439, 442, 443, 444, 445, 446, 447, 450, 451, 452, 453, 454, 455, 458, 459, 460, 465, 466, 470, 471, 479, 480, 481, 493, 511, 512, 513, 514, 516, 517, 518, 519, 521, 522, 523, 525, 526, 528, 529, 531, 532, 533, 534, 536, 537, 538, 539, 542, 543, 544, 545, 546, 547, 548, 549, 550, 557], "amplitude_maximum_signific": 451, "amplitude_maximum_vari": 451, "amplitude_ref": 455, "an": [6, 15, 16, 19, 20, 26, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 47, 50, 64, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 82, 83, 84, 85, 86, 87, 88, 89, 97, 98, 99, 100, 103, 104, 105, 106, 108, 110, 117, 118, 119, 120, 121, 122, 124, 125, 127, 131, 132, 133, 138, 140, 141, 142, 143, 145, 148, 151, 153, 155, 156, 159, 163, 166, 168, 171, 173, 174, 177, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 200, 201, 205, 206, 208, 209, 211, 212, 213, 215, 216, 217, 218, 220, 221, 222, 223, 224, 225, 226, 227, 228, 230, 233, 234, 235, 236, 237, 238, 239, 240, 241, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 256, 257, 259, 260, 261, 266, 273, 278, 280, 288, 290, 294, 308, 319, 323, 339, 345, 351, 352, 354, 357, 360, 362, 364, 366, 367, 368, 369, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 390, 391, 392, 393, 394, 397, 398, 401, 402, 405, 406, 407, 408, 409, 412, 414, 415, 416, 419, 420, 421, 423, 424, 426, 427, 431, 432, 434, 435, 436, 437, 438, 439, 440, 442, 443, 444, 445, 448, 450, 451, 452, 453, 454, 455, 458, 460, 462, 463, 465, 466, 467, 468, 470, 471, 472, 473, 475, 477, 479, 480, 481, 483, 485, 490, 491, 492, 493, 495, 496, 497, 498, 499, 500, 501, 502, 504, 506, 507, 508, 511, 512, 513, 514, 515, 516, 517, 518, 519, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 542, 543, 544, 545, 546, 547, 548, 549, 550, 552, 554, 555, 556, 557, 558], "anaconda": [378, 392, 393], "analog": [83, 86, 183, 184, 186, 192, 195, 196, 508], "analogi": 382, "analys": [78, 360, 361, 370, 371, 372, 373, 375, 379, 381, 383, 384, 389, 397, 398, 404, 405, 406, 408, 409, 419, 421, 424, 434, 435, 442, 453, 454, 457, 458, 464, 466, 470, 471, 479, 480, 483, 491, 555], "analysi": [6, 16, 57, 65, 68, 70, 71, 79, 97, 99, 100, 104, 105, 109, 111, 165, 169, 360, 361, 362, 365, 371, 372, 373, 374, 375, 376, 377, 379, 380, 381, 382, 383, 384, 388, 390, 391, 392, 393, 394, 397, 398, 401, 402, 403, 405, 406, 407, 412, 414, 416, 417, 418, 419, 420, 421, 422, 423, 426, 427, 429, 432, 433, 438, 439, 440, 441, 445, 446, 448, 449, 450, 454, 456, 457, 458, 459, 460, 462, 463, 464, 465, 466, 467, 468, 470, 471, 472, 473, 480, 481, 483, 492, 493, 495, 496, 500, 502, 503, 504, 505, 507, 508, 534, 552, 554, 555, 557], "analysis3d": 422, "analysis_1": [429, 479, 482], "analysis_1d": 452, "analysis_2": [362, 429, 480, 482], "analysis_3d": [421, 429, 442, 449, 452], "analysis_joint": 442, "analysis_mwl": [429, 443, 449], "analysis_stack": 442, "analysisconfig": [15, 362, 435, 439, 440, 442, 452, 479], "analyt": [19, 20, 26, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 143, 144, 152, 154, 205, 206, 209, 213, 215, 216, 217, 221, 227, 228, 230, 234, 236, 238, 239, 240, 244, 249, 251, 252, 253, 254, 257, 261, 374, 379, 427, 461, 466, 493, 514, 558], "analyz": [371, 472, 554], "andrea": 374, "andrew": 421, "angl": [16, 17, 18, 21, 22, 24, 25, 27, 33, 34, 38, 66, 79, 85, 86, 91, 97, 100, 109, 111, 112, 116, 123, 127, 137, 141, 142, 143, 144, 145, 148, 150, 151, 152, 153, 154, 156, 159, 166, 167, 169, 171, 181, 182, 184, 189, 191, 194, 196, 197, 208, 212, 220, 223, 235, 237, 245, 246, 248, 250, 256, 258, 260, 263, 318, 348, 361, 367, 375, 377, 384, 388, 400, 402, 403, 404, 421, 430, 431, 434, 437, 443, 446, 447, 453, 458, 463, 464, 466, 467, 470, 471, 495, 500, 504, 507, 508, 512, 513, 514, 517, 518, 554], "angle_incr": 166, "angular": [23, 97, 100, 109, 111, 122, 141, 142, 148, 153, 156, 159, 184, 191, 194, 196, 212, 220, 223, 258, 294, 297, 361, 377, 425, 436, 447, 455, 500, 501, 554], "angular_extens": 41, "angular_s": 508, "angular_separ": [384, 425, 427, 466], "ani": [16, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 78, 79, 80, 83, 86, 99, 114, 118, 124, 142, 165, 183, 184, 186, 191, 192, 194, 195, 196, 290, 313, 346, 360, 361, 362, 364, 366, 367, 368, 369, 372, 373, 374, 375, 376, 377, 378, 379, 380, 382, 384, 387, 388, 390, 393, 394, 395, 396, 397, 401, 402, 420, 421, 422, 427, 435, 444, 445, 448, 452, 455, 459, 462, 463, 465, 466, 468, 470, 471, 472, 473, 479, 480, 481, 483, 492, 493, 505, 507, 508, 523, 555, 559], "ann": [23, 420], "anna": 361, "annihil": [17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 423, 466, 483], "annoi": [361, 555], "annot": [16, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 80, 99, 118, 350, 388, 460, 512], "announc": [361, 366, 368, 375, 377, 380, 382, 384, 386, 387, 390, 391], "annuli": [448, 508], "annulu": [121, 322, 508], "anonym": 364, "anoth": [19, 20, 26, 79, 82, 83, 86, 97, 100, 104, 105, 141, 142, 143, 148, 153, 155, 156, 185, 188, 205, 206, 207, 208, 209, 210, 211, 212, 213, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 230, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 256, 257, 258, 259, 260, 261, 262, 270, 361, 375, 376, 377, 379, 381, 382, 385, 388, 392, 397, 406, 421, 455, 459, 463, 464, 466, 508, 555], "another_posit": 504, "answer": [460, 495], "anti": [463, 464], "anticip": 370, "anymor": 423, "anyon": [366, 368, 470], "anyth": [140, 377, 555], "anytim": [364, 403], "anywai": [364, 375], "anywher": [375, 378, 380, 491], "ap": [366, 378, 386], "apart": 376, "apertur": 554, "api": [219, 365, 367, 370, 371, 372, 373, 374, 375, 377, 380, 381, 382, 386, 387, 398, 399, 401, 402, 403, 404, 406, 407, 408, 409, 412, 416, 420, 421, 429, 431, 434, 435, 438, 444, 446, 453, 459, 463, 464, 465, 466, 469, 470, 471, 479, 481, 482, 491, 492, 493, 494, 502, 503, 507, 552, 553, 554, 555], "apj": [275, 281], "aplpi": 421, "apologis": [401, 402, 421], "app": [83, 86, 391, 397, 420], "appear": [83, 86, 361, 362, 369, 375, 388, 415, 426, 458], "append": [83, 86, 87, 95, 136, 181, 182, 183, 184, 186, 191, 192, 194, 195, 196, 233, 373, 374, 376, 407, 426, 431, 434, 436, 437, 442, 443, 444, 446, 453, 454, 455, 459, 460, 462, 465, 466, 467, 468, 504], "append_ax": [137, 138, 140, 143, 144, 145, 150, 152, 154, 196, 349], "appendix": [30, 127, 143, 230, 264, 282, 438], "appl": [393, 395, 397], "appli": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 79, 82, 83, 85, 86, 96, 97, 98, 100, 104, 105, 106, 109, 110, 111, 112, 116, 119, 120, 124, 127, 140, 141, 142, 148, 153, 155, 156, 160, 166, 169, 170, 183, 184, 186, 187, 191, 192, 194, 195, 196, 201, 203, 211, 219, 233, 248, 261, 271, 272, 274, 302, 303, 346, 350, 358, 361, 367, 368, 371, 372, 374, 376, 379, 385, 386, 387, 409, 414, 419, 420, 421, 422, 426, 430, 434, 436, 446, 453, 454, 455, 459, 462, 463, 464, 465, 466, 468, 470, 473, 480, 481, 493, 495, 540, 553, 556], "applic": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 66, 83, 86, 361, 372, 387, 389, 408, 451, 460, 507, 554], "apply_async": [310, 311], "apply_edisp": 427, "apply_hysteresis_threshold": 464, "apply_irf": [248, 408], "apply_mask": 189, "apply_psf": [372, 405], "apply_standard_scal": 91, "apply_threshold_sensit": 116, "apply_union": 198, "approach": [83, 86, 127, 361, 367, 369, 373, 377, 382, 385, 386, 388, 426, 430, 434, 462, 475, 554, 557], "appropri": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 79, 83, 86, 182, 183, 184, 186, 195, 196, 290, 298, 362, 436, 440, 442, 463, 555], "approv": [367, 368, 369], "approx": [52, 53], "approxim": [127, 169, 170, 182, 183, 184, 208, 212, 220, 223, 235, 245, 246, 250, 256, 260, 272, 274, 301, 372, 375, 403, 430, 460, 470, 493, 504, 513, 514, 517, 518, 554], "appveyor": 417, "apr": [383, 399], "april": [381, 388, 408], "apt": 394, "ar": [6, 11, 15, 16, 19, 20, 23, 26, 27, 28, 29, 30, 31, 32, 33, 35, 36, 37, 39, 40, 46, 57, 65, 68, 71, 75, 76, 78, 79, 80, 81, 82, 83, 84, 86, 91, 95, 96, 97, 99, 100, 103, 104, 105, 107, 109, 111, 112, 114, 116, 117, 118, 119, 120, 121, 122, 124, 125, 127, 128, 132, 133, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 150, 151, 152, 153, 154, 155, 156, 157, 159, 160, 163, 164, 169, 170, 171, 176, 180, 181, 182, 183, 184, 186, 187, 188, 190, 191, 192, 193, 194, 195, 196, 200, 202, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 230, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 256, 257, 258, 259, 260, 261, 262, 263, 264, 270, 273, 278, 286, 290, 302, 308, 310, 322, 323, 336, 350, 352, 357, 360, 361, 362, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 401, 402, 403, 404, 405, 406, 407, 408, 409, 412, 414, 415, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 430, 431, 432, 435, 436, 437, 438, 439, 440, 442, 443, 444, 445, 446, 447, 448, 450, 451, 452, 453, 454, 455, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 470, 471, 472, 473, 475, 479, 480, 481, 483, 484, 485, 486, 490, 491, 492, 493, 495, 497, 498, 499, 500, 501, 502, 505, 506, 507, 508, 509, 512, 513, 521, 531, 550, 552, 553, 554, 555, 556, 557, 558, 559, 560], "arakelian": 279, "arang": [112, 376, 438, 453], "arb": 468, "arbitrari": [189, 191, 192, 372, 384, 407, 420, 446, 459, 463, 468, 507, 508], "arbitrary_types_allow": [16, 80, 99, 118, 388], "arbitrarytypemetadata": 388, "architectur": [393, 395], "archiv": [387, 473, 480], "arcsec": 166, "arctan": 375, "area": [78, 84, 100, 102, 142, 143, 158, 169, 170, 177, 184, 192, 194, 196, 361, 362, 372, 416, 418, 430, 434, 446, 455, 462, 472, 473, 500, 507, 508, 554], "areasc": [419, 421], "aren": [337, 361, 375, 380, 381, 392, 393, 395], "arf": [101, 102, 105, 187, 188, 191, 192, 434, 508], "arf_ob": 101, "arffil": 101, "arg": [11, 16, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 53, 80, 83, 86, 99, 104, 105, 118, 137, 138, 139, 143, 144, 145, 147, 150, 151, 152, 154, 155, 184, 185, 192, 206, 219, 231, 238, 239, 240, 313, 555], "arg_in_kwarg": 361, "argmax": 451, "argmin": 451, "argpars": [366, 555], "argsort": [83, 86], "argument": [11, 16, 19, 20, 23, 26, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 66, 79, 80, 82, 83, 84, 86, 87, 88, 95, 96, 97, 99, 100, 103, 104, 105, 118, 119, 120, 122, 124, 136, 137, 138, 139, 140, 143, 144, 145, 147, 150, 151, 152, 153, 154, 155, 156, 159, 169, 181, 182, 183, 184, 186, 187, 188, 190, 191, 192, 193, 194, 195, 196, 199, 200, 205, 206, 207, 208, 209, 210, 211, 212, 213, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 230, 233, 234, 235, 236, 237, 238, 239, 240, 241, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 256, 257, 258, 259, 260, 261, 262, 265, 271, 288, 290, 302, 308, 310, 311, 348, 349, 350, 354, 355, 356, 357, 358, 364, 367, 373, 376, 408, 409, 412, 414, 420, 426, 427, 438, 442, 447, 460, 462, 463, 466, 467, 480, 493, 495, 506, 507, 508, 531, 555], "aris": [366, 377], "arithmet": [206, 372, 422, 463, 464, 466, 523], "arjun": [419, 420], "arm": [33, 34, 38, 45, 416], "arm64": [393, 395], "armstrong": 420, "arnau": [414, 423, 424, 425, 426], "around": [56, 132, 159, 182, 184, 194, 196, 302, 375, 376, 436, 455, 457, 460, 464, 472, 481, 495, 504, 507, 508], "arpit": 419, "arr": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40], "arrai": [19, 20, 28, 29, 30, 31, 32, 33, 35, 36, 37, 38, 39, 40, 78, 79, 81, 83, 86, 87, 89, 94, 95, 96, 97, 104, 105, 112, 117, 119, 120, 121, 124, 125, 127, 132, 133, 137, 138, 139, 140, 143, 144, 145, 147, 150, 151, 152, 153, 154, 155, 156, 181, 182, 183, 184, 185, 186, 187, 188, 189, 191, 192, 193, 194, 195, 196, 199, 201, 205, 208, 209, 210, 211, 212, 213, 215, 216, 217, 218, 220, 221, 222, 223, 224, 225, 226, 227, 228, 230, 233, 235, 236, 237, 238, 239, 240, 241, 244, 245, 246, 247, 248, 249, 252, 253, 254, 258, 259, 260, 261, 262, 271, 272, 274, 276, 286, 290, 301, 302, 303, 317, 318, 319, 323, 354, 355, 360, 361, 374, 375, 379, 385, 388, 397, 407, 420, 423, 425, 427, 437, 446, 447, 455, 458, 459, 460, 461, 463, 465, 466, 468, 470, 472, 473, 481, 507, 508, 515, 540, 543, 556, 557], "array_lik": [97, 104, 137, 138, 139, 140, 143, 144, 145, 147, 150, 152, 154, 155, 181, 182, 183, 184, 186, 191, 192, 194, 195, 196, 275, 281, 287], "array_shap": [425, 427], "arriba": [413, 416, 417], "arriv": [210, 218, 222, 224, 225, 226, 241, 247, 259, 262, 366, 374, 406, 407, 408, 446, 554, 558], "arrow": 553, "arrowprop": 512, "arrowstyl": 512, "artefact": [19, 20, 26, 205, 206, 209, 213, 215, 216, 217, 221, 227, 228, 230, 234, 236, 238, 239, 240, 244, 249, 251, 252, 253, 254, 257, 261], "arthmet": 372, "articl": [128, 134, 279, 286, 366, 431, 453], "artifact": [116, 184], "artifici": 446, "artist": [191, 211, 233, 512, 513], "arxiv": [63, 169, 239, 240, 253, 254, 443, 457, 458, 462, 538, 539], "as_arrai": [83, 86], "as_artist": [191, 192, 466, 508, 512, 513], "as_energy_tru": [181, 182, 191, 194], "as_plot_cent": [185, 188, 193], "as_plot_edg": [185, 188, 193], "as_plot_label": [185, 188, 193], "as_plot_scal": 188, "as_plot_xerr": [185, 188, 193], "asanyarrai": 361, "ascii": [83, 86, 119, 361], "asimov": 468, "asinh": 438, "asinha": 78, "ask": [362, 364, 366, 368, 375, 377, 378, 381, 387, 396, 452, 481, 495, 496, 555], "asmooth": [112, 113, 380, 407, 418, 421], "asmoothestim": 382, "asmoothmapestim": [113, 382, 407, 409, 412, 438, 495], "aspect": [364, 387, 496, 555, 560], "assert": [185, 187, 188, 193, 336, 337, 338, 364, 372, 384, 463], "assert_allclos": 361, "assert_equ": 361, "assert_nam": [185, 187, 188, 193], "assert_quantity_allclos": [361, 416], "assess": [434, 436, 451], "assign": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 97, 98, 103, 104, 182, 248, 258, 357, 361, 370, 373, 376, 388, 390, 431, 450, 452, 459, 463, 466, 468, 480, 481, 507], "assist": 377, "asso": [69, 71, 72, 74], "assoc": 69, "assoc1": [71, 72, 74, 458, 481], "assoc2": [71, 72, 74, 481], "assoc_fgl": 74, "assoc_fhl": 74, "assoc_gam": 72, "assoc_gam1": [71, 74], "assoc_gam2": [71, 74], "assoc_gam3": [71, 74], "assoc_prob_bai": 458, "assoc_prob_lr": 458, "assoc_tev": [71, 72, 74], "associ": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 65, 76, 83, 86, 95, 97, 100, 117, 126, 128, 129, 130, 141, 142, 153, 156, 173, 174, 179, 192, 259, 290, 367, 377, 385, 386, 387, 388, 389, 426, 427, 431, 432, 434, 438, 443, 458, 459, 462, 463, 465, 466, 472, 481, 492, 493, 495, 508, 557], "association_catalog": [65, 458], "association_nam": [65, 458], "assum": [23, 50, 51, 52, 53, 65, 78, 79, 81, 90, 116, 117, 119, 127, 131, 134, 143, 155, 166, 180, 182, 183, 184, 186, 189, 193, 195, 196, 200, 254, 260, 263, 270, 317, 320, 361, 364, 373, 374, 376, 384, 385, 389, 397, 398, 430, 431, 434, 436, 437, 440, 446, 447, 448, 450, 453, 457, 461, 463, 466, 468, 471, 485, 491, 493, 500, 552, 557], "assumpt": [70, 90, 97, 100, 104, 105, 112, 126, 134, 375, 385, 500, 504, 556], "astri": 92, "astrisim": 374, "astro": [6, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 120, 176, 183, 184, 186, 195, 196, 243, 261, 361, 362, 373, 380, 381, 385, 390, 404, 413, 417, 421, 423, 427, 436, 457, 461, 463, 470, 484, 485, 487, 488, 489, 492, 554], "astro_dark_matt": [381, 429, 457, 469], "astromodel": 483, "astronom": [13, 375, 382, 420, 554], "astronomi": [11, 264, 360, 371, 375, 379, 391, 398, 419, 431, 434, 440, 444, 462, 470, 495, 504, 505, 552, 553, 554, 555, 556, 557, 559, 560], "astrophys": [6, 23, 294, 376, 495, 553, 554], "astropi": [13, 16, 19, 20, 26, 27, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 52, 64, 79, 81, 82, 83, 84, 85, 86, 87, 89, 91, 97, 100, 104, 105, 109, 111, 112, 117, 119, 121, 123, 124, 127, 132, 133, 140, 142, 151, 153, 166, 180, 183, 184, 186, 189, 191, 192, 193, 194, 195, 196, 205, 206, 209, 213, 215, 216, 217, 221, 224, 225, 227, 228, 230, 234, 236, 238, 239, 240, 241, 244, 247, 248, 249, 251, 252, 253, 254, 257, 259, 261, 262, 264, 273, 288, 289, 290, 320, 337, 338, 347, 351, 352, 356, 360, 362, 363, 364, 366, 367, 368, 372, 374, 375, 376, 378, 379, 380, 381, 382, 384, 385, 387, 388, 389, 390, 397, 398, 400, 404, 405, 406, 407, 411, 413, 414, 416, 417, 418, 419, 420, 421, 422, 423, 425, 427, 430, 431, 432, 434, 435, 436, 437, 438, 439, 440, 442, 443, 444, 445, 446, 447, 448, 450, 451, 452, 453, 454, 455, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 470, 471, 472, 473, 475, 479, 480, 481, 485, 487, 488, 489, 491, 492, 493, 495, 497, 499, 502, 504, 505, 506, 507, 508, 512, 513, 514, 515, 516, 519, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 542, 543, 544, 545, 546, 547, 548, 549, 550, 556, 559], "astropy_healpix": 370, "astropy_help": [361, 402, 403, 404], "astropy_introduct": 403, "astropy_timeseri": 376, "astropy_vers": 361, "astropydeprecationwarn": 446, "astyp": [83, 86], "asymmetr": [116, 120, 121, 124, 125, 127, 379, 402, 408, 427, 468, 479, 493, 513], "asymmetri": 461, "asymptot": [557, 558], "atmospher": [376, 393, 398, 470], "atnf": 420, "atol": [82, 95, 124, 188, 193, 336, 338, 361], "atol_ax": [137, 138, 139, 140, 143, 144, 145, 147, 150, 152, 154, 155, 182, 183, 184, 186, 191, 192, 194, 195, 196], "atom": 377, "atproduction_gamma": 26, "atreye": [373, 376, 401, 402, 403, 404, 405, 406, 407, 408, 409, 411, 412, 414, 415, 420, 421, 422, 423, 424, 425, 426, 427], "attach": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 81, 89, 211, 219, 233, 248, 258, 372, 382, 425, 454, 460, 465, 466, 555], "attempt": [16, 80, 99, 118, 364, 375, 378], "attr": 361, "attract": 381, "attribut": [15, 16, 17, 18, 19, 20, 21, 22, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 35, 36, 37, 38, 39, 40, 52, 53, 54, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 94, 95, 96, 97, 99, 100, 101, 102, 104, 105, 112, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 150, 151, 152, 153, 154, 155, 156, 158, 159, 160, 162, 163, 164, 165, 168, 169, 170, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 199, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 230, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 256, 257, 258, 259, 260, 261, 262, 272, 274, 290, 371, 373, 383, 388, 389, 402, 403, 406, 407, 408, 409, 412, 414, 416, 418, 420, 425, 426, 427, 432, 436, 446, 460, 462, 463, 464, 466, 481, 491, 507, 508, 557], "attributeerror": 361, "attrribut": 463, "aug": [374, 377, 378, 380, 399], "august": [368, 374, 377, 380, 444], "author": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 364, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 388, 389, 390], "authoris": 387, "authorship": 365, "auto": [183, 184, 186, 195, 196, 362, 364, 372, 381, 407, 421, 460, 555], "autodiff": 379, "autogener": 381, "autograd": [372, 379], "autom": [11, 369, 377, 387, 390, 391, 414, 460, 555], "automat": [16, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 79, 80, 99, 107, 118, 120, 124, 153, 156, 208, 212, 220, 223, 235, 245, 246, 250, 256, 260, 360, 361, 362, 364, 368, 369, 371, 372, 378, 381, 383, 387, 390, 401, 402, 408, 436, 444, 446, 460, 463, 555, 559], "automatis": 494, "autopep8": 361, "autoscal": [201, 202, 203, 204], "avail": [11, 13, 26, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 57, 65, 68, 70, 74, 79, 83, 84, 86, 96, 97, 100, 104, 105, 116, 117, 119, 120, 124, 125, 127, 136, 157, 163, 169, 170, 200, 201, 203, 207, 208, 212, 213, 220, 223, 235, 237, 245, 246, 250, 256, 258, 260, 264, 314, 349, 361, 364, 367, 368, 369, 370, 372, 373, 374, 375, 378, 379, 381, 388, 391, 392, 393, 394, 395, 396, 402, 406, 407, 408, 412, 415, 419, 421, 423, 426, 434, 435, 438, 460, 462, 464, 466, 470, 471, 475, 479, 481, 483, 485, 486, 492, 494, 495, 497, 498, 499, 501, 509, 521, 553, 555, 557], "available_hdu": 84, "available_irf": 84, "available_method": [160, 169], "available_quant": [117, 119], "available_select": [163, 170], "averag": [19, 97, 100, 104, 105, 163, 170, 173, 174, 176, 177, 412, 431, 434, 491, 554], "averageaz": [446, 447], "avoid": [19, 20, 26, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 83, 86, 116, 163, 205, 206, 209, 213, 215, 216, 217, 221, 227, 228, 230, 234, 236, 238, 239, 240, 244, 249, 251, 252, 253, 254, 257, 261, 361, 362, 367, 368, 369, 371, 375, 379, 380, 383, 384, 386, 387, 389, 412, 414, 423, 425, 426, 464, 468, 492, 504, 555], "awai": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 272, 274], "awar": [361, 366, 373, 381, 387], "ax": [16, 19, 20, 26, 64, 65, 79, 96, 97, 100, 104, 105, 106, 107, 108, 110, 116, 117, 119, 121, 122, 127, 137, 138, 139, 140, 141, 142, 143, 144, 145, 147, 148, 150, 151, 152, 153, 154, 155, 156, 163, 170, 173, 174, 179, 181, 182, 183, 184, 185, 186, 187, 188, 189, 191, 192, 193, 194, 195, 196, 199, 205, 206, 207, 208, 209, 210, 211, 212, 213, 215, 216, 217, 218, 220, 221, 222, 223, 224, 225, 226, 227, 228, 230, 233, 234, 235, 236, 237, 238, 239, 240, 241, 244, 245, 246, 247, 249, 250, 251, 252, 253, 254, 256, 257, 259, 260, 261, 262, 272, 274, 348, 349, 353, 354, 355, 356, 357, 358, 361, 370, 380, 403, 407, 412, 418, 419, 420, 423, 426, 430, 431, 432, 434, 435, 436, 437, 438, 439, 440, 442, 443, 444, 445, 446, 447, 448, 450, 451, 452, 453, 454, 455, 457, 458, 459, 460, 461, 462, 464, 465, 466, 467, 468, 470, 471, 472, 479, 480, 481, 491, 493, 495, 497, 502, 504, 505, 506, 507, 512, 513, 514, 518, 521, 549, 550, 554], "ax1": [430, 438, 440, 444, 455, 464, 465], "ax2": [430, 438, 440, 444, 455, 464, 465], "ax3": [438, 444], "ax_crab_3fhl": 481, "ax_ebl": 521, "ax_excess": [431, 434], "ax_model": 521, "ax_residu": [96, 104, 105, 431, 434, 435, 436, 455, 479], "ax_s": [435, 479], "ax_spati": [97, 100, 104, 105], "ax_spectr": [97, 100, 104, 105], "ax_spectrum": [96, 104, 105, 431, 434, 435, 436, 455], "ax_sqrt_t": [431, 434], "axcols1": 463, "axcols2": 463, "axel": [370, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427], "axes0": [183, 184, 186, 192, 195, 196], "axes_loc": [137, 138, 140, 143, 144, 145, 150, 152, 154, 196, 349], "axes_nam": [182, 183, 184, 186, 191, 192, 194, 195, 196], "axesimag": [349, 350], "axesn": [183, 184, 186, 192, 195, 196], "axi": [19, 20, 26, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 41, 79, 95, 96, 97, 100, 104, 105, 106, 107, 108, 110, 112, 116, 117, 119, 120, 121, 123, 124, 127, 128, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 147, 148, 150, 151, 152, 153, 154, 155, 156, 177, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 191, 192, 193, 194, 195, 196, 199, 205, 206, 209, 210, 211, 212, 213, 215, 216, 217, 218, 221, 222, 224, 225, 226, 227, 228, 230, 233, 234, 236, 238, 239, 240, 241, 244, 247, 249, 251, 252, 253, 254, 257, 258, 259, 261, 262, 268, 272, 273, 274, 278, 279, 280, 301, 302, 312, 349, 354, 355, 356, 357, 367, 370, 383, 385, 404, 407, 408, 409, 412, 414, 419, 421, 422, 423, 426, 430, 431, 434, 435, 436, 437, 439, 440, 442, 444, 446, 447, 448, 450, 451, 453, 454, 458, 459, 461, 462, 463, 470, 471, 472, 479, 480, 481, 491, 493, 495, 499, 504, 507, 508, 550, 554], "axis0": 507, "axis1": 463, "axis2": 463, "axis_edg": 354, "axis_nam": [96, 97, 100, 104, 105, 117, 119, 128, 135, 137, 138, 139, 140, 141, 142, 143, 144, 145, 147, 148, 150, 152, 153, 154, 155, 156, 181, 182, 183, 184, 186, 187, 189, 191, 192, 194, 195, 196, 448, 452, 453, 454, 459], "axis_new": [119, 135, 451, 453], "axis_origin": 451, "axis_rgb": 356, "axis_tru": 444, "axisymmetr": 427, "axvlin": [437, 457, 467, 468], "axvspan": [192, 455], "az": [79, 81, 84, 89, 90, 361, 559], "azimuth": 471, "azur": 408, "b": [16, 19, 20, 26, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 48, 51, 52, 54, 80, 83, 86, 99, 118, 143, 200, 329, 361, 362, 375, 384, 387, 445, 457, 458, 460, 463, 464, 466, 471, 481, 487, 491, 508], "b1509": 458, "b_0": [512, 513], "b_1": [83, 86], "b_mean": 42, "b_psr": 43, "b_stdv": 42, "back": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 67, 83, 86, 184, 302, 364, 371, 372, 375, 381, 434, 435, 437, 463, 466, 479, 555], "backend": [88, 96, 114, 120, 121, 124, 125, 127, 159, 200, 270, 305, 310, 311, 360, 370, 372, 402, 421, 422, 426, 431, 432, 434, 435, 436, 442, 443, 444, 455, 460, 471, 479, 480, 552, 553], "backend_default": [121, 124, 127], "background": [16, 65, 78, 79, 84, 88, 97, 98, 100, 101, 103, 104, 105, 107, 108, 112, 116, 117, 119, 126, 137, 138, 139, 149, 158, 160, 161, 163, 164, 165, 166, 168, 169, 170, 176, 213, 219, 258, 265, 272, 274, 282, 283, 284, 285, 287, 357, 361, 367, 370, 373, 374, 375, 377, 381, 382, 385, 393, 398, 401, 402, 403, 405, 406, 407, 408, 409, 412, 413, 414, 416, 417, 418, 419, 420, 421, 422, 424, 426, 427, 429, 430, 431, 434, 435, 436, 437, 438, 439, 441, 442, 444, 447, 448, 450, 452, 453, 454, 455, 458, 459, 460, 461, 463, 464, 468, 472, 473, 475, 480, 491, 493, 494, 507, 553, 554, 555, 557, 558], "background2d": [138, 139, 149, 408, 415, 423, 425, 427, 498], "background3d": [84, 137, 149, 176, 367, 408, 412, 420, 421, 422, 461, 470, 498], "background_estim": 380, "background_interp_missing_data": 163, "background_map": [258, 372], "background_min": 136, "background_model": [97, 100, 104, 105, 127, 373, 374, 381, 383, 408, 439, 480, 498], "background_oversampl": [163, 170, 462], "background_pad_offset": 163, "background_r": [380, 459], "backgroundconfig": 16, "backgroundestim": [376, 406], "backgroundevalu": 372, "backgroundirf": [137, 138], "backgroundirfmodel": 383, "backgroundmodel": [373, 383, 384, 405, 407, 408, 409, 412], "backgroundtempl": 372, "backport": [368, 386, 390], "backround": 370, "backscal": 192, "backward": [361, 366, 375, 384, 385, 386, 404, 493], "bad": [82, 361, 375], "badli": 391, "balanc": 491, "band": [19, 20, 26, 66, 79, 85, 114, 117, 119, 122, 141, 142, 145, 148, 153, 156, 181, 182, 183, 184, 186, 187, 190, 191, 192, 194, 195, 196, 205, 206, 209, 213, 215, 216, 217, 221, 227, 228, 230, 234, 236, 238, 239, 240, 244, 249, 251, 252, 253, 254, 257, 261, 367, 379, 380, 384, 385, 393, 401, 432, 434, 435, 443, 444, 445, 455, 457, 458, 466, 471, 473, 490, 491, 493, 553], "bandshdu": 463, "banner": 391, "bar": [15, 78, 83, 86, 97, 100, 104, 105, 112, 124, 127, 137, 138, 196, 200, 221, 280, 311, 355, 378, 412, 415, 416, 422, 427, 455, 468, 495, 528], "bar_radiu": 38, "base": [15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 50, 51, 52, 53, 54, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 112, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 150, 151, 152, 153, 154, 155, 156, 158, 159, 160, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 256, 257, 258, 259, 260, 261, 262, 272, 274, 289, 298, 299, 302, 308, 310, 312, 335, 348, 356, 361, 362, 364, 367, 368, 370, 371, 372, 373, 374, 375, 376, 377, 379, 380, 382, 384, 389, 391, 393, 394, 401, 403, 404, 406, 408, 409, 412, 414, 417, 418, 419, 420, 421, 427, 434, 436, 437, 439, 442, 443, 444, 445, 446, 448, 451, 455, 458, 461, 463, 464, 466, 467, 468, 470, 471, 480, 481, 483, 492, 493, 495, 505, 507, 519, 529, 553, 554, 556, 557], "base_dir": [78, 83, 298, 470, 472, 473, 483], "baselin": [78, 79, 226, 470], "basement": 403, "basemodel": [16, 80, 99, 118, 388], "baseradi": 234, "bash": [393, 395, 555], "basi": [366, 367, 377, 380, 390, 414, 416, 455, 457], "basic": [45, 46, 65, 69, 70, 71, 72, 73, 74, 75, 76, 100, 105, 119, 225, 364, 367, 371, 372, 373, 374, 375, 377, 381, 385, 388, 397, 409, 419, 421, 429, 431, 434, 436, 449, 451, 452, 457, 458, 464, 475, 481, 483, 485, 486, 491, 492, 493, 503, 504, 507, 552, 554, 555], "basicconfig": [16, 444, 477], "bayesian": 379, "bayesian_block": 451, "bayesian_edg": 451, "baysian": 370, "bb": [83, 86, 387], "bbar": [19, 20], "bbox_with_unit": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40], "bcf": [138, 142, 143, 144, 153, 430, 437, 450, 454, 461, 470], "becam": 368, "becaus": [16, 80, 99, 118, 183, 184, 186, 190, 192, 195, 196, 361, 362, 364, 366, 368, 372, 373, 375, 376, 380, 384, 385, 388, 391, 412, 414, 431, 432, 435, 448, 453, 455, 462, 463, 464, 465, 470, 471, 472, 479, 480, 481, 491, 495, 555, 558], "becom": [361, 369, 371, 372, 375, 380, 388, 446, 453, 466, 495, 555, 558], "been": [16, 19, 20, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 80, 95, 99, 116, 118, 155, 201, 205, 208, 209, 212, 213, 215, 216, 217, 218, 220, 221, 222, 223, 224, 225, 226, 227, 228, 230, 237, 238, 239, 240, 241, 244, 245, 246, 247, 249, 252, 253, 254, 259, 260, 290, 366, 367, 368, 369, 370, 372, 375, 376, 377, 378, 379, 380, 382, 383, 384, 385, 386, 388, 389, 392, 394, 408, 409, 412, 414, 415, 421, 422, 423, 424, 425, 426, 427, 435, 445, 453, 454, 455, 463, 466, 467, 470, 472, 479, 492, 540, 559], "befor": [13, 16, 17, 18, 19, 20, 21, 22, 24, 25, 27, 52, 53, 80, 83, 86, 87, 95, 99, 117, 118, 183, 184, 201, 205, 208, 209, 212, 213, 215, 216, 217, 218, 220, 221, 222, 223, 224, 225, 226, 227, 228, 230, 233, 237, 238, 239, 240, 241, 244, 245, 246, 247, 249, 252, 253, 254, 259, 260, 302, 356, 361, 362, 364, 366, 368, 369, 370, 371, 375, 376, 377, 379, 380, 386, 390, 391, 397, 415, 421, 435, 437, 452, 453, 460, 463, 466, 472, 475, 479, 531, 555], "begin": [52, 83, 86, 97, 104, 117, 119, 127, 381, 384, 387, 434, 436, 463, 466, 512, 517, 518, 522, 538, 557], "behav": [361, 371, 426, 439, 558], "behavior": [16, 80, 83, 86, 90, 99, 118, 385, 411, 415, 426, 472], "behaviour": [336, 361, 383, 384, 409, 414, 420, 427, 453, 464, 471, 491, 556], "being": [116, 126, 184, 361, 366, 369, 375, 382, 385, 391, 436, 445, 451, 464, 468, 484, 508, 555], "belief": 468, "believ": [396, 468], "belong": [82, 385, 408], "below": [52, 53, 83, 86, 182, 186, 193, 194, 350, 351, 352, 356, 358, 362, 364, 365, 370, 371, 375, 377, 378, 381, 384, 385, 387, 388, 389, 391, 392, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 414, 415, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 430, 434, 438, 455, 458, 460, 462, 464, 466, 467, 468, 470, 471, 492, 495, 513, 557], "benchmark": [377, 387, 391], "benefit": 378, "benn": 377, "berg": 554, "berge2007": [375, 504, 505, 554], "bernet": 427, "besancon": 485, "besid": [116, 127, 375, 376, 385, 435, 436, 463, 471, 479, 480, 508], "best": [65, 69, 71, 72, 74, 76, 96, 117, 119, 120, 121, 124, 125, 132, 270, 272, 274, 354, 361, 364, 371, 374, 379, 387, 393, 395, 432, 434, 435, 436, 439, 442, 445, 455, 458, 460, 468, 479, 493, 495, 497, 521, 527, 530, 531, 535, 557, 558, 559], "best_fit_model": 436, "beta": [27, 28, 48, 226, 227, 228, 249, 384, 386, 408, 432, 436, 443, 458, 460, 523, 529, 530, 531, 536, 546], "better": [361, 364, 366, 367, 368, 369, 370, 374, 375, 380, 381, 382, 385, 402, 419, 420, 442, 443, 446, 455, 460, 463, 464, 471, 491], "between": [19, 20, 26, 65, 83, 84, 86, 89, 100, 105, 114, 121, 122, 124, 132, 133, 144, 150, 152, 153, 154, 156, 166, 180, 182, 183, 184, 185, 186, 188, 191, 192, 193, 194, 195, 196, 205, 206, 209, 210, 213, 215, 216, 217, 218, 221, 222, 224, 225, 226, 227, 228, 230, 234, 236, 238, 239, 240, 241, 244, 247, 249, 251, 252, 253, 254, 257, 259, 261, 262, 264, 270, 287, 320, 351, 352, 359, 361, 362, 369, 371, 372, 373, 374, 375, 377, 378, 380, 381, 382, 385, 386, 388, 389, 399, 409, 412, 415, 426, 430, 436, 438, 443, 445, 448, 451, 454, 455, 460, 462, 463, 464, 465, 468, 471, 472, 481, 491, 493, 500, 501, 504, 513, 514, 554, 557, 559], "bewar": [259, 431, 453], "bexcub": 187, "bexpcub": [182, 183, 184, 186, 195, 196, 463], "beyond": [187, 375, 385, 388, 408, 462, 483], "bfg": 460, "bgstat": 418, "bi": [419, 422], "bia": [91, 140, 141, 145, 169, 420, 426, 462, 468, 499], "bias": [436, 556], "bias_energi": 140, "bias_perc": 169, "bibliographi": 554, "biederbeck": [389, 427], "big": [368, 371, 378, 390, 422, 471, 556, 558], "bigger": 184, "biggest": 380, "billion": 361, "bimod": 31, "bin": [19, 20, 26, 79, 82, 84, 97, 100, 103, 104, 105, 107, 112, 114, 116, 117, 119, 120, 122, 123, 124, 126, 127, 128, 129, 130, 134, 135, 136, 140, 141, 143, 145, 151, 153, 155, 156, 163, 165, 166, 167, 169, 171, 180, 181, 182, 183, 184, 185, 186, 187, 188, 191, 192, 193, 194, 195, 196, 205, 206, 208, 209, 210, 211, 212, 213, 215, 216, 217, 218, 220, 221, 222, 223, 224, 225, 226, 227, 228, 230, 233, 234, 235, 236, 237, 238, 239, 240, 241, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 256, 257, 258, 259, 260, 261, 262, 266, 275, 281, 287, 354, 356, 359, 367, 372, 373, 374, 375, 377, 380, 381, 385, 392, 393, 403, 404, 406, 407, 409, 411, 412, 414, 417, 418, 419, 420, 421, 426, 427, 431, 434, 435, 436, 437, 438, 439, 440, 442, 443, 444, 446, 447, 448, 450, 451, 452, 453, 454, 455, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 468, 470, 471, 472, 473, 479, 480, 481, 491, 493, 495, 499, 503, 553, 554, 555, 556, 558], "bin_cent": 455, "bin_edg": 455, "bin_volum": [187, 191, 194, 508], "bin_width": [185, 188, 193, 455], "binari": [194, 196, 369, 375, 378, 387, 391, 412], "binary_dil": [196, 464], "binary_erod": [196, 464], "binary_eros": [196, 412], "binary_structur": 194, "bind": 364, "binder": [369, 390, 420, 423, 430, 431, 432, 434, 435, 436, 437, 438, 439, 440, 442, 443, 444, 445, 446, 447, 448, 450, 451, 452, 453, 454, 455, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 470, 471, 472, 473, 475, 477, 479, 480, 481, 511, 512, 513, 514, 515, 516, 517, 518, 519, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 542, 543, 544, 545, 546, 547, 548, 549, 550], "binlik": 119, "binned_likelihood": 120, "binneddataaxi": [403, 419], "binnedtimeseri": [119, 376], "bins_axi": 196, "binsiz": [16, 435, 439, 440, 442, 452, 479, 480], "binsize_irf": [16, 435, 439, 440, 442, 452, 479], "binsz": [97, 100, 104, 105, 106, 110, 142, 151, 153, 163, 166, 167, 171, 182, 183, 184, 186, 191, 192, 194, 195, 196, 377, 434, 444, 445, 446, 447, 450, 455, 457, 459, 461, 462, 463, 464, 466, 471, 472, 480, 502, 504, 505, 507, 508, 511, 513, 514, 515, 516], "binsz_irf": [97, 100, 104, 105, 108, 459, 462, 495], "binsz_irf_default": [97, 100, 104, 105, 462], "binsz_wc": [191, 192], "bintabl": [182, 183, 184, 186, 195, 196], "bintablehdu": [79, 82, 137, 138, 139, 140, 143, 144, 145, 147, 150, 152, 154, 155, 182, 183, 184, 187, 188, 194, 195, 196, 446, 463, 491], "birth": [29, 30, 36, 50, 51, 52, 53], "bit": [79, 132, 362, 364, 368, 369, 375, 379, 380, 388, 455, 463, 508], "bitpix": 463, "bkg": [16, 78, 83, 84, 97, 101, 102, 104, 105, 137, 138, 139, 169, 176, 219, 383, 407, 409, 414, 430, 434, 435, 439, 440, 442, 443, 446, 447, 450, 455, 459, 461, 462, 465, 470, 472, 473, 479, 480, 491, 498, 554, 556, 557, 558], "bkg_": [97, 104], "bkg_2d": [83, 137], "bkg_3d": [78, 83, 138, 470, 473], "bkg_err": 455, "bkg_maker": [383, 431, 434, 436, 444, 453, 504], "bkg_model": [373, 383, 389, 442, 446, 447, 450, 465, 480, 515], "bkg_ob": 101, "bkg_sy": 126, "bkg_syst_fract": [126, 430], "bkg_syst_fraction_sensit": 116, "bkgfile": 101, "black": [104, 105, 350, 351, 358, 379, 421, 423, 430, 455, 457, 462, 467, 504], "blackground": 430, "blanch": [420, 421], "blanklin": [225, 397, 493, 508], "blazar": 286, "blind": [423, 495], "bll": 481, "blob": 400, "block": [362, 364, 367, 374, 381, 391, 400, 420], "block_reduc": 421, "blue": [96, 97, 100, 104, 105, 351, 434, 440, 442, 445, 467, 504], "blur": 33, "board": [370, 381], "bodi": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40], "boilerpl": 361, "boller": 451, "boni": [412, 415], "bool": [15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 45, 76, 78, 79, 80, 82, 83, 84, 86, 88, 91, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 108, 109, 111, 116, 117, 118, 119, 120, 124, 125, 127, 131, 137, 138, 139, 140, 141, 142, 143, 144, 145, 147, 148, 150, 151, 152, 153, 154, 155, 156, 159, 163, 170, 173, 174, 176, 177, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 198, 200, 201, 202, 203, 204, 205, 208, 209, 211, 212, 213, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 230, 233, 237, 238, 239, 240, 241, 244, 245, 246, 247, 248, 249, 252, 253, 254, 256, 257, 258, 259, 260, 287, 290, 299, 302, 320, 328, 330, 332, 358, 361, 375, 444, 458, 462, 463], "boolean": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 79, 83, 86, 117, 120, 121, 124, 125, 182, 183, 184, 186, 189, 191, 192, 194, 195, 196, 200, 211, 233, 248, 377, 409, 442, 458, 463, 464, 465], "boost": 446, "bootstrap": [83, 86], "border": 86, "bose": 403, "bot": 367, "both": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 57, 68, 78, 79, 82, 83, 84, 86, 95, 96, 97, 100, 101, 102, 104, 105, 117, 119, 140, 141, 142, 148, 153, 156, 180, 183, 184, 186, 188, 190, 191, 192, 194, 195, 196, 201, 203, 361, 366, 367, 372, 373, 374, 375, 376, 381, 386, 390, 402, 406, 408, 409, 412, 415, 435, 436, 446, 450, 459, 463, 464, 465, 467, 468, 492, 493, 495, 507, 508, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 542, 543, 544, 545, 546, 547, 548, 557], "bother": 439, "bottom": [381, 383, 446, 452, 454, 458], "bound": [17, 18, 19, 20, 21, 22, 24, 25, 26, 27, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 95, 97, 100, 104, 105, 117, 119, 120, 121, 124, 188, 191, 193, 200, 205, 206, 209, 210, 211, 213, 215, 216, 217, 218, 221, 222, 224, 225, 226, 227, 228, 230, 233, 234, 236, 238, 239, 240, 241, 244, 247, 249, 251, 252, 253, 254, 257, 258, 259, 261, 262, 285, 370, 463, 468], "boundari": [194, 260, 389, 417, 460, 466, 507], "boundary_mask": [194, 464], "bounding_box": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40], "bounds_error": [137, 138, 139, 140, 143, 144, 145, 147, 150, 152, 154, 155, 361, 461], "box": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 86, 97, 100, 121, 122, 191, 194, 196, 322, 323, 370, 375, 379, 385, 419, 464, 466, 508], "bpl": [205, 384, 466], "bpwl_norm": 384, "bracket": [140, 200, 424, 426], "brake": 51, "branch": [361, 364, 368, 375, 386, 391, 400], "branchnam": 361, "bratio": 483, "break": [205, 249, 367, 375, 377, 386, 406, 407, 408, 522, 536], "brent": 438, "brentq": [19, 20, 26, 119, 200, 205, 206, 209, 213, 215, 216, 217, 221, 227, 228, 230, 234, 236, 238, 239, 240, 244, 249, 251, 252, 253, 254, 257, 261, 271], "breviti": [442, 495], "brief": 559, "briefli": [472, 473], "bright": [66, 121, 248, 263, 440, 452, 453, 464, 466, 489, 504], "brighter": 446, "brightest": 458, "brigitta": [378, 402, 404, 406, 408, 417, 418, 419, 420, 421, 422, 423], "bring": 366, "broadcast": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 83, 86, 183, 184, 186, 189, 192, 195, 196, 248, 302, 447, 461, 463, 507], "broadcasted_shap": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40], "broken": [205, 249, 387, 429, 509, 541], "brokenpowerlaw": 384, "brokenpowerlawspectralmodel": [243, 249, 384, 409, 466, 522], "brown": [128, 451], "brown2013": 128, "brows": [83, 86, 362, 397, 481], "browser": [83, 86, 364, 391, 397, 417, 420, 430, 431, 432, 434, 435, 436, 437, 438, 439, 440, 442, 443, 444, 445, 446, 447, 448, 450, 451, 452, 453, 454, 455, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 470, 471, 472, 473, 477, 479, 480, 481, 511, 512, 513, 514, 515, 516, 517, 518, 519, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 542, 543, 544, 545, 546, 547, 548, 549, 550], "bruno": [387, 404, 406, 409, 412, 415, 419, 420, 421, 423, 424, 425, 426, 427], "br\u00fcgge": [420, 421], "bsd": 387, "bst": [83, 86], "buchner": 412, "budget": 495, "buffer": 339, "bug": [361, 364, 367, 368, 386, 387, 390, 399, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 415, 417, 418, 419, 420, 421, 422, 424, 425], "bugfix": [368, 370, 386, 419, 420], "build": [16, 80, 99, 118, 182, 213, 361, 367, 368, 369, 374, 375, 377, 381, 385, 386, 387, 388, 390, 408, 414, 423, 438, 442, 455, 462, 464, 492, 495, 555], "build_doc": [326, 362, 364, 430, 431, 434, 435, 436, 437, 438, 439, 440, 442, 443, 444, 445, 446, 447, 448, 450, 452, 453, 454, 455, 457, 458, 459, 460, 462, 463, 464, 465, 466, 468, 470, 471, 472, 473, 479, 480, 481, 519, 527, 530, 543], "built": [10, 170, 213, 329, 345, 360, 361, 362, 372, 373, 375, 377, 378, 380, 388, 391, 398, 421, 426, 458, 465, 471, 475, 491], "builtin": 481, "bullet": 366, "bump": [375, 419], "bunch": [98, 103, 362, 555], "bundl": [96, 97, 100, 104, 105, 370, 373, 391, 413, 421, 444, 459, 462, 491, 508, 553, 554], "bunit": [347, 421, 463], "bureaucrat": 366, "burkert": [17, 483], "burst": 451, "butterfli": [420, 460, 481], "button": [423, 463], "bx": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40], "by_alia": [16, 80, 99, 118], "byte": [16, 80, 83, 86, 99, 118, 308, 339, 361], "bytearrai": [16, 80, 99, 118, 308], "bytestr": [83, 86], "b\u00fchler": 400, "c": [26, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 48, 83, 86, 189, 199, 215, 252, 275, 281, 290, 329, 360, 361, 378, 393, 394, 396, 413, 420, 455, 457, 460, 468, 471, 483, 507, 526, 537, 555, 556, 558], "c0": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40], "c1": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40], "c_": 199, "c_0": [181, 182, 191, 194], "c_i": [181, 182, 191, 194], "c_n": [181, 182, 191, 194], "cach": [83, 84, 86, 95, 97, 100, 104, 105, 258, 298, 299, 370, 371, 373, 380, 383, 391, 405, 409, 412, 427], "cahil": 414, "cal_gen_92_002": [140, 188], "cal_gen_92_002_summari": 140, "calcul": [13, 15, 19, 20, 26, 91, 100, 105, 128, 129, 130, 169, 205, 206, 209, 213, 215, 216, 217, 221, 227, 228, 230, 234, 236, 238, 244, 249, 251, 252, 253, 254, 257, 260, 261, 277, 279, 280, 287, 289, 312, 343, 351, 352, 371, 374, 402, 408, 412, 413, 414, 420, 425, 427, 430, 451, 455, 457, 468, 479, 480, 483, 495, 554, 558], "caldb": [78, 138, 140, 142, 143, 144, 153, 188, 414, 430, 437, 446, 447, 450, 454, 461, 470], "calendar": [386, 390], "calib_vers": [471, 481], "call": [16, 17, 18, 19, 20, 21, 22, 24, 25, 26, 27, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 79, 80, 82, 83, 86, 96, 97, 99, 100, 104, 105, 118, 128, 129, 130, 137, 138, 139, 140, 143, 144, 145, 147, 150, 152, 154, 155, 165, 181, 182, 191, 194, 200, 205, 206, 207, 208, 209, 212, 213, 215, 216, 217, 220, 221, 223, 227, 228, 230, 234, 235, 236, 237, 238, 239, 240, 244, 245, 246, 248, 249, 250, 251, 252, 253, 254, 256, 257, 260, 261, 302, 314, 333, 339, 347, 350, 358, 361, 362, 364, 366, 367, 370, 373, 374, 375, 376, 377, 379, 381, 383, 385, 387, 389, 391, 393, 397, 408, 412, 426, 434, 435, 444, 458, 459, 460, 462, 463, 466, 471, 473, 479, 480, 481, 491, 495, 504, 505, 506, 507, 508, 555, 556, 557, 558], "callabl": [16, 45, 80, 99, 118, 266], "callback": [159, 555], "caller": [361, 372], "camera": [454, 461, 462], "can": [15, 16, 19, 20, 26, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 46, 47, 50, 56, 65, 66, 67, 78, 79, 80, 83, 86, 88, 97, 99, 100, 103, 104, 105, 108, 112, 117, 118, 119, 124, 125, 127, 132, 138, 143, 151, 153, 156, 160, 166, 169, 181, 182, 183, 184, 186, 188, 189, 191, 192, 193, 194, 195, 196, 198, 200, 202, 204, 205, 206, 208, 209, 211, 212, 213, 215, 216, 217, 220, 221, 223, 225, 227, 228, 230, 233, 234, 235, 236, 238, 239, 240, 244, 245, 246, 249, 250, 251, 252, 253, 254, 256, 257, 260, 261, 271, 273, 278, 290, 302, 303, 308, 311, 320, 337, 339, 354, 358, 360, 361, 362, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 400, 402, 404, 406, 408, 409, 412, 414, 415, 419, 420, 421, 422, 423, 426, 427, 430, 431, 432, 434, 435, 436, 437, 438, 439, 440, 442, 443, 444, 445, 446, 447, 448, 450, 451, 452, 453, 454, 455, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 470, 471, 472, 473, 475, 479, 480, 481, 483, 485, 486, 491, 492, 493, 495, 498, 499, 500, 501, 502, 504, 505, 506, 507, 508, 529, 531, 540, 550, 552, 553, 554, 555, 556, 557, 558], "candel": 213, "candid": [386, 414, 458], "candl": [264, 554], "cannot": [16, 65, 80, 83, 86, 90, 99, 107, 117, 118, 119, 198, 281, 329, 358, 364, 374, 375, 426, 461, 465, 466, 493, 508], "cap": [51, 54], "capabl": [371, 471, 483], "capsiz": 468, "captur": [361, 377], "car": [97, 100, 104, 105, 163, 194, 195, 196, 211, 233, 375, 404, 444, 461, 462, 463, 480, 481], "card": [79, 82, 84, 95, 96, 97, 100, 101, 102, 104, 105, 117, 119, 140, 141, 142, 148, 153, 156, 183, 184, 186, 190, 192, 195, 196, 463], "care": [290, 361, 370, 377, 386, 431, 436, 442, 463, 555], "carefulli": [387, 446, 447, 468], "carina": [33, 38], "carlo": [379, 500], "carri": [376, 384, 386, 388, 412, 432, 480], "carr\u00e9": 194, "cartesian": [41, 46, 184, 195, 196, 293, 295, 425, 481, 507], "case": [15, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 65, 67, 79, 83, 86, 140, 159, 171, 182, 184, 190, 191, 194, 196, 200, 201, 203, 223, 234, 256, 258, 260, 271, 281, 303, 320, 356, 361, 362, 364, 366, 369, 370, 372, 373, 374, 375, 376, 377, 378, 380, 381, 382, 383, 384, 385, 387, 388, 390, 391, 393, 401, 402, 405, 408, 414, 415, 420, 426, 427, 430, 431, 434, 435, 436, 437, 439, 440, 442, 446, 447, 450, 451, 452, 454, 455, 458, 460, 461, 462, 463, 464, 465, 466, 467, 468, 471, 473, 475, 479, 481, 490, 493, 494, 495, 505, 508, 512, 513, 514, 517, 518, 522, 531, 538, 553, 555, 557], "casebattacharya1998": [29, 30, 35, 36, 39, 40, 48], "cash": [97, 100, 104, 105, 163, 276, 281, 361, 373, 412, 437, 439, 442, 450, 454, 459, 462, 465, 468, 479, 480, 491, 554], "cash1979": [554, 557], "cashcountsstatist": [397, 427, 555, 557], "cast": 86, "cat": [64, 65, 75, 369, 391, 419, 420, 432, 458, 466, 490, 554, 555], "catalof": 67, "catalog": [6, 45, 46, 47, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 116, 120, 375, 381, 400, 404, 406, 408, 412, 413, 414, 417, 418, 419, 420, 421, 423, 427, 429, 432, 438, 443, 459, 466, 469, 471, 475, 485, 519, 553, 554], "catalog_3fgl": 432, "catalog_3fhl": [432, 458], "catalog_3fhl_bright": 458, "catalog_4fgl": 458, "catalog_4fgl_roi": 458, "catalog_gammacat": [432, 458], "catalog_hgp": 458, "catalog_registri": [432, 458, 464], "catalogimageestim": 421, "catalogu": [74, 412, 419], "catch_warn": 495, "categori": [361, 372, 385, 412, 464, 466, 509], "caus": [368, 375, 421, 424, 495], "cautious": 445, "caveat": [200, 286, 427, 513], "cax": 461, "cb98": 48, "cbar": 349, "cbar_kw": 355, "cbarlabel": 355, "cc": [370, 375, 377, 380, 382, 384, 387, 389], "ccube": [182, 183, 184, 186, 187, 188, 194, 195, 196, 463], "cd": [361, 362, 364, 377, 393, 394, 395], "cdelt": [194, 196], "cdelt1": 463, "cdelt2": 463, "cdf": [312, 374, 446, 460], "cdot": [51, 52, 53, 54, 97, 104, 238, 252, 384, 466, 491, 512, 517, 518, 522, 525, 526, 533, 534, 536, 537, 538, 539, 544, 545, 546, 548, 556], "celesti": [463, 507, 512, 516, 559], "celfix": 519, "cell": [369, 397, 423, 443, 455, 463, 470, 471, 481], "center": [17, 18, 21, 22, 23, 24, 25, 27, 41, 79, 83, 86, 91, 97, 100, 104, 105, 117, 119, 121, 122, 123, 127, 140, 141, 142, 143, 144, 145, 148, 152, 153, 154, 156, 163, 166, 167, 169, 170, 171, 173, 174, 176, 177, 182, 183, 184, 185, 186, 187, 188, 191, 192, 193, 194, 195, 196, 197, 207, 208, 211, 212, 220, 223, 233, 235, 237, 245, 246, 248, 250, 256, 258, 260, 292, 296, 322, 361, 362, 375, 377, 384, 385, 402, 403, 412, 414, 427, 430, 431, 434, 436, 437, 438, 439, 440, 442, 444, 446, 447, 448, 453, 454, 455, 457, 461, 462, 463, 464, 465, 466, 470, 471, 480, 481, 497, 498, 499, 500, 501, 502, 504, 505, 507, 508, 512, 513, 516], "center_coord": [181, 182, 187, 191, 194], "center_pix": [181, 182, 191, 194], "center_ski": 508, "center_skydir": [181, 182, 191, 194, 462, 463, 471, 472, 502, 504, 505], "centr": [457, 464, 483], "central": [373, 382, 432, 481], "cern": 483, "certain": [50, 79, 83, 86, 200, 278, 360, 375, 377, 379, 385, 430, 457, 462, 463, 471, 490, 508], "certainli": 364, "certif": 387, "certifi": 387, "cfa": [200, 460], "cff": 390, "cg": 487, "ch": 53, "chain": [159, 374, 377, 406, 462, 495, 505], "chainer": 379, "chakraborti": [418, 419], "challeng": [368, 370, 374, 419, 440, 442, 444, 470], "chanc": 366, "changchangelog": [361, 390, 413, 421], "channel": [19, 20, 26, 360, 363, 364, 378, 420, 447, 457, 463, 473, 483], "channel0": 483, "channel1": 483, "channel_registri": [19, 20, 26], "chapter": 457, "charact": [83, 86, 361, 465], "character": [280, 385, 446], "characterist": [21, 25, 27, 51, 52, 53, 54, 128, 278, 372, 426, 451, 554], "charg": [387, 531], "chatti": [361, 444], "cheat": 396, "check": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 78, 79, 82, 83, 84, 86, 97, 100, 101, 104, 105, 117, 119, 140, 141, 142, 148, 153, 156, 181, 182, 183, 184, 185, 186, 187, 188, 191, 192, 193, 194, 195, 196, 202, 204, 211, 233, 248, 286, 335, 337, 364, 377, 383, 387, 390, 391, 393, 394, 395, 398, 407, 412, 420, 432, 450, 461, 475, 483, 495, 499, 508, 552, 555, 556], "check_limit": [201, 202, 203, 204], "check_random_st": 361, "check_tutorials_setup": [430, 431, 434, 435, 436, 437, 438, 439, 440, 442, 443, 444, 445, 446, 447, 448, 452, 453, 454, 455, 457, 458, 459, 460, 462, 463, 464, 465, 466, 468, 470, 471, 472, 473, 479, 480, 481], "checker": [418, 421], "checklist": 391, "checkout": [361, 364, 403, 442, 446, 466], "checksum": [79, 82, 84, 95, 96, 97, 100, 101, 102, 104, 105, 117, 119, 140, 141, 142, 148, 153, 156, 183, 184, 186, 190, 192, 195, 196, 211, 233, 328, 330, 427, 443, 471], "chen": 421, "cherenkov": [143, 374, 393, 398, 431, 434, 440, 452, 462, 470, 472, 504, 505, 554], "cherri": [361, 368, 375, 386], "chi": [277, 376, 556, 557, 558], "chi2": [96, 134, 373, 403, 445, 454, 460, 491, 557], "chi2assym": 406, "child": 371, "children": [442, 450, 463, 479, 480], "chime": 364, "chisq": 277, "chisquar": 277, "chmod": 555, "choic": [374, 378, 380, 387, 434, 435, 437, 439, 460, 472, 479, 496, 552, 555], "choos": [45, 181, 182, 185, 187, 188, 191, 194, 261, 304, 361, 373, 375, 377, 381, 393, 412, 432, 434, 438, 442, 444, 454, 459, 460, 462, 463, 465, 466, 467, 471, 480, 495, 555], "chose": [446, 471, 472, 557, 559], "chosen": [26, 140, 153, 156, 182, 183, 184, 192, 195, 196, 211, 220, 233, 361, 364, 376, 377, 380, 435, 453, 462, 463, 467, 468, 472, 479, 493, 503, 504, 508], "christoph": [366, 367, 368, 369, 370, 371, 372, 373, 375, 377, 378, 379, 380, 381, 400, 401, 402, 403, 404, 405, 406, 407, 413, 416, 417, 418, 419, 420, 421, 422], "chrome": [83, 86], "chromei": 414, "chunk": [142, 153, 156], "chunk_siz": [142, 153, 156], "ci": [361, 364, 368, 387, 391, 406, 412, 414, 417, 423], "circl": [79, 171, 358, 362, 375, 414, 434, 444, 454, 457, 462, 464, 467, 470, 480, 481, 492, 502, 504, 505, 508], "circle_area": 362, "circleannulusskyregion": [245, 246, 504], "circledast": 491, "circlepixelregion": 375, "circleskyregion": [97, 100, 104, 105, 165, 166, 170, 194, 212, 362, 375, 430, 431, 434, 436, 437, 440, 442, 444, 446, 447, 453, 457, 459, 462, 464, 465, 480, 502, 504, 505, 508], "circular": [86, 97, 100, 170, 182, 184, 194, 372, 380, 382, 431, 436, 459, 467, 504, 508], "circumv": [19, 20, 26, 205, 206, 209, 213, 215, 216, 217, 221, 227, 228, 230, 234, 236, 238, 239, 240, 244, 249, 251, 252, 253, 254, 257, 261], "cirelli": [26, 483], "citat": 390, "cite": [364, 387], "cl": [16, 80, 97, 99, 104, 118, 388], "clabel": 460, "clang": 397, "clarif": 366, "clarifi": [385, 426], "class": [6, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 272, 274, 298, 299, 302, 310, 312, 335, 348, 364, 367, 370, 373, 374, 375, 376, 377, 379, 380, 381, 382, 383, 384, 389, 393, 397, 400, 402, 403, 404, 405, 406, 407, 408, 409, 412, 413, 414, 416, 417, 418, 419, 420, 421, 422, 423, 425, 426, 427, 430, 432, 434, 435, 436, 437, 438, 439, 440, 444, 446, 447, 450, 452, 455, 458, 459, 460, 461, 462, 463, 466, 468, 470, 471, 472, 479, 481, 486, 490, 491, 492, 493, 494, 495, 497, 498, 499, 500, 503, 505, 506, 507, 508, 509, 531, 540, 552, 553, 554, 555, 560], "class1": 458, "class2": 458, "classic": [370, 379, 393, 402, 431, 434, 440, 444, 459, 462, 493, 495, 504, 505, 554, 557], "classifi": 472, "classmethod": [16, 19, 20, 26, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 56, 78, 79, 80, 81, 82, 83, 84, 86, 87, 89, 95, 96, 97, 99, 100, 104, 105, 117, 118, 119, 137, 138, 139, 140, 141, 142, 143, 144, 145, 147, 148, 150, 151, 152, 153, 154, 155, 156, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 199, 202, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 230, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 256, 257, 258, 259, 260, 261, 262, 388], "classproperti": 412, "classvar": [16, 80, 99, 118], "claudio": [425, 427], "claus": [361, 387], "clean": [361, 362, 364, 369, 370, 375, 377, 379, 400, 402, 403, 404, 405, 406, 407, 408, 409, 412, 419, 420, 421, 422], "cleaner": 423, "cleanup": [368, 380, 391, 400, 405, 406, 411, 412, 413, 417, 418, 420], "clear": [87, 95, 190, 233, 361, 366, 368, 372, 375, 376, 380, 381, 382, 420, 445, 559], "clearer": 405, "clearli": [128, 361, 366, 367, 375, 378, 386], "cli": [11, 377, 422, 553], "click": [360, 377, 378, 397, 405, 420, 430, 431, 434, 435, 436, 437, 438, 439, 440, 442, 443, 444, 445, 446, 447, 448, 452, 453, 454, 455, 457, 458, 459, 460, 462, 463, 464, 465, 466, 468, 470, 471, 472, 473, 479, 480, 481, 555], "clip": [19, 20, 26, 181, 182, 185, 187, 188, 191, 193, 194, 205, 206, 209, 213, 215, 216, 217, 221, 227, 228, 230, 234, 236, 238, 239, 240, 244, 249, 251, 252, 253, 254, 257, 260, 261, 302, 405, 406, 438], "clockwis": [212, 220, 223, 512], "clone": [364, 394, 421], "close": [137, 138, 139, 140, 143, 144, 145, 147, 150, 152, 154, 155, 182, 183, 184, 185, 186, 187, 188, 191, 192, 193, 194, 195, 196, 260, 336, 337, 338, 370, 375, 390, 415, 426, 427, 460, 540], "closer": 481, "closest": [112, 116, 120, 124, 127, 182, 183, 184, 186, 192, 195, 196, 464, 493], "cloud": [391, 475], "cluster": [6, 91, 288, 289, 374, 426, 427, 429, 469, 475, 492, 495], "clutter": [442, 495], "cm": [19, 20, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 45, 51, 52, 53, 54, 65, 96, 119, 125, 127, 205, 209, 215, 217, 221, 228, 231, 238, 240, 248, 249, 252, 253, 254, 263, 346, 372, 384, 431, 432, 434, 435, 436, 437, 438, 439, 442, 443, 444, 445, 446, 447, 450, 454, 455, 457, 458, 460, 466, 468, 470, 471, 479, 481, 488, 489, 493, 495, 511, 512, 513, 514, 516, 517, 518, 519, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 542, 543, 544, 545, 546, 547, 548, 549, 550, 554], "cm2": [51, 54, 65, 102, 119, 133, 143, 196, 264, 346, 430, 432, 435, 437, 438, 442, 443, 444, 446, 447, 450, 452, 453, 454, 455, 457, 458, 459, 463, 465, 466, 468, 471, 479, 480, 481, 493, 508, 524, 527, 530, 535, 540], "cm3": [17, 18, 19, 21, 22, 24, 25, 27, 52, 457], "cm5": 457, "cmap": [97, 100, 104, 105, 351, 352, 436, 442, 457, 463, 465, 471, 472, 479, 480, 504], "cmb": 531, "co": [53, 189, 386, 387, 430, 512, 513, 514], "coadd": [183, 184, 186, 192, 195, 196], "coars": 459, "coarser": [188, 193, 459], "codaci": 391, "codata": 52, "code": [19, 20, 26, 78, 79, 83, 86, 140, 205, 206, 209, 213, 215, 216, 217, 221, 227, 228, 230, 234, 236, 238, 239, 240, 244, 249, 251, 252, 253, 254, 257, 261, 356, 364, 365, 366, 368, 369, 371, 374, 375, 376, 377, 378, 379, 380, 381, 382, 384, 385, 386, 387, 388, 394, 397, 400, 403, 404, 406, 407, 408, 409, 412, 414, 417, 418, 419, 420, 421, 423, 426, 430, 431, 432, 434, 435, 436, 437, 438, 439, 440, 442, 443, 444, 445, 446, 447, 448, 450, 451, 452, 453, 454, 455, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 470, 471, 472, 473, 475, 477, 479, 480, 481, 483, 495, 509, 511, 512, 513, 514, 515, 516, 517, 518, 519, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 542, 543, 544, 545, 546, 547, 548, 549, 550, 552, 555], "codebas": [362, 378, 400, 419, 421], "codemeta": 414, "codespel": 412, "codestyl": 364, "coeffici": [122, 226, 230, 521], "coerce_numbers_to_str": 99, "coerce_unit": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40], "coincid": 451, "col": [83, 86, 412], "col0": [83, 86], "col1": [83, 86], "col2": [83, 86], "col_b": [83, 86], "col_c": [83, 86], "col_d": [83, 86], "col_fit_deriv": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40], "col_label": 355, "collabor": [351, 352, 366, 368, 370, 374, 414, 445, 471, 554], "colleagu": [364, 555], "collect": [190, 233, 361, 363, 388, 391, 419, 420, 435, 459, 465, 483, 492, 496, 500, 554, 559], "collis": 50, "colnam": [83, 86, 183, 184, 186, 192, 195, 196, 471, 481], "color": [96, 104, 105, 137, 138, 196, 350, 351, 352, 355, 358, 362, 430, 432, 434, 435, 436, 437, 438, 440, 442, 444, 445, 448, 452, 455, 457, 460, 462, 465, 467, 468, 495, 504, 508, 512, 513, 531], "colorbar": [119, 137, 138, 140, 143, 144, 145, 150, 151, 152, 154, 196, 349, 355, 460, 463], "colorblind": 495, "colorblind10": 495, "colormap": [350, 351, 352, 400, 413, 481], "colormap_hess": [382, 560], "colormap_milagro": 560, "colour": 423, "column": [41, 43, 44, 46, 47, 56, 79, 83, 86, 98, 103, 117, 119, 122, 132, 137, 138, 140, 164, 183, 184, 185, 186, 187, 188, 192, 193, 195, 196, 259, 280, 288, 331, 332, 333, 334, 354, 355, 358, 359, 361, 374, 376, 385, 423, 426, 427, 430, 446, 447, 455, 458, 463, 466, 470, 492, 495], "column_nam": 461, "column_prefix": 188, "columnclass": [83, 86], "columnspac": 358, "com": [128, 134, 286, 317, 318, 329, 364, 381, 390, 391, 394], "combin": [94, 96, 97, 100, 104, 105, 135, 169, 177, 183, 184, 186, 191, 192, 195, 196, 206, 248, 361, 367, 371, 372, 373, 374, 375, 376, 381, 384, 393, 405, 420, 426, 432, 437, 442, 443, 450, 454, 459, 460, 461, 462, 463, 464, 466, 472, 480, 481, 483, 485, 495, 502, 507, 523, 553, 554], "combined_ev": 492, "combining_and_defin": [430, 437, 439, 442, 444, 450, 454, 470], "come": [67, 364, 367, 368, 369, 370, 371, 375, 376, 377, 378, 380, 381, 386, 388, 390, 391, 408, 409, 412, 421, 422, 426, 434, 442, 450, 466, 470, 479, 555], "comma": [69, 70, 71, 72, 73, 74, 75, 76, 458], "command": [6, 13, 89, 96, 119, 144, 150, 152, 154, 360, 362, 364, 369, 370, 372, 377, 378, 391, 392, 393, 394, 395, 396, 402, 406, 417, 420, 421, 423, 446, 494, 553], "commensur": 196, "comment": [119, 361, 362, 366, 370, 374, 375, 377, 378, 380, 382, 384, 386, 387], "commit": [361, 364, 369, 375, 386, 387, 399, 400, 423], "committe": [366, 368, 386, 387], "commod": 387, "common": [90, 360, 361, 362, 364, 366, 367, 375, 377, 381, 382, 384, 385, 387, 394, 396, 397, 412, 414, 435, 436, 448, 458, 461, 464, 466, 479, 480, 483, 490, 493, 494, 508, 513, 555], "common_irf_head": 461, "commonli": [29, 79, 375, 379, 421, 448, 483, 552, 553, 555, 557, 560], "commun": [377, 383, 387, 390, 392, 398, 473], "comp": 458, "compact": [16, 80, 83, 86, 99, 118], "compar": [83, 86, 120, 121, 124, 125, 137, 138, 139, 140, 143, 144, 145, 147, 150, 152, 154, 155, 182, 183, 184, 186, 191, 192, 194, 195, 196, 200, 270, 361, 375, 378, 381, 409, 425, 426, 430, 431, 434, 438, 442, 445, 448, 450, 453, 458, 460, 462, 468, 471, 479, 490, 554, 556], "comparison": [82, 83, 86, 95, 124, 137, 138, 139, 140, 143, 144, 145, 147, 150, 152, 154, 155, 182, 183, 184, 186, 188, 191, 192, 194, 195, 196, 320, 417, 485], "compat": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 83, 86, 183, 184, 186, 195, 196, 219, 366, 368, 372, 375, 384, 386, 388, 389, 397, 400, 402, 404, 421, 427, 463, 507], "compil": [364, 413], "complain": 364, "complaint": 379, "complement": 381, "complet": [13, 16, 80, 99, 118, 320, 361, 367, 371, 372, 373, 374, 375, 378, 379, 381, 385, 386, 387, 394, 399, 401, 402, 403, 404, 405, 406, 407, 408, 409, 412, 414, 417, 418, 419, 420, 421, 422, 442, 447, 460, 467, 475, 495, 500], "complex": [361, 362, 367, 371, 375, 376, 377, 383, 385, 397, 431, 434, 444, 447, 451, 454, 459, 463, 464, 466, 467, 471, 504], "complianc": [387, 423], "compliant": [183, 184, 186, 195, 196, 427, 554], "complic": [375, 508], "compon": [15, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 65, 76, 77, 84, 97, 98, 100, 103, 104, 105, 124, 128, 155, 157, 191, 211, 233, 234, 248, 263, 372, 373, 374, 377, 383, 384, 402, 406, 408, 412, 420, 421, 435, 436, 437, 439, 442, 443, 444, 445, 446, 447, 450, 452, 453, 454, 458, 459, 465, 466, 470, 471, 479, 480, 483, 491, 493, 495, 508, 511, 512, 513, 514, 515, 516, 517, 518, 519, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 542, 543, 544, 545, 546, 547, 548, 549, 550, 552, 554], "component_1": 372, "component_2": 372, "component_class": 458, "components_model": 76, "components_statu": 65, "compos": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 367, 387], "composit": [57, 68, 76, 301, 387, 419], "compound": [191, 198, 206, 321, 325, 375, 384, 429, 448, 509, 541], "compoundmodel": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 414], "compoundpixelregion": 325, "compoundskymodel": 372, "compoundskyregion": [198, 321, 325], "compoundsourcemodel": 372, "compoundspectralmodel": [243, 384, 426, 466, 471, 521, 523, 527, 530, 532, 535, 540], "compress": 369, "compris": 472, "compromis": [361, 366, 374, 468], "compton": [234, 408, 531], "compulsori": 466, "comput": [16, 19, 20, 23, 26, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 79, 80, 82, 84, 89, 91, 95, 96, 97, 99, 100, 104, 105, 112, 114, 116, 117, 118, 119, 120, 121, 123, 124, 125, 126, 127, 128, 129, 130, 132, 134, 137, 138, 139, 140, 141, 142, 143, 144, 145, 147, 148, 150, 151, 152, 153, 154, 155, 156, 158, 169, 170, 172, 175, 176, 177, 178, 180, 182, 183, 184, 186, 188, 191, 192, 193, 194, 195, 196, 197, 200, 205, 206, 209, 211, 213, 215, 216, 217, 221, 225, 227, 228, 230, 233, 234, 236, 238, 239, 240, 244, 249, 251, 252, 253, 254, 257, 259, 261, 263, 264, 270, 271, 272, 274, 277, 278, 279, 280, 285, 286, 289, 293, 294, 297, 361, 370, 371, 372, 373, 374, 375, 376, 379, 381, 382, 383, 384, 385, 389, 391, 393, 394, 398, 400, 402, 403, 404, 405, 408, 409, 411, 412, 413, 415, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 431, 436, 438, 442, 443, 447, 448, 451, 452, 453, 455, 457, 459, 462, 465, 466, 467, 468, 471, 472, 473, 479, 481, 483, 491, 493, 495, 500, 504, 531, 553, 554, 555, 556, 557, 558, 559], "computation": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 200, 374, 375, 491], "compute_chisq": 419, "compute_differential_jfactor": 23, "compute_errn": [272, 274, 423, 557], "compute_errp": [272, 274, 557], "compute_flux_doubl": 128, "compute_fpp": 129, "compute_fvar": [130, 279], "compute_jfactor": [23, 457], "compute_lightcurve_doublingtim": 451, "compute_lightcurve_fpp": 451, "compute_lightcurve_fvar": 451, "compute_lima_map": 408, "compute_npr": 374, "compute_upper_limit": [272, 274], "computedfieldinfo": [16, 80, 99, 118], "con": [361, 377], "concaten": [79, 82, 87, 185, 188, 373, 377, 383, 426, 463], "concentr": 322, "concept": [16, 80, 99, 118, 381, 382, 388, 398, 457, 463, 496], "conception": [374, 383], "concern": [364, 366, 375, 377, 378, 380, 382, 384, 387, 412, 422, 472, 557], "conclud": 370, "concret": [16, 80, 99, 118, 378, 381], "conda": [360, 364, 368, 369, 378, 381, 386, 390, 391, 393, 394, 395, 396, 397, 402, 404, 420, 421, 555], "condit": [52, 53, 136, 202, 204, 211, 233, 385, 389, 409, 430, 434, 437, 447, 458, 464, 465, 467, 472, 491, 500], "conduct": [423, 454], "cone": [86, 375, 435, 467, 479, 480, 495], "conesearch": 377, "conf": [83, 86, 361, 362, 391, 403, 418], "conf_1d": 452, "conf_3d": 452, "conf_max": [201, 203], "conf_min": [201, 203], "confid": [116, 200, 201, 203, 272, 274, 372, 379, 403, 408, 422, 554, 557], "confidence_opt": 200, "config": [15, 16, 80, 99, 118, 360, 362, 367, 369, 370, 377, 378, 381, 388, 393, 395, 405, 406, 407, 412, 420, 435, 442, 479, 552], "config_dict": 479, "config_joint": 442, "config_paramet": [112, 114, 115, 116, 120, 121, 123, 124, 125, 126, 127], "config_stack": 442, "config_str": 16, "configdict": [16, 80, 99, 118], "configpars": 418, "configur": [11, 15, 16, 46, 80, 83, 86, 96, 99, 104, 105, 112, 114, 115, 116, 118, 120, 121, 123, 124, 125, 126, 127, 310, 361, 362, 364, 370, 372, 376, 377, 381, 382, 388, 391, 397, 405, 407, 408, 412, 414, 423, 426, 427, 434, 436, 444, 446, 447, 470, 475, 494, 500, 554, 555], "confirm": 364, "conflict": [83, 86, 361, 364, 387], "confluenc": 473, "conform": [16, 80, 99, 118, 463], "confus": [361, 362, 367, 380], "connect": [371, 434, 448, 450, 464, 480, 552], "consant": [183, 184, 186, 192, 195, 196], "consciou": 366, "consecut": [166, 320, 361, 386], "consensu": [366, 387], "consent": 361, "consequ": [387, 447, 508], "conserv": [491, 516], "consid": [19, 20, 59, 91, 163, 170, 173, 174, 176, 177, 184, 196, 201, 205, 208, 209, 212, 213, 215, 216, 217, 218, 220, 221, 222, 223, 224, 225, 226, 227, 228, 230, 234, 237, 238, 239, 240, 241, 244, 245, 246, 247, 249, 252, 253, 254, 259, 260, 270, 357, 366, 367, 372, 373, 375, 376, 377, 378, 379, 380, 381, 383, 387, 389, 431, 434, 436, 442, 446, 447, 451, 461, 464, 492, 500, 558], "consider": [377, 402, 412, 420, 442], "consist": [71, 86, 90, 117, 119, 141, 142, 153, 156, 183, 184, 186, 195, 196, 220, 223, 361, 371, 372, 374, 375, 376, 381, 388, 405, 406, 407, 408, 409, 416, 420, 421, 423, 425, 426, 427, 435, 436, 437, 438, 445, 450, 454, 460, 462, 463, 466, 468, 479, 529, 531, 556], "consol": [361, 555], "consortium": [388, 470], "const": [207, 208, 209, 210, 384, 447, 466, 524, 542], "const3d": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40], "const_norm": 384, "constant": [50, 51, 52, 53, 97, 104, 112, 143, 183, 184, 186, 192, 194, 195, 196, 207, 208, 209, 210, 212, 224, 226, 319, 374, 375, 380, 420, 429, 452, 471, 488, 491, 509, 520, 541, 551, 554, 558], "constant_model": 542, "constantmodel": 422, "constantnormspectralmodel": 384, "constantspatialmodel": [242, 384, 466, 471, 511], "constantspectralmodel": [243, 384, 447, 466, 524], "constanttemporalmodel": [255, 384, 405, 466, 542], "constitu": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40], "constitut": 459, "constrain": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 387, 439, 443, 462, 468], "constraint": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 495], "construct": [16, 80, 99, 118, 188, 227, 228, 327, 508, 554], "constructor": [181, 182, 183, 184, 186, 188, 191, 192, 193, 194, 195, 196, 426, 480, 506], "consult": 396, "consum": [460, 495], "contact": [363, 368, 370, 387, 396, 398, 401, 402, 403, 417, 420], "contain": [13, 16, 19, 20, 26, 57, 59, 62, 65, 67, 78, 79, 80, 82, 83, 84, 86, 87, 90, 91, 95, 96, 97, 99, 100, 103, 104, 105, 107, 117, 118, 119, 127, 132, 134, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 147, 148, 150, 151, 152, 153, 154, 155, 156, 157, 158, 163, 165, 168, 170, 175, 178, 180, 181, 182, 183, 184, 186, 187, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 200, 202, 205, 206, 207, 208, 209, 210, 211, 212, 213, 215, 216, 217, 218, 220, 221, 222, 223, 224, 225, 226, 227, 228, 230, 231, 233, 234, 235, 236, 237, 238, 239, 240, 241, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 256, 257, 259, 260, 261, 262, 278, 288, 289, 354, 356, 358, 359, 361, 364, 365, 367, 369, 370, 371, 374, 375, 376, 377, 378, 380, 381, 382, 383, 385, 387, 390, 391, 398, 402, 406, 407, 408, 409, 411, 412, 414, 415, 418, 419, 420, 421, 422, 426, 427, 430, 432, 434, 435, 436, 439, 442, 443, 446, 447, 450, 452, 453, 455, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 470, 471, 472, 473, 479, 480, 481, 483, 484, 486, 491, 492, 493, 495, 499, 503, 504, 507, 508, 509, 552, 554, 556, 557, 558], "containment_correct": [16, 97, 100, 170, 430, 434, 435, 436, 439, 440, 442, 444, 452, 453, 455, 459, 462, 479], "containment_fract": 91, "containment_radiu": [144, 150, 152, 153, 154, 156, 430, 459, 461, 464], "containment_radius_map": [153, 156], "contains_pix": [181, 182, 191, 194], "contains_wcs_pix": 191, "contamin": [65, 440, 458, 464, 504], "content": [80, 99, 118, 119, 183, 184, 186, 192, 195, 196, 328, 361, 364, 366, 370, 376, 381, 388, 391, 406, 415, 420, 431, 463, 464, 470, 472, 492, 495, 506, 507], "content_typ": [16, 80, 99, 118], "context": [16, 80, 83, 86, 99, 118, 202, 204, 211, 233, 310, 339, 361, 376, 387, 391, 427, 463, 485], "contigu": [188, 193, 412], "continu": [188, 368, 370, 371, 374, 375, 377, 378, 380, 381, 386, 397, 400, 401, 404, 412, 417, 418, 419, 421, 434, 447, 464, 507, 554], "continuous_upd": [442, 450, 463, 479, 480], "contour": [198, 200, 353, 370, 422], "contour_": 460, "contour_alpha_amplitud": 460, "contour_alpha_beta": 460, "contour_beta_amplitud": 460, "contourf": 196, "contract": 387, "contrari": [362, 369], "contrast": [381, 554], "contrera": 422, "contribut": [95, 109, 111, 211, 219, 233, 248, 357, 361, 363, 370, 375, 383, 385, 391, 398, 401, 412, 414, 416, 462, 496, 531, 552, 555, 556], "contributes_to_stat": 95, "contributor": [361, 364, 381, 391, 399, 410, 411], "control": [79, 83, 86, 97, 100, 104, 105, 361, 374, 392, 394, 430, 457, 463, 468, 495, 557], "controversi": [361, 366, 367, 381], "conveni": [13, 117, 360, 361, 364, 371, 375, 383, 385, 392, 402, 404, 409, 412, 414, 419, 444, 457, 458, 459, 463, 464, 465, 466, 470, 472, 481, 490, 494, 553], "convent": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 79, 182, 183, 184, 186, 194, 195, 196, 383, 385, 404, 405, 408, 409, 423, 459, 462, 463, 466, 491, 493, 500, 507, 557], "converg": [389, 403, 424, 434, 436, 442, 460, 491, 495, 512], "convers": [80, 83, 86, 99, 117, 118, 119, 366, 385, 388, 393, 395, 412, 425, 426, 427, 430, 508], "conversion_typ": [471, 481], "convert": [16, 19, 23, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 50, 79, 81, 82, 83, 86, 94, 96, 97, 100, 102, 104, 105, 117, 119, 122, 137, 138, 139, 140, 141, 142, 143, 144, 145, 147, 148, 150, 152, 153, 154, 155, 156, 166, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 201, 202, 203, 204, 211, 225, 233, 270, 287, 290, 291, 295, 308, 324, 342, 344, 345, 362, 367, 375, 376, 385, 388, 391, 413, 425, 426, 427, 430, 440, 445, 453, 454, 459, 460, 464, 465, 470, 481, 493, 499, 504, 507, 557, 559], "convert_bytestring_to_unicod": [83, 86], "convert_unicode_to_bytestr": [83, 86], "convinc": 481, "convolut": [112, 116, 122, 127, 151, 184, 196, 360, 373, 379, 400, 407, 409, 418, 420, 421, 427, 440, 463, 491, 508], "convolution_method": 184, "convolv": [100, 106, 110, 127, 151, 184, 196, 372, 400, 409, 412, 421, 437, 438, 440, 463, 501, 531], "convolve_ful": 184, "convolve_wc": 184, "cookiecutt": 377, "coolwarm": [442, 471, 472, 480], "coord": [13, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 79, 181, 182, 183, 184, 185, 186, 187, 188, 189, 191, 192, 193, 194, 195, 196, 235, 278, 372, 405, 447, 463, 464, 504, 507, 508, 515], "coord_to_idx": [181, 182, 185, 187, 188, 191, 193, 194, 463], "coord_to_pix": [181, 182, 185, 187, 188, 191, 193, 194, 463], "coordiant": 461, "coordin": [6, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 41, 46, 47, 79, 81, 83, 84, 85, 86, 89, 90, 91, 97, 98, 100, 103, 104, 105, 117, 119, 121, 122, 123, 128, 132, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 150, 152, 153, 154, 155, 156, 166, 176, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 191, 192, 193, 194, 195, 196, 211, 212, 220, 223, 225, 233, 235, 237, 245, 246, 248, 260, 278, 286, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 302, 312, 318, 322, 323, 337, 362, 366, 367, 368, 370, 374, 375, 380, 381, 384, 386, 387, 400, 402, 405, 407, 418, 420, 421, 423, 430, 431, 434, 436, 437, 440, 444, 445, 446, 447, 448, 450, 452, 453, 454, 455, 457, 459, 461, 462, 463, 464, 465, 466, 467, 470, 471, 472, 473, 480, 481, 491, 499, 504, 506, 507, 512, 513, 516, 553, 554, 559], "coordsi": 407, "copi": [11, 16, 19, 20, 26, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 78, 79, 80, 82, 83, 84, 85, 86, 87, 94, 95, 96, 97, 99, 100, 103, 104, 105, 112, 114, 115, 116, 118, 120, 121, 123, 124, 125, 126, 127, 141, 142, 148, 153, 156, 181, 182, 183, 184, 185, 186, 187, 188, 189, 191, 192, 193, 194, 195, 196, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 230, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 256, 257, 258, 259, 260, 261, 262, 290, 333, 361, 366, 369, 371, 375, 377, 383, 390, 391, 397, 412, 414, 421, 422, 423, 426, 431, 434, 436, 437, 442, 444, 450, 453, 454, 458, 460, 462, 466, 468, 471, 495, 504, 508, 519, 555], "copy_data": [83, 86, 211, 219, 233, 248, 256, 258, 260], "copy_indic": [83, 86], "copy_ob": [78, 495], "copy_on_getitem": [83, 86], "copyright": 397, "core": [16, 53, 80, 99, 118, 149, 360, 361, 368, 374, 375, 382, 386, 387, 398, 401, 418, 422, 426, 430, 436, 437, 439, 442, 444, 446, 448, 450, 454, 465, 470, 471, 483, 493, 555], "corner": [375, 378, 430, 431, 434, 435, 436, 437, 438, 439, 440, 442, 443, 444, 445, 446, 447, 448, 452, 453, 454, 455, 457, 458, 459, 460, 462, 463, 464, 465, 466, 468, 470, 471, 472, 473, 479, 480, 481], "corr_coord": [153, 156], "correct": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 65, 79, 84, 97, 98, 100, 142, 153, 156, 170, 175, 176, 219, 235, 236, 260, 361, 373, 374, 386, 387, 388, 390, 404, 407, 409, 410, 411, 412, 415, 418, 419, 421, 423, 424, 425, 426, 427, 430, 434, 435, 436, 437, 446, 450, 452, 458, 459, 460, 462, 464, 465, 466, 468, 472, 479, 481, 492, 493, 502, 515, 527, 530, 532, 535, 540], "correctli": [19, 20, 26, 205, 206, 209, 213, 215, 216, 217, 221, 227, 228, 230, 234, 236, 238, 239, 240, 244, 249, 251, 252, 253, 254, 257, 261, 362, 364, 387, 388, 402, 404, 409, 414, 415, 424, 461, 462, 463, 464, 465, 468, 513], "correl": [19, 20, 26, 116, 122, 199, 205, 206, 209, 213, 215, 216, 217, 221, 227, 228, 230, 234, 236, 238, 244, 249, 251, 252, 253, 254, 257, 261, 379, 384, 385, 412, 422, 445, 448, 460, 464, 466, 468, 479, 493, 552], "correlate_off": 116, "correlation_radiu": [16, 116, 132, 133, 435, 439, 440, 442, 455, 472, 479, 493], "correspond": [16, 19, 20, 26, 28, 29, 30, 31, 32, 33, 35, 36, 37, 39, 40, 45, 80, 83, 85, 86, 95, 97, 99, 100, 104, 105, 117, 118, 119, 120, 121, 122, 124, 125, 127, 140, 141, 142, 148, 151, 153, 155, 156, 157, 181, 182, 183, 184, 186, 187, 188, 190, 191, 192, 193, 194, 195, 196, 198, 205, 206, 209, 213, 215, 216, 217, 220, 221, 227, 228, 230, 234, 236, 238, 239, 240, 244, 249, 251, 252, 253, 254, 257, 259, 261, 288, 354, 371, 372, 373, 374, 381, 382, 385, 387, 389, 406, 409, 431, 432, 434, 435, 436, 442, 446, 447, 452, 458, 460, 462, 463, 466, 467, 468, 470, 471, 472, 479, 481, 491, 492, 493, 495, 507, 508, 518, 521, 553, 554, 559], "cosimo": [409, 412, 414, 420, 421, 423, 426], "cosmic": [52, 213, 263, 379, 470], "cost": 554, "costom": 468, "costomprior": 468, "costum": 468, "coto": 420, "could": [16, 80, 99, 118, 362, 364, 366, 367, 370, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 385, 387, 388, 391, 431, 434, 442, 444, 458, 470, 471, 479, 494], "count": [16, 79, 87, 95, 97, 100, 101, 102, 103, 104, 105, 108, 112, 116, 117, 119, 120, 121, 123, 124, 125, 126, 127, 131, 158, 160, 163, 164, 165, 170, 172, 176, 180, 183, 184, 186, 187, 188, 192, 195, 196, 202, 204, 211, 233, 272, 274, 275, 276, 281, 282, 285, 287, 312, 346, 348, 357, 359, 367, 369, 372, 373, 374, 376, 377, 381, 385, 403, 404, 407, 409, 412, 414, 415, 421, 422, 426, 427, 430, 431, 434, 435, 436, 437, 438, 439, 440, 442, 444, 446, 448, 450, 452, 453, 454, 455, 459, 460, 462, 463, 464, 468, 472, 477, 479, 480, 481, 493, 495, 499, 502, 503, 504, 505, 508, 554, 555, 556, 558], "count_bkg": 455, "count_statist": 557, "counter": [212, 220, 223, 512], "counts_3d": 463, "counts_imag": [448, 459], "counts_min": 136, "counts_off": [97, 100, 101, 104, 105, 158, 164, 165, 168, 359, 373, 414, 425, 426, 435, 436, 437, 440, 444, 455, 459, 491, 557], "counts_on": 403, "counts_rat": 459, "countspredictor": 372, "countsspectrum": [373, 376, 403, 404, 406, 408, 417], "countsstatist": [272, 274, 385, 408, 409, 412, 423], "coupl": [369, 375, 380, 391, 409, 421, 463], "cours": [361, 364, 368, 371, 378, 397, 435, 442, 459, 463, 471, 479, 555, 558], "cousin": [403, 409, 417, 419, 554], "cousins2007": [554, 557], "coutinho": [409, 412], "cov": [239, 240, 391], "cov_matrix": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40], "covar": [199, 354, 422], "covar_list": 199, "covari": [15, 19, 20, 26, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 95, 120, 121, 124, 125, 200, 202, 205, 206, 207, 208, 209, 210, 211, 212, 213, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 230, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 256, 257, 258, 259, 260, 261, 262, 272, 274, 354, 379, 389, 408, 414, 422, 423, 426, 435, 479, 557], "covariance_data": [211, 219, 233, 248, 258], "covariance_opt": 200, "covariance_typ": 389, "covariancegaussianprior": 389, "covarianceresult": [96, 200, 431, 432, 434, 435, 436, 442, 443, 444, 455, 460, 471, 479, 480], "cover": [259, 361, 363, 375, 376, 377, 385, 431, 452, 453, 459, 463, 475, 481, 496], "coverag": [370, 376, 391, 400, 404, 412, 418, 421, 453, 460], "coveral": [391, 400], "cpu": [120, 121, 124, 127, 310, 311, 374], "cpython": 366, "crab": [65, 79, 104, 105, 125, 136, 230, 264, 270, 369, 373, 381, 400, 406, 418, 420, 434, 435, 436, 443, 444, 452, 458, 459, 460, 464, 468, 471, 472, 473, 479, 480, 481, 493, 504, 508, 554], "crab_10gev_100tev_dataset": 443, "crab_3fhl": 481, "crab_3fhl_spec": 481, "crab_events_pass4": 472, "crab_fp": 435, "crab_fp_tabl": 435, "crab_hess_ecpl": 264, "crab_hess_fp": 135, "crab_magic_lp": 436, "crab_model": 460, "crab_posit": 504, "crab_spec": 443, "crab_spectrum": 460, "crabnebula": 452, "crabspectrum": 404, "creat": [11, 13, 16, 19, 20, 26, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 68, 78, 79, 80, 82, 83, 84, 86, 87, 88, 94, 96, 97, 99, 100, 104, 105, 106, 107, 108, 110, 112, 117, 118, 119, 120, 121, 124, 137, 138, 139, 140, 141, 142, 143, 144, 145, 147, 148, 150, 151, 152, 153, 154, 155, 156, 163, 165, 166, 167, 171, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 202, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 256, 257, 258, 259, 260, 261, 262, 264, 270, 290, 300, 321, 325, 339, 348, 350, 355, 361, 362, 364, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 395, 397, 404, 405, 406, 409, 412, 414, 420, 421, 423, 424, 425, 426, 427, 430, 432, 435, 436, 437, 442, 444, 445, 446, 448, 450, 451, 452, 453, 454, 455, 457, 458, 460, 462, 465, 466, 467, 468, 470, 471, 472, 473, 477, 479, 481, 483, 490, 491, 492, 495, 499, 502, 504, 505, 506, 507, 511, 513, 514, 515, 516, 521, 531, 540, 552, 553, 555, 560], "create_crab_spectral_model": [434, 436, 443], "create_fermi_isotropic_diffuse_model": [465, 471], "create_map_dataset_from_observ": [88, 103], "creation": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 80, 99, 118, 121, 194, 370, 371, 375, 384, 387, 406, 412, 451, 466, 473], "creator": [99, 118, 364, 388, 435, 466, 479, 511, 512, 513, 514, 515, 516, 517, 518, 519, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 542, 543, 544, 545, 546, 547, 548, 549, 550], "creatormedadata": 388, "creatormetadata": [80, 99, 118, 388], "credit": 397, "crimson": 436, "criteria": [15, 86, 414, 462, 467, 475], "criterion": [86, 127, 288, 430, 495], "critic": 468, "criticis": 352, "crop": [82, 181, 182, 183, 184, 186, 191, 192, 194, 195, 196], "crop_width": [181, 182, 183, 184, 186, 191, 192, 194, 195, 196], "cross": [19, 367, 381, 483], "crowd": 458, "crpix": 194, "crpix1": 463, "crpix2": 463, "crucial": [388, 446, 447, 459], "cruft": 391, "crux": [33, 38], "crval1": 463, "crval2": 463, "cryptic": 372, "csh": 555, "csobsselect": 371, "css": [83, 86, 391], "cstat": [373, 406], "csv": 119, "ct": [346, 421, 460], "cta": [78, 79, 85, 97, 100, 104, 105, 109, 111, 112, 116, 132, 133, 138, 142, 143, 144, 153, 163, 213, 263, 349, 354, 356, 361, 365, 368, 369, 370, 374, 377, 380, 381, 390, 393, 398, 401, 402, 412, 418, 419, 420, 421, 429, 430, 435, 437, 439, 442, 444, 446, 447, 450, 454, 455, 459, 461, 465, 467, 472, 473, 474, 475, 479, 483, 492, 493, 495, 497, 500, 553, 554, 559], "cta_data_analysi": [381, 429, 444, 449], "cta_dataset": 465, "cta_north": 92, "cta_sensist": 381, "cta_sensit": [429, 430, 433], "cta_simul": 401, "cta_south": [92, 430, 437, 446, 447, 450, 454], "cta_util": 421, "ctadata": 470, "ctao": [381, 387, 470, 495], "ctapip": [364, 368, 370, 377, 378, 380, 381, 382], "ctaspectrumobserv": 421, "ctobssim": [78, 374], "ctool": [371, 374, 377, 381, 529], "cts_sigma": 460, "ctselect": 371, "ctype1": 463, "ctype2": 463, "cube": [46, 97, 100, 127, 158, 176, 183, 184, 186, 192, 195, 196, 229, 248, 361, 372, 373, 374, 380, 381, 382, 384, 393, 400, 404, 405, 408, 413, 416, 417, 418, 419, 420, 421, 438, 439, 444, 448, 471, 481, 491, 500, 502, 507, 508, 554], "cubic": 463, "cumbersom": [371, 379], "cumsum": [137, 138, 139, 140, 143, 144, 145, 147, 150, 152, 154, 155, 183, 184, 186, 192, 195, 196], "cumul": [95, 137, 138, 139, 140, 143, 144, 145, 147, 150, 152, 154, 155, 183, 184, 186, 192, 195, 196, 312, 374, 434, 446, 465, 495], "cunit1": 463, "cunit2": 463, "curat": [391, 401], "curl": [65, 378, 392, 393, 395, 470], "current": [11, 15, 19, 20, 26, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 79, 81, 82, 83, 84, 85, 86, 94, 95, 96, 97, 100, 104, 105, 119, 120, 124, 146, 169, 181, 182, 183, 184, 186, 192, 193, 194, 195, 196, 200, 205, 206, 207, 208, 209, 210, 211, 212, 213, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 230, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 256, 257, 258, 259, 260, 261, 262, 339, 355, 361, 362, 364, 367, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 387, 388, 389, 392, 393, 394, 395, 404, 422, 435, 457, 461, 462, 463, 465, 470, 472, 473, 479, 480, 484, 491, 492, 493, 508, 552, 554, 555], "curv": [15, 19, 20, 26, 79, 124, 128, 205, 206, 209, 213, 215, 216, 217, 221, 225, 227, 228, 230, 234, 236, 238, 239, 240, 244, 249, 251, 252, 253, 254, 257, 259, 261, 280, 353, 365, 372, 374, 377, 381, 385, 393, 402, 406, 408, 409, 413, 416, 417, 419, 421, 423, 426, 427, 429, 430, 451, 456, 475, 491, 492, 493, 494, 503, 504, 507, 509, 551, 553], "curve_fit": 354, "cuspi": 483, "custom": [16, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 78, 80, 85, 99, 118, 123, 370, 371, 372, 377, 379, 384, 388, 392, 406, 407, 409, 421, 430, 437, 439, 442, 444, 450, 454, 459, 461, 463, 470, 495, 540], "custom_model": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40], "customari": 466, "customis": [381, 461], "cut": [86, 116, 155, 169, 170, 371, 420, 426, 429, 430, 433, 437, 455, 459, 462, 463, 467, 470, 475, 480, 481, 491, 492, 503, 504, 507, 552], "cutoff": [215, 216, 217, 252, 253, 254, 270, 406, 426, 429, 437, 442, 509, 541], "cutout": [97, 100, 104, 105, 109, 111, 141, 142, 148, 153, 156, 159, 182, 184, 192, 194, 196, 258, 367, 373, 402, 407, 412, 418, 421, 439, 440, 442, 444, 448, 459, 462, 471, 480, 481, 491], "cutout2d": [97, 100, 141, 142, 148, 153, 156, 159, 194, 196, 258, 367], "cutout_and_mask_region": [196, 426], "cutout_info": 406, "cutout_mod": 159, "cutout_slic": 194, "cutout_width": 159, "cval": [183, 184, 186, 192, 195, 196], "cwd": 369, "cwt": [381, 406, 418, 421], "cx": 460, "cxc": [200, 381, 460], "cy": 460, "cyan": 358, "cycl": [358, 364, 365, 366, 378, 380, 394, 419, 423], "cycler": [358, 430], "cython": [364, 403, 413], "d": [19, 20, 23, 83, 85, 86, 190, 193, 225, 230, 241, 259, 264, 329, 364, 379, 381, 414, 423, 432, 446, 447, 454, 463, 466, 467, 500, 507, 512, 542, 543, 544, 545, 546, 547, 548, 549, 550, 555, 558], "dai": [83, 86, 193, 218, 222, 224, 241, 247, 364, 375, 381, 390, 391, 463, 548, 555], "daniel": [422, 425, 427], "dark": [1, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 381, 389, 421, 426, 427, 429, 469, 475, 484, 507, 553], "dark_matter_spectra": 26, "darkbit": 483, "darkblu": 468, "darkgreen": 468, "darkmatt": [6, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 243, 362, 381, 421, 457, 484], "darkmatterannihilationspectralmodel": [20, 243, 423, 457, 466], "darkmatterdecayspectralmodel": [243, 427, 457, 466], "darkorang": [434, 435], "darksusi": 483, "darwin": 397, "dash": [455, 457, 468], "dashboard": 391, "dat": [26, 83, 86, 211, 233, 435, 479, 483], "data": [6, 11, 15, 16, 19, 20, 26, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 108, 117, 118, 119, 120, 121, 122, 123, 132, 133, 137, 138, 139, 140, 141, 142, 143, 144, 145, 147, 148, 150, 151, 152, 153, 154, 155, 156, 159, 160, 163, 164, 165, 169, 176, 180, 181, 182, 183, 184, 186, 187, 188, 189, 191, 192, 193, 194, 195, 196, 199, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 256, 257, 258, 259, 260, 261, 262, 275, 280, 281, 283, 284, 287, 288, 289, 298, 299, 302, 320, 328, 331, 332, 340, 349, 350, 351, 352, 354, 355, 360, 362, 365, 368, 371, 372, 373, 374, 375, 377, 380, 381, 382, 383, 384, 385, 387, 389, 390, 393, 397, 398, 400, 401, 402, 403, 404, 406, 407, 408, 409, 412, 413, 414, 415, 417, 418, 419, 420, 421, 422, 423, 426, 427, 429, 430, 432, 437, 438, 439, 440, 444, 446, 447, 450, 454, 457, 458, 460, 461, 464, 465, 466, 467, 468, 469, 470, 471, 473, 474, 477, 482, 483, 490, 491, 493, 495, 497, 498, 499, 500, 501, 502, 504, 505, 507, 508, 514, 515, 527, 530, 532, 534, 535, 540, 552, 553, 554, 557, 558, 559], "data_extend": [67, 68, 69, 70, 71, 72, 73, 74, 75, 76], "data_nbyt": [181, 182, 191, 194], "data_path": 472, "data_reduct": 377, "data_shap": [96, 97, 100, 104, 105, 181, 182, 191, 194, 459, 508], "data_shape_ax": [182, 191, 194], "data_shape_imag": 194, "data_spectr": [67, 68, 69, 70, 71, 72, 73, 74, 75, 76], "data_stor": [78, 91, 163, 288, 289, 377, 397, 436, 444, 446, 453, 455, 462, 467, 470, 472, 473, 477, 480, 492, 502, 504, 505], "data_storag": 492, "data_summari": 418, "dataaxi": 403, "databas": [367, 495], "dataclass": 361, "datafram": [83, 86], "dataset": [6, 15, 16, 19, 20, 26, 62, 89, 93, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 114, 115, 116, 117, 119, 120, 121, 124, 125, 126, 127, 131, 132, 133, 134, 136, 141, 142, 148, 153, 156, 158, 159, 160, 163, 164, 165, 168, 169, 170, 190, 200, 205, 206, 207, 208, 209, 210, 211, 212, 213, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 230, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 256, 257, 258, 259, 260, 261, 262, 270, 310, 354, 357, 358, 364, 365, 367, 369, 374, 376, 377, 378, 380, 381, 385, 389, 390, 391, 393, 395, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 412, 413, 414, 415, 416, 419, 421, 422, 423, 424, 425, 426, 427, 429, 432, 434, 437, 438, 444, 445, 446, 448, 450, 455, 457, 458, 463, 466, 467, 469, 470, 471, 473, 475, 477, 481, 492, 493, 495, 500, 502, 503, 504, 505, 507, 515, 519, 521, 549, 550, 552, 553, 554, 555, 556, 557], "dataset1": [468, 491], "dataset1_prior": 468, "dataset2": [468, 491], "dataset2_prior": 468, "dataset_1": 493, "dataset_2": 493, "dataset_3fgl": 432, "dataset_3fhl": 432, "dataset_cta": 459, "dataset_empti": [431, 434, 436, 437, 444, 453, 459, 462, 472, 504], "dataset_energy_depend": 445, "dataset_fak": 437, "dataset_fp": 454, "dataset_gammacat": 432, "dataset_hawc": 443, "dataset_hess": [443, 460], "dataset_imag": [444, 459], "dataset_kwarg": [88, 103], "dataset_lc": 454, "dataset_mak": [434, 436, 444, 453, 462, 504], "dataset_nam": [103, 107, 124, 211, 219, 233, 383, 389, 442, 446, 447, 450, 459, 465, 480, 515], "dataset_on_off": [158, 164, 165, 168, 430, 434, 436, 437, 440, 444, 453, 462, 504, 505], "dataset_on_off1": 430, "dataset_onoff": 373, "dataset_simul": 436, "dataset_stack": [434, 442], "datasetmodel": [233, 248, 383, 409, 446, 447, 450], "datasetread": 101, "datasets1": 358, "datasets2": 358, "datasets3": 358, "datasets_fil": [16, 435, 439, 440, 442, 479], "datasets_hess": 443, "datasets_in_phase_bin_3": 385, "datasets_mak": 462, "datasets_nam": [19, 20, 26, 205, 206, 207, 208, 209, 210, 211, 212, 213, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 230, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 256, 257, 258, 259, 260, 261, 262, 408, 443, 465, 479, 515], "datasets_read": [465, 471], "datasets_sl": 459, "datasetsconfig": 16, "datasetsmak": [161, 414, 426, 462, 467, 495], "datasetsmetadata": 388, "datasetwrit": 102, "datastor": [16, 85, 91, 163, 288, 289, 367, 371, 376, 393, 397, 403, 414, 415, 417, 418, 420, 426, 427, 431, 434, 435, 436, 439, 440, 442, 444, 446, 450, 453, 455, 462, 467, 472, 473, 477, 479, 495, 502, 504, 505, 555], "datastorecheck": 421, "datastoreindex": 371, "datastoreinmemori": 371, "datastoremak": [403, 414], "datastoremetadata": 388, "datastoreobserv": [164, 367, 371, 407, 420], "datastorexml": 371, "datasum": [79, 82, 84, 95, 96, 97, 100, 101, 102, 104, 105, 117, 119, 140, 141, 142, 148, 153, 156, 183, 184, 186, 190, 192, 195, 196], "datat": [83, 86], "date": [83, 86, 99, 118, 342, 378, 386, 387, 388, 390, 398, 420, 435, 438, 466, 473, 479, 511, 512, 513, 514, 515, 516, 517, 518, 519, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 542, 543, 544, 545, 546, 547, 548, 549, 550, 559], "datefmt": [16, 435, 439, 440, 442, 479, 555], "dateref": 438, "datetim": [99, 118, 388], "datetime64": [83, 86], "datfix": 438, "daughter": 388, "david": [371, 376, 401, 421, 422], "dc": [442, 470], "dc1": [370, 381, 422, 446, 455, 461, 465, 470], "dc2": 370, "ddof": 451, "de": [19, 20, 26, 65, 95, 205, 206, 209, 213, 215, 216, 217, 227, 228, 230, 234, 236, 238, 239, 240, 244, 249, 251, 252, 253, 254, 257, 261, 287, 387, 409, 412, 415, 457, 473, 554], "deactiv": 392, "dead": [79, 82, 84, 320, 371], "dead_tim": [79, 84, 320], "deadc": 371, "deadlin": [370, 374], "deadtim": [84, 176, 437, 446, 450, 470], "deadtime_fract": 84, "deal": [82, 361, 367, 376, 377, 437, 446, 453, 475, 495], "debanjan": 403, "debian": [378, 394, 416], "debug": [11, 361, 367, 372, 377, 423, 434, 463, 495, 555], "dec": [65, 79, 81, 83, 84, 86, 89, 132, 133, 166, 361, 362, 366, 370, 372, 374, 377, 378, 381, 399, 425, 430, 434, 436, 438, 440, 444, 447, 452, 453, 455, 458, 462, 464, 470, 471, 472, 473, 480, 481, 483, 495, 499, 504, 559], "dec_pnt": 473, "dec_tru": 374, "decad": [17, 18, 21, 22, 24, 25, 27, 107, 188, 266, 427, 446], "decai": [17, 18, 20, 21, 22, 23, 24, 25, 27, 218, 224, 241, 384, 446, 451, 454, 466, 483, 545], "decemb": 399, "decid": [361, 367, 370, 371, 372, 373, 375, 376, 380, 383, 384, 385, 390, 435, 467, 479, 559], "decim": [83, 86, 286], "decis": [361, 362], "declar": [15, 83, 86, 248, 340, 341, 364, 368, 369, 372, 377, 378, 384, 391, 408, 494], "decor": [340, 341, 361, 388, 555], "decorrel": [19, 20, 26, 205, 206, 209, 213, 215, 216, 217, 221, 227, 228, 230, 234, 236, 238, 239, 240, 244, 249, 251, 252, 253, 254, 257, 261], "decoupl": 67, "dedic": [364, 375, 376, 385, 387, 388, 391, 407, 408, 409, 427, 434, 435, 436, 442, 455, 460, 479, 480, 492], "deduc": [385, 427], "deep": [16, 19, 20, 26, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 80, 82, 83, 86, 94, 95, 96, 97, 99, 100, 104, 105, 118, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 215, 216, 217, 218, 220, 221, 222, 223, 224, 225, 226, 227, 228, 230, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 244, 245, 246, 247, 249, 250, 251, 252, 253, 254, 256, 257, 259, 261, 262, 442], "deepcopi": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 83, 86, 256, 258, 260], "def": [16, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 80, 99, 118, 273, 340, 341, 361, 362, 372, 373, 374, 375, 384, 385, 388, 389, 442, 460, 466, 468, 477, 504, 555, 557], "def_unit": [430, 437, 439, 442, 444, 450, 454, 470], "default": [11, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 45, 46, 47, 63, 65, 74, 76, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 91, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 107, 108, 109, 111, 112, 114, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 147, 148, 150, 151, 152, 153, 154, 155, 156, 158, 159, 160, 163, 164, 166, 167, 169, 170, 171, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 202, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 230, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 256, 257, 258, 259, 260, 261, 262, 263, 264, 266, 268, 270, 271, 272, 273, 274, 275, 279, 280, 281, 286, 287, 288, 290, 301, 302, 303, 308, 310, 311, 317, 318, 319, 320, 322, 323, 328, 330, 332, 338, 343, 344, 348, 350, 351, 352, 354, 355, 357, 358, 361, 367, 373, 377, 378, 384, 387, 391, 397, 403, 405, 406, 407, 409, 412, 414, 420, 421, 423, 424, 425, 426, 427, 435, 436, 438, 440, 442, 446, 447, 453, 454, 458, 459, 460, 461, 462, 463, 464, 465, 466, 468, 471, 479, 480, 481, 491, 493, 495, 502, 505, 506, 507, 508, 512, 513, 514, 521, 527, 530, 531, 555, 559], "default_alpha": [21, 27], "default_beta": 27, "default_css": [83, 86], "default_css_nb": [83, 86], "default_epoch": 344, "default_gamma": 27, "default_hdu_t": 78, "default_interp_kwarg": [137, 138, 139, 140, 143, 144, 145, 147, 150, 152, 154, 155, 419], "default_nam": [83, 86], "default_notebook_table_class": [83, 86], "default_obs_t": 78, "default_paramet": [19, 20, 26, 205, 206, 207, 208, 209, 210, 212, 213, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 230, 234, 235, 236, 237, 238, 239, 240, 241, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 256, 257, 258, 259, 260, 261, 262, 389], "default_scale_radiu": [17, 21, 22, 24, 25, 27], "default_unit": [137, 138, 143, 145, 150, 155, 461], "defer": [100, 105], "defin": [15, 16, 19, 20, 26, 28, 29, 30, 31, 32, 33, 35, 36, 37, 39, 40, 42, 43, 44, 45, 46, 47, 52, 53, 79, 80, 83, 84, 86, 90, 96, 97, 98, 99, 100, 103, 104, 105, 109, 111, 116, 117, 118, 119, 120, 121, 123, 124, 127, 140, 141, 142, 144, 148, 151, 152, 153, 154, 156, 159, 160, 164, 169, 181, 182, 183, 184, 186, 187, 188, 191, 192, 193, 194, 195, 196, 200, 201, 203, 205, 206, 207, 208, 209, 210, 211, 212, 213, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 230, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 256, 257, 258, 259, 260, 261, 262, 273, 275, 281, 282, 302, 312, 317, 318, 319, 320, 323, 351, 352, 361, 362, 364, 366, 367, 370, 372, 373, 374, 375, 376, 377, 378, 382, 383, 385, 386, 387, 388, 389, 392, 393, 394, 395, 402, 403, 406, 409, 412, 415, 419, 420, 425, 426, 427, 435, 437, 438, 439, 440, 442, 443, 445, 448, 450, 451, 454, 455, 458, 459, 460, 461, 462, 463, 465, 466, 467, 468, 470, 471, 472, 479, 481, 491, 492, 493, 495, 497, 500, 504, 505, 507, 512, 514, 516, 517, 518, 521, 522, 525, 526, 528, 529, 531, 533, 534, 536, 537, 538, 539, 540, 550, 552, 553, 554, 555, 556, 557, 558], "definit": [79, 80, 82, 84, 95, 97, 99, 100, 104, 105, 118, 160, 191, 273, 287, 301, 361, 370, 371, 375, 382, 383, 384, 385, 388, 404, 408, 409, 425, 427, 436, 439, 448, 453, 461, 462, 479, 491, 493, 500, 501, 506, 508, 512, 513, 557], "deform": 508, "deg": [16, 33, 34, 38, 47, 65, 79, 81, 83, 86, 89, 91, 97, 100, 104, 105, 107, 108, 109, 111, 112, 116, 121, 122, 127, 132, 133, 142, 144, 145, 150, 151, 152, 153, 154, 155, 156, 158, 166, 167, 169, 171, 182, 183, 184, 186, 189, 191, 192, 194, 195, 196, 211, 212, 220, 223, 233, 237, 245, 246, 248, 288, 289, 322, 356, 361, 362, 372, 375, 377, 384, 385, 388, 397, 430, 431, 434, 435, 436, 437, 438, 439, 440, 442, 443, 444, 445, 446, 447, 448, 450, 452, 453, 454, 455, 457, 458, 459, 461, 462, 463, 464, 465, 466, 467, 470, 471, 472, 473, 479, 480, 481, 492, 493, 495, 497, 499, 502, 504, 505, 506, 507, 508, 512, 513, 514, 515, 516, 517, 518, 519], "deg2": 473, "degre": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 97, 100, 104, 105, 107, 108, 114, 117, 119, 134, 182, 183, 184, 186, 189, 194, 195, 196, 211, 233, 237, 248, 259, 427, 430, 431, 435, 440, 445, 453, 458, 462, 463, 464, 470, 479, 493, 507, 508, 557, 558], "deil": [366, 367, 368, 369, 370, 371, 372, 373, 375, 377, 378, 379, 380, 381, 400, 401, 402, 403, 404, 405, 406, 407, 413, 416, 417, 418, 419, 420, 421, 422], "deiml": 420, "dej2000": [458, 481], "del": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 83, 86, 372], "delai": [382, 386], "deleg": 377, "delet": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 82, 361, 372, 391, 392, 393, 395, 427, 465], "delete_interv": 82, "delimit": 119, "deliv": 377, "delta": [19, 20, 23, 83, 86, 116, 117, 122, 125, 127, 145, 193, 239, 240, 271, 286, 426, 460, 468, 493, 500, 501, 513, 514, 516, 557], "delta_t": [114, 271, 445], "demonstr": [377, 402, 405, 406, 407, 408, 409, 414, 426, 427, 451, 452, 463, 465, 475, 507], "denot": [97, 104, 385, 491], "densiti": [17, 18, 21, 22, 24, 25, 27, 28, 30, 35, 36, 39, 40, 45, 52, 119, 145, 196, 316, 319, 354, 374, 440, 442, 457, 458, 468, 483, 485, 489, 499, 500, 501, 554], "dep": 426, "depend": [11, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 79, 84, 95, 97, 98, 103, 104, 114, 117, 119, 137, 138, 139, 140, 143, 144, 145, 147, 150, 152, 153, 154, 155, 156, 170, 181, 182, 191, 194, 196, 211, 225, 233, 248, 290, 341, 361, 363, 364, 365, 367, 372, 373, 374, 375, 376, 379, 380, 385, 387, 388, 389, 390, 391, 392, 393, 394, 395, 399, 401, 405, 406, 409, 416, 418, 421, 422, 424, 426, 427, 429, 430, 433, 437, 439, 440, 449, 453, 458, 460, 461, 462, 463, 464, 465, 467, 468, 470, 471, 475, 491, 492, 495, 499, 500, 503, 504, 507, 521, 552], "deploy": 387, "deposit": 387, "deprec": [16, 79, 80, 81, 84, 99, 118, 120, 121, 124, 201, 203, 403, 412, 425, 426, 427, 519], "deprecated_argument_funct": 361, "deprecated_argument_function_kwarg": 361, "deprecated_attribut": 361, "deprecated_funct": 361, "deprecated_renamed_argu": 361, "deprecatedparseprotocol": [16, 80, 99, 118], "deprecation_polici": 386, "depriv": 502, "depth": [16, 80, 99, 118, 329, 393, 398, 451, 521], "deriv": [17, 18, 21, 22, 24, 25, 27, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 50, 51, 54, 95, 116, 120, 124, 127, 259, 361, 373, 374, 379, 382, 385, 438, 470, 472, 493, 507, 556, 557], "describ": [27, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 78, 90, 119, 120, 122, 127, 152, 192, 200, 261, 282, 362, 364, 366, 367, 370, 371, 373, 374, 375, 377, 378, 380, 381, 384, 385, 386, 387, 398, 404, 412, 420, 421, 435, 438, 446, 447, 451, 460, 466, 468, 470, 472, 473, 479, 491, 495, 499, 508, 509, 554, 555, 556, 557], "descript": [56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 83, 86, 121, 200, 362, 366, 367, 375, 381, 386, 387, 398, 423, 427, 442, 450, 458, 460, 463, 470, 472, 479, 480, 495], "description_width": [442, 450, 463, 479, 480], "descriptionstyl": [442, 450, 463, 479, 480], "descriptor": [83, 84, 86, 97, 100, 104, 105, 258, 299, 362, 408], "desi": 473, "design": [366, 367, 370, 371, 374, 375, 377, 381, 383, 385, 386, 400, 420, 427], "desir": [16, 80, 83, 86, 99, 118, 151, 181, 182, 191, 194, 336, 337, 338, 463, 481, 508], "desktop": 398, "destin": 11, "detail": [19, 20, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 79, 83, 86, 95, 97, 100, 105, 119, 120, 141, 142, 148, 153, 156, 159, 182, 194, 196, 200, 201, 205, 208, 209, 211, 212, 213, 215, 216, 217, 218, 220, 221, 222, 223, 224, 225, 226, 227, 228, 230, 233, 237, 238, 239, 240, 241, 244, 245, 246, 247, 249, 252, 253, 254, 258, 259, 260, 361, 362, 364, 366, 369, 370, 371, 374, 375, 376, 380, 381, 382, 386, 387, 390, 392, 396, 398, 399, 406, 410, 411, 429, 430, 434, 436, 437, 438, 439, 444, 445, 446, 449, 450, 454, 459, 460, 462, 463, 464, 465, 466, 468, 470, 472, 473, 475, 481, 491, 492, 494, 500, 504, 505, 507, 552, 553, 554, 555, 559], "detect": [59, 132, 133, 270, 351, 352, 362, 377, 380, 381, 383, 400, 406, 407, 408, 418, 420, 421, 427, 429, 441, 458, 470, 472, 475, 491, 507, 554, 557], "detect_t": 381, "detector": [79, 84, 98, 103, 145, 464, 472, 500, 554], "determin": [19, 20, 26, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 83, 86, 107, 126, 144, 150, 152, 154, 166, 167, 169, 171, 205, 206, 209, 213, 215, 216, 217, 221, 227, 228, 230, 234, 236, 238, 239, 240, 244, 249, 251, 252, 253, 254, 257, 259, 261, 290, 312, 372, 376, 379, 387, 414, 426, 427, 430, 436, 439, 440, 445, 452, 462, 464, 485, 553], "determinist": 361, "deti": [79, 98, 103, 374, 470], "detx": [79, 98, 103, 374, 470], "dev": [11, 16, 78, 80, 99, 118, 361, 363, 364, 377, 387, 390, 391, 430, 431, 434, 435, 436, 437, 438, 439, 440, 442, 443, 444, 445, 446, 447, 448, 452, 453, 454, 455, 457, 458, 459, 460, 462, 463, 464, 465, 466, 468, 470, 471, 472, 473, 479, 480, 481, 519, 521, 549, 550], "dev286": [99, 118, 398, 430, 431, 434, 435, 436, 437, 438, 439, 440, 442, 443, 444, 445, 446, 447, 448, 452, 453, 454, 455, 457, 458, 459, 460, 462, 463, 464, 465, 466, 468, 470, 471, 472, 473, 479, 480, 481, 511, 512, 513, 514, 515, 516, 517, 518, 519, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 542, 543, 544, 545, 546, 547, 548, 549, 550], "develop": [362, 366, 367, 369, 370, 371, 372, 374, 375, 377, 378, 380, 381, 382, 383, 384, 386, 387, 389, 390, 391, 394, 398, 400, 413, 420, 421, 422, 470], "deviat": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 42, 120, 184, 196, 200, 277, 460, 468], "devoid": [434, 498], "devop": 387, "devot": 475, "dex": 290, "df": [83, 86, 114, 134, 445, 460, 557], "diagnosi": 370, "diagnost": 377, "diagon": [140, 141, 142, 379, 389, 471], "diagram": 559, "dialog": [393, 395], "diamet": [182, 183, 184, 431], "diamond": 467, "dict": [15, 16, 19, 20, 26, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 66, 67, 78, 79, 80, 82, 83, 84, 85, 86, 87, 88, 91, 94, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 108, 112, 114, 117, 118, 119, 120, 121, 122, 124, 125, 127, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 147, 148, 150, 151, 152, 153, 154, 155, 156, 157, 158, 168, 181, 182, 183, 184, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 199, 200, 205, 206, 207, 208, 209, 210, 211, 212, 213, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 230, 233, 234, 235, 236, 237, 238, 239, 240, 241, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 256, 257, 258, 259, 260, 261, 262, 265, 270, 271, 272, 273, 274, 278, 288, 302, 310, 311, 328, 329, 330, 332, 342, 343, 344, 345, 348, 349, 350, 354, 355, 356, 357, 358, 361, 376, 378, 382, 385, 388, 405, 409, 412, 420, 435, 442, 452, 453, 458, 460, 463, 467, 479, 480, 507, 512, 521], "dict_kei": 521, "dictionari": [15, 16, 19, 20, 26, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 67, 80, 83, 84, 85, 86, 87, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 108, 114, 117, 118, 119, 120, 121, 124, 125, 127, 134, 137, 138, 139, 140, 141, 142, 143, 144, 145, 147, 148, 150, 152, 153, 154, 155, 156, 157, 158, 168, 181, 182, 183, 184, 186, 187, 189, 190, 191, 192, 194, 195, 196, 200, 201, 203, 205, 206, 207, 208, 209, 210, 211, 212, 213, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 256, 257, 258, 259, 260, 261, 262, 270, 272, 273, 274, 278, 300, 328, 329, 330, 332, 342, 345, 355, 378, 380, 385, 388, 389, 434, 436, 442, 460, 461, 467, 468, 550], "dictionnari": 354, "did": [368, 375, 380, 381, 382, 384, 387, 403, 430, 437, 439, 442, 444, 450, 454, 460, 468, 470], "didn": [79, 84, 368, 371, 375, 378, 483], "diff": [96, 97, 100, 104, 105, 361, 364, 369, 373, 442, 450, 480], "diff_flux": 457, "diff_flux_point": [96, 459], "differ": [26, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 46, 59, 65, 76, 82, 83, 86, 89, 95, 114, 117, 119, 120, 121, 124, 125, 127, 132, 137, 138, 139, 140, 143, 145, 147, 150, 155, 165, 183, 184, 186, 189, 190, 191, 192, 194, 195, 196, 270, 271, 272, 274, 320, 324, 336, 337, 352, 361, 362, 364, 366, 367, 369, 371, 372, 373, 374, 375, 377, 378, 379, 381, 382, 383, 384, 385, 387, 389, 391, 393, 395, 404, 407, 409, 419, 422, 423, 424, 426, 430, 434, 435, 436, 439, 442, 445, 446, 447, 448, 451, 452, 454, 458, 459, 460, 462, 464, 465, 466, 467, 468, 471, 472, 475, 479, 481, 483, 491, 493, 495, 500, 507, 508, 513, 514, 553, 555, 556, 557], "different": 369, "differenti": [23, 75, 117, 119, 126, 183, 184, 186, 188, 192, 195, 196, 234, 248, 263, 264, 317, 367, 372, 379, 385, 419, 463, 466, 471, 481, 493, 554], "differential_flux": 119, "difficult": [372, 375, 391], "diffus": [66, 183, 184, 186, 192, 195, 196, 265, 361, 377, 380, 421, 422, 442, 446, 458, 463, 465, 466, 470, 552], "diffuse_cub": 466, "diffuse_galactic_fermi": 465, "diffuse_iem": [465, 471], "diffuse_iso": [465, 471], "diffuse_model": 265, "difrsp0": [471, 481], "difrsp1": [471, 481], "difrsp2": [471, 481], "difrsp3": [471, 481], "difrsp4": [471, 481], "digit": 361, "dilat": [196, 412], "dim": [150, 319, 417, 418, 444, 554], "dimens": [46, 53, 97, 100, 104, 105, 117, 119, 137, 138, 139, 140, 141, 142, 143, 144, 145, 147, 148, 150, 152, 153, 154, 155, 156, 165, 181, 182, 183, 184, 186, 187, 189, 191, 192, 194, 195, 196, 256, 257, 260, 290, 302, 354, 377, 409, 420, 422, 426, 460, 461, 463, 466, 475, 491, 507, 508, 513], "dimension": [31, 32, 37, 66, 83, 86, 181, 182, 183, 184, 186, 189, 191, 192, 194, 195, 196, 220, 223, 266, 303, 316, 367, 375, 389, 393, 418, 438, 460, 461, 463, 466, 481, 499, 501, 507, 508, 553, 554], "dimensionless": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 79, 145, 253, 254, 289, 448, 466], "dimitri": [412, 414], "dipol": [51, 54], "dirac": 19, "direct": [86, 99, 155, 173, 174, 177, 179, 188, 212, 220, 223, 294, 297, 362, 367, 373, 375, 380, 382, 385, 388, 412, 429, 433, 437, 462, 475, 491, 492, 500, 501, 503, 504, 507, 512, 552, 553, 554], "directional_offset_bi": [430, 437], "directli": [13, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 56, 67, 79, 83, 84, 86, 131, 155, 170, 183, 184, 186, 192, 195, 196, 256, 258, 260, 361, 363, 364, 366, 368, 369, 372, 373, 374, 375, 379, 381, 388, 393, 395, 396, 400, 402, 403, 404, 406, 420, 427, 432, 434, 435, 437, 442, 443, 444, 447, 448, 450, 451, 453, 454, 458, 459, 460, 461, 463, 464, 465, 466, 467, 470, 471, 479, 480, 481, 483, 491, 495, 500, 504, 507, 531, 557], "directori": [11, 78, 83, 361, 377, 435, 445, 473, 479, 481, 492, 495, 555], "dirk": [403, 417, 419], "disabl": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 361, 412], "disable_unicode_literals_warn": 361, "disadvantag": 555, "disagr": 366, "disambigu": 366, "disc": [439, 440, 442, 447], "discard": [388, 458], "discard_on_copi": [83, 86], "discarded_ind": 458, "discarded_spati": 458, "discarded_t": 458, "disccus": 370, "discourag": 361, "discov": 555, "discret": [86, 286, 374, 460, 507], "discuss": [13, 59, 261, 361, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 391, 398, 420, 468, 473, 483, 484, 559], "disjoint": 375, "disk": [78, 105, 142, 145, 184, 194, 196, 212, 223, 225, 339, 360, 361, 371, 372, 373, 377, 384, 385, 429, 430, 434, 442, 443, 463, 464, 465, 466, 506, 509, 514, 518, 520], "disk_inc": 375, "diskspatialmodel": [70, 242, 384, 405, 426, 465, 466, 512], "dismiss": 95, "disp": [499, 500], "dispatch": 372, "dispers": [78, 84, 97, 98, 100, 102, 103, 104, 105, 106, 108, 110, 140, 141, 142, 145, 163, 169, 170, 173, 174, 177, 361, 367, 372, 373, 374, 406, 408, 418, 419, 420, 422, 430, 431, 434, 435, 442, 446, 462, 472, 473, 479, 480, 491, 500, 503, 554], "displac": 294, "displai": [11, 15, 78, 83, 86, 112, 124, 127, 200, 278, 311, 354, 358, 361, 362, 391, 412, 415, 426, 427, 430, 431, 434, 435, 436, 437, 438, 439, 442, 443, 444, 445, 446, 448, 450, 452, 454, 455, 458, 459, 460, 462, 463, 465, 466, 470, 471, 472, 473, 480, 495, 555], "display_length": [83, 86], "disrupt": [401, 402], "dissolv": 405, "dist": [313, 391], "distanc": [17, 18, 21, 22, 23, 24, 25, 27, 41, 46, 47, 121, 132, 133, 191, 234, 260, 286, 293, 319, 375, 418, 425, 436, 438, 448, 457, 458, 460, 489, 504, 531], "distance_gc": [17, 18, 21, 22, 24, 25, 27, 457], "distance_max": [46, 47, 319, 458], "distance_min": [47, 319, 458], "distance_refer": 458, "distinct": [376, 377, 382, 472, 558], "distinguish": [272, 274, 385, 388, 430, 463], "distort": [375, 404], "distribut": [13, 28, 29, 30, 31, 32, 33, 35, 36, 37, 39, 40, 42, 45, 46, 79, 103, 134, 145, 180, 217, 228, 234, 272, 274, 312, 313, 317, 354, 357, 359, 360, 361, 365, 366, 369, 374, 379, 380, 383, 386, 387, 391, 394, 405, 414, 420, 426, 427, 430, 434, 436, 437, 440, 442, 446, 448, 450, 452, 460, 465, 468, 470, 481, 483, 495, 499, 500, 502, 508, 516, 531, 556, 557], "divers": 385, "divid": [182, 188, 193, 382, 385, 446, 467, 472, 473], "djangoproject": 381, "djuvsland": 427, "dl3": [6, 16, 78, 79, 82, 84, 86, 91, 137, 138, 139, 140, 143, 144, 145, 147, 150, 152, 154, 155, 163, 169, 187, 188, 288, 289, 362, 367, 369, 370, 372, 381, 388, 393, 397, 403, 406, 408, 414, 423, 427, 431, 434, 435, 436, 439, 440, 442, 452, 453, 462, 464, 467, 477, 479, 480, 491, 495, 497, 498, 499, 501, 502, 504, 505, 553, 554], "dl4": [94, 96, 97, 100, 104, 105, 112, 116, 120, 124, 127, 148, 169, 367, 388, 393, 408, 454, 459, 460, 495, 553, 554], "dl5": [112, 116, 120, 124, 127, 388, 427, 454, 460, 553, 554], "dl6": [112, 116, 120, 124, 127, 553, 554], "dm": [19, 20, 26, 390, 408, 423, 457, 466], "dm_exampl": 483, "dmfitfunct": 483, "dmpipe": 483, "dmprofil": [17, 21, 22, 23, 24, 25, 27, 457], "dmsky": 483, "dn": [217, 228, 457], "dnde": [19, 20, 26, 65, 117, 118, 119, 126, 128, 129, 130, 205, 206, 209, 213, 215, 216, 217, 221, 227, 228, 230, 234, 236, 238, 239, 240, 244, 249, 251, 252, 253, 254, 257, 261, 263, 385, 412, 432, 434, 435, 444, 448, 458, 459, 466, 471, 479, 481, 493], "dnde_cu": 264, "dnde_err": [117, 119, 493], "dnde_errn": [65, 117, 119, 458], "dnde_error": [19, 20, 26, 205, 206, 209, 213, 215, 216, 217, 221, 227, 228, 230, 234, 236, 238, 239, 240, 244, 249, 251, 252, 253, 254, 257, 261], "dnde_errp": [65, 117, 119, 458], "dnde_ref": [117, 119, 385], "dnde_ul": [65, 117, 119, 458, 481], "do": [13, 16, 19, 20, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 79, 80, 90, 95, 99, 118, 140, 151, 201, 205, 208, 209, 212, 213, 215, 216, 217, 218, 220, 221, 222, 223, 224, 225, 226, 227, 228, 230, 237, 238, 239, 240, 241, 244, 245, 246, 247, 249, 252, 253, 254, 259, 260, 314, 354, 362, 364, 366, 367, 368, 371, 375, 376, 377, 378, 379, 380, 381, 384, 385, 388, 390, 391, 393, 395, 406, 432, 434, 435, 437, 438, 439, 440, 442, 444, 445, 446, 450, 454, 455, 457, 458, 459, 460, 462, 463, 464, 465, 466, 470, 471, 479, 480, 481, 491, 495, 507, 552, 555, 558, 559], "do_someth": 361, "doc": [11, 13, 16, 79, 80, 83, 86, 99, 118, 140, 182, 188, 191, 194, 200, 211, 233, 290, 326, 361, 362, 364, 366, 369, 375, 377, 378, 380, 381, 390, 397, 398, 400, 406, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 430, 431, 434, 435, 436, 437, 438, 439, 440, 442, 443, 444, 445, 446, 447, 448, 450, 452, 453, 454, 455, 457, 458, 459, 460, 462, 463, 464, 465, 466, 468, 470, 471, 472, 473, 479, 480, 481, 483, 508, 519, 521, 527, 530, 543, 549, 550, 554, 555, 559], "docker": [378, 391], "dockerfil": [369, 390, 391], "docstr": [361, 381, 387, 412, 413, 414, 416, 419, 425, 426, 427, 466], "doctest": [151, 349, 362], "document": [11, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 50, 51, 52, 53, 54, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 112, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 150, 151, 152, 153, 154, 155, 156, 158, 159, 160, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 256, 257, 258, 259, 260, 261, 262, 272, 274, 298, 302, 312, 335, 348, 361, 363, 365, 366, 368, 369, 371, 375, 377, 378, 380, 382, 384, 386, 387, 391, 392, 397, 398, 399, 406, 408, 409, 412, 414, 415, 416, 418, 419, 420, 421, 422, 423, 424, 425, 426, 463, 465, 470, 472, 473, 495, 506, 507, 508, 555], "doe": [16, 80, 83, 86, 99, 118, 120, 124, 143, 153, 156, 190, 225, 259, 270, 361, 362, 368, 369, 371, 373, 375, 376, 378, 380, 381, 384, 385, 387, 388, 403, 412, 423, 430, 434, 437, 439, 442, 444, 445, 458, 460, 461, 462, 463, 464, 472, 483, 495, 504, 555], "doesn": [67, 361, 362, 366, 368, 369, 375, 378, 379, 381, 470, 471, 555], "dof": 557, "doi": [134, 387], "domain": [183, 184, 186, 192, 195, 196, 361, 375, 451], "domenico": 418, "dominguez": [213, 214, 384, 521], "dominquez": 213, "don": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 83, 86, 140, 360, 361, 364, 366, 368, 369, 378, 388, 391, 431, 434, 439, 444, 452, 464, 466, 483, 553, 555, 558, 559], "donath": [370, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427], "done": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 83, 86, 117, 120, 354, 361, 362, 364, 366, 367, 368, 372, 374, 375, 376, 377, 379, 380, 381, 384, 385, 387, 393, 397, 421, 426, 431, 437, 442, 443, 447, 448, 450, 454, 455, 459, 462, 463, 466, 467, 491, 495, 503, 504, 508, 540, 557, 559], "dos2unix": 361, "dot": [50, 51, 54, 104, 105, 183, 184, 186, 192, 195, 196, 426], "doubl": [27, 116, 128, 278, 387, 419, 427], "doubling_dict": 278, "down": [50, 51, 54, 127, 366, 368, 371, 375, 380, 404, 459, 471, 558], "downgrad": [182, 360], "download": [65, 89, 96, 119, 364, 369, 377, 378, 381, 388, 390, 392, 393, 395, 397, 401, 402, 404, 405, 412, 421, 422, 423, 430, 431, 432, 434, 435, 436, 437, 438, 439, 440, 442, 443, 444, 445, 446, 447, 448, 450, 451, 452, 453, 454, 455, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 470, 471, 472, 473, 475, 477, 479, 480, 481, 509, 511, 512, 513, 514, 515, 516, 517, 518, 519, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 542, 543, 544, 545, 546, 547, 548, 549, 550, 555], "downsampl": [97, 100, 104, 105, 127, 137, 138, 139, 140, 141, 142, 143, 144, 145, 147, 148, 150, 152, 153, 154, 155, 156, 181, 182, 183, 184, 185, 186, 187, 188, 191, 192, 193, 194, 195, 196, 403, 409, 418, 459], "downsampled_energi": 459, "downsampling_factor": [127, 444], "downward": [272, 274], "dozen": 361, "dpp": 387, "dr": [17, 18, 21, 22, 24, 25, 27, 514], "dr1": [16, 63, 78, 79, 82, 84, 86, 91, 145, 163, 254, 288, 289, 362, 369, 381, 397, 429, 431, 434, 435, 440, 442, 453, 462, 467, 477, 479, 480, 492, 495, 497, 498, 499, 501, 502, 504, 505, 509, 541], "dr2": [63, 254, 412, 429, 509, 541], "dr3": [63, 253, 429, 466, 509, 541], "dr4": [63, 427], "draft": [361, 365, 366, 389, 421], "drag": 364, "draw": [33, 184, 312, 374, 468], "drawback": [376, 380], "drawn": [312, 374], "drift": [81, 89, 90, 423], "drive": 377, "driven": [11, 15, 367, 377, 379, 381, 420, 475, 494], "drop": [52, 53, 97, 100, 104, 105, 117, 119, 124, 141, 142, 148, 153, 156, 181, 182, 183, 184, 186, 187, 191, 192, 194, 195, 196, 212, 219, 258, 346, 365, 366, 377, 378, 383, 402, 405, 406, 409, 412, 419, 422, 446, 463, 491], "ds9": [79, 182, 191, 194, 198, 211, 233, 361, 362, 375, 404, 464, 466, 508], "ds9parser": 375, "dss": 371, "dt": [83, 86], "dtime_t": 451, "dtype": [33, 38, 83, 86, 106, 110, 138, 140, 143, 181, 182, 183, 184, 186, 191, 192, 194, 195, 196, 211, 233, 290, 361, 389, 436, 439, 448, 458, 459, 461, 462, 463, 470, 471, 481, 493], "duck": [16, 80, 99, 118], "due": [59, 83, 86, 361, 389, 415, 463, 468, 470, 531, 555], "dummi": [104, 105, 375, 439, 495], "dump": [16, 80, 99, 118, 377], "dumps_kwarg": [16, 80, 99, 118], "duplic": [83, 86, 95, 141, 361, 362, 364, 367, 381, 382, 385, 409, 412], "durat": [79, 82, 84, 89, 437, 446, 450, 453, 470, 492, 495], "dure": [16, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 50, 52, 53, 79, 80, 81, 84, 90, 97, 99, 100, 104, 105, 118, 160, 270, 362, 369, 373, 377, 380, 381, 383, 386, 387, 388, 389, 390, 391, 406, 409, 426, 427, 435, 436, 446, 452, 453, 459, 462, 464, 468, 480, 491, 492, 554, 558], "dust": 213, "duti": 387, "dwarf": 483, "dx": [33, 294], "dy": [33, 294], "dynam": [358, 492], "dz": 294, "e": [13, 16, 19, 20, 26, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 46, 47, 50, 51, 54, 59, 65, 66, 78, 79, 80, 81, 82, 83, 86, 90, 99, 108, 118, 119, 132, 140, 141, 142, 143, 145, 176, 182, 183, 184, 186, 188, 190, 192, 194, 195, 196, 200, 201, 203, 205, 206, 208, 209, 212, 213, 215, 216, 217, 218, 220, 221, 222, 223, 224, 225, 226, 227, 228, 230, 234, 236, 237, 238, 239, 240, 241, 244, 245, 246, 247, 249, 251, 252, 253, 254, 257, 259, 260, 261, 272, 274, 278, 290, 292, 296, 322, 329, 339, 350, 351, 356, 360, 361, 362, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 383, 384, 385, 386, 387, 388, 390, 391, 393, 394, 395, 397, 398, 400, 401, 402, 406, 412, 413, 414, 418, 420, 421, 422, 426, 429, 431, 432, 434, 435, 436, 437, 440, 443, 444, 445, 446, 447, 448, 450, 451, 452, 453, 455, 457, 458, 459, 460, 463, 464, 465, 466, 467, 468, 470, 471, 472, 474, 475, 477, 479, 480, 481, 483, 490, 491, 492, 493, 495, 499, 500, 505, 506, 507, 512, 513, 514, 521, 522, 524, 525, 526, 528, 529, 533, 534, 536, 537, 538, 539, 549, 552, 554, 555, 556, 557, 558, 559, 560], "e2dnd": [19, 20, 26, 117, 118, 119, 126, 128, 129, 130, 205, 206, 209, 213, 215, 216, 217, 221, 227, 228, 230, 234, 236, 238, 239, 240, 244, 249, 251, 252, 253, 254, 257, 261, 385, 412, 419, 430, 432, 434, 435, 436, 443, 458, 481, 493, 495, 531], "e2dnde_err": [117, 119], "e2dnde_errn": [117, 119, 458], "e2dnde_errp": [117, 119, 458], "e2dnde_ref": [117, 119], "e2dnde_ul": [117, 119, 458], "e501": [19, 20, 120, 140, 176, 187, 188, 194, 213, 265, 358], "e_": [19, 20, 26, 50, 52, 53, 140, 205, 206, 209, 213, 215, 216, 217, 221, 227, 228, 230, 234, 236, 238, 239, 240, 244, 249, 251, 252, 253, 254, 257, 261, 491, 497, 499, 500, 501, 522, 526, 534, 536, 537], "e_0": [215, 216, 217, 227, 228, 239, 240, 249, 252, 253, 254, 525, 526, 529, 531, 533, 536, 537, 538, 539], "e_b": 384, "e_cut": [65, 458], "e_cutoff": 531, "e_d": [239, 240], "e_edg": 409, "e_max": [65, 119, 385, 430, 434, 435, 436, 447, 452, 458, 459, 460, 463, 468, 481, 493], "e_min": [65, 119, 385, 430, 434, 435, 436, 447, 452, 458, 459, 460, 463, 468, 471, 481, 493], "e_peak": [217, 228], "e_reco": [106, 110, 140, 145, 455, 554], "e_ref": [65, 119, 385, 430, 434, 435, 452, 458, 479, 481, 493], "e_refe_mine_maxdndednde_errpdnde_errndnde_ulsqrt_tsis_ul": 432, "e_refe_mine_maxdndednde_errtssqrt_tsnprednpred_excessstatstat_nullcountssuccess": 444, "e_sn": [43, 44, 52], "e_tru": [106, 110, 145, 455, 471, 554], "each": [11, 19, 20, 26, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 65, 76, 82, 83, 86, 87, 95, 97, 100, 103, 104, 105, 109, 111, 112, 114, 116, 117, 119, 120, 124, 126, 127, 128, 129, 130, 132, 134, 137, 138, 139, 140, 141, 142, 143, 144, 145, 147, 148, 150, 151, 152, 153, 154, 155, 156, 159, 164, 165, 180, 181, 182, 183, 184, 186, 187, 188, 190, 191, 192, 193, 194, 195, 196, 200, 205, 206, 208, 209, 211, 212, 213, 215, 216, 217, 220, 221, 223, 227, 228, 230, 233, 234, 235, 236, 238, 239, 240, 244, 245, 246, 249, 250, 251, 252, 253, 254, 256, 257, 260, 261, 288, 326, 350, 359, 361, 364, 366, 367, 369, 370, 371, 373, 374, 375, 376, 377, 378, 381, 382, 385, 387, 391, 392, 399, 406, 409, 420, 423, 426, 431, 437, 438, 440, 442, 443, 444, 446, 447, 452, 453, 454, 455, 457, 458, 459, 460, 461, 462, 463, 465, 466, 467, 468, 472, 473, 480, 484, 490, 491, 492, 495, 499, 500, 501, 507, 508, 515, 531, 532, 554, 555, 558, 559], "eager": 377, "earli": [375, 380, 381, 470], "earlier": [368, 387], "earth": [41, 84, 263, 471], "earth_azimuth_angl": [471, 481], "earthloc": [79, 81, 84, 89, 92, 300, 388], "easi": [361, 362, 367, 372, 375, 376, 377, 380, 381, 385, 388, 406, 412, 420, 463, 464, 471, 492, 552, 553, 555, 559], "easier": [361, 367, 372, 380, 385, 420, 423, 470], "easiest": 394, "easili": [83, 86, 119, 367, 372, 373, 377, 388, 393, 394, 452, 453, 460, 461, 463, 471, 481, 555], "ebel": 438, "ebl": [213, 214, 261, 379, 384, 406, 409, 419, 426, 429, 466, 509, 541], "ebl_data_builtin": 521, "ebl_dominguez11": [214, 521], "ebl_franceschini": [214, 261], "ebl_franceschini_2017": 214, "ebl_saldana": 214, "eblabsorbtionnormspectralmodel": 384, "eblabsorptionnormspectralmodel": [243, 384, 409, 466, 521], "ebound": [140, 188, 508], "ebreak": [205, 249, 522, 536], "ec": [455, 466, 508], "eccentr": [212, 220, 223, 512, 513, 514], "echo": 555, "eco": 387, "ecosystem": 388, "ecpl": [65, 76, 215, 216, 217, 270, 384, 418, 432, 458, 466], "ecpl_norm": 527, "ecsv": [59, 62, 373], "ecut": [215, 252, 526, 537], "edelson": [279, 451], "edelson2002": 279, "edg": [97, 100, 104, 105, 112, 114, 116, 120, 123, 124, 127, 136, 137, 138, 139, 140, 141, 143, 144, 145, 147, 150, 152, 154, 155, 163, 164, 169, 180, 181, 182, 183, 184, 185, 186, 187, 188, 191, 192, 193, 194, 195, 196, 212, 354, 375, 385, 403, 409, 412, 430, 443, 444, 445, 446, 447, 451, 461, 462, 463, 464, 471, 472, 479, 512], "edge_max": 512, "edge_min": 512, "edge_width": [212, 465, 512], "edgecolor": [358, 434, 436, 438, 444, 445, 448, 455, 457, 504, 512, 513, 514], "edges_max": [185, 188, 193, 463], "edges_min": [185, 188, 193, 463], "edisp": [16, 78, 83, 84, 91, 97, 100, 101, 104, 105, 106, 110, 140, 141, 142, 145, 149, 163, 169, 170, 173, 174, 248, 288, 289, 362, 371, 372, 373, 374, 377, 407, 409, 412, 418, 419, 420, 430, 431, 434, 435, 436, 437, 438, 439, 440, 442, 444, 446, 447, 450, 453, 454, 459, 462, 467, 470, 471, 472, 473, 479, 491, 499, 500, 554], "edisp2d": [142, 145, 362], "edisp3d": 461, "edisp_": 491, "edisp_2d": [78, 83, 145, 470, 473], "edisp_3d": 461, "edisp_ev": 461, "edisp_kernel": [140, 459, 499], "edisp_kernel_map": [141, 472], "edisp_map": [98, 103, 141, 142, 461, 499], "edisp_new": 461, "edispersionmap": 491, "edispkernel": [100, 106, 110, 141, 145, 173, 407, 499], "edispkernelmap": [97, 100, 101, 104, 105, 108, 142, 148, 149, 153, 156, 163, 170, 173, 408, 409, 438, 462, 471, 495, 499], "edispmap": [97, 98, 100, 103, 104, 105, 141, 148, 149, 153, 156, 163, 170, 173, 174, 373, 374, 382, 402, 405, 406, 407, 409, 412, 461, 499], "edit": [362, 364, 366, 368, 369, 370, 377, 381, 390, 391, 394, 479, 555], "editor": [362, 387, 435, 479, 555], "editori": 387, "edm": 460, "edu": [28, 30, 31, 32, 33, 35, 36, 37, 38, 39, 40, 50, 52, 53, 57, 58, 60, 61, 79, 84, 112, 120, 143, 182, 191, 194, 200, 211, 230, 233, 263, 264, 280, 381, 460, 508], "eemin": 531, "eff": [143, 497, 500, 513, 514], "eff_area": 461, "effarea": 461, "effect": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 45, 46, 78, 83, 84, 86, 100, 102, 142, 143, 169, 170, 175, 177, 178, 191, 211, 233, 351, 352, 361, 366, 371, 372, 374, 375, 385, 416, 418, 434, 446, 448, 451, 452, 468, 472, 473, 475, 479, 500, 508, 513, 514, 554], "effective_area": [149, 374, 470], "effective_livetim": 462, "effective_times_src": 462, "effectivearea3d": 461, "effectiveareat": [373, 400, 412, 416], "effectiveareatable2d": [84, 142, 149, 155, 177, 367, 416, 461, 470, 497], "effici": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 84, 100, 105, 366, 372, 373, 374, 375, 376, 383, 432, 467, 500, 505, 557], "effort": [368, 370, 377, 378, 380, 381, 384, 403, 491], "eflux": [19, 20, 26, 117, 118, 119, 128, 129, 130, 205, 206, 209, 213, 215, 216, 217, 221, 227, 228, 230, 234, 236, 238, 239, 240, 244, 249, 251, 252, 253, 254, 257, 261, 385, 412, 448, 466, 493], "eflux_err": [117, 119, 385], "eflux_errn": [117, 119], "eflux_errp": [117, 119], "eflux_ref": [117, 119], "eflux_ul": [117, 119], "eg": [361, 442, 450, 454, 459, 461, 465, 466], "egal": 470, "egg": 394, "einasto": [21, 483], "either": [65, 78, 83, 84, 86, 90, 105, 117, 119, 145, 160, 181, 182, 183, 184, 186, 188, 189, 190, 191, 192, 194, 195, 196, 225, 273, 290, 320, 350, 362, 364, 366, 368, 375, 377, 380, 383, 387, 393, 412, 426, 435, 442, 448, 454, 459, 460, 466, 468, 479, 491, 493, 495, 506, 508, 552, 555], "ej": [50, 52, 53], "eject": 52, "ejecta": 52, "el": [26, 457], "elabor": [387, 438], "elaps": [79, 370, 554], "electron": [50, 263, 470, 531], "element": [19, 20, 26, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 83, 86, 87, 95, 97, 100, 104, 105, 117, 119, 137, 138, 139, 140, 141, 142, 143, 144, 145, 147, 148, 150, 152, 153, 154, 155, 156, 181, 182, 183, 184, 186, 187, 189, 191, 192, 194, 195, 196, 205, 206, 207, 208, 209, 210, 211, 212, 213, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 230, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 256, 257, 258, 259, 260, 261, 262, 354, 379, 426, 458, 463, 507], "elementtre": 470, "elev": 376, "elif": [361, 375, 388], "elli": [400, 413], "ellips": [212, 375, 508, 512], "ellipseannulusskyregion": [504, 508], "ellipseskyregion": [207, 208, 212, 220, 223, 235, 237, 245, 246, 250, 256, 260, 431, 466, 504], "ellipsoid": 460, "ellipt": [508, 514], "elong": [402, 405, 406, 512, 513], "elpas": 426, "els": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 117, 119, 127, 190, 361, 364, 375, 378, 385, 388, 389, 391, 393, 395, 467, 555, 557], "elsewher": [109, 111], "email": [362, 364, 387, 391], "emax": [124, 238, 264, 439, 445, 534], "emax_fit": 455, "embryon": 377, "emce": [370, 378, 402, 430, 431, 434, 435, 436, 437, 438, 439, 440, 442, 443, 444, 445, 446, 447, 448, 452, 453, 454, 455, 457, 458, 459, 460, 462, 463, 464, 465, 466, 468, 470, 471, 472, 473, 479, 480, 481], "emerg": 371, "emeri": 421, "emin": [124, 238, 264, 439, 445, 534], "emin_fit": 455, "emiss": [52, 66, 128, 367, 372, 376, 434, 440, 442, 443, 446, 465, 470, 471, 491, 505, 531, 552], "emit": [78, 201, 202, 203, 204, 347, 361, 402, 420, 500], "emitt": 434, "emmanoulopoulo": 286, "emmanoulopoulos2010": 286, "emphasi": 460, "empir": 40, "emploi": 436, "empti": [87, 95, 97, 100, 104, 105, 132, 163, 183, 184, 186, 190, 192, 195, 196, 200, 233, 347, 369, 371, 403, 415, 442, 446, 447, 450, 454, 462, 463, 472, 484, 491, 504, 505, 508], "empty_dataset": 430, "empty_i": 454, "empty_map": [97, 100, 104, 105, 445, 462, 504], "emsembl": 88, "en": [34, 79, 83, 84, 86, 120, 176, 191, 200, 261, 290, 364, 381, 430, 437, 439, 442, 444, 450, 454, 460, 461, 464, 470, 492, 506, 508], "enabl": [370, 373, 394, 403, 412, 421, 430, 437, 439, 442, 444, 450, 454, 470], "encapsul": [194, 385, 506], "enclos": [196, 362, 431, 436, 460, 464], "enclosur": [78, 147, 436, 461], "encod": [16, 80, 83, 86, 99, 118], "encompass": [182, 506, 508], "encount": [157, 393, 394, 395, 396, 436, 446, 454, 473, 543, 555], "encourag": [361, 366, 387, 390, 420], "end": [52, 53, 82, 83, 86, 87, 89, 95, 97, 104, 117, 119, 127, 188, 225, 233, 366, 368, 370, 372, 373, 375, 376, 377, 378, 380, 381, 384, 413, 423, 430, 431, 432, 434, 435, 436, 437, 438, 439, 440, 442, 443, 444, 445, 446, 447, 448, 450, 451, 452, 453, 454, 455, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 470, 471, 472, 473, 477, 479, 480, 481, 511, 512, 513, 514, 515, 516, 517, 518, 519, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 542, 543, 544, 545, 546, 547, 548, 549, 550, 557], "end_po": [121, 323, 448], "endswith": 361, "energet": 446, "energi": [16, 19, 20, 26, 44, 50, 51, 52, 53, 58, 61, 62, 65, 69, 71, 72, 76, 78, 79, 84, 91, 95, 96, 97, 98, 100, 102, 103, 104, 105, 106, 107, 108, 110, 112, 114, 116, 117, 119, 120, 121, 124, 126, 127, 128, 129, 130, 131, 134, 135, 136, 137, 138, 140, 141, 142, 143, 144, 145, 150, 151, 152, 153, 154, 155, 156, 163, 165, 169, 170, 172, 173, 174, 176, 177, 179, 181, 182, 183, 184, 186, 188, 189, 191, 192, 194, 195, 196, 205, 206, 207, 208, 209, 210, 211, 212, 213, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 230, 233, 234, 235, 236, 237, 238, 239, 240, 241, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 256, 257, 258, 259, 260, 261, 262, 264, 266, 268, 356, 357, 361, 367, 370, 372, 373, 374, 375, 376, 377, 379, 380, 383, 385, 389, 393, 397, 401, 402, 403, 404, 406, 407, 408, 409, 411, 412, 414, 417, 418, 419, 420, 421, 422, 423, 424, 426, 427, 429, 431, 433, 434, 435, 437, 438, 439, 440, 442, 443, 444, 446, 448, 449, 450, 452, 453, 454, 455, 458, 459, 462, 463, 472, 473, 475, 479, 480, 481, 490, 491, 492, 495, 500, 503, 504, 506, 507, 508, 515, 521, 527, 530, 532, 535, 540, 550, 552, 553, 554, 556], "energy_axes_are_align": 95, "energy_axi": [19, 20, 26, 97, 100, 104, 105, 106, 107, 110, 117, 119, 140, 141, 142, 153, 155, 156, 163, 183, 184, 186, 192, 195, 196, 205, 206, 209, 213, 215, 216, 217, 221, 227, 228, 230, 234, 236, 238, 239, 240, 244, 249, 251, 252, 253, 254, 257, 261, 385, 430, 431, 434, 436, 437, 438, 440, 444, 446, 447, 453, 454, 459, 461, 462, 463, 466, 471, 472, 480, 499, 502, 504, 505, 507, 508], "energy_axis_new": 459, "energy_axis_tru": [97, 100, 104, 105, 106, 107, 108, 110, 140, 141, 142, 143, 145, 150, 151, 153, 163, 362, 406, 430, 431, 434, 436, 437, 438, 440, 444, 446, 447, 450, 453, 454, 455, 459, 461, 462, 471, 472, 480, 499, 502, 504, 505], "energy_bin": 377, "energy_bin_per_decade_max": 107, "energy_bound": [19, 20, 26, 205, 206, 209, 213, 215, 216, 217, 221, 227, 228, 230, 234, 236, 238, 239, 240, 244, 249, 251, 252, 253, 254, 257, 261, 375, 412, 432, 434, 436, 442, 443, 455, 457, 458, 460, 466, 471, 480, 481, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 540], "energy_cent": 258, "energy_column": 385, "energy_depend": 445, "energy_dependent_estim": [429, 445, 449], "energy_edg": [16, 112, 114, 116, 120, 121, 124, 127, 132, 133, 136, 188, 310, 385, 434, 435, 438, 439, 440, 442, 443, 444, 445, 448, 452, 453, 454, 455, 472, 479, 480, 493], "energy_estim": 472, "energy_flux": [19, 20, 26, 205, 206, 209, 213, 215, 216, 217, 221, 227, 228, 230, 234, 236, 238, 239, 240, 244, 249, 251, 252, 253, 254, 257, 261, 466, 481], "energy_flux_err": [19, 20, 26, 205, 206, 209, 213, 215, 216, 217, 221, 227, 228, 230, 234, 236, 238, 239, 240, 244, 249, 251, 252, 253, 254, 257, 261], "energy_flux_error": [19, 20, 26, 205, 206, 209, 213, 215, 216, 217, 221, 227, 228, 230, 234, 236, 238, 239, 240, 244, 249, 251, 252, 253, 254, 257, 261], "energy_index": 150, "energy_integr": 51, "energy_logspac": 380, "energy_mask": [181, 182, 191, 194, 408, 436, 442, 455, 459, 460, 464, 468], "energy_max": [19, 20, 26, 79, 95, 97, 100, 104, 105, 117, 119, 120, 121, 124, 140, 181, 182, 188, 191, 194, 205, 206, 209, 213, 215, 216, 217, 221, 227, 228, 230, 234, 236, 238, 239, 240, 244, 249, 251, 252, 253, 254, 257, 258, 261, 266, 375, 377, 442, 447, 455, 457, 459, 462, 466, 481], "energy_min": [19, 20, 26, 52, 53, 79, 95, 97, 100, 104, 105, 117, 119, 120, 121, 124, 140, 181, 182, 188, 191, 194, 205, 206, 209, 213, 215, 216, 217, 221, 227, 228, 230, 234, 236, 238, 239, 240, 244, 249, 251, 252, 253, 254, 257, 258, 261, 266, 375, 377, 442, 447, 455, 457, 459, 462, 466, 481], "energy_nam": [153, 156], "energy_nod": [384, 466], "energy_pow": [19, 20, 26, 119, 205, 206, 209, 213, 215, 216, 217, 221, 227, 228, 230, 234, 236, 238, 239, 240, 244, 249, 251, 252, 253, 254, 257, 261, 268, 442, 455, 460, 480, 481], "energy_rang": [64, 65, 69, 71, 72, 76, 79, 95, 97, 100, 104, 105, 412, 459, 464, 538, 539], "energy_range_fit": [97, 100, 104, 105, 459], "energy_range_saf": [97, 100, 104, 105, 459], "energy_range_tot": [97, 100, 104, 105, 464], "energy_reco": [361, 450], "energy_ref": [117, 119], "energy_resolut": 420, "energy_saf": 377, "energy_tru": [16, 91, 97, 100, 104, 105, 106, 110, 140, 141, 142, 143, 144, 145, 150, 151, 152, 153, 154, 163, 170, 173, 181, 182, 188, 191, 194, 288, 289, 361, 362, 374, 426, 430, 431, 434, 435, 436, 437, 438, 439, 440, 442, 444, 446, 447, 450, 452, 453, 454, 455, 459, 461, 462, 463, 464, 466, 467, 470, 471, 472, 479, 480, 499, 500, 502, 504, 505, 508], "energy_true_axi": 140, "energyaxesconfig": 16, "energyaxisconfig": 16, "energybound": 404, "energydependentmorphologi": 445, "energydependentmorphologyestim": [427, 445], "energydependentmultigausspsf": [149, 400, 461, 470, 501], "energydependenttablepsf": [367, 382, 401, 412], "energydispers": [140, 141, 142, 145, 373, 407, 417, 420, 421], "energydispersion2d": [84, 140, 142, 149, 155, 173, 174, 362, 367, 412, 414, 419, 461, 470, 499], "energydispersion3d": 461, "energyoffsetarrai": 417, "energyrangeconfig": 16, "enforc": [16, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 80, 99, 118, 364, 388], "engin": [83, 86], "english": 495, "enhanc": [366, 370, 397], "enlarg": 505, "enough": [374, 376, 377, 434, 437, 440, 450, 452, 464], "enrico": 377, "enrico_config": 377, "enrico_xml": 377, "enriqu": [369, 377, 381, 401, 402, 403, 404, 405, 406, 407, 408, 409, 412, 414, 420, 421, 422], "ensembl": 88, "ensur": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 169, 270, 361, 367, 372, 373, 384, 388, 394, 414, 430, 434, 453, 464, 516], "enter": [202, 204, 211, 233, 397], "entir": [16, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 80, 83, 86, 97, 99, 100, 104, 105, 118, 170, 431, 442, 445, 451], "entri": [43, 44, 83, 86, 89, 114, 117, 120, 121, 124, 125, 200, 211, 233, 270, 329, 361, 373, 381, 385, 388, 390, 393, 395, 412, 423, 431, 435, 458, 460, 463, 466, 467, 495, 496, 508], "entry_point": 413, "enum": [90, 146, 305, 306], "enumer": [446, 458, 465, 468], "env": [364, 378, 390, 392, 393, 395, 396, 421, 555], "envelop": [374, 460, 480], "environ": [11, 78, 327, 360, 361, 364, 368, 369, 373, 378, 381, 390, 391, 393, 394, 395, 396, 397, 401, 402, 404, 420, 421, 430, 431, 434, 435, 436, 437, 438, 439, 440, 442, 443, 444, 445, 446, 447, 448, 452, 453, 454, 455, 457, 458, 459, 460, 462, 463, 464, 465, 466, 468, 470, 471, 472, 473, 479, 480, 481, 555], "envis": 370, "envvar": 11, "eosc": 387, "episod": 128, "epoch": 344, "epsilon": [19, 20, 26, 205, 206, 209, 213, 215, 216, 217, 221, 227, 228, 230, 234, 236, 238, 239, 240, 244, 249, 251, 252, 253, 254, 257, 261], "epsilon_": [97, 104, 491], "epsilon_k": [97, 104, 491], "epsmch": 460, "eqcon": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40], "eqnarrai": 384, "equal": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 52, 112, 116, 120, 124, 127, 140, 188, 361, 371, 374, 422, 434, 452, 453, 464, 468, 491, 507, 558], "equat": [27, 253, 254, 279, 517, 518, 522, 525, 526, 528, 529, 533, 534, 536, 537, 538, 539, 557, 558], "equatori": [90, 146, 182, 183, 184, 186, 189, 191, 194, 195, 196, 461], "equival": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 83, 86, 117, 137, 138, 139, 140, 143, 144, 145, 147, 150, 152, 154, 155, 181, 182, 183, 184, 186, 188, 191, 192, 194, 195, 196, 354, 362, 373, 374, 375, 384, 385, 426, 427, 458, 462, 463, 464, 466, 470, 479, 491, 493, 495, 506, 507, 508, 555, 556, 557], "er": [26, 457], "era": 213, "ereco": [140, 461], "erf": [221, 512], "erg": [52, 53, 65, 430, 434, 458, 481, 488, 495], "ergqut": 462, "erlangen": 380, "erod": 196, "eros": [194, 196], "err": 460, "errat": 361, "errn": [116, 120, 124, 125, 127, 200, 423, 557], "errn_2sigma": 557, "error": [11, 16, 19, 20, 26, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 65, 66, 75, 80, 82, 97, 99, 100, 104, 105, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 127, 128, 129, 130, 159, 185, 188, 193, 201, 203, 205, 206, 207, 208, 209, 212, 213, 215, 216, 217, 218, 220, 221, 222, 223, 224, 225, 226, 227, 228, 230, 234, 235, 236, 237, 238, 239, 240, 241, 244, 245, 246, 247, 249, 250, 251, 252, 253, 254, 256, 257, 259, 260, 261, 272, 274, 278, 279, 280, 286, 339, 361, 362, 375, 376, 377, 379, 384, 385, 388, 389, 402, 406, 408, 410, 412, 413, 415, 419, 420, 423, 425, 426, 427, 431, 432, 434, 435, 437, 439, 442, 443, 444, 445, 447, 450, 451, 452, 454, 455, 458, 466, 467, 468, 470, 479, 480, 481, 483, 491, 493, 495, 513, 531, 540, 552, 555], "error_callback": 159, "errorbar": [79, 96, 97, 100, 104, 105, 188, 192, 210, 218, 222, 224, 225, 226, 241, 247, 259, 262, 430, 468], "errp": [116, 120, 124, 125, 127, 200, 423, 557], "errp_2sigma": 557, "escap": [361, 387], "especi": [83, 86, 128, 364, 368, 371, 375, 381, 382, 391, 412, 418, 431, 444, 453, 458, 463, 468, 470, 471], "essenti": [371, 373, 376, 406, 407, 408, 448, 463], "establish": [361, 374], "estim": [6, 19, 20, 26, 50, 70, 96, 100, 105, 107, 112, 113, 114, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 158, 164, 165, 166, 172, 181, 182, 191, 194, 196, 200, 201, 205, 206, 208, 209, 212, 213, 215, 216, 217, 218, 220, 221, 222, 223, 224, 225, 226, 227, 228, 230, 234, 235, 236, 237, 238, 239, 240, 241, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 256, 257, 259, 260, 261, 270, 277, 280, 284, 310, 354, 365, 367, 370, 374, 375, 376, 377, 380, 383, 389, 393, 402, 403, 406, 407, 408, 409, 412, 413, 414, 418, 419, 420, 421, 423, 426, 427, 429, 430, 434, 436, 440, 442, 443, 444, 447, 449, 453, 454, 455, 456, 459, 460, 464, 468, 472, 475, 479, 480, 491, 495, 505, 507, 552, 553, 554, 556, 558], "estimate_best_fit": [120, 121, 124, 125], "estimate_count": [120, 121, 124, 125], "estimate_energy_depend": 114, "estimate_errn_errp": [120, 121, 124, 125], "estimate_excess_map": 116, "estimate_exposure_reco_energi": 116, "estimate_fit_input_map": 127, "estimate_flux_default": 127, "estimate_flux_map": 127, "estimate_flux_point": [120, 121, 124], "estimate_kernel": [116, 127], "estimate_map": 112, "estimate_mask_default": [116, 127], "estimate_min_e2dnd": 126, "estimate_min_excess": 126, "estimate_npr": [120, 121, 124, 125], "estimate_npred_excess": [120, 121, 124], "estimate_pad_width": 127, "estimate_scan": [120, 121, 124, 125], "estimate_t": [120, 121, 124, 125], "estimate_time_bin_flux": 124, "estimate_ul": [120, 121, 124, 125], "estimator_result": [134, 455], "et": [26, 33, 59, 128, 143, 213, 279, 280, 286, 371, 438, 445, 451, 483, 554], "eta": [223, 224, 245, 514, 518, 545], "eta_": 50, "eta_b": 50, "eta_rang": [514, 518], "etc": [100, 105, 117, 361, 366, 367, 371, 372, 373, 376, 377, 381, 382, 385, 387, 388, 409, 435, 437, 442, 450, 452, 454, 455, 459, 463, 466, 468, 471, 479, 491, 504, 554], "etru": 461, "eu": 381, "euclidean": 288, "europ": 387, "ev": [461, 495, 531], "ev2": 461, "evalu": [17, 18, 19, 20, 21, 22, 24, 25, 26, 27, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 66, 83, 86, 97, 100, 103, 104, 105, 120, 124, 137, 138, 139, 140, 143, 144, 145, 147, 150, 152, 154, 155, 163, 170, 176, 191, 205, 206, 207, 208, 209, 210, 211, 212, 213, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 230, 233, 234, 235, 236, 237, 238, 239, 240, 241, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 256, 257, 258, 259, 260, 261, 262, 361, 366, 370, 376, 379, 380, 383, 384, 385, 389, 401, 402, 403, 405, 408, 412, 417, 418, 420, 421, 422, 423, 424, 425, 426, 427, 446, 447, 455, 461, 466, 468, 470, 471, 491, 513, 514, 521, 554, 557], "evaluate_contain": [144, 152, 154, 414], "evaluate_direct": [144, 152, 154], "evaluate_energy_flux": [239, 240], "evaluate_error": [19, 20, 26, 119, 205, 206, 209, 213, 215, 216, 217, 221, 227, 228, 230, 234, 236, 238, 239, 240, 244, 249, 251, 252, 253, 254, 257, 261, 379], "evaluate_geom": [207, 208, 212, 219, 220, 223, 235, 237, 245, 246, 248, 250, 256, 260, 427, 466, 514], "evaluate_integr": [238, 239, 240], "evaluate_paramet": [144, 152, 154], "evaluation_bin_size_min": [207, 208, 212, 220, 223, 235, 237, 245, 246, 248, 250, 256, 260], "evaluation_radiu": [207, 208, 212, 220, 223, 235, 237, 245, 246, 248, 250, 256, 258, 260, 372, 373, 384, 466], "evaluation_region": [207, 208, 212, 220, 223, 235, 237, 245, 246, 248, 250, 256, 260], "even": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 83, 86, 194, 202, 204, 361, 364, 366, 368, 369, 375, 378, 379, 387, 388, 404, 452, 455, 460, 462, 463, 464, 465, 466, 479, 491, 493, 517, 518, 555], "event": [78, 79, 80, 81, 82, 83, 84, 85, 88, 98, 99, 103, 108, 116, 126, 142, 153, 156, 157, 164, 172, 183, 184, 186, 192, 195, 196, 210, 218, 222, 224, 225, 226, 241, 247, 259, 262, 320, 361, 362, 365, 367, 371, 373, 375, 376, 377, 388, 393, 397, 404, 405, 406, 408, 412, 413, 414, 419, 420, 421, 422, 423, 426, 427, 429, 431, 434, 435, 436, 440, 442, 443, 449, 454, 462, 472, 475, 477, 479, 480, 491, 495, 503, 504, 505, 553, 554, 557], "event_3fhl": 481, "event_class": [80, 471, 481], "event_det_coord": [98, 103], "event_fil": 84, "event_filt": 85, "event_filter_typ": 85, "event_id": [374, 470, 471, 481, 492], "event_list": [79, 361, 362, 374], "event_list_meta": [98, 103, 407], "event_sampl": [429, 446, 449], "event_sampling_nrg_depend_model": [429, 447, 449], "event_typ": [99, 471, 481], "eventlist": [80, 84, 98, 103, 172, 183, 184, 186, 192, 195, 196, 361, 362, 367, 374, 375, 376, 388, 397, 402, 409, 414, 416, 417, 418, 420, 421, 446, 447, 455, 463, 470, 471, 481, 495, 504], "eventlistbas": 85, "eventlistdataset": 421, "eventlistlat": 492, "eventlistmetadata": [79, 388], "events2": 79, "events_": 446, "events_0001": 446, "events_1": 492, "events_2": 492, "events_3fhl": 481, "events_bkg": 374, "events_gc_3fhl": 481, "events_list": 374, "events_new": 495, "events_path": [78, 446], "events_src": 374, "events_tot": 374, "events_vela": 455, "eventu": [361, 366, 377, 380, 381, 397, 466], "ever": 558, "everi": [182, 184, 196, 260, 361, 364, 369, 370, 371, 373, 377, 386, 388, 391, 431, 434, 463, 480, 555], "everyon": 366, "everyth": [361, 379, 380, 495], "everywher": [361, 375, 380, 381, 401], "evid": [128, 458], "evolut": [50, 52, 53, 213, 367, 381, 429, 449, 475, 488, 489, 491, 492, 500, 503, 507, 509], "evolv": [28, 29, 30, 35, 36, 39, 40, 50, 52, 53, 213, 378, 381, 388, 447, 461], "evt_sampl": 446, "ex": [11, 463, 465, 466], "exact": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 86, 379, 463, 471], "exactli": [112, 116, 120, 124, 127, 188, 356, 436, 453, 455, 464, 468, 471, 491, 508], "exagger": 352, "examin": [387, 499], "exampl": [11, 19, 20, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 64, 65, 76, 78, 79, 81, 82, 83, 84, 85, 86, 89, 91, 94, 96, 97, 100, 104, 105, 106, 109, 110, 111, 112, 114, 116, 119, 121, 123, 124, 125, 126, 127, 128, 132, 133, 135, 136, 138, 140, 142, 143, 144, 145, 151, 153, 156, 163, 166, 168, 182, 183, 184, 186, 189, 192, 194, 195, 196, 202, 204, 225, 231, 261, 264, 270, 273, 288, 289, 310, 314, 320, 329, 340, 341, 346, 349, 351, 352, 354, 356, 358, 361, 362, 364, 366, 369, 371, 372, 373, 374, 375, 376, 377, 378, 379, 381, 384, 387, 388, 389, 393, 394, 395, 397, 401, 403, 406, 409, 412, 413, 414, 417, 419, 420, 421, 427, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 485, 486, 495, 497, 498, 499, 501, 506, 508, 509, 510, 520, 541, 549, 550, 551, 555, 557, 559, 560], "example_cub": 463, "example_cube_fgst": 463, "exce": 107, "except": [65, 67, 76, 83, 86, 97, 100, 104, 105, 159, 183, 184, 186, 192, 195, 196, 290, 358, 361, 372, 376, 380, 461, 465, 508], "excerpt": 473, "excess": [15, 65, 70, 97, 100, 104, 105, 113, 116, 117, 119, 120, 121, 124, 126, 129, 130, 134, 163, 272, 274, 279, 280, 359, 373, 376, 408, 409, 415, 420, 427, 430, 434, 435, 437, 438, 439, 442, 444, 448, 450, 454, 455, 458, 459, 462, 464, 465, 472, 479, 480, 493, 495], "excess_estim": 472, "excess_estimator_integr": 472, "excess_integr": 472, "excess_map": [16, 435, 439, 440, 442, 479], "excess_map_estim": 455, "excess_matching_signific": [411, 421], "excess_min": 136, "excess_r": 459, "excessestim": 385, "excessmapconfig": 16, "excessmapestim": [113, 132, 133, 134, 385, 408, 409, 410, 412, 415, 425, 427, 440, 442, 455, 464, 472, 493], "excesspointsestim": 385, "excessprofileestim": [385, 409], "exchang": 375, "exclud": [16, 80, 96, 97, 99, 100, 104, 105, 118, 123, 164, 166, 202, 204, 211, 233, 367, 424, 462, 464, 504, 505], "exclude_default": [16, 80, 99, 118], "exclude_non": [16, 80, 99, 118], "exclude_unset": [16, 80, 99, 118], "exclus": [16, 79, 158, 160, 165, 166, 167, 168, 171, 182, 194, 367, 375, 377, 408, 410, 431, 439, 442, 462, 502, 504], "exclusion_mask": [158, 160, 165, 166, 167, 168, 171, 434, 440, 444, 462, 464, 480, 502, 504, 505], "exclusion_mask_2d": 462, "exclusion_mask_crab": [435, 479], "exclusion_radiu": 464, "exclusion_region": 434, "exclusionmask": 418, "execut": [11, 116, 120, 124, 125, 127, 361, 362, 364, 366, 368, 369, 370, 376, 377, 381, 391, 392, 393, 394, 395, 396, 397, 406, 414, 420, 429, 433, 441, 449, 456, 462, 463, 469, 471, 474, 475, 476, 478, 481, 482, 510, 520, 541, 551, 553], "exercis": [364, 377, 381, 387], "exhibit": 445, "exist": [11, 15, 26, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 79, 83, 84, 86, 94, 95, 96, 97, 100, 102, 104, 105, 117, 119, 141, 142, 148, 153, 156, 168, 181, 182, 183, 184, 186, 187, 190, 191, 192, 194, 195, 196, 211, 225, 233, 256, 257, 258, 260, 345, 361, 364, 366, 369, 370, 372, 373, 374, 375, 377, 378, 380, 381, 382, 384, 385, 387, 388, 393, 394, 397, 398, 401, 405, 406, 420, 421, 423, 426, 438, 440, 459, 463, 464, 466, 467, 471, 492, 507, 508, 556], "exist_ok": [434, 435, 442, 443, 446, 479, 480], "exit": [11, 15, 83, 86, 202, 204, 211, 233, 402, 519, 555], "exot": 378, "exp": [21, 28, 29, 30, 31, 32, 35, 36, 39, 40, 143, 218, 221, 228, 239, 240, 252, 362, 384, 454, 466, 513, 514, 521, 525, 526, 527, 528, 537, 538, 539, 543, 544, 545, 558], "expand": [124, 327, 371, 412], "expand_map": 124, "expans": [50, 52, 53], "expcutoffpowerlaw": 527, "expcutoffpowerlaw3fglspectralmodel": [243, 384, 432, 466, 526], "expcutoffpowerlawnormspectralmodel": [217, 243, 427, 466, 527], "expcutoffpowerlawspectralmodel": [19, 20, 26, 76, 205, 206, 209, 213, 215, 216, 221, 227, 228, 230, 234, 236, 238, 239, 240, 243, 244, 249, 251, 252, 253, 254, 257, 261, 384, 432, 434, 442, 466, 525, 527, 531], "expdecai": [218, 429, 509, 551], "expdecay_model": [446, 543], "expdecaytemporalmodel": [255, 384, 408, 412, 446, 454, 466, 543], "expect": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 100, 103, 105, 117, 168, 173, 174, 179, 194, 272, 273, 274, 275, 277, 281, 287, 320, 361, 366, 374, 376, 377, 378, 381, 386, 388, 430, 431, 436, 437, 438, 440, 446, 447, 451, 452, 457, 460, 463, 464, 468, 471, 473, 491, 493, 556, 557, 558], "expens": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 434, 447], "experi": [364, 366, 370, 372, 376, 389, 391, 420, 483, 554, 559], "experienc": [370, 396], "experiment": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 377, 555], "expert": 381, "expertis": 378, "expfactor": [253, 254, 538, 539], "expir": 374, "explain": [83, 86, 361, 364, 366, 375, 378, 380, 381, 387, 391, 393, 395, 406, 412, 430, 434, 436, 457, 460, 464, 466, 495, 553, 555], "explan": [112, 116, 120, 124, 127, 366, 398, 451, 559], "explicit": [83, 86, 182, 184, 361, 377, 379, 385, 507, 559], "explicitli": [16, 19, 20, 26, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 80, 99, 118, 137, 138, 139, 140, 143, 144, 145, 147, 150, 152, 154, 155, 205, 206, 209, 213, 215, 216, 217, 221, 227, 228, 230, 234, 236, 238, 239, 240, 244, 249, 251, 252, 253, 254, 257, 261, 290, 371, 383, 392, 402, 447, 465, 493, 507, 559], "explor": [183, 184, 186, 192, 195, 196, 369, 377, 397, 429, 434, 439, 442, 445, 448, 449, 451, 452, 453, 458, 459, 465, 472, 473, 479, 481, 491, 492, 493, 495, 503, 504, 507, 552], "explos": 52, "expomap": 374, "expon": [384, 466], "exponenti": [28, 30, 36, 39, 40, 215, 216, 217, 218, 252, 253, 254, 362, 372, 406, 429, 442, 446, 454, 509, 541], "exponentialcutoffpowerlaw": 531, "export": [80, 83, 86, 97, 99, 100, 117, 118, 119, 364, 385, 388, 393, 395, 406, 416, 423, 424, 427, 435, 466, 472, 473, 479], "expos": [6, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 370, 375, 376, 377, 380, 381, 425, 427, 463, 475, 493, 494, 553], "exposur": [16, 79, 84, 97, 100, 101, 103, 104, 105, 116, 127, 131, 141, 142, 148, 151, 153, 156, 158, 163, 170, 173, 174, 175, 177, 178, 179, 248, 282, 285, 287, 367, 370, 371, 372, 373, 374, 385, 404, 409, 417, 419, 420, 421, 423, 430, 431, 434, 435, 436, 437, 438, 439, 440, 442, 444, 446, 447, 450, 453, 454, 459, 462, 463, 464, 472, 479, 480, 491, 500, 503, 508, 557], "exposure_geom": 142, "exposure_hdu": [141, 142, 148, 153, 156], "exposure_hdu_band": [141, 142, 148, 153, 156], "exposure_hpx": 471, "exposure_map": [141, 142, 148, 153, 156, 173, 174, 179, 461], "exposure_max": 459, "exposure_min": 459, "exposure_tim": 374, "express": [116, 128, 272, 274, 372, 384, 385, 427, 440, 460, 461, 466, 468, 491, 507, 514, 556, 557, 558], "exptest": 418, "extend": [15, 19, 20, 26, 67, 70, 83, 86, 87, 95, 158, 185, 188, 196, 205, 206, 209, 213, 215, 216, 217, 221, 227, 228, 230, 233, 234, 236, 238, 239, 240, 244, 249, 251, 252, 253, 254, 257, 261, 273, 368, 372, 373, 374, 375, 381, 383, 384, 385, 388, 393, 405, 407, 412, 429, 433, 434, 438, 447, 452, 458, 463, 464, 465, 466, 471, 475, 491, 492, 503, 504, 552], "extended_archive_v18": 519, "extended_source_spectral_analysi": [429, 431, 433], "extens": [41, 79, 140, 183, 184, 186, 188, 195, 196, 207, 208, 211, 212, 220, 223, 233, 235, 237, 245, 246, 250, 256, 260, 363, 366, 367, 368, 369, 370, 372, 374, 376, 377, 378, 379, 380, 381, 391, 415, 445, 446, 447, 466, 555], "extent": [194, 211, 233, 375, 438, 466], "extern": [108, 362, 387, 413, 417, 418, 421, 470, 495], "extnam": 461, "extra": [16, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 47, 79, 80, 99, 118, 181, 182, 187, 191, 192, 194, 200, 256, 257, 288, 360, 362, 368, 369, 375, 377, 378, 381, 387, 388, 417, 420, 421, 463, 464, 495, 508], "extra_term": 287, "extract": [16, 80, 95, 97, 99, 100, 104, 105, 117, 118, 119, 124, 141, 142, 148, 153, 156, 159, 164, 165, 170, 172, 180, 183, 184, 185, 186, 188, 193, 194, 195, 196, 258, 361, 371, 376, 385, 387, 388, 414, 415, 426, 427, 430, 431, 434, 435, 436, 437, 442, 443, 446, 447, 448, 450, 459, 463, 479, 491, 499, 504], "extragalact": [213, 470], "extrapol": [137, 138, 139, 163, 183, 184, 186, 192, 195, 196, 213, 261, 302, 412, 417, 419, 420, 461, 463, 470, 471, 507], "extras_requir": 378, "extrem": [361, 388, 463, 514], "f": [17, 18, 19, 20, 21, 22, 24, 25, 26, 27, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 83, 86, 127, 136, 190, 205, 206, 209, 213, 215, 216, 217, 221, 227, 228, 230, 234, 236, 238, 239, 240, 244, 249, 251, 252, 253, 254, 257, 261, 289, 290, 317, 361, 364, 378, 383, 384, 389, 392, 393, 395, 414, 423, 430, 431, 434, 435, 437, 443, 444, 445, 446, 447, 453, 454, 455, 457, 458, 460, 462, 464, 466, 467, 468, 471, 472, 477, 479, 480, 481, 489, 504, 521, 531, 542, 543, 544, 545, 546, 547, 548, 555, 556, 557], "f0": [259, 549], "f06": 48, "f06b": [49, 485], "f06p": 49, "f1": [259, 549], "f2": [259, 549], "f4": [138, 143, 436, 459, 461, 463, 470, 471], "f8": [461, 471], "f_": [278, 280, 289, 491], "f_0": [238, 534], "f_dead": [79, 84], "f_i": 278, "f_max": 451, "f_max_err": 451, "f_mean": 451, "f_mean_err": 451, "f_min": 451, "f_min_err": 451, "f_pp": 279, "f_var": 279, "fabio": [374, 379, 402, 404, 405, 406, 407, 408, 409, 411, 412, 414, 415, 419, 421, 423, 425, 426, 427], "face": [366, 369], "facecolor": [358, 434, 436, 444, 445, 448, 455, 457, 512, 513, 514], "facil": 386, "fact": [19, 20, 92, 201, 205, 208, 209, 212, 213, 215, 216, 217, 218, 220, 221, 222, 223, 224, 225, 226, 227, 228, 230, 237, 238, 239, 240, 241, 244, 245, 246, 247, 249, 252, 253, 254, 259, 260, 387, 431, 508], "facto": 387, "factor": [19, 20, 23, 97, 98, 100, 103, 104, 105, 112, 117, 141, 142, 144, 148, 150, 151, 152, 153, 154, 156, 163, 170, 176, 180, 181, 182, 183, 184, 186, 187, 188, 191, 192, 194, 195, 196, 199, 201, 202, 203, 204, 205, 208, 209, 212, 213, 215, 216, 217, 218, 220, 221, 222, 223, 224, 225, 226, 227, 228, 230, 235, 237, 238, 239, 240, 241, 244, 245, 246, 247, 248, 249, 250, 252, 253, 254, 256, 259, 260, 262, 361, 374, 376, 408, 430, 437, 439, 442, 444, 448, 450, 454, 459, 462, 466, 470, 491, 508, 521], "factor1": [19, 20, 201, 203, 205, 208, 209, 212, 213, 215, 216, 217, 218, 220, 221, 222, 223, 224, 225, 226, 227, 228, 230, 237, 238, 239, 240, 241, 244, 245, 246, 247, 249, 252, 253, 254, 259, 260], "factor_max": [19, 20, 201, 203, 205, 208, 209, 212, 213, 215, 216, 217, 218, 220, 221, 222, 223, 224, 225, 226, 227, 228, 230, 237, 238, 239, 240, 241, 244, 245, 246, 247, 249, 252, 253, 254, 259, 260], "factor_min": [19, 20, 201, 203, 205, 208, 209, 212, 213, 215, 216, 217, 218, 220, 221, 222, 223, 224, 225, 226, 227, 228, 230, 237, 238, 239, 240, 241, 244, 245, 246, 247, 249, 252, 253, 254, 259, 260], "factori": [183, 184, 195, 196, 375, 380, 384, 506, 508], "factoris": [248, 384, 466, 552], "fail": [16, 80, 99, 118, 200, 362, 364, 375, 390, 391, 415, 443, 471], "failur": [423, 426], "faint": 556, "fair": 387, "fair4r": 387, "fake": [97, 100, 104, 105, 373, 374, 404, 436, 437, 450, 454, 468], "fall": [128, 166, 193, 211, 233, 361, 368, 370, 371, 378, 421, 422, 451], "fallback": 361, "fals": [16, 19, 20, 23, 26, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 65, 76, 78, 79, 80, 82, 83, 84, 86, 91, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 108, 109, 111, 116, 117, 118, 119, 120, 124, 137, 138, 139, 140, 141, 142, 143, 144, 145, 147, 148, 150, 151, 152, 153, 154, 155, 156, 163, 170, 173, 174, 176, 177, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 200, 201, 202, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 230, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 256, 257, 258, 259, 260, 261, 262, 290, 320, 328, 330, 358, 361, 375, 377, 384, 389, 420, 421, 427, 430, 431, 434, 435, 436, 437, 439, 440, 442, 443, 444, 445, 446, 448, 450, 452, 453, 454, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 471, 479, 480, 481, 492, 502, 504, 505, 519, 531, 540], "falsifi": 468, "famili": 387, "familiar": [378, 379, 463, 464, 481], "fanci": [361, 455], "far": [369, 374, 376, 378, 382, 385, 388, 397, 412, 446, 483], "fashion": [376, 381], "fast": [361, 375, 379, 460], "faster": [83, 86, 183, 184, 186, 192, 195, 196, 339, 427, 438], "faucher": [31, 33, 37, 39, 45], "faucherkaspi2006": [28, 29, 31, 35, 36, 39, 40, 48], "faucherkaspi2006velocitybimod": 49, "faucherkaspi2006velocitymaxwellian": 49, "faucherspir": 485, "favour": [366, 374, 389, 468], "favourit": 444, "fc": [466, 508], "fcluster": [288, 467], "fcluster_kwarg": [288, 467], "fcn": 460, "fdx": 361, "fe": 263, "feasibl": [375, 380, 437, 450, 459], "featur": [6, 13, 83, 86, 91, 112, 132, 288, 289, 351, 352, 361, 364, 368, 370, 371, 372, 373, 375, 377, 378, 383, 384, 385, 387, 388, 389, 394, 399, 402, 403, 404, 405, 406, 408, 409, 412, 416, 419, 420, 421, 422, 451, 463, 464, 466, 467, 483, 493, 531], "feature_irf": 467, "features_irf": [91, 288, 289, 467], "feb": [367, 368, 378, 382, 397, 399], "februari": 399, "fed": 436, "feedback": [364, 366, 370, 375, 377, 378, 381, 382, 384, 390, 420, 461, 495], "feedstock": [390, 391], "feel": [371, 555], "feijen": [425, 426, 427], "feldman": [403, 409, 417, 419, 554], "feldman1998": [554, 557], "fellowship": 387, "felt": 361, "fermi": [55, 58, 60, 61, 63, 67, 69, 71, 72, 74, 79, 82, 120, 121, 123, 127, 183, 184, 186, 192, 193, 195, 196, 213, 263, 265, 270, 368, 369, 370, 371, 373, 374, 377, 378, 381, 391, 393, 398, 400, 401, 404, 406, 409, 413, 416, 417, 418, 419, 420, 421, 429, 432, 438, 446, 448, 458, 463, 464, 465, 466, 474, 475, 481, 483, 491, 492, 495, 500, 507, 519, 529, 534, 552, 559], "fermi_3fhl": [79, 183, 184, 186, 192, 195, 196, 465, 471, 481], "fermi_3fhl_events_select": [79, 471], "fermi_3fhl_exposure_cube_hpx": 471, "fermi_3fhl_psf_gc": 471, "fermi_bkg_model": 465, "fermi_ct": 123, "fermi_dataset": [270, 465, 471], "fermi_lat": [381, 421, 429, 471, 474], "fermi_model": 471, "fermi_prof": 121, "fermi_ts_imag": 362, "fermipi": [368, 370, 373, 377, 381, 385, 418, 420, 471, 483], "fermitool": 377, "fetch": [15, 361, 369, 400, 413, 479, 555], "few": [78, 79, 83, 84, 86, 360, 361, 362, 364, 366, 367, 368, 369, 371, 373, 375, 379, 381, 386, 390, 391, 397, 411, 422, 424, 427, 431, 435, 440, 442, 444, 458, 460, 463, 470, 479, 480, 504, 508, 560], "fewer": [375, 381], "ff": 387, "fft": 196, "fftconvolv": 196, "fgl": [193, 464], "fgst": [182, 183, 184, 186, 187, 188, 194, 195, 196, 463], "fhit": 472, "fidalgo": [371, 376, 401, 421, 422], "fiduci": 463, "field": [16, 42, 50, 51, 54, 79, 80, 83, 86, 99, 118, 137, 138, 139, 140, 143, 144, 145, 146, 147, 150, 152, 154, 155, 160, 219, 234, 292, 296, 348, 361, 375, 387, 388, 397, 402, 407, 414, 421, 434, 436, 440, 442, 444, 446, 461, 462, 464, 470, 471, 495, 497, 498, 499, 500, 501, 502, 504, 531, 554], "fieldinfo": [16, 80, 99, 118], "fig": [196, 349, 430, 431, 434, 435, 436, 437, 438, 440, 442, 443, 444, 445, 448, 452, 454, 455, 457, 460, 464, 468, 504, 505, 514, 518, 521, 553], "figsiz": [84, 97, 100, 104, 105, 122, 137, 138, 140, 141, 142, 143, 144, 145, 150, 151, 152, 153, 154, 156, 183, 184, 186, 192, 195, 196, 349, 431, 434, 437, 438, 440, 442, 443, 444, 445, 451, 452, 453, 454, 455, 457, 460, 461, 462, 463, 464, 465, 466, 467, 468, 471, 473, 504, 514, 518, 521], "figur": [84, 97, 100, 104, 105, 122, 137, 138, 140, 141, 142, 143, 144, 150, 151, 152, 153, 154, 156, 183, 184, 186, 192, 195, 196, 339, 348, 349, 355, 361, 362, 366, 381, 391, 434, 438, 442, 444, 445, 446, 448, 451, 452, 453, 457, 459, 460, 462, 463, 465, 466, 471, 472, 473, 555], "file": [11, 15, 16, 26, 63, 64, 65, 78, 79, 81, 82, 83, 84, 86, 88, 89, 95, 96, 97, 100, 101, 102, 104, 105, 117, 119, 137, 138, 139, 140, 141, 142, 143, 144, 145, 147, 148, 150, 151, 152, 153, 154, 155, 156, 157, 164, 169, 183, 184, 186, 190, 192, 195, 196, 211, 213, 225, 233, 256, 257, 258, 259, 260, 261, 298, 328, 330, 360, 361, 364, 366, 367, 368, 369, 370, 371, 372, 373, 374, 377, 378, 380, 381, 382, 384, 385, 388, 389, 390, 391, 392, 393, 395, 397, 405, 406, 412, 414, 416, 418, 419, 420, 421, 423, 424, 426, 427, 429, 430, 433, 436, 437, 441, 442, 444, 446, 447, 449, 450, 454, 456, 458, 459, 462, 463, 464, 465, 466, 469, 472, 473, 474, 475, 476, 478, 481, 482, 483, 494, 495, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 559], "file_dir": 298, "file_model": 446, "file_nam": 298, "filemod": [16, 435, 439, 440, 442, 479, 555], "filenam": [11, 16, 57, 58, 59, 60, 61, 62, 63, 64, 65, 78, 79, 81, 82, 83, 86, 89, 95, 96, 97, 100, 101, 102, 104, 105, 117, 119, 121, 123, 125, 137, 138, 139, 140, 141, 142, 143, 144, 145, 147, 148, 150, 152, 153, 154, 155, 156, 157, 183, 184, 186, 190, 192, 195, 196, 211, 213, 225, 233, 256, 257, 258, 259, 260, 261, 265, 267, 269, 270, 298, 328, 330, 340, 361, 362, 366, 409, 434, 435, 439, 440, 442, 443, 447, 448, 458, 459, 463, 464, 465, 466, 470, 471, 479, 480, 481, 492, 495, 497, 498, 499, 501, 519, 521, 549, 550, 555], "filename_1": 492, "filename_2": 492, "filename_arf": 102, "filename_bkg": 102, "filename_model": [95, 117, 270, 465, 471], "filename_rmf": 102, "fill": [16, 80, 81, 83, 86, 97, 99, 100, 103, 104, 105, 118, 140, 151, 182, 183, 184, 186, 192, 194, 195, 196, 261, 361, 369, 370, 374, 377, 381, 387, 390, 391, 406, 413, 420, 423, 431, 446, 447, 458, 461, 462, 464, 471, 480, 507], "fill_between": [19, 20, 26, 122, 205, 206, 209, 213, 215, 216, 217, 221, 227, 228, 230, 234, 236, 238, 239, 240, 244, 249, 251, 252, 253, 254, 257, 261, 455], "fill_by_coord": [151, 183, 184, 186, 192, 195, 196, 463, 471, 507], "fill_by_idx": [183, 184, 186, 192, 195, 196, 507], "fill_by_pix": [183, 184, 186, 192, 195, 196, 507], "fill_ev": [183, 184, 186, 192, 195, 196, 415, 426, 436, 463, 471, 477], "fill_nan": 184, "fill_valu": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 83, 86, 137, 138, 139, 140, 143, 144, 145, 147, 150, 152, 154, 155, 183, 184, 186, 192, 195, 196, 256, 257, 260, 261, 361, 461, 463, 471], "filled_t": [83, 86], "filter": [84, 85, 367, 371, 373, 375, 376, 421, 422, 425, 464, 467, 475, 480, 481], "filter_ev": 85, "filter_gti": 85, "filter_success_nan": [117, 119], "filtered_ev": 85, "filtered_gti": 85, "filterwarn": [454, 455], "final": [124, 361, 362, 368, 369, 371, 374, 375, 377, 378, 380, 382, 384, 386, 387, 391, 393, 395, 406, 407, 408, 430, 431, 432, 434, 442, 444, 446, 447, 452, 453, 455, 457, 459, 460, 462, 464, 467, 471, 475, 479, 480, 481, 491, 492, 493], "finalis": 365, "find": [19, 20, 26, 127, 132, 133, 140, 166, 167, 171, 198, 205, 206, 209, 213, 215, 216, 217, 221, 227, 228, 230, 234, 236, 238, 239, 240, 244, 249, 251, 252, 253, 254, 257, 261, 282, 361, 366, 372, 374, 380, 390, 391, 392, 412, 414, 420, 421, 426, 427, 432, 434, 438, 458, 459, 463, 466, 470, 473, 481, 555, 557, 558], "find_peak": [133, 421, 438, 444], "find_peaks_in_flux_map": 438, "find_root": 412, "finder": [132, 166, 167, 412, 421, 438], "fine": [271, 303, 374, 440, 459, 471, 508, 555], "finer": [446, 459, 508], "fingertip": 360, "finish": [364, 368, 370, 390, 418, 420], "finit": [95, 97, 100, 104, 105, 141, 142, 148, 153, 169, 184, 192, 196, 258, 379], "fink": [213, 214, 521], "fir": 531, "firefox": [83, 86], "first": [57, 83, 86, 87, 89, 95, 97, 104, 117, 119, 121, 132, 140, 157, 166, 183, 184, 185, 188, 192, 193, 211, 233, 264, 323, 350, 361, 362, 364, 366, 368, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 381, 382, 385, 386, 387, 391, 392, 397, 401, 402, 403, 404, 405, 406, 407, 408, 409, 412, 414, 419, 421, 422, 423, 424, 426, 430, 431, 432, 434, 438, 439, 440, 442, 443, 444, 445, 446, 447, 448, 451, 452, 453, 454, 455, 458, 459, 460, 462, 463, 464, 465, 466, 467, 468, 470, 471, 472, 475, 479, 480, 481, 492, 504, 507, 555], "firstli": [445, 446], "firstnam": [83, 86], "fit": [6, 15, 16, 19, 20, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 57, 58, 60, 61, 63, 64, 65, 69, 71, 72, 74, 78, 79, 80, 81, 82, 83, 84, 86, 89, 94, 95, 96, 97, 99, 100, 101, 102, 104, 105, 109, 111, 112, 114, 116, 117, 118, 119, 120, 121, 123, 124, 125, 127, 132, 133, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 147, 148, 150, 152, 153, 154, 155, 156, 160, 163, 181, 182, 183, 184, 185, 186, 187, 188, 190, 192, 193, 194, 195, 196, 201, 203, 205, 208, 209, 211, 212, 213, 214, 215, 216, 217, 218, 220, 221, 222, 223, 224, 225, 226, 227, 228, 230, 233, 237, 238, 239, 240, 241, 244, 245, 246, 247, 249, 252, 253, 254, 258, 259, 260, 261, 270, 271, 272, 274, 275, 276, 281, 283, 287, 298, 299, 300, 343, 344, 347, 349, 354, 356, 360, 361, 362, 367, 371, 372, 373, 374, 377, 379, 380, 381, 382, 383, 384, 385, 388, 389, 393, 401, 402, 403, 404, 405, 406, 407, 408, 409, 412, 414, 417, 419, 420, 421, 422, 424, 426, 427, 429, 430, 433, 437, 438, 440, 441, 445, 446, 447, 448, 449, 451, 452, 453, 455, 456, 458, 459, 461, 462, 463, 465, 466, 467, 469, 470, 472, 473, 475, 477, 481, 490, 491, 492, 493, 494, 495, 497, 498, 499, 500, 501, 502, 503, 504, 507, 512, 519, 521, 531, 549, 550, 553, 554, 559], "fit2": 465, "fit_covari": [435, 479], "fit_deriv": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40], "fit_joint": [431, 434, 442, 443], "fit_prior": 468, "fit_rang": [16, 435, 439, 440, 442, 479], "fit_result": [200, 270, 435, 479], "fit_results_nul": 270, "fit_scipi": 460, "fit_sherpa": 460, "fit_stat_scan": 376, "fit_statist": 361, "fit_statistics_cython": 391, "fitconfig": 16, "fitmc": 379, "fitresult": [200, 414, 426, 460, 480], "fitsfixedwarn": [438, 519], "fitspectrum": 416, "fittabl": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 48, 49], "fittable1dmodel": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40], "fitter": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 419, 420, 432], "five": 481, "fix": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 81, 84, 89, 90, 101, 102, 135, 153, 155, 170, 200, 235, 236, 241, 260, 364, 366, 367, 368, 372, 373, 376, 378, 383, 385, 386, 387, 390, 391, 393, 399, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 415, 416, 417, 418, 419, 420, 421, 422, 424, 425, 430, 436, 437, 439, 440, 442, 443, 446, 450, 453, 454, 460, 461, 462, 465, 466, 467, 479, 505, 507, 515, 532], "fixed_altaz": 81, "fixed_bin": 135, "fixed_icr": [81, 153, 430, 437, 446, 447, 450, 454], "fixed_offset": [91, 169, 412], "fixed_r_in": 158, "fixed_width": 158, "fixedpointinginfo": [84, 153, 176, 426, 427, 430, 437, 446, 447, 450, 454], "fk5": [508, 519], "flag": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 86, 98, 103, 117, 119, 120, 121, 124, 125, 181, 182, 183, 184, 186, 188, 189, 191, 192, 194, 195, 196, 200, 431, 442, 446, 458, 466], "flake8": 364, "flare": [128, 278, 393, 406, 407, 429, 451, 452, 454, 456, 475, 491, 492, 493, 503, 504], "flask": 420, "flat": [119, 128, 145, 155, 181, 182, 187, 189, 191, 194, 197, 198, 235, 372, 385], "flatten": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 181, 182, 189, 191, 194, 451], "fledg": 389, "flexibl": [78, 314, 361, 366, 370, 371, 372, 375, 377, 381, 382, 388, 463, 495, 552], "float": [19, 20, 26, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 42, 50, 51, 79, 83, 84, 86, 91, 97, 100, 104, 105, 108, 112, 116, 118, 119, 120, 122, 124, 125, 126, 127, 132, 133, 137, 138, 139, 140, 141, 143, 144, 145, 147, 150, 152, 153, 154, 155, 156, 158, 160, 169, 182, 183, 184, 186, 188, 191, 192, 194, 195, 196, 197, 198, 200, 201, 203, 205, 206, 208, 209, 211, 212, 213, 215, 216, 217, 218, 220, 221, 222, 223, 224, 225, 226, 227, 228, 230, 233, 234, 236, 237, 238, 239, 240, 241, 244, 245, 246, 247, 249, 251, 252, 253, 254, 257, 258, 259, 260, 261, 262, 270, 271, 272, 274, 277, 282, 290, 301, 308, 317, 319, 350, 351, 352, 462, 468, 470, 471, 555, 559], "float32": [181, 182, 183, 184, 186, 191, 192, 194, 195, 196, 439, 444, 463], "float64": [83, 86, 106, 110, 140, 143, 361, 389, 461, 463, 493], "float64float64float64": 444, "float64float64float64float64float64float64float64float32bool": 432, "float64float64float64float64float64float64float64float64": 444, "float_a": [83, 86], "flow": [388, 553, 554], "fluctuat": [272, 274, 385, 437, 450, 468, 557], "flux": [15, 19, 20, 26, 41, 46, 65, 69, 71, 72, 74, 75, 76, 79, 84, 95, 96, 97, 100, 104, 105, 112, 116, 117, 118, 119, 120, 121, 124, 125, 126, 127, 128, 129, 130, 131, 133, 135, 201, 205, 206, 207, 208, 209, 210, 212, 213, 215, 216, 217, 218, 220, 221, 222, 223, 224, 225, 226, 227, 228, 230, 234, 236, 237, 238, 239, 240, 241, 244, 245, 246, 247, 248, 249, 251, 252, 253, 254, 257, 259, 260, 261, 262, 263, 264, 268, 277, 278, 279, 280, 286, 365, 373, 374, 376, 377, 379, 381, 382, 384, 393, 400, 403, 405, 406, 408, 412, 414, 418, 419, 420, 422, 427, 429, 433, 436, 438, 442, 444, 446, 447, 449, 451, 452, 453, 454, 455, 459, 463, 466, 471, 475, 489, 490, 491, 500, 507, 509, 516, 531, 552, 553, 557], "flux_err": [19, 20, 26, 117, 119, 127, 133, 205, 206, 209, 213, 215, 216, 217, 221, 227, 228, 230, 234, 236, 238, 239, 240, 244, 249, 251, 252, 253, 254, 257, 261, 278, 279, 280, 286, 438, 451, 452], "flux_errn": [117, 119, 458], "flux_errp": [117, 119, 458], "flux_int_cu": 264, "flux_map": [117, 119, 385, 457], "flux_metadata_fits_kei": 118, "flux_per_omega": 466, "flux_point": [16, 64, 65, 69, 71, 72, 74, 75, 76, 93, 96, 117, 119, 120, 373, 430, 432, 434, 435, 439, 440, 442, 444, 455, 458, 459, 479, 480, 481], "flux_point_dataset": 373, "flux_points_at_tim": 385, "flux_points_ctb_37b": 119, "flux_points_dataset": [434, 444, 455], "flux_points_fermi": 443, "flux_points_hawc": 443, "flux_points_hess": 443, "flux_points_meta": [69, 71, 72, 74], "flux_points_recomput": 119, "flux_points_t": [69, 71, 72, 74, 75, 76], "flux_pr": 96, "flux_profil": [429, 448, 449], "flux_profile_estim": 448, "flux_profile_fermi": 448, "flux_quant": [128, 129, 130, 451], "flux_ref": [117, 119, 385], "flux_sensit": [117, 119], "flux_ul": [117, 119, 127, 458], "fluxestim": [117, 119, 120, 382, 408, 410, 411, 412, 414, 427], "fluxmap": [116, 118, 119, 127, 133, 412, 427, 438, 493], "fluxmapestim": 385, "fluxmapsmetadata": 388, "fluxpoint": [69, 71, 72, 74, 75, 76, 96, 117, 118, 120, 121, 124, 128, 129, 130, 135, 373, 376, 385, 388, 412, 419, 420, 426, 427, 430, 432, 443, 448, 451, 452, 458, 459, 481, 490, 491, 493, 495], "fluxpointdataset": 406, "fluxpointestim": [376, 403, 409, 422], "fluxpointfit": 373, "fluxpointfitt": 421, "fluxpointprofil": 422, "fluxpointsconfig": 16, "fluxpointsdataset": [93, 94, 97, 100, 382, 385, 388, 402, 406, 427, 432, 434, 443, 444, 454, 455, 491], "fluxpointsdatasetmetadata": 388, "fluxpointsestim": [113, 121, 124, 310, 382, 383, 385, 393, 403, 408, 409, 412, 426, 427, 434, 443, 444, 455, 479, 480], "fluxpointsetim": 385, "fluxpointsmetadata": 388, "fluxprofileestim": [113, 412, 425, 427, 448], "fly": 371, "fmt": [460, 468], "focu": [371, 381, 406, 419, 436, 555], "focus": [371, 387], "fold": [103, 385, 432, 443, 491, 493], "folder": [11, 78, 89, 96, 101, 105, 119, 326, 361, 362, 366, 369, 390, 392, 397, 402, 412, 415, 435, 442, 446, 470, 479, 480, 553, 555], "follow": [15, 19, 20, 43, 44, 76, 78, 79, 80, 86, 97, 99, 101, 102, 104, 105, 117, 118, 119, 122, 127, 132, 134, 182, 183, 184, 186, 190, 195, 196, 200, 248, 264, 270, 351, 352, 354, 361, 362, 364, 365, 366, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 380, 381, 383, 384, 385, 386, 387, 388, 389, 390, 392, 393, 394, 395, 396, 397, 404, 405, 406, 408, 409, 412, 414, 415, 421, 422, 426, 427, 430, 431, 432, 434, 435, 437, 438, 439, 442, 443, 446, 447, 452, 453, 454, 455, 457, 458, 460, 462, 463, 464, 465, 466, 470, 475, 479, 481, 483, 485, 486, 491, 493, 495, 497, 499, 500, 504, 506, 507, 508, 509, 517, 518, 522, 525, 526, 528, 529, 533, 534, 536, 537, 538, 539, 540, 553, 556, 557, 558, 560], "font": [183, 184, 186, 192, 195, 196, 362, 463], "fontsiz": [358, 455, 460], "foo": [83, 86], "footprint": [183, 184, 186, 192, 194, 195, 196, 515], "footprint_rectangle_sky_region": 194, "forbid": [16, 80, 99, 118], "forbidden": 465, "forc": [16, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 80, 99, 118, 151, 194, 196, 290, 366, 376, 402], "forecom": [361, 386], "foremost": 555, "forens": 377, "foreseen": [371, 386], "forev": 402, "forg": [360, 378, 390, 391, 393, 394, 397, 420, 470], "forget": [435, 445, 479], "forgot": 361, "forgotten": 361, "fork": 364, "form": [16, 80, 83, 86, 97, 99, 118, 153, 156, 191, 302, 361, 367, 371, 376, 384, 386, 388, 398, 420, 464, 468, 492, 500, 513, 523, 553], "formal": [366, 389, 438], "format": [16, 79, 80, 81, 82, 83, 84, 86, 89, 97, 99, 100, 102, 104, 105, 117, 118, 119, 120, 135, 137, 138, 139, 140, 141, 142, 143, 144, 145, 147, 148, 150, 152, 153, 154, 155, 156, 176, 181, 182, 183, 184, 185, 186, 187, 188, 191, 192, 193, 194, 195, 196, 198, 211, 225, 233, 261, 298, 320, 342, 343, 350, 360, 362, 369, 370, 371, 372, 373, 375, 377, 385, 387, 388, 391, 400, 412, 414, 417, 421, 423, 424, 426, 427, 432, 434, 435, 436, 438, 439, 440, 442, 444, 446, 447, 448, 451, 452, 454, 458, 461, 463, 464, 466, 470, 471, 472, 473, 479, 481, 483, 489, 491, 492, 493, 494, 497, 498, 499, 500, 501, 508, 549, 550, 554, 555, 556], "format_plot_xaxi": [185, 188, 193, 461], "format_plot_yaxi": [188, 461], "formatt": [350, 463], "formatwarn": 361, "former": [387, 403, 408, 431, 465, 553, 556], "formula": [28, 29, 30, 31, 35, 36, 37, 39, 40, 50, 52, 53, 152, 239, 240, 287, 430, 556], "forum": 390, "forward": [19, 20, 26, 79, 83, 86, 97, 100, 104, 105, 121, 137, 138, 139, 140, 143, 144, 145, 147, 150, 152, 154, 155, 165, 187, 191, 192, 193, 200, 205, 206, 209, 210, 213, 215, 216, 217, 218, 219, 221, 222, 224, 225, 226, 227, 228, 230, 234, 236, 238, 239, 240, 241, 244, 247, 248, 249, 251, 252, 253, 254, 257, 258, 259, 260, 261, 262, 265, 288, 350, 355, 362, 368, 371, 385, 432, 443, 491, 493, 508], "forwardref": [16, 80, 99, 118], "found": [19, 20, 26, 78, 82, 83, 86, 128, 166, 171, 190, 205, 206, 209, 213, 215, 216, 217, 221, 227, 228, 230, 234, 236, 238, 239, 240, 244, 249, 251, 252, 253, 254, 257, 261, 278, 364, 365, 369, 376, 386, 387, 406, 409, 410, 411, 415, 440, 446, 451, 466, 468, 473, 492, 493, 504, 505], "four": [364, 372, 385, 452, 470, 471, 499, 501, 507, 554], "fov": [116, 137, 138, 160, 161, 175, 176, 178, 180, 219, 361, 367, 375, 417, 420, 421, 439, 461, 464, 465, 470, 503, 554], "fov_": 361, "fov_align": [137, 138, 139, 140, 143, 144, 145, 147, 150, 152, 154, 155, 461], "fov_background": [439, 479], "fov_bkg_mak": [462, 502], "fov_lat": [138, 461, 470, 500], "fov_lat_axi": 461, "fov_lon": [138, 461, 470, 500], "fov_lon_axi": 461, "fov_theta": 361, "fovalign": [137, 138, 139, 140, 143, 144, 145, 147, 150, 152, 154, 155, 461], "fovbackground": [389, 408], "fovbackgroundmak": [161, 407, 412, 462, 479, 480], "fovbackgroundmodel": [15, 97, 103, 104, 107, 160, 229, 389, 409, 426, 427, 442, 443, 446, 447, 450, 459, 465, 479, 480, 502, 515], "fp": [119, 135, 385, 479, 493, 495], "fp_dataset": 459, "fp_dnde": 385, "fp_energy_flux": 385, "fpe": [310, 383, 385, 434, 444, 455, 480], "fpp": 279, "fpp_err": [279, 451], "fpp_tabl": 451, "fr": [387, 470], "frac": [17, 19, 20, 21, 22, 23, 24, 25, 27, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 50, 51, 52, 53, 54, 100, 105, 140, 143, 199, 217, 221, 238, 240, 252, 278, 280, 289, 384, 491, 499, 500, 512, 513, 514, 517, 518, 522, 525, 526, 528, 529, 533, 534, 536, 537, 538, 539, 543, 544, 545, 547, 557, 558], "fraction": [19, 20, 26, 50, 52, 53, 79, 84, 85, 116, 126, 130, 144, 150, 152, 153, 154, 156, 191, 197, 198, 205, 206, 209, 212, 213, 215, 216, 217, 221, 227, 228, 230, 234, 236, 238, 239, 240, 244, 249, 251, 252, 253, 254, 257, 261, 279, 280, 371, 376, 419, 427, 430, 437, 446, 450, 459, 461, 464, 470, 471, 472], "frame": [16, 79, 81, 86, 89, 90, 91, 97, 100, 104, 105, 106, 110, 121, 132, 153, 163, 166, 176, 182, 183, 184, 186, 189, 191, 192, 194, 195, 196, 207, 208, 212, 220, 223, 235, 237, 245, 246, 248, 250, 256, 260, 288, 289, 324, 337, 361, 362, 370, 372, 375, 385, 402, 403, 405, 406, 407, 431, 434, 435, 436, 437, 439, 440, 442, 443, 444, 445, 446, 447, 448, 450, 452, 453, 454, 455, 457, 459, 461, 462, 463, 464, 465, 466, 467, 471, 472, 473, 479, 480, 481, 499, 504, 506, 507, 508, 512, 513, 514, 515, 516, 517, 518, 519], "framework": [372, 374, 375, 377, 379, 380, 384, 402, 403, 409, 421, 455, 466, 485, 495], "franceschini": [213, 214, 261, 426, 521], "franceschini17": [214, 521], "franceschni": 521, "frd_ab": 214, "free": [50, 52, 53, 97, 100, 104, 105, 120, 124, 125, 163, 200, 202, 204, 235, 236, 270, 366, 376, 402, 435, 437, 439, 440, 442, 444, 445, 450, 452, 454, 459, 460, 462, 465, 466, 468, 471, 475, 479, 480, 483, 493, 502, 515, 531, 532, 555, 557, 558], "free_paramet": [202, 204, 270, 460, 465], "freedom": [114, 117, 119, 134, 387, 427, 445, 493, 557, 558], "freez": [19, 20, 26, 83, 86, 202, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 230, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 256, 257, 258, 259, 260, 261, 262, 270, 376, 387, 402, 412, 427, 439, 450, 460, 466, 531], "freeze_al": [202, 204], "frenk": 483, "frequenc": [259, 273, 487], "frequent": [188, 361, 370, 379, 387, 451, 453, 454, 464, 495, 496, 555], "frequentist": 379, "fridai": 370, "friendli": [366, 388, 423, 435, 479, 495], "from": [13, 15, 16, 19, 20, 26, 27, 28, 29, 30, 31, 32, 33, 35, 36, 37, 38, 39, 40, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 89, 91, 95, 96, 97, 98, 99, 100, 101, 103, 104, 105, 106, 107, 109, 110, 111, 112, 116, 117, 118, 119, 120, 121, 123, 124, 125, 126, 127, 131, 132, 133, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 147, 148, 150, 151, 152, 153, 154, 155, 156, 157, 158, 163, 164, 165, 166, 169, 170, 172, 176, 178, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 256, 257, 258, 259, 260, 261, 262, 264, 270, 271, 272, 273, 274, 277, 280, 288, 289, 290, 300, 308, 310, 312, 313, 317, 320, 321, 325, 329, 340, 341, 343, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 362, 364, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 393, 397, 398, 400, 401, 402, 404, 405, 406, 407, 408, 409, 412, 413, 414, 416, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 454, 455, 456, 457, 458, 459, 460, 461, 462, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 487, 488, 489, 490, 491, 492, 493, 495, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 559], "from_align": [194, 412], "from_attribut": [16, 80, 99, 118], "from_bound": [143, 145, 153, 182, 188, 194, 385, 443, 446, 447, 459, 461, 462, 463, 473, 507, 508], "from_covariance_matrix": 389, "from_default": 187, "from_diagonal_respons": [106, 110, 140, 141, 142, 438, 471], "from_dict": [19, 20, 26, 96, 97, 100, 104, 105, 202, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 256, 257, 258, 259, 260, 261, 262, 405, 412, 468], "from_dir": [78, 85, 91, 163, 288, 289, 397, 431, 434, 436, 444, 453, 455, 462, 467, 470, 473, 477, 480, 492, 495, 502, 504, 505], "from_edg": [142, 183, 184, 186, 188, 192, 195, 196, 437, 450, 454, 461, 471, 472], "from_edisp_kernel": 141, "from_energy_bound": [97, 100, 104, 105, 106, 110, 140, 142, 143, 151, 153, 163, 188, 196, 362, 430, 431, 434, 436, 443, 444, 446, 447, 453, 455, 459, 461, 462, 466, 471, 472, 480, 499, 502, 504, 505, 508], "from_energy_edg": [140, 188, 356, 459, 461], "from_events_fil": [78, 446, 470], "from_factor_matrix": 199, "from_fil": [78, 492], "from_fits_head": 81, "from_gauss": [140, 141, 145, 151, 153, 156, 499], "from_gaussian": 409, "from_geom": [97, 100, 104, 105, 141, 142, 151, 153, 156, 183, 184, 186, 190, 192, 195, 196, 406, 425, 459, 463, 464, 508, 514], "from_gti": 193, "from_gti_bound": 193, "from_hdu": [182, 184, 196], "from_hdulist": [97, 100, 104, 105, 117, 119, 137, 138, 139, 140, 141, 142, 143, 144, 145, 147, 148, 150, 152, 153, 154, 155, 156, 181, 182, 183, 184, 186, 190, 191, 192, 194, 195, 196, 463], "from_head": [80, 99, 118, 182, 194, 388], "from_irf": 155, "from_log10": [227, 228, 529], "from_map": [117, 119], "from_map_dataset": [100, 105], "from_nam": [440, 444], "from_nod": 188, "from_orm": [16, 80, 99, 118], "from_panda": [83, 86], "from_paramet": [19, 20, 26, 205, 206, 207, 208, 209, 210, 212, 213, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 230, 232, 234, 235, 236, 237, 238, 239, 240, 241, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 256, 257, 258, 259, 260, 261, 262], "from_parametr": [143, 497], "from_posit": [207, 208, 212, 220, 223, 235, 237, 245, 246, 250, 256, 260, 447], "from_refer": 384, "from_region": [191, 212, 426, 504], "from_region_map": 261, "from_spatial_model": 151, "from_spectrum_dataset": [105, 430, 437], "from_stack": [79, 82, 87, 117, 119, 183, 184, 185, 186, 188, 192, 195, 196, 199, 202, 204, 426, 427, 492], "from_tabl": [119, 137, 138, 139, 140, 143, 144, 145, 147, 150, 152, 154, 155, 185, 187, 188, 192, 193, 225, 423, 430], "from_table_hdu": [82, 187, 188], "from_time_bound": 193, "from_time_edg": [193, 451], "from_time_interv": 82, "from_wcs_til": 184, "from_yaml": [16, 211, 233, 372, 435], "fromnumer": 436, "front": [370, 390, 419], "frozen": [19, 20, 26, 96, 120, 124, 160, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 230, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 256, 257, 258, 259, 260, 261, 262, 270, 376, 384, 389, 404, 427, 431, 432, 434, 435, 436, 437, 439, 442, 443, 444, 445, 446, 447, 448, 450, 453, 454, 458, 459, 460, 464, 465, 466, 471, 479, 480, 481, 493, 502, 531, 540], "fr\u00f6se": 427, "ftol": 460, "ftool": 376, "fulfil": [388, 463], "full": [78, 120, 127, 137, 138, 139, 140, 143, 144, 145, 147, 150, 152, 154, 155, 184, 211, 233, 298, 357, 360, 361, 366, 370, 371, 374, 376, 377, 381, 387, 389, 392, 399, 402, 412, 414, 430, 431, 432, 434, 435, 436, 437, 438, 439, 440, 442, 443, 444, 445, 446, 447, 448, 450, 451, 452, 453, 454, 455, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 470, 471, 472, 473, 477, 479, 480, 481, 495, 506, 511, 512, 513, 514, 515, 516, 517, 518, 519, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 542, 543, 544, 545, 546, 547, 548, 549, 550, 553], "full_enclosur": [176, 461], "full_output": [19, 20, 26, 205, 206, 207, 208, 209, 210, 211, 212, 213, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 230, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 256, 257, 258, 259, 260, 261, 262], "fulli": [124, 181, 182, 191, 194, 259, 370, 371, 378, 382, 387, 391, 394, 404, 406, 414, 431, 451, 466, 470, 472, 473, 483], "fun": [361, 364], "func": [17, 18, 21, 22, 24, 25, 27, 183, 184, 186, 192, 195, 196, 266, 311, 315, 316, 354, 440, 442], "function": [6, 15, 16, 19, 20, 26, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 46, 78, 79, 81, 83, 84, 86, 95, 96, 97, 98, 100, 103, 104, 105, 112, 117, 124, 127, 128, 129, 130, 133, 143, 144, 145, 147, 148, 150, 152, 153, 154, 156, 183, 184, 186, 188, 192, 195, 196, 200, 205, 206, 209, 213, 215, 216, 217, 221, 227, 228, 230, 234, 236, 238, 239, 240, 244, 247, 248, 249, 251, 252, 253, 254, 257, 261, 266, 272, 273, 274, 282, 286, 303, 311, 312, 314, 315, 319, 320, 329, 346, 349, 350, 354, 356, 358, 360, 364, 367, 371, 372, 373, 374, 375, 376, 379, 380, 381, 382, 384, 385, 386, 388, 389, 393, 397, 398, 400, 402, 403, 404, 405, 406, 408, 409, 412, 413, 414, 416, 417, 418, 419, 420, 421, 422, 425, 426, 427, 430, 434, 435, 436, 437, 438, 442, 444, 445, 446, 447, 448, 459, 460, 461, 462, 463, 464, 465, 466, 468, 473, 475, 479, 480, 481, 483, 484, 485, 490, 491, 492, 494, 495, 504, 506, 508, 513, 514, 516, 543, 552, 553, 554, 555, 556, 558, 560], "functional_model": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40], "fundament": [374, 383, 388], "further": [11, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 78, 112, 116, 120, 121, 124, 127, 189, 314, 361, 364, 365, 367, 370, 371, 374, 375, 378, 380, 381, 382, 383, 384, 407, 408, 409, 412, 414, 440, 446, 457, 458, 459, 463, 481, 484, 485, 500, 555], "furthermor": 470, "futur": [98, 103, 120, 121, 124, 201, 203, 361, 366, 371, 374, 375, 377, 378, 379, 380, 381, 382, 383, 385, 386, 387, 389, 420, 442, 446, 463, 471, 484, 493, 552], "fvar": [130, 280, 376, 419], "fvar_err": [280, 451], "fvar_tabl": 451, "g": [13, 19, 20, 26, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 46, 47, 51, 52, 53, 54, 59, 65, 79, 81, 82, 83, 86, 90, 108, 132, 182, 183, 184, 186, 188, 192, 194, 195, 196, 200, 205, 206, 209, 213, 215, 216, 217, 221, 227, 228, 230, 234, 236, 238, 239, 240, 244, 249, 251, 252, 253, 254, 257, 261, 278, 290, 329, 350, 356, 360, 361, 362, 364, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 384, 385, 387, 388, 390, 391, 393, 394, 395, 412, 414, 418, 420, 421, 422, 423, 426, 431, 432, 435, 437, 444, 446, 448, 457, 458, 459, 460, 463, 464, 465, 466, 470, 471, 475, 481, 483, 487, 490, 491, 492, 493, 495, 500, 505, 506, 507, 514, 552, 554, 555, 557, 559, 560], "g0": [442, 471], "g28": 65, "g320": 458, "g850d38603": [99, 118, 398, 430, 431, 434, 435, 436, 437, 438, 439, 440, 442, 443, 444, 445, 446, 447, 448, 452, 453, 454, 455, 457, 458, 459, 460, 462, 463, 464, 465, 466, 468, 470, 471, 472, 473, 479, 480, 481, 511, 512, 513, 514, 515, 516, 517, 518, 519, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 542, 543, 544, 545, 546, 547, 548, 549, 550], "g_1": 143, "g_2": 143, "g_3": 143, "ga": 448, "gabriel": 421, "gadf": [79, 80, 81, 82, 84, 90, 97, 99, 100, 104, 105, 118, 119, 137, 138, 139, 140, 141, 142, 143, 144, 145, 147, 148, 150, 152, 153, 154, 155, 156, 181, 182, 183, 184, 185, 186, 187, 188, 191, 192, 193, 194, 195, 196, 371, 374, 385, 388, 412, 414, 423, 426, 461, 463, 479, 491, 495, 508, 554], "gain": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 366, 378, 420], "gal_diffus": 377, "galact": [17, 18, 21, 22, 24, 25, 27, 29, 45, 47, 65, 66, 79, 86, 97, 100, 104, 105, 106, 110, 120, 121, 123, 153, 182, 183, 184, 186, 189, 191, 192, 194, 195, 196, 212, 220, 223, 237, 245, 246, 297, 324, 361, 362, 372, 375, 381, 400, 402, 419, 431, 434, 437, 438, 439, 442, 444, 445, 446, 448, 450, 454, 457, 458, 459, 463, 464, 465, 466, 470, 481, 483, 486, 490, 505, 506, 507, 508, 512, 513, 514, 515, 516, 517, 518, 554, 560], "galactic_median": 79, "galactocentr": 41, "galaxi": [28, 30, 35, 39, 40, 41, 213, 279, 280, 400, 431], "galelli": [425, 427], "gallant": 420, "galleri": [391, 407, 409, 412, 423, 427, 429, 430, 431, 432, 434, 435, 436, 437, 438, 439, 440, 442, 443, 444, 445, 446, 447, 448, 450, 451, 452, 453, 454, 455, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 470, 471, 472, 473, 475, 477, 479, 480, 481, 496, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552], "gallery_jupyt": 509, "gallery_python": 509, "galprop": [182, 183, 184, 186, 195, 196], "galprop2": [182, 183, 184, 186, 195, 196], "gambit": 483, "gamma": [11, 17, 18, 19, 20, 21, 22, 24, 25, 26, 27, 52, 53, 57, 59, 62, 64, 65, 75, 79, 116, 120, 126, 152, 176, 183, 184, 186, 195, 196, 213, 215, 216, 217, 238, 239, 240, 261, 264, 317, 361, 367, 369, 372, 373, 374, 375, 385, 390, 391, 393, 397, 398, 403, 417, 418, 419, 420, 421, 430, 432, 434, 435, 436, 440, 443, 444, 445, 446, 448, 458, 461, 463, 464, 467, 470, 472, 473, 479, 481, 483, 485, 486, 490, 491, 492, 495, 498, 500, 502, 504, 505, 514, 521, 525, 526, 533, 534, 552, 553, 554, 555, 556, 557, 560], "gamma1": [205, 522, 536], "gamma2": [205, 522, 536], "gamma_1": [249, 252, 253, 254, 384, 537, 538, 539], "gamma_2": [249, 252, 253, 254, 384, 537, 538, 539], "gamma_min": [126, 430], "gamma_min_sensit": 116, "gammacat": [55, 64, 419, 432], "gammalib": [361, 374], "gammamc_dif": 483, "gammapi": [6, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 362, 363, 365, 366, 368, 369, 371, 372, 373, 374, 375, 376, 377, 379, 383, 384, 385, 389, 392, 393, 394, 395, 396, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 412, 413, 414, 416, 417, 418, 419, 420, 421, 422, 423, 424, 426, 427, 429, 430, 431, 432, 434, 435, 436, 437, 438, 439, 440, 442, 443, 444, 445, 446, 447, 448, 450, 451, 452, 453, 454, 455, 457, 458, 459, 460, 462, 463, 464, 465, 466, 467, 468, 469, 474, 475, 477, 479, 480, 481, 484, 485, 487, 488, 489, 495, 496, 497, 498, 499, 501, 505, 506, 508, 509, 511, 512, 513, 514, 515, 516, 517, 518, 519, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 542, 543, 544, 545, 546, 547, 548, 549, 550, 554, 555, 556, 557, 560], "gammapy_analysis_config": 377, "gammapy_data": [26, 57, 58, 59, 60, 61, 62, 63, 64, 65, 78, 79, 82, 84, 85, 86, 89, 91, 96, 97, 100, 104, 105, 109, 111, 112, 116, 119, 121, 123, 125, 127, 132, 133, 135, 136, 138, 142, 143, 144, 145, 153, 163, 183, 184, 186, 192, 195, 196, 214, 225, 261, 270, 288, 289, 340, 349, 354, 356, 361, 362, 364, 377, 393, 395, 397, 401, 402, 403, 412, 421, 430, 431, 434, 435, 436, 437, 438, 439, 440, 442, 443, 444, 445, 446, 447, 448, 450, 451, 452, 453, 454, 455, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 470, 471, 472, 473, 477, 479, 480, 481, 492, 493, 495, 497, 498, 499, 501, 502, 504, 505, 519, 549, 550], "gammapy_extra": 401, "gammapybaseconfig": 16, "gammapydeprecationwarn": [361, 527, 530], "gammmapi": [371, 378], "garcia": 421, "gather": [375, 381, 390], "gauss": [42, 51, 54, 97, 100, 122, 123, 144, 184, 196, 220, 221, 222, 223, 384, 418, 455, 463, 466, 481, 512, 513], "gauss_elong": 466, "gauss_temp": 466, "gaussian": [65, 66, 76, 77, 112, 122, 140, 141, 145, 151, 153, 156, 184, 196, 220, 221, 222, 223, 224, 279, 280, 372, 380, 384, 389, 405, 409, 429, 432, 444, 446, 450, 451, 454, 458, 460, 461, 466, 468, 470, 481, 499, 501, 509, 520, 541, 551], "gaussian1d": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40], "gaussian2d": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 50], "gaussian2dkernel": 112, "gaussian_compon": [65, 458], "gaussian_filt": [122, 196], "gaussian_model": 544, "gaussian_sigma": 460, "gaussianband2d": 420, "gaussianprior": [389, 468], "gaussianspatialmodel": [76, 77, 109, 111, 242, 384, 405, 444, 445, 450, 466, 513], "gaussianspectralmodel": [243, 384, 466, 528], "gaussiantemporalmod": 412, "gaussiantemporalmodel": [255, 384, 408, 466, 544], "gb": [369, 371, 470, 472], "gc": [82, 97, 100, 104, 105, 109, 111, 112, 116, 121, 123, 127, 132, 133, 349, 354, 356, 364, 438, 439, 442, 444, 446, 448, 457, 459, 463, 465, 466, 470, 471, 481, 483, 492, 493], "gc_3fhl": 481, "gc_3fhl_cutout": 481, "gc_3fhl_smooth": 481, "gc_imag": 448, "gc_po": 471, "gc_sep": 465, "gcc": 397, "geminga": 59, "gen_gaussian_model": 545, "gener": [16, 27, 33, 42, 45, 46, 47, 56, 78, 79, 80, 83, 84, 86, 87, 97, 98, 99, 100, 103, 104, 105, 118, 142, 153, 156, 183, 184, 186, 187, 188, 192, 195, 196, 200, 210, 218, 222, 223, 224, 225, 226, 241, 247, 256, 257, 259, 261, 262, 273, 312, 314, 317, 318, 319, 320, 326, 362, 364, 370, 372, 373, 374, 375, 377, 379, 380, 381, 382, 383, 384, 385, 386, 391, 394, 397, 403, 407, 408, 409, 412, 414, 419, 423, 426, 427, 429, 430, 431, 432, 434, 435, 436, 437, 438, 439, 440, 442, 443, 444, 445, 446, 447, 448, 450, 451, 452, 453, 454, 455, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 470, 471, 472, 473, 475, 477, 479, 480, 481, 491, 495, 500, 506, 508, 509, 511, 512, 513, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 542, 543, 544, 546, 547, 548, 549, 550, 551, 555, 557, 558], "generalconfig": 16, "generalis": [119, 380, 406, 461], "generalized_gaussian_model": 545, "generalizedgaussianspatialmodel": [242, 409, 466, 514], "generalizedgaussiantemporalmodel": [255, 414, 466, 545], "generalrandom": 404, "generatejsonschema": [16, 80, 99, 118], "gengauss": [224, 466, 514], "geodeticloc": 89, "geolat": 431, "geom": [16, 23, 79, 97, 100, 104, 105, 106, 108, 110, 116, 117, 119, 121, 127, 141, 142, 151, 153, 156, 163, 170, 172, 173, 174, 175, 176, 177, 178, 179, 182, 183, 184, 186, 187, 190, 191, 192, 194, 195, 196, 207, 208, 211, 212, 219, 220, 223, 233, 235, 237, 245, 246, 248, 250, 256, 260, 372, 374, 376, 409, 412, 421, 427, 430, 431, 434, 435, 436, 437, 438, 439, 440, 442, 444, 446, 447, 448, 450, 451, 452, 453, 454, 455, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 468, 471, 472, 479, 480, 481, 493, 502, 504, 505, 506, 507, 508, 511, 513, 514, 515, 516], "geom_24_energy_bin": 508, "geom_6_energy_bin": 508, "geom_edisp": [97, 100, 104, 105, 459], "geom_energi": 508, "geom_exposur": [97, 100, 104, 105, 425, 459], "geom_imag": [440, 444, 508], "geom_irf": 374, "geom_psf": [97, 100, 104, 105, 459], "geom_tru": 406, "geomconfig": 16, "geometri": [23, 79, 95, 97, 100, 104, 105, 108, 117, 119, 141, 142, 148, 151, 153, 156, 160, 163, 165, 170, 172, 173, 174, 175, 176, 177, 178, 179, 181, 182, 183, 184, 186, 187, 189, 190, 191, 192, 194, 195, 196, 197, 198, 207, 208, 211, 212, 220, 223, 233, 235, 237, 245, 246, 248, 250, 256, 260, 357, 367, 373, 376, 377, 406, 412, 423, 434, 435, 436, 437, 439, 440, 442, 446, 447, 450, 459, 462, 471, 472, 491, 493, 495, 503, 507, 553, 554], "geomspac": [119, 389], "geq": [52, 53], "get": [16, 19, 20, 26, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 78, 80, 81, 83, 84, 86, 89, 91, 95, 97, 99, 101, 102, 104, 112, 116, 118, 120, 121, 124, 125, 127, 132, 135, 140, 141, 142, 148, 153, 156, 181, 182, 183, 184, 186, 187, 190, 191, 192, 194, 195, 196, 199, 202, 204, 205, 206, 207, 208, 209, 212, 213, 215, 216, 217, 220, 221, 223, 227, 228, 230, 234, 235, 236, 237, 238, 239, 240, 244, 245, 246, 249, 250, 251, 252, 253, 254, 256, 257, 259, 260, 261, 263, 298, 314, 361, 362, 366, 367, 368, 369, 370, 371, 375, 376, 378, 385, 387, 388, 389, 391, 392, 394, 395, 397, 398, 401, 403, 418, 419, 420, 421, 430, 435, 437, 438, 442, 443, 444, 450, 453, 458, 459, 460, 461, 462, 464, 465, 466, 468, 470, 471, 472, 473, 475, 479, 480, 481, 483, 491, 495, 508, 554, 558], "get_altaz": [81, 89, 426], "get_bia": 140, "get_bias_energi": 140, "get_bounding_box": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40], "get_by_coord": [183, 184, 186, 192, 195, 196, 462, 463, 471, 472, 507], "get_by_idx": [183, 184, 186, 192, 195, 196, 463, 507], "get_by_pix": [183, 184, 186, 192, 195, 196, 507], "get_cl": [432, 458, 464], "get_coord": [181, 182, 187, 191, 194, 405, 412, 421, 447, 463, 464, 504, 508], "get_dataset": [15, 435, 439, 440, 442, 452, 479, 495], "get_devel_vers": 364, "get_edges_fixed_bin": 135, "get_edges_min_t": 135, "get_edisp_kernel": [141, 142, 407, 412, 459, 471, 499], "get_events_meta_data": 374, "get_excess_map": [15, 479], "get_filenam": [101, 102], "get_flux_point": [15, 117, 119, 385, 407, 435, 479], "get_group_by_idx": 385, "get_hdu": 298, "get_icr": [81, 89, 426], "get_idx": [181, 182, 191, 194, 508], "get_image_by_coord": [183, 184, 186, 192, 195, 196, 463], "get_image_by_idx": [183, 184, 186, 192, 195, 196], "get_image_by_pix": [183, 184, 186, 192, 195, 196], "get_index_list": 182, "get_irfs_featur": [288, 289, 426, 467], "get_kernel": 112, "get_light_curv": 15, "get_mean": 140, "get_observ": [15, 78, 91, 288, 289, 403, 414, 431, 434, 435, 436, 439, 440, 442, 444, 446, 452, 453, 455, 462, 467, 472, 473, 477, 479, 480, 495, 502, 504, 505], "get_ogip_meta": 102, "get_pix": 194, "get_pointing_altaz": [84, 467], "get_pointing_icr": [84, 426, 444, 462, 480], "get_psf_kernel": [151, 153, 156, 427, 471], "get_random_st": [33, 42, 45, 46, 47, 97, 98, 100, 103, 104, 105, 142, 153, 156, 183, 184, 186, 192, 195, 196, 210, 218, 222, 224, 225, 226, 241, 247, 259, 262, 273, 312, 317, 318, 319, 320, 361], "get_rebinned_axi": 453, "get_resolut": 140, "get_respons": 419, "get_scal": 112, "get_scale_model": [120, 121, 124], "get_spectrum": [183, 184, 186, 192, 195, 196], "get_subcovari": 199, "get_transform": [438, 444, 512, 513], "get_valid_path": 101, "get_wcs_coord_and_weight": 191, "getattr": 389, "getitem": 419, "getlogg": [361, 440, 444, 452, 453, 454, 477], "getter": 362, "getting_start": 381, "gev": [17, 18, 19, 20, 21, 22, 24, 25, 27, 71, 121, 127, 183, 184, 186, 192, 195, 196, 432, 436, 438, 442, 443, 448, 450, 454, 455, 457, 458, 462, 463, 464, 465, 470, 471, 472, 481, 508, 531, 553, 554], "gev2": [19, 457], "gevgevgev1": 432, "gh": [361, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 391], "git": [82, 248, 361, 362, 364, 366, 368, 369, 387, 394, 423], "github": [362, 364, 365, 366, 367, 369, 370, 379, 381, 387, 390, 391, 394, 396, 401, 402, 403, 404, 405, 406, 407, 408, 409, 412, 417, 418, 419, 420, 421, 422], "giuliani": 374, "giunti": [402, 403, 404, 405, 406, 407, 408, 409, 412, 414, 415, 423, 426], "give": [6, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 83, 86, 131, 278, 279, 361, 366, 370, 371, 375, 376, 377, 378, 381, 382, 387, 391, 402, 404, 406, 414, 427, 435, 438, 445, 447, 451, 453, 458, 460, 461, 462, 463, 466, 470, 471, 479, 495, 500, 555, 556, 558, 559], "given": [16, 17, 18, 19, 20, 21, 22, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 42, 46, 51, 52, 53, 65, 66, 67, 76, 78, 79, 80, 81, 83, 84, 86, 89, 91, 94, 95, 96, 97, 98, 99, 100, 103, 104, 105, 107, 114, 116, 117, 118, 119, 120, 122, 124, 125, 126, 127, 132, 133, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 147, 148, 150, 151, 152, 153, 154, 155, 156, 157, 165, 166, 169, 171, 173, 174, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 200, 202, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 230, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 256, 257, 258, 259, 260, 261, 262, 263, 270, 272, 274, 280, 288, 290, 293, 294, 301, 308, 312, 315, 316, 324, 348, 349, 354, 358, 361, 368, 369, 370, 371, 372, 373, 374, 375, 376, 378, 380, 384, 385, 387, 389, 401, 406, 412, 420, 421, 426, 430, 431, 432, 435, 438, 446, 447, 448, 450, 452, 453, 454, 457, 458, 459, 461, 462, 463, 464, 466, 470, 471, 479, 481, 491, 492, 493, 495, 499, 500, 504, 505, 507, 508, 514, 518, 521, 552, 554, 555, 556, 557], "glast": 471, "glat": [41, 65, 66, 79, 361, 434, 458, 463, 471], "glat_err": 458, "glat_pnt": [444, 470], "glimps": [472, 475], "gll_iem_v06_cutout": [183, 184, 186, 192, 195, 196], "gll_iem_v06_gc": [446, 463, 465, 466, 471], "gll_psc_v16": 60, "gll_psc_v20": 458, "gll_psc_v32": 63, "gll_psch_v09": 58, "gll_psch_v13": 61, "glob": [78, 362, 459], "global": [16, 33, 42, 45, 46, 47, 95, 97, 98, 100, 103, 104, 105, 142, 153, 156, 181, 182, 183, 184, 186, 191, 192, 194, 195, 196, 200, 210, 218, 222, 224, 225, 226, 241, 247, 259, 262, 273, 312, 314, 317, 318, 319, 320, 361, 365, 367, 409, 426, 434, 444, 445, 455, 465, 468, 493, 553], "global_dataset": 462, "global_to_loc": 182, "glon": [41, 65, 66, 79, 361, 434, 458, 463, 471], "glon_pnt": [444, 470], "glossari": [381, 423, 491, 508], "glue": 495, "glueviz": 378, "gmodelspatialradialprofiledmburkert": 483, "gmodelspatialradialprofiledmeinasto": 483, "gmodelspatialradialprofiledmzhao": 483, "go": [50, 83, 86, 364, 371, 381, 386, 423, 430, 431, 432, 434, 435, 436, 437, 438, 439, 440, 442, 443, 444, 445, 446, 447, 448, 450, 451, 452, 453, 454, 455, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 470, 471, 472, 473, 477, 479, 480, 481, 483, 511, 512, 513, 514, 515, 516, 517, 518, 519, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 542, 543, 544, 545, 546, 547, 548, 549, 550, 555], "goal": [366, 375, 389, 460], "goe": [41, 52, 351, 361, 380, 391, 448], "gogia": 419, "good": [78, 79, 82, 96, 119, 283, 287, 361, 366, 368, 369, 370, 371, 372, 375, 377, 378, 379, 381, 434, 436, 437, 440, 450, 451, 453, 454, 457, 459, 460, 462, 464, 466, 471, 472, 475, 517, 518, 554, 559], "googl": [83, 86, 381, 390], "got": 470, "gov": [58, 60, 61, 63, 140, 188, 381, 390, 534], "gp": [78, 79, 85, 362, 371, 377, 439, 442, 444, 455, 470, 472], "gpl3": 361, "gps_baseline_110380": [78, 79, 470], "gradient": [19, 20, 26, 205, 206, 209, 213, 215, 216, 217, 221, 227, 228, 230, 234, 236, 238, 239, 240, 244, 249, 251, 252, 253, 254, 257, 261], "grai": [352, 504, 531], "grand": 361, "grant": [364, 387], "granular": 451, "grayify_colormap": 380, "grb": [451, 454], "great": [366, 375, 380, 418, 475], "greater": [160, 354], "green": [96, 104, 105, 420, 445, 467, 468], "grei": 455, "grep": 396, "grid": [17, 18, 21, 22, 24, 25, 27, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 120, 123, 144, 152, 154, 183, 184, 186, 188, 192, 195, 196, 207, 208, 212, 220, 223, 235, 237, 245, 246, 250, 256, 260, 266, 354, 361, 372, 377, 404, 406, 460, 507, 508, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 542, 543, 544, 545, 546, 547, 548], "gridsearch": [200, 460], "gridspec": 348, "gridspec_kw": [438, 444, 452, 454, 521], "ground": [90, 376, 470, 556], "group": [82, 83, 86, 87, 120, 121, 124, 125, 127, 141, 181, 182, 183, 184, 186, 187, 188, 191, 192, 193, 194, 195, 196, 288, 367, 376, 380, 381, 382, 385, 390, 393, 403, 406, 408, 412, 418, 421, 452, 454, 475, 493, 495, 509, 555], "group_1": 467, "group_2": 467, "group_bi": [83, 86, 385], "group_by_axi": 385, "group_by_label": [87, 467], "group_high_zenith": 467, "group_low_zenith": 467, "group_siz": [135, 453], "group_tabl": [82, 188, 193], "grouped_observ": 467, "grow": [369, 380, 420], "grown": 381, "gr\u00e9aux": 426, "gsfc": [58, 60, 61, 63, 140, 188, 381, 534], "gt": 461, "gtexpcube2": 471, "gti": [78, 79, 83, 84, 85, 95, 96, 97, 100, 104, 105, 117, 119, 121, 124, 157, 193, 248, 367, 370, 371, 374, 375, 376, 385, 404, 406, 407, 409, 422, 426, 427, 446, 453, 454, 459, 462, 470, 472, 473, 491, 495, 554], "gti_1": 492, "gti_2": 492, "gti_t0": 454, "gtimetadata": 388, "gtmktime": [371, 471], "gtobsim": 374, "gtol": 460, "gtpsf": [141, 142, 148, 153, 156, 188, 438, 471], "gtselect": [371, 471], "guarante": [369, 384, 386], "guess": [119, 182, 184, 427], "guid": [364, 377, 379, 393, 394, 395, 398, 421, 475, 495, 510, 520, 541, 551], "guidelin": [361, 365, 398, 420], "guiger": [31, 39], "gz": [58, 60, 61, 63, 64, 65, 78, 79, 82, 84, 86, 89, 97, 100, 104, 105, 109, 111, 112, 116, 121, 123, 127, 132, 133, 145, 214, 261, 349, 354, 356, 362, 383, 421, 434, 435, 438, 445, 446, 447, 448, 458, 459, 461, 463, 465, 466, 470, 471, 472, 477, 479, 480, 481, 492, 493, 495, 497, 498, 499, 501, 521], "h": [26, 65, 78, 82, 83, 86, 90, 122, 142, 183, 184, 186, 192, 195, 196, 273, 351, 381, 384, 393, 397, 398, 406, 421, 429, 430, 431, 434, 435, 437, 443, 445, 452, 453, 454, 457, 461, 462, 463, 466, 470, 471, 472, 474, 475, 477, 479, 480, 490, 492, 495, 508, 543, 544, 554, 555], "h0": 445, "h05": [45, 49], "h1": 445, "h8g_bfid": 462, "h_0": [445, 557], "h_1": [445, 557], "h_i": 122, "ha": [19, 20, 26, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 76, 83, 86, 96, 97, 100, 104, 105, 116, 117, 119, 155, 177, 181, 182, 183, 184, 186, 190, 191, 192, 194, 195, 196, 201, 205, 206, 208, 209, 212, 213, 215, 216, 217, 218, 220, 221, 222, 223, 224, 225, 226, 227, 228, 230, 234, 236, 237, 238, 239, 240, 241, 244, 245, 246, 247, 248, 249, 251, 252, 253, 254, 257, 259, 260, 261, 354, 356, 358, 361, 362, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 394, 408, 409, 412, 414, 415, 421, 422, 423, 425, 426, 427, 431, 434, 435, 436, 440, 445, 447, 452, 453, 455, 457, 458, 459, 460, 462, 463, 464, 466, 467, 468, 470, 472, 473, 479, 491, 492, 495, 500, 504, 505, 508, 512, 513, 540, 552, 555, 557], "habilit": 287, "hack": 417, "had": [361, 367, 369, 387, 409, 415, 419, 420], "hadron": [263, 367, 372, 440, 459, 470, 491, 504], "hajlaoui": [409, 412], "hal": 387, "half": [153, 156, 188, 194, 260], "halo": 483, "halv": [128, 278, 427], "halving_coord": 451, "halving_err": 451, "hand": [165, 361, 364, 369, 372, 381, 387, 389, 424, 460, 475, 495], "handbook": [381, 475], "handi": 442, "handl": [3, 16, 80, 99, 118, 190, 281, 360, 362, 365, 373, 374, 375, 377, 382, 384, 385, 388, 390, 393, 395, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 414, 415, 416, 417, 418, 419, 420, 422, 423, 425, 426, 434, 436, 442, 443, 444, 446, 459, 461, 463, 465, 466, 471, 472, 475, 480, 481, 491, 492, 495, 554], "handler_map": 358, "hanna": 427, "hap": 377, "happen": [78, 364, 366, 368, 369, 375, 379, 391, 435, 465, 475, 479, 480, 491, 495, 557], "happi": [364, 368, 381, 401, 402, 421], "hard": [361, 362, 384, 389, 407, 468], "harder": [368, 555], "hardli": 388, "harri": [416, 417], "harvard": [28, 30, 31, 32, 33, 35, 36, 37, 38, 39, 40, 50, 52, 53, 57, 58, 60, 61, 79, 84, 112, 120, 143, 200, 230, 263, 264, 280, 381, 460], "has_any_t": [117, 119], "has_energy_axi": [181, 182, 191, 194], "has_invers": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40], "has_masked_column": [83, 86], "has_masked_valu": [83, 86], "has_mixin_column": [83, 86], "has_offset_axi": [137, 138, 139, 140, 143, 144, 145, 147, 150, 152, 154, 155], "has_stat_profil": [117, 119], "has_success": [117, 119], "has_ul": [117, 119], "has_user_bounding_box": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40], "has_user_invers": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40], "hasattr": 361, "hasn": [366, 559], "hatch": 455, "have": [16, 19, 20, 26, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 65, 78, 80, 83, 86, 90, 95, 99, 102, 106, 110, 117, 118, 119, 120, 124, 132, 133, 140, 141, 142, 151, 153, 156, 163, 165, 177, 181, 182, 183, 184, 186, 190, 191, 192, 194, 195, 196, 205, 206, 207, 208, 209, 210, 211, 212, 213, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 230, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 256, 257, 258, 259, 260, 261, 262, 290, 314, 320, 358, 360, 361, 362, 363, 364, 366, 367, 368, 370, 372, 374, 375, 378, 379, 380, 381, 382, 383, 384, 386, 387, 388, 389, 391, 392, 393, 394, 395, 396, 397, 398, 401, 402, 403, 406, 409, 412, 414, 415, 418, 420, 421, 422, 423, 424, 426, 427, 430, 431, 434, 435, 436, 437, 438, 439, 440, 442, 443, 444, 445, 446, 447, 448, 450, 453, 454, 455, 458, 459, 460, 461, 463, 464, 465, 466, 467, 468, 470, 471, 472, 475, 479, 480, 481, 483, 491, 492, 493, 495, 506, 507, 508, 518, 529, 552, 555, 558, 559], "haven": 397, "hawc": [55, 59, 62, 70, 73, 92, 398, 406, 412, 420, 423, 424, 426, 429, 474, 475, 490, 491, 492, 503, 507, 554], "hawc19_flux_point": [119, 443, 495], "hawc_crab": [119, 443, 495], "hd": 65, "hdr": 388, "hdr_dict": 388, "hdu": [65, 78, 79, 81, 82, 83, 84, 89, 97, 100, 104, 105, 117, 119, 137, 138, 139, 140, 141, 142, 143, 144, 145, 147, 148, 150, 152, 153, 154, 155, 156, 157, 181, 182, 183, 184, 185, 186, 187, 188, 190, 191, 192, 193, 194, 195, 196, 298, 347, 362, 371, 400, 415, 417, 420, 423, 424, 446, 461, 463, 470, 472, 473, 491, 492, 495, 497, 498, 499, 501, 508, 550], "hdu1": 140, "hdu2": 140, "hdu_al": 446, "hdu_band": [117, 119, 141, 142, 148, 153, 156, 181, 182, 183, 184, 186, 187, 190, 191, 192, 194, 195, 196], "hdu_class": [78, 83, 298, 470, 472, 473], "hdu_class_uniqu": 83, "hdu_evt": 446, "hdu_filenam": 472, "hdu_gti": 446, "hdu_hdu": 78, "hdu_index": 78, "hdu_list": [141, 142, 144, 148, 152, 153, 154, 156, 183, 184, 195, 196], "hdu_loc": 83, "hdu_nam": 298, "hdu_ob": 78, "hdu_out": [183, 184], "hdu_region": [191, 192], "hdu_tabl": [78, 472], "hdu_table_filenam": 78, "hdu_typ": [78, 83, 470, 472, 473], "hdu_type_uniqu": 83, "hduclas2": 461, "hduclas3": 461, "hduclas4": 461, "hduclasn": 461, "hduindext": [78, 298, 472], "hdulist": [97, 100, 102, 104, 105, 117, 119, 137, 138, 139, 140, 141, 142, 143, 144, 145, 147, 148, 150, 152, 153, 154, 155, 156, 181, 182, 183, 184, 186, 190, 191, 192, 194, 195, 196, 446, 463, 491], "hduloc": [83, 97], "he": [263, 371, 376], "hea": 376, "header": [78, 79, 80, 81, 82, 83, 84, 86, 89, 95, 96, 97, 99, 100, 101, 102, 104, 105, 117, 118, 119, 140, 141, 142, 148, 153, 156, 181, 182, 183, 184, 185, 186, 187, 188, 190, 192, 193, 194, 195, 196, 260, 300, 343, 344, 347, 366, 371, 374, 388, 406, 414, 416, 421, 423, 426, 436, 446, 447, 463, 470, 559], "healpi": [182, 360, 368, 370, 378, 392, 393, 395, 404, 412, 430, 431, 434, 435, 436, 437, 438, 439, 440, 442, 443, 444, 445, 446, 447, 448, 452, 453, 454, 455, 457, 458, 459, 460, 462, 463, 464, 465, 466, 468, 470, 471, 472, 473, 479, 480, 481, 506], "healpix": [13, 182, 183, 184, 186, 192, 195, 196, 360, 368, 370, 375, 412, 420, 463, 471, 507], "healpix_to_imag": 413, "heapsort": [83, 86], "heart": 557, "heasarc": [140, 188], "heatmap": [350, 355], "heavi": [421, 422], "heavier": 442, "heavili": 412, "hegra": [92, 264], "heidelberg": 361, "heidt": 451, "height": [16, 29, 83, 86, 89, 121, 323, 435, 439, 440, 442, 448, 452, 455, 457, 463, 464, 466, 479, 504, 508], "heighten": 451, "helen": 418, "hello": [397, 444], "help": [11, 83, 86, 275, 281, 361, 364, 366, 368, 375, 376, 377, 381, 387, 390, 391, 392, 397, 401, 402, 403, 420, 421, 423, 458, 462, 463, 465, 471, 473, 481, 495, 555], "helper": [13, 298, 303, 368, 370, 375, 376, 377, 380, 391, 397, 403, 404, 405, 406, 412, 414, 417, 419, 420, 426, 427, 448, 458, 464, 465, 504, 553, 560], "henc": [83, 86, 377, 439, 440, 493, 508, 557], "her": 390, "here": [13, 78, 79, 83, 86, 97, 104, 119, 134, 138, 143, 152, 200, 272, 274, 277, 349, 360, 361, 362, 363, 364, 367, 368, 373, 374, 375, 376, 377, 378, 379, 380, 381, 387, 388, 389, 391, 393, 395, 397, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 412, 414, 415, 417, 418, 419, 420, 421, 422, 423, 426, 427, 430, 431, 432, 434, 435, 436, 437, 438, 439, 440, 442, 444, 445, 446, 447, 450, 451, 452, 453, 454, 455, 458, 459, 460, 461, 462, 463, 464, 467, 468, 470, 471, 472, 475, 479, 480, 481, 485, 491, 495, 500, 502, 511, 512, 513, 514, 515, 516, 517, 518, 519, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 542, 543, 544, 545, 546, 547, 548, 549, 550, 555, 556, 557, 559, 560], "hereaft": 446, "herebi": 468, "heritag": 387, "herm": [267, 269, 427], "hess": [16, 55, 65, 78, 79, 82, 84, 86, 91, 92, 96, 104, 105, 120, 125, 135, 136, 143, 145, 163, 169, 270, 288, 289, 362, 369, 370, 375, 377, 381, 390, 393, 397, 400, 402, 405, 416, 417, 420, 421, 429, 431, 432, 434, 435, 436, 440, 442, 444, 445, 453, 455, 457, 458, 459, 460, 462, 467, 468, 471, 473, 474, 477, 479, 480, 483, 492, 493, 495, 497, 498, 499, 501, 502, 504, 505], "hess2": [143, 497], "hess_dl3_dr1_obs_id_020136": [84, 145, 362, 497, 498, 499, 501], "hess_dl3_dr1_obs_id_023523": [79, 82, 492], "hess_dl3_dr1_obs_id_023526": 492, "hess_ecpl": [264, 434], "hess_pl": 264, "hessian": 493, "heterogen": [388, 432, 443], "hfm": 65, "hgp": [65, 76, 77, 116, 381, 406, 418, 420, 421, 490], "hgps_catalog_v1": 65, "hgps_sourc": 65, "hgpsc": [65, 458], "hi": [361, 419], "hi_bnd": 188, "hi_threshold": 140, "hidden": 372, "hide": [13, 366, 383], "hierarch": [13, 288, 329, 370, 372, 388, 427, 495, 507], "hierarchi": [288, 372, 405], "hierarchical_clust": [426, 467], "high": [6, 15, 58, 61, 62, 79, 140, 188, 313, 361, 365, 366, 367, 374, 375, 376, 381, 388, 404, 405, 406, 407, 408, 412, 420, 421, 429, 430, 432, 435, 438, 439, 442, 448, 450, 452, 457, 458, 459, 462, 464, 470, 471, 472, 473, 475, 480, 481, 482, 490, 493, 500, 507, 553, 554, 555, 556], "high_zenith": 467, "higher": [181, 182, 183, 184, 186, 191, 192, 194, 195, 196, 224, 364, 367, 372, 377, 380, 382, 394, 432, 447, 451, 461, 463, 508], "highest": [132, 169, 451, 462, 470, 481], "highli": 466, "highlight": 555, "him": 390, "hint": [388, 438, 493], "hire": [144, 381, 485, 487, 488, 489, 491, 492, 497, 498, 499, 501, 504, 508, 557, 560], "hist": [79, 104, 105, 192, 196, 354, 437, 468], "histogram": [79, 104, 105, 188, 192, 196, 354, 426, 455, 508, 554], "histori": [375, 387, 423], "hli": [374, 407, 408, 412, 423, 429, 433, 475, 494, 554], "hli_spectrum_analysi": 435, "hline": 512, "hoc": 375, "hold": [67, 78, 85, 87, 91, 95, 151, 219, 290, 370, 371, 373, 376, 555, 557], "home": [16, 326, 430, 431, 434, 435, 436, 437, 438, 439, 440, 442, 443, 444, 445, 446, 447, 448, 450, 452, 453, 454, 455, 457, 458, 459, 460, 462, 463, 464, 465, 466, 468, 470, 471, 472, 473, 479, 480, 481, 519, 521, 527, 530, 543, 549, 550], "homebrew": 378, "homework": 403, "homogen": [83, 86, 409], "honk": 366, "hood": [435, 475, 479], "hook": [364, 423], "hope": 366, "hopefulli": 368, "horizont": [81, 90, 146, 331, 461, 559], "host": 361, "hour": [65, 89, 364, 377, 391, 430, 458, 462, 463, 495], "hover": 362, "how": [16, 19, 20, 78, 79, 80, 81, 94, 99, 118, 119, 121, 123, 163, 184, 194, 196, 314, 320, 363, 366, 369, 373, 375, 377, 378, 380, 383, 384, 387, 388, 391, 392, 393, 397, 398, 401, 402, 403, 406, 407, 414, 416, 419, 420, 421, 426, 427, 430, 432, 434, 435, 436, 437, 438, 439, 440, 443, 444, 445, 446, 447, 448, 450, 451, 452, 453, 454, 455, 458, 459, 460, 464, 465, 466, 467, 468, 470, 471, 472, 473, 475, 479, 481, 483, 485, 491, 493, 496, 500, 504, 506, 507, 521, 553, 555, 556, 557, 559, 560], "howev": [83, 86, 116, 279, 360, 361, 362, 364, 368, 371, 374, 375, 379, 387, 389, 394, 431, 440, 448, 455, 457, 458, 459, 460, 468, 472, 473, 475, 491, 495, 507, 508, 513, 529, 555], "howto": [381, 423, 424], "hpx": [182, 183, 184, 186, 195, 196, 375, 412, 463, 471], "hpx2wc": [183, 184], "hpx_map": [183, 184], "hpx_pixel": 375, "hpx_reg": 182, "hpxgeom": [117, 181, 183, 184, 407, 412, 423, 471, 506], "hpxmap": [184, 186, 506], "hpxndmap": [256, 412, 506], "hpxsparsemap": 406, "hpxtowcsmap": [183, 184], "hqv6_b4": 466, "hr": [446, 447, 450, 454], "hspace": 457, "hspec": [416, 417, 418], "hst": 213, "hstack": [83, 86, 374], "html": [26, 79, 83, 86, 120, 140, 176, 182, 188, 191, 194, 200, 211, 233, 261, 290, 317, 318, 361, 362, 364, 369, 381, 386, 387, 391, 399, 420, 430, 437, 439, 442, 444, 450, 454, 460, 461, 470, 492, 498, 506, 508, 534], "htmlcov": 391, "http": [11, 13, 16, 26, 28, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 50, 52, 53, 57, 58, 60, 61, 62, 63, 65, 79, 80, 83, 84, 86, 99, 112, 118, 120, 128, 134, 140, 143, 169, 176, 182, 188, 191, 194, 200, 211, 230, 233, 239, 240, 253, 254, 261, 263, 264, 279, 280, 286, 290, 317, 318, 329, 364, 378, 381, 386, 387, 390, 391, 392, 393, 394, 395, 399, 403, 420, 430, 434, 437, 439, 442, 443, 444, 450, 454, 457, 458, 460, 461, 462, 470, 473, 492, 506, 508, 534, 538, 539, 555], "hubert": 421, "hue": 352, "huestart": 352, "huge": [391, 513], "hugovk": 402, "human": [342, 372, 391, 414, 435, 479], "hundr": 472, "hypercub": [463, 507, 508], "hypothes": [270, 426, 495, 557], "hypothesi": [117, 119, 120, 121, 124, 125, 270, 272, 274, 432, 438, 445, 493, 495, 554, 557], "hz": [320, 481], "hzuz_uah": 462, "i": [11, 13, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 45, 46, 47, 50, 51, 52, 53, 54, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 107, 108, 109, 111, 112, 114, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 147, 148, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 163, 164, 165, 166, 167, 169, 170, 171, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 230, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 256, 257, 258, 259, 260, 261, 262, 263, 264, 266, 268, 270, 271, 272, 273, 274, 275, 277, 278, 279, 280, 281, 282, 286, 287, 288, 290, 292, 296, 298, 301, 302, 303, 308, 310, 311, 314, 317, 318, 319, 320, 322, 323, 328, 330, 332, 336, 338, 339, 343, 344, 345, 347, 348, 349, 350, 351, 352, 354, 355, 356, 357, 358, 360, 362, 363, 365, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 430, 431, 432, 434, 435, 436, 437, 438, 439, 440, 442, 443, 444, 445, 446, 447, 450, 451, 452, 453, 454, 455, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 470, 471, 472, 473, 475, 479, 480, 481, 483, 484, 485, 490, 491, 492, 493, 494, 495, 497, 498, 499, 500, 501, 502, 503, 504, 505, 507, 508, 511, 512, 513, 514, 515, 516, 517, 518, 519, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 542, 543, 544, 545, 546, 547, 548, 549, 550, 552, 553, 554, 555, 556, 557, 558, 559, 560], "i0": [83, 86], "i1": [83, 86], "i4": 448, "i8": [463, 481], "i_0": [183, 184, 186, 192, 195, 196], "i_hpx": [183, 184, 186, 192, 195, 196], "i_lat": [183, 184, 186, 192, 195, 196], "i_lon": [183, 184, 186, 192, 195, 196], "i_n": [183, 184, 186, 192, 195, 196], "i_scan": 468, "iact": [78, 79, 81, 89, 163, 166, 170, 367, 370, 371, 372, 373, 375, 377, 381, 398, 403, 417, 419, 421, 432, 438, 440, 462, 463, 465, 470, 471, 473, 492, 497, 498, 499, 501, 552, 554], "iactbasicimageestim": [367, 420], "iau": [52, 400, 404], "iau2015": 52, "ic": 531, "icon": 553, "icr": [79, 81, 84, 86, 89, 90, 91, 97, 100, 104, 105, 132, 153, 163, 166, 182, 183, 184, 186, 189, 191, 194, 195, 196, 207, 208, 212, 220, 223, 237, 245, 246, 288, 289, 324, 361, 362, 385, 405, 434, 435, 436, 437, 438, 440, 443, 444, 446, 447, 450, 452, 453, 454, 455, 458, 459, 461, 462, 463, 464, 466, 467, 470, 471, 472, 473, 479, 480, 492, 495, 499, 504, 508, 512, 513, 514, 516, 517, 518], "icrc": 416, "id": [65, 76, 78, 79, 83, 84, 86, 87, 107, 374, 377, 397, 435, 437, 446, 448, 450, 455, 458, 466, 470, 471, 472, 473, 479, 492], "id_obs_vela": 455, "idea": [366, 369, 376, 380, 381, 382, 435, 461, 467, 471, 479], "ideal": [363, 364, 371, 375, 376, 385, 389, 390, 432, 471], "idempot": [16, 80, 99, 118], "ident": [336, 364, 376, 423, 434, 436], "identif": [65, 367, 458], "identifi": [65, 84, 98, 103, 182, 248, 361, 371, 372, 374, 377, 386, 387, 391, 407, 438, 446, 451, 458, 459, 466, 470, 472, 494], "identified_object": 458, "idx": [79, 83, 86, 87, 95, 181, 182, 183, 184, 185, 186, 187, 188, 191, 192, 193, 194, 195, 196, 233, 437, 446, 454, 458, 460, 463, 507], "idx1": 460, "idx2": 460, "idx_glob": 182, "idx_loc": 182, "ie": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 387, 465, 466, 491, 554], "iem": [465, 471], "iem_minus_iem": 463, "iem_plus_iem": 463, "iem_times_two": 463, "ignacio": 422, "ignasi": 416, "ignor": [11, 16, 80, 83, 86, 99, 118, 147, 157, 186, 201, 203, 219, 290, 302, 362, 414, 448, 454, 455, 459, 464, 479, 495, 555], "ii": [199, 418], "ij": [199, 462], "ilist": 182, "illustr": [104, 105, 362, 371, 373, 374, 375, 377, 380, 436, 438, 443, 448, 459, 462, 463, 465, 466, 471, 485, 491, 504, 505, 512, 513, 521, 553], "illustrate_colormap": 380, "iloc": [83, 86], "im": [350, 460], "imag": [97, 100, 104, 105, 112, 122, 123, 132, 142, 143, 144, 150, 152, 153, 154, 156, 158, 168, 181, 182, 183, 184, 186, 191, 192, 194, 195, 196, 260, 282, 285, 326, 347, 349, 350, 351, 352, 356, 361, 369, 370, 372, 377, 378, 381, 382, 391, 393, 398, 400, 401, 402, 405, 406, 407, 413, 417, 418, 419, 420, 421, 429, 439, 440, 442, 448, 449, 462, 464, 466, 470, 480, 481, 491, 492, 493, 500, 503, 504, 505, 506, 507, 508, 552, 553, 554, 560], "image_analysi": [381, 401], "image_err": 123, "image_fitting_with_sherpa": [381, 422], "image_pip": 420, "image_profil": 419, "imagehdu": [183, 184, 195, 196], "imagenorm": [351, 352], "imageprofil": 123, "images_t": 444, "imagin": 555, "img": [349, 463], "iminuit": [200, 360, 378, 387, 412, 414, 421, 425, 426, 430, 431, 434, 435, 436, 437, 438, 439, 440, 442, 443, 444, 445, 446, 447, 448, 452, 453, 454, 455, 457, 458, 459, 460, 462, 463, 464, 465, 466, 468, 470, 471, 472, 473, 479, 480, 481, 552], "immut": 211, "impact": [368, 374, 378, 472], "imperfect": 462, "implement": [19, 20, 97, 100, 104, 105, 134, 201, 205, 208, 209, 212, 213, 215, 216, 217, 218, 220, 221, 222, 223, 224, 225, 226, 227, 228, 230, 237, 238, 239, 240, 241, 244, 245, 246, 247, 249, 252, 253, 254, 259, 260, 273, 279, 361, 366, 367, 369, 370, 373, 374, 375, 376, 377, 378, 379, 382, 383, 384, 385, 386, 388, 402, 403, 404, 405, 406, 407, 408, 409, 412, 413, 414, 419, 420, 422, 423, 426, 427, 431, 439, 451, 453, 457, 458, 462, 463, 464, 483, 491, 493, 495, 500, 501, 502, 540, 552, 553, 554, 555, 556, 559], "implent": 361, "impli": [224, 361, 380, 491, 554], "implic": 383, "implicit": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 500], "implicitli": 462, "import": [19, 20, 26, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 64, 65, 78, 79, 80, 81, 82, 83, 84, 85, 86, 89, 91, 96, 97, 99, 100, 104, 105, 106, 109, 110, 111, 112, 116, 118, 119, 121, 123, 125, 127, 132, 133, 135, 136, 138, 140, 142, 143, 144, 145, 151, 153, 163, 166, 182, 183, 184, 186, 189, 192, 194, 195, 196, 202, 204, 205, 206, 209, 213, 215, 216, 217, 221, 225, 227, 228, 230, 231, 234, 236, 238, 239, 240, 244, 249, 251, 252, 253, 254, 257, 261, 264, 270, 273, 279, 280, 288, 289, 310, 320, 329, 340, 341, 346, 349, 351, 352, 354, 356, 362, 364, 366, 367, 368, 370, 371, 372, 373, 374, 375, 376, 377, 380, 382, 383, 384, 385, 386, 387, 388, 389, 390, 396, 397, 408, 418, 420, 425, 427, 430, 431, 432, 434, 435, 436, 437, 438, 439, 440, 442, 443, 444, 445, 446, 447, 448, 451, 452, 453, 454, 455, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 470, 471, 472, 473, 477, 479, 480, 481, 484, 485, 487, 488, 489, 491, 492, 493, 495, 497, 498, 499, 501, 502, 504, 505, 506, 507, 508, 511, 512, 513, 514, 515, 516, 517, 518, 519, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 542, 543, 544, 545, 546, 547, 548, 549, 550, 553, 555, 556, 557, 559], "importantli": [385, 421, 431, 555], "importerror": [83, 86], "impos": [425, 430, 504], "improv": [103, 270, 363, 365, 366, 367, 369, 370, 371, 375, 376, 377, 378, 379, 380, 381, 386, 391, 392, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 412, 413, 415, 416, 417, 418, 419, 420, 421, 422, 424, 463, 470, 495, 505, 512], "imshow": [97, 100, 151, 184, 196, 349, 355, 419, 463, 481], "in2p3": [387, 470], "in_memori": [84, 495], "in_memory_gener": 87, "in_safe_data_rang": [97, 100, 104, 105], "inaccur": 361, "incex": [16, 80, 99, 118], "incid": [367, 554], "includ": [16, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 45, 78, 79, 80, 83, 84, 86, 99, 118, 124, 151, 157, 159, 160, 166, 167, 171, 181, 182, 191, 194, 234, 298, 360, 361, 367, 369, 372, 373, 374, 375, 377, 378, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 393, 402, 404, 409, 420, 425, 426, 427, 430, 443, 445, 446, 448, 454, 457, 458, 460, 462, 464, 465, 466, 470, 472, 483, 485, 491, 493, 494, 505, 507, 552, 556, 559], "include_irf": [79, 84, 492], "include_ssc": 234, "inclus": [79, 191, 375], "incompat": [361, 386, 414], "incomplet": [361, 391, 401, 402, 403, 404, 405, 406, 407, 408, 409, 412, 414, 415, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427], "inconsist": [409, 415, 425, 426], "inconveni": [380, 421], "incorpor": [377, 381, 389, 554], "incorrect": [79, 361, 388, 396, 405, 423, 424, 462, 468], "incorrectli": [423, 464], "increas": [132, 158, 188, 193, 212, 220, 223, 361, 370, 388, 453, 462, 491, 512], "increment": [19, 20, 26, 112, 205, 206, 209, 213, 215, 216, 217, 221, 227, 228, 230, 234, 236, 238, 239, 240, 244, 249, 251, 252, 253, 254, 257, 261, 375, 463, 507], "ind": [182, 194, 211, 233], "inde": [446, 513], "indefinit": 368, "indent": [16, 80, 99, 118], "independ": [65, 120, 124, 134, 287, 301, 361, 367, 371, 372, 373, 374, 375, 376, 379, 382, 383, 384, 385, 387, 393, 402, 412, 430, 435, 452, 458, 463, 464, 465, 466, 472, 479, 480, 490, 495, 500, 554, 558], "index": [19, 20, 26, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 51, 52, 53, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 83, 85, 86, 87, 95, 96, 97, 100, 104, 105, 116, 117, 119, 120, 121, 125, 126, 127, 131, 140, 141, 142, 148, 151, 153, 156, 176, 181, 182, 183, 184, 185, 186, 187, 188, 189, 191, 192, 193, 194, 195, 196, 200, 202, 204, 205, 206, 209, 211, 213, 215, 216, 217, 221, 227, 228, 230, 231, 233, 234, 236, 238, 239, 240, 244, 249, 251, 252, 253, 254, 257, 261, 264, 273, 298, 312, 317, 364, 367, 370, 371, 372, 373, 376, 377, 384, 385, 386, 390, 393, 403, 417, 419, 420, 426, 427, 431, 432, 434, 435, 437, 438, 439, 442, 444, 445, 446, 447, 448, 450, 452, 453, 454, 455, 458, 459, 460, 461, 465, 466, 470, 471, 472, 473, 479, 480, 481, 493, 506, 507, 508, 511, 512, 513, 514, 516, 517, 518, 519, 521, 523, 525, 526, 527, 532, 533, 534, 542, 543, 544, 545, 546, 547, 548, 549, 550], "index1": [205, 249, 522, 536], "index2": [205, 249, 522, 536], "index_1": [252, 253, 254, 537, 538, 539], "index_2": [252, 253, 254, 537, 538, 539], "index_arrai": [83, 86], "index_column": [83, 86], "index_data": 187, "index_error": [19, 20, 26, 205, 206, 209, 213, 215, 216, 217, 221, 227, 228, 230, 234, 236, 238, 239, 240, 244, 249, 251, 252, 253, 254, 257, 261], "index_mod": [83, 86], "index_scan": 468, "indexerror": [87, 95, 233], "indic": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 83, 86, 95, 181, 182, 183, 184, 185, 186, 187, 188, 191, 192, 193, 194, 195, 196, 361, 423, 437, 447, 451, 462, 463, 467, 468, 472, 473, 495, 507, 508, 554], "indico": 370, "indirect": [457, 483], "individu": [83, 86, 103, 114, 122, 357, 367, 373, 374, 376, 381, 384, 385, 389, 431, 434, 437, 445, 448, 453, 458, 459, 460, 462, 465, 466, 481, 491, 495, 500, 554], "indiviud": 383, "indxschm": [183, 184, 195, 196], "ineffici": [83, 86, 364], "ineqcon": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40], "inequ": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40], "inertia": [51, 54], "inf": [65, 223, 389, 468], "infer": [117, 119, 181, 182, 183, 184, 186, 194, 195, 196, 213, 362, 479, 507], "inferno": 463, "infil": 361, "infin": 468, "influenc": 468, "info": [16, 65, 69, 70, 71, 72, 73, 74, 75, 76, 78, 81, 82, 83, 84, 86, 89, 95, 96, 97, 98, 99, 100, 102, 103, 104, 105, 144, 150, 152, 154, 272, 274, 298, 362, 376, 377, 381, 390, 396, 406, 407, 409, 416, 417, 420, 435, 439, 440, 442, 446, 453, 457, 458, 459, 463, 471, 472, 473, 475, 477, 479, 555], "info_dict": [97, 100, 104, 105, 272, 274, 354, 409, 427, 459], "info_t": [95, 431, 434, 435, 437, 442, 454, 459, 465, 495], "infodict": 354, "inform": [11, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 56, 65, 67, 69, 70, 71, 72, 73, 74, 75, 76, 80, 81, 84, 86, 89, 94, 95, 96, 97, 99, 100, 104, 105, 117, 118, 119, 140, 144, 150, 152, 154, 155, 158, 163, 164, 170, 189, 200, 205, 206, 207, 208, 209, 210, 212, 213, 215, 217, 218, 220, 221, 222, 223, 224, 225, 226, 228, 234, 235, 236, 237, 238, 240, 241, 245, 246, 247, 249, 252, 253, 254, 256, 257, 260, 261, 275, 281, 298, 314, 343, 344, 361, 365, 366, 371, 373, 374, 375, 376, 377, 384, 385, 388, 389, 391, 396, 397, 398, 406, 408, 409, 412, 414, 420, 426, 427, 432, 435, 436, 443, 446, 447, 450, 451, 459, 460, 462, 463, 466, 470, 471, 472, 473, 479, 480, 481, 490, 491, 492, 493, 495, 508, 554, 555, 558], "infrar": 213, "infrastructur": [391, 412, 423, 426], "ingredi": [385, 457], "inherit": [83, 86, 273, 361, 371, 373, 376, 385, 388, 389, 407, 412, 419, 459, 461, 506, 507], "init": [19, 20, 26, 83, 86, 116, 121, 127, 160, 205, 206, 207, 208, 209, 210, 212, 213, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 230, 232, 234, 237, 238, 239, 240, 241, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 256, 257, 258, 259, 260, 261, 262, 302, 314, 373, 409, 424, 426, 427, 448, 458, 459, 481], "initi": [15, 16, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 42, 53, 63, 80, 83, 86, 99, 117, 118, 119, 127, 184, 187, 188, 211, 233, 235, 236, 290, 366, 371, 372, 373, 377, 414, 430, 437, 440, 442, 443, 445, 446, 447, 450, 455, 458, 459, 463, 466, 479, 480, 481, 490, 492, 540, 554], "initialis": [33, 42, 45, 46, 47, 97, 98, 100, 103, 104, 105, 142, 153, 156, 183, 184, 186, 192, 195, 196, 210, 218, 222, 224, 225, 226, 241, 247, 259, 262, 273, 312, 314, 317, 318, 319, 320, 361, 383, 468], "inject": [437, 450], "inlin": [366, 430, 431, 432, 434, 435, 436, 437, 438, 439, 440, 442, 448, 450, 452, 453, 454, 455, 457, 458, 459, 460, 463, 464, 465, 466, 470, 471, 473, 479, 480, 481], "inner": [44, 52, 53, 121, 158, 168, 246, 440, 481, 518], "inner_height": [504, 508], "inner_width": [504, 508], "input": [16, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 41, 80, 82, 83, 86, 97, 99, 100, 103, 112, 114, 116, 117, 118, 119, 120, 123, 124, 127, 128, 129, 130, 131, 133, 136, 141, 142, 144, 151, 152, 153, 154, 155, 156, 158, 160, 164, 166, 168, 182, 183, 184, 186, 188, 189, 190, 191, 192, 193, 194, 195, 196, 202, 204, 211, 225, 233, 259, 260, 261, 273, 290, 301, 311, 314, 331, 333, 354, 356, 367, 369, 371, 372, 373, 374, 375, 376, 377, 382, 397, 407, 412, 415, 422, 426, 437, 446, 447, 455, 463, 468, 493, 507, 508, 556], "input_map": [106, 110], "input_shap": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40], "input_unit": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40], "input_units_allow_dimensionless": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40], "input_units_equival": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40], "input_units_strict": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40], "inputs_map": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40], "ins": 426, "insensit": 190, "insert": [83, 86, 87, 95, 233, 387, 407, 558], "insert_row": [83, 86], "inset": 413, "insid": [50, 79, 97, 104, 109, 111, 140, 166, 182, 183, 184, 186, 191, 194, 195, 196, 211, 233, 248, 350, 354, 361, 362, 375, 377, 385, 412, 430, 434, 437, 439, 442, 444, 450, 454, 459, 462, 464, 465, 466, 470, 472, 492, 502, 504, 505, 508], "inside_geom": 464, "insight": 396, "inspect": [373, 377, 397, 434, 436, 442, 446, 447, 460, 463, 465, 470, 471], "inspir": [361, 385], "instal": [83, 86, 360, 361, 364, 368, 369, 370, 378, 390, 391, 392, 395, 397, 398, 401, 402, 412, 416, 419, 420, 421, 430, 431, 434, 435, 436, 437, 438, 439, 440, 442, 443, 444, 445, 446, 447, 448, 452, 453, 454, 455, 457, 458, 459, 460, 462, 463, 464, 465, 466, 468, 470, 471, 472, 473, 475, 479, 480, 481, 495, 555], "instanc": [16, 19, 20, 26, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 50, 80, 81, 82, 83, 84, 86, 87, 99, 114, 118, 119, 120, 122, 124, 125, 155, 157, 165, 181, 182, 183, 184, 185, 186, 187, 188, 191, 192, 193, 194, 195, 196, 205, 206, 207, 208, 209, 210, 212, 213, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 230, 231, 232, 234, 237, 238, 239, 240, 241, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 256, 257, 258, 259, 260, 261, 262, 270, 308, 314, 348, 350, 351, 352, 355, 357, 361, 367, 372, 373, 376, 377, 383, 385, 388, 412, 432, 434, 437, 448, 458, 460, 462, 464, 465, 466, 481, 485, 495, 507, 508, 531], "instanti": [15, 19, 20, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 183, 184, 186, 188, 195, 196, 372, 377, 431, 435, 458, 459, 463, 466, 468, 479], "instead": [16, 19, 20, 26, 80, 81, 83, 86, 97, 99, 100, 104, 105, 108, 118, 170, 205, 206, 207, 208, 209, 210, 211, 212, 213, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 230, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 256, 257, 258, 259, 260, 261, 262, 361, 362, 364, 366, 368, 369, 371, 372, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 389, 390, 392, 393, 395, 402, 405, 408, 409, 422, 426, 436, 442, 446, 450, 452, 454, 455, 458, 459, 461, 462, 463, 466, 468, 492, 499, 500, 507, 508, 555], "instruct": [361, 370, 378, 390, 392, 393, 401, 412, 416, 420, 446, 470], "instrument": [6, 79, 90, 103, 143, 147, 148, 219, 361, 371, 372, 373, 374, 376, 381, 385, 393, 397, 406, 409, 421, 422, 423, 429, 431, 432, 434, 435, 438, 442, 449, 455, 459, 460, 461, 462, 465, 466, 467, 468, 470, 471, 473, 475, 479, 480, 491, 492, 493, 497, 499, 501, 552, 553, 554], "int": [16, 17, 18, 19, 20, 21, 22, 24, 25, 26, 27, 33, 34, 38, 42, 45, 46, 47, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 67, 78, 79, 80, 81, 83, 84, 86, 88, 89, 97, 98, 99, 100, 103, 104, 105, 107, 112, 114, 118, 119, 120, 121, 124, 125, 127, 132, 133, 137, 138, 139, 140, 141, 142, 143, 144, 145, 147, 148, 150, 151, 152, 153, 154, 155, 156, 159, 160, 163, 166, 170, 171, 176, 181, 182, 183, 184, 185, 186, 187, 188, 191, 192, 193, 194, 195, 196, 200, 201, 202, 204, 205, 206, 208, 209, 210, 212, 213, 215, 216, 217, 218, 220, 221, 222, 223, 224, 225, 226, 227, 228, 230, 234, 235, 236, 237, 238, 239, 240, 241, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 256, 257, 259, 260, 261, 262, 266, 268, 270, 272, 273, 274, 278, 279, 280, 286, 290, 301, 302, 308, 312, 314, 317, 318, 319, 320, 322, 323, 348, 354, 361, 375, 419, 440, 460, 485], "int_": [17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 205, 206, 209, 213, 215, 216, 217, 227, 228, 230, 234, 236, 238, 239, 240, 244, 249, 251, 252, 253, 254, 257, 261, 500, 512], "int_flux": 457, "integ": [67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 83, 86, 87, 88, 95, 97, 100, 104, 105, 117, 119, 120, 121, 124, 127, 132, 133, 141, 142, 148, 153, 156, 159, 181, 182, 183, 184, 186, 187, 188, 191, 192, 194, 195, 196, 202, 204, 211, 233, 290, 308, 314, 361, 367, 375, 440, 507], "integr": [6, 17, 18, 19, 20, 21, 22, 24, 25, 26, 27, 31, 32, 37, 51, 97, 100, 104, 105, 117, 119, 122, 124, 131, 137, 138, 139, 140, 143, 144, 145, 147, 150, 152, 154, 155, 158, 183, 184, 186, 188, 192, 195, 196, 197, 198, 205, 206, 208, 209, 210, 211, 212, 213, 215, 216, 217, 218, 220, 221, 222, 223, 224, 225, 226, 227, 228, 230, 233, 234, 235, 236, 237, 238, 239, 240, 241, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 256, 257, 259, 260, 261, 262, 263, 264, 266, 301, 360, 368, 370, 372, 374, 375, 376, 378, 379, 381, 385, 387, 400, 402, 403, 407, 408, 412, 417, 418, 419, 420, 421, 422, 423, 426, 434, 436, 437, 439, 454, 457, 458, 459, 463, 464, 466, 481, 483, 491, 493, 499, 514, 534], "integral_error": [19, 20, 26, 205, 206, 209, 213, 215, 216, 217, 221, 227, 228, 230, 234, 236, 238, 239, 240, 244, 249, 251, 252, 253, 254, 257, 261, 379, 409], "integral_flux_imag": 413, "integrate_geom": [207, 208, 212, 220, 223, 235, 237, 245, 246, 248, 250, 256, 260, 412, 425, 427], "integrate_log_log": [137, 138, 139, 140, 143, 144, 145, 147, 150, 152, 154, 155], "integrate_spectrum": [19, 20, 26, 205, 206, 209, 213, 215, 216, 217, 227, 228, 230, 234, 236, 238, 239, 240, 244, 249, 251, 252, 253, 254, 257, 261, 403, 409], "integrate_spectrum_separ": [17, 18, 21, 22, 24, 25, 27], "intend": [83, 86, 290, 371, 389, 461], "intens": [183, 184, 186, 192, 195, 196, 200, 224, 371, 463, 491], "intent": 366, "interact": [19, 20, 83, 86, 153, 156, 183, 184, 186, 192, 195, 196, 201, 205, 208, 209, 212, 213, 215, 216, 217, 218, 220, 221, 222, 223, 224, 225, 226, 227, 228, 230, 237, 238, 239, 240, 241, 244, 245, 246, 247, 249, 252, 253, 254, 259, 260, 360, 361, 362, 370, 371, 372, 373, 377, 381, 384, 397, 406, 442, 450, 460, 463, 465, 466, 475, 479, 480, 504, 507, 531, 555], "interchang": 507, "interest": [109, 111, 120, 124, 200, 270, 366, 374, 375, 379, 381, 391, 432, 442, 446, 448, 458, 459, 460, 462, 464, 467, 470, 471, 481, 492, 493, 531, 554, 557, 558], "interfac": [6, 11, 15, 19, 20, 83, 86, 199, 200, 201, 202, 203, 204, 205, 208, 209, 212, 213, 215, 216, 217, 218, 220, 221, 222, 223, 224, 225, 226, 227, 228, 230, 237, 238, 239, 240, 241, 244, 245, 246, 247, 249, 252, 253, 254, 259, 260, 365, 366, 367, 371, 373, 374, 376, 378, 379, 380, 381, 402, 405, 407, 408, 409, 412, 416, 419, 420, 426, 429, 435, 438, 439, 442, 450, 452, 460, 466, 470, 475, 480, 481, 482, 495, 506, 531, 552, 553, 554, 555], "intermedi": [194, 370, 377, 387, 397, 431, 453], "intern": [15, 19, 20, 26, 83, 86, 117, 119, 128, 129, 130, 160, 166, 191, 205, 206, 209, 213, 215, 216, 217, 221, 227, 228, 230, 234, 236, 238, 239, 240, 244, 249, 251, 252, 253, 254, 257, 261, 266, 290, 302, 361, 373, 375, 377, 380, 385, 412, 414, 423, 426, 430, 435, 442, 451, 452, 459, 461, 463, 470, 473, 479, 491, 495, 550], "interp": [19, 20, 145, 183, 184, 186, 188, 192, 193, 195, 196, 201, 205, 208, 209, 212, 213, 215, 216, 217, 218, 220, 221, 222, 223, 224, 225, 226, 227, 228, 230, 235, 236, 237, 238, 239, 240, 241, 244, 245, 246, 247, 249, 252, 253, 254, 259, 260, 303, 356, 384, 389, 425, 427, 437, 443, 447, 450, 454, 461, 462, 463, 466, 471, 472, 473, 507, 508, 531, 532], "interp1": 463, "interp1d": 303, "interp2": 463, "interp_by_coord": [183, 184, 186, 192, 195, 196, 260, 423, 463], "interp_by_pix": [183, 184, 186, 192, 195, 196, 256, 257, 463], "interp_kwarg": [66, 137, 138, 139, 140, 143, 144, 145, 147, 150, 152, 154, 155, 213, 256, 257, 260, 261, 361, 461, 471], "interp_map": [183, 184, 186, 192, 195, 196], "interp_missing_data": [137, 138, 139, 140, 143, 144, 145, 147, 150, 152, 154, 155], "interp_param": 361, "interp_scal": [271, 303], "interp_to_geom": [183, 184, 186, 192, 195, 196, 409, 425, 463, 471, 495], "interp_weight": 182, "interpol": [6, 26, 89, 137, 138, 139, 140, 141, 142, 143, 144, 145, 147, 148, 150, 152, 153, 154, 155, 156, 163, 182, 183, 184, 186, 188, 192, 193, 195, 196, 213, 225, 235, 236, 256, 257, 259, 260, 261, 271, 302, 303, 304, 360, 372, 373, 374, 402, 407, 412, 414, 417, 420, 422, 423, 424, 425, 426, 427, 447, 461, 462, 466, 471, 472, 495, 503, 507, 540], "interpolatedunivariatesplin": 259, "interpret": [86, 97, 100, 122, 132, 133, 184, 188, 194, 195, 196, 308, 379, 389, 463, 493, 508], "intersect": [85, 166, 167, 171, 191, 375, 453], "interspers": 366, "interstellar": [45, 446], "interv": [52, 53, 74, 78, 79, 82, 84, 85, 86, 87, 95, 96, 98, 103, 119, 124, 164, 188, 193, 200, 210, 218, 222, 224, 225, 226, 241, 247, 259, 262, 370, 371, 375, 376, 379, 385, 393, 406, 408, 409, 412, 421, 422, 427, 452, 454, 460, 463, 472, 480, 492, 507, 554, 557], "interval_edg": 193, "intrins": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 234, 280, 372, 376], "intro_map": 421, "introduc": [19, 20, 183, 184, 186, 188, 192, 195, 196, 201, 205, 208, 209, 212, 213, 215, 216, 217, 218, 220, 221, 222, 223, 224, 225, 226, 227, 228, 230, 237, 238, 239, 240, 241, 244, 245, 246, 247, 249, 252, 253, 254, 259, 260, 361, 368, 369, 371, 373, 374, 375, 376, 378, 381, 383, 386, 389, 403, 405, 406, 408, 409, 412, 414, 415, 419, 420, 421, 423, 426, 427, 445, 451, 462, 466, 508, 513, 555, 558], "introduct": [364, 382, 383, 384, 402, 406, 407, 408, 409, 432, 435, 466, 472, 473, 479, 480, 484], "introductori": 451, "introspect": 290, "intuit": [382, 558], "invalid": [347, 361, 375, 388, 389, 412, 446, 473], "invalid_pixel": 464, "invers": [19, 20, 26, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 194, 205, 206, 209, 213, 215, 216, 217, 221, 224, 227, 228, 230, 234, 236, 238, 239, 240, 244, 249, 251, 252, 253, 254, 257, 261, 272, 273, 274, 312, 319, 374, 446, 464, 466, 468, 531], "inverse_al": [19, 20, 26, 205, 206, 209, 213, 215, 216, 217, 221, 227, 228, 230, 234, 236, 238, 239, 240, 244, 249, 251, 252, 253, 254, 257, 261], "inverse_cdf": 446, "inversecdf": 374, "inversecdfsampl": [374, 404], "inversecompton": [234, 531], "invert": [86, 182, 194, 481], "invest": 364, "investig": 445, "involv": [83, 86, 97, 100, 104, 105, 361, 366, 375, 377, 379, 383, 438, 555], "io": [13, 79, 82, 83, 86, 120, 176, 186, 191, 200, 261, 364, 370, 381, 391, 403, 406, 418, 422, 426, 446, 460, 461, 463, 470, 492, 495, 506, 508], "iop": 279, "iopscienc": 279, "ipix": 182, "ipynb": [369, 381, 403, 406, 430, 431, 432, 434, 435, 436, 437, 438, 439, 440, 442, 443, 444, 445, 446, 447, 448, 450, 451, 452, 453, 454, 455, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 470, 471, 472, 473, 477, 479, 480, 481, 511, 512, 513, 514, 515, 516, 517, 518, 519, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 542, 543, 544, 545, 546, 547, 548, 549, 550], "ipynb_to_galleri": 361, "ipython": [83, 86, 360, 361, 377, 378, 392, 396, 404, 430, 431, 432, 434, 435, 436, 437, 438, 439, 440, 442, 443, 444, 445, 446, 447, 448, 450, 452, 453, 454, 455, 457, 458, 459, 460, 462, 463, 464, 465, 466, 468, 470, 471, 472, 473, 475, 479, 480, 481, 494, 555], "ipython3": 394, "ipywidget": 463, "irap": 381, "irf": [6, 78, 84, 91, 97, 98, 100, 103, 104, 105, 106, 107, 108, 110, 127, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 163, 169, 170, 172, 173, 174, 176, 178, 179, 182, 191, 194, 248, 289, 361, 362, 367, 371, 372, 373, 374, 377, 380, 381, 382, 383, 389, 393, 401, 403, 406, 408, 409, 412, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 425, 426, 427, 429, 431, 432, 434, 435, 436, 437, 438, 439, 442, 446, 447, 450, 452, 454, 462, 464, 467, 468, 469, 471, 472, 473, 475, 479, 480, 491, 492, 495, 497, 498, 499, 501, 502, 507, 552, 553, 554], "irf_dict": 157, "irf_dl3_hdu_specif": 461, "irf_fil": [84, 138, 142, 143, 144, 153, 430, 437, 450, 454, 461, 470], "irf_filenam": [446, 447, 461, 470], "irf_map": [141, 142, 148, 153, 156], "irf_path": 446, "irfmap": [141, 142, 153, 156, 393, 409, 495], "irfmetadata": 388, "irfmodel": 372, "irfs1": 470, "irfs2": 470, "irfs_path": 78, "irfstack": [409, 418], "irregular": [182, 194, 507], "irrespect": [374, 442, 463, 507], "is_align": [182, 188, 193, 194], "is_all_point_sky_region": 191, "is_all_same_energy_shap": 95, "is_all_same_shap": 95, "is_all_same_typ": 95, "is_allclos": [137, 138, 139, 140, 143, 144, 145, 147, 150, 152, 154, 155, 182, 183, 184, 185, 186, 187, 188, 191, 192, 193, 194, 195, 196], "is_allski": [181, 182, 191, 194], "is_bkg": 102, "is_contigu": [193, 463], "is_convertible_to_flux_sed_typ": [117, 119], "is_energy_axi": 188, "is_energy_depend": [207, 208, 210, 212, 218, 220, 222, 223, 224, 225, 226, 235, 237, 241, 245, 246, 247, 250, 256, 259, 260, 262, 425, 466], "is_fixed_rad_max": 155, "is_flat": [181, 182, 187, 191, 194], "is_hpx": [182, 191, 194], "is_imag": [181, 182, 191, 194], "is_mask": [183, 184, 186, 192, 195, 196], "is_norm": [19, 20, 96, 201, 203, 205, 208, 209, 212, 213, 215, 216, 217, 218, 220, 221, 222, 223, 224, 225, 226, 227, 228, 230, 237, 238, 239, 240, 241, 244, 245, 246, 247, 249, 252, 253, 254, 259, 260, 389, 414, 427, 431, 434, 435, 436, 437, 439, 442, 443, 450, 454, 458, 460, 466, 480, 481, 531, 540], "is_norm_spectral_model": [19, 20, 26, 205, 206, 209, 213, 215, 216, 217, 221, 227, 228, 230, 234, 236, 238, 239, 240, 244, 249, 251, 252, 253, 254, 257, 261, 412, 466], "is_nul": 463, "is_pointed_observ": 79, "is_pointlik": [69, 71, 72, 73, 74, 137, 138, 139, 140, 143, 144, 145, 147, 150, 152, 154, 155, 412], "is_region": [182, 191, 194], "is_regular": [182, 191, 194], "is_ul": [65, 117, 119, 412, 427, 458, 481], "is_unidimension": 187, "isf": [460, 557], "isinst": [361, 372, 375, 384, 388, 389], "ism": [52, 53, 531], "isn": [364, 368, 375, 377, 380, 391, 444, 555], "isnan": [463, 464], "iso": [84, 119, 193, 198, 426, 454, 465, 471, 507, 549], "iso_p8r2_source_v6_v06": [465, 471], "isol": [375, 392, 464], "isot": [342, 559], "isotherm": [22, 483], "isotrop": [47, 208, 265, 465], "issu": [19, 20, 26, 83, 86, 205, 206, 209, 213, 215, 216, 217, 221, 227, 228, 230, 234, 236, 238, 239, 240, 244, 249, 251, 252, 253, 254, 257, 261, 361, 362, 364, 369, 370, 372, 373, 375, 378, 381, 386, 387, 388, 389, 390, 393, 394, 395, 402, 414, 415, 417, 418, 419, 420, 421, 423, 424, 425, 426, 427, 444, 464, 470, 491, 495, 555, 556], "item": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 83, 86, 87, 95, 190, 233, 381, 388], "iter": [83, 86, 87, 95, 117, 119, 183, 184, 186, 187, 188, 190, 192, 193, 195, 196, 233, 364, 367, 369, 377, 413, 438, 454], "iter_by_axi": [117, 119, 183, 184, 186, 192, 195, 196], "iter_by_axis_data": 192, "iter_by_coord": 404, "iter_by_edg": [188, 193], "iter_by_imag": [183, 184, 186, 192, 195, 196, 421], "iter_by_image_data": [183, 184, 186, 192, 195, 196, 463], "iter_by_image_index": [183, 184, 186, 192, 195, 196], "iter_by_pix": 404, "iter_with_reshap": 187, "itercol": [83, 86], "iterrow": [83, 86], "itertool": 460, "its": [19, 20, 26, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 97, 100, 104, 105, 117, 119, 159, 160, 169, 182, 188, 190, 205, 206, 209, 212, 213, 215, 216, 217, 221, 227, 228, 230, 234, 236, 238, 239, 240, 244, 249, 251, 252, 253, 254, 257, 261, 270, 361, 364, 367, 370, 371, 373, 376, 377, 378, 380, 385, 387, 388, 391, 394, 412, 426, 427, 431, 435, 436, 439, 446, 447, 451, 452, 453, 458, 460, 462, 463, 464, 465, 466, 468, 479, 481, 484, 500, 502, 504, 506, 507, 508, 554, 557], "itself": [83, 86, 360, 361, 376, 387, 431, 452, 453, 455, 468, 555], "ivoa": 427, "j": [19, 20, 23, 97, 104, 122, 134, 273, 362, 364, 491], "j0001": [458, 481], "j0002": [458, 481], "j0003": [458, 481], "j0006": 458, "j0007": 481, "j0008": [458, 481], "j0009": 481, "j0010": 458, "j0013": 458, "j0021": 458, "j0022": 458, "j0025": 458, "j0031": 458, "j0349": 458, "j0521": 434, "j0534": [458, 481], "j0633": 481, "j0835": [432, 481], "j0851": 458, "j1036": 458, "j1104": [458, 481], "j1506": 432, "j1507": 432, "j1513": 458, "j1514": 458, "j1555": 481, "j1653": 458, "j1713": 431, "j1731": 465, "j1732": 465, "j1741": 465, "j1744": 465, "j1745": 465, "j1746": 465, "j1747": 465, "j1748": 465, "j1753": 465, "j1800": 465, "j1801": 465, "j1802": 465, "j1809": 465, "j1811": 465, "j1824": 458, "j1825": 445, "j1843": 65, "j1844": 65, "j2028": 458, "j2158": 458, "j2347": 481, "j2350": 481, "j2351": 481, "j2352": 481, "j2356": 481, "j2357": [458, 481], "j2358": [458, 481], "j2359": [458, 481], "j_": 23, "jackson": [83, 86], "jacob": [402, 421], "jacobian": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 408], "jalel": [409, 412], "jan": [366, 367, 370, 373, 378, 382, 399], "jana": 427, "januari": [368, 370, 386], "jargon": 393, "jason": 402, "javascript": [83, 86], "jax": 379, "jbernet": 427, "jean": [420, 421], "jeffrei": 468, "jeltema": 483, "jep": 366, "jet": 352, "jfact": 457, "jfact_decai": 457, "jfact_map": 457, "jfactor": [19, 20, 426], "jfactori": 457, "jj": 199, "jk": [97, 104, 491], "jkl": 491, "jl": 491, "jo": [83, 86], "job": [88, 120, 121, 124, 127, 159, 414], "johann": [405, 412, 416, 417, 418, 419, 420, 421], "john": [83, 86], "join": [363, 372, 373, 470], "joint": [95, 104, 105, 114, 125, 134, 136, 270, 369, 370, 373, 377, 381, 383, 393, 402, 403, 405, 406, 421, 422, 429, 431, 432, 434, 435, 436, 438, 445, 449, 454, 459, 460, 462, 466, 467, 468, 471, 475, 479, 493, 495, 552, 553, 554], "joint_fit": 455, "joint_result": 455, "jointli": [467, 472], "jonathan": [416, 417], "jose": [412, 414, 420], "joshi": 412, "jos\u00e9": [369, 377, 381, 401, 402, 403, 404, 405, 406, 407, 408, 409, 412, 420, 421, 422], "journal": 387, "jouvin": [402, 404, 405, 406, 409, 417, 418, 419, 420, 421], "jqueri": [83, 86], "jskwarg": [83, 86], "json": [16, 80, 99, 118, 390, 414, 416, 420], "json_data": [16, 80, 99, 118], "json_encod": 16, "json_schema": [16, 80, 99, 118], "jsonschema": [378, 405, 406], "jsviewer": [83, 86, 444], "juan": 427, "jul": [367, 376, 378, 380, 399], "juli": [367, 370, 375, 377, 378, 380, 384, 386, 388, 453], "julia": 427, "julian": 559, "julien": [418, 419, 420], "jun": [375, 377, 378, 383, 384], "june": [375, 379, 399], "junior": [64, 381], "jupyt": [360, 368, 377, 378, 381, 392, 393, 395, 396, 398, 403, 418, 419, 420, 422, 430, 431, 432, 434, 435, 436, 437, 438, 439, 440, 442, 443, 444, 445, 446, 447, 448, 450, 451, 452, 453, 454, 455, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 470, 471, 472, 473, 475, 477, 479, 480, 481, 509, 511, 512, 513, 514, 515, 516, 517, 518, 519, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 542, 543, 544, 545, 546, 547, 548, 549, 550, 555], "jupyterlab": [360, 378, 381, 397, 430, 431, 434, 435, 436, 437, 438, 439, 440, 442, 443, 444, 445, 446, 447, 448, 452, 453, 454, 455, 457, 458, 459, 460, 462, 463, 464, 465, 466, 468, 470, 471, 472, 473, 479, 480, 481], "jupytext": 381, "just": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 79, 82, 143, 336, 361, 362, 363, 364, 366, 369, 371, 375, 377, 378, 379, 381, 390, 391, 392, 394, 420, 422, 434, 435, 437, 442, 444, 446, 451, 452, 453, 455, 459, 463, 471, 472, 479, 481, 492, 508, 555], "juypter": 377, "jyear": [83, 86], "k": [19, 33, 52, 53, 97, 104, 190, 209, 259, 314, 432, 434, 436, 458, 460, 463, 465, 471, 491, 508, 512, 524, 531, 542], "kai": [420, 421], "kaori": 404, "kaspi": [31, 39, 45], "katrin": [389, 425, 426, 427], "kb": 369, "keep": [13, 83, 86, 95, 117, 151, 183, 184, 186, 192, 195, 196, 200, 361, 362, 364, 366, 367, 368, 369, 375, 378, 379, 380, 381, 384, 385, 410, 420, 439, 440, 445, 450, 460, 465, 471], "keep_byteord": [83, 86], "keep_column": [83, 86], "keep_mc_id": [98, 103], "keepdim": [151, 153, 156, 183, 184, 186, 192, 195, 196, 401, 406, 462], "kei": [16, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 67, 78, 80, 83, 85, 86, 97, 99, 100, 104, 105, 112, 118, 127, 134, 190, 200, 330, 347, 369, 371, 378, 383, 385, 388, 398, 421, 459, 466, 521], "kept": [85, 97, 100, 104, 105, 117, 119, 120, 124, 137, 138, 139, 140, 141, 142, 143, 144, 145, 147, 148, 150, 152, 153, 154, 155, 156, 181, 182, 183, 184, 186, 187, 191, 192, 194, 195, 196, 361, 367, 381, 385, 493], "kernel": [97, 100, 104, 105, 112, 116, 122, 123, 127, 140, 141, 142, 151, 153, 156, 158, 163, 168, 170, 173, 184, 194, 196, 367, 388, 407, 408, 413, 418, 422, 423, 438, 440, 455, 462, 463, 464, 471, 481, 491, 495, 499], "kernel_width": [127, 438, 444], "kernelbackgroundestim": 408, "kernelbackgroundmapestim": 382, "kev": [102, 127, 188, 438, 459, 508], "keyboard": 397, "keyerror": [86, 190, 385], "keyword": [16, 19, 20, 26, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 66, 78, 79, 80, 82, 83, 84, 86, 90, 96, 97, 99, 100, 104, 105, 118, 119, 121, 122, 135, 136, 137, 138, 139, 140, 143, 144, 145, 147, 150, 151, 152, 153, 154, 155, 156, 181, 182, 183, 184, 186, 187, 188, 190, 191, 192, 193, 194, 195, 196, 199, 200, 201, 205, 206, 207, 208, 209, 210, 211, 212, 213, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 230, 233, 234, 235, 236, 237, 238, 239, 240, 241, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 256, 257, 258, 259, 260, 261, 262, 265, 271, 273, 302, 310, 311, 330, 342, 344, 345, 348, 349, 350, 354, 355, 356, 357, 358, 388, 408, 412, 415, 423, 424, 436, 446, 447, 459, 463, 472, 493, 508, 519], "kg": 52, "khelifi": [404, 406, 409, 412, 415, 419, 420, 421, 423, 424], "kh\u00e9lifi": [387, 423, 425, 426, 427], "kind": [83, 86, 261, 336, 372, 373, 374, 379, 380, 384, 387, 421], "kinet": 44, "king": [152, 405, 416, 417, 418, 419, 420, 421, 461, 501], "kirsti": [425, 426, 427], "kl": 491, "klepser": 416, "km": [32, 37], "km2": 470, "km2a": [57, 68], "know": [362, 364, 366, 370, 375, 377, 378, 385, 391, 403, 420, 421, 422, 444, 447, 457, 461, 462, 463, 470, 472, 473, 555], "knowledg": [389, 397, 432, 437, 443, 445, 448, 450, 452, 460, 462, 463, 465, 468], "known": [272, 274, 290, 374, 434, 438, 440, 445, 452, 462, 463, 464, 481, 495, 505, 555, 556, 557], "koenig": 273, "konig": 273, "konrad": 427, "kornecki": 427, "kovalev": 451, "kpc": [17, 18, 21, 22, 24, 25, 27, 29, 33, 34, 38, 234, 290, 293, 457, 458, 489, 531], "kurt": 427, "kwarg": [19, 20, 26, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 53, 56, 58, 59, 60, 61, 62, 63, 64, 79, 82, 83, 84, 86, 96, 97, 100, 104, 105, 119, 120, 121, 122, 124, 135, 137, 138, 139, 140, 143, 144, 145, 147, 150, 151, 152, 153, 154, 155, 156, 165, 181, 182, 183, 184, 185, 186, 187, 188, 190, 191, 192, 193, 194, 195, 196, 199, 200, 205, 206, 207, 208, 209, 210, 211, 212, 213, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 256, 257, 258, 259, 260, 261, 262, 265, 271, 302, 313, 336, 348, 349, 350, 353, 355, 356, 357, 358, 361, 372, 388, 389, 425, 432, 446, 455, 462, 473, 543], "kwargs_ax": [354, 440, 442], "kwargs_background": [104, 105], "kwargs_colorbar": [137, 138, 140, 143, 144, 145, 150, 152, 154, 196, 349], "kwargs_count": [104, 105], "kwargs_excess": [104, 105], "kwargs_extens": [207, 208, 212, 220, 223, 235, 237, 245, 246, 250, 256, 260, 445], "kwargs_fit": [104, 105, 354], "kwargs_fp": 96, "kwargs_hist": [354, 440, 442], "kwargs_list": 190, "kwargs_model": 96, "kwargs_npred_sign": [104, 105], "kwargs_point": [191, 211, 233, 436], "kwargs_posit": [207, 208, 212, 220, 223, 235, 237, 245, 246, 250, 256, 260, 445], "kwargs_residu": [96, 104, 105], "kwargs_saf": [104, 105], "kwargs_spati": [97, 100, 104, 105, 442, 480], "kwargs_spectr": [97, 100, 104, 105, 442, 480], "kwargs_spectrum": [96, 104, 105], "l": [23, 26, 51, 54, 96, 97, 104, 105, 163, 358, 362, 375, 384, 387, 431, 434, 435, 436, 437, 438, 439, 440, 442, 444, 445, 450, 454, 455, 458, 459, 460, 462, 463, 464, 466, 467, 468, 470, 471, 479, 480, 481, 491, 495, 508, 531, 554, 556, 557, 558], "l06": [48, 485], "l_": [52, 53], "l_0": [51, 488, 512, 513], "l_snr": 44, "la": 418, "lab": [387, 397, 420], "label": [87, 185, 188, 193, 211, 233, 288, 349, 350, 355, 358, 361, 362, 365, 370, 374, 375, 390, 391, 412, 414, 423, 424, 426, 430, 432, 434, 436, 440, 442, 443, 447, 448, 451, 452, 453, 455, 457, 460, 463, 466, 467, 468, 481, 488, 489, 497, 521, 527, 530, 531, 535], "label_axi": 463, "label_axis2": 463, "labelcolor": 430, "labelmapaxi": [412, 426], "lack": [190, 376, 455], "lafferti": [400, 554], "lafferty1994": 554, "lai": 464, "lambda": [16, 65, 216, 217, 273, 354, 458, 460, 470, 525, 557], "lambda_": [216, 217, 270, 432, 434, 442, 525, 527], "lancast": 134, "land": 391, "langl": 19, "languag": [368, 380], "laplac": [223, 514], "lar": [377, 401, 402, 403, 419, 420, 421, 424, 426], "larg": [65, 83, 86, 183, 184, 186, 192, 195, 196, 256, 258, 260, 361, 364, 366, 367, 375, 381, 382, 402, 412, 421, 422, 427, 430, 434, 440, 453, 458, 464, 470, 471, 472, 481, 491, 493, 495, 496, 508, 514, 552, 555, 560], "large_scale_compon": [65, 458], "larger": [27, 126, 270, 279, 362, 369, 380, 426, 430, 431, 434, 459, 462, 463, 464, 468, 492, 508, 514, 556, 557], "largest": [97, 100, 104, 105, 196, 361], "last": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 87, 89, 95, 183, 184, 185, 186, 188, 192, 195, 196, 233, 320, 358, 368, 371, 373, 383, 387, 390, 391, 393, 395, 401, 402, 451, 504], "lat": [16, 47, 58, 60, 61, 63, 67, 69, 71, 72, 74, 79, 82, 86, 89, 91, 97, 100, 104, 106, 110, 116, 120, 121, 123, 127, 141, 142, 148, 153, 156, 159, 183, 184, 186, 189, 192, 194, 195, 196, 207, 208, 212, 219, 220, 223, 235, 237, 245, 246, 248, 250, 256, 258, 260, 265, 270, 292, 293, 296, 318, 361, 362, 369, 370, 371, 372, 373, 374, 380, 381, 384, 391, 393, 398, 401, 406, 419, 420, 421, 429, 432, 435, 438, 439, 440, 442, 444, 448, 452, 453, 458, 459, 461, 462, 463, 464, 465, 466, 467, 474, 475, 479, 480, 481, 483, 490, 491, 492, 493, 495, 500, 507, 508, 512, 513, 514, 515, 516, 517, 518, 552, 559], "lat_0": [212, 220, 223, 237, 245, 246, 260, 376, 384, 439, 442, 443, 445, 446, 447, 450, 452, 458, 459, 465, 466, 471, 479, 480, 512, 513, 514, 516, 517, 518, 519], "lat_0_err": 445, "lat_pnt": [292, 296], "lat_rang": 318, "lat_t": [292, 296], "later": [361, 366, 367, 368, 372, 373, 374, 377, 378, 379, 380, 381, 382, 400, 402, 412, 413, 415, 416, 422, 434, 436, 442, 443, 459, 462, 463, 466, 471, 481, 491], "latest": [120, 176, 261, 290, 364, 368, 381, 386, 387, 394, 423, 430, 437, 439, 442, 443, 444, 450, 454, 460, 470, 492, 508], "latex": [361, 362], "latex_inlin": 426, "latitud": [89, 181, 182, 183, 184, 189, 191, 194, 195, 196, 318, 348, 405, 448, 463, 466, 500, 507, 515], "latpol": 463, "latter": [170, 200, 372, 374, 376, 382, 385, 388, 406, 436, 437, 446, 447, 450, 464, 465, 502, 504, 554, 556], "launch": [420, 555], "laura": [409, 412, 414, 415, 421, 423, 425, 426, 427], "law": [27, 96, 116, 117, 119, 121, 126, 131, 151, 153, 156, 205, 215, 216, 217, 238, 239, 240, 241, 249, 252, 253, 254, 263, 273, 317, 374, 400, 406, 420, 429, 437, 439, 442, 446, 448, 450, 453, 454, 455, 465, 466, 468, 495, 509, 521, 541, 547], "law2": 534, "layer": [83, 86, 373, 380], "layout": [412, 442, 450, 463, 479, 480], "lazi": [84, 95, 97, 100, 104, 105, 258, 299, 420, 495], "lazili": 97, "lazyfitsdata": 408, "lc": [82, 124, 193, 374, 376], "lc_1d": [135, 451, 452, 453, 454], "lc_3d": 452, "lc_estim": 376, "lc_maker_1d": [452, 453, 454], "lc_maker_3d": 452, "lc_new": 453, "lea": 409, "lead": [116, 361, 370, 375, 380, 382, 384, 386, 387, 405, 468, 470, 472, 483, 555], "leak": [436, 504], "leakag": 452, "learn": [138, 143, 361, 378, 381, 390, 393, 395, 397, 421, 432, 434, 438, 444, 445, 446, 448, 451, 458, 459, 460, 463, 466, 468, 470, 475, 481, 555], "least": [43, 44, 361, 364, 366, 370, 446, 451, 507], "leav": [366, 373, 375, 376, 378, 381, 390, 392, 465], "lefaucheur": [418, 419, 420], "left": [21, 24, 25, 27, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 50, 51, 52, 53, 83, 86, 97, 104, 117, 119, 124, 127, 141, 143, 183, 184, 186, 192, 195, 196, 217, 221, 240, 252, 275, 281, 361, 369, 371, 375, 377, 380, 384, 397, 438, 444, 452, 454, 465, 493, 502, 505, 513, 514, 521, 522, 525, 526, 528, 529, 531, 533, 536, 537, 538, 539, 543, 544, 545, 547, 556, 557, 558], "legaci": [361, 420, 421], "legacy_altaz": 81, "legal": [83, 86], "legend": [358, 430, 432, 434, 436, 442, 443, 447, 451, 452, 453, 455, 457, 460, 466, 467, 468, 471, 488, 489, 497, 521, 527, 530, 531, 535], "legend_kwarg": 358, "lemi\u00e8r": 420, "len": [79, 270, 358, 438, 445, 446, 447, 451, 453, 455, 458, 460, 462, 465, 481, 495], "lenain": [420, 421], "length": [19, 20, 26, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 76, 78, 83, 86, 89, 159, 181, 182, 183, 184, 186, 187, 191, 192, 194, 195, 196, 205, 206, 207, 208, 209, 210, 211, 212, 213, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 230, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 256, 257, 258, 259, 260, 261, 262, 273, 302, 354, 387, 432, 437, 444, 448, 458, 460, 463, 471, 481, 512], "lengthi": 463, "lennarz": [403, 417, 419], "leq": [512, 517, 518], "less": [182, 184, 188, 225, 259, 281, 361, 366, 368, 379, 391, 420, 460, 466, 467, 468], "let": [65, 264, 361, 364, 366, 370, 375, 378, 393, 396, 420, 421, 422, 432, 435, 436, 437, 438, 442, 443, 444, 445, 446, 448, 454, 455, 458, 459, 460, 463, 464, 466, 468, 471, 479, 481, 555], "level": [6, 11, 15, 16, 79, 80, 99, 116, 118, 200, 272, 274, 361, 362, 364, 365, 366, 372, 374, 376, 380, 381, 382, 385, 388, 393, 397, 404, 405, 406, 407, 408, 412, 420, 427, 429, 431, 432, 434, 435, 438, 439, 440, 442, 444, 446, 450, 451, 452, 453, 454, 455, 457, 460, 465, 467, 470, 471, 472, 473, 475, 477, 481, 482, 491, 492, 493, 500, 502, 503, 507, 552, 553, 554, 555, 559], "levelnam": 361, "levmar": [200, 460], "lf": 391, "lgpl": 361, "lgtm": 391, "lhaaso": [55, 57], "li": [112, 116, 166, 367, 430, 438, 440, 446, 554, 557], "lib": [326, 430, 431, 434, 435, 436, 437, 438, 439, 440, 442, 443, 444, 445, 446, 447, 448, 450, 452, 453, 454, 455, 457, 458, 459, 460, 462, 463, 464, 465, 466, 468, 470, 471, 472, 473, 479, 480, 481, 519, 527, 530, 543], "librari": [83, 86, 361, 366, 367, 371, 381, 387, 398, 431, 434, 446, 466, 470, 480, 483, 492, 495, 553, 555], "licenc": 387, "licens": [387, 397], "lie": [181, 182, 188, 191, 194], "life": [368, 460], "lifetim": [20, 427], "lifetime_age_of_univers": 20, "light": [15, 124, 128, 213, 225, 280, 365, 372, 374, 377, 381, 385, 393, 406, 408, 409, 416, 419, 421, 426, 427, 429, 451, 456, 475, 491, 492, 493, 494, 503, 504, 507, 509, 551, 553], "light_curv": [16, 225, 381, 421, 429, 435, 439, 440, 442, 452, 456, 479, 550], "light_curve_flar": [429, 453, 456], "light_curve_model": 550, "light_curve_simul": [429, 454, 456], "lightcrv_pksb1222": [225, 550], "lightcurv": [69, 71, 72, 74, 113, 119, 124, 128, 129, 130, 135, 192, 193, 225, 277, 278, 280, 370, 372, 377, 380, 382, 385, 393, 404, 406, 407, 408, 412, 418, 419, 420, 421, 423, 424, 426, 427, 429, 452, 453, 456, 475, 490, 495, 550], "lightcurve_at_energi": 385, "lightcurveconfig": 16, "lightcurveestim": [113, 376, 377, 382, 385, 393, 404, 406, 408, 409, 412, 420, 421, 426, 452, 453, 454, 495], "lightcurvetablemodel": [372, 374], "lightcurvetempl": 372, "lightcurvetemplatemodel": [425, 426], "lightcurvetemplatetemporalmodel": [255, 384, 423, 426, 447, 466, 550], "like": [19, 20, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 46, 50, 52, 53, 65, 76, 78, 83, 84, 86, 132, 133, 147, 155, 183, 184, 186, 190, 192, 195, 196, 201, 205, 208, 209, 212, 213, 215, 216, 217, 218, 220, 221, 222, 223, 224, 225, 226, 227, 228, 230, 237, 238, 239, 240, 241, 244, 245, 246, 247, 249, 252, 253, 254, 259, 260, 290, 310, 320, 360, 361, 362, 364, 366, 367, 368, 369, 371, 372, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 387, 389, 390, 392, 393, 397, 403, 412, 414, 415, 419, 420, 422, 423, 425, 426, 430, 432, 434, 435, 436, 437, 440, 447, 448, 451, 455, 457, 459, 460, 461, 463, 467, 468, 470, 471, 475, 479, 481, 483, 484, 491, 495, 500, 508, 518, 553, 555, 556, 557, 558], "likelhood": 373, "likelihood": [95, 97, 100, 105, 116, 117, 118, 119, 121, 127, 271, 287, 361, 367, 370, 373, 374, 377, 379, 381, 382, 383, 385, 393, 400, 402, 403, 406, 413, 416, 419, 421, 422, 427, 432, 434, 435, 436, 438, 444, 448, 452, 453, 455, 459, 460, 462, 468, 471, 479, 480, 483, 491, 493, 495, 531, 553, 554, 556, 557], "likelihood_profil": [372, 402], "likelihood_typ": 407, "likewis": [184, 196], "lima": 112, "lima1983": [493, 554, 557], "lima_map": 440, "limamapestim": [382, 408], "limit": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 52, 53, 76, 83, 86, 96, 107, 116, 117, 118, 119, 120, 121, 124, 125, 127, 140, 155, 158, 188, 202, 204, 238, 271, 272, 274, 310, 311, 348, 367, 369, 370, 372, 373, 374, 375, 376, 378, 379, 381, 382, 384, 385, 389, 402, 408, 412, 419, 420, 421, 422, 427, 430, 434, 442, 445, 448, 452, 459, 460, 463, 464, 467, 471, 479, 491, 493, 495, 504, 513, 531, 540, 553, 554, 558], "lin": [19, 20, 188, 192, 193, 196, 201, 205, 208, 209, 212, 213, 215, 216, 217, 218, 220, 221, 222, 223, 224, 225, 226, 227, 228, 230, 235, 236, 237, 238, 239, 240, 241, 244, 245, 246, 247, 249, 252, 253, 254, 259, 260, 271, 302, 303, 304, 389, 447, 461, 463, 473, 508, 531], "line": [6, 13, 46, 78, 79, 83, 86, 96, 97, 100, 104, 105, 144, 150, 152, 154, 191, 192, 211, 233, 322, 323, 358, 360, 362, 364, 367, 370, 372, 375, 377, 378, 385, 391, 392, 393, 395, 397, 406, 417, 420, 442, 460, 462, 466, 483, 495, 508, 553], "line2d": [191, 211, 233], "linear": [19, 20, 26, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 137, 138, 139, 140, 143, 145, 147, 150, 155, 183, 184, 186, 192, 193, 195, 196, 205, 206, 209, 213, 215, 216, 217, 221, 225, 226, 227, 228, 230, 234, 236, 238, 239, 240, 244, 249, 251, 252, 253, 254, 256, 257, 259, 260, 261, 302, 361, 423, 429, 442, 447, 448, 450, 463, 466, 471, 479, 480, 509, 551], "linear_model": 546, "linearli": [193, 196, 463, 491], "linearsegmentedcolormap": [351, 352], "linearstretch": [351, 352], "lineartemporalmodel": [255, 466, 546], "lineno": 361, "liner": [259, 375], "linestyl": [430, 455, 457, 468, 489, 508, 512, 513], "linewidth": [358, 362], "linhoff": [424, 425, 426, 427], "link": [65, 67, 76, 96, 211, 213, 233, 270, 364, 366, 369, 370, 373, 381, 387, 391, 397, 398, 409, 412, 414, 418, 419, 420, 431, 434, 435, 436, 437, 439, 442, 443, 450, 454, 458, 460, 466, 470, 480, 481, 495, 540, 552], "linkag": 288, "linkage_kwarg": 288, "linkcheck": 362, "linspac": [79, 142, 183, 184, 186, 192, 195, 196, 446, 448, 455, 460, 461, 463, 468, 507, 512], "linux": [368, 378, 391, 394, 421, 430, 431, 434, 435, 436, 437, 438, 439, 440, 442, 443, 444, 445, 446, 447, 448, 452, 453, 454, 455, 457, 458, 459, 460, 462, 463, 464, 465, 466, 468, 470, 471, 472, 473, 479, 480, 481, 555], "list": [19, 20, 26, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 69, 70, 71, 72, 73, 74, 75, 76, 78, 79, 82, 83, 84, 85, 86, 87, 88, 91, 95, 96, 97, 98, 99, 100, 103, 104, 105, 112, 114, 116, 117, 119, 120, 121, 124, 125, 127, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 147, 148, 150, 152, 153, 154, 155, 156, 158, 159, 163, 164, 166, 167, 169, 170, 171, 172, 175, 178, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 198, 199, 200, 202, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 256, 257, 258, 259, 260, 261, 262, 270, 311, 321, 322, 323, 325, 350, 354, 355, 357, 358, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 380, 381, 382, 383, 384, 385, 387, 388, 390, 391, 392, 393, 394, 396, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 431, 434, 437, 438, 443, 447, 448, 450, 451, 452, 454, 459, 461, 462, 467, 468, 470, 471, 472, 473, 475, 480, 491, 495, 498, 507, 508, 552, 553, 554, 555], "list_format": [83, 86], "listen": 495, "listenv": 364, "listinfo": 390, "liter": [16, 80, 99, 118, 308, 361], "literatur": [483, 485, 554], "littl": [83, 86, 380, 382, 388, 463, 471, 500, 504, 555], "live": [79, 82, 84, 361, 366, 369, 371, 382, 422, 425], "livetim": [65, 84, 85, 100, 101, 105, 153, 175, 177, 178, 367, 430, 431, 434, 435, 437, 444, 446, 447, 450, 454, 458, 459, 461, 463, 471, 472, 481, 491, 495], "livetime_fract": 85, "ljouvin": 367, "ll": [117, 119, 127, 364, 366, 378, 394, 430, 431, 434, 436, 439, 440, 444, 451, 452, 453, 454, 455, 555, 557], "llvm": 397, "ln": [53, 460, 538], "lo": [23, 419], "lo_bnd": 188, "lo_threshold": 140, "load": [64, 65, 78, 79, 82, 83, 86, 95, 96, 97, 100, 104, 121, 123, 157, 163, 181, 182, 183, 184, 194, 298, 361, 415, 418, 420, 426, 435, 437, 439, 440, 446, 447, 450, 451, 454, 455, 464, 470, 471, 472, 473, 479, 481, 492, 495], "load_cta_irf": [422, 426], "load_irf_dict_from_fil": [153, 426, 430, 437, 446, 447, 450, 454, 470], "loc": [83, 86, 196, 354, 455, 488, 489, 497, 521, 527, 530, 531, 535], "loc_indic": [83, 86], "local": [17, 18, 21, 22, 24, 25, 27, 83, 86, 132, 133, 168, 181, 182, 191, 192, 194, 361, 362, 364, 369, 375, 390, 391, 394, 398, 402, 412, 435, 438, 439, 440, 445, 446, 457, 462, 475, 479, 495], "local_dataset": 462, "local_dens": [17, 18, 21, 22, 24, 25, 27, 457], "local_to_glob": 182, "localfold": 11, "localis": 298, "localn": [16, 80, 99, 118], "locat": [47, 78, 79, 81, 83, 84, 89, 128, 141, 142, 148, 153, 156, 194, 319, 369, 375, 379, 382, 387, 388, 393, 395, 426, 430, 437, 446, 447, 450, 454, 458, 472, 473, 492, 508, 555], "location_info": 83, "log": [16, 19, 20, 26, 42, 80, 97, 99, 117, 118, 119, 137, 138, 139, 140, 143, 144, 145, 147, 150, 152, 154, 155, 163, 188, 192, 196, 201, 205, 206, 208, 209, 212, 213, 215, 216, 217, 218, 220, 221, 222, 223, 224, 225, 226, 227, 228, 230, 234, 235, 236, 237, 238, 239, 240, 241, 244, 245, 246, 247, 249, 251, 252, 253, 254, 256, 257, 259, 260, 261, 263, 266, 275, 281, 301, 302, 304, 347, 356, 373, 377, 399, 416, 423, 427, 429, 435, 437, 438, 439, 440, 442, 443, 444, 447, 450, 452, 453, 454, 457, 459, 460, 461, 462, 463, 466, 468, 471, 472, 477, 479, 480, 495, 497, 507, 508, 509, 532, 540, 541, 547, 554, 555, 556, 557, 558], "log10": 455, "log_": [227, 228, 466, 529], "log_2": 278, "log_en": 466, "log_level": 11, "log_parabola": 432, "log_parabola_norm": 384, "logarithm": [34, 463, 468, 529], "logarithmic_spir": 34, "logb": 42, "logconfig": 16, "logenergyaxi": 419, "loggaussian": 372, "logger": [328, 330, 361, 444], "logic": [16, 80, 82, 99, 118, 169, 385, 463, 464], "logical_and": [183, 184, 186, 192, 195, 196], "logical_or": [183, 184, 186, 192, 195, 196, 462], "loglog": [19, 20, 26, 205, 206, 209, 213, 215, 216, 217, 221, 227, 228, 230, 234, 236, 238, 239, 240, 244, 249, 251, 252, 253, 254, 257, 261, 301, 430, 457, 487, 488, 489], "lognorm": 457, "logo": 391, "logparabola": [372, 530], "logparabolanormspectralmodel": [228, 243, 384, 409, 466, 530], "logparabolaspectralmodel": [227, 243, 384, 432, 434, 436, 443, 458, 460, 466, 523, 529, 530], "logscal": 406, "logspac": [142, 183, 184, 186, 192, 195, 196, 437, 450, 454, 455, 457, 463, 487, 488, 489, 508], "logspir": [33, 38], "lomb": [376, 420], "lon": [16, 47, 86, 89, 91, 97, 100, 104, 106, 110, 116, 121, 123, 127, 141, 142, 148, 153, 156, 159, 183, 184, 186, 189, 192, 194, 195, 196, 207, 208, 212, 219, 220, 223, 235, 237, 245, 246, 248, 250, 256, 258, 260, 292, 293, 296, 318, 361, 362, 372, 375, 380, 384, 405, 435, 439, 440, 442, 444, 448, 452, 453, 458, 459, 461, 462, 463, 466, 467, 471, 479, 480, 481, 493, 507, 508, 512, 513, 514, 515, 516, 517, 518], "lon_0": [212, 220, 223, 237, 245, 246, 260, 376, 384, 439, 442, 443, 445, 446, 447, 450, 452, 458, 459, 465, 466, 471, 479, 480, 512, 513, 514, 516, 517, 518, 519], "lon_0_err": 445, "lon_pnt": [292, 296], "lon_rang": 318, "lon_t": [292, 296], "long": [361, 364, 366, 368, 375, 377, 380, 381, 383, 386, 388, 414, 423, 458, 475, 507], "longer": [279, 361, 367, 368, 375, 376, 378, 381, 394, 412, 415, 420, 421, 423, 426, 431, 437, 452], "longest": 187, "longitud": [66, 89, 181, 182, 183, 184, 189, 191, 194, 195, 196, 318, 348, 375, 448, 463, 466, 500, 507, 515], "lonpol": 463, "look": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 46, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 79, 84, 97, 100, 104, 105, 119, 137, 138, 140, 141, 142, 143, 144, 145, 150, 151, 152, 153, 154, 156, 320, 361, 363, 364, 366, 373, 375, 376, 378, 380, 381, 384, 397, 420, 431, 434, 435, 437, 438, 439, 440, 442, 444, 446, 448, 450, 452, 454, 455, 459, 461, 463, 466, 470, 471, 473, 475, 479, 481, 483, 492, 495, 555], "look_up": 418, "lookup": 189, "loop": [83, 86, 311, 374, 426, 434, 458, 463, 472, 479, 495], "lopez": [213, 420, 426, 521], "lopez21": [214, 521], "lopez_2021": 214, "lorimer2006": [28, 29, 30, 36, 39, 40, 48], "lose": 361, "loss": [52, 554], "lost": [95, 97, 104, 495, 508], "lot": [78, 361, 364, 366, 367, 368, 369, 372, 374, 375, 377, 381, 391, 401, 403, 404, 412, 420, 421, 435, 444, 471, 479, 480, 505], "low": [83, 86, 140, 188, 313, 361, 362, 365, 370, 390, 418, 420, 429, 431, 434, 438, 444, 446, 459, 464, 465, 470, 471, 475, 479, 482, 491, 492, 493, 502, 503, 507, 552, 556], "low_zenith": 467, "lower": [17, 18, 19, 20, 21, 22, 24, 25, 26, 27, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 52, 53, 117, 119, 140, 169, 188, 190, 193, 205, 206, 209, 210, 213, 215, 216, 217, 218, 221, 222, 224, 225, 226, 227, 228, 230, 234, 236, 238, 239, 240, 241, 244, 247, 249, 251, 252, 253, 254, 257, 259, 261, 262, 361, 375, 380, 381, 388, 448, 462, 480], "lower_error": 119, "lowest": [380, 451], "lp": [227, 228, 384, 432, 458, 466, 523], "lp_norm": 530, "lst": [368, 470], "lt": [361, 387, 414, 423, 517, 518], "ltcube": [182, 183, 184, 186, 195, 196, 463], "lts_author": 387, "luca": [402, 403, 404, 405, 406, 407, 408, 409, 412, 414, 415, 423, 426], "lui": 422, "luigi": 417, "luminos": [41, 46, 51, 52, 53, 54, 234], "luminosity_spindown": [51, 54], "luminosity_tev": [52, 53, 489], "lvtm": 454, "lw": [436, 438, 444, 455, 460, 508, 512, 514], "ly": [412, 465], "lyne": 37, "l\u00e9a": [402, 404, 405, 406, 409, 417, 418, 419, 420, 421], "l\u00f3pez": 420, "m": [19, 28, 29, 30, 31, 32, 35, 36, 37, 38, 39, 40, 52, 53, 83, 86, 89, 92, 106, 110, 124, 181, 182, 183, 184, 186, 192, 194, 195, 196, 273, 287, 361, 362, 364, 375, 392, 393, 394, 395, 447, 457, 460, 461, 463, 466, 477, 500, 504, 506, 507, 508, 519, 555, 558], "m1": [393, 395], "m2": [97, 143, 163, 435, 437, 439, 440, 442, 444, 450, 459, 461, 462, 470, 479, 480], "m_": [20, 50, 52, 53], "m_3fhl_gc": 463, "m_4d": 463, "m_allski": 463, "m_b": 556, "m_cube": 463, "m_ejecta": [52, 488], "m_gc": 463, "m_hpx": 463, "m_i": 556, "m_iem_10gev": 463, "m_iem_cutout": 463, "m_iem_gc": 463, "m_iem_interp": 463, "m_sub": 463, "m_sun": 488, "m_wc": [183, 184, 186, 192, 195, 196, 463], "ma": [83, 86, 112, 116, 430, 438, 440, 554, 557], "mac": [83, 86, 361, 368, 391, 419, 555], "machin": [364, 368, 369, 374, 378, 391, 430, 431, 434, 435, 436, 437, 438, 439, 440, 442, 443, 444, 445, 446, 447, 448, 452, 453, 454, 455, 457, 458, 459, 460, 462, 463, 464, 465, 466, 468, 470, 471, 472, 473, 479, 480, 481], "machineri": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 442], "maco": [378, 421], "macport": [378, 419, 421], "made": [163, 170, 191, 194, 202, 204, 211, 233, 290, 322, 323, 361, 364, 366, 377, 380, 382, 385, 386, 387, 412, 423, 424, 434, 438, 442, 443, 462, 470, 508, 519, 554], "madrid": 371, "magenta": [358, 445, 467], "magic": [92, 393, 398, 414, 420, 423, 436, 471, 554], "magic_ecpl": 264, "magic_lp": [264, 436], "magnet": [42, 50, 51, 54, 531], "magnetic_field": [50, 51, 54], "magnitud": [302, 446], "mai": [16, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 78, 80, 83, 86, 89, 96, 99, 118, 119, 120, 121, 124, 201, 203, 361, 362, 364, 369, 370, 374, 375, 377, 378, 386, 387, 391, 392, 394, 398, 399, 400, 439, 440, 446, 470, 494, 507, 514, 531, 552, 555, 559], "mail": [362, 364, 366, 368, 375, 377, 380, 382, 384, 387, 390, 396, 401, 402, 481, 555], "mailman": 390, "mailmap": [412, 423], "main": [86, 97, 104, 361, 364, 366, 367, 369, 373, 376, 377, 378, 381, 385, 387, 391, 402, 408, 412, 415, 420, 426, 435, 445, 446, 448, 450, 458, 461, 463, 464, 465, 477, 479, 480, 490, 492, 496, 555], "mainli": [361, 371, 372, 375, 382, 463], "maintain": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 83, 86, 361, 363, 378, 380, 381, 382, 386, 391, 421, 462], "mainten": [361, 368, 387, 391, 403, 425], "major": [191, 212, 220, 223, 361, 365, 366, 370, 378, 386, 414, 420, 421, 512, 513, 514], "majorana": 19, "make": [16, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 45, 46, 59, 78, 80, 83, 86, 90, 96, 99, 118, 158, 159, 163, 164, 165, 166, 168, 169, 170, 173, 174, 179, 180, 182, 183, 184, 187, 188, 191, 193, 194, 195, 196, 259, 320, 322, 323, 332, 360, 362, 363, 366, 367, 368, 371, 373, 375, 377, 378, 379, 380, 381, 382, 385, 387, 388, 391, 397, 400, 401, 403, 406, 407, 412, 414, 417, 418, 419, 420, 423, 425, 431, 434, 436, 437, 440, 442, 446, 450, 452, 460, 461, 462, 463, 466, 470, 471, 472, 477, 481, 492, 495, 555, 556], "make_background": [163, 170], "make_background_fit": 160, "make_background_scal": 160, "make_base_catalog_galact": [420, 485], "make_concentric_annulus_sky_region": 448, "make_contour": 460, "make_count": [163, 164, 165, 170], "make_counts_off": [164, 165], "make_cub": 158, "make_dataset": 159, "make_default_fov_background_model": 160, "make_edisp": [163, 170], "make_edisp_kernel": [163, 170], "make_edisp_kernel_map": 461, "make_edisp_map": 142, "make_effective_livetime_map": 462, "make_exclusion_mask": 160, "make_exposur": [163, 170], "make_exposure_irf": [163, 170], "make_imag": 421, "make_lupton_rgb": 356, "make_map_background_irf": 415, "make_map_count": 367, "make_map_cutout": 367, "make_map_exposure_reco_energi": 367, "make_map_exposure_true_energi": [142, 367, 461], "make_map_fov_background": 367, "make_map_hadron_accept": 367, "make_map_ring_background": 367, "make_map_xxx": 367, "make_maps_off": 168, "make_mask_bkg_invalid": 169, "make_mask_energy_aeff_default": 169, "make_mask_energy_aeff_max": 169, "make_mask_energy_bkg_peak": 169, "make_mask_energy_edisp_bia": 169, "make_mask_offset_max": 169, "make_mean_edisp": 422, "make_mean_psf": 422, "make_meta_t": [163, 170], "make_model": 380, "make_more_random_stuff": 361, "make_observation_time_map": 462, "make_orthogonal_rectangle_sky_region": [121, 448], "make_path": [119, 443, 459], "make_pixel_region": 375, "make_psf": [153, 163, 170, 422], "make_psf_map": 461, "make_quant": 332, "make_random_stuff": 361, "make_region": 375, "make_sky_coord": 375, "make_some_random_stuff": 361, "make_theta_squared_t": [412, 473], "makefil": [391, 416], "maker": [6, 142, 153, 158, 159, 160, 161, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 367, 374, 376, 387, 406, 408, 409, 414, 423, 426, 427, 429, 430, 434, 436, 437, 440, 444, 446, 447, 450, 454, 455, 459, 461, 464, 469, 472, 473, 475, 491, 492, 505, 507, 554], "maker_fov": 480, "maker_safe_mask": [444, 450, 480], "mamba": [364, 392, 393, 414], "manag": [83, 86, 202, 204, 211, 233, 310, 339, 360, 361, 364, 369, 377, 378, 380, 383, 387, 388, 390, 412, 417, 419, 423, 427, 463, 465, 555], "manconi": 404, "mandatori": [169, 364, 374, 387, 447, 466], "mandatory_keyword": 461, "mani": [83, 86, 302, 361, 362, 364, 366, 368, 370, 373, 375, 376, 377, 378, 381, 382, 387, 391, 397, 403, 404, 409, 412, 418, 419, 420, 421, 422, 425, 426, 431, 434, 437, 445, 450, 451, 463, 473, 475, 483, 491, 493, 505, 508, 552, 553, 554, 555, 559], "manifest": 371, "manipul": [83, 86, 385, 388, 414, 468, 507], "manner": [425, 426], "manpow": [366, 378], "manual": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 83, 86, 368, 373, 383, 390, 446, 495, 503, 555, 556], "manuel": [413, 416, 417], "map": [6, 15, 16, 23, 26, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 65, 76, 79, 80, 83, 86, 91, 93, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 108, 110, 112, 113, 114, 116, 117, 118, 119, 121, 123, 124, 127, 131, 132, 133, 134, 137, 138, 139, 140, 141, 142, 143, 144, 145, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 158, 160, 161, 163, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 181, 182, 183, 184, 185, 187, 188, 189, 191, 192, 193, 194, 195, 196, 197, 198, 208, 211, 212, 219, 220, 223, 225, 233, 235, 237, 245, 246, 248, 250, 256, 257, 258, 260, 261, 268, 273, 312, 348, 349, 354, 356, 358, 360, 361, 362, 364, 368, 372, 373, 374, 375, 376, 377, 380, 381, 382, 383, 384, 385, 388, 393, 397, 401, 402, 404, 405, 406, 407, 408, 409, 412, 413, 414, 416, 417, 418, 420, 421, 422, 423, 426, 427, 429, 430, 431, 434, 435, 436, 437, 441, 442, 445, 446, 447, 448, 449, 451, 452, 453, 454, 458, 459, 462, 466, 469, 470, 471, 472, 473, 475, 476, 479, 480, 483, 490, 491, 492, 494, 495, 499, 500, 501, 502, 503, 504, 505, 511, 513, 514, 515, 516, 519, 550, 552, 553, 554], "map_": [197, 198, 349, 356], "map_4d": 463, "map_analysi": 380, "map_cent": 260, "map_coord": [79, 142, 153, 156], "map_dataset": [373, 455], "map_dataset_empti": 455, "map_dataset_mak": 455, "map_dataset_on_off": 455, "map_edisp": [106, 110], "map_in": [183, 184, 186, 192, 195, 196], "map_out": [100, 105, 141, 142, 148, 153, 156, 183, 184, 186, 192, 195, 196], "map_select": [16, 435, 439, 440, 442, 479], "map_typ": [183, 184, 186, 192, 195, 196, 463, 507], "mapax": [137, 138, 139, 140, 143, 144, 145, 147, 150, 152, 154, 155, 409, 412, 414, 463], "mapaxi": [19, 20, 26, 97, 100, 104, 105, 106, 107, 108, 110, 117, 119, 121, 135, 137, 138, 139, 140, 141, 142, 143, 144, 145, 147, 150, 151, 152, 153, 154, 155, 156, 163, 173, 174, 179, 180, 181, 182, 183, 184, 186, 187, 191, 192, 193, 194, 195, 196, 205, 206, 209, 213, 215, 216, 217, 221, 227, 228, 230, 234, 236, 238, 239, 240, 244, 249, 251, 252, 253, 254, 257, 261, 356, 362, 376, 385, 403, 404, 406, 409, 412, 422, 426, 430, 431, 434, 436, 437, 443, 444, 446, 447, 450, 453, 454, 455, 459, 461, 462, 463, 466, 471, 472, 473, 480, 499, 502, 504, 505, 507, 508], "mapcoord": [79, 142, 153, 156, 181, 182, 183, 184, 186, 187, 191, 192, 194, 195, 196, 235, 420, 421, 463, 508, 515], "mapdataset": [93, 94, 98, 100, 103, 104, 105, 107, 108, 109, 111, 112, 116, 121, 124, 127, 131, 132, 133, 134, 158, 159, 160, 163, 164, 168, 169, 219, 354, 357, 374, 376, 382, 383, 402, 403, 404, 405, 406, 407, 408, 409, 412, 426, 427, 438, 439, 443, 444, 445, 447, 448, 450, 452, 454, 455, 460, 462, 464, 465, 471, 479, 480, 493, 495, 502, 505, 554, 556, 557], "mapdataseteventsampl": [88, 103, 406, 407, 408, 415, 426, 446, 447], "mapdatasetmak": [153, 161, 170, 374, 406, 409, 412, 415, 423, 444, 446, 447, 450, 455, 461, 462, 472, 479, 480, 495, 502, 505], "mapdatasetmetadata": [97, 100, 388], "mapdatasetoff": 414, "mapdatasetonoff": [93, 97, 104, 105, 112, 116, 131, 158, 164, 168, 406, 407, 409, 412, 425, 426, 440, 455, 462, 491, 505, 556], "mapdatasetsampl": 374, "mapevalu": [372, 373, 405, 406, 409, 412, 423, 424, 425, 427], "mapeventsampl": [404, 405], "mapfit": [372, 373, 402, 421, 422], "mapgeom": [367, 422, 423], "mapmak": [163, 377, 402, 406, 421], "mapmakerob": [405, 406], "mappabl": 385, "mappanelplott": [382, 560], "mapper": 298, "mappingintstrani": [16, 80, 99, 118], "maps_off": 168, "mar": [378, 399, 424], "march": [368, 370, 399, 401, 422], "marcocirelli": 26, "margin": [100, 105, 109, 111, 182, 184, 194, 196, 211, 233, 248, 372, 464, 512, 554, 556], "marion": [402, 421], "mark": [86, 361, 372, 390], "marker": [96, 97, 100, 104, 105, 430, 431, 434, 436, 438, 444, 451, 452, 453, 454, 481], "markerfacecolor": [97, 100, 104, 105], "markers": [96, 97, 100, 104, 105, 468], "mask": [79, 83, 86, 94, 96, 97, 100, 104, 105, 116, 120, 121, 123, 124, 125, 127, 141, 142, 148, 153, 156, 158, 160, 165, 166, 167, 168, 169, 171, 181, 182, 183, 184, 186, 189, 191, 192, 194, 195, 196, 202, 204, 211, 233, 248, 373, 389, 406, 408, 409, 410, 412, 415, 421, 423, 424, 425, 426, 429, 430, 431, 442, 444, 462, 465, 469, 472, 475, 491, 502, 504, 507, 554], "mask_1": 467, "mask_2": 467, "mask_bright": 458, "mask_contains_region": 196, "mask_data": 464, "mask_energi": [459, 464], "mask_fit": [96, 97, 100, 104, 105, 109, 111, 373, 406, 423, 436, 442, 455, 459, 460, 464, 468, 491], "mask_fit_imag": [97, 100, 104, 105], "mask_imag": [97, 100, 104, 105], "mask_map": [182, 194, 429, 464, 469], "mask_map_catalog": 464, "mask_nearest_posit": [183, 184, 186, 192, 195, 196], "mask_off": 455, "mask_roi": 458, "mask_saf": [96, 97, 100, 101, 104, 105, 169, 373, 406, 459, 462, 464, 491], "mask_safe_edisp": [97, 100, 104, 105], "mask_safe_imag": [97, 100, 104, 105, 141, 142, 148, 153, 156], "mask_safe_psf": [97, 100, 104, 105], "mask_spac": 459, "masked_ev": 79, "maskedarrai": [83, 86], "maskedcolumn": [83, 86], "mass": [19, 20, 26, 52, 374, 408, 427, 457, 483, 516], "massdm": [19, 20, 457], "master": [367, 368, 375, 390, 391, 400], "match": [83, 86, 103, 107, 181, 182, 184, 187, 188, 189, 191, 194, 196, 198, 272, 274, 361, 369, 420, 422, 427, 434, 437, 454, 471, 490, 507], "match_by_nam": 189, "math": [220, 360], "mathcal": [460, 491], "mathemat": [466, 468], "mathieu": [412, 415], "mathrm": [19, 20, 23, 97, 104, 143, 457, 460, 491, 556, 558], "mathworld": [317, 318], "matplotlib": [19, 20, 26, 64, 65, 79, 123, 137, 140, 143, 144, 145, 150, 151, 152, 153, 154, 155, 156, 183, 184, 186, 192, 195, 196, 199, 205, 206, 207, 208, 209, 210, 212, 213, 215, 216, 217, 218, 220, 221, 222, 223, 224, 225, 226, 227, 228, 230, 234, 235, 236, 237, 238, 239, 240, 241, 244, 245, 246, 247, 249, 250, 251, 252, 253, 254, 256, 257, 259, 260, 261, 262, 339, 349, 350, 351, 354, 355, 356, 358, 360, 361, 362, 375, 378, 387, 394, 397, 404, 412, 414, 430, 431, 432, 434, 435, 436, 437, 438, 439, 440, 442, 443, 444, 445, 446, 447, 448, 450, 451, 452, 453, 454, 455, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 470, 471, 472, 473, 479, 480, 481, 487, 488, 489, 495, 497, 498, 499, 501, 504, 512, 514, 518, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 542, 543, 544, 545, 546, 547, 548, 559], "matric": 199, "matrix": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 106, 110, 140, 141, 142, 145, 199, 200, 202, 211, 233, 272, 274, 354, 378, 379, 389, 422, 423, 426, 460, 461, 491, 493, 499], "matter": [1, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 375, 381, 389, 421, 426, 427, 429, 462, 469, 471, 475, 484, 507, 553, 555], "matthew": [368, 418, 420, 421], "matthia": [420, 421], "mattox": 438, "max": [16, 17, 18, 19, 20, 21, 22, 24, 25, 26, 27, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 79, 83, 84, 86, 97, 107, 120, 122, 124, 153, 155, 156, 159, 163, 165, 169, 196, 201, 202, 203, 204, 205, 206, 208, 209, 211, 212, 213, 215, 216, 217, 218, 220, 221, 222, 223, 224, 225, 226, 227, 228, 230, 233, 234, 236, 237, 238, 239, 240, 241, 244, 245, 246, 247, 249, 251, 252, 253, 254, 257, 259, 260, 261, 318, 369, 377, 384, 389, 397, 408, 409, 410, 412, 414, 426, 431, 434, 435, 436, 437, 439, 440, 442, 443, 444, 445, 448, 450, 451, 452, 453, 455, 458, 459, 460, 461, 462, 463, 464, 466, 467, 468, 471, 472, 479, 480, 483, 502, 504, 505, 512, 531, 534, 540, 557], "max_ag": [45, 485], "max_column": [83, 86], "max_energi": 451, "max_lin": [83, 86], "max_offset": 377, "max_percentil": 79, "max_radiu": [151, 153, 156, 194, 471], "max_region_numb": [166, 504], "max_width": [83, 86], "maxcal": 200, "maxclust": 288, "maxfev": 460, "maxim": [45, 78, 86, 107, 169, 208, 212, 220, 223, 235, 245, 246, 250, 256, 260, 424, 425, 426, 427, 504], "maxima": [132, 202, 204], "maximilian": [412, 414, 415, 424, 425, 426, 427], "maximum": [19, 20, 45, 46, 47, 79, 83, 86, 95, 117, 119, 120, 122, 124, 153, 156, 158, 166, 169, 175, 178, 182, 188, 193, 194, 201, 203, 205, 208, 209, 211, 212, 213, 215, 216, 217, 218, 220, 221, 222, 223, 224, 225, 226, 227, 228, 230, 233, 237, 238, 239, 240, 241, 244, 245, 246, 247, 249, 252, 253, 254, 259, 260, 272, 274, 317, 319, 322, 358, 364, 367, 375, 414, 432, 438, 451, 462, 463, 468, 472, 480, 485, 493, 504, 531, 553, 554, 557], "maxmimum": 468, "maxwellian": 32, "mayb": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 361, 369, 371, 372, 383], "mb": [181, 182, 191, 194, 369, 393, 395, 429, 433, 441, 449, 456, 469, 470, 471, 473, 474, 476, 478, 482, 510, 520, 541, 551], "mbox": [97, 104], "mc": 379, "mc_id": [79, 371, 374, 414, 446, 470], "mcerp": 379, "mckee": [53, 427], "mcmc": [379, 381, 402, 407, 409, 531], "mcmc_sampl": [381, 404], "md": [364, 381, 387], "mdm": [26, 457], "mdw": 462, "mean": [42, 66, 83, 86, 91, 97, 121, 123, 140, 141, 142, 145, 148, 153, 156, 221, 225, 259, 277, 289, 308, 361, 362, 364, 366, 368, 374, 375, 377, 378, 384, 389, 394, 397, 409, 418, 437, 447, 451, 460, 462, 466, 467, 468, 471, 472, 481, 513, 528, 555, 556], "meaning": 466, "meant": [367, 426, 430, 437, 439, 442, 444, 450, 454, 470], "measur": [27, 65, 100, 105, 123, 188, 264, 272, 274, 277, 278, 279, 280, 283, 284, 286, 287, 367, 375, 380, 385, 391, 400, 405, 413, 419, 421, 431, 434, 436, 437, 440, 443, 445, 448, 450, 451, 452, 453, 458, 471, 480, 481, 493, 500, 502, 505, 553, 554, 557, 558], "mechan": [369, 379, 385, 388], "media": 387, "median": [79, 153, 156, 397, 455, 467, 471], "median_zenith": 467, "medium": [45, 52, 361, 370], "meeseeksdev": 361, "meeseeksmachin": 361, "meet": [211, 233, 290, 367, 369, 381, 386, 391], "megabyt": [181, 182, 191, 194], "mem": [429, 433, 441, 449, 456, 469, 474, 476, 478, 482, 510, 520, 541, 551], "member": [79, 362, 366, 375, 387, 388, 420, 426, 470, 473], "memo": [140, 188], "memori": [83, 84, 86, 87, 95, 97, 98, 100, 103, 104, 105, 181, 182, 191, 194, 256, 258, 260, 339, 361, 371, 373, 374, 377, 383, 385, 406, 412, 427, 437, 450, 495, 554], "memoryobserv": 84, "mender": [425, 426, 427], "mention": [59, 135, 361, 362, 364, 368, 369, 373, 375, 378, 380, 381, 386, 387, 390, 391, 461, 465, 466, 483, 554], "mentor": [364, 381], "mere": 371, "merg": [65, 82, 83, 86, 185, 188, 211, 233, 329, 361, 364, 365, 366, 367, 374, 375, 376, 380, 381, 386, 387, 390, 391, 401, 402, 403, 404, 405, 406, 407, 408, 409, 417, 418, 419, 420, 421, 422], "merge_equ": 82, "mergesort": [83, 86], "mess": 362, "messag": [96, 364, 375, 377, 384, 410, 425, 431, 432, 434, 435, 436, 442, 443, 444, 454, 455, 460, 471, 479, 480, 495, 555], "met": [82, 342, 426, 453, 554], "met_start": 82, "met_stop": 82, "meta": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 79, 81, 83, 84, 86, 89, 95, 97, 98, 100, 102, 103, 104, 105, 117, 119, 137, 138, 139, 140, 143, 144, 145, 147, 150, 152, 154, 155, 163, 170, 183, 184, 186, 192, 195, 196, 256, 257, 260, 261, 300, 342, 343, 344, 345, 371, 374, 375, 376, 385, 388, 408, 409, 420, 424, 426, 427, 446, 455, 463, 467, 470, 472, 492, 493, 550], "meta_t": [95, 96, 97, 100, 104, 105, 163, 170, 385, 388, 409, 431, 437, 462, 491], "metaattribut": [83, 86], "metadata": [16, 79, 80, 81, 83, 84, 86, 99, 101, 117, 118, 119, 137, 138, 139, 143, 144, 147, 150, 152, 154, 155, 183, 184, 186, 192, 195, 196, 343, 365, 367, 378, 427, 435, 446, 466, 479, 511, 512, 513, 514, 515, 516, 517, 518, 519, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 542, 543, 544, 545, 546, 547, 548, 549, 550], "metadata_fits_export_kei": [80, 99, 118], "metadatabas": 388, "metadatabasemodel": 388, "metapackag": 378, "method": [6, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 50, 51, 52, 53, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 112, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 132, 134, 135, 137, 138, 139, 140, 141, 142, 143, 144, 145, 147, 148, 150, 151, 152, 153, 154, 155, 156, 158, 159, 160, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 256, 257, 258, 259, 260, 261, 262, 272, 274, 280, 288, 298, 302, 306, 310, 311, 312, 335, 348, 350, 360, 361, 364, 367, 370, 371, 372, 375, 376, 377, 379, 380, 381, 383, 385, 387, 388, 393, 397, 398, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 412, 414, 415, 417, 418, 419, 420, 421, 422, 423, 426, 427, 430, 431, 432, 434, 435, 436, 438, 439, 440, 442, 443, 444, 445, 446, 447, 450, 453, 455, 457, 458, 459, 460, 461, 462, 464, 465, 466, 467, 468, 470, 471, 472, 473, 479, 480, 481, 490, 492, 494, 495, 499, 502, 504, 505, 506, 508, 529, 543, 552, 553, 554, 555, 557], "method_kwarg": [310, 311], "methoda": 404, "metric": 288, "mev": [71, 79, 137, 138, 139, 143, 430, 437, 439, 442, 444, 450, 454, 455, 458, 461, 463, 466, 470, 471, 481, 540], "meval": 514, "mexico": 472, "meyer": [230, 264, 443, 554], "meyer2010": 554, "mgtime": 376, "michael": [425, 427], "mid": [415, 426, 470], "middl": [350, 377], "midli": 434, "midpoint": 84, "might": [13, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 171, 188, 200, 361, 366, 372, 373, 375, 378, 380, 385, 387, 388, 393, 395, 402, 434, 453, 455, 459, 462, 464, 471, 472, 475, 481, 483, 491, 495, 502, 508, 555, 557], "migra": [97, 100, 104, 105, 142, 145, 174, 377, 446, 447, 461, 500], "migra_axi": [97, 100, 104, 105, 108, 142, 145, 446, 447, 461, 462], "migrad": [96, 200, 431, 432, 434, 435, 436, 442, 443, 444, 455, 460, 471, 479, 480], "migrad_opt": [200, 460], "migrat": [97, 100, 104, 105, 108, 145, 370, 405, 412, 421, 446, 462, 499, 500], "milagro": [92, 352], "mileston": [370, 390], "milki": [33, 38, 400, 485], "miller": [83, 86], "million": [361, 388], "min": [16, 17, 18, 19, 20, 21, 22, 24, 25, 26, 27, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 79, 86, 97, 120, 122, 124, 135, 163, 201, 202, 203, 204, 205, 206, 208, 209, 211, 212, 213, 215, 216, 217, 218, 220, 221, 222, 223, 224, 225, 226, 227, 228, 230, 233, 234, 236, 237, 238, 239, 240, 241, 244, 245, 246, 247, 249, 251, 252, 253, 254, 257, 259, 260, 261, 278, 318, 376, 377, 384, 389, 397, 412, 420, 435, 437, 439, 440, 442, 443, 444, 445, 448, 450, 451, 452, 453, 454, 455, 459, 460, 461, 462, 463, 466, 467, 468, 471, 479, 480, 483, 504, 531, 534, 540], "min_count": 160, "min_dist": [132, 133, 166, 438, 444, 504], "min_distance_input": [166, 504], "min_energi": 451, "min_npred_background": 160, "min_signific": 376, "min_significance_lc": 376, "minaya": 422, "mind": [364, 381, 450, 460], "mini": 381, "miniconda": 392, "minim": [19, 20, 26, 107, 126, 183, 184, 186, 191, 192, 195, 196, 197, 200, 205, 206, 208, 209, 212, 213, 215, 216, 217, 220, 221, 223, 227, 228, 230, 234, 235, 236, 237, 238, 244, 245, 246, 248, 249, 250, 251, 252, 253, 254, 256, 257, 260, 261, 270, 373, 376, 384, 388, 414, 424, 426, 430, 446, 459, 460, 468, 480, 495, 504, 505, 508, 553, 558], "minima": [202, 204, 468], "minimis": [454, 467], "minimum": [19, 20, 26, 47, 79, 95, 116, 117, 119, 120, 122, 124, 126, 128, 132, 133, 135, 136, 158, 160, 166, 188, 191, 193, 201, 203, 205, 206, 208, 209, 211, 212, 213, 215, 216, 217, 218, 220, 221, 222, 223, 224, 225, 226, 227, 228, 230, 233, 234, 236, 237, 238, 239, 240, 241, 244, 245, 246, 247, 249, 251, 252, 253, 254, 257, 259, 260, 261, 266, 271, 275, 278, 290, 317, 319, 322, 356, 378, 414, 420, 434, 438, 446, 460, 463, 468, 471, 493, 495, 504, 531, 558], "mino": [200, 460], "minor": [361, 366, 381, 384, 386, 411, 424, 513, 514], "minos_contour": [404, 422], "minu": [145, 455], "minuit": [96, 114, 200, 372, 379, 406, 421, 422, 426, 431, 432, 434, 435, 436, 442, 443, 444, 455, 460, 471, 479, 480], "minuit_opt": 460, "minut": [381, 391, 420, 434, 438, 440, 442, 444, 445, 446, 448, 453, 454, 457, 459, 460, 462, 468, 479], "mireia": 423, "mirror": 180, "misc": [400, 413, 417, 418, 419], "miss": [78, 83, 86, 137, 138, 139, 140, 143, 144, 145, 147, 150, 152, 154, 155, 163, 361, 364, 369, 370, 371, 372, 375, 381, 382, 385, 410, 412, 414, 420, 425, 463], "mission": [79, 426, 554], "mistak": [366, 386], "mix": [360, 361, 377, 459, 463], "mixin": [83, 86], "mjd": [82, 89, 119, 210, 218, 222, 224, 225, 226, 241, 247, 259, 262, 343, 345, 362, 425, 426, 438, 446, 447, 451, 452, 453, 454, 463, 466, 492, 543, 544, 545, 546, 547, 548, 549, 550, 559], "mjdref": [438, 463], "mjdreff": [89, 342, 345, 447], "mjdrefi": [89, 342, 345, 447], "mkdir": [377, 434, 435, 442, 443, 446, 479, 480], "mkn": [481, 554], "mkn_421_3fhl": 481, "mncontour": 200, "mnra": [128, 286], "mnt": 423, "mock": 445, "mock_dl4": 445, "mode": [16, 80, 81, 83, 86, 89, 97, 99, 100, 104, 118, 122, 141, 142, 148, 153, 156, 159, 182, 183, 184, 186, 187, 188, 191, 192, 194, 195, 196, 258, 388, 407, 420, 423, 427, 454], "model": [1, 6, 15, 16, 18, 19, 20, 26, 28, 29, 30, 31, 32, 35, 36, 37, 38, 39, 40, 45, 50, 51, 52, 53, 54, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 80, 84, 88, 94, 95, 96, 97, 98, 99, 100, 103, 104, 105, 107, 109, 111, 112, 114, 116, 117, 118, 119, 120, 121, 124, 125, 126, 127, 131, 134, 137, 143, 144, 151, 152, 153, 154, 156, 160, 163, 176, 183, 184, 186, 192, 195, 196, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 232, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 282, 285, 287, 357, 360, 361, 362, 365, 366, 367, 373, 374, 376, 377, 379, 381, 382, 385, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 412, 413, 414, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 429, 430, 432, 437, 438, 440, 445, 448, 450, 455, 461, 462, 463, 464, 469, 471, 472, 475, 483, 484, 490, 491, 493, 495, 496, 500, 502, 503, 507, 510, 520, 541, 551, 553, 554, 557, 558], "model1": [206, 521, 523, 527, 530, 532, 535], "model2": [206, 454, 521, 523, 527, 530, 532, 535], "model_1d": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 435], "model_2d": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40], "model_3d": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40], "model_add": [466, 523], "model_best_joint": 434, "model_best_stack": 434, "model_bkg": 459, "model_computed_field": [16, 80, 99, 118], "model_config": [16, 80, 99, 118, 439, 479], "model_constraint": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40], "model_construct": [16, 80, 99, 118], "model_copi": [16, 80, 99, 118, 466], "model_dump": [16, 80, 99, 118], "model_dump_json": [16, 80, 99, 118], "model_extra": [16, 80, 99, 118], "model_field": [16, 80, 99, 118], "model_fields_set": [16, 80, 99, 118], "model_fit": 454, "model_joint": 442, "model_json_schema": [16, 80, 99, 118], "model_manag": [429, 465, 469], "model_nam": [97, 100, 104, 105, 211, 233, 357, 459], "model_parametrized_nam": [16, 80, 99, 118], "model_plot": 445, "model_post_init": [16, 80, 99, 118], "model_prior": 468, "model_read": 468, "model_rebuild": [16, 80, 99, 118], "model_set_axi": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40], "model_simu": [437, 450, 454], "model_spectrum": 466, "model_str": 435, "model_typ": [211, 219, 231, 233, 248, 258, 270, 384, 465], "model_valid": [16, 80, 99, 118], "model_validate_json": [16, 80, 99, 118], "model_validate_str": [16, 80, 99, 118], "model_weak": 468, "model_weak_prior": 468, "model_without_nam": 466, "modelbas": [219, 248, 250, 251, 258, 262, 389], "modeldm": [19, 20], "modelevalu": 372, "modeling_2d": [429, 439, 441], "modelmetadata": 388, "modelmodel_dump": [16, 80, 99, 118], "modelmodel_dump_json": [16, 80, 99, 118], "models_3fhl": 465, "models_4fgl_roi": 458, "models_as_dict": [16, 80, 99, 118], "models_diffus": 446, "models_fil": [16, 435, 439, 440, 442, 479], "models_fit": 450, "models_gc": 465, "models_gp": 470, "models_joint": 442, "models_or": 465, "models_read": 466, "models_select": 465, "models_stack": 442, "models_yaml": 466, "modelsmetadata": 388, "modern": [83, 86, 379], "modernis": [378, 406], "modest": [361, 513], "modif": [16, 80, 83, 86, 99, 118, 361, 364, 383, 390, 423], "modifi": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 41, 83, 86, 88, 97, 104, 119, 120, 121, 124, 127, 159, 200, 310, 333, 358, 371, 373, 377, 383, 387, 388, 407, 409, 410, 412, 414, 422, 425, 426, 435, 447, 462, 464, 468, 472, 479, 493, 495, 508, 559], "modul": [6, 247, 361, 362, 366, 370, 377, 382, 400, 402, 408, 420, 454, 458, 462, 465, 483, 484, 485, 486, 531, 548, 559], "modular": 367, "mohrmann": [377, 401, 402, 403, 419, 420, 421, 424, 426, 554], "mohrmann2019": 554, "moment": [15, 51, 54, 82, 90, 248, 337, 367, 375, 377, 378, 381, 386, 387, 461, 463, 500], "moncar": [200, 460], "monitor": [374, 470, 495], "monkei": 361, "mono": 369, "mont": [379, 500], "montecarlo": [98, 103, 200], "month": [74, 364, 370, 375, 378, 380, 381, 386, 390, 394, 400, 401, 402, 403, 404, 413, 416, 417, 418, 419, 420, 421, 422], "monthli": [370, 388, 393, 422], "moor": 24, "morcuend": [422, 425, 427], "more": [19, 20, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 69, 71, 72, 74, 83, 86, 94, 95, 96, 97, 100, 104, 105, 132, 140, 183, 184, 186, 195, 196, 205, 206, 207, 208, 209, 210, 212, 213, 215, 217, 218, 220, 221, 222, 223, 224, 225, 226, 228, 234, 235, 236, 237, 238, 240, 241, 245, 246, 247, 249, 252, 253, 254, 260, 261, 275, 281, 298, 336, 361, 362, 364, 366, 367, 368, 370, 371, 372, 373, 374, 375, 376, 377, 378, 380, 381, 382, 385, 386, 387, 388, 389, 391, 392, 393, 394, 397, 406, 407, 408, 409, 412, 419, 421, 422, 426, 431, 434, 436, 438, 440, 442, 446, 447, 451, 454, 457, 459, 460, 462, 463, 464, 465, 466, 467, 468, 472, 473, 475, 481, 491, 492, 493, 495, 504, 505, 507, 508, 513, 552, 553, 555, 557, 559], "moreov": [377, 458, 462, 491], "morpholog": [114, 374, 429, 449, 475, 491, 507], "morphologi": [50, 52, 114, 372, 374, 384, 400, 417, 419, 431, 439, 445, 446, 447, 450, 458, 462, 509], "mosaic": 367, "most": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 79, 83, 86, 90, 112, 119, 360, 361, 362, 364, 366, 367, 368, 369, 372, 373, 374, 375, 377, 378, 379, 380, 381, 383, 384, 385, 386, 387, 388, 391, 393, 394, 412, 419, 420, 422, 423, 426, 427, 439, 440, 448, 452, 454, 458, 460, 461, 462, 463, 464, 470, 471, 475, 481, 483, 493, 494, 495, 500, 508, 552, 554, 555, 558], "mostli": [56, 67, 290, 361, 362, 367, 368, 369, 370, 375, 377, 380, 381, 382, 385, 386, 388, 390, 391, 412, 420, 458, 462, 473, 481, 557, 559], "motion": [45, 294], "motiv": [169, 366, 368, 369, 375, 378, 380, 390, 466, 495], "move": [270, 366, 367, 368, 369, 372, 375, 380, 381, 382, 385, 390, 396, 402, 403, 405, 406, 407, 408, 412, 413, 417, 418, 420, 421, 422, 423, 437], "move_axi": 426, "movement": 387, "mpatch": 448, "mpg": 65, "mpi": 65, "mpl": 361, "mpl_check_plot": 361, "mpl_kwarg": [434, 444, 448], "mpl_normal": [351, 352], "mpl_plot_check": 361, "mpl_style": 420, "msg": [430, 437, 439, 442, 444, 450, 454, 470], "msh": [440, 458, 462], "msh15": 473, "mst": 470, "mu": [26, 272, 274, 275, 354, 389, 457, 468, 499, 500, 557], "mu_": [275, 281, 556, 557, 558], "mu_background": 555, "mu_bkg": [100, 105, 272, 284, 287, 397, 555, 557], "mu_off": 557, "mu_on": [275, 281, 557], "mu_sig": [274, 284, 287, 556, 557], "mu_x": 557, "much": [184, 361, 367, 372, 375, 377, 380, 381, 405, 412, 437, 442, 448, 455, 468, 471, 481, 514], "mul": [26, 457, 466, 521, 527, 530, 532, 535, 540], "multi": [83, 86, 182, 194, 370, 375, 389, 406, 409, 413, 420, 429, 432, 438, 449, 459, 460, 461, 466, 467, 471, 475, 491, 493, 495, 507, 552, 553, 554], "multidimension": [367, 377, 389, 427, 475, 500, 553], "multinorm": 379, "multipl": [19, 20, 26, 78, 83, 86, 87, 96, 103, 107, 109, 111, 127, 132, 157, 183, 184, 186, 192, 195, 196, 200, 205, 206, 207, 208, 209, 210, 211, 212, 213, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 230, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 256, 257, 258, 259, 260, 261, 262, 361, 362, 367, 370, 373, 374, 375, 377, 379, 382, 383, 385, 389, 393, 402, 409, 410, 412, 420, 426, 427, 436, 442, 458, 459, 462, 463, 464, 466, 471, 493, 507, 531, 540, 552, 553, 554, 555, 560], "multipli": [19, 20, 26, 119, 205, 206, 208, 209, 211, 212, 213, 215, 216, 217, 220, 221, 223, 225, 227, 228, 230, 233, 234, 235, 236, 238, 239, 240, 244, 245, 246, 249, 250, 251, 252, 253, 254, 256, 257, 259, 260, 261, 268, 282, 285, 290, 455, 457, 466, 521, 557], "multiprocess": [13, 88, 120, 121, 124, 127, 159, 305, 310, 311, 406, 426, 427], "multithread": 13, "multivari": 379, "multivariategaussianprior": 389, "multiwavelength": 213, "muon": [84, 467], "muoneff": [84, 467], "mur": [26, 457], "must": [19, 20, 26, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 78, 79, 83, 84, 86, 96, 97, 100, 101, 105, 106, 110, 119, 124, 127, 132, 133, 140, 151, 159, 163, 165, 170, 177, 181, 182, 183, 184, 185, 186, 187, 188, 191, 192, 193, 194, 195, 196, 205, 206, 207, 208, 209, 210, 211, 212, 213, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 230, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 256, 257, 258, 259, 260, 261, 262, 279, 280, 290, 308, 356, 361, 366, 372, 373, 376, 385, 386, 387, 388, 430, 434, 439, 459, 462, 464, 465, 466, 470, 471, 480, 481, 495, 507, 554], "mutablemap": 190, "mutablesequ": [87, 95, 233], "mutipl": 393, "mutltipl": 364, "my": [361, 383, 384, 392, 446, 447, 459, 466], "my_custom_model": 466, "my_flux_map": 385, "my_ob": 85, "my_obs_filt": 85, "my_sourc": 383, "mybind": [391, 420], "myconfig": [11, 555], "mycustomgaussianmodel": [384, 466], "mycustomprior": 468, "mycustomspectralmodel": [243, 466], "n": [19, 20, 51, 78, 83, 86, 117, 119, 181, 182, 183, 184, 186, 188, 189, 192, 194, 195, 196, 201, 203, 263, 270, 361, 364, 375, 378, 392, 394, 418, 450, 453, 457, 458, 460, 463, 465, 468, 470, 471, 472, 473, 478, 500, 507, 508, 510, 513, 514, 554, 556, 558], "n_": [97, 104, 275, 281, 491, 556, 557, 558], "n_0": [221, 528], "n_bad": 471, "n_bin": 459, "n_bkg": [272, 274, 557], "n_dof": [117, 119, 493], "n_event": [183, 184, 186, 192, 195, 196, 210, 218, 222, 224, 225, 226, 241, 247, 259, 262, 374], "n_event_bunch": [98, 103], "n_events_bkg": 374, "n_fit_bin": [442, 454, 459, 465], "n_free_paramet": 270, "n_input": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 48, 49], "n_ism": [43, 44, 45, 52, 488, 489], "n_job": [16, 88, 120, 121, 124, 127, 159, 310, 426, 435, 439, 440, 442, 448, 462, 479], "n_jobs_default": [88, 120, 121, 124, 127, 159], "n_model": [70, 73], "n_ob": [437, 446, 454], "n_observ": 555, "n_off": [100, 105, 274, 283, 284, 287, 556, 557], "n_off_posit": 436, "n_off_region": [171, 436], "n_on": [272, 274, 275, 281, 283, 284, 287, 397, 555, 556, 557], "n_output": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 48, 49], "n_point": [19, 20, 26, 205, 206, 209, 210, 213, 215, 216, 217, 218, 221, 222, 224, 225, 226, 227, 228, 230, 234, 236, 238, 239, 240, 241, 244, 247, 249, 251, 252, 253, 254, 257, 259, 261, 262, 389, 549], "n_scale": 112, "n_sig": [272, 274, 455, 557], "n_sig_matching_signific": [272, 274], "n_sigma": [69, 71, 72, 74, 116, 117, 118, 119, 120, 121, 124, 125, 126, 127, 270, 272, 274, 430, 448, 458, 459, 479, 481, 493], "n_sigma_sensit": [116, 117, 118, 119], "n_sigma_ul": [69, 71, 72, 74, 116, 117, 118, 119, 120, 121, 124, 125, 127, 448, 452, 458, 459, 479, 481, 493], "n_sourc": [45, 485], "n_spatial_ax": 187, "n_submodel": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40], "n_tel": 86, "n_time_bin": 453, "nachiketa": [418, 419], "naima": [234, 360, 378, 379, 380, 381, 384, 403, 429, 430, 431, 434, 435, 436, 437, 438, 439, 440, 442, 443, 444, 445, 446, 447, 448, 452, 453, 454, 455, 457, 458, 459, 460, 462, 463, 464, 465, 466, 468, 470, 471, 472, 473, 479, 480, 481, 495, 509, 540, 541], "naimamodel": [403, 406, 408], "naimaspectralmodel": [243, 384, 412, 466, 495, 531], "nakashima": 404, "name": [15, 16, 19, 20, 26, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 48, 49, 52, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 86, 89, 91, 94, 95, 96, 97, 99, 100, 101, 102, 104, 105, 106, 109, 110, 111, 117, 118, 119, 120, 121, 124, 125, 128, 135, 137, 138, 139, 140, 141, 142, 143, 144, 145, 147, 148, 150, 151, 152, 153, 154, 155, 156, 163, 164, 173, 174, 179, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 230, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 256, 257, 258, 259, 260, 261, 262, 270, 288, 289, 311, 340, 341, 356, 362, 364, 367, 370, 371, 373, 374, 375, 376, 379, 380, 383, 384, 385, 387, 388, 389, 390, 402, 403, 404, 405, 406, 407, 408, 409, 412, 421, 423, 424, 426, 430, 431, 432, 434, 435, 436, 437, 438, 439, 440, 442, 443, 444, 445, 446, 447, 448, 450, 452, 453, 454, 455, 458, 459, 460, 461, 462, 463, 465, 466, 467, 468, 470, 471, 472, 473, 479, 480, 481, 483, 493, 495, 499, 502, 504, 505, 507, 508, 509, 511, 512, 513, 514, 515, 516, 517, 518, 519, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 542, 543, 544, 545, 546, 547, 548, 549, 550, 557], "name1": 460, "name2": 460, "name_err": [120, 121, 124, 125], "name_scan": [120, 121, 124, 125], "name_substr": [211, 233, 465], "name_ul": [120, 121, 124, 125], "namedtupl": 361, "nameerror": 361, "namespac": [6, 16, 80, 99, 118, 361, 380, 382, 405, 408, 418, 466, 484, 559], "namibia": 473, "nan": [19, 20, 26, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 65, 83, 86, 97, 117, 119, 163, 181, 182, 183, 184, 186, 192, 195, 196, 201, 203, 205, 206, 209, 213, 215, 216, 217, 221, 227, 228, 230, 234, 236, 238, 239, 240, 244, 249, 251, 252, 253, 254, 257, 261, 361, 384, 389, 434, 435, 436, 439, 440, 442, 443, 448, 450, 452, 458, 459, 461, 462, 463, 464, 465, 466, 479, 480, 481, 531, 540], "nan_to_num": [95, 97, 100, 104, 105, 141, 142, 148, 153, 156, 184, 192, 196, 258], "nansum": [183, 184, 186, 195, 196], "nasa": [58, 60, 61, 63, 140, 188, 381, 390, 534], "nativ": [83, 86, 189, 373, 378, 412, 463], "natur": [83, 86, 361, 367, 384, 387, 466, 529], "nauroi": [287, 554], "naurois2012": 554, "navarro": 483, "navig": [420, 422], "naxi": 463, "naxis1": 463, "naxis2": 463, "naxis3": 463, "naxis4": 463, "nbin": [16, 106, 110, 121, 143, 145, 151, 153, 185, 188, 193, 196, 322, 323, 377, 430, 434, 435, 436, 439, 440, 442, 443, 444, 446, 447, 448, 452, 453, 455, 459, 461, 462, 463, 466, 471, 472, 473, 479, 499, 502, 504, 505, 508], "nbin_per_decad": 188, "nbstripout": 369, "ncol": [137, 138, 183, 184, 186, 192, 195, 196, 354, 358, 431, 434, 438, 440, 442, 444, 455, 459, 460, 463, 464, 504, 521], "ncp": 451, "nd": [183, 184, 186, 192, 195, 196, 256, 257, 382, 463, 508], "ndarrai": [17, 18, 21, 22, 24, 25, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 83, 86, 87, 96, 112, 120, 124, 137, 138, 139, 140, 141, 144, 145, 147, 150, 151, 152, 153, 154, 156, 169, 181, 182, 183, 184, 185, 186, 187, 188, 189, 191, 192, 193, 194, 195, 196, 199, 201, 202, 203, 204, 211, 235, 236, 261, 271, 272, 273, 274, 275, 276, 277, 279, 280, 281, 282, 285, 286, 287, 290, 301, 302, 303, 312, 317, 319, 350, 354, 355, 361, 459, 463, 481, 507, 508], "nddata": [403, 406], "nddataarrai": [404, 418, 419], "ndecad": [17, 18, 21, 22, 23, 24, 25, 27, 266], "ndim": [97, 104, 106, 110, 138, 140, 143, 182, 189, 194, 436, 439, 444, 448, 459, 461, 462, 463, 470, 471, 481, 493, 508], "ndimag": [196, 375], "ndmin": 290, "ne": 373, "nearest": [26, 127, 137, 138, 139, 140, 143, 144, 145, 147, 150, 152, 154, 155, 163, 183, 184, 186, 188, 192, 195, 196, 302, 414, 421, 423, 463, 493, 495, 507], "nearli": [361, 412, 431], "nebula": [50, 264, 270, 406, 434, 435, 436, 440, 443, 444, 445, 452, 460, 464, 466, 468, 471, 472, 473, 479, 480, 481, 486, 508, 554], "necess": [385, 468], "necessari": [16, 80, 99, 118, 364, 371, 376, 387, 414, 431, 434, 436, 437, 440, 446, 447, 450, 453, 454, 462, 463, 465, 466, 480, 491, 492, 495], "necessarili": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 78, 376, 439], "need": [11, 16, 19, 20, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 80, 81, 83, 85, 86, 89, 96, 99, 100, 116, 118, 119, 141, 142, 153, 155, 156, 191, 263, 264, 290, 360, 361, 362, 366, 367, 368, 369, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 383, 385, 386, 387, 388, 391, 392, 397, 401, 402, 403, 420, 422, 427, 431, 435, 437, 438, 439, 440, 444, 446, 447, 451, 453, 454, 460, 461, 463, 464, 465, 466, 467, 470, 472, 479, 481, 491, 504, 506, 507, 555, 559], "need_upd": 412, "neg": [19, 20, 26, 83, 86, 117, 119, 120, 121, 124, 125, 127, 205, 206, 209, 213, 215, 216, 217, 221, 227, 228, 230, 234, 236, 238, 239, 240, 244, 249, 251, 252, 253, 254, 257, 260, 261, 272, 274, 362, 409, 427, 468, 493, 557, 558], "neglect": [122, 169, 430, 462, 493, 558], "neighbor": [144, 152, 154, 414, 421], "neighbour": [302, 516], "neither": [91, 169, 378, 386], "neldermead": 200, "nep": [366, 386], "neraest": 184, "nest": [15, 182, 183, 184, 234, 270, 290, 329, 426, 471, 506, 557], "nested_model": 234, "net": [26, 83, 86, 434], "neutrino": 52, "neutron": 36, "never": [358, 360, 361, 364, 367, 371, 375, 383, 472], "new": [16, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 78, 79, 80, 82, 83, 84, 86, 87, 96, 97, 99, 100, 104, 105, 117, 118, 119, 120, 124, 135, 137, 138, 139, 140, 143, 145, 147, 150, 155, 166, 167, 171, 181, 182, 183, 184, 185, 186, 187, 188, 189, 191, 192, 193, 194, 195, 196, 211, 233, 248, 258, 290, 314, 339, 346, 364, 366, 367, 368, 369, 370, 371, 373, 374, 375, 378, 379, 380, 381, 382, 383, 384, 386, 387, 388, 390, 391, 392, 393, 395, 396, 397, 398, 399, 400, 413, 416, 442, 451, 458, 459, 463, 465, 466, 492, 493, 495, 540, 554], "new_attribut": 361, "new_axi": 135, "new_dataset_nam": [211, 233], "new_datasets_nam": [19, 20, 26, 205, 206, 207, 208, 209, 210, 212, 213, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 230, 232, 234, 235, 236, 237, 238, 239, 240, 241, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 256, 257, 258, 259, 260, 261, 262], "new_flux_map": 385, "new_funct": 361, "new_input": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40], "new_model": 540, "new_nam": [83, 86, 181, 182, 183, 184, 186, 187, 188, 191, 192, 194, 195, 196], "new_ob": [84, 495], "new_observ": 87, "newer": [378, 391, 402, 421], "newli": [406, 407, 408], "next": [83, 86, 97, 361, 362, 366, 377, 381, 382, 386, 389, 390, 418, 419, 430, 442, 445, 446, 448, 450, 458, 459, 462, 463, 466, 467, 468, 471], "nfcn": 460, "nfev": [96, 200, 431, 432, 434, 435, 436, 442, 443, 444, 455, 460, 471, 479, 480], "nfw": [25, 27, 483], "nfwprofil": 457, "ni": 361, "nice": [361, 366, 372, 378, 380, 388, 404, 412, 438, 442, 458, 555], "nicer": [361, 397, 460, 481], "nieto": [409, 412, 414, 415, 423, 425, 426, 427], "nieva": 423, "night": [376, 453], "nightli": [393, 452], "nightwise_lc": 452, "nigl": 462, "nigro": [409, 412, 414, 420, 421, 423, 426], "niter": [117, 119, 127, 438], "nlfkk57f": 466, "nmcid": 415, "nn": 472, "noah": [389, 427], "node": [19, 20, 26, 153, 156, 185, 188, 205, 206, 209, 213, 215, 216, 217, 221, 227, 228, 230, 234, 235, 236, 238, 239, 240, 244, 249, 251, 252, 253, 254, 257, 261, 403, 460, 461, 463, 470, 471, 515, 532], "node_typ": [185, 188, 193, 446, 447, 461, 471], "noeth": [409, 410], "nois": [273, 279, 379, 554], "noisi": 470, "non": [16, 80, 83, 86, 95, 97, 99, 100, 104, 105, 109, 111, 117, 118, 119, 127, 137, 138, 139, 140, 141, 142, 143, 144, 145, 147, 148, 150, 152, 153, 154, 155, 156, 165, 169, 181, 182, 183, 184, 186, 187, 188, 189, 191, 192, 193, 194, 195, 196, 258, 290, 351, 352, 354, 356, 367, 372, 375, 379, 381, 382, 388, 402, 406, 407, 408, 412, 420, 423, 424, 426, 427, 431, 471, 475, 491, 495, 506, 507, 531, 554], "none": [16, 17, 19, 20, 21, 22, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 50, 51, 52, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 91, 94, 95, 96, 97, 98, 99, 100, 103, 104, 105, 107, 108, 112, 114, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 131, 135, 137, 138, 139, 140, 141, 142, 143, 144, 145, 147, 148, 150, 151, 152, 153, 154, 155, 156, 158, 159, 160, 163, 165, 166, 167, 168, 169, 170, 171, 173, 174, 175, 176, 178, 179, 180, 181, 182, 183, 184, 186, 187, 188, 189, 190, 191, 192, 194, 195, 196, 197, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 230, 231, 233, 234, 235, 236, 237, 238, 239, 240, 241, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 256, 257, 258, 259, 260, 261, 262, 270, 272, 273, 274, 287, 288, 290, 293, 298, 302, 310, 311, 312, 314, 317, 318, 319, 320, 328, 330, 336, 344, 348, 349, 350, 354, 355, 356, 357, 358, 361, 373, 375, 378, 385, 388, 389, 414, 425, 426, 431, 432, 434, 435, 437, 438, 442, 443, 444, 446, 447, 448, 450, 453, 454, 455, 457, 458, 459, 462, 463, 465, 466, 468, 471, 479, 483, 491, 507, 512, 513, 514, 555], "nonetyp": [80, 99, 118], "nonposit": [19, 20, 26, 205, 206, 209, 213, 215, 216, 217, 221, 227, 228, 230, 234, 236, 238, 239, 240, 244, 249, 251, 252, 253, 254, 257, 261], "nonposx": [19, 20, 26, 205, 206, 209, 213, 215, 216, 217, 221, 227, 228, 230, 234, 236, 238, 239, 240, 244, 249, 251, 252, 253, 254, 257, 261, 412], "nonstopmod": 362, "nonzero": 39, "nooverlaperror": 425, "noqa": [19, 20, 120, 140, 176, 187, 188, 194, 213, 265, 358], "nor": [91, 169, 371, 382, 386, 390], "norm": [19, 20, 26, 116, 117, 119, 120, 121, 124, 127, 133, 134, 160, 201, 202, 204, 205, 206, 208, 209, 210, 212, 213, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 230, 234, 235, 236, 237, 238, 239, 240, 241, 244, 245, 246, 247, 249, 251, 252, 253, 254, 257, 259, 260, 261, 262, 354, 372, 383, 385, 389, 406, 407, 409, 412, 427, 429, 434, 439, 440, 442, 443, 445, 446, 447, 448, 450, 453, 454, 455, 457, 458, 459, 460, 471, 479, 480, 481, 483, 493, 502, 509, 514, 520, 521, 528, 540, 541, 549, 557], "norm_0": [515, 532], "norm_1": [515, 532], "norm_2": [515, 532], "norm_3": [515, 532], "norm_4": 532, "norm_5": 532, "norm_err": [116, 117, 119, 121, 127, 133, 385, 448, 459, 493], "norm_errn": [117, 119, 458, 481, 493], "norm_errp": [117, 119, 458, 481, 493], "norm_max": [120, 121, 124], "norm_min": [120, 121, 124], "norm_n_valu": [120, 121, 124], "norm_only_chang": 424, "norm_paramet": [201, 202, 203, 204], "norm_prior": 389, "norm_scan": [117, 385, 434, 435, 493], "norm_sensit": [117, 119], "norm_ul": [117, 119, 385, 448, 458, 459, 481, 493], "norm_valu": [120, 121, 124], "norma": [33, 38], "normal": [42, 96, 97, 100, 104, 105, 120, 121, 122, 124, 131, 137, 138, 139, 140, 142, 143, 144, 145, 147, 150, 151, 152, 153, 154, 155, 156, 160, 183, 184, 186, 192, 193, 195, 196, 219, 235, 236, 239, 258, 260, 263, 290, 351, 352, 361, 362, 366, 367, 371, 372, 375, 379, 385, 401, 405, 414, 440, 446, 452, 453, 455, 462, 463, 464, 465, 466, 471, 480, 481, 507, 512, 513, 514, 517, 518, 519, 540, 554, 556, 557], "normalis": [65, 76, 124, 137, 138, 139, 140, 143, 145, 147, 150, 151, 155, 160, 180, 183, 184, 186, 192, 195, 196, 235, 236, 248, 359, 435, 439, 440, 454, 464, 465, 466, 471, 479], "normed_templ": 466, "normspectralmodel": [211, 233, 384, 409, 425, 427, 466, 502], "north": [212, 220, 223, 512], "notat": [409, 497, 499, 505, 558], "note": [15, 16, 19, 20, 26, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 74, 78, 79, 80, 82, 83, 86, 89, 96, 97, 98, 99, 103, 112, 118, 119, 124, 127, 140, 145, 153, 155, 165, 176, 194, 198, 200, 201, 205, 206, 208, 209, 212, 213, 215, 216, 217, 218, 220, 221, 222, 223, 224, 225, 226, 227, 228, 230, 234, 236, 237, 238, 239, 240, 241, 244, 245, 246, 247, 249, 251, 252, 253, 254, 257, 259, 260, 261, 279, 280, 290, 311, 336, 352, 358, 360, 363, 364, 366, 369, 374, 375, 378, 381, 385, 386, 387, 389, 390, 391, 394, 400, 402, 422, 424, 426, 430, 431, 434, 435, 436, 438, 439, 442, 445, 447, 451, 454, 455, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 468, 470, 471, 472, 491, 493, 495, 508, 517, 518, 529, 557, 558, 559], "notebook": [83, 86, 326, 364, 365, 370, 371, 375, 376, 377, 378, 379, 381, 391, 393, 394, 395, 398, 401, 402, 403, 404, 406, 407, 408, 410, 412, 414, 418, 419, 420, 421, 422, 427, 430, 431, 432, 434, 435, 436, 437, 438, 439, 440, 442, 443, 444, 445, 446, 447, 448, 450, 451, 452, 453, 454, 455, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 470, 471, 472, 473, 475, 477, 479, 480, 481, 494, 495, 496, 509, 511, 512, 513, 514, 515, 516, 517, 518, 519, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 542, 543, 544, 545, 546, 547, 548, 549, 550, 555], "noth": [314, 378, 468], "notic": [367, 460, 475], "notimplementederror": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40], "nov": [368, 373, 378, 379, 381, 385, 399, 423], "novemb": [370, 399, 409, 410, 411, 412], "now": [16, 78, 80, 84, 94, 99, 117, 118, 119, 193, 234, 361, 364, 366, 367, 368, 371, 373, 374, 375, 377, 378, 379, 380, 381, 382, 385, 387, 388, 389, 396, 401, 402, 403, 404, 405, 406, 407, 408, 409, 412, 413, 414, 415, 419, 420, 421, 422, 423, 424, 425, 426, 427, 430, 431, 434, 435, 436, 437, 439, 440, 442, 443, 445, 446, 447, 448, 450, 452, 453, 454, 455, 459, 460, 463, 464, 465, 466, 467, 468, 470, 471, 472, 473, 479, 480, 481, 492, 493, 504, 542, 546, 547, 548, 555, 557, 558, 559], "np": [79, 83, 86, 106, 110, 112, 119, 142, 183, 184, 186, 192, 195, 196, 263, 361, 362, 372, 373, 376, 384, 385, 389, 423, 430, 434, 437, 438, 440, 442, 444, 446, 448, 450, 451, 453, 454, 455, 457, 458, 460, 461, 462, 463, 464, 466, 467, 468, 472, 487, 488, 489, 493, 495, 507, 508, 512, 513, 515, 540, 548], "npanel": 348, "npix": [182, 191, 194, 195, 196, 434, 444, 461, 471, 504, 508, 511, 515], "npix_max": 182, "npoint": [273, 460], "npred": [97, 100, 104, 105, 116, 117, 119, 120, 121, 124, 125, 127, 258, 276, 372, 373, 374, 383, 385, 400, 402, 409, 412, 418, 420, 446, 448, 458, 459, 468, 471, 491, 493, 557], "npred_background": [97, 100, 104, 105, 117, 119, 409, 436, 437, 448, 459, 493, 557], "npred_background_min": 136, "npred_excess": [116, 117, 119, 121, 127, 134, 440, 448, 455, 493], "npred_excess_err": [117, 119], "npred_excess_errn": [117, 119], "npred_excess_errp": [117, 119], "npred_excess_ref": [117, 119], "npred_excess_ul": [117, 119], "npred_min": 136, "npred_off": [100, 105, 557], "npred_sig": [97, 100, 104, 105, 373], "npred_sign": [97, 100, 104, 105, 357, 412, 426, 459, 557], "npred_signal_min": 136, "npred_sourc": 459, "nrow": [431, 434, 460, 521], "nside": [182, 183, 184, 423, 471, 506], "nside2resol": 184, "nside_til": [182, 184], "nsou": 438, "nstep": 376, "nu": [19, 26], "nu_e": [26, 457], "nu_mu": [26, 457], "nu_tau": [26, 457], "nuisanc": [434, 460, 554, 558], "null": [117, 119, 120, 121, 124, 125, 270, 272, 274, 435, 439, 440, 442, 445, 466, 479, 493, 511, 512, 513, 514, 515, 516, 517, 518, 519, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 542, 543, 544, 545, 546, 547, 548, 549, 550, 557], "null_valu": [125, 270, 448], "nullabl": [83, 86], "num": 79, "numba": 378, "number": [11, 17, 18, 19, 20, 21, 22, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 35, 36, 37, 39, 40, 42, 45, 46, 47, 65, 70, 73, 78, 79, 81, 82, 83, 86, 87, 88, 89, 95, 97, 98, 100, 103, 104, 105, 107, 112, 116, 117, 118, 119, 120, 121, 124, 125, 126, 127, 137, 138, 139, 140, 142, 143, 144, 145, 147, 150, 152, 153, 154, 155, 156, 159, 160, 163, 166, 171, 181, 182, 183, 184, 185, 186, 187, 188, 189, 191, 192, 193, 194, 195, 196, 200, 201, 202, 204, 205, 206, 208, 209, 210, 211, 212, 213, 215, 216, 217, 218, 220, 221, 222, 223, 224, 225, 226, 227, 228, 230, 233, 234, 236, 237, 238, 239, 240, 241, 244, 245, 246, 247, 249, 251, 252, 253, 254, 257, 259, 260, 261, 262, 266, 270, 272, 273, 274, 286, 290, 308, 310, 311, 312, 313, 314, 317, 318, 319, 320, 322, 323, 348, 354, 365, 366, 367, 370, 372, 373, 374, 375, 376, 380, 382, 385, 387, 388, 390, 397, 402, 412, 414, 415, 416, 421, 422, 423, 426, 427, 430, 431, 434, 435, 436, 437, 439, 440, 442, 444, 445, 446, 447, 450, 451, 452, 453, 454, 455, 457, 458, 459, 462, 463, 464, 466, 467, 470, 471, 472, 473, 479, 480, 481, 485, 491, 493, 495, 502, 504, 507, 508, 554, 555, 556, 557, 558], "number_of_column": [83, 86], "numer": [17, 18, 19, 20, 21, 22, 24, 25, 26, 27, 83, 86, 119, 188, 201, 205, 206, 208, 209, 212, 213, 215, 216, 217, 218, 220, 221, 222, 223, 224, 225, 226, 227, 228, 230, 234, 236, 237, 238, 239, 240, 241, 244, 245, 246, 247, 249, 251, 252, 253, 254, 257, 259, 260, 261, 262, 290, 360, 361, 374, 379, 394, 412, 430, 437, 439, 442, 444, 450, 454, 463, 470], "numpi": [19, 20, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 79, 83, 86, 87, 96, 106, 110, 112, 119, 120, 124, 137, 138, 139, 140, 142, 143, 144, 145, 147, 150, 151, 152, 154, 155, 181, 182, 183, 184, 186, 191, 192, 194, 195, 196, 198, 199, 201, 202, 204, 205, 208, 209, 211, 212, 213, 215, 216, 217, 218, 220, 221, 222, 223, 224, 225, 226, 227, 228, 230, 233, 237, 238, 239, 240, 241, 244, 245, 246, 247, 248, 249, 252, 253, 254, 259, 260, 272, 274, 290, 314, 319, 355, 360, 361, 362, 364, 368, 372, 374, 378, 379, 380, 387, 389, 397, 398, 405, 406, 409, 417, 418, 419, 421, 423, 424, 425, 427, 430, 431, 434, 435, 436, 437, 438, 439, 440, 442, 443, 444, 445, 446, 447, 448, 450, 451, 452, 453, 454, 455, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 470, 471, 472, 473, 475, 479, 480, 481, 487, 488, 489, 493, 495, 507, 508, 512, 513, 515, 540, 548], "numpoint": [200, 460], "numpy121": 364, "nupeak_ob": 481, "nutshel": 559, "n\u00f6the": [412, 414, 415], "o": [65, 78, 83, 86, 96, 190, 361, 370, 375, 378, 382, 385, 392, 393, 395, 404, 412, 415, 418, 419, 420, 426, 430, 431, 434, 438, 444, 451, 452, 453, 454, 463, 467, 468, 470, 495, 554, 555], "o2": 495, "ob": [40, 78, 79, 84, 85, 86, 87, 91, 153, 163, 288, 289, 373, 374, 377, 378, 383, 397, 415, 416, 425, 430, 431, 434, 437, 438, 444, 446, 450, 453, 454, 455, 462, 467, 470, 471, 472, 473, 477, 480, 492, 495, 500, 502, 504, 505], "obei": 507, "obj": [16, 80, 99, 118, 436], "object": [6, 15, 16, 19, 20, 23, 26, 28, 29, 30, 31, 32, 34, 35, 36, 37, 39, 40, 50, 51, 52, 54, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 89, 95, 96, 97, 98, 99, 100, 104, 105, 117, 118, 119, 122, 123, 124, 128, 129, 130, 133, 135, 137, 138, 139, 140, 141, 142, 143, 144, 145, 147, 148, 150, 151, 152, 153, 154, 155, 156, 157, 159, 167, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 256, 257, 258, 259, 260, 261, 262, 270, 272, 274, 290, 294, 298, 299, 302, 310, 312, 314, 320, 323, 335, 336, 337, 338, 343, 348, 354, 356, 357, 358, 367, 372, 373, 374, 375, 376, 377, 379, 380, 381, 382, 385, 387, 388, 393, 397, 403, 404, 406, 407, 408, 409, 412, 414, 419, 420, 421, 423, 426, 427, 430, 431, 432, 434, 435, 436, 437, 438, 443, 445, 448, 450, 451, 452, 453, 454, 459, 460, 462, 463, 464, 465, 466, 468, 470, 471, 473, 479, 480, 481, 485, 490, 491, 492, 493, 501, 504, 506, 507, 508, 552, 554, 555, 559], "obs_": 434, "obs_clust": [87, 467], "obs_col": 444, "obs_con": [16, 435, 439, 440, 442, 479], "obs_copi": 84, "obs_fil": [16, 435, 439, 440, 442, 479], "obs_filenam": 472, "obs_filt": [84, 85], "obs_id": [16, 78, 83, 84, 85, 86, 91, 136, 288, 289, 371, 373, 383, 388, 397, 431, 434, 435, 436, 437, 439, 440, 442, 443, 444, 446, 447, 452, 453, 454, 460, 462, 467, 470, 472, 473, 477, 479, 480, 504], "obs_id_uniqu": 83, "obs_index": 78, "obs_info": [84, 99, 388], "obs_list": [420, 422], "obs_list_vela": 455, "obs_mod": 90, "obs_muoneff": 467, "obs_po": [41, 293], "obs_tabl": [78, 86, 91, 288, 289, 414, 444, 446, 453, 462, 467, 470, 472, 473, 477, 480, 504], "obs_table_filenam": 78, "obs_tim": [16, 435, 439, 440, 442, 479], "obs_time_src": 462, "obs_zenith": 467, "obscor": 427, "observ": [6, 15, 16, 41, 78, 79, 81, 82, 83, 85, 86, 88, 89, 90, 91, 96, 97, 98, 99, 100, 103, 104, 105, 107, 153, 158, 159, 160, 163, 164, 165, 166, 168, 169, 170, 173, 174, 175, 176, 178, 179, 180, 210, 213, 218, 222, 224, 225, 226, 241, 247, 259, 262, 275, 281, 287, 289, 298, 319, 365, 367, 373, 374, 375, 376, 377, 381, 383, 385, 388, 393, 402, 406, 407, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 426, 427, 429, 430, 431, 436, 437, 439, 440, 442, 443, 450, 451, 454, 455, 460, 468, 469, 470, 472, 473, 475, 477, 483, 491, 492, 495, 498, 500, 502, 504, 505, 531, 554, 555, 556, 557], "observation_clust": [429, 467, 469], "observation_dead_time_fract": [79, 84], "observation_list": 87, "observation_live_time_dur": [79, 84], "observation_time_dur": [79, 84], "observation_time_start": 79, "observation_time_stop": 79, "observationcheck": 421, "observationcta": 371, "observationeventsampl": 427, "observationfilt": [84, 371, 376, 401, 422], "observationlist": [371, 422], "observationmetadata": 388, "observations_list": 87, "observationsconfig": 16, "observationseventsampl": 427, "observationssummari": 406, "observationstat": [401, 406], "observationt": [78, 374, 375, 423, 467, 472, 480], "observationtablecheck": 421, "observationtablesummari": 418, "observatori": [57, 59, 62, 78, 79, 81, 84, 89, 374, 388, 390, 393, 413, 470, 472, 473, 490, 495], "observatory_earth_loc": [79, 84], "observatory_loc": [388, 414, 430, 437, 446, 447, 450, 454], "obsinfometadata": 99, "obstim": [81, 89, 176, 559], "obtain": [81, 97, 100, 103, 128, 278, 371, 376, 378, 379, 385, 422, 434, 435, 436, 440, 446, 447, 451, 453, 460, 463, 464, 468, 479, 481, 491, 495, 499, 500, 554, 556, 557], "obviou": [373, 380, 381, 382, 388], "obvious": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 483], "occur": [183, 184, 186, 195, 196, 320, 361, 381, 382, 386, 471], "occurr": [87, 95, 187, 202, 204, 211, 233], "oct": [369, 371, 372, 376, 378, 381, 387], "octob": 370, "odd": [194, 196], "odd_npix": [194, 196], "odot": [28, 35, 39, 40, 52], "off": [97, 100, 102, 104, 105, 116, 158, 164, 165, 168, 171, 180, 274, 287, 358, 359, 364, 367, 373, 375, 376, 377, 406, 412, 414, 416, 426, 430, 431, 435, 436, 440, 444, 452, 453, 455, 459, 460, 462, 468, 491, 504, 505, 554, 556, 557, 558], "off_2": [100, 105], "off_ev": 455, "off_patch": 455, "off_phas": [164, 455], "off_phase_rang": 455, "offdatabackgroundmak": 417, "offer": [117, 364, 372, 387, 388, 393, 394, 421, 436, 460, 462, 466, 495], "offici": [387, 496, 555], "offlin": [83, 86], "offset": [79, 91, 107, 137, 138, 139, 140, 143, 144, 145, 147, 150, 152, 153, 154, 155, 156, 159, 163, 169, 170, 175, 178, 183, 184, 186, 188, 192, 195, 196, 361, 367, 375, 397, 406, 416, 418, 420, 425, 426, 427, 430, 436, 437, 439, 442, 443, 444, 450, 455, 461, 462, 467, 470, 473, 480, 492, 500, 502, 505], "offset2": 79, "offset_axi": [143, 145, 150, 155], "offset_band": 79, "offset_from_median": 79, "offset_index": 150, "offset_max": [16, 79, 159, 169, 175, 178, 435, 439, 440, 442, 444, 450, 455, 462, 479, 480, 502, 505], "offset_min": 79, "often": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 128, 264, 351, 352, 361, 366, 375, 376, 377, 379, 419, 430, 431, 435, 439, 440, 443, 444, 450, 459, 460, 462, 464, 479, 480, 491, 554], "ogip": [90, 101, 102, 105, 140, 185, 187, 188, 191, 192, 193, 373, 376, 419, 434, 443, 491, 499, 508], "ogip_column": 192, "ogipdatasetread": 105, "ogipdatasetwrit": [105, 425, 427], "ok": [361, 375, 460], "old": [187, 346, 361, 366, 369, 373, 377, 378, 403, 404, 419, 420, 421, 451], "old_attribut": 361, "older": [368, 378, 394, 419, 458], "oldest": 381, "olga": [417, 418], "olivera": [409, 412, 414, 415, 423, 425, 426, 427], "omega": [19, 20, 23, 247, 263, 512, 548], "omit": [127, 362, 442, 470, 555], "omp": 381, "on_circl": 504, "on_ellipse_annulu": 504, "on_ev": 455, "on_patch": 455, "on_phas": [164, 455], "on_phase_rang": 455, "on_posit": 180, "on_radii": 430, "on_radiu": [444, 455], "on_rectangl": 504, "on_region": [16, 97, 100, 166, 430, 431, 434, 435, 436, 437, 439, 440, 442, 444, 446, 447, 452, 453, 455, 459, 479, 504], "on_region_radiu": [430, 434, 437, 446, 447, 453], "onc": [83, 86, 97, 194, 361, 364, 366, 371, 372, 375, 376, 377, 381, 382, 383, 385, 386, 390, 391, 392, 436, 453, 455, 462, 465, 472, 475, 492, 495, 555], "one": [16, 19, 20, 26, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 59, 68, 80, 83, 85, 86, 87, 88, 90, 94, 97, 99, 100, 103, 104, 105, 107, 112, 116, 117, 118, 119, 120, 121, 122, 124, 125, 127, 132, 134, 137, 138, 139, 140, 141, 142, 143, 144, 145, 147, 148, 150, 151, 152, 153, 154, 155, 156, 159, 163, 165, 181, 182, 183, 184, 185, 186, 187, 188, 191, 192, 193, 194, 195, 196, 200, 205, 206, 207, 208, 209, 210, 211, 212, 213, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 230, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 256, 257, 258, 259, 260, 261, 262, 266, 270, 272, 273, 274, 298, 303, 319, 332, 348, 354, 355, 361, 362, 363, 364, 366, 367, 368, 369, 370, 372, 373, 374, 375, 377, 378, 379, 380, 381, 383, 385, 386, 387, 388, 389, 391, 392, 393, 420, 423, 424, 426, 430, 431, 434, 435, 436, 439, 442, 446, 451, 452, 454, 455, 458, 459, 460, 461, 462, 463, 464, 465, 466, 468, 470, 471, 472, 479, 480, 481, 490, 491, 492, 493, 495, 500, 502, 504, 507, 508, 514, 552, 553, 555, 556, 557, 558, 559], "ones": [83, 86, 112, 116, 120, 124, 127, 140, 187, 365, 369, 373, 375, 378, 381, 389, 394, 397, 451, 454, 461, 463, 483, 502, 554, 555], "ones_lik": 455, "ongo": [364, 367, 368, 391], "onli": [16, 19, 20, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 68, 70, 71, 75, 78, 79, 80, 81, 82, 83, 84, 85, 86, 88, 90, 95, 96, 97, 98, 99, 100, 103, 104, 105, 116, 118, 119, 120, 124, 127, 134, 141, 142, 146, 148, 153, 156, 159, 165, 170, 181, 182, 183, 184, 186, 191, 192, 193, 194, 195, 196, 201, 202, 204, 205, 208, 209, 211, 212, 213, 215, 216, 217, 218, 220, 221, 222, 223, 224, 225, 226, 227, 228, 230, 231, 233, 234, 237, 238, 239, 240, 241, 244, 245, 246, 247, 248, 249, 252, 253, 254, 258, 259, 260, 272, 274, 290, 310, 336, 358, 361, 362, 364, 366, 367, 368, 369, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 387, 388, 394, 402, 404, 408, 412, 414, 415, 420, 424, 426, 427, 431, 432, 434, 435, 436, 439, 440, 442, 443, 445, 446, 447, 448, 452, 453, 454, 455, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 470, 471, 472, 480, 483, 491, 493, 495, 499, 502, 505, 508, 550, 554, 555, 556, 557], "onlin": [83, 86, 362, 366, 369, 381, 397], "onlinelibrari": 134, "onoff": [415, 491], "onserv": 88, "ontim": [176, 371, 446, 459], "onto": [183, 184, 186, 192, 194, 195, 196, 348, 367, 480, 491, 495, 507, 553], "oo": 387, "op": 377, "opac": 213, "open": [64, 83, 86, 362, 364, 366, 372, 375, 378, 380, 381, 385, 386, 387, 390, 392, 393, 395, 397, 398, 419, 435, 443, 463, 470, 472, 473, 479, 490, 554, 555], "openastronomi": 420, "oper": [83, 86, 182, 194, 206, 361, 367, 372, 375, 407, 409, 412, 421, 422, 426, 459, 465, 466, 507, 508, 521, 523, 527, 530, 532, 535, 540], "opinion": [366, 555], "oppos": [451, 531, 555], "opposit": [183, 184], "opt": [84, 85, 458, 521, 531], "opt_method": 460, "optic": [213, 375, 521], "optim": [19, 20, 26, 96, 125, 127, 199, 200, 201, 202, 203, 204, 205, 206, 209, 213, 215, 216, 217, 221, 227, 228, 230, 234, 236, 238, 239, 240, 244, 249, 251, 252, 253, 254, 257, 261, 354, 360, 361, 370, 373, 374, 383, 385, 431, 432, 434, 435, 436, 437, 438, 442, 443, 444, 451, 455, 460, 468, 471, 479, 480], "optimis": [19, 20, 200, 201, 205, 208, 209, 212, 213, 215, 216, 217, 218, 220, 221, 222, 223, 224, 225, 226, 227, 228, 230, 237, 238, 239, 240, 241, 244, 245, 246, 247, 249, 252, 253, 254, 259, 260, 375, 377, 379, 421, 493, 552], "optimize_opt": [200, 442, 450, 460, 480], "optimize_result": [200, 426], "optimizeresult": [96, 200, 431, 432, 434, 435, 436, 442, 443, 444, 455, 460, 471, 479, 480], "optin": 387, "optinon": [104, 105], "option": [11, 13, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 45, 46, 47, 65, 69, 70, 71, 72, 73, 74, 75, 76, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 107, 109, 111, 112, 114, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 131, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 147, 148, 150, 151, 152, 153, 154, 155, 156, 159, 163, 164, 165, 166, 167, 170, 171, 173, 174, 175, 176, 177, 178, 179, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 198, 199, 200, 201, 202, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 230, 233, 234, 235, 236, 237, 238, 239, 240, 241, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 256, 257, 258, 259, 260, 261, 262, 263, 264, 266, 268, 270, 271, 272, 273, 274, 278, 279, 280, 286, 287, 288, 290, 301, 311, 314, 317, 318, 319, 320, 322, 323, 330, 332, 343, 344, 348, 349, 350, 355, 356, 357, 358, 361, 364, 366, 367, 369, 370, 372, 373, 375, 377, 379, 381, 384, 388, 391, 392, 393, 394, 395, 401, 402, 403, 406, 408, 409, 412, 414, 418, 420, 421, 422, 423, 425, 426, 427, 442, 450, 452, 454, 458, 459, 462, 463, 464, 466, 467, 470, 471, 479, 480, 491, 493, 495, 507, 508, 550, 555], "option_context": [83, 86], "optionali": 515, "optout": 387, "optpars": 366, "oral": 387, "orang": [362, 434, 442, 448, 452, 455, 457, 468, 504], "orchestr": [367, 371, 373, 377, 435, 479, 480], "orcid": 387, "order": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 78, 83, 86, 89, 95, 96, 97, 100, 119, 137, 138, 141, 142, 148, 153, 156, 159, 163, 170, 173, 174, 179, 181, 182, 183, 184, 186, 187, 191, 192, 193, 194, 195, 196, 258, 270, 290, 358, 362, 367, 372, 373, 375, 376, 377, 378, 385, 386, 387, 389, 402, 403, 404, 405, 406, 407, 408, 409, 412, 434, 435, 436, 438, 442, 443, 446, 455, 458, 460, 461, 462, 463, 466, 472, 479, 480, 481, 506, 507, 508, 555, 558], "ordereddict": [367, 378, 405], "ordinari": 481, "org": [11, 34, 62, 63, 79, 83, 84, 86, 169, 200, 239, 240, 253, 254, 279, 290, 364, 369, 378, 381, 386, 387, 390, 392, 393, 395, 399, 418, 420, 430, 437, 439, 442, 443, 444, 450, 454, 457, 458, 460, 462, 470, 538, 539, 555], "organ": [365, 381, 386, 387, 412, 472, 473, 492, 507], "organis": [368, 377, 380, 387, 420], "orient": [138, 146, 147, 361, 372], "origin": [41, 83, 86, 97, 99, 104, 118, 184, 196, 256, 258, 260, 371, 375, 387, 388, 418, 435, 451, 453, 463, 466, 471, 479, 511, 512, 513, 514, 515, 516, 517, 518, 519, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 542, 543, 544, 545, 546, 547, 548, 549, 550, 558, 559], "orthogon": 323, "oscar": [420, 421], "osx": 408, "ot": 390, "other": [13, 16, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 56, 65, 67, 79, 80, 82, 83, 86, 97, 99, 100, 104, 105, 117, 118, 120, 124, 125, 137, 138, 139, 140, 141, 142, 143, 144, 145, 147, 148, 150, 152, 153, 154, 155, 156, 165, 182, 183, 184, 185, 186, 187, 188, 191, 192, 193, 194, 195, 196, 200, 202, 204, 258, 271, 290, 303, 331, 350, 355, 360, 364, 366, 368, 369, 370, 372, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 385, 387, 388, 392, 420, 430, 431, 434, 435, 436, 437, 438, 439, 440, 442, 443, 444, 445, 446, 447, 448, 450, 451, 452, 453, 454, 455, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 468, 470, 471, 472, 473, 479, 480, 481, 491, 492, 493, 495, 500, 502, 504, 508, 523, 552, 553, 555, 559], "other_id": 431, "otherwis": [16, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 78, 80, 83, 86, 97, 99, 100, 104, 105, 118, 151, 190, 194, 196, 198, 201, 202, 203, 204, 211, 233, 290, 354, 374, 384, 387, 465, 466, 471, 522], "oto1oovj": 466, "oup": [128, 286], "our": [361, 364, 370, 375, 377, 378, 380, 383, 384, 385, 387, 402, 403, 419, 430, 431, 434, 435, 436, 439, 440, 442, 443, 444, 447, 453, 454, 455, 463, 464, 468, 472, 479, 480, 555], "ourself": 481, "out": [11, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 83, 86, 87, 89, 95, 96, 119, 183, 184, 186, 192, 195, 196, 233, 245, 246, 360, 361, 362, 364, 366, 369, 371, 373, 375, 377, 379, 380, 381, 386, 390, 397, 398, 400, 406, 420, 432, 436, 439, 440, 463, 464, 470, 471, 479, 481, 483, 484, 504, 517, 518, 552, 555, 559], "out_fold": 377, "outcom": [366, 375], "outdat": [378, 381], "outdir": [16, 78, 88, 435, 439, 440, 442, 479], "outer": [43, 44, 52, 53, 121, 158, 245, 518], "outer_height": [504, 508], "outer_width": [504, 508], "outfil": 361, "outflow": 193, "outlin": [97, 100, 104, 105, 207, 208, 212, 220, 223, 237, 245, 246, 260, 364, 366, 369, 370, 371, 372, 375, 381, 384], "output": [11, 16, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 41, 79, 80, 82, 83, 84, 86, 88, 99, 118, 132, 133, 140, 145, 183, 184, 186, 192, 195, 196, 211, 225, 233, 273, 319, 362, 369, 371, 374, 377, 378, 382, 385, 388, 401, 416, 422, 425, 426, 442, 446, 447, 450, 454, 462, 463, 479, 480, 493, 495, 555, 556], "output_map": [183, 184, 186, 192, 195, 196], "output_unit": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40], "outsid": [83, 86, 97, 104, 109, 111, 140, 160, 181, 182, 183, 184, 185, 186, 187, 188, 191, 192, 193, 194, 195, 196, 201, 203, 213, 261, 349, 361, 375, 376, 377, 412, 440, 460, 462, 463, 464, 495, 502, 514, 540, 554], "over": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 65, 79, 83, 84, 86, 87, 90, 97, 100, 104, 105, 120, 127, 128, 140, 141, 151, 153, 156, 163, 170, 173, 174, 176, 177, 183, 184, 186, 187, 188, 192, 194, 195, 196, 211, 233, 263, 272, 274, 278, 301, 302, 315, 352, 361, 362, 366, 369, 370, 371, 374, 375, 376, 381, 384, 388, 392, 394, 412, 431, 434, 442, 445, 446, 454, 458, 459, 462, 463, 466, 468, 480, 481, 493, 499, 556, 557], "overal": [369, 375, 434], "overcom": 464, "overestim": [493, 557], "overflow": [193, 436, 454, 543], "overkil": 454, "overlai": 435, "overlaid": [97, 100, 104, 105, 434, 435], "overlap": [82, 86, 109, 111, 124, 171, 188, 193, 358, 376, 434], "overlap_ok": 82, "overlin": [97, 104, 491], "overload": 412, "overplot": [458, 490], "overrid": [16, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 80, 99, 118, 329, 372, 434, 436, 444, 448], "overridden": [16, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 80, 83, 86, 99, 118, 191, 358], "oversampl": [98, 103, 151, 153, 156, 163, 170, 176, 182, 183, 184, 186, 191, 192, 195, 196, 208, 212, 220, 223, 224, 225, 235, 245, 246, 248, 250, 256, 260, 262, 266, 403, 462], "oversample_energy_factor": [98, 103, 447], "oversampling_factor": [184, 194, 207, 208, 212, 220, 223, 224, 225, 235, 237, 245, 246, 248, 250, 256, 260, 262], "overview": [6, 364, 391, 406, 407, 409, 412, 429, 455, 463, 466, 475, 481, 482, 495, 496, 509, 556], "overwrit": [11, 15, 16, 19, 20, 26, 78, 79, 84, 88, 95, 96, 97, 100, 102, 104, 105, 117, 119, 141, 142, 148, 153, 156, 181, 182, 183, 184, 186, 188, 190, 191, 192, 193, 194, 195, 196, 201, 205, 208, 209, 211, 212, 213, 215, 216, 217, 218, 220, 221, 222, 223, 224, 225, 226, 227, 228, 230, 233, 237, 238, 239, 240, 241, 244, 245, 246, 247, 249, 252, 253, 254, 256, 257, 258, 259, 260, 310, 385, 421, 423, 434, 435, 442, 443, 446, 447, 448, 461, 463, 464, 465, 466, 470, 471, 477, 479, 480, 491, 495, 508, 519, 555], "overwrite_templ": [211, 233], "overwritten": [153, 156, 302], "owen": [400, 413], "own": [83, 86, 94, 117, 119, 190, 192, 364, 367, 377, 383, 387, 412, 430, 446, 466, 471, 495, 507, 508], "p": [38, 51, 54, 83, 86, 104, 105, 123, 277, 287, 361, 412, 435, 445, 457, 460, 462, 479, 495, 500, 501, 557], "p0_birth": 43, "p90": 48, "p_": [497, 499, 500, 501], "p_0": [51, 183, 186, 192, 195, 196, 487], "p_dot": [51, 54], "p_i": [183, 186, 192, 195, 196], "p_lat": [183, 186, 192, 195, 196], "p_lon": [183, 186, 192, 195, 196], "p_mean": 42, "p_n": [183, 186, 192, 195, 196], "p_stdv": 42, "p_valu": [272, 274, 460, 555, 557], "pace": [369, 370], "packag": [6, 11, 132, 290, 326, 360, 361, 362, 364, 365, 366, 367, 368, 369, 370, 375, 378, 379, 381, 386, 387, 388, 390, 392, 393, 395, 396, 397, 398, 399, 400, 402, 405, 406, 408, 409, 412, 415, 416, 417, 418, 419, 420, 421, 423, 430, 431, 434, 435, 436, 437, 438, 439, 440, 442, 443, 444, 445, 446, 447, 448, 450, 452, 453, 454, 455, 457, 458, 459, 460, 462, 463, 464, 465, 466, 468, 470, 471, 472, 473, 479, 480, 481, 491, 494, 495, 496, 503, 508, 519, 527, 529, 530, 543, 555, 559], "pacman": 417, "paczynski": 37, "paczynski1990": [28, 29, 30, 35, 37, 39, 40, 48], "paczynski1990veloc": 49, "pad": [83, 86, 97, 100, 104, 105, 127, 137, 138, 139, 140, 143, 144, 145, 147, 150, 152, 154, 155, 163, 181, 182, 183, 184, 185, 186, 187, 188, 191, 192, 194, 195, 196, 349, 409, 412], "pad_width": [97, 104, 127, 137, 138, 139, 140, 143, 144, 145, 147, 150, 152, 154, 155, 181, 182, 183, 184, 186, 187, 188, 191, 192, 194, 195, 196], "pad_with": [183, 184, 186, 192, 195, 196], "page": [6, 83, 86, 200, 275, 281, 287, 362, 364, 366, 373, 375, 378, 381, 387, 390, 391, 393, 394, 398, 406, 407, 412, 415, 416, 419, 420, 421, 422, 460, 463, 473, 475, 493, 495, 506, 508, 556, 559], "pain": [361, 364, 368], "pair": [16, 80, 97, 99, 100, 104, 105, 117, 118, 119, 128, 137, 138, 139, 140, 141, 142, 143, 144, 145, 147, 148, 150, 152, 153, 154, 155, 156, 181, 182, 183, 184, 186, 187, 190, 191, 192, 194, 195, 196, 377], "panda": [83, 86, 360, 378, 421, 430, 431, 434, 435, 436, 437, 438, 439, 440, 442, 443, 444, 445, 446, 447, 448, 452, 453, 454, 455, 457, 458, 459, 460, 462, 463, 464, 465, 466, 468, 470, 471, 472, 473, 479, 480, 481], "panel": [84, 96, 97, 100, 104, 105, 348, 415, 446, 460], "panel_fov": 348, "panni": 412, "papadopoulo": [412, 414], "paper": [57, 59, 62, 70, 71, 120, 169, 381, 387, 421, 451, 453, 458, 462, 472, 483], "papermil": 377, "par": [372, 384, 389, 460, 468, 470], "par_000_amplitud": 460, "par_001_alpha": 460, "par_002_beta": 460, "par_00x_": 372, "par_1": [200, 460], "par_2": [200, 460], "par_alpha": 460, "par_beta": 460, "par_box": 86, "par_nam": [211, 233], "par_to_v": 470, "par_typ": [211, 233], "parabol": [271, 303, 460], "parabola": [227, 228, 429, 443, 460, 509, 541], "paragraph": 366, "parallel": [6, 88, 120, 121, 124, 127, 159, 305, 306, 307, 308, 309, 310, 311, 364, 378, 391, 414, 426, 427, 459], "parallel_backend": [88, 120, 121, 124, 127, 159, 310, 448], "parallelbackendenum": 305, "parallelmixin": [88, 120, 127, 159], "param": [16, 80, 99, 118, 213, 261, 354, 377, 407], "param_nam": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40], "param_set": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40], "paramet": [15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 69, 70, 71, 72, 73, 74, 75, 76, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 91, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 147, 148, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 230, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 268, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 285, 286, 287, 288, 289, 290, 292, 294, 296, 297, 299, 301, 302, 303, 304, 310, 311, 312, 314, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 342, 343, 344, 345, 346, 348, 349, 350, 351, 352, 354, 355, 356, 357, 358, 359, 361, 362, 370, 373, 374, 376, 377, 379, 380, 383, 385, 387, 398, 401, 402, 403, 404, 405, 406, 408, 409, 412, 414, 419, 420, 421, 422, 423, 424, 425, 426, 427, 431, 432, 434, 436, 437, 438, 439, 440, 442, 443, 444, 446, 447, 448, 450, 452, 453, 454, 455, 457, 458, 459, 461, 462, 467, 468, 470, 471, 480, 481, 483, 491, 493, 494, 495, 502, 508, 511, 512, 513, 514, 515, 516, 517, 518, 519, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 542, 543, 544, 545, 546, 547, 548, 549, 550, 552, 553, 554, 555, 556, 557, 558], "parameter": 466, "parameter_constraint": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40], "parameter_name_scan": 200, "parameterestim": [113, 408, 427], "parameteris": [497, 499], "parameters_list": [202, 204], "parameters_nam": [211, 233], "parameters_stat_sum": 389, "parameters_unique_nam": [211, 233, 460], "parametr": [16, 27, 80, 96, 99, 118, 143, 144, 149, 152, 154, 227, 228, 245, 373, 377, 384, 402, 409, 412, 436, 438, 466, 470, 517, 518, 529], "parametricpsf": [144, 152, 412, 414], "parametris": [152, 384, 406, 499, 501, 512, 513, 514, 515, 522, 525, 526, 527, 528, 529, 530, 532, 533, 534, 535, 536, 537, 538, 539, 542, 543, 544, 545, 546, 547, 548, 549, 550], "parent": [16, 80, 99, 112, 116, 118, 120, 124, 127, 194, 361, 371, 388, 453, 493, 531], "parenthes": [372, 378, 424, 426], "parfiv": [378, 405], "parnam": 468, "pars": [16, 80, 81, 99, 118, 182, 191, 362, 375, 430, 437, 439, 442, 444, 450, 454, 464, 470, 555], "parse_arg": 555, "parse_fil": [16, 80, 99, 118], "parse_obj": [16, 80, 99, 118], "parse_raw": [16, 80, 99, 118], "parseabl": 290, "parser": 555, "part": [96, 361, 364, 367, 370, 372, 374, 375, 376, 377, 379, 380, 381, 386, 387, 402, 406, 407, 408, 416, 421, 426, 427, 430, 431, 434, 442, 450, 458, 459, 463, 464, 480, 481, 495, 500, 504], "parti": 366, "partial": [86, 97, 100, 141, 142, 148, 153, 156, 159, 182, 194, 196, 258, 375, 379, 407, 421, 506], "partial_overlap": 86, "particip": [366, 370, 381], "particl": [19, 26, 234, 263, 408, 483, 531], "particle_distribut": [234, 531], "particular": [83, 86, 361, 367, 374, 376, 383, 385, 386, 388, 409, 412, 423, 424, 431, 434, 435, 436, 437, 439, 443, 446, 451, 453, 454, 460, 462, 465, 470, 472, 473, 479, 480, 492, 495, 502, 504, 508, 557], "particularli": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40], "partli": [364, 370, 371, 375, 381, 382], "pass": [15, 16, 19, 20, 26, 28, 29, 30, 31, 32, 33, 35, 36, 37, 39, 40, 42, 45, 46, 47, 66, 79, 80, 81, 82, 83, 84, 85, 86, 88, 96, 97, 99, 100, 103, 104, 105, 118, 119, 122, 135, 137, 138, 139, 140, 141, 142, 143, 144, 145, 147, 148, 150, 151, 152, 153, 154, 155, 156, 159, 160, 168, 176, 181, 182, 183, 184, 186, 188, 190, 191, 192, 194, 195, 196, 199, 200, 202, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 215, 216, 217, 218, 220, 222, 223, 224, 225, 226, 227, 228, 230, 233, 234, 235, 236, 237, 238, 239, 240, 241, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 256, 257, 258, 259, 260, 261, 262, 271, 273, 290, 302, 310, 311, 312, 317, 318, 319, 320, 348, 349, 354, 356, 357, 361, 364, 371, 373, 374, 375, 376, 388, 408, 412, 414, 426, 427, 431, 432, 434, 435, 442, 443, 447, 451, 452, 453, 458, 459, 460, 461, 462, 463, 464, 466, 467, 470, 479, 480, 481, 495, 506, 507, 508, 512, 513, 555, 559], "pass4": 472, "passkwarg": 436, "past": [361, 366, 369, 377, 378, 381, 382, 384, 387, 389, 397, 418, 420, 421, 463, 555], "patch": [358, 361, 368, 387, 415, 424, 434, 436, 444, 448, 455], "path": [11, 15, 16, 64, 78, 79, 80, 82, 83, 84, 86, 88, 95, 99, 101, 102, 105, 118, 137, 138, 139, 140, 141, 142, 143, 144, 145, 147, 148, 150, 152, 153, 154, 155, 156, 157, 183, 184, 186, 191, 192, 195, 196, 211, 225, 233, 259, 298, 326, 327, 328, 330, 361, 364, 396, 430, 431, 434, 435, 436, 437, 438, 439, 440, 442, 443, 444, 445, 446, 447, 448, 452, 453, 454, 455, 457, 458, 459, 460, 462, 463, 464, 465, 466, 468, 470, 471, 472, 473, 479, 480, 481, 493, 549, 550, 555], "path_effect": [191, 211, 233], "path_to_notebook": 361, "path_to_script": 361, "patheffect": [191, 211, 233], "pathlib": [78, 79, 82, 83, 86, 140, 192, 211, 233, 327, 434, 435, 442, 443, 446, 447, 470, 479, 480], "pathpatch": 448, "pattern": [361, 367, 375], "paula": 427, "paulakx": 427, "paz": [413, 416, 417], "pbar": 495, "pc": [46, 47, 50, 52, 488, 489], "pcolormesh": [79, 119, 137, 138, 140, 143, 144, 145, 150, 152, 154, 155, 419, 425, 460, 461], "pd": [83, 86], "pdf": [140, 144, 169, 239, 240, 253, 254, 312, 354, 362, 443, 446, 457, 462, 485, 487, 488, 489, 491, 492, 497, 498, 499, 501, 504, 508, 538, 539, 557, 560], "pdf_in_safe_rang": 140, "pdf_matrix": 140, "pdf_threshold": [140, 141, 145], "pdflatex": 362, "peak": [66, 122, 132, 133, 140, 169, 217, 222, 224, 228, 414, 420, 427, 438, 451, 458, 462, 518], "peak_bright": 66, "peak_brightness_error": 66, "peak_latitud": 66, "peak_latitude_error": 66, "pedant": 361, "peek": [79, 84, 97, 100, 104, 105, 122, 123, 137, 138, 140, 141, 142, 143, 144, 145, 150, 151, 152, 153, 154, 156, 361, 373, 397, 409, 415, 419, 423, 431, 436, 442, 446, 447, 455, 459, 461, 470, 472, 473, 492, 495, 497, 498, 499, 501], "pend": 290, "peopl": [366, 368, 381, 387, 390, 391, 457, 483, 495, 555], "pep": 366, "pep8": 364, "per": [17, 18, 21, 22, 24, 25, 27, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 94, 96, 97, 100, 104, 105, 107, 116, 117, 119, 120, 121, 124, 125, 132, 134, 135, 136, 153, 156, 188, 218, 225, 226, 266, 275, 281, 287, 361, 367, 373, 374, 377, 385, 387, 388, 400, 408, 412, 414, 427, 430, 437, 446, 450, 452, 454, 457, 462, 463, 467, 468, 472, 473, 491, 495, 498, 554, 556], "per_decad": [188, 434, 436, 446, 447, 455, 459, 471, 499, 505], "percent": 126, "percentag": [140, 169, 462], "percentil": 79, "perfect": 140, "perfectli": [513, 555], "perform": [11, 16, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 80, 81, 83, 86, 89, 95, 99, 103, 118, 160, 168, 182, 194, 196, 208, 211, 212, 220, 223, 233, 235, 245, 246, 250, 256, 260, 272, 274, 328, 354, 361, 362, 367, 370, 371, 372, 376, 377, 385, 388, 391, 393, 402, 409, 412, 414, 417, 421, 424, 426, 427, 430, 432, 434, 435, 436, 437, 438, 439, 440, 442, 443, 445, 447, 450, 452, 453, 454, 459, 460, 462, 463, 464, 465, 467, 472, 475, 479, 491, 495, 503, 504, 507, 513, 531, 553, 554, 555, 556], "perhap": 508, "period": [42, 51, 54, 259, 368, 387, 420, 467, 487], "period_dot": 51, "periodogram": [273, 376, 421], "permit": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 387], "perseu": [33, 38], "person": [361, 364, 366, 368, 369, 370, 374, 379, 382], "perspect": [83, 86], "pertain": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40], "peter": 420, "pf": 26, "pformat": [83, 86], "pformat_al": [83, 86], "pg": 481, "ph": 346, "pha": [101, 102, 105, 192, 373, 418, 421, 434, 443], "pha_": 459, "pha_meta": 101, "pha_ob": [101, 136, 443, 460], "pha_obs23523": [104, 105, 125, 270, 468, 493], "pha_obs23592": 493, "phacountsspectrum": 404, "phacountsspectrumlist": 403, "phase": [50, 52, 53, 85, 161, 164, 259, 366, 371, 372, 375, 376, 378, 380, 385, 397, 402, 421, 423, 426, 429, 466, 484, 495, 509, 551], "phase_axi": 385, "phase_bkg_mak": 455, "phase_column_nam": [164, 455], "phase_curve_model": 549, "phase_filt": 85, "phase_max": 455, "phase_min": 455, "phase_model": 549, "phasebackgroundestim": 406, "phasebackgroundmak": [161, 406, 426, 455], "phasecurv": [259, 420, 549], "phasecurve_lsi_dc": 549, "phasecurvemodel": 384, "phasecurvetablemodel": [372, 374], "phasecurvetempl": 372, "phasogram": [259, 549], "phi": [19, 20, 26, 189, 205, 206, 209, 212, 213, 215, 216, 217, 220, 223, 227, 228, 230, 234, 236, 238, 239, 240, 244, 249, 251, 252, 253, 254, 257, 261, 294, 384, 450, 460, 465, 466, 471, 481, 500, 512, 513, 514, 516, 517, 518, 522, 524, 525, 526, 528, 529, 533, 534, 536, 537, 538, 539], "phi_0": [205, 207, 208, 212, 215, 216, 217, 220, 223, 227, 228, 235, 237, 239, 240, 245, 246, 249, 250, 252, 253, 254, 256, 260, 384, 460, 522, 525, 526, 529, 533, 536, 537, 538, 539], "phi_ref": [259, 549], "philipp": [420, 421], "phone": 381, "photon": [44, 213, 234, 346, 376, 437, 446, 450, 464, 466, 481, 500, 531, 554], "photutil": [132, 361, 375, 421], "php": 62, "physic": [120, 121, 124, 127, 310, 311, 360, 385, 389, 403, 435, 443, 463, 466, 468, 470, 479, 493, 495, 531, 554, 557, 558], "pi": [19, 20, 30, 31, 32, 37, 54, 221, 263, 384, 466, 489, 512, 513, 514, 517, 518, 528, 548], "pick": [361, 368, 375, 386, 402, 481], "pictur": 362, "pie": 495, "piec": [361, 367, 375, 380, 389], "piecewis": [235, 236, 429, 466, 509, 520, 541], "piecewisebrokenpowerlawnormspectralmodel": 384, "piecewisebrokenpowerlawnormspectramodel": 384, "piecewisenormsectralmodel": 409, "piecewisenormspatialmodel": [242, 426, 466, 515], "piecewisenormspectralmodel": [243, 389, 409, 412, 425, 427, 466, 502, 532], "pig": [13, 361, 363, 364, 401, 402, 404, 405, 406, 408, 409, 420, 422, 423, 427], "pii": 134, "pillar": 377, "pin": 421, "pink": [104, 105], "pint": [455, 495], "pintor": [374, 404, 405, 406, 407, 408, 409, 411, 412, 414, 415, 423, 425, 426, 427], "pip": [360, 364, 368, 378, 392, 393, 395, 402, 421, 470, 555], "pipe": [417, 418, 419], "pipelin": [374, 376, 408], "piron": 554, "piron2001": 554, "pivot": [19, 20, 26, 65, 205, 206, 209, 213, 215, 216, 217, 221, 227, 228, 230, 234, 236, 238, 239, 240, 244, 249, 251, 252, 253, 254, 257, 261, 427, 458], "pivot_energi": [19, 20, 26, 205, 206, 209, 213, 215, 216, 217, 221, 227, 228, 230, 234, 236, 238, 239, 240, 244, 249, 251, 252, 253, 254, 257, 261], "pix": [181, 182, 183, 184, 185, 186, 187, 188, 191, 192, 193, 194, 195, 196, 507], "pix_reg": 457, "pix_reg_rec": 457, "pix_to_coord": [181, 182, 185, 187, 188, 191, 193, 194, 427], "pix_to_idx": [181, 182, 185, 187, 188, 191, 193, 194], "pixcoord": 375, "pixel": [13, 79, 97, 100, 104, 105, 107, 108, 112, 122, 132, 133, 137, 138, 139, 140, 143, 144, 145, 147, 150, 151, 152, 154, 155, 166, 181, 182, 183, 184, 185, 186, 187, 188, 191, 192, 193, 194, 195, 196, 208, 211, 212, 220, 223, 233, 235, 245, 246, 250, 256, 260, 372, 400, 404, 418, 421, 438, 440, 446, 448, 459, 462, 463, 471, 481, 491, 493, 505, 506, 507, 516], "pixel_area": 194, "pixel_scal": [112, 182, 194], "pixelregion": [375, 504], "pixilis": 463, "pixreg": 514, "pixregion": 196, "pk": [128, 407, 451, 453, 454, 458, 467, 481, 521], "pks2155": 453, "pks2155_hess_lc": [135, 451], "pl": [65, 76, 116, 121, 127, 160, 231, 238, 239, 240, 384, 432, 448, 458, 459, 466, 481], "pl_model": 547, "pl_spectrum": 468, "place": [79, 82, 83, 86, 87, 95, 97, 100, 104, 105, 132, 137, 138, 139, 140, 141, 142, 143, 147, 148, 153, 155, 156, 166, 171, 183, 184, 186, 192, 195, 196, 233, 258, 286, 334, 361, 362, 368, 369, 372, 373, 374, 375, 377, 380, 381, 382, 383, 386, 391, 405, 407, 434, 452, 463, 464, 466, 481, 491, 492, 495, 553, 559], "placehold": 366, "plai": [381, 444], "plain": [378, 463], "plan": [365, 366, 370, 371, 375, 377, 378, 381, 386, 390, 401, 418, 420, 421, 422, 552], "planar": [260, 372], "plane": [29, 65, 66, 120, 181, 182, 183, 184, 186, 191, 192, 194, 195, 196, 381, 457, 458, 463, 470, 490, 505, 508, 513, 554, 560], "plate": [194, 463], "platform": [378, 387, 412], "plausibl": [388, 445], "pleas": [98, 103, 362, 364, 366, 368, 370, 396, 401, 402, 403, 412, 420, 422, 432, 434, 435, 436, 437, 439, 442, 446, 447, 451, 453, 454, 459, 479, 484, 495], "pleasant": 364, "plot": [6, 19, 20, 26, 64, 65, 79, 84, 96, 97, 100, 104, 105, 119, 122, 123, 137, 138, 140, 141, 142, 143, 144, 145, 150, 151, 152, 153, 154, 155, 156, 183, 184, 185, 186, 188, 191, 192, 193, 195, 196, 199, 205, 206, 207, 208, 209, 210, 211, 212, 213, 215, 216, 217, 218, 220, 221, 222, 223, 224, 225, 226, 227, 228, 230, 233, 234, 235, 236, 237, 238, 239, 240, 241, 244, 245, 246, 247, 249, 250, 251, 252, 253, 254, 256, 257, 259, 260, 261, 262, 264, 268, 339, 348, 349, 353, 354, 355, 356, 357, 358, 359, 360, 362, 375, 376, 377, 379, 380, 382, 385, 397, 400, 403, 406, 408, 409, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 425, 426, 427, 430, 431, 432, 436, 439, 440, 442, 443, 447, 450, 451, 452, 453, 454, 455, 457, 458, 459, 460, 462, 464, 466, 467, 468, 470, 471, 472, 473, 479, 481, 485, 487, 488, 489, 491, 495, 497, 498, 499, 501, 504, 549, 550, 557, 559], "plot_absorb": [429, 521, 541], "plot_at_energi": [137, 138, 470], "plot_bia": [140, 145], "plot_broken_powerlaw": [429, 522, 541], "plot_compound": [429, 523, 541], "plot_const": [429, 511, 520], "plot_constant_spectr": [429, 524, 541], "plot_constant_tempor": [429, 542, 551], "plot_containment_radiu": [144, 150, 152, 154], "plot_containment_radius_vs_energi": [144, 150, 152, 153, 154, 156, 470, 471], "plot_contour_lin": 460, "plot_correl": [199, 460], "plot_count": [104, 105], "plot_dat": 559, "plot_disk": [429, 512, 520], "plot_distribut": [440, 442], "plot_energi": [79, 447], "plot_energy_depend": [137, 143, 470, 497], "plot_energy_offset": 79, "plot_err": 122, "plot_error": [19, 20, 26, 64, 65, 96, 205, 206, 207, 208, 209, 212, 213, 215, 216, 217, 220, 221, 223, 227, 228, 230, 234, 235, 236, 237, 238, 239, 240, 244, 245, 246, 249, 250, 251, 252, 253, 254, 256, 257, 260, 261, 379, 432, 434, 436, 442, 443, 445, 458, 460, 480], "plot_excess": [104, 105, 415], "plot_exp_cutoff_powerlaw": [429, 525, 541], "plot_exp_cutoff_powerlaw_3fgl": [429, 526, 541], "plot_exp_cutoff_powerlaw_norm_spectr": [429, 527, 541], "plot_expdecay_tempor": [429, 543, 551], "plot_extension_error": [207, 208, 212, 220, 223, 235, 237, 245, 246, 250, 256, 260], "plot_fit": [96, 104, 105, 431, 434, 435, 436, 444, 455, 479], "plot_gauss": [429, 513, 520], "plot_gauss_spectr": [429, 528, 541], "plot_gaussian_tempor": [429, 544, 551], "plot_gen_gauss": [429, 514, 520], "plot_generalized_gaussian_tempor": [429, 545, 551], "plot_grid": [151, 183, 184, 186, 192, 195, 196, 207, 208, 212, 220, 223, 235, 237, 245, 246, 250, 256, 260, 385, 414, 425, 442, 459, 461, 462, 463, 464, 466, 472], "plot_heatmap": 199, "plot_hist": [192, 508], "plot_imag": 79, "plot_interact": [183, 184, 186, 192, 195, 196, 207, 208, 212, 220, 223, 235, 237, 245, 246, 250, 256, 260, 414, 421, 442, 450, 463, 479, 480], "plot_kernel": 151, "plot_kwarg": [434, 436, 444], "plot_linear_tempor": [429, 546, 551], "plot_logparabola": [429, 529, 541], "plot_logparabola_norm_spectr": [429, 530, 541], "plot_map_rgb": 426, "plot_mask": [104, 105, 184, 192, 196, 431, 434, 435, 504], "plot_matrix": [140, 459, 471], "plot_migr": 145, "plot_naima": [429, 531, 541], "plot_npred_sign": [426, 442, 444, 480], "plot_offset2_distribut": 79, "plot_offset_depend": [137, 143], "plot_panel": 348, "plot_phasogram": 259, "plot_piecewise_norm_spati": [429, 515, 520], "plot_piecewise_norm_spectr": [429, 532, 541], "plot_point": [429, 516, 520], "plot_posit": [211, 233, 465], "plot_position_error": [207, 208, 212, 220, 223, 235, 237, 245, 246, 250, 256, 260], "plot_powerlaw": [429, 533, 541], "plot_powerlaw2": [429, 534, 541], "plot_powerlaw_norm_spectr": [429, 535, 541], "plot_powerlaw_tempor": [429, 547, 551], "plot_profil": 122, "plot_psf_vs_rad": [144, 150, 152, 153, 154, 156, 471], "plot_rad_max_vs_energi": [155, 436], "plot_region": [191, 192, 211, 233, 358, 436, 448, 465, 504, 508], "plot_residu": [96, 97, 100, 104, 105, 410, 412, 442, 480], "plot_residuals_spati": [97, 100, 104, 105, 442, 450, 480], "plot_residuals_spectr": [97, 100, 104, 105], "plot_rgb": 426, "plot_shel": [429, 517, 520], "plot_shell2": [429, 518, 520], "plot_sine_tempor": [429, 548, 551], "plot_smooth_broken_powerlaw": [429, 536, 541], "plot_spati": 412, "plot_spectrum": [96, 137, 442, 454, 459], "plot_spectrum_datasets_off_region": [409, 425, 426, 434, 436, 444, 504], "plot_super_exp_cutoff_powerlaw_3fgl": [429, 537, 541], "plot_super_exp_cutoff_powerlaw_4fgl": [429, 538, 541], "plot_super_exp_cutoff_powerlaw_4fgl_dr1": [429, 539, 541], "plot_templ": [429, 519, 520], "plot_template_phase_tempor": [429, 549, 551], "plot_template_spectr": [429, 540, 541], "plot_template_tempor": [429, 550, 551], "plot_theta_squared_t": [472, 473], "plot_tim": 79, "plot_ts_profil": [119, 434, 435, 448, 452], "plotmixin": [104, 105], "plotter": 348, "plsuperexpcutoff3fgl": 419, "plsuperexpcutoff4fgl": 404, "plt": [19, 20, 26, 64, 65, 123, 137, 143, 144, 205, 206, 209, 213, 215, 216, 217, 221, 227, 228, 230, 234, 236, 238, 239, 240, 244, 249, 251, 252, 253, 254, 257, 261, 349, 358, 361, 362, 397, 430, 431, 432, 434, 435, 436, 437, 438, 439, 440, 442, 443, 444, 445, 446, 447, 448, 450, 451, 452, 453, 454, 455, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 470, 471, 472, 473, 479, 480, 481, 487, 488, 489, 495, 497, 498, 499, 501, 504, 512, 514, 518, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 542, 543, 544, 545, 546, 547, 548], "plu": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 212, 381, 387, 466], "pmf": 374, "png": [144, 369, 397, 485, 487, 488, 489, 491, 492, 497, 498, 499, 501, 504, 508, 557, 560], "po": [142, 194, 504], "point": [15, 17, 18, 21, 22, 24, 25, 27, 60, 63, 65, 69, 70, 71, 72, 74, 75, 76, 78, 79, 81, 83, 84, 86, 89, 90, 91, 94, 95, 96, 97, 99, 100, 104, 105, 113, 117, 119, 120, 121, 124, 125, 126, 127, 129, 135, 142, 144, 147, 153, 155, 156, 166, 167, 169, 170, 171, 173, 174, 176, 177, 179, 180, 183, 184, 186, 191, 192, 195, 196, 200, 211, 233, 237, 248, 266, 270, 273, 279, 292, 296, 302, 308, 318, 353, 361, 363, 364, 366, 367, 368, 369, 370, 371, 373, 374, 375, 377, 378, 381, 382, 383, 384, 385, 386, 387, 388, 390, 393, 400, 403, 405, 406, 412, 414, 415, 417, 418, 419, 420, 422, 425, 426, 427, 429, 431, 433, 436, 437, 438, 442, 447, 448, 450, 452, 454, 455, 459, 460, 461, 462, 463, 466, 467, 471, 473, 475, 483, 484, 490, 491, 492, 495, 500, 503, 504, 507, 509, 513, 514, 520, 531, 552, 553, 554], "point_sourc": 372, "pointer": 369, "pointing_altaz": [388, 426], "pointing_galact": 86, "pointing_info": [81, 89, 430], "pointing_posit": [153, 437, 447, 450], "pointing_radec": [79, 86, 426, 470], "pointing_t": 89, "pointing_zen": 426, "pointinginfo": [81, 418], "pointinginfometadata": 99, "pointingmetadata": 388, "pointingmod": 81, "pointlik": [137, 138, 139, 140, 143, 144, 145, 147, 150, 152, 154, 155, 420, 504], "points_scal": 302, "pointskyregion": [165, 170, 191, 237, 415, 436, 447], "pointsourc": [372, 483], "pointspatialmodel": [19, 20, 70, 76, 127, 242, 384, 385, 405, 425, 438, 439, 442, 443, 446, 447, 452, 458, 459, 465, 466, 471, 479, 480, 516], "pointspreadfunct": 461, "poisson": [100, 105, 272, 274, 275, 281, 283, 284, 287, 320, 373, 374, 403, 408, 432, 437, 440, 450, 554, 555, 557], "poissonian": [451, 455, 554], "poissonlikelihoodfitt": 417, "polar": [51, 54, 291, 361], "pole": [51, 375, 463], "poli": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 184], "polici": 365, "pollut": 376, "polygon": [184, 198, 375], "polygonis": 375, "polygonpixelregion": 375, "polygonskyregion": [198, 375], "polynomi": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 230, 463], "polynomial1d": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40], "polynomialmodel": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40], "pool": [306, 310, 311], "pool_kwarg": [310, 311], "poolmethodenum": 306, "poon": 418, "poorli": 462, "pop": [87, 95, 190, 233], "popitem": 190, "popul": [6, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 362, 381, 419, 484, 486, 531, 553], "popular": 555, "port": 419, "pos_ob": 444, "pos_on": 180, "pos_target": [444, 455], "posit": [16, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 45, 46, 47, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 79, 80, 81, 83, 86, 89, 90, 91, 97, 98, 99, 100, 103, 117, 118, 119, 120, 121, 124, 125, 127, 141, 142, 148, 151, 153, 156, 166, 169, 171, 180, 182, 183, 184, 186, 191, 192, 193, 194, 195, 196, 197, 201, 202, 203, 204, 207, 208, 211, 212, 220, 223, 233, 235, 237, 245, 246, 248, 250, 256, 258, 260, 270, 272, 274, 288, 289, 292, 293, 296, 297, 349, 361, 368, 372, 374, 375, 384, 385, 386, 387, 402, 404, 409, 412, 414, 427, 430, 436, 437, 438, 439, 440, 442, 443, 444, 445, 446, 447, 448, 450, 454, 455, 457, 458, 459, 461, 462, 463, 464, 465, 466, 467, 470, 471, 473, 481, 491, 492, 493, 495, 500, 501, 504, 505, 506, 508, 512, 513, 514, 516, 531, 557], "position_angl": 437, "position_error": [207, 208, 212, 220, 223, 235, 237, 245, 246, 250, 256, 260, 406], "position_lonlat": [207, 208, 212, 220, 223, 235, 237, 245, 246, 248, 250, 256, 260], "position_off": 180, "positv": 423, "posixpath": [16, 326], "possibl": [33, 78, 83, 86, 146, 361, 362, 364, 368, 369, 372, 373, 374, 375, 376, 377, 378, 380, 381, 382, 385, 388, 391, 393, 403, 404, 412, 419, 421, 426, 434, 438, 439, 440, 445, 448, 459, 460, 461, 462, 463, 471, 481, 493, 495, 502, 507, 508, 531, 555, 556], "possibli": [83, 86, 117, 367, 371, 372, 374, 375, 379, 380, 381, 382, 388, 390, 412, 502], "post": [52, 370, 388], "poster": [364, 387, 391, 416], "posterior": [379, 468], "posteriori": 468, "postfix": 361, "potenti": [114, 369, 377, 445, 495], "potentiel": 387, "power": [19, 20, 26, 27, 96, 116, 117, 119, 121, 126, 131, 151, 153, 156, 182, 201, 203, 205, 206, 209, 213, 215, 216, 217, 221, 227, 228, 230, 234, 236, 238, 239, 240, 241, 244, 249, 251, 252, 253, 254, 257, 261, 263, 268, 273, 317, 372, 374, 400, 406, 418, 420, 429, 437, 439, 442, 446, 448, 450, 453, 454, 455, 465, 466, 468, 495, 509, 521, 541, 547], "power_spectrum": 273, "power_spectrum_param": 273, "powerlaw": [169, 239, 241, 273, 372, 373, 377, 418, 420, 429, 431, 439, 447, 448, 458, 466, 468, 480, 509, 535, 551], "powerlaw2spectralmodel": [231, 239, 240, 243, 384, 432, 439, 466, 481, 534], "powerlaw_with_paramet": 273, "powerlaw_withparamet": 273, "powerlawnormspectralmodel": [65, 219, 238, 240, 243, 258, 383, 384, 389, 409, 427, 442, 443, 446, 447, 450, 459, 465, 466, 471, 479, 502, 515, 535, 540], "powerlawspectr": 127, "powerlawspectralmodel": [68, 70, 73, 76, 96, 104, 105, 109, 111, 119, 125, 127, 202, 204, 238, 239, 243, 264, 384, 385, 389, 431, 432, 435, 437, 438, 444, 445, 446, 447, 448, 450, 452, 453, 454, 455, 458, 459, 465, 466, 468, 470, 471, 479, 480, 481, 493, 511, 512, 513, 514, 516, 517, 518, 519, 521, 523, 532, 533, 535, 542, 543, 544, 545, 546, 547, 548, 549, 550], "powerlawspectramodel": 389, "powerlawtemporalmodel": [255, 466, 547], "pppc4dmid": 26, "pprint": [83, 86, 556], "pprint_al": [83, 86], "pprint_exclude_nam": [83, 86], "pprint_include_nam": [83, 86], "pr": [361, 371, 373, 375, 384, 385, 387, 389, 390, 406, 407], "practic": [374, 378, 382, 385, 386, 387, 388, 434, 459, 464, 466, 480, 491, 495, 504, 554], "pre": [16, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 80, 96, 99, 103, 118, 119, 290, 361, 364, 370, 381, 387, 388, 392, 393, 409, 421, 423, 435, 439, 440, 443, 445, 448, 451, 458, 460, 465, 468, 491, 497], "preced": [308, 375, 377, 387, 466], "precis": [127, 144, 150, 152, 154, 208, 212, 220, 223, 235, 245, 246, 250, 256, 260, 361, 379, 386, 387, 447], "precision_factor": [153, 156, 183, 184, 186, 192, 195, 196], "precomput": [26, 96, 119, 459, 465], "pred": 491, "predefin": [414, 448, 452, 453, 479], "predic": 372, "predict": [96, 97, 100, 103, 104, 105, 116, 117, 119, 120, 121, 124, 125, 131, 160, 163, 169, 176, 237, 248, 276, 312, 357, 367, 372, 373, 374, 409, 426, 427, 435, 437, 439, 440, 442, 444, 446, 448, 450, 459, 462, 468, 479, 480, 493, 495, 499, 502, 521, 554, 557], "prefer": [83, 86, 336, 361, 366, 368, 372, 380, 381, 387, 392, 393, 397, 448, 454, 463, 464, 468, 475, 555, 557], "prefix": [188, 372], "preliminari": [370, 381, 389, 417, 419, 427, 438, 461, 471], "prepar": [78, 163, 371, 372, 390, 435, 443, 460, 462, 466, 471, 479, 503, 552], "prepare_input": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40], "prepare_output": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40], "prepend": [83, 86], "presenc": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 438, 451, 463, 531, 554], "present": [15, 68, 78, 79, 81, 86, 87, 95, 101, 105, 117, 119, 157, 185, 190, 211, 219, 233, 290, 361, 362, 364, 374, 377, 381, 385, 388, 391, 412, 431, 436, 439, 440, 451, 452, 453, 457, 461, 462, 463, 465, 491, 493, 496, 508, 555, 557], "preserv": [83, 86, 100, 183, 184, 186, 188, 192, 195, 196, 378, 459, 464], "preserve_count": [183, 184, 186, 192, 195, 196, 463], "press": 470, "pretti": [375, 381, 391, 397], "prevent": [184, 213, 290, 412, 442], "preview": [364, 473], "previou": [71, 83, 86, 361, 364, 375, 381, 382, 386, 390, 403, 409, 427, 436, 445, 446, 463, 466, 467, 468, 481, 490], "previous": [270, 378, 408, 420, 421, 430, 434, 442, 443, 458, 462, 464], "primari": [26, 83, 86, 183, 184, 186, 187, 195, 196, 366, 387, 408, 423, 463], "primarili": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40], "primary_axi": 187, "primary_band": 463, "primary_hdu": 446, "primaryflux": [19, 20, 457, 483], "primaryhdu": [446, 463], "prime": 23, "primer": 379, "princip": 445, "principl": [387, 389, 434, 505], "print": [11, 65, 78, 79, 81, 82, 83, 84, 86, 89, 91, 96, 97, 104, 106, 110, 116, 119, 121, 127, 132, 133, 138, 140, 143, 144, 150, 152, 154, 163, 166, 202, 204, 211, 225, 233, 264, 288, 289, 298, 329, 361, 362, 372, 373, 376, 385, 388, 396, 397, 430, 431, 432, 434, 435, 436, 437, 439, 440, 442, 443, 444, 445, 446, 447, 448, 450, 451, 452, 453, 454, 455, 457, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 470, 471, 479, 480, 481, 493, 495, 507, 508, 511, 512, 513, 514, 515, 516, 517, 518, 519, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 542, 543, 544, 545, 546, 547, 548, 549, 550, 555, 556, 557, 559], "print0": 361, "print_level": [442, 450, 460, 480], "print_stack": 361, "printout": [361, 419, 420, 459], "prior": [19, 20, 94, 96, 97, 104, 201, 202, 203, 204, 205, 208, 209, 212, 213, 215, 216, 217, 218, 220, 221, 222, 223, 224, 225, 226, 227, 228, 230, 233, 237, 238, 239, 240, 241, 244, 245, 246, 247, 249, 252, 253, 254, 259, 260, 365, 370, 393, 395, 427, 429, 431, 434, 435, 436, 437, 439, 442, 443, 448, 450, 454, 458, 460, 466, 469, 475, 480, 481, 507, 540, 552], "prior_registri": 468, "prior_stat_sum": [201, 202, 203, 204, 389, 468], "priorfitstatist": 389, "priori": [385, 440, 464], "prioriti": [358, 370, 372, 373, 375, 387, 390], "priormodel": 389, "priorparamet": [389, 468], "privat": [361, 364, 370, 384, 420, 472, 473], "pro": [361, 377], "probabl": [13, 145, 361, 364, 367, 368, 369, 371, 374, 375, 379, 381, 383, 389, 391, 437, 450, 460, 463, 466, 468, 471, 499, 500, 501, 554, 555, 557, 558], "probe": [279, 466], "problem": [19, 20, 201, 205, 208, 209, 212, 213, 215, 216, 217, 218, 220, 221, 222, 223, 224, 225, 226, 227, 228, 230, 237, 238, 239, 240, 241, 244, 245, 246, 247, 249, 252, 253, 254, 259, 260, 286, 339, 369, 371, 375, 382, 389, 396, 424, 460], "problemat": [380, 385, 388, 453, 495], "proce": [364, 391, 393, 395, 423, 431, 434, 435, 446, 450, 453, 464, 465, 471, 479, 480], "procedur": [374, 386, 391, 438, 442], "proceed": [381, 387, 472], "process": [11, 79, 88, 120, 121, 124, 127, 159, 184, 196, 309, 310, 311, 320, 361, 362, 364, 366, 367, 369, 370, 371, 373, 374, 376, 377, 383, 386, 387, 388, 394, 398, 404, 409, 412, 414, 420, 427, 431, 434, 444, 446, 447, 458, 459, 462, 472, 477, 480, 485, 492, 494, 495, 553, 554, 555], "process_lots_of_data": 361, "processor": 381, "prod": 401, "prod3": 381, "prod3b": 470, "prod5": [446, 447], "produc": [15, 97, 100, 104, 105, 108, 117, 267, 269, 361, 362, 367, 376, 377, 385, 386, 388, 391, 406, 431, 434, 436, 438, 443, 444, 445, 446, 450, 453, 455, 457, 460, 462, 468, 470, 480, 495, 498, 500, 554, 555], "product": [103, 183, 184, 186, 189, 192, 195, 196, 259, 367, 376, 377, 387, 388, 397, 412, 426, 427, 432, 438, 447, 455, 459, 460, 462, 471, 473, 493, 500, 554], "prof_mak": 121, "profil": [17, 18, 21, 22, 23, 24, 25, 27, 113, 117, 119, 120, 121, 122, 123, 124, 125, 144, 150, 152, 153, 154, 156, 180, 184, 192, 200, 222, 224, 271, 287, 303, 322, 323, 373, 375, 379, 380, 387, 393, 395, 400, 402, 409, 412, 417, 419, 421, 422, 427, 429, 434, 435, 444, 449, 452, 454, 460, 468, 475, 483, 491, 493, 495, 507, 512, 554, 557], "profile_err": 122, "profile_high": 448, "profile_new": 448, "profuma": 483, "program": [361, 377], "programmat": 442, "progress": [15, 78, 112, 124, 127, 200, 311, 367, 370, 377, 378, 391, 412, 419, 420, 421, 427, 495], "progress_download": 495, "prohibit": 495, "proj": [97, 100, 104, 105, 163, 182, 183, 184, 194, 195, 196, 434, 462, 463, 471, 480, 504], "project": [97, 104, 121, 160, 166, 182, 183, 184, 186, 191, 192, 194, 195, 196, 208, 211, 212, 220, 223, 233, 235, 245, 246, 250, 256, 260, 297, 323, 361, 362, 363, 364, 366, 368, 375, 377, 378, 381, 387, 404, 412, 420, 426, 435, 438, 440, 444, 448, 455, 461, 463, 464, 465, 470, 471, 477, 479, 480, 481, 483, 504, 507, 508, 517, 518, 553, 555], "projected_distance_axi": 121, "prompt": 555, "pronounc": 495, "pronunci": 495, "prop_cycl": 358, "propag": [19, 20, 26, 53, 122, 205, 206, 209, 213, 215, 216, 217, 221, 227, 228, 230, 234, 236, 238, 239, 240, 244, 249, 251, 252, 253, 254, 257, 261, 278, 372, 379, 406, 426, 460], "proper": [45, 95, 376, 387, 425, 426, 436, 442, 495], "properli": [127, 176, 366, 376, 387, 424, 425, 434, 435, 460, 479, 491, 556], "properti": [19, 20, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 79, 83, 86, 91, 117, 160, 194, 201, 205, 208, 209, 212, 213, 215, 216, 217, 218, 220, 221, 222, 223, 224, 225, 226, 227, 228, 230, 237, 238, 239, 240, 241, 244, 245, 246, 247, 249, 252, 253, 254, 259, 260, 280, 358, 361, 362, 372, 374, 384, 385, 388, 389, 409, 412, 414, 419, 420, 422, 425, 426, 434, 436, 444, 446, 448, 458, 464, 466, 467, 481, 492, 508, 554], "propos": [363, 365, 366, 367, 368, 370, 378, 386, 387, 389, 402, 405, 406, 408, 409, 420, 426], "proto": [16, 80, 99, 118], "proton": [263, 531], "prototyp": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 361, 366, 372, 374, 377, 378, 379, 381, 417, 419, 420, 427, 484], "proven": 377, "provid": [15, 16, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 78, 79, 80, 81, 83, 84, 86, 97, 99, 100, 104, 105, 108, 118, 124, 127, 140, 141, 159, 173, 174, 179, 183, 184, 186, 188, 189, 190, 191, 192, 193, 194, 195, 196, 200, 273, 287, 290, 354, 361, 362, 371, 372, 374, 376, 377, 378, 381, 382, 385, 387, 388, 389, 390, 391, 392, 396, 398, 402, 405, 406, 407, 409, 412, 414, 423, 426, 430, 436, 437, 438, 447, 450, 451, 458, 459, 460, 462, 463, 464, 466, 467, 471, 472, 473, 475, 480, 481, 483, 485, 490, 492, 493, 494, 495, 496, 497, 498, 499, 501, 502, 505, 506, 507, 508, 509, 516, 519, 531, 540, 552, 553, 554, 555, 557, 560], "proxi": 371, "prune": 364, "pset": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40], "pseudonym": 364, "psf": [16, 78, 83, 84, 91, 97, 98, 100, 103, 104, 105, 107, 108, 142, 144, 149, 150, 151, 152, 153, 154, 156, 163, 170, 179, 194, 211, 233, 248, 288, 289, 361, 367, 371, 372, 373, 374, 377, 400, 402, 406, 407, 408, 409, 412, 413, 417, 418, 419, 420, 421, 422, 423, 424, 426, 430, 431, 434, 435, 436, 438, 439, 440, 442, 444, 446, 447, 450, 452, 459, 462, 464, 467, 470, 472, 473, 479, 480, 491, 493, 495, 500, 503, 508, 554], "psf3d": [84, 144, 149, 152, 154, 179, 402, 420, 501], "psf68": 430, "psf_": 491, "psf_3gauss": [83, 144, 470, 501], "psf_assym": 461, "psf_kernel": [153, 471], "psf_kernel_map": [151, 471], "psf_king": [83, 152, 501], "psf_map": [98, 103, 153, 156], "psf_map_reco": [156, 472], "psf_mean": 471, "psf_new": 461, "psf_out": [153, 156], "psf_r95": 464, "psf_tabl": [78, 83, 150, 461, 473], "psf_theta": 361, "psf_valu": [144, 152, 154], "psfkernel": [100, 153, 156, 184, 196, 373, 382, 421, 501], "psfking": [149, 414, 501], "psfmap": [97, 98, 100, 103, 104, 105, 141, 142, 148, 149, 151, 156, 163, 170, 179, 373, 374, 382, 402, 405, 406, 408, 409, 421, 427, 438, 459, 471, 495, 501], "psfnd": 461, "psr": [455, 458, 481], "public": [6, 351, 352, 364, 366, 375, 380, 383, 386, 391, 416, 431, 443, 452, 453, 553, 560], "publicli": [470, 472, 473], "publish": [11, 378, 391, 434, 471], "pull": [362, 365, 366, 369, 370, 371, 372, 373, 374, 375, 381, 386, 387, 391, 399], "puls": 224, "pulsar": [30, 31, 32, 35, 39, 42, 50, 54, 79, 371, 381, 402, 404, 423, 426, 429, 440, 445, 456, 466, 475, 485, 486, 491, 492, 493, 495, 503, 507, 552], "pulsar_analysi": [381, 429, 455, 456], "pulsat": 247, "pulse_stat": 455, "punch": [425, 427], "pure": [361, 378, 380, 381, 504], "purpl": 508, "purpos": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 314, 336, 365, 367, 373, 376, 380, 384, 386, 387, 420, 438, 459, 465, 466, 499], "push": [361, 364, 390, 423], "put": [361, 362, 364, 366, 368, 369, 372, 381, 390, 391, 397, 403, 437, 446, 464, 471, 555], "pwbpl": 384, "pwd": [364, 393, 395], "pwl": [19, 20, 26, 119, 202, 204, 205, 206, 209, 213, 215, 216, 217, 221, 227, 228, 230, 234, 236, 238, 239, 240, 244, 249, 251, 252, 253, 254, 257, 261, 264, 372, 384, 389, 432, 446, 466, 468, 493, 511, 512, 513, 514, 516, 517, 518, 519, 521, 523], "pwl2": 466, "pwl_decai": 446, "pwl_norm": [384, 466, 535], "pwn": [43, 458, 481, 488], "pwne": 445, "py": [16, 80, 99, 118, 361, 362, 368, 375, 378, 380, 382, 390, 391, 397, 402, 404, 405, 413, 418, 422, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 476, 477, 479, 480, 481, 482, 495, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 555], "py310": 364, "py35": 419, "pycharm": 403, "pydant": [16, 80, 99, 118, 360, 406, 425, 427], "pydantic_cor": [16, 80, 99, 118], "pydanticserializationerror": [16, 80, 99, 118], "pydanticundefin": [16, 80, 99, 118], "pydata": 414, "pyfact": [400, 418], "pyflak": 414, "pyirf": 427, "pyjok": 360, "pymc": 379, "pymotw": 555, "pypi": [378, 388, 390, 391, 393, 394], "pyplot": [19, 20, 26, 64, 65, 79, 123, 144, 205, 206, 209, 213, 215, 216, 217, 221, 227, 228, 230, 234, 236, 238, 239, 240, 244, 249, 251, 252, 253, 254, 257, 261, 349, 354, 397, 430, 431, 432, 434, 435, 436, 437, 438, 439, 440, 442, 443, 444, 445, 446, 447, 448, 450, 451, 452, 453, 454, 455, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 470, 471, 472, 473, 479, 480, 481, 487, 488, 489, 495, 497, 498, 499, 501, 504, 512, 514, 518, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 542, 543, 544, 545, 546, 547, 548], "pyproject": 409, "pyregion": 375, "pytest": [361, 362, 364, 391, 420], "python": [11, 16, 80, 99, 118, 132, 290, 330, 360, 364, 365, 366, 370, 371, 373, 374, 375, 377, 378, 379, 380, 381, 382, 387, 388, 391, 392, 393, 394, 395, 396, 398, 400, 401, 402, 404, 405, 412, 414, 417, 418, 419, 420, 421, 422, 423, 426, 430, 431, 432, 434, 435, 436, 437, 438, 439, 440, 442, 443, 444, 445, 446, 447, 448, 450, 451, 452, 453, 454, 455, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 470, 471, 472, 473, 475, 477, 479, 480, 481, 483, 494, 495, 509, 511, 512, 513, 514, 515, 516, 517, 518, 519, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 542, 543, 544, 545, 546, 547, 548, 549, 550, 552, 553, 555], "python3": [326, 394, 430, 431, 434, 435, 436, 437, 438, 439, 440, 442, 443, 444, 445, 446, 447, 448, 450, 452, 453, 454, 455, 457, 458, 459, 460, 462, 463, 464, 465, 466, 468, 470, 471, 472, 473, 479, 480, 481, 519, 527, 530, 543], "python_execut": [430, 431, 434, 435, 436, 437, 438, 439, 440, 442, 443, 444, 445, 446, 447, 448, 452, 453, 454, 455, 457, 458, 459, 460, 462, 463, 464, 465, 466, 468, 470, 471, 472, 473, 479, 480, 481], "python_vers": [430, 431, 434, 435, 436, 437, 438, 439, 440, 442, 443, 444, 445, 446, 447, 448, 452, 453, 454, 455, 457, 458, 459, 460, 462, 463, 464, 465, 466, 468, 470, 471, 472, 473, 479, 480, 481], "pytorch": 379, "pyx": [364, 391], "pyyaml": [360, 378, 401, 405], "q": [26, 79, 83, 86, 356, 457], "qtabl": [83, 86, 376], "quadrat": [463, 473, 481, 558], "qualiti": [192, 381, 420, 421, 426, 467, 480, 495, 553, 560], "quantifi": [427, 445, 451, 468], "quantiti": [13, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 45, 46, 47, 50, 51, 52, 53, 54, 69, 71, 72, 76, 79, 82, 83, 84, 86, 89, 91, 95, 97, 98, 100, 101, 103, 104, 105, 107, 108, 112, 114, 116, 117, 118, 119, 120, 121, 122, 124, 125, 126, 127, 128, 129, 130, 132, 133, 136, 137, 138, 139, 140, 141, 143, 144, 145, 147, 150, 151, 152, 153, 154, 155, 156, 158, 167, 168, 169, 171, 175, 176, 177, 178, 181, 182, 183, 184, 186, 187, 188, 191, 192, 193, 194, 195, 196, 197, 198, 201, 203, 205, 206, 208, 209, 210, 211, 212, 213, 215, 216, 217, 218, 220, 221, 222, 223, 224, 225, 226, 227, 228, 230, 233, 234, 236, 237, 238, 239, 240, 241, 244, 245, 246, 247, 248, 249, 251, 252, 253, 254, 257, 258, 259, 260, 261, 262, 266, 272, 273, 274, 277, 278, 279, 280, 286, 289, 290, 292, 294, 296, 297, 302, 320, 322, 323, 332, 336, 361, 362, 367, 370, 372, 375, 376, 377, 379, 384, 385, 388, 389, 403, 405, 409, 412, 413, 421, 422, 423, 430, 438, 446, 447, 448, 451, 458, 459, 461, 462, 463, 464, 466, 470, 472, 473, 481, 487, 488, 489, 491, 495, 508, 534, 543, 545, 554, 557, 559], "quantity_support": [461, 512], "quasar": 128, "quentin": [379, 383, 384, 404, 405, 406, 407, 408, 409, 412, 414, 415, 423, 424, 425, 426, 427], "queri": [377, 417, 458], "question": [329, 364, 366, 368, 369, 370, 372, 373, 374, 375, 378, 380, 385, 396, 401, 402, 420, 421, 422, 444, 481, 495, 496, 555], "questionnair": [368, 420], "quetin": 406, "quick": [79, 84, 97, 100, 104, 105, 137, 138, 140, 141, 142, 143, 144, 145, 150, 151, 152, 153, 154, 156, 361, 364, 381, 391, 438, 439, 442, 444, 446, 454, 459, 461, 465, 470, 472, 473, 475, 481, 483, 492], "quickest": 362, "quickli": [361, 362, 364, 366, 377, 378, 381, 387, 391, 393, 419, 434, 442, 451, 472, 499, 555], "quicklook": 79, "quickplot": 184, "quicksort": [83, 86], "quickstart": 398, "quiescent": 521, "quit": [83, 86, 361, 389, 446], "quival": 372, "quot": [71, 264, 361, 362, 457], "r": [17, 18, 21, 22, 24, 25, 26, 27, 28, 30, 35, 36, 39, 40, 51, 53, 54, 82, 83, 86, 145, 180, 193, 291, 361, 362, 386, 391, 435, 443, 447, 460, 462, 479, 485, 500, 504, 512, 513, 514, 518, 521], "r68": [79, 107, 144, 153, 156], "r70": [65, 458], "r_": [17, 18, 21, 22, 24, 25, 27, 28, 35, 36, 39, 40, 50, 52, 53, 245, 246, 457, 514, 517, 518], "r_0": [30, 33, 38, 48, 212, 223, 245, 465, 512, 514, 518], "r_1": [39, 48], "r_eval": 223, "r_exp": [36, 48], "r_in": [44, 158, 168, 245, 440, 505], "r_m": 514, "r_out": 44, "r_out_max": 158, "r_out_pwn": 43, "r_sun": 38, "ra": [65, 79, 81, 83, 84, 86, 89, 132, 133, 166, 361, 362, 374, 377, 430, 434, 436, 438, 440, 444, 447, 452, 453, 455, 458, 462, 464, 470, 471, 472, 473, 480, 481, 483, 495, 499, 559], "ra_pnt": 473, "ra_tru": [361, 374], "rad": [33, 79, 84, 97, 100, 104, 105, 107, 108, 144, 150, 152, 153, 154, 155, 156, 166, 179, 247, 377, 414, 426, 436, 459, 461, 462, 471, 500, 501, 504, 548], "rad_axi": [97, 100, 104, 105, 108, 150, 153, 156, 459, 461, 462, 495], "rad_di": [45, 485], "rad_index": 150, "rad_max": [78, 79, 83, 84, 149, 155, 172, 414, 423, 425, 426, 436], "rad_max_2d": [83, 155, 165, 170, 172, 436], "radec": [79, 89, 137, 138, 139, 140, 143, 144, 145, 146, 147, 150, 152, 154, 155, 361, 362, 461, 463, 481], "radecsi": 519, "radesysa": 519, "radi": [234, 531], "radial": [28, 30, 35, 36, 39, 40, 45, 123, 180, 184, 316, 361, 372, 380, 385, 402, 417, 419, 427, 446, 448, 462, 470, 483, 485, 501, 504], "radian": [17, 18, 21, 22, 24, 25, 27, 189, 207, 208, 212, 220, 223, 235, 237, 245, 246, 248, 250, 256, 260], "radiat": [213, 495, 517, 518, 531], "radiative_model": [234, 531], "radii": [27, 457, 471, 513], "radio": [128, 375, 463], "radiobutton": [442, 450, 463, 479, 480], "radiu": [16, 17, 18, 21, 22, 24, 25, 27, 33, 34, 38, 43, 44, 50, 51, 52, 53, 54, 70, 78, 79, 86, 91, 97, 100, 104, 105, 116, 121, 122, 144, 150, 152, 153, 154, 156, 158, 166, 168, 184, 194, 196, 197, 211, 212, 220, 223, 233, 235, 237, 245, 246, 248, 250, 256, 258, 260, 288, 289, 322, 362, 375, 377, 384, 385, 402, 411, 412, 416, 426, 430, 431, 434, 435, 437, 438, 439, 440, 442, 444, 446, 447, 452, 453, 455, 457, 459, 461, 462, 464, 465, 466, 467, 470, 479, 480, 481, 488, 489, 502, 504, 505, 508, 512, 513, 514, 517, 518], "radius_inn": [52, 53], "radius_max": [322, 448], "radius_min": 322, "radius_reverse_shock": [50, 53, 488], "radmax": [414, 415, 426, 427], "radmax2d": [79, 84, 149, 172, 412, 436], "rai": [11, 19, 20, 26, 52, 53, 57, 59, 62, 64, 79, 88, 116, 120, 121, 124, 126, 127, 128, 159, 213, 263, 264, 279, 280, 310, 311, 367, 372, 373, 375, 379, 390, 391, 393, 397, 398, 403, 419, 421, 426, 427, 430, 431, 434, 435, 436, 437, 438, 439, 440, 442, 443, 444, 445, 446, 447, 448, 452, 453, 454, 455, 458, 459, 460, 462, 463, 464, 465, 466, 467, 468, 470, 471, 472, 473, 479, 480, 481, 483, 485, 486, 490, 491, 492, 495, 498, 500, 502, 504, 505, 521, 552, 553, 554, 555, 556, 557, 560], "rais": [16, 26, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 70, 80, 82, 83, 86, 87, 95, 99, 118, 185, 190, 211, 213, 233, 256, 257, 258, 260, 290, 339, 361, 375, 384, 385, 388, 389, 406, 423, 426, 427, 447], "raise_error": [16, 80, 99, 118], "raj2000": [458, 481], "ran": 470, "random": [6, 33, 42, 45, 46, 47, 83, 86, 97, 98, 100, 103, 104, 105, 142, 153, 156, 183, 184, 186, 192, 195, 196, 210, 218, 222, 224, 225, 226, 241, 247, 259, 262, 273, 312, 313, 314, 315, 316, 317, 318, 319, 320, 364, 373, 374, 377, 404, 416, 420, 446, 466, 495, 556, 557, 559], "random_se": 373, "random_st": [33, 42, 45, 46, 47, 97, 98, 100, 103, 104, 105, 142, 153, 156, 183, 184, 186, 192, 195, 196, 210, 218, 222, 224, 225, 226, 241, 247, 259, 262, 273, 312, 313, 314, 317, 318, 319, 320, 361, 374, 437, 446, 447], "randomli": [46, 361], "randomnumb": 317, "randomst": [33, 42, 45, 46, 47, 97, 98, 100, 103, 104, 105, 142, 153, 156, 183, 184, 186, 192, 195, 196, 210, 218, 222, 224, 225, 226, 241, 247, 259, 262, 273, 312, 314, 317, 318, 319, 320, 361], "rang": [17, 18, 19, 20, 21, 22, 24, 25, 26, 27, 65, 69, 71, 72, 76, 79, 83, 86, 87, 95, 96, 97, 100, 104, 105, 120, 140, 153, 155, 156, 169, 181, 182, 185, 187, 188, 191, 192, 194, 201, 203, 205, 206, 209, 210, 212, 213, 215, 216, 217, 218, 221, 222, 224, 225, 226, 227, 228, 230, 233, 234, 236, 238, 239, 240, 241, 244, 247, 249, 251, 252, 253, 254, 257, 258, 259, 261, 262, 266, 315, 317, 318, 319, 354, 361, 367, 373, 374, 376, 385, 403, 408, 409, 412, 420, 421, 423, 431, 434, 436, 437, 439, 442, 443, 445, 447, 451, 453, 454, 455, 458, 459, 460, 461, 463, 464, 466, 467, 468, 471, 472, 479, 480, 481, 491, 493, 495, 514, 524, 553, 557], "rangl": 19, "rapid": [128, 279, 367, 370, 385, 386], "rare": [360, 361, 380, 463], "raster": [90, 184], "rate": [44, 45, 79, 84, 137, 138, 169, 176, 273, 320, 374, 397, 421, 434, 436, 455, 462, 470, 471, 473, 485, 498, 554], "rather": [112, 116, 120, 124, 127, 366, 379, 382, 420, 423, 425, 427, 431, 460, 463, 481, 491, 513, 557], "ratio": [100, 105, 158, 182, 183, 184, 274, 287, 385, 430, 455, 470, 505, 554, 556, 557, 558, 560], "ravel": [182, 446], "raw": [117, 169, 481], "rc": [183, 184, 186, 192, 195, 196, 358, 463], "rc1": 390, "rc_context": [183, 184, 186, 192, 195, 196, 463], "rc_param": [183, 184, 186, 192, 195, 196, 463], "rcparam": 358, "rdbu": 479, "rdbu_r": [97, 100, 104, 105], "re": [83, 86, 91, 119, 120, 125, 160, 183, 184, 186, 192, 195, 196, 200, 288, 289, 354, 361, 362, 364, 366, 368, 369, 375, 376, 377, 379, 382, 383, 384, 385, 393, 395, 396, 400, 412, 414, 421, 432, 434, 435, 440, 442, 443, 444, 454, 460, 461, 465, 467, 471, 479, 481, 493, 495, 516, 555], "reach": [53, 126, 197, 366, 371, 374, 466], "reactiv": 423, "read": [15, 16, 79, 81, 82, 83, 84, 86, 89, 95, 96, 97, 100, 101, 104, 105, 109, 111, 112, 116, 117, 119, 121, 123, 125, 127, 132, 133, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 147, 148, 150, 151, 152, 153, 154, 155, 156, 165, 183, 184, 186, 190, 191, 192, 195, 196, 211, 213, 225, 233, 259, 260, 261, 265, 267, 269, 270, 328, 347, 349, 354, 356, 361, 362, 364, 366, 371, 372, 373, 374, 377, 381, 383, 385, 387, 388, 389, 393, 395, 406, 409, 412, 420, 421, 423, 426, 427, 434, 435, 436, 440, 442, 445, 446, 451, 459, 460, 461, 466, 468, 470, 471, 472, 475, 479, 481, 492, 493, 495, 497, 498, 499, 501, 519, 549, 550, 555, 558], "read_arf": 101, "read_bkg": 101, "read_builtin": [213, 521], "read_covari": [211, 233], "read_dataset": 15, "read_lazi": 414, "read_model": 15, "read_pha": 101, "read_rmf": 101, "read_xspec_model": 261, "readabl": [342, 372, 414, 435, 479], "reader": [388, 430, 437, 439, 442, 444, 447, 450, 454, 470], "readi": [371, 388, 396, 554], "readili": 381, "readm": [364, 387], "readthedoc": [13, 120, 176, 191, 200, 261, 364, 381, 403, 418, 460, 461, 470, 492, 506, 508], "real": [51, 361, 364, 391, 437, 438, 440, 447, 460, 464, 491], "realis": [361, 366, 375, 387], "realist": 389, "realiz": [367, 554], "realli": [361, 368, 375, 378, 437, 450, 460], "rearrang": 381, "reason": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 361, 366, 367, 368, 369, 372, 373, 374, 376, 378, 380, 382, 387, 420, 446, 460, 468, 472, 491, 555], "reassign": [19, 20, 26, 205, 206, 207, 208, 209, 210, 211, 212, 213, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 230, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 256, 257, 258, 259, 260, 261, 262], "rebas": [361, 375], "rebin": [119, 135, 376, 414, 427, 451, 453, 459], "rebuild": [16, 80, 99, 118, 443], "recarrai": [83, 86, 144, 154], "receiv": [379, 381, 382, 384, 386], "recent": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 83, 86, 371, 375, 376, 377, 378, 381, 394, 401, 415, 421, 443, 470, 472], "recip": [363, 377, 398, 412, 455, 496, 557], "reco": [97, 100, 104, 105, 140, 173, 361, 367, 376, 385, 422, 423, 430, 459, 462, 472, 554], "reco_exposur": 116, "reco_psf": [97, 100, 104, 105, 108, 462, 472], "recogn": [430, 437, 439, 442, 444, 446, 450, 454, 470], "recognis": [372, 555], "recognit": 387, "recommend": [87, 95, 170, 211, 233, 271, 302, 303, 360, 361, 362, 364, 368, 370, 378, 387, 391, 392, 394, 397, 404, 421, 435, 436, 445, 459, 460, 462, 466, 471, 479, 495, 502, 507, 508, 555, 556, 559], "recomput": [119, 385], "recompute_ul": 119, "recon_vers": [471, 481], "reconstruct": [79, 97, 98, 100, 103, 104, 105, 107, 108, 116, 126, 127, 131, 140, 141, 142, 145, 155, 156, 169, 176, 361, 367, 372, 374, 409, 424, 430, 431, 434, 437, 439, 440, 442, 446, 450, 454, 459, 462, 464, 468, 472, 491, 493, 499, 500, 501, 508, 554], "recopsfmap": [149, 423, 426], "record": [79, 84, 361, 366, 367, 387], "recov": 377, "rectangl": [208, 212, 220, 223, 235, 245, 246, 250, 256, 260, 323, 375, 448, 504], "rectangleskyregion": [194, 207, 208, 260, 322, 323, 375, 431, 457, 464, 504, 508], "rectangular": [448, 504, 508], "recurr": 376, "recurs": [329, 388], "red": [96, 273, 279, 351, 430, 437, 440, 442, 445, 457, 467, 468, 512, 513], "redesign": 370, "redistribut": 499, "redo": 455, "redshift": [19, 20, 213, 384, 481, 521], "reduc": [6, 11, 15, 95, 97, 100, 104, 105, 151, 153, 156, 161, 171, 183, 184, 186, 188, 192, 195, 196, 367, 368, 370, 372, 373, 377, 380, 382, 387, 388, 393, 400, 405, 412, 421, 427, 429, 431, 432, 435, 436, 437, 442, 443, 446, 450, 452, 453, 454, 464, 467, 469, 472, 475, 491, 495, 500, 505, 507, 508, 513, 514, 552, 553, 554, 555], "reduce_data": 377, "reduce_over_ax": [183, 184, 186, 192, 195, 196, 439, 462, 472], "reduct": [6, 11, 159, 367, 373, 374, 377, 381, 382, 383, 388, 393, 406, 408, 426, 429, 440, 444, 445, 448, 455, 459, 461, 464, 465, 467, 469, 475, 491, 492, 495, 502, 504, 505, 507, 553, 554], "ref": [79, 89, 97, 104, 116, 121, 127, 182, 191, 194, 211, 233, 385, 444, 448, 458, 459, 461, 463, 471, 481, 508, 543, 544, 545, 546, 547, 548, 554, 555], "ref_templ": [16, 80, 99, 118], "refactor": [361, 373, 375, 376, 377, 384, 402, 403, 404, 406, 407, 408, 409, 412, 414, 416, 418, 420], "refer": [16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 50, 52, 53, 57, 59, 62, 65, 67, 79, 80, 81, 82, 83, 84, 86, 89, 96, 97, 99, 100, 101, 104, 105, 107, 108, 117, 118, 119, 120, 122, 127, 128, 145, 159, 160, 163, 166, 167, 170, 171, 172, 175, 176, 178, 193, 194, 195, 196, 200, 205, 206, 209, 210, 213, 215, 216, 217, 218, 221, 222, 224, 225, 226, 227, 228, 230, 234, 236, 238, 239, 240, 241, 244, 247, 249, 251, 252, 253, 254, 257, 259, 261, 262, 264, 273, 275, 279, 280, 281, 286, 287, 317, 318, 342, 343, 344, 345, 361, 362, 367, 369, 372, 373, 375, 377, 379, 384, 385, 386, 387, 388, 391, 398, 412, 419, 420, 431, 432, 434, 435, 436, 437, 439, 442, 443, 444, 445, 446, 447, 450, 451, 452, 453, 454, 455, 458, 459, 460, 462, 463, 465, 466, 468, 470, 471, 472, 479, 480, 481, 484, 491, 493, 506, 507, 508, 511, 512, 513, 514, 515, 516, 517, 518, 519, 521, 523, 525, 526, 527, 529, 530, 532, 533, 535, 536, 537, 538, 539, 540, 542, 543, 544, 545, 546, 547, 548, 549, 550, 557, 559], "referenc": [361, 554], "reference_flux": [19, 20, 26, 205, 206, 209, 213, 215, 216, 217, 221, 227, 228, 230, 234, 236, 238, 239, 240, 244, 249, 251, 252, 253, 254, 257, 261], "reference_map": 463, "reference_model": [117, 119, 430, 443], "reference_model_default": [117, 119], "reference_spectral_model": [117, 119], "reference_tim": [82, 84, 97, 100, 104, 105, 193, 210, 218, 222, 224, 225, 226, 241, 247, 259, 262, 425, 426, 447, 451, 454, 462, 463, 550], "reflect": [161, 165, 166, 167, 171, 180, 370, 375, 377, 380, 382, 393, 405, 412, 414, 417, 418, 421, 431, 434, 435, 436, 444, 453, 464, 503, 554], "reflected_bkg_mak": 462, "reflectedbgestim": 377, "reflectedregionsbackgroundmak": [161, 166, 406, 431, 434, 436, 444, 453, 462], "reflectedregionsfind": [165, 171, 404, 504], "refpix": [194, 195, 196], "refresh": [83, 86], "refus": 361, "reg": [97, 100, 104, 105, 464, 466], "reg_dataset": 459, "regard": [385, 388, 434], "regardless": [83, 86], "regeard": [424, 425, 426, 427], "regi": [367, 372, 373, 377], "region": [6, 27, 79, 86, 95, 97, 100, 102, 104, 105, 109, 111, 121, 123, 126, 128, 141, 142, 148, 153, 156, 158, 159, 160, 163, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 176, 177, 180, 182, 183, 184, 186, 191, 192, 194, 195, 196, 198, 200, 207, 208, 211, 212, 220, 223, 233, 235, 237, 245, 246, 248, 250, 256, 258, 260, 261, 263, 274, 287, 321, 322, 323, 324, 325, 357, 358, 360, 362, 365, 367, 368, 376, 377, 378, 380, 383, 385, 393, 404, 405, 406, 408, 412, 414, 415, 417, 418, 420, 421, 423, 425, 426, 435, 437, 438, 439, 440, 442, 443, 444, 445, 446, 447, 448, 452, 453, 454, 455, 457, 458, 459, 460, 463, 466, 468, 470, 471, 472, 473, 479, 480, 481, 490, 491, 492, 493, 495, 502, 503, 505, 506, 507, 512, 513, 531, 553, 554, 556, 557, 558], "region_coord": 191, "region_ev": 455, "region_find": [165, 436], "region_io": 191, "region_map": [192, 196, 508], "region_map_1": 508, "region_map_2": 508, "region_mask": [79, 182, 194, 375, 434, 440, 444, 459, 462, 464, 480, 502, 504, 505], "region_nd_map": 192, "region_new": 324, "region_pix": 466, "region_weight": 194, "regionfind": [166, 167, 171], "regiongeom": [97, 100, 104, 105, 117, 121, 163, 170, 172, 173, 174, 176, 177, 192, 208, 212, 220, 223, 235, 245, 246, 248, 250, 256, 260, 375, 376, 383, 393, 408, 409, 412, 430, 431, 434, 436, 437, 444, 448, 453, 454, 455, 458, 459, 462, 471, 481, 491, 504, 507], "regionndmap": [26, 101, 104, 105, 126, 164, 165, 170, 172, 183, 184, 186, 191, 195, 196, 208, 212, 220, 223, 225, 235, 245, 246, 250, 256, 257, 260, 358, 375, 393, 408, 409, 412, 415, 423, 426, 447, 471, 491, 550], "regions_ds9": 464, "regionsfind": [165, 166, 171, 414], "regist": 466, "registri": [55, 93, 113, 149, 161, 229, 231, 242, 243, 255, 382, 389, 405, 408, 409, 412, 421, 458, 466], "regress": 364, "regul": 387, "regular": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 182, 190, 194, 370, 389, 414, 426, 450, 463, 464], "regulargridinterpol": [261, 302, 361], "regularis": 389, "regularli": [389, 473], "reichardt": 416, "reimplement": 372, "rej_sampl": 374, "reject": [365, 366, 374], "rel": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 65, 78, 83, 84, 86, 100, 101, 105, 127, 137, 138, 139, 140, 143, 144, 145, 147, 150, 152, 154, 155, 182, 183, 184, 186, 191, 192, 193, 194, 195, 196, 245, 264, 278, 320, 376, 387, 412, 451, 454, 472, 518, 557], "rel_reduction_of_f_": 460, "relat": [11, 13, 65, 79, 81, 199, 279, 367, 369, 372, 374, 375, 378, 380, 381, 382, 387, 391, 408, 409, 421, 427, 446, 459, 466, 470, 485, 552, 557], "relative_variability_amplitud": 451, "relative_variability_error": 451, "relative_variability_signific": 451, "relativist": 531, "releas": [11, 51, 63, 90, 363, 365, 366, 368, 369, 375, 378, 379, 388, 392, 393, 394, 395, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 431, 434, 435, 443, 452, 453, 470, 472, 473, 479, 480, 483, 495, 497, 498, 499, 501], "relev": [117, 272, 274, 344, 361, 367, 376, 381, 385, 390, 434, 435, 438, 452, 453, 454, 465, 467, 470, 472, 473, 479, 480, 491, 492, 559], "reli": [117, 361, 366, 367, 371, 372, 376, 380, 385, 386, 404, 409, 412, 423, 432, 442, 464, 483, 557], "reliabl": [364, 394, 440, 460, 464, 556], "remain": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 83, 86, 95, 366, 367, 368, 369, 374, 378, 387, 402, 421, 436, 465, 501], "remark": 436, "rememb": [361, 375, 460, 475, 555], "remi": [383, 384, 404, 405, 406, 407, 408, 409, 412, 423, 424, 425, 426, 427], "remind": [387, 444, 559], "remnant": [28, 52, 431, 445, 466, 486], "remot": 364, "remov": [13, 83, 86, 87, 91, 95, 120, 121, 124, 153, 156, 168, 181, 182, 187, 190, 191, 194, 196, 201, 203, 233, 289, 364, 368, 369, 371, 372, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 392, 401, 402, 403, 404, 405, 406, 407, 408, 409, 412, 413, 414, 416, 417, 418, 419, 420, 421, 424, 425, 426, 427, 434, 440, 455, 459, 464, 467, 470, 484, 495, 504], "remove_column": [83, 86], "remove_indic": [83, 86], "remove_row": [83, 86], "renam": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 83, 86, 119, 181, 182, 183, 184, 186, 187, 188, 191, 192, 194, 195, 196, 364, 371, 372, 380, 381, 384, 400, 403, 405, 406, 407, 408, 412, 422, 423, 426, 555], "rename_ax": [181, 182, 183, 184, 186, 187, 191, 192, 194, 195, 196, 423], "rename_column": [83, 86, 119], "rename_dupl": [83, 86], "render": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 83, 86, 339, 361, 369, 420], "renorm": [440, 502], "renormalis": 168, "reoptim": [120, 124, 125, 200, 402, 448, 452, 460, 468, 479], "reorder_ax": [183, 184, 186, 192, 195, 196, 426], "reorgan": 412, "reorganis": 381, "repeat": [362, 442, 472], "repl": 361, "replac": [15, 16, 80, 83, 86, 95, 97, 99, 100, 104, 105, 118, 141, 142, 148, 153, 181, 182, 184, 187, 191, 192, 194, 196, 258, 270, 361, 371, 372, 375, 379, 382, 388, 394, 403, 404, 406, 408, 409, 426, 427, 446, 455], "replace_axi": [181, 182, 191, 194], "replace_column": [83, 86], "repo": [362, 369, 390, 391, 400, 413], "report": [83, 364, 377, 390, 391, 400, 414, 415, 420], "repositori": [83, 86, 361, 364, 366, 369, 371, 387, 390, 412, 421, 446, 473], "repres": [13, 16, 19, 20, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 47, 57, 58, 59, 60, 61, 62, 63, 64, 65, 68, 69, 70, 71, 72, 73, 74, 75, 76, 80, 83, 86, 97, 99, 100, 104, 105, 118, 182, 184, 186, 188, 189, 191, 193, 201, 205, 208, 209, 212, 213, 215, 216, 217, 218, 220, 221, 222, 223, 224, 225, 226, 227, 228, 230, 237, 238, 239, 240, 241, 244, 245, 246, 247, 248, 249, 252, 253, 254, 259, 260, 290, 298, 308, 361, 372, 373, 374, 375, 379, 382, 383, 384, 385, 402, 426, 447, 448, 458, 460, 462, 463, 464, 466, 471, 481, 490, 491, 493, 497, 498, 499, 501, 507, 552, 553, 554, 559], "represent": [16, 19, 20, 26, 79, 80, 82, 83, 86, 99, 118, 205, 206, 209, 213, 215, 216, 217, 221, 227, 228, 230, 234, 236, 238, 239, 240, 244, 249, 251, 252, 253, 254, 257, 261, 361, 375, 388, 402, 404, 426, 432, 458, 463, 466, 507], "reprocess": 367, "reproduc": [89, 96, 119, 362, 377, 378, 379, 381, 387, 388, 392, 394, 421, 462, 483], "reproject": [169, 183, 184, 186, 192, 195, 196, 357, 361, 367, 375, 378, 385, 406, 413, 421, 423, 427, 463, 464], "reproject_by_imag": [183, 184, 186, 192, 195, 196, 427], "reproject_to_geom": [183, 184, 186, 192, 195, 196, 423], "request": [81, 117, 119, 362, 365, 366, 368, 369, 370, 371, 372, 373, 375, 381, 385, 386, 387, 389, 391, 399, 446, 464, 483, 493], "requir": [16, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 43, 44, 78, 79, 80, 81, 83, 84, 86, 90, 97, 99, 100, 104, 105, 106, 110, 118, 119, 122, 127, 137, 138, 144, 152, 160, 183, 184, 185, 186, 187, 188, 191, 192, 193, 195, 196, 197, 290, 336, 340, 341, 359, 366, 367, 368, 370, 371, 372, 373, 374, 375, 376, 377, 383, 384, 385, 386, 387, 389, 390, 392, 394, 400, 405, 406, 407, 408, 413, 414, 416, 417, 418, 419, 422, 423, 424, 431, 436, 440, 443, 451, 453, 454, 455, 459, 461, 463, 464, 466, 470, 480, 493, 495, 508], "require_ev": 78, "required_ax": [137, 138, 139, 140, 141, 142, 143, 144, 145, 147, 148, 150, 152, 153, 154, 155, 156, 461], "required_hdu": 415, "required_irf": [16, 78, 435, 436, 439, 440, 442, 479], "required_nam": [185, 187, 188, 193], "required_paramet": [144, 152, 154], "rerun": 376, "resampl": [97, 100, 104, 105, 119, 135, 136, 141, 181, 182, 183, 184, 185, 186, 187, 191, 192, 194, 195, 196, 356, 412, 414, 451, 495], "resample_axi": [119, 181, 182, 183, 184, 186, 191, 192, 194, 195, 196, 356, 409, 451, 453], "resample_energy_axi": [97, 100, 104, 105, 141, 409, 414, 459], "resample_energy_edg": [434, 495], "resampled_energy_edg": 136, "resampled_map": [183, 184, 186, 192, 195, 196], "rescal": 462, "research": [377, 387], "reset": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 97, 100, 104, 105, 219, 258, 362, 409], "reset_data_cach": [97, 100, 104, 105], "reset_to_default": 219, "reshap": [183, 184, 186, 192, 195, 196, 430, 447, 461, 463], "resid": [383, 466], "residu": [70, 96, 97, 100, 104, 105, 160, 372, 373, 377, 404, 409, 415, 422, 440, 459, 460, 471, 491, 504, 554], "resolut": [52, 140, 141, 145, 182, 194, 370, 372, 374, 375, 420, 426, 458, 471], "resolv": [16, 80, 99, 118, 362, 364, 371, 375, 376, 383, 384, 396, 402, 421], "resort": 439, "resourc": [420, 475], "respect": [15, 16, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 47, 79, 80, 83, 86, 99, 101, 118, 119, 128, 182, 184, 194, 196, 271, 371, 376, 387, 389, 409, 438, 440, 454, 463, 464, 472, 493, 508, 558], "respond": 387, "respons": [6, 103, 140, 141, 142, 145, 147, 148, 166, 361, 367, 368, 370, 372, 373, 374, 376, 377, 385, 387, 393, 419, 420, 421, 422, 431, 434, 435, 436, 437, 450, 454, 461, 462, 465, 470, 473, 475, 479, 480, 491, 492, 497, 499, 501, 553, 554], "rest": [26, 364, 378, 380, 458, 490], "restor": [19, 20, 26, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 202, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 230, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 256, 257, 258, 259, 260, 261, 262, 465], "restore_statu": [202, 204, 211, 233, 468], "restore_valu": [202, 204, 211, 233], "restrict": [83, 86, 375, 442, 459, 464], "restructur": [362, 376, 377, 378, 380, 382, 388, 391, 406, 412, 413, 414, 415, 417, 426], "result": [16, 46, 71, 80, 82, 83, 86, 87, 96, 97, 99, 100, 104, 105, 112, 114, 116, 117, 118, 119, 120, 121, 123, 124, 125, 127, 132, 134, 145, 151, 153, 156, 169, 173, 174, 179, 181, 182, 183, 184, 186, 188, 191, 192, 194, 195, 196, 200, 211, 233, 260, 270, 273, 290, 354, 360, 361, 362, 364, 366, 368, 370, 371, 372, 373, 374, 377, 379, 380, 383, 387, 389, 394, 397, 404, 412, 414, 415, 420, 422, 426, 427, 432, 434, 436, 437, 442, 444, 446, 447, 450, 451, 453, 454, 455, 458, 459, 460, 463, 464, 467, 468, 471, 472, 473, 479, 480, 483, 490, 493, 508, 543, 554, 556, 557], "result2": 465, "result_ecpl": 432, "result_joint": [431, 434, 442], "result_list": 354, "result_log_parabola": 432, "result_minuit": 460, "result_pwl": 432, "result_scipi": 460, "result_stack": 434, "results_joint": 443, "results_prior": 468, "results_simplex": 460, "results_t": 445, "retain": [458, 508], "retriev": [83, 86, 385, 387, 431, 432, 434, 463, 466, 467, 472, 480, 492, 507, 508], "return": [16, 19, 20, 26, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 43, 44, 45, 46, 47, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 76, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 91, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 108, 109, 110, 111, 112, 114, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 147, 148, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 230, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 256, 257, 258, 259, 260, 261, 262, 263, 265, 268, 270, 271, 272, 273, 274, 275, 277, 278, 279, 280, 281, 286, 287, 288, 289, 290, 292, 294, 296, 297, 301, 303, 308, 312, 314, 317, 318, 319, 320, 321, 322, 323, 324, 325, 328, 329, 331, 332, 333, 342, 343, 344, 345, 346, 349, 351, 352, 354, 356, 357, 367, 371, 372, 373, 374, 375, 376, 384, 385, 388, 389, 405, 406, 409, 412, 415, 421, 423, 434, 436, 444, 448, 453, 454, 458, 459, 460, 462, 463, 464, 466, 468, 481, 485, 507, 508, 540, 557], "return_delta": 320, "return_diff": 320, "return_unit": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40], "reus": [377, 409, 427], "reval": 514, "revers": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 50, 53, 83, 86, 87, 95, 187, 233, 463, 488], "review": [364, 369, 370, 371, 374, 375, 377, 378, 380, 381, 382, 384, 385, 387, 389, 422, 423, 507], "revis": 381, "revisit": 213, "rework": 407, "rewrit": [367, 370, 377, 407, 417, 418, 420, 421, 422, 555], "rewritten": [419, 422], "rf": 457, "rfmb4d7x": 437, "rgb": [356, 358, 426, 430, 434], "rglob": [78, 446, 470], "rhe": 172, "rho": [17, 18, 21, 22, 23, 24, 25, 27], "rho_": [17, 21, 22, 24, 25, 27, 52, 53], "rich": [361, 377], "rid": 367, "right": [21, 24, 25, 27, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 50, 51, 52, 53, 83, 86, 97, 104, 117, 119, 127, 143, 217, 221, 240, 252, 275, 281, 349, 361, 375, 384, 387, 438, 444, 446, 452, 454, 470, 512, 513, 514, 521, 522, 525, 526, 528, 529, 533, 536, 537, 538, 539, 543, 544, 545, 547, 555, 556, 557, 558], "rightarrow": [518, 558], "rigid": 366, "ring": [100, 116, 158, 161, 168, 182, 183, 184, 367, 370, 377, 380, 393, 402, 406, 408, 418, 419, 420, 421, 429, 441, 445, 464, 475, 491, 494, 503, 506, 507, 554], "ring2dkernel": [158, 168], "ring_background": [429, 440, 441], "ring_bkg_mak": 505, "ring_mak": 440, "ringbackgroundestim": [367, 420], "ringbackgroundmak": [158, 161, 406, 440, 462, 505], "rise": [128, 224, 451, 545], "risk": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 364, 387], "rm": [140, 141, 145, 384, 436, 460, 497, 499, 500, 501, 514, 543, 544, 545, 546, 547, 548], "rmax": [17, 18, 21, 22, 24, 25, 27], "rmf": [101, 102, 105, 140, 141, 142, 418, 434], "rmf_ob": 101, "rmffile": 101, "rmin": [17, 18, 21, 22, 24, 25, 27], "rng": [33, 42, 45, 46, 47, 97, 98, 100, 103, 104, 105, 142, 153, 156, 183, 184, 186, 192, 195, 196, 210, 218, 222, 224, 225, 226, 241, 247, 259, 262, 273, 312, 314, 317, 318, 319, 320, 361], "roadmap": [365, 368, 377, 386, 401, 422], "roberta": [420, 421], "robust": [361, 421], "roi": [65, 377, 458, 473, 554], "roi_max": 377, "role": [420, 462], "rolf": 400, "rolk": 554, "rolke2005": [554, 557], "roll": 471, "room": 371, "root": [19, 20, 26, 117, 118, 127, 205, 206, 209, 213, 215, 216, 217, 221, 227, 228, 230, 234, 236, 238, 239, 240, 244, 249, 251, 252, 253, 254, 257, 261, 282, 285, 361, 379, 412, 438, 483, 493, 555, 557], "rosillo": 423, "rotang": 447, "rotat": [51, 54, 166, 167, 171, 176, 212, 220, 223, 447, 504, 512, 513], "rough": [70, 377], "roughli": [112, 364, 369, 375, 377, 380, 381, 419, 440], "round": [83, 86, 183, 184, 186, 188, 192, 195, 196, 434, 507], "round_to_edg": [181, 182, 191, 194], "round_trip": [16, 80, 99, 118], "routin": 400, "row": [56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 83, 86, 132, 140, 298, 332, 355, 376, 385, 388, 423, 426, 437, 447, 448, 458, 460, 463, 470, 472, 473, 481, 490], "row_idx": [65, 83], "row_index": [56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 458], "row_label": 355, "row_specifi": [79, 83, 86], "royalblu": 455, "rpovid": 376, "rspec": [65, 458], "rst": [364, 366, 381, 387, 390, 391, 407, 412], "rtd": 421, "rtol": [127, 336, 361], "rtol_ax": [137, 138, 139, 140, 143, 144, 145, 147, 150, 152, 154, 155, 182, 183, 184, 186, 191, 192, 194, 195, 196], "rtol_wc": 194, "ruben": 420, "rub\u00e9n": 420, "ruiz": [369, 377, 381, 401, 402, 403, 404, 405, 406, 407, 408, 409, 412, 414, 420, 421, 422], "rule": [83, 86, 248, 266, 301, 387, 463, 507], "run": [16, 78, 79, 80, 84, 88, 96, 98, 99, 103, 112, 114, 115, 116, 118, 120, 121, 123, 124, 125, 126, 127, 132, 133, 158, 159, 160, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 181, 182, 191, 194, 200, 310, 311, 335, 354, 360, 361, 362, 368, 369, 371, 374, 376, 377, 378, 381, 383, 385, 389, 390, 391, 392, 397, 403, 404, 407, 408, 419, 421, 422, 426, 430, 431, 432, 437, 438, 439, 440, 442, 443, 444, 446, 450, 451, 453, 454, 455, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 470, 471, 472, 473, 475, 477, 480, 481, 491, 492, 493, 495, 500, 502, 504, 505, 511, 512, 513, 514, 515, 516, 517, 518, 519, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 542, 543, 544, 545, 546, 547, 548, 549, 550], "run_fit": [15, 435, 439, 479], "run_id": [471, 481], "run_multiprocess": 495, "runner": [16, 326, 430, 431, 434, 435, 436, 437, 438, 439, 440, 442, 443, 444, 445, 446, 447, 448, 450, 452, 453, 454, 455, 457, 458, 459, 460, 462, 463, 464, 465, 466, 468, 470, 471, 472, 473, 479, 480, 481, 519, 521, 527, 530, 543, 549, 550], "runtim": [370, 388], "runtimewarn": [436, 446, 473, 543], "rx": 431, "rxj": 431, "rxj1713_2016_250gev": 519, "r\u00e9gi": [367, 370, 371, 375, 376, 378, 380, 382, 383, 384, 385, 386, 388, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 414, 415, 416, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427], "r\u00e9my": [379, 412, 414, 415, 423], "s0167947313003204": 134, "s180": 279, "s2": 259, "s3": 259, "s_0": 495, "s_1": 495, "safari": [83, 86], "safe": [94, 96, 97, 100, 104, 105, 141, 142, 148, 153, 156, 161, 169, 361, 373, 375, 387, 406, 408, 409, 423, 424, 425, 426, 431, 434, 459, 464, 480, 491, 553], "safe_mask": [16, 97, 104, 435, 439, 440, 442, 479], "safe_mask_mak": [159, 431, 455, 462, 502, 504, 505], "safe_mask_mask": [434, 436, 444, 453, 462], "safemask": 472, "safemask_mak": 472, "safemaskconfig": 16, "safemaskmak": [159, 161, 382, 406, 407, 412, 414, 415, 427, 431, 434, 436, 444, 450, 453, 455, 462, 464, 472, 479, 480, 502, 503, 504, 505], "safeti": 387, "sagittariu": [33, 38], "saha": 420, "sai": [71, 366, 380, 555], "said": [361, 366, 368, 472, 473, 555], "sake": [446, 460], "saldana": [213, 214, 426, 521], "saldana21": 521, "same": [27, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 78, 79, 83, 86, 90, 95, 97, 100, 101, 104, 105, 116, 132, 133, 144, 145, 151, 152, 153, 154, 156, 157, 159, 180, 181, 182, 183, 184, 186, 187, 190, 191, 192, 194, 195, 196, 264, 273, 279, 354, 361, 364, 369, 371, 373, 375, 376, 380, 381, 382, 383, 384, 385, 386, 387, 389, 391, 393, 394, 404, 405, 409, 412, 426, 432, 435, 436, 437, 442, 443, 446, 450, 452, 455, 458, 459, 463, 464, 465, 466, 467, 468, 471, 472, 475, 479, 491, 492, 493, 499, 507, 508, 555], "sampl": [47, 88, 98, 103, 127, 142, 144, 150, 152, 153, 154, 156, 183, 184, 186, 192, 194, 195, 196, 210, 218, 222, 224, 225, 226, 241, 247, 259, 262, 271, 273, 303, 312, 317, 318, 319, 320, 365, 373, 375, 376, 379, 381, 393, 400, 402, 404, 405, 408, 414, 421, 423, 426, 427, 429, 436, 449, 451, 459, 460, 475, 491, 492, 495, 500, 503, 507], "sample_axi": 312, "sample_background": [98, 103, 406], "sample_coord": [142, 153, 156, 183, 184, 186, 192, 195, 196, 406, 408, 423], "sample_edisp": [98, 103], "sample_powerlaw": 380, "sample_psf": [98, 103], "sample_sourc": [98, 103], "sample_spher": [416, 559], "sample_tim": [210, 218, 222, 224, 225, 226, 241, 247, 259, 262, 412, 423], "sampler": [98, 312, 370, 374, 408, 412, 446], "sampler_kwarg": 88, "saniti": 420, "satisfi": [136, 160, 182, 183, 184, 290, 465, 495], "save": [15, 19, 20, 26, 79, 95, 127, 198, 200, 205, 206, 207, 208, 209, 210, 211, 212, 213, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 230, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 256, 257, 258, 259, 260, 261, 262, 361, 369, 377, 385, 389, 442, 443, 446, 460, 464, 465, 472, 492], "savefig": [339, 397], "savez": 198, "saw": 398, "sbpl": [249, 384, 466], "sc": [83, 86], "scalar": [83, 86, 151, 182, 183, 184, 186, 192, 195, 196, 290, 380, 414, 425, 427, 463, 507], "scale": [17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 29, 52, 53, 65, 82, 84, 91, 95, 99, 100, 105, 112, 118, 120, 121, 124, 144, 160, 188, 192, 193, 194, 196, 201, 203, 205, 206, 208, 209, 212, 213, 215, 216, 217, 218, 220, 221, 222, 223, 224, 225, 226, 227, 228, 230, 234, 235, 236, 237, 238, 239, 240, 241, 244, 245, 246, 247, 249, 251, 252, 253, 254, 257, 259, 260, 261, 268, 271, 289, 302, 303, 304, 320, 342, 343, 344, 354, 362, 370, 375, 376, 379, 384, 407, 412, 413, 421, 424, 425, 426, 435, 438, 447, 448, 451, 452, 453, 454, 457, 458, 461, 462, 463, 466, 467, 468, 470, 479, 481, 483, 521, 542, 543, 544, 545, 546, 547, 548, 549, 550], "scale10": [19, 20, 201, 203, 205, 208, 209, 212, 213, 215, 216, 217, 218, 220, 221, 222, 223, 224, 225, 226, 227, 228, 230, 237, 238, 239, 240, 241, 244, 245, 246, 247, 249, 252, 253, 254, 259, 260, 389, 531], "scale_method": [19, 20, 201, 203, 205, 208, 209, 212, 213, 215, 216, 217, 218, 220, 221, 222, 223, 224, 225, 226, 227, 228, 230, 237, 238, 239, 240, 241, 244, 245, 246, 247, 249, 252, 253, 254, 259, 260, 389, 531], "scale_to_local_dens": [17, 18, 21, 22, 24, 25, 27, 457], "scaled_featur": 289, "scaled_features_irf": [288, 289, 467], "scaledregulargridinterpol": [66, 213, 407, 422], "scalespectralmodel": [120, 121, 124, 243, 384, 466], "scan": [19, 20, 90, 117, 119, 120, 121, 124, 125, 200, 201, 203, 205, 208, 209, 212, 213, 215, 216, 217, 218, 220, 221, 222, 223, 224, 225, 226, 227, 228, 230, 237, 238, 239, 240, 241, 244, 245, 246, 247, 249, 252, 253, 254, 259, 260, 376, 385, 412, 448, 453, 468, 493, 495], "scan_max": [19, 20, 120, 124, 201, 203, 205, 208, 209, 212, 213, 215, 216, 217, 218, 220, 221, 222, 223, 224, 225, 226, 227, 228, 230, 237, 238, 239, 240, 241, 244, 245, 246, 247, 249, 252, 253, 254, 259, 260, 453, 460], "scan_min": [19, 20, 120, 124, 201, 203, 205, 208, 209, 212, 213, 215, 216, 217, 218, 220, 221, 222, 223, 224, 225, 226, 227, 228, 230, 237, 238, 239, 240, 241, 244, 245, 246, 247, 249, 252, 253, 254, 259, 260, 460], "scan_n_sigma": [19, 20, 201, 203, 205, 208, 209, 212, 213, 215, 216, 217, 218, 220, 221, 222, 223, 224, 225, 226, 227, 228, 230, 237, 238, 239, 240, 241, 244, 245, 246, 247, 249, 252, 253, 254, 259, 260, 460], "scan_n_valu": [19, 20, 120, 124, 125, 201, 205, 208, 209, 212, 213, 215, 216, 217, 218, 220, 221, 222, 223, 224, 225, 226, 227, 228, 230, 237, 238, 239, 240, 241, 244, 245, 246, 247, 249, 252, 253, 254, 259, 260, 460, 468], "scan_prior": 468, "scan_valu": [19, 20, 201, 203, 205, 208, 209, 212, 213, 215, 216, 217, 218, 220, 221, 222, 223, 224, 225, 226, 227, 228, 230, 237, 238, 239, 240, 241, 244, 245, 246, 247, 249, 252, 253, 254, 259, 260, 448, 460], "scargl": [376, 420, 451], "scatter": [211, 233, 382, 438, 444, 512, 513], "scenario": [83, 86, 366, 373, 383, 393, 463, 466, 484, 556], "scengin": [83, 86], "schedul": 370, "schema": [15, 16, 80, 99, 118, 377, 380], "schema_gener": [16, 80, 99, 118], "schema_json": [16, 80, 99, 118], "scheme": [16, 80, 99, 101, 102, 118, 182, 183, 184, 193, 225, 361, 367, 371, 373, 376, 383, 384, 385, 386, 388, 405, 412, 423, 427, 447, 461, 463, 466, 495, 500, 506, 507, 509], "school": 387, "scienc": [134, 183, 184, 186, 195, 196, 368, 370, 374, 377, 378, 381, 387, 398, 420, 421, 437, 443, 454, 463, 466, 467, 470, 471, 475, 483, 495, 529, 554, 555], "sciencedirect": 134, "scientif": [362, 368, 384, 387, 394], "scikit": [132, 361, 375, 378, 381, 421, 464], "scipi": [19, 20, 26, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 196, 200, 205, 206, 209, 213, 215, 216, 217, 221, 227, 228, 230, 234, 236, 238, 239, 240, 244, 249, 251, 252, 253, 254, 257, 259, 261, 288, 302, 341, 354, 360, 361, 364, 370, 375, 378, 379, 381, 387, 398, 402, 403, 404, 405, 417, 418, 419, 422, 424, 430, 431, 434, 435, 436, 437, 438, 439, 440, 442, 443, 444, 445, 446, 447, 448, 452, 453, 454, 455, 457, 458, 459, 460, 462, 463, 464, 465, 466, 468, 470, 471, 472, 473, 479, 480, 481, 552, 557], "scipy_mvn": 199, "scipy_opt": 460, "scitool": 534, "scope": [374, 375, 376, 377, 380, 388, 484], "scratch": [143, 361, 371, 375, 391, 442, 464], "screen": [83, 86, 463, 481], "script": [6, 83, 86, 119, 326, 327, 328, 329, 330, 362, 367, 368, 370, 372, 375, 377, 380, 381, 387, 390, 391, 401, 402, 403, 404, 412, 413, 417, 420, 421, 422, 423, 427, 429, 434, 438, 440, 442, 443, 444, 445, 446, 448, 453, 454, 457, 458, 459, 460, 462, 468, 471, 476, 479, 494, 495, 555], "scriptabl": 388, "scutum": [33, 38], "sdist": 391, "seaborn": 495, "search": [83, 86, 272, 274, 326, 361, 362, 397, 420, 421, 435, 438, 444, 445, 457, 458, 467, 479, 480, 481, 483, 495, 555], "season": 381, "sebastian": 412, "sec": [54, 79, 89, 95, 124, 320], "second": [42, 58, 79, 82, 83, 84, 86, 140, 259, 320, 323, 338, 342, 345, 350, 362, 369, 371, 373, 375, 379, 385, 387, 391, 406, 425, 434, 435, 438, 440, 442, 444, 445, 446, 447, 448, 453, 454, 457, 459, 460, 462, 463, 468, 470, 475, 479, 490, 556, 559], "secpl": [252, 253, 254, 384, 466], "section": [19, 83, 86, 273, 275, 281, 361, 362, 364, 366, 375, 377, 378, 380, 384, 387, 391, 409, 422, 437, 442, 446, 447, 450, 454, 458, 460, 464, 465, 466, 481, 483, 484, 495, 508, 553, 555, 559], "secur": 464, "sed": [113, 116, 117, 118, 119, 121, 127, 192, 213, 360, 377, 379, 385, 393, 400, 419, 432, 448, 458, 459, 479, 481, 493], "sed_fit": [429, 432, 433], "sed_fitting_gammacat_fermi": 381, "sed_typ": [19, 20, 26, 117, 118, 119, 205, 206, 209, 213, 215, 216, 217, 221, 227, 228, 230, 234, 236, 238, 239, 240, 244, 249, 251, 252, 253, 254, 257, 261, 412, 430, 432, 434, 435, 436, 443, 444, 448, 452, 454, 458, 481, 493, 495, 531], "sed_type_init": [69, 71, 72, 74, 117, 118, 119], "sed_type_plot_default": [117, 119], "sedov": [52, 53], "sedov_taylor_begin": [52, 53, 489], "sedov_taylor_end": [52, 53, 489], "sedtypeenum": 118, "see": [11, 13, 19, 20, 26, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 50, 64, 78, 79, 81, 83, 85, 86, 90, 94, 95, 96, 97, 100, 104, 105, 112, 114, 116, 119, 120, 121, 124, 126, 127, 134, 137, 138, 139, 140, 141, 142, 143, 144, 145, 147, 148, 150, 152, 153, 154, 155, 156, 159, 166, 168, 176, 181, 182, 184, 186, 188, 189, 191, 194, 196, 200, 201, 202, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 215, 216, 217, 218, 220, 221, 222, 223, 224, 225, 226, 227, 228, 230, 233, 234, 235, 236, 237, 238, 239, 240, 241, 244, 245, 246, 247, 248, 249, 251, 252, 253, 254, 257, 258, 259, 260, 261, 265, 275, 281, 283, 284, 287, 290, 298, 314, 329, 351, 352, 360, 361, 362, 364, 365, 366, 368, 369, 370, 371, 374, 375, 376, 377, 378, 379, 381, 382, 386, 387, 388, 389, 390, 391, 393, 394, 396, 397, 399, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 417, 418, 419, 420, 421, 422, 423, 430, 431, 432, 434, 435, 436, 437, 438, 439, 440, 442, 443, 444, 445, 446, 448, 450, 451, 452, 453, 454, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 470, 472, 475, 479, 481, 483, 491, 492, 495, 505, 506, 508, 534, 538, 539, 552, 554, 555, 556, 557, 559], "seed": [33, 42, 45, 46, 47, 97, 98, 100, 103, 104, 105, 142, 153, 156, 183, 184, 186, 192, 195, 196, 210, 218, 222, 224, 225, 226, 234, 241, 247, 259, 262, 273, 312, 313, 314, 317, 318, 319, 320, 361, 420, 446, 531], "seed_photon_field": [234, 531], "seem": [361, 368, 369, 372, 378, 382, 483], "seen": [361, 375, 382, 431, 438, 443, 453, 463, 466, 471], "select": [16, 78, 79, 82, 83, 84, 85, 86, 87, 91, 95, 97, 100, 104, 105, 163, 170, 183, 184, 185, 186, 188, 193, 195, 196, 202, 204, 211, 233, 248, 258, 270, 357, 358, 371, 373, 374, 375, 376, 377, 381, 383, 385, 388, 393, 395, 401, 404, 412, 416, 430, 434, 436, 437, 439, 440, 442, 443, 445, 446, 447, 450, 454, 455, 459, 460, 462, 463, 464, 467, 470, 472, 473, 475, 481, 493, 495, 499, 500, 504, 553, 555], "select_energi": [79, 492], "select_from_geom": [211, 233], "select_map_mask": 402, "select_mask": [79, 211, 233, 412, 465], "select_nested_model": 426, "select_obs_id": [86, 444], "select_observ": [86, 91, 377, 453, 467, 480, 495], "select_offset": [79, 446, 473, 492], "select_paramet": [79, 85, 455, 492], "select_phas": 371, "select_rad_max": 79, "select_rang": 86, "select_region": [79, 85, 211, 233, 375, 404, 412, 446, 447, 455, 465, 481, 492], "select_row_subset": 79, "select_sky_box": 375, "select_sky_circl": [86, 375], "select_tim": [79, 82, 84, 87, 95, 371, 385, 406, 447, 453, 492], "select_time_rang": 86, "selected_energi": 492, "selected_ev": 79, "selected_id": 492, "selected_obs_t": [86, 467, 480], "selected_offset": 492, "selected_region": 492, "selected_tim": 492, "selection_al": [112, 127], "selection_mask": [211, 233, 465], "selection_opt": [16, 112, 114, 115, 116, 120, 121, 123, 124, 125, 126, 127, 412, 434, 435, 439, 440, 442, 443, 444, 448, 452, 453, 454, 455, 464, 472, 479], "selection_vari": 86, "selectionconfig": 16, "selectionslid": [442, 450, 463, 479, 480], "self": [16, 19, 20, 26, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 79, 80, 82, 83, 86, 99, 117, 118, 119, 191, 192, 205, 206, 209, 213, 215, 216, 217, 221, 227, 228, 230, 234, 236, 238, 239, 240, 244, 248, 249, 251, 252, 253, 254, 257, 261, 361, 362, 372, 373, 375, 378, 384, 385, 388, 389, 408, 463, 466], "semant": [375, 386], "semi": 212, "semiaxi": [212, 220, 223, 512, 513, 514], "semilogi": [19, 20, 26, 205, 206, 209, 213, 215, 216, 217, 221, 227, 228, 230, 234, 236, 238, 239, 240, 244, 249, 251, 252, 253, 254, 257, 261, 430, 447], "semimajor": 458, "semiminor": 458, "semver": 386, "send": 390, "sens": [361, 368, 371, 375, 377, 380, 381, 382, 440], "sensibl": 467, "sensit": [113, 116, 117, 118, 119, 126, 264, 374, 381, 407, 409, 419, 420, 426, 427, 429, 433, 450, 470, 475, 483, 491, 500, 503, 507], "sensitivity_estim": 430, "sensitivity_t": 430, "sensitivityestim": [113, 401, 407, 430], "sent": 366, "sentenc": [366, 381, 387], "sep": [191, 370, 378, 384, 399, 466], "separ": [17, 18, 21, 22, 24, 25, 27, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 65, 69, 70, 71, 72, 73, 74, 75, 76, 79, 86, 182, 191, 194, 286, 350, 361, 362, 367, 368, 369, 370, 373, 374, 375, 376, 377, 380, 381, 382, 383, 408, 412, 418, 420, 421, 425, 426, 437, 440, 442, 444, 450, 454, 458, 465, 466, 467, 484, 492, 500, 501, 512, 513, 517, 518, 531, 554], "septemb": [370, 378, 380, 381, 386], "sequenc": [83, 86, 87, 95, 97, 104, 137, 138, 139, 140, 142, 143, 144, 145, 147, 150, 152, 153, 154, 155, 156, 181, 182, 183, 184, 186, 187, 188, 189, 191, 192, 193, 194, 195, 196, 202, 211, 233, 290, 391], "sequenti": [367, 434, 480], "seri": [83, 86, 119, 273, 278, 320, 370, 375, 376, 412, 451], "serial": [16, 80, 83, 86, 94, 95, 96, 97, 99, 100, 104, 105, 118, 367, 372, 376, 377, 382, 385, 405, 408, 412, 414, 421, 423, 424, 425, 426, 427, 463, 466, 468, 483], "serialis": [20, 97, 100, 104, 105, 205, 206, 209, 211, 213, 215, 216, 217, 219, 221, 225, 227, 228, 230, 232, 233, 234, 236, 238, 239, 240, 244, 249, 251, 252, 253, 254, 256, 257, 258, 259, 260, 261, 373, 375, 377, 380, 382, 383, 384, 404, 406, 408, 412, 417, 420, 422, 423, 425, 426, 427, 468, 479, 495, 508, 550], "serializ": [16, 80, 99, 118], "serialize_as_ani": [16, 80, 99, 118], "serialize_method": [83, 86], "serializiaton": 373, "serilis": [26, 207, 208, 210, 212, 218, 220, 222, 223, 224, 226, 235, 237, 241, 245, 246, 247, 248, 250, 257, 260, 262], "sersic": 384, "sersic2d": 384, "sersicspatialmodel": 384, "serv": [83, 86, 361, 366, 373, 377, 385, 391, 414, 457, 499], "server": [383, 393, 395, 475], "servic": 420, "session": [377, 387, 494], "set": [15, 16, 19, 20, 23, 26, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 78, 80, 83, 86, 90, 96, 97, 98, 99, 100, 101, 103, 104, 105, 108, 114, 116, 117, 118, 119, 120, 121, 123, 124, 127, 134, 140, 142, 153, 156, 159, 160, 163, 169, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 199, 200, 201, 202, 203, 204, 205, 208, 209, 211, 212, 213, 215, 216, 217, 218, 220, 221, 222, 223, 224, 225, 226, 227, 228, 230, 233, 234, 235, 237, 238, 239, 240, 241, 244, 245, 246, 247, 249, 250, 252, 253, 254, 256, 259, 260, 261, 270, 310, 312, 361, 362, 367, 370, 371, 373, 374, 376, 377, 378, 379, 381, 385, 386, 387, 388, 389, 391, 393, 395, 408, 414, 416, 418, 420, 423, 426, 427, 430, 431, 434, 436, 437, 438, 439, 442, 444, 445, 446, 447, 448, 452, 453, 455, 458, 459, 460, 462, 464, 466, 467, 468, 470, 472, 473, 475, 483, 491, 492, 495, 504, 506, 507, 508, 531, 552, 555, 558, 559], "set_by_coord": [183, 184, 186, 192, 195, 196, 463, 507], "set_by_idx": [183, 184, 186, 192, 195, 196, 463, 507], "set_by_pix": [183, 184, 186, 192, 195, 196, 507], "set_log": 16, "set_model": [15, 383, 435, 439, 452, 479], "set_models_paramet": 383, "set_parameter_factor": [202, 204], "set_parameters_bound": [211, 233], "set_prior": [233, 389], "set_prop_cycl": 430, "set_slice_arg": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40], "set_subcovari": 199, "set_titl": [431, 434, 438, 440, 444, 455, 457, 460, 461, 462, 465, 504, 514, 518, 521], "set_unit": [432, 495], "set_xlabel": [430, 431, 434, 437, 455, 460, 467, 468], "set_xlim": [432, 435, 443, 455, 497, 521], "set_xscal": [19, 20, 26, 205, 206, 209, 213, 215, 216, 217, 221, 227, 228, 230, 234, 236, 238, 239, 240, 244, 249, 251, 252, 253, 254, 257, 261], "set_xtick": [514, 518], "set_ylabel": [430, 431, 434, 448, 455, 457, 460, 467, 521], "set_ylim": [430, 432, 434, 435, 436, 452, 455, 497, 521], "set_yscal": [19, 20, 26, 205, 206, 209, 213, 215, 216, 217, 221, 227, 228, 230, 234, 236, 238, 239, 240, 244, 249, 251, 252, 253, 254, 257, 261, 448, 457, 497], "set_ytick": [514, 518], "setdefault": 190, "seterr": 361, "setlevel": 444, "setter": [362, 389, 406, 412, 459], "settl": [387, 559], "setup": [13, 363, 364, 365, 368, 373, 374, 378, 381, 389, 418, 422, 475, 555], "setuptool": [413, 555], "sever": [83, 86, 165, 366, 367, 368, 375, 376, 377, 380, 385, 388, 406, 407, 408, 412, 415, 424, 425, 426, 437, 443, 458, 470, 471, 472, 495, 555, 557], "seyfert": 279, "sf": [286, 557], "sgr": 481, "shade": [184, 192, 196, 460, 553], "shall": 364, "shape": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 95, 96, 97, 100, 104, 105, 106, 110, 116, 117, 121, 122, 127, 131, 132, 133, 138, 140, 143, 181, 182, 183, 184, 186, 187, 189, 191, 192, 194, 195, 196, 199, 223, 271, 290, 303, 319, 372, 375, 379, 410, 425, 432, 434, 436, 439, 444, 447, 448, 451, 453, 458, 459, 461, 462, 463, 464, 466, 470, 471, 481, 493, 507, 508, 509, 514, 518], "shape_ax": [182, 194], "share": [183, 184, 186, 190, 192, 195, 196, 361, 366, 373, 376, 380, 383, 394, 412, 414, 426, 442, 443, 464, 465, 495, 555], "sharp": [224, 351, 352, 512], "she": [371, 376], "shear": 375, "sheet": [396, 495], "shell": [52, 53, 76, 245, 246, 372, 377, 384, 393, 395, 429, 466, 509, 518, 520, 555], "shell2": [245, 429, 466, 509, 520], "shell2d": 52, "shell2spatialmodel": [242, 246, 466, 518], "shellspatialmodel": [76, 242, 245, 384, 412, 466, 517], "sherpa": [102, 105, 140, 187, 188, 191, 192, 200, 275, 281, 360, 361, 370, 378, 379, 381, 382, 392, 393, 395, 402, 416, 417, 418, 419, 421, 430, 431, 434, 435, 436, 437, 438, 439, 440, 442, 443, 444, 445, 446, 447, 448, 452, 453, 454, 455, 457, 458, 459, 460, 462, 463, 464, 465, 466, 468, 470, 471, 472, 473, 479, 480, 481, 508, 529, 556], "sherpa_opt": 460, "shift": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 260, 397], "shim": 368, "shini": 346, "ship": [368, 369, 378, 401, 419, 437, 450, 455, 466, 495], "shock": [50, 52, 53, 488], "short": [361, 362, 365, 366, 370, 375, 378, 381, 384, 387, 409, 451, 453, 471, 495, 496, 554, 557, 560], "short_observ": 453, "shortcut": [78, 397, 414], "shorten": 412, "shorter": [279, 361, 362, 375, 381, 386, 409, 437, 453, 466, 555], "should": [16, 19, 20, 26, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 79, 80, 83, 86, 97, 99, 100, 103, 104, 105, 107, 109, 111, 117, 118, 119, 120, 124, 128, 129, 130, 135, 141, 142, 145, 151, 153, 156, 168, 173, 174, 179, 181, 182, 183, 184, 186, 188, 190, 191, 192, 194, 195, 196, 201, 205, 206, 207, 208, 209, 210, 211, 212, 213, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 230, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 256, 257, 258, 259, 260, 261, 262, 290, 336, 350, 351, 352, 362, 364, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 381, 382, 384, 386, 387, 388, 390, 391, 393, 395, 396, 397, 402, 404, 426, 436, 442, 445, 446, 447, 454, 455, 459, 460, 461, 462, 463, 464, 465, 466, 468, 470, 472, 491, 493, 495, 500, 507, 555, 556, 558, 559], "shoulder": 263, "shouldn": [79, 361, 364], "show": [11, 78, 83, 86, 121, 122, 123, 144, 163, 225, 358, 361, 362, 364, 373, 375, 376, 380, 381, 389, 391, 401, 402, 406, 414, 419, 420, 421, 426, 427, 430, 431, 432, 434, 435, 436, 437, 438, 439, 440, 442, 443, 446, 447, 448, 450, 451, 452, 453, 454, 455, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 468, 470, 471, 472, 473, 475, 479, 480, 481, 487, 488, 489, 495, 497, 498, 499, 501, 502, 504, 506, 512, 521, 553, 555, 557, 560], "show_dtyp": [83, 86], "show_in_brows": [83, 86, 444], "show_in_notebook": [83, 86], "show_nam": [83, 86], "show_progress_bar": 495, "show_row_index": [83, 86], "show_unit": [83, 86], "showcas": 468, "shower": [416, 470, 500], "shown": [19, 20, 26, 79, 151, 191, 192, 205, 206, 209, 213, 215, 216, 217, 221, 227, 228, 230, 234, 236, 238, 239, 240, 244, 249, 251, 252, 253, 254, 257, 261, 356, 361, 368, 378, 379, 380, 388, 389, 391, 406, 408, 431, 434, 442, 444, 445, 446, 447, 451, 454, 455, 462, 465, 466, 467, 468, 470, 480, 492], "showwarn": 361, "si": [79, 182, 191, 194, 211, 233, 263, 508], "side": [194, 196, 272, 274, 361, 375], "sider": 559, "sidereal_tim": 362, "siejkowski": 421, "sig": [354, 556, 557, 558], "sight": 483, "sigma": [19, 20, 30, 32, 48, 49, 116, 117, 118, 119, 120, 124, 125, 127, 132, 133, 140, 141, 145, 151, 152, 153, 156, 199, 200, 201, 203, 205, 208, 209, 212, 213, 215, 216, 217, 218, 220, 221, 222, 223, 224, 225, 226, 227, 228, 230, 237, 238, 239, 240, 241, 244, 245, 246, 247, 249, 252, 253, 254, 259, 260, 270, 272, 274, 280, 384, 389, 444, 445, 450, 451, 452, 460, 464, 466, 468, 479, 493, 499, 513, 528, 544, 557], "sigma1": 31, "sigma2": 31, "sigma_": [199, 513], "sigma_1": [31, 49, 144, 461], "sigma_10tev": [384, 466], "sigma_1tev": [384, 466], "sigma_2": [31, 49, 144, 461], "sigma_3": [144, 461], "sigma_err": 445, "sigma_gauss": 223, "sigma_laplac": 223, "sigma_m": 513, "sigma_nod": 466, "sigma_to_t": 557, "sigmav": 483, "sign": [201, 203, 272, 274, 364, 387, 408, 423, 493, 557], "signal": [79, 97, 100, 103, 104, 105, 168, 196, 247, 272, 274, 287, 385, 430, 434, 435, 440, 443, 452, 464, 479, 483, 498, 502, 504, 554, 556, 557, 558], "signif_avg": 481, "signific": [112, 116, 117, 118, 119, 126, 127, 134, 135, 270, 272, 274, 278, 351, 352, 359, 366, 367, 368, 369, 376, 377, 381, 382, 385, 387, 408, 409, 417, 420, 421, 426, 427, 429, 430, 434, 435, 441, 442, 443, 444, 445, 451, 452, 455, 458, 460, 472, 475, 479, 481, 491, 493, 495, 500, 507, 553, 554, 555], "significance_lima": 408, "significance_map": [440, 442], "significance_map_off": 440, "significance_mask": 464, "significance_mask_inv": 464, "significancemapestim": 408, "significantli": [412, 446, 470, 554], "signoff": 364, "silent": 423, "silicon": [393, 395], "silvia": 404, "simeq": 53, "similar": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 83, 86, 352, 361, 364, 373, 374, 375, 376, 377, 380, 381, 382, 385, 412, 426, 436, 451, 463, 467, 468, 481, 491, 499, 555], "similarli": [367, 369, 385, 388, 412, 458, 460, 461, 463, 464, 466, 508], "simlat": 273, "simon": [425, 426, 427], "simpifi": 370, "simpl": [50, 52, 132, 208, 212, 220, 223, 235, 245, 246, 250, 256, 260, 263, 361, 362, 373, 374, 375, 376, 377, 380, 385, 388, 389, 402, 412, 416, 420, 421, 426, 430, 431, 432, 434, 435, 436, 437, 439, 442, 451, 455, 460, 463, 464, 467, 473, 479, 480, 481, 485, 495, 553, 554, 555], "simple_norm": 196, "simple_rebin_lc": 376, "simplefilt": 495, "simpler": [171, 369, 374, 375, 383], "simplest": [430, 434, 451], "simplex": [200, 460], "simpli": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 82, 83, 86, 160, 200, 202, 204, 361, 375, 376, 385, 394, 423, 426, 430, 431, 444, 459, 464, 465, 466, 481, 508, 555, 557], "simplic": [443, 446, 453, 460, 466, 468, 471], "simplif": [372, 384, 423], "simplifi": [127, 190, 368, 370, 372, 379, 385, 402, 405, 406, 407, 409, 412, 416, 423, 432, 438, 500, 558], "simu": [450, 454, 468], "simul": [45, 78, 79, 84, 88, 97, 100, 103, 104, 105, 107, 142, 153, 156, 273, 320, 371, 374, 377, 381, 388, 389, 393, 400, 404, 406, 408, 414, 417, 419, 420, 421, 426, 427, 429, 433, 439, 442, 444, 449, 455, 456, 465, 468, 470, 475, 485, 491, 493, 500, 503, 552, 553], "simulate_3d": [381, 421, 429, 449, 450], "simulate_dataset": [402, 406, 407], "simulate_observ": 88, "simulated_d": 436, "simulated_data": 88, "simulated_model": 436, "simultan": [389, 454, 459, 466, 468, 491], "sin": [512, 513, 514, 548], "sinc": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 51, 79, 83, 84, 86, 120, 121, 124, 184, 194, 201, 203, 336, 361, 362, 367, 371, 375, 377, 378, 379, 380, 381, 385, 387, 388, 389, 391, 412, 422, 423, 424, 425, 426, 427, 436, 440, 442, 454, 459, 465, 466, 468, 470, 472, 527, 530, 556, 559], "sine": [247, 372, 429, 509, 551], "sine_model": 548, "sinetemporalmodel": [255, 466, 548], "singl": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 65, 78, 83, 84, 85, 86, 88, 90, 116, 120, 121, 124, 127, 141, 142, 153, 155, 156, 159, 163, 165, 170, 173, 174, 179, 181, 182, 183, 184, 186, 188, 191, 192, 194, 195, 196, 211, 233, 361, 367, 368, 371, 373, 374, 375, 376, 377, 378, 382, 383, 388, 389, 393, 400, 402, 407, 408, 420, 426, 427, 430, 434, 436, 438, 439, 440, 452, 454, 458, 459, 462, 463, 465, 468, 472, 473, 479, 481, 491, 493, 505, 507, 508, 552, 554], "singleobscubemak": 367, "singleobsimagemak": 367, "singleton": 314, "sinha": [373, 376, 401, 402, 403, 404, 405, 406, 407, 408, 409, 411, 412, 414, 415, 420, 421, 422, 423, 424, 425, 426, 427], "sink": 378, "sinu": [247, 466], "sinusoid": [247, 548], "sipocz": [378, 402, 404, 406, 408, 417, 418, 419, 420, 421, 422], "sip\u0151cz": 423, "sit": 364, "site": [326, 391, 430, 431, 434, 435, 436, 437, 438, 439, 440, 442, 443, 444, 445, 446, 447, 448, 450, 452, 453, 454, 455, 457, 458, 459, 460, 462, 463, 464, 465, 466, 468, 470, 471, 472, 473, 479, 480, 481, 519, 527, 530, 543, 555], "situat": [375, 376, 378, 500], "six": [380, 386], "size": [19, 20, 26, 46, 47, 65, 70, 76, 83, 84, 86, 97, 98, 100, 103, 104, 105, 107, 108, 109, 111, 122, 127, 137, 138, 140, 141, 142, 143, 144, 145, 148, 150, 151, 152, 153, 154, 156, 158, 159, 165, 166, 167, 170, 171, 172, 180, 182, 183, 184, 186, 189, 191, 192, 194, 195, 196, 205, 206, 208, 209, 212, 213, 215, 216, 217, 220, 221, 223, 227, 228, 230, 234, 235, 236, 237, 238, 239, 240, 244, 245, 246, 248, 249, 250, 251, 252, 253, 254, 256, 257, 258, 259, 260, 261, 312, 313, 317, 318, 319, 320, 349, 361, 369, 372, 374, 375, 393, 395, 425, 427, 430, 436, 440, 442, 446, 453, 455, 458, 462, 463, 464, 466, 470, 471, 472, 473, 481, 491, 506, 512, 513, 559], "skeleton": 377, "sketch": 377, "skill": [364, 397], "skimag": 421, "skip": [78, 151, 349, 362, 364, 373, 375, 381, 419, 465], "skip_miss": [78, 420], "sklearn": 361, "sky": [6, 13, 41, 57, 66, 68, 69, 70, 71, 72, 73, 74, 75, 76, 79, 84, 91, 97, 100, 103, 104, 105, 112, 132, 141, 142, 153, 156, 176, 182, 183, 184, 186, 191, 192, 194, 195, 196, 211, 233, 248, 260, 263, 265, 292, 296, 297, 321, 323, 325, 348, 360, 361, 362, 374, 380, 393, 402, 404, 418, 419, 421, 434, 435, 437, 438, 440, 450, 454, 455, 458, 463, 466, 470, 471, 475, 477, 479, 480, 481, 483, 490, 491, 492, 495, 500, 501, 504, 506, 508, 512, 513, 517, 518, 519, 553, 554], "sky_circl": [86, 91, 453, 467, 480], "sky_model": [68, 69, 70, 71, 72, 73, 74, 75, 76, 109, 111, 376, 452, 453, 458, 465, 466, 480, 523], "sky_model_pntpwl": 446, "sky_reg": 457, "sky_reg_rec": 457, "sky_region": 85, "skycood": 372, "skycoord": [56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 79, 81, 83, 84, 86, 89, 91, 97, 100, 104, 105, 117, 119, 121, 123, 141, 142, 148, 153, 156, 166, 167, 169, 171, 173, 174, 176, 177, 179, 180, 182, 183, 184, 186, 189, 191, 192, 194, 195, 196, 197, 207, 208, 211, 212, 220, 223, 233, 235, 237, 245, 246, 248, 250, 256, 258, 260, 288, 289, 322, 323, 337, 357, 362, 372, 375, 385, 388, 430, 431, 434, 436, 437, 440, 444, 445, 446, 447, 448, 450, 452, 453, 454, 455, 457, 458, 459, 461, 462, 463, 464, 465, 466, 467, 470, 471, 472, 473, 480, 481, 495, 499, 504, 506, 508, 516], "skycoord_from_t": 375, "skycoord_to_pixel_scale_angl": 375, "skycoordconfig": 16, "skycub": [367, 380, 418, 419, 420, 421], "skydiffusecub": [372, 384, 403, 408, 409, 421], "skydiffusemap": [372, 403], "skydir": [16, 79, 97, 100, 104, 105, 106, 110, 142, 153, 163, 182, 183, 184, 186, 192, 194, 195, 196, 434, 435, 436, 439, 440, 442, 444, 445, 446, 447, 450, 452, 455, 457, 459, 461, 462, 463, 464, 466, 471, 472, 479, 480, 502, 504, 505, 506, 508, 513, 514, 515, 516], "skydirfunct": 483, "skydisk": 403, "skydiskelong": 372, "skyellips": [402, 403, 404, 405], "skygaussian": 402, "skygaussianelong": 372, "skyimag": [367, 380, 418, 419, 420, 421], "skyimagelist": 418, "skymap": [183, 184, 186, 192, 195, 196, 375, 417, 418, 447], "skymap_band": [447, 550], "skymap_region": 447, "skymask": 419, "skymodel": [65, 68, 69, 70, 71, 72, 73, 74, 75, 76, 96, 97, 100, 104, 105, 109, 111, 117, 119, 125, 127, 160, 211, 229, 233, 265, 270, 372, 373, 374, 376, 382, 384, 385, 402, 406, 407, 408, 412, 421, 427, 431, 432, 434, 435, 436, 437, 438, 439, 442, 443, 444, 445, 446, 447, 450, 452, 453, 454, 455, 458, 459, 460, 465, 468, 471, 479, 480, 490, 491, 493, 511, 512, 513, 514, 516, 517, 518, 519, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 542, 543, 544, 545, 546, 547, 548, 549, 550, 552], "skypointsourc": 405, "skyregion": [95, 97, 100, 104, 105, 121, 141, 142, 148, 153, 156, 166, 167, 171, 186, 191, 192, 196, 211, 233, 321, 324, 375, 431, 446, 448, 464, 466, 499, 504, 508], "skyspatialmodel": [372, 421], "slack": [363, 364, 368, 384, 390, 396, 401, 402, 555], "slcqk": 462, "slew": 90, "slice": [79, 83, 86, 95, 97, 100, 104, 105, 114, 117, 119, 137, 138, 139, 140, 141, 142, 143, 144, 145, 147, 148, 150, 151, 152, 153, 154, 155, 156, 181, 182, 183, 184, 185, 186, 187, 188, 191, 192, 193, 194, 195, 196, 200, 207, 208, 212, 220, 223, 235, 237, 245, 246, 250, 256, 258, 260, 282, 367, 409, 445, 448, 459, 470, 507], "slice_by_coord": [117, 119, 427], "slice_by_energi": [95, 97, 100, 104, 105, 117, 119, 258, 409, 459], "slice_by_idx": [97, 100, 104, 105, 117, 119, 137, 138, 139, 140, 141, 142, 143, 144, 145, 147, 148, 150, 151, 152, 153, 154, 155, 156, 181, 182, 183, 184, 186, 187, 191, 192, 194, 195, 196, 409, 421, 423, 448, 463, 471], "slice_by_tim": [117, 119], "slide": [370, 438, 458], "slider": 463, "sliderstyl": [442, 450, 463, 479, 480], "slightli": [112, 188], "slope": [27, 403], "slow": [83, 86, 200, 368, 377, 435, 460, 479, 480], "slower": [83, 86, 184, 361, 369, 379], "slowest": 391, "small": [352, 361, 367, 369, 375, 377, 378, 381, 383, 388, 391, 401, 402, 403, 404, 405, 406, 407, 408, 409, 411, 412, 414, 415, 417, 418, 419, 420, 421, 422, 423, 426, 427, 452, 453, 463, 468, 470, 471, 472, 473, 513, 517, 518, 554, 555], "smaller": [27, 142, 153, 156, 171, 182, 183, 184, 186, 192, 195, 196, 354, 364, 402, 421, 446, 451, 453, 460, 463, 468, 513], "smallest": [19, 20, 26, 205, 206, 209, 213, 215, 216, 217, 221, 227, 228, 230, 234, 236, 238, 244, 249, 251, 252, 253, 254, 257, 261, 438], "smooth": [97, 100, 104, 105, 112, 122, 123, 132, 184, 196, 212, 249, 353, 356, 412, 417, 418, 419, 421, 422, 429, 440, 442, 444, 448, 450, 455, 459, 462, 463, 465, 471, 479, 480, 481, 509, 512, 541], "smooth_kernel": [97, 100], "smooth_radiu": [97, 100], "smoothbrokenpowerlawspectralmodel": [205, 243, 384, 407, 408, 466, 536], "sn": [45, 50, 52, 53], "sn_rate": [45, 485], "snippet": [362, 381, 495], "snr": [44, 50, 53, 65, 471, 488, 489], "snr_model": 489, "snrcat": [416, 458], "snrtruelovemcke": [50, 488, 489], "so": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 79, 83, 86, 90, 100, 105, 116, 120, 122, 124, 125, 127, 136, 180, 183, 184, 186, 188, 192, 195, 196, 200, 201, 203, 223, 260, 270, 336, 344, 351, 352, 361, 362, 364, 366, 367, 368, 369, 372, 373, 374, 375, 376, 378, 379, 380, 381, 382, 383, 384, 385, 388, 390, 392, 393, 395, 397, 402, 404, 412, 422, 424, 425, 431, 434, 436, 438, 439, 444, 445, 446, 450, 452, 457, 458, 460, 463, 464, 466, 468, 470, 471, 472, 475, 480, 495, 504, 508, 514, 518, 555, 556, 557, 558], "social": 387, "soft": 279, "softwar": [183, 184, 186, 195, 196, 375, 376, 378, 387, 388, 391, 463], "solar": 52, "sole": [371, 387], "solid": [181, 182, 191, 194, 208, 212, 220, 223, 235, 245, 246, 250, 256, 260, 263, 377, 400, 402, 403, 404, 421, 440, 462, 463, 470, 498, 504, 554], "solid_angl": [181, 182, 191, 194, 463, 508], "solut": [19, 20, 26, 52, 140, 205, 206, 209, 213, 215, 216, 217, 227, 228, 230, 234, 236, 238, 239, 240, 244, 249, 251, 252, 253, 254, 257, 259, 261, 362, 364, 366, 368, 369, 374, 375, 377, 378, 379, 381, 383, 385, 389, 394, 491, 493, 495, 558], "solv": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 364, 369, 371, 372, 373, 374, 414, 495], "some": [13, 16, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 70, 78, 80, 83, 86, 99, 118, 169, 190, 290, 298, 364, 366, 367, 368, 369, 370, 375, 376, 377, 378, 379, 380, 381, 382, 385, 386, 387, 388, 391, 393, 394, 395, 396, 397, 398, 400, 402, 404, 412, 413, 415, 417, 419, 420, 421, 426, 430, 431, 432, 434, 436, 438, 439, 440, 443, 444, 446, 447, 448, 450, 451, 452, 453, 454, 455, 457, 458, 459, 460, 462, 463, 465, 466, 468, 470, 471, 480, 481, 483, 484, 491, 492, 495, 500, 505, 507, 554, 555, 556, 557, 559], "some_class": 361, "some_map": 151, "some_map_convolv": 151, "somehow": [369, 375, 380, 483], "someon": [364, 366, 381], "someth": [83, 86, 361, 362, 363, 364, 366, 369, 375, 378, 379, 381, 391, 393, 395, 437, 458, 508, 555], "sometim": [19, 20, 79, 201, 205, 208, 209, 212, 213, 215, 216, 217, 218, 220, 221, 222, 223, 224, 225, 226, 227, 228, 230, 237, 238, 239, 240, 241, 244, 245, 246, 247, 249, 252, 253, 254, 259, 260, 339, 361, 364, 368, 375, 381, 391, 393, 460, 554, 559], "somewhat": [378, 470], "somewher": [364, 378, 391], "soon": [364, 375, 391], "sort": [78, 79, 83, 86, 96, 132, 330, 361, 378, 403, 481], "sort_kei": 330, "sortedarrai": [83, 86], "sourc": [6, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 361, 362, 364, 366, 369, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 383, 384, 385, 387, 391, 393, 398, 400, 402, 406, 407, 412, 413, 418, 419, 420, 421, 426, 427, 429, 432, 433, 435, 436, 437, 439, 440, 441, 442, 443, 448, 449, 450, 451, 452, 453, 455, 456, 457, 459, 460, 461, 462, 463, 465, 466, 467, 469, 471, 472, 473, 475, 477, 479, 480, 483, 484, 489, 491, 492, 493, 495, 500, 503, 504, 507, 509, 511, 512, 513, 514, 515, 516, 517, 518, 519, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 542, 543, 544, 545, 546, 547, 548, 549, 550, 552, 553, 554, 556, 557], "source1": 466, "source2": 466, "source_1": [372, 377], "source_2": 372, "source_42": 377, "source_fermi_3fgl": 432, "source_fermi_3fhl": 432, "source_gammacat": 432, "source_irf_model": 372, "source_librari": 470, "source_model": 534, "source_nam": [56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 458, 481], "source_name_alia": 56, "source_name_kei": 56, "source_po": [440, 444, 462], "source_population_model": [381, 406], "source_posit": [430, 445, 467], "sourcebackground": 372, "sourcecatalog": [57, 58, 59, 60, 61, 62, 63, 64, 65, 375, 412, 458, 464, 481, 490], "sourcecatalog1lhaaso": [55, 68, 458], "sourcecatalog2fhl": [55, 69, 458, 490], "sourcecatalog2hwc": [55, 70, 458, 490], "sourcecatalog3fgl": [55, 71, 432, 458, 490], "sourcecatalog3fhl": [55, 72, 432, 458, 465, 481], "sourcecatalog3hwc": [55, 73, 458, 490], "sourcecatalog4fgl": [55, 74, 414, 458, 490], "sourcecataloggammacat": [55, 75, 432, 458], "sourcecataloghgp": [55, 76, 77, 458, 490], "sourcecataloglargescalehgp": 65, "sourcecatalogobject": [68, 75, 76, 77, 458, 490], "sourcecatalogobject1lhaaso": 57, "sourcecatalogobject2fhl": 58, "sourcecatalogobject2hwc": 59, "sourcecatalogobject3fgl": 60, "sourcecatalogobject3fhl": 61, "sourcecatalogobject3hwc": 62, "sourcecatalogobject4fgl": 63, "sourcecatalogobjectfermibas": [69, 71, 72, 74], "sourcecatalogobjectgammacat": 64, "sourcecatalogobjecthgp": [65, 77, 401, 458], "sourcecatalogobjecthgpscompon": 65, "sourcecatalogobjecthwcbas": [70, 73], "sourceevalu": 372, "sources_flux_map": 438, "sourcetempl": 372, "south": [446, 447], "south_z20_50h": [78, 138, 142, 143, 144, 153, 430, 437, 450, 454, 461, 470], "south_z40_50h": 470, "southern": 470, "space": [83, 86, 97, 100, 104, 105, 193, 196, 256, 257, 273, 301, 319, 360, 361, 371, 377, 383, 455, 459, 460, 463, 507, 531, 540], "span": 467, "spars": [182, 183, 184, 186, 191, 194, 195, 196, 403, 412, 420, 447, 463], "sparsif": 385, "sparsifi": [183, 184, 186, 195, 196], "spatail": 127, "spatial": [1, 46, 48, 65, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 79, 97, 100, 104, 105, 107, 117, 119, 137, 138, 139, 140, 141, 142, 143, 144, 145, 147, 148, 150, 151, 152, 153, 154, 155, 156, 165, 181, 182, 183, 184, 186, 187, 189, 191, 192, 194, 195, 196, 202, 204, 207, 208, 211, 212, 219, 220, 223, 233, 235, 237, 242, 245, 246, 248, 250, 256, 258, 260, 270, 354, 356, 361, 367, 370, 373, 374, 375, 377, 379, 380, 385, 393, 401, 402, 404, 405, 406, 407, 409, 412, 420, 421, 423, 426, 427, 429, 432, 435, 437, 439, 442, 443, 445, 446, 447, 448, 450, 454, 455, 458, 459, 462, 465, 469, 471, 475, 479, 483, 484, 491, 493, 495, 496, 506, 507, 520, 552, 553, 554], "spatial_bin_s": 107, "spatial_bin_size_min": 107, "spatial_model": [68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 109, 111, 127, 212, 219, 248, 258, 270, 376, 406, 438, 442, 444, 445, 446, 447, 450, 452, 453, 458, 459, 465, 466, 471, 480, 511, 512, 513, 514, 515, 516, 517, 518, 519], "spatial_model_point": 446, "spatial_model_registri": 466, "spatial_par": 384, "spatial_typ": 384, "spatial_width": 107, "spatial_width_max": 107, "spatialbackground": 372, "spatialcircleconfig": 16, "spatialconst": 372, "spatialgaussian": 372, "spatialmodel": [68, 69, 70, 71, 72, 73, 74, 75, 76, 207, 208, 212, 219, 220, 223, 235, 237, 245, 246, 248, 256, 258, 260, 372, 384, 406, 421, 425, 458, 466, 480, 483, 490, 509, 552], "spatialtempl": 372, "spatiamodel": 151, "speak": 460, "spec": [76, 105, 361, 375, 417, 442, 447, 458, 470, 480], "spec_model_tru": 455, "special": [83, 86, 223, 361, 371, 373, 375, 376, 384, 387, 388, 401, 439, 446, 458, 459, 465, 466], "specialis": [375, 381], "specif": [15, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 78, 79, 81, 82, 83, 86, 89, 97, 100, 105, 119, 137, 138, 139, 140, 141, 142, 143, 144, 145, 147, 148, 150, 152, 153, 154, 155, 156, 159, 173, 174, 179, 183, 184, 185, 186, 188, 192, 193, 194, 195, 196, 200, 225, 258, 270, 350, 360, 361, 362, 364, 366, 371, 373, 375, 376, 377, 378, 379, 380, 382, 385, 386, 387, 388, 391, 393, 394, 406, 409, 412, 414, 423, 424, 426, 431, 434, 436, 437, 440, 442, 443, 448, 450, 454, 455, 459, 460, 461, 463, 464, 467, 468, 473, 475, 481, 491, 492, 493, 495, 497, 498, 499, 501, 506, 507, 508, 559], "specifi": [16, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 78, 79, 80, 83, 84, 86, 87, 91, 97, 99, 100, 104, 105, 112, 114, 117, 118, 119, 120, 122, 124, 125, 137, 138, 139, 140, 141, 142, 143, 144, 145, 147, 148, 150, 152, 153, 154, 155, 156, 158, 169, 181, 182, 183, 184, 186, 187, 188, 190, 191, 192, 194, 195, 196, 211, 225, 233, 270, 290, 292, 296, 301, 348, 371, 378, 383, 386, 394, 405, 408, 412, 436, 439, 442, 445, 446, 448, 450, 459, 460, 461, 462, 463, 465, 466, 470, 480, 491, 493, 506], "spectra": [26, 104, 105, 120, 125, 136, 243, 263, 270, 367, 370, 372, 374, 376, 380, 384, 400, 404, 417, 421, 431, 436, 437, 443, 447, 452, 454, 455, 459, 460, 462, 466, 468, 483, 491, 493, 495, 554], "spectral": [1, 19, 20, 26, 52, 53, 64, 65, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 96, 97, 100, 104, 105, 112, 116, 117, 119, 120, 121, 124, 126, 127, 131, 151, 153, 156, 160, 202, 204, 205, 206, 209, 211, 213, 215, 216, 217, 219, 221, 225, 227, 228, 230, 231, 233, 234, 236, 238, 239, 240, 243, 244, 248, 249, 251, 252, 253, 254, 257, 258, 259, 261, 263, 264, 279, 317, 367, 370, 372, 373, 374, 375, 376, 377, 379, 380, 382, 383, 385, 393, 401, 403, 404, 405, 406, 407, 408, 409, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 426, 427, 429, 433, 437, 439, 442, 445, 446, 447, 448, 450, 452, 453, 454, 455, 458, 459, 460, 462, 464, 465, 468, 469, 470, 471, 479, 480, 483, 484, 490, 491, 492, 493, 494, 495, 496, 502, 503, 504, 507, 511, 512, 513, 514, 515, 516, 517, 518, 519, 537, 538, 539, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 552, 553, 554, 556], "spectral_analysi": [429, 433, 434], "spectral_analysis_hli": [429, 433, 435], "spectral_analysis_rad_max": [429, 433, 436], "spectral_cub": 413, "spectral_index": [19, 20, 26, 52, 205, 206, 209, 213, 215, 216, 217, 221, 227, 228, 230, 234, 236, 238, 239, 240, 244, 249, 251, 252, 253, 254, 257, 261], "spectral_index_error": [19, 20, 26, 205, 206, 209, 213, 215, 216, 217, 221, 227, 228, 230, 234, 236, 238, 239, 240, 244, 249, 251, 252, 253, 254, 257, 261, 426], "spectral_irf_model": 372, "spectral_model": [64, 65, 68, 69, 70, 71, 72, 73, 74, 75, 76, 96, 104, 105, 109, 111, 116, 125, 127, 131, 160, 211, 219, 231, 233, 248, 258, 270, 376, 379, 383, 384, 385, 389, 409, 431, 432, 434, 436, 437, 438, 442, 443, 444, 445, 446, 447, 450, 452, 453, 454, 455, 458, 459, 460, 465, 466, 468, 471, 480, 481, 493, 502, 511, 512, 513, 514, 516, 517, 518, 519, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 542, 543, 544, 545, 546, 547, 548, 549, 550], "spectral_model1": 454, "spectral_model2": 454, "spectral_model_pwl": 446, "spectral_model_registri": 466, "spectral_par": 384, "spectral_point": 377, "spectral_typ": 384, "spectralbackground": 372, "spectralbackgroundmodel": 373, "spectralcompoundmodel": 372, "spectralconst": 372, "spectralevalu": 372, "spectralexponentialcutoffpowerlaw3fgl": 380, "spectralgaussian": [372, 404], "spectralmodel": [19, 20, 69, 71, 72, 74, 75, 76, 96, 112, 116, 117, 119, 121, 126, 131, 151, 153, 156, 160, 205, 206, 209, 211, 213, 215, 216, 217, 219, 221, 227, 228, 230, 233, 234, 236, 238, 239, 240, 244, 248, 249, 252, 253, 254, 257, 258, 261, 263, 372, 373, 376, 379, 385, 409, 412, 419, 426, 458, 466, 480, 481, 490, 509, 552], "spectralregion": 375, "spectraltempl": 372, "spectrum": [19, 20, 26, 70, 73, 93, 95, 96, 97, 100, 101, 104, 105, 112, 117, 119, 121, 124, 126, 128, 151, 153, 156, 161, 165, 169, 170, 183, 184, 186, 195, 196, 205, 206, 209, 213, 215, 216, 217, 221, 227, 228, 230, 234, 236, 238, 239, 240, 244, 249, 251, 252, 253, 254, 257, 261, 263, 264, 273, 279, 358, 367, 372, 373, 376, 377, 380, 381, 382, 393, 403, 404, 405, 406, 408, 412, 414, 417, 418, 419, 420, 421, 423, 425, 429, 430, 431, 432, 433, 435, 442, 443, 446, 447, 448, 454, 457, 458, 459, 464, 466, 470, 471, 475, 479, 481, 483, 491, 495, 500, 503, 508, 522, 525, 526, 528, 529, 533, 534, 536, 537, 538, 539, 552, 555], "spectrum_analysi": 434, "spectrum_dataset": [136, 373, 455, 459], "spectrum_dataset_1": 373, "spectrum_dataset_2": 373, "spectrum_dataset_empti": [455, 462], "spectrum_dataset_mak": [455, 462], "spectrum_dataset_on_off": 455, "spectrum_fitting_with_sherpa": 381, "spectrum_mak": 430, "spectrum_simul": [381, 429, 433, 437], "spectrumanalysisiact": [377, 405, 419], "spectrumdataset": [93, 94, 95, 97, 100, 105, 124, 126, 136, 164, 165, 169, 170, 219, 382, 403, 404, 405, 406, 407, 408, 409, 412, 415, 430, 431, 434, 436, 437, 444, 453, 454, 455, 460, 462, 468, 491, 504, 556], "spectrumdatasetmak": [161, 406, 412, 430, 431, 434, 436, 437, 444, 453, 454, 455, 462, 504], "spectrumdatasetonoff": [93, 100, 101, 102, 104, 125, 126, 136, 164, 165, 270, 358, 376, 403, 404, 405, 407, 408, 424, 425, 426, 430, 431, 434, 435, 437, 443, 444, 452, 455, 459, 460, 462, 468, 493, 556], "spectrumdatasetonoffstack": 405, "spectrumdatasetsonoff": 373, "spectrumenergygroup": 420, "spectrumevalu": 408, "spectrumextract": [376, 403, 406, 419], "spectrumfit": [403, 419, 420, 421], "spectrumobserv": [373, 403, 419], "spectrumobservationlist": [403, 418], "spectrumobservationstack": 418, "spectrumonoffdataset": 376, "spectrumresult": 403, "spectrumsimul": [404, 418, 421], "spectrumstack": 420, "spectrumstat": 404, "specutil": 375, "speed": [127, 290, 364, 394, 404, 406, 414, 420, 421, 460], "spell": [366, 495], "spend": [374, 381], "spent": [368, 462], "sphere": [47, 318, 400, 402, 507, 512, 513, 516], "spherepointpick": 318, "spheric": [47, 361, 402, 507, 553], "sphericalcircleskyregion": [380, 455, 481], "sphinx": [364, 368, 381, 391, 403, 407, 414, 420, 421, 423, 427, 430, 431, 432, 434, 435, 436, 437, 438, 439, 440, 442, 443, 444, 445, 446, 447, 448, 450, 451, 452, 453, 454, 455, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 470, 471, 472, 473, 475, 477, 479, 480, 481, 509, 511, 512, 513, 514, 515, 516, 517, 518, 519, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 542, 543, 544, 545, 546, 547, 548, 549, 550], "sphinx_gallery_conf": 391, "sphinx_gallery_thumbnail_numb": [362, 434, 436, 438, 440, 445, 448, 461, 521], "spill": 462, "spin": [50, 51, 54, 404, 487], "spir": [402, 421], "spiral": [33, 34, 38, 45, 416], "spiralarm": [33, 38, 45, 420, 485], "spiralarm_index": [33, 34, 38], "spirit": 387, "split": [19, 20, 83, 86, 87, 109, 111, 117, 119, 183, 184, 186, 192, 195, 196, 201, 205, 208, 209, 212, 213, 215, 216, 217, 218, 220, 221, 222, 223, 224, 225, 226, 227, 228, 230, 237, 238, 239, 240, 241, 244, 245, 246, 247, 249, 252, 253, 254, 259, 260, 367, 369, 371, 373, 375, 376, 380, 382, 384, 393, 409, 427, 453, 466, 484, 560], "split_by_axi": [183, 184, 186, 192, 195, 196], "split_template_model": [109, 111], "sporad": 388, "spot": 361, "spread": [78, 84, 144, 153, 156, 361, 383, 409, 430, 438, 461, 500, 554], "spring": [371, 422], "sprint": [369, 370, 374, 377, 378, 379, 380, 382], "spuriou": 132, "sqrt": [19, 20, 30, 31, 32, 65, 97, 100, 104, 105, 112, 117, 119, 122, 127, 183, 184, 186, 188, 192, 195, 196, 199, 201, 205, 208, 209, 212, 213, 215, 216, 217, 218, 220, 221, 222, 223, 224, 225, 226, 227, 228, 230, 237, 238, 239, 240, 241, 244, 245, 246, 247, 249, 252, 253, 254, 259, 260, 271, 280, 302, 303, 304, 373, 431, 434, 438, 442, 448, 450, 451, 455, 458, 460, 462, 463, 465, 471, 479, 480, 481, 493, 513, 514, 517, 518, 528, 557], "sqrt_space": [380, 406], "sqrt_t": [112, 116, 117, 119, 127, 132, 136, 272, 274, 354, 385, 397, 409, 431, 434, 435, 438, 440, 442, 444, 455, 458, 459, 464, 472, 479, 481, 493, 555, 557], "sqrt_ts_min": [136, 434], "sqrt_ts_threshold_ul": [69, 71, 72, 74, 116, 117, 118, 119, 121, 127, 448, 452, 458, 459, 479, 481], "squar": [17, 18, 21, 22, 24, 25, 27, 46, 97, 100, 117, 118, 140, 141, 142, 148, 153, 156, 159, 180, 194, 196, 258, 277, 376, 379, 409, 464, 468, 483, 493, 507, 555, 556, 557, 558], "squash": [142, 181, 182, 185, 187, 188, 191, 193, 194, 426, 430, 440, 459, 463], "squeez": [430, 461], "sr": [137, 138, 139, 150, 181, 182, 191, 194, 208, 260, 263, 430, 437, 439, 442, 444, 450, 454, 458, 459, 461, 463, 466, 470, 471, 500, 511, 519], "src": [374, 445, 491], "src_above_bkg": 445, "src_event": [446, 447], "src_posit": [446, 447], "srcmap": [182, 183, 184, 186, 195, 196, 463], "ssc": [58, 60, 61, 63, 234, 381, 534], "ssc_model": 234, "st": [53, 460, 471], "stabil": [19, 20, 201, 205, 208, 209, 212, 213, 215, 216, 217, 218, 220, 221, 222, 223, 224, 225, 226, 227, 228, 230, 237, 238, 239, 240, 241, 244, 245, 246, 247, 249, 252, 253, 254, 259, 260, 386, 450], "stabl": [11, 83, 86, 191, 200, 290, 368, 369, 370, 377, 378, 381, 386, 390, 391, 392, 394, 406, 407, 408, 414, 419, 421, 423, 460, 492], "stack": [16, 79, 82, 87, 95, 96, 97, 99, 100, 104, 105, 116, 117, 119, 141, 142, 148, 153, 156, 159, 183, 184, 185, 186, 191, 192, 195, 196, 199, 202, 204, 258, 331, 361, 373, 376, 377, 383, 388, 402, 405, 406, 409, 412, 417, 418, 423, 424, 426, 431, 435, 439, 443, 444, 452, 455, 459, 460, 462, 467, 468, 479, 480, 492, 493, 502, 505, 554], "stack_dataset": [159, 455, 462], "stack_reduc": [95, 136, 405, 431, 434, 436, 442, 443, 444, 455, 459, 460, 493], "stacked_dataset": [444, 445], "stacked_fit": 434, "stacked_on_off": 440, "stackedobscubemak": 367, "stackedobsimagemak": 367, "stackoverflow": 329, "stage": [364, 377, 440, 442, 454, 459, 491, 554], "stai": 373, "stand": 366, "standard": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 42, 82, 83, 86, 91, 184, 196, 200, 264, 289, 343, 344, 361, 362, 364, 366, 370, 372, 373, 374, 377, 379, 385, 387, 388, 397, 404, 405, 421, 427, 430, 435, 437, 440, 443, 445, 447, 450, 453, 454, 457, 460, 463, 466, 467, 468, 470, 473, 475, 479, 491, 494, 499, 507, 553, 554, 555], "standard_broadcast": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40], "standard_scal": [91, 288, 467], "standardis": [333, 334, 346, 420], "standardise_unit": [333, 347], "standpoint": 361, "stapel": 427, "star": [36, 40, 213], "starmap": [306, 310, 311], "start": [16, 53, 79, 82, 84, 85, 86, 87, 89, 95, 124, 132, 193, 210, 211, 218, 222, 224, 225, 226, 233, 241, 247, 259, 262, 361, 362, 364, 366, 368, 369, 370, 371, 374, 375, 377, 378, 386, 387, 389, 390, 391, 395, 396, 397, 398, 400, 405, 414, 417, 418, 419, 420, 421, 426, 429, 430, 431, 432, 434, 435, 436, 438, 439, 440, 442, 444, 445, 446, 447, 448, 451, 452, 453, 454, 455, 457, 458, 463, 466, 470, 471, 475, 479, 481, 482, 495, 499, 553], "start_po": [121, 323, 448], "startswith": 361, "stat": [6, 95, 96, 100, 105, 117, 119, 120, 121, 124, 125, 127, 200, 201, 203, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 354, 361, 373, 381, 389, 391, 397, 404, 406, 407, 408, 409, 412, 418, 421, 422, 423, 427, 431, 432, 434, 435, 436, 440, 442, 443, 444, 445, 448, 451, 455, 460, 468, 471, 479, 480, 493, 555, 556, 557], "stat_arrai": [94, 96, 97, 100, 104, 105, 389], "stat_contour": 200, "stat_max": [272, 274], "stat_nul": [117, 119, 120, 121, 124, 125, 127, 272, 274, 427, 438, 448, 493], "stat_per_bin": 373, "stat_profil": [200, 460, 468, 495], "stat_scan": [117, 119, 120, 121, 124, 125, 200, 271, 434, 435, 460, 468, 493], "stat_sum": [94, 95, 96, 97, 100, 104, 105, 389, 425, 426, 442, 454, 459, 465, 495], "stat_surfac": [200, 409, 495], "stat_typ": [96, 97, 100, 104, 105, 407, 442, 454, 459, 465], "state": [16, 45, 47, 193, 200, 361, 367, 371, 373, 377, 381, 383, 385, 435, 479, 500, 521], "stateless": 388, "statement": [361, 364, 368, 425, 427, 484], "static": [17, 21, 22, 24, 25, 27, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 98, 101, 102, 103, 112, 116, 117, 119, 120, 121, 124, 125, 127, 144, 152, 163, 169, 170, 182, 183, 184, 186, 192, 193, 195, 196, 205, 207, 208, 209, 210, 212, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 230, 231, 238, 239, 240, 241, 245, 246, 247, 249, 252, 253, 254, 259, 261, 262, 358, 369, 372, 391, 403, 420], "staticmethod": [372, 384, 389, 466, 468], "statist": [6, 19, 20, 26, 75, 94, 95, 96, 97, 100, 104, 105, 116, 117, 119, 120, 121, 124, 125, 127, 133, 136, 163, 200, 205, 206, 209, 213, 215, 216, 217, 221, 227, 228, 230, 234, 236, 238, 244, 249, 251, 252, 253, 254, 257, 261, 270, 271, 272, 274, 275, 276, 281, 287, 373, 376, 379, 380, 381, 383, 389, 403, 407, 408, 409, 412, 414, 426, 427, 430, 435, 437, 438, 439, 440, 442, 444, 448, 450, 451, 452, 454, 455, 459, 460, 462, 468, 479, 480, 491, 493, 495, 505, 553, 554], "statu": [19, 20, 26, 117, 119, 202, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 230, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 256, 257, 258, 259, 260, 261, 262, 361, 364, 365, 367, 368, 369, 370, 372, 373, 374, 375, 376, 377, 378, 379, 381, 382, 383, 384, 385, 387, 388, 389, 422, 427, 465, 466], "std": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 289, 437, 451, 471], "stddev": 66, "stderr": 361, "stdout": [298, 361], "steep": 437, "stefan": [416, 427], "step": [19, 20, 26, 116, 120, 124, 125, 127, 200, 205, 206, 207, 208, 209, 210, 212, 213, 215, 216, 217, 218, 220, 221, 222, 223, 224, 225, 226, 227, 228, 230, 234, 235, 236, 237, 238, 239, 240, 241, 244, 245, 246, 247, 249, 250, 251, 252, 253, 254, 256, 257, 259, 260, 261, 262, 361, 364, 367, 368, 371, 372, 373, 375, 376, 377, 379, 382, 386, 389, 390, 391, 397, 414, 421, 422, 426, 430, 434, 436, 439, 442, 444, 445, 446, 447, 453, 454, 459, 460, 462, 466, 468, 479, 480, 481, 495, 503, 508], "stepprior": 389, "stepsiz": 158, "steradian": 191, "stewart": [127, 282, 438, 554], "stewart2009": [127, 554, 557], "stick": [364, 384, 402, 421, 460, 554], "still": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 368, 369, 371, 374, 375, 378, 380, 381, 382, 385, 386, 388, 390, 391, 419, 420, 421, 466, 468, 481, 493, 517, 518, 555], "stipul": 387, "stone": [361, 381], "stop": [16, 52, 79, 82, 84, 85, 86, 87, 95, 124, 127, 193, 210, 211, 218, 222, 224, 225, 226, 233, 241, 247, 259, 262, 371, 397, 426, 435, 439, 440, 442, 453, 455, 460, 471, 479], "storag": [78, 495], "store": [11, 15, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 56, 67, 78, 79, 81, 82, 83, 86, 117, 118, 119, 122, 124, 151, 164, 165, 183, 184, 186, 192, 195, 196, 200, 201, 203, 211, 233, 344, 361, 364, 367, 369, 370, 371, 373, 374, 377, 379, 383, 385, 387, 388, 391, 409, 412, 413, 431, 436, 437, 446, 447, 451, 455, 459, 460, 461, 462, 463, 464, 467, 470, 471, 472, 473, 481, 491, 492, 495, 500, 501, 502, 507, 508, 531, 552, 553, 555, 559], "store_per_ob": 377, "store_trac": [200, 460], "str": [15, 16, 19, 20, 26, 50, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 78, 79, 80, 81, 82, 83, 84, 85, 86, 88, 89, 94, 95, 96, 97, 99, 100, 101, 102, 103, 104, 105, 107, 114, 116, 117, 118, 119, 120, 122, 124, 125, 127, 128, 129, 130, 135, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 150, 152, 153, 154, 155, 156, 157, 160, 163, 164, 169, 170, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 201, 202, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 230, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 256, 257, 258, 259, 260, 261, 262, 265, 290, 302, 311, 326, 327, 343, 344, 346, 350, 354, 355, 357, 375, 388, 434, 436, 462, 466, 472], "str3": [83, 86], "straight": [362, 393, 495], "straightforward": [391, 558], "strang": 361, "strategi": [361, 368, 375, 426, 460, 558], "stream": 361, "streil": [389, 425, 426, 427], "strength": [51, 54, 389, 531], "stretch": [183, 184, 186, 192, 195, 196, 351, 352, 356, 438, 442, 448, 450, 462, 463, 465, 471, 479, 480, 481], "strict": [16, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 80, 97, 99, 100, 118, 141, 142, 148, 153, 156, 159, 194, 196, 258], "strict_bound": 188, "strictli": [16, 80, 99, 118, 188], "strike": 491, "string": [15, 16, 26, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 56, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 83, 86, 88, 99, 117, 118, 119, 120, 121, 124, 127, 144, 150, 152, 154, 159, 182, 183, 184, 186, 188, 189, 191, 192, 194, 195, 196, 201, 203, 211, 233, 290, 308, 350, 361, 374, 375, 378, 380, 387, 388, 400, 404, 412, 414, 435, 458, 464, 466, 479, 507, 508], "strip": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40], "strip_units_from_tre": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40], "strong": [52, 374, 381, 434, 468], "stronger": 468, "strongli": [279, 376, 378, 387, 412, 439, 460, 468], "structur": [83, 86, 194, 286, 365, 366, 367, 370, 372, 374, 377, 381, 384, 387, 388, 399, 405, 406, 408, 412, 415, 427, 429, 448, 459, 462, 463, 464, 466, 475, 482, 483, 490, 492, 496, 507, 508, 555], "stuck": 555, "student": 364, "studi": [46, 263, 286, 374, 377, 385, 394, 421, 431, 432, 443, 444, 445, 448, 450, 453, 454, 460, 463, 466, 470, 485, 495, 504, 556], "stuff": [362, 391, 495], "stuff1": 361, "stuff2": 361, "style": [83, 86, 96, 183, 184, 186, 192, 195, 196, 358, 364, 370, 387, 416, 418, 442, 450, 461, 463, 479, 480, 495, 508], "sub": [11, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 97, 100, 104, 105, 109, 111, 137, 138, 139, 140, 141, 142, 143, 144, 145, 147, 148, 150, 152, 153, 154, 155, 156, 183, 184, 185, 186, 188, 192, 193, 195, 196, 199, 361, 364, 368, 370, 371, 375, 380, 381, 382, 383, 388, 391, 400, 402, 406, 408, 409, 417, 419, 420, 444, 446, 462, 464, 466, 472, 473, 491, 494, 495, 503, 553, 555, 559], "subclass": [16, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 80, 83, 86, 99, 118, 290, 375, 418, 421, 466, 468], "subcompon": [65, 76], "subfold": [369, 412], "submit": [366, 387], "submodul": [369, 402, 403, 408, 463, 481, 493], "subok": 290, "subpackag": [382, 388, 405, 412, 416], "subplot": [64, 65, 183, 184, 186, 192, 195, 196, 430, 431, 432, 434, 435, 436, 437, 438, 440, 442, 443, 444, 448, 452, 454, 455, 457, 460, 461, 463, 464, 465, 467, 468, 495, 497, 504, 514, 518, 521], "subplot_kw": [438, 440, 444, 455, 464, 504], "subplots_adjust": 457, "subsect": [381, 463], "subsequ": [278, 370], "subset": [78, 79, 83, 86, 120, 124, 234, 388, 416, 417, 444, 455, 465, 470, 472, 494, 553], "subspac": 375, "substanti": [83, 86], "substitut": 556, "substr": [211, 233], "subtract": 436, "succed": 390, "succeed": 117, "success": [16, 80, 96, 99, 117, 118, 119, 120, 121, 124, 125, 127, 200, 389, 412, 431, 432, 434, 435, 436, 438, 442, 443, 444, 448, 452, 455, 460, 465, 471, 479, 480, 519], "successfulli": [96, 431, 432, 434, 435, 436, 442, 443, 444, 454, 455, 460, 471, 479, 480], "sudo": 394, "suffer": [378, 455], "suffic": 454, "suffici": [364, 367, 374, 387, 426], "suffix": [96, 117, 362, 372, 384, 390, 466, 507, 509], "suggest": [364, 366, 368, 371, 375, 381, 383, 385, 389, 438, 446, 447, 495, 555], "suit": [184, 361, 508], "suitabl": 184, "sum": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 82, 97, 100, 104, 105, 119, 120, 121, 123, 124, 125, 127, 134, 137, 138, 139, 140, 141, 143, 144, 145, 147, 150, 151, 152, 153, 154, 155, 156, 183, 184, 186, 192, 195, 196, 210, 218, 222, 224, 225, 226, 241, 247, 259, 262, 263, 272, 274, 276, 357, 361, 371, 372, 374, 383, 385, 389, 403, 427, 442, 446, 455, 457, 459, 468, 471, 479, 480, 481, 491, 501, 554, 556], "sum_": 491, "sum_band": [183, 184], "sum_i": 122, "sum_j": 491, "sum_k": 491, "sum_of_implicit_term": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40], "sum_over_ax": [183, 184, 186, 192, 195, 196, 349, 421, 440, 442, 448, 455, 459, 462, 464, 465, 471, 480], "sum_over_energy_group": [116, 120, 127, 444, 448], "summar": [370, 483], "summari": [15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 50, 51, 52, 53, 54, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 112, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 150, 151, 152, 153, 154, 155, 156, 158, 159, 160, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 256, 257, 258, 259, 260, 261, 262, 272, 274, 298, 302, 312, 335, 348, 362, 364, 381, 399, 431, 435, 453, 454, 459, 470, 479, 495], "summaris": [361, 366, 368, 381], "summat": [272, 274, 367], "summer": 369, "sun": 41, "sunpi": [378, 381, 382], "super": [182, 184, 252, 253, 254, 429, 446, 473, 509, 541, 543], "superexpcutoffpowerlaw3fglspectralmodel": [243, 384, 466, 537], "superexpcutoffpowerlaw4fgldr3spectralmodel": [243, 466, 538], "superexpcutoffpowerlaw4fglspectralmodel": [243, 384, 466, 539], "superfici": 483, "superflu": [371, 455], "supernova": [28, 52, 431, 445, 466, 485, 486], "superpixel": 182, "supersed": [182, 183, 184, 194, 195, 196], "supervisor": 377, "suppli": [19, 20, 26, 83, 86, 205, 206, 209, 213, 215, 216, 217, 221, 227, 228, 230, 234, 236, 238, 239, 240, 244, 249, 251, 252, 253, 254, 257, 261, 454], "support": [79, 81, 82, 83, 84, 85, 86, 87, 90, 95, 97, 100, 104, 105, 108, 119, 135, 146, 151, 182, 183, 184, 185, 186, 193, 194, 195, 196, 200, 211, 233, 360, 365, 366, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 383, 384, 385, 388, 394, 398, 401, 402, 404, 405, 406, 407, 408, 409, 412, 414, 417, 419, 420, 421, 422, 423, 424, 425, 426, 427, 430, 435, 437, 439, 442, 444, 450, 454, 457, 458, 459, 463, 468, 470, 471, 472, 473, 479, 494, 500, 507, 508, 550, 552, 553, 555], "suppos": [225, 259, 366, 373, 554, 556], "suppress": [140, 141, 145, 495], "sure": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 361, 364, 366, 377, 390, 434, 452, 463, 495, 555], "surfac": [28, 30, 35, 36, 39, 40, 45, 200, 248, 263, 316, 380, 409, 460, 466, 485], "surface_brightness_err": 458, "surprisingli": 375, "surround": [52, 308, 361], "survei": [62, 65, 120, 213, 368, 371, 381, 397, 429, 470, 475, 476, 485, 490, 495, 554], "survey_map": [429, 476, 477], "suspect": 557, "suss": [370, 387], "svg": 361, "swap": 182, "swept": 52, "swh": 387, "swhid": 387, "switch": [270, 361, 368, 371, 414, 418], "switcher": 390, "sy": [361, 396], "syllabl": 495, "symbol": 464, "symmetr": [97, 100, 104, 105, 116, 125, 127, 171, 180, 184, 220, 361, 372, 402, 414, 417, 432, 454, 462, 468, 470, 483, 493, 501, 512, 513, 557], "symmetri": [184, 402], "sync": 421, "sync_constraint": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40], "synchronis": 387, "synchrotron": [234, 408, 531], "syntact": [83, 86], "syntax": [16, 83, 86, 362, 377, 380, 406, 423, 555], "synthesi": [485, 486], "synthet": 400, "system": [11, 79, 83, 86, 138, 146, 147, 182, 183, 184, 186, 189, 191, 194, 195, 196, 211, 233, 361, 367, 372, 374, 378, 381, 382, 386, 387, 389, 394, 402, 420, 426, 430, 431, 434, 435, 436, 437, 438, 439, 440, 442, 443, 444, 445, 446, 447, 448, 452, 453, 454, 455, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 468, 470, 471, 472, 473, 479, 480, 481, 506, 507, 553, 555, 559], "systemat": [372, 385, 387, 388, 409, 434, 452, 462, 493, 554, 556], "t": [16, 26, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 50, 51, 52, 53, 65, 67, 79, 80, 82, 83, 84, 86, 99, 112, 113, 114, 116, 117, 118, 119, 120, 121, 124, 125, 127, 134, 135, 140, 180, 193, 211, 225, 233, 270, 272, 273, 274, 288, 333, 337, 360, 361, 362, 364, 366, 368, 369, 371, 373, 375, 377, 378, 379, 380, 381, 384, 385, 386, 388, 391, 392, 393, 395, 397, 409, 413, 416, 417, 418, 421, 426, 430, 431, 434, 439, 442, 444, 445, 448, 450, 451, 452, 455, 457, 458, 460, 462, 463, 464, 466, 467, 468, 470, 471, 483, 487, 488, 489, 491, 493, 495, 504, 542, 543, 544, 545, 546, 547, 548, 553, 554, 555, 558, 559], "t0": [218, 241, 446, 453, 454, 543, 547], "t1": [83, 86], "t1epdptp": 462, "t2": [83, 86], "t_": [52, 53, 278, 500, 543, 544, 545, 546, 547, 548, 556], "t_0": 547, "t_b": 556, "t_decai": [224, 545], "t_delta": [98, 103, 193, 210, 218, 222, 224, 225, 226, 241, 247, 259, 262], "t_i": 278, "t_j": 491, "t_live": [79, 84], "t_max": [210, 218, 222, 224, 225, 226, 241, 247, 259, 262, 374, 385], "t_min": [210, 218, 222, 224, 225, 226, 241, 247, 259, 262, 374, 385], "t_observ": [79, 84], "t_r": 225, "t_ref": [218, 222, 224, 225, 226, 241, 247, 259, 425, 426, 446, 447, 454, 466, 543, 544, 545, 546, 547, 548, 549, 550], "t_rise": [224, 545], "t_start": [82, 492], "t_stop": [52, 82, 492], "ta": 273, "ta2": 273, "ta3": 273, "tab": [140, 366, 442, 448, 452, 468, 504], "tabl": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560], "table_arrai": [83, 86], "table_associ": 65, "table_bkg_src": 445, "table_class": [83, 86], "table_compon": [65, 458], "table_filenam": 26, "table_from_row_data": 426, "table_hdu": 82, "table_identif": 65, "table_large_scale_compon": [65, 458], "table_model": [261, 384], "table_oth": 331, "tableau": 495, "tableclass": [83, 86], "tablegroup": [83, 86], "tableid": [83, 86], "tableiloc": [83, 86], "tableindic": [83, 86], "tableloc": [83, 86], "tablelocindic": [83, 86], "tablemodel": [372, 422], "tablepsf": [382, 400, 402], "tablepsfcheck": 418, "tabul": 483, "tabular": [466, 540], "tackl": 370, "tag": [19, 20, 26, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 80, 83, 86, 94, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 112, 114, 115, 116, 117, 118, 120, 121, 123, 124, 125, 126, 127, 137, 138, 139, 140, 141, 142, 143, 144, 145, 147, 148, 150, 152, 153, 154, 155, 156, 158, 159, 160, 162, 163, 164, 165, 168, 169, 170, 183, 184, 186, 192, 195, 196, 205, 206, 207, 208, 209, 210, 211, 212, 213, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 231, 233, 234, 235, 236, 237, 238, 239, 240, 241, 244, 245, 246, 247, 248, 249, 252, 253, 254, 256, 257, 258, 259, 260, 261, 386, 389, 390, 409, 423, 461, 466, 468, 514, 518], "tail": [470, 555], "take": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 83, 86, 97, 100, 104, 105, 116, 138, 158, 160, 192, 194, 200, 211, 233, 248, 336, 359, 361, 366, 367, 370, 371, 372, 373, 374, 375, 376, 377, 380, 381, 382, 385, 391, 407, 408, 409, 412, 414, 422, 423, 425, 426, 427, 430, 431, 436, 437, 446, 447, 448, 454, 455, 460, 462, 463, 464, 466, 467, 468, 470, 480, 481, 492, 495, 508, 524, 556, 557, 558], "taken": [15, 27, 83, 86, 97, 100, 104, 105, 117, 119, 143, 151, 170, 176, 178, 192, 193, 196, 200, 281, 362, 366, 370, 374, 425, 434, 442, 443, 455, 461, 464, 465, 470, 481, 491, 493, 504, 505, 557], "talk": [364, 366, 368, 378, 387], "tan": [184, 191, 375, 404, 434, 463, 471, 504], "tandem": 483, "tangent": [166, 208, 212, 220, 223, 235, 245, 246, 250, 256, 260], "tangenti": [182, 508], "tar": [391, 470], "target": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 84, 97, 100, 104, 105, 108, 112, 116, 118, 127, 141, 142, 153, 156, 173, 174, 178, 179, 183, 184, 186, 188, 192, 195, 196, 367, 368, 374, 387, 390, 418, 431, 436, 444, 453, 462, 464, 480], "target_nam": 504, "target_posit": [166, 431, 434, 436, 444, 452, 453, 480], "target_radec": 84, "targetmetadata": 118, "task": [311, 381, 385, 387, 388, 390, 391, 422, 435, 438, 462, 463, 471, 475, 479, 495, 503, 553, 555, 559], "task_nam": 311, "tast": 555, "tau": [26, 51, 54, 389, 457, 521], "tau_0": 51, "taul": [26, 457], "taur": [26, 457], "taylor": [52, 53], "tb00058": 134, "tbl": [83, 86], "tctypn": 446, "tcunin": 446, "tdelta_precis": 286, "team": [366, 370, 378, 381, 383, 387, 399, 420], "technic": [363, 364, 366, 374, 381, 383, 385, 387, 391, 439, 495], "techniqu": [367, 376, 377, 379, 431, 434, 442, 445, 462, 464, 502, 505, 553], "tediou": 458, "tel": [83, 86], "telescop": [78, 79, 81, 86, 90, 99, 143, 374, 375, 388, 393, 397, 398, 446, 452, 455, 467, 470, 471, 473], "tell": 436, "temp": [416, 447], "temperatur": [52, 53], "templat": [16, 26, 57, 68, 80, 99, 100, 105, 109, 111, 118, 160, 168, 182, 183, 184, 186, 187, 188, 194, 195, 196, 211, 225, 233, 256, 257, 258, 259, 260, 261, 267, 269, 282, 285, 366, 372, 373, 377, 384, 409, 423, 426, 427, 429, 437, 438, 440, 447, 463, 464, 465, 466, 483, 504, 507, 509, 520, 527, 530, 535, 541, 549], "template_diffus": [465, 471], "template_model": 446, "templatelightcurvetemporalmodel": 423, "templatend": [256, 257, 466], "templatendspatialmodel": [242, 466], "templatendspectralmodel": [26, 243, 414, 425, 466], "templatenpredmodel": [229, 412], "templatephasecurvetemporalmodel": [255, 423, 466, 549], "templatespatialmodel": [65, 242, 383, 384, 409, 423, 424, 426, 427, 446, 465, 466, 471, 519], "templatespectralmodel": [211, 233, 243, 265, 384, 466, 471, 491, 527, 530, 535, 540], "templatetemporalmodel": 423, "tempo2": [455, 495], "tempor": [202, 204, 210, 211, 218, 222, 224, 225, 226, 233, 241, 247, 248, 255, 259, 262, 278, 372, 374, 384, 385, 405, 407, 408, 409, 414, 423, 425, 426, 427, 429, 432, 435, 437, 442, 443, 444, 446, 449, 450, 451, 458, 459, 465, 471, 475, 479, 491, 492, 495, 496, 500, 503, 507, 551, 552, 554], "temporal_model": [248, 374, 446, 447, 454, 466, 542, 543, 544, 545, 546, 547, 548, 549, 550], "temporal_model1": 454, "temporal_model2": 454, "temporal_model_map": 447, "temporal_model_registri": 466, "temporal_typ": 384, "temporalbackground": 372, "temporalmodel": [210, 218, 222, 224, 225, 226, 241, 247, 248, 259, 372, 385, 408, 423, 425, 426, 509], "temporari": 475, "temporarili": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 372], "ten": [367, 381], "tend": [361, 514], "tension": 451, "tensorflow": [379, 381], "tent": 390, "term": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 226, 283, 287, 364, 366, 368, 370, 371, 375, 378, 381, 386, 388, 410, 414, 423, 438, 460, 461, 555, 557, 558], "termin": [83, 86, 96, 377, 392, 393, 394, 395, 396, 431, 432, 434, 435, 436, 442, 443, 444, 455, 460, 471, 479, 480, 555], "terrestri": 559, "terrier": [367, 370, 371, 372, 373, 375, 376, 377, 378, 380, 382, 383, 384, 385, 386, 388, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 414, 415, 416, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427], "test": [6, 89, 96, 109, 111, 114, 116, 117, 119, 120, 121, 124, 125, 127, 133, 151, 153, 156, 183, 184, 186, 192, 195, 196, 225, 270, 271, 272, 274, 277, 320, 335, 336, 337, 338, 339, 340, 341, 362, 367, 368, 369, 370, 371, 373, 374, 375, 376, 377, 378, 379, 386, 389, 390, 391, 401, 403, 404, 406, 408, 412, 413, 414, 417, 418, 419, 420, 421, 422, 423, 426, 431, 437, 438, 447, 450, 452, 453, 454, 459, 461, 493, 495, 499, 505, 549, 550, 554, 557], "test2": 454, "test_aeff3d": 461, "test_edisp": 461, "test_events_with_gti": 492, "test_gti": 492, "test_person_txt": 361, "test_plot": 361, "test_psf": 461, "test_someth": 361, "test_using_data_fil": 340, "test_using_scipi": 341, "testcod": 362, "testoutput": 362, "testpar": 389, "teststatisticnest": 426, "tev": [16, 19, 20, 26, 44, 52, 53, 64, 65, 69, 72, 79, 91, 96, 97, 100, 104, 105, 106, 110, 112, 119, 120, 132, 133, 137, 138, 140, 142, 143, 144, 145, 150, 151, 152, 153, 154, 156, 163, 183, 184, 186, 192, 195, 196, 205, 206, 209, 213, 215, 216, 217, 221, 227, 228, 230, 234, 236, 238, 239, 240, 244, 248, 249, 251, 252, 253, 254, 257, 261, 263, 264, 288, 289, 310, 356, 362, 372, 384, 385, 388, 389, 397, 430, 431, 432, 434, 435, 436, 437, 439, 440, 442, 443, 444, 445, 446, 447, 448, 450, 451, 452, 453, 454, 455, 457, 458, 459, 460, 461, 462, 463, 464, 466, 467, 468, 470, 471, 472, 473, 479, 480, 481, 489, 492, 493, 499, 500, 502, 504, 505, 508, 511, 512, 513, 514, 515, 516, 517, 518, 519, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 542, 543, 544, 545, 546, 547, 548, 549, 550, 553], "tevcat": [413, 458], "tevcat_nam": 69, "tevpi": 400, "tevtevtev1": 444, "tex": 362, "texliv": 362, "text": [17, 18, 21, 22, 23, 24, 25, 27, 50, 51, 52, 53, 54, 100, 105, 117, 119, 127, 245, 246, 289, 350, 362, 369, 377, 387, 391, 435, 455, 461, 470, 479, 481, 512, 513, 514, 517, 518, 522, 538, 545, 555, 557], "textcolor": 350, "textkw": 350, "th": 188, "than": [27, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 83, 86, 126, 144, 145, 152, 154, 160, 181, 182, 183, 184, 186, 187, 188, 191, 192, 194, 195, 196, 270, 279, 339, 354, 361, 364, 366, 367, 368, 371, 374, 375, 376, 379, 380, 385, 387, 388, 391, 420, 423, 424, 425, 427, 430, 431, 442, 443, 446, 451, 452, 453, 460, 462, 464, 467, 468, 491, 508, 513, 514, 555, 557], "thank": [385, 406, 407, 412, 414, 462, 495], "thaw": 465, "thei": [16, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 80, 83, 86, 90, 99, 103, 107, 118, 124, 128, 157, 259, 278, 310, 361, 362, 364, 366, 367, 368, 369, 370, 372, 375, 377, 378, 380, 381, 384, 385, 386, 387, 388, 389, 391, 398, 409, 412, 414, 426, 427, 431, 432, 436, 457, 459, 460, 464, 465, 466, 467, 468, 470, 473, 483, 492, 493, 495, 500, 507, 508, 553, 554, 555, 556, 557, 559], "them": [11, 15, 16, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 79, 80, 83, 86, 95, 99, 118, 202, 204, 211, 233, 290, 361, 362, 364, 366, 368, 369, 375, 377, 380, 387, 388, 390, 391, 397, 404, 420, 431, 432, 434, 437, 439, 442, 443, 445, 447, 452, 458, 459, 460, 463, 464, 466, 468, 470, 472, 475, 480, 492, 495, 504, 555, 557], "theme": [414, 421], "themselv": [83, 86, 377, 462, 464, 502], "theorem": [270, 493, 557], "theoret": 468, "therefor": [100, 367, 371, 374, 375, 376, 380, 382, 384, 394, 412, 431, 452, 455, 460, 463, 464, 467, 468, 481, 493, 557, 558], "thereof": 372, "thermal": [19, 531, 554], "thermal_relic_cross_sect": 19, "theta": [33, 34, 38, 52, 53, 144, 150, 152, 154, 158, 166, 180, 189, 291, 294, 361, 409, 436, 471, 481, 512, 513, 517, 518], "theta2": [170, 180, 359, 420], "theta2_axi": 473, "theta2_max": 359, "theta2_min": 359, "theta2_t": 473, "theta_0": [33, 38], "theta_squared_axi": [180, 473], "thew": 458, "thi": [6, 15, 16, 19, 20, 26, 27, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 46, 47, 56, 65, 66, 67, 78, 79, 80, 81, 82, 83, 84, 86, 95, 97, 98, 99, 100, 103, 104, 105, 108, 112, 116, 117, 118, 119, 120, 121, 123, 124, 126, 127, 128, 132, 134, 137, 138, 139, 140, 141, 142, 143, 144, 145, 147, 148, 150, 151, 152, 153, 154, 155, 156, 158, 160, 163, 165, 166, 167, 169, 171, 173, 174, 177, 179, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 200, 201, 203, 205, 206, 208, 209, 212, 213, 215, 216, 217, 218, 220, 221, 222, 223, 224, 225, 226, 227, 228, 230, 234, 235, 236, 237, 238, 239, 240, 241, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 256, 257, 259, 260, 261, 263, 270, 272, 274, 280, 290, 298, 308, 311, 314, 319, 320, 336, 339, 346, 348, 350, 351, 352, 356, 358, 360, 361, 362, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 397, 399, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 414, 415, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 430, 431, 432, 434, 435, 436, 437, 438, 439, 440, 442, 443, 444, 445, 446, 447, 448, 450, 451, 452, 453, 454, 455, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 470, 471, 472, 473, 475, 477, 479, 480, 481, 483, 484, 491, 492, 493, 495, 497, 498, 499, 500, 501, 502, 504, 505, 506, 507, 508, 511, 512, 513, 514, 515, 516, 517, 518, 519, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 542, 543, 544, 545, 546, 547, 548, 549, 550, 552, 553, 554, 555, 556, 557, 558, 559], "thick": 358, "thin": [56, 302], "thing": [361, 364, 366, 369, 375, 376, 377, 378, 381, 385, 391, 400, 419, 436, 439, 454, 455, 464, 471], "think": [366, 378, 379, 381], "third": [61, 62, 83, 86, 362, 412, 458, 460, 463, 475, 481, 490], "thoma": [387, 420], "thorough": [463, 483], "those": [15, 79, 169, 183, 184, 186, 192, 195, 196, 200, 202, 204, 211, 233, 298, 350, 361, 364, 366, 368, 370, 375, 377, 380, 381, 382, 383, 384, 386, 391, 392, 393, 395, 396, 406, 409, 452, 460, 463, 464, 465, 467, 475, 481, 493, 495, 504, 559], "though": [15, 364, 369, 375, 376, 377, 379, 381, 435, 466, 479], "thought": [366, 375], "three": [83, 86, 151, 273, 361, 370, 373, 375, 387, 444, 446, 451, 452, 463, 468, 475, 500, 507, 554], "threshold": [65, 97, 104, 112, 117, 118, 119, 127, 132, 133, 140, 141, 145, 158, 169, 193, 270, 350, 351, 352, 375, 402, 408, 409, 430, 434, 436, 438, 444, 448, 452, 458, 459, 460, 462, 464, 470, 479, 491, 493], "threshold_alpha": 158, "through": [41, 83, 86, 289, 290, 358, 364, 366, 374, 375, 381, 385, 386, 394, 398, 412, 423, 447, 451, 460, 462, 463, 464, 465, 471, 472, 495, 500, 507, 554, 557], "throughout": [13, 368, 370, 371, 375, 377, 419, 458], "throught": 448, "thrown": 466, "thu": [361, 368, 375, 378, 379, 381, 416, 430, 439, 440, 444, 446, 552, 558], "thumbnail": 412, "ti": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 184, 370, 454], "tibaldo": 417, "tick": [425, 426], "tick_param": 430, "ticker": 350, "tight_layout": [460, 468, 514, 518], "tightli": 380, "tikonov": 389, "tild": [182, 194], "tile": [182, 184], "tilt": [239, 258, 372, 383, 384, 389, 401, 407, 439, 442, 443, 446, 447, 450, 459, 466, 471, 479, 480, 502, 508, 515, 535, 540], "tilt_prior": 389, "tim": 427, "time": [6, 19, 20, 50, 51, 52, 53, 74, 78, 79, 81, 82, 83, 84, 85, 86, 87, 89, 95, 96, 97, 98, 99, 100, 103, 104, 105, 117, 118, 119, 124, 127, 128, 135, 159, 165, 176, 178, 183, 184, 185, 186, 192, 193, 195, 196, 200, 201, 203, 210, 213, 218, 222, 224, 225, 226, 241, 247, 248, 259, 262, 273, 278, 286, 320, 338, 342, 343, 344, 345, 361, 362, 364, 366, 367, 368, 369, 371, 374, 375, 377, 378, 379, 380, 381, 382, 384, 385, 386, 387, 390, 391, 393, 397, 401, 402, 405, 406, 407, 409, 412, 416, 418, 419, 420, 421, 422, 423, 425, 426, 427, 434, 436, 437, 438, 440, 442, 444, 445, 447, 448, 452, 455, 457, 458, 459, 460, 462, 463, 464, 466, 467, 468, 470, 471, 472, 479, 480, 481, 487, 488, 489, 491, 492, 493, 495, 500, 503, 508, 513, 514, 521, 542, 543, 544, 545, 546, 547, 548, 549, 550, 552, 554, 555, 556, 557, 558], "time_axi": [183, 184, 186, 192, 195, 196, 273, 447, 463, 508], "time_bin": 376, "time_bin_end": 376, "time_bin_s": 376, "time_bin_start": 376, "time_bound": 193, "time_box": 86, "time_column": 385, "time_delta": [82, 193, 342, 345], "time_edg": [193, 451, 463], "time_filt": 85, "time_format": [119, 193, 426, 454], "time_interv": [16, 79, 82, 84, 87, 124, 435, 439, 440, 442, 447, 452, 453, 479], "time_map_axi": 463, "time_map_axis_contigu": 463, "time_max": [95, 117, 119, 193, 375, 376, 377, 447, 452, 458, 463], "time_mid": [193, 451], "time_min": [95, 117, 119, 193, 375, 376, 377, 447, 452, 458, 463], "time_rang": [86, 210, 218, 222, 224, 225, 226, 241, 247, 259, 262, 447, 542, 543, 544, 545, 546, 547, 548, 549, 550], "time_ref": [79, 81, 82, 86, 89], "time_ref_default": 82, "time_ref_from_dict": 559, "time_relative_to_ref": 559, "time_seri": 273, "time_start": [81, 82, 86, 376], "time_step": 376, "time_stop": [81, 82, 86, 376], "time_sum": [82, 210, 218, 222, 224, 225, 226, 241, 247, 259, 262], "timedelta": [83, 86, 89, 193, 210, 218, 222, 224, 225, 226, 241, 247, 259, 262, 320, 342, 345, 559], "timedelta64": [83, 86], "timelin": [366, 368, 420], "timemapaxi": [119, 135, 185, 412, 427, 451, 453, 454], "timerangeconfig": 16, "timeref": 446, "timescal": [128, 218, 279, 386, 451], "timeseri": 376, "timesi": [89, 424, 426, 446], "timestamp": 361, "timeunit": 446, "timmer": 273, "timmer1995": 273, "tini": [444, 470], "tip": 495, "titl": [366, 448, 457], "tiziani": 418, "tke": 471, "tm": [83, 86], "tmax": 376, "tmid": [84, 426, 444, 462, 467, 480], "tmin": 376, "to_2d": [138, 473], "to_3d": [137, 425, 427], "to_bands_hdu": [181, 182, 191, 194], "to_binsz": [182, 191, 194, 412], "to_binsz_wc": 191, "to_contigu": [193, 463], "to_counts_hdulist": 102, "to_cub": [181, 182, 183, 184, 186, 191, 192, 194, 195, 196, 409, 440, 508], "to_dict": [19, 20, 26, 94, 96, 97, 100, 104, 105, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 230, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 256, 257, 258, 259, 260, 261, 262, 388, 468], "to_edisp_kernel": [145, 499], "to_edisp_kernel_map": [142, 412, 499], "to_energy_dependent_table_psf": 420, "to_even_npix": 194, "to_fits_head": 81, "to_fram": 189, "to_gti": [193, 427], "to_hdu": [183, 184, 195, 196], "to_hdulist": [97, 100, 104, 105, 117, 119, 137, 138, 139, 140, 141, 142, 143, 144, 145, 147, 148, 150, 152, 153, 154, 155, 156, 183, 184, 190, 191, 192, 195, 196, 463], "to_head": [80, 99, 118, 182, 185, 187, 188, 193, 194, 388], "to_html": 361, "to_imag": [97, 100, 104, 105, 140, 141, 151, 153, 156, 181, 182, 191, 194, 383, 406, 407, 430, 440, 444, 459, 471, 505, 508], "to_json": [16, 80, 99, 118], "to_map": [117, 119], "to_map_dataset": [100, 105], "to_mask": [97, 100, 104, 105, 457], "to_model": [56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 412, 458], "to_node_typ": 188, "to_nsid": [182, 184], "to_odd_npix": 194, "to_panda": [83, 86], "to_parameters_t": [211, 233, 431, 434, 435, 436, 439, 442, 460, 480], "to_pixel": [375, 434, 444, 457, 462, 466, 504, 512, 513, 514], "to_polygon": 375, "to_psf3d": [144, 152, 154], "to_python": [16, 80, 99, 118], "to_region": [207, 208, 211, 212, 220, 223, 233, 237, 245, 246, 260, 375, 406, 466, 512, 513, 514], "to_region_map_dataset": [97, 100, 104, 105, 459], "to_region_nd_map": [141, 142, 148, 153, 156, 184, 192, 196, 409, 412, 471], "to_region_nd_map_histogram": [196, 426], "to_sed_typ": 385, "to_sherpa": [406, 420, 421], "to_spectrum": 412, "to_spectrum_dataset": [95, 97, 100, 104, 105, 383, 405, 407, 455, 459, 468], "to_st": 426, "to_str": [426, 430], "to_swap": [182, 183, 184], "to_tabl": [96, 119, 137, 138, 139, 140, 143, 144, 145, 147, 150, 152, 154, 155, 187, 188, 192, 202, 204, 225, 412, 432, 434, 435, 444, 448, 450, 452, 454, 458, 466, 481, 493], "to_table_hdu": [79, 82, 137, 138, 139, 140, 143, 144, 145, 147, 150, 152, 154, 155, 187, 188, 463], "to_table_psf": 418, "to_template_sky_model": [211, 233], "to_template_spectral_model": [211, 233, 384], "to_unit": [137, 138, 139, 140, 143, 144, 145, 147, 150, 152, 154, 155, 183, 184, 186, 192, 195, 196], "to_wc": [183, 184], "to_wcs_geom": [182, 191, 508], "to_wcs_til": [182, 184], "to_yaml": [16, 80, 99, 118, 211, 233, 372, 388, 466, 511, 512, 513, 514, 515, 516, 517, 518, 519, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 542, 543, 544, 545, 546, 547, 548, 549, 550], "tob": 435, "todai": 387, "todo": [13, 75, 83, 86, 94, 151, 261, 362, 385, 403, 470, 485, 486, 559], "tof": 150, "togeth": [95, 97, 100, 104, 105, 120, 124, 211, 233, 358, 361, 374, 378, 381, 392, 404, 440, 442, 443, 448, 453, 459, 460, 462, 465, 466, 467, 468, 473, 480, 491, 492, 555], "tol": 460, "toler": [82, 95, 124, 137, 138, 139, 140, 143, 144, 145, 147, 150, 152, 154, 155, 182, 183, 184, 186, 188, 191, 192, 194, 195, 196, 338, 460], "tolist": 460, "toml": 409, "ton": [279, 470], "too": [361, 366, 367, 411, 412, 425, 426, 427, 460, 464], "took": 386, "tool": [6, 13, 183, 184, 186, 195, 196, 360, 364, 368, 370, 372, 374, 377, 378, 381, 387, 398, 406, 417, 420, 421, 445, 448, 454, 459, 460, 463, 467, 470, 471, 483, 495, 529, 553, 554], "toolbox": [377, 417], "top": [104, 105, 348, 357, 361, 366, 377, 381, 383, 394, 420, 436, 438, 444, 448, 451, 452, 454, 458, 462, 481, 495, 508, 553, 555, 559], "top_five_ts_3fhl": 481, "tophat2dkernel": 116, "topic": [366, 370, 381, 389, 481], "total": [51, 65, 94, 96, 97, 100, 104, 105, 120, 121, 124, 125, 131, 163, 178, 182, 210, 218, 222, 224, 225, 226, 241, 247, 259, 262, 287, 369, 385, 389, 393, 395, 427, 429, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 453, 454, 455, 456, 457, 458, 459, 460, 462, 463, 464, 465, 468, 469, 471, 474, 476, 478, 479, 480, 481, 482, 485, 491, 495, 500, 510, 520, 531, 541, 551, 554], "total_jfact": 457, "total_jfact_decai": 457, "total_model": 372, "total_obstim": 462, "total_stat": [460, 556], "touch": [82, 401], "tour": 475, "toward": [308, 368, 375, 381, 422], "tox": [326, 362, 364, 423, 430, 431, 434, 435, 436, 437, 438, 439, 440, 442, 443, 444, 445, 446, 447, 448, 450, 452, 453, 454, 455, 457, 458, 459, 460, 462, 463, 464, 465, 466, 468, 470, 471, 472, 473, 479, 480, 481, 519, 527, 530, 543], "tqdm": 495, "trace": [200, 409, 460], "traceback": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 361], "track": [81, 89, 361, 370, 376, 387, 414, 465], "tracker": [364, 375], "tradition": [466, 556], "train": 386, "traitlet": [377, 388], "traittyp": 388, "transfer": 388, "transform": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 79, 81, 89, 151, 185, 187, 188, 193, 194, 211, 233, 292, 296, 319, 324, 361, 375, 377, 385, 389, 400, 402, 418, 421, 438, 444, 462, 468, 507, 512, 513, 559], "transit": [27, 351, 352, 368, 401, 402, 420, 472], "transit_map": 472, "transit_numb": 472, "transitsmap_crab": 472, "translat": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 377, 493], "transpar": 376, "transport": 463, "transpos": 421, "trapezoid": [137, 138, 139, 140, 143, 144, 145, 147, 150, 152, 154, 155, 266, 301], "trapz": 301, "trapz_loglog": 407, "trash": 403, "travi": [406, 408, 412], "treat": [90, 393, 425, 426, 434, 446, 558], "treatment": [412, 442, 554], "trend": 446, "tri": [369, 375], "tributor": 387, "tricki": 375, "trigger": [339, 361, 390, 472], "trim": [97, 100, 141, 142, 148, 153, 156, 159, 194, 196, 258], "tripl": 144, "trivial": 368, "troubl": 555, "troubleshoot": [393, 394, 395], "trough": 451, "true": [15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 35, 36, 37, 39, 40, 45, 76, 78, 79, 80, 82, 83, 84, 86, 88, 91, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 107, 108, 109, 111, 116, 117, 118, 119, 120, 124, 125, 127, 131, 137, 138, 140, 141, 142, 143, 144, 145, 147, 148, 150, 151, 152, 153, 154, 155, 156, 159, 163, 169, 170, 173, 174, 176, 177, 179, 182, 183, 184, 186, 187, 188, 189, 190, 191, 192, 194, 195, 196, 198, 200, 202, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 230, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 256, 257, 258, 259, 260, 261, 262, 287, 290, 298, 299, 302, 320, 330, 332, 349, 354, 358, 361, 367, 374, 375, 376, 377, 384, 385, 388, 403, 407, 408, 419, 421, 422, 430, 431, 432, 434, 435, 436, 437, 438, 439, 440, 442, 443, 444, 445, 446, 447, 448, 450, 452, 453, 454, 455, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 468, 471, 472, 477, 479, 480, 481, 485, 491, 493, 495, 500, 505, 507, 508, 511, 512, 513, 516, 517, 519, 540, 554, 557, 559], "truelov": 53, "truncat": [127, 308, 412], "truncation_valu": [275, 281], "trust": [16, 80, 99, 118], "trustworthi": 389, "truth": 468, "try": [16, 80, 99, 118, 183, 184, 186, 192, 195, 196, 361, 362, 371, 375, 381, 390, 391, 397, 402, 432, 434, 436, 446, 447, 452, 458, 460, 463, 481, 555], "ts2": 273, "ts3": 273, "ts_image_estim": 444, "ts_scan": [117, 119], "ts_threshold": [135, 270], "ts_threshold_ul": [455, 493], "ts_to_sigma": [445, 557], "tsimageestim": 420, "tsmap_est": 354, "tsmapestim": [113, 134, 354, 382, 385, 407, 408, 410, 412, 426, 438, 444, 495], "tstart": [84, 86, 374, 376, 437, 446, 450, 453, 454, 470], "tstop": [84, 374, 376, 437, 446, 450, 453, 470], "tt": [82, 89, 343, 344, 387, 447, 453, 559], "tth_sec3": 188, "tupl": [16, 19, 20, 26, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 41, 56, 79, 80, 83, 84, 86, 96, 97, 99, 100, 104, 105, 118, 122, 127, 137, 138, 140, 141, 142, 143, 144, 145, 148, 150, 151, 152, 153, 154, 156, 159, 164, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 194, 195, 196, 205, 206, 209, 213, 215, 216, 217, 221, 227, 228, 230, 234, 236, 238, 239, 240, 244, 249, 251, 252, 253, 254, 257, 258, 261, 272, 274, 277, 302, 312, 319, 361, 463, 507], "turn": [79, 84, 362, 364, 375, 470, 552], "tutori": [78, 94, 114, 124, 126, 168, 361, 364, 365, 370, 373, 374, 375, 376, 377, 378, 379, 382, 391, 395, 396, 397, 398, 401, 402, 403, 404, 405, 406, 407, 408, 409, 411, 412, 414, 415, 418, 419, 420, 421, 422, 423, 426, 427, 429, 430, 431, 432, 433, 434, 435, 436, 437, 439, 441, 442, 443, 444, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 458, 459, 460, 461, 463, 465, 466, 467, 468, 469, 471, 472, 473, 474, 476, 478, 479, 480, 481, 482, 495, 496, 498, 507, 552, 555], "tutorials_jupyt": [390, 475], "tutorials_python": 475, "tweak": [377, 412, 463], "twice": [116, 507, 558], "twinx": 430, "two": [19, 20, 26, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 59, 82, 83, 85, 86, 96, 97, 100, 104, 105, 137, 138, 139, 140, 143, 144, 145, 146, 147, 150, 152, 154, 155, 159, 164, 166, 182, 183, 184, 185, 186, 188, 191, 192, 194, 195, 196, 200, 205, 206, 207, 208, 209, 210, 211, 212, 213, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 230, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 256, 257, 258, 259, 260, 261, 262, 270, 320, 329, 350, 355, 358, 360, 361, 362, 364, 368, 370, 371, 372, 373, 375, 376, 377, 378, 379, 381, 382, 385, 386, 387, 389, 390, 391, 393, 414, 420, 422, 426, 435, 436, 442, 443, 445, 448, 454, 458, 459, 460, 461, 463, 464, 466, 467, 468, 470, 472, 479, 480, 485, 491, 492, 493, 495, 504, 507, 508, 523, 557, 558], "txt": [119, 386, 388, 465, 471], "tyler": 414, "type": [16, 19, 20, 26, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 67, 80, 83, 85, 86, 91, 94, 95, 96, 97, 99, 108, 116, 117, 118, 119, 121, 127, 157, 163, 181, 182, 183, 184, 186, 188, 191, 192, 194, 195, 196, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 256, 257, 258, 259, 260, 261, 262, 263, 290, 320, 367, 370, 371, 372, 373, 375, 376, 377, 380, 384, 385, 387, 389, 391, 392, 397, 405, 412, 418, 419, 420, 426, 431, 432, 434, 435, 436, 437, 439, 440, 442, 443, 444, 445, 446, 447, 448, 450, 452, 453, 454, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 470, 471, 472, 479, 480, 481, 483, 493, 495, 507, 511, 512, 513, 514, 515, 516, 517, 518, 519, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 542, 543, 544, 545, 546, 547, 548, 549, 550, 554, 555], "typeerror": [16, 80, 99, 118, 290, 375, 385, 389], "typic": [117, 367, 370, 372, 379, 383, 384, 385, 386, 388, 393, 394, 431, 436, 440, 448, 450, 452, 453, 458, 459, 461, 464, 466, 467, 483, 490, 491, 492, 500, 504, 553, 554], "typing_extens": [16, 80, 99, 118], "typo": [361, 398, 424, 425], "u": [19, 20, 26, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 64, 79, 81, 83, 86, 91, 97, 100, 104, 105, 109, 111, 112, 119, 121, 123, 127, 132, 133, 140, 142, 151, 183, 184, 186, 192, 195, 196, 205, 206, 209, 213, 215, 216, 217, 221, 225, 227, 228, 230, 234, 236, 238, 239, 240, 244, 249, 251, 252, 253, 254, 257, 261, 263, 264, 273, 288, 289, 290, 310, 356, 361, 364, 368, 369, 370, 376, 377, 378, 379, 384, 385, 388, 389, 401, 402, 403, 420, 421, 422, 430, 431, 432, 434, 436, 437, 438, 439, 440, 442, 443, 444, 445, 446, 447, 448, 450, 452, 453, 454, 455, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 470, 471, 472, 473, 479, 480, 481, 485, 492, 493, 495, 497, 502, 504, 505, 508, 512, 514, 515, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 542, 543, 544, 545, 546, 547, 548, 549], "u03c3": 445, "u18": [33, 38], "uc": [83, 86], "ufunc": [183, 184, 186, 192, 195, 196, 436], "ui": [28, 30, 31, 32, 33, 35, 36, 37, 38, 39, 40, 50, 52, 53, 57, 58, 60, 61, 79, 84, 112, 120, 143, 230, 263, 264, 280], "ul": [65, 116, 117, 119, 120, 121, 124, 125, 127, 271, 443, 448, 454, 458], "ultim": 361, "un": [373, 387, 409, 465], "unambigu": 466, "unbehaun": 427, "unbin": [373, 374, 421], "unboundlocalerror": 361, "uncertaint": 379, "uncertainti": [52, 97, 100, 104, 105, 272, 274, 365, 378, 419, 432, 434, 455, 460, 468, 480, 553, 554, 556], "unchang": [97, 100, 104, 105, 109, 111, 117, 119, 137, 138, 139, 140, 141, 142, 143, 144, 145, 147, 148, 150, 152, 153, 154, 155, 156, 181, 182, 183, 184, 186, 187, 191, 192, 194, 195, 196, 420], "unclear": [361, 371, 372, 378, 388], "uncom": [377, 470], "undefin": 558, "under": [70, 86, 134, 361, 365, 370, 378, 387, 421, 422, 435, 475, 479, 491, 557, 558], "underestim": 493, "underflow": 193, "underli": [83, 86, 191, 374, 432, 458, 463, 468, 481, 483, 492, 495, 504, 507], "underscor": 361, "understand": [377, 398, 406, 407, 431, 434, 435, 436, 439, 446, 447, 451, 453, 454, 463, 464, 465, 470, 479, 480, 483, 555], "undertak": 381, "unexpect": 472, "unfold": 554, "unfreez": [19, 20, 26, 202, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 230, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 256, 257, 258, 259, 260, 261, 262, 531], "unfreeze_al": [202, 204, 465], "unfrozen": 502, "unheard": 555, "uni": 389, "uni_prior_stat_sum": 468, "unicod": [83, 86, 361], "unid": 65, "unidimension": 187, "unif": 406, "unifi": [83, 86, 365, 370, 375, 401, 404, 406, 407, 408, 409, 412, 421, 422, 554], "uniform": [151, 200, 319, 361, 370, 372, 373, 383, 385, 389, 403, 404, 408, 412, 431, 463, 468, 553], "uniform_filt": [122, 196], "uniformli": [374, 493], "uniformprior": [389, 468], "uninstal": 360, "union": [80, 82, 85, 97, 99, 100, 118, 191, 325, 375, 376, 387, 388, 404, 491], "uniqu": [83, 86, 95, 140, 182, 183, 184, 185, 186, 192, 194, 195, 196, 202, 204, 211, 233, 354, 371, 372, 373, 374, 384, 387, 407, 435, 459, 466, 472, 508, 552], "unique_id": 466, "unique_paramet": [202, 204], "uniquifi": [83, 86], "unit": [6, 16, 19, 20, 26, 27, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 52, 64, 79, 81, 83, 84, 86, 91, 96, 97, 100, 102, 104, 105, 106, 109, 110, 111, 112, 117, 119, 121, 123, 127, 132, 133, 137, 138, 139, 140, 142, 143, 144, 145, 147, 150, 151, 152, 153, 154, 155, 163, 166, 182, 183, 184, 185, 186, 188, 189, 191, 192, 193, 194, 195, 196, 201, 203, 205, 206, 208, 209, 212, 213, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 230, 234, 236, 237, 238, 239, 240, 241, 244, 245, 246, 247, 248, 249, 251, 252, 253, 254, 257, 258, 259, 260, 261, 263, 264, 273, 288, 289, 290, 320, 332, 333, 334, 336, 345, 346, 347, 350, 351, 352, 356, 362, 370, 372, 375, 377, 379, 384, 385, 389, 401, 402, 404, 412, 414, 420, 421, 423, 424, 425, 426, 430, 431, 432, 434, 435, 436, 437, 438, 439, 440, 442, 443, 444, 445, 446, 447, 448, 450, 452, 453, 454, 455, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 470, 471, 472, 473, 479, 480, 481, 485, 487, 488, 489, 492, 493, 495, 497, 499, 500, 502, 504, 505, 506, 507, 508, 511, 512, 513, 514, 515, 516, 517, 518, 519, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 542, 543, 544, 545, 546, 547, 548, 549, 550, 554], "unit_string_format": [426, 430], "unitbas": 290, "uniti": [122, 185, 260, 424, 514], "unitless": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 219, 258], "unitsmap": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40], "unitswarn": [430, 437, 439, 442, 444, 450, 454, 470], "univers": [183, 184, 186, 192, 195, 196, 554], "univsers": 20, "unknown": [274, 438, 460, 554, 556, 557], "unless": [88, 90, 120, 121, 124, 127, 159, 290, 360, 367, 386, 388, 461], "unlik": [83, 86, 270, 368, 379], "unmaintain": 402, "unmask": [83, 86], "unnam": [83, 86, 189], "unnecessari": [412, 423, 442], "unneed": 426, "unphys": 558, "unrealist": 361, "unrel": 559, "unreli": 470, "unsaf": 361, "unstabl": [361, 470], "unsupport": 378, "untar": 470, "until": [361, 364, 368, 375, 386, 419], "unus": [377, 404, 406], "unusu": 366, "up": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 52, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 71, 121, 123, 127, 144, 150, 152, 154, 191, 290, 361, 362, 365, 366, 368, 369, 370, 373, 375, 377, 378, 379, 381, 383, 387, 389, 391, 392, 393, 395, 397, 400, 402, 403, 404, 405, 406, 407, 408, 409, 412, 416, 418, 419, 420, 421, 422, 434, 435, 442, 445, 446, 468, 470, 471, 508, 555], "upcast": 290, "upcom": [369, 370], "updat": [15, 16, 80, 83, 86, 98, 99, 103, 118, 190, 201, 203, 211, 233, 270, 310, 329, 361, 364, 366, 367, 368, 369, 370, 373, 378, 383, 385, 387, 388, 390, 391, 393, 394, 401, 402, 403, 404, 405, 406, 407, 409, 411, 412, 413, 414, 415, 418, 419, 420, 421, 423, 426, 427, 463, 466, 506, 507, 559], "update_config": 15, "update_forward_ref": [16, 80, 99, 118], "update_from_dict": [201, 203], "update_link_label": [211, 233], "update_parameters_from_t": [211, 233], "upgrad": [182, 360, 386, 394], "upload": [378, 390, 470], "upon": [97, 100, 104, 105, 370, 439, 465, 470, 491], "upper": [17, 18, 19, 20, 21, 22, 24, 25, 26, 27, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 76, 96, 116, 117, 118, 119, 120, 121, 124, 125, 127, 140, 188, 193, 200, 205, 206, 209, 210, 213, 215, 216, 217, 218, 221, 222, 224, 225, 226, 227, 228, 230, 234, 236, 238, 239, 240, 241, 244, 247, 249, 251, 252, 253, 254, 257, 259, 261, 262, 271, 272, 274, 388, 397, 408, 412, 419, 420, 421, 427, 434, 448, 452, 459, 462, 479, 491, 493], "upper_error": 119, "upsampl": [153, 181, 182, 183, 184, 185, 186, 187, 188, 191, 192, 193, 194, 195, 196, 403, 423], "upsample_geom": 153, "upstream": [361, 364], "upward": [272, 274], "url": 369, "us": [11, 13, 16, 17, 18, 19, 20, 21, 22, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 35, 36, 37, 39, 40, 41, 46, 47, 53, 56, 57, 59, 63, 67, 68, 69, 71, 72, 76, 78, 79, 80, 81, 82, 83, 84, 86, 88, 89, 90, 91, 96, 97, 98, 99, 100, 102, 103, 104, 105, 107, 108, 114, 116, 117, 118, 119, 120, 121, 122, 124, 125, 127, 128, 129, 130, 132, 133, 136, 137, 138, 139, 140, 141, 143, 144, 145, 147, 150, 151, 152, 153, 154, 155, 156, 158, 159, 160, 163, 166, 167, 168, 169, 170, 171, 172, 173, 174, 176, 179, 180, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 215, 216, 217, 218, 220, 221, 222, 223, 224, 225, 226, 227, 228, 230, 233, 234, 235, 236, 237, 238, 239, 240, 241, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 256, 257, 258, 259, 260, 261, 262, 264, 266, 271, 273, 275, 286, 288, 290, 298, 301, 302, 303, 310, 311, 314, 319, 320, 326, 329, 344, 345, 347, 348, 350, 351, 352, 354, 355, 356, 357, 358, 360, 362, 363, 364, 366, 367, 368, 369, 370, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 387, 388, 390, 391, 392, 393, 395, 396, 398, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 412, 413, 414, 416, 417, 418, 419, 420, 421, 422, 423, 424, 426, 427, 429, 430, 431, 432, 434, 436, 437, 438, 439, 440, 442, 443, 444, 447, 448, 450, 451, 453, 454, 455, 457, 458, 462, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 475, 477, 481, 484, 485, 495, 497, 498, 499, 501, 505, 506, 508, 509, 511, 512, 513, 514, 515, 516, 517, 518, 519, 521, 522, 523, 524, 525, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 553, 554, 555, 556, 557, 559, 560], "usabl": 361, "usag": [16, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 78, 80, 99, 114, 118, 124, 126, 168, 181, 182, 191, 194, 314, 367, 371, 372, 374, 376, 380, 385, 405, 426, 427, 458, 462, 464, 465, 555], "use_cach": 234, "use_center_as_plot_label": 188, "use_enum_valu": [16, 80, 99, 118], "use_evaluation_region": [211, 233], "use_fft": 196, "use_local_fil": [83, 86], "use_nullable_int": [83, 86], "use_region_cent": [163, 170, 173, 174, 176, 177, 412, 431], "useless": 470, "user": [15, 19, 20, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 78, 84, 201, 205, 208, 209, 212, 213, 215, 216, 217, 218, 220, 221, 222, 223, 224, 225, 226, 227, 228, 230, 237, 238, 239, 240, 241, 244, 245, 246, 247, 249, 252, 253, 254, 259, 260, 361, 362, 364, 366, 367, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 383, 385, 386, 387, 388, 390, 391, 392, 393, 394, 398, 405, 412, 413, 419, 420, 421, 423, 435, 445, 446, 447, 459, 461, 463, 464, 465, 466, 467, 475, 479, 492, 493, 494, 495, 500, 504, 510, 516, 520, 541, 551, 552, 555], "userdataset": 373, "usernam": 364, "userwarn": [434, 436, 443, 444, 448, 471], "uses_quant": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40], "usr": 555, "usual": [29, 78, 79, 117, 132, 137, 138, 139, 151, 192, 298, 361, 362, 364, 366, 367, 368, 369, 375, 376, 381, 387, 391, 426, 430, 431, 432, 434, 436, 437, 439, 440, 444, 446, 447, 450, 451, 452, 453, 454, 457, 459, 464, 467, 472, 480, 483, 491, 495, 497, 498, 499, 501, 504, 508, 513, 552, 554, 555, 556], "ut1": 559, "utc": [82, 84, 99, 118, 342, 446, 452, 453, 463, 466, 542, 543, 544, 545, 546, 547, 548, 549, 550, 559], "utf": [83, 86], "utf8": [16, 80, 99, 118], "util": [6, 91, 99, 106, 109, 110, 111, 118, 119, 121, 128, 129, 130, 131, 132, 133, 134, 135, 136, 142, 172, 173, 174, 175, 176, 177, 178, 179, 180, 269, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 361, 370, 372, 373, 374, 375, 385, 400, 403, 404, 405, 406, 413, 414, 417, 418, 419, 420, 421, 422, 426, 427, 430, 431, 434, 435, 436, 437, 438, 439, 440, 442, 443, 444, 445, 446, 447, 448, 451, 452, 453, 454, 455, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 470, 471, 472, 473, 479, 480, 481, 483, 484, 495, 554], "utilis": [79, 133, 362, 430, 434, 438, 445, 451, 463, 467, 492, 495], "v": [26, 31, 32, 37, 83, 86, 144, 150, 152, 153, 154, 156, 165, 172, 190, 259, 270, 294, 364, 369, 376, 377, 388, 389, 390, 391, 414, 430, 452, 457, 467, 479], "v0": [90, 368, 369, 372, 373, 375, 378, 380, 381, 386, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 414, 415, 421, 422, 423, 446, 447, 461, 465], "v1": [13, 16, 79, 80, 84, 99, 118, 361, 368, 370, 372, 377, 378, 379, 380, 386, 387, 390, 393, 395, 406, 407, 408, 414, 419, 423, 424, 425, 426, 427, 527, 530], "v2": [387, 388, 412, 420, 427, 470], "v3": 404, "v_0": [37, 49], "v_glat": 297, "v_glon": 297, "va": 512, "vagu": 366, "vain": 364, "val": [83, 86, 183, 184, 186, 192, 195, 196, 202, 204, 463, 507], "valfmt": 350, "valid": [16, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 80, 83, 86, 99, 101, 117, 118, 121, 134, 155, 169, 181, 182, 183, 184, 185, 186, 187, 188, 189, 191, 192, 194, 195, 196, 290, 308, 360, 361, 370, 374, 377, 378, 387, 406, 414, 423, 431, 434, 460, 462, 463, 466, 471, 493, 495, 500, 554], "valid_hdu_class": [78, 83], "valid_hdu_typ": 83, "validate_al": 388, "validate_assign": [16, 80, 99, 118, 388], "validate_default": [16, 80, 99, 118], "validate_loc": 388, "validate_zenith_angl": 388, "validationerror": [16, 80, 99, 118, 388], "valle": 38, "valleespir": 485, "valu": [11, 15, 16, 19, 20, 26, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 42, 52, 79, 80, 82, 83, 84, 86, 87, 90, 94, 95, 96, 97, 99, 100, 104, 105, 107, 112, 114, 116, 117, 118, 119, 120, 121, 122, 124, 125, 127, 132, 133, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 150, 152, 153, 154, 155, 156, 159, 163, 169, 170, 172, 173, 174, 176, 177, 181, 182, 183, 184, 185, 186, 187, 188, 190, 191, 192, 193, 194, 195, 196, 200, 201, 202, 203, 204, 205, 206, 208, 209, 210, 211, 212, 213, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 230, 233, 234, 235, 236, 237, 238, 239, 240, 241, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 256, 257, 258, 259, 260, 261, 262, 263, 270, 271, 272, 274, 275, 277, 278, 279, 290, 294, 302, 303, 317, 320, 329, 332, 347, 350, 351, 352, 362, 364, 367, 372, 373, 375, 377, 379, 381, 384, 385, 388, 403, 406, 412, 423, 426, 427, 430, 431, 432, 434, 435, 436, 437, 438, 439, 440, 442, 443, 444, 446, 447, 448, 450, 451, 452, 453, 454, 455, 457, 458, 459, 460, 461, 462, 464, 465, 466, 467, 470, 471, 472, 473, 479, 480, 481, 483, 487, 488, 489, 493, 495, 499, 507, 508, 511, 512, 513, 514, 515, 516, 517, 518, 519, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 542, 543, 544, 545, 546, 547, 548, 549, 550, 555, 556, 557, 558], "value_rang": 86, "value_scan": 271, "valueerror": [16, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 70, 80, 83, 86, 87, 95, 99, 118, 211, 233, 361, 375, 388], "values_equ": [83, 86], "values_err": 455, "values_scal": [137, 138, 139, 192, 196, 225, 256, 260, 261, 302, 424, 426, 447, 461], "vanilla": [83, 86], "var": [280, 393, 395], "vari": [66, 98, 103, 124, 151, 200, 302, 329, 373, 375, 376, 386, 406, 409, 429, 439, 444, 445, 447, 456, 462, 466, 468, 471, 475, 491, 493, 500, 503, 552], "variability_amplitud": 451, "variability_amplitude_100": 451, "variability_amplitude_error": 451, "variability_amplitude_signific": 451, "variability_estim": [429, 451, 456], "variabl": [11, 16, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 78, 80, 86, 99, 118, 128, 196, 272, 274, 277, 278, 279, 280, 286, 301, 327, 361, 362, 364, 374, 376, 377, 391, 393, 395, 401, 402, 418, 419, 420, 426, 427, 429, 430, 431, 434, 435, 436, 437, 438, 439, 440, 442, 443, 444, 445, 447, 448, 452, 453, 454, 455, 456, 457, 458, 459, 460, 462, 463, 464, 465, 466, 468, 470, 471, 472, 473, 475, 479, 480, 481, 500, 555, 556, 557], "varianc": [91, 129, 130, 279, 280, 289, 376, 427, 467], "variant": 391, "variat": [128, 226, 279, 367, 377, 430, 451, 461, 462, 505, 557], "varieti": [372, 553], "variou": [114, 120, 121, 124, 125, 127, 133, 361, 367, 371, 373, 376, 385, 388, 391, 393, 412, 413, 427, 432, 435, 438, 443, 445, 452, 460, 479, 491, 495, 553, 559], "vast": [378, 414], "vaughan": [280, 451], "vaughan2003": 280, "ve": [361, 362, 364, 555], "vector": [181, 182, 183, 184, 186, 191, 192, 194, 195, 196, 463, 499, 507], "vega": 421, "vel": 455, "vel_di": [45, 485], "vela": [64, 400, 432, 455, 481], "veloc": [31, 32, 37, 45, 49, 294, 297], "ver": 463, "verbos": [11, 78, 362, 384, 555, 557], "veri": [62, 83, 86, 132, 200, 351, 360, 361, 362, 363, 366, 367, 372, 374, 375, 376, 377, 378, 379, 380, 381, 384, 385, 388, 391, 422, 430, 437, 451, 458, 460, 463, 468, 471, 481, 491, 495, 508, 517, 518, 552, 554, 555, 556], "verif": [95, 211, 233, 328, 443, 471], "verifi": [202, 204, 223, 270, 361, 374, 458, 495], "verifywarn": 495, "verita": [92, 393, 398, 471], "versa": 182, "version": [11, 74, 79, 81, 83, 84, 86, 119, 120, 121, 124, 171, 201, 203, 360, 362, 364, 365, 368, 369, 370, 371, 375, 378, 381, 387, 388, 389, 391, 392, 393, 394, 395, 396, 398, 400, 401, 402, 403, 405, 406, 411, 413, 414, 416, 419, 420, 421, 423, 424, 426, 427, 430, 431, 434, 435, 436, 437, 438, 439, 440, 442, 443, 444, 445, 446, 447, 448, 452, 453, 454, 455, 457, 458, 459, 460, 462, 463, 464, 465, 466, 468, 470, 471, 472, 473, 479, 480, 481, 493, 555], "versu": [137, 143, 270, 272, 274, 470, 489], "vert": 240, "vertex": 375, "vhe": [431, 483], "via": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 65, 78, 79, 86, 98, 103, 184, 189, 199, 360, 362, 364, 369, 373, 375, 376, 377, 378, 379, 380, 382, 384, 387, 388, 389, 390, 391, 393, 394, 401, 409, 417, 419, 420, 421, 425, 426, 430, 431, 432, 434, 435, 436, 437, 438, 439, 440, 442, 443, 444, 445, 446, 447, 448, 450, 451, 452, 453, 454, 455, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 470, 471, 472, 473, 477, 479, 480, 481, 495, 499, 504, 508, 511, 512, 513, 514, 515, 516, 517, 518, 519, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 542, 543, 544, 545, 546, 547, 548, 549, 550, 552, 555, 559], "viabil": 388, "vice": 182, "victor": 416, "view": [79, 83, 86, 137, 138, 139, 140, 143, 144, 145, 146, 147, 150, 152, 154, 155, 160, 183, 184, 186, 190, 192, 195, 196, 219, 292, 296, 348, 361, 375, 402, 407, 412, 414, 421, 422, 434, 436, 440, 442, 446, 459, 461, 462, 464, 470, 471, 495, 497, 498, 499, 500, 501, 502, 504, 554], "vika": 412, "vin\u00edciu": 419, "viridi": [436, 457], "virtual": [364, 391, 393, 394, 395, 555], "visibl": [83, 86, 351, 352, 369, 412, 430, 446, 472, 480, 481, 554], "vision": 366, "visit": 447, "visual": [6, 184, 196, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 375, 407, 408, 426, 427, 434, 436, 440, 442, 444, 447, 460, 461, 467, 472, 473, 480, 481, 495, 504, 509, 512, 553], "visualis": [358, 373, 375, 382, 408, 423, 436, 438, 461, 466, 468, 470, 495], "vkwmwj3o": 442, "vline": [489, 512, 513], "vmax": [97, 100, 104, 105, 351, 352, 439, 442, 444, 450, 459, 463, 464, 471, 472, 479, 480, 504], "vmin": [97, 100, 104, 105, 351, 352, 438, 442, 450, 459, 463, 464, 471, 472, 479, 480, 504], "volum": [27, 187, 191, 194], "vorokh": [417, 418], "voruganti": [419, 420], "vstack": [79, 82, 374], "vuillaum": [387, 420], "vx": [294, 297, 386], "vy": [294, 297], "vz": [294, 297], "w": [26, 31, 49, 82, 180, 193, 287, 362, 386, 438, 440, 448, 457, 462, 466, 468, 495, 504, 556, 558], "wa": [16, 19, 20, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 59, 80, 81, 83, 86, 88, 89, 97, 99, 112, 118, 120, 121, 124, 127, 159, 201, 205, 208, 209, 212, 213, 215, 216, 217, 218, 220, 221, 222, 223, 224, 225, 226, 227, 228, 230, 237, 238, 239, 240, 241, 244, 245, 246, 247, 249, 252, 253, 254, 259, 260, 354, 361, 364, 366, 367, 368, 369, 370, 371, 374, 375, 377, 378, 379, 380, 381, 382, 384, 385, 386, 387, 388, 389, 391, 401, 404, 405, 406, 407, 408, 409, 416, 420, 421, 422, 423, 424, 425, 426, 432, 434, 440, 442, 444, 462, 468, 470, 471, 472, 473, 481, 555], "wagner": 451, "wai": [33, 38, 79, 83, 86, 188, 273, 314, 320, 360, 361, 362, 364, 366, 367, 368, 369, 371, 372, 373, 375, 376, 377, 378, 381, 382, 385, 387, 393, 394, 395, 397, 400, 404, 420, 421, 432, 434, 436, 439, 442, 451, 458, 459, 460, 462, 463, 464, 465, 467, 470, 471, 472, 473, 475, 485, 492, 494, 495, 499, 508, 553, 555, 557], "wait": [361, 390, 391], "wall": [79, 84], "want": [16, 19, 20, 26, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 78, 79, 80, 99, 102, 118, 140, 166, 191, 205, 206, 209, 213, 215, 216, 217, 221, 227, 228, 230, 234, 236, 238, 239, 240, 244, 249, 251, 252, 253, 254, 257, 261, 361, 363, 364, 366, 367, 368, 371, 375, 376, 377, 379, 380, 381, 391, 392, 393, 394, 395, 397, 398, 401, 421, 431, 434, 435, 436, 437, 439, 446, 447, 450, 452, 454, 455, 457, 458, 459, 460, 462, 463, 464, 465, 466, 468, 470, 471, 479, 480, 481, 499, 552, 555, 556, 557, 558, 559], "ward": 288, "warn": [11, 16, 26, 78, 80, 83, 86, 99, 118, 184, 201, 202, 203, 204, 256, 257, 258, 260, 347, 386, 391, 403, 420, 425, 426, 427, 430, 437, 438, 439, 442, 443, 444, 446, 447, 450, 454, 455, 470, 471, 495, 519, 527, 530, 555], "warn_miss": 83, "warn_with_traceback": 361, "wasn": [368, 421], "watch": [471, 559], "water": [393, 472], "watson": 402, "wavelength": 380, "wavelet": [400, 418], "wc": [13, 16, 79, 97, 100, 104, 121, 158, 166, 167, 171, 182, 183, 184, 186, 191, 192, 194, 195, 196, 208, 211, 212, 220, 223, 233, 235, 245, 246, 250, 256, 260, 323, 356, 361, 367, 375, 380, 402, 403, 404, 406, 412, 420, 421, 425, 427, 434, 435, 438, 439, 440, 442, 444, 448, 452, 455, 457, 459, 461, 462, 464, 465, 466, 471, 479, 480, 481, 504, 507, 512, 513, 514, 519], "wcda": [57, 68], "wcs_geom": [191, 211, 233, 463, 508], "wcs_geom_3d": 463, "wcs_geom_cel": 463, "wcs_map": [195, 196, 354], "wcs_tile": [182, 184], "wcsax": [97, 100, 104, 105, 184, 191, 192, 196, 211, 233, 356, 358, 442, 463, 481, 511, 515, 516, 517], "wcsconfig": 16, "wcsgeom": [23, 79, 97, 100, 104, 105, 106, 108, 110, 116, 117, 127, 142, 151, 153, 163, 176, 177, 181, 182, 191, 195, 196, 207, 208, 212, 220, 223, 235, 237, 245, 246, 250, 256, 260, 362, 367, 375, 402, 405, 406, 407, 412, 425, 427, 434, 439, 444, 446, 447, 448, 450, 455, 457, 459, 461, 462, 463, 464, 466, 471, 472, 473, 480, 481, 491, 493, 502, 504, 505, 508, 511, 513, 514, 515, 516], "wcslib": 361, "wcsmap": [183, 184, 186, 196, 423], "wcsndmap": [97, 100, 106, 110, 112, 127, 132, 151, 153, 156, 158, 160, 165, 166, 167, 168, 171, 176, 177, 182, 183, 184, 186, 192, 194, 195, 197, 198, 211, 233, 248, 256, 348, 354, 356, 367, 405, 406, 407, 409, 412, 414, 421, 423, 426, 427, 438, 439, 448, 457, 459, 462, 463, 471, 481, 491, 493, 501, 504], "wcsprm": 519, "wcsshape": 463, "we": [13, 19, 20, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 63, 79, 83, 84, 85, 86, 90, 165, 191, 194, 201, 205, 208, 209, 212, 213, 215, 216, 217, 218, 220, 221, 222, 223, 224, 225, 226, 227, 228, 230, 237, 238, 239, 240, 241, 244, 245, 246, 247, 249, 252, 253, 254, 259, 260, 264, 336, 361, 362, 364, 366, 367, 368, 370, 371, 372, 373, 374, 375, 378, 379, 380, 381, 382, 383, 384, 387, 388, 390, 391, 392, 393, 394, 395, 397, 400, 401, 402, 403, 408, 412, 414, 419, 420, 421, 422, 430, 431, 432, 434, 435, 436, 437, 438, 439, 440, 442, 443, 444, 445, 446, 447, 448, 450, 451, 452, 453, 454, 455, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 470, 471, 477, 479, 480, 481, 492, 499, 500, 502, 504, 507, 518, 521, 531, 552, 555, 556, 557, 558, 559], "weak": [380, 468], "weaker": 270, "weakli": 464, "web": [83, 86, 369, 387, 390, 391, 397, 398, 412, 420, 458], "webpag": [363, 369, 381, 387, 390, 420, 423], "wedg": 375, "week": [364, 369, 379, 381, 386, 390], "weekli": [367, 370, 374, 375, 452], "wegen": [420, 421], "weigh": [153, 156, 468], "weight": [65, 141, 142, 148, 151, 153, 156, 182, 183, 184, 186, 191, 192, 194, 195, 196, 258, 389, 422, 426, 445, 468, 491, 507], "weighted_chi2_paramet": 445, "weighted_kernel": 151, "welcom": [366, 375, 471], "well": [11, 19, 20, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 56, 65, 79, 83, 86, 100, 105, 109, 111, 116, 117, 125, 182, 186, 188, 192, 194, 201, 205, 208, 209, 211, 212, 213, 215, 216, 217, 218, 220, 221, 222, 223, 224, 225, 226, 227, 228, 230, 233, 237, 238, 239, 240, 241, 244, 245, 246, 247, 249, 252, 253, 254, 259, 260, 351, 352, 360, 361, 362, 363, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 387, 388, 390, 391, 392, 393, 394, 397, 398, 401, 403, 404, 405, 406, 407, 408, 409, 412, 414, 415, 420, 421, 422, 426, 427, 431, 437, 440, 445, 447, 452, 454, 459, 460, 461, 462, 463, 464, 466, 470, 471, 475, 479, 480, 481, 491, 492, 493, 504, 507, 508, 552, 553, 555, 557], "went": 401, "were": [16, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 80, 99, 118, 128, 278, 361, 366, 367, 368, 369, 374, 376, 377, 378, 379, 380, 381, 382, 384, 386, 389, 391, 401, 404, 405, 406, 407, 408, 409, 412, 415, 420, 421, 424, 443, 455, 464, 468, 470, 558], "what": [13, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 46, 264, 320, 362, 367, 375, 378, 380, 381, 388, 391, 399, 448, 457, 458, 460, 470, 471, 475, 480, 483, 491, 508, 540, 555, 556, 559], "whatev": [375, 377, 378, 555], "whatsnew": 390, "wheel": 378, "when": [16, 19, 20, 26, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 52, 53, 79, 80, 82, 83, 84, 85, 86, 95, 96, 97, 98, 99, 100, 102, 103, 104, 105, 116, 117, 118, 119, 131, 141, 142, 148, 153, 155, 156, 166, 169, 183, 184, 186, 188, 190, 192, 195, 196, 200, 205, 206, 209, 211, 213, 215, 216, 217, 221, 225, 227, 228, 230, 233, 234, 236, 238, 239, 240, 244, 249, 251, 252, 253, 254, 257, 260, 261, 302, 360, 361, 362, 364, 366, 367, 368, 371, 373, 375, 376, 378, 381, 386, 387, 388, 389, 394, 406, 414, 415, 420, 422, 425, 426, 427, 436, 440, 444, 447, 448, 452, 453, 455, 458, 460, 462, 463, 466, 467, 470, 471, 491, 493, 495, 500, 502, 506, 507, 554, 556, 557, 558, 559], "whenev": [83, 86], "where": [11, 16, 19, 20, 26, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 52, 67, 79, 80, 83, 84, 86, 99, 117, 118, 119, 122, 127, 140, 141, 142, 148, 153, 156, 158, 169, 181, 182, 183, 184, 186, 188, 191, 192, 194, 195, 196, 197, 205, 206, 207, 208, 209, 210, 211, 212, 213, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 230, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 256, 257, 258, 259, 260, 261, 262, 275, 278, 281, 282, 290, 326, 362, 364, 366, 368, 369, 370, 371, 372, 373, 374, 375, 377, 379, 380, 381, 382, 383, 384, 385, 388, 389, 391, 393, 395, 397, 403, 415, 421, 430, 434, 439, 446, 447, 458, 462, 463, 464, 466, 468, 470, 471, 472, 481, 483, 491, 492, 495, 500, 507, 512, 513, 514, 517, 518, 521, 554, 555, 556, 557, 558, 559], "wherea": [367, 375, 378, 555], "whether": [16, 19, 20, 26, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 79, 80, 82, 83, 84, 86, 95, 97, 99, 100, 102, 104, 105, 117, 118, 119, 120, 127, 137, 138, 139, 140, 143, 144, 145, 147, 150, 152, 154, 155, 169, 181, 182, 183, 184, 185, 186, 187, 188, 191, 192, 193, 194, 195, 196, 200, 201, 205, 206, 208, 209, 211, 212, 213, 215, 216, 217, 218, 220, 221, 222, 223, 224, 225, 226, 227, 228, 230, 233, 234, 236, 237, 238, 239, 240, 241, 244, 245, 246, 247, 249, 251, 252, 253, 254, 257, 258, 259, 260, 261, 290, 299, 328, 330, 358, 366, 368, 375, 378, 380, 381, 388, 426, 437, 450, 462, 463, 481, 507, 556, 557], "which": [16, 19, 20, 26, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 41, 43, 56, 57, 59, 65, 68, 70, 76, 79, 80, 81, 82, 83, 84, 85, 86, 88, 89, 90, 91, 95, 96, 97, 99, 100, 102, 104, 105, 112, 114, 116, 117, 118, 119, 120, 121, 123, 124, 125, 126, 127, 128, 132, 133, 137, 138, 139, 140, 143, 144, 145, 147, 150, 151, 152, 153, 154, 155, 156, 158, 159, 163, 164, 169, 170, 180, 181, 182, 183, 184, 186, 187, 188, 191, 192, 194, 195, 196, 200, 205, 206, 207, 208, 209, 211, 212, 213, 215, 216, 217, 220, 221, 223, 227, 228, 230, 233, 234, 235, 236, 237, 238, 239, 240, 244, 245, 246, 248, 249, 250, 251, 252, 253, 254, 256, 257, 258, 260, 261, 264, 270, 272, 274, 278, 279, 280, 286, 288, 302, 312, 322, 323, 339, 348, 350, 355, 357, 360, 362, 364, 366, 367, 368, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 387, 388, 389, 391, 392, 396, 398, 402, 403, 404, 406, 407, 408, 409, 412, 415, 421, 423, 426, 430, 431, 434, 437, 438, 439, 440, 442, 445, 446, 447, 448, 451, 452, 454, 455, 458, 459, 460, 462, 463, 464, 465, 466, 467, 468, 470, 471, 472, 473, 479, 480, 481, 485, 486, 491, 492, 493, 495, 497, 498, 499, 501, 502, 504, 506, 507, 508, 509, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 542, 543, 544, 545, 546, 547, 548, 552, 553, 554, 555, 556, 557, 558], "whichev": [182, 183, 184], "while": [83, 86, 100, 183, 184, 186, 188, 192, 195, 196, 361, 364, 366, 367, 368, 370, 373, 374, 376, 380, 382, 383, 385, 386, 387, 390, 391, 393, 430, 434, 436, 439, 447, 454, 455, 459, 461, 462, 463, 465, 466, 491, 493, 495, 506, 508, 555], "whilst": [362, 467, 475], "whippl": 92, "whirlwind": 475, "white": [279, 350, 351, 444, 455, 460, 465, 483, 508], "whitespac": 308, "who": [387, 457, 483], "whole": [90, 112, 160, 163, 170, 173, 174, 176, 177, 182, 183, 184, 186, 195, 196, 234, 263, 272, 274, 361, 367, 373, 376, 387, 431, 434, 442, 447, 452, 455, 459, 466, 471, 473, 552], "whose": [387, 391, 447, 501, 513], "why": [361, 362, 366, 368, 375, 460, 508], "wide": [368, 387, 388, 402, 421, 432, 443, 554], "wider": [453, 464], "widget": [183, 184, 186, 192, 195, 196, 442, 450, 463, 479, 480], "width": [16, 27, 66, 79, 83, 86, 97, 100, 104, 105, 106, 107, 109, 110, 111, 112, 122, 127, 140, 141, 142, 145, 148, 151, 153, 156, 158, 163, 168, 182, 183, 184, 185, 186, 187, 188, 191, 192, 193, 194, 195, 196, 208, 211, 212, 220, 222, 223, 233, 235, 245, 246, 248, 250, 256, 258, 260, 351, 352, 377, 384, 422, 435, 436, 439, 440, 442, 444, 445, 446, 447, 448, 450, 452, 455, 457, 458, 459, 461, 462, 463, 464, 466, 471, 472, 479, 480, 481, 502, 504, 505, 506, 507, 508, 512, 513, 514, 516, 517, 518], "width_err": 458, "width_error": 66, "width_min": 191, "width_pix": [182, 183, 184], "widthconfig": 16, "wiki": [34, 79, 84, 412, 470], "wikipedia": [34, 79, 84, 319, 375, 379], "wilei": 134, "wilk": [270, 493, 557], "willing": 364, "wind": [50, 440, 445, 466, 486], "window": [107, 360, 361, 368, 378, 391, 392, 393, 395, 401, 417, 421, 438, 458, 554, 555, 557], "wise": [19, 20, 26, 83, 86, 132, 133, 184, 205, 206, 207, 208, 209, 210, 211, 212, 213, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 230, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 256, 257, 258, 259, 260, 261, 262, 389, 414, 440, 442, 491], "wish": [191, 364, 379, 445, 460], "with_bbox": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40], "with_bounding_box": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40], "with_units_from_data": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40], "withdraw": [371, 372, 373, 376, 383, 385], "withdrawn": [365, 366, 371, 372, 373, 376, 383, 385], "within": [120, 123, 132, 182, 196, 210, 211, 212, 218, 222, 223, 224, 225, 226, 233, 241, 245, 247, 248, 259, 262, 360, 361, 362, 366, 370, 375, 377, 378, 379, 380, 381, 384, 386, 387, 389, 391, 392, 393, 395, 415, 418, 420, 424, 426, 435, 436, 442, 445, 452, 453, 454, 458, 461, 462, 463, 466, 467, 471, 475, 481, 491, 494, 495, 554], "without": [13, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 124, 143, 181, 182, 187, 191, 194, 358, 361, 364, 366, 369, 371, 375, 376, 377, 378, 380, 385, 391, 402, 403, 407, 435, 438, 442, 443, 457, 462, 463, 464, 479, 495, 506, 507, 508, 550, 555, 557], "without_units_for_data": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40], "wl": [26, 457], "wo": 455, "wobbl": [90, 454, 470], "wobbleregionfind": 414, "wobbleregionsfind": 436, "wolfram": [317, 318], "women": 417, "won": [83, 86, 112, 116, 120, 124, 127, 333, 386, 442, 463, 470, 558], "wong": 404, "wood": [368, 418, 420, 421], "word": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 495], "work": [11, 13, 16, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 83, 86, 95, 119, 193, 326, 360, 361, 362, 364, 366, 368, 369, 370, 371, 372, 373, 375, 376, 377, 378, 379, 380, 381, 383, 386, 387, 390, 391, 392, 393, 394, 396, 397, 398, 400, 401, 402, 403, 404, 406, 407, 413, 416, 417, 418, 419, 420, 421, 422, 423, 430, 431, 432, 434, 435, 436, 437, 438, 439, 440, 442, 443, 444, 445, 446, 447, 448, 450, 452, 453, 454, 455, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 468, 470, 471, 472, 473, 479, 480, 481, 491, 495, 505, 507, 519, 521, 527, 530, 543, 549, 550, 555], "workaround": 378, "workflow": [364, 369, 370, 377, 382, 386, 391, 406, 435, 440, 475, 479, 480, 496], "workshop": 370, "workspac": 364, "world": [79, 194, 211, 233, 361, 367, 444, 481, 507], "worst": 364, "worth": [361, 483], "would": [16, 80, 83, 86, 90, 99, 118, 183, 184, 186, 192, 195, 196, 361, 364, 367, 368, 369, 372, 373, 375, 376, 377, 378, 379, 380, 381, 382, 385, 387, 388, 403, 412, 432, 434, 437, 438, 450, 460, 463, 464, 466, 468, 471, 508], "wouldn": 375, "wp": [390, 470], "wrap": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 244, 298, 375, 405], "wrap_at": 372, "wrapper": [56, 234, 244, 302, 375, 376, 403, 406, 483, 495], "write": [11, 15, 16, 26, 78, 79, 82, 83, 84, 86, 95, 96, 97, 100, 102, 104, 105, 117, 119, 137, 138, 139, 140, 141, 142, 143, 144, 145, 147, 148, 150, 151, 152, 153, 154, 155, 156, 183, 184, 186, 190, 192, 195, 196, 211, 225, 233, 256, 257, 258, 259, 260, 330, 339, 362, 364, 370, 371, 372, 373, 374, 375, 377, 378, 380, 381, 383, 384, 385, 387, 388, 389, 391, 397, 400, 406, 409, 414, 416, 419, 420, 421, 422, 427, 430, 434, 442, 443, 446, 448, 461, 465, 466, 470, 471, 477, 479, 480, 495, 500, 556, 558], "write_arf": 102, "write_bkg": 102, "write_covari": [15, 95, 211, 233], "write_dataset": 15, "write_ds9": 466, "write_model": 15, "write_pha": 102, "write_rmf": 102, "writeabl": 389, "writer": [83, 86, 381, 388], "writeto": [82, 137, 138, 139, 143, 144, 145, 147, 150, 152, 154, 155, 446], "written": [79, 84, 95, 96, 97, 100, 102, 104, 105, 117, 119, 141, 142, 148, 153, 156, 183, 184, 186, 190, 192, 195, 196, 198, 361, 362, 364, 366, 370, 371, 381, 387, 389, 424, 430, 447, 465, 468, 483, 491, 492, 495, 508, 554, 559], "wrong": [361, 410, 424, 425, 426], "wrote": 387, "wrt": [79, 153, 156, 361, 379, 454, 550], "wstat": [100, 105, 283, 284, 373, 400, 418, 419, 434, 435, 437, 440, 444, 455, 459, 468, 491, 554], "wstatcountsstatist": [455, 557], "wt": [26, 457], "wun": 404, "www": [26, 65, 83, 86, 134, 381, 470], "wyatt": [400, 554], "x": [19, 20, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 46, 65, 66, 83, 86, 97, 104, 122, 132, 133, 134, 138, 188, 192, 193, 200, 201, 203, 205, 208, 209, 212, 213, 215, 216, 217, 218, 220, 221, 222, 223, 224, 225, 226, 227, 228, 230, 237, 238, 239, 240, 241, 244, 245, 246, 247, 249, 252, 253, 254, 259, 260, 273, 279, 280, 282, 293, 294, 295, 297, 301, 303, 308, 317, 350, 353, 354, 361, 362, 366, 368, 369, 370, 375, 386, 390, 432, 437, 438, 444, 447, 451, 455, 458, 460, 461, 463, 468, 471, 481, 489, 495, 512, 513, 555, 557], "x27": 461, "x86_64": [430, 431, 434, 435, 436, 437, 438, 439, 440, 442, 443, 444, 445, 446, 447, 448, 452, 453, 454, 455, 457, 458, 459, 460, 462, 463, 464, 465, 466, 468, 470, 471, 472, 473, 479, 480, 481], "x_": 122, "x_0": [183, 184, 186, 192, 195, 196], "x_1": 302, "x_2": 302, "x_3": 302, "x_bkg": 455, "x_edg": 123, "x_high": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40], "x_i": [183, 184, 186, 192, 195, 196], "x_j": 122, "x_low": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40], "x_max": [122, 315, 317, 448], "x_min": [122, 315, 317, 448], "x_n": [183, 184, 186, 192, 195, 196], "x_r_0": 223, "x_ref": [122, 448], "x_sigma": 220, "x_stddev": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40], "x_valu": [200, 460], "xarg": 361, "xaxi": 495, "xerr": [430, 468], "xf": 470, "xfail": 361, "xlabel": [362, 426, 440, 454, 460, 468, 471, 487, 488, 489, 512, 549], "xlim": [348, 442, 468, 471, 489], "xmax": [17, 18, 21, 22, 24, 25, 27, 192, 389], "xmin": [17, 18, 21, 22, 24, 25, 27, 192, 389], "xml": [370, 371, 372, 405, 419, 421, 470, 483], "xmltodict": [413, 470], "xref": 122, "xspec": [213, 261, 287, 419, 556], "xunit": [436, 521], "xviii": 381, "xx": [372, 387], "xxx": [83, 86, 366, 387], "xxx_by_coord": 463, "xxxx": 495, "xy": [434, 444, 448, 512], "xy_posit": [33, 34, 38], "xytext": 512, "xyz": 390, "y": [19, 20, 26, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 46, 66, 83, 86, 132, 133, 138, 188, 200, 205, 206, 209, 213, 215, 216, 217, 221, 227, 228, 230, 234, 236, 238, 239, 240, 244, 249, 251, 252, 253, 254, 257, 261, 293, 294, 295, 297, 301, 303, 353, 361, 375, 386, 426, 430, 438, 444, 447, 460, 468, 489, 495], "y_high": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40], "y_low": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40], "y_stddev": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40], "y_valu": [200, 460], "yaml": [11, 15, 16, 20, 26, 80, 94, 95, 96, 97, 99, 100, 104, 105, 117, 118, 205, 206, 207, 208, 209, 210, 211, 212, 213, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 230, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 256, 257, 258, 259, 260, 261, 262, 270, 328, 330, 360, 369, 370, 372, 373, 374, 377, 378, 383, 388, 389, 391, 392, 404, 405, 406, 409, 414, 423, 427, 430, 431, 434, 436, 437, 438, 439, 440, 442, 443, 444, 445, 446, 447, 448, 452, 453, 454, 455, 457, 458, 459, 460, 462, 463, 464, 465, 466, 468, 470, 471, 472, 473, 480, 481, 494, 552, 553, 554, 555], "yaml_str": [211, 233, 435], "yaxi": [432, 495], "ye": 391, "year": [45, 60, 63, 74, 361, 366, 368, 369, 371, 378, 381, 382, 386, 388, 391, 418, 420, 421, 443, 445, 458, 470, 487, 488, 489, 490], "yearli": [394, 419], "yellow": 351, "yerr": 455, "yet": [85, 360, 361, 364, 366, 368, 375, 378, 381, 382, 428, 432, 435, 479, 559], "yield": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 78, 79, 84, 87, 183, 184, 186, 192, 195, 196, 326, 368, 374, 375, 380, 382, 384, 389, 464, 556, 557, 558], "yk04": [45, 48], "yk04b": 48, "ylabel": [362, 454, 460, 468, 471, 487, 488, 489, 512, 549], "ylim": [348, 440, 468, 471, 487, 489, 528, 537, 538, 539], "ylmqhpf": 442, "ymax": [512, 513], "ymin": [512, 513], "yml": [364, 378, 390, 391, 392, 393, 395, 420], "you": [16, 19, 20, 26, 65, 78, 79, 80, 83, 86, 89, 96, 99, 102, 118, 119, 132, 138, 140, 143, 166, 183, 184, 186, 192, 195, 196, 200, 205, 206, 209, 213, 215, 216, 217, 221, 227, 228, 230, 234, 236, 238, 239, 240, 244, 249, 251, 252, 253, 254, 257, 261, 263, 270, 360, 361, 362, 363, 364, 366, 368, 371, 375, 378, 379, 390, 391, 392, 393, 394, 395, 396, 397, 398, 401, 402, 403, 412, 420, 421, 422, 431, 432, 434, 435, 436, 437, 439, 440, 442, 444, 446, 447, 450, 453, 454, 455, 458, 459, 460, 462, 463, 464, 465, 466, 468, 470, 471, 472, 473, 475, 479, 480, 481, 491, 492, 495, 498, 506, 529, 552, 555, 556, 557, 558, 559], "your": [16, 19, 20, 26, 80, 94, 99, 118, 205, 206, 209, 213, 215, 216, 217, 221, 227, 228, 230, 234, 236, 238, 239, 240, 244, 249, 251, 252, 253, 254, 257, 261, 360, 361, 362, 364, 366, 368, 391, 392, 393, 394, 395, 397, 398, 401, 402, 403, 406, 407, 412, 421, 422, 430, 431, 432, 434, 436, 437, 438, 439, 440, 442, 443, 444, 445, 446, 447, 448, 450, 451, 452, 453, 454, 455, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 470, 471, 472, 473, 475, 477, 479, 480, 481, 490, 495, 511, 512, 513, 514, 515, 516, 517, 518, 519, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 542, 543, 544, 545, 546, 547, 548, 549, 550, 552, 554, 557], "yourself": [555, 556], "yr": [45, 52, 53, 485, 487, 488, 489], "yscale": [440, 547], "yt": 361, "yu": 404, "yunit": [434, 436, 457, 458, 471, 532], "yusifovkucuk2004": [28, 29, 30, 35, 36, 40, 48], "yusifovkucuk2004b": [28, 29, 30, 35, 36, 39, 48], "yve": 420, "yy": 387, "yyyi": 387, "z": [19, 20, 26, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 41, 46, 83, 86, 293, 294, 297, 386, 387, 457, 485, 521], "z_0": 29, "z_high": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40], "z_low": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40], "zabalza": 416, "zanin": [420, 421], "zd": 79, "zen": 467, "zen_pnt": 467, "zenith": [430, 443, 467, 470, 471, 472, 500], "zenith_angl": [79, 388, 471, 481], "zenodo": [387, 414], "zero": [52, 53, 65, 83, 86, 95, 97, 100, 104, 105, 127, 132, 140, 141, 142, 145, 148, 153, 169, 183, 184, 186, 192, 195, 196, 237, 258, 260, 261, 302, 308, 320, 361, 405, 408, 423, 458, 462, 463, 468, 558], "zhao": [27, 427], "zhen": 134, "zip": [376, 389, 390, 434, 453, 457, 460, 465, 475, 489, 509, 514, 518, 531], "zl": [26, 457], "zone": 455, "zsh": 362, "zt": [26, 457], "z\u00e9": 419, "\u00e0": 418, "\u0261\u00e6m\u0259pa\u026a": 495, "\u03b3": [128, 483, 554], "\u03c3": 445}, "titles": ["analysis - High level interface", "astro - Astrophysics", "catalog - Source catalogs", "data - DL3 data and observations", "datasets - Reduced datasets", "estimators - High level estimators", "API reference", "irf - Instrument response functions", "makers - Data reduction", "maps - Sky maps", "modeling - Models and fitting", "scripts - Command line tools", "stats - Statistics", "utils - Utilities", "visualization - Plotting features", "Analysis", "AnalysisConfig", "BurkertProfile", "DMProfile", "DarkMatterAnnihilationSpectralModel", "DarkMatterDecaySpectralModel", "EinastoProfile", "IsothermalProfile", "JFactory", "MooreProfile", "NFWProfile", "PrimaryFlux", "ZhaoProfile", "CaseBattacharya1998", "Exponential", "FaucherKaspi2006", "FaucherKaspi2006VelocityBimodal", "FaucherKaspi2006VelocityMaxwellian", "FaucherSpiral", "LogSpiral", "Lorimer2006", "Paczynski1990", "Paczynski1990Velocity", "ValleeSpiral", "YusifovKucuk2004", "YusifovKucuk2004B", "add_observed_parameters", "add_pulsar_parameters", "add_pwn_parameters", "add_snr_parameters", "make_base_catalog_galactic", "make_catalog_random_positions_cube", "make_catalog_random_positions_sphere", "radial_distributions", "velocity_distributions", "PWN", "Pulsar", "SNR", "SNRTrueloveMcKee", "SimplePulsar", "CATALOG_REGISTRY", "SourceCatalog", "SourceCatalog1LHAASO", "SourceCatalog2FHL", "SourceCatalog2HWC", "SourceCatalog3FGL", "SourceCatalog3FHL", "SourceCatalog3HWC", "SourceCatalog4FGL", "SourceCatalogGammaCat", "SourceCatalogHGPS", "SourceCatalogLargeScaleHGPS", "SourceCatalogObject", "SourceCatalogObject1LHAASO", "SourceCatalogObject2FHL", "SourceCatalogObject2HWC", "SourceCatalogObject3FGL", "SourceCatalogObject3FHL", "SourceCatalogObject3HWC", "SourceCatalogObject4FGL", "SourceCatalogObjectGammaCat", "SourceCatalogObjectHGPS", "SourceCatalogObjectHGPSComponent", "DataStore", "EventList", "EventListMetaData", "FixedPointingInfo", "GTI", "HDUIndexTable", "Observation", "ObservationFilter", "ObservationTable", "Observations", "ObservationsEventsSampler", "PointingInfo", "PointingMode", "get_irfs_features", "observatory_locations", "DATASET_REGISTRY", "Dataset", "Datasets", "FluxPointsDataset", "MapDataset", "MapDatasetEventSampler", "MapDatasetMetaData", "MapDatasetOnOff", "OGIPDatasetReader", "OGIPDatasetWriter", "ObservationEventSampler", "SpectrumDataset", "SpectrumDatasetOnOff", "apply_edisp", "create_map_dataset_from_observation", "create_map_dataset_geoms", "split_dataset", "apply_edisp", "split_dataset", "ASmoothMapEstimator", "ESTIMATOR_REGISTRY", "EnergyDependentMorphologyEstimator", "Estimator", "ExcessMapEstimator", "FluxMaps", "FluxMetaData", "FluxPoints", "FluxPointsEstimator", "FluxProfileEstimator", "ImageProfile", "ImageProfileEstimator", "LightCurveEstimator", "ParameterEstimator", "SensitivityEstimator", "TSMapEstimator", "compute_lightcurve_doublingtime", "compute_lightcurve_fpp", "compute_lightcurve_fvar", "estimate_exposure_reco_energy", "find_peaks", "find_peaks_in_flux_map", "get_combined_significance_maps", "get_rebinned_axis", "resample_energy_edges", "Background2D", "Background3D", "BackgroundIRF", "EDispKernel", "EDispKernelMap", "EDispMap", "EffectiveAreaTable2D", "EnergyDependentMultiGaussPSF", "EnergyDispersion2D", "FoVAlignment", "IRF", "IRFMap", "IRF_REGISTRY", "PSF3D", "PSFKernel", "PSFKing", "PSFMap", "ParametricPSF", "RadMax2D", "RecoPSFMap", "load_irf_dict_from_file", "AdaptiveRingBackgroundMaker", "DatasetsMaker", "FoVBackgroundMaker", "MAKER_REGISTRY", "Maker", "MapDatasetMaker", "PhaseBackgroundMaker", "ReflectedRegionsBackgroundMaker", "ReflectedRegionsFinder", "RegionsFinder", "RingBackgroundMaker", "SafeMaskMaker", "SpectrumDatasetMaker", "WobbleRegionsFinder", "make_counts_rad_max", "make_edisp_kernel_map", "make_edisp_map", "make_effective_livetime_map", "make_map_background_irf", "make_map_exposure_true_energy", "make_observation_time_map", "make_psf_map", "make_theta_squared_table", "Geom", "HpxGeom", "HpxMap", "HpxNDMap", "LabelMapAxis", "Map", "MapAxes", "MapAxis", "MapCoord", "Maps", "RegionGeom", "RegionNDMap", "TimeMapAxis", "WcsGeom", "WcsMap", "WcsNDMap", "containment_radius", "containment_region", "Covariance", "Fit", "Parameter", "Parameters", "PriorParameter", "PriorParameters", "BrokenPowerLawSpectralModel", "CompoundSpectralModel", "ConstantFluxSpatialModel", "ConstantSpatialModel", "ConstantSpectralModel", "ConstantTemporalModel", "DatasetModels", "DiskSpatialModel", "EBLAbsorptionNormSpectralModel", "EBL_DATA_BUILTIN", "ExpCutoffPowerLaw3FGLSpectralModel", "ExpCutoffPowerLawNormSpectralModel", "ExpCutoffPowerLawSpectralModel", "ExpDecayTemporalModel", "FoVBackgroundModel", "GaussianSpatialModel", "GaussianSpectralModel", "GaussianTemporalModel", "GeneralizedGaussianSpatialModel", "GeneralizedGaussianTemporalModel", "LightCurveTemplateTemporalModel", "LinearTemporalModel", "LogParabolaNormSpectralModel", "LogParabolaSpectralModel", "MODEL_REGISTRY", "MeyerCrabSpectralModel", "Model", "ModelBase", "Models", "NaimaSpectralModel", "PiecewiseNormSpatialModel", "PiecewiseNormSpectralModel", "PointSpatialModel", "PowerLaw2SpectralModel", "PowerLawNormSpectralModel", "PowerLawSpectralModel", "PowerLawTemporalModel", "SPATIAL_MODEL_REGISTRY", "SPECTRAL_MODEL_REGISTRY", "ScaleSpectralModel", "Shell2SpatialModel", "ShellSpatialModel", "SineTemporalModel", "SkyModel", "SmoothBrokenPowerLawSpectralModel", "SpatialModel", "SpectralModel", "SuperExpCutoffPowerLaw3FGLSpectralModel", "SuperExpCutoffPowerLaw4FGLDR3SpectralModel", "SuperExpCutoffPowerLaw4FGLSpectralModel", "TEMPORAL_MODEL_REGISTRY", "TemplateNDSpatialModel", "TemplateNDSpectralModel", "TemplateNPredModel", "TemplatePhaseCurveTemporalModel", "TemplateSpatialModel", "TemplateSpectralModel", "TemporalModel", "create_cosmic_ray_spectral_model", "create_crab_spectral_model", "create_fermi_isotropic_diffuse_model", "integrate_spectrum", "read_hermes_cube", "scale_plot_flux", "read_hermes_cube", "select_nested_models", "stat_profile_ul_scipy", "CashCountsStatistic", "TimmerKonig_lightcurve_simulator", "WStatCountsStatistic", "cash", "cash_sum_cython", "compute_chisq", "compute_flux_doubling", "compute_fpp", "compute_fvar", "cstat", "f_cash_root_cython", "get_wstat_gof_terms", "get_wstat_mu_bkg", "norm_bounds_cython", "structure_function", "wstat", "hierarchical_clustering", "standard_scaler", "D_SUN_TO_GALACTIC_CENTER", "cartesian", "fov_to_sky", "galactic", "motion_since_birth", "polar", "sky_to_fov", "velocity_glon_glat", "HDULocation", "LazyFitsData", "earth_location_from_dict", "trapz_loglog", "ScaledRegularGridInterpolator", "interpolate_profile", "interpolation_scale", "BACKEND_DEFAULT", "METHOD_DEFAULT", "METHOD_KWARGS_DEFAULT", "N_JOBS_DEFAULT", "POOL_KWARGS_DEFAULT", "multiprocessing_manager", "run_multiprocessing", "InverseCDFSampler", "draw", "get_random_state", "normalize", "pdf", "sample_powerlaw", "sample_sphere", "sample_sphere_distance", "sample_times", "compound_region_to_regions", "make_concentric_annulus_sky_regions", "make_orthogonal_rectangle_sky_regions", "region_to_frame", "regions_to_compound_region", "get_images_paths", "make_path", "read_yaml", "recursive_merge_dicts", "write_yaml", "hstack_columns", "table_row_to_dict", "table_standardise_units_copy", "table_standardise_units_inplace", "Checker", "assert_quantity_allclose", "assert_skycoord_allclose", "assert_time_allclose", "mpl_plot_check", "requires_data", "requires_dependency", "absolute_time", "time_ref_from_dict", "time_ref_to_dict", "time_relative_to_ref", "standardise_unit", "unit_from_fits_image_hdu", "MapPanelPlotter", "add_colorbar", "annotate_heatmap", "colormap_hess", "colormap_milagro", "plot_contour_line", "plot_distribution", "plot_heatmap", "plot_map_rgb", "plot_npred_signal", "plot_spectrum_datasets_off_regions", "plot_theta_squared_table", "Dependencies", "Developer How To", "Documentation How To", "Developer guide", "How to contribute to Gammapy", "PIGs", "PIG 1 - PIG purpose and guidelines", "PIG 2 - Organization of low level analysis code", "PIG 3 - Plan for dropping Python 2.7 support", "PIG 4 - Setup for tutorial notebooks and data", "PIG 5 - Gammapy 1.0 roadmap", "PIG 6 - CTA observation handling", "PIG 7 - Models", "PIG 8 - Datasets", "PIG 9 - Event sampling", "PIG 10 - Regions", "PIG 11 - Light curves", "PIG 12 - High level interface", "PIG 13 - Gammapy dependencies and distribution", "PIG 14 - Uncertainty estimation", "PIG 16 - Gammapy package structure", "PIG 18 - Documentation", "PIG 19 - Gammapy package structure follow up", "PIG 20 - Global Model API", "PIG 21 - Models improvements", "PIG 22 - Unified flux estimators API", "PIG 23 - Gammapy release cycle and version numbering", "PIG 24 - Authorship policy", "PIG 25 - Metadata container for Gammapy", "PIG 26 - Model Priors API", "How to make a Gammapy release", "Project setup", "Virtual Environments", "Getting started", "Installation", "Recommended Setup", "Troubleshooting", "Using Gammapy", "Gammapy", "Release notes", "0.1 (Aug 25, 2014)", "0.10 (Jan 28, 2019)", "0.11 (Mar 29, 2019)", "0.12 (May 30, 2019)", "0.13 (Jul 26, 2019)", "0.14 (Sep 30, 2019)", "0.15 (Dec 3, 2019)", "0.16 (Feb 1, 2020)", "0.17 (Apr 1, 2020)", "0.18 (Nov 4th, 2020)", "0.18.1 (Nov 6th, 2020)", "0.18.2 (Nov 19th, 2020)", "0.19 (Nov 22nd, 2021)", "0.2 (Apr 13, 2015)", "0.20 (May 12th, 2022)", "0.20.1 (June 16th, 2022)", "0.3 (Aug 13, 2015)", "0.4 (Apr 20, 2016)", "0.5 (Nov 22, 2016)", "0.6 (Apr 28, 2017)", "0.7 (Feb 28, 2018)", "0.8 (Sep 23, 2018)", "0.9 (Nov 29, 2018)", "1.0 (November 10th, 2022)", "1.0.1 (March 14th, 2023)", "1.0.2 (December 6th, 2023)", "1.1 (June 13th 2023)", "1.2 (February 29th 2024)", "1.3 (unreleased)", "Computation times", "Point source sensitivity", "Spectral analysis of extended sources", "Flux point fitting", "Computation times", "Spectral analysis", "Spectral analysis with the HLI", "Spectral analysis with energy-dependent directional cuts", "1D spectrum simulation", "Source detection and significance maps", "2D map fitting", "Ring background map", "Computation times", "3D detailed analysis", "Multi instrument joint 3D and 1D analysis", "Basic image exploration and fitting", "Morphological energy dependence estimation", "Event sampling", "Sample a source with energy-dependent temporal evolution", "Flux Profile Estimation", "Computation times", "3D map simulation", "Estimation of time variability in a lightcurve", "Light curves", "Light curves for flares", "Simulating and fitting a time varying source", "Pulsar analysis", "Computation times", "Dark matter spatial and spectral models", "Source catalogs", "Datasets - Reduced data, IRFs, models", "Fitting", "Using Gammapy IRFs", "Makers - Data reduction", "Maps", "Mask maps", "Modelling", "Models", "Observational clustering", "Priors", "Computation times", "CTA with Gammapy", "Fermi-LAT with Gammapy", "HAWC with Gammapy", "H.E.S.S. with Gammapy", "Computation times", "Tutorials", "Computation times", "Survey Map Script", "Computation times", "High level interface", "Low level API", "Data structures", "Computation times", "Dark matter", "Astrophysics", "Astrophysical source population models", "Astrophysical source models", "Pulsar Source Models", "Pulsar Wind Nebula Source Models", "Supernova Remnant Models", "Source catalogs", "Datasets (DL4)", "Data access and selection (DL3)", "Estimators (DL4 to DL5, and DL6)", "High Level Analysis Interface", "How To", "User guide", "Effective area", "Background", "Energy Dispersion", "Instrument Response Functions (DL3)", "Point Spread Function", "FoV background", "Data reduction (DL3 to DL4)", "Reflected regions background", "Ring background", "HEALPix-based maps", "Sky maps (DL4)", "RegionGeom and RegionNDMap", "Model gallery", "Computation times", "Constant spatial model", "Disk spatial model", "Gaussian spatial model", "Generalized gaussian spatial model", "Piecewise norm spatial model", "Point spatial model", "Shell spatial model", "Shell2 spatial model", "Template spatial model", "Computation times", "EBL absorption spectral model", "Broken power law spectral model", "Compound spectral model", "Constant spectral model", "Exponential cutoff power law spectral model", "Exponential cutoff power law spectral model used for 3FGL", "Exponential cutoff power law norm spectral model", "Gaussian spectral model", "Log parabola spectral model", "Log parabola spectral norm model", "Naima spectral model", "Piecewise  norm spectral model", "Power law spectral model", "Power law 2 spectral model", "Power law norm spectral model", "Smooth broken power law spectral model", "Super exponential cutoff power law model used for 3FGL", "Super Exponential Cutoff Power Law Model used for 4FGL-DR3", "Super Exponential Cutoff Power Law Model used for 4FGL-DR1 (and DR2)", "Template spectral model", "Computation times", "Constant temporal model", "ExpDecay temporal model", "Gaussian temporal model", "Generalized Gaussian temporal model", "Linear temporal model", "PowerLaw temporal model", "Sine temporal model", "Phase curve temporal model", "Light curve temporal model", "Computation times", "Modeling and Fitting (DL4 to DL5)", "Gammapy analysis workflow and package structure", "Glossary and references", "Command line tools", "Fit statistics", "Statistical utility functions", "Derivation of the WStat formula", "Utility functions", "Visualization"], "titleterms": {"": [401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 414, 415, 417, 418, 419, 420, 421, 422, 435, 447, 473, 479], "0": [370, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425], "1": [366, 370, 389, 399, 400, 407, 408, 410, 415, 423, 424, 425, 426, 427, 428, 468], "10": [375, 399, 401], "10th": 423, "11": [376, 399, 402], "12": [377, 399, 403], "12th": 414, "13": [378, 399, 404, 413, 416], "13th": 426, "14": [379, 399, 405], "14th": 424, "15": [399, 406], "16": [380, 399, 407], "16th": 415, "17": [399, 408], "18": [381, 399, 409, 410, 411], "19": [382, 399, 412], "19th": 411, "1d": [435, 437, 443, 452, 453, 475], "1dc": 470, "2": [367, 368, 389, 399, 411, 413, 425, 427, 468, 534], "20": [383, 399, 414, 415, 417], "2014": 400, "2015": [413, 416], "2016": [417, 418], "2017": 419, "2018": [420, 421, 422], "2019": [401, 402, 403, 404, 405, 406], "2020": [407, 408, 409, 410, 411], "2021": 412, "2022": [414, 415, 423], "2023": [424, 425, 426], "2024": 427, "21": 384, "22": [385, 418], "22nd": 412, "23": [386, 421], "24": 387, "25": [388, 400], "26": [389, 404], "28": [401, 419, 420], "29": [402, 422], "29th": 427, "2d": [439, 475], "3": [368, 389, 399, 406, 416, 428], "30": [403, 405], "32": 361, "3955": 389, "3d": [442, 443, 450, 452, 475], "3fgl": [526, 537], "3fhl": 443, "4": [369, 399, 417], "4122": 389, "4fgl": [538, 539], "4th": 409, "5": [370, 399, 418], "6": [371, 399, 419], "64": 361, "6th": [410, 425], "7": [368, 372, 399, 420], "8": [373, 399, 421], "9": [374, 399, 422], "As": 501, "In": 362, "ON": [431, 436, 443], "On": 437, "The": [367, 391, 443, 445, 460, 468, 492, 504], "To": [361, 362, 381, 495], "about": 468, "abov": 445, "absolute_tim": 342, "absorpt": [384, 521], "abstract": [366, 367, 368, 369, 370, 371, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389], "accept": 364, "access": [459, 463, 472, 492], "accessor": 507, "action": [361, 381], "ad": 463, "adapt": 438, "adaptiveringbackgroundmak": 158, "add": [372, 465], "add_colorbar": 349, "add_observed_paramet": 41, "add_pulsar_paramet": 42, "add_pwn_paramet": 43, "add_snr_paramet": 44, "addit": [384, 389, 501, 553], "aeff_2d": 497, "against": 436, "aim": 465, "alia": 384, "all": 453, "along": 388, "altern": [369, 372, 374, 375, 376, 377, 378, 379, 381, 382, 385, 388], "amplitud": [389, 468], "an": [361, 430, 446, 447, 459, 464], "anaconda": 394, "analysi": [0, 11, 15, 367, 370, 430, 431, 434, 435, 436, 437, 442, 443, 444, 452, 455, 475, 479, 491, 494, 553], "analysisconfig": 16, "angl": [497, 498, 499, 501], "angular": 508, "annihil": 457, "annotate_heatmap": 350, "api": [6, 361, 362, 383, 385, 388, 389, 423, 426, 427, 475, 480], "apply_edisp": [106, 110], "approach": [376, 431, 432, 435, 437, 438, 439, 440, 443, 446, 447, 448, 450, 451, 452, 453, 454, 460, 464, 465, 467, 479, 480], "apr": [408, 413, 417, 419], "arbitrari": 388, "area": [461, 470, 497], "argument": [361, 375], "arm": 485, "asmoothmapestim": 112, "assert": 361, "assert_quantity_allclos": 336, "assert_skycoord_allclos": 337, "assert_time_allclos": 338, "assess": [442, 460], "assign": [453, 465], "astro": [1, 483, 486], "astronomi": 376, "astrophys": [1, 484, 485, 486], "astropi": [361, 386], "asymmetr": 461, "attribut": [361, 362, 372], "aug": [400, 416], "author": 387, "authorship": 387, "avail": 458, "ax": [463, 508], "axi": [361, 500], "backend_default": 305, "background": [372, 376, 380, 383, 389, 440, 445, 446, 462, 465, 470, 471, 479, 498, 502, 503, 504, 505, 556], "background2d": 137, "background3d": 138, "backgroundirf": 139, "backgroundirfmodel": 372, "backgroundmodel": 372, "backport": 361, "base": [385, 388, 506], "basic": [444, 463], "bayesian": 451, "between": 383, "bin": [376, 430, 445, 508], "binder": 391, "bit": 361, "bkg_2d": 498, "bkg_3d": 498, "block": 451, "boundari": 464, "branch": 390, "break": 361, "broken": [362, 522, 536], "brokenpowerlawspectralmodel": 205, "bsd": 361, "bug": [414, 423, 426, 427], "bugfix": 390, "build": [362, 364, 391, 452, 453], "built": 552, "bundl": 361, "burkertprofil": 17, "butterfli": 480, "call": 372, "candid": [390, 438], "caplog": 361, "cartesian": 291, "case": [367, 371, 389, 558], "casebattacharya1998": 28, "cash": [275, 556, 557], "cash_sum_cython": 276, "cashcountsstatist": 272, "catalog": [2, 458, 464, 465, 481, 490], "catalog_registri": 55, "caveat": 556, "cell": 361, "certif": 364, "cff": 387, "chain": [434, 436], "chang": [361, 382, 423, 426, 427], "changelog": 381, "character": 451, "check": [11, 361, 362, 396, 430, 431, 434, 435, 436, 437, 438, 439, 440, 442, 443, 444, 445, 446, 447, 448, 452, 453, 454, 455, 457, 458, 459, 460, 462, 463, 464, 465, 466, 468, 470, 471, 472, 473, 479, 480, 481], "checker": 335, "chi": 445, "choos": 362, "citat": 387, "class": [0, 1, 2, 3, 4, 5, 7, 8, 9, 10, 12, 13, 14, 361, 362, 371, 372, 385, 388, 480, 501, 557], "clean": 380, "cli": 555, "click": 361, "clobber": 361, "clumpi": 483, "cluster": [13, 467], "code": [361, 362, 367, 370, 391], "codemeta": 387, "collect": 387, "colormap": 560, "colormap_hess": 351, "colormap_milagro": 352, "combin": [465, 492], "command": [11, 361, 555], "compar": [436, 452], "compound": [466, 523], "compound_region_to_region": 321, "compoundspectralmodel": 206, "comput": [429, 430, 433, 434, 435, 440, 441, 444, 449, 456, 460, 469, 474, 476, 478, 480, 482, 510, 520, 541, 551], "compute_chisq": 277, "compute_flux_doubl": 278, "compute_fpp": 279, "compute_fvar": 280, "compute_lightcurve_doublingtim": 128, "compute_lightcurve_fpp": 129, "compute_lightcurve_fvar": 130, "conda": 392, "confer": 387, "confid": 460, "config": [11, 439, 440, 555], "configur": [435, 442, 448, 452, 479, 553], "constant": [511, 524, 542], "constantfluxspatialmodel": 207, "constantspatialmodel": 208, "constantspectralmodel": 209, "constanttemporalmodel": 210, "contain": 388, "containment_radiu": 197, "containment_region": 198, "content": [459, 508], "context": [431, 432, 434, 435, 436, 437, 438, 439, 440, 443, 445, 446, 448, 450, 451, 452, 453, 454, 464, 467, 468, 479, 480], "contigu": 463, "continu": 391, "contour": 460, "contribut": [364, 387, 465], "contributor": [387, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427], "conveni": 373, "convent": 361, "convers": 361, "convert": 361, "coordin": [13, 361, 372, 498, 508], "correl": 440, "count": [465, 471, 491, 557], "covari": [199, 460], "creat": [431, 434, 439, 440, 447, 459, 461, 463, 464, 480, 508], "create_cosmic_ray_spectral_model": 263, "create_crab_spectral_model": 264, "create_fermi_isotropic_diffuse_model": 265, "create_map_dataset_from_observ": 107, "create_map_dataset_geom": 108, "creation": [431, 435, 453], "cstat": 281, "cta": [371, 470], "cube": [367, 463, 475], "cumul": 431, "current": 386, "curv": [376, 452, 453, 454, 549, 550], "custom": [466, 468, 552], "cut": [432, 436], "cutoff": [525, 526, 527, 537, 538, 539], "cutout": 463, "cycl": 386, "cython": [386, 391], "d_sun_to_galactic_cent": 290, "dark": [457, 483], "darkmatt": [1, 483], "darkmatterannihilationspectralmodel": [19, 483], "darkmatterdecayspectralmodel": 20, "data": [3, 8, 361, 367, 369, 370, 376, 388, 391, 431, 434, 435, 436, 442, 443, 445, 448, 452, 453, 455, 459, 462, 463, 472, 475, 479, 480, 481, 492, 503, 555, 556], "dataflow": 388, "dataset": [4, 11, 94, 95, 361, 370, 373, 382, 383, 388, 430, 431, 435, 436, 439, 440, 442, 443, 447, 452, 453, 454, 459, 460, 462, 464, 465, 468, 472, 479, 480, 491, 494], "dataset_registri": 93, "datasetmodel": 211, "datasetsmak": 159, "datastor": [78, 470, 480, 492], "dco": [364, 387], "deal": 362, "dec": 406, "decai": 457, "decemb": 425, "decis": [366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389], "default": 372, "defin": [430, 431, 434, 436, 444, 446, 447, 452, 453, 464, 480, 508], "definit": [387, 452, 503], "depend": [360, 378, 384, 414, 436, 445, 447, 466], "deprec": [361, 386], "deriv": 558, "detail": [368, 442], "detect": [382, 438, 444, 500], "detector": 498, "develop": [361, 363, 364, 368], "diagram": 371, "differ": [443, 463, 559], "diffus": 471, "dilat": 464, "direct": 436, "discuss": 376, "disk": [435, 447, 479, 480, 512], "diskspatialmodel": 212, "dispers": [461, 470, 471, 499], "dissolv": 380, "distribut": [378, 473, 485], "dl3": [3, 443, 473, 492, 500, 503], "dl4": [461, 491, 493, 503, 507, 552], "dl5": [493, 552], "dl6": 493, "dmprofil": 18, "do": 361, "doc": 391, "docstr": 362, "document": [362, 364, 370, 381, 427], "doubl": 451, "download": [11, 391], "downsampl": 508, "dr1": [473, 539], "dr2": 539, "dr3": 538, "draw": 313, "driven": 555, "drop": 368, "durat": 462, "e": 473, "each": 445, "earli": 364, "earth_location_from_dict": 300, "ebl": 521, "ebl_data_builtin": 214, "eblabsorptionnormspectralmodel": 213, "edg": 493, "edisp": 461, "edisp_2d": 499, "edispkernel": 140, "edispkernelmap": [141, 500], "edispmap": 142, "effect": [461, 462, 470, 497], "effectiveareatable2d": 143, "einastoprofil": 21, "elaps": 559, "empti": 459, "encourag": 468, "end": 361, "energi": [384, 430, 436, 445, 447, 461, 464, 466, 470, 471, 493, 497, 498, 499, 501], "energydependentmorphologyestim": 114, "energydependentmultigausspsf": 144, "energydispersion2d": 145, "environ": 392, "eros": 464, "error": [460, 557], "estim": [5, 115, 379, 382, 385, 388, 435, 438, 445, 448, 451, 452, 462, 493, 503, 504, 557], "estimate_exposure_reco_energi": 131, "estimator_registri": 113, "evalu": [372, 373, 374], "event": [370, 374, 446, 447, 455, 463, 470, 471, 473, 481, 492, 500], "eventlist": [79, 492], "eventlistmetadata": 80, "evolut": 447, "exampl": [391, 468, 483, 490, 491, 492, 493, 494, 500, 502, 503, 504, 507, 511, 512, 513, 514, 515, 516, 517, 518, 519, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 542, 543, 544, 545, 546, 547, 548, 552, 556], "excess": [385, 431, 440, 451, 557], "excessmapestim": 116, "exclus": [434, 435, 440, 464, 479], "execut": 555, "exemplari": 389, "exercis": [430, 432, 434, 437, 442, 444, 446, 447, 454, 470, 471, 472, 473, 481], "exist": 367, "expcutoffpowerlaw3fglspectralmodel": 215, "expcutoffpowerlawnormspectralmodel": 216, "expcutoffpowerlawspectralmodel": 217, "expdecai": 543, "expdecaytemporalmodel": 218, "expect": 500, "explor": [431, 435, 444, 475], "exponenti": [29, 432, 525, 526, 527, 537, 538, 539], "expos": 372, "exposur": [461, 471], "extend": [431, 446], "extens": 362, "extern": 361, "extra": 391, "extract": [440, 452, 453, 454], "extrapol": 361, "f_cash_root_cython": 282, "factor": 457, "factori": 463, "factoris": 500, "faucherkaspi2006": 30, "faucherkaspi2006velocitybimod": 31, "faucherkaspi2006velocitymaxwellian": 32, "faucherspir": 33, "favor": 389, "featur": [14, 386, 390, 423, 426, 427], "feb": [407, 420], "februari": 427, "fermi": [443, 471], "fermist": 483, "file": [362, 387, 435, 439, 440, 443, 470, 479, 492, 508], "fill": [463, 508], "filter": 453, "final": [366, 390, 435, 558], "find_peak": 132, "find_peaks_in_flux_map": 133, "finder": 504, "first": [390, 435], "fit": [10, 13, 200, 370, 376, 431, 432, 434, 435, 436, 439, 442, 443, 444, 450, 454, 460, 464, 468, 471, 479, 480, 508, 552, 556, 557, 558], "fix": [361, 414, 423, 426, 427], "fixedpointinginfo": 81, "fixtur": 361, "flare": 453, "float": 361, "flux": [385, 389, 430, 432, 434, 435, 443, 448, 457, 458, 479, 480, 481, 493], "fluxestim": 385, "fluxmap": [117, 385], "fluxmetadata": 118, "fluxpoint": 119, "fluxpointscollect": 385, "fluxpointsdataset": [96, 373, 459], "fluxpointsestim": [120, 493], "fluxprofileestim": 121, "fold": 372, "folder": 391, "follow": 382, "format": [361, 559], "formula": 558, "forward": 372, "found": 555, "fov": [462, 502], "fov_to_ski": 292, "fovalign": 146, "fovbackgroundmak": [160, 502], "fovbackgroundmodel": 219, "fraction": 451, "freez": [386, 390, 465], "from": [361, 453, 463, 464, 465, 508], "function": [1, 3, 4, 5, 7, 8, 9, 10, 12, 13, 14, 361, 362, 470, 497, 498, 499, 500, 501, 557, 559], "further": [376, 556], "galact": [293, 471], "galactocentr": 485, "galleri": [361, 362, 509], "gamlik": 483, "gamma": [376, 457], "gammalib": 483, "gammapi": [0, 1, 2, 3, 4, 5, 7, 8, 9, 10, 11, 12, 13, 14, 361, 364, 367, 370, 378, 380, 381, 382, 386, 387, 388, 390, 391, 397, 398, 461, 470, 471, 472, 473, 483, 486, 490, 491, 492, 493, 494, 500, 502, 503, 504, 507, 552, 553, 559], "gaussian": [513, 514, 528, 544, 545], "gaussianspatialmodel": 220, "gaussianspectralmodel": 221, "gaussiantemporalmodel": 222, "gener": [361, 367, 371, 376, 387, 388, 493, 514, 545], "generalist": 385, "generalizedgaussianspatialmodel": 223, "generalizedgaussiantemporalmodel": 224, "geom": 181, "geometri": [431, 444, 452, 453, 463, 464, 479, 480, 506, 508], "get": [364, 381, 393, 439, 440, 463, 484, 485, 486, 492, 507], "get_combined_significance_map": 134, "get_images_path": 326, "get_irfs_featur": 91, "get_random_st": 314, "get_rebinned_axi": 135, "get_wstat_gof_term": 283, "get_wstat_mu_bkg": 284, "github": 361, "given": 465, "global": 383, "glossari": 554, "good": 558, "gpl": 361, "group": 467, "gti": [82, 492], "guid": [363, 496], "guidelin": [362, 366, 367, 381], "h": 473, "halv": 451, "handl": [361, 370, 371, 372, 383, 387, 462, 559], "have": [369, 371, 376, 377, 385], "hawc": [443, 472], "hduindext": 83, "hduloc": 298, "healpix": 506, "help": 396, "helper": 373, "hess": 443, "hgp": 458, "hierarch": 467, "hierarchi": 388, "hierarchical_clust": 288, "high": [0, 5, 370, 377, 479, 494], "hli": 435, "how": [361, 362, 364, 381, 390, 463, 495], "hpxgeom": 182, "hpxmap": 183, "hpxndmap": [184, 507], "hstack_column": 331, "i": [361, 364, 366, 448], "idea": 371, "imag": [362, 367, 375, 380, 438, 444, 463, 475], "imageprofil": 122, "imageprofileestim": 123, "implement": [371, 372, 381, 387, 389, 466, 468], "import": [361, 450], "improv": [372, 384, 414, 423, 426, 427], "inbuilt": 461, "includ": [362, 468], "index": [463, 468, 492], "info": [11, 361], "inform": [387, 458, 468, 499], "input": [361, 388, 438], "inspect": 480, "instal": [381, 393, 394, 396], "instrument": [7, 443, 500], "integr": [13, 391, 430], "integrate_spectrum": 266, "interact": 383, "interest": 445, "interfac": [0, 370, 372, 377, 479, 494, 507], "interpol": [13, 361, 463], "interpolate_profil": 303, "interpolation_scal": 304, "interv": 453, "introduc": [372, 380, 382, 384, 385, 448], "introduct": [372, 375, 376, 378, 379, 381, 385, 387, 388, 430, 434, 436, 444, 455, 457, 458, 459, 462, 463, 470, 471, 475, 481, 483, 485, 486, 556], "inversecdfsampl": 312, "ipython": 397, "irf": [7, 147, 370, 388, 430, 459, 461, 470, 500], "irf_registri": 149, "irfmap": 148, "isothermalprofil": 22, "isotrop": 471, "issu": 396, "iter": 463, "j": 457, "jan": 401, "jfactori": 23, "joint": [442, 443, 491], "json": 387, "jul": 404, "june": [415, 426], "jupyt": [361, 397], "kernel": 461, "labelmapaxi": [185, 463], "lat": [443, 471], "law": [432, 522, 525, 526, 527, 533, 534, 535, 536, 537, 538, 539], "lazi": 373, "lazyfitsdata": 299, "lc": 452, "let": 447, "level": [0, 5, 367, 370, 377, 479, 480, 494], "li": 455, "licens": 361, "light": [376, 452, 453, 454, 550], "lightcurv": [376, 446, 451, 454, 458], "lightcurveestim": [124, 493], "lightcurvetemplatetemporalmodel": 225, "like": 446, "likelihood": 558, "limit": 371, "line": [11, 361, 555], "linear": 546, "lineartemporalmodel": 226, "link": 362, "list": [372, 373, 374, 375, 376, 377, 378, 446, 453, 458, 463, 464, 465, 466, 481, 492], "literatur": 436, "livetim": 462, "load": [373, 430, 432, 434, 436, 458, 465], "load_irf_dict_from_fil": [157, 500], "locat": 361, "log": [11, 361, 432, 529, 530], "logparabolanormspectralmodel": 227, "logparabolaspectralmodel": 228, "logspir": 34, "long": 387, "loop": [431, 462, 480], "lorimer2006": 35, "low": [367, 480], "lt": 386, "ma": 455, "mai": [403, 414], "maintain": [368, 387], "mainten": 370, "major": 390, "make": [361, 364, 390, 444, 447, 455, 480], "make_base_catalog_galact": 45, "make_catalog_random_positions_cub": 46, "make_catalog_random_positions_spher": 47, "make_concentric_annulus_sky_region": 322, "make_counts_rad_max": 172, "make_edisp_kernel_map": 173, "make_edisp_map": 174, "make_effective_livetime_map": 175, "make_map_background_irf": 176, "make_map_exposure_true_energi": 177, "make_observation_time_map": 178, "make_orthogonal_rectangle_sky_region": 323, "make_path": 327, "make_psf_map": 179, "make_theta_squared_t": 180, "maker": [8, 162, 382, 388, 431, 453, 462, 479, 480, 502, 503, 504], "maker_registri": 161, "mamba": 394, "manag": [370, 394], "manual": [464, 467], "map": [9, 186, 190, 367, 370, 371, 438, 439, 440, 443, 444, 450, 455, 457, 461, 463, 464, 465, 477, 481, 493, 506, 507, 508], "mapax": 187, "mapaxi": 188, "mapcoord": [189, 507], "mapdataset": [97, 373, 442, 446, 459, 472, 491], "mapdataseteventsampl": [98, 374], "mapdatasetmak": [163, 503], "mapdatasetmetadata": 99, "mapdatasetonoff": [100, 373], "mappanelplott": 348, "mar": 402, "march": 424, "mask": [375, 434, 435, 440, 459, 464, 479], "materi": 387, "matter": [457, 483], "measur": 556, "meet": 370, "messag": 361, "met": 559, "metadata": [387, 388], "method": [362, 373, 374, 389, 451, 463, 493, 507], "method_default": 306, "method_kwargs_default": 307, "meyercrabspectralmodel": 230, "miniconda": 394, "minor": 382, "mission": 559, "model": [10, 231, 233, 370, 372, 380, 383, 384, 388, 389, 431, 434, 435, 436, 439, 442, 443, 444, 446, 447, 452, 453, 454, 457, 458, 459, 460, 465, 466, 468, 470, 479, 480, 481, 485, 486, 487, 488, 489, 509, 511, 512, 513, 514, 515, 516, 517, 518, 519, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 542, 543, 544, 545, 546, 547, 548, 549, 550, 552, 556], "model_registri": 229, "modelbas": 232, "modif": 464, "modifi": [361, 463, 466], "modul": [4, 5, 8, 10, 13], "mooreprofil": 24, "morpholog": 445, "morphologi": 466, "motion_since_birth": 294, "motiv": 389, "mpl_plot_check": 339, "multi": 443, "multipl": [446, 465, 468, 491], "multiprocessing_manag": 310, "n_jobs_default": 308, "naima": 531, "naimaspectralmodel": 234, "name": [361, 372, 500], "nebula": 488, "new": [361, 372, 376, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 414, 415, 417, 418, 419, 420, 421, 422, 423, 426, 427, 453], "next": [432, 434, 435, 438, 444, 452, 470, 472, 473, 479, 481], "nfwprofil": 25, "night": 452, "non": [361, 463, 508], "norm": [384, 466, 515, 527, 530, 532, 535], "norm_bounds_cython": 285, "normal": [315, 479], "notat": 557, "note": [361, 399, 556], "notebook": [11, 361, 369, 397], "nov": [409, 410, 411, 412, 418, 422], "novemb": 423, "now": 376, "nuisanc": 389, "number": [361, 386, 500], "numpi": 386, "o": 448, "object": [361, 362, 371, 383, 439, 440, 446, 447, 458, 467], "observ": [3, 84, 87, 370, 371, 434, 435, 444, 446, 447, 452, 453, 462, 467, 479, 480], "observationeventsampl": 103, "observationfilt": 85, "observationseventssampl": 88, "observationt": 86, "observatory_loc": 92, "obtain": [430, 445, 454, 467], "off": [432, 434, 437, 443], "offset": [497, 498, 499, 501], "ogipdatasetread": 101, "ogipdatasetwrit": 102, "old": 391, "onto": 463, "open": 455, "oper": [463, 464], "option": [360, 378, 460], "org": 391, "organ": [367, 376], "origin": [361, 364], "other": [361, 362, 371, 391, 394, 483], "outlin": 389, "outlook": [373, 374, 375, 377, 378, 380, 381, 382, 385], "output": 361, "over": 455, "overview": [381, 393, 445, 470, 502, 504, 505], "overwrit": 361, "own": 555, "packag": [0, 1, 2, 3, 4, 5, 7, 8, 9, 10, 12, 13, 14, 380, 382, 391, 394, 414, 475, 483, 484, 553], "paczynski1990": 36, "paczynski1990veloc": 37, "panel": 560, "paper": 370, "parabola": [432, 529, 530], "parallel": [13, 373], "paramet": [201, 202, 372, 384, 389, 435, 445, 460, 465, 466, 479], "parameterestim": 125, "parametr": 372, "parametricpsf": 154, "pdf": 316, "perform": [374, 431, 470, 480], "person": 387, "perspect": 368, "phase": [455, 549], "phasebackgroundmak": 164, "phasogram": 455, "piecewis": [515, 532], "piecewisenormspatialmodel": 235, "piecewisenormspectralmodel": 236, "pig": [365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389], "pip": 394, "pixel": [361, 375, 464], "plan": 368, "plot": [14, 361, 434, 435, 438, 444, 445, 448, 463, 465, 480, 508, 511, 512, 513, 514, 515, 516, 517, 518, 519, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 542, 543, 544, 545, 546, 547, 548, 560], "plot_contour_lin": 353, "plot_distribut": 354, "plot_heatmap": 355, "plot_map_rgb": 356, "plot_npred_sign": 357, "plot_spectrum_datasets_off_region": 358, "plot_theta_squared_t": 359, "png": 362, "point": [389, 430, 432, 434, 435, 443, 444, 446, 451, 458, 470, 479, 480, 481, 493, 501, 516], "pointinginfo": 89, "pointingmod": 90, "pointspatialmodel": 237, "poisson": 556, "polar": 295, "polici": 387, "pool_kwargs_default": 309, "popul": [1, 485], "posit": [389, 468, 499], "possibl": 387, "post": 390, "power": [432, 522, 525, 526, 527, 533, 534, 535, 536, 537, 538, 539], "powerlaw": [432, 547], "powerlaw2spectralmodel": 238, "powerlawnormspectralmodel": 239, "powerlawspectralmodel": 240, "powerlawtemporalmodel": 241, "precis": 374, "predict": 491, "prepar": [376, 386, 430, 431, 447, 480], "prerequisit": [431, 432, 434, 435, 436, 437, 439, 443, 445, 446, 447, 448, 450, 451, 452, 453, 454, 460, 464, 465, 468, 479, 480], "pretti": 458, "primaryflux": 26, "print": 458, "prior": [389, 468], "priorparamet": [203, 204], "produc": 472, "product": [457, 461], "profil": [448, 457, 558], "project": [370, 391], "propag": 388, "propos": [369, 371, 372, 373, 374, 375, 376, 377, 379, 380, 381, 382, 383, 384, 385, 388, 431, 432, 435, 437, 438, 439, 440, 443, 446, 447, 448, 450, 451, 452, 453, 454, 460, 464, 465, 467, 479, 480], "psf": [461, 471, 501], "psf3d": 150, "psf_tabl": 501, "psfkernel": 151, "psfking": 152, "psfmap": [153, 461, 500], "public": 387, "pull": [361, 364, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427], "pulsar": [51, 455, 487, 488], "purpos": 366, "pwn": 50, "pydant": 388, "python": [361, 362, 368, 386, 397], "qualiti": [370, 391, 434, 436, 442, 460], "quantiti": [467, 493], "radial": 498, "radial_distribut": 48, "radmax2d": 155, "rai": [376, 457], "random": [13, 361], "rang": [462, 503], "read": [438, 443, 447, 448, 463, 464, 465, 508], "read_hermes_cub": [267, 269], "read_yaml": 328, "recommend": [393, 395], "reconstruct": 498, "recopsfmap": 156, "recursive_merge_dict": 329, "reduc": [4, 439, 440, 459, 479, 480], "reduct": [8, 370, 376, 431, 434, 435, 436, 442, 452, 453, 462, 472, 479, 480, 503, 555], "refer": [6, 381, 554, 555, 556], "reflect": [462, 504], "reflectedregionsbackgroundmak": [165, 504], "reflectedregionsfind": 166, "region": [13, 372, 375, 430, 431, 434, 436, 462, 464, 465, 504, 508], "region_to_fram": 324, "regiongeom": [191, 508], "regionndmap": [192, 507, 508], "regions_to_compound_region": 325, "regionsfind": 167, "relat": 508, "releas": [361, 370, 386, 387, 390, 391, 399], "remark": 366, "remnant": 489, "remov": [361, 465], "renam": 361, "repositori": 391, "repr": 361, "represent": [384, 511, 512, 513, 514, 515, 516, 517, 518, 519, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 542, 543, 544, 545, 546, 547, 548, 549, 550], "request": [361, 364, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427], "requir": [360, 361, 378, 388], "requires_data": 340, "requires_depend": 341, "resampl": 459, "resample_energy_edg": 136, "residu": [434, 436, 442, 480], "resolv": [382, 455], "respons": [7, 500], "restructur": 381, "result": [376, 385, 430, 431, 435, 438, 445, 448, 452, 558], "return": [361, 362], "review": 366, "ring": [440, 462, 505], "ringbackgroundmak": 168, "rmf": 499, "road": 371, "roadmap": 370, "rotat": 375, "rst": 362, "run": [11, 364, 434, 435, 436, 445, 447, 448, 452, 479, 555], "run_multiprocess": 311, "safe": [462, 503], "safemaskmak": 169, "sampl": [374, 446, 447], "sample_powerlaw": 317, "sample_spher": 318, "sample_sphere_dist": 319, "sample_tim": 320, "sampler": 447, "save": [435, 479, 480], "scale": 559, "scale_plot_flux": 268, "scaledregulargridinterpol": 302, "scalespectralmodel": 244, "scenario": 371, "schedul": 386, "scheme": [372, 387], "script": [11, 13, 361, 397, 475, 477], "section": 381, "select": [431, 435, 444, 452, 453, 458, 465, 479, 480, 492], "select_nested_model": 270, "sensit": 430, "sensitivityestim": 126, "sep": [405, 421], "serial": [373, 388, 443], "serialis": [389, 435, 448, 461, 465, 466, 471, 491], "seril": 372, "set": [364, 435, 463, 479], "setup": [369, 391, 393, 395, 396, 430, 431, 432, 434, 435, 436, 437, 438, 439, 440, 442, 443, 444, 445, 446, 447, 448, 451, 452, 453, 454, 455, 457, 458, 459, 460, 462, 463, 464, 465, 466, 468, 470, 471, 472, 473, 479, 480, 481], "sever": 361, "share": 466, "shell": 517, "shell2": 518, "shell2spatialmodel": 245, "shellspatialmodel": 246, "shorter": 384, "should": 361, "show": [444, 445, 467], "signal": 445, "signific": [431, 438, 440, 464, 557], "simplepulsar": 54, "simplifi": 384, "simul": [370, 373, 436, 437, 446, 447, 450, 454], "sine": 548, "sinetemporalmodel": 247, "singl": [362, 437], "size": 508, "skip": 361, "sky": [9, 372, 375, 444, 446, 464, 499, 507], "sky_to_fov": 296, "skycoord": 507, "skymodel": [248, 466], "slice": 463, "small": 364, "smooth": [438, 536], "smoothbrokenpowerlawspectralmodel": 249, "snr": 52, "snrtruelovemcke": 53, "solut": 388, "some": [361, 371, 464], "sourc": [1, 2, 430, 431, 434, 438, 444, 445, 446, 447, 454, 458, 464, 468, 470, 481, 485, 486, 487, 488, 490], "sourcecatalog": 56, "sourcecatalog1lhaaso": 57, "sourcecatalog2fhl": 58, "sourcecatalog2hwc": 59, "sourcecatalog3fgl": 60, "sourcecatalog3fhl": [61, 490], "sourcecatalog3hwc": 62, "sourcecatalog4fgl": 63, "sourcecataloggammacat": [64, 490], "sourcecataloghgp": 65, "sourcecataloglargescalehgp": 66, "sourcecatalogobject": 67, "sourcecatalogobject1lhaaso": 68, "sourcecatalogobject2fhl": 69, "sourcecatalogobject2hwc": 70, "sourcecatalogobject3fgl": 71, "sourcecatalogobject3fhl": 72, "sourcecatalogobject3hwc": 73, "sourcecatalogobject4fgl": 74, "sourcecatalogobjectgammacat": 75, "sourcecatalogobjecthgp": 76, "sourcecatalogobjecthgpscompon": 77, "sourceirfmodel": 372, "sourcemodel": 372, "spatial": [372, 384, 444, 457, 463, 466, 485, 508, 509, 511, 512, 513, 514, 515, 516, 517, 518, 519], "spatial_model_registri": 242, "spatialirfmodel": 372, "spatialmodel": 250, "special": 558, "specif": [372, 381, 458], "spectra": 457, "spectral": [384, 389, 431, 432, 434, 435, 436, 443, 444, 457, 466, 475, 481, 509, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 540], "spectral_model_registri": 243, "spectralirfmodel": 372, "spectralmodel": 251, "spectrum": [434, 436, 437, 444, 455, 462, 480], "spectrumdataset": [104, 373, 459], "spectrumdatasetmak": [170, 503], "spectrumdatasetonoff": [105, 373, 491], "sphinx": [361, 362], "spiral": 485, "split_dataset": [109, 111], "spread": [470, 501], "squar": [445, 473], "stack": [434, 440, 442, 491], "standard_scal": 289, "standardise_unit": 346, "start": [381, 393, 484, 485, 486, 492, 507], "stat": 12, "stat_contour": 460, "stat_profile_ul_scipi": 271, "stat_surfac": 460, "statist": [12, 434, 464, 556, 557], "statu": [366, 371, 380, 386], "step": [435, 470, 472, 473, 553], "store": [376, 435, 499], "str": 361, "structur": [380, 382, 414, 481, 553], "structure_funct": 286, "studi": 376, "style": 367, "sub": [463, 484], "subclass": 389, "subpackag": 367, "subset": 458, "suggest": 387, "summari": [400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 442, 471], "super": [537, 538, 539], "superexpcutoffpowerlaw3fglspectralmodel": 252, "superexpcutoffpowerlaw4fgldr3spectralmodel": 253, "superexpcutoffpowerlaw4fglspectralmodel": 254, "supernova": 489, "support": [361, 368, 386, 387, 389, 461, 491], "survei": [477, 560], "symmetr": 498, "systemat": 389, "t": [438, 557], "tabl": [13, 445, 458, 492], "table_row_to_dict": 332, "table_standardise_units_copi": 333, "table_standardise_units_inplac": 334, "tag": 384, "target": 434, "task": [372, 373, 374, 375, 376, 377, 378], "templat": [446, 519, 540], "templatendspatialmodel": 256, "templatendspectralmodel": 257, "templatenpredmodel": 258, "templatephasecurvetemporalmodel": 259, "templatespatialmodel": 260, "templatespectralmodel": 261, "tempor": [447, 454, 466, 509, 542, 543, 544, 545, 546, 547, 548, 549, 550], "temporal_model_registri": 255, "temporalmodel": 262, "term": 387, "terminologi": 371, "test": [13, 361, 364, 445, 455], "text": 361, "theta": 473, "thi": 364, "thumbnail": 362, "time": [13, 370, 376, 429, 433, 441, 446, 449, 451, 453, 454, 456, 469, 474, 475, 476, 478, 482, 510, 520, 541, 551, 559], "time_ref_from_dict": 343, "time_ref_to_dict": 344, "time_relative_to_ref": 345, "timemapaxi": [193, 463], "timmerkonig_lightcurve_simul": 273, "tool": [11, 361, 555], "tooltip": 362, "touch": 364, "trapz_loglog": 301, "troubleshoot": [396, 555], "true": [497, 499, 501], "tsmapestim": 127, "tutori": [362, 369, 381, 393, 445, 470, 475], "two": 465, "type": [361, 388, 491], "uncertainti": 379, "underli": 508, "unfold": 389, "unfreez": 465, "unif": 385, "unifi": [372, 385], "unit": [13, 361], "unit_from_fits_image_hdu": 347, "unix": 361, "unreleas": 428, "up": [364, 380, 382], "upsampl": 508, "us": [361, 371, 389, 394, 397, 435, 445, 446, 452, 459, 460, 461, 463, 479, 480, 483, 486, 490, 491, 492, 493, 494, 500, 502, 503, 504, 507, 526, 537, 538, 539, 552], "user": [368, 496], "util": [4, 5, 8, 10, 13, 380, 553, 557, 559], "valid": 388, "valleespir": 38, "valu": [361, 389, 445, 463, 468], "vari": 454, "variabl": [1, 2, 3, 4, 5, 7, 8, 10, 13, 446, 451], "varianc": 451, "variou": 467, "veloc": 485, "velocity_distribut": 49, "velocity_glon_glat": 297, "venv": 392, "version": [361, 386, 390, 399, 450], "virtual": 392, "visual": [14, 382, 463, 508, 560], "volum": 508, "warn": 361, "wc": [463, 508], "wcsgeom": 194, "wcsmap": 195, "wcsndmap": [196, 507], "we": [369, 376, 377, 385, 472], "webpag": 391, "what": [361, 364, 366, 369, 371, 376, 377, 385, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 414, 415, 417, 418, 419, 420, 421, 422, 432, 434, 435, 438, 444, 452, 479, 481], "where": 361, "which": 361, "wind": 488, "wise": 452, "without": 468, "wobbleregionsfind": 171, "work": 492, "workflow": 553, "write": [361, 366, 435, 447, 463, 464, 492, 508, 555], "write_yaml": 330, "wstat": [287, 556, 557, 558], "wstatcountsstatist": 274, "yaml": [384, 435, 479, 511, 512, 513, 514, 515, 516, 517, 518, 519, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 542, 543, 544, 545, 546, 547, 548, 549, 550], "your": [396, 435, 555], "yusifovkucuk2004": 39, "yusifovkucuk2004b": 40, "zhaoprofil": 27}})